
af4f6308343a0141f8f48d21b5f7e1946c2983f69841d03399628d558ae03c46.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    QWORD PTR [rsp+0x8],rbx
   140001015:	push   rdi
   140001016:	sub    rsp,0x20
   14000101a:	mov    r10,QWORD PTR [rsp+0x60]
   14000101f:	xor    edi,edi
   140001021:	test   r10,r10
   140001024:	je     0x14000111a
   14000102a:	test   edx,edx
   14000102c:	je     0x1400010d7
   140001032:	sub    edx,0x1
   140001035:	jne    0x14000111a
   14000103b:	mov    r11d,edi
   14000103e:	mov    rax,QWORD PTR [rsp+0x50]
   140001043:	mov    QWORD PTR [r10+0x10],r9
   140001047:	lea    r9d,[rdi+0x1]
   14000104b:	mov    DWORD PTR [r10+0x24],r9d
   14000104f:	mov    BYTE PTR [r10+0x28],r8b
   140001053:	mov    QWORD PTR [r10+0x18],rax
   140001057:	cmp    di,WORD PTR [r10+0x2a]
   14000105c:	jae    0x14000111a
   140001062:	mov    rax,QWORD PTR [r10+0x38]
   140001066:	mov    dl,BYTE PTR [r10+0x28]
   14000106a:	mov    ebx,r11d
   14000106d:	mov    rcx,QWORD PTR [rax+rbx*8]
   140001071:	mov    rax,QWORD PTR [r10+0x40]
   140001075:	cmp    BYTE PTR [rbx+rax*1],dl
   140001078:	jbe    0x14000107e
   14000107a:	test   dl,dl
   14000107c:	jne    0x140001096
   14000107e:	test   rcx,rcx
   140001081:	je     0x1400010b1
   140001083:	test   QWORD PTR [r10+0x10],rcx
   140001087:	je     0x140001096
   140001089:	mov    rax,QWORD PTR [r10+0x18]
   14000108d:	and    rax,rcx
   140001090:	cmp    rax,QWORD PTR [r10+0x18]
   140001094:	je     0x1400010b1
   140001096:	mov    r8,QWORD PTR [r10+0x30]
   14000109a:	mov    ecx,r11d
   14000109d:	and    ecx,0x1f
   1400010a0:	shr    rbx,0x5
   1400010a4:	mov    edx,r9d
   1400010a7:	shl    edx,cl
   1400010a9:	not    edx
   1400010ab:	and    DWORD PTR [r8+rbx*4],edx
   1400010af:	jmp    0x1400010c8
   1400010b1:	mov    r8,QWORD PTR [r10+0x30]
   1400010b5:	mov    ecx,r11d
   1400010b8:	and    ecx,0x1f
   1400010bb:	shr    rbx,0x5
   1400010bf:	mov    edx,r9d
   1400010c2:	shl    edx,cl
   1400010c4:	or     DWORD PTR [r8+rbx*4],edx
   1400010c8:	movzx  eax,WORD PTR [r10+0x2a]
   1400010cd:	add    r11d,r9d
   1400010d0:	cmp    r11d,eax
   1400010d3:	jb     0x140001062
   1400010d5:	jmp    0x14000111a
   1400010d7:	mov    DWORD PTR [r10+0x24],edi
   1400010db:	mov    BYTE PTR [r10+0x28],dil
   1400010df:	mov    QWORD PTR [r10+0x10],rdi
   1400010e3:	mov    QWORD PTR [r10+0x18],rdi
   1400010e7:	cmp    WORD PTR [r10+0x2a],di
   1400010ec:	jbe    0x14000111a
   1400010ee:	movzx  eax,WORD PTR [r10+0x2a]
   1400010f3:	mov    r9d,0x1
   1400010f9:	mov    rcx,QWORD PTR [r10+0x30]
   1400010fd:	sub    eax,r9d
   140001100:	cdq    
   140001101:	and    edx,0x1f
   140001104:	add    eax,edx
   140001106:	xor    edx,edx
   140001108:	sar    eax,0x5
   14000110b:	add    eax,r9d
   14000110e:	movsxd r8,eax
   140001111:	shl    r8,0x2
   140001115:	call   0x140002a96
   14000111a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000111f:	add    rsp,0x20
   140001123:	pop    rdi
   140001124:	ret    
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	cmp    QWORD PTR [rip+0x44cc],0x0        # 0x140005600
   140001134:	je     0x140001139
   140001136:	xor    eax,eax
   140001138:	ret    
   140001139:	lea    r9,[rip+0x44c0]        # 0x140005600
   140001140:	lea    r8,[rip+0x3ec9]        # 0x140005010
   140001147:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x140001010
   14000114e:	lea    rcx,[rip+0x27db]        # 0x140003930
   140001155:	rex.W jmp QWORD PTR [rip+0x1ebc]        # 0x140003018
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	int3   
   140001161:	int3   
   140001162:	int3   
   140001163:	int3   
   140001164:	sub    rsp,0x28
   140001168:	mov    rcx,QWORD PTR [rip+0x4491]        # 0x140005600
   14000116f:	test   rcx,rcx
   140001172:	jne    0x140001178
   140001174:	xor    eax,eax
   140001176:	jmp    0x140001186
   140001178:	call   QWORD PTR [rip+0x1e8a]        # 0x140003008
   14000117e:	and    QWORD PTR [rip+0x447a],0x0        # 0x140005600
   140001186:	add    rsp,0x28
   14000118a:	ret    
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	int3   
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	mov    rcx,QWORD PTR [rip+0x4465]        # 0x140005600
   14000119b:	xor    r9d,r9d
   14000119e:	xor    r8d,r8d
   1400011a1:	rex.W jmp QWORD PTR [rip+0x1e80]        # 0x140003028
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400011ba:	push   rsi
   1400011bb:	push   rdi
   1400011bc:	push   r14
   1400011be:	sub    rsp,0x60
   1400011c2:	movsxd r14,edx
   1400011c5:	mov    rbp,rcx
   1400011c8:	xor    edx,edx
   1400011ca:	lea    rcx,[rip+0x2657]        # 0x140003828
   1400011d1:	mov    ebx,0x80004005
   1400011d6:	call   QWORD PTR [rip+0x1fd4]        # 0x1400031b0
   1400011dc:	mov    rsi,rax
   1400011df:	test   rax,rax
   1400011e2:	je     0x14000126f
   1400011e8:	mov    edi,0x1
   1400011ed:	mov    rcx,rbp
   1400011f0:	mov    QWORD PTR [rsp+0x40],rdi
   1400011f5:	call   QWORD PTR [rip+0x1eb5]        # 0x1400030b0
   1400011fb:	mov    r8,r14
   1400011fe:	mov    QWORD PTR [rsp+0x50],rbp
   140001203:	lea    r9,[rsp+0x40]
   140001208:	mov    rcx,rsi
   14000120b:	lea    edx,[rdi+0x49]
   14000120e:	lea    eax,[rax*2+0x2]
   140001215:	mov    DWORD PTR [rsp+0x48],eax
   140001219:	lea    rax,[rsp+0x90]
   140001221:	mov    QWORD PTR [rsp+0x30],rax
   140001226:	mov    DWORD PTR [rsp+0x28],0x1d4c0
   14000122e:	mov    DWORD PTR [rsp+0x20],0x3
   140001236:	call   QWORD PTR [rip+0x1fb4]        # 0x1400031f0
   14000123c:	test   rax,rax
   14000123f:	jne    0x140001262
   140001241:	call   QWORD PTR [rip+0x1e81]        # 0x1400030c8
   140001247:	test   eax,eax
   140001249:	jne    0x140001252
   14000124b:	mov    ebx,0x80004004
   140001250:	jmp    0x14000126f
   140001252:	movzx  ebx,ax
   140001255:	or     ebx,0x80070000
   14000125b:	test   eax,eax
   14000125d:	cmovle ebx,eax
   140001260:	jmp    0x14000126f
   140001262:	sub    edi,DWORD PTR [rsp+0x90]
   140001269:	neg    edi
   14000126b:	sbb    ecx,ecx
   14000126d:	and    ebx,ecx
   14000126f:	lea    r11,[rsp+0x60]
   140001274:	mov    eax,ebx
   140001276:	mov    rbx,QWORD PTR [r11+0x20]
   14000127a:	mov    rbp,QWORD PTR [r11+0x28]
   14000127e:	mov    rsp,r11
   140001281:	pop    r14
   140001283:	pop    rdi
   140001284:	pop    rsi
   140001285:	ret    
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	xor    r11d,r11d
   14000128f:	mov    r10,rdx
   140001292:	mov    r8,rcx
   140001295:	cmp    WORD PTR [rdx],r11w
   140001299:	jne    0x14000129f
   14000129b:	mov    rax,rcx
   14000129e:	ret    
   14000129f:	movzx  eax,WORD PTR [rcx]
   1400012a2:	test   ax,ax
   1400012a5:	je     0x1400012e9
   1400012a7:	mov    r9,rcx
   1400012aa:	sub    r9,rdx
   1400012ad:	mov    rdx,r10
   1400012b0:	test   ax,ax
   1400012b3:	je     0x1400012d2
   1400012b5:	cmp    WORD PTR [rdx],r11w
   1400012b9:	je     0x1400012ec
   1400012bb:	movzx  ecx,WORD PTR [r9+rdx*1]
   1400012c0:	movzx  eax,WORD PTR [rdx]
   1400012c3:	cmp    ecx,eax
   1400012c5:	jne    0x1400012d2
   1400012c7:	add    rdx,0x2
   1400012cb:	cmp    WORD PTR [r9+rdx*1],r11w
   1400012d0:	jne    0x1400012b5
   1400012d2:	cmp    WORD PTR [rdx],r11w
   1400012d6:	je     0x1400012ec
   1400012d8:	add    r8,0x2
   1400012dc:	add    r9,0x2
   1400012e0:	movzx  eax,WORD PTR [r8]
   1400012e4:	test   ax,ax
   1400012e7:	jne    0x1400012ad
   1400012e9:	xor    eax,eax
   1400012eb:	ret    
   1400012ec:	mov    rax,r8
   1400012ef:	ret    
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	rex push rbp
   1400012fa:	push   rbx
   1400012fb:	push   rdi
   1400012fc:	mov    rbp,rsp
   1400012ff:	sub    rsp,0x30
   140001303:	xor    edi,edi
   140001305:	mov    bl,0x1
   140001307:	mov    QWORD PTR [rbp+0x38],rdi
   14000130b:	mov    DWORD PTR [rbp+0x20],edi
   14000130e:	mov    DWORD PTR [rbp+0x28],edi
   140001311:	mov    DWORD PTR [rbp+0x30],edi
   140001314:	test   rcx,rcx
   140001317:	je     0x140001331
   140001319:	lea    rdx,[rip+0x20a0]        # 0x1400033c0
   140001320:	call   0x14000128c
   140001325:	test   rax,rax
   140001328:	je     0x140001331
   14000132a:	xor    al,al
   14000132c:	jmp    0x14000145e
   140001331:	lea    rax,[rbp+0x38]
   140001335:	mov    r9d,0x3
   14000133b:	xor    r8d,r8d
   14000133e:	mov    QWORD PTR [rsp+0x20],rax
   140001343:	lea    rdx,[rip+0x2376]        # 0x1400036c0
   14000134a:	mov    rcx,0xffffffff80000001
   140001351:	call   QWORD PTR [rip+0x1cb9]        # 0x140003010
   140001357:	test   eax,eax
   140001359:	jne    0x1400013a2
   14000135b:	mov    rcx,QWORD PTR [rbp+0x38]
   14000135f:	lea    rax,[rbp+0x20]
   140001363:	mov    QWORD PTR [rsp+0x28],rax
   140001368:	lea    r9,[rbp+0x28]
   14000136c:	lea    rax,[rbp+0x30]
   140001370:	mov    DWORD PTR [rbp+0x20],0x4
   140001377:	xor    r8d,r8d
   14000137a:	mov    QWORD PTR [rsp+0x20],rax
   14000137f:	lea    rdx,[rip+0x24ba]        # 0x140003840
   140001386:	call   QWORD PTR [rip+0x1c74]        # 0x140003000
   14000138c:	test   eax,eax
   14000138e:	jne    0x1400013cf
   140001390:	cmp    DWORD PTR [rbp+0x28],0x4
   140001394:	jne    0x1400013cf
   140001396:	cmp    DWORD PTR [rbp+0x30],0x1
   14000139a:	movzx  ebx,bl
   14000139d:	cmove  ebx,edi
   1400013a0:	jmp    0x1400013cf
   1400013a2:	lea    rax,[rbp+0x38]
   1400013a6:	mov    r9d,0x1
   1400013ac:	xor    r8d,r8d
   1400013af:	mov    QWORD PTR [rsp+0x20],rax
   1400013b4:	lea    rdx,[rip+0x2305]        # 0x1400036c0
   1400013bb:	mov    rcx,0xffffffff80000001
   1400013c2:	call   QWORD PTR [rip+0x1c48]        # 0x140003010
   1400013c8:	test   eax,eax
   1400013ca:	jne    0x1400013e1
   1400013cc:	mov    bl,dil
   1400013cf:	mov    rcx,QWORD PTR [rbp+0x38]
   1400013d3:	call   QWORD PTR [rip+0x1c47]        # 0x140003020
   1400013d9:	mov    QWORD PTR [rbp+0x38],rdi
   1400013dd:	test   bl,bl
   1400013df:	je     0x14000145c
   1400013e1:	lea    rax,[rbp+0x38]
   1400013e5:	mov    r9d,0x20019
   1400013eb:	xor    r8d,r8d
   1400013ee:	mov    QWORD PTR [rsp+0x20],rax
   1400013f3:	lea    rdx,[rip+0x2486]        # 0x140003880
   1400013fa:	mov    rcx,0xffffffff80000002
   140001401:	call   QWORD PTR [rip+0x1c09]        # 0x140003010
   140001407:	test   eax,eax
   140001409:	jne    0x14000145c
   14000140b:	mov    rcx,QWORD PTR [rbp+0x38]
   14000140f:	lea    rax,[rbp+0x20]
   140001413:	mov    QWORD PTR [rsp+0x28],rax
   140001418:	lea    r9,[rbp+0x28]
   14000141c:	lea    rax,[rbp+0x30]
   140001420:	mov    DWORD PTR [rbp+0x20],0x4
   140001427:	xor    r8d,r8d
   14000142a:	mov    QWORD PTR [rsp+0x20],rax
   14000142f:	lea    rdx,[rip+0x24ca]        # 0x140003900
   140001436:	call   QWORD PTR [rip+0x1bc4]        # 0x140003000
   14000143c:	test   eax,eax
   14000143e:	jne    0x140001452
   140001440:	cmp    DWORD PTR [rbp+0x28],0x4
   140001444:	jne    0x140001452
   140001446:	cmp    DWORD PTR [rbp+0x30],0x1
   14000144a:	movzx  eax,bl
   14000144d:	cmove  eax,edi
   140001450:	mov    bl,al
   140001452:	mov    rcx,QWORD PTR [rbp+0x38]
   140001456:	call   QWORD PTR [rip+0x1bc4]        # 0x140003020
   14000145c:	mov    al,bl
   14000145e:	add    rsp,0x30
   140001462:	pop    rdi
   140001463:	pop    rbx
   140001464:	pop    rbp
   140001465:	ret    
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	rex push rbp
   14000146e:	push   rbx
   14000146f:	mov    rbp,rsp
   140001472:	sub    rsp,0x38
   140001476:	and    QWORD PTR [rbp+0x30],0x0
   14000147b:	lea    rax,[rbp+0x30]
   14000147f:	and    DWORD PTR [rbp+0x18],0x0
   140001483:	lea    rdx,[rip+0x2236]        # 0x1400036c0
   14000148a:	and    DWORD PTR [rbp+0x20],0x0
   14000148e:	mov    ebx,0x1
   140001493:	and    DWORD PTR [rbp+0x28],0x0
   140001497:	mov    r9d,ebx
   14000149a:	xor    r8d,r8d
   14000149d:	mov    QWORD PTR [rsp+0x20],rax
   1400014a2:	mov    rcx,0xffffffff80000001
   1400014a9:	call   QWORD PTR [rip+0x1b61]        # 0x140003010
   1400014af:	test   eax,eax
   1400014b1:	jne    0x140001537
   1400014b7:	mov    rcx,QWORD PTR [rbp+0x30]
   1400014bb:	lea    rax,[rbp+0x18]
   1400014bf:	mov    QWORD PTR [rsp+0x28],rax
   1400014c4:	lea    r9,[rbp+0x20]
   1400014c8:	lea    rax,[rbp+0x28]
   1400014cc:	mov    DWORD PTR [rbp+0x18],0x4
   1400014d3:	xor    r8d,r8d
   1400014d6:	mov    QWORD PTR [rsp+0x20],rax
   1400014db:	lea    rdx,[rip+0x2316]        # 0x1400037f8
   1400014e2:	call   QWORD PTR [rip+0x1b18]        # 0x140003000
   1400014e8:	test   eax,eax
   1400014ea:	jne    0x1400014f8
   1400014ec:	cmp    DWORD PTR [rbp+0x20],0x4
   1400014f0:	jne    0x1400014f8
   1400014f2:	cmp    DWORD PTR [rbp+0x28],ebx
   1400014f5:	setne  bl
   1400014f8:	mov    rcx,QWORD PTR [rbp+0x30]
   1400014fc:	call   QWORD PTR [rip+0x1b1e]        # 0x140003020
   140001502:	and    QWORD PTR [rbp+0x30],0x0
   140001507:	test   bl,bl
   140001509:	je     0x140001537
   14000150b:	lea    rax,[rip+0x1fee]        # 0x140003500
   140001512:	mov    DWORD PTR [rsp+0x28],0xa
   14000151a:	lea    r9,[rip+0x2177]        # 0x140003698
   140001521:	mov    QWORD PTR [rsp+0x20],rax
   140001526:	lea    r8,[rip+0x2003]        # 0x140003530
   14000152d:	xor    edx,edx
   14000152f:	xor    ecx,ecx
   140001531:	call   QWORD PTR [rip+0x5ac9]        # 0x140007000
   140001537:	add    rsp,0x38
   14000153b:	pop    rbx
   14000153c:	pop    rbp
   14000153d:	ret    
   14000153e:	int3   
   14000153f:	int3   
   140001540:	int3   
   140001541:	int3   
   140001542:	int3   
   140001543:	int3   
   140001544:	mov    QWORD PTR [rsp+0x10],rbx
   140001549:	push   rdi
   14000154a:	sub    rsp,0x60
   14000154e:	mov    rax,QWORD PTR [rip+0x3aab]        # 0x140005000
   140001555:	xor    rax,rsp
   140001558:	mov    QWORD PTR [rsp+0x58],rax
   14000155d:	mov    rbx,rcx
   140001560:	jmp    0x140001568
   140001562:	mov    rbx,rax
   140001565:	mov    rcx,rax
   140001568:	mov    edx,0x4
   14000156d:	call   QWORD PTR [rip+0x1c65]        # 0x1400031d8
   140001573:	test   rax,rax
   140001576:	jne    0x140001562
   140001578:	test   rbx,rbx
   14000157b:	je     0x140001676
   140001581:	mov    rcx,rbx
   140001584:	call   QWORD PTR [rip+0x1c56]        # 0x1400031e0
   14000158a:	test   eax,eax
   14000158c:	jne    0x140001652
   140001592:	lea    rdx,[rsp+0x30]
   140001597:	mov    rcx,rbx
   14000159a:	call   QWORD PTR [rip+0x1c30]        # 0x1400031d0
   1400015a0:	call   QWORD PTR [rip+0x1bfa]        # 0x1400031a0
   1400015a6:	mov    rcx,rax
   1400015a9:	mov    edx,0x5
   1400015ae:	call   QWORD PTR [rip+0x1c24]        # 0x1400031d8
   1400015b4:	mov    rdi,rax
   1400015b7:	test   rax,rax
   1400015ba:	je     0x140001652
   1400015c0:	lea    rdx,[rsp+0x34]
   1400015c5:	mov    rcx,rax
   1400015c8:	call   QWORD PTR [rip+0x1c02]        # 0x1400031d0
   1400015ce:	mov    ecx,DWORD PTR [rsp+0x34]
   1400015d2:	cmp    DWORD PTR [rsp+0x30],ecx
   1400015d6:	jne    0x140001642
   1400015d8:	mov    rcx,rdi
   1400015db:	call   QWORD PTR [rip+0x1bd7]        # 0x1400031b8
   1400015e1:	test   rax,rax
   1400015e4:	jne    0x140001642
   1400015e6:	lea    edx,[rax+0x4]
   1400015e9:	mov    rcx,rdi
   1400015ec:	call   QWORD PTR [rip+0x1be6]        # 0x1400031d8
   1400015f2:	test   rax,rax
   1400015f5:	jne    0x140001642
   1400015f7:	cmp    rdi,rbx
   1400015fa:	je     0x140001642
   1400015fc:	lea    r8d,[rax+0xf]
   140001600:	mov    QWORD PTR [rsp+0x38],rax
   140001605:	lea    rdx,[rsp+0x38]
   14000160a:	mov    QWORD PTR [rsp+0x40],rax
   14000160f:	mov    rcx,rdi
   140001612:	call   QWORD PTR [rip+0x1b90]        # 0x1400031a8
   140001618:	test   eax,eax
   14000161a:	je     0x140001642
   14000161c:	or     r9d,0xffffffff
   140001620:	mov    DWORD PTR [rsp+0x20],0x1
   140001628:	or     edx,r9d
   14000162b:	lea    r8,[rsp+0x38]
   140001630:	lea    rcx,[rip+0x1e31]        # 0x140003468
   140001637:	call   QWORD PTR [rip+0x1a63]        # 0x1400030a0
   14000163d:	cmp    eax,0x2
   140001640:	je     0x14000164f
   140001642:	mov    edx,0x2
   140001647:	mov    rcx,rdi
   14000164a:	jmp    0x1400015ae
   14000164f:	mov    rbx,rdi
   140001652:	mov    rcx,rbx
   140001655:	call   QWORD PTR [rip+0x1b65]        # 0x1400031c0
   14000165b:	mov    rcx,rbx
   14000165e:	call   QWORD PTR [rip+0x1b64]        # 0x1400031c8
   140001664:	test   eax,eax
   140001666:	je     0x140001676
   140001668:	mov    edx,0x9
   14000166d:	mov    rcx,rbx
   140001670:	call   QWORD PTR [rip+0x1b72]        # 0x1400031e8
   140001676:	xor    eax,eax
   140001678:	mov    rcx,QWORD PTR [rsp+0x58]
   14000167d:	xor    rcx,rsp
   140001680:	call   0x1400025d0
   140001685:	mov    rbx,QWORD PTR [rsp+0x78]
   14000168a:	add    rsp,0x60
   14000168e:	pop    rdi
   14000168f:	ret    
   140001690:	int3   
   140001691:	int3   
   140001692:	int3   
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	sub    rsp,0x28
   1400016a4:	call   0x1400025f4
   1400016a9:	add    rsp,0x28
   1400016ad:	jmp    0x1400016b8
   1400016b2:	int3   
   1400016b3:	int3   
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	mov    rax,rsp
   1400016bb:	mov    QWORD PTR [rax+0x8],rbx
   1400016bf:	mov    QWORD PTR [rax+0x10],rsi
   1400016c3:	mov    QWORD PTR [rax+0x18],rdi
   1400016c7:	push   rbp
   1400016c8:	push   r12
   1400016ca:	push   r13
   1400016cc:	push   r14
   1400016ce:	push   r15
   1400016d0:	lea    rbp,[rax-0x1c8]
   1400016d7:	sub    rsp,0x2a0
   1400016de:	mov    rax,QWORD PTR [rip+0x391b]        # 0x140005000
   1400016e5:	xor    rax,rsp
   1400016e8:	mov    QWORD PTR [rbp+0x190],rax
   1400016ef:	call   0x14000112c
   1400016f4:	test   BYTE PTR [rip+0x3f45],0x1        # 0x140005640
   1400016fb:	je     0x140001709
   1400016fd:	lea    rdx,[rip+0x1f84]        # 0x140003688
   140001704:	call   0x140001194
   140001709:	xor    edx,edx
   14000170b:	lea    r8,[rip+0x1cc6]        # 0x1400033d8
   140001712:	lea    ecx,[rdx+0x2]
   140001715:	call   QWORD PTR [rip+0x19c5]        # 0x1400030e0
   14000171b:	xor    r14d,r14d
   14000171e:	mov    rbx,rax
   140001721:	test   rax,rax
   140001724:	je     0x140001738
   140001726:	mov    rcx,rax
   140001729:	call   QWORD PTR [rip+0x1949]        # 0x140003078
   14000172f:	mov    rcx,rbx
   140001732:	call   QWORD PTR [rip+0x19b0]        # 0x1400030e8
   140001738:	xor    ecx,ecx
   14000173a:	mov    DWORD PTR [rsp+0x68],r14d
   14000173f:	mov    esi,r14d
   140001742:	mov    r13b,0x1
   140001745:	call   QWORD PTR [rip+0x1935]        # 0x140003080
   14000174b:	mov    QWORD PTR [rsp+0x70],rax
   140001750:	call   QWORD PTR [rip+0x18ea]        # 0x140003040
   140001756:	mov    rcx,rax
   140001759:	lea    rdx,[rip+0x1ca0]        # 0x140003400
   140001760:	mov    r12,rax
   140001763:	call   0x14000128c
   140001768:	test   rax,rax
   14000176b:	lea    rdx,[rip+0x1cbe]        # 0x140003430
   140001772:	mov    rcx,r12
   140001775:	setne  dil
   140001779:	mov    BYTE PTR [rsp+0x50],dil
   14000177e:	call   0x14000128c
   140001783:	test   rax,rax
   140001786:	mov    ecx,0x43
   14000178b:	setne  bl
   14000178e:	call   QWORD PTR [rip+0x1a6c]        # 0x140003200
   140001794:	test   eax,eax
   140001796:	je     0x1400017e6
   140001798:	test   bl,bl
   14000179a:	jne    0x1400017e6
   14000179c:	test   BYTE PTR [rip+0x3e9d],0x1        # 0x140005640
   1400017a3:	je     0x1400017b1
   1400017a5:	lea    rdx,[rip+0x1da4]        # 0x140003550
   1400017ac:	call   0x140001194
   1400017b1:	call   0x140001164
   1400017b6:	mov    rcx,QWORD PTR [rbp+0x190]
   1400017bd:	xor    rcx,rsp
   1400017c0:	call   0x1400025d0
   1400017c5:	lea    r11,[rsp+0x2a0]
   1400017cd:	mov    rbx,QWORD PTR [r11+0x30]
   1400017d1:	mov    rsi,QWORD PTR [r11+0x38]
   1400017d5:	mov    rdi,QWORD PTR [r11+0x40]
   1400017d9:	mov    rsp,r11
   1400017dc:	pop    r15
   1400017de:	pop    r14
   1400017e0:	pop    r13
   1400017e2:	pop    r12
   1400017e4:	pop    rbp
   1400017e5:	ret    
   1400017e6:	lea    rax,[rsp+0x58]
   1400017eb:	mov    QWORD PTR [rsp+0x58],r14
   1400017f0:	mov    r9d,0x20019
   1400017f6:	mov    QWORD PTR [rsp+0x20],rax
   1400017fb:	xor    r8d,r8d
   1400017fe:	lea    rdx,[rip+0x1b4b]        # 0x140003350
   140001805:	mov    rcx,0xffffffff80000002
   14000180c:	mov    bl,r14b
   14000180f:	call   QWORD PTR [rip+0x17fb]        # 0x140003010
   140001815:	test   eax,eax
   140001817:	jne    0x1400018eb
   14000181d:	mov    rcx,QWORD PTR [rsp+0x58]
   140001822:	lea    rax,[rsp+0x60]
   140001827:	mov    QWORD PTR [rsp+0x28],rax
   14000182c:	lea    rdx,[rip+0x1b6d]        # 0x1400033a0
   140001833:	lea    rax,[rsp+0x64]
   140001838:	mov    DWORD PTR [rsp+0x64],r14d
   14000183d:	xor    r9d,r9d
   140001840:	mov    QWORD PTR [rsp+0x20],rax
   140001845:	xor    r8d,r8d
   140001848:	mov    DWORD PTR [rsp+0x60],0x4
   140001850:	call   QWORD PTR [rip+0x17aa]        # 0x140003000
   140001856:	test   eax,eax
   140001858:	jne    0x140001865
   14000185a:	cmp    DWORD PTR [rsp+0x64],0xd2af9
   140001862:	sete   bl
   140001865:	mov    rcx,QWORD PTR [rsp+0x58]
   14000186a:	call   QWORD PTR [rip+0x17b0]        # 0x140003020
   140001870:	test   bl,bl
   140001872:	je     0x1400018eb
   140001874:	mov    QWORD PTR [rsp+0x58],r14
   140001879:	test   dil,dil
   14000187c:	jne    0x14000179c
   140001882:	mov    QWORD PTR [rsp+0x30],r14
   140001887:	lea    rax,[rsp+0x58]
   14000188c:	mov    DWORD PTR [rsp+0x28],r14d
   140001891:	xor    r9d,r9d
   140001894:	xor    edx,edx
   140001896:	mov    QWORD PTR [rsp+0x20],rax
   14000189b:	mov    ecx,0x2900
   1400018a0:	mov    r8d,0xc0000002
   1400018a6:	call   QWORD PTR [rip+0x17fc]        # 0x1400030a8
   1400018ac:	test   eax,eax
   1400018ae:	je     0x14000179c
   1400018b4:	lea    rcx,[rip+0x1b8d]        # 0x140003448
   1400018bb:	call   QWORD PTR [rip+0x17d7]        # 0x140003098
   1400018c1:	mov    rdx,QWORD PTR [rsp+0x58]
   1400018c6:	lea    r8,[rip+0x1cfb]        # 0x1400035c8
   1400018cd:	mov    r9d,0x10
   1400018d3:	xor    ecx,ecx
   1400018d5:	call   QWORD PTR [rip+0x191d]        # 0x1400031f8
   1400018db:	mov    rcx,QWORD PTR [rsp+0x58]
   1400018e0:	call   QWORD PTR [rip+0x180a]        # 0x1400030f0
   1400018e6:	jmp    0x14000179c
   1400018eb:	call   QWORD PTR [rip+0x1797]        # 0x140003088
   1400018f1:	mov    rcx,rax
   1400018f4:	mov    edx,0x1
   1400018f9:	call   QWORD PTR [rip+0x17b9]        # 0x1400030b8
   1400018ff:	call   QWORD PTR [rip+0x178b]        # 0x140003090
   140001905:	mov    r15,rax
   140001908:	test   rax,rax
   14000190b:	je     0x14000179c
   140001911:	lea    rcx,[rbp-0x80]
   140001915:	mov    DWORD PTR [rbp-0x44],r14d
   140001919:	mov    DWORD PTR [rbp-0x80],0x68
   140001920:	call   QWORD PTR [rip+0x179a]        # 0x1400030c0
   140001926:	lea    r8,[rip+0x1c33]        # 0x140003560
   14000192d:	mov    edx,0x1
   140001932:	xor    ecx,ecx
   140001934:	call   QWORD PTR [rip+0x170e]        # 0x140003048
   14000193a:	mov    QWORD PTR [rsp+0x78],rax
   14000193f:	mov    rbx,rax
   140001942:	test   rax,rax
   140001945:	je     0x1400019a1
   140001947:	call   QWORD PTR [rip+0x177b]        # 0x1400030c8
   14000194d:	cmp    eax,0xb7
   140001952:	jne    0x1400019b0
   140001954:	mov    rcx,rbx
   140001957:	call   QWORD PTR [rip+0x178b]        # 0x1400030e8
   14000195d:	xor    edx,edx
   14000195f:	lea    rcx,[rip+0x1ec2]        # 0x140003828
   140001966:	call   QWORD PTR [rip+0x1844]        # 0x1400031b0
   14000196c:	test   BYTE PTR [rbp-0x44],0x1
   140001970:	je     0x14000197e
   140001972:	mov    ebx,0x1
   140001977:	cmp    r14w,WORD PTR [rbp-0x40]
   14000197c:	je     0x140001981
   14000197e:	mov    ebx,r14d
   140001981:	test   rax,rax
   140001984:	je     0x140001992
   140001986:	test   ebx,ebx
   140001988:	jne    0x140001992
   14000198a:	mov    rcx,rax
   14000198d:	call   0x140001544
   140001992:	mov    edx,ebx
   140001994:	mov    rcx,r12
   140001997:	call   0x1400011b0
   14000199c:	jmp    0x140001f0a
   1400019a1:	call   QWORD PTR [rip+0x1721]        # 0x1400030c8
   1400019a7:	cmp    eax,0x5
   1400019aa:	je     0x140001f0a
   1400019b0:	mov    ecx,0x1
   1400019b5:	mov    QWORD PTR [rsp+0x58],r14
   1400019ba:	mov    DWORD PTR [rsp+0x64],r14d
   1400019bf:	mov    DWORD PTR [rsp+0x60],r14d
   1400019c4:	call   QWORD PTR [rip+0x16a6]        # 0x140003070
   1400019ca:	lea    rcx,[rip+0x1abf]        # 0x140003490
   1400019d1:	call   QWORD PTR [rip+0x5631]        # 0x140007008
   1400019d7:	lea    rax,[rsp+0x58]
   1400019dc:	mov    r9d,0x20019
   1400019e2:	xor    r8d,r8d
   1400019e5:	mov    QWORD PTR [rsp+0x20],rax
   1400019ea:	lea    rdx,[rip+0x1c0f]        # 0x140003600
   1400019f1:	mov    rcx,0xffffffff80000002
   1400019f8:	call   QWORD PTR [rip+0x1612]        # 0x140003010
   1400019fe:	xor    edi,edi
   140001a00:	test   eax,eax
   140001a02:	jne    0x140001b16
   140001a08:	mov    rcx,QWORD PTR [rsp+0x58]
   140001a0d:	lea    rax,[rsp+0x64]
   140001a12:	mov    QWORD PTR [rsp+0x28],rax
   140001a17:	lea    r9,[rsp+0x60]
   140001a1c:	xor    r8d,r8d
   140001a1f:	mov    QWORD PTR [rsp+0x20],rdi
   140001a24:	lea    rdx,[rip+0x1dbd]        # 0x1400037e8
   140001a2b:	call   QWORD PTR [rip+0x15cf]        # 0x140003000
   140001a31:	test   eax,eax
   140001a33:	jne    0x140001b06
   140001a39:	mov    eax,DWORD PTR [rsp+0x60]
   140001a3d:	dec    eax
   140001a3f:	cmp    eax,0x1
   140001a42:	ja     0x140001b06
   140001a48:	mov    r8d,DWORD PTR [rsp+0x64]
   140001a4d:	xor    edx,edx
   140001a4f:	mov    rcx,r15
   140001a52:	call   QWORD PTR [rip+0x1608]        # 0x140003060
   140001a58:	mov    rbx,rax
   140001a5b:	test   rax,rax
   140001a5e:	je     0x140001b06
   140001a64:	mov    rcx,QWORD PTR [rsp+0x58]
   140001a69:	lea    rax,[rsp+0x64]
   140001a6e:	mov    QWORD PTR [rsp+0x28],rax
   140001a73:	lea    r9,[rsp+0x60]
   140001a78:	xor    r8d,r8d
   140001a7b:	mov    QWORD PTR [rsp+0x20],rbx
   140001a80:	lea    rdx,[rip+0x1d61]        # 0x1400037e8
   140001a87:	call   QWORD PTR [rip+0x1573]        # 0x140003000
   140001a8d:	test   eax,eax
   140001a8f:	jne    0x140001af8
   140001a91:	cmp    DWORD PTR [rsp+0x60],0x2
   140001a96:	mov    rcx,rbx
   140001a99:	jne    0x140001beb
   140001a9f:	xor    r8d,r8d
   140001aa2:	xor    edx,edx
   140001aa4:	call   QWORD PTR [rip+0x164e]        # 0x1400030f8
   140001aaa:	mov    esi,eax
   140001aac:	test   eax,eax
   140001aae:	je     0x140001af8
   140001ab0:	mov    r8d,esi
   140001ab3:	xor    edx,edx
   140001ab5:	add    r8,r8
   140001ab8:	mov    rcx,r15
   140001abb:	call   QWORD PTR [rip+0x159f]        # 0x140003060
   140001ac1:	mov    rdi,rax
   140001ac4:	test   rax,rax
   140001ac7:	je     0x140001af6
   140001ac9:	mov    r8d,esi
   140001acc:	mov    rdx,rax
   140001acf:	mov    rcx,rbx
   140001ad2:	call   QWORD PTR [rip+0x1620]        # 0x1400030f8
   140001ad8:	test   eax,eax
   140001ada:	je     0x140001ae8
   140001adc:	mov    rcx,rdi
   140001adf:	call   QWORD PTR [rip+0x15f3]        # 0x1400030d8
   140001ae5:	mov    r14d,eax
   140001ae8:	mov    r8,rdi
   140001aeb:	xor    edx,edx
   140001aed:	mov    rcx,r15
   140001af0:	call   QWORD PTR [rip+0x1572]        # 0x140003068
   140001af6:	xor    edi,edi
   140001af8:	mov    r8,rbx
   140001afb:	xor    edx,edx
   140001afd:	mov    rcx,r15
   140001b00:	call   QWORD PTR [rip+0x1562]        # 0x140003068
   140001b06:	mov    rcx,QWORD PTR [rsp+0x58]
   140001b0b:	call   QWORD PTR [rip+0x150f]        # 0x140003020
   140001b11:	mov    QWORD PTR [rsp+0x58],rdi
   140001b16:	mov    rcx,r12
   140001b19:	call   0x1400012f8
   140001b1e:	test   al,al
   140001b20:	je     0x140001d1a
   140001b26:	test   r14d,r14d
   140001b29:	je     0x140001d1a
   140001b2f:	xor    r14d,r14d
   140001b32:	mov    sil,r14b
   140001b35:	test   r12,r12
   140001b38:	je     0x140001ce2
   140001b3e:	lea    rcx,[rip+0x1bdb]        # 0x140003720
   140001b45:	call   QWORD PTR [rip+0x1565]        # 0x1400030b0
   140001b4b:	lea    ebx,[rax+0x1]
   140001b4e:	cmp    ebx,eax
   140001b50:	jb     0x140001ce2
   140001b56:	mov    rcx,r12
   140001b59:	call   QWORD PTR [rip+0x1551]        # 0x1400030b0
   140001b5f:	lea    ecx,[rax+rbx*1]
   140001b62:	cmp    ecx,ebx
   140001b64:	jb     0x140001ce2
   140001b6a:	lea    rax,[rcx+rcx*1]
   140001b6e:	mov    ebx,ecx
   140001b70:	mov    ecx,0xffffffff
   140001b75:	cmp    rax,rcx
   140001b78:	ja     0x140001ce2
   140001b7e:	mov    r8d,eax
   140001b81:	xor    edx,edx
   140001b83:	mov    rcx,r15
   140001b86:	call   QWORD PTR [rip+0x14d4]        # 0x140003060
   140001b8c:	mov    rdi,rax
   140001b8f:	test   rax,rax
   140001b92:	je     0x140001ce2
   140001b98:	lea    rcx,[rbx-0x1]
   140001b9c:	mov    r10d,0x7ffffffe
   140001ba2:	cmp    rcx,r10
   140001ba5:	ja     0x140001bf9
   140001ba7:	mov    r8d,r10d
   140001baa:	lea    r9,[rip+0x1b6f]        # 0x140003720
   140001bb1:	sub    r8,rbx
   140001bb4:	mov    edx,ebx
   140001bb6:	sub    r9,rax
   140001bb9:	mov    rcx,rax
   140001bbc:	lea    rax,[r8+rdx*1]
   140001bc0:	test   rax,rax
   140001bc3:	je     0x140001bdc
   140001bc5:	movzx  eax,WORD PTR [r9+rcx*1]
   140001bca:	test   ax,ax
   140001bcd:	je     0x140001bdc
   140001bcf:	mov    WORD PTR [rcx],ax
   140001bd2:	add    rcx,0x2
   140001bd6:	sub    rdx,0x1
   140001bda:	jne    0x140001bbc
   140001bdc:	test   rdx,rdx
   140001bdf:	jne    0x140001be5
   140001be1:	sub    rcx,0x2
   140001be5:	mov    WORD PTR [rcx],r14w
   140001be9:	jmp    0x140001c02
   140001beb:	call   QWORD PTR [rip+0x14e7]        # 0x1400030d8
   140001bf1:	mov    r14d,eax
   140001bf4:	jmp    0x140001af8
   140001bf9:	test   rbx,rbx
   140001bfc:	je     0x140001c02
   140001bfe:	mov    WORD PTR [rax],r14w
   140001c02:	lea    rax,[rbx-0x1]
   140001c06:	mov    r8d,r14d
   140001c09:	cmp    rax,r10
   140001c0c:	mov    edx,0x80070057
   140001c11:	cmova  r8d,edx
   140001c15:	test   r8d,r8d
   140001c18:	js     0x140001c48
   140001c1a:	mov    rax,rbx
   140001c1d:	mov    rcx,rdi
   140001c20:	mov    r8d,r14d
   140001c23:	test   rbx,rbx
   140001c26:	je     0x140001c45
   140001c28:	cmp    WORD PTR [rcx],r14w
   140001c2c:	je     0x140001c38
   140001c2e:	add    rcx,0x2
   140001c32:	sub    rax,0x1
   140001c36:	jne    0x140001c28
   140001c38:	test   rax,rax
   140001c3b:	je     0x140001c45
   140001c3d:	mov    rdx,rbx
   140001c40:	sub    rdx,rax
   140001c43:	jmp    0x140001c4b
   140001c45:	mov    r8d,edx
   140001c48:	mov    rdx,r14
   140001c4b:	test   r8d,r8d
   140001c4e:	js     0x140001c9d
   140001c50:	mov    r8,rbx
   140001c53:	lea    rcx,[rdi+rdx*2]
   140001c57:	sub    r8,rdx
   140001c5a:	je     0x140001c95
   140001c5c:	mov    rax,r8
   140001c5f:	sub    rax,rbx
   140001c62:	lea    r9,[rax+0x7ffffffe]
   140001c69:	add    r9,rdx
   140001c6c:	mov    rdx,r12
   140001c6f:	sub    rdx,rcx
   140001c72:	test   r9,r9
   140001c75:	je     0x140001c90
   140001c77:	movzx  eax,WORD PTR [rdx+rcx*1]
   140001c7b:	test   ax,ax
   140001c7e:	je     0x140001c90
   140001c80:	mov    WORD PTR [rcx],ax
   140001c83:	dec    r9
   140001c86:	add    rcx,0x2
   140001c8a:	sub    r8,0x1
   140001c8e:	jne    0x140001c72
   140001c90:	test   r8,r8
   140001c93:	jne    0x140001c99
   140001c95:	sub    rcx,0x2
   140001c99:	mov    WORD PTR [rcx],r14w
   140001c9d:	mov    DWORD PTR [rsp+0x28],0xa
   140001ca5:	lea    r8,[rip+0x1c34]        # 0x1400038e0
   140001cac:	mov    r9,rdi
   140001caf:	mov    QWORD PTR [rsp+0x20],r14
   140001cb4:	lea    rdx,[rip+0x1815]        # 0x1400034d0
   140001cbb:	xor    ecx,ecx
   140001cbd:	call   QWORD PTR [rip+0x533d]        # 0x140007000
   140001cc3:	cmp    rax,0x20
   140001cc7:	jbe    0x140001ccf
   140001cc9:	mov    sil,0x1
   140001ccc:	mov    r13b,r14b
   140001ccf:	mov    r8,rdi
   140001cd2:	xor    edx,edx
   140001cd4:	mov    rcx,r15
   140001cd7:	call   QWORD PTR [rip+0x138b]        # 0x140003068
   140001cdd:	test   sil,sil
   140001ce0:	jne    0x140001d1d
   140001ce2:	mov    DWORD PTR [rsp+0x28],0xa
   140001cea:	lea    r9,[rip+0x1a2f]        # 0x140003720
   140001cf1:	lea    r8,[rip+0x1be8]        # 0x1400038e0
   140001cf8:	mov    QWORD PTR [rsp+0x20],r14
   140001cfd:	lea    rdx,[rip+0x17cc]        # 0x1400034d0
   140001d04:	xor    ecx,ecx
   140001d06:	call   QWORD PTR [rip+0x52f4]        # 0x140007000
   140001d0c:	cmp    rax,0x20
   140001d10:	movzx  r13d,r13b
   140001d14:	cmova  r13d,r14d
   140001d18:	jmp    0x140001d1d
   140001d1a:	xor    r14d,r14d
   140001d1d:	call   0x14000146c
   140001d22:	test   r13b,r13b
   140001d25:	je     0x140001ef6
   140001d2b:	xor    edx,edx
   140001d2d:	mov    WORD PTR [rbp-0x10],r14w
   140001d32:	mov    r8d,0x196
   140001d38:	lea    rcx,[rbp-0xe]
   140001d3c:	mov    bl,r14b
   140001d3f:	call   0x140002a96
   140001d44:	lea    rcx,[rip+0x1795]        # 0x1400034e0
   140001d4b:	call   QWORD PTR [rip+0x1347]        # 0x140003098
   140001d51:	mov    rsi,rax
   140001d54:	test   rax,rax
   140001d57:	je     0x140001e56
   140001d5d:	xor    ecx,ecx
   140001d5f:	call   QWORD PTR [rip+0x52cb]        # 0x140007030
   140001d65:	mov    QWORD PTR [rsp+0x40],r14
   140001d6a:	xor    r9d,r9d
   140001d6d:	mov    DWORD PTR [rsp+0x38],r14d
   140001d72:	xor    r8d,r8d
   140001d75:	mov    QWORD PTR [rsp+0x30],r14
   140001d7a:	or     edx,0xffffffff
   140001d7d:	mov    DWORD PTR [rsp+0x28],0x3
   140001d85:	xor    ecx,ecx
   140001d87:	mov    DWORD PTR [rsp+0x20],r14d
   140001d8c:	call   QWORD PTR [rip+0x528e]        # 0x140007020
   140001d92:	mov    ecx,0x202
   140001d97:	lea    rdx,[rbp-0x10]
   140001d9b:	call   QWORD PTR [rip+0x1477]        # 0x140003218
   140001da1:	mov    edx,0xbb8
   140001da6:	mov    rcx,rsi
   140001da9:	mov    r15d,eax
   140001dac:	call   QWORD PTR [rip+0x131e]        # 0x1400030d0
   140001db2:	lea    rdx,[rip+0x1737]        # 0x1400034f0
   140001db9:	mov    rcx,rsi
   140001dbc:	mov    r14,rax
   140001dbf:	call   QWORD PTR [rip+0x130b]        # 0x1400030d0
   140001dc5:	mov    rdi,rax
   140001dc8:	test   r14,r14
   140001dcb:	je     0x140001e12
   140001dcd:	test   rax,rax
   140001dd0:	je     0x140001e2b
   140001dd2:	mov    ecx,0x8001
   140001dd7:	call   QWORD PTR [rip+0x1273]        # 0x140003050
   140001ddd:	mov    edx,DWORD PTR [rbp-0x44]
   140001de0:	mov    ebx,0xa
   140001de5:	movzx  ecx,WORD PTR [rbp-0x40]
   140001de9:	and    dl,0x1
   140001dec:	cmovne ebx,ecx
   140001def:	mov    rcx,r14
   140001df2:	call   QWORD PTR [rip+0x1440]        # 0x140003238
   140001df8:	mov    rcx,QWORD PTR [rsp+0x70]
   140001dfd:	mov    r8d,ebx
   140001e00:	mov    rdx,r12
   140001e03:	call   r14
   140001e06:	cmp    eax,0x80070005
   140001e0b:	mov    DWORD PTR [rsp+0x68],eax
   140001e0f:	setne  bl
   140001e12:	xor    r14d,r14d
   140001e15:	test   rdi,rdi
   140001e18:	je     0x140001e2e
   140001e1a:	mov    rcx,rdi
   140001e1d:	call   QWORD PTR [rip+0x1415]        # 0x140003238
   140001e23:	call   rdi
   140001e25:	test   eax,eax
   140001e27:	jne    0x140001e37
   140001e29:	jmp    0x140001e2e
   140001e2b:	xor    r14d,r14d
   140001e2e:	mov    rcx,rsi
   140001e31:	call   QWORD PTR [rip+0x1221]        # 0x140003058
   140001e37:	test   r15d,r15d
   140001e3a:	jne    0x140001e42
   140001e3c:	call   QWORD PTR [rip+0x13ce]        # 0x140003210
   140001e42:	call   QWORD PTR [rip+0x51d0]        # 0x140007018
   140001e48:	call   QWORD PTR [rip+0x51da]        # 0x140007028
   140001e4e:	test   bl,bl
   140001e50:	jne    0x140001ef6
   140001e56:	cmp    BYTE PTR [rsp+0x50],r14b
   140001e5b:	jne    0x140001ef6
   140001e61:	mov    QWORD PTR [rsp+0x30],r14
   140001e66:	lea    rax,[rsp+0x70]
   140001e6b:	mov    DWORD PTR [rsp+0x28],r14d
   140001e70:	xor    r9d,r9d
   140001e73:	xor    edx,edx
   140001e75:	mov    QWORD PTR [rsp+0x20],rax
   140001e7a:	mov    ecx,0x2900
   140001e7f:	mov    QWORD PTR [rsp+0x70],r14
   140001e84:	mov    r8d,0xc0000001
   140001e8a:	call   QWORD PTR [rip+0x1218]        # 0x1400030a8
   140001e90:	test   eax,eax
   140001e92:	je     0x140001ee6
   140001e94:	lea    rcx,[rip+0x15ad]        # 0x140003448
   140001e9b:	call   QWORD PTR [rip+0x11f7]        # 0x140003098
   140001ea1:	mov    rdx,QWORD PTR [rsp+0x70]
   140001ea6:	lea    r8,[rip+0x171b]        # 0x1400035c8
   140001ead:	mov    r9d,0x14
   140001eb3:	xor    ecx,ecx
   140001eb5:	call   QWORD PTR [rip+0x133d]        # 0x1400031f8
   140001ebb:	cmp    eax,0x6
   140001ebe:	jne    0x140001ee6
   140001ec0:	mov    DWORD PTR [rsp+0x28],0xa
   140001ec8:	lea    r8,[rip+0x18c1]        # 0x140003790
   140001ecf:	xor    r9d,r9d
   140001ed2:	mov    QWORD PTR [rsp+0x20],r14
   140001ed7:	lea    rdx,[rip+0x15f2]        # 0x1400034d0
   140001ede:	xor    ecx,ecx
   140001ee0:	call   QWORD PTR [rip+0x511a]        # 0x140007000
   140001ee6:	mov    rcx,QWORD PTR [rsp+0x70]
   140001eeb:	test   rcx,rcx
   140001eee:	je     0x140001ef6
   140001ef0:	call   QWORD PTR [rip+0x11fa]        # 0x1400030f0
   140001ef6:	mov    rcx,QWORD PTR [rsp+0x78]
   140001efb:	test   rcx,rcx
   140001efe:	je     0x140001f06
   140001f00:	call   QWORD PTR [rip+0x11e2]        # 0x1400030e8
   140001f06:	mov    esi,DWORD PTR [rsp+0x68]
   140001f0a:	test   BYTE PTR [rip+0x372f],0x1        # 0x140005640
   140001f11:	je     0x140001f1f
   140001f13:	lea    rdx,[rip+0x1636]        # 0x140003550
   140001f1a:	call   0x140001194
   140001f1f:	call   0x140001164
   140001f24:	mov    ecx,esi
   140001f26:	call   QWORD PTR [rip+0x110c]        # 0x140003038
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	int3   
   140001f31:	int3   
   140001f32:	int3   
   140001f33:	int3   
   140001f34:	mov    QWORD PTR [rsp+0x8],rbx
   140001f39:	push   rdi
   140001f3a:	sub    rsp,0x80
   140001f41:	mov    rdi,rdx
   140001f44:	mov    r8d,0x30
   140001f4a:	lea    rdx,[rsp+0x20]
   140001f4f:	mov    rbx,rcx
   140001f52:	call   QWORD PTR [rip+0x1238]        # 0x140003190
   140001f58:	test   rax,rax
   140001f5b:	jne    0x140001f62
   140001f5d:	lea    ecx,[rax+0x19]
   140001f60:	int    0x29
   140001f62:	test   BYTE PTR [rsp+0x44],0x44
   140001f67:	je     0x140001fba
   140001f69:	lea    rcx,[rsp+0x50]
   140001f6e:	call   QWORD PTR [rip+0x11fc]        # 0x140003170
   140001f74:	mov    r8d,DWORD PTR [rsp+0x54]
   140001f79:	xor    edx,edx
   140001f7b:	lea    eax,[r8-0x1]
   140001f7f:	mov    ecx,eax
   140001f81:	and    eax,ebx
   140001f83:	and    ecx,edi
   140001f85:	add    eax,ecx
   140001f87:	dec    rax
   140001f8a:	add    rax,r8
   140001f8d:	div    r8
   140001f90:	xor    edx,edx
   140001f92:	mov    rcx,rax
   140001f95:	mov    rax,rdi
   140001f98:	div    r8
   140001f9b:	add    ecx,eax
   140001f9d:	lea    rax,[r8-0x1]
   140001fa1:	not    rax
   140001fa4:	mov    edx,ecx
   140001fa6:	and    rax,rbx
   140001fa9:	test   ecx,ecx
   140001fab:	je     0x140001fba
   140001fad:	lock or DWORD PTR [rax],0x0
   140001fb1:	add    rax,r8
   140001fb4:	sub    rdx,0x1
   140001fb8:	jne    0x140001fad
   140001fba:	mov    rbx,QWORD PTR [rsp+0x90]
   140001fc2:	add    rsp,0x80
   140001fc9:	pop    rdi
   140001fca:	ret    
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	int3   
   140001fd1:	int3   
   140001fd2:	int3   
   140001fd3:	int3   
   140001fd4:	mov    QWORD PTR [rsp+0x8],rbx
   140001fd9:	mov    QWORD PTR [rsp+0x10],rbp
   140001fde:	push   rsi
   140001fdf:	push   rdi
   140001fe0:	push   r14
   140001fe2:	sub    rsp,0x20
   140001fe6:	movsxd r8,DWORD PTR [rip+0xffffffffffffe04f]        # 0x14000003c
   140001fed:	lea    r14,[rip+0xffffffffffffe00c]        # 0x140000000
   140001ff4:	add    r8,r14
   140001ff7:	mov    rsi,rdx
   140001ffa:	mov    ebp,ecx
   140001ffc:	cmp    DWORD PTR [r8+0x84],0xd
   140002004:	jbe    0x1400020ba
   14000200a:	mov    r9d,DWORD PTR [r8+0xf0]
   140002011:	test   r9d,r9d
   140002014:	je     0x1400020ba
   14000201a:	movzx  eax,WORD PTR [r8+0x14]
   14000201f:	lea    rdx,[r8+0x18]
   140002023:	mov    r10d,DWORD PTR [r9+r14*1+0xc]
   140002028:	add    rdx,rax
   14000202b:	movzx  r11d,WORD PTR [r8+0x6]
   140002030:	xor    r9d,r9d
   140002033:	test   r11d,r11d
   140002036:	je     0x140002056
   140002038:	mov    ecx,DWORD PTR [rdx+0xc]
   14000203b:	cmp    r10d,ecx
   14000203e:	jb     0x14000204a
   140002040:	mov    eax,DWORD PTR [rdx+0x8]
   140002043:	add    ecx,eax
   140002045:	cmp    r10d,ecx
   140002048:	jb     0x1400020ad
   14000204a:	inc    r9d
   14000204d:	add    rdx,0x28
   140002051:	cmp    r9d,r11d
   140002054:	jb     0x140002038
   140002056:	mov    eax,DWORD PTR [rsp+0x50]
   14000205a:	xor    ebx,ebx
   14000205c:	mov    edi,DWORD PTR [rsp+0x50]
   140002060:	test   rbx,rbx
   140002063:	je     0x1400020ba
   140002065:	cmp    DWORD PTR [rip+0x35ec],0x0        # 0x140005658
   14000206c:	mov    r14d,0x19
   140002072:	jne    0x140002091
   140002074:	mov    DWORD PTR [rip+0x35da],0x1        # 0x140005658
   14000207e:	test   eax,eax
   140002080:	js     0x140002087
   140002082:	mov    ecx,r14d
   140002085:	int    0x29
   140002087:	mov    edx,edi
   140002089:	mov    rcx,rbx
   14000208c:	call   0x140001f34
   140002091:	mov    edx,edi
   140002093:	mov    r9,rsi
   140002096:	mov    r8d,ebp
   140002099:	mov    rcx,rbx
   14000209c:	call   QWORD PTR [rip+0x10be]        # 0x140003160
   1400020a2:	test   eax,eax
   1400020a4:	jne    0x1400020c0
   1400020a6:	mov    rcx,r14
   1400020a9:	int    0x29
   1400020ab:	jmp    0x1400020c0
   1400020ad:	mov    ebx,DWORD PTR [rdx+0xc]
   1400020b0:	mov    edi,eax
   1400020b2:	mov    eax,DWORD PTR [rdx+0x24]
   1400020b5:	add    rbx,r14
   1400020b8:	jmp    0x140002060
   1400020ba:	mov    DWORD PTR [rsi],0x4
   1400020c0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400020c5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400020ca:	add    rsp,0x20
   1400020ce:	pop    r14
   1400020d0:	pop    rdi
   1400020d1:	pop    rsi
   1400020d2:	ret    
   1400020d3:	int3   
   1400020d4:	int3   
   1400020d5:	int3   
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	int3   
   1400020d9:	int3   
   1400020da:	int3   
   1400020db:	int3   
   1400020dc:	int3   
   1400020dd:	int3   
   1400020de:	int3   
   1400020df:	int3   
   1400020e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400020e5:	push   rbp
   1400020e6:	push   rbx
   1400020e7:	push   rsi
   1400020e8:	push   rdi
   1400020e9:	push   r12
   1400020eb:	push   r13
   1400020ed:	push   r15
   1400020ef:	lea    rbp,[rsp-0x27]
   1400020f4:	sub    rsp,0xa0
   1400020fb:	test   DWORD PTR [rip+0x123b],0x1000        # 0x140003340
   140002105:	lea    rbx,[rip+0x353c]        # 0x140005648
   14000210c:	mov    rdi,rdx
   14000210f:	mov    r15,rcx
   140002112:	mov    esi,0x1
   140002117:	je     0x14000214c
   140002119:	mov    rcx,rbx
   14000211c:	call   QWORD PTR [rip+0x105e]        # 0x140003180
   140002122:	mov    eax,DWORD PTR [rip+0x3534]        # 0x14000565c
   140002128:	add    eax,esi
   14000212a:	mov    DWORD PTR [rip+0x352c],eax        # 0x14000565c
   140002130:	cmp    eax,esi
   140002132:	jne    0x140002143
   140002134:	lea    rdx,[rip+0x3525]        # 0x140005660
   14000213b:	lea    ecx,[rsi+0x3]
   14000213e:	call   0x140001fd4
   140002143:	mov    rcx,rbx
   140002146:	call   QWORD PTR [rip+0x103c]        # 0x140003188
   14000214c:	and    QWORD PTR [rbp-0x31],0x0
   140002151:	lea    r10,[rip+0xffffffffffffdea8]        # 0x140000000
   140002158:	mov    r9d,DWORD PTR [r15+0x14]
   14000215c:	mov    ecx,DWORD PTR [r15]
   14000215f:	add    r9,r10
   140002162:	mov    eax,DWORD PTR [r15+0x4]
   140002166:	and    ecx,esi
   140002168:	mov    r12d,DWORD PTR [r15+0x8]
   14000216c:	add    rax,r10
   14000216f:	mov    r8d,DWORD PTR [r15+0xc]
   140002173:	add    r12,r10
   140002176:	mov    edx,DWORD PTR [r15+0x10]
   14000217a:	add    r8,r10
   14000217d:	and    DWORD PTR [rbp-0x39],0x0
   140002181:	add    rdx,r10
   140002184:	and    DWORD PTR [rbp-0x31],0x0
   140002188:	and    QWORD PTR [rbp-0x29],0x0
   14000218d:	and    QWORD PTR [rbp-0x21],0x0
   140002192:	and    DWORD PTR [rbp-0x19],0x0
   140002196:	mov    QWORD PTR [rbp-0x1],r9
   14000219a:	mov    r9d,DWORD PTR [r15+0x1c]
   14000219e:	mov    DWORD PTR [rbp+0x67],r9d
   1400021a2:	mov    DWORD PTR [rbp-0x59],0x48
   1400021a9:	mov    QWORD PTR [rbp-0x51],r15
   1400021ad:	mov    QWORD PTR [rbp-0x49],rdi
   1400021b1:	mov    QWORD PTR [rbp-0x41],rax
   1400021b5:	test   cl,cl
   1400021b7:	jne    0x140002212
   1400021b9:	test   DWORD PTR [rip+0x117d],0x1000        # 0x140003340
   1400021c3:	lea    rax,[rbp-0x59]
   1400021c7:	mov    QWORD PTR [rbp+0x7],rax
   1400021cb:	je     0x1400021f7
   1400021cd:	mov    rcx,rbx
   1400021d0:	call   QWORD PTR [rip+0xfaa]        # 0x140003180
   1400021d6:	add    DWORD PTR [rip+0x347f],0xffffffff        # 0x14000565c
   1400021dd:	jne    0x1400021ee
   1400021df:	mov    ecx,DWORD PTR [rip+0x347b]        # 0x140005660
   1400021e5:	lea    rdx,[rbp+0x77]
   1400021e9:	call   0x140001fd4
   1400021ee:	mov    rcx,rbx
   1400021f1:	call   QWORD PTR [rip+0xf91]        # 0x140003188
   1400021f7:	lea    r9,[rbp+0x7]
   1400021fb:	mov    r8d,esi
   1400021fe:	xor    edx,edx
   140002200:	mov    ecx,0xc06d0057
   140002205:	call   QWORD PTR [rip+0xf6d]        # 0x140003178
   14000220b:	xor    eax,eax
   14000220d:	jmp    0x14000259f
   140002212:	mov    rbx,QWORD PTR [r12]
   140002216:	movabs rax,0x8000000000000000
   140002220:	mov    r13,rdi
   140002223:	sub    r13,r8
   140002226:	sar    r13,0x3
   14000222a:	mov    r13d,r13d
   14000222d:	test   QWORD PTR [rdx+r13*8],rax
   140002231:	mov    eax,0x0
   140002236:	sete   al
   140002239:	mov    DWORD PTR [rbp-0x39],eax
   14000223c:	test   eax,eax
   14000223e:	je     0x140002254
   140002240:	mov    eax,DWORD PTR [rdx+r13*8]
   140002244:	lea    rcx,[rip+0xffffffffffffddb7]        # 0x140000002
   14000224b:	add    rax,rcx
   14000224e:	mov    QWORD PTR [rbp-0x31],rax
   140002252:	jmp    0x14000225c
   140002254:	movzx  eax,WORD PTR [rdx+r13*8]
   140002259:	mov    DWORD PTR [rbp-0x31],eax
   14000225c:	mov    rdi,QWORD PTR [rip+0x16ed]        # 0x140003950
   140002263:	xor    esi,esi
   140002265:	test   rdi,rdi
   140002268:	je     0x140002287
   14000226a:	mov    rcx,rdi
   14000226d:	call   QWORD PTR [rip+0xfc5]        # 0x140003238
   140002273:	lea    rdx,[rbp-0x59]
   140002277:	xor    ecx,ecx
   140002279:	call   rdi
   14000227b:	mov    rsi,rax
   14000227e:	test   rax,rax
   140002281:	jne    0x140002532
   140002287:	test   rbx,rbx
   14000228a:	jne    0x1400023ce
   140002290:	mov    rdi,QWORD PTR [rip+0x16b9]        # 0x140003950
   140002297:	test   rdi,rdi
   14000229a:	je     0x1400022ba
   14000229c:	mov    rcx,rdi
   14000229f:	call   QWORD PTR [rip+0xf93]        # 0x140003238
   1400022a5:	lea    rdx,[rbp-0x59]
   1400022a9:	lea    ecx,[rbx+0x1]
   1400022ac:	call   rdi
   1400022ae:	mov    rbx,rax
   1400022b1:	test   rax,rax
   1400022b4:	jne    0x14000236a
   1400022ba:	mov    rcx,QWORD PTR [rbp-0x41]
   1400022be:	xor    r8d,r8d
   1400022c1:	xor    edx,edx
   1400022c3:	call   QWORD PTR [rip+0xe9f]        # 0x140003168
   1400022c9:	mov    rbx,rax
   1400022cc:	test   rax,rax
   1400022cf:	jne    0x14000236a
   1400022d5:	call   QWORD PTR [rip+0xded]        # 0x1400030c8
   1400022db:	mov    rbx,QWORD PTR [rip+0x166e]        # 0x140003950
   1400022e2:	mov    DWORD PTR [rbp-0x19],eax
   1400022e5:	test   rbx,rbx
   1400022e8:	je     0x140002306
   1400022ea:	mov    rcx,rbx
   1400022ed:	call   QWORD PTR [rip+0xf45]        # 0x140003238
   1400022f3:	lea    rdx,[rbp-0x59]
   1400022f7:	mov    ecx,0x3
   1400022fc:	call   rbx
   1400022fe:	mov    rbx,rax
   140002301:	test   rax,rax
   140002304:	jne    0x14000236a
   140002306:	test   DWORD PTR [rip+0x1030],0x1000        # 0x140003340
   140002310:	lea    rax,[rbp-0x59]
   140002314:	mov    QWORD PTR [rbp-0x9],rax
   140002318:	je     0x14000234c
   14000231a:	lea    rcx,[rip+0x3327]        # 0x140005648
   140002321:	call   QWORD PTR [rip+0xe59]        # 0x140003180
   140002327:	add    DWORD PTR [rip+0x332e],0xffffffff        # 0x14000565c
   14000232e:	jne    0x14000233f
   140002330:	mov    ecx,DWORD PTR [rip+0x332a]        # 0x140005660
   140002336:	lea    rdx,[rbp+0x7f]
   14000233a:	call   0x140001fd4
   14000233f:	lea    rcx,[rip+0x3302]        # 0x140005648
   140002346:	call   QWORD PTR [rip+0xe3c]        # 0x140003188
   14000234c:	xor    edx,edx
   14000234e:	lea    r9,[rbp-0x9]
   140002352:	mov    ecx,0xc06d007e
   140002357:	lea    r8d,[rdx+0x1]
   14000235b:	call   QWORD PTR [rip+0xe17]        # 0x140003178
   140002361:	mov    rax,QWORD PTR [rbp-0x21]
   140002365:	jmp    0x14000259f
   14000236a:	xor    eax,eax
   14000236c:	lock cmpxchg QWORD PTR [r12],rbx
   140002372:	mov    rdi,rax
   140002375:	jne    0x1400023b8
   140002377:	cmp    rbx,0xffffffffffffffff
   14000237b:	je     0x1400023ce
   14000237d:	cmp    DWORD PTR [r15+0x18],0x0
   140002382:	je     0x1400023ce
   140002384:	call   QWORD PTR [rip+0xd06]        # 0x140003090
   14000238a:	mov    edx,0x8
   14000238f:	mov    rcx,rax
   140002392:	lea    r8d,[rdx+0x8]
   140002396:	call   QWORD PTR [rip+0xcc4]        # 0x140003060
   14000239c:	test   rax,rax
   14000239f:	je     0x1400023ce
   1400023a1:	mov    QWORD PTR [rax+0x8],r15
   1400023a5:	mov    rcx,QWORD PTR [rip+0x32a4]        # 0x140005650
   1400023ac:	mov    QWORD PTR [rax],rcx
   1400023af:	mov    QWORD PTR [rip+0x329a],rax        # 0x140005650
   1400023b6:	jmp    0x1400023ce
   1400023b8:	cmp    rbx,0xffffffffffffffff
   1400023bc:	je     0x1400023c7
   1400023be:	mov    rcx,rbx
   1400023c1:	call   QWORD PTR [rip+0xc91]        # 0x140003058
   1400023c7:	cmp    rbx,rdi
   1400023ca:	cmovne rbx,rdi
   1400023ce:	mov    rdi,QWORD PTR [rip+0x157b]        # 0x140003950
   1400023d5:	mov    QWORD PTR [rbp-0x29],rbx
   1400023d9:	test   rdi,rdi
   1400023dc:	je     0x1400023f5
   1400023de:	mov    rcx,rdi
   1400023e1:	call   QWORD PTR [rip+0xe51]        # 0x140003238
   1400023e7:	lea    rdx,[rbp-0x59]
   1400023eb:	mov    ecx,0x2
   1400023f0:	call   rdi
   1400023f2:	mov    rsi,rax
   1400023f5:	test   rsi,rsi
   1400023f8:	jne    0x14000252b
   1400023fe:	cmp    DWORD PTR [r15+0x14],esi
   140002402:	je     0x140002438
   140002404:	cmp    DWORD PTR [r15+0x1c],esi
   140002408:	je     0x140002438
   14000240a:	movsxd rax,DWORD PTR [rbx+0x3c]
   14000240e:	cmp    DWORD PTR [rax+rbx*1],0x4550
   140002415:	jne    0x140002438
   140002417:	mov    ecx,DWORD PTR [rbp+0x67]
   14000241a:	cmp    DWORD PTR [rax+rbx*1+0x8],ecx
   14000241e:	jne    0x140002438
   140002420:	cmp    rbx,QWORD PTR [rax+rbx*1+0x30]
   140002425:	jne    0x140002438
   140002427:	mov    rsi,QWORD PTR [rbp-0x1]
   14000242b:	mov    rsi,QWORD PTR [rsi+r13*8]
   14000242f:	test   rsi,rsi
   140002432:	jne    0x14000252b
   140002438:	mov    rdx,QWORD PTR [rbp-0x31]
   14000243c:	mov    rcx,rbx
   14000243f:	call   QWORD PTR [rip+0xc8b]        # 0x1400030d0
   140002445:	mov    rsi,rax
   140002448:	test   rax,rax
   14000244b:	jne    0x14000252b
   140002451:	call   QWORD PTR [rip+0xc71]        # 0x1400030c8
   140002457:	mov    rdi,QWORD PTR [rip+0x14f2]        # 0x140003950
   14000245e:	mov    DWORD PTR [rbp-0x19],eax
   140002461:	test   rdi,rdi
   140002464:	je     0x140002484
   140002466:	mov    rcx,rdi
   140002469:	call   QWORD PTR [rip+0xdc9]        # 0x140003238
   14000246f:	lea    rdx,[rbp-0x59]
   140002473:	lea    ecx,[rsi+0x4]
   140002476:	call   rdi
   140002478:	mov    rsi,rax
   14000247b:	test   rax,rax
   14000247e:	jne    0x14000252b
   140002484:	test   DWORD PTR [rip+0xeb2],0x1000        # 0x140003340
   14000248e:	lea    rax,[rbp-0x59]
   140002492:	mov    QWORD PTR [rbp+0xf],rax
   140002496:	je     0x1400024ca
   140002498:	lea    rcx,[rip+0x31a9]        # 0x140005648
   14000249f:	call   QWORD PTR [rip+0xcdb]        # 0x140003180
   1400024a5:	add    DWORD PTR [rip+0x31b0],0xffffffff        # 0x14000565c
   1400024ac:	jne    0x1400024bd
   1400024ae:	mov    ecx,DWORD PTR [rip+0x31ac]        # 0x140005660
   1400024b4:	lea    rdx,[rbp+0x17]
   1400024b8:	call   0x140001fd4
   1400024bd:	lea    rcx,[rip+0x3184]        # 0x140005648
   1400024c4:	call   QWORD PTR [rip+0xcbe]        # 0x140003188
   1400024ca:	xor    edx,edx
   1400024cc:	lea    r9,[rbp+0xf]
   1400024d0:	mov    ecx,0xc06d007f
   1400024d5:	lea    r8d,[rdx+0x1]
   1400024d9:	call   QWORD PTR [rip+0xc99]        # 0x140003178
   1400024df:	test   DWORD PTR [rip+0xe57],0x1000        # 0x140003340
   1400024e9:	je     0x140002527
   1400024eb:	lea    rcx,[rip+0x3156]        # 0x140005648
   1400024f2:	call   QWORD PTR [rip+0xc88]        # 0x140003180
   1400024f8:	mov    eax,DWORD PTR [rip+0x315e]        # 0x14000565c
   1400024fe:	inc    eax
   140002500:	mov    DWORD PTR [rip+0x3156],eax        # 0x14000565c
   140002506:	cmp    eax,0x1
   140002509:	jne    0x14000251a
   14000250b:	lea    rdx,[rip+0x314e]        # 0x140005660
   140002512:	lea    ecx,[rax+0x3]
   140002515:	call   0x140001fd4
   14000251a:	lea    rcx,[rip+0x3127]        # 0x140005648
   140002521:	call   QWORD PTR [rip+0xc61]        # 0x140003188
   140002527:	mov    rsi,QWORD PTR [rbp-0x21]
   14000252b:	mov    rax,QWORD PTR [rbp+0x6f]
   14000252f:	mov    QWORD PTR [rax],rsi
   140002532:	mov    rdi,QWORD PTR [rip+0x1417]        # 0x140003950
   140002539:	test   rdi,rdi
   14000253c:	je     0x14000255e
   14000253e:	and    DWORD PTR [rbp-0x19],0x0
   140002542:	mov    rcx,rdi
   140002545:	mov    QWORD PTR [rbp-0x29],rbx
   140002549:	mov    QWORD PTR [rbp-0x21],rsi
   14000254d:	call   QWORD PTR [rip+0xce5]        # 0x140003238
   140002553:	lea    rdx,[rbp-0x59]
   140002557:	mov    ecx,0x5
   14000255c:	call   rdi
   14000255e:	test   DWORD PTR [rip+0xdd8],0x1000        # 0x140003340
   140002568:	je     0x14000259c
   14000256a:	lea    rcx,[rip+0x30d7]        # 0x140005648
   140002571:	call   QWORD PTR [rip+0xc09]        # 0x140003180
   140002577:	add    DWORD PTR [rip+0x30de],0xffffffff        # 0x14000565c
   14000257e:	jne    0x14000258f
   140002580:	mov    ecx,DWORD PTR [rip+0x30da]        # 0x140005660
   140002586:	lea    rdx,[rbp+0x1b]
   14000258a:	call   0x140001fd4
   14000258f:	lea    rcx,[rip+0x30b2]        # 0x140005648
   140002596:	call   QWORD PTR [rip+0xbec]        # 0x140003188
   14000259c:	mov    rax,rsi
   14000259f:	add    rsp,0xa0
   1400025a6:	pop    r15
   1400025a8:	pop    r13
   1400025aa:	pop    r12
   1400025ac:	pop    rdi
   1400025ad:	pop    rsi
   1400025ae:	pop    rbx
   1400025af:	pop    rbp
   1400025b0:	ret    
   1400025b1:	int3   
   1400025b2:	int3   
   1400025b3:	int3   
   1400025b4:	int3   
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	int3   
   1400025c1:	int3   
   1400025c2:	int3   
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400025d0:	cmp    rcx,QWORD PTR [rip+0x2a29]        # 0x140005000
   1400025d7:	jne    0x1400025e9
   1400025d9:	rol    rcx,0x10
   1400025dd:	test   cx,0xffff
   1400025e2:	jne    0x1400025e5
   1400025e4:	ret    
   1400025e5:	ror    rcx,0x10
   1400025e9:	jmp    0x1400026e0
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	int3   
   1400025f1:	int3   
   1400025f2:	int3   
   1400025f3:	int3   
   1400025f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400025f9:	push   rbp
   1400025fa:	mov    rbp,rsp
   1400025fd:	sub    rsp,0x20
   140002601:	and    DWORD PTR [rbp+0x18],0x0
   140002605:	xor    eax,eax
   140002607:	mov    DWORD PTR [rbp+0x1c],eax
   14000260a:	movabs rbx,0x2b992ddfa232
   140002614:	mov    rax,QWORD PTR [rip+0x29e5]        # 0x140005000
   14000261b:	test   rax,rax
   14000261e:	je     0x140002634
   140002620:	cmp    rax,rbx
   140002623:	je     0x140002634
   140002625:	not    rax
   140002628:	mov    QWORD PTR [rip+0x29d9],rax        # 0x140005008
   14000262f:	jmp    0x1400026c0
   140002634:	lea    rcx,[rbp+0x20]
   140002638:	call   QWORD PTR [rip+0xada]        # 0x140003118
   14000263e:	mov    rax,QWORD PTR [rbp+0x20]
   140002642:	mov    QWORD PTR [rbp+0x10],rax
   140002646:	call   QWORD PTR [rip+0xabc]        # 0x140003108
   14000264c:	mov    eax,eax
   14000264e:	xor    QWORD PTR [rbp+0x10],rax
   140002652:	call   QWORD PTR [rip+0xab8]        # 0x140003110
   140002658:	mov    eax,eax
   14000265a:	xor    QWORD PTR [rbp+0x10],rax
   14000265e:	call   QWORD PTR [rip+0xabc]        # 0x140003120
   140002664:	mov    eax,eax
   140002666:	shl    rax,0x18
   14000266a:	xor    QWORD PTR [rbp+0x10],rax
   14000266e:	call   QWORD PTR [rip+0xaac]        # 0x140003120
   140002674:	mov    eax,eax
   140002676:	lea    rcx,[rbp+0x10]
   14000267a:	xor    rax,QWORD PTR [rbp+0x10]
   14000267e:	xor    rax,rcx
   140002681:	lea    rcx,[rbp+0x18]
   140002685:	mov    QWORD PTR [rbp+0x10],rax
   140002689:	call   QWORD PTR [rip+0xa71]        # 0x140003100
   14000268f:	mov    eax,DWORD PTR [rbp+0x18]
   140002692:	movabs rcx,0xffffffffffff
   14000269c:	shl    rax,0x20
   1400026a0:	xor    rax,QWORD PTR [rbp+0x10]
   1400026a4:	xor    rax,QWORD PTR [rbp+0x18]
   1400026a8:	and    rax,rcx
   1400026ab:	cmovne rbx,rax
   1400026af:	mov    QWORD PTR [rip+0x294a],rbx        # 0x140005000
   1400026b6:	not    rbx
   1400026b9:	mov    QWORD PTR [rip+0x2948],rbx        # 0x140005008
   1400026c0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400026c5:	add    rsp,0x20
   1400026c9:	pop    rbp
   1400026ca:	ret    
   1400026cb:	int3   
   1400026cc:	int3   
   1400026cd:	int3   
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	int3   
   1400026d1:	int3   
   1400026d2:	int3   
   1400026d3:	int3   
   1400026d4:	int3   
   1400026d5:	int3   
   1400026d6:	int3   
   1400026d7:	int3   
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400026e5:	sub    rsp,0x88
   1400026ec:	lea    rcx,[rip+0x2a2d]        # 0x140005120
   1400026f3:	call   QWORD PTR [rip+0xa2f]        # 0x140003128
   1400026f9:	mov    rax,QWORD PTR [rip+0x2b18]        # 0x140005218
   140002700:	mov    QWORD PTR [rsp+0x48],rax
   140002705:	xor    r8d,r8d
   140002708:	lea    rdx,[rsp+0x50]
   14000270d:	mov    rcx,QWORD PTR [rsp+0x48]
   140002712:	call   QWORD PTR [rip+0xa18]        # 0x140003130
   140002718:	mov    QWORD PTR [rsp+0x40],rax
   14000271d:	cmp    QWORD PTR [rsp+0x40],0x0
   140002723:	je     0x140002767
   140002725:	mov    QWORD PTR [rsp+0x38],0x0
   14000272e:	lea    rax,[rsp+0x58]
   140002733:	mov    QWORD PTR [rsp+0x30],rax
   140002738:	lea    rax,[rsp+0x60]
   14000273d:	mov    QWORD PTR [rsp+0x28],rax
   140002742:	lea    rax,[rip+0x29d7]        # 0x140005120
   140002749:	mov    QWORD PTR [rsp+0x20],rax
   14000274e:	mov    r9,QWORD PTR [rsp+0x40]
   140002753:	mov    r8,QWORD PTR [rsp+0x48]
   140002758:	mov    rdx,QWORD PTR [rsp+0x50]
   14000275d:	xor    ecx,ecx
   14000275f:	call   QWORD PTR [rip+0x9d3]        # 0x140003138
   140002765:	jmp    0x140002789
   140002767:	mov    rax,QWORD PTR [rsp+0x88]
   14000276f:	mov    QWORD PTR [rip+0x2aa2],rax        # 0x140005218
   140002776:	lea    rax,[rsp+0x88]
   14000277e:	add    rax,0x8
   140002782:	mov    QWORD PTR [rip+0x2a2f],rax        # 0x1400051b8
   140002789:	mov    rax,QWORD PTR [rip+0x2a88]        # 0x140005218
   140002790:	mov    QWORD PTR [rip+0x28f9],rax        # 0x140005090
   140002797:	mov    rax,QWORD PTR [rsp+0x90]
   14000279f:	mov    QWORD PTR [rip+0x29fa],rax        # 0x1400051a0
   1400027a6:	mov    DWORD PTR [rip+0x28d0],0xc0000409        # 0x140005080
   1400027b0:	mov    DWORD PTR [rip+0x28ca],0x1        # 0x140005084
   1400027ba:	mov    DWORD PTR [rip+0x28d4],0x1        # 0x140005098
   1400027c4:	mov    eax,0x8
   1400027c9:	imul   rax,rax,0x0
   1400027cd:	lea    rcx,[rip+0x28cc]        # 0x1400050a0
   1400027d4:	mov    QWORD PTR [rcx+rax*1],0x1
   1400027dc:	mov    rax,QWORD PTR [rip+0x281d]        # 0x140005000
   1400027e3:	mov    QWORD PTR [rsp+0x68],rax
   1400027e8:	mov    rax,QWORD PTR [rip+0x2819]        # 0x140005008
   1400027ef:	mov    QWORD PTR [rsp+0x70],rax
   1400027f4:	xor    ecx,ecx
   1400027f6:	call   QWORD PTR [rip+0x94c]        # 0x140003148
   1400027fc:	lea    rcx,[rip+0xa7d]        # 0x140003280
   140002803:	call   QWORD PTR [rip+0x937]        # 0x140003140
   140002809:	call   QWORD PTR [rip+0x941]        # 0x140003150
   14000280f:	mov    edx,0xc0000409
   140002814:	mov    rcx,rax
   140002817:	call   QWORD PTR [rip+0x93b]        # 0x140003158
   14000281d:	add    rsp,0x88
   140002824:	ret    
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	lea    rax,[rip+0x47f9]        # 0x140007030
   140002837:	jmp    0x140002850
   14000283c:	int3   
   14000283d:	int3   
   14000283e:	int3   
   14000283f:	int3   
   140002840:	int3   
   140002841:	int3   
   140002842:	int3   
   140002843:	int3   
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	mov    QWORD PTR [rsp+0x8],rcx
   140002855:	mov    QWORD PTR [rsp+0x10],rdx
   14000285a:	mov    QWORD PTR [rsp+0x18],r8
   14000285f:	mov    QWORD PTR [rsp+0x20],r9
   140002864:	sub    rsp,0x68
   140002868:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000286e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002874:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000287a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140002880:	mov    rdx,rax
   140002883:	lea    rcx,[rip+0x1412]        # 0x140003c9c
   14000288a:	call   0x1400020e0
   14000288f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140002895:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000289b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400028a1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400028a7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400028ac:	mov    rdx,QWORD PTR [rsp+0x78]
   1400028b1:	mov    r8,QWORD PTR [rsp+0x80]
   1400028b9:	mov    r9,QWORD PTR [rsp+0x88]
   1400028c1:	add    rsp,0x68
   1400028c5:	jmp    0x1400028c7
   1400028c7:	jmp    rax
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	lea    rax,[rip+0x4751]        # 0x140007028
   1400028d7:	jmp    0x140002850
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	int3   
   1400028e1:	int3   
   1400028e2:	int3   
   1400028e3:	int3   
   1400028e4:	int3   
   1400028e5:	int3   
   1400028e6:	int3   
   1400028e7:	int3   
   1400028e8:	int3   
   1400028e9:	int3   
   1400028ea:	int3   
   1400028eb:	int3   
   1400028ec:	int3   
   1400028ed:	int3   
   1400028ee:	int3   
   1400028ef:	int3   
   1400028f0:	lea    rax,[rip+0x4729]        # 0x140007020
   1400028f7:	jmp    0x140002850
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	int3   
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	lea    rax,[rip+0x4701]        # 0x140007018
   140002917:	jmp    0x140002850
   14000291c:	int3   
   14000291d:	int3   
   14000291e:	int3   
   14000291f:	int3   
   140002920:	int3   
   140002921:	int3   
   140002922:	int3   
   140002923:	int3   
   140002924:	int3   
   140002925:	int3   
   140002926:	int3   
   140002927:	int3   
   140002928:	int3   
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	lea    rax,[rip+0x46c9]        # 0x140007000
   140002937:	jmp    0x140002950
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	int3   
   140002941:	int3   
   140002942:	int3   
   140002943:	int3   
   140002944:	int3   
   140002945:	int3   
   140002946:	int3   
   140002947:	int3   
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	mov    QWORD PTR [rsp+0x8],rcx
   140002955:	mov    QWORD PTR [rsp+0x10],rdx
   14000295a:	mov    QWORD PTR [rsp+0x18],r8
   14000295f:	mov    QWORD PTR [rsp+0x20],r9
   140002964:	sub    rsp,0x68
   140002968:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000296e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002974:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000297a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140002980:	mov    rdx,rax
   140002983:	lea    rcx,[rip+0x1332]        # 0x140003cbc
   14000298a:	call   0x1400020e0
   14000298f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140002995:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000299b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400029a1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400029a7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400029ac:	mov    rdx,QWORD PTR [rsp+0x78]
   1400029b1:	mov    r8,QWORD PTR [rsp+0x80]
   1400029b9:	mov    r9,QWORD PTR [rsp+0x88]
   1400029c1:	add    rsp,0x68
   1400029c5:	jmp    0x1400029c7
   1400029c7:	jmp    rax
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	lea    rax,[rip+0x4631]        # 0x140007008
   1400029d7:	jmp    0x140002950
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	int3   
   1400029e1:	int3   
   1400029e2:	int3   
   1400029e3:	int3   
   1400029e4:	int3   
   1400029e5:	int3   
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	ret    0x0
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	int3   
   140002a01:	int3   
   140002a02:	int3   
   140002a03:	int3   
   140002a04:	int3   
   140002a05:	int3   
   140002a06:	int3   
   140002a07:	int3   
   140002a08:	sub    rsp,0x28
   140002a0c:	mov    r8,QWORD PTR [r9+0x38]
   140002a10:	mov    rcx,rdx
   140002a13:	mov    rdx,r9
   140002a16:	call   0x140002a2c
   140002a1b:	mov    eax,0x1
   140002a20:	add    rsp,0x28
   140002a24:	ret    
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	rex push rbx
   140002a2e:	sub    rsp,0x20
   140002a32:	mov    r11d,DWORD PTR [r8]
   140002a35:	mov    rbx,rdx
   140002a38:	and    r11d,0xfffffff8
   140002a3c:	mov    r9,rcx
   140002a3f:	test   BYTE PTR [r8],0x4
   140002a43:	mov    r10,rcx
   140002a46:	je     0x140002a5b
   140002a48:	mov    eax,DWORD PTR [r8+0x8]
   140002a4c:	movsxd r10,DWORD PTR [r8+0x4]
   140002a50:	neg    eax
   140002a52:	add    r10,rcx
   140002a55:	movsxd rcx,eax
   140002a58:	and    r10,rcx
   140002a5b:	movsxd rax,r11d
   140002a5e:	mov    rdx,QWORD PTR [rax+r10*1]
   140002a62:	mov    rax,QWORD PTR [rbx+0x10]
   140002a66:	mov    ecx,DWORD PTR [rax+0x8]
   140002a69:	add    rcx,QWORD PTR [rbx+0x8]
   140002a6d:	test   BYTE PTR [rcx+0x3],0xf
   140002a71:	je     0x140002a7f
   140002a73:	movzx  eax,BYTE PTR [rcx+0x3]
   140002a77:	and    eax,0xfffffff0
   140002a7a:	cdqe   
   140002a7c:	add    r9,rax
   140002a7f:	xor    r9,rdx
   140002a82:	mov    rcx,r9
   140002a85:	add    rsp,0x20
   140002a89:	pop    rbx
   140002a8a:	jmp    0x1400025d0
   140002a8f:	int3   
   140002a90:	int3   
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	jmp    QWORD PTR [rip+0x78c]        # 0x140003228
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	int3   
   140002aa1:	int3   
   140002aa2:	int3   
   140002aa3:	int3   
   140002aa4:	int3   
   140002aa5:	int3   
   140002aa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002ab0:	jmp    rax

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	(bad)  
   140003001:	add    BYTE PTR [rax],al
   140003004:	add    BYTE PTR [rax],al
   140003006:	add    BYTE PTR [rax],al
   140003008:	loop   0x14000304a
   14000300a:	add    BYTE PTR [rax],al
   14000300c:	add    BYTE PTR [rax],al
   14000300e:	add    BYTE PTR [rax],al
   140003010:	hlt    
   140003011:	add    BYTE PTR [rax],al
   140003014:	add    BYTE PTR [rax],al
   140003016:	add    BYTE PTR [rax],al
   140003018:	add    al,0x41
   14000301a:	add    BYTE PTR [rax],al
   14000301c:	add    BYTE PTR [rax],al
   14000301e:	add    BYTE PTR [rax],al
   140003020:	adc    al,0x41
   140003022:	add    BYTE PTR [rax],al
   140003024:	add    BYTE PTR [rax],al
   140003026:	add    BYTE PTR [rax],al
   140003028:	rol    BYTE PTR [rax+0x0],0x0
	...
   140003038:	xor    BYTE PTR [rcx+0x0],al
   14000303b:	add    BYTE PTR [rax],al
   14000303d:	add    BYTE PTR [rax],al
   14000303f:	add    BYTE PTR [rsi],bh
   140003041:	add    BYTE PTR [r8],al
   140003044:	add    BYTE PTR [rax],al
   140003046:	add    BYTE PTR [rax],al
   140003048:	push   rax
   140003049:	add    BYTE PTR [r8],al
   14000304c:	add    BYTE PTR [rax],al
   14000304e:	add    BYTE PTR [rax],al
   140003050:	(bad)  
   140003051:	add    BYTE PTR [r8],al
   140003054:	add    BYTE PTR [rax],al
   140003056:	add    BYTE PTR [rax],al
   140003058:	jo     0x14000309b
   14000305a:	add    BYTE PTR [rax],al
   14000305c:	add    BYTE PTR [rax],al
   14000305e:	add    BYTE PTR [rax],al
   140003060:	jle    0x1400030a3
   140003062:	add    BYTE PTR [rax],al
   140003064:	add    BYTE PTR [rax],al
   140003066:	add    BYTE PTR [rax],al
   140003068:	mov    al,BYTE PTR [rcx+0x0]
   14000306b:	add    BYTE PTR [rax],al
   14000306d:	add    BYTE PTR [rax],al
   14000306f:	add    BYTE PTR [rsi+0x41],dl
   140003075:	add    BYTE PTR [rax],al
   140003077:	add    BYTE PTR [rcx+rax*2+0x0],ch
   14000307e:	add    BYTE PTR [rax],al
   140003080:	mov    eax,0x41
   140003085:	add    BYTE PTR [rax],al
   140003087:	add    ah,cl
   140003089:	add    BYTE PTR [r8],al
   14000308c:	add    BYTE PTR [rax],al
   14000308e:	add    BYTE PTR [rax],al
   140003090:	loopne 0x1400030d3
   140003092:	add    BYTE PTR [rax],al
   140003094:	add    BYTE PTR [rax],al
   140003096:	add    BYTE PTR [rax],al
   140003098:	repnz add BYTE PTR [r8],al
   14000309c:	add    BYTE PTR [rax],al
   14000309e:	add    BYTE PTR [rax],al
   1400030a0:	add    al,BYTE PTR [rdx+0x0]
   1400030a3:	add    BYTE PTR [rax],al
   1400030a5:	add    BYTE PTR [rax],al
   1400030a7:	add    BYTE PTR [rdx],bl
   1400030a9:	rex.X add BYTE PTR [rax],al
   1400030ac:	add    BYTE PTR [rax],al
   1400030ae:	add    BYTE PTR [rax],al
   1400030b0:	sub    al,0x42
   1400030b2:	add    BYTE PTR [rax],al
   1400030b4:	add    BYTE PTR [rax],al
   1400030b6:	add    BYTE PTR [rax],al
   1400030b8:	cmp    BYTE PTR [rdx+0x0],al
   1400030bb:	add    BYTE PTR [rax],al
   1400030bd:	add    BYTE PTR [rax],al
   1400030bf:	add    BYTE PTR [rdx+rax*2+0x0],cl
   1400030c3:	add    BYTE PTR [rax],al
   1400030c5:	add    BYTE PTR [rax],al
   1400030c7:	add    BYTE PTR [rsi+0x42],bl
   1400030ca:	add    BYTE PTR [rax],al
   1400030cc:	add    BYTE PTR [rax],al
   1400030ce:	add    BYTE PTR [rax],al
   1400030d0:	outs   dx,BYTE PTR ds:[rsi]
   1400030d1:	rex.X add BYTE PTR [rax],al
   1400030d4:	add    BYTE PTR [rax],al
   1400030d6:	add    BYTE PTR [rax],al
   1400030d8:	add    BYTE PTR [rdx+0x0],0x0
   1400030dc:	add    BYTE PTR [rax],al
   1400030de:	add    BYTE PTR [rax],al
   1400030e0:	cwde   
   1400030e1:	rex.X add BYTE PTR [rax],al
   1400030e4:	add    BYTE PTR [rax],al
   1400030e6:	add    BYTE PTR [rax],al
   1400030e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400030e9:	rex.X add BYTE PTR [rax],al
   1400030ec:	add    BYTE PTR [rax],al
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	mov    ah,0x42
   1400030f2:	add    BYTE PTR [rax],al
   1400030f4:	add    BYTE PTR [rax],al
   1400030f6:	add    BYTE PTR [rax],al
   1400030f8:	rol    BYTE PTR [rdx+0x0],0x0
   1400030fc:	add    BYTE PTR [rax],al
   1400030fe:	add    BYTE PTR [rax],al
   140003100:	fadd   QWORD PTR [rdx+0x0]
   140003103:	add    BYTE PTR [rax],al
   140003105:	add    BYTE PTR [rax],al
   140003107:	add    dh,dh
   140003109:	rex.X add BYTE PTR [rax],al
   14000310c:	add    BYTE PTR [rax],al
   14000310e:	add    BYTE PTR [rax],al
   140003110:	or     al,0x43
   140003112:	add    BYTE PTR [rax],al
   140003114:	add    BYTE PTR [rax],al
   140003116:	add    BYTE PTR [rax],al
   140003118:	and    al,BYTE PTR [rbx+0x0]
   14000311b:	add    BYTE PTR [rax],al
   14000311d:	add    BYTE PTR [rax],al
   14000311f:	add    BYTE PTR [rbx+rax*2],bh
   140003122:	add    BYTE PTR [rax],al
   140003124:	add    BYTE PTR [rax],al
   140003126:	add    BYTE PTR [rax],al
   140003128:	rex.WR
   140003129:	rex.XB add BYTE PTR [r8],al
   14000312c:	add    BYTE PTR [rax],al
   14000312e:	add    BYTE PTR [rax],al
   140003130:	(bad)  
   140003131:	rex.XB add BYTE PTR [r8],al
   140003134:	add    BYTE PTR [rax],al
   140003136:	add    BYTE PTR [rax],al
   140003138:	jp     0x14000317d
   14000313a:	add    BYTE PTR [rax],al
   14000313c:	add    BYTE PTR [rax],al
   14000313e:	add    BYTE PTR [rax],al
   140003140:	mov    es,WORD PTR [rbx+0x0]
   140003143:	add    BYTE PTR [rax],al
   140003145:	add    BYTE PTR [rax],al
   140003147:	add    BYTE PTR [rdx+0x43],ch
   14000314d:	add    BYTE PTR [rax],al
   14000314f:	add    al,cl
   140003151:	rex.XB add BYTE PTR [r8],al
   140003154:	add    BYTE PTR [rax],al
   140003156:	add    BYTE PTR [rax],al
   140003158:	fadd   QWORD PTR [rbx+0x0]
   14000315b:	add    BYTE PTR [rax],al
   14000315d:	add    BYTE PTR [rax],al
   14000315f:	add    BYTE PTR [rsi+0x45],ch
   140003162:	add    BYTE PTR [rax],al
   140003164:	add    BYTE PTR [rax],al
   140003166:	add    BYTE PTR [rax],al
   140003168:	pop    rsp
   140003169:	add    BYTE PTR [r8],r8b
   14000316c:	add    BYTE PTR [rax],al
   14000316e:	add    BYTE PTR [rax],al
   140003170:	rex.WR
   140003171:	add    BYTE PTR [r8],r8b
   140003174:	add    BYTE PTR [rax],al
   140003176:	add    BYTE PTR [rax],al
   140003178:	cmp    al,BYTE PTR [rbp+0x0]
   14000317b:	add    BYTE PTR [rax],al
   14000317d:	add    BYTE PTR [rax],al
   14000317f:	add    BYTE PTR [rax],ah
   140003181:	add    BYTE PTR [r8],r8b
   140003184:	add    BYTE PTR [rax],al
   140003186:	add    BYTE PTR [rax],al
   140003188:	(bad)  
   140003189:	add    BYTE PTR [r8],r8b
   14000318c:	add    BYTE PTR [rax],al
   14000318e:	add    BYTE PTR [rax],al
   140003190:	test   BYTE PTR [rax+rax*1+0x0],0x0
	...
   14000319d:	add    BYTE PTR [rax],al
   14000319f:	add    BYTE PTR [rsi+0x44],bh
   1400031a2:	add    BYTE PTR [rax],al
   1400031a4:	add    BYTE PTR [rax],al
   1400031a6:	add    BYTE PTR [rax],al
   1400031a8:	xchg   edx,eax
   1400031a9:	add    BYTE PTR [rax],r8b
   1400031ac:	add    BYTE PTR [rax],al
   1400031ae:	add    BYTE PTR [rax],al
   1400031b0:	movabs ds:0xb000000000000044,al
   1400031b9:	add    BYTE PTR [rax],r8b
   1400031bc:	add    BYTE PTR [rax],al
   1400031be:	add    BYTE PTR [rax],al
   1400031c0:	mov    esp,0x44
   1400031c5:	add    BYTE PTR [rax],al
   1400031c7:	add    dl,dl
   1400031c9:	add    BYTE PTR [rax],r8b
   1400031cc:	add    BYTE PTR [rax],al
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	or     al,BYTE PTR [rax+rax*1+0x0]
   1400031d4:	add    BYTE PTR [rax],al
   1400031d6:	add    BYTE PTR [rax],al
   1400031d8:	inc    BYTE PTR [rbx+0x0]
   1400031db:	add    BYTE PTR [rax],al
   1400031dd:	add    BYTE PTR [rax],al
   1400031df:	add    BYTE PTR [rsi],ah
   1400031e1:	add    BYTE PTR [rax],r8b
   1400031e4:	add    BYTE PTR [rax],al
   1400031e6:	add    BYTE PTR [rax],al
   1400031e8:	jo     0x14000322e
   1400031ea:	add    BYTE PTR [rax],al
   1400031ec:	add    BYTE PTR [rax],al
   1400031ee:	add    BYTE PTR [rax],al
   1400031f0:	pop    rdx
   1400031f1:	add    BYTE PTR [rax],r8b
   1400031f4:	add    BYTE PTR [rax],al
   1400031f6:	add    BYTE PTR [rax],al
   1400031f8:	rex.WR
   1400031f9:	add    BYTE PTR [rax],r8b
   1400031fc:	add    BYTE PTR [rax],al
   1400031fe:	add    BYTE PTR [rax],al
   140003200:	cmp    BYTE PTR [rax+rax*1+0x0],al
	...
   140003210:	je     0x140003212
   140003212:	add    BYTE PTR [rax],al
   140003214:	add    BYTE PTR [rax],al
   140003216:	add    BYTE PTR [rax+0x73],al
   14000321c:	add    BYTE PTR [rax],al
   14000321e:	add    BYTE PTR [rax+0x0],al
   140003224:	add    BYTE PTR [rax],al
   140003226:	add    BYTE PTR [rax],al
   140003228:	add    BYTE PTR [rbp+0x0],0x0
	...
   140003238:	lock sub DWORD PTR [rax],eax
   14000323b:	rex add DWORD PTR [rax],eax
   14000323e:	add    BYTE PTR [rax],al
   140003240:	mov    al,0x2a
   140003242:	add    BYTE PTR [rax+0x1],al
   140003245:	add    BYTE PTR [rax],al
   140003247:	add    BYTE PTR [rax],dl
   140003249:	adc    BYTE PTR [rax],al
   14000324b:	add    BYTE PTR [rax-0x1fffffea],ah
   140003251:	and    BYTE PTR [rax],al
   140003253:	add    al,ah
   140003255:	add    BYTE PTR es:[rax],al
   140003258:	xor    BYTE PTR [rax],ch
   14000325a:	add    BYTE PTR [rax],al
   14000325c:	push   rax
   14000325d:	sub    BYTE PTR [rax],al
   14000325f:	add    al,dl
   140003261:	sub    BYTE PTR [rax],al
   140003263:	add    al,dh
   140003265:	sub    BYTE PTR [rax],al
   140003267:	add    BYTE PTR [rax],dl
   140003269:	sub    DWORD PTR [rax],eax
   14000326b:	add    BYTE PTR [rax],dh
   14000326d:	sub    DWORD PTR [rax],eax
   14000326f:	add    BYTE PTR [rax+0x29],dl
   140003272:	add    BYTE PTR [rax],al
   140003274:	shr    BYTE PTR [rcx],1
   140003276:	add    BYTE PTR [rax],al
   140003278:	lock sub DWORD PTR [rax],eax
   14000327b:	add    BYTE PTR [rax],al
   14000327d:	add    BYTE PTR [rax],al
   14000327f:	add    BYTE PTR [rax+0x1400050],al
   140003285:	add    BYTE PTR [rax],al
   140003287:	add    BYTE PTR [rax],ah
   140003289:	push   rcx
   14000328a:	add    BYTE PTR [rax+0x1],al
   14000328d:	add    BYTE PTR [rax],al
   14000328f:	add    BYTE PTR [rdi+0x6c],ch
   140003292:	xor    esi,DWORD PTR gs:[rdx]
   140003295:	cs fs ins BYTE PTR es:[rdi],dx
   140003298:	ins    BYTE PTR es:[rdi],dx
   140003299:	add    BYTE PTR [rax],al
   14000329b:	add    BYTE PTR [rax],al
   14000329d:	add    BYTE PTR [rax],al
   14000329f:	add    BYTE PTR [rbx+0x48],dl
   1400032a2:	rex.RB
   1400032a3:	rex.WR
   1400032a4:	xor    r14,QWORD PTR [rdx]
   1400032a7:	cs fs ins BYTE PTR es:[rdi],dx
   1400032aa:	ins    BYTE PTR es:[rdi],dx
   1400032ab:	add    BYTE PTR [rax],al
   1400032ad:	add    BYTE PTR [rax],al
   1400032af:	add    BYTE PTR [rax+0x0],ah
	...
   140003309:	push   rax
   14000330a:	add    BYTE PTR [rax+0x1],al
	...
   14000331d:	add    BYTE PTR [rax],al
   14000331f:	add    BYTE PTR [rax],bh
   140003321:	xor    al,BYTE PTR [rax]
   140003323:	rex add DWORD PTR [rax],eax
   140003326:	add    BYTE PTR [rax],al
   140003328:	xor    al,BYTE PTR [rax]
   14000332b:	rex add DWORD PTR [rax],eax
   14000332e:	add    BYTE PTR [rax],al
   140003330:	rex.W xor al,BYTE PTR [rax]
   140003333:	rex add DWORD PTR [rax],eax
   140003336:	add    BYTE PTR [rax],al
   140003338:	or     eax,0x0
   14000333d:	add    BYTE PTR [rax],al
   14000333f:	add    BYTE PTR [rax],al
   140003341:	xor    eax,0x0
	...
   14000334e:	add    BYTE PTR [rax],al
   140003350:	push   rbx
   140003351:	add    BYTE PTR [rdi+0x0],ch
   140003354:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140003359:	add    BYTE PTR [rcx+0x0],ah
   14000335c:	jb     0x14000335e
   14000335e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140003363:	add    BYTE PTR [rcx+0x0],ch
   140003366:	movsxd eax,DWORD PTR [rax]
   140003368:	jb     0x14000336a
   14000336a:	outs   dx,DWORD PTR ds:[rsi]
   14000336b:	add    BYTE PTR [rbx+0x0],dh
   14000336e:	outs   dx,DWORD PTR ds:[rsi]
   14000336f:	add    BYTE PTR [rsi+0x0],ah
   140003372:	je     0x140003374
   140003374:	pop    rsp
   140003375:	add    BYTE PTR [rbp+0x0],cl
   140003378:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   14000337d:	add    BYTE PTR [rcx+0x0],ah
   140003380:	push   rax
   140003381:	add    BYTE PTR [rax+rax*1+0x61],ch
   140003385:	add    BYTE PTR [rcx+0x0],bh
   140003388:	add    BYTE PTR gs:[rdx+0x0],dh
   14000338c:	pop    rsp
   14000338d:	add    BYTE PTR [rbx+0x0],dl
   140003390:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140003395:	add    BYTE PTR [rax+0x0],dh
	...
   1400033a0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400033a4:	jae    0x1400033a6
   1400033a6:	je     0x1400033a8
   1400033a8:	(bad)  
   1400033a9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400033ad:	add    BYTE PTR [rdx+0x0],dl
   1400033b0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400033b4:	jne    0x1400033b6
   1400033b6:	ins    BYTE PTR es:[rdi],dx
   1400033b7:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400033bb:	add    BYTE PTR [rax],al
   1400033bd:	add    BYTE PTR [rax],al
   1400033bf:	add    BYTE PTR [rdi],ch
   1400033c1:	add    BYTE PTR [rbx+0x0],dl
   1400033c4:	imul   eax,DWORD PTR [rax],0x69
   1400033c7:	add    BYTE PTR [rax+0x0],dh
   1400033ca:	rex.RX add BYTE PTR [rbp+0x0],r10b
   1400033ce:	add    BYTE PTR [r8],r8b
   1400033d1:	add    BYTE PTR [rax],al
   1400033d3:	add    BYTE PTR [rax],al
   1400033d5:	add    BYTE PTR [rax],al
   1400033d7:	add    BYTE PTR [rdi+0x0],dl
   1400033da:	rex.WRB add BYTE PTR [r8+0x0],r10b
   1400033de:	push   rax
   1400033df:	add    BYTE PTR [rbp+0x0],al
   1400033e2:	push   rdx
   1400033e3:	add    BYTE PTR [rsi+0x0],al
   1400033e6:	pop    rdi
   1400033e7:	add    BYTE PTR [rax+0x0],dl
   1400033ea:	push   rdx
   1400033eb:	add    BYTE PTR [rdi+0x0],cl
   1400033ee:	rex.XB add BYTE PTR [r15+0x0],bl
   1400033f2:	push   rbx
   1400033f3:	add    BYTE PTR [rax+rax*1+0x41],dl
   1400033f7:	add    BYTE PTR [rdx+0x0],dl
   1400033fa:	push   rsp
   1400033fb:	add    BYTE PTR [rax],al
   1400033fd:	add    BYTE PTR [rax],al
   1400033ff:	add    BYTE PTR [rdi],ch
   140003401:	add    BYTE PTR [rbx+0x0],dl
   140003404:	jne    0x140003406
   140003406:	jo     0x140003408
   140003408:	jo     0x14000340a
   14000340a:	jb     0x14000340c
   14000340c:	add    BYTE PTR gs:[rbx+0x0],dh
   140003410:	jae    0x140003412
   140003412:	add    BYTE PTR [rcx+0x0],r13b
   140003416:	(bad)  
   140003417:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000341b:	add    BYTE PTR [rdi+0x0],ah
   14000341e:	jae    0x140003420
	...
   140003430:	(bad)  
   140003431:	add    BYTE PTR [rbx+0x0],dl
   140003434:	(bad)  
   140003435:	add    BYTE PTR [rsi+0x0],ah
   140003438:	add    BYTE PTR gs:[rbp+0x0],cl
   14000343c:	outs   dx,DWORD PTR ds:[rsi]
   14000343d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140003441:	add    BYTE PTR [rdi+0x0],cl
   140003444:	rex.WXB add BYTE PTR [r8],al
   140003447:	add    BYTE PTR [rbx+0x0],ah
   14000344a:	outs   dx,DWORD PTR ds:[rsi]
   14000344b:	add    BYTE PTR [rbp+0x0],ch
   14000344e:	movsxd eax,DWORD PTR [rax]
   140003450:	je     0x140003452
   140003452:	ins    BYTE PTR es:[rdi],dx
   140003453:	add    BYTE PTR [rbx],dh
   140003455:	add    BYTE PTR [rdx],dh
   140003457:	add    BYTE PTR [rsi],ch
   140003459:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000345d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140003461:	add    BYTE PTR [rax],al
   140003463:	add    BYTE PTR [rax],al
   140003465:	add    BYTE PTR [rax],al
   140003467:	add    BYTE PTR [rdi+0x0],dl
   14000346a:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000346e:	and    BYTE PTR [rax],al
   140003470:	push   rbx
   140003471:	add    BYTE PTR [rbx+0x0],ch
   140003474:	imul   eax,DWORD PTR [rax],0x20006e
   14000347a:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000347e:	jae    0x140003480
   140003480:	je     0x140003482
	...
   14000348e:	add    BYTE PTR [rax],al
   140003490:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140003494:	movsxd eax,DWORD PTR [rax]
   140003496:	jb     0x140003498
   140003498:	outs   dx,DWORD PTR ds:[rsi]
   140003499:	add    BYTE PTR [rbx+0x0],dh
   14000349c:	outs   dx,DWORD PTR ds:[rsi]
   14000349d:	add    BYTE PTR [rsi+0x0],ah
   1400034a0:	je     0x1400034a2
   1400034a2:	add    BYTE PTR cs:[rdi+0x0],dl
   1400034a6:	imul   eax,DWORD PTR [rax],0x64006e
   1400034ac:	outs   dx,DWORD PTR ds:[rsi]
   1400034ad:	add    BYTE PTR [rdi+0x0],dh
   1400034b0:	jae    0x1400034b2
   1400034b2:	add    BYTE PTR cs:[rbp+0x0],cl
   1400034b6:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   1400034bb:	add    BYTE PTR [rcx+0x0],ah
   1400034be:	push   rax
   1400034bf:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400034c3:	add    BYTE PTR [rcx+0x0],bh
   1400034c6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400034ca:	add    BYTE PTR ss:[rax+rax*1],dh
   1400034ce:	add    BYTE PTR [rax],al
   1400034d0:	outs   dx,DWORD PTR ds:[rsi]
   1400034d1:	add    BYTE PTR [rax+0x0],dh
   1400034d4:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   1400034e0:	ja     0x1400034e2
   1400034e2:	ins    DWORD PTR es:[rdi],dx
   1400034e3:	add    BYTE PTR [rax+0x0],dh
   1400034e6:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400034eb:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400034ef:	add    BYTE PTR [rsp+rbp*2+0x6c],al
   1400034f3:	rex.XB (bad) 
   1400034f5:	outs   dx,BYTE PTR ds:[rsi]
   1400034f6:	push   rbp
   1400034f7:	outs   dx,BYTE PTR ds:[rsi]
   1400034f8:	ins    BYTE PTR es:[rdi],dx
   1400034f9:	outs   dx,DWORD PTR ds:[rsi]
   1400034fa:	(bad)  
   1400034fb:	rex.WRX outs dx,DWORD PTR fs:[rsi]
   1400034fe:	ja     0x140003500
   140003500:	and    eax,0x79005300
   140003505:	add    BYTE PTR [rbx+0x0],dh
   140003508:	je     0x14000350a
   14000350a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000350e:	push   rdx
   14000350f:	add    BYTE PTR [rdi+0x0],ch
   140003512:	outs   dx,DWORD PTR ds:[rsi]
   140003513:	add    BYTE PTR [rax+rax*1+0x25],dh
   140003517:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000351b:	add    BYTE PTR [rcx+0x0],bh
   14000351e:	jae    0x140003520
   140003520:	je     0x140003522
   140003522:	add    BYTE PTR gs:[rbp+0x0],ch
   140003526:	xor    eax,DWORD PTR [rax]
   140003528:	xor    al,BYTE PTR [rax]
   14000352a:	add    BYTE PTR [rax],al
   14000352c:	add    BYTE PTR [rax],al
   14000352e:	add    BYTE PTR [rax],al
   140003530:	jne    0x140003532
   140003532:	outs   dx,BYTE PTR ds:[rsi]
   140003533:	add    BYTE PTR [rdx+0x0],dh
   140003536:	add    BYTE PTR gs:[rdi+0x0],ah
   14000353a:	ins    DWORD PTR es:[rdi],dx
   14000353b:	add    BYTE PTR [rax+0x0],dh
   14000353e:	xor    al,BYTE PTR [rax]
   140003540:	add    BYTE PTR cs:[rbp+0x0],ah
   140003544:	js     0x140003546
   140003546:	add    BYTE PTR gs:[rax],al
   140003549:	add    BYTE PTR [rax],al
   14000354b:	add    BYTE PTR [rax],al
   14000354d:	add    BYTE PTR [rax],al
   14000354f:	add    BYTE PTR [rcx],dh
   140003551:	add    BYTE PTR [rax],al
   140003553:	add    BYTE PTR [rsi+riz*1],al
   140003556:	add    DWORD PTR [rax],eax
   140003558:	add    BYTE PTR [rax],al
   14000355a:	add    DWORD PTR [rax],eax
   14000355c:	add    BYTE PTR [rax],al
   14000355e:	add    BYTE PTR [rax],al
   140003560:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140003564:	movsxd eax,DWORD PTR [rax]
   140003566:	(bad)  
   140003567:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000356b:	add    BYTE PTR [rbp+0x0],cl
   14000356e:	imul   eax,DWORD PTR [rax],0x720063
   140003574:	outs   dx,DWORD PTR ds:[rsi]
   140003575:	add    BYTE PTR [rbx+0x0],dh
   140003578:	outs   dx,DWORD PTR ds:[rsi]
   140003579:	add    BYTE PTR [rsi+0x0],ah
   14000357c:	je     0x14000357e
   14000357e:	pop    rdi
   14000357f:	add    BYTE PTR [rdi+0x0],dl
   140003582:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140003586:	pop    rdi
   140003587:	add    BYTE PTR [rdi],dh
   140003589:	add    BYTE PTR [rax],dh
   14000358b:	add    BYTE PTR [rdi+0x0],bl
   14000358e:	rex.XB add BYTE PTR [r8+0x0],bpl
   140003592:	add    BYTE PTR gs:[rbx+0x0],ah
   140003596:	imul   eax,DWORD PTR [rax],0x46
   140003599:	add    BYTE PTR [rdi+0x0],ch
   14000359c:	jb     0x14000359e
   14000359e:	rex.WRXB add BYTE PTR [r8+r8*1+0x68],r14b
   1400035a3:	add    BYTE PTR [rbp+0x0],ah
   1400035a6:	jb     0x1400035a8
   1400035a8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400035ac:	jae    0x1400035ae
   1400035ae:	je     0x1400035b0
   1400035b0:	(bad)  
   1400035b1:	add    BYTE PTR [rsi+0x0],ch
   1400035b4:	movsxd eax,DWORD PTR [rax]
   1400035b6:	add    BYTE PTR gs:[rbp+0x0],cl
   1400035ba:	jne    0x1400035bc
   1400035bc:	je     0x1400035be
   1400035be:	add    BYTE PTR gs:[rax+0x0],bh
   1400035c2:	add    BYTE PTR [rax],al
   1400035c4:	add    BYTE PTR [rax],al
   1400035c6:	add    BYTE PTR [rax],al
   1400035c8:	push   rdi
   1400035c9:	add    BYTE PTR [rcx+0x0],ch
   1400035cc:	outs   dx,BYTE PTR ds:[rsi]
   1400035cd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400035d1:	add    BYTE PTR [rdi+0x0],dh
   1400035d4:	jae    0x1400035d6
   1400035d6:	and    BYTE PTR [rax],al
   1400035d8:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400035dc:	add    BYTE PTR fs:[rcx+0x0],ch
   1400035e0:	(bad)  
   1400035e1:	add    BYTE PTR [rax],ah
   1400035e3:	add    BYTE PTR [rax+0x0],dl
   1400035e6:	ins    BYTE PTR es:[rdi],dx
   1400035e7:	add    BYTE PTR [rcx+0x0],ah
   1400035ea:	jns    0x1400035ec
   1400035ec:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140003600:	push   rbx
   140003601:	add    BYTE PTR [rdi+0x0],cl
   140003604:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140003609:	add    BYTE PTR [rcx+0x0],al
   14000360c:	push   rdx
   14000360d:	add    BYTE PTR [rbp+0x0],al
   140003610:	pop    rsp
   140003611:	add    BYTE PTR [rbp+0x0],cl
   140003614:	imul   eax,DWORD PTR [rax],0x720063
   14000361a:	outs   dx,DWORD PTR ds:[rsi]
   14000361b:	add    BYTE PTR [rbx+0x0],dh
   14000361e:	outs   dx,DWORD PTR ds:[rsi]
   14000361f:	add    BYTE PTR [rsi+0x0],ah
   140003622:	je     0x140003624
   140003624:	pop    rsp
   140003625:	add    BYTE PTR [rdi+0x0],dl
   140003628:	imul   eax,DWORD PTR [rax],0x64006e
   14000362e:	outs   dx,DWORD PTR ds:[rsi]
   14000362f:	add    BYTE PTR [rdi+0x0],dh
   140003632:	jae    0x140003634
   140003634:	pop    rsp
   140003635:	add    BYTE PTR [rbx+0x0],al
   140003638:	jne    0x14000363a
   14000363a:	jb     0x14000363c
   14000363c:	jb     0x14000363e
   14000363e:	add    BYTE PTR gs:[rsi+0x0],ch
   140003642:	je     0x140003644
   140003644:	push   rsi
   140003645:	add    BYTE PTR [rbp+0x0],ah
   140003648:	jb     0x14000364a
   14000364a:	jae    0x14000364c
   14000364c:	imul   eax,DWORD PTR [rax],0x6e006f
   140003652:	pop    rsp
   140003653:	add    BYTE PTR [rcx+0x0],al
   140003656:	jo     0x140003658
   140003658:	jo     0x14000365a
   14000365a:	and    BYTE PTR [rax],al
   14000365c:	push   rax
   14000365d:	add    BYTE PTR [rcx+0x0],ah
   140003660:	je     0x140003662
   140003662:	push   0x5c007300
   140003667:	add    BYTE PTR [rdi+0x0],dh
   14000366a:	ins    DWORD PTR es:[rdi],dx
   14000366b:	add    BYTE PTR [rax+0x0],dh
   14000366e:	ins    BYTE PTR es:[rdi],dx
   14000366f:	add    BYTE PTR [rcx+0x0],ah
   140003672:	jns    0x140003674
   140003674:	add    BYTE PTR gs:[rdx+0x0],dh
   140003678:	add    BYTE PTR cs:[rbp+0x0],ah
   14000367c:	js     0x14000367e
   14000367e:	add    BYTE PTR gs:[rax],al
   140003681:	add    BYTE PTR [rax],al
   140003683:	add    BYTE PTR [rax],al
   140003685:	add    BYTE PTR [rax],al
   140003687:	add    BYTE PTR [rax],dh
   140003689:	add    BYTE PTR [rax],al
   14000368b:	add    BYTE PTR ds:0x1,al
   140003692:	add    DWORD PTR [rax],eax
   140003694:	add    BYTE PTR [rax],al
   140003696:	add    BYTE PTR [rax],al
   140003698:	(bad)  
   140003699:	add    BYTE PTR [rcx+0x0],al
   14000369c:	jae    0x14000369e
   14000369e:	jns    0x1400036a0
   1400036a0:	outs   dx,BYTE PTR ds:[rsi]
   1400036a1:	add    BYTE PTR [rbx+0x0],ah
   1400036a4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400036a8:	jb     0x1400036aa
   1400036aa:	jae    0x1400036ac
   1400036ac:	je     0x1400036ae
   1400036ae:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400036b2:	add    BYTE PTR [edi+0x0],ch
   1400036b6:	outs   dx,BYTE PTR ds:[rsi]
	...
   1400036bf:	add    BYTE PTR [rbx+0x0],dl
   1400036c2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400036c6:	push   rsp
   1400036c7:	add    BYTE PTR [rdi+0x0],dl
   1400036ca:	add    BYTE PTR [r10+0x0],dl
   1400036ce:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   1400036d3:	add    BYTE PTR [rcx+0x0],ch
   1400036d6:	movsxd eax,DWORD PTR [rax]
   1400036d8:	jb     0x1400036da
   1400036da:	outs   dx,DWORD PTR ds:[rsi]
   1400036db:	add    BYTE PTR [rbx+0x0],dh
   1400036de:	outs   dx,DWORD PTR ds:[rsi]
   1400036df:	add    BYTE PTR [rsi+0x0],ah
   1400036e2:	je     0x1400036e4
   1400036e4:	pop    rsp
   1400036e5:	add    BYTE PTR [rbp+0x0],cl
   1400036e8:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   1400036ed:	add    BYTE PTR [rcx+0x0],ah
   1400036f0:	push   rax
   1400036f1:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400036f5:	add    BYTE PTR [rcx+0x0],bh
   1400036f8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400036fc:	pop    rsp
   1400036fd:	add    BYTE PTR [rax+0x0],dl
   140003700:	jb     0x140003702
   140003702:	add    BYTE PTR gs:[rsi+0x0],ah
   140003706:	add    BYTE PTR gs:[rdx+0x0],dh
   14000370a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000370e:	movsxd eax,DWORD PTR [rax]
   140003710:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   140003720:	(bad)  
   140003721:	add    BYTE PTR [rdx+0x0],dl
   140003724:	jne    0x140003726
   140003726:	outs   dx,BYTE PTR ds:[rsi]
   140003727:	add    BYTE PTR [rdi+0x0],cl
   14000372a:	outs   dx,BYTE PTR ds:[rsi]
   14000372b:	add    BYTE PTR [rbx+0x0],ah
   14000372e:	add    BYTE PTR gs:[rdx],bh
	...
   140003741:	add    BYTE PTR [rcx],al
	...
   14000374f:	add    BYTE PTR [rax],al
   140003751:	add    BYTE PTR [rdx],al
   140003753:	add    BYTE PTR [rax],al
   140003755:	add    BYTE PTR [rax],al
   140003757:	add    BYTE PTR [rax],al
   140003759:	add    BYTE PTR [rax+rax*1],al
   14000375c:	add    BYTE PTR [rax],al
   14000375e:	add    BYTE PTR [rax],al
   140003760:	add    BYTE PTR [rax],al
   140003762:	or     BYTE PTR [rax],al
   140003764:	add    BYTE PTR [rax],al
   140003766:	add    BYTE PTR [rax],al
   140003768:	add    BYTE PTR [rax],al
   14000376a:	adc    BYTE PTR [rax],al
   14000376c:	add    BYTE PTR [rax],al
   14000376e:	add    BYTE PTR [rax],al
   140003770:	add    BYTE PTR [rax],al
   140003772:	add    DWORD PTR [rax],eax
   140003774:	add    BYTE PTR [rax],al
   140003776:	add    DWORD PTR [rax],eax
   140003778:	add    BYTE PTR [rax],al
   14000377a:	add    DWORD PTR [rax],eax
   14000377c:	add    BYTE PTR [rax],al
   14000377e:	add    BYTE PTR [rax+0x0],al
   140003784:	add    BYTE PTR [rax],al
   140003786:	add    DWORD PTR [rax],eax
	...
   140003790:	push   0x74007400
   140003795:	add    BYTE PTR [rax+0x0],dh
   140003798:	cmp    al,BYTE PTR [rax]
   14000379a:	(bad)  
   14000379b:	add    BYTE PTR [rdi],ch
   14000379d:	add    BYTE PTR [rdi+0x0],ah
   1400037a0:	outs   dx,DWORD PTR ds:[rsi]
   1400037a1:	add    BYTE PTR [rsi],ch
   1400037a3:	add    BYTE PTR [rbp+0x0],ch
   1400037a6:	imul   eax,DWORD PTR [rax],0x720063
   1400037ac:	outs   dx,DWORD PTR ds:[rsi]
   1400037ad:	add    BYTE PTR [rbx+0x0],dh
   1400037b0:	outs   dx,DWORD PTR ds:[rsi]
   1400037b1:	add    BYTE PTR [rsi+0x0],ah
   1400037b4:	je     0x1400037b6
   1400037b6:	add    BYTE PTR cs:[rbx+0x0],ah
   1400037ba:	outs   dx,DWORD PTR ds:[rsi]
   1400037bb:	add    BYTE PTR [rbp+0x0],ch
   1400037be:	(bad)  
   1400037bf:	add    BYTE PTR [rsi+0x0],ah
   1400037c2:	ja     0x1400037c4
   1400037c4:	ins    BYTE PTR es:[rdi],dx
   1400037c5:	add    BYTE PTR [rcx+0x0],ch
   1400037c8:	outs   dx,BYTE PTR ds:[rsi]
   1400037c9:	add    BYTE PTR [rbx+0x0],ch
   1400037cc:	(bad)  
   1400037cd:	add    BYTE PTR [rdi],bh
   1400037cf:	add    BYTE PTR [rax+rax*1+0x69],cl
   1400037d3:	add    BYTE PTR [rsi+0x0],ch
   1400037d6:	imul   eax,DWORD PTR [rax],0x49
   1400037d9:	add    BYTE PTR [rax+rax*1+0x3d],ah
   1400037dd:	add    BYTE PTR [rcx],bh
   1400037df:	add    BYTE PTR [rcx],bh
   1400037e1:	add    BYTE PTR [rcx],bh
   1400037e3:	add    BYTE PTR [rsi],dh
   1400037e5:	add    BYTE PTR [rax],al
   1400037e7:	add    BYTE PTR [rax+0x0],dl
   1400037ea:	(bad)  
   1400037eb:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   1400037f7:	add    BYTE PTR [rax+0x0],dl
   1400037fa:	ins    BYTE PTR es:[rdi],dx
   1400037fb:	add    BYTE PTR [rcx+0x0],ah
   1400037fe:	jns    0x140003800
   140003800:	ins    BYTE PTR es:[rdi],dx
   140003801:	add    BYTE PTR [rcx+0x0],ch
   140003804:	jae    0x140003806
   140003806:	je     0x140003808
   140003808:	rex.WB add BYTE PTR [r13+0x0],bpl
   14000380c:	jo     0x14000380e
   14000380e:	outs   dx,DWORD PTR ds:[rsi]
   14000380f:	add    BYTE PTR [rdx+0x0],dh
   140003812:	je     0x140003814
   140003814:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003818:	ins    DWORD PTR es:[rdi],dx
   140003819:	add    BYTE PTR [rax+0x0],dh
   14000381c:	ins    BYTE PTR es:[rdi],dx
   14000381d:	add    BYTE PTR [rbp+0x0],ah
   140003820:	je     0x140003822
   140003822:	add    BYTE PTR gs:[rax],al
   140003825:	add    BYTE PTR [rax],al
   140003827:	add    BYTE PTR [rdi+0x0],dl
   14000382a:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000382e:	ins    BYTE PTR es:[rdi],dx
   14000382f:	add    BYTE PTR [rcx+0x0],ah
   140003832:	jns    0x140003834
   140003834:	add    BYTE PTR gs:[rdx+0x0],dh
   140003838:	add    BYTE PTR [r8+0x0],sil
   14000383c:	jo     0x14000383e
   14000383e:	add    BYTE PTR [rax],al
   140003840:	add    BYTE PTR [r11+0x0],spl
   140003844:	movsxd eax,DWORD PTR [rax]
   140003846:	add    BYTE PTR gs:[rax+0x0],dh
   14000384a:	je     0x14000384c
   14000384c:	add    BYTE PTR gs:[rax+rax*1+0x50],ah
   140003851:	add    BYTE PTR [rdx+0x0],dh
   140003854:	imul   eax,DWORD PTR [rax],0x610076
   14000385a:	movsxd eax,DWORD PTR [rax]
   14000385c:	jns    0x14000385e
   14000385e:	push   rbx
   14000385f:	add    BYTE PTR [rax+rax*1+0x61],dh
   140003863:	add    BYTE PTR [rax+rax*1+0x65],dh
   140003867:	add    BYTE PTR [rbp+0x0],ch
   14000386a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000386e:	je     0x140003870
	...
   140003880:	push   rbx
   140003881:	add    BYTE PTR [rdi+0x0],cl
   140003884:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140003889:	add    BYTE PTR [rcx+0x0],al
   14000388c:	push   rdx
   14000388d:	add    BYTE PTR [rbp+0x0],al
   140003890:	pop    rsp
   140003891:	add    BYTE PTR [rax+0x0],dl
   140003894:	outs   dx,DWORD PTR ds:[rsi]
   140003895:	add    BYTE PTR [rax+rax*1+0x69],ch
   140003899:	add    BYTE PTR [rbx+0x0],ah
   14000389c:	imul   eax,DWORD PTR [rax],0x730065
   1400038a2:	pop    rsp
   1400038a3:	add    BYTE PTR [rbp+0x0],cl
   1400038a6:	imul   eax,DWORD PTR [rax],0x720063
   1400038ac:	outs   dx,DWORD PTR ds:[rsi]
   1400038ad:	add    BYTE PTR [rbx+0x0],dh
   1400038b0:	outs   dx,DWORD PTR ds:[rsi]
   1400038b1:	add    BYTE PTR [rsi+0x0],ah
   1400038b4:	je     0x1400038b6
   1400038b6:	pop    rsp
   1400038b7:	add    BYTE PTR [rdi+0x0],dl
   1400038ba:	imul   eax,DWORD PTR [rax],0x64006e
   1400038c0:	outs   dx,DWORD PTR ds:[rsi]
   1400038c1:	add    BYTE PTR [rdi+0x0],dh
   1400038c4:	jae    0x1400038c6
   1400038c6:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400038ca:	add    BYTE PTR fs:[rcx+0x0],ch
   1400038ce:	(bad)  
   1400038cf:	add    BYTE PTR [rax+0x0],dl
   1400038d2:	ins    BYTE PTR es:[rdi],dx
   1400038d3:	add    BYTE PTR [rcx+0x0],ah
   1400038d6:	jns    0x1400038d8
   1400038d8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400038dc:	add    BYTE PTR [rax],al
   1400038de:	add    BYTE PTR [rax],al
   1400038e0:	jae    0x1400038e2
   1400038e2:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400038e7:	add    BYTE PTR [rax+0x0],dh
   1400038ea:	pop    rdi
   1400038eb:	add    BYTE PTR [rdi+0x0],dh
   1400038ee:	ins    DWORD PTR es:[rdi],dx
   1400038ef:	add    BYTE PTR [rsi],ch
   1400038f1:	add    BYTE PTR [rbp+0x0],ah
   1400038f4:	js     0x1400038f6
   1400038f6:	add    BYTE PTR gs:[rax],al
   1400038f9:	add    BYTE PTR [rax],al
   1400038fb:	add    BYTE PTR [rax],al
   1400038fd:	add    BYTE PTR [rax],al
   1400038ff:	add    BYTE PTR [rdi+0x0],al
   140003902:	jb     0x140003904
   140003904:	outs   dx,DWORD PTR ds:[rsi]
   140003905:	add    BYTE PTR [rbp+0x0],dh
   140003908:	jo     0x14000390a
   14000390a:	push   rax
   14000390b:	add    BYTE PTR [rdx+0x0],dh
   14000390e:	imul   eax,DWORD PTR [rax],0x610076
   140003914:	movsxd eax,DWORD PTR [rax]
   140003916:	jns    0x140003918
   140003918:	add    BYTE PTR [r11+0x0],spl
   14000391c:	movsxd eax,DWORD PTR [rax]
   14000391e:	add    BYTE PTR gs:[rax+0x0],dh
   140003922:	je     0x140003924
   140003924:	(bad)  
   140003925:	add    BYTE PTR [rsi+0x0],ch
   140003928:	movsxd eax,DWORD PTR [rax]
   14000392a:	add    BYTE PTR gs:[rax],al
   14000392d:	add    BYTE PTR [rax],al
   14000392f:	add    bl,dh
   140003931:	rex.WRXB icebp 
   140003933:	repz cmp BYTE PTR [rbx+0x68],0x48
   140003938:	xchg   ecx,eax
   140003939:	rcl    bh,1
   14000393b:	jle    0x140003986
   14000393d:	jnp    0x140003941
   14000393f:	pop    rsi
   140003940:	add    al,0x4
   140003942:	add    al,0x4
   140003944:	add    al,0x4
   140003946:	add    al,0x4
   140003948:	add    al,0x0
	...
   140003962:	add    BYTE PTR [rax],al
   140003964:	xchg   BYTE PTR [rax],bh
   140003966:	lahf   
   140003967:	push   rbp
   140003968:	add    BYTE PTR [rax],al
   14000396a:	add    BYTE PTR [rax],al
   14000396c:	add    al,BYTE PTR [rax]
   14000396e:	add    BYTE PTR [rax],al
   140003970:	and    eax,0xb4000000
   140003975:	cmp    DWORD PTR [rax],eax
   140003977:	add    BYTE PTR [rcx+rbp*1+0x0],dh
   14000397e:	add    BYTE PTR [rax],al
   140003980:	xchg   BYTE PTR [rax],bh
   140003982:	lahf   
   140003983:	push   rbp
   140003984:	add    BYTE PTR [rax],al
   140003986:	add    BYTE PTR [rax],al
   140003988:	or     eax,0xbc000000
   14000398d:	add    DWORD PTR [rax],eax
   14000398f:	add    al,dh
   140003991:	cmp    DWORD PTR [rax],eax
   140003993:	add    al,dh
   140003995:	sub    DWORD PTR [rax],eax
	...
   1400039b3:	add    BYTE PTR [rdx+0x53],dl
   1400039b6:	rex.R push rbx
   1400039b8:	rex.WXB movabs r9,0xc0ad4d00d300ecf7
   1400039c2:	xlat   BYTE PTR ds:[rbx]
   1400039c3:	fs xor dh,dh
   1400039c6:	and    esp,DWORD PTR [rdx+0x1]
   1400039cc:	ja     0x140003a3b
   1400039ce:	jo     0x140003a3c
   1400039d0:	(bad)  
   1400039d1:	jns    0x140003a38
   1400039d3:	jb     0x140003a03
   1400039d5:	jo     0x140003a3b
   1400039d7:	(bad)  
	...
   1400039f0:	rex.RXB
   1400039f1:	rex.XB push r12
   1400039f3:	rex.WR add BYTE PTR [rax],r10b
   1400039f6:	add    BYTE PTR [rax],al
   1400039f8:	pushf  
   1400039f9:	sbb    al,BYTE PTR [rax]
   1400039fb:	add    BYTE PTR [rsi],ch
   1400039fd:	je     0x140003a64
   1400039ff:	js     0x140003a75
   140003a01:	and    al,0x6d
   140003a03:	outs   dx,BYTE PTR ds:[rsi]
   140003a04:	add    BYTE PTR [rax],al
   140003a06:	add    BYTE PTR [rax],al
   140003a08:	movabs al,ds:0x2e0000001200002a
   140003a11:	je     0x140003a78
   140003a13:	js     0x140003a89
   140003a15:	and    al,0x6d
   140003a17:	outs   dx,BYTE PTR ds:[rsi]
   140003a18:	and    al,0x30
   140003a1a:	xor    BYTE PTR [rax],al
   140003a1c:	add    BYTE PTR [rax],dh
   140003a1e:	add    BYTE PTR [rax],al
   140003a20:	cmp    BYTE PTR [rdx],al
   140003a22:	add    BYTE PTR [rax],al
   140003a24:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140003a2d:	add    BYTE PTR [rax],al
   140003a2f:	add    BYTE PTR [rax],bh
   140003a31:	xor    al,BYTE PTR [rax]
   140003a33:	add    BYTE PTR [rax],dl
   140003a35:	add    BYTE PTR [rax],al
   140003a37:	add    BYTE PTR [rsi],ch
   140003a39:	xor    BYTE PTR [rax],dh
   140003a3b:	movsxd esp,DWORD PTR [rsi+0x67]
   140003a3e:	add    BYTE PTR [rax],al
   140003a40:	rex.W xor al,BYTE PTR [rax]
   140003a43:	add    BYTE PTR [rax+rax*1],dh
   140003a46:	add    BYTE PTR [rax],al
   140003a48:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140003a51:	add    BYTE PTR [rax],al
   140003a53:	add    BYTE PTR [rax+0x34000032],al
   140003a59:	(bad)  
   140003a5a:	add    BYTE PTR [rax],al
   140003a5c:	cs jb  0x140003ac3
   140003a5f:	(bad)  
   140003a60:	je     0x140003ac3
   140003a62:	add    BYTE PTR [rax],al
   140003a64:	mov    ah,0x39
   140003a66:	add    BYTE PTR [rax],al
   140003a68:	clc    
   140003a69:	add    DWORD PTR [rax],eax
   140003a6b:	add    BYTE PTR [rsi],ch
   140003a6d:	jb     0x140003ad3
   140003a6f:	(bad)  
   140003a70:	je     0x140003ad3
   140003a72:	and    al,0x7a
   140003a74:	jp     0x140003af0
   140003a76:	fs (bad) 
   140003a78:	add    BYTE PTR [eax],al
   140003a7b:	add    BYTE PTR [rax-0x13ffffc5],dh
   140003a81:	add    BYTE PTR [rax],al
   140003a83:	add    BYTE PTR [rsi],ch
   140003a85:	js     0x140003aeb
   140003a87:	(bad)  
   140003a88:	je     0x140003aeb
   140003a8a:	add    BYTE PTR [rax],al
   140003a8c:	pushf  
   140003a8d:	cmp    al,0x0
   140003a8f:	add    BYTE PTR [rax+0x0],al
   140003a92:	add    BYTE PTR [rax],al
   140003a94:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140003a9e:	add    BYTE PTR [rax],al
   140003aa0:	fdivr  QWORD PTR [rax+rax*1]
   140003aa3:	add    BYTE PTR [rax],ah
   140003aa5:	add    BYTE PTR [rax],al
   140003aa7:	add    BYTE PTR [rsi],ch
   140003aa9:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140003ab2:	add    BYTE PTR [rax],al
   140003ab4:	add    BYTE PTR [rip+0x400000],bh        # 0x140403aba
   140003aba:	add    BYTE PTR [rax],al
   140003abc:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140003ac6:	add    BYTE PTR [rax],al
   140003ac8:	rex cmp eax,0x8c0000
   140003ace:	add    BYTE PTR [rax],al
   140003ad0:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140003ada:	add    BYTE PTR [rax],al
   140003adc:	sar    BYTE PTR [rip+0x400000],1        # 0x140403ae2
   140003ae2:	add    BYTE PTR [rax],al
   140003ae4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140003aee:	add    BYTE PTR [rax],al
   140003af0:	adc    BYTE PTR [rsi],bh
   140003af2:	add    BYTE PTR [rax],al
   140003af4:	add    BYTE PTR fs:[rax],al
   140003af7:	add    BYTE PTR [rsi],ch
   140003af9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140003b01:	add    BYTE PTR [rax],al
   140003b03:	add    BYTE PTR [rsi+rdi*1+0x0],dh
   140003b07:	add    BYTE PTR [rax+rax*1],dl
   140003b0a:	add    BYTE PTR [rax],al
   140003b0c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140003b15:	add    BYTE PTR [rax],al
   140003b17:	add    BYTE PTR [rax+0x3800003e],cl
   140003b1d:	add    al,BYTE PTR [rax]
   140003b1f:	add    BYTE PTR [rsi],ch
   140003b21:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140003b29:	add    BYTE PTR [rax],al
   140003b2b:	add    al,al
   140003b2d:	add    BYTE PTR [rax],al
   140003b30:	(bad)  
   140003b31:	add    al,0x0
   140003b33:	add    BYTE PTR [rsi],ch
   140003b35:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140003b3d:	add    BYTE PTR [rax],al
   140003b3f:	add    BYTE PTR [rax],al
   140003b41:	push   rax
   140003b42:	add    BYTE PTR [rax],al
   140003b44:	pop    rax
   140003b45:	add    BYTE PTR [rax],al
   140003b47:	add    BYTE PTR [rsi],ch
   140003b49:	fs (bad) 
   140003b4b:	je     0x140003bae
   140003b4d:	add    BYTE PTR [rax],al
   140003b4f:	add    BYTE PTR [rax-0x1bffffb0],al
   140003b55:	add    eax,0x622e0000
   140003b5a:	jae    0x140003bcf
   140003b5c:	add    BYTE PTR [rax],al
   140003b5e:	add    BYTE PTR [rax],al
   140003b60:	add    BYTE PTR [rax+0x0],ah
   140003b63:	add    ah,ah
   140003b65:	add    BYTE PTR [rax],al
   140003b67:	add    BYTE PTR [rsi],ch
   140003b69:	jo     0x140003bcf
   140003b6b:	(bad)  
   140003b6c:	je     0x140003bcf
   140003b6e:	add    BYTE PTR [rax],al
   140003b70:	add    BYTE PTR [rax+0x0],dh
   140003b73:	add    BYTE PTR [rax+0x0],al
   140003b76:	add    BYTE PTR [rax],al
   140003b78:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140003b82:	add    BYTE PTR [rax],al
   140003b84:	add    BYTE PTR [rax+0x70c0000],al
   140003b8a:	add    BYTE PTR [rax],al
   140003b8c:	cs jb  0x140003c02
   140003b8f:	jb     0x140003bf4
   140003b91:	and    al,0x30
   140003b93:	xor    DWORD PTR [rax],eax
   140003b95:	add    BYTE PTR [rax],al
   140003b97:	add    BYTE PTR [rax],dl
   140003b99:	xchg   DWORD PTR [rax],eax
   140003b9b:	add    BYTE PTR [rax],bl
   140003b9d:	push   rdx
   140003b9e:	add    al,BYTE PTR [rax]
   140003ba0:	cs jb  0x140003c16
   140003ba3:	jb     0x140003c08
   140003ba5:	and    al,0x30
   140003ba7:	xor    al,BYTE PTR [rax]
   140003ba9:	add    BYTE PTR [rax],al
   140003bab:	add    BYTE PTR [rax],al
   140003bad:	add    BYTE PTR [rax],al
   140003baf:	add    BYTE PTR [rcx],al
   140003bb1:	or     al,BYTE PTR [rax+rax*1]
   140003bb4:	or     dh,BYTE PTR [rsi+rax*1]
   140003bb7:	add    BYTE PTR [rdx],cl
   140003bb9:	xor    al,BYTE PTR [rsi]
   140003bbb:	jo     0x140003bbe
   140003bbd:	add    al,0x1
   140003bbf:	add    BYTE PTR [rdx+rax*2],al
   140003bc2:	add    BYTE PTR [rax],al
   140003bc4:	add    DWORD PTR [rdx],edx
   140003bc6:	or     BYTE PTR [rax],al
   140003bc8:	adc    dl,BYTE PTR [rcx+rdx*1+0x0]
   140003bcc:	adc    dh,BYTE PTR [rax+rdx*1]
   140003bcf:	add    BYTE PTR [rdx],dl
   140003bd1:	mov    dl,0xe
   140003bd3:	loopne 0x140003be1
   140003bd5:	jo     0x140003be2
   140003bd7:	(bad)  
   140003bd8:	add    DWORD PTR [rbx],ecx
   140003bda:	add    al,0x0
   140003bdc:	or     edx,DWORD PTR [rdx+0x4]
   140003bdf:	jo     0x140003be4
   140003be1:	xor    BYTE PTR [rdx],al
   140003be3:	push   rax
   140003be4:	add    DWORD PTR [rdx],ecx
   140003be6:	add    eax,DWORD PTR [rax]
   140003be8:	or     ah,BYTE PTR [rdx+0x3]
   140003beb:	xor    BYTE PTR [rdx],al
   140003bed:	push   rax
   140003bee:	add    BYTE PTR [rax],al
   140003bf0:	sbb    DWORD PTR [rcx],ebx
   140003bf2:	add    al,0x0
   140003bf4:	or     dh,BYTE PTR [rdi+rcx*1]
   140003bf7:	add    BYTE PTR [rdx],cl
   140003bf9:	mov    dl,0x6
   140003bfb:	jo     0x140003c05
   140003bfd:	sub    al,BYTE PTR [rax]
   140003bff:	add    BYTE PTR [rax+0x0],bl
   140003c02:	add    BYTE PTR [rax],al
   140003c04:	sbb    DWORD PTR [rdi],esi
   140003c06:	or     eax,0x5c742600
   140003c0b:	add    BYTE PTR [rsi],ah
   140003c0d:	fs pop rbx
   140003c0f:	add    BYTE PTR [rsi],ah
   140003c11:	xor    al,0x5a
   140003c13:	add    BYTE PTR [rsi],ah
   140003c15:	add    DWORD PTR [rax+rax*1+0x18],edx
   140003c19:	lock (bad) 
   140003c1b:	loopne 0x140003c31
   140003c1d:	rcl    BYTE PTR [rdx],1
   140003c1f:	rcl    BYTE PTR [rax],0x50
   140003c22:	add    BYTE PTR [rax],al
   140003c24:	or     BYTE PTR [rdx],ch
   140003c26:	add    BYTE PTR [rax],al
   140003c28:	nop
   140003c29:	add    al,BYTE PTR [rax]
   140003c2b:	add    BYTE PTR [rcx],al
   140003c2d:	or     eax,0x340d0004
   140003c32:	adc    al,BYTE PTR [rax]
   140003c34:	or     eax,0x17006f2
   140003c39:	adc    cl,BYTE PTR [rax]
   140003c3b:	add    BYTE PTR [rdx],dl
   140003c3d:	push   rsp
   140003c3e:	or     DWORD PTR [rax],eax
   140003c40:	adc    dh,BYTE PTR [rax+rcx*1]
   140003c43:	add    BYTE PTR [rdx],dl
   140003c45:	xor    cl,BYTE PTR [rsi]
   140003c47:	loopne 0x140003c55
   140003c49:	jo     0x140003c56
   140003c4b:	(bad)  
   140003c4c:	add    DWORD PTR [rbx],ebx
   140003c4e:	or     DWORD PTR [rax],eax
   140003c50:	sbb    eax,DWORD PTR [rcx]
   140003c52:	adc    al,0x0
   140003c54:	(bad)  
   140003c56:	or     eax,0x9c00bd0
   140003c5b:	jo     0x140003c65
   140003c5d:	(bad)  
   140003c5e:	(bad)  
   140003c5f:	xor    BYTE PTR [rsi],al
   140003c61:	push   rax
   140003c62:	add    BYTE PTR [rax],al
   140003c64:	add    BYTE PTR [rax],al
   140003c66:	add    BYTE PTR [rax],al
   140003c68:	add    DWORD PTR [rax],eax
   140003c6a:	add    BYTE PTR [rax],al
   140003c6c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d3c76
   140003c72:	or     DWORD PTR [rax],eax
   140003c74:	or     eax,0x1500632
   140003c79:	or     al,0x2
   140003c7b:	add    BYTE PTR [rcx+rax*1],cl
   140003c7e:	adc    DWORD PTR [rax],eax
   140003c80:	add    DWORD PTR [rax],ebx
   140003c82:	add    DWORD PTR [rax],eax
   140003c84:	sbb    dl,al
   140003c86:	add    BYTE PTR [rax],al
   140003c88:	add    DWORD PTR [rax],ebx
   140003c8a:	add    DWORD PTR [rax],eax
   140003c8c:	sbb    dl,al
   140003c8e:	add    BYTE PTR [rax],al
   140003c90:	add    DWORD PTR [rax],eax
   140003c92:	add    BYTE PTR [rax],al
   140003c94:	add    DWORD PTR [rsi],eax
   140003c96:	add    al,BYTE PTR [rax]
   140003c98:	(bad)  
   140003c99:	xor    al,BYTE PTR [rdx]
   140003c9b:	xor    BYTE PTR [rcx],al
   140003c9d:	add    BYTE PTR [rax],al
   140003c9f:	add    BYTE PTR [rax-0xfffffce],dl
   140003ca5:	push   rbp
   140003ca6:	add    BYTE PTR [rax],al
   140003ca8:	sbb    BYTE PTR [rax+0x0],dh
   140003cab:	add    BYTE PTR [rax],bl
   140003cad:	cmp    eax,0x3dd00000
	...
   140003cba:	add    BYTE PTR [rax],al
   140003cbc:	add    DWORD PTR [rax],eax
   140003cbe:	add    BYTE PTR [rax],al
   140003cc0:	movabs al,ds:0x55f8000032
   140003cc9:	jo     0x140003ccb
   140003ccb:	add    BYTE PTR [rax],al
   140003ccd:	cmp    eax,0x3df80000
	...
   140003cfe:	add    BYTE PTR [rax],al
   140003d00:	xchg   edx,eax
   140003d01:	cmp    eax,0x0
   140003d06:	add    BYTE PTR [rax],al
   140003d08:	movabs ds:0x3d,al
   140003d11:	add    BYTE PTR [rax],al
   140003d13:	add    BYTE PTR [rax],al
   140003d15:	add    BYTE PTR [rax],al
   140003d17:	add    BYTE PTR [rdx+0x3d],bh
   140003d1a:	add    BYTE PTR [rax],al
   140003d1c:	add    BYTE PTR [rax],al
   140003d1e:	add    BYTE PTR [rax],al
   140003d20:	(bad)  
   140003d21:	cmp    eax,0x0
   140003d26:	add    BYTE PTR [rax],al
   140003d28:	push   rax
   140003d29:	cmp    eax,0x0
   140003d2e:	add    BYTE PTR [rax],al
   140003d30:	rex cmp eax,0x0
	...
   140003d42:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140003d44:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140003d47:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140003d4f:	add    BYTE PTR [rax],al
   140003d51:	add    BYTE PTR [rdi+0x6c],cl
   140003d54:	gs push rbp
   140003d56:	outs   dx,BYTE PTR ds:[rsi]
   140003d57:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140003d5e:	imul   edi,DWORD PTR [rdx+0x65],0x43000000
   140003d65:	outs   dx,DWORD PTR ds:[rsi]
   140003d66:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003d68:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140003d70:	push   rbx
   140003d71:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140003d75:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43000000
   140003d7d:	outs   dx,DWORD PTR ds:[rsi]
   140003d7e:	rex.RX jb 0x140003de6
   140003d81:	gs push rbp
   140003d83:	outs   dx,BYTE PTR ds:[rsi]
   140003d84:	jne    0x140003df9
   140003d86:	gs imul r12,QWORD PTR fs:[rdx+0x72],0x65697261
   140003d90:	jae    0x140003d92
   140003d92:	add    BYTE PTR [rax],al
   140003d94:	push   rbx
   140003d95:	push   0x456c6c65
   140003d9a:	js     0x140003e01
   140003d9c:	movsxd esi,DWORD PTR [rbp+0x74]
   140003d9f:	gs push rdi
   140003da1:	add    BYTE PTR [rax],al
   140003da3:	add    BYTE PTR [rbx+0x65],dl
   140003da6:	je     0x140003deb
   140003da8:	jne    0x140003e1c
   140003daa:	jb     0x140003e11
   140003dac:	outs   dx,BYTE PTR ds:[rsi]
   140003dad:	je     0x140003dff
   140003daf:	jb     0x140003e20
   140003db1:	movsxd esp,DWORD PTR [rbp+0x73]
   140003db4:	jae    0x140003dfb
   140003db6:	js     0x140003e28
   140003db8:	ins    BYTE PTR es:[rdi],dx
   140003db9:	imul   esp,DWORD PTR [rbx+0x69],0x70704174
   140003dc0:	push   rbp
   140003dc1:	jae    0x140003e28
   140003dc3:	jb     0x140003e12
   140003dc5:	outs   dx,DWORD PTR ds:[rsi]
   140003dc6:	fs gs ins BYTE PTR es:[rdi],dx
   140003dc9:	rex.WB
   140003dca:	add    BYTE PTR [rax],r8b
	...
   140003e0d:	add    BYTE PTR [rax],al
   140003e0f:	add    BYTE PTR [rax+0x3e],cl
   140003e15:	add    BYTE PTR [rax],al
   140003e17:	add    BYTE PTR [rax],al
   140003e19:	add    BYTE PTR [rax],al
   140003e1b:	add    BYTE PTR [rdx],ah
   140003e1d:	add    BYTE PTR [r8],al
   140003e20:	add    BYTE PTR [rax],dh
   140003e22:	add    BYTE PTR [rax],al
   140003e24:	sar    BYTE PTR [rsi],0x0
	...
   140003e2f:	add    al,dh
   140003e31:	rex.XB add BYTE PTR [r8],al
   140003e34:	cmp    BYTE PTR [rax],dh
   140003e36:	add    BYTE PTR [rax],al
   140003e38:	sub    BYTE PTR [rax+0x0],al
	...
   140003e43:	add    dh,bl
   140003e45:	add    BYTE PTR [rax],r8b
   140003e48:	movabs al,ds:0x4098000031
   140003e51:	add    BYTE PTR [rax],al
   140003e53:	add    BYTE PTR [rax],al
   140003e55:	add    BYTE PTR [rax],al
   140003e57:	add    dl,ch
   140003e59:	add    BYTE PTR [rax],r8b
   140003e5c:	adc    BYTE PTR [rdx],dh
   140003e5e:	add    BYTE PTR [rax],al
   140003e60:	mov    al,0x40
	...
   140003e6a:	add    BYTE PTR [rax],al
   140003e6c:	mov    al,BYTE PTR [rbp+0x0]
   140003e6f:	add    BYTE PTR [rax],ch
   140003e71:	xor    al,BYTE PTR [rax]
	...
   140003e87:	add    dh,cl
   140003e89:	add    BYTE PTR [rax],al
   140003e8c:	add    BYTE PTR [rax],al
   140003e8e:	add    BYTE PTR [rax],al
   140003e90:	loop   0x140003ed2
   140003e92:	add    BYTE PTR [rax],al
   140003e94:	add    BYTE PTR [rax],al
   140003e96:	add    BYTE PTR [rax],al
   140003e98:	hlt    
   140003e99:	add    BYTE PTR [rax],al
   140003e9c:	add    BYTE PTR [rax],al
   140003e9e:	add    BYTE PTR [rax],al
   140003ea0:	add    al,0x41
   140003ea2:	add    BYTE PTR [rax],al
   140003ea4:	add    BYTE PTR [rax],al
   140003ea6:	add    BYTE PTR [rax],al
   140003ea8:	adc    al,0x41
   140003eaa:	add    BYTE PTR [rax],al
   140003eac:	add    BYTE PTR [rax],al
   140003eae:	add    BYTE PTR [rax],al
   140003eb0:	rol    BYTE PTR [rax+0x0],0x0
	...
   140003ec0:	xor    BYTE PTR [rcx+0x0],al
   140003ec3:	add    BYTE PTR [rax],al
   140003ec5:	add    BYTE PTR [rax],al
   140003ec7:	add    BYTE PTR [rsi],bh
   140003ec9:	add    BYTE PTR [r8],al
   140003ecc:	add    BYTE PTR [rax],al
   140003ece:	add    BYTE PTR [rax],al
   140003ed0:	push   rax
   140003ed1:	add    BYTE PTR [r8],al
   140003ed4:	add    BYTE PTR [rax],al
   140003ed6:	add    BYTE PTR [rax],al
   140003ed8:	(bad)  
   140003ed9:	add    BYTE PTR [r8],al
   140003edc:	add    BYTE PTR [rax],al
   140003ede:	add    BYTE PTR [rax],al
   140003ee0:	jo     0x140003f23
   140003ee2:	add    BYTE PTR [rax],al
   140003ee4:	add    BYTE PTR [rax],al
   140003ee6:	add    BYTE PTR [rax],al
   140003ee8:	jle    0x140003f2b
   140003eea:	add    BYTE PTR [rax],al
   140003eec:	add    BYTE PTR [rax],al
   140003eee:	add    BYTE PTR [rax],al
   140003ef0:	mov    al,BYTE PTR [rcx+0x0]
   140003ef3:	add    BYTE PTR [rax],al
   140003ef5:	add    BYTE PTR [rax],al
   140003ef7:	add    BYTE PTR [rsi+0x41],dl
   140003efd:	add    BYTE PTR [rax],al
   140003eff:	add    BYTE PTR [rcx+rax*2+0x0],ch
   140003f06:	add    BYTE PTR [rax],al
   140003f08:	mov    eax,0x41
   140003f0d:	add    BYTE PTR [rax],al
   140003f0f:	add    ah,cl
   140003f11:	add    BYTE PTR [r8],al
   140003f14:	add    BYTE PTR [rax],al
   140003f16:	add    BYTE PTR [rax],al
   140003f18:	loopne 0x140003f5b
   140003f1a:	add    BYTE PTR [rax],al
   140003f1c:	add    BYTE PTR [rax],al
   140003f1e:	add    BYTE PTR [rax],al
   140003f20:	repnz add BYTE PTR [r8],al
   140003f24:	add    BYTE PTR [rax],al
   140003f26:	add    BYTE PTR [rax],al
   140003f28:	add    al,BYTE PTR [rdx+0x0]
   140003f2b:	add    BYTE PTR [rax],al
   140003f2d:	add    BYTE PTR [rax],al
   140003f2f:	add    BYTE PTR [rdx],bl
   140003f31:	rex.X add BYTE PTR [rax],al
   140003f34:	add    BYTE PTR [rax],al
   140003f36:	add    BYTE PTR [rax],al
   140003f38:	sub    al,0x42
   140003f3a:	add    BYTE PTR [rax],al
   140003f3c:	add    BYTE PTR [rax],al
   140003f3e:	add    BYTE PTR [rax],al
   140003f40:	cmp    BYTE PTR [rdx+0x0],al
   140003f43:	add    BYTE PTR [rax],al
   140003f45:	add    BYTE PTR [rax],al
   140003f47:	add    BYTE PTR [rdx+rax*2+0x0],cl
   140003f4b:	add    BYTE PTR [rax],al
   140003f4d:	add    BYTE PTR [rax],al
   140003f4f:	add    BYTE PTR [rsi+0x42],bl
   140003f52:	add    BYTE PTR [rax],al
   140003f54:	add    BYTE PTR [rax],al
   140003f56:	add    BYTE PTR [rax],al
   140003f58:	outs   dx,BYTE PTR ds:[rsi]
   140003f59:	rex.X add BYTE PTR [rax],al
   140003f5c:	add    BYTE PTR [rax],al
   140003f5e:	add    BYTE PTR [rax],al
   140003f60:	add    BYTE PTR [rdx+0x0],0x0
   140003f64:	add    BYTE PTR [rax],al
   140003f66:	add    BYTE PTR [rax],al
   140003f68:	cwde   
   140003f69:	rex.X add BYTE PTR [rax],al
   140003f6c:	add    BYTE PTR [rax],al
   140003f6e:	add    BYTE PTR [rax],al
   140003f70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140003f71:	rex.X add BYTE PTR [rax],al
   140003f74:	add    BYTE PTR [rax],al
   140003f76:	add    BYTE PTR [rax],al
   140003f78:	mov    ah,0x42
   140003f7a:	add    BYTE PTR [rax],al
   140003f7c:	add    BYTE PTR [rax],al
   140003f7e:	add    BYTE PTR [rax],al
   140003f80:	rol    BYTE PTR [rdx+0x0],0x0
   140003f84:	add    BYTE PTR [rax],al
   140003f86:	add    BYTE PTR [rax],al
   140003f88:	fadd   QWORD PTR [rdx+0x0]
   140003f8b:	add    BYTE PTR [rax],al
   140003f8d:	add    BYTE PTR [rax],al
   140003f8f:	add    dh,dh
   140003f91:	rex.X add BYTE PTR [rax],al
   140003f94:	add    BYTE PTR [rax],al
   140003f96:	add    BYTE PTR [rax],al
   140003f98:	or     al,0x43
   140003f9a:	add    BYTE PTR [rax],al
   140003f9c:	add    BYTE PTR [rax],al
   140003f9e:	add    BYTE PTR [rax],al
   140003fa0:	and    al,BYTE PTR [rbx+0x0]
   140003fa3:	add    BYTE PTR [rax],al
   140003fa5:	add    BYTE PTR [rax],al
   140003fa7:	add    BYTE PTR [rbx+rax*2],bh
   140003faa:	add    BYTE PTR [rax],al
   140003fac:	add    BYTE PTR [rax],al
   140003fae:	add    BYTE PTR [rax],al
   140003fb0:	rex.WR
   140003fb1:	rex.XB add BYTE PTR [r8],al
   140003fb4:	add    BYTE PTR [rax],al
   140003fb6:	add    BYTE PTR [rax],al
   140003fb8:	(bad)  
   140003fb9:	rex.XB add BYTE PTR [r8],al
   140003fbc:	add    BYTE PTR [rax],al
   140003fbe:	add    BYTE PTR [rax],al
   140003fc0:	jp     0x140004005
   140003fc2:	add    BYTE PTR [rax],al
   140003fc4:	add    BYTE PTR [rax],al
   140003fc6:	add    BYTE PTR [rax],al
   140003fc8:	mov    es,WORD PTR [rbx+0x0]
   140003fcb:	add    BYTE PTR [rax],al
   140003fcd:	add    BYTE PTR [rax],al
   140003fcf:	add    BYTE PTR [rdx+0x43],ch
   140003fd5:	add    BYTE PTR [rax],al
   140003fd7:	add    al,cl
   140003fd9:	rex.XB add BYTE PTR [r8],al
   140003fdc:	add    BYTE PTR [rax],al
   140003fde:	add    BYTE PTR [rax],al
   140003fe0:	fadd   QWORD PTR [rbx+0x0]
   140003fe3:	add    BYTE PTR [rax],al
   140003fe5:	add    BYTE PTR [rax],al
   140003fe7:	add    BYTE PTR [rsi+0x45],ch
   140003fea:	add    BYTE PTR [rax],al
   140003fec:	add    BYTE PTR [rax],al
   140003fee:	add    BYTE PTR [rax],al
   140003ff0:	pop    rsp
   140003ff1:	add    BYTE PTR [r8],r8b
   140003ff4:	add    BYTE PTR [rax],al
   140003ff6:	add    BYTE PTR [rax],al
   140003ff8:	rex.WR
   140003ff9:	add    BYTE PTR [r8],r8b
   140003ffc:	add    BYTE PTR [rax],al
   140003ffe:	add    BYTE PTR [rax],al
   140004000:	cmp    al,BYTE PTR [rbp+0x0]
   140004003:	add    BYTE PTR [rax],al
   140004005:	add    BYTE PTR [rax],al
   140004007:	add    BYTE PTR [rax],ah
   140004009:	add    BYTE PTR [r8],r8b
   14000400c:	add    BYTE PTR [rax],al
   14000400e:	add    BYTE PTR [rax],al
   140004010:	(bad)  
   140004011:	add    BYTE PTR [r8],r8b
   140004014:	add    BYTE PTR [rax],al
   140004016:	add    BYTE PTR [rax],al
   140004018:	test   BYTE PTR [rax+rax*1+0x0],0x0
	...
   140004025:	add    BYTE PTR [rax],al
   140004027:	add    BYTE PTR [rsi+0x44],bh
   14000402a:	add    BYTE PTR [rax],al
   14000402c:	add    BYTE PTR [rax],al
   14000402e:	add    BYTE PTR [rax],al
   140004030:	xchg   edx,eax
   140004031:	add    BYTE PTR [rax],r8b
   140004034:	add    BYTE PTR [rax],al
   140004036:	add    BYTE PTR [rax],al
   140004038:	movabs ds:0xb000000000000044,al
   140004041:	add    BYTE PTR [rax],r8b
   140004044:	add    BYTE PTR [rax],al
   140004046:	add    BYTE PTR [rax],al
   140004048:	mov    esp,0x44
   14000404d:	add    BYTE PTR [rax],al
   14000404f:	add    dl,dl
   140004051:	add    BYTE PTR [rax],r8b
   140004054:	add    BYTE PTR [rax],al
   140004056:	add    BYTE PTR [rax],al
   140004058:	or     al,BYTE PTR [rax+rax*1+0x0]
   14000405c:	add    BYTE PTR [rax],al
   14000405e:	add    BYTE PTR [rax],al
   140004060:	inc    BYTE PTR [rbx+0x0]
   140004063:	add    BYTE PTR [rax],al
   140004065:	add    BYTE PTR [rax],al
   140004067:	add    BYTE PTR [rsi],ah
   140004069:	add    BYTE PTR [rax],r8b
   14000406c:	add    BYTE PTR [rax],al
   14000406e:	add    BYTE PTR [rax],al
   140004070:	jo     0x1400040b6
   140004072:	add    BYTE PTR [rax],al
   140004074:	add    BYTE PTR [rax],al
   140004076:	add    BYTE PTR [rax],al
   140004078:	pop    rdx
   140004079:	add    BYTE PTR [rax],r8b
   14000407c:	add    BYTE PTR [rax],al
   14000407e:	add    BYTE PTR [rax],al
   140004080:	rex.WR
   140004081:	add    BYTE PTR [rax],r8b
   140004084:	add    BYTE PTR [rax],al
   140004086:	add    BYTE PTR [rax],al
   140004088:	cmp    BYTE PTR [rax+rax*1+0x0],al
	...
   140004098:	je     0x14000409a
   14000409a:	add    BYTE PTR [rax],al
   14000409c:	add    BYTE PTR [rax],al
   14000409e:	add    BYTE PTR [rax+0x73],al
   1400040a4:	add    BYTE PTR [rax],al
   1400040a6:	add    BYTE PTR [rax+0x0],al
   1400040ac:	add    BYTE PTR [rax],al
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	add    BYTE PTR [rbp+0x0],0x0
	...
   1400040c0:	and    eax,DWORD PTR [rcx]
   1400040c2:	rex.RB jbe 0x14000412a
   1400040c5:	outs   dx,BYTE PTR ds:[rsi]
   1400040c6:	je     0x14000411f
   1400040c8:	jb     0x140004133
   1400040ca:	je     0x140004131
   1400040cc:	add    BYTE PTR [rax],al
   1400040ce:	xchg   ebx,eax
   1400040cf:	add    dl,BYTE PTR [rdx+0x65]
   1400040d2:	addr32 push rcx
   1400040d4:	jne    0x14000413b
   1400040d6:	jb     0x140004151
   1400040d8:	push   rsi
   1400040d9:	(bad)  
   1400040da:	ins    BYTE PTR es:[rdi],dx
   1400040db:	jne    0x140004142
   1400040dd:	rex.RB js 0x140004137
   1400040e0:	add    BYTE PTR [rax],al
   1400040e2:	and    al,BYTE PTR [rcx]
   1400040e4:	rex.RB jbe 0x14000414c
   1400040e7:	outs   dx,BYTE PTR ds:[rsi]
   1400040e8:	je     0x14000413f
   1400040ea:	outs   dx,BYTE PTR ds:[rsi]
   1400040eb:	jb     0x140004152
   1400040ed:	imul   esi,DWORD PTR [ebx+0x74],0x86007265
   1400040f5:	add    dl,BYTE PTR [rdx+0x65]
   1400040f8:	addr32 rex.WRXB jo 0x140004161
   1400040fc:	outs   dx,BYTE PTR ds:[rsi]
   1400040fd:	rex.WXB
   1400040fe:	gs jns 0x140004146
   140004101:	js     0x14000415a
   140004103:	add    BYTE PTR [rax],ah
   140004105:	add    DWORD PTR [rbp+0x76],eax
   140004108:	outs   dx,BYTE PTR gs:[rsi]
   14000410a:	je     0x14000415e
   14000410c:	imul   esi,DWORD PTR gs:[ebx+0x74],0x55007265
   140004115:	add    dl,BYTE PTR [rdx+0x65]
   140004118:	rex.XB ins BYTE PTR es:[edi],dx
   14000411b:	outs   dx,DWORD PTR ds:[rsi]
   14000411c:	jae    0x140004183
   14000411e:	rex.WXB
   14000411f:	gs jns 0x140004122
   140004122:	rex.B
   140004123:	rex.R push rsi
   140004125:	push   r8
   140004127:	xor    rsi,QWORD PTR [r10]
   14000412a:	cs fs ins BYTE PTR es:[rdi],dx
   14000412d:	ins    BYTE PTR es:[rdi],dx
   14000412e:	add    BYTE PTR [rax],al
   140004130:	push   rdi
   140004131:	add    DWORD PTR [rbp+0x78],eax
   140004134:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000413c:	jae    0x14000413e
   14000413e:	rol    BYTE PTR [rcx],1
   140004140:	rex.RXB
   140004141:	gs je  0x140004187
   140004144:	outs   dx,DWORD PTR ds:[rsi]
   140004145:	ins    DWORD PTR es:[rdi],dx
   140004146:	ins    DWORD PTR es:[rdi],dx
   140004147:	(bad)  
   140004148:	outs   dx,BYTE PTR ds:[rsi]
   140004149:	imul   r13,QWORD PTR fs:[rsi+0x65],0xcf0057
   140004152:	rex.XB jb 0x1400041ba
   140004155:	(bad)  
   140004156:	je     0x1400041bd
   140004158:	rex.WRB jne 0x1400041cf
   14000415b:	gs js  0x1400041b5
   14000415e:	add    BYTE PTR [rax],al
   140004160:	(bad)  
   140004161:	add    eax,0x45746553
   140004166:	jb     0x1400041da
   140004168:	outs   dx,DWORD PTR ds:[rsi]
   140004169:	jb     0x1400041b8
   14000416b:	outs   dx,DWORD PTR ds:[rsi]
   14000416c:	fs add BYTE PTR gs:[rax],al
   140004170:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004171:	add    DWORD PTR [rsi+0x72],eax
   140004174:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000417e:	cmp    al,0x3
   140004180:	rex.W
   140004181:	gs (bad) 
   140004183:	jo     0x1400041c6
   140004185:	ins    BYTE PTR es:[rdi],dx
   140004186:	ins    BYTE PTR es:[rdi],dx
   140004187:	outs   dx,DWORD PTR ds:[rsi]
   140004188:	movsxd eax,DWORD PTR [rax]
   14000418a:	rex add ecx,DWORD PTR [rax+0x65]
   14000418e:	(bad)  
   14000418f:	jo     0x1400041d7
   140004191:	jb     0x1400041f8
   140004193:	add    BYTE PTR gs:[rax],al
   140004196:	xor    BYTE PTR [rip+0x50746553],al        # 0x19074a6ef
   14000419c:	jb     0x14000420d
   14000419e:	movsxd esp,DWORD PTR [rbp+0x73]
   1400041a1:	jae    0x1400041e7
   1400041a3:	rex.RB push r8
   1400041a5:	push   rax
   1400041a6:	outs   dx,DWORD PTR ds:[rsi]
   1400041a7:	ins    BYTE PTR es:[rdi],dx
   1400041a8:	imul   esp,DWORD PTR [rbx+0x79],0x53050800
   1400041af:	gs je  0x1400041f7
   1400041b2:	jbe    0x140004219
   1400041b4:	outs   dx,BYTE PTR ds:[rsi]
   1400041b5:	je     0x1400041b7
   1400041b7:	add    BYTE PTR [rsi+0x2],ch
   1400041ba:	rex.RXB
   1400041bb:	gs je  0x14000420b
   1400041be:	outs   dx,DWORD PTR ds:[rsi]
   1400041bf:	fs jne 0x14000422e
   1400041c2:	gs rex.W (bad) 
   1400041c5:	outs   dx,BYTE PTR ds:[rsi]
   1400041c6:	fs ins BYTE PTR es:[rdi],dx
   1400041c8:	gs push rdi
   1400041ca:	add    BYTE PTR [rax],al
   1400041cc:	adc    al,0x2
   1400041ce:	rex.RXB
   1400041cf:	gs je  0x140004215
   1400041d2:	jne    0x140004246
   1400041d4:	jb     0x14000423b
   1400041d6:	outs   dx,BYTE PTR ds:[rsi]
   1400041d7:	je     0x14000422d
   1400041d9:	push   0x64616572
   1400041de:	add    BYTE PTR [rax],al
   1400041e0:	stos   DWORD PTR es:[rdi],eax
   1400041e1:	add    al,BYTE PTR [rdi+0x65]
   1400041e4:	je     0x140004236
   1400041e6:	jb     0x140004257
   1400041e8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400041eb:	jae    0x140004235
   1400041ed:	gs (bad) 
   1400041ef:	jo     0x1400041f1
   1400041f1:	add    BYTE PTR [rdi+0x616f4c03],ch
   1400041f7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140004200:	add    BYTE PTR [rax],al
   140004202:	nop
   140004203:	add    BYTE PTR [rbx+0x6f],al
   140004206:	ins    DWORD PTR es:[rdi],dx
   140004207:	jo     0x14000426a
   140004209:	jb     0x140004270
   14000420b:	push   rbx
   14000420c:	je     0x140004280
   14000420e:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   140004215:	outs   dx,BYTE PTR ds:[rsi]
   140004216:	(bad)  
   140004217:	ins    BYTE PTR es:[rdi],dx
   140004218:	add    BYTE PTR [rax],al
   14000421a:	movabs al,ds:0x4d74616d726f4601
   140004223:	gs jae 0x140004299
   140004226:	(bad)  
   140004227:	addr32 gs push rdi
   14000422a:	add    BYTE PTR [rax],al
   14000422c:	cs (bad) 
   14000422e:	ins    BYTE PTR es:[rdi],dx
   14000422f:	jae    0x1400042a5
   140004231:	jb     0x14000429f
   140004233:	outs   dx,BYTE PTR gs:[rsi]
   140004235:	push   rdi
   140004236:	add    BYTE PTR [rax],al
   140004238:	rex.WRX add rax,0x54746553
   14000423e:	push   0x64616572
   140004243:	push   rax
   140004244:	jb     0x1400042af
   140004246:	outs   dx,DWORD PTR ds:[rsi]
   140004247:	jb     0x1400042b2
   140004249:	je     0x1400042c4
   14000424b:	add    bh,al
   14000424d:	add    al,BYTE PTR [rdi+0x65]
   140004250:	je     0x1400042a5
   140004252:	je     0x1400042b5
   140004254:	jb     0x1400042ca
   140004256:	jne    0x1400042c8
   140004258:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000425a:	outs   dx,WORD PTR ds:[rsi]
   14000425c:	push   rdi
   14000425d:	add    BYTE PTR [rdi+0x2],dl
   140004260:	rex.RXB
   140004261:	gs je  0x1400042b0
   140004264:	(bad)  
   140004265:	jae    0x1400042db
   140004267:	rex.RB jb 0x1400042dc
   14000426a:	outs   dx,DWORD PTR ds:[rsi]
   14000426b:	jb     0x14000426d
   14000426d:	add    BYTE PTR [rbp+0x74654702],ah
   140004273:	push   rax
   140004274:	jb     0x1400042e5
   140004276:	movsxd eax,DWORD PTR [rcx+0x64]
   140004279:	fs jb  0x1400042e1
   14000427c:	jae    0x1400042f1
   14000427e:	add    BYTE PTR [rax],al
   140004280:	sti    
   140004281:	add    al,0x53
   140004283:	gs je  0x1400042c9
   140004286:	jne    0x1400042fa
   140004288:	jb     0x1400042ef
   14000428a:	outs   dx,BYTE PTR ds:[rsi]
   14000428b:	je     0x1400042d1
   14000428d:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140004294:	jns    0x1400042ed
   140004296:	add    BYTE PTR [rax],al
   140004298:	(bad)  
   140004299:	add    ecx,DWORD PTR [rdi+0x70]
   14000429c:	outs   dx,BYTE PTR gs:[rsi]
   14000429e:	rex.RB jbe 0x140004306
   1400042a1:	outs   dx,BYTE PTR ds:[rsi]
   1400042a2:	je     0x1400042fb
   1400042a4:	add    BYTE PTR [rax],al
   1400042a6:	jge    0x1400042a8
   1400042a8:	rex.XB ins BYTE PTR es:[rdi],dx
   1400042aa:	outs   dx,DWORD PTR ds:[rsi]
   1400042ab:	jae    0x140004312
   1400042ad:	rex.W (bad) 
   1400042af:	outs   dx,BYTE PTR ds:[rsi]
   1400042b0:	fs ins BYTE PTR es:[rdi],dx
   1400042b2:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   1400042b9:	(bad)  
   1400042ba:	ins    BYTE PTR es:[rdi],dx
   1400042bb:	rex.RX jb 0x140004323
   1400042be:	add    BYTE PTR gs:[rbx+0x1],bl
   1400042c2:	rex.RB js 0x140004335
   1400042c5:	(bad)  
   1400042c6:	outs   dx,BYTE PTR ds:[rsi]
   1400042c7:	rex.RB outs dx,BYTE PTR fs:[rsi]
   1400042ca:	jbe    0x140004335
   1400042cc:	jb     0x14000433d
   1400042ce:	outs   dx,BYTE PTR ds:[rsi]
   1400042cf:	ins    DWORD PTR es:[rdi],dx
   1400042d0:	outs   dx,BYTE PTR gs:[rsi]
   1400042d2:	je     0x140004327
   1400042d4:	je     0x140004348
   1400042d6:	imul   ebp,DWORD PTR [rsi+0x67],0x36005773
   1400042dd:	add    al,0x51
   1400042df:	jne    0x140004346
   1400042e1:	jb     0x14000435c
   1400042e3:	push   rax
   1400042e4:	gs jb  0x14000434d
   1400042e7:	outs   dx,DWORD PTR ds:[rsi]
   1400042e8:	jb     0x140004357
   1400042ea:	(bad)  
   1400042eb:	outs   dx,BYTE PTR ds:[rsi]
   1400042ec:	movsxd esp,DWORD PTR [rbp+0x43]
   1400042ef:	outs   dx,DWORD PTR ds:[rsi]
   1400042f0:	jne    0x140004360
   1400042f2:	je     0x140004359
   1400042f4:	jb     0x1400042f6
   1400042f6:	adc    DWORD PTR [rdx],eax
   1400042f8:	rex.RXB
   1400042f9:	gs je  0x14000433f
   1400042fc:	jne    0x140004370
   1400042fe:	jb     0x140004365
   140004300:	outs   dx,BYTE PTR ds:[rsi]
   140004301:	je     0x140004353
   140004303:	jb     0x140004374
   140004305:	movsxd esp,DWORD PTR [rbp+0x73]
   140004308:	jae    0x140004353
   14000430a:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4658a13
   140004311:	rex.XB jne 0x140004386
   140004314:	jb     0x14000437b
   140004316:	outs   dx,BYTE PTR ds:[rsi]
   140004317:	je     0x14000436d
   140004319:	push   0x64616572
   14000431e:	rex.WB
   14000431f:	add    BYTE PTR fs:[rax],al
   140004322:	loopne 0x140004326
   140004324:	rex.RXB
   140004325:	gs je  0x14000437b
   140004328:	jns    0x14000439d
   14000432a:	je     0x140004391
   14000432c:	ins    DWORD PTR es:[rdi],dx
   14000432d:	push   rsp
   14000432e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140004335:	ins    BYTE PTR es:[rdi],dx
   140004336:	gs push rsp
   140004338:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000433f:	gs je  0x140004396
   140004342:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140004349:	je     0x14000434b
   14000434b:	add    BYTE PTR [rdi+0x6c745204],dh
   140004351:	rex.XB (bad) 
   140004353:	jo     0x1400043c9
   140004355:	jne    0x1400043c9
   140004357:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000435a:	outs   dx,BYTE PTR ds:[rsi]
   14000435b:	je     0x1400043c2
   14000435d:	js     0x1400043d3
   14000435f:	add    BYTE PTR [rsi+0x6c745204],bh
   140004365:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140004367:	outs   dx,DWORD PTR ds:[rsi]
   140004368:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000436c:	jne    0x1400043dc
   14000436e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140004372:	outs   dx,BYTE PTR ds:[rsi]
   140004373:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140004375:	je     0x1400043e9
   140004377:	jns    0x140004379
   140004379:	add    ch,al
   14000437b:	add    al,0x52
   14000437d:	je     0x1400043eb
   14000437f:	push   rsi
   140004380:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140004387:	outs   dx,BYTE PTR ds:[rsi]
   140004388:	ja     0x1400043f3
   14000438a:	outs   dx,BYTE PTR ds:[rsi]
   14000438b:	add    BYTE PTR fs:[rax],al
   14000438e:	sahf   
   14000438f:	add    eax,0x61686e55
   140004394:	outs   dx,BYTE PTR ds:[rsi]
   140004395:	fs ins BYTE PTR es:[rdi],dx
   140004397:	gs fs rex.RB js 0x1400043ff
   14000439c:	gs jo  0x140004413
   14000439f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400043a6:	gs jb  0x1400043a9
   1400043a9:	add    BYTE PTR [rsi+0x5],bl
   1400043ac:	push   rbx
   1400043ad:	gs je  0x140004405
   1400043b0:	outs   dx,BYTE PTR ds:[rsi]
   1400043b1:	push   0x6c646e61
   1400043b6:	gs fs rex.RB js 0x14000441e
   1400043bb:	gs jo  0x140004432
   1400043be:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400043c5:	gs jb  0x1400043c8
   1400043c8:	adc    BYTE PTR [rdx],al
   1400043ca:	rex.RXB
   1400043cb:	gs je  0x140004411
   1400043ce:	jne    0x140004442
   1400043d0:	jb     0x140004437
   1400043d2:	outs   dx,BYTE PTR ds:[rsi]
   1400043d3:	je     0x140004425
   1400043d5:	jb     0x140004446
   1400043d7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400043da:	jae    0x1400043dc
   1400043dc:	jl     0x1400043e3
   1400043de:	push   rsp
   1400043df:	gs jb  0x14000444f
   1400043e2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400043e9:	outs   dx,DWORD PTR ds:[rsi]
   1400043ea:	movsxd esp,DWORD PTR [rbp+0x73]
   1400043ed:	jae    0x1400043ef
   1400043ef:	add    BYTE PTR [rbx+0x45],cl
   1400043f2:	push   rdx
   1400043f3:	rex.WRX
   1400043f4:	rex.RB
   1400043f5:	xor    r14,QWORD PTR [rdx]
   1400043f8:	cs fs ins BYTE PTR es:[rdi],dx
   1400043fb:	ins    BYTE PTR es:[rdi],dx
   1400043fc:	add    BYTE PTR [rax],al
   1400043fe:	rol    DWORD PTR [rcx],0x47
   140004401:	gs je  0x14000445b
   140004404:	imul   ebp,DWORD PTR [rsi+0x64],0xdc00776f
   14000440b:	add    DWORD PTR [rdi+0x65],eax
   14000440e:	je     0x140004467
   140004410:	imul   ebp,DWORD PTR [rsi+0x64],0x6854776f
   140004417:	jb     0x14000447e
   140004419:	(bad)  
   14000441a:	fs push rax
   14000441c:	jb     0x14000448d
   14000441e:	movsxd esp,DWORD PTR [rbp+0x73]
   140004421:	jae    0x14000446c
   140004423:	add    BYTE PTR fs:[rax],al
   140004426:	sub    DWORD PTR [rdx],eax
   140004428:	rex.WB jae 0x140004482
   14000442b:	imul   ebp,DWORD PTR [rsi+0x64],0x6956776f
   140004432:	jae    0x14000449d
   140004434:	(bad)  
   140004435:	ins    BYTE PTR es:[rdi],dx
   140004436:	add    BYTE PTR gs:[rax+0x74654701],dh
   14000443d:	push   rbx
   14000443e:	jns    0x1400044b3
   140004440:	je     0x1400044a7
   140004442:	ins    DWORD PTR es:[rdi],dx
   140004443:	rex.WRB
   140004444:	gs je  0x1400044b9
   140004447:	imul   esp,DWORD PTR [rbx+0x73],0x2600000
   14000444e:	rex.WRB
   14000444f:	gs jae 0x1400044c5
   140004452:	(bad)  
   140004453:	rex.X outs dx,DWORD PTR gs:[esi]
   140004457:	js     0x1400044b0
   140004459:	add    cl,ah
   14000445b:	add    dl,BYTE PTR [rbx+0x65]
   14000445e:	outs   dx,BYTE PTR ds:[rsi]
   14000445f:	fs rex.WRB
   140004461:	gs jae 0x1400044d7
   140004464:	(bad)  
   140004465:	addr32 gs push rsp
   140004468:	imul   ebp,DWORD PTR [rbp+0x65],0x5774756f
   14000446f:	add    BYTE PTR [rbx+rax*1+0x53],cl
   140004473:	push   0x6957776f
   140004478:	outs   dx,BYTE PTR ds:[rsi]
   140004479:	outs   dx,DWORD PTR fs:[rsi]
   14000447b:	ja     0x14000447d
   14000447d:	add    BYTE PTR [rbx],bh
   14000447f:	add    DWORD PTR [rdi+0x65],eax
   140004482:	je     0x1400044c8
   140004484:	gs jae 0x1400044f2
   140004487:	je     0x1400044f8
   140004489:	jo     0x1400044e2
   14000448b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140004492:	(bad)  
   140004493:	add    DWORD PTR [rdi+0x65],eax
   140004496:	je     0x1400044db
   140004498:	ins    BYTE PTR es:[rdi],dx
   140004499:	(bad)  
   14000449a:	jae    0x14000450f
   14000449c:	rex.WRX (bad) 
   14000449e:	ins    DWORD PTR es:[rdi],dx
   14000449f:	gs push rdi
   1400044a1:	add    BYTE PTR [rbx],cl
   1400044a3:	add    DWORD PTR [rsi+0x69],eax
   1400044a6:	outs   dx,BYTE PTR ds:[rsi]
   1400044a7:	fs push rdi
   1400044a9:	imul   ebp,DWORD PTR [rsi+0x64],0x57776f
   1400044b0:	jg     0x1400044b3
   1400044b2:	rex.RXB
   1400044b3:	gs je  0x140004506
   1400044b6:	(bad)  
   1400044b7:	jb     0x14000451e
   1400044b9:	outs   dx,BYTE PTR ds:[rsi]
   1400044ba:	je     0x1400044bc
   1400044bc:	inc    BYTE PTR [rdx]
   1400044be:	push   rbx
   1400044bf:	gs je  0x140004508
   1400044c2:	outs   dx,DWORD PTR ds:[rsi]
   1400044c3:	jb     0x14000452a
   1400044c5:	addr32 jb 0x140004537
   1400044c8:	jne    0x140004538
   1400044ca:	fs push rdi
   1400044cc:	imul   ebp,DWORD PTR [rsi+0x64],0x1300776f
   1400044d3:	add    cl,BYTE PTR [rcx+0x73]
   1400044d6:	movsxd rbp,DWORD PTR [r15+0x6e]
   1400044da:	imul   esp,DWORD PTR [rbx+0x0],0x45535500
   1400044e1:	push   rdx
   1400044e2:	xor    esi,DWORD PTR [rdx]
   1400044e4:	cs fs ins BYTE PTR es:[rdi],dx
   1400044e7:	ins    BYTE PTR es:[rdi],dx
   1400044e8:	add    BYTE PTR [rax],al
   1400044ea:	push   rdi
   1400044eb:	push   rbx
   1400044ec:	xor    bl,BYTE PTR [rdi+0x33]
   1400044ef:	xor    ch,BYTE PTR [rsi]
   1400044f1:	fs ins BYTE PTR es:[rdi],dx
   1400044f3:	ins    BYTE PTR es:[rdi],dx
   1400044f4:	add    BYTE PTR [rax],al
   1400044f6:	mov    edi,0x72695605
   1400044fb:	je     0x140004572
   1400044fd:	(bad)  
   1400044fe:	ins    BYTE PTR es:[rdi],dx
   1400044ff:	push   rcx
   140004500:	jne    0x140004567
   140004502:	jb     0x14000457d
   140004504:	add    BYTE PTR [rax],al
   140004506:	fwait
   140004507:	add    al,0x52
   140004509:	gs ins BYTE PTR es:[rdi],dx
   14000450b:	gs (bad) 
   14000450d:	jae    0x140004574
   14000450f:	push   rbx
   140004510:	push   rdx
   140004511:	push   rdi
   140004512:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140004514:	movsxd ebp,DWORD PTR [rbx+0x45]
   140004517:	js     0x14000457c
   140004519:	ins    BYTE PTR es:[rdi],dx
   14000451a:	jne    0x14000458f
   14000451c:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   140004523:	movsxd esi,DWORD PTR [rcx+0x75]
   140004526:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000452d:	outs   dx,DWORD PTR ds:[rsi]
   14000452e:	movsxd ebp,DWORD PTR [rbx+0x45]
   140004531:	js     0x140004596
   140004533:	ins    BYTE PTR es:[rdi],dx
   140004534:	jne    0x1400045a9
   140004536:	imul   esi,DWORD PTR [rsi+0x65],0x52044c00
   14000453d:	(bad)  
   14000453e:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140004545:	jo     0x1400045bb
   140004547:	imul   ebp,DWORD PTR [rdi+0x6e],0x2da0000
   14000454e:	rex.RXB
   14000454f:	gs je  0x1400045a5
   140004552:	jns    0x1400045c7
   140004554:	je     0x1400045bb
   140004556:	ins    DWORD PTR es:[rdi],dx
   140004557:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140004559:	outs   dx,WORD PTR ds:[rsi]
   14000455b:	add    BYTE PTR [rbp+0x616f4c03],ch
   140004561:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000456a:	js     0x1400045ad
   14000456c:	add    BYTE PTR [rax],al
   14000456e:	mov    ebp,0x72695605
   140004573:	je     0x1400045ea
   140004575:	(bad)  
   140004576:	ins    BYTE PTR es:[rdi],dx
   140004577:	push   rax
   140004578:	jb     0x1400045e9
   14000457a:	je     0x1400045e1
   14000457c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140004580:	imul   ecx,DWORD PTR [rax],0x6d
   140004583:	gs ins DWORD PTR es:[rdi],dx
   140004585:	jae    0x1400045ec
   140004587:	je     0x140004589
   140004589:	add    BYTE PTR [rsi+0x74],ch
   14000458c:	fs ins BYTE PTR es:[rdi],dx
   14000458e:	ins    BYTE PTR es:[rdi],dx
   14000458f:	cs fs ins BYTE PTR es:[rdi],dx
   140004592:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140005000 <.data>:
   140005000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   140005006:	add    BYTE PTR [rax],al
   140005008:	int    0x5d
   14000500a:	and    dl,dl
   14000500c:	data16 (bad) 
   14000500e:	(bad)  
   14000500f:	inc    DWORD PTR [rax]
	...
   140005039:	add    BYTE PTR [rcx],cl
   14000503b:	add    BYTE PTR [rax],al
   14000503d:	add    BYTE PTR [rax],al
   14000503f:	add    BYTE PTR [rax+0x56],al
   140005042:	add    BYTE PTR [rax+0x1],al
   140005045:	add    BYTE PTR [rax],al
   140005047:	add    BYTE PTR [rax+0x37],al
   14000504a:	add    BYTE PTR [rax+0x1],al
   14000504d:	add    BYTE PTR [rax],al
   14000504f:	add    BYTE PTR [rax+0x39],al
   140005052:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .pdata:

0000000140006000 <.pdata>:
   140006000:	adc    BYTE PTR [rax],dl
   140006002:	add    BYTE PTR [rax],al
   140006004:	and    eax,0xb0000011
   140006009:	cmp    eax,DWORD PTR [rax]
   14000600b:	add    BYTE PTR [rcx+rdx*1+0x0],ah
   14000600f:	add    BYTE PTR [rbx-0x43ffffef],cl
   140006015:	cmp    eax,DWORD PTR [rax]
   140006017:	add    BYTE PTR [rax-0x79ffffef],dh
   14000601d:	adc    al,BYTE PTR [rax]
   14000601f:	add    ah,al
   140006021:	cmp    eax,DWORD PTR [rax]
   140006023:	add    al,bh
   140006025:	adc    al,BYTE PTR [rax]
   140006027:	add    BYTE PTR [rsi+0x14],ah
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	fdivr  DWORD PTR [rbx]
   14000602e:	add    BYTE PTR [rax],al
   140006030:	ins    BYTE PTR es:[rdi],dx
   140006031:	adc    al,0x0
   140006033:	add    BYTE PTR [rsi],bh
   140006035:	adc    eax,0x3be40000
   14000603a:	add    BYTE PTR [rax],al
   14000603c:	rex.R adc eax,0x16900000
   140006042:	add    BYTE PTR [rax],al
   140006044:	lock cmp eax,DWORD PTR [rax]
   140006047:	add    BYTE PTR [rax-0x4dffffea],ah
   14000604d:	(bad)  
   14000604e:	add    BYTE PTR [rax],al
   140006050:	mov    esp,0xb800003b
   140006055:	(bad)  
   140006056:	add    BYTE PTR [rax],al
   140006058:	sub    eax,0x400001f
   14000605d:	cmp    al,0x0
   14000605f:	add    BYTE PTR [rdi+rbx*1],dh
   140006062:	add    BYTE PTR [rax],al
   140006064:	retf   
   140006065:	(bad)  
   140006066:	add    BYTE PTR [rax],al
   140006068:	sub    al,0x3c
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	(bad)  
   14000606d:	(bad)  
   14000606e:	add    BYTE PTR [rax],al
   140006070:	shl    DWORD PTR [rax],cl
   140006072:	add    BYTE PTR [rax],al
   140006074:	cmp    BYTE PTR [rax+rax*1],bh
   140006077:	add    al,ah
   140006079:	and    BYTE PTR [rax],al
   14000607b:	add    BYTE PTR [rcx+0x4c000025],dh
   140006081:	cmp    al,0x0
   140006083:	add    al,dl
   140006085:	and    eax,0x25ee0000
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	push   0xfffffffff400003c
   140006091:	and    eax,0x26cb0000
   140006096:	add    BYTE PTR [rax],al
   140006098:	ins    BYTE PTR es:[rdi],dx
   140006099:	cmp    al,0x0
   14000609b:	add    al,ah
   14000609d:	add    BYTE PTR es:[rax],al
   1400060a0:	and    eax,0x78000028
   1400060a5:	cmp    al,0x0
   1400060a7:	add    BYTE PTR [rax+0x28],dl
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	(bad)  
   1400060ad:	sub    BYTE PTR [rax],al
   1400060af:	add    BYTE PTR [rax+0x5000003c],al
   1400060b5:	sub    DWORD PTR [rax],eax
   1400060b7:	add    bh,al
   1400060b9:	sub    DWORD PTR [rax],eax
   1400060bb:	add    BYTE PTR [rax+0x800003c],cl
   1400060c1:	sub    al,BYTE PTR [rax]
   1400060c3:	add    BYTE PTR [rip+0xffffffffbc00002a],ah        # 0xfc0060f3
   1400060c9:	cmp    eax,DWORD PTR [rax]
   1400060cb:	add    BYTE PTR [rdx+rbp*1],ch
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	(bad)
   1400060d4:	xchg   esp,eax
   1400060d5:	cmp    al,0x0
   1400060d7:	add    BYTE PTR [rax-0x4dffffd6],dh
   1400060dd:	sub    al,BYTE PTR [rax]
   1400060df:	.byte 0x0
   1400060e0:	nop
   1400060e1:	cmp    al,0x0
	...

Disassembly of section .didat:

0000000140007000 <.didat>:
   140007000:	xor    BYTE PTR [rcx],ch
   140007002:	add    BYTE PTR [rax+0x1],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    al,dl
   140007009:	sub    DWORD PTR [rax],eax
   14000700b:	rex add DWORD PTR [rax],eax
	...
   140007016:	add    BYTE PTR [rax],al
   140007018:	adc    BYTE PTR [rcx],ch
   14000701a:	add    BYTE PTR [rax+0x1],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    al,dh
   140007021:	sub    BYTE PTR [rax],al
   140007023:	rex add DWORD PTR [rax],eax
   140007026:	add    BYTE PTR [rax],al
   140007028:	shr    BYTE PTR [rax],1
   14000702a:	add    BYTE PTR [rax+0x1],al
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rax],dh
   140007031:	sub    BYTE PTR [rax],al
   140007033:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

0000000140008000 <.rsrc>:
	...
   14000800c:	add    DWORD PTR [rax],eax
   14000800e:	add    al,0x0
   140008010:	add    al,0x7
   140008012:	add    BYTE PTR [rax-0x7fffffc8],al
   140008018:	add    eax,DWORD PTR [rax]
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	push   rax
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	or     BYTE PTR [rsi],0x0
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    QWORD PTR [rax],rax
   140008027:	adc    BYTE PTR [rax],0x0
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	push   0x18800001
   140008031:	add    BYTE PTR [rax],al
   140008033:	add    BYTE PTR [rax+0x800001],al
	...
   140008045:	add    BYTE PTR [rcx],al
   140008047:	add    BYTE PTR [rcx],al
   140008049:	add    BYTE PTR [rax],al
   14000804b:	add    BYTE PTR [rax+0x800001],bl
	...
   14000805d:	add    BYTE PTR [rip+0x100],bl        # 0x140008163
   140008063:	add    BYTE PTR [rax+0x2800001],dh
   140008069:	add    BYTE PTR [rax],al
   14000806b:	add    al,cl
   14000806d:	add    DWORD PTR [rax],eax
   14000806f:	add    BYTE PTR [rbx],0x0
   140008072:	add    BYTE PTR [rax],al
   140008074:	loopne 0x140008077
   140008076:	add    BYTE PTR [rax+0x4],al
   14000807c:	clc    
   14000807d:	add    DWORD PTR [rax],eax
   14000807f:	add    BYTE PTR [rip+0x10000000],0x2        # 0x150008086
   140008086:	add    BYTE PTR [rax+0x6],al
   14000808c:	sub    BYTE PTR [rdx],al
   14000808e:	add    BYTE PTR [rax+0x7],al
   140008094:	add    al,BYTE PTR [rax]
   140008097:	or     BYTE PTR [rax],0x0
   14000809a:	add    BYTE PTR [rax],al
   14000809c:	pop    rax
   14000809d:	add    al,BYTE PTR [rax]
   14000809f:	or     BYTE PTR [rcx],0x0
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	jo     0x1400080a8
   1400080a6:	add    BYTE PTR [rax+0xa],al
   1400080ac:	mov    BYTE PTR [rdx],al
   1400080ae:	add    BYTE PTR [rax+0xb],al
   1400080b4:	movabs al,ds:0xb80000000c800002
   1400080bd:	add    al,BYTE PTR [rax]
   1400080bf:	or     BYTE PTR [rip+0xffffffffd0000000],0x2        # 0x1100080c6
   1400080c6:	add    BYTE PTR [rax+0xe],al
   1400080cc:	call   0x14f8080d3
   1400080d1:	add    BYTE PTR [rax],al
   1400080d3:	add    BYTE PTR [rax],al
   1400080d5:	add    eax,DWORD PTR [rax]
   1400080d7:	adc    BYTE PTR [rax],0x0
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	sbb    BYTE PTR [rbx],al
   1400080de:	add    BYTE PTR [rax+0x11],al
   1400080e4:	xor    BYTE PTR [rbx],al
   1400080e6:	add    BYTE PTR [rax+0x12],al
   1400080ec:	add    rax,QWORD PTR [rax]
   1400080ef:	adc    BYTE PTR [rbx],0x0
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	(bad)  
   1400080f5:	add    eax,DWORD PTR [rax]
   1400080f7:	adc    BYTE PTR [rax+rax*1],0x0
   1400080fb:	add    BYTE PTR [rax+0x3],bh
   1400080fe:	add    BYTE PTR [rax+0x15],al
   140008104:	nop
   140008105:	add    eax,DWORD PTR [rax]
   140008107:	adc    BYTE PTR [rsi],0x0
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	test   al,0x3
   14000810e:	add    BYTE PTR [rax+0x17],al
   140008114:	rol    BYTE PTR [rbx],0x0
   140008117:	sbb    BYTE PTR [rax],0x0
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	fadd   DWORD PTR [rbx]
   14000811e:	add    BYTE PTR [rax+0x19],al
   140008124:	lock add eax,DWORD PTR [rax]
   140008127:	sbb    BYTE PTR [rdx],0x0
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	or     BYTE PTR [rax+rax*1],al
   14000812f:	sbb    BYTE PTR [rbx],0x0
   140008132:	add    BYTE PTR [rax],al
   140008134:	and    BYTE PTR [rax+rax*1],al
   140008137:	sbb    BYTE PTR [rax+rax*1],0x0
   14000813b:	add    BYTE PTR [rax],bh
   14000813d:	add    al,0x0
   14000813f:	sbb    BYTE PTR [rip+0x50000000],0x4        # 0x190008146
   140008146:	add    BYTE PTR [rax+0x0],al
	...
   140008154:	add    DWORD PTR [rax],eax
   140008156:	add    DWORD PTR [rax],eax
   140008158:	call   0x1a8808163
   14000815d:	add    al,0x0
   14000815f:	cmp    BYTE PTR [rax+0x0],0x0
   140008163:	add    BYTE PTR [rax+0x800004],al
	...
   140008175:	add    BYTE PTR [rcx],al
   140008177:	add    BYTE PTR [rcx],al
   140008179:	add    BYTE PTR [rax],al
   14000817b:	add    BYTE PTR [rax+0x800004],bl
	...
   14000818d:	add    BYTE PTR [rcx],al
   14000818f:	add    BYTE PTR [rcx],al
   140008191:	add    BYTE PTR [rax],al
   140008193:	add    BYTE PTR [rax+0x800004],dh
	...
   1400081a5:	add    BYTE PTR [rcx],al
   1400081a7:	add    BYTE PTR [rcx],cl
   1400081a9:	add    al,0x0
   1400081ab:	add    al,cl
   1400081ad:	add    al,0x0
	...
   1400081bb:	add    BYTE PTR [rax],al
   1400081bd:	add    BYTE PTR [rcx],al
   1400081bf:	add    BYTE PTR [rcx],cl
   1400081c1:	add    al,0x0
   1400081c3:	add    al,bl
   1400081c5:	add    al,0x0
	...
   1400081d3:	add    BYTE PTR [rax],al
   1400081d5:	add    BYTE PTR [rcx],al
   1400081d7:	add    BYTE PTR [rcx],cl
   1400081d9:	add    al,0x0
   1400081db:	add    al,ch
   1400081dd:	add    al,0x0
	...
   1400081eb:	add    BYTE PTR [rax],al
   1400081ed:	add    BYTE PTR [rcx],al
   1400081ef:	add    BYTE PTR [rcx],cl
   1400081f1:	add    al,0x0
   1400081f3:	add    al,bh
   1400081f5:	add    al,0x0
	...
   140008203:	add    BYTE PTR [rax],al
   140008205:	add    BYTE PTR [rcx],al
   140008207:	add    BYTE PTR [rcx],cl
   140008209:	add    al,0x0
   14000820b:	add    BYTE PTR [rax],cl
   14000820d:	add    eax,0x0
	...
   14000821e:	add    DWORD PTR [rax],eax
   140008220:	or     DWORD PTR [rax+rax*1],eax
   140008223:	add    BYTE PTR [rax],bl
   140008225:	add    eax,0x0
	...
   140008236:	add    DWORD PTR [rax],eax
   140008238:	or     DWORD PTR [rax+rax*1],eax
   14000823b:	add    BYTE PTR [rax],ch
   14000823d:	add    eax,0x0
	...
   14000824e:	add    DWORD PTR [rax],eax
   140008250:	or     DWORD PTR [rax+rax*1],eax
   140008253:	add    BYTE PTR [rax],bh
   140008255:	add    eax,0x0
	...
   140008266:	add    DWORD PTR [rax],eax
   140008268:	or     DWORD PTR [rax+rax*1],eax
   14000826b:	add    BYTE PTR [rax+0x5],cl
	...
   14000827e:	add    DWORD PTR [rax],eax
   140008280:	or     DWORD PTR [rax+rax*1],eax
   140008283:	add    BYTE PTR [rax+0x5],bl
	...
   140008296:	add    DWORD PTR [rax],eax
   140008298:	or     DWORD PTR [rax+rax*1],eax
   14000829b:	add    BYTE PTR [rax+0x5],ch
	...
   1400082ae:	add    DWORD PTR [rax],eax
   1400082b0:	or     DWORD PTR [rax+rax*1],eax
   1400082b3:	add    BYTE PTR [rax+0x5],bh
	...
   1400082c6:	add    DWORD PTR [rax],eax
   1400082c8:	or     DWORD PTR [rax+rax*1],eax
   1400082cb:	add    BYTE PTR [rax+0x5],cl
	...
   1400082dd:	add    BYTE PTR [rcx],al
   1400082df:	add    BYTE PTR [rcx],cl
   1400082e1:	add    al,0x0
   1400082e3:	add    BYTE PTR [rax+0x5],bl
	...
   1400082f5:	add    BYTE PTR [rcx],al
   1400082f7:	add    BYTE PTR [rcx],cl
   1400082f9:	add    al,0x0
   1400082fb:	add    BYTE PTR [rax+0x5],ch
	...
   14000830d:	add    BYTE PTR [rcx],al
   14000830f:	add    BYTE PTR [rcx],cl
   140008311:	add    al,0x0
   140008313:	add    BYTE PTR [rax+0x5],bh
	...
   140008325:	add    BYTE PTR [rcx],al
   140008327:	add    BYTE PTR [rcx],cl
   140008329:	add    al,0x0
   14000832b:	add    al,cl
   14000832d:	add    eax,0x0
	...
   14000833e:	add    DWORD PTR [rax],eax
   140008340:	or     DWORD PTR [rax+rax*1],eax
   140008343:	add    al,bl
   140008345:	add    eax,0x0
	...
   140008356:	add    DWORD PTR [rax],eax
   140008358:	or     DWORD PTR [rax+rax*1],eax
   14000835b:	add    al,ch
   14000835d:	add    eax,0x0
	...
   14000836e:	add    DWORD PTR [rax],eax
   140008370:	or     DWORD PTR [rax+rax*1],eax
   140008373:	add    al,bh
   140008375:	add    eax,0x0
	...
   140008386:	add    DWORD PTR [rax],eax
   140008388:	or     DWORD PTR [rax+rax*1],eax
   14000838b:	add    BYTE PTR [rax],cl
   14000838d:	(bad)  
	...
   14000839e:	add    DWORD PTR [rax],eax
   1400083a0:	or     DWORD PTR [rax+rax*1],eax
   1400083a3:	add    BYTE PTR [rax],bl
   1400083a5:	(bad)  
	...
   1400083b6:	add    DWORD PTR [rax],eax
   1400083b8:	or     DWORD PTR [rax+rax*1],eax
   1400083bb:	add    BYTE PTR [rax],ch
   1400083bd:	(bad)  
	...
   1400083ce:	add    DWORD PTR [rax],eax
   1400083d0:	or     DWORD PTR [rax+rax*1],eax
   1400083d3:	add    BYTE PTR [rax],bh
   1400083d5:	(bad)  
	...
   1400083e6:	add    DWORD PTR [rax],eax
   1400083e8:	or     DWORD PTR [rax+rax*1],eax
   1400083eb:	add    BYTE PTR [rax+0x6],cl
	...
   1400083fe:	add    DWORD PTR [rax],eax
   140008400:	or     DWORD PTR [rax+rax*1],eax
   140008403:	add    BYTE PTR [rax+0x6],bl
	...
   140008416:	add    DWORD PTR [rax],eax
   140008418:	or     DWORD PTR [rax+rax*1],eax
   14000841b:	add    BYTE PTR [rax+0x6],ch
	...
   14000842e:	add    DWORD PTR [rax],eax
   140008430:	or     DWORD PTR [rax+rax*1],eax
   140008433:	add    BYTE PTR [rax+0x6],bh
	...
   140008446:	add    DWORD PTR [rax],eax
   140008448:	or     DWORD PTR [rax+rax*1],eax
   14000844b:	add    BYTE PTR [rax+0x6],cl
	...
   14000845d:	add    BYTE PTR [rcx],al
   14000845f:	add    BYTE PTR [rcx],cl
   140008461:	add    al,0x0
   140008463:	add    BYTE PTR [rax+0x6],bl
	...
   140008475:	add    BYTE PTR [rcx],al
   140008477:	add    BYTE PTR [rcx],cl
   140008479:	add    al,0x0
   14000847b:	add    BYTE PTR [rax+0x6],ch
	...
   14000848d:	add    BYTE PTR [rcx],al
   14000848f:	add    BYTE PTR [rcx],cl
   140008491:	add    al,0x0
   140008493:	add    BYTE PTR [rax+0x6],bh
	...
   1400084a5:	add    BYTE PTR [rcx],al
   1400084a7:	add    BYTE PTR [rcx],cl
   1400084a9:	add    al,0x0
   1400084ab:	add    al,cl
   1400084ad:	(bad)  
	...
   1400084be:	add    DWORD PTR [rax],eax
   1400084c0:	or     DWORD PTR [rax+rax*1],eax
   1400084c3:	add    al,bl
   1400084c5:	(bad)  
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	push   rax
   1400084c9:	fadd   DWORD PTR [rdx]
   1400084cb:	add    al,bl
	...
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rax],dl
   1400084d9:	xchg   DWORD PTR [rax],eax
   1400084db:	add    BYTE PTR [rax+0xa],ch
	...
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	js     0x14000847b
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	push   0x6
   1400084f1:	add    BYTE PTR [rax],al
   1400084f3:	add    BYTE PTR [rax],al
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    al,ah
   1400084f9:	xchg   edi,eax
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	call   0x140008503
   140008501:	add    BYTE PTR [rax],al
   140008503:	add    BYTE PTR [rax],al
   140008505:	add    BYTE PTR [rax],al
   140008507:	add    al,cl
   140008509:	(bad)  
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	call   0x140008512
   140008511:	add    BYTE PTR [rax],al
   140008513:	add    BYTE PTR [rax],al
   140008515:	add    BYTE PTR [rax],al
   140008517:	add    BYTE PTR [rax+0x2800009c],dh
   14000851d:	add    DWORD PTR [rax],eax
	...
   140008527:	add    al,bl
   140008529:	popf   
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	sub    BYTE PTR [rsi],dl
	...
   140008536:	add    BYTE PTR [rax],al
   140008538:	add    BYTE PTR [rax+rax*1+0xea800],dh
	...
   140008547:	add    BYTE PTR [rax-0x57ffff3e],ch
   14000854d:	or     BYTE PTR [rax],al
	...
   140008557:	add    BYTE PTR [rax-0x35],dl
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	enter  0x6,0x0
	...
   140008568:	sbb    dl,dl
   14000856a:	add    BYTE PTR [rax],al
   14000856c:	push   0x5
   140008571:	add    BYTE PTR [rax],al
   140008573:	add    BYTE PTR [rax],al
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax-0x40ffff29],al
   14000857d:	pop    QWORD PTR [rax]
	...
   140008587:	add    BYTE PTR [rax+0x67],al
   14000858a:	add    DWORD PTR [rax],eax
   14000858c:	sub    BYTE PTR [rdx+0x0],al
	...
   140008597:	add    BYTE PTR [rax-0x57],ch
   14000859a:	add    DWORD PTR [rax],eax
   14000859c:	test   al,0x25
	...
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	adc    bh,cl
   1400085aa:	add    DWORD PTR [rax],eax
   1400085ac:	test   al,0x10
	...
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	mov    eax,0x880001df
   1400085bd:	or     DWORD PTR [rax],eax
	...
   1400085c7:	add    BYTE PTR [rax-0x17],al
   1400085ca:	add    DWORD PTR [rax],eax
   1400085cc:	push   0x4
   1400085d1:	add    BYTE PTR [rax],al
   1400085d3:	add    BYTE PTR [rax],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rax+0x280001ee],dl
   1400085dd:	add    DWORD PTR [rax],eax
	...
   1400085e7:	add    BYTE PTR [rax+0x680001ef],bh
   1400085ed:	add    eax,0x0
   1400085f2:	add    BYTE PTR [rax],al
   1400085f4:	add    BYTE PTR [rax],al
   1400085f6:	add    BYTE PTR [rax],al
   1400085f8:	and    ch,dh
   1400085fa:	add    DWORD PTR [rax],eax
   1400085fc:	call   0x140008602
   140008601:	add    BYTE PTR [rax],al
   140008603:	add    BYTE PTR [rax],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rax],cl
   140008609:	test   DWORD PTR [rcx],0x6c800
	...
   140008617:	add    al,dl
   140008619:	std    
   14000861a:	add    DWORD PTR [rax],eax
   14000861c:	call   0x140008623
   140008621:	add    BYTE PTR [rax],al
   140008623:	add    BYTE PTR [rax],al
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rax-0x57fffe00],bh
   14000862d:	or     BYTE PTR [rax],al
	...
   140008637:	add    BYTE PTR [rax+0x9],ah
   14000863a:	add    al,BYTE PTR [rax]
   14000863c:	push   0x6
   140008641:	add    BYTE PTR [rax],al
   140008643:	add    BYTE PTR [rax],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    al,cl
   140008649:	lar    eax,WORD PTR [rax]
   14000864c:	test   al,0xe
	...
   140008656:	add    BYTE PTR [rax],al
   140008658:	jo     0x140008678
   14000865a:	add    al,BYTE PTR [rax]
   14000865c:	push   0x4
   140008661:	add    BYTE PTR [rax],al
   140008663:	add    BYTE PTR [rax],al
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    al,bl
   140008669:	and    al,BYTE PTR [rdx]
   14000866b:	add    BYTE PTR [rax+0x9],cl
   140008671:	add    BYTE PTR [rax],al
   140008673:	add    BYTE PTR [rax],al
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rax+0x2c],ah
   14000867a:	add    al,BYTE PTR [rax]
   14000867c:	test   al,0x10
	...
   140008686:	add    BYTE PTR [rax],al
   140008688:	or     BYTE PTR [rip+0x25a80002],bh        # 0x165a88690
	...
   140008696:	add    BYTE PTR [rax],al
   140008698:	mov    al,0x62
   14000869a:	add    al,BYTE PTR [rax]
   14000869c:	cli    
   14000869d:	imul   eax,DWORD PTR [rax],0x0
	...
   1400086a8:	test   al,0xed
   1400086aa:	add    DWORD PTR [rax],eax
   1400086ac:	out    0x0,al
	...
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	mov    al,0xce
   1400086ba:	add    al,BYTE PTR [rax]
   1400086bc:	mov    esp,0x0
   1400086c1:	add    BYTE PTR [rax],al
   1400086c3:	add    BYTE PTR [rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rax-0x67fffd2c],bh
   1400086cd:	add    eax,DWORD PTR [rax]
	...
   1400086d7:	add    BYTE PTR [rax-0x31],dh
   1400086da:	add    al,BYTE PTR [rax]
   1400086dc:	rex.B add eax,0x0
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	add    BYTE PTR [rax],al
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	or     eax,0x44004900
   1400086ed:	add    BYTE PTR [rdx+0x0],dl
   1400086f0:	pop    rdi
   1400086f1:	add    BYTE PTR [rbp+0x0],cl
   1400086f4:	add    BYTE PTR [r9+0x0],cl
   1400086f8:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400086fc:	push   rdx
   1400086fd:	add    BYTE PTR [rcx+0x0],al
   140008700:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140008704:	add    eax,DWORD PTR [rax]
   140008706:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000870a:	rex.WB add BYTE PTR [r8],al
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rax],ch
   140008711:	add    BYTE PTR [rax],al
   140008713:	add    BYTE PTR [rax+0x0],al
   140008716:	add    BYTE PTR [rax],al
   140008718:	add    BYTE PTR [rax],0x0
   14000871b:	add    BYTE PTR [rcx],al
   14000871d:	add    BYTE PTR [rax+rax*1],al
   140008720:	add    BYTE PTR [rax],al
   140008722:	add    BYTE PTR [rax],al
   140008724:	add    BYTE PTR [rax],cl
	...
   14000873e:	add    BYTE PTR [rax],0x0
   140008741:	add    BYTE PTR [rax],0x0
   140008744:	add    BYTE PTR [rax+0x800080],al
   14000874a:	add    BYTE PTR [rax],al
   14000874c:	add    BYTE PTR [rax],0x80
   14000874f:	add    BYTE PTR [rax-0x7fffff80],al
   140008755:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000875c:	add    BYTE PTR [rax],al
   14000875e:	inc    DWORD PTR [rax]
   140008760:	add    bh,bh
   140008762:	add    BYTE PTR [rax],al
   140008764:	add    bh,bh
   140008766:	inc    DWORD PTR [rax]
   140008768:	inc    DWORD PTR [rax]
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	inc    DWORD PTR [rax]
   14000876e:	inc    DWORD PTR [rax]
   140008770:	(bad)  
   140008771:	inc    DWORD PTR [rax]
   140008773:	add    bh,bh
   140008775:	(bad)  
   140008776:	inc    DWORD PTR [rax]
	...
   140008808:	add    BYTE PTR [rax],al
   14000880a:	(bad)  
   14000880b:	xchg   DWORD PTR [rdi+0x78],eax
	...
   140008825:	add    BYTE PTR [rax],al
   140008827:	ja     0x1400088a0
   140008829:	ja     0x1400087b9
   14000882b:	mov    al,ch
   14000882d:	mov    ?,WORD PTR [rax+0x0]
	...
   140008840:	add    BYTE PTR [rax],al
   140008842:	add    BYTE PTR [rdi],al
   140008844:	ja     0x1400088bd
   140008846:	jle    0x1400087d0
   140008848:	call   0xc88910d5
   14000884d:	mov    BYTE PTR [rax+0x78],ch
   140008850:	jo     0x140008852
	...
   14000885e:	add    BYTE PTR [rax],al
   140008860:	ja     0x1400088d9
   140008862:	ja     0x14000884c
   140008864:	call   0xc88910f1
   140008869:	mov    cs,WORD PTR [rax-0x18777118]
   14000886f:	mov    bh,ah
   140008871:	js     0x140008873
	...
   14000887b:	add    BYTE PTR [rdi],al
   14000887d:	xchg   BYTE PTR [rsi-0x77171789],al
   140008883:	mov    BYTE PTR [rax-0x17771778],cl
   140008889:	mov    BYTE PTR [rax-0x39777778],cl
   14000888f:	mov    ?,WORD PTR [rax+rcx*4+0x60]
	...
   14000889b:	(bad)  
   14000889c:	jle    0x140008826
   14000889e:	mov    BYTE PTR [rdi-0x77777778],cl
   1400088a4:	mov    cs,WORD PTR [rax-0x17771778]
   1400088aa:	call   0x127897197
   1400088af:	mov    BYTE PTR [rsi-0x78],bh
   1400088b2:	out    0x0,eax
   1400088b4:	add    BYTE PTR [rax],al
   1400088b6:	add    BYTE PTR [rax],al
   1400088b8:	add    BYTE PTR [rax],al
   1400088ba:	add    BYTE PTR [rsi],cl
   1400088bc:	vpmacssdd xmm1,xmm14,xmm8,XMMWORD PTR [r8-0x77777172]
   1400088c6:	call   0xc8891153
   1400088cb:	mov    BYTE PTR [rax+0x7c8e7eef],cl
   1400088d1:	mov    BYTE PTR [rax+rax*1+0x0],bh
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    BYTE PTR [rax],al
   1400088d9:	add    BYTE PTR [rax],al
   1400088db:	or     BYTE PTR [rax-0x77770108],cl
   1400088e1:	(bad)  
   1400088e2:	clc    
   1400088e3:	mov    BYTE PTR [rax-0x48],bh
   1400088e6:	mov    BYTE PTR [rax-0x17077118],cl
   1400088ec:	mov    BYTE PTR [rax-0x7179771b],cl
   1400088f2:	xchg   BYTE PTR [rax],al
   1400088f4:	add    BYTE PTR [rax],al
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	add    BYTE PTR [rax],al
   1400088fa:	add    BYTE PTR [rax],cl
   1400088fc:	(bad)
   140008900:	mov    bh,dh
   140008902:	cmp    DWORD PTR [rcx+0x789b9999],edi
   140008908:	mov    BYTE PTR [rax-0x10107778],cl
   14000890e:	jle    0x14000889e
   140008910:	jle    0x14000889a
   140008912:	xchg   BYTE PTR [rax],al
   140008914:	add    BYTE PTR [rax],al
   140008916:	add    BYTE PTR [rax],al
   140008918:	add    BYTE PTR [rax],al
   14000891a:	add    BYTE PTR [rsi],cl
   14000891c:	(bad)  
   14000891d:	(bad)  
   14000891e:	mov    cs,WORD PTR [rax+0x7bb97988]
   140008924:	cmp    edi,DWORD PTR [rbx-0x69]
   140008927:	cdq    
   140008928:	mov    BYTE PTR [rax-0x77077711],cl
   14000892e:	mov    WORD PTR [rax+0xe7888c],cs
   140008934:	add    BYTE PTR [rax],al
   140008936:	add    BYTE PTR [rax],al
   140008938:	add    BYTE PTR [rax],al
   14000893a:	add    BYTE PTR [rax],cl
   14000893c:	mov    BYTE PTR [rax-0x64741078],cl
   140008942:	jns    0x1400088fd
   140008944:	xchg   edi,eax
   140008945:	xchg   ebx,eax
   140008946:	jns    0x1400088fb
   140008948:	fwait
   140008949:	mov    BYTE PTR [rax-0x17771711],cl
   14000894f:	mov    es,WORD PTR [rsi+0x86f8]
   140008955:	add    BYTE PTR [rax],al
   140008957:	add    BYTE PTR [rax],al
   140008959:	add    BYTE PTR [rax],al
   14000895b:	or     bh,ch
   14000895d:	clc    
   14000895e:	mov    ?,edi
   140008960:	xchg   ebx,eax
   140008961:	jns    0x14000891c
   140008963:	jns    0x14000891e
   140008965:	mov    ecx,0x98b989b9
   14000896a:	mov    BYTE PTR [rax-0x77797078],cl
   140008970:	mov    cs,WORD PTR [rax+0xe8]
   140008976:	add    BYTE PTR [rax],al
   140008978:	add    BYTE PTR [rax],al
   14000897a:	add    BYTE PTR [rax],cl
   14000897c:	(bad)  
   14000897d:	(bad)
   140008981:	mov    ecx,0x9898b779
   140008986:	fwait
   140008987:	fwait
   140008988:	cwde   
   140008989:	fwait
   14000898a:	mov    BYTE PTR [rax-0x71181078],cl
   140008990:	xchg   DWORD PTR [rax+0x86],ecx
   140008996:	add    BYTE PTR [rax],al
   140008998:	add    BYTE PTR [rax],al
   14000899a:	add    BYTE PTR [rsi],cl
   14000899c:	(bad)  
   1400089a0:	cwde   
   1400089a1:	lahf   
   1400089a2:	clc    
   1400089a3:	fwait
   1400089a4:	fwait
   1400089a5:	fwait
   1400089a6:	xchg   edi,eax
   1400089a7:	xchg   edi,eax
   1400089a8:	fwait
   1400089a9:	xchg   edi,eax
   1400089aa:	cwde   
   1400089ab:	mov    ?,eax
   1400089ad:	mov    BYTE PTR [rsi-0x17777178],cl
	...
   1400089bb:	or     BYTE PTR [rdi-0x46467c71],cl
   1400089c1:	(bad)  
   1400089c2:	(bad)  
   1400089c3:	clc    
   1400089c4:	jns    0x14000894f
   1400089c6:	mov    ecx,0xb789b9b9
   1400089cb:	mov    BYTE PTR [rax-0x18771878],cl
   1400089d1:	mov    BYTE PTR [rsi+0x0],cl
   1400089d7:	add    BYTE PTR [rax],al
   1400089d9:	add    BYTE PTR [rax],al
   1400089db:	or     BYTE PTR [rax-0x64887608],cl
   1400089e1:	(bad)  
   1400089e2:	(bad)  
   1400089e3:	dec    DWORD PTR [rbx-0x67748665]
   1400089e9:	fwait
   1400089ea:	fwait
   1400089eb:	mov    BYTE PTR [rsi-0x73777108],cl
   1400089f1:	clc    
   1400089f2:	xchg   DWORD PTR [rax],eax
   1400089f4:	add    BYTE PTR [rax],al
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	add    BYTE PTR [rax],al
   1400089fa:	add    BYTE PTR [rsi],cl
   1400089fc:	(bad)
   140008a00:	ja     0x140008a01
   140008a02:	(bad)  
   140008a03:	(bad)  
   140008a04:	dec    DWORD PTR [rcx-0x68646875]
   140008a0a:	xchg   edi,eax
   140008a0b:	cwde   
   140008a0c:	mov    BYTE PTR [rax-0x7117777a],cl
   140008a12:	mov    es,WORD PTR [rax]
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	add    BYTE PTR [rax],al
   140008a1a:	add    BYTE PTR [rax],cl
   140008a1c:	(bad)
   140008a20:	fwait
   140008a21:	(bad)  
   140008a22:	(bad)  
   140008a23:	(bad)  
   140008a24:	(bad)  
   140008a25:	clc    
   140008a26:	mov    ecx,0xb9b7b989
   140008a2b:	mov    eax,0x88e88888
   140008a30:	xchg   al,bh
   140008a32:	mov    BYTE PTR [rax],al
   140008a34:	add    BYTE PTR [rax],al
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	add    BYTE PTR [rax],al
   140008a3a:	add    BYTE PTR [rax],cl
   140008a3c:	mov    BYTE PTR [rax-0x764647],cl
   140008a42:	(bad)  
   140008a43:	(bad)  
   140008a44:	(bad)  
   140008a45:	(bad)  
   140008a46:	clc    
   140008a47:	fwait
   140008a48:	jns    0x1400089d3
   140008a4a:	cwde   
   140008a4b:	cwde   
   140008a4c:	mov    ?,eax
   140008a4e:	mov    cs,WORD PTR [rsi+0xe7888e]
   140008a54:	add    BYTE PTR [rax],al
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	add    BYTE PTR [rax],al
   140008a5a:	add    BYTE PTR [rsi],cl
   140008a5c:	pop    QWORD PTR [rbx-0x6764c9]
   140008a62:	(bad)  
   140008a63:	(bad)  
   140008a64:	(bad)  
   140008a65:	(bad)  
   140008a66:	push   rdi
   140008a68:	mov    ecx,0x88b7b9b9
   140008a6d:	mov    bh,ah
   140008a6f:	mov    BYTE PTR [rdi+0x8e88],al
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    BYTE PTR [rax],al
   140008a79:	add    BYTE PTR [rax],al
   140008a7b:	or     BYTE PTR [rdi-0x64846485],cl
   140008a81:	(bad)  
   140008a82:	(bad)  
   140008a83:	(bad)  
   140008a84:	(bad)  
   140008a85:	(bad)  
   140008a86:	(bad)  
   140008a87:	dec    DWORD PTR [rax-0x77686468]
   140008a8d:	mov    bh,ah
   140008a8f:	mov    bh,ah
   140008a91:	mov    BYTE PTR [rax+0x0],cl
   140008a97:	add    BYTE PTR [rax],al
   140008a99:	add    BYTE PTR [rax],al
   140008a9b:	or     BYTE PTR [rax-0x76467677],cl
   140008aa1:	(bad)  
   140008aa2:	(bad)  
   140008aa3:	(bad)  
   140008aa4:	(bad)  
   140008aa5:	(bad)  
   140008aa6:	(bad)  
   140008aa7:	(bad)  
   140008aa8:	clc    
   140008aa9:	mov    bh,0xb9
   140008aab:	mov    DWORD PTR [rax-0x73017378],ecx
   140008ab1:	clc    
   140008ab2:	out    0x0,eax
   140008ab4:	add    BYTE PTR [rax],al
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	add    BYTE PTR [rax],al
   140008aba:	add    BYTE PTR [rsi],cl
   140008abc:	(bad)  
   140008abd:	jnp    0x140008a5a
   140008abf:	jns    0x140008a79
   140008ac1:	(bad)  
   140008ac2:	(bad)  
   140008ac3:	(bad)  
   140008ac4:	(bad)  
   140008ac5:	(bad)  
   140008ac6:	(bad)  
   140008ac7:	(bad)  
   140008ac8:	push   rdi
   140008aca:	fwait
   140008acb:	fwait
   140008acc:	mov    BYTE PTR [rax-0x77717719],cl
   140008ad2:	mov    es,WORD PTR [rax]
   140008ad4:	add    BYTE PTR [rax],al
   140008ad6:	add    BYTE PTR [rax],al
   140008ad8:	add    BYTE PTR [rax],al
   140008ada:	add    BYTE PTR [rax],cl
   140008adc:	(bad)  
   140008add:	cmp    ebx,DWORD PTR [rax-0x6465]
   140008ae3:	(bad)  
   140008ae4:	(bad)  
   140008ae5:	(bad)  
   140008ae6:	(bad)  
   140008ae7:	(bad)  
   140008ae8:	(bad)  
   140008ae9:	clc    
   140008aea:	mov    bh,0x98
   140008aec:	mov    BYTE PTR [rax-0x77797119],cl
   140008af2:	call   0x140008af7
   140008af7:	add    BYTE PTR [rax],al
   140008af9:	add    BYTE PTR [rax],al
   140008afb:	or     BYTE PTR [rax-0x48674487],cl
   140008b01:	(bad)  
   140008b02:	(bad)  
   140008b03:	(bad)  
   140008b04:	(bad)  
   140008b05:	(bad)  
   140008b06:	(bad)  
   140008b07:	(bad)  
   140008b08:	(bad)  
   140008b09:	clc    
   140008b0a:	fwait
   140008b0b:	fwait
   140008b0c:	xchg   DWORD PTR [rdi-0x77717719],ecx
   140008b12:	xchg   BYTE PTR [rax],al
   140008b14:	add    BYTE PTR [rax],al
   140008b16:	add    BYTE PTR [rax],al
   140008b18:	add    BYTE PTR [rax],al
   140008b1a:	add    BYTE PTR [rsi],cl
   140008b1c:	(bad)  
   140008b1d:	jnp    0x140008ab7
   140008b1f:	mov    ecx,0xffff8f98
   140008b24:	(bad)  
   140008b25:	(bad)  
   140008b26:	(bad)  
   140008b27:	(bad)  
   140008b28:	dec    DWORD PTR [rbx-0x77776468]
   140008b2e:	xchg   BYTE PTR [rax+0x8e88e7],cl
   140008b34:	add    BYTE PTR [rax],al
   140008b36:	add    BYTE PTR [rax],al
   140008b38:	add    BYTE PTR [rax],al
   140008b3a:	add    BYTE PTR [rax],cl
   140008b3c:	(bad)  
   140008b3d:	jnp    0x140008bb8
   140008b3f:	mov    bh,0xb9
   140008b41:	(bad)  
   140008b42:	(bad)  
   140008b43:	(bad)  
   140008b44:	(bad)  
   140008b45:	(bad)  
   140008b46:	(bad)  
   140008b47:	(bad)  
   140008b48:	clc    
   140008b49:	fwait
   140008b4a:	jnp    0x140008ae4
   140008b4c:	mov    BYTE PTR [rdi-0x7737719],cl
   140008b52:	out    0x0,eax
   140008b54:	add    BYTE PTR [rax],al
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	add    BYTE PTR [rax],al
   140008b5a:	add    BYTE PTR [rax],cl
   140008b5c:	mov    BYTE PTR [rcx-0x744647],cl
   140008b62:	(bad)  
   140008b63:	(bad)  
   140008b64:	(bad)  
   140008b65:	(bad)  
   140008b66:	(bad)  
   140008b67:	clc    
   140008b68:	mov    ecx,0x88b979b9
   140008b6d:	mov    bh,ah
   140008b6f:	mov    bh,ah
   140008b71:	(bad)  
   140008b72:	mov    es,WORD PTR [rax]
   140008b74:	add    BYTE PTR [rax],al
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	add    BYTE PTR [rax],al
   140008b7a:	add    BYTE PTR [rsi],cl
   140008b7c:	pop    QWORD PTR [rbx-0x678c85]
   140008b82:	(bad)  
   140008b83:	(bad)  
   140008b84:	(bad)  
   140008b85:	(bad)  
   140008b86:	dec    DWORD PTR [rcx-0x67648475]
   140008b8c:	clc    
   140008b8d:	clc    
   140008b8e:	mov    cs,WORD PTR [rax+0xe788e7]
   140008b94:	add    BYTE PTR [rax],al
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	add    BYTE PTR [rax],al
   140008b9a:	add    BYTE PTR [rax],cl
   140008b9c:	(bad)  
   140008b9d:	mov    edx,DWORD PTR [rdi-0x4665]
   140008ba3:	(bad)  
   140008ba4:	(bad)  
   140008ba5:	dec    DWORD PTR [rbx-0x67676465]
   140008bab:	mov    eax,0x88e78888
   140008bb0:	mov    cs,WORD PTR [rax+0x88]
   140008bb6:	add    BYTE PTR [rax],al
   140008bb8:	add    BYTE PTR [rax],al
   140008bba:	add    BYTE PTR [rax],cl
   140008bbc:	mov    BYTE PTR [rdi-0x748645],al
   140008bc2:	(bad)  
   140008bc3:	(bad)  
   140008bc4:	(bad)  
   140008bc5:	clc    
   140008bc6:	mov    ecx,0x399b988b
   140008bcb:	mov    BYTE PTR [rdi-0x18771871],cl
   140008bd1:	mov    bh,ah
	...
   140008bdb:	(bad)  
   140008bdc:	(bad)  
   140008bdd:	idiv   DWORD PTR [rcx-0x45]
   140008be0:	cwde   
   140008be1:	(bad)  
   140008be2:	(bad)  
   140008be3:	(bad)  
   140008be4:	clc    
   140008be5:	mov    ecx,0x9b7b9b8b
   140008bea:	jnp    0x140008b74
   140008bec:	mov    BYTE PTR [rax-0x7730774],cl
   140008bf2:	mov    es,WORD PTR [rax]
   140008bf4:	add    BYTE PTR [rax],al
   140008bf6:	add    BYTE PTR [rax],al
   140008bf8:	add    BYTE PTR [rax],al
   140008bfa:	add    BYTE PTR [rax],cl
   140008bfc:	mov    al,bh
   140008bfe:	mov    bh,0x98
   140008c00:	mov    ecx,0x8bffffff
   140008c05:	jns    0x140008bc0
   140008c07:	mov    DWORD PTR [rcx-0x7777777],edi
   140008c0d:	clc    
   140008c0e:	out    0x8e,eax
   140008c10:	mov    cs,WORD PTR [rax+0xe7]
   140008c16:	add    BYTE PTR [rax],al
   140008c18:	add    BYTE PTR [rax],al
   140008c1a:	add    BYTE PTR [rax],cl
   140008c1c:	mov    al,bh
   140008c1e:	cmp    DWORD PTR [rcx-0x74000048],0xffffff98
   140008c25:	fwait
   140008c26:	jnp    0x140008bc3
   140008c28:	jae    0x140008be2
   140008c2a:	mov    eax,0xe788f888
   140008c2f:	mov    bh,ah
   140008c31:	mov    BYTE PTR [rsi+0x0],cl
   140008c37:	add    BYTE PTR [rax],al
   140008c39:	add    BYTE PTR [rax],al
   140008c3b:	(bad)  
   140008c3c:	clc    
   140008c3d:	pop    QWORD PTR [rdi-0x77706485]
   140008c43:	mov    bh,0xb9
   140008c45:	mov    bh,0x9b
   140008c47:	jns    0x140008c01
   140008c49:	mov    DWORD PTR [rax-0x18077778],ecx
   140008c4f:	mov    BYTE PTR [rsi+0xe788],al
   140008c55:	add    BYTE PTR [rax],al
   140008c57:	add    BYTE PTR [rax],al
   140008c59:	add    BYTE PTR [rax],al
   140008c5b:	or     BYTE PTR [rdi+0x799bf888],cl
   140008c61:	mov    bh,0xb9
   140008c63:	mov    DWORD PTR [rdi-0x76878465],esi
   140008c69:	mov    eax,0x8ff88f88
   140008c6e:	out    0x88,eax
   140008c70:	call   0x1400114fd
   140008c75:	add    BYTE PTR [rax],al
   140008c77:	add    BYTE PTR [rax],al
   140008c79:	add    BYTE PTR [rax],al
   140008c7b:	or     al,bh
   140008c7d:	clc    
   140008c7e:	mov    cs,WORD PTR [rcx-0x64646448]
   140008c84:	cwde   
   140008c85:	mov    eax,0x88b8b798
   140008c8a:	mov    al,bh
   140008c8c:	mov    BYTE PTR [rax-0x77187719],cl
   140008c92:	out    0x0,eax
   140008c94:	add    BYTE PTR [rax],al
   140008c96:	add    BYTE PTR [rax],al
   140008c98:	add    BYTE PTR [rax],al
   140008c9a:	add    BYTE PTR [rax],cl
   140008c9c:	mov    al,bh
   140008c9e:	clc    
   140008c9f:	mov    BYTE PTR [rcx-0x47777449],cl
   140008ca5:	cwde   
   140008ca6:	mov    eax,0x8f889b78
   140008cab:	(bad)
   140008caf:	mov    BYTE PTR [rsi+0x8e88],cl
   140008cb5:	add    BYTE PTR [rax],al
   140008cb7:	add    BYTE PTR [rax],al
   140008cb9:	add    BYTE PTR [rax],al
   140008cbb:	or     BYTE PTR [rax-0x77707708],cl
   140008cc1:	mov    esi,DWORD PTR [rdi-0x49]
   140008cc4:	mov    ecx,DWORD PTR [rbx-0x77474777]
   140008cca:	clc    
   140008ccb:	mov    BYTE PTR [rax-0x18777178],cl
   140008cd1:	mov    bh,ah
	...
   140008cdb:	or     BYTE PTR [rax-0x7077171],cl
   140008ce1:	mov    BYTE PTR [rdi-0x77747677],dh
   140008ce7:	mov    eax,0x88f8f888
   140008cec:	mov    BYTE PTR [rax-0x7737719],cl
   140008cf2:	mov    es,WORD PTR [rax]
   140008cf4:	add    BYTE PTR [rax],al
   140008cf6:	add    BYTE PTR [rax],al
   140008cf8:	add    BYTE PTR [rax],al
   140008cfa:	add    BYTE PTR [rax],cl
   140008cfc:	(bad)  
   140008d00:	(bad)
   140008d04:	mov    eax,0x8f8878b7
   140008d09:	mov    BYTE PTR [rax-0x18707778],cl
   140008d0f:	mov    cs,WORD PTR [rsi+0xe788]
   140008d15:	add    BYTE PTR [rax],al
   140008d17:	add    BYTE PTR [rax],al
   140008d19:	add    BYTE PTR [rax],al
   140008d1b:	or     bh,ch
   140008d1d:	clc    
   140008d1e:	mov    BYTE PTR [rax-0x77777778],cl
   140008d24:	mov    BYTE PTR [rax-0x70777008],cl
   140008d2a:	mov    BYTE PTR [rax-0x77187778],cl
   140008d30:	xchg   DWORD PTR [rax+0x88],ecx
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	add    BYTE PTR [rax],al
   140008d3a:	add    BYTE PTR [rax],cl
   140008d3c:	clc    
   140008d3d:	clc    
   140008d3e:	mov    ?,eax
   140008d40:	mov    BYTE PTR [rax-0x70707071],cl
   140008d46:	(bad)  
   140008d4a:	mov    BYTE PTR [rax-0x7737078],cl
   140008d50:	mov    cs,WORD PTR [rax+0x8e]
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	add    BYTE PTR [rax],al
   140008d5a:	add    BYTE PTR [rax],cl
   140008d5c:	(bad)  
   140008d5d:	(bad)  
   140008d5e:	dec    DWORD PTR [rdi-0x77777771]
   140008d64:	mov    BYTE PTR [rax-0x77770778],cl
   140008d6a:	mov    BYTE PTR [rax-0x17177778],cl
   140008d70:	mov    cs,WORD PTR [rax+0xe0]
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	add    BYTE PTR [rax],al
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	call   0x128e97669
   140008d81:	call   0xc8f91c6e
   140008d86:	mov    BYTE PTR [rax-0x77777778],cl
   140008d8c:	clc    
   140008d8d:	mov    BYTE PTR [rax+0x8088],cl
	...
   140008da3:	add    BYTE PTR [rax],al
   140008da5:	mov    al,ch
   140008da7:	call   0x128891c3a
   140008dac:	call   0x140008e99
	...
   140008f75:	add    BYTE PTR [rax],al
   140008f77:	add    bh,bh
   140008f79:	(bad)  
   140008f7a:	(bad)  
   140008f7b:	(bad)  
   140008f7c:	(bad)  
   140008f7d:	(bad)  
   140008f7e:	(bad)  
   140008f7f:	(bad)  
   140008f80:	(bad)  
   140008f81:	(bad)  
   140008f82:	(bad)  
   140008f83:	(bad)  
   140008f84:	(bad)  
   140008f85:	(bad)  
   140008f86:	(bad)  
   140008f87:	(bad)  
   140008f88:	(bad)  
   140008f89:	(bad)  
   140008f8a:	(bad)  
   140008f8b:	(bad)  
   140008f8c:	(bad)  
   140008f8d:	(bad)  
   140008f8e:	(bad)  
   140008f8f:	(bad)  
   140008f90:	(bad)  
   140008f91:	(bad)  
   140008f92:	(bad)  
   140008f93:	(bad)  
   140008f94:	(bad)  
   140008f95:	(bad)  
   140008f96:	(bad)  
   140008f97:	(bad)  
   140008f98:	(bad)  
   140008f99:	(bad)  
   140008f9a:	(bad)  
   140008f9b:	(bad)  
   140008f9c:	clc    
   140008f9d:	ud0    edi,edi
   140008fa0:	(bad)  
   140008fa1:	(bad)  
   140008fa2:	(bad)  
   140008fa3:	cld    
   140008fa4:	add    BYTE PTR [rdi],al
   140008fa6:	(bad)  
   140008fa7:	(bad)  
   140008fa8:	(bad)  
   140008fa9:	(bad)  
   140008faa:	inc    BYTE PTR [rax]
   140008fac:	add    BYTE PTR [rax],al
   140008fae:	jg     0x140008faf
   140008fb0:	(bad)  
   140008fb1:	inc    DWORD PTR [rax]
   140008fb3:	add    BYTE PTR [rax],al
   140008fb5:	add    BYTE PTR [rdi],cl
   140008fb7:	(bad)  
   140008fb8:	inc    DWORD PTR [rax+0x0]
   140008fbe:	(bad)  
   140008fbf:	(bad)  
   140008fc0:	inc    BYTE PTR [rax]
   140008fc2:	add    BYTE PTR [rax],al
   140008fc4:	add    BYTE PTR [rax],al
   140008fc6:	add    edi,edi
   140008fc8:	inc    BYTE PTR [rax]
   140008fca:	add    BYTE PTR [rax],al
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    edi,edi
   140008fd0:	inc    BYTE PTR [rax]
   140008fd2:	add    BYTE PTR [rax],al
   140008fd4:	add    BYTE PTR [rax],al
   140008fd6:	add    edi,edi
   140008fd8:	inc    BYTE PTR [rax]
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	add    BYTE PTR [rax],al
   140008fde:	add    edi,edi
   140008fe0:	inc    BYTE PTR [rax]
   140008fe2:	add    BYTE PTR [rax],al
   140008fe4:	add    BYTE PTR [rax],al
   140008fe6:	add    edi,edi
   140008fe8:	inc    BYTE PTR [rax]
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	add    BYTE PTR [rax],al
   140008fee:	add    edi,edi
   140008ff0:	inc    BYTE PTR [rax]
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    edi,edi
   140008ff8:	inc    BYTE PTR [rax]
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	add    BYTE PTR [rax],al
   140008ffe:	add    edi,edi
   140009000:	inc    BYTE PTR [rax]
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    edi,edi
   140009008:	inc    BYTE PTR [rax]
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    edi,edi
   140009010:	inc    BYTE PTR [rax]
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    edi,edi
   140009018:	inc    BYTE PTR [rax]
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    edi,edi
   140009020:	inc    BYTE PTR [rax]
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    edi,edi
   140009028:	inc    BYTE PTR [rax]
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	add    BYTE PTR [rax],al
   14000902e:	add    edi,edi
   140009030:	inc    BYTE PTR [rax]
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    edi,edi
   140009038:	inc    BYTE PTR [rax]
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	add    BYTE PTR [rax],al
   14000903e:	add    edi,edi
   140009040:	inc    BYTE PTR [rax]
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    edi,edi
   140009048:	inc    BYTE PTR [rax]
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    edi,edi
   140009050:	inc    BYTE PTR [rax]
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    edi,edi
   140009058:	inc    BYTE PTR [rax]
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    edi,edi
   140009060:	inc    BYTE PTR [rax]
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    edi,edi
   140009068:	inc    BYTE PTR [rax]
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    edi,edi
   140009070:	inc    BYTE PTR [rax]
   140009072:	add    BYTE PTR [rax],al
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    edi,edi
   140009078:	inc    BYTE PTR [rax]
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    edi,edi
   140009080:	inc    BYTE PTR [rax]
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    edi,edi
   140009088:	inc    BYTE PTR [rax]
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    edi,edi
   140009090:	inc    BYTE PTR [rax]
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    edi,edi
   140009098:	inc    BYTE PTR [rax]
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    edi,edi
   1400090a0:	inc    BYTE PTR [rax]
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    edi,edi
   1400090a8:	inc    BYTE PTR [rax]
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    edi,edi
   1400090b0:	inc    BYTE PTR [rax]
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    edi,edi
   1400090b8:	inc    BYTE PTR [rax]
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    edi,edi
   1400090c0:	inc    BYTE PTR [rax]
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	add    BYTE PTR [rax],al
   1400090c6:	add    edi,edi
   1400090c8:	inc    BYTE PTR [rax]
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    edi,edi
   1400090d0:	inc    BYTE PTR [rax]
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    edi,edi
   1400090d8:	inc    BYTE PTR [rax]
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	add    BYTE PTR [rax],al
   1400090de:	add    edi,edi
   1400090e0:	inc    BYTE PTR [rax]
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    BYTE PTR [rax],al
   1400090e6:	add    edi,edi
   1400090e8:	inc    BYTE PTR [rax]
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    edi,edi
   1400090f0:	inc    BYTE PTR [rax]
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	(bad)  
   1400090f7:	(bad)  
   1400090f8:	inc    DWORD PTR [rax]
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	jg     0x1400090ff
   140009100:	(bad)  
   140009101:	(bad)  
   140009102:	inc    eax
   140009104:	add    BYTE PTR [rdi],cl
   140009106:	(bad)  
   140009107:	(bad)  
   140009108:	(bad)  
   140009109:	(bad)  
   14000910a:	(bad)  
   14000910b:	(bad)  
   14000910c:	(bad)  
   14000910d:	(bad)  
   14000910e:	(bad)  
   14000910f:	(bad)  
   140009110:	(bad)  
   140009111:	(bad)  
   140009112:	(bad)  
   140009113:	(bad)  
   140009114:	(bad)  
   140009115:	(bad)  
   140009116:	(bad)  
   140009117:	(bad)  
   140009118:	(bad)  
   140009119:	(bad)  
   14000911a:	(bad)  
   14000911b:	(bad)  
   14000911c:	(bad)  
   14000911d:	(bad)  
   14000911e:	(bad)  
   14000911f:	(bad)  
   140009120:	(bad)  
   140009121:	(bad)  
   140009122:	(bad)  
   140009123:	(bad)  
   140009124:	(bad)  
   140009125:	(bad)  
   140009126:	(bad)  
   140009127:	(bad)  
   140009128:	(bad)  
   140009129:	(bad)  
   14000912a:	(bad)  
   14000912b:	(bad)  
   14000912c:	(bad)  
   14000912d:	(bad)  
   14000912e:	(bad)  
   14000912f:	(bad)  
   140009130:	(bad)  
   140009131:	(bad)  
   140009132:	(bad)  
   140009133:	(bad)  
   140009134:	(bad)  
   140009135:	(bad)  
   140009136:	(bad)  
   140009137:	(bad)  
   140009138:	(bad)  
   140009139:	(bad)  
   14000913a:	(bad)  
   14000913b:	(bad)  
   14000913c:	(bad)  
   14000913d:	(bad)  
   14000913e:	(bad)  
   14000913f:	(bad)  
   140009140:	(bad)  
   140009141:	(bad)  
   140009142:	(bad)  
   140009143:	(bad)  
   140009144:	(bad)  
   140009145:	(bad)  
   140009146:	(bad)  
   140009147:	(bad)  
   140009148:	(bad)  
   140009149:	(bad)  
   14000914a:	(bad)  
   14000914b:	(bad)  
   14000914c:	(bad)  
   14000914d:	(bad)  
   14000914e:	(bad)  
   14000914f:	(bad)  
   140009150:	(bad)  
   140009151:	(bad)  
   140009152:	(bad)  
   140009153:	(bad)  
   140009154:	(bad)  
   140009155:	(bad)  
   140009156:	(bad)  
   140009157:	(bad)  
   140009158:	(bad)  
   140009159:	(bad)  
   14000915a:	(bad)  
   14000915b:	(bad)  
   14000915c:	(bad)  
   14000915d:	(bad)  
   14000915e:	(bad)  
   14000915f:	(bad)  
   140009160:	(bad)  
   140009161:	(bad)  
   140009162:	(bad)  
   140009163:	(bad)  
   140009164:	(bad)  
   140009165:	(bad)  
   140009166:	(bad)  
   140009167:	(bad)  
   140009168:	(bad)  
   140009169:	(bad)  
   14000916a:	(bad)  
   14000916b:	(bad)  
   14000916c:	(bad)  
   14000916d:	(bad)  
   14000916e:	(bad)  
   14000916f:	(bad)  
   140009170:	(bad)  
   140009171:	(bad)  
   140009172:	(bad)  
   140009173:	(bad)  
   140009174:	(bad)  
   140009175:	(bad)  
   140009176:	(bad)  
   140009177:	jmp    FWORD PTR [rax]
   140009179:	add    BYTE PTR [rax],al
   14000917b:	add    BYTE PTR [rax],dh
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rax+0x0],ah
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    DWORD PTR [rax],eax
   140009186:	add    al,0x0
   140009188:	add    BYTE PTR [rax],al
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	add    BYTE PTR [rax+rax*1],0x0
	...
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],0x0
   1400091a9:	add    BYTE PTR [rax],0x0
   1400091ac:	add    BYTE PTR [rax+0x800080],al
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],0x80
   1400091b7:	add    BYTE PTR [rax-0x7fffff80],al
   1400091bd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	inc    DWORD PTR [rax]
   1400091c8:	add    bh,bh
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	add    bh,bh
   1400091ce:	inc    DWORD PTR [rax]
   1400091d0:	inc    DWORD PTR [rax]
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	inc    DWORD PTR [rax]
   1400091d6:	inc    DWORD PTR [rax]
   1400091d8:	(bad)  
   1400091d9:	inc    DWORD PTR [rax]
   1400091db:	add    bh,bh
   1400091dd:	(bad)  
   1400091de:	inc    DWORD PTR [rax]
	...
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	mov    al,ch
   140009220:	jo     0x140009222
	...
   140009232:	mov    BYTE PTR [rsi-0x77777179],cl
   140009238:	mov    ?,WORD PTR [rax+0x0]
	...
   140009243:	add    BYTE PTR [rax],al
   140009245:	add    BYTE PTR [rax],cl
   140009247:	mov    bh,ah
   140009249:	mov    cs,WORD PTR [rsi-0x71777178]
   14000924f:	mov    BYTE PTR [rsi+0x70e6],al
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rax],al
   140009259:	add    BYTE PTR [rax],al
   14000925b:	mov    BYTE PTR [rsi-0x77171788],cl
   140009261:	mov    BYTE PTR [rax-0x77777778],cl
   140009267:	mov    cs,WORD PTR [rsi+0xce88]
   14000926d:	add    BYTE PTR [rax],al
   14000926f:	add    BYTE PTR [rax],al
   140009271:	or     BYTE PTR [rsi-0x77777772],cl
   140009277:	mov    BYTE PTR [rax-0x71177718],cl
   14000927d:	mov    cs,WORD PTR [rsi+0x67888c88]
   140009283:	push   0x0
   140009288:	add    BYTE PTR [rsi-0x71777778],cl
   14000928e:	mov    BYTE PTR [rax-0x77770718],cl
   140009294:	mov    BYTE PTR [rax-0x77717778],cl
   14000929a:	call   0x14000932d
   14000929f:	add    BYTE PTR [rax],al
   1400092a1:	mov    al,bh
   1400092a3:	clc    
   1400092a4:	mov    ?,eax
   1400092a6:	mov    BYTE PTR [rax-0x17777778],cl
   1400092ac:	mov    cs,WORD PTR [rax-0x77717772]
   1400092b2:	outs   dx,BYTE PTR ds:[rsi]
   1400092b3:	xchg   BYTE PTR [rax],al
   1400092b5:	add    BYTE PTR [rax],al
   1400092b7:	add    BYTE PTR [rax],al
   1400092b9:	call   0xcf892146
   1400092be:	mov    BYTE PTR [rbx-0x67],bh
   1400092c1:	mov    ecx,0x8e888888
   1400092c6:	mov    BYTE PTR [rsi-0x7897770a],cl
   1400092cc:	add    BYTE PTR [rax],al
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	add    BYTE PTR [rax-0x77770708],cl
   1400092d6:	cmp    DWORD PTR [rcx-0x67646885],edi
   1400092dc:	mov    BYTE PTR [rax-0x77717778],cl
   1400092e2:	out    0x8e,eax
   1400092e4:	add    BYTE PTR [rax],al
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	add    BYTE PTR [rax-0x78],bh
   1400092eb:	dec    BYTE PTR [rax-0x6c68847d]
   1400092f1:	fwait
   1400092f2:	xchg   edi,eax
   1400092f3:	fwait
   1400092f4:	js     0x140009284
   1400092f6:	mov    al,ch
   1400092f8:	test   BYTE PTR [rax+0x8ec8],0x0
   1400092ff:	add    BYTE PTR [rax],al
   140009301:	call   0xf9888bfe
   140009306:	cdq    
   140009307:	mov    ecx,0x999b98b7
   14000930c:	mov    ecx,0x8e88888f
   140009311:	mov    al,ch
   140009313:	xchg   DWORD PTR [rax],eax
   140009315:	add    BYTE PTR [rax],al
   140009317:	add    BYTE PTR [rax],al
   140009319:	mov    BYTE PTR [rax-0x70847678],cl
   14000931f:	mov    DWORD PTR [rcx-0x47],edi
   140009322:	mov    ecx,0xe898988b
   140009327:	mov    ?,esi
   140009329:	mov    BYTE PTR [rsi-0x2],ch
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	add    al,ch
   140009332:	clc    
   140009333:	mov    BYTE PTR [rbx],bh
   140009335:	cwde   
   140009336:	(bad)  
   140009337:	(bad)  
   140009338:	mov    ecx,0x9b977b89
   14000933d:	jnp    0x1400092c7
   14000933f:	mov    BYTE PTR [rsi+0x8ce888],cl
   140009345:	add    BYTE PTR [rax],al
   140009347:	add    BYTE PTR [rax],al
   140009349:	mov    BYTE PTR [rdi-0x474679],cl
   14000934f:	(bad)  
   140009350:	clc    
   140009351:	mov    ecx,0x97b9b9b9
   140009356:	mov    al,ch
   140009358:	test   BYTE PTR [rax+0x8ec8],0x0
   14000935f:	add    BYTE PTR [rax],al
   140009361:	js     0x1400092eb
   140009363:	mov    edx,DWORD PTR [rdi-0x68]
   140009369:	clc    
   14000936a:	xchg   edi,eax
   14000936b:	cwde   
   14000936c:	cwde   
   14000936d:	mov    ecx,0x888e8888
   140009372:	call   0x140009405
   140009377:	add    BYTE PTR [rax],al
   140009379:	out    dx,eax
   14000937a:	clc    
   14000937b:	(bad)  
   14000937c:	fwait
   14000937d:	lahf   
   14000937e:	(bad)  
   14000937f:	(bad)  
   140009380:	(bad)  
   140009381:	dec    DWORD PTR [rbx-0x67646465]
   140009387:	mov    BYTE PTR [rsi+0xf76e88],cl
   14000938d:	add    BYTE PTR [rax],al
   14000938f:	add    BYTE PTR [rax],al
   140009391:	mov    BYTE PTR [rax-0x677447],cl
   140009397:	(bad)  
   140009398:	(bad)  
   140009399:	(bad)  
   14000939a:	dec    DWORD PTR [rcx-0x71478677]
   1400093a0:	mov    WORD PTR [rax+0x8ee7],cs
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	add    al,ch
   1400093aa:	clc    
   1400093ab:	fwait
   1400093ac:	xchg   edi,eax
   1400093ad:	mov    eax,0xffffffff
   1400093b2:	(bad)  
   1400093b3:	(bad)  
   1400093b4:	mov    ecx,0xfe8897b7
   1400093b9:	mov    al,cl
   1400093bb:	xchg   DWORD PTR [rax],eax
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rax],al
   1400093c1:	mov    BYTE PTR [rax-0x6746c8],cl
   1400093c7:	(bad)  
   1400093c8:	(bad)  
   1400093c9:	(bad)  
   1400093ca:	(bad)  
   1400093cb:	(bad)  
   1400093cc:	clc    
   1400093cd:	fwait
   1400093ce:	fwait
   1400093cf:	mov    BYTE PTR [rsi+0x8ee888],al
   1400093d5:	add    BYTE PTR [rax],al
   1400093d7:	add    BYTE PTR [rax],al
   1400093d9:	js     0x1400093ce
   1400093db:	fwait
   1400093dc:	fwait
   1400093dd:	mov    eax,0xffffffff
   1400093e2:	(bad)  
   1400093e3:	(bad)  
   1400093e4:	dec    DWORD PTR [rcx-0x77017177]
   1400093ea:	out    0x8e,eax
   1400093ec:	add    BYTE PTR [rax],al
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	add    bh,ch
   1400093f2:	mov    BYTE PTR [rcx-0x6777],bh
   1400093f8:	(bad)  
   1400093f9:	(bad)  
   1400093fa:	(bad)  
   1400093fb:	(bad)  
   1400093fc:	(bad)  
   1400093fd:	mov    ecx,0x888c88bb
   140009402:	push   0x87
   140009407:	add    BYTE PTR [rax],al
   140009409:	mov    cl,bh
   14000940b:	mov    ecx,0xffffb8b7
   140009410:	(bad)  
   140009411:	(bad)  
   140009412:	(bad)  
   140009413:	(bad)  
   140009414:	clc    
   140009415:	mov    edx,DWORD PTR [rdi-0x17777178]
   14000941b:	mov    es,WORD PTR [rax]
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    BYTE PTR [rax],al
   140009421:	js     0x1400093ab
   140009423:	cwde   
   140009424:	fwait
   140009425:	cwde   
   140009426:	(bad)  
   140009427:	(bad)  
   140009428:	(bad)  
   140009429:	(bad)  
   14000942a:	(bad)  
   14000942b:	dec    DWORD PTR [rbx-0x71786469]
   140009431:	mov    BYTE PTR [rsi-0x79],ch
   140009434:	add    BYTE PTR [rax],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	add    bh,ch
   14000943a:	idiv   DWORD PTR [rbx-0x4768]
   140009440:	(bad)  
   140009441:	(bad)  
   140009442:	dec    DWORD PTR [rbx-0x77474667]
   140009448:	xchg   BYTE PTR [rax+0x8ee8],cl
   14000944e:	add    BYTE PTR [rax],al
   140009450:	add    BYTE PTR [rax-0x47866408],cl
   140009456:	(bad)  
   140009457:	(bad)  
   140009458:	(bad)  
   140009459:	(bad)  
   14000945a:	sti    
   14000945b:	xchg   edi,eax
   14000945c:	mov    bh,0xb7
   14000945e:	cwde   
   14000945f:	mov    cs,WORD PTR [rsi+0x86c888]
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rax],al
   140009469:	js     0x140009463
   14000946b:	jnp    0x140009408
   14000946d:	cwde   
   14000946e:	(bad)  
   14000946f:	(bad)  
   140009470:	(bad)  
   140009471:	clc    
   140009472:	mov    bh,0x9b
   140009474:	xchg   edi,eax
   140009475:	fwait
   140009476:	cwde   
   140009477:	mov    BYTE PTR [rdi+0x8ee8e8],al
   14000947d:	add    BYTE PTR [rax],al
   14000947f:	add    BYTE PTR [rax],al
   140009481:	out    dx,eax
   140009482:	(bad)  
   140009483:	jnp    0x140009500
   140009485:	lahf   
   140009486:	(bad)  
   140009487:	(bad)  
   140009488:	(bad)  
   140009489:	mov    ecx,0xb7b9b789
   14000948e:	mov    al,ch
   140009490:	mov    cs,WORD PTR [rax+0x8768]
   140009496:	add    BYTE PTR [rax],al
   140009498:	add    BYTE PTR [rax-0x77467608],cl
   14000949e:	(bad)  
   14000949f:	dec    DWORD PTR [rbx-0x48866485]
   1400094a5:	fwait
   1400094a6:	mov    BYTE PTR [rax-0x7117777a],cl
   1400094ac:	add    BYTE PTR [rax],al
   1400094ae:	add    BYTE PTR [rax],al
   1400094b0:	add    al,ch
   1400094b2:	clc    
   1400094b3:	div    DWORD PTR [rdi-0x46070048]
   1400094b9:	jns    0x140009472
   1400094bb:	mov    ecx,0x8887988b
   1400094c0:	dec    BYTE PTR [rax+0x8ec8]
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	add    BYTE PTR [rax-0x46867771],cl
   1400094ce:	clc    
   1400094cf:	mov    ecx,0x989bb8b9
   1400094d4:	fwait
   1400094d5:	mov    BYTE PTR [rax-0x17777918],cl
   1400094db:	xchg   BYTE PTR [rax],al
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rax],al
   1400094e1:	call   0x1bb8c24e5
   1400094e6:	fwait
   1400094e7:	fwait
   1400094e8:	ja     0x1400094a3
   1400094ea:	mov    bh,0xb9
   1400094ec:	mov    ecx,0xfe888888
   1400094f1:	mov    BYTE PTR [rsi-0x2],ch
   1400094f4:	add    BYTE PTR [rax],al
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	add    BYTE PTR [rdi-0x78],bh
   1400094fb:	clc    
   1400094fc:	call   0xf98a309c
   140009501:	mov    bh,0x9b
   140009503:	jnp    0x14000957d
   140009505:	mov    BYTE PTR [rax-0x17877178],cl
   14000950b:	xchg   DWORD PTR [rax],eax
   14000950d:	add    BYTE PTR [rax],al
   14000950f:	add    BYTE PTR [rax],al
   140009511:	call   0xc7901e15
   140009516:	mov    ecx,0x797b9bb8
   14000951b:	mov    ecx,0xfe8e88f8
   140009520:	test   BYTE PTR [rax+0x8ec8],0x0
   140009527:	add    BYTE PTR [rax],al
   140009529:	mov    BYTE PTR [rax-0x74777778],cl
   14000952f:	fwait
   140009530:	mov    bh,0x9b
   140009532:	fwait
   140009533:	mov    BYTE PTR [rax-0x71707078],cl
   140009539:	mov    al,ch
   14000953b:	xchg   BYTE PTR [rax],al
   14000953d:	add    BYTE PTR [rax],al
   14000953f:	add    BYTE PTR [rax],al
   140009541:	js     0x140009542
   140009543:	mov    ?,eax
   140009545:	clc    
   140009546:	mov    BYTE PTR [rax-0x77777787],cl
   14000954c:	clc    
   14000954d:	mov    BYTE PTR [rax+0x6e88f688],cl
   140009553:	test   DWORD PTR [rax],0x0
   140009559:	out    dx,eax
   14000955a:	mov    al,bh
   14000955c:	mov    BYTE PTR [rax-0x77007711],cl
   140009562:	clc    
   140009563:	clc    
   140009564:	out    dx,eax
   140009565:	mov    BYTE PTR [rax-0x18877111],cl
   14000956b:	mov    es,WORD PTR [rax]
   14000956d:	add    BYTE PTR [rax],al
   14000956f:	add    BYTE PTR [rax],al
   140009571:	mov    bh,bh
   140009573:	clc    
   140009574:	clc    
   140009575:	(bad)  
   140009576:	clc    
   140009577:	(bad)  
   14000957b:	(bad)  
   14000957c:	(bad)
   140009580:	mov    cs,WORD PTR [rax+0xe8c8]
   140009586:	add    BYTE PTR [rax],al
   140009588:	add    BYTE PTR [rsi-0x71717182],cl
   14000958e:	mov    al,ch
   140009590:	mov    cs,WORD PTR [rax-0x77770772]
   140009596:	mov    al,bh
   140009598:	dec    dh
	...
   1400095a6:	add    BYTE PTR [rax-0x17771778],cl
   1400095ac:	out    dx,al
   1400095ad:	mov    cs,WORD PTR [rsi+0xe8e7]
	...
   14000965f:	add    bh,bh
   140009661:	(bad)  
   140009662:	(bad)  
   140009663:	(bad)  
   140009664:	(bad)  
   140009665:	inc    DWORD PTR [rax]
   140009667:	add    bh,bh
   140009669:	(bad)  
   14000966a:	(bad)  
   14000966b:	(bad)  
   14000966c:	(bad)  
   14000966d:	inc    DWORD PTR [rax]
   14000966f:	add    bh,bh
   140009671:	(bad)  
   140009672:	push   rax
   140009674:	jg     0x140009675
   140009676:	add    BYTE PTR [rax],al
   140009678:	(bad)  
   140009679:	push   rax
   14000967b:	add    BYTE PTR [rdi],bl
   14000967d:	inc    DWORD PTR [rax]
   14000967f:	add    bh,bh
   140009681:	clc    
   140009682:	add    BYTE PTR [rax],al
   140009684:	(bad)  
   140009685:	inc    DWORD PTR [rax]
   140009687:	add    ah,bh
   140009689:	add    BYTE PTR [rax],al
   14000968b:	add    BYTE PTR [rbx],al
   14000968d:	inc    DWORD PTR [rax]
   14000968f:	add    al,ah
   140009691:	add    BYTE PTR [rax],al
   140009693:	add    BYTE PTR [rax],al
   140009695:	inc    DWORD PTR [rax]
   140009697:	add    al,al
   140009699:	add    BYTE PTR [rax],al
   14000969b:	add    BYTE PTR [rax],al
   14000969d:	inc    DWORD PTR [rax]
   14000969f:	add    al,al
   1400096a1:	add    BYTE PTR [rax],al
   1400096a3:	add    BYTE PTR [rax],al
   1400096a5:	inc    DWORD PTR [rax]
   1400096a7:	add    al,al
   1400096a9:	add    BYTE PTR [rax],al
   1400096ab:	add    BYTE PTR [rax],al
   1400096ad:	inc    DWORD PTR [rax]
   1400096af:	add    al,al
   1400096b1:	add    BYTE PTR [rax],al
   1400096b3:	add    BYTE PTR [rax],al
   1400096b5:	inc    DWORD PTR [rax]
   1400096b7:	add    al,al
   1400096b9:	add    BYTE PTR [rax],al
   1400096bb:	add    BYTE PTR [rax],al
   1400096bd:	inc    DWORD PTR [rax]
   1400096bf:	add    al,al
   1400096c1:	add    BYTE PTR [rax],al
   1400096c3:	add    BYTE PTR [rax],al
   1400096c5:	inc    DWORD PTR [rax]
   1400096c7:	add    al,al
   1400096c9:	add    BYTE PTR [rax],al
   1400096cb:	add    BYTE PTR [rax],al
   1400096cd:	inc    DWORD PTR [rax]
   1400096cf:	add    al,al
   1400096d1:	add    BYTE PTR [rax],al
   1400096d3:	add    BYTE PTR [rax],al
   1400096d5:	inc    DWORD PTR [rax]
   1400096d7:	add    al,al
   1400096d9:	add    BYTE PTR [rax],al
   1400096db:	add    BYTE PTR [rax],al
   1400096dd:	inc    DWORD PTR [rax]
   1400096df:	add    al,al
   1400096e1:	add    BYTE PTR [rax],al
   1400096e3:	add    BYTE PTR [rax],al
   1400096e5:	inc    DWORD PTR [rax]
   1400096e7:	add    al,al
   1400096e9:	add    BYTE PTR [rax],al
   1400096eb:	add    BYTE PTR [rax],al
   1400096ed:	inc    DWORD PTR [rax]
   1400096ef:	add    al,al
   1400096f1:	add    BYTE PTR [rax],al
   1400096f3:	add    BYTE PTR [rax],al
   1400096f5:	inc    DWORD PTR [rax]
   1400096f7:	add    al,al
   1400096f9:	add    BYTE PTR [rax],al
   1400096fb:	add    BYTE PTR [rax],al
   1400096fd:	inc    DWORD PTR [rax]
   1400096ff:	add    al,al
   140009701:	add    BYTE PTR [rax],al
   140009703:	add    BYTE PTR [rax],al
   140009705:	inc    DWORD PTR [rax]
   140009707:	add    al,al
   140009709:	add    BYTE PTR [rax],al
   14000970b:	add    BYTE PTR [rax],al
   14000970d:	inc    DWORD PTR [rax]
   14000970f:	add    al,al
   140009711:	add    BYTE PTR [rax],al
   140009713:	add    BYTE PTR [rax],al
   140009715:	inc    DWORD PTR [rax]
   140009717:	add    al,al
   140009719:	add    BYTE PTR [rax],al
   14000971b:	add    BYTE PTR [rax],al
   14000971d:	inc    DWORD PTR [rax]
   14000971f:	add    al,al
   140009721:	add    BYTE PTR [rax],al
   140009723:	add    BYTE PTR [rax],al
   140009725:	inc    DWORD PTR [rax]
   140009727:	add    al,al
   140009729:	add    BYTE PTR [rax],al
   14000972b:	add    BYTE PTR [rax],al
   14000972d:	inc    DWORD PTR [rax]
   14000972f:	add    al,al
   140009731:	add    BYTE PTR [rax],al
   140009733:	add    BYTE PTR [rax],al
   140009735:	inc    DWORD PTR [rax]
   140009737:	add    al,al
   140009739:	add    BYTE PTR [rax],al
   14000973b:	add    BYTE PTR [rax],al
   14000973d:	inc    DWORD PTR [rax]
   14000973f:	add    al,al
   140009741:	add    BYTE PTR [rax],al
   140009743:	add    BYTE PTR [rax],al
   140009745:	inc    DWORD PTR [rax]
   140009747:	add    al,al
   140009749:	add    BYTE PTR [rax],al
   14000974b:	add    BYTE PTR [rax],al
   14000974d:	inc    DWORD PTR [rax]
   14000974f:	add    al,al
   140009751:	add    BYTE PTR [rax],al
   140009753:	add    BYTE PTR [rax],al
   140009755:	inc    DWORD PTR [rax]
   140009757:	add    al,al
   140009759:	add    BYTE PTR [rax],al
   14000975b:	add    BYTE PTR [rax],al
   14000975d:	inc    DWORD PTR [rax]
   14000975f:	add    al,al
   140009761:	add    BYTE PTR [rax],al
   140009763:	add    BYTE PTR [rax],al
   140009765:	inc    DWORD PTR [rax]
   140009767:	add    al,al
   140009769:	add    BYTE PTR [rax],al
   14000976b:	add    BYTE PTR [rax],al
   14000976d:	inc    DWORD PTR [rax]
   14000976f:	add    al,al
   140009771:	add    BYTE PTR [rax],al
   140009773:	add    BYTE PTR [rax],al
   140009775:	inc    DWORD PTR [rax]
   140009777:	add    al,al
   140009779:	add    BYTE PTR [rax],al
   14000977b:	add    BYTE PTR [rax],al
   14000977d:	inc    DWORD PTR [rax]
   14000977f:	add    al,al
   140009781:	add    BYTE PTR [rax],al
   140009783:	add    BYTE PTR [rax],al
   140009785:	inc    DWORD PTR [rax]
   140009787:	add    al,al
   140009789:	add    BYTE PTR [rax],al
   14000978b:	add    BYTE PTR [rax],al
   14000978d:	inc    DWORD PTR [rax]
   14000978f:	add    al,al
   140009791:	add    BYTE PTR [rax],al
   140009793:	add    BYTE PTR [rax],al
   140009795:	inc    DWORD PTR [rax]
   140009797:	add    al,al
   140009799:	add    BYTE PTR [rax],al
   14000979b:	add    BYTE PTR [rdi],cl
   14000979d:	inc    DWORD PTR [rax]
   14000979f:	add    bh,bh
   1400097a1:	cld    
   1400097a2:	add    BYTE PTR [rax],al
   1400097a4:	(bad)  
   1400097a5:	inc    DWORD PTR [rax]
   1400097a7:	add    bh,bh
   1400097a9:	(bad)  
   1400097aa:	(bad)  
   1400097ab:	(bad)  
   1400097ac:	(bad)  
   1400097ad:	inc    DWORD PTR [rax]
   1400097af:	add    bh,bh
   1400097b1:	(bad)  
   1400097b2:	(bad)  
   1400097b3:	(bad)  
   1400097b4:	(bad)  
   1400097b5:	inc    DWORD PTR [rax]
   1400097b7:	add    bh,bh
   1400097b9:	(bad)  
   1400097ba:	(bad)  
   1400097bb:	(bad)  
   1400097bc:	(bad)  
   1400097bd:	inc    DWORD PTR [rax]
   1400097bf:	add    bh,bh
   1400097c1:	(bad)  
   1400097c2:	(bad)  
   1400097c3:	(bad)  
   1400097c4:	(bad)  
   1400097c5:	inc    DWORD PTR [rax]
   1400097c7:	add    bh,bh
   1400097c9:	(bad)  
   1400097ca:	(bad)  
   1400097cb:	(bad)  
   1400097cc:	(bad)  
   1400097cd:	inc    DWORD PTR [rax]
   1400097cf:	add    bh,bh
   1400097d1:	(bad)  
   1400097d2:	(bad)  
   1400097d3:	(bad)  
   1400097d4:	(bad)  
   1400097d5:	inc    DWORD PTR [rax]
   1400097d7:	add    bh,bh
   1400097d9:	(bad)  
   1400097da:	(bad)  
   1400097db:	(bad)  
   1400097dc:	(bad)  
   1400097dd:	inc    DWORD PTR [rax]
   1400097df:	add    BYTE PTR [rax],ch
   1400097e1:	add    BYTE PTR [rax],al
   1400097e3:	add    BYTE PTR [rax],ah
   1400097e5:	add    BYTE PTR [rax],al
   1400097e7:	add    BYTE PTR [rax+0x0],al
   1400097ea:	add    BYTE PTR [rax],al
   1400097ec:	add    DWORD PTR [rax],eax
   1400097ee:	add    al,0x0
   1400097f0:	add    BYTE PTR [rax],al
   1400097f2:	add    BYTE PTR [rax],al
   1400097f4:	add    BYTE PTR [rdx],al
	...
   14000980e:	add    BYTE PTR [rax],0x0
   140009811:	add    BYTE PTR [rax],0x0
   140009814:	add    BYTE PTR [rax+0x800080],al
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	add    BYTE PTR [rax],0x80
   14000981f:	add    BYTE PTR [rax-0x7fffff80],al
   140009825:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000982c:	add    BYTE PTR [rax],al
   14000982e:	inc    DWORD PTR [rax]
   140009830:	add    bh,bh
   140009832:	add    BYTE PTR [rax],al
   140009834:	add    bh,bh
   140009836:	inc    DWORD PTR [rax]
   140009838:	inc    DWORD PTR [rax]
   14000983a:	add    BYTE PTR [rax],al
   14000983c:	inc    DWORD PTR [rax]
   14000983e:	inc    DWORD PTR [rax]
   140009840:	(bad)  
   140009841:	inc    DWORD PTR [rax]
   140009843:	add    bh,bh
   140009845:	(bad)  
   140009846:	inc    DWORD PTR [rax]
	...
   140009870:	add    BYTE PTR [rax+0x7888],cl
   140009876:	add    BYTE PTR [rax],al
   140009878:	add    BYTE PTR [rax],al
   14000987a:	add    BYTE PTR [rax],al
   14000987c:	add    BYTE PTR [rax-0x71777778],cl
   140009882:	mov    bh,ah
   140009884:	xchg   DWORD PTR [rax],eax
   140009886:	add    BYTE PTR [rax],al
   140009888:	add    BYTE PTR [rax-0x71778778],cl
   14000988e:	mov    al,ch
   140009890:	mov    cs,WORD PTR [rax-0x77717178]
   140009896:	add    BYTE PTR [rax],al
   140009898:	add    BYTE PTR [rsi-0x78],bh
   14000989b:	mov    cs,WORD PTR [rax-0x77777778]
   1400098a1:	mov    BYTE PTR [rax+0x8e8786],cl
   1400098a7:	add    BYTE PTR [rax],al
   1400098a9:	mov    al,bh
   1400098ab:	mov    BYTE PTR [rax-0x77c76789],cl
   1400098b1:	mov    cs,WORD PTR [rax+0x878e8e]
   1400098b7:	add    BYTE PTR [rax],al
   1400098b9:	call   0xdb842146
   1400098be:	fwait
   1400098bf:	xchg   edi,eax
   1400098c0:	cwde   
   1400098c1:	mov    BYTE PTR [rax+0x8e8787],cl
   1400098c7:	add    BYTE PTR [rax],al
   1400098c9:	mov    al,bh
   1400098cb:	xchg   DWORD PTR [rbx-0x48466869],ebx
   1400098d1:	mov    bh,ch
   1400098d3:	mov    cs,WORD PTR [rsi+0x87]
   1400098d9:	mov    ?,eax
   1400098db:	mov    ebx,DWORD PTR [rdi-0x64686405]
   1400098e1:	cwde   
   1400098e2:	mov    BYTE PTR [rsi+0x87f7],al
   1400098e8:	add    BYTE PTR [rax-0x706678],cl
   1400098ee:	mov    DWORD PTR [rcx-0x77718847],edi
   1400098f4:	mov    cs,WORD PTR [rsi-0x18000000]
   1400098fa:	stc    
   1400098fb:	mov    bl,0x8f
   1400098fd:	(bad)  
   1400098fe:	dec    DWORD PTR [rcx-0x71774687]
   140009904:	xchg   DWORD PTR [rdi-0x78000000],eax
   14000990a:	sbb    DWORD PTR [rbx-0x7000071],0xffffffb9
   140009911:	jnp    0x14000998b
   140009913:	xchg   DWORD PTR [rsi+0x87],ecx
   140009919:	mov    BYTE PTR [rbx-0x67],bh
   14000991c:	(bad)  
   14000991d:	(bad)  
   14000991e:	(bad)  
   14000991f:	(bad)  
   140009920:	clc    
   140009921:	cdq    
   140009922:	mov    eax,0x8e878e
   140009927:	add    BYTE PTR [rax],al
   140009929:	call   0x13fc052c6
   14000992e:	(bad)  
   14000992f:	(bad)  
   140009930:	push   QWORD PTR [rdi-0x78097368]
   140009936:	add    BYTE PTR [rax],al
   140009938:	add    BYTE PTR [rax-0x704887],cl
   14000993e:	(bad)  
   14000993f:	(bad)  
   140009940:	dec    DWORD PTR [rcx-0x77711748]
   140009946:	add    BYTE PTR [rax],al
   140009948:	add    BYTE PTR [rax-0x706475],cl
   14000994e:	(bad)  
   14000994f:	(bad)  
   140009950:	sti    
   140009951:	fwait
   140009952:	js     0x1400098da
   140009954:	test   DWORD PTR [rsi-0x18000000],0xff8f8979
   14000995e:	(bad)  
   14000995f:	clc    
   140009960:	fwait
   140009961:	xchg   edi,eax
   140009962:	js     0x1400098f2
   140009964:	mov    es,WORD PTR [rdi-0x78000000]
   14000996a:	mov    edi,DWORD PTR [rcx-0x46000041]
   140009970:	mov    ecx,0x87878889
   140009975:	mov    es,WORD PTR [rax]
   140009977:	add    BYTE PTR [rax],al
   140009979:	mov    BYTE PTR [rdi-0x76007065],al
   14000997f:	mov    ecx,0x8e889b8b
   140009984:	xchg   DWORD PTR [rdi-0x18000000],eax
   14000998a:	clc    
   14000998b:	jnp    0x14000991c
   14000998d:	mov    ebx,DWORD PTR [rbx-0x77886485]
   140009993:	xchg   DWORD PTR [rsi+0x8e],ecx
   140009999:	mov    BYTE PTR [rax+0x798bb989],cl
   14000999f:	mov    ecx,0x8e888889
   1400099a4:	xchg   DWORD PTR [rdi-0x18000000],eax
   1400099aa:	clc    
   1400099ab:	xchg   DWORD PTR [rbx-0x65],edi
   1400099ae:	cwde   
   1400099af:	mov    ecx,0x8e8888b8
   1400099b4:	mov    es,WORD PTR [rdi-0x78000000]
   1400099ba:	mov    BYTE PTR [rdi-0x77467689],cl
   1400099c0:	js     0x14000994a
   1400099c2:	mov    BYTE PTR [rdi+0x8e87],al
   1400099c8:	add    BYTE PTR [rax-0x78],bh
   1400099cb:	call   0xc88922c8
   1400099d0:	mov    BYTE PTR [rax-0x78717178],cl
   1400099d6:	add    BYTE PTR [rax],al
   1400099d8:	add    al,ch
   1400099da:	(bad)
   1400099de:	mov    ?,eax
   1400099e0:	mov    BYTE PTR [rax-0x77787111],cl
   1400099e6:	add    BYTE PTR [rax],al
   1400099e8:	add    BYTE PTR [rax],cl
   1400099ea:	out    0xe7,eax
   1400099ec:	call   0x1be7f81d8
   1400099f1:	jle    0x140009a69
   1400099f3:	xchg   DWORD PTR [rax+0x0],esi
	...
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	(bad)  
   140009a49:	(bad)  
   140009a4a:	(bad)  
   140009a4b:	(bad)  
   140009a4c:	(bad)  
   140009a4d:	(bad)  
   140009a4e:	(bad)  
   140009a4f:	(bad)  
   140009a50:	(bad)  
   140009a51:	inc    eax
   140009a53:	(bad)  
   140009a54:	inc    eax
   140009a56:	add    BYTE PTR [rdi],bh
   140009a58:	rol    BYTE PTR [rax],0x0
   140009a5b:	xadd   BYTE PTR [rax],al
   140009a5e:	add    BYTE PTR [rdi],cl
   140009a60:	rol    BYTE PTR [rax],0x0
   140009a63:	xadd   BYTE PTR [rax],al
   140009a66:	add    BYTE PTR [rdi],cl
   140009a68:	rol    BYTE PTR [rax],0x0
   140009a6b:	xadd   BYTE PTR [rax],al
   140009a6e:	add    BYTE PTR [rdi],cl
   140009a70:	rol    BYTE PTR [rax],0x0
   140009a73:	xadd   BYTE PTR [rax],al
   140009a76:	add    BYTE PTR [rdi],cl
   140009a78:	rol    BYTE PTR [rax],0x0
   140009a7b:	xadd   BYTE PTR [rax],al
   140009a7e:	add    BYTE PTR [rdi],cl
   140009a80:	rol    BYTE PTR [rax],0x0
   140009a83:	xadd   BYTE PTR [rax],al
   140009a86:	add    BYTE PTR [rdi],cl
   140009a88:	rol    BYTE PTR [rax],0x0
   140009a8b:	xadd   BYTE PTR [rax],al
   140009a8e:	add    BYTE PTR [rdi],cl
   140009a90:	rol    BYTE PTR [rax],0x0
   140009a93:	xadd   BYTE PTR [rax],al
   140009a96:	add    BYTE PTR [rdi],cl
   140009a98:	rol    BYTE PTR [rax],0x0
   140009a9b:	xadd   BYTE PTR [rax],al
   140009a9e:	add    BYTE PTR [rdi],cl
   140009aa0:	rol    BYTE PTR [rax],0x0
   140009aa3:	xadd   BYTE PTR [rax],al
   140009aa6:	add    BYTE PTR [rdi],cl
   140009aa8:	rol    BYTE PTR [rax],0x0
   140009aab:	xadd   BYTE PTR [rax],al
   140009aae:	add    BYTE PTR [rdi],cl
   140009ab0:	loopne 0x140009ab2
   140009ab2:	add    BYTE PTR [rdi-0x1],bh
   140009ab5:	(bad)  
   140009ab6:	(bad)  
   140009ab7:	(bad)  
   140009ab8:	(bad)  
   140009ab9:	(bad)  
   140009aba:	(bad)  
   140009abb:	(bad)  
   140009abc:	(bad)  
   140009abd:	(bad)  
   140009abe:	(bad)  
   140009abf:	(bad)  
   140009ac0:	(bad)  
   140009ac1:	(bad)  
   140009ac2:	(bad)  
   140009ac3:	(bad)  
   140009ac4:	(bad)  
   140009ac5:	(bad)  
   140009ac6:	(bad)  
   140009ac7:	jmp    FWORD PTR [rax]
   140009ac9:	add    BYTE PTR [rax],al
   140009acb:	add    BYTE PTR [rax],bl
   140009acd:	add    BYTE PTR [rax],al
   140009acf:	add    BYTE PTR [rax],dh
   140009ad1:	add    BYTE PTR [rax],al
   140009ad3:	add    BYTE PTR [rcx],al
   140009ad5:	add    BYTE PTR [rax+rax*1],al
   140009ad8:	add    BYTE PTR [rax],al
   140009ada:	add    BYTE PTR [rax],al
   140009adc:	and    BYTE PTR [rcx],al
	...
   140009af6:	add    BYTE PTR [rax],0x0
   140009af9:	add    BYTE PTR [rax],0x0
   140009afc:	add    BYTE PTR [rax+0x800080],al
   140009b02:	add    BYTE PTR [rax],al
   140009b04:	add    BYTE PTR [rax],0x80
   140009b07:	add    BYTE PTR [rax-0x7fffff80],al
   140009b0d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140009b14:	add    BYTE PTR [rax],al
   140009b16:	inc    DWORD PTR [rax]
   140009b18:	add    bh,bh
   140009b1a:	add    BYTE PTR [rax],al
   140009b1c:	add    bh,bh
   140009b1e:	inc    DWORD PTR [rax]
   140009b20:	inc    DWORD PTR [rax]
   140009b22:	add    BYTE PTR [rax],al
   140009b24:	inc    DWORD PTR [rax]
   140009b26:	inc    DWORD PTR [rax]
   140009b28:	(bad)  
   140009b29:	inc    DWORD PTR [rax]
   140009b2b:	add    bh,bh
   140009b2d:	(bad)  
   140009b2e:	inc    DWORD PTR [rax]
   140009b30:	add    BYTE PTR [rax],al
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	add    BYTE PTR [rax],al
   140009b36:	add    BYTE PTR [rax+0x7088],cl
   140009b3c:	add    BYTE PTR [rax],al
   140009b3e:	add    BYTE PTR [rax-0x71777778],cl
   140009b44:	mov    BYTE PTR [rsi-0x78f7ff88],cl
   140009b4a:	mov    BYTE PTR [rsi-0x77777178],cl
   140009b50:	mov    es,WORD PTR [rdi-0x77777f7a]
   140009b56:	mov    cs,WORD PTR [rax-0x77717779]
   140009b5c:	mov    BYTE PTR [rsi-0x7777978],cl
   140009b62:	(bad)
   140009b66:	js     0x140009af0
   140009b68:	mov    BYTE PTR [rdi-0x71777772],al
   140009b6e:	xchg   DWORD PTR [rcx+0x78999bb7],ebx
   140009b74:	mov    BYTE PTR [rsi-0x7717979],cl
   140009b7a:	mov    ecx,0x8bb99988
   140009b7f:	xchg   edi,eax
   140009b80:	mov    es,WORD PTR [rdi-0x7777772]
   140009b86:	fwait
   140009b87:	(bad)  
   140009b88:	clc    
   140009b89:	fwait
   140009b8a:	cdq    
   140009b8b:	mov    ecx,0x86878e88
   140009b90:	mov    BYTE PTR [rcx-0x760000c7],cl
   140009b96:	mov    ecx,0x8887987b
   140009b9b:	mov    BYTE PTR [rax-0x8475],cl
   140009ba1:	dec    DWORD PTR [rcx-0x79718847]
   140009ba7:	mov    cs,WORD PTR [rax-0x4677]
   140009bad:	(bad)  
   140009bae:	(bad)  
   140009baf:	jns    0x140009b68
   140009bb1:	xchg   DWORD PTR [rax-0x68847779],ecx
   140009bb7:	(bad)  
   140009bb8:	(bad)  
   140009bb9:	(bad)  
   140009bba:	(bad)  
   140009bbb:	sti    
   140009bbc:	xchg   edi,eax
   140009bbd:	mov    cs,WORD PTR [rsi-0x46867772]
   140009bc3:	(bad)  
   140009bc4:	(bad)  
   140009bc5:	(bad)  
   140009bc6:	(bad)  
   140009bc7:	stc    
   140009bc8:	mov    bh,0x87
   140009bca:	xchg   DWORD PTR [rdi-0x647478],eax
   140009bd0:	(bad)  
   140009bd1:	(bad)  
   140009bd2:	clc    
   140009bd3:	mov    ecx,0x878e8778
   140009bd8:	mov    BYTE PTR [rcx-0x7049],cl
   140009bde:	mov    ecx,0x878e973b
   140009be3:	mov    cs,WORD PTR [rax-0x6475]
   140009be9:	mov    DWORD PTR [rcx-0x71784777],edi
   140009bef:	test   DWORD PTR [rax-0x400c678],0x889b7b9b
   140009bf9:	mov    es,WORD PTR [rdi-0x44077779]
   140009bff:	mov    BYTE PTR [rbx+0x78b7989b],bl
   140009c05:	xchg   DWORD PTR [rdi+0x79888e8e],eax
   140009c0b:	mov    ecx,0xb7b9b7b7
   140009c10:	mov    BYTE PTR [rsi-0x7777872],cl
   140009c16:	mov    BYTE PTR [rbx-0x65],bh
   140009c19:	cdq    
   140009c1a:	mov    bh,0x88
   140009c1c:	mov    BYTE PTR [rdi-0x77777779],al
   140009c22:	call   0xc88913af
   140009c27:	mov    BYTE PTR [rax-0x71797172],cl
   140009c2d:	clc    
   140009c2e:	mov    BYTE PTR [rax-0x77777771],cl
   140009c34:	mov    BYTE PTR [rax+0x7e088088],cl
   140009c3a:	mov    al,ch
   140009c3c:	out    0x8e,eax
   140009c3e:	jle    0x140009bce
   140009c40:	jle    0x140009bd0
	...
   140009c4e:	add    BYTE PTR [rax],al
   140009c50:	(bad)  
   140009c51:	cld    
   140009c52:	(bad)  
   140009c53:	add    ah,bh
   140009c55:	add    BYTE PTR [rbx],al
   140009c57:	add    BYTE PTR [rax+0x100],al
	...
   140009ca5:	add    BYTE PTR [rcx],al
   140009ca7:	add    BYTE PTR [rax-0xfff100],al
   140009cad:	(bad)  
   140009cae:	inc    DWORD PTR [rax]
   140009cb0:	sub    BYTE PTR [rax],al
   140009cb2:	add    BYTE PTR [rax],al
   140009cb4:	adc    BYTE PTR [rax],al
   140009cb6:	add    BYTE PTR [rax],al
   140009cb8:	and    BYTE PTR [rax],al
   140009cba:	add    BYTE PTR [rax],al
   140009cbc:	add    DWORD PTR [rax],eax
   140009cbe:	add    al,0x0
   140009cc0:	add    BYTE PTR [rax],al
   140009cc2:	add    BYTE PTR [rax],al
   140009cc4:	add    BYTE PTR [rax],0x0
	...
   140009cdb:	add    BYTE PTR [rax],al
   140009cdd:	add    BYTE PTR [rax+0x800000],al
   140009ce3:	add    BYTE PTR [rax],al
   140009ce5:	add    BYTE PTR [rax+0x8000],0x0
   140009cec:	add    BYTE PTR [rax],0x80
   140009cef:	add    BYTE PTR [rax-0x7fffff80],al
   140009cf5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140009cfc:	add    BYTE PTR [rax],al
   140009cfe:	inc    DWORD PTR [rax]
   140009d00:	add    bh,bh
   140009d02:	add    BYTE PTR [rax],al
   140009d04:	add    bh,bh
   140009d06:	inc    DWORD PTR [rax]
   140009d08:	inc    DWORD PTR [rax]
   140009d0a:	add    BYTE PTR [rax],al
   140009d0c:	inc    DWORD PTR [rax]
   140009d0e:	inc    DWORD PTR [rax]
   140009d10:	(bad)  
   140009d11:	inc    DWORD PTR [rax]
   140009d13:	add    bh,bh
   140009d15:	(bad)  
   140009d16:	inc    DWORD PTR [rax]
   140009d18:	xchg   BYTE PTR [rsi-0x7979797a],al
   140009d1e:	xchg   BYTE PTR [rdi-0x77777788],al
   140009d24:	mov    BYTE PTR [rax-0x71177178],cl
   140009d2a:	mov    BYTE PTR [rdi+0x37],dh
   140009d2d:	mov    ?,WORD PTR [rsi-0x79]
   140009d30:	js     0x140009cba
   140009d32:	jae    0x140009ced
   140009d34:	mov    ecx,0x788e8737
   140009d39:	out    0x9b,eax
   140009d3b:	mov    ebx,DWORD PTR [rbx-0x10788765]
   140009d41:	mov    ebx,DWORD PTR [rbx-0x68648401]
   140009d47:	mov    ?,WORD PTR [rax+0x79]
   140009d4a:	mov    ecx,0xb7b9f8ff
   140009d4f:	xchg   DWORD PTR [rdi-0x47],edi
   140009d52:	mov    ebx,0x938bffff
   140009d57:	mov    gs,eax
   140009d59:	jnp    0x140009cee
   140009d5b:	(bad)  
   140009d5c:	push   rdi
   140009d5e:	mov    ecx,0xb3797f87
   140009d63:	(bad)  
   140009d64:	clc    
   140009d65:	fwait
   140009d66:	xchg   edi,eax
   140009d67:	mov    ?,WORD PTR [rdi-0x75]
   140009d6a:	fwait
   140009d6b:	call   FWORD PTR [rbx-0x17784847]
   140009d71:	idiv   DWORD PTR [rcx+0x789b9b8b]
   140009d77:	mov    ?,WORD PTR [rdi-0x78]
   140009d7a:	mov    DWORD PTR [rcx-0x78774847],edi
   140009d80:	js     0x140009d7a
   140009d82:	clc    
   140009d83:	mov    ebx,DWORD PTR [rax-0x10717188]
   140009d89:	(bad)  
   140009d8a:	(bad)  
   140009d8b:	(bad)  
   140009d8c:	(bad)  
   140009d8d:	clc    
   140009d8e:	mov    BYTE PTR [rdi-0x18181889],al
   140009d94:	outs   dx,BYTE PTR ds:[rsi]
   140009d95:	jle    0x140009e15
   140009d97:	js     0x140009d99
	...
   140009dd5:	add    BYTE PTR [rax],al
   140009dd7:	add    BYTE PTR [rax],ch
   140009dd9:	add    BYTE PTR [rax],al
   140009ddb:	add    BYTE PTR [rax+0x0],al
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	add    BYTE PTR [rax],0x0
   140009de3:	add    BYTE PTR [rcx],al
   140009de5:	add    BYTE PTR [rax],cl
   140009de7:	add    BYTE PTR [rax],al
   140009de9:	add    BYTE PTR [rax],al
   140009deb:	add    BYTE PTR [rax],al
   140009ded:	adc    BYTE PTR [rax],al
	...
   140009df7:	add    BYTE PTR [rax],al
   140009df9:	add    DWORD PTR [rax],eax
   140009dfb:	add    BYTE PTR [rax],al
   140009dfd:	add    DWORD PTR [rax],eax
   140009dff:	add    BYTE PTR [rax],al
   140009e01:	add    BYTE PTR [rax],al
   140009e03:	add    BYTE PTR [rbp-0x6affd481],ch
   140009e09:	jnp    0x140009e5f
   140009e0b:	add    BYTE PTR [rsi-0x56ffcd7e],ch
   140009e11:	test   DWORD PTR [rdi],edi
   140009e13:	add    BYTE PTR [rcx-0x42ffca7a],dh
   140009e19:	xchg   BYTE PTR [rcx],bh
   140009e1b:	add    BYTE PTR [rbp-0x46ffc475],dh
   140009e21:	(bad)  
   140009e22:	cmp    eax,0x3f8cc000
   140009e27:	add    BYTE PTR [rdx-0x51ffb87f],ch
   140009e2d:	mov    al,BYTE PTR [rbx+0x0]
   140009e30:	mov    ch,0x8f
   140009e32:	add    BYTE PTR [r9-0x43ffb671],r14b
   140009e39:	xchg   ebp,eax
   140009e3a:	rex.W add BYTE PTR [rbx-0x44ffa372],sil
   140009e41:	nop
   140009e42:	push   rbx
   140009e43:	add    BYTE PTR [rbp-0x46ffaf67],bh
   140009e49:	xchg   edx,eax
   140009e4a:	pop    rsp
   140009e4b:	add    BYTE PTR [rdi-0x5fff9777],bl
   140009e51:	xchg   BYTE PTR [rdx+0x0],ah
   140009e54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009e55:	mov    WORD PTR [rax+rax*1-0x4c],gs
   140009e59:	xchg   edx,eax
   140009e5a:	(bad)  
   140009e5b:	add    BYTE PTR [rax-0x49ff996a],bh
   140009e61:	xchg   esi,eax
   140009e62:	push   0x0
   140009e64:	mov    bh,0x98
   140009e66:	ins    DWORD PTR es:[rdi],dx
   140009e67:	add    BYTE PTR [rdx-0x44ff9667],bh
   140009e6d:	pushf  
   140009e6e:	jb     0x140009e70
   140009e70:	mov    ebp,0xc4007ba1
   140009e75:	xchg   ecx,eax
   140009e76:	rex.XB add r9b,cl
   140009e79:	xchg   esi,eax
   140009e7a:	rex.W add sil,cl
   140009e7d:	fwait
   140009e7e:	rex.WXB add r8b,al
   140009e81:	pushf  
   140009e82:	push   rbp
   140009e83:	add    al,al
   140009e85:	sahf   
   140009e86:	pop    rcx
   140009e87:	add    bl,cl
   140009e89:	pushf  
   140009e8a:	pop    rdx
   140009e8b:	add    al,cl
   140009e8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009e8e:	pop    rax
   140009e8f:	add    ah,dl
   140009e91:	movabs ds:0xaee0005da4d70053,eax
   140009e9a:	push   rdi
   140009e9b:	add    cl,ah
   140009e9d:	mov    al,0x59
   140009e9f:	add    ch,al
   140009ea1:	popf   
   140009ea2:	fs add bl,cl
   140009ea5:	test   eax,0xa2c40061
   140009eaa:	outs   dx,BYTE PTR ds:[rsi]
   140009eab:	add    ch,cl
   140009ead:	lods   eax,DWORD PTR ds:[rsi]
   140009eae:	imul   eax,DWORD PTR [rax],0xffffffd4
   140009eb1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009eb2:	(bad)  
   140009eb3:	add    ch,dl
   140009eb5:	test   al,0x63
   140009eb7:	add    al,bl
   140009eb9:	stos   BYTE PTR es:[rdi],al
   140009eba:	data16 add dl,bl
   140009ebd:	scas   al,BYTE PTR es:[rdi]
   140009ebe:	imul   eax,DWORD PTR [rax],0x6bb1dd
   140009ec4:	(bad)
   140009ec8:	ret    
   140009ec9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009eca:	jge    0x140009ecc
   140009ecc:	shr    BYTE PTR [rbp-0x4a21ff8a],cl
   140009ed2:	jb     0x140009ed4
   140009ed4:	shl    DWORD PTR [rax-0x4723ff81],1
   140009eda:	jle    0x140009edc
   140009edc:	loop   0x140009e95
   140009ede:	imul   eax,DWORD PTR [rax],0xffffffe0
   140009ee1:	mov    ch,0x70
   140009ee3:	add    ah,ah
   140009ee5:	mov    edx,0xbee80075
   140009eea:	jne    0x140009eec
   140009eec:	in     eax,0xbc
   140009eee:	js     0x140009ef0
   140009ef0:	jmp    0x136011cb9
   140009ef5:	(bad)  
   140009ef8:	sbb    BYTE PTR [rdi-0xd],bl
   140009efb:	add    BYTE PTR [rdx],bl
   140009efd:	data16 repnz add BYTE PTR [rip+0x2400f779],bl        # 0x16401967e
   140009f05:	ins    BYTE PTR es:[rdi],dx
   140009f06:	icebp  
   140009f07:	add    BYTE PTR [rip+0x3200f276],ah        # 0x172019183
   140009f0d:	jnp    0x140009f04
   140009f0f:	add    BYTE PTR [rbx+0x7f],al
   140009f12:	stc    
   140009f13:	add    BYTE PTR [rdx-0x65],bh
   140009f16:	mov    edx,0xdd8d3c00
   140009f1b:	add    BYTE PTR [rdi],bl
   140009f1d:	mov    dh,bh
   140009f1f:	add    BYTE PTR [rsp+rcx*4],ch
   140009f22:	in     eax,dx
   140009f23:	add    BYTE PTR [rdi],dh
   140009f25:	sub    ebx,0x0
   140009f28:	xor    eax,0x2800e690
   140009f2d:	xchg   esi,esi
   140009f2f:	add    BYTE PTR [rax],bh
   140009f31:	test   ebp,esi
   140009f33:	add    BYTE PTR [rcx],ch
   140009f35:	xchg   ecx,eax
   140009f36:	clc    
   140009f37:	add    BYTE PTR [rcx],bh
   140009f39:	xchg   esi,eax
   140009f3a:	test   DWORD PTR [rax],0xcc8f4f
   140009f40:	push   rsi
   140009f41:	nop
   140009f42:	leave  
   140009f43:	add    BYTE PTR [rbx-0x74],cl
   140009f46:	xlat   BYTE PTR ds:[rbx]
   140009f47:	add    BYTE PTR [rbx-0x72],dl
   140009f4a:	(bad)  
   140009f4b:	add    BYTE PTR [rcx-0x6b],ch
   140009f4e:	int3   
   140009f4f:	add    BYTE PTR [rbx-0x65],dh
   140009f52:	(bad)  
   140009f53:	add    BYTE PTR [rsi-0x62],al
   140009f56:	out    dx,eax
   140009f57:	add    BYTE PTR [rcx-0x7c],al
   140009f5a:	repz add BYTE PTR [rdx-0x77],al
   140009f5e:	hlt    
   140009f5f:	add    BYTE PTR [rdx-0x73],cl
   140009f62:	repz add BYTE PTR [rsi-0x79],al
   140009f66:	cli    
   140009f67:	add    BYTE PTR [rdx-0x7d],cl
   140009f6a:	clc    
   140009f6b:	add    BYTE PTR [rdx-0x76],cl
   140009f6e:	cli    
   140009f6f:	add    BYTE PTR [rbx-0x72],bl
   140009f72:	test   BYTE PTR [rax],0x47
   140009f75:	xchg   edi,eax
   140009f76:	test   BYTE PTR [rax],0x54
   140009f79:	xchg   edi,eax
   140009f7a:	hlt    
   140009f7b:	add    BYTE PTR [rdi+rdx*4-0x1a],ah
   140009f7f:	add    BYTE PTR [rbp-0x66],ah
   140009f82:	hlt    
   140009f83:	add    BYTE PTR [rcx+riz*4-0x9],cl
   140009f87:	add    BYTE PTR [rdx-0x58],bl
   140009f8a:	stc    
   140009f8b:	add    BYTE PTR [rdx-0x50],bl
   140009f8e:	inc    DWORD PTR [rax]
   140009f90:	push   0xffffffffffffffaf
   140009f92:	in     al,dx
   140009f93:	add    BYTE PTR [rcx-0x50],ch
   140009f96:	out    dx,eax
   140009f97:	add    BYTE PTR [rsi-0x4c],dh
   140009f9a:	in     eax,dx
   140009f9b:	add    BYTE PTR [rbx+rbp*4-0x8],ah
   140009f9f:	add    BYTE PTR [rdi-0x59],dh
   140009fa2:	cmc    
   140009fa3:	add    BYTE PTR [rbx-0x4d],ch
   140009fa6:	cli    
   140009fa7:	add    BYTE PTR [rax-0x4c],dh
   140009faa:	stc    
   140009fab:	add    BYTE PTR [rdi+rbx*4-0x5e5aff7e],dh
   140009fb2:	mov    al,BYTE PTR [rax]
   140009fb4:	mov    edx,0xb50081a4
   140009fb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009fba:	mov    eax,DWORD PTR [rax]
   140009fbc:	stos   DWORD PTR es:[rdi],eax
   140009fbd:	movabs eax,ds:0xa3970097a7b30095
   140009fc6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fc7:	add    BYTE PTR [rsi-0x52ff5353],ah
   140009fcd:	mov    bl,0xad
   140009fcf:	add    al,al
   140009fd1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009fd2:	test   BYTE PTR [rax],al
   140009fd4:	(bad)
   140009fd7:	add    bh,al
   140009fd9:	scas   al,BYTE PTR es:[rdi]
   140009fda:	mov    eax,DWORD PTR [rax]
   140009fdc:	leave  
   140009fdd:	scas   eax,DWORD PTR es:[rdi]
   140009fde:	mov    al,BYTE PTR [rax]
   140009fe0:	int3   
   140009fe1:	mov    bl,0x8f
   140009fe3:	add    dl,dl
   140009fe5:	mov    bl,0x82
   140009fe7:	add    bl,bl
   140009fe9:	mov    ebx,0xb5d00084
   140009fee:	lea    eax,[rax]
   140009ff0:	xlat   BYTE PTR ds:[rbx]
   140009ff1:	mov    ebx,0xbdde008f
   140009ff6:	mov    eax,DWORD PTR [rax]
   140009ff8:	(bad)  
   140009ff9:	stos   DWORD PTR es:[rdi],eax
   140009ffa:	xchg   ebx,eax
   140009ffb:	add    dl,cl
   140009ffd:	mov    ah,0x94
   140009fff:	add    bl,cl
   14000a001:	mov    ah,0x9a
   14000a003:	add    bh,cl
   14000a005:	mov    edx,0xbcd2009c
   14000a00a:	xchg   esp,eax
   14000a00b:	add    dl,bl
   14000a00d:	mov    esi,0xbfdc0094
   14000a012:	cwde   
   14000a013:	add    cl,ah
   14000a015:	mov    ebp,0xbbcd0089
   14000a01a:	movabs ds:0xaebdd100a1bfd400,al
   14000a023:	add    bl,dl
   14000a025:	mov    esi,0xc0dd00b0
   14000a02a:	lea    eax,[rax]
   14000a02c:	fadd   st(2),st
   14000a02e:	xchg   ebp,eax
   14000a02f:	add    ah,bl
   14000a031:	ret    
   14000a032:	(bad)  
   14000a033:	add    dl,ch
   14000a035:	(bad)
   14000a039:	ret    0x8c
   14000a03c:	jmp    0x12e012d06
   14000a041:	leave  
   14000a042:	mov    WORD PTR [rax],es
   14000a044:	repnz mov BYTE PTR [rdx-0x6c3b1d00],0x0
   14000a04c:	jmp    0x126013217
   14000a051:	retf   
   14000a052:	xchg   esp,eax
   14000a053:	add    bl,ch
   14000a055:	retf   
   14000a056:	xchg   ebx,eax
   14000a057:	add    dl,ah
   14000a059:	(bad)  
   14000a05a:	(bad)  
   14000a05b:	add    ah,ah
   14000a05d:	retf   0x9b
   14000a060:	in     al,dx
   14000a061:	int    0x9a
   14000a063:	add    al,dh
   14000a065:	int    0x91
   14000a067:	add    bh,ch
   14000a069:	rcr    DWORD PTR [rbp-0x682f0c00],1
   14000a06f:	add    ah,dh
   14000a071:	rcr    BYTE PTR [rbx-0x622a0800],cl
   14000a077:	add    bl,bh
   14000a079:	fcomp  DWORD PTR [rbp-0x593d2c00]
   14000a07f:	add    cl,bl
   14000a081:	ret    
   14000a082:	movabs ds:0xa8c2d300a6cadd00,al
   14000a08b:	add    ah,bl
   14000a08d:	enter  0xac,0xca
   14000a091:	ret    0xbb
   14000a094:	fxch   st(0)
   14000a096:	mov    bh,0x0
   14000a098:	jrcxz  0x14000a065
   14000a09a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a09b:	add    bl,ch
   14000a09d:	(bad)  
   14000a09e:	movabs eax,ds:0xa4d2eb00aacde400
   14000a0a7:	add    bl,ah
   14000a0a9:	shr    BYTE PTR [rdi-0x532b1400],1
   14000a0af:	add    dh,ch
   14000a0b1:	fsubr  DWORD PTR [rbp-0x5c2b0e00]
   14000a0b7:	add    al,bh
   14000a0b9:	xlat   BYTE PTR ds:[rbx]
   14000a0ba:	movabs eax,ds:0xa5d9f900a5d8f700
   14000a0c3:	add    al,dh
   14000a0c5:	(bad)  
   14000a0c6:	stos   DWORD PTR es:[rdi],eax
   14000a0c7:	add    cl,dh
   14000a0c9:	fsubr  DWORD PTR [rax+rax*1+0xabdcfa]
   14000a0d0:	in     eax,0xce
   14000a0d2:	mov    dh,0x0
   14000a0d4:	in     eax,0xd2
   14000a0d6:	mov    ch,0x0
   14000a0d8:	in     al,dx
   14000a0d9:	(bad)  
   14000a0da:	mov    dl,0x0
   14000a0dc:	out    dx,al
   14000a0dd:	fnstenv [rsi-0x442c1d00]
   14000a0e3:	add    dl,ch
   14000a0e5:	(bad)  
   14000a0e6:	mov    ecx,0xbcdaed00
   14000a0eb:	add    cl,dh
   14000a0ed:	(bad)  [rax+rax*1+0xb3def8]
   14000a0f4:	hlt    
   14000a0f5:	fnstsw WORD PTR [rcx-0x44200700]
   14000a0fb:	add    bl,bh
   14000a0fd:	loopne 0x14000a0b2
   14000a0ff:	add    dh,dh
   14000a101:	loopne 0x14000a0bf
   14000a103:	add    bl,bh
   14000a105:	jrcxz  0x14000a0c3
   14000a107:	add    bh,bh
   14000a109:	(bad)  
   14000a10a:	mov    ebp,0xc3a79000
   14000a10f:	add    BYTE PTR [rdi-0x7dff2755],cl
   14000a115:	mov    ah,0xdd
   14000a117:	add    BYTE PTR [rdx-0x59ff2243],bl
   14000a11d:	mov    eax,0xbcaa00c0
   14000a122:	fild   WORD PTR [rax]
   14000a124:	mov    ch,0xbf
   14000a126:	(bad)  
   14000a127:	add    BYTE PTR [rbx-0x69ff1557],cl
   14000a12d:	mov    eax,0xa58000e8
   14000a132:	repnz add BYTE PTR [rcx-0x73ff0b57],al
   14000a139:	lods   eax,DWORD PTR ds:[rsi]
   14000a13a:	icebp  
   14000a13b:	add    BYTE PTR [rax-0x6dff0749],cl
   14000a141:	mov    dh,0xf4
   14000a143:	add    BYTE PTR [rsp+rdi*4-0x3f51ff1c],ah
   14000a14a:	fild   DWORD PTR [rax]
   14000a14c:	mov    eax,0x8f00d8c1
   14000a151:	ret    0xfb
   14000a154:	xchg   esi,eax
   14000a155:	(bad)  
   14000a156:	cli    
   14000a157:	add    BYTE PTR [rax-0x4bff1135],ch
   14000a15d:	(bad)
   14000a160:	mov    eax,0xbd00e1cc
   14000a165:	(bad)  
   14000a166:	out    dx,al
   14000a167:	add    BYTE PTR [rdi-0x4bff0936],ah
   14000a16d:	iret   
   14000a16e:	cli    
   14000a16f:	add    BYTE PTR [rsi+rdx*8-0x3737ff06],bh
   14000a176:	(bad)
   14000a179:	int    0xc6
   14000a17b:	add    cl,bl
   14000a17d:	rol    dh,cl
   14000a17f:	add    bl,ah
   14000a181:	(bad)  
   14000a182:	rol    BYTE PTR [rax],0xe5
   14000a185:	fadd   st,st(2)
   14000a187:	add    ch,ch
   14000a189:	fadd   st(2),st
   14000a18b:	add    al,ah
   14000a18d:	ror    al,cl
   14000a18f:	add    ah,ah
   14000a191:	fcmove st,st(1)
   14000a193:	add    cl,dh
   14000a195:	ffreep st(3)
   14000a197:	add    bh,ch
   14000a199:	loopne 0x14000a163
   14000a19b:	add    ch,dh
   14000a19d:	jrcxz  0x14000a163
   14000a19f:	add    bl,bh
   14000a1a1:	in     eax,0xc2
   14000a1a3:	add    dh,bh
   14000a1a5:	call   0x124f4a26f
   14000a1aa:	retf   0xf800
   14000a1ad:	out    0xc9,al
   14000a1af:	add    ah,bh
   14000a1b1:	jmp    0x121eba281
   14000a1b6:	rol    BYTE PTR [rax],1
   14000a1b8:	out    0xe2,eax
   14000a1ba:	fadd   DWORD PTR [rax]
   14000a1bc:	cmc    
   14000a1bd:	out    0xd1,eax
   14000a1bf:	add    bh,dh
   14000a1c1:	jmp    0x14000a198
   14000a1c3:	add    ah,bh
   14000a1c5:	in     al,dx
   14000a1c6:	rol    DWORD PTR [rax],cl
   14000a1c8:	cli    
   14000a1c9:	out    dx,eax
   14000a1ca:	fiadd  DWORD PTR [rax]
   14000a1cc:	(bad)  
   14000a1cd:	lock fadd DWORD PTR [rax]
   14000a1d0:	(bad)  
   14000a1d1:	(bad)  
   14000a1d2:	jmp    0x120da77d7
   14000a1d7:	add    ah,al
   14000a1d9:	fdiv   st(3),st
   14000a1db:	add    bh,al
   14000a1dd:	loope  0x14000a1db
   14000a1df:	add    dh,dl
   14000a1e1:	in     al,0xfb
   14000a1e3:	add    ah,bh
   14000a1e5:	repnz loope 0x14000a1e8
   14000a1e8:	out    0xef,al
   14000a1ea:	std    
   14000a1eb:	add    dl,ch
   14000a1ed:	repz std 
   14000a1ef:	add    bl,dh
   14000a1f1:	idiv   ah
   14000a1f3:	add    al,bh
   14000a1f5:	idiv   ebx
   14000a1f7:	add    dh,dh
   14000a1f9:	clc    
   14000a1fa:	cld    
   14000a1fb:	add    bh,bh
   14000a1fd:	(bad)  
   14000a1fe:	inc    DWORD PTR [rax]
	...
   14000a324:	add    BYTE PTR [rsp+rbx*1],bl
   14000a327:	sbb    al,0x1c
   14000a329:	(bad)  
   14000a32a:	sbb    ch,BYTE PTR [rbx+0x0]
	...
   14000a35d:	add    BYTE PTR [rsi],dl
   14000a35f:	(bad)  
   14000a360:	(bad)  
   14000a361:	(bad)  
   14000a362:	(bad)  
   14000a363:	(bad)  
   14000a364:	sbb    al,0x32
   14000a366:	jnp    0x14000a308
   14000a368:	stos   BYTE PTR es:[rdi],al
   14000a369:	mov    edx,0xa85e5
	...
   14000a396:	add    BYTE PTR [rsi],dl
   14000a398:	(bad)  
   14000a399:	(bad)  
   14000a39a:	(bad)  
   14000a39b:	(bad)  
   14000a39c:	(bad)  
   14000a39d:	sbb    dh,BYTE PTR [rdx]
   14000a39f:	jnp    0x14000a32d
   14000a3a1:	test   al,0xba
   14000a3a3:	in     eax,0xba
   14000a3a5:	mov    edx,0xa8a8b6b9
   14000a3aa:	test   al,0xb6
   14000a3ac:	(bad)  
   14000a3ad:	adc    ebp,DWORD PTR [rsi+0x6d]
   14000a3b0:	adc    eax,0x0
	...
   14000a3cd:	add    BYTE PTR [rax],al
   14000a3cf:	add    BYTE PTR [rsi],dl
   14000a3d1:	(bad)  
   14000a3d2:	(bad)  
   14000a3d3:	(bad)  
   14000a3d4:	(bad)  
   14000a3d5:	bndldx (bad),[rcx]
   14000a3d8:	jns    0x14000a35e
   14000a3da:	test   al,0xba
   14000a3dc:	in     eax,0xe6
   14000a3de:	loop   0x14000a39a
   14000a3e0:	stos   BYTE PTR es:[rdi],al
   14000a3e1:	stos   BYTE PTR es:[rdi],al
   14000a3e2:	test   al,0x96
   14000a3e4:	xchg   esi,eax
   14000a3e5:	xchg   edx,eax
   14000a3e6:	xchg   edx,eax
   14000a3e7:	xchg   ebx,eax
   14000a3e8:	xchg   ebp,eax
   14000a3e9:	xchg   ebp,eax
   14000a3ea:	fwait
   14000a3eb:	mov    dh,0x6
   14000a3ed:	or     esp,DWORD PTR [rax+0x6f0225b6]
   14000a3f3:	jo     0x14000a3f5
	...
   14000a409:	sub    BYTE PTR [rax],ch
   14000a40b:	sub    BYTE PTR [rax],ch
   14000a40d:	(bad)  
   14000a40e:	movlps xmm5,QWORD PTR [rdx]
   14000a411:	xor    eax,0xe6baa67c
   14000a416:	out    0xe2,al
   14000a418:	loop   0x14000a3d2
   14000a41a:	stos   BYTE PTR es:[rdi],al
   14000a41b:	test   al,0x96
   14000a41d:	xchg   esi,eax
   14000a41e:	xchg   edx,eax
   14000a41f:	xchg   edx,eax
   14000a420:	xchg   ebx,eax
   14000a421:	xchg   ebx,eax
   14000a422:	xchg   ebp,eax
   14000a423:	xchg   ebp,eax
   14000a424:	xchg   ebp,eax
   14000a425:	(bad)  
   14000a426:	(bad)  
   14000a427:	cwde   
   14000a428:	(bad)  
   14000a429:	cwde   
   14000a42a:	cwde   
   14000a42b:	mov    dh,0x9
   14000a42d:	or     edi,DWORD PTR [rbp+rsi*1+0x22]
   14000a431:	add    DWORD PTR [rdx+rdx*4+0x10],esi
	...
   14000a445:	add    BYTE PTR [rax],al
   14000a447:	sub    BYTE PTR [rdx],dl
   14000a449:	sub    BYTE PTR [rbx],dh
   14000a44b:	jl     0x14000a3f3
   14000a44d:	mov    ebx,0xe2e6e6e2
   14000a452:	mov    edx,0x9296a8aa
   14000a457:	xchg   edx,eax
   14000a458:	mov    cs,WORD PTR [rdi-0x676a7071]
   14000a45e:	cwde   
   14000a45f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a460:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a461:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a462:	cwde   
   14000a463:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a464:	fwait
   14000a465:	xchg   ebx,eax
   14000a466:	xchg   ebp,eax
   14000a467:	(bad)  
   14000a468:	nop
   14000a469:	nop
   14000a46a:	fwait
   14000a46b:	mov    dh,0x1d
   14000a46d:	(bad)  
   14000a46e:	xchg   edx,eax
   14000a46f:	and    al,BYTE PTR ss:[rip+0x142d8386]        # 0x1542e27fc
	...
   14000a486:	add    BYTE PTR [rip+0xfffffffff0f0f0af],bh        # 0x130f1953b
   14000a48c:	out    0xe5,al
   14000a48e:	stos   DWORD PTR es:[rdi],eax
   14000a48f:	mov    ss,WORD PTR [rdx-0x646a706e]
   14000a495:	popf   
   14000a496:	mov    al,0xbb
   14000a498:	mov    ebx,0xb3bfbaba
   14000a49d:	(bad)  
   14000a49e:	xchg   ebp,eax
   14000a49f:	(bad)  
   14000a4a0:	fwait
   14000a4a1:	(bad)  
   14000a4a2:	fwait
   14000a4a3:	nop
   14000a4a4:	fwait
   14000a4a5:	fwait
   14000a4a6:	fwait
   14000a4a7:	popf   
   14000a4a8:	(bad)  
   14000a4a9:	popf   
   14000a4aa:	popf   
   14000a4ab:	mov    ebx,0x8a960c1e
   14000a4b0:	sub    al,0x5
   14000a4b2:	xchg   BYTE PTR [rbx+0x42c],al
	...
   14000a4c4:	add    BYTE PTR [rax],al
   14000a4c6:	add    BYTE PTR [rcx],bh
   14000a4c8:	mov    ebx,0xecf0ecf0
   14000a4cd:	fwait
   14000a4ce:	lea    ebx,[rbp-0x3d404c4d]
   14000a4d4:	out    0xd7,al
   14000a4d6:	int3   
   14000a4d7:	pop    rsp
   14000a4d8:	pop    rdx
   14000a4d9:	pop    rdx
   14000a4da:	pop    rbx
   14000a4db:	(bad)  
   14000a4dc:	retf   0xaac9
   14000a4df:	cwde   
   14000a4e0:	xchg   ebp,eax
   14000a4e1:	mov    al,0xb0
   14000a4e3:	mov    al,0xaf
   14000a4e5:	mov    al,0xaf
   14000a4e7:	scas   eax,DWORD PTR es:[rdi]
   14000a4e8:	popf   
   14000a4e9:	scas   eax,DWORD PTR es:[rdi]
   14000a4ea:	scas   eax,DWORD PTR es:[rdi]
   14000a4eb:	mov    ebx,0x8ea60e1f
   14000a4f0:	sub    eax,0x2d8c9f05
   14000a4f5:	or     eax,DWORD PTR [rax]
	...
   14000a507:	cmp    DWORD PTR [rdi-0x410c1310],edi
   14000a50d:	cmp    al,0x9d
   14000a50f:	mov    esi,0xcdeec2be
   14000a514:	rex.XB (bad) 
   14000a516:	(bad)  
   14000a517:	(bad)  
   14000a518:	(bad)  
   14000a519:	(bad)  
   14000a51a:	ds ds ds (bad) 
   14000a51e:	rex.R retf 0x96a5
   14000a522:	scas   eax,DWORD PTR es:[rdi]
   14000a523:	mov    bl,0xb3
   14000a525:	mov    bl,0xb0
   14000a527:	mov    al,0xb0
   14000a529:	mov    al,0xb0
   14000a52b:	mov    esi,0x8ea70e24
   14000a530:	(bad)  
   14000a531:	add    eax,0xb30969f
	...
   14000a546:	add    BYTE PTR [rcx],bh
   14000a548:	mov    edi,0xbef3ecf0
   14000a54d:	lea    ebx,[rbp+0x43d6e9c2]
   14000a553:	ds rex.B
   14000a555:	rex.B
   14000a556:	rex.B
   14000a557:	rex.B
   14000a558:	rex.B
   14000a559:	rex.B
   14000a55a:	rex.B
   14000a55b:	rex.B
   14000a55c:	rex.B
   14000a55d:	rex.B
   14000a55e:	ds (bad) 
   14000a560:	rex.R enter 0x96a0,0xb3
   14000a565:	mov    bl,0xb3
   14000a567:	mov    bl,0xb3
   14000a569:	mov    al,0xb0
   14000a56b:	call   0xd5abb3a9
   14000a570:	xor    BYTE PTR [rax],cl
   14000a572:	mov    eax,0xd38a7
	...
   14000a587:	cmp    DWORD PTR [rsi-0x41130c10],edi
   14000a58d:	lea    ebx,[rsi+0x413e68e6]
   14000a593:	rex.B
   14000a594:	rex.B
   14000a595:	rex.B
   14000a596:	rex.B
   14000a597:	rex.B
   14000a598:	rex.B
   14000a599:	rex.B
   14000a59a:	rex.B
   14000a59b:	rex.B
   14000a59c:	rex.B
   14000a59d:	rex.B
   14000a59e:	rex.B
   14000a59f:	rex.B
   14000a5a0:	ds rex.B (bad) 
   14000a5a3:	movabs ds:0xe8b3b3b3b3b3b38b,al
   14000a5ac:	cmp    al,0x11
   14000a5ae:	mov    cl,0x95
   14000a5b0:	(bad)  
   14000a5b1:	or     dl,ah
   14000a5b3:	lods   al,BYTE PTR ds:[rsi]
   14000a5b4:	cmp    BYTE PTR [rcx],dl
	...
   14000a5c6:	add    BYTE PTR [rcx],bh
   14000a5c8:	mov    edi,0xbef3ecf0
   14000a5cd:	xchg   ecx,eax
   14000a5ce:	mov    ebx,0x42423f5c
   14000a5d3:	rex.B
   14000a5d4:	rex.B
   14000a5d5:	rex.B
   14000a5d6:	rex.B
   14000a5d7:	rex.X
   14000a5d8:	rex.B
   14000a5d9:	rex.B
   14000a5da:	rex.B
   14000a5db:	rex.B
   14000a5dc:	rex.B
   14000a5dd:	rex.B
   14000a5de:	rex.B
   14000a5df:	rex.B
   14000a5e0:	rex.B
   14000a5e1:	rex.B
   14000a5e2:	ds int 0xa2
   14000a5e5:	test   BYTE PTR [rbx-0x4f4c4c4d],dh
   14000a5eb:	call   0xd5b1b77d
   14000a5f0:	lea    ecx,[rsi]
   14000a5f2:	loope  0x14000a5a0
   14000a5f4:	cmp    BYTE PTR [rbx],ah
	...
   14000a606:	add    BYTE PTR [rcx],bh
   14000a608:	mov    esi,0xbef3f3f3
   14000a60d:	(bad)  
   14000a60e:	pop    rdi
   14000a60f:	rex.X
   14000a610:	rex.B
   14000a611:	rex.B
   14000a612:	rex.X
   14000a613:	rex.B
   14000a614:	rex.B
   14000a615:	rex.X
   14000a616:	rex.B
   14000a617:	rex.X
   14000a618:	rex.B
   14000a619:	rex.B
   14000a61a:	rex.B
   14000a61b:	rex.B
   14000a61c:	rex.B
   14000a61d:	rex.B
   14000a61e:	rex.B
   14000a61f:	rex.B
   14000a620:	rex.B
   14000a621:	rex.B
   14000a622:	rex.B
   14000a623:	rol    BYTE PTR ds:[rcx-0x4c4c4074],1
   14000a62a:	mov    bl,0xe8
   14000a62c:	lea    edx,[rcx]
   14000a62e:	stos   DWORD PTR es:[rdi],eax
   14000a62f:	cwde   
   14000a630:	cdq    
   14000a631:	adc    DWORD PTR [rdx+0x2339ab],edi
	...
   14000a647:	cmp    DWORD PTR [rbx-0x160c1310],edi
   14000a64d:	(bad)  
   14000a64e:	rex
   14000a64f:	rex.B
   14000a650:	rex
   14000a651:	rex.X
   14000a652:	rex.WR fdiv st(0),st
   14000a655:	iret   
   14000a656:	push   rsi
   14000a657:	rex.X
   14000a658:	rex.X
   14000a659:	rex.X
   14000a65a:	rex.B
   14000a65b:	rex.XB
   14000a65c:	rex.B
   14000a65d:	rex.B
   14000a65e:	rex.B
   14000a65f:	rex.B
   14000a660:	rex.B
   14000a661:	rex.B
   14000a662:	rex.B
   14000a663:	rex.B
   14000a664:	rex.B xlat BYTE PTR ds:[rbx]
   14000a666:	jbe    0x14000a60f
   14000a668:	mov    edi,0x3ce8b3b3
   14000a66d:	adc    DWORD PTR [rsp+rdx*4-0x4d1eee67],ebp
   14000a674:	lea    esp,[rbx]
	...
   14000a686:	add    BYTE PTR [rbx],bh
   14000a688:	mov    esi,0xdff0f3f0
   14000a68d:	rex.X
   14000a68e:	rex.B
   14000a68f:	rex
   14000a690:	rex.X
   14000a691:	rex.B fdiv st(7),st
   14000a694:	(bad)  
   14000a695:	(bad)  
   14000a696:	clc    
   14000a697:	push   0x41414343
   14000a69c:	rex.B
   14000a69d:	rex.XB
   14000a69e:	rex.B
   14000a69f:	rex.B
   14000a6a0:	rex.B
   14000a6a1:	rex.B
   14000a6a2:	rex.B
   14000a6a3:	rex.B (bad) 
   14000a6a5:	pop    rdx
   14000a6a6:	fidivr WORD PTR [rax-0x41]
   14000a6a9:	mov    bl,0xb3
   14000a6ab:	in     eax,0x8d
   14000a6ad:	adc    DWORD PTR [rbp+rdx*4-0x5345f167],ebp
   14000a6b4:	xchg   ebp,eax
   14000a6b5:	sub    DWORD PTR [rax],eax
	...
   14000a6c7:	cmp    edi,DWORD PTR [rdi+0x5fe9f3f0]
   14000a6cd:	rex.X
   14000a6ce:	rex
   14000a6cf:	rex.XB
   14000a6d0:	rex.B
   14000a6d1:	rex.WR sti 
   14000a6d3:	(bad)  
   14000a6d4:	(bad)  
   14000a6d5:	(bad)  
   14000a6d6:	(bad)  
   14000a6d7:	std    
   14000a6d8:	ficomp DWORD PTR [rdx+0x43]
   14000a6db:	rex.XB
   14000a6dc:	rex.B
   14000a6dd:	rex.X
   14000a6de:	rex.B
   14000a6df:	rex.XB
   14000a6e0:	rex.B
   14000a6e1:	rex.XB
   14000a6e2:	rex.B
   14000a6e3:	rex.B
   14000a6e4:	rex.XB (bad) 
   14000a6e6:	sar    BYTE PTR [rax-0x58],1
   14000a6e9:	mov    edi,0x118de8bf
   14000a6ee:	lods   al,BYTE PTR ds:[rsi]
   14000a6ef:	cwde   
   14000a6f0:	cdq    
   14000a6f1:	adc    ecx,esp
   14000a6f3:	mov    dl,0x99
   14000a6f5:	sub    DWORD PTR [rax],eax
	...
   14000a707:	cmp    eax,eax
   14000a709:	lock repz fld QWORD PTR [rax+0x40]
   14000a70e:	rex.XB
   14000a70f:	rex.X
   14000a710:	rex pop rax
   14000a712:	cld    
   14000a713:	(bad)  
   14000a714:	(bad)  
   14000a715:	(bad)  
   14000a716:	(bad)  
   14000a717:	(bad)  
   14000a718:	(bad)  
   14000a719:	cli    
   14000a71a:	int3   
   14000a71b:	rex.WR
   14000a71c:	rex.XB
   14000a71d:	rex.X
   14000a71e:	rex.B
   14000a71f:	rex.X
   14000a720:	rex.B
   14000a721:	rex.B
   14000a722:	rex.X
   14000a723:	rex.B
   14000a724:	rex.B
   14000a725:	pop    r9
   14000a727:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a728:	js     0x14000a6dd
   14000a72a:	mov    edi,0xac1191e5
   14000a72f:	cwde   
   14000a730:	cdq    
   14000a731:	adc    ecx,esp
   14000a733:	lods   al,BYTE PTR ds:[rsi]
   14000a734:	cdq    
   14000a735:	sub    DWORD PTR [rax],eax
	...
   14000a747:	cmp    edi,DWORD PTR [rsi+0x4054ecf3]
   14000a74d:	rex.XB
   14000a74e:	rex.X
   14000a74f:	rex
   14000a750:	rex.X pop rax
   14000a752:	cld    
   14000a753:	(bad)  
   14000a754:	(bad)  
   14000a755:	(bad)  
   14000a756:	(bad)  
   14000a757:	(bad)  
   14000a758:	(bad)  
   14000a759:	(bad)  
   14000a75a:	(bad)  
   14000a75b:	fistp  DWORD PTR [rsp+rcx*2+0x43]
   14000a75f:	rex.B
   14000a760:	rex.XB
   14000a761:	rex.X
   14000a762:	rex.B
   14000a763:	rex.XB
   14000a764:	rex.B
   14000a765:	rex.B
   14000a766:	rex.B enter 0xab7e,0xbf
   14000a76b:	call   0xd8acb901
   14000a770:	cdq    
   14000a771:	(bad)  
   14000a772:	mov    edx,0x2999ac
	...
   14000a787:	cmp    edi,DWORD PTR [rdx+0x4049baf3]
   14000a78d:	rex.WXB
   14000a78e:	rex.X
   14000a78f:	rex.WXB
   14000a790:	rex.X pop rax
   14000a792:	cld    
   14000a793:	(bad)  
   14000a794:	(bad)  
   14000a795:	(bad)  
   14000a796:	(bad)  
   14000a797:	(bad)  
   14000a798:	(bad)  
   14000a799:	(bad)  
   14000a79a:	(bad)  
   14000a79b:	(bad)  
   14000a79c:	cli    
   14000a79d:	(bad)  
   14000a79e:	push   rdi
   14000a79f:	rex.XB
   14000a7a0:	rex.X
   14000a7a1:	rex.X
   14000a7a2:	rex.X
   14000a7a3:	rex.B
   14000a7a4:	rex.X
   14000a7a5:	rex.X (bad) 
   14000a7a7:	push   0xffffffffe5bf8c86
   14000a7ac:	(bad)  
   14000a7ad:	adc    DWORD PTR [rax+rbx*4-0x531eee67],ebp
   14000a7b4:	cdq    
   14000a7b5:	sub    DWORD PTR [rax],eax
	...
   14000a7c7:	cmp    edi,DWORD PTR [rsi+0x4b40a4f3]
   14000a7cd:	rex.XB
   14000a7ce:	rex
   14000a7cf:	rex.XB
   14000a7d0:	rex pop rax
   14000a7d2:	cld    
   14000a7d3:	(bad)  
   14000a7d4:	(bad)  
   14000a7d5:	(bad)  
   14000a7d6:	(bad)  
   14000a7d7:	(bad)  
   14000a7d8:	(bad)  
   14000a7d9:	(bad)  
   14000a7da:	(bad)  
   14000a7db:	(bad)  
   14000a7dc:	(bad)  
   14000a7dd:	push   rsi
   14000a7df:	(bad)  
   14000a7e0:	push   rsi
   14000a7e1:	rex.XB
   14000a7e2:	rex.X
   14000a7e3:	rex.X
   14000a7e4:	rex.X
   14000a7e5:	rex.X
   14000a7e6:	pop    r11
   14000a7e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a7e9:	js     0x14000a7a7
   14000a7eb:	in     eax,0x37
   14000a7ed:	adc    DWORD PTR [rax+rbx*4-0x531ef170],ebp
   14000a7f4:	cdq    
   14000a7f5:	sub    DWORD PTR [rax],eax
	...
   14000a807:	cmp    eax,eax
   14000a809:	icebp  
   14000a80a:	ret    
   14000a80b:	rex
   14000a80c:	rex.WXB
   14000a80d:	rex
   14000a80e:	rex.XB
   14000a80f:	rex.WXB
   14000a810:	rex.X push rbp
   14000a812:	(bad)  
   14000a813:	(bad)  
   14000a814:	(bad)  
   14000a815:	(bad)  
   14000a816:	(bad)  
   14000a817:	(bad)  
   14000a818:	(bad)  
   14000a819:	(bad)  
   14000a81a:	(bad)  
   14000a81b:	(bad)  
   14000a81c:	(bad)  
   14000a81d:	(bad)  
   14000a81e:	(bad)  
   14000a81f:	sti    
   14000a820:	(bad)  
   14000a821:	pop    rax
   14000a822:	push   rsi
   14000a823:	rex.XB
   14000a824:	rex.X
   14000a825:	rex.X
   14000a826:	rex
   14000a827:	rex.XB fnstsw WORD PTR [r14-0x45]
   14000a82b:	mov    esi,0x98b61127
   14000a830:	cmp    al,0xe
   14000a832:	loope  0x14000a7e0
   14000a834:	cdq    
   14000a835:	sub    DWORD PTR [rax],eax
	...
   14000a847:	cmp    eax,eax
   14000a849:	in     al,dx
   14000a84a:	push   rbx
   14000a84b:	rex
   14000a84c:	rex.WXB
   14000a84d:	rex.WXB
   14000a84e:	rex.WXB
   14000a84f:	rex.WXB
   14000a850:	rex pop rax
   14000a852:	cld    
   14000a853:	(bad)  
   14000a854:	(bad)  
   14000a855:	(bad)  
   14000a856:	(bad)  
   14000a857:	(bad)  
   14000a858:	(bad)  
   14000a859:	(bad)  
   14000a85a:	(bad)  
   14000a85b:	(bad)  
   14000a85c:	(bad)  
   14000a85d:	(bad)  
   14000a85e:	(bad)  
   14000a85f:	(bad)  
   14000a860:	push   rdi
   14000a862:	(bad)  
   14000a863:	push   rsi
   14000a864:	rex.XB
   14000a865:	rex.B
   14000a866:	rex.XB
   14000a867:	sar    BYTE PTR [rsi-0x54],cl
   14000a86b:	call   0xd8b6b997
   14000a870:	cmp    al,0xe
   14000a872:	loope  0x14000a820
   14000a874:	cdq    
   14000a875:	sub    DWORD PTR [rax],eax
	...
   14000a887:	cmp    edi,DWORD PTR [rsi+0x4b4052e9]
   14000a88d:	rex.WXB
   14000a88e:	rex.X
   14000a88f:	rex.XB
   14000a890:	rex.WXB push r13
   14000a892:	(bad)  
   14000a893:	(bad)  
   14000a894:	(bad)  
   14000a895:	(bad)  
   14000a896:	(bad)  
   14000a897:	(bad)  
   14000a898:	(bad)  
   14000a899:	(bad)  
   14000a89a:	(bad)  
   14000a89b:	(bad)  
   14000a89c:	(bad)  
   14000a89d:	(bad)  
   14000a89e:	(bad)  
   14000a89f:	(bad)  
   14000a8a0:	(bad)  
   14000a8a1:	(bad)  
   14000a8a2:	cld    
   14000a8a3:	(bad)  
   14000a8a4:	rex.WR
   14000a8a5:	rex
   14000a8a6:	rex.XB
   14000a8a7:	rex enter 0xab7e,0xe5
   14000a8ac:	(bad)  
   14000a8ad:	adc    DWORD PTR [rsi-0x1ef7c56c],esi
   14000a8b3:	lods   al,BYTE PTR ds:[rsi]
   14000a8b4:	cmp    al,0x29
	...
   14000a8c6:	add    BYTE PTR [rbx],bh
   14000a8c8:	in     eax,0xe8
   14000a8ca:	push   rcx
   14000a8cb:	rex.RXB
   14000a8cc:	rex.WXB
   14000a8cd:	rex.WXB
   14000a8ce:	rex.WXB
   14000a8cf:	rex.WXB
   14000a8d0:	rex pop rax
   14000a8d2:	cld    
   14000a8d3:	(bad)  
   14000a8d4:	(bad)  
   14000a8d5:	(bad)  
   14000a8d6:	(bad)  
   14000a8d7:	(bad)  
   14000a8d8:	(bad)  
   14000a8d9:	(bad)  
   14000a8da:	(bad)  
   14000a8db:	(bad)  
   14000a8dc:	(bad)  
   14000a8dd:	(bad)  
   14000a8de:	(bad)  
   14000a8df:	(bad)  
   14000a8e0:	(bad)  
   14000a8e1:	(bad)  
   14000a8e2:	call   rbp
   14000a8e4:	rex.WR
   14000a8e5:	rex.XB
   14000a8e6:	rex.X
   14000a8e7:	rex.X retf 
   14000a8e9:	jle    0x14000a896
   14000a8eb:	call   0xd8b6ba17
   14000a8f0:	cmp    cl,BYTE PTR [rsi]
   14000a8f2:	loope  0x14000a8a0
   14000a8f4:	cmp    al,0x23
	...
   14000a906:	add    BYTE PTR [rbx],bh
   14000a908:	mov    esi,0x4b4751e5
   14000a90d:	rex.WXB
   14000a90e:	rex.WXB
   14000a90f:	rex.WXB
   14000a910:	rex.WXB push r13
   14000a912:	cld    
   14000a913:	(bad)  
   14000a914:	(bad)  
   14000a915:	(bad)  
   14000a916:	(bad)  
   14000a917:	(bad)  
   14000a918:	(bad)  
   14000a919:	(bad)  
   14000a91a:	(bad)  
   14000a91b:	(bad)  
   14000a91c:	(bad)  
   14000a91d:	(bad)  
   14000a91e:	(bad)  
   14000a91f:	(bad)  
   14000a920:	(bad)  
   14000a921:	(bad)  
   14000a922:	dec    edi
   14000a924:	rex.WR
   14000a925:	rex
   14000a926:	rex
   14000a927:	rex sar DWORD PTR [rsi-0x4a],1
   14000a92b:	jmp    0x14000a954
   14000a92d:	adc    DWORD PTR [rsi-0x1ef1c568],esi
   14000a933:	lods   al,BYTE PTR ds:[rsi]
   14000a934:	cmp    ah,BYTE PTR [rbx]
	...
   14000a946:	add    BYTE PTR [rbx],bh
   14000a948:	mov    esi,0x4b4751e8
   14000a94d:	rex.WXB
   14000a94e:	rex.WXB
   14000a94f:	rex.WXB
   14000a950:	rex pop rax
   14000a952:	cld    
   14000a953:	(bad)  
   14000a954:	(bad)  
   14000a955:	(bad)  
   14000a956:	(bad)  
   14000a957:	(bad)  
   14000a958:	(bad)  
   14000a959:	(bad)  
   14000a95a:	(bad)  
   14000a95b:	(bad)  
   14000a95c:	(bad)  
   14000a95d:	(bad)  
   14000a95e:	(bad)  
   14000a95f:	(bad)  
   14000a960:	(bad)  
   14000a961:	(bad)  
   14000a962:	ficom  DWORD PTR [rbp+0x4c]
   14000a965:	rex.WXB
   14000a966:	rex.XB
   14000a967:	rex.WXB sar BYTE PTR [r14-0x46],cl
   14000a96b:	jmp    0x14000a994
   14000a96d:	or     eax,0xe3ab6ac
   14000a972:	loope  0x14000a92f
   14000a974:	cmp    al,0x23
	...
   14000a986:	add    BYTE PTR [rbx],bh
   14000a988:	call   0x18c47fa76
   14000a98d:	rex.WXB
   14000a98e:	rex.WXB
   14000a98f:	rex.WXB
   14000a990:	rex.WXB (bad) 
   14000a992:	(bad)  
   14000a993:	(bad)  
   14000a994:	(bad)  
   14000a995:	(bad)  
   14000a996:	(bad)  
   14000a997:	(bad)  
   14000a998:	(bad)  
   14000a999:	(bad)  
   14000a99a:	(bad)  
   14000a99b:	(bad)  
   14000a99c:	(bad)  
   14000a99d:	(bad)  
   14000a99e:	(bad)  
   14000a99f:	(bad)  
   14000a9a0:	cli    
   14000a9a1:	iret   
   14000a9a2:	pop    rbp
   14000a9a3:	rex.XB
   14000a9a4:	rex.WXB
   14000a9a5:	rex
   14000a9a6:	rex.XB
   14000a9a7:	rex.WXB leave 
   14000a9a9:	and    dh,0xec
   14000a9ac:	(bad)  
   14000a9ad:	adc    DWORD PTR [rdx-0x1ef7c554],edi
   14000a9b3:	call   0x14000ccf2
	...
   14000a9c4:	add    BYTE PTR [rax],al
   14000a9c6:	add    BYTE PTR [rbx],bh
   14000a9c8:	shr    ah,0x45
   14000a9cb:	rex.RXB
   14000a9cc:	rex.WXB
   14000a9cd:	rex.WXB
   14000a9ce:	rex.WXB
   14000a9cf:	rex.WXB
   14000a9d0:	rex.WXB pop r14
   14000a9d2:	cld    
   14000a9d3:	(bad)  
   14000a9d4:	(bad)  
   14000a9d5:	(bad)  
   14000a9d6:	(bad)  
   14000a9d7:	(bad)  
   14000a9d8:	(bad)  
   14000a9d9:	(bad)  
   14000a9da:	(bad)  
   14000a9db:	(bad)  
   14000a9dc:	(bad)  
   14000a9dd:	(bad)  
   14000a9de:	(bad)  
   14000a9df:	fsub   QWORD PTR [rdx+0x5d]
   14000a9e2:	rex.XB
   14000a9e3:	rex.RXB
   14000a9e4:	rex.XB
   14000a9e5:	rex.WXB
   14000a9e6:	rex push rdi
   14000a9e8:	frstor [rbp+0x1127e6eb]
   14000a9ee:	loop   0x14000a997
   14000a9f0:	cmp    cl,BYTE PTR [rsi]
   14000a9f2:	loope  0x14000a9d9
   14000a9f4:	cmp    esp,DWORD PTR [rbx]
	...
   14000aa06:	add    BYTE PTR [rbx],bh
   14000aa08:	shl    bl,0x72
   14000aa0b:	rex.RXB
   14000aa0c:	rex.WXB
   14000aa0d:	rex.WRB
   14000aa0e:	rex.WXB
   14000aa0f:	rex.WXB
   14000aa10:	rex.WXB (bad) 
   14000aa12:	(bad)  
   14000aa13:	(bad)  
   14000aa14:	(bad)  
   14000aa15:	(bad)  
   14000aa16:	(bad)  
   14000aa17:	(bad)  
   14000aa18:	(bad)  
   14000aa19:	(bad)  
   14000aa1a:	(bad)  
   14000aa1b:	(bad)  
   14000aa1c:	(bad)  
   14000aa1d:	sti    
   14000aa1e:	iret   
   14000aa1f:	pop    rbp
   14000aa20:	rex.WR
   14000aa21:	rex.WXB
   14000aa22:	rex.WXB
   14000aa23:	rex.WXB
   14000aa24:	rex.WXB
   14000aa25:	rex
   14000aa26:	(bad)
   14000aa2c:	(bad)  
   14000aa2d:	adc    DWORD PTR [rdx-0x1ef1c557],edi
   14000aa33:	sar    BYTE PTR [rbx],0x23
	...
   14000aa46:	add    BYTE PTR [rbx],bh
   14000aa48:	mov    edx,0x4d489ff3
   14000aa4d:	rex.WXB
   14000aa4e:	rex.WRB
   14000aa4f:	rex.WXB
   14000aa50:	rex.WXB (bad) 
   14000aa52:	std    
   14000aa53:	(bad)  
   14000aa54:	(bad)  
   14000aa55:	(bad)  
   14000aa56:	(bad)  
   14000aa57:	(bad)  
   14000aa58:	(bad)  
   14000aa59:	(bad)  
   14000aa5a:	(bad)  
   14000aa5b:	(bad)  
   14000aa5c:	fsub   QWORD PTR [rdx+0x4e]
   14000aa5f:	rex.WR
   14000aa60:	rex.WXB
   14000aa61:	rex.WXB
   14000aa62:	rex.WXB
   14000aa63:	rex.XB
   14000aa64:	rex.WXB
   14000aa65:	rex.WXB
   14000aa66:	rex (bad) 
   14000aa68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000aa69:	mov    ecx,0x1127e6e8
   14000aa6e:	mov    edx,0xe10e3aa7
   14000aa73:	mov    ebx,0x233a
	...
   14000aa84:	add    BYTE PTR [rax],al
   14000aa86:	add    BYTE PTR [rcx],bh
   14000aa88:	mov    esi,0x474fc0f3
   14000aa8d:	rex.WRX
   14000aa8e:	rex.WXB
   14000aa8f:	rex.WRB
   14000aa90:	rex.WXB (bad) 
   14000aa92:	std    
   14000aa93:	(bad)  
   14000aa94:	(bad)  
   14000aa95:	(bad)  
   14000aa96:	(bad)  
   14000aa97:	(bad)  
   14000aa98:	(bad)  
   14000aa99:	(bad)  
   14000aa9a:	sti    
   14000aa9b:	iret   
   14000aa9c:	(bad)  
   14000aa9d:	push   rdi
   14000aa9e:	rex.WRB
   14000aa9f:	rex.WXB
   14000aaa0:	rex.WXB
   14000aaa1:	rex.WXB
   14000aaa2:	rex.WXB
   14000aaa3:	rex.WXB
   14000aaa4:	rex
   14000aaa5:	rex.XB (bad) 
   14000aaa7:	cmc    
   14000aaa8:	mov    ch,ah
   14000aaaa:	in     al,dx
   14000aaab:	jmp    0x14000aad4
   14000aaad:	adc    DWORD PTR [rdx-0x47f1c557],edi
   14000aab3:	mov    ebx,0x233a
	...
   14000aac4:	add    BYTE PTR [rax],al
   14000aac6:	add    BYTE PTR [rbx],bh
   14000aac8:	shl    bl,0xec
   14000aacb:	jno    0x14000ab1a
   14000aacd:	rex.WXB
   14000aace:	rex.WRB
   14000aacf:	rex.WRB
   14000aad0:	rex.WXB (bad) 
   14000aad2:	std    
   14000aad3:	(bad)  
   14000aad4:	(bad)  
   14000aad5:	(bad)  
   14000aad6:	(bad)  
   14000aad7:	(bad)  
   14000aad8:	push   rsi
   14000aada:	addr32 pop rbp
   14000aadc:	rex.WRB
   14000aadd:	rex.WXB
   14000aade:	rex.WXB
   14000aadf:	rex.WXB
   14000aae0:	rex.WXB
   14000aae1:	rex.WXB
   14000aae2:	rex.WXB
   14000aae3:	rex.WXB
   14000aae4:	rex.WR (bad) 
   14000aae6:	fcmovu st,st(6)
   14000aae8:	mov    eax,ebp
   14000aaea:	in     al,dx
   14000aaeb:	jmp    0x14000ab14
   14000aaed:	adc    DWORD PTR [rdx-0x1ef1c554],edi
   14000aaf3:	lods   al,BYTE PTR ds:[rsi]
   14000aaf4:	cmp    al,0x23
	...
   14000ab06:	add    BYTE PTR [rcx],bh
   14000ab08:	mov    ebx,0x46aaf3f3
   14000ab0d:	rex.WRB
   14000ab0e:	rex.WRB
   14000ab0f:	rex.WRB
   14000ab10:	rex.WXB (bad) 
   14000ab12:	(bad)  
   14000ab13:	std    
   14000ab14:	(bad)  
   14000ab15:	(bad)  
   14000ab16:	(bad)  
   14000ab17:	sti    
   14000ab18:	(bad)  
   14000ab19:	pop    rbp
   14000ab1a:	rex.WRX
   14000ab1b:	rex.WR
   14000ab1c:	rex.WXB
   14000ab1d:	rex.WXB
   14000ab1e:	rex.WR
   14000ab1f:	rex.WXB
   14000ab20:	rex.WXB
   14000ab21:	rex.WXB
   14000ab22:	rex.WXB
   14000ab23:	rex.WRX
   14000ab24:	addr32 imul esi,esp,0xecece288
   14000ab2b:	call   0xe7babc57
   14000ab30:	cmp    cl,BYTE PTR [rsi]
   14000ab32:	mov    eax,0x233bbb
	...
   14000ab47:	cmp    DWORD PTR [rdi+0x71e9f3f0],edi
   14000ab4d:	rex.RXB
   14000ab4e:	rex.WRB
   14000ab4f:	rex.WRB
   14000ab50:	rex.WRB (bad) 
   14000ab52:	std    
   14000ab53:	(bad)  
   14000ab54:	(bad)  
   14000ab55:	(bad)  
   14000ab56:	clc    
   14000ab57:	(bad)  
   14000ab58:	pop    rbp
   14000ab59:	rex.WRX
   14000ab5a:	rex.WRB
   14000ab5b:	rex.WXB
   14000ab5c:	rex.WRB
   14000ab5d:	rex.WXB
   14000ab5e:	rex.WRB
   14000ab5f:	rex.WXB
   14000ab60:	rex.WXB
   14000ab61:	rex.WXB (bad) 
   14000ab63:	push   0xffffffffa5ded462
   14000ab68:	call   0x167e79556
   14000ab6d:	adc    DWORD PTR [rdx-0x49f1c557],edi
   14000ab73:	mov    ebx,0x233a
	...
   14000ab84:	add    BYTE PTR [rax],al
   14000ab86:	add    BYTE PTR [rdi-0xc130f40],cl
   14000ab8c:	stos   DWORD PTR es:[rdi],eax
   14000ab8d:	rex.WRXB
   14000ab8e:	rex.WRB
   14000ab8f:	rex.WRB
   14000ab90:	rex.WRB
   14000ab91:	rex.WRB (bad) 
   14000ab94:	cli    
   14000ab95:	(bad)  
   14000ab96:	(bad)  
   14000ab97:	rex.WRX
   14000ab98:	rex.WRB
   14000ab99:	rex.WRB
   14000ab9a:	rex.WRB
   14000ab9b:	rex.WRB
   14000ab9c:	rex.WRB
   14000ab9d:	rex.WXB
   14000ab9e:	rex.WXB
   14000ab9f:	rex.WRB push r13
   14000aba1:	push   0x69
   14000aba3:	(bad)  
   14000aba4:	imul   esi,ebp,0xe9e8e588
   14000abaa:	in     al,dx
   14000abab:	call   0xe7bbbcd7
   14000abb0:	cmp    cl,BYTE PTR [rsi]
   14000abb2:	mov    eax,0x233cb7
	...
   14000abc7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000abc8:	in     al,dx
   14000abc9:	repz icebp 
   14000abcb:	repz mov esi,0x4d4d4a74
   14000abd1:	rex.WRB
   14000abd2:	rex.WRB (bad) 
   14000abd4:	rex.WRX
   14000abd5:	rex.WRX
   14000abd6:	rex.WRB
   14000abd7:	rex.WRB
   14000abd8:	rex.WRB
   14000abd9:	rex.WRB
   14000abda:	rex.WXB
   14000abdb:	rex.WXB
   14000abdc:	rex.WRB
   14000abdd:	rex.WRX (bad) 
   14000abdf:	imul   ebp,DWORD PTR [rdx+0x62],0x89d96262
   14000abe6:	mov    eax,0xe9e9e8eb
   14000abeb:	out    0x27,al
   14000abed:	adc    DWORD PTR [rdx-0x1ef1c557],edi
   14000abf3:	lods   al,BYTE PTR ds:[rsi]
   14000abf4:	cmp    ah,BYTE PTR [rbx]
	...
   14000ac06:	add    BYTE PTR [rax-0xc0c0c14],bl
   14000ac0c:	mov    esi,0x4d486c91
   14000ac11:	rex.WRB
   14000ac12:	rex.WRB
   14000ac13:	rex.WRB
   14000ac14:	rex.WRB
   14000ac15:	rex.WRB
   14000ac16:	rex.WRB
   14000ac17:	rex.WRB
   14000ac18:	rex.WRB
   14000ac19:	rex.WRX
   14000ac1a:	rex.WRX (bad) 
   14000ac1c:	(bad)  
   14000ac1d:	push   0x6a
   14000ac1f:	addr32 addr32 (bad) 
   14000ac23:	(bad)  [rbp-0x1317145b]
   14000ac29:	call   0x151289517
   14000ac2e:	mov    ebx,0xe1083aa7
   14000ac33:	lods   al,BYTE PTR ds:[rsi]
   14000ac34:	cmp    al,0x23
	...
   14000ac46:	add    BYTE PTR [rax-0x6060c14],bl
   14000ac4c:	repz mov bl,0xb3
   14000ac4f:	jae    0x14000aca6
   14000ac51:	rex.WRX push rbp
   14000ac53:	rex.WRX
   14000ac54:	rex.WRX push rbp
   14000ac56:	(bad)  
   14000ac57:	(bad)  
   14000ac59:	imul   ebp,DWORD PTR [rcx+0x6a],0x67626769
   14000ac60:	(bad)  
   14000ac62:	fisub  DWORD PTR [rbp-0x1717144c]
   14000ac68:	jmp    0x167e79656
   14000ac6d:	adc    DWORD PTR [rbx-0x55f1c554],edi
   14000ac73:	mov    ebx,0x233a
	...
   14000ac84:	add    BYTE PTR [rax],al
   14000ac86:	add    BYTE PTR [rbp-0xc0f0c1b],dl
   14000ac8c:	jmp    0x14000ac40
   14000ac8e:	ret    0xa5f1
   14000ac91:	vpunpckhwd xmm13,xmm2,XMMWORD PTR [rdx+0x69]
   14000ac96:	imul   ebp,DWORD PTR [rcx+0x69],0x63676369
   14000ac9d:	addr32 (bad) 
   14000aca0:	imul   ebx,eax,0xe8ebb4b4
   14000aca6:	call   0x129c39594
   14000acab:	call   0xe7bbbdd7
   14000acb0:	cmp    cl,BYTE PTR [rsi]
   14000acb2:	loope  0x14000ac60
   14000acb4:	cmp    al,0x23
	...
   14000acc6:	add    BYTE PTR [rax-0xf0f0c18],bl
   14000accc:	in     al,dx
   14000accd:	scas   eax,DWORD PTR es:[rdi]
   14000acce:	mov    esp,0xc7bac2ec
   14000acd3:	movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000acd7:	movsxd ebp,DWORD PTR [rcx+0x62]
   14000acda:	movsxd esp,DWORD PTR [edx+0x63]
   14000acde:	imul   edx,eax,0xe8e2b4de
   14000ace4:	call   0x129e996d1
   14000ace9:	mov    esi,0x1127e5e9
   14000acee:	mov    ebx,0xe1083aa7
   14000acf3:	lods   al,BYTE PTR ds:[rsi]
   14000acf4:	cmp    al,0x23
	...
   14000ad06:	add    BYTE PTR [rax-0xf0f0f18],bl
   14000ad0c:	call   0x131ea6dc0
   14000ad11:	icebp  
   14000ad12:	mov    edi,0x66c5c7a1
   14000ad17:	movsxd esp,DWORD PTR [rdi+0x63]
   14000ad1a:	addr32 addr32 data16 (bad) 
   14000ad1e:	fucom  st(1)
   14000ad20:	mov    edx,0xe9e8e8e8
   14000ad25:	jmp    0x129bf7012
   14000ad2a:	jmp    0xfb11d418
   14000ad2f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ad30:	cdq    
   14000ad31:	(bad)  
   14000ad32:	mov    dh,0xac
   14000ad34:	cmp    al,0x29
	...
   14000ad46:	add    BYTE PTR [rbp-0xf0f0c18],dl
   14000ad4c:	in     al,dx
   14000ad4d:	scas   eax,DWORD PTR es:[rdi]
   14000ad4e:	mov    edi,0xc2e9e9e9
   14000ad53:	mov    bl,0xc2
   14000ad55:	mov    edi,0xddddddb6
   14000ad5a:	fucom  st(1)
   14000ad5c:	mov    edx,0xe9c2bec0
   14000ad61:	call   0x129bf974f
   14000ad66:	mov    esi,0xbec2c2e9
   14000ad6b:	in     al,dx
   14000ad6c:	(bad)  
   14000ad6d:	adc    DWORD PTR [rbx-0x47dc5259],edi
   14000ad73:	mov    edx,0x2998
	...
   14000ad84:	add    BYTE PTR [rax],al
   14000ad86:	add    BYTE PTR [rax-0xc0f0f1b],bl
   14000ad8c:	call   0x129ed6940
   14000ad91:	jmp    0x102c35b58
   14000ad96:	ret    0xc2c2
   14000ad99:	ret    0xc2c2
   14000ad9c:	ret    0xe9e9
   14000ad9f:	ret    0xc2e8
   14000ada2:	mov    esi,0xc2c2c2e9
   14000ada7:	mov    esi,0xf0e9e8c2
   14000adac:	(bad)  
   14000adad:	and    DWORD PTR [rbx-0x47de3f54],edi
   14000adb3:	mov    ebx,0x2bac
	...
   14000adc4:	add    BYTE PTR [rax],al
   14000adc6:	add    BYTE PTR [rbp-0x6060c42],dl
   14000adcc:	stc    
   14000adcd:	lock call 0x12cf19ac3
   14000add3:	in     al,dx
   14000add4:	jmp    0x128e99abe
   14000add9:	call   0x128e996c6
   14000adde:	shr    al,0xbe
   14000ade1:	call   0xfebf6ca4
   14000ade6:	mov    esi,0xbfbebec2
   14000adeb:	jmp    0xecb1cf7d
   14000adf0:	lods   al,BYTE PTR ds:[rsi]
   14000adf1:	and    esp,ecx
   14000adf3:	sar    BYTE PTR [rax+rax*1],0x0
	...
   14000ae07:	add    BYTE PTR [rsi],dh
   14000ae09:	ss ss jl 0x14000ad9b
   14000ae0d:	mov    ?,WORD PTR [rdx+rdi*2-0x7b]
   14000ae11:	mov    ss,WORD PTR [rdx-0x6969696c]
   14000ae17:	test   eax,0xb6acaaa9
   14000ae1c:	mov    dh,0xac
   14000ae1e:	mov    edx,0xe8e5c0ba
   14000ae23:	out    0xe9,al
   14000ae25:	in     al,dx
   14000ae26:	in     al,dx
   14000ae27:	jmp    0x14000ae19
   14000ae29:	in     al,dx
   14000ae2a:	in     al,dx
   14000ae2b:	rcr    BYTE PTR [rax-0x66675780],0x0
	...
   14000ae5a:	stos   BYTE PTR es:[rdi],al
   14000ae5b:	test   al,0xa1
   14000ae5d:	movabs eax,ds:0x8b8c8c8c8ba896a9
   14000ae66:	mov    WORD PTR [rbx-0x6b747475],cs
	...
   14000b200:	(bad)  
   14000b201:	(bad)  
   14000b202:	(bad)  
   14000b203:	(bad)  
   14000b204:	(bad)  
   14000b205:	(bad)  
   14000b206:	(bad)  
   14000b207:	(bad)  
   14000b208:	(bad)  
   14000b209:	(bad)  
   14000b20a:	(bad)  
   14000b20b:	(bad)  
   14000b20c:	(bad)  
   14000b20d:	(bad)  
   14000b20e:	(bad)  
   14000b20f:	(bad)  
   14000b210:	(bad)  
   14000b211:	(bad)  
   14000b212:	(bad)  
   14000b213:	(bad)  
   14000b214:	(bad)  
   14000b215:	(bad)  
   14000b216:	(bad)  
   14000b217:	(bad)  
   14000b218:	(bad)  
   14000b219:	(bad)  
   14000b21a:	(bad)  
   14000b21b:	(bad)  
   14000b21c:	(bad)  
   14000b21d:	(bad)  
   14000b21e:	(bad)  
   14000b21f:	(bad)  
   14000b220:	(bad)  
   14000b221:	(bad)  
   14000b222:	(bad)  
   14000b223:	(bad)  
   14000b224:	clc    
   14000b225:	ud0    edi,edi
   14000b228:	(bad)  
   14000b229:	(bad)  
   14000b22a:	(bad)  
   14000b22b:	cld    
   14000b22c:	add    BYTE PTR [rdi],al
   14000b22e:	(bad)  
   14000b22f:	(bad)  
   14000b230:	(bad)  
   14000b231:	(bad)  
   14000b232:	inc    BYTE PTR [rax]
   14000b234:	add    BYTE PTR [rax],al
   14000b236:	jg     0x14000b237
   14000b238:	(bad)  
   14000b239:	inc    DWORD PTR [rax]
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    BYTE PTR [rdi],cl
   14000b23f:	(bad)  
   14000b240:	inc    DWORD PTR [rax+0x0]
   14000b246:	(bad)  
   14000b247:	(bad)  
   14000b248:	inc    BYTE PTR [rax]
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	add    BYTE PTR [rax],al
   14000b24e:	add    edi,edi
   14000b250:	inc    BYTE PTR [rax]
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	add    BYTE PTR [rax],al
   14000b256:	add    edi,edi
   14000b258:	inc    BYTE PTR [rax]
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    BYTE PTR [rax],al
   14000b25e:	add    edi,edi
   14000b260:	inc    BYTE PTR [rax]
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	add    BYTE PTR [rax],al
   14000b266:	add    edi,edi
   14000b268:	inc    BYTE PTR [rax]
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	add    BYTE PTR [rax],al
   14000b26e:	add    edi,edi
   14000b270:	inc    BYTE PTR [rax]
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	add    BYTE PTR [rax],al
   14000b276:	add    edi,edi
   14000b278:	inc    BYTE PTR [rax]
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	add    BYTE PTR [rax],al
   14000b27e:	add    edi,edi
   14000b280:	inc    BYTE PTR [rax]
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	add    BYTE PTR [rax],al
   14000b286:	add    edi,edi
   14000b288:	inc    BYTE PTR [rax]
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	add    BYTE PTR [rax],al
   14000b28e:	add    edi,edi
   14000b290:	inc    BYTE PTR [rax]
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    BYTE PTR [rax],al
   14000b296:	add    edi,edi
   14000b298:	inc    BYTE PTR [rax]
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	add    BYTE PTR [rax],al
   14000b29e:	add    edi,edi
   14000b2a0:	inc    BYTE PTR [rax]
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	add    BYTE PTR [rax],al
   14000b2a6:	add    edi,edi
   14000b2a8:	inc    BYTE PTR [rax]
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	add    BYTE PTR [rax],al
   14000b2ae:	add    edi,edi
   14000b2b0:	inc    BYTE PTR [rax]
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    edi,edi
   14000b2b8:	inc    BYTE PTR [rax]
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	add    BYTE PTR [rax],al
   14000b2be:	add    edi,edi
   14000b2c0:	inc    BYTE PTR [rax]
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	add    BYTE PTR [rax],al
   14000b2c6:	add    edi,edi
   14000b2c8:	inc    BYTE PTR [rax]
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	add    BYTE PTR [rax],al
   14000b2ce:	add    edi,edi
   14000b2d0:	inc    BYTE PTR [rax]
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	add    BYTE PTR [rax],al
   14000b2d6:	add    edi,edi
   14000b2d8:	inc    BYTE PTR [rax]
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	add    BYTE PTR [rax],al
   14000b2de:	add    edi,edi
   14000b2e0:	inc    BYTE PTR [rax]
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	add    BYTE PTR [rax],al
   14000b2e6:	add    edi,edi
   14000b2e8:	inc    BYTE PTR [rax]
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	add    BYTE PTR [rax],al
   14000b2ee:	add    edi,edi
   14000b2f0:	inc    BYTE PTR [rax]
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    edi,edi
   14000b2f8:	inc    BYTE PTR [rax]
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	add    BYTE PTR [rax],al
   14000b2fe:	add    edi,edi
   14000b300:	inc    BYTE PTR [rax]
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	add    BYTE PTR [rax],al
   14000b306:	add    edi,edi
   14000b308:	inc    BYTE PTR [rax]
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    edi,edi
   14000b310:	inc    BYTE PTR [rax]
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	add    BYTE PTR [rax],al
   14000b316:	add    edi,edi
   14000b318:	inc    BYTE PTR [rax]
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    BYTE PTR [rax],al
   14000b31e:	add    edi,edi
   14000b320:	inc    BYTE PTR [rax]
   14000b322:	add    BYTE PTR [rax],al
   14000b324:	add    BYTE PTR [rax],al
   14000b326:	add    edi,edi
   14000b328:	inc    BYTE PTR [rax]
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    edi,edi
   14000b330:	inc    BYTE PTR [rax]
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	add    BYTE PTR [rax],al
   14000b336:	add    edi,edi
   14000b338:	inc    BYTE PTR [rax]
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	add    BYTE PTR [rax],al
   14000b33e:	add    edi,edi
   14000b340:	inc    BYTE PTR [rax]
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	add    BYTE PTR [rax],al
   14000b346:	add    edi,edi
   14000b348:	inc    BYTE PTR [rax]
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	add    BYTE PTR [rax],al
   14000b34e:	add    edi,edi
   14000b350:	inc    BYTE PTR [rax]
   14000b352:	add    BYTE PTR [rax],al
   14000b354:	add    BYTE PTR [rax],al
   14000b356:	add    edi,edi
   14000b358:	inc    BYTE PTR [rax]
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	add    BYTE PTR [rax],al
   14000b35e:	add    edi,edi
   14000b360:	inc    BYTE PTR [rax]
   14000b362:	add    BYTE PTR [rax],al
   14000b364:	add    BYTE PTR [rax],al
   14000b366:	add    edi,edi
   14000b368:	inc    BYTE PTR [rax]
   14000b36a:	add    BYTE PTR [rax],al
   14000b36c:	add    BYTE PTR [rax],al
   14000b36e:	add    edi,edi
   14000b370:	inc    BYTE PTR [rax]
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	add    BYTE PTR [rax],al
   14000b376:	add    edi,edi
   14000b378:	inc    BYTE PTR [rax]
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	add    BYTE PTR [rax],al
   14000b37e:	(bad)  
   14000b37f:	(bad)  
   14000b380:	inc    DWORD PTR [rax]
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	add    BYTE PTR [rax],al
   14000b386:	jg     0x14000b387
   14000b388:	(bad)  
   14000b389:	(bad)  
   14000b38a:	inc    eax
   14000b38c:	add    BYTE PTR [rdi],cl
   14000b38e:	(bad)  
   14000b38f:	(bad)  
   14000b390:	(bad)  
   14000b391:	(bad)  
   14000b392:	(bad)  
   14000b393:	(bad)  
   14000b394:	(bad)  
   14000b395:	(bad)  
   14000b396:	(bad)  
   14000b397:	(bad)  
   14000b398:	(bad)  
   14000b399:	(bad)  
   14000b39a:	(bad)  
   14000b39b:	(bad)  
   14000b39c:	(bad)  
   14000b39d:	(bad)  
   14000b39e:	(bad)  
   14000b39f:	(bad)  
   14000b3a0:	(bad)  
   14000b3a1:	(bad)  
   14000b3a2:	(bad)  
   14000b3a3:	(bad)  
   14000b3a4:	(bad)  
   14000b3a5:	(bad)  
   14000b3a6:	(bad)  
   14000b3a7:	(bad)  
   14000b3a8:	(bad)  
   14000b3a9:	(bad)  
   14000b3aa:	(bad)  
   14000b3ab:	(bad)  
   14000b3ac:	(bad)  
   14000b3ad:	(bad)  
   14000b3ae:	(bad)  
   14000b3af:	(bad)  
   14000b3b0:	(bad)  
   14000b3b1:	(bad)  
   14000b3b2:	(bad)  
   14000b3b3:	(bad)  
   14000b3b4:	(bad)  
   14000b3b5:	(bad)  
   14000b3b6:	(bad)  
   14000b3b7:	(bad)  
   14000b3b8:	(bad)  
   14000b3b9:	(bad)  
   14000b3ba:	(bad)  
   14000b3bb:	(bad)  
   14000b3bc:	(bad)  
   14000b3bd:	(bad)  
   14000b3be:	(bad)  
   14000b3bf:	(bad)  
   14000b3c0:	(bad)  
   14000b3c1:	(bad)  
   14000b3c2:	(bad)  
   14000b3c3:	(bad)  
   14000b3c4:	(bad)  
   14000b3c5:	(bad)  
   14000b3c6:	(bad)  
   14000b3c7:	(bad)  
   14000b3c8:	(bad)  
   14000b3c9:	(bad)  
   14000b3ca:	(bad)  
   14000b3cb:	(bad)  
   14000b3cc:	(bad)  
   14000b3cd:	(bad)  
   14000b3ce:	(bad)  
   14000b3cf:	(bad)  
   14000b3d0:	(bad)  
   14000b3d1:	(bad)  
   14000b3d2:	(bad)  
   14000b3d3:	(bad)  
   14000b3d4:	(bad)  
   14000b3d5:	(bad)  
   14000b3d6:	(bad)  
   14000b3d7:	(bad)  
   14000b3d8:	(bad)  
   14000b3d9:	(bad)  
   14000b3da:	(bad)  
   14000b3db:	(bad)  
   14000b3dc:	(bad)  
   14000b3dd:	(bad)  
   14000b3de:	(bad)  
   14000b3df:	(bad)  
   14000b3e0:	(bad)  
   14000b3e1:	(bad)  
   14000b3e2:	(bad)  
   14000b3e3:	(bad)  
   14000b3e4:	(bad)  
   14000b3e5:	(bad)  
   14000b3e6:	(bad)  
   14000b3e7:	(bad)  
   14000b3e8:	(bad)  
   14000b3e9:	(bad)  
   14000b3ea:	(bad)  
   14000b3eb:	(bad)  
   14000b3ec:	(bad)  
   14000b3ed:	(bad)  
   14000b3ee:	(bad)  
   14000b3ef:	(bad)  
   14000b3f0:	(bad)  
   14000b3f1:	(bad)  
   14000b3f2:	(bad)  
   14000b3f3:	(bad)  
   14000b3f4:	(bad)  
   14000b3f5:	(bad)  
   14000b3f6:	(bad)  
   14000b3f7:	(bad)  
   14000b3f8:	(bad)  
   14000b3f9:	(bad)  
   14000b3fa:	(bad)  
   14000b3fb:	(bad)  
   14000b3fc:	(bad)  
   14000b3fd:	(bad)  
   14000b3fe:	(bad)  
   14000b3ff:	jmp    FWORD PTR [rax]
   14000b401:	add    BYTE PTR [rax],al
   14000b403:	add    BYTE PTR [rax],dh
   14000b405:	add    BYTE PTR [rax],al
   14000b407:	add    BYTE PTR [rax+0x0],ah
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	add    DWORD PTR [rax],eax
   14000b40e:	or     BYTE PTR [rax],al
   14000b410:	add    BYTE PTR [rax],al
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	add    BYTE PTR [rcx],cl
	...
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	add    BYTE PTR [rcx],al
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	add    BYTE PTR [rcx],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	add    BYTE PTR [rax],al
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	scas   al,BYTE PTR es:[rdi]
   14000b42d:	jg     0x14000b446
   14000b42f:	add    BYTE PTR [rbx-0x49ffe17b],dh
   14000b435:	mov    BYTE PTR [rcx],ah
   14000b437:	add    BYTE PTR [rbp-0x47ffd470],bh
   14000b43d:	xchg   ecx,eax
   14000b43e:	(bad)  
   14000b43f:	add    dh,al
   14000b441:	cwde   
   14000b442:	xor    al,0x0
   14000b444:	ret    0x3b98
   14000b447:	add    bh,cl
   14000b449:	movabs eax,ds:0x9cc100449cc2003c
   14000b452:	rex.W add dl,al
   14000b455:	popf   
   14000b456:	rex.WRXB add r14b,r10b
   14000b459:	test   eax,0xabcb0047
   14000b45e:	pop    rdx
   14000b45f:	add    cl,dl
   14000b461:	lods   al,BYTE PTR ds:[rsi]
   14000b462:	push   rsp
   14000b463:	add    al,dl
   14000b465:	scas   al,BYTE PTR es:[rdi]
   14000b466:	pop    rax
   14000b467:	add    ah,dl
   14000b469:	mov    cl,0x5c
   14000b46b:	add    ah,ah
   14000b46d:	mov    ecx,0xaecf0057
   14000b472:	(bad)  
   14000b473:	add    dh,cl
   14000b475:	mov    al,0x65
   14000b477:	add    dh,dl
   14000b479:	mov    bl,0x6b
   14000b47b:	add    al,dl
   14000b47d:	scas   eax,DWORD PTR es:[rdi]
   14000b47e:	jo     0x14000b480
   14000b480:	shl    BYTE PTR [rbp-0x4928ff8e],cl
   14000b486:	jbe    0x14000b488
   14000b488:	(bad)  
   14000b489:	mov    eax,0xbbda0074
   14000b48e:	jae    0x14000b490
   14000b490:	fnstcw WORD PTR [rax-0x4328ff89]
   14000b496:	jge    0x14000b498
   14000b498:	fstp   TBYTE PTR [rsi-0x4424ff88]
   14000b49e:	jge    0x14000b4a0
   14000b4a0:	or     al,0x63
   14000b4a2:	repnz add BYTE PTR [rdx],dl
   14000b4a5:	ins    BYTE PTR es:[rdi],dx
   14000b4a6:	cmc    
   14000b4a7:	add    BYTE PTR [rcx],bl
   14000b4a9:	push   0x710a00f1
   14000b4ae:	stc    
   14000b4af:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e01ab2d
   14000b4b5:	jl     0x14000b4b5
   14000b4b7:	add    BYTE PTR [rbx],ah
   14000b4b9:	push   0xffffffffffffffef
   14000b4bb:	add    BYTE PTR [rip+0x2500eb7f],dh        # 0x16501a040
   14000b4c1:	ins    DWORD PTR es:[rdi],dx
   14000b4c2:	icebp  
   14000b4c3:	add    BYTE PTR [rip+0x2a00f271],ah        # 0x16a01a73a
   14000b4c9:	je     0x14000b4bc
   14000b4cb:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b01a84a
   14000b4d1:	jnp    0x14000b4c6
   14000b4d3:	add    BYTE PTR [rdi],dh
   14000b4d5:	jnp    0x14000b4cd
   14000b4d7:	add    BYTE PTR [rbx],dl
   14000b4d9:	(bad)  
   14000b4da:	test   DWORD PTR [rax],0xfd871c
   14000b4e0:	sbb    eax,0x1e00ff93
   14000b4e5:	xchg   edi,eax
   14000b4e6:	inc    DWORD PTR [rax]
   14000b4e8:	cmp    eax,0x2000e490
   14000b4ed:	xor    edi,0x0
   14000b4f0:	(bad)  
   14000b4f1:	xor    ch,0x0
   14000b4f4:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000b4fa:	test   BYTE PTR [rax],0x2a
   14000b4fd:	mov    dh,dh
   14000b4ff:	add    BYTE PTR [rbx],ch
   14000b501:	cmp    edi,0x0
   14000b504:	and    BYTE PTR [rbx-0x72d5ff01],cl
   14000b50a:	std    
   14000b50b:	add    BYTE PTR [rbx],bh
   14000b50d:	mov    dh,dh
   14000b50f:	add    BYTE PTR [rax],ah
   14000b511:	nop
   14000b512:	test   DWORD PTR [rax],0xf7902c
   14000b518:	and    edx,DWORD PTR [rbp-0x6bd3ff02]
   14000b51e:	clc    
   14000b51f:	add    BYTE PTR [rdi],ch
   14000b521:	cwde   
   14000b522:	cld    
   14000b523:	add    BYTE PTR [rip+0x5b00f694],dh        # 0x19b01abbd
   14000b529:	popf   
   14000b52a:	fild   DWORD PTR [rax]
   14000b52c:	ins    DWORD PTR es:[rdi],dx
   14000b52d:	movabs ds:0x8c5400ec844500d3,al
   14000b536:	loope  0x14000b538
   14000b538:	push   rdi
   14000b539:	xchg   edx,eax
   14000b53a:	loope  0x14000b53c
   14000b53c:	rex.WXB test r13,rsi
   14000b53f:	add    BYTE PTR [rax-0x71],dl
   14000b542:	cmc    
   14000b543:	add    BYTE PTR [rax-0x67],al
   14000b546:	test   DWORD PTR [rax],0xf59a54
   14000b54c:	gs (bad) 
   14000b54e:	in     eax,dx
   14000b54f:	add    BYTE PTR [rax-0x5a],dl
   14000b552:	cli    
   14000b553:	add    BYTE PTR [rdi-0x5e],dh
   14000b556:	out    0x0,al
   14000b558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   14000b55a:	test   DWORD PTR [rax],0xf6a875
   14000b560:	jp     0x14000b514
   14000b562:	test   DWORD PTR [rax],0xb8a68c
   14000b568:	scas   eax,DWORD PTR es:[rdi]
   14000b569:	mov    bh,0xac
   14000b56b:	add    bl,al
   14000b56d:	scas   al,BYTE PTR es:[rdi]
   14000b56e:	xchg   DWORD PTR [rax],eax
   14000b570:	sar    BYTE PTR [rax-0x432aff7f],1
   14000b576:	mov    al,BYTE PTR [rax]
   14000b578:	retf   0x95b8
   14000b57b:	add    dl,dl
   14000b57d:	mov    ebp,0xbdc50097
   14000b582:	stos   DWORD PTR es:[rdi],eax
   14000b583:	add    dl,bl
   14000b585:	rol    DWORD PTR [rdi-0x773c2300],0x0
   14000b58c:	ffree  st(5)
   14000b58e:	mov    es,WORD PTR [rax]
   14000b590:	(bad)  
   14000b591:	rcr    DWORD PTR [rax+rax*1+0x9cc5db],0xe0
   14000b599:	rol    BYTE PTR [rcx-0x7a2f1200],0x0
   14000b5a0:	loopne 0x14000b56a
   14000b5a2:	xchg   ecx,eax
   14000b5a3:	add    cl,ah
   14000b5a5:	retf   0x95
   14000b5a8:	loope  0x14000b575
   14000b5aa:	cdq    
   14000b5ab:	add    bl,ah
   14000b5ad:	int    0x9a
   14000b5af:	add    ch,ah
   14000b5b1:	iret   
   14000b5b2:	sahf   
   14000b5b3:	add    ah,bl
   14000b5b5:	leave  
   14000b5b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b5b7:	add    ch,cl
   14000b5b9:	(bad)  
   14000b5ba:	mov    al,0x0
   14000b5bc:	retf   0xbec7
   14000b5bf:	add    ah,bl
   14000b5c1:	int    0xb1
   14000b5c3:	add    ah,ah
   14000b5c5:	retf   
   14000b5c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b5c7:	add    dl,ah
   14000b5c9:	int    0xaa
   14000b5cb:	add    ch,ah
   14000b5cd:	shl    DWORD PTR [rdx-0x5b2c1700],1
   14000b5d3:	add    bh,ah
   14000b5d5:	shr    DWORD PTR [rbp-0x542a1700],1
   14000b5db:	add    ah,ch
   14000b5dd:	xlat   BYTE PTR ds:[rbx]
   14000b5de:	test   eax,0xaed8ee00
   14000b5e3:	add    al,ah
   14000b5e5:	shl    BYTE PTR [rax-0x4e271600],1
   14000b5eb:	add    ch,ch
   14000b5ed:	fidiv  DWORD PTR [rcx-0x4a251400]
   14000b5f3:	add    bh,ch
   14000b5f5:	fdiv   QWORD PTR [rbp-0x47221600]
   14000b5fb:	add    ch,ch
   14000b5fd:	fdivr  QWORD PTR [rcx-0x42211100]
   14000b603:	add    cl,dh
   14000b605:	fnsave [rax+rax*1+0xb8def0]
   14000b60c:	repnz loopne 0x14000b5cc
   14000b60f:	add    ah,bh
   14000b611:	jrcxz  0x14000b5cf
   14000b613:	add    BYTE PTR [rsi-0x63ff2f5a],al
   14000b619:	mov    ah,0xdb
   14000b61b:	add    BYTE PTR [rsi-0x72ff3948],ah
   14000b621:	test   eax,0xaa9000e4
   14000b626:	out    0x0,al
   14000b628:	mov    ?,WORD PTR [rbx-0x477aff1b]
   14000b62e:	clc    
   14000b62f:	add    BYTE PTR [rdx-0x4aff0841],bl
   14000b635:	ror    ah,0x0
   14000b638:	xchg   edx,eax
   14000b639:	(bad)  
   14000b63a:	cli    
   14000b63b:	add    BYTE PTR [rbp-0x5bff0836],ah
   14000b641:	sar    ch,cl
   14000b643:	add    BYTE PTR [rbx+rdx*8-0x363cff06],dh
   14000b64a:	retf   0xda00
   14000b64d:	(bad)  
   14000b64e:	retf   0xee00
   14000b651:	loop   0x14000b61b
   14000b653:	add    cl,dh
   14000b655:	loop   0x14000b619
   14000b657:	add    bl,dh
   14000b659:	in     al,0xc1
   14000b65b:	add    ch,dh
   14000b65d:	in     al,0xc1
   14000b65f:	add    al,dh
   14000b661:	jrcxz  0x14000b629
   14000b663:	add    dl,dh
   14000b665:	in     eax,0xc5
   14000b667:	add    ch,dh
   14000b669:	in     al,0xc6
   14000b66b:	add    al,bh
   14000b66d:	out    0xc2,al
   14000b66f:	add    dl,dh
   14000b671:	out    0xca,al
   14000b673:	add    bh,dh
   14000b675:	out    0xc8,eax
   14000b677:	add    ah,dh
   14000b679:	call   0x12af9b74c
   14000b67e:	leave  
   14000b67f:	add    cl,bh
   14000b681:	jmp    0x126f1b752
   14000b686:	rol    BYTE PTR [rax],cl
   14000b688:	repz (bad) 
   14000b68a:	(bad)  
   14000b68b:	add    ch,dh
   14000b68d:	in     al,dx
   14000b68e:	fadd   DWORD PTR [rax]
   14000b690:	ret    
   14000b691:	(bad)  
   14000b693:	add    cl,bl
   14000b695:	call   0x131f6b796
   14000b69a:	out    0x0,eax
   14000b69c:	clc    
   14000b69d:	lock loopne 0x14000b6a0
   14000b6a0:	out    0xf2,al
   14000b6a2:	inc    BYTE PTR [rax]
   14000b6a4:	icebp  
   14000b6a5:	idiv   ch
   14000b6a7:	add    ah,dh
   14000b6a9:	clc    
   14000b6aa:	std    
   14000b6ab:	add    bl,bh
   14000b6ad:	cld    
   14000b6ae:	inc    BYTE PTR [rax]
   14000b6b0:	(bad)  
   14000b6b1:	(bad)  
   14000b6b2:	inc    BYTE PTR [rax]
	...
   14000b824:	(bad)  
   14000b825:	(bad)  
   14000b826:	inc    DWORD PTR [rax]
	...
   14000b8a4:	push   rbx
   14000b8a5:	push   rdx
   14000b8a6:	sbb    BYTE PTR [rsi],dl
   14000b8a8:	adc    eax,0x0
	...
   14000b8c9:	add    BYTE PTR [rax],al
   14000b8cb:	add    BYTE PTR [rdx+0x53],bl
   14000b8ce:	push   rdx
   14000b8cf:	(bad)  
   14000b8d0:	(bad)  
   14000b8d1:	(bad)  
   14000b8d2:	sbb    bl,BYTE PTR [rbx]
   14000b8d4:	pop    rax
   14000b8d5:	pop    rdi
   14000b8d6:	push   0x6a
   14000b8d8:	js     0x14000b8e0
   14000b8da:	(bad)  
	...
   14000b8f3:	add    BYTE PTR [rax],al
   14000b8f5:	pop    rdx
   14000b8f6:	push   rbx
   14000b8f7:	push   rdx
   14000b8f8:	(bad)  
   14000b8f9:	adc    eax,0x585c1816
   14000b8fe:	pop    rdi
   14000b8ff:	(bad)  
   14000b900:	push   0x62
   14000b902:	(bad)  
   14000b903:	imul   ebp,DWORD PTR [rcx+0x69],0x6756262
   14000b90a:	(bad)  
   14000b90b:	add    cl,BYTE PTR [rdx]
	...
   14000b91d:	add    BYTE PTR [rbp+0x53],dl
   14000b920:	push   rdx
   14000b921:	adc    eax,0x5c181613
   14000b926:	pop    rax
   14000b927:	pop    rdi
   14000b928:	(bad)  
   14000b929:	ins    BYTE PTR es:[rdi],dx
   14000b92a:	ins    BYTE PTR es:[rdi],dx
   14000b92b:	ins    BYTE PTR es:[rdi],dx
   14000b92c:	ins    BYTE PTR es:[rdi],dx
   14000b92d:	imul   ebp,DWORD PTR [rcx+0x69],0x5f626262
   14000b934:	pop    rdi
   14000b935:	pop    rdi
   14000b936:	(bad)  
   14000b937:	pop    rsi
   14000b938:	js     0x14000b940
   14000b93a:	pop    rsp
   14000b93b:	ja     0x14000b93e
   14000b93d:	add    eax,0x0
	...
   14000b94a:	add    BYTE PTR [rbx+0x14],dl
   14000b94d:	sbb    BYTE PTR [rbx],bl
   14000b94f:	pop    rax
   14000b950:	pop    rdi
   14000b951:	(bad)  
   14000b952:	push   0x6a
   14000b954:	ins    BYTE PTR es:[rdi],dx
   14000b955:	ins    BYTE PTR es:[rdi],dx
   14000b956:	ins    BYTE PTR es:[rdi],dx
   14000b957:	ins    BYTE PTR es:[rdi],dx
   14000b958:	push   0x62
   14000b95a:	(bad)  
   14000b95c:	(bad)  
   14000b95e:	(bad)  
   14000b960:	(bad)  
   14000b961:	pop    rdi
   14000b962:	(bad)
   14000b967:	pop    rsi
   14000b968:	js     0x14000b970
   14000b96a:	pop    rsp
   14000b96b:	js     0x14000b96e
   14000b96d:	add    al,0x3
   14000b96f:	or     al,BYTE PTR [rax]
	...
   14000b979:	add    BYTE PTR [rdi+0x58],bl
   14000b97c:	jb     0x14000b9f0
   14000b97e:	jne    0x14000b9f5
   14000b980:	jb     0x14000b9ee
   14000b982:	ins    BYTE PTR es:[rdi],dx
   14000b983:	push   0x62
   14000b985:	(bad)  
   14000b986:	ins    BYTE PTR es:[rdi],dx
   14000b987:	push   0x6e
   14000b989:	outs   dx,BYTE PTR ds:[rsi]
   14000b98a:	outs   dx,BYTE PTR ds:[rsi]
   14000b98b:	outs   dx,BYTE PTR ds:[rsi]
   14000b98c:	ins    BYTE PTR es:[rdi],dx
   14000b98d:	push   0x62
   14000b98f:	imul   esp,DWORD PTR [rdx+0x62],0x5f5f5e5e
   14000b996:	pop    rsi
   14000b997:	pop    rdi
   14000b998:	ja     0x14000b9a0
   14000b99a:	pop    rsp
   14000b99b:	js     0x14000b99e
   14000b99d:	adc    eax,0xa75
	...
   14000b9aa:	adc    esi,DWORD PTR [rdx-0x68]
   14000b9ad:	xchg   edx,eax
   14000b9ae:	cwde   
   14000b9af:	ins    BYTE PTR es:[rdi],dx
   14000b9b0:	pop    rsi
   14000b9b1:	outs   dx,BYTE PTR ds:[rsi]
   14000b9b2:	jb     0x14000ba26
   14000b9b4:	jns    0x14000ba30
   14000b9b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b9b7:	jge    0x14000ba37
   14000b9b9:	rex.WRB jg 0x14000ba38
   14000b9bc:	mov    DWORD PTR [rdx+0x6c],esi
   14000b9bf:	(bad)  
   14000b9c1:	imul   ebp,DWORD PTR [rcx+0x69],0x62626262
   14000b9c8:	js     0x14000b9d2
   14000b9ca:	pop    rsp
   14000b9cb:	ja     0x14000b9ce
   14000b9cd:	(bad)  
   14000b9ce:	nop
   14000b9cf:	add    al,0x0
	...
   14000b9d9:	add    BYTE PTR [rbx],dl
   14000b9db:	jne    0x14000b971
   14000b9dd:	xchg   edx,eax
   14000b9de:	xchg   esp,eax
   14000b9df:	pop    rdi
   14000b9e0:	(bad)  
   14000b9e2:	jns    0x14000ba5e
   14000b9e4:	gs rex.WB
   14000b9e6:	sub    BYTE PTR [r14],r12b
   14000b9e9:	and    al,0x28
   14000b9eb:	sub    BYTE PTR [rbp+0x49],al
   14000b9ee:	jl     0x14000ba5c
   14000b9f0:	push   0x5f
   14000b9f2:	ins    BYTE PTR es:[rdi],dx
   14000b9f3:	push   0x69
   14000b9f5:	imul   ebp,DWORD PTR [rcx+0x62],0x725c0879
   14000b9fc:	add    al,0x1a
   14000b9fe:	nop
   14000b9ff:	(bad)  
	...
   14000ba08:	add    BYTE PTR [rax],al
   14000ba0a:	adc    esi,DWORD PTR [rdx-0x6c]
   14000ba0d:	xchg   edx,eax
   14000ba0e:	xchg   esp,eax
   14000ba0f:	pop    rdi
   14000ba10:	pop    rdi
   14000ba11:	nop
   14000ba12:	jb     0x14000ba8f
   14000ba14:	and    eax,0x26262626
   14000ba19:	es es and al,0x24
   14000ba1d:	and    al,0x2b
   14000ba1f:	and    QWORD PTR [r10+0x5f],0x6a
   14000ba24:	push   0x6a
   14000ba26:	imul   ebp,DWORD PTR [rcx+0x79],0x4775c08
   14000ba2d:	(bad)  
   14000ba2e:	nop
   14000ba2f:	(bad)  
	...
   14000ba38:	add    BYTE PTR [rax],al
   14000ba3a:	adc    esi,DWORD PTR [rbp-0x6c]
   14000ba3d:	xchg   edx,eax
   14000ba3e:	xchg   esp,eax
   14000ba3f:	pop    rax
   14000ba40:	push   0x6f
   14000ba42:	sub    r12d,DWORD PTR [rdi]
   14000ba45:	(bad)  
   14000ba46:	(bad)  
   14000ba47:	es es es es es es es and al,0x24
   14000ba50:	rex.RB jl 0x14000babc
   14000ba53:	sbb    ebp,DWORD PTR [rdx+rbp*2+0x6a]
   14000ba57:	imul   edx,DWORD PTR [rax+0x4775c08],0x8901b
	...
   14000ba69:	add    BYTE PTR [rbx],dl
   14000ba6b:	jb     0x14000ba01
   14000ba6d:	xchg   edx,eax
   14000ba6e:	xchg   edx,eax
   14000ba6f:	outs   dx,BYTE PTR ds:[rsi]
   14000ba70:	rex.XB sub BYTE PTR [r15d],spl
   14000ba74:	(bad)  
   14000ba75:	(bad)  
   14000ba76:	and    BYTE PTR [rsi],ah
   14000ba78:	(bad)  
   14000ba79:	es es es (bad) 
   14000ba7d:	es es es es rex.X jl 0x14000baf0
   14000ba84:	pop    rax
   14000ba85:	ins    BYTE PTR es:[rdi],dx
   14000ba86:	push   0x69
   14000ba88:	jns    0x14000ba92
   14000ba8a:	pop    rsp
   14000ba8b:	ja     0x14000ba93
   14000ba8d:	sbb    DWORD PTR [rax+0x8],edx
   14000ba93:	add    BYTE PTR [rax],al
   14000ba95:	add    BYTE PTR [rax],al
   14000ba97:	add    BYTE PTR [rax],al
   14000ba99:	add    BYTE PTR [rbx],dl
   14000ba9b:	jne    0x14000ba31
   14000ba9d:	xchg   edx,eax
   14000ba9e:	xchg   esp,eax
   14000ba9f:	jb     0x14000bae4
   14000baa1:	sub    DWORD PTR [rdi],esp
   14000baa3:	(bad)  
   14000baa4:	(bad)  
   14000baa5:	(bad)  
   14000baa6:	rex.WRB (bad) 
   14000baa8:	es es (bad) 
   14000baab:	(bad)  
   14000baac:	(bad)  
   14000baad:	es es es es rex.RB sbb DWORD PTR es:[r15+0x62],0x69
   14000bab7:	imul   edi,DWORD PTR [rcx+0x8],0x1906775c
   14000babe:	nop
   14000babf:	or     BYTE PTR [rax],al
	...
   14000bac9:	add    BYTE PTR [rbx],dl
   14000bacb:	jb     0x14000ba61
   14000bacd:	xchg   esp,eax
   14000bace:	xchg   ebp,eax
   14000bacf:	jge    0x14000bafa
   14000bad1:	sub    DWORD PTR [rax],esp
   14000bad3:	rex.WRB (bad) 
   14000bad5:	(bad)  
   14000bad6:	call   FWORD PTR [rbx+0x27272746]
   14000badc:	(bad)  
   14000badd:	(bad)  
   14000bade:	(bad)  
   14000badf:	(bad)  
   14000bae0:	es es es rex.RX
   14000bae4:	gs pop rax
   14000bae6:	push   0x69
   14000bae8:	nop
   14000bae9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000baed:	sbb    dl,BYTE PTR [rax+0x8]
   14000baf3:	add    BYTE PTR [rax],al
   14000baf5:	add    BYTE PTR [rax],al
   14000baf7:	add    BYTE PTR [rax],al
   14000baf9:	add    BYTE PTR [rbx],dl
   14000bafb:	jne    0x14000ba91
   14000bafd:	xchg   esp,eax
   14000bafe:	jne    0x14000bb25
   14000bb00:	sub    DWORD PTR [rcx],ebp
   14000bb02:	(bad)  
   14000bb03:	(bad)  
   14000bb04:	(bad)  
   14000bb05:	(bad)  
   14000bb06:	(bad)  
   14000bb07:	(bad)  
   14000bb08:	inc    DWORD PTR [rdx+0x2727272b]
   14000bb0e:	(bad)  
   14000bb0f:	(bad)  
   14000bb10:	(bad)  
   14000bb11:	(bad)  
   14000bb12:	(bad)  
   14000bb13:	sub    BYTE PTR [rax+0x796a585b],al
   14000bb19:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000bb1d:	sbb    DWORD PTR [rsi+0x8],ecx
   14000bb23:	add    BYTE PTR [rax],al
   14000bb25:	add    BYTE PTR [rax],al
   14000bb27:	add    BYTE PTR [rax],al
   14000bb29:	add    BYTE PTR [rbx],dl
   14000bb2b:	jne    0x14000bac5
   14000bb2d:	nop
   14000bb2e:	jnp    0x14000bb59
   14000bb30:	sub    DWORD PTR [rcx],ebp
   14000bb32:	(bad)  
   14000bb33:	test   edi,edi
   14000bb35:	(bad)  
   14000bb36:	(bad)  
   14000bb37:	(bad)  
   14000bb38:	(bad)  
   14000bb39:	call   FWORD PTR [rbx+0x2729284c]
   14000bb3f:	sub    BYTE PTR [rdi],ah
   14000bb41:	(bad)  
   14000bb42:	(bad)  
   14000bb43:	sub    BYTE PTR [rbx+0x50],al
   14000bb46:	pop    rax
   14000bb47:	push   0xffffffffffffff90
   14000bb49:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000bb4d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bb53:	add    BYTE PTR [rax],al
   14000bb55:	add    BYTE PTR [rax],al
   14000bb57:	add    BYTE PTR [rax],al
   14000bb59:	add    BYTE PTR [rbx],dl
   14000bb5b:	js     0x14000baf6
   14000bb5d:	js     0x14000bb82
   14000bb5f:	sub    dh,BYTE PTR [rdx]
   14000bb61:	sub    bl,BYTE PTR [rdi]
   14000bb63:	test   edi,edi
   14000bb65:	(bad)  
   14000bb66:	(bad)  
   14000bb67:	(bad)  
   14000bb68:	(bad)  
   14000bb69:	(bad)  
   14000bb6a:	(bad)  
   14000bb6b:	inc    DWORD PTR [rdx+0x27282945]
   14000bb71:	sub    BYTE PTR [rax],ch
   14000bb73:	sub    BYTE PTR [rip+0x7962537c],ah        # 0x1b9630ef5
   14000bb79:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000bb7d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bb83:	add    BYTE PTR [rax],al
   14000bb85:	add    BYTE PTR [rax],al
   14000bb87:	add    BYTE PTR [rax],al
   14000bb89:	add    BYTE PTR [rbx],dl
   14000bb8b:	jbe    0x14000bb26
   14000bb8d:	and    esi,DWORD PTR gs:[rdx]
   14000bb90:	xor    dh,BYTE PTR [rdx]
   14000bb92:	(bad)  
   14000bb93:	test   edi,edi
   14000bb95:	(bad)  
   14000bb96:	(bad)  
   14000bb97:	(bad)  
   14000bb98:	(bad)  
   14000bb99:	(bad)  
   14000bb9a:	(bad)  
   14000bb9b:	(bad)  
   14000bb9c:	call   FWORD PTR [rdi+0x272a2b4c]
   14000bba2:	(bad)  
   14000bba3:	sub    DWORD PTR [rax],ebp
   14000bba5:	rex.WXB push r13
   14000bba7:	pop    rax
   14000bba8:	nop
   14000bba9:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000bbad:	sbb    dl,BYTE PTR [rax+0x8]
   14000bbb3:	add    BYTE PTR [rax],al
   14000bbb5:	add    BYTE PTR [rax],al
   14000bbb7:	add    BYTE PTR [rax],al
   14000bbb9:	add    BYTE PTR [rbx],dl
   14000bbbb:	nop
   14000bbbc:	xchg   esp,eax
   14000bbbd:	jnp    0x14000bbe2
   14000bbbf:	xor    dh,BYTE PTR [rdx]
   14000bbc1:	xor    bl,BYTE PTR [rdi]
   14000bbc3:	test   edi,edi
   14000bbc5:	(bad)  
   14000bbc6:	(bad)  
   14000bbc7:	(bad)  
   14000bbc8:	(bad)  
   14000bbc9:	(bad)  
   14000bbca:	(bad)  
   14000bbcb:	(bad)  
   14000bbcc:	(bad)  
   14000bbcd:	(bad)  
   14000bbce:	inc    DWORD PTR [rdi+0x272a2b46]
   14000bbd4:	(bad)  
   14000bbd5:	rex.RX
   14000bbd6:	sbb    edi,DWORD PTR fs:[rcx+0x8]
   14000bbda:	pop    rsp
   14000bbdb:	ja     0x14000bbe3
   14000bbdd:	sbb    dl,BYTE PTR [rax+0x8]
   14000bbe3:	add    BYTE PTR [rax],al
   14000bbe5:	add    BYTE PTR [rax],al
   14000bbe7:	add    BYTE PTR [rax],al
   14000bbe9:	add    BYTE PTR [rbx],dl
   14000bbeb:	mov    ss,WORD PTR [rbp+0x32333246]
   14000bbf1:	xor    ah,BYTE PTR [rcx]
   14000bbf3:	test   edi,edi
   14000bbf5:	(bad)  
   14000bbf6:	(bad)  
   14000bbf7:	(bad)  
   14000bbf8:	(bad)  
   14000bbf9:	(bad)  
   14000bbfa:	(bad)  
   14000bbfb:	(bad)  
   14000bbfc:	(bad)  
   14000bbfd:	(bad)  
   14000bbfe:	(bad)  
   14000bbff:	jmp    QWORD PTR [rax+0x2928394c]
   14000bc05:	mov    BYTE PTR ss:[rax],bl
   14000bc08:	nop
   14000bc09:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000bc0d:	sbb    cl,BYTE PTR [rsi+0x8]
   14000bc13:	add    BYTE PTR [rax],al
   14000bc15:	add    BYTE PTR [rax],al
   14000bc17:	add    BYTE PTR [rax],al
   14000bc19:	add    BYTE PTR [rbx],dl
   14000bc1b:	nop
   14000bc1c:	nop
   14000bc1d:	xor    esi,DWORD PTR ss:[rbx]
   14000bc20:	xor    dh,BYTE PTR [rbx]
   14000bc22:	and    al,BYTE PTR [rbp-0x1]
   14000bc28:	(bad)  
   14000bc29:	(bad)  
   14000bc2a:	(bad)  
   14000bc2b:	(bad)  
   14000bc2c:	(bad)  
   14000bc2d:	(bad)  
   14000bc2e:	(bad)  
   14000bc2f:	(bad)  
   14000bc30:	(bad)  
   14000bc31:	dec    DWORD PTR [rax+0x2a]
   14000bc34:	sub    DWORD PTR [rsi],esi
   14000bc36:	sbb    DWORD PTR [rax],0xffffff90
   14000bc39:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000bc3d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bc43:	add    BYTE PTR [rax],al
   14000bc45:	add    BYTE PTR [rax],al
   14000bc47:	add    BYTE PTR [rax],al
   14000bc49:	add    BYTE PTR [rbx],dl
   14000bc4b:	xchg   edx,eax
   14000bc4c:	nop
   14000bc4d:	xor    esi,DWORD PTR ss:[rbx]
   14000bc50:	xor    esi,DWORD PTR [rbx]
   14000bc52:	and    al,BYTE PTR [rbp-0x1]
   14000bc58:	(bad)  
   14000bc59:	(bad)  
   14000bc5a:	(bad)  
   14000bc5b:	(bad)  
   14000bc5c:	(bad)  
   14000bc5d:	(bad)  
   14000bc5e:	(bad)  
   14000bc5f:	(bad)  
   14000bc60:	(bad)  
   14000bc61:	dec    DWORD PTR [rbp+0x32]
   14000bc64:	sub    DWORD PTR [rbx],esp
   14000bc66:	sbb    DWORD PTR [rax],0x79
   14000bc69:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000bc6d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bc73:	add    BYTE PTR [rax],al
   14000bc75:	add    BYTE PTR [rax],al
   14000bc77:	add    BYTE PTR [rax],al
   14000bc79:	add    BYTE PTR [rbx],dl
   14000bc7b:	xchg   edx,eax
   14000bc7c:	nop
   14000bc7d:	xor    esi,DWORD PTR ss:[rip+0xffffffff85223333]        # 0xc522efb7
   14000bc84:	(bad)  
   14000bc85:	(bad)  
   14000bc86:	(bad)  
   14000bc87:	(bad)  
   14000bc88:	(bad)  
   14000bc89:	(bad)  
   14000bc8a:	(bad)  
   14000bc8b:	(bad)  
   14000bc8c:	(bad)  
   14000bc8d:	(bad)  
   14000bc8e:	(bad)  
   14000bc8f:	(bad)  
   14000bc90:	inc    DWORD PTR [rdi+0x36293248]
   14000bc96:	mov    BYTE PTR [rsi],dl
   14000bc98:	nop
   14000bc99:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000bc9d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bca3:	add    BYTE PTR [rax],al
   14000bca5:	add    BYTE PTR [rax],al
   14000bca7:	add    BYTE PTR [rax],al
   14000bca9:	add    BYTE PTR [rbx],dl
   14000bcab:	xchg   edx,eax
   14000bcac:	xchg   edx,eax
   14000bcad:	cmp    DWORD PTR [rip+0x22353335],esi        # 0x16235efe8
   14000bcb3:	xchg   edi,edi
   14000bcb5:	(bad)  
   14000bcb6:	(bad)  
   14000bcb7:	(bad)  
   14000bcb8:	(bad)  
   14000bcb9:	(bad)  
   14000bcba:	(bad)  
   14000bcbb:	(bad)  
   14000bcbc:	(bad)  
   14000bcbd:	(bad)  
   14000bcbe:	call   FWORD PTR [rdi+0x32394881]
   14000bcc4:	sub    DWORD PTR [rdi+0x65],eax
   14000bcc7:	adc    edi,DWORD PTR [rcx+0x8]
   14000bcca:	pop    rsp
   14000bccb:	jb     0x14000bcd3
   14000bccd:	sbb    dl,BYTE PTR [rax+0x8]
   14000bcd3:	add    BYTE PTR [rax],al
   14000bcd5:	add    BYTE PTR [rax],al
   14000bcd7:	add    BYTE PTR [rax],al
   14000bcd9:	add    BYTE PTR [rbx],dl
   14000bcdb:	xchg   edx,eax
   14000bcdc:	xchg   edi,eax
   14000bcdd:	jnp    0x14000bd16
   14000bcdf:	xor    eax,0x872c3335
   14000bce4:	(bad)  
   14000bce5:	(bad)  
   14000bce6:	(bad)  
   14000bce7:	(bad)  
   14000bce8:	(bad)  
   14000bce9:	(bad)  
   14000bcea:	(bad)  
   14000bceb:	(bad)  
   14000bcec:	(bad)  
   14000bced:	inc    DWORD PTR [rsi+0x32323948]
   14000bcf3:	xor    ah,BYTE PTR [rdx]
   14000bcf5:	rex.WRB push r13
   14000bcf7:	sbb    BYTE PTR [rax+0x6775c08],dl
   14000bcfd:	sbb    cl,BYTE PTR [rsi+0x8]
   14000bd03:	add    BYTE PTR [rax],al
   14000bd05:	add    BYTE PTR [rax],al
   14000bd07:	add    BYTE PTR [rax],al
   14000bd09:	add    BYTE PTR [rbx],dl
   14000bd0b:	xchg   edx,eax
   14000bd0c:	cdq    
   14000bd0d:	push   rsi
   14000bd0e:	(bad)  
   14000bd0f:	xor    eax,0x872c3535
   14000bd14:	(bad)  
   14000bd15:	(bad)  
   14000bd16:	(bad)  
   14000bd17:	(bad)  
   14000bd18:	(bad)  
   14000bd19:	(bad)  
   14000bd1a:	(bad)  
   14000bd1b:	call   FWORD PTR [rsi+0x32353981]
   14000bd21:	xor    esi,DWORD PTR [rdx]
   14000bd23:	xor    esp,DWORD PTR [rdx]
   14000bd25:	adc    BYTE PTR [rdx+0x5f],0x79
   14000bd29:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000bd2d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bd33:	add    BYTE PTR [rax],al
   14000bd35:	add    BYTE PTR [rax],al
   14000bd37:	add    BYTE PTR [rax],al
   14000bd39:	add    BYTE PTR [rbx],dl
   14000bd3b:	xchg   edx,eax
   14000bd3c:	popf   
   14000bd3d:	outs   dx,DWORD PTR ds:[rsi]
   14000bd3e:	(bad)  
   14000bd3f:	xor    eax,0x872c353b
   14000bd44:	(bad)  
   14000bd45:	(bad)  
   14000bd46:	(bad)  
   14000bd47:	(bad)  
   14000bd48:	(bad)  
   14000bd49:	(bad)  
   14000bd4a:	call   FWORD PTR [rdx+0x32333947]
   14000bd50:	xor    dh,BYTE PTR [rip+0xffffffff83373233]        # 0xc337ef89
   14000bd56:	punpckldq mm2,DWORD PTR [rax+0x6775c08]
   14000bd5d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bd63:	add    BYTE PTR [rax],al
   14000bd65:	add    BYTE PTR [rax],al
   14000bd67:	add    BYTE PTR [rax],al
   14000bd69:	add    BYTE PTR [rbx],dl
   14000bd6b:	xchg   edx,eax
   14000bd6c:	popf   
   14000bd6d:	xchg   edx,eax
   14000bd6e:	cmp    rdi,QWORD PTR [r11]
   14000bd71:	cmp    ebp,DWORD PTR [rdi+rax*4]
   14000bd74:	(bad)  
   14000bd75:	(bad)  
   14000bd76:	(bad)  
   14000bd77:	(bad)  
   14000bd78:	jmp    QWORD PTR [rax+0x34393f4e]
   14000bd7e:	xor    esi,DWORD PTR [rip+0x32333335]        # 0x17233f0b9
   14000bd84:	rex.WR push rsp
   14000bd86:	(bad)  
   14000bd87:	push   0x7a
   14000bd89:	or     BYTE PTR [rax+0x77],bl
   14000bd8c:	(bad)  
   14000bd8d:	sbb    dl,BYTE PTR [rax+0x8]
   14000bd93:	add    BYTE PTR [rax],al
   14000bd95:	add    BYTE PTR [rax],al
   14000bd97:	add    BYTE PTR [rax],al
   14000bd99:	add    BYTE PTR [rbx],dl
   14000bd9b:	nop
   14000bd9c:	cdq    
   14000bd9d:	cwde   
   14000bd9e:	push   rsi
   14000bd9f:	cmp    edi,DWORD PTR cs:[rbx]
   14000bda2:	xor    al,BYTE PTR [rdi-0x1]
   14000bda8:	xchg   DWORD PTR [rdx+0x3b],ecx
   14000bdab:	xor    eax,0x35353535
   14000bdb0:	xor    esi,DWORD PTR [rip+0x16833735]        # 0x15683f4eb
   14000bdb6:	(bad)  
   14000bdb7:	push   0xffffffffffffff91
   14000bdb9:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000bdbd:	sbb    dl,BYTE PTR [rax+0x8]
   14000bdc3:	add    BYTE PTR [rax],al
   14000bdc5:	add    BYTE PTR [rax],al
   14000bdc7:	add    BYTE PTR [rax],al
   14000bdc9:	add    BYTE PTR [rdx],dl
   14000bdcb:	mov    bl,BYTE PTR [rcx+0x3c407899]
   14000bdd1:	cmp    ebp,DWORD PTR [rax*4-0x7b5f0001]
   14000bdd8:	(bad)  
   14000bdd9:	(bad)  
   14000bdda:	xor    eax,0x35353535
   14000bddf:	xor    eax,0x4c323535
   14000bde4:	pop    rbx
   14000bde5:	sbb    ebp,DWORD PTR [rsi+rbp*2-0x70]
   14000bde9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000bded:	sbb    dl,BYTE PTR [rax+0x8]
   14000bdf3:	add    BYTE PTR [rax],al
   14000bdf5:	add    BYTE PTR [rax],al
   14000bdf7:	add    BYTE PTR [rax],al
   14000bdf9:	add    BYTE PTR [rdx],dl
   14000bdfb:	mov    ds,WORD PTR [rcx+0x3c639999]
   14000be01:	cmp    eax,0x8687473a
   14000be06:	rex.WX (bad) 
   14000be08:	cmp    esi,DWORD PTR [rbx+rdi*1]
   14000be0b:	cmp    esi,DWORD PTR [rip+0x3535353b]        # 0x17535f34c
   14000be11:	xor    al,0x47
   14000be13:	sbb    BYTE PTR gs:[rdx+0x6d],ch
   14000be17:	ins    DWORD PTR es:[rdi],dx
   14000be18:	jp     0x14000be22
   14000be1a:	pop    rax
   14000be1b:	ja     0x14000be23
   14000be1d:	sbb    dl,BYTE PTR [rax+0x8]
   14000be23:	add    BYTE PTR [rax],al
   14000be25:	add    BYTE PTR [rax],al
   14000be27:	add    BYTE PTR [rax],al
   14000be29:	add    BYTE PTR [rdx],dl
   14000be2b:	mov    bl,BYTE PTR [rcx+0x516c9999]
   14000be31:	cs cmp eax,0x3a342d3a
   14000be37:	cmp    edi,DWORD PTR [rbx]
   14000be39:	cmp    edi,DWORD PTR [rbx]
   14000be3b:	cmp    edi,DWORD PTR [rbx]
   14000be3d:	cmp    edi,DWORD PTR [rbx]
   14000be3f:	cmp    esi,DWORD PTR [rip+0x6a58833d]        # 0x1aa594182
   14000be45:	ja     0x14000beb5
   14000be47:	ins    DWORD PTR es:[rdi],dx
   14000be48:	nop
   14000be49:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000be4d:	sbb    dl,BYTE PTR [rax+0x8]
   14000be53:	add    BYTE PTR [rax],al
   14000be55:	add    BYTE PTR [rax],al
   14000be57:	add    BYTE PTR [rax],al
   14000be59:	add    BYTE PTR [rip+0xffffffff99989990],cl        # 0xd99957ef
   14000be5f:	jb     0x14000bec3
   14000be61:	push   rax
   14000be62:	cmp    al,0x3e
   14000be64:	cmp    eax,0x3d3d3d3d
   14000be69:	cmp    edi,DWORD PTR [rbx]
   14000be6b:	cmp    edi,DWORD PTR [rbx]
   14000be6d:	cmp    edi,DWORD PTR [rbx]
   14000be6f:	cmp    bh,BYTE PTR [rsi]
   14000be71:	and    DWORD PTR [rdx+0x69],0x78
   14000be75:	ja     0x14000bee9
   14000be77:	outs   dx,BYTE PTR ds:[rsi]
   14000be78:	jp     0x14000be82
   14000be7a:	pop    rsp
   14000be7b:	ja     0x14000be83
   14000be7d:	sbb    dl,BYTE PTR [rax+0x8]
   14000be83:	add    BYTE PTR [rax],al
   14000be85:	add    BYTE PTR [rax],al
   14000be87:	add    BYTE PTR [rax],al
   14000be89:	add    BYTE PTR [rip+0xffffffff9898998e],cl        # 0xd899581d
   14000be8f:	ins    BYTE PTR es:[rdi],dx
   14000be90:	jb     0x14000bf04
   14000be92:	push   rsp
   14000be93:	(bad)  
   14000be94:	cs cmp eax,0x3d3d3f3d
   14000be9a:	cmp    eax,0x2e3b3d3b
   14000be9f:	rex.RXB
   14000bea0:	gs (bad) 
   14000bea2:	ins    BYTE PTR es:[rdi],dx
   14000bea3:	jns    0x14000bf1d
   14000bea5:	ja     0x14000bf1e
   14000bea7:	outs   dx,BYTE PTR ds:[rsi]
   14000bea8:	xchg   esp,eax
   14000bea9:	or     BYTE PTR [rbx],bl
   14000beab:	outs   dx,BYTE PTR ds:[rsi]
   14000beac:	(bad)  
   14000bead:	sbb    dl,BYTE PTR [rax+0x8]
   14000beb3:	add    BYTE PTR [rax],al
   14000beb5:	add    BYTE PTR [rax],al
   14000beb7:	add    BYTE PTR [rax],al
   14000beb9:	add    BYTE PTR [rip+0xffffffff9898998a],cl        # 0xd8995849
   14000bebf:	ins    BYTE PTR es:[rdi],dx
   14000bec0:	ins    BYTE PTR es:[rdi],dx
   14000bec1:	xchg   esp,eax
   14000bec2:	jne    0x14000bf26
   14000bec4:	rex.WRXB (bad) 
   14000bec6:	cs (bad) 
   14000bec8:	cmp    al,0x3c
   14000beca:	cmp    al,0x2e
   14000becc:	cs cmp al,0x7c
   14000becf:	push   0x7879726a
   14000bed4:	js     0x14000bf4d
   14000bed6:	jb     0x14000bf4a
   14000bed8:	xchg   ebp,eax
   14000bed9:	or     BYTE PTR [rbx],bl
   14000bedb:	outs   dx,BYTE PTR ds:[rsi]
   14000bedc:	(bad)  
   14000bedd:	sbb    dl,BYTE PTR [rax+0x8]
   14000bee3:	add    BYTE PTR [rax],al
   14000bee5:	add    BYTE PTR [rax],al
   14000bee7:	add    BYTE PTR [rax],al
   14000bee9:	add    BYTE PTR [rip+0xffffffff9898988a],cl        # 0xd8995779
   14000beef:	ins    BYTE PTR es:[rdi],dx
   14000bef0:	ins    BYTE PTR es:[rdi],dx
   14000bef1:	xchg   edx,eax
   14000bef2:	xchg   edx,eax
   14000bef3:	jns    0x14000bf5e
   14000bef5:	ins    BYTE PTR es:[rdi],dx
   14000bef6:	push   rsi
   14000bef7:	rex.WRXB
   14000bef8:	xor    BYTE PTR [r9+0x4f],al
   14000befc:	push   rsi
   14000befd:	ins    BYTE PTR es:[rdi],dx
   14000befe:	jb     0x14000bf72
   14000bf00:	nop
   14000bf01:	jns    0x14000bf7c
   14000bf03:	jns    0x14000bf7d
   14000bf05:	js     0x14000bf80
   14000bf07:	ja     0x14000be9e
   14000bf09:	or     BYTE PTR [rdx],bl
   14000bf0b:	ins    BYTE PTR es:[rdi],dx
   14000bf0c:	(bad)  
   14000bf0d:	sbb    dl,BYTE PTR [rax+0xc]
   14000bf13:	add    BYTE PTR [rax],al
   14000bf15:	add    BYTE PTR [rax],al
   14000bf17:	add    BYTE PTR [rax],al
   14000bf19:	add    BYTE PTR [rip+0xffffffff98989890],cl        # 0xd89957af
   14000bf1f:	ins    BYTE PTR es:[rdi],dx
   14000bf20:	ins    BYTE PTR es:[rdi],dx
   14000bf21:	xchg   edx,eax
   14000bf22:	nop
   14000bf23:	nop
   14000bf24:	outs   dx,BYTE PTR ds:[rsi]
   14000bf25:	jne    0x14000bfa0
   14000bf27:	jne    0x14000bf9e
   14000bf29:	js     0x14000bfa3
   14000bf2b:	jns    0x14000bfa5
   14000bf2d:	js     0x14000bebf
   14000bf2f:	jns    0x14000bfaa
   14000bf31:	jns    0x14000bfac
   14000bf33:	jns    0x14000bfae
   14000bf35:	jns    0x14000bfae
   14000bf37:	jns    0x14000bece
   14000bf39:	or     BYTE PTR [rsi],dl
   14000bf3b:	push   0x6
   14000bf3d:	adc    al,0x5d
   14000bf3f:	adc    DWORD PTR [rax],eax
	...
   14000bf49:	add    BYTE PTR [rsi],dl
   14000bf4b:	mov    ds,WORD PTR [rbp-0x67666363]
   14000bf51:	cdq    
   14000bf52:	cdq    
   14000bf53:	cdq    
   14000bf54:	cdq    
   14000bf55:	xchg   esp,eax
   14000bf56:	xchg   esp,eax
   14000bf57:	xchg   esp,eax
   14000bf58:	xchg   esp,eax
   14000bf59:	xchg   esp,eax
   14000bf5a:	xchg   esp,eax
   14000bf5b:	xchg   edx,eax
   14000bf5c:	xchg   edx,eax
   14000bf5d:	xchg   edx,eax
   14000bf5e:	nop
   14000bf5f:	xchg   edx,eax
   14000bf60:	nop
   14000bf61:	nop
   14000bf62:	jns    0x14000bef4
   14000bf64:	jns    0x14000bfdf
   14000bf66:	jne    0x14000bfdf
   14000bf68:	xchg   ebp,eax
   14000bf69:	or     al,0x1b
   14000bf6b:	addr32 (bad) 
   14000bf6d:	movups xmm3,XMMWORD PTR [rdx]
	...
   14000bf78:	add    BYTE PTR [rax],al
   14000bf7a:	pop    rax
   14000bf7b:	sbb    ebx,DWORD PTR [rax]
   14000bf7d:	sbb    bl,BYTE PTR [rbx]
   14000bf7f:	sbb    DWORD PTR [rbx],ebx
   14000bf81:	pop    rsp
   14000bf82:	pop    rax
   14000bf83:	pop    rax
   14000bf84:	pop    rax
   14000bf85:	pop    rdi
   14000bf86:	pop    rdi
   14000bf87:	(bad)  
   14000bf89:	imul   ebp,DWORD PTR [rcx+0x6c],0x72727277
   14000bf90:	jne    0x14000bf22
   14000bf92:	mov    cs,WORD PTR [rsi-0x6b676e6c]
   14000bf98:	xchg   edx,eax
   14000bf99:	adc    DWORD PTR [rsp+rcx*1],ecx
	...
   14000bfb4:	add    BYTE PTR [rax],al
   14000bfb6:	(bad)  
   14000bfb7:	pop    rdi
   14000bfb8:	pop    rdi
   14000bfb9:	pop    rdi
   14000bfba:	pop    rdi
   14000bfbb:	pop    rcx
   14000bfbc:	pop    rcx
   14000bfbd:	sbb    ebx,DWORD PTR [rdx]
   14000bfbf:	sbb    BYTE PTR [rax],bl
   14000bfc1:	adc    al,0x14
   14000bfc3:	adc    edx,DWORD PTR [rdx]
   14000bfc5:	adc    ecx,DWORD PTR [rsi]
   14000bfc7:	or     eax,0x1a0f
	...
   14000c128:	(bad)  
   14000c129:	(bad)  
   14000c12a:	(bad)  
   14000c12b:	(bad)  
   14000c12c:	(bad)  
   14000c12d:	inc    DWORD PTR [rax]
   14000c12f:	add    bh,bh
   14000c131:	(bad)  
   14000c132:	(bad)  
   14000c133:	(bad)  
   14000c134:	(bad)  
   14000c135:	inc    DWORD PTR [rax]
   14000c137:	add    bh,bh
   14000c139:	(bad)  
   14000c13a:	push   rax
   14000c13c:	jg     0x14000c13d
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	(bad)  
   14000c141:	push   rax
   14000c143:	add    BYTE PTR [rdi],bl
   14000c145:	inc    DWORD PTR [rax]
   14000c147:	add    bh,bh
   14000c149:	clc    
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	(bad)  
   14000c14d:	inc    DWORD PTR [rax]
   14000c14f:	add    ah,bh
   14000c151:	add    BYTE PTR [rax],al
   14000c153:	add    BYTE PTR [rbx],al
   14000c155:	inc    DWORD PTR [rax]
   14000c157:	add    al,ah
   14000c159:	add    BYTE PTR [rax],al
   14000c15b:	add    BYTE PTR [rax],al
   14000c15d:	inc    DWORD PTR [rax]
   14000c15f:	add    al,al
   14000c161:	add    BYTE PTR [rax],al
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	inc    DWORD PTR [rax]
   14000c167:	add    al,al
   14000c169:	add    BYTE PTR [rax],al
   14000c16b:	add    BYTE PTR [rax],al
   14000c16d:	inc    DWORD PTR [rax]
   14000c16f:	add    al,al
   14000c171:	add    BYTE PTR [rax],al
   14000c173:	add    BYTE PTR [rax],al
   14000c175:	inc    DWORD PTR [rax]
   14000c177:	add    al,al
   14000c179:	add    BYTE PTR [rax],al
   14000c17b:	add    BYTE PTR [rax],al
   14000c17d:	inc    DWORD PTR [rax]
   14000c17f:	add    al,al
   14000c181:	add    BYTE PTR [rax],al
   14000c183:	add    BYTE PTR [rax],al
   14000c185:	inc    DWORD PTR [rax]
   14000c187:	add    al,al
   14000c189:	add    BYTE PTR [rax],al
   14000c18b:	add    BYTE PTR [rax],al
   14000c18d:	inc    DWORD PTR [rax]
   14000c18f:	add    al,al
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rax],al
   14000c195:	inc    DWORD PTR [rax]
   14000c197:	add    al,al
   14000c199:	add    BYTE PTR [rax],al
   14000c19b:	add    BYTE PTR [rax],al
   14000c19d:	inc    DWORD PTR [rax]
   14000c19f:	add    al,al
   14000c1a1:	add    BYTE PTR [rax],al
   14000c1a3:	add    BYTE PTR [rax],al
   14000c1a5:	inc    DWORD PTR [rax]
   14000c1a7:	add    al,al
   14000c1a9:	add    BYTE PTR [rax],al
   14000c1ab:	add    BYTE PTR [rax],al
   14000c1ad:	inc    DWORD PTR [rax]
   14000c1af:	add    al,al
   14000c1b1:	add    BYTE PTR [rax],al
   14000c1b3:	add    BYTE PTR [rax],al
   14000c1b5:	inc    DWORD PTR [rax]
   14000c1b7:	add    al,al
   14000c1b9:	add    BYTE PTR [rax],al
   14000c1bb:	add    BYTE PTR [rax],al
   14000c1bd:	inc    DWORD PTR [rax]
   14000c1bf:	add    al,al
   14000c1c1:	add    BYTE PTR [rax],al
   14000c1c3:	add    BYTE PTR [rax],al
   14000c1c5:	inc    DWORD PTR [rax]
   14000c1c7:	add    al,al
   14000c1c9:	add    BYTE PTR [rax],al
   14000c1cb:	add    BYTE PTR [rax],al
   14000c1cd:	inc    DWORD PTR [rax]
   14000c1cf:	add    al,al
   14000c1d1:	add    BYTE PTR [rax],al
   14000c1d3:	add    BYTE PTR [rax],al
   14000c1d5:	inc    DWORD PTR [rax]
   14000c1d7:	add    al,al
   14000c1d9:	add    BYTE PTR [rax],al
   14000c1db:	add    BYTE PTR [rax],al
   14000c1dd:	inc    DWORD PTR [rax]
   14000c1df:	add    al,al
   14000c1e1:	add    BYTE PTR [rax],al
   14000c1e3:	add    BYTE PTR [rax],al
   14000c1e5:	inc    DWORD PTR [rax]
   14000c1e7:	add    al,al
   14000c1e9:	add    BYTE PTR [rax],al
   14000c1eb:	add    BYTE PTR [rax],al
   14000c1ed:	inc    DWORD PTR [rax]
   14000c1ef:	add    al,al
   14000c1f1:	add    BYTE PTR [rax],al
   14000c1f3:	add    BYTE PTR [rax],al
   14000c1f5:	inc    DWORD PTR [rax]
   14000c1f7:	add    al,al
   14000c1f9:	add    BYTE PTR [rax],al
   14000c1fb:	add    BYTE PTR [rax],al
   14000c1fd:	inc    DWORD PTR [rax]
   14000c1ff:	add    al,al
   14000c201:	add    BYTE PTR [rax],al
   14000c203:	add    BYTE PTR [rax],al
   14000c205:	inc    DWORD PTR [rax]
   14000c207:	add    al,al
   14000c209:	add    BYTE PTR [rax],al
   14000c20b:	add    BYTE PTR [rax],al
   14000c20d:	inc    DWORD PTR [rax]
   14000c20f:	add    al,al
   14000c211:	add    BYTE PTR [rax],al
   14000c213:	add    BYTE PTR [rax],al
   14000c215:	inc    DWORD PTR [rax]
   14000c217:	add    al,al
   14000c219:	add    BYTE PTR [rax],al
   14000c21b:	add    BYTE PTR [rax],al
   14000c21d:	inc    DWORD PTR [rax]
   14000c21f:	add    al,al
   14000c221:	add    BYTE PTR [rax],al
   14000c223:	add    BYTE PTR [rax],al
   14000c225:	inc    DWORD PTR [rax]
   14000c227:	add    al,al
   14000c229:	add    BYTE PTR [rax],al
   14000c22b:	add    BYTE PTR [rax],al
   14000c22d:	inc    DWORD PTR [rax]
   14000c22f:	add    al,al
   14000c231:	add    BYTE PTR [rax],al
   14000c233:	add    BYTE PTR [rax],al
   14000c235:	inc    DWORD PTR [rax]
   14000c237:	add    al,al
   14000c239:	add    BYTE PTR [rax],al
   14000c23b:	add    BYTE PTR [rax],al
   14000c23d:	inc    DWORD PTR [rax]
   14000c23f:	add    al,al
   14000c241:	add    BYTE PTR [rax],al
   14000c243:	add    BYTE PTR [rax],al
   14000c245:	inc    DWORD PTR [rax]
   14000c247:	add    al,al
   14000c249:	add    BYTE PTR [rax],al
   14000c24b:	add    BYTE PTR [rax],al
   14000c24d:	inc    DWORD PTR [rax]
   14000c24f:	add    al,al
   14000c251:	add    BYTE PTR [rax],al
   14000c253:	add    BYTE PTR [rax],al
   14000c255:	inc    DWORD PTR [rax]
   14000c257:	add    al,al
   14000c259:	add    BYTE PTR [rax],al
   14000c25b:	add    BYTE PTR [rax],al
   14000c25d:	inc    DWORD PTR [rax]
   14000c25f:	add    al,al
   14000c261:	add    BYTE PTR [rax],al
   14000c263:	add    BYTE PTR [rdi],cl
   14000c265:	inc    DWORD PTR [rax]
   14000c267:	add    bh,bh
   14000c269:	cld    
   14000c26a:	add    BYTE PTR [rax],al
   14000c26c:	(bad)  
   14000c26d:	inc    DWORD PTR [rax]
   14000c26f:	add    bh,bh
   14000c271:	(bad)  
   14000c272:	(bad)  
   14000c273:	(bad)  
   14000c274:	(bad)  
   14000c275:	inc    DWORD PTR [rax]
   14000c277:	add    bh,bh
   14000c279:	(bad)  
   14000c27a:	(bad)  
   14000c27b:	(bad)  
   14000c27c:	(bad)  
   14000c27d:	inc    DWORD PTR [rax]
   14000c27f:	add    bh,bh
   14000c281:	(bad)  
   14000c282:	(bad)  
   14000c283:	(bad)  
   14000c284:	(bad)  
   14000c285:	inc    DWORD PTR [rax]
   14000c287:	add    bh,bh
   14000c289:	(bad)  
   14000c28a:	(bad)  
   14000c28b:	(bad)  
   14000c28c:	(bad)  
   14000c28d:	inc    DWORD PTR [rax]
   14000c28f:	add    bh,bh
   14000c291:	(bad)  
   14000c292:	(bad)  
   14000c293:	(bad)  
   14000c294:	(bad)  
   14000c295:	inc    DWORD PTR [rax]
   14000c297:	add    bh,bh
   14000c299:	(bad)  
   14000c29a:	(bad)  
   14000c29b:	(bad)  
   14000c29c:	(bad)  
   14000c29d:	inc    DWORD PTR [rax]
   14000c29f:	add    bh,bh
   14000c2a1:	(bad)  
   14000c2a2:	(bad)  
   14000c2a3:	(bad)  
   14000c2a4:	(bad)  
   14000c2a5:	inc    DWORD PTR [rax]
   14000c2a7:	add    BYTE PTR [rax],ch
   14000c2a9:	add    BYTE PTR [rax],al
   14000c2ab:	add    BYTE PTR [rax],ah
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rax+0x0],al
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	add    DWORD PTR [rax],eax
   14000c2b6:	or     BYTE PTR [rax],al
   14000c2b8:	add    BYTE PTR [rax],al
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	add    BYTE PTR [rax+rax*1],al
	...
   14000c2c7:	add    BYTE PTR [rax],al
   14000c2c9:	add    DWORD PTR [rax],eax
   14000c2cb:	add    BYTE PTR [rax],al
   14000c2cd:	add    DWORD PTR [rax],eax
   14000c2cf:	add    BYTE PTR [rax],al
   14000c2d1:	add    BYTE PTR [rax],al
   14000c2d3:	add    BYTE PTR [rsi-0x4cffb067],bh
   14000c2d9:	nop
   14000c2da:	push   rdi
   14000c2db:	add    BYTE PTR [rsi-0x42ffa36d],dh
   14000c2e1:	pushf  
   14000c2e2:	pop    rbp
   14000c2e3:	add    BYTE PTR [rcx-0x42ff9e6a],bh
   14000c2e9:	(bad)  
   14000c2ea:	add    BYTE PTR gs:[rdx-0x40ff9766],bh
   14000c2f1:	popf   
   14000c2f2:	imul   eax,DWORD PTR [rax],0xffffffbf
   14000c2f5:	movabs eax,ds:0x9ecb00529cc00072
   14000c2fe:	pop    rdi
   14000c2ff:	add    dl,al
   14000c301:	lahf   
   14000c302:	ins    DWORD PTR es:[rdi],dx
   14000c303:	add    ah,al
   14000c305:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c306:	push   0x6bb3d600
   14000c30b:	add    dl,al
   14000c30d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c30e:	jbe    0x14000c310
   14000c310:	leave  
   14000c311:	lods   al,BYTE PTR ds:[rsi]
   14000c312:	jg     0x14000c314
   14000c314:	enter  0x7bb0,0x0
   14000c318:	shl    BYTE PTR [rbp+0x630c0072],cl
   14000c31e:	repnz add BYTE PTR [rdx],dl
   14000c321:	ins    BYTE PTR es:[rdi],dx
   14000c322:	cmc    
   14000c323:	add    BYTE PTR [rcx],bl
   14000c325:	push   0x710a00f1
   14000c32a:	stc    
   14000c32b:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e01b9a9
   14000c331:	jl     0x14000c331
   14000c333:	add    BYTE PTR [rbx],ah
   14000c335:	push   0xffffffffffffffef
   14000c337:	add    BYTE PTR [rip+0x3500e270],ch        # 0x17501a5ad
   14000c33d:	jg     0x14000c32a
   14000c33f:	add    BYTE PTR [rip+0x2500f16d],ah        # 0x16501b4b2
   14000c345:	jno    0x14000c339
   14000c347:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b01b6c6
   14000c34d:	jnp    0x14000c342
   14000c34f:	add    BYTE PTR [rip+0x3700fd70],ah        # 0x17701c0c5
   14000c355:	jnp    0x14000c34d
   14000c357:	add    BYTE PTR [rdx+0x7b],al
   14000c35a:	xlat   BYTE PTR ds:[rbx]
   14000c35b:	add    BYTE PTR [rsp+rdx*4-0x54],bh
   14000c35f:	add    BYTE PTR [rbx],dl
   14000c361:	(bad)  
   14000c362:	test   DWORD PTR [rax],0xfd871c
   14000c368:	sbb    eax,0x2c00ff93
   14000c36d:	mov    esp,gs
   14000c36f:	add    BYTE PTR [rcx],dh
   14000c371:	mov    esp,edx
   14000c373:	add    BYTE PTR [rax],ah
   14000c375:	xor    edi,0x0
   14000c378:	(bad)  
   14000c379:	xor    ch,0x0
   14000c37c:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000c382:	test   BYTE PTR [rax],0x2a
   14000c385:	mov    dh,dh
   14000c387:	add    BYTE PTR [rax],ah
   14000c389:	mov    edi,edi
   14000c38b:	add    BYTE PTR [rax],ah
   14000c38d:	nop
   14000c38e:	test   DWORD PTR [rax],0xf7902c
   14000c394:	and    edx,DWORD PTR [rbp-0x6bd3ff02]
   14000c39a:	clc    
   14000c39b:	add    BYTE PTR [rdi],ch
   14000c39d:	cwde   
   14000c39e:	cld    
   14000c39f:	add    BYTE PTR [rip+0x4b00f694],dh        # 0x18b01ba39
   14000c3a5:	(bad)  
   14000c3a6:	(bad)  
   14000c3a7:	add    BYTE PTR [rbx-0x77],dl
   14000c3aa:	xlat   BYTE PTR ds:[rbx]
   14000c3ab:	add    BYTE PTR [rsi-0x70],al
   14000c3ae:	xlat   BYTE PTR ds:[rbx]
   14000c3af:	add    BYTE PTR [rbp-0x6c],ch
   14000c3b2:	enter  0x4500,0x84
   14000c3b6:	in     al,dx
   14000c3b7:	add    BYTE PTR [rsp+rcx*4-0x1f],dl
   14000c3bb:	add    BYTE PTR [rdi-0x6e],dl
   14000c3be:	loope  0x14000c3c0
   14000c3c0:	rex cdq 
   14000c3c2:	test   DWORD PTR [rax],0xf59a54
   14000c3c8:	gs (bad) 
   14000c3ca:	in     eax,dx
   14000c3cb:	add    BYTE PTR [rax-0x5a],dl
   14000c3ce:	cli    
   14000c3cf:	add    BYTE PTR [rdi-0x5b],ah
   14000c3d2:	test   DWORD PTR [rax],0xf6a875
   14000c3d8:	jp     0x14000c38c
   14000c3da:	test   DWORD PTR [rax],0x97958f
   14000c3e0:	test   eax,0x9d00839e
   14000c3e5:	movabs ds:0xa68c008ca2ae009a,eax
   14000c3ee:	mov    eax,0xacb7af00
   14000c3f3:	add    bl,al
   14000c3f5:	scas   al,BYTE PTR es:[rdi]
   14000c3f6:	xchg   DWORD PTR [rax],eax
   14000c3f8:	(bad)
   14000c3fb:	add    cl,cl
   14000c3fd:	mov    bl,0x88
   14000c3ff:	add    dl,cl
   14000c401:	mov    ah,0x8a
   14000c403:	add    ah,cl
   14000c405:	mov    dh,0x8d
   14000c407:	add    ch,dl
   14000c409:	mov    esp,0xb9ce008a
   14000c40e:	xchg   ecx,eax
   14000c40f:	add    dl,cl
   14000c411:	mov    eax,0xbbd10095
   14000c416:	xchg   edx,eax
   14000c417:	add    dl,dl
   14000c419:	mov    ebp,0xc1d50097
   14000c41e:	pushf  
   14000c41f:	add    bl,bl
   14000c421:	(bad)
   14000c424:	(bad)  
   14000c425:	ret    
   14000c426:	movabs al,ds:0xa6c9dc00a3c6d800
   14000c42f:	add    ah,dl
   14000c431:	(bad)
   14000c434:	fcmovne st,st(2)
   14000c436:	lods   al,BYTE PTR ds:[rsi]
   14000c437:	add    dl,cl
   14000c439:	(bad)  
   14000c43a:	mov    esi,0xb1cddc00
   14000c43f:	add    ch,bl
   14000c441:	sar    DWORD PTR [rcx-0x5c371f00],1
   14000c447:	add    ah,ah
   14000c449:	retf   
   14000c44a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c44b:	add    dl,ah
   14000c44d:	int    0xaa
   14000c44f:	add    ch,ah
   14000c451:	shl    DWORD PTR [rdx-0x5b2c1700],1
   14000c457:	add    bh,ah
   14000c459:	shr    DWORD PTR [rbp-0x542a1700],1
   14000c45f:	add    dh,ch
   14000c461:	fsubr  DWORD PTR [rsi-0x4f2f2000]
   14000c467:	add    bl,ah
   14000c469:	shl    BYTE PTR [rbp-0x48291900],cl
   14000c46f:	add    dl,ch
   14000c471:	(bad)  
   14000c472:	mov    dl,0x0
   14000c474:	(bad)  
   14000c475:	fdiv   DWORD PTR [rcx-0x49271500]
   14000c47b:	add    ch,ch
   14000c47d:	fidiv  DWORD PTR [rax+rax*1+0xb5dcef]
   14000c484:	loope  0x14000c45a
   14000c486:	mov    esp,0xbfd7e500
   14000c48b:	add    dl,ch
   14000c48d:	fdivr  DWORD PTR [rdx-0x46251300]
   14000c493:	add    ch,ch
   14000c495:	fdivr  QWORD PTR [rcx-0x43241200]
   14000c49b:	add    bl,dh
   14000c49d:	fnsave [rax+rax*1+0xb4def6]
   14000c4a4:	lock fidivr WORD PTR [rax-0x431f0e00]
   14000c4ab:	add    al,bh
   14000c4ad:	loopne 0x14000c467
   14000c4af:	add    ah,bh
   14000c4b1:	jrcxz  0x14000c46f
   14000c4b3:	add    BYTE PTR [rsi-0x7aff2f5a],al
   14000c4b9:	mov    eax,0xbf9a00f8
   14000c4be:	test   DWORD PTR [rax],0xccc0b5
   14000c4c4:	xchg   edx,eax
   14000c4c5:	(bad)  
   14000c4c6:	cli    
   14000c4c7:	add    BYTE PTR [rbp-0x25ff0836],ah
   14000c4cd:	(bad)  
   14000c4ce:	retf   0xe500
   14000c4d1:	fcmovb st,st(4)
   14000c4d3:	add    al,ah
   14000c4d5:	fcompp 
   14000c4d7:	add    dh,ch
   14000c4d9:	loop   0x14000c4a3
   14000c4db:	add    bl,ch
   14000c4dd:	loop   0x14000c4b1
   14000c4df:	add    bh,ch
   14000c4e1:	out    0xd7,al
   14000c4e3:	add    cl,dh
   14000c4e5:	out    0xd2,al
   14000c4e7:	add    cl,dh
   14000c4e9:	jmp    0x12cf5c5c9
   14000c4ee:	fadd   DWORD PTR [rax]
   14000c4f0:	ret    
   14000c4f1:	(bad)  
   14000c4f3:	add    ch,bl
   14000c4f5:	in     eax,dx
   14000c4f6:	std    
   14000c4f7:	add    dh,ah
   14000c4f9:	repnz inc BYTE PTR [rax]
   14000c4fc:	(bad)  
   14000c4fd:	(bad)  
   14000c4fe:	inc    BYTE PTR [rax]
	...
   14000c6cc:	(bad)  
   14000c6cd:	(bad)  
   14000c6ce:	inc    DWORD PTR [rax]
	...
   14000c720:	add    BYTE PTR [rax],al
   14000c722:	rex.WRXB
   14000c723:	rex.WRB
   14000c724:	rex.WRB
   14000c725:	rex.WRB
   14000c726:	adc    QWORD PTR [r8],rax
	...
   14000c739:	add    BYTE PTR [rdi+0x4f],cl
   14000c73c:	rex.WRB
   14000c73d:	rex.WRB
   14000c73e:	rex.WRX push rcx
   14000c740:	push   rcx
   14000c741:	push   rdx
   14000c742:	push   rsi
   14000c743:	push   rsi
   14000c744:	push   rsi
   14000c745:	push   rdi
   14000c746:	pop    rbp
   14000c747:	add    DWORD PTR [rbp+0xd],ecx
	...
   14000c752:	rex.WRB
   14000c753:	rex.WRXB
   14000c754:	rex.WRB
   14000c755:	rex.WRB
   14000c756:	rex.WB
   14000c757:	rex.WRB push r9
   14000c759:	push   rbx
   14000c75a:	push   rsp
   14000c75b:	push   rdi
   14000c75c:	pop    rdi
   14000c75d:	pop    rdi
   14000c75e:	push   rdi
   14000c75f:	push   rdi
   14000c760:	push   rdi
   14000c761:	(bad)  
   14000c762:	pop    rdi
   14000c763:	pop    rdi
   14000c764:	pop    rdi
   14000c765:	pop    rbp
   14000c766:	pop    rbp
   14000c767:	add    DWORD PTR [rdx+0x1],esp
   14000c76a:	rex.WX
   14000c76b:	rex.WRB add BYTE PTR [r8],r8b
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	add    BYTE PTR [rax],al
   14000c772:	adc    dl,BYTE PTR [rdi+riz*2+0x66]
   14000c776:	push   0x70666257
   14000c77b:	jbe    0x14000c7f5
   14000c77d:	js     0x14000c7e8
   14000c77f:	imul   ebx,DWORD PTR [rdi+0x63],0x625d6062
   14000c786:	(bad)  
   14000c787:	add    DWORD PTR [rsi+0x1],esi
   14000c78a:	jbe    0x14000c797
   14000c78c:	add    BYTE PTR [rax],al
   14000c78e:	add    BYTE PTR [rax],al
   14000c790:	add    BYTE PTR [rax],al
   14000c792:	(bad)  
   14000c793:	xchg   WORD PTR [rdi+0x5f],sp
   14000c797:	push   rdi
   14000c798:	sbb    BYTE PTR [rdx+0x22],0x1a
   14000c79c:	adc    ebx,DWORD PTR [rcx]
   14000c79e:	and    bh,BYTE PTR [rax+rbx*2+0x51]
   14000c7a2:	(bad)  
   14000c7a3:	imul   ebp,DWORD PTR [rax+0x68],0xa690a63
   14000c7aa:	jbe    0x14000c7ad
   14000c7ac:	add    BYTE PTR [rax],al
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	add    BYTE PTR [rax],al
   14000c7b2:	(bad)  
   14000c7b3:	xchg   WORD PTR [rax+0x56],si
   14000c7b7:	jg     0x14000c7ee
   14000c7b9:	sbb    al,0x15
   14000c7bb:	sbb    al,0x19
   14000c7bd:	sbb    DWORD PTR [rip+0x495a1a13],edx        # 0x1895ae1d6
   14000c7c3:	(bad)  
   14000c7c4:	imul   ebp,DWORD PTR [rax+0x64],0x690a760a
   14000c7cb:	or     al,BYTE PTR [rax]
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rax],al
   14000c7d1:	add    BYTE PTR [rsi],cl
   14000c7d3:	xchg   WORD PTR [rax+0x1514225a],ax
   14000c7da:	adc    edx,DWORD PTR [rip+0x1c1c1c1c]        # 0x15c1ce3fc
   14000c7e0:	adc    eax,0x63495a15
   14000c7e5:	push   0xa750a64
   14000c7ea:	jbe    0x14000c7f6
   14000c7ec:	add    BYTE PTR [rax],al
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	add    BYTE PTR [rax],al
   14000c7f2:	(bad)  
   14000c7f3:	push   rdi
   14000c7f4:	xchg   DWORD PTR [rcx-0xe0eae5],eax
   14000c7fa:	mov    BYTE PTR [rcx],ah
   14000c7fc:	adc    ebx,DWORD PTR [rcx]
   14000c7fe:	sbb    eax,0x19191d1c
   14000c803:	rex.W
   14000c804:	rex.WB (bad) 
   14000c806:	or     dh,BYTE PTR fs:[rsi+0xa]
   14000c80a:	jne    0x14000c816
   14000c80c:	add    BYTE PTR [rax],al
   14000c80e:	add    BYTE PTR [rax],al
   14000c810:	add    BYTE PTR [rax],al
   14000c812:	(bad)  
   14000c813:	ins    DWORD PTR es:[rdi],dx
   14000c814:	xchg   DWORD PTR [rsi],esi
   14000c816:	adc    al,0x14
   14000c818:	rex.B (bad) 
   14000c81a:	(bad)  
   14000c81b:	(bad)  
   14000c81c:	jnp    0x14000c833
   14000c81e:	adc    eax,0x151d1d1d
   14000c823:	xor    eax,0xa754f4f
   14000c828:	imul   ecx,DWORD PTR [rdx],0xa76
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	add    BYTE PTR [rax],al
   14000c832:	(bad)  
   14000c833:	and    WORD PTR [rax],0x131e
   14000c838:	rex.X (bad) 
   14000c83a:	(bad)  
   14000c83b:	(bad)  
   14000c83c:	dec    DWORD PTR [rcx+0x1d15153d]
   14000c842:	sbb    eax,0x75504814
   14000c847:	or     dh,BYTE PTR [rsi+0xa]
   14000c84a:	jne    0x14000c856
   14000c84c:	add    BYTE PTR [rax],al
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	add    BYTE PTR [rax],al
   14000c852:	(bad)  
   14000c853:	ins    DWORD PTR es:[rdi],dx
   14000c854:	jns    0x14000c86c
   14000c856:	sub    dl,BYTE PTR [rdx+rax*2]
   14000c859:	(bad)  
   14000c85a:	(bad)  
   14000c85b:	(bad)  
   14000c85c:	(bad)  
   14000c85d:	(bad)  
   14000c85e:	(bad)  
   14000c85f:	jle    0x14000c880
   14000c861:	adc    al,0x1d
   14000c863:	adc    al,0x38
   14000c865:	rex.WB jne 0x14000c872
   14000c868:	jne    0x14000c874
   14000c86a:	jbe    0x14000c876
   14000c86c:	add    BYTE PTR [rax],al
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	add    BYTE PTR [rax],al
   14000c872:	(bad)  
   14000c873:	ins    DWORD PTR es:[rdi],dx
   14000c874:	cmp    bl,BYTE PTR [rax]
   14000c876:	sub    edx,DWORD PTR [rsi]
   14000c878:	rex.X (bad) 
   14000c87a:	(bad)  
   14000c87b:	(bad)  
   14000c87c:	(bad)  
   14000c87d:	(bad)  
   14000c87e:	(bad)  
   14000c87f:	(bad)  
   14000c880:	inc    DWORD PTR [rcx+0x1e]
   14000c883:	adc    al,0x39
   14000c885:	rex.WRB (bad) 
   14000c887:	or     dh,BYTE PTR [rbp+0xa]
   14000c88a:	imul   ecx,DWORD PTR [rdx],0x0
   14000c890:	add    BYTE PTR [rax],al
   14000c892:	(bad)  
   14000c893:	sbb    bx,WORD PTR [rax]
   14000c896:	sub    edx,DWORD PTR [rsi]
   14000c898:	rex.X (bad) 
   14000c89a:	(bad)  
   14000c89b:	(bad)  
   14000c89c:	(bad)  
   14000c89d:	(bad)  
   14000c89e:	(bad)  
   14000c89f:	(bad)  
   14000c8a0:	(bad)  
   14000c8a1:	(bad)  
   14000c8a2:	ds adc al,0x1f
   14000c8a5:	movsxd r9,DWORD PTR [r10]
   14000c8a8:	jbe    0x14000c8b4
   14000c8aa:	jbe    0x14000c8b6
   14000c8ac:	add    BYTE PTR [rax],al
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	add    BYTE PTR [rax],al
   14000c8b2:	(bad)  
   14000c8b3:	pop    rsp
   14000c8b4:	sbb    esp,DWORD PTR [rip+0xffffffffff7a172d]        # 0x13f7adfe7
   14000c8ba:	(bad)  
   14000c8bb:	(bad)  
   14000c8bc:	(bad)  
   14000c8bd:	(bad)  
   14000c8be:	(bad)  
   14000c8bf:	(bad)  
   14000c8c0:	(bad)  
   14000c8c1:	inc    DWORD PTR [rcx+0x17]
   14000c8c4:	(bad)  
   14000c8c5:	movsxd r9,DWORD PTR [r10]
   14000c8c8:	jne    0x14000c8d4
   14000c8ca:	jne    0x14000c8d6
   14000c8cc:	add    BYTE PTR [rax],al
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	add    BYTE PTR [rax],al
   14000c8d2:	(bad)  
   14000c8d3:	ins    DWORD PTR es:[rdi],dx
   14000c8d4:	ss cs xor al,0x24
   14000c8d8:	jp     0x14000c8d9
   14000c8da:	(bad)  
   14000c8db:	(bad)  
   14000c8dc:	(bad)  
   14000c8dd:	(bad)  
   14000c8de:	(bad)  
   14000c8df:	dec    DWORD PTR [rdx+0x39162a40]
   14000c8e5:	movsxd r9,DWORD PTR [r10]
   14000c8e8:	jbe    0x14000c8f4
   14000c8ea:	jne    0x14000c8f6
   14000c8ec:	add    BYTE PTR [rax],al
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	add    BYTE PTR [rax],al
   14000c8f2:	(bad)  
   14000c8f3:	ins    DWORD PTR es:[rdi],dx
   14000c8f4:	cmp    BYTE PTR [rip+0xffffffffff7a243c],ah        # 0x13f7aed36
   14000c8fa:	(bad)  
   14000c8fb:	(bad)  
   14000c8fc:	(bad)  
   14000c8fd:	(bad)  
   14000c8fe:	(bad)  
   14000c8ff:	jge    0x14000c92b
   14000c901:	(bad)  
   14000c902:	sub    dl,BYTE PTR [rdi]
   14000c904:	cmp    BYTE PTR [rcx+0x75],cl
   14000c907:	add    DWORD PTR [rbp+0xa],esi
   14000c90a:	jbe    0x14000c916
   14000c90c:	add    BYTE PTR [rax],al
   14000c90e:	add    BYTE PTR [rax],al
   14000c910:	add    BYTE PTR [rax],al
   14000c912:	(bad)  
   14000c913:	or     BYTE PTR [rax+0x2a],0x3c
   14000c917:	(bad)  
   14000c918:	jp     0x14000c919
   14000c91a:	(bad)  
   14000c91b:	(bad)  
   14000c91c:	dec    DWORD PTR [rdx+0x2a2a173d]
   14000c922:	sub    eax,0x754f4324
   14000c927:	or     dh,BYTE PTR [rax+0xa]
   14000c92a:	imul   ecx,DWORD PTR [rdx],0x0
   14000c930:	add    BYTE PTR [rax],al
   14000c932:	(bad)  
   14000c933:	ins    DWORD PTR es:[rdi],dx
   14000c934:	xor    DWORD PTR [rsi],0x33
   14000c937:	(bad)  
   14000c938:	jge    0x14000c939
   14000c93a:	(bad)  
   14000c93b:	(bad)  
   14000c93c:	jge    0x14000c96a
   14000c93e:	sub    ch,BYTE PTR [rbp*1+0x493b172d]
   14000c945:	(bad)  
   14000c946:	ja     0x14000c952
   14000c948:	jne    0x14000c954
   14000c94a:	jbe    0x14000c956
   14000c94c:	add    BYTE PTR [rax],al
   14000c94e:	add    BYTE PTR [rax],al
   14000c950:	add    BYTE PTR [rax],al
   14000c952:	(bad)  
   14000c953:	xchg   WORD PTR [rbp+0x27],ax
   14000c957:	rex.X dec DWORD PTR es:[rcx+0x30302f3f]
   14000c95f:	sub    eax,0x432b2b2d
   14000c964:	push   rcx
   14000c965:	js     0x14000c9dc
   14000c967:	add    DWORD PTR [rsi+0xa],esi
   14000c96a:	jne    0x14000c976
   14000c96c:	add    BYTE PTR [rax],al
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	add    BYTE PTR [rax],al
   14000c972:	(bad)  
   14000c973:	push   rdi
   14000c974:	test   BYTE PTR [rbp+0x43],ch
   14000c977:	xor    BYTE PTR [rcx],dh
   14000c979:	cmp    al,0x30
   14000c97b:	(bad)  
   14000c97c:	xor    al,0x30
   14000c97e:	xor    al,0x30
   14000c980:	sub    eax,0x7651472a
   14000c985:	js     0x14000c9fe
   14000c987:	add    DWORD PTR [rbp+0xa],esi
   14000c98a:	jne    0x14000c996
   14000c98c:	add    BYTE PTR [rax],al
   14000c98e:	add    BYTE PTR [rax],al
   14000c990:	add    BYTE PTR [rax],al
   14000c992:	(bad)  
   14000c993:	pop    rbx
   14000c994:	test   DWORD PTR [rax+0x53],esi
   14000c997:	rex.XB sub BYTE PTR [rip+0x34343430],spl        # 0x17434fdce
   14000c99e:	xor    BYTE PTR [rax+rbp*1],ch
   14000c9a1:	rex.RXB
   14000c9a2:	imul   r14,QWORD PTR [r14+0x77],0xa760177
   14000c9aa:	jne    0x14000c9b6
   14000c9ac:	add    BYTE PTR [rax],al
   14000c9ae:	add    BYTE PTR [rax],al
   14000c9b0:	add    BYTE PTR [rax],al
   14000c9b2:	(bad)  
   14000c9b3:	push   rdi
   14000c9b4:	test   DWORD PTR [rbp+0x5f],ebp
   14000c9b7:	jo     0x14000c9fd
   14000c9b9:	and    esi,DWORD PTR [rdi]
   14000c9bb:	(bad)  
   14000c9bc:	and    al,0x27
   14000c9be:	(bad)  
   14000c9bf:	cmp    BYTE PTR [rsi+0x51],al
   14000c9c2:	jo     0x14000ca3c
   14000c9c4:	jne    0x14000ca3d
   14000c9c6:	je     0x14000c9c9
   14000c9c8:	jne    0x14000c9d4
   14000c9ca:	jbe    0x14000c9d6
   14000c9cc:	add    BYTE PTR [rax],al
   14000c9ce:	add    BYTE PTR [rax],al
   14000c9d0:	add    BYTE PTR [rax],al
   14000c9d2:	(bad)  
   14000c9d3:	push   rdi
   14000c9d4:	and    DWORD PTR [rsi+0x54],0x70
   14000c9d8:	jo     0x14000ca2e
   14000c9da:	rex.WRXB
   14000c9db:	rex.WRXB push r8
   14000c9dd:	rex.WRXB push r10
   14000c9df:	push   rdi
   14000c9e0:	data16 jne 0x14000ca5a
   14000c9e3:	jne    0x14000ca59
   14000c9e5:	ja     0x14000ca5b
   14000c9e7:	or     dh,BYTE PTR [rbp+0xa]
   14000c9ea:	jbe    0x14000c9f0
   14000c9ec:	add    BYTE PTR [rax],al
   14000c9ee:	add    BYTE PTR [rax],al
   14000c9f0:	add    BYTE PTR [rax],al
   14000c9f2:	(bad)  
   14000c9f3:	push   rdx
   14000c9f4:	(bad)  
   14000c9f5:	jo     0x14000ca54
   14000c9f7:	imul   ebp,DWORD PTR [rcx+0x75],0x75757575
   14000c9fe:	ja     0x14000ca75
   14000ca00:	js     0x14000ca79
   14000ca02:	ja     0x14000ca7b
   14000ca04:	ja     0x14000ca7d
   14000ca06:	js     0x14000ca09
   14000ca08:	rex.WRX or r9b,BYTE PTR [rax+r10*1]
   14000ca0c:	add    BYTE PTR [rax],al
   14000ca0e:	add    BYTE PTR [rax],al
   14000ca10:	add    BYTE PTR [rax],al
   14000ca12:	add    BYTE PTR [rcx],cl
   14000ca14:	or     DWORD PTR [rsp+rcx*1],ecx
   14000ca17:	or     al,0xc
   14000ca19:	or     al,0x6
   14000ca1b:	(bad)  
   14000ca1c:	(bad)  
   14000ca1d:	(bad)  
   14000ca1e:	add    eax,0x3030505
   14000ca23:	add    eax,DWORD PTR [rdx]
   14000ca25:	add    al,BYTE PTR [rsi]
   14000ca27:	or     al,0xc
	...
   14000cacd:	add    BYTE PTR [rax],al
   14000cacf:	add    bh,bh
   14000cad1:	(bad)  
   14000cad2:	(bad)  
   14000cad3:	(bad)  
   14000cad4:	(bad)  
   14000cad5:	(bad)  
   14000cad6:	(bad)  
   14000cad7:	(bad)  
   14000cad8:	(bad)  
   14000cad9:	inc    eax
   14000cadb:	(bad)  
   14000cadc:	inc    eax
   14000cade:	add    BYTE PTR [rdi],bh
   14000cae0:	rol    BYTE PTR [rax],0x0
   14000cae3:	xadd   BYTE PTR [rax],al
   14000cae6:	add    BYTE PTR [rdi],cl
   14000cae8:	rol    BYTE PTR [rax],0x0
   14000caeb:	xadd   BYTE PTR [rax],al
   14000caee:	add    BYTE PTR [rdi],cl
   14000caf0:	rol    BYTE PTR [rax],0x0
   14000caf3:	xadd   BYTE PTR [rax],al
   14000caf6:	add    BYTE PTR [rdi],cl
   14000caf8:	rol    BYTE PTR [rax],0x0
   14000cafb:	xadd   BYTE PTR [rax],al
   14000cafe:	add    BYTE PTR [rdi],cl
   14000cb00:	rol    BYTE PTR [rax],0x0
   14000cb03:	xadd   BYTE PTR [rax],al
   14000cb06:	add    BYTE PTR [rdi],cl
   14000cb08:	rol    BYTE PTR [rax],0x0
   14000cb0b:	xadd   BYTE PTR [rax],al
   14000cb0e:	add    BYTE PTR [rdi],cl
   14000cb10:	rol    BYTE PTR [rax],0x0
   14000cb13:	xadd   BYTE PTR [rax],al
   14000cb16:	add    BYTE PTR [rdi],cl
   14000cb18:	rol    BYTE PTR [rax],0x0
   14000cb1b:	xadd   BYTE PTR [rax],al
   14000cb1e:	add    BYTE PTR [rdi],cl
   14000cb20:	rol    BYTE PTR [rax],0x0
   14000cb23:	xadd   BYTE PTR [rax],al
   14000cb26:	add    BYTE PTR [rdi],cl
   14000cb28:	rol    BYTE PTR [rax],0x0
   14000cb2b:	xadd   BYTE PTR [rax],al
   14000cb2e:	add    BYTE PTR [rdi],cl
   14000cb30:	rol    BYTE PTR [rax],0x0
   14000cb33:	xadd   BYTE PTR [rax],al
   14000cb36:	add    BYTE PTR [rdi],cl
   14000cb38:	loopne 0x14000cb3a
   14000cb3a:	add    BYTE PTR [rdi-0x1],bh
   14000cb3d:	(bad)  
   14000cb3e:	(bad)  
   14000cb3f:	(bad)  
   14000cb40:	(bad)  
   14000cb41:	(bad)  
   14000cb42:	(bad)  
   14000cb43:	(bad)  
   14000cb44:	(bad)  
   14000cb45:	(bad)  
   14000cb46:	(bad)  
   14000cb47:	(bad)  
   14000cb48:	(bad)  
   14000cb49:	(bad)  
   14000cb4a:	(bad)  
   14000cb4b:	(bad)  
   14000cb4c:	(bad)  
   14000cb4d:	(bad)  
   14000cb4e:	(bad)  
   14000cb4f:	jmp    FWORD PTR [rax]
   14000cb51:	add    BYTE PTR [rax],al
   14000cb53:	add    BYTE PTR [rax],bl
   14000cb55:	add    BYTE PTR [rax],al
   14000cb57:	add    BYTE PTR [rax],dh
   14000cb59:	add    BYTE PTR [rax],al
   14000cb5b:	add    BYTE PTR [rcx],al
   14000cb5d:	add    BYTE PTR [rax],cl
   14000cb5f:	add    BYTE PTR [rax],al
   14000cb61:	add    BYTE PTR [rax],al
   14000cb63:	add    BYTE PTR [rax+0x2],al
	...
   14000cb6e:	add    BYTE PTR [rax],al
   14000cb70:	add    BYTE PTR [rcx],al
   14000cb72:	add    BYTE PTR [rax],al
   14000cb74:	add    BYTE PTR [rcx],al
   14000cb76:	add    BYTE PTR [rax],al
   14000cb78:	add    BYTE PTR [rax],al
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	mov    bh,0x96
   14000cb7e:	push   rbx
   14000cb7f:	add    BYTE PTR [rax-0x47ffab69],bh
   14000cb85:	cwde   
   14000cb86:	push   rsi
   14000cb87:	add    BYTE PTR [rbp-0x45ffa264],bh
   14000cb8d:	(bad)  
   14000cb8e:	push   0x7aa4ba00
   14000cb93:	add    dl,al
   14000cb95:	lahf   
   14000cb96:	ins    DWORD PTR es:[rdi],dx
   14000cb97:	add    ah,al
   14000cb99:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cb9a:	push   0x6fabca00
   14000cb9f:	add    dh,al
   14000cba1:	lods   al,BYTE PTR ds:[rsi]
   14000cba2:	js     0x14000cba4
   14000cba4:	shr    BYTE PTR [rdi+0x3b000070],1
   14000cbaa:	inc    DWORD PTR [rax]
   14000cbac:	add    BYTE PTR [rbp-0xa],al
   14000cbaf:	add    BYTE PTR [rax],cl
   14000cbb1:	pop    rax
   14000cbb2:	cli    
   14000cbb3:	add    BYTE PTR [rbx+riz*2],cl
   14000cbb6:	repnz add BYTE PTR [rdx],dl
   14000cbb9:	ins    BYTE PTR es:[rdi],dx
   14000cbba:	cmc    
   14000cbbb:	add    BYTE PTR [rcx],bl
   14000cbbd:	push   0x7f0100f1
   14000cbc2:	hlt    
   14000cbc3:	add    BYTE PTR [rdx],cl
   14000cbc5:	jno    0x14000cbc0
   14000cbc7:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e01c245
   14000cbcd:	jl     0x14000cbcd
   14000cbcf:	add    BYTE PTR [rbx],ah
   14000cbd1:	push   0xffffffffffffffef
   14000cbd3:	add    BYTE PTR [rip+0x2500eb7f],dh        # 0x16501b758
   14000cbd9:	ins    DWORD PTR es:[rdi],dx
   14000cbda:	icebp  
   14000cbdb:	add    BYTE PTR [rip+0x2a00f271],ah        # 0x16a01be52
   14000cbe1:	je     0x14000cbd4
   14000cbe3:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b01bf62
   14000cbe9:	jnp    0x14000cbde
   14000cbeb:	add    BYTE PTR [rip+0x3700fd70],ah        # 0x17701c961
   14000cbf1:	jnp    0x14000cbe9
   14000cbf3:	add    BYTE PTR [rsp+rdx*4-0x54],bh
   14000cbf7:	add    BYTE PTR [rdx-0x78],ah
   14000cbfa:	mov    ch,0x0
   14000cbfc:	add    BYTE PTR [rbx-0x77ffff06],al
   14000cc02:	inc    DWORD PTR [rax]
   14000cc04:	or     al,0x8f
   14000cc06:	inc    DWORD PTR [rax]
   14000cc08:	adc    eax,DWORD PTR [rdx-0x78e3ff09]
   14000cc0e:	std    
   14000cc0f:	add    BYTE PTR [rdi],al
   14000cc11:	xchg   ebp,eax
   14000cc12:	inc    DWORD PTR [rax]
   14000cc14:	sbb    eax,0x2c00ff93
   14000cc19:	mov    esp,gs
   14000cc1b:	add    BYTE PTR [rax],ah
   14000cc1d:	xor    edi,0x0
   14000cc20:	(bad)  
   14000cc21:	xor    ch,0x0
   14000cc24:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000cc2a:	test   BYTE PTR [rax],0x2a
   14000cc2d:	mov    dh,dh
   14000cc2f:	add    BYTE PTR [rax],ah
   14000cc31:	mov    edi,edi
   14000cc33:	add    BYTE PTR [rdx],ch
   14000cc35:	(bad)  
   14000cc36:	std    
   14000cc37:	add    BYTE PTR [rbx],bh
   14000cc39:	mov    dh,dh
   14000cc3b:	add    BYTE PTR [rax+rdx*4],ch
   14000cc3e:	test   DWORD PTR [rax],0xf69435
   14000cc44:	rex.WRX xchg rcx,rax
   14000cc46:	leave  
   14000cc47:	add    BYTE PTR [rbp-0x6a],bl
   14000cc4a:	(bad)
   14000cc4d:	nop
   14000cc4e:	xlat   BYTE PTR ds:[rbx]
   14000cc4f:	add    BYTE PTR [rbp-0x6c],ch
   14000cc52:	enter  0x4b00,0x85
   14000cc56:	cmc    
   14000cc57:	add    BYTE PTR [rax-0x71],dl
   14000cc5a:	cmc    
   14000cc5b:	add    BYTE PTR [rax-0x67],al
   14000cc5e:	test   DWORD PTR [rax],0xf59a54
   14000cc64:	gs (bad) 
   14000cc66:	in     eax,dx
   14000cc67:	add    BYTE PTR [rdi-0x5b],ah
   14000cc6a:	test   DWORD PTR [rax],0x97958f
   14000cc70:	test   eax,0x9d00839e
   14000cc75:	movabs ds:0xb7af00b8a68c009a,eax
   14000cc7e:	lods   al,BYTE PTR ds:[rsi]
   14000cc7f:	add    bl,al
   14000cc81:	scas   al,BYTE PTR es:[rdi]
   14000cc82:	xchg   DWORD PTR [rax],eax
   14000cc84:	iret   
   14000cc85:	mov    ch,0x83
   14000cc87:	add    cl,cl
   14000cc89:	mov    bl,0x85
   14000cc8b:	add    dl,cl
   14000cc8d:	mov    ah,0x8a
   14000cc8f:	add    ah,cl
   14000cc91:	mov    dh,0x8d
   14000cc93:	add    dh,cl
   14000cc95:	mov    ecx,0xb8ca0092
   14000cc9a:	xchg   ebp,eax
   14000cc9b:	add    cl,dl
   14000cc9d:	mov    ebx,0xbcd10092
   14000cca2:	xchg   esi,eax
   14000cca3:	add    al,dl
   14000cca5:	mov    ebp,0xc8cb0098
   14000ccaa:	cdq    
   14000ccab:	add    ch,dl
   14000ccad:	rcr    DWORD PTR [rax+rax*1+0x9cc5db],0xd4
   14000ccb5:	leave  
   14000ccb6:	cwde   
   14000ccb7:	add    ch,dl
   14000ccb9:	ret    
   14000ccba:	movabs al,ds:0xa6c9dc00a3c6d800
   14000ccc3:	add    bl,bl
   14000ccc5:	retf   0xac
   14000ccc8:	int    0xd0
   14000ccca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cccb:	add    dh,bl
   14000cccd:	fldcw  WORD PTR [rdi-0x4f393300]
   14000ccd3:	add    ah,bl
   14000ccd5:	int    0xb1
   14000ccd7:	add    ch,bl
   14000ccd9:	sar    DWORD PTR [rcx-0x55321e00],1
   14000ccdf:	add    bh,ah
   14000cce1:	shr    DWORD PTR [rbp-0x4f2f2000],1
   14000cce7:	add    bl,ah
   14000cce9:	shl    BYTE PTR [rbp-0x48291900],cl
   14000ccef:	add    dl,ch
   14000ccf1:	(bad)  
   14000ccf2:	mov    dl,0x0
   14000ccf4:	loopne 0x14000cccf
   14000ccf6:	mov    ch,0x0
   14000ccf8:	(bad)  
   14000ccf9:	fdiv   DWORD PTR [rcx-0x49271500]
   14000ccff:	add    ah,ch
   14000cd01:	(bad)  [rdi-0x432b1f00]
   14000cd07:	add    ch,ah
   14000cd09:	xlat   BYTE PTR ds:[rbx]
   14000cd0a:	mov    edi,0xbad8ea00
   14000cd0f:	add    ch,ch
   14000cd11:	fidivr DWORD PTR [rcx-0x46231300]
   14000cd17:	add    dh,ch
   14000cd19:	fstp   TBYTE PTR [rax+rax*1+0xbddeef]
   14000cd20:	(bad)  
   14000cd22:	mov    esi,0xe4a98d00
   14000cd27:	add    BYTE PTR [rsi-0x7aff1a4d],cl
   14000cd2d:	mov    eax,0xc0b500f8
   14000cd32:	int3   
   14000cd33:	add    BYTE PTR [rdx-0x5aff053c],dl
   14000cd39:	retf   0xf7
   14000cd3c:	mov    ah,0xd3
   14000cd3e:	cli    
   14000cd3f:	add    ch,ah
   14000cd41:	fcmovb st,st(4)
   14000cd43:	add    ch,dh
   14000cd45:	in     al,0xc1
   14000cd47:	add    ch,dh
   14000cd49:	in     al,0xc6
   14000cd4b:	add    al,bh
   14000cd4d:	out    0xc2,al
   14000cd4f:	add    bh,dh
   14000cd51:	out    0xc8,eax
   14000cd53:	add    cl,bh
   14000cd55:	jmp    0x122ebce26
   14000cd5a:	rol    BYTE PTR [rax],cl
   14000cd5c:	out    dx,eax
   14000cd5d:	out    0xd7,al
   14000cd5f:	add    dh,ch
   14000cd61:	jmp    0x126f1ce3a
   14000cd66:	rol    BYTE PTR [rax],cl
   14000cd68:	icebp  
   14000cd69:	jmp    0x11bc3ce49
   14000cd6e:	cli    
   14000cd6f:	add    cl,bl
   14000cd71:	call   0x12dddce72
   14000cd76:	std    
   14000cd77:	add    ah,dh
   14000cd79:	out    dx,al
   14000cd7a:	loop   0x14000cd7c
   14000cd7c:	out    0xf2,al
   14000cd7e:	inc    BYTE PTR [rax]
   14000cd80:	icebp  
   14000cd81:	idiv   ch
   14000cd83:	add    ah,dh
   14000cd85:	clc    
   14000cd86:	std    
   14000cd87:	add    al,bh
   14000cd89:	clc    
   14000cd8a:	clc    
   14000cd8b:	add    bl,bh
   14000cd8d:	cld    
   14000cd8e:	inc    BYTE PTR [rax]
   14000cd90:	(bad)  
   14000cd91:	(bad)  
   14000cd92:	inc    BYTE PTR [rax]
	...
   14000cf74:	(bad)  
   14000cf75:	(bad)  
   14000cf76:	inc    DWORD PTR [rax]
	...
   14000cf84:	add    BYTE PTR [rax],al
   14000cf86:	rex.WXB
   14000cf87:	rex.RXB
   14000cf88:	rex.RX
   14000cf89:	rex.RX
   14000cf8a:	add    BYTE PTR [rax],r8b
	...
   14000cf95:	add    BYTE PTR [rdx+0x47],cl
   14000cf98:	rex.WX
   14000cf99:	rex.WX
   14000cf9a:	rex.RX
   14000cf9b:	rex.RX
   14000cf9c:	rex.WX
   14000cf9d:	rex.WB
   14000cf9e:	rex.WX
   14000cf9f:	rex.WRB
   14000cfa0:	rex.WRB push r9
   14000cfa2:	pop    rbx
   14000cfa3:	add    al,0x8
   14000cfa5:	or     al,BYTE PTR [rax]
   14000cfa7:	add    BYTE PTR [rax],al
   14000cfa9:	rex.RXB
   14000cfaa:	rex.RX
   14000cfab:	rex.X
   14000cfac:	rex.RX
   14000cfad:	rex.RX
   14000cfae:	rex.WX
   14000cfaf:	rex.WRX push rdi
   14000cfb1:	pop    rbx
   14000cfb2:	pop    rdi
   14000cfb3:	pop    rax
   14000cfb4:	push   rdx
   14000cfb5:	push   rbx
   14000cfb6:	pop    rbx
   14000cfb7:	push   rbx
   14000cfb8:	push   rdx
   14000cfb9:	push   rdx
   14000cfba:	pop    rbx
   14000cfbb:	add    DWORD PTR [rcx+0x3],edx
   14000cfbe:	(bad)  
   14000cfbf:	add    BYTE PTR [rsi+0x63],cl
   14000cfc2:	jnp    0x14000d027
   14000cfc4:	pop    rbx
   14000cfc5:	movsxd ebx,DWORD PTR [rdi+0x54]
   14000cfc8:	rex.B
   14000cfc9:	rex
   14000cfca:	rex
   14000cfcb:	push   r12
   14000cfcd:	rex.WRXB push r11
   14000cfcf:	pop    rcx
   14000cfd0:	push   rdx
   14000cfd1:	push   rdx
   14000cfd2:	pop    rdx
   14000cfd3:	add    DWORD PTR [rsi+0x1],esp
   14000cfd6:	je     0x14000cfdb
   14000cfd8:	rex.WX movsxd rax,DWORD PTR [rax+0x6c6a5153]
   14000cfdf:	sbb    eax,0xe0e0e0e
   14000cfe4:	(bad)  
   14000cfe5:	rex
   14000cfe6:	rex.WR push rbx
   14000cfe8:	pop    rdi
   14000cfe9:	pop    rbx
   14000cfea:	pop    rbx
   14000cfeb:	add    esp,DWORD PTR [rsi+0x3]
   14000cfee:	je     0x14000cff2
   14000cff0:	rex.WX pop rax
   14000cff2:	jnp    0x14000d047
   14000cff4:	push   rsp
   14000cff5:	(bad)  
   14000cff6:	or     al,0xd
   14000cff8:	bndldx bnd3,[rax]
   14000cffb:	(bad)  
   14000cffc:	(bad)  
   14000cffd:	(bad)  
   14000cffe:	(bad)  
   14000cfff:	rex.X push rdx
   14000d001:	pop    rbp
   14000d002:	data16 add ah,BYTE PTR [rsi+0x3]
   14000d006:	jbe    0x14000d00a
   14000d008:	rex.WX pop rax
   14000d00a:	jl     0x14000d06b
   14000d00c:	(bad)  
   14000d00d:	or     eax,0xd18703b
   14000d012:	(bad)  
   14000d013:	sbb    bl,BYTE PTR [rdx]
   14000d015:	(bad)  
   14000d016:	(bad)  
   14000d017:	(bad)  
   14000d018:	(bad)  
   14000d019:	push   rbx
   14000d01a:	add    sp,WORD PTR [rsi+0x4]
   14000d01e:	je     0x14000d023
   14000d020:	rex.WX pop rax
   14000d022:	jp     0x14000d08f
   14000d024:	(bad)  
   14000d025:	adc    BYTE PTR [rsi-0x1],bh
   14000d028:	jle    0x14000d066
   14000d02a:	(bad)  
   14000d02b:	nop    DWORD PTR [rdx]
   14000d02e:	adc    DWORD PTR [rip+0x166461f],ebx        # 0x141671653
   14000d034:	add    WORD PTR [rsi+0x2],si
   14000d038:	rex.WX movsxd rbp,DWORD PTR [rdx+0x1d]
   14000d03c:	nop    DWORD PTR [rsi-0x1]
   14000d040:	(bad)  
   14000d041:	(bad)  
   14000d042:	jge    0x14000d060
   14000d044:	(bad)  
   14000d045:	adc    DWORD PTR [rdx],ebx
   14000d047:	adc    BYTE PTR [rsi],bl
   14000d049:	rex.X push rdx
   14000d04b:	add    esp,DWORD PTR [rsi+0x4]
   14000d04e:	je     0x14000d052
   14000d050:	movsxd rbp,DWORD PTR [r14+0x13]
   14000d054:	adc    al,0x1b
   14000d056:	jle    0x14000d057
   14000d058:	(bad)  
   14000d059:	(bad)  
   14000d05a:	inc    DWORD PTR [rbx+0x190f0f6d]
   14000d060:	adc    eax,0x6601513d
   14000d065:	add    esi,DWORD PTR [rsi+0x2]
   14000d068:	rex.WX movsxd rdi,DWORD PTR [rbx]
   14000d06b:	adc    eax,0xff7e2a14
   14000d070:	(bad)  
   14000d071:	(bad)  
   14000d072:	(bad)  
   14000d073:	(bad)  
   14000d074:	inc    DWORD PTR [rcx+0x1f150f38]
   14000d07a:	rex.WRB add al,0x66
   14000d07d:	add    esi,DWORD PTR [rsi+0x2]
   14000d080:	rex.WX pop rax
   14000d082:	xor    BYTE PTR [rdx],ch
   14000d084:	adc    al,0x2a
   14000d086:	jle    0x14000d087
   14000d088:	(bad)  
   14000d089:	(bad)  
   14000d08a:	(bad)  
   14000d08b:	(bad)  
   14000d08c:	(bad)  
   14000d08d:	inc    DWORD PTR [rdx+0x4d201317]
   14000d093:	add    DWORD PTR [rsi+0x4],esp
   14000d096:	je     0x14000d09a
   14000d098:	rex.WX pop rbx
   14000d09a:	xor    BYTE PTR [rip+0xffffffffff7e2b14],ah        # 0x13f7efbb4
   14000d0a0:	(bad)  
   14000d0a1:	(bad)  
   14000d0a2:	(bad)  
   14000d0a3:	(bad)  
   14000d0a4:	(bad)  
   14000d0a5:	inc    DWORD PTR [rcx+0x4d201330]
   14000d0ab:	add    al,0x66
   14000d0ad:	add    DWORD PTR [rsi+0x2],esi
   14000d0b0:	rex.WX pop rax
   14000d0b2:	cmp    esp,DWORD PTR [rip+0xffffffffff7e2b14]        # 0x13f7efbcc
   14000d0b8:	(bad)  
   14000d0b9:	(bad)  
   14000d0ba:	(bad)  
   14000d0bb:	(bad)  
   14000d0bc:	(bad)  
   14000d0bd:	jge    0x14000d0ef
   14000d0bf:	adc    al,0x2a
   14000d0c1:	(bad)  
   14000d0c2:	rex.WX add QWORD PTR [rsi+0x3],rsp
   14000d0c6:	jbe    0x14000d0ca
   14000d0c8:	rex.WX movsxd rax,DWORD PTR [rax+0x2e]
   14000d0cc:	and    al,0x2d
   14000d0ce:	jle    0x14000d0cf
   14000d0d0:	(bad)  
   14000d0d1:	(bad)  
   14000d0d2:	inc    DWORD PTR [rcx+0x2414133c]
   14000d0d8:	cs cmp eax,0x166044d
   14000d0de:	jbe    0x14000d0e2
   14000d0e0:	movsxd rdx,DWORD PTR [r14+0x25]
   14000d0e4:	and    al,0x28
   14000d0e6:	jle    0x14000d0e7
   14000d0e8:	(bad)  
   14000d0e9:	push   QWORD PTR [rcx+0x29]
   14000d0ec:	adc    ebp,DWORD PTR [rbx]
   14000d0ee:	sub    esp,DWORD PTR [rip+0x3590639]        # 0x14359d72d
   14000d0f4:	add    si,WORD PTR [rsi+0x2]
   14000d0f8:	rex.WX movsxd rdi,DWORD PTR [rax+0x36]
   14000d0fc:	and    dh,BYTE PTR [rcx]
   14000d0fe:	(bad)  
   14000d0ff:	(bad)  
   14000d100:	jle    0x14000d13e
   14000d102:	adc    esp,DWORD PTR [rbp*1+0x3d272a2d]
   14000d109:	rex.RX je 0x14000d10d
   14000d10c:	data16 add al,0x74
   14000d10f:	add    ecx,DWORD PTR [rdx+0x58]
   14000d112:	jl     0x14000d15a
   14000d114:	and    esp,DWORD PTR [rbx]
   14000d116:	ins    DWORD PTR es:[rdi],dx
   14000d117:	outs   dx,DWORD PTR ds:[rsi]
   14000d118:	sub    eax,0x2d312c12
   14000d11d:	sub    eax,0x59053a23
   14000d122:	je     0x14000d127
   14000d124:	add    si,WORD PTR [rsi+0x2]
   14000d128:	rex.WB push r11
   14000d12a:	js     0x14000d183
   14000d12c:	and    ah,BYTE PTR ds:[rdx]
   14000d12f:	and    ch,BYTE PTR [rdx+rsi*1]
   14000d132:	xor    dh,BYTE PTR [rcx]
   14000d134:	(bad)  
   14000d135:	cmp    DWORD PTR es:[rsi],eax
   14000d138:	push   rbx
   14000d139:	imul   ax,WORD PTR [rbx],0x466
   14000d13e:	je     0x14000d143
   14000d140:	rex.RX push rdi
   14000d142:	js     0x14000d197
   14000d144:	push   rcx
   14000d145:	rex.RXB xor eax,0x26262626
   14000d14b:	es (bad) 
   14000d14d:	ss rex.X pop rcx
   14000d150:	data16 add bp,WORD PTR gs:[rcx+0x3]
   14000d156:	jbe    0x14000d15a
   14000d158:	rex.WX push rbx
   14000d15a:	js     0x14000d1ad
   14000d15c:	push   rdx
   14000d15d:	jb     0x14000d1ad
   14000d15f:	rex.R
   14000d160:	rex xor esi,DWORD PTR [rdi+rdi*1]
   14000d164:	rex.RXB
   14000d165:	rex.WRX pop rbx
   14000d167:	data16 (bad) 
   14000d169:	pop    rbx
   14000d16a:	je     0x14000d16d
   14000d16c:	add    si,WORD PTR [rdi+0x2]
   14000d170:	rex.WX
   14000d171:	rex.WRB jnp 0x14000d1cf
   14000d174:	push   rdx
   14000d175:	data16 (bad) 
   14000d177:	(bad)  
   14000d178:	(bad)  
   14000d179:	(bad)  
   14000d17a:	(bad)  
   14000d17b:	(bad)  
   14000d17c:	pop    rbp
   14000d17d:	imul   sp,WORD PTR [rsi+0x66],0x7466
   14000d183:	add    al,0x66
   14000d185:	or     BYTE PTR [rax+rax*1+0x0],al
   14000d189:	rex.X or ecx,DWORD PTR [rbx]
   14000d18c:	or     DWORD PTR [rbx],ecx
   14000d18e:	or     DWORD PTR [rcx],ecx
   14000d190:	or     DWORD PTR [rcx],ecx
   14000d192:	or     DWORD PTR [rbx],ecx
   14000d194:	or     BYTE PTR [rax],cl
   14000d196:	or     BYTE PTR [rax],cl
   14000d198:	or     BYTE PTR [rax],cl
   14000d19a:	or     BYTE PTR [rdx],cl
	...
   14000d1b8:	(bad)  
   14000d1b9:	cld    
   14000d1ba:	(bad)  
   14000d1bb:	add    ah,bh
   14000d1bd:	add    BYTE PTR [rbx],al
   14000d1bf:	add    BYTE PTR [rax+0x100],al
	...
   14000d20d:	add    BYTE PTR [rcx],al
   14000d20f:	add    BYTE PTR [rax-0xfff100],al
   14000d215:	(bad)  
   14000d216:	inc    DWORD PTR [rax]
   14000d218:	sub    BYTE PTR [rax],al
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	adc    BYTE PTR [rax],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	and    BYTE PTR [rax],al
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	add    DWORD PTR [rax],eax
   14000d226:	or     BYTE PTR [rax],al
   14000d228:	add    BYTE PTR [rax],al
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	add    BYTE PTR [rcx],al
	...
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	add    BYTE PTR [rcx],al
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	add    BYTE PTR [rcx],al
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	add    BYTE PTR [rax],al
   14000d242:	add    BYTE PTR [rax],al
   14000d244:	leave  
   14000d245:	cwde   
   14000d246:	push   rbp
   14000d247:	add    dl,cl
   14000d249:	(bad)  
   14000d24a:	pop    rax
   14000d24b:	add    bl,cl
   14000d24d:	sahf   
   14000d24e:	pop    rdi
   14000d24f:	add    dl,cl
   14000d251:	stos   DWORD PTR es:[rdi],eax
   14000d252:	outs   dx,DWORD PTR ds:[rsi]
   14000d253:	add    dh,dl
   14000d255:	mov    bl,0x6b
   14000d257:	add    cl,dl
   14000d259:	test   eax,0xafd00070
   14000d25e:	jo     0x14000d260
   14000d260:	fstp   TBYTE PTR [rbx+0x7820007d]
   14000d266:	retf   0x100
   14000d269:	jns    0x14000d253
   14000d26b:	add    BYTE PTR [rcx],al
   14000d26d:	jg     0x14000d263
   14000d26f:	add    BYTE PTR [rsp+rax*4-0x45],al
   14000d273:	add    BYTE PTR [rdx],ah
   14000d275:	adc    esi,0xfa830000
   14000d27b:	add    BYTE PTR [rax],al
   14000d27d:	mov    bh,bh
   14000d27f:	add    BYTE PTR [rdi+rcx*4],cl
   14000d282:	inc    DWORD PTR [rax]
   14000d284:	(bad)  
   14000d285:	xchg   edi,eax
   14000d286:	inc    DWORD PTR [rax]
   14000d288:	sub    al,0x8c
   14000d28a:	in     al,dx
   14000d28b:	add    BYTE PTR [rcx],dh
   14000d28d:	mov    esp,edx
   14000d28f:	add    BYTE PTR [rsi],bh
   14000d291:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d292:	inc    DWORD PTR [rax]
   14000d294:	rex.WRX xchg rcx,rax
   14000d296:	leave  
   14000d297:	add    BYTE PTR [rbp-0x6a],bl
   14000d29a:	(bad)
   14000d29d:	popf   
   14000d29e:	fild   DWORD PTR [rax]
   14000d2a0:	pop    rdi
   14000d2a1:	movabs eax,ds:0xa45e00d3a26d00d9
   14000d2aa:	loope  0x14000d2ac
   14000d2ac:	push   rax
   14000d2ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d2ae:	cli    
   14000d2af:	add    BYTE PTR [rdi-0x62ff686b],cl
   14000d2b5:	movabs ds:0xbcd500acb7af009a,eax
   14000d2be:	mov    al,BYTE PTR [rax]
   14000d2c0:	loopne 0x14000d282
   14000d2c2:	add    DWORD PTR [rax],0x8dc0e2
   14000d2c8:	out    0xc5,al
   14000d2ca:	xchg   ebx,eax
   14000d2cb:	add    cl,ah
   14000d2cd:	enter  0xa3,0xe4
   14000d2d1:	retf   
   14000d2d2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d2d3:	add    dl,ah
   14000d2d5:	int    0xaa
   14000d2d7:	add    bh,ah
   14000d2d9:	shr    DWORD PTR [rbp-0x4d2a1600],1
   14000d2df:	add    bl,ch
   14000d2e1:	fdiv   DWORD PTR [rsi-0x46251300]
   14000d2e7:	add    dh,ch
   14000d2e9:	fstp   TBYTE PTR [rax+rax*1+0xbfe2f3]
   14000d2f0:	cld    
   14000d2f1:	jrcxz  0x14000d2af
   14000d2f3:	add    BYTE PTR [rdx-0x5bff053c],dl
   14000d2f9:	sar    ch,cl
   14000d2fb:	add    bl,al
   14000d2fd:	leave  
   14000d2fe:	retf   0xf800
   14000d301:	out    0xc2,al
   14000d303:	add    bh,dh
   14000d305:	out    0xc8,eax
   14000d307:	add    cl,bh
   14000d309:	jmp    0x12efed3da
   14000d30e:	(bad)  
   14000d30f:	add    ch,bl
   14000d311:	in     eax,dx
   14000d312:	std    
   14000d313:	add    dh,ah
   14000d315:	repnz inc BYTE PTR [rax]
	...
   14000d63c:	(bad)  
   14000d63d:	(bad)  
   14000d63e:	inc    DWORD PTR [rax]
   14000d640:	(bad)  
   14000d641:	add    al,BYTE PTR [rcx]
   14000d643:	add    DWORD PTR [rcx],eax
   14000d645:	add    DWORD PTR [rcx],eax
   14000d647:	add    DWORD PTR [rcx],eax
   14000d649:	add    DWORD PTR [rcx],eax
   14000d64b:	add    DWORD PTR [rcx],eax
   14000d64d:	add    DWORD PTR [rdx],eax
   14000d64f:	(bad)  
   14000d650:	add    ch,BYTE PTR [rdx]
   14000d652:	(bad)  
   14000d653:	es es and eax,0x24242424
   14000d65a:	and    al,0x24
   14000d65c:	and    al,0x24
   14000d65e:	(bad)  
   14000d65f:	add    al,BYTE PTR [rdx]
   14000d661:	sub    BYTE PTR [rcx],ah
   14000d663:	and    BYTE PTR [rax],cl
   14000d665:	sbb    eax,0xc0d0d15
   14000d66a:	sbb    eax,0x24070706
   14000d66f:	add    DWORD PTR [rcx],eax
   14000d671:	sub    ah,BYTE PTR [rcx]
   14000d673:	(bad)  
   14000d674:	adc    eax,0xe0e0e0b
   14000d679:	or     ecx,DWORD PTR [rdx]
   14000d67b:	or     al,0x4
   14000d67d:	(bad)  
   14000d67e:	and    al,0x1
   14000d680:	add    DWORD PTR [rdx],ebp
   14000d682:	and    dl,BYTE PTR [rsi]
   14000d684:	or     edx,DWORD PTR [rcx]
   14000d686:	adc    BYTE PTR cs:[rdi],cl
   14000d689:	pi2fw  mm1,QWORD PTR [rdx]
   14000d68d:	add    eax,0x31010124
   14000d692:	(bad)  
   14000d693:	or     ecx,DWORD PTR [rdi]
   14000d695:	adc    edi,edi
   14000d697:	xor    eax,0xf0f0f1b
   14000d69c:	or     bl,BYTE PTR [rsp]
   14000d69f:	add    DWORD PTR [rcx],eax
   14000d6a1:	xor    edx,DWORD PTR [rdi]
   14000d6a3:	or     ecx,DWORD PTR [rdi]
   14000d6a5:	adc    edi,edi
   14000d6a7:	(bad)  
   14000d6a8:	jmp    FWORD PTR [rsi]
   14000d6aa:	adc    BYTE PTR [rdi],cl
   14000d6ac:	or     ecx,DWORD PTR [rsp]
   14000d6af:	add    DWORD PTR [rcx],eax
   14000d6b1:	xor    edx,DWORD PTR [rbx]
   14000d6b3:	(bad)  
   14000d6b4:	movups xmm7,xmm7
   14000d6b7:	(bad)  
   14000d6b8:	(bad)  
   14000d6b9:	push   QWORD PTR [rsp+rdx*1]
   14000d6bc:	(bad)  
   14000d6bd:	or     DWORD PTR [rcx+rax*1],esp
   14000d6c0:	add    DWORD PTR [rbx],esi
   14000d6c2:	adc    ecx,DWORD PTR [rsi]
   14000d6c4:	movups xmm7,xmm7
   14000d6c7:	(bad)  
   14000d6c8:	(bad)  
   14000d6c9:	push   QWORD PTR [rsp+rdx*1]
   14000d6cc:	(bad)  
   14000d6cd:	or     DWORD PTR [rcx+rax*1],esp
   14000d6d0:	add    DWORD PTR [rbx],esi
   14000d6d2:	(bad)  
   14000d6d3:	(bad)  
   14000d6d4:	movups xmm7,xmm7
   14000d6d7:	(bad)  
   14000d6d8:	jmp    FWORD PTR [rip+0xc0b0f10]        # 0x14c0be5ee
   14000d6de:	and    al,0x1
   14000d6e0:	add    DWORD PTR [rbx],esi
   14000d6e2:	(bad)  
   14000d6e3:	or     ecx,DWORD PTR [rdi]
   14000d6e5:	adc    edi,edi
   14000d6e7:	xor    eax,0xf0f0f14
   14000d6ec:	or     bl,BYTE PTR [rip+0x33010125]        # 0x17301d817
   14000d6f2:	xor    BYTE PTR [rcx],bl
   14000d6f4:	or     edx,DWORD PTR [rcx]
   14000d6f6:	adc    BYTE PTR cs:[rdi],cl
   14000d6f9:	(bad)  
   14000d6fa:	ud2    
   14000d6fc:	(bad)  
   14000d6fd:	or     BYTE PTR [rsi],ah
   14000d6ff:	add    DWORD PTR [rcx],eax
   14000d701:	xor    ebp,DWORD PTR [rbx+rbp*1]
   14000d704:	sbb    cl,BYTE PTR [rbx]
   14000d706:	(bad)  
   14000d707:	(bad)  
   14000d708:	(bad)  
   14000d709:	(bad)  
   14000d70a:	or     edx,DWORD PTR [rip+0x126201f]        # 0x14126f72f
   14000d710:	add    DWORD PTR [rbx],esi
   14000d712:	sub    al,0x30
   14000d714:	sub    al,0x2f
   14000d716:	sbb    dl,BYTE PTR [rdx]
   14000d718:	adc    bl,BYTE PTR [rax]
   14000d71a:	(bad)  
   14000d71b:	and    ah,BYTE PTR [rcx]
   14000d71d:	and    DWORD PTR [rdi],esp
   14000d71f:	add    DWORD PTR [rdx],eax
   14000d721:	xor    esi,DWORD PTR [rbx]
   14000d723:	xor    esi,DWORD PTR [rbx]
   14000d725:	xor    esi,DWORD PTR [rbx]
   14000d727:	xor    esi,DWORD PTR [rbx]
   14000d729:	xor    esi,DWORD PTR [rdx]
   14000d72b:	sub    ch,BYTE PTR [rdx]
   14000d72d:	sub    BYTE PTR [rdx],ch
   14000d72f:	add    al,BYTE PTR [rsi]
   14000d731:	add    eax,DWORD PTR [rcx]
   14000d733:	add    DWORD PTR [rcx],eax
   14000d735:	add    DWORD PTR [rcx],eax
   14000d737:	add    DWORD PTR [rcx],eax
   14000d739:	add    DWORD PTR [rcx],eax
   14000d73b:	add    DWORD PTR [rcx],eax
   14000d73d:	add    DWORD PTR [rdx],eax
   14000d73f:	(bad)  
	...
   14000d780:	mov    DWORD PTR [rax+0x4e],edx
   14000d783:	rex.RXB or eax,0xa1a0a
   14000d789:	add    BYTE PTR [rax],al
   14000d78b:	or     eax,0x52444849
   14000d790:	add    BYTE PTR [rax],al
   14000d792:	add    DWORD PTR [rax],eax
   14000d794:	add    BYTE PTR [rax],al
   14000d796:	add    DWORD PTR [rax],eax
   14000d798:	or     BYTE PTR [rsi],al
   14000d79a:	add    BYTE PTR [rax],al
   14000d79c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000d7a0:	data16 add BYTE PTR [rax],al
   14000d7a3:	and    BYTE PTR [rax],al
   14000d7a5:	rex.WB
   14000d7a6:	rex.R
   14000d7a7:	push   r12
   14000d7a9:	js     0x14000d747
   14000d7ab:	in     al,dx
   14000d7ac:	mov    ebp,0xd725b079
   14000d7b1:	jns    0x14000d7d2
   14000d7b3:	idiv   bl
   14000d7b5:	mov    esi,0xf7d77dd3
   14000d7ba:	fmulp  st(4),st
   14000d7bc:	fwait
   14000d7bd:	add    eax,0x1d8300cb
   14000d7c2:	and    BYTE PTR [rax],cl
   14000d7c4:	outs   dx,BYTE PTR ds:[rsi]
   14000d7c5:	and    cl,al
   14000d7c7:	adc    r8b,BYTE PTR [r9+0x51]
   14000d7cb:	mov    ah,0x23
   14000d7cd:	mov    dl,BYTE PTR [rdx]
   14000d7cf:	and    eax,0x5213a025
   14000d7d4:	mov    eax,ebp
   14000d7d6:	mov    BYTE PTR [rsi+0x4a],dl
   14000d7d9:	rex.WRX stos BYTE PTR es:[rdi],al
   14000d7db:	loop   0x14000d827
   14000d7dd:	mov    ah,0x54
   14000d7df:	test   eax,0x4a54ae52
   14000d7e4:	push   rsi
   14000d7e5:	and    eax,0x5b2594a9
   14000d7ea:	xchg   ecx,eax
   14000d7eb:	movabs ds:0xb15c64d94bcb6ca4,al
   14000d7f4:	rex.WR push rdi
   14000d7f6:	rex.WX mov fs,WORD PTR [rbx+r9*8]
   14000d7fa:	xchg   edx,eax
   14000d7fb:	gs xchg ecx,eax
   14000d7fd:	or     al,0x17
   14000d7ff:	and    BYTE PTR [rcx+rax*1],ah
   14000d802:	adc    BYTE PTR [rax+rax*8],al
   14000d805:	rol    DWORD PTR [rax],0x43
   14000d808:	(bad)  
   14000d809:	xor    BYTE PTR [rbx],cl
   14000d80b:	data16 jnp 0x14000d801
   14000d80e:	idiv   BYTE PTR [rbx-0x1a0c608b]
   14000d814:	(bad)  
   14000d815:	mov    bl,0xf4
   14000d817:	jmp    0x14fbca3da
   14000d81c:	retf   
   14000d81d:	cmp    al,0xcc
   14000d81f:	rex.XB inc DWORD PTR [r8-0x112108c9]
   14000d826:	shl    DWORD PTR [rdi-0x20c160b1],cl
   14000d82c:	jp     0x14000d7ec
   14000d82e:	repz sbb eax,0x1a8d46a0
   14000d834:	xor    eax,0x51a8d46a
   14000d839:	movabs ds:0x51a8d46a351a8d46,eax
   14000d842:	movabs ds:0x51a8d46a351a8d46,eax
   14000d84b:	movabs ds:0x51a8d46a351a8d46,eax
   14000d854:	movabs ds:0x51a8d46a351a8d46,eax
   14000d85d:	movabs ds:0x51a8d46a351a8d46,eax
   14000d866:	movabs ds:0x51a8d46a351a8d46,eax
   14000d86f:	movabs ds:0x51a8d46a351a8d46,eax
   14000d878:	movabs ds:0x51a8d46a351a8d46,eax
   14000d881:	movabs ds:0x51a8d46a351a8d46,eax
   14000d88a:	movabs ds:0x51a8d46a351a8d46,eax
   14000d893:	movabs ds:0x51a8d46a351a8d46,eax
   14000d89c:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8a5:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8ae:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8b7:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8c0:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8c9:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8d2:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8db:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8e4:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8ed:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8f6:	movabs ds:0x51a8d46a351a8d46,eax
   14000d8ff:	movabs ds:0x51a8d46a351a8d46,eax
   14000d908:	movabs ds:0x51a8d46a351a8d46,eax
   14000d911:	movabs ds:0x51a8d46a351a8d46,eax
   14000d91a:	movabs ds:0x51a8d46a351a8d46,eax
   14000d923:	movabs ds:0x6a0375ed073d8d46,eax
   14000d92c:	pop    rsp
   14000d92d:	sbb    edi,DWORD PTR [rsi+rsi*8-0xd]
   14000d931:	(bad)  
   14000d933:	call   0x148406366
   14000d938:	loopne 0x14000d91a
   14000d93a:	pushf  
   14000d93b:	gs out dx,eax
   14000d93d:	jo     0x14000d9be
   14000d93f:	repz loopne 0x14000d8e2
   14000d942:	stos   DWORD PTR es:[rdi],eax
   14000d943:	jnp    0x14000d961
   14000d945:	(bad)  
   14000d946:	add    BYTE PTR [rbx],dh
   14000d948:	add    al,0xb0
   14000d94b:	add    dl,BYTE PTR [rbx]
   14000d94d:	movabs al,ds:0x5be4924c5f14a098
   14000d956:	lea    esi,[rcx+rbx*8]
   14000d959:	xor    al,0x82
   14000d95b:	jrcxz  0x14000d95d
   14000d95d:	and    al,al
   14000d95f:	cmp    al,BYTE PTR [rdi+rcx*2]
   14000d962:	xor    eax,0xc7fdffc5
   14000d968:	outs   dx,DWORD PTR ds:[rsi]
   14000d969:	std    
   14000d96a:	neg    BYTE PTR [rdi+rsi*8+0x350131ae]
   14000d971:	add    edi,DWORD PTR [rax+0x15]
   14000d974:	js     0x14000d949
   14000d976:	adc    edx,ebx
   14000d978:	fwait
   14000d979:	sbb    al,0xad
   14000d97b:	test   cl,al
   14000d97d:	cmp    al,0x7d
   14000d97f:	call   0x15787dab5
   14000d984:	fidivr DWORD PTR [rax+0x54c8d3d0]
   14000d98a:	mov    al,ch
   14000d98c:	push   rsi
   14000d98d:	mov    dl,BYTE PTR [rsi+0x32]
   14000d990:	mov    ecx,0xfbf2d1bc
   14000d995:	sbb    edx,DWORD PTR [rdi]
   14000d997:	iret   
   14000d998:	cld    
   14000d999:	xlat   BYTE PTR ds:[rbx]
   14000d99a:	(bad)  
   14000d99b:	(bad)  
   14000d99c:	mov    edi,0x82accff
   14000d9a1:	and    al,BYTE PTR [rdx]
   14000d9a3:	adc    BYTE PTR [rcx+0x5e],al
   14000d9a6:	jl     0x14000d9a1
   14000d9a8:	gs jns 0x14000d94e
   14000d9ab:	fidivr DWORD PTR [rdi-0x2a136f61]
   14000d9b1:	lea    edi,[rdi]
   14000d9b3:	sti    
   14000d9b4:	stc    
   14000d9b5:	out    dx,eax
   14000d9b6:	clc    
   14000d9b7:	(bad)  
   14000d9b8:	cli    
   14000d9b9:	push   rcx
   14000d9ba:	add    BYTE PTR [rdx+0x311982],al
   14000d9c0:	adc    edx,DWORD PTR [rip+0x4d645f8d]        # 0x18d653953
   14000d9c6:	rex.WR movabs rbx,0xa1a7452772c22280
   14000d9d0:	add    BYTE PTR [rax],al
   14000d9d2:	add    al,0x1a
   14000d9d4:	movsxd edi,ecx
   14000d9d6:	mov    cl,BYTE PTR [rax]
   14000d9d8:	or     eax,0xb23c1c55
   14000d9dd:	(bad)  
   14000d9de:	or     al,0x45
   14000d9e0:	enter  0x43fd,0x0
   14000d9e4:	push   rdx
   14000d9e5:	rex.RB out dx,al
   14000d9e7:	(bad)  
   14000d9e8:	or     DWORD PTR [rcx-0x16e3fbbf],0x45523636
   14000d9f2:	retf   0x5217
   14000d9f5:	add    BYTE PTR [rcx],dl
   14000d9f7:	pop    rcx
   14000d9f8:	and    DWORD PTR [rsi],ecx
   14000d9fa:	adc    BYTE PTR [rax+0x42c0bffc],cl
   14000da00:	adc    ecx,0x60
   14000da03:	push   0xffffffffffffff83
   14000da05:	ins    BYTE PTR es:[rdi],dx
   14000da06:	cmp    eax,0xdebedd71
   14000da0b:	jo     0x14000da6c
   14000da0d:	sub    bl,bh
   14000da0f:	jg     0x14000d9c6
   14000da11:	scas   eax,DWORD PTR es:[rdi]
   14000da12:	mov    bh,0xbe
   14000da14:	jb     0x14000d9cc
   14000da16:	xlat   BYTE PTR ds:[rbx]
   14000da17:	pop    rbp
   14000da18:	jmp    0x130d1ab08
   14000da1d:	and    eax,0xb75ba7c1
   14000da22:	sbb    al,0xbf
   14000da24:	sbb    eax,eax
   14000da26:	pop    rdi
   14000da27:	add    ah,BYTE PTR [rax+0x8]
   14000da2a:	rcl    BYTE PTR [rax],1
   14000da2c:	in     al,0x77
   14000da2e:	(bad)  
   14000da2f:	mov    edi,0x1790034d
   14000da34:	iret   
   14000da35:	(bad)  
   14000da36:	mov    WORD PTR [rax+0x16],fs
   14000da39:	scas   al,BYTE PTR es:[rdi]
   14000da3a:	mov    ecx,0xe7a4e006
   14000da3f:	(bad)  
   14000da40:	add    bh,al
   14000da42:	imul   esi,DWORD PTR [rdi-0x38],0x4feed000
   14000da49:	mov    ecx,0x39828c63
   14000da4e:	mov    ebp,0x5694b469
   14000da53:	movabs ds:0xdffa847ea818b8a0,al
   14000da5c:	or     eax,0x35b24145
   14000da61:	adc    al,0xa3
   14000da63:	movabs eax,ds:0xfc3aa5445660d8d4
   14000da6c:	icebp  
   14000da6d:	(bad)
   14000da70:	and    al,BYTE PTR [rdx-0x6e]
   14000da73:	push   rax
   14000da74:	lahf   
   14000da75:	cdq    
   14000da76:	xor    al,0x13
   14000da78:	mov    BYTE PTR [rcx+rsi*4],bh
   14000da7b:	test   BYTE PTR [rdx],bh
   14000da7d:	in     al,dx
   14000da7e:	out    dx,eax
   14000da7f:	rex.X sub ax,0xa4c5
   14000da84:	sub    BYTE PTR [rax],dl
   14000da86:	cdq    
   14000da87:	sub    eax,0x9fb79713
   14000da8c:	adc    edi,DWORD PTR [rsi-0x39]
   14000da8f:	in     eax,0x2b
   14000da91:	xlat   BYTE PTR ds:[rbx]
   14000da92:	pop    rbx
   14000da93:	mov    ah,BYTE PTR [rbx+rbp*4+0x2dfcca20]
   14000da9a:	std    
   14000da9b:	stc    
   14000da9c:	(bad)  
   14000da9d:	ja     0x14000daaf
   14000da9f:	xchg   esp,eax
   14000daa0:	sub    ebx,DWORD PTR [rdi-0x17e5857d]
   14000daa6:	rex.RB push r15
   14000daa8:	xchg   DWORD PTR [rdx+0xbdc5fbe],esi
   14000daae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000daaf:	or     al,0xc8
   14000dab1:	xchg   DWORD PTR [rdx],ebx
   14000dab3:	fwait
   14000dab4:	(bad)  
   14000dab5:	sub    al,0xa2
   14000dab7:	(bad)  
   14000dab8:	add    al,0x40
   14000daba:	cmp    al,0x5f
   14000dabc:	adc    BYTE PTR [rdx+0x21],ah
   14000dabf:	loope  0x14000da8e
   14000dac1:	or     al,0xeb
   14000dac3:	rex.WXB or rax,0x72422b2c
   14000dac9:	push   rbx
   14000daca:	xchg   ebx,eax
   14000dacb:	out    dx,al
   14000dacc:	push   0x7e3c2c2a
   14000dad1:	mov    cl,0xaf
   14000dad3:	lahf   
   14000dad4:	pop    rbx
   14000dad5:	sbb    DWORD PTR [rcx+0x5c000ab1],ebp
   14000dadb:	cmp    bh,bh
   14000dadd:	retf   0xa763
   14000dae0:	rex.WRXB cmp rax,0x6cd575ff
   14000dae6:	push   0xffffffffffffffb5
   14000dae8:	jo     0x14000dad2
   14000daea:	cwde   
   14000daeb:	push   0x74
   14000daed:	xor    al,0x37
   14000daef:	pop    rdx
   14000daf0:	rex.WXB xchg r12,rax
   14000daf2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000daf3:	(bad)  
   14000daf4:	adc    ah,BYTE PTR [rbp-0x4abb2c6a]
   14000dafa:	sbb    ecx,DWORD PTR [rcx+0x1254caba]
   14000db00:	cs adc rax,0xffffffff83d6f57d
   14000db07:	lea    edi,[rdi-0xa]
   14000db0a:	retf   
   14000db0b:	(bad)  
   14000db0c:	cmp    BYTE PTR [rdx-0x7e],dh
   14000db0f:	mov    ah,dh
   14000db11:	hlt    
   14000db12:	mov    bh,0xbf
   14000db14:	(bad)  
   14000db15:	jno    0x14000dae4
   14000db17:	mov    bl,ch
   14000db19:	mov    bl,0x9f
   14000db1b:	dec    esi
   14000db1d:	add    DWORD PTR [rax],eax
   14000db1f:	inc    DWORD PTR [rax+rax*8]
   14000db22:	and    eax,DWORD PTR [rax]
   14000db24:	test   BYTE PTR [rcx-0x2d888423],cl
   14000db2a:	lahf   
   14000db2b:	nop
   14000db2c:	add    edx,eax
   14000db2e:	adc    DWORD PTR [rcx+0x29],eax
   14000db31:	adc    al,0x0
   14000db34:	push   rdx
   14000db35:	(bad)
   14000db39:	stos   DWORD PTR es:[rdi],eax
   14000db3a:	push   rbx
   14000db3b:	rex.WXB and r13,rax
   14000db3e:	rex.XB clc 
   14000db40:	mov    ecx,DWORD PTR [rax-0x6c5f9e3f]
   14000db46:	xor    eax,0xb330012b
   14000db4b:	data16 movabs ds:0x8234c2d133ca553e,al
   14000db55:	cwde   
   14000db56:	cli    
   14000db57:	jnp    0x14000dbc3
   14000db59:	cdq    
   14000db5a:	(bad)  
   14000db5b:	loopne 0x14000daf5
   14000db5d:	sub    DWORD PTR [rbx+0x52],ecx
   14000db60:	pop    rsi
   14000db61:	repz push rdx
   14000db63:	nop
   14000db64:	cdq    
   14000db65:	xor    al,0x11
   14000db67:	add    DWORD PTR [rsp+rdi*1+0x41],0x493c0897
   14000db6f:	(bad)  
   14000db70:	sbb    dl,BYTE PTR [rbx]
   14000db72:	lea    edi,[rbx+rdi*4+0x5c]
   14000db76:	adc    DWORD PTR [rsi-0x2b],esi
   14000db79:	add    dl,BYTE PTR [rax-0x2b33cc30]
   14000db7f:	and    esp,esi
   14000db81:	sahf   
   14000db82:	stos   DWORD PTR es:[rdi],eax
   14000db83:	add    eax,0x4962c224
   14000db88:	xchg   esp,eax
   14000db89:	movabs ds:0x880de21b9a0ff347,eax
   14000db92:	nop
   14000db93:	adc    al,cl
   14000db95:	add    BYTE PTR [rcx],cl
   14000db97:	mov    WORD PTR [rax-0x7e73527e],gs
   14000db9d:	add    BYTE PTR [rax+0x4a041440],dl
   14000dba3:	(bad)  
   14000dba4:	(bad)  
   14000dba5:	(bad)  
   14000dba6:	(bad)  
   14000dba7:	adc    bh,bl
   14000dba9:	mov    eax,0xbbeca046
   14000dbae:	(bad)  
   14000dbaf:	cmp    al,0x96
   14000dbb1:	fdivr  DWORD PTR [rsi+0x12888660]
   14000dbb7:	pop    rbx
   14000dbb8:	mov    gs,WORD PTR [rbx+0x1100965]
   14000dbbe:	mov    BYTE PTR [rcx],cl
   14000dbc0:	and    BYTE PTR [rdx+0x22],ah
   14000dbc3:	mov    BYTE PTR [rbp+0x6],dh
   14000dbc6:	mov    BYTE PTR [rdi+0x60],bh
   14000dbc9:	loopne 0x14000dbb8
   14000dbcb:	(bad)  
   14000dbcc:	clc    
   14000dbcd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dbce:	mov    dh,0x42
   14000dbd0:	jrcxz  0x14000dc21
   14000dbd2:	pop    rdi
   14000dbd3:	faddp  st(6),st
   14000dbd5:	and    BYTE PTR [rdi],dh
   14000dbd7:	push   rcx
   14000dbd8:	(bad)  
   14000dbd9:	fldcw  WORD PTR [rdi]
   14000dbdb:	jns    0x14000db73
   14000dbdd:	(bad)  
   14000dbde:	jrcxz  0x14000dbb4
   14000dbe0:	mov    bl,0x48
   14000dbe2:	fwait
   14000dbe3:	rex.WRB xor al,0x9b
   14000dbe6:	or     ebp,DWORD PTR [rax-0x4c]
   14000dbe9:	fisttp DWORD PTR [rax+0x1b]
   14000dbec:	rex.WRB jo 0x14000dc12
   14000dbef:	add    DWORD PTR [rcx],ebp
   14000dbf1:	test   DWORD PTR [rcx-0x5948c3da],eax
   14000dbf7:	xchg   ecx,eax
   14000dbf8:	sbb    eax,DWORD PTR [rcx+0x53]
   14000dbfb:	jno    0x14000dbb5
   14000dbfd:	mov    bh,0x38
   14000dbff:	add    eax,0xefc12173
   14000dc04:	mov    esp,0xbfa3eafb
   14000dc09:	div    BYTE PTR [rdi]
   14000dc0b:	jg     0x14000dbf2
   14000dc0d:	xchg   edi,eax
   14000dc0e:	mov    bh,0x40
   14000dc10:	and    al,0x10
   14000dc12:	xor    DWORD PTR [rax+0xb],edi
   14000dc15:	push   0x184d710
   14000dc1a:	jl     0x14000dc12
   14000dc1c:	repz fistp QWORD PTR [rcx]
   14000dc1f:	movabs al,ds:0x2b1db0903c9c27af
   14000dc29:	and    eax,0x948a88c9
   14000dc2e:	mov    ecx,esi
   14000dc30:	adc    DWORD PTR [rcx],eax
   14000dc32:	lea    eax,[rdi+rsi*4+0x56f299a]
   14000dc39:	mov    dl,0x28
   14000dc3b:	or     BYTE PTR [rsi+0x60134889],cl
   14000dc41:	cld    
   14000dc42:	xor    eax,0xb751e289
   14000dc47:	(bad)  
   14000dc48:	pop    rax
   14000dc49:	and    eax,0xa8e10180
   14000dc4e:	(bad)  
   14000dc4f:	xor    al,bl
   14000dc51:	push   rax
   14000dc52:	rol    BYTE PTR [rbp+r11*4+0x4e],1
   14000dc57:	mov    edx,0x20b298a1
   14000dc5c:	jmp    0x1805cb8b1
   14000dc61:	and    BYTE PTR [rdx],dl
   14000dc63:	(bad)  
   14000dc64:	cmp    edx,DWORD PTR [rax]
   14000dc66:	mov    ecx,0x66bd2691
   14000dc6b:	stos   BYTE PTR es:[rdi],al
   14000dc6c:	(bad)  
   14000dc6d:	(bad)  
   14000dc6e:	out    0x33,eax
   14000dc70:	and    cl,BYTE PTR [rsi-0x77735f98]
   14000dc76:	and    bh,bl
   14000dc78:	cmp    eax,0xb4ee33e6
   14000dc7d:	fsub   st,st(3)
   14000dc7f:	and    ch,BYTE PTR [rsp+rax*1+0x9]
   14000dc83:	sub    al,0x31
   14000dc85:	push   rsp
   14000dc86:	loopne 0x14000dc4f
   14000dc88:	sbb    edx,DWORD PTR [rcx-0x517bb8ef]
   14000dc8e:	(bad)  
   14000dc8f:	push   rdx
   14000dc90:	mov    cl,0x48
   14000dc92:	jl     0x14000dc26
   14000dc94:	or     BYTE PTR [rbp+0x49911520],0x84
   14000dc9b:	sub    BYTE PTR [rcx-0x7bb7ed87],al
   14000dca1:	adc    al,0x44
   14000dca3:	enter  0x5ef2,0x44
   14000dca7:	xchg   edx,eax
   14000dca8:	sbb    eax,0x45049100
   14000dcad:	lahf   
   14000dcae:	adc    BYTE PTR [rbx-0x54],cl
   14000dcb2:	xor    DWORD PTR [rcx+0x2f6d6e39],esp
   14000dcb8:	push   rsi
   14000dcb9:	add    al,0x36
   14000dcbb:	rex.X (bad) 
   14000dcbd:	xchg   ebp,eax
   14000dcbe:	add    dl,BYTE PTR [rax]
   14000dcc0:	mov    eax,0x84bb9f5c
   14000dcc5:	mov    esp,0x5cbe22ea
   14000dcca:	jl     0x14000dd17
   14000dccc:	not    eax
   14000dcce:	sahf   
   14000dccf:	cdq    
   14000dcd0:	xchg   BYTE PTR [rbx+0x13e5812],al
   14000dcd6:	push   rax
   14000dcd7:	or     al,0xba
   14000dcd9:	outs   dx,DWORD PTR ds:[rsi]
   14000dcda:	adc    ebx,ecx
   14000dcdc:	scas   eax,DWORD PTR es:[rdi]
   14000dcdd:	hlt    
   14000dcde:	xor    bh,BYTE PTR [rdi+rdi*4]
   14000dce1:	cmp    cl,BYTE PTR [rdx]
   14000dce3:	lea    ecx,[rcx+rdx*4-0x2a1200c3]
   14000dcea:	jbe    0x14000dd63
   14000dcec:	cmp    bl,BYTE PTR [r13+0x581ee945]
   14000dcf3:	nop
   14000dcf4:	push   rsi
   14000dcf5:	mov    ebx,0x5737218b
   14000dcfa:	movzx  edx,WORD PTR [rbx+0x56852d43]
   14000dd01:	sub    esp,DWORD PTR [rcx-0x21a16812]
   14000dd07:	ror    BYTE PTR [rdi+0x5d],cl
   14000dd0a:	sbb    ch,BYTE PTR [rcx+0x7be0a7d8]
   14000dd10:	mov    esp,0xfc7f87a1
   14000dd15:	ret    0xefc9
   14000dd18:	std    
   14000dd19:	fiadd  WORD PTR [rax-0x6e]
   14000dd1c:	and    DWORD PTR [rdi+0x1ced3ada],esi
   14000dd22:	int3   
   14000dd23:	sub    DWORD PTR [rcx-0x1c],ecx
   14000dd26:	mov    dil,0xc3
   14000dd29:	popf   
   14000dd2a:	rex.RX movabs ds:0x36d84e22289c1a16,al
   14000dd34:	ins    BYTE PTR es:[rdi],dx
   14000dd35:	fs (bad) 
   14000dd37:	sbb    al,0x6c
   14000dd39:	stos   DWORD PTR es:[rdi],eax
   14000dd3a:	(bad)  
   14000dd3b:	jg     0x14000dd36
   14000dd3d:	add    DWORD PTR [rdi+0x4f],0x12
   14000dd41:	push   rcx
   14000dd42:	mov    gs,ebx
   14000dd44:	adc    bh,dl
   14000dd46:	test   BYTE PTR [rcx],al
   14000dd48:	cld    
   14000dd49:	out    0x5f,eax
   14000dd4b:	clc    
   14000dd4c:	out    dx,al
   14000dd4d:	mov    edi,0x63e3706f
   14000dd52:	rex.WB
   14000dd53:	rex.X cmp BYTE PTR [rsi-0x58],sil
   14000dd57:	add    DWORD PTR [rsi-0x56],0xffffffd0
   14000dd5b:	outs   dx,BYTE PTR ds:[rsi]
   14000dd5c:	sub    DWORD PTR [rbx+0x12361e2a],edx
   14000dd62:	jne    0x14000dd1d
   14000dd64:	fisttp QWORD PTR [rax-0x32]
   14000dd67:	mov    ah,0xd2
   14000dd69:	in     al,0x6a
   14000dd6b:	(bad)  
   14000dd6c:	jo     0x14000ddbd
   14000dd6e:	xor    DWORD PTR [rdi-0x439ae014],ecx
   14000dd74:	mov    ecx,DWORD PTR [rsi+0x15]
   14000dd77:	adc    DWORD PTR [rbp+0x3699248d],esp
   14000dd7d:	in     eax,dx
   14000dd7e:	sub    al,0xd7
   14000dd80:	fstp   QWORD PTR [rbx+rbx*4+0x6e]
   14000dd84:	cs push 0x1c549189
   14000dd8a:	and    esi,DWORD PTR [rax-0x7d]
   14000dd8d:	push   rcx
   14000dd8e:	cmp    al,0x41
   14000dd90:	cmp    esp,DWORD PTR [rdx+0x65]
   14000dd93:	and    ecx,DWORD PTR [rax]
   14000dd95:	add    al,0x41
   14000dd97:	and    BYTE PTR [rbx],bh
   14000dd99:	(bad)  
   14000dd9a:	sbb    al,0xc9
   14000dd9c:	mov    DWORD PTR [rcx],edx
   14000dd9e:	add    eax,0x86958940
   14000dda3:	jo     0x14000de1a
   14000dda5:	lea    esi,[rbp+0x1c]
   14000dda8:	pop    rcx
   14000dda9:	mov    cl,0x41
   14000ddab:	loop   0x14000ddd2
   14000ddad:	pushf  
   14000ddae:	rex.R
   14000ddaf:	or     BYTE PTR [r10+0x58807140],r8b
   14000ddb6:	ret    0xc062
   14000ddb9:	sub    al,BYTE PTR [rcx+rax*4]
   14000ddbc:	and    al,BYTE PTR [rax+riz*1]
   14000ddbf:	xchg   BYTE PTR [rax],dl
   14000ddc1:	mov    ecx,0xc0b10836
   14000ddc6:	rex
   14000ddc7:	rex push 0xfffffffffffffffc
   14000ddca:	jle    0x14000ddee
   14000ddcc:	add    BYTE PTR [rbx],bl
   14000ddce:	(bad)  
   14000ddcf:	fstp   QWORD PTR [rax+0x4]
   14000ddd2:	retf   0xc840
   14000ddd5:	xor    DWORD PTR [rdi-0x5761a7c0],ebx
   14000dddb:	mov    BYTE PTR [rdx],cl
   14000dddd:	(bad)  
   14000ddde:	or     eax,DWORD PTR [rcx+0x5513420]
   14000dde4:	adc    BYTE PTR [rdx],ah
   14000dde6:	sub    bh,BYTE PTR [rax-0x19dfabae]
   14000ddec:	xor    WORD PTR [rax],0x6209
   14000ddf1:	ins    DWORD PTR es:[rdi],dx
   14000ddf2:	div    DWORD PTR [rdx+0x55]
   14000ddf5:	mov    esi,0x6febac
   14000ddfa:	xor    BYTE PTR [rsi-0x65],bl
   14000ddfd:	sub    DWORD PTR [rbp+0x1b],edx
   14000de00:	xlat   BYTE PTR ds:[rbx]
   14000de01:	rex.WRXB cmp BYTE PTR [r13+0xc],0x7f
   14000de06:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000de07:	adc    BYTE PTR [rsi+rdi*4-0x16594e28],bh
   14000de0e:	jbe    0x14000de63
   14000de10:	imul   edi,DWORD PTR [rip+0x32ac32b3],0x93c00010        # 0x172ad10cd
   14000de1a:	rex.WRXB popf 
   14000de1c:	cmp    BYTE PTR [rdi],bh
   14000de1e:	(bad)  
   14000de20:	pop    rdx
   14000de21:	ins    DWORD PTR es:[rdi],dx
   14000de22:	(bad)  
   14000de23:	(bad)  
   14000de24:	shr    ch,1
   14000de26:	vpaddusw ymm11,ymm11,YMMWORD PTR [rcx+0x5c]
   14000de2b:	xor    cl,BYTE PTR [rbp-0x6c67a892]
   14000de31:	push   rsp
   14000de32:	add    BYTE PTR [rsi-0x10b8fe83],bh
   14000de38:	call   0x16fc8b00d
   14000de3d:	or     eax,0x6195b9e4
   14000de42:	add    bl,BYTE PTR [rax-0x2b]
   14000de45:	and    eax,DWORD PTR [rsi-0x42]
   14000de48:	jbe    0x14000de4b
   14000de4a:	jmp    0x14000dec9
   14000de4c:	or     eax,0x6d2168d5
   14000de51:	xor    al,0xa1
   14000de53:	sbb    ch,BYTE PTR [rcx]
   14000de55:	xchg   esp,eax
   14000de56:	rex.WX mov al,0x36
   14000de59:	adc    ch,BYTE PTR [rbp+riz*2+0x6]
   14000de5d:	or     ebp,DWORD PTR [rcx]
   14000de5f:	rex.XB push r13
   14000de61:	fdiv   DWORD PTR [rsi+0x53]
   14000de64:	shr    edi,1
   14000de66:	dec    eax
   14000de68:	popf   
   14000de69:	or     edi,DWORD PTR [rdi+0x1cf793fa]
   14000de6f:	cmp    BYTE PTR [rip+0x6e6fa5de],bh        # 0x1ae708453
   14000de75:	mov    esp,0x9fc04ee1
   14000de7a:	sti    
   14000de7b:	ret    0x9fd3
   14000de7e:	rex.WRX cmp bpl,r15b
   14000de81:	fadd   st,st(1)
   14000de83:	outs   dx,BYTE PTR ds:[rsi]
   14000de84:	mov    ah,bl
   14000de86:	(bad)  
   14000de87:	sub    eax,0x7fd07140
   14000de8c:	mov    bl,0x46
   14000de8e:	movabs ds:0x7a669d4be99a772e,al
   14000de97:	test   eax,0x512b78a1
   14000de9c:	cmp    al,0x62
   14000de9e:	and    cl,BYTE PTR [rbp+0x44]
   14000dea1:	(bad)  
   14000dea2:	gs out 0xdf,eax
   14000dea5:	rex.WR sbb BYTE PTR [rbx-0x4],r9b
   14000dea9:	lea    edx,[rcx-0x6a]
   14000deac:	(bad)  
   14000dead:	cmc    
   14000deae:	xor    edi,DWORD PTR [rbp+0x78]
   14000deb1:	xchg   esp,eax
   14000deb2:	jmp    0x14000def7
   14000deb4:	fcmove st,st(0)
   14000deb6:	movabs ds:0xcd04c1692b12d231,al
   14000debf:	rex.WR (bad) 
   14000dec1:	jbe    0x14000def3
   14000dec3:	mov    edx,0xa44589ea
   14000dec8:	cld    
   14000dec9:	cmp    bh,ch
   14000decb:	shl    ch,0xda
   14000dece:	movabs eax,ds:0x9304e146bc6cc21d
   14000ded7:	rex.W rol BYTE PTR [rdx-0x5e],1
   14000dedb:	jbe    0x14000df2f
   14000dedd:	rex.WR ja 0x14000df25
   14000dee0:	test   DWORD PTR [rsi+0x27572216],ebp
   14000dee6:	pop    rbx
   14000dee7:	adc    eax,0x8580faba
   14000deec:	(bad)
   14000def1:	lea    ecx,[rax]
   14000def3:	mov    bl,0xf5
   14000def5:	ins    DWORD PTR es:[rdi],dx
   14000def6:	xchg   ebp,eax
   14000def7:	in     eax,0x2a
   14000def9:	adc    DWORD PTR [rcx],ecx
   14000defb:	push   rdi
   14000defc:	xchg   esp,eax
   14000defd:	jae    0x14000dee6
   14000deff:	add    dl,BYTE PTR [rdi]
   14000df01:	fbstp  TBYTE PTR [rbp-0x6a]
   14000df04:	xchg   DWORD PTR [rcx-0xb69136b],edx
   14000df0a:	and    al,0xe6
   14000df0c:	rex.XB (bad) 
   14000df0e:	sti    
   14000df0f:	rex.RX mov bpl,0xfb
   14000df12:	(bad)
   14000df16:	cld    
   14000df17:	cmp    eax,0x3c1265c2
   14000df1c:	adc    BYTE PTR [rsi-0x3a5eb739],dl
   14000df22:	(bad)  
   14000df23:	hlt    
   14000df24:	xor    eax,0x8904c5a6
   14000df29:	out    dx,eax
   14000df2a:	(bad)  
   14000df2b:	out    dx,al
   14000df2c:	stc    
   14000df2d:	mov    al,BYTE PTR [rdi*2-0x51a7ab60]
   14000df34:	xchg   ax,ax
   14000df36:	rex.XB sub eax,0x552d83a2
   14000df3c:	and    bh,BYTE PTR [rdi+rbp*4+0x27]
   14000df40:	mov    ah,0x12
   14000df42:	mov    ch,0x20
   14000df44:	lea    eax,[rcx+rbp*4]
   14000df47:	(bad)  
   14000df48:	imul   ebp,DWORD PTR [rax],0xa6450d32
   14000df4e:	popf   
   14000df4f:	sub    BYTE PTR [rax],dh
   14000df51:	sub    esp,DWORD PTR [rip+0xfa97422]        # 0x14faa5379
   14000df57:	rol    DWORD PTR [rdx-0x2322f04b],1
   14000df5d:	ds jl  0x14000dfc1
   14000df60:	cmp    eax,DWORD PTR [rbx+0x2371641f]
   14000df66:	outs   dx,DWORD PTR ds:[rsi]
   14000df67:	cmp    DWORD PTR [rsi+0x3ade8588],esi
   14000df6d:	cmp    cl,BYTE PTR [rbx+0x16dd8b0a]
   14000df73:	mov    dl,0xa4
   14000df75:	mov    ch,0xbe
   14000df77:	fsubr  QWORD PTR [rbp+0x77]
   14000df7a:	sbb    cl,BYTE PTR [rcx]
   14000df7c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000df7d:	sub    eax,DWORD PTR [rbx+0x3cfff07c]
   14000df83:	mov    edi,0x82ea1ad9
   14000df88:	icebp  
   14000df89:	mov    eax,0xd5fd3f6b
   14000df8e:	rcr    ebx,cl
   14000df90:	out    dx,eax
   14000df91:	cli    
   14000df92:	xchg   ebx,eax
   14000df93:	out    dx,eax
   14000df94:	outs   dx,DWORD PTR ds:[rsi]
   14000df95:	jl     0x14000df89
   14000df97:	adc    esi,DWORD PTR [rdi+0x2d]
   14000df9a:	mov    ebp,0xdecfb138
   14000df9f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dfa0:	js     0x14000df65
   14000dfa2:	sbb    DWORD PTR [rax-0x56e40a9e],eax
   14000dfa8:	movabs ds:0x4cdfa98a3003f112,al
   14000dfb1:	xchg   edx,eax
   14000dfb2:	rex.WXB int 0x54
   14000dfb5:	lods   eax,DWORD PTR ds:[rsi]
   14000dfb6:	xor    eax,0x89a76f14
   14000dfbb:	sbb    dh,BYTE PTR [rdx+0x1998c275]
   14000dfc1:	(bad)  
   14000dfc2:	lea    eax,[rcx+0x0]
   14000dfc5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dfc6:	lea    esi,[rsi+rax*4]
   14000dfc9:	movabs ds:0xe6641a6fcb3f60fc,eax
   14000dfd2:	and    esi,DWORD PTR es:[rdx+0x10]
   14000dfd6:	(bad)  
   14000dfd7:	sub    eax,0x80222930
   14000dfdc:	mov    DWORD PTR [rsi+0x44],eax
   14000dfdf:	sbb    BYTE PTR [rcx],ch
   14000dfe1:	movabs ds:0x94c02c7191d27591,al
   14000dfea:	out    dx,al
   14000dfeb:	out    0xc8,eax
   14000dfed:	mov    WORD PTR [rcx],es
   14000dfef:	add    esp,DWORD PTR [rsi]
   14000dff1:	movsxd ebp,DWORD PTR [rip+0x2c010176]        # 0x16c01e16d
   14000dff7:	(bad)  
   14000dff8:	rex.WX ins DWORD PTR es:[rdi],dx
   14000dffa:	xor    DWORD PTR [rbp-0x48653a9b],0x4e35655e
   14000e004:	pop    rbp
   14000e005:	test   BYTE PTR [rcx+rsi*1-0x5637433a],0xb5
   14000e00d:	sub    BYTE PTR [rsi-0x6a],cl
   14000e010:	(bad)  
   14000e011:	imul   ebx,edi,0x0
   14000e014:	stos   DWORD PTR es:[rdi],eax
   14000e015:	(bad)  
   14000e016:	or     ebx,DWORD PTR [rcx-0x77]
   14000e019:	leave  
   14000e01a:	push   rsi
   14000e01b:	std    
   14000e01c:	(bad)  
   14000e01d:	lahf   
   14000e01e:	xor    esp,DWORD PTR [rbx]
   14000e020:	rex.WRXB ja 0x14000dfc4
   14000e023:	and    eax,DWORD PTR [rbx+rax*4+0x3dd4a3c3]
   14000e02a:	xchg   ecx,eax
   14000e02b:	rex.R mov sil,0xbf
   14000e02e:	(bad)  
   14000e02f:	jns    0x14000e093
   14000e031:	jg     0x14000e074
   14000e033:	or     al,BYTE PTR [rsi-0x36a26fa8]
   14000e039:	in     al,dx
   14000e03a:	and    BYTE PTR [rdi],ch
   14000e03c:	xchg   edx,eax
   14000e03d:	sub    DWORD PTR [rsp+rdx*1+0x3f],ebx
   14000e041:	sbb    esp,eax
   14000e043:	xor    edi,DWORD PTR [rsi+rcx*1]
   14000e046:	xor    al,0x5c
   14000e048:	fadd   QWORD PTR [rcx-0x5e]
   14000e04b:	pop    rdx
   14000e04c:	(bad)  
   14000e04d:	mov    ch,0xa2
   14000e04f:	movabs ds:0x1b4575c5400e2277,al
   14000e058:	add    DWORD PTR [rsi+0x16],esp
   14000e05b:	shl    BYTE PTR [rax+0x4be64c99],0x49
   14000e062:	ret    0x253a
   14000e065:	fs or  eax,0x2640ad26
   14000e06b:	and    DWORD PTR [rsi],esi
   14000e06d:	mov    bl,BYTE PTR [rax+0x12]
   14000e070:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e071:	ret    0x6da3
   14000e074:	push   0x48
   14000e076:	pop    rdi
   14000e077:	out    0xdd,eax
   14000e079:	mov    ebx,0x8bad9b97
   14000e07e:	mov    ebp,0x6fab3ddc
   14000e083:	mov    BYTE PTR [rax-0x68],ah
   14000e086:	(bad)  
   14000e087:	scas   eax,DWORD PTR es:[rdi]
   14000e088:	ds dec ah
   14000e08b:	test   eax,0x2d2ee83f
   14000e090:	movhps QWORD PTR [rdi],xmm1
   14000e093:	fnstsw WORD PTR [rax]
   14000e095:	pop    rax
   14000e096:	cmp    bh,BYTE PTR [rdx+0x74]
   14000e099:	fmul   st,st(5)
   14000e09b:	xchg   ebx,eax
   14000e09c:	ins    BYTE PTR es:[rdi],dx
   14000e09d:	test   eax,0xd2de2c9d
   14000e0a2:	in     al,0xf
   14000e0a4:	std    
   14000e0a5:	cld    
   14000e0a6:	mov    ebx,0xfe07f97
   14000e0ab:	rex.WRX ins DWORD PTR es:[rdi],dx
   14000e0ad:	(bad)  
   14000e0ae:	xlat   BYTE PTR ds:[rbx]
   14000e0af:	sti    
   14000e0b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0b1:	imul   ebp,DWORD PTR [rdi-0x120550f8],0xfc1e5ecf
   14000e0bb:	iret   
   14000e0bc:	and    dh,dl
   14000e0be:	fldpi  
   14000e0c0:	leave  
   14000e0c1:	cdq    
   14000e0c2:	clc    
   14000e0c3:	xchg   BYTE PTR [rbx],dh
   14000e0c5:	add    BYTE PTR [rdx],al
   14000e0c7:	fbstp  TBYTE PTR [rsi-0x14]
   14000e0ca:	jo     0x14000e0f3
   14000e0cc:	es jle 0x14000e0df
   14000e0cf:	enter  0xa830,0xa7
   14000e0d3:	adc    al,0xf5
   14000e0d5:	push   rdx
   14000e0d6:	(bad)  
   14000e0d9:	pushf  
   14000e0da:	push   rcx
   14000e0db:	xchg   ebp,eax
   14000e0dc:	sbb    bh,ah
   14000e0de:	lods   al,BYTE PTR ds:[rsi]
   14000e0df:	pop    rsi
   14000e0e0:	cmp    bl,r9b
   14000e0e3:	jne    0x14000e09c
   14000e0e5:	lahf   
   14000e0e6:	jmp    0x14000e103
   14000e0e8:	rex.RX cdq 
   14000e0ea:	cmp    DWORD PTR [rsi],esp
   14000e0ec:	and    al,BYTE PTR [rdi+0xa4da889]
   14000e0f2:	mov    cl,BYTE PTR [rcx+0x130d330c]
   14000e0f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0f9:	(bad)  
   14000e0fa:	movabs ds:0x270c35e446999b78,al
   14000e103:	lods   al,BYTE PTR ds:[rsi]
   14000e104:	fld    DWORD PTR es:[rax+0x4e]
   14000e108:	stos   BYTE PTR es:[rdi],al
   14000e109:	jnp    0x14000e112
   14000e10b:	and    eax,0x53d9b58b
   14000e110:	ins    DWORD PTR es:[rdi],dx
   14000e111:	rex.WR retf 
   14000e113:	or     BYTE PTR [rcx+rdx*1+0x71208869],dl
   14000e11a:	stos   BYTE PTR es:[rdi],al
   14000e11b:	jne    0x14000e13e
   14000e11d:	hlt    
   14000e11e:	mov    esp,0x23408ae9
   14000e123:	adc    eax,0x65956046
   14000e128:	sub    eax,ecx
   14000e12a:	sub    DWORD PTR [rax+0x2],0xffffffb3
   14000e12e:	add    BYTE PTR [rdx+0x6d],ah
   14000e131:	mov    ebx,0xca889de4
   14000e136:	(bad)  
   14000e137:	fimul  DWORD PTR [rcx+0x4bf8292e]
   14000e13d:	and    DWORD PTR [rsi+0xf2bcba3],ecx
   14000e143:	jmp    0x14000e14e
   14000e145:	sub    esi,DWORD PTR [rdx]
   14000e147:	jnp    0x14000e16d
   14000e149:	lock xor DWORD PTR [rdx-0x45],0x6b1d97c4
   14000e151:	movabs eax,ds:0x68cd381009a9666f
   14000e15a:	push   rdx
   14000e15b:	inc    DWORD PTR [rsi-0x69]
   14000e15e:	mov    ecx,0xa3b7b37e
   14000e163:	jo     0x14000e140
   14000e165:	leave  
   14000e166:	push   rdi
   14000e167:	adc    DWORD PTR [rdx+rcx*1+0x0],ecx
   14000e16b:	and    ebp,DWORD PTR [rbp-0x3a]
   14000e16e:	push   rsp
   14000e16f:	ja     0x14000e171
   14000e171:	xor    BYTE PTR [rsi+0x6],al
   14000e174:	rex.X mov spl,0x2d
   14000e177:	rex.R (bad) 
   14000e179:	or     BYTE PTR [rsi],al
   14000e17b:	and    al,0x1a
   14000e17d:	(bad)  
   14000e17e:	(bad)  
   14000e17f:	cwde   
   14000e180:	movsxd eax,DWORD PTR [rsi+0x75191b24]
   14000e186:	outs   dx,DWORD PTR ds:[rsi]
   14000e187:	ins    BYTE PTR es:[rdi],dx
   14000e188:	stos   DWORD PTR es:[rdi],eax
   14000e189:	pop    rbx
   14000e18a:	rex.RXB (bad) 
   14000e18c:	xchg   ebx,eax
   14000e18d:	jge    0x14000e130
   14000e18f:	add    eax,0x34d1a624
   14000e194:	jns    0x14000e164
   14000e196:	cmp    cl,bh
   14000e198:	cmp    BYTE PTR [rbx],bl
   14000e19a:	cmc    
   14000e19b:	push   rbp
   14000e19c:	ficomp WORD PTR [rdi]
   14000e19e:	mov    al,0xe9
   14000e1a0:	out    0xd4,al
   14000e1a2:	ror    DWORD PTR [rbp-0x7284180b],cl
   14000e1a8:	(bad)  
   14000e1a9:	mov    ebp,0x7e0d9dbb
   14000e1ae:	repnz scas al,BYTE PTR es:[rdi]
   14000e1b0:	(bad)
   14000e1b3:	jrcxz  0x14000e1cc
   14000e1b5:	mov    bh,0x90
   14000e1b7:	push   rbp
   14000e1b8:	scas   al,BYTE PTR es:[rdi]
   14000e1b9:	xlat   BYTE PTR ds:[rbx]
   14000e1ba:	(bad)  
   14000e1bb:	lahf   
   14000e1bc:	add    dh,BYTE PTR [rax+0x18]
   14000e1bf:	shl    BYTE PTR [rbp+0x66fd8f59],0xc2
   14000e1c6:	sbb    ecx,edx
   14000e1c8:	add    dh,bh
   14000e1ca:	mov    edi,DWORD PTR [rdi-0x2]
   14000e1cd:	fadd   QWORD PTR [rdi+0x1]
   14000e1d0:	(bad)  
   14000e1d1:	movabs eax,ds:0x698a6533094f569b
   14000e1da:	enter  0x23c4,0xe7
   14000e1de:	and    edi,ebx
   14000e1e0:	xor    eax,0xce1114d7
   14000e1e5:	mov    ch,0x69
   14000e1e7:	(bad)  
   14000e1e8:	jae    0x14000e25d
   14000e1ea:	and    bl,cl
   14000e1ec:	int    0x51
   14000e1ee:	sub    eax,0x1d088872
   14000e1f3:	push   dx
   14000e1f5:	rex.R and al,0xcc
   14000e1f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e1f9:	adc    esp,esi
   14000e1fb:	jle    0x14000e220
   14000e1fd:	loope  0x14000e18c
   14000e1ff:	rex.R jno 0x14000e251
   14000e202:	adc    DWORD PTR [rdi-0x7b],esp
   14000e205:	xor    al,0x9b
   14000e207:	(bad)  
   14000e208:	repnz jrcxz 0x14000e1cc
   14000e20b:	stos   BYTE PTR es:[rdi],al
   14000e20c:	add    BYTE PTR [rbp+rcx*4-0x49697497],ch
   14000e213:	add    BYTE PTR [rbp+0x40],bl
   14000e216:	(bad)  
   14000e217:	rex.R xchg esp,eax
   14000e219:	adc    BYTE PTR [rcx+0x7],bl
   14000e21c:	(bad)  
   14000e21d:	adc    DWORD PTR [rcx+rax*4],ecx
   14000e220:	mov    ah,0x23
   14000e222:	xor    eax,0x80255b01
   14000e227:	or     eax,DWORD PTR [rdx+0x718b3e29]
   14000e22d:	(bad)  
   14000e22e:	or     BYTE PTR [rsi-0x78734b64],cl
   14000e234:	mov    esp,0x98c85277
   14000e239:	jne    0x14000e278
   14000e23b:	mov    DWORD PTR [rax],edx
   14000e23d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e23e:	(bad)  
   14000e23f:	ret    
   14000e240:	(bad)  
   14000e241:	xor    esi,DWORD PTR [rax-0x52e37224]
   14000e247:	xchg   ecx,eax
   14000e248:	outs   dx,DWORD PTR ds:[rsi]
   14000e249:	fist   DWORD PTR [rax+rdi*1]
   14000e24c:	ror    BYTE PTR [rsp+rcx*8],cl
   14000e24f:	mov    ecx,0xf2a81dca
   14000e254:	rex.WRB
   14000e255:	rex.WX sar BYTE PTR [rbp-0x59],cl
   14000e259:	xchg   BYTE PTR [rsi+0x2d],dl
   14000e25c:	movabs eax,ds:0x644436a28a48371
   14000e265:	stc    
   14000e266:	in     al,0xaa
   14000e268:	lea    edx,[rcx]
   14000e26a:	sub    eax,0xa06264c6
   14000e26f:	add    eax,0x16b10b9c
   14000e274:	and    ch,BYTE PTR [rbp-0x36]
   14000e277:	data16 sbb dh,BYTE PTR [rsi]
   14000e27a:	jae    0x14000e25a
   14000e27c:	cmp    BYTE PTR [rax+rdx*1+0x1c2a5b96],dl
   14000e283:	cmc    
   14000e284:	add    eax,0x40b29312
   14000e289:	and    BYTE PTR [rsi+0x13],al
   14000e28c:	rex.R (bad) 
   14000e28e:	sub    BYTE PTR [rdx+0x4fd538f2],r10b
   14000e295:	mov    edi,0x7992e0f2
   14000e29a:	out    dx,eax
   14000e29b:	ins    DWORD PTR es:[rdi],dx
   14000e29c:	rex.WXB imul rsp,r11,0xffffffff90035f72
   14000e2a3:	sar    BYTE PTR [rsp+rax*1],0xe8
   14000e2a7:	(bad)  
   14000e2a8:	(bad)  
   14000e2a9:	not    esi
   14000e2ab:	jle    0x14000e2bf
   14000e2ad:	sar    BYTE PTR [rdi],0x9e
   14000e2b0:	jmp    0x14000e28b
   14000e2b2:	fild   WORD PTR [rax+rdi*4]
   14000e2b5:	add    DWORD PTR es:[rax-0x73],0x3046caaa
   14000e2bd:	(bad)  
   14000e2be:	(bad)  
   14000e2bf:	div    BYTE PTR [rsi+0x773f2169]
   14000e2c5:	push   rbx
   14000e2c6:	scas   eax,DWORD PTR es:[rdi]
   14000e2c7:	or     BYTE PTR [rax+0x6b],bl
   14000e2ca:	ror    esp,cl
   14000e2cc:	mov    ch,0x39
   14000e2ce:	(bad)  
   14000e2cf:	mov    WORD PTR [rcx+rdx*1],gs
   14000e2d2:	movabs ds:0x88a30c44098ac4c5,eax
   14000e2db:	repnz rex.R shl DWORD PTR [rax],1
   14000e2df:	push   rcx
   14000e2e0:	cmp    al,0x50
   14000e2e2:	int3   
   14000e2e3:	sbb    DWORD PTR [rcx],edx
   14000e2e5:	hlt    
   14000e2e6:	mov    QWORD PTR [rdx+rbp*2-0x5e],r10
   14000e2eb:	std    
   14000e2ec:	xor    BYTE PTR [rdx],ah
   14000e2ee:	test   eax,0x6236d231
   14000e2f3:	(bad)  
   14000e2f4:	rex.R rol BYTE PTR [rsi],1
   14000e2f7:	enter  0x40cd,0x92
   14000e2fb:	adc    BYTE PTR [rax-0x67735dd5],dl
   14000e301:	jb     0x14000e305
   14000e303:	or     al,0x5
   14000e305:	iret   
   14000e306:	rex push rcx
   14000e308:	ret    
   14000e309:	and    al,0x82
   14000e30b:	sub    eax,0x9f34b6db
   14000e310:	(bad)  
   14000e311:	rex.XB pop r14
   14000e313:	push   rdx
   14000e314:	rex.WRXB xchg r10,rax
   14000e316:	jge    0x14000e2ed
   14000e318:	fiadd  DWORD PTR [rip+0xffffffffbc317718]        # 0xfc325a36
   14000e31e:	scas   al,BYTE PTR es:[rdi]
   14000e31f:	cwde   
   14000e320:	(bad)  
   14000e321:	(bad)  
   14000e322:	movsxd ecx,DWORD PTR [rsi-0x7a]
   14000e325:	mov    ecx,0x32a8986a
   14000e32a:	rex.WRB (bad) 
   14000e32c:	xor    bh,dh
   14000e32e:	xchg   edx,eax
   14000e32f:	mov    bh,0x5c
   14000e331:	fimul  DWORD PTR [rax]
   14000e333:	mov    esp,0x7ac46909
   14000e338:	adc    eax,0x2a5956bc
   14000e33d:	cwde   
   14000e33e:	or     esi,DWORD PTR [rdx]
   14000e340:	pop    rax
   14000e341:	mov    DWORD PTR [rip+0xffffffff880445bd],edi        # 0xc8052904
   14000e347:	cdq    
   14000e348:	cld    
   14000e349:	cwde   
   14000e34a:	cmp    eax,0xb48e27cd
   14000e34f:	(bad)  
   14000e350:	xchg   DWORD PTR [rsi],eax
   14000e352:	mov    edx,0x3a3c00d0
   14000e357:	sub    DWORD PTR [rdi+0x378478e7],esi
   14000e35d:	or     eax,0x501222f6
   14000e362:	pushf  
   14000e363:	(bad)  
   14000e364:	xor    DWORD PTR [rsi-0x52d897ef],ecx
   14000e36a:	jbe    0x14000e3a5
   14000e36c:	(bad)  
   14000e36d:	test   DWORD PTR [rsp+rax*4+0x1b4b48b4],eax
   14000e374:	rol    DWORD PTR [rip+0x22b066d0],cl        # 0x162b14a4a
   14000e37a:	(bad)  
   14000e37b:	rex add ebp,DWORD PTR [rbx]
   14000e37e:	sub    eax,0x4c671335
   14000e383:	xchg   esp,eax
   14000e384:	xor    esp,DWORD PTR [rcx+0x57]
   14000e387:	sbb    al,BYTE PTR [rsi]
   14000e389:	add    DWORD PTR [rax],esi
   14000e38b:	and    ch,BYTE PTR [rbp+rcx*4-0x45b91b97]
   14000e392:	rex.RX shl BYTE PTR [rsi],1
   14000e395:	rex.X ret 
   14000e397:	rex.WRX jmp 0xd464e460
   14000e39d:	(bad)  
   14000e39e:	(bad)  
   14000e39f:	rex.RX
   14000e3a0:	rex.WR xchg rsi,rax
   14000e3a2:	add    eax,edi
   14000e3a4:	addr32 cwde 
   14000e3a6:	xchg   edi,eax
   14000e3a7:	leave  
   14000e3a8:	in     al,dx
   14000e3a9:	(bad)  
   14000e3aa:	adc    al,0xfd
   14000e3ac:	cmp    edi,DWORD PTR [rbx-0x2ccd1b24]
   14000e3b2:	cmp    bh,BYTE PTR [rax-0x49]
   14000e3b5:	(bad)  
   14000e3b6:	out    0xc5,eax
   14000e3b8:	ins    BYTE PTR es:[rdi],dx
   14000e3b9:	rex.RX and BYTE PTR [rbp+0x635cf352],r10b
   14000e3c0:	xor    eax,edx
   14000e3c2:	adc    edi,ecx
   14000e3c4:	mov    WORD PTR [rdx],cs
   14000e3c6:	(bad)  
   14000e3c7:	popf   
   14000e3c8:	js     0x14000e42d
   14000e3ca:	jmp    0x1ae4266bd
   14000e3cf:	(bad)  
   14000e3d0:	mov    dh,bl
   14000e3d2:	sbb    BYTE PTR [rbx],dh
   14000e3d4:	rex.WRX (bad) 
   14000e3d6:	adc    eax,0x93a0c118
   14000e3db:	xor    BYTE PTR [rdx+0x33],dh
   14000e3de:	pop    rsi
   14000e3df:	enter  0xdeec,0x8c
   14000e3e3:	fst    QWORD PTR [rbx-0x14]
   14000e3e6:	or     DWORD PTR [rbx],eax
   14000e3e8:	mov    BYTE PTR [rdi],bh
   14000e3ea:	imul   ecx,DWORD PTR [rbp+rax*1-0x24],0x18906119
   14000e3f2:	mov    al,0xb1
   14000e3f4:	push   rbx
   14000e3f5:	je     0x14000e404
   14000e3f7:	add    DWORD PTR [rdx+rbx*2-0x3cdbeae2],edi
   14000e3fe:	add    al,0x3f
   14000e400:	stos   DWORD PTR es:[rdi],eax
   14000e401:	xor    BYTE PTR [rdi-0x43],dh
   14000e404:	scas   al,BYTE PTR es:[rdi]
   14000e405:	jno    0x14000e42b
   14000e407:	(bad)  
   14000e408:	rex.R add al,0x2d
   14000e40b:	adc    DWORD PTR [rcx+0x12],ebp
   14000e40e:	nop
   14000e40f:	pop    rax
   14000e410:	loop   0x14000e3c9
   14000e412:	adc    dl,BYTE PTR [rsi+0x72315a19]
   14000e418:	es retf 0x6519
   14000e41c:	out    0xf2,al
   14000e41e:	cli    
   14000e41f:	xor    al,BYTE PTR [rax-0xeaf5ece]
   14000e425:	jne    0x14000e3fe
   14000e427:	push   rbp
   14000e428:	sar    al,1
   14000e42a:	movabs eax,ds:0x5d72608c5ebf8eb9
   14000e433:	rcr    DWORD PTR [rcx],cl
   14000e435:	shl    DWORD PTR [rbx+rdi*8+0x40262b0e],0x18
   14000e43d:	push   rax
   14000e43e:	mov    ebx,0xc020061
   14000e443:	repnz mov dl,0x1f
   14000e446:	xchg   ebp,eax
   14000e447:	adc    BYTE PTR [rcx],dh
   14000e449:	sbb    BYTE PTR [rip+0xffffffffb146002b],0xa        # 0xf146e47b
   14000e450:	loope  0x14000e43c
   14000e452:	rol    DWORD PTR [rsi-0x52],1
   14000e455:	sbb    eax,DWORD PTR [rdi]
   14000e457:	and    BYTE PTR [rax-0x263ff3c9],dh
   14000e45d:	add    esi,esp
   14000e45f:	sub    ah,BYTE PTR [rsi+rdi*8-0x5fae3aec]
   14000e466:	test   al,0xe2
   14000e468:	fwait
   14000e469:	(bad)  
   14000e46a:	rcr    DWORD PTR [rdx],0x6f
   14000e46d:	adc    al,0x9c
   14000e46f:	jns    0x14000e4e4
   14000e471:	xlat   BYTE PTR ds:[rbx]
   14000e472:	or     DWORD PTR [rbx+0x27],ebx
   14000e475:	mov    DWORD PTR [rax-0x7f6b6eee],ecx
   14000e47b:	rex.R
   14000e47c:	in     al,dx
   14000e47e:	(bad)  
   14000e480:	adc    BYTE PTR cs:[rsi+0x8],al
   14000e484:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e485:	jns    0x14000e44d
   14000e487:	je     0x14000e463
   14000e489:	imul   eax,DWORD PTR [rbx-0x2b],0x2c
   14000e48d:	xchg   edi,eax
   14000e48e:	sbb    eax,0xe4e3306e
   14000e493:	test   BYTE PTR [rbx+0x13],dl
   14000e496:	mov    DWORD PTR [rbx-0x36],edi
   14000e499:	sub    eax,0x6ee31166
   14000e49e:	pop    rdi
   14000e49f:	loopne 0x14000e515
   14000e4a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e4a2:	xor    ch,dh
   14000e4a4:	cld    
   14000e4a5:	fwait
   14000e4a6:	push   rsi
   14000e4a7:	jbe    0x14000e501
   14000e4a9:	jno    0x14000e4ad
   14000e4ab:	cli    
   14000e4ac:	scas   eax,DWORD PTR es:[rdi]
   14000e4ad:	fimul  DWORD PTR [rax+0x346358cc]
   14000e4b3:	jbe    0x14000e46c
   14000e4b5:	movabs eax,ds:0x32f385ec80278e
   14000e4be:	and    DWORD PTR [rax-0x58],0x47a98f0b
   14000e4c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e4c6:	in     eax,0xba
   14000e4c8:	or     cl,BYTE PTR [rax]
   14000e4ca:	fimul  DWORD PTR [rbx]
   14000e4cc:	(bad)  
   14000e4cd:	loopne 0x14000e524
   14000e4cf:	gs (bad) 
   14000e4d1:	rex.WXB
   14000e4d2:	rex.W jae 0x14000e480
   14000e4d5:	rex.WR push rbx
   14000e4d7:	or     ch,dl
   14000e4d9:	(bad)  
   14000e4da:	ror    BYTE PTR [rdx+0x5da7a23],1
   14000e4e0:	mov    bl,0xeb
   14000e4e2:	mov    eax,DWORD PTR [rsi]
   14000e4e4:	sbb    eax,0x24116001
   14000e4e9:	fisubr WORD PTR [rax-0x31ea2378]
   14000e4ef:	stc    
   14000e4f0:	(bad)  
   14000e4f1:	sbb    DWORD PTR [rbp+0x3b1b9fa4],0xfe309d97
   14000e4fb:	out    0xba,al
   14000e4fd:	and    edi,0xfe5c53a7
   14000e503:	jae    0x14000e4b9
   14000e505:	addr32 loop 0x14000e49c
   14000e508:	enter  0xda9c,0xc3
   14000e50c:	jmp    0x14000e4d1
   14000e50e:	or     dh,ah
   14000e510:	rol    DWORD PTR [rsi],cl
   14000e512:	cli    
   14000e513:	stc    
   14000e514:	add    al,0xea
   14000e516:	xchg   ebx,esi
   14000e518:	mov    cs,WORD PTR [rdi+rbx*4+0x44]
   14000e51c:	sub    bh,bl
   14000e51e:	rex.WB sub bl,BYTE PTR [r10-0x72bbac7c]
   14000e525:	mov    ds,WORD PTR [rax]
   14000e527:	shr    BYTE PTR [rdi+rax*8],0xa8
   14000e52b:	add    cl,bl
   14000e52d:	add    al,0xd
   14000e52f:	(bad)  
   14000e530:	push   rsp
   14000e531:	imul   eax,DWORD PTR [rax],0x3b
   14000e534:	and    dh,BYTE PTR [rbx+rbp*4-0x67]
   14000e538:	cmp    al,0xe4
   14000e53a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e53b:	pop    rdi
   14000e53c:	push   rax
   14000e53d:	cmp    DWORD PTR [rsi],esi
   14000e53f:	imul   esp,DWORD PTR [rsi+0x6a],0x11670a9e
   14000e546:	jle    0x14000e540
   14000e548:	push   rcx
   14000e549:	xor    BYTE PTR [rdi+0x37],dh
   14000e54c:	iret   
   14000e54d:	pop    rbp
   14000e54e:	(bad)  
   14000e54f:	outs   dx,DWORD PTR ds:[rsi]
   14000e550:	mov    ecx,DWORD PTR [rdx+0x315c974e]
   14000e556:	(bad)  
   14000e557:	ret    
   14000e558:	(bad)  
   14000e559:	movabs ds:0xd00220d07f41e18d,al
   14000e562:	pop    rbx
   14000e563:	imul   ecx,DWORD PTR [rdx+0x6ad858b3],0x114a7e15
   14000e56d:	or     r11b,BYTE PTR [rdx+0x35]
   14000e571:	test   DWORD PTR [rax],esp
   14000e573:	xchg   edx,eax
   14000e574:	sub    BYTE PTR [rbp-0x5aedeeed],dl
   14000e57a:	xor    ah,BYTE PTR [rdx]
   14000e57c:	xchg   edx,eax
   14000e57d:	mov    ah,0xd3
   14000e57f:	sbb    eax,0x68c24a90
   14000e584:	(bad)  
   14000e585:	ror    BYTE PTR [rsi-0x46],0xc5
   14000e589:	popf   
   14000e58a:	rex.B xor al,0xd6
   14000e58d:	(bad)  
   14000e58e:	xor    ebx,ebp
   14000e590:	cld    
   14000e591:	xchg   ebp,eax
   14000e592:	jbe    0x14000e55f
   14000e594:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e595:	xor    ecx,0x21
   14000e598:	sbb    DWORD PTR [rdi],ebp
   14000e59a:	neg    DWORD PTR [rdx+0x18]
   14000e59d:	sar    DWORD PTR [rsi+riz*2],0x1
   14000e5a1:	rex.RB mov r15d,0x402d6e86
   14000e5a7:	jl     0x14000e546
   14000e5a9:	push   0x4053f9eb
   14000e5ae:	(bad)  
   14000e5af:	or     DWORD PTR [rsi-0xbf3ffbd],esp
   14000e5b5:	cmp    BYTE PTR [rbp-0xa76e2e5],ch
   14000e5bb:	sbb    DWORD PTR [rbp+0x58],edx
   14000e5be:	or     eax,0xa2a515c2
   14000e5c3:	mov    ss,WORD PTR [rcx-0x53]
   14000e5c6:	add    esp,ebp
   14000e5c8:	mov    BYTE PTR [rdx],dl
   14000e5ca:	(bad)
   14000e5cd:	(bad)
   14000e5d0:	cdq    
   14000e5d1:	mov    al,0x19
   14000e5d3:	adc    ecx,DWORD PTR [rdx+0x53]
   14000e5d6:	mov    ss,ecx
   14000e5d8:	lods   al,BYTE PTR ds:[rsi]
   14000e5d9:	jrcxz  0x14000e640
   14000e5db:	rex.X pop QWORD PTR [rdi]
   14000e5de:	fs mov ch,0xde
   14000e5e1:	fisub  WORD PTR [rax-0x70]
   14000e5e4:	or     al,0xb6
   14000e5e6:	(bad)  
   14000e5e7:	pop    rdx
   14000e5e8:	jp     0x14000e655
   14000e5ea:	lods   eax,DWORD PTR ds:[rsi]
   14000e5eb:	xor    DWORD PTR [rdx],ebx
   14000e5ed:	or     eax,0x52d36dd3
   14000e5f2:	in     al,dx
   14000e5f3:	ins    BYTE PTR es:[rdi],dx
   14000e5f4:	adc    al,0x1f
   14000e5f6:	std    
   14000e5f7:	ret    
   14000e5f8:	and    BYTE PTR [rax],dl
   14000e5fa:	rex.WXB and BYTE PTR [r14+0x26],dil
   14000e5fe:	imul   ecx,DWORD PTR [rdi+0x191022b2],0xffffff90
   14000e605:	out    dx,al
   14000e606:	or     DWORD PTR [rcx+0x1300e790],0x41
   14000e60d:	xchg   ebx,eax
   14000e60e:	or     eax,0xdb06c9b2
   14000e613:	and    bh,BYTE PTR [rcx+0x39661836]
   14000e619:	sub    ecx,esi
   14000e61b:	add    eax,0xe69a7392
   14000e620:	pushf  
   14000e621:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e622:	movabs ds:0x44c0175dbaa34d1a,al
   14000e62b:	mov    dh,0xa3
   14000e62d:	test   al,0x68
   14000e62f:	mov    BYTE PTR gs:[rbx-0x24],dl
   14000e633:	sbb    DWORD PTR [rcx],0xd2e6224c
   14000e639:	mov    cl,0x68
   14000e63b:	rol    BYTE PTR [rbx-0x3a],0xcb
   14000e63f:	mov    ebp,0x16691
   14000e644:	or     al,0x46
   14000e646:	push   rbp
   14000e647:	(bad)  
   14000e648:	mov    edi,0x9df0b8c5
   14000e64d:	ficom  WORD PTR [rdx]
   14000e64f:	or     eax,0x6e248c09
   14000e654:	xchg   esi,ecx
   14000e656:	out    0x34,al
   14000e658:	add    DWORD PTR [rax+rcx*8],eax
   14000e65b:	es rex.WR
   14000e65d:	rex.RXB
   14000e65e:	lea    bx,[rdx+0x3]
   14000e662:	fmul   DWORD PTR [rcx]
   14000e664:	sbb    al,0xcf
   14000e666:	stc    
   14000e667:	adc    esp,DWORD PTR [rax]
   14000e669:	rcr    DWORD PTR [rsp+rsi*2+0x1cff1173],cl
   14000e670:	and    bl,BYTE PTR [rdi-0x4b09b304]
   14000e676:	retf   
   14000e677:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e678:	(bad)  
   14000e679:	and    ecx,edx
   14000e67b:	(bad)  
   14000e67c:	rex.WRB sub al,0x4e
   14000e67f:	add    BYTE PTR [rcx+rdx*8+0x6d5cdbd4],dh
   14000e686:	lea    ebp,[rsi+0xcaceb9c]
   14000e68c:	xchg   ebx,eax
   14000e68d:	xchg   BYTE PTR [rsi+0x42],al
   14000e690:	and    BYTE PTR [rcx-0x3b2eed55],dh
   14000e696:	sub    eax,0x622c45fa
   14000e69b:	sbb    eax,0x371d664b
   14000e6a0:	in     eax,0x67
   14000e6a2:	add    BYTE PTR [rdx],al
   14000e6a4:	(bad)  
   14000e6a5:	in     eax,0x97
   14000e6a7:	nop
   14000e6a8:	(bad)  
   14000e6a9:	adc    BYTE PTR [rip+0xffffffffe0201f7e],cl        # 0x12021062d
   14000e6af:	fisubr DWORD PTR [rdx]
   14000e6b1:	rex
   14000e6b2:	rex.RX
   14000e6b3:	rex.WRB ins BYTE PTR es:[rdi],dx
   14000e6b5:	xor    al,0x6e
   14000e6b7:	add    al,BYTE PTR [rax]
   14000e6b9:	lods   al,BYTE PTR ds:[rsi]
   14000e6ba:	ss out dx,eax
   14000e6bc:	rex (bad) 
   14000e6be:	pop    rbp
   14000e6bf:	rex.RX scas eax,DWORD PTR es:[rdi]
   14000e6c1:	jno    0x14000e653
   14000e6c3:	(bad)  
   14000e6c4:	fidiv  DWORD PTR [rdi+0x29]
   14000e6c7:	push   0x34
   14000e6c9:	adc    eax,0x91126a91
   14000e6ce:	mov    BYTE PTR [rcx],dh
   14000e6d0:	(bad)  
   14000e6d1:	(bad)  
   14000e6d2:	std    
   14000e6d3:	ins    BYTE PTR es:[rdi],dx
   14000e6d4:	mov    al,0xba
   14000e6d6:	(bad)  
   14000e6d7:	jmp    0xf34a1e18
   14000e6dc:	test   eax,0x4936d3b9
   14000e6e1:	mov    bl,0x6d
   14000e6e3:	test   al,0xd1
   14000e6e5:	xor    BYTE PTR [rsi+rsi*1-0x33fa677c],bl
   14000e6ec:	loop   0x14000e6c3
   14000e6ee:	mov    WORD PTR [rcx-0x68],?
   14000e6f1:	ror    DWORD PTR [rsi],0x26
   14000e6f4:	push   rdx
   14000e6f5:	cmp    BYTE PTR [rax],dl
   14000e6f7:	jae    0x14000e6ec
   14000e6f9:	mov    eax,0xbaa3aecc
   14000e6fe:	stos   BYTE PTR es:[rdi],al
   14000e6ff:	jne    0x14000e698
   14000e701:	jle    0x14000e718
   14000e703:	lods   eax,DWORD PTR ds:[rsi]
   14000e704:	sbb    DWORD PTR [rcx+rbx*4+0x6],ecx
   14000e708:	adc    al,0x99
   14000e70a:	and    al,0x4e
   14000e70c:	fild   DWORD PTR es:[rip+0xffffffff94919622]        # 0xd4927d35
   14000e713:	out    dx,al
   14000e714:	rex.WRB
   14000e715:	rex (bad) 
   14000e717:	rex.RXB mov r11b,0x0
   14000e71a:	mov    bl,0x4c
   14000e71c:	add    BYTE PTR [rax+0x1f],bl
   14000e71f:	rex.X mov bpl,0xc8
   14000e722:	push   rax
   14000e723:	jae    0x14000e6d2
   14000e725:	add    esp,ebp
   14000e727:	add    BYTE PTR [rcx-0x49ff2e55],dh
   14000e72d:	mov    cl,0xe2
   14000e72f:	adc    edi,DWORD PTR [rbx-0x7085a387]
   14000e735:	jae    0x14000e712
   14000e737:	test   eax,0x60675a0b
   14000e73c:	(bad)  
   14000e73d:	ret    0xee77
   14000e740:	movabs al,ds:0x7cf57fa30345d7c9
   14000e749:	imul   esi,DWORD PTR [rbx-0x1b],0xffffffd2
   14000e74d:	or     ebx,0x24ca76a3
   14000e753:	add    BYTE PTR [rdx-0x24779c98],bl
   14000e759:	in     al,0x14
   14000e75b:	outs   dx,BYTE PTR ds:[rsi]
   14000e75c:	xor    eax,0x7f2c7067
   14000e761:	sbb    DWORD PTR [rdi+0x44a025cc],eax
   14000e767:	out    0xe3,al
   14000e769:	int3   
   14000e76a:	or     cl,dl
   14000e76c:	xor    DWORD PTR [rdx-0x79bb5d54],ecx
   14000e772:	cmp    BYTE PTR [rsp+rdi*2],dh
   14000e775:	or     DWORD PTR [rax],eax
   14000e777:	loope  0x14000e769
   14000e779:	lock je 0x14000e765
   14000e77c:	mov    dh,BYTE PTR [rbp+0x6cd81dd6]
   14000e782:	fadd   QWORD PTR [rbp+rdx*4-0x4297f85b]
   14000e789:	jae    0x14000e7c2
   14000e78b:	(bad)  
   14000e78c:	mov    cl,0xd5
   14000e78e:	ins    BYTE PTR es:[rdi],dx
   14000e78f:	(bad)  
   14000e790:	jbe    0x14000e7ad
   14000e792:	(bad)  
   14000e793:	mov    ah,0x64
   14000e795:	add    DWORD PTR [rcx+0x36],0x58
   14000e799:	fistp  WORD PTR [rax]
   14000e79b:	(bad)  
   14000e79c:	hlt    
   14000e79d:	(bad)  
   14000e79e:	mov    al,0x52
   14000e7a0:	movabs ds:0x2d9a4996cdcd6dba,al
   14000e7a9:	ret    
   14000e7aa:	int    0xa6
   14000e7ac:	nop
   14000e7ad:	rex.WX mov WORD PTR [rbp+0x6],fs
   14000e7b1:	pop    rsp
   14000e7b2:	(bad)  
   14000e7b3:	mov    ah,0xcf
   14000e7b5:	jmp    0x1a3fc6fed
   14000e7ba:	in     al,dx
   14000e7bb:	lea    edx,[rax+rbp*1-0x28]
   14000e7bf:	rex.RXB jg 0x14000e77e
   14000e7c2:	sbb    al,BYTE PTR [rsi+0x30]
   14000e7c5:	(bad)  [rax+rax*2]
   14000e7c8:	pop    rax
   14000e7c9:	(bad)  
   14000e7ca:	pop    rsp
   14000e7cb:	rex.RB (bad) 
   14000e7cd:	fdiv   QWORD PTR [rdx]
   14000e7cf:	stos   DWORD PTR es:[rdi],eax
   14000e7d0:	mov    DWORD PTR [rax],ebx
   14000e7d2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e7d3:	call   0x1a80ab119
   14000e7d8:	xor    eax,0x300692b1
   14000e7dd:	rex.XB (bad) 
   14000e7df:	rol    BYTE PTR [rdx],1
   14000e7e1:	mov    WORD PTR [rdx],gs
   14000e7e3:	mov    bl,0x8
   14000e7e5:	mov    dh,0x6d
   14000e7e7:	mov    ch,0x9
   14000e7e9:	mov    al,0x13
   14000e7eb:	rex.WX
   14000e7ec:	rex.R out dx,eax
   14000e7ee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e7ef:	add    ebx,eax
   14000e7f1:	cmp    ebx,DWORD PTR [rdi-0x5f1015a5]
   14000e7f7:	test   al,0xcd
   14000e7f9:	push   rsp
   14000e7fa:	mul    DWORD PTR [rdi+0x12]
   14000e7fd:	ds rex.WX xchg rbp,rax
   14000e800:	adc    ecx,edx
   14000e802:	(bad)
   14000e805:	sbb    DWORD PTR [rax+rdi*1-0x3f],0xffffffe7
   14000e80a:	mov    bh,0x92
   14000e80c:	outs   dx,BYTE PTR ds:[rsi]
   14000e80d:	(bad)  
   14000e80e:	add    eax,0xb09616a2
   14000e813:	mov    ?,WORD PTR [rbx+0x7b7873f5]
   14000e819:	(bad)  
   14000e81a:	xor    al,0x8e
   14000e81c:	enter  0x9415,0xa5
   14000e820:	push   rsi
   14000e821:	rcr    eax,1
   14000e823:	pop    rax
   14000e824:	retf   0x9603
   14000e827:	fsubr  st,st(5)
   14000e829:	ret    
   14000e82a:	pop    rbx
   14000e82b:	xor    edx,ebp
   14000e82d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e82e:	mov    cl,0xc8
   14000e830:	add    eax,0xc6b4d308
   14000e835:	or     dh,BYTE PTR [rax-0x60]
   14000e838:	call   QWORD PTR [rdx]
   14000e83a:	(bad)  
   14000e83b:	neg    BYTE PTR [rdi-0x3e]
   14000e83e:	lods   eax,DWORD PTR ds:[rsi]
   14000e83f:	jmp    0x14000e820
   14000e841:	rex (bad) 
   14000e843:	sub    eax,0xc2efb46c
   14000e848:	(bad)  
   14000e849:	xor    DWORD PTR [rdi-0x442d352d],0x36ec5d28
   14000e853:	(bad)  
   14000e854:	xchg   esi,eax
   14000e855:	(bad)  
   14000e856:	sbb    ebx,ecx
   14000e858:	sub    bl,cl
   14000e85a:	xchg   ebx,ebx
   14000e85c:	mov    ebp,0x5b1b7ac
   14000e861:	(bad)  
   14000e863:	sub    ebx,DWORD PTR [rbp-0x69123cd8]
   14000e869:	push   rcx
   14000e86a:	lods   eax,DWORD PTR ds:[rsi]
   14000e86b:	xchg   esi,eax
   14000e86c:	test   al,0x76
   14000e86e:	push   rdi
   14000e86f:	jae    0x14000e803
   14000e871:	or     BYTE PTR [rdx+rbp*2-0x54],dl
   14000e875:	fild   WORD PTR [rcx+0x33f3d55d]
   14000e87b:	(bad)  
   14000e87c:	test   eax,0x855c7baa
   14000e881:	mov    esp,0x4b30463a
   14000e886:	sbb    ebx,DWORD PTR [rax]
   14000e888:	push   0xffffffffd7e53899
   14000e88d:	popf   
   14000e88e:	sub    cl,BYTE PTR [rsi-0x36]
   14000e891:	xlat   BYTE PTR ds:[rbx]
   14000e892:	add    edx,DWORD PTR [rbx]
   14000e894:	pushf  
   14000e895:	xor    BYTE PTR [rax-0x65b2b31d],0xdc
   14000e89c:	lahf   
   14000e89d:	add    BYTE PTR [rbx],al
   14000e89f:	or     DWORD PTR [rdi],0x396f8e25
   14000e8a5:	sbb    BYTE PTR [rcx+0x1d804da],bl
   14000e8ab:	movsxd esi,ecx
   14000e8ad:	out    dx,eax
   14000e8ae:	and    dl,BYTE PTR [rdx+0x4e]
   14000e8b1:	clc    
   14000e8b2:	adc    DWORD PTR [rdi],edx
   14000e8b4:	fiadd  WORD PTR [rcx-0x1b]
   14000e8b7:	scas   eax,DWORD PTR es:[rdi]
   14000e8b8:	adc    ch,BYTE PTR [rax-0x36ecee55]
   14000e8be:	addr32 (bad) 
   14000e8c0:	test   BYTE PTR [rdi],bh
   14000e8c2:	push   rsi
   14000e8c3:	jrcxz  0x14000e935
   14000e8c5:	or     ebx,ebx
   14000e8c7:	out    0x4e,eax
   14000e8c9:	loop   0x14000e8a7
   14000e8cb:	jo     0x14000e8de
   14000e8cd:	rex.R or eax,0x784616e
   14000e8d3:	in     al,0x59
   14000e8d5:	cmp    al,0x90
   14000e8d7:	(bad)  
   14000e8d8:	sbb    DWORD PTR [rbx-0x34],0xffffffd9
   14000e8dc:	jo     0x14000e92d
   14000e8de:	mov    bh,0x78
   14000e8e0:	sub    BYTE PTR [rsi+rdx*4-0x11],bh
   14000e8e4:	jrcxz  0x14000e8ef
   14000e8e6:	fist   DWORD PTR [rcx]
   14000e8e8:	jl     0x14000e8ba
   14000e8ea:	cdq    
   14000e8eb:	std    
   14000e8ec:	sbb    ah,BYTE PTR [rbp-0x59]
   14000e8ef:	xchg   esi,eax
   14000e8f0:	fwait
   14000e8f1:	push   0x4dc8836a
   14000e8f6:	jns    0x14000e8bd
   14000e8f8:	rcr    DWORD PTR [rip+0xffffffffb5b77d5e],cl        # 0xf5b8665c
   14000e8fe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e8ff:	data16 mov bl,al
   14000e902:	pop    rbx
   14000e903:	ffreep st(3)
   14000e905:	movabs eax,ds:0xeac23f85c77167ad
   14000e90e:	loop   0x14000e94b
   14000e910:	jo     0x14000e907
   14000e912:	enter  0xb443,0xd5
   14000e916:	mov    ebp,0xeb4ed27
   14000e91b:	es rex.WXB retf 
   14000e91e:	rex.WXB int 0xcd
   14000e921:	cmc    
   14000e922:	in     eax,dx
   14000e923:	rex.B jg 0x14000e8d9
   14000e926:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e927:	repz lea ebp,[rip+0xffffffffa2fbb7ce]        # 0xe2fca0fc
   14000e92e:	pop    rdx
   14000e92f:	fisttp DWORD PTR [rdx+0x35]
   14000e932:	pop    rbx
   14000e933:	pop    rdx
   14000e934:	jne    0x14000e970
   14000e936:	pop    rdx
   14000e937:	xor    eax,0xd0118e5b
   14000e93c:	stos   DWORD PTR es:[rdi],eax
   14000e93d:	ror    BYTE PTR [rax],cl
   14000e93f:	sub    dh,ah
   14000e941:	ds stc 
   14000e943:	in     al,0x6b
   14000e945:	(bad)  
   14000e946:	add    al,0xd5
   14000e948:	cmp    ah,BYTE PTR [rdi]
   14000e94a:	imul   eax,DWORD PTR [rax],0xee7b4022
   14000e950:	add    bl,bl
   14000e953:	repz ficom WORD PTR [rax+rcx*4+0x4f924305]
   14000e95b:	movabs al,ds:0x16a8038d883549ea
   14000e964:	sbb    ebp,eax
   14000e966:	fiadd  DWORD PTR [rdi]
   14000e968:	mov    al,0x13
   14000e96a:	(bad)  
   14000e96b:	lea    eax,[rip+0x8821031]        # 0x14882f9a2
   14000e971:	mov    BYTE PTR [rax-0xe],bh
   14000e974:	movabs ds:0xc57eea01bfd5f89c,al
   14000e97d:	sub    bl,BYTE PTR [rax+rdi*2+0x6a9b065e]
   14000e984:	repz in al,dx
   14000e986:	mov    esp,esi
   14000e988:	cld    
   14000e989:	call   0x1202dfa8e
   14000e98e:	add    BYTE PTR [rsi-0xf],dl
   14000e991:	nop
   14000e992:	jle    0x14000e9b0
   14000e994:	outs   dx,DWORD PTR ds:[rsi]
   14000e995:	(bad)  
   14000e996:	iret   
   14000e997:	movabs al,ds:0xc4f956899b0ac321
   14000e9a0:	rex.XB push r15
   14000e9a2:	sbb    al,0x63
   14000e9a4:	mov    dh,dl
   14000e9a6:	cmc    
   14000e9a7:	mov    BYTE PTR [rbx-0x7e],bl
   14000e9aa:	rex.RX
   14000e9ab:	adc    BYTE PTR [rbx],r10b
   14000e9ae:	mov    ecx,0xd0a5f1
   14000e9b3:	mov    dl,BYTE PTR [rbp+0x6a]
   14000e9b6:	lea    r8d,[r8+0x698e1663]
   14000e9bd:	adc    al,0x2d
   14000e9bf:	mov    bh,0xac
   14000e9c1:	xor    cl,dl
   14000e9c3:	rex.XB sbb al,0x59
   14000e9c6:	jnp    0x14000e9e4
   14000e9c8:	rex.RXB xlat BYTE PTR ds:[rbx]
   14000e9ca:	(bad)  
   14000e9cb:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000e9cd:	jge    0x14000e9e2
   14000e9cf:	scas   al,BYTE PTR es:[rdi]
   14000e9d0:	fdivr  st(0),st
   14000e9d2:	xor    BYTE PTR [rbp+0x6aa0fa1d],ch
   14000e9d8:	(bad)  
   14000e9d9:	pop    rcx
   14000e9da:	in     al,dx
   14000e9db:	(bad)  
   14000e9dc:	rex.XB mov edi,DWORD PTR [r10+0x6d]
   14000e9e0:	ins    DWORD PTR es:[rdi],dx
   14000e9e1:	imul   esi,DWORD PTR [rax-0x28dc8a87],0x5b
   14000e9e8:	cmp    ecx,ebp
   14000e9ea:	inc    BYTE PTR [rax-0x47584488]
   14000e9f0:	fst    st(2)
   14000e9f2:	imul   esi,DWORD PTR [rdi+0x477693ab],0x19532544
   14000e9fc:	sar    DWORD PTR [rsi+rcx*1],0xbe
   14000ea00:	rcl    BYTE PTR [rbx],1
   14000ea02:	(bad)  
   14000ea03:	(bad)  
   14000ea04:	scas   eax,DWORD PTR es:[rdi]
   14000ea05:	adc    DWORD PTR [rcx],0xa8dd5f54
   14000ea0b:	sbb    al,bl
   14000ea0d:	pop    rbx
   14000ea0e:	push   rsp
   14000ea0f:	cmp    eax,0xa2034ff
   14000ea14:	adc    esp,DWORD PTR [rax-0x61bf9888]
   14000ea1a:	sbb    DWORD PTR [rcx-0x7c],ebp
   14000ea1d:	retf   0x5c66
   14000ea20:	(bad)  
   14000ea21:	cmp    r12d,r10d
   14000ea24:	fcomi  st,st(5)
   14000ea26:	xor    edx,DWORD PTR [rbx-0x65]
   14000ea29:	add    BYTE PTR [rbx],bh
   14000ea2b:	or     al,0xbe
   14000ea2e:	jnp    0x14000ea92
   14000ea30:	fwait
   14000ea31:	pop    rax
   14000ea32:	push   0x67
   14000ea34:	leave  
   14000ea35:	mov    edi,0xf2faf123
   14000ea3a:	repz cmp DWORD PTR [rsi+riz*1-0xc1af395],esi
   14000ea42:	pop    rcx
   14000ea43:	outs   dx,DWORD PTR ds:[rsi]
   14000ea44:	mov    ebp,0x67c5f97d
   14000ea49:	outs   dx,DWORD PTR ds:[rsi]
   14000ea4a:	(bad)  
   14000ea4b:	cmp    edi,DWORD PTR [rdx]
   14000ea4d:	fsub   DWORD PTR [rdx]
   14000ea4f:	sbb    al,0xc0
   14000ea51:	add    DWORD PTR [rcx+riz*8+0x78ebe6c3],ebp
   14000ea58:	sar    BYTE PTR [rdi+rbp*2-0x3e],0x35
   14000ea5d:	mov    cl,0x6d
   14000ea5f:	(bad)  
   14000ea60:	and    eax,0xa910360b
   14000ea66:	sahf   
   14000ea67:	pop    rsi
   14000ea68:	rol    BYTE PTR [rsp+rcx*8-0x60],0x2c
   14000ea6d:	in     eax,0x1
   14000ea6f:	mov    edi,0x1d2fc69a
   14000ea74:	je     0x14000e9fb
   14000ea76:	and    bl,bl
   14000ea78:	sub    DWORD PTR [rsi],ebx
   14000ea7a:	mov    dl,0xf1
   14000ea7c:	jge    0x14000ea08
   14000ea7e:	jnp    0x14000ea89
   14000ea80:	xor    BYTE PTR [rsi-0x1],0x15
   14000ea84:	sbb    al,0x3f
   14000ea86:	std    
   14000ea87:	(bad)  
   14000ea88:	jno    0x14000ea5d
   14000ea8a:	sub    edi,edi
   14000ea8c:	(bad)  
   14000ea8d:	xchg   edi,eax
   14000ea8e:	outs   dx,DWORD PTR ds:[rsi]
   14000ea8f:	stc    
   14000ea90:	push   rcx
   14000ea91:	lods   al,BYTE PTR ds:[rsi]
   14000ea92:	(bad)  
   14000ea93:	(bad)  
   14000ea94:	movabs al,ds:0x25e1f0f752e8e1ba
   14000ea9d:	jge    0x14000ea84
   14000ea9f:	repnz cli 
   14000eaa1:	(bad)  
   14000eaa2:	imul   ebp,DWORD PTR [rbp+0x53],0x1b
   14000eaa6:	fld    QWORD PTR [rdi+0x7a6c46c9]
   14000eaac:	jge    0x14000ea53
   14000eaae:	(bad)  
   14000eaaf:	cmp    bh,BYTE PTR [rdx]
   14000eab1:	jmp    0x1aad654e4
   14000eab6:	or     bl,al
   14000eab8:	xor    al,BYTE PTR [rdx]
   14000eaba:	es scas eax,DWORD PTR es:[rdi]
   14000eabc:	retf   
   14000eabd:	push   rsp
   14000eabe:	pop    rcx
   14000eabf:	(bad)  [rsp+rdx*1+0xc]
   14000eac3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eac4:	ror    ch,cl
   14000eac6:	adc    eax,0xc6baf046
   14000eacb:	int    0x4a
   14000eacd:	in     eax,0x73
   14000eacf:	push   rsi
   14000ead0:	ror    DWORD PTR [rdx-0x5a641ff7],1
   14000ead6:	jb     0x14000ea9f
   14000ead8:	add    dl,ah
   14000eada:	adc    DWORD PTR [rbx],0x60
   14000eadd:	push   rax
   14000eade:	(bad)
   14000eae3:	or     al,0x60
   14000eae5:	addr32 in al,dx
   14000eae7:	adc    dh,bh
   14000eae9:	mov    ebx,0x2eafe21b
   14000eaee:	cmp    al,0x1b
   14000eaf0:	addr32 or al,0x33
   14000eaf3:	stos   DWORD PTR es:[rdi],eax
   14000eaf4:	(bad)  
   14000eaf5:	js     0x14000eae4
   14000eaf7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eaf8:	xchg   ebx,eax
   14000eaf9:	rex.WRXB fidivr WORD PTR [r9+0x76]
   14000eafd:	add    eax,DWORD PTR [rdi+0x7403a33]
   14000eb03:	mov    al,0x8a
   14000eb05:	xchg   ebp,ecx
   14000eb07:	movabs ds:0x6af7cd59419e4078,eax
   14000eb10:	mov    eax,0xd9124efd
   14000eb15:	imul   BYTE PTR [rax]
   14000eb17:	rex.WXB jno 0x14000eb49
   14000eb1a:	lods   eax,DWORD PTR ds:[rsi]
   14000eb1b:	mov    ebp,0xed6f8ee4
   14000eb20:	cmp    eax,0x662721d7
   14000eb25:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eb26:	sub    eax,0xe7a05d61
   14000eb2b:	or     eax,0xc100b325
   14000eb30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eb31:	and    BYTE PTR [rip+0x44942ea],ah        # 0x1444a2e21
   14000eb37:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eb38:	movabs ds:0xdcf471f7f17b1c55,eax
   14000eb41:	lahf   
   14000eb42:	(bad)  
   14000eb43:	in     eax,0xd6
   14000eb45:	(bad)  
   14000eb46:	movsxd esp,ebx
   14000eb48:	enter  0xd487,0xb1
   14000eb4c:	fwait
   14000eb4d:	xchg   edi,eax
   14000eb4e:	cmp    eax,ebx
   14000eb50:	rex.XB mov edi,r9d
   14000eb53:	sub    esp,edi
   14000eb55:	test   DWORD PTR cs:[rdi-0x3d],0xd5ad1911
   14000eb5d:	sub    bh,cl
   14000eb5f:	sub    bh,ch
   14000eb61:	cmc    
   14000eb62:	push   rbp
   14000eb63:	mov    dl,0xd0
   14000eb65:	(bad)  
   14000eb66:	leave  
   14000eb67:	ret    0x5692
   14000eb6a:	imul   ebp,DWORD PTR [rdx-0x40],0xc1b2fc4a
   14000eb71:	and    bl,al
   14000eb73:	movabs al,ds:0x5f54618944ccdfa4
   14000eb7c:	xchg   BYTE PTR [rcx-0xb],bh
   14000eb7f:	mov    es,edx
   14000eb81:	xlat   BYTE PTR ds:[rbx]
   14000eb82:	add    edx,DWORD PTR [rbx-0x18528234]
   14000eb88:	jae    0x14000eb8c
   14000eb8a:	rex.X
   14000eb8b:	fs loop 0x14000eb83
   14000eb8e:	pop    rcx
   14000eb8f:	sbb    eax,0x2623b408
   14000eb94:	icebp  
   14000eb95:	jmp    0x13117698a
   14000eb9a:	rex.WRXB xchg r14,rax
   14000eb9c:	cli    
   14000eb9d:	adc    ecx,esi
   14000eb9f:	iret   
   14000eba0:	ins    DWORD PTR es:[rdi],dx
   14000eba1:	cs xchg esp,eax
   14000eba3:	push   rbp
   14000eba4:	mov    eax,0x3b9ead1
   14000eba9:	(bad)  
   14000ebaa:	jle    0x14000ebab
   14000ebac:	(bad)
   14000ebaf:	retf   0x6ab2
   14000ebb2:	rol    DWORD PTR [rax],cl
   14000ebb4:	(bad)  
   14000ebb5:	fs mov esi,0x13cbf789
   14000ebbb:	push   0x2040862
   14000ebc0:	lods   eax,DWORD PTR ds:[rsi]
   14000ebc1:	js     0x14000ebb4
   14000ebc3:	(bad)  
   14000ebc4:	sbb    BYTE PTR [rbp-0x140842a2],bh
   14000ebca:	fsubr  st(3),st
   14000ebcc:	cmp    BYTE PTR [rdx+0x242fdd42],ah
   14000ebd2:	cmp    eax,DWORD PTR [rax-0x53b7c67e]
   14000ebd8:	(bad)  
   14000ebd9:	js     0x14000eb84
   14000ebdb:	sbb    esp,DWORD PTR [rdi]
   14000ebdd:	sbb    al,0x20
   14000ebdf:	xchg   edi,eax
   14000ebe0:	scas   eax,DWORD PTR es:[rdi]
   14000ebe1:	rcr    bh,cl
   14000ebe3:	ds cs add ecx,edi
   14000ebe7:	jno    0x14000eb73
   14000ebe9:	mov    edx,0x18d8fe23
   14000ebee:	scas   al,BYTE PTR es:[rdi]
   14000ebef:	loop   0x14000ebd7
   14000ebf1:	push   rbx
   14000ebf2:	inc    DWORD PTR [rdx]
   14000ebf4:	(bad)  
   14000ebf5:	cs jge 0x14000ec03
   14000ebf8:	push   rdi
   14000ebf9:	out    dx,al
   14000ebfa:	jl     0x14000eb80
   14000ebfc:	xchg   edx,eax
   14000ebfd:	test   DWORD PTR [rbx-0x2d],ebx
   14000ec00:	mov    ebx,0x5d59beef
   14000ec05:	pop    rdx
   14000ec06:	fstp   DWORD PTR [rsp+rbp*4]
   14000ec09:	pop    rsp
   14000ec0a:	pop    rsp
   14000ec0b:	int    0x25
   14000ec0d:	iret   
   14000ec0e:	fldcw  WORD PTR [rax-0x73]
   14000ec11:	push   rcx
   14000ec12:	and    dh,BYTE PTR ss:[rbx]
   14000ec15:	sbb    al,0x70
   14000ec17:	rcr    BYTE PTR [rbp-0x2c],cl
   14000ec1a:	stos   BYTE PTR es:[rdi],al
   14000ec1b:	fnsave [rsi]
   14000ec1d:	pushf  
   14000ec1e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ec1f:	xchg   BYTE PTR [rax-0x7b],bl
   14000ec22:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ec23:	cmp    eax,0x260b5ede
   14000ec28:	leave  
   14000ec29:	sbb    al,0x3d
   14000ec2b:	cmp    eax,0x29707351
   14000ec30:	push   rsp
   14000ec31:	pop    rsi
   14000ec32:	ja     0x14000eca1
   14000ec34:	loopne 0x14000ec8b
   14000ec36:	cwde   
   14000ec37:	mov    ebp,DWORD PTR [rdi+0x55]
   14000ec3a:	in     al,dx
   14000ec3b:	fnstcw WORD PTR [rsi+0x29180c00]
   14000ec41:	and    al,BYTE PTR [rcx]
   14000ec43:	fnstsw WORD PTR [rax+0x67f89f9a]
   14000ec49:	rex.WB std 
   14000ec4b:	imul   esp,ebp,0xe75563e2
   14000ec51:	loope  0x14000ec28
   14000ec53:	adc    ebx,DWORD PTR [rdi-0x45]
   14000ec56:	out    dx,eax
   14000ec57:	(bad)  
   14000ec58:	(bad)  
   14000ec59:	rol    DWORD PTR [rbx],0x44
   14000ec5c:	xchg   DWORD PTR [rax+0x3b],esi
   14000ec5f:	popf   
   14000ec60:	(bad)  
   14000ec61:	rex.WRXB cdqe 
   14000ec63:	(bad)  
   14000ec64:	(bad)
   14000ec67:	sub    DWORD PTR [rax-0x6e],0x8b188242
   14000ec6e:	sub    eax,eax
   14000ec70:	fcomp  st(2)
   14000ec72:	lods   al,BYTE PTR ds:[rsi]
   14000ec73:	(bad)  
   14000ec74:	ret    
   14000ec75:	sbb    eax,0x8100982f
   14000ec7a:	rex.WXB sar BYTE PTR [r15],cl
   14000ec7d:	adc    BYTE PTR [rdi-0x5d7e0a49],bh
   14000ec83:	ficom  WORD PTR [rax+0x7f]
   14000ec86:	movabs eax,ds:0xde84e67956d6dbd6
   14000ec8f:	lock or al,0x24
   14000ec92:	push   0xffffffffe2bebe07
   14000ec97:	sbb    bh,bh
   14000ec99:	lods   eax,DWORD PTR ds:[rsi]
   14000ec9a:	mov    ebp,0xbfc70a79
   14000ec9f:	repz sbb ebx,eax
   14000eca2:	cmp    dh,dh
   14000eca4:	ret    
   14000eca5:	pop    rax
   14000eca6:	mov    ebx,0xec7c93ed
   14000ecab:	xchg   BYTE PTR [rbx],al
   14000ecad:	in     eax,dx
   14000ecae:	in     eax,0xa5
   14000ecb0:	rex.WRX (bad) 
   14000ecb2:	repnz cdq 
   14000ecb4:	rex.WXB std 
   14000ecb6:	(bad)  
   14000ecb7:	jg     0x14000ecbd
   14000ecb9:	or     al,0x47
   14000ecbb:	pushf  
   14000ecbc:	out    0x9a,eax
   14000ecbe:	int3   
   14000ecbf:	xor    BYTE PTR [rbx],ah
   14000ecc1:	mov    ch,0xd0
   14000ecc3:	(bad)  
   14000ecc4:	rex.WB ja 0x14000ecc8
   14000ecc7:	sub    ch,BYTE PTR [rbp+0x8]
   14000ecca:	and    eax,0x6bfbc089
   14000eccf:	(bad)  
   14000ecd0:	ss push rax
   14000ecd2:	in     al,0x2e
   14000ecd4:	cwde   
   14000ecd5:	(bad)  
   14000ecd6:	movsxd ecx,DWORD PTR [rax+riz*4-0xa6bed9e]
   14000ecdd:	mov    ecx,0x954a83dd
   14000ece2:	mov    edi,0x3ff68ad6
   14000ece7:	test   BYTE PTR [rcx+rax*1+0x8905f04],0x89
   14000ecef:	or     BYTE PTR [rbp+0x48ec7116],dl
   14000ecf5:	cld    
   14000ecf6:	adc    esi,DWORD PTR [rax]
   14000ecf8:	rcl    DWORD PTR [rax+rsi*2-0x27],1
   14000ecfc:	(bad)  
   14000ecfd:	adc    DWORD PTR [rdi],esp
   14000ecff:	(bad)  
   14000ed00:	mov    dl,0x31
   14000ed02:	jb     0x14000ed02
   14000ed04:	addr32 mov dh,0xbd
   14000ed07:	fidivr WORD PTR [rsi]
   14000ed09:	cmc    
   14000ed0a:	fdiv   QWORD PTR [rbx+0x6f]
   14000ed0d:	pop    rbx
   14000ed0e:	xor    ecx,ebx
   14000ed10:	leave  
   14000ed11:	add    cl,BYTE PTR [rdi]
   14000ed13:	icebp  
   14000ed14:	or     ecx,edi
   14000ed16:	push   rbx
   14000ed17:	fmul   QWORD PTR [rbp+0x6d136097]
   14000ed1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ed1e:	xchg   ebp,eax
   14000ed1f:	jmp    0x175f635ca
   14000ed24:	jbe    0x14000ecce
   14000ed26:	adc    ch,BYTE PTR [rbx-0x6d3924a0]
   14000ed2c:	fst    DWORD PTR [rdx]
   14000ed2e:	mov    edx,0xbee43c4b
   14000ed33:	(bad)  
   14000ed34:	sbb    al,BYTE PTR [rbx+rbx*2]
   14000ed37:	(bad)  
   14000ed38:	pop    rdi
   14000ed39:	mov    DWORD PTR [rax-0x75],eax
   14000ed3c:	stc    
   14000ed3d:	cmp    DWORD PTR [rax-0x41913569],0x29
   14000ed44:	ins    BYTE PTR es:[rdi],dx
   14000ed45:	ror    cl,1
   14000ed47:	test   ax,0xfc10
   14000ed4b:	cwde   
   14000ed4c:	rex.RXB sub al,0xf6
   14000ed4f:	xchg   edx,eax
   14000ed50:	adc    DWORD PTR [rcx-0x17],esp
   14000ed53:	cld    
   14000ed54:	push   rdi
   14000ed55:	sar    BYTE PTR [rcx-0x4151cb06],1
   14000ed5b:	in     eax,dx
   14000ed5c:	addr32 rex.WB sbb rax,0xffffffffffbd2fb8
   14000ed63:	ficomp WORD PTR [rbx-0x2c]
   14000ed66:	retf   
   14000ed67:	out    0x56,eax
   14000ed69:	cli    
   14000ed6a:	imul   ebp,DWORD PTR [rbx],0xffffffeb
   14000ed6d:	pop    rdx
   14000ed6e:	mov    ah,0x26
   14000ed70:	xor    ebp,eax
   14000ed72:	sub    edx,ecx
   14000ed74:	(bad)  
   14000ed75:	and    al,0xcb
   14000ed77:	sbb    BYTE PTR [rbp-0x38891952],bl
   14000ed7d:	test   al,0x34
   14000ed7f:	xor    eax,0x99824ac2
   14000ed84:	adc    esi,ebp
   14000ed86:	mov    ch,0xe0
   14000ed88:	push   rbp
   14000ed89:	xor    al,BYTE PTR [rdx+0x614992e8]
   14000ed8f:	(bad)  
   14000ed90:	jae    0x14000ed15
   14000ed92:	es jle 0x14000ee12
   14000ed95:	jne    0x14000edec
   14000ed97:	mov    esp,0x3ae44c1e
   14000ed9c:	rcr    BYTE PTR [rsi+0x54088031],0xda
   14000eda3:	lods   al,BYTE PTR ds:[rsi]
   14000eda4:	loope  0x14000edfb
   14000eda6:	adc    bh,BYTE PTR [rdi+0x767744f]
   14000edac:	jmp    0xb63f
   14000edb0:	fsub   DWORD PTR es:[rbx-0x40]
   14000edb4:	(bad)
   14000edb7:	lea    edi,[rbx+rbp*8-0x3e]
   14000edbb:	test   eax,0x6ecf27a3
   14000edc0:	sbb    eax,0x3b88b1cf
   14000edc5:	stc    
   14000edc6:	or     al,0x3e
   14000edc8:	rex.WRX pop rdi
   14000edca:	ret    0xb612
   14000edcd:	add    BYTE PTR [rsp+rdi*4],dh
   14000edd0:	imul   BYTE PTR [rsi-0x11]
   14000edd3:	rex.WRXB sub BYTE PTR [r13-0x2d],r9b
   14000edd7:	adc    DWORD PTR [rax+0x77],esp
   14000edda:	sub    eax,0x603eaa08
   14000eddf:	movsxd ebx,DWORD PTR [rcx]
   14000ede1:	movabs ds:0x887b49c8d88e13dc,eax
   14000edea:	jbe    0x14000ed95
   14000edec:	repz sbb al,0x51
   14000edef:	xchg   ebx,eax
   14000edf0:	test   eax,0x42053b90
   14000edf5:	not    bh
   14000edf7:	add    eax,0x1399dfb5
   14000edfc:	sahf   
   14000edfd:	fadd   DWORD PTR [rbx+0x2f62617f]
   14000ee03:	rex.RB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ee05:	push   rbp
   14000ee06:	retf   0x59ff
   14000ee09:	movabs eax,ds:0xe1b8ab064ceb630e
   14000ee12:	leave  
   14000ee13:	dec    DWORD PTR [rip+0x27e779b]        # 0x1427f65b4
   14000ee19:	fwait
   14000ee1a:	mov    bh,0x7f
   14000ee1c:	xchg   edx,eax
   14000ee1d:	out    dx,eax
   14000ee1e:	mov    edx,0x656768ed
   14000ee23:	mov    cl,0x3d
   14000ee25:	cmp    al,0xfd
   14000ee27:	rol    BYTE PTR [rbp+0x19031891],cl
   14000ee2d:	(bad)  
   14000ee2e:	pop    rcx
   14000ee2f:	mov    ah,0x26
   14000ee31:	cmp    DWORD PTR fs:[rcx],ebp
   14000ee34:	popf   
   14000ee35:	imul   esi,DWORD PTR [rbx+rdi*4-0x20],0x46
   14000ee3a:	retf   
   14000ee3b:	shl    BYTE PTR [rcx],0x1
   14000ee3e:	xchg   esp,eax
   14000ee3f:	cwde   
   14000ee40:	rex fldenv [rax]
   14000ee43:	cwde   
   14000ee44:	xchg   edx,eax
   14000ee45:	rex.WRXB movabs ds:0xc995294f8aaaeafa,rax
   14000ee4f:	scas   al,BYTE PTR es:[rdi]
   14000ee50:	call   0x195219105
   14000ee55:	mov    ch,0xbc
   14000ee57:	jns    0x14000ee6a
   14000ee59:	shl    BYTE PTR [rsi+rdi*4],cl
   14000ee5c:	add    eax,0xce6b80b4
   14000ee61:	add    BYTE PTR [rdx],ah
   14000ee63:	popf   
   14000ee64:	(bad)  
   14000ee66:	rex.WRXB adc QWORD PTR [r9],0x6ef41330
   14000ee6d:	mov    bh,bl
   14000ee6f:	mov    ebp,0x92f5af1f
   14000ee74:	(bad)  
   14000ee75:	mov    ch,0xf7
   14000ee77:	imul   ebp,DWORD PTR [rbp+0x11090899],0x109c44a5
   14000ee81:	pop    rax
   14000ee82:	stc    
   14000ee83:	cmp    al,0x95
   14000ee85:	cs adc eax,0x9fe795ed
   14000ee8b:	mov    esp,0xad9bfbe3
   14000ee90:	adc    DWORD PTR [rsp+rsi*4-0x7a41cf10],0xfffffff7
   14000ee98:	retf   
   14000ee99:	adc    ecx,DWORD PTR [rsi-0x1877e51c]
   14000ee9f:	jmp    0x1812032ef
   14000eea4:	mov    WORD PTR [rsp+rsi*4+0x26],es
   14000eea8:	adc    BYTE PTR [rbp+0x48],dl
   14000eeab:	jp     0x14000ef1f
   14000eead:	(bad)  
   14000eeae:	cmp    eax,0x6097139f
   14000eeb3:	mov    edi,0xc4810d7b
   14000eeb8:	adc    al,0x8e
   14000eeba:	cmp    esi,DWORD PTR [rcx]
   14000eebc:	sub    BYTE PTR [rsi],dl
   14000eebe:	scas   eax,DWORD PTR es:[rdi]
   14000eebf:	adc    al,0x84
   14000eec1:	push   0xffffffffffffff89
   14000eec3:	popf   
   14000eec4:	or     bl,BYTE PTR [rbx-0x31aa2bc2]
   14000eeca:	cmp    eax,DWORD PTR [rax+rdx*2+0x3243dc7a]
   14000eed1:	xchg   BYTE PTR [rax+0x57],dl
   14000eed4:	cmc    
   14000eed5:	xor    al,0x61
   14000eed7:	icebp  
   14000eed8:	(bad)  
   14000eedb:	out    0xd5,al
   14000eedd:	(bad)  
   14000eede:	mov    al,0xfe
   14000eee0:	sahf   
   14000eee1:	call   QWORD PTR [rdx-0x2f4bc792]
   14000eee7:	in     al,dx
   14000eee8:	jbe    0x14000eed8
   14000eeea:	push   rax
   14000eeeb:	(bad)  
   14000eeec:	rex.WRXB sahf 
   14000eeee:	jmp    0x1660d925a
   14000eef3:	iret   
   14000eef4:	sub    bh,ch
   14000eef6:	sbb    DWORD PTR [rbp-0x61b3634d],esp
   14000eefc:	push   rbx
   14000eefd:	mov    edx,0x5b355c84
   14000ef02:	xchg   BYTE PTR [rax-0x47],bl
   14000ef05:	rex.RX
   14000ef06:	rex.WRB jle 0x14000ef5c
   14000ef09:	in     al,dx
   14000ef0a:	sub    BYTE PTR [rdx+0x27],dh
   14000ef0d:	rex.RX adc BYTE PTR [rdx-0x41fd99cf],r15b
   14000ef14:	mov    ecx,0x4ee13d1
   14000ef19:	sahf   
   14000ef1a:	push   rdx
   14000ef1b:	mov    eax,0x83cd57aa
   14000ef20:	push   rdx
   14000ef21:	ds jrcxz 0x14000efa1
   14000ef24:	mov    WORD PTR [rbx-0x36],gs
   14000ef27:	add    BYTE PTR [rdx-0x75039f9f],ah
   14000ef2d:	xor    eax,0x9cc01af1
   14000ef32:	(bad)  
   14000ef33:	out    dx,eax
   14000ef34:	push   0x33ad03c
   14000ef39:	lods   al,BYTE PTR ds:[rsi]
   14000ef3a:	enter  0x11c6,0xb1
   14000ef3e:	(bad)  
   14000ef3f:	add    BYTE PTR [rbx],sil
   14000ef42:	rex.W mov cl,0xdd
   14000ef45:	push   rax
   14000ef46:	and    ah,BYTE PTR [rcx+0x70]
   14000ef49:	ret    0x38c5
   14000ef4c:	cmp    eax,0xeed7f4ff
   14000ef51:	(bad)  
   14000ef52:	popf   
   14000ef53:	sbb    eax,0xc3397669
   14000ef58:	pop    rdi
   14000ef59:	(bad)  
   14000ef5a:	xchg   edi,eax
   14000ef5b:	jno    0x14000ef98
   14000ef5d:	pop    rsi
   14000ef5e:	(bad)  
   14000ef5f:	sub    BYTE PTR [rcx],cl
   14000ef61:	div    ebp
   14000ef63:	sahf   
   14000ef64:	test   BYTE PTR [rdx-0x2833da42],0x87
   14000ef6b:	shl    DWORD PTR [rdx+rcx*4-0x6bb0c1d7],1
   14000ef72:	pop    rsi
   14000ef73:	rex.X (bad) 
   14000ef75:	jns    0x14000eef8
   14000ef77:	add    eax,0x9bb90b36
   14000ef7c:	mov    ebx,0x1a04017
   14000ef81:	mov    cl,0xa9
   14000ef83:	add    eax,DWORD PTR [rcx]
   14000ef85:	rex.RXB cld 
   14000ef87:	sahf   
   14000ef88:	and    DWORD PTR [rax+0x4af0332a],ebx
   14000ef8e:	mov    ch,0x4
   14000ef90:	fistp  DWORD PTR [rsi+0x2a]
   14000ef93:	mov    WORD PTR [rdx+0x66],fs
   14000ef96:	xchg   BYTE PTR [rax+0x54dca4b1],dh
   14000ef9c:	cmp    edi,esp
   14000ef9e:	lahf   
   14000ef9f:	shl    BYTE PTR [rdx+0xe02feb1],0x7f
   14000efa6:	std    
   14000efa7:	jg     0x14000ef69
   14000efa9:	cli    
   14000efaa:	rex.XB mov r15d,0x78e96a48
   14000efb0:	cli    
   14000efb1:	(bad)  
   14000efb2:	ja     0x14000ef90
   14000efb4:	xchg   bh,ah
   14000efb6:	mov    edi,0xb5b8617f
   14000efbb:	mov    esi,0x9064c46d
   14000efc0:	xchg   ecx,eax
   14000efc1:	loope  0x14000f02f
   14000efc3:	rex.XB xchg r11d,eax
   14000efc5:	call   0xc3c6c266
   14000efca:	jns    0x14000efae
   14000efcc:	sbb    al,0x84
   14000efce:	and    BYTE PTR [rdi+0x7e],0x93
   14000efd2:	rcl    DWORD PTR [rsi+0x676f4e2d],0xd4
   14000efd9:	(bad)  
   14000efda:	cmp    BYTE PTR [rdi+0x74166972],ah
   14000efe0:	(bad)  
   14000efe1:	stos   DWORD PTR es:[rdi],eax
   14000efe2:	fnstsw WORD PTR [rbp+0x5da330a6]
   14000efe8:	xor    eax,DWORD PTR [rcx]
   14000efea:	jp     0x14000f057
   14000efec:	xor    BYTE PTR [rcx+0xa00c66b],al
   14000eff2:	leave  
   14000eff3:	(bad)  
   14000eff4:	lods   al,BYTE PTR ds:[rsi]
   14000eff5:	mov    esp,0xdd8d8a30
   14000effa:	sbb    BYTE PTR [rdx+0x57],bl
   14000effd:	retf   
   14000effe:	mov    edx,0x3186c5ef
   14000f003:	add    BYTE PTR [rcx],dh
   14000f005:	rex retf 0xf5a9
   14000f009:	adc    BYTE PTR [rdx+0x72],cl
   14000f00c:	rex.RB
   14000f00d:	rex.WB retf 0x360
   14000f011:	adc    BYTE PTR [rbx-0x7e4a1fd3],dh
   14000f017:	(bad)  
   14000f018:	push   0x6
   14000f01a:	xchg   esp,eax
   14000f01b:	adc    BYTE PTR [rax+0x5b464489],bl
   14000f021:	lea    edx,[rbx]
   14000f023:	(bad)  
   14000f024:	rex.WRX fnsave [rbx+0x1b93472e]
   14000f02b:	stc    
   14000f02c:	or     bh,dh
   14000f02e:	adc    bh,BYTE PTR [rsi+0xab8c386]
   14000f034:	mov    BYTE PTR [rbp+0x187261c9],dh
   14000f03a:	cmp    eax,0xece67404
   14000f03f:	jl     0x14000eff8
   14000f041:	ins    DWORD PTR es:[rdi],dx
   14000f042:	movabs eax,ds:0xf1df36e402e1d848
   14000f04b:	add    ebx,DWORD PTR [rsi+0x72d25053]
   14000f051:	mov    DWORD PTR [rcx],0x7850d71f
   14000f057:	retf   0xb595
   14000f05a:	call   FWORD PTR [rbp+0x3b776146]
   14000f060:	xor    ebp,DWORD PTR [rax]
   14000f062:	(bad)  
   14000f063:	add    eax,0x6ac033bc
   14000f068:	(bad)  
   14000f069:	fs (bad) 
   14000f06b:	xchg   esi,eax
   14000f06c:	(bad)  
   14000f06d:	(bad)  
   14000f06e:	pushf  
   14000f06f:	adc    BYTE PTR [rcx],dh
   14000f071:	mov    ?,WORD PTR [rcx+0x18]
   14000f074:	stos   DWORD PTR es:[rdi],eax
   14000f075:	sbb    ecx,DWORD PTR [rbx+0x3f380e3b]
   14000f07b:	rex.R and al,0xf6
   14000f07e:	(bad)  
   14000f07f:	(bad)  
   14000f080:	sub    al,0x23
   14000f082:	push   rcx
   14000f083:	pop    rdx
   14000f084:	repnz push fs
   14000f087:	mov    eax,0x9cdfd2a6
   14000f08c:	div    DWORD PTR [rcx-0x20]
   14000f08f:	pop    rbx
   14000f090:	jmp    FWORD PTR [rbx]
   14000f092:	cli    
   14000f093:	idiv   DWORD PTR [rdi+0xa]
   14000f096:	jl     0x14000f084
   14000f098:	ret    
   14000f099:	jmp    0xee40df59
   14000f09e:	mov    esi,0x6f4ce27b
   14000f0a3:	imul   edi,DWORD PTR [rbp-0x35],0xffffffc0
   14000f0a7:	push   0xffffffff9b9408c8
   14000f0ac:	lods   eax,DWORD PTR ds:[rsi]
   14000f0ad:	add    al,0x46
   14000f0af:	adc    ecx,esp
   14000f0b1:	sar    DWORD PTR [rcx+rbp*8],0x2e
   14000f0b5:	adc    BYTE PTR [rbx+0x274084d4],0x4c
   14000f0bc:	data16 add al,0x3c
   14000f0bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f0c0:	(bad)  
   14000f0c1:	(bad)  
   14000f0c2:	(bad)  
   14000f0c3:	adc    ebx,DWORD PTR [rax-0x1a7a89f1]
   14000f0c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0ca:	and    eax,0x262bb01
   14000f0cf:	adc    ebx,r9d
   14000f0d2:	fisttp WORD PTR [rax+riz*8-0x66]
   14000f0d6:	xor    BYTE PTR [rax-0x7bf46a08],al
   14000f0dc:	mov    eax,0xb24d6162
   14000f0e1:	(bad)  
   14000f0e2:	cmp    eax,0x3ecd7be1
   14000f0e7:	jno    0x14000f15f
   14000f0e9:	mov    esp,0x6009e9b7
   14000f0ee:	(bad)  
   14000f0ef:	and    al,0x39
   14000f0f1:	rex.XB sub r15d,eax
   14000f0f4:	neg    BYTE PTR [rcx-0x5e33abd8]
   14000f0fa:	adc    ah,BYTE PTR [rdi-0x32]
   14000f0fd:	movzx  edx,dx
   14000f100:	(bad)  
   14000f101:	mov    edi,0x177de4f3
   14000f106:	repz and eax,0x80bc185e
   14000f10c:	rex.WRXB mov ?,r14
   14000f10f:	adc    DWORD PTR [rdx+0x316855f9],ebx
   14000f115:	nop
   14000f116:	sar    DWORD PTR [rdx],0x60
   14000f119:	je     0x14000f14f
   14000f11b:	ja     0x14000f17c
   14000f11d:	rex.R out 0x55,al
   14000f120:	mov    ch,0x4a
   14000f122:	rex.WXB
   14000f123:	rex.WRXB test r12,r14
   14000f126:	add    al,0xc8
   14000f128:	(bad)  
   14000f129:	add    edx,DWORD PTR [rax+0x39d01b4b]
   14000f12f:	fs rex.RXB ins BYTE PTR es:[rdi],dx
   14000f132:	movabs ds:0x7005cd0e65a6a80b,eax
   14000f13b:	rol    BYTE PTR [rcx-0x7288925c],cl
   14000f141:	(bad)  
   14000f142:	fisttp WORD PTR [rsi+0x22512084]
   14000f148:	or     eax,DWORD PTR [rcx-0x136e7a08]
   14000f14e:	cdq    
   14000f14f:	(bad)  
   14000f150:	shr    BYTE PTR [rip+0xffffffff83a67776],0x29        # 0xc3a768cd
   14000f157:	int3   
   14000f158:	(bad)  
   14000f159:	ss add eax,0x439b4f61
   14000f15f:	or     ebp,DWORD PTR [rsi+0xa]
   14000f162:	or     edi,ecx
   14000f164:	adc    DWORD PTR [rcx-0x26],ebp
   14000f167:	adc    ecx,DWORD PTR [rdi-0xc5c114f]
   14000f16d:	hlt    
   14000f16e:	dec    DWORD PTR [rcx]
   14000f170:	adc    BYTE PTR [rcx],ah
   14000f172:	cmp    esi,esi
   14000f174:	(bad)  
   14000f175:	jle    0x14000f167
   14000f177:	(bad)  
   14000f178:	pop    rbx
   14000f179:	cmp    ecx,DWORD PTR [rdi-0x63]
   14000f17c:	cmp    bl,dl
   14000f17e:	fistp  DWORD PTR [rdi+rbx*8+0x36]
   14000f182:	rex.RX xor al,0x21
   14000f185:	(bad)  
   14000f186:	xchg   edx,eax
   14000f187:	outs   dx,DWORD PTR ds:[rsi]
   14000f188:	mov    DWORD PTR [rdx+0x66],eax
   14000f18b:	ins    BYTE PTR es:[rdi],dx
   14000f18c:	out    0x76,eax
   14000f18e:	mov    ebx,0x98e1aa50
   14000f193:	rex pop rsp
   14000f195:	outs   dx,DWORD PTR ds:[rsi]
   14000f196:	cdq    
   14000f197:	fdivr  DWORD PTR [rip+0x1189d87b]        # 0x1518aca18
   14000f19d:	mov    esp,0xd4502676
   14000f1a2:	xor    ebp,ecx
   14000f1a4:	fmul   DWORD PTR [rsi-0x26]
   14000f1a7:	test   BYTE PTR [rdi-0x4011eca],dl
   14000f1ad:	cwde   
   14000f1ae:	or     esp,ebp
   14000f1b0:	mov    DWORD PTR [rbx],edx
   14000f1b2:	nop
   14000f1b3:	lods   al,BYTE PTR ds:[rsi]
   14000f1b4:	retf   
   14000f1b5:	ins    BYTE PTR es:[rdi],dx
   14000f1b6:	in     al,dx
   14000f1b7:	popf   
   14000f1b8:	jb     0x14000f1fb
   14000f1ba:	hlt    
   14000f1bb:	pop    rsi
   14000f1bc:	(bad)  
   14000f1bd:	out    0xc4,eax
   14000f1bf:	(bad)  
   14000f1c0:	or     BYTE PTR [rsp+rdx*2],bl
   14000f1c3:	jle    0x14000f1bc
   14000f1c5:	sbb    eax,0x65162220
   14000f1ca:	rex.WRB add BYTE PTR [r11],r15b
   14000f1cd:	(bad)  
   14000f1ce:	mov    BYTE PTR [rsp+rsi*8-0x4a0bfd29],ch
   14000f1d5:	enter  0x6468,0x34
   14000f1d9:	xor    esi,DWORD PTR [rsi]
   14000f1db:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f1dd:	gs jmp 0x14000f17b
   14000f1e0:	pop    rdi
   14000f1e1:	sti    
   14000f1e2:	retf   0xce07
   14000f1e5:	retf   
   14000f1e6:	push   rcx
   14000f1e7:	jle    0x14000f1e9
   14000f1e9:	(bad)  
   14000f1ea:	loope  0x14000f19b
   14000f1ec:	loope  0x14000f1e5
   14000f1ee:	rol    BYTE PTR [rdi+rbx*1-0x80],1
   14000f1f2:	(bad)  
   14000f1f3:	data16 fld TBYTE PTR [rdx+0x32a3e8e0]
   14000f1fa:	adc    eax,DWORD PTR [rax+0x5c]
   14000f1fd:	(bad)  
   14000f1fe:	(bad)  
   14000f1ff:	(bad)  
   14000f200:	femms  
   14000f202:	mov    edx,0x209efe62
   14000f207:	nop
   14000f208:	ficom  WORD PTR [rip+0xffffffffe2bfbdfb]        # 0x122c0b009
   14000f20e:	cmp    al,0xfd
   14000f210:	idiv   BYTE PTR [rsi+rbp*8-0x15]
   14000f214:	imul   ebp,DWORD PTR [rsi],0xffffff81
   14000f217:	sbb    cl,BYTE PTR [rbx]
   14000f219:	movabs al,ds:0x80075a045cd022c6
   14000f222:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f223:	lea    esp,[rdx]
   14000f225:	rex.RXB ja 0x14000f294
   14000f228:	sub    BYTE PTR [rcx+0x3b89fa93],cl
   14000f22e:	outs   dx,DWORD PTR ds:[rsi]
   14000f22f:	rex (bad) 
   14000f231:	xor    eax,DWORD PTR [rax]
   14000f233:	add    esi,DWORD PTR [rcx]
   14000f235:	mov    edx,0x14d80ad0
   14000f23a:	in     eax,dx
   14000f23b:	adc    al,0x94
   14000f23d:	xchg   esp,eax
   14000f23e:	out    dx,al
   14000f23f:	sub    DWORD PTR [rsi+rsi*4],ecx
   14000f242:	test   BYTE PTR [rdx],dl
   14000f244:	rex.XB jo 0x14000f211
   14000f247:	rex.R imul ecx
   14000f24a:	(bad)  
   14000f24b:	and    BYTE PTR [rbx+0x79],bl
   14000f24e:	add    ebp,edi
   14000f250:	idiv   esp
   14000f252:	sbb    al,0xbf
   14000f254:	out    0x81,eax
   14000f256:	fstp   TBYTE PTR [rbx]
   14000f258:	rex.WRXB popf 
   14000f25a:	js     0x14000f215
   14000f25c:	mov    bh,0xb1
   14000f25e:	mov    edx,0xc8c22225
   14000f263:	xor    ecx,ecx
   14000f265:	rex.RB xchg r12d,eax
   14000f267:	lods   al,BYTE PTR ds:[rsi]
   14000f268:	pop    rsp
   14000f269:	rex.RB
   14000f26a:	rex.WXB add al,0xb4
   14000f26d:	mov    al,0x8
   14000f26f:	push   rsi
   14000f270:	test   eax,0x69909589
   14000f275:	adc    dl,BYTE PTR [rdi+0x234e3ba2]
   14000f27b:	lods   eax,DWORD PTR ds:[rsi]
   14000f27c:	rex.WB
   14000f27d:	rex.WR (bad) 
   14000f27f:	push   rdi
   14000f280:	jo     0x14000f267
   14000f282:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f283:	imul   eax,DWORD PTR [rdx],0x33
   14000f286:	mov    dl,bl
   14000f288:	imul   ebp,DWORD PTR [rdi+0x14],0x1f
   14000f28c:	(bad)  
   14000f28d:	mov    ah,0xba
   14000f28f:	jrcxz  0x14000f28b
   14000f291:	(bad)  
   14000f292:	(bad)  
   14000f293:	cmp    BYTE PTR [rcx],al
   14000f295:	sub    DWORD PTR [rsi+0x70258626],esp
   14000f29b:	and    DWORD PTR [rdx],ecx
   14000f29d:	cmp    ebp,ebp
   14000f29f:	jo     0x14000f283
   14000f2a1:	and    eax,0xf59bc13c
   14000f2a6:	pop    rsi
   14000f2a7:	cli    
   14000f2a8:	add    edi,DWORD PTR [rsi-0x7656ca64]
   14000f2ae:	add    ah,ah
   14000f2b0:	(bad)  
   14000f2b1:	mov    dl,0x3e
   14000f2b3:	xor    BYTE PTR [rsi-0x28599251],ah
   14000f2b9:	int3   
   14000f2ba:	lea    ebp,[rbp-0x2d218eac]
   14000f2c0:	imul   esi,esp,0xffffffec
   14000f2c3:	movsxd ebx,DWORD PTR [rdi-0x3]
   14000f2c6:	sar    BYTE PTR [rcx+0x39],0xca
   14000f2ca:	(bad)  
   14000f2cb:	shl    DWORD PTR [rbx+0x42f8ebf8],0x90
   14000f2d2:	mov    dh,BYTE PTR [rcx-0x68]
   14000f2d5:	lods   eax,DWORD PTR ds:[rsi]
   14000f2d6:	outs   dx,DWORD PTR ds:[rsi]
   14000f2d7:	adc    al,BYTE PTR [rax]
   14000f2d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f2da:	rex.WRB push r15
   14000f2dc:	(bad)  
   14000f2dd:	loope  0x14000f2f3
   14000f2df:	(bad)  
   14000f2e1:	cmp    al,0xbb
   14000f2e3:	fisttp QWORD PTR [rip+0xffffffffcc7913d0]        # 0x10c7a06b9
   14000f2e9:	shr    DWORD PTR [rax+0x3e24ddc4],1
   14000f2ef:	ss pop rax
   14000f2f1:	xchg   DWORD PTR [rsi+rsi*1],ecx
   14000f2f4:	retf   0x5003
   14000f2f7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f2f8:	movabs al,ds:0x21ce80875a832d6
   14000f301:	xor    eax,0xad4e0097
   14000f306:	(bad)  
   14000f307:	loopne 0x14000f33d
   14000f309:	add    eax,DWORD PTR [rsi+rsi*8+0x68c0533a]
   14000f310:	adc    BYTE PTR [rdi-0x292fc4b2],ah
   14000f316:	shr    DWORD PTR [rax],0xba
   14000f319:	xor    BYTE PTR [rdi],ah
   14000f31b:	pushf  
   14000f31c:	ror    BYTE PTR [rbp+0x13],cl
   14000f31f:	push   rbp
   14000f320:	dec    DWORD PTR [rdx]
   14000f322:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f323:	xor    bl,al
   14000f325:	test   eax,0xafa5c070
   14000f32a:	cmp    al,0xa
   14000f32c:	nop
   14000f32d:	(bad)  
   14000f32e:	hlt    
   14000f32f:	sahf   
   14000f330:	iret   
   14000f331:	icebp  
   14000f332:	sub    DWORD PTR [rdi-0x41],0xffffffbd
   14000f336:	repz in al,0xb3
   14000f339:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f33a:	sti    
   14000f33b:	sbb    ebp,DWORD PTR [rbx+0x6610225b]
   14000f341:	popf   
   14000f342:	sbb    esi,DWORD PTR [rbx]
   14000f344:	call   0x121167670
   14000f349:	es nop
   14000f34b:	and    eax,0x21398b0b
   14000f350:	xchg   ecx,eax
   14000f351:	mov    al,0x11
   14000f353:	xchg   esp,ebp
   14000f355:	adc    al,0x23
   14000f357:	xor    bl,bh
   14000f359:	cld    
   14000f35a:	sbb    BYTE PTR [rbx],al
   14000f35c:	jns    0x14000f36b
   14000f35e:	rex.WR movabs al,ds:0x673ec13aebcd20aa
   14000f368:	add    dl,bh
   14000f36a:	pushf  
   14000f36b:	add    DWORD PTR [rax+0x101721df],ecx
   14000f371:	xor    dh,BYTE PTR cs:[rbp+0x28]
   14000f375:	add    eax,0xde127288
   14000f37a:	stos   DWORD PTR es:[rdi],eax
   14000f37b:	cli    
   14000f37c:	rex.B in eax,0x8f
   14000f37f:	xor    al,0x3
   14000f381:	(bad)  
   14000f382:	sahf   
   14000f383:	ss pop rbx
   14000f385:	push   rdi
   14000f386:	cli    
   14000f387:	data16 je 0x14000f404
   14000f38a:	sub    eax,0x1cdd5adf
   14000f38f:	(bad)  
   14000f390:	and    al,0xe0
   14000f392:	jo     0x14000f326
   14000f394:	mov    dl,0xb0
   14000f396:	repnz pop rsp
   14000f398:	lahf   
   14000f399:	nop
   14000f39a:	out    0x9a,eax
   14000f39c:	sahf   
   14000f39d:	(bad)  
   14000f39e:	out    0x37,al
   14000f3a0:	out    dx,al
   14000f3a1:	mov    edi,0x23f84720
   14000f3a6:	js     0x14000f3bc
   14000f3a8:	mov    edi,0xa1705f20
   14000f3ad:	mov    bh,0x85
   14000f3af:	popf   
   14000f3b0:	rex.WRX pop rsi
   14000f3b2:	repnz xchg ebp,eax
   14000f3b5:	xor    eax,0x16d42134
   14000f3ba:	adc    DWORD PTR [rbx+0x30],edx
   14000f3bd:	xchg   ecx,eax
   14000f3be:	rex.WRX
   14000f3bf:	rex.WX
   14000f3c0:	rex.WRX
   14000f3c1:	rex.WX (bad) 
   14000f3c3:	sahf   
   14000f3c4:	jns    0x14000f395
   14000f3c6:	pop    rax
   14000f3c7:	jl     0x14000f446
   14000f3c9:	test   BYTE PTR [rdx],ch
   14000f3cb:	and    ecx,DWORD PTR [rcx-0x2fc0926c]
   14000f3d1:	repnz sbb al,0xb2
   14000f3d4:	jne    0x14000f3ef
   14000f3d6:	mov    dl,0x75
   14000f3d8:	test   eax,0x8b1be3b0
   14000f3dd:	movabs al,ds:0xd97b5006f75061ee
   14000f3e6:	xor    al,BYTE PTR [rdx+rdx*1]
   14000f3e9:	rex mov ecx,0x6220acf3
   14000f3ef:	or     DWORD PTR [rip+0x60a9acac],ebx        # 0x1a0aaa0a1
   14000f3f5:	xor    al,0xec
   14000f3f7:	je     0x14000f45c
   14000f3f9:	loope  0x14000f43e
   14000f3fb:	lock rex.XB fbstp TBYTE PTR [r14-0x5415c351]
   14000f403:	cld    
   14000f404:	scas   eax,DWORD PTR es:[rdi]
   14000f405:	hlt    
   14000f406:	or     al,0xbe
   14000f408:	xchg   ebp,eax
   14000f409:	add    ah,BYTE PTR [rdi+riz*2-0x6f7bfce1]
   14000f410:	mov    ebp,0xd0fc73f7
   14000f415:	cmp    ebp,DWORD PTR [rsi+0x6f]
   14000f418:	jg     0x14000f415
   14000f41a:	cdq    
   14000f41b:	sar    ebp,cl
   14000f41d:	(bad)  
   14000f41e:	(bad)  
   14000f41f:	sub    eax,0x9d0c2063
   14000f424:	add    eax,ebx
   14000f426:	ds or  eax,0x255eaf
   14000f42c:	movabs rdx,0x32220cc044929a8b
   14000f436:	pop    rsi
   14000f437:	(bad)  
   14000f438:	rex.WXB cld 
   14000f43a:	mov    esp,0x1667df28
   14000f43f:	(bad)  
   14000f440:	xchg   ebp,eax
   14000f441:	sbb    eax,0xd919b381
   14000f446:	(bad)  
   14000f447:	repz xor ebx,DWORD PTR [rax+0x2a7af4c0]
   14000f44e:	fild   QWORD PTR [rbx]
   14000f450:	rex.WR (bad) 
   14000f452:	(bad)  
   14000f453:	(bad)  
   14000f454:	(bad)  
   14000f455:	rex.WR add al,r15b
   14000f458:	stc    
   14000f459:	jns    0x14000f47f
   14000f45b:	fs mov ebp,0xf04169f4
   14000f461:	sahf   
   14000f462:	add    DWORD PTR [rax+0x1b8eccfc],eax
   14000f468:	cmp    edi,ebp
   14000f46a:	sbb    al,0xbd
   14000f46c:	retf   
   14000f46d:	rex.XB mov r9d,0x6b2fb972
   14000f473:	sbb    DWORD PTR [rdx+rsi*8+0x5c],0xffffff9b
   14000f478:	div    BYTE PTR [rax]
   14000f47a:	xchg   ebx,eax
   14000f47b:	fstp   TBYTE PTR [rbp+rbx*4-0x2b]
   14000f47f:	xor    esp,esi
   14000f481:	ret    0xbfb7
   14000f484:	jb     0x14000f47e
   14000f486:	mov    dl,0x59
   14000f488:	out    0x7,al
   14000f48a:	lock add bh,dh
   14000f48d:	mov    edx,0xc200017c
   14000f492:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f493:	rcr    DWORD PTR [rsi+0x13280526],cl
   14000f499:	sub    ebx,DWORD PTR [rax+rax*8-0x5911fb0b]
   14000f4a0:	bsr    esp,DWORD PTR [rdi+rax*1+0x2fe4c5fc]
   14000f4a8:	(bad)  
   14000f4a9:	cmc    
   14000f4aa:	xchg   ebp,eax
   14000f4ab:	xor    eax,0xa5034980
   14000f4b0:	rex.X clc 
   14000f4b2:	test   DWORD PTR [rdi-0x31730237],esp
   14000f4b8:	lea    esi,[rsi]
   14000f4ba:	and    DWORD PTR [rbx+0x17d5c84d],esp
   14000f4c0:	ins    DWORD PTR es:[rdi],dx
   14000f4c1:	cdq    
   14000f4c2:	div    BYTE PTR [rdx]
   14000f4c4:	js     0x14000f4a7
   14000f4c6:	(bad)  
   14000f4c7:	(bad)  
   14000f4c8:	loope  0x14000f4d0
   14000f4ca:	push   rax
   14000f4cb:	movsxd ecx,ecx
   14000f4cd:	pop    rcx
   14000f4ce:	or     ecx,DWORD PTR [rdx]
   14000f4d0:	loop   0x14000f4a5
   14000f4d2:	stos   BYTE PTR es:[rdi],al
   14000f4d3:	mov    al,al
   14000f4d5:	cmp    ah,BYTE PTR [rdx]
   14000f4d7:	or     eax,0xad8068c8
   14000f4dc:	mov    ecx,0x7761a220
   14000f4e1:	mov    eax,0xa5db5130
   14000f4e6:	lods   al,BYTE PTR ds:[rsi]
   14000f4e7:	movabs eax,ds:0x9ab09ad8a6b18c8
   14000f4f0:	pushf  
   14000f4f1:	jnp    0x14000f507
   14000f4f3:	push   0xfffffffff81fa1b5
   14000f4f8:	sbb    DWORD PTR [rsi-0x18],edi
   14000f4fb:	popf   
   14000f4fc:	ja     0x14000f4b2
   14000f4fe:	mov    edi,0xdea9e4f5
   14000f503:	out    0x66,al
   14000f505:	rex.WRXB add r8,r10
   14000f508:	rex.RX imul r12d,DWORD PTR [rax-0x30],0xffffffe7
   14000f50d:	rcl    ebp,1
   14000f50f:	(bad)  
   14000f510:	(bad)  
   14000f511:	sub    BYTE PTR [rcx+rbp*8],0x2c
   14000f515:	sbb    BYTE PTR [rsi+0x13],cl
   14000f518:	add    esp,DWORD PTR [rdx+0x26]
   14000f51b:	or     cl,BYTE PTR [rbx]
   14000f51d:	mov    esi,0xfa6acfc4
   14000f522:	sbb    ecx,ebp
   14000f524:	retf   
   14000f525:	add    al,0xa6
   14000f527:	ficom  DWORD PTR [rdx]
   14000f529:	push   rbx
   14000f52a:	mov    cl,BYTE PTR [rsi-0x45]
   14000f52d:	jle    0x14000f59d
   14000f52f:	es loopne 0x14000f536
   14000f532:	rex.XB test eax,0xe1b45dce
   14000f538:	jp     0x14000f4fc
   14000f53a:	mov    ch,0x9f
   14000f53c:	(bad)  
   14000f53d:	fs mov ebx,0xa222a3c9
   14000f543:	test   BYTE PTR [rcx-0x5b],cl
   14000f546:	rex.R
   14000f547:	xchg   r11,rax
   14000f549:	xchg   ecx,eax
   14000f54a:	xor    ah,BYTE PTR [rdx-0x6bd0c217]
   14000f550:	or     al,cl
   14000f552:	add    al,0xa3
   14000f554:	xchg   ebp,eax
   14000f555:	ds scas al,BYTE PTR es:[rdi]
   14000f557:	pop    rsi
   14000f558:	in     al,dx
   14000f559:	retf   
   14000f55a:	retf   0x2656
   14000f55d:	sub    DWORD PTR [rax-0x4510f652],0x50
   14000f564:	xlat   BYTE PTR ds:[rbx]
   14000f565:	xlat   BYTE PTR ds:[rbx]
   14000f566:	sahf   
   14000f567:	cld    
   14000f568:	xchg   ebx,eax
   14000f569:	hlt    
   14000f56a:	jb     0x14000f5e2
   14000f56c:	xchg   esp,eax
   14000f56d:	outs   dx,BYTE PTR ds:[rsi]
   14000f56e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f56f:	jae    0x14000f569
   14000f571:	outs   dx,DWORD PTR ds:[rsi]
   14000f572:	int    0xdf
   14000f574:	mov    bh,0x7a
   14000f576:	xchg   DWORD PTR [rbx+0x747bcbd9],esi
   14000f57c:	stc    
   14000f57d:	add    al,0x45
   14000f57f:	test   DWORD PTR [rsi],eax
   14000f581:	adc    BYTE PTR [rdx+0x7e5c7c8a],ah
   14000f587:	rex.R fcom DWORD PTR [rbx-0x700ed692]
   14000f58e:	xchg   edx,eax
   14000f58f:	xchg   ebp,eax
   14000f590:	cmp    eax,0x9e53cc1e
   14000f595:	xlat   BYTE PTR ds:[rbx]
   14000f596:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f597:	adc    dh,BYTE PTR [rcx+0x5fc71c5]
   14000f59d:	rex.XB jb 0x14000f604
   14000f5a0:	sar    DWORD PTR [rdi+0xabfd30a],1
   14000f5a6:	pop    rsp
   14000f5a7:	add    DWORD PTR ds:[rax+0x1bdd006],ebp
   14000f5ae:	mov    esp,0x39d40c74
   14000f5b3:	(bad)  
   14000f5b4:	or     DWORD PTR [rdi+0x8ae76c4],ebx
   14000f5ba:	ins    BYTE PTR es:[rdi],dx
   14000f5bb:	and    ah,BYTE PTR [rbx-0x15]
   14000f5be:	(bad)  
   14000f5bf:	and    BYTE PTR [rbp+0x68],bl
   14000f5c2:	add    eax,0xb06bb462
   14000f5c7:	mov    cl,0xe6
   14000f5c9:	mov    edi,DWORD PTR [rax-0x3e]
   14000f5cc:	sbb    edi,DWORD PTR [rbx+0x7d69e97d]
   14000f5d2:	sti    
   14000f5d3:	xchg   edx,eax
   14000f5d4:	(bad)  
   14000f5d5:	inc    BYTE PTR [rdx]
   14000f5d7:	pop    rax
   14000f5d8:	cmp    cl,BYTE PTR [rsi]
   14000f5da:	ds (bad) 
   14000f5dc:	xor    BYTE PTR [rdi+0x36775de7],bh
   14000f5e2:	(bad)  
   14000f5e3:	std    
   14000f5e4:	dec    DWORD PTR [rsi-0xc]
   14000f5e7:	mov    bl,0x4c
   14000f5e9:	or     ecx,DWORD PTR [rax+0x20]
   14000f5ec:	pop    rdx
   14000f5ed:	mov    ebx,DWORD PTR [rsi]
   14000f5ef:	hlt    
   14000f5f0:	nop
   14000f5f1:	lods   eax,DWORD PTR ds:[rsi]
   14000f5f2:	xchg   edx,eax
   14000f5f3:	and    dl,BYTE PTR [rax+0x4e61d3a0]
   14000f5f9:	sbb    eax,DWORD PTR [rsi-0x14bd7d94]
   14000f5ff:	movabs ds:0x40982ed50a09221,al
   14000f608:	jg     0x14000f5ca
   14000f60a:	mov    ?,WORD PTR [rax+0x2893ca7d]
   14000f610:	xor    eax,0x55730262
   14000f615:	push   rbx
   14000f616:	imul   ecx,DWORD PTR [rcx-0x2b],0x705fb127
   14000f61d:	in     eax,dx
   14000f61e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f61f:	add    DWORD PTR [rip+0xffffffffa7645557],ebx        # 0xe7654b7c
   14000f625:	rcl    BYTE PTR [rbx+0x6],1
   14000f628:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f629:	mov    WORD PTR [rcx+rbx*2-0x1e],es
   14000f62d:	(bad)  
   14000f62e:	stos   BYTE PTR es:[rdi],al
   14000f62f:	pop    rax
   14000f630:	push   0x1f580006
   14000f635:	(bad)  
   14000f636:	jrcxz  0x14000f60a
   14000f638:	push   rax
   14000f639:	scas   al,BYTE PTR es:[rdi]
   14000f63a:	pop    rsp
   14000f63b:	in     al,dx
   14000f63c:	(bad)  
   14000f63d:	(bad)  
   14000f63e:	(bad)  
   14000f63f:	cs jp  0x14000f6c0
   14000f642:	repnz pop rax
   14000f644:	jo     0x14000f5f1
   14000f646:	repnz add ah,dh
   14000f649:	rex.WRX jle 0x14000f661
   14000f64c:	fucomip st,st(3)
   14000f64e:	(bad)  
   14000f64f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f650:	sbb    ebp,DWORD PTR [rax+0x15]
   14000f653:	jg     0x14000f6a8
   14000f655:	jle    0x14000f672
   14000f657:	sbb    eax,0xec77e00c
   14000f65c:	mov    cs,WORD PTR [rcx+0x4b15d6df]
   14000f662:	imul   eax,DWORD PTR [rcx],0x1c
   14000f665:	rex.XB movabs al,ds:0xe5f6d8af3bf2daa2
   14000f66f:	xor    DWORD PTR [rcx],edx
   14000f671:	retf   
   14000f672:	ror    al,1
   14000f674:	jl     0x14000f67e
   14000f676:	(bad)  
   14000f677:	movabs rax,ds:0x9aa152f72f42782a
   14000f681:	test   dh,ch
   14000f683:	sub    BYTE PTR [rbx],dh
   14000f685:	add    al,0x10
   14000f687:	cmp    BYTE PTR [rsp+rax*1-0x54],0x9f
   14000f68c:	test   ecx,ebx
   14000f68e:	cmp    BYTE PTR [rbx],cl
   14000f690:	jo     0x14000f694
   14000f692:	pop    rdx
   14000f693:	mov    esp,0xc78b419
   14000f698:	call   0xecfeabbb
   14000f69d:	add    al,0x22
   14000f69f:	or     al,0xbb
   14000f6a1:	cmpxchg BYTE PTR [rdx+0x301880e6],dh
   14000f6a8:	pop    rcx
   14000f6a9:	data16 (bad) 
   14000f6ab:	mov    ebx,ss
   14000f6ad:	or     al,ah
   14000f6af:	rex.WRX
   14000f6b0:	rex.WRXB xchg r10,rax
   14000f6b2:	rol    DWORD PTR [r14],0xa2
   14000f6b6:	xchg   edx,esi
   14000f6b8:	cmp    al,0x2b
   14000f6ba:	data16 or cl,cl
   14000f6bd:	jrcxz  0x14000f6be
   14000f6bf:	or     al,0x9a
   14000f6c1:	sub    dh,0x6d
   14000f6c4:	(bad)  
   14000f6c6:	(bad)  
   14000f6c7:	lock movabs eax,ds:0x62fba7b5fabe3b7
   14000f6d1:	jbe    0x14000f6e6
   14000f6d3:	(bad)  
   14000f6d4:	lods   eax,DWORD PTR ds:[rsi]
   14000f6d5:	xchg   ecx,eax
   14000f6d6:	psubd  mm1,QWORD PTR [rbx+rbx*2-0x76]
   14000f6db:	shl    DWORD PTR [rcx+rax*2-0x6fedb1f4],0xd7
   14000f6e3:	jrcxz  0x14000f6af
   14000f6e5:	(bad)  [rbx-0x717b303b]
   14000f6eb:	xor    eax,DWORD PTR [rcx]
   14000f6ed:	fist   WORD PTR [rdi+0x13999ea5]
   14000f6f3:	imul   dl
   14000f6f5:	mov    DWORD PTR [rax+riz*2-0x69],ecx
   14000f6f9:	jne    0x14000f74f
   14000f6fb:	out    dx,eax
   14000f6fc:	mov    ebx,0x1affe90f
   14000f701:	add    r10,QWORD PTR [r10+0x4cb82cd]
   14000f708:	sub    BYTE PTR [rsi],al
   14000f70a:	adc    al,BYTE PTR [rsi]
   14000f70c:	and    eax,0x2888a44c
   14000f711:	and    DWORD PTR [rax],ebp
   14000f713:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f714:	(bad)  
   14000f715:	sub    cl,bl
   14000f717:	retf   0x2b00
   14000f71a:	(bad)  
   14000f71b:	cli    
   14000f71c:	jb     0x14000f783
   14000f71e:	ins    DWORD PTR es:[rdi],dx
   14000f71f:	test   ch,ch
   14000f721:	rex.X xchg esi,eax
   14000f723:	rex.WRX jg 0x14000f747
   14000f726:	rex.B adc eax,0xf3f22770
   14000f72c:	(bad)  
   14000f72d:	icebp  
   14000f72e:	in     al,0xd5
   14000f730:	cs (bad) 
   14000f732:	test   al,0x87
   14000f734:	pop    rdi
   14000f735:	xchg   esp,eax
   14000f736:	mov    edi,0x23f48e87
   14000f73b:	pop    rcx
   14000f73c:	sbb    al,0x13
   14000f73e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f73f:	(bad)
   14000f743:	jmp    0x14000f796
   14000f745:	sbb    eax,0xd6f29890
   14000f74a:	or     ebp,ebx
   14000f74c:	(bad)  
   14000f74d:	adc    ch,BYTE PTR [rsi+0x437c1cd3]
   14000f753:	mov    esp,0x5d2411a6
   14000f758:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f759:	(bad)  
   14000f75a:	clc    
   14000f75b:	sbb    al,BYTE PTR [rdx+0x78]
   14000f75e:	mov    cl,0xb8
   14000f760:	sbb    ch,BYTE PTR [rbp-0x65]
   14000f763:	mov    BYTE PTR [rax+0x4c180dc8],ch
   14000f769:	cvtpi2ps xmm5,QWORD PTR [rsi-0x15]
   14000f76d:	(bad)  
   14000f76e:	sbb    eax,DWORD PTR [rcx]
   14000f770:	rex.WR (bad) 
   14000f772:	lods   al,BYTE PTR ds:[rsi]
   14000f773:	popf   
   14000f774:	sub    DWORD PTR [rbp+rbx*4-0xfe2e5ff],0xe0e031e2
   14000f77f:	in     eax,dx
   14000f780:	rex fiadd DWORD PTR [rsi-0x78]
   14000f784:	pop    rdi
   14000f785:	push   rax
   14000f786:	or     al,0x32
   14000f788:	xchg   esi,eax
   14000f789:	sbb    DWORD PTR [rax-0x71499f2f],ecx
   14000f78f:	rex.XB add ebp,DWORD PTR [r13-0x67]
   14000f793:	add    BYTE PTR [rbx-0x5e33af0],bl
   14000f799:	(bad)
   14000f79c:	mov    BYTE PTR [rax+0x7d],al
   14000f79f:	retf   
   14000f7a0:	(bad)  
   14000f7a1:	push   rbx
   14000f7a2:	call   QWORD PTR [rdx]
   14000f7a4:	out    0xc0,al
   14000f7a6:	sbb    eax,0xd6cb3c58
   14000f7ab:	mov    bh,0xe1
   14000f7ad:	add    BYTE PTR [rax],al
   14000f7af:	and    BYTE PTR [rax],al
   14000f7b1:	rex.WB
   14000f7b2:	rex.R
   14000f7b3:	push   r12
   14000f7b5:	js     0x14000f832
   14000f7b7:	repnz fiadd WORD PTR [rdi]
   14000f7ba:	out    dx,eax
   14000f7bb:	imul   edi,DWORD PTR [rsi+rdi*8],0x3f230bc4
   14000f7c2:	xchg   edi,eax
   14000f7c3:	imul   esi,DWORD PTR [rsi+rax*2+0x4963d5b6],0x26286994
   14000f7ce:	loop   0x14000f786
   14000f7d0:	and    DWORD PTR [rdx+rax*1-0x7b0750da],esp
   14000f7d7:	xlat   BYTE PTR ds:[rbx]
   14000f7d8:	rex.RX (bad) 
   14000f7da:	(bad)  
   14000f7db:	movsxd esp,DWORD PTR fs:[rax-0x27100bda]
   14000f7e2:	xor    al,0xe2
   14000f7e4:	fcomp  QWORD PTR [rax+rax*8-0x4d]
   14000f7e8:	nop
   14000f7e9:	retf   0x7b8b
   14000f7ec:	xchg   ebp,eax
   14000f7ed:	adc    al,0x5c
   14000f7ef:	sbb    dh,BYTE PTR [rbx-0xd]
   14000f7f2:	jae    0x14000f796
   14000f7f4:	jmp    0x14000f7f8
   14000f7f6:	xlat   BYTE PTR ds:[rbx]
   14000f7f7:	test   BYTE PTR [rcx],al
   14000f7f9:	sub    BYTE PTR [rdx-0x5f76606e],dh
   14000f7ff:	mov    BYTE PTR [rax-0xcfa3ed0],dl
   14000f805:	mov    al,0xdf
   14000f807:	pop    rcx
   14000f808:	out    0xca,eax
   14000f80a:	add    BYTE PTR [rdi+0x4e],dl
   14000f80d:	outs   dx,DWORD PTR ds:[rsi]
   14000f80e:	leave  
   14000f80f:	stc    
   14000f810:	jle    0x14000f820
   14000f812:	mov    edi,0x2618ef83
   14000f817:	adc    edi,DWORD PTR [rdi-0xb7f0719]
   14000f81d:	(bad)  
   14000f81e:	icebp  
   14000f81f:	int3   
   14000f820:	retf   
   14000f821:	sub    esp,DWORD PTR [rax]
   14000f823:	push   0xffffffffffffffe2
   14000f825:	(bad)  
   14000f826:	in     al,0xf3
   14000f828:	cmp    BYTE PTR [rsi],ch
   14000f82a:	out    0x1,eax
   14000f82c:	rex.R
   14000f82d:	rex.X (bad) 
   14000f82f:	fcomi  st,st(3)
   14000f831:	adc    eax,0xf40ed755
   14000f836:	(bad)  
   14000f837:	lods   eax,DWORD PTR ds:[rsi]
   14000f838:	mov    esi,0x721403f7
   14000f83d:	js     0x14000f811
   14000f83f:	fsub   DWORD PTR [rcx-0x21]
   14000f842:	add    BYTE PTR [rax],ah
   14000f844:	pop    rdx
   14000f845:	add    eax,0x712b1108
   14000f84a:	or     DWORD PTR [rsi],ebp
   14000f84c:	push   rax
   14000f84d:	(bad)  
   14000f84e:	mov    al,0xb9
   14000f850:	(bad)  
   14000f851:	pushf  
   14000f852:	sub    BYTE PTR [rbp-0x58a4920c],cl
   14000f858:	rex.B pushf 
   14000f85a:	sub    cl,ah
   14000f85c:	adc    esp,DWORD PTR [rax-0x64]
   14000f85f:	sbb    eax,0xb81cbcb8
   14000f864:	push   0xffffffff816e58f3
   14000f869:	(bad)  
   14000f86a:	(bad)  
   14000f86c:	clc    
   14000f86d:	add    dh,BYTE PTR [rax-0x1b]
   14000f870:	add    eax,0x7008f770
   14000f875:	loopne 0x14000f8af
   14000f877:	mov    al,0x78
   14000f879:	int3   
   14000f87a:	jae    0x14000f8dc
   14000f87c:	mov    al,bl
   14000f87e:	stc    
   14000f87f:	adc    al,0x11
   14000f881:	add    eax,0x99c30682
   14000f886:	(bad)  
   14000f887:	rex.RX sbb eax,0xffffffd8
   14000f88b:	rex.W
   14000f88c:	rex.R xlat BYTE PTR ds:[rbx]
   14000f88e:	mov    dh,0xaa
   14000f890:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f891:	adc    edi,DWORD PTR [rdi+0x22]
   14000f894:	jmp    0x14000f819
   14000f896:	mov    edi,0x1f901bf2
   14000f89b:	call   FWORD PTR [rdi-0x18]
   14000f89e:	out    0x43,al
   14000f8a0:	mov    ecx,ebp
   14000f8a2:	cmp    ebp,edi
   14000f8a4:	mov    esp,0xe2f4bf49
   14000f8a9:	add    eax,0x6b431e9b
   14000f8ae:	sbb    BYTE PTR [rax],cl
   14000f8b0:	jmp    0xd1966682
   14000f8b5:	xor    al,ah
   14000f8b7:	or     ah,BYTE PTR [rsi+0x4944a2c9]
   14000f8bd:	adc    al,0x2c
   14000f8bf:	rex.R add al,0x9f
   14000f8c2:	mov    ebx,0x8b1e3edc
   14000f8c7:	or     eax,0xb4d0428f
   14000f8cc:	rex.WXB (bad) 
   14000f8ce:	shr    BYTE PTR [rbx+0x604d14c0],1
   14000f8d4:	sahf   
   14000f8d5:	(bad)  
   14000f8d6:	(bad)  
   14000f8d7:	cmc    
   14000f8d8:	outs   dx,DWORD PTR ds:[rsi]
   14000f8d9:	lahf   
   14000f8da:	jrcxz  0x14000f876
   14000f8dc:	xor    BYTE PTR [rax+0x8f77bc4],al
   14000f8e2:	push   rax
   14000f8e3:	sub    al,0x71
   14000f8e5:	mov    eax,0x648eaca6
   14000f8ea:	jrcxz  0x14000f8d1
   14000f8ec:	xor    eax,0xa9a07273
   14000f8f1:	pop    rdi
   14000f8f2:	xchg   edx,eax
   14000f8f3:	call   0xe0cc0e06
   14000f8f8:	clc    
   14000f8f9:	(bad)  
   14000f8fa:	xchg   ebp,eax
   14000f8fb:	and    eax,DWORD PTR [rdx]
   14000f8fd:	movabs al,ds:0xc258faa93d4fd380
   14000f906:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f907:	int3   
   14000f908:	mov    edi,0x5df1fbc1
   14000f90d:	jmp    0x14000f934
   14000f90f:	neg    esi
   14000f911:	std    
   14000f912:	fdiv   DWORD PTR [rbx-0x71]
   14000f915:	ret    0x2dae
   14000f918:	or     BYTE PTR [rbx+0x12afadec],bh
   14000f91e:	pushf  
   14000f91f:	push   rbp
   14000f920:	adc    BYTE PTR [rax],bl
   14000f922:	rex.W fidiv DWORD PTR [rsi]
   14000f925:	mov    eax,0x2b0ed1a7
   14000f92a:	add    al,BYTE PTR [rbx+0x24]
   14000f92d:	(bad)  
   14000f92e:	shr    esi,1
   14000f930:	(bad)  
   14000f931:	xchg   eax,ebp
   14000f933:	or     al,0x50
   14000f935:	(bad)  
   14000f936:	sbb    ebp,DWORD PTR [rdi]
   14000f938:	es ja  0x14000f90e
   14000f93b:	jno    0x14000f952
   14000f93d:	cmp    DWORD PTR [rdi],esp
   14000f93f:	test   DWORD PTR [rdx-0x357261e1],ecx
   14000f945:	rex.R pop rdi
   14000f947:	int3   
   14000f948:	and    al,al
   14000f94a:	imul   eax,DWORD PTR [rbx],0xa70a51fe
   14000f950:	gs mov ch,0x5f
   14000f953:	(bad)  
   14000f954:	add    cl,bl
   14000f956:	mov    edx,0x2bed902
   14000f95b:	test   al,0xef
   14000f95d:	(bad)  
   14000f95e:	xchg   edi,eax
   14000f95f:	out    dx,eax
   14000f960:	add    dl,BYTE PTR [rsi+0x4a904ef]
   14000f966:	xor    BYTE PTR [rbp+0x1c],0x42
   14000f96a:	sub    DWORD PTR [rax+0x1a400933],ecx
   14000f970:	fs xor al,0x4
   14000f973:	cmp    DWORD PTR [rsp+rbp*1+0x268c022e],ebp
   14000f97a:	or     DWORD PTR [rbp+0x2],ecx
   14000f97d:	and    BYTE PTR [rcx+0x1f],bh
   14000f980:	hlt    
   14000f981:	cmc    
   14000f982:	fild   WORD PTR [rip+0xffffffffd2afc8fd]        # 0x112b0c285
   14000f988:	std    
   14000f989:	ja     0x14000f968
   14000f98b:	fcomp  DWORD PTR [rsi+0x5b]
   14000f98e:	fucomip st,st(2)
   14000f990:	lods   eax,DWORD PTR ds:[rsi]
   14000f991:	lods   eax,DWORD PTR ds:[rsi]
   14000f992:	outs   dx,BYTE PTR ds:[rsi]
   14000f993:	sbb    DWORD PTR [rcx],eax
   14000f995:	add    DWORD PTR [rsi-0x38],eax
   14000f998:	mov    WORD PTR [rsi-0x5c],es
   14000f99b:	mov    bh,0xb6
   14000f99d:	adc    bl,BYTE PTR [rbp+0xa425924]
   14000f9a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f9a4:	rex.B (bad) 
   14000f9a6:	cwde   
   14000f9a7:	pop    rcx
   14000f9a8:	or     ah,BYTE PTR [rbp-0x29c0438]
   14000f9ae:	movabs ds:0x4be852c7f6c2304d,al
   14000f9b7:	scas   eax,DWORD PTR es:[rdi]
   14000f9b8:	jge    0x14000f9a4
   14000f9ba:	ins    DWORD PTR es:[rdi],dx
   14000f9bb:	ficom  WORD PTR [rax-0x1c]
   14000f9be:	lock jl 0x14000f9d4
   14000f9c1:	ins    BYTE PTR es:[rdi],dx
   14000f9c2:	mov    esi,0x3fea8fd
   14000f9c7:	xlat   BYTE PTR ds:[rbx]
   14000f9c8:	mov    al,BYTE PTR [rcx]
   14000f9ca:	clc    
   14000f9cb:	cmp    DWORD PTR [rbp+0x2f53b862],edi
   14000f9d1:	xchg   ebx,eax
   14000f9d2:	in     al,dx
   14000f9d3:	in     eax,0xad
   14000f9d5:	sar    ecx,1
   14000f9d7:	mov    ecx,gs
   14000f9d9:	je     0x14000f9fe
   14000f9db:	rex.WRB
   14000f9dc:	rex.RX jle 0x14000fa00
   14000f9df:	(bad)  
   14000f9e0:	fadd   st(4),st
   14000f9e2:	(bad)  
   14000f9e3:	(bad)
   14000f9e6:	mov    al,0x79
   14000f9e8:	bnd jmp 0x14000f9c8
   14000f9eb:	rex.WXB jp 0x14000f9f7
   14000f9ee:	outs   dx,DWORD PTR ds:[rsi]
   14000f9ef:	(bad)  
   14000f9f0:	repz js 0x14000fa37
   14000f9f3:	(bad)  
   14000f9f4:	adc    BYTE PTR [rsi-0x2f],bh
   14000f9f7:	scas   eax,DWORD PTR es:[rdi]
   14000f9f8:	add    al,0x29
   14000f9fa:	in     al,dx
   14000f9fb:	(bad)  
   14000f9fc:	ins    BYTE PTR es:[rdi],dx
   14000f9fd:	pop    rdi
   14000f9fe:	fld    DWORD PTR [rdx+rax*1]
   14000fa01:	mov    dl,BYTE PTR [rcx+0x3a]
   14000fa04:	xchg   edi,eax
   14000fa05:	mov    dh,0x81
   14000fa07:	mov    BYTE PTR [rcx+0xc],0x6e
   14000fa0b:	jl     0x14000fa15
   14000fa0d:	mov    DWORD PTR [rcx],ebx
   14000fa0f:	rex.B (bad) 
   14000fa11:	mov    dh,0xa4
   14000fa13:	fnstcw WORD PTR [rdi+0x7ff9614]
   14000fa19:	add    eax,0xcd939c59
   14000fa1e:	cmp    BYTE PTR [rdx+0x47a01932],al
   14000fa24:	or     dh,0x0
   14000fa27:	popf   
   14000fa28:	add    esp,DWORD PTR [rsi]
   14000fa2a:	jae    0x14000f9ef
   14000fa2c:	pop    rbx
   14000fa2d:	sbb    edx,DWORD PTR es:[rdi+0x35e651d5]
   14000fa34:	add    DWORD PTR [rdi],ebx
   14000fa36:	sbb    ah,ch
   14000fa38:	mov    dl,dl
   14000fa3a:	cli    
   14000fa3b:	sub    BYTE PTR [rax-0x14],ch
   14000fa3e:	push   rdx
   14000fa3f:	add    BYTE PTR [rcx+0x42],dl
   14000fa42:	push   rcx
   14000fa43:	ja     0x14000fa73
   14000fa45:	retf   
   14000fa46:	movabs eax,ds:0x783a0f3d2e049d2f
   14000fa4f:	sub    edi,eax
   14000fa51:	enter  0x40bd,0xda
   14000fa55:	add    DWORD PTR [rax],esp
   14000fa57:	add    BYTE PTR ss:[rbx-0x28],al
   14000fa5b:	(bad)  
   14000fa5c:	(bad)  
   14000fa5d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fa5e:	rol    esp,0x10
   14000fa61:	jrcxz  0x14000fa97
   14000fa63:	add    ch,BYTE PTR [rax+0x4]
   14000fa66:	ja     0x14000faad
   14000fa68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fa69:	xchg   edi,eax
   14000fa6a:	add    bl,BYTE PTR [rdi-0x7e186a4]
   14000fa70:	(bad)  
   14000fa71:	inc    DWORD PTR [rbp-0x6b003e0c]
   14000fa77:	fcomip st,st(7)
   14000fa79:	scas   al,BYTE PTR es:[rdi]
   14000fa7a:	cmp    ebx,DWORD PTR [rbx-0x408005a1]
   14000fa80:	fcomi  st,st(7)
   14000fa82:	xlat   BYTE PTR ds:[rbx]
   14000fa83:	xor    al,0xeb
   14000fa86:	rcl    DWORD PTR [rax],1
   14000fa88:	pop    rcx
   14000fa89:	outs   dx,DWORD PTR ds:[rsi]
   14000fa8a:	rex.WXB push r9
   14000fa8c:	movabs ds:0x8f0990d4a0362944,al
   14000fa95:	rex.X and BYTE PTR [rdi-0xd],al
   14000fa99:	xchg   esi,eax
   14000fa9a:	sub    DWORD PTR [rax],esi
   14000fa9c:	mov    al,BYTE PTR [rax+0x42]
   14000fa9f:	call   FWORD PTR [rax-0x7e]
   14000faa2:	stc    
   14000faa3:	and    bl,BYTE PTR [rcx]
   14000faa5:	rex.WX pop rbp
   14000faa7:	pop    rcx
   14000faa8:	imul   ebp,DWORD PTR [rcx],0x81305d80
   14000faae:	sbb    DWORD PTR [rbp-0xa],eax
   14000fab1:	and    edx,DWORD PTR [rbx]
   14000fab3:	mov    eax,0x5d800c26
   14000fab8:	mov    BYTE PTR [rdi],bl
   14000faba:	enter  0xe946,0x9d
   14000fabe:	pop    rbx
   14000fabf:	int    0xf4
   14000fac1:	ficom  DWORD PTR [rax+0x36]
   14000fac4:	pop    rdx
   14000fac5:	int    0x46
   14000fac7:	(bad)  
   14000fac8:	jmp    0xc454e6cf
   14000facd:	rex.RB popf 
   14000facf:	(bad)  
   14000fad0:	mov    DWORD PTR [rbx+rbp*4],esi
   14000fad3:	push   0xffffffffffffffbf
   14000fad5:	(bad)  
   14000fad6:	xchg   esi,eax
   14000fad7:	pop    rdi
   14000fad8:	jns    0x14000fb43
   14000fada:	stc    
   14000fadb:	(bad)  
   14000fadc:	mov    BYTE PTR [rdx-0x4e],0x40
   14000fae0:	cmp    eax,0x7f992fc
   14000fae5:	mov    cl,0xce
   14000fae7:	(bad)  
   14000fae9:	rex.WRB out 0x8f,eax
   14000faec:	(bad)  
   14000faed:	cli    
   14000faee:	lods   al,BYTE PTR ds:[rsi]
   14000faef:	xor    DWORD PTR [rcx-0x22],r9d
   14000faf3:	rex.WRXB loopne 0x14000fa78
   14000faf6:	add    eax,DWORD PTR [rdx]
   14000faf8:	push   rcx
   14000faf9:	gs (bad) 
   14000fafb:	jge    0x14000facd
   14000fafd:	xor    al,0xde
   14000faff:	sti    
   14000fb00:	pop    rcx
   14000fb01:	out    0xe3,al
   14000fb03:	(bad)  
   14000fb04:	mov    BYTE PTR [rbp-0x33bbee5e],al
   14000fb0a:	rcl    BYTE PTR [rbp-0x3626f99],0x33
   14000fb11:	xor    DWORD PTR [rbx-0x71],0xffffff83
   14000fb15:	hlt    
   14000fb16:	add    cl,0x7e
   14000fb19:	cmp    eax,0x1280240
   14000fb1e:	cdq    
   14000fb1f:	(bad)  
   14000fb20:	movabs al,ds:0x4007a021e819965a
   14000fb29:	sahf   
   14000fb2a:	fnstenv [rbp+0x3dc26206]
   14000fb30:	rex.WB movabs ds:0x79e0c9bd79f8c428,al
   14000fb3a:	sbb    BYTE PTR [rdx+0x5306b132],cl
   14000fb40:	int3   
   14000fb41:	xchg   ebp,eax
   14000fb42:	jnp    0x14000fb8a
   14000fb44:	push   rsp
   14000fb45:	jmp    0x150ec0c7e
   14000fb4a:	pop    rsp
   14000fb4b:	jg     0x14000fb66
   14000fb4d:	jp     0x14000fb3c
   14000fb4f:	rol    BYTE PTR gs:[rcx-0x85c1f1d],1
   14000fb56:	add    ch,BYTE PTR [rcx-0x29]
   14000fb59:	cmp    esi,DWORD PTR ds:[rcx]
   14000fb5c:	test   BYTE PTR [rsp+rax*4],dl
   14000fb5f:	xchg   ebp,eax
   14000fb60:	movsxd ebx,DWORD PTR [rsi+0x79]
   14000fb63:	movabs eax,ds:0xfeb8bcea504638cd
   14000fb6c:	(bad)  
   14000fb6d:	(bad)  
   14000fb6e:	sbb    al,0xb8
   14000fb70:	in     eax,0x7d
   14000fb72:	call   0x124f7ec55
   14000fb77:	fucomp st(7)
   14000fb79:	mov    esi,0x93cefd3b
   14000fb7e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fb7f:	xor    al,BYTE PTR [rax]
   14000fb81:	(bad)  
   14000fb82:	mov    cl,0x98
   14000fb84:	mov    bl,0xe9
   14000fb86:	cmc    
   14000fb87:	xchg   ebx,eax
   14000fb88:	pop    rsp
   14000fb89:	and    eax,0xc51124a0
   14000fb8e:	pushf  
   14000fb8f:	or     esp,DWORD PTR [rdi]
   14000fb91:	test   edx,eax
   14000fb93:	in     eax,0x3b
   14000fb95:	fsubr  st(6),st
   14000fb97:	xchg   BYTE PTR [rdi],dh
   14000fb99:	(bad)  
   14000fb9a:	cs mov al,0x91
   14000fb9d:	sahf   
   14000fb9e:	rex.WRX shl QWORD PTR [rcx],1
   14000fba1:	(bad)  
   14000fba2:	out    dx,al
   14000fba3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fba4:	sbb    al,0x5a
   14000fba6:	xor    eax,0x999af1b
   14000fbab:	mov    ebp,ss
   14000fbad:	and    edx,DWORD PTR [rbx]
   14000fbaf:	mov    gs,ebp
   14000fbb1:	subps  xmm4,XMMWORD PTR [rbx-0x5769ff4b]
   14000fbb8:	ss (bad) 
   14000fbba:	(bad)  
   14000fbbb:	addr32 (bad) 
   14000fbbd:	rex.RX
   14000fbbe:	es (bad) 
   14000fbc0:	shr    BYTE PTR [rcx-0x5e],1
   14000fbc3:	(bad)  
   14000fbc4:	rex.XB (bad) 
   14000fbc6:	and    eax,0xd2a0ab88
   14000fbcb:	rex.WRXB call 0x186e865c1
   14000fbd1:	pop    rcx
   14000fbd2:	fidivr WORD PTR [rax-0x17]
   14000fbd5:	in     al,dx
   14000fbd6:	mov    ecx,0xf8ba883b
   14000fbdb:	add    eax,0xa5b479f3
   14000fbe0:	pop    rdi
   14000fbe1:	push   rax
   14000fbe2:	test   BYTE PTR [rdi+0x501665fa],dl
   14000fbe8:	scas   al,BYTE PTR es:[rdi]
   14000fbe9:	shr    cl,1
   14000fbeb:	(bad)  
   14000fbec:	and    DWORD PTR [rbp+0x48],ecx
   14000fbef:	in     al,0x24
   14000fbf1:	shl    BYTE PTR [rdi+0x7d],1
   14000fbf4:	shl    BYTE PTR [rsi+rdi*8-0x64e4a07d],cl
   14000fbfb:	cmp    DWORD PTR [rdx-0x5b],esp
   14000fbfe:	ror    BYTE PTR [rcx+0xa],0x1c
   14000fc02:	jnp    0x14000fc23
   14000fc04:	(bad)  
   14000fc05:	mov    cl,0xf7
   14000fc07:	xor    DWORD PTR [rsi-0x2c2e7a5],eax
   14000fc0d:	and    r9d,DWORD PTR [r15-0x1]
   14000fc11:	sub    ecx,DWORD PTR [rsi]
   14000fc13:	or     esp,0x80138020
   14000fc19:	lods   eax,DWORD PTR ds:[rsi]
   14000fc1a:	(bad)  
   14000fc1b:	sahf   
   14000fc1c:	push   rsp
   14000fc1d:	or     bl,BYTE PTR [rax-0x67fc3fda]
   14000fc23:	mov    esp,0x6881196f
   14000fc28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fc29:	leave  
   14000fc2a:	rex.R inc BYTE PTR [rdi-0x3a00b2e]
   14000fc31:	or     DWORD PTR [rsp+rbp*8+0x780d9ec2],eax
   14000fc38:	xchg   ebx,eax
   14000fc39:	add    BYTE PTR [rax],cl
   14000fc3b:	out    0x8d,al
   14000fc3d:	out    0x19,eax
   14000fc3f:	and    ebp,ebp
   14000fc41:	(bad)  
   14000fc42:	fs (bad) 
   14000fc44:	(bad)  
   14000fc45:	fnstsw WORD PTR [rbx-0x3]
   14000fc48:	or     al,0xcc
   14000fc4a:	cli    
   14000fc4b:	sbb    DWORD PTR [rax-0xf],esp
   14000fc4e:	(bad)  
   14000fc4f:	lock or eax,0xb1a41f7
   14000fc55:	rex.WRX stc 
   14000fc57:	es imul esp,esi,0x10
   14000fc5b:	pop    rbx
   14000fc5c:	mov    bl,0x80
   14000fc5e:	jb     0x14000fc0b
   14000fc60:	and    DWORD PTR [rax-0x20fca7],edi
   14000fc66:	(bad)  
   14000fc67:	cmp    cl,ah
   14000fc69:	sti    
   14000fc6a:	movabs r14,0x6dd36fea7e48bbfa
   14000fc74:	(bad)  
   14000fc75:	sbb    al,0x68
   14000fc77:	popf   
   14000fc78:	mov    edi,0xb95f5969
   14000fc7d:	mov    eax,0xa2d07c6a
   14000fc82:	in     al,0x9a
   14000fc84:	rex.WRB movabs r15,0x935444e2152374af
   14000fc8e:	mov    ch,0x10
   14000fc90:	mov    edi,DWORD PTR [rbp-0x2eca06e3]
   14000fc96:	sahf   
   14000fc97:	push   rbx
   14000fc98:	pop    rbx
   14000fc99:	rex.RX loopne 0x14000fd16
   14000fc9c:	scas   eax,DWORD PTR es:[rdi]
   14000fc9d:	(bad)  
   14000fc9e:	add    dh,cl
   14000fca0:	sub    BYTE PTR [rdx-0x3fb31cf1],bl
   14000fca6:	rdpmc  
   14000fca8:	fld    DWORD PTR [rbp+0x2d]
   14000fcab:	xchg   ebx,eax
   14000fcac:	jmp    0x14000fc86
   14000fcae:	rex.WRXB cdqe 
   14000fcb0:	imul   ebx,DWORD PTR [rdx-0xc],0xffffffb5
   14000fcb4:	add    BYTE PTR [rbp+r11*2-0x6a020f33],bl
   14000fcbc:	and    DWORD PTR [rdx],esi
   14000fcbe:	and    eax,DWORD PTR [rsp+riz*8-0x2e]
   14000fcc2:	jrcxz  0x14000fcc4
   14000fcc4:	add    BYTE PTR [rax-0x5a],cl
   14000fcc7:	in     eax,dx
   14000fcc8:	(bad)  
   14000fcc9:	pop    rsp
   14000fcca:	and    eax,0x6086b2fe
   14000fccf:	mov    cl,0x7a
   14000fcd1:	loop   0x14000fd3e
   14000fcd3:	(bad)  
   14000fcd4:	pop    rbx
   14000fcd5:	xchg   edi,eax
   14000fcd6:	cs mov edi,0x43c29e5f
   14000fcdc:	repnz push rsp
   14000fcde:	jo     0x14000fd40
   14000fce0:	push   rcx
   14000fce1:	jmp    0xd5095fd0
   14000fce6:	pop    QWORD PTR [rdi]
   14000fce8:	push   0x29
   14000fcea:	or     bh,bl
   14000fcec:	jns    0x14000fcb1
   14000fcee:	repz and ecx,DWORD PTR [rdi]
   14000fcf1:	out    0x8d,al
   14000fcf3:	sub    dh,cl
   14000fcf5:	adc    eax,eax
   14000fcf7:	pushf  
   14000fcf8:	adc    BYTE PTR [rdx+0x622f2514],0x73
   14000fcff:	add    DWORD PTR [rbp-0x7238c179],ecx
   14000fd05:	rex.WRXB (bad) 
   14000fd07:	pop    rbp
   14000fd08:	cwde   
   14000fd09:	test   DWORD PTR [rbx+0x75],ebx
   14000fd0c:	loope  0x14000fce1
   14000fd0e:	rol    BYTE PTR es:[rbp-0x16],0x81
   14000fd13:	push   rbx
   14000fd14:	mov    bpl,0x20
   14000fd17:	lea    eax,[rbp+0x70]
   14000fd1a:	jae    0x14000fd25
   14000fd1c:	xchg   esp,eax
   14000fd1d:	mov    dh,0x1
   14000fd1f:	xchg   ebp,eax
   14000fd20:	pop    rdx
   14000fd21:	cmc    
   14000fd22:	rex.W in al,dx
   14000fd24:	rex.X and cl,bl
   14000fd27:	ja     0x14000fd25
   14000fd29:	rex jne 0x14000fd21
   14000fd2c:	jnp    0x14000fd99
   14000fd2e:	fcom   DWORD PTR [rbx+0x3]
   14000fd31:	adc    eax,0x58fc42a9
   14000fd36:	(bad)  
   14000fd37:	add    edx,DWORD PTR [rdx+rsi*8]
   14000fd3a:	rcl    BYTE PTR [rdx-0x5a],cl
   14000fd3d:	ja     0x14000fd8a
   14000fd3f:	(bad)  
   14000fd40:	cld    
   14000fd41:	or     BYTE PTR [rsi-0x37a48868],ch
   14000fd47:	(bad)  
   14000fd48:	cmp    eax,ebp
   14000fd4a:	(bad)  
   14000fd4b:	inc    BYTE PTR [rdx]
   14000fd4d:	out    0xdc,al
   14000fd4f:	adc    eax,eax
   14000fd51:	test   al,0xf
   14000fd53:	mov    ebx,0x8c729053
   14000fd58:	sub    eax,DWORD PTR [rip+0xdc40354]        # 0x14dc500b2
   14000fd5e:	sbb    esi,DWORD PTR [rdx-0x54]
   14000fd61:	xchg   esp,eax
   14000fd62:	jrcxz  0x14000fd39
   14000fd64:	push   rsp
   14000fd65:	in     al,dx
   14000fd66:	xchg   esp,ebp
   14000fd68:	mov    ch,0x93
   14000fd6a:	lods   al,BYTE PTR ds:[rsi]
   14000fd6b:	psllq  mm3,mm0
   14000fd6e:	(bad)  
   14000fd6f:	add    al,BYTE PTR [rbx-0x2d]
   14000fd72:	rex.XB out dx,eax
   14000fd74:	mov    eax,0xca2495bd
   14000fd79:	sub    ebx,DWORD PTR [rdi-0x80]
   14000fd7c:	sbb    BYTE PTR [rax-0x205939af],bl
   14000fd82:	push   rdi
   14000fd83:	xor    ch,dl
   14000fd85:	sub    edx,ecx
   14000fd87:	cdq    
   14000fd88:	(bad)  
   14000fd89:	mov    bh,0xb6
   14000fd8b:	xor    dh,ah
   14000fd8d:	movabs al,ds:0xd886bcec6230c60d
   14000fd96:	pop    rcx
   14000fd97:	add    DWORD PTR [rdi-0x9bdecec],esi
   14000fd9d:	(bad)  
   14000fd9e:	mov    WORD PTR [rip+0xc756bc6],ds        # 0x14c76696a
   14000fda4:	rex.WRB (bad) 
   14000fda6:	push   rbx
   14000fda7:	xor    edx,DWORD PTR [rcx+rcx*1-0x55323477]
   14000fdae:	movsxd edi,DWORD PTR [rdi-0x20]
   14000fdb1:	(bad)  
   14000fdb2:	xor    BYTE PTR [rax-0x47f968ed],al
   14000fdb8:	shl    bl,cl
   14000fdba:	fst    DWORD PTR [rdx+0x79897005]
   14000fdc0:	add    al,0xc2
   14000fdc2:	adc    BYTE PTR [rsi+rdx*4-0x44db06e],0xfd
   14000fdca:	sub    edx,0x2ff3cdb9
   14000fdd0:	fnsave [rsi+0x6a]
   14000fdd3:	stos   DWORD PTR es:[rdi],eax
   14000fdd4:	jae    0x14000fe1d
   14000fdd6:	xchg   edi,eax
   14000fdd7:	cli    
   14000fdd8:	clc    
   14000fdd9:	add    eax,0xf2f779fd
   14000fdde:	cld    
   14000fddf:	sub    esi,DWORD PTR [rsi+0x12]
   14000fde2:	adc    ecx,esi
   14000fde4:	xor    DWORD PTR [rdi+rcx*2+0x10fe79a9],ecx
   14000fdeb:	fxch   st(6)
   14000fded:	and    al,BYTE PTR [rax-0xd]
   14000fdf0:	jrcxz  0x14000fdb1
   14000fdf2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fdf4:	sbb    eax,0xa9483111
   14000fdf9:	test   eax,0xdc8e8003
   14000fdfe:	mov    esi,esi
   14000fe00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fe01:	dec    BYTE PTR [rdi]
   14000fe03:	rex.RB out dx,eax
   14000fe05:	jl     0x14000fdcb
   14000fe07:	add    al,0x2a
   14000fe09:	sub    ebx,DWORD PTR [rdx]
   14000fe0b:	outs   dx,DWORD PTR ds:[rsi]
   14000fe0c:	or     DWORD PTR [rbx+rdx*1+0x2e6853eb],ecx
   14000fe13:	add    ch,BYTE PTR [rcx+0x17]
   14000fe16:	movabs ds:0x90c73fa9d895109a,al
   14000fe1f:	cmp    al,0xf1
   14000fe21:	(bad)  
   14000fe22:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000fe24:	(bad)  
   14000fe25:	pop    rsp
   14000fe26:	sti    
   14000fe27:	out    0x3,eax
   14000fe29:	mov    BYTE PTR [rdx-0x230eab7e],cl
   14000fe2f:	(bad)  
   14000fe30:	ins    DWORD PTR es:[rdi],dx
   14000fe31:	hlt    
   14000fe32:	movabs ds:0xb3b592ca9d59d7d5,al
   14000fe3b:	xor    bh,bl
   14000fe3d:	dec    DWORD PTR [rdx]
   14000fe3f:	in     al,0xd2
   14000fe41:	jae    0x14000fe53
   14000fe43:	xchg   ebx,eax
   14000fe44:	pop    rbx
   14000fe45:	or     eax,0x50659580
   14000fe4a:	retf   0x231
   14000fe4d:	push   0x0
   14000fe4f:	rex.WB or spl,BYTE PTR [r9]
   14000fe52:	adc    eax,0xe6029571
   14000fe57:	fcom   QWORD PTR [rbx]
   14000fe59:	nop
   14000fe5a:	mov    bl,0x4f
   14000fe5c:	movabs al,ds:0x1894dbfeefba9099
   14000fe65:	adc    ecx,esi
   14000fe67:	pop    rdx
   14000fe68:	cwde   
   14000fe69:	(bad)  
   14000fe6a:	fs (bad) 
   14000fe6c:	and    edx,esi
   14000fe6e:	std    
   14000fe6f:	mov    esi,0xc4a86c92
   14000fe74:	push   0xffffffffa4488005
   14000fe79:	cwde   
   14000fe7a:	enter  0x5e28,0x91
   14000fe7e:	adc    DWORD PTR [rax+0x57718111],ecx
   14000fe84:	sbb    esi,DWORD PTR [rcx+0x6b]
   14000fe87:	mov    dl,0xe7
   14000fe89:	mov    cl,0xe0
   14000fe8b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fe8c:	xchg   edi,eax
   14000fe8d:	jns    0x14000fea4
   14000fe8f:	push   0x3c
   14000fe91:	xchg   ebp,eax
   14000fe92:	ds rex.WX jne 0x14000fe82
   14000fe96:	(bad)  
   14000fe97:	pop    rdi
   14000fe98:	shl    BYTE PTR [rip+0x2dd50061],0x98        # 0x16dd5ff00
   14000fe9f:	add    BYTE PTR [rbx],ch
   14000fea1:	jnp    0x14000fe6c
   14000fea3:	in     eax,0xc5
   14000fea5:	(bad)  
   14000fea6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fea7:	fiadd  WORD PTR [rdi-0x1b]
   14000feaa:	adc    bh,BYTE PTR es:[rdi]
   14000fead:	add    DWORD PTR [rax],edi
   14000feaf:	jnp    0x14000fe9b
   14000feb1:	(bad)  
   14000feb2:	jg     0x14000fef6
   14000feb4:	add    al,0xfc
   14000feb6:	lods   al,BYTE PTR ds:[rsi]
   14000feb7:	stc    
   14000feb8:	and    bh,BYTE PTR [rdx]
   14000feba:	outs   dx,BYTE PTR ds:[rsi]
   14000febb:	jne    0x14000fe5c
   14000febd:	rex.RB hlt 
   14000febf:	movabs ds:0xe2fe8f7c0b1c20fc,al
   14000fec8:	jrcxz  0x14000feda
   14000feca:	call   0xf465f652
   14000fecf:	jo     0x14000ff44
   14000fed1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fed2:	and    esp,esp
   14000fed4:	adc    cl,BYTE PTR [rsi]
   14000fed6:	ror    ah,1
   14000fed8:	(bad)  
   14000fed9:	(bad)  
   14000feda:	add    BYTE PTR [rbp+0x1b9e7e87],cl
   14000fee0:	(bad)  
   14000fee1:	icebp  
   14000fee2:	ja     0x14000ff44
   14000fee4:	xchg   esi,eax
   14000fee5:	mov    gs,ebx
   14000fee7:	(bad)  
   14000fee8:	sub    dl,al
   14000feea:	adc    DWORD PTR [rip+0xffffffff9b894031],ecx        # 0xdb8a3f21
   14000fef0:	rex.WB call 0xe08c1a78
   14000fef6:	(bad)  
   14000fef7:	push   0x3
   14000fef9:	rex.X jbe 0x14000ff66
   14000fefc:	rcl    ebx,1
   14000fefe:	(bad)  
   14000feff:	test   DWORD PTR [rsi+0x52],esi
   14000ff02:	xchg   ecx,eax
   14000ff03:	cmp    BYTE PTR [rax],cl
   14000ff05:	(bad)  
   14000ff06:	sahf   
   14000ff07:	test   esi,0x2cfcf4d
   14000ff0d:	sti    
   14000ff0e:	mov    cl,ah
   14000ff10:	hlt    
   14000ff11:	loop   0x14000fee4
   14000ff13:	sub    edi,ebp
   14000ff15:	sbb    al,BYTE PTR [rdi+0x20863b1c]
   14000ff1b:	cmp    DWORD PTR es:[rcx-0x2b05ed84],0xffffff97
   14000ff23:	and    DWORD PTR [rbx-0x19],ebp
   14000ff26:	adc    BYTE PTR [rdi+rdx*1+0x48132c4a],dh
   14000ff2d:	push   rdx
   14000ff2e:	adc    bl,bl
   14000ff30:	(bad)  
   14000ff31:	jmp    0x14000ff1e
   14000ff33:	sub    dl,bh
   14000ff35:	rcl    edi,0xaf
   14000ff38:	lahf   
   14000ff39:	clc    
   14000ff3a:	out    0xa0,eax
   14000ff3c:	shl    DWORD PTR [rsi],1
   14000ff3e:	fnsave [rbx-0x14]
   14000ff41:	push   rax
   14000ff42:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ff43:	mov    ebp,0x970bb1d0
   14000ff48:	rex.RB (bad) 
   14000ff4a:	rol    al,0xe4
   14000ff4d:	sbb    DWORD PTR [rcx-0x3e66af3f],ebx
   14000ff53:	adc    BYTE PTR [rcx+0x61310c67],0x9d
   14000ff5a:	rex.RXB jns 0x14000ffa7
   14000ff5d:	push   rsi
   14000ff5e:	fdivr  QWORD PTR [rdi-0x37b7f672]
   14000ff64:	mov    bl,0x66
   14000ff66:	xchg   DWORD PTR fs:[rax+0x5e],ecx
   14000ff6a:	fbld   TBYTE PTR [rdx-0x56]
   14000ff6d:	sbb    al,0x8b
   14000ff6f:	sub    bl,BYTE PTR [rdi+0x6be4f975]
   14000ff75:	(bad)  
   14000ff76:	pop    rsi
   14000ff77:	mov    ch,0x44
   14000ff79:	call   FWORD PTR [rsi-0x1]
   14000ff7c:	mov    eax,0x80a00c26
   14000ff81:	(bad)  
   14000ff82:	(bad)  
   14000ff83:	cmp    DWORD PTR [rax],eax
   14000ff85:	js     0x14000ff60
   14000ff87:	test   dl,dh
   14000ff89:	mov    cl,0xe8
   14000ff8b:	jae    0x14000ff8f
   14000ff8d:	icebp  
   14000ff8e:	add    eax,eax
   14000ff90:	retf   
   14000ff91:	iret   
   14000ff92:	jl     0x14000ff8f
   14000ff94:	xchg   DWORD PTR [rdi],ebp
   14000ff96:	cwde   
   14000ff97:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ff98:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ff9a:	(bad)  
   14000ff9b:	repz clc 
   14000ff9d:	mov    BYTE PTR [rcx+0xc],bh
   14000ffa0:	in     eax,0x91
   14000ffa2:	pop    rdi
   14000ffa3:	(bad)  
   14000ffa4:	jns    0x14000ff83
   14000ffa6:	(bad)  
   14000ffa7:	xor    ecx,edx
   14000ffa9:	xchg   DWORD PTR [rax],ecx
   14000ffab:	(bad)  
   14000ffac:	or     DWORD PTR [rdx],ebp
   14000ffae:	mov    dh,0x67
   14000ffb0:	adc    bh,BYTE PTR [rdi+riz*8+0x47]
   14000ffb4:	(bad)  
   14000ffb5:	cli    
   14000ffb6:	vmaxpd ymm9,ymm6,ymm7
   14000ffba:	sub    eax,0xbdc8e83e
   14000ffbf:	push   0xffffffff8abbf23f
   14000ffc4:	fcomip st,st(5)
   14000ffc6:	sub    DWORD PTR [rbx],edx
   14000ffc8:	rex.R jp 0x14000ffb4
   14000ffcb:	or     DWORD PTR [rcx],ebx
   14000ffcd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ffce:	pop    rdx
   14000ffcf:	and    eax,0x16d2806d
   14000ffd4:	ror    BYTE PTR [rcx],0x44
   14000ffd7:	cmp    BYTE PTR [rax],dl
   14000ffd9:	cmp    al,0x51
   14000ffdb:	test   eax,0x100685d1
   14000ffe0:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000ffe2:	sar    BYTE PTR [rdx-0x15088b44],0x7f
   14000ffe9:	je     0x140010029
   14000ffeb:	(bad)  
   14000ffec:	jbe    0x14000ff9a
   14000ffee:	xor    al,BYTE PTR [rdx+rdx*2-0x33c14d0d]
   14000fff5:	stc    
   14000fff6:	(bad)  
   14000fff7:	(bad)  
   14000fff8:	rex.WRX jg 0x140010018
   14000fffb:	sbb    BYTE PTR [rbp-0x45],ch
   14000fffe:	addr32 out 0x60,al
   140010001:	adc    al,BYTE PTR [rax+0x25]
   140010004:	push   rsi
   140010005:	mov    esp,ecx
   140010007:	add    al,0xce
   140010009:	jno    0x14001001a
   14001000b:	jb     0x14000ff99
   14001000d:	rex.WXB mov r14b,0x57
   140010010:	movabs al,ds:0xf7c1f4d041bffe9f
   140010019:	fst    st(3)
   14001001b:	add    al,0x91
   14001001d:	xor    DWORD PTR [rdx],eax
   14001001f:	xor    DWORD PTR [rdx-0x3c],ebx
   140010022:	push   0x511c3d0d
   140010027:	sbb    BYTE PTR ds:[rax+0x46090e19],dh
   14001002e:	mov    ebx,0x3f360255
   140010033:	rex.R ror DWORD PTR [rax],0xa
   140010037:	adc    ecx,DWORD PTR [rax+0x3c]
   14001003a:	loope  0x14000ffd3
   14001003c:	sbb    ecx,eax
   14001003e:	mov    WORD PTR [rsi+0xf],cs
   140010041:	ss pop rsi
   140010043:	rex.WB
   140010044:	rex.RB fnstenv [r13+0x35e13eca]
   14001004b:	out    dx,eax
   14001004c:	(bad)  
   14001004d:	mov    ch,0x3f
   14001004f:	(bad)  
   140010050:	xor    eax,0x8000066
   140010055:	xchg   ah,bh
   140010057:	retf   0xe514
   14001005a:	movabs ds:0x7f434fc249341d7,eax
   140010063:	ret    
   140010064:	(bad)  
   140010065:	(bad)  [rbx+0x20463fab]
   14001006b:	jl     0x1400100b7
   14001006d:	push   QWORD PTR [rcx]
   14001006f:	cld    
   140010070:	int3   
   140010071:	jno    0x14001002b
   140010073:	mov    al,0x10
   140010075:	out    0x65,al
   140010077:	sub    DWORD PTR [rdi-0x612f871e],ecx
   14001007d:	push   rcx
   14001007e:	add    al,0xe4
   140010080:	clc    
   140010081:	jae    0x14001004c
   140010083:	ins    DWORD PTR es:[rdi],dx
   140010084:	(bad)  
   140010085:	push   rax
   140010086:	xchg   ebp,eax
   140010087:	xchg   DWORD PTR ss:[rdx-0x62056155],ecx
   14001008e:	nop
   14001008f:	ds hlt 
   140010091:	jae    0x14001006f
   140010093:	clc    
   140010094:	in     al,0x6f
   140010096:	rex.X (bad) 
   140010098:	por    mm6,QWORD PTR [rcx]
   14001009b:	rex.WRB test BYTE PTR [r8],r13b
   14001009e:	clc    
   14001009f:	(bad)  
   1400100a0:	rcr    BYTE PTR [rax+0x0],1
   1400100a3:	xchg   edx,eax
   1400100a4:	scas   al,BYTE PTR es:[rdi]
   1400100a5:	(bad)  
   1400100a6:	or     al,0x92
   1400100a8:	(bad)  
   1400100a9:	out    0x33,al
   1400100ab:	(bad)
   1400100af:	int    0x2f
   1400100b1:	cwde   
   1400100b2:	popf   
   1400100b3:	push   rsp
   1400100b4:	sahf   
   1400100b5:	mov    cl,0xba
   1400100b7:	enter  0x2a47,0xc7
   1400100bb:	rex.WX
   1400100bc:	lock repnz xor al,0x3e
   1400100c0:	out    dx,eax
   1400100c1:	sti    
   1400100c2:	gs sti 
   1400100c4:	stos   BYTE PTR es:[rdi],al
   1400100c5:	cmc    
   1400100c6:	subps  xmm7,XMMWORD PTR [rdx]
   1400100c9:	loope  0x140010139
   1400100cb:	outs   dx,BYTE PTR ds:[rsi]
   1400100cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100cd:	or     eax,ecx
   1400100cf:	or     eax,0xb35a6920
   1400100d4:	and    BYTE PTR [rcx+0x6d],cl
   1400100d7:	ins    BYTE PTR es:[rdi],dx
   1400100d8:	add    DWORD PTR [rip+0xfffffffffe27d1f7],edx        # 0x13e28d2d5
   1400100de:	sbb    eax,0xcb1975b0
   1400100e3:	popf   
   1400100e4:	mov    ah,0x79
   1400100e6:	ret    
   1400100e7:	or     eax,0xc337cacb
   1400100ec:	sbb    BYTE PTR [rbx+0x74],ah
   1400100ef:	sahf   
   1400100f0:	mov    esi,ebp
   1400100f2:	cmovns ecx,DWORD PTR [rdi]
   1400100f5:	xchg   DWORD PTR [rdx-0x4e],ecx
   1400100f8:	adc    DWORD PTR [rbx-0x4c],eax
   1400100fb:	(bad)  
   1400100fc:	jl     0x1400100e0
   1400100fe:	movabs al,ds:0x600a12f798b9940d
   140010107:	(bad)  
   140010108:	int3   
   140010109:	sahf   
   14001010a:	or     DWORD PTR [rax],esp
   14001010c:	xchg   edi,eax
   14001010d:	adc    dl,dl
   14001010f:	imul   edx,DWORD PTR [rsi],0xdaaa89e0
   140010115:	sbb    al,0xb2
   140010117:	cmp    esi,DWORD PTR [rdx-0x5a3a92ee]
   14001011d:	(bad)  
   14001011e:	jge    0x1400100a5
   140010120:	imul   ecx,eax,0x0
   140010123:	sub    bl,BYTE PTR [rip+0xffffffffb8dc614f]        # 0xf8dd6278
   140010129:	and    al,0xd9
   14001012b:	adc    esi,DWORD PTR [rax]
   14001012d:	rex.RB cmc 
   14001012f:	jg     0x14001011a
   140010131:	fldenv [rdi]
   140010133:	(bad)  
   140010134:	mov    esi,0x23fb7685
   140010139:	repnz sub dh,bl
   14001013c:	es iret 
   14001013e:	and    ebx,DWORD PTR [rax]
   140010140:	repnz pop rsi
   140010142:	push   rcx
   140010143:	sbb    al,0x13
   140010145:	mov    eax,0x5fb7f4b1
   14001014a:	enter  0xcbe9,0x61
   14001014e:	cmp    DWORD PTR [rax+0x6c],esi
   140010151:	jg     0x1400101a2
   140010153:	imul   ecx,ebx,0xffffffab
   140010156:	mov    WORD PTR [rbx],es
   140010158:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010159:	and    esi,edi
   14001015b:	movabs ds:0x36a3f3dc28efc8f3,al
   140010164:	in     eax,dx
   140010165:	pop    rcx
   140010166:	imul   eax,DWORD PTR [rdi+0x19],0xa7105a6b
   14001016d:	movabs al,ds:0x1b842e93093ac746
   140010176:	jbe    0x140010111
   140010178:	scas   eax,DWORD PTR es:[rdi]
   140010179:	(bad)  
   14001017b:	nop
   14001017c:	push   rdx
   14001017d:	repz retf 
   14001017f:	test   dh,ch
   140010181:	sti    
   140010182:	(bad)  
   140010183:	xchg   edx,eax
   140010184:	cld    
   140010185:	mov    cl,0x8a
   140010187:	(bad)  
   140010188:	cmp    ch,BYTE PTR [rdi+0x12]
   14001018b:	rol    edi,0x95
   14001018e:	rex.W cmc 
   140010190:	xchg   DWORD PTR [rax+0x2e],eax
   140010193:	(bad)  
   140010194:	(bad)  
   140010195:	cld    
   140010196:	(bad)  
   140010197:	push   rdi
   140010198:	add    cl,0xba
   14001019b:	repz or ebx,DWORD PTR [rax+0x27]
   14001019f:	and    DWORD PTR [rip+0xffffffffac349029],esp        # 0xec3591ce
   1400101a5:	mov    BYTE PTR [rdx-0x52],0x9d
   1400101a9:	(bad)  
   1400101aa:	jbe    0x140010175
   1400101ac:	mov    edi,0xd0410ff1
   1400101b1:	hlt    
   1400101b2:	(bad)  
   1400101b3:	ja     0x140010192
   1400101b5:	shl    DWORD PTR [rsi-0x73],1
   1400101b8:	adc    DWORD PTR [rcx],edx
   1400101ba:	xor    DWORD PTR [rcx],0x94e59d02
   1400101c0:	clts   
   1400101c2:	xchg   edx,eax
   1400101c3:	cmova  esp,DWORD PTR [rbx+riz*8+0xd]
   1400101c8:	add    BYTE PTR [rax-0x479381cd],cl
   1400101ce:	or     cl,bh
   1400101d0:	sbb    al,0x88
   1400101d2:	push   rsp
   1400101d3:	(bad)  
   1400101d4:	jns    0x140010208
   1400101d6:	lods   eax,DWORD PTR ds:[rsi]
   1400101d7:	in     eax,0x51
   1400101d9:	rex.WRXB cmp r12b,BYTE PTR [r11]
   1400101dc:	mov    ebp,ebp
   1400101de:	mov    edx,0xda92d8f2
   1400101e3:	std    
   1400101e4:	fwait
   1400101e5:	movabs ds:0xd03d8fd48fdb7f2,eax
   1400101ee:	and    BYTE PTR [rdx-0x6b47fe40],dh
   1400101f4:	cdq    
   1400101f5:	outs   dx,BYTE PTR ds:[rsi]
   1400101f6:	(bad)  
   1400101f7:	push   0x27
   1400101f9:	(bad)  
   1400101fa:	lahf   
   1400101fb:	add    ah,dh
   1400101fd:	(bad)  
   1400101fe:	ret    
   1400101ff:	(bad)  
   140010200:	vpaddd ymm0,ymm9,ymm3
   140010204:	rex.R shl BYTE PTR [rdi+0x54461ff4],0x31
   14001020c:	rex.B ja 0x1400101b7
   14001020f:	adc    BYTE PTR [rbp+0x18],bh
   140010212:	rex.W mov cl,0x46
   140010215:	in     eax,dx
   140010216:	sub    DWORD PTR [rcx+0x47],ebp
   140010219:	shl    eax,0x1a
   14001021c:	rex.RXB
   14001021d:	rex jae 0x140010221
   140010220:	int    0x87
   140010222:	inc    DWORD PTR [rsi+0x6bfe3f4a]
   140010228:	xor    BYTE PTR [rbp-0x59],ch
   14001022b:	or     eax,0xd5e754c4
   140010230:	in     al,dx
   140010231:	mov    ah,0x5
   140010233:	imul   ebp,DWORD PTR [rip+0xffffffffa04b9a82],0x4e105a4        # 0xe04c9cbf
   14001023d:	add    al,0x67
   14001023f:	jae    0x1400101d0
   140010241:	repz rcl al,1
   140010244:	not    BYTE PTR [rdx-0x4c]
   140010247:	(bad)  
   140010248:	mov    ch,0xb9
   14001024a:	ror    DWORD PTR [rax],cl
   14001024c:	mov    esi,0x2eaaae74
   140010251:	mov    ecx,0xd0227799
   140010256:	jo     0x14001025b
   140010258:	cli    
   140010259:	sti    
   14001025a:	pop    rdi
   14001025b:	sbb    DWORD PTR [rsi+rsi*8-0x26],0x2508280
   140010263:	push   rax
   140010264:	ret    
   140010265:	push   0x2
   140010267:	retf   0x232
   14001026a:	jb     0x14001027a
   14001026c:	rex.X jae 0x140010268
   14001026f:	add    eax,0xd0e7c5c8
   140010274:	push   rsi
   140010275:	xchg   esp,eax
   140010276:	fdiv   QWORD PTR [rbx-0x9]
   140010279:	xor    ebp,esp
   14001027b:	sbb    DWORD PTR [rax+0x679d0318],esi
   140010281:	enter  0x3fa,0xca
   140010285:	(bad)  
   140010286:	add    ebp,eax
   140010288:	ror    DWORD PTR [rax-0x7de2e73],1
   14001028e:	xchg   DWORD PTR [rdx+rcx*4-0x6d083a3b],ebx
   140010295:	rex.WRX (bad) 
   140010297:	in     eax,0x49
   140010299:	movabs ds:0xa86d9a14976220fe,al
   1400102a2:	mov    ecx,0x9a5aedcf
   1400102a7:	rex.XB pushf 
   1400102a9:	stc    
   1400102aa:	movsxd edi,DWORD PTR es:[rbx+0xa]
   1400102ae:	jrcxz  0x140010287
   1400102b0:	in     al,dx
   1400102b1:	(bad)  
   1400102b2:	ds jo  0x140010242
   1400102b5:	sbb    al,al
   1400102b7:	fdivr  DWORD PTR [rbx+0xb]
   1400102ba:	std    
   1400102bb:	imul   esi,DWORD PTR [rbx-0x1e],0xf5b2dcc9
   1400102c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400102c3:	addr32 lahf 
   1400102c5:	cld    
   1400102c6:	js     0x140010256
   1400102c8:	and    al,0x7d
   1400102ca:	fdivr  DWORD PTR [rdx+rcx*4]
   1400102cd:	ret    
   1400102ce:	mov    dl,0x1a
   1400102d0:	push   0x1
   1400102d2:	or     ah,BYTE PTR [rdx-0x4a]
   1400102d5:	rex.WXB pop r15
   1400102d7:	mov    ebp,0x5ce128c9
   1400102dc:	mov    al,0xf5
   1400102de:	movabs ds:0xe3f9b08fd1b30456,eax
   1400102e7:	rex.WRB pop r14
   1400102e9:	adc    eax,0xd17bd8f8
   1400102ee:	jle    0x1400102d4
   1400102f0:	mov    bh,0x95
   1400102f2:	fdiv   st(5),st
   1400102f4:	movabs ds:0x8141263a156970ba,eax
   1400102fd:	mov    eax,0xb60a7361
   140010302:	(bad)  
   140010303:	(bad)  
   140010304:	sbb    ebx,DWORD PTR [rbp-0x15]
   140010307:	or     BYTE PTR [rbx+0x6df0841d],0xb5
   14001030e:	(bad)  
   14001030f:	push   rdi
   140010310:	ror    BYTE PTR [rdx+rcx*8-0x71],cl
   140010314:	cmp    eax,0x8ffd3fd
   140010319:	or     WORD PTR [rbp+0x125a0baf],dx
   140010320:	loopne 0x1400102bf
   140010322:	xchg   dh,ah
   140010324:	ror    BYTE PTR [rcx-0x68],cl
   140010327:	(bad)  
   140010328:	mov    edi,0xc36d190e
   14001032d:	addr32 pop rdi
   14001032f:	and    eax,0x86bfba95
   140010334:	cmc    
   140010335:	or     eax,0xdfd5f238
   14001033a:	std    
   14001033b:	add    edx,DWORD PTR [rax-0x31004598]
   140010341:	sbb    ebx,ebx
   140010343:	test   cl,0x6d
   140010346:	gs (bad) 
   140010348:	sbb    BYTE PTR [rax+0x1fdd232c],bl
   14001034e:	jo     0x14001038e
   140010350:	sbb    BYTE PTR [rcx-0x3f077232],cl
   140010356:	movsxd esp,edi
   140010358:	ins    DWORD PTR es:[rdi],dx
   140010359:	jo     0x1400103a7
   14001035b:	rex cld 
   14001035d:	ja     0x1400102e3
   14001035f:	(bad)  
   140010360:	sbb    eax,0x139e5f61
   140010365:	(bad)  
   140010366:	push   rsi
   140010367:	adc    DWORD PTR [rax-0x478399e7],esi
   14001036d:	icebp  
   14001036e:	(bad)  
   14001036f:	(bad)  
   140010370:	int3   
   140010371:	jp     0x140010370
   140010373:	sti    
   140010374:	(bad)  
   140010375:	cli    
   140010376:	jno    0x140010305
   140010378:	xor    eax,0xd9dee700
   14001037d:	push   rcx
   14001037e:	lea    ebx,[rbx-0x1ffe02da]
   140010384:	loop   0x140010370
   140010386:	loopne 0x1400103e9
   140010388:	add    dh,al
   14001038a:	sub    ebp,edi
   14001038c:	rex.RXB xchg r9d,eax
   14001038e:	xchg   ecx,eax
   14001038f:	or     eax,DWORD PTR [rbp+riz*2-0x577d6f9a]
   140010396:	movabs ds:0xd050ee7fd14f41,eax
   14001039f:	retf   0xba3e
   1400103a2:	imul   esi,eax,0xffffff96
   1400103a5:	fwait
   1400103a6:	mov    ebp,DWORD PTR [rax+0x7d]
   1400103a9:	in     al,0x6f
   1400103ab:	test   al,0xf4
   1400103ad:	(bad)  
   1400103ae:	(bad)  
   1400103af:	(bad)  
   1400103b0:	je     0x14001039d
   1400103b2:	nop
   1400103b3:	cs sbb al,0x92
   1400103b6:	or     BYTE PTR [rdx-0x4e4ed770],dh
   1400103bc:	add    ch,BYTE PTR [rbp+0xf34083]
   1400103c2:	and    al,0x69
   1400103c4:	fisub  DWORD PTR [rax+0x22]
   1400103c7:	test   al,0x40
   1400103c9:	nop
   1400103ca:	sub    DWORD PTR [rcx-0x7b],0xa8a9ed2d
   1400103d1:	adc    dl,BYTE PTR [ebx]
   1400103d4:	or     BYTE PTR [rdi],bh
   1400103d6:	and    dh,BYTE PTR [rbp+0x1]
   1400103d9:	adc    al,0x4a
   1400103dc:	pop    rax
   1400103dd:	mov    esp,0xbb52f100
   1400103e2:	pop    rsp
   1400103e3:	fisubr WORD PTR [rdi+rbx*2-0x7b]
   1400103e7:	ds cmc 
   1400103e9:	gs sar dl,1
   1400103ec:	cmp    DWORD PTR [rax-0x61],ebx
   1400103ef:	cmp    eax,DWORD PTR [rbx]
   1400103f1:	stos   BYTE PTR es:[rdi],al
   1400103f2:	add    DWORD PTR [rcx-0x57],edx
   1400103f5:	rex.WXB movsxd rsp,DWORD PTR [r14+0x63]
   1400103f9:	sbb    ecx,esp
   1400103fb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400103fc:	xchg   ebx,eax
   1400103fd:	xor    BYTE PTR [rdi-0x4eb4bc62],dl
   140010403:	(bad)  
   140010404:	add    bh,ah
   140010406:	mov    ebp,0x26b46045
   14001040b:	cmp    eax,0xd468d21c
   140010410:	out    0x3c,eax
   140010412:	(bad)  
   140010413:	rcr    DWORD PTR [rax],0x63
   140010416:	loop   0x1400103ec
   140010418:	test   al,0x41
   14001041a:	cli    
   14001041b:	push   rbx
   14001041c:	(bad)  
   14001041d:	or     BYTE PTR [rax+0x31803d67],bl
   140010423:	loop   0x1400103c7
   140010425:	or     ebp,DWORD PTR [rbp+0x67]
   140010428:	cmp    BYTE PTR [rdi-0x80],bl
   14001042b:	iret   
   14001042c:	(bad)  
   14001042d:	pop    rcx
   14001042e:	(bad)  
   14001042f:	pop    rsp
   140010430:	cdq    
   140010431:	test   DWORD PTR [rdx-0x5aa04036],ebp
   140010437:	(bad)  
   140010438:	mov    al,0x17
   14001043a:	rex.WRX rcl BYTE PTR [rdx+0x5a],0x5
   14001043f:	add    DWORD PTR [rdx+0x4751db84],ecx
   140010445:	rex.WRXB
   140010446:	es (bad) 
   140010448:	(bad)  
   140010449:	mov    esi,0xe60fecf7
   14001044e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001044f:	rol    BYTE PTR [rdi+0x6c3863cd],cl
   140010455:	push   rsi
   140010456:	ins    BYTE PTR es:[rdi],dx
   140010457:	or     eax,0x7b0e7652
   14001045c:	rex.WB out dx,eax
   14001045e:	mov    DWORD PTR [rcx+0x4a577ddf],0x24156265
   140010468:	xchg   edx,eax
   140010469:	stos   BYTE PTR es:[rdi],al
   14001046a:	push   rbp
   14001046b:	sti    
   14001046c:	cmp    eax,esp
   14001046e:	lea    edi,[rcx-0xb]
   140010471:	jl     0x14001045f
   140010473:	mov    r12b,0x1f
   140010476:	stc    
   140010477:	sbb    eax,0x6d38f725
   14001047c:	movabs al,ds:0x4116b521273907aa
   140010485:	frstor [rbx]
   140010487:	rex movabs ds:0x272036c470d3f103,eax
   140010491:	test   BYTE PTR [rip+0x319c3554],0x4e        # 0x1719d39ec
   140010498:	push   rax
   140010499:	ds (bad) 
   14001049b:	push   rdx
   14001049c:	cmp    al,0x70
   14001049e:	cmp    al,0x4b
   1400104a0:	adc    BYTE PTR [rbx+0x44],dh
   1400104a3:	jmp    0x140010434
   1400104a5:	repz (bad) 
   1400104a7:	adc    DWORD PTR [rdi],esp
   1400104a9:	rex.RX lea r8d,[rcx-0x33c704c2]
   1400104b0:	sub    ebx,edi
   1400104b2:	or     eax,0x4ed89bb2
   1400104b7:	(bad)  
   1400104b8:	push   rdx
   1400104b9:	(bad)
   1400104be:	hlt    
   1400104bf:	ja     0x1400104c0
   1400104c1:	xor    eax,0x76de9a20
   1400104c6:	out    0x4d,eax
   1400104c8:	ins    DWORD PTR es:[rdi],dx
   1400104c9:	iret   
   1400104ca:	(bad)  
   1400104cb:	lods   eax,DWORD PTR ds:[rsi]
   1400104cc:	outs   dx,DWORD PTR ds:[rsi]
   1400104cd:	pop    rdi
   1400104ce:	enter  0x9ce8,0x74
   1400104d2:	outs   dx,DWORD PTR ds:[rsi]
   1400104d3:	or     BYTE PTR [rip+0x5ad68a1c],bh        # 0x19ad78ef5
   1400104d9:	mov    ah,0x41
   1400104db:	cwde   
   1400104dc:	sti    
   1400104dd:	test   DWORD PTR [rdx+rcx*2-0x477bb9ca],0xbe667250
   1400104e8:	or     BYTE PTR [rip+0x45a046d1],cl        # 0x185a14bbf
   1400104ee:	rex.X test al,0x52
   1400104f1:	rex.W sub bl,cl
   1400104f4:	jbe    0x1400104db
   1400104f6:	rex.B cmp al,0x79
   1400104f9:	xor    bl,BYTE PTR [rbx]
   1400104fb:	rol    esp,cl
   1400104fd:	(bad)  
   1400104fe:	ds jrcxz 0x140010503
   140010501:	xlat   BYTE PTR ds:[rbx]
   140010502:	mov    WORD PTR [rcx],es
   140010504:	push   rsp
   140010505:	sbb    BYTE PTR [rdx-0x4],ch
   140010508:	push   rbx
   140010509:	sub    dh,bl
   14001050b:	cs jl  0x140010554
   14001050e:	(bad)  
   14001050f:	pop    rdi
   140010510:	mov    edx,0x4c93e170
   140010515:	ror    BYTE PTR [rdi+0x60073fe9],0x89
   14001051c:	cmp    cl,BYTE PTR [rax-0x6]
   14001051f:	xor    BYTE PTR [rax-0x23],al
   140010522:	jg     0x1400105a2
   140010524:	(bad)  
   140010525:	rex.R stos DWORD PTR es:[rdi],eax
   140010527:	jmp    0x1400104eb
   140010529:	sub    eax,0x1a0f8222
   14001052e:	jo     0x1400104d4
   140010530:	rex.WR pop rsp
   140010532:	retf   
   140010533:	xchg   edi,eax
   140010534:	rex.WR
   140010535:	sbb    edi,r8d
   140010538:	xor    eax,0xfd466e18
   14001053d:	adc    BYTE PTR [rbx+0x79],cl
   140010540:	(bad)  
   140010541:	test   eax,0x65ad026
   140010546:	mov    ch,0xe
   140010548:	pop    rax
   140010549:	int    0xc0
   14001054b:	rex.WB fidiv DWORD PTR [r10+0x7f885c75]
   140010552:	mov    DWORD PTR [rbx+riz*4-0x341caa6e],esi
   140010559:	(bad)
   14001055c:	mov    bl,bl
   14001055e:	rex.WB jmp 0x16405db20
   140010564:	cmp    ch,ah
   140010566:	push   rax
   140010567:	fmul   QWORD PTR [rdi]
   140010569:	add    al,0xb9
   14001056b:	jp     0x140010587
   14001056d:	cli    
   14001056e:	(bad)
   140010571:	(bad)
   140010574:	rex (bad) [rax]
   140010577:	rex.X (bad) 
   140010579:	retf   
   14001057a:	or     ah,cl
   14001057c:	xchg   ebp,eax
   14001057d:	(bad)  
   14001057e:	and    BYTE PTR [rdi+0x28a5a24e],dl
   140010584:	mov    ecx,0x2a0df8ed
   140010589:	push   rsp
   14001058a:	sub    eax,DWORD PTR [rsi]
   14001058c:	xlat   BYTE PTR es:[rbx]
   14001058e:	ins    BYTE PTR es:[rdi],dx
   14001058f:	rex.RX
   140010590:	rex.XB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010592:	xchg   DWORD PTR [rbx],eax
   140010594:	ss jns 0x1400105a5
   140010597:	and    esp,DWORD PTR [rdx]
   140010599:	rex.RX
   14001059a:	fs ins BYTE PTR es:[rdi],dx
   14001059c:	mov    edx,0x66f4bcf
   1400105a1:	movabs ds:0x26d72604619357c5,al
   1400105aa:	xlat   BYTE PTR ds:[rbx]
   1400105ab:	rex.RX mov spl,0x88
   1400105ae:	(bad)  
   1400105af:	and    al,BYTE PTR [rsp+rbx*8]
   1400105b2:	rex.X push rsp
   1400105b4:	cs mov dl,0x4e
   1400105b7:	in     eax,dx
   1400105b8:	(bad)  
   1400105b9:	out    0x4d,al
   1400105bb:	push   rax
   1400105bc:	adc    esi,esi
   1400105be:	stos   DWORD PTR es:[rdi],eax
   1400105bf:	(bad)  
   1400105c0:	mov    al,0x7
   1400105c2:	sbb    al,BYTE PTR [rax]
   1400105c4:	add    BYTE PTR [rsi+rsi*4+0x5],dl
   1400105c8:	xchg   esi,eax
   1400105c9:	pop    rax
   1400105ca:	or     ebx,DWORD PTR [rax+0x3e5ffd2c]
   1400105d0:	jnp    0x1400105bb
   1400105d2:	scas   al,BYTE PTR es:[rdi]
   1400105d3:	ins    DWORD PTR es:[rdi],dx
   1400105d4:	imul   esi,DWORD PTR [rsi-0x12],0x56e3cf37
   1400105db:	jge    0x1400105b3
   1400105dd:	(bad)  
   1400105de:	fidiv  DWORD PTR [rax+0x3d8206b9]
   1400105e4:	pop    rdi
   1400105e5:	fsub   QWORD PTR [rcx-0x4ecd760e]
   1400105eb:	jnp    0x1400105cf
   1400105ed:	repnz (bad) 
   1400105ef:	add    DWORD PTR [rbx+rsi*1],0x1f58de2
   1400105f6:	add    r11,rdi
   1400105f9:	repnz pop rsi
   1400105fb:	mov    ah,0x3e
   1400105fd:	repz bswap ecx
   140010600:	fdiv   st(0),st
   140010602:	(bad)  
   140010603:	mov    ebx,0x2647c6fa
   140010608:	(bad)  
   140010609:	in     eax,dx
   14001060a:	fwait
   14001060b:	ins    BYTE PTR es:[rdi],dx
   14001060c:	adc    BYTE PTR [rsi+0x63],cl
   14001060f:	add    DWORD PTR [rax+0x1d],ebp
   140010612:	add    BYTE PTR [rbp-0x18e2c8e3],ah
   140010618:	in     al,dx
   140010619:	out    dx,al
   14001061a:	retf   0x93b3
   14001061d:	jae    0x1400105cc
   14001061f:	pop    rcx
   140010620:	popf   
   140010621:	fidiv  DWORD PTR [rcx]
   140010623:	xchg   al,ah
   140010625:	lock mov WORD PTR [rbx+rdi*2-0x3e107284],fs
   14001062d:	mov    dl,0x3a
   14001062f:	add    BYTE PTR [rdx],al
   140010631:	xchg   ebp,eax
   140010632:	push   rsi
   140010633:	sbb    edx,edi
   140010635:	loopne 0x140010661
   140010637:	adc    DWORD PTR [rcx-0x60be5094],eax
   14001063d:	cld    
   14001063e:	jae    0x1400105e0
   140010640:	mov    edi,0xb00dd766
   140010645:	gs add al,0x42
   140010648:	or     DWORD PTR [rax-0xd82fe6],esp
   14001064e:	sbb    al,0x4
   140010650:	rex.WRB neg r14
   140010653:	jno    0x1400106a8
   140010655:	and    edi,DWORD PTR [rsi+0x64c0c11d]
   14001065b:	cmp    ebp,esp
   14001065d:	mov    ebp,0x88d9d281
   140010662:	mov    esi,ss
   140010664:	loop   0x140010668
   140010666:	xchg   DWORD PTR [rcx+rcx*4-0x21cc7f68],ecx
   14001066d:	or     esp,DWORD PTR [rdi-0x22]
   140010670:	(bad)  
   140010671:	xor    BYTE PTR [rax+0x4cf245c9],al
   140010677:	mov    edx,DWORD PTR [rsi]
   140010679:	add    ebp,DWORD PTR [rip+0xffffffffe6b01305]        # 0x126b11984
   14001067f:	rex cmp DWORD PTR [rsi],ebx
   140010682:	jl     0x1400106a6
   140010684:	out    0xb3,al
   140010686:	adc    esi,esi
   140010688:	(bad)  
   140010689:	scas   al,BYTE PTR es:[rdi]
   14001068a:	or     DWORD PTR [rbx],eax
   14001068c:	test   al,0xf4
   14001068e:	xchg   edi,eax
   14001068f:	(bad)  
   140010690:	pop    rbp
   140010691:	jrcxz  0x140010614
   140010693:	sbb    eax,0xfd763a33
   140010698:	hlt    
   140010699:	push   rbx
   14001069a:	(bad)  
   14001069b:	leave  
   14001069c:	add    al,0xfa
   14001069e:	mov    al,0xfe
   1400106a0:	rex.RX xchg eax,eax
   1400106a2:	jae    0x14001069a
   1400106a4:	adc    cl,BYTE PTR [rbx-0x4e]
   1400106a7:	(bad)  
   1400106a8:	jl     0x1400106c6
   1400106aa:	jl     0x140010691
   1400106ac:	push   dx
   1400106ae:	test   al,0xc6
   1400106b0:	xchg   ecx,eax
   1400106b1:	cmc    
   1400106b2:	outs   dx,DWORD PTR ds:[rsi]
   1400106b3:	mov    edi,0xc51c2739
   1400106b8:	fwait
   1400106b9:	ror    ch,cl
   1400106bb:	push   0xffffffffffffffc4
   1400106bd:	sbb    edi,esp
   1400106bf:	loop   0x14001066a
   1400106c1:	mov    ecx,0xfc4ff688
   1400106c6:	mov    edx,0xcbf63e4a
   1400106cb:	xor    BYTE PTR [rbp+0x47cfa14e],cl
   1400106d1:	pop    rdx
   1400106d2:	cmp    al,0xb1
   1400106d4:	add    ah,BYTE PTR [rip+0x8b5a04d]        # 0x148b6a727
   1400106da:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400106db:	sbb    eax,0xb33a6a90
   1400106e0:	add    BYTE PTR [rbx+0x6ab8e0b6],0x64
   1400106e7:	ror    BYTE PTR [rax],cl
   1400106e9:	mov    cl,ch
   1400106eb:	xlat   BYTE PTR ds:[rbx]
   1400106ec:	cmp    eax,0x21985711
   1400106f1:	lods   al,BYTE PTR ds:[rsi]
   1400106f2:	(bad)  
   1400106f3:	and    BYTE PTR [rax+0x4e3c747e],dl
   1400106f9:	xchg   esi,eax
   1400106fa:	add    ch,BYTE PTR [rcx]
   1400106fc:	jb     0x140010712
   1400106fe:	add    al,0x7f
   140010700:	mov    cl,dh
   140010702:	nop
   140010703:	mov    edi,0xeae035f8
   140010708:	rex.WXB
   140010709:	ss (bad) 
   14001070b:	xchg   edi,eax
   14001070c:	xchg   esp,eax
   14001070d:	cmc    
   14001070e:	push   rdi
   14001070f:	jo     0x14001071b
   140010711:	repz retf 0xc0b3
   140010715:	test   BYTE PTR [rdx],0xe
   140010718:	mov    dh,0xd3
   14001071a:	out    0xe2,al
   14001071c:	rex.X (bad) 
   14001071e:	hlt    
   14001071f:	movabs al,ds:0xbbf291a32c318d9d
   140010728:	adc    BYTE PTR [rbx],bl
   14001072a:	xor    DWORD PTR [rdx+0x0],esp
   14001072d:	movabs ds:0x7e70181421318c45,eax
   140010736:	and    DWORD PTR [rdi+riz*4+0x37],0xda3a1ce0
   14001073e:	(bad)  
   14001073f:	rex.WX
   140010740:	mov    cx,0xd720
   140010744:	(bad)  
   140010745:	fidivr DWORD PTR [rdi]
   140010747:	push   rsi
   140010748:	in     al,dx
   140010749:	adc    ebx,DWORD PTR [rax-0x3075ed02]
   14001074f:	imul   ebx,DWORD PTR [rdx-0x40],0x4c1ec27e
   140010756:	add    edx,DWORD PTR [rdx-0x51de75e1]
   14001075c:	outs   dx,BYTE PTR ds:[rsi]
   14001075d:	(bad)  
   14001075e:	jmp    0x19a0d1fa2
   140010763:	(bad)  
   140010764:	rex.RX fstp st(3)
   140010767:	mov    ebx,0xfce1e1e8
   14001076c:	push   rcx
   14001076d:	test   al,ah
   14001076f:	popf   
   140010770:	enter  0x156f,0xb6
   140010774:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010775:	repnz xchg edx,eax
   140010777:	sub    DWORD PTR [rdx],esp
   140010779:	add    BYTE PTR [rdi+0x1fddceaa],bh
   14001077f:	mov    BYTE PTR [rsi-0x2d0f15d3],ch
   140010785:	out    dx,eax
   140010786:	lea    edi,[rax-0x16]
   140010789:	fld    QWORD PTR [rcx-0x23]
   14001078c:	stc    
   14001078d:	push   rcx
   14001078e:	mov    ah,0x3e
   140010790:	std    
   140010791:	bswap  eax
   140010793:	fdiv   st(4),st
   140010795:	movabs al,ds:0x5cdeebd6521ed89e
   14001079e:	add    BYTE PTR [rdx+0xb],bl
   1400107a1:	loopne 0x1400107e9
   1400107a3:	fld    TBYTE PTR [rdx+0x3]
   1400107a6:	pushf  
   1400107a7:	mov    edx,0x468a99e
   1400107ac:	sub    ah,ch
   1400107ae:	test   eax,0x416c618
   1400107b4:	xchg   esp,eax
   1400107b5:	sti    
   1400107b6:	(bad)  
   1400107b7:	out    dx,eax
   1400107b8:	mov    edx,0x1246d85a
   1400107bd:	cdq    
   1400107be:	rex.WR
   1400107bf:	ds jg  0x14001081a
   1400107c2:	loope  0x14001075e
   1400107c4:	and    esp,DWORD PTR [rbx-0x60]
   1400107c7:	pop    rdi
   1400107c8:	jns    0x1400107d4
   1400107ca:	jb     0x1400107b1
   1400107cc:	jns    0x140010846
   1400107ce:	jrcxz  0x1400107dc
   1400107d0:	ins    BYTE PTR es:[rdi],dx
   1400107d1:	mov    ch,0x0
   1400107d3:	repz ret 0x4097
   1400107d7:	adc    BYTE PTR [rbx+rbp*8-0x3cb88e3],bh
   1400107de:	cld    
   1400107df:	cmp    al,0x5c
   1400107e1:	cmp    eax,0xc3d273a2
   1400107e6:	movabs eax,ds:0x7642937030c67932
   1400107ef:	xor    DWORD PTR [rax+0x2838bb1],edx
   1400107f5:	(bad)  
   1400107f6:	cwde   
   1400107f7:	mov    eax,DWORD PTR [rax]
   1400107f9:	ins    DWORD PTR es:[rdi],dx
   1400107fa:	fidivr WORD PTR [rcx+0x31]
   1400107fd:	rex.RX xchg eax,eax
   1400107ff:	sbb    esp,DWORD PTR [rbx+0x237208d]
   140010805:	in     eax,dx
   140010806:	(bad)  
   140010807:	or     BYTE PTR [rip+0xffffffff9ed9a238],0xe8        # 0xdedaaa46
   14001080e:	jns    0x1400107ff
   140010810:	mov    ch,0xf
   140010812:	jo     0x1400107e1
   140010814:	sbb    DWORD PTR [rax+0x4414005d],eax
   14001081a:	lods   eax,DWORD PTR ds:[rsi]
   14001081b:	xlat   BYTE PTR ds:[rbx]
   14001081c:	shl    BYTE PTR [rsi-0xc],1
   14001081f:	mov    eax,0x53a9f4e0
   140010824:	(bad)  
   140010825:	test   al,0xc8
   140010827:	lock ret 
   140010829:	cli    
   14001082a:	sbb    ebp,DWORD PTR [rsi-0x5a5be058]
   140010830:	(bad)  
   140010832:	fdivr  DWORD PTR [rip+0xffffffffd92fc739]        # 0x11930cf71
   140010838:	scas   eax,DWORD PTR es:[rdi]
   140010839:	mov    ecx,0x6e1aca07
   14001083e:	(bad)  
   14001083f:	xor    eax,0x1d56fa23
   140010844:	(bad)  
   140010845:	xlat   BYTE PTR ds:[rbx]
   140010846:	sahf   
   140010847:	sub    edx,DWORD PTR [rax+0x73]
   14001084a:	adc    ebp,ebp
   14001084c:	(bad)  
   14001084d:	call   FWORD PTR [rbx+0x2a]
   140010850:	stc    
   140010851:	fsubr  DWORD PTR [rdi+0x48ed24c0]
   140010857:	xor    al,0xfb
   140010859:	movzx  edx,BYTE PTR [rdx+0x36]
   14001085d:	in     eax,dx
   14001085e:	add    ch,cl
   140010860:	add    eax,0xa006d390
   140010865:	push   rdx
   140010866:	mov    BYTE PTR [rdi-0x20fad878],cl
   14001086c:	frstor [rbx-0x34]
   14001086f:	sub    eax,0xc58a7e0a
   140010874:	popf   
   140010875:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010876:	xor    DWORD PTR ds:[rsi-0x43],ebp
   14001087a:	adc    DWORD PTR [rdx+rbp*2],0x1061cfbf
   140010881:	sbb    DWORD PTR [rsi+0x45],ecx
   140010884:	adc    BYTE PTR [rbp+0x385cdfab],dl
   14001088a:	add    DWORD PTR [rcx],edi
   14001088c:	mul    DWORD PTR [rax+rdi*4+0x3f]
   140010890:	test   eax,0xe3f4fa04
   140010895:	and    BYTE PTR [rcx],dl
   140010897:	mov    edx,0x49a740f1
   14001089c:	(bad)  
   14001089d:	and    esp,edi
   14001089f:	sbb    esp,DWORD PTR [rsp+rsi*4+0x66]
   1400108a3:	xor    ebx,DWORD PTR [rdx+rsi*4]
   1400108a6:	sbb    DWORD PTR [rip+0x630d18d9],ecx        # 0x1a30e2185
   1400108ac:	xlat   BYTE PTR ds:[rbx]
   1400108ad:	cld    
   1400108ae:	mov    BYTE PTR [rax+0xd66e318],cl
   1400108b4:	lods   eax,DWORD PTR ds:[rsi]
   1400108b5:	pop    rdi
   1400108b6:	(bad)  
   1400108b7:	out    0x77,eax
   1400108b9:	push   rax
   1400108ba:	adc    rbp,QWORD PTR [rbx-0x35]
   1400108be:	or     DWORD PTR [rax],esp
   1400108c0:	mov    ecx,0x6640d720
   1400108c5:	or     al,0x72
   1400108c7:	out    0x5f,eax
   1400108c9:	add    ch,ch
   1400108cb:	xor    dh,ch
   1400108cd:	rex.WXB (bad) 
   1400108cf:	mov    BYTE PTR [rcx-0x9],cl
   1400108d2:	fadd   DWORD PTR [rdi-0x28]
   1400108d5:	mov    eax,DWORD PTR [rax-0x60]
   1400108d8:	cwde   
   1400108d9:	fwait
   1400108da:	xchg   ebx,eax
   1400108db:	pop    rdi
   1400108dc:	or     esi,DWORD PTR [rax]
   1400108de:	rex.WRB cli 
   1400108e0:	adc    eax,DWORD PTR [rax+0x1fcb958d]
   1400108e6:	add    BYTE PTR es:[rdi],cl
   1400108e9:	out    0x8f,eax
   1400108eb:	xchg   esi,eax
   1400108ec:	ins    DWORD PTR es:[rdi],dx
   1400108ed:	jnp    0x1400108f0
   1400108ef:	stos   BYTE PTR es:[rdi],al
   1400108f0:	pop    rsi
   1400108f1:	jg     0x1400108f3
   1400108f3:	(bad)  
   1400108f4:	movabs ds:0x63d521d18b37d231,al
   1400108fd:	rex.WRX sar al,0x89
   140010901:	test   al,0x59
   140010903:	js     0x140010888
   140010905:	movsxd eax,DWORD PTR [rsi+riz*1]
   140010908:	rex.B (bad) 
   14001090b:	ret    
   14001090c:	push   0xffffffff91efccfd
   140010911:	mov    ecx,0x451b41e5
   140010916:	push   0x74d77535
   14001091b:	(bad)  
   14001091c:	pop    rbp
   14001091d:	call   0xe34a1f38
   140010922:	add    ecx,DWORD PTR [rsi+0x3b]
   140010925:	(bad)  
   140010926:	rex.R push rax
   140010928:	or     eax,0x10b1f2f8
   14001092d:	(bad)  
   14001092f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010930:	mov    al,0xa1
   140010932:	in     al,dx
   140010933:	outs   dx,DWORD PTR ds:[rsi]
   140010934:	mov    bh,0xe3
   140010936:	pop    rax
   140010937:	ror    DWORD PTR [rbp-0x12de8f4a],1
   14001093d:	std    
   14001093e:	xchg   DWORD PTR [rsp+rcx*8],edx
   140010941:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010942:	loop   0x1400109a3
   140010944:	add    DWORD PTR [rsi+riz*8+0x20e7ab20],ebp
   14001094b:	addr32 mov esi,0x40bd9f0d
   140010951:	je     0x140010959
   140010953:	jae    0x14001093b
   140010955:	xor    DWORD PTR [rax],esi
   140010957:	sub    edi,0xd4e6f3be
   14001095d:	sbb    esp,ebx
   14001095f:	(bad)  
   140010960:	(bad)  
   140010961:	xchg   edx,eax
   140010962:	in     eax,0x64
   140010964:	(bad)  
   140010965:	rex.XB xchg r14b,cl
   140010968:	test   eax,0x18dca692
   14001096d:	mov    ebx,0xc4444094
   140010972:	in     al,dx
   140010973:	fdivr  st,st(3)
   140010975:	adc    eax,0x12aae081
   14001097a:	lods   eax,DWORD PTR ds:[rsi]
   14001097b:	movabs eax,ds:0x535ecc0e6b132135
   140010984:	and    cl,dh
   140010986:	fcom   st(3)
   140010988:	push   rbx
   140010989:	mov    ebp,ebp
   14001098b:	(bad)  
   14001098c:	in     al,dx
   14001098d:	test   DWORD PTR [rbx],edx
   14001098f:	shr    bl,1
   140010991:	test   al,0x0
   140010993:	sub    dl,BYTE PTR [rdi+rdi*1+0x6]
   140010997:	rcr    edx,0xc6
   14001099a:	(bad)  
   14001099b:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001099d:	imul   ebx,DWORD PTR [rsi],0xe2ce4dba
   1400109a3:	push   rsi
   1400109a4:	jge    0x14001097c
   1400109a6:	rex.WB popf 
   1400109a8:	clc    
   1400109a9:	or     eax,0x7dfce656
   1400109ae:	jge    0x14001094e
   1400109b0:	cmp    DWORD PTR [rbx+rdi*1],edx
   1400109b3:	jo     0x1400109bc
   1400109b5:	mov    bl,0xc1
   1400109b7:	out    0xa7,al
   1400109b9:	test   BYTE PTR [rsi+0x1d9ae2ac],0xc
   1400109c0:	int3   
   1400109c1:	pop    rbp
   1400109c2:	(bad)  
   1400109c3:	call   0x14db00fb3
   1400109c8:	lock (bad) 
   1400109ca:	cld    
   1400109cb:	xchg   edx,eax
   1400109cc:	xor    DWORD PTR [rcx-0x25],ecx
   1400109cf:	mov    WORD PTR [rdi-0x6fb6526d],?
   1400109d5:	jbe    0x140010957
   1400109d7:	rex.RX (bad) 
   1400109d9:	rex.W (bad) [rsi]
   1400109dc:	cmp    cl,BYTE PTR [rdi-0x27]
   1400109df:	in     eax,0xbb
   1400109e1:	loop   0x1400109ef
   1400109e3:	scas   eax,DWORD PTR es:[rdi]
   1400109e4:	js     0x1400109d3
   1400109e6:	lods   eax,DWORD PTR ds:[rsi]
   1400109e7:	(bad)  
   1400109e9:	push   rax
   1400109ea:	fsubr  QWORD PTR [rsi]
   1400109ec:	lea    edx,[rbx+rdx*2]
   1400109ef:	jne    0x140010a2d
   1400109f1:	fwait
   1400109f2:	adc    bh,cl
   1400109f4:	int3   
   1400109f5:	in     al,dx
   1400109f6:	xor    eax,0x3e28075e
   1400109fb:	ret    
   1400109fc:	mov    dl,0xe4
   1400109fe:	(bad)  
   1400109ff:	(bad)  
   140010a00:	add    DWORD PTR [rsi-0x13],esp
   140010a03:	cmp    al,0xf4
   140010a05:	jmp    0xc19e0ad1
   140010a0a:	rcr    QWORD PTR [rax+rdi*8+0x1e],0x8
   140010a10:	rex.X mov dil,0xde
   140010a13:	jl     0x140010a59
   140010a15:	jno    0x140010a28
   140010a17:	clc    
   140010a18:	out    dx,eax
   140010a19:	ficom  DWORD PTR [rax+0x6c87ce93]
   140010a1f:	repnz pushf 
   140010a21:	(bad)
   140010a24:	movabs al,ds:0xd968c08c60080998
   140010a2d:	stc    
   140010a2e:	and    eax,0xae38bd54
   140010a33:	cmp    DWORD PTR [rdx-0x37e367e5],edx
   140010a39:	jb     0x140010a9e
   140010a3b:	pop    rbp
   140010a3c:	add    al,0xbb
   140010a3e:	(bad)  
   140010a3f:	call   FWORD PTR [rip+0xffffffffd8cf5f7e]        # 0x118d069c3
   140010a45:	stos   DWORD PTR es:[rdi],eax
   140010a46:	pop    rcx
   140010a47:	add    BYTE PTR [rdi],cl
   140010a49:	(bad)  
   140010a4a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010a4b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010a4c:	rex.WXB push QWORD PTR [r11]
   140010a4f:	out    0xaf,eax
   140010a51:	mov    esp,0x87e84993
   140010a56:	repnz outs dx,DWORD PTR ds:[rsi]
   140010a58:	mov    eax,0x90db1621
   140010a5d:	(bad)
   140010a60:	lahf   
   140010a61:	in     eax,0xce
   140010a63:	rcl    DWORD PTR [rdi-0x709da7db],0x92
   140010a6a:	gs (bad) 
   140010a6c:	(bad)  
   140010a6d:	icebp  
   140010a6e:	sbb    dl,ah
   140010a70:	dec    DWORD PTR [rcx]
   140010a72:	fiadd  DWORD PTR [rcx-0x47]
   140010a75:	cmp    eax,0xeef48d7b
   140010a7a:	(bad)  
   140010a7b:	loope  0x140010a53
   140010a7d:	iret   
   140010a7e:	cld    
   140010a7f:	(bad)  
   140010a80:	fwait
   140010a81:	and    esi,edi
   140010a83:	xchg   ebp,eax
   140010a84:	rex.R push rbx
   140010a86:	call   0xe48158c8
   140010a8b:	or     DWORD PTR [rdx+0x74],ebp
   140010a8e:	lods   al,BYTE PTR ds:[rsi]
   140010a8f:	imul   esp,DWORD PTR [rax+0x4f4221da],0x1e866d88
   140010a99:	movabs eax,ds:0x263689e8667bdea0
   140010aa2:	je     0x140010a53
   140010aa4:	fiadd  WORD PTR [rbx]
   140010aa6:	gs xchg ebx,eax
   140010aa8:	sub    DWORD PTR [rsi+rax*1-0x53],edi
   140010aac:	(bad)  
   140010aae:	pop    rdx
   140010aaf:	pushf  
   140010ab0:	push   0x12
   140010ab2:	lods   eax,DWORD PTR ds:[rsi]
   140010ab3:	push   rsp
   140010ab4:	xchg   esp,eax
   140010ab5:	lods   eax,DWORD PTR ds:[rsi]
   140010ab6:	sub    edx,eax
   140010ab8:	(bad)  
   140010aba:	cmp    ah,BYTE PTR [rdi+rbx*1]
   140010abd:	rex.B lahf 
   140010abf:	cmp    eax,DWORD PTR [rcx]
   140010ac1:	hlt    
   140010ac2:	push   rsi
   140010ac3:	jo     0x140010a6d
   140010ac5:	fld    TBYTE PTR [rbp+rsi*4-0x6e]
   140010ac9:	xchg   esp,eax
   140010aca:	jge    0x140010a5e
   140010acc:	pop    rax
   140010acd:	add    al,BYTE PTR [rcx-0x4c]
   140010ad0:	nop
   140010ad1:	or     al,0x33
   140010ad3:	fld    DWORD PTR ss:[rax+0x4525e6ed]
   140010ada:	lahf   
   140010adb:	or     esp,eax
   140010add:	(bad)  
   140010ade:	rex.WXB (bad) 
   140010ae0:	xchg   ecx,eax
   140010ae1:	fxch   st(3)
   140010ae3:	and    ebx,0xccb255b6
   140010ae9:	or     DWORD PTR [rdx+riz*4],eax
   140010aec:	or     eax,0x332018c
   140010af1:	(bad)  
   140010af2:	pop    rdx
   140010af3:	rex.WRXB xor rax,0x6dbf6050
   140010af9:	add    eax,0x305ec556
   140010afe:	add    bh,dh
   140010b00:	rex.WRX popf 
   140010b02:	cmp    ebp,DWORD PTR ss:[rbx+0x4a]
   140010b06:	xchg   BYTE PTR [rax+0x1f33e5fe],al
   140010b0c:	and    DWORD PTR [rax],eax
   140010b0e:	pmulhw mm1,QWORD PTR [rdi-0x6a]
   140010b12:	(bad)  
   140010b13:	(bad)  
   140010b14:	cwde   
   140010b15:	rol    DWORD PTR [rdi],cl
   140010b17:	xchg   BYTE PTR [rax],al
   140010b19:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b1a:	retf   0xdb86
   140010b1d:	rex.R push rdx
   140010b1f:	ds push rsi
   140010b21:	push   rdi
   140010b22:	movabs ds:0x8aaa19e637c163eb,eax
   140010b2b:	xchg   ebx,eax
   140010b2c:	(bad)  
   140010b2d:	add    DWORD PTR [rax+0x7ff688b9],ebp
   140010b33:	hlt    
   140010b34:	sbb    ecx,DWORD PTR [rdx+0x199fffdf]
   140010b3a:	xchg   ebx,eax
   140010b3b:	mov    dh,0x4d
   140010b3d:	(bad)  
   140010b3e:	pop    rdx
   140010b3f:	imul   BYTE PTR [rax+rax*1]
   140010b42:	add    eax,0x644ba6a8
   140010b47:	fidiv  DWORD PTR [rcx-0x67]
   140010b4a:	xchg   DWORD PTR [rbx+rax*4+0x1ea67d90],ebx
   140010b51:	stos   DWORD PTR es:[rdi],eax
   140010b52:	and    dl,BYTE PTR [rip+0xffffffffc493911a]        # 0x104949c72
   140010b58:	cmp    DWORD PTR [rcx],0xf8ac5496
   140010b5e:	(bad)  
   140010b5f:	test   DWORD PTR [rip+0xffffffffe375fc65],esp        # 0x1237707ca
   140010b65:	sbb    eax,0x88ae9214
   140010b6a:	add    BYTE PTR [rbx+0x1e97e84d],al
   140010b70:	add    eax,0xe5790e49
   140010b75:	sbb    DWORD PTR [rax],edx
   140010b77:	add    al,0xc7
   140010b79:	outs   dx,DWORD PTR ds:[rsi]
   140010b7a:	cmp    ebp,DWORD PTR [rdx-0x650d9d6c]
   140010b80:	add    BYTE PTR [rax+0x48],cl
   140010b83:	repnz pushf 
   140010b85:	fs xchg esp,eax
   140010b87:	mov    cl,0x68
   140010b89:	in     eax,dx
   140010b8a:	xor    eax,ebp
   140010b8c:	xchg   edi,eax
   140010b8d:	fimul  WORD PTR [rdi+0x33b31811]
   140010b93:	xor    eax,0x13e37cba
   140010b98:	iret   
   140010b99:	mov    eax,eax
   140010b9b:	xor    DWORD PTR [rcx+0x5a7cff90],eax
   140010ba1:	sub    eax,0xa3beb795
   140010ba6:	jbe    0x140010c20
   140010ba8:	std    
   140010ba9:	(bad)  
   140010baa:	(bad)  
   140010bab:	xor    eax,0x1a6bd280
   140010bb0:	xchg   edi,eax
   140010bb1:	inc    BYTE PTR [rdx-0x252b9f02]
   140010bb7:	xor    cl,ch
   140010bb9:	ret    
   140010bba:	rex.RXB
   140010bbb:	fs add eax,0xc2d5cc87
   140010bc1:	(bad)  
   140010bc2:	(bad)  
   140010bc3:	jrcxz  0x140010b7a
   140010bc5:	cmp    BYTE PTR [rbx+0x13],ch
   140010bc8:	or     ch,0x8e
   140010bcb:	jrcxz  0x140010ba2
   140010bcd:	(bad)  
   140010bce:	xor    al,BYTE PTR [rcx-0xbb728ec]
   140010bd4:	out    0xa7,eax
   140010bd6:	and    edi,DWORD PTR [rcx+rbx*8+0x6a]
   140010bda:	pop    rbx
   140010bdb:	fimul  WORD PTR [rax+rcx*2-0x48f303e1]
   140010be2:	(bad)  
   140010be3:	stc    
   140010be4:	sub    eax,0xe9f72396
   140010be9:	mov    al,0x7a
   140010beb:	(bad)  
   140010bec:	(bad)  
   140010bed:	rol    DWORD PTR [rsi],0x9b
   140010bf0:	jns    0x140010b7a
   140010bf2:	xchg   edx,eax
   140010bf3:	es and al,0xed
   140010bf6:	add    BYTE PTR [rbp-0x29d2d7ca],cl
   140010bfc:	repnz (bad) 
   140010bfe:	ds jne 0x140010c6c
   140010c01:	or     al,ah
   140010c03:	or     esp,DWORD PTR [rdx-0x63aaef84]
   140010c09:	movabs ds:0x1707871dee1cd5d0,eax
   140010c12:	mov    bl,0x83
   140010c14:	adc    eax,0xe7042e7
   140010c19:	adc    dl,al
   140010c1b:	pop    rdi
   140010c1c:	rex.RXB jle 0x140010c09
   140010c1f:	jmp    0x140010bf1
   140010c21:	addr32 lahf 
   140010c23:	add    ah,BYTE PTR [rax]
   140010c25:	je     0x140010c1a
   140010c27:	lea    eax,[rdi+0x62866612]
   140010c2d:	es mov ebx,0x24408c2b
   140010c33:	addr32 popf 
   140010c35:	or     eax,0xf1233a19
   140010c3a:	stc    
   140010c3b:	shr    DWORD PTR [rdx-0x37e2189],1
   140010c41:	xchg   ebp,eax
   140010c42:	lea    edx,[rdx+riz*4]
   140010c45:	rex.X mov cl,BYTE PTR [rdi+0x58769859]
   140010c4c:	enter  0xe34c,0x9e
   140010c50:	xchg   esp,eax
   140010c51:	rex.WXB iretq 
   140010c53:	hlt    
   140010c54:	data16 jle 0x140010c56
   140010c57:	scas   eax,DWORD PTR es:[rdi]
   140010c58:	(bad)  
   140010c59:	imul   BYTE PTR [rax+rdx*1]
   140010c5c:	enter  0x127d,0x61
   140010c60:	(bad)  
   140010c61:	rex.WB jmp 0x140010c54
   140010c64:	repnz cdq 
   140010c66:	rex.WXB out dx,eax
   140010c68:	fs xor dh,ah
   140010c6b:	fdivp  st(4),st
   140010c6d:	cmp    eax,DWORD PTR [rcx-0x3e]
   140010c70:	jnp    0x140010c99
   140010c72:	outs   dx,DWORD PTR ds:[rsi]
   140010c73:	in     al,0xe3
   140010c75:	rex.B cmp al,0x59
   140010c78:	adc    al,0xd1
   140010c7a:	rex.X jmp 0x1783228c7
   140010c80:	(bad)  
   140010c81:	cwde   
   140010c82:	or     DWORD PTR [rdx+riz*8-0x4bfd9f86],ecx
   140010c89:	je     0x140010cfe
   140010c8b:	rol    BYTE PTR [rsi],1
   140010c8d:	mov    ah,0xf7
   140010c8f:	or     eax,0x80265a04
   140010c94:	adc    eax,0x1a806938
   140010c99:	pop    rbp
   140010c9a:	push   rax
   140010c9b:	movsxd edx,ecx
   140010c9d:	sub    eax,0x92806a2c
   140010ca2:	(bad)  
   140010ca3:	in     al,dx
   140010ca4:	(bad)  
   140010ca5:	and    DWORD PTR [rbp-0x6e50e016],eax
   140010cab:	or     BYTE PTR [rcx],dh
   140010cad:	add    ch,BYTE PTR [rsi+0x108682cf]
   140010cb3:	mov    ebp,0xc7ef6b35
   140010cb8:	sbb    al,BYTE PTR [rbx+rbp*1+0x2463f91f]
   140010cbf:	out    dx,al
   140010cc0:	(bad)  
   140010cc1:	sar    DWORD PTR [rdx],0xf2
   140010cc4:	(bad)  
   140010cc5:	mov    esi,0x58fa8c08
   140010cca:	out    dx,al
   140010ccb:	ss fwait
   140010ccd:	mov    cl,BYTE PTR [rcx+0x4ccc1998]
   140010cd3:	rex.WR add al,0x32
   140010cd6:	sbb    BYTE PTR [rcx],0x66
   140010cd9:	ins    BYTE PTR es:[rdi],dx
   140010cda:	mov    dl,0x8c
   140010cdc:	(bad)  
   140010cdd:	rex.WR loopne 0x140010ca3
   140010ce0:	xchg   ebp,eax
   140010ce1:	div    DWORD PTR [rax]
   140010ce3:	xchg   ebx,eax
   140010ce4:	add    eax,0x87158410
   140010ce9:	or     r12,QWORD PTR [rbx+0x2f]
   140010ced:	(bad)  
   140010cee:	stos   BYTE PTR es:[rdi],al
   140010cef:	movsxd ebp,DWORD PTR [rdx+0x3d]
   140010cf2:	add    al,0x17
   140010cf4:	(bad)
   140010cf9:	std    
   140010cfa:	ins    BYTE PTR es:[rdi],dx
   140010cfb:	(bad)  
   140010cfc:	in     al,dx
   140010cfd:	xchg   ebp,eax
   140010cfe:	adc    edx,eax
   140010d00:	jnp    0x140010c92
   140010d02:	imul   BYTE PTR es:[rdi+rcx*8-0x4e424524]
   140010d0a:	jp     0x140010d2b
   140010d0c:	add    esi,DWORD PTR [rdi+rdi*4+0x7e]
   140010d10:	cs pushf 
   140010d12:	or     esi,ecx
   140010d14:	jmp    0x140010d38
   140010d16:	and    edi,ecx
   140010d18:	pop    rbp
   140010d19:	lods   al,BYTE PTR ds:[rsi]
   140010d1a:	movabs ds:0x1e6284fc4f7dd495,al
   140010d23:	fcomp  QWORD PTR [rip+0x1361dc8f]        # 0x15362e9b8
   140010d29:	(bad)  
   140010d2a:	scas   eax,DWORD PTR es:[rdi]
   140010d2b:	(bad)  
   140010d2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010d2d:	movd   DWORD PTR [rsi-0x481a8025],mm0
   140010d34:	fcomp  DWORD PTR [rdi*4-0x49d674b1]
   140010d3b:	(bad)  [rcx-0xf8d9b25]
   140010d41:	or     eax,0x3400b9a0
   140010d46:	(bad)  
   140010d47:	ret    0xa174
   140010d4a:	pop    rdi
   140010d4b:	push   rbx
   140010d4c:	loopne 0x140010dc3
   140010d4e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010d4f:	(bad)  
   140010d50:	(bad)  
   140010d51:	and    edi,DWORD PTR [rdx+0x49]
   140010d54:	adc    eax,0xaff45839
   140010d59:	rex.R (bad) 
   140010d5b:	mov    esp,0x5e3e5fca
   140010d60:	loope  0x140010d66
   140010d62:	nop
   140010d63:	lea    ecx,[rbx+0x5fc2fd0]
   140010d69:	and    BYTE PTR [rdx+0x4e1f3763],al
   140010d6f:	fdiv   DWORD PTR [rcx]
   140010d71:	add    ebp,eax
   140010d73:	in     al,dx
   140010d74:	cmp    BYTE PTR [rdx+0x588d9321],cl
   140010d7a:	ins    BYTE PTR es:[rdi],dx
   140010d7b:	xchg   al,dh
   140010d7d:	pop    rbp
   140010d7e:	or     DWORD PTR [rcx+0x38988988],0x44
   140010d85:	(bad)  
   140010d86:	(bad)  
   140010d87:	(bad)  
   140010d88:	sahf   
   140010d89:	xor    DWORD PTR [rsi],eax
   140010d8b:	and    al,BYTE PTR [rax+0x31]
   140010d8e:	sub    esp,DWORD PTR [rbp+0x37]
   140010d91:	mov    cl,0x2a
   140010d93:	fidiv  DWORD PTR [rcx-0x427f32b1]
   140010d99:	repnz add DWORD PTR [rax+0x4c],edi
   140010d9d:	loop   0x140010d91
   140010d9f:	add    DWORD PTR [rbx+0x447dd6de],esp
   140010da5:	sar    BYTE PTR [rbx-0x375db0ba],0xed
   140010dac:	(bad)  
   140010dad:	mov    bh,0x79
   140010daf:	(bad)  
   140010db0:	adc    eax,0xc7d30742
   140010db5:	(bad)  
   140010db6:	adc    BYTE PTR [rcx-0x5b],ch
   140010db9:	shl    ecx,1
   140010dbb:	shl    BYTE PTR [rbx],0x42
   140010dbe:	or     BYTE PTR [rbx+0x1e4c1cf7],0x30
   140010dc5:	outs   dx,DWORD PTR ds:[rsi]
   140010dc6:	not    BYTE PTR [rdi+0xf81b41f]
   140010dcc:	jle    0x140010da4
   140010dce:	cwde   
   140010dcf:	mov    ah,0x6d
   140010dd1:	add    bh,bh
   140010dd3:	sub    al,0x8e
   140010dd5:	xchg   esp,eax
   140010dd6:	pop    rbp
   140010dd7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010dd8:	pop    rdi
   140010dd9:	push   0x74
   140010ddb:	and    DWORD PTR [rbp-0x28b91ffd],ebp
   140010de1:	rex.WRX (bad) 
   140010de3:	cli    
   140010de4:	xor    BYTE PTR [rdx-0x29],ah
   140010de7:	(bad)  
   140010de8:	shl    DWORD PTR [rbx],0x2f
   140010deb:	add    eax,0xe03087b1
   140010df0:	fcomp  DWORD PTR [rbx]
   140010df2:	call   0x1a387324e
   140010df7:	xchg   ebp,eax
   140010df8:	jmp    0x11598b8bf
   140010dfd:	xor    DWORD PTR [rcx],ecx
   140010dff:	std    
   140010e00:	fcom   QWORD PTR [rdi-0x78f9dc0]
   140010e06:	rcl    BYTE PTR [rdx+0x1ca39f5d],1
   140010e0c:	adc    edx,DWORD PTR [rax+0x44]
   140010e0f:	fs or  al,0xa0
   140010e12:	xor    eax,0xd557eb43
   140010e17:	fisttp QWORD PTR [rdx+rax*1+0x66]
   140010e1b:	es rex.RB (bad) 
   140010e1e:	rex.RB ret 0xd741
   140010e22:	(bad)  
   140010e23:	mov    ebx,0x5984cae8
   140010e28:	sub    ebp,eax
   140010e2a:	lods   al,BYTE PTR ds:[rsi]
   140010e2b:	cmp    BYTE PTR [rcx],ch
   140010e2d:	lods   eax,DWORD PTR ds:[rsi]
   140010e2e:	adc    eax,0x83d88fdb
   140010e33:	in     eax,0xc0
   140010e35:	rex.B (bad) 
   140010e37:	cli    
   140010e38:	movabs ds:0xd6fafadcee40c5e5,eax
   140010e41:	repnz push rax
   140010e43:	sbb    cl,BYTE PTR [rbx+0x7fa48b6f]
   140010e49:	jo     0x140010e8b
   140010e4b:	rex.WB
   140010e4c:	rex.R test al,0x5e
   140010e4f:	(bad)  
   140010e50:	rex.RXB sar BYTE PTR [r14],cl
   140010e53:	and    BYTE PTR [rsi+0x4f],dl
   140010e56:	and    ebp,DWORD PTR [rbp-0x3f]
   140010e59:	lahf   
   140010e5a:	stos   DWORD PTR es:[rdi],eax
   140010e5b:	cli    
   140010e5c:	xchg   esp,eax
   140010e5d:	jge    0x140010de7
   140010e5f:	jmp    0x140010e56
   140010e61:	mov    esi,es
   140010e63:	jnp    0x140010ea4
   140010e65:	int    0xad
   140010e67:	mov    edi,0x8fac5bf2
   140010e6c:	fisub  WORD PTR [rdi-0x52a786ef]
   140010e72:	ja     0x140010e40
   140010e74:	gs (bad) 
   140010e76:	rex.WX ins DWORD PTR es:[rdi],dx
   140010e78:	jp     0x140010eec
   140010e7a:	push   0x2e
   140010e7c:	(bad)  
   140010e7d:	sbb    ebp,DWORD PTR [rbp-0x69]
   140010e80:	fimul  DWORD PTR [rbx+0x59]
   140010e83:	(bad)  
   140010e84:	shl    BYTE PTR [rcx-0x2b],0xc8
   140010e88:	loop   0x140010e99
   140010e8a:	add    QWORD PTR [rcx+0x5f],r14
   140010e8e:	(bad)  
   140010e8f:	(bad)  
   140010e90:	je     0x140010ee7
   140010e92:	test   eax,0xd886a8a6
   140010e97:	xor    al,0x0
   140010e99:	movabs al,ds:0x2dba96862012fb9f
   140010ea2:	(bad)
   140010ea5:	rcr    DWORD PTR [rax-0x4a],cl
   140010ea8:	loop   0x140010e40
   140010eaa:	and    DWORD PTR [rdx-0xe],ecx
   140010ead:	mov    WORD PTR [rcx],fs
   140010eaf:	(bad)  
   140010eb0:	cld    
   140010eb1:	ds mov es,eax
   140010eb4:	cld    
   140010eb5:	(bad)  
   140010eb6:	rex.WXB
   140010eb7:	adc    DWORD PTR cs:[rax],ecx
   140010eba:	adc    esi,DWORD PTR [rcx-0x54009dd6]
   140010ec0:	gs jbe 0x140010e6d
   140010ec3:	add    ecx,DWORD PTR [rdx-0x1a9d6a77]
   140010ec9:	(bad)  
   140010eca:	adc    DWORD PTR [rcx],eax
   140010ecc:	jae    0x140010efa
   140010ece:	and    BYTE PTR [rdx+0x4e77b14e],bh
   140010ed4:	rcr    BYTE PTR [rax+0x23],0x8f
   140010ed8:	xor    bh,BYTE PTR [rsi]
   140010eda:	sti    
   140010edb:	mov    ds,WORD PTR [rsi+0x5d]
   140010ede:	fstp   TBYTE PTR [rdx]
   140010ee0:	(bad)  
   140010ee1:	xchg   esp,eax
   140010ee2:	shl    DWORD PTR [rcx+0x7d],cl
   140010ee5:	adc    BYTE PTR ss:[rax+0x4c],bh
   140010ee9:	mov    edi,0xb17f1a5
   140010eee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010eef:	push   0x42
   140010ef1:	or     al,0xa0
   140010ef3:	rex.WR hlt 
   140010ef5:	(bad)  
   140010ef6:	jrcxz  0x140010ee9
   140010ef8:	mov    ch,0xde
   140010efa:	rex.WR test al,0x8e
   140010efd:	xchg   edx,eax
   140010efe:	jmp    0x140010f4c
   140010f00:	add    al,0xd0
   140010f02:	ror    ch,cl
   140010f04:	call   0xca1d0145
   140010f09:	(bad)  
   140010f0a:	jl     0x140010f30
   140010f0c:	add    al,0xcf
   140010f0e:	js     0x140010f4f
   140010f10:	mov    DWORD PTR [rbx],ebp
   140010f12:	add    DWORD PTR [rsi-0x65],ecx
   140010f15:	cs js  0x140010f80
   140010f18:	or     DWORD PTR [rax+0x3a],ecx
   140010f1b:	adc    ch,dl
   140010f1d:	add    al,0xc8
   140010f1f:	in     eax,dx
   140010f20:	sbb    ecx,DWORD PTR [rax+0x68e4f768]
   140010f26:	xchg   edi,eax
   140010f27:	mov    esi,0x3e2d2732
   140010f2c:	(bad)  
   140010f2d:	(bad)  
   140010f2e:	cmp    al,0xc9
   140010f30:	add    al,0x2b
   140010f32:	cmc    
   140010f33:	icebp  
   140010f34:	(bad)  
   140010f35:	adc    esi,DWORD PTR [rdx-0xf]
   140010f38:	cmp    DWORD PTR [rsp+rsi*4],ebp
   140010f3b:	shl    BYTE PTR [rdi+rdx*8+0x70e71a1f],cl
   140010f42:	and    al,0xf2
   140010f44:	and    edx,eax
   140010f46:	mov    ecx,0x86328c66
   140010f4b:	jns    0x140010f62
   140010f4d:	pop    rdx
   140010f4e:	and    BYTE PTR [rbp+0x29026656],0x26
   140010f55:	xchg   ebp,eax
   140010f56:	add    al,0x26
   140010f58:	mov    al,0x3b
   140010f5a:	loop   0x140010fc1
   140010f5c:	jb     0x140010f17
   140010f5e:	nop
   140010f5f:	xchg   ebp,eax
   140010f60:	push   rdx
   140010f61:	mov    dl,BYTE PTR [rax]
   140010f63:	xchg   esp,eax
   140010f64:	mov    ebp,edi
   140010f66:	push   0x9b5ec06
   140010f6b:	add    BYTE PTR [rax-0x38955b87],bh
   140010f71:	outs   dx,BYTE PTR ds:[rsi]
   140010f72:	ins    DWORD PTR es:[rdi],dx
   140010f73:	test   DWORD PTR [rdi-0x1a08bfcf],0xfaf145cf
   140010f7d:	sub    BYTE PTR [rcx-0x18],cl
   140010f80:	pop    rax
   140010f81:	repnz rex.XB and bpl,r9b
   140010f85:	pop    rdi
   140010f86:	jb     0x140010f83
   140010f88:	rex.WX
   140010f89:	movabs al,gs:0xa35d7838cf1c6c62
   140010f93:	icebp  
   140010f94:	movabs eax,ds:0xbc1c84df91e371cf
   140010f9d:	int    0x4e
   140010f9f:	ficom  DWORD PTR [rcx+0x41]
   140010fa2:	int3   
   140010fa3:	and    dh,BYTE PTR [rax+0x16d2bc69]
   140010fa9:	rcr    BYTE PTR [rdx+0x2],1
   140010fac:	xor    eax,0x33494017
   140010fb1:	cmp    BYTE PTR [rax],cl
   140010fb3:	loope  0x140010f88
   140010fb5:	nop
   140010fb6:	add    eax,0x11481994
   140010fbb:	mov    cs,WORD PTR [rax+0x6aaf1d2]
   140010fc1:	ss out dx,al
   140010fc3:	(bad)  
   140010fc4:	and    eax,ebp
   140010fc6:	(bad)  
   140010fc7:	(bad)  
   140010fc8:	add    eax,DWORD PTR [rax+rdx*8+0x68]
   140010fcc:	mov    bh,0xa4
   140010fce:	(bad)  
   140010fcf:	sbb    BYTE PTR [rcx],cl
   140010fd1:	pop    rcx
   140010fd2:	push   rcx
   140010fd3:	rex.WXB
   140010fd4:	rex.WR jbe 0x140010f6a
   140010fd7:	xor    dh,BYTE PTR [rcx]
   140010fd9:	cdq    
   140010fda:	mov    r9,QWORD PTR [r11+rdx*1-0x1a]
   140010fdf:	sbb    BYTE PTR [rdi+0x20],ah
   140010fe2:	(bad)  
   140010fe3:	rol    BYTE PTR [rdx+riz*8-0x67],1
   140010fe7:	add    BYTE PTR [rbx],ch
   140010fe9:	push   rsi
   140010fea:	(bad)  
   140010feb:	in     al,0xe3
   140010fed:	jmp    rdi
   140010fef:	and    ebx,esi
   140010ff1:	fmul   QWORD PTR [rax-0x314dddda]
   140010ff7:	rex.WB and al,0x2a
   140010ffa:	movabs eax,ds:0xb8478ae603f8ad24
   140011003:	rex.WRX mov al,0x57
   140011006:	cmp    DWORD PTR [rcx],eax
   140011008:	push   rcx
   140011009:	adc    dh,bh
   14001100b:	mov    eax,0xfa004ffa
   140011010:	fistp  DWORD PTR [rbx-0x9]
   140011013:	xor    al,BYTE PTR [rax-0x1d66061d]
   140011019:	mov    cl,BYTE PTR [rcx+0x2]
   14001101c:	sub    BYTE PTR [rdx],ah
   14001101e:	cli    
   14001101f:	mov    cl,0x80
   140011021:	xchg   ebp,eax
   140011022:	sbb    BYTE PTR [rbx-0x77],dl
   140011025:	fidivr WORD PTR [rbp-0x6]
   140011028:	retf   0xff6
   14001102b:	std    
   14001102c:	add    eax,DWORD PTR [rax]
   14001102e:	clc    
   14001102f:	xchg   BYTE PTR [rbx-0x2f],bh
   140011032:	dec    ah
   140011034:	out    dx,eax
   140011035:	xor    bh,BYTE PTR [rdi]
   140011037:	clc    
   140011038:	mov    ch,cl
   14001103a:	test   eax,0xa0b56e4b
   14001103f:	fbld   TBYTE PTR [rsp+0x2d1a8269]
   140011046:	push   rax
   140011047:	jmp    0x140011069
   140011049:	sar    BYTE PTR [rcx],1
   14001104b:	ins    BYTE PTR es:[rdi],dx
   14001104c:	sbb    eax,0x60134985
   140011051:	mov    ?,WORD PTR [rsi]
   140011053:	push   rdx
   140011054:	sub    eax,0xf9c4ba53
   140011059:	jnp    0x140011005
   14001105b:	in     al,dx
   14001105c:	mov    esp,0x92759492
   140011061:	(bad)
   140011065:	add    DWORD PTR [rdx-0x68e45920],eax
   14001106b:	stc    
   14001106c:	int3   
   14001106d:	sub    edx,DWORD PTR [rdi+0x7ee75a47]
   140011073:	(bad)  
   140011074:	sar    edx,1
   140011076:	out    dx,eax
   140011077:	mov    WORD PTR [rcx-0x3765b422],?
   14001107d:	shl    DWORD PTR [rdi+0x7a47362],cl
   140011083:	(bad)  
   140011084:	and    eax,0x29026103
   140011089:	jmp    0x1400110ed
   14001108b:	push   rax
   14001108c:	rex.RB push 0xffffffffffffffb1
   14001108f:	popf   
   140011090:	movabs eax,ds:0x1351b203e597ba05
   140011099:	pushf  
   14001109a:	xor    ch,BYTE PTR [rbx]
   14001109c:	es push rsi
   14001109e:	jbe    0x140011106
   1400110a0:	shr    dh,0x60
   1400110a3:	mov    ch,0x9f
   1400110a5:	xchg   al,cl
   1400110a7:	pop    rsi
   1400110a8:	and    al,0x4
   1400110aa:	icebp  
   1400110ab:	mov    ebx,0xdc954ac1
   1400110b0:	(bad)  
   1400110b1:	cmp    ebp,DWORD PTR [rbx]
   1400110b3:	(bad)  
   1400110b4:	gs mov bh,0xb4
   1400110b7:	rol    edi,1
   1400110b9:	mov    dl,0x5e
   1400110bb:	sbb    DWORD PTR [rdi],esp
   1400110bd:	fdivp  st(0),st
   1400110bf:	gs rex.WRX push rdx
   1400110c2:	stc    
   1400110c3:	xor    edx,0x55784135
   1400110c9:	in     al,dx
   1400110ca:	xchg   BYTE PTR [rax-0x742aab9f],bl
   1400110d0:	jge    0x140011058
   1400110d2:	(bad)  
   1400110d3:	(bad)  
   1400110d5:	mov    ds,WORD PTR [rbx]
   1400110d7:	lahf   
   1400110d8:	cli    
   1400110d9:	rex.WRB call 0x18d8eecc4
   1400110df:	es xchg edx,eax
   1400110e1:	mov    eax,0x40d89e21
   1400110e6:	movabs eax,ds:0xa832ee81746a09a4
   1400110ef:	mov    ebp,0x939d4a0c
   1400110f4:	nop
   1400110f5:	std    
   1400110f6:	ss push 0x312e6776
   1400110fc:	push   rdx
   1400110fd:	mov    dl,BYTE PTR [rbx]
   1400110ff:	add    BYTE PTR [rax-0x16],dl
   140011102:	out    0xea,eax
   140011104:	sub    al,bl
   140011106:	push   0xffffffffffffffc2
   140011108:	(bad)  
   140011109:	or     BYTE PTR [rax+0x4e],ah
   14001110c:	jg     0x140011119
   14001110e:	adc    BYTE PTR [rbx-0x39],al
   140011111:	outs   dx,BYTE PTR ds:[rsi]
   140011112:	cmp    al,bl
   140011114:	enter  0x918d,0x73
   140011118:	(bad)  
   140011119:	scas   al,BYTE PTR es:[rdi]
   14001111a:	in     al,0x22
   14001111c:	and    BYTE PTR [rsi],ah
   14001111e:	add    DWORD PTR [rax-0x68],esp
   140011121:	(bad)  
   140011122:	xor    BYTE PTR [rcx-0x35de4d9a],cl
   140011128:	repz imul eax,DWORD PTR [rcx],0x2
   14001112c:	lods   al,BYTE PTR ds:[rsi]
   14001112d:	div    BYTE PTR [rbx-0x660ffe2]
   140011133:	adc    DWORD PTR [rcx+rdi*2],0xffffffbf
   140011137:	sar    BYTE PTR [rax+0x2e1a603f],0xac
   14001113e:	outs   dx,BYTE PTR ds:[rsi]
   14001113f:	lods   eax,DWORD PTR ds:[rsi]
   140011140:	out    0xc6,al
   140011142:	fs int3 
   140011144:	ss leave 
   140011146:	sub    BYTE PTR [rbx],al
   140011148:	rex.WX push rcx
   14001114a:	fsub   st,st(3)
   14001114c:	jbe    0x1400111ad
   14001114e:	pop    rcx
   14001114f:	add    DWORD PTR [rbx+0x35],edi
   140011152:	or     eax,0xdff0a008
   140011157:	push   rbp
   140011158:	lea    esi,[rcx+rax*8+0x40d2d470]
   14001115f:	repz (bad) 
   140011161:	cld    
   140011162:	rex.WR pop rcx
   140011164:	retf   0x1747
   140011167:	rex.X pushf 
   140011169:	xchg   BYTE PTR [rax],bh
   14001116b:	rex.WB in eax,0x9c
   14001116e:	movabs al,ds:0x68a1e1e582e617da
   140011177:	cwde   
   140011178:	and    bl,BYTE PTR [rax+0x7ebc4957]
   14001117e:	shl    DWORD PTR [rdi],0xdc
   140011181:	mov    ebp,esi
   140011183:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011184:	jg     0x140011121
   140011186:	icebp  
   140011187:	sahf   
   140011188:	call   QWORD PTR [rax-0x6d]
   14001118b:	jb     0x1400111a8
   14001118d:	xchg   edi,eax
   14001118e:	adc    al,BYTE PTR [rcx-0x20cb46b8]
   140011194:	rex.WRB jo 0x140011169
   140011197:	add    eax,0x16820e75
   14001119c:	pop    QWORD PTR [rdx-0x5dc93426]
   1400111a2:	xor    BYTE PTR [rcx+0x5a],ch
   1400111a5:	rex.RX loope 0x14001117a
   1400111a8:	jg     0x140011141
   1400111aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400111ab:	jl     0x14001118d
   1400111ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400111ae:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400111b0:	sti    
   1400111b1:	clc    
   1400111b2:	(bad)  
   1400111b3:	mov    al,0x2c
   1400111b5:	fcmovnb st,st(1)
   1400111b7:	ror    DWORD PTR [rsi+0x10057b59],cl
   1400111bd:	shl    DWORD PTR [rcx+0x935685],0x6c
   1400111c4:	cmc    
   1400111c5:	xchg   dl,bh
   1400111c7:	ror    dl,cl
   1400111c9:	push   0xe
   1400111cb:	jb     0x1400111e0
   1400111cd:	xchg   edi,eax
   1400111ce:	(bad)  
   1400111cf:	mov    BYTE PTR [rbp-0xeef7d9a],cl
   1400111d5:	cmp    al,0xd9
   1400111d7:	add    BYTE PTR [rbx],cl
   1400111d9:	fs (bad) 
   1400111dc:	int    0x91
   1400111de:	out    dx,al
   1400111df:	add    DWORD PTR [rsi-0x7fc06218],edx
   1400111e5:	adc    eax,0x30293c49
   1400111ea:	adc    eax,DWORD PTR [rsi+0x60]
   1400111ed:	cs scas al,BYTE PTR es:[rdi]
   1400111ef:	not    DWORD PTR [rdi+0x41]
   1400111f2:	adc    BYTE PTR [rsi],ah
   1400111f4:	jo     0x140011258
   1400111f6:	(bad)  
   1400111f7:	sub    DWORD PTR [rdx+0x6fb01fc8],edx
   1400111fd:	jo     0x1400111ec
   1400111ff:	xchg   edi,eax
   140011200:	add    ecx,DWORD PTR [rbx+0x71]
   140011203:	rex.WRXB
   140011204:	mov    r12b,BYTE PTR [r12+r8*2+0x4a]
   140011209:	in     eax,dx
   14001120a:	mov    eax,0x98e3757a
   14001120f:	and    ah,BYTE PTR [rdx+0x7765e6e3]
   140011215:	adc    DWORD PTR [rsi],esp
   140011217:	jle    0x14001126f
   140011219:	push   rbx
   14001121a:	jl     0x140011233
   14001121c:	(bad)  
   14001121d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001121e:	mov    al,0x17
   140011220:	rex.WX
   140011221:	rex.WRX movabs rdi,0x261b1d17ca5d33c2
   14001122b:	mov    esi,0xf6fe8a2e
   140011230:	sbb    DWORD PTR [rdx+0x1f],ebx
   140011233:	cld    
   140011234:	stos   DWORD PTR es:[rdi],eax
   140011235:	sub    bh,ch
   140011237:	test   eax,0xe96611ff
   14001123c:	push   rsi
   14001123d:	sbb    eax,0x4974fe36
   140011242:	cmp    al,0x24
   140011244:	mov    cl,0x8b
   140011246:	mov    ch,BYTE PTR [rax+0x1cea04b9]
   14001124c:	add    ch,BYTE PTR [rdi]
   14001124e:	sbb    al,0x2
   140011250:	mov    ch,0x16
   140011252:	and    DWORD PTR [rbp+rax*1-0x7ebf7d50],0x2cf8e6c8
   14001125d:	lods   eax,DWORD PTR ds:[rsi]
   14001125e:	shl    BYTE PTR [rdx+riz*1+0x7cb44317],0x28
   140011266:	jl     0x1400111f3
   140011268:	jge    0x14001129b
   14001126a:	rex.R cmp BYTE PTR [rcx],0xfd
   14001126e:	sbb    BYTE PTR [rdx-0x3b],dl
   140011271:	fsubr  QWORD PTR [rsp+riz*4+0x24]
   140011275:	and    BYTE PTR [rsp+rbp*4-0x64a41992],ch
   14001127c:	add    ecx,edi
   14001127e:	cdq    
   14001127f:	mov    DWORD PTR [rbx+rdx*4+0x12],eax
   140011283:	mov    cl,0x9
   140011285:	xor    DWORD PTR [rsi+0x29],0xd946b775
   14001128c:	push   0x37919b98
   140011291:	add    eax,0x7c804fac
   140011296:	stos   BYTE PTR es:[rdi],al
   140011297:	lock mov ecx,0xe1f2cbd0
   14001129d:	(bad)  
   14001129e:	mul    BYTE PTR [rax+0x13]
   1400112a1:	ss (bad) 
   1400112a3:	or     ah,BYTE PTR [rdi]
   1400112a5:	add    al,0xa5
   1400112a7:	ins    BYTE PTR es:[rdi],dx
   1400112a8:	loopne 0x14001128c
   1400112aa:	pop    rsi
   1400112ab:	scas   eax,DWORD PTR es:[rdi]
   1400112ac:	lahf   
   1400112ad:	jns    0x14001130c
   1400112af:	jno    0x14001129e
   1400112b1:	jge    0x1400112b3
   1400112b3:	adc    al,0x8c
   1400112b5:	jg     0x1400112b8
   1400112b7:	test   ch,ch
   1400112b9:	cmp    dh,BYTE PTR [rip+0xfffffffffdbc3437]        # 0x13dbd46f6
   1400112bf:	fistp  WORD PTR [rdi]
   1400112c1:	sbb    eax,0x9b6a1862
   1400112c6:	jle    0x14001130c
   1400112c8:	fcom   QWORD PTR [rcx*2-0x2edd9dff]
   1400112cf:	(bad)  
   1400112d0:	xchg   edx,eax
   1400112d1:	(bad)  
   1400112d2:	and    eax,0x4697bf0f
   1400112d7:	rex ins BYTE PTR es:[rdi],dx
   1400112d9:	mov    edi,0x22162596
   1400112de:	imul   esi,DWORD PTR [rbp+0xc7e690f],0x741ef47c
   1400112e8:	(bad)  
   1400112e9:	jrcxz  0x1400112ca
   1400112eb:	push   rsp
   1400112ec:	repnz (bad) 
   1400112ee:	(bad)  
   1400112ef:	xlat   BYTE PTR ds:[rbx]
   1400112f0:	and    BYTE PTR [rdi-0xa24e82b],dh
   1400112f6:	sti    
   1400112f7:	ret    0x9009
   1400112fa:	ss rex.B int 0x45
   1400112fe:	jmp    0x140011317
   140011300:	call   0x14fb81921
   140011305:	fcomp  st(7)
   140011307:	imul   esi,DWORD PTR [rbx],0x16228c30
   14001130d:	(bad)  
   14001130e:	fdivr  QWORD PTR [rdx+0x12]
   140011311:	rex.B leave 
   140011313:	mov    ebx,0xd91817e3
   140011318:	xchg   ebx,eax
   140011319:	cmp    BYTE PTR [rcx],0x7f
   14001131c:	add    dl,BYTE PTR [rax]
   14001131e:	ror    DWORD PTR [rbp-0x1b59f179],0x7c
   140011325:	xchg   edx,eax
   140011326:	out    0x2e,eax
   140011328:	scas   eax,DWORD PTR es:[rdi]
   140011329:	fs jns 0x1400112da
   14001132c:	and    esi,eax
   14001132e:	nop
   14001132f:	sbb    BYTE PTR [rcx],ah
   140011331:	(bad)  
   140011332:	jno    0x1400112c2
   140011334:	sar    DWORD PTR [rax],0xb0
   140011337:	lods   al,BYTE PTR ds:[esi]
   14001133a:	hlt    
   14001133b:	jne    0x14001138c
   14001133d:	pop    rbx
   14001133e:	jg     0x140011340
   140011340:	sub    DWORD PTR [rsi],eax
   140011342:	(bad)  
   140011343:	add    al,0x56
   140011345:	ins    BYTE PTR es:[rdi],dx
   140011346:	mov    DWORD PTR [rcx-0x2a],edi
   140011349:	jne    0x1400112fc
   14001134b:	jp     0x140011307
   14001134d:	mov    dl,0x35
   14001134f:	pop    rsp
   140011350:	iret   
   140011351:	mov    ah,0xc
   140011353:	mov    al,al
   140011355:	mov    ah,BYTE PTR [rax-0x49872024]
   14001135b:	xchg   ebp,eax
   14001135c:	jmp    0x140011376
   14001135e:	jnp    0x1400112f6
   140011360:	adc    cl,ah
   140011362:	push   0x2
   140011364:	fs ins BYTE PTR es:[rdi],dx
   140011366:	add    dl,BYTE PTR [rdi+0x68eb3cf2]
   14001136c:	xor    al,0x5a
   14001136e:	es and bl,ah
   140011371:	fwait
   140011372:	cmp    eax,0x49ce7657
   140011377:	sub    BYTE PTR [r15-0x3f],r8b
   14001137b:	rex.B loope 0x14001139a
   14001137e:	movabs eax,ds:0x5b947caef9181958
   140011387:	cmp    BYTE PTR [rdi],cl
   140011389:	(bad)  
   14001138a:	jl     0x1400113f5
   14001138c:	jmp    0x1400113ea
   14001138e:	in     eax,dx
   14001138f:	fist   WORD PTR [rdi+0x68]
   140011392:	jge    0x140011374
   140011394:	addr32 push rbp
   140011396:	cli    
   140011397:	xchg   edi,eax
   140011398:	jg     0x1400113a3
   14001139a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001139b:	jge    0x14001136d
   14001139d:	add    al,0x35
   14001139f:	fucomip st,st(5)
   1400113a1:	or     BYTE PTR [rcx+rcx*2],ch
   1400113a4:	shr    DWORD PTR [rdx+0x3],cl
   1400113a7:	popf   
   1400113a8:	gs enter 0x51c2,0xd0
   1400113ad:	ret    0x7021
   1400113b0:	imul   ecx,DWORD PTR [rcx],0x48
   1400113b3:	fld    TBYTE PTR [rsi+0x61]
   1400113b6:	push   rcx
   1400113b7:	sbb    al,0x45
   1400113b9:	or     al,bh
   1400113bb:	and    al,0xa2
   1400113bd:	add    DWORD PTR [rbx+0x53],0xd8a99d91
   1400113c4:	jge    0x14001138f
   1400113c6:	std    
   1400113c7:	pop    rsi
   1400113c8:	cmp    ecx,DWORD PTR [rdi]
   1400113ca:	rex jo 0x1400113b0
   1400113cd:	mov    cl,0xc3
   1400113cf:	movabs eax,ds:0x325717f3973cf37b
   1400113d8:	adc    ah,BYTE PTR [rcx]
   1400113da:	xor    bl,dl
   1400113dc:	es repnz and al,0x21
   1400113e0:	jbe    0x140011385
   1400113e2:	je     0x14001138b
   1400113e4:	test   DWORD PTR [rax-0xf],0xdac8117
   1400113eb:	repnz sahf 
   1400113ed:	sti    
   1400113ee:	jmp    0x12b0c33a9
   1400113f3:	(bad)  
   1400113f4:	out    0x7a,al
   1400113f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400113f7:	rex.RX
   1400113f8:	rex.R (bad) 
   1400113fa:	scas   eax,DWORD PTR es:[rdi]
   1400113fb:	(bad)  
   1400113fc:	scas   al,BYTE PTR es:[rdi]
   1400113fd:	ror    BYTE PTR [rcx+0x2a],0x45
   140011401:	push   rax
   140011402:	sub    DWORD PTR [rcx],esp
   140011404:	(bad)  [rdi+0x36]
   140011407:	rcr    BYTE PTR [rsi-0x57],0x33
   14001140b:	pop    rsp
   14001140c:	jl     0x14001142f
   14001140e:	(bad)  
   14001140f:	sub    ch,BYTE PTR [rdi]
   140011411:	iret   
   140011412:	int3   
   140011413:	xor    bh,BYTE PTR [rbp-0x78]
   140011416:	adc    DWORD PTR [rbx-0x70],ecx
   140011419:	rex.X fcom QWORD PTR [rdi-0x5cbd3514]
   140011420:	(bad)  
   140011421:	js     0x140011467
   140011423:	and    al,0xdd
   140011425:	rex.XB (bad) 
   140011427:	(bad)  
   140011428:	out    dx,eax
   140011429:	add    BYTE PTR [rax-0x1255794b],cl
   14001142f:	sbb    bl,BYTE PTR [rax+0x4a0cc148]
   140011435:	int3   
   140011436:	data16 (bad) 
   140011438:	mov    ebp,0xd6f82af4
   14001143d:	mul    DWORD PTR [rax-0x31402c0b]
   140011443:	jb     0x14001140c
   140011445:	punpckhdq mm5,mm7
   140011448:	and    ah,dh
   14001144a:	fiadd  DWORD PTR [rax]
   14001144c:	shl    BYTE PTR [rsi],cl
   14001144e:	test   al,0xd1
   140011450:	(bad)  
   140011451:	mov    bh,0xf
   140011453:	add    ch,bl
   140011455:	and    esp,DWORD PTR [rax-0x311f5c3b]
   14001145b:	mov    dl,0x5d
   14001145d:	imul   ebp,DWORD PTR [rax-0x61da7924],0xa67efa91
   140011467:	test   al,0x4f
   140011469:	sub    esi,eax
   14001146b:	fucomp st(5)
   14001146d:	addr32 add bl,dl
   140011470:	int    0x38
   140011472:	push   rdi
   140011473:	sub    BYTE PTR [rcx+0x63],ah
   140011476:	mov    ebx,0xb7d7566f
   14001147b:	jae    0x140011448
   14001147d:	sub    BYTE PTR [rax+rbx*4+0x1e],cl
   140011481:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011482:	pop    rbp
   140011483:	cmp    esp,eax
   140011485:	add    al,0x83
   140011487:	adc    DWORD PTR [rsi-0x43],eax
   14001148a:	rex.WR xchg sil,r9b
   14001148d:	adc    al,0x60
   14001148f:	in     eax,0xfe
   140011491:	out    0xd1,al
   140011493:	es jl  0x140011417
   140011496:	jle    0x14001143e
   140011498:	mov    bl,0x8d
   14001149a:	int3   
   14001149b:	lods   al,BYTE PTR ds:[rsi]
   14001149c:	ret    
   14001149d:	rex.WRX sub rax,0xfffffffff9b1a62a
   1400114a3:	shr    ebx,1
   1400114a5:	sbb    bh,BYTE PTR [rbx-0x3b]
   1400114a8:	add    BYTE PTR [rsi+rax*2-0x5],bh
   1400114ac:	mov    QWORD PTR [rax+riz*4],rbp
   1400114b0:	jne    0x140011470
   1400114b2:	rex.WR add al,0x3a
   1400114b5:	xchg   esi,eax
   1400114b6:	lahf   
   1400114b7:	rex.B
   1400114b8:	rex.WR mov cl,0x71
   1400114bb:	cmp    al,0x7f
   1400114bd:	mov    al,0x29
   1400114bf:	popf   
   1400114c0:	stos   BYTE PTR es:[rdi],al
   1400114c1:	out    dx,eax
   1400114c2:	adc    edi,DWORD PTR [rsi-0x3c]
   1400114c5:	pop    rsi
   1400114c6:	rex.XB
   1400114c7:	repnz mov edx,0x1debb065
   1400114cd:	rex.WB
   1400114ce:	ror    QWORD PTR [r10+r8*2+0x42],0x8b
   1400114d4:	enter  0x6445,0x2e
   1400114d8:	pushf  
   1400114d9:	lods   al,BYTE PTR ds:[rsi]
   1400114da:	xor    al,0x37
   1400114dc:	add    ax,0x73fb
   1400114e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400114e1:	sbb    BYTE PTR [rdx-0x3c29775],0xf3
   1400114e8:	sub    bh,cl
   1400114ea:	loope  0x1400114eb
   1400114ec:	or     ah,BYTE PTR [rsi+0x46ec6cb3]
   1400114f2:	movabs al,ds:0xb9b90b2b77dece
   1400114fb:	(bad)  
   1400114fc:	(bad)  
   1400114fd:	xchg   BYTE PTR [rsp+rbx*1],ch
   140011500:	add    eax,0x3edd97b7
   140011505:	add    eax,0xf2d3137e
   14001150a:	lods   al,BYTE PTR ds:[rsi]
   14001150b:	rex.WX imul rdi,QWORD PTR [rdx+0x16b8f0ac],0x16c1c37
   140011516:	add    BYTE PTR [rsi-0x47],ch
   140011519:	imul   edi,DWORD PTR [rcx],0xd5aa242d
   14001151f:	rcr    BYTE PTR [rsi-0x47],1
   140011522:	je     0x140011559
   140011524:	retf   
   140011525:	repnz int3 
   140011527:	rex.WX outs dx,BYTE PTR ds:[rsi]
   140011529:	push   rdi
   14001152a:	xchg   edi,eax
   14001152b:	retf   
   14001152c:	and    dh,BYTE PTR [rsi+0x1d5fceeb]
   140011532:	rex.WB (bad) 
   140011534:	ja     0x140011589
   140011536:	or     DWORD PTR [rdx-0x27ea513c],0x65
   14001153d:	sbb    eax,0xabe56caf
   140011542:	mov    ecx,0xb56088c1
   140011547:	cmp    BYTE PTR [rcx+0x35],0x88
   14001154b:	jmp    0x14001154e
   14001154d:	jnp    0x140011589
   14001154f:	or     eax,DWORD PTR [rax]
   140011551:	cmp    BYTE PTR [rcx-0x1f],bh
   140011554:	pushf  
   140011555:	cmp    dh,0x84
   140011558:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011559:	(bad)
   14001155c:	(bad)  
   14001155d:	push   rax
   14001155e:	fs cdq 
   140011560:	and    DWORD PTR [rdi+0x28],esp
   140011563:	adc    al,0xcb
   140011565:	pop    rdi
   140011566:	test   eax,0x7151e870
   14001156b:	ins    DWORD PTR es:[rdi],dx
   14001156c:	adc    DWORD PTR [rsi-0x4304dc16],esi
   140011572:	stos   BYTE PTR es:[rdi],al
   140011573:	push   rax
   140011574:	cwde   
   140011575:	or     al,0x9e
   140011577:	out    0x7d,al
   140011579:	cdq    
   14001157a:	and    al,BYTE PTR [rdi]
   14001157c:	sahf   
   14001157d:	xchg   BYTE PTR [rbx-0x4043a5cd],bl
   140011584:	movabs eax,ds:0x58eff89f5a377d6e
   14001158d:	out    dx,al
   14001158e:	cld    
   14001158f:	movabs al,ds:0x53885997201bef26
   140011598:	push   rax
   140011599:	rol    BYTE PTR [rdx],cl
   14001159b:	mov    bh,0x96
   14001159d:	in     al,dx
   14001159e:	rex.WR or rdi,0xffffffffe895c43c
   1400115a5:	rex.B adc al,0x8c
   1400115a8:	xchg   edi,eax
   1400115a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400115aa:	jo     0x14001155f
   1400115ac:	(bad)  
   1400115ad:	retf   
   1400115ae:	add    BYTE PTR [rax-0x6fed8747],al
   1400115b4:	mov    al,0x7f
   1400115b6:	rex.RXB mov DWORD PTR [r9-0x6a165c95],r14d
   1400115bd:	retf   
   1400115be:	pop    rbx
   1400115bf:	and    edi,DWORD PTR [rdi-0x33e66f2c]
   1400115c5:	jbe    0x140011609
   1400115c7:	jo     0x1400115bf
   1400115c9:	js     0x140011568
   1400115cb:	lock sahf 
   1400115cd:	rex.R (bad) 
   1400115cf:	(bad)  
   1400115d0:	rex.RX
   1400115d1:	sbb    bp,WORD PTR [rsi+0x58]
   1400115d5:	int    0xed
   1400115d7:	or     BYTE PTR [rax+rdi*2-0x5a37ee42],cl
   1400115de:	mov    esi,0xac362b9
   1400115e3:	not    edi
   1400115e5:	push   0x3478f378
   1400115ea:	movabs ds:0x4c3390b1f947cd6e,eax
   1400115f3:	loop   0x140011632
   1400115f5:	(bad)  
   1400115f6:	jl     0x140011586
   1400115f8:	cli    
   1400115f9:	retf   0x4e7c
   1400115fc:	rex.R (bad) 
   1400115fe:	and    DWORD PTR [rdi-0x6e8f5c70],edi
   140011604:	enter  0x87f1,0x72
   140011608:	rex.R mov dil,0x37
   14001160b:	adc    DWORD PTR [rsp-0xbad2156],esp
   140011612:	ds adc esp,edx
   140011615:	pop    rdx
   140011616:	rex.R jmp 0x14001165c
   140011619:	jg     0x140011670
   14001161b:	test   eax,0xe835ff0f
   140011620:	rex.RX xlat BYTE PTR ds:[rbx]
   140011622:	shl    BYTE PTR [rax+rax*4-0x37],0x1
   140011627:	xchg   ebx,eax
   140011628:	fstp   TBYTE PTR [rip+0xffffffffda6d8917]        # 0x11a6e9f45
   14001162e:	mov    cl,0xe6
   140011630:	movabs ds:0x5a16e57055941cdd,al
   140011639:	cwde   
   14001163a:	rex.RXB jns 0x14001169e
   14001163d:	adc    DWORD PTR [rcx-0x44bf0d23],edx
   140011643:	rex.WRX pop rdi
   140011645:	out    dx,al
   140011646:	mov    dh,0x9a
   140011648:	(bad)  
   140011649:	sti    
   14001164a:	mov    esi,DWORD PTR [rsi]
   14001164c:	mov    ah,0xd9
   14001164e:	sbb    ebp,edx
   140011650:	lea    esp,[rcx-0x67276a32]
   140011656:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011658:	rex leave 
   14001165a:	rex.WRX or rax,0x4777f197
   140011660:	add    BYTE PTR [rdx+0x19],bh
   140011663:	rex.RX add r13d,DWORD PTR [rip+0xffffffffb6600043]        # 0xf66116ad
   14001166a:	(bad)
   14001166e:	(bad)  
   14001166f:	cmp    eax,0x36b2fd83
   140011674:	rex.X outs dx,DWORD PTR ds:[rsi]
   140011676:	nop
   140011677:	leave  
   140011678:	add    BYTE PTR [rax+0x3d7087df],bl
   14001167e:	(bad)  
   14001167f:	out    dx,eax
   140011680:	repnz add DWORD PTR [rax],edi
   140011683:	(bad)  
   140011684:	shl    DWORD PTR cs:[rbx+0x14],0x9d
   140011689:	adc    al,0xd3
   14001168b:	mov    esi,0x208d3f25
   140011690:	sbb    edx,eax
   140011692:	mov    esi,DWORD PTR [rbp+0x4dac2472]
   140011698:	sub    DWORD PTR [rbp-0x25d4e907],eax
   14001169e:	ret    
   14001169f:	movabs ds:0x675355e908eca91e,al
   1400116a8:	jmp    0x1400116a5
   1400116aa:	test   eax,0x7d46ff2b
   1400116af:	ror    BYTE PTR [rdx+0x60],1
   1400116b2:	add    eax,ecx
   1400116b4:	sub    al,0xd8
   1400116b6:	(bad)  
   1400116b9:	ds (bad) 
   1400116bb:	mov    edx,0x7d685de5
   1400116c0:	loop   0x140011719
   1400116c2:	fnstenv [rsi+rcx*1+0x1b]
   1400116c6:	sbb    BYTE PTR [rip+0x33a21ce8],cl        # 0x173a333b4
   1400116cc:	mov    BYTE PTR [rax-0x65],ch
   1400116cf:	pop    rax
   1400116d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400116d1:	shl    DWORD PTR [rsi+0x63884749],1
   1400116d7:	imul   ecx,DWORD PTR [rcx+rsi*4],0xffffffbf
   1400116db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400116dc:	rcr    ah,1
   1400116de:	in     al,dx
   1400116df:	or     esi,DWORD PTR [rdi]
   1400116e1:	cs (bad) 
   1400116e3:	adc    al,0x9
   1400116e5:	(bad)  
   1400116e6:	js     0x1400116d6
   1400116e8:	jnp    0x140011724
   1400116ea:	rex.WRB lods al,BYTE PTR ds:[rsi]
   1400116ec:	or     eax,0x219e651
   1400116f1:	movabs ds:0xd9b1320d9db4ba73,eax
   1400116fa:	sbb    ah,dh
   1400116fc:	(bad)  
   1400116fd:	jg     0x1400116a6
   1400116ff:	rol    BYTE PTR [rdi-0x77],cl
   140011702:	rex.WX push rdi
   140011704:	rex.RXB mov r10b,0xed
   140011707:	mov    gs,ebp
   140011709:	push   0x5d
   14001170b:	rex.WRXB pop r12
   14001170d:	mov    DWORD PTR [rbp-0x6079a342],0xb827dc98
   140011717:	mov    dh,0xc
   140011719:	rcl    BYTE PTR [rbx+0x68],0x31
   14001171d:	cmp    al,0x26
   14001171f:	ficomp WORD PTR [rdi+0x11]
   140011722:	test   al,0x6d
   140011724:	jp     0x140011709
   140011726:	(bad)  
   140011727:	movabs ds:0x25fa35f01cde6915,al
   140011730:	stos   DWORD PTR es:[rdi],eax
   140011731:	jle    0x1400116fd
   140011733:	iret   
   140011734:	out    dx,eax
   140011735:	adc    edx,DWORD PTR [rax]
   140011737:	stos   DWORD PTR es:[rdi],eax
   140011738:	movabs ds:0x267c4983ad10385,eax
   140011741:	xchg   ecx,eax
   140011742:	enter  0x819,0xc7
   140011746:	or     BYTE PTR [rdx-0x11],ah
   140011749:	fistp  QWORD PTR [rsi+0x7bbdd79]
   14001174f:	xor    eax,0xb1fad017
   140011754:	pop    rdi
   140011755:	(bad)  
   140011756:	rex.XB ins BYTE PTR es:[rdi],dx
   140011758:	(bad)  
   140011759:	xor    al,0xdc
   14001175b:	xchg   edx,eax
   14001175c:	pop    rbp
   14001175d:	or     ah,al
   14001175f:	lods   eax,DWORD PTR ds:[rsi]
   140011760:	sub    al,0x6c
   140011762:	ret    
   140011763:	(bad)  
   140011764:	or     BYTE PTR [rcx],al
   140011766:	sub    BYTE PTR [rcx+rsi*1],dh
   140011769:	add    dl,ah
   14001176b:	or     bh,bl
   14001176d:	sbb    bh,ch
   14001176f:	jae    0x140011772
   140011771:	(bad)  
   140011772:	sub    cl,BYTE PTR [rbp-0xe]
   140011775:	jle    0x1400117a0
   140011777:	es (bad) 
   140011779:	adc    eax,0x6d587e0a
   14001177e:	mov    WORD PTR [rbp+rbx*1-0x66],ds
   140011782:	and    ecx,eax
   140011784:	push   0x1
   140011786:	cmp    edi,DWORD PTR [rsi-0x627be679]
   14001178c:	imul   ebx,DWORD PTR [rax-0x44f9b353],0xc40882aa
   140011796:	rex.WX cdqe 
   140011798:	xchg   ebp,eax
   140011799:	add    BYTE PTR [rax+0x2f],al
   14001179c:	(bad)  
   14001179d:	push   0xfffffffffd9231d3
   1400117a2:	(bad)  
   1400117a3:	mov    ebp,0xbc0c00d0
   1400117a8:	repz iret 
   1400117aa:	mov    al,BYTE PTR [rbp-0x5607c94f]
   1400117b0:	mov    edx,0xf1bdced2
   1400117b5:	(bad)  
   1400117b6:	xor    ah,BYTE PTR [rsi+0x200000a0]
   1400117bc:	add    BYTE PTR [rcx+0x44],cl
   1400117bf:	push   r12
   1400117c1:	loopne 0x140011744
   1400117c3:	and    eax,0x79aaa0f8
   1400117c8:	jmp    0xd2fd62ec
   1400117cd:	imul   esi,DWORD PTR [rcx+0x4fe3e522],0x2a
   1400117d4:	jle    0x14001175d
   1400117d6:	sub    DWORD PTR [rbx],ebp
   1400117d8:	repnz mul DWORD PTR [rdx]
   1400117db:	idiv   DWORD PTR [rdi+0x45]
   1400117de:	mov    ah,0xbc
   1400117e0:	(bad)
   1400117e3:	add    eax,0x34fef7a8
   1400117e8:	rex.R out 0xce,eax
   1400117eb:	adc    al,0xd0
   1400117ed:	adc    dh,0xce
   1400117f0:	adc    al,0x68
   1400117f2:	add    DWORD PTR [rax-0x43f37a27],esi
   1400117f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400117f9:	ja     0x140011816
   1400117fb:	jp     0x140011842
   1400117fd:	ficomp DWORD PTR [rcx-0x37]
   140011800:	add    eax,ebp
   140011802:	int    0x1
   140011804:	sbb    ebp,DWORD PTR [rbx-0x69785c7d]
   14001180a:	rex.WX fidivr DWORD PTR [rbp+0x4222977f]
   140011811:	imul   eax,DWORD PTR [rbx+0x19],0xfffffff6
   140011815:	mov    ch,0x35
   140011817:	(bad)  
   140011818:	out    0x8a,al
   14001181a:	add    eax,0xddfe2498
   14001181f:	iret   
   140011820:	mov    ch,0x91
   140011822:	hlt    
   140011823:	jbe    0x14001187f
   140011825:	(bad)
   140011828:	or     eax,0xaae40f2e
   14001182d:	int3   
   14001182e:	xchg   ecx,eax
   14001182f:	popf   
   140011830:	clc    
   140011831:	jp     0x1400117f4
   140011833:	(bad)  
   140011834:	cdq    
   140011835:	add    BYTE PTR [rcx+rsi*1-0x43eca07b],ah
   14001183c:	push   rbx
   14001183d:	scas   eax,DWORD PTR es:[rdi]
   14001183e:	lods   al,BYTE PTR ds:[rsi]
   14001183f:	mov    esi,0xc520f78b
   140011844:	adc    al,dh
   140011846:	jg     0x14001188e
   140011848:	ss ds rex.X jns 0x140011808
   14001184d:	rex.W
   14001184e:	rex mov WORD PTR [rcx],gs
   140011851:	push   rsp
   140011852:	sti    
   140011853:	push   0x19e2fca
   140011858:	mov    al,0x96
   14001185a:	test   BYTE PTR [rbx+rbp*8+0x13100683],al
   140011861:	call   FWORD PTR [rbx-0x6b]
   140011864:	cli    
   140011865:	sbb    eax,0x28fff71a
   14001186a:	or     esp,DWORD PTR [rdi-0x2e7feb3f]
   140011870:	sbb    BYTE PTR [rax],0x8
   140011873:	sub    DWORD PTR [rdi+0x3dc78870],esi
   140011879:	std    
   14001187a:	and    eax,0x4c4a8d33
   14001187f:	(bad)  
   140011880:	and    dh,BYTE PTR [rax]
   140011882:	stos   DWORD PTR es:[rdi],eax
   140011883:	out    0x1,eax
   140011885:	add    ch,cl
   140011887:	rex.RX movabs ds:0x5d5d7a2c5618718,eax
   140011891:	sub    eax,DWORD PTR [rbx-0x17]
   140011894:	cmp    esp,DWORD PTR [rsi-0x321ecc42]
   14001189a:	sub    BYTE PTR [rcx+0x4],ah
   14001189d:	mov    dl,0x61
   14001189f:	sbb    eax,0xca633b82
   1400118a4:	jmp    0x1400118c4
   1400118a6:	in     al,0xc8
   1400118a8:	mov    ah,0xc8
   1400118aa:	push   0x3ae3aae
   1400118af:	in     al,dx
   1400118b0:	cdq    
   1400118b1:	(bad)  
   1400118b2:	add    bh,ch
   1400118b4:	adc    al,0x9e
   1400118b6:	movabs al,ds:0xfff6a263dd0df801
   1400118bf:	(bad)  
   1400118c0:	pop    rcx
   1400118c1:	imul   edx,DWORD PTR [rax+0x62],0x6
   1400118c5:	pop    rsi
   1400118c6:	lods   eax,DWORD PTR ds:[rsi]
   1400118c7:	mul    esi
   1400118c9:	xor    BYTE PTR [rbp+0x16],0x4a
   1400118cd:	xchg   ecx,eax
   1400118ce:	loop   0x14001194a
   1400118d0:	rex.X
   1400118d1:	rex.XB loop 0x14001189c
   1400118d4:	(bad)  
   1400118d5:	repnz (bad) 
   1400118d7:	ins    BYTE PTR es:[rdi],dx
   1400118d8:	adc    al,0x1c
   1400118da:	push   rsp
   1400118db:	rex.W jle 0x14001194d
   1400118de:	(bad)  
   1400118df:	mov    esp,0xdc8099b5
   1400118e4:	cld    
   1400118e5:	movsxd r14,DWORD PTR [rsi+r8*1-0x4f]
   1400118ea:	(bad)  [rbp-0x40]
   1400118ed:	(bad)  
   1400118ee:	xlat   BYTE PTR ds:[rbx]
   1400118ef:	adc    eax,0xa69b8052
   1400118f4:	test   DWORD PTR [rbx+0x37],edi
   1400118f7:	adc    esi,edi
   1400118f9:	push   0xc
   1400118fb:	sbb    DWORD PTR [rax-0x12],0x3f3d5df5
   140011902:	fstp   DWORD PTR [rsi+rcx*4-0x3ffa9b5a]
   140011909:	push   rsi
   14001190a:	fldenv es:[rsi+0x6e]
   14001190e:	mov    dl,0xdd
   140011910:	idiv   esi
   140011912:	clc    
   140011913:	pop    rbx
   140011914:	(bad)  
   140011916:	xor    dl,dl
   140011918:	scas   eax,DWORD PTR es:[rdi]
   140011919:	jno    0x140011954
   14001191b:	outs   dx,DWORD PTR ds:[rsi]
   14001191c:	outs   dx,BYTE PTR ds:[rsi]
   14001191d:	nop
   14001191e:	mov    ebp,0x4cdfeb96
   140011923:	fcom   DWORD PTR [rbx]
   140011925:	or     eax,0x455e9ca0
   14001192a:	ret    0x5d6c
   14001192d:	cmp    BYTE PTR [rdi],cl
   14001192f:	(bad)  
   140011930:	lahf   
   140011931:	push   QWORD PTR [rbp+0x45]
   140011934:	or     ch,BYTE PTR [rdi]
   140011936:	xor    bh,ah
   140011938:	rex.WRX mov bpl,0xf6
   14001193b:	rex.R in al,dx
   14001193d:	xchg   edx,eax
   14001193e:	popf   
   14001193f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011940:	stos   BYTE PTR es:[rdi],al
   140011941:	xchg   edi,eax
   140011942:	(bad)  
   140011943:	(bad)  
   140011944:	(bad)
   140011947:	sbb    DWORD PTR [rdi-0x1810275d],edx
   14001194d:	(bad)  
   14001194e:	xchg   ecx,eax
   14001194f:	push   rax
   140011950:	sti    
   140011951:	pop    rbx
   140011952:	(bad)  
   140011953:	(bad)  
   140011954:	fld    QWORD PTR [rbx]
   140011956:	sbb    BYTE PTR [rbp+0x1d],ch
   140011959:	cmp    DWORD PTR [rdx],0x31067407
   14001195f:	mov    edx,0xaca49bd0
   140011964:	imul   edx,DWORD PTR [rip+0x7b2207f9],0x18c7bc2c        # 0x1bb232167
   14001196e:	xor    ah,cl
   140011970:	fcmovne st,st(4)
   140011973:	rcl    DWORD PTR [rip+0xffffffffe0c8195d],0xf5        # 0x120c932d7
   14001197a:	sar    BYTE PTR [rbx+0x720cc08d],1
   140011980:	fstp   DWORD PTR [rcx+0x6cdc6780]
   140011986:	(bad)  
   140011987:	lea    eax,[rbp+rbx*1+0x8de5667]
   14001198e:	push   rsp
   14001198f:	or     BYTE PTR [rsi-0x54],bh
   140011992:	(bad)  
   140011993:	movsxd ecx,DWORD PTR [rip+0x9c2a480]        # 0x149c3be19
   140011999:	loopne 0x140011958
   14001199b:	int    0x52
   14001199d:	jle    0x1400119e8
   14001199f:	fidivr WORD PTR [rdi]
   1400119a1:	call   0x11cb09e3f
   1400119a6:	rex.WRXB add rax,0xffffffffc0844c56
   1400119ac:	adc    BYTE PTR [rdx+0x698dd895],ch
   1400119b2:	sub    cl,ch
   1400119b4:	(bad)  
   1400119b5:	(bad)  
   1400119b7:	mov    bh,0xc
   1400119b9:	(bad)  
   1400119ba:	xchg   DWORD PTR [rsi+0x49],ebp
   1400119bd:	(bad)  
   1400119be:	cmp    dh,BYTE PTR [rdi+0x23042bbd]
   1400119c4:	add    dl,dl
   1400119c6:	cmp    edx,eax
   1400119c8:	test   BYTE PTR [rbx+0x44],0x10
   1400119cc:	xor    DWORD PTR [rcx-0x28],edx
   1400119cf:	rex.RB loope 0x140011986
   1400119d2:	cmc    
   1400119d3:	sub    BYTE PTR [rcx+0x70],ch
   1400119d6:	xchg   ebx,eax
   1400119d7:	loope  0x140011a0d
   1400119d9:	rex.XB jrcxz 0x140011a3b
   1400119dc:	add    al,0x0
   1400119de:	(bad)  
   1400119df:	movabs al,ds:0xe735d5ef665afba1
   1400119e8:	stos   DWORD PTR es:[rdi],eax
   1400119e9:	rol    DWORD PTR [rsi],1
   1400119eb:	fidivr DWORD PTR [rdx+0x15]
   1400119ee:	pop    rdi
   1400119ef:	jg     0x1400119dd
   1400119f1:	xor    al,0xc5
   1400119f3:	clc    
   1400119f4:	retw   
   1400119f6:	pop    rsi
   1400119f7:	xor    BYTE PTR [rax],al
   1400119f9:	cs xor al,0x0
   1400119fc:	icebp  
   1400119fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400119fe:	pop    rbp
   1400119ff:	(bad)  
   140011a01:	(bad)  
   140011a02:	sub    al,0x25
   140011a04:	loope  0x140011a11
   140011a06:	(bad)  
   140011a07:	jge    0x140011a60
   140011a09:	fsubr  st,st(5)
   140011a0b:	rex.R add al,0x89
   140011a0e:	rex.X
   140011a0f:	rex.WRX ret 
   140011a11:	jno    0x140011a0b
   140011a13:	sbb    eax,0x19059ce9
   140011a18:	xchg   edx,edi
   140011a1a:	(bad)  
   140011a1b:	(bad)  
   140011a1c:	(bad)  
   140011a1d:	stos   BYTE PTR es:[rdi],al
   140011a1e:	mov    eax,0xebab7963
   140011a23:	xor    DWORD PTR [rax+rcx*1-0x2e1c285d],eax
   140011a2a:	scas   eax,DWORD PTR es:[rdi]
   140011a2b:	outs   dx,DWORD PTR ds:[rsi]
   140011a2c:	sbb    BYTE PTR [rbx],ah
   140011a2e:	xchg   BYTE PTR [rsi+rsi*8+0x46767fa1],cl
   140011a35:	shl    ah,0x51
   140011a38:	outs   dx,BYTE PTR ds:[rsi]
   140011a39:	rex.RB push r11
   140011a3b:	cmp    BYTE PTR [rax+0x31],ah
   140011a3e:	fisub  WORD PTR [rbp+0x21]
   140011a41:	(bad)  
   140011a42:	movsxd ecx,DWORD PTR [rbx+rax*1-0x78]
   140011a46:	or     edi,DWORD PTR [rbx+0x5c69dabd]
   140011a4c:	pop    rbx
   140011a4d:	fcmovne st,st(2)
   140011a4f:	and    al,0x9b
   140011a51:	stc    
   140011a52:	and    ah,dh
   140011a54:	push   rdx
   140011a55:	adc    DWORD PTR [rsi+0x7f],ebx
   140011a58:	call   FWORD PTR [rbp-0x7f7ea409]
   140011a5e:	push   rsp
   140011a5f:	rcr    DWORD PTR [rbx],1
   140011a61:	(bad)  
   140011a62:	pop    rdx
   140011a63:	ficomp WORD PTR [rax]
   140011a65:	in     al,dx
   140011a66:	add    eax,0x11be9803
   140011a6b:	add    BYTE PTR [rbx+0x48],0x38
   140011a6f:	adc    DWORD PTR [rbp-0x17],ecx
   140011a72:	jns    0x140011a16
   140011a74:	cs xchg ebp,eax
   140011a76:	repz cmp edx,edi
   140011a79:	movabs ds:0x47d76f5ef0a50978,al
   140011a82:	test   BYTE PTR [rdi],cl
   140011a84:	jg     0x140011a5a
   140011a86:	js     0x140011b03
   140011a88:	(bad)  
   140011a89:	rex.WRB push r9
   140011a8b:	push   rcx
   140011a8c:	clc    
   140011a8d:	(bad)  
   140011a8e:	mov    ecx,0x944a5931
   140011a93:	rex.RX ja 0x140011a58
   140011a96:	or     al,0x16
   140011a98:	icebp  
   140011a99:	xchg   esi,eax
   140011a9a:	shl    eax,0x95
   140011a9d:	out    dx,eax
   140011a9e:	imul   esi,DWORD PTR [rsi],0x803dcec5
   140011aa4:	pop    rax
   140011aa5:	xchg   ebx,eax
   140011aa6:	and    BYTE PTR [rsp+rdx*2-0x7],al
   140011aaa:	mul    esp
   140011aac:	jle    0x140011ae8
   140011aae:	(bad)  
   140011aaf:	ins    DWORD PTR es:[rdi],dx
   140011ab0:	loope  0x140011a81
   140011ab2:	mov    cl,0xf0
   140011ab4:	xchg   ecx,eax
   140011ab5:	pushf  
   140011ab6:	test   ebx,esi
   140011ab8:	xor    eax,0x11a5a446
   140011abd:	jns    0x140011a82
   140011abf:	add    al,BYTE PTR [rdx]
   140011ac1:	cmp    edx,DWORD PTR [rbp+0x772363b7]
   140011ac7:	js     0x140011b12
   140011ac9:	scas   eax,DWORD PTR es:[rdi]
   140011aca:	(bad)  
   140011acb:	cmp    ecx,DWORD PTR [rdi+riz*1-0xd2377c9]
   140011ad2:	rex (bad) 
   140011ad4:	sub    BYTE PTR [rdx],bl
   140011ad6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140011ad8:	sahf   
   140011ad9:	loopne 0x140011a95
   140011adb:	cmp    DWORD PTR [rax+0x4d],esi
   140011ade:	sbb    DWORD PTR [rax],eax
   140011ae0:	xchg   ebp,eax
   140011ae1:	rex.RX (bad) 
   140011ae3:	je     0x140011a95
   140011ae5:	fwait
   140011ae6:	add    eax,0x147c33b0
   140011aeb:	scas   al,BYTE PTR es:[rdi]
   140011aec:	mov    bl,dl
   140011aee:	pop    rsp
   140011aef:	xchg   DWORD PTR [rcx+0x1],ebx
   140011af2:	adc    al,0x5e
   140011af4:	sti    
   140011af5:	loopne 0x140011aeb
   140011af7:	mov    ecx,DWORD PTR [rax+0x1eb4bf]
   140011afd:	add    eax,0xa79697e1
   140011b02:	add    cl,BYTE PTR [rax+0x368c9163]
   140011b08:	sbb    DWORD PTR [rax+0x65fb16b4],eax
   140011b0e:	call   0xce1c4ade
   140011b13:	rex.WRB scas rax,QWORD PTR es:[rdi]
   140011b15:	loopne 0x140011b0c
   140011b17:	(bad)  
   140011b18:	loope  0x140011ac1
   140011b1a:	(bad)  
   140011b1b:	sbb    eax,0xf452297c
   140011b20:	jg     0x140011b33
   140011b22:	ror    DWORD PTR [rcx+0x78405ac9],1
   140011b28:	ins    DWORD PTR es:[rdi],dx
   140011b29:	vpunpckldq ymm8,ymm8,YMMWORD PTR [rsi-0x58c3dc4e]
   140011b31:	cwde   
   140011b32:	adc    edi,0x8013fe4b
   140011b38:	(bad)  
   140011b39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b3a:	push   rdi
   140011b3b:	jae    0x140011b5e
   140011b3d:	ret    0x98f6
   140011b40:	loop   0x140011adc
   140011b42:	add    DWORD PTR [rbx+rax*4+0x1f],ecx
   140011b46:	add    edx,DWORD PTR [rbx-0x77ce00c4]
   140011b4c:	or     bl,0xad
   140011b4f:	cmp    esp,DWORD PTR [rdx]
   140011b51:	mov    ebx,0x494b5cb2
   140011b56:	int    0x17
   140011b58:	mov    edi,0x6d39da7
   140011b5d:	ret    0x94e0
   140011b60:	loopne 0x140011b75
   140011b62:	mov    al,0x3f
   140011b64:	movsxd esi,ecx
   140011b66:	pop    rdi
   140011b67:	mul    BYTE PTR [rsi]
   140011b69:	test   dh,dl
   140011b6b:	rex.RB (bad) 
   140011b6d:	(bad)  
   140011b6e:	js     0x140011baa
   140011b70:	out    dx,eax
   140011b71:	call   FWORD PTR [rbx-0x63]
   140011b74:	adc    eax,0xea0b70c8
   140011b79:	hlt    
   140011b7a:	(bad)  
   140011b7b:	shl    DWORD PTR [rdx],cl
   140011b7d:	loope  0x140011b59
   140011b7f:	cmc    
   140011b80:	adc    esp,DWORD PTR [rbp+rax*1+0x4465c7c6]
   140011b87:	jge    0x140011b97
   140011b89:	movsxd edi,DWORD PTR [rdi+0x17]
   140011b8c:	scas   al,BYTE PTR es:[rdi]
   140011b8d:	mov    esp,0x414af0
   140011b92:	mov    WORD PTR [rdx+0x18],gs
   140011b95:	in     eax,0x4e
   140011b97:	rex.RXB out dx,eax
   140011b99:	cmp    BYTE PTR [rbp+rdx*1-0x74],cl
   140011b9d:	cmp    DWORD PTR [rdi+riz*8-0x3a],ebp
   140011ba1:	sub    al,0x2d
   140011ba3:	cld    
   140011ba4:	cmc    
   140011ba5:	jnp    0x140011b3a
   140011ba7:	rex.WX
   140011ba8:	rex.RB (bad) 
   140011baa:	push   0x13c439b2
   140011baf:	mov    esi,0x6b804cbe
   140011bb4:	mov    ebp,0xb724402f
   140011bb9:	jrcxz  0x140011b9e
   140011bbb:	in     eax,0x94
   140011bbd:	(bad)  
   140011bbe:	lea    esi,[rcx+rdi*1]
   140011bc1:	(bad)  
   140011bc2:	rex.WR xchg rsi,rax
   140011bc4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011bc5:	ins    BYTE PTR es:[rdi],dx
   140011bc6:	(bad)  
   140011bc7:	mov    edx,0x65ef3969
   140011bcc:	xchg   esi,eax
   140011bcd:	jb     0x140011bdc
   140011bcf:	sahf   
   140011bd0:	xchg   esi,eax
   140011bd1:	sub    esp,edi
   140011bd3:	mov    ss,esp
   140011bd5:	jbe    0x140011b60
   140011bd7:	rex.RXB movabs al,ds:0x57d3fe1646f1657f
   140011be1:	rex.RXB ror DWORD PTR [r8+r8*4],1
   140011be5:	stos   DWORD PTR es:[rdi],eax
   140011be6:	ret    
   140011be7:	rex.WRXB or rax,0xffffffffc13945bc
   140011bed:	mul    BYTE PTR [rbx+0x5f]
   140011bf0:	int3   
   140011bf1:	cmp    bl,ch
   140011bf3:	jae    0x140011c05
   140011bf5:	sar    BYTE PTR [rsi+0x310e4cdf],1
   140011bfb:	mov    ecx,0xdb14b8f7
   140011c00:	mov    al,0x9b
   140011c02:	xor    ch,BYTE PTR [rbx+0xd]
   140011c05:	jle    0x140011c49
   140011c07:	adc    al,0xdd
   140011c09:	(bad)  
   140011c0a:	sti    
   140011c0b:	adc    bh,BYTE PTR ds:[rcx]
   140011c0e:	std    
   140011c0f:	adc    DWORD PTR [rsi+0x1e],ebx
   140011c12:	pop    rcx
   140011c13:	(bad)  
   140011c14:	mov    al,0x38
   140011c16:	in     eax,dx
   140011c17:	outs   dx,DWORD PTR ds:[rsi]
   140011c18:	(bad)  
   140011c19:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011c1a:	fisub  WORD PTR [rcx-0x1ea09320]
   140011c20:	jmp    0x140011c27
   140011c22:	es mov bh,0x3e
   140011c25:	cmp    dl,bh
   140011c27:	rex.WXB push r12
   140011c29:	ins    DWORD PTR es:[rdi],dx
   140011c2a:	add    ch,ah
   140011c2c:	add    al,0xef
   140011c2e:	add    al,0xf4
   140011c30:	mov    dl,0x61
   140011c32:	int3   
   140011c33:	or     eax,ecx
   140011c35:	(bad)  
   140011c36:	jge    0x140011c61
   140011c38:	xchg   esi,eax
   140011c39:	cld    
   140011c3a:	adc    eax,0x1f9ddc52
   140011c3f:	mov    edx,DWORD PTR [rdx]
   140011c41:	or     al,0x76
   140011c43:	jle    0x140011c61
   140011c45:	(bad)  
   140011c46:	ins    BYTE PTR es:[rdi],dx
   140011c47:	(bad)  
   140011c48:	rex.WRB xchg r15,rax
   140011c4a:	hlt    
   140011c4b:	mov    cl,0x1c
   140011c4d:	sub    ebx,ebx
   140011c4f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c50:	fisubr WORD PTR [rcx-0x12521fa8]
   140011c56:	or     BYTE PTR [rdi+rdx*1],dh
   140011c59:	pop    rdi
   140011c5a:	add    BYTE PTR [rip+0xffffffffe8b4c5fe],bh        # 0x128b5e25e
   140011c60:	rex.WXB xlat BYTE PTR ds:[rbx]
   140011c62:	mov    bl,0x46
   140011c64:	add    ebx,ecx
   140011c66:	enter  0x5b06,0xb9
   140011c6a:	test   eax,0x4caaf2d9
   140011c6f:	add    al,0xa6
   140011c71:	sbb    al,0x6b
   140011c73:	mul    DWORD PTR [rip+0x4b805d4d]        # 0x18b8179c6
   140011c79:	sub    ebp,ebx
   140011c7b:	cmp    DWORD PTR [rax],edx
   140011c7d:	adc    al,0x6
   140011c7f:	or     BYTE PTR [rax+0x5c],cl
   140011c82:	(bad)  
   140011c83:	and    BYTE PTR [rcx],bl
   140011c85:	retf   
   140011c86:	sbb    bh,BYTE PTR [rbp-0x9c857e5]
   140011c8c:	test   DWORD PTR [rcx],ebp
   140011c8e:	xchg   edi,eax
   140011c8f:	pop    rbp
   140011c90:	(bad)  
   140011c91:	push   rdx
   140011c92:	mov    esp,0x1ad69efd
   140011c97:	shl    BYTE PTR [rax+rdi*2+0x1],0xed
   140011c9c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011c9d:	add    DWORD PTR [rbx],eax
   140011c9f:	rex.RB push r14
   140011ca1:	pop    rdi
   140011ca2:	mov    dl,0x9b
   140011ca4:	(bad)  
   140011ca5:	xchg   esp,eax
   140011ca6:	retf   
   140011ca7:	lods   eax,DWORD PTR ds:[rsi]
   140011ca8:	fisttp DWORD PTR [rbx]
   140011caa:	rex.X mov esi,fs
   140011cad:	jrcxz  0x140011c3a
   140011caf:	sub    DWORD PTR [rip+0x52eb3c41],edi        # 0x192ec58f6
   140011cb5:	sub    al,0x10
   140011cb7:	mov    bl,BYTE PTR [rip+0x362fee80]        # 0x176310b3d
   140011cbd:	or     eax,0xd6c08522
   140011cc2:	adc    al,0x3b
   140011cc4:	sbb    al,0x11
   140011cc6:	popf   
   140011cc7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011cc8:	rex.X sbb edi,DWORD PTR [rax-0x75]
   140011ccc:	rex.X (bad) 
   140011cce:	(bad)  
   140011ccf:	(bad)  
   140011cd0:	sti    
   140011cd1:	pop    rdi
   140011cd2:	dec    DWORD PTR [rdi-0x26]
   140011cd5:	cmp    esp,DWORD PTR [rsi-0x63]
   140011cd8:	(bad)  
   140011cd9:	(bad)  
   140011cda:	mov    dh,ah
   140011cdc:	cmp    al,0x83
   140011cde:	in     al,0x43
   140011ce0:	nop
   140011ce1:	lahf   
   140011ce2:	popf   
   140011ce3:	mov    edi,DWORD PTR [rbx+0x4200d23b]
   140011ce9:	pop    rbp
   140011cea:	push   rbp
   140011ceb:	loop   0x140011d64
   140011ced:	sbb    BYTE PTR [rsi+0x27b9d8b2],cl
   140011cf3:	cs jge 0x140011c85
   140011cf6:	push   rax
   140011cf7:	rex.RB cwde 
   140011cf9:	out    dx,al
   140011cfa:	xchg   esi,eax
   140011cfb:	adc    ebp,esp
   140011cfd:	cs popf 
   140011cff:	push   0x69eb8505
   140011d04:	sub    dl,BYTE PTR [rcx+rdi*4]
   140011d07:	sbb    eax,0x2890988d
   140011d0c:	rex fxtract 
   140011d0f:	rcl    edi,0x95
   140011d12:	(bad)  
   140011d13:	lock pushw 0xd8ec
   140011d18:	pop    rbx
   140011d19:	push   0xffffffffffffffb6
   140011d1b:	pop    rdx
   140011d1c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011d1d:	mov    BYTE PTR [rax],cl
   140011d1f:	movabs ds:0x5efdaaa8fabc1ba4,eax
   140011d28:	ret    0x84c7
   140011d2b:	(bad)  
   140011d2c:	(bad)  
   140011d2d:	jns    0x140011d2e
   140011d2f:	sbb    eax,0xdb1fed85
   140011d34:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011d35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d36:	repnz adc DWORD PTR [rbx],esp
   140011d39:	lock fimul WORD PTR [rdx-0x52181c77]
   140011d40:	ret    
   140011d41:	or     eax,0x309e97b2
   140011d46:	mov    ebp,0x4637fc2f
   140011d4b:	cmc    
   140011d4c:	scas   al,BYTE PTR es:[rdi]
   140011d4d:	test   al,0x10
   140011d4f:	mov    edi,0xcc4ed809
   140011d54:	jae    0x140011d9e
   140011d56:	ds jo  0x140011dba
   140011d59:	shl    DWORD PTR [rdx],0xde
   140011d5c:	dec    DWORD PTR [rax+0x588fdbcb]
   140011d62:	adc    esp,DWORD PTR [rax]
   140011d64:	add    BYTE PTR [rax+rdi*8+0x78],bh
   140011d68:	push   rax
   140011d69:	(bad)  
   140011d6a:	ret    0xd635
   140011d6d:	hlt    
   140011d6e:	adc    ah,BYTE PTR [rdx+0x25]
   140011d71:	loopne 0x140011d50
   140011d73:	rex.WXB (bad) 
   140011d75:	js     0x140011d06
   140011d77:	test   eax,0xfc605c9
   140011d7c:	adc    DWORD PTR [rax+rdx*8-0x27b9649f],ebp
   140011d83:	stos   DWORD PTR es:[rdi],eax
   140011d84:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d85:	movsxd esi,ebp
   140011d87:	jmp    0xcec35fa7
   140011d8d:	call   0xd2084e3b
   140011d92:	in     al,0xfa
   140011d94:	rol    BYTE PTR [rax],cl
   140011d96:	mul    BYTE PTR [rdx+rbx*1+0x70]
   140011d9a:	rol    BYTE PTR [rcx+0x47],cl
   140011d9d:	jb     0x140011df5
   140011d9f:	mov    dh,0x13
   140011da1:	rex (bad) 
   140011da3:	mov    dl,0x91
   140011da5:	sbb    al,0xc5
   140011da7:	sub    eax,0xb14f1ab1
   140011dac:	je     0x140011d75
   140011dae:	test   BYTE PTR [rcx+0x27],al
   140011db1:	in     eax,0x11
   140011db3:	es xchg ebp,eax
   140011db5:	push   rbx
   140011db6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011db7:	mov    ecx,0x2878e2a8
   140011dbc:	and    dl,BYTE PTR [rbx]
   140011dbe:	jb     0x140011d9e
   140011dc0:	mov    edi,0x4d832105
   140011dc5:	hlt    
   140011dc6:	mov    esi,0x7a734ff2
   140011dcb:	neg    bh
   140011dcd:	es sahf 
   140011dcf:	and    DWORD PTR [rsi+0x48085969],eax
   140011dd5:	imul   ebx,DWORD PTR [rax+0xe1a086c],0xffffffac
   140011ddc:	std    
   140011ddd:	out    dx,eax
   140011dde:	push   rdi
   140011ddf:	(bad)  
   140011de0:	js     0x140011df7
   140011de2:	(bad)
   140011de6:	sbb    BYTE PTR [rax-0x30072faa],cl
   140011dec:	mov    ah,0xb3
   140011dee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011def:	scas   al,BYTE PTR es:[rdi]
   140011df0:	ins    BYTE PTR es:[rdi],dx
   140011df1:	hlt    
   140011df2:	xor    dl,BYTE PTR [rsi+riz*8+0x56e20863]
   140011df9:	loope  0x140011e50
   140011dfb:	xor    eax,0x443ddd80
   140011e00:	jns    0x140011e6e
   140011e02:	rex.WR loop 0x140011e29
   140011e05:	jle    0x140011e21
   140011e07:	pop    QWORD PTR [rax]
   140011e09:	mov    al,0x6b
   140011e0b:	hlt    
   140011e0c:	fdivr  DWORD PTR [rsi+0x7]
   140011e0f:	shl    eax,cl
   140011e11:	sbb    BYTE PTR [rsi-0x5b06ea89],al
   140011e17:	xor    al,0x4c
   140011e19:	xor    eax,0xaa0a9803
   140011e1e:	xor    dl,BYTE PTR [rcx-0x75]
   140011e21:	push   rdx
   140011e22:	(bad)  
   140011e23:	or     eax,DWORD PTR [rax-0x2b04bd2a]
   140011e29:	jo     0x140011ea6
   140011e2b:	rex.WXB (bad) 
   140011e2d:	sbb    eax,DWORD PTR [rdi-0x35]
   140011e30:	(bad)  
   140011e31:	(bad)  
   140011e32:	cmc    
   140011e33:	xchg   edx,eax
   140011e34:	retf   0x62a1
   140011e37:	movabs al,ds:0x10d68fd558b7714a
   140011e40:	mov    WORD PTR [rbp-0x12],ds
   140011e43:	fst    st(3)
   140011e45:	shl    BYTE PTR [rbp+rbp*4-0x1e],0x2d
   140011e4a:	rcr    BYTE PTR [rax],0x46
   140011e4d:	iret   
   140011e4e:	jge    0x140011e19
   140011e50:	or     al,0xbf
   140011e52:	cld    
   140011e53:	rex.WRXB test QWORD PTR [r15-0x487fdb51],r14
   140011e5a:	in     eax,0xa3
   140011e5c:	cld    
   140011e5d:	or     ah,BYTE PTR [rdx-0x6bff26df]
   140011e63:	cmc    
   140011e64:	and    BYTE PTR [rdx],bh
   140011e66:	add    esi,DWORD PTR [rcx+rcx*1-0x7eef6c72]
   140011e6d:	jmp    0xd1149bc7
   140011e72:	jne    0x140011e3c
   140011e74:	mov    ebp,0x8b5b3ee0
   140011e79:	adc    BYTE PTR [rax],dl
   140011e7b:	rex.RX pop rcx
   140011e7d:	out    dx,al
   140011e7e:	jbe    0x140011eb2
   140011e80:	rex.RX pop rsp
   140011e82:	push   rsi
   140011e83:	rex.W mov cl,0xd8
   140011e86:	adc    eax,0xf3ecbb61
   140011e8b:	cmp    DWORD PTR [rbp+0x6],esi
   140011e8e:	add    ah,al
   140011e90:	push   rdx
   140011e91:	adc    DWORD PTR [rcx+rbp*1+0x6c26024b],eax
   140011e98:	(bad)  
   140011e99:	cmp    bl,BYTE PTR [rip+0x4a30ca2a]        # 0x18a31e8c9
   140011e9f:	(bad)  
   140011ea0:	(bad)  
   140011ea1:	movabs al,ds:0xca8848103bb0066a
   140011eaa:	mov    ebx,0x6a52904
   140011eaf:	(bad)  
   140011eb0:	mov    WORD PTR [rbx],gs
   140011eb2:	popf   
   140011eb3:	cmp    ebp,DWORD PTR [rcx+rbx*1-0xe]
   140011eb7:	stos   DWORD PTR es:[rdi],eax
   140011eb8:	std    
   140011eb9:	rex.WR movabs rax,ds:0x96de98a829afc5e3
   140011ec3:	(bad)  
   140011ec4:	pushf  
   140011ec5:	div    cl
   140011ec7:	stc    
   140011ec8:	jno    0x140011ede
   140011eca:	sub    al,0x80
   140011ecc:	and    al,BYTE PTR [rsi-0x20d5181f]
   140011ed2:	rex.WX xchg rax,rax
   140011ed4:	rcl    DWORD PTR [rsi],0xb6
   140011ed7:	(bad)  
   140011ed8:	lock outs dx,DWORD PTR ds:[rsi]
   140011eda:	imul   edi,DWORD PTR [rsi],0xfffffff3
   140011edd:	test   dl,dh
   140011edf:	jns    0x140011e90
   140011ee1:	add    eax,0x4002e94e
   140011ee6:	loop   0x140011efe
   140011ee8:	add    BYTE PTR [rbp+0xfa8c0fa],cl
   140011eee:	xchg   ebx,eax
   140011eef:	or     eax,0xc161f01
   140011ef4:	rcr    BYTE PTR [rdx-0x7a60ba9d],0xa3
   140011efb:	sub    DWORD PTR [rcx-0xec216b6],0x36fcd
   140011f05:	lods   al,BYTE PTR ds:[rsi]
   140011f06:	lods   eax,DWORD PTR ds:[rsi]
   140011f07:	outs   dx,DWORD PTR ds:[rsi]
   140011f08:	cdq    
   140011f09:	push   rdx
   140011f0a:	adc    r13,QWORD PTR [r14+r8*4+0x21]
   140011f0f:	xchg   ebp,eax
   140011f10:	or     cl,BYTE PTR [rax+0x1761e323]
   140011f16:	iret   
   140011f17:	xor    ah,BYTE PTR [rdi+0x39]
   140011f1a:	(bad)
   140011f1d:	(bad)  
   140011f1e:	imul   eax,DWORD PTR [rdx],0xda422d12
   140011f24:	test   eax,0xa061bf3e
   140011f29:	gs add dh,dh
   140011f2c:	jnp    0x140011f6b
   140011f2e:	or     esi,DWORD PTR [rax]
   140011f30:	add    esp,DWORD PTR [rcx]
   140011f32:	test   al,0xf
   140011f34:	xor    dl,BYTE PTR [rbx+0x1717764b]
   140011f3a:	iret   
   140011f3b:	scas   eax,DWORD PTR es:[rdi]
   140011f3c:	pop    rbp
   140011f3d:	mov    esp,0xadf6b58c
   140011f42:	and    edx,DWORD PTR [rcx]
   140011f44:	shr    DWORD PTR [rax],cl
   140011f46:	or     al,0xbb
   140011f48:	enter  0x9f2e,0x10
   140011f4c:	mov    ss,WORD PTR [eax+0x6a]
   140011f50:	repnz icebp 
   140011f52:	jb     0x140011faf
   140011f54:	or     ah,dl
   140011f56:	(bad)  
   140011f57:	imul   DWORD PTR [rdi+0xc5424cf]
   140011f5d:	in     al,0x8a
   140011f5f:	ret    0x3132
   140011f62:	jp     0x140011f49
   140011f64:	cli    
   140011f65:	rex.RXB push QWORD PTR [r9+0x37cda17f]
   140011f6c:	call   QWORD PTR [rip+0xffffffffe2afaca9]        # 0x122b0cc1b
   140011f72:	mov    bl,cl
   140011f74:	rol    BYTE PTR [rsp+rcx*4],0x81
   140011f78:	call   0x14035838e
   140011f7d:	in     eax,0x7d
   140011f7f:	cwde   
   140011f80:	ins    BYTE PTR es:[rdi],dx
   140011f81:	add    al,0xd2
   140011f83:	sbb    DWORD PTR [rax-0x74],esp
   140011f86:	mov    edi,ebp
   140011f88:	packssdw mm5,QWORD PTR [rcx]
   140011f8b:	in     eax,dx
   140011f8c:	jne    0x140011fdf
   140011f8e:	lods   al,BYTE PTR ds:[rsi]
   140011f8f:	jg     0x140011fe9
   140011f91:	mov    ebp,fs
   140011f93:	push   rdi
   140011f94:	gs mov edx,0xc703e5be
   140011f9a:	add    BYTE PTR [rdx-0x54],ah
   140011f9d:	ins    DWORD PTR es:[rdi],dx
   140011f9e:	test   DWORD PTR [rbx+0x26],0x948110a1
   140011fa5:	adc    cl,BYTE PTR [rsi+0x54]
   140011fa8:	xchg   ecx,eax
   140011fa9:	nop    DWORD PTR [rax+0x20abe386]
   140011fb0:	lods   eax,DWORD PTR ds:[rsi]
   140011fb1:	mov    dl,BYTE PTR [rdx]
   140011fb3:	sbb    BYTE PTR [rsi-0x712d7ff],cl
   140011fb9:	jmp    0xe2629813
   140011fbe:	pop    rcx
   140011fbf:	xchg   ebx,eax
   140011fc0:	mov    BYTE PTR [rcx+0x683163],dh
   140011fc6:	shl    DWORD PTR [rax+0x5f8737a4],1
   140011fcc:	ins    DWORD PTR es:[rdi],dx
   140011fcd:	outs   dx,BYTE PTR ds:[rsi]
   140011fce:	in     al,dx
   140011fcf:	test   DWORD PTR [rsi],eax
   140011fd1:	push   rax
   140011fd2:	and    bh,BYTE PTR [rsi+0x41]
   140011fd5:	mov    esp,0x28547c13
   140011fda:	push   rcx
   140011fdb:	out    0x57,eax
   140011fdd:	(bad)  [rdi-0xe35a521]
   140011fe3:	outs   dx,DWORD PTR ds:[rsi]
   140011fe4:	or     bh,BYTE PTR [rbx]
   140011fe6:	mov    ebp,0xfeab5af4
   140011feb:	(bad)  
   140011fec:	(bad)  
   140011fed:	jl     0x140012011
   140011fef:	(bad)  
   140011ff0:	sub    eax,esi
   140011ff2:	data16 add cl,BYTE PTR [rdx+0xeb1bea5]
   140011ff9:	loopne 0x140012018
   140011ffb:	adc    DWORD PTR [rcx-0x71],eax
   140011ffe:	rex.RB movabs eax,ds:0xaea4349966885008
   140012008:	rex.WRXB cdqe 
   14001200a:	cmc    
   14001200b:	push   rdi
   14001200c:	mov    al,0xfd
   14001200e:	rex.RXB jg 0x140012048
   140012011:	push   rdi
   140012012:	(bad)  
   140012013:	rex.WRXB
   140012014:	rex.R jrcxz 0x140011fd7
   140012017:	rex.RXB
   140012018:	rex.W pop rdx
   14001201a:	xchg   BYTE PTR [rdi+0x46],al
   14001201d:	rex.XB
   14001201e:	repnz and DWORD PTR [rax],esi
   140012021:	fiadd  DWORD PTR [rsi]
   140012023:	and    esp,DWORD PTR gs:[rdi-0x7f23240a]
   14001202a:	fdivrp st(6),st
   14001202c:	lods   eax,DWORD PTR ds:[rsi]
   14001202d:	and    ch,BYTE PTR [rax+0x72e4fe]
   140012033:	cmp    BYTE PTR [rip+0x32e00e22],dh        # 0x172e12e5b
   140012039:	(bad)  
   14001203a:	(bad)  [rdi-0x50683dfb]
   140012040:	ins    BYTE PTR es:[rdi],dx
   140012041:	in     al,0xb1
   140012043:	sbb    eax,DWORD PTR [rsi+0xa950240]
   140012049:	xor    eax,0x3bcc4352
   14001204e:	mov    al,0xf1
   140012050:	pop    rbp
   140012051:	movabs ds:0x40f475e1504f1b52,al
   14001205a:	cmp    ecx,ebp
   14001205c:	and    ch,BYTE PTR [rax+0x27d48aeb]
   140012062:	jrcxz  0x14001203e
   140012064:	cli    
   140012065:	add    BYTE PTR [rax+0x4fde3d44],ch
   14001206b:	in     al,0x5
   14001206d:	jo     0x140011ff8
   14001206f:	scas   al,BYTE PTR es:[rdi]
   140012070:	shl    BYTE PTR [rdi*1-0x1a44d9d1],cl
   140012077:	xchg   ebp,eax
   140012078:	test   DWORD PTR [rdi-0x20],esi
   14001207b:	out    0xcd,al
   14001207d:	mov    cl,BYTE PTR [ebp+0x29]
   140012081:	movsxd ebp,DWORD PTR [rdi-0x5aca4854]
   140012087:	cmp    al,0x1d
   140012089:	call   0x191826eab
   14001208e:	rex.R jne 0x1400120e8
   140012091:	push   rdi
   140012092:	movabs ds:0xb4c290a2dfbedac5,al
   14001209b:	(bad)  
   14001209c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001209d:	ror    dl,cl
   14001209f:	cmp    al,0x49
   1400120a1:	jmp    0xfef54054
   1400120a6:	hlt    
   1400120a7:	(bad)  
   1400120a8:	mov    ch,0x79
   1400120aa:	cli    
   1400120ab:	rex.WRXB
   1400120ac:	rex.W
   1400120ad:	gs std 
   1400120af:	xor    BYTE PTR [rsi],al
   1400120b1:	(bad)  
   1400120b2:	ja     0x1400120bf
   1400120b4:	sbb    DWORD PTR [rip+0xffffffffa8cc11e8],ecx        # 0xe8cd32a2
   1400120ba:	(bad)  
   1400120bb:	or     al,0x7b
   1400120bd:	ss out 0xdf,al
   1400120c0:	cmp    esp,edi
   1400120c2:	loopne 0x14001204c
   1400120c4:	mov    edi,0x700b38ba
   1400120c9:	rex.R
   1400120ca:	rex.WRX mov al,0x33
   1400120cd:	add    ebx,DWORD PTR [rax]
   1400120cf:	(bad)  
   1400120d0:	hlt    
   1400120d1:	xchg   DWORD PTR [rdi],esi
   1400120d3:	sbb    cl,BYTE PTR [rsi-0x4ff7ffc1]
   1400120d9:	mov    dh,0xb9
   1400120db:	pop    rbp
   1400120dc:	push   0x62804400
   1400120e1:	movabs eax,ds:0xc3cfff64aa521124
   1400120ea:	or     DWORD PTR [rsi+0x2a],esi
   1400120ed:	push   rbx
   1400120ee:	and    eax,0xf13b1568
   1400120f3:	fsub   QWORD PTR [rdi+0x5e1a494c]
   1400120f9:	lods   eax,DWORD PTR ds:[rsi]
   1400120fa:	jnp    0x1400120bb
   1400120fc:	or     al,0x85
   1400120fe:	mov    ebp,0xd30a00d0
   140012103:	mov    dl,0x92
   140012105:	sahf   
   140012106:	xor    esi,esp
   140012108:	add    DWORD PTR [rcx-0x66],ebp
   14001210b:	sahf   
   14001210c:	iret   
   14001210d:	rex.RX sub al,0x2b
   140012110:	popf   
   140012111:	cmp    esi,DWORD PTR [rax-0xd]
   140012114:	out    0x33,al
   140012116:	adc    edx,DWORD PTR [rdi+0x7e264e90]
   14001211c:	(bad)  
   14001211d:	imul   edi,esp,0x839688f7
   140012123:	sbb    eax,0xe5ac2b1a
   140012128:	(bad)  
   140012129:	adc    al,0xca
   14001212b:	jg     0x140012126
   14001212d:	jl     0x14001210f
   14001212f:	pop    rbp
   140012130:	xlat   BYTE PTR ds:[rbx]
   140012131:	mov    ecx,0x3e2e6002
   140012136:	(bad)  
   140012137:	in     eax,dx
   140012138:	jg     0x14001212d
   14001213a:	pop    rbx
   14001213b:	(bad)  
   14001213c:	push   rdi
   14001213d:	iret   
   14001213e:	sub    BYTE PTR [rsi-0xf],al
   140012141:	cmp    BYTE PTR [rsi+0x1f],bl
   140012144:	mov    dl,0x41
   140012146:	cmp    eax,0x346439
   14001214b:	rex.RX cmp eax,0x92011b20
   140012151:	(bad)  
   140012152:	jmp    0x140012152
   140012154:	movabs ds:0xa0ccc55d1616c54,eax
   14001215d:	rex.XB (bad) 
   14001215f:	rex.RB
   140012160:	rex.RXB
   140012161:	xchg   r8,rax
   140012163:	cld    
   140012164:	(bad)  
   140012165:	gs and al,0xc7
   140012168:	(bad)  
   140012169:	adc    BYTE PTR [rax],al
   14001216b:	mov    eax,0xd23d7574
   140012170:	add    BYTE PTR [rsp+rcx*8],al
   140012173:	or     al,0x4e
   140012175:	push   rdx
   140012176:	movsxd esp,DWORD PTR [rdi+0x1]
   140012179:	push   0xffffffff824c8c6c
   14001217e:	mov    edi,0x7ff19c55
   140012183:	(bad)  
   140012184:	jmp    0x13cf2c976
   140012189:	cmc    
   14001218a:	push   rbp
   14001218b:	(bad)  
   14001218c:	rcl    BYTE PTR [rsp+rbp*8+0x33],0xd7
   140012191:	rcr    BYTE PTR [rsi+0x39],1
   140012194:	add    DWORD PTR [rbx],ecx
   140012196:	mov    bl,0x7b
   140012198:	or     dl,dl
   14001219a:	jbe    0x14001218f
   14001219c:	pop    rsp
   14001219d:	(bad)  
   14001219e:	fcmovnb st,st(6)
   1400121a0:	mov    ecx,0x77eb77e5
   1400121a5:	pop    rsi
   1400121a6:	clc    
   1400121a7:	and    esi,DWORD PTR [rip+0x210ee846]        # 0x1611009f3
   1400121ad:	outs   dx,DWORD PTR ds:[rsi]
   1400121ae:	add    dl,cl
   1400121b0:	mov    ah,0x39
   1400121b2:	out    dx,al
   1400121b3:	(bad)  
   1400121b4:	mov    edx,DWORD PTR [rdi]
   1400121b6:	or     al,BYTE PTR [rbp+0x2b]
   1400121b9:	(bad)  
   1400121ba:	fdivr  QWORD PTR [rdi]
   1400121bc:	in     al,0x74
   1400121be:	jg     0x1400121da
   1400121c0:	(bad)  
   1400121c1:	sbb    ebx,DWORD PTR [rdx-0x4d8b5446]
   1400121c7:	outs   dx,DWORD PTR ds:[rsi]
   1400121c8:	xor    cl,al
   1400121ca:	(bad)  
   1400121cb:	adc    edi,DWORD PTR [rbp-0x636c00d1]
   1400121d1:	sahf   
   1400121d2:	std    
   1400121d3:	mov    bl,0x44
   1400121d5:	add    DWORD PTR [rdx-0x14],ebp
   1400121d8:	rex.WB
   1400121d9:	add    BYTE PTR [rbx+0x6600d941],r12b
   1400121e0:	mov    eax,0x8843640d
   1400121e5:	(bad)  
   1400121e6:	in     al,dx
   1400121e7:	xor    edi,DWORD PTR [rbx]
   1400121e9:	rex.WRXB movabs r15,0xdd880febdd587d44
   1400121f3:	sbb    DWORD PTR [rsi+0x60894831],0x2d6a797c
   1400121fd:	and    ch,cl
   1400121ff:	sbb    al,0x50
   140012201:	push   rdi
   140012202:	(bad)  
   140012203:	mov    bh,0x42
   140012205:	(bad)  
   140012206:	(bad)  
   140012207:	fucomip st,st(7)
   140012209:	(bad)  
   14001220a:	rex.WX push rsp
   14001220c:	(bad)  
   14001220d:	sbb    bh,dh
   14001220f:	(bad)  
   140012210:	fstp   TBYTE PTR [rbx-0xd]
   140012213:	movabs al,ds:0xedce77f03eebae3b
   14001221c:	out    dx,al
   14001221d:	neg    esi
   14001221f:	mov    bh,0x63
   140012221:	(bad)  
   140012222:	add    DWORD PTR [rax],edx
   140012224:	loopne 0x140012248
   140012226:	xchg   ecx,eax
   140012227:	xchg   edx,eax
   140012228:	rex.WB lods rax,QWORD PTR ds:[rsi]
   14001222a:	es gs rex.RXB xchg r10d,eax
   14001222e:	movsxd ebx,DWORD PTR [rcx+0x56]
   140012231:	pushf  
   140012232:	rex.W retf 0xf638
   140012236:	push   rsp
   140012237:	and    eax,0x12b2ec91
   14001223c:	fnstenv [rip+0x715264f6]        # 0x1b1538738
   140012242:	in     al,0x89
   140012244:	(bad)  
   140012245:	xor    eax,0x4f6c4933
   14001224a:	lea    edi,[rip+0xffffffffe4a71ae5]        # 0x124a83d35
   140012250:	mov    WORD PTR [rdi],fs
   140012252:	(bad)  
   140012253:	(bad)  
   140012254:	adc    ebx,ecx
   140012256:	(bad)  
   140012257:	jns    0x1400121f6
   140012259:	mov    eax,0x596c65e4
   14001225e:	mov    esp,DWORD PTR [rip+0xffffffff89651b53]        # 0xc9663db7
   140012264:	mov    ah,0x24
   140012266:	pop    rdx
   140012267:	and    al,0x25
   140012269:	and    DWORD PTR [rdx],0xb1001241
   14001226f:	adc    DWORD PTR [rax+rsi*8],eax
   140012272:	lods   eax,DWORD PTR ds:[rsi]
   140012273:	out    dx,eax
   140012274:	mov    ebp,0xcce7beee
   140012279:	(bad)  
   14001227a:	neg    esi
   14001227c:	out    dx,al
   14001227d:	(bad)  
   14001227f:	cli    
   140012280:	add    DWORD PTR [rdi],ebx
   140012282:	sub    DWORD PTR [rbx],ecx
   140012284:	and    BYTE PTR [rax-0x10f0af89],ch
   14001228a:	jge    0x140012249
   14001228c:	fidivr WORD PTR [rsi-0x53103083]
   140012292:	neg    esp
   140012294:	and    al,0xf1
   140012296:	outs   dx,DWORD PTR ds:[rsi]
   140012297:	xchg   ebp,eax
   140012298:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012299:	add    al,0x8e
   14001229b:	push   rcx
   14001229c:	cdq    
   14001229d:	and    BYTE PTR [rcx],al
   14001229f:	rcr    BYTE PTR [rdx],0x56
   1400122a2:	pop    rdx
   1400122a3:	cld    
   1400122a4:	push   0xffffffffe706dc98
   1400122a9:	mov    cl,0xaf
   1400122ab:	fmul   QWORD PTR [rdx-0x1f]
   1400122ae:	cmp    dl,dl
   1400122b0:	mov    al,BYTE PTR [rdx]
   1400122b2:	pop    rsp
   1400122b3:	mov    edi,0x747b7c6f
   1400122b8:	lods   eax,DWORD PTR ds:[rsi]
   1400122b9:	add    al,al
   1400122bb:	mov    ebp,0x1f3cf6d9
   1400122c0:	rex.WRXB or r12b,BYTE PTR [r8-0x50]
   1400122c4:	mov    eax,0xe1746c74
   1400122c9:	add    cl,dh
   1400122cb:	(bad)  
   1400122cc:	mov    esi,0xda6004a4
   1400122d1:	push   rdx
   1400122d2:	mov    esi,0xd9a7882d
   1400122d7:	std    
   1400122d8:	icebp  
   1400122d9:	retf   0x5de3
   1400122dc:	pop    rsi
   1400122dd:	(bad)  
   1400122de:	push   0x6d0d7467
   1400122e3:	movabs ds:0x9e2a33ae5a331a07,eax
   1400122ec:	clc    
   1400122ed:	(bad)  
   1400122ee:	mov    WORD PTR [rsi],?
   1400122f0:	hlt    
   1400122f1:	or     esi,DWORD PTR [rax]
   1400122f3:	pop    rbx
   1400122f4:	(bad)  
   1400122f5:	xchg   ebx,eax
   1400122f6:	not    BYTE PTR [rbx+0x38]
   1400122f9:	test   eax,0xa1cd802e
   1400122fe:	movabs ds:0x13385968231680d,eax
   140012307:	push   rsp
   140012308:	adc    dl,ch
   14001230a:	not    DWORD PTR [rbp-0xa]
   14001230d:	jl     0x1400122fb
   14001230f:	fadd   QWORD PTR [rbx]
   140012311:	movabs ds:0xe6b31b3d53e60f8e,al
   14001231a:	(bad)
   14001231d:	rex.WRB jae 0x1400122e3
   140012320:	in     eax,dx
   140012321:	add    BYTE PTR [rcx],dl
   140012323:	rex.WRX sahf 
   140012325:	jns    0x1400122cd
   140012327:	push   0xfffffffffc7d5bb8
   14001232c:	lahf   
   14001232d:	mov    bl,0x9e
   14001232f:	nop
   140012330:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012332:	xchg   BYTE PTR [rax],al
   140012334:	stos   DWORD PTR es:[rdi],eax
   140012335:	clc    
   140012336:	cmp    ebp,DWORD PTR [rdx-0x19]
   140012339:	sbb    eax,0xd263f3f9
   14001233e:	sub    DWORD PTR [rdi-0x69628e5],edi
   140012344:	add    BYTE PTR [rdx+rsi*4+0x4e],ah
   140012348:	jno    0x1400123be
   14001234a:	(bad)  
   14001234b:	jmp    0x140012340
   14001234d:	std    
   14001234e:	pop    rdi
   14001234f:	mov    gs,WORD PTR [rsi-0x3fabfff6]
   140012355:	in     al,dx
   140012356:	mov    BYTE PTR [rcx-0x18],0x62
   14001235a:	mov    DWORD PTR [rbx-0x4c],edi
   14001235d:	rex.WXB ret 0x349a
   140012361:	jge    0x1400123cf
   140012363:	cmp    rbx,QWORD PTR [rdi-0x4c]
   140012367:	rcr    edi,1
   140012369:	cmp    ecx,0xffffffe1
   14001236c:	cmp    DWORD PTR [rdi+rax*1],esi
   14001236f:	push   rbp
   140012370:	in     al,0x75
   140012372:	(bad)  
   140012373:	stos   BYTE PTR es:[rdi],al
   140012374:	cmp    BYTE PTR [rsi-0x14],bh
   140012377:	(bad)  
   140012378:	add    BYTE PTR [rdx-0x58615f61],al
   14001237e:	(bad)  
   14001237f:	(bad)  
   140012380:	xlat   BYTE PTR ds:[rbx]
   140012381:	pop    rax
   140012382:	(bad)  
   140012383:	add    eax,0xdab2e049
   140012388:	sar    BYTE PTR [rdx+0x59aed003],1
   14001238e:	jb     0x1400123cd
   140012390:	nop
   140012391:	mov    ss,esi
   140012393:	mov    cl,0xf1
   140012395:	movabs eax,ds:0xdbb6837bb1cd2a5f
   14001239e:	call   0xcf30cbbe
   1400123a3:	fiadd  WORD PTR ds:[rsi+rax*2]
   1400123a7:	jmp    0x1400123d7
   1400123a9:	mov    ebx,0xdde74b4f
   1400123ae:	(bad)  
   1400123af:	lods   eax,DWORD PTR ds:[rsi]
   1400123b0:	xor    dh,BYTE PTR [rbx-0x126de6e6]
   1400123b6:	rex.WRX test al,0x50
   1400123b9:	(bad)  
   1400123ba:	jb     0x140012366
   1400123bc:	mov    dh,0xe7
   1400123be:	push   0x50
   1400123c0:	mov    bl,0x8c
   1400123c2:	fwait
   1400123c3:	mov    ebp,0xaa941fe3
   1400123c8:	xor    BYTE PTR [rdi-0x61],ah
   1400123cb:	pop    rcx
   1400123cc:	(bad)  
   1400123cd:	jmp    0x1400123ba
   1400123cf:	adc    BYTE PTR [rax-0x7612d6a8],cl
   1400123d5:	sbb    DWORD PTR [rsp+rbp*1],ecx
   1400123d8:	sbb    DWORD PTR [rdi+0x2],esp
   1400123db:	test   BYTE PTR [rbx-0x3c],cl
   1400123de:	adc    al,0x87
   1400123e0:	fild   QWORD PTR [rdx-0x51248d19]
   1400123e6:	clc    
   1400123e7:	xchg   dl,ah
   1400123e9:	imul   esi,DWORD PTR [rbp-0x7b],0xfffffff1
   1400123ed:	sub    al,0xf1
   1400123ef:	test   BYTE PTR [rdx+0x2d642f7],ah
   1400123f5:	scas   al,BYTE PTR es:[rdi]
   1400123f6:	xchg   ecx,eax
   1400123f7:	mov    rax,cr7
   1400123fa:	in     al,0x5a
   1400123fc:	jge    0x1400123a9
   1400123fe:	rex.WRB
   1400123ff:	ds rex.WXB shr r12b,cl
   140012403:	xor    DWORD PTR [rbp+0x3b13d6f2],edx
   140012409:	mov    edi,0xea7d2f05
   14001240e:	iret   
   14001240f:	sbb    dh,BYTE PTR [rsi-0x4a6fe79a]
   140012415:	fs or  ebx,edi
   140012418:	(bad)  
   140012419:	rcl    BYTE PTR [rax-0x17],0x84
   14001241d:	sub    eax,0x1d21bfdb
   140012422:	ret    0x1135
   140012425:	pop    rsp
   140012426:	add    eax,0x43aec35d
   14001242b:	in     eax,dx
   14001242c:	js     0x14001244c
   14001242e:	push   rbx
   14001242f:	(bad)  
   140012430:	xchg   ebp,eax
   140012431:	jnp    0x140012457
   140012433:	dec    DWORD PTR [rbx+0x5b17065f]
   140012439:	rex.WB (bad) 
   14001243b:	rex.WX add BYTE PTR [rbp-0x35faa8bc],sil
   140012442:	sbb    al,0xba
   140012444:	jne    0x14001244f
   140012446:	sub    BYTE PTR [rbx+0x57],dh
   140012449:	fld    DWORD PTR [rdi+0x7d]
   14001244c:	xchg   ebp,eax
   14001244d:	(bad)  
   14001244e:	scas   eax,DWORD PTR es:[rdi]
   14001244f:	out    dx,al
   140012450:	stos   DWORD PTR es:[rdi],eax
   140012451:	lahf   
   140012452:	popf   
   140012453:	adc    esp,ebx
   140012455:	(bad)  
   140012456:	in     eax,dx
   140012457:	mov    ch,BYTE PTR [rcx+0x39]
   14001245a:	push   rbx
   14001245b:	test   eax,0x62ea9a56
   140012460:	lods   al,BYTE PTR ds:[rsi]
   140012461:	(bad)  
   140012462:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012463:	(bad)  
   140012464:	fmul   QWORD PTR [rax+rax*4]
   140012467:	outs   dx,BYTE PTR ds:[rsi]
   140012468:	jg     0x140012427
   14001246a:	add    BYTE PTR [rax],dh
   14001246c:	rex.WRXB sahf 
   14001246e:	cmp    DWORD PTR [rdi],ebx
   140012470:	xlat   BYTE PTR ds:[rbx]
   140012471:	out    0x53,al
   140012473:	rex.WX mov WORD PTR [rdx-0x658d20a2],ds
   14001247a:	sub    dl,BYTE PTR [rcx]
   14001247c:	mov    ebx,0xfea1d271
   140012481:	push   rdi
   140012482:	mov    dh,0x7b
   140012484:	and    al,0xfd
   140012486:	std    
   140012487:	outs   dx,DWORD PTR ds:[rsi]
   140012488:	pop    rdi
   140012489:	sub    DWORD PTR [rsi-0x21519aeb],ebp
   14001248f:	jge    0x140012424
   140012491:	mov    WORD PTR [rcx+0x3a],gs
   140012494:	add    ebp,edi
   140012496:	jae    0x1400124e8
   140012498:	jrcxz  0x14001244e
   14001249a:	(bad)  
   14001249b:	jne    0x1400124fb
   14001249d:	push   0xffffffff9cad7060
   1400124a2:	or     dh,0x2c
   1400124a5:	repz (bad) 
   1400124a7:	jg     0x14001247b
   1400124a9:	mov    ebp,0x985b28e7
   1400124ae:	jnp    0x140012528
   1400124b0:	pushf  
   1400124b1:	movsx  ebp,bx
   1400124b4:	test   eax,0x7e3cdf5d
   1400124b9:	jmp    0x14bd7a411
   1400124be:	mov    fs,WORD PTR [rdi]
   1400124c0:	add    BYTE PTR [rax],cl
   1400124c2:	rol    ebx,0x36
   1400124c5:	shl    DWORD PTR [rdi+0x3386fecc],cl
   1400124cb:	scas   eax,DWORD PTR es:[rdi]
   1400124cc:	cs adc eax,0x720d5716
   1400124d2:	add    DWORD PTR [rdi-0x1e],0x31
   1400124d6:	pop    rdx
   1400124d7:	pop    rbp
   1400124d8:	lods   al,BYTE PTR ds:[rsi]
   1400124d9:	xor    eax,0xd783afc2
   1400124de:	(bad)  
   1400124df:	xchg   edi,eax
   1400124e0:	rex.WRX movsxd r14,ebx
   1400124e3:	iret   
   1400124e4:	jle    0x1400124c4
   1400124e6:	repnz mov ecx,0xe1731a47
   1400124ec:	push   0xffffffffffffffa9
   1400124ee:	out    dx,eax
   1400124ef:	(bad)  
   1400124f0:	neg    BYTE PTR [rax]
   1400124f2:	lods   eax,DWORD PTR ds:[rsi]
   1400124f3:	rex.B
   1400124f4:	rex.RXB
   1400124f5:	fwait
   1400124f6:	(bad)  
   1400124f7:	(bad)  
   1400124f8:	push   rdi
   1400124f9:	jne    0x140012530
   1400124fb:	mov    bl,0x1b
   1400124fd:	jg     0x101b0f3cd
   140012503:	xor    DWORD PTR [rsi+0x11877df9],esi
   140012509:	fdivr  QWORD PTR [rcx+0x6d77769d]
   14001250f:	ds push rsp
   140012511:	xlat   BYTE PTR ds:[rbx]
   140012512:	push   rbp
   140012513:	(bad)
   140012516:	int    0xe9
   140012518:	fcmovbe st,st(6)
   14001251a:	shr    BYTE PTR [rsi+0x59556fae],1
   140012520:	add    BYTE PTR [rax+rax*1+0x19],0xa3
   140012525:	rex.WB scas rax,QWORD PTR es:[rdi]
   140012527:	(bad)  
   140012528:	adc    cl,BYTE PTR fs:[rcx]
   14001252b:	and    DWORD PTR [rbx+0x1c371eae],esp
   140012531:	int3   
   140012532:	mov    ebx,0xbf3c6cf6
   140012537:	adc    DWORD PTR [rsi+0x888878c],r12d
   14001253e:	xchg   edi,eax
   14001253f:	cdq    
   140012540:	sub    al,0xd8
   140012542:	mov    cl,0xfd
   140012544:	test   DWORD PTR [rax+0x6d703fe],ebp
   14001254a:	add    BYTE PTR [rdx-0x59],ch
   14001254d:	mov    bl,0x17
   14001254f:	adc    al,BYTE PTR [rdx]
   140012551:	rex.WR in al,0x4f
   140012554:	sub    al,BYTE PTR [rax-0x5580cf9c]
   14001255a:	loopne 0x140012567
   14001255c:	ret    
   14001255d:	xor    edi,DWORD PTR [rbx-0x48506112]
   140012563:	and    dl,BYTE PTR [rdx-0xd]
   140012566:	std    
   140012567:	push   rsi
   140012568:	stos   BYTE PTR es:[rdi],al
   140012569:	jmp    FWORD PTR [rsi+0x78]
   14001256c:	movabs ds:0xe60dc17b0dba1e3,al
   140012575:	(bad)  
   140012576:	push   rbp
   140012577:	mov    esp,0x468482c4
   14001257c:	jne    0x140012576
   14001257e:	add    BYTE PTR [rsi+0x7d1fe603],ch
   140012584:	out    0xf7,al
   140012586:	ins    DWORD PTR es:[rdi],dx
   140012587:	jns    0x140012588
   140012589:	sti    
   14001258a:	enter  0x2394,0x13
   14001258e:	stos   DWORD PTR es:[rdi],eax
   14001258f:	loop   0x140012566
   140012591:	sub    dh,BYTE PTR fs:[rcx+0x31cb7cd0]
   140012598:	jg     0x140012533
   14001259a:	sub    DWORD PTR [rax+rdi*4-0x5730c0f4],0xffffff8d
   1400125a2:	jmp    0xe8cdae7b
   1400125a7:	call   0xc01666ab
   1400125ac:	cli    
   1400125ad:	int    0x13
   1400125af:	push   rbx
   1400125b0:	mov    cl,0x45
   1400125b2:	mov    esp,0x18354f5a
   1400125b7:	add    BYTE PTR [rax-0x12],cl
   1400125ba:	js     0x1400125df
   1400125bc:	test   BYTE PTR [rdi-0x1dd3a332],spl
   1400125c3:	stc    
   1400125c4:	add    DWORD PTR [rax],esp
   1400125c6:	(bad)  
   1400125c7:	rex.WB push r10
   1400125c9:	xor    DWORD PTR [rbp-0x2b71a42],edi
   1400125cf:	out    dx,eax
   1400125d0:	and    dl,BYTE PTR [rbx-0x53]
   1400125d3:	rcr    BYTE PTR [rcx],1
   1400125d5:	repnz out dx,eax
   1400125d7:	cmp    ecx,0xffffffdf
   1400125da:	leave  
   1400125db:	mov    ecx,0x3ad4d9db
   1400125e0:	movabs al,ds:0x746d7fadfff3cebe
   1400125e9:	(bad)  
   1400125ea:	add    BYTE PTR [rax],ah
   1400125ec:	rcr    BYTE PTR [rsi+0x4275315],cl
   1400125f2:	jne    0x1400125ed
   1400125f4:	add    DWORD PTR [rdx+0x77e65187],esi
   1400125fa:	cmp    eax,0x7c35ebb5
   1400125ff:	loopne 0x1400125fd
   140012601:	addr32 sub esi,esp
   140012604:	or     BYTE PTR [rdx+0x23],dl
   140012607:	push   0x6d56c1eb
   14001260c:	xchg   edi,ebp
   14001260e:	fimul  DWORD PTR [rsi-0x22b76c1]
   140012614:	fidivr DWORD PTR [rcx+0x6d656cd5]
   14001261a:	or     al,0xc4
   14001261c:	(bad)  
   14001261d:	jp     0x14001261d
   14001261f:	cli    
   140012620:	add    ah,ah
   140012622:	int3   
   140012623:	and    ebx,eax
   140012625:	clc    
   140012626:	enter  0x96af,0xe6
   14001262a:	in     al,dx
   14001262b:	push   rdi
   14001262c:	xchg   edx,eax
   14001262d:	not    BYTE PTR [rdx-0x757aaf97]
   140012633:	add    eax,0x6b7431ca
   140012638:	fnstsw WORD PTR [rbp-0x25]
   14001263b:	ret    0xa1f5
   14001263e:	or     dl,al
   140012640:	stos   DWORD PTR es:[rdi],eax
   140012641:	mov    BYTE PTR [rbp-0x57],cl
   140012644:	es push rbp
   140012646:	(bad)  
   140012647:	mov    dh,0x5a
   140012649:	fwait
   14001264a:	outs   dx,DWORD PTR ds:[rsi]
   14001264b:	jnp    0x1400126bc
   14001264d:	mov    ch,0xdd
   14001264f:	jmp    0x1400125f9
   140012651:	pop    rsi
   140012652:	rex.WRX sub rax,0xfffffffff977dd39
   140012658:	mov    dh,BYTE PTR [rdi+0x79229916]
   14001265e:	repnz int3 
   140012660:	test   DWORD PTR [rdx+0x71],ebp
   140012663:	or     eax,0x51930225
   140012668:	retf   0x6206
   14001266b:	out    0xe7,al
   14001266d:	test   al,bl
   14001266f:	cmp    BYTE PTR [rbp-0xedae5d2],bh
   140012675:	cmc    
   140012676:	cdq    
   140012677:	sub    BYTE PTR [rdx+0x7a],ah
   14001267a:	out    0x4d,eax
   14001267c:	(bad)  
   14001267d:	clc    
   14001267e:	fisttp QWORD PTR [rsi-0x24a939e5]
   140012684:	mov    bl,0x61
   140012686:	out    0x6f,al
   140012688:	add    al,0xf5
   14001268a:	(bad)  
   14001268b:	mov    eax,0x280173a6
   140012690:	mov    esp,0x6dd709ad
   140012695:	int3   
   140012696:	imul   esp,DWORD PTR [rsi-0x30],0x7f
   14001269a:	rex.W (bad) 
   14001269c:	mov    bh,BYTE PTR [rbx-0x790fc762]
   1400126a2:	rol    ecx,1
   1400126a4:	repz lahf 
   1400126a6:	in     eax,dx
   1400126a7:	push   rdi
   1400126a8:	fisub  DWORD PTR [rdi-0x3]
   1400126ab:	adc    eax,0x3b7abe31
   1400126b0:	xor    eax,0xa9a34f8a
   1400126b5:	mov    BYTE PTR [rsi],0xb7
   1400126b8:	push   rdx
   1400126b9:	ror    DWORD PTR [rdi+0x0],cl
   1400126bc:	(bad)  
   1400126bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400126be:	ja     0x1400126ec
   1400126c0:	and    esi,edx
   1400126c2:	cmp    al,0x4e
   1400126c4:	add    esi,ebx
   1400126c6:	mov    esp,0x3e253de7
   1400126cb:	(bad)  
   1400126cc:	mov    esi,0xc89280c4
   1400126d1:	imul   esp,edi,0xffffff99
   1400126d4:	iret   
   1400126d5:	stos   DWORD PTR es:[rdi],eax
   1400126d6:	sti    
   1400126d7:	ret    
   1400126d8:	mov    ch,0x46
   1400126da:	xor    cl,BYTE PTR [rdi+0x48]
   1400126dd:	shr    BYTE PTR [rcx-0x6ab567d8],cl
   1400126e3:	sbb    edi,0x7363f554
   1400126e9:	test   eax,0x40076293
   1400126ee:	and    ebx,DWORD PTR [rdi+0x23]
   1400126f1:	(bad)  
   1400126f2:	push   rsi
   1400126f3:	bsf    ebx,ecx
   1400126f6:	rex.WXB fild WORD PTR [r8-0x80]
   1400126fa:	loop   0x14001268d
   1400126fc:	jrcxz  0x1400126a5
   1400126fe:	(bad)  
   1400126ff:	loope  0x140012711
   140012701:	add    dl,BYTE PTR [rdx+rdx*4-0x3f016cbc]
   140012708:	jb     0x14001269c
   14001270a:	mov    dh,BYTE PTR [rsi+0x77db8b52]
   140012710:	ss pop rsp
   140012712:	xor    edi,DWORD PTR [rip+0x490d7c8]        # 0x14491fee0
   140012718:	es (bad) 
   14001271a:	clc    
   14001271b:	jne    0x14001272e
   14001271d:	icebp  
   14001271e:	scas   eax,DWORD PTR es:[rdi]
   14001271f:	rex.WRB movabs ds:0x36ae07fd550bf,al
   140012729:	rex.WRB movabs r14,0x149afccca35e3f53
   140012733:	sbb    BYTE PTR [rcx-0x49a781a1],0x36
   14001273a:	xchg   DWORD PTR [rdi-0xa],esp
   14001273d:	mov    esi,0x799b97b6
   140012742:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012743:	in     eax,0x66
   140012745:	movsxd esi,DWORD PTR [rax-0x3c]
   140012748:	jbe    0x1400127c8
   14001274a:	fsub   DWORD PTR [rsi]
   14001274c:	rex.B
   14001274d:	rex.WX test QWORD PTR [rdx],rax
   140012750:	movabs al,ds:0xa99b185421a018e8
   140012759:	in     al,0x35
   14001275b:	adc    BYTE PTR [rdi-0x6b30601],bh
   140012761:	adc    ebx,DWORD PTR [rdi-0x40600e69]
   140012767:	pop    rbx
   140012768:	int    0xf0
   14001276a:	(bad)
   14001276f:	popf   
   140012770:	sub    BYTE PTR [rsi-0x23],cl
   140012773:	rex.RXB
   140012774:	test   BYTE PTR ds:[rsi+0xee15dd6],cl
   14001277b:	pop    rbx
   14001277c:	js     0x140012725
   14001277e:	mov    eax,DWORD PTR [rdi]
   140012780:	mov    ecx,0xdeabe7ae
   140012785:	rex.X mov bl,0xbf
   140012788:	(bad)  
   140012789:	jg     0x1400127d2
   14001278b:	xor    eax,eax
   14001278d:	pop    rdx
   14001278e:	cld    
   14001278f:	xchg   bl,bh
   140012791:	(bad)  
   140012792:	cli    
   140012793:	pop    rbp
   140012794:	fcomp  QWORD PTR [rax-0x7efe690]
   14001279a:	xchg   bl,bl
   14001279c:	nop
   14001279d:	(bad)  
   14001279e:	sub    eax,0x9f276399
   1400127a3:	(bad)  
   1400127a4:	pop    rdi
   1400127a6:	jns    0x14001277d
   1400127a8:	int    0xcc
   1400127aa:	add    al,0x4e
   1400127ac:	push   rbx
   1400127ad:	rex.WB (bad) 
   1400127af:	repz and eax,0xcec48925
   1400127b5:	mov    edi,0x193ce5c6
   1400127ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400127bb:	mov    ch,cl
   1400127bd:	movsxd ecx,DWORD PTR [rdi]
   1400127bf:	jle    0x14001279a
   1400127c1:	cmp    al,0xec
   1400127c3:	cmp    DWORD PTR [rbx-0x14],ecx
   1400127c6:	retf   
   1400127c7:	popf   
   1400127c8:	xlat   BYTE PTR ds:[rbx]
   1400127c9:	sub    DWORD PTR [rbp-0x29],0x5d5d35
   1400127d0:	or     BYTE PTR [rcx-0x8],ch
   1400127d3:	(bad)  
   1400127d4:	ds rex xchg esp,eax
   1400127d7:	mov    al,0x47
   1400127d9:	lea    eax,[rbx+0x5a]
   1400127dc:	mul    BYTE PTR [rsi-0x6a]
   1400127df:	ds ins BYTE PTR es:[rdi],dx
   1400127e1:	mov    edi,DWORD PTR [rcx-0x4133145]
   1400127e7:	push   rsi
   1400127e8:	sbb    al,0x7e
   1400127ea:	(bad)  
   1400127eb:	(bad)  
   1400127ec:	(bad)  
   1400127ed:	(bad)  
   1400127ee:	outs   dx,DWORD PTR ds:[rsi]
   1400127ef:	add    esp,DWORD PTR [rcx-0x156a7b5d]
   1400127f5:	stos   BYTE PTR es:[rdi],al
   1400127f6:	sbb    eax,0x2bce3403
   1400127fb:	jo     0x14001283c
   1400127fd:	mov    ch,0x52
   1400127ff:	repz sahf 
   140012801:	iret   
   140012802:	lods   al,BYTE PTR ds:[rsi]
   140012803:	scas   eax,DWORD PTR es:[rdi]
   140012804:	movabs ds:0xe97d25ebf3de6c75,eax
   14001280d:	rex.XB or DWORD PTR [r11],ebp
   140012810:	rex.B cdq 
   140012812:	cld    
   140012813:	mov    bh,BYTE PTR [rsi+rbx*2]
   140012816:	mov    bl,0xb1
   140012818:	(bad)  
   140012819:	jns    0x140012810
   14001281b:	rex.RXB sbb r10d,DWORD PTR [r8+0x2d8087c]
   140012822:	add    BYTE PTR [rsi],0x54
   140012825:	ins    BYTE PTR es:[rdi],dx
   140012826:	push   0xffffffffaa248d37
   14001282b:	rcl    ah,0xe1
   14001282e:	cmp    edi,esp
   140012830:	out    dx,al
   140012831:	add    cl,BYTE PTR [rdx-0x6a8835b8]
   140012837:	imul   ecx,DWORD PTR [rdi],0xfffffffd
   14001283a:	cmp    eax,0xfedfea01
   14001283f:	(bad)  
   140012840:	push   rdx
   140012841:	add    ebx,esi
   140012843:	enter  0xb3f1,0xe3
   140012847:	(bad)  
   140012848:	lea    edx,gs:[rcx-0x2d]
   14001284c:	fwait
   14001284d:	mov    bl,0x66
   14001284f:	(bad)  
   140012850:	fiadd  WORD PTR [rsi+0xcbd400c]
   140012856:	(bad)  
   140012857:	(bad)  
   140012858:	rex.WR adc rax,0x4000c7d3
   14001285e:	int3   
   14001285f:	push   rsp
   140012860:	xchg   ebp,eax
   140012861:	add    ebp,DWORD PTR [rbx+rbp*1+0x71]
   140012865:	xchg   ebx,eax
   140012866:	fwait
   140012867:	mov    dh,0x4f
   140012869:	sbb    eax,0x600bffea
   14001286e:	sbb    al,BYTE PTR [rax]
   140012870:	sub    BYTE PTR [rbx-0x37c7eaa1],0x4
   140012877:	imul   esi,DWORD PTR [rdx+rbp*2+0x7b],0xccb50c
   14001287f:	(bad)  
   140012880:	int    0xdd
   140012882:	iret   
   140012883:	mov    dl,0x7a
   140012885:	xlat   BYTE PTR ds:[rbx]
   140012886:	movabs ds:0x3a3f278dd6cf7f37,eax
   14001288f:	(bad)  
   140012890:	rex.WRX add QWORD PTR [rdx+0x4841196a],r8
   140012897:	rex.XB push r10
   140012899:	movabs eax,ds:0x25a44044ed409e73
   1400128a2:	(bad)  
   1400128a3:	(bad)  
   1400128a4:	ds pop rdi
   1400128a6:	add    DWORD PTR [rax],esp
   1400128a8:	dec    edx
   1400128aa:	cmp    eax,0x37e7be32
   1400128af:	loopne 0x140012897
   1400128b1:	(bad)  
   1400128b2:	sti    
   1400128b3:	shr    DWORD PTR [rdi],1
   1400128b5:	(bad)  
   1400128b6:	rex.WRB
   1400128b7:	add    ecx,r11d
   1400128ba:	adc    bl,BYTE PTR [rdx+0x4de3016f]
   1400128c0:	out    0xe4,eax
   1400128c2:	push   rbx
   1400128c3:	cmc    
   1400128c4:	jbe    0x1400128c4
   1400128c6:	and    al,0xd3
   1400128c8:	add    esi,DWORD PTR [rcx-0x40b928c0]
   1400128ce:	push   rbp
   1400128cf:	add    eax,0x1341c23e
   1400128d4:	imul   ebx,eax,0x23a02321
   1400128da:	rex.RX xor ax,0x5428
   1400128df:	movabs al,ds:0x280afbfb2f801c1e
   1400128e8:	mov    ?,WORD PTR [rsi]
   1400128ea:	jns    0x140012916
   1400128ec:	scas   eax,DWORD PTR es:[rdi]
   1400128ed:	xchg   esp,eax
   1400128ee:	add    esp,DWORD PTR [rdx]
   1400128f0:	in     eax,0x24
   1400128f2:	adc    DWORD PTR [rbx],esi
   1400128f4:	cwde   
   1400128f5:	mov    bl,0x26
   1400128f7:	rex.WB adc rax,0xffffffffdfe94dc4
   1400128fd:	mov    ah,0x54
   1400128ff:	add    BYTE PTR [rdi+riz*1],al
   140012902:	loopne 0x1400128e8
   140012904:	rex.WR cmp al,0x44
   140012907:	(bad)  
   140012908:	gs jb  0x1400128de
   14001290b:	mov    bl,0xa2
   14001290d:	test   al,0xc7
   14001290f:	sahf   
   140012910:	sar    ecx,cl
   140012912:	xlat   BYTE PTR ds:[rbx]
   140012913:	or     ebx,DWORD PTR [rbp+0x33]
   140012916:	(bad)  
   140012917:	add    dl,0xdb
   14001291a:	jmp    FWORD PTR [rsi+0x1]
   14001291d:	test   al,0xea
   14001291f:	pop    rbp
   140012920:	ja     0x1400128bb
   140012922:	add    esp,edx
   140012924:	lahf   
   140012925:	(bad)  
   140012926:	rex.RX jrcxz 0x14001291e
   140012929:	mov    ebp,DWORD PTR [rbx+0x3b]
   14001292c:	pop    rsi
   14001292d:	mov    dl,0x73
   14001292f:	jae    0x1400128e1
   140012931:	(bad)  
   140012932:	jae    0x1400128f7
   140012934:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012935:	(bad)  
   140012936:	(bad)
   14001293a:	mov    ?,WORD PTR [rdx]
   14001293c:	xchg   edx,eax
   14001293d:	fcmovbe st,st(4)
   14001293f:	pop    rdx
   140012940:	and    eax,DWORD PTR [rbx-0x5c]
   140012943:	mov    cl,BYTE PTR [rdi-0x30e3365d]
   140012949:	(bad)  
   14001294a:	rcl    cl,cl
   14001294c:	cmp    dh,BYTE PTR [rsi]
   14001294e:	(bad)  
   14001294f:	in     al,0xe7
   140012951:	lods   al,BYTE PTR ds:[rsi]
   140012952:	cmp    ecx,esi
   140012954:	xor    BYTE PTR [rcx],0x20
   140012957:	sub    BYTE PTR [rcx+0x5d],dh
   14001295a:	sbb    al,0xc9
   14001295c:	scas   eax,DWORD PTR es:[rdi]
   14001295d:	(bad)  
   14001295e:	stos   DWORD PTR es:[rdi],eax
   14001295f:	in     eax,0x18
   140012961:	(bad)  
   140012962:	pop    fs
   140012964:	rex.RB (bad) 
   140012966:	mov    BYTE PTR [rbx+0x5ee41baa],bl
   14001296c:	mov    ebp,0x1734236
   140012971:	rex.WRXB (bad) 
   140012973:	repz xor eax,0x4675501a
   140012979:	sbb    al,0x65
   14001297b:	cdq    
   14001297c:	fs jle 0x1400128ff
   14001297f:	movabs ds:0xb11241554beaa63e,al
   140012988:	mov    esi,0x908120bf
   14001298d:	fdiv   st(1),st
   14001298f:	sbb    eax,0x9216e748
   140012994:	movsxd esp,DWORD PTR [rdi]
   140012996:	sahf   
   140012997:	(bad)  
   140012998:	(bad)  
   140012999:	pause  
   14001299b:	add    BYTE PTR [rax+0x20],cl
   14001299e:	push   ax
   1400129a0:	(bad)  
   1400129a1:	rex.WX (bad) 
   1400129a3:	(bad)  
   1400129a4:	dec    DWORD PTR [rcx]
   1400129a6:	jmp    0x1903706ca
   1400129ab:	sbb    eax,0x61d69805
   1400129b0:	fcmovnu st,st(2)
   1400129b2:	mov    ah,0x3d
   1400129b4:	rol    dh,cl
   1400129b6:	jo     0x1400129a9
   1400129b8:	fild   QWORD PTR [rdi]
   1400129ba:	sbb    al,0x50
   1400129bc:	mov    eax,0x654c9a56
   1400129c1:	mov    DWORD PTR [rbx-0x45],eax
   1400129c4:	in     al,0xb
   1400129c6:	rex.WRB stos BYTE PTR es:[rdi],al
   1400129c8:	pop    rbp
   1400129c9:	imul   ebp,edi,0xc7d6627e
   1400129cf:	outs   dx,DWORD PTR ds:[rsi]
   1400129d0:	sti    
   1400129d1:	mov    esi,0x855b0861
   1400129d6:	sbb    al,0x80
   1400129d8:	mov    dh,0x7e
   1400129da:	(bad)  
   1400129db:	rex.WXB scas rax,QWORD PTR es:[rdi]
   1400129dd:	pop    rax
   1400129de:	and    DWORD PTR [rax+0x5f],ebp
   1400129e1:	mov    bl,0x21
   1400129e3:	or     ebp,edi
   1400129e5:	rex.WX imul BYTE PTR [ecx]
   1400129e9:	scas   al,BYTE PTR es:[rdi]
   1400129ea:	xchg   ebp,eax
   1400129eb:	and    al,0x18
   1400129ed:	jg     0x1400129d5
   1400129ef:	mul    DWORD PTR [rbp-0xd]
   1400129f2:	push   rdi
   1400129f3:	fisubr WORD PTR [rcx]
   1400129f5:	out    0xc4,al
   1400129f7:	add    eax,DWORD PTR [rsi-0x1f]
   1400129fa:	retf   0x5565
   1400129fd:	sahf   
   1400129fe:	jge    0x140012a3b
   140012a00:	div    BYTE PTR [rsi-0x2]
   140012a03:	(bad)  
   140012a04:	xor    ah,bl
   140012a06:	jo     0x140012a1b
   140012a08:	js     0x140012a76
   140012a0a:	(bad)  
   140012a0b:	pop    rax
   140012a0c:	jmp    0x14001299d
   140012a0e:	icebp  
   140012a0f:	data16 rex.WRB movabs r11,0x71ca1a3417305f66
   140012a1a:	push   0xffffffffffffffaf
   140012a1c:	mov    edx,0xbc8368d0
   140012a21:	ss (bad) 
   140012a23:	cdq    
   140012a24:	and    esp,ebp
   140012a26:	not    DWORD PTR [rdi-0x32]
   140012a29:	pop    rax
   140012a2a:	out    dx,eax
   140012a2b:	rex.RX
   140012a2c:	rex je 0x140012a0a
   140012a2f:	cld    
   140012a30:	cmc    
   140012a31:	(bad)  
   140012a32:	cmp    BYTE PTR [rsi+0x5],dl
   140012a35:	(bad)  
   140012a36:	cmp    DWORD PTR [rsi+0x76],edi
   140012a39:	mov    edx,?
   140012a3b:	adc    cl,BYTE PTR [rdx]
   140012a3d:	ss (bad) 
   140012a3f:	hlt    
   140012a40:	(bad)  
   140012a41:	ins    DWORD PTR es:[rdi],dx
   140012a42:	mov    dl,0x30
   140012a44:	outs   dx,DWORD PTR ds:[rsi]
   140012a45:	mov    DWORD PTR [rbx+0x53bdbae6],edx
   140012a4b:	mov    eax,0x4fccfb76
   140012a50:	xchg   ebx,eax
   140012a51:	fwait
   140012a52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a53:	pop    rdi
   140012a54:	mov    dh,0xde
   140012a56:	pop    rdi
   140012a57:	fucom  st(0)
   140012a59:	test   ebx,eax
   140012a5b:	call   0x142ec1333
   140012a60:	rex push rsp
   140012a62:	out    0xbf,al
   140012a64:	cli    
   140012a65:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a66:	out    0xf2,al
   140012a68:	lahf   
   140012a69:	pop    rbp
   140012a6a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a6b:	add    BYTE PTR [rdi+rdi*2-0x17],ch
   140012a6f:	xchg   ebx,eax
   140012a70:	test   BYTE PTR [rbx-0x68e882c9],r10b
   140012a77:	rex.WB popf 
   140012a79:	(bad)  
   140012a7a:	movabs al,ds:0x369b2be7c5f714b1
   140012a83:	mov    edx,0x6c38e551
   140012a88:	test   eax,0x1be981bf
   140012a8d:	fcmovb st,st(1)
   140012a8f:	repz rex or edx,eax
   140012a93:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140012a95:	mov    cl,0xf6
   140012a97:	ficomp WORD PTR [rdi]
   140012a99:	sub    ebp,ebp
   140012a9b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012a9c:	jle    0x140012a29
   140012a9e:	test   eax,0xf189fa1c
   140012aa3:	(bad)  
   140012aa4:	cwde   
   140012aa5:	fistp  DWORD PTR [rdx-0x60]
   140012aa8:	sbb    BYTE PTR [rcx-0x79],al
   140012aab:	sbb    ebp,DWORD PTR [rsi]
   140012aad:	cdq    
   140012aae:	(bad)  
   140012aaf:	fild   QWORD PTR [rdx+0x2556740b]
   140012ab5:	mov    edx,0x29b07ad0
   140012aba:	imul   DWORD PTR [rcx-0x16164862]
   140012ac0:	outs   dx,DWORD PTR ds:[rsi]
   140012ac1:	int3   
   140012ac2:	mov    esi,0x6fad48d4
   140012ac7:	cmp    edi,edi
   140012ac9:	pop    rdx
   140012aca:	jge    0x140012b21
   140012acc:	int    0xf8
   140012ace:	mov    ebx,DWORD PTR [rax-0x3f91a861]
   140012ad4:	loop   0x140012ac3
   140012ad6:	scas   eax,DWORD PTR es:[rdi]
   140012ad7:	leave  
   140012ad8:	repnz movabs ds:0x597571c9f57e2f90,al
   140012ae2:	es cwde 
   140012ae4:	sub    al,0xb3
   140012ae6:	jmp    0x1a9ca8dad
   140012aeb:	scas   eax,DWORD PTR es:[rdi]
   140012aec:	rex.WX inc BYTE PTR [rcx-0x15]
   140012af0:	mov    dl,0xdb
   140012af2:	jle    0x140012b19
   140012af4:	ins    DWORD PTR es:[rdi],dx
   140012af5:	movabs eax,ds:0x7afb4eb9db5ae531
   140012afe:	(bad)  
   140012aff:	rex.R jmp 0x1671c8714
   140012b05:	(bad)  
   140012b06:	rex.WR test BYTE PTR [rax+0x48],r9b
   140012b0a:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012b0c:	cmp    edx,ebx
   140012b0e:	(bad)  
   140012b0f:	rex
   140012b10:	xor    eax,DWORD PTR gs:[rdx-0x66a500b7]
   140012b17:	out    dx,al
   140012b18:	jp     0x140012b14
   140012b1a:	shl    BYTE PTR [rdi-0xe1f819],1
   140012b20:	repz or al,0x68
   140012b23:	stos   BYTE PTR es:[rdi],al
   140012b24:	mov    cl,0xe1
   140012b26:	mov    eax,es
   140012b28:	lock sar DWORD PTR [rbp+0x6b],1
   140012b2c:	adc    esi,DWORD PTR [rbp+0x4ad25f11]
   140012b32:	fld    TBYTE PTR [rax+0x44]
   140012b35:	(bad)  
   140012b36:	scas   al,BYTE PTR es:[rdi]
   140012b37:	lock adc BYTE PTR [rdi+0x6f],bl
   140012b3b:	leave  
   140012b3c:	mov    al,0xf5
   140012b3e:	xchg   edi,eax
   140012b3f:	out    dx,eax
   140012b40:	mov    cl,0xf2
   140012b42:	loopne 0x140012b4b
   140012b44:	enter  0xc314,0x44
   140012b48:	mov    DWORD PTR [rbp-0x11],ebx
   140012b4b:	test   al,0xf8
   140012b4d:	cmp    rax,QWORD PTR [r13-0xbce2fd1]
   140012b54:	mov    edi,0x86dbefbd
   140012b59:	cwde   
   140012b5a:	mov    esi,0xc44f9b6f
   140012b5f:	jno    0x140012bae
   140012b61:	scas   al,BYTE PTR es:[rdi]
   140012b62:	push   rbp
   140012b63:	sbb    eax,DWORD PTR [rdx-0x6c]
   140012b66:	clc    
   140012b67:	xor    al,0x41
   140012b69:	ins    DWORD PTR es:[rdi],dx
   140012b6a:	pop    rbp
   140012b6b:	sub    al,0x30
   140012b6d:	mov    cl,0x56
   140012b6f:	jmp    0x140012ba1
   140012b71:	ss (bad) 
   140012b73:	(bad)  
   140012b74:	ins    BYTE PTR es:[rdi],dx
   140012b75:	repnz push rdx
   140012b77:	mov    ebx,0xa7d0bb7d
   140012b7c:	bnd ja 0x140012bfe
   140012b7f:	test   al,0x54
   140012b81:	nop
   140012b82:	stc    
   140012b83:	(bad)  
   140012b85:	jrcxz  0x140012be2
   140012b87:	mov    ch,0x89
   140012b89:	rex.B retf 0xf9ce
   140012b8d:	(bad)  
   140012b8e:	(bad)  
   140012b90:	(bad)  
   140012b91:	rex.WB
   140012b92:	sar    DWORD PTR es:[rdx-0x4b],1
   140012b96:	xlat   BYTE PTR ds:[rbx]
   140012b97:	out    0x46,eax
   140012b99:	fisubr DWORD PTR [rdx+0x17]
   140012b9c:	xor    BYTE PTR [rcx+0x48],bl
   140012b9f:	push   0x42fc0cbb
   140012ba4:	movsxd esi,esp
   140012ba6:	imul   esi,DWORD PTR [rbp+rbp*1+0x4c],0x163f9080
   140012bae:	rex.WR or BYTE PTR [rdx+0x1b],0x98
   140012bb3:	cmp    al,0xb2
   140012bb5:	mov    eax,eax
   140012bb7:	jns    0x140012c28
   140012bb9:	icebp  
   140012bba:	ret    
   140012bbb:	rex.WR rcl BYTE PTR [rdi+0x5f],0xf9
   140012bc0:	and    eax,DWORD PTR [rbp+0x35]
   140012bc3:	(bad)  
   140012bc4:	pop    rbx
   140012bc5:	adc    bh,BYTE PTR [rsi-0x3e]
   140012bc8:	xchg   DWORD PTR [rax],edx
   140012bca:	or     DWORD PTR [rbx+0x0],eax
   140012bcd:	mov    esi,0xa73f90aa
   140012bd2:	vunpckhps ymm14,ymm15,YMMWORD PTR [rax-0x4c]
   140012bd7:	xchg   ecx,esp
   140012bd9:	push   rbp
   140012bda:	sbb    cl,BYTE PTR [rbx]
   140012bdc:	jb     0x140012bc4
   140012bde:	adc    DWORD PTR [rbp+rdi*4+0x7eac47e7],ebp
   140012be5:	out    dx,al
   140012be6:	jge    0x140012b6e
   140012be8:	mov    dl,BYTE PTR [rcx]
   140012bea:	sbb    eax,0xffffffdd
   140012bed:	fidiv  DWORD PTR [rbx]
   140012bef:	mov    ah,BYTE PTR ds:[rcx]
   140012bf2:	je     0x140012ba8
   140012bf4:	or     DWORD PTR [rsi+rsi*1-0x4bde1c60],ecx
   140012bfb:	sub    al,0x10
   140012bfd:	push   rdx
   140012bfe:	jnp    0x140012c6b
   140012c00:	movabs ds:0xc686ae0d88c0fdbc,eax
   140012c09:	add    al,0xa0
   140012c0b:	xchg   ecx,eax
   140012c0c:	int    0xd7
   140012c0e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012c0f:	sub    edi,DWORD PTR [rbx+0x40a1093e]
   140012c15:	js     0x140012bde
   140012c17:	imul   edi,ebp,0x7f2dec89
   140012c1d:	mov    ebp,0xd72187d0
   140012c22:	push   rdx
   140012c23:	xor    DWORD PTR [rax-0x3],edi
   140012c26:	fisttp DWORD PTR [rax]
   140012c28:	push   rax
   140012c29:	jl     0x140012c1c
   140012c2b:	call   0xf5416921
   140012c30:	adc    al,BYTE PTR [rcx-0x62db32d]
   140012c36:	(bad)
   140012c39:	jge    0x140012c5c
   140012c3b:	mov    ah,0xaa
   140012c3d:	push   QWORD PTR [rbp*1+0xafbff12]
   140012c44:	(bad)  
   140012c45:	(bad)  
   140012c46:	fidiv  DWORD PTR [rbx+0x5c]
   140012c49:	jle    0x140012c3e
   140012c4b:	(bad)  
   140012c4c:	sbb    DWORD PTR [rdi-0x18],0xffffffd2
   140012c50:	(bad)  
   140012c51:	mov    eax,0x89404efa
   140012c56:	ds push rax
   140012c58:	adc    BYTE PTR [rdx+rcx*2],0x55
   140012c5c:	mov    dh,0x2a
   140012c5e:	ficomp DWORD PTR [rdx+0x40]
   140012c61:	xchg   ebx,eax
   140012c62:	imul   DWORD PTR [rcx+rcx*2-0x70d8d5d1]
   140012c69:	xchg   ebp,eax
   140012c6a:	mov    ebp,0xdecf5b95
   140012c6f:	repnz xchg esi,eax
   140012c71:	jl     0x140012c72
   140012c73:	xor    DWORD PTR [rdi-0x5adec7fb],esp
   140012c79:	or     eax,0xd2ac5e27
   140012c7e:	(bad)  
   140012c7f:	(bad)  
   140012c80:	add    DWORD PTR [rdx+0x7b6da579],ebp
   140012c86:	push   rsp
   140012c87:	fcmovb st,st(3)
   140012c89:	mov    ecx,0xf2fd9a47
   140012c8e:	jne    0x140012ca6
   140012c90:	cli    
   140012c91:	cmp    bl,BYTE PTR [rdx-0x39]
   140012c94:	(bad)  
   140012c95:	cmp    eax,0x43d25ebf
   140012c9a:	(bad)  
   140012c9b:	rex.WX or al,0x91
   140012c9e:	rex.B test al,0x2b
   140012ca1:	pop    rcx
   140012ca2:	gs icebp 
   140012ca4:	adc    eax,0x9f9ec66e
   140012ca9:	movabs ds:0x9a00335a96e496ef,eax
   140012cb2:	or     eax,0xdf4bdad4
   140012cb7:	jge    0x140012c7c
   140012cb9:	cli    
   140012cba:	addr32 popf 
   140012cbc:	adc    eax,0xb0d7dad9
   140012cc1:	fwait
   140012cc2:	mov    edx,0xbc0ab181
   140012cc7:	clc    
   140012cc8:	call   FWORD PTR [rbx]
   140012cca:	ds add eax,0xdd7d6d7f
   140012cd0:	cmp    ecx,DWORD PTR [rdx+0x4a]
   140012cd3:	xor    esi,ebx
   140012cd5:	in     eax,0xc7
   140012cd7:	rex.WRXB or rax,0x6d0c6d2f
   140012cdd:	jne    0x140012d53
   140012cdf:	(bad)  
   140012ce0:	(bad)  
   140012ce1:	hlt    
   140012ce2:	out    0x6d,al
   140012ce4:	mov    dh,0xb4
   140012ce6:	pop    rsp
   140012ce7:	xchg   edx,eax
   140012ce8:	rex.WB add rax,0xffffffffcbedbcd1
   140012cee:	loopne 0x140012cc1
   140012cf0:	mov    bl,0xa2
   140012cf2:	xor    rsp,QWORD PTR [r10+0x713027db]
   140012cf9:	fimul  WORD PTR [rbx]
   140012cfb:	(bad)  
   140012cfc:	iret   
   140012cfd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012cfe:	rcl    ch,cl
   140012d00:	(bad)  
   140012d01:	add    BYTE PTR [rax],bh
   140012d03:	mov    edx,0x3a6fc567
   140012d08:	adc    eax,0x40ce9b5a
   140012d0d:	add    eax,0xf83a790
   140012d12:	xor    eax,DWORD PTR [rcx]
   140012d14:	(bad)  
   140012d15:	mov    ebp,0xc1145ffa
   140012d1a:	xor    DWORD PTR [rip+0x547554a4],edx        # 0x1947681c4
   140012d20:	loopne 0x140012cad
   140012d22:	or     BYTE PTR [rdx+rbx*2],cl
   140012d25:	xchg   ecx,eax
   140012d26:	scas   al,BYTE PTR es:[rdi]
   140012d27:	pop    rdx
   140012d28:	and    al,BYTE PTR [rsi-0x4b7b6e61]
   140012d2e:	pop    rbx
   140012d2f:	stos   DWORD PTR es:[rdi],eax
   140012d30:	sbb    eax,0x26bf2175
   140012d35:	in     eax,dx
   140012d36:	je     0x140012d62
   140012d38:	in     eax,0x8f
   140012d3a:	jg     0x140012d9a
   140012d3c:	(bad)  
   140012d3d:	push   rbx
   140012d3f:	jg     0x140012dac
   140012d41:	icebp  
   140012d42:	loopne 0x140012ccb
   140012d44:	pushf  
   140012d45:	mov    edx,0x5404481f
   140012d4a:	(bad)  
   140012d4b:	(bad)  
   140012d4c:	(bad)  
   140012d4d:	fistp  QWORD PTR [rdx+0x237b43e4]
   140012d53:	(bad)  
   140012d54:	jrcxz  0x140012d0d
   140012d56:	mov    dh,0x7e
   140012d58:	rol    BYTE PTR [rsi-0x42],0x43
   140012d5c:	call   0x14f8b0e0d
   140012d61:	or     esp,DWORD PTR [rdi-0x624302a]
   140012d67:	pop    rax
   140012d68:	icebp  
   140012d69:	neg    BYTE PTR [rax]
   140012d6b:	rex.RXB add r8b,r14b
   140012d6e:	(bad)  
   140012d6f:	jmp    0xf4213f48
   140012d74:	xlat   BYTE PTR ds:[rbx]
   140012d75:	push   0xffffffffea02f50c
   140012d7a:	(bad)  
   140012d7b:	movabs ds:0x9fe3e280a5df0ff7,al
   140012d84:	(bad)  
   140012d85:	cmp    cl,BYTE PTR [rdi+rsi*4]
   140012d88:	jae    0x140012d2b
   140012d8a:	mov    edi,0xc5f9b24c
   140012d8f:	and    ch,cl
   140012d91:	iret   
   140012d92:	pop    rcx
   140012d93:	push   rax
   140012d94:	stos   DWORD PTR es:[rdi],eax
   140012d95:	ds rex.WB
   140012d97:	rex.RXB cmp r12d,DWORD PTR [r13+0x3b]
   140012d9b:	rex.XB mov r13b,0xc2
   140012d9e:	mov    dl,0xaf
   140012da0:	xchg   ecx,eax
   140012da1:	xor    DWORD PTR [rbp-0xe],0xffffffe7
   140012da5:	jbe    0x140012d68
   140012da7:	jrcxz  0x140012e23
   140012da9:	movabs ds:0x6ffbfa4aa406106b,eax
   140012db2:	(bad)  
   140012db3:	rex.B stos BYTE PTR es:[rdi],al
   140012db5:	jge    0x140012d7f
   140012db7:	xchg   edi,eax
   140012db8:	(bad)  
   140012db9:	add    al,BYTE PTR [rsi+0x66]
   140012dbc:	jo     0x140012e2a
   140012dbe:	rex.WRX
   140012dbf:	rex.RX (bad) 
   140012dc1:	(bad)  
   140012dc3:	repnz lods eax,DWORD PTR ds:[rsi]
   140012dc5:	addr32 pop rsi
   140012dc7:	hlt    
   140012dc8:	(bad)  
   140012dc9:	(bad)  
   140012dca:	fbld   TBYTE PTR [rbx-0x1cfcb011]
   140012dd0:	and    ch,BYTE PTR [rax+0x420f54b7]
   140012dd6:	(bad)  
   140012dd7:	push   rax
   140012dd8:	fnstsw WORD PTR [rcx-0x71244073]
   140012dde:	mov    edi,0xdce60bfa
   140012de3:	movabs ds:0xb6be0c31b5cb5759,eax
   140012dec:	rex.B cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012dee:	movabs ds:0xec7a5a2ff9fe6c75,eax
   140012df7:	pop    rsi
   140012df8:	movsxd eax,DWORD PTR [rax]
   140012dfa:	movabs al,ds:0xcab85b7849d5f5b2
   140012e03:	cmp    al,0xe3
   140012e05:	and    DWORD PTR [rdx+rcx*1-0x41],edx
   140012e09:	mov    ebp,0xafd319
   140012e0e:	xor    dl,cl
   140012e10:	jrcxz  0x140012e81
   140012e12:	push   0x3e
   140012e14:	sbb    eax,0x1ce88d9e
   140012e19:	ja     0x140012e1d
   140012e1b:	push   0x30
   140012e1d:	(bad)  
   140012e1e:	out    0xf9,al
   140012e20:	xor    eax,0x81bed670
   140012e25:	loopne 0x140012e8c
   140012e27:	cdq    
   140012e28:	mov    dh,0x6c
   140012e2a:	ja     0x140012ea9
   140012e2c:	lods   al,BYTE PTR ds:[rsi]
   140012e2d:	add    ch,BYTE PTR [rdi+0x326567ff]
   140012e33:	pop    rax
   140012e34:	movabs rsi,0x6b0e6d2e8d4ec74
   140012e3e:	push   rbp
   140012e3f:	movsxd esi,DWORD PTR [rcx+rbp*8]
   140012e42:	int    0xd9
   140012e44:	ins    BYTE PTR es:[rdi],dx
   140012e45:	imul   edi,DWORD PTR [rcx-0x96cdb1c],0xefae85f4
   140012e4f:	addr32 rex.WXB iretq 
   140012e52:	push   rbp
   140012e53:	cli    
   140012e54:	ja     0x140012df3
   140012e56:	mov    edi,0x27d71dbd
   140012e5b:	pop    rbp
   140012e5c:	mov    bl,0x84
   140012e5e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012e5f:	fisubr DWORD PTR [rdx]
   140012e61:	add    eax,0x3d55d440
   140012e66:	mov    dl,0x71
   140012e68:	fs cmp al,0x20
   140012e6b:	rex.RX
   140012e6c:	data16 lock (bad) 
   140012e6f:	es ret 0x7713
   140012e73:	dec    ebx
   140012e75:	pop    rsp
   140012e76:	mov    dl,0x79
   140012e78:	jg     0x140012e03
   140012e7a:	(bad)  
   140012e7b:	mov    ecx,0xb1b50ac3
   140012e80:	out    0x3f,eax
   140012e82:	mov    dh,0xef
   140012e84:	popf   
   140012e85:	ficom  DWORD PTR [rcx-0x23]
   140012e88:	(bad)  [rbx+0x0]
   140012e8b:	and    DWORD PTR [rax+rbp*4-0x373c8740],esp
   140012e92:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012e93:	xor    edx,DWORD PTR [rbx+0x1996994d]
   140012e99:	imul   DWORD PTR [rcx+rbp*1]
   140012e9c:	push   rdx
   140012e9e:	cmp    eax,0xef2bf9b2
   140012ea3:	adc    al,0x7a
   140012ea5:	hlt    
   140012ea6:	pop    rsi
   140012ea7:	mov    bh,0xc0
   140012ea9:	xor    al,0xf9
   140012eab:	(bad)  
   140012eac:	jl     0x140012ed0
   140012eae:	rex.WRX int 0x1f
   140012eb1:	scas   al,BYTE PTR es:[rdi]
   140012eb2:	rex.B (bad) 
   140012eb4:	cs mov eax,0xe2413d0a
   140012eba:	(bad)  
   140012ebb:	out    0x6f,al
   140012ebd:	rex.WB
   140012ebe:	repz push 0xffffffffffffffca
   140012ec1:	outs   dx,BYTE PTR ds:[rsi]
   140012ec2:	xchg   ebp,eax
   140012ec3:	repnz pop rsp
   140012ec5:	ja     0x140012f22
   140012ec7:	gs mov edi,0xfd7524b7
   140012ecd:	shr    BYTE PTR [rax+0x1534082d],1
   140012ed3:	mov    DWORD PTR [rax+0x4c],esi
   140012ed6:	and    eax,0xa893abe9
   140012edb:	rol    DWORD PTR [rsi],1
   140012edd:	or     eax,0x175505b9
   140012ee2:	jns    0x140012e91
   140012ee4:	movabs ds:0xcdfc4fff4bcc88bf,eax
   140012eed:	and    ebx,DWORD PTR [rbx+0x4d499b75]
   140012ef3:	xchg   edx,eax
   140012ef4:	rex.WX mov sil,0xb0
   140012ef7:	in     al,0xa4
   140012ef9:	(bad)  
   140012efa:	sbb    ebp,DWORD PTR [rbp-0x80]
   140012efd:	imul   eax,DWORD PTR [rdi-0x16d24d3e],0xad4e9d5f
   140012f07:	mov    edi,0x22ba0f3b
   140012f0c:	xor    eax,0x502fc57c
   140012f11:	jmp    0xcccc8b25
   140012f16:	(bad)  
   140012f17:	or     ch,dh
   140012f19:	rex.RB xchg r13d,eax
   140012f1b:	or     ecx,0x80bc6e8e
   140012f21:	push   0xffffffffff716f0c
   140012f26:	pop    rax
   140012f27:	rex.B leave 
   140012f29:	out    0x24,eax
   140012f2b:	pop    rbx
   140012f2c:	(bad)  
   140012f2d:	popf   
   140012f2e:	jl     0x140012f09
   140012f30:	jl     0xdfd4c461
   140012f36:	(bad)  
   140012f37:	lock jg 0x140012f7f
   140012f3a:	rcr    BYTE PTR [rdi],cl
   140012f3c:	in     eax,dx
   140012f3d:	jmp    0x140012f95
   140012f3f:	out    dx,al
   140012f40:	enter  0x14a6,0x5
   140012f44:	and    dl,0xa1
   140012f47:	(bad)  
   140012f48:	rex.WR (bad) 
   140012f4a:	add    DWORD PTR [rbp-0x61630f63],edx
   140012f50:	sbb    BYTE PTR [rdx-0x17],dh
   140012f53:	xor    al,0xd6
   140012f55:	jg     0x140012f4a
   140012f57:	pop    rdi
   140012f58:	fnclex 
   140012f5a:	rex.WRXB jg 0x140012efb
   140012f5d:	adc    DWORD PTR [rbx-0x730f1231],0x3f
   140012f64:	jbe    0x140012f50
   140012f66:	jle    0x140012f90
   140012f68:	int    0xe5
   140012f6a:	(bad)  
   140012f6b:	fnsave [rbx+0xbaf9b2e]
   140012f71:	jl     0x140012f75
   140012f73:	or     BYTE PTR [rax-0x4d],ch
   140012f76:	jg     0x140012fda
   140012f78:	out    0x4,al
   140012f7a:	mov    esp,0x3b6b1479
   140012f7f:	(bad)  
   140012f81:	sub    eax,DWORD PTR [rcx+0x5b]
   140012f84:	imul   ecx,DWORD PTR [rdx-0x6efd4610],0x66
   140012f8b:	(bad)
   140012f8f:	lea    ebx,[rbx+rdi*4+0x4]
   140012f93:	add    bh,ch
   140012f95:	xor    DWORD PTR [rdi+0x79],0xffffffe9
   140012f99:	jg     0x140013015
   140012f9b:	js     0x140013006
   140012f9d:	(bad)  
   140012f9e:	push   rbp
   140012f9f:	(bad)  
   140012fa0:	push   rbp
   140012fa1:	jb     0x140012f59
   140012fa3:	jg     0x140012f77
   140012fa5:	pop    rdi
   140012fa6:	mov    al,0xd9
   140012fa8:	fcom   QWORD PTR [rdx+0x49]
   140012fab:	rex.WB cmp spl,BYTE PTR [r9]
   140012fae:	std    
   140012faf:	mov    ch,0x75
   140012fb1:	frstor [rdi-0x3d]
   140012fb4:	cld    
   140012fb5:	ins    DWORD PTR es:[rdi],dx
   140012fb6:	rex.WRB scas al,BYTE PTR es:[rdi]
   140012fb8:	xchg   ebx,eax
   140012fb9:	and    DWORD PTR [rdi+0x367c17d4],0xd1217fd7
   140012fc3:	push   rbp
   140012fc4:	add    DWORD PTR [rax-0x79948137],eax
   140012fca:	jnp    0x140012ff6
   140012fcc:	mov    ecx,0x560ecdb5
   140012fd1:	add    bl,ch
   140012fd3:	cmp    al,0xf8
   140012fd5:	xor    BYTE PTR [rcx],dl
   140012fd7:	rex.RX out 0xee,eax
   140012fda:	jl     0x140013017
   140012fdc:	mov    al,BYTE PTR [rbp-0x88b4a83]
   140012fe2:	and    esi,DWORD PTR [rbx]
   140012fe4:	out    0xd5,al
   140012fe6:	leave  
   140012fe7:	or     al,0xc0
   140012fe9:	pop    rdx
   140012fea:	push   0x35
   140012fec:	push   0xffffffffffffffdb
   140012fee:	push   rbp
   140012fef:	push   0x2e
   140012ff1:	(bad)  
   140012ff2:	cld    
   140012ff3:	mov    ecx,0x950e6e3f
   140012ff8:	(bad)  
   140012ff9:	(bad)  
   140012ffa:	sub    eax,0xb49b7c35
   140012fff:	cmc    
   140013000:	test   eax,0xbf9bb3df
   140013005:	icebp  
   140013006:	scas   eax,DWORD PTR es:[rdi]
   140013007:	test   BYTE PTR [rdi-0x6c62b82],bl
   14001300d:	or     dh,bl
   14001300f:	mov    ebx,0x2de3025f
   140013014:	(bad)  
   140013015:	imul   esp,DWORD PTR [rdi-0x15],0xe5bc7412
   14001301c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001301d:	mov    esi,0xb5fbf954
   140013022:	xlat   BYTE PTR ds:[rbx]
   140013023:	mov    esi,0xb9277d29
   140013028:	mov    al,0xd9
   14001302a:	(bad)  
   14001302b:	cmp    bh,BYTE PTR [rdi]
   14001302d:	movabs ds:0x95010035d10aa73e,al
   140013036:	mov    ah,0x7
   140013038:	mov    esp,0x69943ef7
   14001303d:	mov    DWORD PTR [rbp+0x35658a07],esi
   140013043:	rex.RB out 0x51,eax
   140013046:	adc    esi,DWORD PTR [rax+0x56]
   140013049:	outs   dx,BYTE PTR ds:[rsi]
   14001304a:	rex imul BYTE PTR [rbp+0x6f]
   14001304e:	(bad)  
   14001304f:	test   al,0xe2
   140013051:	movsxd ebx,DWORD PTR [rdi-0x87bc5c1]
   140013057:	or     eax,0xda4d4880
   14001305c:	xchg   ebx,eax
   14001305d:	ins    BYTE PTR es:[rdi],dx
   14001305e:	jno    0x140013019
   140013060:	xor    BYTE PTR [rbx-0x2da569f5],cl
   140013066:	mov    edi,0x2b3ca8ad
   14001306b:	out    0x8f,al
   14001306d:	test   eax,0xead136c3
   140013072:	mov    edi,0x18bdbf2b
   140013077:	test   BYTE PTR [rsi+0xa17a509],ah
   14001307d:	pop    rbp
   14001307e:	ins    DWORD PTR es:[rdi],dx
   14001307f:	or     eax,0xb53dc340
   140013084:	xor    eax,0x1d4af377
   140013089:	(bad)  
   14001308b:	add    al,BYTE PTR [rsi+0x48]
   14001308e:	cs (bad) 
   140013090:	xchg   ecx,eax
   140013091:	(bad)  
   140013092:	adc    eax,0xfa3c924c
   140013097:	ins    DWORD PTR es:[rdi],dx
   140013098:	(bad)  
   140013099:	xchg   ebp,eax
   14001309a:	add    ebx,ebp
   14001309c:	xchg   ecx,eax
   14001309d:	(bad)  
   14001309e:	rex.R push rdx
   1400130a0:	fdivp  st(5),st
   1400130a2:	sbb    DWORD PTR [rdx+rbx*1+0x504dc426],esp
   1400130a9:	movabs ds:0xe27da9abf67c1555,eax
   1400130b2:	(bad)  
   1400130b3:	push   rsi
   1400130b4:	jmp    0x1400130f9
   1400130b6:	fidivr WORD PTR [rbp+0x5b]
   1400130b9:	rex.WRX
   1400130ba:	rex.WRB (bad) 
   1400130bc:	cmp    ebp,edi
   1400130be:	or     BYTE PTR [rsi+0x7f],dl
   1400130c1:	repz pop rbp
   1400130c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400130c4:	jle    0x1400130c0
   1400130c6:	mov    bh,0xc
   1400130c8:	xchg   edi,eax
   1400130c9:	rex.XB push r15
   1400130cb:	retf   
   1400130cc:	es test dh,ch
   1400130cf:	rex.X and esi,ecx
   1400130d2:	lods   eax,DWORD PTR ds:[rsi]
   1400130d3:	mov    edx,DWORD PTR [rax-0x1cb0451f]
   1400130d9:	adc    eax,0x375d3550
   1400130de:	rex.X mov cl,0x98
   1400130e1:	jmp    0x1703609c7
   1400130e6:	je     0x140013123
   1400130e8:	xchg   esp,eax
   1400130e9:	xlat   BYTE PTR ds:[rbx]
   1400130ea:	lock add eax,DWORD PTR [rdx+rdi*8-0x3a47ea04]
   1400130f2:	xchg   edi,eax
   1400130f3:	(bad)  
   1400130f4:	cli    
   1400130f5:	pop    rdx
   1400130f6:	push   rcx
   1400130f7:	pop    rdi
   1400130f8:	test   edx,edi
   1400130fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400130fb:	(bad)  
   1400130fc:	cmp    esi,DWORD PTR [rdx+0x3218a7aa]
   140013102:	add    ecx,edx
   140013104:	(bad)  
   140013105:	xchg   esi,eax
   140013106:	rex.X mov DWORD PTR es:[rdi],edi
   14001310a:	lock out dx,al
   14001310c:	shl    BYTE PTR [rcx+rbp*1],cl
   14001310f:	(bad)  
   140013111:	lock mov cl,0x8d
   140013114:	mov    ch,0xcd
   140013116:	movabs eax,ds:0xdcc92a49ca81d9f5
   14001311f:	push   rdx
   140013120:	cdq    
   140013121:	in     eax,dx
   140013122:	fcomp  DWORD PTR [rcx+0x70]
   140013125:	xchg   edx,eax
   140013126:	xor    eax,0x12b8fe16
   14001312b:	lods   al,BYTE PTR ds:[rsi]
   14001312c:	outs   dx,BYTE PTR ds:[rsi]
   14001312d:	rex.WXB jp 0x140013177
   140013130:	out    dx,al
   140013131:	xchg   DWORD PTR [rdx+0x1c],edi
   140013134:	rex.RB push r9
   140013136:	mov    gs,WORD PTR [rbp+0x72]
   140013139:	outs   dx,DWORD PTR ds:[rsi]
   14001313a:	fnstsw WORD PTR [rbp-0x7c]
   14001313d:	sub    bh,BYTE PTR [rcx]
   14001313f:	jmp    0xdefaf7c9
   140013144:	scas   al,BYTE PTR es:[rdi]
   140013145:	sbb    al,BYTE PTR [rax]
   140013147:	test   cl,dh
   140013149:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001314a:	pop    rbp
   14001314b:	scas   eax,DWORD PTR es:[rdi]
   14001314c:	mov    cl,0x51
   14001314e:	mov    edx,0x3cd7fb77
   140013153:	movsxd eax,DWORD PTR [rdi]
   140013155:	(bad)  
   140013156:	adc    esi,eax
   140013158:	cli    
   140013159:	call   0x1a793dd2e
   14001315e:	outs   dx,BYTE PTR ds:[rsi]
   14001315f:	dec    dh
   140013161:	rex.RX sub DWORD PTR [rdi],r15d
   140013164:	cmc    
   140013165:	cmc    
   140013166:	jmp    0x140013143
   140013168:	xor    DWORD PTR [rdi+0x3f],ebp
   14001316b:	(bad)  
   14001316c:	(bad)  
   14001316d:	imul   eax,DWORD PTR [rsi],0xffffffb5
   140013170:	imul   rbp,QWORD PTR [rbx-0xe4fff50],0xffffffffffffffc1
   140013178:	pop    rdi
   140013179:	mov    ch,BYTE PTR [rbx-0x2a]
   14001317c:	test   DWORD PTR [rbx],eax
   14001317e:	add    DWORD PTR [rbp-0x39189525],esi
   140013184:	rex.RXB (bad) 
   140013186:	jae    0x1400131c1
   140013188:	jl     0x140013179
   14001318a:	(bad)  
   14001318b:	and    bh,BYTE PTR [rcx]
   14001318d:	test   DWORD PTR [rax+0x52],0x3108c815
   140013194:	std    
   140013195:	icebp  
   140013196:	(bad)  
   140013197:	je     0x14001317c
   140013199:	and    dh,BYTE PTR [rbx+rsi*2+0x15]
   14001319d:	(bad)  
   14001319e:	pop    QWORD PTR [rcx-0x3f]
   1400131a1:	(bad)  
   1400131a2:	outs   dx,DWORD PTR ds:[rsi]
   1400131a3:	cmp    al,0x4
   1400131a5:	adc    BYTE PTR [rsi],ah
   1400131a7:	rex.WX push rsp
   1400131a9:	rex.WR sbb r11b,BYTE PTR [rdi+rdi*8-0x2e907de6]
   1400131b1:	xor    ebp,DWORD PTR [rdx-0x15]
   1400131b4:	hlt    
   1400131b5:	movabs ds:0xd26845ff88dfe09,rax
   1400131bf:	xchg   BYTE PTR [rsi+0x64],al
   1400131c2:	(bad)  
   1400131c3:	mov    ecx,0xcc6ea47e
   1400131c8:	mov    esp,DWORD PTR [rdi+rdi*2+0x792f1bf8]
   1400131cf:	mov    ebp,0x9be8bdcc
   1400131d4:	int    0xda
   1400131d6:	out    0xd0,al
   1400131d8:	fdivrp st(7),st
   1400131da:	loopne 0x14001318d
   1400131dc:	xchg   ecx,eax
   1400131dd:	(bad)  
   1400131de:	adc    DWORD PTR [rip+0xffffffff93d64c33],eax        # 0xd3d77e17
   1400131e4:	fdivrp st(2),st
   1400131e6:	mov    ?,WORD PTR [rcx+rcx*8]
   1400131e9:	cli    
   1400131ea:	xor    BYTE PTR ss:[rdi-0x78],bh
   1400131ee:	or     DWORD PTR [rdi-0xb494bb3],esi
   1400131f4:	(bad)  
   1400131f6:	mov    al,0x68
   1400131f8:	rex.W clc 
   1400131fa:	out    dx,al
   1400131fb:	and    ebp,esi
   1400131fd:	pushf  
   1400131fe:	clc    
   1400131ff:	mov    eax,0xbb4c39a5
   140013204:	(bad)  
   140013205:	data16 outs dx,BYTE PTR ds:[rsi]
   140013207:	icebp  
   140013208:	xchg   ebp,eax
   140013209:	xor    ebx,DWORD PTR [rbx+0x2dcb9f27]
   14001320f:	scas   al,BYTE PTR es:[rdi]
   140013210:	adc    eax,0x8d59d35d
   140013215:	movabs eax,ds:0xf9a3b6a803ed73ee
   14001321e:	ja     0x1400131d4
   140013220:	mov    ebp,0x1a9e6c25
   140013225:	and    eax,0x2700671f
   14001322a:	fdivp  st(0),st
   14001322c:	push   rbx
   14001322d:	nop
   14001322e:	(bad)  
   14001322f:	cmp    DWORD PTR [rdi+riz*1],eax
   140013232:	xchg   esi,eax
   140013233:	add    edx,DWORD PTR [rbx+0x2d620a66]
   140013239:	cmp    eax,0x6122ae15
   14001323e:	cmp    eax,0xb5382581
   140013243:	or     BYTE PTR [rbx+rsi*8],al
   140013246:	in     al,0x17
   140013248:	shl    cl,cl
   14001324a:	pop    rdi
   14001324b:	cld    
   14001324c:	jb     0x140013241
   14001324e:	jge    0x1400131d7
   140013250:	fdivr  DWORD PTR [rdx+rbx*2-0x9f5e4b4]
   140013257:	icebp  
   140013258:	iret   
   140013259:	(bad)  
   14001325a:	cmc    
   14001325b:	xlat   BYTE PTR ds:[rbx]
   14001325c:	jle    0x140013236
   14001325e:	shl    bh,cl
   140013260:	ficom  WORD PTR [rdi+0x549f3b04]
   140013266:	popf   
   140013267:	mov    edx,0xa5d0f9f
   14001326c:	out    dx,eax
   14001326d:	(bad)  
   14001326e:	and    eax,0xf5a6d0b7
   140013273:	leave  
   140013274:	cmp    al,0x41
   140013276:	(bad)  
   140013277:	(bad)  
   140013278:	imul   edx,DWORD PTR [rdx-0x68],0x1bd65874
   14001327f:	(bad)  
   140013280:	cmp    ebp,DWORD PTR [rax-0x452c3b1f]
   140013286:	(bad)  
   140013287:	sbb    esi,ebp
   140013289:	adc    ah,BYTE PTR [rdx-0x3b]
   14001328c:	and    bh,BYTE PTR [rdx-0x2a]
   14001328f:	jo     0x140013212
   140013291:	rcl    al,0x84
   140013294:	data16 lahf 
   140013296:	rex.R popf 
   140013298:	(bad)  
   140013299:	sub    DWORD PTR [rbp-0x37],ecx
   14001329c:	(bad)  
   14001329d:	fistp  WORD PTR [rdi+0x44]
   1400132a0:	out    dx,eax
   1400132a1:	popf   
   1400132a2:	inc    DWORD PTR [rdi-0x10ebd8]
   1400132a8:	(bad)  
   1400132a9:	sub    ebx,0xffffffa3
   1400132ac:	mov    esp,0x304ab8f0
   1400132b1:	imul   ecx,DWORD PTR [rdi+0x7a],0xdef2bb4b
   1400132b8:	repnz rex.WX ror QWORD PTR [rcx+0x2a],0x8e
   1400132be:	leave  
   1400132bf:	sbb    ecx,ebp
   1400132c1:	(bad)  
   1400132c2:	cs ffreep st(1)
   1400132c5:	cld    
   1400132c6:	fneni(8087 only) 
   1400132c8:	fmul   QWORD PTR [rcx+0x7c]
   1400132cb:	movabs ds:0x510cfcba673f33e6,al
   1400132d4:	push   rcx
   1400132d5:	loopne 0x1400132b3
   1400132d7:	rex.RX mov ?,WORD PTR [rbx-0x7a39c695]
   1400132de:	pop    rsp
   1400132df:	outs   dx,BYTE PTR ds:[rsi]
   1400132e0:	imul   eax,ecx,0x555d1de7
   1400132e6:	add    al,dl
   1400132e8:	(bad)  
   1400132e9:	pop    rbp
   1400132ea:	push   0xffffffffffffffad
   1400132ec:	gs rex.WRB (bad) 
   1400132ef:	rcl    DWORD PTR [rdx-0x1f],cl
   1400132f2:	sar    dl,1
   1400132f4:	outs   dx,BYTE PTR ds:[rsi]
   1400132f5:	(bad)  
   1400132f6:	shl    BYTE PTR [rbx],0x5
   1400132f9:	lahf   
   1400132fa:	cmp    DWORD PTR [rbx],esi
   1400132fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400132fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400132fe:	xchg   ebx,eax
   1400132ff:	and    al,0xa3
   140013301:	(bad)  
   140013302:	fdivp  st(4),st
   140013304:	outs   dx,BYTE PTR ds:[rsi]
   140013305:	add    BYTE PTR [rbp-0x64bab52d],dh
   14001330b:	(bad)  
   14001330c:	xor    ch,bh
   14001330e:	(bad)
   140013312:	imul   ebx,DWORD PTR [rbx-0x4c],0xe13332f9
   140013319:	cmp    al,0x7b
   14001331b:	iret   
   14001331c:	scas   eax,DWORD PTR es:[rdi]
   14001331d:	shr    al,cl
   14001331f:	(bad)  
   140013320:	(bad)  
   140013321:	cdq    
   140013322:	add    al,0x1
   140013324:	pop    rbx
   140013325:	rex.WRX test bpl,r12b
   140013328:	in     al,0xe2
   14001332a:	imul   ebp,DWORD PTR [rdi+rdi*4-0x2e359811],0x916ffbff
   140013335:	pop    rsp
   140013336:	cmp    ch,BYTE PTR [rcx-0x3e]
   140013339:	je     0x140013398
   14001333b:	xchg   edi,eax
   14001333c:	enter  0xe5b3,0xd5
   140013340:	std    
   140013341:	xor    eax,0x920d70e8
   140013346:	(bad)  
   140013347:	pop    rsp
   140013348:	mov    ch,0x1e
   14001334a:	xchg   ecx,eax
   14001334b:	jp     0x140013317
   14001334d:	out    dx,al
   14001334e:	and    al,0x27
   140013350:	and    BYTE PTR [rax],cl
   140013352:	(bad)  
   140013353:	(bad)  
   140013354:	add    BYTE PTR [rbp-0x5b6ac1b7],0xd7
   14001335b:	(bad)  
   14001335c:	rcl    edi,cl
   14001335e:	push   rbp
   14001335f:	lea    ebp,[rdx+0x6]
   140013362:	jo     0x140013333
   140013364:	sbb    eax,0x55750322
   140013369:	mov    ebp,0x6f83101a
   14001336e:	and    al,0xfe
   140013370:	mov    ah,0xa5
   140013372:	cld    
   140013373:	(bad)  
   140013374:	cli    
   140013375:	or     al,0xe2
   140013377:	je     0x1400133b3
   140013379:	test   DWORD PTR [rdx-0x1],eax
   14001337c:	leave  
   14001337d:	rex.WRXB (bad) 
   14001337f:	leave  
   140013380:	fcom   QWORD PTR [rdx-0x61b1387]
   140013386:	icebp  
   140013387:	jrcxz  0x1400133f0
   140013389:	sahf   
   14001338a:	jbe    0x1400133df
   14001338c:	dec    BYTE PTR [rax]
   14001338e:	loopne 0x1400133b4
   140013390:	shl    DWORD PTR [rax+rsi*4+0x58],1
   140013394:	div    BYTE PTR [rdi-0x12]
   140013397:	retf   0xcd39
   14001339a:	rex.R popf 
   14001339c:	adc    eax,DWORD PTR [rdx-0x1d]
   14001339f:	not    ch
   1400133a1:	outs   dx,DWORD PTR ds:[rsi]
   1400133a2:	and    ebx,0x356687cb
   1400133a8:	mov    al,0x76
   1400133ab:	test   eax,0xf9f5fccd
   1400133b0:	xchg   edi,eax
   1400133b1:	psraw  mm6,QWORD PTR [rsi]
   1400133b4:	(bad)  
   1400133b5:	pushf  
   1400133b6:	mov    dh,0xf7
   1400133b8:	xor    eax,0xc54bcdcf
   1400133bd:	test   eax,0x463631d5
   1400133c2:	xlat   BYTE PTR ds:[rbx]
   1400133c3:	adc    eax,0x957457df
   1400133c8:	repnz add dl,ah
   1400133cb:	sbb    BYTE PTR [rbx+rdx*1+0x74],0xe2
   1400133d0:	(bad)  
   1400133d1:	jle    0x140013389
   1400133d3:	xchg   ecx,eax
   1400133d4:	cmc    
   1400133d5:	jo     0x1400133c5
   1400133d7:	jrcxz  0x1400133c4
   1400133d9:	cmp    BYTE PTR [rbp-0x6d84b845],bh
   1400133df:	rex.XB scas eax,DWORD PTR es:[rdi]
   1400133e1:	in     al,0xb3
   1400133e3:	(bad)  
   1400133e4:	jnp    0x140013401
   1400133e6:	idiv   BYTE PTR [rbp-0xf]
   1400133e9:	imul   ebx
   1400133eb:	or     eax,DWORD PTR [rsi+0x1e]
   1400133ee:	outs   dx,DWORD PTR ds:[rsi]
   1400133ef:	xlat   BYTE PTR ds:[rbx]
   1400133f0:	xchg   edx,eax
   1400133f1:	push   rsi
   1400133f2:	cld    
   1400133f3:	cmp    ebx,DWORD PTR [rbx+rdx*2]
   1400133f6:	ins    DWORD PTR es:[rdi],dx
   1400133f7:	jae    0x140013414
   1400133f9:	mov    edx,ebp
   1400133fb:	mov    al,BYTE PTR [rdx-0x1b]
   1400133fe:	sti    
   1400133ff:	jle    0x140013393
   140013401:	cs ds je 0x140013414
   140013405:	xchg   esi,eax
   140013406:	mov    edi,0xaf047ff7
   14001340b:	in     al,dx
   14001340c:	scas   eax,DWORD PTR es:[rdi]
   14001340d:	out    dx,al
   14001340e:	scas   al,BYTE PTR es:[rdi]
   14001340f:	ss (bad) 
   140013411:	and    DWORD PTR [rbp-0x14f38264],eax
   140013417:	idiv   esi
   140013419:	rex.B cdq 
   14001341b:	cmp    al,0xfe
   14001341d:	push   rdi
   14001341e:	or     DWORD PTR [rbx+0x54e44a26],ecx
   140013424:	jp     0x140013481
   140013426:	mov    edx,0xc72bdcc
   14001342b:	sub    eax,0x66d0b772
   140013430:	and    eax,0x466aa5f1
   140013435:	lods   al,BYTE PTR ds:[rsi]
   140013436:	mov    al,BYTE PTR [rdi-0x1754aa8a]
   14001343c:	sbb    BYTE PTR [rax+rbx*2+0x33],0x76
   140013441:	outs   dx,BYTE PTR ds:[rsi]
   140013442:	(bad)  
   140013443:	int3   
   140013444:	stos   DWORD PTR es:[rdi],eax
   140013445:	adc    DWORD PTR [rbx],edx
   140013447:	(bad)  
   140013448:	xlat   BYTE PTR ds:[rbx]
   140013449:	or     edi,esp
   14001344b:	push   rsi
   14001344c:	mov    ebp,0xed6ff14
   140013451:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013452:	lock addr32 push rsp
   140013455:	imul   DWORD PTR [rcx-0x2d713b09]
   14001345b:	push   rax
   14001345c:	push   0xffffffffffffffad
   14001345e:	cmp    al,bl
   140013460:	sub    DWORD PTR [rbx],0xffffffbf
   140013463:	(bad)  
   140013464:	int    0x32
   140013466:	ja     0x14001345f
   140013468:	ja     0x140013491
   14001346a:	movabs ds:0x55eb03e4f93fd0bc,eax
   140013473:	sbb    ebx,ecx
   140013475:	xchg   ebp,eax
   140013476:	cli    
   140013477:	out    dx,al
   140013478:	out    dx,eax
   140013479:	fdiv   DWORD PTR [rip+0xffffffff9673064e]        # 0xd6743acd
   14001347f:	rex.WR jb 0x14001341b
   140013482:	(bad)  
   140013483:	lahf   
   140013484:	fsub   QWORD PTR [rsi+rdi*4-0x37]
   140013488:	(bad)  
   140013489:	pop    rsi
   14001348a:	sahf   
   14001348b:	movabs ds:0xddd793009a6c4976,al
   140013494:	(bad)  
   140013495:	mov    ch,0xfa
   140013497:	test   al,0xcd
   140013499:	cld    
   14001349a:	jmp    0x14001343f
   14001349c:	adc    cl,bh
   14001349e:	ins    BYTE PTR es:[rdi],dx
   14001349f:	xchg   ebp,eax
   1400134a0:	xchg   ebx,eax
   1400134a1:	xor    esp,DWORD PTR [rdi]
   1400134a3:	scas   eax,DWORD PTR es:[rdi]
   1400134a4:	and    edi,DWORD PTR [rdx+0x2c00f516]
   1400134aa:	mov    QWORD PTR [r10],r8
   1400134ad:	rex.R jrcxz 0x14001348f
   1400134b0:	int    0x77
   1400134b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400134b3:	imul   ecx,ecx,0x8788441
   1400134b9:	adc    eax,0x2f17ec25
   1400134be:	enter  0xebd6,0xf6
   1400134c2:	cdq    
   1400134c3:	test   DWORD PTR [rbx+0x58d7ffaf],ecx
   1400134c9:	cmp    DWORD PTR [rcx+0x3f],edi
   1400134cc:	mov    dl,0xf3
   1400134ce:	(bad)  
   1400134cf:	cli    
   1400134d0:	mov    ebp,0x8e745bf5
   1400134d5:	sar    DWORD PTR [rdx-0x10],0xd7
   1400134d9:	test   eax,0xe9bd1c3
   1400134de:	cmp    cl,BYTE PTR [rdx+0x7c390077]
   1400134e4:	and    BYTE PTR [rdi+rax*2-0x220f3e11],ah
   1400134eb:	lahf   
   1400134ec:	sar    eax,0xe0
   1400134ef:	sub    eax,DWORD PTR [rax+0x1795071d]
   1400134f5:	push   rsi
   1400134f6:	adc    al,0x6b
   1400134f8:	iret   
   1400134f9:	push   0xffffffffa209e17a
   1400134fe:	jl     0x1400134c8
   140013500:	rex.RX and eax,0xa59b8a81
   140013506:	push   rdi
   140013507:	mov    WORD PTR [rbp+0x32],?
   14001350a:	pop    QWORD PTR [rip+0xffffffffe7abadc4]        # 0x127ace2d4
   140013510:	xchg   esi,eax
   140013511:	rcl    BYTE PTR [rsi-0x39],cl
   140013514:	cld    
   140013515:	xor    DWORD PTR [rdi],ecx
   140013517:	imul   eax,DWORD PTR [rsi+rdi*2],0xb55f0a91
   14001351e:	int    0x7b
   140013520:	in     al,dx
   140013521:	sub    ebp,edi
   140013523:	jge    0x14001355d
   140013525:	sub    eax,0xfe866676
   14001352a:	(bad)  
   14001352b:	sbb    dh,bl
   14001352d:	adc    eax,0xf95c12f4
   140013532:	in     eax,0xaa
   140013534:	inc    cl
   140013536:	test   BYTE PTR [rax-0x15],ch
   140013539:	rex.WRX adc BYTE PTR [rdx-0x224e5846],r9b
   140013540:	and    eax,DWORD PTR [rbp+0x1c7780aa]
   140013546:	rex.R test BYTE PTR [rsi-0x5af55f01],0xf7
   14001354e:	(bad)  
   140013550:	test   ebp,edx
   140013552:	xchg   ecx,eax
   140013553:	lahf   
   140013554:	out    dx,eax
   140013555:	scas   eax,DWORD PTR es:[rdi]
   140013556:	(bad)  
   140013557:	push   0xffffffffffffffb2
   140013559:	sahf   
   14001355a:	in     eax,dx
   14001355b:	(bad)  
   14001355c:	out    dx,eax
   14001355d:	(bad)  
   14001355e:	jnp    0x14001352b
   140013560:	sub    edi,DWORD PTR [rsi]
   140013562:	jmp    0x18d74b40e
   140013567:	ins    DWORD PTR es:[rdi],dx
   140013568:	scas   eax,DWORD PTR es:[rdi]
   140013569:	pop    rbx
   14001356a:	int    0x7e
   14001356c:	cs or  al,0x2b
   14001356f:	push   rbx
   140013570:	fcmovu st,st(6)
   140013572:	in     al,dx
   140013573:	mov    cl,0x6d
   140013575:	pop    rbp
   140013576:	push   0xffffffffffffffea
   140013578:	std    
   140013579:	or     edx,DWORD PTR [rcx-0x64]
   14001357c:	pop    rbx
   14001357d:	iret   
   14001357e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001357f:	in     al,dx
   140013580:	mov    ebp,0x22ae87e
   140013585:	rex cmp esp,DWORD PTR [rsi+0x55]
   140013589:	mov    ebp,0xb29a5510
   14001358e:	or     al,0xf4
   140013590:	adc    eax,0xdbe62040
   140013595:	mov    ch,0x31
   140013597:	in     al,dx
   140013598:	push   rdi
   140013599:	(bad)  
   14001359a:	push   rsp
   14001359b:	out    dx,al
   14001359c:	pop    rax
   14001359d:	rex.WB clc 
   14001359f:	icebp  
   1400135a0:	out    dx,eax
   1400135a1:	std    
   1400135a2:	adc    eax,0xdfbdf8bc
   1400135a7:	add    ecx,esi
   1400135a9:	(bad)  
   1400135aa:	sbb    dh,bh
   1400135ac:	cmc    
   1400135ad:	movabs ds:0xaeb7dbbfb9670ab2,eax
   1400135b6:	mov    ecx,0x71951ac
   1400135bb:	and    dh,0x43
   1400135be:	fs (bad) 
   1400135c0:	jg     0x1400135c8
   1400135c2:	cmp    BYTE PTR [rsi+0xaee2c14],ah
   1400135c8:	xor    ebp,DWORD PTR [rdx+0x7053b680]
   1400135ce:	ret    0x7dbc
   1400135d1:	clc    
   1400135d2:	jnp    0x14001357c
   1400135d4:	or     al,BYTE PTR [rdx+0x6d]
   1400135d7:	ret    0xba58
   1400135da:	push   rdi
   1400135db:	mov    bh,0xf3
   1400135dd:	(bad)  
   1400135de:	xor    al,0x55
   1400135e0:	mov    ebp,fs
   1400135e2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400135e3:	jno    0x140013658
   1400135e5:	pop    rbx
   1400135e6:	shl    BYTE PTR [rax-0x5e],1
   1400135e9:	repz rcl DWORD PTR [rsi+rdx*8-0x2ad4ca2b],1
   1400135f1:	sub    BYTE PTR [rdx],0xd5
   1400135f4:	sahf   
   1400135f5:	pop    rdx
   1400135f6:	mov    DWORD PTR [rsi-0x62876b2],0x1004f86b
   140013600:	imul   edx,DWORD PTR [rcx],0xaca831ae
   140013606:	(bad)  
   140013607:	(bad)  
   140013608:	cmp    al,0xa
   14001360a:	rex.X
   14001360b:	repnz movabs ds:0xfa3f9f33249a5dbf,eax
   140013615:	in     al,0xd6
   140013617:	adc    esp,DWORD PTR [rdi-0x32]
   14001361a:	mov    ebx,0x6ac4df72
   14001361f:	xchg   edx,eax
   140013620:	rex.R mov dl,0xc5
   140013623:	xchg   ebp,eax
   140013624:	movabs ds:0x4c4ecf59ce776bbf,al
   14001362d:	imul   ebp
   14001362f:	(bad)  
   140013630:	mov    esi,0xf35d3d57
   140013635:	(bad)  
   140013636:	ins    BYTE PTR es:[rdi],dx
   140013637:	(bad)  
   140013638:	or     BYTE PTR [rdx-0x105df97b],ch
   14001363e:	enter  0x980a,0xb8
   140013642:	push   rdi
   140013643:	(bad)  
   140013644:	ins    DWORD PTR es:[rdi],dx
   140013645:	rex.RXB cmc 
   140013647:	pxor   mm5,QWORD PTR [rbx-0x7e]
   14001364b:	scas   al,BYTE PTR es:[rdi]
   14001364c:	push   rax
   14001364d:	stos   DWORD PTR es:[rdi],eax
   14001364e:	in     al,0xf9
   140013650:	rex.RX push rdi
   140013652:	fisttp DWORD PTR [rcx]
   140013654:	pop    rax
   140013655:	stc    
   140013656:	mov    ah,0x0
   140013658:	rcl    ch,0x6f
   14001365b:	or     esi,DWORD PTR [rsi-0x203248a0]
   140013661:	rex.RB or eax,0xf03a2c95
   140013667:	mov    DWORD PTR [rip+0x452333d5],esi        # 0x185246a42
   14001366d:	outs   dx,DWORD PTR ds:[rsi]
   14001366e:	jno    0x140013677
   140013670:	rex.WRX jl 0x140013662
   140013673:	jg     0x1400135ff
   140013675:	mov    ecx,esi
   140013677:	rex.RXB jmp QWORD PTR [r11-0x7d9d37a2]
   14001367e:	mul    DWORD PTR [rbx]
   140013680:	cmp    eax,0xd5fcc5bb
   140013685:	sub    BYTE PTR [rdx+0x4c],dl
   140013688:	(bad)  
   140013689:	xchg   BYTE PTR [rdx+0xa9c42fa],ch
   14001368f:	test   al,0xf5
   140013691:	push   rbp
   140013692:	jp     0x140013650
   140013694:	(bad)  
   140013695:	mov    bh,0x65
   140013697:	sar    DWORD PTR [rbx-0x723d77b1],cl
   14001369d:	push   0xffffffffc98ace8f
   1400136a2:	sub    esi,DWORD PTR [rcx+rax*2+0x24]
   1400136a6:	lods   eax,DWORD PTR ds:[rsi]
   1400136a7:	sub    edx,ebp
   1400136a9:	pushf  
   1400136aa:	stos   BYTE PTR es:[rdi],al
   1400136ab:	fild   WORD PTR [rcx+0x6a]
   1400136ae:	xlat   BYTE PTR ds:[rbx]
   1400136af:	rol    DWORD PTR [rax+0x6350e1a0],1
   1400136b5:	adc    dh,0xf5
   1400136b8:	jmp    FWORD PTR [rax+0x4cd2cf1]
   1400136be:	test   al,0xe0
   1400136c0:	pop    rdi
   1400136c1:	push   rcx
   1400136c2:	fist   WORD PTR [rdx+rsi*2+0x61]
   1400136c6:	iret   
   1400136c7:	shl    BYTE PTR [rax-0xfbf00a6],1
   1400136cd:	xchg   ebx,eax
   1400136ce:	cwde   
   1400136cf:	(bad)  
   1400136d0:	cli    
   1400136d1:	rex.RB
   1400136d2:	fwait
   1400136d3:	out    dx,al
   1400136d4:	mov    ecx,0xb8bb9cd1
   1400136d9:	push   rsi
   1400136da:	jle    0x1400136cc
   1400136dc:	xor    ebx,DWORD PTR [rdi-0x26]
   1400136df:	or     al,0x4e
   1400136e1:	(bad)  
   1400136e2:	ss rex.RX xchg ebx,eax
   1400136e5:	mov    ecx,0xbcb072a5
   1400136ea:	sub    ecx,DWORD PTR [rdi+0x7a]
   1400136ed:	add    ecx,ebx
   1400136ef:	pop    rsi
   1400136f0:	cmc    
   1400136f1:	scas   eax,DWORD PTR es:[rdi]
   1400136f2:	cmp    eax,0x4f7de198
   1400136f7:	jns    0x1400136e8
   1400136f9:	iret   
   1400136fa:	cmp    ecx,0x9c1e0035
   140013700:	jmp    0x10faf0516
   140013705:	(bad)  
   140013707:	jo     0x1400136e0
   140013709:	(bad)  
   14001370a:	push   rdi
   14001370b:	cmp    ecx,0x35
   14001370e:	cli    
   14001370f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013710:	sub    dl,BYTE PTR [rbx-0x594146e1]
   140013716:	adc    bl,BYTE PTR [rbp+0x65]
   140013719:	add    BYTE PTR [rax],ah
   14001371b:	push   0xffffffffffffffdf
   14001371d:	push   rbx
   14001371e:	cmp    esp,esi
   140013720:	pop    rsi
   140013721:	jne    0x1400136ce
   140013723:	mov    ch,bl
   140013725:	add    esp,DWORD PTR [rcx-0xf83eb13]
   14001372b:	movabs ds:0x33a72f439850b562,al
   140013734:	outs   dx,DWORD PTR ds:[rsi]
   140013735:	(bad)  
   140013736:	pop    rcx
   140013737:	pop    rbx
   140013738:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013739:	mov    bh,0x5
   14001373b:	(bad)  
   14001373c:	or     eax,0xdedfb4ba
   140013741:	mov    eax,0x6c748779
   140013746:	xor    ebp,DWORD PTR [rax-0x76657585]
   14001374c:	push   0xffffffffffffffa9
   14001374e:	mov    WORD PTR [rsi+0x75bea392],ss
   140013754:	push   rcx
   140013755:	enter  0xe271,0x7a
   140013759:	sbb    eax,0x680fed8c
   14001375e:	xchg   esp,eax
   14001375f:	(bad)  
   140013760:	xlat   BYTE PTR ds:[rbx]
   140013761:	sbb    dh,BYTE PTR [rip+0xffffffffd4dd12e3]        # 0x114de4a4a
   140013767:	mov    edx,0xed8cfc4c
   14001376c:	add    al,0xa7
   14001376e:	jbe    0x140013752
   140013770:	push   rbx
   140013771:	rex.XB jnp 0x1400136fc
   140013774:	xor    eax,0x5fef288b
   140013779:	sbb    ecx,DWORD PTR [rdi+rbx*1+0x3f]
   14001377d:	xchg   esi,eax
   14001377e:	jmp    0x1400137bf
   140013780:	repz fidiv DWORD PTR [rdi+0x6f55ff49]
   140013787:	out    0x71,al
   140013789:	pop    rsi
   14001378a:	call   0xfef1b4fe
   14001378f:	rex.WXB stos BYTE PTR es:[rdi],al
   140013791:	(bad)  
   140013792:	mov    dl,BYTE PTR [rdx+rbx*1-0x319f365d]
   140013799:	(bad)  
   14001379a:	in     eax,dx
   14001379b:	fdivr  DWORD PTR [rip+0x4a9696ce]        # 0x18a97ce6f
   1400137a1:	out    0xf5,eax
   1400137a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400137a4:	cli    
   1400137a5:	pop    rbp
   1400137a6:	test   DWORD PTR [rsi],esi
   1400137a8:	rex.WRB jnp 0x14001375a
   1400137ab:	fidiv  DWORD PTR [rcx-0x34471453]
   1400137b1:	sbb    eax,0xf54deda0
   1400137b6:	mov    al,0xbb
   1400137b8:	(bad)  
   1400137ba:	and    BYTE PTR [rbp-0x7],bl
   1400137bd:	(bad)  
   1400137be:	stos   BYTE PTR es:[rdi],al
   1400137bf:	scas   al,BYTE PTR es:[rdi]
   1400137c0:	scas   al,BYTE PTR es:[rdi]
   1400137c1:	xchg   BYTE PTR [rcx-0x4d],ch
   1400137c4:	ins    DWORD PTR es:[rdi],dx
   1400137c5:	add    BYTE PTR [rax],al
   1400137c7:	and    BYTE PTR [rax],al
   1400137c9:	rex.WB
   1400137ca:	rex.R
   1400137cb:	push   r12
   1400137cd:	rex.X sti 
   1400137cf:	movabs ds:0x2a6764d36800332a,eax
   1400137d8:	push   rdi
   1400137d9:	out    dx,eax
   1400137da:	rex.RXB movsxd r11d,DWORD PTR [r11-0x59104d90]
   1400137e1:	add    eax,0xa5341b4
   1400137e7:	(bad)
   1400137eb:	push   rdx
   1400137ec:	add    DWORD PTR [rbp-0x27],edi
   1400137ef:	pop    rbx
   1400137f0:	clc    
   1400137f1:	ret    0xffdd
   1400137f4:	cmp    al,0x8f
   1400137f6:	montmul (bad)
   1400137f7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400137f8:	(bad)  
   1400137f9:	xchg   esp,eax
   1400137fa:	rcl    dh,0x75
   1400137fd:	loop   0x14001380f
   1400137ff:	pop    rsp
   140013800:	sti    
   140013801:	(bad)  
   140013802:	shl    DWORD PTR [rsi+0x2d1ddf2a],1
   140013808:	imul   BYTE PTR [rax+0x30]
   14001380b:	movabs ds:0xdb1f1e6962e9b356,al
   140013814:	or     DWORD PTR ss:[rdx],eax
   140013817:	(bad)  
   140013818:	test   ch,al
   14001381a:	shl    BYTE PTR [rdx+0x4f],cl
   14001381d:	cmp    eax,0xbd556a88
   140013822:	add    eax,0x100a213e
   140013827:	cwde   
   140013828:	mov    ecx,0xf8312f8d
   14001382d:	test   BYTE PTR [rax],bh
   14001382f:	cmp    BYTE PTR [rbx-0x4f94cb92],0x2
   140013836:	retf   0x7b16
   140013839:	je     0x140013830
   14001383b:	add    eax,0x5bd57e00
   140013840:	gs lock std 
   140013843:	jmp    FWORD PTR [rbx]
   140013845:	lea    ecx,[rbx-0x7c0481be]
   14001384b:	neg    DWORD PTR [rbp+0x1a]
   14001384e:	lea    ebx,[rbp-0x5f]
   140013851:	pop    rdi
   140013852:	and    dl,dl
   140013854:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013855:	(bad)  
   140013856:	sub    BYTE PTR [rdi],al
   140013858:	cmp    esi,esi
   14001385a:	lea    edi,[rbx+0x2b]
   14001385d:	cmp    ecx,DWORD PTR [rbx]
   14001385f:	rex.WRX sti 
   140013861:	(bad)  
   140013862:	(bad)  
   140013863:	rex.WX movabs al,ds:0xa5d9dd778572fdd8
   14001386d:	(bad)  [rdi]
   14001386f:	jg     0x1400138e1
   140013871:	push   rdi
   140013872:	(bad)  
   140013873:	sar    BYTE PTR [rdx],1
   140013875:	hlt    
   140013876:	cmp    BYTE PTR [rcx],bl
   140013878:	icebp  
   140013879:	test   al,0x41
   14001387b:	jb     0x1400138f8
   14001387d:	imul   edi
   14001387f:	cmp    bl,BYTE PTR [rdi+0x75]
   140013882:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013883:	add    DWORD PTR [rsi+rdx*4-0x2c],ebx
   140013887:	mov    ecx,0xb7e20d7a
   14001388c:	shr    al,cl
   14001388e:	lock retf 
   140013890:	test   QWORD PTR [r9+0x20],rbp
   140013894:	sar    BYTE PTR [rsp+rdx*8-0x2b075196],1
   14001389b:	pop    rcx
   14001389c:	sub    DWORD PTR [rax-0x20c40d80],ecx
   1400138a2:	xchg   ebp,eax
   1400138a3:	ins    BYTE PTR es:[rdi],dx
   1400138a4:	mov    ebp,0x8c5d7be2
   1400138a9:	rex.RX movabs ds:0xb2de41aa13e3aee5,al
   1400138b3:	test   eax,0x8e8e8663
   1400138b8:	pop    rbx
   1400138ba:	push   0xffffffffa5b5a313
   1400138bf:	adc    eax,0x95f363b4
   1400138c4:	test   BYTE PTR [rsi+0x67311a6e],ch
   1400138ca:	add    BYTE PTR [rsi+0x18aaf896],cl
   1400138d0:	movabs ds:0x536aebd0ed7172b1,eax
   1400138d9:	xchg   ebp,eax
   1400138da:	lock adc al,0x49
   1400138dd:	clc    
   1400138de:	jp     0x14001388d
   1400138e0:	(bad)  
   1400138e1:	mov    ah,0x6
   1400138e3:	jge    0x1400138b0
   1400138e5:	(bad)  
   1400138e6:	jrcxz  0x1400138c3
   1400138e8:	pop    rax
   1400138e9:	fnstsw WORD PTR [rax]
   1400138eb:	nop
   1400138ec:	out    0x1e,eax
   1400138ee:	jae    0x1400138d0
   1400138f0:	jbe    0x1400138e6
   1400138f2:	(bad)  
   1400138f3:	fcos   
   1400138f5:	scas   al,BYTE PTR es:[rdi]
   1400138f6:	or     ah,al
   1400138f8:	and    esi,edi
   1400138fa:	jge    0x140013961
   1400138fc:	jrcxz  0x1400138ca
   1400138fe:	test   ebp,edx
   140013900:	push   rdx
   140013901:	add    DWORD PTR [rax],edx
   140013903:	xchg   ebx,eax
   140013904:	(bad)  
   140013905:	mov    ah,0x6f
   140013907:	(bad)  
   140013908:	retf   
   140013909:	jnp    0x1400138fd
   14001390b:	fimul  WORD PTR [rsi-0x4b646a3]
   140013911:	loop   0x140013905
   140013913:	and    dl,bl
   140013915:	out    dx,eax
   140013916:	ins    DWORD PTR es:[rdi],dx
   140013917:	repnz (bad) 
   140013919:	mov    bh,0x6f
   14001391b:	xor    eax,0x5c0d7c79
   140013920:	(bad)  [rcx-0x475f271a]
   140013926:	stc    
   140013927:	int    0xc7
   140013929:	mov    WORD PTR [rsi],?
   14001392b:	ret    
   14001392c:	rex.X
   14001392d:	lock (bad) 
   14001392f:	(bad)
   140013932:	(bad)
   140013935:	div    ebx
   140013937:	lea    edx,[rbp-0x17]
   14001393a:	(bad)  
   14001393b:	pop    rsp
   14001393c:	rex.WRXB je 0x1400138f4
   14001393f:	xor    eax,DWORD PTR [rcx]
   140013941:	mov    ebp,0x94d518f2
   140013946:	mov    ebp,0x4e5a64c
   14001394b:	movabs ds:0x55cd59862399095f,eax
   140013954:	(bad)  
   140013955:	mov    eax,0x6004aba0
   14001395a:	repz int 0xff
   14001395d:	fsubrp st(6),st
   14001395f:	(bad)  
   140013960:	mov    esp,0x7cce6cac
   140013965:	jmp    0x16525a322
   14001396a:	(bad)  
   14001396b:	popf   
   14001396c:	sbb    dh,BYTE PTR gs:[rcx]
   14001396f:	jo     0x140013968
   140013971:	jns    0x140013944
   140013973:	xor    esi,DWORD PTR [rip+0xffffffff9486bf25]        # 0xd487f89e
   140013979:	xchg   esp,eax
   14001397a:	mov    eax,0xa96a2708
   14001397f:	lea    esp,[rsi-0x4b4d5711]
   140013985:	and    esp,esi
   140013987:	lods   eax,DWORD PTR ds:[rsi]
   140013988:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013989:	sti    
   14001398a:	rex.RX out 0x47,al
   14001398d:	or     edx,DWORD PTR [rax]
   14001398f:	loop   0x140013947
   140013991:	(bad)  
   140013992:	jno    0x140013990
   140013994:	fadd   st,st(1)
   140013996:	xchg   eax,ebp
   140013998:	sahf   
   140013999:	(bad)  
   14001399a:	mov    ebp,0x6627cd2a
   14001399f:	mov    dl,0xe0
   1400139a1:	popf   
   1400139a2:	hlt    
   1400139a3:	test   DWORD PTR [rbx-0x7604c068],0x334e59f7
   1400139ad:	jle    0x1400139ae
   1400139af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400139b0:	mov    edi,0xaf85f6b4
   1400139b5:	(bad)  
   1400139b6:	(bad)  
   1400139b7:	sub    edx,DWORD PTR [rax+riz*2]
   1400139ba:	movabs ds:0xbfbc9ec760cbed26,eax
   1400139c3:	jnp    0x140013a34
   1400139c5:	outs   dx,BYTE PTR ds:[rsi]
   1400139c6:	jp     0x1400139cb
   1400139c8:	or     edi,DWORD PTR [rdi-0x4b22a03a]
   1400139ce:	out    0x42,al
   1400139d0:	push   rax
   1400139d1:	pop    rbp
   1400139d2:	int3   
   1400139d3:	(bad)  
   1400139d4:	stc    
   1400139d5:	cmp    ch,bl
   1400139d7:	mov    es,edx
   1400139d9:	test   eax,0x4497714
   1400139de:	adc    ebp,DWORD PTR ds:[rdx+0x7f]
   1400139e2:	add    eax,0x6173ee72
   1400139e7:	and    eax,edi
   1400139e9:	push   rbx
   1400139ea:	(bad)  
   1400139eb:	xchg   BYTE PTR [rax-0x5c498b5b],dh
   1400139f1:	cmp    cl,BYTE PTR [rbp-0x15]
   1400139f4:	out    dx,eax
   1400139f5:	rex.WRX (bad) 
   1400139f7:	ror    BYTE PTR [rbx+rax*1-0x68],0x4e
   1400139fc:	mov    esi,0x13191aef
   140013a01:	sbb    cl,BYTE PTR [rcx-0x77b5d40b]
   140013a07:	sub    ebp,esp
   140013a09:	add    ebp,DWORD PTR [rax+0x7802baba]
   140013a0f:	jb     0x140013a54
   140013a11:	xchg   DWORD PTR [rdi],ecx
   140013a13:	lods   eax,DWORD PTR ds:[rsi]
   140013a14:	repz xor DWORD PTR [rbx+0x4c],esp
   140013a18:	mov    dl,0xf1
   140013a1a:	(bad)  
   140013a1b:	test   DWORD PTR [rdx+0x7e],0x9cacbc3
   140013a22:	mov    ebx,0x86ea6236
   140013a27:	fstp   QWORD PTR [rip+0x4f6449f6]        # 0x18f658423
   140013a2d:	push   rbx
   140013a2e:	sub    eax,0x8fa663d1
   140013a33:	(bad)  
   140013a34:	push   rcx
   140013a35:	cmc    
   140013a36:	movabs eax,ds:0x5f9799a7dc6d20e8
   140013a3f:	(bad)  
   140013a41:	test   al,0x1d
   140013a43:	xchg   ebx,eax
   140013a44:	xor    eax,ecx
   140013a46:	rex.WR and al,0xde
   140013a49:	push   0xffffffffd4cc5b73
   140013a4e:	or     eax,0x6efc6acc
   140013a53:	rex.WRX (bad) [rbp+0xfeeadb9]
   140013a5a:	jg     0x140013a29
   140013a5c:	cmp    BYTE PTR [rdi],ch
   140013a5e:	(bad)  
   140013a5f:	pushf  
   140013a60:	loop   0x140013ad9
   140013a62:	cdq    
   140013a63:	xor    DWORD PTR [rip+0xffffffffa1f27ff3],0x63        # 0xe1f3ba5d
   140013a6a:	fwait
   140013a6b:	pop    rdi
   140013a6c:	js     0x140013a52
   140013a6e:	mov    DWORD PTR [rcx],esi
   140013a70:	mov    BYTE PTR [rax],al
   140013a72:	xor    ax,0x2669
   140013a76:	std    
   140013a77:	sbb    eax,0x3d83c77b
   140013a7c:	sti    
   140013a7d:	(bad)  
   140013a7e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013a7f:	(bad)  
   140013a80:	push   rdi
   140013a81:	(bad)  
   140013a82:	rex.WRX movabs rdi,0x2ec1e07f4f49d970
   140013a8c:	out    0x97,al
   140013a8e:	(bad)  
   140013a8f:	pop    rax
   140013a90:	rex.WR test QWORD PTR [rcx],0xffffffff923b69b5
   140013a97:	mov    edi,0x6b01563a
   140013a9c:	adc    eax,0xe2185d4f
   140013aa1:	ret    0x5e46
   140013aa4:	and    esi,0xffffff94
   140013aa7:	rex.X stos BYTE PTR es:[rdi],al
   140013aa9:	adc    esp,eax
   140013aab:	xor    al,0x33
   140013aad:	add    DWORD PTR [rsi-0x4af6c21d],ebx
   140013ab3:	movabs ds:0xfb2bbde0dd02af14,al
   140013abc:	add    edi,DWORD PTR [rdx-0x6033c258]
   140013ac2:	fadd   st,st(0)
   140013ac4:	xor    ebx,DWORD PTR [rdi-0x27]
   140013ac7:	xor    BYTE PTR [rdi],cl
   140013ac9:	mov    dl,0x31
   140013acb:	leave  
   140013acc:	lock xchg DWORD PTR [rsi+0x4b],edi
   140013ad0:	mov    bl,BYTE PTR [rbx+0x5e]
   140013ad3:	pop    rbx
   140013ad4:	push   rsi
   140013ad5:	cmp    esp,DWORD PTR [rbx]
   140013ad7:	rex.RX je 0x140013b46
   140013ada:	shl    BYTE PTR [rdx-0x2c],1
   140013add:	push   rcx
   140013ade:	and    al,0x99
   140013ae0:	mov    ch,0x79
   140013ae2:	(bad)  
   140013ae3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013ae4:	push   rbx
   140013ae5:	sub    eax,0xfc67b56e
   140013aea:	pop    rax
   140013aeb:	movabs ds:0x3f9c35bfb6b79ea8,eax
   140013af4:	movabs eax,ds:0x44bd19b21e0c4441
   140013afd:	(bad)  
   140013afe:	(bad)  
   140013aff:	jnp    0x140013aee
   140013b01:	(bad)  
   140013b02:	jo     0x140013aac
   140013b04:	adc    al,0xfc
   140013b06:	or     ebp,ebx
   140013b08:	cmp    eax,0x3c6bed11
   140013b0d:	xchg   DWORD PTR [rsi],esi
   140013b0f:	stos   DWORD PTR es:[rdi],eax
   140013b10:	inc    edx
   140013b12:	ret    
   140013b13:	adc    eax,0x569d6705
   140013b18:	and    BYTE PTR [rax],bl
   140013b1a:	xor    edi,edi
   140013b1c:	rex.XB (bad) 
   140013b1e:	rex.WRX (bad) 
   140013b20:	ds (bad) 
   140013b22:	mov    ecx,0x614e5ba3
   140013b27:	and    BYTE PTR [rip+0xfffffffff9fe6389],dh        # 0x139ff9eb6
   140013b2d:	mov    ebp,0x6f49c7fb
   140013b32:	cmp    dh,bl
   140013b34:	jmp    0x140013b1a
   140013b36:	in     eax,dx
   140013b37:	cmp    ecx,DWORD PTR [rax+0x3cd1605a]
   140013b3d:	(bad)  
   140013b3e:	hlt    
   140013b3f:	jns    0x140013b28
   140013b41:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013b42:	jne    0x140013b92
   140013b44:	mov    ebp,0xb14d69f4
   140013b49:	punpcklbw mm7,DWORD PTR [rax]
   140013b4c:	cs lock (bad) 
   140013b4f:	xor    ebx,DWORD PTR [rbx+0x48cbcad8]
   140013b55:	(bad)  
   140013b56:	movabs ds:0x42b86d7b66a34963,eax
   140013b5f:	mov    bh,0x9
   140013b61:	xor    BYTE PTR [rbx],al
   140013b63:	or     bl,0x50
   140013b66:	mov    cl,bh
   140013b68:	sbb    edi,esi
   140013b6a:	rex.RB adc eax,0xf34a4fcc
   140013b70:	cmp    esp,DWORD PTR es:[rcx]
   140013b73:	fidivr WORD PTR [rdi+0x5]
   140013b76:	adc    BYTE PTR [rax+0x6b],al
   140013b79:	add    BYTE PTR [rip+0x1d4fc9be],bh        # 0x15d51053d
   140013b7f:	fisttp QWORD PTR [rsi+rbx*1+0x30]
   140013b83:	(bad)  
   140013b84:	cwde   
   140013b85:	repnz sbb eax,0xdf5bc6bf
   140013b8b:	cli    
   140013b8c:	rex.WRX pop rdi
   140013b8e:	sahf   
   140013b8f:	sub    cl,BYTE PTR [rsi+0x77]
   140013b92:	(bad)
   140013b96:	sbb    cl,BYTE PTR [rcx+rdx*1-0x54e98e4]
   140013b9d:	push   rdi
   140013b9e:	out    0xcc,eax
   140013ba0:	mov    bh,0x1d
   140013ba2:	sbb    DWORD PTR [rdx+0x2d],0xf260d1da
   140013ba9:	push   0xfffffffff8ae607f
   140013bae:	pop    rsi
   140013baf:	popf   
   140013bb0:	stos   BYTE PTR es:[rdi],al
   140013bb1:	jge    0x140013bcb
   140013bb3:	mov    BYTE PTR [rcx+0x5b],ah
   140013bb6:	mov    ebp,0x55a447d6
   140013bbb:	mov    eax,0x12939cea
   140013bc0:	mov    esi,0x66d16605
   140013bc5:	test   BYTE PTR [rsi],dh
   140013bc7:	test   eax,0x10ac32cb
   140013bcc:	xor    BYTE PTR [rcx+rbp*1-0x34e048c4],dh
   140013bd3:	leave  
   140013bd4:	mov    ebp,esi
   140013bd6:	stos   BYTE PTR es:[rdi],al
   140013bd7:	cwde   
   140013bd8:	push   QWORD PTR [rbx+0x47]
   140013bdb:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140013bdd:	std    
   140013bde:	icebp  
   140013bdf:	(bad)  
   140013be0:	(bad)  
   140013be1:	pop    rax
   140013be2:	ja     0x140013bd1
   140013be4:	addr32 xor eax,0x1d832649
   140013bea:	sti    
   140013beb:	(bad)  
   140013bec:	or     edi,ebx
   140013bee:	(bad)  
   140013bef:	mov    WORD PTR [rdx+0x49c95cfe],ss
   140013bf5:	pop    rdx
   140013bf6:	xor    DWORD PTR [rdi+0x71fcc9a2],edi
   140013bfc:	jmp    0x140013bd8
   140013bfe:	(bad)  
   140013bff:	(bad)  
   140013c00:	in     al,dx
   140013c01:	cld    
   140013c02:	es ret 
   140013c04:	rex.RX int3 
   140013c06:	mov    edi,0x8eeff10d
   140013c0b:	or     esp,ecx
   140013c0d:	(bad)  
   140013c0e:	rex.RB cmp BYTE PTR [r8+0x12],0x51
   140013c13:	pushf  
   140013c14:	hlt    
   140013c15:	sub    bh,BYTE PTR [rdi-0x7d]
   140013c18:	sbb    ebx,0x7b474fda
   140013c1e:	ret    
   140013c1f:	mov    ebp,0xd3e26544
   140013c24:	xchg   ebp,eax
   140013c25:	mov    ebp,?
   140013c27:	jl     0x140013bcf
   140013c29:	imul   edx,DWORD PTR [rcx+0xfd14809],0xd
   140013c30:	jmp    0x140013c34
   140013c32:	xor    al,0x6c
   140013c34:	movsxd ebp,DWORD PTR [rdx+0xa976a0f]
   140013c3a:	repz xchg eax,edi
   140013c3d:	int3   
   140013c3e:	mov    bh,0xfa
   140013c40:	out    dx,eax
   140013c41:	test   eax,0xb63b8fe4
   140013c46:	shl    DWORD PTR [rdi],0x8
   140013c49:	stos   BYTE PTR es:[rdi],al
   140013c4a:	ja     0x140013c7a
   140013c4c:	jmp    0x13f2f257c
   140013c51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c52:	(bad)  
   140013c53:	and    al,0xc
   140013c55:	(bad)  
   140013c56:	idiv   esi
   140013c58:	(bad)  
   140013c59:	and    BYTE PTR [rsi+0x51],ch
   140013c5c:	push   0x4fc2ad48
   140013c61:	(bad)  
   140013c62:	mov    esp,0xdf035090
   140013c67:	sub    ch,BYTE PTR [rdx+0x36]
   140013c6a:	mov    dh,0x35
   140013c6c:	rcr    BYTE PTR [rbx+0x745da983],1
   140013c72:	and    al,0x9e
   140013c74:	rex.RX fistp DWORD PTR [rbp+0x45f2d7c5]
   140013c7b:	push   rax
   140013c7c:	jl     0x140013ccb
   140013c7e:	lods   eax,DWORD PTR ds:[rsi]
   140013c7f:	(bad)
   140013c83:	outs   dx,BYTE PTR ds:[rsi]
   140013c84:	rex.WR jl 0x140013ce9
   140013c87:	rol    BYTE PTR [rdx],1
   140013c89:	jl     0x140013c99
   140013c8b:	push   rbx
   140013c8c:	sbb    QWORD PTR [rax+0x1f08d50e],rbp
   140013c93:	movabs ds:0x7f3bde8ddfdde97d,al
   140013c9c:	pop    rsi
   140013c9d:	adc    eax,0x27fe6de4
   140013ca2:	(bad)  
   140013ca3:	or     dh,BYTE PTR [rbp+0x29]
   140013ca6:	mov    esi,0x560ecf59
   140013cab:	mul    dh
   140013cad:	repz sti 
   140013caf:	outs   dx,BYTE PTR ds:[rsi]
   140013cb0:	sbb    BYTE PTR [rbx-0x32dd9f22],bl
   140013cb6:	mov    bh,0x13
   140013cb8:	rcr    BYTE PTR [rbx-0x74],0xdf
   140013cbc:	push   0xffffffffc3e9eb7a
   140013cc1:	icebp  
   140013cc2:	in     eax,dx
   140013cc3:	sahf   
   140013cc4:	cdq    
   140013cc5:	lock iret 
   140013cc7:	mov    ah,0x68
   140013cc9:	sbb    dh,bl
   140013ccb:	outs   dx,DWORD PTR ds:[rsi]
   140013ccc:	jmp    0x140013d08
   140013cce:	sub    eax,0x5605dfe9
   140013cd3:	(bad)  
   140013cd4:	out    dx,eax
   140013cd5:	(bad)  
   140013cd6:	xchg   DWORD PTR [rdi+0x57],ebx
   140013cd9:	pop    rax
   140013cda:	sti    
   140013cdb:	stc    
   140013cdc:	rex.WR xlat BYTE PTR ds:[rbx]
   140013cde:	jle    0x140013c6d
   140013ce0:	ret    
   140013ce1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ce2:	pop    rdi
   140013ce3:	lods   al,BYTE PTR ds:[rsi]
   140013ce4:	cli    
   140013ce5:	shl    ebp,1
   140013ce7:	mov    ch,BYTE PTR [rdi]
   140013ce9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013cea:	or     DWORD PTR [rbp+rax*1+0x7d74b85d],esi
   140013cf1:	sbb    al,0xf0
   140013cf3:	fadd   DWORD PTR [rsi]
   140013cf5:	lahf   
   140013cf6:	js     0x140013d58
   140013cf8:	xchg   ebp,eax
   140013cf9:	out    dx,eax
   140013cfa:	(bad)  
   140013cfb:	push   rax
   140013cfc:	outs   dx,BYTE PTR ds:[rsi]
   140013cfd:	fdivp  st(2),st
   140013cff:	jrcxz  0x140013cbe
   140013d01:	int    0x77
   140013d03:	mov    esi,0x7c8aa367
   140013d08:	sub    BYTE PTR [r15+riz*8],r10b
   140013d0c:	add    edi,DWORD PTR [rcx-0x27]
   140013d0f:	fistp  QWORD PTR [rbx+rax*2+0x41e45498]
   140013d16:	(bad)  
   140013d17:	(bad)  
   140013d18:	rex (bad) 
   140013d1a:	sbb    al,0x75
   140013d1c:	cwde   
   140013d1d:	(bad)  
   140013d1e:	xor    al,0xdc
   140013d20:	scas   eax,DWORD PTR es:[rdi]
   140013d21:	rex.WX shr QWORD PTR [rax+0x447420fb],cl
   140013d28:	retf   
   140013d29:	or     al,0x99
   140013d2b:	mov    eax,0x55f73697
   140013d30:	adc    ebx,DWORD PTR [rdx+0x63ab5b5c]
   140013d36:	pop    rdx
   140013d37:	xor    esp,DWORD PTR [rbx*8-0x20c671a]
   140013d3e:	outs   dx,BYTE PTR ds:[rsi]
   140013d3f:	mov    edi,0xffc7fb2f
   140013d44:	rex.WRX jnp 0x140013d36
   140013d47:	cld    
   140013d48:	rsm    
   140013d4a:	and    ah,bh
   140013d4c:	fldenv [rdi-0x304a5e1]
   140013d52:	movabs ds:0x37a6a320a0858e4f,eax
   140013d5b:	mov    al,0xb
   140013d5d:	jnp    0x140013d6d
   140013d5f:	(bad)  
   140013d60:	out    0xf7,al
   140013d62:	sbb    eax,0xa0de9918
   140013d67:	fs xchg ebx,eax
   140013d69:	sub    BYTE PTR [rsi-0x6ff019ba],bh
   140013d6f:	(bad)  
   140013d70:	mov    ah,0x97
   140013d72:	imul   edi,DWORD PTR [rsi+rbp*4+0x53],0xf2a4403e
   140013d7a:	shl    esp,cl
   140013d7c:	icebp  
   140013d7d:	icebp  
   140013d7e:	mov    ebp,0x33b60383
   140013d83:	adc    al,0x18
   140013d85:	(bad)  
   140013d86:	mov    edi,0x629e6da9
   140013d8b:	xchg   ah,cl
   140013d8d:	jl     0x140013d8f
   140013d8f:	(bad)  [rdx+0x2cbad0b6]
   140013d95:	or     BYTE PTR [rdi+riz*2+0x62],dh
   140013d99:	rex.WRB push r9
   140013d9b:	int    0x3a
   140013d9d:	(bad)  
   140013d9e:	stos   DWORD PTR es:[rdi],eax
   140013d9f:	(bad)  
   140013da0:	jrcxz  0x140013db5
   140013da2:	fwait
   140013da3:	je     0x140013d8b
   140013da5:	fdivrp st(3),st
   140013da7:	cld    
   140013da8:	imul   ebp,DWORD PTR [rbx-0x491086c],0xfff1833b
   140013db2:	cld    
   140013db3:	icebp  
   140013db4:	and    DWORD PTR [rip+0x5de72b16],ecx        # 0x19de868d0
   140013dba:	sub    eax,0x4249db0d
   140013dbf:	rex.WRX jmp 0x140013e2a
   140013dc2:	xchg   esi,eax
   140013dc3:	xlat   BYTE PTR ds:[rbx]
   140013dc4:	stos   BYTE PTR es:[rdi],al
   140013dc5:	mov    bl,0xf0
   140013dc7:	(bad)  
   140013dc8:	mov    ch,0x7d
   140013dca:	(bad)  
   140013dcb:	add    al,0x4
   140013dcd:	fsub   st(0),st
   140013dcf:	pop    rdx
   140013dd0:	nop
   140013dd1:	ret    
   140013dd2:	cmove  ecx,DWORD PTR [rax+0x1c]
   140013dd6:	sbb    cl,BYTE PTR [rbx+rdi*1+0x4389ab40]
   140013ddd:	adc    ecx,esi
   140013ddf:	mov    ecx,0xe5555200
   140013de4:	lahf   
   140013de5:	adc    BYTE PTR es:[rdx+rdi*4+0x53],dl
   140013dea:	add    BYTE PTR [rcx+0x16e4a546],dl
   140013df0:	add    BYTE PTR [rcx-0x50],bh
   140013df3:	push   rax
   140013df4:	push   rbp
   140013df5:	lock fcom QWORD PTR [rdx]
   140013df8:	mov    dl,0x9f
   140013dfa:	clc    
   140013dfb:	add    ecx,DWORD PTR [rcx-0x21]
   140013dfe:	clc    
   140013dff:	(bad)  
   140013e00:	mov    edx,?
   140013e02:	push   rdx
   140013e03:	jg     0x140013df2
   140013e05:	rex.WRXB out dx,eax
   140013e07:	mov    ebp,0x1eaff9f8
   140013e0c:	(bad)  
   140013e0d:	add    esp,DWORD PTR [rsp+rcx*2-0x3a464cba]
   140013e14:	jb     0x140013e87
   140013e16:	out    dx,eax
   140013e17:	(bad)  
   140013e18:	ret    
   140013e19:	shr    esi,0x3d
   140013e1c:	jrcxz  0x140013dc2
   140013e1e:	out    dx,eax
   140013e1f:	and    al,0x3f
   140013e21:	pop    rdx
   140013e22:	fdivp  st(6),st
   140013e24:	(bad)  
   140013e25:	cmp    ebp,DWORD PTR [rax+0x31]
   140013e28:	jae    0x140013e25
   140013e2a:	jge    0x140013e62
   140013e2c:	cwde   
   140013e2d:	(bad)  
   140013e2e:	rol    BYTE PTR [rsi+0x1a],cl
   140013e31:	xlat   BYTE PTR ds:[rbx]
   140013e32:	mov    BYTE PTR [rdi-0x79],bh
   140013e35:	lods   al,BYTE PTR ds:[rsi]
   140013e36:	retf   
   140013e37:	(bad)  
   140013e38:	(bad)  
   140013e39:	jbe    0x140013e2b
   140013e3b:	fidiv  WORD PTR [rsp+rcx*8]
   140013e3e:	add    al,0xd0
   140013e40:	ins    DWORD PTR es:[rdi],dx
   140013e41:	ret    
   140013e42:	jnp    0x140013e4a
   140013e44:	outs   dx,BYTE PTR ds:[rsi]
   140013e45:	fsub   DWORD PTR [rbp-0x30a8c953]
   140013e4b:	in     al,0x67
   140013e4d:	jb     0x140013e15
   140013e4f:	(bad)  
   140013e50:	mov    cl,0x65
   140013e52:	or     BYTE PTR [rip+0x7040175c],bh        # 0x1b04155b4
   140013e58:	sub    eax,0xd70000f2
   140013e5d:	cmp    esp,ebp
   140013e5f:	stc    
   140013e60:	leave  
   140013e61:	stos   DWORD PTR es:[rdi],eax
   140013e62:	lea    ebx,[rip+0x105dbe4c]        # 0x1505efcb4
   140013e68:	test   al,0x2e
   140013e6a:	cmp    DWORD PTR [rcx-0x6249441],edi
   140013e70:	xor    esi,edx
   140013e72:	ds jo  0x140013e0f
   140013e75:	ds mov dl,0x65
   140013e78:	mov    cl,0x9a
   140013e7a:	sub    eax,0x27e4cdef
   140013e7f:	out    dx,eax
   140013e80:	int    0xf5
   140013e82:	(bad)
   140013e85:	sbb    eax,DWORD PTR [rbx-0x4f]
   140013e88:	and    DWORD PTR [rcx],esp
   140013e8a:	(bad)  
   140013e8b:	imul   edx,DWORD PTR [rcx+rbp*8-0x49],0x41
   140013e90:	mov    cl,BYTE PTR [rax+0x4b]
   140013e93:	jl     0x140013e37
   140013e95:	or     DWORD PTR [rcx+riz*1],esp
   140013e98:	(bad)  
   140013e99:	(bad)  
   140013e9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013e9b:	ins    BYTE PTR es:[rdi],dx
   140013e9c:	xor    eax,DWORD PTR [rbx+0x2f]
   140013e9f:	(bad)  
   140013ea0:	mov    esi,0x84d56270
   140013ea5:	xchg   esi,eax
   140013ea6:	and    ebp,DWORD PTR [rsi+rdi*1]
   140013ea9:	xchg   dl,al
   140013eab:	rex.WRB sbb al,0x49
   140013eae:	mov    esp,0x719c5ff6
   140013eb3:	pop    rax
   140013eb4:	ffree  st(7)
   140013eb6:	mov    bh,0x3b
   140013eb8:	movabs al,ds:0x934145da7ad2a293
   140013ec1:	(bad)  
   140013ec2:	fisttp WORD PTR [rbp-0x3782b022]
   140013ec8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ec9:	(bad)  
   140013eca:	mov    edi,0x5c5dce82
   140013ecf:	(bad)  
   140013ed0:	jg     0x140013ec7
   140013ed2:	std    
   140013ed3:	neg    DWORD PTR [rsi+0x38]
   140013ed6:	jge    0x140013f39
   140013ed8:	lods   eax,DWORD PTR ds:[rsi]
   140013ed9:	add    al,0x1b
   140013edb:	and    eax,0xb4b66893
   140013ee0:	stos   DWORD PTR es:[rdi],eax
   140013ee1:	pop    rax
   140013ee2:	fdiv   DWORD PTR [rdi-0x1d]
   140013ee5:	push   rsi
   140013ee6:	jg     0x140013ecf
   140013ee8:	scas   al,BYTE PTR es:[rdi]
   140013ee9:	pushf  
   140013eea:	mov    dl,0x81
   140013eec:	sub    BYTE PTR [rdi],ah
   140013eee:	or     ah,BYTE PTR [rdx+0xd]
   140013ef1:	jbe    0x140013f6f
   140013ef3:	(bad)  
   140013ef4:	repz (bad) 
   140013ef6:	faddp  st(3),st
   140013ef8:	in     al,0x7b
   140013efa:	stos   BYTE PTR es:[rdi],al
   140013efb:	xor    al,0x95
   140013efd:	rex.WB jl 0x140013e9b
   140013f00:	cmp    dh,dl
   140013f02:	std    
   140013f03:	out    dx,al
   140013f04:	(bad)  
   140013f05:	xlat   BYTE PTR ds:[rbx]
   140013f06:	in     al,dx
   140013f07:	xor    al,0x75
   140013f09:	imul   ecx,DWORD PTR [rsi+0x38],0x54
   140013f0d:	stos   DWORD PTR es:[rdi],eax
   140013f0e:	ds stos BYTE PTR es:[rdi],al
   140013f10:	and    bh,al
   140013f12:	in     al,0xda
   140013f14:	ins    DWORD PTR es:[rdi],dx
   140013f15:	ret    
   140013f16:	stos   DWORD PTR es:[rdi],eax
   140013f17:	rex add DWORD PTR [rdx],edx
   140013f1a:	add    eax,0x8892929
   140013f1f:	pop    rbx
   140013f20:	sub    ebp,DWORD PTR [rsi+rdx*8]
   140013f23:	push   rsi
   140013f24:	(bad)  
   140013f25:	push   rbp
   140013f26:	mov    bh,0x84
   140013f28:	push   rcx
   140013f29:	xchg   edi,eax
   140013f2a:	(bad)  
   140013f2b:	and    BYTE PTR [rbp-0x5c7ffe73],ah
   140013f31:	minps  xmm4,xmm1
   140013f34:	jae    0x140013f83
   140013f36:	call   0xdc023aa5
   140013f3b:	mov    al,sil
   140013f3e:	rex.W cld 
   140013f40:	(bad)  
   140013f41:	jmp    0x140013f07
   140013f43:	(bad)  [rdx-0x6ce05da1]
   140013f49:	sti    
   140013f4a:	jmp    0x140013ed7
   140013f4c:	outs   dx,BYTE PTR ds:[rsi]
   140013f4d:	xchg   edi,eax
   140013f4e:	push   0xffffffffffffffe3
   140013f50:	jbe    0x140013fb6
   140013f52:	push   rcx
   140013f53:	mov    esi,0xc4fa29ff
   140013f58:	imul   esi,edi,0xffffffe0
   140013f5b:	mov    ds,WORD PTR [rbx-0x17a44dea]
   140013f61:	xchg   DWORD PTR [rdi-0x63],edi
   140013f64:	rex.RX (bad) 
   140013f67:	(bad)  
   140013f68:	and    edi,ebp
   140013f6a:	in     eax,dx
   140013f6b:	ja     0x140013f9a
   140013f6d:	(bad)  
   140013f6e:	rex.WX movabs rcx,0x3fef2a435dca7822
   140013f78:	mov    ah,0xf2
   140013f7a:	(bad)  
   140013f7b:	push   rsp
   140013f7c:	mov    DWORD PTR [rsi],0xd4aa3cbb
   140013f82:	fist   DWORD PTR [rbp-0x1bd8abac]
   140013f88:	(bad)  
   140013f89:	rex.RB
   140013f8a:	ss (bad) 
   140013f8c:	mov    BYTE PTR [rcx+0x38],0x3e
   140013f90:	cs ja  0x140013faf
   140013f93:	sahf   
   140013f94:	and    DWORD PTR [rax],esi
   140013f96:	mov    edi,ds
   140013f98:	pop    rsi
   140013f99:	rex.WB
   140013f9a:	repz test BYTE PTR [rdx+0x3d],0xc1
   140013f9f:	mov    ecx,0x17a1da88
   140013fa4:	push   rsi
   140013fa5:	setnp  BYTE PTR [rdi+rsi*2]
   140013fa9:	adc    al,0xd9
   140013fab:	ja     0x140013f6c
   140013fad:	rex.WXB jp 0x14001401f
   140013fb0:	stc    
   140013fb1:	out    dx,eax
   140013fb2:	mov    rax,rdi
   140013fb5:	movabs eax,ds:0x6d0fb3fcff0ccfc7
   140013fbe:	or     al,0xf3
   140013fc0:	adc    al,BYTE PTR [rsp+rbp*4+0x49]
   140013fc4:	fidiv  DWORD PTR [rdi+0x793d9583]
   140013fca:	jg     0x140014045
   140013fcc:	addr32 sahf 
   140013fce:	sub    al,0x2c
   140013fd0:	xchg   esi,eax
   140013fd1:	xchg   esp,eax
   140013fd2:	data16 rex.X (bad) 
   140013fd5:	mov    BYTE PTR [rbp-0x41229703],bh
   140013fdb:	icebp  
   140013fdc:	(bad)  
   140013fdd:	pop    rdx
   140013fde:	int3   
   140013fdf:	(bad)  
   140013fe1:	(bad)  
   140013fe2:	(bad)
   140013fe5:	dec    DWORD PTR [rsi+0x34cbad40]
   140013feb:	sbb    BYTE PTR [rdi-0x6d4b49ea],dl
   140013ff1:	movabs al,ds:0xd7a3fd583a266c5a
   140013ffa:	out    dx,eax
   140013ffb:	mov    edi,0x9126ef06
   140014000:	sub    al,ah
   140014002:	pop    rdx
   140014003:	push   rsi
   140014004:	adc    DWORD PTR [rsi-0x7ba9369b],esi
   14001400a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001400b:	sub    cl,bl
   14001400d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001400e:	rex.RB fisttp QWORD PTR [rsi*2-0x3145d4ed]
   140014016:	xchg   edi,eax
   140014017:	jl     0x14001404c
   140014019:	and    ebx,0xcbcef6ab
   14001401f:	or     eax,0x9914b6d9
   140014024:	stos   BYTE PTR es:[rdi],al
   140014025:	mov    ah,0x4c
   140014027:	fsin   
   140014029:	pushf  
   14001402a:	jmp    0x170414399
   14001402f:	lock ret 0xaf68
   140014033:	cmp    dh,BYTE PTR [rbp-0x48740b13]
   140014039:	(bad)  
   14001403a:	int    0xd7
   14001403c:	or     DWORD PTR [rdi-0x17270ca9],esi
   140014042:	pop    rdx
   140014043:	lea    ecx,[rdx-0x5712acd]
   140014049:	rex.WRX or r12b,al
   14001404c:	fisub  WORD PTR [rdi-0x6e260f0f]
   140014052:	ds jae 0x14001404c
   140014055:	cs jp  0x14001403d
   140014058:	fsubr  QWORD PTR [rbx-0x40e7cd21]
   14001405e:	clc    
   14001405f:	mov    ch,0x1b
   140014061:	hlt    
   140014062:	cmp    edi,DWORD PTR [rdi]
   140014064:	(bad)  
   140014065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014066:	rex.RXB out dx,al
   140014068:	rex.WRB ret 0x50dd
   14001406c:	or     eax,ebx
   14001406e:	mov    cl,al
   140014070:	and    DWORD PTR [rsi-0x60],0xffffff91
   140014074:	push   rsp
   140014075:	(bad)  
   140014076:	scas   al,BYTE PTR es:[rdi]
   140014077:	in     al,dx
   140014078:	out    0xf1,al
   14001407a:	rex.RXB (bad) [r11-0xb3f7dfc]
   140014081:	rex.WRB in eax,dx
   140014083:	and    eax,0x2c736320
   140014088:	push   rsp
   140014089:	mov    esp,0x6b85f7ef
   14001408e:	mov    ebx,0x5a68d54b
   140014093:	fnsave [rdi+0x1c9a28ea]
   140014099:	or     ecx,DWORD PTR cs:[r9]
   14001409d:	and    BYTE PTR [rax],al
   14001409f:	xlat   BYTE PTR ds:[rbx]
   1400140a0:	mul    ah
   1400140a2:	mov    dh,0xbb
   1400140a4:	xchg   ecx,eax
   1400140a5:	jl     0x1400140a6
   1400140a7:	iret   
   1400140a8:	rex.WX mov dl,0xff
   1400140ab:	data16 sbb ah,ch
   1400140ae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400140af:	(bad)  
   1400140b0:	jg     0x140014051
   1400140b2:	jle    0x14001412c
   1400140b4:	in     eax,dx
   1400140b5:	rex.WXB (bad) 
   1400140b7:	rex.WRXB in eax,0x44
   1400140ba:	lods   al,BYTE PTR ds:[rsi]
   1400140bb:	(bad)  
   1400140bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400140bd:	(bad)  
   1400140be:	(bad)  
   1400140bf:	(bad)  
   1400140c0:	retf   
   1400140c1:	ror    DWORD PTR [rsi-0xd211cc3],0x4a
   1400140c8:	(bad)  
   1400140c9:	jp     0x140014148
   1400140cb:	(bad)  
   1400140cc:	xchg   ebx,eax
   1400140cd:	or     BYTE PTR [rdx-0x34],bl
   1400140d0:	(bad)  
   1400140d1:	stc    
   1400140d2:	movabs ds:0x7e2bee1139d7c46b,eax
   1400140db:	(bad)  
   1400140dc:	(bad)  [rdx]
   1400140de:	repz fadd QWORD PTR [rcx-0x2e]
   1400140e2:	mov    WORD PTR [rip+0x3c4a8dac],ss        # 0x17c4bce94
   1400140e8:	mov    ebp,0x917cc63e
   1400140ed:	imul   ecx,edi,0xffffffb3
   1400140f0:	sahf   
   1400140f1:	stos   BYTE PTR es:[rdi],al
   1400140f2:	nop
   1400140f3:	mov    dl,BYTE PTR [rax-0x5556d56]
   1400140f9:	mov    eax,0x28856fb3
   1400140fe:	ror    DWORD PTR [rsi+rdi*4-0x49],0xb0
   140014103:	rex.WRXB (bad) 
   140014105:	rex.WB jl 0x14001411d
   140014108:	(bad)  
   140014109:	mov    ch,0x25
   14001410b:	mov    ebp,DWORD PTR [rip+0xffffffffc224ca58]        # 0x102260b69
   140014111:	xchg   esp,eax
   140014112:	test   BYTE PTR [rax],al
   140014114:	cmp    cl,sil
   140014117:	(bad)  
   140014118:	repz mov cl,0x41
   14001411b:	xchg   ebx,eax
   14001411c:	scas   eax,DWORD PTR es:[rdi]
   14001411d:	mov    edx,0x4a72ff18
   140014122:	(bad)  
   140014123:	in     eax,0xb6
   140014125:	adc    DWORD PTR [rdx-0x598c1521],edi
   14001412b:	imul   edx,DWORD PTR [rcx],0x5
   14001412e:	add    BYTE PTR [rax-0x56],al
   140014131:	scas   al,BYTE PTR es:[rdi]
   140014132:	out    dx,al
   140014133:	xchg   ebx,eax
   140014134:	adc    ch,al
   140014136:	sub    ebx,DWORD PTR [rdx+0x3a]
   140014139:	jp     0x140014171
   14001413b:	and    al,dl
   14001413d:	out    dx,al
   14001413e:	sub    eax,0xbec95c02
   140014143:	(bad)  
   140014144:	mov    DWORD PTR [rdi-0x53],esp
   140014147:	add    BYTE PTR [rdi-0x45221e3],ah
   14001414d:	repnz shl DWORD PTR [rbp-0x64],1
   140014151:	cmp    DWORD PTR [rcx-0x7106e05b],edi
   140014157:	jge    0x14001414d
   140014159:	stos   BYTE PTR es:[rdi],al
   14001415a:	jge    0x1400141a7
   14001415c:	sub    edi,ebx
   14001415e:	jmp    0x1ad283dc2
   140014163:	jge    0x140014146
   140014165:	add    ebx,DWORD PTR [rbx]
   140014167:	leave  
   140014168:	jg     0x140014163
   14001416a:	ja     0x140014177
   14001416c:	cmp    bl,BYTE PTR [rbx+rbp*4+0x24]
   140014170:	imul   ebx,DWORD PTR [rcx+rbx*2-0x27885be9],0xb8f4275e
   14001417b:	mov    dh,0xc9
   14001417e:	rex.XB pop r14
   140014180:	ins    BYTE PTR es:[rdi],dx
   140014181:	mov    ah,0xfb
   140014183:	movabs al,ds:0x37c24ad7e662eaf5
   14001418c:	push   rsi
   14001418d:	(bad)  
   14001418e:	push   rdx
   14001418f:	(bad)  
   140014190:	adc    BYTE PTR [rax+rbx*4],0x3d
   140014194:	(bad)  
   140014195:	cmp    DWORD PTR [rdx+0x1a9b40c1],ecx
   14001419b:	rex.W (bad) 
   14001419d:	pop    rsi
   14001419e:	adc    BYTE PTR [rax-0x12],al
   1400141a1:	fwait
   1400141a2:	(bad)  
   1400141a3:	mov    ecx,eax
   1400141a5:	(bad)  
   1400141a6:	loope  0x140014137
   1400141a8:	push   0xfffffffffffffff6
   1400141aa:	(bad)  
   1400141ab:	ja     0x1400141ed
   1400141ad:	mov    eax,ebp
   1400141af:	shl    DWORD PTR [rdi-0x8207032],1
   1400141b5:	leave  
   1400141b6:	mov    edi,0x85e71b59
   1400141bb:	adc    ah,BYTE PTR [rdi]
   1400141bd:	push   0xffffffffffffffd2
   1400141bf:	sahf   
   1400141c0:	hlt    
   1400141c1:	xchg   edi,eax
   1400141c2:	jbe    0x1400141ab
   1400141c4:	std    
   1400141c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141c6:	sbb    eax,0x673f3279
   1400141cb:	rex.WRB (bad) 
   1400141cd:	adc    ecx,DWORD PTR [rsi-0x71fe02c4]
   1400141d3:	scas   al,BYTE PTR es:[rdi]
   1400141d4:	xor    al,0x4
   1400141d6:	and    esp,ecx
   1400141d8:	ffree  st(1)
   1400141da:	cld    
   1400141db:	push   0x1618c9bc
   1400141e0:	stos   DWORD PTR es:[rdi],eax
   1400141e1:	pop    rdx
   1400141e2:	loop   0x1400141b1
   1400141e4:	push   rbx
   1400141e5:	stos   DWORD PTR es:[rdi],eax
   1400141e6:	addr32 mov dl,0xa
   1400141e9:	pushf  
   1400141ea:	pop    rdi
   1400141eb:	(bad)  
   1400141ec:	movsxd ebp,DWORD PTR [rbp-0x18]
   1400141ef:	rex.WX (bad) 
   1400141f1:	stos   BYTE PTR es:[rdi],al
   1400141f2:	push   rbp
   1400141f3:	adc    al,BYTE PTR [rsi]
   1400141f5:	mov    DWORD PTR [rax-0x1a],edi
   1400141f8:	neg    DWORD PTR [rdi-0x6847252e]
   1400141fe:	pushf  
   1400141ff:	popf   
   140014200:	(bad)  
   140014201:	rex.RB (bad) 
   140014203:	sub    edx,DWORD PTR [rdx+rbp*2]
   140014206:	sub    eax,0xb6970a8b
   14001420b:	xor    BYTE PTR [rbp-0x6f],al
   14001420e:	(bad)  
   14001420f:	rex.RB
   140014210:	ds mov dl,0x12
   140014213:	cmc    
   140014214:	mov    ah,0xd8
   140014216:	cmp    DWORD PTR [rsi-0x40],edx
   140014219:	push   rdi
   14001421a:	jb     0x140014286
   14001421c:	xchg   edx,eax
   14001421d:	int    0x47
   14001421f:	or     DWORD PTR [rax-0x4ca34554],eax
   140014225:	sbb    esi,DWORD PTR [rsi-0x49930205]
   14001422b:	push   rcx
   14001422c:	(bad)  
   14001422d:	mov    esi,0xb5d36d
   140014232:	add    BYTE PTR [rip+0x55468194],al        # 0x19547c3cc
   140014238:	adc    BYTE PTR [rbp-0x15],ch
   14001423b:	rex popf 
   14001423d:	(bad)  
   14001423e:	mov    dh,0x40
   140014240:	loopne 0x14001428c
   140014242:	ja     0x140014245
   140014244:	mov    ch,dl
   140014246:	sti    
   140014247:	sbb    ah,BYTE PTR [rdx+rdi*1]
   14001424a:	(bad)  
   14001424b:	(bad)  
   14001424c:	mov    ebp,0xb234096a
   140014251:	sub    BYTE PTR [rdi],bh
   140014253:	jo     0x14001429f
   140014255:	out    dx,al
   140014256:	mov    edi,0x7ff6996d
   14001425b:	retf   
   14001425c:	outs   dx,BYTE PTR ds:[rsi]
   14001425d:	jp     0x140014244
   14001425f:	cld    
   140014260:	stos   DWORD PTR es:[rdi],eax
   140014261:	fistp  QWORD PTR [rdi+riz*1]
   140014264:	scas   eax,DWORD PTR es:[rdi]
   140014265:	js     0x1400142ba
   140014267:	ds cli 
   140014269:	lock dec DWORD PTR [rip+0x642fc0fa]        # 0x1a431036a
   140014270:	lods   eax,DWORD PTR ds:[rsi]
   140014271:	ret    
   140014272:	imul   edi,DWORD PTR [rsi],0x75
   140014275:	push   QWORD PTR [rip+0xffffffffed93831c]        # 0x12d94c597
   14001427b:	push   0xffffffffaa6d3ba9
   140014280:	jbe    0x1400142d4
   140014282:	mov    ah,0x21
   140014284:	jp     0x140014266
   140014286:	lock stos BYTE PTR es:[rdi],al
   140014288:	sbb    edx,0x5f
   14001428b:	or     DWORD PTR [rdx-0x33],0xd3ed13e8
   140014292:	jo     0x14001430e
   140014294:	sub    BYTE PTR [rax],dl
   140014296:	push   rsi
   140014297:	xlat   BYTE PTR ds:[rbx]
   140014298:	adc    eax,0x37b21020
   14001429d:	jl     0x1400142de
   14001429f:	shr    bh,cl
   1400142a1:	stc    
   1400142a2:	jno    0x1400142e5
   1400142a4:	jg     0x1400142e4
   1400142a6:	xchg   edx,eax
   1400142a7:	cli    
   1400142a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400142a9:	mov    DWORD PTR [rsp+rcx*1+0x4e],0x2fcd92fb
   1400142b1:	adc    eax,0x459de5fd
   1400142b6:	mov    dh,0xb8
   1400142b8:	push   rsp
   1400142b9:	cwde   
   1400142ba:	xor    al,0x13
   1400142bc:	rex.WRX push rdx
   1400142be:	and    DWORD PTR [rsi],esi
   1400142c0:	add    BYTE PTR [rcx-0x13],dl
   1400142c3:	ss call 0x1837c1129
   1400142c9:	lea    ebx,[rbx+rdx*1-0x4f]
   1400142cd:	jge    0x14001425e
   1400142cf:	sbb    bl,BYTE PTR [rip+0xffffffffd595f9b9]        # 0x115973c8e
   1400142d5:	push   rdi
   1400142d6:	jge    0x14001430f
   1400142d8:	ret    
   1400142d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400142da:	jle    0x14001429b
   1400142dc:	(bad)  
   1400142dd:	pop    rsp
   1400142de:	or     cl,dh
   1400142e0:	scas   al,BYTE PTR es:[rdi]
   1400142e1:	mov    ?,WORD PTR [rax]
   1400142e3:	cs (bad) 
   1400142e5:	stos   DWORD PTR es:[rdi],eax
   1400142e6:	cwde   
   1400142e7:	(bad)  
   1400142e9:	push   rbx
   1400142ea:	xchg   ebx,eax
   1400142eb:	cmp    DWORD PTR [rdx+0x58],edx
   1400142ee:	push   rdx
   1400142ef:	adc    eax,0x22b21556
   1400142f4:	int3   
   1400142f5:	push   rcx
   1400142f6:	mov    ebp,0x54428509
   1400142fb:	jl     0x140014362
   1400142fd:	(bad)  
   1400142fe:	rex.WB (bad) 
   140014300:	(bad)  
   140014301:	sub    DWORD PTR [rcx+0x54],ebx
   140014304:	pop    rax
   140014305:	(bad)  
   140014306:	mov    dl,0x3
   140014308:	adc    BYTE PTR [rbx+0x56],cl
   14001430b:	sub    al,0x91
   14001430d:	xlat   BYTE PTR ds:[rbx]
   14001430e:	sub    BYTE PTR [rax],al
   140014310:	add    al,BYTE PTR [rax+0x36006874]
   140014317:	(bad)  
   140014318:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014319:	cwde   
   14001431a:	in     al,0xab
   14001431c:	scas   eax,DWORD PTR es:[rdi]
   14001431d:	add    eax,0x9efeba08
   140014322:	mov    dh,0xad
   140014324:	mov    ebp,0x6d748aff
   140014329:	repnz add BYTE PTR [rdx+0x4f],ch
   14001432d:	push   rcx
   14001432e:	js     0x140014363
   140014330:	ins    DWORD PTR es:[rdi],dx
   140014331:	jae    0x1400142f2
   140014333:	push   rbx
   140014334:	or     eax,DWORD PTR [rax]
   140014336:	mov    edx,0x34e14040
   14001433b:	or     dl,cl
   14001433d:	push   rsi
   14001433e:	sub    eax,0x16555206
   140014343:	rol    DWORD PTR [rbp+rdx*1+0xc],1
   140014347:	jbe    0x14001434f
   140014349:	jge    0x1400143b0
   14001434b:	cmp    ah,BYTE PTR [rbx]
   14001434d:	(bad)  
   14001434e:	pushf  
   14001434f:	cli    
   140014350:	scas   al,BYTE PTR es:[rdi]
   140014351:	(bad)  
   140014352:	lods   al,BYTE PTR ds:[rsi]
   140014353:	(bad)  
   140014354:	cdq    
   140014355:	jrcxz  0x140014372
   140014357:	mul    BYTE PTR [rbx]
   140014359:	fistp  QWORD PTR [rbx+rcx*4+0x4ae97d6f]
   140014360:	jbe    0x14001435d
   140014362:	loop   0x1400143bf
   140014364:	jmp    QWORD PTR [rip+0x47786fc6]        # 0x18779b330
   14001436a:	xor    esi,edi
   14001436c:	rcr    DWORD PTR [rdi+0x60],cl
   14001436f:	(bad)  
   140014370:	in     al,0x7b
   140014372:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140014374:	(bad)  
   140014375:	push   rdi
   140014376:	ret    
   140014377:	adc    eax,0x1327b9de
   14001437c:	push   rdi
   14001437d:	mov    WORD PTR [rbp+0x6864c85e],fs
   140014383:	rex.WR
   140014384:	rex.RX or al,0x8d
   140014387:	test   al,0x92
   140014389:	jno    0x140014367
   14001438b:	ret    
   14001438c:	push   rbp
   14001438d:	xchg   edx,eax
   14001438e:	cmp    bh,BYTE PTR [rax]
   140014390:	rex.WXB movabs ds:0xabf17b1867a86390,al
   14001439a:	imul   esp,DWORD PTR ds:[rcx+0x11],0x40804e91
   1400143a2:	neg    BYTE PTR [rdx+0x7be4847f]
   1400143a8:	jle    0x140014406
   1400143aa:	int    0x8e
   1400143ac:	std    
   1400143ad:	push   rax
   1400143ae:	cmp    BYTE PTR [rsi],0xf1
   1400143b1:	shl    bl,1
   1400143b3:	sbb    ebx,DWORD PTR [rdi+0x61b1f07e]
   1400143b9:	pop    rsi
   1400143ba:	pop    rax
   1400143bb:	xor    eax,0xdcc92649
   1400143c0:	(bad)  
   1400143c1:	fstp   DWORD PTR [rdi-0x26]
   1400143c4:	push   rcx
   1400143c5:	hlt    
   1400143c6:	xchg   esi,eax
   1400143c7:	push   rdi
   1400143c8:	or     dl,BYTE PTR [rbx+0x73ef8c54]
   1400143ce:	mov    dh,0x50
   1400143d0:	jns    0x140014416
   1400143d2:	jne    0x14001435e
   1400143d4:	call   0x1a1a6be68
   1400143d9:	ss push rbp
   1400143db:	sbb    BYTE PTR [rip+0x6713681c],0xba        # 0x1a714abfe
   1400143e2:	movsxd ebx,DWORD PTR [rdx]
   1400143e4:	pushf  
   1400143e5:	adc    bh,BYTE PTR [rcx]
   1400143e7:	or     bl,ah
   1400143e9:	in     eax,dx
   1400143ea:	(bad)  
   1400143ec:	lods   eax,DWORD PTR ds:[rsi]
   1400143ed:	outs   dx,BYTE PTR ds:[rsi]
   1400143ee:	xchg   ebp,eax
   1400143ef:	js     0x14001446b
   1400143f1:	ins    DWORD PTR es:[rdi],dx
   1400143f2:	xor    al,0x51
   1400143f4:	mov    cl,bl
   1400143f6:	test   al,0x15
   1400143f8:	push   rbp
   1400143f9:	jno    0x1400143a5
   1400143fb:	mov    ebx,0xbb2a88a8
   140014400:	jmp    QWORD PTR [rip+0x1b75157e]        # 0x15b765984
   140014406:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014407:	xchg   BYTE PTR [rdi-0x77],ch
   14001440a:	xchg   rbp,rax
   14001440c:	(bad)  
   14001440d:	(bad)  
   14001440e:	test   al,0x15
   140014410:	movabs ds:0x4400f60ca26a35a5,eax
   140014419:	pop    rbp
   14001441a:	sbb    al,BYTE PTR [rax+rcx*1-0x522ed1fd]
   140014421:	repz adc DWORD PTR [rdi+0x40bb7bff],esi
   140014428:	push   rax
   140014429:	adc    eax,0xb77e8e56
   14001442e:	scas   eax,DWORD PTR es:[rdi]
   14001442f:	cmp    DWORD PTR [rbp-0x4bfff552],edx
   140014435:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014436:	mov    ebx,0x6cfa8c82
   14001443b:	rex jb 0x14001443c
   14001443e:	(bad)  
   14001443f:	rex.RX xchg ebp,eax
   140014441:	shr    BYTE PTR [rcx+0x20],1
   140014444:	add    BYTE PTR [rbp+rdi*8-0x4ddf539f],dh
   14001444b:	adc    BYTE PTR [rsi-0x75341880],0xc1
   140014452:	xchg   ebp,eax
   140014453:	push   rsp
   140014454:	sub    DWORD PTR [rbp-0x2f],edx
   140014457:	sahf   
   140014458:	mov    BYTE PTR [rsi-0x31be3734],ah
   14001445e:	sub    eax,0x3000831c
   140014463:	leave  
   140014464:	mov    dh,0x23
   140014466:	mov    esi,edx
   140014468:	fidiv  WORD PTR [rbx+0x72]
   14001446b:	hlt    
   14001446c:	loope  0x1400144c3
   14001446e:	cmp    eax,0xf8bb2df9
   140014473:	test   bl,0x8b
   140014476:	mov    eax,DWORD PTR [rdi+0x24fdb7b2]
   14001447c:	(bad)  
   14001447d:	call   rbp
   14001447f:	(bad)  
   140014480:	xchg   ebp,eax
   140014481:	stc    
   140014482:	lahf   
   140014483:	inc    BYTE PTR [rdx]
   140014485:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014487:	fmulp  st(3),st
   140014489:	lea    eax,[rsi+0x45]
   14001448c:	out    0x86,eax
   14001448e:	in     eax,dx
   14001448f:	fidivr DWORD PTR [rax-0x2d03328e]
   140014495:	stos   BYTE PTR es:[rdi],al
   140014496:	push   rax
   140014497:	pop    rsp
   140014498:	cmc    
   140014499:	mov    esp,edx
   14001449b:	addr32 (bad) 
   14001449d:	leave  
   14001449e:	rex.RB mov r14d,0x4c803c37
   1400144a4:	test   BYTE PTR [rax],dl
   1400144a6:	std    
   1400144a7:	jns    0x1400144f6
   1400144a9:	push   rbp
   1400144aa:	(bad)  
   1400144ab:	(bad)  
   1400144ac:	pop    rsi
   1400144ad:	jne    0x140014444
   1400144af:	(bad)  
   1400144b0:	(bad)  
   1400144b1:	(bad)  
   1400144b2:	and    bh,bl
   1400144b4:	(bad)  
   1400144b5:	out    dx,eax
   1400144b6:	xchg   cl,bh
   1400144b8:	scas   al,BYTE PTR es:[rdi]
   1400144b9:	(bad)  
   1400144ba:	jno    0x140014448
   1400144bc:	rex.WRXB rol BYTE PTR [r11+0x3f0ccec7],0xfa
   1400144c4:	rcl    cl,0xad
   1400144c7:	rex.WXB jmp 0x14001450d
   1400144ca:	retf   
   1400144cb:	rex.WB sub bpl,r9b
   1400144ce:	ret    0x9b92
   1400144d1:	(bad)
   1400144d4:	push   rdx
   1400144d5:	cwde   
   1400144d6:	xor    al,0x13
   1400144d8:	and    al,0x6
   1400144da:	int3   
   1400144db:	mov    edx,eax
   1400144dd:	xchg   DWORD PTR [rax-0x38],ebp
   1400144e0:	and    eax,0x919b503c
   1400144e5:	sbb    ebp,DWORD PTR [rbp-0x77]
   1400144e8:	ficomp WORD PTR [rbx+0x63]
   1400144eb:	mov    ebx,0xe3c98207
   1400144f0:	stos   DWORD PTR es:[rdi],eax
   1400144f1:	jrcxz  0x14001451b
   1400144f3:	jle    0x1400144c0
   1400144f5:	rex.WRB
   1400144f6:	rex.WRB
   1400144f7:	rex.WB stos QWORD PTR es:[rdi],rax
   1400144f9:	lods   eax,DWORD PTR ds:[rsi]
   1400144fa:	add    DWORD PTR [rsi+rcx*8+0x5c],ebx
   1400144fe:	fcomp  QWORD PTR [rdx+0x1f7707e8]
   140014504:	icebp  
   140014505:	idiv   BYTE PTR [rsi+0x850a890]
   14001450b:	in     eax,dx
   14001450c:	jbe    0x1400144f4
   14001450e:	adc    ecx,DWORD PTR [rcx+rsi*1+0x1]
   140014512:	enter  0xf2c7,0x55
   140014516:	xor    cl,dh
   140014518:	jl     0x1400144ad
   14001451a:	xchg   edi,eax
   14001451b:	cwde   
   14001451c:	cmp    al,0x42
   14001451e:	lods   al,BYTE PTR ds:[rsi]
   14001451f:	ins    DWORD PTR es:[rdi],dx
   140014520:	(bad)  
   140014521:	sbb    bl,0xb8
   140014524:	jl     0x1400144fd
   140014526:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   140014528:	ins    BYTE PTR es:[rdi],dx
   140014529:	movabs ds:0xedbd303e9269fed6,eax
   140014532:	cmp    dh,bh
   140014534:	mov    dh,BYTE PTR [rbp+rdx*8+0x34]
   140014538:	sub    al,0x89
   14001453b:	rex.X
   14001453c:	rex.W (bad) 
   14001453e:	fwait
   14001453f:	add    DWORD PTR [rdx+0x41],ecx
   140014542:	mov    al,0x5d
   140014544:	or     DWORD PTR [rdx+rbx*4],eax
   140014547:	sti    
   140014548:	adc    rax,0xffffffff80544ca2
   14001454e:	push   0xffffffffaa91a00b
   140014553:	movabs al,cs:0x6f32296900222f62
   14001455d:	(bad)  
   14001455e:	(bad)  
   14001455f:	mov    ebx,DWORD PTR [rax-0x703bf264]
   140014565:	and    ch,BYTE PTR [rbp-0x21]
   140014568:	pmaddwd mm6,QWORD PTR [rbp-0x55]
   14001456c:	lods   eax,DWORD PTR ds:[rsi]
   14001456d:	xchg   edi,eax
   14001456e:	(bad)  
   14001456f:	mov    edx,0xf653a1f9
   140014574:	or     ecx,ebx
   140014576:	test   eax,0x7b35f57e
   14001457b:	int3   
   14001457c:	rex.WXB mov gs,WORD PTR [r14+r13*1]
   140014580:	(bad)  
   140014582:	jnp    0x14001455f
   140014584:	rex.WRXB xchg r10,rax
   140014586:	std    
   140014587:	scas   eax,DWORD PTR es:[rdi]
   140014588:	jg     0x1400145cc
   14001458a:	(bad)  
   14001458b:	out    dx,eax
   14001458c:	std    
   14001458d:	and    ebp,ecx
   14001458f:	jge    0x140014585
   140014591:	xchg   edi,eax
   140014592:	adc    edi,DWORD PTR [rcx+0x48ba2a78]
   140014598:	lods   al,BYTE PTR ds:[rsi]
   140014599:	movabs ds:0x3eab5a2c5ba83007,al
   1400145a2:	lock rex.RB
   1400145a4:	rex.RXB sbb r14d,DWORD PTR [r11+0x2bf22900]
   1400145ab:	clc    
   1400145ac:	cli    
   1400145ad:	jge    0x140014584
   1400145af:	xor    DWORD PTR [rbx+rbp*2+0x2],edx
   1400145b3:	jno    0x140014558
   1400145b5:	imul   esi,DWORD PTR [rbp+0x3114551e],0x44
   1400145bc:	(bad)  
   1400145bd:	int3   
   1400145be:	rcr    ebx,0x91
   1400145c1:	jge    0x14001458a
   1400145c3:	cmp    eax,eax
   1400145c5:	ja     0x140014586
   1400145c7:	push   rbp
   1400145c8:	mov    ecx,0xe1050737
   1400145cd:	mov    ecx,DWORD PTR [rdi-0xb82e161]
   1400145d3:	or     ecx,DWORD PTR [rdi+0x18da5d6c]
   1400145d9:	pop    rdx
   1400145da:	xchg   ebx,eax
   1400145db:	and    al,0xda
   1400145dd:	pop    rbx
   1400145de:	fcomp  QWORD PTR [rcx-0xa]
   1400145e1:	xchg   esi,eax
   1400145e2:	ja     0x1400145c9
   1400145e4:	std    
   1400145e5:	xchg   ebp,eax
   1400145e6:	sbb    eax,0xb2a92705
   1400145eb:	rex.WB test BYTE PTR [r8+0x20a52201],cl
   1400145f2:	jns    0x1400145d5
   1400145f4:	add    DWORD PTR [rbp-0x106c3d6e],esi
   1400145fa:	ss sbb al,0x13
   1400145fd:	outs   dx,DWORD PTR ds:[rsi]
   1400145fe:	push   rcx
   1400145ff:	jo     0x140014585
   140014601:	mov    ecx,esi
   140014603:	jns    0x140014652
   140014605:	pop    rax
   140014606:	scas   eax,DWORD PTR es:[rdi]
   140014607:	(bad)  
   140014608:	fist   DWORD PTR [rcx+rax*4]
   14001460b:	cmp    al,0xb1
   14001460d:	lods   eax,DWORD PTR ds:[rsi]
   14001460e:	xchg   ebx,eax
   14001460f:	movabs ds:0x546a0af0d547d16b,eax
   140014618:	jmp    0x140014612
   14001461a:	(bad)  
   14001461b:	(bad)  
   14001461c:	je     0x14001465a
   14001461e:	rex.WXB
   14001461f:	gs pop sp
   140014622:	sahf   
   140014623:	push   rsp
   140014624:	adc    eax,0x7b47652a
   140014629:	sbb    ecx,ecx
   14001462b:	or     BYTE PTR [rbp+0xc],bl
   14001462e:	(bad)  
   14001462f:	int    0x76
   140014631:	popf   
   140014632:	xchg   esp,eax
   140014633:	rex.RXB xchg r11d,eax
   140014635:	sti    
   140014636:	cmp    dl,0x31
   140014639:	movsxd ebp,DWORD PTR [rcx-0x540cce1]
   14001463f:	mov    edi,0x8c7e5709
   140014644:	stos   DWORD PTR es:[rdi],eax
   140014645:	imul   eax,DWORD PTR [rdx],0x78
   140014648:	push   rsi
   140014649:	(bad)  
   14001464a:	test   al,0xb2
   14001464c:	sbb    edx,DWORD PTR [rax+0x4d]
   14001464f:	rex.WRXB shl BYTE PTR [r11+0x5b060105],1
   140014656:	(bad)  
   140014657:	fidiv  WORD PTR [rdx]
   140014659:	mov    DWORD PTR [rcx+0x1ba224],edi
   14001465f:	xchg   esi,eax
   140014660:	movabs eax,ds:0x233462c4b0ca4a30
   140014669:	xchg   ebp,eax
   14001466a:	(bad)
   14001466d:	(bad)  
   14001466e:	push   rcx
   14001466f:	cdq    
   140014670:	add    eax,DWORD PTR [rsi-0x67]
   140014673:	test   eax,0x6cfccb40
   140014678:	rex.WR
   140014679:	rex.WB scas al,BYTE PTR es:[rdi]
   14001467b:	(bad)  
   14001467c:	push   rdx
   14001467d:	fnstsw WORD PTR [rdi-0x55]
   140014680:	cmp    DWORD PTR [rsi],esi
   140014682:	ds je  0x140014637
   140014685:	cld    
   140014686:	cld    
   140014687:	jb     0x14001460f
   140014689:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001468a:	outs   dx,DWORD PTR ds:[rsi]
   14001468b:	fst    DWORD PTR [rbx+0x42d0f8bc]
   140014691:	jg     0x14001468a
   140014693:	retf   0xbc77
   140014696:	cmp    eax,0xa6de1bc1
   14001469b:	pop    rbx
   14001469c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001469d:	mov    ss,WORD PTR [rip+0x65df89f2]        # 0x1a5e0d095
   1400146a3:	(bad)  
   1400146a4:	jmp    0x1400146e5
   1400146a6:	rex.WR je 0x140014661
   1400146a9:	(bad)  
   1400146aa:	lea    esp,[rsi-0x56]
   1400146ad:	ficomp WORD PTR cs:[rax]
   1400146b0:	fstp   st(2)
   1400146b2:	fs clc 
   1400146b4:	lock xor ch,dh
   1400146b7:	fadd   QWORD PTR [rdx-0x632f85c8]
   1400146bd:	and    edx,DWORD PTR [rax-0x65]
   1400146c0:	sbb    dl,BYTE PTR [r15]
   1400146c3:	out    dx,al
   1400146c4:	jno    0x14001470d
   1400146c6:	jp     0x1400146cb
   1400146c8:	mov    BYTE PTR [rdi+0x1e],dh
   1400146cb:	rex
   1400146cc:	repnz mov dh,BYTE PTR [rdi]
   1400146cf:	ret    0xfebc
   1400146d2:	lahf   
   1400146d3:	stos   BYTE PTR es:[rdi],al
   1400146d4:	cmp    DWORD PTR [rax+0x1b],edi
   1400146d7:	adc    al,0x84
   1400146d9:	push   rcx
   1400146da:	push   rcx
   1400146db:	(bad)  
   1400146dc:	add    eax,DWORD PTR [rdi+0x4f]
   1400146df:	mov    esi,?
   1400146e1:	(bad)  
   1400146e2:	movabs eax,ds:0x2face591cdd5c363
   1400146eb:	sbb    DWORD PTR [rbp+0x7],0xfffffff2
   1400146ef:	inc    dl
   1400146f1:	rex.WX xchg rcx,rax
   1400146f3:	sub    eax,0x8936592d
   1400146f8:	push   rsp
   1400146f9:	push   rbx
   1400146fa:	ja     0x140014759
   1400146fc:	cmp    BYTE PTR [ebp-0x3c],al
   140014700:	(bad)  [rcx+rsi*8+0x1e232706]
   140014707:	icebp  
   140014708:	out    dx,eax
   140014709:	cmp    BYTE PTR [rsi+0x55],0x43
   14001470d:	and    ebp,DWORD PTR [rcx]
   14001470f:	fucomip st,st(5)
   140014711:	(bad)  
   140014712:	cwde   
   140014713:	cmp    dl,BYTE PTR [rbx-0x51]
   140014716:	stc    
   140014717:	enter  0xf38d,0xa6
   14001471b:	iret   
   14001471c:	mov    ecx,0x34dfff27
   140014721:	(bad)  
   140014722:	imul   ebx,DWORD PTR [rbp-0x59],0x1b
   140014726:	add    dl,bl
   140014728:	int    0x9d
   14001472a:	rex.WX pop rbp
   14001472c:	push   rcx
   14001472d:	add    BYTE PTR [rdi+0x1e],ch
   140014730:	cmp    al,0x5b
   140014732:	adc    BYTE PTR [rax+0x3d40f1d2],bh
   140014738:	mov    dl,0x18
   14001473a:	mov    ch,0xd1
   14001473c:	sbb    BYTE PTR [rbx-0xb31ec05],ch
   140014742:	in     eax,dx
   140014743:	rcl    BYTE PTR [rbp-0x9],1
   140014746:	add    DWORD PTR [rax+0x21],edi
   140014749:	xchg   ebp,eax
   14001474a:	rcr    cl,0x49
   14001474d:	and    al,0x8a
   14001474f:	rex.R push rbp
   140014751:	mov    DWORD PTR [rsi+rcx*8+0x10397a],edi
   140014758:	(bad)  
   140014759:	mov    dl,0x83
   14001475b:	or     DWORD PTR [rdx-0x68],esp
   14001475e:	xchg   esi,eax
   140014760:	lock xor edx,DWORD PTR [rsi]
   140014763:	cmp    BYTE PTR [rdi+0x55],ch
   140014766:	xchg   esi,eax
   140014767:	push   rbp
   140014768:	cmp    BYTE PTR [rcx],dh
   14001476a:	test   BYTE PTR [rcx+rbx*2+0x48],dl
   14001476e:	sub    eax,0xc0030019
   140014773:	out    dx,al
   140014774:	add    al,0x0
   140014776:	push   rbp
   140014777:	sbb    BYTE PTR [rbx+0x78],ah
   14001477a:	xchg   ebx,eax
   14001477b:	mov    BYTE PTR [rdx],cl
   14001477d:	and    cl,BYTE PTR [rax]
   14001477f:	(bad)  
   140014780:	stc    
   140014781:	in     al,dx
   140014782:	jae    0x1400147dc
   140014784:	fcomp  QWORD PTR [rdx]
   140014786:	mov    ebp,0xa7151b41
   14001478b:	jo     0x140014788
   14001478d:	and    al,0x25
   14001478f:	and    dl,BYTE PTR [rdx+0x3f565cb5]
   140014795:	jl     0x140014749
   140014797:	clc    
   140014798:	jl     0x1400147d9
   14001479a:	div    r10b
   14001479d:	sbb    eax,0x4b2dd0e6
   1400147a2:	out    0xe0,al
   1400147a4:	repnz rcr DWORD PTR [rbx+0x17],0xf5
   1400147a9:	in     eax,dx
   1400147aa:	call   FWORD PTR [rsi]
   1400147ac:	hlt    
   1400147ad:	mov    dh,0x7f
   1400147af:	stos   DWORD PTR es:[rdi],eax
   1400147b0:	jmp    0x140014741
   1400147b2:	jg     0x14001481d
   1400147b4:	(bad)  
   1400147b5:	pop    rdi
   1400147b6:	cld    
   1400147b7:	push   rax
   1400147b8:	retf   0xfd0f
   1400147bb:	gs (bad) 
   1400147bd:	rex.WRXB sbb rax,0xffffffffb5aa8c75
   1400147c3:	push   rsp
   1400147c4:	outs   dx,DWORD PTR ds:[rsi]
   1400147c5:	push   rsp
   1400147c6:	out    dx,al
   1400147c7:	(bad)  
   1400147c8:	pop    rdx
   1400147c9:	push   rdi
   1400147ca:	xor    DWORD PTR [rsi],0x7ca36307
   1400147d0:	sbb    BYTE PTR [rax+0x6b],dl
   1400147d3:	add    eax,0xea3ffb5a
   1400147d8:	nop
   1400147d9:	movabs eax,ds:0xcee046fe5e49de4b
   1400147e2:	outs   dx,DWORD PTR ds:[rsi]
   1400147e3:	xlat   BYTE PTR ds:[rbx]
   1400147e4:	je     0x1400147e5
   1400147e6:	lods   eax,DWORD PTR ds:[rsi]
   1400147e7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400147e8:	(bad)  
   1400147e9:	stos   BYTE PTR es:[rdi],al
   1400147ea:	add    BYTE PTR [rsi-0x1d160d84],bh
   1400147f0:	retf   
   1400147f1:	rex.WRXB sahf 
   1400147f3:	int    0xbf
   1400147f5:	lock call 0xe9287984
   1400147fb:	hlt    
   1400147fc:	xchg   edi,eax
   1400147fd:	jbe    0x1400147e6
   1400147ff:	retf   
   140014800:	mov    ebx,0xcadef256
   140014805:	mov    ss,WORD PTR [rdx+0x2b0c9589]
   14001480b:	adc    DWORD PTR [rip+0x13aee14c],0xd9d57bea        # 0x153b02961
   140014815:	sub    eax,0x8d2df600
   14001481a:	mov    dh,0xb5
   14001481c:	(bad)  
   14001481d:	xrelease mov BYTE PTR [rax+0x23],bh
   140014821:	(bad)
   140014825:	rex.XB xlat BYTE PTR ds:[rbx]
   140014827:	in     eax,dx
   140014828:	cs out 0xe4,eax
   14001482b:	in     eax,dx
   14001482c:	jb     0x14001480c
   14001482e:	test   DWORD PTR [rbx],edx
   140014830:	movsxd esi,DWORD PTR [rbp+0x6eff515f]
   140014836:	cmp    al,0x46
   140014838:	rex.W fucompp 
   14001483b:	lock loop 0x1400148b9
   14001483e:	(bad)  
   14001483f:	and    esp,DWORD PTR [rdi+0x4e]
   140014842:	or     BYTE PTR [rcx+0x28943e96],ch
   140014848:	rex.WRB
   140014849:	es (bad) 
   14001484b:	outs   dx,BYTE PTR ds:[rsi]
   14001484c:	and    BYTE PTR [rdx],dl
   14001484e:	out    0x3,eax
   140014850:	test   al,0xb
   140014852:	adc    DWORD PTR [rbx+riz*8-0x71725645],eax
   140014859:	sar    DWORD PTR [rsi-0x67e1369d],cl
   14001485f:	mov    ebp,0xdfc4066d
   140014864:	shl    ah,0xee
   140014867:	ins    DWORD PTR es:[rdi],dx
   140014868:	shl    BYTE PTR [rbp-0x55bbf366],1
   14001486e:	rex.W fld QWORD PTR [rdi-0x27]
   140014872:	sub    cl,BYTE PTR [rbx+rax*1]
   140014875:	ds xchg esi,eax
   140014877:	xor    ebx,DWORD PTR [rbp+0x13]
   14001487a:	jo     0x1400148fb
   14001487c:	xlat   BYTE PTR ds:[rbx]
   14001487d:	fiadd  DWORD PTR [rax-0x70f39e00]
   140014883:	adc    eax,DWORD PTR [rbx+0x17]
   140014886:	rex.WX movsxd rbx,DWORD PTR [rsi+0x54175292]
   14001488d:	(bad)  
   14001488e:	pop    rax
   14001488f:	shl    BYTE PTR [rdx],1
   140014891:	or     ebx,DWORD PTR [rcx]
   140014893:	and    ah,BYTE PTR [rbp+0x29]
   140014896:	xor    eax,0xce8b04d5
   14001489b:	and    DWORD PTR [rax],ebp
   14001489d:	test   eax,0x199366b1
   1400148a2:	and    ecx,DWORD PTR [rdi]
   1400148a4:	add    dl,BYTE PTR [rsi]
   1400148a6:	rex.R xchg esi,eax
   1400148a8:	add    DWORD PTR [rcx],esp
   1400148aa:	xchg   BYTE PTR [rip+0x5044a1df],dl        # 0x19045ea8f
   1400148b0:	(bad)  
   1400148b1:	repz sbb al,0xa9
   1400148b4:	pop    rax
   1400148b5:	nop
   1400148b6:	jecxz  0x140014899
   1400148b9:	pop    rsp
   1400148ba:	sbb    BYTE PTR [rsi],dl
   1400148bc:	(bad)  
   1400148bd:	fbstp  TBYTE PTR [rdi-0x4a]
   1400148c0:	cmp    al,0x76
   1400148c2:	fistp  QWORD PTR [rcx+0x79bed8f2]
   1400148c8:	pop    rdx
   1400148c9:	mov    esi,0xb8392563
   1400148ce:	ja     0x14001485e
   1400148d0:	ja     0x140014900
   1400148d2:	fbstp  TBYTE PTR [rdx-0x19]
   1400148d5:	adc    ch,BYTE PTR [rsi-0x47]
   1400148d8:	adc    edi,eax
   1400148da:	sahf   
   1400148db:	call   FWORD PTR [rsi+0x64]
   1400148de:	cmp    al,0x92
   1400148e0:	rcl    DWORD PTR [rbx-0x270b68f1],1
   1400148e6:	out    0x12,eax
   1400148e8:	cmp    al,0xfc
   1400148ea:	xchg   edi,eax
   1400148eb:	mov    DWORD PTR [rsi+0x38],ebx
   1400148ee:	or     eax,0xaaa78b9
   1400148f3:	(bad)  
   1400148f4:	test   DWORD PTR [rcx],eax
   1400148f6:	pop    rdx
   1400148f7:	fwait
   1400148f8:	cmc    
   1400148f9:	xchg   ecx,eax
   1400148fa:	xor    eax,esp
   1400148fc:	and    DWORD PTR [rdx],0xe4ed78b0
   140014902:	(bad)  
   140014903:	cwde   
   140014904:	(bad)  
   140014905:	jge    0x14001493a
   140014907:	js     0x1400148f0
   140014909:	rex.B cwde 
   14001490b:	rex.XB (bad) 
   14001490d:	sbb    esp,0xb7644afc
   140014913:	mov    esi,0x75d835ca
   140014918:	sub    edi,DWORD PTR [rip+0x3c82f676]        # 0x17c843f94
   14001491e:	hlt    
   14001491f:	clc    
   140014920:	cmp    ebx,edi
   140014922:	lock icebp 
   140014924:	xor    esp,ebp
   140014926:	adc    BYTE PTR [rcx-0x2f],ch
   140014929:	fwait
   14001492a:	pop    rdi
   14001492b:	sub    DWORD PTR [rsi],edx
   14001492d:	(bad)  
   14001492e:	fcomp  QWORD PTR [rcx-0xa]
   140014931:	xchg   esi,eax
   140014932:	xchg   edi,eax
   140014933:	rex.WX add cl,BYTE PTR [rcx]
   140014936:	or     DWORD PTR [rbp+0x9109112],0x4a44ca14
   140014940:	push   rdx
   140014941:	pop    rcx
   140014942:	mul    DWORD PTR [rcx-0x386cb9e6]
   140014948:	jne    0x140014924
   14001494a:	push   0xffffffffb34edf8a
   14001494f:	nop
   140014950:	(bad)  
   140014951:	and    al,0xb3
   140014953:	push   rbx
   140014954:	out    0xf6,eax
   140014956:	push   0x5b
   140014958:	int3   
   140014959:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001495a:	adc    edx,edi
   14001495c:	outs   dx,BYTE PTR ds:[rsi]
   14001495d:	sbb    eax,0xa804c533
   140014962:	mov    ss,WORD PTR [rdi+0x21]
   140014965:	shl    bh,0x0
   140014968:	pop    rax
   140014969:	and    DWORD PTR [rip+0x75ba9521],esi        # 0x1b5bbde90
   14001496f:	fild   QWORD PTR [rcx+0x150a0079]
   140014975:	and    eax,0xaa80311f
   14001497a:	lods   al,BYTE PTR ds:[rsi]
   14001497c:	lods   eax,DWORD PTR ds:[rsi]
   14001497d:	movabs ds:0x6a20093225de2200,eax
   140014986:	ins    DWORD PTR es:[rdi],dx
   140014987:	pushf  
   140014988:	(bad)  
   140014989:	mov    al,0x5d
   14001498b:	(bad)  
   14001498c:	lahf   
   14001498d:	push   rsp
   14001498e:	xchg   ebx,eax
   14001498f:	pop    rdx
   140014990:	xchg   edi,eax
   140014991:	rex.RB int 0xdc
   140014994:	gs hlt 
   140014996:	mov    bh,0x6d
   140014998:	jge    0x1400149fc
   14001499a:	(bad)  
   14001499b:	fcom   DWORD PTR [rsi]
   14001499d:	pop    rbp
   14001499e:	sbb    eax,0xaa1c6027
   1400149a3:	add    ah,BYTE PTR [rax+0x75554d0]
   1400149a9:	push   rsi
   1400149aa:	in     al,dx
   1400149ab:	rcl    BYTE PTR [rsi-0x219ec09b],0xb0
   1400149b2:	rex ret 0x8904
   1400149b6:	push   rbp
   1400149b7:	mov    al,0xa6
   1400149b9:	(bad)  
   1400149ba:	xlat   BYTE PTR ds:[rbx]
   1400149bb:	sub    al,0xb6
   1400149bd:	pop    rax
   1400149be:	add    DWORD PTR [rax+0x33743288],0x2c5a7049
   1400149c8:	cmc    
   1400149c9:	lods   al,BYTE PTR ds:[rsi]
   1400149ca:	pop    rdx
   1400149cb:	test   eax,edx
   1400149cd:	pop    rsi
   1400149ce:	and    DWORD PTR [rax+rax*4],ebp
   1400149d1:	enter  0x6010,0xa8
   1400149d5:	mov    al,0x46
   1400149d7:	adc    eax,0xe52996f3
   1400149dc:	(bad)  
   1400149dd:	adc    dl,BYTE PTR cs:[rax+0x10]
   1400149e1:	push   rcx
   1400149e2:	outs   dx,BYTE PTR ds:[rsi]
   1400149e3:	cwde   
   1400149e4:	rex.WX add rax,0x70307b2c
   1400149ea:	(bad)  
   1400149eb:	mov    dl,0xe4
   1400149ed:	cmp    edx,DWORD PTR [rcx+rbx*1-0x6eef7afe]
   1400149f4:	test   al,0xaa
   1400149f6:	adc    al,BYTE PTR [rcx+0x1c]
   1400149f9:	adc    eax,DWORD PTR [rcx]
   1400149fb:	push   rax
   1400149fc:	add    DWORD PTR [rcx],edx
   1400149fe:	jmp    0xdc6d7fac
   140014a03:	pop    rsi
   140014a04:	sub    ecx,DWORD PTR [rsi-0x416a75fe]
   140014a0a:	sbb    esp,ebx
   140014a0c:	mov    esi,0x3fddec9c
   140014a11:	outs   dx,DWORD PTR ds:[rsi]
   140014a12:	jbe    0x140014a02
   140014a14:	cdq    
   140014a15:	jmp    0x140014a06
   140014a17:	cwde   
   140014a18:	mov    ebx,0xb70caeed
   140014a1d:	fld    QWORD PTR [rip+0xffffffffc587f9bc]        # 0x1058943df
   140014a23:	mov    esp,DWORD PTR [rdx]
   140014a25:	fidivr DWORD PTR [rbx+rdi*2]
   140014a28:	(bad)  
   140014a29:	cwde   
   140014a2a:	or     al,0x57
   140014a2c:	sar    esp,cl
   140014a2e:	hlt    
   140014a2f:	jrcxz  0x140014a67
   140014a31:	mov    ebx,0x5b632278
   140014a36:	mov    al,0xaa
   140014a38:	(bad)  
   140014a39:	(bad)  
   140014a3a:	xchg   edi,edi
   140014a3c:	(bad)  
   140014a3d:	rol    DWORD PTR [rdx],1
   140014a3f:	repz rcl bh,cl
   140014a42:	imul   ebx,DWORD PTR [rsi-0x10484bf4],0xc160f308
   140014a4c:	pop    rbx
   140014a4d:	(bad)  
   140014a4e:	in     al,0x75
   140014a50:	rex.B ret 0x1753
   140014a54:	(bad)  
   140014a55:	in     al,0xd8
   140014a57:	shr    ebx,cl
   140014a59:	cli    
   140014a5a:	(bad)  
   140014a5b:	mov    ecx,0x56b13975
   140014a60:	pop    rdx
   140014a61:	fwait
   140014a62:	or     al,0xd4
   140014a64:	mov    ebx,DWORD PTR fs:[rdx+0x26837cde]
   140014a6b:	xor    cl,0x8a
   140014a6e:	rex.WRB (bad) 
   140014a70:	(bad)  
   140014a71:	and    esp,eax
   140014a73:	push   rax
   140014a74:	xchg   BYTE PTR [rdx],cl
   140014a76:	test   eax,0x4f1f225a
   140014a7b:	and    BYTE PTR [rbp+0x74cbf044],dh
   140014a81:	xchg   ebx,eax
   140014a82:	js     0x140014ac7
   140014a84:	rex.R
   140014a85:	rex xchg ebp,eax
   140014a87:	icebp  
   140014a88:	lods   al,BYTE PTR ds:[rsi]
   140014a89:	jo     0x140014a52
   140014a8b:	xchg   dh,ah
   140014a8d:	rex.WB js 0x140014ac9
   140014a90:	mov    dl,BYTE PTR [rsi+0x22]
   140014a93:	rcl    BYTE PTR [rbp*8-0x16297227],1
   140014a9a:	movsxd esi,DWORD PTR [rdx-0x4a569dc7]
   140014aa0:	(bad)  
   140014aa1:	dec    bl
   140014aa3:	out    0x73,eax
   140014aa5:	xor    QWORD PTR [rcx],r8
   140014aa8:	mov    ah,0x4a
   140014aaa:	cmc    
   140014aab:	rex.RB xchg r12d,eax
   140014aad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014aae:	(bad)  
   140014aaf:	(bad)  
   140014ab0:	rex.RX (bad) 
   140014ab2:	jmp    0x140014b00
   140014ab4:	xor    DWORD PTR [rip+0xffffffffeb710154],esp        # 0x12b724c0e
   140014aba:	(bad)
   140014abd:	xchg   r12d,eax
   140014abf:	lods   al,BYTE PTR ds:[rsi]
   140014ac0:	sub    eax,0xf8d4d80d
   140014ac5:	sbb    al,0xfc
   140014ac7:	add    al,0x5d
   140014ac9:	rex.WRX shl BYTE PTR [rdx+0x1c],0xe7
   140014ace:	add    DWORD PTR [rbx+rdx*2-0xb],ecx
   140014ad2:	(bad)  
   140014ad3:	xbegin 0x110c23aca
   140014ad9:	mov    cl,0xe4
   140014adb:	jl     0x14c514540
   140014ae1:	add    al,0x71
   140014ae3:	rex.R (bad) 
   140014ae5:	pop    rbx
   140014ae6:	hlt    
   140014ae7:	cmc    
   140014ae8:	(bad)  
   140014ae9:	add    BYTE PTR [rdi],0x0
   140014aec:	movabs al,ds:0x3aaa56f35eb22dc8
   140014af5:	outs   dx,DWORD PTR ds:[rsi]
   140014af6:	rex.WXB movabs r11,0xdaa6e5c339ec2ca7
   140014b00:	push   rdx
   140014b01:	mov    BYTE PTR [rbp+0x49],cl
   140014b04:	adc    BYTE PTR [rbp-0x4f],dl
   140014b07:	fistp  WORD PTR [r15-0x3d7f6618]
   140014b0e:	out    dx,al
   140014b0f:	outs   dx,DWORD PTR ds:[rsi]
   140014b10:	(bad)  
   140014b11:	sub    DWORD PTR [rdx-0x5b],esp
   140014b14:	and    al,0x95
   140014b16:	mov    eax,DWORD PTR [rsi+0x4bc8a094]
   140014b1c:	enter  0x93a,0x76
   140014b20:	sub    cl,dl
   140014b22:	rex push rbp
   140014b24:	sti    
   140014b25:	(bad)  
   140014b26:	rex.WX
   140014b27:	xchg   rcx,rax
   140014b29:	rex shl DWORD PTR [rbp+riz*1+0x23],0xa6
   140014b2f:	xchg   esp,eax
   140014b30:	cmp    BYTE PTR [rcx+0x740d5152],0x9f
   140014b37:	(bad)  
   140014b38:	es xchg esp,eax
   140014b3a:	nop
   140014b3b:	and    eax,0x12076582
   140014b40:	add    ch,BYTE PTR [rax-0x7c3d1ddb]
   140014b46:	push   rbx
   140014b47:	rex.WB push r8
   140014b49:	and    eax,0x210412e2
   140014b4e:	addr32 (bad) 
   140014b50:	or     BYTE PTR [rcx],ch
   140014b52:	pop    rcx
   140014b53:	adc    ah,dh
   140014b55:	cdq    
   140014b56:	int    0xd2
   140014b58:	fidivr WORD PTR [rbx-0x1f9963af]
   140014b5e:	xchg   esp,eax
   140014b5f:	adc    dh,BYTE PTR [rdi+rax*2-0x61]
   140014b63:	sti    
   140014b64:	sti    
   140014b65:	out    0xcc,eax
   140014b67:	loop   0x140014b47
   140014b69:	mov    ecx,0x80d77e64
   140014b6e:	xchg   edi,eax
   140014b6f:	push   rdx
   140014b70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014b71:	test   DWORD PTR fs:[rip+0xffffffff8000ed37],0x845796ec        # 0xc00238b3
   140014b7c:	push   rax
   140014b7d:	rcl    DWORD PTR [rip+0x1f6d48b],1        # 0x141f8200e
   140014b83:	ins    BYTE PTR es:[rdi],dx
   140014b84:	in     eax,0x32
   140014b86:	pop    rsp
   140014b87:	(bad)  
   140014b88:	rex.WB jle 0x140014c09
   140014b8b:	retf   
   140014b8c:	out    0x97,al
   140014b8e:	(bad)  
   140014b8f:	push   rdx
   140014b90:	sahf   
   140014b91:	pop    rcx
   140014b92:	(bad)  
   140014b93:	repnz (bad) 
   140014b95:	(bad)  
   140014b96:	in     al,0x85
   140014b98:	add    cl,BYTE PTR [rcx]
   140014b9a:	ror    BYTE PTR [rbx+0x60],1
   140014b9d:	cli    
   140014b9e:	fld    DWORD PTR es:[rcx]
   140014ba1:	xchg   ebx,eax
   140014ba2:	cmp    ch,BYTE PTR [rdi-0x79aa54c3]
   140014ba8:	(bad)  
   140014ba9:	add    eax,0x90c1de30
   140014bae:	rol    BYTE PTR [rdx],0x6a
   140014bb1:	add    bl,dl
   140014bb3:	or     ah,bh
   140014bb5:	add    cl,ch
   140014bb7:	rex.WX adc BYTE PTR [rax-0x44ec0c09],0x85
   140014bbf:	pop    rbx
   140014bc0:	jl     0x140014b44
   140014bc2:	xchg   esi,eax
   140014bc3:	rex.WRXB (bad) 
   140014bc5:	(bad)  
   140014bc6:	scas   eax,DWORD PTR es:[rdi]
   140014bc7:	adc    eax,0xea732b91
   140014bcc:	mov    ch,0x7
   140014bce:	jo     0x140014b8c
   140014bd0:	enter  0x45a,0x6
   140014bd4:	in     al,0xf9
   140014bd6:	cmp    eax,0x2af0906
   140014bdb:	push   0x5969cce4
   140014be0:	(bad)  
   140014be1:	pop    rbp
   140014be2:	movabs ds:0x76dcf1865c3a69b6,eax
   140014beb:	(bad)  
   140014bec:	(bad)  
   140014bed:	xchg   esi,eax
   140014bee:	pop    rcx
   140014bef:	rex.RB pop r8
   140014bf1:	rex.R pop rsp
   140014bf3:	sbb    BYTE PTR [rax+0x55542f15],dh
   140014bf9:	push   rsi
   140014bfa:	popf   
   140014bfb:	ret    0xcec0
   140014bfe:	xor    al,0x30
   140014c00:	mov    dh,0x2c
   140014c02:	lea    esi,[rbp-0xcd75b1d]
   140014c08:	and    al,0x2d
   140014c0a:	(bad)  
   140014c0b:	or     eax,0xa6455afb
   140014c10:	fwait
   140014c11:	add    BYTE PTR [rbp-0x6f],al
   140014c14:	add    cl,BYTE PTR [rax-0x25]
   140014c17:	iret   
   140014c18:	sub    cl,0x4c
   140014c1b:	fisub  WORD PTR [rip+0xe2663f5]        # 0x14e27b016
   140014c21:	int3   
   140014c22:	pop    rbp
   140014c23:	clc    
   140014c24:	rex.WRXB or QWORD PTR [r8],r12
   140014c27:	rex.RXB or eax,0xe030ed02
   140014c2d:	mov    bl,0xa2
   140014c2f:	scas   eax,DWORD PTR es:[rdi]
   140014c30:	sub    eax,DWORD PTR [rax]
   140014c32:	mov    esp,0x5f6efbe7
   140014c37:	std    
   140014c38:	rcr    edi,0xfd
   140014c3b:	retf   0xf1d9
   140014c3e:	xor    bh,bl
   140014c40:	xlat   BYTE PTR ds:[rbx]
   140014c41:	add    al,BYTE PTR [rax]
   140014c43:	and    ebp,DWORD PTR [rdx-0x3c275af5]
   140014c49:	pushf  
   140014c4a:	out    0xe7,eax
   140014c4c:	and    DWORD PTR [rsi-0x6c],esi
   140014c4f:	sbb    dh,BYTE PTR [rsi+0x2aa1cd04]
   140014c55:	(bad)  
   140014c56:	(bad)  
   140014c57:	xchg   ecx,eax
   140014c58:	rex.WX stos QWORD PTR es:[rdi],rax
   140014c5a:	jae    0x140014c7d
   140014c5c:	(bad)  
   140014c5d:	adc    eax,0x705009a1
   140014c62:	adc    edi,DWORD PTR [rsi]
   140014c64:	(bad)  
   140014c65:	stos   BYTE PTR es:[rdi],al
   140014c66:	scas   al,BYTE PTR es:[rdi]
   140014c67:	rex.B
   140014c68:	rex.WB or al,0x68
   140014c6b:	rex.WRB
   140014c6c:	mov    eax,DWORD PTR [r10]
   140014c6f:	int3   
   140014c70:	adc    esi,DWORD PTR [rax]
   140014c72:	adc    BYTE PTR [rax+0x5f],0x89
   140014c76:	sti    
   140014c77:	and    BYTE PTR [rbp+0x55],cl
   140014c7a:	leave  
   140014c7b:	nop
   140014c7c:	and    BYTE PTR [rcx-0x40],dl
   140014c7f:	rex xchg ecx,eax
   140014c81:	adc    dl,BYTE PTR [rcx+0x42]
   140014c84:	test   BYTE PTR [rax+riz*4],al
   140014c87:	test   al,ah
   140014c89:	(bad)  
   140014c8a:	mov    dh,al
   140014c8c:	mov    esi,edi
   140014c8e:	rex.WRX xor r10b,BYTE PTR [rdx+0x2c082c82]
   140014c95:	rex.R push 0x9
   140014c98:	mov    al,0x64
   140014c9a:	(bad)  
   140014c9b:	add    dl,BYTE PTR [rdx+0x12]
   140014c9e:	jno    0x140014c69
   140014ca0:	add    BYTE PTR [rip+0x128524a1],0xa1        # 0x152867148
   140014ca7:	and    al,0x40
   140014ca9:	lods   eax,DWORD PTR ds:[rsi]
   140014caa:	rex.RXB jrcxz 0x140014ca0
   140014cad:	fwait
   140014cae:	(bad)  
   140014caf:	iret   
   140014cb0:	outs   dx,DWORD PTR ds:[rsi]
   140014cb1:	xchg   esi,eax
   140014cb2:	imul   eax,eax,0xfffffff8
   140014cb5:	adc    al,BYTE PTR [rcx+0x4f]
   140014cb8:	jb     0x140014c5f
   140014cba:	rex.WR xchg rbx,rax
   140014cbc:	out    dx,al
   140014cbd:	pop    rdi
   140014cbe:	rex.W (bad) 
   140014cc0:	cli    
   140014cc1:	or     DWORD PTR [rdi],esp
   140014cc3:	(bad)  
   140014cc5:	jb     0x140014c8c
   140014cc7:	and    eax,0x7e62ec74
   140014ccc:	or     DWORD PTR [rsi-0x6b],ebp
   140014ccf:	nop
   140014cd0:	push   0x20
   140014cd2:	test   eax,0x4d942b28
   140014cd7:	add    al,BYTE PTR [rbx]
   140014cd9:	nop
   140014cda:	add    DWORD PTR [rip+0x60146a03],0xa3005940        # 0x1a015b6e7
   140014ce4:	(bad)  
   140014ce5:	mov    bh,0x62
   140014ce7:	add    BYTE PTR [rdx+rcx*1+0x62],ah
   140014ceb:	add    ah,BYTE PTR [rip+0x10589280]        # 0x15059df71
   140014cf1:	rex
   140014cf2:	rex.RX fld QWORD PTR [rdx+0x70aeacac]
   140014cf9:	pop    rsi
   140014cfa:	loop   0x140014cf9
   140014cfc:	sbb    eax,0xad9c10a0
   140014d01:	push   rbp
   140014d02:	adc    DWORD PTR [rip+0x4ca00158],esp        # 0x18ca14e60
   140014d08:	and    al,0x5a
   140014d0a:	add    DWORD PTR [rbx],eax
   140014d0c:	sub    esp,eax
   140014d0e:	add    DWORD PTR [rbp-0x12854b95],0xffffffc0
   140014d15:	or     eax,0xea948744
   140014d1a:	lock movabs ds:0x3fe4985a486bd9a1,al
   140014d24:	xchg   edx,eax
   140014d25:	mov    dh,0x11
   140014d27:	shr    al,1
   140014d29:	cdq    
   140014d2a:	sub    al,BYTE PTR [rdi]
   140014d2c:	movabs eax,ds:0x54556ca4d69c001b
   140014d35:	add    BYTE PTR [rdi-0x4f5d5c30],dl
   140014d3b:	sub    eax,0x87abf000
   140014d40:	test   al,0x4e
   140014d42:	scas   al,BYTE PTR es:[rdi]
   140014d43:	out    0xe7,eax
   140014d45:	adc    cl,BYTE PTR [rax-0x3cf554d4]
   140014d4b:	(bad)  
   140014d4c:	(bad)  
   140014d4d:	pop    rdx
   140014d4e:	movabs ds:0x44897426ceb85856,eax
   140014d57:	frstor [rsi]
   140014d59:	or     BYTE PTR [rax-0x59],0x9
   140014d5d:	mov    al,0x1d
   140014d5f:	or     ch,BYTE PTR [rbp-0x74]
   140014d62:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014d63:	jl     0x140014dc5
   140014d65:	repnz add cl,BYTE PTR [rbp+0x0]
   140014d69:	sub    BYTE PTR [rax],dh
   140014d6b:	test   eax,0xd52b3ff2
   140014d70:	(bad)  
   140014d71:	rcl    bh,1
   140014d73:	pop    rbx
   140014d74:	add    esp,DWORD PTR [rax+0x5b]
   140014d77:	out    0x3f,al
   140014d79:	rex.RXB
   140014d7a:	rex.WB out dx,eax
   140014d7c:	(bad)  
   140014d7d:	xchg   BYTE PTR [rbx+0x7be60c63],bl
   140014d83:	shr    DWORD PTR [rsi],1
   140014d85:	rex.WRB
   140014d86:	rex.RB je 0x140014dd0
   140014d89:	scas   al,BYTE PTR es:[rdi]
   140014d8a:	jp     0x140014d13
   140014d8c:	rex.WX sub QWORD PTR [rdx+0x64],rax
   140014d90:	cwde   
   140014d91:	jmp    0x191025118
   140014d96:	repnz lock stos BYTE PTR es:[rdi],al
   140014d99:	and    al,BYTE PTR [rsp+rcx*8+0x5a]
   140014d9d:	fistp  DWORD PTR [rdi-0x12]
   140014da0:	rex.RB push r12
   140014da2:	add    bh,BYTE PTR ds:[rdi+0x51290ddd]
   140014da9:	add    eax,0x83940936
   140014dae:	int    0x2a
   140014db0:	mov    esi,esi
   140014db2:	xchg   ebp,eax
   140014db3:	sub    DWORD PTR [rcx],esp
   140014db5:	push   rax
   140014db6:	or     dl,BYTE PTR [rax+0x2]
   140014db9:	(bad)  
   140014dba:	push   rsp
   140014dbb:	mov    DWORD PTR [rbx],edx
   140014dbd:	test   DWORD PTR [rax+riz*1-0x32],esp
   140014dc1:	add    dl,ch
   140014dc3:	or     DWORD PTR [rax+0x53dcccf],ebp
   140014dc9:	xor    dh,BYTE PTR [rsi+0x9]
   140014dcc:	out    dx,al
   140014dcd:	(bad)  
   140014dce:	sbb    al,0x1c
   140014dd0:	mov    ah,BYTE PTR [rdi]
   140014dd2:	(bad)  
   140014dd3:	fs sbb al,0x38
   140014dd6:	fadd   DWORD PTR [rdx+rax*4+0x1d74b2ab]
   140014ddd:	int    0xa4
   140014ddf:	loop   0x140014d88
   140014de1:	shr    DWORD PTR [rdx],0xbb
   140014de4:	pop    r14
   140014de6:	adc    ah,BYTE PTR [rax]
   140014de8:	rex.WR sub BYTE PTR [rax+0x60],r12b
   140014dec:	test   eax,0x77272584
   140014df1:	sub    eax,0x244a9785
   140014df6:	add    al,0x91
   140014df8:	xchg   ebx,eax
   140014df9:	stos   DWORD PTR es:[rdi],eax
   140014dfa:	mov    ecx,0x9d48d110
   140014dff:	ja     0x140014dca
   140014e01:	out    0xc0,eax
   140014e03:	test   BYTE PTR [rdx+0x42],bl
   140014e06:	add    BYTE PTR [rcx+0x3d],ch
   140014e09:	mov    bl,0xdc
   140014e0b:	cdq    
   140014e0c:	and    BYTE PTR [rdx-0x6b],dl
   140014e0f:	and    al,0x22
   140014e11:	(bad)  
   140014e12:	push   rbx
   140014e13:	xor    BYTE PTR [rsi],ch
   140014e15:	cs rex.RXB (bad) 
   140014e18:	je     0x140014e23
   140014e1a:	xchg   BYTE PTR [rbp+0x33],dh
   140014e1d:	xchg   esi,eax
   140014e1e:	cdq    
   140014e1f:	rol    BYTE PTR [rdx],0x30
   140014e22:	sbb    rax,0x401b13a3
   140014e28:	sbb    DWORD PTR [rdx+0x24],ecx
   140014e2b:	stos   BYTE PTR es:[rdi],al
   140014e2c:	mov    DWORD PTR [rdx],ebp
   140014e2e:	and    eax,0xefb81a80
   140014e33:	add    al,0x44
   140014e35:	mov    DWORD PTR [rdi+0x1f],esp
   140014e38:	shl    BYTE PTR [rdx],cl
   140014e3a:	cmp    BYTE PTR [rdi-0x6b],ah
   140014e3d:	xor    BYTE PTR [r8],spl
   140014e40:	jne    0x140014e97
   140014e42:	pushf  
   140014e43:	mov    DWORD PTR [rsp+rcx*2+0x4613fd9d],edx
   140014e4a:	sbb    al,BYTE PTR [rcx-0x796cc23c]
   140014e50:	adc    al,0x61
   140014e52:	jmp    0x140014e88
   140014e54:	(bad)  
   140014e55:	add    dh,ch
   140014e57:	ja     0x140014e3e
   140014e59:	push   rdi
   140014e5a:	rex.B xor eax,0xb81ea960
   140014e60:	adc    al,0x7b
   140014e62:	(bad)  
   140014e63:	(bad)  
   140014e64:	adc    BYTE PTR [rcx-0x5b],cl
   140014e67:	rex
   140014e68:	rex.R not edx
   140014e6b:	movabs al,ds:0xab3d4cdc01314c11
   140014e74:	and    al,0x2
   140014e76:	pop    rax
   140014e77:	rex.WXB (bad) 
   140014e79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014e7a:	xchg   ebp,eax
   140014e7b:	(bad)  
   140014e7c:	and    edx,ecx
   140014e7e:	in     al,dx
   140014e7f:	(bad)  
   140014e80:	(bad)  
   140014e81:	(bad)  
   140014e82:	xor    eax,0x2ac066bc
   140014e87:	(bad)  
   140014e88:	xor    eax,DWORD PTR [rdx]
   140014e8a:	test   DWORD PTR [rbp+0x39],ebp
   140014e8d:	and    BYTE PTR ss:[rsi-0x1a3adfed],ch
   140014e94:	rex je 0x140014e44
   140014e97:	or     eax,ebp
   140014e99:	(bad)  
   140014e9a:	jrcxz  0x140014f12
   140014e9c:	addr32 fld st(6)
   140014e9f:	cs xchg ebx,eax
   140014ea1:	ss jrcxz 0x140014e6b
   140014ea4:	int3   
   140014ea5:	pop    rsi
   140014ea6:	mov    dh,0x3e
   140014ea8:	mov    cl,0xd4
   140014eaa:	jg     0x140014efa
   140014eac:	mov    WORD PTR [rdi],ds
   140014eae:	call   0x138053d9e
   140014eb3:	jg     0x140014e93
   140014eb5:	icebp  
   140014eb6:	repnz pop rdi
   140014eb8:	cld    
   140014eb9:	rcr    edi,0xfd
   140014ebc:	bnd call QWORD PTR [rsp+rcx*4-0x75]
   140014ec1:	mov    ebp,0x7cc18aaa
   140014ec6:	(bad)  
   140014ec7:	test   BYTE PTR [rdi],0xf4
   140014eca:	rex.RB jne 0x140014f2c
   140014ecd:	and    DWORD PTR [rax+rcx*1+0x4e28d164],edx
   140014ed4:	xchg   edx,eax
   140014ed5:	enter  0x5426,0x86
   140014ed9:	add    BYTE PTR [rdx+0x52],dh
   140014edc:	imul   ecx,DWORD PTR [rcx+0x55],0x54
   140014ee0:	fisttp QWORD PTR [rbx+rdx*8+0x678588aa]
   140014ee7:	jp     0x140014e9e
   140014ee9:	gs xor al,0x60
   140014eec:	xor    al,0x7e
   140014eee:	int    0xbe
   140014ef0:	xchg   ebx,eax
   140014ef1:	test   al,0x20
   140014ef3:	xor    BYTE PTR [rcx],ch
   140014ef5:	mov    DWORD PTR [rcx+0x26],esi
   140014ef8:	cmp    al,0x19
   140014efa:	adc    BYTE PTR [rbx+0x46702692],dl
   140014f00:	pop    rbp
   140014f01:	add    ah,dl
   140014f03:	push   rsp
   140014f04:	rex sub DWORD PTR [rax+0x3a89008c],ecx
   140014f0b:	enterw 0x9440,0x29
   140014f10:	push   rcx
   140014f11:	lahf   
   140014f12:	fdiv   st,st(4)
   140014f14:	mov    DWORD PTR [rax],ebp
   140014f16:	jne    0x140014ee6
   140014f18:	xor    ecx,DWORD PTR [rbp+0x9]
   140014f1b:	int3   
   140014f1c:	and    BYTE PTR [rsi+0x36c4c4],0xb
   140014f23:	mov    ecx,0xf4227cac
   140014f28:	sub    bl,bl
   140014f2a:	mov    edx,0x394b8c74
   140014f2f:	sub    DWORD PTR [rcx],esi
   140014f31:	or     DWORD PTR [rbx+rdx*1+0x25a912c3],ebx
   140014f38:	jne    0x140014f27
   140014f3a:	and    ebp,DWORD PTR [rax+0x9]
   140014f3d:	(bad)  
   140014f3e:	xlat   BYTE PTR ds:[rbx]
   140014f3f:	sub    ah,BYTE PTR [rax]
   140014f41:	mov    al,0xe2
   140014f43:	pop    rsi
   140014f44:	lods   al,BYTE PTR ds:[rsi]
   140014f45:	dec    ebp
   140014f47:	xchg   BYTE PTR [rsp+rbp*4],ch
   140014f4a:	mov    esp,DWORD PTR [rip+0xffffffff9d6140c0]        # 0xdd629010
   140014f50:	fdivr  st(1),st
   140014f52:	out    dx,al
   140014f53:	add    eax,0xb6c54120
   140014f59:	out    dx,al
   140014f5a:	xchg   ecx,eax
   140014f5b:	popf   
   140014f5c:	xor    edx,DWORD PTR [rax+0x1319a4e1]
   140014f62:	cmp    DWORD PTR [rbp-0x4d7afbf6],esp
   140014f68:	icebp  
   140014f69:	xchg   edx,eax
   140014f6a:	rol    DWORD PTR [rcx+0x55d3d51c],1
   140014f70:	adc    eax,0x8464aac
   140014f75:	lods   al,BYTE PTR ds:[rsi]
   140014f76:	or     dh,BYTE PTR [rdi]
   140014f78:	movabs ds:0xaa5a40130380294d,eax
   140014f81:	icebp  
   140014f82:	loop   0x140014f1f
   140014f84:	add    DWORD PTR [rax],ebx
   140014f86:	and    dl,BYTE PTR [rax-0x59f7d958]
   140014f8c:	test   BYTE PTR [rcx],cl
   140014f8e:	sub    cl,BYTE PTR [rsi-0x4fcf55f9]
   140014f94:	mov    esp,edx
   140014f96:	add    DWORD PTR [rdx+0x202b3a8],0xffffffe8
   140014f9d:	or     eax,eax
   140014f9f:	loop   0x140014faf
   140014fa1:	icebp  
   140014fa2:	es cwde 
   140014fa4:	mov    bh,0xc2
   140014fa6:	add    DWORD PTR [rax],ebp
   140014fa8:	sbb    DWORD PTR [rdx+rdi*4+0x51],0x660cf1c8
   140014fb0:	(bad)  
   140014fb1:	xchg   esp,eax
   140014fb2:	sub    BYTE PTR [rax+0x5e175043],al
   140014fb8:	(bad)  
   140014fb9:	push   rbx
   140014fba:	cmp    ebp,0x55063e27
   140014fc0:	sub    esp,DWORD PTR [rdi+0x1fd401e4]
   140014fc6:	and    eax,ecx
   140014fc8:	xchg   esp,eax
   140014fc9:	test   DWORD PTR [rsi],edi
   140014fcb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014fcc:	sahf   
   140014fcd:	(bad)  
   140014fce:	int    0x92
   140014fd0:	neg    DWORD PTR [rbp+0x7da43667]
   140014fd6:	mov    al,0xf1
   140014fd8:	add    esp,DWORD PTR [rbx+0x77]
   140014fdb:	xor    DWORD PTR [rsi-0x69],edi
   140014fde:	mov    edx,0x73c7831f
   140014fe3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014fe4:	scas   eax,DWORD PTR es:[rdi]
   140014fe5:	(bad)  
   140014fe6:	add    BYTE PTR [rax],cl
   140014fe8:	add    BYTE PTR [rsi],bh
   140014fea:	cmc    
   140014feb:	enter  0x7f5f,0xd3
   140014fef:	rcr    ebx,0xee
   140014ff2:	jp     0x140014fa8
   140014ff4:	sub    al,0xca
   140014ff6:	xchg   ebp,eax
   140014ff7:	int    0x55
   140014ff9:	mov    esi,DWORD PTR [rbx+rcx*2]
   140014ffc:	xchg   ecx,eax
   140014ffd:	fs (bad) 
   140014fff:	xor    DWORD PTR es:[rax],eax
   140015002:	xor    BYTE PTR [rax],dl
   140015004:	(bad)  
   140015005:	mov    ebp,0xa15a2c0a
   14001500a:	fwait
   14001500b:	sbb    esp,edi
   14001500d:	xor    al,0x11
   14001500f:	lods   eax,DWORD PTR ds:[rsi]
   140015010:	rex.XB jne 0x140014fb0
   140015013:	mov    BYTE PTR [rsi-0x54],al
   140015016:	mul    BYTE PTR [rdx]
   140015018:	rex.W
   140015019:	rex.WXB mov BYTE PTR [r8+r10*2],dl
   14001501d:	sub    eax,0x5554b6a1
   140015022:	xor    edi,0x263c36c4
   140015028:	movabs ds:0xaa77dbcd5859de44,al
   140015031:	imul   ecx,DWORD PTR [rcx],0xa85c4a00
   140015037:	stos   BYTE PTR es:[rdi],al
   140015038:	ja     0x140015024
   14001503a:	cmp    DWORD PTR [rip+0xffffffffc83130b7],0xfffffffd        # 0x1083280f8
   140015041:	add    dl,BYTE PTR es:[rax+0x20ab3310]
   140015048:	add    eax,0x9ccaa51
   14001504d:	adc    DWORD PTR [rbx+0x33],edi
   140015050:	or     DWORD PTR [rip+0x64215388],0x7111ee20        # 0x1a422a3e2
   14001505a:	(bad)
   14001505e:	rex.WX adc rax,0x10600094
   140015064:	(bad)  
   140015065:	in     al,0x81
   140015067:	test   BYTE PTR [rcx-0x777b7ff4],cl
   14001506d:	jge    0x14001509d
   14001506f:	(bad)  
   140015070:	mov    ebx,0xd70863b1
   140015075:	fs es (bad) 
   140015078:	or     eax,0x500103c5
   14001507d:	rex.X leave 
   14001507f:	adc    bh,BYTE PTR [rax+0x110aa5b4]
   140015085:	xchg   edi,eax
   140015086:	push   rax
   140015087:	sub    BYTE PTR [rcx+0x27],bl
   14001508a:	sbb    eax,0x15515008
   14001508f:	and    bl,al
   140015091:	(bad)  
   140015092:	push   rcx
   140015093:	sub    cl,BYTE PTR [rip+0x25aee02]        # 0x1425c3e9b
   140015099:	xor    BYTE PTR [rcx],ch
   14001509b:	fcom   QWORD PTR [rax+rcx*1]
   14001509e:	xchg   DWORD PTR [rip+0x2c2fae],edx        # 0x1402d8052
   1400150a4:	mov    al,0x8b
   1400150a6:	ja     0x14001511a
   1400150a8:	xchg   ebp,eax
   1400150a9:	mov    ah,0xe2
   1400150ab:	and    dl,BYTE PTR [rsp+rax*2-0x57f90316]
   1400150b2:	add    r14,QWORD PTR [rip+0x8106250]        # 0x14811b309
   1400150b9:	(bad)  
   1400150ba:	mov    DWORD PTR [rax],r11d
   1400150bd:	movabs ds:0x304064d99c0c8089,al
   1400150c6:	or     al,0x66
   1400150c8:	test   al,0x1a
   1400150ca:	addr32 push rbp
   1400150cc:	adc    BYTE PTR [rbp+0x7989c860],0x26
   1400150d3:	rol    al,0x38
   1400150d6:	jge    0x1400150b7
   1400150d8:	(bad)  
   1400150d9:	push   rsp
   1400150da:	(bad)  
   1400150db:	sub    bh,bh
   1400150dd:	add    DWORD PTR [rsi+rcx*4],0x3833c2c3
   1400150e4:	mov    ch,0xd6
   1400150e6:	movabs eax,ds:0x5550aae75522580
   1400150ef:	mov    DWORD PTR [rdx+rbx*2+0x28b9792],eax
   1400150f6:	adc    bh,dl
   1400150f8:	mov    edi,0xb4349a23
   1400150fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400150fe:	rex.WR (bad) 
   140015100:	stos   BYTE PTR es:[rdi],al
   140015101:	mov    esp,0x8a3e86
   140015106:	and    eax,0x855c7ad1
   14001510b:	jae    0x14001513c
   14001510d:	out    0x8c,eax
   14001510f:	pushf  
   140015110:	rex.X sar dl,cl
   140015113:	(bad)  
   140015115:	loop   0x1400150ce
   140015117:	and    eax,0x1fdad17d
   14001511c:	(bad)  
   14001511e:	pop    rdi
   14001511f:	adc    edx,ebx
   140015121:	(bad)  
   140015122:	je     0x140015179
   140015124:	movabs ds:0xbdf8b81fe9fc1f00,al
   14001512d:	push   rcx
   14001512f:	iret   
   140015130:	outs   dx,DWORD PTR ds:[rsi]
   140015131:	pop    rcx
   140015132:	fidiv  WORD PTR [rbx-0x8]
   140015135:	movsxd ebx,DWORD PTR [rcx-0x6e]
   140015138:	mov    ebp,0x28171f3c
   14001513d:	jb     0x140015156
   14001513f:	cmc    
   140015140:	and    eax,DWORD PTR [rax]
   140015142:	xor    DWORD PTR es:[rcx],ebx
   140015145:	xor    DWORD PTR [rdx+0x66],edx
   140015148:	pop    rsi
   140015149:	(bad)  
   14001514a:	loop   0x14001514f
   14001514c:	ins    BYTE PTR es:[rdi],dx
   14001514d:	enter  0x7312,0xc9
   140015151:	int3   
   140015152:	and    eax,0x2ddeb138
   140015157:	jnp    0x1400150f7
   140015159:	add    BYTE PTR [rdx+0x3a00cfa0],0x26
   140015160:	sub    edi,ecx
   140015162:	mov    cl,0xd8
   140015164:	push   rbp
   140015165:	push   rdx
   140015166:	mov    ebx,0xfc74b62a
   14001516b:	(bad)  
   14001516c:	add    al,ah
   14001516e:	(bad)  
   14001516f:	test   BYTE PTR [rbx],ah
   140015171:	imul   ebx,DWORD PTR [rcx+0x5ed229c8],0x5a
   140015178:	ret    0x173b
   14001517b:	adc    eax,0xcb4faa80
   140015180:	and    eax,DWORD PTR [rax]
   140015182:	push   rdx
   140015183:	or     BYTE PTR [rcx],al
   140015185:	or     al,0x22
   140015187:	add    eax,0x310a4331
   14001518c:	cs jo  0x1400151de
   14001518f:	rex.WR
   140015190:	rex.WRX or al,0x91
   140015193:	xor    dl,BYTE PTR [rcx]
   140015195:	adc    al,0x86
   140015197:	cwde   
   140015198:	pop    rcx
   140015199:	sbb    eax,0x9c4a2753
   14001519e:	cmp    BYTE PTR [rax],0x55
   1400151a1:	(bad)  
   1400151a2:	add    DWORD PTR [rbx+0x2],esi
   1400151a5:	push   rax
   1400151a6:	or     ah,dl
   1400151a8:	adc    al,0xa0
   1400151aa:	(bad)  
   1400151ab:	mov    dl,bh
   1400151ad:	retf   0x819c
   1400151b0:	cmp    BYTE PTR [rip+0x69d4e250],ah        # 0x1a9d63406
   1400151b6:	rex.WRX add BYTE PTR [rax],r11b
   1400151b9:	and    dh,BYTE PTR [rdx]
   1400151bb:	and    BYTE PTR [rdx+0x8],cl
   1400151be:	outs   dx,BYTE PTR ds:[rsi]
   1400151bf:	fwait
   1400151c0:	rex.XB and DWORD PTR [r8],eax
   1400151c3:	or     BYTE PTR [rbx-0x46],0x75
   1400151c7:	data16 mov dl,0x38
   1400151ca:	mov    esi,0x80418c74
   1400151cf:	and    eax,0x49510585
   1400151d4:	(bad)  
   1400151d5:	sub    DWORD PTR [rdx+0x5403ff3],0xde7502a4
   1400151df:	or     esi,DWORD PTR [rdx-0x1e]
   1400151e2:	(bad)  
   1400151e3:	imul   ecx,DWORD PTR [rsi+0xe],0x5e6abc58
   1400151ea:	imul   edx,ebx,0x3f26f8de
   1400151f0:	cmp    eax,0x558483e
   1400151f5:	mov    al,al
   1400151f7:	rex.WRX push rbp
   1400151f9:	movabs al,ds:0xf51970844ba16a68
   140015202:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015203:	push   rax
   140015204:	rex.XB and BYTE PTR [r14+0x21972192],al
   14001520b:	int3   
   14001520c:	(bad)  
   14001520e:	shr    BYTE PTR [rdx],0x92
   140015211:	and    BYTE PTR [rax+0x54],0x91
   140015215:	(bad)  
   140015216:	enter  0x9110,0x51
   14001521a:	(bad)  
   14001521b:	movabs ds:0x315d0055e67224,eax
   140015224:	adc    ecx,DWORD PTR [rsi+riz*1+0x2d768d70]
   14001522b:	repnz lea edx,[rdi+rax*1]
   14001522f:	gs stos BYTE PTR es:[rdi],al
   140015231:	(bad)  
   140015232:	cli    
   140015233:	rex adc eax,0xb888a802
   140015239:	jrcxz  0x1400151e2
   14001523b:	sub    eax,0x4ca02dc7
   140015240:	add    eax,0x213e43a5
   140015245:	push   rcx
   140015246:	(bad)  
   140015247:	adc    al,0x20
   140015249:	adc    BYTE PTR [rax],dh
   14001524b:	stos   BYTE PTR es:[rdi],al
   14001524c:	stos   BYTE PTR es:[rdi],al
   14001524d:	and    DWORD PTR [rdi+0x54e2675],edx
   140015253:	xchg   edi,eax
   140015254:	mov    DWORD PTR [rbx],eax
   140015256:	ror    ecx,1
   140015258:	xchg   DWORD PTR [rbp-0x67],ecx
   14001525b:	(bad)  
   14001525c:	xchg   esi,eax
   14001525d:	(bad)  
   14001525e:	sub    ecx,0x6db40003
   140015264:	cli    
   140015265:	lock mov bh,0x44
   140015268:	fistp  WORD PTR [rdi+0x17]
   14001526b:	(bad)  
   14001526c:	pcmpeqb mm6,QWORD PTR [rip+0xffffffffe0004000]        # 0x120019273
   140015273:	(bad)  
   140015274:	fdivrp st(5),st
   140015276:	xchg   esi,eax
   140015277:	push   rbp
   140015278:	add    BYTE PTR [rdi-0xd405806],ch
   14001527e:	icebp  
   14001527f:	(bad)  
   140015280:	xor    bl,BYTE PTR [rbx-0x60285901]
   140015286:	jg     0x1400152d5
   140015288:	(bad)  
   140015289:	cmc    
   14001528a:	not    DWORD PTR [rdx]
   14001528c:	fwait
   14001528d:	mov    esi,0x60291088
   140015292:	or     ebp,DWORD PTR [rbx+0x8]
   140015295:	mov    BYTE PTR fs:[rdi+rdx*1+0x7514e095],bl
   14001529d:	and    dl,BYTE PTR [rdx+0x36]
   1400152a0:	mov    esp,0xcc4a440b
   1400152a5:	mov    ?,WORD PTR [rdi]
   1400152a7:	rex.WRB pop QWORD PTR [r11-0x61563a5b]
   1400152ae:	add    DWORD PTR [rsp+rcx*8+0x2a],esi
   1400152b2:	out    dx,al
   1400152b3:	pop    rbx
   1400152b4:	in     al,dx
   1400152b5:	xchg   ebx,eax
   1400152b6:	xchg   esp,eax
   1400152b7:	(bad)  
   1400152b8:	or     ch,ah
   1400152ba:	clc    
   1400152bb:	jmp    0x161058568
   1400152c0:	cmp    BYTE PTR [rax],dl
   1400152c2:	push   rbp
   1400152c3:	rex.WB pop r9
   1400152c5:	jge    0x1400152ec
   1400152c7:	ins    DWORD PTR es:[rdi],dx
   1400152c8:	and    DWORD PTR [rdx],esi
   1400152ca:	jle    0x1400152ed
   1400152cc:	rex.WB push r9
   1400152ce:	push   rdx
   1400152cf:	adc    DWORD PTR [rax],edx
   1400152d1:	imul   ebx,DWORD PTR [rcx-0x7],0x58b1d59f
   1400152d8:	xor    BYTE PTR [rsi+0x110c28a5],ch
   1400152de:	rex.XB sbb al,0x23
   1400152e1:	clc    
   1400152e2:	rex.X jle 0x140015331
   1400152e5:	retf   0x5ec4
   1400152e8:	cld    
   1400152e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400152ea:	and    BYTE PTR [rsi-0x40],cl
   1400152ed:	mov    BYTE PTR fs:[rax],bh
   1400152f0:	and    eax,0x2654ab7
   1400152f5:	loop   0x14001530b
   1400152f7:	sub    DWORD PTR [rax-0x3b9aefcd],r9d
   1400152fe:	es add edx,eax
   140015301:	(bad)  
   140015302:	(bad)  
   140015304:	loop   0x1400152ca
   140015306:	rex.X adc esp,DWORD PTR [rdi-0x55]
   14001530a:	ret    
   14001530b:	adc    ch,dl
   14001530d:	stos   BYTE PTR es:[rdi],al
   14001530e:	(bad)  
   14001530f:	sti    
   140015310:	sub    DWORD PTR [rdi+0x6f3b545e],edi
   140015316:	mov    esp,0x9530b483
   14001531b:	pop    rdx
   14001531c:	pop    rcx
   14001531d:	mov    ecx,0x1756a754
   140015322:	rex.WR
   140015323:	fs (bad) 
   140015325:	test   ecx,edi
   140015327:	rex.R adc eax,0xa81203a5
   14001532d:	cmp    ch,cl
   14001532f:	stos   BYTE PTR es:[rdi],al
   140015330:	add    al,0xb5
   140015332:	lock (bad) 
   140015334:	cmp    BYTE PTR [rdx],ch
   140015336:	rol    BYTE PTR [rcx],0x0
   140015339:	push   rsi
   14001533a:	iret   
   14001533b:	adc    BYTE PTR [rdx+0x44],cl
   14001533e:	adc    dh,BYTE PTR [rdx]
   140015340:	std    
   140015341:	pop    rbp
   140015342:	sub    dh,BYTE PTR [rdx]
   140015344:	movabs al,ds:0x87d766b96e419aec
   14001534d:	push   rax
   14001534e:	addr32 cld 
   140015350:	rex
   140015351:	rex.W
   140015352:	rex.RB or eax,0x1739d988
   140015358:	xchg   ebp,eax
   140015359:	rex.WB fstp QWORD PTR [r11+0x4a06ab53]
   140015360:	rex.RX mov BYTE PTR [rdx-0x27facd6d],r8b
   140015367:	adc    BYTE PTR [rcx+0x42],ch
   14001536a:	or     al,BYTE PTR [rsi]
   14001536c:	xor    DWORD PTR [rcx+0x1a92570b],edx
   140015372:	(bad)  
   140015374:	(bad)  
   140015375:	xor    ch,dh
   140015377:	(bad)  
   140015378:	adc    eax,ecx
   14001537a:	and    BYTE PTR [rdx],bl
   14001537c:	hlt    
   14001537d:	(bad)  
   14001537e:	and    DWORD PTR [rsi-0x45188635],edi
   140015384:	xchg   DWORD PTR [rdi],edx
   140015386:	test   DWORD PTR [rcx+riz*2-0x6b],ecx
   14001538a:	rex.WXB add rax,0x5a5aaa97
   140015390:	(bad)  
   140015391:	rex.X push rbp
   140015393:	add    al,0x96
   140015395:	sub    al,0x39
   140015397:	out    0xa5,eax
   140015399:	mov    BYTE PTR [rbx+0x0],dh
   14001539c:	rex.XB mov r10d,0x6dbf8e2
   1400153a2:	sub    BYTE PTR [rsi+0x2a],0x36
   1400153a6:	(bad)  
   1400153a7:	pop    rbp
   1400153a8:	rex.X mov dil,0xb4
   1400153ab:	cmovl  ebx,DWORD PTR [rip+0x6cbaf087]        # 0x1acbc4439
   1400153b2:	sti    
   1400153b3:	xor    bh,BYTE PTR [rdx]
   1400153b5:	(bad)  
   1400153b6:	jmp    0x14001537e
   1400153b8:	clc    
   1400153b9:	sub    DWORD PTR [rsi+0x902266],0xfb3f7dc0
   1400153c3:	add    ebx,DWORD PTR [rdi]
   1400153c5:	add    edx,ecx
   1400153c7:	and    eax,DWORD PTR [rax+0x4ec50ede]
   1400153cd:	(bad)  
   1400153ce:	rex.WRX neg bpl
   1400153d1:	cmc    
   1400153d2:	test   DWORD PTR [rsi+0x73b8b64],0xd37d378b
   1400153dc:	rex.WXB
   1400153dd:	rex.WR fimul DWORD PTR [rbx+0x76]
   1400153e1:	sbb    al,0x7c
   1400153e3:	shr    DWORD PTR [rbx],1
   1400153e5:	(bad)  
   1400153e6:	leave  
   1400153e7:	(bad)  
   1400153e8:	pop    rcx
   1400153e9:	mov    edi,0xd4ea03bf
   1400153ee:	rex.WB sub rax,0x738a0e4b
   1400153f4:	xor    eax,0x36009e0d
   1400153f9:	(bad)  
   1400153fa:	(bad)  
   1400153fb:	mov    ah,0x9f
   1400153fd:	or     al,0x41
   1400153ff:	rex
   140015400:	rex.RXB shr r12b,0x4
   140015404:	sub    eax,0x66011
   140015409:	je     0x14001544f
   14001540b:	shl    BYTE PTR [rbx+0x2a44bd04],1
   140015411:	stos   DWORD PTR es:[rdi],eax
   140015412:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015413:	mov    edx,0xb9576a4a
   140015418:	int3   
   140015419:	iret   
   14001541a:	rex.X
   14001541b:	gs pop rsp
   14001541d:	sbb    DWORD PTR [rax+0x65530422],ebx
   140015423:	jb     0x14001545e
   140015425:	push   rdx
   140015426:	out    dx,eax
   140015427:	jo     0x14001545d
   140015429:	push   rax
   14001542a:	(bad)  
   14001542b:	xor    eax,0xe9420154
   140015430:	and    eax,0xef504974
   140015435:	(bad)  
   140015436:	jo     0x14001548a
   140015438:	adc    al,0x7e
   14001543a:	(bad)  
   14001543b:	xor    edx,DWORD PTR [rcx]
   14001543d:	xor    DWORD PTR [rcx+rdi*4],ebp
   140015440:	jns    0x140015450
   140015442:	(bad)  
   140015443:	push   rdx
   140015444:	or     dh,BYTE PTR [eax]
   140015447:	sbb    BYTE PTR [rcx],cl
   140015449:	enter  0x2b0,0xa9
   14001544d:	xor    ebp,DWORD PTR [rbx]
   14001544f:	cmp    BYTE PTR [rcx],ah
   140015451:	(bad)  
   140015452:	jrcxz  0x14001547a
   140015454:	and    DWORD PTR [rax-0x56],edx
   140015457:	(bad)  
   140015458:	sbb    DWORD PTR [rax+0x194179bc],ebx
   14001545e:	adc    DWORD PTR [rdi+0x60434e2],esp
   140015464:	jae    0x140015468
   140015466:	(bad)  
   140015467:	(bad)
   14001546b:	nop
   14001546c:	add    DWORD PTR [rbx],edi
   14001546e:	in     eax,dx
   14001546f:	rol    DWORD PTR [rdx+0x7b],0x20
   140015473:	sub    BYTE PTR [rbx+0x5a838b42],al
   140015479:	sub    eax,0x61725850
   14001547e:	mov    ecx,0x5729ce12
   140015483:	test   eax,0xd4a6e495
   140015488:	sub    esp,DWORD PTR [rcx+0x155bd52]
   14001548e:	or     edx,DWORD PTR [rax+0x240ef3f5]
   140015494:	mov    BYTE PTR [rdx+0x78],ah
   140015497:	int    0x97
   140015499:	jge    0x140015423
   14001549b:	rex.RX cmp al,0xe
   14001549e:	add    al,0xf5
   1400154a0:	retf   0x9532
   1400154a3:	push   rsp
   1400154a4:	add    eax,0x6544aa03
   1400154a9:	(bad)  
   1400154aa:	xor    esi,DWORD PTR [rax]
   1400154ac:	pop    rax
   1400154ad:	and    DWORD PTR [rcx+riz*1],ecx
   1400154b0:	addr32 (bad) 
   1400154b2:	xchg   ebx,eax
   1400154b3:	cmp    BYTE PTR [rbp-0x392e163f],cl
   1400154b9:	xor    esp,DWORD PTR [rdx+rax*1-0x15]
   1400154bd:	rex.WRB
   1400154be:	or     eax,DWORD PTR es:[rbx+0x4c]
   1400154c2:	rex.RX mov DWORD PTR [rcx+0xc2c128d],r11d
   1400154c9:	adc    ah,BYTE PTR [rdx]
   1400154cb:	push   rdx
   1400154cc:	(bad)  
   1400154cd:	pop    rdi
   1400154ce:	lahf   
   1400154cf:	(bad)  
   1400154d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400154d1:	xchg   r10,rax
   1400154d3:	sub    al,0xb2
   1400154d5:	xor    edx,ecx
   1400154d7:	xchg   BYTE PTR [rip+0x25c025c4],al        # 0x165c17aa1
   1400154dd:	rol    BYTE PTR [rip+0xffffffff88854a94],0x28        # 0xc8869f78
   1400154e4:	pop    rcx
   1400154e5:	(bad)  
   1400154e6:	sub    eax,0xaa60f0ad
   1400154eb:	or     DWORD PTR [rax+0x4bdc818d],esi
   1400154f1:	rex.WR out dx,eax
   1400154f3:	cdq    
   1400154f4:	cmc    
   1400154f5:	jl     0x140015559
   1400154f7:	cmp    eax,DWORD PTR [rcx]
   1400154f9:	jrcxz  0x14001552a
   1400154fb:	std    
   1400154fc:	(bad)  
   1400154fd:	iret   
   1400154fe:	jl     0x140015506
   140015500:	mov    ch,0xd4
   140015502:	outs   dx,BYTE PTR ds:[rsi]
   140015503:	jnp    0x1400154f8
   140015505:	fcmovnbe st,st(2)
   140015507:	mov    esi,0xb7f3c49d
   14001550c:	loop   0x1400154e6
   14001550e:	jnp    0x140015546
   140015510:	je     0x14001553f
   140015512:	xor    al,BYTE PTR [rcx]
   140015514:	sub    eax,0x78a017a0
   140015519:	add    al,0x44
   14001551b:	or     ebp,DWORD PTR [rdx]
   14001551d:	sar    BYTE PTR [rdi],cl
   14001551f:	jae    0x140015500
   140015521:	xchg   DWORD PTR [rsi],ebx
   140015523:	(bad)  
   140015524:	shl    bl,1
   140015526:	and    al,0xbd
   140015528:	xchg   edi,eax
   140015529:	rex.WR rcl BYTE PTR [rbx-0x4f],cl
   14001552d:	sbb    DWORD PTR [rdi],esp
   14001552f:	pop    rcx
   140015530:	rex.RX (bad) 
   140015532:	cwde   
   140015533:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015534:	fwait
   140015535:	out    dx,al
   140015536:	fdivr  DWORD PTR [rip+0xffffffffaec8ffbf]        # 0xeeca54fb
   14001553c:	fimul  WORD PTR [rsi-0x5a4d4403]
   140015542:	popf   
   140015543:	mov    ebx,0xedba1e76
   140015548:	gs rex.WB scas rax,QWORD PTR es:[rdi]
   14001554b:	xlat   BYTE PTR ds:[rbx]
   14001554c:	out    dx,eax
   14001554d:	movhps xmm1,QWORD PTR [rsi-0x4f6dced0]
   140015554:	out    dx,al
   140015555:	ins    BYTE PTR es:[rdi],dx
   140015556:	cwde   
   140015557:	rex.WRB out 0xbd,eax
   14001555a:	retf   0x2bc1
   14001555d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001555e:	rex.WR jge 0x140015571
   140015561:	sbb    eax,0x511d101
   140015566:	rex.XB mov DWORD PTR [r8],esp
   140015569:	pushf  
   14001556a:	add    ah,BYTE PTR [rsi-0x179ffff1]
   140015570:	xchg   ebx,eax
   140015571:	add    al,al
   140015573:	push   0xffffffffffffff9f
   140015575:	add    al,0x74
   140015577:	rex.R push rdx
   140015579:	sahf   
   14001557a:	xor    esp,DWORD PTR [rdx+0x57]
   14001557d:	and    ebp,esp
   14001557f:	push   0xffffffffffffff88
   140015581:	mov    gs,WORD PTR [rcx+0x6a858108]
   140015587:	mov    edi,0x141cd3bc
   14001558c:	add    BYTE PTR [rcx+rdx*2-0x6c0feffc],cl
   140015593:	xor    ch,BYTE PTR [rdx]
   140015595:	rex.RXB xchg r11d,eax
   140015597:	not    DWORD PTR [rbx+0x78]
   14001559a:	icebp  
   14001559b:	int    0x64
   14001559d:	rex.B
   14001559e:	rex.WX xchg rsi,rax
   1400155a0:	cwde   
   1400155a1:	mov    BYTE PTR [rcx],dl
   1400155a3:	rol    BYTE PTR [rcx-0x6b9eab77],0x60
   1400155aa:	rex
   1400155ab:	add    BYTE PTR fs:[rsi+0x1a],dh
   1400155af:	test   bl,bh
   1400155b1:	sbb    BYTE PTR [rax],dl
   1400155b3:	adc    ah,BYTE PTR [rbp+0x4e]
   1400155b6:	adc    eax,0xa1ed7994
   1400155bb:	rex.RXB (bad) 
   1400155bd:	cmp    eax,0x285a6761
   1400155c2:	xchg   ecx,eax
   1400155c3:	(bad)  
   1400155c4:	(bad)  
   1400155c6:	loop   0x140015548
   1400155c8:	(bad)  
   1400155c9:	adc    BYTE PTR [rbx+0x42],dl
   1400155cc:	jo     0x140015598
   1400155ce:	adc    ebx,0xffffffb8
   1400155d1:	adc    eax,0x53b8e44c
   1400155d6:	pop    rbp
   1400155d7:	xchg   edx,eax
   1400155d8:	cmpps  xmm4,XMMWORD PTR [rax],0x55
   1400155dc:	mov    ch,0xc4
   1400155de:	sub    BYTE PTR [rip+0x495928],dl        # 0x1404aaf0c
   1400155e4:	xchg   esp,eax
   1400155e5:	(bad)  
   1400155e6:	mov    bh,0x60
   1400155e8:	lods   al,BYTE PTR ds:[rsi]
   1400155e9:	nop
   1400155ea:	or     al,BYTE PTR [rcx-0x57b6f454]
   1400155f0:	and    BYTE PTR [rax+0x2d],0xa0
   1400155f4:	or     al,0xaa
   1400155f6:	(bad)  
   1400155f7:	pop    rax
   1400155f8:	jns    0x111e83a8b
   1400155fe:	or     DWORD PTR [rcx+0x30d11bdc],0x8421c033
   140015608:	or     BYTE PTR [rax-0x43e50428],0x3
   14001560f:	movabs al,ds:0xceaaa301589422d2
   140015618:	in     al,0x2
   14001561a:	sbb    DWORD PTR [rip+0xffffffffd6312261],edx        # 0x116327881
   140015620:	(bad)  
   140015621:	rex.B
   140015622:	rex.W je 0x140015631
   140015625:	xchg   esi,eax
   140015626:	xchg   esp,eax
   140015627:	(bad)  
   140015628:	add    DWORD PTR [rsi+riz*4],ecx
   14001562b:	fcmovnu st,st(6)
   14001562d:	mov    dl,BYTE PTR [rdx+rbp*2]
   140015630:	adc    al,BYTE PTR [rdx-0x7b6d66b7]
   140015636:	rex.WB adc al,BYTE PTR [r14+0x7c28ab32]
   14001563d:	pop    rsp
   14001563e:	leave  
   14001563f:	and    eax,0xa3d339fa
   140015644:	jae    0x1400156a8
   140015646:	rcl    DWORD PTR [rbp+0x5feefaab],cl
   14001564c:	sbb    bl,ah
   14001564e:	(bad)  
   14001564f:	test   eax,0xd89b9f2f
   140015654:	rex.WRX jbe 0x1400156d3
   140015657:	(bad)  
   140015658:	es and eax,0x6fb6db79
   14001565e:	(bad)  
   14001565f:	icebp  
   140015660:	test   BYTE PTR [rdi+0x18],cl
   140015663:	cmp    dl,BYTE PTR [rdi-0x7b]
   140015666:	icebp  
   140015667:	add    ebx,DWORD PTR [rbp+0x75]
   14001566a:	add    BYTE PTR [rax-0x4],bh
   14001566d:	(bad)  
   14001566e:	jno    0x140015675
   140015670:	mov    al,0x71
   140015672:	ror    DWORD PTR [rbp+0x3bbcb787],cl
   140015678:	sub    BYTE PTR [rax-0x5e],bh
   14001567b:	lea    edx,[rbp+rax*4+0x2912e941]
   140015682:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015683:	enter  0x33,0xbd
   140015687:	addr32 (bad) 
   140015689:	cli    
   14001568a:	je     0x140015702
   14001568c:	loope  0x140015659
   14001568e:	lahf   
   14001568f:	in     eax,dx
   140015690:	xchg   ebx,eax
   140015691:	xor    DWORD PTR [rbp-0x37],edi
   140015694:	repz rex.WR movabs rax,ds:0xc9001256a7a6363d
   14001569f:	lea    ebp,[rdi-0x4]
   1400156a2:	(bad)  
   1400156a3:	ja     0x14001563f
   1400156a5:	inc    dl
   1400156a7:	ret    0xfefc
   1400156aa:	fwait
   1400156ab:	mov    cs,WORD PTR [rsi+rdx*1]
   1400156ae:	push   rdi
   1400156af:	jbe    0x1400156de
   1400156b1:	in     eax,dx
   1400156b2:	mov    ebp,0x37ac96f1
   1400156b7:	fcomp  DWORD PTR [rcx+0x427cd965]
   1400156bd:	add    al,0x6
   1400156bf:	ret    
   1400156c0:	mov    eax,0xfc087e1
   1400156c5:	adc    eax,0x8403105f
   1400156ca:	and    eax,DWORD PTR [rdx]
   1400156cc:	add    dl,BYTE PTR [rcx]
   1400156ce:	(bad)  
   1400156cf:	adc    DWORD PTR [rax],edx
   1400156d1:	(bad)  
   1400156d2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400156d3:	sub    BYTE PTR [rbp-0x76],bh
   1400156d6:	(bad)  
   1400156d7:	adc    DWORD PTR [rsi],ebp
   1400156d9:	adc    DWORD PTR [rbp+rdx*4+0x44],esi
   1400156dd:	(bad)  
   1400156de:	rex
   1400156df:	gs int3 
   1400156e1:	push   0xffffffffffffff8f
   1400156e3:	add    ecx,DWORD PTR [rdx]
   1400156e5:	push   rbx
   1400156e6:	mov    cs,WORD PTR [rsi-0xef06e85]
   1400156ec:	(bad)  
   1400156ed:	xor    DWORD PTR [rsi],0x34
   1400156f0:	(bad)  
   1400156f1:	out    dx,eax
   1400156f2:	xor    BYTE PTR [rdx],dh
   1400156f4:	rex.RX movabs ds:0x707a889a61b25c4,eax
   1400156fe:	xchg   DWORD PTR [rbp+0x25d9400c],eax
   140015704:	rex.WXB xor dl,BYTE PTR [r10+r13*2]
   140015708:	loopne 0x1400156ec
   14001570a:	push   0xffffffffffffffe4
   14001570c:	lods   al,BYTE PTR ds:[rsi]
   14001570d:	or     dh,BYTE PTR [rdx]
   14001570f:	jo     0x140015696
   140015711:	rex.WRB push r10
   140015713:	adc    BYTE PTR [rip+0x673aae44],ah        # 0x1a73c055d
   140015719:	xor    BYTE PTR [rbx],dl
   14001571b:	or     BYTE PTR [rdx+rbx*2+0x3103da76],bl
   140015722:	add    BYTE PTR [edx],dh
   140015725:	(bad)  
   140015727:	repz and BYTE PTR [rax-0x3bbd96f0],dl
   14001572e:	rex.RX rol BYTE PTR [rsi-0x234737c4],0x7
   140015736:	stos   BYTE PTR es:[rdi],al
   140015737:	movabs ds:0x51687bbc7a7e2c6f,al
   140015740:	data16 mov BYTE PTR [edx-0x7af4d8fc],bh
   140015748:	add    eax,0xcc3ea971
   14001574d:	test   eax,0x40e4b50
   140015752:	sub    bl,bh
   140015754:	add    eax,edx
   140015756:	and    dh,BYTE PTR ss:[rcx-0x2]
   14001575a:	adc    eax,0x55301abf
   14001575f:	rex.WRX js 0x1400157d7
   140015762:	pop    rcx
   140015763:	xchg   esp,eax
   140015764:	add    DWORD PTR [rsi],ebx
   140015766:	cmp    eax,0xedfbb60
   14001576b:	scas   eax,DWORD PTR es:[rdi]
   14001576c:	fucom  st(4)
   14001576e:	or     al,0x82
   140015770:	sub    dh,BYTE PTR [rcx+0x6aa241db]
   140015776:	push   rsp
   140015777:	mov    DWORD PTR [rbp-0x6b],edx
   14001577a:	rex.WB test rax,0x5a67b004
   140015780:	adc    al,0x60
   140015782:	cmp    al,0x5c
   140015784:	(bad)  
   140015785:	scas   eax,DWORD PTR es:[rdi]
   140015786:	add    bl,al
   140015788:	and    al,0x64
   14001578a:	rcr    BYTE PTR [rdx+rdx*8+0x494860b2],cl
   140015791:	rex.WR test rax,0xffffffff80318251
   140015797:	and    DWORD PTR [rsi-0x66],eax
   14001579a:	adc    BYTE PTR [rbp-0x1b644b32],ah
   1400157a0:	mov    ch,0x12
   1400157a2:	pop    rax
   1400157a3:	jl     0x14001572b
   1400157a5:	push   rdi
   1400157a6:	ficomp WORD PTR [rax-0x4fcb919e]
   1400157ac:	std    
   1400157ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400157ae:	jnp    0x140015829
   1400157b0:	mov    edx,0x33a638b5
   1400157b5:	repz mov WORD PTR [rbx+0x6fb5833d],cs
   1400157bc:	jg     0x1400157a7
   1400157be:	adc    DWORD PTR [rdi+0x1b],0x8e27c1a6
   1400157c5:	sahf   
   1400157c6:	outs   dx,BYTE PTR ds:[rsi]
   1400157c7:	pushf  
   1400157c8:	rex.RXB test r13b,r10b
   1400157cb:	(bad)  
   1400157cc:	fdivp  st(7),st
   1400157ce:	or     eax,0x81d0
   1400157d3:	orps   xmm1,XMMWORD PTR [rcx+0x44]
   1400157d7:	push   r12
   1400157d9:	jmp    FWORD PTR [rbx]
   1400157db:	(bad)  
   1400157dc:	or     DWORD PTR [rax-0x74],esp
   1400157df:	movabs es:0xacff8c9305bfad17,eax
   1400157e9:	adc    edi,DWORD PTR [rax-0x2]
   1400157ec:	mov    dh,0xe8
   1400157ee:	sbb    dl,BYTE PTR [rbp+0x389e0304]
   1400157f4:	jno    0x1400157b2
   1400157f6:	mov    dl,BYTE PTR [rip+0xffffffffbe6fdbc7]        # 0xfe7133c3
   1400157fc:	icebp  
   1400157fd:	mov    al,0x67
   1400157ff:	xchg   ebx,eax
   140015800:	(bad)  
   140015801:	jrcxz  0x140015796
   140015803:	xor    DWORD PTR [rcx+rdx*2+0x56caa9c0],ebp
   14001580a:	xor    bh,BYTE PTR [rax-0x7621348c]
   140015810:	jnp    0x140015810
   140015812:	retf   
   140015813:	push   rcx
   140015814:	sub    BYTE PTR [rdx+0xa],bh
   140015817:	in     eax,dx
   140015818:	add    ebp,eax
   14001581a:	add    DWORD PTR [rcx+rdx*4-0x4581e75],edx
   140015821:	out    dx,al
   140015822:	(bad)  
   140015823:	scas   al,BYTE PTR es:[rdi]
   140015824:	pop    rbx
   140015825:	sar    cl,cl
   140015827:	in     eax,0x85
   140015829:	test   DWORD PTR [rbx+0x2f],eax
   14001582c:	cmp    ah,BYTE PTR [rdx+0x7a]
   14001582f:	cmp    DWORD PTR [rcx+0x71dd377d],0x77
   140015836:	(bad)  
   140015838:	int    0xf
   14001583a:	(bad)  
   14001583b:	jae    0x1400157f8
   14001583d:	or     al,0x11
   14001583f:	push   rdx
   140015840:	jrcxz  0x1400158a4
   140015842:	pop    rcx
   140015843:	sbb    DWORD PTR [rip+0x40154569],eax        # 0x180169db2
   140015849:	cmp    BYTE PTR [rdi-0x4ff750cc],dh
   14001584f:	movabs ds:0x285148a182c47cc,al
   140015858:	test   DWORD PTR [rcx],ebx
   14001585a:	add    al,al
   14001585c:	mov    BYTE PTR [rcx-0x31],cl
   14001585f:	xchg   edx,eax
   140015860:	(bad)  
   140015861:	or     BYTE PTR [rcx],ch
   140015863:	iret   
   140015864:	xor    esp,eax
   140015866:	cdq    
   140015867:	(bad)  
   140015868:	mov    dh,0x38
   14001586a:	or     esi,DWORD PTR [rbp-0x7e3f1fc7]
   140015870:	pop    rax
   140015871:	sbb    ebx,DWORD PTR [rdx+0x383824c3]
   140015877:	int    0xc1
   140015879:	cmp    esp,DWORD PTR [rdi]
   14001587b:	test   BYTE PTR [rdx],dl
   14001587e:	(bad)  
   14001587f:	jmp    0x140015836
   140015881:	jne    0x1400158df
   140015883:	ror    BYTE PTR [rbx+rcx*1+0x3b99f9c3],cl
   14001588a:	mov    fs,WORD PTR [rcx-0x68]
   14001588d:	adc    ah,ch
   14001588f:	push   0x42
   140015891:	rex.X
   140015892:	sbb    BYTE PTR fs:[rax+0x4a],al
   140015896:	in     al,dx
   140015897:	int3   
   140015898:	or     dl,BYTE PTR [rax-0x1dc35e8f]
   14001589e:	xchg   esp,eax
   14001589f:	mov    DWORD PTR [rip+0xffffffffd9f51040],ebx        # 0x119f668e5
   1400158a5:	jo     0x1400158b1
   1400158a7:	idiv   DWORD PTR [rbx]
   1400158a9:	(bad)  
   1400158aa:	or     bh,BYTE PTR [rcx+0xf]
   1400158ad:	xchg   esp,eax
   1400158ae:	(bad)  
   1400158af:	loopne 0x140015871
   1400158b1:	xchg   al,cl
   1400158b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400158b4:	(bad)  
   1400158b5:	mov    ecx,0xebe142f6
   1400158ba:	mov    dh,0x38
   1400158bc:	lahf   
   1400158bd:	or     DWORD PTR [rdi-0xc],0x71
   1400158c1:	jmp    0xe509eefa
   1400158c6:	rex.X lods eax,DWORD PTR ds:[rsi]
   1400158c8:	(bad)  
   1400158c9:	sbb    al,0x50
   1400158cb:	rex add eax,0x3b9254c
   1400158d1:	lods   al,BYTE PTR ds:[rsi]
   1400158d2:	outs   dx,DWORD PTR ds:[rsi]
   1400158d3:	mov    esp,0x89270a07
   1400158d8:	adc    DWORD PTR [rbx],edi
   1400158da:	and    ecx,DWORD PTR [rcx]
   1400158dc:	movabs eax,ds:0xcfb5022f5692a6c4
   1400158e5:	adc    ah,BYTE PTR [rbp+0x70]
   1400158e8:	xor    DWORD PTR [rax],0x69
   1400158eb:	sets   BYTE PTR [rsi+0x2]
   1400158ef:	ins    BYTE PTR es:[rdi],dx
   1400158f0:	lods   eax,DWORD PTR ds:[rsi]
   1400158f1:	pop    rbp
   1400158f2:	cmp    ch,BYTE PTR [rcx+0x45]
   1400158f5:	mov    esp,0xcc155783
   1400158fa:	push   rsp
   1400158fb:	stos   BYTE PTR es:[rdi],al
   1400158fc:	xor    bl,BYTE PTR [rbx-0x39bddccc]
   140015902:	ins    BYTE PTR es:[rdi],dx
   140015903:	mov    dl,0xc4
   140015905:	jo     0x1400158b1
   140015907:	sub    DWORD PTR [rcx+rcx*1+0x30],0xb
   14001590c:	pop    rbp
   14001590d:	xlat   BYTE PTR ds:[rbx]
   14001590e:	pop    rcx
   14001590f:	in     al,dx
   140015910:	sbb    edi,DWORD PTR [rdi+riz*8+0x2b]
   140015914:	outs   dx,DWORD PTR ds:[rsi]
   140015915:	fdivr  st(3),st
   140015917:	hlt    
   140015918:	fsub   DWORD PTR [rax-0x1c80c8c9]
   14001591e:	jmp    0x17fb5db74
   140015923:	(bad)  
   140015924:	or     DWORD PTR ss:[rsi-0x26],ebp
   140015928:	cmp    ecx,DWORD PTR [rdi-0x7625e069]
   14001592e:	pop    rdi
   14001592f:	mov    ebp,0x2b76abe7
   140015934:	scas   eax,DWORD PTR es:[rdi]
   140015935:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015936:	add    dh,BYTE PTR [rbx]
   140015938:	loope  0x140015906
   14001593a:	out    0x89,al
   14001593c:	(bad)  
   14001593d:	jg     0x140015921
   14001593f:	in     al,dx
   140015940:	std    
   140015941:	(bad)  
   140015942:	cmp    BYTE PTR [rcx-0x66708b5a],cl
   140015948:	(bad)  
   140015949:	push   rsi
   14001594a:	repz sub DWORD PTR [rbx-0x38],0x335d31f4
   140015952:	add    BYTE PTR [rax-0x67bca1ba],bl
   140015958:	stos   BYTE PTR es:[rdi],al
   140015959:	(bad)  
   14001595a:	add    r9b,r8b
   14001595d:	ds add esp,0xffffffa9
   140015961:	mov    ebp,0x195242e
   140015966:	rex.W loope 0x1400159d5
   140015969:	(bad)
   14001596c:	std    
   14001596d:	(bad)  
   14001596e:	(bad)  
   14001596f:	adc    cl,BYTE PTR [rax+0x54f680fa]
   140015975:	mov    ch,0xff
   140015977:	xor    BYTE PTR [rax+0x45064207],ch
   14001597d:	xor    bl,al
   14001597f:	jae    0x1400159e9
   140015981:	jno    0x14001596a
   140015983:	sbb    eax,0xc1d6e77f
   140015988:	scas   al,BYTE PTR es:[rdi]
   140015989:	std    
   14001598a:	jnp    0x140015a07
   14001598c:	retf   
   14001598d:	jnp    0x140015a05
   14001598f:	scas   eax,DWORD PTR es:[rdi]
   140015990:	in     al,dx
   140015991:	(bad)  
   140015992:	jl     0x14001596f
   140015994:	ret    0xcae2
   140015997:	repnz (bad) 
   140015999:	jle    0x1400159fc
   14001599b:	pop    rdi
   14001599c:	(bad)  
   14001599d:	rex.WR (bad) 
   14001599f:	rex.WXB or al,0xc
   1400159a2:	or     DWORD PTR [rdx+0x66],edi
   1400159a5:	push   rdx
   1400159a6:	jae    0x1400159c8
   1400159a8:	add    cl,BYTE PTR [rdx]
   1400159aa:	rex.RB pop r15
   1400159ac:	and    DWORD PTR [rbx],0xa4d412a5
   1400159b2:	(bad)  
   1400159b3:	sub    ebp,edx
   1400159b5:	jmp    0x15ed1d388
   1400159ba:	movabs al,ds:0x2a493e5b22308967
   1400159c3:	movsxd eax,DWORD PTR [rsi+0x31d50b3d]
   1400159c9:	fcomi  st,st(1)
   1400159cb:	cmp    DWORD PTR [rax+0x13b41c1b],esp
   1400159d1:	sbb    al,0x6a
   1400159d3:	rol    edx,cl
   1400159d5:	cdq    
   1400159d6:	int3   
   1400159d7:	ds loop 0x1400159bb
   1400159da:	or     r8,QWORD PTR [r10]
   1400159dd:	fmul   DWORD PTR [rbp+0x3a]
   1400159e0:	adc    al,0x2
   1400159e2:	adc    ebp,0xf8bb3725
   1400159e8:	test   DWORD PTR [rbx-0x63f8c40b],ecx
   1400159ee:	(bad)  
   1400159ef:	add    al,0x66
   1400159f1:	mov    QWORD PTR [rax+r10*8+0x2],r9
   1400159f6:	mov    esp,0x882940e6
   1400159fb:	jnp    0x140015983
   1400159fd:	mov    ecx,0x48b4ce47
   140015a02:	mov    DWORD PTR [rip+0xffffffff8608f818],edi        # 0xc60a5220
   140015a08:	mov    ebx,DWORD PTR [rax+rsi*2-0x1e]
   140015a0c:	loop   0x140015a2f
   140015a0e:	pop    rsi
   140015a0f:	jns    0x140015a41
   140015a11:	sbb    BYTE PTR [rbx-0x54f5b711],0xa0
   140015a18:	xchg   esp,eax
   140015a19:	lods   eax,DWORD PTR ds:[rsi]
   140015a1a:	xchg   esi,eax
   140015a1b:	stos   BYTE PTR es:[rdi],al
   140015a1c:	xor    BYTE PTR [rdx+rbp*2],ah
   140015a1f:	(bad)  
   140015a20:	sbb    ah,BYTE PTR [rdx]
   140015a22:	push   rcx
   140015a23:	push   0x6a10fce1
   140015a28:	adc    DWORD PTR [rax-0x3e],eax
   140015a2b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015a2c:	push   rbp
   140015a2d:	sub    ebx,esp
   140015a2f:	mov    esp,0x50c9710b
   140015a34:	and    al,0x60
   140015a36:	mov    BYTE PTR [rdi],ch
   140015a38:	(bad)  
   140015a39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015a3a:	rex.X scas al,BYTE PTR es:[rdi]
   140015a3c:	(bad)  
   140015a3d:	adc    bh,0x10
   140015a40:	(bad)  
   140015a41:	sti    
   140015a42:	and    ebx,DWORD PTR [rsi+rcx*1-0x21]
   140015a46:	adc    al,0x13
   140015a48:	rcl    BYTE PTR [rsi],0xa3
   140015a4b:	rex.WXB jbe 0x140015ab6
   140015a4e:	retf   0x98d2
   140015a51:	(bad)  
   140015a52:	mov    esp,0xb5382c69
   140015a57:	push   rsi
   140015a58:	add    BYTE PTR [rsi+0x33],cl
   140015a5b:	movabs es:0xdc03b18d86270d84,al
   140015a65:	cmp    cl,0xfe
   140015a68:	sub    DWORD PTR [rsi-0x49c6499f],0x12ea7a38
   140015a72:	outs   dx,BYTE PTR ds:[rsi]
   140015a73:	cmp    DWORD PTR [rax-0x19a984e9],edi
   140015a79:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015a7b:	fwait
   140015a7c:	mul    BYTE PTR [rcx-0x31]
   140015a7f:	mov    fs,WORD PTR [rbp-0x5c]
   140015a82:	rex.WB (bad) 
   140015a84:	addr32 ss (bad) 
   140015a87:	js     0x140015a80
   140015a89:	(bad)  
   140015a8a:	mov    edi,0xfc7b9fac
   140015a8f:	pushf  
   140015a90:	retf   
   140015a91:	xchg   edi,eax
   140015a92:	and    al,0x1a
   140015a94:	xchg   ecx,eax
   140015a95:	sbb    eax,0xc7c4ffbf
   140015a9a:	jle    0x140015a8b
   140015a9c:	addr32 rex.WRXB fdivr st(3),st
   140015aa0:	jnp    0x140015a49
   140015aa2:	rcl    DWORD PTR [rdi+rbp*8+0x3],1
   140015aa6:	ret    
   140015aa7:	mov    bh,0x43
   140015aa9:	js     0x140015a7a
   140015aab:	or     eax,esi
   140015aad:	pmuludq mm7,QWORD PTR [rbx+rax*1+0x4512b80]
   140015ab5:	adc    BYTE PTR [rcx-0x504f74dd],ah
   140015abb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015abc:	cmp    eax,0xd42d378
   140015ac1:	adc    al,0x6
   140015ac3:	and    BYTE PTR [rdi+0x21c0eda3],dl
   140015ac9:	sbb    eax,0x77b27d3e
   140015ace:	repnz movsxd edi,DWORD PTR [rdi-0x10]
   140015ad2:	(bad)  
   140015ad3:	add    al,0xf4
   140015ad5:	adc    al,0x3a
   140015ad7:	add    BYTE PTR [rax-0x5e3c253a],dl
   140015add:	(bad)  
   140015ade:	cld    
   140015adf:	jrcxz  0x140015a78
   140015ae1:	and    eax,0xf3f38b73
   140015ae6:	sti    
   140015ae7:	outs   dx,DWORD PTR ds:[rsi]
   140015ae8:	cmp    ah,BYTE PTR [rdx-0x4e]
   140015aeb:	(bad)  
   140015aec:	fmul   QWORD PTR [rip+0x477c5e47]        # 0x1877db939
   140015af2:	ficomp DWORD PTR [rbx]
   140015af4:	in     al,dx
   140015af5:	cwde   
   140015af6:	(bad)  
   140015af7:	hlt    
   140015af8:	(bad)  
   140015af9:	adc    ah,BYTE PTR [rsi]
   140015afb:	or     al,0x12
   140015afd:	add    esp,0x0
   140015b00:	add    esp,DWORD PTR [rsi+0x631c1c08]
   140015b06:	pop    rax
   140015b07:	add    BYTE PTR [rsi+0x69],dl
   140015b0a:	pop    rdi
   140015b0b:	movabs eax,ds:0x6e379c4291d92480
   140015b14:	push   0xffffffffb5f32401
   140015b19:	imul   esp,DWORD PTR [rcx-0x544ef54e],0x412cf6ac
   140015b23:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015b25:	sbb    al,0x9d
   140015b27:	add    BYTE PTR [rcx+rbx*2+0x90702d1],bh
   140015b2e:	or     edx,DWORD PTR [rsi+0x18]
   140015b31:	mov    cs,ebp
   140015b33:	or     al,al
   140015b35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015b36:	and    bh,BYTE PTR [rbx+0x26945a18]
   140015b3c:	sub    eax,0xd0b820ca
   140015b41:	sbb    eax,0x86140181
   140015b46:	cwde   
   140015b47:	ret    
   140015b48:	rex.WR (bad) 
   140015b4a:	(bad)  
   140015b4b:	ja     0x140015b99
   140015b4d:	sub    ch,BYTE PTR [rax]
   140015b4f:	gs data16 (bad) 
   140015b52:	push   rcx
   140015b53:	(bad)  
   140015b54:	fyl2xp1 
   140015b56:	(bad)  
   140015b57:	cwde   
   140015b58:	rex.WRB add r10b,BYTE PTR [r8+0x4a]
   140015b5c:	sub    DWORD PTR [rcx],r14d
   140015b5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015b60:	cs push 0xffffffffffffffc1
   140015b63:	cmp    eax,0x9b119cc3
   140015b68:	xchg   esp,eax
   140015b69:	rex.XB cli 
   140015b6b:	mov    ah,0x65
   140015b6d:	ret    
   140015b6e:	(bad)  
   140015b6f:	out    0xe0,eax
   140015b71:	push   rdx
   140015b72:	xchg   edx,eax
   140015b73:	rex.WXB
   140015b74:	rex.WB cmp BYTE PTR [r8],dil
   140015b77:	add    BYTE PTR [rbx],dl
   140015b79:	(bad)  
   140015b7a:	fs test eax,0xf1648396
   140015b80:	mov    dl,0x5b
   140015b82:	adc    al,0xb0
   140015b84:	sub    BYTE PTR [rbp-0x7a],bl
   140015b87:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015b88:	sub    cl,BYTE PTR [rdx+0x62]
   140015b8b:	sub    eax,0x2a00e95d
   140015b90:	pop    rbp
   140015b91:	(bad)  
   140015b92:	(bad)  
   140015b93:	rex.R loope 0x140015bb9
   140015b96:	adc    eax,0x112c13ae
   140015b9b:	lods   al,BYTE PTR ds:[rsi]
   140015b9c:	rex.WXB xor rax,0x5ea78cba
   140015ba2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015ba3:	adc    BYTE PTR [rip+0x5c8b290b],ch        # 0x19c8c84b4
   140015ba9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015baa:	sub    al,0xd4
   140015bac:	out    0x5,al
   140015bae:	mov    ah,0x2c
   140015bb0:	fst    QWORD PTR [rax+rbp*1]
   140015bb3:	and    eax,0xe0494615
   140015bb8:	sub    ecx,0x5f1b4fcf
   140015bbe:	stc    
   140015bbf:	(bad)  
   140015bc1:	(bad)  
   140015bc2:	fcomip st,st(7)
   140015bc4:	rex.RXB mov r15d,0xdb993ef4
   140015bca:	mov    r10d,0xd21be6eb
   140015bd0:	pop    rbp
   140015bd1:	sti    
   140015bd2:	(bad)  
   140015bd3:	pmaxub mm7,mm2
   140015bd6:	rex.WRB ja 0x140015bcf
   140015bd9:	(bad)  
   140015bda:	jae    0x140015c17
   140015bdc:	mov    WORD PTR [rcx+0x25],fs
   140015bdf:	xchg   ebp,eax
   140015be0:	xchg   ebx,eax
   140015be1:	sub    al,0xf6
   140015be3:	xchg   esp,eax
   140015be4:	sbb    eax,0x99f03c6f
   140015be9:	(bad)  
   140015bea:	in     eax,dx
   140015beb:	sti    
   140015bec:	jle    0x140015c0b
   140015bee:	rex.WRB cmc 
   140015bf0:	mov    esi,0x3c07a9cb
   140015bf5:	iret   
   140015bf6:	cwde   
   140015bf7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015bf9:	jmp    0x140015c09
   140015bfb:	add    BYTE PTR [rsi],ch
   140015bfd:	rex.RXB sub eax,0xa68ae1ed
   140015c03:	add    eax,0x93b598b9
   140015c08:	jb     0x140015c4a
   140015c0a:	or     dl,BYTE PTR [rdi]
   140015c0c:	jle    0x140015bda
   140015c0e:	add    ah,dh
   140015c10:	rex.WRXB jle 0x140015bff
   140015c13:	jle    0x1aaab441b
   140015c19:	(bad)  
   140015c1a:	test   ah,dh
   140015c1c:	mov    esp,DWORD PTR [rax-0x7bf0bff4]
   140015c22:	je     0x140015c03
   140015c24:	pop    rbp
   140015c25:	jg     0x140015c16
   140015c27:	(bad)  
   140015c28:	fs jle 0x140015ca4
   140015c2b:	(bad)  
   140015c2c:	icebp  
   140015c2d:	loopne 0x140015bba
   140015c2f:	mov    ds,WORD PTR [rax-0x1232322]
   140015c35:	fwait
   140015c36:	pop    rsi
   140015c37:	repnz (bad) 
   140015c39:	(bad)  
   140015c3a:	(bad)  
   140015c3b:	outs   dx,BYTE PTR ds:[rsi]
   140015c3c:	jle    0x140015c9f
   140015c3e:	(bad)  
   140015c3f:	jle    0x140015c90
   140015c41:	retf   0x858c
   140015c44:	pop    rsi
   140015c45:	add    ah,BYTE PTR [rsi]
   140015c47:	(bad)  
   140015c48:	sub    DWORD PTR [rcx],esi
   140015c4a:	rex.WRB jo 0x140015c3d
   140015c4d:	fcmovb st,st(4)
   140015c4f:	mov    al,0xd0
   140015c51:	adc    eax,0xd6c65605
   140015c56:	rex xchg eax,eax
   140015c58:	(bad)  
   140015c59:	fs adc eax,0x66462885
   140015c5f:	(bad)  
   140015c60:	add    al,al
   140015c62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015c63:	rex.WRXB stos BYTE PTR es:[rdi],al
   140015c65:	(bad)  
   140015c66:	mov    ch,al
   140015c68:	sahf   
   140015c69:	and    ecx,eax
   140015c6b:	and    eax,0xb6355952
   140015c70:	pop    rsp
   140015c71:	and    ebp,DWORD PTR [rip+0x74845557]        # 0x1b485b1ce
   140015c77:	mov    ah,dh
   140015c79:	rex
   140015c7a:	rex.B jae 0x140015ccd
   140015c7d:	(bad)  
   140015c7e:	mov    esp,0xed436007
   140015c83:	xor    dl,BYTE PTR [rcx-0x4f]
   140015c86:	push   0xffffffffffffffc3
   140015c88:	cmp    BYTE PTR [rcx+riz*8+0x78],dh
   140015c8c:	(bad)  
   140015c8d:	sub    ecx,esp
   140015c8f:	(bad)  
   140015c90:	sub    eax,0x9c8a6d3b
   140015c95:	jo     0x140015c4e
   140015c97:	(bad)  
   140015c98:	cld    
   140015c99:	(bad)  
   140015c9a:	lock mov WORD PTR [rbp-0x34],cs
   140015c9e:	or     DWORD PTR [rcx],edx
   140015ca0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015ca1:	ins    BYTE PTR es:[rdi],dx
   140015ca2:	mov    WORD PTR [rcx],fs
   140015ca4:	push   rax
   140015ca5:	or     al,BYTE PTR [rbx-0x7a]
   140015ca8:	rex sbb DWORD PTR [rbx+0x23398949],edx
   140015caf:	push   rax
   140015cb0:	lahf   
   140015cb1:	or     al,0xa7
   140015cb3:	int3   
   140015cb4:	pushf  
   140015cb5:	xor    DWORD PTR [rbx+0x42],esi
   140015cb8:	xchg   esi,eax
   140015cb9:	cdq    
   140015cba:	or     BYTE PTR [rcx],bl
   140015cbc:	adc    esi,DWORD PTR [rcx]
   140015cbe:	adc    dh,BYTE PTR [rdx]
   140015cc0:	add    al,0x32
   140015cc2:	in     al,dx
   140015cc3:	jb     0x140015ce4
   140015cc5:	cld    
   140015cc6:	cmp    al,0x79
   140015cc8:	push   rdx
   140015cc9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015cca:	jo     0x140015c55
   140015ccc:	out    dx,al
   140015cce:	ins    DWORD PTR es:[rdi],dx
   140015ccf:	mov    ecx,0xaa144da5
   140015cd4:	(bad)  
   140015cd5:	stos   DWORD PTR es:[rdi],eax
   140015cd6:	sub    al,BYTE PTR [rdx+0x44]
   140015cd9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015cda:	sub    bl,BYTE PTR [rdi+rsi*8-0x647b5d22]
   140015ce1:	mov    eax,0x3bcf77d5
   140015ce6:	add    eax,0x8f127c00
   140015ceb:	pop    rbx
   140015cec:	in     eax,0xd7
   140015cee:	stos   BYTE PTR es:[rdi],al
   140015cef:	sbb    eax,DWORD PTR [rbx]
   140015cf1:	gs rex.WB (bad) 
   140015cf4:	mov    edx,0xa4040668
   140015cf9:	test   BYTE PTR [rbp+0x69e5fdcb],bh
   140015cff:	sub    ah,BYTE PTR [rsi-0x4f]
   140015d02:	jp     0x140015cfa
   140015d04:	cmp    BYTE PTR [rip+0xffffffff8809f47d],bh        # 0xc80b5187
   140015d0a:	lods   al,BYTE PTR ds:[rsi]
   140015d0b:	retf   0x3f57
   140015d0e:	stc    
   140015d0f:	icebp  
   140015d10:	lea    esi,[rdx+0x2cb87d58]
   140015d16:	xchg   DWORD PTR [rsi+0x24],edx
   140015d19:	(bad)  
   140015d1a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015d1b:	xor    ebp,DWORD PTR [rdi-0x47120733]
   140015d21:	std    
   140015d22:	repz xchg esi,eax
   140015d24:	icebp  
   140015d25:	add    edi,DWORD PTR [rbp+0x72e000a0]
   140015d2b:	mov    ah,0x2d
   140015d2d:	rol    DWORD PTR [rdx+0x1b],cl
   140015d30:	fiadd  DWORD PTR [rbx-0x78]
   140015d33:	leave  
   140015d34:	xchg   ecx,ecx
   140015d36:	sbb    eax,0x3d0819
   140015d3b:	(bad)  
   140015d3d:	sti    
   140015d3e:	jmp    rdx
   140015d40:	rex.WXB add r10b,dil
   140015d43:	(bad)  
   140015d44:	sbb    al,0xb2
   140015d46:	xchg   DWORD PTR [rcx+0x7d],eax
   140015d49:	mov    edi,0x3aefe93f
   140015d4e:	mov    al,0xbc
   140015d50:	jmp    0x140015d20
   140015d52:	xlat   BYTE PTR ds:[rbx]
   140015d53:	fstp   QWORD PTR [rsp+rcx*2]
   140015d56:	mov    eax,DWORD PTR [rbp-0x4d23c8c3]
   140015d5c:	jnp    0x140015d45
   140015d5e:	sahf   
   140015d5f:	pop    rbp
   140015d60:	mov    ebp,0x8b7df9b9
   140015d65:	sbb    DWORD PTR [rsi-0x2a],0x33
   140015d69:	mov    WORD PTR [rcx+0x6a],es
   140015d6c:	nop
   140015d6d:	sbb    edx,eax
   140015d6f:	(bad)  
   140015d70:	(bad)  
   140015d71:	sbb    esp,DWORD PTR [rsi+0x5]
   140015d74:	adc    DWORD PTR [rax-0x58],0x3238b0a2
   140015d7b:	sub    dl,BYTE PTR [rip+0xffffffffc3ede9a2]        # 0x103ef4723
   140015d81:	push   rdx
   140015d82:	(bad)  
   140015d83:	push   rbp
   140015d84:	mov    cl,0x51
   140015d86:	add    al,0xa7
   140015d88:	cdq    
   140015d89:	sahf   
   140015d8a:	add    eax,0xe72a4474
   140015d8f:	movabs al,ds:0x4b39b1249f29623a
   140015d98:	jno    0x140015df0
   140015d9a:	rex.RB enter 0x5915,0xac
   140015d9f:	or     esi,DWORD PTR [rax+0x4]
   140015da2:	jo     0x140015e04
   140015da4:	(bad)  
   140015da5:	(bad)  
   140015da6:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140015da8:	(bad)  
   140015da9:	sub    DWORD PTR [rax+riz*8],0x53
   140015dad:	test   ebp,edx
   140015daf:	stc    
   140015db0:	(bad)  
   140015db1:	pop    rbp
   140015db2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015db3:	add    al,0x0
   140015db5:	xchg   esp,eax
   140015db6:	and    DWORD PTR [rdx+0x20],ecx
   140015db9:	es pop rax
   140015dbb:	lahf   
   140015dbc:	or     eax,0x79cb858
   140015dc1:	jbe    0x140015e0c
   140015dc3:	rex.WRB in al,dx
   140015dc5:	sbb    al,0x91
   140015dc7:	pushf  
   140015dc8:	add    BYTE PTR [rax+rsi*1-0x7a39bd8d],dl
   140015dcf:	fstp   DWORD PTR ss:[rcx-0x58f3e6ef]
   140015dd6:	rex.WR (bad) 
   140015dd8:	movsxd esi,DWORD PTR [rsi]
   140015dda:	cdq    
   140015ddb:	(bad)  
   140015ddc:	retf   0x8802
   140015ddf:	mov    al,0xcb
   140015de1:	cmc    
   140015de2:	rex.W sub BYTE PTR [rcx+0x37],spl
   140015de6:	pop    rbp
   140015de7:	fwait
   140015de8:	sub    BYTE PTR [rcx-0x4805870d],al
   140015dee:	(bad)  
   140015def:	loopne 0x140015da9
   140015df1:	cdq    
   140015df2:	push   rsp
   140015df3:	rex and BYTE PTR [rcx],0x51
   140015df7:	push   rbp
   140015df8:	xor    DWORD PTR [rsi-0x46],esp
   140015dfb:	idiv   esi
   140015dfd:	repnz movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015dff:	(bad)  
   140015e00:	fwait
   140015e01:	push   rdi
   140015e02:	sub    dh,dh
   140015e04:	(bad)  
   140015e05:	femms  
   140015e07:	jle    0x140015dfa
   140015e09:	clc    
   140015e0a:	push   0xffffffffffffffd7
   140015e0c:	jno    0x140015dd3
   140015e0e:	cdq    
   140015e0f:	rex.WRXB cld 
   140015e11:	inc    BYTE PTR [rdi+0x1]
   140015e14:	ins    BYTE PTR es:[rdi],dx
   140015e15:	mov    cl,0xae
   140015e18:	shl    BYTE PTR [rip+0x6050dd51],1        # 0x1a0523b6f
   140015e1e:	test   dh,ah
   140015e20:	or     al,0xbc
   140015e22:	cs rex.WB jg 0x140015e03
   140015e26:	xor    BYTE PTR [rbp+0x4c],bh
   140015e29:	fbstp  TBYTE PTR [rax]
   140015e2b:	add    BYTE PTR [rax+0x25],dh
   140015e2e:	(bad)  
   140015e2f:	rcr    BYTE PTR [rsi],1
   140015e31:	mov    dh,dh
   140015e33:	xor    DWORD PTR [rbp+0x13],ebp
   140015e36:	sbb    DWORD PTR [rsp+rax*2+0x4091000b],0xffffff91
   140015e3e:	mov    cs,esi
   140015e40:	lahf   
   140015e41:	retf   0x7e4e
   140015e44:	in     al,dx
   140015e45:	rsqrtps xmm5,XMMWORD PTR [rax-0x3e33fff2]
   140015e4c:	add    DWORD PTR [rbx-0x10],eax
   140015e4f:	rex.WRB hlt 
   140015e51:	(bad)  
   140015e52:	mov    edi,0x4aafede9
   140015e57:	cli    
   140015e58:	or     ecx,DWORD PTR [rbx+0x73]
   140015e5b:	sti    
   140015e5c:	pandn  mm4,QWORD PTR [rdx+rsi*4-0x2]
   140015e61:	cld    
   140015e62:	inc    BYTE PTR [rbx+0x6e64bd37]
   140015e68:	(bad)  
   140015e69:	jno    0x140015e52
   140015e6b:	sar    ah,cl
   140015e6d:	fcom   QWORD PTR [rdx+0x6a]
   140015e70:	sbb    BYTE PTR [rbx],ch
   140015e72:	std    
   140015e73:	adc    al,0x69
   140015e75:	rex.X fdiv DWORD PTR [rbx]
   140015e78:	(bad)  
   140015e79:	sbb    eax,0x46c20b91
   140015e7e:	cs sti 
   140015e80:	sub    al,0x80
   140015e82:	lods   eax,DWORD PTR ds:[rsi]
   140015e83:	pop    rsp
   140015e84:	mov    ds,WORD PTR [rax+0x1]
   140015e87:	mov    dh,0x4a
   140015e89:	std    
   140015e8a:	mov    dh,0xb1
   140015e8c:	push   rbp
   140015e8d:	mov    WORD PTR [rdx+rax*1+0x672088c0],gs
   140015e94:	rex.WB je 0x140015e2c
   140015e97:	and    BYTE PTR [rbx-0x3bd30954],ch
   140015e9d:	mov    gs,WORD PTR [rcx-0x12be31d4]
   140015ea3:	fsubr  DWORD PTR [rcx+0xe]
   140015ea6:	push   rcx
   140015ea7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015ea8:	pop    rdx
   140015ea9:	rcr    BYTE PTR [rax+riz*8],1
   140015eac:	repz sbb al,0xdc
   140015eaf:	(bad)  
   140015eb0:	mov    al,0xd7
   140015eb2:	add    DWORD PTR [rbx+0x49d1edf],0xe30b5a27
   140015ebc:	sbb    ebp,edx
   140015ebe:	mov    eax,0x262525fc
   140015ec3:	xchg   edi,eax
   140015ec4:	repz loopne 0x140015ec1
   140015ec7:	rex.RB push r11
   140015ec9:	(bad)  
   140015eca:	data16 lahf 
   140015ecc:	out    dx,eax
   140015ecd:	nop
   140015ece:	xor    dh,BYTE PTR [rbx-0x6b59f6fd]
   140015ed4:	cdq    
   140015ed5:	push   rdx
   140015ed6:	xchg   bx,ax
   140015ed8:	adc    BYTE PTR [rax+0x26338647],ch
   140015ede:	(bad)  
   140015edf:	mov    ebx,?
   140015ee1:	rex.WRX mov BYTE PTR [rax],r15b
   140015ee4:	xor    DWORD PTR [rcx-0x318da1fd],ecx
   140015eea:	or     al,BYTE PTR [rbx]
   140015eec:	xchg   BYTE PTR [rcx+0x7929252],al
   140015ef2:	or     BYTE PTR [rsi+0x30003c49],0x77
   140015ef9:	loopne 0x140015ec0
   140015efb:	outs   dx,DWORD PTR ds:[rsi]
   140015efc:	rex.WX jp 0x140015ebc
   140015eff:	cmp    al,0x31
   140015f01:	leave  
   140015f02:	test   eax,0x396f306c
   140015f07:	rex.WXB (bad) 
   140015f09:	push   rbx
   140015f0a:	ss mov edi,0xc367b109
   140015f10:	xor    edi,ebx
   140015f12:	je     0x140015f74
   140015f14:	out    0xa1,eax
   140015f16:	sbb    eax,0x9f43fdf3
   140015f1b:	cmp    BYTE PTR [rdx+0x74],bh
   140015f1e:	loop   0x140015f9c
   140015f20:	pop    rcx
   140015f21:	cmp    esi,ebx
   140015f23:	fyl2x  
   140015f25:	cdq    
   140015f26:	(bad)  
   140015f27:	lahf   
   140015f28:	push   rsp
   140015f29:	vandnpd ymm15,ymm15,YMMWORD PTR [rbp-0x55945ddc]
   140015f31:	cmp    al,BYTE PTR [rbx+rsi*2+0x26]
   140015f35:	pop    rsi
   140015f36:	pushf  
   140015f37:	int    0xa7
   140015f39:	lods   eax,DWORD PTR ds:[rsi]
   140015f3a:	iret   
   140015f3b:	jne    0x140015f84
   140015f3d:	xor    eax,DWORD PTR [rax]
   140015f3f:	js     0x140015f57
   140015f41:	mov    ah,0x5d
   140015f43:	adc    eax,ebx
   140015f45:	jns    0x140015f33
   140015f47:	mov    DWORD PTR [rcx-0x365a3f38],ecx
   140015f4d:	add    BYTE PTR es:[rdx+0x25],dl
   140015f51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015f52:	(bad)  
   140015f53:	(bad)  
   140015f54:	cli    
   140015f55:	sti    
   140015f56:	pop    gs
   140015f58:	retf   0x8880
   140015f5b:	jp     0x140015f07
   140015f5d:	call   0x14c8862f3
   140015f62:	mov    bh,dh
   140015f64:	(bad)  
   140015f65:	xchg   edi,eax
   140015f66:	fdivr  QWORD PTR [rbp+0x68]
   140015f69:	loope  0x140015f4b
   140015f6b:	lods   eax,DWORD PTR ds:[rsi]
   140015f6c:	sti    
   140015f6d:	out    0xf,eax
   140015f6f:	fdiv   QWORD PTR [rdx-0x75]
   140015f72:	leave  
   140015f73:	(bad)  
   140015f74:	repz retf 
   140015f76:	(bad)  
   140015f77:	sbb    al,0xbe
   140015f79:	jae    0x140015f6a
   140015f7b:	mov    ds,WORD PTR [rip+0x4b8bf373]        # 0x18b8d52f4
   140015f81:	xchg   DWORD PTR [rsi],edx
   140015f83:	jp     0x140015fae
   140015f85:	(bad)  
   140015f86:	test   eax,0x60cf5cc1
   140015f8b:	xor    DWORD PTR [rbx-0x14],esp
   140015f8e:	in     al,dx
   140015f8f:	(bad)  
   140015f90:	lea    ebp,[rax+0x16301105]
   140015f96:	hlt    
   140015f97:	(bad)  
   140015f98:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015f99:	(bad)  
   140015f9a:	fldcw  WORD PTR [rax*1+0x631b1456]
   140015fa1:	sub    r8d,r8d
   140015fa4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015fa5:	mov    cl,0x63
   140015fa7:	sbb    BYTE PTR [rdx+0x2400093c],al
   140015fad:	idiv   BYTE PTR [rax]
   140015faf:	push   rsp
   140015fb0:	rex.RX and al,0xe5
   140015fb3:	cmp    DWORD PTR [rdx+0x59],edx
   140015fb6:	(bad)  
   140015fb7:	xor    bl,BYTE PTR [rdi+0x23]
   140015fba:	add    esp,DWORD PTR [rax]
   140015fbc:	or     ah,BYTE PTR [rbp+0x4a]
   140015fbf:	add    BYTE PTR [rdi],al
   140015fc1:	test   DWORD PTR [rdx-0x3d],ecx
   140015fc4:	out    0xa0,eax
   140015fc6:	fsubp  st(1),st
   140015fc8:	shl    BYTE PTR [rbp-0x3d3e220d],0x17
   140015fcf:	(bad)  
   140015fd0:	mov    ah,0x10
   140015fd2:	clc    
   140015fd3:	leave  
   140015fd4:	int3   
   140015fd5:	lods   al,BYTE PTR ds:[rsi]
   140015fd6:	(bad)  
   140015fd7:	scas   eax,DWORD PTR es:[rdi]
   140015fd8:	fsub   st,st(5)
   140015fda:	adc    DWORD PTR [r9+0x2219ec0b],r10d
   140015fe1:	xor    BYTE PTR [rax+0x3073b10d],cl
   140015fe7:	adc    dl,BYTE PTR [rbx+0x62]
   140015fea:	mov    WORD PTR [rbx],cs
   140015fec:	imul   ebx,DWORD PTR [rdx],0x17
   140015fef:	ror    eax,0x88
   140015ff2:	cmp    BYTE PTR [rbp+0x43],ah
   140015ff5:	sbb    DWORD PTR [rbx],edx
   140015ff7:	neg    DWORD PTR [rax-0x5b39ccd8]
   140015ffd:	(bad)  
   140015ffe:	pushf  
   140015fff:	rex.WX push 0xffffffffffffffe6
   140016002:	sbb    esi,0xe00d34fc
   140016008:	pop    rbx
   140016009:	(bad)  
   14001600a:	sub    al,0xad
   14001600c:	ins    BYTE PTR es:[rdi],dx
   14001600d:	movabs al,ds:0x5003343bdf9bd307
   140016016:	outs   dx,DWORD PTR ds:[rsi]
   140016017:	(bad)  
   140016018:	fwait
   140016019:	xlat   BYTE PTR ds:[rbx]
   14001601a:	and    eax,0x28031b03
   14001601f:	rex.RX xchg DWORD PTR [rsi],r10d
   140016022:	int3   
   140016023:	cli    
   140016024:	fistp  QWORD PTR [rbp-0x18189693]
   14001602a:	(bad)  
   14001602b:	pop    rdi
   14001602c:	sub    BYTE PTR [rdi+0x6362ea7c],bh
   140016032:	in     al,dx
   140016033:	push   rbx
   140016034:	mov    ecx,0xbd8f37f5
   140016039:	out    0xdf,eax
   14001603b:	cld    
   14001603c:	(bad)  
   14001603d:	or     bl,BYTE PTR [rbp-0x4d]
   140016040:	(bad)  
   140016041:	(bad)  
   140016042:	xchg   ebp,eax
   140016043:	(bad)  
   140016044:	outs   dx,BYTE PTR ds:[rsi]
   140016045:	mov    cl,dl
   140016047:	rex.W
   140016048:	rex.RB jae 0x14001605c
   14001604b:	mov    DWORD PTR [rcx],ebx
   14001604d:	(bad)  
   14001604e:	mov    eax,0x177da54e
   140016053:	int    0x0
   140016055:	loopne 0x1400160c6
   140016057:	mov    DWORD PTR [rsi+0x3e1c6268],ebp
   14001605d:	rex.WR
   14001605e:	ds enter 0x44c5,0xcc
   140016063:	and    BYTE PTR [rdi],bh
   140016065:	push   rcx
   140016066:	xchg   BYTE PTR [rdx-0x7a263857],ch
   14001606c:	movabs ds:0x81ebef97ccf43ff7,eax
   140016075:	sub    DWORD PTR [rbx],esp
   140016077:	rex.RB (bad) 
   140016079:	rex.R cmp eax,0xfd003340
   14001607f:	mov    ecx,0x7657877d
   140016084:	fcomip st,st(1)
   140016086:	ficom  DWORD PTR [rdi]
   140016088:	div    DWORD PTR [rdi-0x12]
   14001608b:	fistp  WORD PTR [rdi-0x642512d3]
   140016091:	(bad)  
   140016092:	(bad)  
   140016093:	out    dx,eax
   140016094:	cmp    DWORD PTR [rax-0x10],esi
   140016097:	shl    cl,1
   140016099:	mov    ecx,0x7bfda585
   14001609e:	(bad)  
   14001609f:	(bad)  
   1400160a0:	cmp    eax,0xc5eec226
   1400160a5:	or     al,0xa9
   1400160a7:	(bad)  
   1400160a8:	sbb    al,0x5a
   1400160aa:	rex.W sbb cl,BYTE PTR [rsi-0x37]
   1400160ae:	add    BYTE PTR [rdx],dl
   1400160b0:	xchg   edi,eax
   1400160b1:	(bad)  
   1400160b2:	jb     0x140016058
   1400160b4:	push   rsp
   1400160b5:	(bad)  
   1400160b6:	cmp    eax,0x28a52397
   1400160bb:	(bad)  
   1400160bc:	rex.RX mov r12b,BYTE PTR [rcx+0x29]
   1400160c0:	sbb    BYTE PTR [rsi+0x559520a],dl
   1400160c6:	je     0x1400160dd
   1400160c8:	sub    ah,BYTE PTR [rdi+0x9]
   1400160cb:	sbb    BYTE PTR [rcx-0x67],dl
   1400160ce:	(bad)  
   1400160cf:	(bad)  
   1400160d0:	adc    al,0x28
   1400160d2:	(bad)  
   1400160d3:	(bad)  
   1400160d4:	or     al,0xfb
   1400160d6:	or     bh,BYTE PTR [rcx]
   1400160d8:	pop    rsi
   1400160d9:	js     0x1b02ef17b
   1400160df:	or     BYTE PTR [rcx+0x512eb03f],cl
   1400160e5:	mov    ch,BYTE PTR [rbx+rcx*4+0x57810013]
   1400160ec:	or     BYTE PTR [rsi+0x12],ch
   1400160ef:	xchg   edx,eax
   1400160f0:	(bad)  
   1400160f1:	add    al,0x76
   1400160f3:	leave  
   1400160f4:	(bad)  
   1400160f5:	rex.WRX jnp 0x140016118
   1400160f8:	and    al,BYTE PTR [rbx-0x34]
   1400160fb:	or     al,0xf
   1400160fd:	or     al,0x4
   1400160ff:	xchg   BYTE PTR ss:[rbp-0x22c79f27],bh
   140016106:	xchg   ecx,eax
   140016107:	div    bh
   140016109:	add    esi,ebx
   14001610b:	(bad)  
   14001610c:	rex.WR jmp 0x1400160f2
   14001610f:	mov    ebx,DWORD PTR [rbx-0x151009fb]
   140016115:	movsxd ebp,DWORD PTR [rcx+0x21]
   140016118:	vpsubq ymm2,ymm14,YMMWORD PTR [rdi]
   14001611c:	mov    cl,0xb8
   14001611e:	xor    BYTE PTR [rdi+0x1839b9b9],cl
   140016124:	xchg   ebx,eax
   140016125:	add    BYTE PTR [rax+0xffa113e],0x9c
   14001612c:	mov    esp,0x87d7ff24
   140016131:	mov    edi,0x67edd554
   140016136:	(bad)  
   140016137:	lods   eax,DWORD PTR ds:[rsi]
   140016138:	mov    esp,0xbf97e278
   14001613d:	cli    
   14001613e:	sahf   
   14001613f:	jmp    rcx
   140016141:	ja     0x1400160cb
   140016143:	push   0xffffffff96e5945c
   140016148:	mov    BYTE PTR [rip+0xffffffffce316596],bl        # 0x10e32c6e4
   14001614e:	mov    esp,DWORD PTR [rdx-0x28978a40]
   140016154:	(bad)  
   140016155:	sbb    esp,DWORD PTR [rdx-0x5ccde0d5]
   14001615b:	scas   eax,DWORD PTR es:[rdi]
   14001615c:	(bad)  
   14001615d:	jne    0x1400161a6
   14001615f:	(bad)  
   140016160:	pushf  
   140016161:	cmovb  edi,DWORD PTR [rbp+0x54]
   140016165:	add    al,BYTE PTR [rax-0x5a]
   140016168:	and    bh,BYTE PTR [rip+0x7ce47a10]        # 0x1bce5db7e
   14001616e:	(bad)  
   14001616f:	cmp    eax,0xf400c9ff
   140016174:	(bad)  
   140016175:	mov    edi,0x54afede9
   14001617a:	adc    DWORD PTR [rbx+0x779df37c],esi
   140016180:	jb     0x140016158
   140016182:	fbstp  TBYTE PTR [rbx-0x3d]
   140016186:	movabs eax,ds:0x307e77b5dced775b
   14001618f:	pop    rax
   140016190:	pop    rdx
   140016191:	(bad)  
   140016192:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016193:	pop    rax
   140016194:	cdq    
   140016195:	rex.WRXB ror BYTE PTR [r11+0xc],1
   140016199:	xchg   esi,eax
   14001619a:	sti    
   14001619b:	(bad)  
   14001619c:	pop    rcx
   14001619d:	adc    eax,0x8835a8b9
   1400161a2:	movabs eax,ds:0x44282e5ac50b0c55
   1400161ab:	mov    cl,0x36
   1400161ad:	je     0x14001618e
   1400161af:	out    0x87,eax
   1400161b1:	(bad)  
   1400161b2:	or     cl,BYTE PTR [rax+rcx*2+0x21801ce4]
   1400161b9:	test   eax,0x3971073d
   1400161be:	movaps xmm0,xmm6
   1400161c1:	rex.WRXB add r14,QWORD PTR [r10]
   1400161c4:	(bad)
   1400161c8:	xor    al,0xc0
   1400161ca:	add    DWORD PTR [rbp+0x44834568],ebp
   1400161d0:	xor    eax,0x44f73b54
   1400161d5:	(bad)  
   1400161d6:	adc    BYTE PTR [rdx+riz*2],al
   1400161d9:	cwde   
   1400161da:	sbb    DWORD PTR [rdx],ebp
   1400161dc:	push   0xffffffffffffffc0
   1400161de:	(bad)  
   1400161df:	adc    BYTE PTR [rax-0x66ffbc9f],0x17
   1400161e6:	in     eax,dx
   1400161e7:	pop    rcx
   1400161e8:	mov    eax,0x765ebbf1
   1400161ed:	loopne 0x14001619c
   1400161ef:	outs   dx,DWORD PTR ds:[rsi]
   1400161f0:	jmp    QWORD PTR [rbp-0xca18a71]
   1400161f6:	rol    BYTE PTR [rdi+0x7e],cl
   1400161f9:	jmp    0x17fed903d
   1400161fe:	xor    bh,BYTE PTR [rdi]
   140016200:	mov    edi,0xc2d2d0fb
   140016205:	(bad)  
   140016206:	and    esi,DWORD PTR [rdi]
   140016208:	out    dx,al
   140016209:	(bad)  
   14001620a:	jo     0x1400161cf
   14001620c:	sar    BYTE PTR [rsi+0x345e07bd],cl
   140016212:	sub    ch,BYTE PTR [rdi+rdi*4+0x28]
   140016216:	mov    ah,cl
   140016218:	adc    esp,DWORD PTR [rdi-0x50b09bd1]
   14001621e:	(bad)  
   14001621f:	or     al,0x13
   140016221:	pop    rbp
   140016222:	and    cl,al
   140016224:	or     DWORD PTR [rip+0xffffffffc1e47e6f],ebx        # 0x101e5e099
   14001622a:	ja     0x14001622b
   14001622c:	repz call QWORD PTR [rbx+0x1b380a98]
   140016233:	mov    edi,0x2f32cb28
   140016238:	mov    dh,BYTE PTR [rdx-0x57dd35d4]
   14001623e:	stc    
   14001623f:	ror    BYTE PTR [rbx],0x8c
   140016242:	jmp    0x1406afcaa
   140016247:	iret   
   140016248:	add    edi,DWORD PTR [rdx-0x2c8e9664]
   14001624e:	lea    eax,[rdi-0x6660d295]
   140016254:	rex add DWORD PTR [rax+rcx*8],ebx
   140016258:	add    BYTE PTR [rdx-0x32a9ea40],bl
   14001625e:	sahf   
   14001625f:	cld    
   140016260:	enter  0x3eef,0xc
   140016264:	and    BYTE PTR [rbx],al
   140016266:	test   al,0x7
   140016268:	movabs al,ds:0x3b7a293e84a6404f
   140016271:	pop    rdi
   140016272:	cli    
   140016273:	(bad)  
   140016274:	add    ecx,DWORD PTR [rbx]
   140016276:	(bad)  
   140016277:	outs   dx,BYTE PTR ds:[rsi]
   140016278:	mov    ecx,0x2dc0fe61
   14001627d:	mov    bh,0x70
   14001627f:	ficomp DWORD PTR [rdi-0x68]
   140016282:	fstp   TBYTE PTR [rbx-0x18]
   140016285:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016286:	(bad)  
   140016287:	in     eax,dx
   140016288:	fnsave [rip+0x6e96e66f]        # 0x1ae9848fd
   14001628e:	cmp    al,0xb0
   140016290:	cmp    al,0x40
   140016292:	(bad)  
   140016293:	gs in  al,dx
   140016295:	pushf  
   140016296:	rex.WXB xchg r9,rax
   140016298:	sbb    al,dh
   14001629a:	sub    eax,0x35a4692b
   14001629f:	clc    
   1400162a0:	jns    0x14001625f
   1400162a2:	rex (bad) 
   1400162a4:	(bad)  
   1400162a6:	(bad)  
   1400162a7:	cs rex.R jno 0x140016314
   1400162ab:	sub    al,0xb7
   1400162ad:	(bad)  
   1400162ae:	push   rsi
   1400162af:	jno    0x14001631a
   1400162b1:	push   0x602c59b1
   1400162b6:	mov    bl,0x10
   1400162b8:	nop
   1400162b9:	(bad)  
   1400162ba:	cmp    DWORD PTR [rbp+0x1d],edx
   1400162bd:	mov    cl,0xda
   1400162bf:	(bad)  
   1400162c0:	movabs eax,ds:0x32e72442cf292632
   1400162c9:	(bad)  
   1400162ca:	(bad)  
   1400162cb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400162cc:	(bad)  
   1400162cd:	mov    BYTE PTR [rax+0x38c55dc0],0x9c
   1400162d4:	add    DWORD PTR [rcx+0x5a],edx
   1400162d7:	pop    rbx
   1400162d8:	fwait
   1400162d9:	(bad)  
   1400162da:	add    al,0xa0
   1400162dc:	hlt    
   1400162dd:	rex.WXB mov r8b,0x2f
   1400162e0:	iret   
   1400162e1:	cdq    
   1400162e2:	faddp  st(4),st
   1400162e4:	rex.WB sahf 
   1400162e6:	rex.W in eax,dx
   1400162e8:	(bad)  
   1400162e9:	rcr    DWORD PTR [rdi-0x4],cl
   1400162ec:	(bad)  
   1400162ed:	push   rdi
   1400162ee:	(bad)  
   1400162ef:	lock mov DWORD PTR ds:[rbp+0x2b],esi
   1400162f4:	mov    dl,0x66
   1400162f6:	lods   eax,DWORD PTR ds:[rsi]
   1400162f7:	pop    rbp
   1400162f8:	sub    ecx,DWORD PTR [rdx+0x76b4bd62]
   1400162fe:	sub    BYTE PTR [rdx],ah
   140016300:	lea    ebp,[rsp+rdi*1+0x63]
   140016304:	mov    WORD PTR [rsi],fs
   140016306:	(bad)  
   140016307:	or     BYTE PTR [rbx],dh
   140016309:	or     eax,DWORD PTR [rax+0x25]
   14001630c:	or     DWORD PTR [rdx+0x55],ecx
   14001630f:	mov    ch,0x22
   140016311:	(bad)  
   140016312:	(bad)  
   140016313:	jns    0x140016393
   140016315:	(bad)  
   140016316:	repz icebp 
   140016318:	scas   eax,DWORD PTR es:[rdi]
   140016319:	and    eax,0x79e000cd
   14001631e:	rex.WRX
   14001631f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140016321:	(bad)  
   140016322:	jp     0x140016365
   140016324:	jle    0x1400162e0
   140016326:	ins    DWORD PTR es:[rdi],dx
   140016327:	lods   eax,DWORD PTR ds:[rsi]
   140016328:	mov    r8d,0xa451de4
   14001632e:	rex.RX jp 0x140016312
   140016331:	sub    esi,edi
   140016333:	cmc    
   140016334:	(bad)  
   140016335:	jg     0x140016320
   140016337:	mov    bl,0x3d
   140016339:	and    ch,dl
   14001633b:	adc    eax,edx
   14001633d:	(bad)  
   14001633e:	movabs eax,ds:0xe1df6e620d3abf77
   140016347:	in     eax,0xdd
   140016349:	ja     0x140016309
   14001634b:	div    BYTE PTR [rsi-0x4023122]
   140016351:	mov    bl,0xc5
   140016353:	popf   
   140016354:	sti    
   140016355:	mov    dl,0x85
   140016357:	xchg   ebp,eax
   140016358:	fnstsw WORD PTR [rbx-0x4fc5108a]
   14001635e:	ja     0x14001634f
   140016360:	or     eax,0x59071687
   140016365:	outs   dx,DWORD PTR ds:[rsi]
   140016366:	jns    0x140016396
   140016368:	(bad)
   14001636b:	adc    al,0xbd
   14001636d:	xchg   esp,eax
   14001636e:	jno    0x140016353
   140016370:	rex.X mov bl,BYTE PTR [rbx]
   140016373:	(bad)  
   140016374:	(bad)  
   140016375:	adc    esp,DWORD PTR [rbx-0x4422f42a]
   14001637b:	pop    rcx
   14001637c:	or     BYTE PTR [rsi],ch
   14001637e:	(bad)  
   14001637f:	in     al,dx
   140016380:	loope  0x14001635e
   140016382:	sub    ch,BYTE PTR [rsi]
   140016384:	mov    es,WORD PTR [rip+0xffffffffbb38a179]        # 0xfb3a0503
   14001638a:	pop    rcx
   14001638b:	add    ch,BYTE PTR [rdx+0x255d50ab]
   140016391:	xchg   ebp,eax
   140016392:	mov    bl,0x50
   140016394:	sbb    DWORD PTR [rcx+0xd],edi
   140016397:	(bad)  
   140016398:	int3   
   140016399:	test   ebx,ecx
   14001639b:	jns    0x140016345
   14001639d:	or     esi,DWORD PTR [rsi+rbx*2+0x1e]
   1400163a1:	sbb    al,0xe6
   1400163a3:	jnp    0x14001634b
   1400163a5:	test   DWORD PTR [rdx-0x194088e5],0x2cd7a7cb
   1400163af:	cmp    dl,BYTE PTR [rsi+0x67abb2de]
   1400163b5:	mov    esi,0x8aa86008
   1400163ba:	jne    0x140016364
   1400163bc:	scas   al,BYTE PTR es:[rdi]
   1400163bd:	mov    edx,ebp
   1400163bf:	(bad)  
   1400163c0:	stos   BYTE PTR es:[rdi],al
   1400163c1:	outs   dx,BYTE PTR ds:[rsi]
   1400163c2:	test   al,0xea
   1400163c4:	sbb    ch,dh
   1400163c6:	(bad)  
   1400163c7:	fwait
   1400163c8:	adc    al,BYTE PTR [rax-0x4545294b]
   1400163ce:	or     ah,BYTE PTR [rdx-0x667b666a]
   1400163d4:	jne    0x14001640e
   1400163d6:	sbb    bh,BYTE PTR [rbp+0x177da5e0]
   1400163dc:	int    0x0
   1400163de:	loopne 0x14001641a
   1400163e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400163e1:	mov    es,esp
   1400163e3:	sub    al,al
   1400163e5:	in     eax,0xa3
   1400163e7:	push   rdi
   1400163e8:	je     0x1400163dd
   1400163ea:	loope  0x1400163af
   1400163ec:	mov    WORD PTR fs:[rbx-0x7cfafbe6],ds
   1400163f3:	mov    ch,bl
   1400163f5:	mov    esp,0xd38d987e
   1400163fa:	rex.WRXB hlt 
   1400163fc:	ss (bad) 
   1400163fe:	cmp    al,0xf1
   140016400:	xor    DWORD PTR [rdx],eax
   140016402:	push   rbp
   140016403:	(bad)  
   140016404:	rex.WRX test al,0x3
   140016407:	or     DWORD PTR [rax-0x202c806],eax
   14001640d:	ja     0x1400163eb
   14001640f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016410:	(bad)
   140016415:	jmp    0x156f8002f
   14001641a:	mov    dl,0xe5
   14001641c:	pop    rbp
   14001641d:	(bad)  
   14001641e:	mov    ebp,0x8381e0e8
   140016423:	cmp    DWORD PTR [rcx-0x5a212d3f],0x1e
   14001642a:	cli    
   14001642b:	sub    DWORD PTR [rbx-0x9],esp
   14001642e:	jl     0x14001643f
   140016430:	mov    edi,DWORD PTR [rip+0x5ef981c6]        # 0x19efae5fc
   140016436:	add    eax,0x8bcda80a
   14001643b:	in     eax,0x53
   14001643d:	fwait
   14001643e:	in     eax,0x72
   140016440:	and    DWORD PTR [rdx-0x8],edi
   140016443:	ret    0x22d0
   140016446:	mov    bh,0x8a
   140016448:	addr32 mov dh,0x2c
   14001644b:	ss repnz rex.RB ins BYTE PTR es:[rdi],dx
   14001644f:	in     al,0x2
   140016451:	mov    BYTE PTR [rdi+riz*1],bl
   140016454:	enter  0x2218,0x67
   140016458:	rex.WB cmc 
   14001645a:	adc    ah,BYTE PTR [rsp+rbx*2+0x60d72923]
   140016461:	mov    esi,DWORD PTR [rbp-0x6b460130]
   140016467:	sti    
   140016468:	outs   dx,DWORD PTR ds:[rsi]
   140016469:	mov    edx,0xf477e0f3
   14001646e:	push   rbx
   14001646f:	mov    bl,0x74
   140016471:	fbld   TBYTE PTR [rbx-0x7d0b88b1]
   140016477:	out    0xa7,al
   140016479:	ds clc 
   14001647b:	stos   DWORD PTR es:[rdi],eax
   14001647c:	mov    edi,0x42a2e00d
   140016481:	(bad)  
   140016482:	mov    dl,ch
   140016484:	stos   BYTE PTR es:[rdi],al
   140016485:	mov    ch,BYTE PTR [rax+rbp*1+0x30]
   140016489:	push   rsi
   14001648a:	(bad)  
   14001648b:	adc    BYTE PTR [rdi+0x28d7146f],bh
   140016491:	lods   eax,DWORD PTR ds:[rsi]
   140016492:	push   rbp
   140016493:	sar    BYTE PTR [rsi+0x43],0x32
   140016497:	jge    0x1400164e5
   140016499:	xor    ebx,DWORD PTR [rdi]
   14001649b:	shl    BYTE PTR [rdi],0x38
   14001649e:	rex.WRB and al,0x48
   1400164a1:	add    eax,0x4a614313
   1400164a6:	xchg   ecx,eax
   1400164a7:	(bad)  
   1400164a8:	test   eax,0x12e444a6
   1400164ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400164ae:	enter  0x8383,0xd3
   1400164b2:	and    bh,dl
   1400164b4:	mov    ebx,0x8ddd7cef
   1400164b9:	or     eax,DWORD PTR [rdi]
   1400164bb:	outs   dx,BYTE PTR ds:[rsi]
   1400164bc:	cmp    DWORD PTR [rax],edi
   1400164be:	jg     0x140016483
   1400164c0:	int    0x2f
   1400164c2:	out    0xb4,al
   1400164c4:	mov    bh,0xd8
   1400164c6:	pop    rbx
   1400164c7:	fnstenv [rbx-0xd]
   1400164ca:	sahf   
   1400164cb:	sbb    eax,0xef763b4b
   1400164d0:	mov    ebp,0xbbd96e1
   1400164d5:	cmp    eax,0xec13f5cc
   1400164da:	cdq    
   1400164db:	iret   
   1400164dc:	ror    BYTE PTR [rbx+0x18],1
   1400164df:	(bad)  
   1400164e0:	cs cmp ebx,edx
   1400164e3:	add    al,cl
   1400164e5:	xor    DWORD PTR [rcx],ecx
   1400164e7:	neg    edi
   1400164e9:	rex.RX
   1400164ea:	cs pop rax
   1400164ec:	retf   
   1400164ed:	add    eax,0x187004cf
   1400164f2:	pop    rdx
   1400164f3:	in     al,0x85
   1400164f5:	loopne 0x1400164cb
   1400164f7:	rex.RX mov DWORD PTR [rbp-0x4bc66174],r12d
   1400164fe:	pushf  
   1400164ff:	loop   0x1400164d6
   140016501:	sti    
   140016502:	(bad)  
   140016503:	std    
   140016504:	xchg   ebp,eax
   140016505:	jle    0x140016539
   140016507:	jg     0x140016572
   140016509:	sub    ebp,DWORD PTR [rdi]
   14001650b:	jg     0x140016509
   14001650d:	ja     0x1400164fe
   14001650f:	rex.WXB loop 0x14001654e
   140016512:	jl     0x140016516
   140016514:	repnz mov ch,0xbf
   140016517:	stc    
   140016518:	ror    bh,0x9c
   14001651b:	stc    
   14001651c:	retf   
   14001651d:	(bad)  
   14001651f:	lods   al,BYTE PTR ds:[rsi]
   140016520:	mov    bl,BYTE PTR [rsp+rbp*1-0x53]
   140016524:	mov    ebp,0x86c5e794
   140016529:	mov    BYTE PTR [rip+0x15852b5b],bl        # 0x15586908a
   14001652f:	jnp    0x14001650e
   140016531:	es jmp 0x1419b7293
   140016537:	ror    BYTE PTR [rsi+rbp*1+0x17b98d4b],0xf5
   14001653f:	sbb    al,0x8c
   140016541:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016542:	sub    al,0xca
   140016544:	mov    WORD PTR [rax+0x3ea53052],cs
   14001654a:	scas   eax,DWORD PTR es:[rdi]
   14001654b:	(bad)  
   14001654c:	add    esp,DWORD PTR [rcx+0xe]
   14001654f:	(bad)  
   140016550:	mov    ah,0xc8
   140016552:	out    0xf,al
   140016554:	fdiv   QWORD PTR [rdx-0x40343095]
   14001655a:	in     eax,dx
   14001655b:	jbe    0x140016530
   14001655d:	sbb    ebp,esp
   14001655f:	cwde   
   140016560:	fstp   TBYTE PTR [rbx-0x1d]
   140016563:	lods   eax,DWORD PTR ds:[rsi]
   140016564:	jmp    0x1a4c03845
   140016569:	outs   dx,BYTE PTR ds:[rsi]
   14001656a:	(bad)  
   14001656b:	iret   
   14001656c:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14001656e:	ds jb  0x1400165e4
   140016571:	mov    edi,0x2ff6f597
   140016576:	div    DWORD PTR [rcx-0x2d4fb7c4]
   14001657c:	rex.WRXB mov r8b,0xd2
   14001657f:	xor    ebx,DWORD PTR [rax-0x16]
   140016582:	(bad)  
   140016583:	(bad)  
   140016584:	(bad)  
   140016585:	or     al,0xf9
   140016587:	int3   
   140016588:	add    DWORD PTR [rax+rcx*1],esp
   14001658b:	test   BYTE PTR [rcx+0x21],dl
   14001658e:	clc    
   14001658f:	jmp    0xce1e61d3
   140016594:	(bad)  
   140016595:	mov    bl,0x59
   140016597:	mov    ch,0x8d
   140016599:	(bad)  
   14001659a:	(bad)  
   14001659b:	outs   dx,DWORD PTR ds:[rsi]
   14001659c:	jle    0x140016593
   14001659e:	mov    bl,0x3f
   1400165a0:	jg     0x140016594
   1400165a2:	iret   
   1400165a3:	(bad)  
   1400165a4:	shl    DWORD PTR [rdi+0x54],cl
   1400165a7:	je     0x14001656c
   1400165a9:	pop    rdx
   1400165aa:	mov    ebx,0x5872da51
   1400165af:	adc    al,0xc5
   1400165b1:	pop    rax
   1400165b2:	rex.R ins DWORD PTR es:[rdi],dx
   1400165b4:	imul   ecx,ebx,0xf72526eb
   1400165ba:	pop    rdx
   1400165bb:	ror    DWORD PTR [rax+rax*1],1
   1400165be:	data16 hlt 
   1400165c0:	pushf  
   1400165c1:	jmp    0x15c0329ac
   1400165c6:	(bad)  
   1400165c8:	jle    0x14001655a
   1400165ca:	rcr    DWORD PTR [rdx+rcx*4],cl
   1400165cd:	mov    dl,0x4c
   1400165cf:	fldcw  WORD PTR [rcx+0xd]
   1400165d2:	or     DWORD PTR [rcx],edx
   1400165d4:	gs lock jle 0x14001655f
   1400165d8:	add    BYTE PTR [rsi],cl
   1400165da:	and    ah,dh
   1400165dc:	movsx  ebp,dh
   1400165df:	(bad)  
   1400165e0:	mov    ebp,0xec2c1934
   1400165e5:	pop    rax
   1400165e6:	mov    esi,0x73978ef9
   1400165eb:	xchg   edx,eax
   1400165ec:	sub    eax,0x6ebbcb66
   1400165f1:	cmp    bh,BYTE PTR [rdi+rsi*2-0x2d3d3509]
   1400165f8:	repnz (bad) 
   1400165fa:	std    
   1400165fb:	sub    edi,DWORD PTR [rbp+0xc]
   1400165fe:	push   rdx
   1400165ff:	add    edx,DWORD PTR [rbp+0x45]
   140016602:	pop    rsi
   140016603:	xchg   esp,eax
   140016604:	cmp    BYTE PTR [rdi+0x71],bh
   140016607:	mov    bl,0xf8
   140016609:	call   0x160d38d91
   14001660e:	stc    
   14001660f:	or     eax,0xfd7683eb
   140016614:	cld    
   140016615:	(bad)  
   140016616:	(bad)  
   140016617:	std    
   140016618:	in     eax,0x7f
   14001661a:	cmc    
   14001661b:	cmp    eax,DWORD PTR [rax+rbx*1-0x55]
   14001661f:	push   0xffffffffffffffa1
   140016621:	stos   BYTE PTR es:[rdi],al
   140016622:	jrcxz  0x1400165f6
   140016624:	fidivr DWORD PTR [rsp+rdi*1-0x32]
   140016628:	mov    edx,DWORD PTR [rsi-0x3de400f9]
   14001662e:	cdq    
   14001662f:	neg    DWORD PTR [rcx+rbp*2+0x6]
   140016633:	add    BYTE PTR [rbx],dh
   140016635:	cli    
   140016636:	mov    edx,0x801cd790
   14001663b:	out    0x6a,al
   14001663d:	shl    BYTE PTR [rsi],1
   14001663f:	(bad)  
   140016640:	mov    edx,DWORD PTR [rcx+rcx*8-0x1f0fda33]
   140016647:	loopne 0x14001662f
   140016649:	pop    rax
   14001664a:	clc    
   14001664b:	cmp    DWORD PTR [rax],ebx
   14001664d:	or     bl,BYTE PTR [rip+0xffffffffebd979ec]        # 0x12bdae03f
   140016653:	outs   dx,DWORD PTR ds:[rsi]
   140016654:	pop    rsp
   140016655:	jl     0x140016650
   140016657:	sbb    edi,DWORD PTR [rdi-0x56f48573]
   14001665d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001665e:	sub    DWORD PTR [rdi+0x49e9496],0xffffff91
   140016665:	test   al,0x2d
   140016667:	xchg   ebx,eax
   140016668:	(bad)  
   140016669:	cld    
   14001666a:	(bad)  
   14001666c:	(bad)  
   14001666d:	fdiv   DWORD PTR [rax-0x399a2b9f]
   140016673:	lods   eax,DWORD PTR ds:[rsi]
   140016674:	mov    dl,BYTE PTR [rsi+0x6d1c2bea]
   14001667a:	ins    BYTE PTR es:[rdi],dx
   14001667b:	ins    DWORD PTR es:[rdi],dx
   14001667c:	jle    0x140016641
   14001667e:	js     0x140016670
   140016680:	push   QWORD PTR [rsi]
   140016682:	push   0xffffffffba330006
   140016687:	es je  0x14001667d
   14001668a:	lea    eax,[rdi+0x2c16ce29]
   140016690:	retf   
   140016691:	ret    0x68a8
   140016694:	(bad)  
   140016695:	push   rbx
   140016696:	xor    BYTE PTR [rbx],0x10
   140016699:	adc    ch,BYTE PTR [rax]
   14001669b:	in     al,dx
   14001669c:	cmp    BYTE PTR [rdi],bl
   14001669e:	scas   eax,DWORD PTR es:[rdi]
   14001669f:	lahf   
   1400166a0:	cmp    eax,0x80073e7f
   1400166a5:	sub    al,0x4d
   1400166a7:	sbb    DWORD PTR [rax],eax
   1400166a9:	xchg   edx,eax
   1400166aa:	and    al,0x21
   1400166ac:	imul   ebx,DWORD PTR [rbp-0x186390fd],0x71
   1400166b3:	fdiv   DWORD PTR [rsi+riz*4-0x1e]
   1400166b7:	(bad)  
   1400166b8:	rex.WXB (bad) 
   1400166ba:	add    eax,eax
   1400166bc:	mov    WORD PTR [rsi+0x6c5aea17],gs
   1400166c2:	movsxd eax,esi
   1400166c4:	lock xor ebx,DWORD PTR [rdx+0x34668cd1]
   1400166cb:	movabs ds:0x8cd19a334668cd19,eax
   1400166d4:	data16 xor al,0xa3
   1400166d7:	sbb    ebp,ecx
   1400166d9:	push   0xffffffffd19a3346
   1400166de:	mov    WORD PTR [rsi+0x34],fs
   1400166e1:	movabs ds:0x8cd19a334668cd19,eax
   1400166ea:	data16 xor al,0xa3
   1400166ed:	sbb    ebp,ecx
   1400166ef:	push   0xffffffffd19a3346
   1400166f4:	mov    WORD PTR [rsi+0x34],fs
   1400166f7:	movabs ds:0x8cd19a334668cd19,eax
   140016700:	data16 xor al,0xa3
   140016703:	sbb    ebp,ecx
   140016705:	push   0xffffffffd19a3346
   14001670a:	mov    WORD PTR [rsi+0x34],fs
   14001670d:	movabs ds:0x8cd19a334668cd19,eax
   140016716:	data16 xor al,0xa3
   140016719:	sbb    ebp,ecx
   14001671b:	push   0xffffffffd19a3346
   140016720:	mov    WORD PTR [rsi+0x34],fs
   140016723:	movabs ds:0xe33fff4005e8cd19,eax
   14001672c:	push   0x2c
   14001672e:	ins    BYTE PTR es:[rdi],dx
   14001672f:	xchg   ecx,eax
   140016730:	rex.W stc 
   140016732:	add    eax,DWORD PTR [rax]
   140016734:	add    BYTE PTR [rax],al
   140016736:	add    BYTE PTR [rcx+0x45],cl
   140016739:	rex.WRX
   14001673a:	rex.R scas al,BYTE PTR es:[rdi]
   14001673c:	rex.X (bad) 
   14001673e:	(bad)  
   14001673f:	add    BYTE PTR [rax],ch
   140016741:	add    BYTE PTR [rax],al
   140016743:	add    BYTE PTR [rax+0x0],al
   140016746:	add    BYTE PTR [rax],al
   140016748:	add    BYTE PTR [rax],0x0
   14001674b:	add    BYTE PTR [rcx],al
   14001674d:	add    BYTE PTR [rax],ah
   14001674f:	add    BYTE PTR [rax],al
   140016751:	add    BYTE PTR [rax],al
   140016753:	add    BYTE PTR [rax],al
   140016755:	rex.X add BYTE PTR [rax],al
	...
   140016b00:	mov    esp,0xbc086f9d
   140016b05:	popf   
   140016b06:	outs   dx,DWORD PTR ds:[rsi]
   140016b07:	adc    DWORD PTR [rbp+rbx*4-0x6243e291],edi
   140016b0e:	outs   dx,DWORD PTR ds:[rsi]
   140016b0f:	cs mov esp,0xbc456b9b
   140016b15:	popf   
   140016b16:	outs   dx,BYTE PTR ds:[rsi]
   140016b17:	sub    al,0xbc
   140016b19:	popf   
   140016b1a:	outs   dx,DWORD PTR ds:[rsi]
   140016b1b:	or     DWORD PTR [rax],eax
	...
   140016be1:	add    BYTE PTR [rax],al
   140016be3:	add    BYTE PTR [rbp+rbx*4-0x6243f891],bh
   140016bea:	outs   dx,DWORD PTR ds:[rsi]
   140016beb:	adc    DWORD PTR [rbp+rbx*4-0x6243e391],edi
   140016bf2:	outs   dx,DWORD PTR ds:[rsi]
   140016bf3:	cs mov esp,0xbc45689a
   140016bf9:	xchg   edi,eax
   140016bfa:	(bad)  
   140016bfb:	pop    rdi
   140016bfc:	mov    ebx,0xb2805a93
   140016c01:	mov    dl,BYTE PTR [rcx-0x67]
   140016c04:	stos   BYTE PTR es:[rdi],al
   140016c05:	(bad)  
   140016c06:	rex.WR lods al,BYTE PTR ds:[rsi]
   140016c08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016c09:	or     BYTE PTR [rax-0x40],0xab
   140016c0d:	test   BYTE PTR [rbp-0x2b],cl
   140016c10:	mov    al,0x8a
   140016c12:	push   rdx
   140016c13:	fcom   QWORD PTR [rax-0x6853b98f]
   140016c19:	jle    0x140016c74
   140016c1b:	gs mov esp,0xbc176f9d
   140016c21:	popf   
   140016c22:	outs   dx,DWORD PTR ds:[rsi]
   140016c23:	add    al,0x0
	...
   140016cc5:	add    BYTE PTR [rax],al
   140016cc7:	add    BYTE PTR [rbp+rbx*4-0x6243f991],bh
   140016cce:	outs   dx,DWORD PTR ds:[rsi]
   140016ccf:	adc    BYTE PTR [rbp+rbx*4-0x6243e391],bh
   140016cd6:	outs   dx,DWORD PTR ds:[rsi]
   140016cd7:	(bad)  
   140016cd8:	mov    ebp,0xbb456699
   140016cdd:	xchg   ebp,eax
   140016cde:	pop    rsi
   140016cdf:	(bad)  
   140016ce0:	mov    bh,0x8f
   140016ce2:	push   rdi
   140016ce3:	xchg   BYTE PTR [rsi-0x575fb17a],ch
   140016ce9:	or     DWORD PTR [rdx-0x4c],0xc5477ea6
   140016cf0:	stos   BYTE PTR es:[rdi],al
   140016cf1:	or     DWORD PTR [rax-0x27],0xe3548ab0
   140016cf8:	mov    bh,0x93
   140016cfa:	(bad)  
   140016cfb:	call   0x12b780fc0
   140016d00:	int    0xb2
   140016d02:	mov    dh,ch
   140016d04:	fld    st(1)
   140016d06:	fwait
   140016d07:	icebp  
   140016d08:	in     al,0xd0
   140016d0a:	scas   eax,DWORD PTR es:[rdi]
   140016d0b:	repnz in al,dx
   140016d0d:	xlat   BYTE PTR ds:[rbx]
   140016d0e:	mov    dh,0xed
   140016d10:	lock fnstsw WORD PTR [rdi-0x78431d1c]
   140016d17:	sti    
   140016d18:	movabs eax,ds:0xa77b415c6de63474
   140016d21:	mov    esp,DWORD PTR [rdx+0x50]
   140016d24:	mov    edx,0xbc4d6e9b
   140016d29:	popf   
   140016d2a:	outs   dx,DWORD PTR ds:[rsi]
   140016d2b:	cmp    edi,DWORD PTR [rbp+rbx*4+0xe6f]
	...
   140016daa:	add    BYTE PTR [rax],al
   140016dac:	mov    esp,0xbc056f9d
   140016db1:	popf   
   140016db2:	outs   dx,DWORD PTR ds:[rsi]
   140016db3:	(bad)  
   140016db4:	mov    esp,0xbc1e6f9d
   140016db9:	popf   
   140016dba:	outs   dx,DWORD PTR ds:[rsi]
   140016dbb:	cs mov esp,0xbb446498
   140016dc1:	xchg   esp,eax
   140016dc2:	pop    rsp
   140016dc3:	(bad)  
   140016dc4:	mov    dl,0x8c
   140016dc6:	push   rbp
   140016dc7:	lea    ebp,[rcx-0x585ab27e]
   140016dcd:	or     BYTE PTR [rdx-0x43],0xa6
   140016dd1:	jle    0x140016e1b
   140016dd3:	iret   
   140016dd4:	stos   BYTE PTR es:[rdi],al
   140016dd5:	or     DWORD PTR [rcx-0x22],0xe55086ad
   140016ddc:	mov    dh,0x91
   140016dde:	pop    rdi
   140016ddf:	jmp    0x12e740da5
   140016de4:	(bad)  
   140016de5:	mov    al,0x85
   140016de7:	lock fnstcw WORD PTR [rdi-0x321b0e6a]
   140016dee:	test   al,0xf0
   140016df0:	out    dx,al
   140016df1:	fstp   TBYTE PTR [rsp+rbp*8-0x1e442410]
   140016df8:	jmp    0x140016dcf
   140016dfa:	mov    bl,0xd5
   140016dfc:	call   0x123ca19d2
   140016e01:	leave  
   140016e02:	movabs eax,ds:0x86b9d8b293c0debd
   140016e0b:	scas   al,BYTE PTR es:[rdi]
   140016e0c:	xlat   BYTE PTR ds:[rbx]
   140016e0d:	mov    bh,0x83
   140016e0f:	mov    dl,0xda
   140016e11:	mov    edx,0xd1e7ba85
   140016e16:	scas   eax,DWORD PTR es:[rdi]
   140016e17:	in     eax,0xbf
   140016e19:	xchg   DWORD PTR [rcx],edi
   140016e1b:	call   QWORD PTR [rcx-0x5c22ae89]
   140016e21:	mov    gs,WORD PTR [rsi-0x35]
   140016e24:	test   al,0x8e
   140016e26:	data16 rol BYTE PTR [rbp-0x7d41c59b],1
   140016e2d:	ins    BYTE PTR es:[rdi],dx
   140016e2e:	rex.WRB
   140016e2f:	fs mov esp,0xbc216f9d
   140016e35:	popf   
   140016e36:	outs   dx,DWORD PTR ds:[rsi]
   140016e37:	(bad)  
   140016e38:	mov    esp,0xa6f9d
	...
   140016e8d:	add    BYTE PTR [rax],al
   140016e8f:	add    BYTE PTR [rbp+rbx*4-0x6243fc91],bh
   140016e96:	outs   dx,DWORD PTR ds:[rsi]
   140016e97:	or     eax,0x1e6f9dbc
   140016e9c:	mov    esp,0xbc2e6c9c
   140016ea1:	xchg   edi,eax
   140016ea2:	movsxd eax,DWORD PTR [rdi+rsi*4-0x70]
   140016ea6:	pop    rdx
   140016ea7:	data16 lods al,BYTE PTR ds:[rsi]
   140016ea9:	xchg   BYTE PTR [rdx-0x69],dl
   140016eac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016ead:	or     BYTE PTR [rsi-0x50],0xa5
   140016eb1:	jg     0x140016efd
   140016eb3:	(bad)
   140016eb6:	rex.W (bad) 
   140016eb8:	stos   BYTE PTR es:[rdi],al
   140016eb9:	or     DWORD PTR [rcx-0x1c],0xe84e84ac
   140016ec0:	mov    ch,0x90
   140016ec2:	pop    rbx
   140016ec3:	(bad)  
   140016ec4:	rcr    BYTE PTR [rbp-0x52311195],0x7e
   140016ecb:	lock fidivr DWORD PTR [rdx+rdx*4-0x5b341b10]
   140016ed3:	in     eax,dx
   140016ed4:	in     eax,dx
   140016ed5:	fdivr  DWORD PTR [rax-0x3f220f18]
   140016edb:	fucomip st,st(4)
   140016edd:	fnstcw WORD PTR [rdx-0x4f2e172c]
   140016ee3:	(bad)  
   140016ee4:	jrcxz  0x140016eb2
   140016ee6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016ee7:	mov    esi,0xb89cc4df
   140016eec:	fnstcw WORD PTR [rsi-0x48284a71]
   140016ef2:	(bad)  
   140016ef3:	mov    bh,0xd8
   140016ef5:	mov    bh,0x7f
   140016ef7:	rcr    bl,0xb9
   140016efa:	or     bl,0xe0
   140016efd:	mov    edx,0xbee3d781
   140016f02:	test   dh,bl
   140016f04:	call   0x12be5f4ca
   140016f09:	(bad)  
   140016f0a:	xchg   ecx,ebp
   140016f0c:	in     eax,dx
   140016f0d:	(bad)
   140016f10:	out    dx,eax
   140016f11:	leave  
   140016f12:	(bad)  
   140016f13:	out    0xeb,eax
   140016f15:	(bad)  
   140016f16:	scas   al,BYTE PTR es:[rdi]
   140016f17:	repz mov esp,0xaaff3a86
   140016f1d:	xor    DWORD PTR [rsi],0xffffffee
   140016f20:	int3   
   140016f21:	scas   al,BYTE PTR es:[rdi]
   140016f22:	jle    0x140016edb
   140016f24:	jrcxz  0x140016eec
   140016f26:	cwde   
   140016f27:	ret    0xa4d7
   140016f2a:	pop    rbp
   140016f2b:	inc    DWORD PTR [rax+0x65d43261]
   140016f31:	push   rsp
   140016f32:	cmp    eax,0x3f5d728b
   140016f37:	mov    DWORD PTR [rbx+rdi*2-0x624395aa],edx
   140016f3e:	outs   dx,DWORD PTR ds:[rsi]
   140016f3f:	sbb    eax,0x0
	...
   140016f84:	mov    ebp,0xb72c669a
   140016f89:	xchg   edx,eax
   140016f8a:	pop    rdi
   140016f8b:	je     0x140016f38
   140016f8d:	xchg   DWORD PTR [rbp-0x65],edx
   140016f90:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016f91:	or     DWORD PTR [rdi-0x46],0xcd4a7fa6
   140016f98:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016f99:	or     BYTE PTR [rax-0x24],0xab
   140016f9d:	(bad)  
   140016f9e:	rex.WX call 0x1294ff451
   140016fa4:	mov    ah,0x8b
   140016fa6:	push   rbx
   140016fa7:	in     eax,dx
   140016fa8:	rcr    DWORD PTR [rbp+riz*2+0x77abceef],0xef
   140016fb0:	fidivr DWORD PTR [rdx-0x371a1276]
   140016fb6:	sahf   
   140016fb7:	jmp    0x121b546a9
   140016fbc:	lock ffree st(0)
   140016fbf:	fucomp st(4)
   140016fc1:	fidivr DWORD PTR [rbp-0x492b172d]
   140016fc7:	retf   0xcee3
   140016fca:	lods   al,BYTE PTR ds:[rsi]
   140016fcb:	ret    0xc7de
   140016fce:	lahf   
   140016fcf:	mov    ebx,0xbb93bfda
   140016fd4:	fdivr  DWORD PTR [rcx-0x49274277]
   140016fda:	add    esp,0xcf7fb8da
   140016fe0:	fidivr WORD PTR [rcx-0x441d2880]
   140016fe6:	and    eax,0xe683bee5
   140016fec:	jmp    0x129ebf6b2
   140016ff1:	(bad)  
   140016ff2:	xchg   ecx,ebp
   140016ff4:	in     al,dx
   140016ff5:	(bad)  
   140016ff6:	mov    edi,esp
   140016ff8:	in     eax,dx
   140016ff9:	(bad)  
   140016ffa:	mov    esp,esp
   140016ffc:	in     al,dx
   140016ffd:	(bad)  
   140016ffe:	mov    eax,fs
   140017000:	in     eax,dx
   140017001:	(bad)  
   140017002:	(bad)  
   140017003:	fucomi st,st(4)
   140017005:	(bad)  
   140017006:	mov    edi,ss
   140017008:	jmp    0x140016fd0
   14001700a:	mov    dl,ch
   14001700c:	jmp    0x140016fd3
   14001700e:	mov    ebp,edx
   140017010:	in     eax,dx
   140017011:	(bad)
   140017014:	jmp    0x140016fea
   140017016:	scas   al,BYTE PTR es:[rdi]
   140017017:	out    dx,al
   140017018:	ror    BYTE PTR [rdi+rdi*1+0x3583abff],0xf1
   140017020:	shr    BYTE PTR [rdi-0x4f2e2785],1
   140017026:	ja     0x140017015
   140017028:	leave  
   140017029:	(bad)  
   14001702a:	pop    rcx
   14001702b:	(bad)  
   14001702c:	lods   eax,DWORD PTR ds:[rsi]
   14001702d:	jle    0x140017059
   14001702f:	std    
   140017030:	mov    esi,0xe0df719e
   140017035:	mov    edi,0x88b6e38c
   14001703a:	rex.RX in al,dx
   14001703c:	push   0x7a3453
   140017041:	add    BYTE PTR [rax],al
   140017043:	or     al,0x0
   140017045:	add    BYTE PTR [rax],al
   140017047:	(bad)  
   140017048:	add    BYTE PTR [rax],al
   14001704a:	add    BYTE PTR [rcx],al
	...
   140017080:	(bad)  
   140017081:	(bad)  
   140017082:	call   FWORD PTR [rsi]
   140017084:	mov    ch,0x92
   140017086:	pop    rdi
   140017087:	mov    ecx,0xf2528cb7
   14001708c:	ret    0x5c98
   14001708f:	repnz shr BYTE PTR [rax-0x46230f92],1
   140017096:	test   ebp,ebp
   140017098:	in     eax,0xc7
   14001709a:	cwde   
   14001709b:	out    0xed,eax
   14001709d:	(bad)  
   14001709e:	lods   al,BYTE PTR ds:[rsi]
   14001709f:	fucomp st(5)
   1400170a1:	fnstcw WORD PTR [rax-0x4125122a]
   1400170a7:	(bad)  
   1400170a8:	jmp    0x126cd2a84
   1400170ad:	shl    BYTE PTR [rax-0x58331e3c],cl
   1400170b3:	rcr    ebp,0xc4
   1400170b6:	popf   
   1400170b7:	rcr    edx,0xbc
   1400170ba:	mov    es,ebx
   1400170bc:	fnstcw WORD PTR [rax-0x4824367d]
   1400170c2:	jle    0x140017096
   1400170c4:	fistp  QWORD PTR [rcx-0x441c2683]
   1400170ca:	jge    0x1400170ac
   1400170cc:	out    0xbe,al
   1400170ce:	jle    0x1400170b6
   1400170d0:	call   0x129e8f295
   1400170d5:	ret    0xe783
   1400170d8:	(bad)  
   1400170d9:	(bad)
   1400170dc:	jmp    0x1400170a4
   1400170de:	(bad)  
   1400170df:	loop   0x1400170cb
   1400170e1:	(bad)  
   1400170e2:	(bad)  
   1400170e3:	fucomp st(2)
   1400170e5:	enter  0xd991,0xe9
   1400170e9:	(bad)  
   1400170ea:	nop
   1400170eb:	(bad)  
   1400170ec:	jmp    0x129d700b7
   1400170f1:	(bad)
   1400170f4:	(bad)  
   1400170f5:	(bad)
   1400170f8:	jmp    0x12bdefac0
   1400170fd:	ret    
   1400170fe:	xchg   ecx,esp
   140017100:	in     al,dx
   140017101:	(bad)  
   140017102:	test   ebp,esp
   140017104:	in     al,dx
   140017105:	(bad)  
   140017106:	test   dl,ch
   140017108:	out    dx,al
   140017109:	mov    BYTE PTR [rbp-0x79391012],0xf1
   140017110:	repz retf 0xf08a
   140017114:	out    dx,al
   140017115:	(bad)  
   140017116:	mov    al,0xf9
   140017118:	(bad)  
   140017119:	xchg   ecx,eax
   14001711a:	rex.XB push QWORD PTR [r10-0x2209c678]
   140017121:	mov    edx,0xb5d7dd82
   140017126:	jbe    0x140017113
   140017128:	int    0x9f
   14001712a:	pop    rsp
   14001712b:	jmp    FWORD PTR [rsi+rdi*2-0x644b09d5]
   140017132:	jae    0x1400170db
   140017134:	retf   
   140017135:	mov    dl,0x7e
   140017137:	rcl    esi,1
   140017139:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001713a:	(bad)  
   14001713b:	(bad)  
   14001713c:	jle    0x140017198
   14001713e:	sub    BYTE PTR [rdx+0x24000000],bh
   140017144:	add    BYTE PTR [rax],al
   140017146:	add    BYTE PTR [rdi],ah
   140017148:	add    BYTE PTR [rax],al
   14001714a:	add    BYTE PTR [rdx],bl
   14001714c:	add    BYTE PTR [rax],al
   14001714e:	add    BYTE PTR [rax+rax*1],cl
   140017151:	add    BYTE PTR [rax],al
   140017153:	add    al,BYTE PTR [rax]
	...
   14001717d:	add    BYTE PTR [rax],al
   14001717f:	add    bh,bh
   140017181:	(bad)  
   140017182:	call   FWORD PTR [rsi]
   140017184:	test   ch,0x79
   140017187:	push   rbp
   140017189:	rcr    DWORD PTR [rbx+rbp*8-0x36351908],cl
   140017190:	cmc    
   140017191:	in     al,0xc6
   140017193:	mov    edx,0xb1bdddf1
   140017198:	in     eax,dx
   140017199:	fdiv   DWORD PTR [rsi-0x59311857]
   14001719f:	mov    cl,0xe3
   1400171a1:	(bad)  
   1400171a2:	xchg   edx,eax
   1400171a3:	enter  0xb6de,0x7a
   1400171a7:	xlat   BYTE PTR ds:[rbx]
   1400171a8:	loop   0x140017166
   1400171aa:	sbb    ah,0xe6
   1400171ad:	mov    edi,0xc2e9e283
   1400171b2:	test   bh,ah
   1400171b4:	jmp    0x14001717a
   1400171b6:	test   dh,ah
   1400171b8:	lock mov DWORD PTR [rdi-0x712e061d],0x9dd7fbe4
   1400171c3:	out    0xf6,al
   1400171c5:	fldcw  WORD PTR [rcx-0x4c270f18]
   1400171cb:	out    0xef,al
   1400171cd:	fnstenv [rbp-0x4c260e1d]
   1400171d3:	(bad)  
   1400171d5:	fisubr DWORD PTR [rcx-0x652b0827]
   1400171db:	xlat   BYTE PTR ds:[rbx]
   1400171dc:	icebp  
   1400171dd:	retf   0xda8d
   1400171e0:	in     al,dx
   1400171e1:	(bad)
   1400171e4:	in     eax,dx
   1400171e5:	enter  0xe58d,0xec
   1400171e9:	(bad)  
   1400171ea:	mov    ebx,ebp
   1400171ec:	in     eax,dx
   1400171ed:	(bad)  
   1400171ee:	mov    esi,ebp
   1400171f0:	out    dx,eax
   1400171f1:	(bad)  
   1400171f2:	mov    ecx,esi
   1400171f4:	lock enter 0xf08b,0xf1
   1400171f9:	retf   0xf08c
   1400171fc:	repz int3 
   1400171fe:	mov    gs,ebp
   140017200:	hlt    
   140017201:	int    0x8f
   140017203:	in     al,dx
   140017204:	hlt    
   140017205:	(bad)  
   140017206:	nop
   140017207:	jmp    0x126914101
   14001720c:	test   bh,0x91
   14001720f:	in     al,0xf8
   140017211:	rcl    DWORD PTR [rbx-0x4d270f1f],1
   140017217:	repnz leave 
   140017219:	xchg   esi,eax
   14001721a:	rex.W push QWORD PTR [rcx-0x200fc577]
   140017221:	mov    esp,0xb7d7ca87
   140017226:	jns    0x14001720c
   140017228:	shl    BYTE PTR [rax+riz*2+0x2c81aeff],cl
   14001722f:	div    BYTE PTR [rdi-0x34528962]
   140017235:	mov    al,0x7c
   140017237:	rcl    esp,1
   140017239:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001723a:	(bad)  
   14001723b:	call   FWORD PTR [rdx+0xd81d70]
   140017241:	add    BYTE PTR [rax],al
   140017243:	and    eax,0x31000000
   140017248:	add    BYTE PTR [rax],al
   14001724a:	add    BYTE PTR [rcx],dh
   14001724c:	add    BYTE PTR [rax],al
   14001724e:	add    BYTE PTR [rbx],ch
   140017250:	add    BYTE PTR [rax],al
   140017252:	add    BYTE PTR [rsi],bl
   140017254:	add    BYTE PTR [rax],al
   140017256:	add    BYTE PTR [rip+0x3000000],cl        # 0x14301725c
	...
   140017280:	(bad)  
   140017281:	(bad)  
   140017282:	call   FWORD PTR [rsi]
   140017284:	in     eax,0xba
   140017286:	je     0x140017287
   140017288:	hlt    
   140017289:	int    0x91
   14001728b:	mov    dl,0xff
   14001728d:	fisubr WORD PTR [rbx-0x5621017a]
   140017293:	mov    ebp,?
   140017295:	fisubr WORD PTR [rbx-0x5b260576]
   14001729b:	xchg   esi,eax
   14001729c:	lock mov BYTE PTR [rsi-0x7c390f1d],0xfd
   1400172a4:	not    eax
   1400172a6:	xchg   ecx,eax
   1400172a7:	fdivp  st(1),st
   1400172a9:	(bad)  
   1400172aa:	cdq    
   1400172ab:	iret   
   1400172ac:	stc    
   1400172ad:	(bad)  
   1400172ae:	cdq    
   1400172af:	leave  
   1400172b0:	(bad)  
   1400172b1:	fstp   DWORD PTR [rbx-0x531b003d]
   1400172b7:	int    0xe9
   1400172b9:	(bad)  
   1400172bb:	loope  0x14001726d
   1400172bd:	ret    0xf1e5
   1400172c0:	jge    0x140017265
   1400172c2:	repnz stc 
   1400172c4:	pop    rdx
   1400172c5:	mov    ?,esi
   1400172c7:	std    
   1400172c8:	rex.WX test al,dil
   1400172cb:	dec    DWORD PTR [rax-0x7f]
   1400172ce:	clc    
   1400172cf:	dec    DWORD PTR [rsi-0x7b]
   1400172d2:	clc    
   1400172d3:	jmp    QWORD PTR [rbx-0x6e]
   1400172d6:	cmc    
   1400172d7:	dec    DWORD PTR [rax-0x47011459]
   1400172dd:	mov    edi,0xcddffed5
   1400172e2:	mov    cl,0xf9
   1400172e4:	in     al,dx
   1400172e5:	retf   0xf093
   1400172e8:	in     eax,dx
   1400172e9:	retf   0xe78e
   1400172ec:	not    ebx
   1400172ee:	cdq    
   1400172ef:	loop   0x1400172e9
   1400172f1:	(bad)  
   1400172f2:	pushf  
   1400172f3:	loope  0x1400172eb
   1400172f5:	(bad)  
   1400172f6:	fwait
   1400172f7:	loopne 0x1400172f0
   1400172f9:	(bad)  
   1400172fa:	(bad)  
   1400172fb:	(bad)  
   1400172fd:	(bad)  
   1400172fe:	cdq    
   1400172ff:	(bad)  
   140017301:	rcr    DWORD PTR [rcx-0x682c0722],cl
   140017307:	loopne 0x140017301
   140017309:	rcl    DWORD PTR [rsi-0x6a2d0720],cl
   14001730f:	loopne 0x14001730c
   140017311:	(bad)  
   140017312:	xchg   esi,eax
   140017313:	fcomip st,st(3)
   140017315:	fidiv  DWORD PTR [rcx+rsi*8-0xb46432]
   14001731c:	mov    bl,0x8b
   14001731e:	cmp    ebp,edi
   140017320:	in     eax,0xc1
   140017322:	mov    cl,dl
   140017324:	fidivr WORD PTR [rbx-0x572a1c85]
   14001732a:	movsxd edi,edi
   14001732c:	mov    al,0x83
   14001732e:	(bad)  
   14001732f:	cmc    
   140017330:	shl    DWORD PTR [rbp-0x472a5084],0x82
   140017337:	rcr    eax,1
   140017339:	stos   BYTE PTR es:[rdi],al
   14001733a:	call   DWORD PTR [rdx+rsi*2+0xd51f]
   140017342:	add    BYTE PTR [rax+rax*1],dl
   140017345:	add    BYTE PTR [rax],al
   140017347:	and    al,BYTE PTR [rax]
   140017349:	add    BYTE PTR [rax],al
   14001734b:	and    eax,DWORD PTR [rax]
   14001734d:	add    BYTE PTR [rax],al
   14001734f:	add    BYTE PTR es:[rax],al
   140017352:	add    BYTE PTR [rsi],ah
   140017354:	add    BYTE PTR [rax],al
   140017356:	add    BYTE PTR [rsi],bl
   140017358:	add    BYTE PTR [rax],al
   14001735a:	add    BYTE PTR [rdx],dl
   14001735c:	add    BYTE PTR [rax],al
   14001735e:	add    BYTE PTR [rip+0x0],al        # 0x140017364
	...
   140017380:	(bad)  
   140017381:	(bad)  
   140017382:	call   FWORD PTR [rsi]
   140017384:	in     eax,0xba
   140017386:	jne    0x140017387
   140017388:	cmc    
   140017389:	rcl    BYTE PTR [rsi+rbp*4-0x76532001],1
   140017390:	(bad)  
   140017391:	fisubr WORD PTR [rbx-0x51200173]
   140017397:	mov    edi,esi
   140017399:	rcr    DWORD PTR [rcx+rbp*4-0x7e3c13],cl
   1400173a0:	hlt    
   1400173a1:	int    0x8f
   1400173a3:	out    0xfc,eax
   1400173a5:	(bad)  [rcx-0x60240143]
   1400173ab:	mov    ecx,0xc2abe6ff
   1400173b0:	in     al,0xdf
   1400173b2:	(bad)  
   1400173b3:	loop   0x140017336
   1400173b5:	test   eax,0x7935fbf3
   1400173ba:	clc    
   1400173bb:	call   FWORD PTR [rdx]
   1400173bd:	gs hlt 
   1400173bf:	call   FWORD PTR [rax]
   1400173c1:	(bad)  {k3}
   1400173c6:	icebp  
   1400173c7:	call   FWORD PTR [rsi]
   1400173c9:	gs icebp 
   1400173cb:	call   FWORD PTR [rsi]
   1400173cd:	fs icebp 
   1400173cf:	call   FWORD PTR [rip+0x1afff163]        # 0x15b016538
   1400173d5:	(bad)  
   1400173d6:	icebp  
   1400173d7:	call   FWORD PTR [rax]
   1400173d9:	pop    rdi
   1400173da:	repz call FWORD PTR [rdi]
   1400173dd:	gs idiv bh
   1400173e0:	rex.XB jg 0x1400173dc
   1400173e3:	dec    DWORD PTR [rdi-0x2b021554]
   1400173e9:	leave  
   1400173ea:	mov    ebx,0x90c3e1f4
   1400173ef:	out    0xee,eax
   1400173f1:	int    0x96
   1400173f3:	(bad)  
   1400173f5:	fisub  DWORD PTR [rax-0x61290623]
   1400173fb:	fdivp  st(1),st
   1400173fd:	(bad)  
   1400173fe:	popf   
   1400173ff:	fdivp  st(1),st
   140017401:	(bad)  
   140017402:	pushf  
   140017403:	fdivp  st(2),st
   140017405:	(bad)  
   140017406:	(bad)  
   140017407:	fdivp  st(2),st
   140017409:	(bad)  
   14001740a:	cdq    
   14001740b:	(bad)  
   14001740d:	(bad)  
   14001740e:	cwde   
   14001740f:	(bad)  
   140017411:	(bad)  
   140017412:	cwde   
   140017413:	(bad)  
   140017415:	fidivr WORD PTR [rax+0x53a3d4f1]
   14001741b:	push   QWORD PTR [rsp+rcx*4-0x3b1810c4]
   140017422:	mov    cs,ecx
   140017424:	loopne 0x1400173e4
   140017426:	jle    0x14001740b
   140017428:	fldcw  WORD PTR [rbp-0x7a4d0098]
   14001742e:	xor    ah,dh
   140017430:	(bad)  
   140017431:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017432:	jge    0x1400173e3
   140017434:	fnstcw WORD PTR [rbx-0x50232f7d]
   14001743a:	push   0xffffffffffffffff
   14001743c:	sahf   
   14001743d:	je     0x14001745f
   14001743f:	rol    DWORD PTR [rax],cl
   140017441:	add    BYTE PTR [rax],al
   140017443:	or     DWORD PTR [rax],eax
   140017445:	add    BYTE PTR [rax],al
   140017447:	(bad)  
   140017448:	add    BYTE PTR [rax],al
   14001744a:	add    BYTE PTR [rip+0x14000000],dl        # 0x154017450
   140017450:	add    BYTE PTR [rax],al
   140017452:	add    BYTE PTR [rbx],dl
   140017454:	add    BYTE PTR [rax],al
   140017456:	add    BYTE PTR [rcx],dl
   140017458:	add    BYTE PTR [rax],al
   14001745a:	add    BYTE PTR [rip+0x4000000],cl        # 0x144017460
	...
   140017480:	(bad)  
   140017481:	(bad)  
   140017482:	call   FWORD PTR [rsi]
   140017484:	in     eax,0xba
   140017486:	jne    0x140017487
   140017488:	cmc    
   140017489:	rcl    BYTE PTR [rbp-0x53200052],1
   14001748f:	mov    ebp,edi
   140017491:	fisubr WORD PTR [rbx-0x501f0273]
   140017497:	mov    esi,esi
   140017499:	rcr    DWORD PTR [rbp-0x7d3b1254],cl
   14001749f:	push   rbp
   1400174a1:	rcl    BYTE PTR [rdx-0x5f220021],1
   1400174a7:	mov    ecx,0xd1bae7ff
   1400174ac:	movabs al,ds:0x17fff87730f7ecbc
   1400174b5:	bnd jmp QWORD PTR fs:[rax]
   1400174b9:	push   0xfffffffffffffff1
   1400174bb:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601662d
   1400174c1:	ins    BYTE PTR es:[rdi],dx
   1400174c2:	icebp  
   1400174c3:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166016635
   1400174c9:	imul   esi,ecx,0xffffffff
   1400174cc:	and    eax,0x25fff16b
   1400174d1:	push   0xfffffffffffffff1
   1400174d3:	jmp    QWORD PTR [rip+0x25fff169]        # 0x166016642
   1400174d9:	imul   esi,ecx,0xf16824ff
   1400174df:	call   FWORD PTR [rsi]
   1400174e1:	movsxd esi,eax
   1400174e3:	call   FWORD PTR [rax]
   1400174e5:	(bad)  
   1400174e6:	repz inc DWORD PTR [rdi+rdi*2-0x6]
   1400174eb:	jmp    FWORD PTR [rbp-0x28032044]
   1400174f1:	mov    edi,0xc1e0ef9a
   1400174f6:	(bad)  
   1400174f7:	jrcxz  0x1400174f4
   1400174f9:	fldenv [rax-0x5e250423]
   1400174ff:	(bad)  
   140017501:	fcomp  DWORD PTR [rdi-0x61270423]
   140017507:	(bad)  
   140017509:	xlat   BYTE PTR ds:[rbx]
   14001750a:	popf   
   14001750b:	(bad)  
   14001750d:	xlat   BYTE PTR ds:[rbx]
   14001750e:	(bad)  
   140017511:	(bad)  
   140017512:	cdq    
   140017513:	(bad)  
   140017515:	loop   0x1400174d6
   140017517:	icebp  
   140017518:	loop   0x1400174d5
   14001751a:	je     0x14001751b
   14001751c:	mov    eax,0xecf04090
   140017521:	enter  0xc591,0xe4
   140017525:	ret    
   140017526:	sbb    esi,0xff6bb1dd
   14001752c:	mov    ah,0x88
   14001752e:	xor    esi,ebx
   140017530:	shl    DWORD PTR [rbp-0x3b1d6a75],1
   140017536:	mov    eax,edx
   140017538:	loope  0x1400174ee
   14001753a:	outs   dx,BYTE PTR ds:[rsi]
   14001753b:	jmp    QWORD PTR [rax+0xd02176]
   140017541:	add    BYTE PTR [rax],al
   140017543:	add    DWORD PTR [rax],eax
   140017545:	add    BYTE PTR [rax],al
   140017547:	(bad)  
   140017548:	add    BYTE PTR [rax],al
   14001754a:	add    BYTE PTR [rip+0x4000000],al        # 0x144017550
   140017550:	add    BYTE PTR [rax],al
   140017552:	add    BYTE PTR [rdx],al
   140017554:	add    BYTE PTR [rax],al
   140017556:	add    BYTE PTR [rcx],al
	...
   140017580:	(bad)  
   140017581:	(bad)  
   140017582:	call   FWORD PTR [rsi]
   140017584:	in     eax,0xbb
   140017586:	jbe    0x140017587
   140017588:	hlt    
   140017589:	rcl    BYTE PTR [rsi-0x51200152],1
   14001758f:	mov    ebp,edi
   140017591:	fisubr WORD PTR [rbp+rcx*4-0x764f1f03]
   140017598:	not    bl
   14001759a:	popf   
   14001759b:	stos   DWORD PTR es:[rdi],eax
   14001759c:	in     eax,dx
   14001759d:	ret    
   14001759e:	cmp    edi,0xfffffffb
   1400175a1:	ror    DWORD PTR [rdi-0x3d1c0a22],cl
   1400175a7:	fsubr  DWORD PTR [rsi-0x62]
   1400175aa:	repz (bad) 
   1400175ac:	sbb    BYTE PTR [rax-0xb],ch
   1400175af:	jmp    QWORD PTR [rcx]
   1400175b1:	ins    BYTE PTR es:[rdi],dx
   1400175b2:	icebp  
   1400175b3:	jmp    QWORD PTR [rsi]
   1400175b5:	outs   dx,DWORD PTR ds:[rsi]
   1400175b6:	icebp  
   1400175b7:	jmp    QWORD PTR [rip+0x25fff26e]        # 0x16601682b
   1400175bd:	outs   dx,BYTE PTR ds:[rsi]
   1400175be:	icebp  
   1400175bf:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166016733
   1400175c5:	ins    DWORD PTR es:[rdi],dx
   1400175c6:	icebp  
   1400175c7:	jmp    QWORD PTR [rsi]
   1400175c9:	ins    DWORD PTR es:[rdi],dx
   1400175ca:	icebp  
   1400175cb:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601673d
   1400175d1:	ins    BYTE PTR es:[rdi],dx
   1400175d2:	icebp  
   1400175d3:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x166016744
   1400175d9:	imul   esi,ecx,0xffffffff
   1400175dc:	and    eax,0x25fff16a
   1400175e1:	push   0xfffffffffffffff1
   1400175e3:	jmp    QWORD PTR [rip+0x1cfff169]        # 0x15d016752
   1400175e9:	movsxd esi,ecx
   1400175eb:	jmp    QWORD PTR [rcx]
   1400175ed:	push   0xffffffffad8cfff7
   1400175f2:	icebp  
   1400175f3:	(bad)  
   1400175f4:	rol    eax,1
   1400175f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400175f7:	repz (bad) 
   1400175f9:	mov    ecx,0xd8fae58b
   1400175fe:	movabs eax,ds:0x9ed6fadd9fd8fbdd
   140017607:	(bad)  
   140017609:	(bad)  
   14001760a:	popf   
   14001760b:	(bad)  
   14001760d:	(bad)  
   14001760e:	pushf  
   14001760f:	(bad)  
   140017611:	xlat   BYTE PTR ds:[rbx]
   140017612:	(bad)  
   140017615:	jrcxz  0x1400175d6
   140017617:	icebp  
   140017618:	call   0xfc00f5e1
   14001761d:	xchg   ebx,eax
   14001761e:	rex.R out dx,eax
   140017620:	in     eax,dx
   140017621:	leave  
   140017622:	xchg   ebx,eax
   140017623:	(bad)  
   140017624:	out    0xc5,eax
   140017626:	sbb    esp,0xffffffe1
   140017629:	mov    dh,0x6e
   14001762b:	push   QWORD PTR [rsi-0x270ccb76]
   140017631:	mov    esp,0xcbea9292
   140017636:	nop
   140017637:	mov    edi,0xff70b5e0
   14001763c:	scas   al,BYTE PTR es:[rdi]
   14001763d:	and    DWORD PTR [rdi],0xce
	...
   14001767f:	add    bh,bh
   140017681:	(bad)  
   140017682:	call   FWORD PTR [rsi]
   140017684:	in     eax,0xbb
   140017686:	jbe    0x140017687
   140017688:	hlt    
   140017689:	rcl    BYTE PTR [rsi-0x501f0153],1
   14001768f:	mov    ebp,edi
   140017691:	fisubr WORD PTR [rsi-0x4e1f0273]
   140017697:	mov    ebp,esi
   140017699:	(bad)  
   14001769a:	sahf   
   14001769b:	stos   DWORD PTR es:[rdi],eax
   14001769c:	repnz mov BYTE PTR [rax-0x4b271103],0xf5
   1400176a4:	pop    rbx
   1400176a5:	xchg   ebx,eax
   1400176a6:	repnz (bad) 
   1400176a8:	(bad)  
   1400176a9:	imul   esi,esp,0xf27125ff
   1400176af:	jmp    QWORD PTR [rsi]
   1400176b1:	jno    0x1400176a5
   1400176b3:	jmp    QWORD PTR [rip+0x24fff26f]        # 0x165016928
   1400176b9:	outs   dx,DWORD PTR ds:[rsi]
   1400176ba:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166016930
   1400176c1:	outs   dx,DWORD PTR ds:[rsi]
   1400176c2:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166016938
   1400176c9:	outs   dx,BYTE PTR ds:[rsi]
   1400176ca:	icebp  
   1400176cb:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x16601683f
   1400176d1:	ins    DWORD PTR es:[rdi],dx
   1400176d2:	icebp  
   1400176d3:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166016846
   1400176d9:	ins    BYTE PTR es:[rdi],dx
   1400176da:	icebp  
   1400176db:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601684d
   1400176e1:	imul   esi,ecx,0xffffffff
   1400176e4:	and    eax,0x25fff16b
   1400176e9:	imul   esi,ecx,0xffffffff
   1400176ec:	and    ch,BYTE PTR [rax-0xf]
   1400176ef:	call   FWORD PTR [rcx]
   1400176f1:	movsxd esi,ebp
   1400176f3:	inc    DWORD PTR [rcx-0x2f010958]
   1400176f9:	mov    esi,0xb7d4f4a4
   1400176fe:	mov    esp,ebp
   140017700:	cli    
   140017701:	fsub   DWORD PTR [rdx-0x5f270523]
   140017707:	(bad)  
   140017709:	xlat   BYTE PTR ds:[rbx]
   14001770a:	lahf   
   14001770b:	(bad)  
   14001770d:	(bad)  
   14001770e:	popf   
   14001770f:	(bad)  
   140017711:	xlat   BYTE PTR ds:[rbx]
   140017712:	pushf  
   140017713:	(bad)  
   140017715:	jrcxz  0x1400176d7
   140017717:	icebp  
   140017718:	(bad)  
   140017719:	mov    BYTE PTR [rax+0x4593baff],0xef
   140017720:	in     al,dx
   140017721:	leave  
   140017722:	xchg   esp,eax
   140017723:	(bad)  
   140017724:	out    0xc6,eax
   140017726:	xchg   ah,bl
   140017728:	jmp    0x1400176f1
   14001772a:	test   edi,edi
   14001772c:	mov    ecx,0xd6f2398e
   140017731:	mov    ebx,0xcceb9291
   140017736:	xchg   ecx,eax
   140017737:	mov    edi,0xff72b5de
   14001773c:	mov    esp,0xce2d8c
	...
   14001777d:	add    BYTE PTR [rax],al
   14001777f:	add    bh,bh
   140017781:	(bad)  
   140017782:	call   FWORD PTR [rsi]
   140017784:	in     eax,0xbb
   140017786:	ja     0x140017787
   140017788:	hlt    
   140017789:	rcl    BYTE PTR [rsi-0x501f0253],1
   14001778f:	mov    ebp,edi
   140017791:	fild   QWORD PTR [rdi-0x4c1e0273]
   140017797:	mov    edi,esi
   140017799:	(bad)  
   14001779a:	pushf  
   14001779b:	stos   BYTE PTR es:[rdi],al
   14001779c:	repz rcr DWORD PTR [rbp-0x14659603],1
   1400177a3:	call   FWORD PTR [rax]
   1400177a5:	ins    BYTE PTR es:[rdi],dx
   1400177a6:	cmc    
   1400177a7:	jmp    QWORD PTR [rsi]
   1400177a9:	jae    0x14001779d
   1400177ab:	jmp    QWORD PTR [rdi]
   1400177ad:	jae    0x1400177a1
   1400177af:	jmp    QWORD PTR [rax]
   1400177b1:	outs   dx,DWORD PTR ds:[rsi]
   1400177b2:	bnd jmp QWORD PTR [rcx]
   1400177b5:	outs   dx,DWORD PTR ds:[rsi]
   1400177b6:	icebp  
   1400177b7:	jmp    QWORD PTR [rip+0x1ffff171]        # 0x16001692e
   1400177bd:	ins    DWORD PTR es:[rdi],dx
   1400177be:	bnd jmp QWORD PTR [rax+rsi*2]
   1400177c2:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166016a38
   1400177c9:	outs   dx,DWORD PTR ds:[rsi]
   1400177ca:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166016a40
   1400177d1:	outs   dx,DWORD PTR ds:[rsi]
   1400177d2:	icebp  
   1400177d3:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166016947
   1400177d9:	outs   dx,BYTE PTR ds:[rsi]
   1400177da:	bnd jmp QWORD PTR [rip+0x26fff26e]        # 0x167016a4f
   1400177e1:	ins    DWORD PTR es:[rdi],dx
   1400177e2:	bnd jmp QWORD PTR [rip+0x25fff16d]        # 0x166016956
   1400177e9:	ins    BYTE PTR es:[rdi],dx
   1400177ea:	icebp  
   1400177eb:	jmp    QWORD PTR [rip+0x23fff16c]        # 0x16401695d
   1400177f1:	push   0xfffffffffffffff1
   1400177f3:	call   FWORD PTR [rcx]
   1400177f5:	fs hlt 
   1400177f7:	call   QWORD PTR [rcx-0x32020e4f]
   1400177fd:	mov    dh,0x97
   1400177ff:	icebp  
   140017800:	fidivr DWORD PTR [rbp-0x25041b6e]
   140017806:	movabs ds:0x9ed7fadd9fd7fadd,eax
   14001780f:	(bad)  
   140017811:	xlat   BYTE PTR ds:[rbx]
   140017812:	popf   
   140017813:	(bad)  
   140017815:	jrcxz  0x1400177d8
   140017817:	icebp  
   140017818:	(bad)  
   140017819:	mov    BYTE PTR [rax+0x4594baff],0xef
   140017820:	(bad)  
   140017821:	leave  
   140017822:	xchg   ebp,eax
   140017823:	(bad)  
   140017824:	out    0xc6,al
   140017826:	test   esp,ebx
   140017828:	lock iret 
   14001782a:	xchg   edx,eax
   14001782b:	(bad)  
   14001782c:	mov    esp,0xd6f34395
   140017831:	mov    edx,0xcceb9291
   140017836:	nop
   140017837:	mov    edi,0xff74b9e2
   14001783c:	mov    ebx,0xce2e8c
	...
   14001787d:	add    BYTE PTR [rax],al
   14001787f:	add    bh,bh
   140017881:	(bad)  
   140017882:	call   FWORD PTR [rsi]
   140017884:	in     eax,0xbb
   140017886:	ja     0x140017887
   140017888:	repz rcl BYTE PTR [rdi-0x50200252],1
   14001788f:	mov    esp,edi
   140017891:	fild   QWORD PTR [rdi-0x4d1f0373]
   140017897:	xchg   edi,edi
   140017899:	fsub   QWORD PTR [rbp-0x27547051]
   14001789f:	(bad)  
   1400178a0:	sbb    BYTE PTR [rdi-0x9],ch
   1400178a3:	jmp    QWORD PTR [rsi]
   1400178a5:	jne    0x140017899
   1400178a7:	jmp    QWORD PTR [rsi]
   1400178a9:	jne    0x14001789d
   1400178ab:	jmp    QWORD PTR [rax]
   1400178ad:	jo     0x1400178a1
   1400178af:	inc    DWORD PTR [rbx-0x7a]
   1400178b2:	repz (bad) 
   1400178b4:	mov    edi,0xd2fffad5
   1400178b9:	loope  0x1400178b6
   1400178bb:	dec    DWORD PTR [rsi+0x40fff8b6]
   1400178c1:	xor    ebx,0xffffffff
   1400178c4:	sub    al,0x75
   1400178c6:	bnd jmp QWORD PTR [rsi]
   1400178c9:	jno    0x1400178bd
   1400178cb:	jmp    QWORD PTR [rip+0x26fff270]        # 0x167016b41
   1400178d1:	jo     0x1400178c5
   1400178d3:	jmp    QWORD PTR [rsi]
   1400178d5:	jo     0x1400178c9
   1400178d7:	jmp    QWORD PTR [rsi]
   1400178d9:	outs   dx,DWORD PTR ds:[rsi]
   1400178da:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166016b50
   1400178e1:	outs   dx,DWORD PTR ds:[rsi]
   1400178e2:	icebp  
   1400178e3:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166016a57
   1400178e9:	outs   dx,BYTE PTR ds:[rsi]
   1400178ea:	icebp  
   1400178eb:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166016a5e
   1400178f1:	ins    DWORD PTR es:[rdi],dx
   1400178f2:	icebp  
   1400178f3:	jmp    QWORD PTR [rdx]
   1400178f5:	push   0xfffffffffffffff1
   1400178f7:	jmp    QWORD PTR [rbp*2-0x3e4b0008]
   1400178fe:	(bad)  
   140017900:	(bad)
   140017903:	in     eax,dx
   140017904:	jmp    0x13be313d4
   140017909:	fisub  DWORD PTR [rbx-0x60280623]
   14001790f:	(bad)  
   140017911:	fcomp  DWORD PTR [rsi-0x3e1c0725]
   140017917:	icebp  
   140017918:	(bad)  
   140017919:	(bad)  
   14001791a:	jg     0x14001791b
   14001791c:	mov    edx,0xeaef4594
   140017921:	leave  
   140017922:	xchg   edi,eax
   140017923:	(bad)  
   140017924:	in     eax,0xc5
   140017926:	test   esp,ebx
   140017928:	lock (bad) 
   14001792a:	nop
   14001792b:	(bad)  
   14001792c:	mov    esp,0xd5f34395
   140017931:	mov    edx,0xcdeb9292
   140017936:	xchg   edx,eax
   140017937:	mov    edi,0xff85c5e9
   14001793c:	mov    ebp,0xcd2f8f
	...
   14001797d:	add    BYTE PTR [rax],al
   14001797f:	add    bh,bh
   140017981:	(bad)  
   140017982:	call   FWORD PTR [rsi]
   140017984:	in     eax,0xbb
   140017986:	js     0x140017987
   140017988:	repz rcr BYTE PTR [rax-0x4f200252],1
   14001798f:	mov    esp,edi
   140017991:	fbstp  TBYTE PTR [rcx-0x4e1c0074]
   140017997:	mov    esi,ecx
   140017999:	leave  
   14001799a:	ret    0x28d9
   14001799d:	js     0x140017994
   14001799f:	jmp    QWORD PTR [rbx]
   1400179a1:	jne    0x140017996
   1400179a3:	jmp    QWORD PTR [rdi]
   1400179a5:	ja     0x14001799a
   1400179a7:	jmp    QWORD PTR [rip+0x21fff275]        # 0x162016c22
   1400179ad:	jb     0x1400179a1
   1400179af:	(bad)  
   1400179b0:	mov    ebx,0xfffefad4
   1400179b5:	(bad)  
   1400179b6:	(bad)  
   1400179b7:	(bad)  
   1400179b8:	(bad)  
   1400179b9:	(bad)  
   1400179ba:	(bad)  
   1400179bb:	(bad)  
   1400179bc:	(bad)  
   1400179bd:	(bad)  
   1400179be:	(bad)  
   1400179bf:	call   rbx
   1400179c1:	loop   0x1400179bf
   1400179c3:	(bad)  
   1400179c4:	ins    DWORD PTR es:[rdi],dx
   1400179c5:	movabs eax,ds:0x752bfff37d36fef6
   1400179ce:	bnd jmp QWORD PTR [rip+0x25fff271]        # 0x166016c46
   1400179d5:	jno    0x1400179c9
   1400179d7:	jmp    QWORD PTR [rsi]
   1400179d9:	jno    0x1400179cd
   1400179db:	jmp    QWORD PTR [rsi]
   1400179dd:	jo     0x1400179d1
   1400179df:	jmp    QWORD PTR [rsi]
   1400179e1:	jo     0x1400179d5
   1400179e3:	jmp    QWORD PTR [rsi]
   1400179e5:	outs   dx,DWORD PTR ds:[rsi]
   1400179e6:	bnd jmp QWORD PTR [rsi]
   1400179e9:	outs   dx,DWORD PTR ds:[rsi]
   1400179ea:	bnd jmp QWORD PTR [rsi]
   1400179ed:	outs   dx,DWORD PTR ds:[rsi]
   1400179ee:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x166016c63
   1400179f5:	outs   dx,BYTE PTR ds:[rsi]
   1400179f6:	repnz call FWORD PTR [rdi+riz*2]
   1400179fa:	icebp  
   1400179fb:	dec    DWORD PTR [rbx-0x77]
   1400179fe:	cli    
   1400179ff:	dec    esi
   140017a01:	ret    
   140017a02:	mov    edx,0x88adc8f5
   140017a07:	jmp    0x11da55203
   140017a0c:	stc    
   140017a0d:	fsub   DWORD PTR [rcx-0x5f260523]
   140017a13:	(bad)  
   140017a15:	jrcxz  0x1400179d9
   140017a17:	icebp  
   140017a18:	(bad)  
   140017a19:	(bad)  
   140017a1a:	jg     0x140017a1b
   140017a1c:	mov    edx,0xe9ef4694
   140017a21:	retf   0xc498
   140017a24:	in     eax,0xc6
   140017a26:	test   esp,ebx
   140017a28:	lock (bad) 
   140017a2a:	nop
   140017a2b:	(bad)  
   140017a2c:	mov    esp,0xd5f34395
   140017a31:	mov    ebx,0xcdeb9293
   140017a36:	xchg   ebx,eax
   140017a37:	mov    edi,0xff94ceed
   140017a3c:	rcl    BYTE PTR [rsi+0xd03c],0x0
	...
   140017a7f:	add    bh,bh
   140017a81:	(bad)  
   140017a82:	call   FWORD PTR [rsi]
   140017a84:	in     al,0xbb
   140017a86:	js     0x140017a87
   140017a88:	repz rcr DWORD PTR [rax-0x4e1f0252],1
   140017a8f:	mov    ebp,edi
   140017a91:	loope  0x140017a45
   140017a93:	xchg   ebx,edi
   140017a95:	fild   QWORD PTR [rdi-0x1d6b9f57]
   140017a9b:	(bad)  
   140017a9c:	sbb    al,0x73
   140017a9e:	idiv   bh
   140017aa0:	(bad)  
   140017aa1:	js     0x140017a95
   140017aa3:	jmp    QWORD PTR [rdi]
   140017aa5:	js     0x140017a9a
   140017aa7:	jmp    QWORD PTR [rdx]
   140017aa9:	jne    0x140017a9e
   140017aab:	(bad)  
   140017aac:	cmp    eax,DWORD PTR [rbx+rsi*8-0x20c1402]
   140017ab3:	(bad)  
   140017ab4:	(bad)  
   140017ab5:	(bad)  
   140017ab6:	(bad)  
   140017ab7:	(bad)  
   140017ab8:	(bad)  
   140017ab9:	(bad)  
   140017aba:	(bad)  
   140017abb:	(bad)  
   140017abc:	(bad)  
   140017abd:	(bad)  
   140017abe:	(bad)  
   140017abf:	(bad)  
   140017ac0:	(bad)  
   140017ac1:	(bad)  
   140017ac2:	(bad)  
   140017ac3:	(bad)  
   140017ac4:	stc    
   140017ac5:	sti    
   140017ac6:	(bad)  
   140017ac7:	jmp    QWORD PTR [rdi+0x4dfef9c6]
   140017acd:	(bad)  
   140017ace:	hlt    
   140017acf:	push   QWORD PTR [rdx]
   140017ad1:	jnp    0x140017ac6
   140017ad3:	jmp    FWORD PTR [rdx]
   140017ad5:	jne    0x140017ac9
   140017ad7:	jmp    QWORD PTR [rdx+rsi*2]
   140017ada:	bnd jmp QWORD PTR [rip+0x26fff272]        # 0x167016d53
   140017ae1:	jb     0x140017ad5
   140017ae3:	jmp    QWORD PTR [rsi]
   140017ae5:	jno    0x140017ad9
   140017ae7:	jmp    QWORD PTR [rsi]
   140017ae9:	jno    0x140017add
   140017aeb:	jmp    QWORD PTR [rsi]
   140017aed:	jo     0x140017ae1
   140017aef:	jmp    QWORD PTR [rsi]
   140017af1:	jo     0x140017ae5
   140017af3:	jmp    QWORD PTR [rsi]
   140017af5:	outs   dx,DWORD PTR ds:[rsi]
   140017af6:	bnd jmp QWORD PTR [rsi]
   140017af9:	outs   dx,DWORD PTR ds:[rsi]
   140017afa:	repnz call FWORD PTR [rcx]
   140017afd:	push   0xffffffffb496fff4
   140017b02:	in     al,dx
   140017b03:	std    
   140017b04:	(bad)  
   140017b05:	scas   al,BYTE PTR es:[rdi]
   140017b06:	nop
   140017b07:	out    dx,eax
   140017b08:	loop   0x140017ad0
   140017b0a:	cdq    
   140017b0b:	loop   0x140017b08
   140017b0d:	fisub  DWORD PTR [rbp-0x5d260623]
   140017b13:	(bad)  
   140017b15:	jrcxz  0x140017ad9
   140017b17:	icebp  
   140017b18:	(bad)  
   140017b19:	(bad)  
   140017b1a:	jg     0x140017b1b
   140017b1c:	mov    edx,0xe9ef4694
   140017b21:	retf   0xc499
   140017b24:	in     eax,0xc7
   140017b26:	xchg   ah,bl
   140017b28:	lock (bad) 
   140017b2a:	nop
   140017b2b:	(bad)  
   140017b2c:	mov    esp,0xd5f34395
   140017b31:	mov    ebx,0xcdeb9293
   140017b36:	xchg   edx,eax
   140017b37:	mov    edi,0xff92cded
   140017b3c:	rcr    DWORD PTR [rax+0xd13f],0x0
	...
   140017b7f:	add    bh,bh
   140017b81:	(bad)  
   140017b82:	call   FWORD PTR [rsi]
   140017b84:	in     al,0xbb
   140017b86:	js     0x140017b87
   140017b88:	repz rcr DWORD PTR [rcx-0x4c1e0253],1
   140017b8f:	mov    edi,edi
   140017b91:	in     al,0xb1
   140017b93:	mov    bl,al
   140017b95:	sar    DWORD PTR [rbx-0xb87dc25],0xff
   140017b9c:	es jp  0x140017b92
   140017b9f:	jmp    QWORD PTR [rdi]
   140017ba1:	jp     0x140017b96
   140017ba3:	jmp    QWORD PTR [rdi]
   140017ba5:	jns    0x140017b99
   140017ba7:	jmp    QWORD PTR [rax]
   140017ba9:	jne    0x140017b9d
   140017bab:	dec    DWORD PTR [rax-0x73]
   140017bae:	repz std 
   140017bb0:	repnz idiv ch
   140017bb3:	(bad)  
   140017bb4:	std    
   140017bb5:	(bad)  
   140017bb6:	(bad)  
   140017bb7:	(bad)  
   140017bb8:	(bad)  
   140017bb9:	(bad)  
   140017bba:	(bad)  
   140017bbb:	(bad)  
   140017bbc:	(bad)  
   140017bbd:	(bad)  
   140017bbe:	(bad)  
   140017bbf:	(bad)  
   140017bc0:	(bad)  
   140017bc1:	(bad)  
   140017bc2:	(bad)  
   140017bc3:	(bad)  
   140017bc4:	(bad)  
   140017bc5:	(bad)  
   140017bc6:	(bad)  
   140017bc7:	(bad)  
   140017bc8:	(bad)  
   140017bc9:	(bad)  
   140017bca:	(bad)  
   140017bcb:	(bad)  
   140017bcc:	fucomp st(1)
   140017bce:	cld    
   140017bcf:	(bad)  
   140017bd0:	jp     0x140017b7c
   140017bd2:	idiv   dh
   140017bd4:	cmp    al,0x82
   140017bd6:	repz push QWORD PTR [rcx]
   140017bd9:	jnp    0x140017bce
   140017bdb:	jmp    QWORD PTR [rdi]
   140017bdd:	je     0x140017bd1
   140017bdf:	jmp    QWORD PTR [rip+0x26fff272]        # 0x167016e57
   140017be5:	jb     0x140017bd9
   140017be7:	jmp    QWORD PTR [rsi]
   140017be9:	jb     0x140017bdd
   140017beb:	jmp    QWORD PTR [rsi]
   140017bed:	jb     0x140017be1
   140017bef:	jmp    QWORD PTR [rsi]
   140017bf1:	jno    0x140017be5
   140017bf3:	jmp    QWORD PTR [rsi]
   140017bf5:	jno    0x140017be9
   140017bf7:	jmp    QWORD PTR [rsi]
   140017bf9:	jo     0x140017bed
   140017bfb:	call   FWORD PTR [rdi]
   140017bfd:	imul   esi,ecx,0xffffffff
   140017c00:	rex.RX xchg edx,r15d
   140017c03:	dec    esp
   140017c05:	ret    0xf5ba
   140017c08:	(bad)  
   140017c09:	lods   eax,DWORD PTR ds:[rsi]
   140017c0a:	mov    ecx,ebp
   140017c0c:	clc    
   140017c0d:	fsub   DWORD PTR [rbx-0x5b260522]
   140017c13:	(bad)  
   140017c15:	jrcxz  0x140017bd9
   140017c17:	icebp  
   140017c18:	jmp    0x140017be0
   140017c1a:	jg     0x140017c1b
   140017c1c:	mov    edx,0xe9ef4694
   140017c21:	retf   0xc49b
   140017c24:	in     eax,0xc7
   140017c26:	xchg   esp,ebx
   140017c28:	lock (bad) 
   140017c2a:	nop
   140017c2b:	(bad)  
   140017c2c:	mov    esp,0xd5f34495
   140017c31:	mov    ebx,0xcdea9294
   140017c36:	xchg   edx,eax
   140017c37:	mov    edi,0xff92cded
   140017c3c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140017c7f:	add    bh,bh
   140017c81:	(bad)  
   140017c82:	call   FWORD PTR [rsi]
   140017c84:	in     al,0xbb
   140017c86:	js     0x140017c87
   140017c88:	repz rcr DWORD PTR [rdx-0x4b1d0252],1
   140017c8f:	test   esi,edi
   140017c91:	fild   QWORD PTR [rbx-0x2b658e63]
   140017c97:	sti    
   140017c98:	sbb    esi,DWORD PTR [rdi-0x8]
   140017c9b:	jmp    FWORD PTR [rax]
   140017c9d:	jl     0x140017c92
   140017c9f:	jmp    FWORD PTR [rax]
   140017ca1:	jnp    0x140017c96
   140017ca3:	jmp    FWORD PTR [rax]
   140017ca5:	jnp    0x140017c9a
   140017ca7:	jmp    QWORD PTR [rax]
   140017ca9:	jbe    0x140017c9d
   140017cab:	dec    DWORD PTR [rax-0x72]
   140017cae:	repz std 
   140017cb0:	icebp  
   140017cb1:	idiv   ch
   140017cb3:	(bad)  
   140017cb4:	std    
   140017cb5:	(bad)  
   140017cb6:	(bad)  
   140017cb7:	(bad)  
   140017cb8:	(bad)  
   140017cb9:	(bad)  
   140017cba:	(bad)  
   140017cbb:	(bad)  
   140017cbc:	(bad)  
   140017cbd:	(bad)  
   140017cbe:	(bad)  
   140017cbf:	(bad)  
   140017cc0:	(bad)  
   140017cc1:	(bad)  
   140017cc2:	(bad)  
   140017cc3:	(bad)  
   140017cc4:	(bad)  
   140017cc5:	(bad)  
   140017cc6:	(bad)  
   140017cc7:	(bad)  
   140017cc8:	(bad)  
   140017cc9:	(bad)  
   140017cca:	(bad)  
   140017ccb:	(bad)  
   140017ccc:	(bad)  
   140017ccd:	(bad)  
   140017cce:	(bad)  
   140017ccf:	(bad)  
   140017cd0:	(bad)  
   140017cd1:	(bad)  
   140017cd2:	(bad)  
   140017cd3:	push   QWORD PTR [rdi+rcx*8-0x6ba90106]
   140017cda:	hlt    
   140017cdb:	push   QWORD PTR [rdi]
   140017cdd:	xor    bl,0xff
   140017ce0:	sub    eax,0x25fff279
   140017ce5:	jae    0x140017cd9
   140017ce7:	jmp    QWORD PTR [rsi]
   140017ce9:	jae    0x140017cdd
   140017ceb:	jmp    QWORD PTR [rsi]
   140017ced:	jae    0x140017ce1
   140017cef:	jmp    QWORD PTR [rsi]
   140017cf1:	jae    0x140017ce5
   140017cf3:	jmp    QWORD PTR [rsi]
   140017cf5:	jno    0x140017ce9
   140017cf7:	jmp    QWORD PTR [rsi]
   140017cf9:	jb     0x140017ced
   140017cfb:	jmp    QWORD PTR [rsi]
   140017cfd:	jno    0x140017cf1
   140017cff:	call   FWORD PTR [rdi]
   140017d01:	outs   dx,BYTE PTR ds:[rsi]
   140017d02:	idiv   bh
   140017d04:	stos   BYTE PTR es:[rdi],al
   140017d05:	mov    esp,0xa8c1fae0
   140017d0a:	mov    ch,ch
   140017d0c:	(bad)  
   140017d0d:	(bad)  
   140017d0e:	lahf   
   140017d0f:	loope  0x140017d0c
   140017d11:	(bad)  [rsi-0x3d1c0825]
   140017d17:	icebp  
   140017d18:	(bad)  
   140017d19:	(bad)  
   140017d1a:	jl     0x140017d1b
   140017d1c:	mov    edx,0xe8ef4694
   140017d21:	retf   0xc49b
   140017d24:	in     eax,0xc6
   140017d26:	xchg   esp,ebx
   140017d28:	lock (bad) 
   140017d2a:	nop
   140017d2b:	(bad)  
   140017d2c:	mov    esp,0xd5f34495
   140017d31:	mov    esp,0xcdea9295
   140017d36:	xchg   ebx,eax
   140017d37:	mov    edi,0xff92cded
   140017d3c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140017d7f:	add    bh,bh
   140017d81:	(bad)  
   140017d82:	call   FWORD PTR [rsi]
   140017d84:	in     al,0xbb
   140017d86:	jns    0x140017d87
   140017d88:	repz rcr DWORD PTR [rdx-0x4a1b0053],1
   140017d8f:	(bad)  
   140017d90:	in     eax,0xce
   140017d92:	test   eax,0xeb8337be
   140017d97:	jmp    QWORD PTR [rbx]
   140017d99:	jl     0x140017d92
   140017d9b:	jmp    QWORD PTR [rdi]
   140017d9d:	jge    0x140017d93
   140017d9f:	jmp    QWORD PTR [rdi]
   140017da1:	jge    0x140017d97
   140017da3:	jmp    QWORD PTR [rdi]
   140017da5:	jl     0x140017d9b
   140017da7:	jmp    QWORD PTR [rcx]
   140017da9:	js     0x140017d9e
   140017dab:	dec    DWORD PTR [rcx-0x71]
   140017dae:	hlt    
   140017daf:	std    
   140017db0:	repnz idiv ebp
   140017db3:	(bad)  
   140017db4:	(bad)  
   140017db5:	(bad)  
   140017db6:	(bad)  
   140017db7:	(bad)  
   140017db8:	(bad)  
   140017db9:	(bad)  
   140017dba:	(bad)  
   140017dbb:	(bad)  
   140017dbc:	(bad)  
   140017dbd:	(bad)  
   140017dbe:	(bad)  
   140017dbf:	(bad)  
   140017dc0:	(bad)  
   140017dc1:	(bad)  
   140017dc2:	(bad)  
   140017dc3:	(bad)  
   140017dc4:	(bad)  
   140017dc5:	(bad)  
   140017dc6:	(bad)  
   140017dc7:	(bad)  
   140017dc8:	(bad)  
   140017dc9:	(bad)  
   140017dca:	(bad)  
   140017dcb:	(bad)  
   140017dcc:	(bad)  
   140017dcd:	(bad)  
   140017dce:	(bad)  
   140017dcf:	(bad)  
   140017dd0:	(bad)  
   140017dd1:	(bad)  
   140017dd2:	(bad)  
   140017dd3:	(bad)  
   140017dd4:	(bad)  
   140017dd5:	(bad)  
   140017dd6:	(bad)  
   140017dd7:	jmp    rsi
   140017dd9:	out    dx,eax
   140017dda:	std    
   140017ddb:	inc    DWORD PTR [rdi+0x44fef7b3]
   140017de1:	mov    ebx,esi
   140017de3:	push   QWORD PTR [rsi]
   140017de5:	jg     0x140017dda
   140017de7:	jmp    FWORD PTR [rax]
   140017de9:	ja     0x140017ddd
   140017deb:	jmp    QWORD PTR [rsi]
   140017ded:	jae    0x140017de1
   140017def:	jmp    QWORD PTR [rsi]
   140017df1:	je     0x140017de5
   140017df3:	jmp    QWORD PTR [rsi]
   140017df5:	je     0x140017de9
   140017df7:	jmp    QWORD PTR [rip+0x27fff273]        # 0x168017070
   140017dfd:	jae    0x140017df1
   140017dff:	call   FWORD PTR [rdx]
   140017e01:	imul   esi,ebx,0xffffffff
   140017e04:	je     0x140017daa
   140017e06:	hlt    
   140017e07:	dec    bl
   140017e09:	mov    ah,0x9c
   140017e0b:	icebp  
   140017e0c:	(bad)  
   140017e0d:	mov    esp,0xddfce595
   140017e12:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017e13:	(bad)  
   140017e15:	loop   0x140017dd6
   140017e17:	lock out 0xbc,al
   140017e1a:	outs   dx,BYTE PTR ds:[rsi]
   140017e1b:	(bad)  
   140017e1c:	mov    ecx,0xe8ef4593
   140017e21:	retf   0xc49c
   140017e24:	in     eax,0xc7
   140017e26:	mov    ah,bl
   140017e28:	lock (bad) 
   140017e2a:	nop
   140017e2b:	(bad)  
   140017e2c:	mov    esp,0xd4f34495
   140017e31:	mov    esp,0xcdea9296
   140017e36:	xchg   ebx,eax
   140017e37:	mov    edi,0xff92cded
   140017e3c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140017e7f:	add    bh,bh
   140017e81:	(bad)  
   140017e82:	call   FWORD PTR [rsi]
   140017e84:	in     al,0xbb
   140017e86:	jns    0x140017e87
   140017e88:	repz rcr DWORD PTR [rbx-0x4d1a0053],1
   140017e8f:	test   DWORD PTR [rax+0x21ddb2b7],edi
   140017e95:	jl     0x140017e8e
   140017e97:	jmp    QWORD PTR [rdi]
   140017e99:	jg     0x140017e90
   140017e9b:	jmp    FWORD PTR [rax]
   140017e9d:	jle    0x140017e94
   140017e9f:	jmp    QWORD PTR [rdi]
   140017ea1:	jle    0x140017e98
   140017ea3:	jmp    QWORD PTR [rdi]
   140017ea5:	jle    0x140017e9b
   140017ea7:	jmp    QWORD PTR [rax]
   140017ea9:	jns    0x140017e9f
   140017eab:	dec    DWORD PTR [rcx-0x6f]
   140017eae:	cmc    
   140017eaf:	std    
   140017eb0:	cmc    
   140017eb1:	clc    
   140017eb2:	std    
   140017eb3:	(bad)  
   140017eb4:	(bad)  
   140017eb5:	(bad)  
   140017eb6:	(bad)  
   140017eb7:	(bad)  
   140017eb8:	(bad)  
   140017eb9:	(bad)  
   140017eba:	(bad)  
   140017ebb:	(bad)  
   140017ebc:	(bad)  
   140017ebd:	(bad)  
   140017ebe:	(bad)  
   140017ebf:	(bad)  
   140017ec0:	(bad)  
   140017ec1:	(bad)  
   140017ec2:	(bad)  
   140017ec3:	(bad)  
   140017ec4:	(bad)  
   140017ec5:	(bad)  
   140017ec6:	(bad)  
   140017ec7:	(bad)  
   140017ec8:	(bad)  
   140017ec9:	(bad)  
   140017eca:	(bad)  
   140017ecb:	(bad)  
   140017ecc:	(bad)  
   140017ecd:	(bad)  
   140017ece:	(bad)  
   140017ecf:	(bad)  
   140017ed0:	(bad)  
   140017ed1:	(bad)  
   140017ed2:	(bad)  
   140017ed3:	(bad)  
   140017ed4:	(bad)  
   140017ed5:	(bad)  
   140017ed6:	(bad)  
   140017ed7:	(bad)  
   140017ed8:	(bad)  
   140017ed9:	(bad)  
   140017eda:	(bad)  
   140017edb:	(bad)  
   140017edc:	(bad)  
   140017edd:	(bad)  
   140017ede:	(bad)  
   140017edf:	inc    ecx
   140017ee1:	fdivr  st,st(3)
   140017ee3:	(bad)  
   140017ee4:	(bad)  
   140017ee5:	pushf  
   140017ee6:	cmc    
   140017ee7:	(bad)  
   140017ee8:	cmp    eax,0x32fff485
   140017eed:	jle    0x140017ee2
   140017eef:	jmp    QWORD PTR [rdi]
   140017ef1:	jne    0x140017ee5
   140017ef3:	jmp    QWORD PTR [rip+0x26fff274]        # 0x16701716d
   140017ef9:	je     0x140017eed
   140017efb:	jmp    QWORD PTR [rsi]
   140017efd:	je     0x140017ef1
   140017eff:	jmp    QWORD PTR [rdx]
   140017f01:	jo     0x140017ef5
   140017f03:	dec    DWORD PTR [rcx-0x74]
   140017f06:	cli    
   140017f07:	dec    edx
   140017f09:	mov    esi,0xadc7f4b5
   140017f0e:	(bad)  
   140017f0f:	jmp    0x11ca95a0c
   140017f14:	mul    cl
   140017f16:	mov    ebp,0x60b4e2f0
   140017f1b:	(bad)  
   140017f1c:	mov    eax,0xe8ef4391
   140017f21:	retf   
   140017f22:	pushf  
   140017f23:	(bad)  
   140017f24:	in     al,0xc7
   140017f26:	mov    ah,bl
   140017f28:	out    dx,eax
   140017f29:	int3   
   140017f2a:	mov    edi,?
   140017f2c:	mov    esp,0xd4f34294
   140017f31:	mov    esp,0xcdea9297
   140017f36:	xchg   esp,eax
   140017f37:	mov    edi,0xff92cced
   140017f3c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140017f7f:	add    bh,bh
   140017f81:	(bad)  
   140017f82:	call   FWORD PTR [rsi]
   140017f84:	in     al,0xbb
   140017f86:	jns    0x140017f87
   140017f88:	hlt    
   140017f89:	rcr    BYTE PTR [rbp+rbp*4-0x72521d01],cl
   140017f90:	mov    ah,BYTE PTR [rdx+0x7d1cf1c0]
   140017f96:	sti    
   140017f97:	jmp    FWORD PTR [rax]
   140017f99:	xor    ebp,0xf58028ff
   140017f9f:	jmp    FWORD PTR [rax]
   140017fa1:	xor    ch,0xff
   140017fa4:	sub    BYTE PTR [rdi-0xb],bh
   140017fa7:	jmp    QWORD PTR [rcx]
   140017fa9:	jnp    0x140017fa0
   140017fab:	dec    DWORD PTR [rdx-0x6d]
   140017fae:	cmc    
   140017faf:	std    
   140017fb0:	idiv   ecx
   140017fb2:	(bad)  
   140017fb3:	(bad)  
   140017fb4:	(bad)  
   140017fb5:	(bad)  
   140017fb6:	(bad)  
   140017fb7:	(bad)  
   140017fb8:	(bad)  
   140017fb9:	(bad)  
   140017fba:	(bad)  
   140017fbb:	(bad)  
   140017fbc:	(bad)  
   140017fbd:	(bad)  
   140017fbe:	(bad)  
   140017fbf:	(bad)  
   140017fc0:	(bad)  
   140017fc1:	(bad)  
   140017fc2:	(bad)  
   140017fc3:	(bad)  
   140017fc4:	(bad)  
   140017fc5:	(bad)  
   140017fc6:	(bad)  
   140017fc7:	(bad)  
   140017fc8:	(bad)  
   140017fc9:	(bad)  
   140017fca:	(bad)  
   140017fcb:	(bad)  
   140017fcc:	(bad)  
   140017fcd:	(bad)  
   140017fce:	(bad)  
   140017fcf:	(bad)  
   140017fd0:	(bad)  
   140017fd1:	(bad)  
   140017fd2:	(bad)  
   140017fd3:	(bad)  
   140017fd4:	(bad)  
   140017fd5:	(bad)  
   140017fd6:	(bad)  
   140017fd7:	(bad)  
   140017fd8:	(bad)  
   140017fd9:	(bad)  
   140017fda:	(bad)  
   140017fdb:	(bad)  
   140017fdc:	(bad)  
   140017fdd:	(bad)  
   140017fde:	(bad)  
   140017fdf:	(bad)  
   140017fe0:	(bad)  
   140017fe1:	(bad)  
   140017fe2:	(bad)  
   140017fe3:	(bad)  
   140017fe4:	out    dx,eax
   140017fe5:	cmc    
   140017fe6:	(bad)  
   140017fe7:	call   QWORD PTR [rbx+rdi*4-0x72b50108]
   140017fee:	hlt    
   140017fef:	(bad)  
   140017ff0:	cmp    al,BYTE PTR [rsp+rsi*8-0xc84d201]
   140017ff7:	jmp    QWORD PTR [rsi]
   140017ff9:	jne    0x140017fed
   140017ffb:	jmp    QWORD PTR [rip+0x24fff376]        # 0x165017377
   140018001:	jbe    0x140017ff5
   140018003:	push   QWORD PTR [rcx]
   140018005:	jg     0x140018001
   140018007:	inc    eax
   140018009:	ror    cl,0xf7
   14001800c:	shl    BYTE PTR [rdi-0x290e1477],0xa4
   140018013:	(bad)  
   140018015:	loope  0x140017fd4
   140018017:	lock loope 0x140017fca
   14001801a:	pop    rdx
   14001801b:	push   QWORD PTR [rdi-0x1710bd6f]
   140018021:	int3   
   140018022:	sahf   
   140018023:	(bad)  
   140018024:	in     al,0xc6
   140018026:	mov    ah,bl
   140018028:	in     al,dx
   140018029:	mov    BYTE PTR [rdx+0x3e91bbff],0xf3
   140018030:	(bad)  
   140018031:	mov    esp,0xceea9297
   140018036:	xchg   esp,eax
   140018037:	mov    edi,0xff91cded
   14001803c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001807f:	add    bh,bh
   140018081:	(bad)  
   140018082:	call   FWORD PTR [rsi]
   140018084:	in     al,0xbb
   140018086:	jns    0x140018087
   140018088:	hlt    
   140018089:	rcr    DWORD PTR [rbp-0x57230256],cl
   14001808f:	cdq    
   140018090:	push   0x1efccc94
   140018095:	jg     0x140018092
   140018097:	jmp    FWORD PTR [rax]
   140018099:	(bad)  
   14001809a:	cmc    
   14001809b:	jmp    FWORD PTR [rax]
   14001809d:	(bad)  
   14001809e:	cmc    
   14001809f:	jmp    FWORD PTR [rax]
   1400180a1:	xor    ebp,0xf58128ff
   1400180a7:	jmp    QWORD PTR [rcx]
   1400180a9:	jl     0x1400180a0
   1400180ab:	dec    DWORD PTR [rdx-0x6c]
   1400180ae:	cmc    
   1400180af:	std    
   1400180b0:	stc    
   1400180b1:	sti    
   1400180b2:	(bad)  
   1400180b3:	(bad)  
   1400180b4:	(bad)  
   1400180b5:	(bad)  
   1400180b6:	(bad)  
   1400180b7:	(bad)  
   1400180b8:	(bad)  
   1400180b9:	(bad)  
   1400180ba:	(bad)  
   1400180bb:	(bad)  
   1400180bc:	(bad)  
   1400180bd:	(bad)  
   1400180be:	(bad)  
   1400180bf:	(bad)  
   1400180c0:	(bad)  
   1400180c1:	(bad)  
   1400180c2:	(bad)  
   1400180c3:	(bad)  
   1400180c4:	(bad)  
   1400180c5:	(bad)  
   1400180c6:	(bad)  
   1400180c7:	(bad)  
   1400180c8:	(bad)  
   1400180c9:	(bad)  
   1400180ca:	(bad)  
   1400180cb:	(bad)  
   1400180cc:	(bad)  
   1400180cd:	(bad)  
   1400180ce:	(bad)  
   1400180cf:	(bad)  
   1400180d0:	(bad)  
   1400180d1:	(bad)  
   1400180d2:	(bad)  
   1400180d3:	(bad)  
   1400180d4:	(bad)  
   1400180d5:	(bad)  
   1400180d6:	(bad)  
   1400180d7:	(bad)  
   1400180d8:	(bad)  
   1400180d9:	(bad)  
   1400180da:	(bad)  
   1400180db:	(bad)  
   1400180dc:	(bad)  
   1400180dd:	(bad)  
   1400180de:	(bad)  
   1400180df:	(bad)  
   1400180e0:	(bad)  
   1400180e1:	(bad)  
   1400180e2:	(bad)  
   1400180e3:	(bad)  
   1400180e4:	(bad)  
   1400180e5:	(bad)  
   1400180e6:	(bad)  
   1400180e7:	(bad)  
   1400180e8:	(bad)  
   1400180e9:	(bad)  
   1400180ea:	(bad)  
   1400180eb:	dec    ebp
   1400180ed:	(bad)  
   1400180ef:	(bad)  
   1400180f0:	push   0x41fef6a0
   1400180f5:	mov    ebp,esi
   1400180f7:	jmp    FWORD PTR [rdx]
   1400180f9:	jns    0x1400180ee
   1400180fb:	jmp    QWORD PTR [rip+0x26fff376]        # 0x167017477
   140018101:	jbe    0x1400180f5
   140018103:	jmp    QWORD PTR [rdi+rsi*2]
   140018106:	clc    
   140018107:	push   QWORD PTR [rcx-0x3f062742]
   14001810d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001810e:	mov    ch,ch
   140018110:	in     al,dx
   140018111:	shl    DWORD PTR [rdx-0x421d0821],1
   140018117:	lock loope 0x1400180ca
   14001811a:	pop    rdx
   14001811b:	push   QWORD PTR [rdi-0x1710bd6f]
   140018121:	int3   
   140018122:	sahf   
   140018123:	(bad)  
   140018124:	in     al,0xc6
   140018126:	mov    ah,bl
   140018128:	jmp    0xfa00f9ed
   14001812d:	(bad)  
   14001812e:	cmp    dh,bl
   140018130:	(bad)  
   140018131:	mov    ebp,0xcdea9298
   140018136:	xchg   esp,eax
   140018137:	mov    edi,0xff8bc9eb
   14001813c:	rcl    DWORD PTR [rsi+0xd03c],0x0
	...
   14001817f:	add    bh,bh
   140018181:	(bad)  
   140018182:	jmp    QWORD PTR [rcx]
   140018184:	in     al,0xbb
   140018186:	jns    0x140018187
   140018188:	cmc    
   140018189:	rcr    DWORD PTR [rbp-0x5c280757],cl
   14001818f:	movabs ds:0xfffb8121ffd58e53,al
   140018198:	sub    BYTE PTR [rbx-0x7cd6000b],al
   14001819e:	cmc    
   14001819f:	jmp    FWORD PTR [rcx]
   1400181a1:	(bad)  
   1400181a2:	cmc    
   1400181a3:	jmp    FWORD PTR [rax]
   1400181a5:	(bad)  
   1400181a6:	cmc    
   1400181a7:	jmp    QWORD PTR [rcx]
   1400181a9:	jle    0x1400181a0
   1400181ab:	dec    DWORD PTR [rdx-0x6c]
   1400181ae:	cmc    
   1400181af:	std    
   1400181b0:	clc    
   1400181b1:	cli    
   1400181b2:	std    
   1400181b3:	(bad)  
   1400181b4:	(bad)  
   1400181b5:	(bad)  
   1400181b6:	(bad)  
   1400181b7:	(bad)  
   1400181b8:	(bad)  
   1400181b9:	(bad)  
   1400181ba:	(bad)  
   1400181bb:	(bad)  
   1400181bc:	(bad)  
   1400181bd:	(bad)  
   1400181be:	(bad)  
   1400181bf:	(bad)  
   1400181c0:	(bad)  
   1400181c1:	(bad)  
   1400181c2:	(bad)  
   1400181c3:	(bad)  
   1400181c4:	(bad)  
   1400181c5:	(bad)  
   1400181c6:	(bad)  
   1400181c7:	(bad)  
   1400181c8:	(bad)  
   1400181c9:	(bad)  
   1400181ca:	(bad)  
   1400181cb:	(bad)  
   1400181cc:	(bad)  
   1400181cd:	(bad)  
   1400181ce:	(bad)  
   1400181cf:	(bad)  
   1400181d0:	(bad)  
   1400181d1:	(bad)  
   1400181d2:	(bad)  
   1400181d3:	(bad)  
   1400181d4:	(bad)  
   1400181d5:	(bad)  
   1400181d6:	(bad)  
   1400181d7:	(bad)  
   1400181d8:	(bad)  
   1400181d9:	(bad)  
   1400181da:	(bad)  
   1400181db:	(bad)  
   1400181dc:	(bad)  
   1400181dd:	(bad)  
   1400181de:	(bad)  
   1400181df:	(bad)  
   1400181e0:	(bad)  
   1400181e1:	(bad)  
   1400181e2:	(bad)  
   1400181e3:	(bad)  
   1400181e4:	(bad)  
   1400181e5:	(bad)  
   1400181e6:	(bad)  
   1400181e7:	(bad)  
   1400181e8:	(bad)  
   1400181e9:	(bad)  
   1400181ea:	(bad)  
   1400181eb:	(bad)  
   1400181ec:	(bad)  
   1400181ed:	(bad)  
   1400181ee:	(bad)  
   1400181ef:	(bad)  
   1400181f0:	in     eax,dx
   1400181f1:	hlt    
   1400181f2:	(bad)  
   1400181f3:	(bad)  
   1400181f4:	(bad)  
   1400181f5:	sahf   
   1400181f6:	cmc    
   1400181f7:	(bad)  
   1400181f8:	cmp    al,BYTE PTR [rbp+0x7a26fff4]
   1400181fe:	repz jmp QWORD PTR [rsi]
   140018201:	js     0x1400181f6
   140018203:	jmp    QWORD PTR [rax]
   140018205:	jbe    0x1400181fe
   140018207:	jmp    QWORD PTR [rsi-0x3e052045]
   14001820d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001820e:	(bad)  
   14001820f:	in     eax,dx
   140018210:	jmp    0x138e123e3
   140018215:	loop   0x1400181d4
   140018217:	lock loope 0x1400181ca
   14001821a:	pop    rdx
   14001821b:	push   QWORD PTR [rdi-0x1710bd6f]
   140018221:	int3   
   140018222:	lahf   
   140018223:	(bad)  
   140018224:	in     al,0xc6
   140018226:	mov    ah,bl
   140018228:	jmp    0xfa00f7eb
   14001822d:	mov    ?,WORD PTR [rax]
   14001822f:	repnz (bad) 
   140018231:	mov    ebp,0xcde99299
   140018236:	xchg   esp,eax
   140018237:	mov    edi,0xff81c3e8
   14001823c:	mov    edi,0xcf3793
	...
   14001827d:	add    BYTE PTR [rax],al
   14001827f:	add    bh,bh
   140018281:	(bad)  
   140018282:	jmp    QWORD PTR [rcx]
   140018284:	in     al,0xbb
   140018286:	jns    0x140018287
   140018288:	cmc    
   140018289:	(bad)  
   14001828a:	popf   
   14001828b:	test   eax,0xa6a2d4f4
   140018290:	rex.WX mov rbx,rdx
   140018293:	jmp    QWORD PTR [rdx]
   140018295:	cmp    ebx,0xffffffff
   140018298:	sub    DWORD PTR [rsi+rsi*8-0x97bd601],eax
   14001829f:	jmp    FWORD PTR [rcx]
   1400182a1:	xor    ebp,0xffffffff
   1400182a4:	sub    DWORD PTR [rbx+0x7f22fff5],eax
   1400182aa:	cmc    
   1400182ab:	dec    DWORD PTR [rbx-0x6a]
   1400182ae:	idiv   dh
   1400182b0:	idiv   cl
   1400182b2:	(bad)  
   1400182b3:	(bad)  
   1400182b4:	(bad)  
   1400182b5:	(bad)  
   1400182b6:	(bad)  
   1400182b7:	(bad)  
   1400182b8:	(bad)  
   1400182b9:	(bad)  
   1400182ba:	(bad)  
   1400182bb:	(bad)  
   1400182bc:	(bad)  
   1400182bd:	(bad)  
   1400182be:	(bad)  
   1400182bf:	(bad)  
   1400182c0:	(bad)  
   1400182c1:	(bad)  
   1400182c2:	(bad)  
   1400182c3:	(bad)  
   1400182c4:	(bad)  
   1400182c5:	(bad)  
   1400182c6:	(bad)  
   1400182c7:	(bad)  
   1400182c8:	(bad)  
   1400182c9:	(bad)  
   1400182ca:	(bad)  
   1400182cb:	(bad)  
   1400182cc:	(bad)  
   1400182cd:	(bad)  
   1400182ce:	(bad)  
   1400182cf:	(bad)  
   1400182d0:	(bad)  
   1400182d1:	(bad)  
   1400182d2:	(bad)  
   1400182d3:	(bad)  
   1400182d4:	(bad)  
   1400182d5:	(bad)  
   1400182d6:	(bad)  
   1400182d7:	(bad)  
   1400182d8:	(bad)  
   1400182d9:	(bad)  
   1400182da:	(bad)  
   1400182db:	(bad)  
   1400182dc:	(bad)  
   1400182dd:	(bad)  
   1400182de:	(bad)  
   1400182df:	(bad)  
   1400182e0:	(bad)  
   1400182e1:	(bad)  
   1400182e2:	(bad)  
   1400182e3:	(bad)  
   1400182e4:	(bad)  
   1400182e5:	(bad)  
   1400182e6:	(bad)  
   1400182e7:	(bad)  
   1400182e8:	(bad)  
   1400182e9:	(bad)  
   1400182ea:	(bad)  
   1400182eb:	(bad)  
   1400182ec:	(bad)  
   1400182ed:	(bad)  
   1400182ee:	(bad)  
   1400182ef:	(bad)  
   1400182f0:	(bad)  
   1400182f1:	(bad)  
   1400182f2:	(bad)  
   1400182f3:	call   QWORD PTR [rdi+0x39fef8c0]
   1400182f9:	mov    ah,dh
   1400182fb:	jmp    FWORD PTR [rax]
   1400182fd:	jnp    0x1400182f2
   1400182ff:	jmp    QWORD PTR [rsi]
   140018301:	jns    0x1400182f5
   140018303:	call   FWORD PTR [rdi]
   140018305:	jbe    0x1400182fd
   140018307:	call   FWORD PTR [rbx-0x3d041d4a]
   14001830d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001830e:	mov    gs,esi
   140018310:	out    0xcd,eax
   140018312:	movabs al,ds:0x5ab0e1f0bfe3f8e0
   14001831b:	push   QWORD PTR [rdi-0x1710bd6f]
   140018321:	retf   
   140018322:	lahf   
   140018323:	(bad)  
   140018324:	in     al,0xc7
   140018326:	xchg   esp,ebx
   140018328:	jmp    0xfa00f8eb
   14001832d:	mov    ?,WORD PTR [rax]
   14001832f:	repnz (bad) 
   140018331:	mov    ebp,0xcdea9299
   140018336:	xchg   ebx,eax
   140018337:	mov    edi,0xff7abfe6
   14001833c:	mov    esi,0xcd3190
	...
   14001837d:	add    BYTE PTR [rax],al
   14001837f:	add    bh,bh
   140018381:	(bad)  
   140018382:	jmp    QWORD PTR [rcx]
   140018384:	in     al,0xbb
   140018386:	jns    0x140018387
   140018388:	cmc    
   140018389:	(bad)  
   14001838a:	popf   
   14001838b:	test   eax,0xa6a1d4f2
   140018390:	mov    r9,ds
   140018393:	jmp    QWORD PTR [rbx]
   140018395:	test   ebx,edi
   140018397:	jmp    FWORD PTR [rcx]
   140018399:	xchg   ch,dh
   14001839b:	jmp    FWORD PTR [rcx]
   14001839d:	test   esi,esi
   14001839f:	jmp    FWORD PTR [rcx]
   1400183a1:	test   esi,esi
   1400183a3:	jmp    FWORD PTR [rax]
   1400183a5:	test   ch,dh
   1400183a7:	jmp    QWORD PTR [rcx]
   1400183a9:	xor    ch,0xff
   1400183ac:	rex.WXB xchg r15,rax
   1400183ae:	idiv   edi
   1400183b0:	hlt    
   1400183b1:	clc    
   1400183b2:	(bad)  
   1400183b3:	(bad)  
   1400183b4:	(bad)  
   1400183b5:	(bad)  
   1400183b6:	(bad)  
   1400183b7:	(bad)  
   1400183b8:	(bad)  
   1400183b9:	(bad)  
   1400183ba:	(bad)  
   1400183bb:	(bad)  
   1400183bc:	(bad)  
   1400183bd:	(bad)  
   1400183be:	(bad)  
   1400183bf:	(bad)  
   1400183c0:	(bad)  
   1400183c1:	(bad)  
   1400183c2:	(bad)  
   1400183c3:	(bad)  
   1400183c4:	(bad)  
   1400183c5:	(bad)  
   1400183c6:	(bad)  
   1400183c7:	(bad)  
   1400183c8:	(bad)  
   1400183c9:	(bad)  
   1400183ca:	(bad)  
   1400183cb:	(bad)  
   1400183cc:	(bad)  
   1400183cd:	(bad)  
   1400183ce:	(bad)  
   1400183cf:	(bad)  
   1400183d0:	(bad)  
   1400183d1:	(bad)  
   1400183d2:	(bad)  
   1400183d3:	(bad)  
   1400183d4:	(bad)  
   1400183d5:	(bad)  
   1400183d6:	(bad)  
   1400183d7:	(bad)  
   1400183d8:	(bad)  
   1400183d9:	(bad)  
   1400183da:	(bad)  
   1400183db:	(bad)  
   1400183dc:	(bad)  
   1400183dd:	(bad)  
   1400183de:	(bad)  
   1400183df:	(bad)  
   1400183e0:	(bad)  
   1400183e1:	(bad)  
   1400183e2:	(bad)  
   1400183e3:	(bad)  
   1400183e4:	(bad)  
   1400183e5:	(bad)  
   1400183e6:	(bad)  
   1400183e7:	(bad)  
   1400183e8:	(bad)  
   1400183e9:	(bad)  
   1400183ea:	(bad)  
   1400183eb:	(bad)  
   1400183ec:	(bad)  
   1400183ed:	(bad)  
   1400183ee:	(bad)  
   1400183ef:	(bad)  
   1400183f0:	sti    
   1400183f1:	(bad)  
   1400183f2:	(bad)  
   1400183f3:	inc    DWORD PTR [rdx+0x35fff8b4]
   1400183f9:	test   ah,dh
   1400183fb:	jmp    QWORD PTR [rdi]
   1400183fd:	jge    0x1400183f4
   1400183ff:	jmp    FWORD PTR [rax]
   140018401:	jnp    0x1400183f6
   140018403:	jmp    QWORD PTR [rdx]
   140018405:	jns    0x1400183fe
   140018407:	jmp    QWORD PTR [rax-0x3e041d47]
   14001840d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001840e:	(bad)  
   14001840f:	in     eax,dx
   140018410:	call   0x138e32ae5
   140018415:	out    0xc7,al
   140018417:	repz loope 0x1400183c9
   14001841a:	pop    rcx
   14001841b:	push   QWORD PTR [rdi-0x1710bd6f]
   140018421:	retf   
   140018422:	sahf   
   140018423:	ret    
   140018424:	out    0xc9,al
   140018426:	(bad)  
   140018427:	fsubp  st(1),st
   140018429:	mov    edi,0x8eb9ff76
   14001842e:	cmp    dl,dh
   140018430:	(bad)  
   140018431:	mov    ebp,0xcde99198
   140018436:	xchg   ebx,eax
   140018437:	shl    dh,0xbe
   14001843a:	jns    0x14001843b
   14001843c:	mov    ebp,0xcd2f8e
	...
   14001847d:	add    BYTE PTR [rax],al
   14001847f:	add    bh,bh
   140018481:	(bad)  
   140018482:	jmp    QWORD PTR [rcx]
   140018484:	in     al,0xbb
   140018486:	jns    0x140018487
   140018488:	cmc    
   140018489:	(bad)  
   14001848a:	sahf   
   14001848b:	test   eax,0xa5a0d3f5
   140018490:	rex.WRX (bad) 
   140018492:	(bad)  
   140018493:	jmp    QWORD PTR [rdx]
   140018495:	xchg   ebx,edi
   140018497:	jmp    FWORD PTR [rcx]
   140018499:	mov    dh,dh
   14001849b:	jmp    FWORD PTR [rcx]
   14001849d:	xchg   esi,esi
   14001849f:	jmp    FWORD PTR [rcx]
   1400184a1:	xchg   esi,esi
   1400184a3:	jmp    FWORD PTR [rcx]
   1400184a5:	xchg   dh,dh
   1400184a7:	jmp    QWORD PTR [rdx]
   1400184a9:	(bad)  
   1400184aa:	cmc    
   1400184ab:	dec    DWORD PTR [rdx-0x68]
   1400184ae:	idiv   edi
   1400184b0:	repnz idiv ch
   1400184b3:	(bad)  
   1400184b4:	(bad)  
   1400184b5:	(bad)  
   1400184b6:	(bad)  
   1400184b7:	(bad)  
   1400184b8:	(bad)  
   1400184b9:	(bad)  
   1400184ba:	(bad)  
   1400184bb:	(bad)  
   1400184bc:	(bad)  
   1400184bd:	(bad)  
   1400184be:	(bad)  
   1400184bf:	(bad)  
   1400184c0:	(bad)  
   1400184c1:	(bad)  
   1400184c2:	(bad)  
   1400184c3:	(bad)  
   1400184c4:	(bad)  
   1400184c5:	(bad)  
   1400184c6:	(bad)  
   1400184c7:	(bad)  
   1400184c8:	(bad)  
   1400184c9:	(bad)  
   1400184ca:	(bad)  
   1400184cb:	(bad)  
   1400184cc:	(bad)  
   1400184cd:	(bad)  
   1400184ce:	(bad)  
   1400184cf:	(bad)  
   1400184d0:	(bad)  
   1400184d1:	(bad)  
   1400184d2:	(bad)  
   1400184d3:	(bad)  
   1400184d4:	(bad)  
   1400184d5:	(bad)  
   1400184d6:	(bad)  
   1400184d7:	(bad)  
   1400184d8:	(bad)  
   1400184d9:	(bad)  
   1400184da:	(bad)  
   1400184db:	(bad)  
   1400184dc:	(bad)  
   1400184dd:	(bad)  
   1400184de:	(bad)  
   1400184df:	(bad)  
   1400184e0:	(bad)  
   1400184e1:	(bad)  
   1400184e2:	(bad)  
   1400184e3:	(bad)  
   1400184e4:	(bad)  
   1400184e5:	(bad)  
   1400184e6:	(bad)  
   1400184e7:	(bad)  
   1400184e8:	(bad)  
   1400184e9:	(bad)  
   1400184ea:	(bad)  
   1400184eb:	(bad)  
   1400184ec:	std    
   1400184ed:	(bad)  
   1400184ee:	(bad)  
   1400184ef:	jmp    FWORD PTR [rbp+0x50fff9cf]
   1400184f5:	cwde   
   1400184f6:	idiv   bh
   1400184f8:	sub    eax,0x28fff583
   1400184fd:	jle    0x1400184f5
   1400184ff:	jmp    FWORD PTR [rax]
   140018501:	jg     0x1400184fb
   140018503:	jmp    FWORD PTR [rcx]
   140018505:	xor    bh,0xfe
   140018508:	lods   eax,DWORD PTR ds:[rsi]
   140018509:	mov    edi,0xa3bff9db
   14001850e:	mov    ch,ch
   140018510:	in     al,dx
   140018511:	fdivr  DWORD PTR [rax-0x35180719]
   140018517:	cmc    
   140018518:	loope  0x1400184c9
   14001851a:	pop    rax
   14001851b:	push   QWORD PTR [rdi-0x1710bd70]
   140018521:	int3   
   140018522:	lahf   
   140018523:	(bad)
   140018526:	movabs ds:0x388eb9ff77bfe9e3,al
   14001852f:	repnz sar BYTE PTR [rdi+rdx*4-0x5b2a126f],cl
   140018537:	leave  
   140018538:	out    0xbf,al
   14001853a:	jp     0x14001853b
   14001853c:	mov    ebp,0xcd2f8e
	...
   14001857d:	add    BYTE PTR [rax],al
   14001857f:	add    bh,bh
   140018581:	(bad)  
   140018582:	jmp    QWORD PTR [rcx]
   140018584:	in     al,0xbb
   140018586:	jns    0x140018587
   140018588:	cmc    
   140018589:	(bad)  
   14001858a:	sahf   
   14001858b:	test   eax,0x9da0d7fa
   140018590:	pop    rsp
   140018591:	xchg   ecx,eax
   140018592:	leave  
   140018593:	std    
   140018594:	and    DWORD PTR [rdi-0x77d60003],eax
   14001859a:	idiv   bh
   14001859c:	sub    DWORD PTR [rax-0x77d6000a],ecx
   1400185a2:	idiv   bh
   1400185a4:	sub    DWORD PTR [rax-0x7cdd000a],ecx
   1400185aa:	cmc    
   1400185ab:	call   QWORD PTR [rdx-0x63]
   1400185ae:	idiv   edi
   1400185b0:	idiv   al
   1400185b2:	std    
   1400185b3:	(bad)  
   1400185b4:	std    
   1400185b5:	std    
   1400185b6:	(bad)  
   1400185b7:	(bad)  
   1400185b8:	(bad)  
   1400185b9:	(bad)  
   1400185ba:	(bad)  
   1400185bb:	(bad)  
   1400185bc:	(bad)  
   1400185bd:	(bad)  
   1400185be:	(bad)  
   1400185bf:	(bad)  
   1400185c0:	(bad)  
   1400185c1:	(bad)  
   1400185c2:	(bad)  
   1400185c3:	(bad)  
   1400185c4:	(bad)  
   1400185c5:	(bad)  
   1400185c6:	(bad)  
   1400185c7:	(bad)  
   1400185c8:	(bad)  
   1400185c9:	(bad)  
   1400185ca:	(bad)  
   1400185cb:	(bad)  
   1400185cc:	(bad)  
   1400185cd:	(bad)  
   1400185ce:	(bad)  
   1400185cf:	(bad)  
   1400185d0:	(bad)  
   1400185d1:	(bad)  
   1400185d2:	(bad)  
   1400185d3:	(bad)  
   1400185d4:	(bad)  
   1400185d5:	(bad)  
   1400185d6:	(bad)  
   1400185d7:	(bad)  
   1400185d8:	(bad)  
   1400185d9:	(bad)  
   1400185da:	(bad)  
   1400185db:	(bad)  
   1400185dc:	(bad)  
   1400185dd:	(bad)  
   1400185de:	(bad)  
   1400185df:	(bad)  
   1400185e0:	(bad)  
   1400185e1:	(bad)  
   1400185e2:	(bad)  
   1400185e3:	(bad)  
   1400185e4:	(bad)  
   1400185e5:	(bad)  
   1400185e6:	(bad)  
   1400185e7:	(bad)  
   1400185e8:	call   0xca0184de
   1400185ed:	mov    eax,0x954bfff9
   1400185f2:	idiv   edi
   1400185f4:	cs test esi,esi
   1400185f7:	jmp    FWORD PTR [rcx]
   1400185f9:	xor    ch,0xff
   1400185fc:	(bad)  
   1400185fd:	jle    0x1400185f4
   1400185ff:	jmp    FWORD PTR [rdx]
   140018601:	jle    0x1400185f9
   140018603:	push   QWORD PTR [rcx]
   140018605:	cmp    eax,0xfffffffe
   140018608:	mov    ecx,0xc6f7d0c0
   14001860d:	lods   al,BYTE PTR ds:[rsi]
   14001860e:	xchg   edi,eax
   14001860f:	out    dx,al
   140018610:	cmc    
   140018611:	in     al,0xc8
   140018613:	jmp    0x133c86c10
   140018618:	loope  0x1400185c9
   14001861a:	pop    rax
   14001861b:	push   QWORD PTR [rdi-0x1610be70]
   140018621:	shr    DWORD PTR [rbx-0x5a2b1334],1
   140018627:	in     al,0xe9
   140018629:	mov    esi,0x8db9ff75
   14001862e:	(bad)  
   14001862f:	repnz sar DWORD PTR [rdi-0x210e6660],cl
   140018636:	mov    bh,0xd0
   140018638:	out    0xbe,al
   14001863a:	js     0x14001863b
   14001863c:	mov    ebp,0xcd2f8e
	...
   14001867d:	add    BYTE PTR [rax],al
   14001867f:	add    bh,bh
   140018681:	(bad)  
   140018682:	jmp    QWORD PTR [rcx]
   140018684:	in     al,0xbb
   140018686:	js     0x140018687
   140018688:	hlt    
   140018689:	rcr    DWORD PTR [rbp-0x59230155],cl
   14001868f:	xchg   ecx,eax
   140018690:	jbe    0x14001862a
   140018692:	mov    eax,0xfe881ff6
   140018697:	jmp    FWORD PTR [rdx]
   140018699:	mov    dh,dh
   14001869b:	jmp    FWORD PTR [rdx]
   14001869d:	mov    esi,esi
   14001869f:	jmp    FWORD PTR [rdx]
   1400186a1:	mov    esi,esi
   1400186a3:	jmp    FWORD PTR [rcx]
   1400186a5:	mov    esi,esi
   1400186a7:	jmp    QWORD PTR [rcx]
   1400186a9:	test   dh,dh
   1400186ab:	call   QWORD PTR [rbp-0x60]
   1400186ae:	idiv   edi
   1400186b0:	idiv   eax
   1400186b2:	cld    
   1400186b3:	(bad)  
   1400186b4:	std    
   1400186b5:	std    
   1400186b6:	(bad)  
   1400186b7:	(bad)  
   1400186b8:	(bad)  
   1400186b9:	(bad)  
   1400186ba:	(bad)  
   1400186bb:	(bad)  
   1400186bc:	(bad)  
   1400186bd:	(bad)  
   1400186be:	(bad)  
   1400186bf:	(bad)  
   1400186c0:	(bad)  
   1400186c1:	(bad)  
   1400186c2:	(bad)  
   1400186c3:	(bad)  
   1400186c4:	(bad)  
   1400186c5:	(bad)  
   1400186c6:	(bad)  
   1400186c7:	(bad)  
   1400186c8:	(bad)  
   1400186c9:	(bad)  
   1400186ca:	(bad)  
   1400186cb:	(bad)  
   1400186cc:	(bad)  
   1400186cd:	(bad)  
   1400186ce:	(bad)  
   1400186cf:	(bad)  
   1400186d0:	(bad)  
   1400186d1:	(bad)  
   1400186d2:	(bad)  
   1400186d3:	(bad)  
   1400186d4:	(bad)  
   1400186d5:	(bad)  
   1400186d6:	(bad)  
   1400186d7:	(bad)  
   1400186d8:	(bad)  
   1400186d9:	(bad)  
   1400186da:	(bad)  
   1400186db:	(bad)  
   1400186dc:	(bad)  
   1400186dd:	(bad)  
   1400186de:	(bad)  
   1400186df:	(bad)  
   1400186e0:	(bad)  
   1400186e1:	(bad)  
   1400186e2:	(bad)  
   1400186e3:	(bad)  
   1400186e4:	mov    ebx,0x5efffbd7
   1400186e9:	movabs ds:0x862efff69143fff8,eax
   1400186f2:	cmc    
   1400186f3:	jmp    FWORD PTR [rax]
   1400186f5:	xor    ebp,0xf58128ff
   1400186fb:	jmp    QWORD PTR [rdi]
   1400186fd:	jg     0x1400186f4
   1400186ff:	jmp    QWORD PTR [rdi*2-0x71c2000a]
   140018706:	sti    
   140018707:	dec    edx
   140018709:	vpmaddwd ymm2,ymm7,ymm4
   14001870d:	shr    DWORD PTR [rsi-0x3a19060f],0xe6
   140018714:	mul    esp
   140018716:	(bad)
   140018719:	scas   eax,DWORD PTR es:[rdi]
   14001871a:	push   rdi
   14001871b:	(bad)  
   14001871c:	mov    ecx,0xebf14593
   140018721:	(bad)  
   140018722:	mov    bl,0xcf
   140018724:	jmp    0x129e31ff7
   140018729:	mov    esi,0x8fb9ff74
   14001872e:	cmp    ebx,esi
   140018730:	xlat   BYTE PTR ds:[rbx]
   140018731:	(bad)  
   140018732:	scas   al,BYTE PTR es:[rdi]
   140018733:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018734:	out    dx,eax
   140018735:	fldcw  WORD PTR [rbx+rcx*8-0x87411a]
   14001873c:	mov    ebp,0xcd2f8e
	...
   14001877d:	add    BYTE PTR [rax],al
   14001877f:	add    bh,bh
   140018781:	(bad)  
   140018782:	jmp    QWORD PTR [rcx]
   140018784:	in     al,0xbb
   140018786:	js     0x140018787
   140018788:	hlt    
   140018789:	rcr    BYTE PTR [rbp+rbp*4-0x78521e01],cl
   140018790:	popf   
   140018791:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018792:	movabs ds:0xf68c2afffc8920e6,eax
   14001879b:	jmp    FWORD PTR [rdx]
   14001879d:	mov    esi,esi
   14001879f:	jmp    FWORD PTR [rdx]
   1400187a1:	mov    dh,dh
   1400187a3:	jmp    FWORD PTR [rdx]
   1400187a5:	mov    dh,dh
   1400187a7:	jmp    QWORD PTR [rdx]
   1400187a9:	test   esi,esi
   1400187ab:	call   QWORD PTR [rbp-0x5f]
   1400187ae:	idiv   edi
   1400187b0:	idiv   eax
   1400187b2:	cld    
   1400187b3:	(bad)  
   1400187b4:	std    
   1400187b5:	std    
   1400187b6:	(bad)  
   1400187b7:	(bad)  
   1400187b8:	(bad)  
   1400187b9:	(bad)  
   1400187ba:	(bad)  
   1400187bb:	(bad)  
   1400187bc:	(bad)  
   1400187bd:	(bad)  
   1400187be:	(bad)  
   1400187bf:	(bad)  
   1400187c0:	(bad)  
   1400187c1:	(bad)  
   1400187c2:	(bad)  
   1400187c3:	(bad)  
   1400187c4:	(bad)  
   1400187c5:	(bad)  
   1400187c6:	(bad)  
   1400187c7:	(bad)  
   1400187c8:	(bad)  
   1400187c9:	(bad)  
   1400187ca:	(bad)  
   1400187cb:	(bad)  
   1400187cc:	(bad)  
   1400187cd:	(bad)  
   1400187ce:	(bad)  
   1400187cf:	(bad)  
   1400187d0:	(bad)  
   1400187d1:	(bad)  
   1400187d2:	(bad)  
   1400187d3:	(bad)  
   1400187d4:	(bad)  
   1400187d5:	(bad)  
   1400187d6:	(bad)  
   1400187d7:	(bad)  
   1400187d8:	(bad)  
   1400187d9:	(bad)  
   1400187da:	(bad)  
   1400187db:	(bad)  
   1400187dc:	jmp    0xc70186d4
   1400187e1:	mov    ecx,0x9445fff9
   1400187e6:	idiv   edi
   1400187e8:	cmp    BYTE PTR [rbx-0x7bd40009],cl
   1400187ee:	cmc    
   1400187ef:	jmp    FWORD PTR [rcx]
   1400187f1:	xor    ebp,0xffffffff
   1400187f4:	sub    BYTE PTR [rbx-0x7dd8000b],al
   1400187fa:	cmc    
   1400187fb:	jmp    FWORD PTR [rax]
   1400187fd:	xor    ebp,0xf57b1dff
   140018803:	call   FWORD PTR [rbp-0x5f]
   140018806:	stc    
   140018807:	(bad)  
   140018808:	(bad)  
   14001880a:	(bad)  
   14001880b:	cmc    
   14001880c:	fcmove st,st(0)
   14001880e:	mov    ah,0xef
   140018810:	sti    
   140018811:	in     eax,0xc1
   140018813:	in     al,0xf7
   140018815:	jrcxz  0x1400187dc
   140018817:	repz loopne 0x1400187c9
   14001881a:	pop    rax
   14001881b:	(bad)  
   14001881c:	mov    ecx,0xebf34995
   140018821:	(bad)  
   140018822:	lods   eax,DWORD PTR ds:[rsi]
   140018823:	int3   
   140018824:	call   0x128e31ef6
   140018829:	mov    esi,0x91bbff74
   14001882e:	cmp    al,0xf6
   140018830:	fmul   st,st(0)
   140018832:	lods   eax,DWORD PTR ds:[rsi]
   140018833:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018834:	out    dx,al
   140018835:	(bad)  
   140018836:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018837:	enter  0xbee6,0x78
   14001883b:	(bad)  
   14001883c:	mov    ebp,0xcd2f8e
	...
   14001887d:	add    BYTE PTR [rax],al
   14001887f:	add    bh,bh
   140018881:	(bad)  
   140018882:	jmp    QWORD PTR [rcx]
   140018884:	in     al,0xbb
   140018886:	js     0x140018887
   140018888:	repz rcr DWORD PTR [rdx-0x4b1b0053],1
   14001888f:	or     ebx,0x2ccc92b7
   140018895:	mov    ch,dh
   140018897:	jmp    FWORD PTR [rax]
   140018899:	(bad)  
   14001889a:	clc    
   14001889b:	jmp    FWORD PTR [rdx]
   14001889d:	mov    esi,?
   14001889f:	jmp    FWORD PTR [rdx]
   1400188a1:	mov    esi,?
   1400188a3:	jmp    FWORD PTR [rdx]
   1400188a5:	mov    esi,esi
   1400188a7:	jmp    QWORD PTR [rdx]
   1400188a9:	xchg   esi,esi
   1400188ab:	call   QWORD PTR [rbp-0x5f]
   1400188ae:	idiv   edi
   1400188b0:	idiv   eax
   1400188b2:	cld    
   1400188b3:	(bad)  
   1400188b4:	std    
   1400188b5:	std    
   1400188b6:	(bad)  
   1400188b7:	(bad)  
   1400188b8:	(bad)  
   1400188b9:	(bad)  
   1400188ba:	(bad)  
   1400188bb:	(bad)  
   1400188bc:	(bad)  
   1400188bd:	(bad)  
   1400188be:	(bad)  
   1400188bf:	(bad)  
   1400188c0:	(bad)  
   1400188c1:	(bad)  
   1400188c2:	(bad)  
   1400188c3:	(bad)  
   1400188c4:	(bad)  
   1400188c5:	(bad)  
   1400188c6:	(bad)  
   1400188c7:	(bad)  
   1400188c8:	(bad)  
   1400188c9:	(bad)  
   1400188ca:	(bad)  
   1400188cb:	(bad)  
   1400188cc:	(bad)  
   1400188cd:	(bad)  
   1400188ce:	(bad)  
   1400188cf:	(bad)  
   1400188d0:	(bad)  
   1400188d1:	(bad)  
   1400188d2:	(bad)  
   1400188d3:	(bad)  
   1400188d4:	(bad)  
   1400188d5:	(bad)  
   1400188d6:	(bad)  
   1400188d7:	(bad)  
   1400188d8:	mov    ebp,0x5dfefcd9
   1400188dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400188de:	clc    
   1400188df:	(bad)  
   1400188e0:	(bad)  
   1400188e1:	xchg   edx,eax
   1400188e2:	idiv   bh
   1400188e4:	xor    al,0x8b
   1400188e6:	idiv   bh
   1400188e8:	sub    BYTE PTR [rbp+rsi*8-0xa7cd701],al
   1400188ef:	jmp    FWORD PTR [rcx]
   1400188f1:	test   ch,dh
   1400188f3:	jmp    FWORD PTR [rcx]
   1400188f5:	test   ch,dh
   1400188f7:	jmp    FWORD PTR [rcx]
   1400188f9:	xor    ebp,0xffffffff
   1400188fc:	(bad)  
   1400188fd:	xor    ebp,0xf67d1eff
   140018903:	jmp    QWORD PTR [rax-0x25020b3b]
   140018909:	enter  0xf3b8,0xe2
   14001890d:	(bad)  
   14001890e:	mov    ah,0xec
   140018910:	std    
   140018911:	out    0xc1,eax
   140018913:	jrcxz  0x14001890b
   140018915:	jrcxz  0x1400188dc
   140018917:	repz loopne 0x1400188c9
   14001891a:	pop    rax
   14001891b:	(bad)  
   14001891c:	mov    ecx,0xeaf24693
   140018921:	shr    BYTE PTR [rax-0x6a331736],1
   140018927:	jrcxz  0x140018911
   140018929:	mov    esi,0x90baff74
   14001892e:	cmp    esi,ebp
   140018930:	(bad)  
   140018931:	shl    DWORD PTR [rbx-0x5c2c1258],0xcd
   140018938:	out    0xbe,al
   14001893a:	js     0x14001893b
   14001893c:	mov    ebp,0xcd2f8e
	...
   14001897d:	add    BYTE PTR [rax],al
   14001897f:	add    bh,bh
   140018981:	(bad)  
   140018982:	jmp    QWORD PTR [rcx]
   140018984:	in     al,0xbb
   140018986:	js     0x140018987
   140018988:	repz rcr DWORD PTR [rcx-0x491c0053],1
   14001898f:	xor    ecx,0xffffffcd
   140018992:	xchg   esi,eax
   140018993:	stos   BYTE PTR es:[rdi],al
   140018994:	rex.WRXB (bad) 
   140018996:	int3   
   140018997:	jmp    QWORD PTR [rbx]
   140018999:	(bad)  
   14001899a:	(bad)  
   14001899b:	jmp    FWORD PTR [rbx]
   14001899d:	mov    ?,edi
   14001899f:	jmp    FWORD PTR [rbx]
   1400189a1:	(bad)  
   1400189a2:	idiv   edi
   1400189a4:	sub    ecx,DWORD PTR [rbp-0x77dd000a]
   1400189aa:	idiv   bh
   1400189ac:	push   rbp
   1400189ad:	movabs ds:0xfdfdfffbf7f7fff7,al
   1400189b6:	(bad)  
   1400189b7:	(bad)  
   1400189b8:	(bad)  
   1400189b9:	(bad)  
   1400189ba:	(bad)  
   1400189bb:	(bad)  
   1400189bc:	(bad)  
   1400189bd:	(bad)  
   1400189be:	(bad)  
   1400189bf:	(bad)  
   1400189c0:	(bad)  
   1400189c1:	(bad)  
   1400189c2:	(bad)  
   1400189c3:	(bad)  
   1400189c4:	(bad)  
   1400189c5:	(bad)  
   1400189c6:	(bad)  
   1400189c7:	(bad)  
   1400189c8:	(bad)  
   1400189c9:	(bad)  
   1400189ca:	(bad)  
   1400189cb:	(bad)  
   1400189cc:	(bad)  
   1400189cd:	(bad)  
   1400189ce:	(bad)  
   1400189cf:	(bad)  
   1400189d0:	in     al,dx
   1400189d1:	hlt    
   1400189d2:	(bad)  
   1400189d3:	dec    DWORD PTR [rbx+0x47fefabe]
   1400189d9:	cwde   
   1400189da:	idiv   edi
   1400189dc:	cmp    eax,0x2ffff793
   1400189e1:	mov    dh,dh
   1400189e3:	jmp    FWORD PTR [rax]
   1400189e5:	test   ebp,esi
   1400189e7:	jmp    FWORD PTR [rax]
   1400189e9:	xchg   dh,dh
   1400189eb:	jmp    FWORD PTR [rcx]
   1400189ed:	test   ebp,esi
   1400189ef:	jmp    FWORD PTR [rcx]
   1400189f1:	test   ebp,esi
   1400189f3:	jmp    FWORD PTR [rcx]
   1400189f5:	test   esi,esi
   1400189f7:	jmp    QWORD PTR [rip+0x27fff583]        # 0x168017f80
   1400189fd:	xor    ebp,0xffffffff
   140018a00:	pop    rbp
   140018a01:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018a02:	cld    
   140018a03:	(bad)  
   140018a04:	fcomp  st(2)
   140018a06:	loopne 0x140018a01
   140018a08:	(bad)  
   140018a09:	mov    edx,0xd9eff1a9
   140018a0e:	mov    ecx,0xc2e7fde8
   140018a13:	in     eax,0xf6
   140018a15:	in     al,0xc6
   140018a17:	cmc    
   140018a18:	loopne 0x1400189c9
   140018a1a:	pop    rax
   140018a1b:	(bad)  
   140018a1c:	mov    ecx,0xebf14593
   140018a21:	shr    BYTE PTR [rax-0x63311435],1
   140018a27:	out    0xe8,al
   140018a29:	mov    esi,0x8fbaff75
   140018a2e:	cmp    dh,ah
   140018a30:	(bad)  
   140018a31:	shl    DWORD PTR [rcx-0x5b2c1257],0xce
   140018a38:	out    0xbe,al
   140018a3a:	js     0x140018a3b
   140018a3c:	mov    ebp,0xcd2f8e
	...
   140018a7d:	add    BYTE PTR [rax],al
   140018a7f:	add    bh,bh
   140018a81:	(bad)  
   140018a82:	jmp    QWORD PTR [rcx]
   140018a84:	in     al,0xbb
   140018a86:	ja     0x140018a87
   140018a88:	hlt    
   140018a89:	rcr    DWORD PTR [rax-0x4c1e0253],1
   140018a8f:	mov    bh,bh
   140018a91:	fisubr WORD PTR [rax-0x60606c73]
   140018a97:	in     eax,dx
   140018a98:	and    DWORD PTR [rbp-0x70d50003],ecx
   140018a9e:	idiv   edi
   140018aa0:	sub    ecx,DWORD PTR [rdi-0x71d40009]
   140018aa6:	idiv   edi
   140018aa8:	and    ecx,DWORD PTR [rdx-0x5ca90009]
   140018aae:	idiv   edi
   140018ab0:	div    edi
   140018ab2:	sti    
   140018ab3:	(bad)  
   140018ab4:	std    
   140018ab5:	std    
   140018ab6:	(bad)  
   140018ab7:	(bad)  
   140018ab8:	(bad)  
   140018ab9:	(bad)  
   140018aba:	(bad)  
   140018abb:	(bad)  
   140018abc:	(bad)  
   140018abd:	(bad)  
   140018abe:	(bad)  
   140018abf:	(bad)  
   140018ac0:	(bad)  
   140018ac1:	(bad)  
   140018ac2:	(bad)  
   140018ac3:	(bad)  
   140018ac4:	(bad)  
   140018ac5:	(bad)  
   140018ac6:	(bad)  
   140018ac7:	(bad)  
   140018ac8:	(bad)  
   140018ac9:	(bad)  
   140018aca:	(bad)  
   140018acb:	inc    eax
   140018acd:	(bad)  
   140018acf:	jmp    QWORD PTR [rax-0x58]
   140018ad2:	clc    
   140018ad3:	inc    DWORD PTR [rdx-0x6a]
   140018ad6:	idiv   edi
   140018ad8:	(bad)  
   140018ad9:	nop
   140018ada:	idiv   bh
   140018adc:	sub    cl,BYTE PTR [rcx-0x77d7000a]
   140018ae2:	idiv   bh
   140018ae4:	sub    DWORD PTR [rax-0x77d6000a],ecx
   140018aea:	idiv   bh
   140018aec:	sub    DWORD PTR [rdi-0x78d6000a],eax
   140018af2:	idiv   bh
   140018af4:	and    eax,0x2ffff684
   140018af9:	mov    esi,esi
   140018afb:	call   FWORD PTR [rax-0x5f]
   140018afe:	clc    
   140018aff:	call   FWORD PTR [rbx-0x25000238]
   140018b05:	int3   
   140018b06:	shl    ebp,0xd5
   140018b09:	shr    BYTE PTR [rsi+rbp*8-0x18401b06],0xfe
   140018b11:	(bad)  
   140018b12:	(bad)  
   140018b13:	call   0x135c8700f
   140018b18:	loopne 0x140018ac9
   140018b1a:	pop    rax
   140018b1b:	(bad)  
   140018b1c:	mov    ecx,0xecf14593
   140018b21:	shr    DWORD PTR [rbp-0x5d2d142f],cl
   140018b27:	jmp    0x13f774a14
   140018b2c:	mov    edx,0xd4f43a8f
   140018b31:	shl    BYTE PTR [rax-0x5c2c1257],0xce
   140018b38:	out    0xbe,al
   140018b3a:	js     0x140018b3b
   140018b3c:	mov    ebp,0xcd2f8e
	...
   140018b7d:	add    BYTE PTR [rax],al
   140018b7f:	add    bh,bh
   140018b81:	(bad)  
   140018b82:	jmp    QWORD PTR [rcx]
   140018b84:	in     al,0xbb
   140018b86:	ja     0x140018b87
   140018b88:	hlt    
   140018b89:	rcl    DWORD PTR [rdi-0x4e1f0253],1
   140018b8f:	mov    edi,edi
   140018b91:	jrcxz  0x140018b46
   140018b93:	test   ebp,ebx
   140018b95:	mov    edi,0x8d3cbe8d
   140018b9a:	(bad)  
   140018b9c:	es nop
   140018b9e:	cld    
   140018b9f:	jmp    FWORD PTR [rbx]
   140018ba1:	nop
   140018ba2:	idiv   edi
   140018ba4:	sub    ecx,DWORD PTR [rdi-0x74dc0009]
   140018baa:	idiv   bh
   140018bac:	push   rdi
   140018bad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018bae:	idiv   edi
   140018bb0:	clc    
   140018bb1:	idiv   ebx
   140018bb3:	(bad)  
   140018bb4:	std    
   140018bb5:	std    
   140018bb6:	(bad)  
   140018bb7:	(bad)  
   140018bb8:	(bad)  
   140018bb9:	(bad)  
   140018bba:	(bad)  
   140018bbb:	(bad)  
   140018bbc:	(bad)  
   140018bbd:	(bad)  
   140018bbe:	(bad)  
   140018bbf:	(bad)  
   140018bc0:	(bad)  
   140018bc1:	(bad)  
   140018bc2:	(bad)  
   140018bc3:	(bad)  
   140018bc4:	out    dx,al
   140018bc5:	idiv   dh
   140018bc7:	dec    DWORD PTR [rdi+0x49fefac2]
   140018bcd:	pushf  
   140018bce:	clc    
   140018bcf:	(bad)  
   140018bd0:	ds xchg esi,eax
   140018bd2:	idiv   edi
   140018bd4:	(bad)  
   140018bd5:	mov    ?,esi
   140018bd7:	jmp    FWORD PTR [rax]
   140018bd9:	mov    esi,esi
   140018bdb:	jmp    FWORD PTR [rdx]
   140018bdd:	mov    dh,dh
   140018bdf:	jmp    FWORD PTR [rdx]
   140018be1:	mov    esi,esi
   140018be3:	jmp    FWORD PTR [rdx]
   140018be5:	mov    esi,esi
   140018be7:	jmp    FWORD PTR [rdx]
   140018be9:	mov    esi,esi
   140018beb:	jmp    QWORD PTR [rdi]
   140018bed:	xchg   esi,esi
   140018bef:	jmp    QWORD PTR [rip+0x3dfff686]        # 0x17e01827b
   140018bf5:	xchg   edx,eax
   140018bf6:	idiv   edi
   140018bf8:	push   0xffffffffffffffab
   140018bfa:	clc    
   140018bfb:	jmp    FWORD PTR [rcx-0x54]
   140018bfe:	std    
   140018bff:	inc    edi
   140018c01:	(bad)  
   140018c02:	jmp    0xebbd5e02
   140018c07:	icebp  
   140018c08:	jmp    0x13eee45e2
   140018c0d:	call   0x12a0075d5
   140018c12:	(bad)
   140018c15:	jrcxz  0x140018bdc
   140018c17:	cmc    
   140018c18:	loopne 0x140018bc9
   140018c1a:	pop    rax
   140018c1b:	(bad)  
   140018c1c:	mov    edx,0xecf44894
   140018c21:	(bad)  
   140018c22:	mov    al,0xd2
   140018c24:	(bad)  
   140018c25:	iret   
   140018c26:	sahf   
   140018c27:	out    0xe8,al
   140018c29:	mov    esi,0x8fbaff75
   140018c2e:	cmp    dh,ah
   140018c30:	(bad)  
   140018c31:	shl    BYTE PTR [rax-0x5c2c1257],0xce
   140018c38:	out    0xbe,al
   140018c3a:	js     0x140018c3b
   140018c3c:	mov    ebp,0xcd2f8e
	...
   140018c7d:	add    BYTE PTR [rax],al
   140018c7f:	add    bh,bh
   140018c81:	(bad)  
   140018c82:	jmp    QWORD PTR [rcx]
   140018c84:	in     al,0xb9
   140018c86:	je     0x140018c87
   140018c88:	hlt    
   140018c89:	rcl    BYTE PTR [rsi-0x4f1f0253],1
   140018c8f:	mov    ebp,edi
   140018c91:	loopne 0x140018c44
   140018c93:	mov    edi,esi
   140018c95:	(bad)  [rcx+rdx*4-0xf606272]
   140018c9c:	and    cl,BYTE PTR [rdi-0x6ed30002]
   140018ca2:	idiv   edi
   140018ca4:	sub    al,0x91
   140018ca6:	idiv   edi
   140018ca8:	and    al,0x8d
   140018caa:	idiv   edi
   140018cac:	rex.WRX movabs rax,ds:0xfffffffbf8f9fff7
   140018cb6:	(bad)  
   140018cb7:	(bad)  
   140018cb8:	(bad)  
   140018cb9:	(bad)  
   140018cba:	(bad)  
   140018cbb:	(bad)  
   140018cbc:	(bad)  
   140018cbd:	(bad)  
   140018cbe:	(bad)  
   140018cbf:	inc    edi
   140018cc1:	loope  0x140018cbf
   140018cc3:	jmp    QWORD PTR [rbx-0x55]
   140018cc6:	stc    
   140018cc7:	inc    BYTE PTR [rdx-0x66]
   140018cca:	idiv   edi
   140018ccc:	cmp    BYTE PTR [rdi+rsi*8-0x973d401],dl
   140018cd3:	jmp    FWORD PTR [rcx]
   140018cd5:	mov    esi,esi
   140018cd7:	jmp    FWORD PTR [rdx]
   140018cd9:	mov    esi,esi
   140018cdb:	jmp    FWORD PTR [rdx]
   140018cdd:	mov    esi,esi
   140018cdf:	jmp    FWORD PTR [rdx]
   140018ce1:	mov    esi,esi
   140018ce3:	jmp    FWORD PTR [rcx]
   140018ce5:	mov    dh,dh
   140018ce7:	jmp    QWORD PTR [rip+0x2efff687]        # 0x16f018374
   140018ced:	mov    esi,?
   140018cef:	call   QWORD PTR [rax+riz*4-0x8]
   140018cf3:	push   QWORD PTR [rdx-0x4f]
   140018cf6:	stc    
   140018cf7:	call   FWORD PTR [rsi-0x5b]
   140018cfa:	clc    
   140018cfb:	dec    DWORD PTR [rdi-0x2300033e]
   140018d01:	int3   
   140018d02:	ret    0xd6f5
   140018d05:	ret    0xf0b1
   140018d08:	cli    
   140018d09:	in     eax,0xc2
   140018d0b:	(bad)  
   140018d0c:	std    
   140018d0d:	out    0xc0,al
   140018d0f:	call   0x127c47512
   140018d14:	mul    ebx
   140018d16:	(bad)  
   140018d17:	cmc    
   140018d18:	loopne 0x140018cc9
   140018d1a:	pop    rax
   140018d1b:	(bad)  
   140018d1c:	mov    edx,0xebf34794
   140018d21:	shr    DWORD PTR [rax+rdx*8-0x19623016],cl
   140018d28:	call   0xfb0102eb
   140018d2d:	(bad)  
   140018d2e:	cmp    dh,ah
   140018d30:	(bad)  
   140018d31:	rcr    BYTE PTR [rdi-0x5c2c1257],0xce
   140018d38:	out    0xbe,al
   140018d3a:	js     0x140018d3b
   140018d3c:	mov    ebp,0xcd2f8e
	...
   140018d7d:	add    BYTE PTR [rax],al
   140018d7f:	add    bh,bh
   140018d81:	(bad)  
   140018d82:	jmp    QWORD PTR [rcx]
   140018d84:	jmp    0x13501184d
   140018d89:	rcl    BYTE PTR [rsi-0x52200153],1
   140018d8f:	xchg   ebp,edi
   140018d91:	fisubr WORD PTR [rbp-0x4c1c0073]
   140018d97:	test   esi,esp
   140018d99:	ret    
   140018d9a:	mov    edi,DWORD PTR [rax+rdx*2+0x22ffc990]
   140018da1:	xchg   edx,eax
   140018da2:	(bad)  
   140018da3:	jmp    FWORD PTR [rdx+rdx*4]
   140018da6:	idiv   edi
   140018da8:	sub    dl,BYTE PTR [rcx-0x6fd50009]
   140018dae:	idiv   edi
   140018db0:	test   al,0xcf
   140018db2:	clc    
   140018db3:	push   rsi
   140018db5:	clc    
   140018db6:	sti    
   140018db7:	jmp    rbx
   140018db9:	lock (bad) 
   140018dbb:	call   QWORD PTR [rdx+0x49fffac6]
   140018dc1:	lahf   
   140018dc2:	clc    
   140018dc3:	(bad)  
   140018dc4:	ds cdq 
   140018dc6:	idiv   edi
   140018dc8:	xor    DWORD PTR [rdx-0x72d60009],edx
   140018dce:	idiv   edi
   140018dd0:	sub    ecx,DWORD PTR [rsi-0x72d4000a]
   140018dd6:	idiv   bh
   140018dd8:	sub    ecx,DWORD PTR [rbp-0x74d70009]
   140018dde:	idiv   bh
   140018de0:	and    eax,0x2dfff689
   140018de5:	(bad)  
   140018de6:	idiv   bh
   140018de8:	rex.WX pushf 
   140018dea:	idiv   edi
   140018dec:	imul   ebp,DWORD PTR [rsi-0x4f900007],0xfffffff9
   140018df3:	call   FWORD PTR [rsi-0x5a]
   140018df6:	clc    
   140018df7:	jmp    QWORD PTR [rdi-0x52]
   140018dfa:	std    
   140018dfb:	call   rsp
   140018dfd:	fsub   st,st(0)
   140018dff:	cli    
   140018e00:	sar    DWORD PTR [rbx-0x25110c53],1
   140018e06:	mov    esp,0xc0e7fdec
   140018e0b:	call   0x129c1750d
   140018e10:	(bad)  
   140018e11:	out    0xc4,eax
   140018e13:	jmp    0x140018e0c
   140018e15:	in     al,0xc5
   140018e17:	mul    al
   140018e19:	scas   eax,DWORD PTR es:[rdi]
   140018e1a:	pop    rax
   140018e1b:	(bad)  
   140018e1c:	mov    edx,0xebf24693
   140018e21:	shr    DWORD PTR [rdx-0x62301430],cl
   140018e27:	out    0xe9,al
   140018e29:	mov    esi,0x8fbaff75
   140018e2e:	cmp    esp,esi
   140018e30:	(bad)  
   140018e31:	mov    edi,0xd3eda99e
   140018e36:	movabs ds:0x2f8ebdff79bee6ce,al
   140018e3f:	int    0x0
	...
   140018e7d:	add    BYTE PTR [rax],al
   140018e7f:	add    bh,bh
   140018e81:	(bad)  
   140018e82:	jmp    QWORD PTR [rcx]
   140018e84:	out    dx,al
   140018e85:	shl    DWORD PTR [rsi-0x471f0601],cl
   140018e8b:	sar    esi,0xe2
   140018e8e:	mov    dh,0x94
   140018e90:	std    
   140018e91:	fild   QWORD PTR [rsp+rcx*4-0x7a502003]
   140018e98:	cld    
   140018e99:	(bad)  
   140018e9a:	pushf  
   140018e9b:	test   eax,0xfd7fa7bc
   140018ea0:	xor    eax,0x26ffe690
   140018ea5:	xchg   ebx,eax
   140018ea6:	(bad)  
   140018ea7:	jmp    FWORD PTR [rip+0x2afff793]        # 0x16b018640
   140018ead:	xchg   edx,eax
   140018eae:	idiv   edi
   140018eb0:	sub    dl,BYTE PTR [rcx-0x60b80009]
   140018eb6:	idiv   bh
   140018eb8:	rex pushf 
   140018eba:	idiv   edi
   140018ebc:	xor    DWORD PTR [rdi+rsi*8-0x86bcd01],edx
   140018ec3:	jmp    FWORD PTR [rbx]
   140018ec5:	nop
   140018ec6:	idiv   edi
   140018ec8:	sub    cl,BYTE PTR [rdi-0x70d50009]
   140018ece:	idiv   edi
   140018ed0:	sub    BYTE PTR [rsi-0x73d90009],cl
   140018ed6:	idiv   edi
   140018ed8:	sub    BYTE PTR [rbp-0x6bca000a],cl
   140018ede:	idiv   edi
   140018ee0:	rex.WRXB movabs rax,ds:0xb271fff9af6afff8
   140018eea:	cli    
   140018eeb:	jmp    QWORD PTR [rbp-0x54]
   140018eee:	clc    
   140018eef:	call   FWORD PTR [rbp-0x59]
   140018ef2:	clc    
   140018ef3:	call   FWORD PTR [rdx-0x59]
   140018ef6:	cld    
   140018ef7:	(bad)  
   140018ef8:	mov    ebp,0xd6fdeed4
   140018efd:	shl    DWORD PTR [rbp+rsi*8-0x114a311e],0xfd
   140018f05:	out    0xc1,al
   140018f07:	(bad)  
   140018f08:	std    
   140018f09:	out    0xc1,al
   140018f0b:	in     al,dx
   140018f0c:	std    
   140018f0d:	out    0xc0,al
   140018f0f:	in     eax,dx
   140018f10:	jmp    rdi
   140018f12:	ret    0xf7ea
   140018f15:	in     al,0xc4
   140018f17:	mul    al
   140018f19:	scas   eax,DWORD PTR es:[rdi]
   140018f1a:	pop    rax
   140018f1b:	(bad)  
   140018f1c:	mov    ecx,0xecf24693
   140018f21:	shr    DWORD PTR [rcx-0x63301430],cl
   140018f27:	out    0xe8,al
   140018f29:	mov    esi,0x8fbaff75
   140018f2e:	cmp    esp,esi
   140018f30:	(bad)  
   140018f31:	mov    edi,0xd3eda99d
   140018f36:	movabs ds:0x2f8ebdff79bee6ce,al
   140018f3f:	int    0x0
	...
   140018f7d:	add    BYTE PTR [rax],al
   140018f7f:	add    bh,bh
   140018f81:	(bad)  
   140018f82:	jmp    QWORD PTR [rcx]
   140018f84:	in     al,dx
   140018f85:	int    0x99
   140018f87:	(bad)  
   140018f88:	clc    
   140018f89:	jrcxz  0x140018f4b
   140018f8b:	(bad)  
   140018f8c:	(bad)  
   140018f8d:	out    dx,eax
   140018f8e:	(bad)  
   140018f8f:	mov    cl,0xfe
   140018f91:	(bad)  
   140018f92:	retf   0xfeab
   140018f95:	out    0xbe,al
   140018f97:	cdq    
   140018f98:	clc    
   140018f99:	xlat   BYTE PTR ds:[rbx]
   140018f9a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018f9b:	scas   eax,DWORD PTR es:[rdi]
   140018f9c:	hlt    
   140018f9d:	mov    DWORD PTR [rdx-0x755e5a04],0xed8f2cfd
   140018fa7:	jmp    QWORD PTR [rdx+rdx*4]
   140018faa:	cld    
   140018fab:	jmp    FWORD PTR [rdx]
   140018fad:	xchg   edx,eax
   140018fae:	idiv   edi
   140018fb0:	sub    BYTE PTR [rcx-0x70dc0009],dl
   140018fb6:	idiv   edi
   140018fb8:	and    eax,0x27fff78f
   140018fbd:	nop
   140018fbe:	idiv   edi
   140018fc0:	es (bad) 
   140018fc2:	idiv   edi
   140018fc4:	(bad)  
   140018fc5:	(bad)  
   140018fc6:	idiv   edi
   140018fc8:	sub    DWORD PTR [rax-0x6dd10009],edx
   140018fce:	idiv   edi
   140018fd0:	cmp    DWORD PTR [rax-0x5eb40008],ebx
   140018fd6:	clc    
   140018fd7:	jmp    QWORD PTR [rax-0x55]
   140018fda:	stc    
   140018fdb:	jmp    FWORD PTR [rdi-0x4d]
   140018fde:	cli    
   140018fdf:	jmp    FWORD PTR [rdi-0x4d]
   140018fe2:	cli    
   140018fe3:	jmp    QWORD PTR [rbp-0x52]
   140018fe6:	stc    
   140018fe7:	call   FWORD PTR [rdi-0x56]
   140018fea:	clc    
   140018feb:	call   FWORD PTR [rbp-0x57]
   140018fee:	stc    
   140018fef:	call   QWORD PTR [rdi-0x59]
   140018ff2:	cld    
   140018ff3:	jmp    FWORD PTR [rbx-0x25010d33]
   140018ff9:	(bad)  
   140018ffa:	mov    esp,0xb2c7dcf7
   140018fff:	icebp  
   140019000:	sti    
   140019001:	out    0xc0,al
   140019003:	in     eax,dx
   140019004:	(bad)  
   140019005:	out    0xc1,al
   140019007:	in     al,dx
   140019008:	std    
   140019009:	out    0xbf,al
   14001900b:	jmp    0x14001900b
   14001900d:	out    0xbd,al
   14001900f:	jmp    0x140019010
   140019011:	out    0xc1,eax
   140019013:	jmp    0x136c6750f
   140019018:	loopne 0x140018fc9
   14001901a:	pop    rax
   14001901b:	(bad)  
   14001901c:	mov    edx,0xedf24693
   140019021:	shr    DWORD PTR [rcx-0x63301430],cl
   140019027:	out    0xe8,al
   140019029:	mov    esi,0x8fbaff75
   14001902e:	cmp    esp,esi
   140019030:	(bad)  
   140019031:	mov    edi,0xd3eda99d
   140019036:	movabs ds:0x308fbdff79bee6ce,al
   14001903f:	(bad)  
	...
   140019080:	(bad)  
   140019081:	(bad)  
   140019082:	jmp    QWORD PTR [rcx]
   140019084:	in     al,dx
   140019085:	int3   
   140019086:	cwde   
   140019087:	(bad)  
   140019088:	clc    
   140019089:	loopne 0x140019042
   14001908b:	sar    edi,0xeb
   14001908e:	int3   
   14001908f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019090:	(bad)  
   140019091:	in     al,dx
   140019092:	iret   
   140019093:	scas   al,BYTE PTR es:[rdi]
   140019094:	(bad)  
   140019095:	out    dx,eax
   140019096:	(bad)  
   140019097:	mov    al,0xf9
   140019099:	out    0xc5,al
   14001909b:	(bad)  
   14001909c:	neg    cl
   14001909e:	stos   DWORD PTR es:[rdi],eax
   14001909f:	(bad)  
   1400190a0:	stc    
   1400190a1:	fldenv [rbp-0x554e5413]
   1400190a7:	test   BYTE PTR [rsi-0x62],0xef
   1400190ab:	(bad)  
   1400190ac:	cmp    DWORD PTR [rsi-0x62c20002],ebx
   1400190b2:	clc    
   1400190b3:	(bad)  
   1400190b4:	cmp    eax,0x3efff89d
   1400190b9:	popf   
   1400190ba:	clc    
   1400190bb:	inc    DWORD PTR [rbx-0x61]
   1400190be:	clc    
   1400190bf:	dec    DWORD PTR [rdx-0x5e]
   1400190c2:	clc    
   1400190c3:	call   QWORD PTR [rbx-0x59]
   1400190c6:	stc    
   1400190c7:	call   FWORD PTR [rdi-0x53]
   1400190ca:	stc    
   1400190cb:	jmp    FWORD PTR [rcx-0x4e]
   1400190ce:	cli    
   1400190cf:	push   QWORD PTR [rax-0x4b]
   1400190d2:	cli    
   1400190d3:	push   QWORD PTR [rax-0x4b]
   1400190d6:	cli    
   1400190d7:	jmp    FWORD PTR [rcx-0x4f]
   1400190da:	stc    
   1400190db:	jmp    QWORD PTR [rdx-0x53]
   1400190de:	stc    
   1400190df:	call   FWORD PTR [rdi-0x55]
   1400190e2:	stc    
   1400190e3:	call   FWORD PTR [rdi-0x55]
   1400190e6:	stc    
   1400190e7:	call   FWORD PTR [rbx-0x57]
   1400190ea:	cli    
   1400190eb:	call   FWORD PTR [rdx-0x55]
   1400190ee:	cld    
   1400190ef:	jmp    FWORD PTR [rax-0x24011135]
   1400190f5:	leave  
   1400190f6:	mov    esp,0xb2c7ddf7
   1400190fb:	icebp  
   1400190fc:	sti    
   1400190fd:	in     eax,0xc0
   1400190ff:	jmp    0x1400190ff
   140019101:	out    0xc0,al
   140019103:	jmp    0x140019102
   140019105:	out    0xbf,al
   140019107:	jmp    0x140019107
   140019109:	out    0xbd,al
   14001910b:	jmp    0x14001910b
   14001910d:	out    0xbd,al
   14001910f:	jmp    0x140019110
   140019111:	out    0xc0,eax
   140019113:	jmp    0x136c6750f
   140019118:	loopne 0x1400190c9
   14001911a:	pop    rax
   14001911b:	(bad)  
   14001911c:	mov    edx,0xedf24593
   140019121:	shl    BYTE PTR [rdi-0x63301430],cl
   140019127:	out    0xe9,al
   140019129:	mov    esi,0x8fbaff75
   14001912e:	cmp    esp,esi
   140019130:	(bad)  
   140019131:	mov    edi,0xd3eda99d
   140019136:	movabs eax,ds:0x308fbdff79bee6ce
   14001913f:	(bad)  
	...
   140019180:	(bad)  
   140019181:	(bad)  
   140019182:	jmp    QWORD PTR [rcx]
   140019184:	in     al,dx
   140019185:	int3   
   140019186:	cwde   
   140019187:	push   rdi
   140019189:	fnsave [rbp-0x3a190439]
   14001918f:	scas   al,BYTE PTR es:[rdi]
   140019190:	sti    
   140019191:	in     eax,0xc4
   140019193:	mov    al,0xfb
   140019195:	out    0xc5,al
   140019197:	lods   eax,DWORD PTR ds:[rsi]
   140019198:	clc    
   140019199:	loopne 0x140019156
   14001919b:	(bad)
   14001919e:	test   eax,0xbce4fcff
   1400191a3:	jmp    0x1400191a4
   1400191a5:	jmp    0x10ad76a6c
   1400191aa:	mov    bl,0xf1
   1400191ac:	test   DWORD PTR [rbp-0x48960021],esi
   1400191b2:	(bad)  
   1400191b3:	jmp    FWORD PTR [rbp-0x48]
   1400191b6:	std    
   1400191b7:	push   QWORD PTR [rcx-0x49]
   1400191ba:	cli    
   1400191bb:	push   QWORD PTR [rcx-0x49]
   1400191be:	cli    
   1400191bf:	push   QWORD PTR [rax-0x4a]
   1400191c2:	cli    
   1400191c3:	jmp    FWORD PTR [rsi-0x4b]
   1400191c6:	cli    
   1400191c7:	jmp    FWORD PTR [rdx-0x4d]
   1400191ca:	cli    
   1400191cb:	jmp    QWORD PTR [rbp-0x50]
   1400191ce:	stc    
   1400191cf:	jmp    QWORD PTR [rcx-0x52]
   1400191d2:	stc    
   1400191d3:	call   FWORD PTR [rdi-0x53]
   1400191d6:	stc    
   1400191d7:	call   FWORD PTR [rdi-0x53]
   1400191da:	stc    
   1400191db:	jmp    QWORD PTR [rax-0x53]
   1400191de:	stc    
   1400191df:	call   FWORD PTR [rsi-0x55]
   1400191e2:	stc    
   1400191e3:	call   QWORD PTR [rdi-0x57]
   1400191e6:	cld    
   1400191e7:	jmp    FWORD PTR [rcx-0x4f]
   1400191ea:	sti    
   1400191eb:	(bad)  
   1400191ec:	mov    eax,0xdefde1cc
   1400191f1:	enter  0xf5b9,0xe3
   1400191f5:	int    0xb3
   1400191f7:	out    dx,eax
   1400191f8:	cld    
   1400191f9:	in     eax,0xbf
   1400191fb:	jmp    0x1400191fb
   1400191fd:	out    0xbf,al
   1400191ff:	jmp    0x1400191fe
   140019201:	out    0xbe,al
   140019203:	jmp    0x140019203
   140019205:	out    0xbd,al
   140019207:	jmp    0x140019207
   140019209:	out    0xbd,al
   14001920b:	jmp    0x14001920b
   14001920d:	in     eax,0xbc
   14001920f:	jmp    0x140019210
   140019211:	out    0xbf,al
   140019213:	jmp    0x136c6760f
   140019218:	loopne 0x1400191c9
   14001921a:	pop    rax
   14001921b:	(bad)  
   14001921c:	mov    edx,0xedf24593
   140019221:	shl    BYTE PTR [rdi-0x63301430],cl
   140019227:	out    0xe9,al
   140019229:	mov    esi,0x8fbaff75
   14001922e:	cmp    esp,esi
   140019230:	(bad)  
   140019231:	mov    edi,0xd3eda99b
   140019236:	movabs eax,ds:0x2f8fbdff79bee6ce
   14001923f:	(bad)  
	...
   140019280:	(bad)  
   140019281:	(bad)  
   140019282:	jmp    QWORD PTR [rbx]
   140019284:	in     al,dx
   140019285:	int3   
   140019286:	xchg   edi,eax
   140019287:	(bad)  
   140019288:	clc    
   140019289:	fnsave [rdi+rax*8-0x513b1a05]
   140019290:	cli    
   140019291:	in     eax,0xc2
   140019293:	mov    cl,0xfb
   140019295:	out    0xc5,al
   140019297:	scas   al,BYTE PTR es:[rdi]
   140019298:	clc    
   140019299:	fidivr WORD PTR [rax-0x5b2a0c3b]
   14001929f:	(bad)  
   1400192a0:	stc    
   1400192a1:	fbstp  TBYTE PTR [rbx-0x40190115]
   1400192a7:	(bad)  
   1400192a8:	jmp    rdi
   1400192aa:	mov    esi,0xadd1e7d5
   1400192af:	in     eax,0xa1
   1400192b1:	mov    dh,0xc0
   1400192b3:	cld    
   1400192b4:	push   0xffffffffffffffaf
   1400192b6:	in     al,dx
   1400192b7:	call   FWORD PTR [rcx-0x51]
   1400192ba:	(bad)  
   1400192bb:	call   FWORD PTR [rdx-0x50]
   1400192be:	(bad)  
   1400192bf:	call   FWORD PTR [rsi-0x51]
   1400192c2:	sti    
   1400192c3:	call   FWORD PTR [rdi-0x51]
   1400192c6:	sti    
   1400192c7:	jmp    QWORD PTR [rax-0x51]
   1400192ca:	cli    
   1400192cb:	jmp    QWORD PTR [rax-0x52]
   1400192ce:	stc    
   1400192cf:	jmp    QWORD PTR [rax-0x52]
   1400192d2:	cli    
   1400192d3:	call   FWORD PTR [rdi-0x52]
   1400192d6:	cli    
   1400192d7:	call   FWORD PTR [rbx-0x53]
   1400192da:	sti    
   1400192db:	call   FWORD PTR [rax-0x54]
   1400192de:	std    
   1400192df:	jmp    QWORD PTR [rcx-0x51]
   1400192e2:	cli    
   1400192e3:	call   QWORD PTR [rax-0x2f001542]
   1400192e9:	int    0xca
   1400192eb:	cli    
   1400192ec:	in     al,0xcc
   1400192ee:	mov    bl,0xf2
   1400192f0:	out    dx,al
   1400192f1:	fdiv   DWORD PTR [rdi-0x40190113]
   1400192f7:	jmp    0x1400192f7
   1400192f9:	out    0xbe,al
   1400192fb:	jmp    0x1400192fb
   1400192fd:	out    0xbd,al
   1400192ff:	jmp    0x1400192ff
   140019301:	out    0xbd,al
   140019303:	jmp    0x140019303
   140019305:	out    0xbd,al
   140019307:	jmp    0x140019307
   140019309:	in     eax,0xbc
   14001930b:	jmp    0x14001930b
   14001930d:	in     al,0xba
   14001930f:	jmp    0x140019310
   140019311:	out    0xbe,al
   140019313:	jmp    0x136c6770f
   140019318:	loopne 0x1400192c9
   14001931a:	pop    rax
   14001931b:	(bad)  
   14001931c:	mov    edx,0xedf24593
   140019321:	shl    BYTE PTR [rsi-0x63301430],cl
   140019327:	out    0xe9,al
   140019329:	mov    esi,0x8fbaff75
   14001932e:	cmp    esp,esi
   140019330:	(bad)  
   140019331:	mov    edi,0xd3eda99b
   140019336:	movabs eax,ds:0x308fbdff79bee6ce
   14001933f:	(bad)  
	...
   140019380:	(bad)  
   140019381:	(bad)  
   140019382:	jmp    QWORD PTR [rbx+rbp*8]
   140019385:	int3   
   140019386:	xchg   edi,eax
   140019387:	push   rdi
   140019389:	fnsave [rdi+rax*8-0x513c1a05]
   140019390:	sti    
   140019391:	in     al,0xc2
   140019393:	mov    cl,0xfa
   140019395:	in     eax,0xc4
   140019397:	scas   al,BYTE PTR es:[rdi]
   140019398:	clc    
   140019399:	fidiv  WORD PTR [rdi-0x5b2a0c3b]
   14001939f:	(bad)  
   1400193a0:	stc    
   1400193a1:	fbstp  TBYTE PTR [rbx-0x421a0215]
   1400193a7:	(bad)  
   1400193a8:	std    
   1400193a9:	in     eax,0xbe
   1400193ab:	fdivr  st,st(6)
   1400193ad:	call   0x11efe6773
   1400193b2:	scas   eax,DWORD PTR es:[rdi]
   1400193b3:	jmp    0x13fa85e95
   1400193b8:	stos   DWORD PTR es:[rdi],eax
   1400193b9:	mov    ebx,0xb380fdc0
   1400193be:	fdiv   st(7),st
   1400193c0:	imul   esi,DWORD PTR [rax-0x50a00011],0xae5bfff8
   1400193ca:	sti    
   1400193cb:	call   FWORD PTR [rbx-0x52]
   1400193ce:	cld    
   1400193cf:	call   FWORD PTR [rsi+rbp*4-0x6]
   1400193d3:	jmp    QWORD PTR [rdi+rbp*4-0xa]
   1400193d7:	push   QWORD PTR [rsi-0x4c]
   1400193da:	in     eax,dx
   1400193db:	call   FWORD PTR [rdx-0x35012243]
   1400193e1:	retf   0xfac7
   1400193e4:	jmp    0x130f54bbb
   1400193e9:	xlat   BYTE PTR ds:[rbx]
   1400193ea:	mov    ch,0xed
   1400193ec:	sti    
   1400193ed:	jrcxz  0x1400193ab
   1400193ef:	jmp    0x1400193f0
   1400193f1:	out    0xbe,al
   1400193f3:	jmp    0x1400193f3
   1400193f5:	out    0xbd,al
   1400193f7:	jmp    0x1400193f7
   1400193f9:	in     eax,0xbd
   1400193fb:	jmp    0x1400193fb
   1400193fd:	in     eax,0xbd
   1400193ff:	jmp    0x1400193ff
   140019401:	in     eax,0xbc
   140019403:	jmp    0x140019403
   140019405:	in     al,0xbb
   140019407:	jmp    0x140019407
   140019409:	in     al,0xba
   14001940b:	jmp    0x14001940b
   14001940d:	in     al,0xba
   14001940f:	jmp    0x140019410
   140019411:	out    0xbd,al
   140019413:	jmp    0x136c77910
   140019418:	loopne 0x1400193c8
   14001941a:	push   rsi
   14001941b:	(bad)  
   14001941c:	mov    ebx,0xedf34694
   140019421:	shl    BYTE PTR [rsi-0x64301430],cl
   140019427:	out    0xec,al
   140019429:	mov    DWORD PTR [rdi+0x4293bcff],0x9bbfd6f5
   140019433:	test   eax,0xcea2d3ed
   140019438:	jmp    0x100011b02
   14001943d:	xchg   ebx,eax
   14001943e:	cmp    edi,ecx
	...
   140019480:	(bad)  
   140019481:	(bad)  
   140019482:	jmp    QWORD PTR [rbx+rbp*8]
   140019485:	int3   
   140019486:	xchg   edi,eax
   140019487:	push   rdi
   140019489:	fnsave [rbx-0x3c1a0439]
   14001948f:	scas   al,BYTE PTR es:[rdi]
   140019490:	sti    
   140019491:	in     al,0xc0
   140019493:	mov    cl,0xfb
   140019495:	in     eax,0xc4
   140019497:	scas   al,BYTE PTR es:[rdi]
   140019498:	clc    
   140019499:	fidivr WORD PTR [rax-0x5b2a0c3b]
   14001949f:	(bad)  
   1400194a0:	cli    
   1400194a1:	fbstp  TBYTE PTR [rdx-0x421b0215]
   1400194a7:	(bad)  
   1400194a8:	std    
   1400194a9:	in     al,0xbd
   1400194ab:	fdivr  st,st(5)
   1400194ad:	in     al,0xbe
   1400194af:	(bad)  
   1400194b0:	cld    
   1400194b1:	loope  0x140019469
   1400194b3:	jmp    0x13fa971b4
   1400194b8:	jmp    rdx
   1400194ba:	mov    ah,0xef
   1400194bc:	clc    
   1400194bd:	(bad)  [rcx-0x4c2d1b13]
   1400194c3:	repz ror bl,cl
   1400194c6:	mov    ebx,0xc1c8c5f6
   1400194cb:	stc    
   1400194cc:	(bad)
   1400194cf:	stc    
   1400194d0:	retf   
   1400194d1:	int3   
   1400194d2:	ret    
   1400194d3:	clc    
   1400194d4:	fst    st(3)
   1400194d6:	shl    ch,0xee
   1400194d9:	fnstcw WORD PTR [rdx-0x4822060f]
   1400194df:	out    dx,al
   1400194e0:	sti    
   1400194e1:	loopne 0x14001949c
   1400194e3:	jmp    0x1400194e2
   1400194e5:	in     al,0xbc
   1400194e7:	(bad)  
   1400194e8:	jmp    rsi
   1400194ea:	mov    esi,0xbde6ffea
   1400194ef:	jmp    0x1400194ef
   1400194f1:	in     eax,0xbc
   1400194f3:	jmp    0x1400194f3
   1400194f5:	in     eax,0xbc
   1400194f7:	jmp    0x1400194f7
   1400194f9:	in     al,0xbb
   1400194fb:	jmp    0x1400194fb
   1400194fd:	in     al,0xbb
   1400194ff:	jmp    0x1400194ff
   140019501:	in     al,0xba
   140019503:	jmp    0x140019503
   140019505:	in     al,0xba
   140019507:	jmp    0x140019507
   140019509:	in     al,0xba
   14001950b:	jmp    0x14001950b
   14001950d:	in     al,0xb9
   14001950f:	jmp    0x140019510
   140019511:	in     eax,0xbb
   140019513:	jmp    0x136cd7e11
   140019518:	loope  0x1400194ca
   14001951a:	pop    rcx
   14001951b:	(bad)  
   14001951c:	mov    esp,0xeef34b96
   140019521:	shl    DWORD PTR [rax+rdx*8-0x19633015],1
   140019528:	lock shl DWORD PTR [rcx+0x4d99bfff],cl
   14001952f:	cmc    
   140019530:	(bad)  
   140019531:	mov    edi,0xd4eda89a
   140019536:	movabs ds:0x4599c1ff9aceecce,eax
   14001953f:	rol    BYTE PTR [rax],cl
	...
   14001957d:	add    BYTE PTR [rax],al
   14001957f:	add    bh,bh
   140019581:	(bad)  
   140019582:	jmp    QWORD PTR [rdx]
   140019584:	jmp    0x140019553
   140019586:	cwde   
   140019587:	push   rdi
   140019589:	fnsave [rdi+rax*8-0x513c1b05]
   140019590:	sti    
   140019591:	in     al,0xc0
   140019593:	mov    cl,0xfb
   140019595:	in     eax,0xc3
   140019597:	scas   al,BYTE PTR es:[rdi]
   140019598:	stc    
   140019599:	loopne 0x140019554
   14001959b:	shl    ebx,0xd3
   14001959e:	movabs ds:0xbde5feeeb0def9ff,al
   1400195a7:	(bad)  
   1400195a8:	(bad)  
   1400195a9:	in     eax,0xbd
   1400195ab:	xlat   BYTE PTR ds:[rbx]
   1400195ac:	(bad)  
   1400195ad:	in     eax,0xbd
   1400195af:	(bad)  
   1400195b0:	std    
   1400195b1:	loop   0x14001956b
   1400195b3:	loope  0x1400195ad
   1400195b5:	fisubr DWORD PTR [rcx-0x491e0203]
   1400195bb:	hlt    
   1400195bc:	jmp    rbp
   1400195be:	mov    esp,0xbce6ffec
   1400195c3:	in     al,dx
   1400195c4:	jmp    rsi
   1400195c6:	mov    ecx,0xb9e6ffeb
   1400195cb:	jmp    0x1400195cc
   1400195cd:	out    0xb8,al
   1400195cf:	jmp    0x1400195d0
   1400195d1:	out    0xb9,al
   1400195d3:	jmp    0x1400195d4
   1400195d5:	out    0xbb,al
   1400195d7:	(bad)  
   1400195d8:	jmp    rsi
   1400195da:	mov    esp,0xbde6ffeb
   1400195df:	jmp    0x1400195e0
   1400195e1:	out    0xbd,al
   1400195e3:	jmp    0x1400195e4
   1400195e5:	in     eax,0xbc
   1400195e7:	in     al,dx
   1400195e8:	(bad)  
   1400195e9:	in     eax,0xbc
   1400195eb:	jmp    0x1400195eb
   1400195ed:	in     al,0xbc
   1400195ef:	jmp    0x1400195ef
   1400195f1:	in     al,0xbb
   1400195f3:	jmp    0x1400195f3
   1400195f5:	in     al,0xbb
   1400195f7:	jmp    0x1400195f7
   1400195f9:	in     al,0xba
   1400195fb:	jmp    0x1400195fb
   1400195fd:	in     al,0xba
   1400195ff:	jmp    0x1400195ff
   140019601:	in     al,0xba
   140019603:	jmp    0x140019603
   140019605:	in     al,0xba
   140019607:	jmp    0x140019608
   140019609:	in     al,0xb9
   14001960b:	jmp    0x14001960c
   14001960d:	in     al,0xb9
   14001960f:	jmp    0x140019610
   140019611:	in     eax,0xba
   140019613:	jmp    0x136d38113
   140019618:	in     al,0xba
   14001961a:	outs   dx,BYTE PTR ds:[rsi]
   14001961b:	(bad)  
   14001961c:	mov    ebp,0xeef34f98
   140019621:	shl    BYTE PTR [rbx-0x632f1431],1
   140019627:	out    0xf6,al
   140019629:	loopne 0x1400195e8
   14001962b:	inc    ecx
   14001962d:	lahf   
   14001962e:	pop    rcx
   14001962f:	cmc    
   140019630:	sar    DWORD PTR [rax-0x2c13616f],cl
   140019636:	movabs eax,ds:0x4d9dc3ffaed7f0c6
   14001963f:	rol    DWORD PTR [rax],cl
	...
   14001967d:	add    BYTE PTR [rax],al
   14001967f:	add    bh,bh
   140019681:	(bad)  
   140019682:	inc    DWORD PTR [rdx+rbp*8]
   140019685:	enter  0xff91,0xf5
   140019689:	fisubr DWORD PTR [rdi-0x30140628]
   14001968f:	ret    0xf1fc
   140019692:	(bad)  
   140019694:	sti    
   140019695:	out    dx,eax
   140019696:	fcmovne st,st(5)
   140019698:	cld    
   140019699:	out    dx,eax
   14001969a:	fcmove st,st(5)
   14001969c:	cli    
   14001969d:	jmp    0x125fb7e6e
   1400196a2:	(bad)  
   1400196a3:	idiv   bl
   1400196a5:	call   0x128fd8376
   1400196aa:	int    0xe9
   1400196ac:	sti    
   1400196ad:	jmp    0x129ff807e
   1400196b2:	retf   0xfae7
   1400196b5:	in     eax,0xc5
   1400196b7:	lock cli 
   1400196b9:	in     eax,0xc5
   1400196bb:	hlt    
   1400196bc:	cli    
   1400196bd:	in     eax,0xc5
   1400196bf:	repz cli 
   1400196c1:	in     eax,0xc5
   1400196c3:	hlt    
   1400196c4:	cli    
   1400196c5:	in     al,0xc3
   1400196c7:	repnz cli 
   1400196c9:	in     al,0xc2
   1400196cb:	hlt    
   1400196cc:	sti    
   1400196cd:	jrcxz  0x14001968f
   1400196cf:	repz cli 
   1400196d1:	loop   0x140019693
   1400196d3:	repz cli 
   1400196d5:	jrcxz  0x140019697
   1400196d7:	hlt    
   1400196d8:	cli    
   1400196d9:	jrcxz  0x14001969b
   1400196db:	repz cli 
   1400196dd:	jrcxz  0x14001969f
   1400196df:	cmc    
   1400196e0:	cli    
   1400196e1:	loop   0x1400196a1
   1400196e3:	repz cli 
   1400196e5:	jrcxz  0x1400196a5
   1400196e7:	repz cli 
   1400196e9:	loop   0x1400196a7
   1400196eb:	repz cli 
   1400196ed:	loope  0x1400196aa
   1400196ef:	repz cli 
   1400196f1:	loope  0x1400196ae
   1400196f3:	hlt    
   1400196f4:	cli    
   1400196f5:	loop   0x1400196b2
   1400196f7:	repz sti 
   1400196f9:	loop   0x1400196b6
   1400196fb:	hlt    
   1400196fc:	cld    
   1400196fd:	loope  0x1400196b8
   1400196ff:	cmc    
   140019700:	cld    
   140019701:	loope  0x1400196bc
   140019703:	repz cld 
   140019705:	loop   0x1400196c1
   140019707:	hlt    
   140019708:	cld    
   140019709:	loope  0x1400196c2
   14001970b:	repnz std 
   14001970d:	loop   0x1400196c7
   14001970f:	repnz std 
   140019711:	loopne 0x1400196c7
   140019713:	icebp  
   140019714:	stc    
   140019715:	in     eax,0xc6
   140019717:	clc    
   140019718:	call   0x100011ce1
   14001971d:	pushf  
   14001971e:	push   rbp
   14001971f:	clc    
   140019720:	in     eax,dx
   140019721:	iret   
   140019722:	movabs eax,ds:0xaed8f1efa7d5eeda
   14001972b:	inc    ebp
   14001972d:	movabs eax,ds:0xdbf6b39cc4defc57
   140019736:	scas   eax,DWORD PTR es:[rdi]
   140019737:	(bad)  
   140019738:	call   0x134011e02
   14001973d:	loopne 0x1400196fe
   14001973f:	outs   dx,DWORD PTR ds:[rsi]
	...
   140019784:	(bad)  
   140019785:	stos   DWORD PTR es:[rdi],eax
   140019786:	push   0x73b3dc6b
   14001978b:	in     al,dx
   14001978c:	(bad)  
   14001978d:	scas   eax,DWORD PTR es:[rdi]
   14001978e:	outs   dx,DWORD PTR ds:[rsi]
   14001978f:	loop   0x140019768
   140019791:	mov    cl,0x74
   140019793:	loopne 0x140019770
   140019795:	mov    dh,0x7c
   140019797:	loop   0x140019775
   140019799:	mov    eax,0xb8dce27e
   14001979e:	jg     0x140019782
   1400197a0:	(bad)  [rsi-0x49241282]
   1400197a6:	jle    0x140019797
   1400197a8:	fidivr WORD PTR [rdx-0x4020107d]
   1400197ae:	mov    ebx,esi
   1400197b0:	loop   0x140019774
   1400197b2:	(bad)  
   1400197b3:	hlt    
   1400197b4:	jrcxz  0x14001977a
   1400197b6:	xchg   edx,eax
   1400197b7:	repz in al,0xc4
   1400197ba:	xchg   ebp,eax
   1400197bb:	repz in al,0xc5
   1400197be:	xchg   ebp,eax
   1400197bf:	hlt    
   1400197c0:	in     eax,0xc8
   1400197c2:	cdq    
   1400197c3:	repz out 0xcb,al
   1400197c6:	popf   
   1400197c7:	hlt    
   1400197c8:	out    0xcc,eax
   1400197ca:	movabs al,ds:0xacd4edf3aad2ecf6
   1400197d3:	repz in eax,dx
   1400197d5:	(bad)  
   1400197d6:	lods   eax,DWORD PTR ds:[rsi]
   1400197d7:	hlt    
   1400197d8:	out    dx,al
   1400197d9:	(bad)  
   1400197da:	mov    cl,0xf3
   1400197dc:	out    dx,al
   1400197dd:	(bad)  
   1400197de:	mov    al,0xf7
   1400197e0:	lock fdiv DWORD PTR [rbp-0x48250f0a]
   1400197e7:	hlt    
   1400197e8:	repnz fdivr QWORD PTR [rcx-0x3e200a09]
   1400197ef:	cmc    
   1400197f0:	cmc    
   1400197f1:	loope  0x1400197b5
   1400197f3:	hlt    
   1400197f4:	cmc    
   1400197f5:	loop   0x1400197ba
   1400197f7:	cmc    
   1400197f8:	mul    bl
   1400197fa:	(bad)  
   1400197fb:	hlt    
   1400197fc:	clc    
   1400197fd:	in     al,0xc9
   1400197ff:	hlt    
   140019800:	clc    
   140019801:	in     eax,0xcb
   140019803:	hlt    
   140019804:	clc    
   140019805:	out    0xcb,al
   140019807:	cmc    
   140019808:	clc    
   140019809:	call   0x12bfc8ddc
   14001980e:	shl    esp,1
   140019810:	cli    
   140019811:	call   0x11df58ee2
   140019816:	mov    ecx,0x9aceebff
   14001981b:	inc    ecx
   14001981d:	test   eax,0xbedbd582
   140019822:	xchg   ecx,eax
   140019823:	iret   
   140019824:	in     eax,dx
   140019825:	retf   
   140019826:	xchg   ecx,eax
   140019827:	loope  0x140019816
   140019829:	(bad)  
   14001982c:	movabs eax,ds:0xec535989a6736b8c
   140019835:	ret    
   140019836:	jp     0x140019891
   140019838:	(bad)  
   140019839:	leave  
   14001983a:	mov    cs,WORD PTR [rax-0x7]
   14001983d:	repnz loop 0x140019843
	...
   140019888:	iret   
   140019889:	movabs ds:0x9cc829569eca195b,eax
   140019892:	push   rbx
   140019893:	sub    ecx,ecx
   140019895:	popf   
   140019896:	push   rsp
   140019897:	xor    al,0xc9
   140019899:	sahf   
   14001989a:	push   rsp
   14001989b:	cmp    cl,cl
   14001989d:	sahf   
   14001989e:	push   rbp
   14001989f:	(bad)  
   1400198a0:	retf   0x569f
   1400198a3:	(bad)  
   1400198a4:	retf   0x579f
   1400198a7:	rex retf 0x579f
   1400198ab:	rex.X enter 0x559d,0x51
   1400198b0:	enter  0x559d,0x54
   1400198b4:	leave  
   1400198b5:	popf   
   1400198b6:	push   rsi
   1400198b7:	push   rsi
   1400198b8:	leave  
   1400198b9:	sahf   
   1400198ba:	push   rsi
   1400198bb:	(bad)  
   1400198bc:	leave  
   1400198bd:	lahf   
   1400198be:	push   rdi
   1400198bf:	(bad)  
   1400198c0:	retf   
   1400198c1:	movabs al,ds:0xa1cb6f59a0cb6759
   1400198ca:	pop    rdx
   1400198cb:	ins    DWORD PTR es:[rdi],dx
   1400198cc:	retf   0x5aa0
   1400198cf:	jl     0x14001989b
   1400198d1:	movabs al,ds:0xa1cb815ba1ca815b
   1400198da:	pop    rsp
   1400198db:	mov    ebx,cs
   1400198dd:	movabs ds:0xa5ce8f5fa3cc8f5d,al
   1400198e6:	movsxd ebx,DWORD PTR [rbx-0x639c5932]
   1400198ec:	int    0xa6
   1400198ee:	movsxd esp,DWORD PTR [rdx-0x53995832]
   1400198f4:	(bad)  
   1400198f5:	test   al,0x67
   1400198f7:	stos   DWORD PTR es:[rdi],eax
   1400198f8:	iret   
   1400198f9:	test   eax,0xabd0ae6a
   1400198fe:	ins    BYTE PTR es:[rdi],dx
   1400198ff:	mov    dh,0xd0
   140019901:	stos   DWORD PTR es:[rdi],eax
   140019902:	ins    DWORD PTR es:[rdi],dx
   140019903:	mov    ah,0xd1
   140019905:	lods   eax,DWORD PTR ds:[rsi]
   140019906:	outs   dx,DWORD PTR ds:[rsi]
   140019907:	mov    ebp,0xc372aed2
   14001990c:	shr    DWORD PTR [rsi-0x4d293a91],1
   140019912:	jno    0x1400198d6
   140019914:	fidiv  WORD PTR [rsi-0x522c4593]
   14001991a:	imul   esi,DWORD PTR [rbx+0x2a],0x27
   14001991e:	and    eax,0x3f67800e
   140019923:	or     eax,0xf66bced
   140019928:	cmc    
   140019929:	(bad)  
   14001992a:	mov    WORD PTR [rsi],es
	...
   14001a768:	(bad)  
   14001a769:	(bad)  
   14001a76a:	(bad)  
   14001a76b:	(bad)  
   14001a76c:	(bad)  
   14001a76d:	(bad)  
   14001a76e:	(bad)  
   14001a76f:	(bad)  
   14001a770:	(bad)  
   14001a771:	(bad)  
   14001a772:	(bad)  
   14001a773:	(bad)  
   14001a774:	(bad)  
   14001a775:	(bad)  
   14001a776:	(bad)  
   14001a777:	(bad)  
   14001a778:	(bad)  
   14001a779:	(bad)  
   14001a77a:	(bad)  
   14001a77b:	(bad)  
   14001a77c:	(bad)  
   14001a77d:	(bad)  
   14001a77e:	(bad)  
   14001a77f:	(bad)  
   14001a780:	(bad)  
   14001a781:	(bad)  
   14001a782:	(bad)  
   14001a783:	(bad)  
   14001a784:	cld    
   14001a785:	(bad)  
   14001a786:	(bad)  
   14001a787:	(bad)  
   14001a788:	(bad)  
   14001a789:	(bad)  
   14001a78a:	(bad)  
   14001a78b:	inc    BYTE PTR [rax]
   14001a78d:	add    edi,edi
   14001a78f:	(bad)  
   14001a790:	(bad)  
   14001a791:	(bad)  
   14001a792:	inc    DWORD PTR [rax]
   14001a794:	add    BYTE PTR [rax],al
   14001a796:	(bad)  
   14001a797:	(bad)  
   14001a798:	(bad)  
   14001a799:	inc    DWORD PTR [rax+0x7000000]
   14001a79f:	(bad)  
   14001a7a0:	inc    eax
   14001a7a2:	add    BYTE PTR [rax],al
   14001a7a4:	add    BYTE PTR [rax],al
   14001a7a6:	add    edi,edi
   14001a7a8:	inc    BYTE PTR [rax]
   14001a7aa:	add    BYTE PTR [rax],al
   14001a7ac:	add    BYTE PTR [rax],al
   14001a7ae:	add    BYTE PTR [rdi-0x4],bh
   14001a7b1:	add    BYTE PTR [rax],al
   14001a7b3:	add    BYTE PTR [rax],al
   14001a7b5:	add    BYTE PTR [rax],al
   14001a7b7:	(bad)  
   14001a7b8:	cld    
   14001a7b9:	add    BYTE PTR [rax],al
   14001a7bb:	add    BYTE PTR [rax],al
   14001a7bd:	add    BYTE PTR [rax],al
   14001a7bf:	(bad)  
   14001a7c0:	cld    
   14001a7c1:	add    BYTE PTR [rax],al
   14001a7c3:	add    BYTE PTR [rax],al
   14001a7c5:	add    BYTE PTR [rax],al
   14001a7c7:	add    edi,esp
   14001a7c9:	add    BYTE PTR [rax],al
   14001a7cb:	add    BYTE PTR [rax],al
   14001a7cd:	add    BYTE PTR [rax],al
   14001a7cf:	add    edi,esp
   14001a7d1:	add    BYTE PTR [rax],al
   14001a7d3:	add    BYTE PTR [rax],al
   14001a7d5:	add    BYTE PTR [rax],al
   14001a7d7:	paddb  mm0,QWORD PTR [rax]
   14001a7da:	add    BYTE PTR [rax],al
   14001a7dc:	add    BYTE PTR [rax],al
   14001a7de:	add    edi,edi
   14001a7e0:	cld    
   14001a7e1:	add    BYTE PTR [rax],al
   14001a7e3:	add    BYTE PTR [rax],al
   14001a7e5:	add    BYTE PTR [rbx],al
   14001a7e7:	(bad)  
   14001a7e8:	cld    
   14001a7e9:	add    BYTE PTR [rax],al
   14001a7eb:	add    BYTE PTR [rax],al
   14001a7ed:	add    BYTE PTR [rbx],al
   14001a7ef:	(bad)  
   14001a7f0:	cld    
   14001a7f1:	add    BYTE PTR [rax],al
   14001a7f3:	add    BYTE PTR [rax],al
   14001a7f5:	add    BYTE PTR [rbx],al
   14001a7f7:	(bad)  
   14001a7f8:	cld    
   14001a7f9:	add    BYTE PTR [rax],al
   14001a7fb:	add    BYTE PTR [rax],al
   14001a7fd:	add    BYTE PTR [rbx],al
   14001a7ff:	(bad)  
   14001a800:	cld    
   14001a801:	add    BYTE PTR [rax],al
   14001a803:	add    BYTE PTR [rax],al
   14001a805:	add    BYTE PTR [rbx],al
   14001a807:	(bad)  
   14001a808:	cld    
   14001a809:	add    BYTE PTR [rax],al
   14001a80b:	add    BYTE PTR [rax],al
   14001a80d:	add    BYTE PTR [rbx],al
   14001a80f:	(bad)  
   14001a810:	cld    
   14001a811:	add    BYTE PTR [rax],al
   14001a813:	add    BYTE PTR [rax],al
   14001a815:	add    BYTE PTR [rbx],al
   14001a817:	(bad)  
   14001a818:	cld    
   14001a819:	add    BYTE PTR [rax],al
   14001a81b:	add    BYTE PTR [rax],al
   14001a81d:	add    BYTE PTR [rbx],al
   14001a81f:	(bad)  
   14001a820:	cld    
   14001a821:	add    BYTE PTR [rax],al
   14001a823:	add    BYTE PTR [rax],al
   14001a825:	add    BYTE PTR [rbx],al
   14001a827:	(bad)  
   14001a828:	cld    
   14001a829:	add    BYTE PTR [rax],al
   14001a82b:	add    BYTE PTR [rax],al
   14001a82d:	add    BYTE PTR [rbx],al
   14001a82f:	(bad)  
   14001a830:	cld    
   14001a831:	add    BYTE PTR [rax],al
   14001a833:	add    BYTE PTR [rax],al
   14001a835:	add    BYTE PTR [rbx],al
   14001a837:	(bad)  
   14001a838:	cld    
   14001a839:	add    BYTE PTR [rax],al
   14001a83b:	add    BYTE PTR [rax],al
   14001a83d:	add    BYTE PTR [rbx],al
   14001a83f:	(bad)  
   14001a840:	cld    
   14001a841:	add    BYTE PTR [rax],al
   14001a843:	add    BYTE PTR [rax],al
   14001a845:	add    BYTE PTR [rbx],al
   14001a847:	(bad)  
   14001a848:	cld    
   14001a849:	add    BYTE PTR [rax],al
   14001a84b:	add    BYTE PTR [rax],al
   14001a84d:	add    BYTE PTR [rbx],al
   14001a84f:	(bad)  
   14001a850:	cld    
   14001a851:	add    BYTE PTR [rax],al
   14001a853:	add    BYTE PTR [rax],al
   14001a855:	add    BYTE PTR [rbx],al
   14001a857:	(bad)  
   14001a858:	cld    
   14001a859:	add    BYTE PTR [rax],al
   14001a85b:	add    BYTE PTR [rax],al
   14001a85d:	add    BYTE PTR [rbx],al
   14001a85f:	(bad)  
   14001a860:	cld    
   14001a861:	add    BYTE PTR [rax],al
   14001a863:	add    BYTE PTR [rax],al
   14001a865:	add    BYTE PTR [rbx],al
   14001a867:	(bad)  
   14001a868:	cld    
   14001a869:	add    BYTE PTR [rax],al
   14001a86b:	add    BYTE PTR [rax],al
   14001a86d:	add    BYTE PTR [rbx],al
   14001a86f:	(bad)  
   14001a870:	cld    
   14001a871:	add    BYTE PTR [rax],al
   14001a873:	add    BYTE PTR [rax],al
   14001a875:	add    BYTE PTR [rbx],al
   14001a877:	(bad)  
   14001a878:	cld    
   14001a879:	add    BYTE PTR [rax],al
   14001a87b:	add    BYTE PTR [rax],al
   14001a87d:	add    BYTE PTR [rbx],al
   14001a87f:	(bad)  
   14001a880:	cld    
   14001a881:	add    BYTE PTR [rax],al
   14001a883:	add    BYTE PTR [rax],al
   14001a885:	add    BYTE PTR [rbx],al
   14001a887:	(bad)  
   14001a888:	cld    
   14001a889:	add    BYTE PTR [rax],al
   14001a88b:	add    BYTE PTR [rax],al
   14001a88d:	add    BYTE PTR [rbx],al
   14001a88f:	(bad)  
   14001a890:	cld    
   14001a891:	add    BYTE PTR [rax],al
   14001a893:	add    BYTE PTR [rax],al
   14001a895:	add    BYTE PTR [rbx],al
   14001a897:	(bad)  
   14001a898:	cld    
   14001a899:	add    BYTE PTR [rax],al
   14001a89b:	add    BYTE PTR [rax],al
   14001a89d:	add    BYTE PTR [rbx],al
   14001a89f:	(bad)  
   14001a8a0:	cld    
   14001a8a1:	add    BYTE PTR [rax],al
   14001a8a3:	add    BYTE PTR [rax],al
   14001a8a5:	add    BYTE PTR [rbx],al
   14001a8a7:	(bad)  
   14001a8a8:	cld    
   14001a8a9:	add    BYTE PTR [rax],al
   14001a8ab:	add    BYTE PTR [rax],al
   14001a8ad:	add    BYTE PTR [rbx],al
   14001a8af:	(bad)  
   14001a8b0:	cld    
   14001a8b1:	add    BYTE PTR [rax],al
   14001a8b3:	add    BYTE PTR [rax],al
   14001a8b5:	add    BYTE PTR [rbx],al
   14001a8b7:	(bad)  
   14001a8b8:	cld    
   14001a8b9:	add    BYTE PTR [rax],al
   14001a8bb:	add    BYTE PTR [rax],al
   14001a8bd:	add    BYTE PTR [rbx],al
   14001a8bf:	(bad)  
   14001a8c0:	cld    
   14001a8c1:	add    BYTE PTR [rax],al
   14001a8c3:	add    BYTE PTR [rax],al
   14001a8c5:	add    BYTE PTR [rbx],al
   14001a8c7:	(bad)  
   14001a8c8:	cld    
   14001a8c9:	add    BYTE PTR [rax],al
   14001a8cb:	add    BYTE PTR [rax],al
   14001a8cd:	add    BYTE PTR [rbx],al
   14001a8cf:	(bad)  
   14001a8d0:	cld    
   14001a8d1:	add    BYTE PTR [rax],al
   14001a8d3:	add    BYTE PTR [rax],al
   14001a8d5:	add    BYTE PTR [rbx],al
   14001a8d7:	(bad)  
   14001a8d8:	cld    
   14001a8d9:	add    BYTE PTR [rax],al
   14001a8db:	add    BYTE PTR [rax],al
   14001a8dd:	add    BYTE PTR [rbx],al
   14001a8df:	(bad)  
   14001a8e0:	cld    
   14001a8e1:	add    BYTE PTR [rax],al
   14001a8e3:	add    BYTE PTR [rax],al
   14001a8e5:	add    BYTE PTR [rbx],al
   14001a8e7:	(bad)  
   14001a8e8:	inc    BYTE PTR [rax]
   14001a8ea:	add    BYTE PTR [rax],al
   14001a8ec:	add    BYTE PTR [rax],al
   14001a8ee:	add    edi,edi
   14001a8f0:	inc    DWORD PTR [rax]
   14001a8f2:	add    BYTE PTR [rax],al
   14001a8f4:	add    BYTE PTR [rax],al
   14001a8f6:	jg     0x14001a8f7
   14001a8f8:	(bad)  
   14001a8f9:	(bad)  
   14001a8fa:	(bad)  
   14001a8fb:	(bad)  
   14001a8fc:	(bad)  
   14001a8fd:	(bad)  
   14001a8fe:	(bad)  
   14001a8ff:	(bad)  
   14001a900:	(bad)  
   14001a901:	(bad)  
   14001a902:	(bad)  
   14001a903:	(bad)  
   14001a904:	(bad)  
   14001a905:	(bad)  
   14001a906:	(bad)  
   14001a907:	(bad)  
   14001a908:	(bad)  
   14001a909:	(bad)  
   14001a90a:	(bad)  
   14001a90b:	(bad)  
   14001a90c:	(bad)  
   14001a90d:	(bad)  
   14001a90e:	(bad)  
   14001a90f:	(bad)  
   14001a910:	(bad)  
   14001a911:	(bad)  
   14001a912:	(bad)  
   14001a913:	(bad)  
   14001a914:	(bad)  
   14001a915:	(bad)  
   14001a916:	(bad)  
   14001a917:	(bad)  
   14001a918:	(bad)  
   14001a919:	(bad)  
   14001a91a:	(bad)  
   14001a91b:	(bad)  
   14001a91c:	(bad)  
   14001a91d:	(bad)  
   14001a91e:	(bad)  
   14001a91f:	(bad)  
   14001a920:	(bad)  
   14001a921:	(bad)  
   14001a922:	(bad)  
   14001a923:	(bad)  
   14001a924:	(bad)  
   14001a925:	(bad)  
   14001a926:	(bad)  
   14001a927:	(bad)  
   14001a928:	(bad)  
   14001a929:	(bad)  
   14001a92a:	(bad)  
   14001a92b:	(bad)  
   14001a92c:	(bad)  
   14001a92d:	(bad)  
   14001a92e:	(bad)  
   14001a92f:	(bad)  
   14001a930:	(bad)  
   14001a931:	(bad)  
   14001a932:	(bad)  
   14001a933:	(bad)  
   14001a934:	(bad)  
   14001a935:	(bad)  
   14001a936:	(bad)  
   14001a937:	(bad)  
   14001a938:	(bad)  
   14001a939:	(bad)  
   14001a93a:	(bad)  
   14001a93b:	(bad)  
   14001a93c:	(bad)  
   14001a93d:	(bad)  
   14001a93e:	(bad)  
   14001a93f:	(bad)  
   14001a940:	(bad)  
   14001a941:	(bad)  
   14001a942:	(bad)  
   14001a943:	(bad)  
   14001a944:	(bad)  
   14001a945:	(bad)  
   14001a946:	(bad)  
   14001a947:	(bad)  
   14001a948:	(bad)  
   14001a949:	(bad)  
   14001a94a:	(bad)  
   14001a94b:	(bad)  
   14001a94c:	(bad)  
   14001a94d:	(bad)  
   14001a94e:	(bad)  
   14001a94f:	(bad)  
   14001a950:	(bad)  
   14001a951:	(bad)  
   14001a952:	(bad)  
   14001a953:	(bad)  
   14001a954:	(bad)  
   14001a955:	(bad)  
   14001a956:	(bad)  
   14001a957:	(bad)  
   14001a958:	(bad)  
   14001a959:	(bad)  
   14001a95a:	(bad)  
   14001a95b:	(bad)  
   14001a95c:	(bad)  
   14001a95d:	(bad)  
   14001a95e:	(bad)  
   14001a95f:	(bad)  
   14001a960:	(bad)  
   14001a961:	(bad)  
   14001a962:	(bad)  
   14001a963:	(bad)  
   14001a964:	(bad)  
   14001a965:	(bad)  
   14001a966:	(bad)  
   14001a967:	jmp    FWORD PTR [rax]
   14001a969:	add    BYTE PTR [rax],al
   14001a96b:	add    BYTE PTR [rax],dh
   14001a96d:	add    BYTE PTR [rax],al
   14001a96f:	add    BYTE PTR [rax+0x0],ah
   14001a972:	add    BYTE PTR [rax],al
   14001a974:	add    DWORD PTR [rax],eax
   14001a976:	and    BYTE PTR [rax],al
   14001a978:	add    BYTE PTR [rax],al
   14001a97a:	add    BYTE PTR [rax],al
   14001a97c:	and    BYTE PTR [rip+0x0],0x0        # 0x14001a983
	...
   14001a9f7:	add    al,BYTE PTR [rax]
   14001a9f9:	add    BYTE PTR [rax],al
   14001a9fb:	(bad)  
   14001a9fc:	adc    al,0x13
   14001a9fe:	adc    DWORD PTR [rip+0x10000000],ecx        # 0x15001aa04
   14001aa04:	add    BYTE PTR [rax],al
   14001aa06:	add    BYTE PTR [rax+rax*1],dl
   14001aa09:	add    BYTE PTR [rax],al
   14001aa0b:	sbb    DWORD PTR [rax],eax
   14001aa0d:	add    BYTE PTR [rax],al
   14001aa0f:	(bad)  
   14001aa10:	or     BYTE PTR [rax],cl
   14001aa12:	or     BYTE PTR [rax],ah
   14001aa14:	add    BYTE PTR [rax],al
   14001aa16:	add    BYTE PTR [rdi],bl
   14001aa18:	add    BYTE PTR [rax],al
   14001aa1a:	add    BYTE PTR [rdx],dl
   14001aa1c:	add    BYTE PTR [rax],al
   14001aa1e:	add    BYTE PTR [rcx],al
	...
   14001aa98:	add    BYTE PTR [rax],al
   14001aa9a:	add    BYTE PTR [rcx],al
   14001aa9c:	add    BYTE PTR [rax],al
   14001aa9e:	add    BYTE PTR [rsi],al
   14001aaa0:	add    BYTE PTR [rax],al
   14001aaa2:	add    BYTE PTR [rbx],cl
   14001aaa4:	add    BYTE PTR [rax],al
   14001aaa6:	add    BYTE PTR [rdi],cl
   14001aaa8:	add    BYTE PTR [rax],al
   14001aaaa:	add    BYTE PTR [rbx],dl
   14001aaac:	add    BYTE PTR [rax],al
   14001aaae:	add    BYTE PTR [rcx],bl
   14001aab0:	add    BYTE PTR [rax],al
   14001aab2:	add    BYTE PTR [rip+0x210c0e0f],bl        # 0x1610db8c7
   14001aab8:	(bad)  
   14001aab9:	adc    eax,0xd0f2211
   14001aabe:	or     ah,BYTE PTR [rcx]
   14001aac0:	(bad)  
   14001aac1:	adc    al,0xf
   14001aac3:	and    ch,BYTE PTR [rcx]
   14001aac5:	and    eax,0x383f241c
   14001aaca:	sub    BYTE PTR [rcx],ch
   14001aacc:	jbe    0x14001ab30
   14001aace:	ss cmp al,0x81
   14001aad1:	xor    BYTE PTR [edi+eax*1+0x6],al
   14001aad6:	add    esp,DWORD PTR [rax]
   14001aad8:	add    al,BYTE PTR [rax]
   14001aada:	add    BYTE PTR [rdi],bl
   14001aadc:	add    eax,DWORD PTR [rax]
   14001aade:	add    bl,BYTE PTR [rcx]
   14001aae0:	add    eax,DWORD PTR [rax]
   14001aae2:	add    BYTE PTR [rdi],al
	...
   14001ab40:	add    BYTE PTR [rax],al
   14001ab42:	add    BYTE PTR [rdx],al
   14001ab44:	add    BYTE PTR [rax],al
   14001ab46:	add    BYTE PTR [rdi],al
   14001ab48:	add    BYTE PTR [rax],al
   14001ab4a:	add    BYTE PTR [rip+0x12000000],cl        # 0x15201ab50
   14001ab50:	add    BYTE PTR [rax],al
   14001ab52:	add    BYTE PTR [rcx],bl
   14001ab54:	add    BYTE PTR [rax],al
   14001ab56:	add    BYTE PTR [rsi+rax*1],bl
   14001ab59:	add    eax,0xb0c2003
   14001ab5e:	(bad)  
   14001ab5f:	and    DWORD PTR [rsi],ecx
   14001ab61:	or     al,0x3
   14001ab63:	and    bl,BYTE PTR [rax]
   14001ab65:	adc    al,0x5
   14001ab67:	and    ebp,DWORD PTR [rdi]
   14001ab69:	(bad)  
   14001ab6a:	or     ch,BYTE PTR [rax]
   14001ab6c:	cmp    eax,0x752a1633
   14001ab71:	pop    rdi
   14001ab72:	sub    al,0x3f
   14001ab74:	mov    ebp,DWORD PTR [rdi+0x31]
   14001ab77:	push   rcx
   14001ab78:	sahf   
   14001ab79:	jle    0x14001abb2
   14001ab7b:	stos   BYTE PTR es:[edi],al
   14001ab7d:	xchg   DWORD PTR [rdx],edi
   14001ab7f:	jle    0x14001ab30
   14001ab81:	mov    DWORD PTR [rdx],esi
   14001ab83:	lea    esi,[rsi-0x3e60c770]
   14001ab89:	fwait
   14001ab8a:	rex.RB mov r12d,0xc34c9ec3
   14001ab90:	mov    bh,0x92
   14001ab92:	cmp    BYTE PTR [rax+0x5d16536e],bh
   14001ab98:	add    BYTE PTR [rax],al
   14001ab9a:	add    BYTE PTR [rsi],bl
   14001ab9c:	(bad)  
   14001ab9d:	add    BYTE PTR [rax],al
   14001ab9f:	(bad)  
   14001aba0:	add    BYTE PTR [rax],al
   14001aba2:	add    BYTE PTR [rdx],bl
   14001aba4:	add    eax,DWORD PTR [rcx]
   14001aba6:	add    cl,BYTE PTR [rip+0x0]        # 0x14001abac
	...
   14001abe8:	add    BYTE PTR [rax],al
   14001abea:	add    BYTE PTR [rcx],al
   14001abec:	add    BYTE PTR [rax],al
   14001abee:	add    BYTE PTR [rip+0x8000000],al        # 0x14801abf4
   14001abf4:	or     al,0xa
   14001abf6:	add    dl,BYTE PTR [rax]
   14001abf8:	or     DWORD PTR [rdi],eax
   14001abfa:	add    edx,DWORD PTR [rdi]
   14001abfc:	adc    eax,0x71e0b12
   14001ac01:	(bad)  
   14001ac02:	add    al,0x1f
   14001ac04:	(bad)  
   14001ac06:	add    esp,DWORD PTR [rdx]
   14001ac08:	adc    edx,DWORD PTR [rax]
   14001ac0a:	add    al,0x23
   14001ac0c:	(bad)  
   14001ac0d:	sbb    DWORD PTR [rsi],eax
   14001ac0f:	and    al,0x34
   14001ac11:	sub    ecx,DWORD PTR [rbx]
   14001ac13:	sub    ah,BYTE PTR [rbp+0x52]
   14001ac16:	and    BYTE PTR [rax],bh
   14001ac18:	nop
   14001ac19:	jne    0x14001ac4f
   14001ac1b:	push   rbp
   14001ac1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ac1d:	test   BYTE PTR [rip+0x3687a96d],bh        # 0x176895590
   14001ac23:	(bad)  
   14001ac24:	mov    bl,0x8d
   14001ac26:	(bad)  
   14001ac27:	xchg   ebp,eax
   14001ac28:	mov    ebp,0xc2ae4498
   14001ac2d:	popf   
   14001ac2e:	rex.W ret 0xa0c5
   14001ac32:	rex.WRX leave 
   14001ac34:	(bad)  
   14001ac35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ac36:	push   rsp
   14001ac37:	(bad)  
   14001ac38:	retf   0x5ba8
   14001ac3b:	rcl    al,1
   14001ac3d:	mov    al,0x67
   14001ac3f:	fcom   st(7)
   14001ac41:	mov    ecx,0xc4e0e077
   14001ac46:	mov    eax,ebp
   14001ac48:	out    0xcf,eax
   14001ac4a:	cwde   
   14001ac4b:	in     al,dx
   14001ac4c:	jmp    0x12fef4821
   14001ac51:	fdiv   QWORD PTR [rbx+0x399bc7ef]
   14001ac57:	jmp    rax
   14001ac59:	mov    eax,0x308c65a
   14001ac5e:	add    DWORD PTR [rdi],esp
   14001ac60:	add    DWORD PTR [rax],eax
   14001ac62:	add    BYTE PTR [rip+0x1b050402],bl        # 0x15b06b06a
   14001ac68:	add    al,BYTE PTR [rcx]
   14001ac6a:	add    DWORD PTR [rax],edx
   14001ac6c:	(bad)  
   14001ac6d:	add    BYTE PTR [rcx],al
   14001ac6f:	add    al,0x0
	...
   14001ac9d:	add    BYTE PTR [rax],al
   14001ac9f:	add    BYTE PTR [rsp+rdx*2+0x28],ah
   14001aca3:	add    al,0x25
   14001aca5:	(bad)  
   14001aca6:	adc    DWORD PTR [rbx],ecx
   14001aca8:	prefetch BYTE PTR [rsp+rdx*1]
   14001acac:	sbb    edx,DWORD PTR [rsi]
   14001acae:	(bad)  
   14001acaf:	(bad)  
   14001acb0:	sub    eax,0x4b280a25
   14001acb5:	(bad)  
   14001acb6:	(bad)  
   14001acb7:	(bad)  
   14001acb8:	outs   dx,BYTE PTR ds:[rsi]
   14001acb9:	pop    rbx
   14001acba:	sub    edi,DWORD PTR [rbx]
   14001acbc:	xchg   esi,eax
   14001acbd:	jnp    0x14001acfa
   14001acbf:	pop    rbx
   14001acc0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001acc1:	xchg   DWORD PTR [rcx+0x72],eax
   14001acc4:	stos   BYTE PTR es:[rdi],al
   14001acc5:	xchg   DWORD PTR [rdi],esi
   14001acc7:	(bad)  
   14001acc8:	mov    ah,0x90
   14001acca:	cmp    eax,0x4598bd96
   14001accf:	scas   al,BYTE PTR es:[rdi]
   14001acd0:	rcr    DWORD PTR [rbp-0x613b3cb8],0x4a
   14001acd7:	(bad)  
   14001acd8:	leave  
   14001acd9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001acda:	push   rsi
   14001acdb:	(bad)  
   14001acdc:	iret   
   14001acdd:	scas   al,BYTE PTR es:[rdi]
   14001acde:	movsxd ebx,esi
   14001ace0:	xlat   BYTE PTR ds:[rbx]
   14001ace1:	mov    eax,0xc1dee672
   14001ace6:	sub    bh,0xe3
   14001ace9:	(bad)  
   14001acea:	mov    esi,ecx
   14001acec:	out    0xce,eax
   14001acee:	xchg   esi,eax
   14001acef:	out    dx,al
   14001acf0:	in     eax,0xce
   14001acf2:	cwde   
   14001acf3:	call   0x1229677d9
   14001acf8:	(bad)  
   14001acfa:	nop
   14001acfb:	(bad)  
   14001acfd:	(bad)  
   14001acfe:	nop
   14001acff:	(bad)  
   14001ad00:	faddp  st(7),st
   14001ad02:	xchg   ecx,eax
   14001ad03:	rcr    ebp,cl
   14001ad05:	(bad)  
   14001ad06:	xchg   ecx,eax
   14001ad07:	rcr    bl,1
   14001ad09:	ret    
   14001ad0a:	mov    edx,edx
   14001ad0c:	fld    st(0)
   14001ad0e:	xchg   ebx,edx
   14001ad10:	out    dx,eax
   14001ad11:	fnsave [rsi+0x3599c7e8]
   14001ad17:	(bad)  
   14001ad18:	mov    esi,0xbefc3597
   14001ad1d:	xchg   ecx,eax
   14001ad1e:	sub    al,0xfe
   14001ad20:	retf   
   14001ad21:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ad22:	push   rax
   14001ad23:	test   DWORD PTR [rax],ecx
   14001ad25:	add    al,BYTE PTR [rsi+rbx*1]
   14001ad28:	add    DWORD PTR [rax],eax
   14001ad2a:	add    BYTE PTR [rdx],bl
   14001ad2c:	or     DWORD PTR [rbx],eax
   14001ad2e:	add    DWORD PTR [rdx],edx
   14001ad30:	or     BYTE PTR [rdx],al
   14001ad32:	(bad)  
   14001ad33:	or     BYTE PTR [rax],al
	...
   14001ad55:	add    BYTE PTR [rax],al
   14001ad57:	add    BYTE PTR [rsi+0x74012683],bl
   14001ad5d:	pop    rbp
   14001ad5e:	and    al,0x20
   14001ad60:	xchg   ebp,eax
   14001ad61:	js     0x14001ad97
   14001ad63:	push   rax
   14001ad64:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ad65:	test   BYTE PTR [rcx],bh
   14001ad67:	ins    DWORD PTR es:[rdi],dx
   14001ad68:	stos   BYTE PTR es:[rdi],al
   14001ad69:	xchg   BYTE PTR [rbx],dh
   14001ad6b:	test   BYTE PTR [rcx-0x415fbb6b],bh
   14001ad71:	fwait
   14001ad72:	rex.RXB mov r15b,0xc2
   14001ad75:	sahf   
   14001ad76:	rex.WX int3 
   14001ad78:	(bad)  
   14001ad79:	movabs eax,ds:0xafd1df59a9cbda4f
   14001ad82:	in     ax,0xd8
   14001ad85:	mov    ecx,0xbedcea73
   14001ad8a:	jle    0x14001ad74
   14001ad8c:	faddp  st(2),st
   14001ad8e:	test   edi,esp
   14001ad90:	loope  0x14001ad59
   14001ad92:	(bad)  
   14001ad93:	in     eax,0xe7
   14001ad95:	rcr    BYTE PTR [rbp-0x602e1820],1
   14001ad9b:	fsubrp st(5),st
   14001ad9d:	(bad)  
   14001ad9e:	pushf  
   14001ad9f:	fnclex 
   14001ada1:	retf   
   14001ada2:	cwde   
   14001ada3:	xlat   BYTE PTR ds:[rbx]
   14001ada4:	fmulp  st(0),st
   14001ada6:	xchg   ebx,eax
   14001ada7:	(bad)  
   14001ada8:	ffree  st(6)
   14001adaa:	nop
   14001adab:	rcr    esi,cl
   14001adad:	(bad)  
   14001adae:	xchg   ecx,eax
   14001adaf:	(bad)  
   14001adb0:	faddp  st(6),st
   14001adb2:	(bad)  
   14001adb3:	fcmovnu st,st(7)
   14001adb5:	(bad)  
   14001adb6:	nop
   14001adb7:	loope  0x14001ad99
   14001adb9:	(bad)  
   14001adba:	mov    fs,ebp
   14001adbc:	ffreep st(6)
   14001adbe:	(bad)  
   14001adbf:	out    0xde,al
   14001adc1:	(bad)  
   14001adc2:	mov    esp,edi
   14001adc4:	ffree  st(4)
   14001adc6:	mov    ah,dh
   14001adc8:	faddp  st(5),st
   14001adca:	(bad)  
   14001adcb:	out    0xdc,al
   14001adcd:	ret    
   14001adce:	mov    ebx,esp
   14001add0:	out    dx,eax
   14001add1:	fdiv   QWORD PTR [rbp+rbp*8-0xca6639]
   14001add8:	loope  0x14001ad96
   14001adda:	ja     0x14001adcd
   14001addc:	repnz fdiv QWORD PTR [rax+0x157caaf1]
   14001ade3:	(bad)  
   14001ade4:	mov    edx,0xacb9559b
   14001ade9:	xchg   ebp,eax
   14001adea:	imul   esi,DWORD PTR fs:[rdi],0x2e
   14001adee:	sbb    eax,DWORD PTR ss:[rdx]
   14001adf1:	(bad)  
   14001adf2:	add    edx,DWORD PTR [rdx]
   14001adf4:	rex.WRXB
   14001adf5:	rex.W push rdx
   14001adf7:	(bad)  
   14001adf8:	lods   al,BYTE PTR ds:[rsi]
   14001adf9:	(bad)  
   14001adfa:	scas   al,BYTE PTR es:[rdi]
   14001adfb:	add    DWORD PTR [rax],eax
	...
   14001ae15:	add    BYTE PTR [rax],al
   14001ae17:	add    dl,dl
   14001ae19:	ret    0x2690
   14001ae1c:	(bad)  
   14001ae1d:	movabs ds:0xaaccd751a3c7b352,eax
   14001ae26:	pop    rbp
   14001ae27:	(bad)  
   14001ae29:	mov    bl,0x6b
   14001ae2b:	loope  0x14001ae06
   14001ae2d:	mov    ebx,0xc6e2e779
   14001ae32:	mov    ecx,ebp
   14001ae34:	in     eax,0xcb
   14001ae36:	xchg   esp,eax
   14001ae37:	(bad)  
   14001ae38:	out    0xcd,al
   14001ae3a:	cwde   
   14001ae3b:	out    0xe4,al
   14001ae3d:	int    0x99
   14001ae3f:	(bad)  
   14001ae41:	int    0x9a
   14001ae43:	(bad)  
   14001ae44:	loop   0x14001ae12
   14001ae46:	cdq    
   14001ae47:	(bad)  
   14001ae48:	loop   0x14001ae16
   14001ae4a:	cdq    
   14001ae4b:	shl    edx,cl
   14001ae4d:	retf   
   14001ae4e:	cwde   
   14001ae4f:	(bad)  
   14001ae50:	loop   0x14001ae1c
   14001ae52:	xchg   edi,eax
   14001ae53:	(bad)  
   14001ae54:	loopne 0x14001ae1f
   14001ae56:	xchg   ebx,eax
   14001ae57:	(bad)  
   14001ae59:	(bad)  
   14001ae5a:	xchg   ecx,eax
   14001ae5b:	fucom  st(0)
   14001ae5d:	enter  0xe091,0xe1
   14001ae61:	leave  
   14001ae62:	xchg   edx,eax
   14001ae63:	in     al,0xe3
   14001ae65:	retf   0xe794
   14001ae68:	jrcxz  0x14001ae34
   14001ae6a:	xchg   esp,eax
   14001ae6b:	call   0x128947852
   14001ae70:	loopne 0x14001ae3a
   14001ae72:	nop
   14001ae73:	out    0xe0,al
   14001ae75:	(bad)  
   14001ae76:	(bad)  
   14001ae77:	in     al,0xdf
   14001ae79:	(bad)  
   14001ae7a:	mov    fs,ebx
   14001ae7c:	faddp  st(5),st
   14001ae7e:	mov    esp,fs
   14001ae80:	ffreep st(6)
   14001ae82:	(bad)  
   14001ae83:	in     eax,0xdf
   14001ae85:	(bad)
   14001ae88:	ffreep st(5)
   14001ae8a:	mov    ecx,gs
   14001ae8c:	fcmovnb st,st(1)
   14001ae8e:	xchg   cl,ch
   14001ae90:	out    dx,al
   14001ae91:	fdiv   QWORD PTR [rbx+0x3599c7f3]
   14001ae97:	(bad)  
   14001ae98:	fistp  QWORD PTR [rbx-0x240f168a]
   14001ae9e:	mov    cl,0xef
   14001aea0:	test   eax,0xb9ff157b
   14001aea5:	lea    ebp,[rdx]
   14001aea7:	idiv   DWORD PTR [rax+rdx*4-0x382009d2]
   14001aeae:	xchg   ebx,eax
   14001aeaf:	scas   eax,DWORD PTR es:[rdi]
   14001aeb0:	ja     0x14001af20
   14001aeb2:	push   0x1314133d
   14001aeb7:	(bad)  
   14001aeb8:	sub    al,0x33
   14001aeba:	(bad)  
   14001aebb:	add    eax,0x0
	...
   14001aed8:	shl    DWORD PTR [rbp-0x4227438f],cl
   14001aede:	jl     0x14001aebd
   14001aee0:	out    0xcf,eax
   14001aee2:	pushf  
   14001aee3:	retf   0xd1e8
   14001aee6:	movabs eax,ds:0xa2d0e5bea5d3e9c3
   14001aeef:	mov    edi,0xc99bcce3
   14001aef4:	jrcxz  0x14001aec3
   14001aef6:	(bad)  
   14001aef7:	shl    bl,1
   14001aef9:	int    0x99
   14001aefb:	xlat   BYTE PTR ds:[rbx]
   14001aefc:	jrcxz  0x14001aeca
   14001aefe:	xchg   edi,eax
   14001aeff:	(bad)  
   14001af01:	retf   0xe394
   14001af04:	loope  0x14001aecf
   14001af06:	xchg   edx,eax
   14001af07:	in     al,0xe8
   14001af09:	rcr    DWORD PTR [rbp-0x5e2a1419],1
   14001af0f:	jmp    0x129a58500
   14001af14:	out    dx,al
   14001af15:	xlat   BYTE PTR ds:[rbx]
   14001af16:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001af17:	call   0x125a78608
   14001af1c:	jmp    0x14001aef3
   14001af1e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001af1f:	loopne 0x14001af09
   14001af21:	rcr    BYTE PTR [rdi-0x67321a21],cl
   14001af27:	in     eax,0xe3
   14001af29:	retf   
   14001af2a:	xchg   ebp,eax
   14001af2b:	out    0xe4,al
   14001af2d:	int3   
   14001af2e:	xchg   edi,eax
   14001af2f:	out    0xe3,eax
   14001af31:	retf   0xeb93
   14001af34:	loop   0x14001aeff
   14001af36:	xchg   ecx,eax
   14001af37:	out    dx,al
   14001af38:	loop   0x14001af02
   14001af3a:	(bad)  
   14001af3b:	lock loop 0x14001af05
   14001af3e:	(bad)  
   14001af3f:	icebp  
   14001af40:	loopne 0x14001af09
   14001af42:	mov    ecx,?
   14001af44:	ffreep st(6)
   14001af46:	mov    ebp,edi
   14001af48:	faddp  st(5),st
   14001af4a:	mov    ebp,esi
   14001af4c:	fadd   st(3),st
   14001af4e:	xchg   ebx,ebp
   14001af50:	out    dx,al
   14001af51:	fdiv   QWORD PTR [rbx+0x399dcaf2]
   14001af57:	(bad)  
   14001af58:	fistp  QWORD PTR [rbx-0x240e1589]
   14001af5e:	mov    cl,0xf0
   14001af60:	scas   al,BYTE PTR es:[rdi]
   14001af61:	jg     0x14001af79
   14001af63:	dec    esi
   14001af65:	test   eax,0xdbece862
   14001af6a:	mov    ch,0xe6
   14001af6c:	mov    ebp,0xacec3594
   14001af71:	xchg   ebx,eax
   14001af72:	pop    rcx
   14001af73:	or     ecx,DWORD PTR gs:[rip+0x1313150c]        # 0x15314c486
   14001af7a:	and    BYTE PTR [rdi],cl
   14001af7c:	and    ebp,DWORD PTR cs:[rip+0x7]        # 0x14001af8a
	...
   14001af97:	add    al,dl
   14001af99:	mov    cl,0x69
   14001af9b:	jmp    rbx
   14001af9d:	int    0x98
   14001af9f:	mov    esp,0xa1b7def0
   14001afa4:	out    dx,al
   14001afa5:	fdiv   QWORD PTR [rbx-0x48211053]
   14001afab:	scas   al,BYTE PTR es:[rdi]
   14001afac:	out    0xce,al
   14001afae:	(bad)  
   14001afaf:	fcmovnu st,st(7)
   14001afb1:	(bad)  
   14001afb2:	mov    esi,ebp
   14001afb4:	(bad)  
   14001afb5:	shl    DWORD PTR [rdx-0x5c2b1623],cl
   14001afbb:	fld1   
   14001afbd:	shl    DWORD PTR [rsp+rdx*8-0x254f220e],cl
   14001afc4:	cli    
   14001afc5:	in     al,0xb8
   14001afc7:	in     eax,dx
   14001afc8:	(bad)  
   14001afc9:	(bad)  
   14001afca:	mov    dl,0xf6
   14001afcc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001afcd:	mov    bh,0xc6
   14001afcf:	cli    
   14001afd0:	lea    ebp,[rax-0x5d84001c]
   14001afd6:	idiv   edi
   14001afd8:	nop
   14001afd9:	stos   BYTE PTR es:[rdi],al
   14001afda:	out    0xff,al
   14001afdc:	movabs al,ds:0xf1fbc5cfd2fedab3
   14001afe5:	fnsave [rbx-0x602b1406]
   14001afeb:	repz in eax,0xcd
   14001afee:	xchg   ebp,eax
   14001afef:	in     al,dx
   14001aff0:	in     al,0xcc
   14001aff2:	xchg   ebp,eax
   14001aff3:	call   0x1279c7fdf
   14001aff8:	in     al,0xcc
   14001affa:	xchg   edi,eax
   14001affb:	out    0xe3,eax
   14001affd:	retf   
   14001affe:	xchg   esi,eax
   14001afff:	out    0xe3,al
   14001b001:	retf   0xe694
   14001b004:	loop   0x14001afd0
   14001b006:	xchg   edx,eax
   14001b007:	out    0xe2,al
   14001b009:	retf   0xe692
   14001b00c:	ffreep st(7)
   14001b00e:	mov    fs,ebp
   14001b010:	icebp  
   14001b011:	fidiv  WORD PTR [rsi+0x399dcaf0]
   14001b017:	(bad)  
   14001b018:	fistp  QWORD PTR [rbx-0x240e1589]
   14001b01e:	mov    cl,0xf0
   14001b020:	mov    ch,0x86
   14001b022:	sbb    al,0xff
   14001b024:	shr    DWORD PTR [rsi-0x22111a99],1
   14001b02a:	mov    ecx,0x2a90bee3
   14001b02f:	(bad)  
   14001b030:	mov    esi,0x26265a3
   14001b035:	or     eax,DWORD PTR [rsi+rdx*1]
   14001b038:	adc    DWORD PTR [rdi],ecx
   14001b03a:	adc    dl,BYTE PTR [rdx]
   14001b03c:	(bad)  
   14001b03d:	sbb    BYTE PTR [rcx],bl
   14001b03f:	or     al,0x29
   14001b041:	sub    DWORD PTR [rcx],ebp
   14001b043:	(bad)  
	...
   14001b058:	(bad)  
   14001b059:	mov    al,0x65
   14001b05b:	jmp    rdi
   14001b05d:	rcr    BYTE PTR [rdi-0x4b221046],1
   14001b063:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b064:	out    dx,al
   14001b065:	fdiv   QWORD PTR [rbx-0x49210f51]
   14001b06b:	mov    dl,0xe0
   14001b06d:	(bad)  
   14001b06e:	mov    ecx,gs
   14001b070:	loopne 0x14001b038
   14001b072:	mov    ebp,fs
   14001b074:	jmp    0x14001b04c
   14001b076:	stos   BYTE PTR es:[rdi],al
   14001b077:	int3   
   14001b078:	repnz fidiv WORD PTR [rdx-0x461a032d]
   14001b07f:	jmp    0x14001b044
   14001b081:	(bad)
   14001b084:	ins    DWORD PTR es:[rdi],dx
   14001b085:	(bad)  
   14001b086:	out    0xfc,eax
   14001b088:	rex.RB xor r9d,0xf5722ffd
   14001b08f:	jmp    QWORD PTR [rsi]
   14001b091:	push   0xfffffffffffffff4
   14001b093:	jmp    QWORD PTR [rcx+rbp*2]
   14001b096:	repnz jmp FWORD PTR [rdi]
   14001b099:	jo     0x14001b08f
   14001b09b:	push   QWORD PTR [rsi]
   14001b09d:	jne    0x14001b093
   14001b09f:	dec    DWORD PTR [rdx-0x7f]
   14001b0a2:	hlt    
   14001b0a3:	(bad)  
   14001b0a4:	addr32 xchg ebp,eax
   14001b0a6:	hlt    
   14001b0a7:	(bad)  
   14001b0a8:	sahf   
   14001b0a9:	mov    ah,0xdc
   14001b0ab:	(bad)  
   14001b0ac:	jrcxz  0x14001b080
   14001b0ae:	lods   eax,DWORD PTR ds:[rsi]
   14001b0af:	cli    
   14001b0b0:	(bad)  
   14001b0b1:	rcr    DWORD PTR [rbp-0x7239200f],cl
   14001b0b7:	out    0xe8,eax
   14001b0b9:	rcr    BYTE PTR [rsi-0x6531191d],1
   14001b0bf:	in     eax,0xe5
   14001b0c1:	int3   
   14001b0c2:	cwde   
   14001b0c3:	in     eax,0xe4
   14001b0c5:	int3   
   14001b0c6:	xchg   esi,eax
   14001b0c7:	in     eax,0xe3
   14001b0c9:	retf   
   14001b0ca:	xchg   ebp,eax
   14001b0cb:	in     eax,0xe0
   14001b0cd:	leave  
   14001b0ce:	xchg   ecx,eax
   14001b0cf:	in     al,0xf2
   14001b0d1:	loopne 0x14001b08b
   14001b0d3:	out    dx,al
   14001b0d4:	int    0x9e
   14001b0d6:	cmp    bh,bh
   14001b0d8:	fistp  QWORD PTR [rbx-0x240e1589]
   14001b0de:	mov    cl,0xf0
   14001b0e0:	mov    ecx,0xd2ff228a
   14001b0e5:	lods   eax,DWORD PTR ds:[rsi]
   14001b0e6:	in     ax,0xef
   14001b0e9:	fistp  QWORD PTR [rbx+0x3095c3e2]
   14001b0ef:	std    
   14001b0f0:	retf   0x6eaf
   14001b0f3:	pop    rsp
   14001b0f4:	or     BYTE PTR [rax],cl
   14001b0f6:	or     BYTE PTR [rsi],cl
   14001b0f8:	adc    DWORD PTR [rax],edx
   14001b0fa:	(bad)  
   14001b0fb:	movups XMMWORD PTR [rip+0x18190e22],xmm2        # 0x1581abf24
   14001b102:	(bad)  
   14001b103:	or     edi,DWORD PTR [rcx]
   14001b105:	xor    eax,0x5884042b
   14001b10a:	cmp    DWORD PTR [rcx],eax
	...
   14001b118:	(bad)  
   14001b119:	mov    al,0x65
   14001b11b:	jmp    rbp
   14001b11d:	iret   
   14001b11e:	sahf   
   14001b11f:	mov    ebp,0xa8b5ddef
   14001b124:	out    dx,eax
   14001b125:	fdiv   QWORD PTR [rbx-0x48210f4f]
   14001b12b:	mov    bl,0xdf
   14001b12d:	(bad)
   14001b130:	faddp  st(4),st
   14001b132:	mov    ecx,fs
   14001b134:	cmc    
   14001b135:	loopne 0x14001b0eb
   14001b137:	fldl2t 
   14001b139:	fnstenv [rax-0x30597f12]
   14001b13f:	clc    
   14001b140:	(bad)  
   14001b141:	jp     0x14001b133
   14001b143:	std    
   14001b144:	outs   dx,DWORD PTR es:[rsi]
   14001b146:	lock jmp QWORD PTR [rsi]
   14001b149:	outs   dx,BYTE PTR ds:[rsi]
   14001b14a:	icebp  
   14001b14b:	jmp    QWORD PTR [rsi]
   14001b14d:	ins    DWORD PTR es:[rdi],dx
   14001b14e:	icebp  
   14001b14f:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601a2c1
   14001b155:	ins    BYTE PTR es:[rdi],dx
   14001b156:	icebp  
   14001b157:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x16601a2c8
   14001b15d:	push   0xfffffffffffffff1
   14001b15f:	jmp    QWORD PTR [rdx+rbp*2]
   14001b162:	icebp  
   14001b163:	jmp    QWORD PTR [rip+0x3efff069]        # 0x17f01a1d2
   14001b169:	jnp    0x14001b15c
   14001b16b:	(bad)  
   14001b16c:	push   0xffffffffb8feed96
   14001b171:	mov    edi,0xd0e8fdc7
   14001b176:	fwait
   14001b177:	hlt    
   14001b178:	fadd   st(3),st
   14001b17a:	xchg   ecx,ebp
   14001b17c:	out    0xd1,eax
   14001b17e:	sahf   
   14001b17f:	jrcxz  0x14001b167
   14001b181:	(bad)  
   14001b182:	(bad)  
   14001b183:	in     al,0xe5
   14001b185:	int    0x99
   14001b187:	in     al,0xe4
   14001b189:	int3   
   14001b18a:	xchg   edi,eax
   14001b18b:	in     al,0xe1
   14001b18d:	retf   0xe394
   14001b190:	repnz loopne 0x14001b14c
   14001b193:	in     eax,dx
   14001b194:	int    0x9e
   14001b196:	cmp    bh,bh
   14001b198:	fistp  QWORD PTR [rbx-0x240e1589]
   14001b19e:	mov    cl,0xf0
   14001b1a0:	mov    esp,0xd4ff268e
   14001b1a5:	scas   al,BYTE PTR es:[rdi]
   14001b1a6:	in     ax,0xf2
   14001b1a9:	loope  0x14001b169
   14001b1ab:	loopne 0x14001b171
   14001b1ad:	xchg   edi,eax
   14001b1ae:	xor    bh,ch
   14001b1b0:	(bad)  
   14001b1b1:	mov    ch,0x71
   14001b1b3:	push   rdi
   14001b1b4:	sub    al,0xc
   14001b1b6:	adc    DWORD PTR [rip+0x81e0a1e],eax        # 0x1481fbbda
   14001b1bc:	and    DWORD PTR [rcx],ebx
   14001b1be:	and    DWORD PTR [rax],ecx
   14001b1c0:	(bad)  
   14001b1c1:	es (bad) 
   14001b1c3:	(bad)  
   14001b1c4:	sub    esi,DWORD PTR [rax]
   14001b1c6:	xor    al,0x7
   14001b1c8:	outs   dx,BYTE PTR ds:[rsi]
   14001b1c9:	xor    dh,BYTE PTR [rbx]
   14001b1cb:	add    eax,ebp
   14001b1cd:	lods   eax,DWORD PTR ds:[rsi]
   14001b1ce:	movabs eax,ds:0x1
   14001b1d7:	add    dh,cl
   14001b1d9:	mov    al,0x65
   14001b1db:	jmp    rbp
   14001b1dd:	iret   
   14001b1de:	sahf   
   14001b1df:	mov    ebp,0xaab6deef
   14001b1e4:	out    dx,eax
   14001b1e5:	fdiv   QWORD PTR [rbx-0x48200f4f]
   14001b1eb:	mov    ch,0xdb
   14001b1ed:	mov    esi,0xcfe9e683
   14001b1f2:	(bad)  
   14001b1f3:	(bad)  
   14001b1f4:	fmulp  st(7),st
   14001b1f6:	stos   DWORD PTR es:[rdi],eax
   14001b1f7:	repz push rdi
   14001b1f9:	nop
   14001b1fa:	loopne 0x14001b1f6
   14001b1fc:	xor    bh,BYTE PTR [rax-0xf]
   14001b1ff:	(bad)  
   14001b200:	(bad)  
   14001b201:	jno    0x14001b1f5
   14001b203:	jmp    QWORD PTR [rdi]
   14001b205:	jo     0x14001b1f9
   14001b207:	jmp    QWORD PTR [rsi]
   14001b209:	outs   dx,DWORD PTR ds:[rsi]
   14001b20a:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x16601a47f
   14001b211:	outs   dx,BYTE PTR ds:[rsi]
   14001b212:	icebp  
   14001b213:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x16601a386
   14001b219:	ins    DWORD PTR es:[rdi],dx
   14001b21a:	icebp  
   14001b21b:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x16601a38e
   14001b221:	ins    BYTE PTR es:[rdi],dx
   14001b222:	icebp  
   14001b223:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x16601a394
   14001b229:	imul   esi,ecx,0xffffffff
   14001b22c:	and    ebp,DWORD PTR [rax-0x10]
   14001b22f:	dec    DWORD PTR [rbx+rax*4-0xf]
   14001b233:	(bad)  
   14001b234:	popf   
   14001b235:	mov    dl,0xd4
   14001b237:	cld    
   14001b238:	in     al,0xcf
   14001b23a:	popf   
   14001b23b:	not    esp
   14001b23d:	mov    eax,0xd1e8ea77
   14001b242:	lahf   
   14001b243:	jrcxz  0x14001b22a
   14001b245:	(bad)  
   14001b246:	cdq    
   14001b247:	in     al,0xe5
   14001b249:	int    0x98
   14001b24b:	in     al,0xe1
   14001b24d:	retf   0xe394
   14001b250:	repnz loopne 0x14001b20d
   14001b253:	in     eax,dx
   14001b254:	int    0x9e
   14001b256:	cmp    bh,bh
   14001b258:	fistp  QWORD PTR [rbx-0x240e1589]
   14001b25e:	mov    cl,0xf0
   14001b260:	ret    
   14001b261:	xchg   esp,eax
   14001b262:	cs call rbp
   14001b265:	mov    al,0x67
   14001b267:	in     eax,0xf1
   14001b269:	loope  0x14001b228
   14001b26b:	loopne 0x14001b23b
   14001b26d:	lahf   
   14001b26e:	cmp    edi,edi
   14001b270:	(bad)  
   14001b271:	mov    eax,0x5774
	...
   14001b282:	add    BYTE PTR [rax],al
   14001b284:	rex.W outs dx,DWORD PTR ds:[rsi]
   14001b286:	and    eax,DWORD PTR [rbx]
   14001b288:	and    dh,BYTE PTR [rdi+0x77]
   14001b28b:	add    eax,DWORD PTR [rax]
	...
   14001b295:	add    BYTE PTR [rax],al
   14001b297:	add    dh,cl
   14001b299:	mov    al,0x65
   14001b29b:	jmp    rbp
   14001b29d:	iret   
   14001b29e:	sahf   
   14001b29f:	mov    ebp,0xaab6deef
   14001b2a4:	out    dx,eax
   14001b2a5:	fdiv   QWORD PTR [rdx+rsi*4-0x4c4a2312]
   14001b2ac:	jmp    0x14001b27f
   14001b2ae:	sahf   
   14001b2af:	out    0xe1,eax
   14001b2b1:	int3   
   14001b2b2:	movabs ds:0xf1752afbe18a4ff8,eax
   14001b2bb:	jmp    QWORD PTR [rbx]
   14001b2bd:	jo     0x14001b2b1
   14001b2bf:	call   QWORD PTR [rcx]
   14001b2c1:	gs icebp 
   14001b2c3:	call   QWORD PTR [rdx]
   14001b2c5:	fs icebp 
   14001b2c7:	call   QWORD PTR [rip+0x22fff266]        # 0x16301a533
   14001b2cd:	ins    BYTE PTR es:[rdi],dx
   14001b2ce:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x16601a544
   14001b2d5:	outs   dx,DWORD PTR ds:[rsi]
   14001b2d6:	bnd jmp QWORD PTR [rsi]
   14001b2d9:	outs   dx,DWORD PTR ds:[rsi]
   14001b2da:	icebp  
   14001b2db:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x16601a44f
   14001b2e1:	outs   dx,BYTE PTR ds:[rsi]
   14001b2e2:	bnd jmp QWORD PTR [rsi]
   14001b2e5:	ins    DWORD PTR es:[rdi],dx
   14001b2e6:	bnd jmp QWORD PTR [rip+0x25fff16c]        # 0x16601a459
   14001b2ed:	ins    BYTE PTR es:[rdi],dx
   14001b2ee:	icebp  
   14001b2ef:	jmp    QWORD PTR [rdi]
   14001b2f1:	ins    DWORD PTR es:[rdi],dx
   14001b2f2:	icebp  
   14001b2f3:	dec    DWORD PTR [rcx-0x7e]
   14001b2f6:	out    dx,eax
   14001b2f7:	(bad)  
   14001b2f8:	cdq    
   14001b2f9:	mov    bl,0xe5
   14001b2fb:	(bad)  
   14001b2fc:	jmp    0x118fa52d3
   14001b301:	mov    esi,0xd0e7e97f
   14001b306:	popf   
   14001b307:	jrcxz  0x14001b2ee
   14001b309:	int    0x98
   14001b30b:	in     al,0xe2
   14001b30d:	retf   
   14001b30e:	xchg   esp,eax
   14001b30f:	jrcxz  0x14001b303
   14001b311:	loopne 0x14001b2cd
   14001b313:	in     eax,dx
   14001b314:	iret   
   14001b315:	movabs eax,ds:0xdbf1ea77bbdfff3d
   14001b31e:	mov    cl,0xf0
   14001b320:	(bad)  
   14001b321:	cdq    
   14001b322:	xor    eax,0x67b0d5ff
   14001b327:	in     eax,0xf0
   14001b329:	loopne 0x14001b2e8
   14001b32b:	loopne 0x14001b2fb
   14001b32d:	lahf   
   14001b32e:	cmp    bh,bh
   14001b330:	fstp   TBYTE PTR [rbp+0x547d]
	...
   14001b356:	add    BYTE PTR [rax],al
   14001b358:	(bad)  
   14001b359:	mov    al,0x65
   14001b35b:	jmp    rsi
   14001b35d:	iret   
   14001b35e:	sahf   
   14001b35f:	mov    esi,0xaab6deef
   14001b364:	out    dx,al
   14001b365:	fdiv   QWORD PTR [rbx+rsi*4-0x4c472111]
   14001b36c:	lock fsubr QWORD PTR [rsi-0x2076ab16]
   14001b373:	std    
   14001b374:	(bad)  
   14001b375:	ja     0x14001b369
   14001b377:	jmp    QWORD PTR [rbx]
   14001b379:	jb     0x14001b36d
   14001b37b:	jmp    QWORD PTR [rbx+rsi*2]
   14001b37e:	icebp  
   14001b37f:	call   FWORD PTR [rcx-0x3b000943]
   14001b385:	(bad)  
   14001b387:	(bad)  
   14001b388:	js     0x14001b332
   14001b38a:	idiv   bh
   14001b38c:	sub    dh,BYTE PTR [rcx+rsi*8-0x1]
   14001b390:	and    ebp,DWORD PTR [rsi-0xe]
   14001b393:	jmp    QWORD PTR [rdi+rbp*2]
   14001b396:	bnd jmp QWORD PTR [rsi]
   14001b399:	jo     0x14001b38d
   14001b39b:	jmp    QWORD PTR [rsi]
   14001b39d:	jo     0x14001b391
   14001b39f:	jmp    QWORD PTR [rsi]
   14001b3a1:	outs   dx,DWORD PTR ds:[rsi]
   14001b3a2:	bnd jmp QWORD PTR [rsi]
   14001b3a5:	outs   dx,BYTE PTR ds:[rsi]
   14001b3a6:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x16601a61b
   14001b3ad:	ins    DWORD PTR es:[rdi],dx
   14001b3ae:	icebp  
   14001b3af:	jmp    QWORD PTR [rip+0x27fff16d]        # 0x16801a522
   14001b3b5:	ins    BYTE PTR es:[rdi],dx
   14001b3b6:	icebp  
   14001b3b7:	dec    DWORD PTR [rbx-0x79]
   14001b3ba:	icebp  
   14001b3bb:	(bad)  
   14001b3bc:	mov    cl,0xc1
   14001b3be:	(bad)  
   14001b3c0:	loopne 0x14001b388
   14001b3c2:	(bad)  
   14001b3c3:	repz ffreep st(6)
   14001b3c6:	mov    fs,esi
   14001b3c8:	out    0xcf,al
   14001b3ca:	fwait
   14001b3cb:	in     al,0xe2
   14001b3cd:	retf   
   14001b3ce:	xchg   esp,eax
   14001b3cf:	jrcxz  0x14001b3c4
   14001b3d1:	loopne 0x14001b38d
   14001b3d3:	in     eax,dx
   14001b3d4:	(bad)  
   14001b3d5:	movabs eax,ds:0xdbf1ea77bbdfff3c
   14001b3de:	mov    cl,0xf0
   14001b3e0:	(bad)  
   14001b3e1:	cdq    
   14001b3e2:	xor    eax,0x67afd4ff
   14001b3e7:	in     eax,0xf1
   14001b3e9:	loope  0x14001b3a8
   14001b3eb:	loopne 0x14001b3bc
   14001b3ed:	movabs eax,ds:0x537fbedbff3c
	...
   14001b416:	add    BYTE PTR [rax],al
   14001b418:	(bad)  
   14001b419:	mov    al,0x65
   14001b41b:	jmp    rsi
   14001b41d:	iret   
   14001b41e:	sahf   
   14001b41f:	mov    esi,0xabb6def0
   14001b424:	in     eax,dx
   14001b425:	fdiv   QWORD PTR [rbp-0x441a0654]
   14001b42b:	rcr    BYTE PTR [rbp+0x23f2c1b3],cl
   14001b431:	jne    0x14001b427
   14001b433:	jmp    FWORD PTR [rax]
   14001b435:	js     0x14001b42a
   14001b437:	call   QWORD PTR [rbx]
   14001b439:	push   0xfffffffffffffff2
   14001b43b:	push   QWORD PTR [rbx-0x59]
   14001b43e:	idiv   bh
   14001b440:	(bad)  
   14001b441:	(bad)  
   14001b442:	(bad)  
   14001b443:	(bad)  
   14001b444:	(bad)  
   14001b445:	(bad)  
   14001b446:	(bad)  
   14001b447:	(bad)  
   14001b448:	(bad)  
   14001b449:	(bad)  
   14001b44a:	(bad)  
   14001b44b:	call   rdx
   14001b44d:	jrcxz  0x14001b449
   14001b44f:	dec    DWORD PTR [rbp-0x73]
   14001b452:	repz jmp QWORD PTR [rip+0x23fff272]        # 0x16401a6cb
   14001b459:	jo     0x14001b44d
   14001b45b:	jmp    QWORD PTR [rbx]
   14001b45d:	jno    0x14001b451
   14001b45f:	jmp    QWORD PTR [rsi]
   14001b461:	jno    0x14001b455
   14001b463:	jmp    QWORD PTR [rsi]
   14001b465:	jo     0x14001b459
   14001b467:	jmp    QWORD PTR [rsi]
   14001b469:	jo     0x14001b45d
   14001b46b:	jmp    QWORD PTR [rsi]
   14001b46d:	outs   dx,DWORD PTR ds:[rsi]
   14001b46e:	bnd jmp QWORD PTR [rsi]
   14001b471:	outs   dx,DWORD PTR ds:[rsi]
   14001b472:	bnd jmp QWORD PTR [rip+0x26fff26e]        # 0x16701a6e7
   14001b479:	ins    DWORD PTR es:[rdi],dx
   14001b47a:	icebp  
   14001b47b:	call   FWORD PTR [rcx-0x71]
   14001b47e:	repz dec esi
   14001b481:	retf   0xfbbc
   14001b484:	fnstcw WORD PTR [rbp-0x30191181]
   14001b48a:	fwait
   14001b48b:	jrcxz  0x14001b470
   14001b48d:	int3   
   14001b48e:	xchg   edi,eax
   14001b48f:	jrcxz  0x14001b483
   14001b491:	loopne 0x14001b44d
   14001b493:	in     eax,dx
   14001b494:	(bad)  
   14001b495:	movabs eax,ds:0xdbf1ea77bbdfff3c
   14001b49e:	mov    al,0xf0
   14001b4a0:	(bad)  
   14001b4a1:	cdq    
   14001b4a2:	xor    eax,0x67b0d4ff
   14001b4a7:	in     eax,0xf0
   14001b4a9:	loope  0x14001b468
   14001b4ab:	loopne 0x14001b47c
   14001b4ad:	movabs eax,ds:0x5886c2ddff3c
	...
   14001b4d6:	add    BYTE PTR [rax],al
   14001b4d8:	(bad)  
   14001b4d9:	mov    al,0x65
   14001b4db:	jmp    rsi
   14001b4dd:	iret   
   14001b4de:	sahf   
   14001b4df:	mov    esi,0xa9b5ddef
   14001b4e4:	icebp  
   14001b4e5:	loopne 0x14001b49f
   14001b4e7:	mov    ch,0xe6
   14001b4e9:	xlat   BYTE PTR ds:[rbx]
   14001b4ea:	mov    cl,0xee
   14001b4ec:	cs xor ecx,0xf37927fb
   14001b4f3:	jmp    FWORD PTR [rax]
   14001b4f5:	js     0x14001b4ea
   14001b4f7:	call   QWORD PTR [rcx]
   14001b4f9:	push   0xfffffffffffffff2
   14001b4fb:	call   FWORD PTR [rdx-0x10940]
   14001b501:	(bad)  
   14001b502:	(bad)  
   14001b503:	(bad)  
   14001b504:	(bad)  
   14001b505:	(bad)  
   14001b506:	(bad)  
   14001b507:	(bad)  
   14001b508:	(bad)  
   14001b509:	(bad)  
   14001b50a:	(bad)  
   14001b50b:	(bad)  
   14001b50c:	(bad)  
   14001b50d:	(bad)  
   14001b50e:	(bad)  
   14001b50f:	(bad)  
   14001b510:	stc    
   14001b511:	sti    
   14001b512:	(bad)  
   14001b513:	call   FWORD PTR [rdx+0x33fff7bf]
   14001b519:	jge    0x14001b50d
   14001b51b:	jmp    QWORD PTR [rip+0x23fff372]        # 0x16401a893
   14001b521:	jo     0x14001b515
   14001b523:	jmp    QWORD PTR [rbx]
   14001b525:	jno    0x14001b519
   14001b527:	jmp    QWORD PTR [rsi]
   14001b529:	jb     0x14001b51d
   14001b52b:	jmp    QWORD PTR [rsi]
   14001b52d:	jno    0x14001b521
   14001b52f:	jmp    QWORD PTR [rsi]
   14001b531:	jno    0x14001b525
   14001b533:	jmp    QWORD PTR [rsi]
   14001b535:	jo     0x14001b529
   14001b537:	jmp    QWORD PTR [rsi]
   14001b539:	jo     0x14001b52d
   14001b53b:	jmp    FWORD PTR [rdi]
   14001b53d:	jne    0x14001b52e
   14001b53f:	dec    DWORD PTR [rbp-0x27021550]
   14001b545:	ret    
   14001b546:	xchg   esp,eax
   14001b547:	hlt    
   14001b548:	fnstcw WORD PTR [rdi-0x311a177e]
   14001b54e:	(bad)  
   14001b54f:	loop   0x14001b543
   14001b551:	loopne 0x14001b50d
   14001b553:	in     eax,dx
   14001b554:	(bad)  
   14001b555:	movabs eax,ds:0xdbf0ec78bce1ff3c
   14001b55e:	mov    cl,0xef
   14001b560:	(bad)  
   14001b561:	cdq    
   14001b562:	xor    eax,0x67b0d4ff
   14001b567:	in     eax,0xf0
   14001b569:	loope  0x14001b528
   14001b56b:	loopne 0x14001b53c
   14001b56d:	movabs eax,ds:0x5886c2ddff3c
	...
   14001b596:	add    BYTE PTR [rax],al
   14001b598:	iret   
   14001b599:	mov    al,0x67
   14001b59b:	(bad)  
   14001b59c:	call   0x130c15b74
   14001b5a1:	fidivr WORD PTR [rcx-0x4a1e0a5c]
   14001b5a7:	int3   
   14001b5a8:	and    DWORD PTR [rbx+0x7923f9ce],0xfffffff4
   14001b5af:	jmp    FWORD PTR [rax]
   14001b5b1:	jnp    0x14001b5a6
   14001b5b3:	jmp    FWORD PTR [rax]
   14001b5b5:	jp     0x14001b5aa
   14001b5b7:	call   QWORD PTR [rax]
   14001b5b9:	ins    DWORD PTR es:[rdi],dx
   14001b5ba:	bnd jmp QWORD PTR [rdx-0x10a3a]
   14001b5c1:	(bad)  
   14001b5c2:	(bad)  
   14001b5c3:	(bad)  
   14001b5c4:	(bad)  
   14001b5c5:	(bad)  
   14001b5c6:	(bad)  
   14001b5c7:	(bad)  
   14001b5c8:	(bad)  
   14001b5c9:	(bad)  
   14001b5ca:	(bad)  
   14001b5cb:	(bad)  
   14001b5cc:	(bad)  
   14001b5cd:	(bad)  
   14001b5ce:	(bad)  
   14001b5cf:	(bad)  
   14001b5d0:	(bad)  
   14001b5d1:	(bad)  
   14001b5d2:	(bad)  
   14001b5d3:	(bad)  
   14001b5d4:	(bad)  
   14001b5d5:	(bad)  
   14001b5d6:	(bad)  
   14001b5d7:	(bad)  
   14001b5d8:	fsub   st,st(7)
   14001b5da:	sti    
   14001b5db:	jmp    FWORD PTR [rdx-0x60]
   14001b5de:	hlt    
   14001b5df:	jmp    FWORD PTR [rip+0x28fff378]        # 0x16901a95d
   14001b5e5:	jne    0x14001b5da
   14001b5e7:	jmp    QWORD PTR [rdx]
   14001b5e9:	jb     0x14001b5dd
   14001b5eb:	jmp    QWORD PTR [rsi]
   14001b5ed:	jae    0x14001b5e1
   14001b5ef:	jmp    QWORD PTR [rsi]
   14001b5f1:	jae    0x14001b5e5
   14001b5f3:	jmp    QWORD PTR [rsi]
   14001b5f5:	jb     0x14001b5e9
   14001b5f7:	jmp    QWORD PTR [rsi]
   14001b5f9:	jno    0x14001b5ed
   14001b5fb:	jmp    FWORD PTR [rdx]
   14001b5fd:	je     0x14001b5f0
   14001b5ff:	call   QWORD PTR [rdi-0x74]
   14001b602:	out    0xfe,al
   14001b604:	mov    bl,0xb8
   14001b606:	mov    ch,0xf9
   14001b608:	(bad)  
   14001b609:	mov    ecx,0xcee6ee76
   14001b60e:	(bad)  
   14001b60f:	loop   0x14001b603
   14001b611:	loopne 0x14001b5cd
   14001b613:	in     eax,dx
   14001b614:	(bad)  
   14001b615:	movabs eax,ds:0xdaeee874badeff3c
   14001b61e:	mov    al,0xed
   14001b620:	(bad)  
   14001b621:	cdq    
   14001b622:	xor    eax,0x67b0d4ff
   14001b627:	in     eax,0xf0
   14001b629:	loope  0x14001b5e8
   14001b62b:	loopne 0x14001b5fc
   14001b62d:	movabs eax,ds:0x5886c2ddff3c
	...
   14001b656:	add    BYTE PTR [rax],al
   14001b658:	(bad)  
   14001b659:	mov    al,0x65
   14001b65b:	(bad)  
   14001b65c:	call   0x131c15e35
   14001b661:	loop   0x14001b625
   14001b663:	movabs ds:0xffff771deab4def1,al
   14001b66c:	(bad)  
   14001b66d:	jge    0x14001b662
   14001b66f:	jmp    FWORD PTR [rax]
   14001b671:	jge    0x14001b667
   14001b673:	jmp    FWORD PTR [rax]
   14001b675:	jl     0x14001b66a
   14001b677:	call   QWORD PTR [rcx]
   14001b679:	ins    DWORD PTR es:[rdi],dx
   14001b67a:	bnd jmp QWORD PTR [rax-0x10a3a]
   14001b681:	(bad)  
   14001b682:	(bad)  
   14001b683:	(bad)  
   14001b684:	(bad)  
   14001b685:	(bad)  
   14001b686:	(bad)  
   14001b687:	(bad)  
   14001b688:	(bad)  
   14001b689:	(bad)  
   14001b68a:	(bad)  
   14001b68b:	(bad)  
   14001b68c:	(bad)  
   14001b68d:	(bad)  
   14001b68e:	(bad)  
   14001b68f:	(bad)  
   14001b690:	(bad)  
   14001b691:	(bad)  
   14001b692:	(bad)  
   14001b693:	(bad)  
   14001b694:	(bad)  
   14001b695:	(bad)  
   14001b696:	(bad)  
   14001b697:	(bad)  
   14001b698:	(bad)  
   14001b699:	(bad)  
   14001b69a:	(bad)  
   14001b69b:	(bad)  
   14001b69c:	(bad)  
   14001b69d:	(bad)  
   14001b69e:	(bad)  
   14001b69f:	call   FWORD PTR [rdi+0x44fff8c3]
   14001b6a5:	mov    ebx,esi
   14001b6a7:	jmp    FWORD PTR [rdx]
   14001b6a9:	js     0x14001b69e
   14001b6ab:	jmp    QWORD PTR [rsi]
   14001b6ad:	je     0x14001b6a1
   14001b6af:	jmp    QWORD PTR [rdx+rsi*2]
   14001b6b2:	bnd jmp QWORD PTR [rsi]
   14001b6b5:	je     0x14001b6a9
   14001b6b7:	jmp    QWORD PTR [rsi]
   14001b6b9:	jae    0x14001b6ad
   14001b6bb:	jmp    FWORD PTR [rcx]
   14001b6bd:	je     0x14001b6b0
   14001b6bf:	(bad)  
   14001b6c0:	cmp    BYTE PTR [rcx+rbp*8-0x2],bh
   14001b6c4:	popf   
   14001b6c5:	mov    ecx,0xbcd5fcdf
   14001b6ca:	xor    ecx,0xffffffe0
   14001b6cd:	enter  0xe38f,0xf3
   14001b6d1:	loope  0x14001b68e
   14001b6d3:	in     eax,dx
   14001b6d4:	(bad)  
   14001b6d5:	movabs eax,ds:0xd9eee773b9ddff3c
   14001b6de:	mov    al,0xee
   14001b6e0:	(bad)  
   14001b6e1:	cdq    
   14001b6e2:	xor    eax,0x67b0d4ff
   14001b6e7:	in     eax,0xf0
   14001b6e9:	loope  0x14001b6a8
   14001b6eb:	loopne 0x14001b6bc
   14001b6ed:	movabs eax,ds:0x5886c2ddff3c
	...
   14001b716:	add    BYTE PTR [rax],al
   14001b718:	(bad)  
   14001b719:	mov    al,0x65
   14001b71b:	(bad)  
   14001b71c:	call   0x134bd60f5
   14001b721:	jrcxz  0x14001b6e5
   14001b723:	scas   eax,DWORD PTR es:[rdi]
   14001b724:	retf   
   14001b725:	(bad)  
   14001b726:	mov    ebp,0xfc7a18ff
   14001b72b:	jmp    FWORD PTR [rcx]
   14001b72d:	jg     0x14001b724
   14001b72f:	jmp    QWORD PTR [rdi]
   14001b731:	jle    0x14001b728
   14001b733:	jmp    FWORD PTR [rax]
   14001b735:	jg     0x14001b72b
   14001b737:	call   QWORD PTR [rcx]
   14001b739:	outs   dx,DWORD PTR ds:[rsi]
   14001b73a:	hlt    
   14001b73b:	jmp    QWORD PTR [rbx-0x10938]
   14001b741:	(bad)  
   14001b742:	(bad)  
   14001b743:	(bad)  
   14001b744:	(bad)  
   14001b745:	(bad)  
   14001b746:	(bad)  
   14001b747:	(bad)  
   14001b748:	(bad)  
   14001b749:	(bad)  
   14001b74a:	(bad)  
   14001b74b:	(bad)  
   14001b74c:	(bad)  
   14001b74d:	(bad)  
   14001b74e:	(bad)  
   14001b74f:	(bad)  
   14001b750:	(bad)  
   14001b751:	(bad)  
   14001b752:	(bad)  
   14001b753:	(bad)  
   14001b754:	(bad)  
   14001b755:	(bad)  
   14001b756:	(bad)  
   14001b757:	(bad)  
   14001b758:	(bad)  
   14001b759:	(bad)  
   14001b75a:	(bad)  
   14001b75b:	(bad)  
   14001b75c:	(bad)  
   14001b75d:	(bad)  
   14001b75e:	(bad)  
   14001b75f:	(bad)  
   14001b760:	(bad)  
   14001b761:	(bad)  
   14001b762:	(bad)  
   14001b763:	push   rcx
   14001b765:	idiv   ah
   14001b767:	jmp    FWORD PTR [rsi-0x5c]
   14001b76a:	hlt    
   14001b76b:	push   QWORD PTR [rcx]
   14001b76d:	jle    0x14001b763
   14001b76f:	jmp    FWORD PTR [rcx+rdi*2]
   14001b772:	repz jmp QWORD PTR [rbx]
   14001b775:	je     0x14001b769
   14001b777:	jmp    QWORD PTR [rsp+rsi*2]
   14001b77a:	bnd jmp QWORD PTR [rdi]
   14001b77d:	jne    0x14001b771
   14001b77f:	jmp    FWORD PTR [rsi]
   14001b781:	js     0x14001b774
   14001b783:	push   QWORD PTR [rsi-0x5e]
   14001b786:	out    0xfe,al
   14001b788:	int3   
   14001b789:	mov    esp,0xbad5f695
   14001b78e:	jns    0x14001b777
   14001b790:	hlt    
   14001b791:	loop   0x14001b74f
   14001b793:	in     eax,dx
   14001b794:	(bad)  
   14001b795:	movabs eax,ds:0xdaeee773b9ddff3c
   14001b79e:	mov    al,0xee
   14001b7a0:	(bad)  
   14001b7a1:	cdq    
   14001b7a2:	xor    eax,0x67b0d4ff
   14001b7a7:	in     eax,0xf0
   14001b7a9:	loope  0x14001b768
   14001b7ab:	loopne 0x14001b77c
   14001b7ad:	movabs eax,ds:0x5886c2ddff3c
	...
   14001b7d6:	add    BYTE PTR [rax],al
   14001b7d8:	(bad)  
   14001b7d9:	mov    al,0x65
   14001b7db:	(bad)  
   14001b7dc:	jmp    0x135ba65b7
   14001b7e1:	in     al,0xbf
   14001b7e3:	ror    BYTE PTR [rsi+riz*4+0x7e1fffd6],0xf9
   14001b7eb:	jmp    FWORD PTR [rax]
   14001b7ed:	xor    ch,0xff
   14001b7f0:	sub    BYTE PTR [rax+0x7f29fff5],al
   14001b7f6:	cmc    
   14001b7f7:	call   QWORD PTR [rcx]
   14001b7f9:	jno    0x14001b7ef
   14001b7fb:	jmp    QWORD PTR [rbp-0x10936]
   14001b801:	(bad)  
   14001b802:	(bad)  
   14001b803:	(bad)  
   14001b804:	(bad)  
   14001b805:	(bad)  
   14001b806:	(bad)  
   14001b807:	(bad)  
   14001b808:	(bad)  
   14001b809:	(bad)  
   14001b80a:	(bad)  
   14001b80b:	(bad)  
   14001b80c:	(bad)  
   14001b80d:	(bad)  
   14001b80e:	(bad)  
   14001b80f:	(bad)  
   14001b810:	(bad)  
   14001b811:	(bad)  
   14001b812:	(bad)  
   14001b813:	(bad)  
   14001b814:	(bad)  
   14001b815:	(bad)  
   14001b816:	(bad)  
   14001b817:	(bad)  
   14001b818:	(bad)  
   14001b819:	(bad)  
   14001b81a:	(bad)  
   14001b81b:	(bad)  
   14001b81c:	(bad)  
   14001b81d:	(bad)  
   14001b81e:	(bad)  
   14001b81f:	(bad)  
   14001b820:	(bad)  
   14001b821:	(bad)  
   14001b822:	(bad)  
   14001b823:	(bad)  
   14001b824:	(bad)  
   14001b825:	(bad)  
   14001b826:	(bad)  
   14001b827:	(bad)  
   14001b828:	(bad)  
   14001b829:	(bad)  
   14001b82a:	(bad)  
   14001b82b:	push   QWORD PTR [rsi+0x51fff9d1]
   14001b831:	xchg   ecx,eax
   14001b832:	repz push QWORD PTR [rbx]
   14001b835:	jg     0x14001b82b
   14001b837:	jmp    FWORD PTR [rdx+rdi*2]
   14001b83a:	repz jmp QWORD PTR [rip+0x23fff274]        # 0x16401aab5
   14001b841:	jno    0x14001b834
   14001b843:	dec    DWORD PTR [rsi-0x6d]
   14001b846:	(bad)  
   14001b847:	dec    edx
   14001b849:	(bad)  
   14001b84a:	scas   eax,DWORD PTR es:[rdi]
   14001b84b:	stc    
   14001b84c:	shl    DWORD PTR [rbp-0x1d0b1591],1
   14001b852:	mov    esp,0x3ca1ceed
   14001b857:	(bad)  
   14001b858:	fnstsw WORD PTR [rdx-0x2611188c]
   14001b85e:	mov    al,0xee
   14001b860:	(bad)  
   14001b861:	cdq    
   14001b862:	xor    eax,0x67b0d4ff
   14001b867:	in     eax,0xf0
   14001b869:	loope  0x14001b828
   14001b86b:	loopne 0x14001b83c
   14001b86d:	movabs eax,ds:0x5988c3deff3c
	...
   14001b896:	add    BYTE PTR [rax],al
   14001b898:	(bad)  
   14001b899:	mov    al,0x65
   14001b89b:	(bad)  
   14001b89c:	(bad)  
   14001b89d:	xlat   BYTE PTR ds:[rbx]
   14001b89e:	scas   eax,DWORD PTR es:[rdi]
   14001b89f:	mov    ch,0xf6
   14001b8a1:	in     al,0xbf
   14001b8a3:	rcl    BYTE PTR [rcx-0x72],1
   14001b8a6:	out    dx,eax
   14001b8a7:	jmp    QWORD PTR [rdx+rax*4]
   14001b8aa:	idiv   bh
   14001b8ac:	sub    BYTE PTR [rdx-0x7dd7000b],al
   14001b8b2:	cmc    
   14001b8b3:	jmp    FWORD PTR [rcx]
   14001b8b5:	xor    ebp,0xf47211ff
   14001b8bb:	jmp    QWORD PTR [rsi-0x10835]
   14001b8c1:	(bad)  
   14001b8c2:	(bad)  
   14001b8c3:	(bad)  
   14001b8c4:	(bad)  
   14001b8c5:	(bad)  
   14001b8c6:	(bad)  
   14001b8c7:	(bad)  
   14001b8c8:	(bad)  
   14001b8c9:	(bad)  
   14001b8ca:	(bad)  
   14001b8cb:	(bad)  
   14001b8cc:	(bad)  
   14001b8cd:	(bad)  
   14001b8ce:	(bad)  
   14001b8cf:	(bad)  
   14001b8d0:	(bad)  
   14001b8d1:	(bad)  
   14001b8d2:	(bad)  
   14001b8d3:	(bad)  
   14001b8d4:	(bad)  
   14001b8d5:	(bad)  
   14001b8d6:	(bad)  
   14001b8d7:	(bad)  
   14001b8d8:	(bad)  
   14001b8d9:	(bad)  
   14001b8da:	(bad)  
   14001b8db:	(bad)  
   14001b8dc:	(bad)  
   14001b8dd:	(bad)  
   14001b8de:	(bad)  
   14001b8df:	(bad)  
   14001b8e0:	(bad)  
   14001b8e1:	(bad)  
   14001b8e2:	(bad)  
   14001b8e3:	(bad)  
   14001b8e4:	(bad)  
   14001b8e5:	(bad)  
   14001b8e6:	(bad)  
   14001b8e7:	(bad)  
   14001b8e8:	(bad)  
   14001b8e9:	(bad)  
   14001b8ea:	(bad)  
   14001b8eb:	(bad)  
   14001b8ec:	(bad)  
   14001b8ed:	(bad)  
   14001b8ee:	(bad)  
   14001b8ef:	push   rsp
   14001b8f1:	clc    
   14001b8f2:	std    
   14001b8f3:	jmp    FWORD PTR [rbx-0x5d]
   14001b8f6:	idiv   bh
   14001b8f8:	cmp    eax,DWORD PTR [rbp+0x7826fff4]
   14001b8fe:	repz jmp QWORD PTR [rsi*2-0x7ccf000e]
   14001b906:	(bad)  
   14001b907:	(bad)  
   14001b908:	mov    edi,0xd0fbc3c4
   14001b90d:	mov    ch,0x6f
   14001b90f:	in     al,dx
   14001b910:	hlt    
   14001b911:	loop   0x14001b8cf
   14001b913:	in     eax,dx
   14001b914:	(bad)  
   14001b915:	movabs eax,ds:0xd9eee774baddff3c
   14001b91e:	mov    al,0xee
   14001b920:	(bad)  
   14001b921:	cdq    
   14001b922:	xor    eax,0x67b0d4ff
   14001b927:	in     eax,0xf0
   14001b929:	loope  0x14001b8e8
   14001b92b:	loopne 0x14001b8fc
   14001b92d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001b956:	add    BYTE PTR [rax],al
   14001b958:	(bad)  
   14001b959:	mov    al,0x65
   14001b95b:	(bad)  
   14001b95c:	(bad)  
   14001b95d:	fdiv   DWORD PTR [rax-0x421d0b4c]
   14001b963:	fisubr DWORD PTR [rcx]
   14001b965:	cmp    edi,0xf68427ff
   14001b96b:	jmp    FWORD PTR [rcx]
   14001b96d:	xor    ebp,0xffffffff
   14001b970:	sub    DWORD PTR [rbx-0x7bd5000b],eax
   14001b976:	cmc    
   14001b977:	call   QWORD PTR [rdx]
   14001b979:	jne    0x14001b96f
   14001b97b:	jmp    QWORD PTR [rsi-0x10835]
   14001b981:	(bad)  
   14001b982:	(bad)  
   14001b983:	(bad)  
   14001b984:	(bad)  
   14001b985:	(bad)  
   14001b986:	(bad)  
   14001b987:	(bad)  
   14001b988:	(bad)  
   14001b989:	(bad)  
   14001b98a:	(bad)  
   14001b98b:	(bad)  
   14001b98c:	(bad)  
   14001b98d:	(bad)  
   14001b98e:	(bad)  
   14001b98f:	(bad)  
   14001b990:	(bad)  
   14001b991:	(bad)  
   14001b992:	(bad)  
   14001b993:	(bad)  
   14001b994:	(bad)  
   14001b995:	(bad)  
   14001b996:	(bad)  
   14001b997:	(bad)  
   14001b998:	(bad)  
   14001b999:	(bad)  
   14001b99a:	(bad)  
   14001b99b:	(bad)  
   14001b99c:	(bad)  
   14001b99d:	(bad)  
   14001b99e:	(bad)  
   14001b99f:	(bad)  
   14001b9a0:	(bad)  
   14001b9a1:	(bad)  
   14001b9a2:	(bad)  
   14001b9a3:	(bad)  
   14001b9a4:	(bad)  
   14001b9a5:	(bad)  
   14001b9a6:	(bad)  
   14001b9a7:	(bad)  
   14001b9a8:	(bad)  
   14001b9a9:	(bad)  
   14001b9aa:	(bad)  
   14001b9ab:	(bad)  
   14001b9ac:	(bad)  
   14001b9ad:	(bad)  
   14001b9ae:	(bad)  
   14001b9af:	(bad)  
   14001b9b0:	(bad)  
   14001b9b1:	(bad)  
   14001b9b2:	(bad)  
   14001b9b3:	(bad)  
   14001b9b4:	(bad)  
   14001b9b5:	(bad)  
   14001b9b6:	std    
   14001b9b7:	call   QWORD PTR [rdi-0x68]
   14001b9ba:	repnz jmp FWORD PTR [rsp+rdi*2]
   14001b9be:	repz jmp QWORD PTR [rdi+rsi*2]
   14001b9c2:	bnd jmp QWORD PTR [rsi]
   14001b9c5:	jg     0x14001b9c6
   14001b9c7:	push   QWORD PTR [rbp-0x31043440]
   14001b9cd:	mov    bl,0x68
   14001b9cf:	in     eax,dx
   14001b9d0:	repz loope 0x14001b98e
   14001b9d3:	in     eax,dx
   14001b9d4:	(bad)  
   14001b9d5:	movabs eax,ds:0xdaeee774baddff3c
   14001b9de:	mov    al,0xee
   14001b9e0:	(bad)  
   14001b9e1:	cdq    
   14001b9e2:	xor    eax,0x67b0d4ff
   14001b9e7:	in     eax,0xf0
   14001b9e9:	loope  0x14001b9a8
   14001b9eb:	loopne 0x14001b9bc
   14001b9ed:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001ba16:	add    BYTE PTR [rax],al
   14001ba18:	(bad)  
   14001ba19:	mov    al,0x65
   14001ba1b:	(bad)  
   14001ba1c:	jmp    0x14001b9f8
   14001ba1e:	mov    bl,0xb3
   14001ba20:	icebp  
   14001ba21:	fbstp  TBYTE PTR [rdi-0x7cd625]
   14001ba27:	jmp    FWORD PTR [rax]
   14001ba29:	xchg   dh,dh
   14001ba2b:	jmp    FWORD PTR [rcx]
   14001ba2d:	test   esi,esi
   14001ba2f:	jmp    FWORD PTR [rcx]
   14001ba31:	test   ch,dh
   14001ba33:	jmp    FWORD PTR [rcx]
   14001ba35:	test   ch,dh
   14001ba37:	call   QWORD PTR [rdx]
   14001ba39:	ja     0x14001ba30
   14001ba3b:	jmp    QWORD PTR [rdi-0x534]
   14001ba41:	(bad)  
   14001ba42:	(bad)  
   14001ba43:	(bad)  
   14001ba44:	(bad)  
   14001ba45:	(bad)  
   14001ba46:	(bad)  
   14001ba47:	(bad)  
   14001ba48:	(bad)  
   14001ba49:	(bad)  
   14001ba4a:	(bad)  
   14001ba4b:	(bad)  
   14001ba4c:	(bad)  
   14001ba4d:	(bad)  
   14001ba4e:	(bad)  
   14001ba4f:	(bad)  
   14001ba50:	(bad)  
   14001ba51:	(bad)  
   14001ba52:	(bad)  
   14001ba53:	(bad)  
   14001ba54:	(bad)  
   14001ba55:	(bad)  
   14001ba56:	(bad)  
   14001ba57:	(bad)  
   14001ba58:	(bad)  
   14001ba59:	(bad)  
   14001ba5a:	(bad)  
   14001ba5b:	(bad)  
   14001ba5c:	(bad)  
   14001ba5d:	(bad)  
   14001ba5e:	(bad)  
   14001ba5f:	(bad)  
   14001ba60:	(bad)  
   14001ba61:	(bad)  
   14001ba62:	(bad)  
   14001ba63:	(bad)  
   14001ba64:	(bad)  
   14001ba65:	(bad)  
   14001ba66:	(bad)  
   14001ba67:	(bad)  
   14001ba68:	(bad)  
   14001ba69:	(bad)  
   14001ba6a:	(bad)  
   14001ba6b:	(bad)  
   14001ba6c:	(bad)  
   14001ba6d:	(bad)  
   14001ba6e:	(bad)  
   14001ba6f:	(bad)  
   14001ba70:	(bad)  
   14001ba71:	(bad)  
   14001ba72:	(bad)  
   14001ba73:	(bad)  
   14001ba74:	(bad)  
   14001ba75:	(bad)  
   14001ba76:	(bad)  
   14001ba77:	jmp    FWORD PTR [rsi-0x5a]
   14001ba7a:	hlt    
   14001ba7b:	jmp    FWORD PTR [rdi]
   14001ba7d:	xor    ah,0xff
   14001ba80:	and    al,0x78
   14001ba82:	icebp  
   14001ba83:	jmp    QWORD PTR [rip+0xffffffffb2ffff7e]        # 0xf301ba07
   14001ba89:	ror    esp,0xfc
   14001ba8c:	(bad)  
   14001ba8d:	mov    bl,0x68
   14001ba8f:	in     eax,dx
   14001ba90:	repz loope 0x14001ba4e
   14001ba93:	in     eax,dx
   14001ba94:	(bad)  
   14001ba95:	movabs eax,ds:0xdaeee774baddff3c
   14001ba9e:	mov    al,0xee
   14001baa0:	(bad)  
   14001baa1:	cdq    
   14001baa2:	xor    eax,0x67b0d4ff
   14001baa7:	in     eax,0xf0
   14001baa9:	loope  0x14001ba68
   14001baab:	loopne 0x14001ba7c
   14001baad:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001bad6:	add    BYTE PTR [rax],al
   14001bad8:	(bad)  
   14001bad9:	mov    al,0x65
   14001badb:	(bad)  
   14001badc:	in     al,dx
   14001badd:	(bad)  [rsi-0x441f0d4e]
   14001bae3:	fsubr  DWORD PTR [rcx]
   14001bae5:	test   bh,bh
   14001bae7:	jmp    FWORD PTR [rax]
   14001bae9:	xchg   edi,esi
   14001baeb:	jmp    FWORD PTR [rcx]
   14001baed:	xchg   esi,esi
   14001baef:	jmp    FWORD PTR [rcx]
   14001baf1:	xchg   esi,esi
   14001baf3:	jmp    FWORD PTR [rdx]
   14001baf5:	test   esi,esi
   14001baf7:	call   QWORD PTR [rbx]
   14001baf9:	jns    0x14001baf0
   14001bafb:	jmp    QWORD PTR [rbp-0x535]
   14001bb01:	(bad)  
   14001bb02:	(bad)  
   14001bb03:	(bad)  
   14001bb04:	(bad)  
   14001bb05:	(bad)  
   14001bb06:	(bad)  
   14001bb07:	(bad)  
   14001bb08:	(bad)  
   14001bb09:	(bad)  
   14001bb0a:	(bad)  
   14001bb0b:	(bad)  
   14001bb0c:	(bad)  
   14001bb0d:	(bad)  
   14001bb0e:	(bad)  
   14001bb0f:	(bad)  
   14001bb10:	(bad)  
   14001bb11:	(bad)  
   14001bb12:	(bad)  
   14001bb13:	(bad)  
   14001bb14:	(bad)  
   14001bb15:	(bad)  
   14001bb16:	(bad)  
   14001bb17:	(bad)  
   14001bb18:	(bad)  
   14001bb19:	(bad)  
   14001bb1a:	(bad)  
   14001bb1b:	(bad)  
   14001bb1c:	(bad)  
   14001bb1d:	(bad)  
   14001bb1e:	(bad)  
   14001bb1f:	(bad)  
   14001bb20:	(bad)  
   14001bb21:	(bad)  
   14001bb22:	(bad)  
   14001bb23:	(bad)  
   14001bb24:	(bad)  
   14001bb25:	(bad)  
   14001bb26:	(bad)  
   14001bb27:	(bad)  
   14001bb28:	(bad)  
   14001bb29:	(bad)  
   14001bb2a:	(bad)  
   14001bb2b:	(bad)  
   14001bb2c:	(bad)  
   14001bb2d:	(bad)  
   14001bb2e:	(bad)  
   14001bb2f:	(bad)  
   14001bb30:	(bad)  
   14001bb31:	(bad)  
   14001bb32:	(bad)  
   14001bb33:	(bad)  
   14001bb34:	mov    eax,0x5dfffad4
   14001bb39:	sahf   
   14001bb3a:	idiv   edi
   14001bb3c:	sub    eax,0x24fff47f
   14001bb41:	jp     0x14001bb35
   14001bb43:	jmp    FWORD PTR [rsi]
   14001bb45:	xchg   bh,bh
   14001bb47:	inc    eax
   14001bb49:	(bad)
   14001bb4c:	int    0xb1
   14001bb4e:	(bad)  
   14001bb4f:	in     eax,dx
   14001bb50:	repz loope 0x14001bb0e
   14001bb53:	in     eax,dx
   14001bb54:	(bad)  
   14001bb55:	movabs eax,ds:0xdaeee774baddff3c
   14001bb5e:	mov    al,0xee
   14001bb60:	(bad)  
   14001bb61:	cdq    
   14001bb62:	xor    eax,0x67b0d5ff
   14001bb67:	in     eax,0xf0
   14001bb69:	loopne 0x14001bb28
   14001bb6b:	loopne 0x14001bb3c
   14001bb6d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001bb96:	add    BYTE PTR [rax],al
   14001bb98:	(bad)  
   14001bb99:	mov    al,0x65
   14001bb9b:	(bad)  
   14001bb9c:	in     al,dx
   14001bb9d:	fdiv   QWORD PTR [rsi-0x441f0e4d]
   14001bba3:	(bad)  
   14001bba4:	rex.XB (bad) 
   14001bba6:	cmc    
   14001bba7:	jmp    QWORD PTR [rdi]
   14001bba9:	mov    al,bh
   14001bbab:	jmp    FWORD PTR [rcx]
   14001bbad:	mov    dh,dh
   14001bbaf:	jmp    FWORD PTR [rcx]
   14001bbb1:	mov    dh,dh
   14001bbb3:	jmp    FWORD PTR [rdx]
   14001bbb5:	mov    dh,dh
   14001bbb7:	call   QWORD PTR [rbx]
   14001bbb9:	jnp    0x14001bbb1
   14001bbbb:	push   QWORD PTR [rdx-0x52d]
   14001bbc1:	(bad)  
   14001bbc2:	(bad)  
   14001bbc3:	(bad)  
   14001bbc4:	(bad)  
   14001bbc5:	(bad)  
   14001bbc6:	(bad)  
   14001bbc7:	(bad)  
   14001bbc8:	(bad)  
   14001bbc9:	(bad)  
   14001bbca:	(bad)  
   14001bbcb:	(bad)  
   14001bbcc:	(bad)  
   14001bbcd:	(bad)  
   14001bbce:	(bad)  
   14001bbcf:	(bad)  
   14001bbd0:	(bad)  
   14001bbd1:	(bad)  
   14001bbd2:	(bad)  
   14001bbd3:	(bad)  
   14001bbd4:	(bad)  
   14001bbd5:	(bad)  
   14001bbd6:	(bad)  
   14001bbd7:	(bad)  
   14001bbd8:	(bad)  
   14001bbd9:	(bad)  
   14001bbda:	(bad)  
   14001bbdb:	(bad)  
   14001bbdc:	(bad)  
   14001bbdd:	(bad)  
   14001bbde:	(bad)  
   14001bbdf:	(bad)  
   14001bbe0:	(bad)  
   14001bbe1:	(bad)  
   14001bbe2:	(bad)  
   14001bbe3:	(bad)  
   14001bbe4:	(bad)  
   14001bbe5:	(bad)  
   14001bbe6:	(bad)  
   14001bbe7:	(bad)  
   14001bbe8:	(bad)  
   14001bbe9:	(bad)  
   14001bbea:	(bad)  
   14001bbeb:	push   rcx
   14001bbed:	idiv   ch
   14001bbef:	inc    DWORD PTR [rdi+0x56fff8b8]
   14001bbf5:	fwait
   14001bbf6:	idiv   edi
   14001bbf8:	cmp    ecx,DWORD PTR [rbx+0x7d24fff6]
   14001bbfe:	hlt    
   14001bbff:	jmp    QWORD PTR [rbx]
   14001bc01:	jp     0x14001bbf6
   14001bc03:	inc    DWORD PTR [rsi-0x6b]
   14001bc06:	std    
   14001bc07:	dec    esp
   14001bc09:	(bad)  
   14001bc0a:	mov    ah,0xfa
   14001bc0c:	leave  
   14001bc0d:	lods   al,BYTE PTR ds:[rsi]
   14001bc0e:	push   rdi
   14001bc0f:	jmp    0x14001bc05
   14001bc11:	loop   0x14001bbce
   14001bc13:	in     eax,dx
   14001bc14:	(bad)  
   14001bc15:	movabs eax,ds:0xdaeee774baddff3c
   14001bc1e:	mov    al,0xee
   14001bc20:	(bad)  
   14001bc21:	cdq    
   14001bc22:	xor    eax,0x67b0d5ff
   14001bc27:	in     eax,0xf1
   14001bc29:	loopne 0x14001bbe8
   14001bc2b:	loopne 0x14001bbfc
   14001bc2d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001bc56:	add    BYTE PTR [rax],al
   14001bc58:	(bad)  
   14001bc59:	mov    al,0x65
   14001bc5b:	(bad)  
   14001bc5c:	in     eax,dx
   14001bc5d:	fdiv   QWORD PTR [rdi-0x411f0f4b]
   14001bc63:	mov    ebp,0xffd3a383
   14001bc68:	and    cl,BYTE PTR [rbx-0x75d50002]
   14001bc6e:	idiv   bh
   14001bc70:	sub    cl,BYTE PTR [rcx-0x76d4000a]
   14001bc76:	idiv   bh
   14001bc78:	adc    edi,DWORD PTR [rbp-0xa]
   14001bc7b:	push   QWORD PTR [rbx+rdx*8-0x6]
   14001bc82:	(bad)  
   14001bc83:	(bad)  
   14001bc84:	(bad)  
   14001bc85:	(bad)  
   14001bc86:	(bad)  
   14001bc87:	(bad)  
   14001bc88:	(bad)  
   14001bc89:	(bad)  
   14001bc8a:	(bad)  
   14001bc8b:	(bad)  
   14001bc8c:	(bad)  
   14001bc8d:	(bad)  
   14001bc8e:	(bad)  
   14001bc8f:	(bad)  
   14001bc90:	(bad)  
   14001bc91:	(bad)  
   14001bc92:	(bad)  
   14001bc93:	(bad)  
   14001bc94:	(bad)  
   14001bc95:	(bad)  
   14001bc96:	(bad)  
   14001bc97:	(bad)  
   14001bc98:	(bad)  
   14001bc99:	(bad)  
   14001bc9a:	(bad)  
   14001bc9b:	(bad)  
   14001bc9c:	(bad)  
   14001bc9d:	(bad)  
   14001bc9e:	(bad)  
   14001bc9f:	(bad)  
   14001bca0:	(bad)  
   14001bca1:	(bad)  
   14001bca2:	(bad)  
   14001bca3:	(bad)  
   14001bca4:	(bad)  
   14001bca5:	(bad)  
   14001bca6:	(bad)  
   14001bca7:	jmp    FWORD PTR [rdi+rcx*8-0x66af0006]
   14001bcae:	idiv   edi
   14001bcb0:	(bad)  
   14001bcb1:	mov    esi,esi
   14001bcb3:	jmp    FWORD PTR [rcx]
   14001bcb5:	(bad)  
   14001bcb6:	cmc    
   14001bcb7:	jmp    QWORD PTR [rsi+rdi*2]
   14001bcba:	cmc    
   14001bcbb:	jmp    FWORD PTR [rax]
   14001bcbd:	xor    ch,0xff
   14001bcc0:	sbb    al,0x79
   14001bcc2:	cmc    
   14001bcc3:	jmp    FWORD PTR [rsi-0x56]
   14001bcc6:	cmc    
   14001bcc7:	dec    esp
   14001bcc9:	mov    edx,0xb4cff798
   14001bcce:	imul   ebp,ecx,0xfffffff4
   14001bcd1:	loop   0x14001bc8f
   14001bcd3:	in     eax,dx
   14001bcd4:	(bad)  
   14001bcd5:	movabs eax,ds:0xdaeee774baddff3c
   14001bcde:	mov    al,0xee
   14001bce0:	(bad)  
   14001bce1:	cdq    
   14001bce2:	xor    eax,0x67b0d5ff
   14001bce7:	in     eax,0xf1
   14001bce9:	loope  0x14001bca8
   14001bceb:	loopne 0x14001bcbc
   14001bced:	movabs eax,ds:0x5f8fc6e0ff3c
	...
   14001bd16:	add    BYTE PTR [rax],al
   14001bd18:	(bad)  
   14001bd19:	mov    al,0x65
   14001bd1b:	(bad)  
   14001bd1c:	in     al,dx
   14001bd1d:	(bad)  [rsi-0x3b1c0d48]
   14001bd23:	lods   al,BYTE PTR ds:[rsi]
   14001bd24:	sar    DWORD PTR [rbx-0x73e00050],0xff
   14001bd2b:	jmp    FWORD PTR [rdx]
   14001bd2d:	mov    esi,ebp
   14001bd2f:	jmp    FWORD PTR [rdx]
   14001bd31:	mov    esi,esi
   14001bd33:	jmp    FWORD PTR [rbx]
   14001bd35:	mov    esi,esi
   14001bd37:	call   QWORD PTR [rdi+rdi*2]
   14001bd3a:	idiv   bh
   14001bd3c:	mov    ah,0xd3
   14001bd3e:	cli    
   14001bd3f:	(bad)  
   14001bd40:	(bad)  
   14001bd41:	(bad)  
   14001bd42:	(bad)  
   14001bd43:	(bad)  
   14001bd44:	(bad)  
   14001bd45:	(bad)  
   14001bd46:	(bad)  
   14001bd47:	(bad)  
   14001bd48:	(bad)  
   14001bd49:	(bad)  
   14001bd4a:	(bad)  
   14001bd4b:	(bad)  
   14001bd4c:	(bad)  
   14001bd4d:	(bad)  
   14001bd4e:	(bad)  
   14001bd4f:	(bad)  
   14001bd50:	(bad)  
   14001bd51:	(bad)  
   14001bd52:	(bad)  
   14001bd53:	(bad)  
   14001bd54:	(bad)  
   14001bd55:	(bad)  
   14001bd56:	(bad)  
   14001bd57:	(bad)  
   14001bd58:	(bad)  
   14001bd59:	(bad)  
   14001bd5a:	(bad)  
   14001bd5b:	(bad)  
   14001bd5c:	(bad)  
   14001bd5d:	(bad)  
   14001bd5e:	(bad)  
   14001bd5f:	jmp    rdi
   14001bd61:	repnz std 
   14001bd63:	inc    DWORD PTR [rcx+rdi*4-0x74c90007]
   14001bd6a:	idiv   bh
   14001bd6c:	xor    BYTE PTR [rax-0x7dd9000a],cl
   14001bd72:	cmc    
   14001bd73:	jmp    QWORD PTR [rsi]
   14001bd75:	xor    ebp,0xffffffff
   14001bd78:	sub    BYTE PTR [rbx-0x7dd5000b],al
   14001bd7e:	cmc    
   14001bd7f:	call   QWORD PTR [rsi]
   14001bd81:	jns    0x14001bd7c
   14001bd83:	call   QWORD PTR [rdx-0x32011848]
   14001bd89:	mov    ah,0x7c
   14001bd8b:	repz fcmovb st,st(0)
   14001bd8e:	and    esi,0xfffffff3
   14001bd91:	loopne 0x14001bd4e
   14001bd93:	in     eax,dx
   14001bd94:	(bad)  
   14001bd95:	movabs eax,ds:0xdaeee774baddff3c
   14001bd9e:	mov    al,0xee
   14001bda0:	(bad)  
   14001bda1:	cdq    
   14001bda2:	xor    eax,0x67b0d5ff
   14001bda7:	in     eax,0xf1
   14001bda9:	loopne 0x14001bd68
   14001bdab:	loopne 0x14001bd7c
   14001bdad:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001bdd6:	add    BYTE PTR [rax],al
   14001bdd8:	iret   
   14001bdd9:	mov    al,0x67
   14001bddb:	(bad)  
   14001bddc:	in     eax,dx
   14001bddd:	(bad)  [rbp-0x35190b46]
   14001bde3:	lahf   
   14001bde4:	fmulp  st(6),st
   14001bde6:	test   al,0xeb
   14001bde8:	and    cl,BYTE PTR [rdi+rdi*8-0x872d401]
   14001bdef:	jmp    FWORD PTR [rbx]
   14001bdf1:	(bad)  
   14001bdf2:	idiv   edi
   14001bdf4:	sub    ecx,DWORD PTR [rsi+rsi*8-0x97feb01]
   14001bdfb:	push   QWORD PTR [rbx+rdx*8-0x7]
   14001be02:	std    
   14001be03:	(bad)  
   14001be04:	(bad)  
   14001be05:	(bad)  
   14001be06:	(bad)  
   14001be07:	(bad)  
   14001be08:	(bad)  
   14001be09:	(bad)  
   14001be0a:	(bad)  
   14001be0b:	(bad)  
   14001be0c:	(bad)  
   14001be0d:	(bad)  
   14001be0e:	(bad)  
   14001be0f:	(bad)  
   14001be10:	(bad)  
   14001be11:	(bad)  
   14001be12:	(bad)  
   14001be13:	(bad)  
   14001be14:	(bad)  
   14001be15:	(bad)  
   14001be16:	(bad)  
   14001be17:	(bad)  
   14001be18:	(bad)  
   14001be19:	(bad)  
   14001be1a:	(bad)  
   14001be1b:	inc    edx
   14001be1d:	(bad)  
   14001be1f:	dec    DWORD PTR [rbx+rbx*4-0xa]
   14001be23:	push   QWORD PTR [rbx]
   14001be25:	mov    esi,esi
   14001be27:	jmp    FWORD PTR [rsi+rax*4]
   14001be2a:	idiv   bh
   14001be2c:	and    eax,0x28fff683
   14001be31:	test   ebp,esi
   14001be33:	jmp    FWORD PTR [rcx]
   14001be35:	test   ch,dh
   14001be37:	jmp    FWORD PTR [rcx]
   14001be39:	test   dh,dh
   14001be3b:	jmp    FWORD PTR [rax]
   14001be3d:	xor    esp,0xffffffff
   14001be40:	sub    ecx,DWORD PTR [rdx-0x434e0002]
   14001be46:	(bad)  
   14001be47:	cld    
   14001be48:	enter  0x50aa,0xf0
   14001be4c:	loope  0x14001be17
   14001be4e:	xchg   edx,eax
   14001be4f:	jrcxz  0x14001be45
   14001be51:	loop   0x14001be0e
   14001be53:	out    dx,al
   14001be54:	(bad)  
   14001be55:	movabs eax,ds:0xdaeee774baddff3c
   14001be5e:	mov    al,0xee
   14001be60:	(bad)  
   14001be61:	cwde   
   14001be62:	xor    edi,edi
   14001be64:	(bad)  
   14001be65:	scas   eax,DWORD PTR es:[rdi]
   14001be66:	in     ax,0xf1
   14001be69:	loope  0x14001be29
   14001be6b:	loopne 0x14001be3c
   14001be6d:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001be96:	add    BYTE PTR [rax],al
   14001be98:	(bad)  
   14001be99:	mov    al,0x65
   14001be9b:	(bad)  
   14001be9c:	in     eax,dx
   14001be9d:	(bad)  [rbp-0x34180b46]
   14001bea3:	lahf   
   14001bea4:	in     eax,dx
   14001bea5:	fidivr WORD PTR [rcx-0x17629f37]
   14001beab:	jmp    FWORD PTR [rax]
   14001bead:	(bad)  
   14001beae:	sti    
   14001beaf:	jmp    FWORD PTR [rbx]
   14001beb1:	(bad)  
   14001beb2:	idiv   edi
   14001beb4:	sub    al,0x8e
   14001beb6:	idiv   edi
   14001beb8:	adc    eax,0xb5fff682
   14001bebd:	(bad)  
   14001bebe:	stc    
   14001bebf:	(bad)  
   14001bec0:	(bad)  
   14001bec1:	(bad)  
   14001bec2:	std    
   14001bec3:	(bad)  
   14001bec4:	(bad)  
   14001bec5:	(bad)  
   14001bec6:	(bad)  
   14001bec7:	(bad)  
   14001bec8:	(bad)  
   14001bec9:	(bad)  
   14001beca:	(bad)  
   14001becb:	(bad)  
   14001becc:	(bad)  
   14001becd:	(bad)  
   14001bece:	(bad)  
   14001becf:	(bad)  
   14001bed0:	(bad)  
   14001bed1:	(bad)  
   14001bed2:	(bad)  
   14001bed3:	push   rbx
   14001bed5:	clc    
   14001bed6:	std    
   14001bed7:	(bad)  
   14001bed8:	jns    0x14001be8e
   14001beda:	stc    
   14001bedb:	(bad)  
   14001bedc:	cmp    al,0x93
   14001bede:	idiv   edi
   14001bee0:	xor    DWORD PTR [rbp-0x78d7000a],ecx
   14001bee6:	idiv   bh
   14001bee8:	(bad)  
   14001bee9:	mov    dh,dh
   14001beeb:	jmp    FWORD PTR [rcx]
   14001beed:	xchg   esi,esi
   14001beef:	jmp    FWORD PTR [rcx]
   14001bef1:	xchg   esi,esi
   14001bef3:	jmp    FWORD PTR [rcx]
   14001bef5:	xchg   dh,dh
   14001bef7:	jmp    FWORD PTR [rcx]
   14001bef9:	xchg   dh,dh
   14001befb:	jmp    QWORD PTR [rax]
   14001befd:	xor    dh,0xff
   14001bf00:	pop    rsi
   14001bf01:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bf02:	sti    
   14001bf03:	dec    esp
   14001bf05:	mov    eax,0xb0cdf691
   14001bf0a:	(bad)  
   14001bf0b:	in     al,dx
   14001bf0c:	out    0xd0,al
   14001bf0e:	pushf  
   14001bf0f:	in     al,0xf6
   14001bf11:	in     eax,0xbe
   14001bf13:	icebp  
   14001bf14:	int    0x9f
   14001bf16:	cmp    bh,bh
   14001bf18:	fnstsw WORD PTR [rdx-0x2511188c]
   14001bf1e:	mov    al,0xee
   14001bf20:	(bad)  
   14001bf21:	cwde   
   14001bf22:	xor    edi,edi
   14001bf24:	(bad)  
   14001bf25:	scas   eax,DWORD PTR es:[rdi]
   14001bf26:	data16 in al,0xf3
   14001bf29:	loope  0x14001bee9
   14001bf2b:	jrcxz  0x14001befc
   14001bf2d:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001bf56:	add    BYTE PTR [rax],al
   14001bf58:	int    0xaf
   14001bf5a:	movsxd edi,edi
   14001bf5c:	in     al,dx
   14001bf5d:	fnstenv [rbx-0x381a0b46]
   14001bf63:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bf64:	lock loop 0x14001bf28
   14001bf67:	mov    al,0xc9
   14001bf69:	mov    ebp,0x9220ffa5
   14001bf6e:	(bad)  
   14001bf6f:	jmp    FWORD PTR [rbx]
   14001bf71:	nop
   14001bf72:	idiv   edi
   14001bf74:	sub    al,0x8f
   14001bf76:	idiv   edi
   14001bf78:	adc    eax,0xb9fff684
   14001bf7d:	(bad)  
   14001bf7e:	stc    
   14001bf7f:	(bad)  
   14001bf80:	(bad)  
   14001bf81:	(bad)  
   14001bf82:	std    
   14001bf83:	(bad)  
   14001bf84:	(bad)  
   14001bf85:	(bad)  
   14001bf86:	(bad)  
   14001bf87:	(bad)  
   14001bf88:	(bad)  
   14001bf89:	(bad)  
   14001bf8a:	(bad)  
   14001bf8b:	(bad)  
   14001bf8c:	(bad)  
   14001bf8d:	(bad)  
   14001bf8e:	(bad)  
   14001bf8f:	push   QWORD PTR [rcx+0x54fffbd5]
   14001bf95:	movabs ds:0x8c2cfff78f33fff8,al
   14001bf9e:	idiv   bh
   14001bfa0:	sub    BYTE PTR [rdx-0x76d6000a],cl
   14001bfa6:	idiv   bh
   14001bfa8:	sub    cl,BYTE PTR [rcx-0x76d5000a]
   14001bfae:	idiv   bh
   14001bfb0:	sub    DWORD PTR [rax-0x77d6000a],ecx
   14001bfb6:	idiv   bh
   14001bfb8:	sub    DWORD PTR [rdi-0x72d2000a],eax
   14001bfbe:	cld    
   14001bfbf:	push   QWORD PTR [rax-0x3202293d]
   14001bfc5:	mov    al,0x67
   14001bfc7:	icebp  
   14001bfc8:	loope  0x14001bf93
   14001bfca:	nop
   14001bfcb:	(bad)  
   14001bfcc:	jmp    0x14001bfa1
   14001bfce:	movabs ds:0x3fa3d0f0bee3f5e7,al
   14001bfd7:	(bad)  
   14001bfd8:	fnstsw WORD PTR [rdx-0x2511188c]
   14001bfde:	mov    al,0xee
   14001bfe0:	(bad)  
   14001bfe1:	cwde   
   14001bfe2:	xor    edi,edi
   14001bfe4:	xlat   BYTE PTR ds:[rbx]
   14001bfe5:	mov    cl,0x6a
   14001bfe7:	jmp    0x125c1a2e0
   14001bfec:	iret   
   14001bfed:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001c016:	add    BYTE PTR [rax],al
   14001c018:	int3   
   14001c019:	scas   al,BYTE PTR es:[rdi]
   14001c01a:	(bad)  
   14001c01b:	(bad)  
   14001c01c:	jmp    0x14001bff7
   14001c01e:	mov    bl,0xba
   14001c020:	repnz in al,0xc5
   14001c023:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c024:	repz in eax,0xc8
   14001c027:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c028:	jmp    0x19fd57104
   14001c02d:	pushf  
   14001c02e:	loopne 0x14001c02f
   14001c030:	(bad)  
   14001c031:	xchg   esp,eax
   14001c032:	(bad)  
   14001c033:	jmp    FWORD PTR [rip+0x16fff791]        # 0x15701b7ca
   14001c039:	xchg   dh,dh
   14001c03b:	jmp    QWORD PTR [rsi-0x733]
   14001c041:	(bad)  
   14001c042:	(bad)  
   14001c043:	(bad)  
   14001c044:	(bad)  
   14001c045:	(bad)  
   14001c046:	(bad)  
   14001c047:	push   rbx
   14001c049:	clc    
   14001c04a:	(bad)  
   14001c04b:	dec    DWORD PTR [rbp+0x39fffac2]
   14001c051:	xchg   esp,eax
   14001c052:	idiv   edi
   14001c054:	xor    edx,DWORD PTR [rcx-0x73d70009]
   14001c05a:	idiv   bh
   14001c05c:	sub    BYTE PTR [rdi+rsi*8-0x973d501],cl
   14001c063:	jmp    FWORD PTR [rdx]
   14001c065:	mov    esi,esi
   14001c067:	jmp    FWORD PTR [rdx]
   14001c069:	mov    esi,esi
   14001c06b:	jmp    FWORD PTR [rdx]
   14001c06d:	mov    dh,dh
   14001c06f:	jmp    FWORD PTR [rdx]
   14001c071:	mov    dh,dh
   14001c073:	jmp    FWORD PTR [rdx]
   14001c075:	mov    esi,esi
   14001c077:	call   FWORD PTR [rdi]
   14001c079:	test   edi,esi
   14001c07b:	jmp    QWORD PTR [rbp-0x57]
   14001c07e:	repnz (bad) 
   14001c080:	(bad)  
   14001c081:	mov    edi,0xb8d4f894
   14001c086:	jne    0x14001c076
   14001c088:	jmp    0x14001c05f
   14001c08a:	movabs ds:0xbee4f6e69cd0e7e8,al
   14001c093:	icebp  
   14001c094:	shl    BYTE PTR [rbx-0x452200c1],1
   14001c09a:	je     0x14001c083
   14001c09c:	out    dx,al
   14001c09d:	fidiv  DWORD PTR [rax+0x3398c6ee]
   14001c0a3:	call   rdi
   14001c0a5:	mov    cl,0x6a
   14001c0a7:	call   0x124c1a2a0
   14001c0ac:	iret   
   14001c0ad:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001c0d6:	add    BYTE PTR [rax],al
   14001c0d8:	int3   
   14001c0d9:	lods   eax,DWORD PTR ds:[rsi]
   14001c0da:	pop    rdi
   14001c0db:	(bad)  
   14001c0dc:	(bad)  
   14001c0dd:	fnstenv [rdx-0x3b1c0e46]
   14001c0e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c0e4:	icebp  
   14001c0e5:	jrcxz  0x14001c0ab
   14001c0e7:	lods   al,BYTE PTR ds:[rsi]
   14001c0e8:	icebp  
   14001c0e9:	in     al,0xc6
   14001c0eb:	lods   eax,DWORD PTR ds:[rsi]
   14001c0ec:	fcmovne st,st(1)
   14001c0ee:	movabs eax,ds:0xf9942bfff99627f8
   14001c0f7:	jmp    QWORD PTR [rip+0x3bfff78e]        # 0x17c01b88b
   14001c0fd:	cdq    
   14001c0fe:	idiv   edi
   14001c100:	mov    ebx,0xa7fff8d8
   14001c105:	sar    edx,1
   14001c107:	dec    DWORD PTR [rbp-0x5f]
   14001c10a:	clc    
   14001c10b:	push   QWORD PTR [rax]
   14001c10d:	xchg   edx,eax
   14001c10e:	idiv   edi
   14001c110:	sub    eax,0x27fff790
   14001c115:	(bad)  
   14001c116:	idiv   edi
   14001c118:	sub    cl,BYTE PTR [rsi-0x71d40009]
   14001c11e:	idiv   edi
   14001c120:	sub    ecx,DWORD PTR [rbp-0x72d4000a]
   14001c126:	idiv   bh
   14001c128:	sub    cl,BYTE PTR [rsi+rsi*8-0x973d501]
   14001c12f:	jmp    FWORD PTR [rdx]
   14001c131:	mov    esi,esi
   14001c133:	jmp    QWORD PTR [rsi]
   14001c135:	mov    esi,esi
   14001c137:	(bad)  
   14001c138:	ds pushf 
   14001c13a:	sti    
   14001c13b:	call   rdx
   14001c13d:	retf   0xfdbb
   14001c140:	shl    DWORD PTR [rbp-0x2f180d93],1
   14001c146:	fwait
   14001c147:	jmp    0x129a29637
   14001c14c:	(bad)  
   14001c14d:	rcr    BYTE PTR [rdi-0x3f1a0715],cl
   14001c153:	repz shl BYTE PTR [rdx-0x452200c3],1
   14001c15a:	je     0x14001c143
   14001c15c:	out    dx,al
   14001c15d:	fnstenv [rax+0x3398c6ee]
   14001c163:	call   rdi
   14001c165:	mov    cl,0x69
   14001c167:	call   0x124c1a360
   14001c16c:	iret   
   14001c16d:	movabs eax,ds:0x6596cae2ff3c
	...
   14001c196:	add    BYTE PTR [rax],al
   14001c198:	retf   
   14001c199:	lods   al,BYTE PTR ds:[rsi]
   14001c19a:	pop    rsi
   14001c19b:	(bad)  
   14001c19c:	(bad)  
   14001c19d:	fnstenv [rdx-0x3d1d0f47]
   14001c1a3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c1a4:	lock loop 0x14001c169
   14001c1a7:	lods   eax,DWORD PTR ds:[rsi]
   14001c1a8:	repnz in al,0xc6
   14001c1ab:	scas   eax,DWORD PTR es:[rdi]
   14001c1ac:	out    0xd0,al
   14001c1ae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c1af:	call   0x13f937173
   14001c1b4:	sbb    al,0x98
   14001c1b6:	(bad)  
   14001c1b7:	jmp    FWORD PTR [rsp+rdx*4]
   14001c1ba:	cli    
   14001c1bb:	jmp    QWORD PTR [rdi+rcx*4]
   14001c1be:	idiv   edi
   14001c1c0:	sbb    BYTE PTR [rax-0x74e2000a],cl
   14001c1c6:	idiv   edi
   14001c1c8:	(bad)  
   14001c1c9:	(bad)  
   14001c1ca:	idiv   edi
   14001c1cc:	sub    dl,BYTE PTR [rax-0x6fd40009]
   14001c1d2:	idiv   edi
   14001c1d4:	sub    al,0x91
   14001c1d6:	idiv   edi
   14001c1d8:	sub    edx,DWORD PTR [rax-0x70d40009]
   14001c1de:	idiv   edi
   14001c1e0:	sub    ecx,DWORD PTR [rdi-0x70d40009]
   14001c1e6:	idiv   edi
   14001c1e8:	sub    ecx,DWORD PTR [rsi-0x71d40009]
   14001c1ee:	idiv   bh
   14001c1f0:	sub    BYTE PTR [rbx-0x6ad00009],cl
   14001c1f6:	sti    
   14001c1f7:	push   QWORD PTR [rbp+rdi*4-0x3d25033b]
   14001c1fe:	mov    dh,ch
   14001c200:	out    0xd1,eax
   14001c202:	movabs al,ds:0xa6d7edebaddaefed
   14001c20b:	in     al,dx
   14001c20c:	(bad)  
   14001c20d:	rcr    BYTE PTR [rdi-0x411a0816],cl
   14001c213:	repnz shl BYTE PTR [rdx-0x462300c3],1
   14001c21a:	jae    0x14001c203
   14001c21c:	out    dx,al
   14001c21d:	fidiv  DWORD PTR [rax+0x3398c6ee]
   14001c223:	call   rsi
   14001c225:	mov    al,0x69
   14001c227:	call   0x124c1a420
   14001c22c:	iret   
   14001c22d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001c256:	add    BYTE PTR [rax],al
   14001c258:	retf   
   14001c259:	lods   al,BYTE PTR ds:[rsi]
   14001c25a:	pop    rsi
   14001c25b:	(bad)  
   14001c25c:	jmp    0x130bb7339
   14001c261:	loop   0x14001c225
   14001c263:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c264:	lock loope 0x14001c227
   14001c267:	lods   eax,DWORD PTR ds:[rsi]
   14001c268:	lock jrcxz 0x14001c22e
   14001c26b:	mov    al,0xe8
   14001c26d:	shl    DWORD PTR [rdi-0x67361d1c],cl
   14001c273:	out    dx,eax
   14001c274:	mov    esp,0x21fea1b5
   14001c279:	xchg   ebp,eax
   14001c27a:	std    
   14001c27b:	jmp    FWORD PTR [rdx]
   14001c27d:	xchg   edi,eax
   14001c27e:	(bad)  
   14001c27f:	jmp    FWORD PTR [rsi]
   14001c281:	xchg   esp,eax
   14001c282:	idiv   edi
   14001c284:	sub    al,0x93
   14001c286:	idiv   edi
   14001c288:	sub    al,0x93
   14001c28a:	idiv   edi
   14001c28c:	sub    al,0x93
   14001c28e:	idiv   edi
   14001c290:	sub    al,0x92
   14001c292:	idiv   edi
   14001c294:	sub    al,0x92
   14001c296:	idiv   edi
   14001c298:	sub    al,0x91
   14001c29a:	idiv   edi
   14001c29c:	sub    al,0x91
   14001c29e:	idiv   edi
   14001c2a0:	sub    edx,DWORD PTR [rax-0x6fd40009]
   14001c2a6:	idiv   edi
   14001c2a8:	sub    edx,DWORD PTR [rax-0x72db0009]
   14001c2ae:	clc    
   14001c2af:	push   QWORD PTR [rbx]
   14001c2b1:	cwde   
   14001c2b2:	stc    
   14001c2b3:	push   QWORD PTR [rbx-0x1e013740]
   14001c2b9:	retf   0xf797
   14001c2bc:	jrcxz  0x14001c28b
   14001c2be:	fwait
   14001c2bf:	out    dx,eax
   14001c2c0:	icebp  
   14001c2c1:	fdiv   QWORD PTR [rbx-0x53251115]
   14001c2c7:	jmp    0x14001c2b7
   14001c2c9:	fsubr  DWORD PTR [rdx-0x58291415]
   14001c2cf:	(bad)  
   14001c2d0:	mul    ebp
   14001c2d2:	shl    edx,0xd0
   14001c2d5:	movabs ds:0xdaefe673b9dcff3d,al
   14001c2de:	mov    al,0xed
   14001c2e0:	(bad)  
   14001c2e1:	cwde   
   14001c2e2:	xor    edi,edi
   14001c2e4:	xlat   BYTE PTR ds:[rbx]
   14001c2e5:	mov    cl,0x69
   14001c2e7:	call   0x124c1a4e0
   14001c2ec:	iret   
   14001c2ed:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001c316:	add    BYTE PTR [rax],al
   14001c318:	retf   0x5bac
   14001c31b:	(bad)  
   14001c31c:	jmp    0x130b973f9
   14001c321:	loope  0x14001c2e3
   14001c323:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c324:	out    dx,eax
   14001c325:	loopne 0x14001c2e7
   14001c327:	lods   al,BYTE PTR ds:[rsi]
   14001c328:	lock loop 0x14001c2ed
   14001c32b:	scas   eax,DWORD PTR es:[rdi]
   14001c32c:	out    0xd1,al
   14001c32e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c32f:	call   0x123ad991d
   14001c334:	(bad)  
   14001c335:	xlat   BYTE PTR ds:[rbx]
   14001c336:	scas   eax,DWORD PTR es:[rdi]
   14001c337:	ffree  st(7)
   14001c339:	mov    ecx,0x9634fc98
   14001c33e:	hlt    
   14001c33f:	jmp    QWORD PTR [rcx]
   14001c341:	(bad)  
   14001c342:	(bad)  
   14001c343:	jmp    FWORD PTR [rsi+rdx*4]
   14001c346:	cli    
   14001c347:	jmp    FWORD PTR [rsi]
   14001c349:	xchg   ebp,eax
   14001c34a:	idiv   edi
   14001c34c:	cs xchg esp,eax
   14001c34e:	idiv   bh
   14001c350:	sub    al,0x94
   14001c352:	idiv   edi
   14001c354:	sub    al,0x94
   14001c356:	idiv   edi
   14001c358:	sub    al,0x93
   14001c35a:	idiv   edi
   14001c35c:	sub    al,0x92
   14001c35e:	idiv   bh
   14001c360:	sub    al,0x92
   14001c362:	idiv   edi
   14001c364:	sub    DWORD PTR [rcx-0x6fe10008],edx
   14001c36a:	(bad)  
   14001c36b:	(bad)  
   14001c36c:	ds sahf 
   14001c36e:	std    
   14001c36f:	dec    esi
   14001c371:	enter  0xfebc,0xe0
   14001c375:	retf   
   14001c376:	cdq    
   14001c377:	cmc    
   14001c378:	out    0xd3,eax
   14001c37a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c37b:	in     eax,dx
   14001c37c:	icebp  
   14001c37d:	fidiv  WORD PTR [rbp-0x4f241016]
   14001c383:	jmp    0x14001c374
   14001c385:	fisubr DWORD PTR [rdi-0x52251115]
   14001c38b:	jmp    0x14001c379
   14001c38d:	xlat   BYTE PTR ds:[rbx]
   14001c38e:	stos   BYTE PTR es:[rdi],al
   14001c38f:	(bad)  
   14001c390:	clc    
   14001c391:	out    0xc5,eax
   14001c393:	repnz shl BYTE PTR [rdx-0x492500c3],1
   14001c39a:	jo     0x14001c385
   14001c39c:	in     eax,dx
   14001c39d:	fsubr  DWORD PTR [rbp+0x3398c6ee]
   14001c3a3:	call   rdi
   14001c3a5:	mov    cl,0x69
   14001c3a7:	call   0x124c1a5a0
   14001c3ac:	iret   
   14001c3ad:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001c3d6:	add    BYTE PTR [rax],al
   14001c3d8:	retf   
   14001c3d9:	lods   al,BYTE PTR ds:[rsi]
   14001c3da:	pop    rbx
   14001c3db:	(bad)  
   14001c3dc:	call   0x12fb974b8
   14001c3e1:	loopne 0x14001c3a3
   14001c3e3:	movabs ds:0xafc2e1efacbfe0ef,eax
   14001c3ec:	out    0xd1,al
   14001c3ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c3ef:	call   0x126a896db
   14001c3f4:	repnz jrcxz 0x14001c3b8
   14001c3f7:	(bad)  
   14001c3f8:	in     eax,dx
   14001c3f9:	fnstenv [rbx-0x65351f26]
   14001c3ff:	lock xchg edx,eax
   14001c401:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c402:	scas   eax,DWORD PTR es:[rdi]
   14001c403:	jmp    QWORD PTR [rax]
   14001c405:	xchg   ebp,eax
   14001c406:	(bad)  
   14001c407:	call   FWORD PTR [rsi]
   14001c409:	cwde   
   14001c40a:	(bad)  
   14001c40b:	jmp    QWORD PTR [rax]
   14001c40d:	cwde   
   14001c40e:	(bad)  
   14001c40f:	jmp    QWORD PTR [rbx]
   14001c411:	xchg   edi,eax
   14001c412:	(bad)  
   14001c413:	jmp    QWORD PTR [rip+0x23ffff96]        # 0x16401c3af
   14001c419:	xchg   ebp,eax
   14001c41a:	(bad)  
   14001c41b:	call   FWORD PTR [rdi]
   14001c41d:	xchg   esp,eax
   14001c41e:	(bad)  
   14001c41f:	call   FWORD PTR [rip+0x25ffff94]        # 0x16601c3b9
   14001c425:	xchg   esi,eax
   14001c426:	(bad)  
   14001c427:	call   QWORD PTR [rsi-0x1b002e4e]
   14001c42d:	(bad)  
   14001c42e:	test   al,0xfa
   14001c430:	in     al,0xd0
   14001c432:	movabs al,ds:0xb6deefebb3dceef0
   14001c43b:	jmp    0x14001c42c
   14001c43d:	fdiv   QWORD PTR [rbx-0x4d241015]
   14001c443:	jmp    0x14001c434
   14001c445:	(bad)  [rax-0x4f251015]
   14001c44b:	jmp    0x14001c43a
   14001c44d:	fldcw  WORD PTR [rbp-0x38170616]
   14001c453:	repnz shl BYTE PTR [rdx-0x4a2700c3],1
   14001c45a:	outs   dx,DWORD PTR ds:[rsi]
   14001c45b:	(bad)  
   14001c45c:	jmp    0x14001c434
   14001c45e:	stos   DWORD PTR es:[rdi],eax
   14001c45f:	out    dx,eax
   14001c460:	(bad)  
   14001c461:	cwde   
   14001c462:	xor    edi,edi
   14001c464:	xlat   BYTE PTR ds:[rbx]
   14001c465:	mov    cl,0x69
   14001c467:	call   0x124c1a660
   14001c46c:	iret   
   14001c46d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001c496:	add    BYTE PTR [rax],al
   14001c498:	retf   
   14001c499:	stos   DWORD PTR es:[rdi],eax
   14001c49a:	pop    rbx
   14001c49b:	(bad)  
   14001c49c:	call   0x12fb97477
   14001c4a1:	loopne 0x14001c462
   14001c4a3:	movabs ds:0xaec2e1efabbddfed,eax
   14001c4ac:	out    0xcf,al
   14001c4ae:	movabs ds:0xbee0f1e6a5d1e6e8,al
   14001c4b7:	(bad)  
   14001c4b8:	icebp  
   14001c4b9:	loopne 0x14001c479
   14001c4bb:	xlat   BYTE PTR ds:[rbx]
   14001c4bc:	out    dx,eax
   14001c4bd:	fnsave [rdi-0x5e301923]
   14001c4c3:	mul    edi
   14001c4c5:	shr    DWORD PTR [rcx-0x5b443a0b],cl
   14001c4cb:	cli    
   14001c4cc:	(bad)  
   14001c4cd:	movabs ds:0x9142ffcda171ffb1,eax
   14001c4d6:	in     al,0xff
   14001c4d8:	imul   ebx,DWORD PTR [rdi-0x556e002c],0xbdc3ffc0
   14001c4e2:	lods   al,BYTE PTR ds:[rsi]
   14001c4e3:	cld    
   14001c4e4:	out    0xd1,al
   14001c4e6:	stos   DWORD PTR es:[rdi],eax
   14001c4e7:	imul   ebx
   14001c4e9:	fldcw  WORD PTR [rdi-0x4f26140f]
   14001c4ef:	in     al,dx
   14001c4f0:	lock fistp QWORD PTR [rax-0x48210f16]
   14001c4f7:	jmp    0x14001c4e8
   14001c4f9:	fnsave [rsi-0x4a221015]
   14001c4ff:	jmp    0x14001c4f0
   14001c501:	fdiv   QWORD PTR [rbx+rbp*8-0x144c2311]
   14001c508:	out    dx,eax
   14001c509:	(bad)  [rcx-0x4f251115]
   14001c50f:	(bad)  
   14001c510:	stc    
   14001c511:	jmp    0xe2d2b7df
   14001c516:	cmp    eax,0x6db2d5ff
   14001c51b:	jmp    0x14001c506
   14001c51d:	shl    DWORD PTR [rsi+0x3398c6f1],cl
   14001c523:	call   rsi
   14001c525:	mov    al,0x69
   14001c527:	call   0x124c1a720
   14001c52c:	fsubr  DWORD PTR [rdx-0x321c00ba]
   14001c532:	fwait
   14001c533:	push   0x0
	...
   14001c555:	add    BYTE PTR [rax],al
   14001c557:	add    dl,cl
   14001c559:	stos   DWORD PTR es:[rdi],eax
   14001c55a:	pop    rax
   14001c55b:	(bad)  
   14001c55c:	call   0x12eb87537
   14001c561:	fidivr WORD PTR [rbp-0x4421135e]
   14001c567:	stos   BYTE PTR es:[rdi],al
   14001c568:	out    dx,al
   14001c569:	fistp  QWORD PTR [rdi-0x5d311952]
   14001c56f:	jmp    0x125a7975b
   14001c574:	icebp  
   14001c575:	loopne 0x14001c534
   14001c577:	(bad)  
   14001c578:	lock fistp QWORD PTR [rdi+rdx*8-0x22442010]
   14001c580:	in     al,dx
   14001c581:	(bad)  
   14001c582:	lods   al,BYTE PTR ds:[rsi]
   14001c583:	imul   dh
   14001c585:	(bad)  [rbp+rbp*8-0x16472210]
   14001c58c:	out    dx,al
   14001c58d:	fdiv   QWORD PTR [rbp-0x4c241214]
   14001c593:	out    dx,al
   14001c594:	out    dx,al
   14001c595:	fdiv   QWORD PTR [rax+rsi*8-0x114a2212]
   14001c59c:	out    dx,eax
   14001c59d:	fnsave [rdi-0x48221014]
   14001c5a3:	(bad)  
   14001c5a4:	out    dx,eax
   14001c5a5:	fnsave [rdi-0x46200e17]
   14001c5ab:	jmp    0x12abba5a0
   14001c5b0:	lock fidiv WORD PTR [rdi-0x48210f15]
   14001c5b7:	jmp    0x14001c5a9
   14001c5b9:	fnsave [rdi-0x49220f15]
   14001c5bf:	jmp    0x14001c5b1
   14001c5c1:	fnsave [rbp-0x4a230f15]
   14001c5c7:	jmp    0x14001c5b9
   14001c5c9:	fdiv   QWORD PTR [rbx+rbp*8-0x164e2412]
   14001c5d0:	stc    
   14001c5d1:	jmp    0xe2d2b89f
   14001c5d6:	cmp    eax,0x69afd4ff
   14001c5db:	bnd call 0x106f865b1
   14001c5e1:	xchg   edi,eax
   14001c5e2:	xor    edi,edi
   14001c5e4:	fidiv  DWORD PTR [rcx-0x3011049e]
   14001c5ea:	cmp    edx,0xffffffe7
   14001c5ed:	mov    esp,0xffffff5a
   14001c5f2:	inc    DWORD PTR [rbp+0x0]
	...
   14001c615:	add    BYTE PTR [rax],al
   14001c617:	add    dl,dl
   14001c619:	mov    ch,0x6e
   14001c61b:	(bad)  
   14001c61c:	jmp    0x135cb77fa
   14001c621:	in     al,dx
   14001c622:	fadd   st,st(5)
   14001c624:	imul   dh
   14001c626:	fmul   st(7),st
   14001c628:	clc    
   14001c629:	lock loope 0x14001c600
   14001c62c:	cmc    
   14001c62d:	(bad)  
   14001c62e:	(bad)  
   14001c62f:	jmp    0x14001c624
   14001c631:	call   0x12cf8ba07
   14001c636:	fsubr  st,st(3)
   14001c638:	imul   ah
   14001c63a:	xlat   BYTE PTR ds:[rbx]
   14001c63b:	jmp    0x14001c633
   14001c63d:	in     al,dx
   14001c63e:	xlat   BYTE PTR ds:[rbx]
   14001c63f:	(bad)  
   14001c640:	cmc    
   14001c641:	(bad)  
   14001c642:	(bad)  
   14001c643:	icebp  
   14001c644:	hlt    
   14001c645:	call   0x127f6bb19
   14001c64a:	int    0xf3
   14001c64c:	hlt    
   14001c64d:	out    0xcc,eax
   14001c64f:	repz hlt 
   14001c651:	out    0xcc,eax
   14001c653:	repz hlt 
   14001c655:	out    0xcc,eax
   14001c657:	repz hlt 
   14001c659:	out    0xcb,eax
   14001c65b:	repz repnz jrcxz 0x14001c624
   14001c65f:	icebp  
   14001c660:	repnz jrcxz 0x14001c629
   14001c663:	repnz repnz jrcxz 0x14001c62d
   14001c667:	repnz repnz jrcxz 0x14001c631
   14001c66b:	repnz repnz jrcxz 0x14001c634
   14001c66f:	repnz icebp 
   14001c671:	loope  0x14001c635
   14001c673:	icebp  
   14001c674:	icebp  
   14001c675:	loope  0x14001c639
   14001c677:	repnz icebp 
   14001c679:	loope  0x14001c63b
   14001c67b:	icebp  
   14001c67c:	icebp  
   14001c67d:	loope  0x14001c63f
   14001c67f:	repnz icebp 
   14001c681:	fistp  QWORD PTR [rsi-0x44210f0f]
   14001c687:	lock out dx,eax
   14001c689:	fnstsw WORD PTR [rax-0x4b231210]
   14001c68f:	in     eax,dx
   14001c690:	stc    
   14001c691:	(bad)  
   14001c692:	retf   0xd8f3
   14001c695:	stos   BYTE PTR es:[rdi],al
   14001c696:	rex.RXB call r13
   14001c699:	mov    dl,0x6f
   14001c69b:	jmp    0x14001c685
   14001c69d:	rcr    BYTE PTR [rdi+0x3398c6f6],1
   14001c6a3:	call   rdx
   14001c6a5:	stos   DWORD PTR es:[rdi],eax
   14001c6a6:	rex.WRB cmc 
   14001c6a8:	shr    DWORD PTR [rbx-0x4a2913b1],1
   14001c6ae:	ins    DWORD PTR es:[rdi],dx
   14001c6af:	nop
   14001c6b0:	(bad)  
   14001c6b1:	(bad)  
   14001c6b2:	call   FWORD PTR [rbx]
	...
   14001c6d8:	int3   
   14001c6d9:	lods   eax,DWORD PTR ds:[rsi]
   14001c6da:	(bad)  
   14001c6db:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c6dc:	(bad)  
   14001c6dd:	mov    ecx,0xb4d5f679
   14001c6e2:	ins    BYTE PTR es:[rdi],dx
   14001c6e3:	repz (bad) 
   14001c6e5:	mov    dh,0x6e
   14001c6e7:	repz xlat BYTE PTR ds:[rbx]
   14001c6e9:	mov    dh,0x70
   14001c6eb:	cmc    
   14001c6ec:	fdivr  DWORD PTR [rcx-0x44250a8e]
   14001c6f2:	js     0x14001c6f0
   14001c6f4:	ffree  st(0)
   14001c6f6:	cmp    ebx,0xfc86c4de
   14001c6fc:	ffreep st(4)
   14001c6fe:	xchg   ebp,edi
   14001c700:	ffreep st(5)
   14001c702:	mov    esp,edi
   14001c704:	loope  0x14001c6cd
   14001c706:	mov    ?,esp
   14001c708:	in     al,0xcd
   14001c70a:	xchg   edi,eax
   14001c70b:	std    
   14001c70c:	in     eax,0xce
   14001c70e:	(bad)  
   14001c70f:	cld    
   14001c710:	in     eax,0xcf
   14001c712:	popf   
   14001c713:	cld    
   14001c714:	out    0xd1,eax
   14001c716:	sahf   
   14001c717:	cld    
   14001c718:	call   0x12afd69ee
   14001c71d:	(bad)  
   14001c71e:	stos   BYTE PTR es:[rdi],al
   14001c71f:	sti    
   14001c720:	in     eax,dx
   14001c721:	fidiv  DWORD PTR [rdx-0x4e251306]
   14001c727:	sti    
   14001c728:	in     eax,dx
   14001c729:	fnstenv [rdx-0x4c241106]
   14001c72f:	cli    
   14001c730:	out    dx,eax
   14001c731:	fidivr WORD PTR [rbx-0x401f0e07]
   14001c737:	stc    
   14001c738:	repnz in al,0xc5
   14001c73b:	stc    
   14001c73c:	repnz in al,0xc6
   14001c73f:	clc    
   14001c740:	repnz in eax,0xc7
   14001c743:	clc    
   14001c744:	repz out 0xca,al
   14001c747:	clc    
   14001c748:	hlt    
   14001c749:	call   0x127f7bf1b
   14001c74e:	int3   
   14001c74f:	hlt    
   14001c750:	stc    
   14001c751:	jmp    0xf5e3c61e
   14001c756:	push   rbx
   14001c757:	call   rbx
   14001c759:	stos   BYTE PTR es:[rdi],al
   14001c75a:	rex.WB clc 
   14001c75c:	shl    BYTE PTR [rax+rax*2+0x54a9d0fc],cl
   14001c763:	jge    0x14001c764
   14001c765:	(bad)  
   14001c766:	inc    DWORD PTR [rsi]
	...
   14001c79c:	call   0x1141a6772
   14001c7a1:	ret    0x3a8e
   14001c7a4:	fcmove st,st(0)
   14001c7a6:	nop
   14001c7a7:	(bad)  
   14001c7a8:	(bad)  
   14001c7a9:	sar    BYTE PTR [rdi+0x4b],0xd9
   14001c7ad:	ret    0x5783
   14001c7b0:	xlat   BYTE PTR ds:[rbx]
   14001c7b1:	mov    edi,0xb9d4637b
   14001c7b6:	outs   dx,BYTE PTR ds:[rsi]
   14001c7b7:	gs iret 
   14001c7b9:	scas   eax,DWORD PTR es:[rdi]
   14001c7ba:	pop    rax
   14001c7bb:	addr32 (bad) 
   14001c7bd:	scas   al,BYTE PTR es:[rdi]
   14001c7be:	push   rbp
   14001c7bf:	ins    BYTE PTR es:[rdi],dx
   14001c7c0:	iret   
   14001c7c1:	scas   eax,DWORD PTR es:[rdi]
   14001c7c2:	pop    rcx
   14001c7c3:	ins    DWORD PTR es:[rdi],dx
   14001c7c4:	(bad)  
   14001c7c5:	scas   al,BYTE PTR es:[rdi]
   14001c7c6:	pop    rcx
   14001c7c7:	jg     0x14001c797
   14001c7c9:	lods   eax,DWORD PTR ds:[rsi]
   14001c7ca:	pop    rcx
   14001c7cb:	test   esi,ecx
   14001c7cd:	lods   eax,DWORD PTR ds:[rsi]
   14001c7ce:	pop    rcx
   14001c7cf:	nop
   14001c7d0:	(bad)  
   14001c7d1:	lods   eax,DWORD PTR ds:[rsi]
   14001c7d2:	pop    rcx
   14001c7d3:	xchg   esp,eax
   14001c7d4:	int    0xac
   14001c7d6:	pop    rcx
   14001c7d7:	fwait
   14001c7d8:	shl    DWORD PTR [rbp-0x56325a96],cl
   14001c7de:	push   rbx
   14001c7df:	mov    bh,0xd0
   14001c7e1:	mov    cl,0x65
   14001c7e3:	mov    al,0xcc
   14001c7e5:	test   al,0x53
   14001c7e7:	(bad)  
   14001c7e8:	(bad)  
   14001c7e9:	test   eax,0xa9cecd56
   14001c7ee:	push   rbp
   14001c7ef:	ror    edi,1
   14001c7f1:	test   eax,0xa9ced655
   14001c7f6:	push   rbp
   14001c7f7:	(bad)  
   14001c7f9:	test   eax,0xa9cfe054
   14001c7fe:	push   rsi
   14001c7ff:	in     eax,0xd0
   14001c801:	stos   DWORD PTR es:[rdi],eax
   14001c802:	pop    rdx
   14001c803:	repnz iret 
   14001c805:	stos   BYTE PTR es:[rdi],al
   14001c806:	pop    rax
   14001c807:	repz (bad) 
   14001c809:	test   al,0x54
   14001c80b:	hlt    
   14001c80c:	int3   
   14001c80d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c80e:	rex.WB
   14001c80f:	repz enter 0x3a9c,0xef
   14001c814:	(bad)
   14001c817:	test   BYTE PTR [rax],al
	...
   14001cd8d:	add    BYTE PTR [rax],al
   14001cd8f:	add    bh,bh
   14001cd91:	(bad)  
   14001cd92:	inc    DWORD PTR [rax+0xff0f]
   14001cd98:	(bad)  
   14001cd99:	inc    eax
   14001cd9b:	add    BYTE PTR [rdi],al
   14001cd9d:	inc    DWORD PTR [rax]
   14001cd9f:	add    bh,bh
   14001cda1:	lock add BYTE PTR [rax],al
   14001cda4:	add    edi,edi
   14001cda6:	add    BYTE PTR [rax],al
   14001cda8:	cld    
   14001cda9:	add    BYTE PTR [rax],al
   14001cdab:	add    BYTE PTR [rax],al
   14001cdad:	inc    DWORD PTR [rax]
   14001cdaf:	add    al,dh
   14001cdb1:	add    BYTE PTR [rax],al
   14001cdb3:	add    BYTE PTR [rax],al
   14001cdb5:	jg     0x14001cdb7
   14001cdb7:	add    al,al
   14001cdb9:	add    BYTE PTR [rax],al
   14001cdbb:	add    BYTE PTR [rax],al
   14001cdbd:	(bad)  
   14001cdbe:	add    BYTE PTR [rax],al
   14001cdc0:	rol    BYTE PTR [rax],0x0
   14001cdc3:	add    BYTE PTR [rax],al
   14001cdc5:	(bad)  
   14001cdc6:	add    BYTE PTR [rax],al
   14001cdc8:	rol    BYTE PTR [rax],0x0
   14001cdcb:	add    BYTE PTR [rax],al
   14001cdcd:	sldt   WORD PTR [rax]
   14001cdd0:	rol    BYTE PTR [rax],0x0
   14001cdd3:	add    BYTE PTR [rax],al
   14001cdd5:	(bad)  
   14001cdd6:	add    BYTE PTR [rax],al
   14001cdd8:	rol    BYTE PTR [rax],0x0
   14001cddb:	add    BYTE PTR [rax],al
   14001cddd:	add    DWORD PTR [rax],eax
   14001cddf:	add    al,al
   14001cde1:	add    BYTE PTR [rax],al
   14001cde3:	add    BYTE PTR [rax],al
   14001cde5:	add    BYTE PTR [rax],al
   14001cde7:	add    al,al
   14001cde9:	add    BYTE PTR [rax],al
   14001cdeb:	add    BYTE PTR [rax],al
   14001cded:	jns    0x14001cdef
   14001cdef:	add    al,al
   14001cdf1:	add    BYTE PTR [rax],al
   14001cdf3:	add    BYTE PTR [rax],al
   14001cdf5:	jg     0x14001cdf7
   14001cdf7:	add    al,al
   14001cdf9:	add    BYTE PTR [rax],al
   14001cdfb:	add    BYTE PTR [rax],al
   14001cdfd:	jg     0x14001cdff
   14001cdff:	add    al,al
   14001ce01:	add    BYTE PTR [rax],al
   14001ce03:	add    BYTE PTR [rax],al
   14001ce05:	jg     0x14001ce07
   14001ce07:	add    al,al
   14001ce09:	add    BYTE PTR [rax],al
   14001ce0b:	add    BYTE PTR [rax],al
   14001ce0d:	jg     0x14001ce0f
   14001ce0f:	add    al,al
   14001ce11:	add    BYTE PTR [rax],al
   14001ce13:	add    BYTE PTR [rax],al
   14001ce15:	jg     0x14001ce17
   14001ce17:	add    al,al
   14001ce19:	add    BYTE PTR [rax],al
   14001ce1b:	add    BYTE PTR [rax],al
   14001ce1d:	jg     0x14001ce1f
   14001ce1f:	add    al,al
   14001ce21:	add    BYTE PTR [rax],al
   14001ce23:	add    BYTE PTR [rax],al
   14001ce25:	jg     0x14001ce27
   14001ce27:	add    al,al
   14001ce29:	add    BYTE PTR [rax],al
   14001ce2b:	add    BYTE PTR [rax],al
   14001ce2d:	jg     0x14001ce2f
   14001ce2f:	add    al,al
   14001ce31:	add    BYTE PTR [rax],al
   14001ce33:	add    BYTE PTR [rax],al
   14001ce35:	jg     0x14001ce37
   14001ce37:	add    al,al
   14001ce39:	add    BYTE PTR [rax],al
   14001ce3b:	add    BYTE PTR [rax],al
   14001ce3d:	jg     0x14001ce3f
   14001ce3f:	add    al,al
   14001ce41:	add    BYTE PTR [rax],al
   14001ce43:	add    BYTE PTR [rax],al
   14001ce45:	jg     0x14001ce47
   14001ce47:	add    al,al
   14001ce49:	add    BYTE PTR [rax],al
   14001ce4b:	add    BYTE PTR [rax],al
   14001ce4d:	jg     0x14001ce4f
   14001ce4f:	add    al,al
   14001ce51:	add    BYTE PTR [rax],al
   14001ce53:	add    BYTE PTR [rax],al
   14001ce55:	jg     0x14001ce57
   14001ce57:	add    al,al
   14001ce59:	add    BYTE PTR [rax],al
   14001ce5b:	add    BYTE PTR [rax],al
   14001ce5d:	jg     0x14001ce5f
   14001ce5f:	add    al,al
   14001ce61:	add    BYTE PTR [rax],al
   14001ce63:	add    BYTE PTR [rax],al
   14001ce65:	jg     0x14001ce67
   14001ce67:	add    al,al
   14001ce69:	add    BYTE PTR [rax],al
   14001ce6b:	add    BYTE PTR [rax],al
   14001ce6d:	jg     0x14001ce6f
   14001ce6f:	add    al,al
   14001ce71:	add    BYTE PTR [rax],al
   14001ce73:	add    BYTE PTR [rax],al
   14001ce75:	jg     0x14001ce77
   14001ce77:	add    al,al
   14001ce79:	add    BYTE PTR [rax],al
   14001ce7b:	add    BYTE PTR [rax],al
   14001ce7d:	jg     0x14001ce7f
   14001ce7f:	add    al,al
   14001ce81:	add    BYTE PTR [rax],al
   14001ce83:	add    BYTE PTR [rax],al
   14001ce85:	jg     0x14001ce87
   14001ce87:	add    al,al
   14001ce89:	add    BYTE PTR [rax],al
   14001ce8b:	add    BYTE PTR [rax],al
   14001ce8d:	jg     0x14001ce8f
   14001ce8f:	add    al,al
   14001ce91:	add    BYTE PTR [rax],al
   14001ce93:	add    BYTE PTR [rax],al
   14001ce95:	jg     0x14001ce97
   14001ce97:	add    al,al
   14001ce99:	add    BYTE PTR [rax],al
   14001ce9b:	add    BYTE PTR [rax],al
   14001ce9d:	jg     0x14001ce9f
   14001ce9f:	add    al,al
   14001cea1:	add    BYTE PTR [rax],al
   14001cea3:	add    BYTE PTR [rax],al
   14001cea5:	jg     0x14001cea7
   14001cea7:	add    al,al
   14001cea9:	add    BYTE PTR [rax],al
   14001ceab:	add    BYTE PTR [rax],al
   14001cead:	jg     0x14001ceaf
   14001ceaf:	add    al,al
   14001ceb1:	add    BYTE PTR [rax],al
   14001ceb3:	add    BYTE PTR [rax],al
   14001ceb5:	jg     0x14001ceb7
   14001ceb7:	add    al,al
   14001ceb9:	add    BYTE PTR [rax],al
   14001cebb:	add    BYTE PTR [rax],al
   14001cebd:	jg     0x14001cebf
   14001cebf:	add    al,al
   14001cec1:	add    BYTE PTR [rax],al
   14001cec3:	add    BYTE PTR [rax],al
   14001cec5:	jg     0x14001cec7
   14001cec7:	add    al,al
   14001cec9:	add    BYTE PTR [rax],al
   14001cecb:	add    BYTE PTR [rbx],al
   14001cecd:	inc    DWORD PTR [rax]
   14001cecf:	add    al,ah
   14001ced1:	add    BYTE PTR [rax],al
   14001ced3:	add    BYTE PTR [rdi],bh
   14001ced5:	inc    DWORD PTR [rax]
   14001ced7:	add    bh,bh
   14001ced9:	(bad)  
   14001ceda:	(bad)  
   14001cedb:	(bad)  
   14001cedc:	(bad)  
   14001cedd:	inc    DWORD PTR [rax]
   14001cedf:	add    bh,bh
   14001cee1:	(bad)  
   14001cee2:	(bad)  
   14001cee3:	(bad)  
   14001cee4:	(bad)  
   14001cee5:	inc    DWORD PTR [rax]
   14001cee7:	add    bh,bh
   14001cee9:	(bad)  
   14001ceea:	(bad)  
   14001ceeb:	(bad)  
   14001ceec:	(bad)  
   14001ceed:	inc    DWORD PTR [rax]
   14001ceef:	add    bh,bh
   14001cef1:	(bad)  
   14001cef2:	(bad)  
   14001cef3:	(bad)  
   14001cef4:	(bad)  
   14001cef5:	inc    DWORD PTR [rax]
   14001cef7:	add    bh,bh
   14001cef9:	(bad)  
   14001cefa:	(bad)  
   14001cefb:	(bad)  
   14001cefc:	(bad)  
   14001cefd:	inc    DWORD PTR [rax]
   14001ceff:	add    bh,bh
   14001cf01:	(bad)  
   14001cf02:	(bad)  
   14001cf03:	(bad)  
   14001cf04:	(bad)  
   14001cf05:	inc    DWORD PTR [rax]
   14001cf07:	add    bh,bh
   14001cf09:	(bad)  
   14001cf0a:	(bad)  
   14001cf0b:	(bad)  
   14001cf0c:	(bad)  
   14001cf0d:	inc    DWORD PTR [rax]
   14001cf0f:	add    BYTE PTR [rax],ch
   14001cf11:	add    BYTE PTR [rax],al
   14001cf13:	add    BYTE PTR [rax],ah
   14001cf15:	add    BYTE PTR [rax],al
   14001cf17:	add    BYTE PTR [rax+0x0],al
   14001cf1a:	add    BYTE PTR [rax],al
   14001cf1c:	add    DWORD PTR [rax],eax
   14001cf1e:	and    BYTE PTR [rax],al
   14001cf20:	add    BYTE PTR [rax],al
   14001cf22:	add    BYTE PTR [rax],al
   14001cf24:	adc    BYTE PTR [rax],0x0
	...
   14001cfe3:	add    bh,bh
   14001cfe5:	(bad)  
   14001cfe6:	inc    DWORD PTR [rcx]
	...
   14001cff0:	(bad)  
   14001cff1:	push   rsi
   14001cff3:	add    DWORD PTR [rax],eax
   14001cff5:	add    BYTE PTR [rax],al
   14001cff7:	add    bh,bh
   14001cff9:	(bad)  
   14001cffa:	jmp    0x12701cf02
   14001cfff:	add    edi,edi
   14001d001:	jmp    rax
   14001d003:	add    eax,0x6dbffff
   14001d008:	jmp    0x14001cfea
   14001d00a:	mov    al,0xd
   14001d00c:	sar    DWORD PTR [rbx-0x593de176],1
   14001d012:	jae    0x14001d03f
   14001d014:	scas   al,BYTE PTR es:[rdi]
   14001d015:	xchg   edx,eax
   14001d016:	movsxd eax,DWORD PTR [rdx]
	...
   14001d04c:	scas   eax,DWORD PTR es:[rdi]
   14001d04d:	xchg   esp,eax
   14001d04e:	add    DWORD PTR gs:[rbp-0x41fe9567],esi
   14001d055:	movabs ds:0x718d013b68830374,al
   14001d05e:	rex.X add eax,0x6497894
   14001d064:	sahf   
   14001d065:	(bad)  
   14001d066:	push   rbx
   14001d067:	or     ch,BYTE PTR [rdi-0x48eda770]
   14001d06d:	cwde   
   14001d06e:	(bad)  
   14001d06f:	sbb    al,0xc2
   14001d071:	movabs ds:0x94b3455a92b13269,eax
   14001d07a:	pop    rsp
   14001d07b:	pop    rcx
   14001d07c:	mov    bl,0x94
   14001d07e:	pop    rsp
   14001d07f:	jno    0x14001d03a
   14001d081:	(bad)  
   14001d082:	(bad)  
   14001d083:	fwait
   14001d084:	mov    esp,0xbeb1669d
   14001d089:	movabs al,ds:0x9ab8c96ea2bfc36b
   14001d092:	gs (bad) 
   14001d094:	mov    dh,0x92
   14001d096:	rex.X mov spl,0x0
	...
   14001d0bd:	add    BYTE PTR [rax],al
   14001d0bf:	add    BYTE PTR [rbx-0x67fe8f61],bh
   14001d0c5:	jl     0x14001d115
   14001d0c7:	(bad)  
   14001d0c8:	scas   al,BYTE PTR es:[rdi]
   14001d0c9:	(bad)  
   14001d0ca:	push   rsi
   14001d0cb:	(bad)  
   14001d0cc:	mov    bl,0x94
   14001d0ce:	pop    rbx
   14001d0cf:	and    bh,BYTE PTR [rsp+rbx*4-0x5d3ed09e]
   14001d0d6:	push   0x5a97b741
   14001d0db:	gs mov edx,0xbd7a5e99
   14001d0e1:	lahf   
   14001d0e2:	imul   edx,DWORD PTR [rbp-0x55965f43],0xbd6da1bd
   14001d0ec:	mov    edi,0xc7cf70a3
   14001d0f1:	stos   DWORD PTR es:[rdi],eax
   14001d0f2:	jns    0x14001d0cc
   14001d0f4:	shl    BYTE PTR [rsp+rax*4-0x77492e1f],1
   14001d0fb:	in     al,0xd1
   14001d0fd:	mov    bh,0x8a
   14001d0ff:	out    0xd5,eax
   14001d101:	mov    esi,0xbfd6e495
   14001d106:	cdq    
   14001d107:	in     al,0xd7
   14001d109:	rcr    BYTE PTR [rdx-0x643f281b],0xe4
   14001d110:	loope  0x14001d0da
   14001d112:	popf   
   14001d113:	idiv   BYTE PTR [rsi-0x2c01b067]
   14001d119:	mov    ch,0x7b
   14001d11b:	in     eax,0xb2
   14001d11d:	lea    eax,[rcx-0x3a]
   14001d120:	cmp    bh,BYTE PTR [rdx]
   14001d122:	cmp    cl,BYTE PTR [rcx]
   14001d124:	add    BYTE PTR [rax],al
   14001d126:	add    BYTE PTR [rax],al
   14001d128:	cmp    bh,BYTE PTR [rdx]
   14001d12a:	cmp    al,BYTE PTR [rdx]
	...
   14001d140:	mov    dl,0x93
   14001d142:	pop    rcx
   14001d143:	sahf   
   14001d144:	mov    edx,0xbcad699d
   14001d149:	movabs al,ds:0xa4c0d36d9fbcc26c
   14001d152:	jae    0x14001d12f
   14001d154:	(bad)  
   14001d155:	lods   al,BYTE PTR ds:[rsi]
   14001d156:	jnp    0x14001d138
   14001d158:	shl    BYTE PTR [rsi-0x442a1975],1
   14001d15e:	xchg   edx,eax
   14001d15f:	call   0x12897923b
   14001d164:	fcmovnb st,st(4)
   14001d166:	pushf  
   14001d167:	call   0x129a2994b
   14001d16c:	faddp  st(7),st
   14001d16e:	movabs eax,ds:0x9bc1d8e69ec4dbe9
   14001d177:	in     al,0xd9
   14001d179:	rcr    DWORD PTR [rbx-0x5c341d1e],0xe5
   14001d180:	loopne 0x14001d14a
   14001d182:	movabs eax,ds:0x9ec8e0e79fc7e0e5
   14001d18b:	(bad)  
   14001d18c:	ffreep st(7)
   14001d18e:	popf   
   14001d18f:	jmp    0x134a09d7a
   14001d194:	mov    esp,0xe2fe4e98
   14001d199:	retf   
   14001d19a:	movabs ds:0x79acc8ff4f99bedd,eax
   14001d1a3:	loop   0x14001d167
   14001d1a5:	popf   
   14001d1a6:	push   rbx
   14001d1a7:	mov    al,0x3a
   14001d1a9:	cmp    bh,BYTE PTR [rdx]
   14001d1ab:	sub    bh,BYTE PTR [rdx]
   14001d1ad:	cmp    bh,BYTE PTR [rdx]
   14001d1af:	add    al,BYTE PTR [rax]
	...
   14001d1bd:	add    BYTE PTR [rax],al
   14001d1bf:	add    ah,cl
   14001d1c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d1c2:	pop    rbx
   14001d1c3:	(bad)  
   14001d1c5:	ret    
   14001d1c6:	xchg   esi,eax
   14001d1c7:	std    
   14001d1c8:	jmp    0x123e281a0
   14001d1cd:	int    0xa9
   14001d1cf:	loopne 0x14001d1b7
   14001d1d1:	iret   
   14001d1d2:	stos   BYTE PTR es:[rdi],al
   14001d1d3:	loop   0x14001d1b7
   14001d1d5:	int3   
   14001d1d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d1d7:	in     al,0xdc
   14001d1d9:	(bad)  
   14001d1da:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d1db:	loope  0x14001d1bf
   14001d1dd:	int    0xaa
   14001d1df:	fucomip st,st(4)
   14001d1e1:	(bad)  
   14001d1e2:	mov    dl,0xe6
   14001d1e4:	repz fdiv QWORD PTR [rbp-0x48200813]
   14001d1eb:	icebp  
   14001d1ec:	neg    dh
   14001d1ee:	mov    bh,0xee
   14001d1f0:	out    dx,al
   14001d1f1:	xlat   BYTE PTR ds:[rbx]
   14001d1f2:	mov    al,0xe9
   14001d1f4:	jmp    0x14001d1ca
   14001d1f6:	lods   eax,DWORD PTR ds:[rsi]
   14001d1f7:	call   0x127a59cdd
   14001d1fc:	call   0x127ec76d0
   14001d201:	int    0xa2
   14001d203:	in     eax,dx
   14001d204:	in     al,0xca
   14001d206:	lahf   
   14001d207:	in     eax,dx
   14001d208:	in     al,0xca
   14001d20a:	lahf   
   14001d20b:	out    dx,al
   14001d20c:	jrcxz  0x14001d1d7
   14001d20e:	lahf   
   14001d20f:	jmp    0x14001d1fb
   14001d211:	iret   
   14001d212:	movabs ds:0xb7def5fe4f99bef6,al
   14001d21b:	cmc    
   14001d21c:	mov    ebp,0xf5ff4e98
   14001d221:	fidiv  WORD PTR [rdi+0x539dc2ee]
   14001d227:	repnz cmp bh,BYTE PTR [rdx]
   14001d22a:	cmp    al,BYTE PTR [rax+0x3a]
   14001d22d:	cmp    bh,BYTE PTR [rdx]
   14001d22f:	sub    BYTE PTR [rdx],bh
   14001d231:	cmp    bh,BYTE PTR [rdx]
   14001d233:	xor    edi,DWORD PTR [rdx]
   14001d235:	cmp    bh,BYTE PTR [rdx]
   14001d237:	or     eax,DWORD PTR [rax]
   14001d239:	add    BYTE PTR [rax],al
   14001d23b:	add    BYTE PTR [rax],al
   14001d23d:	add    BYTE PTR [rax],al
   14001d23f:	add    dl,bl
   14001d241:	mov    ch,0x6c
   14001d243:	sti    
   14001d244:	(bad)  
   14001d246:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d247:	int3   
   14001d248:	repnz jrcxz 0x14001d215
   14001d24b:	mov    dl,0xe5
   14001d24d:	iret   
   14001d24e:	stos   DWORD PTR es:[rdi],eax
   14001d24f:	(bad)  
   14001d250:	fcmovnb st,st(5)
   14001d252:	lahf   
   14001d253:	loop   0x14001d231
   14001d255:	(bad)  
   14001d256:	movabs eax,ds:0xbac0c0dfb9d4e2e0
   14001d25f:	test   BYTE PTR [rbx+0x7d],0xce
   14001d263:	std    
   14001d264:	sub    DWORD PTR [rdi-0x1b],ebp
   14001d267:	call   QWORD PTR [rip+0x26fff664]        # 0x16701c8d1
   14001d26d:	push   0xffffffffffffffe9
   14001d26f:	inc    DWORD PTR [rsi+0x77]
   14001d272:	(bad)  
   14001d273:	push   QWORD PTR [rdi-0x2c003341]
   14001d279:	(bad)  
   14001d27a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d27b:	stc    
   14001d27c:	shl    BYTE PTR [rdi-0x341c0e70],1
   14001d282:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d283:	in     al,0xec
   14001d285:	shr    DWORD PTR [rcx-0x5930171c],cl
   14001d28b:	in     al,0xe7
   14001d28d:	(bad)  
   14001d28e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d28f:	loope  0x14001d27d
   14001d291:	shl    BYTE PTR [rsi+0x509abff1],cl
   14001d297:	std    
   14001d298:	lock (bad) [rbp+0x4f99befa]
   14001d29f:	push   rax
   14001d2a1:	fnsave [rsi+0x529cc1f8]
   14001d2a7:	(bad)  
   14001d2a8:	cmp    bh,BYTE PTR [rdx]
   14001d2aa:	cmp    bl,BYTE PTR [rip+0x1d3a3a3a]        # 0x15d3c0cea
   14001d2b0:	cmp    bh,BYTE PTR [rdx]
   14001d2b2:	cmp    bl,BYTE PTR [rip+0xe3a3a3a]        # 0x14e3c0cf2
	...
   14001d2c0:	(bad)  
   14001d2c1:	mov    cl,0x66
   14001d2c3:	neg    ah
   14001d2c5:	(bad)  
   14001d2c6:	movabs ds:0xaccfe3b4c6e2f2d1,al
   14001d2cf:	rcl    esp,1
   14001d2d1:	mov    esi,0xcfd4e798
   14001d2d6:	(bad)
   14001d2d9:	jg     0x14001d2ad
   14001d2db:	clc    
   14001d2dc:	(bad)  
   14001d2dd:	outs   dx,BYTE PTR ds:[rsi]
   14001d2de:	out    dx,eax
   14001d2df:	std    
   14001d2e0:	sbb    BYTE PTR [rbp-0xe],ah
   14001d2e3:	jmp    QWORD PTR [rcx]
   14001d2e5:	push   0xfffffffffffffff1
   14001d2e7:	jmp    QWORD PTR [rbx+rbp*2]
   14001d2ea:	out    dx,eax
   14001d2eb:	jmp    QWORD PTR [rax]
   14001d2ed:	imul   ebp,edi,0xf1641aff
   14001d2f3:	dec    DWORD PTR [rip+0x31fff75f]        # 0x17201ca58
   14001d2f9:	jo     0x14001d2da
   14001d2fb:	inc    esp
   14001d2fd:	ret    0xffbe
   14001d300:	(bad)
   14001d303:	repnz loopne 0x14001d2cf
   14001d306:	movabs ds:0xa8d0e9e4acd5ede4,eax
   14001d30f:	loope  0x14001d2ff
   14001d311:	(bad)  
   14001d312:	test   al,0xf1
   14001d314:	mov    edi,0xf0fd519b
   14001d319:	fdiv   QWORD PTR [rsi+0x509bbff9]
   14001d31f:	push   rax
   14001d321:	fnsave [rsi+0x529cc1f8]
   14001d327:	inc    DWORD PTR [rax]
	...
   14001d33d:	add    BYTE PTR [rax],al
   14001d33f:	add    ch,dl
   14001d341:	mov    al,0x66
   14001d343:	neg    ah
   14001d345:	(bad)  
   14001d346:	movabs ds:0xb1d1e3b3c7e1f1d1,al
   14001d34f:	retf   0xc6c6
   14001d352:	sar    dl,0x3b
   14001d355:	jge    0x14001d330
   14001d357:	sti    
   14001d358:	adc    eax,0x15fef267
   14001d35d:	data16 out dx,al
   14001d35f:	dec    DWORD PTR [rsi]
   14001d361:	(bad)  
   14001d362:	lock call QWORD PTR [rsi]
   14001d365:	bnd jmp WORD PTR [rsi]
   14001d369:	outs   dx,BYTE PTR ds:[rsi]
   14001d36a:	bnd jmp QWORD PTR [rdi]
   14001d36d:	outs   dx,BYTE PTR ds:[rsi]
   14001d36e:	bnd jmp QWORD PTR [rdi]
   14001d371:	ins    DWORD PTR es:[rdi],dx
   14001d372:	repnz jmp FWORD PTR [rcx]
   14001d375:	outs   dx,BYTE PTR ds:[rsi]
   14001d376:	repnz call FWORD PTR [rdi+riz*2]
   14001d37a:	out    dx,eax
   14001d37b:	call   FWORD PTR [rdx]
   14001d37d:	addr32 out dx,eax
   14001d37f:	(bad)  
   14001d380:	mov    esi,0xc3ffc2c1
   14001d385:	stos   BYTE PTR es:[rdi],al
   14001d386:	xor    bl,0xe5
   14001d389:	int    0xa5
   14001d38b:	jrcxz  0x14001d376
   14001d38d:	shr    DWORD PTR [rdx-0x562a101f],1
   14001d393:	icebp  
   14001d394:	rcr    BYTE PTR [rcx+rdx*2-0x49230f03],0xf9
   14001d39c:	rcr    BYTE PTR [rbx-0x210f00af],0xb6
   14001d3a3:	clc    
   14001d3a4:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001d3c0:	(bad)  
   14001d3c1:	mov    al,0x66
   14001d3c3:	neg    ah
   14001d3c5:	(bad)  
   14001d3c6:	movabs eax,ds:0xcfd9deafc9e0eed2
   14001d3cf:	fdiv   DWORD PTR [rsi]
   14001d3d1:	jp     0x14001d3bd
   14001d3d3:	(bad)  
   14001d3d4:	adc    ch,BYTE PTR [rax-0xd]
   14001d3d7:	jmp    FWORD PTR [rcx+rdi*2]
   14001d3da:	repnz (bad) 
   14001d3dc:	(bad)  
   14001d3dd:	(bad)  
   14001d3de:	std    
   14001d3df:	dec    esi
   14001d3e1:	loopne 0x14001d3dd
   14001d3e3:	push   QWORD PTR [rip+0x6fff27c]        # 0x14701c665
   14001d3e9:	pop    rsi
   14001d3ea:	repnz call FWORD PTR [rsi]
   14001d3ed:	ins    BYTE PTR es:[rdi],dx
   14001d3ee:	bnd jmp QWORD PTR [rdi]
   14001d3f1:	jno    0x14001d3e5
   14001d3f3:	jmp    QWORD PTR [rsi]
   14001d3f5:	outs   dx,DWORD PTR ds:[rsi]
   14001d3f6:	bnd jmp QWORD PTR [rdi]
   14001d3f9:	outs   dx,DWORD PTR ds:[rsi]
   14001d3fa:	bnd jmp QWORD PTR [rdx]
   14001d3fd:	push   0xffffffffffffffef
   14001d3ff:	call   FWORD PTR [rsi]
   14001d401:	ins    BYTE PTR es:[rdi],dx
   14001d402:	in     eax,dx
   14001d403:	(bad)  
   14001d404:	mov    edi,0xbdffb1ba
   14001d409:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d40a:	jge    0x14001d3fd
   14001d40c:	in     al,0xcc
   14001d40e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d40f:	in     eax,0xef
   14001d411:	(bad)  
   14001d412:	test   eax,0x519cc0f1
   14001d417:	std    
   14001d418:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d41f:	push   rax
   14001d421:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d427:	inc    DWORD PTR [rax]
	...
   14001d43d:	add    BYTE PTR [rax],al
   14001d43f:	add    ch,dl
   14001d441:	mov    cl,0x66
   14001d443:	neg    cl
   14001d445:	(bad)
   14001d448:	in     al,dx
   14001d449:	loope  0x14001d417
   14001d44b:	mov    dl,0x5a
   14001d44d:	mov    edx,edi
   14001d44f:	call   QWORD PTR [rax]
   14001d451:	imul   edi,ebp,0xffffffff
   14001d454:	or     al,0x68
   14001d456:	lock (bad) 
   14001d458:	jnp    0x14001d406
   14001d45a:	idiv   bh
   14001d45c:	(bad)  
   14001d45d:	(bad)  
   14001d45e:	(bad)  
   14001d45f:	(bad)  
   14001d460:	(bad)  
   14001d461:	(bad)  
   14001d462:	(bad)  
   14001d463:	(bad)  
   14001d464:	(bad)  
   14001d465:	(bad)  
   14001d466:	(bad)  
   14001d467:	call   FWORD PTR [rax+0x18fff8be]
   14001d46d:	imul   esi,ecx,0xffffffff
   14001d470:	adc    ah,BYTE PTR [rbp-0xe]
   14001d473:	jmp    QWORD PTR [rbx]
   14001d475:	jo     0x14001d469
   14001d477:	jmp    QWORD PTR [rdi]
   14001d479:	jno    0x14001d46d
   14001d47b:	jmp    QWORD PTR [rdi]
   14001d47d:	jo     0x14001d471
   14001d47f:	call   QWORD PTR [rsi]
   14001d481:	repz dec DWORD PTR [ebx-0x7c]
   14001d486:	(bad)  
   14001d488:	shr    DWORD PTR [rsi-0x4d370675],0x8a
   14001d48f:	lock repnz fsubr DWORD PTR [rbp+0x519cc0f0]
   14001d497:	std    
   14001d498:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d49f:	push   rax
   14001d4a1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d4a7:	inc    DWORD PTR [rax]
	...
   14001d4bd:	add    BYTE PTR [rax],al
   14001d4bf:	add    ch,dl
   14001d4c1:	mov    cl,0x66
   14001d4c3:	neg    edx
   14001d4c5:	(bad)  
   14001d4c6:	test   al,0xc8
   14001d4c8:	(bad)  
   14001d4ca:	ror    dh,1
   14001d4cc:	and    BYTE PTR [rdx-0x6],dh
   14001d4cf:	jmp    QWORD PTR [rip+0xafff37b]        # 0x14b01c850
   14001d4d5:	push   0xffffffffb07ffff0
   14001d4da:	idiv   bh
   14001d4dc:	(bad)  
   14001d4dd:	(bad)  
   14001d4de:	(bad)  
   14001d4df:	(bad)  
   14001d4e0:	(bad)  
   14001d4e1:	(bad)  
   14001d4e2:	(bad)  
   14001d4e3:	(bad)  
   14001d4e4:	(bad)  
   14001d4e5:	(bad)  
   14001d4e6:	(bad)  
   14001d4e7:	(bad)  
   14001d4e8:	(bad)  
   14001d4e9:	(bad)  
   14001d4ea:	(bad)  
   14001d4eb:	jmp    rdx
   14001d4ed:	in     eax,dx
   14001d4ee:	sti    
   14001d4ef:	call   FWORD PTR [rax-0x6a]
   14001d4f2:	repz call QWORD PTR [rdx]
   14001d4f5:	push   0x6e1bfff0
   14001d4fa:	bnd jmp QWORD PTR [rip+0x27fff273]        # 0x16801c774
   14001d501:	jae    0x14001d4f3
   14001d503:	call   QWORD PTR [rcx]
   14001d505:	push   0xfffffffffffffffa
   14001d507:	(bad)  
   14001d508:	mov    ebx,0xcaffb1b8
   14001d50d:	mov    bl,0x8b
   14001d50f:	out    dx,al
   14001d510:	cmc    
   14001d511:	fld    TBYTE PTR [rdi+0x519cc0ee]
   14001d517:	std    
   14001d518:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d51f:	push   rax
   14001d521:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d527:	inc    DWORD PTR [rax]
	...
   14001d53d:	add    BYTE PTR [rax],al
   14001d53f:	add    ch,dl
   14001d541:	mov    al,0x66
   14001d543:	neg    esp
   14001d545:	retf   0xc6ac
   14001d548:	jle    0x14001d4eb
   14001d54a:	ret    
   14001d54b:	out    dx,al
   14001d54c:	adc    dh,BYTE PTR [rdx-0x4]
   14001d54f:	jmp    FWORD PTR [rcx+rax*4]
   14001d552:	hlt    
   14001d553:	dec    DWORD PTR [rax]
   14001d555:	imul   esi,esp,0xffffffff
   14001d558:	jle    0x14001d50b
   14001d55a:	idiv   bh
   14001d55c:	(bad)  
   14001d55d:	(bad)  
   14001d55e:	(bad)  
   14001d55f:	(bad)  
   14001d560:	(bad)  
   14001d561:	(bad)  
   14001d562:	(bad)  
   14001d563:	(bad)  
   14001d564:	(bad)  
   14001d565:	(bad)  
   14001d566:	(bad)  
   14001d567:	(bad)  
   14001d568:	(bad)  
   14001d569:	(bad)  
   14001d56a:	(bad)  
   14001d56b:	(bad)  
   14001d56c:	(bad)  
   14001d56d:	(bad)  
   14001d56e:	(bad)  
   14001d56f:	(bad)  
   14001d570:	(bad)  
   14001d571:	(bad)  
   14001d572:	(bad)  
   14001d573:	jmp    FWORD PTR [rbp+0x2bfff9cc]
   14001d579:	jp     0x14001d56d
   14001d57b:	call   QWORD PTR [rcx]
   14001d57d:	push   0x7422fff3
   14001d582:	lock call QWORD PTR [rbx]
   14001d585:	imul   edi,ecx,0xffffffff
   14001d588:	fs mov esi,cs
   14001d58b:	inc    ebp
   14001d58d:	lods   eax,DWORD PTR ds:[rsi]
   14001d58e:	test   ah,dh
   14001d590:	repnz fsubr DWORD PTR [rbp+0x519cc0ee]
   14001d597:	std    
   14001d598:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d59f:	push   rax
   14001d5a1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d5a7:	inc    DWORD PTR [rax]
	...
   14001d5bd:	add    BYTE PTR [rax],al
   14001d5bf:	add    ch,dl
   14001d5c1:	mov    al,0x67
   14001d5c3:	neg    ah
   14001d5c5:	leave  
   14001d5c6:	stos   BYTE PTR es:[rdi],al
   14001d5c7:	retf   0x894c
   14001d5ca:	(bad)  
   14001d5cc:	sbb    BYTE PTR [rcx-0x2],bh
   14001d5cf:	jmp    FWORD PTR [rsp+rax*4]
   14001d5d2:	hlt    
   14001d5d3:	dec    DWORD PTR [rax]
   14001d5d5:	outs   dx,BYTE PTR ds:[rsi]
   14001d5d6:	cmc    
   14001d5d7:	inc    DWORD PTR [rax-0x84c]
   14001d5dd:	(bad)  
   14001d5de:	(bad)  
   14001d5df:	(bad)  
   14001d5e0:	(bad)  
   14001d5e1:	(bad)  
   14001d5e2:	(bad)  
   14001d5e3:	(bad)  
   14001d5e4:	(bad)  
   14001d5e5:	(bad)  
   14001d5e6:	(bad)  
   14001d5e7:	(bad)  
   14001d5e8:	(bad)  
   14001d5e9:	(bad)  
   14001d5ea:	(bad)  
   14001d5eb:	(bad)  
   14001d5ec:	(bad)  
   14001d5ed:	(bad)  
   14001d5ee:	(bad)  
   14001d5ef:	(bad)  
   14001d5f0:	(bad)  
   14001d5f1:	(bad)  
   14001d5f2:	(bad)  
   14001d5f3:	(bad)  
   14001d5f4:	(bad)  
   14001d5f5:	(bad)  
   14001d5f6:	(bad)  
   14001d5f7:	(bad)  
   14001d5f8:	(bad)  
   14001d5f9:	(bad)  
   14001d5fa:	(bad)  
   14001d5fb:	push   QWORD PTR [rax+rbp*4-0x9]
   14001d5ff:	jmp    QWORD PTR [rbx]
   14001d601:	ja     0x14001d5f7
   14001d603:	call   QWORD PTR [rip+0x40fff56d]        # 0x18101cb76
   14001d609:	and    edi,0xffffffff
   14001d60c:	(bad)  
   14001d60d:	scas   al,BYTE PTR es:[rdi]
   14001d60e:	test   edi,esi
   14001d610:	in     al,dx
   14001d611:	shl    BYTE PTR [rdi+0x529cc0ef],cl
   14001d617:	std    
   14001d618:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d61f:	push   rax
   14001d621:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d627:	inc    DWORD PTR [rax]
	...
   14001d63d:	add    BYTE PTR [rax],al
   14001d63f:	add    ch,dl
   14001d641:	mov    al,0x67
   14001d643:	hlt    
   14001d644:	fcmovb st,st(7)
   14001d646:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d647:	(bad)  
   14001d648:	xor    bh,BYTE PTR [rdi-0x14]
   14001d64b:	(bad)  
   14001d64c:	sbb    eax,0x2cffff7f
   14001d651:	test   ebp,esi
   14001d653:	dec    DWORD PTR [rcx]
   14001d655:	jb     0x14001d64c
   14001d657:	inc    DWORD PTR [rcx-0x74b]
   14001d65d:	(bad)  
   14001d65e:	(bad)  
   14001d65f:	(bad)  
   14001d660:	(bad)  
   14001d661:	(bad)  
   14001d662:	(bad)  
   14001d663:	(bad)  
   14001d664:	(bad)  
   14001d665:	(bad)  
   14001d666:	(bad)  
   14001d667:	(bad)  
   14001d668:	(bad)  
   14001d669:	(bad)  
   14001d66a:	(bad)  
   14001d66b:	(bad)  
   14001d66c:	(bad)  
   14001d66d:	(bad)  
   14001d66e:	(bad)  
   14001d66f:	(bad)  
   14001d670:	(bad)  
   14001d671:	(bad)  
   14001d672:	(bad)  
   14001d673:	(bad)  
   14001d674:	(bad)  
   14001d675:	(bad)  
   14001d676:	(bad)  
   14001d677:	(bad)  
   14001d678:	(bad)  
   14001d679:	(bad)  
   14001d67a:	(bad)  
   14001d67b:	(bad)  
   14001d67c:	(bad)  
   14001d67d:	(bad)  
   14001d67e:	(bad)  
   14001d67f:	jmp    QWORD PTR [rbx-0x61]
   14001d682:	repz call QWORD PTR [rdx]
   14001d685:	ins    DWORD PTR es:[rdi],dx
   14001d686:	repz jmp FWORD PTR [rcx]
   14001d689:	jnp    0x14001d67e
   14001d68b:	dec    eax
   14001d68d:	scas   eax,DWORD PTR es:[rdi]
   14001d68e:	test   eax,edi
   14001d690:	jmp    0x100f07b64
   14001d695:	pushf  
   14001d696:	push   rdx
   14001d697:	std    
   14001d698:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d69f:	push   rax
   14001d6a1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d6a7:	inc    DWORD PTR [rax]
	...
   14001d6bd:	add    BYTE PTR [rax],al
   14001d6bf:	add    ch,dl
   14001d6c1:	mov    al,0x67
   14001d6c3:	hlt    
   14001d6c4:	fcmovb st,st(7)
   14001d6c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d6c7:	int    0x30
   14001d6c9:	jg     0x14001d6b6
   14001d6cb:	(bad)  
   14001d6cc:	(bad)  
   14001d6cd:	test   edi,edi
   14001d6cf:	jmp    FWORD PTR [rdi]
   14001d6d1:	mov    dh,ch
   14001d6d3:	dec    DWORD PTR [rax+rdi*2]
   14001d6d6:	idiv   bh
   14001d6d8:	xor    BYTE PTR [rsi-0x7],0xff
   14001d6df:	(bad)  
   14001d6e0:	(bad)  
   14001d6e1:	(bad)  
   14001d6e2:	(bad)  
   14001d6e3:	(bad)  
   14001d6e4:	(bad)  
   14001d6e5:	(bad)  
   14001d6e6:	(bad)  
   14001d6e7:	(bad)  
   14001d6e8:	(bad)  
   14001d6e9:	(bad)  
   14001d6ea:	(bad)  
   14001d6eb:	(bad)  
   14001d6ec:	(bad)  
   14001d6ed:	(bad)  
   14001d6ee:	(bad)  
   14001d6ef:	(bad)  
   14001d6f0:	(bad)  
   14001d6f1:	(bad)  
   14001d6f2:	(bad)  
   14001d6f3:	(bad)  
   14001d6f4:	(bad)  
   14001d6f5:	(bad)  
   14001d6f6:	(bad)  
   14001d6f7:	(bad)  
   14001d6f8:	(bad)  
   14001d6f9:	(bad)  
   14001d6fa:	(bad)  
   14001d6fb:	(bad)  
   14001d6fc:	(bad)  
   14001d6fd:	(bad)  
   14001d6fe:	(bad)  
   14001d6ff:	push   QWORD PTR [rcx-0x56]
   14001d702:	idiv   edi
   14001d704:	adc    esi,DWORD PTR [rax-0xc]
   14001d707:	jmp    FWORD PTR [rbx]
   14001d709:	jle    0x14001d6fe
   14001d70b:	dec    eax
   14001d70d:	scas   eax,DWORD PTR es:[rdi]
   14001d70e:	test   eax,edi
   14001d710:	jmp    0x14001d6e3
   14001d712:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d713:	out    dx,al
   14001d714:	rcr    BYTE PTR [rdx+rdx*2-0x49230f03],0xf9
   14001d71c:	rcr    BYTE PTR [rbx-0x210f00af],0xb6
   14001d723:	clc    
   14001d724:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001d740:	(bad)  
   14001d741:	mov    al,0x67
   14001d743:	neg    dl
   14001d745:	(bad)  
   14001d746:	test   al,0xcb
   14001d748:	rex.W xchg dl,bl
   14001d74b:	cli    
   14001d74c:	and    DWORD PTR [rax-0x6dc90002],ecx
   14001d752:	hlt    
   14001d753:	call   QWORD PTR [rax]
   14001d755:	xor    dh,0xff
   14001d758:	xchg   DWORD PTR [rdx-0x7],edi
   14001d75e:	(bad)  
   14001d75f:	(bad)  
   14001d760:	(bad)  
   14001d761:	(bad)  
   14001d762:	(bad)  
   14001d763:	(bad)  
   14001d764:	(bad)  
   14001d765:	(bad)  
   14001d766:	(bad)  
   14001d767:	(bad)  
   14001d768:	(bad)  
   14001d769:	(bad)  
   14001d76a:	(bad)  
   14001d76b:	(bad)  
   14001d76c:	(bad)  
   14001d76d:	(bad)  
   14001d76e:	(bad)  
   14001d76f:	(bad)  
   14001d770:	(bad)  
   14001d771:	(bad)  
   14001d772:	(bad)  
   14001d773:	(bad)  
   14001d774:	(bad)  
   14001d775:	(bad)  
   14001d776:	(bad)  
   14001d777:	(bad)  
   14001d778:	(bad)  
   14001d779:	repz std 
   14001d77b:	jmp    QWORD PTR [rdx-0x5d]
   14001d77e:	clc    
   14001d77f:	jmp    FWORD PTR [rdi]
   14001d781:	(bad)  
   14001d782:	idiv   bh
   14001d784:	adc    esi,DWORD PTR [rbx-0x8]
   14001d787:	inc    DWORD PTR [rbx-0x79]
   14001d78a:	out    0xff,eax
   14001d78c:	(bad)
   14001d78f:	imul   ah
   14001d791:	shl    BYTE PTR [rdi+0x529cc0ef],cl
   14001d797:	std    
   14001d798:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d79f:	push   rax
   14001d7a1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d7a7:	inc    DWORD PTR [rax]
	...
   14001d7bd:	add    BYTE PTR [rax],al
   14001d7bf:	add    ch,dl
   14001d7c1:	mov    cl,0x66
   14001d7c3:	neg    esp
   14001d7c5:	retf   0xc6ac
   14001d7c8:	ins    DWORD PTR es:[rdi],dx
   14001d7c9:	xchg   esp,eax
   14001d7ca:	mov    esi,0xfc881df2
   14001d7cf:	(bad)  
   14001d7d0:	ds cdq 
   14001d7d2:	hlt    
   14001d7d3:	call   QWORD PTR [rdx]
   14001d7d5:	xchg   esi,esi
   14001d7d7:	dec    DWORD PTR [rcx-0x644]
   14001d7dd:	(bad)  
   14001d7de:	(bad)  
   14001d7df:	(bad)  
   14001d7e0:	(bad)  
   14001d7e1:	(bad)  
   14001d7e2:	(bad)  
   14001d7e3:	(bad)  
   14001d7e4:	(bad)  
   14001d7e5:	(bad)  
   14001d7e6:	(bad)  
   14001d7e7:	(bad)  
   14001d7e8:	(bad)  
   14001d7e9:	(bad)  
   14001d7ea:	(bad)  
   14001d7eb:	(bad)  
   14001d7ec:	(bad)  
   14001d7ed:	(bad)  
   14001d7ee:	(bad)  
   14001d7ef:	(bad)  
   14001d7f0:	(bad)  
   14001d7f1:	(bad)  
   14001d7f2:	(bad)  
   14001d7f3:	call   QWORD PTR [rbp+0x26fffac2]
   14001d7f9:	(bad)  
   14001d7fa:	idiv   edi
   14001d7fc:	sbb    DWORD PTR [rcx-0xa],edi
   14001d7ff:	jmp    QWORD PTR [rbx]
   14001d801:	jg     0x14001d7f6
   14001d803:	call   QWORD PTR [rax+rdi*2]
   14001d806:	cld    
   14001d807:	jmp    FWORD PTR [rax-0x6e]
   14001d80a:	(bad)  
   14001d80b:	inc    ebx
   14001d80d:	stos   DWORD PTR es:[rdi],eax
   14001d80e:	xor    edx,0xfffffff2
   14001d811:	fsubr  DWORD PTR [rbp+0x519cc0ee]
   14001d817:	std    
   14001d818:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001d81f:	push   rax
   14001d821:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d827:	inc    DWORD PTR [rax]
	...
   14001d83d:	add    BYTE PTR [rax],al
   14001d83f:	add    ch,dl
   14001d841:	mov    al,0x66
   14001d843:	clc    
   14001d844:	(bad)  
   14001d846:	scas   al,BYTE PTR es:[rdi]
   14001d847:	(bad)  
   14001d848:	pushf  
   14001d849:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d84a:	movabs al,ds:0xf99d40fffa8424e0
   14001d853:	call   FWORD PTR [rcx]
   14001d855:	(bad)  
   14001d856:	idiv   edi
   14001d858:	mov    BYTE PTR [rsi-0x8],bh
   14001d85e:	(bad)  
   14001d85f:	(bad)  
   14001d860:	(bad)  
   14001d861:	(bad)  
   14001d862:	(bad)  
   14001d863:	(bad)  
   14001d864:	(bad)  
   14001d865:	(bad)  
   14001d866:	(bad)  
   14001d867:	(bad)  
   14001d868:	(bad)  
   14001d869:	(bad)  
   14001d86a:	(bad)  
   14001d86b:	jmp    rbx
   14001d86d:	lock std 
   14001d86f:	call   QWORD PTR [rax-0x62]
   14001d872:	clc    
   14001d873:	call   QWORD PTR [rsi]
   14001d875:	jnp    0x14001d86d
   14001d877:	call   FWORD PTR [rdi]
   14001d879:	xor    dh,0xff
   14001d87c:	sub    BYTE PTR [rbp-0x7bd5000a],al
   14001d882:	cmc    
   14001d883:	call   QWORD PTR [rip+0xffffffff8bfffa7e]        # 0xcc01d307
   14001d889:	xchg   esp,eax
   14001d88a:	lahf   
   14001d88b:	std    
   14001d88c:	(bad)
   14001d88f:	in     al,dx
   14001d890:	clc    
   14001d891:	fdiv   QWORD PTR [rdx+0x509abfef]
   14001d897:	std    
   14001d898:	lock fdiv QWORD PTR [rsi+0x529cc1f9]
   14001d89f:	push   rax
   14001d8a1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d8a7:	inc    DWORD PTR [rax]
	...
   14001d8bd:	add    BYTE PTR [rax],al
   14001d8bf:	add    ah,dl
   14001d8c1:	mov    al,0x66
   14001d8c3:	neg    esp
   14001d8c5:	leave  
   14001d8c6:	test   al,0xcd
   14001d8c8:	loope  0x14001d8a0
   14001d8ca:	ret    0x53b9
   14001d8cd:	mov    dl,dl
   14001d8cf:	jmp    FWORD PTR [rdi]
   14001d8d1:	cdq    
   14001d8d2:	std    
   14001d8d3:	call   FWORD PTR [rdx]
   14001d8d5:	nop
   14001d8d6:	cmc    
   14001d8d7:	call   QWORD PTR [rbx+rax*8-0x8]
   14001d8de:	(bad)  
   14001d8df:	(bad)  
   14001d8e0:	(bad)  
   14001d8e1:	(bad)  
   14001d8e2:	(bad)  
   14001d8e3:	(bad)  
   14001d8e4:	(bad)  
   14001d8e5:	(bad)  
   14001d8e6:	(bad)  
   14001d8e7:	call   QWORD PTR [rcx+0x23fffbc2]
   14001d8ed:	mov    ch,dh
   14001d8ef:	call   FWORD PTR [rcx+rax*4]
   14001d8f2:	idiv   bh
   14001d8f4:	sub    BYTE PTR [rax-0x76d6000a],cl
   14001d8fa:	idiv   bh
   14001d8fc:	sub    al,0x88
   14001d8fe:	idiv   bh
   14001d900:	(bad)  
   14001d901:	jl     0x14001d8fb
   14001d903:	call   QWORD PTR [rbx-0x6e]
   14001d906:	loope  0x14001d907
   14001d908:	mov    ebx,0xe5f684a7
   14001d90d:	(bad)  
   14001d90e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d90f:	in     al,0xf8
   14001d911:	fidiv  WORD PTR [rdx+0x519bbff3]
   14001d917:	std    
   14001d918:	lock fnsave [rsi+0x519cc0fa]
   14001d91f:	push   rax
   14001d921:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001d927:	inc    DWORD PTR [rax]
	...
   14001d93d:	add    BYTE PTR [rax],al
   14001d93f:	add    ah,dl
   14001d941:	mov    al,0x66
   14001d943:	neg    edx
   14001d945:	(bad)  
   14001d946:	lahf   
   14001d947:	shr    edi,1
   14001d949:	loope  0x14001d915
   14001d94b:	scas   al,BYTE PTR es:[rdi]
   14001d94c:	xchg   esi,eax
   14001d94d:	(bad)  
   14001d94e:	nop
   14001d94f:	(bad)  
   14001d950:	xor    ecx,DWORD PTR [rbp-0x68e20011]
   14001d956:	sti    
   14001d957:	jmp    FWORD PTR [rsi-0x51]
   14001d95a:	idiv   edi
   14001d95c:	(bad)  
   14001d95d:	(bad)  
   14001d95e:	(bad)  
   14001d95f:	(bad)  
   14001d960:	fucomi st,st(4)
   14001d962:	cld    
   14001d963:	call   QWORD PTR [rsi-0x58]
   14001d966:	stc    
   14001d967:	call   FWORD PTR [rdi]
   14001d969:	mov    edi,?
   14001d96b:	jmp    FWORD PTR [rdx]
   14001d96d:	mov    ?,edi
   14001d96f:	jmp    FWORD PTR [rsi+rcx*4]
   14001d972:	idiv   edi
   14001d974:	sub    ecx,DWORD PTR [rbp-0x74d5000a]
   14001d97a:	idiv   edi
   14001d97c:	es xchg ch,dh
   14001d97f:	jmp    QWORD PTR [rax*4-0x6c720011]
   14001d986:	pushf  
   14001d987:	std    
   14001d988:	sar    DWORD PTR [rbx-0x20070b6c],1
   14001d98e:	mov    bh,0xe5
   14001d990:	neg    esp
   14001d992:	mov    al,0xf5
   14001d994:	rcr    BYTE PTR [rdx+rdx*2-0x49220f02],0xfa
   14001d99c:	rcr    BYTE PTR [rcx+rdx*2-0x49210f01],0xf8
   14001d9a4:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001d9c0:	(bad)  
   14001d9c1:	mov    al,0x65
   14001d9c3:	not    edi
   14001d9c5:	rcr    DWORD PTR [rbp-0x3b21122f],0xb3
   14001d9cc:	(bad)  
   14001d9ce:	lods   eax,DWORD PTR ds:[rsi]
   14001d9cf:	retf   
   14001d9d0:	or     BYTE PTR [rbx-0x6ed60068],0xf2
   14001d9d7:	jmp    QWORD PTR [rbx]
   14001d9d9:	xchg   ebx,eax
   14001d9da:	sti    
   14001d9db:	inc    DWORD PTR [rcx-0x61]
   14001d9de:	idiv   bh
   14001d9e0:	sub    edx,DWORD PTR [rbx-0x6ddb000b]
   14001d9e6:	idiv   edi
   14001d9e8:	xor    edx,DWORD PTR [rbp-0x6ace0009]
   14001d9ee:	idiv   edi
   14001d9f0:	xor    BYTE PTR [rbx-0x6fd00009],dl
   14001d9f6:	idiv   edi
   14001d9f8:	(bad)  
   14001d9f9:	mov    dh,dh
   14001d9fb:	call   FWORD PTR [rip+0xffffffff89fff184]        # 0xca01cb85
   14001da01:	movabs eax,ds:0xdaf2f790b7ceffbe
   14001da0a:	mov    cl,0xea
   14001da0c:	stc    
   14001da0d:	fbstp  TBYTE PTR [rbp-0x4f230817]
   14001da13:	test   al,0x9c
   14001da16:	push   rcx
   14001da17:	std    
   14001da18:	lock fnsave [rsi+0x519cc0fa]
   14001da1f:	push   rax
   14001da21:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001da27:	inc    DWORD PTR [rax]
	...
   14001da3d:	add    BYTE PTR [rax],al
   14001da3f:	add    ah,dl
   14001da41:	scas   eax,DWORD PTR es:[rdi]
   14001da42:	gs not ebp
   14001da45:	mov    edi,0xdbebd19b
   14001da4a:	mov    edi,0xaed0e3b4
   14001da4f:	iret   
   14001da50:	sar    DWORD PTR [rbx-0x6c74116c],cl
   14001da56:	cwde   
   14001da57:	cld    
   14001da58:	cmp    BYTE PTR [rsi-0x73e7001d],cl
   14001da5e:	sti    
   14001da5f:	jmp    FWORD PTR [rdx]
   14001da61:	xchg   edx,eax
   14001da62:	clc    
   14001da63:	push   QWORD PTR [rdx*4-0x68c9000a]
   14001da6a:	cmc    
   14001da6b:	push   QWORD PTR [rsp+rdx*4]
   14001da6e:	cmc    
   14001da6f:	jmp    FWORD PTR [rsi+rcx*4]
   14001da72:	cmc    
   14001da73:	call   FWORD PTR [rip+0x34fffb87]        # 0x17501d600
   14001da79:	mov    edx,esp
   14001da7b:	dec    DWORD PTR [rdi-0x37004a60]
   14001da81:	mov    cl,0x88
   14001da83:	imul   dh
   14001da85:	(bad)  
   14001da86:	scas   al,BYTE PTR es:[rdi]
   14001da87:	(bad)  
   14001da88:	clc    
   14001da89:	fidiv  WORD PTR [rbx+rbp*8-0x174e230b]
   14001da90:	neg    esp
   14001da92:	mov    al,0xf4
   14001da94:	rcr    BYTE PTR [rcx+rdx*2-0x49220f02],0xfa
   14001da9c:	rcr    BYTE PTR [rcx+rdx*2-0x48210f01],0xf9
   14001daa4:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001dac0:	shr    DWORD PTR [rdi-0x412b089c],cl
   14001dac6:	(bad)  
   14001dac7:	shr    dl,1
   14001dac9:	fidivr DWORD PTR [rsi-0x57321d4c]
   14001dacf:	rcr    esi,1
   14001dad1:	(bad)  
   14001dad2:	lahf   
   14001dad3:	(bad)  
   14001dad4:	in     eax,0xd0
   14001dad6:	scas   al,BYTE PTR es:[rdi]
   14001dad7:	(bad)  
   14001dad8:	movabs ds:0x46ffb09173f37c96,eax
   14001dae1:	mov    ds,ecx
   14001dae3:	jmp    QWORD PTR [rdi]
   14001dae5:	mov    esp,ebp
   14001dae7:	call   QWORD PTR [rip+0x28fff683]        # 0x16901d170
   14001daed:	mov    ebp,ebp
   14001daef:	inc    DWORD PTR [rdi-0x70]
   14001daf2:	(bad)  
   14001daf4:	jns    0x14001da90
   14001daf6:	mov    esi,0x8ba1adff
   14001dafb:	cld    
   14001dafc:	sar    DWORD PTR [rax-0x2810106f],1
   14001db02:	scas   eax,DWORD PTR es:[rdi]
   14001db03:	(bad)  
   14001db04:	clc    
   14001db05:	fnsave [rbx-0x4f250b15]
   14001db0b:	jmp    0x14001db02
   14001db0d:	fdiv   QWORD PTR [rcx-0x4f230818]
   14001db13:	hlt    
   14001db14:	rcr    BYTE PTR [rcx+rdx*2-0x49220f02],0xfa
   14001db1c:	rcr    BYTE PTR [rcx+rdx*2-0x48210f01],0xf9
   14001db24:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001db40:	(bad)  
   14001db41:	mov    al,0x65
   14001db43:	clc    
   14001db44:	sar    BYTE PTR [rbp-0x28183266],cl
   14001db4a:	mov    ebp,0xa5c9dfb1
   14001db4f:	rcr    edx,1
   14001db51:	rcl    BYTE PTR [rsi+rbp*8-0x2c4f2a15],0xe6
   14001db59:	shr    DWORD PTR [rbp-0x643d252a],1
   14001db5f:	clc    
   14001db60:	enter  0x91b3,0xf9
   14001db64:	(bad)  
   14001db65:	mov    ch,0x95
   14001db67:	sti    
   14001db68:	(bad)  
   14001db69:	mov    dh,0x97
   14001db6b:	cld    
   14001db6c:	enter  0x98b6,0xfb
   14001db70:	iret   
   14001db71:	mov    ebx,0xc7ddfb99
   14001db76:	movabs ds:0xb4def7f0a8cbe0f7,eax
   14001db7f:	call   0x12ab3b879
   14001db84:	hlt    
   14001db85:	(bad)  [rax-0x4f250b15]
   14001db8b:	jmp    0x14001db82
   14001db8d:	fdiv   QWORD PTR [rcx-0x4f230818]
   14001db93:	hlt    
   14001db94:	rcr    BYTE PTR [rcx+rdx*2-0x48220f03],0xfa
   14001db9c:	rcr    BYTE PTR [rbx-0x210f00af],0xb8
   14001dba3:	clc    
   14001dba4:	mov    edx,0xf25595
	...
   14001dbbd:	add    BYTE PTR [rax],al
   14001dbbf:	add    ah,dl
   14001dbc1:	scas   eax,DWORD PTR es:[rdi]
   14001dbc2:	addr32 cld 
   14001dbc4:	shl    BYTE PTR [rdi-0x26131773],1
   14001dbca:	mov    ecx,0xadd1e7c2
   14001dbcf:	shl    ebp,cl
   14001dbd1:	retf   0xf89c
   14001dbd4:	out    dx,al
   14001dbd5:	(bad)  
   14001dbd6:	stos   DWORD PTR es:[rdi],eax
   14001dbd7:	jmp    0x128adb0c9
   14001dbdc:	neg    ebx
   14001dbde:	scas   eax,DWORD PTR es:[rdi]
   14001dbdf:	div    edi
   14001dbe1:	fld    TBYTE PTR [rdi-0x51240a0a]
   14001dbe7:	hlt    
   14001dbe8:	neg    ah
   14001dbea:	scas   eax,DWORD PTR es:[rdi]
   14001dbeb:	hlt    
   14001dbec:	neg    esp
   14001dbee:	mov    al,0xf4
   14001dbf0:	neg    esp
   14001dbf2:	mov    al,0xf4
   14001dbf4:	cli    
   14001dbf5:	loopne 0x14001dbaa
   14001dbf7:	hlt    
   14001dbf8:	cld    
   14001dbf9:	loop   0x14001dbb1
   14001dbfb:	hlt    
   14001dbfc:	stc    
   14001dbfd:	fbstp  TBYTE PTR [rdx-0x4d21070c]
   14001dc03:	repnz clc 
   14001dc05:	fidiv  WORD PTR [rdx-0x4d210710]
   14001dc0b:	out    dx,eax
   14001dc0c:	stc    
   14001dc0d:	fbstp  TBYTE PTR [rbx+rbp*8-0x44a1b01]
   14001dc14:	rcr    DWORD PTR [rdx+rdx*2-0x79492c01],0xf8
   14001dc1c:	vorps  xmm7,xmm11,xmm7
   14001dc20:	mov    esp,0xbeea6399
   14001dc25:	popf   
   14001dc26:	push   0x9e
	...
   14001dc3f:	add    BYTE PTR [rdi-0x4783a873],ch
   14001dc45:	cwde   
   14001dc46:	data16 ffree st(3)
   14001dc49:	movabs al,ds:0x9fc3ff70a0c3ff70
   14001dc52:	outs   dx,DWORD PTR ds:[rsi]
   14001dc53:	inc    edx
   14001dc55:	lahf   
   14001dc56:	outs   dx,BYTE PTR ds:[rsi]
   14001dc57:	inc    ecx
   14001dc59:	sahf   
   14001dc5a:	ins    DWORD PTR es:[rdi],dx
   14001dc5b:	inc    eax
   14001dc5d:	popf   
   14001dc5e:	imul   edi,edi,0xffffffc0
   14001dc61:	pushf  
   14001dc62:	push   0xffffffffffffffff
   14001dc64:	mov    ebp,0xbcff679b
   14001dc69:	(bad)  
   14001dc6a:	addr32 (bad) 
   14001dc6c:	mov    esp,0xbaff6499
   14001dc71:	xchg   edi,eax
   14001dc72:	movsxd edi,edi
   14001dc74:	mov    ecx,0xb8ff6096
   14001dc79:	xchg   esi,eax
   14001dc7a:	pop    rdi
   14001dc7b:	push   QWORD PTR [rdi-0x4900a26d]
   14001dc81:	xchg   ebx,eax
   14001dc82:	pop    rbx
   14001dc83:	push   QWORD PTR [rbp-0x4b00a46d]
   14001dc89:	xchg   ecx,eax
   14001dc8a:	pop    rax
   14001dc8b:	push   QWORD PTR [rbx-0x4c00a870]
   14001dc91:	(bad)  
   14001dc92:	push   rdi
   14001dc93:	push   QWORD PTR [rcx-0x4b17a872]
   14001dc99:	xchg   ecx,eax
   14001dc9a:	pop    rdx
   14001dc9b:	mov    edi,0x59588eb0
   14001dca0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001dca1:	mov    BYTE PTR [rcx+0x15],bl
   14001dca4:	test   al,0x8c
   14001dca6:	pop    rbp
   14001dca7:	(bad)  
	...
   14001df38:	(bad)  
   14001df39:	(bad)  
   14001df3a:	(bad)  
   14001df3b:	(bad)  
   14001df3c:	(bad)  
   14001df3d:	in     eax,dx
   14001df3e:	add    bh,bh
   14001df40:	clc    
   14001df41:	add    BYTE PTR [rax],al
   14001df43:	inc    eax
   14001df45:	add    BYTE PTR [rax],al
   14001df47:	(bad)  
   14001df48:	rol    BYTE PTR [rax],0x0
   14001df4b:	add    eax,eax
   14001df4d:	add    BYTE PTR [rax],al
   14001df4f:	add    al,al
   14001df51:	add    BYTE PTR [rax],al
   14001df53:	add    al,al
   14001df55:	add    BYTE PTR [rax],al
   14001df57:	xadd   BYTE PTR [rax],al
   14001df5a:	add    BYTE PTR [rdi],cl
   14001df5c:	rol    BYTE PTR [rax],0x0
   14001df5f:	xadd   BYTE PTR [rax],al
   14001df62:	add    BYTE PTR [rdi],cl
   14001df64:	rol    BYTE PTR [rax],0x0
   14001df67:	xadd   BYTE PTR [rax],al
   14001df6a:	add    BYTE PTR [rdi],cl
   14001df6c:	rol    BYTE PTR [rax],0x0
   14001df6f:	xadd   BYTE PTR [rax],al
   14001df72:	add    BYTE PTR [rdi],cl
   14001df74:	rol    BYTE PTR [rax],0x0
   14001df77:	xadd   BYTE PTR [rax],al
   14001df7a:	add    BYTE PTR [rdi],cl
   14001df7c:	rol    BYTE PTR [rax],0x0
   14001df7f:	xadd   BYTE PTR [rax],al
   14001df82:	add    BYTE PTR [rdi],cl
   14001df84:	rol    BYTE PTR [rax],0x0
   14001df87:	xadd   BYTE PTR [rax],al
   14001df8a:	add    BYTE PTR [rdi],cl
   14001df8c:	rol    BYTE PTR [rax],0x0
   14001df8f:	xadd   BYTE PTR [rax],al
   14001df92:	add    BYTE PTR [rdi],cl
   14001df94:	rol    BYTE PTR [rax],0x0
   14001df97:	xadd   BYTE PTR [rax],al
   14001df9a:	add    BYTE PTR [rdi],cl
   14001df9c:	rol    BYTE PTR [rax],0x0
   14001df9f:	xadd   BYTE PTR [rax],al
   14001dfa2:	add    BYTE PTR [rdi],cl
   14001dfa4:	(bad)  
   14001dfa5:	(bad)  
   14001dfa6:	(bad)  
   14001dfa7:	(bad)  
   14001dfa8:	(bad)  
   14001dfa9:	(bad)  
   14001dfaa:	(bad)  
   14001dfab:	(bad)  
   14001dfac:	(bad)  
   14001dfad:	(bad)  
   14001dfae:	(bad)  
   14001dfaf:	(bad)  
   14001dfb0:	(bad)  
   14001dfb1:	(bad)  
   14001dfb2:	(bad)  
   14001dfb3:	(bad)  
   14001dfb4:	(bad)  
   14001dfb5:	(bad)  
   14001dfb6:	(bad)  
   14001dfb7:	jmp    FWORD PTR [rax]
   14001dfb9:	add    BYTE PTR [rax],al
   14001dfbb:	add    BYTE PTR [rax],bl
   14001dfbd:	add    BYTE PTR [rax],al
   14001dfbf:	add    BYTE PTR [rax],dh
   14001dfc1:	add    BYTE PTR [rax],al
   14001dfc3:	add    BYTE PTR [rcx],al
   14001dfc5:	add    BYTE PTR [rax],ah
   14001dfc7:	add    BYTE PTR [rax],al
   14001dfc9:	add    BYTE PTR [rax],al
   14001dfcb:	add    BYTE PTR [rax+0x9],ah
	...
   14001dffa:	add    BYTE PTR [rax],al
   14001dffc:	lea    ebp,[rdi+0x22]
   14001dfff:	add    DWORD PTR [rsi-0x60fdc888],edx
   14001e005:	test   BYTE PTR [rcx+0x7],cl
   14001e008:	stos   DWORD PTR es:[rdi],eax
   14001e009:	xchg   ecx,eax
   14001e00a:	pop    rbx
   14001e00b:	or     eax,ecx
   14001e00d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e00e:	jno    0x14001e03a
   14001e010:	mov    ch,0x98
   14001e012:	(bad)  
   14001e013:	(bad)  
   14001e014:	mov    ecx,0xbd64679f
   14001e019:	movabs ds:0xabc2a772a5be876f,eax
   14001e022:	jp     0x14001dff1
   14001e024:	ret    
   14001e025:	stos   DWORD PTR es:[rdi],eax
   14001e026:	jp     0x14001e002
   14001e028:	shl    DWORD PTR [rdi+0x617bed71],0x2b
   14001e02f:	(bad)  
   14001e030:	(bad)  
   14001e031:	adc    ecx,DWORD PTR [rip+0x548aa614]        # 0x1948c864b
   14001e037:	add    DWORD PTR [rax],eax
	...
   14001e041:	add    BYTE PTR [rax],al
   14001e043:	add    BYTE PTR [rbx-0x4efdcd84],bl
   14001e049:	xchg   esp,eax
   14001e04a:	pop    rcx
   14001e04b:	and    BYTE PTR [rcx+rbx*4-0x5b41b29e],dh
   14001e052:	ins    DWORD PTR es:[rdi],dx
   14001e053:	mov    si,0x6ea4
   14001e057:	ja     0x14001e019
   14001e059:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e05a:	jb     0x14001dff3
   14001e05c:	shl    BYTE PTR [rdi-0x553c548c],0x78
   14001e063:	ret    
   14001e064:	(bad)  
   14001e065:	stos   BYTE PTR es:[rdi],al
   14001e066:	js     0x14001e03b
   14001e068:	ret    
   14001e069:	stos   DWORD PTR es:[rdi],eax
   14001e06a:	js     0x14001e04e
   14001e06c:	(bad)  
   14001e06d:	scas   eax,DWORD PTR es:[rdi]
   14001e06e:	jge    0x14001e05a
   14001e070:	int    0xb6
   14001e072:	xchg   dh,ch
   14001e074:	(bad)  
   14001e075:	mov    eax,0xb9cff18c
   14001e07a:	mov    ?,eax
   14001e07c:	sar    DWORD PTR [rbp-0x412d106b],1
   14001e082:	xchg   edi,eax
   14001e083:	out    dx,eax
   14001e084:	rol    ecx,cl
   14001e086:	pushf  
   14001e087:	jmp    0x14001e066
   14001e089:	retf   
   14001e08a:	test   al,0xf1
   14001e08c:	mov    ebp,0xbfff5d9d
   14001e091:	movabs ds:0xa35e92abfa69,al
   14001e09a:	add    BYTE PTR [rcx],dl
   14001e09c:	add    BYTE PTR [rax],al
   14001e09e:	add    BYTE PTR [rax],al
   14001e0a0:	(bad)  
   14001e0a1:	mov    eax,0xafc65d90
   14001e0a6:	jg     0x14001e068
   14001e0a8:	(bad)  
   14001e0a9:	stos   BYTE PTR es:[rdi],al
   14001e0aa:	js     0x14001e08d
   14001e0ac:	ret    
   14001e0ad:	test   eax,0xacc5e678
   14001e0b2:	jge    0x14001e09d
   14001e0b4:	retf   
   14001e0b5:	mov    dl,0x84
   14001e0b7:	lock iret 
   14001e0b9:	mov    ecx,0xbed3ee8c
   14001e0be:	xchg   ebp,eax
   14001e0bf:	out    dx,eax
   14001e0c0:	fcmovnb st,st(7)
   14001e0c2:	movabs ds:0xb1d0e2f0accddeef,eax
   14001e0cb:	out    dx,al
   14001e0cc:	(bad)  
   14001e0ce:	scas   al,BYTE PTR es:[rdi]
   14001e0cf:	jmp    0x124a9a8ab
   14001e0d4:	(bad)  
   14001e0d5:	(bad)  
   14001e0d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e0d7:	jrcxz  0x14001e0b8
   14001e0d9:	int    0xac
   14001e0db:	out    0xda,eax
   14001e0dd:	(bad)  
   14001e0de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e0df:	call   0x12ba3a6bd
   14001e0e4:	xlat   BYTE PTR ds:[rbx]
   14001e0e5:	ret    
   14001e0e6:	lahf   
   14001e0e7:	jmp    0x14001e0ca
   14001e0e9:	int    0xa6
   14001e0eb:	out    dx,eax
   14001e0ec:	mov    dh,0x96
   14001e0ee:	push   rbx
   14001e0ef:	call   rdx
   14001e0f1:	mov    esi,0x99b9e097
   14001e0f6:	pop    rax
   14001e0f7:	(bad)  
   14001e0f8:	mov    edi,0xbbfb67a1
   14001e0fd:	movabs ds:0xd4e2e593bfd47f72,al
   14001e106:	mov    ecx,0xcae2effd
   14001e10b:	shl    al,1
   14001e10d:	shl    BYTE PTR [rsi-0x50312210],cl
   14001e113:	jmp    0x14001e0f5
   14001e115:	shl    BYTE PTR [rsi-0x552b2425],cl
   14001e11b:	ffreep st(7)
   14001e11d:	(bad)  
   14001e11e:	movabs ds:0xbeaa83f2afbaa1ea,eax
   14001e127:	test   DWORD PTR [rax-0x640a4754],0xcaf19bb7
   14001e131:	retf   
   14001e132:	fwait
   14001e133:	out    dx,eax
   14001e134:	rol    ebp,1
   14001e136:	nop
   14001e137:	in     al,dx
   14001e138:	fcmovnb st,st(6)
   14001e13a:	movabs eax,ds:0xa0c6dbeca5cbdfe8
   14001e143:	in     eax,dx
   14001e144:	xlat   BYTE PTR ds:[rbx]
   14001e145:	ret    
   14001e146:	popf   
   14001e147:	jmp    0x12eacb12f
   14001e14c:	mov    bh,0x96
   14001e14e:	push   rsp
   14001e14f:	(bad)  
   14001e150:	(bad)  
   14001e151:	(bad)  
   14001e152:	mov    dl,0xec
   14001e154:	mov    bh,0x96
   14001e156:	push   rbx
   14001e157:	push   rcx
   14001e159:	fistp  QWORD PTR [rax+riz*8-0xa96748]
   14001e160:	iret   
   14001e161:	mov    ecx,0xcadafd8d
   14001e166:	scas   al,BYTE PTR es:[rdi]
   14001e167:	mov    esp,0xaed5e8f1
   14001e16c:	(bad)  
   14001e16d:	ret    
   14001e16e:	lahf   
   14001e16f:	(bad)  
   14001e171:	mov    ebp,0xdfd6e594
   14001e176:	stos   DWORD PTR es:[rdi],eax
   14001e177:	(bad)  
   14001e178:	mov    BYTE PTR [rsi+0x7130f8dd],ch
   14001e17e:	(bad)  
   14001e17f:	dec    DWORD PTR [rdi]
   14001e181:	pop    rbx
   14001e182:	(bad)  
   14001e183:	dec    DWORD PTR [rbx]
   14001e185:	push   rsi
   14001e186:	(bad)  
   14001e187:	dec    DWORD PTR [rip+0x11ffff54]        # 0x15201e0e1
   14001e18d:	pop    rax
   14001e18e:	(bad)  
   14001e18f:	(bad)  
   14001e190:	cmp    DWORD PTR [rdi-0x1],esi
   14001e193:	(bad)  
   14001e194:	jg     0x14001e134
   14001e196:	mov    bh,0xfb
   14001e198:	mov    ecx,0xc2d6eb8c
   14001e19e:	fsubrp st(3),st
   14001e1a1:	shr    BYTE PTR [rbp-0x5936221f],1
   14001e1a7:	(bad)  
   14001e1a9:	shr    BYTE PTR [rsi+0x5597b7e7],cl
   14001e1af:	(bad)  
   14001e1b0:	jmp    0x14001e189
   14001e1b2:	mov    ch,0xe7
   14001e1b4:	mov    bh,0x97
   14001e1b6:	push   rsp
   14001e1b7:	push   rbp
   14001e1b9:	loop   0x14001e17b
   14001e1bb:	out    0xb8,eax
   14001e1bd:	xchg   edi,eax
   14001e1be:	push   rsp
   14001e1bf:	dec    edi
   14001e1c1:	mov    ecx,0xc7d8f68d
   14001e1c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e1c7:	retf   
   14001e1c8:	(bad)  
   14001e1c9:	ffree  st(6)
   14001e1cb:	mov    bl,0xd5
   14001e1cd:	ret    0xd99d
   14001e1d0:	leave  
   14001e1d1:	enter  0xf599,0x3b
   14001e1d5:	cmp    bh,0xff
   14001e1d8:	add    BYTE PTR [rbx],bh
   14001e1da:	(bad)  
   14001e1db:	inc    DWORD PTR [rax]
   14001e1dd:	rex
   14001e1de:	lock dec DWORD PTR [rip+0x2bffef5f]        # 0x16c01d144
   14001e1e5:	jno    0x14001e1d5
   14001e1e7:	jmp    FWORD PTR [rax]
   14001e1e9:	outs   dx,DWORD PTR ds:[rsi]
   14001e1ea:	in     eax,dx
   14001e1eb:	jmp    QWORD PTR [rax]
   14001e1ed:	addr32 out dx,al
   14001e1ef:	dec    DWORD PTR [rbx]
   14001e1f1:	pop    rdx
   14001e1f2:	clc    
   14001e1f3:	dec    DWORD PTR [rdx]
   14001e1f5:	pop    rbx
   14001e1f6:	(bad)  
   14001e1f7:	dec    DWORD PTR [rdx-0x7e]
   14001e1fa:	cld    
   14001e1fb:	push   QWORD PTR [rsi-0x290f8351]
   14001e201:	ret    0xe09c
   14001e204:	in     al,0xd1
   14001e206:	scas   al,BYTE PTR es:[rdi]
   14001e207:	(bad)  
   14001e209:	shr    BYTE PTR [rdi+0x5597b8e9],cl
   14001e20f:	(bad)  
   14001e210:	jmp    0x14001e1e9
   14001e212:	mov    ch,0xe6
   14001e214:	mov    eax,0xf6ff5497
   14001e219:	jrcxz  0x14001e1dc
   14001e21b:	in     al,0xb8
   14001e21d:	xchg   edi,eax
   14001e21e:	push   rsp
   14001e21f:	call   rax
   14001e221:	mov    edx,0xc5d7f98f
   14001e226:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e227:	retf   0xe0ec
   14001e22a:	int3   
   14001e22b:	stos   DWORD PTR es:[rdi],eax
   14001e22c:	(bad)  
   14001e22e:	movabs ds:0xfc4900fffc7840df,eax
   14001e237:	jmp    QWORD PTR [rcx-0x66]
   14001e23a:	lock jmp QWORD PTR [rbp+0x20fff6c5]
   14001e241:	outs   dx,DWORD PTR ds:[rsi]
   14001e242:	icebp  
   14001e243:	inc    DWORD PTR [rax]
   14001e245:	push   rax
   14001e246:	icebp  
   14001e247:	call   FWORD PTR [rsi]
   14001e249:	imul   esi,edx,0xffffffff
   14001e24c:	sub    eax,0x2dfff274
   14001e251:	jb     0x14001e244
   14001e253:	call   FWORD PTR [rdi]
   14001e255:	addr32 out dx,al
   14001e257:	dec    DWORD PTR [rdx]
   14001e259:	(bad)  
   14001e25a:	(bad)  
   14001e25b:	dec    DWORD PTR [rsi-0x7a]
   14001e25e:	clc    
   14001e25f:	push   QWORD PTR [rbx-0x2c0f915c]
   14001e265:	rcr    BYTE PTR [rbx-0x48251225],0xe7
   14001e26c:	mov    bh,0x97
   14001e26e:	push   rbp
   14001e26f:	(bad)  
   14001e270:	jmp    0x14001e249
   14001e272:	mov    ah,0xe6
   14001e274:	mov    eax,0xf6ff5598
   14001e279:	in     al,0xc2
   14001e27b:	in     eax,0xb8
   14001e27d:	xchg   edi,eax
   14001e27e:	push   rsp
   14001e27f:	call   rcx
   14001e281:	mov    ebx,0xc5d7f990
   14001e286:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e287:	(bad)  
   14001e288:	out    0xe0,eax
   14001e28a:	ret    0x8bb3
   14001e28d:	test   al,0xe3
   14001e28f:	std    
   14001e290:	add    BYTE PTR [rsi-0x1],dl
   14001e293:	call   QWORD PTR [rsi]
   14001e295:	outs   dx,DWORD PTR ds:[rsi]
   14001e296:	in     eax,dx
   14001e297:	(bad)  
   14001e298:	fsub   st(2),st
   14001e29a:	cld    
   14001e29b:	(bad)  
   14001e29c:	(bad)  
   14001e29d:	(bad)  
   14001e29e:	(bad)  
   14001e29f:	(bad)  
   14001e2a0:	(bad)  
   14001e2a2:	sti    
   14001e2a3:	jmp    FWORD PTR [rbp-0x5e]
   14001e2a6:	idiv   edi
   14001e2a8:	add    BYTE PTR [rax-0x10],bl
   14001e2ab:	dec    DWORD PTR [rcx]
   14001e2ad:	pop    rsi
   14001e2ae:	bnd jmp QWORD PTR [rdi]
   14001e2b1:	jno    0x14001e2a5
   14001e2b3:	jmp    FWORD PTR [rbx+rsi*2]
   14001e2b6:	repnz call FWORD PTR [rip+0x14fff167]        # 0x15501d424
   14001e2bd:	ins    DWORD PTR es:[rdi],dx
   14001e2be:	(bad)  
   14001e2bf:	dec    DWORD PTR [rbx-0x3f004d65]
   14001e2c5:	stos   DWORD PTR es:[rdi],eax
   14001e2c6:	jp     0x14001e2aa
   14001e2c8:	out    0xd3,al
   14001e2ca:	mov    al,0xe4
   14001e2cc:	mov    eax,0xebff5597
   14001e2d1:	xlat   BYTE PTR ds:[rbx]
   14001e2d2:	mov    ch,0xe6
   14001e2d4:	mov    eax,0xf6ff5598
   14001e2d9:	in     al,0xc2
   14001e2db:	in     eax,0xb8
   14001e2dd:	xchg   edi,eax
   14001e2de:	push   rsp
   14001e2df:	dec    edi
   14001e2e1:	mov    ecx,0xc8d9f88e
   14001e2e6:	stos   BYTE PTR es:[rdi],al
   14001e2e7:	ret    0xdad9
   14001e2ea:	mov    ah,0xcf
   14001e2ec:	(bad)  
   14001e2ed:	outs   dx,BYTE PTR ds:[rsi]
   14001e2ee:	(bad)  
   14001e2ef:	inc    DWORD PTR [rdi+riz*2]
   14001e2f2:	icebp  
   14001e2f3:	jmp    FWORD PTR [rip+0xffffffffdafff07d]        # 0x11b01d376
   14001e2f9:	jmp    0x14001e2f9
   14001e2fe:	(bad)  
   14001e2ff:	(bad)  
   14001e300:	(bad)  
   14001e301:	(bad)  
   14001e302:	(bad)  
   14001e303:	(bad)  
   14001e304:	(bad)  
   14001e305:	(bad)  
   14001e306:	(bad)  
   14001e307:	inc    eax
   14001e309:	fdivr  st,st(1)
   14001e30b:	push   QWORD PTR [rdx]
   14001e30d:	jl     0x14001e300
   14001e30f:	inc    DWORD PTR [rax]
   14001e311:	pop    rdx
   14001e312:	out    dx,eax
   14001e313:	call   FWORD PTR [rsi]
   14001e315:	outs   dx,DWORD PTR ds:[rsi]
   14001e316:	repnz jmp FWORD PTR [rbx]
   14001e319:	jne    0x14001e30b
   14001e31b:	call   QWORD PTR [rdi]
   14001e31d:	ins    BYTE PTR es:[rdi],dx
   14001e31e:	cld    
   14001e31f:	(bad)  
   14001e320:	cmp    BYTE PTR [rsi-0x1],bh
   14001e323:	push   QWORD PTR [rdi-0x27118759]
   14001e329:	(bad)  
   14001e32a:	lahf   
   14001e32b:	jrcxz  0x14001e2e5
   14001e32d:	cwde   
   14001e32e:	push   rsi
   14001e32f:	(bad)  
   14001e330:	jmp    0x14001e309
   14001e332:	mov    ah,0xe6
   14001e334:	mov    eax,0xf6ff5598
   14001e339:	in     al,0xc2
   14001e33b:	in     eax,0xb8
   14001e33d:	xchg   edi,eax
   14001e33e:	push   rsp
   14001e33f:	call   rax
   14001e341:	mov    ecx,0xc9daf58e
   14001e346:	stos   DWORD PTR es:[rdi],eax
   14001e347:	ret    
   14001e348:	stos   DWORD PTR es:[rdi],eax
   14001e349:	mov    ebp,0x6f0df2cb
   14001e34e:	(bad)  
   14001e34f:	call   QWORD PTR [rsi]
   14001e351:	jb     0x14001e344
   14001e353:	jmp    QWORD PTR [rbx]
   14001e355:	jl     0x14001e34b
   14001e357:	call   rdi
   14001e359:	out    0xfb,eax
   14001e35b:	(bad)  
   14001e35c:	(bad)  
   14001e35d:	(bad)  
   14001e35e:	(bad)  
   14001e35f:	(bad)  
   14001e360:	(bad)  
   14001e361:	(bad)  
   14001e362:	(bad)  
   14001e363:	(bad)  
   14001e364:	(bad)  
   14001e365:	(bad)  
   14001e366:	(bad)  
   14001e367:	(bad)  
   14001e368:	(bad)  
   14001e369:	(bad)  
   14001e36a:	(bad)  
   14001e36b:	push   rbx
   14001e36d:	stc    
   14001e36e:	(bad)  
   14001e36f:	dec    DWORD PTR [rax+0x6fff7b3]
   14001e375:	movsxd esi,eax
   14001e377:	dec    DWORD PTR [riz*2+0x6f19fff2]
   14001e37e:	repz jmp QWORD PTR [rdx]
   14001e381:	jns    0x14001e382
   14001e383:	call   QWORD PTR [rcx-0x2d0a706a]
   14001e389:	mov    ebp,0x98b8e796
   14001e38e:	push   rsi
   14001e38f:	(bad)  
   14001e390:	jmp    0x14001e369
   14001e392:	mov    ah,0xe6
   14001e394:	mov    eax,0xf6ff5598
   14001e399:	in     al,0xc2
   14001e39b:	in     eax,0xb8
   14001e39d:	xchg   edi,eax
   14001e39e:	push   rsp
   14001e39f:	call   rax
   14001e3a1:	mov    ecx,0xc9dbf38f
   14001e3a6:	test   eax,0xec9a64c9
   14001e3ab:	call   FWORD PTR [rax]
   14001e3ad:	jnp    0x14001e3ae
   14001e3af:	call   QWORD PTR [rsi+rsi*2]
   14001e3b2:	bnd jmp QWORD PTR [rsi]
   14001e3b5:	jg     0x14001e3ac
   14001e3b7:	(bad)  
   14001e3b8:	(bad)  
   14001e3ba:	cld    
   14001e3bb:	(bad)  
   14001e3bc:	(bad)  
   14001e3bd:	(bad)  
   14001e3be:	(bad)  
   14001e3bf:	(bad)  
   14001e3c0:	(bad)  
   14001e3c1:	(bad)  
   14001e3c2:	(bad)  
   14001e3c3:	(bad)  
   14001e3c4:	(bad)  
   14001e3c5:	(bad)  
   14001e3c6:	(bad)  
   14001e3c7:	(bad)  
   14001e3c8:	(bad)  
   14001e3c9:	(bad)  
   14001e3ca:	(bad)  
   14001e3cb:	(bad)  
   14001e3cc:	(bad)  
   14001e3cd:	(bad)  
   14001e3ce:	(bad)  
   14001e3cf:	(bad)  
   14001e3d0:	(bad)  
   14001e3d1:	(bad)  
   14001e3d2:	(bad)  
   14001e3d3:	jmp    rdi
   14001e3d5:	icebp  
   14001e3d6:	(bad)  
   14001e3d7:	dec    DWORD PTR [rdx-0x72]
   14001e3da:	idiv   bh
   14001e3dc:	or     al,0x67
   14001e3de:	repz call FWORD PTR [rip+0x74ffff7c]        # 0x1b501e361
   14001e3e5:	mov    fs,WORD PTR [rsi-0x6a422d08]
   14001e3eb:	jmp    0x14001e3a5
   14001e3ed:	cwde   
   14001e3ee:	push   rsi
   14001e3ef:	(bad)  
   14001e3f0:	jmp    0x14001e3c9
   14001e3f2:	mov    ch,0xe7
   14001e3f4:	mov    eax,0xf6ff5598
   14001e3f9:	in     al,0xc2
   14001e3fb:	in     eax,0xb8
   14001e3fd:	xchg   edi,eax
   14001e3fe:	push   rsp
   14001e3ff:	call   rax
   14001e401:	mov    ecx,0xc5d6f08e
   14001e406:	movabs ds:0xfd821ffff98b3fcf,eax
   14001e40f:	call   QWORD PTR [rbx]
   14001e411:	jbe    0x14001e406
   14001e413:	jmp    QWORD PTR [rsi]
   14001e415:	xor    dh,0xff
   14001e418:	fucompp 
   14001e41a:	cld    
   14001e41b:	(bad)  
   14001e41c:	(bad)  
   14001e41d:	(bad)  
   14001e41e:	(bad)  
   14001e41f:	(bad)  
   14001e420:	(bad)  
   14001e421:	(bad)  
   14001e422:	(bad)  
   14001e423:	(bad)  
   14001e424:	(bad)  
   14001e425:	(bad)  
   14001e426:	(bad)  
   14001e427:	(bad)  
   14001e428:	(bad)  
   14001e429:	(bad)  
   14001e42a:	(bad)  
   14001e42b:	(bad)  
   14001e42c:	(bad)  
   14001e42d:	(bad)  
   14001e42e:	(bad)  
   14001e42f:	(bad)  
   14001e430:	(bad)  
   14001e431:	(bad)  
   14001e432:	(bad)  
   14001e433:	(bad)  
   14001e434:	(bad)  
   14001e435:	(bad)  
   14001e436:	(bad)  
   14001e437:	push   rcx
   14001e439:	idiv   ch
   14001e43b:	push   QWORD PTR [rip+0xaffef82]        # 0x14b01d3c3
   14001e441:	jno    0x14001e442
   14001e443:	call   FWORD PTR [rsp+rax*4-0x4d]
   14001e447:	stc    
   14001e448:	sar    DWORD PTR [rsi-0x6847146a],cl
   14001e44e:	push   rbp
   14001e44f:	(bad)  
   14001e450:	jmp    0x14001e42a
   14001e452:	mov    dh,0xe7
   14001e454:	mov    eax,0xf6ff5598
   14001e459:	in     al,0xc2
   14001e45b:	in     eax,0xb8
   14001e45d:	xchg   edi,eax
   14001e45e:	push   rsp
   14001e45f:	call   rax
   14001e461:	mov    ecx,0xc5d7f08e
   14001e466:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e467:	(bad)  
   14001e468:	ds mov ecx,?
   14001e46b:	call   FWORD PTR [rdi]
   14001e46d:	xchg   ch,bh
   14001e46f:	call   QWORD PTR [rcx+rdi*2]
   14001e472:	repz jmp QWORD PTR [rip+0xffffffffd8fff782]        # 0x11901dbfb
   14001e479:	jmp    0x14001e47b
   14001e47e:	(bad)  
   14001e47f:	(bad)  
   14001e480:	(bad)  
   14001e481:	(bad)  
   14001e482:	(bad)  
   14001e483:	(bad)  
   14001e484:	(bad)  
   14001e485:	(bad)  
   14001e486:	(bad)  
   14001e487:	(bad)  
   14001e488:	(bad)  
   14001e489:	(bad)  
   14001e48a:	(bad)  
   14001e48b:	(bad)  
   14001e48c:	(bad)  
   14001e48d:	(bad)  
   14001e48e:	(bad)  
   14001e48f:	(bad)  
   14001e490:	(bad)  
   14001e491:	(bad)  
   14001e492:	(bad)  
   14001e493:	(bad)  
   14001e494:	(bad)  
   14001e495:	(bad)  
   14001e496:	(bad)  
   14001e497:	(bad)  
   14001e498:	jmp    0x18001e28f
   14001e49d:	mov    esi,esp
   14001e49f:	dec    DWORD PTR [rdi+rsi*2]
   14001e4a2:	(bad)  
   14001e4a3:	call   FWORD PTR [rdi-0x7b]
   14001e4a6:	mov    dl,0xf9
   14001e4a8:	sar    BYTE PTR [rbp-0x6847146b],cl
   14001e4ae:	push   rbp
   14001e4af:	(bad)  
   14001e4b0:	in     al,dx
   14001e4b1:	fidiv  DWORD PTR [rsi+0x5598b8e7]
   14001e4b7:	push   rsi
   14001e4b9:	in     al,0xc2
   14001e4bb:	out    0xb8,al
   14001e4bd:	xchg   edi,eax
   14001e4be:	push   rsp
   14001e4bf:	call   rax
   14001e4c1:	mov    ecx,0xc5d7f38f
   14001e4c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e4c7:	retf   0x985f
   14001e4ca:	in     al,dx
   14001e4cb:	call   FWORD PTR [rsi]
   14001e4cd:	mov    bh,bh
   14001e4cf:	call   QWORD PTR [rsp+rdi*2]
   14001e4d2:	repnz jmp FWORD PTR [rdx]
   14001e4d5:	xchg   bh,dh
   14001e4d7:	(bad)  
   14001e4d8:	fucomp st(3)
   14001e4da:	std    
   14001e4db:	(bad)  
   14001e4dc:	(bad)  
   14001e4dd:	(bad)  
   14001e4de:	(bad)  
   14001e4df:	(bad)  
   14001e4e0:	(bad)  
   14001e4e1:	(bad)  
   14001e4e2:	(bad)  
   14001e4e3:	(bad)  
   14001e4e4:	(bad)  
   14001e4e5:	(bad)  
   14001e4e6:	(bad)  
   14001e4e7:	(bad)  
   14001e4e8:	(bad)  
   14001e4e9:	(bad)  
   14001e4ea:	(bad)  
   14001e4eb:	(bad)  
   14001e4ec:	(bad)  
   14001e4ed:	(bad)  
   14001e4ee:	(bad)  
   14001e4ef:	(bad)  
   14001e4f0:	cld    
   14001e4f1:	std    
   14001e4f2:	(bad)  
   14001e4f3:	inc    eax
   14001e4f5:	(bad)  
   14001e4f7:	push   QWORD PTR [rdi+rax*4]
   14001e4fa:	cmc    
   14001e4fb:	call   QWORD PTR [rip+0x1efff573]        # 0x15f01da74
   14001e501:	test   edi,edi
   14001e503:	push   QWORD PTR [rsi-0x72]
   14001e506:	movabs ds:0x5698b8ea91b8cff7,eax
   14001e50f:	(bad)  
   14001e510:	jmp    0x14001e4e9
   14001e512:	mov    ch,0xe7
   14001e514:	mov    eax,0xf6ff5497
   14001e519:	in     al,0xc2
   14001e51b:	out    0xb8,eax
   14001e51d:	xchg   edi,eax
   14001e51e:	push   rsp
   14001e51f:	call   rcx
   14001e521:	mov    edx,0xc8d9f78f
   14001e526:	stos   BYTE PTR es:[rdi],al
   14001e527:	ret    
   14001e528:	xchg   esp,eax
   14001e529:	test   eax,0x8a18f7ba
   14001e52e:	(bad)  
   14001e52f:	call   QWORD PTR [rdi+rdi*2]
   14001e532:	repz jmp FWORD PTR [rdx]
   14001e535:	mov    edi,esi
   14001e537:	(bad)  
   14001e538:	fsub   st(4),st
   14001e53a:	cld    
   14001e53b:	(bad)  
   14001e53c:	(bad)  
   14001e53d:	(bad)  
   14001e53e:	(bad)  
   14001e53f:	(bad)  
   14001e540:	(bad)  
   14001e541:	(bad)  
   14001e542:	(bad)  
   14001e543:	(bad)  
   14001e544:	(bad)  
   14001e545:	(bad)  
   14001e546:	(bad)  
   14001e547:	(bad)  
   14001e548:	(bad)  
   14001e549:	(bad)  
   14001e54a:	(bad)  
   14001e54b:	jmp    rsp
   14001e54d:	lock std 
   14001e54f:	jmp    QWORD PTR [rdx-0x5b]
   14001e552:	stc    
   14001e553:	inc    DWORD PTR [rcx]
   14001e555:	ins    DWORD PTR es:[rdi],dx
   14001e556:	idiv   bh
   14001e558:	(bad)  
   14001e559:	js     0x14001e550
   14001e55b:	call   FWORD PTR [rdx]
   14001e55d:	jle    0x14001e557
   14001e55f:	jmp    QWORD PTR [rsi]
   14001e561:	(bad)  
   14001e562:	(bad)  
   14001e563:	call   QWORD PTR [rsi-0x310b796e]
   14001e569:	mov    ecx,0x98b8e692
   14001e56e:	push   rsi
   14001e56f:	(bad)  
   14001e570:	(bad)  
   14001e571:	(bad)  
   14001e572:	mov    bl,0xe6
   14001e574:	mov    eax,0xf6ff5598
   14001e579:	in     al,0xc2
   14001e57b:	out    0xb8,eax
   14001e57d:	xchg   edi,eax
   14001e57e:	push   rsp
   14001e57f:	call   rax
   14001e581:	mov    edx,0xcadbfa8f
   14001e586:	lods   eax,DWORD PTR ds:[rsi]
   14001e587:	rol    esp,0xc2
   14001e58a:	pushf  
   14001e58b:	fcomp  DWORD PTR [rsi+rax*4]
   14001e58e:	(bad)  
   14001e58f:	dec    DWORD PTR [rdi]
   14001e591:	cmp    ecx,0xffffffff
   14001e594:	xor    BYTE PTR [rsp+rsi*8-0x4111e01],cl
   14001e59b:	(bad)  
   14001e59c:	(bad)  
   14001e59d:	(bad)  
   14001e59e:	(bad)  
   14001e59f:	(bad)  
   14001e5a0:	(bad)  
   14001e5a1:	(bad)  
   14001e5a2:	(bad)  
   14001e5a3:	(bad)  
   14001e5a4:	cld    
   14001e5a5:	cld    
   14001e5a6:	(bad)  
   14001e5a7:	jmp    FWORD PTR [rsi+0x23fffad2]
   14001e5ad:	test   edi,esi
   14001e5af:	inc    DWORD PTR [rsi]
   14001e5b1:	jno    0x14001e5a9
   14001e5b3:	jmp    QWORD PTR [rbx]
   14001e5b5:	test   dh,dh
   14001e5b7:	jmp    FWORD PTR [rip+0x1afff485]        # 0x15b01da42
   14001e5bd:	xchg   edi,edi
   14001e5bf:	inc    DWORD PTR [rax-0x6c]
   14001e5c2:	hlt    
   14001e5c3:	push   QWORD PTR [rbx-0x22139065]
   14001e5c9:	leave  
   14001e5ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e5cb:	in     eax,0xb8
   14001e5cd:	cwde   
   14001e5ce:	push   rsi
   14001e5cf:	(bad)  
   14001e5d0:	jmp    0xf8e999ab
   14001e5d5:	cwde   
   14001e5d6:	push   rbp
   14001e5d7:	push   rsi
   14001e5d9:	in     al,0xc2
   14001e5db:	out    0xb8,al
   14001e5dd:	xchg   edi,eax
   14001e5de:	push   rsp
   14001e5df:	dec    edi
   14001e5e1:	mov    eax,0xc8d8fa8d
   14001e5e6:	test   eax,0xb9d7e1c5
   14001e5eb:	mov    dh,0x67
   14001e5ed:	xchg   esp,eax
   14001e5ee:	(bad)  
   14001e5ef:	inc    DWORD PTR [rax]
   14001e5f1:	xchg   edi,edi
   14001e5f3:	push   QWORD PTR [rbx]
   14001e5f5:	(bad)  
   14001e5f6:	repz push rbp
   14001e5f9:	clc    
   14001e5fa:	cld    
   14001e5fb:	(bad)  
   14001e5fc:	(bad)  
   14001e5fd:	(bad)  
   14001e5fe:	(bad)  
   14001e5ff:	(bad)  
   14001e600:	fldl2e 
   14001e602:	std    
   14001e603:	jmp    QWORD PTR [rax-0x57]
   14001e606:	cli    
   14001e607:	inc    DWORD PTR [rdx]
   14001e609:	jne    0x14001e600
   14001e60b:	call   QWORD PTR [rip+0x2cfff67e]        # 0x16d01dc8f
   14001e611:	mov    esi,esi
   14001e613:	jmp    FWORD PTR [rsi]
   14001e615:	mov    esi,esi
   14001e617:	jmp    QWORD PTR [rcx]
   14001e619:	cmp    eax,0xffffffff
   14001e61c:	sbb    DWORD PTR [rdx-0x6a710001],edx
   14001e622:	sahf   
   14001e623:	cld    
   14001e624:	shr    DWORD PTR [rcx-0x1b091b85],0xc2
   14001e62b:	jmp    0x13f567de8
   14001e630:	out    dx,al
   14001e631:	(bad)  [rdi+0x5598b8eb]
   14001e637:	push   rsi
   14001e639:	in     al,0xc3
   14001e63b:	out    0xb8,al
   14001e63d:	xchg   edi,eax
   14001e63e:	push   rsp
   14001e63f:	dec    edi
   14001e641:	mov    ecx,0xc3d5fa8d
   14001e646:	movabs ds:0x84b1bcacc8ddeac9,eax
   14001e64f:	out    0xf,eax
   14001e651:	xchg   esp,edi
   14001e653:	dec    DWORD PTR [rbx]
   14001e655:	nop
   14001e656:	(bad)  
   14001e657:	(bad)  
   14001e658:	jle    0x14001e610
   14001e65a:	clc    
   14001e65b:	call   FWORD PTR [rax+0x2dfff8c6]
   14001e661:	xchg   ecx,eax
   14001e662:	idiv   edi
   14001e664:	add    eax,0x24fff77b
   14001e669:	mov    dh,bh
   14001e66b:	jmp    FWORD PTR [rsi]
   14001e66d:	nop
   14001e66e:	idiv   edi
   14001e670:	(bad)  
   14001e671:	(bad)  
   14001e672:	idiv   bh
   14001e674:	sub    BYTE PTR [rcx-0x6ef30009],cl
   14001e67a:	(bad)  
   14001e67b:	call   QWORD PTR [rdx-0x68]
   14001e67e:	in     al,dx
   14001e67f:	push   QWORD PTR [rbx-0x200e966b]
   14001e685:	int3   
   14001e686:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e687:	in     al,0xf5
   14001e689:	loope  0x14001e64a
   14001e68b:	out    dx,eax
   14001e68c:	mov    eax,0xedff5497
   14001e691:	fnstenv [rsi+0x5598b8e9]
   14001e697:	push   rsi
   14001e699:	in     al,0xc3
   14001e69b:	out    0xb8,al
   14001e69d:	xchg   edi,eax
   14001e69e:	push   rsp
   14001e69f:	dec    esi
   14001e6a1:	mov    eax,0xc0d2fa8c
   14001e6a6:	sahf   
   14001e6a7:	retf   0xdbe8
   14001e6aa:	(bad)  
   14001e6ab:	mov    al,0xd7
   14001e6ad:	ret    
   14001e6ae:	movabs al,ds:0xff8902fe83a0aad6
   14001e6b7:	inc    DWORD PTR [rax]
   14001e6b9:	mov    edi,?
   14001e6bb:	dec    DWORD PTR [rdx]
   14001e6bd:	(bad)  
   14001e6be:	clc    
   14001e6bf:	call   FWORD PTR [rdi]
   14001e6c1:	mov    ah,dh
   14001e6c3:	push   QWORD PTR [rbx]
   14001e6c5:	xchg   edx,eax
   14001e6c6:	hlt    
   14001e6c7:	push   QWORD PTR [rip+0x31fff491]        # 0x17201db5e
   14001e6cd:	nop
   14001e6ce:	repz call FWORD PTR [rsi]
   14001e6d1:	(bad)  
   14001e6d2:	(bad)  
   14001e6d3:	inc    DWORD PTR [rsi]
   14001e6d5:	xchg   esp,eax
   14001e6d6:	(bad)  
   14001e6d7:	inc    DWORD PTR [rsi+rdx*4-0xc]
   14001e6db:	push   QWORD PTR [rbx+rbx*4-0x38220b89]
   14001e6e2:	movabs ds:0xb8dcefe8b8dbeee9,eax
   14001e6eb:	out    dx,eax
   14001e6ec:	mov    eax,0xedff5597
   14001e6f1:	fidiv  DWORD PTR [rsi+0x5598b8ea]
   14001e6f7:	push   rsi
   14001e6f9:	in     al,0xc3
   14001e6fb:	out    0xb8,eax
   14001e6fd:	xchg   edi,eax
   14001e6fe:	push   rsp
   14001e6ff:	dec    ebp
   14001e701:	mov    dh,0x8a
   14001e703:	cli    
   14001e704:	sar    DWORD PTR [rdi-0x271a3563],1
   14001e70a:	shl    BYTE PTR [rbx-0x23603c29],0xd5
   14001e711:	mov    edi,0xb2c0e798
   14001e716:	mov    ch,al
   14001e718:	rex.RX xchg edx,eax
   14001e71a:	sar    edi,cl
   14001e71c:	add    BYTE PTR [rcx-0x66f70001],dl
   14001e722:	(bad)  
   14001e723:	dec    DWORD PTR [rdi]
   14001e725:	xchg   edi,eax
   14001e726:	(bad)  
   14001e727:	dec    DWORD PTR [rdx]
   14001e729:	xchg   esp,eax
   14001e72a:	(bad)  
   14001e72b:	inc    DWORD PTR [rcx]
   14001e72d:	xchg   ebx,eax
   14001e72e:	(bad)  
   14001e72f:	call   QWORD PTR [rdi]
   14001e731:	xchg   esp,eax
   14001e732:	(bad)  
   14001e733:	jmp    FWORD PTR [rsp+rdx*4-0x40]
   14001e737:	inc    edx
   14001e739:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e73a:	jns    0x14001e72e
   14001e73c:	ffree  st(7)
   14001e73e:	movabs ds:0xaed2e5ebb4d9ece9,al
   14001e747:	call   0x12eb9c23a
   14001e74c:	mov    eax,0xedff5597
   14001e751:	fidiv  DWORD PTR [rsi+0x5598b8ea]
   14001e757:	push   rsi
   14001e759:	in     al,0xc3
   14001e75b:	out    0xb8,eax
   14001e75d:	xchg   edi,eax
   14001e75e:	push   rsp
   14001e75f:	dec    ebp
   14001e761:	mov    bh,0x8b
   14001e763:	stc    
   14001e764:	rol    al,1
   14001e766:	lahf   
   14001e767:	ret    
   14001e768:	jrcxz  0x14001e741
   14001e76a:	mov    edi,0x97bed2af
   14001e76f:	loopne 0x14001e747
   14001e771:	ret    0xe49c
   14001e774:	loop   0x14001e748
   14001e776:	mov    ah,0xc7
   14001e778:	fld    st(1)
   14001e77a:	xchg   edx,eax
   14001e77b:	jmp    0x139909741
   14001e780:	and    DWORD PTR [rax-0x6ba90751],0xffffffcc
   14001e787:	std    
   14001e788:	pop    rsi
   14001e789:	xchg   esi,eax
   14001e78a:	(bad)  
   14001e78b:	sti    
   14001e78c:	xchg   edi,eax
   14001e78d:	movabs ds:0xc1d9f190b3cbf8a6,eax
   14001e796:	xchg   edx,eax
   14001e797:	jmp    0x125adb77f
   14001e79c:	jmp    0x125eb9975
   14001e7a1:	shr    BYTE PTR [rbx+rbp*8-0x1753301d],1
   14001e7a8:	out    dx,al
   14001e7a9:	fidiv  DWORD PTR [rdi+0x5597b8ed]
   14001e7af:	(bad)  
   14001e7b0:	in     eax,dx
   14001e7b1:	fnstenv [rsi+0x5598b8e7]
   14001e7b7:	(bad)  
   14001e7b8:	cli    
   14001e7b9:	out    0xc6,eax
   14001e7bb:	jmp    0x13f567f78
   14001e7c0:	sar    DWORD PTR [rdx+rdx*4-0x6e473201],cl
   14001e7c7:	loope  0x14001e7b2
   14001e7c9:	fadd   st(2),st
   14001e7cb:	mov    eax,0xe0a5c8dd
   14001e7d0:	fmulp  st(0),st
   14001e7d2:	movabs al,ds:0xadd1e6e0b1d3e6fa
   14001e7db:	lock (bad) 
   14001e7dd:	shr    DWORD PTR [rsi-0x502b1607],cl
   14001e7e3:	cmc    
   14001e7e4:	(bad)  
   14001e7e5:	(bad)  
   14001e7e6:	scas   eax,DWORD PTR es:[rdi]
   14001e7e7:	cmc    
   14001e7e8:	(bad)  
   14001e7e9:	(bad)  
   14001e7ea:	mov    cl,0xf5
   14001e7ec:	(bad)  
   14001e7ed:	(bad)  
   14001e7ee:	mov    al,0xf4
   14001e7f0:	(bad)  
   14001e7f1:	(bad)  
   14001e7f2:	mov    dl,0xf2
   14001e7f4:	in     eax,dx
   14001e7f5:	fnstenv [rbp-0x4824100f]
   14001e7fb:	repnz in eax,dx
   14001e7fd:	fidiv  DWORD PTR [rbp-0x4b26130f]
   14001e803:	out    dx,eax
   14001e804:	in     al,dx
   14001e805:	fnstenv [rbp-0x3e1b0817]
   14001e80b:	icebp  
   14001e80c:	mov    esp,0xedff5b9d
   14001e811:	fnstenv [rbp+rbp*8-0x97593a]
   14001e818:	fcmovb st,st(4)
   14001e81a:	popf   
   14001e81b:	ror    ebp,0xb5
   14001e81e:	mov    DWORD PTR [rcx-0x61],ebx
   14001e821:	test   BYTE PTR [rcx+0x3a],cl
   14001e824:	mov    eax,0xccd36f9e
   14001e829:	scas   al,BYTE PTR es:[rdi]
   14001e82a:	jb     0x14001e82b
   14001e82c:	int3   
   14001e82d:	scas   al,BYTE PTR es:[rdi]
   14001e82e:	jb     0x14001e82f
   14001e830:	int3   
   14001e831:	scas   al,BYTE PTR es:[rdi]
   14001e832:	jb     0x14001e833
   14001e834:	retf   
   14001e835:	lods   eax,DWORD PTR ds:[rsi]
   14001e836:	jno    0x14001e837
   14001e838:	retf   
   14001e839:	lods   al,BYTE PTR ds:[rsi]
   14001e83a:	jo     0x14001e83b
   14001e83c:	retf   
   14001e83d:	lods   al,BYTE PTR ds:[rsi]
   14001e83e:	jo     0x14001e83f
   14001e840:	retf   0x6fab
   14001e843:	dec    ecx
   14001e845:	stos   DWORD PTR es:[rdi],eax
   14001e846:	ins    DWORD PTR es:[rdi],dx
   14001e847:	dec    eax
   14001e849:	stos   BYTE PTR es:[rdi],al
   14001e84a:	ins    BYTE PTR es:[rdi],dx
   14001e84b:	dec    eax
   14001e84d:	test   eax,0xa8c7ff6b
   14001e852:	push   0xffffffffffffffff
   14001e854:	(bad)  
   14001e855:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e856:	imul   edi,edi,0xff68a6c6
   14001e85c:	vpackuswb ymm7,ymm11,ymm7
   14001e860:	(bad)  
   14001e861:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e862:	inc    dx
   14001e865:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e866:	gs inc edx
   14001e869:	movabs ds:0x9ab5944f88a4ff64,eax
   14001e872:	push   0x578da974
   14001e877:	push   rdx
	...
   14001e8e0:	inc    BYTE PTR [rax]
   14001e8e2:	add    eax,DWORD PTR [rax]
   14001e8e4:	add    BYTE PTR [rax],0x1
	...
   14001e937:	add    BYTE PTR [rax],al
   14001e939:	add    BYTE PTR [rbx],al
   14001e93b:	add    bh,bh
   14001e93d:	(bad)  
   14001e93e:	inc    DWORD PTR [rax]
   14001e940:	sub    BYTE PTR [rax],al
   14001e942:	add    BYTE PTR [rax],al
   14001e944:	adc    BYTE PTR [rax],al
   14001e946:	add    BYTE PTR [rax],al
   14001e948:	and    BYTE PTR [rax],al
   14001e94a:	add    BYTE PTR [rax],al
   14001e94c:	add    DWORD PTR [rax],eax
   14001e94e:	and    BYTE PTR [rax],al
   14001e950:	add    BYTE PTR [rax],al
   14001e952:	add    BYTE PTR [rax],al
   14001e954:	add    al,0x0
	...
   14001e967:	add    cl,cl
   14001e969:	cwde   
   14001e96a:	push   rbp
   14001e96b:	xchg   ecx,ecx
   14001e96d:	cwde   
   14001e96e:	push   rbp
   14001e96f:	lock leave 
   14001e971:	cwde   
   14001e972:	push   rbp
   14001e973:	dec    ecx
   14001e975:	cwde   
   14001e976:	push   rbp
   14001e977:	dec    ecx
   14001e979:	cwde   
   14001e97a:	push   rbp
   14001e97b:	dec    ecx
   14001e97d:	cwde   
   14001e97e:	push   rbp
   14001e97f:	dec    ecx
   14001e981:	cwde   
   14001e982:	push   rbp
   14001e983:	dec    ecx
   14001e985:	cwde   
   14001e986:	push   rbp
   14001e987:	dec    ecx
   14001e989:	cwde   
   14001e98a:	push   rbp
   14001e98b:	dec    ecx
   14001e98d:	cwde   
   14001e98e:	push   rbp
   14001e98f:	dec    ecx
   14001e991:	cwde   
   14001e992:	push   rbp
   14001e993:	dec    ecx
   14001e995:	cwde   
   14001e996:	push   rbp
   14001e997:	dec    ecx
   14001e999:	cwde   
   14001e99a:	push   rbp
   14001e99b:	dec    ecx
   14001e99d:	cwde   
   14001e99e:	push   rbp
   14001e99f:	dec    ecx
   14001e9a1:	cwde   
   14001e9a2:	push   rbp
   14001e9a3:	repz leave 
   14001e9a5:	cwde   
   14001e9a6:	push   rbp
   14001e9a7:	mov    cl,cl
   14001e9a9:	cwde   
   14001e9aa:	push   rbp
   14001e9ab:	lock in al,dx
   14001e9ad:	(bad)  
   14001e9ae:	mov    ah,0xdd
   14001e9b0:	jmp    0x14001e986
   14001e9b2:	mov    al,0xff
   14001e9b4:	jmp    0x12801988b
   14001e9b9:	shr    BYTE PTR [rbx-0x56311901],1
   14001e9bf:	jmp    rbp
   14001e9c1:	int    0xa7
   14001e9c3:	jmp    rsp
   14001e9c5:	retf   
   14001e9c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e9c7:	jmp    rsp
   14001e9c9:	retf   0xffa4
   14001e9cc:	in     al,0xca
   14001e9ce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e9cf:	jmp    rsp
   14001e9d1:	retf   0xffa4
   14001e9d4:	in     al,0xca
   14001e9d6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e9d7:	jmp    rsp
   14001e9d9:	retf   0xffa4
   14001e9dc:	in     al,0xca
   14001e9de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e9df:	jmp    rsp
   14001e9e1:	int3   
   14001e9e2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e9e3:	(bad)  
   14001e9e5:	cwde   
   14001e9e6:	push   rbp
   14001e9e7:	repz leave 
   14001e9e9:	cwde   
   14001e9ea:	push   rbp
   14001e9eb:	(bad)  
   14001e9ec:	in     eax,dx
   14001e9ed:	xlat   BYTE PTR ds:[rbx]
   14001e9ee:	mov    bh,0xff
   14001e9f0:	loope  0x14001e9b1
   14001e9f2:	mov    bh,bh
   14001e9f4:	fistp  QWORD PTR [rbp+rax*4-0x7e462301]
   14001e9fb:	jmp    QWORD PTR [rax+0x4eff9aa6]
   14001ea01:	mov    es,ebx
   14001ea03:	jmp    QWORD PTR [rdx]
   14001ea05:	(bad)  
   14001ea06:	xlat   BYTE PTR ds:[rbx]
   14001ea07:	jmp    QWORD PTR [rcx]
   14001ea09:	jg     0x14001e9df
   14001ea0b:	dec    DWORD PTR [rcx-0x77]
   14001ea0e:	mov    ebp,0x919e99ff
   14001ea13:	call   rsp
   14001ea15:	lods   eax,DWORD PTR ds:[rsi]
   14001ea16:	jno    0x14001ea17
   14001ea18:	(bad)  
   14001ea19:	lods   eax,DWORD PTR ds:[rsi]
   14001ea1a:	jno    0x14001ea1b
   14001ea1c:	(bad)  
   14001ea1d:	lods   eax,DWORD PTR ds:[rsi]
   14001ea1e:	jno    0x14001ea1f
   14001ea20:	in     al,0xca
   14001ea22:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ea23:	dec    ecx
   14001ea25:	cwde   
   14001ea26:	push   rbp
   14001ea27:	dec    ecx
   14001ea29:	cwde   
   14001ea2a:	push   rbp
   14001ea2b:	(bad)  
   14001ea2c:	out    dx,eax
   14001ea2d:	fidivr DWORD PTR [rcx-0x703e1c01]
   14001ea33:	(bad)  
   14001ea34:	fidivr DWORD PTR [rsp+rcx*4-0x356eb201]
   14001ea3b:	inc    DWORD PTR [rax]
   14001ea3d:	jg     0x14001ea32
   14001ea3f:	inc    DWORD PTR [rax]
   14001ea41:	cmp    eax,0xffffffff
   14001ea44:	add    BYTE PTR [rbx+rdi*8-0x57aff01],al
   14001ea4b:	inc    DWORD PTR [rax]
   14001ea4d:	xor    ah,0xff
   14001ea50:	add    BYTE PTR [rcx-0x17],bh
   14001ea53:	(bad)  
   14001ea54:	(bad)  
   14001ea55:	test   BYTE PTR [rdi+0x74aaccff],bh
   14001ea5b:	call   rsp
   14001ea5d:	lods   eax,DWORD PTR ds:[rsi]
   14001ea5e:	jno    0x14001ea5f
   14001ea60:	in     al,0xca
   14001ea62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ea63:	dec    ecx
   14001ea65:	cwde   
   14001ea66:	push   rbp
   14001ea67:	dec    ecx
   14001ea69:	cwde   
   14001ea6a:	push   rbp
   14001ea6b:	push   rcx
   14001ea6d:	fdivr  QWORD PTR [rbp-0x6c3a1901]
   14001ea73:	call   FWORD PTR [rbp-0x6a]
   14001ea76:	ret    
   14001ea77:	inc    DWORD PTR [rax]
   14001ea79:	xor    edi,0xff951eff
   14001ea7f:	jmp    QWORD PTR [rbp+0xfffffd5]
   14001ea85:	nop
   14001ea86:	(bad)  
   14001ea87:	inc    DWORD PTR [rax]
   14001ea89:	mov    edi,edi
   14001ea8b:	inc    DWORD PTR [rax]
   14001ea8d:	mov    edi,edi
   14001ea8f:	inc    DWORD PTR [rax]
   14001ea91:	mov    bh,bh
   14001ea93:	inc    DWORD PTR [rax]
   14001ea95:	jnp    0x14001ea83
   14001ea97:	dec    DWORD PTR [rbx-0x7d]
   14001ea9a:	mov    dl,0xff
   14001ea9c:	(bad)  
   14001ea9d:	lods   eax,DWORD PTR ds:[rsi]
   14001ea9e:	jno    0x14001ea9f
   14001eaa0:	in     al,0xca
   14001eaa2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001eaa3:	dec    ecx
   14001eaa5:	cwde   
   14001eaa6:	push   rbp
   14001eaa7:	dec    ecx
   14001eaa9:	cwde   
   14001eaaa:	push   rbp
   14001eaab:	(bad)  
   14001eaac:	stc    
   14001eaad:	out    0xcc,eax
   14001eaaf:	jmp    FWORD PTR [rdi+0x3ffacb4]
   14001eab5:	jle    0x14001eaa7
   14001eab7:	inc    DWORD PTR [rax]
   14001eab9:	xchg   edi,edi
   14001eabb:	call   FWORD PTR [rsi]
   14001eabd:	xchg   esi,eax
   14001eabe:	(bad)  
   14001eabf:	(bad)  
   14001eac0:	(bad)  
   14001eac1:	(bad)  
   14001eac2:	(bad)  
   14001eac3:	jmp    rsp
   14001eac5:	repz (bad) 
   14001eac7:	dec    DWORD PTR [rax-0x55]
   14001eaca:	(bad)  
   14001eacb:	inc    DWORD PTR [rax]
   14001eacd:	mov    bh,bh
   14001eacf:	inc    DWORD PTR [rax]
   14001ead1:	mov    edi,edi
   14001ead3:	inc    DWORD PTR [rax]
   14001ead5:	mov    bh,bh
   14001ead7:	inc    DWORD PTR [rdx]
   14001ead9:	jbe    0x14001eabd
   14001eadb:	call   QWORD PTR [rbp-0x1b006f66]
   14001eae1:	retf   0xffa4
   14001eae4:	leave  
   14001eae5:	cwde   
   14001eae6:	push   rbp
   14001eae7:	dec    ecx
   14001eae9:	cwde   
   14001eaea:	push   rbp
   14001eaeb:	(bad)  
   14001eaec:	(bad)  
   14001eaed:	out    dx,al
   14001eaee:	(bad)  
   14001eaef:	call   QWORD PTR [rdi-0x65]
   14001eaf2:	(bad)  
   14001eaf3:	inc    DWORD PTR [rax]
   14001eaf5:	(bad)  
   14001eaf6:	clc    
   14001eaf7:	inc    DWORD PTR [rax]
   14001eaf9:	xchg   edi,edi
   14001eafb:	call   FWORD PTR [rsi]
   14001eafd:	xchg   edi,eax
   14001eafe:	(bad)  
   14001eaff:	(bad)  
   14001eb00:	(bad)  
   14001eb01:	(bad)  
   14001eb02:	(bad)  
   14001eb03:	(bad)  
   14001eb04:	(bad)  
   14001eb05:	(bad)  
   14001eb06:	(bad)  
   14001eb07:	(bad)  
   14001eb08:	(bad)  
   14001eb09:	(bad)  
   14001eb0a:	(bad)  
   14001eb0b:	call   FWORD PTR [rcx+0xcfffed0]
   14001eb11:	nop
   14001eb12:	(bad)  
   14001eb13:	inc    DWORD PTR [rax]
   14001eb15:	mov    edi,edi
   14001eb17:	inc    DWORD PTR [rax]
   14001eb19:	jle    0x14001eb0c
   14001eb1b:	(bad)  
   14001eb1c:	(bad)  
   14001eb1d:	(bad)  
   14001eb1e:	mov    esp,0xa4cae4ff
   14001eb23:	dec    ecx
   14001eb25:	cwde   
   14001eb26:	push   rbp
   14001eb27:	dec    ecx
   14001eb29:	cwde   
   14001eb2a:	push   rbp
   14001eb2b:	(bad)  
   14001eb2c:	(bad)  
   14001eb2d:	out    dx,al
   14001eb2e:	(bad)  
   14001eb2f:	push   QWORD PTR [rcx]
   14001eb31:	(bad)  
   14001eb32:	loop   0x14001eb33
   14001eb34:	add    BYTE PTR [rsp+rdi*8-0x77ff01],al
   14001eb3b:	call   FWORD PTR [rsi]
   14001eb3d:	xchg   edi,eax
   14001eb3e:	(bad)  
   14001eb3f:	(bad)  
   14001eb40:	(bad)  
   14001eb41:	(bad)  
   14001eb42:	(bad)  
   14001eb43:	(bad)  
   14001eb44:	(bad)  
   14001eb45:	(bad)  
   14001eb46:	(bad)  
   14001eb47:	(bad)  
   14001eb48:	(bad)  
   14001eb49:	(bad)  
   14001eb4a:	(bad)  
   14001eb4b:	(bad)  
   14001eb4c:	(bad)  
   14001eb4d:	(bad)  
   14001eb4e:	(bad)  
   14001eb4f:	(bad)  
   14001eb50:	fdivrp st(0),st
   14001eb52:	(bad)  
   14001eb53:	(bad)  
   14001eb54:	(bad)  
   14001eb55:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001eb56:	(bad)  
   14001eb57:	inc    DWORD PTR [rax]
   14001eb59:	test   cl,bh
   14001eb5b:	jmp    QWORD PTR [rax]
   14001eb5d:	js     0x14001eb28
   14001eb5f:	jmp    rsp
   14001eb61:	retf   0xffa4
   14001eb64:	leave  
   14001eb65:	cwde   
   14001eb66:	push   rbp
   14001eb67:	dec    ecx
   14001eb69:	cwde   
   14001eb6a:	push   rbp
   14001eb6b:	(bad)  
   14001eb6c:	(bad)  
   14001eb6d:	out    dx,al
   14001eb6e:	(bad)  
   14001eb6f:	jmp    FWORD PTR [rdi]
   14001eb71:	mov    ebx,fs
   14001eb73:	inc    DWORD PTR [rax]
   14001eb75:	test   ah,bh
   14001eb77:	inc    DWORD PTR [rax]
   14001eb79:	xchg   edi,edi
   14001eb7b:	call   FWORD PTR [rsi]
   14001eb7d:	xchg   edi,eax
   14001eb7e:	(bad)  
   14001eb7f:	(bad)  
   14001eb80:	(bad)  
   14001eb81:	(bad)  
   14001eb82:	(bad)  
   14001eb83:	(bad)  
   14001eb84:	(bad)  
   14001eb85:	(bad)  
   14001eb86:	(bad)  
   14001eb87:	(bad)  
   14001eb88:	(bad)  
   14001eb89:	(bad)  
   14001eb8a:	(bad)  
   14001eb8b:	(bad)  
   14001eb8c:	(bad)  
   14001eb8d:	(bad)  
   14001eb8e:	(bad)  
   14001eb8f:	(bad)  
   14001eb90:	fsubr  st,st(5)
   14001eb92:	(bad)  
   14001eb93:	push   QWORD PTR [rsi]
   14001eb95:	movabs ds:0x781ffff98300ffff,al
   14001eb9e:	retf   0xe4ff
   14001eba1:	retf   
   14001eba2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001eba3:	dec    ecx
   14001eba5:	cwde   
   14001eba6:	push   rbp
   14001eba7:	dec    ecx
   14001eba9:	cwde   
   14001ebaa:	push   rbp
   14001ebab:	(bad)  
   14001ebac:	(bad)  
   14001ebad:	out    dx,al
   14001ebae:	(bad)  
   14001ebaf:	call   FWORD PTR [rdx-0x61]
   14001ebb2:	fdiv   st(7),st
   14001ebb4:	add    BYTE PTR [rcx-0x78ff0008],al
   14001ebba:	(bad)  
   14001ebbb:	call   FWORD PTR [rsi]
   14001ebbd:	xchg   esi,eax
   14001ebbe:	(bad)  
   14001ebbf:	(bad)  
   14001ebc0:	(bad)  
   14001ebc1:	(bad)  
   14001ebc2:	(bad)  
   14001ebc3:	(bad)  
   14001ebc4:	(bad)  
   14001ebc5:	(bad)  
   14001ebc6:	(bad)  
   14001ebc7:	(bad)  
   14001ebc8:	(bad)  
   14001ebc9:	(bad)  
   14001ebca:	(bad)  
   14001ebcb:	dec    DWORD PTR [rbp+0x9ffffcb]
   14001ebd1:	(bad)  
   14001ebd2:	(bad)  
   14001ebd3:	inc    DWORD PTR [rax]
   14001ebd5:	mov    bh,bh
   14001ebd7:	inc    DWORD PTR [rax]
   14001ebd9:	jg     0x14001ebcd
   14001ebdb:	inc    DWORD PTR [rdx-0x7c]
   14001ebde:	mov    edi,0xa7cde5ff
   14001ebe3:	dec    ecx
   14001ebe5:	cwde   
   14001ebe6:	push   rbp
   14001ebe7:	dec    ecx
   14001ebe9:	cwde   
   14001ebea:	push   rbp
   14001ebeb:	(bad)  
   14001ebec:	(bad)  
   14001ebed:	out    dx,al
   14001ebee:	(bad)  
   14001ebef:	(bad)  
   14001ebf0:	mov    edi,0x3ffcaca
   14001ebf5:	jle    0x14001ebe7
   14001ebf7:	inc    DWORD PTR [rax]
   14001ebf9:	xchg   bh,bh
   14001ebfb:	call   FWORD PTR [rsi]
   14001ebfd:	xchg   ebp,eax
   14001ebfe:	(bad)  
   14001ebff:	(bad)  
   14001ec00:	(bad)  
   14001ec01:	(bad)  
   14001ec02:	(bad)  
   14001ec03:	jmp    rsp
   14001ec05:	repz (bad) 
   14001ec07:	inc    DWORD PTR [rbp-0x57]
   14001ec0a:	(bad)  
   14001ec0b:	inc    DWORD PTR [rax]
   14001ec0d:	mov    edi,edi
   14001ec0f:	inc    DWORD PTR [rax]
   14001ec11:	mov    bh,bh
   14001ec13:	inc    DWORD PTR [rax]
   14001ec15:	xchg   edi,edi
   14001ec17:	inc    DWORD PTR [rbx]
   14001ec19:	jp     0x14001ec04
   14001ec1b:	call   FWORD PTR [rbp-0x1900675d]
   14001ec21:	(bad)  
   14001ec22:	test   eax,0x5598c9ff
   14001ec27:	dec    ecx
   14001ec29:	cwde   
   14001ec2a:	push   rbp
   14001ec2b:	(bad)  
   14001ec2c:	(bad)  
   14001ec2d:	out    dx,al
   14001ec2e:	(bad)  
   14001ec2f:	(bad)  
   14001ec30:	std    
   14001ec31:	in     al,0xbf
   14001ec33:	jmp    FWORD PTR [rsi+riz*4-0x27]
   14001ec37:	inc    DWORD PTR [rax]
   14001ec39:	xor    bh,0xff
   14001ec3c:	(bad)  
   14001ec3d:	xchg   esp,eax
   14001ec3e:	(bad)  
   14001ec3f:	jmp    QWORD PTR [rbp+0xfffffd5]
   14001ec45:	mov    ?,edi
   14001ec47:	inc    DWORD PTR [rax]
   14001ec49:	mov    bh,bh
   14001ec4b:	inc    DWORD PTR [rax]
   14001ec4d:	xchg   edi,edi
   14001ec4f:	inc    DWORD PTR [rax]
   14001ec51:	xchg   edi,edi
   14001ec53:	inc    DWORD PTR [rax]
   14001ec55:	jg     0x14001ec4b
   14001ec57:	call   FWORD PTR [rbp-0x6d]
   14001ec5a:	mov    ebp,0x81b9dcff
   14001ec5f:	jmp    rdi
   14001ec61:	shr    BYTE PTR [rbx+0x5598c9ff],1
   14001ec67:	dec    ecx
   14001ec69:	cwde   
   14001ec6a:	push   rbp
   14001ec6b:	(bad)  
   14001ec6c:	(bad)  
   14001ec6d:	out    dx,al
   14001ec6e:	(bad)  
   14001ec6f:	(bad)  
   14001ec70:	std    
   14001ec71:	in     al,0xbf
   14001ec73:	push   rsi
   14001ec75:	loope  0x14001ec37
   14001ec77:	call   FWORD PTR [rbx-0x5d]
   14001ec7a:	loope  0x14001ec7b
   14001ec7c:	add    BYTE PTR [rax-0x7dff0009],al
   14001ec82:	cli    
   14001ec83:	inc    DWORD PTR [rax]
   14001ec85:	test   ah,bh
   14001ec87:	inc    DWORD PTR [rax]
   14001ec89:	test   ah,bh
   14001ec8b:	inc    DWORD PTR [rax]
   14001ec8d:	cmp    ecx,0xffffffff
   14001ec90:	add    BYTE PTR [rsi-0xc],bh
   14001ec93:	dec    DWORD PTR [rsi-0x6d]
   14001ec96:	int    0xff
   14001ec98:	fidivr DWORD PTR [rsp+rcx*4-0x7a432001]
   14001ec9f:	(bad)  
   14001eca0:	jmp    0x10a019b77
   14001eca5:	cwde   
   14001eca6:	push   rbp
   14001eca7:	dec    ecx
   14001eca9:	cwde   
   14001ecaa:	push   rbp
   14001ecab:	(bad)  
   14001ecac:	(bad)  
   14001ecad:	out    dx,al
   14001ecae:	(bad)  
   14001ecaf:	(bad)  
   14001ecb0:	std    
   14001ecb1:	in     al,0xbf
   14001ecb3:	(bad)  
   14001ecb4:	std    
   14001ecb5:	in     al,0xbf
   14001ecb7:	(bad)  
   14001ecb8:	std    
   14001ecb9:	in     al,0xbf
   14001ecbb:	(bad)  
   14001ecbc:	mov    edi,0x60ffcccb
   14001ecc1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ecc2:	loopne 0x14001ecc3
   14001ecc4:	sub    eax,0x2dffe990
   14001ecc9:	(bad)  
   14001eccd:	movabs eax,ds:0xc5e6ffafb6b1ffd9
   14001ecd6:	xchg   ebx,eax
   14001ecd7:	jmp    rbx
   14001ecd9:	ror    DWORD PTR [rdi-0x75401e01],0xff
   14001ece0:	jmp    0x14001ecb6
   14001ece2:	mov    al,0xff
   14001ece4:	leave  
   14001ece5:	cwde   
   14001ece6:	push   rbp
   14001ece7:	dec    ecx
   14001ece9:	cwde   
   14001ecea:	push   rbp
   14001eceb:	in     eax,dx
   14001ecec:	cli    
   14001eced:	call   0x12f00cbc0
   14001ecf2:	(bad)  
   14001ecf3:	(bad)  
   14001ecf4:	(bad)  
   14001ecf5:	out    dx,al
   14001ecf6:	(bad)  
   14001ecf7:	(bad)  
   14001ecf8:	(bad)  
   14001ecf9:	out    dx,al
   14001ecfa:	(bad)  
   14001ecfb:	(bad)  
   14001ecfc:	(bad)  
   14001ecfd:	out    dx,al
   14001ecfe:	(bad)  
   14001ecff:	(bad)  
   14001ed00:	(bad)  
   14001ed01:	out    dx,al
   14001ed02:	(bad)  
   14001ed03:	(bad)  
   14001ed04:	(bad)  
   14001ed05:	out    dx,al
   14001ed06:	(bad)  
   14001ed07:	(bad)  
   14001ed08:	(bad)  
   14001ed09:	out    dx,al
   14001ed0a:	(bad)  
   14001ed0b:	(bad)  
   14001ed0c:	(bad)  
   14001ed0d:	out    dx,al
   14001ed0e:	(bad)  
   14001ed0f:	(bad)  
   14001ed10:	stc    
   14001ed11:	out    0xcc,eax
   14001ed13:	push   rcx
   14001ed15:	fdivr  QWORD PTR [rbp-0x46251001]
   14001ed1b:	(bad)  
   14001ed1c:	in     eax,dx
   14001ed1d:	xlat   BYTE PTR ds:[rbx]
   14001ed1e:	mov    bh,0xff
   14001ed20:	in     al,dx
   14001ed21:	(bad)  
   14001ed22:	mov    ah,0xdd
   14001ed24:	leave  
   14001ed25:	cwde   
   14001ed26:	push   rbp
   14001ed27:	lock leave 
   14001ed29:	cwde   
   14001ed2a:	push   rbp
   14001ed2b:	test   cl,cl
   14001ed2d:	cwde   
   14001ed2e:	push   rbp
   14001ed2f:	in     eax,dx
   14001ed30:	leave  
   14001ed31:	cwde   
   14001ed32:	push   rbp
   14001ed33:	dec    ecx
   14001ed35:	cwde   
   14001ed36:	push   rbp
   14001ed37:	dec    ecx
   14001ed39:	cwde   
   14001ed3a:	push   rbp
   14001ed3b:	dec    ecx
   14001ed3d:	cwde   
   14001ed3e:	push   rbp
   14001ed3f:	dec    ecx
   14001ed41:	cwde   
   14001ed42:	push   rbp
   14001ed43:	dec    ecx
   14001ed45:	cwde   
   14001ed46:	push   rbp
   14001ed47:	dec    ecx
   14001ed49:	cwde   
   14001ed4a:	push   rbp
   14001ed4b:	dec    ecx
   14001ed4d:	cwde   
   14001ed4e:	push   rbp
   14001ed4f:	dec    ecx
   14001ed51:	cwde   
   14001ed52:	push   rbp
   14001ed53:	dec    ecx
   14001ed55:	cwde   
   14001ed56:	push   rbp
   14001ed57:	dec    ecx
   14001ed59:	cwde   
   14001ed5a:	push   rbp
   14001ed5b:	dec    ecx
   14001ed5d:	cwde   
   14001ed5e:	push   rbp
   14001ed5f:	dec    ecx
   14001ed61:	cwde   
   14001ed62:	push   rbp
   14001ed63:	lock leave 
   14001ed65:	cwde   
   14001ed66:	push   rbp
   14001ed67:	xchg   DWORD PTR [rax],eax
	...
   14001eda9:	add    BYTE PTR [rcx],al
   14001edab:	add    BYTE PTR [rax],dl
   14001edad:	add    BYTE PTR [rax+0x40],al
   14001edb0:	adc    BYTE PTR [rax],al
   14001edb2:	add    DWORD PTR [rax],eax
   14001edb4:	add    al,0x0
   14001edb6:	push   0x100000a
   14001edbb:	add    BYTE PTR [rax],dh
   14001edbd:	xor    BYTE PTR [rax],dl
   14001edbf:	add    BYTE PTR [rcx],al
   14001edc1:	add    BYTE PTR [rax+rax*1],al
   14001edc4:	push   0x2000006
   14001edc9:	add    BYTE PTR [rax],ah
   14001edcb:	and    BYTE PTR [rax],dl
   14001edcd:	add    BYTE PTR [rcx],al
   14001edcf:	add    BYTE PTR [rax+rax*1],al
   14001edd2:	call   0x14301edd9
   14001edd7:	add    BYTE PTR [rax],bl
   14001edd9:	sbb    BYTE PTR [rax],dl
   14001eddb:	add    BYTE PTR [rcx],al
   14001eddd:	add    BYTE PTR [rax+rax*1],al
   14001ede0:	call   0x14401ede6
   14001ede5:	add    BYTE PTR [rax],dl
   14001ede7:	adc    BYTE PTR [rax],dl
   14001ede9:	add    BYTE PTR [rcx],al
   14001edeb:	add    BYTE PTR [rax+rax*1],al
   14001edee:	sub    BYTE PTR [rcx],al
   14001edf0:	add    BYTE PTR [rax],al
   14001edf2:	add    eax,0x404000
   14001edf7:	add    BYTE PTR [rcx],al
   14001edf9:	add    BYTE PTR [rax],cl
   14001edfb:	add    BYTE PTR [rax],ch
   14001edfd:	(bad)  
   14001edfe:	add    BYTE PTR [rax],al
   14001ee00:	(bad)  
   14001ee01:	add    BYTE PTR [rax],dh
   14001ee03:	xor    BYTE PTR [rax],al
   14001ee05:	add    BYTE PTR [rcx],al
   14001ee07:	add    BYTE PTR [rax],cl
   14001ee09:	add    BYTE PTR [rax+0x700000e],ch
   14001ee0f:	add    BYTE PTR [rax],ah
   14001ee11:	and    BYTE PTR [rax],al
   14001ee13:	add    BYTE PTR [rcx],al
   14001ee15:	add    BYTE PTR [rax],cl
   14001ee17:	add    BYTE PTR [rax+0x8000008],ch
   14001ee1d:	add    BYTE PTR [rax],bl
   14001ee1f:	sbb    BYTE PTR [rax],al
   14001ee21:	add    BYTE PTR [rcx],al
   14001ee23:	add    BYTE PTR [rax],cl
   14001ee25:	add    al,cl
   14001ee27:	(bad)  
   14001ee28:	add    BYTE PTR [rax],al
   14001ee2a:	or     DWORD PTR [rax],eax
   14001ee2c:	adc    BYTE PTR [rax],dl
   14001ee2e:	add    BYTE PTR [rax],al
   14001ee30:	add    DWORD PTR [rax],eax
   14001ee32:	or     BYTE PTR [rax],al
   14001ee34:	push   0xa000005
   14001ee39:	add    BYTE PTR [rax],al
   14001ee3b:	add    BYTE PTR [rax],al
   14001ee3d:	add    BYTE PTR [rcx],al
   14001ee3f:	add    BYTE PTR [rax],ah
   14001ee41:	add    BYTE PTR [rdi+0xb00008f],bh
   14001ee47:	add    BYTE PTR [rax+0x40],al
   14001ee4a:	add    BYTE PTR [rax],al
   14001ee4c:	add    DWORD PTR [rax],eax
   14001ee4e:	and    BYTE PTR [rax],al
   14001ee50:	sub    BYTE PTR [rdx+0x0],al
   14001ee53:	add    BYTE PTR [rax+rax*1],cl
   14001ee56:	xor    BYTE PTR [rax],dh
   14001ee58:	add    BYTE PTR [rax],al
   14001ee5a:	add    DWORD PTR [rax],eax
   14001ee5c:	and    BYTE PTR [rax],al
   14001ee5e:	test   al,0x25
   14001ee60:	add    BYTE PTR [rax],al
   14001ee62:	or     eax,0x202000
   14001ee67:	add    BYTE PTR [rcx],al
   14001ee69:	add    BYTE PTR [rax],ah
   14001ee6b:	add    BYTE PTR [rax+0xe000010],ch
   14001ee71:	add    BYTE PTR [rax],bl
   14001ee73:	sbb    BYTE PTR [rax],al
   14001ee75:	add    BYTE PTR [rcx],al
   14001ee77:	add    BYTE PTR [rax],ah
   14001ee79:	add    BYTE PTR [rax+0xf000009],cl
   14001ee7f:	add    BYTE PTR [rax],dl
   14001ee81:	adc    BYTE PTR [rax],al
   14001ee83:	add    BYTE PTR [rcx],al
   14001ee85:	add    BYTE PTR [rax],ah
   14001ee87:	add    BYTE PTR [rax+0x4],ch
   14001ee8a:	add    BYTE PTR [rax],al
   14001ee8c:	adc    BYTE PTR [rax],al
   14001ee8e:	add    BYTE PTR [rax],al
   14001ee90:	sub    BYTE PTR [rax],al
   14001ee92:	add    BYTE PTR [rax],al
   14001ee94:	adc    BYTE PTR [rax],al
   14001ee96:	add    BYTE PTR [rax],al
   14001ee98:	and    BYTE PTR [rax],al
   14001ee9a:	add    BYTE PTR [rax],al
   14001ee9c:	add    DWORD PTR [rax],eax
   14001ee9e:	add    al,0x0
   14001eea0:	add    BYTE PTR [rax],al
   14001eea2:	add    BYTE PTR [rax],al
   14001eea4:	add    BYTE PTR [rax],0x0
	...
   14001eebb:	add    BYTE PTR [rax],al
   14001eebd:	add    BYTE PTR [rax+0x800000],al
   14001eec3:	add    BYTE PTR [rax],al
   14001eec5:	add    BYTE PTR [rax+0x8000],0x0
   14001eecc:	add    BYTE PTR [rax],0x80
   14001eecf:	add    BYTE PTR [rax-0x7fffff80],al
   14001eed5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14001eedc:	add    BYTE PTR [rax],al
   14001eede:	inc    DWORD PTR [rax]
   14001eee0:	add    bh,bh
   14001eee2:	add    BYTE PTR [rax],al
   14001eee4:	add    bh,bh
   14001eee6:	inc    DWORD PTR [rax]
   14001eee8:	inc    DWORD PTR [rax]
   14001eeea:	add    BYTE PTR [rax],al
   14001eeec:	inc    DWORD PTR [rax]
   14001eeee:	inc    DWORD PTR [rax]
   14001eef0:	(bad)  
   14001eef1:	inc    DWORD PTR [rax]
   14001eef3:	add    bh,bh
   14001eef5:	(bad)  
   14001eef6:	inc    DWORD PTR [rax]
   14001eef8:	add    BYTE PTR [rdi+0x77],dh
   14001eefb:	ja     0x14001ef74
   14001eefd:	ja     0x14001ef76
   14001eeff:	jo     0x14001ef01
   14001ef01:	jg     0x14001eefb
   14001ef03:	(bad)  
   14001ef04:	dec    DWORD PTR [rdi+0x7f0070ff]
   14001ef0a:	(bad)  
   14001ef0b:	clc    
   14001ef0c:	(bad)  
   14001ef0d:	(bad)  
   14001ef0e:	push   QWORD PTR [rax-0x74]
   14001ef11:	int3   
   14001ef12:	int3   
   14001ef13:	int3   
   14001ef14:	enter  0xffff,0x70
   14001ef18:	(bad)  
   14001ef19:	out    dx,al
   14001ef1a:	out    dx,al
   14001ef1b:	out    dx,al
   14001ef1c:	in     al,dx
   14001ef1d:	dec    DWORD PTR [rdi-0x4c1c3180]
   14001ef23:	ds in  al,dx
   14001ef25:	(bad)  
   14001ef26:	inc    DWORD PTR [rax-0x6404c432]
   14001ef2c:	in     al,dx
   14001ef2d:	(bad)  
   14001ef2e:	inc    DWORD PTR [rax-0x7600c632]
   14001ef34:	in     al,dx
   14001ef35:	dec    DWORD PTR [rdi-0x443180]
   14001ef3b:	mov    ebp,esp
   14001ef3d:	(bad)  
   14001ef3e:	inc    DWORD PTR [rax-0x4806c632]
   14001ef44:	in     al,dx
   14001ef45:	(bad)  
   14001ef46:	inc    DWORD PTR [rax+0x7e3bebce]
   14001ef4c:	in     al,dx
   14001ef4d:	dec    DWORD PTR [rdi-0x11113180]
   14001ef53:	out    dx,al
   14001ef54:	in     al,dx
   14001ef55:	(bad)  
   14001ef56:	clc    
   14001ef57:	or     BYTE PTR [rsp+rcx*8-0x7373334],0x88
   14001ef5f:	add    BYTE PTR [rax],0x8f
   14001ef62:	(bad)  
   14001ef63:	(bad)  
   14001ef64:	(bad)  
   14001ef65:	clc    
   14001ef66:	clc    
   14001ef67:	add    BYTE PTR [rax],al
   14001ef69:	(bad)  
   14001ef6a:	(bad)  
   14001ef6b:	dec    DWORD PTR [rdi+0x80f8]
   14001ef71:	mov    BYTE PTR [rax+0x888888],cl
   14001ef77:	add    al,al
   14001ef79:	add    DWORD PTR [rax],eax
   14001ef7b:	add    al,al
   14001ef7d:	add    DWORD PTR [rax],eax
   14001ef7f:	add    al,al
   14001ef81:	add    DWORD PTR [rax],eax
   14001ef83:	add    BYTE PTR [rax],al
   14001ef85:	add    DWORD PTR [rax],eax
   14001ef87:	add    BYTE PTR [rax],al
   14001ef89:	add    DWORD PTR [rax],eax
   14001ef8b:	add    BYTE PTR [rax],al
   14001ef8d:	add    DWORD PTR [rax],eax
   14001ef8f:	add    BYTE PTR [rax],al
   14001ef91:	add    DWORD PTR [rax],eax
   14001ef93:	add    BYTE PTR [rax],al
   14001ef95:	add    DWORD PTR [rax],eax
   14001ef97:	add    BYTE PTR [rax],al
   14001ef99:	add    DWORD PTR [rax],eax
   14001ef9b:	add    BYTE PTR [rax],al
   14001ef9d:	add    DWORD PTR [rax],eax
   14001ef9f:	add    BYTE PTR [rax],al
   14001efa1:	add    DWORD PTR [rax],eax
   14001efa3:	add    BYTE PTR [rax],al
   14001efa5:	add    DWORD PTR [rax],eax
   14001efa7:	add    BYTE PTR [rax],al
   14001efa9:	add    DWORD PTR [rax],eax
   14001efab:	add    al,al
   14001efad:	add    eax,DWORD PTR [rax]
   14001efaf:	add    al,al
   14001efb1:	(bad)  
   14001efb2:	add    BYTE PTR [rax],al
   14001efb4:	ror    BYTE PTR [rdi],0x0
   14001efb7:	add    BYTE PTR [rax],ch
   14001efb9:	add    BYTE PTR [rax],al
   14001efbb:	add    BYTE PTR [rax],dl
   14001efbd:	add    BYTE PTR [rax],al
   14001efbf:	add    BYTE PTR [rax],ah
   14001efc1:	add    BYTE PTR [rax],al
   14001efc3:	add    BYTE PTR [rcx],al
   14001efc5:	add    BYTE PTR [rax],cl
   14001efc7:	add    BYTE PTR [rax],al
   14001efc9:	add    BYTE PTR [rax],al
   14001efcb:	add    BYTE PTR [rax],al
   14001efcd:	add    DWORD PTR [rax],eax
	...
   14001efd7:	add    BYTE PTR [rax],al
   14001efd9:	add    DWORD PTR [rax],eax
   14001efdb:	add    BYTE PTR [rax],al
   14001efdd:	add    DWORD PTR [rax],eax
   14001efdf:	add    BYTE PTR [rax],al
   14001efe1:	add    BYTE PTR [rax],al
   14001efe3:	add    BYTE PTR [rdx+0x7a],bh
   14001efe6:	jp     0x14001efe8
   14001efe8:	(bad)  
   14001efe9:	jle    0x14001efeb
   14001efeb:	add    BYTE PTR [rdx-0x34],ch
   14001efee:	ins    BYTE PTR es:[rdi],dx
   14001efef:	add    BYTE PTR [rsi-0x35],dh
   14001eff2:	imul   eax,DWORD PTR [rax],0x681ff
   14001eff8:	xlat   BYTE PTR ds:[rbx]
   14001eff9:	mov    eax,0xb1fb0050
   14001effe:	imul   eax,DWORD PTR [rax],0x6eb5fe
   14001f004:	test   eax,0xc005dc0
   14001f009:	jns    0x14001efe5
   14001f00b:	add    BYTE PTR [rdi],al
   14001f00d:	jle    0x14001eff2
   14001f00f:	add    BYTE PTR [rip+0x3100b69d],ch        # 0x17102a6b2
   14001f015:	lahf   
   14001f016:	mov    ch,0x0
   14001f018:	(bad)  
   14001f019:	sahf   
   14001f01a:	mov    dh,0x0
   14001f01c:	movabs al,cs:0x944c00b2a03f00b9
   14001f026:	scas   al,BYTE PTR es:[rdi]
   14001f027:	add    BYTE PTR [rbp-0x6b],bl
   14001f02a:	stos   BYTE PTR es:[rdi],al
   14001f02b:	add    BYTE PTR [rdx-0x69],ah
   14001f02e:	test   eax,0xe5840f00
   14001f033:	add    BYTE PTR [rbx],cl
   14001f035:	mov    ebp,edi
   14001f037:	add    BYTE PTR [rbx+rcx*4],cl
   14001f03a:	in     eax,dx
   14001f03b:	add    BYTE PTR [rcx],dl
   14001f03d:	(bad)  
   14001f03e:	jrcxz  0x14001f040
   14001f040:	add    BYTE PTR [rax-0x7dffff0a],al
   14001f046:	stc    
   14001f047:	add    BYTE PTR [rax],al
   14001f049:	test   ebp,edi
   14001f04b:	add    BYTE PTR [rax],al
   14001f04d:	mov    esi,edi
   14001f04f:	add    BYTE PTR [rax-0x3f],bh
   14001f052:	inc    BYTE PTR [rax]
   14001f054:	xchg   BYTE PTR [rsi-0x6f6fff7a],al
   14001f05a:	nop
   14001f05b:	add    BYTE PTR [rbp-0x53ff6263],bl
   14001f061:	lods   al,BYTE PTR ds:[rsi]
   14001f062:	lods   al,BYTE PTR ds:[rsi]
   14001f063:	add    BYTE PTR [rdx-0x4aff4d4e],dh
   14001f069:	mov    ch,0xb5
   14001f06b:	add    BYTE PTR [rcx-0x40ff4647],bh
   14001f071:	mov    edi,0xde9b00bf
   14001f076:	cwde   
   14001f077:	add    BYTE PTR [rbp-0x5cff7028],bh
   14001f07d:	fst    QWORD PTR [rsi-0x6c255100]
   14001f083:	add    BYTE PTR [rcx-0x5aff6b24],ch
   14001f089:	ficomp WORD PTR [rax+rax*1+0x91d9b6]
   14001f090:	mov    cl,0xe1
   14001f092:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f093:	add    bh,al
   14001f095:	(bad)  
   14001f096:	lea    eax,[rax]
   14001f098:	fcom   st(5)
   14001f09a:	xchg   ecx,eax
   14001f09b:	add    al,ah
   14001f09d:	rol    DWORD PTR [rsi-0x7a2f1800],1
   14001f0a3:	add    bl,ch
   14001f0a5:	(bad)  
   14001f0a6:	xchg   edi,eax
   14001f0a7:	add    BYTE PTR [rdi-0x3fff0038],al
   14001f0ad:	rol    al,0x0
   14001f0b0:	(bad)
   14001f0b3:	add    dl,cl
   14001f0b5:	retf   0xca
   14001f0b8:	(bad)  
   14001f0ba:	loopne 0x14001f0bc
   14001f0bc:	in     eax,0xe5
   14001f0be:	out    0x0,al
   14001f0c0:	lock icebp 
   14001f0c2:	repnz add dl,dh
   14001f0c5:	repnz hlt 
   14001f0c7:	add    bl,dh
   14001f0c9:	hlt    
   14001f0ca:	cmc    
   14001f0cb:	add    ch,dh
   14001f0cd:	cmc    
   14001f0ce:	test   BYTE PTR [rax],0xf7
   14001f0d1:	idiv   eax
   14001f0d3:	add    bh,dh
   14001f0d5:	clc    
   14001f0d6:	stc    
   14001f0d7:	add    cl,bh
   14001f0d9:	stc    
   14001f0da:	cli    
   14001f0db:	add    bl,bh
   14001f0dd:	sti    
   14001f0de:	cld    
   14001f0df:	add    bl,bh
   14001f0e1:	cld    
   14001f0e2:	cld    
   14001f0e3:	add    dh,bh
   14001f0e5:	(bad)  
   14001f0e6:	inc    BYTE PTR [rax]
	...
   14001f3dc:	(bad)  
   14001f3dd:	(bad)  
   14001f3de:	inc    DWORD PTR [rax]
   14001f3e0:	add    BYTE PTR [rax],al
   14001f3e2:	add    DWORD PTR [rcx],eax
   14001f3e4:	add    DWORD PTR [rcx],eax
   14001f3e6:	add    DWORD PTR [rcx],eax
   14001f3e8:	add    DWORD PTR [rcx],eax
   14001f3ea:	add    DWORD PTR [rcx],eax
   14001f3ec:	add    DWORD PTR [rcx],eax
   14001f3ee:	add    DWORD PTR [rax],eax
   14001f3f0:	add    BYTE PTR [rax],al
   14001f3f2:	sbb    eax,0x38383838
   14001f3f7:	cmp    BYTE PTR [rax],bh
   14001f3f9:	cmp    al,0x38
   14001f3fb:	cmp    eax,0x1d3d3c
   14001f400:	add    BYTE PTR [rax],al
   14001f402:	(bad)  
   14001f403:	cmp    BYTE PTR [rax],bh
   14001f405:	cmp    BYTE PTR [rax+rdi*1],bh
   14001f408:	cmp    al,0x3c
   14001f40a:	cmp    al,0x3c
   14001f40c:	cmp    eax,0x8001e3d
   14001f411:	add    eax,0x2020202
   14001f416:	add    al,BYTE PTR [rdx]
   14001f418:	add    cl,BYTE PTR [rax]
   14001f41a:	cmp    BYTE PTR [rip+0x1f3d3d],bh        # 0x14021315d
   14001f420:	add    eax,0x2525252a
   14001f425:	(bad)  
   14001f426:	sub    BYTE PTR [rsi],ah
   14001f428:	add    bh,BYTE PTR cs:[rip+0x203d3d3d]        # 0x1603f316c
   14001f42f:	add    BYTE PTR [rdx],al
   14001f431:	and    eax,0x15150f03
   14001f436:	(bad)  
   14001f437:	or     DWORD PTR [rdi],ebp
   14001f439:	add    bh,BYTE PTR [rip+0x213d3d3d]        # 0x1613f317c
   14001f43f:	add    BYTE PTR [rdx],al
   14001f441:	and    eax,0x1b3d190c
   14001f446:	sbb    edx,DWORD PTR [rcx]
   14001f448:	xor    BYTE PTR [rdx],al
   14001f44a:	cmp    eax,0x213d3d3d
   14001f44f:	add    BYTE PTR [rdx],al
   14001f451:	and    eax,0x3d3d190b
   14001f456:	xor    cl,BYTE PTR [rdx]
   14001f458:	xor    BYTE PTR [rdx],al
   14001f45a:	cmp    eax,0x233d3d3d
   14001f45f:	add    BYTE PTR [rdx],al
   14001f461:	and    eax,0x3d3d1b0b
   14001f466:	sbb    al,0xa
   14001f468:	xor    BYTE PTR [rdx],al
   14001f46a:	cmp    eax,0x233d3d3d
   14001f46f:	add    BYTE PTR [rdx],al
   14001f471:	and    eax,0x1b3d180d
   14001f476:	sbb    DWORD PTR [rbx],edx
   14001f478:	xor    BYTE PTR [rdx],al
   14001f47a:	cmp    eax,0x233d3d3d
   14001f47f:	add    BYTE PTR [rdx],al
   14001f481:	and    eax,0x17141004
   14001f486:	adc    eax,DWORD PTR [rsi]
   14001f488:	xor    BYTE PTR [rdx],al
   14001f48a:	cmp    eax,0x233d3d3d
   14001f48f:	add    BYTE PTR [rip+0x2d2b282c],al        # 0x16d2d1cc1
   14001f495:	(bad)  
   14001f496:	xor    BYTE PTR [rax],dh
   14001f498:	xor    DWORD PTR [rip+0x36383d3d],eax        # 0x1763a31db
   14001f49e:	and    al,0x0
   14001f4a0:	or     BYTE PTR [rip+0x2020502],al        # 0x14203f9a8
   14001f4a6:	add    al,BYTE PTR [rdx]
   14001f4a8:	add    cl,BYTE PTR [rax]
   14001f4aa:	cmp    eax,0x23232324
   14001f4af:	add    BYTE PTR [rax],al
   14001f4b1:	add    BYTE PTR [rbx],ah
   14001f4b3:	cmp    eax,0x3d3d3d3d
   14001f4b8:	cmp    eax,0x38353d3d
   14001f4bd:	and    eax,DWORD PTR [rax]
   14001f4bf:	add    BYTE PTR [rax],al
   14001f4c1:	add    BYTE PTR [rdi*1+0x3d3d3d3d],dh
   14001f4c8:	cmp    eax,0x24353d3d
   14001f4cd:	add    BYTE PTR [rax],al
   14001f4cf:	add    BYTE PTR [rax],al
   14001f4d1:	add    BYTE PTR [rsp+rsi*1],dh
   14001f4d4:	xor    al,0x34
   14001f4d6:	xor    al,0x34
   14001f4d8:	xor    al,0x34
   14001f4da:	xor    al,0x24
   14001f4dc:	add    BYTE PTR [rax],al
   14001f4de:	add    BYTE PTR [rax],al
   14001f4e0:	rol    BYTE PTR [rcx],0x0
   14001f4e3:	add    al,al
   14001f4e5:	add    DWORD PTR [rax],eax
   14001f4e7:	add    al,al
   14001f4e9:	add    DWORD PTR [rax],eax
   14001f4eb:	add    BYTE PTR [rax],al
   14001f4ed:	add    DWORD PTR [rax],eax
   14001f4ef:	add    BYTE PTR [rax],al
   14001f4f1:	add    DWORD PTR [rax],eax
   14001f4f3:	add    BYTE PTR [rax],al
   14001f4f5:	add    DWORD PTR [rax],eax
   14001f4f7:	add    BYTE PTR [rax],al
   14001f4f9:	add    DWORD PTR [rax],eax
   14001f4fb:	add    BYTE PTR [rax],al
   14001f4fd:	add    DWORD PTR [rax],eax
   14001f4ff:	add    BYTE PTR [rax],al
   14001f501:	add    DWORD PTR [rax],eax
   14001f503:	add    BYTE PTR [rax],al
   14001f505:	add    DWORD PTR [rax],eax
   14001f507:	add    BYTE PTR [rax],al
   14001f509:	add    DWORD PTR [rax],eax
   14001f50b:	add    BYTE PTR [rax],al
   14001f50d:	add    DWORD PTR [rax],eax
   14001f50f:	add    BYTE PTR [rax],al
   14001f511:	add    DWORD PTR [rax],eax
   14001f513:	add    al,al
   14001f515:	add    eax,DWORD PTR [rax]
   14001f517:	add    al,al
   14001f519:	(bad)  
   14001f51a:	add    BYTE PTR [rax],al
   14001f51c:	ror    BYTE PTR [rdi],0x0
   14001f51f:	add    BYTE PTR [rax],ch
   14001f521:	add    BYTE PTR [rax],al
   14001f523:	add    BYTE PTR [rax],bl
   14001f525:	add    BYTE PTR [rax],al
   14001f527:	add    BYTE PTR [rax],dh
   14001f529:	add    BYTE PTR [rax],al
   14001f52b:	add    BYTE PTR [rcx],al
   14001f52d:	add    BYTE PTR [rax+rax*1],al
   14001f530:	add    BYTE PTR [rax],al
   14001f532:	add    BYTE PTR [rax],al
   14001f534:	and    BYTE PTR [rcx],al
	...
   14001f54e:	add    BYTE PTR [rax],0x0
   14001f551:	add    BYTE PTR [rax],0x0
   14001f554:	add    BYTE PTR [rax+0x800080],al
   14001f55a:	add    BYTE PTR [rax],al
   14001f55c:	add    BYTE PTR [rax],0x80
   14001f55f:	add    BYTE PTR [rax-0x7fffff80],al
   14001f565:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14001f56c:	add    BYTE PTR [rax],al
   14001f56e:	inc    DWORD PTR [rax]
   14001f570:	add    bh,bh
   14001f572:	add    BYTE PTR [rax],al
   14001f574:	add    bh,bh
   14001f576:	inc    DWORD PTR [rax]
   14001f578:	inc    DWORD PTR [rax]
   14001f57a:	add    BYTE PTR [rax],al
   14001f57c:	inc    DWORD PTR [rax]
   14001f57e:	inc    DWORD PTR [rax]
   14001f580:	(bad)  
   14001f581:	inc    DWORD PTR [rax]
   14001f583:	add    bh,bh
   14001f585:	(bad)  
   14001f586:	inc    DWORD PTR [rax]
	...
   14001f594:	add    BYTE PTR [rdi],al
   14001f596:	ja     0x14001f60f
   14001f598:	ja     0x14001f611
   14001f59a:	ja     0x14001f613
   14001f59c:	ja     0x14001f615
   14001f59e:	add    BYTE PTR [rax],al
   14001f5a0:	add    BYTE PTR [rax],cl
   14001f5a2:	(bad)  
   14001f5a3:	(bad)  
   14001f5a4:	(bad)  
   14001f5a5:	(bad)  
   14001f5a6:	(bad)  
   14001f5a7:	(bad)  
   14001f5a8:	push   rdi
   14001f5aa:	add    BYTE PTR [rax],al
   14001f5ac:	add    BYTE PTR [rax],cl
   14001f5ae:	(bad)  
   14001f5af:	(bad)  
   14001f5b0:	(bad)  
   14001f5b1:	(bad)  
   14001f5b2:	(bad)  
   14001f5b3:	(bad)  
   14001f5b4:	push   rdi
   14001f5b6:	add    BYTE PTR [rax],al
   14001f5b8:	add    BYTE PTR [rax],cl
   14001f5ba:	(bad)  
   14001f5bb:	(bad)  
   14001f5bc:	dec    DWORD PTR [rdi-0x8700001]
   14001f5c2:	add    BYTE PTR [rax],al
   14001f5c4:	add    BYTE PTR [rax],cl
   14001f5c6:	(bad)  
   14001f5c7:	clc    
   14001f5c8:	(bad)  
   14001f5c9:	(bad)  
   14001f5ca:	dec    DWORD PTR [rdi+0xf7ff]
   14001f5d0:	add    BYTE PTR [rax],cl
   14001f5d2:	(bad)  
   14001f5d3:	(bad)  
   14001f5d4:	(bad)  
   14001f5d5:	(bad)  
   14001f5d6:	(bad)  
   14001f5d7:	(bad)  
   14001f5d8:	push   rdi
   14001f5da:	add    BYTE PTR [rax],al
   14001f5dc:	add    BYTE PTR [rax],cl
   14001f5de:	(bad)  
   14001f5df:	(bad)  
   14001f5e0:	(bad)  
   14001f5e1:	clc    
   14001f5e2:	(bad)  
   14001f5e3:	(bad)  
   14001f5e4:	push   rdi
   14001f5e6:	add    BYTE PTR [rax],al
   14001f5e8:	mov    esp,cs
   14001f5ea:	int3   
   14001f5eb:	int3   
   14001f5ec:	int3   
   14001f5ed:	out    dx,eax
   14001f5ee:	(bad)  
   14001f5ef:	dec    DWORD PTR [rdi-0x31ffff09]
   14001f5f5:	out    dx,al
   14001f5f6:	out    dx,al
   14001f5f7:	out    dx,al
   14001f5f8:	out    dx,al
   14001f5f9:	iret   
   14001f5fa:	clc    
   14001f5fb:	(bad)  
   14001f5fc:	push   rdi
   14001f5fe:	add    BYTE PTR [rax],al
   14001f600:	(bad)  
   14001f601:	jrcxz  0x14001f5b6
   14001f603:	mov    bh,0xee
   14001f605:	iret   
   14001f606:	(bad)  
   14001f607:	(bad)  
   14001f608:	push   rdi
   14001f60a:	add    BYTE PTR [rax],al
   14001f60c:	(bad)  
   14001f60d:	jnp    0x14001f598
   14001f60f:	mov    ecx,0xffffcf7e
   14001f614:	push   rdi
   14001f616:	add    BYTE PTR [rax],al
   14001f618:	(bad)  
   14001f619:	cmp    edi,edi
   14001f61b:	mov    edi,DWORD PTR [rsi]
   14001f61d:	iret   
   14001f61e:	(bad)  
   14001f61f:	(bad)  
   14001f620:	push   rdi
   14001f622:	add    BYTE PTR [rax],al
   14001f624:	(bad)  
   14001f625:	mov    ebx,0xcf9ef8ff
   14001f62a:	(bad)  
   14001f62b:	dec    DWORD PTR [rdi-0x31ffff09]
   14001f631:	cmp    edi,edi
   14001f633:	mov    ecx,0xffffcfbe
   14001f638:	push   rdi
   14001f63a:	add    BYTE PTR [rax],al
   14001f63c:	(bad)  
   14001f63d:	cmp    ecx,DWORD PTR [rcx-0x30814d]
   14001f643:	(bad)  
   14001f644:	push   rdi
   14001f646:	add    BYTE PTR [rax],al
   14001f648:	(bad)  
   14001f649:	out    0xb3,eax
   14001f64b:	cwde   
   14001f64c:	out    dx,al
   14001f64d:	iret   
   14001f64e:	dec    DWORD PTR [rax+0x8888]
   14001f654:	(bad)  
   14001f655:	out    dx,al
   14001f656:	out    dx,al
   14001f657:	out    dx,al
   14001f658:	out    dx,al
   14001f659:	iret   
   14001f65a:	dec    DWORD PTR [rdi+0x70ff]
   14001f660:	mov    esp,cs
   14001f662:	int3   
   14001f663:	int3   
   14001f664:	int3   
   14001f665:	(bad)  
   14001f666:	dec    DWORD PTR [rdi+0xf7]
   14001f66c:	add    BYTE PTR [rax],cl
   14001f66e:	(bad)  
   14001f66f:	(bad)  
   14001f670:	(bad)  
   14001f671:	(bad)  
   14001f672:	dec    DWORD PTR [rdi+0x70]
   14001f678:	add    BYTE PTR [rax],cl
   14001f67a:	(bad)  
   14001f67b:	(bad)  
   14001f67c:	(bad)  
   14001f67d:	(bad)  
   14001f67e:	inc    DWORD PTR [rdi+0x0]
   14001f684:	add    BYTE PTR [rax],cl
   14001f686:	mov    BYTE PTR [rax+0x70888888],cl
	...
   14001f6a8:	(bad)  
   14001f6a9:	(bad)  
   14001f6aa:	inc    DWORD PTR [rax]
   14001f6ac:	loopne 0x14001f6ae
   14001f6ae:	verr   ax
   14001f6b1:	add    BYTE PTR [rdi],cl
   14001f6b3:	add    al,ah
   14001f6b5:	add    BYTE PTR [rdi],cl
   14001f6b7:	add    al,ah
   14001f6b9:	add    BYTE PTR [rdi],cl
   14001f6bb:	add    al,ah
   14001f6bd:	add    BYTE PTR [rdi],cl
   14001f6bf:	add    al,ah
   14001f6c1:	add    BYTE PTR [rdi],cl
   14001f6c3:	add    al,ah
   14001f6c5:	add    BYTE PTR [rdi],cl
   14001f6c7:	add    BYTE PTR [rax],al
   14001f6c9:	add    BYTE PTR [rdi],cl
   14001f6cb:	add    BYTE PTR [rax],al
   14001f6cd:	add    BYTE PTR [rdi],cl
   14001f6cf:	add    BYTE PTR [rax],al
   14001f6d1:	add    BYTE PTR [rdi],cl
   14001f6d3:	add    BYTE PTR [rax],al
   14001f6d5:	add    BYTE PTR [rdi],cl
   14001f6d7:	add    BYTE PTR [rax],al
   14001f6d9:	add    BYTE PTR [rdi],cl
   14001f6db:	add    BYTE PTR [rax],al
   14001f6dd:	add    BYTE PTR [rdi],cl
   14001f6df:	add    BYTE PTR [rax],al
   14001f6e1:	add    BYTE PTR [rdi],cl
   14001f6e3:	add    BYTE PTR [rax],al
   14001f6e5:	add    BYTE PTR [rdi],cl
   14001f6e7:	add    BYTE PTR [rax],al
   14001f6e9:	add    BYTE PTR [rdi],cl
   14001f6eb:	add    BYTE PTR [rax],al
   14001f6ed:	add    BYTE PTR [rdi],bl
   14001f6ef:	add    BYTE PTR [rax],al
   14001f6f1:	add    BYTE PTR [rdi],bh
   14001f6f3:	add    al,ah
   14001f6f5:	add    BYTE PTR [rdi+0x0],bh
   14001f6f8:	loopne 0x14001f6fa
   14001f6fa:	inc    DWORD PTR [rax]
   14001f6fc:	loopne 0x14001f6ff
   14001f6fe:	inc    DWORD PTR [rax]
   14001f700:	(bad)  
   14001f701:	(bad)  
   14001f702:	inc    DWORD PTR [rax]
   14001f704:	(bad)  
   14001f705:	(bad)  
   14001f706:	inc    DWORD PTR [rax]
   14001f708:	sub    BYTE PTR [rax],al
   14001f70a:	add    BYTE PTR [rax],al
   14001f70c:	sbb    BYTE PTR [rax],al
   14001f70e:	add    BYTE PTR [rax],al
   14001f710:	xor    BYTE PTR [rax],al
   14001f712:	add    BYTE PTR [rax],al
   14001f714:	add    DWORD PTR [rax],eax
   14001f716:	or     BYTE PTR [rax],al
   14001f718:	add    BYTE PTR [rax],al
   14001f71a:	add    BYTE PTR [rax],al
   14001f71c:	add    al,BYTE PTR [rax]
	...
   14001f727:	add    BYTE PTR [rax],al
   14001f729:	add    DWORD PTR [rax],eax
   14001f72b:	add    BYTE PTR [rax],al
   14001f72d:	add    DWORD PTR [rax],eax
   14001f72f:	add    BYTE PTR [rax],al
   14001f731:	add    BYTE PTR [rax],al
   14001f733:	add    bh,bh
   14001f735:	jle    0x14001f737
   14001f737:	add    BYTE PTR [rbp-0x31],ch
   14001f73a:	push   0x65cd7900
   14001f73f:	add    bh,bh
   14001f741:	add    BYTE PTR [rbx],0x0
   14001f744:	inc    DWORD PTR [rcx-0x4522fffa]
   14001f74a:	rex.WR add cl,r8b
   14001f74d:	mov    edi,0xb2fc0053
   14001f752:	imul   eax,DWORD PTR [rax],0x6eb5ff
   14001f758:	add    BYTE PTR [rsi-0x28],ch
   14001f75b:	add    BYTE PTR [rip+0xe00d273],cl        # 0x14e02c9d4
   14001f761:	jg     0x14001f73d
   14001f763:	add    BYTE PTR [rdx],dl
   14001f765:	jbe    0x14001f739
   14001f767:	add    BYTE PTR [rcx],al
   14001f769:	jp     0x14001f755
   14001f76b:	add    BYTE PTR [rax],al
   14001f76d:	jnp    0x14001f75c
   14001f76f:	add    BYTE PTR [rax],al
   14001f771:	jle    0x14001f764
   14001f773:	add    BYTE PTR [rsi-0x66],ch
   14001f776:	xchg   esi,eax
   14001f777:	add    BYTE PTR [rdi-0x4b],cl
   14001f77a:	xchg   ecx,eax
   14001f77b:	add    BYTE PTR [rbp-0x50],al
   14001f77e:	fwait
   14001f77f:	add    BYTE PTR [rax-0x4d],ah
   14001f782:	pop    QWORD PTR [rax]
   14001f784:	rex.WRXB popf 
   14001f786:	movabs ds:0xdb850f00a1ad4000,al
   14001f78f:	add    BYTE PTR [rcx],dl
   14001f791:	xchg   eax,ebx
   14001f793:	add    BYTE PTR [rax],ah
   14001f795:	mov    esp,ss
   14001f797:	add    BYTE PTR [rdx],ch
   14001f799:	mov    bl,dl
   14001f79b:	add    BYTE PTR [rip+0xe086],cl        # 0x14002d827
   14001f7a1:	xor    edi,0xf8820000
   14001f7a7:	add    BYTE PTR [rsi],al
   14001f7a9:	xchg   cl,bh
   14001f7ab:	add    BYTE PTR [rax],al
   14001f7ad:	test   esp,edi
   14001f7af:	add    BYTE PTR [rax],al
   14001f7b1:	mov    dh,bh
   14001f7b3:	add    BYTE PTR [rbx],bl
   14001f7b5:	xchg   ebp,eax
   14001f7b6:	inc    DWORD PTR [rax]
   14001f7b8:	and    al,0x99
   14001f7ba:	inc    DWORD PTR [rax]
   14001f7bc:	ins    BYTE PTR es:[rdi],dx
   14001f7bd:	mov    esp,0xc17800ff
   14001f7c2:	inc    DWORD PTR [rax]
   14001f7c4:	test   BYTE PTR [rsp+rax*4-0x6f6e6f00],al
   14001f7cb:	add    BYTE PTR [rsi-0x78ff785c],cl
   14001f7d1:	movabs al,ds:0xbdbd00ababab008a
   14001f7da:	mov    ebp,0x97de9f00
   14001f7df:	add    BYTE PTR [rbx-0x56ff6722],bl
   14001f7e5:	fcom   QWORD PTR [rax+rax*1+0x9cdea5]
   14001f7ec:	mov    dh,0xd9
   14001f7ee:	xchg   ecx,eax
   14001f7ef:	add    BYTE PTR [rcx-0x20ff5a1f],dh
   14001f7f5:	int    0x89
   14001f7f7:	add    bh,al
   14001f7f9:	(bad)  
   14001f7fa:	lea    eax,[rax]
   14001f7fc:	loopne 0x14001f7cf
   14001f7fe:	xchg   BYTE PTR [rax],al
   14001f800:	call   0x122027dd5
   14001f805:	ror    DWORD PTR [rsi-0x68291500],cl
   14001f80b:	add    BYTE PTR [rcx-0x63ff0031],bl
   14001f811:	iret   
   14001f812:	std    
   14001f813:	add    BYTE PTR [rbx-0x39ff0029],ch
   14001f819:	mov    dh,0x0
   14001f81c:	leave  
   14001f81d:	leave  
   14001f81e:	leave  
   14001f81f:	add    bl,cl
   14001f821:	retf   
   14001f822:	int3   
   14001f823:	add    dh,cl
   14001f825:	(bad)  
   14001f826:	(bad)  
   14001f827:	add    al,dl
   14001f829:	rcl    al,1
   14001f82b:	add    ch,dl
   14001f82d:	(bad)  
   14001f82e:	(bad)  
   14001f82f:	add    ch,bl
   14001f831:	fstp   st(5)
   14001f833:	add    cl,ah
   14001f835:	loope  0x14001f818
   14001f837:	add    ah,ah
   14001f839:	in     al,0xe3
   14001f83b:	add    bl,ah
   14001f83d:	jrcxz  0x14001f824
   14001f83f:	add    dh,ah
   14001f841:	out    0xe6,al
   14001f843:	add    bh,ah
   14001f845:	out    0xe9,eax
   14001f847:	add    cl,ch
   14001f849:	jmp    0x12cedf937
   14001f84e:	in     al,dx
   14001f84f:	add    ch,dh
   14001f851:	div    dh
   14001f853:	add    dh,dh
   14001f855:	clc    
   14001f856:	clc    
   14001f857:	add    al,dh
   14001f859:	clc    
   14001f85a:	inc    DWORD PTR [rax]
   14001f85c:	idiv   bl
   14001f85e:	inc    DWORD PTR [rax]
   14001f860:	stc    
   14001f861:	stc    
   14001f862:	stc    
   14001f863:	add    dl,bh
   14001f865:	sti    
   14001f866:	cld    
   14001f867:	add    bl,bh
   14001f869:	cld    
   14001f86a:	cld    
   14001f86b:	add    dh,bh
   14001f86d:	(bad)  
   14001f86e:	inc    BYTE PTR [rax]
	...
   14001fb2c:	(bad)  
   14001fb2d:	(bad)  
   14001fb2e:	inc    DWORD PTR [rax]
	...
   14001fb48:	add    BYTE PTR [rax],al
   14001fb4a:	add    BYTE PTR [rsi],ah
   14001fb4c:	es es es es es es es es es es es es es es
   14001fb5a:	es add BYTE PTR es:[rax],al
   14001fb5e:	add    BYTE PTR [rax],al
   14001fb60:	add    BYTE PTR [rax],al
   14001fb62:	add    BYTE PTR [rsi],bh
   14001fb64:	(bad)  
   14001fb65:	(bad)  
   14001fb66:	(bad)  
   14001fb67:	(bad)  
   14001fb68:	(bad)  
   14001fb69:	(bad)  
   14001fb6a:	(bad)  
   14001fb6b:	(bad)  
   14001fb6c:	(bad)  
   14001fb6d:	(bad)  
   14001fb6e:	(bad)  
   14001fb6f:	(bad)  
   14001fb70:	(bad)  
   14001fb71:	(bad)  
   14001fb72:	jmp    QWORD PTR [rsi]
   14001fb74:	add    BYTE PTR [rax],al
   14001fb76:	add    BYTE PTR [rax],al
   14001fb78:	add    BYTE PTR [rax],al
   14001fb7a:	add    BYTE PTR [rsi],bh
   14001fb7c:	dec    DWORD PTR [rax+0x48]
   14001fb7f:	rex.W
   14001fb80:	rex.W
   14001fb81:	rex.W
   14001fb82:	rex.W
   14001fb83:	rex.W
   14001fb84:	rex.W
   14001fb85:	rex.W
   14001fb86:	rex.W
   14001fb87:	rex.W
   14001fb88:	rex.W
   14001fb89:	rex.W jmp QWORD PTR [rsi]
   14001fb8c:	add    BYTE PTR [rax],al
   14001fb8e:	add    BYTE PTR [rax],al
   14001fb90:	add    BYTE PTR [rax],al
   14001fb92:	add    BYTE PTR [rsi],bh
   14001fb94:	rex.WR
   14001fb95:	rex.W
   14001fb96:	rex.W
   14001fb97:	rex.W
   14001fb98:	rex.W
   14001fb99:	rex.W
   14001fb9a:	rex.W
   14001fb9b:	rex.W
   14001fb9c:	rex.W
   14001fb9d:	rex.W
   14001fb9e:	rex.W
   14001fb9f:	rex.W
   14001fba0:	rex.W
   14001fba1:	rex.W jmp QWORD PTR [rsi]
   14001fba4:	add    BYTE PTR [rax],al
   14001fba6:	add    BYTE PTR [rax],al
   14001fba8:	add    BYTE PTR [rax],al
   14001fbaa:	add    BYTE PTR [rsi],bh
   14001fbac:	dec    DWORD PTR [rcx+0x4c]
   14001fbaf:	rex.WR
   14001fbb0:	rex.WR
   14001fbb1:	rex.WR
   14001fbb2:	rex.WR
   14001fbb3:	rex.WR
   14001fbb4:	rex.WR
   14001fbb5:	rex.WR
   14001fbb6:	rex.WR
   14001fbb7:	rex.WR
   14001fbb8:	rex.WR
   14001fbb9:	rex.WR jmp QWORD PTR [rsi]
   14001fbbc:	add    BYTE PTR [rax],al
   14001fbbe:	add    BYTE PTR [rax],al
   14001fbc0:	add    BYTE PTR [rax],al
   14001fbc2:	add    BYTE PTR [rsi],bh
   14001fbc4:	dec    DWORD PTR [rax+0x4c]
   14001fbc7:	rex.WR
   14001fbc8:	rex.WR
   14001fbc9:	rex.WR
   14001fbca:	rex.WR
   14001fbcb:	rex.WR
   14001fbcc:	rex.WR
   14001fbcd:	rex.WR
   14001fbce:	rex.WR
   14001fbcf:	rex.WR
   14001fbd0:	rex.WR
   14001fbd1:	rex.WR jmp QWORD PTR [rsi]
   14001fbd4:	add    BYTE PTR [rax],al
   14001fbd6:	add    BYTE PTR [rax],al
   14001fbd8:	add    BYTE PTR [rax],al
   14001fbda:	add    BYTE PTR [rsi],bh
   14001fbdc:	dec    DWORD PTR [rsp+rcx*2+0x4c]
   14001fbe0:	rex.WR
   14001fbe1:	rex.WR
   14001fbe2:	rex.WR
   14001fbe3:	rex.WR
   14001fbe4:	rex.WR
   14001fbe5:	rex.WR
   14001fbe6:	rex.WR
   14001fbe7:	rex.WR
   14001fbe8:	rex.WR
   14001fbe9:	rex.WR jmp QWORD PTR [rsi]
   14001fbec:	add    BYTE PTR [rax],al
   14001fbee:	add    BYTE PTR [rax],al
   14001fbf0:	or     DWORD PTR [rip+0x1010101],eax        # 0x14102fcf7
   14001fbf6:	add    DWORD PTR [rcx],eax
   14001fbf8:	add    DWORD PTR [rcx],eax
   14001fbfa:	or     BYTE PTR [rsp+rcx*2+0x4c],cl
   14001fbfe:	rex.WR
   14001fbff:	rex.WR
   14001fc00:	rex.WR
   14001fc01:	rex.WR jmp QWORD PTR [rsi]
   14001fc04:	add    BYTE PTR [rax],al
   14001fc06:	add    BYTE PTR [rax],al
   14001fc08:	add    eax,0x2c2c2c2e
   14001fc0d:	sub    al,0x2d
   14001fc0f:	(bad)  
   14001fc10:	xor    dh,BYTE PTR [rip+0x4c4c4c01]        # 0x18c4e4817
   14001fc16:	rex.WR
   14001fc17:	rex.WR
   14001fc18:	rex.WR
   14001fc19:	rex.WR jmp QWORD PTR [rsi]
   14001fc1c:	add    BYTE PTR [rax],al
   14001fc1e:	add    BYTE PTR [rax],al
   14001fc20:	add    DWORD PTR [rdx+rax*1],ebp
   14001fc23:	(bad)  
   14001fc24:	sbb    ecx,DWORD PTR [rsi]
   14001fc26:	or     al,0x15
   14001fc28:	(bad)  
   14001fc29:	xor    eax,DWORD PTR [rcx]
   14001fc2b:	rex.WR
   14001fc2c:	rex.WR
   14001fc2d:	rex.WR
   14001fc2e:	rex.WR
   14001fc2f:	rex.WR
   14001fc30:	rex.WR
   14001fc31:	rex.WR jmp QWORD PTR [rsi]
   14001fc34:	add    BYTE PTR [rax],al
   14001fc36:	add    BYTE PTR [rax],al
   14001fc38:	add    DWORD PTR [rbx+rdx*1],ebp
   14001fc3b:	sbb    al,0x39
   14001fc3d:	and    bl,BYTE PTR [rdi]
   14001fc3f:	(bad)  
   14001fc40:	adc    DWORD PTR [rcx+rax*1],esi
   14001fc43:	rex.WR
   14001fc44:	rex.WR
   14001fc45:	rex.WR
   14001fc46:	rex.WR
   14001fc47:	rex.WR
   14001fc48:	rex.WR (bad) 
   14001fc4a:	jmp    QWORD PTR [rsi]
   14001fc4c:	add    BYTE PTR [rax],al
   14001fc4e:	add    BYTE PTR [rax],al
   14001fc50:	add    DWORD PTR [rdi+rdx*1],ebp
   14001fc53:	(bad)  
   14001fc54:	rex.WR
   14001fc55:	rex.WR and al,0x1f
   14001fc58:	or     esi,DWORD PTR [rcx+rax*1]
   14001fc5b:	(bad)  
   14001fc5c:	dec    DWORD PTR [rdi+rdi*8+0x4c]
   14001fc60:	dec    DWORD PTR [rdi+rdi*8+0x26]
   14001fc64:	add    BYTE PTR [rax],al
   14001fc66:	add    BYTE PTR [rax],al
   14001fc68:	add    DWORD PTR [rsi+rcx*1],ebp
   14001fc6b:	and    BYTE PTR [rdx-0x1],cl
   14001fc6e:	push   QWORD PTR [rdi]
   14001fc70:	or     dh,BYTE PTR [rcx]
   14001fc72:	add    edi,edi
   14001fc74:	rex.WR dec QWORD PTR [rdi+rdi*8+0x4c]
   14001fc79:	rex.WR jmp QWORD PTR [rsi]
   14001fc7c:	add    BYTE PTR [rax],al
   14001fc7e:	add    BYTE PTR [rax],al
   14001fc80:	add    DWORD PTR [rax+rbx*1],ebp
   14001fc83:	(bad)  
   14001fc84:	rex.WX
   14001fc85:	rex.WX and rbx,QWORD PTR [rdi]
   14001fc88:	or     eax,0x4cff0134
   14001fc8d:	dec    DWORD PTR [rdi+rdi*8-0x1]
   14001fc91:	(bad)  
   14001fc92:	jmp    QWORD PTR [rsi]
   14001fc94:	add    BYTE PTR [rax],al
   14001fc96:	add    BYTE PTR [rax],al
   14001fc98:	add    DWORD PTR [rdx+rdx*1],ebp
   14001fc9b:	adc    BYTE PTR [rdi],dh
   14001fc9d:	and    DWORD PTR [rdi],ebx
   14001fc9f:	adc    BYTE PTR [rax],ch
   14001fca1:	xor    al,0x1
   14001fca3:	(bad)  
   14001fca4:	(bad)  
   14001fca5:	(bad)  
   14001fca6:	(bad)  
   14001fca7:	(bad)  
   14001fca8:	dec    DWORD PTR [rdi+rdi*8+0x26]
   14001fcac:	add    BYTE PTR [rax],al
   14001fcae:	add    BYTE PTR [rax],al
   14001fcb0:	add    DWORD PTR [rbx+rax*1],ebp
   14001fcb3:	adc    al,0x19
   14001fcb5:	adc    BYTE PTR [rdx],bl
   14001fcb7:	(bad)  
   14001fcb8:	(bad)  
   14001fcb9:	xor    al,0x1
   14001fcbb:	(bad)  
   14001fcbc:	(bad)  
   14001fcbd:	(bad)  
   14001fcbe:	ds ds ds ds ds add BYTE PTR es:[rax],al
   14001fcc6:	add    BYTE PTR [rax],al
   14001fcc8:	add    eax,0x322f2d30
   14001fccd:	xor    esi,DWORD PTR [rsp+rsi*1]
   14001fcd0:	xor    al,0x36
   14001fcd2:	add    edi,edi
   14001fcd4:	(bad)  
   14001fcd5:	(bad)  
   14001fcd6:	ds (bad) 
   14001fcd8:	(bad)  
   14001fcd9:	jmp    QWORD PTR [rsi]
   14001fcdb:	add    BYTE PTR [rax],al
   14001fcdd:	add    BYTE PTR [rax],al
   14001fcdf:	add    BYTE PTR [rcx],cl
   14001fce1:	add    eax,0x1010101
   14001fce6:	add    DWORD PTR [rcx],eax
   14001fce8:	add    DWORD PTR [rip+0xffffffffffffff09],eax        # 0x14001fbf7
   14001fcee:	ds (bad) 
   14001fcf0:	jmp    QWORD PTR [rsi]
	...
   14001fcfa:	add    BYTE PTR [rsi],bh
   14001fcfc:	(bad)  
   14001fcfd:	(bad)  
   14001fcfe:	(bad)  
   14001fcff:	(bad)  
   14001fd00:	(bad)  
   14001fd01:	(bad)  
   14001fd02:	(bad)  
   14001fd03:	(bad)  
   14001fd04:	(bad)  
   14001fd05:	(bad)  
   14001fd06:	notrack jmp QWORD PTR [rsi]
	...
   14001fd11:	add    BYTE PTR [rax],al
   14001fd13:	ds (bad) 
   14001fd15:	(bad)  
   14001fd16:	(bad)  
   14001fd17:	(bad)  
   14001fd18:	(bad)  
   14001fd19:	(bad)  
   14001fd1a:	(bad)  
   14001fd1b:	(bad)  
   14001fd1c:	(bad)  
   14001fd1d:	(bad)  
   14001fd1e:	ds add BYTE PTR es:[rax],al
	...
   14001fd2a:	add    BYTE PTR [rsi],bh
   14001fd2c:	ds ds ds ds ds ds cmp eax,0x3e3e3e3e
	...
   14001fd6f:	add    bh,bh
   14001fd71:	(bad)  
   14001fd72:	inc    DWORD PTR [rax]
   14001fd74:	loopne 0x14001fd76
   14001fd76:	verr   ax
   14001fd79:	add    BYTE PTR [rdi],cl
   14001fd7b:	add    al,ah
   14001fd7d:	add    BYTE PTR [rdi],cl
   14001fd7f:	add    al,ah
   14001fd81:	add    BYTE PTR [rdi],cl
   14001fd83:	add    al,ah
   14001fd85:	add    BYTE PTR [rdi],cl
   14001fd87:	add    al,ah
   14001fd89:	add    BYTE PTR [rdi],cl
   14001fd8b:	add    al,ah
   14001fd8d:	add    BYTE PTR [rdi],cl
   14001fd8f:	add    BYTE PTR [rax],al
   14001fd91:	add    BYTE PTR [rdi],cl
   14001fd93:	add    BYTE PTR [rax],al
   14001fd95:	add    BYTE PTR [rdi],cl
   14001fd97:	add    BYTE PTR [rax],al
   14001fd99:	add    BYTE PTR [rdi],cl
   14001fd9b:	add    BYTE PTR [rax],al
   14001fd9d:	add    BYTE PTR [rdi],cl
   14001fd9f:	add    BYTE PTR [rax],al
   14001fda1:	add    BYTE PTR [rdi],cl
   14001fda3:	add    BYTE PTR [rax],al
   14001fda5:	add    BYTE PTR [rdi],cl
   14001fda7:	add    BYTE PTR [rax],al
   14001fda9:	add    BYTE PTR [rdi],cl
   14001fdab:	add    BYTE PTR [rax],al
   14001fdad:	add    BYTE PTR [rdi],cl
   14001fdaf:	add    BYTE PTR [rax],al
   14001fdb1:	add    BYTE PTR [rdi],cl
   14001fdb3:	add    BYTE PTR [rax],al
   14001fdb5:	add    BYTE PTR [rdi],bl
   14001fdb7:	add    BYTE PTR [rax],al
   14001fdb9:	add    BYTE PTR [rdi],bh
   14001fdbb:	add    al,ah
   14001fdbd:	add    BYTE PTR [rdi+0x0],bh
   14001fdc0:	loopne 0x14001fdc2
   14001fdc2:	inc    DWORD PTR [rax]
   14001fdc4:	loopne 0x14001fdc7
   14001fdc6:	inc    DWORD PTR [rax]
   14001fdc8:	(bad)  
   14001fdc9:	(bad)  
   14001fdca:	inc    DWORD PTR [rax]
   14001fdcc:	(bad)  
   14001fdcd:	(bad)  
   14001fdce:	inc    DWORD PTR [rax]
   14001fdd0:	sub    BYTE PTR [rax],al
   14001fdd2:	add    BYTE PTR [rax],al
   14001fdd4:	and    BYTE PTR [rax],al
   14001fdd6:	add    BYTE PTR [rax],al
   14001fdd8:	add    BYTE PTR [rax],al
   14001fddb:	add    BYTE PTR [rcx],al
   14001fddd:	add    BYTE PTR [rax+rax*1],al
   14001fde0:	add    BYTE PTR [rax],al
   14001fde2:	add    BYTE PTR [rax],al
   14001fde4:	add    BYTE PTR [rdx],al
	...
   14001fdfe:	add    BYTE PTR [rax],0x0
   14001fe01:	add    BYTE PTR [rax],0x0
   14001fe04:	add    BYTE PTR [rax+0x800080],al
   14001fe0a:	add    BYTE PTR [rax],al
   14001fe0c:	add    BYTE PTR [rax],0x80
   14001fe0f:	add    BYTE PTR [rax-0x7fffff80],al
   14001fe15:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14001fe1c:	add    BYTE PTR [rax],al
   14001fe1e:	inc    DWORD PTR [rax]
   14001fe20:	add    bh,bh
   14001fe22:	add    BYTE PTR [rax],al
   14001fe24:	add    bh,bh
   14001fe26:	inc    DWORD PTR [rax]
   14001fe28:	inc    DWORD PTR [rax]
   14001fe2a:	add    BYTE PTR [rax],al
   14001fe2c:	inc    DWORD PTR [rax]
   14001fe2e:	inc    DWORD PTR [rax]
   14001fe30:	(bad)  
   14001fe31:	inc    DWORD PTR [rax]
   14001fe33:	add    bh,bh
   14001fe35:	(bad)  
   14001fe36:	inc    DWORD PTR [rax]
	...
   14001fe48:	add    BYTE PTR [rax],al
   14001fe4a:	mov    BYTE PTR [rax-0x77777778],cl
   14001fe50:	mov    BYTE PTR [rax+0x888888],cl
   14001fe56:	add    BYTE PTR [rax],al
   14001fe58:	add    BYTE PTR [rax],al
   14001fe5a:	(bad)  
   14001fe5b:	(bad)  
   14001fe5c:	(bad)  
   14001fe5d:	(bad)  
   14001fe5e:	(bad)  
   14001fe5f:	(bad)  
   14001fe60:	(bad)  
   14001fe61:	(bad)  
   14001fe62:	(bad)  
   14001fe63:	(bad)  
   14001fe64:	clc    
   14001fe65:	add    BYTE PTR [rax],al
   14001fe67:	add    BYTE PTR [rax],al
   14001fe69:	add    BYTE PTR [rdi-0x701],cl
   14001fe6f:	(bad)  
   14001fe70:	(bad)  
   14001fe71:	(bad)  
   14001fe72:	(bad)  
   14001fe73:	(bad)  
   14001fe74:	clc    
   14001fe75:	add    BYTE PTR [rax],al
   14001fe77:	add    BYTE PTR [rax],al
   14001fe79:	add    BYTE PTR [rdi-0x1],cl
   14001fe7f:	(bad)  
   14001fe80:	dec    DWORD PTR [rdi+0xf8fff8]
   14001fe86:	add    BYTE PTR [rax],al
   14001fe88:	add    BYTE PTR [rax],al
   14001fe8a:	(bad)  
   14001fe8b:	clc    
   14001fe8c:	(bad)  
   14001fe8d:	(bad)  
   14001fe8e:	(bad)  
   14001fe8f:	(bad)  
   14001fe90:	(bad)  
   14001fe91:	(bad)  
   14001fe92:	(bad)  
   14001fe93:	(bad)  
   14001fe94:	clc    
   14001fe95:	add    BYTE PTR [rax],al
   14001fe97:	add    BYTE PTR [rax],al
   14001fe99:	add    BYTE PTR [rdi-0x70001],cl
   14001fe9f:	dec    DWORD PTR [rdi-0x7077001]
   14001fea5:	add    BYTE PTR [rax],al
   14001fea7:	add    BYTE PTR [rax],al
   14001fea9:	add    BYTE PTR [rdi-0x1],cl
   14001feaf:	(bad)  
   14001feb0:	(bad)  
   14001feb1:	(bad)  
   14001feb2:	(bad)  
   14001feb3:	(bad)  
   14001feb4:	clc    
   14001feb5:	add    BYTE PTR [rax],al
   14001feb7:	add    BYTE PTR [rax],al
   14001feb9:	add    BYTE PTR [rdi-0x1],cl
   14001febf:	(bad)  
   14001fec0:	dec    DWORD PTR [rdi+0xf8ffff]
   14001fec6:	add    BYTE PTR [rax],al
   14001fec8:	mov    esp,cs
   14001feca:	int3   
   14001fecb:	int3   
   14001fecc:	int3   
   14001fecd:	int3   
   14001fece:	int3   
   14001fecf:	(bad)  
   14001fed0:	(bad)  
   14001fed1:	(bad)  
   14001fed2:	clc    
   14001fed3:	(bad)  
   14001fed4:	clc    
   14001fed5:	add    BYTE PTR [rax],al
   14001fed7:	add    dh,cl
   14001fed9:	out    dx,al
   14001feda:	out    dx,al
   14001fedb:	out    dx,al
   14001fedc:	out    dx,al
   14001fedd:	out    dx,al
   14001fede:	out    dx,al
   14001fedf:	in     al,dx
   14001fee0:	(bad)  
   14001fee1:	(bad)  
   14001fee2:	(bad)  
   14001fee3:	(bad)  
   14001fee4:	clc    
   14001fee5:	add    BYTE PTR [rax],al
   14001fee7:	add    dh,cl
   14001fee9:	out    dx,al
   14001feea:	out    0xb3,eax
   14001feec:	mov    bl,0x7e
   14001feee:	out    dx,al
   14001feef:	in     al,dx
   14001fef0:	(bad)  
   14001fef1:	(bad)  
   14001fef2:	(bad)  
   14001fef3:	clc    
   14001fef4:	clc    
   14001fef5:	add    BYTE PTR [rax],al
   14001fef7:	add    dh,cl
   14001fef9:	out    dx,al
   14001fefa:	cmp    edi,DWORD PTR [rcx]
   14001fefc:	mov    bl,0xb7
   14001fefe:	out    dx,al
   14001feff:	in     al,dx
   14001ff00:	(bad)  
   14001ff01:	clc    
   14001ff02:	(bad)  
   14001ff03:	(bad)  
   14001ff04:	clc    
   14001ff05:	add    BYTE PTR [rax],al
   14001ff07:	add    dh,cl
   14001ff09:	jmp    0x14001ff44
   14001ff0b:	sti    
   14001ff0c:	fwait
   14001ff0d:	fwait
   14001ff0e:	ds in  al,dx
   14001ff10:	(bad)  
   14001ff11:	(bad)  
   14001ff12:	(bad)  
   14001ff13:	(bad)  
   14001ff14:	clc    
   14001ff15:	add    BYTE PTR [rax],al
   14001ff17:	add    dh,cl
   14001ff19:	test   eax,0xb9b9ffbb
   14001ff1e:	(bad)  
   14001ff1f:	in     al,dx
   14001ff20:	(bad)  
   14001ff21:	(bad)  
   14001ff22:	clc    
   14001ff23:	(bad)  
   14001ff24:	clc    
   14001ff25:	add    BYTE PTR [rax],al
   14001ff27:	add    dh,cl
   14001ff29:	cmp    ebx,DWORD PTR [rbx-0x68640701]
   14001ff2f:	in     al,dx
   14001ff30:	(bad)  
   14001ff31:	(bad)  
   14001ff32:	(bad)  
   14001ff33:	(bad)  
   14001ff34:	clc    
   14001ff35:	add    BYTE PTR [rax],al
   14001ff37:	add    dh,cl
   14001ff39:	cmp    ebx,DWORD PTR [rbx-0x4c060001]
   14001ff3f:	in     al,dx
   14001ff40:	(bad)  
   14001ff41:	clc    
   14001ff42:	(bad)  
   14001ff43:	clc    
   14001ff44:	clc    
   14001ff45:	add    BYTE PTR [rax],al
   14001ff47:	add    dh,cl
   14001ff49:	cmp    DWORD PTR [rcx-0x68040001],edi
   14001ff4f:	in     al,dx
   14001ff50:	(bad)  
   14001ff51:	(bad)  
   14001ff52:	(bad)  
   14001ff53:	(bad)  
   14001ff54:	clc    
   14001ff55:	add    BYTE PTR [rax],al
   14001ff57:	add    dh,cl
   14001ff59:	mov    bl,0xb7
   14001ff5b:	(bad)  
   14001ff5c:	clc    
   14001ff5d:	mov    ecx,0xffffecb7
   14001ff62:	(bad)  
   14001ff63:	(bad)  
   14001ff64:	clc    
   14001ff65:	add    BYTE PTR [rax],al
   14001ff67:	add    dh,cl
   14001ff69:	jnp    0x14001ff06
   14001ff6b:	(bad)  
   14001ff6c:	mov    ebx,0xffec989b
   14001ff71:	(bad)  
   14001ff72:	clc    
   14001ff73:	(bad)  
   14001ff74:	clc    
   14001ff75:	add    BYTE PTR [rax],al
   14001ff77:	add    dh,cl
   14001ff79:	out    0x9b,eax
   14001ff7b:	stc    
   14001ff7c:	mov    ecx,0xffec7ebb
   14001ff81:	clc    
   14001ff82:	(bad)  
   14001ff83:	(bad)  
   14001ff84:	clc    
   14001ff85:	add    BYTE PTR [rax],al
   14001ff87:	add    dh,cl
   14001ff89:	out    dx,al
   14001ff8a:	cmp    ebx,DWORD PTR [rbx-0x13116865]
   14001ff90:	(bad)  
   14001ff91:	(bad)  
   14001ff92:	(bad)  
   14001ff93:	(bad)  
   14001ff94:	clc    
   14001ff95:	add    BYTE PTR [rax],al
   14001ff97:	add    dh,cl
   14001ff99:	out    dx,al
   14001ff9a:	out    0x73,eax
   14001ff9c:	mov    bh,0x7e
   14001ff9e:	out    dx,al
   14001ff9f:	in     al,dx
   14001ffa0:	(bad)  
   14001ffa1:	dec    DWORD PTR [rax+0x8888]
   14001ffa7:	add    dh,cl
   14001ffa9:	out    dx,al
   14001ffaa:	out    dx,al
   14001ffab:	out    dx,al
   14001ffac:	out    dx,al
   14001ffad:	out    dx,al
   14001ffae:	out    dx,al
   14001ffaf:	in     al,dx
   14001ffb0:	(bad)  
   14001ffb1:	dec    DWORD PTR [rdi+0x80ff]
   14001ffb7:	add    BYTE PTR [rsp+rcx*8-0x33333334],cl
   14001ffbe:	int3   
   14001ffbf:	enter  0xffff,0x8f
   14001ffc3:	clc    
   14001ffc4:	add    BYTE PTR [rax],al
   14001ffc6:	add    BYTE PTR [rax],al
   14001ffc8:	add    BYTE PTR [rax],al
   14001ffca:	(bad)  
   14001ffcb:	(bad)  
   14001ffcc:	(bad)  
   14001ffcd:	(bad)  
   14001ffce:	(bad)  
   14001ffcf:	(bad)  
   14001ffd0:	(bad)  
   14001ffd1:	dec    DWORD PTR [rdi+0x80]
   14001ffd7:	add    BYTE PTR [rax],al
   14001ffd9:	add    BYTE PTR [rdi-0x1],cl
   14001ffdf:	(bad)  
   14001ffe0:	(bad)  
   14001ffe1:	dec    DWORD PTR [rax+0x0]
   14001ffe7:	add    BYTE PTR [rax],al
   14001ffe9:	add    BYTE PTR [rax-0x77777778],cl
   14001ffef:	mov    BYTE PTR [rax+0x8088],cl
	...
   140020035:	add    BYTE PTR [rax],al
   140020037:	add    bh,bh
   140020039:	(bad)  
   14002003a:	(bad)  
   14002003b:	push   rax
   14002003d:	add    BYTE PTR [rax],al
   14002003f:	(bad)  
   140020040:	lock add BYTE PTR [rax],al
   140020043:	(bad)  
   140020044:	lock add BYTE PTR [rax],al
   140020047:	(bad)  
   140020048:	lock add BYTE PTR [rax],al
   14002004b:	(bad)  
   14002004c:	lock add BYTE PTR [rax],al
   14002004f:	(bad)  
   140020050:	lock add BYTE PTR [rax],al
   140020053:	(bad)  
   140020054:	lock add BYTE PTR [rax],al
   140020057:	(bad)  
   140020058:	lock add BYTE PTR [rax],al
   14002005b:	(bad)  
   14002005c:	add    BYTE PTR [rax],al
   14002005e:	add    BYTE PTR [rdi],bh
   140020060:	add    BYTE PTR [rax],al
   140020062:	add    BYTE PTR [rdi],bh
   140020064:	add    BYTE PTR [rax],al
   140020066:	add    BYTE PTR [rdi],bh
   140020068:	add    BYTE PTR [rax],al
   14002006a:	add    BYTE PTR [rdi],bh
   14002006c:	add    BYTE PTR [rax],al
   14002006e:	add    BYTE PTR [rdi],bh
   140020070:	add    BYTE PTR [rax],al
   140020072:	add    BYTE PTR [rdi],bh
   140020074:	add    BYTE PTR [rax],al
   140020076:	add    BYTE PTR [rdi],bh
   140020078:	add    BYTE PTR [rax],al
   14002007a:	add    BYTE PTR [rdi],bh
   14002007c:	add    BYTE PTR [rax],al
   14002007e:	add    BYTE PTR [rdi],bh
   140020080:	add    BYTE PTR [rax],al
   140020082:	add    BYTE PTR [rdi],bh
   140020084:	add    BYTE PTR [rax],al
   140020086:	add    BYTE PTR [rdi],bh
   140020088:	add    BYTE PTR [rax],al
   14002008a:	add    BYTE PTR [rdi],bh
   14002008c:	add    BYTE PTR [rax],al
   14002008e:	add    BYTE PTR [rdi],bh
   140020090:	add    BYTE PTR [rax],al
   140020092:	add    BYTE PTR [rdi],bh
   140020094:	add    BYTE PTR [rax],al
   140020096:	add    BYTE PTR [rdi+0x0],bh
   140020099:	add    BYTE PTR [rax],al
   14002009b:	push   rax
   14002009d:	add    BYTE PTR [rcx],al
   14002009f:	push   rax
   1400200a1:	add    BYTE PTR [rbx],al
   1400200a3:	push   rax
   1400200a5:	add    BYTE PTR [rdi],al
   1400200a7:	(bad)  
   1400200a8:	(bad)  
   1400200a9:	(bad)  
   1400200aa:	(bad)  
   1400200ab:	(bad)  
   1400200ac:	(bad)  
   1400200ad:	(bad)  
   1400200ae:	(bad)  
   1400200af:	(bad)  
   1400200b0:	(bad)  
   1400200b1:	(bad)  
   1400200b2:	(bad)  
   1400200b3:	(bad)  
   1400200b4:	(bad)  
   1400200b5:	(bad)  
   1400200b6:	(bad)  
   1400200b7:	jmp    FWORD PTR [rax]
   1400200b9:	add    BYTE PTR [rax],al
   1400200bb:	add    BYTE PTR [rax],ah
   1400200bd:	add    BYTE PTR [rax],al
   1400200bf:	add    BYTE PTR [rax+0x0],al
   1400200c2:	add    BYTE PTR [rax],al
   1400200c4:	add    DWORD PTR [rax],eax
   1400200c6:	or     BYTE PTR [rax],al
   1400200c8:	add    BYTE PTR [rax],al
   1400200ca:	add    BYTE PTR [rax],al
   1400200cc:	add    BYTE PTR [rax+rax*1],al
	...
   1400200d7:	add    BYTE PTR [rax],al
   1400200d9:	add    DWORD PTR [rax],eax
   1400200db:	add    BYTE PTR [rax],al
   1400200dd:	add    DWORD PTR [rax],eax
   1400200df:	add    BYTE PTR [rax],al
   1400200e1:	add    BYTE PTR [rax],al
   1400200e3:	add    bh,bh
   1400200e5:	jle    0x1400200e7
   1400200e7:	add    BYTE PTR [rax-0x34],ch
   1400200ea:	imul   eax,DWORD PTR [rax],0x6d
   1400200ed:	iret   
   1400200ee:	push   0x66ce7300
   1400200f3:	add    BYTE PTR [rsi-0x37],bh
   1400200f6:	data16 add BYTE PTR [rax-0x33],bh
   1400200fa:	add    BYTE PTR gs:[rdi-0x34],bh
   1400200fe:	fs add bh,bh
   140020101:	test   BYTE PTR [rsi],cl
   140020103:	add    bh,bh
   140020105:	xchg   DWORD PTR [rdx],edx
   140020107:	add    BYTE PTR [rbp-0x5fff885c],dl
   14002010d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002010e:	jne    0x140020110
   140020110:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020111:	stos   DWORD PTR es:[rdi],eax
   140020112:	je     0x140020114
   140020114:	fnstsw WORD PTR [rdx-0x4136ffb4]
   14002011a:	push   rcx
   14002011b:	add    dh,dl
   14002011d:	mov    bh,0x50
   14002011f:	add    ah,bh
   140020121:	mov    dh,0x72
   140020123:	add    dh,bh
   140020125:	mov    ecx,0xbaff0077
   14002012a:	js     0x14002012c
   14002012c:	(bad)  
   14002012d:	mov    esp,0xc795007b
   140020132:	pop    rsi
   140020133:	add    BYTE PTR [rbp-0x62ffa13f],bl
   140020139:	(bad)  
   14002013a:	pop    rsp
   14002013b:	add    BYTE PTR [rcx-0x53ffa038],dl
   140020141:	ret    
   140020142:	pop    rax
   140020143:	add    BYTE PTR [rax+rax*8-0x3676ffac],bh
   14002014a:	(bad)  
   14002014b:	add    BYTE PTR [rdi],bl
   14002014d:	jns    0x140020113
   14002014f:	add    BYTE PTR [rcx],ah
   140020151:	jns    0x140020116
   140020153:	add    BYTE PTR [rdx],al
   140020155:	jbe    0x140020139
   140020157:	add    BYTE PTR [rcx],al
   140020159:	jns    0x140020143
   14002015b:	add    BYTE PTR [rax],al
   14002015d:	jnp    0x14002014b
   14002015f:	add    BYTE PTR [rax],al
   140020161:	jle    0x140020154
   140020163:	add    BYTE PTR [rax],al
   140020165:	jle    0x14002015b
   140020167:	add    BYTE PTR [rdi],bh
   140020169:	mov    ch,BYTE PTR [rcx-0x4673d300]
   14002016f:	add    BYTE PTR [rip+0x2700b49c],ch        # 0x16702b611
   140020175:	xchg   edi,eax
   140020176:	mov    ebp,0xb8942b00
   14002017b:	add    BYTE PTR [rdi],ah
   14002017d:	cwde   
   14002017e:	mov    ebp,0xb29d3400
   140020183:	add    BYTE PTR [rdx],dh
   140020185:	cdq    
   140020186:	mov    edi,0x89b85100
   14002018b:	add    BYTE PTR [rdx+rdi*4-0x78],dl
   14002018f:	add    BYTE PTR [rax-0x4e],ah
   140020192:	xchg   BYTE PTR [rax],al
   140020194:	jp     0x140020149
   140020196:	add    DWORD PTR [rax],0xa6925c
   14002019c:	rex.X test DWORD PTR [rax-0x4868bc00],esi
   1400201a3:	add    BYTE PTR [rax+rdx*4-0x4a],cl
   1400201a7:	add    BYTE PTR [rsi-0x6c],dl
   1400201aa:	mov    dl,0x0
   1400201ac:	adc    al,BYTE PTR [rbx-0x78edff2f]
   1400201b2:	(bad)  
   1400201b3:	add    BYTE PTR [rcx+rcx*4],dl
   1400201b6:	rol    BYTE PTR [rax],cl
   1400201b8:	and    eax,0x2500c098
   1400201bd:	mov    ch,dl
   1400201bf:	add    BYTE PTR [rax],al
   1400201c1:	xor    dh,0x0
   1400201c4:	add    BYTE PTR [rdx-0x7bffff08],al
   1400201ca:	cli    
   1400201cb:	add    BYTE PTR [rax],al
   1400201cd:	test   esi,edi
   1400201cf:	add    BYTE PTR [rax],al
   1400201d1:	mov    bh,bh
   1400201d3:	add    BYTE PTR [rcx],cl
   1400201d5:	(bad)  
   1400201d6:	inc    DWORD PTR [rax]
   1400201d8:	jle    0xd00f02dd
   1400201de:	inc    DWORD PTR [rax]
   1400201e0:	(bad)  
   1400201e1:	xchg   ebp,eax
   1400201e2:	inc    DWORD PTR [rax]
   1400201e4:	movabs ss:0xa94500ffa63f00ff,al
   1400201ee:	inc    DWORD PTR [rax]
   1400201f0:	stos   QWORD PTR es:[rdi],rax
   1400201f2:	inc    DWORD PTR [rax]
   1400201f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400201f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400201f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400201f7:	add    BYTE PTR [rax-0x52ff5758],ch
   1400201fd:	scas   al,BYTE PTR es:[rdi]
   1400201fe:	scas   al,BYTE PTR es:[rdi]
   1400201ff:	add    BYTE PTR [rcx-0x4aff4e4f],dh
   140020205:	mov    ch,0xb5
   140020207:	add    BYTE PTR [rsi-0x64ff6822],bl
   14002020d:	ficomp WORD PTR [rax-0x67216300]
   140020213:	add    BYTE PTR [rdi-0x5eff7028],bh
   140020219:	fst    QWORD PTR [rdi-0x6a235900]
   14002021f:	add    BYTE PTR [rsi-0x53ff6c26],ch
   140020225:	fist   DWORD PTR [rax+rax*1+0x91d9b5]
   14002022c:	mov    esp,0xb60090d8
   140020231:	fbld   TBYTE PTR [rbp-0x5f234200]
   140020237:	add    dh,al
   140020239:	(bad)  
   14002023a:	lea    eax,[rax]
   14002023c:	(bad)  
   14002023e:	xchg   DWORD PTR [rax],eax
   140020240:	(bad)  
   140020241:	ror    DWORD PTR [rcx-0x61252700],cl
   140020247:	add    bl,ah
   140020249:	rol    BYTE PTR [rsi-0x7a2f1b00],1
   14002024f:	add    al,ch
   140020251:	rol    BYTE PTR [rbp-0x692a1300],1
   140020257:	add    BYTE PTR [rbp-0x66ff0035],cl
   14002025d:	sar    dh,1
   14002025f:	add    BYTE PTR [rbp-0x3aff002b],ah
   140020265:	(bad)
   140020268:	int    0xcd
   14002026a:	int    0x0
   14002026c:	rcl    ecx,1
   14002026e:	rol    DWORD PTR [rax],1
   140020270:	(bad)  
   140020271:	(bad)  
   140020272:	(bad)  
   140020273:	add    cl,bl
   140020275:	(bad)  
   140020277:	add    ch,bl
   140020279:	fstp   st(5)
   14002027b:	add    bh,bl
   14002027d:	loopne 0x14002025f
   14002027f:	add    al,bl
   140020281:	in     eax,dx
   140020282:	inc    DWORD PTR [rax]
   140020284:	fdivrp st(0),st
   140020286:	inc    DWORD PTR [rax]
   140020288:	out    0xe6,al
   14002028a:	out    0x0,al
   14002028c:	out    0xe8,eax
   14002028e:	call   0x128eaea93
   140020293:	add    dh,ch
   140020295:	out    dx,al
   140020296:	out    dx,al
   140020297:	add    bh,ch
   140020299:	lock lock add ah,ah
   14002029d:	repz inc DWORD PTR [rax]
   1400202a0:	lock lock lock add ch,dh
   1400202a5:	div    dh
   1400202a7:	add    dh,dh
   1400202a9:	clc    
   1400202aa:	clc    
   1400202ab:	add    al,bh
   1400202ad:	stc    
   1400202ae:	stc    
   1400202af:	add    dl,bh
   1400202b1:	cld    
   1400202b2:	cld    
   1400202b3:	add    dh,bh
   1400202b5:	(bad)  
   1400202b6:	inc    BYTE PTR [rax]
	...
   1400204dc:	(bad)  
   1400204dd:	(bad)  
   1400204de:	inc    DWORD PTR [rax]
	...
   140020504:	rex.RX
   140020505:	rex.RXB
   140020506:	rex.RXB
   140020507:	rex.W
   140020508:	rex.RXB
   140020509:	rex.W
   14002050a:	rex.RXB
   14002050b:	rex.RXB
   14002050c:	rex.RXB
   14002050d:	rex.RXB
   14002050e:	rex.RXB
   14002050f:	rex.RXB
   140020510:	rex.RXB
   140020511:	rex.RXB
   140020512:	rex.RXB
   140020513:	rex.RXB
   140020514:	rex.RXB
   140020515:	rex.RXB
   140020516:	rex.RXB
   140020517:	rex.RXB
   140020518:	rex.RXB
   140020519:	rex.RXB add BYTE PTR [r8],r8b
	...
   140020524:	fs (bad) 
   140020526:	(bad)  
   140020527:	(bad)  
   140020528:	(bad)  
   140020529:	(bad)  
   14002052a:	(bad)  
   14002052b:	(bad)  
   14002052c:	(bad)  
   14002052d:	(bad)  
   14002052e:	(bad)  
   14002052f:	(bad)  
   140020530:	(bad)  
   140020531:	(bad)  
   140020532:	(bad)  
   140020533:	(bad)  
   140020534:	(bad)  
   140020535:	(bad)  
   140020536:	(bad)  
   140020537:	(bad)  
   140020538:	inc    DWORD PTR [rdi+0x0]
	...
   140020543:	add    BYTE PTR [rcx+rsi*2-0x1],ah
   140020547:	jno    0x140020548
   140020549:	jno    0x14002054a
   14002054b:	jno    0x1400205bf
   14002054d:	jb     0x1400205c1
   14002054f:	jb     0x1400205c3
   140020551:	jno    0x1400205c4
   140020553:	jno    0x1400205c6
   140020555:	jno    0x1400205c8
   140020557:	jno    0x140020558
   140020559:	rex.RXB add BYTE PTR [r8],r8b
	...
   140020564:	fs jno 0x140020566
   140020567:	jno    0x1400205da
   140020569:	push   QWORD PTR [rcx+0x72]
   14002056c:	push   QWORD PTR [rcx+0x72]
   14002056f:	jb     0x1400205e3
   140020571:	jb     0x1400205e5
   140020573:	jno    0x1400205e6
   140020575:	jno    0x1400205e8
   140020577:	jno    0x140020578
   140020579:	rex.RXB add BYTE PTR [r8],r8b
	...
   140020584:	fs jno 0x140020586
   140020587:	jno    0x140020588
   140020589:	jno    0x1400205fc
   14002058b:	push   QWORD PTR [rcx+0x71]
   14002058e:	push   QWORD PTR [rcx+0x72]
   140020591:	jb     0x140020605
   140020593:	push   QWORD PTR [rcx+0x71]
   140020596:	jb     0x140020609
   140020598:	inc    DWORD PTR [rdi+0x0]
	...
   1400205a3:	add    BYTE PTR [rcx+rsi*2-0x1],ah
   1400205a7:	jno    0x14002061b
   1400205a9:	push   QWORD PTR [rcx+0x71]
   1400205ac:	push   QWORD PTR [rcx+0x71]
   1400205af:	push   QWORD PTR [rcx+0x72]
   1400205b2:	jno    0x140020625
   1400205b4:	jno    0x140020628
   1400205b6:	jb     0x140020629
   1400205b8:	inc    DWORD PTR [rdi+0x0]
	...
   1400205c3:	add    BYTE PTR [rcx+rsi*2-0x1],ah
   1400205c7:	jb     0x1400205c8
   1400205c9:	jno    0x1400205ca
   1400205cb:	jno    0x14002063e
   1400205cd:	push   QWORD PTR [rcx+0x71]
   1400205d0:	push   QWORD PTR [rcx+0x72]
   1400205d3:	jb     0x1400205d4
   1400205d5:	jno    0x140020649
   1400205d7:	jno    0x1400205d8
   1400205d9:	rex.RXB add BYTE PTR [r8],r8b
	...
   1400205e4:	fs jno 0x1400205e6
   1400205e7:	jb     0x14002065b
   1400205e9:	push   QWORD PTR [rcx-0x1]
   1400205ec:	jno    0x14002065f
   1400205ee:	push   QWORD PTR [rcx+0x71]
   1400205f1:	push   QWORD PTR [rcx+0x71]
   1400205f4:	jno    0x140020667
   1400205f6:	jb     0x140020669
   1400205f8:	inc    DWORD PTR [rdi+0x0]
   1400205fb:	add    BYTE PTR [rax],al
   1400205fd:	add    BYTE PTR [rax],al
   1400205ff:	add    BYTE PTR [rdx],dl
   140020601:	or     BYTE PTR [rcx],al
   140020603:	add    DWORD PTR [rcx],eax
   140020605:	add    DWORD PTR [rcx],eax
   140020607:	add    DWORD PTR [rcx],eax
   140020609:	add    DWORD PTR [rcx],eax
   14002060b:	add    DWORD PTR [rcx],eax
   14002060d:	add    DWORD PTR [rax],ecx
   14002060f:	adc    BYTE PTR [rdx+0x71],dh
   140020612:	push   QWORD PTR [rcx-0x1]
   140020615:	jno    0x140020616
   140020617:	jno    0x140020618
   140020619:	rex.RXB add BYTE PTR [r8],r8b
   14002061c:	add    BYTE PTR [rax],al
   14002061e:	add    BYTE PTR [rax],al
   140020620:	or     BYTE PTR [rbx+rcx*2+0x4b],dl
   140020624:	rex.WXB
   140020625:	rex.WXB
   140020626:	rex.WXB
   140020627:	rex.WXB
   140020628:	rex.WXB
   140020629:	rex.WRX
   14002062a:	rex.WRX push rax
   14002062c:	push   rdx
   14002062d:	rex.WRB pop r9
   14002062f:	or     bh,bh
   140020631:	jno    0x1400206a4
   140020633:	jb     0x1400206a6
   140020635:	jno    0x1400206a8
   140020637:	jno    0x140020638
   140020639:	rex.RXB add BYTE PTR [r8],r8b
   14002063c:	add    BYTE PTR [rax],al
   14002063e:	add    BYTE PTR [rax],al
   140020640:	add    DWORD PTR [rbx+0x3],ecx
   140020643:	add    eax,DWORD PTR [rbx]
   140020645:	sub    ah,BYTE PTR [rip+0x2c233434]        # 0x16c253a7f
   14002064b:	(bad)  
   14002064c:	(bad)  
   14002064d:	sbb    BYTE PTR [rax+0x1],bl
   140020650:	jno    0x140020651
   140020652:	jno    0x140020653
   140020654:	jno    0x140020655
   140020656:	jno    0x1400206c9
   140020658:	inc    DWORD PTR [rdi+0x0]
   14002065b:	add    BYTE PTR [rax],al
   14002065d:	add    BYTE PTR [rax],al
   14002065f:	add    BYTE PTR [rcx],al
   140020661:	rex.WXB add rax,QWORD PTR [r11]
   140020664:	and    DWORD PTR ss:[rcx],edi
   140020667:	cmp    DWORD PTR [rcx],edi
   140020669:	cmp    BYTE PTR [rsi],bl
   14002066b:	and    edx,DWORD PTR [rsi]
   14002066d:	sbb    DWORD PTR [rdi+0x1],edx
   140020670:	push   QWORD PTR [rcx+0x72]
   140020673:	jno    0x140020674
   140020675:	jno    0x1400206e8
   140020677:	push   QWORD PTR [rdx+0x47]
   14002067a:	add    BYTE PTR [rax],al
   14002067c:	add    BYTE PTR [rax],al
   14002067e:	add    BYTE PTR [rax],al
   140020680:	add    DWORD PTR [rbx+0x3],ecx
   140020683:	and    al,0x38
   140020685:	rex (bad) 
   140020687:	(bad)  
   140020688:	cmp    al,0x3c
   14002068a:	cmp    al,0x1f
   14002068c:	and    cl,BYTE PTR [rsi]
   14002068e:	pop    rbx
   14002068f:	add    DWORD PTR [rdx-0x1],esi
   140020692:	jno    0x140020693
   140020694:	jno    0x140020707
   140020696:	push   QWORD PTR [rcx-0x1]
   140020699:	rex.RXB add BYTE PTR [r8],r8b
   14002069c:	add    BYTE PTR [rax],al
   14002069e:	add    BYTE PTR [rax],al
   1400206a0:	add    DWORD PTR [rbx+0x2a],ecx
   1400206a3:	and    DWORD PTR [rcx],edi
   1400206a5:	rex jmp FWORD PTR [rdi+0x44]
   1400206a9:	cmp    al,0x3c
   1400206ab:	cmp    al,0x1d
   1400206ad:	or     bl,BYTE PTR [rcx+rax*1-0x1]
   1400206b1:	jno    0x1400206b2
   1400206b3:	jno    0x1400206b4
   1400206b5:	jno    0x140020728
   1400206b7:	jb     0x1400206b8
   1400206b9:	rex.RXB add BYTE PTR [r8],r8b
   1400206bc:	add    BYTE PTR [rax],al
   1400206be:	add    BYTE PTR [rax],al
   1400206c0:	add    DWORD PTR [rbx+0x25],ecx
   1400206c3:	cmp    DWORD PTR [rax+rax*2],edi
   1400206c6:	(bad)  
   1400206c7:	(bad)  
   1400206c8:	call   FWORD PTR [rdi+0x3f]
   1400206cb:	cmp    al,0x21
   1400206cd:	(bad)  
   1400206ce:	pop    rsp
   1400206cf:	add    edi,edi
   1400206d1:	jno    0x140020745
   1400206d3:	push   QWORD PTR [rcx-0x1]
   1400206d6:	jno    0x14002074a
   1400206d8:	inc    DWORD PTR [rdi+0x0]
   1400206db:	add    BYTE PTR [rax],al
   1400206dd:	add    BYTE PTR [rax],al
   1400206df:	add    BYTE PTR [rcx],al
   1400206e1:	rex.WXB xor rax,0xffffffffff403c39
   1400206e7:	(bad)  
   1400206e8:	(bad)  
   1400206e9:	jmp    FWORD PTR [rcx+0x42]
   1400206ec:	cmp    DWORD PTR [rsp+rbx*2],ebx
   1400206ef:	add    edi,edi
   1400206f1:	jno    0x1400206f2
   1400206f3:	jno    0x1400206f4
   1400206f5:	jno    0x1400206f6
   1400206f7:	jno    0x1400206f8
   1400206f9:	rex.RXB add BYTE PTR [r8],r8b
   1400206fc:	add    BYTE PTR [rax],al
   1400206fe:	add    BYTE PTR [rax],al
   140020700:	add    DWORD PTR [rbx+0x35],ecx
   140020703:	cmp    DWORD PTR [rax+rax*2],edi
   140020706:	(bad)  
   140020707:	(bad)  
   140020708:	(bad)  
   140020709:	jmp    FWORD PTR [rax+0x41]
   14002070c:	cmp    DWORD PTR [rbx],ebx
   14002070e:	pop    rsp
   14002070f:	add    edi,edi
   140020711:	jno    0x140020712
   140020713:	jno    0x140020787
   140020715:	push   QWORD PTR [rcx-0x1]
   140020718:	inc    DWORD PTR [rdi+0x0]
   14002071b:	add    BYTE PTR [rax],al
   14002071d:	add    BYTE PTR [rax],al
   14002071f:	add    BYTE PTR [rcx],al
   140020721:	rex.WXB (bad) 
   140020723:	cmp    DWORD PTR [rax+rax*2],edi
   140020726:	(bad)  
   140020727:	(bad)  
   140020728:	call   FWORD PTR [rsi+0x3d]
   14002072b:	cmp    al,0x38
   14002072d:	(bad)  
   14002072e:	pop    rsp
   14002072f:	add    edi,edi
   140020731:	jb     0x140020732
   140020733:	jb     0x140020734
   140020735:	jno    0x140020736
   140020737:	jno    0x140020738
   140020739:	rex.RXB add BYTE PTR [r8],r8b
   14002073c:	add    BYTE PTR [rax],al
   14002073e:	add    BYTE PTR [rax],al
   140020740:	add    DWORD PTR [rbx+0x2a],ecx
   140020743:	and    DWORD PTR [rcx],edi
   140020745:	rex jmp FWORD PTR [rdi+0x43]
   140020749:	cmp    al,0x3c
   14002074b:	cmp    DWORD PTR [rdi],ebx
   14002074d:	or     ebx,DWORD PTR [rcx+rax*1-0x1]
   140020751:	jb     0x140020752
   140020753:	jno    0x140020754
   140020755:	jno    0x140020756
   140020757:	jno    0x140020758
   140020759:	rex.RXB add BYTE PTR [r8],r8b
   14002075c:	add    BYTE PTR [rax],al
   14002075e:	add    BYTE PTR [rax],al
   140020760:	add    DWORD PTR [rbx+0x4],ecx
   140020763:	sub    BYTE PTR [rcx],bh
   140020765:	rex (bad) 
   140020767:	cmp    eax,0x383c393c
   14002076c:	cs or  eax,0x72ff015c
   140020772:	push   QWORD PTR [rdx-0x1]
   140020775:	jno    0x140020776
   140020777:	(bad)  
   140020778:	inc    DWORD PTR [rdi+0x0]
   14002077b:	add    BYTE PTR [rax],al
   14002077d:	add    BYTE PTR [rax],al
   14002077f:	add    BYTE PTR [rcx],al
   140020781:	rex.WX (bad) 
   140020783:	(bad)  
   140020784:	sub    DWORD PTR [rcx],esp
   140020786:	cmp    DWORD PTR [rcx],edi
   140020788:	cmp    DWORD PTR [rcx],edi
   14002078a:	cmp    BYTE PTR [rcx],dh
   14002078c:	prefetch BYTE PTR [rcx+rax*1-0x1]
   140020791:	push   QWORD PTR [rcx-0x1]
   140020794:	(bad)  
   140020795:	jmp    FWORD PTR [rdx+0x64]
   140020798:	(bad)  
   140020799:	rex.RXB add BYTE PTR [r8],r8b
   14002079c:	add    BYTE PTR [rax],al
   14002079e:	add    BYTE PTR [rax],al
   1400207a0:	add    DWORD PTR [rsi+0x7],ecx
   1400207a3:	sbb    dl,BYTE PTR [rdi]
   1400207a5:	sub    eax,0x32373730
   1400207aa:	or     al,0xd
   1400207ac:	or     eax,0xff015c0d
   1400207b1:	jno    0x1400207b2
   1400207b3:	jmp    QWORD PTR [rsi+rax*2+0x46]
   1400207b7:	rex.RX
   1400207b8:	rex.RXB
   1400207b9:	rex.W add BYTE PTR [rax],al
   1400207bc:	add    BYTE PTR [rax],al
   1400207be:	add    BYTE PTR [rax],al
   1400207c0:	or     DWORD PTR [rbp+0x51],edx
   1400207c3:	push   rdx
   1400207c4:	rex.WRB push r14
   1400207c6:	pop    rax
   1400207c7:	pop    rdx
   1400207c8:	pop    rsp
   1400207c9:	pop    rsp
   1400207ca:	pop    rsp
   1400207cb:	pop    rsp
   1400207cc:	pop    rsp
   1400207cd:	pop    rsp
   1400207ce:	pop    rbp
   1400207cf:	or     bh,bh
   1400207d1:	push   QWORD PTR [rcx-0x1]
   1400207d4:	jmp    DWORD PTR gs:[rdi+rax*2+0x0]
   1400207da:	add    BYTE PTR [rax],al
   1400207dc:	add    BYTE PTR [rax],al
   1400207de:	add    BYTE PTR [rax],al
   1400207e0:	adc    cl,BYTE PTR [rcx]
   1400207e2:	add    DWORD PTR [rcx],eax
   1400207e4:	add    DWORD PTR [rcx],eax
   1400207e6:	add    DWORD PTR [rcx],eax
   1400207e8:	add    DWORD PTR [rcx],eax
   1400207ea:	add    DWORD PTR [rcx],eax
   1400207ec:	add    DWORD PTR [rcx],eax
   1400207ee:	or     BYTE PTR [rcx],dl
   1400207f0:	push   QWORD PTR [rcx-0x1]
   1400207f3:	jmp    QWORD PTR [rsi+0x6a]
   1400207f6:	inc    DWORD PTR [rdi+0x0]
	...
   140020801:	add    BYTE PTR [rax],al
   140020803:	add    BYTE PTR [rdi+rdi*8-0x1],ah
   140020807:	(bad)  
   140020808:	(bad)  
   140020809:	(bad)  
   14002080a:	(bad)  
   14002080b:	(bad)  
   14002080c:	(bad)  
   14002080d:	(bad)  
   14002080e:	(bad)  
   14002080f:	(bad)  
   140020810:	(bad)  
   140020811:	(bad)  
   140020812:	(bad)  
   140020813:	jmp    QWORD PTR [rsi+0x65]
   140020816:	rex.RXB add BYTE PTR [r8],r8b
	...
   140020821:	add    BYTE PTR [rax],al
   140020823:	add    BYTE PTR [rdi+rdi*8-0x1],ah
   140020827:	(bad)  
   140020828:	(bad)  
   140020829:	(bad)  
   14002082a:	(bad)  
   14002082b:	(bad)  
   14002082c:	(bad)  
   14002082d:	(bad)  
   14002082e:	(bad)  
   14002082f:	(bad)  
   140020830:	(bad)  
   140020831:	(bad)  
   140020832:	push   QWORD PTR [rdx+0x64]
   140020835:	rex.RXB add BYTE PTR [r8],r8b
	...
   140020844:	fs push 0x6c
   140020847:	imul   ebp,DWORD PTR [rbx+0x6b],0x6a
   14002084b:	push   0x6a
   14002084d:	push   0x6a
   14002084f:	push   0x6a
   140020851:	push   0x6b
   140020853:	push   0x47
	...
   1400208dd:	add    BYTE PTR [rax],al
   1400208df:	add    bh,bh
   1400208e1:	(bad)  
   1400208e2:	(bad)  
   1400208e3:	push   rax
   1400208e5:	add    BYTE PTR [rax],al
   1400208e7:	(bad)  
   1400208e8:	lock add BYTE PTR [rax],al
   1400208eb:	(bad)  
   1400208ec:	lock add BYTE PTR [rax],al
   1400208ef:	(bad)  
   1400208f0:	lock add BYTE PTR [rax],al
   1400208f3:	(bad)  
   1400208f4:	lock add BYTE PTR [rax],al
   1400208f7:	(bad)  
   1400208f8:	lock add BYTE PTR [rax],al
   1400208fb:	(bad)  
   1400208fc:	lock add BYTE PTR [rax],al
   1400208ff:	(bad)  
   140020900:	lock add BYTE PTR [rax],al
   140020903:	(bad)  
   140020904:	add    BYTE PTR [rax],al
   140020906:	add    BYTE PTR [rdi],bh
   140020908:	add    BYTE PTR [rax],al
   14002090a:	add    BYTE PTR [rdi],bh
   14002090c:	add    BYTE PTR [rax],al
   14002090e:	add    BYTE PTR [rdi],bh
   140020910:	add    BYTE PTR [rax],al
   140020912:	add    BYTE PTR [rdi],bh
   140020914:	add    BYTE PTR [rax],al
   140020916:	add    BYTE PTR [rdi],bh
   140020918:	add    BYTE PTR [rax],al
   14002091a:	add    BYTE PTR [rdi],bh
   14002091c:	add    BYTE PTR [rax],al
   14002091e:	add    BYTE PTR [rdi],bh
   140020920:	add    BYTE PTR [rax],al
   140020922:	add    BYTE PTR [rdi],bh
   140020924:	add    BYTE PTR [rax],al
   140020926:	add    BYTE PTR [rdi],bh
   140020928:	add    BYTE PTR [rax],al
   14002092a:	add    BYTE PTR [rdi],bh
   14002092c:	add    BYTE PTR [rax],al
   14002092e:	add    BYTE PTR [rdi],bh
   140020930:	add    BYTE PTR [rax],al
   140020932:	add    BYTE PTR [rdi],bh
   140020934:	add    BYTE PTR [rax],al
   140020936:	add    BYTE PTR [rdi],bh
   140020938:	add    BYTE PTR [rax],al
   14002093a:	add    BYTE PTR [rdi],bh
   14002093c:	add    BYTE PTR [rax],al
   14002093e:	add    BYTE PTR [rdi+0x0],bh
   140020941:	add    BYTE PTR [rax],al
   140020943:	push   rax
   140020945:	add    BYTE PTR [rcx],al
   140020947:	push   rax
   140020949:	add    BYTE PTR [rbx],al
   14002094b:	push   rax
   14002094d:	add    BYTE PTR [rdi],al
   14002094f:	(bad)  
   140020950:	(bad)  
   140020951:	(bad)  
   140020952:	(bad)  
   140020953:	(bad)  
   140020954:	(bad)  
   140020955:	(bad)  
   140020956:	(bad)  
   140020957:	(bad)  
   140020958:	(bad)  
   140020959:	(bad)  
   14002095a:	(bad)  
   14002095b:	(bad)  
   14002095c:	(bad)  
   14002095d:	(bad)  
   14002095e:	(bad)  
   14002095f:	jmp    FWORD PTR [rax]
   140020961:	add    BYTE PTR [rax],al
   140020963:	add    BYTE PTR [rax],dh
   140020965:	add    BYTE PTR [rax],al
   140020967:	add    BYTE PTR [rax+0x0],ah
   14002096a:	add    BYTE PTR [rax],al
   14002096c:	add    DWORD PTR [rax],eax
   14002096e:	add    al,0x0
   140020970:	add    BYTE PTR [rax],al
   140020972:	add    BYTE PTR [rax],al
   140020974:	add    BYTE PTR [rax+rax*1],0x0
	...
   14002098c:	add    BYTE PTR [rax],al
   14002098e:	add    BYTE PTR [rax],0x0
   140020991:	add    BYTE PTR [rax],0x0
   140020994:	add    BYTE PTR [rax+0x800080],al
   14002099a:	add    BYTE PTR [rax],al
   14002099c:	add    BYTE PTR [rax],0x80
   14002099f:	add    BYTE PTR [rax-0x7fffff80],al
   1400209a5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400209ac:	add    BYTE PTR [rax],al
   1400209ae:	inc    DWORD PTR [rax]
   1400209b0:	add    bh,bh
   1400209b2:	add    BYTE PTR [rax],al
   1400209b4:	add    bh,bh
   1400209b6:	inc    DWORD PTR [rax]
   1400209b8:	inc    DWORD PTR [rax]
   1400209ba:	add    BYTE PTR [rax],al
   1400209bc:	inc    DWORD PTR [rax]
   1400209be:	inc    DWORD PTR [rax]
   1400209c0:	(bad)  
   1400209c1:	inc    DWORD PTR [rax]
   1400209c3:	add    bh,bh
   1400209c5:	(bad)  
   1400209c6:	inc    DWORD PTR [rax]
	...
   1400209e4:	ja     0x140020a5d
   1400209e6:	ja     0x140020a5f
   1400209e8:	ja     0x140020a61
   1400209ea:	ja     0x140020a63
   1400209ec:	ja     0x140020a65
   1400209ee:	ja     0x140020a67
   1400209f0:	ja     0x140020a69
   1400209f2:	ja     0x140020a6b
	...
   1400209fc:	(bad)  
   1400209fd:	(bad)  
   1400209fe:	(bad)  
   1400209ff:	(bad)  
   140020a00:	(bad)  
   140020a01:	(bad)  
   140020a02:	(bad)  
   140020a03:	(bad)  
   140020a04:	(bad)  
   140020a05:	(bad)  
   140020a06:	(bad)  
   140020a07:	(bad)  
   140020a08:	(bad)  
   140020a09:	(bad)  
   140020a0a:	push   rdi
	...
   140020a14:	(bad)  
   140020a15:	(bad)  
   140020a16:	(bad)  
   140020a17:	(bad)  
   140020a18:	(bad)  
   140020a19:	(bad)  
   140020a1a:	(bad)  
   140020a1b:	(bad)  
   140020a1c:	(bad)  
   140020a1d:	(bad)  
   140020a1e:	(bad)  
   140020a1f:	(bad)  
   140020a20:	(bad)  
   140020a21:	(bad)  
   140020a22:	push   rdi
	...
   140020a2c:	(bad)  
   140020a2d:	(bad)  
   140020a2e:	(bad)  
   140020a2f:	(bad)  
   140020a30:	(bad)  
   140020a31:	(bad)  
   140020a32:	(bad)  
   140020a33:	(bad)  
   140020a34:	(bad)  
   140020a35:	(bad)  
   140020a36:	(bad)  
   140020a37:	(bad)  
   140020a38:	(bad)  
   140020a39:	(bad)  
   140020a3a:	push   rdi
	...
   140020a44:	(bad)  
   140020a45:	(bad)  
   140020a46:	clc    
   140020a47:	(bad)  
   140020a48:	clc    
   140020a49:	(bad)  
   140020a4a:	clc    
   140020a4b:	dec    DWORD PTR [rdi-0x7700008]
   140020a51:	dec    DWORD PTR [rdi+0xf7]
   140020a57:	add    BYTE PTR [rax],al
   140020a59:	add    BYTE PTR [rax],al
   140020a5b:	add    BYTE PTR [rdi-0x1],cl
   140020a61:	(bad)  
   140020a62:	(bad)  
   140020a63:	(bad)  
   140020a64:	(bad)  
   140020a65:	(bad)  
   140020a66:	(bad)  
   140020a67:	(bad)  
   140020a68:	(bad)  
   140020a69:	(bad)  
   140020a6a:	push   rdi
	...
   140020a74:	(bad)  
   140020a75:	clc    
   140020a76:	(bad)  
   140020a77:	clc    
   140020a78:	(bad)  
   140020a79:	clc    
   140020a7a:	(bad)  
   140020a7b:	(bad)  
   140020a7c:	dec    DWORD PTR [rdi-0x70000701]
   140020a82:	clc    
   140020a83:	test   DWORD PTR [rax],0x0
   140020a89:	add    BYTE PTR [rax],al
   140020a8b:	add    BYTE PTR [rdi-0x1],cl
   140020a91:	(bad)  
   140020a92:	dec    DWORD PTR [rdi-0x70071]
   140020a98:	(bad)  
   140020a99:	(bad)  
   140020a9a:	push   rdi
	...
   140020aa4:	(bad)  
   140020aa5:	(bad)  
   140020aa6:	clc    
   140020aa7:	(bad)  
   140020aa8:	clc    
   140020aa9:	dec    DWORD PTR [rdi-0x1]
   140020aaf:	(bad)  
   140020ab0:	(bad)  
   140020ab1:	(bad)  
   140020ab2:	push   rdi
	...
   140020abc:	(bad)  
   140020abd:	(bad)  
   140020abe:	(bad)  
   140020abf:	(bad)  
   140020ac0:	(bad)  
   140020ac1:	(bad)  
   140020ac2:	(bad)  
   140020ac3:	(bad)  
   140020ac4:	(bad)  
   140020ac5:	clc    
   140020ac6:	(bad)  
   140020ac7:	clc    
   140020ac8:	dec    DWORD PTR [rdi+0xf7f8]
   140020ace:	add    BYTE PTR [rax],al
   140020ad0:	add    BYTE PTR [rax],al
   140020ad2:	add    BYTE PTR [rax],al
   140020ad4:	(bad)  
   140020ad5:	(bad)  
   140020ad6:	(bad)  
   140020ad7:	clc    
   140020ad8:	(bad)  
   140020ad9:	(bad)  
   140020ada:	dec    DWORD PTR [rdi-0x8]
   140020ae0:	(bad)  
   140020ae1:	(bad)  
   140020ae2:	push   rdi
	...
   140020aec:	(bad)  
   140020aed:	dec    DWORD PTR [rdi-0x700001]
   140020af3:	(bad)  
   140020af4:	(bad)  
   140020af5:	(bad)  
   140020af6:	clc    
   140020af7:	dec    DWORD PTR [rdi+0xf7fff8]
   140020afd:	add    BYTE PTR [rax],al
   140020aff:	add    BYTE PTR [rax],al
   140020b01:	add    BYTE PTR [rax],al
   140020b03:	add    BYTE PTR [rdi-0x1],cl
   140020b09:	(bad)  
   140020b0a:	clc    
   140020b0b:	(bad)  
   140020b0c:	(bad)  
   140020b0d:	clc    
   140020b0e:	(bad)  
   140020b0f:	(bad)  
   140020b10:	(bad)  
   140020b11:	(bad)  
   140020b12:	push   rdi
	...
   140020b1c:	(bad)  
   140020b1d:	(bad)  
   140020b1e:	dec    DWORD PTR [rdi-0x701]
   140020b24:	(bad)  
   140020b25:	(bad)  
   140020b26:	(bad)  
   140020b27:	(bad)  
   140020b28:	clc    
   140020b29:	dec    DWORD PTR [rdi+0xf7]
   140020b2f:	add    BYTE PTR [rax],al
   140020b31:	or     ah,cl
   140020b33:	int3   
   140020b34:	int3   
   140020b35:	int3   
   140020b36:	int3   
   140020b37:	int3   
   140020b38:	int3   
   140020b39:	int3   
   140020b3a:	int3   
   140020b3b:	int3   
   140020b3c:	int3   
   140020b3d:	(bad)  
   140020b3e:	clc    
   140020b3f:	clc    
   140020b40:	(bad)  
   140020b41:	(bad)  
   140020b42:	push   rdi
   140020b44:	add    BYTE PTR [rax],al
   140020b46:	add    BYTE PTR [rax],al
   140020b48:	add    BYTE PTR [rsi+rbp*8],cl
   140020b4b:	out    dx,al
   140020b4c:	out    dx,al
   140020b4d:	out    dx,al
   140020b4e:	out    dx,al
   140020b4f:	out    dx,al
   140020b50:	out    dx,al
   140020b51:	out    dx,al
   140020b52:	out    dx,al
   140020b53:	out    dx,al
   140020b54:	out    dx,al
   140020b55:	enter  0xffff,0xff
   140020b59:	(bad)  
   140020b5a:	push   rdi
   140020b5c:	add    BYTE PTR [rax],al
   140020b5e:	add    BYTE PTR [rax],al
   140020b60:	add    BYTE PTR [rsi+rbp*8],cl
   140020b63:	out    dx,al
   140020b64:	out    dx,al
   140020b65:	out    dx,al
   140020b66:	out    dx,al
   140020b67:	out    dx,al
   140020b68:	out    dx,al
   140020b69:	out    dx,al
   140020b6a:	out    dx,al
   140020b6b:	out    dx,al
   140020b6c:	out    dx,al
   140020b6d:	iret   
   140020b6e:	(bad)  
   140020b6f:	(bad)  
   140020b70:	clc    
   140020b71:	dec    DWORD PTR [rdi+0xf7]
   140020b77:	add    BYTE PTR [rax],al
   140020b79:	or     al,0xee
   140020b7b:	out    dx,al
   140020b7c:	(bad)  
   140020b7d:	xor    DWORD PTR [rbx-0x11484c47],0xffffffee
   140020b84:	out    dx,al
   140020b85:	iret   
   140020b86:	(bad)  
   140020b87:	clc    
   140020b88:	(bad)  
   140020b89:	(bad)  
   140020b8a:	push   rdi
   140020b8c:	add    BYTE PTR [rax],al
   140020b8e:	add    BYTE PTR [rax],al
   140020b90:	add    BYTE PTR [rsi+rbp*8],cl
   140020b93:	out    dx,al
   140020b94:	jmp    0x140020bcf
   140020b96:	mov    ecx,0xb639b9b9
   140020b9b:	out    dx,al
   140020b9c:	out    dx,al
   140020b9d:	iret   
   140020b9e:	clc    
   140020b9f:	(bad)  
   140020ba0:	(bad)  
   140020ba1:	(bad)  
   140020ba2:	push   rdi
   140020ba4:	add    BYTE PTR [rax],al
   140020ba6:	add    BYTE PTR [rax],al
   140020ba8:	add    BYTE PTR [rsi+rbp*8],cl
   140020bab:	out    0x39,eax
   140020bad:	mov    ebx,0xb99b9b9b
   140020bb2:	cmp    ebp,esi
   140020bb4:	out    dx,al
   140020bb5:	iret   
   140020bb6:	(bad)  
   140020bb7:	(bad)  
   140020bb8:	dec    DWORD PTR [rdi+0xf78f]
   140020bbe:	add    BYTE PTR [rax],al
   140020bc0:	add    BYTE PTR [rsi+rbp*8],cl
   140020bc3:	jmp    0x140020c00
   140020bc5:	cwde   
   140020bc6:	sti    
   140020bc7:	fwait
   140020bc8:	fwait
   140020bc9:	fwait
   140020bca:	fwait
   140020bcb:	jle    0x140020bbb
   140020bcd:	iret   
   140020bce:	(bad)  
   140020bcf:	dec    DWORD PTR [rdi+0xf7ffff]
   140020bd5:	add    BYTE PTR [rax],al
   140020bd7:	add    BYTE PTR [rax],al
   140020bd9:	or     al,0xee
   140020bdb:	jae    0x140020b96
   140020bdd:	mov    eax,0x9b9b8bff
   140020be2:	cmp    DWORD PTR [rax],edi
   140020be4:	out    dx,al
   140020be5:	iret   
   140020be6:	clc    
   140020be7:	(bad)  
   140020be8:	(bad)  
   140020be9:	(bad)  
   140020bea:	push   rdi
   140020bec:	add    BYTE PTR [rax],al
   140020bee:	add    BYTE PTR [rax],al
   140020bf0:	add    BYTE PTR [rsi+rbp*8],cl
   140020bf3:	mov    bl,0x9b
   140020bf5:	cwde   
   140020bf6:	(bad)  
   140020bf7:	(bad)  
   140020bf8:	mov    ecx,0xee97bbb9
   140020bfd:	iret   
   140020bfe:	(bad)  
   140020bff:	(bad)  
   140020c00:	(bad)  
   140020c01:	clc    
   140020c02:	push   rdi
   140020c04:	add    BYTE PTR [rax],al
   140020c06:	add    BYTE PTR [rax],al
   140020c08:	add    BYTE PTR [rsi+rbp*8],cl
   140020c0b:	cmp    ebx,DWORD PTR [rbx-0x7000048]
   140020c11:	mov    ecx,0xcfeeb3b9
   140020c16:	(bad)  
   140020c17:	clc    
   140020c18:	(bad)  
   140020c19:	(bad)  
   140020c1a:	clc    
   140020c1b:	test   DWORD PTR [rax],0x0
   140020c21:	or     al,0xee
   140020c23:	mov    ecx,0xffff98b9
   140020c28:	(bad)  
   140020c29:	sti    
   140020c2a:	fwait
   140020c2b:	xchg   ebx,eax
   140020c2c:	out    dx,al
   140020c2d:	iret   
   140020c2e:	clc    
   140020c2f:	(bad)  
   140020c30:	dec    DWORD PTR [rdi+0xf7ff]
   140020c36:	add    BYTE PTR [rax],al
   140020c38:	add    BYTE PTR [rsi+rbp*8],cl
   140020c3b:	cmp    ebx,DWORD PTR [rbx-0x48]
   140020c41:	dec    DWORD PTR [rcx-0x301147]
   140020c47:	(bad)  
   140020c48:	(bad)  
   140020c49:	(bad)  
   140020c4a:	push   rdi
   140020c4c:	add    BYTE PTR [rax],al
   140020c4e:	add    BYTE PTR [rax],al
   140020c50:	add    BYTE PTR [rsi+rbp*8],cl
   140020c53:	mov    ecx,0xffffb8b9
   140020c58:	(bad)  
   140020c59:	dec    DWORD PTR [rbx-0x301165]
   140020c5f:	(bad)  
   140020c60:	(bad)  
   140020c61:	(bad)  
   140020c62:	push   rdi
   140020c64:	add    BYTE PTR [rax],al
   140020c66:	add    BYTE PTR [rax],al
   140020c68:	add    BYTE PTR [rsi+rbp*8],cl
   140020c6b:	cmp    ebx,DWORD PTR [rbx-0x68]
   140020c71:	sti    
   140020c72:	fwait
   140020c73:	xchg   ebx,eax
   140020c74:	out    dx,al
   140020c75:	iret   
   140020c76:	dec    DWORD PTR [rdi-0x8077001]
   140020c7c:	add    BYTE PTR [rax],al
   140020c7e:	add    BYTE PTR [rax],al
   140020c80:	add    BYTE PTR [rsi+rbp*8],cl
   140020c83:	mov    ecx,0xffffb8b9
   140020c88:	clc    
   140020c89:	fwait
   140020c8a:	fwait
   140020c8b:	mov    ecx,0xffffcfee
   140020c90:	(bad)  
   140020c91:	(bad)  
   140020c92:	push   rdi
   140020c94:	add    BYTE PTR [rax],al
   140020c96:	add    BYTE PTR [rax],al
   140020c98:	add    BYTE PTR [rsi+rbp*8],cl
   140020c9b:	cmp    ebx,DWORD PTR [rbx-0x46070068]
   140020ca1:	mov    ecx,0xcfee37b9
   140020ca6:	(bad)  
   140020ca7:	dec    DWORD PTR [rdi+0xf7ffff]
   140020cad:	add    BYTE PTR [rax],al
   140020caf:	add    BYTE PTR [rax],al
   140020cb1:	or     al,0xee
   140020cb3:	cmp    DWORD PTR [rcx-0x64740048],0xffffff9b
   140020cba:	fwait
   140020cbb:	cwde   
   140020cbc:	out    dx,al
   140020cbd:	iret   
   140020cbe:	clc    
   140020cbf:	(bad)  
   140020cc0:	(bad)  
   140020cc1:	clc    
   140020cc2:	push   rdi
   140020cc4:	add    BYTE PTR [rax],al
   140020cc6:	add    BYTE PTR [rax],al
   140020cc8:	add    BYTE PTR [rsi+rbp*8],cl
   140020ccb:	out    0xb9,eax
   140020ccd:	mov    eax,0xb99b9b8b
   140020cd2:	mov    ecx,0xffcfee7e
   140020cd7:	(bad)  
   140020cd8:	(bad)  
   140020cd9:	(bad)  
   140020cda:	push   rdi
   140020cdc:	add    BYTE PTR [rax],al
   140020cde:	add    BYTE PTR [rax],al
   140020ce0:	add    BYTE PTR [rsi+rbp*8],cl
   140020ce3:	out    dx,al
   140020ce4:	cmp    ebx,DWORD PTR [rbx-0x64646465]
   140020cea:	xchg   edi,eax
   140020ceb:	mov    gs,esi
   140020ced:	iret   
   140020cee:	(bad)  
   140020cef:	clc    
   140020cf0:	mov    BYTE PTR [rax+0x8788],cl
   140020cf6:	add    BYTE PTR [rax],al
   140020cf8:	add    BYTE PTR [rsi+rbp*8],cl
   140020cfb:	out    dx,al
   140020cfc:	out    0x9b,eax
   140020cfe:	fwait
   140020cff:	fwait
   140020d00:	fwait
   140020d01:	xchg   ebx,eax
   140020d02:	mov    gs,esi
   140020d04:	out    dx,al
   140020d05:	iret   
   140020d06:	(bad)  
   140020d07:	clc    
   140020d08:	(bad)  
   140020d09:	(bad)  
   140020d0a:	push   QWORD PTR [rax+0x0]
   140020d0d:	add    BYTE PTR [rax],al
   140020d0f:	add    BYTE PTR [rax],al
   140020d11:	or     al,0xee
   140020d13:	out    dx,al
   140020d14:	out    dx,al
   140020d15:	out    dx,al
   140020d16:	mov    ecx,0xeeeeb9b3
   140020d1b:	out    dx,al
   140020d1c:	out    dx,al
   140020d1d:	iret   
   140020d1e:	(bad)  
   140020d1f:	clc    
   140020d20:	(bad)  
   140020d21:	push   rdi
   140020d23:	add    BYTE PTR [rax],al
   140020d25:	add    BYTE PTR [rax],al
   140020d27:	add    BYTE PTR [rax],al
   140020d29:	or     al,0xee
   140020d2b:	out    dx,al
   140020d2c:	out    dx,al
   140020d2d:	out    dx,al
   140020d2e:	out    dx,al
   140020d2f:	out    dx,al
   140020d30:	out    dx,al
   140020d31:	out    dx,al
   140020d32:	out    dx,al
   140020d33:	out    dx,al
   140020d34:	out    dx,al
   140020d35:	iret   
   140020d36:	(bad)  
   140020d37:	clc    
   140020d38:	(bad)  
   140020d39:	push   QWORD PTR [rax+0x0]
   140020d3c:	add    BYTE PTR [rax],al
   140020d3e:	add    BYTE PTR [rax],al
   140020d40:	add    BYTE PTR [rsi+rbp*8],cl
   140020d43:	out    dx,al
   140020d44:	out    dx,al
   140020d45:	out    dx,al
   140020d46:	out    dx,al
   140020d47:	out    dx,al
   140020d48:	out    dx,al
   140020d49:	out    dx,al
   140020d4a:	out    dx,al
   140020d4b:	out    dx,al
   140020d4c:	out    dx,al
   140020d4d:	iret   
   140020d4e:	(bad)  
   140020d4f:	clc    
   140020d50:	push   rdi
   140020d52:	add    BYTE PTR [rax],al
   140020d54:	add    BYTE PTR [rax],al
   140020d56:	add    BYTE PTR [rax],al
   140020d58:	add    BYTE PTR [rax],cl
   140020d5a:	int3   
   140020d5b:	int3   
   140020d5c:	int3   
   140020d5d:	int3   
   140020d5e:	int3   
   140020d5f:	int3   
   140020d60:	int3   
   140020d61:	int3   
   140020d62:	int3   
   140020d63:	int3   
   140020d64:	int3   
   140020d65:	(bad)  
   140020d66:	(bad)  
   140020d67:	clc    
   140020d68:	push   QWORD PTR [rax+0x0]
	...
   140020d73:	add    BYTE PTR [rdi-0x1],cl
   140020d79:	(bad)  
   140020d7a:	(bad)  
   140020d7b:	(bad)  
   140020d7c:	(bad)  
   140020d7d:	(bad)  
   140020d7e:	(bad)  
   140020d7f:	clc    
   140020d80:	test   DWORD PTR [rax],0x0
   140020d86:	add    BYTE PTR [rax],al
   140020d88:	add    BYTE PTR [rax],al
   140020d8a:	add    BYTE PTR [rax],al
   140020d8c:	(bad)  
   140020d8d:	(bad)  
   140020d8e:	(bad)  
   140020d8f:	(bad)  
   140020d90:	(bad)  
   140020d91:	(bad)  
   140020d92:	(bad)  
   140020d93:	(bad)  
   140020d94:	(bad)  
   140020d95:	(bad)  
   140020d96:	(bad)  
   140020d97:	clc    
   140020d98:	jo     0x140020d9a
	...
   140020da2:	add    BYTE PTR [rax],al
   140020da4:	(bad)  
   140020da5:	(bad)  
   140020da6:	(bad)  
   140020da7:	(bad)  
   140020da8:	(bad)  
   140020da9:	(bad)  
   140020daa:	(bad)  
   140020dab:	(bad)  
   140020dac:	(bad)  
   140020dad:	(bad)  
   140020dae:	push   rdi
	...
   140020dbc:	mov    BYTE PTR [rax-0x77777778],cl
   140020dc2:	mov    BYTE PTR [rax-0x7f777778],cl
	...
   140020e48:	(bad)  
   140020e49:	(bad)  
   140020e4a:	(bad)  
   140020e4b:	(bad)  
   140020e4c:	(bad)  
   140020e4d:	inc    DWORD PTR [rax]
   140020e4f:	add    bh,bh
   140020e51:	add    BYTE PTR [rax],al
   140020e53:	add    BYTE PTR [rax],al
   140020e55:	inc    DWORD PTR [rax]
   140020e57:	add    bh,bh
   140020e59:	add    BYTE PTR [rax],al
   140020e5b:	add    BYTE PTR [rax],al
   140020e5d:	inc    DWORD PTR [rax]
   140020e5f:	add    bh,bh
   140020e61:	add    BYTE PTR [rax],al
   140020e63:	add    BYTE PTR [rax],al
   140020e65:	inc    DWORD PTR [rax]
   140020e67:	add    bh,bh
   140020e69:	add    BYTE PTR [rax],al
   140020e6b:	add    BYTE PTR [rax],al
   140020e6d:	inc    DWORD PTR [rax]
   140020e6f:	add    bh,bh
   140020e71:	add    BYTE PTR [rax],al
   140020e73:	add    BYTE PTR [rax],al
   140020e75:	inc    DWORD PTR [rax]
   140020e77:	add    bh,bh
   140020e79:	add    BYTE PTR [rax],al
   140020e7b:	add    BYTE PTR [rax],al
   140020e7d:	inc    DWORD PTR [rax]
   140020e7f:	add    bh,bh
   140020e81:	add    BYTE PTR [rax],al
   140020e83:	add    BYTE PTR [rax],al
   140020e85:	inc    DWORD PTR [rax]
   140020e87:	add    bh,bh
   140020e89:	add    BYTE PTR [rax],al
   140020e8b:	add    BYTE PTR [rax],al
   140020e8d:	inc    DWORD PTR [rax]
   140020e8f:	add    bh,bh
   140020e91:	add    BYTE PTR [rax],al
   140020e93:	add    BYTE PTR [rax],al
   140020e95:	inc    DWORD PTR [rax]
   140020e97:	add    bh,bh
   140020e99:	add    BYTE PTR [rax],al
   140020e9b:	add    BYTE PTR [rax],al
   140020e9d:	inc    DWORD PTR [rax]
   140020e9f:	add    bh,bh
   140020ea1:	add    BYTE PTR [rax],al
   140020ea3:	add    BYTE PTR [rax],al
   140020ea5:	inc    DWORD PTR [rax]
   140020ea7:	add    bh,bh
   140020ea9:	add    BYTE PTR [rax],al
   140020eab:	add    BYTE PTR [rax],al
   140020ead:	inc    DWORD PTR [rax]
   140020eaf:	add    bh,bh
   140020eb1:	add    BYTE PTR [rax],al
   140020eb3:	add    BYTE PTR [rax],al
   140020eb5:	inc    DWORD PTR [rax]
   140020eb7:	add    bh,bh
   140020eb9:	add    BYTE PTR [rax],al
   140020ebb:	add    BYTE PTR [rax],al
   140020ebd:	inc    DWORD PTR [rax]
   140020ebf:	add    al,ah
   140020ec1:	add    BYTE PTR [rax],al
   140020ec3:	add    BYTE PTR [rax],al
   140020ec5:	inc    DWORD PTR [rax]
   140020ec7:	add    al,ah
   140020ec9:	add    BYTE PTR [rax],al
   140020ecb:	add    BYTE PTR [rax],al
   140020ecd:	inc    DWORD PTR [rax]
   140020ecf:	add    al,ah
   140020ed1:	add    BYTE PTR [rax],al
   140020ed3:	add    BYTE PTR [rax],al
   140020ed5:	inc    DWORD PTR [rax]
   140020ed7:	add    al,ah
   140020ed9:	add    BYTE PTR [rax],al
   140020edb:	add    BYTE PTR [rax],al
   140020edd:	inc    DWORD PTR [rax]
   140020edf:	add    al,ah
   140020ee1:	add    BYTE PTR [rax],al
   140020ee3:	add    BYTE PTR [rax],al
   140020ee5:	inc    DWORD PTR [rax]
   140020ee7:	add    al,ah
   140020ee9:	add    BYTE PTR [rax],al
   140020eeb:	add    BYTE PTR [rax],al
   140020eed:	inc    DWORD PTR [rax]
   140020eef:	add    al,ah
   140020ef1:	add    BYTE PTR [rax],al
   140020ef3:	add    BYTE PTR [rax],al
   140020ef5:	inc    DWORD PTR [rax]
   140020ef7:	add    al,ah
   140020ef9:	add    BYTE PTR [rax],al
   140020efb:	add    BYTE PTR [rax],al
   140020efd:	inc    DWORD PTR [rax]
   140020eff:	add    al,ah
   140020f01:	add    BYTE PTR [rax],al
   140020f03:	add    BYTE PTR [rax],al
   140020f05:	inc    DWORD PTR [rax]
   140020f07:	add    al,ah
   140020f09:	add    BYTE PTR [rax],al
   140020f0b:	add    BYTE PTR [rax],al
   140020f0d:	inc    DWORD PTR [rax]
   140020f0f:	add    al,ah
   140020f11:	add    BYTE PTR [rax],al
   140020f13:	add    BYTE PTR [rax],al
   140020f15:	inc    DWORD PTR [rax]
   140020f17:	add    al,ah
   140020f19:	add    BYTE PTR [rax],al
   140020f1b:	add    BYTE PTR [rax],al
   140020f1d:	inc    DWORD PTR [rax]
   140020f1f:	add    al,ah
   140020f21:	add    BYTE PTR [rax],al
   140020f23:	add    BYTE PTR [rax],al
   140020f25:	inc    DWORD PTR [rax]
   140020f27:	add    al,ah
   140020f29:	add    BYTE PTR [rax],al
   140020f2b:	add    BYTE PTR [rax],al
   140020f2d:	inc    DWORD PTR [rax]
   140020f2f:	add    al,ah
   140020f31:	add    BYTE PTR [rax],al
   140020f33:	add    BYTE PTR [rax],al
   140020f35:	inc    DWORD PTR [rax]
   140020f37:	add    al,ah
   140020f39:	add    BYTE PTR [rax],al
   140020f3b:	add    BYTE PTR [rax],al
   140020f3d:	inc    DWORD PTR [rax]
   140020f3f:	add    al,ah
   140020f41:	add    BYTE PTR [rax],al
   140020f43:	add    BYTE PTR [rax],al
   140020f45:	inc    DWORD PTR [rax]
   140020f47:	add    al,ah
   140020f49:	add    BYTE PTR [rax],al
   140020f4b:	add    BYTE PTR [rax],al
   140020f4d:	inc    DWORD PTR [rax]
   140020f4f:	add    al,ah
   140020f51:	add    BYTE PTR [rax],al
   140020f53:	add    BYTE PTR [rax],al
   140020f55:	inc    DWORD PTR [rax]
   140020f57:	add    al,ah
   140020f59:	add    BYTE PTR [rax],al
   140020f5b:	add    BYTE PTR [rcx],al
   140020f5d:	inc    DWORD PTR [rax]
   140020f5f:	add    al,ah
   140020f61:	add    BYTE PTR [rax],al
   140020f63:	add    BYTE PTR [rbx],al
   140020f65:	inc    DWORD PTR [rax]
   140020f67:	add    al,ah
   140020f69:	add    BYTE PTR [rax],al
   140020f6b:	add    BYTE PTR [rdi],al
   140020f6d:	inc    DWORD PTR [rax]
   140020f6f:	add    al,ah
   140020f71:	add    BYTE PTR [rax],al
   140020f73:	add    BYTE PTR [rdi],cl
   140020f75:	inc    DWORD PTR [rax]
   140020f77:	add    al,ah
   140020f79:	add    BYTE PTR [rax],al
   140020f7b:	add    BYTE PTR [rdi],bl
   140020f7d:	inc    DWORD PTR [rax]
   140020f7f:	add    bh,bh
   140020f81:	add    BYTE PTR [rax],al
   140020f83:	add    BYTE PTR [rdi],bh
   140020f85:	inc    DWORD PTR [rax]
   140020f87:	add    bh,bh
   140020f89:	add    BYTE PTR [rax],al
   140020f8b:	add    BYTE PTR [rdi-0x1],bh
   140020f8e:	add    BYTE PTR [rax],al
   140020f90:	inc    DWORD PTR [rax]
   140020f92:	add    BYTE PTR [rax],al
   140020f94:	(bad)  
   140020f95:	inc    DWORD PTR [rax]
   140020f97:	add    bh,bh
   140020f99:	add    BYTE PTR [rax],al
   140020f9b:	add    edi,edi
   140020f9d:	inc    DWORD PTR [rax]
   140020f9f:	add    bh,bh
   140020fa1:	(bad)  
   140020fa2:	(bad)  
   140020fa3:	(bad)  
   140020fa4:	(bad)  
   140020fa5:	inc    DWORD PTR [rax]
   140020fa7:	add    bh,bh
   140020fa9:	(bad)  
   140020faa:	(bad)  
   140020fab:	(bad)  
   140020fac:	(bad)  
   140020fad:	inc    DWORD PTR [rax]
   140020faf:	add    bh,bh
   140020fb1:	(bad)  
   140020fb2:	(bad)  
   140020fb3:	(bad)  
   140020fb4:	(bad)  
   140020fb5:	inc    DWORD PTR [rax]
   140020fb7:	add    bh,bh
   140020fb9:	(bad)  
   140020fba:	(bad)  
   140020fbb:	(bad)  
   140020fbc:	(bad)  
   140020fbd:	inc    DWORD PTR [rax]
   140020fbf:	add    bh,bh
   140020fc1:	(bad)  
   140020fc2:	(bad)  
   140020fc3:	(bad)  
   140020fc4:	(bad)  
   140020fc5:	inc    DWORD PTR [rax]
   140020fc7:	add    BYTE PTR [rax],ch
   140020fc9:	add    BYTE PTR [rax],al
   140020fcb:	add    BYTE PTR [rax],dh
   140020fcd:	add    BYTE PTR [rax],al
   140020fcf:	add    BYTE PTR [rax+0x0],ah
   140020fd2:	add    BYTE PTR [rax],al
   140020fd4:	add    DWORD PTR [rax],eax
   140020fd6:	or     BYTE PTR [rax],al
   140020fd8:	add    BYTE PTR [rax],al
   140020fda:	add    BYTE PTR [rax],al
   140020fdc:	add    BYTE PTR [rcx],cl
	...
   140020fe6:	add    BYTE PTR [rax],al
   140020fe8:	add    BYTE PTR [rcx],al
   140020fea:	add    BYTE PTR [rax],al
   140020fec:	add    BYTE PTR [rcx],al
   140020fee:	add    BYTE PTR [rax],al
   140020ff0:	add    BYTE PTR [rax],al
   140020ff2:	add    BYTE PTR [rax],al
   140020ff4:	(bad)  
   140020ff5:	jle    0x140020ff7
   140020ff7:	add    bh,bh
   140020ff9:	test   BYTE PTR [rsi],cl
   140020ffb:	add    bh,bh
   140020ffd:	xchg   DWORD PTR [rdx],edx
   140020fff:	add    BYTE PTR [rsp+riz*4-0x5965ff82],dl
   140021006:	jp     0x140021008
   140021008:	xchg   edi,eax
   140021009:	mov    esi,0xaebd0072
   14002100e:	(bad)  
   14002100f:	add    BYTE PTR [rax-0x4aff9951],bh
   140021015:	scas   al,BYTE PTR es:[rdi]
   140021016:	push   0x63b2b900
   14002101b:	add    BYTE PTR [rcx-0x58ff9d46],bh
   140021021:	lods   al,BYTE PTR ds:[rsi]
   140021022:	jae    0x140021024
   140021024:	movabs ds:0xd6004fbcd30075ae,al
   14002102d:	mov    esp,0xb9dd004f
   140021032:	rex.WXB add r9b,bl
   140021035:	mov    edx,0xbadc004d
   14002103a:	rex.WR add dl,r9b
   14002103d:	mov    edi,0xbece0053
   140021042:	push   rcx
   140021043:	add    ch,al
   140021045:	mov    dl,0x5c
   140021047:	add    bh,al
   140021049:	mov    ah,0x5c
   14002104b:	add    dl,dl
   14002104d:	mov    esi,0xb6fb0050
   140021052:	jb     0x140021054
   140021054:	std    
   140021055:	mov    ecx,0xbaff0077
   14002105a:	js     0x14002105c
   14002105c:	(bad)  
   14002105d:	mov    esp,0xc8af007b
   140021062:	pop    rsi
   140021063:	add    BYTE PTR [rdi-0x4cffa43b],dh
   140021069:	(bad)  
   14002106a:	pop    rbp
   14002106b:	add    BYTE PTR [rsi-0x45ffa33a],dh
   140021071:	(bad)
   140021074:	mov    esp,0xb10059c4
   140021079:	enter  0x5f,0x9a
   14002107d:	iret   
   14002107e:	add    BYTE PTR [esi-0x64ff9933],bl
   140021085:	iret   
   140021086:	push   0x68cf9c00
   14002108b:	add    BYTE PTR [rdi-0x77ff8d39],cl
   140021091:	(bad)  
   140021092:	jbe    0x140021094
   140021094:	mov    ah,al
   140021096:	jns    0x140021098
   140021098:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021099:	retf   
   14002109a:	(bad)  
   14002109b:	add    BYTE PTR [rbx-0x5aff9c34],ah
   1400210a1:	int3   
   1400210a2:	movsxd eax,DWORD PTR [rax]
   1400210a4:	movabs eax,ds:0xa90064cca50064cc
   1400210ad:	retf   0x61
   1400210b0:	lods   eax,DWORD PTR ds:[rsi]
   1400210b1:	leave  
   1400210b2:	(bad)  
   1400210b3:	add    BYTE PTR [rbp-0x3dff963f],ah
   1400210b9:	rcl    DWORD PTR [rsi+0x0],0xc6
   1400210bd:	rcl    BYTE PTR [rax+rax*1-0x38],0xc0
   1400210c2:	push   rsp
   1400210c3:	add    al,al
   1400210c5:	ret    
   1400210c6:	pop    rax
   1400210c7:	add    BYTE PTR [rcx],dl
   1400210c9:	je     0x14002109a
   1400210cb:	add    BYTE PTR [rbx],al
   1400210cd:	jno    0x1400210a6
   1400210cf:	add    BYTE PTR [rip+0xa00d671],al        # 0x14a02e746
   1400210d5:	jbe    0x1400210aa
   1400210d7:	add    BYTE PTR [rsi*2+0x730a00d2],cl
   1400210de:	(bad)  
   1400210df:	add    BYTE PTR [rip+0xdb74],al        # 0x14002ec59
   1400210e5:	jo     0x1400210c3
   1400210e7:	add    BYTE PTR [rax],al
   1400210e9:	jae    0x1400210cb
   1400210eb:	add    BYTE PTR [rax],al
   1400210ed:	je     0x1400210cf
   1400210ef:	add    BYTE PTR [rax],al
   1400210f1:	ja     0x1400210d9
   1400210f3:	add    BYTE PTR [rax],al
   1400210f5:	js     0x1400210de
   1400210f7:	add    BYTE PTR [rsi],al
   1400210f9:	jl     0x1400210e1
   1400210fb:	add    BYTE PTR [rax],al
   1400210fd:	jns    0x1400210e9
   1400210ff:	add    BYTE PTR [rax],al
   140021101:	jp     0x1400210ef
   140021103:	add    BYTE PTR [rax],al
   140021105:	jl     0x1400210f6
   140021107:	add    BYTE PTR [rax],al
   140021109:	jge    0x1400210fb
   14002110b:	add    BYTE PTR [rax],al
   14002110d:	jg     0x140021103
   14002110f:	add    BYTE PTR [rsp+rcx*4],bh
   140021112:	mov    ch,0x0
   140021114:	xor    edx,DWORD PTR [rcx-0x6dcaff49]
   14002111a:	mov    dh,0x0
   14002111c:	cmp    DWORD PTR [rax-0x68c4ff4b],edx
   140021122:	mov    ch,0x0
   140021124:	outs   dx,DWORD PTR ds:[rsi]
   140021125:	xchg   esi,eax
   140021126:	xchg   esi,eax
   140021127:	add    BYTE PTR [rbp-0x6a],ch
   14002112a:	cwde   
   14002112b:	add    BYTE PTR [rsi-0x45],dh
   14002112e:	xchg   DWORD PTR [rax],eax
   140021130:	jnp    0x1400210f0
   140021132:	add    DWORD PTR [rax],0x72
   140021135:	mov    dh,0x89
   140021137:	add    BYTE PTR [rsi+rsi*4-0x78],dh
   14002113b:	add    BYTE PTR [rdx-0x47],dh
   14002113e:	mov    eax,DWORD PTR [rax]
   140021140:	data16 stos BYTE PTR es:[rdi],al
   140021142:	fwait
   140021143:	add    BYTE PTR [rbx-0x75],cl
   140021146:	scas   al,BYTE PTR es:[rdi]
   140021147:	add    BYTE PTR [rbp-0x75],cl
   14002114a:	lods   al,BYTE PTR ds:[rsi]
   14002114b:	add    BYTE PTR [rsi-0x69],bl
   14002114e:	movabs al,ds:0xa9905700a49a5400
   140021157:	add    BYTE PTR [rdi-0x76],al
   14002115a:	mov    al,0x0
   14002115c:	rex.RX popf 
   14002115e:	mov    bl,0x0
   140021160:	rex.XB sahf 
   140021162:	mov    ah,0x0
   140021164:	push   rax
   140021165:	pushf  
   140021166:	mov    al,0x0
   140021168:	rex.WX movabs al,ds:0xa95a00a4a14d00a7
   140021172:	movabs al,ds:0xda801700dd800e00
   14002117b:	add    BYTE PTR [rdi],al
   14002117d:	sub    ah,0x0
   140021180:	(bad)  
   140021181:	test   eax,esp
   140021183:	add    BYTE PTR [rax],al
   140021185:	xor    esi,0xf8820000
   14002118b:	add    BYTE PTR [rax],al
   14002118d:	test   dl,bh
   14002118f:	add    BYTE PTR [rax],al
   140021191:	xchg   dh,bh
   140021193:	add    BYTE PTR [rax],al
   140021195:	mov    bh,bh
   140021197:	add    BYTE PTR [rcx],cl
   140021199:	mov    edi,edi
   14002119b:	add    BYTE PTR [rcx],cl
   14002119d:	mov    edi,?
   14002119f:	add    BYTE PTR [rdi],cl
   1400211a1:	nop
   1400211a2:	inc    DWORD PTR [rax]
   1400211a4:	rex.W stos BYTE PTR es:[rdi],al
   1400211a6:	inc    DWORD PTR [rax]
   1400211a8:	jb     0x140021168
   1400211aa:	inc    DWORD PTR [rax]
   1400211ac:	mov    cs,WORD PTR [rsi-0x7070ff72]
   1400211b2:	nop
   1400211b3:	add    BYTE PTR [rax-0x69ff6f70],dl
   1400211b9:	xchg   esi,eax
   1400211ba:	xchg   esi,eax
   1400211bb:	add    BYTE PTR [rax-0x62ff7f44],al
   1400211c1:	lahf   
   1400211c2:	movabs al,ds:0xa6a6a600a1a1a100
   1400211cb:	add    BYTE PTR [rdi-0x56ff5659],ah
   1400211d1:	test   eax,0xb3b300a9
   1400211d6:	mov    bl,0x0
   1400211d8:	mov    ch,0xb5
   1400211da:	mov    ch,0x0
   1400211dc:	mov    ecx,0xbd00b9b8
   1400211e1:	mov    ebp,0xdebd00bd
   1400211e6:	xchg   edi,eax
   1400211e7:	add    BYTE PTR [rdx-0x2eff6722],bh
   1400211ed:	xlat   BYTE PTR ds:[rbx]
   1400211ee:	mov    es,WORD PTR [rax]
   1400211f0:	(bad)  
   1400211f1:	(bad)  
   1400211f2:	mov    WORD PTR [rax],es
   1400211f4:	(bad)  
   1400211f6:	mov    BYTE PTR [rax],al
   1400211f8:	fcmovbe st,st(4)
   1400211fa:	mov    al,BYTE PTR [rax]
   1400211fc:	rcr    al,1
   1400211fe:	pop    QWORD PTR [rax]
   140021200:	(bad)  
   140021201:	ficom  DWORD PTR [rdx-0x6b243b00]
   140021207:	add    cl,al
   140021209:	fcom   QWORD PTR [rbp-0x6b233c00]
   14002120f:	add    dl,cl
   140021211:	fst    DWORD PTR [rcx-0x6f273400]
   140021217:	add    bl,ah
   140021219:	rol    BYTE PTR [rdi-0x7a2f1b00],cl
   14002121f:	add    al,ch
   140021221:	rol    BYTE PTR [rbp-0x692a1300],1
   140021227:	add    ah,ah
   140021229:	fcomp  DWORD PTR [rax+rax*1+0xa5dfcc]
   140021230:	rcr    ch,1
   140021232:	movabs eax,ds:0xffca8d00ffc68500
   14002123b:	add    BYTE PTR [rcx-0x63ff0030],bl
   140021241:	sar    edi,1
   140021243:	add    BYTE PTR [rbp-0x3fff002b],ah
   140021249:	rol    al,0x0
   14002124c:	mov    dh,0xc6
   14002124f:	add    cl,cl
   140021251:	leave  
   140021252:	leave  
   140021253:	add    ah,cl
   140021255:	int3   
   140021256:	int3   
   140021257:	add    ah,al
   140021259:	(bad)  
   14002125a:	xlat   BYTE PTR ds:[rbx]
   14002125b:	add    dl,dl
   14002125d:	rcl    bl,cl
   14002125f:	add    dh,dl
   140021261:	(bad)  
   140021262:	(bad)  
   140021263:	add    dh,dl
   140021265:	xlat   BYTE PTR ds:[rbx]
   140021266:	fadd   DWORD PTR [rax]
   140021268:	rcr    ebx,cl
   14002126a:	fld    QWORD PTR [rax]
   14002126c:	(bad)  
   14002126e:	fld    DWORD PTR [rax]
   140021270:	fstp   st(5)
   140021272:	fiadd  WORD PTR [rax]
   140021274:	jrcxz  0x140021259
   140021276:	jrcxz  0x140021278
   140021278:	in     al,0xe1
   14002127a:	loopne 0x14002127c
   14002127c:	jrcxz  0x140021261
   14002127e:	in     al,0x0
   140021280:	in     eax,0xe5
   140021282:	out    0x0,al
   140021284:	(bad)  
   140021285:	(bad)  
   140021286:	(bad)  
   140021287:	add    bl,ch
   140021289:	jmp    0x140021277
   14002128b:	add    dh,ch
   14002128d:	jmp    0x14002127b
   14002128f:	add    ch,ch
   140021291:	in     eax,dx
   140021292:	out    dx,al
   140021293:	add    ah,ah
   140021295:	repz inc DWORD PTR [rax]
   140021298:	(bad)  
   140021299:	cmc    
   14002129a:	inc    DWORD PTR [rax]
   14002129c:	in     eax,dx
   14002129d:	idiv   edi
   14002129f:	add    cl,dh
   1400212a1:	icebp  
   1400212a2:	icebp  
   1400212a3:	add    ah,dh
   1400212a5:	repnz icebp 
   1400212a7:	add    ah,dh
   1400212a9:	hlt    
   1400212aa:	repz add bl,dh
   1400212ad:	repz hlt 
   1400212af:	add    bl,dh
   1400212b1:	hlt    
   1400212b2:	cmc    
   1400212b3:	add    ch,dh
   1400212b5:	cmc    
   1400212b6:	test   BYTE PTR [rax],0xf6
   1400212b9:	idiv   al
   1400212bb:	add    dh,dh
   1400212bd:	clc    
   1400212be:	stc    
   1400212bf:	add    al,bh
   1400212c1:	clc    
   1400212c2:	stc    
   1400212c3:	add    dl,bh
   1400212c5:	sti    
   1400212c6:	cld    
   1400212c7:	add    bl,bh
   1400212c9:	cld    
   1400212ca:	std    
   1400212cb:	add    dh,bh
   1400212cd:	(bad)  
   1400212ce:	inc    BYTE PTR [rax]
	...
   1400213ec:	(bad)  
   1400213ed:	(bad)  
   1400213ee:	inc    DWORD PTR [rax]
	...
   140021428:	outs   dx,DWORD PTR ds:[rsi]
   140021429:	outs   dx,DWORD PTR ds:[rsi]
   14002142a:	outs   dx,DWORD PTR ds:[rsi]
   14002142b:	outs   dx,DWORD PTR ds:[rsi]
   14002142c:	outs   dx,DWORD PTR ds:[rsi]
   14002142d:	outs   dx,DWORD PTR ds:[rsi]
   14002142e:	outs   dx,DWORD PTR ds:[rsi]
   14002142f:	outs   dx,DWORD PTR ds:[rsi]
   140021430:	outs   dx,DWORD PTR ds:[rsi]
   140021431:	outs   dx,DWORD PTR ds:[rsi]
   140021432:	outs   dx,DWORD PTR ds:[rsi]
   140021433:	outs   dx,DWORD PTR ds:[rsi]
   140021434:	outs   dx,DWORD PTR ds:[rsi]
   140021435:	outs   dx,DWORD PTR ds:[rsi]
   140021436:	outs   dx,DWORD PTR ds:[rsi]
   140021437:	outs   dx,DWORD PTR ds:[rsi]
   140021438:	outs   dx,DWORD PTR ds:[rsi]
   140021439:	outs   dx,DWORD PTR ds:[rsi]
   14002143a:	outs   dx,DWORD PTR ds:[rsi]
   14002143b:	outs   dx,DWORD PTR ds:[rsi]
   14002143c:	outs   dx,DWORD PTR ds:[rsi]
   14002143d:	outs   dx,DWORD PTR ds:[rsi]
   14002143e:	outs   dx,DWORD PTR ds:[rsi]
   14002143f:	outs   dx,DWORD PTR ds:[rsi]
   140021440:	outs   dx,DWORD PTR ds:[rsi]
   140021441:	outs   dx,DWORD PTR ds:[rsi]
   140021442:	outs   dx,DWORD PTR ds:[rsi]
   140021443:	outs   dx,DWORD PTR ds:[rsi]
   140021444:	outs   dx,DWORD PTR ds:[rsi]
   140021445:	outs   dx,DWORD PTR ds:[rsi]
   140021446:	outs   dx,DWORD PTR ds:[rsi]
   140021447:	outs   dx,DWORD PTR ds:[rsi]
	...
   140021458:	fwait
   140021459:	scas   eax,DWORD PTR es:[rdi]
   14002145a:	test   al,0xa8
   14002145c:	test   al,0xa8
   14002145e:	test   al,0xa8
   140021460:	test   al,0xa8
   140021462:	test   al,0xa8
   140021464:	test   al,0xa8
   140021466:	test   al,0xa8
   140021468:	test   al,0xa8
   14002146a:	test   al,0xa8
   14002146c:	test   al,0xa8
   14002146e:	test   al,0xa8
   140021470:	test   al,0xa8
   140021472:	test   al,0xa8
   140021474:	test   al,0xa8
   140021476:	mov    bh,0x6f
	...
   140021488:	fwait
   140021489:	mov    bh,0xb7
   14002148b:	mov    bh,0xb7
   14002148d:	mov    bh,0xb7
   14002148f:	mov    bh,0xb7
   140021491:	mov    bh,0xb7
   140021493:	mov    bh,0xb7
   140021495:	mov    bh,0xb7
   140021497:	mov    bh,0xb7
   140021499:	mov    bh,0xb7
   14002149b:	mov    bh,0xb7
   14002149d:	mov    bh,0xb7
   14002149f:	mov    bh,0xb7
   1400214a1:	mov    bh,0xb7
   1400214a3:	mov    bh,0xb7
   1400214a5:	mov    bh,0xb7
   1400214a7:	jno    0x1400214a9
	...
   1400214b5:	add    BYTE PTR [rax],al
   1400214b7:	add    BYTE PTR [rbx-0x4d4d4c49],bl
   1400214bd:	mov    dl,0xb2
   1400214bf:	mov    dl,0xb2
   1400214c1:	mov    dl,0xb2
   1400214c3:	mov    dl,0xb2
   1400214c5:	scas   eax,DWORD PTR es:[rdi]
   1400214c6:	mov    dl,0xaf
   1400214c8:	mov    dl,0xaf
   1400214ca:	mov    dl,0xaf
   1400214cc:	mov    dl,0xaf
   1400214ce:	mov    dl,0xaf
   1400214d0:	scas   eax,DWORD PTR es:[rdi]
   1400214d1:	scas   eax,DWORD PTR es:[rdi]
   1400214d2:	scas   eax,DWORD PTR es:[rdi]
   1400214d3:	scas   eax,DWORD PTR es:[rdi]
   1400214d4:	scas   eax,DWORD PTR es:[rdi]
   1400214d5:	scas   eax,DWORD PTR es:[rdi]
   1400214d6:	mov    bh,0x71
	...
   1400214e8:	fwait
   1400214e9:	mov    bh,0xb3
   1400214eb:	mov    bl,0xb2
   1400214ed:	mov    dl,0xb2
   1400214ef:	mov    dl,0xb2
   1400214f1:	mov    dl,0xb2
   1400214f3:	mov    dl,0xb3
   1400214f5:	mov    dl,0xb2
   1400214f7:	mov    dl,0xb2
   1400214f9:	mov    dl,0xb2
   1400214fb:	mov    dl,0xb2
   1400214fd:	mov    dl,0xb2
   1400214ff:	mov    bl,0xb3
   140021501:	mov    bl,0xb2
   140021503:	mov    dl,0xaf
   140021505:	scas   eax,DWORD PTR es:[rdi]
   140021506:	mov    bh,0x71
	...
   140021518:	fwait
   140021519:	mov    bh,0xb3
   14002151b:	mov    bl,0xb2
   14002151d:	mov    dl,0xb2
   14002151f:	mov    dl,0xb2
   140021521:	mov    dl,0xb2
   140021523:	mov    dl,0xb2
   140021525:	mov    dl,0xaf
   140021527:	mov    bl,0xaf
   140021529:	mov    dl,0xaf
   14002152b:	mov    dl,0xaf
   14002152d:	mov    dl,0xaf
   14002152f:	mov    dl,0xaf
   140021531:	mov    dl,0xaf
   140021533:	mov    dl,0xaf
   140021535:	scas   eax,DWORD PTR es:[rdi]
   140021536:	mov    bh,0x71
	...
   140021548:	fwait
   140021549:	mov    bh,0xb3
   14002154b:	mov    bl,0xb3
   14002154d:	mov    bl,0xb2
   14002154f:	mov    dl,0xb2
   140021551:	mov    dl,0xb2
   140021553:	mov    dl,0xb2
   140021555:	mov    bl,0xb3
   140021557:	mov    bl,0xb2
   140021559:	mov    dl,0xb2
   14002155b:	mov    dl,0xb2
   14002155d:	mov    dl,0xb2
   14002155f:	mov    dl,0xb2
   140021561:	mov    dl,0xb2
   140021563:	mov    dl,0xb2
   140021565:	scas   eax,DWORD PTR es:[rdi]
   140021566:	mov    bh,0x71
	...
   140021578:	fwait
   140021579:	mov    bh,0xb7
   14002157b:	scas   eax,DWORD PTR es:[rdi]
   14002157c:	mov    bh,0xaf
   14002157e:	mov    bl,0xb3
   140021580:	mov    dl,0xb2
   140021582:	mov    dl,0xb2
   140021584:	mov    dl,0xb2
   140021586:	mov    dl,0xb2
   140021588:	mov    dl,0xb2
   14002158a:	scas   eax,DWORD PTR es:[rdi]
   14002158b:	mov    dl,0xaf
   14002158d:	mov    dl,0xaf
   14002158f:	mov    dl,0xaf
   140021591:	mov    dl,0xaf
   140021593:	mov    dl,0xaf
   140021595:	mov    dl,0xb7
   140021597:	jno    0x140021599
	...
   1400215a5:	add    BYTE PTR [rax],al
   1400215a7:	add    BYTE PTR [rbx-0x50484d49],bl
   1400215ad:	mov    bl,0xb3
   1400215af:	mov    bl,0xb3
   1400215b1:	mov    bl,0xb2
   1400215b3:	mov    dl,0xb2
   1400215b5:	mov    dl,0xb2
   1400215b7:	mov    dl,0xb2
   1400215b9:	mov    bl,0xb3
   1400215bb:	mov    bl,0xb2
   1400215bd:	mov    dl,0xb2
   1400215bf:	mov    dl,0xb2
   1400215c1:	mov    dl,0xb2
   1400215c3:	mov    dl,0xb2
   1400215c5:	scas   eax,DWORD PTR es:[rdi]
   1400215c6:	mov    bh,0x71
	...
   1400215d8:	fwait
   1400215d9:	mov    bh,0xb2
   1400215db:	mov    dl,0xb7
   1400215dd:	mov    dl,0xb3
   1400215df:	mov    bl,0xb3
   1400215e1:	mov    bl,0xb3
   1400215e3:	mov    dl,0xb2
   1400215e5:	mov    dl,0xb2
   1400215e7:	mov    dl,0xb2
   1400215e9:	mov    dl,0xb2
   1400215eb:	mov    dl,0xb2
   1400215ed:	scas   eax,DWORD PTR es:[rdi]
   1400215ee:	mov    dl,0xaf
   1400215f0:	mov    dl,0xaf
   1400215f2:	mov    dl,0xaf
   1400215f4:	mov    dl,0xaf
   1400215f6:	mov    bh,0x71
	...
   140021608:	fwait
   140021609:	mov    bh,0xb7
   14002160b:	scas   eax,DWORD PTR es:[rdi]
   14002160c:	mov    dl,0xb3
   14002160e:	mov    bl,0xb3
   140021610:	mov    bl,0xb3
   140021612:	mov    bl,0xb3
   140021614:	mov    dl,0xb2
   140021616:	mov    dl,0xb2
   140021618:	mov    dl,0xb2
   14002161a:	mov    dl,0xb2
   14002161c:	mov    bl,0xb3
   14002161e:	mov    dl,0xb2
   140021620:	mov    dl,0xb2
   140021622:	mov    dl,0xb2
   140021624:	mov    dl,0xaf
   140021626:	mov    bh,0x71
	...
   140021638:	fwait
   140021639:	mov    bh,0xb2
   14002163b:	mov    bh,0xb2
   14002163d:	mov    bh,0xaf
   14002163f:	mov    bh,0xaf
   140021641:	mov    bh,0xaf
   140021643:	mov    bl,0xb3
   140021645:	mov    dl,0xb2
   140021647:	mov    dl,0xb2
   140021649:	mov    dl,0xb2
   14002164b:	mov    dl,0xb2
   14002164d:	mov    dl,0xb2
   14002164f:	scas   eax,DWORD PTR es:[rdi]
   140021650:	mov    dl,0xaf
   140021652:	mov    dl,0xaf
   140021654:	mov    bl,0xaf
   140021656:	mov    bh,0x71
	...
   140021668:	fwait
   140021669:	mov    bh,0xb3
   14002166b:	mov    bl,0xb3
   14002166d:	mov    dl,0xb7
   14002166f:	scas   eax,DWORD PTR es:[rdi]
   140021670:	mov    bh,0xaf
   140021672:	mov    bl,0xb3
   140021674:	mov    bl,0xb3
   140021676:	mov    dl,0xb2
   140021678:	mov    dl,0xb2
   14002167a:	mov    dl,0xb2
   14002167c:	mov    dl,0xb2
   14002167e:	mov    bl,0xb3
   140021680:	mov    dl,0xb2
   140021682:	mov    dl,0xb2
   140021684:	mov    dl,0xaf
   140021686:	mov    bh,0x71
	...
   140021698:	fwait
   140021699:	mov    bh,0xb7
   14002169b:	mov    dl,0xb7
   14002169d:	scas   eax,DWORD PTR es:[rdi]
   14002169e:	mov    dl,0xb2
   1400216a0:	mov    dl,0xb7
   1400216a2:	mov    dl,0xb3
   1400216a4:	mov    bl,0xb3
   1400216a6:	mov    bl,0xb2
   1400216a8:	mov    dl,0xb2
   1400216aa:	mov    dl,0xb2
   1400216ac:	mov    dl,0xb2
   1400216ae:	mov    dl,0xb2
   1400216b0:	mov    dl,0xaf
   1400216b2:	mov    dl,0xaf
   1400216b4:	mov    bl,0xaf
   1400216b6:	mov    bh,0x71
	...
   1400216c0:	add    BYTE PTR [rax],al
   1400216c2:	add    BYTE PTR [rdx],bl
   1400216c4:	add    al,BYTE PTR [rcx]
   1400216c6:	add    DWORD PTR [rcx],eax
   1400216c8:	add    DWORD PTR [rcx],eax
   1400216ca:	add    DWORD PTR [rcx],eax
   1400216cc:	add    DWORD PTR [rcx],eax
   1400216ce:	add    DWORD PTR [rcx],eax
   1400216d0:	add    DWORD PTR [rcx],eax
   1400216d2:	add    DWORD PTR [rcx],eax
   1400216d4:	add    DWORD PTR [rcx],eax
   1400216d6:	add    DWORD PTR [rcx],eax
   1400216d8:	add    DWORD PTR [rdx],eax
   1400216da:	sbb    BYTE PTR [rdx-0x4d4d4d4e],dh
   1400216e0:	mov    bl,0xb3
   1400216e2:	mov    bl,0xb2
   1400216e4:	mov    dl,0xaf
   1400216e6:	mov    bh,0x71
	...
   1400216f0:	add    BYTE PTR [rax],al
   1400216f2:	add    BYTE PTR [rdx],al
   1400216f4:	(bad)  
   1400216f5:	jle    0x140021775
   1400216f7:	jle    0x140021777
   1400216f9:	jle    0x140021779
   1400216fb:	jle    0x14002177b
   1400216fd:	jle    0x14002177d
   1400216ff:	jge    0x14002177e
   140021701:	jge    0x140021689
   140021703:	xchg   BYTE PTR [rax+0x7f7f8888],cl
   140021709:	mov    es,WORD PTR [rdx]
   14002170b:	scas   eax,DWORD PTR es:[rdi]
   14002170c:	mov    bh,0xaf
   14002170e:	mov    bl,0xb2
   140021710:	mov    dl,0xb2
   140021712:	mov    dl,0xb2
   140021714:	mov    dl,0xb2
   140021716:	mov    bh,0x71
	...
   140021720:	add    BYTE PTR [rax],al
   140021722:	add    BYTE PTR [rcx],al
   140021724:	jle    0x14002174b
   140021726:	and    eax,0x25252525
   14002172b:	and    eax,0x51515025
   140021730:	jae    0x140021760
   140021732:	(bad)  
   140021733:	(bad)  
   140021734:	and    bl,BYTE PTR [rdi]
   140021736:	and    BYTE PTR [rip+0xffffffffb3018113],dh        # 0xf303984f
   14002173c:	scas   eax,DWORD PTR es:[rdi]
   14002173d:	mov    bh,0xaf
   14002173f:	mov    bl,0xb2
   140021741:	mov    dl,0xb2
   140021743:	mov    dl,0xb2
   140021745:	mov    dl,0xb7
   140021747:	jno    0x140021749
	...
   140021751:	add    BYTE PTR [rax],al
   140021753:	add    DWORD PTR [rsi+0x25],edi
   140021756:	and    esp,DWORD PTR [rbx]
   140021758:	and    esp,DWORD PTR [rbx]
   14002175a:	sub    BYTE PTR [rcx+0x39],cl
   14002175d:	cmp    eax,0x393d3e3e
   140021762:	rex.WXB (bad) 
   140021764:	(bad)  
   140021765:	(bad)  
   140021766:	and    BYTE PTR [rbx],dh
   140021768:	adc    eax,DWORD PTR [rcx-0x4d4c4cff]
   14002176e:	mov    bl,0xb2
   140021770:	mov    dl,0xb2
   140021772:	mov    dl,0xb2
   140021774:	mov    dl,0xb2
   140021776:	mov    bh,0x71
	...
   140021780:	add    BYTE PTR [rax],al
   140021782:	add    BYTE PTR [rcx],al
   140021784:	jle    0x1400217ab
   140021786:	and    esp,DWORD PTR [rbx]
   140021788:	and    ebx,DWORD PTR [rsi+0x37]
   14002178b:	rex.R
   14002178c:	addr32 imul ebp,DWORD PTR [ecx+0x69],0x58374467
   140021795:	and    BYTE PTR [rbx],dh
   140021797:	xor    al,0x17
   140021799:	mov    WORD PTR [rcx],es
   14002179b:	mov    bl,0xb3
   14002179d:	mov    bl,0xb2
   14002179f:	mov    dl,0xb2
   1400217a1:	mov    dl,0xb2
   1400217a3:	mov    dl,0xb2
   1400217a5:	mov    dl,0xb7
   1400217a7:	jno    0x1400217a9
	...
   1400217b1:	add    BYTE PTR [rax],al
   1400217b3:	add    DWORD PTR [rsi+0x25],edi
   1400217b6:	and    esp,DWORD PTR [rbx]
   1400217b8:	rex.WB
   1400217b9:	imul   ebp,DWORD PTR ds:[ebx+0x69],0x69696969
   1400217c2:	imul   esp,DWORD PTR [rsi+0x41],0x11133348
   1400217c9:	add    DWORD PTR [rcx],0xb3b3b3b3
   1400217cf:	mov    dl,0xb2
   1400217d1:	mov    dl,0xb2
   1400217d3:	mov    dl,0xb2
   1400217d5:	mov    dl,0xb7
   1400217d7:	jno    0x1400217d9
	...
   1400217e1:	add    BYTE PTR [rax],al
   1400217e3:	add    DWORD PTR [rsi+0x25],edi
   1400217e6:	and    ebx,DWORD PTR [rsi+0x44]
   1400217e9:	imul   edx,DWORD PTR [ecx+0x69696dab],0x69696969
   1400217f4:	addr32 rex.R push rdi
   1400217f7:	movups XMMWORD PTR [rcx+rax*1-0x50485049],xmm1
   1400217ff:	mov    bl,0xb3
   140021801:	mov    bl,0xb2
   140021803:	mov    dl,0xb2
   140021805:	mov    dl,0xb7
   140021807:	jno    0x140021809
	...
   140021811:	add    BYTE PTR [rax],al
   140021813:	add    DWORD PTR [rsi+0x25],edi
   140021816:	sub    BYTE PTR [rip+0xffffffff95696967],bh        # 0xd56b8183
   14002181c:	mov    bh,0xb7
   14002181e:	xchg   ebx,eax
   14002181f:	ins    BYTE PTR es:[rdi],dx
   140021820:	imul   ebp,DWORD PTR [rcx+0x69],0x37666969
   140021827:	or     dl,BYTE PTR [rcx]
   140021829:	mov    WORD PTR [rcx],es
   14002182b:	mov    dl,0xb7
   14002182d:	scas   eax,DWORD PTR es:[rdi]
   14002182e:	mov    bl,0xb3
   140021830:	mov    bl,0xb3
   140021832:	mov    bl,0xb2
   140021834:	mov    dl,0xb2
   140021836:	mov    bh,0x71
	...
   140021840:	add    BYTE PTR [rax],al
   140021842:	add    BYTE PTR [rcx],al
   140021844:	jle    0x14002186b
   140021846:	rex.WR
   140021847:	rex.RX imul r13d,DWORD PTR [rcx+0x69],0xb7b7b795
   14002184f:	test   eax,0x6969696d
   140021854:	imul   ebp,DWORD PTR [rcx+0x44],0x18c105a
   14002185b:	mov    dl,0xb2
   14002185d:	mov    bh,0xb2
   14002185f:	mov    bl,0xb3
   140021861:	mov    bl,0xb3
   140021863:	mov    bl,0xb3
   140021865:	scas   eax,DWORD PTR es:[rdi]
   140021866:	mov    bh,0x71
	...
   140021870:	add    BYTE PTR [rax],al
   140021872:	add    BYTE PTR [rcx],al
   140021874:	jle    0x14002189b
   140021876:	(bad)  
   140021877:	addr32 imul ebp,DWORD PTR [ecx-0x6b],0xb7b7b7b7
   140021880:	mov    bh,0x93
   140021882:	ins    BYTE PTR es:[rdi],dx
   140021883:	imul   ebp,DWORD PTR [rcx+0x69],0x8c113667
   14002188a:	add    DWORD PTR [rdi-0x50484d51],esi
   140021890:	mov    bh,0xaf
   140021892:	mov    bl,0xb3
   140021894:	mov    bh,0xaf
   140021896:	mov    bh,0x71
	...
   1400218a0:	add    BYTE PTR [rax],al
   1400218a2:	add    BYTE PTR [rcx],al
   1400218a4:	jle    0x1400218ce
   1400218a6:	imul   r13d,DWORD PTR [rcx+0x69],0xb7b79569
   1400218ae:	mov    bh,0xb7
   1400218b0:	mov    bh,0xb7
   1400218b2:	test   eax,0x6969696d
   1400218b7:	cmp    eax,0xb3018c0a
   1400218bc:	mov    bh,0xb2
   1400218be:	mov    dl,0xb7
   1400218c0:	scas   eax,DWORD PTR es:[rdi]
   1400218c1:	mov    bh,0xb2
   1400218c3:	mov    dl,0xb2
   1400218c5:	mov    bl,0xb7
   1400218c7:	jno    0x1400218c9
	...
   1400218d1:	add    BYTE PTR [rax],al
   1400218d3:	add    DWORD PTR [rsi+0x4f],edi
   1400218d6:	imul   r13d,DWORD PTR [rcx+0x69],0xb7b79569
   1400218de:	mov    bh,0xb7
   1400218e0:	mov    bh,0xb7
   1400218e2:	mov    bh,0xb7
   1400218e4:	outs   dx,BYTE PTR ds:[rsi]
   1400218e5:	imul   ebp,DWORD PTR [rcx+0x3e],0xb7018c05
   1400218ec:	scas   eax,DWORD PTR es:[rdi]
   1400218ed:	mov    bl,0xb3
   1400218ef:	mov    dl,0xb2
   1400218f1:	mov    dl,0xb7
   1400218f3:	scas   eax,DWORD PTR es:[rdi]
   1400218f4:	mov    bh,0xaf
   1400218f6:	mov    bh,0x71
	...
   140021900:	add    BYTE PTR [rax],al
   140021902:	add    BYTE PTR [rcx],al
   140021904:	jle    0x140021959
   140021906:	rex.RX
   140021907:	imul   ebp,DWORD PTR [ecx+0x69],0xb7b7b795
   14002190f:	mov    bh,0xb7
   140021911:	mov    bh,0xb7
   140021913:	mov    bh,0x92
   140021915:	imul   ebp,DWORD PTR [rcx+0x3e],0xb2018c04
   14002191c:	mov    bh,0xb3
   14002191e:	mov    bh,0xb2
   140021920:	mov    bh,0xaf
   140021922:	mov    dl,0xb7
   140021924:	scas   eax,DWORD PTR es:[rdi]
   140021925:	mov    bl,0xb7
   140021927:	outs   dx,DWORD PTR ds:[rsi]
	...
   140021930:	add    BYTE PTR [rax],al
   140021932:	add    BYTE PTR [rcx],al
   140021934:	jle    0x14002195f
   140021936:	imul   r12d,DWORD PTR [rdi+0x69],0xb7b79569
   14002193e:	mov    bh,0xb7
   140021940:	mov    bh,0xb7
   140021942:	test   eax,0x6969696d
   140021947:	cmp    eax,0xb7018c09
   14002194c:	scas   eax,DWORD PTR es:[rdi]
   14002194d:	mov    bh,0xaf
   14002194f:	mov    bl,0xb2
   140021951:	mov    bh,0xaf
   140021953:	mov    dl,0xb7
   140021955:	mov    dl,0xb7
   140021957:	outs   dx,DWORD PTR ds:[rsi]
	...
   140021960:	add    BYTE PTR [rax],al
   140021962:	add    BYTE PTR [rcx],al
   140021964:	jle    0x14002198b
   140021966:	(bad)  
   140021967:	imul   ebp,DWORD PTR [ecx+0x69],0xb7b7b795
   14002196f:	mov    bh,0xb7
   140021971:	xchg   ebx,eax
   140021972:	ins    BYTE PTR es:[rdi],dx
   140021973:	imul   ebp,DWORD PTR [rcx+0x69],0x8c113967
   14002197a:	add    DWORD PTR [rdx-0x4d484d49],esi
   140021980:	mov    bl,0xb3
   140021982:	mov    bh,0xaf
   140021984:	mov    dl,0xb3
   140021986:	mov    bh,0x6f
	...
   140021990:	add    BYTE PTR [rax],al
   140021992:	add    BYTE PTR [rcx],al
   140021994:	jle    0x1400219bb
   140021996:	pop    rsp
   140021997:	addr32 imul ebp,DWORD PTR [ecx-0x6b],0xa9b7b7b7
   1400219a0:	ins    DWORD PTR es:[rdi],dx
   1400219a1:	imul   ebp,DWORD PTR [rcx+0x69],0x5a446969
   1400219a8:	adc    DWORD PTR [rcx+rax*1-0x4c4c5049],ecx
   1400219af:	mov    bh,0xb2
   1400219b1:	mov    bl,0xb3
   1400219b3:	mov    bh,0xb2
   1400219b5:	scas   eax,DWORD PTR es:[rdi]
   1400219b6:	mov    bh,0x70
	...
   1400219c0:	add    BYTE PTR [rax],al
   1400219c2:	add    BYTE PTR [rcx],al
   1400219c4:	jle    0x1400219eb
   1400219c6:	(bad)  
   1400219c7:	rex.B
   1400219c8:	imul   ebp,DWORD PTR [ecx-0x6b],0x6c93b7b7
   1400219d0:	imul   ebp,DWORD PTR [rcx+0x69],0x37666969
   1400219d7:	(bad)  
   1400219d8:	adc    BYTE PTR [rcx+rax*1-0x484d484d],cl
   1400219df:	scas   eax,DWORD PTR es:[rdi]
   1400219e0:	mov    bh,0xaf
   1400219e2:	mov    bl,0xb2
   1400219e4:	mov    bh,0xaf
   1400219e6:	mov    bh,0x71
	...
   1400219f0:	add    BYTE PTR [rax],al
   1400219f2:	add    BYTE PTR [rcx],al
   1400219f4:	jle    0x140021a1b
   1400219f6:	and    esp,DWORD PTR [rax+0x66]
   1400219f9:	addr32 addr32 xchg ecx,eax
   1400219fc:	stos   DWORD PTR es:[rdi],eax
   1400219fd:	ins    DWORD PTR es:[rdi],dx
   1400219fe:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   140021a05:	rex.B
   140021a06:	rex.WRB adc BYTE PTR [r8],r10b
   140021a09:	mov    WORD PTR [rcx],es
   140021a0b:	mov    bh,0xb2
   140021a0d:	mov    bl,0xaf
   140021a0f:	mov    bh,0xb7
   140021a11:	mov    bh,0xb7
   140021a13:	mov    bh,0xb7
   140021a15:	scas   eax,DWORD PTR es:[rdi]
   140021a16:	mov    bh,0x71
	...
   140021a20:	add    BYTE PTR [rax],al
   140021a22:	add    BYTE PTR [rcx],al
   140021a24:	jle    0x140021a49
   140021a26:	cs cs pop rbx
   140021a29:	addr32 imul ebp,DWORD PTR [ebx+0x67],0x69696969
   140021a32:	imul   esp,DWORD PTR [rsi+0x41],0x1010105a
   140021a39:	mov    WORD PTR [rcx],es
   140021a3b:	mov    bh,0xb2
   140021a3d:	mov    bh,0xb7
   140021a3f:	test   al,0x9b
   140021a41:	lahf   
   140021a42:	popf   
   140021a43:	fwait
   140021a44:	pushf  
   140021a45:	movabs al,ds:0x71a4
   140021a4e:	add    BYTE PTR [rax],al
   140021a50:	add    BYTE PTR [rax],al
   140021a52:	add    BYTE PTR [rcx],al
   140021a54:	jge    0x140021a84
   140021a56:	and    ebp,DWORD PTR [rsi]
   140021a58:	(bad)  
   140021a59:	push   rsp
   140021a5a:	movsxd esp,DWORD PTR [rdi+0x67]
   140021a5d:	imul   esp,DWORD PTR [edi+0x69],0x4d374667
   140021a65:	adc    BYTE PTR [rax],dl
   140021a67:	adc    BYTE PTR [rax],dl
   140021a69:	mov    WORD PTR [rcx],es
   140021a6b:	mov    bh,0xb2
   140021a6d:	mov    bh,0xb7
   140021a6f:	jnp    0x140021a07
   140021a71:	cdq    
   140021a72:	cdq    
   140021a73:	xchg   edi,eax
   140021a74:	xchg   edi,eax
   140021a75:	lahf   
   140021a76:	jno    0x140021a78
	...
   140021a80:	add    BYTE PTR [rax],al
   140021a82:	add    BYTE PTR [rcx],al
   140021a84:	jge    0x140021ab4
   140021a86:	cs xor BYTE PTR cs:[rax],dh
   140021a8a:	xor    DWORD PTR [rbp+0x64],ebx
   140021a8d:	rex.RX
   140021a8e:	rex.RX
   140021a8f:	rex.RX
   140021a90:	rex.R (bad) 
   140021a92:	pop    rcx
   140021a93:	(bad)  
   140021a94:	adc    BYTE PTR [rax],dl
   140021a96:	adc    BYTE PTR [rax],dl
   140021a98:	adc    BYTE PTR [rcx+rax*1-0x48484d49],cl
   140021a9f:	jns    0x140021a50
   140021aa1:	scas   eax,DWORD PTR es:[rdi]
   140021aa2:	mov    bh,0xa8
   140021aa4:	test   al,0x75
	...
   140021ab2:	add    BYTE PTR [rcx],al
   140021ab4:	jle    0x140021ae4
   140021ab6:	cs (bad) 
   140021ab8:	(bad)  
   140021ab9:	(bad)  
   140021aba:	(bad)  
   140021abb:	and    BYTE PTR [rip+0x70c0d0b],dh        # 0x1470e27cc
   140021ac1:	adc    BYTE PTR [rax],dl
   140021ac3:	adc    BYTE PTR [rax],dl
   140021ac5:	adc    BYTE PTR [rax],dl
   140021ac7:	adc    BYTE PTR [rax],dl
   140021ac9:	mov    WORD PTR [rcx],es
   140021acb:	mov    bh,0xb2
   140021acd:	mov    bl,0xb7
   140021acf:	jns    0x140021a80
   140021ad1:	mov    bh,0xa8
   140021ad3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021ad4:	jne    0x140021ad6
	...
   140021ae2:	add    BYTE PTR [rbx],al
   140021ae4:	nop
   140021ae5:	xchg   BYTE PTR [rsi-0x7c777778],al
   140021aeb:	jg     0x140021a6e
   140021aed:	or     DWORD PTR [rdx-0x73737374],0x8c8c8c8c
   140021af7:	mov    WORD PTR [rbp+rcx*4-0x484d48fe],cs
   140021afe:	mov    bh,0x79
   140021b00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021b01:	test   al,0xa4
   140021b03:	js     0x140021b05
	...
   140021b11:	add    BYTE PTR [rax],al
   140021b13:	sbb    al,BYTE PTR [rbx]
   140021b15:	add    DWORD PTR [rcx],eax
   140021b17:	add    DWORD PTR [rcx],eax
   140021b19:	add    DWORD PTR [rcx],eax
   140021b1b:	add    DWORD PTR [rcx],eax
   140021b1d:	add    DWORD PTR [rcx],eax
   140021b1f:	add    DWORD PTR [rcx],eax
   140021b21:	add    DWORD PTR [rcx],eax
   140021b23:	add    DWORD PTR [rcx],eax
   140021b25:	add    DWORD PTR [rcx],eax
   140021b27:	add    DWORD PTR [rcx],eax
   140021b29:	add    bl,BYTE PTR [rcx]
   140021b2b:	mov    bh,0xb2
   140021b2d:	scas   eax,DWORD PTR es:[rdi]
   140021b2e:	mov    bh,0x79
   140021b30:	lahf   
   140021b31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021b32:	je     0x140021b34
	...
   140021b48:	fwait
   140021b49:	mov    bh,0xb7
   140021b4b:	mov    bh,0xb7
   140021b4d:	mov    bh,0xb7
   140021b4f:	mov    bh,0xb7
   140021b51:	mov    bh,0xb7
   140021b53:	mov    bh,0xb7
   140021b55:	mov    bh,0xb7
   140021b57:	mov    bh,0xb7
   140021b59:	mov    bh,0xb7
   140021b5b:	mov    dl,0xaf
   140021b5d:	scas   eax,DWORD PTR es:[rdi]
   140021b5e:	mov    ah,0x7b
   140021b60:	lahf   
   140021b61:	js     0x140021b63
	...
   140021b77:	add    BYTE PTR [rbx-0x48484849],bl
   140021b7d:	mov    bh,0xb7
   140021b7f:	mov    bh,0xb7
   140021b81:	mov    bh,0xb7
   140021b83:	mov    bl,0xb7
   140021b85:	mov    bh,0xb3
   140021b87:	mov    bh,0xb7
   140021b89:	mov    bl,0xb7
   140021b8b:	mov    bh,0xb7
   140021b8d:	scas   eax,DWORD PTR es:[rdi]
   140021b8e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021b8f:	lahf   
   140021b90:	js     0x140021b92
	...
   140021ba6:	add    BYTE PTR [rax],al
   140021ba8:	fwait
   140021ba9:	scas   eax,DWORD PTR es:[rdi]
   140021baa:	test   al,0xa8
   140021bac:	test   al,0xa8
   140021bae:	test   al,0xa8
   140021bb0:	test   al,0xa8
   140021bb2:	test   al,0xa8
   140021bb4:	test   al,0xa8
   140021bb6:	test   al,0xa8
   140021bb8:	test   al,0xa8
   140021bba:	test   al,0xa8
   140021bbc:	test   al,0xad
   140021bbe:	sahf   
   140021bbf:	jne    0x140021bc1
	...
   140021bd5:	add    BYTE PTR [rax],al
   140021bd7:	add    BYTE PTR [rbx-0x64646465],bl
   140021bdd:	fwait
   140021bde:	fwait
   140021bdf:	fwait
   140021be0:	fwait
   140021be1:	fwait
   140021be2:	fwait
   140021be3:	fwait
   140021be4:	fwait
   140021be5:	fwait
   140021be6:	fwait
   140021be7:	fwait
   140021be8:	fwait
   140021be9:	fwait
   140021bea:	fwait
   140021beb:	fwait
   140021bec:	fwait
   140021bed:	fwait
   140021bee:	fwait
	...
   140021cef:	add    bh,bh
   140021cf1:	(bad)  
   140021cf2:	(bad)  
   140021cf3:	(bad)  
   140021cf4:	(bad)  
   140021cf5:	inc    DWORD PTR [rax]
   140021cf7:	add    bh,bh
   140021cf9:	add    BYTE PTR [rax],al
   140021cfb:	add    BYTE PTR [rax],al
   140021cfd:	inc    DWORD PTR [rax]
   140021cff:	add    bh,bh
   140021d01:	add    BYTE PTR [rax],al
   140021d03:	add    BYTE PTR [rax],al
   140021d05:	inc    DWORD PTR [rax]
   140021d07:	add    bh,bh
   140021d09:	add    BYTE PTR [rax],al
   140021d0b:	add    BYTE PTR [rax],al
   140021d0d:	inc    DWORD PTR [rax]
   140021d0f:	add    bh,bh
   140021d11:	add    BYTE PTR [rax],al
   140021d13:	add    BYTE PTR [rax],al
   140021d15:	inc    DWORD PTR [rax]
   140021d17:	add    bh,bh
   140021d19:	add    BYTE PTR [rax],al
   140021d1b:	add    BYTE PTR [rax],al
   140021d1d:	inc    DWORD PTR [rax]
   140021d1f:	add    bh,bh
   140021d21:	add    BYTE PTR [rax],al
   140021d23:	add    BYTE PTR [rax],al
   140021d25:	inc    DWORD PTR [rax]
   140021d27:	add    bh,bh
   140021d29:	add    BYTE PTR [rax],al
   140021d2b:	add    BYTE PTR [rax],al
   140021d2d:	inc    DWORD PTR [rax]
   140021d2f:	add    bh,bh
   140021d31:	add    BYTE PTR [rax],al
   140021d33:	add    BYTE PTR [rax],al
   140021d35:	inc    DWORD PTR [rax]
   140021d37:	add    bh,bh
   140021d39:	add    BYTE PTR [rax],al
   140021d3b:	add    BYTE PTR [rax],al
   140021d3d:	inc    DWORD PTR [rax]
   140021d3f:	add    bh,bh
   140021d41:	add    BYTE PTR [rax],al
   140021d43:	add    BYTE PTR [rax],al
   140021d45:	inc    DWORD PTR [rax]
   140021d47:	add    bh,bh
   140021d49:	add    BYTE PTR [rax],al
   140021d4b:	add    BYTE PTR [rax],al
   140021d4d:	inc    DWORD PTR [rax]
   140021d4f:	add    bh,bh
   140021d51:	add    BYTE PTR [rax],al
   140021d53:	add    BYTE PTR [rax],al
   140021d55:	inc    DWORD PTR [rax]
   140021d57:	add    bh,bh
   140021d59:	add    BYTE PTR [rax],al
   140021d5b:	add    BYTE PTR [rax],al
   140021d5d:	inc    DWORD PTR [rax]
   140021d5f:	add    bh,bh
   140021d61:	add    BYTE PTR [rax],al
   140021d63:	add    BYTE PTR [rax],al
   140021d65:	inc    DWORD PTR [rax]
   140021d67:	add    al,ah
   140021d69:	add    BYTE PTR [rax],al
   140021d6b:	add    BYTE PTR [rax],al
   140021d6d:	inc    DWORD PTR [rax]
   140021d6f:	add    al,ah
   140021d71:	add    BYTE PTR [rax],al
   140021d73:	add    BYTE PTR [rax],al
   140021d75:	inc    DWORD PTR [rax]
   140021d77:	add    al,ah
   140021d79:	add    BYTE PTR [rax],al
   140021d7b:	add    BYTE PTR [rax],al
   140021d7d:	inc    DWORD PTR [rax]
   140021d7f:	add    al,ah
   140021d81:	add    BYTE PTR [rax],al
   140021d83:	add    BYTE PTR [rax],al
   140021d85:	inc    DWORD PTR [rax]
   140021d87:	add    al,ah
   140021d89:	add    BYTE PTR [rax],al
   140021d8b:	add    BYTE PTR [rax],al
   140021d8d:	inc    DWORD PTR [rax]
   140021d8f:	add    al,ah
   140021d91:	add    BYTE PTR [rax],al
   140021d93:	add    BYTE PTR [rax],al
   140021d95:	inc    DWORD PTR [rax]
   140021d97:	add    al,ah
   140021d99:	add    BYTE PTR [rax],al
   140021d9b:	add    BYTE PTR [rax],al
   140021d9d:	inc    DWORD PTR [rax]
   140021d9f:	add    al,ah
   140021da1:	add    BYTE PTR [rax],al
   140021da3:	add    BYTE PTR [rax],al
   140021da5:	inc    DWORD PTR [rax]
   140021da7:	add    al,ah
   140021da9:	add    BYTE PTR [rax],al
   140021dab:	add    BYTE PTR [rax],al
   140021dad:	inc    DWORD PTR [rax]
   140021daf:	add    al,ah
   140021db1:	add    BYTE PTR [rax],al
   140021db3:	add    BYTE PTR [rax],al
   140021db5:	inc    DWORD PTR [rax]
   140021db7:	add    al,ah
   140021db9:	add    BYTE PTR [rax],al
   140021dbb:	add    BYTE PTR [rax],al
   140021dbd:	inc    DWORD PTR [rax]
   140021dbf:	add    al,ah
   140021dc1:	add    BYTE PTR [rax],al
   140021dc3:	add    BYTE PTR [rax],al
   140021dc5:	inc    DWORD PTR [rax]
   140021dc7:	add    al,ah
   140021dc9:	add    BYTE PTR [rax],al
   140021dcb:	add    BYTE PTR [rax],al
   140021dcd:	inc    DWORD PTR [rax]
   140021dcf:	add    al,ah
   140021dd1:	add    BYTE PTR [rax],al
   140021dd3:	add    BYTE PTR [rax],al
   140021dd5:	inc    DWORD PTR [rax]
   140021dd7:	add    al,ah
   140021dd9:	add    BYTE PTR [rax],al
   140021ddb:	add    BYTE PTR [rax],al
   140021ddd:	inc    DWORD PTR [rax]
   140021ddf:	add    al,ah
   140021de1:	add    BYTE PTR [rax],al
   140021de3:	add    BYTE PTR [rax],al
   140021de5:	inc    DWORD PTR [rax]
   140021de7:	add    al,ah
   140021de9:	add    BYTE PTR [rax],al
   140021deb:	add    BYTE PTR [rax],al
   140021ded:	inc    DWORD PTR [rax]
   140021def:	add    al,ah
   140021df1:	add    BYTE PTR [rax],al
   140021df3:	add    BYTE PTR [rax],al
   140021df5:	inc    DWORD PTR [rax]
   140021df7:	add    al,ah
   140021df9:	add    BYTE PTR [rax],al
   140021dfb:	add    BYTE PTR [rax],al
   140021dfd:	inc    DWORD PTR [rax]
   140021dff:	add    al,ah
   140021e01:	add    BYTE PTR [rax],al
   140021e03:	add    BYTE PTR [rcx],al
   140021e05:	inc    DWORD PTR [rax]
   140021e07:	add    al,ah
   140021e09:	add    BYTE PTR [rax],al
   140021e0b:	add    BYTE PTR [rbx],al
   140021e0d:	inc    DWORD PTR [rax]
   140021e0f:	add    al,ah
   140021e11:	add    BYTE PTR [rax],al
   140021e13:	add    BYTE PTR [rdi],al
   140021e15:	inc    DWORD PTR [rax]
   140021e17:	add    al,ah
   140021e19:	add    BYTE PTR [rax],al
   140021e1b:	add    BYTE PTR [rdi],cl
   140021e1d:	inc    DWORD PTR [rax]
   140021e1f:	add    al,ah
   140021e21:	add    BYTE PTR [rax],al
   140021e23:	add    BYTE PTR [rdi],bl
   140021e25:	inc    DWORD PTR [rax]
   140021e27:	add    bh,bh
   140021e29:	add    BYTE PTR [rax],al
   140021e2b:	add    BYTE PTR [rdi],bh
   140021e2d:	inc    DWORD PTR [rax]
   140021e2f:	add    bh,bh
   140021e31:	add    BYTE PTR [rax],al
   140021e33:	add    BYTE PTR [rdi-0x1],bh
   140021e36:	add    BYTE PTR [rax],al
   140021e38:	inc    DWORD PTR [rax]
   140021e3a:	add    BYTE PTR [rax],al
   140021e3c:	(bad)  
   140021e3d:	inc    DWORD PTR [rax]
   140021e3f:	add    bh,bh
   140021e41:	add    BYTE PTR [rax],al
   140021e43:	add    edi,edi
   140021e45:	inc    DWORD PTR [rax]
   140021e47:	add    bh,bh
   140021e49:	(bad)  
   140021e4a:	(bad)  
   140021e4b:	(bad)  
   140021e4c:	(bad)  
   140021e4d:	inc    DWORD PTR [rax]
   140021e4f:	add    bh,bh
   140021e51:	(bad)  
   140021e52:	(bad)  
   140021e53:	(bad)  
   140021e54:	(bad)  
   140021e55:	inc    DWORD PTR [rax]
   140021e57:	add    bh,bh
   140021e59:	(bad)  
   140021e5a:	(bad)  
   140021e5b:	(bad)  
   140021e5c:	(bad)  
   140021e5d:	inc    DWORD PTR [rax]
   140021e5f:	add    bh,bh
   140021e61:	(bad)  
   140021e62:	(bad)  
   140021e63:	(bad)  
   140021e64:	(bad)  
   140021e65:	inc    DWORD PTR [rax]
   140021e67:	add    bh,bh
   140021e69:	(bad)  
   140021e6a:	(bad)  
   140021e6b:	(bad)  
   140021e6c:	(bad)  
   140021e6d:	inc    DWORD PTR [rax]
   140021e6f:	add    BYTE PTR [rax],ch
   140021e71:	add    BYTE PTR [rax],al
   140021e73:	add    BYTE PTR [rax],dl
   140021e75:	add    BYTE PTR [rax],al
   140021e77:	add    BYTE PTR [rax],ah
   140021e79:	add    BYTE PTR [rax],al
   140021e7b:	add    BYTE PTR [rcx],al
   140021e7d:	add    BYTE PTR [rax],ah
   140021e7f:	add    BYTE PTR [rax],al
   140021e81:	add    BYTE PTR [rax],al
   140021e83:	add    BYTE PTR [rax+0x4],al
	...
   140021e9e:	add    BYTE PTR [rax],al
   140021ea0:	jp     0x140021f1c
   140021ea2:	jp     0x140021ea3
   140021ea4:	jp     0x140021f20
   140021ea6:	jp     0x140021ea7
   140021ea8:	jp     0x140021f24
   140021eaa:	jp     0x140021eab
   140021eac:	jp     0x140021f28
   140021eae:	jp     0x140021eaf
   140021eb0:	jp     0x140021f2c
   140021eb2:	jp     0x140021eb3
   140021eb4:	jp     0x140021f30
   140021eb6:	jp     0x140021eb7
   140021eb8:	jp     0x140021f34
   140021eba:	jp     0x140021ebb
   140021ebc:	jp     0x140021f38
   140021ebe:	jp     0x140021ebf
   140021ec0:	jp     0x140021f3c
   140021ec2:	jp     0x140021ec3
   140021ec4:	jp     0x140021f40
   140021ec6:	jp     0x140021ec7
   140021ec8:	jp     0x140021f44
   140021eca:	jp     0x140021ecb
   140021ecc:	jp     0x140021f48
   140021ece:	jp     0x140021ecf
   140021ed0:	jp     0x140021f4c
   140021ed2:	jp     0x140021ed3
	...
   140021ee0:	xchg   BYTE PTR [rsi-0xf0f007a],al
   140021ee6:	repnz push rcx
   140021ee9:	icebp  
   140021eea:	repz push rcx
   140021eed:	repnz repz push rdx
   140021ef1:	repnz hlt 
   140021ef3:	push   rbx
   140021ef5:	repz hlt 
   140021ef7:	push   rbx
   140021ef9:	hlt    
   140021efa:	cmc    
   140021efb:	push   rsp
   140021efd:	cmc    
   140021efe:	idiv   bh
   140021f00:	cmc    
   140021f01:	cmc    
   140021f02:	idiv   edi
   140021f04:	div    dh
   140021f06:	idiv   edi
   140021f08:	div    edi
   140021f0a:	clc    
   140021f0b:	push   rdi
   140021f0d:	clc    
   140021f0e:	stc    
   140021f0f:	inc    DWORD PTR [rsi+0xff8686]
	...
   140021f1d:	add    BYTE PTR [rax],al
   140021f1f:	add    BYTE PTR [rax-0xe006f70],dl
   140021f25:	icebp  
   140021f26:	repz push rcx
   140021f29:	repnz repz push rdx
   140021f2d:	repnz hlt 
   140021f2f:	push   rbx
   140021f31:	repz cmc 
   140021f33:	push   rbx
   140021f35:	hlt    
   140021f36:	cmc    
   140021f37:	push   rsp
   140021f39:	cmc    
   140021f3a:	idiv   bh
   140021f3c:	cmc    
   140021f3d:	cmc    
   140021f3e:	idiv   edi
   140021f40:	div    dh
   140021f42:	idiv   edi
   140021f44:	div    edi
   140021f46:	clc    
   140021f47:	push   rdi
   140021f49:	clc    
   140021f4a:	stc    
   140021f4b:	(bad)  
   140021f4c:	clc    
   140021f4d:	stc    
   140021f4e:	cli    
   140021f4f:	call   QWORD PTR [rax+0xff9090]
   140021f55:	add    BYTE PTR [rax],al
   140021f57:	add    bh,bh
   140021f59:	jle    0x140021f5b
   140021f5b:	nop
   140021f5c:	(bad)  
   140021f5d:	jle    0x140021f5f
   140021f5f:	stc    
   140021f60:	(bad)  
   140021f61:	jle    0x140021f63
   140021f63:	(bad)  
   140021f64:	(bad)  
   140021f65:	jle    0x140021f67
   140021f67:	(bad)  
   140021f68:	(bad)  
   140021f69:	jle    0x140021f6b
   140021f6b:	(bad)  
   140021f6c:	(bad)  
   140021f6d:	jle    0x140021f6f
   140021f6f:	(bad)  
   140021f70:	(bad)  
   140021f71:	jle    0x140021f73
   140021f73:	(bad)  
   140021f74:	(bad)  
   140021f75:	jle    0x140021f77
   140021f77:	(bad)  
   140021f78:	(bad)  
   140021f79:	jg     0x140021f7e
   140021f7b:	(bad)  
   140021f7c:	sti    
   140021f7d:	mov    cl,0x69
   140021f7f:	push   rdi
   140021f81:	idiv   eax
   140021f83:	(bad)  
   140021f84:	clc    
   140021f85:	clc    
   140021f86:	stc    
   140021f87:	(bad)  
   140021f88:	clc    
   140021f89:	stc    
   140021f8a:	cli    
   140021f8b:	(bad)  
   140021f8c:	stc    
   140021f8d:	cli    
   140021f8e:	cli    
   140021f8f:	call   FWORD PTR [rbp+0xff9d9d]
   140021f95:	add    BYTE PTR [rax],al
   140021f97:	add    bh,bh
   140021f99:	jle    0x140021f9b
   140021f9b:	stc    
   140021f9c:	movabs al,ds:0x9bff98de9bf197dd
   140021fa5:	ficomp WORD PTR [rax-0x67216401]
   140021fab:	jmp    QWORD PTR [rbx-0x50006923]
   140021fb1:	ficom  DWORD PTR [rbx-0x70274201]
   140021fb7:	(bad)  
   140021fb8:	fcom   st(5)
   140021fba:	xchg   ecx,eax
   140021fbb:	(bad)  
   140021fbc:	(bad)  
   140021fbd:	jg     0x140021fc2
   140021fbf:	(bad)  
   140021fc0:	clc    
   140021fc1:	clc    
   140021fc2:	stc    
   140021fc3:	(bad)  
   140021fc4:	clc    
   140021fc5:	stc    
   140021fc6:	cli    
   140021fc7:	(bad)  
   140021fc8:	stc    
   140021fc9:	cli    
   140021fca:	cli    
   140021fcb:	(bad)  
   140021fcc:	cli    
   140021fcd:	sti    
   140021fce:	sti    
   140021fcf:	jmp    FWORD PTR [rsp+rbp*4+0xffac]
   140021fd6:	add    BYTE PTR [rax],al
   140021fd8:	(bad)  
   140021fd9:	jle    0x140021fdb
   140021fdb:	call   FWORD PTR [rbx+0x6aff98de]
   140021fe1:	int3   
   140021fe2:	ins    BYTE PTR es:[rdi],dx
   140021fe3:	jmp    FWORD PTR [rsi]
   140021fe5:	movabs al,ds:0x8b0cffef8b0bffb9
   140021fee:	in     eax,dx
   140021fef:	(bad)  
   140021ff0:	(bad)  
   140021ff1:	sahf   
   140021ff2:	mov    dh,0xff
   140021ff4:	test   eax,0xe0ff5dc0
   140021ff9:	rol    DWORD PTR [rsi+0x7effff],1
   140021fff:	(bad)  
   140022000:	stc    
   140022001:	stc    
   140022002:	cli    
   140022003:	(bad)  
   140022004:	stc    
   140022005:	cli    
   140022006:	sti    
   140022007:	(bad)  
   140022008:	cli    
   140022009:	sti    
   14002200a:	sti    
   14002200b:	(bad)  
   14002200c:	sti    
   14002200d:	sti    
   14002200e:	cld    
   14002200f:	jmp    FWORD PTR [rbp+0xffadad]
   140022015:	add    BYTE PTR [rax],al
   140022017:	add    bh,bh
   140022019:	jle    0x14002201b
   14002201b:	call   FWORD PTR [rbx+0x2dff98de]
   140022021:	popf   
   140022022:	mov    dh,0xff
   140022024:	add    BYTE PTR [rbx-0x6],al
   14002202a:	(bad)  
   14002202b:	inc    DWORD PTR [rax]
   14002202d:	mov    bh,bh
   14002202f:	inc    DWORD PTR [rax]
   140022031:	mov    dh,bh
   140022033:	dec    DWORD PTR [rsp+rdx*4-0x52]
   140022037:	(bad)  
   140022038:	call   0x14001a60d
   14002203d:	jle    0x14002203f
   14002203f:	(bad)  
   140022040:	stc    
   140022041:	cli    
   140022042:	sti    
   140022043:	(bad)  
   140022044:	cli    
   140022045:	sti    
   140022046:	sti    
   140022047:	(bad)  
   140022048:	sti    
   140022049:	cld    
   14002204a:	cld    
   14002204b:	(bad)  
   14002204c:	sti    
   14002204d:	cld    
   14002204e:	cld    
   14002204f:	push   QWORD PTR [rcx+0xffb1b1]
   140022055:	add    BYTE PTR [rax],al
   140022057:	add    bh,bh
   140022059:	jle    0x14002205b
   14002205b:	call   FWORD PTR [rbx+0x7ff98de]
   140022061:	jle    0x140022046
   140022063:	inc    DWORD PTR [rax]
   140022065:	xchg   dh,bh
   140022067:	(bad)  
   140022068:	(bad)  
   140022069:	(bad)  
   14002206a:	(bad)  
   14002206b:	(bad)  
   14002206c:	(bad)  
   14002206d:	(bad)  
   14002206e:	(bad)  
   14002206f:	inc    DWORD PTR [rdi+0xcffffc8]
   140022075:	jp     0x140022051
   140022077:	(bad)  
   140022078:	call   0x14001a64d
   14002207d:	jle    0x14002207f
   14002207f:	(bad)  
   140022080:	cli    
   140022081:	sti    
   140022082:	sti    
   140022083:	(bad)  
   140022084:	sti    
   140022085:	cld    
   140022086:	cld    
   140022087:	(bad)  
   140022088:	sti    
   140022089:	cld    
   14002208a:	std    
   14002208b:	(bad)  
   14002208c:	cld    
   14002208d:	std    
   14002208e:	std    
   14002208f:	push   QWORD PTR [rbx+0xffb3b3]
   140022095:	add    BYTE PTR [rax],al
   140022097:	add    bh,bh
   140022099:	jle    0x14002209b
   14002209b:	call   FWORD PTR [rbx+0x7ff98de]
   1400220a1:	jle    0x140022086
   1400220a3:	inc    DWORD PTR [rax]
   1400220a5:	test   ebp,edi
   1400220a7:	(bad)  
   1400220a8:	(bad)  
   1400220a9:	(bad)  
   1400220aa:	(bad)  
   1400220ab:	(bad)  
   1400220ac:	(bad)  
   1400220ad:	(bad)  
   1400220ae:	(bad)  
   1400220af:	(bad)  
   1400220b0:	js     0x140022073
   1400220b2:	(bad)  
   1400220b3:	dec    DWORD PTR [rip+0xffffffffe8ffdb79]        # 0x12901fc32
   1400220b9:	rol    BYTE PTR [rbp+0x7effff],1
   1400220bf:	(bad)  
   1400220c0:	sti    
   1400220c1:	cld    
   1400220c2:	cld    
   1400220c3:	(bad)  
   1400220c4:	cld    
   1400220c5:	cld    
   1400220c6:	std    
   1400220c7:	(bad)  
   1400220c8:	cld    
   1400220c9:	std    
   1400220ca:	std    
   1400220cb:	(bad)  
   1400220cc:	std    
   1400220cd:	(bad)  
   1400220ce:	(bad)  
   1400220cf:	push   QWORD PTR [rbp+0xffb5b5]
   1400220d5:	add    BYTE PTR [rax],al
   1400220d7:	add    bh,bh
   1400220d9:	jle    0x1400220db
   1400220db:	call   FWORD PTR [rbx+0x31ff98de]
   1400220e1:	lahf   
   1400220e2:	mov    ch,0xff
   1400220e4:	add    BYTE PTR [rax-0xa],al
   1400220ea:	(bad)  
   1400220eb:	inc    DWORD PTR [rax]
   1400220ed:	xchg   dh,bh
   1400220ef:	inc    DWORD PTR [rax]
   1400220f1:	(bad)  
   1400220f2:	stc    
   1400220f3:	call   FWORD PTR [rbp-0x6b]
   1400220f6:	stos   BYTE PTR es:[rdi],al
   1400220f7:	(bad)  
   1400220f8:	call   0x14001a6cd
   1400220fd:	jle    0x1400220ff
   1400220ff:	(bad)  
   140022100:	cld    
   140022101:	cld    
   140022102:	std    
   140022103:	(bad)  
   140022104:	cld    
   140022105:	std    
   140022106:	std    
   140022107:	(bad)  
   140022108:	std    
   140022109:	(bad)  
   14002210a:	(bad)  
   14002210b:	(bad)  
   14002210c:	std    
   14002210d:	(bad)  
   14002210e:	(bad)  
   14002210f:	(bad)  
   140022110:	mov    eax,0xffb8b8
   140022115:	add    BYTE PTR [rax],al
   140022117:	add    bh,bh
   140022119:	jle    0x14002211b
   14002211b:	call   FWORD PTR [rbx+0x76ff98de]
   140022121:	retf   
   140022122:	imul   edi,edi,0xffb2a03f
   140022128:	je     0xc2142113
   14002212e:	jrcxz  0x14002212f
   140022130:	(bad)  
   140022131:	xchg   edi,eax
   140022132:	test   eax,0x50b8d7ff
   140022137:	(bad)  
   140022138:	call   0x14001a70d
   14002213d:	jle    0x14002213f
   14002213f:	(bad)  
   140022140:	cld    
   140022141:	std    
   140022142:	std    
   140022143:	(bad)  
   140022144:	cld    
   140022145:	std    
   140022146:	std    
   140022147:	(bad)  
   140022148:	std    
   140022149:	(bad)  
   14002214a:	(bad)  
   14002214b:	(bad)  
   14002214c:	std    
   14002214d:	(bad)  
   14002214e:	(bad)  
   14002214f:	(bad)  
   140022150:	mov    eax,0xffb8b8
   140022155:	add    BYTE PTR [rax],al
   140022157:	add    bh,bh
   140022159:	jle    0x14002215b
   14002215b:	stc    
   14002215c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002215d:	fstp   QWORD PTR [rdx-0x6b23561f]
   140022163:	push   QWORD PTR [rsi-0x38006e27]
   140022169:	(bad)  
   14002216a:	(bad)  
   14002216b:	jmp    rax
   14002216d:	rol    DWORD PTR [rsi-0x7a2f1701],1
   140022173:	(bad)  
   140022174:	call   0x12c01a749
   140022179:	(bad)  
   14002217a:	xchg   edi,eax
   14002217b:	(bad)  
   14002217c:	(bad)  
   14002217d:	jg     0x140022182
   14002217f:	(bad)  
   140022180:	std    
   140022181:	(bad)  
   140022182:	(bad)  
   140022183:	(bad)  
   140022184:	std    
   140022185:	(bad)  
   140022186:	(bad)  
   140022187:	jmp    rbp
   140022189:	in     eax,0xe6
   14002218b:	(bad)  
   14002218c:	(bad)  
   14002218e:	loopne 0x14002218f
   140022190:	mov    edx,0xffbaba
   140022195:	add    BYTE PTR [rax],al
   140022197:	add    bh,bh
   140022199:	jle    0x14002219b
   14002219b:	nop
   14002219c:	(bad)  
   14002219d:	jle    0x14002219f
   14002219f:	stc    
   1400221a0:	(bad)  
   1400221a1:	jle    0x1400221a3
   1400221a3:	(bad)  
   1400221a4:	(bad)  
   1400221a5:	jle    0x1400221a7
   1400221a7:	(bad)  
   1400221a8:	(bad)  
   1400221a9:	jle    0x1400221ab
   1400221ab:	(bad)  
   1400221ac:	(bad)  
   1400221ad:	jle    0x1400221af
   1400221af:	(bad)  
   1400221b0:	(bad)  
   1400221b1:	jle    0x1400221b3
   1400221b3:	(bad)  
   1400221b4:	(bad)  
   1400221b5:	jle    0x1400221b7
   1400221b7:	(bad)  
   1400221b8:	(bad)  
   1400221b9:	jg     0x1400221be
   1400221bb:	(bad)  
   1400221bc:	(bad)  
   1400221bd:	mov    ah,0x6c
   1400221bf:	(bad)  
   1400221c0:	std    
   1400221c1:	(bad)  
   1400221c2:	(bad)  
   1400221c3:	(bad)  
   1400221c4:	mov    edx,0xb8ffbaba
   1400221c9:	mov    eax,0xb8b8ffb8
   1400221ce:	mov    eax,0xbababaff
   1400221d3:	inc    DWORD PTR [rax]
	...
   1400221dd:	add    BYTE PTR [rax],al
   1400221df:	add    BYTE PTR [rdi-0x5004041],bh
   1400221e5:	sti    
   1400221e6:	sti    
   1400221e7:	(bad)  
   1400221e8:	sti    
   1400221e9:	sti    
   1400221ea:	cld    
   1400221eb:	(bad)  
   1400221ec:	sti    
   1400221ed:	cld    
   1400221ee:	cld    
   1400221ef:	(bad)  
   1400221f0:	cld    
   1400221f1:	std    
   1400221f2:	std    
   1400221f3:	(bad)  
   1400221f4:	cld    
   1400221f5:	std    
   1400221f6:	std    
   1400221f7:	(bad)  
   1400221f8:	std    
   1400221f9:	(bad)  
   1400221fa:	(bad)  
   1400221fb:	(bad)  
   1400221fc:	std    
   1400221fd:	(bad)  
   1400221fe:	(bad)  
   1400221ff:	(bad)  
   140022200:	std    
   140022201:	(bad)  
   140022202:	(bad)  
   140022203:	inc    ebp
   140022205:	(bad)
   140022208:	div    dh
   14002220a:	idiv   bh
   14002220c:	mov    edx,0xddf9baba
   140022211:	fstp   st(5)
   140022213:	pop    rdi
	...
   140022220:	rol    al,0xc0
   140022223:	(bad)  
   140022224:	sti    
   140022225:	sti    
   140022226:	cld    
   140022227:	(bad)  
   140022228:	sti    
   140022229:	cld    
   14002222a:	cld    
   14002222b:	(bad)  
   14002222c:	cld    
   14002222d:	std    
   14002222e:	std    
   14002222f:	(bad)  
   140022230:	cld    
   140022231:	std    
   140022232:	std    
   140022233:	(bad)  
   140022234:	std    
   140022235:	(bad)  
   140022236:	(bad)  
   140022237:	(bad)  
   140022238:	std    
   140022239:	(bad)  
   14002223a:	(bad)  
   14002223b:	(bad)  
   14002223c:	sti    
   14002223d:	cld    
   14002223e:	cld    
   14002223f:	(bad)  
   140022240:	std    
   140022241:	(bad)  
   140022242:	(bad)  
   140022243:	dec    edx
   140022245:	retf   0xffca
   140022248:	mov    edx,0xe3fdbaba
   14002224d:	in     eax,0xe2
   14002224f:	imul   eax,DWORD PTR [rax],0x0
	...
   14002225d:	add    BYTE PTR [rax],al
   14002225f:	add    al,al
   140022261:	rol    al,0xff
   140022264:	rol    al,0xc0
   140022267:	inc    eax
   140022269:	rol    al,0xff
   14002226c:	rol    al,0xc0
   14002226f:	inc    eax
   140022271:	rol    al,0xff
   140022274:	rol    al,0xc0
   140022277:	inc    eax
   140022279:	rol    al,0xff
   14002227c:	rol    al,0xc0
   14002227f:	inc    eax
   140022281:	rol    al,0xff
   140022284:	mov    edi,0xf5fcbfbf
   140022289:	cmc    
   14002228a:	cmc    
   14002228b:	jns    0x14002228d
	...
   140022295:	add    BYTE PTR [rax],al
   140022297:	add    al,al
   140022299:	add    DWORD PTR [rax],eax
   14002229b:	add    al,al
   14002229d:	add    DWORD PTR [rax],eax
   14002229f:	add    al,al
   1400222a1:	add    DWORD PTR [rax],eax
   1400222a3:	add    BYTE PTR [rax],al
   1400222a5:	add    DWORD PTR [rax],eax
   1400222a7:	add    BYTE PTR [rax],al
   1400222a9:	add    DWORD PTR [rax],eax
   1400222ab:	add    BYTE PTR [rax],al
   1400222ad:	add    DWORD PTR [rax],eax
   1400222af:	add    BYTE PTR [rax],al
   1400222b1:	add    DWORD PTR [rax],eax
   1400222b3:	add    BYTE PTR [rax],al
   1400222b5:	add    DWORD PTR [rax],eax
   1400222b7:	add    BYTE PTR [rax],al
   1400222b9:	add    DWORD PTR [rax],eax
   1400222bb:	add    BYTE PTR [rax],al
   1400222bd:	add    DWORD PTR [rax],eax
   1400222bf:	add    BYTE PTR [rax],al
   1400222c1:	add    DWORD PTR [rax],eax
   1400222c3:	add    BYTE PTR [rax],al
   1400222c5:	add    DWORD PTR [rax],eax
   1400222c7:	add    BYTE PTR [rax],al
   1400222c9:	add    DWORD PTR [rax],eax
   1400222cb:	add    al,al
   1400222cd:	add    DWORD PTR [rax],eax
   1400222cf:	add    al,al
   1400222d1:	add    eax,DWORD PTR [rax]
   1400222d3:	add    al,al
   1400222d5:	(bad)  
   1400222d6:	add    BYTE PTR [rax],al
   1400222d8:	sub    BYTE PTR [rax],al
   1400222da:	add    BYTE PTR [rax],al
   1400222dc:	sbb    BYTE PTR [rax],al
   1400222de:	add    BYTE PTR [rax],al
   1400222e0:	xor    BYTE PTR [rax],al
   1400222e2:	add    BYTE PTR [rax],al
   1400222e4:	add    DWORD PTR [rax],eax
   1400222e6:	and    BYTE PTR [rax],al
   1400222e8:	add    BYTE PTR [rax],al
   1400222ea:	add    BYTE PTR [rax],al
   1400222ec:	(bad)  
   1400222ed:	or     DWORD PTR [rax],eax
	...
   14002230f:	add    DWORD PTR [rax],eax
   140022311:	add    BYTE PTR [rax],al
   140022313:	sbb    BYTE PTR [rax],al
   140022315:	add    BYTE PTR [rax],al
   140022317:	(bad)  
   140022318:	add    BYTE PTR [rax],al
   14002231a:	add    BYTE PTR [rsi],bl
   14002231c:	add    BYTE PTR [rax],al
   14002231e:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d022324
   140022324:	add    BYTE PTR [rax],al
   140022326:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d02232c
   14002232c:	add    BYTE PTR [rax],al
   14002232e:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d022334
   140022334:	add    BYTE PTR [rax],al
   140022336:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d02233c
   14002233c:	add    BYTE PTR [rax],al
   14002233e:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d022344
   140022344:	add    BYTE PTR [rax],al
   140022346:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e02234c
   14002234c:	add    BYTE PTR [rax],al
   14002234e:	add    BYTE PTR [rax+rax*1],bl
   140022351:	add    BYTE PTR [rax],al
   140022353:	or     BYTE PTR [rax],al
	...
   140022369:	add    BYTE PTR [rax],al
   14002236b:	add    BYTE PTR [rdx],dl
   14002236d:	adc    dl,BYTE PTR [rdx]
   14002236f:	(bad)  
   140022370:	(bad)  
   140022371:	(bad)  
   140022372:	(bad)  
   140022373:	xchg   BYTE PTR [rdi],dl
   140022375:	(bad)  
   140022376:	(bad)  
   140022377:	gs (bad) 
   140022379:	(bad)  
   14002237a:	(bad)  
   14002237b:	jns    0x140022393
   14002237d:	(bad)  
   14002237e:	(bad)  
   14002237f:	jne    0x140022397
   140022381:	(bad)  
   140022382:	(bad)  
   140022383:	jne    0x14002239b
   140022385:	(bad)  
   140022386:	(bad)  
   140022387:	jne    0x14002239f
   140022389:	(bad)  
   14002238a:	(bad)  
   14002238b:	jne    0x1400223a3
   14002238d:	(bad)  
   14002238e:	(bad)  
   14002238f:	jne    0x1400223a7
   140022391:	(bad)  
   140022392:	(bad)  
   140022393:	jne    0x1400223ab
   140022395:	(bad)  
   140022396:	(bad)  
   140022397:	jne    0x1400223af
   140022399:	(bad)  
   14002239a:	(bad)  
   14002239b:	jne    0x1400223b3
   14002239d:	(bad)  
   14002239e:	(bad)  
   14002239f:	jne    0x1400223b7
   1400223a1:	(bad)  
   1400223a2:	(bad)  
   1400223a3:	jne    0x1400223bb
   1400223a5:	(bad)  
   1400223a6:	(bad)  
   1400223a7:	jne    0x1400223c5
   1400223a9:	sbb    al,0x1c
   1400223ab:	jnp    0x1400223ae
   1400223ad:	add    DWORD PTR [rcx],eax
   1400223af:	pop    rcx
   1400223b0:	add    BYTE PTR [rax],al
   1400223b2:	add    BYTE PTR [rbx],bl
	...
   1400223cc:	iret   
   1400223cd:	iret   
   1400223ce:	iret   
   1400223cf:	(bad)  
   1400223d0:	(bad)  
   1400223d1:	(bad)  
   1400223d2:	(bad)  
   1400223d3:	(bad)  
   1400223d4:	(bad)  
   1400223d5:	(bad)  
   1400223d6:	(bad)  
   1400223d7:	(bad)  
   1400223d8:	(bad)  
   1400223d9:	(bad)  
   1400223da:	(bad)  
   1400223db:	(bad)  
   1400223dc:	(bad)  
   1400223dd:	(bad)  
   1400223de:	(bad)  
   1400223df:	(bad)  
   1400223e0:	(bad)  
   1400223e1:	(bad)  
   1400223e2:	(bad)  
   1400223e3:	(bad)  
   1400223e4:	(bad)  
   1400223e5:	(bad)  
   1400223e6:	(bad)  
   1400223e7:	(bad)  
   1400223e8:	(bad)  
   1400223e9:	(bad)  
   1400223ea:	(bad)  
   1400223eb:	(bad)  
   1400223ec:	(bad)  
   1400223ed:	(bad)  
   1400223ee:	(bad)  
   1400223ef:	(bad)  
   1400223f0:	(bad)  
   1400223f1:	(bad)  
   1400223f2:	(bad)  
   1400223f3:	(bad)  
   1400223f4:	(bad)  
   1400223f5:	(bad)  
   1400223f6:	(bad)  
   1400223f7:	(bad)  
   1400223f8:	(bad)  
   1400223f9:	(bad)  
   1400223fa:	(bad)  
   1400223fb:	(bad)  
   1400223fc:	(bad)  
   1400223fd:	(bad)  
   1400223fe:	(bad)  
   1400223ff:	(bad)  
   140022400:	(bad)  
   140022401:	(bad)  
   140022402:	(bad)  
   140022403:	(bad)  
   140022404:	(bad)  
   140022405:	(bad)  
   140022406:	(bad)  
   140022407:	(bad)  
   140022408:	(bad)  
   140022409:	(bad)  
   14002240a:	(bad)  
   14002240b:	jmp    FWORD PTR [rsp+rbp*1]
   14002240e:	sub    al,0x86
   140022410:	add    BYTE PTR [rax],al
   140022412:	add    BYTE PTR [rax+rax*1],bl
	...
   140022429:	add    BYTE PTR [rax],al
   14002242b:	add    bh,cl
   14002242d:	iret   
   14002242e:	iret   
   14002242f:	(bad)  
   140022430:	stc    
   140022431:	cli    
   140022432:	sti    
   140022433:	push   rbp
   140022435:	div    dh
   140022437:	push   rbp
   140022439:	div    dh
   14002243b:	push   rbp
   14002243d:	div    dh
   14002243f:	push   rbp
   140022441:	div    dh
   140022443:	push   rbp
   140022445:	div    dh
   140022447:	push   rbp
   140022449:	div    dh
   14002244b:	push   rbp
   14002244d:	div    dh
   14002244f:	push   rbp
   140022451:	div    dh
   140022453:	push   rbp
   140022455:	div    dh
   140022457:	push   rbp
   140022459:	div    dh
   14002245b:	push   rbp
   14002245d:	div    dh
   14002245f:	push   rbp
   140022461:	div    dh
   140022463:	push   rbp
   140022465:	div    dh
   140022467:	(bad)  
   140022468:	(bad)  
   140022469:	(bad)  
   14002246a:	(bad)  
   14002246b:	jmp    QWORD PTR [rbx]
   14002246d:	and    al,0x23
   14002246f:	jg     0x140022471
   140022471:	add    BYTE PTR [rax],al
   140022473:	sbb    eax,DWORD PTR [rax]
	...
   140022489:	add    BYTE PTR [rax],al
   14002248b:	add    al,dl
   14002248d:	rcl    al,1
   14002248f:	(bad)  
   140022490:	cli    
   140022491:	sti    
   140022492:	cld    
   140022493:	push   rsi
   140022495:	div    edi
   140022497:	push   rsi
   140022499:	div    edi
   14002249b:	push   rsi
   14002249d:	div    edi
   14002249f:	push   rsi
   1400224a1:	div    edi
   1400224a3:	push   rsi
   1400224a5:	div    edi
   1400224a7:	push   rsi
   1400224a9:	div    edi
   1400224ab:	push   rsi
   1400224ad:	div    edi
   1400224af:	push   rsi
   1400224b1:	div    edi
   1400224b3:	push   rsi
   1400224b5:	div    edi
   1400224b7:	push   rsi
   1400224b9:	div    edi
   1400224bb:	push   rsi
   1400224bd:	div    edi
   1400224bf:	push   rsi
   1400224c1:	div    edi
   1400224c3:	push   rbp
   1400224c5:	div    dh
   1400224c7:	(bad)  
   1400224c8:	(bad)  
   1400224c9:	(bad)  
   1400224ca:	(bad)  
   1400224cb:	jmp    QWORD PTR [rbx]
   1400224cd:	and    al,0x23
   1400224cf:	jg     0x1400224d1
   1400224d1:	add    BYTE PTR [rax],al
   1400224d3:	sbb    eax,DWORD PTR [rax]
	...
   1400224e9:	add    BYTE PTR [rax],al
   1400224eb:	add    al,dl
   1400224ed:	rcl    al,1
   1400224ef:	(bad)  
   1400224f0:	sti    
   1400224f1:	cld    
   1400224f2:	std    
   1400224f3:	push   rdi
   1400224f5:	clc    
   1400224f6:	clc    
   1400224f7:	push   rdi
   1400224f9:	clc    
   1400224fa:	clc    
   1400224fb:	push   rdi
   1400224fd:	clc    
   1400224fe:	clc    
   1400224ff:	push   rdi
   140022501:	clc    
   140022502:	clc    
   140022503:	push   rdi
   140022505:	clc    
   140022506:	clc    
   140022507:	push   rdi
   140022509:	clc    
   14002250a:	clc    
   14002250b:	push   rdi
   14002250d:	clc    
   14002250e:	clc    
   14002250f:	push   rdi
   140022511:	clc    
   140022512:	clc    
   140022513:	push   rdi
   140022515:	clc    
   140022516:	clc    
   140022517:	push   rdi
   140022519:	clc    
   14002251a:	clc    
   14002251b:	push   rdi
   14002251d:	clc    
   14002251e:	clc    
   14002251f:	push   rdi
   140022521:	clc    
   140022522:	clc    
   140022523:	push   rsi
   140022525:	clc    
   140022526:	clc    
   140022527:	(bad)  
   140022528:	(bad)  
   140022529:	(bad)  
   14002252a:	(bad)  
   14002252b:	jmp    QWORD PTR [rsp]
   14002252e:	and    edi,DWORD PTR [rdi+0x0]
   140022531:	add    BYTE PTR [rax],al
   140022533:	sbb    eax,DWORD PTR [rax]
	...
   140022549:	add    BYTE PTR [rax],al
   14002254b:	add    al,dl
   14002254d:	rcl    al,1
   14002254f:	(bad)  
   140022550:	sti    
   140022551:	cld    
   140022552:	std    
   140022553:	push   rdi
   140022555:	clc    
   140022556:	clc    
   140022557:	push   rdi
   140022559:	clc    
   14002255a:	clc    
   14002255b:	push   rdi
   14002255d:	clc    
   14002255e:	clc    
   14002255f:	push   rdi
   140022561:	clc    
   140022562:	clc    
   140022563:	push   rdi
   140022565:	clc    
   140022566:	clc    
   140022567:	push   rdi
   140022569:	clc    
   14002256a:	clc    
   14002256b:	push   rdi
   14002256d:	clc    
   14002256e:	clc    
   14002256f:	push   rdi
   140022571:	clc    
   140022572:	clc    
   140022573:	push   rdi
   140022575:	clc    
   140022576:	clc    
   140022577:	push   rdi
   140022579:	clc    
   14002257a:	clc    
   14002257b:	push   rdi
   14002257d:	clc    
   14002257e:	clc    
   14002257f:	push   rdi
   140022581:	clc    
   140022582:	clc    
   140022583:	push   rsi
   140022585:	clc    
   140022586:	clc    
   140022587:	(bad)  
   140022588:	(bad)  
   140022589:	(bad)  
   14002258a:	(bad)  
   14002258b:	jmp    QWORD PTR [rsp]
   14002258e:	and    edi,DWORD PTR [rdi+0x0]
   140022591:	add    BYTE PTR [rax],al
   140022593:	sbb    eax,DWORD PTR [rax]
	...
   1400225a9:	add    BYTE PTR [rax],al
   1400225ab:	add    al,dl
   1400225ad:	rcl    al,1
   1400225af:	(bad)  
   1400225b0:	cld    
   1400225b1:	std    
   1400225b2:	(bad)  
   1400225b3:	(bad)  
   1400225b4:	clc    
   1400225b5:	stc    
   1400225b6:	stc    
   1400225b7:	(bad)  
   1400225b8:	clc    
   1400225b9:	stc    
   1400225ba:	stc    
   1400225bb:	(bad)  
   1400225bc:	clc    
   1400225bd:	stc    
   1400225be:	stc    
   1400225bf:	(bad)  
   1400225c0:	clc    
   1400225c1:	stc    
   1400225c2:	stc    
   1400225c3:	(bad)  
   1400225c4:	clc    
   1400225c5:	stc    
   1400225c6:	stc    
   1400225c7:	(bad)  
   1400225c8:	clc    
   1400225c9:	stc    
   1400225ca:	stc    
   1400225cb:	(bad)  
   1400225cc:	clc    
   1400225cd:	stc    
   1400225ce:	stc    
   1400225cf:	(bad)  
   1400225d0:	clc    
   1400225d1:	stc    
   1400225d2:	stc    
   1400225d3:	(bad)  
   1400225d4:	clc    
   1400225d5:	stc    
   1400225d6:	stc    
   1400225d7:	(bad)  
   1400225d8:	clc    
   1400225d9:	stc    
   1400225da:	stc    
   1400225db:	(bad)  
   1400225dc:	clc    
   1400225dd:	stc    
   1400225de:	stc    
   1400225df:	(bad)  
   1400225e0:	clc    
   1400225e1:	stc    
   1400225e2:	stc    
   1400225e3:	(bad)  
   1400225e4:	clc    
   1400225e5:	stc    
   1400225e6:	stc    
   1400225e7:	(bad)  
   1400225e8:	(bad)  
   1400225e9:	(bad)  
   1400225ea:	(bad)  
   1400225eb:	jmp    QWORD PTR [rsp]
   1400225ee:	and    al,0x7f
   1400225f0:	add    BYTE PTR [rax],al
   1400225f2:	add    BYTE PTR [rbx],bl
	...
   140022600:	(bad)  
   140022601:	jle    0x140022603
   140022603:	nop
   140022604:	(bad)  
   140022605:	jle    0x140022607
   140022607:	stc    
   140022608:	(bad)  
   140022609:	jle    0x14002260b
   14002260b:	(bad)  
   14002260c:	(bad)  
   14002260d:	jle    0x14002260f
   14002260f:	(bad)  
   140022610:	(bad)  
   140022611:	jle    0x140022613
   140022613:	(bad)  
   140022614:	(bad)  
   140022615:	jle    0x140022617
   140022617:	(bad)  
   140022618:	(bad)  
   140022619:	jle    0x14002261b
   14002261b:	(bad)  
   14002261c:	(bad)  
   14002261d:	jle    0x14002261f
   14002261f:	(bad)  
   140022620:	(bad)  
   140022621:	jle    0x140022623
   140022623:	(bad)  
   140022624:	(bad)  
   140022625:	jg     0x14002262a
   140022627:	(bad)  
   140022628:	cld    
   140022629:	mov    dl,0x69
   14002262b:	(bad)  
   14002262c:	stc    
   14002262d:	stc    
   14002262e:	stc    
   14002262f:	(bad)  
   140022630:	stc    
   140022631:	stc    
   140022632:	stc    
   140022633:	(bad)  
   140022634:	stc    
   140022635:	stc    
   140022636:	stc    
   140022637:	(bad)  
   140022638:	stc    
   140022639:	stc    
   14002263a:	stc    
   14002263b:	(bad)  
   14002263c:	stc    
   14002263d:	stc    
   14002263e:	stc    
   14002263f:	(bad)  
   140022640:	stc    
   140022641:	stc    
   140022642:	stc    
   140022643:	(bad)  
   140022644:	stc    
   140022645:	stc    
   140022646:	stc    
   140022647:	(bad)  
   140022648:	(bad)  
   140022649:	(bad)  
   14002264a:	(bad)  
   14002264b:	jmp    QWORD PTR [rsp]
   14002264e:	and    al,0x7f
   140022650:	add    BYTE PTR [rax],al
   140022652:	add    BYTE PTR [rbx],bl
	...
   140022660:	(bad)  
   140022661:	jle    0x140022663
   140022663:	stc    
   140022664:	movabs al,ds:0x9bff98de9bf197dd
   14002266d:	ficomp WORD PTR [rax-0x67216401]
   140022673:	call   FWORD PTR [rdi-0x56006822]
   140022679:	fcom   QWORD PTR [rdi+rdi*8-0x6e264a]
   140022680:	(bad)  
   140022681:	(bad)  
   140022682:	(bad)  
   140022683:	jmp    rdx
   140022685:	ror    DWORD PTR [rsi+0x37fffff],cl
   14002268b:	(bad)  
   14002268c:	stc    
   14002268d:	cli    
   14002268e:	cli    
   14002268f:	(bad)  
   140022690:	stc    
   140022691:	cli    
   140022692:	cli    
   140022693:	(bad)  
   140022694:	stc    
   140022695:	cli    
   140022696:	cli    
   140022697:	(bad)  
   140022698:	stc    
   140022699:	cli    
   14002269a:	cli    
   14002269b:	(bad)  
   14002269c:	stc    
   14002269d:	cli    
   14002269e:	cli    
   14002269f:	(bad)  
   1400226a0:	stc    
   1400226a1:	cli    
   1400226a2:	cli    
   1400226a3:	(bad)  
   1400226a4:	stc    
   1400226a5:	cli    
   1400226a6:	cli    
   1400226a7:	(bad)  
   1400226a8:	(bad)  
   1400226a9:	(bad)  
   1400226aa:	(bad)  
   1400226ab:	jmp    QWORD PTR [rsp]
   1400226ae:	and    al,0x7f
   1400226b0:	add    BYTE PTR [rax],al
   1400226b2:	add    BYTE PTR [rbx],bl
	...
   1400226c0:	(bad)  
   1400226c1:	jle    0x1400226c3
   1400226c3:	call   FWORD PTR [rbx+0x6dff98de]
   1400226c9:	iret   
   1400226ca:	push   0xffffffffa1ad40ff
   1400226cf:	dec    DWORD PTR [rip+0xffe086]        # 0x14102075b
   1400226d5:	jns    0x1400226c2
   1400226d7:	dec    DWORD PTR [rsi]
   1400226d9:	jg     0x1400226b5
   1400226db:	dec    DWORD PTR [rdi-0x63]
   1400226de:	movabs ds:0x85d0e8ff53bfc1ff,al
   1400226e7:	(bad)  
   1400226e8:	(bad)  
   1400226e9:	jle    0x1400226eb
   1400226eb:	(bad)  
   1400226ec:	cli    
   1400226ed:	cli    
   1400226ee:	cli    
   1400226ef:	(bad)  
   1400226f0:	cli    
   1400226f1:	cli    
   1400226f2:	cli    
   1400226f3:	(bad)  
   1400226f4:	cli    
   1400226f5:	cli    
   1400226f6:	cli    
   1400226f7:	(bad)  
   1400226f8:	cli    
   1400226f9:	cli    
   1400226fa:	cli    
   1400226fb:	(bad)  
   1400226fc:	cli    
   1400226fd:	cli    
   1400226fe:	cli    
   1400226ff:	(bad)  
   140022700:	cli    
   140022701:	cli    
   140022702:	cli    
   140022703:	(bad)  
   140022704:	cli    
   140022705:	cli    
   140022706:	cli    
   140022707:	(bad)  
   140022708:	(bad)  
   140022709:	(bad)  
   14002270a:	(bad)  
   14002270b:	jmp    QWORD PTR [rsp]
   14002270e:	and    al,0x7f
   140022710:	add    BYTE PTR [rax],al
   140022712:	add    BYTE PTR [rbx],bl
	...
   140022720:	(bad)  
   140022721:	jle    0x140022723
   140022723:	call   FWORD PTR [rbx+0x45ff98de]
   140022729:	mov    al,0x9b
   14002272b:	inc    DWORD PTR [rax]
   14002272d:	xor    edi,0xffd7abff
   140022733:	jmp    QWORD PTR [rcx+rbx*4]
   140022736:	(bad)  
   140022737:	inc    DWORD PTR [rax]
   140022739:	xchg   ch,bh
   14002273b:	inc    DWORD PTR [rax]
   14002273d:	jnp    0x14002272c
   14002273f:	jmp    FWORD PTR [rsi-0x66]
   140022742:	xchg   esi,eax
   140022743:	(bad)  
   140022744:	call   0x14001ad19
   140022749:	jle    0x14002274b
   14002274b:	(bad)  
   14002274c:	cli    
   14002274d:	sti    
   14002274e:	sti    
   14002274f:	(bad)  
   140022750:	cli    
   140022751:	sti    
   140022752:	sti    
   140022753:	(bad)  
   140022754:	cli    
   140022755:	sti    
   140022756:	sti    
   140022757:	(bad)  
   140022758:	cli    
   140022759:	sti    
   14002275a:	sti    
   14002275b:	(bad)  
   14002275c:	cli    
   14002275d:	sti    
   14002275e:	sti    
   14002275f:	(bad)  
   140022760:	cli    
   140022761:	sti    
   140022762:	sti    
   140022763:	(bad)  
   140022764:	cli    
   140022765:	sti    
   140022766:	sti    
   140022767:	(bad)  
   140022768:	(bad)  
   140022769:	(bad)  
   14002276a:	(bad)  
   14002276b:	jmp    QWORD PTR [rsp]
   14002276e:	and    al,0x7f
   140022770:	add    BYTE PTR [rax],al
   140022772:	add    BYTE PTR [rbx],bl
	...
   140022780:	(bad)  
   140022781:	jle    0x140022783
   140022783:	call   FWORD PTR [rbx+0xfff98de]
   140022789:	test   ebx,ebx
   14002278b:	inc    DWORD PTR [rax]
   14002278d:	test   esp,edi
   14002278f:	push   rax
   140022791:	clc    
   140022792:	(bad)  
   140022793:	push   rsi
   140022795:	sti    
   140022796:	(bad)  
   140022797:	(bad)  
   140022798:	js     0x14002275b
   14002279a:	(bad)  
   14002279b:	inc    DWORD PTR [rsi]
   14002279d:	xchg   cl,bh
   14002279f:	dec    DWORD PTR [rip+0xffffffffe8ffd273]        # 0x12901fa18
   1400227a5:	rol    BYTE PTR [rbp+0x7effff],1
   1400227ab:	(bad)  
   1400227ac:	sti    
   1400227ad:	sti    
   1400227ae:	sti    
   1400227af:	(bad)  
   1400227b0:	sti    
   1400227b1:	sti    
   1400227b2:	sti    
   1400227b3:	(bad)  
   1400227b4:	sti    
   1400227b5:	sti    
   1400227b6:	sti    
   1400227b7:	(bad)  
   1400227b8:	sti    
   1400227b9:	sti    
   1400227ba:	sti    
   1400227bb:	(bad)  
   1400227bc:	sti    
   1400227bd:	sti    
   1400227be:	sti    
   1400227bf:	(bad)  
   1400227c0:	sti    
   1400227c1:	sti    
   1400227c2:	sti    
   1400227c3:	(bad)  
   1400227c4:	sti    
   1400227c5:	sti    
   1400227c6:	sti    
   1400227c7:	(bad)  
   1400227c8:	(bad)  
   1400227c9:	(bad)  
   1400227ca:	(bad)  
   1400227cb:	jmp    QWORD PTR [rsp]
   1400227ce:	and    al,0x7f
   1400227d0:	add    BYTE PTR [rax],al
   1400227d2:	add    BYTE PTR [rbx],bl
	...
   1400227e0:	(bad)  
   1400227e1:	jle    0x1400227e3
   1400227e3:	call   FWORD PTR [rbx+0x3ff98de]
   1400227e9:	jnp    0x1400227d4
   1400227eb:	inc    DWORD PTR [rax]
   1400227ed:	mov    dh,bh
   1400227ef:	push   rax
   1400227f1:	clc    
   1400227f2:	(bad)  
   1400227f3:	(bad)  
   1400227f4:	(bad)  
   1400227f5:	(bad)  
   1400227f6:	(bad)  
   1400227f7:	(bad)  
   1400227f8:	(bad)  
   1400227f9:	(bad)  
   1400227fa:	(bad)  
   1400227fb:	call   FWORD PTR [rcx+0xffffcf]
   140022801:	outs   dx,BYTE PTR ds:[rsi]
   140022802:	fdivr  st,st(7)
   140022804:	(bad)  
   140022806:	mov    edi,edi
   140022808:	(bad)  
   140022809:	jle    0x14002280b
   14002280b:	(bad)  
   14002280c:	sti    
   14002280d:	cld    
   14002280e:	cld    
   14002280f:	(bad)  
   140022810:	sti    
   140022811:	cld    
   140022812:	cld    
   140022813:	(bad)  
   140022814:	sti    
   140022815:	cld    
   140022816:	cld    
   140022817:	(bad)  
   140022818:	sti    
   140022819:	cld    
   14002281a:	cld    
   14002281b:	(bad)  
   14002281c:	sti    
   14002281d:	cld    
   14002281e:	cld    
   14002281f:	(bad)  
   140022820:	sti    
   140022821:	cld    
   140022822:	cld    
   140022823:	(bad)  
   140022824:	sti    
   140022825:	cld    
   140022826:	cld    
   140022827:	(bad)  
   140022828:	(bad)  
   140022829:	(bad)  
   14002282a:	(bad)  
   14002282b:	jmp    QWORD PTR ds:0x7f24
   140022832:	add    BYTE PTR [rbx],bl
	...
   140022840:	(bad)  
   140022841:	jle    0x140022843
   140022843:	call   FWORD PTR [rbx+0x11ff98de]
   140022849:	xchg   eax,ebx
   14002284b:	inc    DWORD PTR [rax]
   14002284d:	cmp    ecx,0xffffffff
   140022850:	lock clc 
   140022852:	(bad)  
   140022853:	push   rax
   140022855:	clc    
   140022856:	(bad)  
   140022857:	jmp    FWORD PTR [rsp+rdi*4-0x1]
   14002285b:	inc    DWORD PTR [rax]
   14002285d:	(bad)  
   14002285e:	clc    
   14002285f:	call   QWORD PTR [rdx]
   140022861:	jbe    0x140022835
   140022863:	(bad)  
   140022864:	call   0x14001ae39
   140022869:	jle    0x14002286b
   14002286b:	(bad)  
   14002286c:	cld    
   14002286d:	cld    
   14002286e:	cld    
   14002286f:	(bad)  
   140022870:	cld    
   140022871:	cld    
   140022872:	cld    
   140022873:	(bad)  
   140022874:	cld    
   140022875:	cld    
   140022876:	cld    
   140022877:	(bad)  
   140022878:	cld    
   140022879:	cld    
   14002287a:	cld    
   14002287b:	(bad)  
   14002287c:	cld    
   14002287d:	cld    
   14002287e:	cld    
   14002287f:	(bad)  
   140022880:	std    
   140022881:	std    
   140022882:	std    
   140022883:	(bad)  
   140022884:	(bad)  
   140022885:	(bad)  
   140022886:	(bad)  
   140022887:	(bad)  
   140022888:	(bad)  
   140022889:	(bad)  
   14002288a:	(bad)  
   14002288b:	jmp    QWORD PTR [rsi]
   14002288d:	es and eax,0x80
   140022893:	sbb    eax,DWORD PTR [rax]
	...
   14002289d:	add    BYTE PTR [rax],al
   14002289f:	add    bh,bh
   1400228a1:	jle    0x1400228a3
   1400228a3:	call   FWORD PTR [rbx+0x4fff98de]
   1400228a9:	mov    ch,0x91
   1400228ab:	inc    DWORD PTR [rax]
   1400228ad:	jg     0x1400228a2
   1400228af:	call   FWORD PTR [rdi+rcx*8-0x6ae40003]
   1400228b6:	(bad)  
   1400228b7:	inc    DWORD PTR [rax]
   1400228b9:	test   esp,edi
   1400228bb:	inc    DWORD PTR [rax]
   1400228bd:	jle    0x1400228b1
   1400228bf:	inc    DWORD PTR [rdi-0x17007560]
   1400228c5:	rol    BYTE PTR [rbp+0x7effff],1
   1400228cb:	(bad)  
   1400228cc:	std    
   1400228cd:	std    
   1400228ce:	std    
   1400228cf:	(bad)  
   1400228d0:	std    
   1400228d1:	std    
   1400228d2:	std    
   1400228d3:	(bad)  
   1400228d4:	std    
   1400228d5:	std    
   1400228d6:	std    
   1400228d7:	(bad)  
   1400228d8:	(bad)  
   1400228d9:	(bad)  
   1400228da:	(bad)  
   1400228db:	(bad)  
   1400228dc:	(bad)  
   1400228dd:	(bad)  
   1400228de:	(bad)  
   1400228df:	(bad)  
   1400228e0:	(bad)  
   1400228e1:	(bad)  
   1400228e2:	(bad)  
   1400228e3:	(bad)  
   1400228e4:	sti    
   1400228e5:	sti    
   1400228e6:	sti    
   1400228e7:	(bad)  
   1400228e8:	(bad)  
   1400228e9:	(bad)  
   1400228ea:	(bad)  
   1400228eb:	jmp    QWORD PTR [rcx]
   1400228ed:	and    DWORD PTR [rdx],esp
   1400228ef:	jle    0x1400228f1
   1400228f1:	add    BYTE PTR [rax],al
   1400228f3:	sbb    eax,DWORD PTR [rax]
	...
   1400228fd:	add    BYTE PTR [rax],al
   1400228ff:	add    bh,bh
   140022901:	jle    0x140022903
   140022903:	call   FWORD PTR [rbx+0x79ff98de]
   140022909:	int    0x65
   14002290b:	jmp    QWORD PTR [rax-0x4d]
   14002290e:	(bad)  
   14002290f:	jmp    QWORD PTR [rax]
   140022911:	mov    esp,ss
   140022913:	inc    DWORD PTR [rdx]
   140022915:	jle    0x140022907
   140022917:	jmp    FWORD PTR [rdx]
   140022919:	mov    bl,dl
   14002291b:	dec    DWORD PTR [rsi-0x2200785c]
   140022921:	mov    edx,0xd0e8ff4c
   140022926:	test   edi,edi
   140022928:	(bad)  
   140022929:	jle    0x14002292b
   14002292b:	(bad)  
   14002292c:	(bad)  
   14002292d:	(bad)  
   14002292e:	(bad)  
   14002292f:	(bad)  
   140022930:	(bad)  
   140022931:	(bad)  
   140022932:	(bad)  
   140022933:	(bad)  
   140022934:	(bad)  
   140022935:	(bad)  
   140022936:	(bad)  
   140022937:	push   rdi
   140022939:	div    edi
   14002293b:	dec    edi
   14002293d:	iret   
   14002293e:	iret   
   14002293f:	dec    ecx
   140022941:	leave  
   140022942:	leave  
   140022943:	(bad)  
   140022944:	mov    ebp,0xe1ffbdbd
   140022949:	loope  0x14002292c
   14002294b:	call   FWORD PTR [rsp+rbx*1]
   14002294e:	sbb    ebp,DWORD PTR [rsi+0x0]
   140022951:	add    BYTE PTR [rax],al
   140022953:	(bad)  
	...
   140022960:	(bad)  
   140022961:	jle    0x140022963
   140022963:	stc    
   140022964:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022965:	fstp   QWORD PTR [rdx-0x6b23561f]
   14002296b:	push   QWORD PTR [rsi-0x38006e27]
   140022971:	(bad)  
   140022972:	(bad)  
   140022973:	jmp    rax
   140022975:	rol    DWORD PTR [rsi-0x7a2f1701],1
   14002297b:	(bad)  
   14002297c:	call   0x12901af51
   140022981:	rol    BYTE PTR [rbp-0x68291401],1
   140022987:	(bad)  
   140022988:	inc    DWORD PTR [rax-0x10100fd]
   14002298e:	(bad)  
   14002298f:	(bad)  
   140022990:	(bad)  
   140022991:	(bad)  
   140022992:	(bad)  
   140022993:	(bad)  
   140022994:	(bad)  
   140022995:	(bad)  
   140022996:	(bad)  
   140022997:	(bad)  
   140022998:	call   0xec021285
   14002299d:	stos   DWORD PTR es:[rdi],eax
   14002299e:	stos   DWORD PTR es:[rdi],eax
   14002299f:	(bad)  
   1400229a0:	fstp   st(5)
   1400229a2:	(bad)  
   1400229a4:	in     al,0xe4
   1400229a6:	jrcxz  0x1400229a7
   1400229a8:	mov    edi,0x1313ebc8
   1400229ae:	adc    esi,DWORD PTR [rax+rax*1]
	...
   1400229bd:	add    BYTE PTR [rax],al
   1400229bf:	add    bh,bh
   1400229c1:	jle    0x1400229c3
   1400229c3:	nop
   1400229c4:	(bad)  
   1400229c5:	jle    0x1400229c7
   1400229c7:	stc    
   1400229c8:	(bad)  
   1400229c9:	jle    0x1400229cb
   1400229cb:	(bad)  
   1400229cc:	(bad)  
   1400229cd:	jle    0x1400229cf
   1400229cf:	(bad)  
   1400229d0:	(bad)  
   1400229d1:	jle    0x1400229d3
   1400229d3:	(bad)  
   1400229d4:	(bad)  
   1400229d5:	jle    0x1400229d7
   1400229d7:	(bad)  
   1400229d8:	(bad)  
   1400229d9:	jle    0x1400229db
   1400229db:	(bad)  
   1400229dc:	(bad)  
   1400229dd:	jle    0x1400229df
   1400229df:	(bad)  
   1400229e0:	(bad)  
   1400229e1:	jle    0x1400229e3
   1400229e3:	(bad)  
   1400229e4:	inc    DWORD PTR [rax-0x4b0000fd]
   1400229ea:	ins    BYTE PTR es:[rdi],dx
   1400229eb:	(bad)  
   1400229ec:	(bad)  
   1400229ed:	(bad)  
   1400229ee:	(bad)  
   1400229ef:	(bad)  
   1400229f0:	(bad)  
   1400229f1:	(bad)  
   1400229f2:	(bad)  
   1400229f3:	(bad)  
   1400229f4:	(bad)  
   1400229f5:	(bad)  
   1400229f6:	(bad)  
   1400229f7:	jmp    rsi
   1400229f9:	out    0xe6,al
   1400229fb:	inc    edi
   1400229fd:	mov    edi,0xffffffff
   140022a03:	jmp    rsi
   140022a05:	out    0xe8,al
   140022a07:	in     eax,dx
   140022a08:	rex.X
   140022a09:	rex.X
   140022a0a:	rex.X
   140022a0b:	rex.WXB add BYTE PTR [r8],al
	...
   140022a2a:	add    BYTE PTR [rax],al
   140022a2c:	rcl    ecx,1
   140022a2e:	sar    edi,1
   140022a30:	(bad)  
   140022a31:	(bad)  
   140022a32:	(bad)  
   140022a33:	(bad)  
   140022a34:	(bad)  
   140022a35:	(bad)  
   140022a36:	(bad)  
   140022a37:	(bad)  
   140022a38:	(bad)  
   140022a39:	(bad)  
   140022a3a:	(bad)  
   140022a3b:	(bad)  
   140022a3c:	(bad)  
   140022a3d:	(bad)  
   140022a3e:	(bad)  
   140022a3f:	(bad)  
   140022a40:	(bad)  
   140022a41:	(bad)  
   140022a42:	(bad)  
   140022a43:	(bad)  
   140022a44:	(bad)  
   140022a45:	(bad)  
   140022a46:	(bad)  
   140022a47:	(bad)  
   140022a48:	(bad)  
   140022a49:	(bad)  
   140022a4a:	(bad)  
   140022a4b:	(bad)  
   140022a4c:	(bad)  
   140022a4d:	(bad)  
   140022a4e:	(bad)  
   140022a4f:	(bad)  
   140022a50:	(bad)  
   140022a51:	(bad)  
   140022a52:	(bad)  
   140022a53:	(bad)  
   140022a54:	(bad)  
   140022a55:	(bad)  
   140022a56:	(bad)  
   140022a57:	(bad)  
   140022a58:	in     al,dx
   140022a59:	in     al,dx
   140022a5a:	in     al,dx
   140022a5b:	inc    esi
   140022a5d:	mov    dh,0xff
   140022a60:	(bad)  
   140022a61:	(bad)  
   140022a62:	(bad)  
   140022a63:	lock rex
   140022a65:	rex (bad) 
   140022a67:	rex.WRB add BYTE PTR [r8],r8b
	...
   140022a8a:	add    BYTE PTR [rax],al
   140022a8c:	rcl    dl,cl
   140022a8e:	sar    bh,cl
   140022a90:	(bad)  
   140022a91:	(bad)  
   140022a92:	(bad)  
   140022a93:	(bad)  
   140022a94:	(bad)  
   140022a95:	(bad)  
   140022a96:	(bad)  
   140022a97:	(bad)  
   140022a98:	(bad)  
   140022a99:	(bad)  
   140022a9a:	(bad)  
   140022a9b:	(bad)  
   140022a9c:	(bad)  
   140022a9d:	(bad)  
   140022a9e:	(bad)  
   140022a9f:	(bad)  
   140022aa0:	(bad)  
   140022aa1:	(bad)  
   140022aa2:	(bad)  
   140022aa3:	(bad)  
   140022aa4:	(bad)  
   140022aa5:	(bad)  
   140022aa6:	(bad)  
   140022aa7:	(bad)  
   140022aa8:	(bad)  
   140022aa9:	(bad)  
   140022aaa:	(bad)  
   140022aab:	(bad)  
   140022aac:	(bad)  
   140022aad:	(bad)  
   140022aae:	(bad)  
   140022aaf:	(bad)  
   140022ab0:	(bad)  
   140022ab1:	(bad)  
   140022ab2:	(bad)  
   140022ab3:	(bad)  
   140022ab4:	(bad)  
   140022ab5:	(bad)  
   140022ab6:	(bad)  
   140022ab7:	jmp    rbx
   140022ab9:	jrcxz  0x140022aa0
   140022abb:	inc    esp
   140022abd:	(bad)  
   140022abe:	(bad)
   140022ac1:	rex.WX
   140022ac2:	rex.WX
   140022ac3:	rex.WRXB add BYTE PTR [r8],r8b
	...
   140022aea:	add    BYTE PTR [rax],al
   140022aec:	(bad)  
   140022aed:	(bad)  
   140022aee:	(bad)  
   140022aef:	call   rcx
   140022af1:	rcl    ecx,1
   140022af3:	call   rcx
   140022af5:	rcl    ecx,1
   140022af7:	call   rax
   140022af9:	rcl    al,1
   140022afb:	call   rax
   140022afd:	rcl    al,1
   140022aff:	call   rax
   140022b01:	rcl    al,1
   140022b03:	call   rax
   140022b05:	rcl    al,1
   140022b07:	call   rax
   140022b09:	rcl    al,1
   140022b0b:	call   rax
   140022b0d:	rcl    al,1
   140022b0f:	dec    edi
   140022b11:	iret   
   140022b12:	iret   
   140022b13:	call   rbp
   140022b15:	(bad)  
   140022b16:	(bad)  
   140022b17:	dec    edx
   140022b19:	retf   0xfbca
   140022b1c:	rex.WX
   140022b1d:	rex.WX
   140022b1e:	rex.WX push rsp
	...
   140022c00:	loopne 0x140022c02
   140022c02:	(bad)  
   140022c03:	add    al,ah
   140022c05:	add    BYTE PTR [rdi],al
   140022c07:	add    al,ah
   140022c09:	add    BYTE PTR [rdi],al
   140022c0b:	add    al,ah
   140022c0d:	add    BYTE PTR [rdi],al
   140022c0f:	add    al,ah
   140022c11:	add    BYTE PTR [rdi],al
   140022c13:	add    al,ah
   140022c15:	add    BYTE PTR [rdi],al
   140022c17:	add    al,ah
   140022c19:	add    BYTE PTR [rdi],al
   140022c1b:	add    al,ah
   140022c1d:	add    BYTE PTR [rdi],al
   140022c1f:	add    BYTE PTR [rax],al
   140022c21:	add    BYTE PTR [rdi],al
   140022c23:	add    BYTE PTR [rax],al
   140022c25:	add    BYTE PTR [rdi],al
   140022c27:	add    BYTE PTR [rax],al
   140022c29:	add    BYTE PTR [rdi],al
   140022c2b:	add    BYTE PTR [rax],al
   140022c2d:	add    BYTE PTR [rdi],al
   140022c2f:	add    BYTE PTR [rax],al
   140022c31:	add    BYTE PTR [rdi],al
   140022c33:	add    BYTE PTR [rax],al
   140022c35:	add    BYTE PTR [rdi],al
   140022c37:	add    BYTE PTR [rax],al
   140022c39:	add    BYTE PTR [rdi],al
   140022c3b:	add    BYTE PTR [rax],al
   140022c3d:	add    BYTE PTR [rdi],al
   140022c3f:	add    BYTE PTR [rax],al
   140022c41:	add    BYTE PTR [rdi],al
   140022c43:	add    BYTE PTR [rax],al
   140022c45:	add    BYTE PTR [rdi],cl
   140022c47:	add    BYTE PTR [rax],al
   140022c49:	add    BYTE PTR [rdi],bl
   140022c4b:	add    al,ah
   140022c4d:	add    BYTE PTR [rdi],bh
   140022c4f:	add    al,ah
   140022c51:	add    BYTE PTR [rdi+0x0],bh
   140022c54:	loopne 0x140022c56
   140022c56:	inc    DWORD PTR [rax]
   140022c58:	(bad)  
   140022c59:	(bad)  
   140022c5a:	inc    DWORD PTR [rax]
   140022c5c:	(bad)  
   140022c5d:	(bad)  
   140022c5e:	inc    DWORD PTR [rax]
   140022c60:	sub    BYTE PTR [rax],al
   140022c62:	add    BYTE PTR [rax],al
   140022c64:	and    BYTE PTR [rax],al
   140022c66:	add    BYTE PTR [rax],al
   140022c68:	add    BYTE PTR [rax],al
   140022c6b:	add    BYTE PTR [rcx],al
   140022c6d:	add    BYTE PTR [rax],ah
   140022c6f:	add    BYTE PTR [rax],al
   140022c71:	add    BYTE PTR [rax],al
   140022c73:	add    BYTE PTR [rax+0x10],al
	...
   140022c9d:	add    BYTE PTR [rax],al
   140022c9f:	sldt   WORD PTR [rax]
   140022ca2:	add    BYTE PTR [rip+0x2b000000],ch        # 0x16b022ca8
   140022ca8:	add    BYTE PTR [rax],al
   140022caa:	add    BYTE PTR [rbx],ch
   140022cac:	add    BYTE PTR [rax],al
   140022cae:	add    BYTE PTR [rbx],ch
   140022cb0:	add    BYTE PTR [rax],al
   140022cb2:	add    BYTE PTR [rbx],ch
   140022cb4:	add    BYTE PTR [rax],al
   140022cb6:	add    BYTE PTR [rbx],ch
   140022cb8:	add    BYTE PTR [rax],al
   140022cba:	add    BYTE PTR [rbx],ch
   140022cbc:	add    BYTE PTR [rax],al
   140022cbe:	add    BYTE PTR [rbx],ch
   140022cc0:	add    BYTE PTR [rax],al
   140022cc2:	add    BYTE PTR [rbx],ch
   140022cc4:	add    BYTE PTR [rax],al
   140022cc6:	add    BYTE PTR [rbx],ch
   140022cc8:	add    BYTE PTR [rax],al
   140022cca:	add    BYTE PTR [rbx],ch
   140022ccc:	add    BYTE PTR [rax],al
   140022cce:	add    BYTE PTR [rbx],ch
   140022cd0:	add    BYTE PTR [rax],al
   140022cd2:	add    BYTE PTR [rbx],ch
   140022cd4:	add    BYTE PTR [rax],al
   140022cd6:	add    BYTE PTR [rbx],ch
   140022cd8:	add    BYTE PTR [rax],al
   140022cda:	add    BYTE PTR [rbx],ch
   140022cdc:	add    BYTE PTR [rax],al
   140022cde:	add    BYTE PTR [rbx],ch
   140022ce0:	add    BYTE PTR [rax],al
   140022ce2:	add    BYTE PTR [rbx],ch
   140022ce4:	add    BYTE PTR [rax],al
   140022ce6:	add    BYTE PTR [rbx],ch
   140022ce8:	add    BYTE PTR [rax],al
   140022cea:	add    BYTE PTR [rax+rax*1],ch
   140022ced:	add    BYTE PTR [rax],al
   140022cef:	(bad)  
   140022cf0:	add    BYTE PTR [rax],al
   140022cf2:	add    BYTE PTR [rbx],ch
   140022cf4:	add    BYTE PTR [rax],al
   140022cf6:	add    BYTE PTR [rcx],dl
	...
   140022d18:	jge    0x140022d97
   140022d1a:	jge    0x140022cc8
   140022d1c:	xchg   esi,eax
   140022d1d:	xchg   esi,eax
   140022d1e:	xchg   esi,eax
   140022d1f:	rcr    BYTE PTR [rbp+rbx*4-0x63633063],0x9c
   140022d27:	(bad)  
   140022d28:	pushf  
   140022d29:	pushf  
   140022d2a:	pushf  
   140022d2b:	(bad)  
   140022d2c:	pushf  
   140022d2d:	fwait
   140022d2e:	fwait
   140022d2f:	(bad)  
   140022d30:	pushf  
   140022d31:	pushf  
   140022d32:	pushf  
   140022d33:	(bad)  
   140022d34:	fwait
   140022d35:	pushf  
   140022d36:	pushf  
   140022d37:	(bad)  
   140022d38:	fwait
   140022d39:	pushf  
   140022d3a:	pushf  
   140022d3b:	(bad)  
   140022d3c:	fwait
   140022d3d:	pushf  
   140022d3e:	pushf  
   140022d3f:	(bad)  
   140022d40:	fwait
   140022d41:	pushf  
   140022d42:	pushf  
   140022d43:	(bad)  
   140022d44:	fwait
   140022d45:	fwait
   140022d46:	fwait
   140022d47:	(bad)  
   140022d48:	(bad)  
   140022d49:	fwait
   140022d4a:	fwait
   140022d4b:	(bad)  
   140022d4c:	(bad)  
   140022d4d:	fwait
   140022d4e:	fwait
   140022d4f:	(bad)  
   140022d50:	(bad)  
   140022d51:	fwait
   140022d52:	fwait
   140022d53:	(bad)  
   140022d54:	(bad)  
   140022d55:	fwait
   140022d56:	fwait
   140022d57:	(bad)  
   140022d58:	(bad)  
   140022d59:	fwait
   140022d5a:	fwait
   140022d5b:	(bad)  
   140022d5c:	(bad)  
   140022d5d:	fwait
   140022d5e:	fwait
   140022d5f:	(bad)  
   140022d60:	(bad)  
   140022d61:	(bad)  
   140022d62:	(bad)  
   140022d63:	(bad)  
   140022d64:	(bad)  
   140022d65:	(bad)  
   140022d66:	(bad)  
   140022d67:	(bad)  
   140022d68:	popf   
   140022d69:	popf   
   140022d6a:	popf   
   140022d6b:	iret   
   140022d6c:	xchg   esp,eax
   140022d6d:	xchg   esp,eax
   140022d6e:	xchg   esp,eax
   140022d6f:	int    0x0
   140022d71:	add    BYTE PTR [rax],al
   140022d73:	rex.WR add BYTE PTR [rax],r8b
   140022d76:	add    BYTE PTR [rsi],bl
	...
   140022d98:	(bad)  
   140022d99:	(bad)  
   140022d9a:	(bad)  
   140022d9b:	(bad)  
   140022d9c:	(bad)  
   140022d9d:	(bad)  
   140022d9e:	(bad)  
   140022d9f:	(bad)  
   140022da0:	(bad)  
   140022da1:	(bad)  
   140022da2:	(bad)  
   140022da3:	(bad)  
   140022da4:	(bad)  
   140022da5:	(bad)  
   140022da6:	(bad)  
   140022da7:	(bad)  
   140022da8:	(bad)  
   140022da9:	(bad)  
   140022daa:	(bad)  
   140022dab:	(bad)  
   140022dac:	(bad)  
   140022dad:	(bad)  
   140022dae:	(bad)  
   140022daf:	(bad)  
   140022db0:	(bad)  
   140022db1:	(bad)  
   140022db2:	(bad)  
   140022db3:	(bad)  
   140022db4:	(bad)  
   140022db5:	(bad)  
   140022db6:	(bad)  
   140022db7:	(bad)  
   140022db8:	(bad)  
   140022db9:	(bad)  
   140022dba:	(bad)  
   140022dbb:	(bad)  
   140022dbc:	(bad)  
   140022dbd:	(bad)  
   140022dbe:	(bad)  
   140022dbf:	(bad)  
   140022dc0:	(bad)  
   140022dc1:	(bad)  
   140022dc2:	(bad)  
   140022dc3:	(bad)  
   140022dc4:	(bad)  
   140022dc5:	(bad)  
   140022dc6:	(bad)  
   140022dc7:	(bad)  
   140022dc8:	(bad)  
   140022dc9:	(bad)  
   140022dca:	(bad)  
   140022dcb:	(bad)  
   140022dcc:	(bad)  
   140022dcd:	(bad)  
   140022dce:	(bad)  
   140022dcf:	(bad)  
   140022dd0:	(bad)  
   140022dd1:	(bad)  
   140022dd2:	(bad)  
   140022dd3:	(bad)  
   140022dd4:	(bad)  
   140022dd5:	(bad)  
   140022dd6:	(bad)  
   140022dd7:	(bad)  
   140022dd8:	(bad)  
   140022dd9:	(bad)  
   140022dda:	(bad)  
   140022ddb:	(bad)  
   140022ddc:	(bad)  
   140022ddd:	(bad)  
   140022dde:	(bad)  
   140022ddf:	(bad)  
   140022de0:	(bad)  
   140022de1:	(bad)  
   140022de2:	(bad)  
   140022de3:	(bad)  
   140022de4:	(bad)  
   140022de5:	(bad)  
   140022de6:	(bad)  
   140022de7:	(bad)  
   140022de8:	(bad)  
   140022de9:	(bad)  
   140022dea:	(bad)  
   140022deb:	(bad)  
   140022dec:	(bad)  
   140022ded:	(bad)  
   140022dee:	(bad)  
   140022def:	inc    DWORD PTR [rax]
   140022df1:	add    BYTE PTR [rax],al
   140022df3:	rex.WX add BYTE PTR [rax],al
   140022df6:	add    BYTE PTR [rax+rax*1],bl
	...
   140022e15:	add    BYTE PTR [rax],al
   140022e17:	add    ch,dl
   140022e19:	(bad)  
   140022e1a:	(bad)  
   140022e1b:	push   rsp
   140022e1d:	hlt    
   140022e1e:	hlt    
   140022e1f:	(bad)  
   140022e20:	cli    
   140022e21:	cli    
   140022e22:	cli    
   140022e23:	(bad)  
   140022e24:	stc    
   140022e25:	stc    
   140022e26:	stc    
   140022e27:	push   rdi
   140022e29:	stc    
   140022e2a:	stc    
   140022e2b:	(bad)  
   140022e2c:	clc    
   140022e2d:	stc    
   140022e2e:	stc    
   140022e2f:	(bad)  
   140022e30:	clc    
   140022e31:	stc    
   140022e32:	stc    
   140022e33:	(bad)  
   140022e34:	clc    
   140022e35:	stc    
   140022e36:	stc    
   140022e37:	push   rsi
   140022e39:	clc    
   140022e3a:	clc    
   140022e3b:	push   rsi
   140022e3d:	clc    
   140022e3e:	clc    
   140022e3f:	push   rsi
   140022e41:	clc    
   140022e42:	clc    
   140022e43:	push   rsi
   140022e45:	clc    
   140022e46:	clc    
   140022e47:	push   rsi
   140022e49:	clc    
   140022e4a:	clc    
   140022e4b:	push   rsi
   140022e4d:	div    dh
   140022e4f:	push   rbp
   140022e51:	div    dh
   140022e53:	push   rbp
   140022e55:	div    dh
   140022e57:	push   rbp
   140022e59:	div    dh
   140022e5b:	push   rbp
   140022e5d:	div    dh
   140022e5f:	push   rbp
   140022e61:	div    dh
   140022e63:	push   rbp
   140022e65:	div    dh
   140022e67:	(bad)  
   140022e68:	sti    
   140022e69:	cli    
   140022e6a:	cli    
   140022e6b:	(bad)  
   140022e6c:	in     al,dx
   140022e6d:	in     eax,dx
   140022e6e:	in     eax,dx
   140022e6f:	std    
   140022e70:	add    BYTE PTR [rax],al
   140022e72:	add    BYTE PTR [rax+0x0],cl
   140022e75:	add    BYTE PTR [rax],al
   140022e77:	sbb    al,0x0
	...
   140022e95:	add    BYTE PTR [rax],al
   140022e97:	add    dh,dl
   140022e99:	(bad)  
   140022e9a:	(bad)  
   140022e9b:	push   rbp
   140022e9d:	div    dh
   140022e9f:	(bad)  
   140022ea0:	sti    
   140022ea1:	cld    
   140022ea2:	cld    
   140022ea3:	(bad)  
   140022ea4:	stc    
   140022ea5:	stc    
   140022ea6:	stc    
   140022ea7:	(bad)  
   140022ea8:	stc    
   140022ea9:	stc    
   140022eaa:	stc    
   140022eab:	(bad)  
   140022eac:	clc    
   140022ead:	stc    
   140022eae:	stc    
   140022eaf:	(bad)  
   140022eb0:	clc    
   140022eb1:	stc    
   140022eb2:	stc    
   140022eb3:	(bad)  
   140022eb4:	clc    
   140022eb5:	stc    
   140022eb6:	stc    
   140022eb7:	(bad)  
   140022eb8:	clc    
   140022eb9:	clc    
   140022eba:	clc    
   140022ebb:	(bad)  
   140022ebc:	clc    
   140022ebd:	clc    
   140022ebe:	clc    
   140022ebf:	push   rdi
   140022ec1:	clc    
   140022ec2:	clc    
   140022ec3:	push   rdi
   140022ec5:	clc    
   140022ec6:	clc    
   140022ec7:	push   rdi
   140022ec9:	clc    
   140022eca:	clc    
   140022ecb:	push   rdi
   140022ecd:	clc    
   140022ece:	clc    
   140022ecf:	push   rdi
   140022ed1:	clc    
   140022ed2:	clc    
   140022ed3:	push   rdi
   140022ed5:	div    edi
   140022ed7:	push   rsi
   140022ed9:	div    edi
   140022edb:	push   rsi
   140022edd:	div    edi
   140022edf:	push   rsi
   140022ee1:	div    edi
   140022ee3:	push   rsi
   140022ee5:	div    edi
   140022ee7:	(bad)  
   140022ee8:	sti    
   140022ee9:	cld    
   140022eea:	cld    
   140022eeb:	(bad)  
   140022eec:	out    dx,al
   140022eed:	out    dx,eax
   140022eee:	out    dx,eax
   140022eef:	std    
   140022ef0:	add    BYTE PTR [rax],al
   140022ef2:	add    BYTE PTR [rcx+0x0],cl
   140022ef5:	add    BYTE PTR [rax],al
   140022ef7:	sbb    al,0x0
	...
   140022f15:	add    BYTE PTR [rax],al
   140022f17:	add    dh,dl
   140022f19:	(bad)  
   140022f1a:	(bad)  
   140022f1b:	push   rbp
   140022f1d:	div    dh
   140022f1f:	(bad)  
   140022f20:	sti    
   140022f21:	cld    
   140022f22:	cld    
   140022f23:	(bad)  
   140022f24:	stc    
   140022f25:	cli    
   140022f26:	cli    
   140022f27:	(bad)  
   140022f28:	stc    
   140022f29:	stc    
   140022f2a:	stc    
   140022f2b:	(bad)  
   140022f2c:	stc    
   140022f2d:	stc    
   140022f2e:	stc    
   140022f2f:	(bad)  
   140022f30:	clc    
   140022f31:	stc    
   140022f32:	stc    
   140022f33:	(bad)  
   140022f34:	clc    
   140022f35:	stc    
   140022f36:	stc    
   140022f37:	(bad)  
   140022f38:	clc    
   140022f39:	stc    
   140022f3a:	stc    
   140022f3b:	(bad)  
   140022f3c:	clc    
   140022f3d:	clc    
   140022f3e:	clc    
   140022f3f:	(bad)  
   140022f40:	clc    
   140022f41:	clc    
   140022f42:	clc    
   140022f43:	push   rdi
   140022f45:	clc    
   140022f46:	clc    
   140022f47:	push   rdi
   140022f49:	clc    
   140022f4a:	clc    
   140022f4b:	push   rdi
   140022f4d:	clc    
   140022f4e:	clc    
   140022f4f:	push   rdi
   140022f51:	clc    
   140022f52:	clc    
   140022f53:	push   rdi
   140022f55:	clc    
   140022f56:	clc    
   140022f57:	push   rdi
   140022f59:	div    edi
   140022f5b:	push   rsi
   140022f5d:	div    edi
   140022f5f:	push   rsi
   140022f61:	div    edi
   140022f63:	push   rsi
   140022f65:	div    edi
   140022f67:	(bad)  
   140022f68:	sti    
   140022f69:	cld    
   140022f6a:	cld    
   140022f6b:	(bad)  
   140022f6c:	out    dx,al
   140022f6d:	out    dx,eax
   140022f6e:	out    dx,eax
   140022f6f:	std    
   140022f70:	add    BYTE PTR [rax],al
   140022f72:	add    BYTE PTR [rcx+0x0],cl
   140022f75:	add    BYTE PTR [rax],al
   140022f77:	sbb    al,0x0
	...
   140022f95:	add    BYTE PTR [rax],al
   140022f97:	add    dh,dl
   140022f99:	(bad)  
   140022f9a:	(bad)  
   140022f9b:	push   rsi
   140022f9d:	div    dh
   140022f9f:	(bad)  
   140022fa0:	cli    
   140022fa1:	cld    
   140022fa2:	cld    
   140022fa3:	(bad)  
   140022fa4:	stc    
   140022fa5:	cli    
   140022fa6:	cli    
   140022fa7:	(bad)  
   140022fa8:	stc    
   140022fa9:	cli    
   140022faa:	cli    
   140022fab:	(bad)  
   140022fac:	stc    
   140022fad:	stc    
   140022fae:	stc    
   140022faf:	(bad)  
   140022fb0:	stc    
   140022fb1:	stc    
   140022fb2:	stc    
   140022fb3:	(bad)  
   140022fb4:	stc    
   140022fb5:	stc    
   140022fb6:	stc    
   140022fb7:	(bad)  
   140022fb8:	clc    
   140022fb9:	stc    
   140022fba:	stc    
   140022fbb:	(bad)  
   140022fbc:	clc    
   140022fbd:	stc    
   140022fbe:	stc    
   140022fbf:	(bad)  
   140022fc0:	clc    
   140022fc1:	clc    
   140022fc2:	clc    
   140022fc3:	(bad)  
   140022fc4:	clc    
   140022fc5:	clc    
   140022fc6:	clc    
   140022fc7:	push   rdi
   140022fc9:	clc    
   140022fca:	clc    
   140022fcb:	push   rdi
   140022fcd:	clc    
   140022fce:	clc    
   140022fcf:	push   rdi
   140022fd1:	clc    
   140022fd2:	clc    
   140022fd3:	push   rdi
   140022fd5:	clc    
   140022fd6:	clc    
   140022fd7:	push   rdi
   140022fd9:	clc    
   140022fda:	clc    
   140022fdb:	push   rsi
   140022fdd:	div    edi
   140022fdf:	push   rsi
   140022fe1:	div    edi
   140022fe3:	push   rsi
   140022fe5:	div    edi
   140022fe7:	(bad)  
   140022fe8:	sti    
   140022fe9:	cld    
   140022fea:	cld    
   140022feb:	(bad)  
   140022fec:	out    dx,al
   140022fed:	out    dx,eax
   140022fee:	out    dx,eax
   140022fef:	std    
   140022ff0:	add    BYTE PTR [rax],al
   140022ff2:	add    BYTE PTR [rcx+0x0],cl
   140022ff5:	add    BYTE PTR [rax],al
   140022ff7:	sbb    al,0x0
	...
   140023015:	add    BYTE PTR [rax],al
   140023017:	add    dh,dl
   140023019:	(bad)  
   14002301a:	(bad)  
   14002301b:	push   rsi
   14002301d:	div    dh
   14002301f:	(bad)  
   140023020:	cld    
   140023021:	cld    
   140023022:	cld    
   140023023:	(bad)  
   140023024:	cli    
   140023025:	cli    
   140023026:	cli    
   140023027:	(bad)  
   140023028:	stc    
   140023029:	cli    
   14002302a:	cli    
   14002302b:	(bad)  
   14002302c:	stc    
   14002302d:	cli    
   14002302e:	cli    
   14002302f:	(bad)  
   140023030:	stc    
   140023031:	cli    
   140023032:	cli    
   140023033:	(bad)  
   140023034:	stc    
   140023035:	stc    
   140023036:	stc    
   140023037:	(bad)  
   140023038:	clc    
   140023039:	stc    
   14002303a:	stc    
   14002303b:	(bad)  
   14002303c:	clc    
   14002303d:	stc    
   14002303e:	stc    
   14002303f:	(bad)  
   140023040:	clc    
   140023041:	stc    
   140023042:	stc    
   140023043:	(bad)  
   140023044:	clc    
   140023045:	stc    
   140023046:	stc    
   140023047:	(bad)  
   140023048:	clc    
   140023049:	clc    
   14002304a:	clc    
   14002304b:	push   rdi
   14002304d:	clc    
   14002304e:	clc    
   14002304f:	push   rdi
   140023051:	clc    
   140023052:	clc    
   140023053:	push   rdi
   140023055:	clc    
   140023056:	clc    
   140023057:	push   rdi
   140023059:	clc    
   14002305a:	clc    
   14002305b:	push   rdi
   14002305d:	div    edi
   14002305f:	push   rdi
   140023061:	div    edi
   140023063:	push   rsi
   140023065:	div    edi
   140023067:	(bad)  
   140023068:	sti    
   140023069:	cld    
   14002306a:	cld    
   14002306b:	(bad)  
   14002306c:	out    dx,al
   14002306d:	out    dx,eax
   14002306e:	out    dx,eax
   14002306f:	std    
   140023070:	add    BYTE PTR [rax],al
   140023072:	add    BYTE PTR [rcx+0x0],cl
   140023075:	add    BYTE PTR [rax],al
   140023077:	sbb    al,0x0
	...
   140023095:	add    BYTE PTR [rax],al
   140023097:	add    dh,dl
   140023099:	(bad)  
   14002309a:	(bad)  
   14002309b:	push   rsi
   14002309d:	div    dh
   14002309f:	(bad)  
   1400230a0:	cld    
   1400230a1:	cld    
   1400230a2:	cld    
   1400230a3:	(bad)  
   1400230a4:	cli    
   1400230a5:	cli    
   1400230a6:	cli    
   1400230a7:	(bad)  
   1400230a8:	cli    
   1400230a9:	cli    
   1400230aa:	cli    
   1400230ab:	(bad)  
   1400230ac:	stc    
   1400230ad:	cli    
   1400230ae:	cli    
   1400230af:	(bad)  
   1400230b0:	stc    
   1400230b1:	cli    
   1400230b2:	cli    
   1400230b3:	(bad)  
   1400230b4:	stc    
   1400230b5:	cli    
   1400230b6:	cli    
   1400230b7:	(bad)  
   1400230b8:	stc    
   1400230b9:	stc    
   1400230ba:	stc    
   1400230bb:	(bad)  
   1400230bc:	clc    
   1400230bd:	stc    
   1400230be:	stc    
   1400230bf:	(bad)  
   1400230c0:	clc    
   1400230c1:	stc    
   1400230c2:	stc    
   1400230c3:	(bad)  
   1400230c4:	clc    
   1400230c5:	stc    
   1400230c6:	stc    
   1400230c7:	(bad)  
   1400230c8:	clc    
   1400230c9:	stc    
   1400230ca:	stc    
   1400230cb:	(bad)  
   1400230cc:	clc    
   1400230cd:	clc    
   1400230ce:	clc    
   1400230cf:	(bad)  
   1400230d0:	clc    
   1400230d1:	clc    
   1400230d2:	clc    
   1400230d3:	push   rdi
   1400230d5:	clc    
   1400230d6:	clc    
   1400230d7:	push   rdi
   1400230d9:	clc    
   1400230da:	clc    
   1400230db:	push   rdi
   1400230dd:	clc    
   1400230de:	clc    
   1400230df:	push   rdi
   1400230e1:	clc    
   1400230e2:	clc    
   1400230e3:	push   rdi
   1400230e5:	div    edi
   1400230e7:	(bad)  
   1400230e8:	sti    
   1400230e9:	cld    
   1400230ea:	cld    
   1400230eb:	(bad)  
   1400230ec:	out    dx,al
   1400230ed:	out    dx,eax
   1400230ee:	out    dx,eax
   1400230ef:	std    
   1400230f0:	add    BYTE PTR [rax],al
   1400230f2:	add    BYTE PTR [rcx+0x0],cl
   1400230f5:	add    BYTE PTR [rax],al
   1400230f7:	sbb    al,0x0
	...
   140023105:	add    BYTE PTR [rax],al
   140023107:	add    bh,bh
   140023109:	jle    0x14002310b
   14002310b:	xchg   edi,edi
   14002310d:	jle    0x14002310f
   14002310f:	lock (bad) 
   140023111:	jle    0x140023113
   140023113:	(bad)  
   140023114:	(bad)  
   140023115:	jle    0x140023117
   140023117:	(bad)  
   140023118:	(bad)  
   140023119:	jle    0x14002311b
   14002311b:	(bad)  
   14002311c:	(bad)  
   14002311d:	jle    0x14002311f
   14002311f:	(bad)  
   140023120:	(bad)  
   140023121:	jle    0x140023123
   140023123:	(bad)  
   140023124:	(bad)  
   140023125:	jle    0x140023127
   140023127:	(bad)  
   140023128:	(bad)  
   140023129:	jle    0x14002312b
   14002312b:	(bad)  
   14002312c:	(bad)  
   14002312d:	jle    0x14002312f
   14002312f:	(bad)  
   140023130:	(bad)  
   140023131:	jle    0x140023133
   140023133:	(bad)  
   140023134:	(bad)  
   140023135:	jle    0x140023137
   140023137:	(bad)  
   140023138:	(bad)  
   140023139:	jle    0x14002313b
   14002313b:	(bad)  
   14002313c:	(bad)  
   14002313d:	jle    0x14002313f
   14002313f:	(bad)  
   140023140:	inc    DWORD PTR [rsp+rcx*1+0x72b6fcff]
   140023147:	(bad)  
   140023148:	clc    
   140023149:	stc    
   14002314a:	stc    
   14002314b:	(bad)  
   14002314c:	clc    
   14002314d:	stc    
   14002314e:	stc    
   14002314f:	(bad)  
   140023150:	clc    
   140023151:	stc    
   140023152:	stc    
   140023153:	(bad)  
   140023154:	clc    
   140023155:	clc    
   140023156:	clc    
   140023157:	(bad)  
   140023158:	clc    
   140023159:	clc    
   14002315a:	clc    
   14002315b:	push   rdi
   14002315d:	clc    
   14002315e:	clc    
   14002315f:	push   rdi
   140023161:	clc    
   140023162:	clc    
   140023163:	push   rdi
   140023165:	clc    
   140023166:	clc    
   140023167:	(bad)  
   140023168:	cld    
   140023169:	std    
   14002316a:	std    
   14002316b:	(bad)  
   14002316c:	out    dx,eax
   14002316d:	out    dx,eax
   14002316e:	out    dx,eax
   14002316f:	std    
   140023170:	add    BYTE PTR [rax],al
   140023172:	add    BYTE PTR [rcx+0x0],cl
   140023175:	add    BYTE PTR [rax],al
   140023177:	sbb    al,0x0
	...
   140023185:	add    BYTE PTR [rax],al
   140023187:	add    bh,bh
   140023189:	jle    0x14002318b
   14002318b:	lock stos BYTE PTR es:[rdi],al
   14002318d:	ficom  DWORD PTR [rsi-0x67216426]
   140023193:	call   FWORD PTR [rbx-0x64006722]
   140023199:	ficomp WORD PTR [rax-0x67216401]
   14002319f:	call   FWORD PTR [rbx-0x64006722]
   1400231a5:	ficomp WORD PTR [rax-0x67216201]
   1400231ab:	jmp    QWORD PTR [rcx-0x58006823]
   1400231b1:	fcom   QWORD PTR [rbp-0x6c255101]
   1400231b7:	push   QWORD PTR [rsi-0x40006e27]
   1400231bd:	fmul   DWORD PTR [rdi-0x61252601]
   1400231c3:	(bad)  
   1400231c4:	inc    DWORD PTR [rsp+rcx*1-0x6060601]
   1400231cb:	(bad)  
   1400231cc:	clc    
   1400231cd:	stc    
   1400231ce:	stc    
   1400231cf:	(bad)  
   1400231d0:	clc    
   1400231d1:	stc    
   1400231d2:	stc    
   1400231d3:	(bad)  
   1400231d4:	clc    
   1400231d5:	stc    
   1400231d6:	stc    
   1400231d7:	(bad)  
   1400231d8:	clc    
   1400231d9:	stc    
   1400231da:	stc    
   1400231db:	push   rdi
   1400231dd:	clc    
   1400231de:	clc    
   1400231df:	push   rdi
   1400231e1:	clc    
   1400231e2:	clc    
   1400231e3:	push   rdi
   1400231e5:	clc    
   1400231e6:	clc    
   1400231e7:	(bad)  
   1400231e8:	cld    
   1400231e9:	std    
   1400231ea:	std    
   1400231eb:	(bad)  
   1400231ec:	out    dx,eax
   1400231ed:	lock lock std 
   1400231f0:	add    BYTE PTR [rax],al
   1400231f2:	add    BYTE PTR [rcx+0x0],cl
   1400231f5:	add    BYTE PTR [rax],al
   1400231f7:	sbb    al,0x0
	...
   140023205:	add    BYTE PTR [rax],al
   140023207:	add    bh,bh
   140023209:	jle    0x14002320b
   14002320b:	call   FWORD PTR [rbx+0x6dff98de]
   140023211:	iret   
   140023212:	push   0x68cf6dff
   140023217:	jmp    FWORD PTR [rbp-0x31]
   14002321a:	push   0xffffffff8bb850ff
   14002321f:	jmp    QWORD PTR [rdi]
   140023221:	cwde   
   140023222:	mov    ebp,0xd58712ff
   140023227:	call   QWORD PTR [rdx]
   140023229:	adc    ecx,0xffffffff
   14002322c:	sub    edx,DWORD PTR [rax+rdi*4-0x794d9f01]
   140023233:	call   QWORD PTR [rcx-0x6200a038]
   140023239:	(bad)  
   14002323a:	pop    rsp
   14002323b:	jmp    FWORD PTR [rbx+rax*8-0x2c2900a8]
   140023242:	mov    edi,edi
   140023244:	(bad)  
   140023245:	jle    0x140023247
   140023247:	(bad)  
   140023248:	stc    
   140023249:	stc    
   14002324a:	stc    
   14002324b:	(bad)  
   14002324c:	stc    
   14002324d:	stc    
   14002324e:	stc    
   14002324f:	(bad)  
   140023250:	clc    
   140023251:	stc    
   140023252:	stc    
   140023253:	(bad)  
   140023254:	clc    
   140023255:	stc    
   140023256:	stc    
   140023257:	(bad)  
   140023258:	clc    
   140023259:	stc    
   14002325a:	stc    
   14002325b:	(bad)  
   14002325c:	clc    
   14002325d:	clc    
   14002325e:	clc    
   14002325f:	(bad)  
   140023260:	clc    
   140023261:	clc    
   140023262:	clc    
   140023263:	push   rdi
   140023265:	clc    
   140023266:	clc    
   140023267:	(bad)  
   140023268:	cld    
   140023269:	std    
   14002326a:	std    
   14002326b:	(bad)  
   14002326c:	out    dx,eax
   14002326d:	lock lock std 
   140023270:	add    BYTE PTR [rax],al
   140023272:	add    BYTE PTR [rcx+0x0],cl
   140023275:	add    BYTE PTR [rax],al
   140023277:	sbb    al,0x0
	...
   140023285:	add    BYTE PTR [rax],al
   140023287:	add    bh,bh
   140023289:	jle    0x14002328b
   14002328b:	call   FWORD PTR [rbx+0x6dff98de]
   140023291:	iret   
   140023292:	push   0x6bcc68ff
   140023297:	jmp    QWORD PTR [rip+0xffc098]        # 0x14101f335
   14002329d:	jg     0x140023292
   14002329f:	inc    DWORD PTR [rax]
   1400232a1:	cmp    eax,0xffffffff
   1400232a4:	add    BYTE PTR [rbx+rdi*8-0x57aff01],al
   1400232ab:	inc    DWORD PTR [rax]
   1400232ad:	xor    ah,0xff
   1400232b0:	add    BYTE PTR [rcx-0x17],bh
   1400232b3:	jmp    FWORD PTR [rip+0xffffffff9dffb98c]        # 0xde01ec45
   1400232b9:	rcr    DWORD PTR [rsi-0x1],0xbc
   1400232bd:	rcl    BYTE PTR [rdi+rdi*8-0x22],0xd2
   1400232c2:	xchg   edi,edi
   1400232c4:	(bad)  
   1400232c5:	jle    0x1400232c7
   1400232c7:	(bad)  
   1400232c8:	stc    
   1400232c9:	cli    
   1400232ca:	cli    
   1400232cb:	(bad)  
   1400232cc:	stc    
   1400232cd:	stc    
   1400232ce:	stc    
   1400232cf:	(bad)  
   1400232d0:	stc    
   1400232d1:	stc    
   1400232d2:	stc    
   1400232d3:	(bad)  
   1400232d4:	clc    
   1400232d5:	stc    
   1400232d6:	stc    
   1400232d7:	(bad)  
   1400232d8:	clc    
   1400232d9:	stc    
   1400232da:	stc    
   1400232db:	(bad)  
   1400232dc:	clc    
   1400232dd:	stc    
   1400232de:	stc    
   1400232df:	(bad)  
   1400232e0:	clc    
   1400232e1:	clc    
   1400232e2:	clc    
   1400232e3:	(bad)  
   1400232e4:	clc    
   1400232e5:	clc    
   1400232e6:	clc    
   1400232e7:	(bad)  
   1400232e8:	cld    
   1400232e9:	std    
   1400232ea:	std    
   1400232eb:	(bad)  
   1400232ec:	out    dx,eax
   1400232ed:	lock lock std 
   1400232f0:	add    BYTE PTR [rax],al
   1400232f2:	add    BYTE PTR [rcx+0x0],cl
   1400232f5:	add    BYTE PTR [rax],al
   1400232f7:	sbb    al,0x0
	...
   140023305:	add    BYTE PTR [rax],al
   140023307:	add    bh,bh
   140023309:	jle    0x14002330b
   14002330b:	call   FWORD PTR [rbx+0x6dff98de]
   140023311:	iret   
   140023312:	push   0xffffffffb49c2dff
   140023317:	inc    DWORD PTR [rax]
   140023319:	xor    edi,0xff951eff
   14002331f:	jmp    QWORD PTR [rbp+0xfffffd5]
   140023325:	nop
   140023326:	(bad)  
   140023327:	inc    DWORD PTR [rax]
   140023329:	mov    edi,edi
   14002332b:	inc    DWORD PTR [rax]
   14002332d:	mov    edi,edi
   14002332f:	inc    DWORD PTR [rax]
   140023331:	mov    bh,bh
   140023333:	inc    DWORD PTR [rax]
   140023335:	jnp    0x140023323
   140023337:	(bad)  
   140023338:	(bad)  
   140023339:	mov    ch,BYTE PTR [rcx+0x51bec9ff]
   14002333f:	jmp    rbp
   140023341:	rol    BYTE PTR [rbp+0x7effff],1
   140023347:	(bad)  
   140023348:	stc    
   140023349:	cli    
   14002334a:	cli    
   14002334b:	(bad)  
   14002334c:	stc    
   14002334d:	cli    
   14002334e:	cli    
   14002334f:	(bad)  
   140023350:	stc    
   140023351:	stc    
   140023352:	stc    
   140023353:	(bad)  
   140023354:	stc    
   140023355:	stc    
   140023356:	stc    
   140023357:	(bad)  
   140023358:	stc    
   140023359:	stc    
   14002335a:	stc    
   14002335b:	(bad)  
   14002335c:	clc    
   14002335d:	stc    
   14002335e:	stc    
   14002335f:	(bad)  
   140023360:	clc    
   140023361:	stc    
   140023362:	stc    
   140023363:	(bad)  
   140023364:	clc    
   140023365:	clc    
   140023366:	clc    
   140023367:	(bad)  
   140023368:	std    
   140023369:	std    
   14002336a:	std    
   14002336b:	(bad)  
   14002336c:	out    dx,eax
   14002336d:	lock lock std 
   140023370:	add    BYTE PTR [rax],al
   140023372:	add    BYTE PTR [rcx+0x0],cl
   140023375:	add    BYTE PTR [rax],al
   140023377:	sbb    al,0x0
	...
   140023385:	add    BYTE PTR [rax],al
   140023387:	add    bh,bh
   140023389:	jle    0x14002338b
   14002338b:	call   FWORD PTR [rbx+0x52ff98de]
   140023391:	mov    ecx,0x7e01ff88
   140023396:	lock inc DWORD PTR [rax]
   140023399:	xchg   edi,edi
   14002339b:	call   FWORD PTR [rsi]
   14002339d:	xchg   esi,eax
   14002339e:	(bad)  
   14002339f:	(bad)  
   1400233a0:	(bad)  
   1400233a1:	(bad)  
   1400233a2:	(bad)  
   1400233a3:	jmp    rsp
   1400233a5:	repz (bad) 
   1400233a7:	dec    DWORD PTR [rax-0x55]
   1400233aa:	(bad)  
   1400233ab:	inc    DWORD PTR [rax]
   1400233ad:	mov    bh,bh
   1400233af:	inc    DWORD PTR [rax]
   1400233b1:	mov    edi,edi
   1400233b3:	inc    DWORD PTR [rax]
   1400233b5:	mov    bh,bh
   1400233b7:	inc    DWORD PTR [rdx]
   1400233b9:	jbe    0x14002339d
   1400233bb:	call   QWORD PTR [rbp-0x1700885c]
   1400233c1:	rol    BYTE PTR [rbp+0x7effff],1
   1400233c7:	(bad)  
   1400233c8:	cli    
   1400233c9:	cli    
   1400233ca:	cli    
   1400233cb:	(bad)  
   1400233cc:	stc    
   1400233cd:	cli    
   1400233ce:	cli    
   1400233cf:	(bad)  
   1400233d0:	stc    
   1400233d1:	cli    
   1400233d2:	cli    
   1400233d3:	(bad)  
   1400233d4:	stc    
   1400233d5:	cli    
   1400233d6:	cli    
   1400233d7:	(bad)  
   1400233d8:	stc    
   1400233d9:	stc    
   1400233da:	stc    
   1400233db:	(bad)  
   1400233dc:	clc    
   1400233dd:	stc    
   1400233de:	stc    
   1400233df:	(bad)  
   1400233e0:	clc    
   1400233e1:	stc    
   1400233e2:	stc    
   1400233e3:	(bad)  
   1400233e4:	clc    
   1400233e5:	stc    
   1400233e6:	stc    
   1400233e7:	(bad)  
   1400233e8:	std    
   1400233e9:	(bad)  
   1400233ea:	(bad)  
   1400233eb:	push   rax
   1400233ed:	lock lock std 
   1400233f0:	add    BYTE PTR [rax],al
   1400233f2:	add    BYTE PTR [rcx+0x0],cl
   1400233f5:	add    BYTE PTR [rax],al
   1400233f7:	sbb    al,0x0
	...
   140023405:	add    BYTE PTR [rax],al
   140023407:	add    bh,bh
   140023409:	jle    0x14002340b
   14002340b:	call   FWORD PTR [rbx+0x27ff98de]
   140023411:	xchg   edi,eax
   140023412:	mov    ebp,0xf88200ff
   140023417:	inc    DWORD PTR [rax]
   140023419:	xchg   edi,edi
   14002341b:	call   FWORD PTR [rsi]
   14002341d:	xchg   edi,eax
   14002341e:	(bad)  
   14002341f:	(bad)  
   140023420:	(bad)  
   140023421:	(bad)  
   140023422:	(bad)  
   140023423:	(bad)  
   140023424:	(bad)  
   140023425:	(bad)  
   140023426:	(bad)  
   140023427:	(bad)  
   140023428:	(bad)  
   140023429:	(bad)  
   14002342a:	(bad)  
   14002342b:	call   FWORD PTR [rcx+0xcfffed0]
   140023431:	nop
   140023432:	(bad)  
   140023433:	inc    DWORD PTR [rax]
   140023435:	mov    edi,edi
   140023437:	inc    DWORD PTR [rax]
   140023439:	jle    0x14002342c
   14002343b:	inc    DWORD PTR [rdx-0x7b]
   14002343e:	mov    al,0xff
   140023440:	call   0x14001ba15
   140023445:	jle    0x140023447
   140023447:	(bad)  
   140023448:	cli    
   140023449:	cli    
   14002344a:	cli    
   14002344b:	(bad)  
   14002344c:	cli    
   14002344d:	cli    
   14002344e:	cli    
   14002344f:	(bad)  
   140023450:	stc    
   140023451:	cli    
   140023452:	cli    
   140023453:	(bad)  
   140023454:	stc    
   140023455:	cli    
   140023456:	cli    
   140023457:	(bad)  
   140023458:	stc    
   140023459:	cli    
   14002345a:	cli    
   14002345b:	(bad)  
   14002345c:	stc    
   14002345d:	stc    
   14002345e:	stc    
   14002345f:	(bad)  
   140023460:	clc    
   140023461:	stc    
   140023462:	stc    
   140023463:	(bad)  
   140023464:	clc    
   140023465:	stc    
   140023466:	stc    
   140023467:	(bad)  
   140023468:	std    
   140023469:	(bad)  
   14002346a:	(bad)  
   14002346b:	push   rax
   14002346d:	icebp  
   14002346e:	icebp  
   14002346f:	std    
   140023470:	add    BYTE PTR [rax],al
   140023472:	add    BYTE PTR [rcx+0x0],cl
   140023475:	add    BYTE PTR [rax],al
   140023477:	sbb    al,0x0
	...
   140023485:	add    BYTE PTR [rax],al
   140023487:	add    bh,bh
   140023489:	jle    0x14002348b
   14002348b:	call   FWORD PTR [rbx+0x15ff98de]
   140023491:	mov    ecx,edx
   140023493:	inc    DWORD PTR [rax]
   140023495:	test   ah,bh
   140023497:	inc    DWORD PTR [rax]
   140023499:	mov    bh,bh
   14002349b:	call   FWORD PTR [rsi]
   14002349d:	xchg   edi,eax
   14002349e:	(bad)  
   14002349f:	(bad)  
   1400234a0:	(bad)  
   1400234a1:	(bad)  
   1400234a2:	(bad)  
   1400234a3:	(bad)  
   1400234a4:	(bad)  
   1400234a5:	(bad)  
   1400234a6:	(bad)  
   1400234a7:	(bad)  
   1400234a8:	(bad)  
   1400234a9:	(bad)  
   1400234aa:	(bad)  
   1400234ab:	(bad)  
   1400234ac:	(bad)  
   1400234ad:	(bad)  
   1400234ae:	(bad)  
   1400234af:	(bad)  
   1400234b0:	fdivrp st(0),st
   1400234b2:	(bad)  
   1400234b3:	(bad)  
   1400234b4:	(bad)  
   1400234b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400234b6:	(bad)  
   1400234b7:	inc    DWORD PTR [rax]
   1400234b9:	test   cl,bh
   1400234bb:	jmp    QWORD PTR [rcx]
   1400234bd:	jns    0x140023482
   1400234bf:	(bad)  
   1400234c0:	call   0x14001ba95
   1400234c5:	jle    0x1400234c7
   1400234c7:	(bad)  
   1400234c8:	cli    
   1400234c9:	cli    
   1400234ca:	cli    
   1400234cb:	(bad)  
   1400234cc:	cli    
   1400234cd:	cli    
   1400234ce:	cli    
   1400234cf:	(bad)  
   1400234d0:	cli    
   1400234d1:	cli    
   1400234d2:	cli    
   1400234d3:	(bad)  
   1400234d4:	stc    
   1400234d5:	cli    
   1400234d6:	cli    
   1400234d7:	(bad)  
   1400234d8:	stc    
   1400234d9:	cli    
   1400234da:	cli    
   1400234db:	(bad)  
   1400234dc:	stc    
   1400234dd:	stc    
   1400234de:	stc    
   1400234df:	(bad)  
   1400234e0:	stc    
   1400234e1:	stc    
   1400234e2:	stc    
   1400234e3:	(bad)  
   1400234e4:	clc    
   1400234e5:	stc    
   1400234e6:	stc    
   1400234e7:	(bad)  
   1400234e8:	std    
   1400234e9:	(bad)  
   1400234ea:	(bad)  
   1400234eb:	push   rax
   1400234ed:	icebp  
   1400234ee:	icebp  
   1400234ef:	std    
   1400234f0:	add    BYTE PTR [rax],al
   1400234f2:	add    BYTE PTR [rcx+0x0],cl
   1400234f5:	add    BYTE PTR [rax],al
   1400234f7:	sbb    al,0x0
	...
   140023505:	add    BYTE PTR [rax],al
   140023507:	add    bh,bh
   140023509:	jle    0x14002350b
   14002350b:	call   FWORD PTR [rbx+0x14ff98de]
   140023511:	mov    ebx,edx
   140023513:	inc    DWORD PTR [rax]
   140023515:	test   ah,bh
   140023517:	inc    DWORD PTR [rax]
   140023519:	xchg   edi,edi
   14002351b:	call   FWORD PTR [rsi]
   14002351d:	xchg   edi,eax
   14002351e:	(bad)  
   14002351f:	(bad)  
   140023520:	(bad)  
   140023521:	(bad)  
   140023522:	(bad)  
   140023523:	(bad)  
   140023524:	(bad)  
   140023525:	(bad)  
   140023526:	(bad)  
   140023527:	(bad)  
   140023528:	(bad)  
   140023529:	(bad)  
   14002352a:	(bad)  
   14002352b:	(bad)  
   14002352c:	(bad)  
   14002352d:	(bad)  
   14002352e:	(bad)  
   14002352f:	(bad)  
   140023530:	fsubr  st,st(5)
   140023532:	(bad)  
   140023533:	push   QWORD PTR [rsi]
   140023535:	movabs ds:0x791ffff98300ffff,al
   14002353e:	(bad)  
   14002353f:	(bad)  
   140023540:	call   0x14001bb15
   140023545:	jle    0x140023547
   140023547:	(bad)  
   140023548:	cli    
   140023549:	sti    
   14002354a:	sti    
   14002354b:	(bad)  
   14002354c:	cli    
   14002354d:	cli    
   14002354e:	cli    
   14002354f:	(bad)  
   140023550:	cli    
   140023551:	cli    
   140023552:	cli    
   140023553:	(bad)  
   140023554:	cli    
   140023555:	cli    
   140023556:	cli    
   140023557:	(bad)  
   140023558:	stc    
   140023559:	cli    
   14002355a:	cli    
   14002355b:	(bad)  
   14002355c:	stc    
   14002355d:	cli    
   14002355e:	cli    
   14002355f:	(bad)  
   140023560:	stc    
   140023561:	stc    
   140023562:	stc    
   140023563:	(bad)  
   140023564:	stc    
   140023565:	stc    
   140023566:	stc    
   140023567:	(bad)  
   140023568:	(bad)  
   140023569:	(bad)  
   14002356a:	(bad)  
   14002356b:	push   rax
   14002356d:	icebp  
   14002356e:	icebp  
   14002356f:	std    
   140023570:	add    BYTE PTR [rax],al
   140023572:	add    BYTE PTR [rcx+0x0],cl
   140023575:	add    BYTE PTR [rax],al
   140023577:	sbb    al,0x0
	...
   140023585:	add    BYTE PTR [rax],al
   140023587:	add    bh,bh
   140023589:	jle    0x14002358b
   14002358b:	call   FWORD PTR [rbx+0x27ff98de]
   140023591:	xchg   edi,eax
   140023592:	mov    ebp,0xf88100ff
   140023597:	inc    DWORD PTR [rax]
   140023599:	xchg   edi,edi
   14002359b:	call   FWORD PTR [rsi]
   14002359d:	xchg   esi,eax
   14002359e:	(bad)  
   14002359f:	(bad)  
   1400235a0:	(bad)  
   1400235a1:	(bad)  
   1400235a2:	(bad)  
   1400235a3:	(bad)  
   1400235a4:	(bad)  
   1400235a5:	(bad)  
   1400235a6:	(bad)  
   1400235a7:	(bad)  
   1400235a8:	(bad)  
   1400235a9:	(bad)  
   1400235aa:	(bad)  
   1400235ab:	dec    DWORD PTR [rbp+0x9ffffcb]
   1400235b1:	(bad)  
   1400235b2:	(bad)  
   1400235b3:	inc    DWORD PTR [rax]
   1400235b5:	mov    bh,bh
   1400235b7:	inc    DWORD PTR [rax]
   1400235b9:	jg     0x1400235ad
   1400235bb:	inc    DWORD PTR [rbx-0x7a]
   1400235be:	mov    al,0xff
   1400235c0:	call   0x14001bb95
   1400235c5:	jle    0x1400235c7
   1400235c7:	(bad)  
   1400235c8:	sti    
   1400235c9:	sti    
   1400235ca:	sti    
   1400235cb:	(bad)  
   1400235cc:	sti    
   1400235cd:	sti    
   1400235ce:	sti    
   1400235cf:	(bad)  
   1400235d0:	cli    
   1400235d1:	sti    
   1400235d2:	sti    
   1400235d3:	(bad)  
   1400235d4:	cli    
   1400235d5:	sti    
   1400235d6:	sti    
   1400235d7:	(bad)  
   1400235d8:	cli    
   1400235d9:	cli    
   1400235da:	cli    
   1400235db:	(bad)  
   1400235dc:	cli    
   1400235dd:	cli    
   1400235de:	cli    
   1400235df:	(bad)  
   1400235e0:	stc    
   1400235e1:	cli    
   1400235e2:	cli    
   1400235e3:	(bad)  
   1400235e4:	stc    
   1400235e5:	cli    
   1400235e6:	cli    
   1400235e7:	(bad)  
   1400235e8:	(bad)  
   1400235e9:	(bad)  
   1400235ea:	(bad)  
   1400235eb:	push   rcx
   1400235ed:	icebp  
   1400235ee:	icebp  
   1400235ef:	std    
   1400235f0:	add    BYTE PTR [rax],al
   1400235f2:	add    BYTE PTR [rcx+0x0],cl
   1400235f5:	add    BYTE PTR [rax],al
   1400235f7:	sbb    al,0x0
	...
   140023605:	add    BYTE PTR [rax],al
   140023607:	add    bh,bh
   140023609:	jle    0x14002360b
   14002360b:	call   FWORD PTR [rbx+0x54ff98de]
   140023611:	mov    edx,0x7e01ff88
   140023616:	lock inc DWORD PTR [rax]
   140023619:	xchg   bh,bh
   14002361b:	call   FWORD PTR [rsi]
   14002361d:	xchg   ebp,eax
   14002361e:	(bad)  
   14002361f:	(bad)  
   140023620:	(bad)  
   140023621:	(bad)  
   140023622:	(bad)  
   140023623:	jmp    rsp
   140023625:	repz (bad) 
   140023627:	inc    DWORD PTR [rbp-0x57]
   14002362a:	(bad)  
   14002362b:	inc    DWORD PTR [rax]
   14002362d:	mov    edi,edi
   14002362f:	inc    DWORD PTR [rax]
   140023631:	mov    bh,bh
   140023633:	inc    DWORD PTR [rax]
   140023635:	xchg   edi,edi
   140023637:	inc    DWORD PTR [rbx]
   140023639:	jp     0x140023623
   14002363b:	jmp    QWORD PTR [rax-0x17008a5a]
   140023641:	rol    BYTE PTR [rbp+0x7effff],1
   140023647:	(bad)  
   140023648:	sti    
   140023649:	sti    
   14002364a:	sti    
   14002364b:	(bad)  
   14002364c:	sti    
   14002364d:	sti    
   14002364e:	sti    
   14002364f:	(bad)  
   140023650:	sti    
   140023651:	sti    
   140023652:	sti    
   140023653:	(bad)  
   140023654:	cli    
   140023655:	sti    
   140023656:	sti    
   140023657:	(bad)  
   140023658:	cli    
   140023659:	sti    
   14002365a:	sti    
   14002365b:	(bad)  
   14002365c:	cli    
   14002365d:	cli    
   14002365e:	cli    
   14002365f:	(bad)  
   140023660:	cli    
   140023661:	cli    
   140023662:	cli    
   140023663:	(bad)  
   140023664:	clc    
   140023665:	cli    
   140023666:	cli    
   140023667:	(bad)  
   140023668:	(bad)  
   140023669:	(bad)  
   14002366a:	(bad)  
   14002366b:	push   rsi
   14002366d:	div    dh
   14002366f:	std    
   140023670:	add    BYTE PTR [rax],al
   140023672:	add    BYTE PTR [rcx+0x0],cl
   140023675:	add    BYTE PTR [rax],al
   140023677:	sbb    al,0x0
	...
   140023685:	add    BYTE PTR [rax],al
   140023687:	add    bh,bh
   140023689:	jle    0x14002368b
   14002368b:	call   FWORD PTR [rbx+0x73ff98de]
   140023691:	(bad)  
   140023692:	push   WORD PTR [rbx*4-0x7fff004e]
   14002369a:	idiv   edi
   14002369c:	(bad)  
   14002369d:	xchg   esp,eax
   14002369e:	(bad)  
   14002369f:	jmp    QWORD PTR [rbp+0xfffffd5]
   1400236a5:	mov    ?,edi
   1400236a7:	inc    DWORD PTR [rax]
   1400236a9:	mov    bh,bh
   1400236ab:	inc    DWORD PTR [rax]
   1400236ad:	xchg   edi,edi
   1400236af:	inc    DWORD PTR [rax]
   1400236b1:	xchg   edi,edi
   1400236b3:	inc    DWORD PTR [rax]
   1400236b5:	jg     0x1400236ab
   1400236b7:	call   FWORD PTR [rdx+rdx*4-0x5a]
   1400236bb:	(bad)  
   1400236bc:	fnstsw WORD PTR [rdx-0x2f1700b4]
   1400236c2:	test   edi,edi
   1400236c4:	(bad)  
   1400236c5:	jle    0x1400236c7
   1400236c7:	(bad)  
   1400236c8:	sti    
   1400236c9:	sti    
   1400236ca:	sti    
   1400236cb:	(bad)  
   1400236cc:	sti    
   1400236cd:	sti    
   1400236ce:	sti    
   1400236cf:	(bad)  
   1400236d0:	sti    
   1400236d1:	sti    
   1400236d2:	sti    
   1400236d3:	(bad)  
   1400236d4:	sti    
   1400236d5:	sti    
   1400236d6:	sti    
   1400236d7:	(bad)  
   1400236d8:	cli    
   1400236d9:	sti    
   1400236da:	sti    
   1400236db:	(bad)  
   1400236dc:	cli    
   1400236dd:	cli    
   1400236de:	cli    
   1400236df:	(bad)  
   1400236e0:	(bad)  
   1400236e1:	(bad)  
   1400236e2:	(bad)  
   1400236e3:	(bad)  
   1400236e4:	(bad)  
   1400236e5:	(bad)  
   1400236e6:	(bad)  
   1400236e7:	(bad)  
   1400236e8:	(bad)  
   1400236e9:	(bad)  
   1400236ea:	(bad)  
   1400236eb:	(bad)  
   1400236ec:	(bad)  
   1400236ee:	fscale 
   1400236f0:	add    BYTE PTR [rax],al
   1400236f2:	add    BYTE PTR [rdx+0x0],cl
   1400236f5:	add    BYTE PTR [rax],al
   1400236f7:	sbb    eax,0x0
	...
   140023708:	(bad)  
   140023709:	jle    0x14002370b
   14002370b:	call   FWORD PTR [rsi+0x78ff97de]
   140023711:	int    0x65
   140023713:	(bad)  
   140023714:	jle    0x1400236df
   140023716:	push   WORD PTR [rdx]
   140023719:	cdq    
   14002371a:	mov    edi,0xf78000ff
   14002371f:	inc    DWORD PTR [rax]
   140023721:	(bad)  
   140023722:	cli    
   140023723:	inc    DWORD PTR [rax]
   140023725:	test   ah,bh
   140023727:	inc    DWORD PTR [rax]
   140023729:	test   ah,bh
   14002372b:	inc    DWORD PTR [rax]
   14002372d:	cmp    ecx,0xffffffff
   140023730:	add    BYTE PTR [rsi-0xc],bh
   140023733:	dec    DWORD PTR [rax+rdx*4-0x4a]
   140023737:	call   rsi
   140023739:	mov    bh,0x50
   14002373b:	(bad)  
   14002373c:	fnstsw WORD PTR [rdx-0x2f1700b4]
   140023742:	test   edi,edi
   140023744:	(bad)  
   140023745:	jle    0x140023747
   140023747:	(bad)  
   140023748:	sti    
   140023749:	cld    
   14002374a:	cld    
   14002374b:	(bad)  
   14002374c:	sti    
   14002374d:	cld    
   14002374e:	cld    
   14002374f:	(bad)  
   140023750:	sti    
   140023751:	sti    
   140023752:	sti    
   140023753:	(bad)  
   140023754:	sti    
   140023755:	sti    
   140023756:	sti    
   140023757:	(bad)  
   140023758:	(bad)  
   140023759:	(bad)  
   14002375a:	(bad)  
   14002375b:	(bad)  
   14002375c:	(bad)  
   14002375d:	(bad)  
   14002375e:	(bad)  
   14002375f:	(bad)  
   140023760:	jmp    0x11802214e
   140023765:	xlat   BYTE PTR ds:[rbx]
   140023766:	xlat   BYTE PTR ds:[rbx]
   140023767:	dec    ebp
   140023769:	int    0xcd
   14002376b:	push   QWORD PTR [rdx+0xfeb2b2]
   140023771:	add    BYTE PTR [rax],al
   140023773:	rex.X add BYTE PTR [rax],al
   140023776:	add    BYTE PTR [rcx],bl
	...
   140023788:	(bad)  
   140023789:	jle    0x14002378b
   14002378b:	jmp    QWORD PTR [rcx+0x7fff97dd]
   140023791:	int3   
   140023792:	dec    DWORD PTR fs:[rcx-0x6a009e37]
   140023799:	(bad)  
   14002379a:	pop    rsi
   14002379b:	(bad)  
   14002379c:	jp     0x140023751
   14002379e:	cmp    edi,0xffb79744
   1400237a4:	and    al,0x89
   1400237a6:	(bad)  
   1400237a7:	jmp    QWORD PTR [rsi]
   1400237a9:	mov    ch,dl
   1400237ab:	call   QWORD PTR [rsi-0x6c]
   1400237ae:	mov    dl,0xff
   1400237b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400237b1:	stos   DWORD PTR es:[rdi],eax
   1400237b2:	je     0x1400237b3
   1400237b4:	fnstsw WORD PTR [rdx-0x452200b4]
   1400237ba:	rex.WR (bad) 
   1400237bc:	fnstsw WORD PTR [rdx-0x2f1700b4]
   1400237c2:	test   edi,edi
   1400237c4:	(bad)  
   1400237c5:	jle    0x1400237c7
   1400237c7:	(bad)  
   1400237c8:	cld    
   1400237c9:	cld    
   1400237ca:	cld    
   1400237cb:	(bad)  
   1400237cc:	sti    
   1400237cd:	cld    
   1400237ce:	cld    
   1400237cf:	(bad)  
   1400237d0:	sti    
   1400237d1:	cld    
   1400237d2:	cld    
   1400237d3:	(bad)  
   1400237d4:	(bad)  
   1400237d5:	(bad)  
   1400237d6:	(bad)  
   1400237d7:	call   rdi
   1400237d9:	xlat   BYTE PTR ds:[rbx]
   1400237da:	xlat   BYTE PTR ds:[rbx]
   1400237db:	jmp    QWORD PTR [rsi+riz*4-0x5959005a]
   1400237e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400237e3:	jmp    QWORD PTR [rbp-0x4e005a5b]
   1400237e9:	mov    cl,0xb1
   1400237eb:	push   QWORD PTR [rbp+0xffb5b5]
   1400237f1:	add    BYTE PTR [rax],al
   1400237f3:	and    DWORD PTR [rax],eax
   1400237f5:	add    BYTE PTR [rax],al
   1400237f7:	or     al,BYTE PTR [rax]
	...
   140023805:	add    BYTE PTR [rax],al
   140023807:	add    bh,bh
   140023809:	jle    0x14002380b
   14002380b:	in     eax,dx
   14002380c:	mov    ah,0xd7
   14002380e:	xchg   ecx,eax
   14002380f:	fld    TBYTE PTR [rbx+rbx*8-0x254b006c]
   140023816:	xchg   edx,eax
   140023817:	(bad)  
   140023818:	mov    esp,0xc6ff90d8
   14002381d:	(bad)  
   14002381e:	(bad)  
   14002381f:	call   rsi
   140023821:	ror    DWORD PTR [rcx-0x792f1c01],cl
   140023827:	(bad)  
   140023828:	call   0x12901bdfd
   14002382d:	rol    BYTE PTR [rbp-0x7a2f1701],1
   140023833:	(bad)  
   140023834:	call   0x12901be09
   140023839:	rol    BYTE PTR [rbp-0x7a2f1701],1
   14002383f:	(bad)  
   140023840:	in     eax,dx
   140023841:	(bad)  
   140023842:	xchg   esi,eax
   140023843:	(bad)  
   140023844:	inc    DWORD PTR [rbp-0x30300f1]
   14002384a:	cld    
   14002384b:	(bad)  
   14002384c:	cld    
   14002384d:	cld    
   14002384e:	cld    
   14002384f:	(bad)  
   140023850:	sti    
   140023851:	cld    
   140023852:	cld    
   140023853:	(bad)  
   140023854:	(bad)  
   140023855:	(bad)  
   140023856:	(bad)  
   140023857:	(bad)  
   140023858:	fcmovu st,st(2)
   14002385a:	(bad)  
   14002385c:	(bad)  
   14002385e:	fdivp  st(7),st
   140023860:	(bad)  
   140023861:	(bad)  
   140023862:	(bad)  
   140023863:	(bad)  
   140023864:	out    dx,eax
   140023865:	out    dx,eax
   140023866:	out    dx,eax
   140023867:	inc    esp
   140023869:	(bad)  
   14002386a:	(bad)  
   14002386b:	call   QWORD PTR [rbp+0x55]
   14002386e:	push   rbp
   14002386f:	jbe    0x140023871
   140023871:	add    BYTE PTR [rax],al
   140023873:	add    al,0x0
	...
   140023885:	add    BYTE PTR [rax],al
   140023887:	add    bh,bh
   140023889:	jle    0x14002388b
   14002388b:	test   bh,bh
   14002388d:	jle    0x14002388f
   14002388f:	in     eax,dx
   140023890:	(bad)  
   140023891:	jle    0x140023893
   140023893:	(bad)  
   140023894:	(bad)  
   140023895:	jle    0x140023897
   140023897:	(bad)  
   140023898:	(bad)  
   140023899:	jle    0x14002389b
   14002389b:	(bad)  
   14002389c:	(bad)  
   14002389d:	jle    0x14002389f
   14002389f:	(bad)  
   1400238a0:	(bad)  
   1400238a1:	jle    0x1400238a3
   1400238a3:	(bad)  
   1400238a4:	(bad)  
   1400238a5:	jle    0x1400238a7
   1400238a7:	(bad)  
   1400238a8:	(bad)  
   1400238a9:	jle    0x1400238ab
   1400238ab:	(bad)  
   1400238ac:	(bad)  
   1400238ad:	jle    0x1400238af
   1400238af:	(bad)  
   1400238b0:	(bad)  
   1400238b1:	jle    0x1400238b3
   1400238b3:	(bad)  
   1400238b4:	(bad)  
   1400238b5:	jle    0x1400238b7
   1400238b7:	(bad)  
   1400238b8:	(bad)  
   1400238b9:	jle    0x1400238bb
   1400238bb:	(bad)  
   1400238bc:	(bad)  
   1400238bd:	jle    0x1400238bf
   1400238bf:	(bad)  
   1400238c0:	inc    DWORD PTR [rbp-0x460100f1]
   1400238c6:	ja     0x1400238c7
   1400238c8:	cld    
   1400238c9:	cld    
   1400238ca:	cld    
   1400238cb:	(bad)  
   1400238cc:	cld    
   1400238cd:	cld    
   1400238ce:	cld    
   1400238cf:	(bad)  
   1400238d0:	cld    
   1400238d1:	cld    
   1400238d2:	cld    
   1400238d3:	(bad)  
   1400238d4:	(bad)  
   1400238d5:	(bad)  
   1400238d6:	(bad)  
   1400238d7:	(bad)  
   1400238d8:	fnstsw ax
   1400238da:	loopne 0x1400238db
   1400238dc:	out    0xe6,al
   1400238de:	out    0xff,al
   1400238e0:	cld    
   1400238e1:	cld    
   1400238e2:	cld    
   1400238e3:	call   rcx
   1400238e5:	rcl    ecx,1
   1400238e7:	call   FWORD PTR [rsp+rbx*2+0x5c]
   1400238eb:	jo     0x1400238ed
   1400238ed:	add    BYTE PTR [rax],al
   1400238ef:	add    al,0x0
	...
   140023915:	add    BYTE PTR [rax],al
   140023917:	add    dh,dl
   140023919:	(bad)  
   14002391a:	(bad)  
   14002391b:	(bad)  
   14002391c:	stc    
   14002391d:	stc    
   14002391e:	stc    
   14002391f:	(bad)  
   140023920:	(bad)  
   140023921:	(bad)  
   140023922:	(bad)  
   140023923:	(bad)  
   140023924:	(bad)  
   140023925:	(bad)  
   140023926:	(bad)  
   140023927:	(bad)  
   140023928:	std    
   140023929:	(bad)  
   14002392a:	(bad)  
   14002392b:	(bad)  
   14002392c:	std    
   14002392d:	std    
   14002392e:	std    
   14002392f:	(bad)  
   140023930:	std    
   140023931:	std    
   140023932:	std    
   140023933:	(bad)  
   140023934:	std    
   140023935:	std    
   140023936:	std    
   140023937:	(bad)  
   140023938:	std    
   140023939:	std    
   14002393a:	std    
   14002393b:	(bad)  
   14002393c:	std    
   14002393d:	std    
   14002393e:	std    
   14002393f:	(bad)  
   140023940:	std    
   140023941:	std    
   140023942:	std    
   140023943:	(bad)  
   140023944:	cld    
   140023945:	std    
   140023946:	std    
   140023947:	(bad)  
   140023948:	cld    
   140023949:	cld    
   14002394a:	cld    
   14002394b:	(bad)  
   14002394c:	cld    
   14002394d:	cld    
   14002394e:	cld    
   14002394f:	(bad)  
   140023950:	cld    
   140023951:	cld    
   140023952:	cld    
   140023953:	(bad)  
   140023954:	(bad)  
   140023955:	(bad)  
   140023956:	(bad)  
   140023957:	(bad)  
   140023958:	(bad)  
   14002395a:	fdiv   st(7),st
   14002395c:	fcmovu st,st(2)
   14002395e:	(bad)  
   140023960:	(bad)  
   140023961:	(bad)  
   140023962:	(bad)  
   140023963:	std    
   140023964:	push   rdx
   140023965:	push   rdx
   140023966:	push   rdx
   140023967:	jno    0x140023969
   140023969:	add    BYTE PTR [rax],al
   14002396b:	add    DWORD PTR [rax],eax
	...
   140023995:	add    BYTE PTR [rax],al
   140023997:	add    dh,dl
   140023999:	(bad)  
   14002399a:	(bad)  
   14002399b:	(bad)  
   14002399c:	(bad)  
   14002399d:	(bad)  
   14002399e:	(bad)  
   14002399f:	(bad)  
   1400239a0:	(bad)  
   1400239a1:	(bad)  
   1400239a2:	(bad)  
   1400239a3:	(bad)  
   1400239a4:	(bad)  
   1400239a5:	(bad)  
   1400239a6:	(bad)  
   1400239a7:	(bad)  
   1400239a8:	(bad)  
   1400239a9:	(bad)  
   1400239aa:	(bad)  
   1400239ab:	(bad)  
   1400239ac:	(bad)  
   1400239ad:	(bad)  
   1400239ae:	(bad)  
   1400239af:	(bad)  
   1400239b0:	(bad)  
   1400239b1:	(bad)  
   1400239b2:	(bad)  
   1400239b3:	(bad)  
   1400239b4:	(bad)  
   1400239b5:	(bad)  
   1400239b6:	(bad)  
   1400239b7:	(bad)  
   1400239b8:	(bad)  
   1400239b9:	(bad)  
   1400239ba:	(bad)  
   1400239bb:	(bad)  
   1400239bc:	(bad)  
   1400239bd:	(bad)  
   1400239be:	(bad)  
   1400239bf:	(bad)  
   1400239c0:	(bad)  
   1400239c1:	(bad)  
   1400239c2:	(bad)  
   1400239c3:	(bad)  
   1400239c4:	(bad)  
   1400239c5:	(bad)  
   1400239c6:	(bad)  
   1400239c7:	(bad)  
   1400239c8:	(bad)  
   1400239c9:	(bad)  
   1400239ca:	(bad)  
   1400239cb:	(bad)  
   1400239cc:	(bad)  
   1400239cd:	(bad)  
   1400239ce:	(bad)  
   1400239cf:	(bad)  
   1400239d0:	(bad)  
   1400239d1:	(bad)  
   1400239d2:	(bad)  
   1400239d3:	(bad)  
   1400239d4:	sti    
   1400239d5:	sti    
   1400239d6:	sti    
   1400239d7:	call   rsi
   1400239d9:	(bad)  
   1400239da:	(bad)  
   1400239db:	inc    esi
   1400239dd:	mov    dh,0xff
   1400239e0:	push   rsp
   1400239e1:	push   rsp
   1400239e2:	push   rsp
   1400239e3:	je     0x1400239e5
	...
   140023a15:	add    BYTE PTR [rax],al
   140023a17:	add    ch,dl
   140023a19:	(bad)  
   140023a1a:	(bad)  
   140023a1b:	jmp    rdi
   140023a1d:	out    0xe7,eax
   140023a1f:	(bad)  
   140023a20:	(bad)  
   140023a21:	(bad)  
   140023a22:	(bad)  
   140023a23:	(bad)  
   140023a24:	call   0x129022311
   140023a29:	call   0x128eb3a16
   140023a2e:	call   0x128eb2332
   140023a33:	(bad)  
   140023a34:	call   0x129022321
   140023a39:	call   0x128eb3a26
   140023a3e:	call   0x128eb2342
   140023a43:	(bad)  
   140023a44:	call   0x129022331
   140023a49:	call   0x128ea3a36
   140023a4e:	call   0x12aed2552
   140023a53:	jmp    rbp
   140023a55:	in     eax,0xe5
   140023a57:	inc    esi
   140023a59:	mov    dh,0xff
   140023a5c:	push   rdx
   140023a5d:	push   rdx
   140023a5e:	push   rdx
   140023a5f:	jo     0x140023a61
	...
   140023c85:	add    BYTE PTR [rax],al
   140023c87:	add    al,bh
   140023c89:	add    BYTE PTR [rax],al
   140023c8b:	(bad)  
   140023c8d:	add    BYTE PTR [rax],al
   140023c8f:	(bad)  
   140023c91:	add    BYTE PTR [rax],al
   140023c93:	(bad)  
   140023c95:	add    BYTE PTR [rax],al
   140023c97:	(bad)  
   140023c99:	add    BYTE PTR [rax],al
   140023c9b:	(bad)  
   140023c9d:	add    BYTE PTR [rax],al
   140023c9f:	(bad)  
   140023ca1:	add    BYTE PTR [rax],al
   140023ca3:	(bad)  
   140023ca5:	add    BYTE PTR [rax],al
   140023ca7:	(bad)  
   140023ca9:	add    BYTE PTR [rax],al
   140023cab:	sldt   WORD PTR [rax]
   140023cae:	add    BYTE PTR [rdi],cl
   140023cb0:	add    BYTE PTR [rax],al
   140023cb2:	add    BYTE PTR [rdi],cl
   140023cb4:	add    BYTE PTR [rax],al
   140023cb6:	add    BYTE PTR [rdi],cl
   140023cb8:	add    BYTE PTR [rax],al
   140023cba:	add    BYTE PTR [rdi],cl
   140023cbc:	add    BYTE PTR [rax],al
   140023cbe:	add    BYTE PTR [rdi],cl
   140023cc0:	add    BYTE PTR [rax],al
   140023cc2:	add    BYTE PTR [rdi],cl
   140023cc4:	add    BYTE PTR [rax],al
   140023cc6:	add    BYTE PTR [rdi],cl
   140023cc8:	add    BYTE PTR [rax],al
   140023cca:	add    BYTE PTR [rdi],cl
   140023ccc:	add    BYTE PTR [rax],al
   140023cce:	add    BYTE PTR [rdi],cl
   140023cd0:	add    BYTE PTR [rax],al
   140023cd2:	add    BYTE PTR [rdi],cl
   140023cd4:	add    BYTE PTR [rax],al
   140023cd6:	add    BYTE PTR [rdi],cl
   140023cd8:	add    BYTE PTR [rax],al
   140023cda:	add    BYTE PTR [rdi],cl
   140023cdc:	add    BYTE PTR [rax],al
   140023cde:	add    BYTE PTR [rdi],cl
   140023ce0:	add    BYTE PTR [rax],al
   140023ce2:	add    BYTE PTR [rdi],cl
   140023ce4:	add    BYTE PTR [rax],al
   140023ce6:	add    BYTE PTR [rdi],bl
   140023ce8:	add    BYTE PTR [rax],al
   140023cea:	add    BYTE PTR [rdi],bh
   140023cec:	lock add BYTE PTR [rax],al
   140023cef:	jg     0x140023ce1
   140023cf1:	add    BYTE PTR [rcx],al
   140023cf3:	push   rax
   140023cf5:	add    BYTE PTR [rbx],al
   140023cf7:	(bad)  
   140023cf8:	(bad)  
   140023cf9:	(bad)  
   140023cfa:	(bad)  
   140023cfb:	(bad)  
   140023cfc:	(bad)  
   140023cfd:	(bad)  
   140023cfe:	(bad)  
   140023cff:	(bad)  
   140023d00:	(bad)  
   140023d01:	(bad)  
   140023d02:	(bad)  
   140023d03:	(bad)  
   140023d04:	(bad)  
   140023d05:	(bad)  
   140023d06:	(bad)  
   140023d07:	jmp    FWORD PTR [rax]
   140023d09:	add    BYTE PTR [rax],al
   140023d0b:	add    BYTE PTR [rax],dh
   140023d0d:	add    BYTE PTR [rax],al
   140023d0f:	add    BYTE PTR [rax+0x0],ah
   140023d12:	add    BYTE PTR [rax],al
   140023d14:	add    DWORD PTR [rax],eax
   140023d16:	and    BYTE PTR [rax],al
   140023d18:	add    BYTE PTR [rax],al
   140023d1a:	add    BYTE PTR [rax],al
   140023d1c:	and    BYTE PTR [rip+0x0],0x0        # 0x140023d23
	...
   140023d53:	add    eax,0xf000000
   140023d58:	add    BYTE PTR [rax],al
   140023d5a:	add    BYTE PTR [rbx],dl
   140023d5c:	add    BYTE PTR [rax],al
   140023d5e:	add    BYTE PTR [rbx],dl
   140023d60:	add    BYTE PTR [rax],al
   140023d62:	add    BYTE PTR [rbx],dl
   140023d64:	add    BYTE PTR [rax],al
   140023d66:	add    BYTE PTR [rbx],dl
   140023d68:	add    BYTE PTR [rax],al
   140023d6a:	add    BYTE PTR [rbx],dl
   140023d6c:	add    BYTE PTR [rax],al
   140023d6e:	add    BYTE PTR [rbx],dl
   140023d70:	add    BYTE PTR [rax],al
   140023d72:	add    BYTE PTR [rbx],dl
   140023d74:	add    BYTE PTR [rax],al
   140023d76:	add    BYTE PTR [rbx],dl
   140023d78:	add    BYTE PTR [rax],al
   140023d7a:	add    BYTE PTR [rbx],dl
   140023d7c:	add    BYTE PTR [rax],al
   140023d7e:	add    BYTE PTR [rbx],dl
   140023d80:	add    BYTE PTR [rax],al
   140023d82:	add    BYTE PTR [rbx],dl
   140023d84:	add    BYTE PTR [rax],al
   140023d86:	add    BYTE PTR [rbx],dl
   140023d88:	add    BYTE PTR [rax],al
   140023d8a:	add    BYTE PTR [rbx],dl
   140023d8c:	add    BYTE PTR [rax],al
   140023d8e:	add    BYTE PTR [rbx],dl
   140023d90:	add    BYTE PTR [rax],al
   140023d92:	add    BYTE PTR [rbx],dl
   140023d94:	add    BYTE PTR [rax],al
   140023d96:	add    BYTE PTR [rbx],dl
   140023d98:	add    BYTE PTR [rax],al
   140023d9a:	add    BYTE PTR [rbx],dl
   140023d9c:	add    BYTE PTR [rax],al
   140023d9e:	add    BYTE PTR [rbx],dl
   140023da0:	add    BYTE PTR [rax],al
   140023da2:	add    BYTE PTR [rbx],dl
   140023da4:	add    BYTE PTR [rax],al
   140023da6:	add    BYTE PTR [rbx],dl
   140023da8:	add    BYTE PTR [rax],al
   140023daa:	add    BYTE PTR [rbx],dl
   140023dac:	add    BYTE PTR [rax],al
   140023dae:	add    BYTE PTR [rbx],dl
   140023db0:	add    BYTE PTR [rax],al
   140023db2:	add    BYTE PTR [rbx],dl
   140023db4:	add    BYTE PTR [rax],al
   140023db6:	add    BYTE PTR [rbx],dl
   140023db8:	add    BYTE PTR [rax],al
   140023dba:	add    BYTE PTR [rbx],dl
   140023dbc:	add    BYTE PTR [rax],al
   140023dbe:	add    BYTE PTR [rbx],dl
   140023dc0:	add    BYTE PTR [rax],al
   140023dc2:	add    BYTE PTR [rbx],dl
   140023dc4:	add    BYTE PTR [rax],al
   140023dc6:	add    BYTE PTR [rbx],dl
   140023dc8:	add    BYTE PTR [rax],al
   140023dca:	add    BYTE PTR [rbx],dl
   140023dcc:	add    BYTE PTR [rax],al
   140023dce:	add    BYTE PTR [rax+rax*1],dl
   140023dd1:	add    BYTE PTR [rax],al
   140023dd3:	or     BYTE PTR [rax],al
	...
   140023e0d:	add    BYTE PTR [rax],al
   140023e0f:	add    BYTE PTR [rbx],cl
   140023e11:	or     ecx,DWORD PTR [rbx]
   140023e13:	(bad)  
   140023e14:	or     eax,0xd5d0d0d
   140023e19:	or     eax,0xd0d660d
   140023e1e:	or     eax,0xd0d0d64
   140023e23:	fs or  eax,0xd640d0d
   140023e29:	or     eax,0xd0d640d
   140023e2e:	or     eax,0xd0d0d64
   140023e33:	fs or  eax,0xd640d0d
   140023e39:	or     eax,0xd0d640d
   140023e3e:	or     eax,0xd0d0d64
   140023e43:	fs or  eax,0xd640d0d
   140023e49:	or     eax,0xd0d640d
   140023e4e:	or     eax,0xd0d0d64
   140023e53:	fs or  eax,0xd640d0d
   140023e59:	or     eax,0xd0d640d
   140023e5e:	or     eax,0xd0d0d64
   140023e63:	fs or  eax,0xd640d0d
   140023e69:	or     eax,0xd0d640d
   140023e6e:	or     eax,0xd0d0d64
   140023e73:	fs or  eax,0xd640d0d
   140023e79:	or     eax,0xd0d640d
   140023e7e:	or     eax,0xd0d0d64
   140023e83:	fs or  eax,0xe660d0d
   140023e89:	(bad)  
   140023e8a:	(bad)  
   140023e8b:	add    ax,0x505
   140023e8f:	push   rbp
   140023e90:	add    BYTE PTR [rax],al
   140023e92:	add    BYTE PTR [rax+rax*1],ah
   140023e95:	add    BYTE PTR [rax],al
   140023e97:	add    DWORD PTR [rax],eax
	...
   140023ecd:	add    BYTE PTR [rax],al
   140023ecf:	add    bl,cl
   140023ed1:	retf   
   140023ed2:	retf   
   140023ed3:	push   rdx
   140023ed5:	repnz repz (bad) 
   140023ed8:	in     eax,dx
   140023ed9:	in     eax,dx
   140023eda:	out    dx,eax
   140023edb:	(bad)  
   140023edc:	out    dx,al
   140023edd:	out    dx,al
   140023ede:	out    dx,eax
   140023edf:	(bad)  
   140023ee0:	out    dx,al
   140023ee1:	out    dx,al
   140023ee2:	out    dx,eax
   140023ee3:	(bad)  
   140023ee4:	out    dx,al
   140023ee5:	out    dx,al
   140023ee6:	out    dx,eax
   140023ee7:	(bad)  
   140023ee8:	out    dx,al
   140023ee9:	out    dx,al
   140023eea:	out    dx,eax
   140023eeb:	(bad)  
   140023eec:	out    dx,al
   140023eed:	out    dx,al
   140023eee:	out    dx,eax
   140023eef:	(bad)  
   140023ef0:	out    dx,al
   140023ef1:	out    dx,al
   140023ef2:	out    dx,eax
   140023ef3:	(bad)  
   140023ef4:	out    dx,al
   140023ef5:	out    dx,al
   140023ef6:	out    dx,eax
   140023ef7:	(bad)  
   140023ef8:	out    dx,al
   140023ef9:	out    dx,al
   140023efa:	out    dx,eax
   140023efb:	(bad)  
   140023efc:	out    dx,al
   140023efd:	out    dx,al
   140023efe:	out    dx,eax
   140023eff:	(bad)  
   140023f00:	out    dx,al
   140023f01:	out    dx,al
   140023f02:	out    dx,eax
   140023f03:	(bad)  
   140023f04:	out    dx,al
   140023f05:	out    dx,al
   140023f06:	out    dx,eax
   140023f07:	(bad)  
   140023f08:	out    dx,al
   140023f09:	out    dx,al
   140023f0a:	out    dx,eax
   140023f0b:	(bad)  
   140023f0c:	out    dx,al
   140023f0d:	out    dx,al
   140023f0e:	out    dx,eax
   140023f0f:	(bad)  
   140023f10:	out    dx,al
   140023f11:	out    dx,al
   140023f12:	out    dx,eax
   140023f13:	(bad)  
   140023f14:	out    dx,al
   140023f15:	out    dx,al
   140023f16:	out    dx,eax
   140023f17:	(bad)  
   140023f18:	out    dx,al
   140023f19:	out    dx,al
   140023f1a:	out    dx,eax
   140023f1b:	(bad)  
   140023f1c:	out    dx,al
   140023f1d:	out    dx,al
   140023f1e:	out    dx,eax
   140023f1f:	(bad)  
   140023f20:	out    dx,al
   140023f21:	out    dx,al
   140023f22:	out    dx,eax
   140023f23:	(bad)  
   140023f24:	out    dx,al
   140023f25:	out    dx,al
   140023f26:	out    dx,eax
   140023f27:	(bad)  
   140023f28:	out    dx,al
   140023f29:	out    dx,al
   140023f2a:	out    dx,eax
   140023f2b:	(bad)  
   140023f2c:	out    dx,al
   140023f2d:	out    dx,al
   140023f2e:	out    dx,eax
   140023f2f:	(bad)  
   140023f30:	out    dx,al
   140023f31:	out    dx,al
   140023f32:	out    dx,eax
   140023f33:	(bad)  
   140023f34:	out    dx,al
   140023f35:	out    dx,al
   140023f36:	out    dx,eax
   140023f37:	(bad)  
   140023f38:	out    dx,al
   140023f39:	out    dx,al
   140023f3a:	out    dx,eax
   140023f3b:	(bad)  
   140023f3c:	out    dx,al
   140023f3d:	out    dx,al
   140023f3e:	out    dx,eax
   140023f3f:	(bad)  
   140023f40:	out    dx,al
   140023f41:	out    dx,al
   140023f42:	out    dx,eax
   140023f43:	(bad)  
   140023f44:	in     eax,dx
   140023f45:	in     eax,dx
   140023f46:	out    dx,al
   140023f47:	(bad)  
   140023f48:	(bad)  
   140023f49:	(bad)  
   140023f4a:	(bad)  
   140023f4b:	call   FWORD PTR [rcx+0x59]
   140023f4e:	pop    rcx
   140023f4f:	lods   eax,DWORD PTR ds:[rsi]
   140023f50:	add    BYTE PTR [rax],al
   140023f52:	add    BYTE PTR [rcx],ch
   140023f54:	add    BYTE PTR [rax],al
   140023f56:	add    BYTE PTR [rcx],al
	...
   140023f90:	fcmovu st,st(2)
   140023f92:	(bad)  
   140023f94:	(bad)  
   140023f95:	(bad)  
   140023f96:	(bad)  
   140023f97:	(bad)  
   140023f98:	(bad)  
   140023f99:	(bad)  
   140023f9a:	(bad)  
   140023f9b:	(bad)  
   140023f9c:	(bad)  
   140023f9d:	(bad)  
   140023f9e:	(bad)  
   140023f9f:	(bad)  
   140023fa0:	(bad)  
   140023fa1:	(bad)  
   140023fa2:	(bad)  
   140023fa3:	(bad)  
   140023fa4:	(bad)  
   140023fa5:	(bad)  
   140023fa6:	(bad)  
   140023fa7:	(bad)  
   140023fa8:	(bad)  
   140023fa9:	(bad)  
   140023faa:	(bad)  
   140023fab:	(bad)  
   140023fac:	(bad)  
   140023fad:	(bad)  
   140023fae:	(bad)  
   140023faf:	(bad)  
   140023fb0:	(bad)  
   140023fb1:	(bad)  
   140023fb2:	(bad)  
   140023fb3:	(bad)  
   140023fb4:	(bad)  
   140023fb5:	(bad)  
   140023fb6:	(bad)  
   140023fb7:	(bad)  
   140023fb8:	(bad)  
   140023fb9:	(bad)  
   140023fba:	(bad)  
   140023fbb:	(bad)  
   140023fbc:	(bad)  
   140023fbd:	(bad)  
   140023fbe:	(bad)  
   140023fbf:	(bad)  
   140023fc0:	(bad)  
   140023fc1:	(bad)  
   140023fc2:	(bad)  
   140023fc3:	(bad)  
   140023fc4:	(bad)  
   140023fc5:	(bad)  
   140023fc6:	(bad)  
   140023fc7:	(bad)  
   140023fc8:	std    
   140023fc9:	(bad)  
   140023fca:	(bad)  
   140023fcb:	(bad)  
   140023fcc:	std    
   140023fcd:	(bad)  
   140023fce:	(bad)  
   140023fcf:	(bad)  
   140023fd0:	std    
   140023fd1:	(bad)  
   140023fd2:	(bad)  
   140023fd3:	(bad)  
   140023fd4:	std    
   140023fd5:	(bad)  
   140023fd6:	(bad)  
   140023fd7:	(bad)  
   140023fd8:	std    
   140023fd9:	(bad)  
   140023fda:	(bad)  
   140023fdb:	(bad)  
   140023fdc:	std    
   140023fdd:	(bad)  
   140023fde:	(bad)  
   140023fdf:	(bad)  
   140023fe0:	std    
   140023fe1:	(bad)  
   140023fe2:	(bad)  
   140023fe3:	(bad)  
   140023fe4:	std    
   140023fe5:	(bad)  
   140023fe6:	(bad)  
   140023fe7:	(bad)  
   140023fe8:	std    
   140023fe9:	(bad)  
   140023fea:	(bad)  
   140023feb:	(bad)  
   140023fec:	std    
   140023fed:	(bad)  
   140023fee:	(bad)  
   140023fef:	(bad)  
   140023ff0:	cld    
   140023ff1:	std    
   140023ff2:	(bad)  
   140023ff3:	(bad)  
   140023ff4:	cld    
   140023ff5:	std    
   140023ff6:	(bad)  
   140023ff7:	(bad)  
   140023ff8:	cld    
   140023ff9:	std    
   140023ffa:	(bad)  
   140023ffb:	(bad)  
   140023ffc:	cld    
   140023ffd:	std    
   140023ffe:	(bad)  
   140023fff:	(bad)  
   140024000:	cld    
   140024001:	std    
   140024002:	(bad)  
   140024003:	(bad)  
   140024004:	sti    
   140024005:	std    
   140024006:	(bad)  
   140024007:	(bad)  
   140024008:	(bad)  
   140024009:	(bad)  
   14002400a:	(bad)  
   14002400b:	call   FWORD PTR [rdi+0x5f]
   14002400e:	(bad)  
   14002400f:	scas   eax,DWORD PTR es:[rdi]
   140024010:	add    BYTE PTR [rax],al
   140024012:	add    BYTE PTR [rdi],ah
   140024014:	add    BYTE PTR [rax],al
   140024016:	add    BYTE PTR [rcx],al
	...
   140024050:	rcl    dl,cl
   140024052:	sar    edi,cl
   140024054:	std    
   140024055:	(bad)  
   140024056:	(bad)  
   140024057:	push   rsi
   140024059:	clc    
   14002405a:	stc    
   14002405b:	push   rdi
   14002405d:	idiv   eax
   14002405f:	push   rdi
   140024061:	idiv   eax
   140024063:	push   rsi
   140024065:	idiv   eax
   140024067:	push   rsi
   140024069:	idiv   eax
   14002406b:	push   rsi
   14002406d:	idiv   eax
   14002406f:	push   rsi
   140024071:	idiv   eax
   140024073:	push   rsi
   140024075:	idiv   eax
   140024077:	push   rsi
   140024079:	idiv   eax
   14002407b:	push   rsi
   14002407d:	idiv   eax
   14002407f:	push   rsi
   140024081:	idiv   eax
   140024083:	push   rsi
   140024085:	div    bh
   140024087:	push   rbp
   140024089:	div    bh
   14002408b:	push   rbp
   14002408d:	div    bh
   14002408f:	push   rbp
   140024091:	div    bh
   140024093:	push   rbp
   140024095:	div    bh
   140024097:	push   rbp
   140024099:	div    bh
   14002409b:	push   rbp
   14002409d:	div    bh
   14002409f:	push   rbp
   1400240a1:	div    bh
   1400240a3:	push   rbp
   1400240a5:	div    bh
   1400240a7:	push   rbp
   1400240a9:	div    bh
   1400240ab:	push   rbp
   1400240ad:	div    bh
   1400240af:	push   rbp
   1400240b1:	cmc    
   1400240b2:	idiv   bh
   1400240b4:	hlt    
   1400240b5:	cmc    
   1400240b6:	idiv   bh
   1400240b8:	hlt    
   1400240b9:	cmc    
   1400240ba:	idiv   bh
   1400240bc:	hlt    
   1400240bd:	cmc    
   1400240be:	idiv   bh
   1400240c0:	hlt    
   1400240c1:	cmc    
   1400240c2:	idiv   bh
   1400240c4:	repz repz hlt 
   1400240c7:	(bad)  
   1400240c8:	(bad)  
   1400240c9:	(bad)  
   1400240ca:	(bad)  
   1400240cb:	call   FWORD PTR [rbx+0x5b]
   1400240ce:	pop    rsp
   1400240cf:	lods   al,BYTE PTR ds:[rsi]
   1400240d0:	add    BYTE PTR [rax],al
   1400240d2:	add    BYTE PTR [rdi],ah
   1400240d4:	add    BYTE PTR [rax],al
   1400240d6:	add    BYTE PTR [rcx],al
	...
   140024110:	rcl    dl,cl
   140024112:	sar    edi,cl
   140024114:	std    
   140024115:	(bad)  
   140024116:	(bad)  
   140024117:	push   rdi
   140024119:	clc    
   14002411a:	stc    
   14002411b:	push   rdi
   14002411d:	clc    
   14002411e:	stc    
   14002411f:	push   rdi
   140024121:	idiv   eax
   140024123:	push   rdi
   140024125:	idiv   eax
   140024127:	push   rsi
   140024129:	idiv   eax
   14002412b:	push   rsi
   14002412d:	idiv   eax
   14002412f:	push   rsi
   140024131:	idiv   eax
   140024133:	push   rsi
   140024135:	idiv   eax
   140024137:	push   rsi
   140024139:	idiv   eax
   14002413b:	push   rsi
   14002413d:	idiv   eax
   14002413f:	push   rsi
   140024141:	idiv   eax
   140024143:	push   rsi
   140024145:	div    bh
   140024147:	push   rsi
   140024149:	div    bh
   14002414b:	push   rbp
   14002414d:	div    bh
   14002414f:	push   rbp
   140024151:	div    bh
   140024153:	push   rbp
   140024155:	div    bh
   140024157:	push   rbp
   140024159:	div    bh
   14002415b:	push   rbp
   14002415d:	div    bh
   14002415f:	push   rbp
   140024161:	div    bh
   140024163:	push   rbp
   140024165:	div    bh
   140024167:	push   rbp
   140024169:	div    bh
   14002416b:	push   rbp
   14002416d:	div    bh
   14002416f:	push   rbp
   140024171:	div    bh
   140024173:	push   rbp
   140024175:	div    bh
   140024177:	push   rbp
   140024179:	cmc    
   14002417a:	idiv   bh
   14002417c:	hlt    
   14002417d:	cmc    
   14002417e:	idiv   bh
   140024180:	hlt    
   140024181:	cmc    
   140024182:	idiv   bh
   140024184:	repz hlt 
   140024186:	cmc    
   140024187:	(bad)  
   140024188:	(bad)  
   140024189:	(bad)  
   14002418a:	(bad)  
   14002418b:	call   FWORD PTR [rbx+0x5b]
   14002418e:	pop    rsp
   14002418f:	lods   al,BYTE PTR ds:[rsi]
   140024190:	add    BYTE PTR [rax],al
   140024192:	add    BYTE PTR [rdi],ah
   140024194:	add    BYTE PTR [rax],al
   140024196:	add    BYTE PTR [rcx],al
	...
   1400241d0:	rcl    dl,cl
   1400241d2:	sar    edi,cl
   1400241d4:	std    
   1400241d5:	(bad)  
   1400241d6:	(bad)  
   1400241d7:	push   rdi
   1400241d9:	clc    
   1400241da:	stc    
   1400241db:	push   rdi
   1400241dd:	clc    
   1400241de:	stc    
   1400241df:	push   rdi
   1400241e1:	idiv   eax
   1400241e3:	push   rdi
   1400241e5:	idiv   eax
   1400241e7:	push   rdi
   1400241e9:	idiv   eax
   1400241eb:	push   rdi
   1400241ed:	idiv   eax
   1400241ef:	push   rsi
   1400241f1:	idiv   eax
   1400241f3:	push   rsi
   1400241f5:	idiv   eax
   1400241f7:	push   rsi
   1400241f9:	idiv   eax
   1400241fb:	push   rsi
   1400241fd:	idiv   eax
   1400241ff:	push   rsi
   140024201:	idiv   eax
   140024203:	push   rsi
   140024205:	idiv   eax
   140024207:	push   rsi
   140024209:	div    edi
   14002420b:	push   rsi
   14002420d:	div    bh
   14002420f:	push   rsi
   140024211:	div    bh
   140024213:	push   rbp
   140024215:	div    bh
   140024217:	push   rbp
   140024219:	div    bh
   14002421b:	push   rbp
   14002421d:	div    bh
   14002421f:	push   rbp
   140024221:	div    bh
   140024223:	push   rbp
   140024225:	div    bh
   140024227:	push   rbp
   140024229:	div    bh
   14002422b:	push   rbp
   14002422d:	div    bh
   14002422f:	push   rbp
   140024231:	div    bh
   140024233:	push   rbp
   140024235:	div    bh
   140024237:	push   rbp
   140024239:	div    bh
   14002423b:	push   rbp
   14002423d:	cmc    
   14002423e:	idiv   bh
   140024240:	hlt    
   140024241:	cmc    
   140024242:	idiv   bh
   140024244:	repz hlt 
   140024246:	cmc    
   140024247:	(bad)  
   140024248:	(bad)  
   140024249:	(bad)  
   14002424a:	(bad)  
   14002424b:	call   FWORD PTR [rbx+0x5b]
   14002424e:	pop    rsp
   14002424f:	lods   al,BYTE PTR ds:[rsi]
   140024250:	add    BYTE PTR [rax],al
   140024252:	add    BYTE PTR [rdi],ah
   140024254:	add    BYTE PTR [rax],al
   140024256:	add    BYTE PTR [rcx],al
	...
   140024290:	rcl    edx,cl
   140024292:	sar    edi,cl
   140024294:	std    
   140024295:	(bad)  
   140024296:	(bad)  
   140024297:	push   rdi
   140024299:	clc    
   14002429a:	stc    
   14002429b:	push   rdi
   14002429d:	clc    
   14002429e:	stc    
   14002429f:	push   rdi
   1400242a1:	clc    
   1400242a2:	stc    
   1400242a3:	push   rdi
   1400242a5:	clc    
   1400242a6:	stc    
   1400242a7:	push   rdi
   1400242a9:	idiv   eax
   1400242ab:	push   rdi
   1400242ad:	idiv   eax
   1400242af:	push   rdi
   1400242b1:	idiv   eax
   1400242b3:	push   rsi
   1400242b5:	idiv   eax
   1400242b7:	push   rsi
   1400242b9:	idiv   eax
   1400242bb:	push   rsi
   1400242bd:	idiv   eax
   1400242bf:	push   rsi
   1400242c1:	idiv   eax
   1400242c3:	push   rsi
   1400242c5:	idiv   eax
   1400242c7:	push   rsi
   1400242c9:	idiv   eax
   1400242cb:	push   rsi
   1400242cd:	idiv   eax
   1400242cf:	push   rsi
   1400242d1:	div    bh
   1400242d3:	push   rsi
   1400242d5:	div    bh
   1400242d7:	push   rbp
   1400242d9:	div    bh
   1400242db:	push   rbp
   1400242dd:	div    bh
   1400242df:	push   rbp
   1400242e1:	div    bh
   1400242e3:	push   rbp
   1400242e5:	div    bh
   1400242e7:	push   rbp
   1400242e9:	div    bh
   1400242eb:	push   rbp
   1400242ed:	div    bh
   1400242ef:	push   rbp
   1400242f1:	div    bh
   1400242f3:	push   rbp
   1400242f5:	div    bh
   1400242f7:	push   rbp
   1400242f9:	div    bh
   1400242fb:	push   rbp
   1400242fd:	div    bh
   1400242ff:	push   rbp
   140024301:	cmc    
   140024302:	idiv   bh
   140024304:	repz hlt 
   140024306:	cmc    
   140024307:	(bad)  
   140024308:	(bad)  
   140024309:	(bad)  
   14002430a:	(bad)  
   14002430b:	call   FWORD PTR [rbx+0x5b]
   14002430e:	pop    rsp
   14002430f:	lods   al,BYTE PTR ds:[rsi]
   140024310:	add    BYTE PTR [rax],al
   140024312:	add    BYTE PTR [rdi],ah
   140024314:	add    BYTE PTR [rax],al
   140024316:	add    BYTE PTR [rcx],al
	...
   140024350:	rcl    edx,cl
   140024352:	sar    edi,cl
   140024354:	(bad)  
   140024355:	(bad)  
   140024356:	(bad)  
   140024357:	(bad)  
   140024358:	clc    
   140024359:	clc    
   14002435a:	stc    
   14002435b:	(bad)  
   14002435c:	clc    
   14002435d:	clc    
   14002435e:	stc    
   14002435f:	push   rdi
   140024361:	clc    
   140024362:	stc    
   140024363:	push   rdi
   140024365:	clc    
   140024366:	stc    
   140024367:	push   rdi
   140024369:	clc    
   14002436a:	stc    
   14002436b:	push   rdi
   14002436d:	clc    
   14002436e:	stc    
   14002436f:	push   rdi
   140024371:	idiv   eax
   140024373:	push   rdi
   140024375:	idiv   eax
   140024377:	push   rdi
   140024379:	idiv   eax
   14002437b:	push   rdi
   14002437d:	idiv   eax
   14002437f:	push   rsi
   140024381:	idiv   eax
   140024383:	push   rsi
   140024385:	idiv   eax
   140024387:	push   rsi
   140024389:	idiv   eax
   14002438b:	push   rsi
   14002438d:	idiv   eax
   14002438f:	push   rsi
   140024391:	idiv   eax
   140024393:	push   rsi
   140024395:	idiv   eax
   140024397:	push   rsi
   140024399:	div    bh
   14002439b:	push   rsi
   14002439d:	div    bh
   14002439f:	push   rsi
   1400243a1:	div    bh
   1400243a3:	push   rbp
   1400243a5:	div    bh
   1400243a7:	push   rbp
   1400243a9:	div    bh
   1400243ab:	push   rbp
   1400243ad:	div    bh
   1400243af:	push   rbp
   1400243b1:	div    bh
   1400243b3:	push   rbp
   1400243b5:	div    bh
   1400243b7:	push   rbp
   1400243b9:	div    bh
   1400243bb:	push   rbp
   1400243bd:	div    bh
   1400243bf:	push   rbp
   1400243c1:	div    bh
   1400243c3:	push   rsp
   1400243c5:	cmc    
   1400243c6:	idiv   bh
   1400243c8:	(bad)  
   1400243c9:	(bad)  
   1400243ca:	(bad)  
   1400243cb:	call   FWORD PTR [rbx+0x5b]
   1400243ce:	pop    rsp
   1400243cf:	lods   al,BYTE PTR ds:[rsi]
   1400243d0:	add    BYTE PTR [rax],al
   1400243d2:	add    BYTE PTR [rdi],ah
   1400243d4:	add    BYTE PTR [rax],al
   1400243d6:	add    BYTE PTR [rcx],al
	...
   140024410:	rcl    dl,cl
   140024412:	sar    edi,cl
   140024414:	(bad)  
   140024415:	(bad)  
   140024416:	(bad)  
   140024417:	(bad)  
   140024418:	clc    
   140024419:	clc    
   14002441a:	stc    
   14002441b:	(bad)  
   14002441c:	clc    
   14002441d:	clc    
   14002441e:	stc    
   14002441f:	push   rdi
   140024421:	clc    
   140024422:	stc    
   140024423:	push   rdi
   140024425:	clc    
   140024426:	stc    
   140024427:	push   rdi
   140024429:	clc    
   14002442a:	stc    
   14002442b:	push   rdi
   14002442d:	clc    
   14002442e:	stc    
   14002442f:	push   rdi
   140024431:	clc    
   140024432:	stc    
   140024433:	push   rdi
   140024435:	clc    
   140024436:	stc    
   140024437:	push   rdi
   140024439:	idiv   eax
   14002443b:	push   rdi
   14002443d:	idiv   eax
   14002443f:	push   rdi
   140024441:	idiv   eax
   140024443:	push   rsi
   140024445:	idiv   eax
   140024447:	push   rsi
   140024449:	idiv   eax
   14002444b:	push   rsi
   14002444d:	idiv   eax
   14002444f:	push   rsi
   140024451:	idiv   eax
   140024453:	push   rsi
   140024455:	idiv   eax
   140024457:	push   rsi
   140024459:	idiv   eax
   14002445b:	push   rsi
   14002445d:	idiv   eax
   14002445f:	push   rsi
   140024461:	div    bh
   140024463:	push   rsi
   140024465:	div    bh
   140024467:	push   rbp
   140024469:	div    bh
   14002446b:	push   rbp
   14002446d:	div    bh
   14002446f:	push   rbp
   140024471:	div    bh
   140024473:	push   rbp
   140024475:	div    bh
   140024477:	push   rbp
   140024479:	div    bh
   14002447b:	push   rbp
   14002447d:	div    bh
   14002447f:	push   rbp
   140024481:	div    bh
   140024483:	push   rsp
   140024485:	cmc    
   140024486:	idiv   bh
   140024488:	(bad)  
   140024489:	(bad)  
   14002448a:	(bad)  
   14002448b:	call   FWORD PTR [rbx+0x5b]
   14002448e:	pop    rsp
   14002448f:	lods   al,BYTE PTR ds:[rsi]
   140024490:	add    BYTE PTR [rax],al
   140024492:	add    BYTE PTR [rdi],ah
   140024494:	add    BYTE PTR [rax],al
   140024496:	add    BYTE PTR [rcx],al
	...
   1400244d0:	rcl    bl,cl
   1400244d2:	sar    edi,cl
   1400244d4:	(bad)  
   1400244d5:	(bad)  
   1400244d6:	(bad)  
   1400244d7:	(bad)  
   1400244d8:	clc    
   1400244d9:	clc    
   1400244da:	stc    
   1400244db:	(bad)  
   1400244dc:	clc    
   1400244dd:	clc    
   1400244de:	stc    
   1400244df:	(bad)  
   1400244e0:	clc    
   1400244e1:	clc    
   1400244e2:	stc    
   1400244e3:	push   rdi
   1400244e5:	clc    
   1400244e6:	stc    
   1400244e7:	push   rdi
   1400244e9:	clc    
   1400244ea:	stc    
   1400244eb:	push   rdi
   1400244ed:	clc    
   1400244ee:	stc    
   1400244ef:	push   rdi
   1400244f1:	clc    
   1400244f2:	stc    
   1400244f3:	push   rdi
   1400244f5:	clc    
   1400244f6:	stc    
   1400244f7:	push   rdi
   1400244f9:	clc    
   1400244fa:	stc    
   1400244fb:	push   rdi
   1400244fd:	idiv   eax
   1400244ff:	push   rdi
   140024501:	idiv   eax
   140024503:	push   rsi
   140024505:	idiv   eax
   140024507:	push   rsi
   140024509:	idiv   eax
   14002450b:	push   rsi
   14002450d:	idiv   eax
   14002450f:	push   rsi
   140024511:	idiv   eax
   140024513:	push   rsi
   140024515:	idiv   eax
   140024517:	push   rsi
   140024519:	idiv   eax
   14002451b:	push   rsi
   14002451d:	idiv   eax
   14002451f:	push   rsi
   140024521:	idiv   eax
   140024523:	push   rsi
   140024525:	div    bh
   140024527:	push   rbp
   140024529:	div    bh
   14002452b:	push   rbp
   14002452d:	div    bh
   14002452f:	push   rbp
   140024531:	div    bh
   140024533:	push   rbp
   140024535:	div    bh
   140024537:	push   rbp
   140024539:	div    bh
   14002453b:	push   rbp
   14002453d:	div    bh
   14002453f:	push   rbp
   140024541:	div    bh
   140024543:	push   rsp
   140024545:	cmc    
   140024546:	idiv   bh
   140024548:	(bad)  
   140024549:	(bad)  
   14002454a:	(bad)  
   14002454b:	call   FWORD PTR [rbx+0x5b]
   14002454e:	pop    rsp
   14002454f:	lods   al,BYTE PTR ds:[rsi]
   140024550:	add    BYTE PTR [rax],al
   140024552:	add    BYTE PTR [rdi],ah
   140024554:	add    BYTE PTR [rax],al
   140024556:	add    BYTE PTR [rcx],al
	...
   140024590:	rcl    bl,cl
   140024592:	sar    edi,cl
   140024594:	(bad)  
   140024595:	(bad)  
   140024596:	(bad)  
   140024597:	(bad)  
   140024598:	clc    
   140024599:	stc    
   14002459a:	cli    
   14002459b:	(bad)  
   14002459c:	clc    
   14002459d:	clc    
   14002459e:	stc    
   14002459f:	(bad)  
   1400245a0:	clc    
   1400245a1:	clc    
   1400245a2:	stc    
   1400245a3:	(bad)  
   1400245a4:	clc    
   1400245a5:	clc    
   1400245a6:	stc    
   1400245a7:	push   rdi
   1400245a9:	clc    
   1400245aa:	stc    
   1400245ab:	push   rdi
   1400245ad:	clc    
   1400245ae:	stc    
   1400245af:	push   rdi
   1400245b1:	clc    
   1400245b2:	stc    
   1400245b3:	push   rdi
   1400245b5:	clc    
   1400245b6:	stc    
   1400245b7:	push   rdi
   1400245b9:	clc    
   1400245ba:	stc    
   1400245bb:	push   rdi
   1400245bd:	clc    
   1400245be:	stc    
   1400245bf:	push   rdi
   1400245c1:	idiv   eax
   1400245c3:	push   rdi
   1400245c5:	idiv   eax
   1400245c7:	push   rdi
   1400245c9:	idiv   eax
   1400245cb:	push   rsi
   1400245cd:	idiv   eax
   1400245cf:	push   rsi
   1400245d1:	idiv   eax
   1400245d3:	push   rsi
   1400245d5:	idiv   eax
   1400245d7:	push   rsi
   1400245d9:	idiv   eax
   1400245db:	push   rsi
   1400245dd:	idiv   eax
   1400245df:	push   rsi
   1400245e1:	idiv   eax
   1400245e3:	push   rsi
   1400245e5:	idiv   eax
   1400245e7:	push   rsi
   1400245e9:	div    bh
   1400245eb:	push   rsi
   1400245ed:	div    bh
   1400245ef:	push   rbp
   1400245f1:	div    bh
   1400245f3:	push   rbp
   1400245f5:	div    bh
   1400245f7:	push   rbp
   1400245f9:	div    bh
   1400245fb:	push   rbp
   1400245fd:	div    bh
   1400245ff:	push   rbp
   140024601:	div    bh
   140024603:	push   rsp
   140024605:	cmc    
   140024606:	idiv   bh
   140024608:	(bad)  
   140024609:	(bad)  
   14002460a:	(bad)  
   14002460b:	call   FWORD PTR [rbx+0x5b]
   14002460e:	pop    rsp
   14002460f:	lods   al,BYTE PTR ds:[rsi]
   140024610:	add    BYTE PTR [rax],al
   140024612:	add    BYTE PTR [rdi],ah
   140024614:	add    BYTE PTR [rax],al
   140024616:	add    BYTE PTR [rcx],al
	...
   140024650:	rcl    bl,cl
   140024652:	sar    edi,cl
   140024654:	(bad)  
   140024655:	(bad)  
   140024656:	(bad)  
   140024657:	(bad)  
   140024658:	clc    
   140024659:	stc    
   14002465a:	cli    
   14002465b:	(bad)  
   14002465c:	clc    
   14002465d:	stc    
   14002465e:	cli    
   14002465f:	(bad)  
   140024660:	clc    
   140024661:	clc    
   140024662:	stc    
   140024663:	(bad)  
   140024664:	clc    
   140024665:	clc    
   140024666:	stc    
   140024667:	(bad)  
   140024668:	clc    
   140024669:	clc    
   14002466a:	stc    
   14002466b:	(bad)  
   14002466c:	clc    
   14002466d:	clc    
   14002466e:	stc    
   14002466f:	push   rdi
   140024671:	clc    
   140024672:	stc    
   140024673:	push   rdi
   140024675:	clc    
   140024676:	stc    
   140024677:	push   rdi
   140024679:	clc    
   14002467a:	stc    
   14002467b:	push   rdi
   14002467d:	clc    
   14002467e:	stc    
   14002467f:	push   rdi
   140024681:	clc    
   140024682:	stc    
   140024683:	push   rdi
   140024685:	idiv   eax
   140024687:	push   rdi
   140024689:	idiv   eax
   14002468b:	push   rdi
   14002468d:	idiv   eax
   14002468f:	push   rsi
   140024691:	idiv   eax
   140024693:	push   rsi
   140024695:	idiv   eax
   140024697:	push   rsi
   140024699:	idiv   eax
   14002469b:	push   rsi
   14002469d:	idiv   eax
   14002469f:	push   rsi
   1400246a1:	idiv   eax
   1400246a3:	push   rsi
   1400246a5:	idiv   eax
   1400246a7:	push   rsi
   1400246a9:	idiv   eax
   1400246ab:	push   rsi
   1400246ad:	div    bh
   1400246af:	push   rsi
   1400246b1:	div    bh
   1400246b3:	push   rbp
   1400246b5:	div    bh
   1400246b7:	push   rbp
   1400246b9:	div    bh
   1400246bb:	push   rbp
   1400246bd:	div    bh
   1400246bf:	push   rbp
   1400246c1:	div    bh
   1400246c3:	push   rsp
   1400246c5:	cmc    
   1400246c6:	idiv   bh
   1400246c8:	(bad)  
   1400246c9:	(bad)  
   1400246ca:	(bad)  
   1400246cb:	call   FWORD PTR [rbx+0x5b]
   1400246ce:	pop    rsp
   1400246cf:	lods   al,BYTE PTR ds:[rsi]
   1400246d0:	add    BYTE PTR [rax],al
   1400246d2:	add    BYTE PTR [rdi],ah
   1400246d4:	add    BYTE PTR [rax],al
   1400246d6:	add    BYTE PTR [rcx],al
	...
   140024710:	rcl    bl,cl
   140024712:	sar    edi,cl
   140024714:	(bad)  
   140024715:	(bad)  
   140024716:	(bad)  
   140024717:	(bad)  
   140024718:	clc    
   140024719:	stc    
   14002471a:	cli    
   14002471b:	(bad)  
   14002471c:	clc    
   14002471d:	stc    
   14002471e:	cli    
   14002471f:	(bad)  
   140024720:	clc    
   140024721:	stc    
   140024722:	cli    
   140024723:	(bad)  
   140024724:	clc    
   140024725:	clc    
   140024726:	stc    
   140024727:	(bad)  
   140024728:	clc    
   140024729:	clc    
   14002472a:	stc    
   14002472b:	(bad)  
   14002472c:	clc    
   14002472d:	clc    
   14002472e:	stc    
   14002472f:	(bad)  
   140024730:	clc    
   140024731:	clc    
   140024732:	stc    
   140024733:	push   rdi
   140024735:	clc    
   140024736:	stc    
   140024737:	push   rdi
   140024739:	clc    
   14002473a:	stc    
   14002473b:	push   rdi
   14002473d:	clc    
   14002473e:	stc    
   14002473f:	push   rdi
   140024741:	clc    
   140024742:	stc    
   140024743:	push   rdi
   140024745:	clc    
   140024746:	stc    
   140024747:	push   rdi
   140024749:	idiv   eax
   14002474b:	push   rdi
   14002474d:	idiv   eax
   14002474f:	push   rdi
   140024751:	idiv   eax
   140024753:	push   rsi
   140024755:	idiv   eax
   140024757:	push   rsi
   140024759:	idiv   eax
   14002475b:	push   rsi
   14002475d:	idiv   eax
   14002475f:	push   rsi
   140024761:	idiv   eax
   140024763:	push   rsi
   140024765:	idiv   eax
   140024767:	push   rsi
   140024769:	idiv   eax
   14002476b:	push   rsi
   14002476d:	idiv   eax
   14002476f:	push   rsi
   140024771:	div    bh
   140024773:	push   rsi
   140024775:	div    bh
   140024777:	push   rbp
   140024779:	div    bh
   14002477b:	push   rbp
   14002477d:	div    bh
   14002477f:	push   rbp
   140024781:	div    bh
   140024783:	push   rsp
   140024785:	cmc    
   140024786:	idiv   bh
   140024788:	(bad)  
   140024789:	(bad)  
   14002478a:	(bad)  
   14002478b:	call   FWORD PTR [rbx+0x5b]
   14002478e:	pop    rsp
   14002478f:	lods   al,BYTE PTR ds:[rsi]
   140024790:	add    BYTE PTR [rax],al
   140024792:	add    BYTE PTR [rdi],ah
   140024794:	add    BYTE PTR [rax],al
   140024796:	add    BYTE PTR [rcx],al
	...
   1400247d0:	rcl    ebx,cl
   1400247d2:	sar    edi,cl
   1400247d4:	(bad)  
   1400247d5:	(bad)  
   1400247d6:	(bad)  
   1400247d7:	(bad)  
   1400247d8:	clc    
   1400247d9:	stc    
   1400247da:	cli    
   1400247db:	(bad)  
   1400247dc:	clc    
   1400247dd:	stc    
   1400247de:	cli    
   1400247df:	(bad)  
   1400247e0:	clc    
   1400247e1:	stc    
   1400247e2:	cli    
   1400247e3:	(bad)  
   1400247e4:	clc    
   1400247e5:	stc    
   1400247e6:	cli    
   1400247e7:	(bad)  
   1400247e8:	clc    
   1400247e9:	clc    
   1400247ea:	stc    
   1400247eb:	(bad)  
   1400247ec:	clc    
   1400247ed:	clc    
   1400247ee:	stc    
   1400247ef:	(bad)  
   1400247f0:	clc    
   1400247f1:	clc    
   1400247f2:	stc    
   1400247f3:	(bad)  
   1400247f4:	clc    
   1400247f5:	clc    
   1400247f6:	stc    
   1400247f7:	push   rdi
   1400247f9:	clc    
   1400247fa:	stc    
   1400247fb:	push   rdi
   1400247fd:	clc    
   1400247fe:	stc    
   1400247ff:	push   rdi
   140024801:	clc    
   140024802:	stc    
   140024803:	push   rdi
   140024805:	clc    
   140024806:	stc    
   140024807:	push   rdi
   140024809:	clc    
   14002480a:	stc    
   14002480b:	push   rdi
   14002480d:	idiv   eax
   14002480f:	push   rdi
   140024811:	idiv   eax
   140024813:	push   rdi
   140024815:	idiv   eax
   140024817:	push   rsi
   140024819:	idiv   eax
   14002481b:	push   rsi
   14002481d:	idiv   eax
   14002481f:	push   rsi
   140024821:	idiv   eax
   140024823:	push   rsi
   140024825:	idiv   eax
   140024827:	push   rsi
   140024829:	idiv   eax
   14002482b:	push   rsi
   14002482d:	idiv   eax
   14002482f:	push   rsi
   140024831:	idiv   eax
   140024833:	push   rsi
   140024835:	div    bh
   140024837:	push   rsi
   140024839:	div    bh
   14002483b:	push   rbp
   14002483d:	div    bh
   14002483f:	push   rbp
   140024841:	div    bh
   140024843:	push   rsp
   140024845:	cmc    
   140024846:	idiv   bh
   140024848:	(bad)  
   140024849:	(bad)  
   14002484a:	(bad)  
   14002484b:	call   FWORD PTR [rbx+0x5b]
   14002484e:	pop    rsp
   14002484f:	lods   al,BYTE PTR ds:[rsi]
   140024850:	add    BYTE PTR [rax],al
   140024852:	add    BYTE PTR [rdi],ah
   140024854:	add    BYTE PTR [rax],al
   140024856:	add    BYTE PTR [rcx],al
	...
   14002487c:	(bad)  
   14002487d:	jle    0x14002487f
   14002487f:	xchg   edi,edi
   140024881:	jle    0x140024883
   140024883:	lock (bad) 
   140024885:	jle    0x140024887
   140024887:	(bad)  
   140024888:	(bad)  
   140024889:	jle    0x14002488b
   14002488b:	(bad)  
   14002488c:	(bad)  
   14002488d:	jle    0x14002488f
   14002488f:	(bad)  
   140024890:	(bad)  
   140024891:	jle    0x140024893
   140024893:	(bad)  
   140024894:	(bad)  
   140024895:	jle    0x140024897
   140024897:	(bad)  
   140024898:	(bad)  
   140024899:	jle    0x14002489b
   14002489b:	(bad)  
   14002489c:	(bad)  
   14002489d:	jle    0x14002489f
   14002489f:	(bad)  
   1400248a0:	(bad)  
   1400248a1:	jle    0x1400248a3
   1400248a3:	(bad)  
   1400248a4:	(bad)  
   1400248a5:	jle    0x1400248a7
   1400248a7:	(bad)  
   1400248a8:	(bad)  
   1400248a9:	jle    0x1400248ab
   1400248ab:	(bad)  
   1400248ac:	(bad)  
   1400248ad:	jle    0x1400248af
   1400248af:	(bad)  
   1400248b0:	(bad)  
   1400248b1:	jle    0x1400248b3
   1400248b3:	(bad)  
   1400248b4:	(bad)  
   1400248b5:	jle    0x1400248b7
   1400248b7:	(bad)  
   1400248b8:	(bad)  
   1400248b9:	jle    0x1400248bb
   1400248bb:	(bad)  
   1400248bc:	(bad)  
   1400248bd:	jle    0x1400248bf
   1400248bf:	(bad)  
   1400248c0:	(bad)  
   1400248c1:	jle    0x1400248c3
   1400248c3:	(bad)  
   1400248c4:	(bad)  
   1400248c5:	jle    0x1400248c7
   1400248c7:	(bad)  
   1400248c8:	(bad)  
   1400248c9:	jle    0x1400248cb
   1400248cb:	(bad)  
   1400248cc:	(bad)  
   1400248cd:	jle    0x1400248cf
   1400248cf:	(bad)  
   1400248d0:	(bad)  
   1400248d1:	jle    0x1400248d3
   1400248d3:	(bad)  
   1400248d4:	inc    DWORD PTR [rsp+rcx*1+0x72b6fbff]
   1400248db:	push   rdi
   1400248dd:	idiv   eax
   1400248df:	push   rsi
   1400248e1:	idiv   eax
   1400248e3:	push   rsi
   1400248e5:	idiv   eax
   1400248e7:	push   rsi
   1400248e9:	idiv   eax
   1400248eb:	push   rsi
   1400248ed:	idiv   eax
   1400248ef:	push   rsi
   1400248f1:	idiv   eax
   1400248f3:	push   rsi
   1400248f5:	idiv   eax
   1400248f7:	push   rsi
   1400248f9:	idiv   eax
   1400248fb:	push   rsi
   1400248fd:	div    bh
   1400248ff:	push   rsi
   140024901:	div    bh
   140024903:	push   rsp
   140024905:	cmc    
   140024906:	idiv   bh
   140024908:	(bad)  
   140024909:	(bad)  
   14002490a:	(bad)  
   14002490b:	call   FWORD PTR [rbx+0x5b]
   14002490e:	pop    rsp
   14002490f:	lods   al,BYTE PTR ds:[rsi]
   140024910:	add    BYTE PTR [rax],al
   140024912:	add    BYTE PTR [rdi],ah
   140024914:	add    BYTE PTR [rax],al
   140024916:	add    BYTE PTR [rcx],al
	...
   14002493c:	(bad)  
   14002493d:	jle    0x14002493f
   14002493f:	lock (bad) 
   140024941:	ficom  DWORD PTR [rsi-0x67214526]
   140024947:	(bad)  
   140024948:	mov    edx,0xbaff98de
   14002494d:	ficomp WORD PTR [rax-0x67214501]
   140024953:	(bad)  
   140024954:	mov    edx,0xbaff98de
   140024959:	ficomp WORD PTR [rax-0x67214501]
   14002495f:	(bad)  
   140024960:	mov    edx,0xbaff98de
   140024965:	ficomp WORD PTR [rax-0x67214501]
   14002496b:	(bad)  
   14002496c:	mov    esp,0xbeff97de
   140024971:	ficom  WORD PTR [rdi-0x69223f01]
   140024977:	inc    edx
   140024979:	fcom   QWORD PTR [rdi+rdi*8-0x6b243b]
   140024980:	(bad)  
   140024981:	ficom  DWORD PTR [rdx-0x6e263401]
   140024987:	dec    ebp
   140024989:	fcom   DWORD PTR [rax-0x71282e01]
   14002498f:	call   rsi
   140024991:	(bad)  
   140024992:	mov    edi,?
   140024994:	in     al,0xd8
   140024996:	pushf  
   140024997:	(bad)  
   140024998:	inc    DWORD PTR [rsp+rcx*1-0x7080801]
   14002499f:	push   rdi
   1400249a1:	idiv   eax
   1400249a3:	push   rsi
   1400249a5:	idiv   eax
   1400249a7:	push   rsi
   1400249a9:	idiv   eax
   1400249ab:	push   rsi
   1400249ad:	idiv   eax
   1400249af:	push   rsi
   1400249b1:	idiv   eax
   1400249b3:	push   rsi
   1400249b5:	idiv   eax
   1400249b7:	push   rsi
   1400249b9:	idiv   eax
   1400249bb:	push   rsi
   1400249bd:	idiv   eax
   1400249bf:	push   rsi
   1400249c1:	div    bh
   1400249c3:	push   rsp
   1400249c5:	cmc    
   1400249c6:	idiv   edi
   1400249c8:	(bad)  
   1400249c9:	(bad)  
   1400249ca:	(bad)  
   1400249cb:	call   FWORD PTR [rbx+0x5b]
   1400249ce:	pop    rsp
   1400249cf:	lods   al,BYTE PTR ds:[rsi]
   1400249d0:	add    BYTE PTR [rax],al
   1400249d2:	add    BYTE PTR [rdi],ah
   1400249d4:	add    BYTE PTR [rax],al
   1400249d6:	add    BYTE PTR [rcx],al
	...
   1400249fc:	(bad)  
   1400249fd:	jle    0x1400249ff
   1400249ff:	(bad)  
   140024a00:	mov    edx,0x9bff98de
   140024a05:	iret   
   140024a06:	push   0x68cf9bff
   140024a0b:	call   FWORD PTR [rbx-0x64009731]
   140024a11:	iret   
   140024a12:	push   0x68cf9bff
   140024a17:	call   FWORD PTR [rbx-0x64009731]
   140024a1d:	iret   
   140024a1e:	push   0x68cf9bff
   140024a23:	(bad)  
   140024a24:	jnp    0x1400249e4
   140024a26:	cmp    edi,0x72
   140024a29:	mov    dh,0x89
   140024a2b:	push   QWORD PTR [rsi+rsi*4-0x78]
   140024a2f:	inc    DWORD PTR [rax-0x5a007f44]
   140024a35:	int3   
   140024a36:	jmp    FWORD PTR fs:[rcx-0x52009d35]
   140024a3d:	leave  
   140024a3e:	(bad)  
   140024a3f:	push   QWORD PTR [rcx-0x4a00a038]
   140024a45:	(bad)  
   140024a46:	pop    rbp
   140024a47:	(bad)  
   140024a48:	mov    edx,0xc0ff5bc5
   140024a4d:	ret    
   140024a4e:	pop    rax
   140024a4f:	dec    eax
   140024a51:	rcl    BYTE PTR [rdi+rdi*8-0x21],0xd2
   140024a56:	mov    bh,bh
   140024a58:	(bad)  
   140024a59:	jle    0x140024a5b
   140024a5b:	push   rdi
   140024a5d:	clc    
   140024a5e:	stc    
   140024a5f:	push   rdi
   140024a61:	idiv   eax
   140024a63:	push   rdi
   140024a65:	idiv   eax
   140024a67:	push   rdi
   140024a69:	idiv   eax
   140024a6b:	push   rsi
   140024a6d:	idiv   eax
   140024a6f:	push   rsi
   140024a71:	idiv   eax
   140024a73:	push   rsi
   140024a75:	idiv   eax
   140024a77:	push   rsi
   140024a79:	idiv   eax
   140024a7b:	push   rsi
   140024a7d:	idiv   eax
   140024a7f:	push   rsi
   140024a81:	idiv   eax
   140024a83:	push   rbp
   140024a85:	idiv   al
   140024a87:	(bad)  
   140024a88:	(bad)  
   140024a89:	(bad)  
   140024a8a:	(bad)  
   140024a8b:	call   FWORD PTR [rbx+0x5b]
   140024a8e:	pop    rsp
   140024a8f:	lods   al,BYTE PTR ds:[rsi]
   140024a90:	add    BYTE PTR [rax],al
   140024a92:	add    BYTE PTR [rdi],ah
   140024a94:	add    BYTE PTR [rax],al
   140024a96:	add    BYTE PTR [rcx],al
	...
   140024abc:	(bad)  
   140024abd:	jle    0x140024abf
   140024abf:	(bad)  
   140024ac0:	mov    edx,0x9bff98de
   140024ac5:	iret   
   140024ac6:	push   0x67cf9aff
   140024acb:	call   FWORD PTR [rdx-0x65009831]
   140024ad1:	iret   
   140024ad2:	call   FWORD PTR [edx-0x77009831]
   140024ad9:	(bad)  
   140024ada:	jbe    0x140024adb
   140024adc:	xor    edx,DWORD PTR [rcx+0x760affb7]
   140024ae2:	sar    edi,cl
   140024ae4:	add    BYTE PTR [rax-0x24],dh
   140024ae7:	inc    DWORD PTR [rax]
   140024ae9:	jae    0x140024acb
   140024aeb:	inc    DWORD PTR [rax]
   140024aed:	jae    0x140024acf
   140024aef:	inc    DWORD PTR [rax]
   140024af1:	jno    0x140024acf
   140024af3:	dec    DWORD PTR [rsi*2-0x6fc6002e]
   140024afa:	mov    ch,0xff
   140024afc:	xchg   edi,eax
   140024afd:	mov    esi,0xc7b3ff72
   140024b02:	pop    rbp
   140024b03:	push   QWORD PTR [rdi-0x4300a43b]
   140024b09:	(bad)  
   140024b0a:	pop    rcx
   140024b0b:	inc    ebp
   140024b0d:	rcl    DWORD PTR [rbp-0x1],0xcd
   140024b11:	mov    edi,0xd2e3ff52
   140024b16:	xchg   edi,edi
   140024b18:	(bad)  
   140024b19:	jle    0x140024b1b
   140024b1b:	push   rdi
   140024b1d:	clc    
   140024b1e:	stc    
   140024b1f:	push   rdi
   140024b21:	clc    
   140024b22:	stc    
   140024b23:	push   rdi
   140024b25:	clc    
   140024b26:	stc    
   140024b27:	push   rdi
   140024b29:	idiv   eax
   140024b2b:	push   rdi
   140024b2d:	idiv   eax
   140024b2f:	push   rsi
   140024b31:	idiv   eax
   140024b33:	push   rsi
   140024b35:	idiv   eax
   140024b37:	push   rsi
   140024b39:	idiv   eax
   140024b3b:	push   rsi
   140024b3d:	idiv   eax
   140024b3f:	push   rsi
   140024b41:	idiv   eax
   140024b43:	push   rbp
   140024b45:	idiv   al
   140024b47:	(bad)  
   140024b48:	(bad)  
   140024b49:	(bad)  
   140024b4a:	(bad)  
   140024b4b:	call   FWORD PTR [rbx+0x5b]
   140024b4e:	pop    rbx
   140024b4f:	lods   al,BYTE PTR ds:[rsi]
   140024b50:	add    BYTE PTR [rax],al
   140024b52:	add    BYTE PTR [rdi],ah
   140024b54:	add    BYTE PTR [rax],al
   140024b56:	add    BYTE PTR [rcx],al
	...
   140024b7c:	(bad)  
   140024b7d:	jle    0x140024b7f
   140024b7f:	(bad)  
   140024b80:	mov    edx,0x9bff98de
   140024b85:	iret   
   140024b86:	push   0x67cf9aff
   140024b8b:	call   FWORD PTR [rdx-0x65009831]
   140024b91:	iret   
   140024b92:	dec    DWORD PTR [edx-0x60]
   140024b96:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024b97:	inc    DWORD PTR [rbx]
   140024b99:	jno    0x140024b72
   140024b9b:	inc    DWORD PTR [rax]
   140024b9d:	jp     0x140024b8a
   140024b9f:	inc    DWORD PTR [rax]
   140024ba1:	test   dl,bh
   140024ba3:	inc    DWORD PTR [rax]
   140024ba5:	xchg   edi,edi
   140024ba7:	inc    DWORD PTR [rax]
   140024ba9:	mov    bh,bh
   140024bab:	inc    DWORD PTR [rax]
   140024bad:	mov    bh,bh
   140024baf:	inc    DWORD PTR [rax]
   140024bb1:	mov    bh,bh
   140024bb3:	inc    DWORD PTR [rax]
   140024bb5:	test   dl,bh
   140024bb7:	inc    DWORD PTR [rax]
   140024bb9:	jp     0x140024ba6
   140024bbb:	inc    DWORD PTR [rcx+rsi*2]
   140024bbe:	(bad)  
   140024bbf:	call   QWORD PTR [rdx+rbx*4-0x5c]
   140024bc3:	(bad)  
   140024bc4:	mov    edx,0xc1ff5ac5
   140024bc9:	ret    0xff56
   140024bcc:	retf   0x53bf
   140024bcf:	call   rdx
   140024bd1:	mov    esi,0xd0e5ff50
   140024bd6:	xchg   bh,bh
   140024bd8:	(bad)  
   140024bd9:	jle    0x140024bdb
   140024bdb:	push   rdi
   140024bdd:	clc    
   140024bde:	stc    
   140024bdf:	push   rdi
   140024be1:	clc    
   140024be2:	stc    
   140024be3:	push   rdi
   140024be5:	clc    
   140024be6:	stc    
   140024be7:	push   rdi
   140024be9:	idiv   eax
   140024beb:	push   rdi
   140024bed:	idiv   eax
   140024bef:	push   rdi
   140024bf1:	idiv   eax
   140024bf3:	push   rsi
   140024bf5:	idiv   eax
   140024bf7:	push   rsi
   140024bf9:	idiv   eax
   140024bfb:	push   rsi
   140024bfd:	idiv   eax
   140024bff:	push   rsi
   140024c01:	idiv   eax
   140024c03:	push   rbp
   140024c05:	idiv   al
   140024c07:	(bad)  
   140024c08:	(bad)  
   140024c09:	(bad)  
   140024c0a:	(bad)  
   140024c0b:	call   FWORD PTR [rbx+0x5b]
   140024c0e:	pop    rbx
   140024c0f:	lods   al,BYTE PTR ds:[rsi]
   140024c10:	add    BYTE PTR [rax],al
   140024c12:	add    BYTE PTR [rdi],ah
   140024c14:	add    BYTE PTR [rax],al
   140024c16:	add    BYTE PTR [rcx],al
	...
   140024c3c:	(bad)  
   140024c3d:	jle    0x140024c3f
   140024c3f:	(bad)  
   140024c40:	mov    edx,0x9bff98de
   140024c45:	iret   
   140024c46:	push   0x67cf9aff
   140024c4b:	call   FWORD PTR [rdx+0x35ff67cf]
   140024c51:	xchg   edx,eax
   140024c52:	mov    dh,0xff
   140024c54:	add    BYTE PTR [rdi-0x19],dh
   140024c57:	inc    DWORD PTR [rax]
   140024c59:	(bad)  
   140024c5a:	idiv   edi
   140024c5c:	add    ecx,DWORD PTR [rax-0x73f60001]
   140024c62:	(bad)  
   140024c63:	inc    DWORD PTR [rax]
   140024c65:	mov    bh,bh
   140024c67:	inc    DWORD PTR [rax]
   140024c69:	mov    bh,bh
   140024c6b:	inc    DWORD PTR [rax]
   140024c6d:	mov    edi,edi
   140024c6f:	inc    DWORD PTR [rax]
   140024c71:	mov    bh,bh
   140024c73:	inc    DWORD PTR [rax]
   140024c75:	mov    bh,bh
   140024c77:	inc    DWORD PTR [rax]
   140024c79:	mov    bh,bh
   140024c7b:	inc    DWORD PTR [rax]
   140024c7d:	(bad)  
   140024c7e:	idiv   edi
   140024c80:	add    BYTE PTR [rax-0x19],bh
   140024c83:	(bad)  
   140024c84:	cmp    al,0x8c
   140024c86:	mov    ch,0xff
   140024c88:	mov    eax,0xbecfff54
   140024c8e:	push   rcx
   140024c8f:	call   rsi
   140024c91:	mov    esp,0xd0e7ff4f
   140024c96:	test   edi,edi
   140024c98:	(bad)  
   140024c99:	jle    0x140024c9b
   140024c9b:	push   rdi
   140024c9d:	clc    
   140024c9e:	stc    
   140024c9f:	push   rdi
   140024ca1:	clc    
   140024ca2:	stc    
   140024ca3:	push   rdi
   140024ca5:	clc    
   140024ca6:	stc    
   140024ca7:	push   rdi
   140024ca9:	clc    
   140024caa:	stc    
   140024cab:	push   rdi
   140024cad:	idiv   eax
   140024caf:	push   rdi
   140024cb1:	idiv   eax
   140024cb3:	push   rdi
   140024cb5:	idiv   eax
   140024cb7:	push   rdi
   140024cb9:	idiv   eax
   140024cbb:	push   rsi
   140024cbd:	idiv   eax
   140024cbf:	push   rsi
   140024cc1:	idiv   eax
   140024cc3:	push   rbp
   140024cc5:	idiv   al
   140024cc7:	(bad)  
   140024cc8:	(bad)  
   140024cc9:	(bad)  
   140024cca:	(bad)  
   140024ccb:	call   FWORD PTR [rbx+0x5b]
   140024cce:	pop    rbx
   140024ccf:	lods   al,BYTE PTR ds:[rsi]
   140024cd0:	add    BYTE PTR [rax],al
   140024cd2:	add    BYTE PTR [rdi],ah
   140024cd4:	add    BYTE PTR [rax],al
   140024cd6:	add    BYTE PTR [rcx],al
	...
   140024cfc:	(bad)  
   140024cfd:	jle    0x140024cff
   140024cff:	(bad)  
   140024d00:	mov    edx,0x9bff98de
   140024d05:	iret   
   140024d06:	push   0x67cf9aff
   140024d0b:	dec    DWORD PTR [rbp-0x5f]
   140024d0e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140024d0f:	inc    DWORD PTR [rax]
   140024d11:	js     0x140024cfb
   140024d13:	inc    DWORD PTR [rax]
   140024d15:	xchg   ch,bh
   140024d17:	inc    DWORD PTR [rax]
   140024d19:	mov    bh,bh
   140024d1b:	inc    DWORD PTR [rsi+rax*8-0x8120001]
   140024d22:	(bad)  
   140024d23:	dec    DWORD PTR [rax-0x56]
   140024d26:	(bad)  
   140024d27:	inc    DWORD PTR [rax]
   140024d29:	mov    edi,edi
   140024d2b:	inc    DWORD PTR [rax]
   140024d2d:	mov    edi,edi
   140024d2f:	inc    DWORD PTR [rax]
   140024d31:	mov    edi,edi
   140024d33:	inc    DWORD PTR [rax]
   140024d35:	mov    edi,edi
   140024d37:	inc    DWORD PTR [rax]
   140024d39:	mov    edi,edi
   140024d3b:	inc    DWORD PTR [rax]
   140024d3d:	mov    bh,bh
   140024d3f:	inc    DWORD PTR [rax]
   140024d41:	xchg   ebp,edi
   140024d43:	inc    DWORD PTR [rax]
   140024d45:	js     0x140024d2e
   140024d47:	call   FWORD PTR [rsi-0x69]
   140024d4a:	movabs al,ds:0x4dbbd9ff4fbcd3ff
   140024d53:	(bad)  
   140024d54:	call   0x14001d329
   140024d59:	jle    0x140024d5b
   140024d5b:	(bad)  
   140024d5c:	clc    
   140024d5d:	clc    
   140024d5e:	stc    
   140024d5f:	(bad)  
   140024d60:	clc    
   140024d61:	clc    
   140024d62:	stc    
   140024d63:	push   rdi
   140024d65:	clc    
   140024d66:	stc    
   140024d67:	push   rdi
   140024d69:	clc    
   140024d6a:	stc    
   140024d6b:	push   rdi
   140024d6d:	clc    
   140024d6e:	stc    
   140024d6f:	push   rdi
   140024d71:	clc    
   140024d72:	stc    
   140024d73:	push   rdi
   140024d75:	clc    
   140024d76:	stc    
   140024d77:	push   rdi
   140024d79:	idiv   eax
   140024d7b:	push   rdi
   140024d7d:	idiv   eax
   140024d7f:	push   rdi
   140024d81:	idiv   eax
   140024d83:	push   rbp
   140024d85:	idiv   al
   140024d87:	(bad)  
   140024d88:	(bad)  
   140024d89:	(bad)  
   140024d8a:	(bad)  
   140024d8b:	call   FWORD PTR [rbx+0x5b]
   140024d8e:	pop    rbx
   140024d8f:	lods   al,BYTE PTR ds:[rsi]
   140024d90:	add    BYTE PTR [rax],al
   140024d92:	add    BYTE PTR [rdi],ah
   140024d94:	add    BYTE PTR [rax],al
   140024d96:	add    BYTE PTR [rcx],al
	...
   140024dbc:	(bad)  
   140024dbd:	jle    0x140024dbf
   140024dbf:	(bad)  
   140024dc0:	mov    edx,0x9bff98de
   140024dc5:	iret   
   140024dc6:	push   0x77c488ff
   140024dcb:	inc    DWORD PTR [rip+0xffdb74]        # 0x141022945
   140024dd1:	cmp    ecx,0xffffffff
   140024dd4:	add    BYTE PTR [rdi-0x77ff0001],al
   140024dda:	(bad)  
   140024ddb:	jmp    QWORD PTR [rbp-0x2b]
   140024de1:	(bad)  
   140024de2:	(bad)  
   140024de3:	(bad)  
   140024de4:	(bad)  
   140024de5:	(bad)  
   140024de6:	(bad)  
   140024de7:	call   FWORD PTR [rcx+0xfffffd0]
   140024ded:	xchg   ecx,eax
   140024dee:	(bad)  
   140024def:	inc    DWORD PTR [rax]
   140024df1:	mov    bh,bh
   140024df3:	inc    DWORD PTR [rax]
   140024df5:	mov    bh,bh
   140024df7:	inc    DWORD PTR [rax]
   140024df9:	mov    edi,edi
   140024dfb:	inc    DWORD PTR [rax]
   140024dfd:	mov    edi,edi
   140024dff:	inc    DWORD PTR [rax]
   140024e01:	mov    bh,bh
   140024e03:	inc    DWORD PTR [rax]
   140024e05:	(bad)  
   140024e06:	clc    
   140024e07:	inc    DWORD PTR [rcx+rsi*2]
   140024e0a:	(bad)  
   140024e0b:	(bad)  
   140024e0c:	mov    ecx,0xdcff63b2
   140024e11:	mov    edx,0xd0e8ff4c
   140024e16:	test   edi,edi
   140024e18:	(bad)  
   140024e19:	jle    0x140024e1b
   140024e1b:	(bad)  
   140024e1c:	clc    
   140024e1d:	clc    
   140024e1e:	stc    
   140024e1f:	(bad)  
   140024e20:	clc    
   140024e21:	clc    
   140024e22:	stc    
   140024e23:	(bad)  
   140024e24:	clc    
   140024e25:	clc    
   140024e26:	stc    
   140024e27:	push   rdi
   140024e29:	clc    
   140024e2a:	stc    
   140024e2b:	push   rdi
   140024e2d:	clc    
   140024e2e:	stc    
   140024e2f:	push   rdi
   140024e31:	clc    
   140024e32:	stc    
   140024e33:	push   rdi
   140024e35:	clc    
   140024e36:	stc    
   140024e37:	push   rdi
   140024e39:	clc    
   140024e3a:	stc    
   140024e3b:	push   rdi
   140024e3d:	idiv   eax
   140024e3f:	push   rdi
   140024e41:	idiv   eax
   140024e43:	push   rsi
   140024e45:	idiv   al
   140024e47:	(bad)  
   140024e48:	(bad)  
   140024e49:	(bad)  
   140024e4a:	(bad)  
   140024e4b:	call   FWORD PTR [rbx+0x5b]
   140024e4e:	pop    rbx
   140024e4f:	lods   al,BYTE PTR ds:[rsi]
   140024e50:	add    BYTE PTR [rax],al
   140024e52:	add    BYTE PTR [rdi],ah
   140024e54:	add    BYTE PTR [rax],al
   140024e56:	add    BYTE PTR [rcx],al
	...
   140024e7c:	(bad)  
   140024e7d:	jle    0x140024e7f
   140024e7f:	(bad)  
   140024e80:	mov    edx,0x9bff98de
   140024e85:	iret   
   140024e86:	push   0xffffffffb5973bff
   140024e8b:	inc    DWORD PTR [rax]
   140024e8d:	jle    0x140024e81
   140024e8f:	inc    DWORD PTR [rax]
   140024e91:	xchg   edi,edi
   140024e93:	inc    DWORD PTR [rax]
   140024e95:	mov    bh,bh
   140024e97:	inc    DWORD PTR [rax]
   140024e99:	mov    edi,edi
   140024e9b:	jmp    QWORD PTR [rbp-0x2b]
   140024ea1:	(bad)  
   140024ea2:	(bad)  
   140024ea3:	(bad)  
   140024ea4:	(bad)  
   140024ea5:	(bad)  
   140024ea6:	(bad)  
   140024ea7:	(bad)  
   140024ea8:	(bad)  
   140024ea9:	(bad)  
   140024eaa:	(bad)  
   140024eab:	jmp    rsp
   140024ead:	repz (bad) 
   140024eaf:	dec    DWORD PTR [rax-0x55]
   140024eb2:	(bad)  
   140024eb3:	inc    DWORD PTR [rax]
   140024eb5:	mov    bh,bh
   140024eb7:	inc    DWORD PTR [rax]
   140024eb9:	mov    bh,bh
   140024ebb:	inc    DWORD PTR [rax]
   140024ebd:	mov    edi,edi
   140024ebf:	inc    DWORD PTR [rax]
   140024ec1:	mov    edi,edi
   140024ec3:	inc    DWORD PTR [rax]
   140024ec5:	mov    bh,bh
   140024ec7:	inc    DWORD PTR [rax]
   140024ec9:	jp     0x140024eb6
   140024ecb:	inc    DWORD PTR [rdi-0x76]
   140024ece:	mov    al,0xff
   140024ed0:	fnstsw WORD PTR [rdx-0x2f1700b4]
   140024ed6:	test   edi,edi
   140024ed8:	(bad)  
   140024ed9:	jle    0x140024edb
   140024edb:	(bad)  
   140024edc:	clc    
   140024edd:	clc    
   140024ede:	stc    
   140024edf:	(bad)  
   140024ee0:	clc    
   140024ee1:	clc    
   140024ee2:	stc    
   140024ee3:	(bad)  
   140024ee4:	clc    
   140024ee5:	clc    
   140024ee6:	stc    
   140024ee7:	(bad)  
   140024ee8:	clc    
   140024ee9:	clc    
   140024eea:	stc    
   140024eeb:	push   rdi
   140024eed:	clc    
   140024eee:	stc    
   140024eef:	push   rdi
   140024ef1:	clc    
   140024ef2:	stc    
   140024ef3:	push   rdi
   140024ef5:	clc    
   140024ef6:	stc    
   140024ef7:	push   rdi
   140024ef9:	clc    
   140024efa:	stc    
   140024efb:	push   rdi
   140024efd:	clc    
   140024efe:	stc    
   140024eff:	push   rdi
   140024f01:	clc    
   140024f02:	stc    
   140024f03:	push   rsi
   140024f05:	div    bh
   140024f07:	(bad)  
   140024f08:	(bad)  
   140024f09:	(bad)  
   140024f0a:	(bad)  
   140024f0b:	call   FWORD PTR [rbx+0x5b]
   140024f0e:	pop    rbx
   140024f0f:	lods   al,BYTE PTR ds:[rsi]
   140024f10:	add    BYTE PTR [rax],al
   140024f12:	add    BYTE PTR [rdi],ah
   140024f14:	add    BYTE PTR [rax],al
   140024f16:	add    BYTE PTR [rcx],al
	...
   140024f3c:	(bad)  
   140024f3d:	jle    0x140024f3f
   140024f3f:	(bad)  
   140024f40:	mov    edx,0x9bff98de
   140024f45:	iret   
   140024f46:	push   0xffffffffdc800eff
   140024f4b:	inc    DWORD PTR [rax]
   140024f4d:	test   ah,bh
   140024f4f:	inc    DWORD PTR [rax]
   140024f51:	xchg   edi,edi
   140024f53:	inc    DWORD PTR [rax]
   140024f55:	mov    bh,bh
   140024f57:	inc    DWORD PTR [rax]
   140024f59:	mov    edi,edi
   140024f5b:	jmp    QWORD PTR [rbp-0x2a]
   140024f61:	(bad)  
   140024f62:	(bad)  
   140024f63:	(bad)  
   140024f64:	(bad)  
   140024f65:	(bad)  
   140024f66:	(bad)  
   140024f67:	(bad)  
   140024f68:	(bad)  
   140024f69:	(bad)  
   140024f6a:	(bad)  
   140024f6b:	(bad)  
   140024f6c:	(bad)  
   140024f6d:	(bad)  
   140024f6e:	(bad)  
   140024f6f:	(bad)  
   140024f70:	(bad)  
   140024f71:	(bad)  
   140024f72:	(bad)  
   140024f73:	call   FWORD PTR [rdx+rdx*8-0x6ef00001]
   140024f7a:	(bad)  
   140024f7b:	inc    DWORD PTR [rax]
   140024f7d:	mov    bh,bh
   140024f7f:	inc    DWORD PTR [rax]
   140024f81:	mov    edi,edi
   140024f83:	inc    DWORD PTR [rax]
   140024f85:	mov    bh,bh
   140024f87:	inc    DWORD PTR [rax]
   140024f89:	test   dl,bh
   140024f8b:	call   QWORD PTR [rcx]
   140024f8d:	je     0x140024f5e
   140024f8f:	(bad)  
   140024f90:	fnstsw WORD PTR [rdx-0x2f1700b4]
   140024f96:	test   edi,edi
   140024f98:	(bad)  
   140024f99:	jle    0x140024f9b
   140024f9b:	(bad)  
   140024f9c:	clc    
   140024f9d:	stc    
   140024f9e:	cli    
   140024f9f:	(bad)  
   140024fa0:	clc    
   140024fa1:	stc    
   140024fa2:	cli    
   140024fa3:	(bad)  
   140024fa4:	clc    
   140024fa5:	clc    
   140024fa6:	stc    
   140024fa7:	(bad)  
   140024fa8:	clc    
   140024fa9:	clc    
   140024faa:	stc    
   140024fab:	(bad)  
   140024fac:	clc    
   140024fad:	clc    
   140024fae:	stc    
   140024faf:	push   rdi
   140024fb1:	clc    
   140024fb2:	stc    
   140024fb3:	push   rdi
   140024fb5:	clc    
   140024fb6:	stc    
   140024fb7:	push   rdi
   140024fb9:	clc    
   140024fba:	stc    
   140024fbb:	push   rdi
   140024fbd:	clc    
   140024fbe:	stc    
   140024fbf:	push   rdi
   140024fc1:	clc    
   140024fc2:	stc    
   140024fc3:	push   rsi
   140024fc5:	idiv   eax
   140024fc7:	(bad)  
   140024fc8:	(bad)  
   140024fc9:	(bad)  
   140024fca:	(bad)  
   140024fcb:	call   FWORD PTR [rbx+0x5b]
   140024fce:	pop    rbx
   140024fcf:	lods   al,BYTE PTR ds:[rsi]
   140024fd0:	add    BYTE PTR [rax],al
   140024fd2:	add    BYTE PTR [rdi],ah
   140024fd4:	add    BYTE PTR [rax],al
   140024fd6:	add    BYTE PTR [rcx],al
	...
   140024ffc:	(bad)  
   140024ffd:	jle    0x140024fff
   140024fff:	(bad)  
   140025000:	mov    edx,0x89ff98de
   140025005:	(bad)
   140025008:	add    BYTE PTR [rdx-0x14],bh
   14002500b:	inc    DWORD PTR [rax]
   14002500d:	xchg   edi,edi
   14002500f:	inc    DWORD PTR [rax]
   140025011:	mov    bh,bh
   140025013:	inc    DWORD PTR [rax]
   140025015:	mov    bh,bh
   140025017:	inc    DWORD PTR [rax]
   140025019:	mov    edi,edi
   14002501b:	jmp    QWORD PTR [rbp-0x2a]
   140025021:	(bad)  
   140025022:	(bad)  
   140025023:	(bad)  
   140025024:	(bad)  
   140025025:	(bad)  
   140025026:	(bad)  
   140025027:	(bad)  
   140025028:	(bad)  
   140025029:	(bad)  
   14002502a:	(bad)  
   14002502b:	(bad)  
   14002502c:	(bad)  
   14002502d:	(bad)  
   14002502e:	(bad)  
   14002502f:	(bad)  
   140025030:	(bad)  
   140025031:	(bad)  
   140025032:	(bad)  
   140025033:	(bad)  
   140025034:	(bad)  
   140025035:	(bad)  
   140025036:	(bad)  
   140025037:	jmp    rsp
   140025039:	repz (bad) 
   14002503b:	dec    DWORD PTR [rax-0x55]
   14002503e:	(bad)  
   14002503f:	inc    DWORD PTR [rax]
   140025041:	mov    edi,edi
   140025043:	inc    DWORD PTR [rax]
   140025045:	mov    bh,bh
   140025047:	inc    DWORD PTR [rax]
   140025049:	mov    bh,bh
   14002504b:	inc    DWORD PTR [rax]
   14002504d:	jno    0x14002502b
   14002504f:	(bad)  
   140025050:	mov    eax,0xe8ff66af
   140025055:	rol    BYTE PTR [rbp+0x7effff],1
   14002505b:	(bad)  
   14002505c:	clc    
   14002505d:	stc    
   14002505e:	cli    
   14002505f:	(bad)  
   140025060:	clc    
   140025061:	stc    
   140025062:	cli    
   140025063:	(bad)  
   140025064:	clc    
   140025065:	stc    
   140025066:	cli    
   140025067:	(bad)  
   140025068:	clc    
   140025069:	clc    
   14002506a:	stc    
   14002506b:	(bad)  
   14002506c:	clc    
   14002506d:	clc    
   14002506e:	stc    
   14002506f:	(bad)  
   140025070:	clc    
   140025071:	clc    
   140025072:	stc    
   140025073:	(bad)  
   140025074:	clc    
   140025075:	clc    
   140025076:	stc    
   140025077:	(bad)  
   140025078:	clc    
   140025079:	clc    
   14002507a:	stc    
   14002507b:	push   rdi
   14002507d:	clc    
   14002507e:	stc    
   14002507f:	push   rdi
   140025081:	clc    
   140025082:	stc    
   140025083:	push   rsi
   140025085:	clc    
   140025086:	stc    
   140025087:	(bad)  
   140025088:	(bad)  
   140025089:	(bad)  
   14002508a:	(bad)  
   14002508b:	call   FWORD PTR [rbx+0x5b]
   14002508e:	pop    rbx
   14002508f:	lods   al,BYTE PTR ds:[rsi]
   140025090:	add    BYTE PTR [rax],al
   140025092:	add    BYTE PTR [rdi],ah
   140025094:	add    BYTE PTR [rax],al
   140025096:	add    BYTE PTR [rcx],al
	...
   1400250bc:	(bad)  
   1400250bd:	jle    0x1400250bf
   1400250bf:	(bad)  
   1400250c0:	mov    edx,0x76ff98de
   1400250c5:	mov    ebx,0x7c00ff87
   1400250ca:	out    dx,eax
   1400250cb:	inc    DWORD PTR [rax]
   1400250cd:	xchg   edi,edi
   1400250cf:	inc    DWORD PTR [rax]
   1400250d1:	mov    bh,bh
   1400250d3:	inc    DWORD PTR [rax]
   1400250d5:	mov    edi,edi
   1400250d7:	inc    DWORD PTR [rax]
   1400250d9:	mov    edi,edi
   1400250db:	jmp    QWORD PTR [rbp-0x2a]
   1400250e1:	(bad)  
   1400250e2:	(bad)  
   1400250e3:	(bad)  
   1400250e4:	(bad)  
   1400250e5:	(bad)  
   1400250e6:	(bad)  
   1400250e7:	(bad)  
   1400250e8:	(bad)  
   1400250e9:	(bad)  
   1400250ea:	(bad)  
   1400250eb:	(bad)  
   1400250ec:	(bad)  
   1400250ed:	(bad)  
   1400250ee:	(bad)  
   1400250ef:	(bad)  
   1400250f0:	(bad)  
   1400250f1:	(bad)  
   1400250f2:	(bad)  
   1400250f3:	(bad)  
   1400250f4:	(bad)  
   1400250f5:	(bad)  
   1400250f6:	(bad)  
   1400250f7:	(bad)  
   1400250f8:	(bad)  
   1400250f9:	(bad)  
   1400250fa:	(bad)  
   1400250fb:	(bad)  
   1400250fc:	(bad)  
   1400250fd:	(bad)  
   1400250fe:	(bad)  
   1400250ff:	push   QWORD PTR [rdx-0x42]
   140025102:	(bad)  
   140025103:	inc    DWORD PTR [rax]
   140025105:	mov    edi,edi
   140025107:	inc    DWORD PTR [rax]
   140025109:	mov    bh,bh
   14002510b:	inc    DWORD PTR [rax]
   14002510d:	jae    0x1400250ef
   14002510f:	call   FWORD PTR [rdx-0x1700855a]
   140025115:	rol    BYTE PTR [rbp+0x7effff],1
   14002511b:	(bad)  
   14002511c:	stc    
   14002511d:	stc    
   14002511e:	cli    
   14002511f:	(bad)  
   140025120:	clc    
   140025121:	stc    
   140025122:	cli    
   140025123:	(bad)  
   140025124:	clc    
   140025125:	stc    
   140025126:	cli    
   140025127:	(bad)  
   140025128:	clc    
   140025129:	stc    
   14002512a:	cli    
   14002512b:	(bad)  
   14002512c:	clc    
   14002512d:	clc    
   14002512e:	stc    
   14002512f:	(bad)  
   140025130:	clc    
   140025131:	clc    
   140025132:	stc    
   140025133:	(bad)  
   140025134:	clc    
   140025135:	clc    
   140025136:	stc    
   140025137:	(bad)  
   140025138:	clc    
   140025139:	clc    
   14002513a:	stc    
   14002513b:	(bad)  
   14002513c:	clc    
   14002513d:	clc    
   14002513e:	stc    
   14002513f:	push   rdi
   140025141:	clc    
   140025142:	stc    
   140025143:	push   rsi
   140025145:	clc    
   140025146:	stc    
   140025147:	(bad)  
   140025148:	(bad)  
   140025149:	(bad)  
   14002514a:	(bad)  
   14002514b:	call   FWORD PTR [rbx+0x5b]
   14002514e:	pop    rbx
   14002514f:	lods   al,BYTE PTR ds:[rsi]
   140025150:	add    BYTE PTR [rax],al
   140025152:	add    BYTE PTR [rdi],ah
   140025154:	add    BYTE PTR [rax],al
   140025156:	add    BYTE PTR [rcx],al
	...
   14002517c:	(bad)  
   14002517d:	jle    0x14002517f
   14002517f:	(bad)  
   140025180:	mov    edx,0x72ff98de
   140025185:	mov    ecx,0x7d00ff8b
   14002518a:	lock inc DWORD PTR [rax]
   14002518d:	xchg   edi,edi
   14002518f:	inc    DWORD PTR [rax]
   140025191:	mov    bh,bh
   140025193:	inc    DWORD PTR [rax]
   140025195:	mov    bh,bh
   140025197:	inc    DWORD PTR [rax]
   140025199:	mov    edi,edi
   14002519b:	jmp    QWORD PTR [rbp-0x2a]
   1400251a1:	(bad)  
   1400251a2:	(bad)  
   1400251a3:	(bad)  
   1400251a4:	(bad)  
   1400251a5:	(bad)  
   1400251a6:	(bad)  
   1400251a7:	(bad)  
   1400251a8:	(bad)  
   1400251a9:	(bad)  
   1400251aa:	(bad)  
   1400251ab:	(bad)  
   1400251ac:	(bad)  
   1400251ad:	(bad)  
   1400251ae:	(bad)  
   1400251af:	(bad)  
   1400251b0:	(bad)  
   1400251b1:	(bad)  
   1400251b2:	(bad)  
   1400251b3:	(bad)  
   1400251b4:	(bad)  
   1400251b5:	(bad)  
   1400251b6:	(bad)  
   1400251b7:	(bad)  
   1400251b8:	(bad)  
   1400251b9:	(bad)  
   1400251ba:	(bad)  
   1400251bb:	(bad)  
   1400251bc:	(bad)  
   1400251bd:	(bad)  
   1400251be:	(bad)  
   1400251bf:	dec    DWORD PTR [rbp+0xffffca]
   1400251c5:	mov    bh,bh
   1400251c7:	inc    DWORD PTR [rax]
   1400251c9:	mov    bh,bh
   1400251cb:	inc    DWORD PTR [rax]
   1400251cd:	je     0x1400251af
   1400251cf:	call   QWORD PTR [rsp+riz*4-0x2f170082]
   1400251d6:	test   edi,edi
   1400251d8:	(bad)  
   1400251d9:	jle    0x1400251db
   1400251db:	(bad)  
   1400251dc:	stc    
   1400251dd:	stc    
   1400251de:	cli    
   1400251df:	(bad)  
   1400251e0:	stc    
   1400251e1:	stc    
   1400251e2:	cli    
   1400251e3:	(bad)  
   1400251e4:	clc    
   1400251e5:	stc    
   1400251e6:	cli    
   1400251e7:	(bad)  
   1400251e8:	clc    
   1400251e9:	stc    
   1400251ea:	cli    
   1400251eb:	(bad)  
   1400251ec:	clc    
   1400251ed:	stc    
   1400251ee:	cli    
   1400251ef:	(bad)  
   1400251f0:	clc    
   1400251f1:	stc    
   1400251f2:	cli    
   1400251f3:	(bad)  
   1400251f4:	clc    
   1400251f5:	clc    
   1400251f6:	stc    
   1400251f7:	(bad)  
   1400251f8:	clc    
   1400251f9:	clc    
   1400251fa:	stc    
   1400251fb:	(bad)  
   1400251fc:	clc    
   1400251fd:	clc    
   1400251fe:	stc    
   1400251ff:	(bad)  
   140025200:	clc    
   140025201:	clc    
   140025202:	stc    
   140025203:	push   rsi
   140025205:	clc    
   140025206:	stc    
   140025207:	(bad)  
   140025208:	(bad)  
   140025209:	(bad)  
   14002520a:	(bad)  
   14002520b:	call   FWORD PTR [rbx+0x5b]
   14002520e:	pop    rbx
   14002520f:	lods   eax,DWORD PTR ds:[rsi]
   140025210:	add    BYTE PTR [rax],al
   140025212:	add    BYTE PTR [rax],ch
   140025214:	add    BYTE PTR [rax],al
   140025216:	add    BYTE PTR [rcx],al
	...
   14002523c:	(bad)  
   14002523d:	jle    0x14002523f
   14002523f:	(bad)  
   140025240:	mov    edx,0x88ff98de
   140025245:	(bad)  
   140025246:	jns    0x140025247
   140025248:	add    BYTE PTR [rbx-0x13],bh
   14002524b:	inc    DWORD PTR [rax]
   14002524d:	xchg   bh,bh
   14002524f:	inc    DWORD PTR [rax]
   140025251:	xchg   edi,edi
   140025253:	inc    DWORD PTR [rax]
   140025255:	mov    bh,bh
   140025257:	inc    DWORD PTR [rax]
   140025259:	mov    edi,edi
   14002525b:	jmp    QWORD PTR [rbp-0x2a]
   140025261:	(bad)  
   140025262:	(bad)  
   140025263:	(bad)  
   140025264:	(bad)  
   140025265:	(bad)  
   140025266:	(bad)  
   140025267:	(bad)  
   140025268:	(bad)  
   140025269:	(bad)  
   14002526a:	(bad)  
   14002526b:	(bad)  
   14002526c:	(bad)  
   14002526d:	(bad)  
   14002526e:	(bad)  
   14002526f:	(bad)  
   140025270:	(bad)  
   140025271:	(bad)  
   140025272:	(bad)  
   140025273:	(bad)  
   140025274:	(bad)  
   140025275:	(bad)  
   140025276:	(bad)  
   140025277:	jmp    rsp
   140025279:	repz (bad) 
   14002527b:	dec    DWORD PTR [rax-0x55]
   14002527e:	(bad)  
   14002527f:	inc    DWORD PTR [rax]
   140025281:	mov    edi,edi
   140025283:	inc    DWORD PTR [rax]
   140025285:	mov    bh,bh
   140025287:	inc    DWORD PTR [rax]
   140025289:	xchg   edi,edi
   14002528b:	inc    DWORD PTR [rax]
   14002528d:	jno    0x14002526b
   14002528f:	push   QWORD PTR [rbp-0x17009752]
   140025295:	rol    BYTE PTR [rbp+0x7effff],1
   14002529b:	(bad)  
   14002529c:	stc    
   14002529d:	stc    
   14002529e:	cli    
   14002529f:	(bad)  
   1400252a0:	stc    
   1400252a1:	stc    
   1400252a2:	cli    
   1400252a3:	(bad)  
   1400252a4:	stc    
   1400252a5:	stc    
   1400252a6:	cli    
   1400252a7:	(bad)  
   1400252a8:	clc    
   1400252a9:	stc    
   1400252aa:	cli    
   1400252ab:	(bad)  
   1400252ac:	clc    
   1400252ad:	stc    
   1400252ae:	cli    
   1400252af:	(bad)  
   1400252b0:	clc    
   1400252b1:	stc    
   1400252b2:	cli    
   1400252b3:	(bad)  
   1400252b4:	clc    
   1400252b5:	stc    
   1400252b6:	cli    
   1400252b7:	(bad)  
   1400252b8:	clc    
   1400252b9:	clc    
   1400252ba:	stc    
   1400252bb:	(bad)  
   1400252bc:	clc    
   1400252bd:	clc    
   1400252be:	stc    
   1400252bf:	(bad)  
   1400252c0:	clc    
   1400252c1:	clc    
   1400252c2:	stc    
   1400252c3:	push   rdi
   1400252c5:	clc    
   1400252c6:	stc    
   1400252c7:	(bad)  
   1400252c8:	(bad)  
   1400252c9:	(bad)  
   1400252ca:	(bad)  
   1400252cb:	call   FWORD PTR [rbx+0x5b]
   1400252ce:	pop    rbx
   1400252cf:	scas   al,BYTE PTR es:[rdi]
   1400252d0:	add    BYTE PTR [rax],al
   1400252d2:	add    BYTE PTR [rcx],ch
   1400252d4:	add    BYTE PTR [rax],al
   1400252d6:	add    BYTE PTR [rcx],al
	...
   1400252fc:	(bad)  
   1400252fd:	jle    0x1400252ff
   1400252ff:	(bad)  
   140025300:	mov    edx,0x9bff98de
   140025305:	iret   
   140025306:	push   0xffffffffdf810fff
   14002530b:	inc    DWORD PTR [rax]
   14002530d:	test   ebp,edi
   14002530f:	inc    DWORD PTR [rax]
   140025311:	xchg   edi,edi
   140025313:	inc    DWORD PTR [rax]
   140025315:	mov    bh,bh
   140025317:	inc    DWORD PTR [rax]
   140025319:	mov    edi,edi
   14002531b:	jmp    QWORD PTR [rbp-0x2b]
   140025321:	(bad)  
   140025322:	(bad)  
   140025323:	(bad)  
   140025324:	(bad)  
   140025325:	(bad)  
   140025326:	(bad)  
   140025327:	(bad)  
   140025328:	(bad)  
   140025329:	(bad)  
   14002532a:	(bad)  
   14002532b:	(bad)  
   14002532c:	(bad)  
   14002532d:	(bad)  
   14002532e:	(bad)  
   14002532f:	(bad)  
   140025330:	(bad)  
   140025331:	(bad)  
   140025332:	(bad)  
   140025333:	call   FWORD PTR [rdx+rdx*8-0x6ef00001]
   14002533a:	(bad)  
   14002533b:	inc    DWORD PTR [rax]
   14002533d:	mov    edi,edi
   14002533f:	inc    DWORD PTR [rax]
   140025341:	mov    edi,edi
   140025343:	inc    DWORD PTR [rax]
   140025345:	mov    bh,bh
   140025347:	inc    DWORD PTR [rax]
   140025349:	test   dl,bh
   14002534b:	dec    DWORD PTR [rdx]
   14002534d:	jae    0x140025323
   14002534f:	(bad)  
   140025350:	fidivr DWORD PTR [rcx-0x2f1700b2]
   140025356:	test   edi,edi
   140025358:	(bad)  
   140025359:	jle    0x14002535b
   14002535b:	(bad)  
   14002535c:	stc    
   14002535d:	stc    
   14002535e:	cli    
   14002535f:	(bad)  
   140025360:	stc    
   140025361:	stc    
   140025362:	cli    
   140025363:	(bad)  
   140025364:	stc    
   140025365:	stc    
   140025366:	cli    
   140025367:	(bad)  
   140025368:	stc    
   140025369:	stc    
   14002536a:	cli    
   14002536b:	(bad)  
   14002536c:	clc    
   14002536d:	stc    
   14002536e:	cli    
   14002536f:	(bad)  
   140025370:	clc    
   140025371:	stc    
   140025372:	cli    
   140025373:	(bad)  
   140025374:	clc    
   140025375:	stc    
   140025376:	cli    
   140025377:	(bad)  
   140025378:	clc    
   140025379:	stc    
   14002537a:	cli    
   14002537b:	(bad)  
   14002537c:	clc    
   14002537d:	clc    
   14002537e:	stc    
   14002537f:	(bad)  
   140025380:	clc    
   140025381:	clc    
   140025382:	stc    
   140025383:	(bad)  
   140025384:	clc    
   140025385:	clc    
   140025386:	stc    
   140025387:	(bad)  
   140025388:	(bad)  
   140025389:	(bad)  
   14002538a:	(bad)  
   14002538b:	call   FWORD PTR [rbx+0x5b]
   14002538e:	pop    rbx
   14002538f:	mov    al,0x0
   140025391:	add    BYTE PTR [rax],al
   140025393:	sub    DWORD PTR [rax],eax
   140025395:	add    BYTE PTR [rax],al
   140025397:	add    DWORD PTR [rax],eax
	...
   1400253b9:	add    BYTE PTR [rax],al
   1400253bb:	add    bh,bh
   1400253bd:	jle    0x1400253bf
   1400253bf:	(bad)  
   1400253c0:	mov    edx,0x9bff98de
   1400253c5:	iret   
   1400253c6:	push   0xffffffffb49e43ff
   1400253cb:	inc    DWORD PTR [rax]
   1400253cd:	xor    ch,0xff
   1400253d0:	add    BYTE PTR [rdi-0x78ff0001],al
   1400253d6:	(bad)  
   1400253d7:	inc    DWORD PTR [rax]
   1400253d9:	mov    bh,bh
   1400253db:	jmp    QWORD PTR [rbp-0x2b]
   1400253e1:	(bad)  
   1400253e2:	(bad)  
   1400253e3:	(bad)  
   1400253e4:	(bad)  
   1400253e5:	(bad)  
   1400253e6:	(bad)  
   1400253e7:	(bad)  
   1400253e8:	(bad)  
   1400253e9:	(bad)  
   1400253ea:	(bad)  
   1400253eb:	jmp    rsp
   1400253ed:	repz (bad) 
   1400253ef:	dec    DWORD PTR [rax-0x55]
   1400253f2:	(bad)  
   1400253f3:	inc    DWORD PTR [rax]
   1400253f5:	mov    bh,bh
   1400253f7:	inc    DWORD PTR [rax]
   1400253f9:	mov    edi,edi
   1400253fb:	inc    DWORD PTR [rax]
   1400253fd:	mov    edi,edi
   1400253ff:	inc    DWORD PTR [rax]
   140025401:	mov    bh,bh
   140025403:	inc    DWORD PTR [rax]
   140025405:	xchg   edi,edi
   140025407:	inc    DWORD PTR [rax]
   140025409:	jnp    0x1400253f7
   14002540b:	dec    DWORD PTR [rbx-0x75]
   14002540e:	scas   al,BYTE PTR es:[rdi]
   14002540f:	(bad)  
   140025410:	fnstsw WORD PTR [rdx-0x2f1700b4]
   140025416:	test   edi,edi
   140025418:	(bad)  
   140025419:	jle    0x14002541b
   14002541b:	(bad)  
   14002541c:	stc    
   14002541d:	stc    
   14002541e:	cli    
   14002541f:	(bad)  
   140025420:	stc    
   140025421:	stc    
   140025422:	cli    
   140025423:	(bad)  
   140025424:	stc    
   140025425:	stc    
   140025426:	cli    
   140025427:	(bad)  
   140025428:	stc    
   140025429:	stc    
   14002542a:	cli    
   14002542b:	(bad)  
   14002542c:	stc    
   14002542d:	stc    
   14002542e:	cli    
   14002542f:	(bad)  
   140025430:	clc    
   140025431:	stc    
   140025432:	cli    
   140025433:	(bad)  
   140025434:	clc    
   140025435:	stc    
   140025436:	cli    
   140025437:	(bad)  
   140025438:	clc    
   140025439:	stc    
   14002543a:	cli    
   14002543b:	(bad)  
   14002543c:	clc    
   14002543d:	stc    
   14002543e:	cli    
   14002543f:	(bad)  
   140025440:	clc    
   140025441:	stc    
   140025442:	cli    
   140025443:	push   rdi
   140025445:	div    edi
   140025447:	(bad)  
   140025448:	(bad)  
   140025449:	(bad)  
   14002544a:	(bad)  
   14002544b:	call   FWORD PTR [rbx+0x5b]
   14002544e:	pop    rsp
   14002544f:	lods   eax,DWORD PTR ds:[rsi]
   140025450:	add    BYTE PTR [rax],al
   140025452:	add    BYTE PTR [rsi],ah
	...
   14002547c:	(bad)  
   14002547d:	jle    0x14002547f
   14002547f:	(bad)  
   140025480:	mov    edx,0x9bff98de
   140025485:	iret   
   140025486:	push   0x72c78fff
   14002548b:	inc    DWORD PTR [rsi]
   14002548d:	jl     0x140025475
   14002548f:	inc    DWORD PTR [rax]
   140025491:	test   ah,bh
   140025493:	inc    DWORD PTR [rax]
   140025495:	xchg   edi,edi
   140025497:	inc    DWORD PTR [rax]
   140025499:	mov    bh,bh
   14002549b:	jmp    QWORD PTR [rbp-0x2b]
   1400254a1:	(bad)  
   1400254a2:	(bad)  
   1400254a3:	(bad)  
   1400254a4:	(bad)  
   1400254a5:	(bad)  
   1400254a6:	(bad)  
   1400254a7:	call   FWORD PTR [rcx+rdx*8-0x6ff00001]
   1400254ae:	(bad)  
   1400254af:	inc    DWORD PTR [rax]
   1400254b1:	mov    edi,edi
   1400254b3:	inc    DWORD PTR [rax]
   1400254b5:	mov    edi,edi
   1400254b7:	inc    DWORD PTR [rax]
   1400254b9:	mov    edi,edi
   1400254bb:	inc    DWORD PTR [rax]
   1400254bd:	mov    bh,bh
   1400254bf:	inc    DWORD PTR [rax]
   1400254c1:	mov    bh,bh
   1400254c3:	inc    DWORD PTR [rax]
   1400254c5:	(bad)  
   1400254c6:	idiv   edi
   1400254c8:	(bad)  
   1400254c9:	jo     0x1400254a0
   1400254cb:	(bad)  
   1400254cc:	mov    ebp,0xddff61ae
   1400254d1:	mov    edx,0xd0e8ff4c
   1400254d6:	test   edi,edi
   1400254d8:	(bad)  
   1400254d9:	jle    0x1400254db
   1400254db:	(bad)  
   1400254dc:	stc    
   1400254dd:	cli    
   1400254de:	sti    
   1400254df:	(bad)  
   1400254e0:	stc    
   1400254e1:	cli    
   1400254e2:	sti    
   1400254e3:	(bad)  
   1400254e4:	stc    
   1400254e5:	stc    
   1400254e6:	cli    
   1400254e7:	(bad)  
   1400254e8:	stc    
   1400254e9:	stc    
   1400254ea:	cli    
   1400254eb:	(bad)  
   1400254ec:	clc    
   1400254ed:	clc    
   1400254ee:	stc    
   1400254ef:	(bad)  
   1400254f0:	clc    
   1400254f1:	clc    
   1400254f2:	stc    
   1400254f3:	push   rdi
   1400254f5:	clc    
   1400254f6:	stc    
   1400254f7:	push   rdi
   1400254f9:	clc    
   1400254fa:	stc    
   1400254fb:	push   rdi
   1400254fd:	clc    
   1400254fe:	cli    
   1400254ff:	push   rdi
   140025501:	clc    
   140025502:	clc    
   140025503:	push   rsp
   140025505:	hlt    
   140025506:	repz (bad) 
   140025508:	(bad)  
   140025509:	(bad)  
   14002550a:	(bad)  
   14002550b:	call   FWORD PTR [rbp+0x5d]
   14002550e:	pop    rbp
   14002550f:	test   eax,0x22000000
	...
   14002553c:	(bad)  
   14002553d:	jle    0x14002553f
   14002553f:	(bad)  
   140025540:	mov    edx,0x9cff98de
   140025545:	iret   
   140025546:	push   0x66ce9eff
   14002554b:	call   FWORD PTR [rdx-0x57]
   14002554e:	movabs al,ds:0xfe8600fff47f00ff
   140025557:	inc    DWORD PTR [rax]
   140025559:	xchg   edi,edi
   14002555b:	inc    DWORD PTR [rdi-0x15000039]
   140025561:	cmc    
   140025562:	(bad)  
   140025563:	dec    DWORD PTR [rax-0x56]
   140025566:	(bad)  
   140025567:	inc    DWORD PTR [rax]
   140025569:	mov    bh,bh
   14002556b:	inc    DWORD PTR [rax]
   14002556d:	mov    edi,edi
   14002556f:	inc    DWORD PTR [rax]
   140025571:	mov    bh,bh
   140025573:	inc    DWORD PTR [rax]
   140025575:	mov    bh,bh
   140025577:	inc    DWORD PTR [rax]
   140025579:	mov    bh,bh
   14002557b:	inc    DWORD PTR [rax]
   14002557d:	xchg   edi,edi
   14002557f:	inc    DWORD PTR [rax]
   140025581:	xchg   ch,bh
   140025583:	inc    DWORD PTR [rax]
   140025585:	ja     0x14002556e
   140025587:	jmp    FWORD PTR [rdi-0x6a]
   14002558a:	xchg   esi,eax
   14002558b:	(bad)  
   14002558c:	fnstsw WORD PTR [rcx-0x452200b5]
   140025592:	rex.WR (bad) 
   140025594:	call   0x14001db69
   140025599:	jle    0x14002559b
   14002559b:	(bad)  
   14002559c:	stc    
   14002559d:	cli    
   14002559e:	sti    
   14002559f:	(bad)  
   1400255a0:	stc    
   1400255a1:	cli    
   1400255a2:	sti    
   1400255a3:	(bad)  
   1400255a4:	stc    
   1400255a5:	cli    
   1400255a6:	sti    
   1400255a7:	(bad)  
   1400255a8:	clc    
   1400255a9:	clc    
   1400255aa:	stc    
   1400255ab:	(bad)  
   1400255ac:	(bad)  
   1400255ad:	(bad)  
   1400255ae:	(bad)  
   1400255af:	(bad)  
   1400255b0:	(bad)  
   1400255b1:	(bad)  
   1400255b2:	(bad)  
   1400255b3:	(bad)  
   1400255b4:	(bad)  
   1400255b5:	(bad)  
   1400255b6:	(bad)  
   1400255b7:	(bad)  
   1400255b8:	(bad)  
   1400255b9:	(bad)  
   1400255ba:	(bad)  
   1400255bb:	(bad)  
   1400255bc:	(bad)  
   1400255bd:	(bad)  
   1400255be:	(bad)  
   1400255bf:	(bad)  
   1400255c0:	(bad)  
   1400255c1:	(bad)  
   1400255c2:	(bad)  
   1400255c3:	push   rbx
   1400255c5:	repz repnz (bad) 
   1400255c8:	(bad)  
   1400255c9:	(bad)  
   1400255ca:	(bad)  
   1400255cb:	jmp    QWORD PTR [rax+0x60]
   1400255ce:	(bad)  
   1400255cf:	mov    dl,0x0
   1400255d1:	add    BYTE PTR [rax],al
   1400255d3:	and    eax,DWORD PTR [rax]
	...
   1400255f9:	add    BYTE PTR [rax],al
   1400255fb:	add    bh,bh
   1400255fd:	jle    0x1400255ff
   1400255ff:	(bad)  
   140025600:	mov    edx,0x9eff98de
   140025605:	(bad)  
   140025606:	call   FWORD PTR [edi-0x5d009a33]
   14002560d:	int3   
   14002560e:	inc    DWORD PTR fs:[rsi-0x63]
   140025612:	mov    bl,0xff
   140025614:	add    BYTE PTR [rax-0x7bff000a],al
   14002561a:	cld    
   14002561b:	inc    DWORD PTR [rbx]
   14002561d:	mov    bh,bh
   14002561f:	dec    DWORD PTR [rcx]
   140025621:	mov    edi,edi
   140025623:	inc    DWORD PTR [rax]
   140025625:	xchg   edi,edi
   140025627:	inc    DWORD PTR [rax]
   140025629:	mov    bh,bh
   14002562b:	inc    DWORD PTR [rax]
   14002562d:	mov    bh,bh
   14002562f:	inc    DWORD PTR [rax]
   140025631:	mov    bh,bh
   140025633:	inc    DWORD PTR [rax]
   140025635:	xchg   edi,edi
   140025637:	inc    DWORD PTR [rax]
   140025639:	xchg   edi,edi
   14002563b:	inc    DWORD PTR [rax]
   14002563d:	(bad)  
   14002563e:	idiv   edi
   140025640:	add    BYTE PTR [rdi-0x1a],dh
   140025643:	dec    DWORD PTR [rbp-0x75]
   140025646:	lods   al,BYTE PTR ds:[rsi]
   140025647:	(bad)  
   140025648:	fnstsw WORD PTR [rcx-0x462200b5]
   14002564e:	rex.WXB (bad) 
   140025650:	fnstsw WORD PTR [rdx-0x2f1700b4]
   140025656:	test   edi,edi
   140025658:	(bad)  
   140025659:	jle    0x14002565b
   14002565b:	(bad)  
   14002565c:	cli    
   14002565d:	cli    
   14002565e:	sti    
   14002565f:	(bad)  
   140025660:	stc    
   140025661:	cli    
   140025662:	sti    
   140025663:	(bad)  
   140025664:	stc    
   140025665:	cli    
   140025666:	sti    
   140025667:	(bad)  
   140025668:	std    
   140025669:	std    
   14002566a:	(bad)  
   14002566b:	(bad)  
   14002566c:	in     eax,dx
   14002566d:	in     al,dx
   14002566e:	in     al,dx
   14002566f:	call   rsi
   140025671:	xlat   BYTE PTR ds:[rbx]
   140025672:	fdivr  st,st(7)
   140025674:	xlat   BYTE PTR ds:[rbx]
   140025675:	xlat   BYTE PTR ds:[rbx]
   140025676:	xlat   BYTE PTR ds:[rbx]
   140025677:	call   rdi
   140025679:	xlat   BYTE PTR ds:[rbx]
   14002567a:	fdivr  st,st(7)
   14002567c:	xlat   BYTE PTR ds:[rbx]
   14002567d:	xlat   BYTE PTR ds:[rbx]
   14002567e:	(bad)  
   14002567f:	call   rsi
   140025681:	(bad)  
   140025682:	(bad)  
   140025683:	(bad)  
   140025684:	(bad)  
   140025686:	(bad)  
   140025688:	in     eax,0xe5
   14002568a:	out    0xff,al
   14002568c:	ss ss test BYTE PTR ss:[rax],al
   140025691:	add    BYTE PTR [rax],al
   140025693:	(bad)  
	...
   1400256bc:	(bad)  
   1400256bd:	jle    0x1400256bf
   1400256bf:	(bad)  
   1400256c0:	mov    esp,0x9fff97de
   1400256c5:	(bad)  
   1400256c6:	jmp    WORD PTR [rcx-0x5a009b33]
   1400256cd:	int3   
   1400256ce:	movsxd edi,edi
   1400256d0:	test   al,0xca
   1400256d2:	(bad)  
   1400256d3:	jmp    QWORD PTR [rsi-0x56]
   1400256d6:	fwait
   1400256d7:	inc    DWORD PTR [rdi]
   1400256d9:	sub    ah,0xff
   1400256dc:	add    BYTE PTR [rdx-0x7aff0007],al
   1400256e2:	std    
   1400256e3:	inc    DWORD PTR [rax]
   1400256e5:	xchg   bh,bh
   1400256e7:	inc    DWORD PTR [rax]
   1400256e9:	xchg   edi,edi
   1400256eb:	inc    DWORD PTR [rax]
   1400256ed:	xchg   edi,edi
   1400256ef:	inc    DWORD PTR [rax]
   1400256f1:	xchg   edi,edi
   1400256f3:	inc    DWORD PTR [rax]
   1400256f5:	test   ah,bh
   1400256f7:	inc    DWORD PTR [rax]
   1400256f9:	jl     0x1400256ea
   1400256fb:	inc    DWORD PTR [rsi]
   1400256fd:	jb     0x1400256d6
   1400256ff:	jmp    FWORD PTR [rbp-0x6a]
   140025702:	cwde   
   140025703:	(bad)  
   140025704:	fnstsw WORD PTR [rcx-0x462200b5]
   14002570a:	rex.WXB (bad) 
   14002570c:	fnstsw WORD PTR [rcx-0x452200b5]
   140025712:	rex.WR (bad) 
   140025714:	call   0x14001dce9
   140025719:	jle    0x14002571b
   14002571b:	(bad)  
   14002571c:	cli    
   14002571d:	cli    
   14002571e:	sti    
   14002571f:	(bad)  
   140025720:	cli    
   140025721:	cli    
   140025722:	sti    
   140025723:	(bad)  
   140025724:	cli    
   140025725:	cli    
   140025726:	sti    
   140025727:	(bad)  
   140025728:	(bad)  
   140025729:	(bad)  
   14002572a:	(bad)  
   14002572b:	(bad)  
   14002572c:	mov    ecx,0xbeffb9b8
   140025731:	mov    esi,0xccccffbf
   140025736:	int3   
   140025737:	dec    eax
   140025739:	enter  0xffc8,0xc6
   14002573d:	mov    dh,0xff
   140025740:	rol    al,0xc0
   140025743:	(bad)  
   140025744:	(bad)  
   140025746:	(bad)  
   140025748:	jne    0x1400257bf
   14002574a:	jne    0x140025718
   14002574c:	(bad)  
   14002574d:	(bad)  
   14002574e:	(bad)  
   14002574f:	and    DWORD PTR [rax],eax
	...
   140025779:	add    BYTE PTR [rax],al
   14002577b:	add    bh,bh
   14002577d:	jle    0x14002577f
   14002577f:	(bad)  
   140025780:	mov    ebp,0xa1ff97de
   140025785:	int    0x66
   140025787:	jmp    QWORD PTR [rbx-0x58009c34]
   14002578d:	retf   
   14002578e:	(bad)  
   14002578f:	jmp    FWORD PTR [rbx-0x50009f36]
   140025795:	enter  0xff5e,0xa5
   140025799:	shr    DWORD PTR [rcx-0x1],0x50
   14002579d:	pushf  
   14002579e:	mov    al,0xff
   1400257a0:	(bad)  
   1400257a1:	test   eax,esp
   1400257a3:	inc    DWORD PTR [rax]
   1400257a5:	jle    0x140025798
   1400257a7:	inc    DWORD PTR [rax]
   1400257a9:	jge    0x14002579c
   1400257ab:	inc    DWORD PTR [rax]
   1400257ad:	jl     0x14002579f
   1400257af:	inc    DWORD PTR [rax]
   1400257b1:	jnp    0x1400257a0
   1400257b3:	call   QWORD PTR [rdi]
   1400257b5:	sbb    dl,0xff
   1400257b8:	push   rdi
   1400257b9:	nop
   1400257ba:	test   eax,0x5cb2c5ff
   1400257bf:	(bad)  
   1400257c0:	fnstsw WORD PTR [rcx-0x462200b5]
   1400257c6:	rex.WXB (bad) 
   1400257c8:	fnstsw WORD PTR [rcx-0x462200b5]
   1400257ce:	rex.WXB (bad) 
   1400257d0:	fnstsw WORD PTR [rdx-0x2f1700b4]
   1400257d6:	test   edi,edi
   1400257d8:	(bad)  
   1400257d9:	jle    0x1400257db
   1400257db:	(bad)  
   1400257dc:	cli    
   1400257dd:	cli    
   1400257de:	sti    
   1400257df:	(bad)  
   1400257e0:	cli    
   1400257e1:	cli    
   1400257e2:	sti    
   1400257e3:	(bad)  
   1400257e4:	cli    
   1400257e5:	cli    
   1400257e6:	sti    
   1400257e7:	(bad)  
   1400257e8:	(bad)  
   1400257e9:	(bad)  
   1400257ea:	(bad)  
   1400257eb:	push   QWORD PTR [rbx-0xe004c4d]
   1400257f1:	icebp  
   1400257f2:	icebp  
   1400257f3:	(bad)  
   1400257f4:	clc    
   1400257f5:	clc    
   1400257f6:	clc    
   1400257f7:	(bad)  
   1400257f8:	stc    
   1400257f9:	stc    
   1400257fa:	stc    
   1400257fb:	(bad)  
   1400257fc:	out    dx,eax
   1400257fd:	out    dx,eax
   1400257fe:	out    dx,eax
   1400257ff:	(bad)  
   140025800:	jmp    0x1400257ed
   140025802:	in     al,dx
   140025803:	call   QWORD PTR [rdx+0xdd99292]
   140025809:	or     eax,0x340d
	...
   14002583a:	add    BYTE PTR [rax],al
   14002583c:	(bad)  
   14002583d:	jle    0x14002583f
   14002583f:	(bad)  
   140025840:	mov    esi,0xa3ff97de
   140025845:	int    0x65
   140025847:	jmp    QWORD PTR [rsi-0x55009c35]
   14002584d:	retf   0xff62
   140025850:	scas   al,BYTE PTR es:[rdi]
   140025851:	leave  
   140025852:	(bad)  
   140025853:	push   QWORD PTR [rbx-0x4800a139]
   140025859:	(bad)  
   14002585a:	pop    rsp
   14002585b:	(bad)  
   14002585c:	mov    esp,0xc3ff5ac4
   140025861:	rcl    DWORD PTR [rdi-0x1],0xb9
   140025865:	mov    edx,0xaea2ff62
   14002586a:	jne    0x14002586b
   14002586c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002586d:	lods   al,BYTE PTR ds:[rsi]
   14002586e:	jae    0x14002586f
   140025870:	(bad)  
   140025871:	mov    ah,0x5c
   140025873:	(bad)  
   140025874:	fnstsw WORD PTR [rdx-0x452200b4]
   14002587a:	rex.WR (bad) 
   14002587c:	fnstsw WORD PTR [rdx-0x452200b4]
   140025882:	rex.WR (bad) 
   140025884:	fnstsw WORD PTR [rdx-0x452200b4]
   14002588a:	rex.WR (bad) 
   14002588c:	fnstsw WORD PTR [rdx-0x452200b4]
   140025892:	rex.WR (bad) 
   140025894:	call   0x14001de69
   140025899:	jle    0x14002589b
   14002589b:	(bad)  
   14002589c:	cli    
   14002589d:	cli    
   14002589e:	sti    
   14002589f:	(bad)  
   1400258a0:	cli    
   1400258a1:	cli    
   1400258a2:	sti    
   1400258a3:	(bad)  
   1400258a4:	cli    
   1400258a5:	cli    
   1400258a6:	sti    
   1400258a7:	(bad)  
   1400258a8:	(bad)  
   1400258a9:	(bad)  
   1400258aa:	(bad)  
   1400258ab:	push   QWORD PTR [rsi-0xe00494a]
   1400258b1:	icebp  
   1400258b2:	icebp  
   1400258b3:	(bad)  
   1400258b4:	(bad)  
   1400258b5:	(bad)  
   1400258b6:	(bad)  
   1400258b7:	(bad)  
   1400258b8:	jmp    0x1400258a5
   1400258ba:	jmp    0x1400258bb
   1400258bc:	(bad)  
   1400258bd:	(bad)  
   1400258be:	(bad)  
   1400258bf:	call   FWORD PTR [rax+0xfd99a98]
   1400258c5:	(bad)  
   1400258c6:	wrmsr  
   1400258c8:	add    BYTE PTR [rax],al
   1400258ca:	add    BYTE PTR [rcx],al
	...
   1400258fc:	(bad)  
   1400258fd:	jle    0x1400258ff
   1400258ff:	in     eax,dx
   140025900:	leave  
   140025901:	fcom   DWORD PTR [rdx-0x6a233e25]
   140025907:	inc    esp
   140025909:	fcom   QWORD PTR [rdi+rdi*8-0x6c2539]
   140025910:	leave  
   140025911:	ficom  DWORD PTR [rdx-0x6f273301]
   140025917:	call   rax
   140025919:	fmul   DWORD PTR [rdi-0x72292b01]
   14002591f:	(bad)  
   140025920:	fcmovbe st,st(4)
   140025922:	mov    bh,bh
   140025924:	(bad)  
   140025926:	mov    bh,bh
   140025928:	in     al,0xd1
   14002592a:	xchg   bh,bh
   14002592c:	out    0xd0,eax
   14002592e:	test   edi,edi
   140025930:	call   0x12901df05
   140025935:	rol    BYTE PTR [rbp-0x7a2f1701],1
   14002593b:	(bad)  
   14002593c:	call   0x12901df11
   140025941:	rol    BYTE PTR [rbp-0x7a2f1701],1
   140025947:	(bad)  
   140025948:	call   0x12901df1d
   14002594d:	rol    BYTE PTR [rbp-0x7a2f1701],1
   140025953:	(bad)  
   140025954:	in     eax,dx
   140025955:	(bad)  
   140025956:	xchg   esi,eax
   140025957:	(bad)  
   140025958:	inc    DWORD PTR [rbp-0x50500f1]
   14002595e:	sti    
   14002595f:	(bad)  
   140025960:	cli    
   140025961:	cli    
   140025962:	sti    
   140025963:	(bad)  
   140025964:	cli    
   140025965:	cli    
   140025966:	cli    
   140025967:	(bad)  
   140025968:	(bad)  
   140025969:	(bad)  
   14002596a:	(bad)  
   14002596b:	push   QWORD PTR [rbp-0x1c004a4b]
   140025971:	jrcxz  0x140025956
   140025973:	(bad)  
   140025974:	in     al,dx
   140025975:	in     al,dx
   140025976:	in     al,dx
   140025977:	jmp    rbx
   140025979:	jrcxz  0x14002595f
   14002597b:	call   FWORD PTR [rax+0xdd49898]
   140025981:	or     eax,0x2d0d
	...
   1400259ba:	add    BYTE PTR [rax],al
   1400259bc:	(bad)  
   1400259bd:	jle    0x1400259bf
   1400259bf:	test   bh,bh
   1400259c1:	jle    0x1400259c3
   1400259c3:	in     eax,dx
   1400259c4:	(bad)  
   1400259c5:	jle    0x1400259c7
   1400259c7:	(bad)  
   1400259c8:	(bad)  
   1400259c9:	jle    0x1400259cb
   1400259cb:	(bad)  
   1400259cc:	(bad)  
   1400259cd:	jle    0x1400259cf
   1400259cf:	(bad)  
   1400259d0:	(bad)  
   1400259d1:	jle    0x1400259d3
   1400259d3:	(bad)  
   1400259d4:	(bad)  
   1400259d5:	jle    0x1400259d7
   1400259d7:	(bad)  
   1400259d8:	(bad)  
   1400259d9:	jle    0x1400259db
   1400259db:	(bad)  
   1400259dc:	(bad)  
   1400259dd:	jle    0x1400259df
   1400259df:	(bad)  
   1400259e0:	(bad)  
   1400259e1:	jle    0x1400259e3
   1400259e3:	(bad)  
   1400259e4:	(bad)  
   1400259e5:	jle    0x1400259e7
   1400259e7:	(bad)  
   1400259e8:	(bad)  
   1400259e9:	jle    0x1400259eb
   1400259eb:	(bad)  
   1400259ec:	(bad)  
   1400259ed:	jle    0x1400259ef
   1400259ef:	(bad)  
   1400259f0:	(bad)  
   1400259f1:	jle    0x1400259f3
   1400259f3:	(bad)  
   1400259f4:	(bad)  
   1400259f5:	jle    0x1400259f7
   1400259f7:	(bad)  
   1400259f8:	(bad)  
   1400259f9:	jle    0x1400259fb
   1400259fb:	(bad)  
   1400259fc:	(bad)  
   1400259fd:	jle    0x1400259ff
   1400259ff:	(bad)  
   140025a00:	(bad)  
   140025a01:	jle    0x140025a03
   140025a03:	(bad)  
   140025a04:	(bad)  
   140025a05:	jle    0x140025a07
   140025a07:	(bad)  
   140025a08:	(bad)  
   140025a09:	jle    0x140025a0b
   140025a0b:	(bad)  
   140025a0c:	(bad)  
   140025a0d:	jle    0x140025a0f
   140025a0f:	(bad)  
   140025a10:	(bad)  
   140025a11:	jle    0x140025a13
   140025a13:	(bad)  
   140025a14:	inc    DWORD PTR [rbp-0x460200f1]
   140025a1a:	ja     0x140025a1b
   140025a1c:	cli    
   140025a1d:	sti    
   140025a1e:	cld    
   140025a1f:	(bad)  
   140025a20:	cli    
   140025a21:	stc    
   140025a22:	cli    
   140025a23:	push   rsi
   140025a25:	div    dh
   140025a27:	(bad)  
   140025a28:	(bad)  
   140025a29:	(bad)  
   140025a2a:	(bad)  
   140025a2b:	push   QWORD PTR [rsi-0x2500494a]
   140025a31:	fcmovu st,st(2)
   140025a33:	jmp    rbp
   140025a35:	in     eax,0xe7
   140025a37:	dec    DWORD PTR [rcx+0xccc8989]
   140025a3d:	or     al,0xc
   140025a3f:	sub    eax,DWORD PTR [rax]
	...
   140025a8d:	add    BYTE PTR [rax],al
   140025a8f:	add    bl,dl
   140025a91:	rcl    ebx,cl
   140025a93:	(bad)  
   140025a94:	(bad)  
   140025a95:	(bad)  
   140025a96:	(bad)  
   140025a97:	(bad)  
   140025a98:	cld    
   140025a99:	cld    
   140025a9a:	std    
   140025a9b:	(bad)  
   140025a9c:	cld    
   140025a9d:	cld    
   140025a9e:	std    
   140025a9f:	(bad)  
   140025aa0:	cld    
   140025aa1:	cld    
   140025aa2:	std    
   140025aa3:	(bad)  
   140025aa4:	cld    
   140025aa5:	cld    
   140025aa6:	std    
   140025aa7:	(bad)  
   140025aa8:	cld    
   140025aa9:	cld    
   140025aaa:	std    
   140025aab:	(bad)  
   140025aac:	cld    
   140025aad:	cld    
   140025aae:	std    
   140025aaf:	(bad)  
   140025ab0:	sti    
   140025ab1:	cld    
   140025ab2:	std    
   140025ab3:	(bad)  
   140025ab4:	sti    
   140025ab5:	sti    
   140025ab6:	cld    
   140025ab7:	(bad)  
   140025ab8:	sti    
   140025ab9:	sti    
   140025aba:	cld    
   140025abb:	(bad)  
   140025abc:	sti    
   140025abd:	sti    
   140025abe:	cld    
   140025abf:	(bad)  
   140025ac0:	sti    
   140025ac1:	sti    
   140025ac2:	cld    
   140025ac3:	(bad)  
   140025ac4:	sti    
   140025ac5:	sti    
   140025ac6:	cld    
   140025ac7:	(bad)  
   140025ac8:	sti    
   140025ac9:	sti    
   140025aca:	cld    
   140025acb:	(bad)  
   140025acc:	sti    
   140025acd:	sti    
   140025ace:	cld    
   140025acf:	(bad)  
   140025ad0:	sti    
   140025ad1:	sti    
   140025ad2:	cld    
   140025ad3:	(bad)  
   140025ad4:	sti    
   140025ad5:	sti    
   140025ad6:	cld    
   140025ad7:	(bad)  
   140025ad8:	sti    
   140025ad9:	sti    
   140025ada:	cld    
   140025adb:	(bad)  
   140025adc:	cli    
   140025add:	cli    
   140025ade:	sti    
   140025adf:	push   rsi
   140025ae1:	div    dh
   140025ae3:	push   rbx
   140025ae5:	repz repz push rsi
   140025ae9:	div    esi
   140025aeb:	(bad)  
   140025aec:	mov    esp,0xd9ffbcbc
   140025af1:	(bad)  
   140025af3:	call   QWORD PTR [rdi+0x8d29797]
   140025af9:	or     BYTE PTR [rax],cl
   140025afb:	add    BYTE PTR es:[rax],al
	...
   140025b4e:	add    BYTE PTR [rax],al
   140025b50:	rcl    ebx,cl
   140025b52:	sar    edi,cl
   140025b54:	(bad)  
   140025b55:	(bad)  
   140025b56:	(bad)  
   140025b57:	(bad)  
   140025b58:	(bad)  
   140025b59:	(bad)  
   140025b5a:	(bad)  
   140025b5b:	(bad)  
   140025b5c:	(bad)  
   140025b5d:	(bad)  
   140025b5e:	(bad)  
   140025b5f:	(bad)  
   140025b60:	(bad)  
   140025b61:	(bad)  
   140025b62:	(bad)  
   140025b63:	(bad)  
   140025b64:	(bad)  
   140025b65:	(bad)  
   140025b66:	(bad)  
   140025b67:	(bad)  
   140025b68:	(bad)  
   140025b69:	(bad)  
   140025b6a:	(bad)  
   140025b6b:	(bad)  
   140025b6c:	(bad)  
   140025b6d:	(bad)  
   140025b6e:	(bad)  
   140025b6f:	(bad)  
   140025b70:	(bad)  
   140025b71:	(bad)  
   140025b72:	(bad)  
   140025b73:	(bad)  
   140025b74:	std    
   140025b75:	(bad)  
   140025b76:	(bad)  
   140025b77:	(bad)  
   140025b78:	std    
   140025b79:	std    
   140025b7a:	(bad)  
   140025b7b:	(bad)  
   140025b7c:	std    
   140025b7d:	std    
   140025b7e:	(bad)  
   140025b7f:	(bad)  
   140025b80:	std    
   140025b81:	std    
   140025b82:	(bad)  
   140025b83:	(bad)  
   140025b84:	std    
   140025b85:	std    
   140025b86:	(bad)  
   140025b87:	(bad)  
   140025b88:	std    
   140025b89:	std    
   140025b8a:	(bad)  
   140025b8b:	(bad)  
   140025b8c:	std    
   140025b8d:	std    
   140025b8e:	(bad)  
   140025b8f:	(bad)  
   140025b90:	std    
   140025b91:	std    
   140025b92:	(bad)  
   140025b93:	(bad)  
   140025b94:	std    
   140025b95:	std    
   140025b96:	(bad)  
   140025b97:	(bad)  
   140025b98:	std    
   140025b99:	std    
   140025b9a:	(bad)  
   140025b9b:	(bad)  
   140025b9c:	(bad)  
   140025b9d:	(bad)  
   140025b9e:	(bad)  
   140025b9f:	(bad)  
   140025ba0:	stc    
   140025ba1:	stc    
   140025ba2:	stc    
   140025ba3:	push   rdi
   140025ba5:	div    edi
   140025ba7:	(bad)  
   140025ba8:	out    dx,al
   140025ba9:	jmp    0x140025b97
   140025bab:	(bad)  
   140025bac:	(bad)  
   140025bae:	(bad)  
   140025bb0:	nop
   140025bb1:	nop
   140025bb2:	nop
   140025bb3:	retf   
   140025bb4:	(bad)  
   140025bb5:	(bad)  
   140025bb6:	(bad)  
   140025bb7:	and    al,0x0
   140025bb9:	add    BYTE PTR [rax],al
   140025bbb:	add    BYTE PTR [rax],al
   140025bbd:	add    BYTE PTR [rax],al
   140025bbf:	add    DWORD PTR [rax],eax
	...
   140025c0d:	add    BYTE PTR [rax],al
   140025c0f:	add    bl,dl
   140025c11:	rcl    ebx,cl
   140025c13:	push   rcx
   140025c15:	icebp  
   140025c16:	icebp  
   140025c17:	(bad)  
   140025c18:	in     eax,dx
   140025c19:	in     eax,dx
   140025c1a:	in     eax,dx
   140025c1b:	(bad)  
   140025c1c:	in     eax,dx
   140025c1d:	in     eax,dx
   140025c1e:	in     eax,dx
   140025c1f:	(bad)  
   140025c20:	in     eax,dx
   140025c21:	in     eax,dx
   140025c22:	in     eax,dx
   140025c23:	(bad)  
   140025c24:	in     eax,dx
   140025c25:	in     eax,dx
   140025c26:	in     eax,dx
   140025c27:	(bad)  
   140025c28:	in     eax,dx
   140025c29:	in     eax,dx
   140025c2a:	in     eax,dx
   140025c2b:	(bad)  
   140025c2c:	in     eax,dx
   140025c2d:	in     eax,dx
   140025c2e:	in     eax,dx
   140025c2f:	(bad)  
   140025c30:	in     eax,dx
   140025c31:	in     eax,dx
   140025c32:	in     eax,dx
   140025c33:	(bad)  
   140025c34:	in     eax,dx
   140025c35:	in     eax,dx
   140025c36:	in     eax,dx
   140025c37:	(bad)  
   140025c38:	in     eax,dx
   140025c39:	in     eax,dx
   140025c3a:	in     eax,dx
   140025c3b:	(bad)  
   140025c3c:	in     eax,dx
   140025c3d:	in     eax,dx
   140025c3e:	in     eax,dx
   140025c3f:	(bad)  
   140025c40:	in     eax,dx
   140025c41:	in     eax,dx
   140025c42:	in     eax,dx
   140025c43:	(bad)  
   140025c44:	in     eax,dx
   140025c45:	in     eax,dx
   140025c46:	in     eax,dx
   140025c47:	(bad)  
   140025c48:	in     eax,dx
   140025c49:	in     eax,dx
   140025c4a:	in     eax,dx
   140025c4b:	(bad)  
   140025c4c:	in     eax,dx
   140025c4d:	in     eax,dx
   140025c4e:	in     eax,dx
   140025c4f:	(bad)  
   140025c50:	in     eax,dx
   140025c51:	in     eax,dx
   140025c52:	in     eax,dx
   140025c53:	(bad)  
   140025c54:	in     eax,dx
   140025c55:	in     eax,dx
   140025c56:	in     eax,dx
   140025c57:	(bad)  
   140025c58:	in     eax,dx
   140025c59:	in     eax,dx
   140025c5a:	in     eax,dx
   140025c5b:	(bad)  
   140025c5c:	in     eax,dx
   140025c5d:	in     eax,dx
   140025c5e:	in     eax,dx
   140025c5f:	(bad)  
   140025c60:	in     al,dx
   140025c61:	in     al,dx
   140025c62:	in     al,dx
   140025c63:	push   rsp
   140025c65:	repnz icebp 
   140025c67:	call   rbx
   140025c69:	fcmovnu st,st(5)
   140025c6b:	(bad)  
   140025c6c:	outs   dx,BYTE PTR ds:[rsi]
   140025c6d:	jb     0x140025ce2
   140025c6f:	lods   al,BYTE PTR ds:[rsi]
   140025c70:	add    eax,0x190505
	...
   140025ccd:	add    BYTE PTR [rax],al
   140025ccf:	add    dh,dl
   140025cd1:	(bad)  
   140025cd2:	(bad)  
   140025cd3:	cld    
   140025cd4:	fcomp  st(0)
   140025cd6:	fdivr  st,st(4)
   140025cd8:	(bad)  
   140025cd9:	(bad)  
   140025cda:	(bad)  
   140025cdb:	cld    
   140025cdc:	(bad)  
   140025cdd:	(bad)  
   140025cde:	(bad)  
   140025cdf:	cld    
   140025ce0:	(bad)  
   140025ce1:	(bad)  
   140025ce2:	(bad)  
   140025ce3:	cld    
   140025ce4:	(bad)  
   140025ce5:	(bad)  
   140025ce6:	(bad)  
   140025ce7:	cld    
   140025ce8:	(bad)  
   140025ce9:	(bad)  
   140025cea:	(bad)  
   140025ceb:	cld    
   140025cec:	(bad)  
   140025ced:	(bad)  
   140025cee:	(bad)  
   140025cef:	cld    
   140025cf0:	(bad)  
   140025cf1:	(bad)  
   140025cf2:	(bad)  
   140025cf3:	cld    
   140025cf4:	(bad)  
   140025cf5:	(bad)  
   140025cf6:	(bad)  
   140025cf7:	cld    
   140025cf8:	(bad)  
   140025cf9:	(bad)  
   140025cfa:	(bad)  
   140025cfb:	cld    
   140025cfc:	(bad)  
   140025cfd:	(bad)  
   140025cfe:	(bad)  
   140025cff:	cld    
   140025d00:	(bad)  
   140025d01:	(bad)  
   140025d02:	(bad)  
   140025d03:	cld    
   140025d04:	(bad)  
   140025d05:	(bad)  
   140025d06:	(bad)  
   140025d07:	cld    
   140025d08:	(bad)  
   140025d09:	(bad)  
   140025d0a:	(bad)  
   140025d0b:	cld    
   140025d0c:	(bad)  
   140025d0d:	(bad)  
   140025d0e:	(bad)  
   140025d0f:	cld    
   140025d10:	(bad)  
   140025d11:	(bad)  
   140025d12:	(bad)  
   140025d13:	cld    
   140025d14:	(bad)  
   140025d15:	(bad)  
   140025d16:	(bad)  
   140025d17:	cld    
   140025d18:	(bad)  
   140025d19:	(bad)  
   140025d1a:	(bad)  
   140025d1b:	cld    
   140025d1c:	(bad)  
   140025d1d:	(bad)  
   140025d1e:	(bad)  
   140025d1f:	cld    
   140025d20:	(bad)  
   140025d21:	(bad)  
   140025d22:	(bad)  
   140025d23:	cld    
   140025d24:	in     al,0xe1
   140025d26:	loopne 0x140025d24
   140025d28:	lods   eax,DWORD PTR ds:[rsi]
   140025d29:	(bad)
   140025d2c:	(bad)  
   140025d2d:	and    BYTE PTR [rcx],ah
   140025d2f:	sub    eax,DWORD PTR [rax]
	...
   14002612d:	add    BYTE PTR [rax],al
   14002612f:	add    bh,bh
   140026131:	add    BYTE PTR [rax],al
   140026133:	add    BYTE PTR [rax],al
   140026135:	jg     0x140026137
   140026137:	add    bh,bh
   140026139:	add    BYTE PTR [rax],al
   14002613b:	add    BYTE PTR [rax],al
   14002613d:	(bad)  
   14002613e:	add    BYTE PTR [rax],al
   140026140:	inc    DWORD PTR [rax]
   140026142:	add    BYTE PTR [rax],al
   140026144:	add    BYTE PTR [rdi],bh
   140026146:	add    BYTE PTR [rax],al
   140026148:	inc    DWORD PTR [rax]
   14002614a:	add    BYTE PTR [rax],al
   14002614c:	add    BYTE PTR [rdi],bh
   14002614e:	add    BYTE PTR [rax],al
   140026150:	inc    DWORD PTR [rax]
   140026152:	add    BYTE PTR [rax],al
   140026154:	add    BYTE PTR [rdi],bh
   140026156:	add    BYTE PTR [rax],al
   140026158:	inc    DWORD PTR [rax]
   14002615a:	add    BYTE PTR [rax],al
   14002615c:	add    BYTE PTR [rdi],bh
   14002615e:	add    BYTE PTR [rax],al
   140026160:	inc    DWORD PTR [rax]
   140026162:	add    BYTE PTR [rax],al
   140026164:	add    BYTE PTR [rdi],bh
   140026166:	add    BYTE PTR [rax],al
   140026168:	inc    DWORD PTR [rax]
   14002616a:	add    BYTE PTR [rax],al
   14002616c:	add    BYTE PTR [rdi],bh
   14002616e:	add    BYTE PTR [rax],al
   140026170:	inc    DWORD PTR [rax]
   140026172:	add    BYTE PTR [rax],al
   140026174:	add    BYTE PTR [rdi],bh
   140026176:	add    BYTE PTR [rax],al
   140026178:	inc    DWORD PTR [rax]
   14002617a:	add    BYTE PTR [rax],al
   14002617c:	add    BYTE PTR [rdi],bh
   14002617e:	add    BYTE PTR [rax],al
   140026180:	inc    DWORD PTR [rax]
   140026182:	add    BYTE PTR [rax],al
   140026184:	add    BYTE PTR [rdi],bh
   140026186:	add    BYTE PTR [rax],al
   140026188:	inc    DWORD PTR [rax]
   14002618a:	add    BYTE PTR [rax],al
   14002618c:	add    BYTE PTR [rdi],bh
   14002618e:	add    BYTE PTR [rax],al
   140026190:	inc    DWORD PTR [rax]
   140026192:	add    BYTE PTR [rax],al
   140026194:	add    BYTE PTR [rdi],bh
   140026196:	add    BYTE PTR [rax],al
   140026198:	inc    DWORD PTR [rax]
   14002619a:	add    BYTE PTR [rax],al
   14002619c:	add    BYTE PTR [rdi],bh
   14002619e:	add    BYTE PTR [rax],al
   1400261a0:	inc    DWORD PTR [rax]
   1400261a2:	add    BYTE PTR [rax],al
   1400261a4:	add    BYTE PTR [rdi],bh
   1400261a6:	add    BYTE PTR [rax],al
   1400261a8:	loopne 0x1400261aa
   1400261aa:	add    BYTE PTR [rax],al
   1400261ac:	add    BYTE PTR [rdi],bh
   1400261ae:	add    BYTE PTR [rax],al
   1400261b0:	loopne 0x1400261b2
   1400261b2:	add    BYTE PTR [rax],al
   1400261b4:	add    BYTE PTR [rdi],bh
   1400261b6:	add    BYTE PTR [rax],al
   1400261b8:	loopne 0x1400261ba
   1400261ba:	add    BYTE PTR [rax],al
   1400261bc:	add    BYTE PTR [rdi],bh
   1400261be:	add    BYTE PTR [rax],al
   1400261c0:	loopne 0x1400261c2
   1400261c2:	add    BYTE PTR [rax],al
   1400261c4:	add    BYTE PTR [rdi],bh
   1400261c6:	add    BYTE PTR [rax],al
   1400261c8:	loopne 0x1400261ca
   1400261ca:	add    BYTE PTR [rax],al
   1400261cc:	add    BYTE PTR [rdi],bh
   1400261ce:	add    BYTE PTR [rax],al
   1400261d0:	loopne 0x1400261d2
   1400261d2:	add    BYTE PTR [rax],al
   1400261d4:	add    BYTE PTR [rdi],bh
   1400261d6:	add    BYTE PTR [rax],al
   1400261d8:	loopne 0x1400261da
   1400261da:	add    BYTE PTR [rax],al
   1400261dc:	add    BYTE PTR [rdi],bh
   1400261de:	add    BYTE PTR [rax],al
   1400261e0:	loopne 0x1400261e2
   1400261e2:	add    BYTE PTR [rax],al
   1400261e4:	add    BYTE PTR [rdi],bh
   1400261e6:	add    BYTE PTR [rax],al
   1400261e8:	loopne 0x1400261ea
   1400261ea:	add    BYTE PTR [rax],al
   1400261ec:	add    BYTE PTR [rdi],bh
   1400261ee:	add    BYTE PTR [rax],al
   1400261f0:	loopne 0x1400261f2
   1400261f2:	add    BYTE PTR [rax],al
   1400261f4:	add    BYTE PTR [rdi],bh
   1400261f6:	add    BYTE PTR [rax],al
   1400261f8:	loopne 0x1400261fa
   1400261fa:	add    BYTE PTR [rax],al
   1400261fc:	add    BYTE PTR [rdi],bh
   1400261fe:	add    BYTE PTR [rax],al
   140026200:	loopne 0x140026202
   140026202:	add    BYTE PTR [rax],al
   140026204:	add    BYTE PTR [rdi],bh
   140026206:	add    BYTE PTR [rax],al
   140026208:	loopne 0x14002620a
   14002620a:	add    BYTE PTR [rax],al
   14002620c:	add    BYTE PTR [rdi],bh
   14002620e:	add    BYTE PTR [rax],al
   140026210:	loopne 0x140026212
   140026212:	add    BYTE PTR [rax],al
   140026214:	add    BYTE PTR [rdi],bh
   140026216:	add    BYTE PTR [rax],al
   140026218:	loopne 0x14002621a
   14002621a:	add    BYTE PTR [rax],al
   14002621c:	add    BYTE PTR [rdi],bh
   14002621e:	add    BYTE PTR [rax],al
   140026220:	loopne 0x140026222
   140026222:	add    BYTE PTR [rax],al
   140026224:	add    BYTE PTR [rdi+0x0],bh
   140026227:	add    al,ah
   140026229:	add    BYTE PTR [rax],al
   14002622b:	add    BYTE PTR [rax],al
   14002622d:	jg     0x14002622f
   14002622f:	add    al,ah
   140026231:	add    BYTE PTR [rax],al
   140026233:	add    BYTE PTR [rax],al
   140026235:	jg     0x140026237
   140026237:	add    al,ah
   140026239:	add    BYTE PTR [rax],al
   14002623b:	add    BYTE PTR [rax],al
   14002623d:	jg     0x14002623f
   14002623f:	add    al,ah
   140026241:	add    BYTE PTR [rax],al
   140026243:	add    BYTE PTR [rax],al
   140026245:	inc    DWORD PTR [rax]
   140026247:	add    al,ah
   140026249:	add    BYTE PTR [rax],al
   14002624b:	add    BYTE PTR [rcx],al
   14002624d:	inc    DWORD PTR [rax]
   14002624f:	add    al,ah
   140026251:	add    BYTE PTR [rax],al
   140026253:	add    BYTE PTR [rcx],al
   140026255:	inc    DWORD PTR [rax]
   140026257:	add    al,ah
   140026259:	add    BYTE PTR [rax],al
   14002625b:	add    BYTE PTR [rdi],al
   14002625d:	inc    DWORD PTR [rax]
   14002625f:	add    al,ah
   140026261:	add    BYTE PTR [rax],al
   140026263:	add    BYTE PTR [rdi],cl
   140026265:	inc    DWORD PTR [rax]
   140026267:	add    bh,bh
   140026269:	add    BYTE PTR [rax],al
   14002626b:	add    BYTE PTR [rdi],bl
   14002626d:	inc    DWORD PTR [rax]
   14002626f:	add    bh,bh
   140026271:	add    BYTE PTR [rax],al
   140026273:	add    BYTE PTR [rdi],ch
   140026275:	inc    DWORD PTR [rax]
   140026277:	add    bh,bh
   140026279:	add    BYTE PTR [rax],al
   14002627b:	add    BYTE PTR [rdi-0x1],bh
   14002627e:	add    BYTE PTR [rax],al
   140026280:	inc    DWORD PTR [rax]
   140026282:	add    BYTE PTR [rax],al
   140026284:	(bad)  
   140026285:	inc    DWORD PTR [rax]
   140026287:	add    bh,bh
   140026289:	(bad)  
   14002628a:	(bad)  
   14002628b:	(bad)  
   14002628c:	(bad)  
   14002628d:	inc    DWORD PTR [rax]
   14002628f:	add    bh,bh
   140026291:	(bad)  
   140026292:	(bad)  
   140026293:	(bad)  
   140026294:	(bad)  
   140026295:	inc    DWORD PTR [rax]
   140026297:	add    bh,bh
   140026299:	(bad)  
   14002629a:	(bad)  
   14002629b:	(bad)  
   14002629c:	(bad)  
   14002629d:	inc    DWORD PTR [rax]
   14002629f:	add    bh,bh
   1400262a1:	(bad)  
   1400262a2:	(bad)  
   1400262a3:	(bad)  
   1400262a4:	(bad)  
   1400262a5:	inc    DWORD PTR [rax]
   1400262a7:	add    bh,bh
   1400262a9:	(bad)  
   1400262aa:	(bad)  
   1400262ab:	(bad)  
   1400262ac:	(bad)  
   1400262ad:	inc    DWORD PTR [rax]
   1400262af:	add    BYTE PTR [rcx+0xd474e50],cl
   1400262b5:	or     bl,BYTE PTR [rdx]
   1400262b7:	or     al,BYTE PTR [rax]
   1400262b9:	add    BYTE PTR [rax],al
   1400262bb:	or     eax,0x52444849
   1400262c0:	add    BYTE PTR [rax],al
   1400262c2:	add    DWORD PTR [rax],eax
   1400262c4:	add    BYTE PTR [rax],al
   1400262c6:	add    DWORD PTR [rax],eax
   1400262c8:	or     BYTE PTR [rsi],al
   1400262ca:	add    BYTE PTR [rax],al
   1400262cc:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   1400262d0:	data16 add BYTE PTR [rax],al
   1400262d3:	and    BYTE PTR [rax],al
   1400262d5:	rex.WB
   1400262d6:	rex.R
   1400262d7:	push   r12
   1400262d9:	js     0x140026277
   1400262db:	in     al,dx
   1400262dc:	mov    ebp,0xc7249069
   1400262e1:	jne    0x1400262ca
   1400262e3:	stc    
   1400262e4:	jae    0x1400262dd
   1400262e6:	mov    al,cl
   1400262e8:	movabs ds:0x824020007d03eaee,eax
   1400262f1:	add    BYTE PTR [rcx-0x80],al
   1400262f4:	(bad)  
   1400262f5:	(bad)  
   1400262f6:	add    dl,BYTE PTR [rax+rax*2-0x6fc77bf8]
   1400262fd:	xor    al,0x14
   1400262ff:	mov    ecx,0x49a250d2
   140026304:	xchg   esp,eax
   140026305:	(bad)  
   140026306:	xor    al,0xab
   140026308:	pop    rcx
   140026309:	shl    DWORD PTR [rsi+0x57],1
   14002630c:	xor    cl,ch
   14002630e:	enter  0x9b44,0xd5
   140026312:	push   rdx
   140026313:	imul   edi,DWORD PTR [rbx-0x72ca4ce6],0xffffffd9
   14002631a:	jle    0x140026378
   14002631c:	shl    DWORD PTR [rcx],cl
   14002631e:	cmp    ch,BYTE PTR [rax-0x6712e627]
   140026324:	and    al,0x8a
   140026326:	movabs ds:0x5043115c821c83,eax
   14002632f:	sub    BYTE PTR [rsi],bl
   140026331:	and    BYTE PTR [rax-0x80],al
   140026334:	and    al,BYTE PTR [rax]
   140026336:	(bad)  
   140026337:	add    BYTE PTR [rdx],bl
   140026339:	ins    BYTE PTR es:[rdi],dx
   14002633a:	hlt    
   14002633b:	fstp   QWORD PTR [rbp+0x55]
   14002633e:	pop    rbp
   14002633f:	pop    rbp
   140026340:	pop    rcx
   140026341:	xchg   ebp,eax
   140026342:	rex.RXB sbb al,0xee
   140026345:	sti    
   140026346:	rol    ebx,0x23
   140026349:	cmp    al,0xa3
   14002634b:	mov    dl,0xaa
   14002634d:	stos   DWORD PTR es:[rdi],eax
   14002634e:	mov    ebx,0xd5950aab
   140026353:	stc    
   140026354:	fidiv  DWORD PTR [rdx-0x3dcdccd5]
   14002635a:	and    esi,DWORD PTR [rdx]
   14002635c:	ret    0xdfdf
   14002635f:	(bad)  
   140026361:	mov    edi,0x2461cfe7
   140026366:	and    ebx,DWORD PTR [rcx]
   140026368:	leave  
   140026369:	rex.W
   14002636a:	rex.RX xor r10b,BYTE PTR [rdx+0x24648c91]
   140026371:	and    ebx,DWORD PTR [rcx]
   140026373:	leave  
   140026374:	rex.W
   140026375:	rex.RX xor r10b,BYTE PTR [rdx+0x24648c91]
   14002637c:	and    ebx,DWORD PTR [rcx]
   14002637e:	leave  
   14002637f:	rex.W
   140026380:	rex.RX xor r10b,BYTE PTR [rdx+0x24648c91]
   140026387:	and    ebx,DWORD PTR [rcx]
   140026389:	leave  
   14002638a:	rex.W
   14002638b:	rex.RX xor r10b,BYTE PTR [rdx+0x24648c91]
   140026392:	and    ebx,DWORD PTR [rcx]
   140026394:	leave  
   140026395:	rex.W
   140026396:	rex.RX xor r10b,BYTE PTR [rdx+0x24648c91]
   14002639d:	and    ebx,DWORD PTR [rcx]
   14002639f:	leave  
   1400263a0:	rex.W
   1400263a1:	rex.RX xor r10b,BYTE PTR [rdx+0x24648c91]
   1400263a8:	and    ebx,DWORD PTR [rcx]
   1400263aa:	leave  
   1400263ab:	push   rax
   1400263ac:	mov    BYTE PTR [rax-0x43],bh
   1400263af:	(bad)  
   1400263b0:	(bad)  
   1400263b1:	sbb    eax,0x524bde11
   1400263b6:	pop    rsi
   1400263b7:	jmp    0x140026407
   1400263b9:	mov    esi,0x2fac91e6
   1400263be:	(bad)  
   1400263bf:	(bad)  
   1400263c0:	iret   
   1400263c1:	(bad)  
   1400263c2:	add    ecx,DWORD PTR [rsi+rdi*8-0x22]
   1400263c6:	js     0x1400263b7
   1400263c8:	rex.RXB mov r10b,0xd
   1400263cb:	adc    bh,BYTE PTR [rsi+rbx*8-0x57714fe9]
   1400263d2:	cld    
   1400263d3:	adc    eax,0xfdc00160
   1400263d8:	sbb    eax,0x8b70c001
   1400263dd:	test   eax,0xa5fcb2bc
   1400263e2:	sub    ebp,DWORD PTR [rdi-0x7c93e7ef]
   1400263e8:	in     al,dx
   1400263e9:	add    BYTE PTR fs:[rax],cl
   1400263ec:	or     BYTE PTR [rax],0xa8
   1400263ef:	jns    0x140026420
   1400263f1:	cdq    
   1400263f2:	mov    edi,0x78631d46
   1400263f7:	(bad)
   1400263fa:	cmp    al,0xa5
   1400263fc:	add    al,0x80
   1400263fe:	and    al,0xff
   140026400:	in     al,dx
   140026401:	(bad)  
   140026402:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140026403:	hlt    
   140026404:	add    edx,0xffffffe8
   140026407:	jns    0x140026478
   140026409:	xchg   ecx,eax
   14002640a:	test   al,0xd7
   14002640c:	sti    
   14002640d:	add    dl,dh
   14002640f:	xchg   ecx,eax
   140026410:	rol    BYTE PTR es:[rax],1
   140026413:	es repz iret 
   140026416:	sub    DWORD PTR [rbx],esp
   140026418:	or     esp,DWORD PTR [rax-0x49]
   14002641b:	mov    BYTE PTR [rbx-0x12],dl
   14002641e:	adc    al,0x88
   140026420:	or     DWORD PTR [rsi],0x5b3ec3d0
   140026426:	addr32 cmc 
   140026428:	sub    edx,edi
   14002642a:	pop    rbp
   14002642b:	xchg   BYTE PTR [rcx],dl
   14002642d:	or     BYTE PTR [rcx+rax*4-0x14],ch
   140026431:	push   rsp
   140026432:	or     eax,eax
   140026434:	cdq    
   140026435:	sti    
   140026436:	rex.WRB and r8b,r15b
   140026439:	lock xchg DWORD PTR [rdi],edi
   14002643c:	cld    
   14002643d:	mov    ebx,DWORD PTR [rdi]
   14002643f:	(bad)  
   140026440:	clc    
   140026441:	(bad)  
   140026442:	call   FWORD PTR [rcx-0x49]
   140026445:	fcmovne st,st(5)
   140026447:	sbb    BYTE PTR [rcx],al
   140026449:	ror    BYTE PTR [rsi+0x7ae52917],0x5f
   140026450:	idiv   ecx
   140026452:	sti    
   140026453:	(bad)  [rsi-0x69]
   140026456:	jrcxz  0x14002641f
   140026458:	(bad)  
   140026459:	addr32 (bad) 
   14002645c:	out    dx,al
   14002645d:	ja     0x14002648e
   14002645f:	cld    
   140026460:	stc    
   140026461:	lahf   
   140026462:	(bad)  
   140026463:	stc    
   140026464:	jg     0x1400264a1
   140026466:	jbe    0x140026454
   140026468:	fcom   DWORD PTR [rdi-0x41b107f]
   14002646e:	mov    WORD PTR [rbx-0x7f],fs
   140026471:	rcr    DWORD PTR [rcx+0x6],0x7a
   140026475:	mov    ebp,DWORD PTR [rsi]
   140026477:	stc    
   140026478:	stos   BYTE PTR es:[rdi],al
   140026479:	xchg   ebp,eax
   14002647a:	popf   
   14002647b:	or     al,BYTE PTR [rax]
   14002647d:	mov    esi,0xdf37a792
   140026482:	jl     0x140026477
   140026484:	or     eax,0xef7bdef7
   140026489:	sub    eax,0x8cd5dbaf
   14002648e:	fs retf 
   140026490:	(bad)
   140026493:	(bad)  
   140026494:	ds icebp 
   140026496:	mov    ebx,edi
   140026498:	(bad)  
   140026499:	sbb    al,0x39
   14002649b:	sar    BYTE PTR [rdx-0x4],cl
   14002649e:	icebp  
   14002649f:	(bad)  
   1400264a0:	(bad)  
   1400264a1:	(bad)  
   1400264a2:	imul   BYTE PTR [rdi-0x1]
   1400264a5:	idiv   BYTE PTR [rdi-0x130984c7]
   1400264ab:	jrcxz  0x1400264ed
   1400264ad:	popf   
   1400264ae:	shl    dl,cl
   1400264b0:	jae    0x1400264d2
   1400264b2:	xor    BYTE PTR [rdx+0x76493606],dh
   1400264b8:	sub    al,BYTE PTR [rax]
   1400264ba:	hlt    
   1400264bb:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400264bd:	shr    ecx,cl
   1400264bf:	add    al,ah
   1400264c1:	jno    0x1400264cf
   1400264c3:	adc    BYTE PTR [rax],0x9b
   1400264c6:	movsxd eax,DWORD PTR [rsp+rbp*2]
   1400264c9:	push   rsi
   1400264ca:	cmp    edi,DWORD PTR [rbx]
   1400264cc:	in     eax,dx
   1400264cd:	pop    rsp
   1400264ce:	fwait
   1400264cf:	jne    0x14002653f
   1400264d1:	movsxd ecx,DWORD PTR [rsi+rax*8]
   1400264d4:	cwde   
   1400264d5:	loop   0x140026494
   1400264d7:	xchg   ebx,eax
   1400264d8:	sub    al,0xcb
   1400264da:	cli    
   1400264db:	mov    dh,0xfb
   1400264dd:	(bad)  
   1400264de:	add    BYTE PTR [rbp+0x18d7f175],ch
   1400264e4:	push   rbx
   1400264e5:	cld    
   1400264e6:	lods   eax,DWORD PTR ds:[rsi]
   1400264e7:	mov    esi,0xcb2534d2
   1400264ec:	xor    dh,BYTE PTR [rsi+rdx*8-0x4cb9a69c]
   1400264f3:	ftst   
   1400264f5:	lods   eax,DWORD PTR ds:[rsi]
   1400264f6:	outs   dx,DWORD PTR ds:[rsi]
   1400264f7:	jge    0x1400264e4
   1400264f9:	(bad)  
   1400264fa:	sbb    eax,0xfb71dc77
   1400264ff:	iret   
   140026500:	cld    
   140026501:	int3   
   140026502:	iret   
   140026503:	cmp    al,0xfc
   140026505:	fwait
   140026506:	mov    edi,0xf67f9bf9
   14002650b:	leave  
   14002650c:	rex.WRXB jle 0x140026501
   14002650f:	adc    eax,eax
   140026511:	jns    0x14002653f
   140026513:	(bad)  
   140026514:	add    al,0x25
   140026516:	imul   edi,DWORD PTR [rax],0x904d8102
   14002651c:	jne    0x14002658b
   14002651e:	mov    ch,0x9d
   140026520:	and    ch,BYTE PTR [rsi+0x2f294963]
   140026526:	ficomp DWORD PTR [rcx+0x7e1b1085]
   14002652c:	pop    rbp
   14002652d:	mov    DWORD PTR [rdx+rcx*8+0x79],ebx
   140026531:	ss push rbx
   140026533:	stc    
   140026534:	(bad)  
   140026535:	cmc    
   140026536:	mov    esp,0xff6e7257
   14002653b:	js     0x14002653c
   14002653d:	mov    ebp,0x54a51294
   140026542:	icebp  
   140026543:	xlat   BYTE PTR ds:[rbx]
   140026544:	jg     0x14002659b
   140026546:	mov    bh,0xb9
   140026548:	iret   
   140026549:	adc    BYTE PTR [r10+rdi*2+0x14486185],bpl
   140026551:	rex.RB
   140026552:	rex.R push rcx
   140026554:	test   BYTE PTR [rdx-0x76],dl
   140026557:	repz out 0xcf,eax
   14002655a:	repz in al,dx
   14002655c:	mov    bl,0xcf
   14002655e:	repnz (bad) 
   140026560:	adc    ecx,DWORD PTR [rdi-0x70]
   140026563:	sbb    DWORD PTR gs:[rdi-0x4],edi
   140026567:	(bad)  
   140026568:	jg     0x140026566
   14002656a:	mov    bl,0x8f
   14002656c:	ds cli 
   14002656e:	call   0x136c0140a
   140026573:	(bad)  
   140026575:	mov    al,0x23
   140026577:	jg     0x1400265bd
   140026579:	leave  
   14002657a:	jl     0xd05026dc
   140026580:	movabs eax,ds:0xeadaa47f114b8000
   140026589:	rep ins BYTE PTR es:[rdi],dx
   14002658b:	xlat   BYTE PTR ds:[rbx]
   14002658c:	mov    ecx,0x4edde7aa
   140026591:	test   eax,0xa2108882
   140026596:	lock icebp 
   140026598:	stos   DWORD PTR es:[rdi],eax
   140026599:	fcmovnbe st,st(7)
   14002659b:	fidiv  DWORD PTR [rdi-0x1a11ddf6]
   1400265a1:	rex
   1400265a2:	rex.X or BYTE PTR [rcx+0x18],al
   1400265a6:	xchg   BYTE PTR [rbx+rbx*4],dh
   1400265a9:	rex.WRB
   1400265aa:	es (bad) 
   1400265ac:	(bad)  
   1400265ad:	test   eax,0xe77cebd7
   1400265b2:	cmp    ebx,edi
   1400265b4:	loope  0x14002654f
   1400265b6:	addr32 sahf 
   1400265b8:	loope  0x14002653b
   1400265ba:	(bad)  
   1400265bb:	(bad)  
   1400265bc:	mov    eax,0x9f67d9f1
   1400265c1:	std    
   1400265c2:	scas   eax,DWORD PTR es:[rdi]
   1400265c3:	mov    bh,0xdd
   1400265c5:	jbe    0x1400265a2
   1400265c7:	iret   
   1400265c8:	(bad)  
   1400265c9:	rex.RXB (bad) 
   1400265cb:	nop
   1400265cc:	adc    al,BYTE PTR [rsi+rax*2]
   1400265cf:	jb     0x140026556
   1400265d1:	mov    dl,0xeb
   1400265d3:	add    BYTE PTR [rax],al
   1400265d5:	pop    rax
   1400265d6:	gs xchg edx,eax
   1400265d8:	outs   dx,BYTE PTR ds:[rsi]
   1400265d9:	(bad)  
   1400265da:	mov    ecx,0xf3b653b6
   1400265df:	test   ecx,0xc630106a
   1400265e5:	lods   al,BYTE PTR ds:[rsi]
   1400265e6:	push   rdx
   1400265e7:	je     0x140026668
   1400265e9:	(bad)  
   1400265ea:	(bad)  
   1400265eb:	and    ah,bl
   1400265ed:	out    0xea,eax
   1400265ef:	fistp  WORD PTR ss:[rdx-0x5aff7df8]
   1400265f6:	push   rsp
   1400265f7:	(bad)  
   1400265f8:	adc    DWORD PTR [rsp+rcx*2+0x4c],ecx
   1400265fc:	mov    al,0x77
   1400265fe:	out    dx,eax
   1400265ff:	pop    rsi
   140026600:	rex.WRX pushf 
   140026602:	cmp    cl,al
   140026604:	ret    
   140026605:	(bad)  
   140026607:	int3   
   140026608:	in     al,dx
   140026609:	in     al,dx
   14002660a:	sub    al,0x4f
   14002660c:	cmp    al,0xf1
   14002660e:	(bad)  
   14002660f:	(bad)  
   140026610:	mov    ebp,0xff6fedfd
   140026615:	jns    0x140026643
   140026617:	and    eax,ebp
   140026619:	sub    al,0x81
   14002661b:	movabs eax,ds:0x5c00150cb2776170
   140026624:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140026626:	(bad)  
   140026628:	mov    al,0x9d
   14002662b:	out    0xad,eax
   14002662d:	mov    edx,0xe6db1703
   140026632:	rex.RX jle 0x140026634
   140026635:	mov    ch,0x16
   140026637:	or     al,bh
   140026639:	and    cl,ah
   14002663b:	add    ecx,0xffffffbe
   14002663e:	jge    0x14002663b
   140026640:	call   0x1217f21bb
   140026645:	or     ebx,DWORD PTR [rdi+0x60]
   140026648:	jp     0x1400266c4
   14002664a:	(bad)  
   14002664b:	(bad)  
   14002664c:	jg     0x140026647
   14002664e:	retf   
   14002664f:	jg     0x140026641
   140026651:	out    dx,al
   140026652:	ja     0x140026613
   140026654:	sti    
   140026655:	(bad)  
   140026656:	xor    DWORD PTR [rsi],0xb25c0416
   14002665c:	fmul   DWORD PTR [rax+0x2e]
   14002665f:	push   rbx
   140026660:	xchg   BYTE PTR [rdx],cl
   140026662:	add    BYTE PTR [rsi+0x81bb644],ch
   140026668:	pop    rsi
   140026669:	bts    DWORD PTR [rax-0x55],esp
   14002666d:	adc    BYTE PTR gs:[rdi],ah
   140026670:	mov    al,0xd6
   140026672:	call   0xebfbaeb5
   140026677:	sti    
   140026678:	mov    edx,0xf01dcecf
   14002667d:	stc    
   14002667e:	(bad)  
   14002667f:	xor    BYTE PTR [rcx+rcx*1],cl
   140026682:	ret    
   140026683:	nop
   140026684:	std    
   140026685:	sti    
   140026686:	div    DWORD PTR [rbx-0x6]
   140026689:	hlt    
   14002668a:	imul   ebx,DWORD PTR [rsi+0x6619e679],0xec786666
   140026694:	mov    cl,0xc7
   140026696:	jle    0x14002668f
   140026698:	mov    esi,0x18fbeefb
   14002669d:	mov    al,0x8c
   14002669f:	lea    edx,[rax]
   1400266a1:	test   BYTE PTR [rax+rdi*1-0x5469347f],cl
   1400266a8:	(bad)  
   1400266a9:	add    BYTE PTR [rsp+rdi*4+0x76c1ee1e],bl
   1400266b0:	repz adc bl,BYTE PTR [rbx+0x79]
   1400266b4:	(bad)  
   1400266b5:	mov    ch,0x88
   1400266b7:	(bad)
   1400266ba:	(bad)  
   1400266bc:	movabs rdi,0x90c30c348830b596
   1400266c6:	imul   ebp,DWORD PTR [rsi-0x61587947],0x7a
   1400266cd:	mov    dl,BYTE PTR [rbx]
   1400266cf:	(bad)  
   1400266d0:	rex.WRX push rax
   1400266d2:	stos   DWORD PTR es:[rdi],eax
   1400266d3:	(bad)  
   1400266d4:	clc    
   1400266d5:	mov    ebx,0xdfbbfbbf
   1400266da:	std    
   1400266db:	rcr    DWORD PTR [rdi],0xfc
   1400266de:	ror    DWORD PTR [rdi+0x7e81701],0x81
   1400266e5:	xchg   ecx,eax
   1400266e6:	pop    rsp
   1400266e7:	movabs ds:0xb82b88cbe000755c,al
   1400266f0:	cmp    al,0x19
   1400266f2:	rex.R test BYTE PTR [rip+0xffffffffb907f11a],0x8        # 0xf90a5814
   1400266fa:	rex
   1400266fb:	rex.B cld 
   1400266fd:	push   rbp
   1400266fe:	(bad)  
   1400266ff:	jne    0x140026717
   140026701:	or     DWORD PTR [rdi],0xea294a00
   140026707:	cmc    
   140026708:	cmp    dl,BYTE PTR [rdx+0x4a]
   14002670b:	sahf   
   14002670c:	jp     0x1400266f8
   14002670e:	sub    DWORD PTR [rax],eax
   140026710:	sbb    cl,BYTE PTR [rbp-0x30060fa]
   140026716:	out    0x7f,eax
   140026718:	(bad)  
   140026719:	std    
   14002671a:	out    dx,eax
   14002671b:	jg     0x14002671c
   14002671d:	dec    DWORD PTR [rax]
   14002671f:	sub    al,0x62
   140026721:	rol    esp,cl
   140026723:	rex.RXB pushf 
   140026725:	shl    BYTE PTR [rbp-0x38],0x55
   140026729:	or     eax,0x176cbe00
   14002672e:	sbb    ah,ch
   140026730:	(bad)  
   140026731:	(bad)  
   140026732:	(bad)  
   140026733:	nop
   140026734:	and    eax,0x54301eb0
   140026739:	(bad)  
   14002673a:	mov    ebx,0xddbabed1
   14002673f:	add    DWORD PTR [rdi+0x81c03e3],eax
   140026745:	rex.WR
   140026746:	rex.WRB
   140026747:	rex.WRB jno 0x140026734
   14002674a:	(bad)  
   14002674b:	sub    DWORD PTR [rdx-0x53],ebx
   14002674e:	(bad)  
   14002674f:	xchg   r10,rax
   140026751:	xor    BYTE PTR [rcx],dh
   140026753:	xor    ecx,eax
   140026755:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140026756:	ds cmc 
   140026758:	test   eax,0xbbf77ddf
   14002675d:	(bad)  
   14002675f:	(bad)  
   140026760:	mov    cl,0xee
   140026762:	shr    BYTE PTR [rax],0x44
   140026765:	js     0x140026780
   140026767:	xor    dl,BYTE PTR [rax+rax*1]
   14002676a:	mov    al,0x99
   14002676c:	jno    0x140026762
   14002676e:	popf   
   14002676f:	and    al,0xaf
   140026771:	xchg   edi,eax
   140026772:	rex.RB mov r8b,0x59
   140026775:	mov    dl,0x16
   140026777:	or     BYTE PTR [rbp+rax*8+0x4e6db809],ch
   14002677e:	(bad)  
   14002677f:	icebp  
   140026780:	(bad)  
   140026781:	(bad)  
   140026782:	sbb    ah,bh
   140026784:	xchg   edi,eax
   140026785:	and    eax,DWORD PTR [rip+0xffffffffd9e32cb3]        # 0x119e5943e
   14002678b:	addr32 lahf 
   14002678d:	(bad)
   140026790:	cld    
   140026791:	cld    
   140026792:	cmp    al,0x33
   140026794:	xor    esi,DWORD PTR [rbx]
   140026796:	repnz rol DWORD PTR [rdi+0x1f],1
   14002679a:	std    
   14002679b:	jrcxz  0x140026798
   14002679d:	out    dx,al
   14002679e:	mov    ebx,0x2e8117ef
   1400267a3:	(bad)  
   1400267a4:	add    al,0x1c
   1400267a6:	cmp    DWORD PTR [rax+0x26cd3b3b],edi
   1400267ac:	retf   
   1400267ad:	push   rax
   1400267ae:	add    BYTE PTR [rax+0x55],al
   1400267b1:	mov    dh,0x7a
   1400267b3:	add    al,0xbd
   1400267b5:	pop    rdx
   1400267b6:	pop    rsp
   1400267b7:	or     ebp,0xffffff90
   1400267ba:	cmc    
   1400267bb:	cmp    BYTE PTR [rcx+0x4b553eea],al
   1400267c1:	rol    BYTE PTR [rbp+0xd850713],0xab
   1400267c8:	or     DWORD PTR [rsi+0x51],eax
   1400267cb:	adc    al,0x31
   1400267cd:	ss ss (bad) 
   1400267d0:	repz iret 
   1400267d2:	(bad)  
   1400267d3:	(bad)  
   1400267d4:	xchg   esp,eax
   1400267d5:	xchg   edx,eax
   1400267d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400267d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400267d8:	and    eax,0x68161616
   1400267dd:	ss fwait
   1400267df:	jl     0x1400267d2
   1400267e1:	mov    ebx,DWORD PTR [rdi-0x4]
   1400267e4:	ret    
   1400267e5:	jnp    0x1400267d5
   1400267e7:	mov    ecx,0xa9b1e7e7
   1400267ec:	ret    0x9e7e
   1400267ef:	ror    BYTE PTR [rax],0x4
   1400267f2:	and    al,BYTE PTR cs:[rbx+0x9]
   1400267f6:	add    BYTE PTR [rsi-0x4a],cl
   1400267f9:	shl    DWORD PTR [rdi+rbx*8+0x6a],cl
   1400267fd:	sbb    DWORD PTR [rsi-0x72],esp
   140026800:	(bad)  
   140026801:	and    ebx,DWORD PTR [rax+rax*8-0x17cfdfa6]
   140026808:	mov    ebp,0x37381fcf
   14002680d:	add    BYTE PTR [rax],ah
   14002680f:	mov    ah,BYTE PTR [rdx]
   140026811:	loop   0x14002684b
   140026813:	imul   bp,WORD PTR [rcx-0x77],0x8a28
   140026819:	cwde   
   14002681a:	lahf   
   14002681b:	lahf   
   14002681c:	out    0xfc,eax
   14002681e:	stc    
   14002681f:	repz (bad) 
   140026821:	jmp    0x140026898
   140026823:	(bad)  
   140026824:	jnp    0x140026812
   140026826:	mov    cl,0x4f
   140026828:	fidiv  WORD PTR [rbp-0x29]
   14002682b:	pop    rbp
   14002682c:	(bad)  
   14002682d:	shl    DWORD PTR [rsi],0xb
   140026830:	cmp    DWORD PTR [rdi+0x60],esi
   140026833:	test   al,0xfb
   140026835:	div    DWORD PTR [rsi-0x38]
   140026838:	scas   al,BYTE PTR es:[rdi]
   140026839:	mov    eax,0x811bb41
   14002683e:	xchg   ch,cl
   140026840:	sub    bl,BYTE PTR [rax-0x71]
   140026843:	adc    ebx,DWORD PTR [rax+0xb]
   140026846:	add    al,0xfc
   140026848:	mov    BYTE PTR [rax-0x2b],al
   14002684b:	sbb    eax,0x33a04470
   140026850:	call   FWORD PTR [rbp+0x19659025]
   140026856:	lods   eax,DWORD PTR ds:[rsi]
   140026857:	push   rsi
   140026858:	mov    edi,DWORD PTR [rdx-0x43]
   14002685b:	rex.WRX movabs rbx,0x5858581616166dd
   140026865:	movabs ds:0xb87ffaff5febe228,al
   14002686e:	jmp    0x14002681e
   140026870:	mov    ebx,0x2c9b0a7e
   140026875:	in     al,0xa2
   140026877:	add    esp,DWORD PTR [rbx]
   140026879:	(bad)  
   14002687a:	jo     0x140026899
   14002687c:	fst    DWORD PTR [rip+0xffffffffb764e000]        # 0xf7674882
   140026882:	(bad)  
   140026883:	(bad)  
   140026884:	ret    
   140026885:	rex.RX (bad) 
   140026887:	(bad)  
   140026888:	mov    dl,0x4
   14002688a:	stos   BYTE PTR es:[rdi],al
   14002688b:	fistp  WORD PTR [rbp-0x34]
   14002688e:	adc    ch,BYTE PTR [rax+0x29491026]
   140026894:	xor    esi,eax
   140026896:	hlt    
   140026897:	xchg   ecx,eax
   140026898:	xchg   bl,cl
   14002689a:	retf   
   14002689b:	retf   
   14002689c:	sub    BYTE PTR [rbp+0x2490c630],ah
   1400268a2:	or     ebx,esi
   1400268a4:	repz repz int3 
   1400268a7:	iret   
   1400268a8:	iret   
   1400268a9:	and    esp,DWORD PTR [rbp+0x1ec7b1e4]
   1400268af:	sti    
   1400268b0:	xchg   ebx,eax
   1400268b1:	(bad)  
   1400268b2:	clc    
   1400268b3:	sbb    DWORD PTR [rdi],0xb26c59f8
   1400268b9:	push   rax
   1400268ba:	popf   
   1400268bb:	push   rcx
   1400268bc:	(bad)  
   1400268be:	mov    edx,0xabb2
   1400268c3:	mov    dh,0x97
   1400268c5:	int    0xdf
   1400268c7:	sbb    DWORD PTR cs:[rsi],esp
   1400268ca:	imul   esp,DWORD PTR [rax+0x2d],0x77
   1400268ce:	sar    BYTE PTR [rbp+0x7da3d587],0xf5
   1400268d5:	mov    bl,0x7f
   1400268d7:	pushf  
   1400268d8:	rex.WRXB add al,0x3a
   1400268db:	adc    BYTE PTR [rax],bh
   1400268dd:	jge    0x1400268d9
   1400268df:	je     0x140026872
   1400268e1:	ss pushf 
   1400268e3:	sbb    DWORD PTR gs:[rcx-0x6a],ebx
   1400268e7:	adc    eax,0x3468d020
   1400268ec:	in     al,0x13
   1400268ee:	rex.WRXB cmp al,0xf1
   1400268f1:	leave  
   1400268f2:	sbb    al,0x4
   1400268f4:	xchg   esi,eax
   1400268f5:	mov    al,0x45
   1400268f7:	gs rex.RX leave 
   1400268fa:	rex.X imul ecx,eax,0x50
   1400268fe:	add    eax,eax
   140026900:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026901:	jbe    0x1400268cf
   140026903:	push   r11
   140026905:	push   rax
   140026906:	mov    bh,0xe2
   140026908:	jp     0x1400268c0
   14002690a:	add    esi,DWORD PTR [rsi+rsi*4-0xd]
   14002690e:	pop    rsp
   14002690f:	push   rdi
   140026910:	jp     0x1400268e0
   140026912:	rex.B
   140026913:	rex.WX out dx,eax
   140026915:	sub    edi,DWORD PTR [rdi+0xa4d5cfb]
   14002691b:	repnz rex.XB cmp r14b,0xdf
   140026920:	and    BYTE PTR [rax],cl
   140026922:	or     ah,BYTE PTR [rax]
   140026924:	or     bl,al
   140026926:	nop
   140026927:	mov    bl,0x67
   140026929:	iret   
   14002692a:	xor    dh,BYTE PTR [rsi]
   14002692c:	ss rex.RX mov ebp,0x208275e
   140026933:	mov    dl,0x2c
   140026935:	and    ecx,DWORD PTR [rbp+0x53]
   140026938:	out    0xe7,al
   14002693a:	out    0x99,eax
   14002693c:	fwait
   14002693d:	fwait
   14002693e:	rex.XB or r9b,al
   140026941:	and    ecx,DWORD PTR [rdi+0xf47f23c]
   140026947:	cmp    al,0xf0
   140026949:	sar    BYTE PTR [rdi],0xc7
   14002694c:	rex.WRX and rax,0x246041f6
   140026952:	sahf   
   140026953:	or     al,0x15
   140026955:	add    BYTE PTR [rsi+rax*4-0x14],ch
   140026959:	(bad)  
   14002695a:	scas   al,BYTE PTR es:[rdi]
   14002695b:	rcr    BYTE PTR [rbp+0x4ae5bb6b],0x41
   140026962:	sar    BYTE PTR [rdi],0x7e
   140026965:	push   rax
   140026966:	mov    dl,0xd0
   140026968:	movabs al,ds:0x3a773efa0820a0c4
   140026971:	sbb    eax,0x2948318c
   140026976:	test   eax,0x3b856ad5
   14002697b:	nop
   14002697c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002697d:	imul   eax,ecx,0x8d1a3409
   140026983:	lock jae 0x140026925
   140026986:	sti    
   140026987:	fcomp  QWORD PTR [rdi]
   140026989:	mov    ebp,0xfbef7def
   14002698e:	add    eax,0x7390b26c
   140026993:	(bad)  
   140026994:	rex.RX
   140026995:	gs in  eax,0x3c
   140026998:	mov    ecx,0xb60000ea
   14002699d:	(bad)  
   14002699e:	xor    al,0xdc
   1400269a0:	(bad)  
   1400269a1:	fxch   st(1)
   1400269a3:	test   cl,ah
   1400269a5:	pop    rdx
   1400269a6:	sbb    DWORD PTR [rdx+0x38833b7e],eax
   1400269ac:	sub    DWORD PTR [rdx+0xe],0x836e9400
   1400269b3:	adc    BYTE PTR [rdx],al
   1400269b5:	lods   eax,DWORD PTR ds:[rsi]
   1400269b6:	xor    eax,0x5a874e9d
   1400269bb:	lods   eax,DWORD PTR ds:[rsi]
   1400269bc:	push   rsi
   1400269bd:	mov    esp,0x84430c2
   1400269c2:	rex.B (bad) 
   1400269c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400269c5:	int3   
   1400269c6:	int    0xcd
   1400269c8:	jno    0x1400269b8
   1400269ca:	fdivr  QWORD PTR [rcx]
   1400269cc:	(bad)  
   1400269cd:	int    0x66
   1400269cf:	clc    
   1400269d0:	cdq    
   1400269d1:	iret   
   1400269d2:	jl     0x1400269ba
   1400269d4:	(bad)  
   1400269d6:	ja     0x1400269b7
   1400269d8:	jge    0x1400269f9
   1400269da:	(bad)
   1400269dd:	scas   al,BYTE PTR es:[rdi]
   1400269de:	(bad)  
   1400269df:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400269e0:	(bad)  
   1400269e1:	es mov esp,0xaae0c1aa
   1400269e7:	add    al,0x0
   1400269e9:	(bad)  
   1400269ea:	movabs ds:0xa004a0e73fad827c,eax
   1400269f3:	rex.B jns 0x1400269f9
   1400269f6:	sbb    ecx,DWORD PTR [rip+0xffffffffc9294a25]        # 0x1092bb421
   1400269fc:	mov    dl,0xc
   1400269fe:	mov    al,0x29
   140026a00:	sar    DWORD PTR [rsi+0x51],0x11
   140026a04:	addr32 (bad) 
   140026a06:	cmp    BYTE PTR [rbx+0x60],cl
   140026a09:	outs   dx,BYTE PTR ds:[rsi]
   140026a0a:	outs   dx,BYTE PTR ds:[rsi]
   140026a0b:	mov    ?,ecx
   140026a0d:	icebp  
   140026a0e:	icebp  
   140026a0f:	cli    
   140026a10:	xchg   edi,eax
   140026a11:	mov    esi,0xf93fa5f4
   140026a16:	movabs eax,ds:0xac17d6c59fa1fa1f
   140026a1f:	ror    DWORD PTR [rdi+0xe],1
   140026a22:	pop    rsi
   140026a23:	(bad)  
   140026a24:	and    BYTE PTR [rax+0x55],dh
   140026a27:	add    eax,DWORD PTR [rax+0x71185193]
   140026a2d:	imul   ecx,edi,0x39
   140026a30:	rex.W mov cl,0x7
   140026a33:	rex.WRB (bad) 
   140026a35:	scas   al,BYTE PTR es:[rdi]
   140026a36:	pop    rdx
   140026a37:	add    edx,ebp
   140026a39:	std    
   140026a3a:	std    
   140026a3b:	repz gs pop rcx
   140026a3e:	push   rsi
   140026a3f:	mov    esp,?
   140026a41:	out    dx,al
   140026a42:	push   rbp
   140026a43:	scas   eax,DWORD PTR es:[rdi]
   140026a44:	xlat   BYTE PTR ds:[rbx]
   140026a45:	or     esi,DWORD PTR [rdi+0x40]
   140026a48:	imul   ecx,ebp,0xffffffb9
   140026a4b:	jae    0x140026a34
   140026a4d:	cmp    BYTE PTR [rdi-0x12],dh
   140026a50:	sbb    al,0x61
   140026a52:	sbb    BYTE PTR [rsi+0xf],al
   140026a55:	(bad)  
   140026a56:	cld    
   140026a57:	lock out dx,eax
   140026a59:	fnsave [rbx-0x31]
   140026a5c:	cmp    eax,0x252d813f
   140026a61:	push   rsi
   140026a62:	movabs ds:0x94362f2daaf0633f,eax
   140026a6b:	add    BYTE PTR [rax-0xa03e2ab],dh
   140026a71:	and    bl,dh
   140026a73:	mov    dh,0x52
   140026a75:	mov    dh,0x9b
   140026a77:	xor    al,0xac
   140026a79:	sahf   
   140026a7a:	rcl    DWORD PTR [rdi-0x64611bbf],cl
   140026a80:	adc    al,0x54
   140026a82:	sbb    eax,0xd5cffde1
   140026a87:	jge    0x140026a2d
   140026a89:	xchg   esp,eax
   140026a8a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026a8b:	imul   ecx,DWORD PTR [rdx+0x10],0x8d1a3404
   140026a92:	(bad)  
   140026a93:	sbb    BYTE PTR [rdx+riz*4+0x208100a8],cl
   140026a9a:	or     al,dl
   140026a9c:	pop    rdx
   140026a9d:	movabs ds:0xcf67b39e7e7e66b5,eax
   140026aa6:	shr    BYTE PTR [rsi+rsi*1-0x65],cl
   140026aaa:	pop    rdi
   140026aab:	stc    
   140026aac:	retf   0xfe57
   140026aaf:	ret    
   140026ab0:	pop    rbp
   140026ab1:	ja     0x140026a90
   140026ab3:	cmc    
   140026ab4:	add    DWORD PTR [rdx+rdx*8-0x2a8fdf05],ebp
   140026abb:	xchg   edx,eax
   140026abc:	add    DWORD PTR [rbx+0x9],0x0
   140026ac0:	and    ebx,DWORD PTR [rcx]
   140026ac2:	rex.WB (bad) 
   140026ac4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140026ac5:	add    BYTE PTR [rcx+riz*2-0x3fc0a828],al
   140026acc:	mov    ecx,0x70138e03
   140026ad1:	xchg   esi,eax
   140026ad2:	rcr    BYTE PTR [rcx+0x4a506733],0x85
   140026ad9:	rex.WRXB cmp al,0xf1
   140026adc:	(bad)  
   140026add:	(bad)  
   140026ade:	mov    esi,0x7cef9df3
   140026ae3:	or     BYTE PTR [rbx+0x63],bl
   140026ae6:	mov    al,0x8e
   140026ae8:	add    eax,0xdd6ab81
   140026aed:	sbb    BYTE PTR [rdx+0x0],ch
   140026af0:	fmul   st,st(2)
   140026af2:	shr    DWORD PTR [rbp-0x45],1
   140026af5:	rex.RXB jmp 0x1009ffbe8
   140026afb:	adc    DWORD PTR [rbx+riz*1+0x2],edx
   140026aff:	(bad)  
   140026b00:	retf   
   140026b01:	and    BYTE PTR [rbx+rdi*8-0x54],dh
   140026b05:	and    eax,0x2083f94e
   140026b0a:	and    BYTE PTR [rdx+0x7af5ea22],cl
   140026b10:	add    DWORD PTR [rax],eax
   140026b12:	rex.WX test rax,0xffffffffdcf142a2
   140026b18:	fcomp  QWORD PTR [rdi+riz*2]
   140026b1b:	(bad)  
   140026b1c:	pushf  
   140026b1d:	movabs eax,ds:0xff2fe5fcbe35ab56
   140026b26:	(bad)  
   140026b27:	fnsave [rdi-0x21]
   140026b2a:	std    
   140026b2b:	jrcxz  0x140026b05
   140026b2d:	rex.RB
   140026b2e:	rex.WB sbb bl,BYTE PTR [r8+0x6b]
   140026b32:	loopne 0x140026ade
   140026b34:	mov    ah,0x2
   140026b36:	xchg   BYTE PTR [rdx],bl
   140026b38:	add    BYTE PTR [rcx+rbx*1+0x76],bh
   140026b3c:	xor    ch,bh
   140026b3e:	push   0xffffffffffffffe4
   140026b40:	or     dh,dl
   140026b42:	xor    edi,ebp
   140026b44:	stos   DWORD PTR es:[rdi],eax
   140026b45:	imul   eax,edx,0x6853bdee
   140026b4b:	(bad)  
   140026b4c:	(bad)  
   140026b4d:	mov    ah,0x61
   140026b4f:	(bad)  
   140026b50:	(bad)  
   140026b51:	cmp    ebp,DWORD PTR [rbx]
   140026b53:	rol    BYTE PTR [rbp-0x318e22f8],0x12
   140026b5a:	cwde   
   140026b5b:	(bad)  
   140026b5c:	(bad)  
   140026b5d:	(bad)  
   140026b5e:	clc    
   140026b5f:	sti    
   140026b60:	mov    edi,0x7f7ffbff
   140026b65:	sti    
   140026b66:	in     eax,dx
   140026b67:	mov    bh,0x3f
   140026b69:	add    al,0xb4
   140026b6b:	sub    bl,ch
   140026b6d:	or     DWORD PTR [rbp+rsi*2-0x37],ebx
   140026b71:	rex.X mov ebx,0x7b600006
   140026b77:	jl     0x140026b57
   140026b79:	in     eax,dx
   140026b7a:	ins    BYTE PTR es:[rdi],dx
   140026b7b:	jg     0x140026b34
   140026b7d:	jb     0x140026b83
   140026b7f:	push   rbp
   140026b80:	sbb    DWORD PTR [rdx+rcx*1],edx
   140026b83:	hlt    
   140026b84:	mov    bh,0xfb
   140026b86:	xlat   BYTE PTR ds:[rbx]
   140026b87:	(bad)  
   140026b88:	lods   al,BYTE PTR ds:[rsi]
   140026b89:	add    dl,bh
   140026b8b:	mov    ds,WORD PTR [rdi+0x575502b]
   140026b91:	ret    0x2c30
   140026b94:	and    al,BYTE PTR [rip+0xffffffff9f9c1c8e]        # 0xdf9e8828
   140026b9a:	lahf   
   140026b9b:	out    0xe4,eax
   140026b9d:	leave  
   140026b9e:	xchg   ebx,eax
   140026b9f:	xor    al,0x1a
   140026ba1:	(bad)  
   140026ba2:	(bad)  
   140026ba3:	movabs ds:0xff7fdff707fa3e8f,eax
   140026bac:	rex.WRXB (bad) 
   140026bae:	sub    ecx,DWORD PTR [rbx]
   140026bb0:	pop    rbp
   140026bb1:	xchg   ebp,eax
   140026bb2:	leave  
   140026bb3:	rex.X
   140026bb4:	rex.XB add eax,0x9925700
   140026bba:	mov    eax,0xa767ae13
   140026bbf:	sahf   
   140026bc0:	ret    
   140026bc1:	(bad)  
   140026bc2:	xlat   BYTE PTR ds:[rbx]
   140026bc3:	jbe    0x140026b4f
   140026bc5:	outs   dx,DWORD PTR ds:[rsi]
   140026bc6:	fisubr DWORD PTR [rdi-0x247f11b]
   140026bcc:	fmul   QWORD PTR [rbx+0x6b]
   140026bcf:	pop    rbp
   140026bd0:	int3   
   140026bd1:	pshufw mm4,mm2,0xa7
   140026bd5:	or     bh,BYTE PTR [rbx]
   140026bd7:	and    BYTE PTR [rax+0x56],dh
   140026bda:	add    BYTE PTR [rbx],0x2
   140026bdd:	(bad)  
   140026bde:	mov    cl,0x28
   140026be0:	retf   
   140026be1:	xor    cl,dh
   140026be3:	lahf   
   140026be4:	(bad)  
   140026be5:	iret   
   140026be6:	jmp    0xfbdc13be
   140026beb:	ja     0x140026bdc
   140026bed:	int3   
   140026bee:	(bad)  
   140026bf0:	in     eax,dx
   140026bf1:	(bad)  
   140026bf3:	(bad)  
   140026bf4:	cmp    eax,0xe3f3dcf7
   140026bf9:	pop    rax
   140026bfa:	rex.WXB movabs al,ds:0x5432155e136b94e
   140026c04:	add    BYTE PTR [rdi+0x22],dl
   140026c07:	and    esp,DWORD PTR [rax]
   140026c09:	fcomp  DWORD PTR [rcx-0x19]
   140026c0c:	jno    0x140026c40
   140026c0e:	enter  0xafff,0x66
   140026c12:	or     BYTE PTR [rsi-0x51],dl
   140026c15:	int    0x99
   140026c17:	stc    
   140026c18:	(bad)  
   140026c19:	jrcxz  0x140026bc5
   140026c1b:	or     edx,DWORD PTR [rax+0x2f77e538]
   140026c21:	mov    bh,0xdd
   140026c23:	sbb    bl,al
   140026c25:	ret    0x2c2
   140026c28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140026c29:	rex.WRX popf 
   140026c2b:	(bad)  
   140026c2c:	jp     0x140026ca8
   140026c2e:	jp     0x140026c1a
   140026c30:	repz lahf 
   140026c32:	(bad)  
   140026c33:	cld    
   140026c34:	(bad)  
   140026c35:	fistp  QWORD PTR [rbx-0x11]
   140026c38:	mov    ebp,0xb26c01f
   140026c3d:	xor    eax,0x56e020b0
   140026c42:	movabs ds:0x4e000355c12ed5de,al
   140026c4b:	rex.RX
   140026c4c:	mov    al,0xb3
   140026c4f:	(bad)  
   140026c50:	add    ebp,DWORD PTR [rbx-0x760ffa3]
   140026c56:	pop    rbx
   140026c57:	mov    eax,DWORD PTR [rax]
   140026c59:	pop    rsp
   140026c5a:	retf   
   140026c5b:	xchg   ebp,eax
   140026c5c:	test   al,0x96
   140026c5e:	adc    cl,BYTE PTR [rbx]
   140026c60:	ret    
   140026c61:	mov    al,0x2f
   140026c63:	movsxd edx,DWORD PTR [rax+0x49]
   140026c66:	test   DWORD PTR [rdx+rax*1-0x41eef27f],edx
   140026c6d:	repnz retf 0xcc2b
   140026c71:	int3   
   140026c72:	int3   
   140026c73:	in     al,dx
   140026c74:	jge    0x140026c5a
   140026c76:	xchg   ecx,eax
   140026c77:	rex.RXB (bad) 
   140026c79:	and    al,0x7
   140026c7b:	sbb    DWORD PTR [rax],0x633fa318
   140026c81:	jo     0x140026c5a
   140026c83:	add    al,cl
   140026c85:	push   rbp
   140026c86:	(bad)  
   140026c87:	add    BYTE PTR [rsi-0x7a],cl
   140026c8a:	popf   
   140026c8b:	rcr    bl,1
   140026c8d:	ins    DWORD PTR es:[rdi],dx
   140026c8e:	mov    al,0xd6
   140026c91:	jl     0x140026c93
   140026c93:	ja     0x140026ca2
   140026c95:	adc    BYTE PTR ds:[rcx+rcx*4+0x40],dl
   140026c9a:	pop    rdi
   140026c9b:	stos   BYTE PTR es:[rdi],al
   140026c9c:	test   DWORD PTR [rbp+0xb],eax
   140026c9f:	or     esp,DWORD PTR [rax]
   140026ca1:	jb     0x140026d22
   140026ca3:	and    eax,DWORD PTR [rdx-0x6f5efbe0]
   140026ca9:	rex.WX mov cl,0xd2
   140026cac:	pop    rcx
   140026cad:	loope  0x140026c97
   140026caf:	shl    DWORD PTR [rbx-0x32727274],1
   140026cb5:	(bad)  
   140026cb6:	(bad)  
   140026cb7:	pop    rdi
   140026cb8:	std    
   140026cb9:	(bad)  
   140026cba:	(bad)  
   140026cbb:	jge    0x140026cb8
   140026cbd:	in     eax,dx
   140026cbe:	mov    bh,0xff
   140026cc0:	xor    BYTE PTR [rsi],dh
   140026cc2:	xor    DWORD PTR [rax-0x27e2e6b7],ebp
   140026cc8:	mov    ch,0x61
   140026cca:	ret    0x16ab
   140026ccd:	add    BYTE PTR [rax-0x5],ah
   140026cd0:	or     ebp,DWORD PTR [esi-0x7b]
   140026cd4:	ins    BYTE PTR es:[rdi],dx
   140026cd5:	(bad)  
   140026cd6:	xchg   ecx,eax
   140026cd7:	mov    bh,0x1d
   140026cd9:	out    0x19,eax
   140026cdb:	rex.R (bad) 
   140026cdd:	mov    edx,0x39fe4089
   140026ce2:	popf   
   140026ce3:	mov    edi,0x895496bf
   140026ce8:	shl    DWORD PTR [rax],0x8
   140026ceb:	or     BYTE PTR [rbx+0x5116a880],al
   140026cf1:	stos   DWORD PTR es:[rdi],eax
   140026cf2:	rex.RB add eax,0x8692808
   140026cf8:	adc    DWORD PTR [rax+0x5385674e],0xffffffa7
   140026cff:	rex.WRXB jo 0x140026cf2
   140026d02:	loopne 0x140026cc5
   140026d04:	imul   ebx,DWORD PTR [rdi-0x160582],0xfffffff4
   140026d0b:	mov    ?,WORD PTR [rdi-0x44]
   140026d0e:	jrcxz  0x140026d11
   140026d10:	ins    BYTE PTR es:[rdi],dx
   140026d11:	sahf   
   140026d12:	rex adc ebx,DWORD PTR [rbx+0x4bb21027]
   140026d19:	rex.B loopne 0x140026cc6
   140026d1c:	(bad)  
   140026d1d:	adc    BYTE PTR [rcx+0x32b8af0c],0x61
   140026d24:	imul   ecx,DWORD PTR [rcx-0x5f3b02ec],0xa
   140026d2b:	add    al,BYTE PTR [rdx]
   140026d2d:	adc    eax,0x51210410
   140026d32:	adc    BYTE PTR [rdx],dl
   140026d34:	xchg   BYTE PTR [rcx],al
   140026d36:	sub    DWORD PTR [rdx+0x12eb2811],0xe2df385c
   140026d40:	in     al,0xf1
   140026d42:	adc    eax,DWORD PTR [rcx+riz*2+0x2f85fd38]
   140026d49:	jl     0x140026d2c
   140026d4b:	ja     0x140026d2b
   140026d4d:	div    BYTE PTR [rsi+0x37903db7]
   140026d53:	xor    eax,0x6c625946
   140026d58:	add    al,0x0
   140026d5a:	cmp    eax,DWORD PTR [rcx-0x4a]
   140026d5d:	jp     0x140026da3
   140026d5f:	(bad)  [rdx]
   140026d61:	fldcw  WORD PTR [rsi]
   140026d63:	xlat   BYTE PTR ds:[rbx]
   140026d64:	(bad)  
   140026d65:	cmp    esp,DWORD PTR [rbx+rbp*4+0x2d]
   140026d69:	add    DWORD PTR [rdi],esp
   140026d6b:	mov    ?,ebp
   140026d6d:	mov    edi,0x39fa46f4
   140026d72:	xor    DWORD PTR [rax],0x88c3088c
   140026d78:	sub    BYTE PTR [rdx],ch
   140026d7a:	mov    bl,0x5
   140026d7c:	movabs ds:0x952219488418445a,eax
   140026d85:	imul   edi,DWORD PTR fs:[rcx-0x381c763b],0xc0e07039
   140026d90:	movabs eax,ds:0xf7bdee0ffc7f1fc7
   140026d99:	fdivp  st(3),st
   140026d9b:	mov    cl,0x35
   140026d9d:	(bad)  
   140026d9e:	fwait
   140026d9f:	in     al,dx
   140026da0:	rcl    BYTE PTR [rax],cl
   140026da2:	loope  0x140026df4
   140026da4:	add    al,BYTE PTR [rax+0x2cead93]
   140026daa:	fsubr  QWORD PTR [rdx]
   140026dac:	(bad)  [rsi+0x73]
   140026daf:	jge    0x140026d5c
   140026db1:	gs stos DWORD PTR es:[rdi],eax
   140026db3:	(bad)  
   140026db4:	jrcxz  0x140026dfd
   140026db6:	add    bh,BYTE PTR [rdi+rbx*4-0x1]
   140026dba:	push   rdx
   140026dbb:	iret   
   140026dbc:	push   rbp
   140026dbd:	mov    eax,0x4114a03
   140026dc2:	stos   BYTE PTR es:[rdi],al
   140026dc3:	loopne 0x140026dc8
   140026dc5:	movabs ds:0x8222882430a2228,al
   140026dce:	sub    eax,0x4b252000
   140026dd3:	retf   
   140026dd4:	retf   
   140026dd5:	sbb    al,0x3f
   140026dd7:	jbe    0x140026d65
   140026dd9:	test   eax,0x9f3da9a9
   140026dde:	stc    
   140026ddf:	int3   
   140026de0:	addr32 jle 0x140026dca
   140026de3:	int    0x6f
   140026de5:	jle    0x140026dda
   140026de7:	cmp    eax,0xa7ab0ac0
   140026dec:	adc    edi,ebp
   140026dee:	or     bl,BYTE PTR [rcx]
   140026df0:	push   0x0
   140026df2:	jo     0x140026da6
   140026df4:	push   rbp
   140026df5:	(bad)  
   140026df6:	jmp    0xd9da9183
   140026dfb:	out    0x59,eax
   140026dfd:	outs   dx,DWORD PTR ds:[rsi]
   140026dfe:	sbb    DWORD PTR [rdx-0x335addbf],esi
   140026e04:	fnstcw WORD PTR [rdi-0x7b]
   140026e07:	push   rdx
   140026e08:	mov    ss,WORD PTR [rbx]
   140026e0a:	or     BYTE PTR [rcx],cl
   140026e0c:	rex.X jmp 0x140026e19
   140026e0f:	rex.R (bad) 
   140026e11:	test   al,0x2
   140026e14:	xchg   esp,eax
   140026e15:	add    BYTE PTR [rcx+0xc],ch
   140026e18:	lods   eax,DWORD PTR ds:[rsi]
   140026e19:	(bad)  
   140026e1a:	xor    al,bh
   140026e1c:	mov    ds,WORD PTR [rip+0x7dbedf65]        # 0x1bdc14d87
   140026e22:	sti    
   140026e23:	mov    edi,0x7fa3e8fc
   140026e28:	clc    
   140026e29:	loopne 0x140026dae
   140026e2b:	movd   DWORD PTR [rax-0x26f345a3],mm0
   140026e32:	scas   al,BYTE PTR es:[rdi]
   140026e33:	add    BYTE PTR [rax-0x5794f356],al
   140026e39:	outs   dx,DWORD PTR ds:[rsi]
   140026e3a:	adc    al,0x3d
   140026e3c:	sbb    BYTE PTR [rsp+rbp*2+0x35],bh
   140026e40:	sti    
   140026e41:	scas   eax,DWORD PTR es:[rdi]
   140026e42:	cmp    bh,BYTE PTR [rip+0x24222378]        # 0x1642491c0
   140026e48:	sub    BYTE PTR [rip+0x5403e0a],ah        # 0x14542ac58
   140026e4e:	stos   BYTE PTR es:[rdi],al
   140026e4f:	and    BYTE PTR [rdi],al
   140026e51:	add    DWORD PTR [rax+0x21],0x3
   140026e55:	retf   
   140026e56:	(bad)  
   140026e57:	or     BYTE PTR [rcx],ch
   140026e59:	nop
   140026e5a:	push   rdx
   140026e5b:	mov    al,0xb2
   140026e5d:	shl    dh,cl
   140026e5f:	call   0x17a1ed215
   140026e64:	jl     0x140026e5e
   140026e66:	loopne 0x140026e0f
   140026e68:	(bad)  
   140026e69:	std    
   140026e6a:	jmp    0xcee6284e
   140026e6f:	cmp    ebx,DWORD PTR [rdx+rbx*8-0x10]
   140026e73:	scas   al,BYTE PTR es:[rdi]
   140026e74:	sub    dh,BYTE PTR [rdx+rdi*1]
   140026e77:	push   rsp
   140026e78:	add    BYTE PTR [rax-0x47],dh
   140026e7b:	cdq    
   140026e7c:	sbb    BYTE PTR [rbx+0x75],0x2d
   140026e80:	pop    rbx
   140026e81:	and    eax,0x5b582023
   140026e86:	mov    ah,0xd6
   140026e88:	sbb    ebx,DWORD PTR [rsi]
   140026e8a:	std    
   140026e8b:	rex.WRB
   140026e8c:	ds int 0xdf
   140026e8f:	push   0x64669243
   140026e94:	pop    rcx
   140026e95:	rex.WX scas rax,QWORD PTR es:[rdi]
   140026e97:	xlat   BYTE PTR ds:[rbx]
   140026e98:	and    esi,ebp
   140026e9a:	imul   al
   140026e9c:	jne    0x140026f19
   140026e9e:	(bad)  
   140026e9f:	jno    0x140026ee3
   140026ea1:	(bad)  
   140026ea2:	rex.WRX mov BYTE PTR [rbx+0x3b],r12b
   140026ea6:	jne    0x140026f00
   140026ea8:	or     QWORD PTR [rax],0x48908402
   140026eaf:	movabs eax,ds:0x998472391cda75e8
   140026eb8:	cdq    
   140026eb9:	cdq    
   140026eba:	cmp    eax,0x73f87b9f
   140026ebf:	jg     0x140026f3b
   140026ec1:	neg    ebp
   140026ec3:	ja     0x140026ec4
   140026ec5:	and    al,0xe5
   140026ec7:	stos   BYTE PTR es:[rdi],al
   140026ec8:	(bad)  
   140026ec9:	mov    ebx,0x2ab81dc2
   140026ece:	push   rdx
   140026ecf:	(bad)  
   140026ed0:	std    
   140026ed1:	xchg   ecx,eax
   140026ed2:	movsxd ebx,DWORD PTR [rax]
   140026ed4:	fcmovu st,st(5)
   140026ed6:	scas   al,BYTE PTR es:[rdi]
   140026ed7:	div    BYTE PTR [rdi+0x79fe1ceb]
   140026edd:	scas   al,BYTE PTR es:[rdi]
   140026ede:	in     al,0x5c
   140026ee0:	cs (bad) 
   140026ee2:	and    BYTE PTR [rbp-0x2d],cl
   140026ee5:	mov    edx,DWORD PTR [rdx+0x59a65983]
   140026eeb:	outs   dx,BYTE PTR ds:[rsi]
   140026eec:	mov    bh,0xe8
   140026eee:	jne    0x140026f6a
   140026ef0:	(bad)  
   140026ef1:	rex.WB
   140026ef2:	rex.X sbb al,0x27
   140026ef5:	je     0x140026f4e
   140026ef7:	push   rsi
   140026ef8:	call   0xda5ba022
   140026efd:	xchg   ecx,eax
   140026efe:	sbb    WORD PTR [rcx+0x50216894],ax
   140026f05:	rex.RB fiadd WORD PTR [r8-0x6b7ef5be]
   140026f0c:	or     ch,BYTE PTR [rcx-0x1dd7bddc]
   140026f12:	cmp    dh,ah
   140026f14:	enter  0x472b,0x78
   140026f18:	jrcxz  0x140026eb5
   140026f1a:	fidivr WORD PTR [rax]
   140026f1c:	std    
   140026f1d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026f1e:	(bad)  
   140026f1f:	jge    0x140026f0a
   140026f21:	(bad)  
   140026f22:	stc    
   140026f23:	rcr    DWORD PTR [rdi],1
   140026f25:	std    
   140026f26:	shl    eax,1
   140026f28:	sub    ebx,DWORD PTR [rdi-0x7]
   140026f2b:	retf   0xb1a7
   140026f2e:	cmp    DWORD PTR [rdx],eax
   140026f30:	add    bh,BYTE PTR [rbx-0x6f39aee6]
   140026f36:	(bad)  
   140026f37:	adc    eax,0xc0002ab9
   140026f3c:	leave  
   140026f3d:	data16 je 0x140026f02
   140026f40:	in     eax,dx
   140026f41:	ins    BYTE PTR es:[rdi],dx
   140026f42:	mov    bh,0xda
   140026f44:	(bad)  
   140026f45:	outs   dx,BYTE PTR ds:[rsi]
   140026f46:	add    BYTE PTR [rdx+0x3197394b],al
   140026f4c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140026f4d:	sub    ah,ch
   140026f4f:	add    esi,edx
   140026f51:	xchg   edi,eax
   140026f52:	ja     0x140026f7f
   140026f54:	add    bh,ch
   140026f56:	fsubp  st(7),st
   140026f58:	std    
   140026f59:	(bad)  
   140026f5a:	xchg   ebx,eax
   140026f5b:	xchg   ebx,eax
   140026f5c:	xchg   ebx,eax
   140026f5d:	(bad)  
   140026f5e:	jno    0x140026f3c
   140026f60:	push   rdi
   140026f61:	imul   edi,DWORD PTR [rax-0x38ec9123],0x3b514031
   140026f6b:	shl    dl,1
   140026f6d:	(bad)  
   140026f6e:	or     dh,BYTE PTR [rdi+0x3a]
   140026f71:	out    0x42,eax
   140026f73:	rex.WR
   140026f74:	rex.WRXB
   140026f75:	rex.WRXB fisttp DWORD PTR [r9+r8*8+0x7a]
   140026f7a:	lea    esi,[rcx+0x82a18e6]
   140026f80:	ins    BYTE PTR es:[rdi],dx
   140026f81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026f82:	nop
   140026f83:	sub    BYTE PTR [rsi+rbx*8+0x36363268],ah
   140026f8a:	rex.WRX movabs rbp,0xce3f1daf191520d6
   140026f94:	cmc    
   140026f95:	xlat   BYTE PTR ds:[rbx]
   140026f96:	pop    rsi
   140026f97:	(bad)  
   140026f99:	ret    0xbe17
   140026f9c:	lock leave 
   140026f9e:	(bad)  
   140026f9f:	(bad)  
   140026fa0:	jl     0x140026f72
   140026fa2:	cmp    al,0xf9
   140026fa4:	in     al,0x93
   140026fa6:	jg     0x140026f35
   140026fa8:	or     eax,0x3f87ba0f
   140026fad:	xchg   esp,eax
   140026fae:	and    BYTE PTR [rax+0x55],dh
   140026fb1:	add    DWORD PTR [rax+0x608c32f],eax
   140026fb7:	push   rbp
   140026fb8:	push   rbx
   140026fb9:	jp     0x140026fe6
   140026fbb:	shl    DWORD PTR [rsi+0x2b],0xcf
   140026fbf:	xor    eax,ebp
   140026fc1:	pop    rsp
   140026fc2:	jmp    0x140026f61
   140026fc4:	(bad)  
   140026fc5:	and    eax,0x48618504
   140026fca:	mov    bl,0xd9
   140026fcc:	and    al,0x49
   140026fce:	adc    ch,BYTE PTR [rsi]
   140026fd0:	pop    rsp
   140026fd1:	mov    eax,0xa7d3e9c0
   140026fd6:	or     ebp,DWORD PTR [rbx-0x647f7e40]
   140026fdc:	adc    cl,BYTE PTR [rsp+rdx*1]
   140026fdf:	rex.WXB mov rdx,QWORD PTR [r15-0x59]
   140026fe3:	sbb    DWORD PTR [rbx-0x5353508d],edi
   140026fe9:	movabs al,ds:0xda2d34d2534d26b5
   140026ff2:	stos   BYTE PTR es:[rdi],al
   140026ff3:	(bad)  
   140026ff4:	jmp    0x140027042
   140026ff6:	mov    WORD PTR [rdi+0x49393933],cs
   140026ffc:	lods   eax,DWORD PTR ds:[rsi]
   140026ffd:	shl    DWORD PTR [rax+0x62],1
   140027000:	jl     0x140026f8e
   140027002:	ret    
   140027003:	xchg   DWORD PTR [rsi],ecx
   140027005:	xor    ebx,edi
   140027007:	ins    BYTE PTR es:[rdi],dx
   140027008:	mov    dl,0x67
   14002700a:	jbe    0x140026fc2
   14002700c:	dec    BYTE PTR [rbp+0x4fe37c6f]
   140027012:	fcomip st,st(5)
   140027014:	scas   al,BYTE PTR es:[rdi]
   140027015:	ja     0x140027094
   140027017:	in     al,0x99
   140027019:	addr32 sahf 
   14002701b:	jns    0x140027035
   14002701d:	imul   ecx,DWORD PTR [rcx],0xffffffc4
   140027020:	pop    rax
   140027021:	in     eax,0xcf
   140027023:	mov    dh,0xe8
   140027025:	push   rsi
   140027026:	ins    DWORD PTR es:[rdi],dx
   140027027:	cdq    
   140027028:	pop    rsp
   140027029:	mov    ch,0x0
   14002702b:	xor    BYTE PTR [rdx+0x534191e1],dl
   140027031:	test   DWORD PTR [rbx-0x4b],ebp
   140027034:	sbb    dh,BYTE PTR [rbx+0x62c5b3b3]
   14002703a:	and    DWORD PTR [rbx+0x25fb07aa],eax
   140027040:	(bad)
   140027043:	stos   DWORD PTR es:[rdi],eax
   140027044:	xor    cl,BYTE PTR [rax]
   140027046:	popf   
   140027047:	gs loope 0x140027091
   14002704a:	(bad)  
   14002704b:	fcomp  QWORD PTR [rdx]
   14002704d:	add    esi,DWORD PTR [rcx+0x1c]
   140027050:	jae    0x14002704c
   140027052:	hlt    
   140027053:	imul   edi,DWORD PTR [rdx+0x49522edd],0xc73d9dce
   14002705d:	sahf   
   14002705e:	movsxd eax,edi
   140027060:	mov    eax,0x781bc6e1
   140027065:	retf   
   140027066:	sub    eax,0x3f0f516f
   14002706b:	cld    
   14002706c:	lock out dx,eax
   14002706e:	jle    0x140027058
   140027070:	rex.XB (bad) 
   140027072:	cli    
   140027073:	fdiv   DWORD PTR [rdi]
   140027075:	mov    edi,0x612fcdf9
   14002707a:	and    eax,DWORD PTR [rbx]
   14002707c:	es jg  0x14002702c
   14002707f:	popf   
   140027080:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027081:	mov    esp,0x46503
   140027086:	ins    BYTE PTR es:[rdi],dx
   140027087:	cmp    eax,0x6d15b047
   14002708c:	outs   dx,DWORD PTR ds:[rsi]
   14002708d:	rex.RXB sti 
   14002708f:	(bad)  
   140027090:	cmp    DWORD PTR [rsi-0x1d8fdc6d],esi
   140027096:	data16 clc 
   140027098:	mov    ecx,0x66cd3d49
   14002709d:	xchg   ebx,eax
   14002709e:	sub    al,0xcb
   1400270a0:	nop
   1400270a1:	push   rdx
   1400270a2:	shr    bl,cl
   1400270a4:	cmc    
   1400270a5:	xor    dh,al
   1400270a7:	adc    al,0x93
   1400270a9:	jle    0x140027047
   1400270ab:	xchg   ebp,eax
   1400270ac:	loopne 0x1400270d9
   1400270ae:	mov    edi,0x141f0603
   1400270b3:	stos   BYTE PTR es:[rdi],al
   1400270b4:	mov    edi,0xa7dd6b43
   1400270b9:	cld    
   1400270ba:	out    dx,al
   1400270bb:	jae    0x140027053
   1400270bd:	test   DWORD PTR gs:[rbx],ecx
   1400270c0:	shr    bl,cl
   1400270c2:	cmc    
   1400270c3:	or     cl,BYTE PTR [rbx+0x5e57e5e3]
   1400270c9:	out    0xe4,al
   1400270cb:	leave  
   1400270cc:	xchg   ebx,eax
   1400270cd:	cmp    al,0xf8
   1400270cf:	mov    esi,0xf93c0f07
   1400270d4:	in     al,0x93
   1400270d6:	jg     0x140027152
   1400270d8:	out    0x9d,eax
   1400270da:	ja     0x1400270da
   1400270dc:	hlt    
   1400270dd:	ror    DWORD PTR [rdi+0x3f],cl
   1400270e0:	std    
   1400270e1:	addps  xmm1,XMMWORD PTR [rbx+0x20]
   1400270e5:	movsxd eax,DWORD PTR [rax+rax*1]
   1400270e8:	pop    rbx
   1400270e9:	(bad)  
   1400270ea:	ret    
   1400270eb:	rex.W (bad) 
   1400270ed:	ins    DWORD PTR es:[rdi],dx
   1400270ee:	(bad)  
   1400270ef:	(bad)  
   1400270f0:	mov    eax,0xcdf5cc13
   1400270f5:	(bad)  
   1400270f6:	(bad)  
   1400270f7:	mov    dh,BYTE PTR [rdi]
   1400270f9:	sbb    cl,BYTE PTR [rbp-0xa1406be]
   1400270ff:	jp     0x1400270a2
   140027101:	movabs al,ds:0x3aa001f0b03b92be
   14002710a:	mov    ebp,0x7d0e27d8
   14002710f:	test   edi,esi
   140027111:	(bad)  
   140027112:	mov    edx,0x2c765b97
   140027117:	rex.WRB push r11
   140027119:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002711a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002711b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002711c:	xchg   r10,rax
   14002711e:	test   ch,ah
   140027120:	in     eax,0x65
   140027122:	sahf   
   140027123:	stc    
   140027124:	(bad)  
   140027125:	xor    ebp,DWORD PTR [rbx*2+0x7e27e258]
   14002712c:	loop   0x140027155
   14002712e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002712f:	(bad)  
   140027130:	jg     0x14002712e
   140027132:	icebp  
   140027133:	(bad)  
   140027134:	mov    edx,0xfe5b96e5
   140027139:	jmp    0xcfca552f
   14002713e:	(bad)  
   14002713f:	sub    eax,0x6edb7481
   140027144:	(bad)  
   140027145:	es enter 0x250,0x80
   14002714a:	xchg   ebx,eax
   14002714b:	lods   eax,DWORD PTR ds:[rsi]
   14002714c:	repnz push rdi
   14002714e:	mov    bh,0xd2
   140027150:	nop    esi
   140027153:	mov    dh,0xd7
   140027155:	cmp    cl,bh
   140027157:	push   rsi
   140027158:	(bad)  
   140027159:	adc    DWORD PTR [rbx+0x5a],0xd5c7d957
   140027160:	add    DWORD PTR [rax-0x76],esi
   140027163:	or     DWORD PTR [rcx+rdi*4],edx
   140027166:	(bad)  
   140027167:	mov    esi,0x8542e035
   14002716c:	rex.WRX (bad) 
   14002716f:	sub    ch,BYTE PTR [rcx]
   140027171:	push   rsi
   140027172:	xor    eax,0x55f7ddfd
   140027177:	sub    esp,DWORD PTR [rax]
   140027179:	mov    fs,WORD PTR [rbx-0x2e]
   14002717c:	xor    al,0x25
   14002717e:	rex.WB adc al,r14b
   140027181:	mov    edi,0xf67b3d9
   140027187:	(bad)  
   140027188:	mov    ds,WORD PTR [rip+0xfffffffffa9f53e3]        # 0x13aa1c571
   14002718e:	adc    al,0x1f
   140027190:	stc    
   140027191:	enter  0xde47,0xf0
   140027195:	cdq    
   140027196:	iret   
   140027197:	jl     0x14002717f
   140027199:	xchg   ebx,eax
   14002719a:	(bad)  
   14002719c:	hlt    
   14002719d:	rol    BYTE PTR [rdi-0x19],1
   1400271a0:	out    0xe6,al
   1400271a2:	(bad)  
   1400271a3:	ins    DWORD PTR es:[rdi],dx
   1400271a4:	fxch   st(5)
   1400271a6:	fsub   DWORD PTR [rdx]
   1400271a8:	sbb    DWORD PTR [rdx+0x0],ebp
   1400271ab:	test   al,0xca
   1400271ad:	mov    al,0x5a
   1400271af:	(bad)  
   1400271b0:	ret    
   1400271b1:	ins    BYTE PTR es:[rdi],dx
   1400271b2:	mov    esi,0x9c39d56f
   1400271b7:	stc    
   1400271b8:	out    dx,eax
   1400271b9:	out    dx,al
   1400271ba:	(bad)  
   1400271bb:	xor    esi,ecx
   1400271bd:	sbb    ecx,DWORD PTR [rbp+0x6ec4a146]
   1400271c3:	mov    ebx,0xc7abf51b
   1400271c8:	sti    
   1400271c9:	out    dx,eax
   1400271ca:	stos   DWORD PTR es:[rdi],eax
   1400271cb:	loopne 0x1400271b5
   1400271cd:	sub    edi,DWORD PTR [rdi-0x248ba5e1]
   1400271d3:	pushf  
   1400271d4:	add    eax,0x56a6b5a0
   1400271d9:	stos   DWORD PTR es:[rdi],eax
   1400271da:	adc    eax,0x92493a0
   1400271df:	imul   ebx,DWORD PTR [rdx+0x38d5ab52],0x9f2cf67b
   1400271e9:	std    
   1400271ea:	in     al,dx
   1400271eb:	addr32 stc 
   1400271ed:	loopne 0x1400271f6
   1400271ef:	(bad)  
   1400271f0:	js     0x1400271e1
   1400271f2:	(bad)  
   1400271f3:	push   rdx
   1400271f5:	(bad)  
   1400271f6:	(bad)  
   1400271f7:	mov    ebx,0xff6ffb7f
   1400271fc:	in     eax,dx
   1400271fd:	iret   
   1400271fe:	add    bl,ah
   140027200:	fcom   st(4)
   140027202:	loope  0x1400271a5
   140027204:	mov    BYTE PTR [rax],cl
   140027206:	or     al,0x15
   140027208:	add    al,bh
   14002720a:	movd   DWORD PTR [rip+0x7e9f3619],mm7        # 0x1bea1a82a
   140027211:	(bad)  
   140027212:	in     eax,0x13
   140027214:	ins    BYTE PTR es:[rdi],dx
   140027215:	(bad)  
   140027216:	jns    0x140027274
   140027218:	sbb    ebp,DWORD PTR [rsi-0x79a7c03a]
   14002721e:	fisttp WORD PTR [rdi+0x2c]
   140027221:	jb     0x1400271ad
   140027223:	out    dx,eax
   140027224:	(bad)  
   140027225:	mov    esi,0x7561ef41
   14002722a:	or     eax,0x77ecdf01
   14002722f:	ins    DWORD PTR es:[rdi],dx
   140027230:	push   rdi
   140027231:	cmp    DWORD PTR [rax],eax
   140027233:	fistp  WORD PTR [rdx]
   140027235:	jo     0x140027208
   140027237:	(bad)  
   140027238:	xor    BYTE PTR [rbx+rcx*4],cl
   14002723b:	jne    0x140027246
   14002723d:	movabs ds:0x3be77cb3d9ece228,al
   140027246:	(bad)  
   140027248:	push   rdi
   140027249:	jg     0x140027240
   14002724b:	push   rdi
   14002724c:	(bad)  
   14002724d:	hlt    
   14002724e:	xchg   edi,eax
   14002724f:	jg     0x14002724a
   140027251:	xchg   edi,eax
   140027252:	(bad)  
   140027254:	(bad)  
   140027255:	cld    
   140027256:	repz pop rdi
   140027258:	(bad)  
   140027259:	or     dh,BYTE PTR es:[rbp-0x52]
   14002725d:	clc    
   14002725e:	es ins BYTE PTR es:[rdi],dx
   140027260:	or     DWORD PTR [rdx*2-0x355a1fda],0x76
   140027268:	gs mov ebx,0x55aca95d
   14002726e:	or     ecx,edi
   140027270:	jge    0x140027229
   140027272:	pop    rcx
   140027273:	mov    dl,0x5d
   140027275:	mul    DWORD PTR [rdx-0x4d]
   140027278:	(bad)  
   140027279:	jrcxz  0x1400272f9
   14002727b:	mov    ebx,0x85c3fc5b
   140027280:	add    bl,ch
   140027282:	ins    BYTE PTR es:[rdi],dx
   140027283:	ds addr32 repnz sti 
   140027287:	lahf   
   140027288:	std    
   140027289:	sbb    al,BYTE PTR [rax+0x6d7e5ee]
   14002728f:	lock xlat BYTE PTR ds:[rbx]
   140027291:	sbb    eax,0x7cf9b7f4
   140027296:	(bad)  
   140027297:	and    ebx,DWORD PTR [rip+0x6ac4e5ab]        # 0x1aac75848
   14002729d:	mov    ch,0x1a
   14002729f:	cmc    
   1400272a0:	jp     0x14002723f
   1400272a2:	rex.RX movabs ds:0x7d8c6c6c60d1a341,eax
   1400272ac:	sti    
   1400272ad:	div    BYTE PTR [rcx]
   1400272af:	(bad)  
   1400272b0:	(bad)  
   1400272b1:	(bad)  
   1400272b2:	in     al,dx
   1400272b3:	in     al,dx
   1400272b4:	ins    BYTE PTR es:[rdi],dx
   1400272b5:	jrcxz  0x14002731a
   1400272b7:	(bad)  
   1400272b8:	sti    
   1400272b9:	fsubr  DWORD PTR [rdi+0x31c04963]
   1400272bf:	xchg   BYTE PTR [rax+rsi*2+0x1d],ah
   1400272c3:	mov    cl,BYTE PTR [rbx-0x7526ad44]
   1400272c9:	adc    DWORD PTR [rax-0x4d],esi
   1400272cc:	rex.RX mov esp,0x9b335a8d
   1400272d2:	and    eax,0x6fbfe5db
   1400272d7:	(bad)  
   1400272d8:	cmp    eax,0x6bf6e3f7
   1400272dd:	mov    ch,0x7b
   1400272df:	mov    cl,0xf2
   1400272e1:	(bad)  
   1400272e2:	jle    0x1400272f5
   1400272e4:	push   rcx
   1400272e5:	neg    esi
   1400272e7:	int    0x32
   1400272e9:	lods   al,BYTE PTR ds:[rsi]
   1400272ea:	out    0x6,al
   1400272ec:	mov    eax,0x2fcfc76
   1400272f1:	mov    bh,0x9f
   1400272f3:	sti    
   1400272f4:	jmp    0x1400272a5
   1400272f6:	push   rsi
   1400272f7:	xor    al,0x31
   1400272f9:	xor    DWORD PTR [rcx-0x55],eax
   1400272fc:	(bad)  
   1400272fd:	movabs ds:0x10efbdf7bef36edd,al
   140027306:	jo     0x140027308
   140027308:	cmp    esi,DWORD PTR [rcx+0x28]
   14002730b:	ret    0xc182
   14002730e:	mov    cs,WORD PTR [rsi+0xb6aec0a]
   140027314:	movabs al,ds:0xaddb52ed63355b2a
   14002731d:	push   rsi
   14002731e:	mov    esi,0x7aa4bd79
   140027323:	fstp   QWORD PTR [rbx+0x61]
   140027326:	and    DWORD PTR [rsi+rdx*2-0x5],ebp
   14002732a:	mov    ebx,DWORD PTR ds:[rdi+0x5d]
   14002732e:	rex.XB (bad) 
   140027330:	lods   eax,DWORD PTR ds:[rsi]
   140027331:	jge    0x140027330
   140027333:	movsxd edi,DWORD PTR [rax+rdx*4-0x58]
   140027337:	rex.RX (bad) 
   140027339:	stos   BYTE PTR es:[rdi],al
   14002733a:	xchg   ecx,eax
   14002733b:	add    al,0xff
   14002733d:	cmp    al,0x83
   14002733f:	rex.WX mov ?,WORD PTR [rbx]
   140027342:	movsxd rdi,DWORD PTR [r12+r15*2-0x64]
   140027347:	mov    DWORD PTR [rcx+0x67676609],ecx
   14002734d:	cmp    DWORD PTR [rcx-0xe],edi
   140027350:	and    al,0x6f
   140027352:	jg     0x14002734f
   140027354:	fisttp DWORD PTR [rdi]
   140027356:	jle    0x14002734c
   140027358:	movabs ds:0x83143012363b7d1f,eax
   140027361:	jmp    0x1400273b8
   140027363:	add    eax,0xeca7af00
   140027368:	adc    al,0xa5
   14002736a:	mov    edi,0xa23d659a
   14002736f:	jo     0x140027394
   140027371:	fld    TBYTE PTR [rbx-0x697f0621]
   140027377:	and    al,0x9
   140027379:	rcr    BYTE PTR [rsi-0x1e4791e5],0x6e
   140027380:	in     al,dx
   140027381:	sub    al,ah
   140027383:	rex.XB xor DWORD PTR [r11+0x70],esp
   140027387:	sub    BYTE PTR [rax+0x6a],dl
   14002738a:	stos   DWORD PTR es:[rdi],eax
   14002738b:	fs mov bl,0xcc
   14002738e:	(bad)  
   14002738f:	in     eax,dx
   140027390:	lock fbstp TBYTE PTR [rdi+0x2a272e4b]
   140027397:	jno    0x1400273c2
   140027399:	(bad)  
   14002739a:	ins    BYTE PTR es:[rdi],dx
   14002739b:	out    0x9c,eax
   14002739d:	sub    DWORD PTR [rdx],0x29
   1400273a0:	cmp    al,ch
   1400273a2:	cld    
   1400273a3:	mov    esi,0x77bfefb9
   1400273a8:	sti    
   1400273a9:	push   rsi
   1400273aa:	mov    bh,0x41
   1400273ac:	jmp    0xf164ac47
   1400273b1:	pop    rsi
   1400273b2:	scas   eax,DWORD PTR es:[rdi]
   1400273b3:	shr    ebx,cl
   1400273b5:	cmc    
   1400273b6:	add    al,bl
   1400273b8:	mov    edi,0x404dff7f
   1400273bd:	xchg   edi,eax
   1400273be:	jb     0x14002738d
   1400273c0:	rcr    DWORD PTR [rip+0x35572d],0x38        # 0x14037caf4
   1400273c7:	fldcw  WORD PTR [rax-0x59]
   1400273ca:	fmul   QWORD PTR [rdx-0x3b]
   1400273cd:	fmul   DWORD PTR [rcx-0x4e]
   1400273d0:	xchg   ecx,eax
   1400273d1:	sti    
   1400273d2:	xor    DWORD PTR [rax],ebp
   1400273d4:	lods   al,BYTE PTR ds:[rsi]
   1400273d5:	jbe    0x140027388
   1400273d7:	movsxd ebp,DWORD PTR [rdx+0x8176ffb]
   1400273dd:	clc    
   1400273de:	loop   0x14002745c
   1400273e0:	jp     0x1400273e1
   1400273e2:	mov    bl,0x63
   1400273e4:	stc    
   1400273e5:	sbb    eax,0x80dcf808
   1400273ea:	(bad)  
   1400273eb:	std    
   1400273ec:	pop    rax
   1400273ed:	or     BYTE PTR [rcx+0x24],dl
   1400273f0:	and    ebp,DWORD PTR [rbp+0x703c6615]
   1400273f6:	loopne 0x1400273b8
   1400273f8:	xchg   DWORD PTR [rcx],ebp
   1400273fa:	rex.WB rcr BYTE PTR [rip+0x250f616f],0x0        # 0x16511d571
   140027402:	lods   al,BYTE PTR ds:[rsi]
   140027403:	xchg   ebp,eax
   140027404:	ss mov edx,0x8c5eedd9
   14002740a:	pop    rsp
   14002740b:	mov    edx,0x6dab369c
   140027410:	out    dx,eax
   140027411:	fs mov ecx,0x52fd9f1c
   140027417:	rex.W (bad) 
   140027419:	lods   eax,DWORD PTR ds:[rsi]
   14002741a:	jp     0x1400273aa
   14002741c:	jmp    0x1400273a7
   14002741e:	push   rbx
   14002741f:	ins    BYTE PTR es:[rdi],dx
   140027420:	lahf   
   140027421:	xchg   ebx,eax
   140027422:	test   al,0xba
   140027424:	push   bp
   140027426:	rcl    al,cl
   140027428:	add    DWORD PTR [rax+0x5940148b],0x594a50ab
   140027432:	add    BYTE PTR [rdx-0x2006acd9],0x1d
   140027439:	(bad)  
   14002743a:	or     bl,ah
   14002743c:	icebp  
   14002743d:	or     BYTE PTR [rbp+0x26cd951],dh
   140027443:	imul   ebp,DWORD PTR [rbx-0x7bcf1dc5],0x27
   14002744a:	scas   eax,DWORD PTR es:[rdi]
   14002744b:	push   rsp
   14002744c:	cs xchg eax,edi
   14002744f:	fisttp DWORD PTR [rsi+0x3e20edd0]
   140027455:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027456:	rex.WX adc al,0xfa
   140027459:	out    dx,eax
   14002745a:	fld    QWORD PTR [rdx+riz*1]
   14002745d:	(bad)  
   14002745e:	(bad)  
   14002745f:	loopne 0x1400273f4
   140027461:	mov    BYTE PTR [rbx],al
   140027463:	mov    eax,0xa486499d
   140027468:	xchg   edx,eax
   140027469:	lock scas al,BYTE PTR es:[rdi]
   14002746b:	add    DWORD PTR [rax],eax
   14002746d:	fdivr  DWORD PTR [rsi+rcx*8-0x3401aaad]
   140027474:	imul   esi,DWORD PTR [rdi+0x23],0x4193b200
   14002747b:	(bad)  
   14002747c:	xor    esp,DWORD PTR [rbx+0x3636d503]
   140027482:	shr    dh,cl
   140027484:	add    ax,WORD PTR [rcx+0x55]
   140027488:	rex.WB (bad) 
   14002748a:	(bad)  
   14002748b:	add    dl,ch
   14002748d:	movsxd edi,esp
   14002748f:	adc    DWORD PTR [rsi+0x10],edi
   140027492:	rex push rsp
   140027494:	sub    al,0x80
   140027496:	jno    0x140027484
   140027498:	mov    esp,0xc09eb700
   14002749d:	mov    ss,WORD PTR [rbp-0x727ffd5f]
   1400274a3:	jbe    0x14002742f
   1400274a5:	sub    ebp,ecx
   1400274a7:	mov    eax,0xd77bf317
   1400274ac:	xor    ebp,ecx
   1400274ae:	xlat   BYTE PTR ds:[rbx]
   1400274af:	(bad)  
   1400274b0:	mov    BYTE PTR [rdi],dh
   1400274b2:	mov    dl,0xff
   1400274b4:	rex.WRX xchg rcx,rax
   1400274b6:	mov    ch,0x7e
   1400274b8:	jrcxz  0x140027520
   1400274ba:	add    cl,0xa0
   1400274bd:	jrcxz  0x1400274ee
   1400274bf:	(bad)  
   1400274c0:	ficom  WORD PTR [rsi+0x0]
   1400274c3:	cmp    edi,0x3e0e7fde
   1400274c9:	sbb    DWORD PTR [rax],edi
   1400274cb:	push   0x4082af84
   1400274d0:	(bad)  
   1400274d1:	push   0x70
   1400274d3:	adc    al,BYTE PTR [rcx+rax*4]
   1400274d6:	jrcxz  0x1400274d8
   1400274d8:	fsubr  QWORD PTR [rbx-0x39]
   1400274db:	retf   0xbe8e
   1400274de:	mov    eax,0x214b90cd
   1400274e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400274e4:	xchg   DWORD PTR cs:[rsp+rbp*4],eax
   1400274e8:	mov    dl,0xcb
   1400274ea:	xchg   edi,eax
   1400274eb:	fcomi  st,st(6)
   1400274ed:	rex.WRX xchg rax,rax
   1400274ef:	lea    ebp,[rdx]
   1400274f1:	fisub  DWORD PTR [rsi+0x33]
   1400274f4:	stc    
   1400274f5:	sbb    esp,ecx
   1400274f7:	or     eax,0x307a2ab6
   1400274fc:	mov    cl,dh
   1400274fe:	ja     0x1400274db
   140027500:	(bad)  
   140027501:	adc    DWORD PTR [rbp-0x400fec72],edx
   140027507:	jae    0x140027565
   140027509:	adc    BYTE PTR [rbx+0xca14d34],0x3
   140027510:	xchg   al,bl
   140027512:	(bad)  
   140027513:	and    DWORD PTR [rbx],edi
   140027515:	push   rdx
   140027516:	jbe    0x140027555
   140027518:	add    BYTE PTR [rax],bh
   14002751a:	pop    rcx
   14002751b:	mov    esp,eax
   14002751d:	stos   DWORD PTR es:[rdi],eax
   14002751e:	mov    esi,0xc297241f
   140027523:	xchg   BYTE PTR [rdi-0xc],ch
   140027526:	mov    eax,0xcd76c88d
   14002752b:	adc    eax,ebx
   14002752d:	lods   al,BYTE PTR ds:[rsi]
   14002752e:	jrcxz  0x1400274db
   140027530:	(bad)  
   140027531:	shl    ch,1
   140027533:	pop    rsp
   140027534:	test   ebp,0xe77af37e
   14002753a:	fsubr  QWORD PTR [rax+0x374eba0c]
   140027540:	mov    edx,eax
   140027542:	jge    0x140027533
   140027544:	addr32 (bad) 
   140027546:	push   rsi
   140027547:	rex.B ret 0x524d
   14002754b:	repnz imul DWORD PTR [rdi-0x4fd9aad4]
   140027552:	sbb    al,0x80
   140027554:	movabs ds:0x72a1bdfd23ba1c2c,al
   14002755d:	add    DWORD PTR [rsi-0xb69d1be],esi
   140027563:	jno    0x14002750e
   140027565:	sbb    eax,0x722336c
   14002756a:	ret    
   14002756b:	sub    bl,BYTE PTR [rbx+0x1ebfae69]
   140027571:	repz cmp BYTE PTR [rsi-0x10f66620],dh
   140027578:	mov    ch,0x23
   14002757a:	in     eax,0xaa
   14002757c:	mov    cl,0x0
   14002757e:	jl     0x140027539
   140027580:	cwde   
   140027581:	xchg   edx,eax
   140027582:	pop    rsi
   140027583:	imul   ebx,eax,0xd33e3fcf
   140027589:	cmp    DWORD PTR [rbx],0x71
   14002758c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002758d:	or     eax,0xb50cdf59
   140027592:	repnz cwde 
   140027594:	xor    al,0xcb
   140027596:	rex.W mov dl,0xd5
   140027599:	(bad)  
   14002759a:	sub    QWORD PTR [r8+0x6ee58cd3],rcx
   1400275a1:	cmp    dh,al
   1400275a3:	cmp    bh,BYTE PTR [rbx]
   1400275a5:	rex.WB mov BYTE PTR [r13-0x13227d8a],0x7e
   1400275ad:	movabs ds:0xb95a5e958ce2757d,eax
   1400275b6:	(bad)  
   1400275b7:	adc    DWORD PTR [rax+rsi*2],0xf27093a1
   1400275be:	rex.X (bad) 
   1400275c0:	in     eax,0xb7
   1400275c2:	(bad)  
   1400275c3:	rex
   1400275c4:	sar    r9,0x76
   1400275c8:	ret    0xa599
   1400275cb:	sahf   
   1400275cc:	ins    DWORD PTR es:[rdi],dx
   1400275cd:	rex.WRB fadd DWORD PTR [r9-0x3e970934]
   1400275d4:	(bad)  
   1400275d5:	(bad)  
   1400275d6:	loope  0x1400275b4
   1400275d8:	test   DWORD PTR [rsi],ebx
   1400275da:	outs   dx,BYTE PTR ds:[rsi]
   1400275db:	sbb    DWORD PTR [rsi],ebp
   1400275dd:	(bad)  
   1400275de:	enter  0x6009,0xa5
   1400275e2:	xchg   edi,eax
   1400275e3:	jb     0x1400275cf
   1400275e5:	rex.X mov dil,0x6f
   1400275e8:	fs adc al,0xc6
   1400275eb:	fdiv   DWORD PTR [rsi]
   1400275ed:	adc    al,0x8c
   1400275ef:	rex.RXB add DWORD PTR [r15-0x32df63e2],r14d
   1400275f6:	ins    BYTE PTR es:[rdi],dx
   1400275f7:	mov    ch,ch
   1400275f9:	test   bl,0x53
   1400275fc:	jl     0x1400275de
   1400275fe:	ins    DWORD PTR es:[rdi],dx
   1400275ff:	xlat   BYTE PTR ds:[rbx]
   140027600:	lock mov dh,0xc3
   140027603:	push   rbx
   140027604:	clc    
   140027605:	jb     0x1400275b8
   140027607:	push   rax
   140027608:	loope  0x14002759f
   14002760a:	pop    rdx
   14002760b:	rex.WB push r13
   14002760d:	mov    bl,0x7f
   14002760f:	nop
   140027610:	jmp    0xea152b74
   140027615:	repz add al,0x6
   140027618:	pop    rsp
   140027619:	movabs ds:0x83249d8002360f2b,eax
   140027622:	fdivr  st,st(5)
   140027624:	(bad)  
   140027625:	ja     0x140027625
   140027627:	ds jno 0x1400275c4
   14002762a:	jno    0x1400276a2
   14002762c:	jno    0x1400275b3
   14002762e:	outs   dx,BYTE PTR ds:[rsi]
   14002762f:	xchg   edx,eax
   140027630:	mov    cl,0xb8
   140027632:	fsub   QWORD PTR [rcx-0x37f7a228]
   140027638:	sti    
   140027639:	repnz test DWORD PTR [rsi-0x71],esi
   14002763d:	test   DWORD PTR [rsi+0x17],edx
   140027640:	push   rsi
   140027641:	xor    edx,ecx
   140027643:	(bad)  
   140027644:	(bad)
   140027647:	vdivpd ymm3,ymm13,ymm6
   14002764b:	adc    eax,DWORD PTR [rdi+rdx*8+0x712b040d]
   140027652:	mov    BYTE PTR [rbp+0x26b95c76],0x3
   140027659:	push   rdx
   14002765a:	mov    cl,0x1c
   14002765c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002765d:	int3   
   14002765e:	mov    bh,0x7a
   140027660:	test   DWORD PTR [rdx],esp
   140027662:	fcmovne st,st(6)
   140027664:	es push rax
   140027666:	push   rdx
   140027667:	mov    al,0xdc
   140027669:	rex.WXB cmp QWORD PTR [r15+0x41b46092],rdi
   140027670:	sub    BYTE PTR [rcx+0x940a4eb],bl
   140027676:	call   0x1b6c8111f
   14002767b:	mov    WORD PTR [rdx+rax*1+0x4c55a429],ss
   140027682:	and    edx,DWORD PTR [rax+0x4a]
   140027685:	shr    dh,1
   140027687:	imul   esi,DWORD PTR [rdx+rbx*1],0x19142c81
   14002768e:	add    edx,DWORD PTR [rcx+0x23]
   140027691:	fs (bad) 
   140027693:	lods   al,BYTE PTR ds:[rsi]
   140027694:	xchg   bh,bl
   140027696:	pop    rdi
   140027697:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140027698:	adc    al,0xd6
   14002769a:	xchg   BYTE PTR [rip+0xffffffffb08d9325],cl        # 0xf09009c5
   1400276a0:	clc    
   1400276a1:	rex.WX xchg rdx,rax
   1400276a3:	(bad)  
   1400276a4:	rol    BYTE PTR [rbp-0x59b7e95f],1
   1400276aa:	data16 sbb cl,BYTE PTR [rbp+rcx*8-0x72]
   1400276af:	and    DWORD PTR [rax],esi
   1400276b1:	add    eax,0xa1041800
   1400276b6:	adc    al,0x34
   1400276b8:	push   0xffffffffffffff8a
   1400276ba:	rex.W ficom DWORD PTR [rdx-0x7e4bb125]
   1400276c1:	rex
   1400276c2:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400276c4:	xor    ah,al
   1400276c6:	rex.WB (bad) 
   1400276c8:	mov    cl,0xb3
   1400276ca:	sub    edi,DWORD PTR [rax+rdi*8-0x2b6d8626]
   1400276d1:	lock mov ebp,0xfabe1d73
   1400276d7:	retf   0xff3c
   1400276da:	(bad)  
   1400276db:	cmp    eax,0xe6f3b97b
   1400276e0:	rex.XB
   1400276e1:	fs cdq 
   1400276e3:	and    ebp,edx
   1400276e5:	xchg   ah,dl
   1400276e7:	or     BYTE PTR [rdx+0x23],dl
   1400276ea:	repnz jrcxz 0x1400276f1
   1400276ed:	(bad)  
   1400276ee:	cwde   
   1400276ef:	test   al,0x7
   1400276f1:	mov    edi,ss
   1400276f3:	(bad)  
   1400276f4:	mov    esi,0x402575e7
   1400276f9:	xor    BYTE PTR [rax],cl
   1400276fb:	add    al,0xfc
   1400276fd:	(bad)  
   1400276fe:	movabs al,ds:0x2561a4f9b6efb9aa
   140027707:	or     dl,BYTE PTR [rax-0x43]
   14002770a:	or     cl,cl
   14002770c:	(bad)  
   14002770d:	sub    eax,0x943a18
   140027712:	jo     0x14002774d
   140027714:	jle    0x1400276f6
   140027716:	jp     0x14002771c
   140027718:	pop    rsi
   140027719:	mov    ch,0x6d
   14002771b:	and    DWORD PTR [rdi+rbp*1],eax
   14002771e:	(bad)  
   14002771f:	lahf   
   140027720:	jrcxz  0x1400276f1
   140027722:	(bad)  
   140027723:	std    
   140027724:	rex.RXB sahf 
   140027726:	(bad)  
   140027727:	mov    bl,0xc8
   140027729:	(bad)  
   14002772a:	cmp    esp,esi
   14002772c:	mov    ch,0x53
   14002772e:	out    0x41,eax
   140027730:	pop    rdx
   140027731:	add    eax,0xcd3edad1
   140027736:	test   al,0x16
   140027738:	xchg   edx,eax
   140027739:	sbb    cl,al
   14002773b:	rex.WR
   14002773c:	rex.WRX add al,0x29
   14002773f:	add    DWORD PTR [rsi+0x20],eax
   140027742:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027743:	movabs al,ds:0x29289084a725d916
   14002774c:	adc    BYTE PTR [rdx+0x21],dl
   14002774f:	add    eax,0x3082118
   140027754:	rex.WB adc al,0xb8
   140027757:	(bad)  
   140027758:	sub    al,0x11
   14002775a:	push   rdx
   14002775b:	in     al,0xe0
   14002775d:	(bad)  
   14002775e:	sbb    BYTE PTR [rdi-0x2c],ch
   140027761:	push   0xffffffff936a4236
   140027766:	cmc    
   140027767:	sbb    al,0x67
   140027769:	add    al,0x81
   14002776b:	xchg   esp,eax
   14002776c:	add    al,0x81
   14002776e:	movabs al,ds:0xa9aad0f5b5c051e
   140027777:	mov    ebx,0x1b40291d
   14002777c:	movabs ds:0x2045428908d93150,al
   140027785:	repnz (bad) 
   140027787:	sub    BYTE PTR [rsi+rax*8],cl
   14002778a:	or     BYTE PTR [rdx],al
   14002778c:	and    eax,0x290a8468
   140027791:	add    ebx,esp
   140027793:	sub    BYTE PTR [rax],0x7
   140027796:	add    BYTE PTR [rip+0x60c0a409],ah        # 0x1a0c31ba5
   14002779c:	rol    dh,1
   14002779e:	adc    BYTE PTR [rcx+0x8597d14],0x6a
   1400277a5:	add    eax,0x39368368
   1400277ab:	cmp    al,0xe4
   1400277ad:	mov    bh,0x2c
   1400277af:	nop
   1400277b0:	sar    dh,cl
   1400277b2:	(bad)  
   1400277b3:	movabs ds:0x631c9e4418ce01fb,eax
   1400277bc:	mov    ah,0x55
   1400277be:	cli    
   1400277bf:	xacquire xchg BYTE PTR [rbx-0xaca4ea4],bl
   1400277c6:	pop    rdx
   1400277c7:	enter  0xb743,0x5d
   1400277cb:	ret    
   1400277cc:	xlat   BYTE PTR ds:[rbx]
   1400277cd:	pop    rsi
   1400277ce:	(bad)  
   1400277cf:	out    0x91,eax
   1400277d1:	addr32 rex.WRXB mov ds:0x21844494,al
   1400277d8:	mov    edi,0xb997e5ff
   1400277dd:	in     eax,0xab
   1400277df:	fbld   TBYTE PTR [rsi*1+0x58d55892]
   1400277e6:	xchg   esi,eax
   1400277e7:	jrcxz  0x14002778d
   1400277e9:	loope  0x140027803
   1400277eb:	in     eax,dx
   1400277ec:	rex.R ror BYTE PTR [rbx+0x35],cl
   1400277f0:	rex.WX ret 0x74d
   1400277f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400277f5:	clc    
   1400277f6:	test   edi,esi
   1400277f8:	pop    rsp
   1400277f9:	iret   
   1400277fa:	fwait
   1400277fb:	div    DWORD PTR [rip+0xffffffff84cb2a08]        # 0xc4cda209
   140027801:	pop    rdi
   140027802:	mov    WORD PTR [rbx+0x58],?
   140027805:	iret   
   140027806:	(bad)  
   140027807:	repz sti 
   140027809:	xchg   ebp,eax
   14002780a:	lahf   
   14002780b:	sub    al,0xe4
   14002780d:	(bad)  
   14002780e:	not    ch
   140027810:	std    
   140027811:	xchg   BYTE PTR [rbp-0x7a],bl
   140027814:	adc    al,BYTE PTR [rax]
   140027816:	stos   BYTE PTR es:[rdi],al
   140027817:	jb     0x14002784a
   140027819:	hlt    
   14002781a:	scas   eax,DWORD PTR es:[rdi]
   14002781b:	outs   dx,BYTE PTR ds:[rsi]
   14002781c:	mov    edi,0xf73c6018
   140027821:	fidivr DWORD PTR [rcx]
   140027823:	(bad)  
   140027824:	scas   eax,DWORD PTR es:[rdi]
   140027825:	xchg   DWORD PTR [rdi+0x108b5c49],edi
   14002782b:	xor    edx,DWORD PTR [rbx]
   14002782d:	in     al,dx
   14002782e:	fistp  WORD PTR [rdi]
   140027830:	jo     0x1400277fd
   140027832:	fld    TBYTE PTR [rsi-0x60]
   140027835:	pop    rcx
   140027836:	mov    ebp,DWORD PTR [rax+0x2a91207]
   14002783c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002783d:	xor    ah,dl
   14002783f:	movabs ds:0xaea3e5501db02890,eax
   140027848:	adc    al,0x56
   14002784a:	cmp    DWORD PTR [rdx+0x4084a148],esp
   140027850:	movsxd edx,DWORD PTR [rax]
   140027852:	pop    rdx
   140027853:	adc    BYTE PTR [rcx+rdi*2],al
   140027856:	fmul   st,st(0)
   140027858:	pop    rax
   140027859:	rex.WRB or r12b,BYTE PTR [r12+rax*2+0x6463f260]
   140027861:	scas   al,BYTE PTR es:[rdi]
   140027862:	lods   al,BYTE PTR ds:[rsi]
   140027863:	push   rsi
   140027864:	mov    WORD PTR [r14+0x210a416],?
   14002786b:	test   eax,0x4c18da24
   140027870:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027871:	shl    DWORD PTR [rax-0x25],0xc3
   140027875:	pop    rdx
   140027876:	add    eax,DWORD PTR [rax]
   140027878:	test   eax,0x31bfd7ce
   14002787d:	(bad)  
   14002787e:	xor    al,0x8
   140027880:	(bad)  
   140027881:	adc    dl,al
   140027883:	(bad)  
   140027884:	movabs ds:0x7667412ce833ed0b,eax
   14002788d:	xchg   esp,eax
   14002788e:	rex.WRX rcr rsp,cl
   140027891:	rex.X adc eax,0x5758d1d0
   140027897:	rex.R
   140027898:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002789a:	repz jbe 0x140027827
   14002789d:	sti    
   14002789e:	rex.WX
   14002789f:	pop    r15
   1400278a1:	gs (bad) 
   1400278a4:	jrcxz  0x140027861
   1400278a6:	add    eax,0xd7b0212b
   1400278ab:	push   rbp
   1400278ac:	mov    ebp,0xcb9058d7
   1400278b1:	push   rdx
   1400278b2:	lea    ebp,[rcx]
   1400278b4:	(bad)  
   1400278b5:	out    0x29,al
   1400278b7:	sub    eax,0x18402126
   1400278bc:	or     rax,0x73ac9dec
   1400278c2:	iret   
   1400278c3:	int    0x7b
   1400278c5:	pop    rax
   1400278c6:	pop    rsp
   1400278c7:	out    dx,al
   1400278c8:	jno    0x140027938
   1400278ca:	test   eax,0xe4281847
   1400278cf:	in     al,dx
   1400278d0:	jne    0x14002786a
   1400278d2:	mov    eax,0x305d74ce
   1400278d7:	ss mov ebx,0x6325210f
   1400278dd:	cmc    
   1400278de:	sbb    cl,bl
   1400278e0:	mov    cl,0xe0
   1400278e2:	mov    bl,0x4f
   1400278e4:	lahf   
   1400278e5:	loopne 0x1400278df
   1400278e7:	cdq    
   1400278e8:	(bad)  
   1400278e9:	(bad)  
   1400278ea:	pushf  
   1400278eb:	pop    rsi
   1400278ec:	loope  0x14002787f
   1400278ee:	out    0xcf,eax
   1400278f0:	lock sub esi,DWORD PTR [rdi-0x73]
   1400278f4:	jno    0x140027943
   1400278f6:	sub    eax,0x44189da3
   1400278fb:	ins    DWORD PTR es:[rdi],dx
   1400278fc:	sbb    al,0xd1
   1400278fe:	pushf  
   1400278ff:	and    cl,BYTE PTR [rax]
   140027901:	imul   edx,esp,0x43
   140027904:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027906:	xor    eax,0xbc6bc77b
   14002790b:	jrcxz  0x1400278c7
   14002790d:	sub    DWORD PTR [rdx+0x55],eax
   140027910:	xchg   bl,ch
   140027912:	adc    ch,BYTE PTR ss:[rbp+0x6b865aa9]
   140027919:	int    0x15
   14002791b:	push   rax
   14002791c:	rex.WX adc rax,0xffffffff9586c4a5
   140027922:	repz fst DWORD PTR [rip+0xffffffffd064e000]        # 0x110675929
   140027929:	(bad)
   14002792e:	rex.B sub eax,0x8bf974ae
   140027934:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027935:	pop    rdi
   140027936:	out    0xe0,al
   140027938:	sbb    ecx,DWORD PTR [rdi]
   14002793a:	shr    DWORD PTR [rbp-0x25],1
   14002793d:	push   rbp
   14002793e:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   140027940:	(bad)  
   140027941:	(bad)  
   140027942:	mov    esp,0x7b34c0e9
   140027947:	(bad)  
   140027948:	sbb    edx,esp
   14002794a:	rex.X test edx,ecx
   14002794d:	rex.RXB (bad) 
   14002794f:	lods   eax,DWORD PTR ds:[rsi]
   140027950:	lea    ebx,[rip+0x62fef3a5]        # 0x1a3016cfb
   140027956:	add    BYTE PTR [rip+0x772cb2ac],ah        # 0x1b72f2c08
   14002795c:	adc    edx,DWORD PTR [rsi+0x24bd31ba]
   140027962:	and    ecx,ebp
   140027964:	lods   al,BYTE PTR ds:[rsi]
   140027965:	(bad)  
   140027966:	sub    DWORD PTR [rcx],esp
   140027968:	adc    BYTE PTR [rdx],al
   14002796a:	loop   0x1400279b8
   14002796c:	movabs ds:0x20808390521cab33,eax
   140027975:	sar    DWORD PTR [rdx],cl
   140027977:	push   rdi
   140027978:	pop    rsp
   140027979:	mov    ebx,0x6e4dc8bf
   14002797e:	rex.WR pop rcx
   140027980:	mov    ebp,0x4a509dd6
   140027985:	stos   BYTE PTR es:[edi],al
   140027987:	sbb    dh,BYTE PTR [rdx]
   140027989:	mov    al,0x60
   14002798b:	(bad)  
   14002798c:	add    al,0x46
   14002798e:	or     dl,0x1
   140027991:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140027992:	lock test DWORD PTR [rbp-0x6e43a838],0x46d1a318
   14002799d:	movsxd esi,DWORD PTR [rsi+rdi*2-0x71]
   1400279a1:	mov    al,0x6b
   1400279a3:	out    0x9,al
   1400279a5:	sub    al,0x58
   1400279a7:	adc    eax,0xfc9b9d1a
   1400279ac:	mov    BYTE PTR [rsp+rdx*1+0x37],bh
   1400279b0:	stc    
   1400279b1:	sub    BYTE PTR [rdi+0x1006b35f],bl
   1400279b7:	cs sub ecx,esi
   1400279ba:	and    DWORD PTR [rbp-0x64049945],eax
   1400279c0:	mov    WORD PTR [rbx+0x44bac229],?
   1400279c6:	ret    0xa094
   1400279c9:	movabs eax,ds:0x772ef1f98f568580
   1400279d2:	fdiv   QWORD PTR [rax]
   1400279d4:	retf   
   1400279d5:	shl    DWORD PTR [rbx+0x16a342b],1
   1400279db:	imul   ebx,DWORD PTR [rdx-0x6c2e150e],0x7462b42c
   1400279e5:	mov    ebp,0x4139bd49
   1400279ea:	scas   eax,DWORD PTR es:[rdi]
   1400279eb:	popf   
   1400279ec:	jo     0x1400279d1
   1400279ee:	xor    eax,0xff4ffc13
   1400279f3:	in     al,0x66
   1400279f5:	(bad)  
   1400279f6:	jrcxz  0x14002799b
   1400279f8:	rex.RXB call 0x1467393a4
   1400279fe:	jg     0x1400279fe
   140027a00:	jl     0x14002799d
   140027a02:	mov    bh,0x4e
   140027a04:	imul   BYTE PTR [rax-0x392be5cb]
   140027a0a:	(bad)  
   140027a0b:	push   0xffffffffffffffdd
   140027a0d:	ss (bad) 
   140027a0f:	sahf   
   140027a10:	pop    rsi
   140027a11:	loopne 0x1400279dc
   140027a13:	push   rdi
   140027a14:	(bad)  
   140027a15:	movabs eax,ds:0x5ef773f3a89fec0d
   140027a1e:	(bad)  
   140027a1f:	mov    edi,0x881bcf78
   140027a24:	(bad)  
   140027a25:	xor    al,BYTE PTR [rbx-0x3782dc91]
   140027a2b:	in     eax,dx
   140027a2c:	pop    rbx
   140027a2d:	mov    ch,0xa
   140027a2f:	jl     0x140027a3f
   140027a31:	rcr    BYTE PTR [rax],0x53
   140027a34:	rex.R add al,0x2a
   140027a37:	push   rcx
   140027a38:	and    BYTE PTR [rcx+0x55d91],0xbe
   140027a3f:	pop    rsp
   140027a40:	(bad)  
   140027a41:	test   al,0xef
   140027a43:	in     al,0xd8
   140027a45:	push   rdx
   140027a46:	fwait
   140027a47:	mov    eax,0xc9f4e0d1
   140027a4c:	or     ebp,DWORD PTR [rdi+rbp*1]
   140027a4f:	ja     0x1400279e9
   140027a51:	sbb    al,0xab
   140027a53:	jno    0x140027a18
   140027a55:	sahf   
   140027a56:	sub    DWORD PTR [rsi],esp
   140027a58:	movabs ds:0x42b212334f7f16d0,eax
   140027a61:	sbb    DWORD PTR [rbx+riz*8-0x1b],ebp
   140027a65:	fild   DWORD PTR [rbx+rbx*1+0x16]
   140027a69:	cmp    esi,DWORD PTR [rcx]
   140027a6b:	repz sub esi,DWORD PTR [rcx]
   140027a6e:	frstor [rcx+rax*2]
   140027a71:	xchg   BYTE PTR [eax+0x29],dl
   140027a75:	push   0xffffffffffffff91
   140027a77:	mov    dl,0x9a
   140027a79:	and    eax,DWORD PTR [rcx+riz*2]
   140027a7c:	movabs al,ds:0x2ace2f6e6b9e4110
   140027a85:	fwait
   140027a86:	mov    ah,0xa
   140027a88:	ror    BYTE PTR [rbx+0x34],cl
   140027a8b:	cdq    
   140027a8c:	(bad)  
   140027a8d:	pop    rbp
   140027a8e:	rex.RX movsxd r8d,DWORD PTR [rdi+0x54]
   140027a92:	sub    eax,0xb5f0b225
   140027a97:	in     eax,dx
   140027a98:	xor    BYTE PTR [rdx-0xe],ch
   140027a9b:	loope  0x140027af6
   140027a9d:	mov    edx,0xcec2104b
   140027aa2:	(bad)  
   140027aa3:	jne    0x140027ac8
   140027aa5:	xchg   ebp,eax
   140027aa6:	retf   0x56fd
   140027aa9:	fstp   TBYTE PTR [rdx+0x31]
   140027aac:	sbb    cl,BYTE PTR [rbx]
   140027aae:	movabs eax,ds:0x93d92839240b0a10
   140027ab7:	out    0x75,eax
   140027ab9:	repnz test DWORD PTR [rdi],esi
   140027abc:	loop   0x140027aa3
   140027abe:	movabs al,ds:0x931211dbcd500a60
   140027ac7:	pop    rbx
   140027ac8:	add    eax,0x87dc78c6
   140027acd:	add    BYTE PTR [rbx-0x7e206ad7],ah
   140027ad3:	mov    al,BYTE PTR [rcx]
   140027ad5:	lea    ebp,[rax]
   140027ad7:	pop    rdi
   140027ad9:	mov    fs,WORD PTR [rax-0x2c26558f]
   140027adf:	test   al,0xb1
   140027ae1:	jg     0x140027a85
   140027ae3:	rex.RX cmp eax,0x12c4e80a
   140027ae9:	and    DWORD PTR [rdi*4-0x29d96f34],esp
   140027af0:	fiadd  WORD PTR [rcx+0x5]
   140027af3:	mov    esp,0x3bcdae7a
   140027af8:	scas   al,BYTE PTR es:[rdi]
   140027af9:	fcmovnb st,st(3)
   140027afb:	std    
   140027afc:	mov    bh,0xee
   140027afe:	out    0xc8,eax
   140027b00:	jmp    0x12a4acd1b
   140027b05:	movabs eax,ds:0xe688b1c9817840e1
   140027b0e:	in     al,dx
   140027b0f:	(bad)  
   140027b10:	(bad)  
   140027b11:	(bad)  
   140027b12:	(bad)  
   140027b13:	mov    esp,0x6e75ade7
   140027b18:	cmp    bh,BYTE PTR [rax]
   140027b1a:	(bad)  
   140027b1b:	(bad)  
   140027b1c:	lahf   
   140027b1d:	cmp    DWORD PTR [rbp+0x27],eax
   140027b20:	int    0xf8
   140027b22:	mov    ebp,0xcee15f47
   140027b27:	(bad)  
   140027b28:	int3   
   140027b29:	jb     0x140027b12
   140027b2b:	cmc    
   140027b2c:	xchg   esi,eax
   140027b2d:	pop    rsp
   140027b2e:	fmul   QWORD PTR [rax-0x3a37c74b]
   140027b34:	je     0x140027b24
   140027b36:	shl    BYTE PTR [rax],0x10
   140027b39:	fsubr  DWORD PTR [rcx-0x6ee4a2b7]
   140027b3f:	movabs eax,ds:0xed98d53d108d8002
   140027b48:	(bad)
   140027b4b:	rex.WX sbb al,0x6
   140027b4e:	pop    rsp
   140027b4f:	mov    eax,0xb97961d0
   140027b54:	rex.WRB adc BYTE PTR [r12+rcx*4],r8b
   140027b58:	(bad)  
   140027b59:	jmp    0x140027b27
   140027b5b:	mov    edi,ss
   140027b5d:	test   eax,0x26e40145
   140027b62:	cmp    eax,0x8eb71b90
   140027b67:	sub    r8,QWORD PTR [rdi-0x2d]
   140027b6b:	jbe    0x140027aff
   140027b6d:	jb     0x140027b2d
   140027b6f:	sbb    edx,ebx
   140027b71:	lea    edx,[rbx]
   140027b73:	mov    dl,0x4c
   140027b75:	adc    ecx,DWORD PTR [rax-0x3f]
   140027b78:	rex.R cmp eax,0x14051ea4
   140027b7e:	outs   dx,BYTE PTR ds:[rsi]
   140027b7f:	xor    ch,BYTE PTR [rsi+0x34]
   140027b82:	sub    eax,0x2121074d
   140027b87:	int    0xc
   140027b89:	mov    ebp,0x2dc92334
   140027b8e:	add    al,0x84
   140027b90:	rex or DWORD PTR [rbx+0x30],edx
   140027b94:	repnz (bad) 
   140027b96:	cmp    ecx,DWORD PTR [rdi+0x2d5f47c8]
   140027b9c:	lods   al,BYTE PTR ds:[rsi]
   140027b9d:	(bad)  
   140027b9e:	add    DWORD PTR [rsi-0x1486ef85],edx
   140027ba4:	(bad)  
   140027ba5:	rex.WRXB rcl QWORD PTR [r8],cl
   140027ba8:	test   ebp,esp
   140027baa:	(bad)  
   140027bab:	rex.RXB ins DWORD PTR es:[rdi],dx
   140027bad:	ja     0x140027c0d
   140027baf:	jmp    0xd402ecba
   140027bb4:	xchg   esp,eax
   140027bb5:	add    eax,0x110ee03d
   140027bba:	cmp    DWORD PTR [rax],esi
   140027bbc:	mov    ecx,0x1358d66b
   140027bc1:	(bad)  
   140027bc2:	add    DWORD PTR [rdx+0x7a],eax
   140027bc5:	ins    DWORD PTR es:[rdi],dx
   140027bc6:	jns    0x140027b6f
   140027bc8:	ret    0xf7f8
   140027bcb:	fist   DWORD PTR [rsp+rbx*8]
   140027bce:	add    BYTE PTR [rbp-0x61386cc5],0x5
   140027bd5:	pop    rdx
   140027bd6:	fs add al,0x4a
   140027bd9:	mov    dl,0xd2
   140027bdb:	retf   
   140027bdc:	pop    rax
   140027bdd:	pop    rax
   140027bde:	mov    DWORD PTR [rcx+0x2f5e86a7],ebp
   140027be4:	rex.RX and BYTE PTR [rax+0x44],r13b
   140027be8:	mov    dl,BYTE PTR [rax+0x49]
   140027beb:	mov    ebx,0xc9205f6e
   140027bf0:	xor    al,bl
   140027bf2:	cdq    
   140027bf3:	in     eax,0x36
   140027bf5:	outs   dx,DWORD PTR ds:[rsi]
   140027bf6:	mov    esi,0x95318266
   140027bfb:	(bad)  
   140027bfc:	add    al,0xa2
   140027bfe:	xor    eax,0xd3cecfe7
   140027c03:	out    dx,al
   140027c04:	sbb    BYTE PTR [rdi+rsi*4+0x47],dl
   140027c08:	adc    BYTE PTR [rax+rcx*1-0x520047d3],al
   140027c0f:	sti    
   140027c10:	imul   esi,DWORD PTR [rdi+0x52],0xd1b42d4e
   140027c17:	(bad)  
   140027c18:	lock (bad) 
   140027c1a:	and    esi,ebx
   140027c1c:	mov    esp,0xc2c9daf3
   140027c21:	ins    DWORD PTR es:[rdi],dx
   140027c22:	(bad)  
   140027c23:	cmc    
   140027c24:	sti    
   140027c25:	rcr    BYTE PTR [rdx-0x12],cl
   140027c28:	rex.X (bad) 
   140027c2a:	add    eax,0x30c082a8
   140027c2f:	retf   0x150
   140027c32:	rol    ch,0x64
   140027c35:	lods   eax,DWORD PTR ds:[rsi]
   140027c36:	in     al,0x9e
   140027c38:	(bad)  
   140027c39:	(bad)  
   140027c3a:	cmp    dl,BYTE PTR [rbx]
   140027c3c:	rex.X xchg eax,eax
   140027c3e:	push   0x39a49243
   140027c43:	stos   BYTE PTR es:[rdi],al
   140027c44:	xor    DWORD PTR [rdx-0x63],0xffffffb0
   140027c48:	mov    edx,0x4d4a1bb
   140027c4d:	lods   al,BYTE PTR ds:[rsi]
   140027c4e:	retf   0x665
   140027c51:	fimul  DWORD PTR [rcx+0x46]
   140027c54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027c55:	xchg   edi,eax
   140027c56:	xchg   ecx,eax
   140027c57:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027c58:	jbe    0x140027c03
   140027c5a:	mov    eax,0x61448550
   140027c5f:	(bad)  
   140027c60:	(bad)  
   140027c61:	jnp    0x140027cc4
   140027c63:	xor    dh,BYTE PTR [rdi]
   140027c65:	jle    0x140027ca2
   140027c67:	push   rsp
   140027c68:	enter  0xa1b4,0x9d
   140027c6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027c6d:	je     0x140027c51
   140027c6f:	xchg   esp,eax
   140027c70:	sub    al,0xf
   140027c72:	add    DWORD PTR [rsi-0x5f],eax
   140027c75:	and    al,0x54
   140027c77:	or     ch,cl
   140027c79:	rex.RX
   140027c7a:	rex.WRX (bad) 
   140027c7d:	or     ch,BYTE PTR [rbx-0x206409bd]
   140027c83:	jge    0x140027cbb
   140027c85:	mov    esp,0x4a53b3e8
   140027c8a:	(bad)  
   140027c8b:	scas   eax,DWORD PTR es:[rdi]
   140027c8c:	rex.X push rdx
   140027c8e:	fwait
   140027c8f:	mov    esi,0x5fc06277
   140027c94:	jb     0x140027cf6
   140027c96:	add    ecx,ebp
   140027c98:	cs (bad) 
   140027c9a:	sub    eax,0xeed8ba5f
   140027c9f:	pop    rbp
   140027ca0:	fs mov cl,0xab
   140027ca3:	neg    dl
   140027ca5:	add    eax,0x2df5ec63
   140027caa:	jne    0x140027cbf
   140027cac:	(bad)  
   140027cad:	cs jne 0x140027d19
   140027cb0:	(bad)  
   140027cb1:	xor    ah,dl
   140027cb3:	sub    al,0xa1
   140027cb5:	xchg   edi,eax
   140027cb6:	data16 (bad) 
   140027cb8:	xchg   esp,eax
   140027cb9:	in     eax,0x3b
   140027cbb:	mov    WORD PTR [rcx],?
   140027cbd:	test   DWORD PTR [rbp+0x2d1a6711],esp
   140027cc3:	jb     0x140027cd3
   140027cc5:	rex.R
   140027cc6:	rex.WB add al,BYTE PTR [rip+0xffffffffc30e5a4a]        # 0x10310d717
   140027ccd:	push   0xffffffff9ba0664d
   140027cd2:	fs (bad) 
   140027cd4:	xchg   edx,eax
   140027cd5:	mov    WORD PTR [rdi],?
   140027cd7:	(bad)  
   140027cd8:	cwde   
   140027cd9:	shl    BYTE PTR [rsi+rbp*2-0x685f50d6],0x6a
   140027ce1:	(bad)  
   140027ce2:	shr    DWORD PTR [rdx+0x33],1
   140027ce5:	std    
   140027ce6:	push   rdx
   140027ce7:	adc    eax,esp
   140027ce9:	(bad)  
   140027cea:	test   DWORD PTR [rdi+rdx*8],ecx
   140027ced:	fidiv  DWORD PTR [rdi+0x18]
   140027cf0:	xlat   BYTE PTR fs:[rbx]
   140027cf2:	add    al,al
   140027cf4:	rex.RX xor r15d,ebx
   140027cf7:	ss (bad) 
   140027cf9:	or     edi,DWORD PTR [rax-0x31d191d8]
   140027cff:	fild   QWORD PTR [rsi]
   140027d01:	sti    
   140027d02:	retf   0x2500
   140027d05:	adc    DWORD PTR [rdx],eax
   140027d07:	movabs ds:0x139513a33b664935,eax
   140027d10:	push   rax
   140027d11:	(bad)  
   140027d12:	sbb    eax,0x95f5ff96
   140027d17:	(bad)  
   140027d18:	nop
   140027d19:	sbb    cl,BYTE PTR [rbp-0x64]
   140027d1c:	imul   esi,DWORD PTR [rdx+0x1d8c634c],0x9b9543f1
   140027d26:	hlt    
   140027d27:	sahf   
   140027d28:	int    0x80
   140027d2a:	scas   eax,DWORD PTR es:[rdi]
   140027d2b:	pop    rdi
   140027d2c:	stos   DWORD PTR es:[rdi],eax
   140027d2d:	scas   al,BYTE PTR es:[rdi]
   140027d2e:	rex.RB push r15
   140027d30:	mov    dh,0x5d
   140027d32:	rex.X cli 
   140027d34:	fldenv [rax+0xc45db91]
   140027d3a:	(bad)  
   140027d3b:	xor    edi,DWORD PTR [rbp-0xc]
   140027d3e:	and    edx,DWORD PTR [rcx-0x42294085]
   140027d44:	(bad)  
   140027d45:	std    
   140027d46:	out    dx,eax
   140027d47:	mov    ebp,0x29bb97c3
   140027d4c:	out    0x5a,eax
   140027d4e:	cmp    eax,0xcd26899a
   140027d53:	push   rdx
   140027d54:	xchg   edx,eax
   140027d55:	sub    al,0xa3
   140027d57:	(bad)  
   140027d58:	rol    BYTE PTR [rdi],1
   140027d5a:	xor    al,BYTE PTR [rdx]
   140027d5c:	mov    esi,DWORD PTR [rdi+0x338cbdcb]
   140027d62:	rex.WXB sbb rax,0xffffffff942430a2
   140027d68:	(bad)  
   140027d69:	cmp    ch,dl
   140027d6b:	(bad)  
   140027d6c:	xchg   ebp,eax
   140027d6d:	sub    ch,BYTE PTR [rsi]
   140027d6f:	fstp   QWORD PTR [rax]
   140027d71:	xor    DWORD PTR [rax],0xffffff96
   140027d74:	shr    BYTE PTR [rbp+rsi*8+0x52],1
   140027d78:	rex.WXB (bad) 
   140027d7a:	(bad)  
   140027d7b:	enter  0x58a9,0x4b
   140027d7f:	jbe    0x140027d94
   140027d81:	ret    
   140027d82:	mov    edi,0x35d911
   140027d87:	loopne 0x140027d6d
   140027d89:	jb     0x140027dbe
   140027d8b:	not    DWORD PTR [rsi+0x7f]
   140027d8e:	loope  0x140027d8e
   140027d90:	in     al,0xaa
   140027d92:	push   0x2a
   140027d94:	popf   
   140027d95:	pop    rbp
   140027d96:	xchg   esp,eax
   140027d97:	cmp    eax,0x637260d8
   140027d9c:	rcl    bh,0x4e
   140027d9f:	or     eax,0x363e7846
   140027da4:	xchg   ebp,eax
   140027da5:	adc    ebx,0xda2737db
   140027dab:	xor    ch,BYTE PTR [rbp-0x37a1ae75]
   140027db1:	cld    
   140027db2:	fimul  DWORD PTR [rdx]
   140027db4:	add    eax,0x9f652034
   140027db9:	retf   0x5661
   140027dbc:	sub    edi,DWORD PTR [rcx+rsi*8-0x59]
   140027dc0:	jg     0x140027daa
   140027dc2:	(bad)  
   140027dc3:	jg     0x140027d70
   140027dc5:	(bad)  
   140027dc6:	rex.X sti 
   140027dc8:	jge    0x140027da7
   140027dca:	addr32 in al,dx
   140027dcc:	cld    
   140027dcd:	sbb    edx,DWORD PTR [rax+0x26]
   140027dd0:	(bad)  
   140027dd1:	js     0x140027e12
   140027dd3:	ret    0x56fd
   140027dd6:	fild   QWORD PTR [rcx+rbp*4]
   140027dd9:	faddp  st(7),st
   140027ddb:	cmc    
   140027ddc:	sahf   
   140027ddd:	sub    DWORD PTR [rcx],0xffffffda
   140027de0:	adc    BYTE PTR [rax-0x55],al
   140027de3:	xchg   edi,eax
   140027de4:	xor    BYTE PTR [rdi-0x34dffe94],dh
   140027dea:	push   rdx
   140027deb:	(bad)  
   140027dec:	test   eax,0x36ca3641
   140027df1:	std    
   140027df2:	rex.WXB jmp 0x140027db9
   140027df5:	sub    DWORD PTR [rdi-0x69],esp
   140027df8:	jnp    0x140027dce
   140027dfa:	and    cl,BYTE PTR [rbp+0x4d]
   140027dfd:	push   0x51a199ea
   140027e02:	leave  
   140027e03:	addr32 adc eax,0xdbe77ef9
   140027e09:	cmp    eax,0x481c94a4
   140027e0e:	adc    bl,BYTE PTR [rax]
   140027e10:	add    BYTE PTR [rbp+0x1aec4deb],al
   140027e16:	mov    ah,0xcd
   140027e18:	out    0x0,eax
   140027e1a:	stos   BYTE PTR es:[rdi],al
   140027e1b:	fild   DWORD PTR [rdi+0x168655]
   140027e21:	ss retf 0x6ff0
   140027e25:	test   ch,dh
   140027e27:	sbb    eax,0x4cfe4fb8
   140027e2c:	add    eax,0x9fd7b9a5
   140027e31:	(bad)  
   140027e32:	out    0x46,eax
   140027e34:	pop    rax
   140027e35:	popf   
   140027e36:	adc    esi,DWORD PTR [rax+0x14]
   140027e39:	popf   
   140027e3a:	(bad)  
   140027e3b:	(bad)  
   140027e3c:	test   eax,0xc4812e0d
   140027e41:	xchg   ecx,eax
   140027e42:	addr32 push bp
   140027e45:	pop    rdi
   140027e46:	sub    al,0xad
   140027e48:	add    DWORD PTR [rbx-0x80],edx
   140027e4b:	mov    BYTE PTR [rbx],cl
   140027e4d:	or     eax,0x6ca90022
   140027e52:	xchg   esp,eax
   140027e53:	(bad)  
   140027e54:	rex.WRX xor BYTE PTR [rcx-0x76],r9b
   140027e58:	leave  
   140027e59:	and    BYTE PTR [rbx+0x34],cl
   140027e5c:	rol    DWORD PTR es:[rcx+rbp*2],1
   140027e60:	mov    WORD PTR [rdx],ss
   140027e62:	xchg   esi,eax
   140027e63:	adc    edx,DWORD PTR [rax-0x5b9024c7]
   140027e69:	mov    dl,0xd7
   140027e6b:	and    DWORD PTR [rbp-0x4e],ebp
   140027e6e:	nop
   140027e6f:	test   eax,0x99346005
   140027e74:	rex.WRX xor QWORD PTR [rdx],r10
   140027e77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027e78:	stos   BYTE PTR es:[rdi],al
   140027e79:	and    edx,eax
   140027e7b:	test   al,0xfc
   140027e7d:	xor    esi,0xabbf7846
   140027e83:	xor    bl,BYTE PTR [rdx-0x51]
   140027e86:	rex.X mov cl,BYTE PTR [rdx]
   140027e89:	mov    edi,0x3fa101e0
   140027e8e:	mov    edx,0x563476af
   140027e93:	or     DWORD PTR [rbx-0x59152ff0],0xffffff9c
   140027e9a:	imul   esi,DWORD PTR [rbp+0x69],0x26
   140027e9e:	sbb    ah,BYTE PTR [rbx+0x11a90233]
   140027ea4:	add    al,0x54
   140027ea6:	outs   dx,DWORD PTR ds:[rsi]
   140027ea7:	xchg   esp,eax
   140027ea8:	sar    BYTE PTR [rdx-0x67528ca8],0x5a
   140027eaf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027eb0:	test   eax,0x5235c32b
   140027eb5:	je     0x199a4ed59
   140027ebb:	pop    rsp
   140027ebc:	rex.WB push r8
   140027ebe:	rex.WX mov dl,0xd2
   140027ec1:	int    0xf2
   140027ec3:	shr    DWORD PTR [rbp+0x4c],cl
   140027ec6:	push   rcx
   140027ec7:	(bad)  
   140027ec8:	and    eax,0xcdb5ad88
   140027ecd:	iret   
   140027ece:	adc    ebx,DWORD PTR [rax]
   140027ed0:	rex.RX sbb DWORD PTR [rdx],r13d
   140027ed3:	add    BYTE PTR [rax],bl
   140027ed5:	xchg   esp,eax
   140027ed6:	sahf   
   140027ed7:	pop    rcx
   140027ed8:	fnstsw WORD PTR [rsi]
   140027eda:	push   0xffffffffb5b58bdf
   140027edf:	cli    
   140027ee0:	rex.WXB mov dil,BYTE PTR [r14-0x14]
   140027ee4:	div    DWORD PTR [rbp-0x7f]
   140027ee7:	cs mov esp,0xb4bbc858
   140027eed:	jmp    0x140027eba
   140027eef:	mov    ecx,0xb6842a8d
   140027ef4:	mov    cl,0x78
   140027ef6:	xlat   BYTE PTR ds:[rbx]
   140027ef7:	(bad)  
   140027ef8:	and    al,0x76
   140027efa:	fwait
   140027efb:	ja     0x140027f59
   140027efd:	imul   edi,DWORD PTR [rip+0x3e4d22e4],0x521b1a1a        # 0x17e4fa1eb
   140027f07:	adc    esp,DWORD PTR [rdx+0x38e3e960]
   140027f0d:	and    ebp,DWORD PTR [rbx-0x4b]
   140027f10:	xchg   rsi,rax
   140027f12:	movsxd eax,DWORD PTR [rdx+0x5d3343b8]
   140027f18:	(bad)  
   140027f19:	rex.WX mov sil,0xd9
   140027f1c:	adc    ebp,DWORD PTR [rsi]
   140027f1e:	xor    edx,DWORD PTR [rip+0xffffffffbaae332c]        # 0xfab0b250
   140027f24:	test   BYTE PTR [rdx],ah
   140027f26:	or     BYTE PTR [r9+0x11841833],r9b
   140027f2d:	(bad)  
   140027f2e:	mov    edx,0xa71b274e
   140027f33:	popf   
   140027f34:	rex.WRX shr rdx,cl
   140027f37:	rex.WRB rcl r9,1
   140027f3a:	adc    DWORD PTR [rip+0xffffffff9ba03d14],edi        # 0xdba2bc54
   140027f40:	int3   
   140027f41:	xchg   ecx,eax
   140027f42:	or     QWORD PTR [r14],0x1bd6423
   140027f49:	mov    ch,0x3a
   140027f4b:	xor    cl,BYTE PTR [rax]
   140027f4d:	mov    r10d,0x9483e0ee
   140027f53:	icebp  
   140027f54:	shr    BYTE PTR [rbx-0x12a7d261],1
   140027f5a:	add    bh,BYTE PTR [rax+0x7bfd0563]
   140027f60:	xchg   edi,eax
   140027f61:	rex.RXB stc 
   140027f63:	scas   al,BYTE PTR es:[rdi]
   140027f64:	(bad)  
   140027f65:	movsxd ebp,DWORD PTR [rax]
   140027f67:	pop    rdx
   140027f68:	fisttp QWORD PTR [rbx+rsi*4-0x769cceb5]
   140027f6f:	rex.B cwde 
   140027f71:	mov    ecx,ds
   140027f73:	jno    0x140027f1c
   140027f75:	(bad)  
   140027f76:	movabs ds:0xdce32cdd04290daf,al
   140027f7f:	jb     0x140027f10
   140027f81:	rex.RX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027f83:	test   eax,0xa6d98cab
   140027f88:	mov    dh,0xed
   140027f8a:	clc    
   140027f8b:	cmp    ecx,DWORD PTR [rdx]
   140027f8d:	push   0xffffffffed8b19a7
   140027f92:	and    al,0x27
   140027f94:	sbb    ebx,edx
   140027f96:	rex.WXB
   140027f97:	lock test DWORD PTR [rdx],ebp
   140027f9a:	push   rdi
   140027f9b:	pop    rsp
   140027f9c:	add    DWORD PTR [rbp+0x18338b5],ecx
   140027fa2:	loopne 0x140027fd6
   140027fa4:	adc    al,0x71
   140027fa6:	shl    DWORD PTR [rcx+0x2e5f0002],0x5
   140027fad:	or     al,0xd6
   140027faf:	cmp    esi,esi
   140027fb1:	loop   0x140027f45
   140027fb3:	adc    edx,DWORD PTR [rcx+0x5]
   140027fb6:	fwait
   140027fb7:	in     eax,dx
   140027fb8:	sbb    ch,cl
   140027fba:	fild   WORD PTR [rdi+0x22]
   140027fbd:	mov    esp,0xfc374f5c
   140027fc2:	cdq    
   140027fc3:	pushf  
   140027fc4:	(bad)  
   140027fc5:	test   DWORD PTR [rdi+0x4e],0xa3e6da3e
   140027fcc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027fcd:	xor    BYTE PTR [rax],cl
   140027fcf:	movsxd ebx,ebp
   140027fd1:	add    al,0xa1
   140027fd3:	add    BYTE PTR [rbp-0x30],ch
   140027fd6:	jno    0x14002801a
   140027fd8:	ja     0x14002800b
   140027fda:	and    eax,0xcb50b76e
   140027fdf:	sub    ebx,DWORD PTR [rdx+rcx*1]
   140027fe2:	iret   
   140027fe3:	jae    0x140028015
   140027fe5:	pop    rdx
   140027fe6:	loopne 0x140027fe2
   140027fe8:	out    0x2,al
   140027fea:	(bad)  
   140027feb:	movabs ds:0x32250c8a462a9a05,al
   140027ff4:	xor    BYTE PTR [rcx+0x79],bl
   140027ff7:	rex.WRX pop rdi
   140027ff9:	adc    DWORD PTR [rax+rax*2-0x4bb72f5d],ecx
   140028000:	or     BYTE PTR [rax+0x11],bl
   140028003:	xor    ebp,DWORD PTR [rax+rcx*8]
   140028006:	imul   ebx,DWORD PTR [rcx+0x10],0xffffff87
   14002800a:	pop    rcx
   14002800b:	rcl    BYTE PTR [rbx-0x64],cl
   14002800e:	imul   r11,QWORD PTR [r8+r11*2+0x69],0xffffffffffffffd3
   140028014:	mov    ecx,0x68449e70
   140028019:	je     0x14002808e
   14002801b:	or     al,0x39
   14002801d:	mov    DWORD PTR ss:[rax+0x4c],ebp
   140028021:	pop    rax
   140028022:	jmp    0x140028064
   140028024:	mov    dl,BYTE PTR [rdx+0x7ccdf10b]
   14002802a:	push   rcx
   14002802b:	jne    0x140027fb4
   14002802d:	cld    
   14002802e:	(bad)  
   14002802f:	mov    dh,0x86
   140028031:	clc    
   140028032:	(bad)  
   140028033:	rex.WX (bad) 
   140028035:	(bad)  
   140028036:	or     BYTE PTR [rdi],cl
   140028038:	add    al,0x96
   14002803a:	cmp    dh,BYTE PTR [rcx]
   14002803c:	addr32 pop rbx
   14002803e:	pop    rbp
   14002803f:	(bad)  
   140028040:	xor    ecx,DWORD PTR [rbp-0x80]
   140028043:	es test eax,0xc88faa6b
   140028049:	in     al,0xe0
   14002804b:	fmul   DWORD PTR [rcx+0x165ae633]
   140028051:	add    BYTE PTR [rdx-0x4d71d97f],bl
   140028057:	adc    al,BYTE PTR [rbp+rdi*4+0x538dd4e7]
   14002805e:	(bad)  
   14002805f:	mov    bh,0x63
   140028061:	(bad)  
   140028062:	shr    dl,cl
   140028065:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028066:	(bad)
   140028069:	(bad)  
   14002806a:	out    dx,eax
   14002806b:	xor    bl,BYTE PTR [rcx+0x583c3f7c]
   140028071:	xchg   ecx,eax
   140028072:	rex.B (bad) 
   140028074:	push   0x250ca47
   140028079:	shl    ch,0xc6
   14002807c:	clc    
   14002807d:	(bad)  
   14002807e:	jne    0x1400280df
   140028080:	(bad)  
   140028081:	retf   0x44d9
   140028084:	(bad)  
   140028085:	push   rbx
   140028086:	mov    eax,?
   140028088:	and    bl,BYTE PTR [rdi]
   14002808a:	adc    eax,0xb8406e0b
   14002808f:	(bad)  
   140028090:	pushf  
   140028091:	mov    edi,0xf2230637
   140028096:	int3   
   140028097:	(bad)  
   140028098:	pop    rsp
   140028099:	out    0xc5,eax
   14002809b:	jrcxz  0x1400280a5
   14002809d:	ins    BYTE PTR es:[rdi],dx
   14002809e:	rex.XB (bad) 
   1400280a0:	push   rdi
   1400280a1:	jl     0x1400280b5
   1400280a3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400280a4:	(bad)  
   1400280a5:	rex.W jp 0x1400280b1
   1400280a8:	popf   
   1400280a9:	mov    ecx,0xc5a96a16
   1400280ae:	xor    eax,0x8d371cd9
   1400280b3:	popf   
   1400280b4:	in     eax,0x96
   1400280b6:	jge    0x14002811f
   1400280b8:	cmp    BYTE PTR [rbx+rbx*2+0x20],bl
   1400280bc:	push   rax
   1400280bd:	pop    rbp
   1400280be:	xor    BYTE PTR [rdx],cl
   1400280c0:	movsxd edx,DWORD PTR [rdx+rbx*8]
   1400280c3:	pop    rax
   1400280c4:	rex.X xor sil,BYTE PTR [rcx]
   1400280c7:	add    DWORD PTR [rsi+0x7df873c0],eax
   1400280cd:	mov    edi,0xaad714dd
   1400280d2:	je     0x140028096
   1400280d4:	adc    al,0xa7
   1400280d6:	cwde   
   1400280d7:	rex.WB (bad) 
   1400280d9:	icebp  
   1400280da:	rex.RX adc al,0x2b
   1400280dd:	push   0xf
   1400280df:	mov    esi,DWORD PTR [rbp-0x476466e5]
   1400280e5:	test   DWORD PTR [rbx+0x57e641d9],esi
   1400280eb:	push   rdx
   1400280ec:	(bad)  
   1400280ed:	pop    rdi
   1400280ee:	cwde   
   1400280ef:	movabs ds:0x7b335035a98f38bb,eax
   1400280f8:	nop
   1400280f9:	jrcxz  0x14002812e
   1400280fb:	mov    BYTE PTR [rax-0x6405c82a],dh
   140028101:	(bad)  
   140028102:	rex.W pop rbx
   140028104:	fsub   QWORD PTR [rip+0xffffffffdb71ffcf]        # 0x11b7480d9
   14002810a:	cli    
   14002810b:	xor    ah,BYTE PTR [rdx+rbp*1+0x4b6b81fc]
   140028112:	fdivr  st,st(3)
   140028114:	(bad)  
   140028115:	(bad)  
   140028116:	es sub al,0xb6
   140028119:	mov    edx,0x24433274
   14002811e:	xor    al,0xf1
   140028120:	push   rsp
   140028121:	out    0x1,al
   140028123:	and    BYTE PTR [rdi+0x75],0x18
   140028127:	mov    r11d,0xb185dd67
   14002812d:	mov    edx,0xc934a3a6
   140028132:	je     0x1400280d2
   140028134:	sahf   
   140028135:	jmp    0x140028114
   140028137:	add    DWORD PTR [rcx+0x39],eax
   14002813a:	xor    DWORD PTR [rdx],ebp
   14002813c:	or     BYTE PTR [rbx+rcx*8],ah
   14002813f:	mov    ebp,0xf4a01564
   140028144:	std    
   140028145:	(bad)  
   140028146:	cld    
   140028147:	cmp    ch,BYTE PTR [rdi]
   140028149:	mov    DWORD PTR [rbp-0x80],0xf4e01e7e
   140028150:	jmp    0x16432d128
   140028155:	retf   0x430f
   140028158:	or     al,BYTE PTR [rax]
   14002815a:	mov    esi,0xb3e09a0c
   14002815f:	rcl    DWORD PTR [rax+riz*8-0x16b3a4b],1
   140028166:	(bad)  
   140028167:	in     al,0xa6
   140028169:	cmp    eax,0x39d45f79
   14002816e:	cmp    DWORD PTR [rsi-0x6e],ebx
   140028171:	add    al,0xf6
   140028173:	sub    ebx,DWORD PTR [rbp+0x1e]
   140028176:	movabs ds:0xdeb3720ae8a5c20c,eax
   14002817f:	mov    dh,0x5b
   140028181:	lock add BYTE PTR [rax+0x64],cl
   140028185:	(bad)  
   140028186:	xchg   ebx,eax
   140028187:	jnp    0x1400281c3
   140028189:	retf   
   14002818a:	sbb    eax,0x116a9cce
   14002818f:	lahf   
   140028190:	popf   
   140028191:	jrcxz  0x1400281a0
   140028193:	pushf  
   140028194:	in     eax,0x1d
   140028196:	xchg   ebx,eax
   140028197:	(bad)  
   140028198:	mov    ecx,0x6314e26d
   14002819d:	stos   BYTE PTR es:[rdi],al
   14002819e:	add    eax,edx
   1400281a0:	movabs al,ds:0x65594e9e1b4e22b5
   1400281a9:	jae    0x140028131
   1400281ab:	mov    dh,0x30
   1400281ad:	(bad)  
   1400281ae:	sbb    al,0xb8
   1400281b0:	cmp    BYTE PTR [rbx-0x3b],al
   1400281b3:	pop    rax
   1400281b4:	sti    
   1400281b5:	add    ebp,DWORD PTR [rdi+rsi*2]
   1400281b8:	and    DWORD PTR [rax+rax*2+0x4a],eax
   1400281bc:	test   BYTE PTR [rax-0x2d],al
   1400281bf:	rex.WR (bad) 
   1400281c1:	sbb    BYTE PTR [rdi-0x31],cl
   1400281c4:	jb     0x140028166
   1400281c6:	sti    
   1400281c7:	or     al,0x4b
   1400281c9:	mov    ch,0x1b
   1400281cb:	cwde   
   1400281cc:	(bad)  [rbx+0x7]
   1400281cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400281d0:	neg    DWORD PTR [rsi-0x31]
   1400281d3:	leave  
   1400281d4:	(bad)
   1400281d7:	jae    0x140028180
   1400281d9:	pop    rax
   1400281da:	cmp    DWORD PTR [rsi+0x4],esi
   1400281dd:	rcr    DWORD PTR [rdi+riz*1],1
   1400281e0:	fdivr  QWORD PTR [rbx+0xd]
   1400281e3:	mov    edi,cs
   1400281e5:	rex pop rax
   1400281e7:	add    eax,DWORD PTR [rsi]
   1400281e9:	sub    esp,esi
   1400281eb:	cmp    bh,BYTE PTR [rcx+rax*4+0x45c5f1fb]
   1400281f2:	or     edi,ebp
   1400281f4:	nop
   1400281f5:	cld    
   1400281f6:	pop    dx
   1400281f8:	lods   al,BYTE PTR ds:[rsi]
   1400281f9:	and    al,0x4e
   1400281fb:	xor    eax,0x4a7a52f4
   140028200:	(bad)  
   140028201:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140028202:	popf   
   140028203:	xchg   ebx,eax
   140028204:	push   rax
   140028205:	(bad)  
   140028206:	xor    bl,cl
   140028208:	jbe    0x14002818f
   14002820a:	mov    al,0x8a
   14002820c:	jge    0x14002828c
   14002820e:	test   eax,0x8cd63b47
   140028213:	test   DWORD PTR [rsi+0x16812d38],eax
   140028219:	rex.WX movsxd rsp,DWORD PTR [rbp+0x3a966b13]
   140028220:	xor    DWORD PTR [rdx+0x5],ecx
   140028223:	sub    al,0x77
   140028225:	sar    BYTE PTR [rsi-0x79ab5183],cl
   14002822b:	popf   
   14002822c:	clc    
   14002822d:	repz gs test al,0x0
   140028231:	shl    BYTE PTR [rcx+0x62364eb0],0x9
   140028238:	pop    rsp
   140028239:	jle    0x1400282b7
   14002823b:	(bad)  
   14002823c:	mov    ?,esp
   14002823e:	push   rdx
   14002823f:	cmp    ch,BYTE PTR [rsi]
   140028241:	and    bh,ch
   140028243:	lods   eax,DWORD PTR ds:[rsi]
   140028244:	ret    0x4e75
   140028247:	in     eax,dx
   140028248:	rex.WRX (bad) 
   14002824a:	leave  
   14002824b:	lods   al,BYTE PTR ds:[rsi]
   14002824c:	jl     0x1400282a0
   14002824e:	mov    cs,WORD PTR [rbp-0x3f]
   140028251:	mov    cl,0x5c
   140028253:	or     cl,0x43
   140028256:	gs rex.X call 0xf91a721f
   14002825d:	(bad)  
   14002825e:	sub    al,0x3
   140028260:	ror    BYTE PTR [rcx-0x34],1
   140028263:	jmp    0xfc2eadbb
   140028268:	jbe    0x1400281f8
   14002826a:	rex.XB leave 
   14002826c:	rex.WB out dx,al
   14002826e:	popf   
   14002826f:	cmp    eax,0x4f27dbca
   140028274:	push   rbx
   140028275:	pand   mm2,QWORD PTR [rax+0x615aa405]
   14002827c:	mov    esp,cs
   14002827e:	(bad)  
   14002827f:	ret    
   140028280:	xchg   esp,eax
   140028281:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028282:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140028283:	mov    al,0x47
   140028285:	cli    
   140028286:	rex.X mov WORD PTR [rbp+0x61],?
   14002828a:	xor    ebp,DWORD PTR [rdi]
   14002828c:	jno    0x14002824e
   14002828e:	sahf   
   14002828f:	(bad)  
   140028291:	retf   0x4106
   140028294:	sub    ah,BYTE PTR [rdx]
   140028296:	xor    BYTE PTR [rcx],al
   140028298:	ret    0xcca4
   14002829b:	jbe    0x1400282fb
   14002829d:	(bad)  
   14002829e:	stos   BYTE PTR es:[rdi],al
   14002829f:	sti    
   1400282a0:	xor    al,BYTE PTR [rdi]
   1400282a2:	sbb    ch,BYTE PTR [rdi-0x1e]
   1400282a5:	lock int3 
   1400282a7:	mov    ebp,0x2b7bdf1c
   1400282ac:	(bad)  
   1400282ad:	(bad)  
   1400282ae:	int3   
   1400282af:	xor    DWORD PTR [rdi-0x16],edi
   1400282b2:	or     cl,dh
   1400282b4:	shr    edi,1
   1400282b6:	movabs eax,ds:0x38e6801cf6a2f7a6
   1400282bf:	test   al,0x72
   1400282c1:	data16 (bad) 
   1400282c3:	(bad)  
   1400282c4:	(bad)  
   1400282c5:	stc    
   1400282c6:	pop    rsp
   1400282c7:	cmp    DWORD PTR [rbx+0x143e2aba],0xb4e3abef
   1400282d1:	cs ds pop rcx
   1400282d4:	jae    0x14002831b
   1400282d6:	and    al,BYTE PTR [rdi+rsi*1-0x5c16d097]
   1400282dd:	add    BYTE PTR [rax],al
   1400282df:	and    BYTE PTR [rax],al
   1400282e1:	rex.WB
   1400282e2:	rex.R
   1400282e3:	push   r12
   1400282e5:	imul   ebp,DWORD PTR [rsi+0x630972e2],0x38b2a593
   1400282ef:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400282f0:	sub    eax,0x705b5205
   1400282f5:	hlt    
   1400282f6:	mov    bl,0x1d
   1400282f8:	ins    BYTE PTR es:[rdi],dx
   1400282f9:	retf   
   1400282fa:	(bad)  
   1400282fb:	cmp    ch,dl
   1400282fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400282fe:	mov    ebp,0xb430388c
   140028303:	jrcxz  0x1400282f9
   140028305:	xchg   edx,eax
   140028306:	xchg   esp,esp
   140028308:	mov    ch,0xe6
   14002830a:	add    edi,DWORD PTR [rax+0x18107cef]
   140028310:	data16 xor BYTE PTR [rax],bl
   140028313:	sub    al,BYTE PTR [rax]
   140028315:	mov    eax,0x8dbecc9c
   14002831a:	xchg   esp,eax
   14002831b:	fwait
   14002831c:	pop    rdx
   14002831d:	jge    0x140028341
   14002831f:	stos   DWORD PTR es:[rdi],eax
   140028320:	cld    
   140028321:	(bad)  
   140028322:	jg     0x140028353
   140028324:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   140028326:	fwait
   140028327:	jle    0x1400282c4
   140028329:	(bad)
   14002832d:	ins    DWORD PTR es:[rdi],dx
   14002832e:	enter  0xde67,0x22
   140028332:	mov    WORD PTR [rbx-0x3],fs
   140028335:	or     eax,0xcd8fce0
   14002833a:	and    eax,DWORD PTR [rdx-0x2c88dc7e]
   140028340:	jp     0x14002831d
   140028342:	lods   eax,DWORD PTR ds:[rsi]
   140028343:	ss (bad) 
   140028345:	pop    rsi
   140028346:	pop    rsi
   140028347:	and    BYTE PTR [rax+0x38],bl
   14002834a:	ret    
   14002834b:	sti    
   14002834c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002834d:	mov    ?,WORD PTR [rax-0x9]
   140028350:	movabs eax,ds:0xda7101d02d454ce3
   140028359:	int3   
   14002835a:	fld    TBYTE PTR [rdi]
   14002835c:	ret    
   14002835d:	jl     0x140028304
   14002835f:	xchg   ecx,eax
   140028360:	pop    rbp
   140028361:	cli    
   140028362:	(bad)  
   140028363:	(bad)  
   140028364:	and    cl,dh
   140028366:	es call 0x15ca404cc
   14002836c:	(bad)  
   14002836d:	popf   
   14002836e:	fldz   
   140028370:	pushf  
   140028371:	jns    0x1400282fd
   140028373:	leave  
   140028374:	rex.W jbe 0x1400283ea
   140028377:	rex.W sub al,0x23
   14002837a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002837b:	rex.WB cqo 
   14002837d:	pop    rax
   14002837e:	jle    0x14002831e
   140028380:	rex.RX sti 
   140028382:	sti    
   140028383:	in     al,dx
   140028384:	cdq    
   140028385:	jl     0x1400283a2
   140028387:	xlat   BYTE PTR ds:[rbx]
   140028388:	sbb    al,0x7e
   14002838a:	(bad)  
   14002838b:	rex.RXB idiv DWORD PTR [r14+0x7eafa39b]
   140028392:	xchg   edi,eax
   140028393:	or     esp,edi
   140028395:	rex.WRX (bad) 
   140028397:	push   rsi
   140028398:	pop    rdx
   140028399:	test   al,0x3d
   14002839b:	xlat   BYTE PTR ds:[rbx]
   14002839c:	and    BYTE PTR [rsi+0xd442f7],ah
   1400283a2:	(bad)  
   1400283a3:	add    esi,DWORD PTR [rax+0x37786f0c]
   1400283a9:	sbb    eax,0xc359ddcf
   1400283ae:	sub    eax,0x6bdfbbe8
   1400283b3:	lock or DWORD PTR [rsi-0x3f8dde9f],ebx
   1400283ba:	test   eax,0x56142f50
   1400283bf:	xchg   ebp,eax
   1400283c0:	ja     0x14002836a
   1400283c2:	cmp    esi,DWORD PTR [rbp-0x4b]
   1400283c5:	(bad)  
   1400283c6:	mov    ecx,ebp
   1400283c8:	and    bl,BYTE PTR [rbp+0x4b]
   1400283cb:	xchg   ecx,eax
   1400283cc:	(bad)  
   1400283cd:	sub    edx,edi
   1400283cf:	jp     0x140028444
   1400283d1:	(bad)  
   1400283d2:	xchg   BYTE PTR [rcx-0x7a],cl
   1400283d5:	or     al,BYTE PTR [rax]
   1400283d7:	loopne 0x1400283cb
   1400283d9:	cld    
   1400283da:	push   QWORD PTR [rbp+0x74d702b2]
   1400283e0:	adc    eax,0x4706bfbc
   1400283e5:	repnz cwde 
   1400283e7:	mov    esp,0x95deb973
   1400283ec:	sub    edx,DWORD PTR [rbx+rsi*4-0x4c317a9a]
   1400283f3:	repnz xor al,0x85
   1400283f6:	or     al,BYTE PTR ss:[rbx+0x202a3694]
   1400283fd:	test   DWORD PTR [rbp-0x3cf5e4da],ebx
   140028403:	fcomp  QWORD PTR [rcx+0x395fc716]
   140028409:	iret   
   14002840a:	pop    rbx
   14002840b:	int3   
   14002840c:	push   rcx
   14002840d:	(bad)  
   14002840e:	mov    esp,0x30de15fe
   140028413:	mov    esi,0x3d120600
   140028418:	imul   eax,DWORD PTR [rdi-0x3f],0x58c6093c
   14002841f:	cmp    ebx,esi
   140028421:	and    edx,DWORD PTR [rdx]
   140028423:	rex.RB mov r14d,0x73635d
   140028429:	rex.WX xchg rbp,rax
   14002842b:	(bad)  
   14002842c:	jg     0x1400283de
   14002842e:	int3   
   14002842f:	mov    bh,0xe5
   140028431:	and    BYTE PTR [rdx+0x59],ah
   140028434:	jb     0x1400283c7
   140028436:	fist   DWORD PTR [rcx]
   140028438:	mov    esi,0x42ab5ac2
   14002843d:	movabs ds:0x3fcea663a9026ad0,eax
   140028446:	movsxd rsp,r13d
   140028449:	sub    bl,dl
   14002844b:	xlat   BYTE PTR ds:[rbx]
   14002844c:	mov    esp,0xbeb7a98f
   140028451:	mov    edx,DWORD PTR [rdi-0x72]
   140028454:	rex.WRB jae 0x140028451
   140028457:	(bad)  
   140028458:	(bad)  
   140028459:	rex.W jnp 0x1400284b9
   14002845c:	(bad)  
   14002845d:	outs   dx,BYTE PTR ds:[rsi]
   14002845e:	sbb    esi,DWORD PTR [rcx]
   140028460:	mov    bl,0x1f
   140028462:	es data16 stos BYTE PTR es:[rdi],al
   140028466:	cld    
   140028467:	sbb    cl,BYTE PTR [rdi+rdi*4-0x5a]
   14002846b:	adc    eax,0xe1953919
   140028470:	mov    ebx,0x2f9f40b8
   140028475:	lock mov bh,0x1b
   140028478:	outs   dx,DWORD PTR ds:[rsi]
   140028479:	mov    ebx,0xb5ecdfee
   14002847e:	in     al,0x3d
   140028480:	mov    ebp,0x3dc5adbe
   140028485:	sub    ah,bl
   140028487:	movabs eax,ds:0x72ff3c6a96ad002a
   140028490:	gs pop rax
   140028492:	xchg   ebp,eax
   140028493:	(bad)  
   140028494:	xchg   BYTE PTR [rax],dl
   140028496:	add    BYTE PTR [rax-0x1d],ah
   140028499:	por    mm1,QWORD PTR [rdx-0x34]
   14002849d:	jg     0x14002844f
   14002849f:	rex.R sahf 
   1400284a1:	sub    dl,al
   1400284a3:	js     0x14002851e
   1400284a5:	(bad)  
   1400284a6:	xchg   ebx,eax
   1400284a7:	inc    bl
   1400284a9:	mov    dh,0x4a
   1400284ab:	call   0x18d83c3b8
   1400284b0:	rex.WRB push r13
   1400284b2:	add    ecx,0x58f676a4
   1400284b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400284b9:	and    al,0x91
   1400284bb:	mov    dl,0xd5
   1400284bd:	rex.X movabs eax,fs:0xf0adaff33cf47539
   1400284c8:	rcl    ah,1
   1400284ca:	retf   
   1400284cb:	mov    esp,0x346bcf67
   1400284d0:	push   rbp
   1400284d1:	(bad)  
   1400284d2:	ss mov bl,0xe8
   1400284d5:	jl     0x140028499
   1400284d7:	mov    ?,WORD PTR [rip+0x182d6e49]        # 0x1582ff326
   1400284dd:	and    BYTE PTR [rdi+0x48d18f6f],bl
   1400284e3:	movabs ds:0x55a9d180d234631,eax
   1400284ec:	xor    al,0xf9
   1400284ee:	add    dh,BYTE PTR [rbp+rax*1-0x7ed187d0]
   1400284f5:	jrcxz  0x1400284fe
   1400284f7:	pushf  
   1400284f8:	rex.WRB loopne 0x14002847b
   1400284fb:	leave  
   1400284fc:	xchg   DWORD PTR [rax],edi
   1400284fe:	rex.WRXB retf 
   140028500:	mov    ah,0xa8
   140028502:	movabs eax,ds:0xdfc4e7b3cc904855
   14002850b:	push   rdx
   14002850c:	fwait
   14002850d:	cmp    eax,0x7e9be4ce
   140028512:	mov    WORD PTR [rdi+0x26],ss
   140028515:	es cmp dl,dh
   140028518:	cld    
   140028519:	push   rbx
   14002851a:	and    al,0xe7
   14002851c:	rex.WRX adc BYTE PTR [rsi-0x25],r14b
   140028520:	mov    BYTE PTR [rsi+rax*4],ah
   140028523:	cdq    
   140028524:	mov    ebp,0xe35ca2a0
   140028529:	mov    esp,0x4bd7d721
   14002852e:	pop    rdi
   14002852f:	stc    
   140028530:	pushf  
   140028531:	adc    eax,0xe4ed5665
   140028536:	xchg   bh,dh
   140028538:	(bad)  
   140028539:	fist   DWORD PTR [rdi+0x3d]
   14002853c:	(bad)  
   14002853d:	pop    rdi
   14002853e:	mov    cl,0xd7
   140028540:	fisubr DWORD PTR [rdi+0x78]
   140028543:	xchg   ebp,eax
   140028544:	icebp  
   140028545:	cmc    
   140028546:	nop
   140028547:	movabs eax,ds:0xd1b03ed8a2b8002
   140028550:	cmc    
   140028551:	cmp    BYTE PTR [rdi-0x3d6fb7a5],bl
   140028557:	xchg   edx,eax
   140028558:	push   rdx
   140028559:	add    eax,0x2d2986c9
   14002855e:	(bad)  
   14002855f:	cmp    al,0x7c
   140028561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   140028563:	hlt    
   140028564:	ficom  DWORD PTR [rcx]
   140028566:	(bad)  
   140028567:	push   rdx
   140028568:	(bad)  
   140028569:	pop    rdx
   14002856a:	in     al,0xaa
   14002856c:	loope  0x140028576
   14002856e:	sbb    ah,BYTE PTR [rcx-0x40]
   140028571:	js     0x140028550
   140028573:	(bad)  
   140028574:	(bad)  
   140028576:	jg     0x140028531
   140028578:	rex.RB jb 0x140028571
   14002857b:	cmp    al,0x1f
   14002857d:	ds lock cmp eax,0x89389f6e
   140028584:	rcr    BYTE PTR [rdx-0x59ce585c],1
   14002858a:	push   rbx
   14002858b:	mov    edx,0xd946001b
   140028590:	fnstenv [rdi+0x42]
   140028593:	pop    rax
   140028594:	and    eax,0x2064da43
   140028599:	out    0xa,eax
   14002859b:	cmp    BYTE PTR [rsi],bl
   14002859d:	(bad)  
   14002859e:	mov    BYTE PTR fs:[rbx+rax*1],ch
   1400285a2:	xchg   ebx,eax
   1400285a3:	(bad)  
   1400285a4:	rex.WR push 0xffffffffffffffad
   1400285a7:	xchg   ebx,eax
   1400285a8:	sub    al,0x7
   1400285aa:	add    al,0x6d
   1400285ac:	xchg   ebx,eax
   1400285ad:	push   0xffffffffffffffac
   1400285af:	shl    bh,cl
   1400285b1:	sbb    DWORD PTR [rsi-0xaabf7c2],eax
   1400285b7:	(bad)  
   1400285b8:	xchg   esp,eax
   1400285b9:	and    ebp,DWORD PTR [rdi+0x26]
   1400285bc:	push   0x8
   1400285be:	xchg   ebx,eax
   1400285bf:	xor    bh,BYTE PTR [rsi]
   1400285c1:	div    DWORD PTR [rip+0xffffffffd02f10de]        # 0x1103196a5
   1400285c7:	cmp    ah,bh
   1400285c9:	adc    ecx,DWORD PTR [rbp+rsi*1-0x58461811]
   1400285d0:	inc    DWORD PTR [rcx-0x4ac31d12]
   1400285d6:	sub    al,0xc1
   1400285d8:	and    al,0x9
   1400285da:	jb     0x1400285cb
   1400285dc:	add    DWORD PTR [rax+rbx*2-0x55],ecx
   1400285e0:	xor    al,0xe6
   1400285e2:	or     esp,0x42a00e2a
   1400285e8:	adc    al,0xf6
   1400285ea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400285eb:	cs (bad) 
   1400285ed:	cmp    ecx,DWORD PTR [rip+0x1f16227c]        # 0x15f18a86f
   1400285f3:	cmp    al,0xab
   1400285f5:	movabs eax,ds:0xc6ccd7db34af8ef
   1400285fe:	adc    BYTE PTR [rsi],dh
   140028600:	xor    cl,BYTE PTR [rdx-0x3f594b91]
   140028606:	xor    cl,cl
   140028608:	rol    BYTE PTR [rcx],1
   14002860a:	shl    BYTE PTR [rbp+0x5b97fc30],0x41
   140028611:	mov    dh,0x20
   140028613:	repnz cli 
   140028615:	rex.RX sbb r12d,DWORD PTR [rdi-0x6a682908]
   14002861c:	in     al,0x4a
   14002861e:	(bad)  
   14002861f:	ins    BYTE PTR es:[rdi],dx
   140028620:	cmp    DWORD PTR [rsi],ebp
   140028622:	sub    DWORD PTR [rip+0x2d43181],esp        # 0x142d6b7a9
   140028628:	(bad)
   14002862b:	retf   0x1b1a
   14002862e:	rex.WRB (bad) 
   140028630:	mov    WORD PTR [rbp+0x7b9e45e5],fs
   140028636:	(bad)  
   140028637:	or     al,0xfa
   140028639:	int3   
   14002863a:	jno    0x1400286ba
   14002863c:	jmp    0x1337bcddb
   140028641:	shl    BYTE PTR [rcx],cl
   140028643:	loop   0x1400285fe
   140028645:	adc    al,0x9d
   140028647:	jmp    0x177f10aae
   14002864c:	outs   dx,BYTE PTR ds:[rsi]
   14002864d:	mov    ebp,0xd8420779
   140028652:	pop    rcx
   140028653:	ja     0x1400285ff
   140028655:	add    DWORD PTR [rdx],esi
   140028657:	rex.X add al,0x35
   14002865a:	or     BYTE PTR [rbx],bl
   14002865c:	mov    ecx,0xb0875e2f
   140028661:	or     DWORD PTR [rax],0xd69a20eb
   140028667:	sbb    cl,BYTE PTR [rax]
   140028669:	xor    bh,bl
   14002866b:	(bad)  
   14002866c:	retf   
   14002866d:	adc    BYTE PTR [rdx],bh
   14002866f:	int    0x41
   140028671:	rex or ecx,0x73
   140028675:	(bad)  
   140028676:	cld    
   140028677:	adc    ebx,ebx
   140028679:	xchg   esp,eax
   14002867a:	lods   al,BYTE PTR ds:[rsi]
   14002867b:	(bad)  
   14002867c:	xchg   edi,eax
   14002867d:	(bad)  
   14002867e:	addr32 mov edi,0xbb697612
   140028684:	(bad)  
   140028686:	mov    ebx,DWORD PTR [rax+rcx*2]
   140028689:	(bad)  
   14002868a:	xor    esi,DWORD PTR [rbp+0x750a7f1b]
   140028690:	out    0xf,eax
   140028692:	repnz in eax,dx
   140028694:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028695:	mov    edi,0x225adc42
   14002869a:	xor    rcx,QWORD PTR [rcx+rcx*2+0x821ff61]
   1400286a2:	jmp    0x140028639
   1400286a4:	sar    BYTE PTR [rdi],cl
   1400286a6:	out    dx,al
   1400286a7:	ds add ebp,edx
   1400286aa:	stc    
   1400286ab:	add    eax,0x5dc040ab
   1400286b0:	mov    DWORD PTR [rax+0x41dfdde3],0xd525af5f
   1400286ba:	push   rbx
   1400286bb:	in     al,0x1f
   1400286bd:	mov    ah,0xd6
   1400286bf:	std    
   1400286c0:	fs loope 0x140028728
   1400286c3:	pop    rax
   1400286c4:	xchg   DWORD PTR [rbx+0x71],ebp
   1400286c7:	add    BYTE PTR [rbx+0xc8b0f3e],al
   1400286cd:	adc    eax,0x36446c00
   1400286d2:	cmp    dh,bl
   1400286d4:	outs   dx,DWORD PTR ds:[rsi]
   1400286d5:	pop    rbp
   1400286d6:	leave  
   1400286d7:	std    
   1400286d8:	div    edx
   1400286da:	or     DWORD PTR gs:[rip+0x533bda37],edi        # 0x1933e6118
   1400286e1:	fist   WORD PTR [rip+0x16c210f2]        # 0x156c497d9
   1400286e7:	sti    
   1400286e8:	call   0x174dfa093
   1400286ed:	out    0xd4,al
   1400286ef:	repnz adc dh,bl
   1400286f2:	lods   eax,DWORD PTR ds:[rsi]
   1400286f3:	adc    eax,0xac99a362
   1400286f8:	rcl    ecx,0x6f
   1400286fb:	popf   
   1400286fc:	movabs eax,ds:0x732f86e37e55fa71
   140028705:	push   rbx
   140028706:	xor    al,BYTE PTR [rdi+0x2f]
   140028709:	xchg   esi,eax
   14002870a:	ss rex.X loopne 0x140028767
   14002870e:	adc    ah,BYTE PTR [rbp-0x31]
   140028711:	jne    0x140028706
   140028713:	jmp    0x140028772
   140028715:	mov    cl,0x11
   140028717:	or     esi,DWORD PTR [rdx]
   140028719:	xchg   BYTE PTR [rbp-0x46cfca24],dl
   14002871f:	out    0x91,eax
   140028721:	pop    rbx
   140028722:	(bad)  
   140028723:	test   BYTE PTR [r8+0x35],dl
   140028727:	or     BYTE PTR [rbx+0x340cfa88],bl
   14002872d:	data16 adc BYTE PTR [rcx+0x3],ah
   140028731:	(bad)  
   140028732:	or     BYTE PTR [rbx+rax*1+0x61],al
   140028736:	xrelease xchg BYTE PTR [rcx+0x67],al
   14002873a:	stc    
   14002873b:	sub    esi,DWORD PTR [rcx-0x5a525f60]
   140028741:	(bad)  
   140028742:	(bad)  
   140028743:	and    ebp,ecx
   140028745:	adc    BYTE PTR [rdx-0x455e57d4],dl
   14002874b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002874c:	cwde   
   14002874d:	jge    0x140028748
   14002874f:	(bad)  
   140028750:	jno    0x14002873d
   140028752:	sbb    edi,DWORD PTR [rdi+0x6]
   140028755:	jne    0x140028726
   140028757:	jnp    0x1400287d2
   140028759:	neg    BYTE PTR [rbx]
   14002875b:	rex.WRXB rcr BYTE PTR [r11+0x69],1
   14002875f:	movabs eax,ds:0x8843fee53cb49ece
   140028768:	test   al,0x8e
   14002876a:	xor    DWORD PTR [rdx+0x66f5653e],0x4c
   140028771:	scas   al,BYTE PTR es:[rdi]
   140028772:	test   eax,0xe25b85c4
   140028777:	cmp    BYTE PTR [rip+0xffffffff8fdfee06],cl        # 0xcfe27583
   14002877d:	add    ebp,DWORD PTR [rbx+0x34]
   140028780:	rol    BYTE PTR ss:[rdx],0x18
   140028784:	mov    ah,0xe7
   140028786:	pop    rdx
   140028787:	sub    al,0xff
   140028789:	and    BYTE PTR [rbx],ch
   14002878b:	mov    cl,0x1a
   14002878d:	add    eax,ebx
   14002878f:	rex.WRB mov r10b,0xab
   140028792:	add    BYTE PTR [rax+0x53],ah
   140028795:	xchg   esp,eax
   140028796:	(bad)  
   140028797:	mov    esp,0x15ac451
   14002879c:	ss (bad) 
   14002879e:	fsubrp st(4),st
   1400287a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400287a1:	mov    esi,0xb12a8a9d
   1400287a6:	cmp    ch,BYTE PTR [rax-0x11c69973]
   1400287ac:	ror    DWORD PTR [rbp+0x13],1
   1400287af:	xchg   esi,eax
   1400287b0:	loop   0x140028736
   1400287b2:	push   rdi
   1400287b3:	(bad)  
   1400287b4:	cs jo  0x140028829
   1400287b7:	(bad)  
   1400287b8:	mov    DWORD PTR [rdi+riz*2+0x28],eax
   1400287bc:	movsxd edi,DWORD PTR [rax]
   1400287be:	repnz lods eax,DWORD PTR ds:[rsi]
   1400287c0:	gs (bad) 
   1400287c2:	cs sbb al,0xe3
   1400287c5:	jg     0x140028786
   1400287c7:	jmp    0xdf5b6417
   1400287cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400287cd:	stos   DWORD PTR es:[rdi],eax
   1400287ce:	ret    
   1400287cf:	cld    
   1400287d0:	ret    0x6bf2
   1400287d3:	xor    ebx,eax
   1400287d5:	je     0x140028838
   1400287d7:	push   rbx
   1400287d8:	xchg   esi,eax
   1400287d9:	(bad)  
   1400287db:	retf   
   1400287dc:	cmp    dh,BYTE PTR [rbp+rdx*4+0x75]
   1400287e0:	fsub   st(7),st
   1400287e2:	xchg   r14d,eax
   1400287e4:	cmp    al,0x44
   1400287e6:	(bad)  
   1400287e7:	rex.XB sbb spl,BYTE PTR [r11+0x4c]
   1400287eb:	sub    esi,DWORD PTR [rdi-0x79a67048]
   1400287f1:	pop    rsi
   1400287f2:	xor    eax,0x44598d10
   1400287f7:	movsxd eax,DWORD PTR [rsi]
   1400287f9:	rcr    DWORD PTR [rax+0x2c26886],1
   1400287ff:	rex.X outs dx,BYTE PTR ds:[rsi]
   140028801:	or     DWORD PTR [rax+0x629d012c],ecx
   140028807:	mov    dl,0x14
   140028809:	add    DWORD PTR [rip+0x6fec6303],0x82f9dc2d        # 0x1afeeeb16
   140028813:	mov    al,0x17
   140028815:	sbb    BYTE PTR [rdx+0x64],al
   140028818:	test   DWORD PTR [rdx],0x39ff2fd3
   14002881e:	mov    bh,0xdc
   140028820:	repnz xrelease mov BYTE PTR [rbx-0x11],bh
   140028825:	out    0xd9,eax
   140028827:	scas   eax,DWORD PTR es:[rdi]
   140028828:	std    
   140028829:	cmp    eax,0xe112d6ed
   14002882e:	mov    ecx,0xda12d6e3
   140028833:	out    0x40,eax
   140028835:	movabs al,ds:0x8c4006143715ffc2
   14002883e:	mov    bh,0x7d
   140028840:	shl    BYTE PTR [rax],0x2f
   140028843:	stos   BYTE PTR es:[rdi],al
   140028844:	(bad)  
   140028845:	cmp    eax,0xc0dd65eb
   14002884a:	sahf   
   14002884b:	mov    eax,0x52fdf7c8
   140028850:	gs stc 
   140028852:	(bad)  
   140028853:	cmc    
   140028854:	movabs ds:0x6001e864ef8a6dd,eax
   14002885d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002885e:	movsxd ebx,DWORD PTR [rsi-0x17]
   140028861:	fsubr  QWORD PTR [rbx+rbx*4-0x31]
   140028865:	scas   eax,DWORD PTR es:[rdi]
   140028866:	xchg   ecx,eax
   140028867:	adc    al,dl
   140028869:	ror    BYTE PTR [rsi-0x35],0xd
   14002886d:	xchg   ebp,eax
   14002886e:	enter  0xf8eb,0xd9
   140028872:	or     al,0xbe
   140028874:	outs   dx,BYTE PTR ds:[rsi]
   140028875:	(bad)  
   140028876:	mov    dl,0x9c
   140028878:	hlt    
   140028879:	push   0x6e493127
   14002887e:	pop    rdx
   14002887f:	div    DWORD PTR [rdx+0x4088d00c]
   140028885:	adc    BYTE PTR [rip+0x6bdff319],ah        # 0x1abe27ba4
   14002888b:	xor    DWORD PTR [rip+0x6fc7c0bf],esi        # 0x1afca4950
   140028891:	jl     0x14002881f
   140028893:	sbb    ebp,edx
   140028895:	or     esi,DWORD PTR [rbx+rsi*4+0x8]
   140028899:	jb     0x1400288ea
   14002889b:	fiadd  WORD PTR [rax-0x1e4fd4b5]
   1400288a1:	rex.XB fistp WORD PTR [r10]
   1400288a4:	idiv   ch
   1400288a6:	out    0xbe,eax
   1400288a8:	jle    0x140028901
   1400288aa:	push   rsi
   1400288ab:	call   0x1ac14d4d9
   1400288b0:	or     eax,0x360ee340
   1400288b5:	(bad)  
   1400288b6:	xchg   edx,eax
   1400288b7:	ss hlt 
   1400288b9:	xchg   esi,eax
   1400288ba:	xor    BYTE PTR [rbx+0x475042af],cl
   1400288c0:	test   BYTE PTR [rbx-0x78],ah
   1400288c3:	(bad)  
   1400288c4:	pop    rsi
   1400288c5:	cwde   
   1400288c6:	mov    eax,0x809b5106
   1400288cb:	mov    al,0x91
   1400288cd:	lahf   
   1400288ce:	cmp    eax,DWORD PTR [rbp+0x431d0134]
   1400288d4:	xchg   esi,eax
   1400288d5:	pop    rcx
   1400288d6:	retf   
   1400288d7:	sub    BYTE PTR [rax+riz*8+0x101e30eb],0xc8
   1400288df:	adc    BYTE PTR [rdx-0xb43b375],bh
   1400288e5:	(bad)  
   1400288e6:	fdivr  QWORD PTR [rbx+rdi*8+0x2f]
   1400288ea:	xchg   ecx,eax
   1400288eb:	fdiv   QWORD PTR [rcx+0x2f]
   1400288ee:	(bad)  
   1400288f0:	(bad)  
   1400288f1:	movsxd eax,esp
   1400288f3:	popf   
   1400288f4:	ss mov ch,0xb9
   1400288f7:	xchg   ebx,eax
   1400288f8:	or     BYTE PTR [rcx],ah
   1400288fa:	(bad)  
   1400288fb:	fild   WORD PTR [rcx]
   1400288fd:	rex.R push rax
   1400288ff:	div    DWORD PTR [rdx]
   140028901:	repz rex.WX rol rdx,cl
   140028905:	mov    eax,0xa6ab224a
   14002890a:	sbb    al,0xbb
   14002890c:	std    
   14002890d:	stos   BYTE PTR es:[rdi],al
   14002890e:	scas   al,BYTE PTR es:[rdi]
   14002890f:	rex.X in eax,0x99
   140028912:	mov    eax,0x530125ad
   140028917:	(bad)  
   140028918:	jrcxz  0x14002897b
   14002891a:	rex.RXB cdq 
   14002891c:	sub    ch,ah
   14002891e:	(bad)  
   14002891f:	jns    0x140028906
   140028921:	mov    dl,0xde
   140028923:	mov    esp,0x870661ff
   140028928:	movabs eax,ds:0x587dd7b0f2758005
   140028931:	sbb    ebp,DWORD PTR [rbx+0x1c]
   140028934:	add    ah,BYTE PTR [rip+0x469287a8]        # 0x1869510e2
   14002893a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002893b:	test   al,0x5
   14002893d:	xchg   edx,eax
   14002893e:	(bad)  
   14002893f:	xchg   edx,eax
   140028940:	fs push 0x52cc715a
   140028946:	scas   eax,DWORD PTR es:[rdi]
   140028947:	rex.WXB (bad) 
   140028949:	rex.WXB
   14002894a:	rex.W
   14002894b:	repz xor BYTE PTR [rax+0x42bc0ec0],bl
   140028952:	sbb    edx,DWORD PTR [rax+0x10]
   140028955:	test   eax,0x752f3394
   14002895a:	xor    BYTE PTR [rdi],ah
   14002895c:	pop    rbx
   14002895d:	jl     0x14002895b
   14002895f:	or     eax,0xf8fb728f
   140028964:	icebp  
   140028965:	pop    rsp
   140028966:	stc    
   140028967:	sub    ebp,edi
   140028969:	push   rax
   14002896a:	(bad)  
   14002896b:	(bad)  
   14002896d:	adc    BYTE PTR [rax+0x4c],0x12
   140028971:	xor    al,0xba
   140028973:	rcl    BYTE PTR [rbx],1
   140028975:	jrcxz  0x14002898b
   140028977:	cmp    eax,0x62add3b7
   14002897c:	cmp    dl,BYTE PTR [rax]
   14002897e:	sub    BYTE PTR [rcx-0x324f8060],al
   140028984:	mov    ch,0x41
   140028986:	(bad)  
   140028987:	jbe    0x140028948
   140028989:	xor    al,0x86
   14002898b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002898c:	mov    ebx,DWORD PTR [rsi-0x67]
   14002898f:	rex.RXB int3 
   140028991:	mov    edi,0x60cc6884
   140028996:	es scas al,BYTE PTR es:[rdi]
   140028998:	mov    ds,WORD PTR [r13-0x7d]
   14002899c:	test   eax,0x26a2204f
   1400289a1:	cwde   
   1400289a2:	cmp    ah,BYTE PTR [rcx+rcx*1+0x59318b32]
   1400289a9:	or     al,0x59
   1400289ab:	(bad)  
   1400289ac:	rex.RXB adc al,0x5c
   1400289af:	fwait
   1400289b0:	in     al,0x7e
   1400289b2:	rex.WRXB test BYTE PTR [r10+0x39],r11b
   1400289b6:	(bad)
   1400289b9:	call   FWORD PTR [rdi+0x6e]
   1400289bc:	jg     0x1400289b9
   1400289be:	(bad)  
   1400289bf:	call   0x13e616d80
   1400289c4:	icebp  
   1400289c5:	leave  
   1400289c6:	(bad)  
   1400289c7:	mov    BYTE PTR [rbx+0x69c2d46d],bh
   1400289cd:	and    BYTE PTR fs:[rcx+0x33],dl
   1400289d1:	(bad)  
   1400289d2:	and    BYTE PTR [rcx+riz*1-0x1bbc2f06],ch
   1400289d9:	and    al,0xaa
   1400289db:	lock xor al,0xd9
   1400289de:	idiv   DWORD PTR [rbx]
   1400289e0:	stos   BYTE PTR es:[rdi],al
   1400289e1:	es ret 
   1400289e3:	sbb    cl,bh
   1400289e5:	lods   eax,DWORD PTR ds:[rsi]
   1400289e6:	rex.WRXB movabs r9,0xe18e550beba024ab
   1400289f0:	repnz xchg ebp,eax
   1400289f2:	repz push 0xffffffffffffffb0
   1400289f5:	add    al,0x86
   1400289f7:	(bad)  
   1400289f8:	add    dh,dl
   1400289fa:	jnp    0x140028a0c
   1400289fc:	push   rdi
   1400289fd:	push   0x1
   1400289ff:	rex.R add DWORD PTR [rdx+0x63f7b2c8],0x70928851
   140028a0a:	and    esi,ebp
   140028a0c:	jb     0x1400289af
   140028a0e:	xlat   BYTE PTR ds:[rbx]
   140028a0f:	movabs eax,ds:0x741492b05979269b
   140028a18:	xor    al,0x9a
   140028a1a:	xchg   esp,eax
   140028a1b:	xchg   BYTE PTR [rax],dh
   140028a1d:	shr    BYTE PTR [rsp+rcx*8-0x4082970b],1
   140028a24:	retf   
   140028a25:	mov    edi,0xbc6be6ba
   140028a2a:	jnp    0x140028a16
   140028a2c:	push   rbp
   140028a2d:	xchg   edx,eax
   140028a2e:	sub    al,0x2f
   140028a30:	add    esi,ebp
   140028a32:	mov    BYTE PTR [rbp+0x67],0xe1
   140028a36:	(bad)  
   140028a37:	jle    0x1400289e0
   140028a39:	mov    al,0xa6
   140028a3b:	jns    0x140028a0f
   140028a3d:	mov    cl,0x55
   140028a3f:	jo     0x140028aa5
   140028a41:	test   BYTE PTR [rax+0xa],dl
   140028a44:	rex.R add al,0x61
   140028a47:	add    al,0x8
   140028a49:	rcr    BYTE PTR [rcx+0x19],1
   140028a4c:	cli    
   140028a4d:	add    esi,edx
   140028a4f:	cld    
   140028a50:	pop    rsi
   140028a51:	pop    rsp
   140028a52:	enter  0x88b0,0xb2
   140028a56:	push   rbp
   140028a57:	cmp    bh,BYTE PTR [rax+rdx*1-0x32d57bee]
   140028a5e:	sti    
   140028a5f:	idiv   BYTE PTR [rsi+riz*2]
   140028a62:	mov    gs,WORD PTR gs:[rsp+rdi*1]
   140028a66:	(bad)  
   140028a67:	ins    BYTE PTR es:[rdi],dx
   140028a68:	out    dx,al
   140028a69:	ror    DWORD PTR [rsi+rbx*1+0x42],0x34
   140028a6e:	mul    DWORD PTR [rdx]
   140028a70:	movabs ds:0xf4418d221aa8c31,al
   140028a79:	je     0x140028a07
   140028a7b:	ror    esi,1
   140028a7d:	sub    dh,al
   140028a7f:	js     0x140028a44
   140028a81:	movabs al,ds:0x92fe97f1857c5889
   140028a8a:	ja     0x140028a68
   140028a8c:	cli    
   140028a8d:	(bad)  
   140028a8f:	pop    rdx
   140028a90:	mov    esp,0x7ddf238d
   140028a95:	(bad)  
   140028a96:	fisubr DWORD PTR [rbx]
   140028a98:	fs repz addr32 in al,dx
   140028a9c:	or     al,0xc3
   140028a9e:	test   eax,0xa40220bd
   140028aa3:	out    0x3b,eax
   140028aa5:	mov    ebx,0xf39946aa
   140028aaa:	jae    0x140028b08
   140028aac:	rex.R (bad) 
   140028aae:	cld    
   140028aaf:	ret    0x8507
   140028ab2:	add    DWORD PTR [rbx-0x74ff4771],ebp
   140028ab8:	repnz sbb BYTE PTR [rbx+0x797b37ea],dh
   140028abf:	sbb    ecx,esi
   140028ac1:	mov    edi,0xae5ca0da
   140028ac6:	jb     0x140028b37
   140028ac8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028ac9:	cmc    
   140028aca:	mov    ecx,0xb432dd
   140028acf:	xor    BYTE PTR [rax+0x36],cl
   140028ad2:	jmp    0x140028aba
   140028ad4:	xlat   BYTE PTR ds:[rbx]
   140028ad5:	rex.XB
   140028ad6:	rex.RB popf 
   140028ad8:	mov    BYTE PTR [rdx+0x20],bl
   140028adb:	cwde   
   140028adc:	outs   dx,DWORD PTR ds:[rsi]
   140028add:	scas   eax,DWORD PTR es:[rdi]
   140028ade:	and    bh,cl
   140028ae0:	imul   esp,DWORD PTR [rsi],0xffffffc7
   140028ae3:	rex.XB ins BYTE PTR es:[rdi],dx
   140028ae5:	movabs al,es:0x20c2140acfec12cb
   140028aef:	xchg   ebp,eax
   140028af0:	and    DWORD PTR [rsi-0x39],ebp
   140028af3:	pushf  
   140028af4:	jns    0x140028b17
   140028af6:	loope  0x140028b1f
   140028af8:	(bad)  
   140028af9:	mov    edi,0x7ff607c5
   140028afe:	sbb    ebp,DWORD PTR [rbp+0x4]
   140028b01:	cdq    
   140028b02:	jbe    0x140028b50
   140028b04:	fwait
   140028b05:	out    dx,eax
   140028b06:	out    0x93,eax
   140028b08:	jg     0x140028b20
   140028b0a:	nop
   140028b0b:	pop    rcx
   140028b0c:	gs movsxd esi,esi
   140028b0f:	es mov dl,0x99
   140028b12:	fwait
   140028b13:	xor    DWORD PTR [rcx-0x7d],esp
   140028b16:	push   rax
   140028b17:	ja     0x140028b2a
   140028b19:	retf   
   140028b1a:	xor    DWORD PTR [ebx],ebp
   140028b1d:	jae    0x140028b27
   140028b1f:	and    eax,0xa59e09ac
   140028b24:	cwde   
   140028b25:	mov    ah,0xb
   140028b27:	imul   edx,edi,0x5f3aec8e
   140028b2d:	and    eax,ecx
   140028b2f:	(bad)  
   140028b30:	(bad)  
   140028b31:	outs   dx,DWORD PTR ds:[rsi]
   140028b32:	fcomp  QWORD PTR [rdx+0x9]
   140028b35:	(bad)  
   140028b36:	ret    
   140028b37:	xchg   edi,eax
   140028b38:	adc    eax,DWORD PTR [rdi+0x575da46]
   140028b3e:	rex.WR rol BYTE PTR [rbx+0x2f],cl
   140028b42:	(bad)  
   140028b43:	rex.RXB pop r12
   140028b45:	cmp    BYTE PTR [rcx-0x59dd3397],al
   140028b4b:	(bad)  
   140028b4c:	ret    
   140028b4d:	(bad)
   140028b51:	adc    dl,BYTE PTR [rbx]
   140028b53:	(bad)  
   140028b54:	adc    cl,bh
   140028b56:	jns    0x140028ba4
   140028b58:	xchg   esi,eax
   140028b59:	(bad)  
   140028b5a:	rex.WRX adc QWORD PTR [rsi],r13
   140028b5d:	(bad)  
   140028b5e:	add    DWORD PTR [rcx],eax
   140028b60:	stos   BYTE PTR es:[rdi],al
   140028b61:	mov    ?,WORD PTR [rsi*8-0x515884dc]
   140028b68:	in     eax,0x8e
   140028b6a:	ja     0x140028b6a
   140028b6c:	or     BYTE PTR [rdi],dl
   140028b6e:	(bad)  
   140028b6f:	out    0x58,eax
   140028b71:	cmp    BYTE PTR [rbx-0x6e],dh
   140028b74:	(bad)  
   140028b75:	gs add eax,0x131670bd
   140028b7b:	(bad)  
   140028b7c:	adc    DWORD PTR [rbp-0x66edf3b7],ecx
   140028b82:	xlat   BYTE PTR ds:[rbx]
   140028b83:	rex.WXB jo 0x140028bc6
   140028b86:	(bad)  
   140028b87:	or     edi,DWORD PTR [rbp-0x2e5ebac9]
   140028b8d:	mov    ch,0x1f
   140028b8f:	push   0xffffffffb907d6f9
   140028b94:	and    DWORD PTR [rax-0x4f],0x64f10fa
   140028b9b:	pop    rcx
   140028b9c:	(bad)  
   140028b9d:	fwait
   140028b9e:	(bad)  
   140028b9f:	ret    
   140028ba0:	ins    BYTE PTR es:[rdi],dx
   140028ba1:	adc    eax,0xac00150c
   140028ba6:	ficomp DWORD PTR gs:[rdi-0x77]
   140028baa:	loop   0x140028bbb
   140028bac:	rex.WX jrcxz 0x140028bcb
   140028baf:	stos   DWORD PTR es:[rdi],eax
   140028bb0:	test   DWORD PTR [rsi+rsi*2],ebp
   140028bb3:	push   rdi
   140028bb4:	js     0x140028baf
   140028bb6:	in     al,0x2
   140028bb8:	pop    rcx
   140028bb9:	test   al,0xb9
   140028bbb:	stos   DWORD PTR es:[rdi],eax
   140028bbc:	jns    0x140028b4e
   140028bbe:	leave  
   140028bbf:	icebp  
   140028bc0:	leave  
   140028bc1:	jl     0x140028c24
   140028bc3:	(bad)  
   140028bc4:	xor    bl,BYTE PTR [rsi+0x2f]
   140028bc7:	sbb    al,0x59
   140028bc9:	(bad)  
   140028bca:	or     al,0x52
   140028bcc:	or     DWORD PTR [rdx+rbx*4+0x70],esi
   140028bd0:	hlt    
   140028bd1:	test   DWORD PTR [rsi],esi
   140028bd3:	mov    bh,0x75
   140028bd5:	(bad)  
   140028bd6:	repnz rcr DWORD PTR [rbx+0x464049be],1
   140028bdd:	(bad)  
   140028bde:	mov    edi,edx
   140028be0:	jl     0x140028c60
   140028be2:	(bad)  
   140028be3:	(bad)  
   140028be4:	pop    rbx
   140028be5:	rcl    BYTE PTR [rax+0x23b12c98],1
   140028beb:	sti    
   140028bec:	lods   eax,DWORD PTR ds:[rsi]
   140028bed:	(bad)  
   140028bee:	lea    edi,[rdx-0x29]
   140028bf1:	iret   
   140028bf2:	and    DWORD PTR [rdi],esp
   140028bf4:	outs   dx,DWORD PTR ds:[rsi]
   140028bf5:	add    al,0x61
   140028bf7:	push   rax
   140028bf8:	mov    edx,0x908fe707
   140028bfd:	popf   
   140028bfe:	js     0x140028c0a
   140028c00:	std    
   140028c01:	std    
   140028c02:	(bad)  
   140028c03:	(bad)  
   140028c04:	stc    
   140028c05:	xor    al,0xa2
   140028c07:	ss (bad) 
   140028c09:	rcr    DWORD PTR [rax+0x6e],1
   140028c0c:	(bad)  
   140028c0d:	ja     0x140028c2f
   140028c0f:	imul   esp,DWORD PTR [rcx-0x6e],0x5836e15e
   140028c16:	pop    rdi
   140028c17:	fcmovne st,st(5)
   140028c19:	add    cl,ah
   140028c1b:	pop    rcx
   140028c1c:	imul   ebp,ebp,0x0
   140028c1f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028c20:	or     al,0x82
   140028c22:	sbb    DWORD PTR [rbp+0x10],ebp
   140028c25:	xor    cl,ah
   140028c27:	rex.B
   140028c28:	rex.X movsxd edx,DWORD PTR [rsi-0xcd4cf19]
   140028c2f:	push   rax
   140028c30:	jg     0x140028c3f
   140028c32:	xor    esi,DWORD PTR [rbp+0x18]
   140028c35:	cmp    DWORD PTR [rbp+0x2d],esi
   140028c38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028c39:	ds add eax,0xdb488eaa
   140028c3f:	nop
   140028c40:	imul   ah
   140028c42:	xor    eax,0x344a1b6a
   140028c47:	xor    al,BYTE PTR [rax-0x18]
   140028c4a:	adc    BYTE PTR [rsi-0x6],bl
   140028c4d:	cmp    al,0xd7
   140028c4f:	rex.WRX (bad) 
   140028c52:	fucomi st,st(7)
   140028c54:	mov    eax,0xf97eaf8b
   140028c59:	adc    DWORD PTR [rdi+rbp*4+0x3],esi
   140028c5d:	lods   eax,DWORD PTR ds:[rsi]
   140028c5e:	or     edx,DWORD PTR [rax-0x65]
   140028c61:	ret    
   140028c62:	add    al,0x11
   140028c64:	test   BYTE PTR [rbp+0x52],dh
   140028c67:	jrcxz  0x140028c2f
   140028c69:	(bad)  
   140028c6a:	adc    DWORD PTR [rdx],0x76
   140028c6d:	popf   
   140028c6e:	rex.WR out 0x1e,eax
   140028c71:	movsxd rcx,DWORD PTR [rcx+0x58d5d2d5]
   140028c78:	lahf   
   140028c79:	add    al,0xcc
   140028c7b:	ja     0x140028ca7
   140028c7d:	(bad)  
   140028c7f:	shl    ch,0x15
   140028c82:	outs   dx,BYTE PTR ds:[rsi]
   140028c83:	rol    DWORD PTR [rax-0x4c01027d],cl
   140028c89:	pop    rcx
   140028c8a:	rex.WX movabs rbx,0x500054322c3a1b96
   140028c94:	int    0x3
   140028c96:	mov    eax,0xaf5fc55c
   140028c9b:	and    ecx,DWORD PTR [rax]
   140028c9d:	add    DWORD PTR [rdi+0x5a],esp
   140028ca0:	sub    eax,0x1af23e9e
   140028ca5:	or     ebx,DWORD PTR [rbp+0x3c3c6f0e]
   140028cab:	rex.WXB xchg r8,rax
   140028cad:	add    eax,DWORD PTR [edx]
   140028cb0:	xchg   esp,eax
   140028cb1:	adc    eax,0x664b1c80
   140028cb6:	repz add DWORD PTR [rdx+rdx*4-0x7a928564],edx
   140028cbe:	hlt    
   140028cbf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028cc0:	jns    0x140028d40
   140028cc2:	out    dx,al
   140028cc3:	loopne 0x140028c9c
   140028cc5:	fst    DWORD PTR [rbx]
   140028cc7:	sub    eax,0x9e9b4bd2
   140028ccc:	retf   
   140028ccd:	jmp    0x140028c60
   140028ccf:	ja     0x140028d4a
   140028cd1:	rex.WXB
   140028cd2:	rex.RX
   140028cd3:	addr32 nop
   140028cd5:	lods   al,BYTE PTR ds:[rsi]
   140028cd6:	rcr    BYTE PTR [rbx-0x2],0x19
   140028cda:	sar    ebp,0xff
   140028cdd:	sub    esp,DWORD PTR [rdx+0x6c]
   140028ce0:	adc    bl,BYTE PTR [rcx-0x3fed6be7]
   140028ce6:	cmp    BYTE PTR [rbp+rbp*8+0x377b5d41],cl
   140028ced:	fabs   
   140028cef:	mov    ebx,0x5ff3be48
   140028cf4:	xor    bh,al
   140028cf6:	mov    edi,0x44215081
   140028cfb:	jrcxz  0x140028c9d
   140028cfd:	push   0x10
   140028cff:	(bad)  
   140028d00:	xor    ch,bl
   140028d02:	(bad)  
   140028d03:	(bad)  
   140028d04:	sub    esi,DWORD PTR [rsi-0x5c]
   140028d07:	jbe    0x140028d48
   140028d09:	vpxor  xmm7,xmm8,XMMWORD PTR [rcx-0x62]
   140028d0e:	(bad)  
   140028d0f:	push   rbp
   140028d10:	js     0x140028d63
   140028d12:	pop    rsi
   140028d13:	rex.XB out dx,al
   140028d15:	(bad)  
   140028d16:	cmp    ecx,ebx
   140028d18:	rex.B add al,0x35
   140028d1b:	sbb    ecx,DWORD PTR [rcx]
   140028d1d:	call   0x10e7754be
   140028d22:	movabs ds:0xbf4c47afa6218f17,eax
   140028d2b:	add    DWORD PTR [rdx-0x1d],ebp
   140028d2e:	jmp    QWORD PTR ss:[rax]
   140028d31:	in     eax,dx
   140028d32:	fmul   DWORD PTR [rax+0x15dd6643]
   140028d38:	movabs ds:0xb9a7dcf90b5e886a,eax
   140028d41:	in     eax,dx
   140028d42:	ficomp WORD PTR [rdi-0x19]
   140028d45:	(bad)  
   140028d46:	int    0xb7
   140028d48:	repnz loop 0x140028d02
   140028d4b:	lahf   
   140028d4c:	es retf 0x5812
   140028d50:	pop    rdx
   140028d51:	add    BYTE PTR [rsi+0x3],0xa6
   140028d55:	mul    DWORD PTR [rbx]
   140028d57:	fs nop
   140028d59:	scas   eax,DWORD PTR es:[rdi]
   140028d5a:	cmp    BYTE PTR [rdi+rdx*4+0x72a0c34e],dl
   140028d61:	(bad)  
   140028d62:	ret    
   140028d63:	push   rsi
   140028d64:	sbb    edx,DWORD PTR [rsi]
   140028d66:	fisubr WORD PTR [rcx+riz*2-0x39]
   140028d6a:	(bad)  
   140028d6b:	cmp    bh,BYTE PTR [rdi-0x5d]
   140028d6e:	repnz (bad) 
   140028d71:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028d72:	idiv   DWORD PTR [rcx+0x4422fd01]
   140028d78:	jne    0x140028d6d
   140028d7a:	(bad)  
   140028d7b:	jge    0x140028d27
   140028d7d:	sub    edi,esp
   140028d7f:	pop    rsp
   140028d80:	imul   ecx,DWORD PTR [rsi-0x40],0xd670cb30
   140028d87:	xor    edx,esp
   140028d89:	repnz (bad) 
   140028d8b:	fcmovb st,st(5)
   140028d8d:	(bad)  
   140028d8e:	mov    eax,0x9fcf031b
   140028d93:	cmp    al,0xcd
   140028d95:	imul   ecx,DWORD PTR [rbx],0xfffffff3
   140028d98:	sub    BYTE PTR [rcx],cl
   140028d9a:	movabs eax,ds:0x9faf367d19f2c802
   140028da3:	loop   0x140028d62
   140028da5:	mov    edx,DWORD PTR [rsi]
   140028da7:	sbb    BYTE PTR [rsi+0x3c8e5ddb],dl
   140028dad:	jne    0x140028d4d
   140028daf:	xchg   esi,eax
   140028db1:	sahf   
   140028db2:	jrcxz  0x140028d82
   140028db4:	jmp    0xe8b5d610
   140028db9:	test   al,0x6a
   140028dbb:	jmp    0x140028d45
   140028dbd:	mov    al,0x42
   140028dbf:	stc    
   140028dc0:	xor    eax,0x87b48480
   140028dc5:	scas   al,BYTE PTR es:[rdi]
   140028dc6:	in     eax,dx
   140028dc7:	rex.B fdivp st(2),st
   140028dca:	xchg   ebx,eax
   140028dcb:	enter  0x49b1,0x68
   140028dcf:	mov    bh,0xad
   140028dd1:	jmp    0x11c368983
   140028dd6:	(bad)  
   140028dd7:	mov    ch,0x77
   140028dd9:	adc    DWORD PTR [rbp+0x7751d7f7],edi
   140028ddf:	dec    BYTE PTR [rbx+0x74]
   140028de2:	xor    al,0x81
   140028de4:	jmp    0xc2f96815
   140028de9:	xor    DWORD PTR [rbp+rdi*2+0x16],esp
   140028ded:	push   rcx
   140028dee:	iret   
   140028def:	movsxd edi,edi
   140028df1:	ret    0x3055
   140028df4:	je     0x140028dfb
   140028df6:	rex.R
   140028df7:	repz stc 
   140028df9:	jg     0x140028db4
   140028dfb:	gs push rax
   140028dfd:	(bad)  
   140028dfe:	adc    dh,al
   140028e00:	rex.RX add al,0xb
   140028e03:	cs xor edi,esi
   140028e06:	rex.WXB push r12
   140028e08:	or     eax,0x674c2321
   140028e0d:	or     DWORD PTR [rbp-0x6],edi
   140028e10:	cmp    esp,esi
   140028e12:	imul   ebx,DWORD PTR [rdi-0x39],0xffffffcc
   140028e16:	sbb    eax,0x4daae7b1
   140028e1b:	rol    BYTE PTR [r12+rax*1+0x35],1
   140028e20:	test   BYTE PTR [rax],cl
   140028e22:	ror    DWORD PTR [rax],0x74
   140028e25:	cmp    BYTE PTR [rsi-0x57b80c7],cl
   140028e2b:	shr    DWORD PTR [rdi],1
   140028e2d:	repnz mov ?,WORD PTR [rdi-0x13396642]
   140028e34:	(bad)  
   140028e35:	loop   0x140028e63
   140028e37:	(bad)
   140028e3a:	mov    BYTE PTR [rbp-0x6c48bbbb],ah
   140028e40:	xchg   DWORD PTR [rbx+0x65],ecx
   140028e43:	out    dx,al
   140028e44:	repnz sbb esi,DWORD PTR [rdx]
   140028e47:	or     eax,0x5d0c8189
   140028e4c:	scas   al,BYTE PTR es:[rdi]
   140028e4d:	pop    rsp
   140028e4e:	push   rsp
   140028e4f:	nop
   140028e50:	jnp    0x140028df8
   140028e52:	loopne 0x140028e5d
   140028e54:	(bad)  
   140028e56:	sub    al,BYTE PTR [rdx]
   140028e58:	add    eax,0x89f476e
   140028e5d:	hlt    
   140028e5e:	mov    WORD PTR [rcx],es
   140028e60:	outs   dx,DWORD PTR ds:[rsi]
   140028e61:	psubd  mm7,QWORD PTR [rcx+0x0]
   140028e65:	jo     0x140028e94
   140028e67:	cli    
   140028e68:	movabs ds:0x9fb72f62e7a93575,eax
   140028e71:	(bad)  
   140028e72:	mov    edx,0xb0c10e6f
   140028e77:	retf   
   140028e78:	push   rax
   140028e79:	add    al,al
   140028e7b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028e7c:	sub    bh,BYTE PTR [rdi-0x65d0ef01]
   140028e82:	cs or  al,0xc4
   140028e85:	imul   ebp,DWORD PTR [rdx+0x2b],0x32034af2
   140028e8c:	ret    
   140028e8d:	and    eax,0xf2570904
   140028e92:	rex.WXB push 0x6c
   140028e95:	(bad)  
   140028e96:	outs   dx,BYTE PTR ds:[rsi]
   140028e97:	stc    
   140028e98:	jp     0x140028e8f
   140028e9a:	xchg   ebp,eax
   140028e9b:	and    eax,0xe69f4e66
   140028ea0:	(bad)  
   140028ea1:	idiv   DWORD PTR [rdi]
   140028ea3:	lea    esp,[rdx]
   140028ea5:	and    esi,DWORD PTR [rcx]
   140028ea7:	(bad)  
   140028ea8:	movabs eax,ds:0xc6fb32603547458c
   140028eb1:	sbb    BYTE PTR [rbx-0x413bed37],al
   140028eb7:	mov    bh,0x20
   140028eb9:	idiv   DWORD PTR [rcx+rdi*4+0x600c8ed8]
   140028ec0:	rex jge 0x140028efc
   140028ec3:	cmp    DWORD PTR [rsi+0x3f9df097],esi
   140028ec9:	rex.WXB hlt 
   140028ecb:	loopne 0x140028ecc
   140028ecd:	xchg   BYTE PTR [rax],bh
   140028ecf:	je     0x140028ef8
   140028ed1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028ed2:	mov    ebx,0x540f6908
   140028ed7:	test   BYTE PTR [rax+0x1663414d],ch
   140028edd:	adc    DWORD PTR [rbp+0x62],ecx
   140028ee0:	adc    dl,BYTE PTR [ecx+0x2]
   140028ee4:	(bad)  
   140028ee5:	out    dx,al
   140028ee6:	out    0xda,eax
   140028ee8:	fsubr  QWORD PTR [rsi+riz*8-0x35e5381e]
   140028eef:	jge    0x140028e8d
   140028ef1:	jnp    0x140028e95
   140028ef3:	rex.X adc BYTE PTR [rdx],dl
   140028ef6:	rcr    DWORD PTR [rsi+0x167c9f43],cl
   140028efc:	std    
   140028efd:	ficom  DWORD PTR [rbx+0x50b3e598]
   140028f03:	sbb    eax,DWORD PTR [rbx+0x7d6dc70]
   140028f09:	or     BYTE PTR [rdx-0x7c],al
   140028f0c:	or     al,0x30
   140028f0e:	loope  0x140028f28
   140028f10:	(bad)  [rbx-0x71]
   140028f13:	jo     0x140028ec2
   140028f15:	cmp    ebp,eax
   140028f17:	ins    DWORD PTR es:[rdi],dx
   140028f18:	mov    bh,0xbf
   140028f1a:	fst    QWORD PTR [rsi+0x647b8b1c]
   140028f20:	retf   
   140028f21:	(bad)  
   140028f22:	(bad)  
   140028f23:	jns    0x140028f36
   140028f25:	je     0x140028eb9
   140028f27:	(bad)  
   140028f28:	push   rax
   140028f29:	mov    DWORD PTR [rdx],esp
   140028f2b:	jb     0x140028f96
   140028f2d:	mov    al,0x40
   140028f2f:	nop
   140028f30:	sbb    DWORD PTR [rbx+0x54fe4a10],edi
   140028f36:	(bad)  [rdi]
   140028f38:	(bad)
   140028f3b:	nop
   140028f3c:	rol    BYTE PTR [rbx-0x7d],cl
   140028f3f:	xor    DWORD PTR [rdx+0xf92cbfa],0x2b80dcf1
   140028f49:	xor    bl,dl
   140028f4b:	stos   DWORD PTR es:[rdi],eax
   140028f4c:	and    BYTE PTR [rax],al
   140028f4e:	gs (bad) 
   140028f50:	fimul  DWORD PTR [rip+0x250c056]        # 0x142534fac
   140028f56:	rol    BYTE PTR [rsi-0x5c],0xfa
   140028f5a:	loopne 0x140028f32
   140028f5c:	sbb    esi,ebp
   140028f5e:	stos   DWORD PTR es:[rdi],eax
   140028f5f:	movabs ds:0xca4029aa2db52014,al
   140028f68:	push   rdx
   140028f69:	stc    
   140028f6a:	adc    DWORD PTR [rsi+0x2],esi
   140028f6d:	mov    ss,WORD PTR [rcx]
   140028f6f:	sbb    DWORD PTR [rax],ecx
   140028f71:	lea    edx,[rdx-0x66]
   140028f74:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028f75:	in     eax,0x2e
   140028f77:	(bad)  
   140028f78:	lahf   
   140028f79:	pop    rcx
   140028f7a:	loop   0x140028fc3
   140028f7c:	idiv   dh
   140028f7e:	and    eax,DWORD PTR [rdi]
   140028f80:	jmp    0x140028fe9
   140028f82:	jmp    0xd79dc52c
   140028f87:	pop    rdi
   140028f88:	hlt    
   140028f89:	ins    DWORD PTR es:[rdi],dx
   140028f8a:	(bad)  
   140028f8b:	add    bl,dh
   140028f8d:	cmp    al,0x82
   140028f8f:	fdiv   st(7),st
   140028f91:	(bad)  
   140028f92:	mov    ch,0x19
   140028f94:	stos   DWORD PTR es:[rdi],eax
   140028f95:	push   rsp
   140028f96:	pop    rdx
   140028f97:	(bad)  
   140028f98:	sub    eax,DWORD PTR [rdi]
   140028f9a:	lods   eax,DWORD PTR ds:[rsi]
   140028f9b:	sub    DWORD PTR [rdx-0x60],eax
   140028f9e:	(bad)  
   140028f9f:	mov    esi,0xbf7df083
   140028fa4:	cmp    DWORD PTR [rbx+riz*8+0xd54639f],0x894836d2
   140028faf:	or     BYTE PTR [rdx-0x2bcb0578],bl
   140028fb5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028fb6:	ins    BYTE PTR es:[rdi],dx
   140028fb7:	ror    BYTE PTR [rdi+0xe],cl
   140028fba:	cmp    al,0x7d
   140028fbc:	test   BYTE PTR [rax+0x6dbeea77],bh
   140028fc2:	movabs ds:0xee6b4293b3601df2,al
   140028fcb:	(bad)  
   140028fcc:	popf   
   140028fcd:	rex mov edi,0xe9f475f6
   140028fd3:	(bad)  
   140028fd4:	in     al,dx
   140028fd5:	mov    esi,0xd84409f5
   140028fda:	mov    ah,0x11
   140028fdc:	mov    ah,BYTE PTR [rax+0x5e174901]
   140028fe2:	clc    
   140028fe3:	or     al,0xef
   140028fe5:	jp     0x140028fca
   140028fe7:	and    esi,esi
   140028fe9:	sbb    eax,0x674f443c
   140028fee:	hlt    
   140028fef:	loop   0x14002901f
   140028ff1:	jmp    0x11da892c8
   140028ff6:	retf   0x930b
   140028ff9:	push   rcx
   140028ffa:	and    al,0x4f
   140028ffc:	or     DWORD PTR [rdi+rdi*1],ebp
   140028fff:	test   eax,0xaf205e31
   140029004:	and    al,0xf6
   140029006:	cli    
   140029007:	pop    rbp
   140029008:	clc    
   140029009:	rex.WX pop rax
   14002900b:	scas   eax,DWORD PTR es:[rdi]
   14002900c:	(bad)  
   14002900d:	xadd   BYTE PTR [rdx+rbx*8+0x450059c3],ch
   140029015:	jno    0x14002902d
   140029017:	push   rbx
   140029018:	frstor [rbx+0x63]
   14002901b:	push   rdx
   14002901c:	push   rbp
   14002901d:	cli    
   14002901e:	stos   BYTE PTR es:[rdi],al
   14002901f:	and    eax,0xa1e491b0
   140029024:	(bad)  
   140029025:	nop
   140029026:	movabs eax,ds:0xf8d2b9f84c8d8003
   14002902f:	lods   eax,DWORD PTR ds:[rsi]
   140029030:	sub    DWORD PTR [rdx],edi
   140029032:	push   rax
   140029033:	cmp    edx,eax
   140029035:	sbb    esi,DWORD PTR [rdx]
   140029037:	mov    ah,0xb1
   140029039:	mov    DWORD PTR [rdx],esi
   14002903b:	mov    BYTE PTR [rcx+rbx*4],cl
   14002903e:	pop    rbx
   14002903f:	add    bl,BYTE PTR [rax-0x49509c74]
   140029045:	cmp    DWORD PTR [rdx+rsi*2+0x3f4ef78e],edi
   14002904c:	(bad)  
   14002904d:	cmp    al,BYTE PTR [rax+0x1b]
   140029050:	push   rbp
   140029051:	pop    rsi
   140029052:	rex.RXB (bad) 
   140029054:	xor    al,BYTE PTR [rsi+0x17]
   140029057:	es sub eax,0x6fb25d78
   14002905d:	push   0xffffffffffffffef
   14002905f:	mov    BYTE PTR [rsi+rsi*1+0x66],0x88
   140029064:	fdivp  st(1),st
   140029066:	repz add al,0xf
   140029069:	jle    0x14002906d
   14002906b:	mov    bl,0xe7
   14002906d:	sub    eax,0x75edb710
   140029072:	(bad)  
   140029073:	xor    eax,0xdcdc0e9b
   140029078:	xchg   DWORD PTR [rax-0x155adfb3],ebp
   14002907e:	scas   eax,DWORD PTR es:[rdi]
   14002907f:	push   rsp
   140029080:	mov    esi,0x1f43296
   140029085:	(bad)  
   140029086:	sub    ebx,esi
   140029088:	cli    
   140029089:	(bad)  
   14002908a:	ror    esi,0x88
   14002908d:	push   rdx
   14002908e:	xchg   esi,eax
   14002908f:	or     BYTE PTR [rbx+rsi*8],bh
   140029092:	sbb    al,0xfa
   140029094:	mov    ch,0xaf
   140029096:	(bad)  
   140029097:	cmp    cl,BYTE PTR [rbx+0x111c6898]
   14002909d:	ss xchg ecx,eax
   14002909f:	rex.B sbb eax,0x9f449b51
   1400290a5:	jns    0x140029028
   1400290a7:	leave  
   1400290a8:	repz iret 
   1400290aa:	jno    0x140029073
   1400290ac:	fcmovnu st,st(6)
   1400290ae:	or     DWORD PTR [rdx],esi
   1400290b0:	and    ch,dl
   1400290b2:	sbb    DWORD PTR [rbp-0x7a21748a],edi
   1400290b8:	rex.RB mov r10b,0xb8
   1400290bb:	xchg   DWORD PTR [rbx-0x6b],ebx
   1400290be:	fmul   QWORD PTR [rdi-0x59]
   1400290c1:	cs (bad) 
   1400290c3:	or     eax,0x17b67df9
   1400290c8:	loope  0x1400290c0
   1400290ca:	sub    ebx,DWORD PTR [rsi+0x72]
   1400290cd:	mov    ch,0xd2
   1400290cf:	sti    
   1400290d0:	ja     0x140029083
   1400290d2:	(bad)  
   1400290d3:	repnz xchg edi,eax
   1400290d5:	movabs al,ds:0x68d06545c1d0fc67
   1400290de:	mov    edi,0xa865db
   1400290e3:	loopne 0x140029147
   1400290e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400290e6:	xchg   edi,eax
   1400290e7:	xlat   BYTE PTR ds:[rbx]
   1400290e8:	sub    edi,edx
   1400290ea:	js     0x140029115
   1400290ec:	in     eax,0xc0
   1400290ee:	add    al,0xda
   1400290f0:	sub    bh,BYTE PTR [rax+0x6e]
   1400290f3:	(bad)  
   1400290f4:	fwait
   1400290f5:	sbb    al,0x4
   1400290f7:	test   al,cl
   1400290f9:	or     bh,BYTE PTR [rdi+0x5291a11f]
   1400290ff:	ror    DWORD PTR [rsi+0x52],cl
   140029102:	(bad)  
   140029103:	mov    ebp,0xcf0fccb0
   140029108:	cld    
   140029109:	and    edx,DWORD PTR [rbx+0x6a]
   14002910c:	xchg   ecx,eax
   14002910d:	outs   dx,BYTE PTR ds:[rsi]
   14002910e:	(bad)  
   14002910f:	and    bl,BYTE PTR [rax+rbp*8-0x55]
   140029113:	or     BYTE PTR [rsi+0x28bcaf5b],bl
   140029119:	loop   0x14002917c
   14002911b:	cmp    al,0xae
   14002911d:	jmp    0x140029191
   14002911f:	add    ebx,DWORD PTR [rax]
   140029121:	sub    ah,BYTE PTR [rax+rdi*1]
   140029124:	jl     0x14002914d
   140029126:	mov    ch,0x87
   140029128:	jle    0x140029135
   14002912a:	fdivrp st(6),st
   14002912c:	push   rbx
   14002912d:	push   0x3eacd919
   140029132:	add    al,0x22
   140029134:	ins    BYTE PTR es:[rdi],dx
   140029135:	and    al,dh
   140029137:	mul    BYTE PTR [rdx+0x72ca7b1b]
   14002913d:	pop    rsi
   14002913e:	out    dx,al
   14002913f:	xlat   BYTE PTR ds:[rbx]
   140029140:	sbb    DWORD PTR [rdi],ebp
   140029142:	(bad)  
   140029143:	mov    al,0xca
   140029145:	cmp    dh,al
   140029147:	cs enter 0xcd37,0x8d
   14002914c:	shl    BYTE PTR [rax],0xad
   14002914f:	pop    rbx
   140029150:	mov    al,0x74
   140029152:	(bad)  
   140029153:	in     al,dx
   140029154:	(bad)  
   140029155:	scas   eax,DWORD PTR es:[rdi]
   140029156:	ret    0x2bdc
   140029159:	movabs al,ds:0x9152132369a8986a
   140029162:	mov    ebp,0xbe6e25f2
   140029167:	xchg   dx,ax
   140029169:	imul   ebp,DWORD PTR [rdi+0x49248ebb],0xffffffc8
   140029170:	xchg   edx,eax
   140029171:	(bad)  
   140029172:	mov    ebp,0xda74f3e5
   140029177:	sub    eax,0xa22b34d2
   14002917c:	repnz rex.X in al,0xeb
   140029180:	and    eax,0x779a5fe0
   140029185:	(bad)  
   140029186:	fcmovu st,st(6)
   140029188:	mov    ebx,0x7045d72
   14002918d:	pushf  
   14002918e:	adc    eax,0xd8a2bed3
   140029193:	jge    0x140029203
   140029195:	ficomp WORD PTR [rdx]
   140029197:	xchg   ecx,eax
   140029198:	sub    BYTE PTR [rbp-0x73f99e70],0xa1
   14002919f:	add    al,BYTE PTR [rax]
   1400291a1:	pop    rdi
   1400291a2:	(bad)  
   1400291a3:	and    ch,BYTE PTR [rdx-0x56]
   1400291a6:	jb     0x1400291e1
   1400291a8:	and    DWORD PTR [rdi],ebx
   1400291aa:	and    DWORD PTR [rbp+0x79],ebx
   1400291ad:	outs   dx,BYTE PTR ds:[rsi]
   1400291ae:	ins    DWORD PTR es:[rdi],dx
   1400291af:	ret    
   1400291b0:	jle    0x140029140
   1400291b2:	lock xchg ebx,eax
   1400291b4:	in     eax,0x36
   1400291b6:	and    esi,DWORD PTR [rdx+rax*2]
   1400291b9:	ror    DWORD PTR [rcx-0x578f5011],0x35
   1400291c0:	iret   
   1400291c1:	mov    ebp,0xe991cf13
   1400291c6:	adc    BYTE PTR [rbx+0x44],ah
   1400291c9:	cmp    edx,edx
   1400291cb:	cmp    edx,eax
   1400291cd:	icebp  
   1400291ce:	cli    
   1400291cf:	(bad)  
   1400291d0:	xor    DWORD PTR [rax],esp
   1400291d2:	cmp    ebx,esi
   1400291d4:	(bad)  
   1400291d5:	clc    
   1400291d6:	pop    rdi
   1400291d7:	pop    rdi
   1400291d8:	jp     0x140029161
   1400291da:	adc    eax,0xef6a29f5
   1400291df:	(bad)  
   1400291e0:	(bad)  
   1400291e1:	or     BYTE PTR [rsi],bl
   1400291e3:	clc    
   1400291e4:	(bad)  
   1400291e5:	cwde   
   1400291e6:	cdq    
   1400291e7:	sbb    esi,DWORD PTR [rax]
   1400291e9:	imul   eax,DWORD PTR [rdi],0x84640cb2
   1400291ef:	ins    BYTE PTR es:[rdi],dx
   1400291f0:	rex.WR
   1400291f1:	rex.XB jae 0x1400291b3
   1400291f4:	in     eax,0x6
   1400291f6:	fs pop rax
   1400291f8:	repnz adc dh,cl
   1400291fb:	fild   QWORD PTR [rdi]
   1400291fd:	lods   al,BYTE PTR ds:[rsi]
   1400291fe:	adc    ebx,edi
   140029200:	(bad)  
   140029201:	sub    eax,0x39b92edb
   140029206:	push   rbx
   140029207:	int3   
   140029208:	push   rbp
   140029209:	add    al,0x36
   14002920c:	(bad)  
   14002920d:	jmp    0x1673349d6
   140029212:	lahf   
   140029213:	sbb    BYTE PTR [r13+0x23],r13b
   140029217:	add    eax,0xc2c4598d
   14002921c:	neg    DWORD PTR [rcx-0x21c20f48]
   140029222:	not    BYTE PTR [rsi-0x7d5b5d49]
   140029228:	sub    al,0x85
   14002922a:	(bad)  
   14002922b:	or     ch,cl
   14002922d:	retf   0x7112
   140029230:	sbb    dl,BYTE PTR [rbx-0x6f716898]
   140029236:	iret   
   140029237:	mov    cl,0x18
   140029239:	hlt    
   14002923a:	mov    ecx,DWORD PTR [rbp+0x24863520]
   140029240:	(bad)  
   140029241:	mov    cl,0xa8
   140029243:	rex.R mov esi,0x65aae1e6
   140029249:	or     BYTE PTR [rbx-0x1200c00f],ch
   14002924f:	add    BYTE PTR [rsi-0x50],dh
   140029252:	jp     0x1400291ee
   140029254:	or     eax,0x8eb59ff6
   140029259:	jne    0x1400292bf
   14002925b:	movabs al,ds:0x16860415874285b
   140029264:	(bad)  
   140029265:	cmp    eax,0xe5fe2371
   14002926a:	xchg   esp,eax
   14002926b:	adc    bl,al
   14002926d:	(bad)
   140029270:	adc    BYTE PTR [rax+0x54],ch
   140029273:	loope  0x140029270
   140029275:	sbb    BYTE PTR [edx],dh
   140029278:	jmp    0x140029275
   14002927a:	rex.WXB or rcx,QWORD PTR [r8]
   14002927d:	mov    ebp,0xcbdcca6e
   140029282:	sub    DWORD PTR [rdi-0x71],esi
   140029285:	mov    ebp,0x44b054c4
   14002928a:	lods   al,BYTE PTR ds:[rsi]
   14002928b:	rex.XB
   14002928c:	repnz xor eax,0x3e536d70
   140029292:	stc    
   140029293:	out    0x9b,eax
   140029295:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029296:	loopne 0x140029305
   140029298:	fsubr  DWORD PTR [rax-0x7b41457f]
   14002929e:	xlat   BYTE PTR ds:[rbx]
   14002929f:	fisttp QWORD PTR [rbp-0xc]
   1400292a2:	shr    BYTE PTR [rdi+0x21],1
   1400292a5:	outs   dx,BYTE PTR ds:[rsi]
   1400292a6:	stc    
   1400292a7:	push   rcx
   1400292a8:	mov    WORD PTR [rdx],cs
   1400292aa:	xor    ecx,esi
   1400292ac:	mov    bl,BYTE PTR [rip+0x6831a34a]        # 0x1a83435fc
   1400292b2:	out    dx,al
   1400292b3:	mov    cl,0x93
   1400292b5:	(bad)  
   1400292b6:	ret    0xfe3a
   1400292b9:	and    esi,DWORD PTR [rdi+0x23]
   1400292bc:	lods   al,BYTE PTR ds:[rsi]
   1400292bd:	jo     0x140029270
   1400292bf:	xor    esp,ebx
   1400292c1:	jle    0x140029300
   1400292c3:	test   ebp,edx
   1400292c5:	loop   0x1400292fa
   1400292c7:	xchg   BYTE PTR [rip+0xffffffff8c0229a9],al        # 0xcc04bc76
   1400292cd:	adc    DWORD PTR [rdi+riz*4+0x5f],esp
   1400292d1:	rex.R jg 0x1400292d3
   1400292d4:	sbb    edx,eax
   1400292d6:	imul   eax,DWORD PTR [rcx+0x34],0x989b0986
   1400292dd:	push   rdi
   1400292de:	mov    edi,0xf7874dc2
   1400292e3:	mov    cl,0xf7
   1400292e5:	(bad)  
   1400292e6:	std    
   1400292e7:	and    al,0x69
   1400292e9:	push   0x73
   1400292eb:	(bad)  
   1400292ec:	pop    rdx
   1400292ed:	(bad)  
   1400292ee:	rex.W jp 0x14002935e
   1400292f1:	(bad)  
   1400292f3:	adc    ebx,ebp
   1400292f5:	or     al,0x63
   1400292f7:	jb     0x140029297
   1400292f9:	push   rbx
   1400292fa:	clc    
   1400292fb:	(bad)
   1400292fe:	xor    DWORD PTR [rax+0x2f3abef],edx
   140029304:	movabs eax,ds:0x8331cad4dead33f9
   14002930d:	gs jae 0x14002933d
   140029310:	and    DWORD PTR [rcx+0x55],0xe864b5f4
   140029317:	add    al,ah
   140029319:	(bad)  {k5}
   14002931e:	jbe    0x140029352
   140029320:	(bad)  
   140029321:	in     al,dx
   140029322:	(bad)  
   140029323:	sbb    BYTE PTR [rcx-0x6],bl
   140029326:	cli    
   140029327:	(bad)  
   140029328:	adc    dh,BYTE PTR [rax-0xf]
   14002932b:	jg     0x140029356
   14002932d:	and    eax,0xa2631617
   140029332:	push   rbx
   140029333:	ins    DWORD PTR es:[rdi],dx
   140029334:	out    dx,al
   140029335:	cdq    
   140029336:	cld    
   140029337:	(bad)  
   140029338:	rex.RX stos DWORD PTR es:[rdi],eax
   14002933a:	imul   ebx,DWORD PTR [rax+r13*2-0x33],0xbb33ab5e
   140029343:	add    DWORD PTR [rcx+riz*4-0x9],ecx
   140029347:	ret    0xc655
   14002934a:	test   eax,0xe82b94fe
   14002934f:	stos   DWORD PTR es:[rdi],eax
   140029350:	jb     0x1400293be
   140029352:	(bad)  
   140029354:	idiv   esi
   140029356:	imul   eax,DWORD PTR [rdx-0x33d50109],0xffffffbe
   14002935d:	adc    DWORD PTR [rbx],edx
   14002935f:	ja     0x140029372
   140029361:	rex.WB (bad) 
   140029363:	movabs eax,ds:0xf932c673434fa822
   14002936c:	sub    ah,BYTE PTR [rax-0x5317ea58]
   140029372:	add    DWORD PTR [rbp+0x4f],ebp
   140029375:	pop    rsi
   140029376:	cli    
   140029377:	iret   
   140029378:	mov    esi,0x356bdbf2
   14002937d:	cmp    DWORD PTR [rdi],esi
   14002937f:	(bad)  
   140029380:	repnz cmp BYTE PTR [rdx-0xe85eeb0],bh
   140029387:	add    al,0xd9
   140029389:	shr    DWORD PTR [rdi-0x57a60d3f],1
   14002938f:	rex.WRB (bad) 
   140029391:	pop    rdx
   140029392:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140029393:	cwde   
   140029394:	outs   dx,BYTE PTR ds:[rsi]
   140029395:	(bad)  
   140029396:	out    0x2d,eax
   140029398:	(bad)  
   140029399:	fisttp WORD PTR [rdx-0x6a]
   14002939c:	repz sbb esp,DWORD PTR [rsi+0x69598cb3]
   1400293a3:	movabs eax,ds:0xae9354dd0c624a75
   1400293ac:	loop   0x1400293ea
   1400293ae:	lods   eax,DWORD PTR ds:[rsi]
   1400293af:	pop    rcx
   1400293b0:	test   BYTE PTR fs:[rbx+0x1b58824f],bh
   1400293b7:	loop   0x14002941b
   1400293b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400293ba:	movabs ds:0x966e75fa3ff4248d,al
   1400293c3:	pop    rcx
   1400293c4:	cmc    
   1400293c5:	(bad)  
   1400293c6:	jle    0x140029382
   1400293c8:	int3   
   1400293c9:	sar    edx,1
   1400293cb:	jb     0x14002937a
   1400293cd:	test   DWORD PTR [rbp+0x5432e],ebx
   1400293d3:	jmp    0x14002939a
   1400293d5:	pop    rdi
   1400293d6:	xlat   BYTE PTR ds:[rbx]
   1400293d7:	fwait
   1400293d8:	sbb    al,0x74
   1400293da:	xor    ecx,ebp
   1400293dc:	movsxd esi,DWORD PTR [rbp+0x1]
   1400293df:	sub    DWORD PTR [rdx+rdx*2],esi
   1400293e2:	or     BYTE PTR fs:[rbx+0x2585a1],dl
   1400293e9:	sti    
   1400293ea:	push   0xfffffffffffffffa
   1400293ec:	out    0x6f,eax
   1400293ee:	iret   
   1400293ef:	mov    esp,0xe35b729a
   1400293f4:	sub    BYTE PTR [rdi],al
   1400293f6:	cmp    DWORD PTR [rcx],0x1b
   1400293f9:	test   bl,0x7
   1400293fc:	push   rdx
   1400293fd:	(bad)  
   1400293fe:	add    edi,0xffffff8d
   140029401:	cdq    
   140029402:	mov    ecx,0x694c205b
   140029407:	sbb    DWORD PTR [rsi+riz*8],edx
   14002940a:	cmc    
   14002940b:	sub    bh,BYTE PTR [rdx-0x2]
   14002940e:	retf   0x7825
   140029411:	jrcxz  0x140029422
   140029413:	adc    ebp,edi
   140029415:	enter  0x216f,0x6e
   140029419:	sti    
   14002941a:	and    BYTE PTR [rdx+0x45],bl
   14002941d:	cwde   
   14002941e:	out    dx,al
   14002941f:	xchg   edx,eax
   140029420:	xor    eax,0xc409a3e3
   140029425:	fsubr  DWORD PTR [rdx+riz*4]
   140029428:	adc    DWORD PTR ss:[rax-0x73],0xe920257c
   140029430:	pop    rbp
   140029431:	mov    bl,0x2b
   140029433:	sbb    eax,0x92766e06
   140029438:	leave  
   140029439:	mov    al,0x8a
   14002943b:	out    dx,eax
   14002943c:	out    dx,al
   14002943d:	rex.WRXB xchg r14,rax
   14002943f:	push   rdi
   140029440:	(bad)  
   140029441:	(bad)  
   140029442:	rol    DWORD PTR [rbx-0x58],0x3a
   140029446:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029447:	jge    0x1400293e7
   140029449:	in     al,dx
   14002944a:	call   0x1a33d64e2
   14002944f:	rex.WB ret 
   140029451:	xor    ebx,edi
   140029453:	out    0x96,al
   140029455:	sbb    ebp,DWORD PTR [rdi-0x79958d99]
   14002945b:	xor    al,0xd3
   14002945d:	cwde   
   14002945e:	xor    al,0x86
   140029460:	xchg   ebp,eax
   140029461:	and    eax,0x2084489b
   140029466:	adc    eax,0x5d33b156
   14002946b:	pop    rbp
   14002946c:	(bad)  
   14002946d:	stos   DWORD PTR es:[rdi],eax
   14002946e:	sbb    al,0xd9
   140029470:	sbb    eax,0x431a903f
   140029475:	pushf  
   140029476:	in     eax,0x55
   140029478:	cdq    
   140029479:	mov    esp,0xfc51eafb
   14002947e:	stos   DWORD PTR es:[rdi],eax
   14002947f:	adc    BYTE PTR fs:[rdi-0x1c82c690],dh
   140029486:	rex.WX fadd QWORD PTR [rcx+r12*2-0x7ffd5e6f]
   14002948e:	cmc    
   14002948f:	in     al,0x62
   140029491:	or     DWORD PTR [rsi],edi
   140029493:	(bad)  
   140029494:	jge    0x14002946d
   140029496:	jnp    0x140029440
   140029498:	xchg   esi,eax
   140029499:	(bad)  
   14002949a:	mov    dl,0xa3
   14002949c:	mov    esi,0xecc51916
   1400294a1:	cmp    esp,DWORD PTR [rdi-0x611dfd20]
   1400294a7:	movabs eax,ds:0x52488bc6cee1227b
   1400294b0:	push   rdx
   1400294b1:	and    esi,ebx
   1400294b3:	js     0x14002952f
   1400294b5:	fiadd  WORD PTR [rcx-0x5e3a1123]
   1400294bb:	push   rsi
   1400294bc:	mov    cl,0x8a
   1400294be:	cli    
   1400294bf:	sbb    dh,al
   1400294c1:	imul   esi,DWORD PTR [rbx-0xf511d01],0x4e
   1400294c8:	pop    rax
   1400294c9:	xchg   ecx,eax
   1400294ca:	jrcxz  0x1400294c7
   1400294cc:	test   eax,0x42bf7dd
   1400294d1:	paddb  mm3,QWORD PTR [rdx]
   1400294d4:	data16 (bad) 
   1400294d7:	shr    BYTE PTR [rbp+0x21],1
   1400294da:	xchg   edx,eax
   1400294db:	sbb    BYTE PTR [rcx+0x34fa981a],ah
   1400294e1:	movabs ds:0x9450775f33610d39,al
   1400294ea:	sub    DWORD PTR [rip+0x4bba0494],ecx        # 0x18bbc9984
   1400294f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400294f1:	adc    DWORD PTR [rcx-0xdb1accb],edi
   1400294f7:	jne    0x140029559
   1400294f9:	xchg   esi,eax
   1400294fa:	(bad)  
   1400294fb:	sub    BYTE PTR [rcx+0x75],dl
   1400294fe:	call   0x1bb6235b1
   140029503:	sbb    bh,BYTE PTR [rbp-0x74ced88]
   140029509:	sbb    bh,BYTE PTR [rbx-0x7e]
   14002950c:	cwde   
   14002950d:	sbb    ebp,DWORD PTR [rdi+0x7c]
   140029510:	and    ebx,DWORD PTR [rcx-0x6a]
   140029513:	pop    rax
   140029514:	xor    dh,BYTE PTR [rbx+rdi*4-0x138a1774]
   14002951b:	xor    esi,eax
   14002951d:	nop
   14002951e:	sbb    BYTE PTR [rbp+0x4f],cl
   140029521:	(bad)  [rip+0xffffffffeebbf3d5]        # 0x12ebe88fc
   140029527:	mov    ebp,0x18c42e28
   14002952c:	rex.W
   14002952d:	repnz xchg ebp,eax
   14002952f:	xchg   ebx,eax
   140029530:	mov    ch,0x29
   140029532:	sub    eax,0xd5e7beb0
   140029537:	jg     0x14002958d
   140029539:	mov    edi,0xa2fc55ab
   14002953e:	(bad)  
   14002953f:	retf   
   140029540:	(bad)  
   140029541:	movabs al,ds:0xff5f7c001a864ef8
   14002954a:	push   rdx
   14002954b:	adc    al,0x7f
   14002954d:	fnsave [rsi]
   14002954f:	shl    DWORD PTR [rdx-0x3634cd02],0xaa
   140029556:	cmp    al,0x89
   140029558:	vmulsd xmm12,xmm4,QWORD PTR [rdx]
   14002955c:	push   rax
   14002955d:	xchg   edx,eax
   14002955e:	stc    
   14002955f:	mov    ecx,0x159d331e
   140029564:	outs   dx,BYTE PTR ds:[rsi]
   140029565:	scas   al,BYTE PTR es:[rdi]
   140029566:	sbb    eax,0x4511d121
   14002956b:	(bad)  [rsi]
   14002956d:	rcr    edi,1
   14002956f:	sub    DWORD PTR [rbp-0x5b886501],0x2e709ffc
   140029579:	add    eax,0x86ce5d2a
   14002957f:	ins    DWORD PTR es:[rdi],dx
   140029580:	add    eax,0xf1be1d6f
   140029585:	jle    0x140029529
   140029587:	(bad)  
   140029588:	dec    BYTE PTR [rip+0xffffffff843edbc4]        # 0xc4417152
   14002958e:	xchg   esi,eax
   14002958f:	adc    dl,bl
   140029591:	pop    rbp
   140029592:	rex.X mov BYTE PTR [rax],al
   140029595:	movabs ds:0x3504449b50379b71,al
   14002959e:	or     al,0x32
   1400295a0:	idiv   DWORD PTR [rsi-0x14]
   1400295a3:	movabs ds:0x476fdb9bb8dcae26,al
   1400295ac:	std    
   1400295ad:	cmp    al,0x96
   1400295af:	xchg   ecx,eax
   1400295b0:	push   rdi
   1400295b1:	xor    ebp,DWORD PTR [rdx]
   1400295b3:	movabs ds:0x9f46d24c42a11a6c,eax
   1400295bc:	clc    
   1400295bd:	ss cli 
   1400295bf:	fdiv   DWORD PTR [rdi-0x1f60d258]
   1400295c5:	(bad)  
   1400295c6:	jmp    0x140029637
   1400295c8:	movabs al,ds:0xedd18bd3060268d1
   1400295d1:	cmp    eax,DWORD PTR gs:[rcx+0x52a6b729]
   1400295d8:	xor    al,0x89
   1400295da:	out    dx,al
   1400295db:	scas   eax,DWORD PTR es:[rdi]
   1400295dc:	shl    BYTE PTR [rbx],0xbc
   1400295df:	pop    rbx
   1400295e0:	call   0xd2092a83
   1400295e5:	fcom   QWORD PTR [rdx]
   1400295e7:	call   0x149754437
   1400295ec:	cmp    esi,ebx
   1400295ee:	mov    esi,0x4b953145
   1400295f3:	or     bh,bh
   1400295f5:	cmp    DWORD PTR [rcx-0x68216ba6],edi
   1400295fb:	movabs eax,ds:0x40fa37f5f1cb8004
   140029604:	or     eax,0xddf5f58
   140029609:	cmc    
   14002960a:	clc    
   14002960b:	(bad)  
   14002960d:	in     al,0x1d
   14002960f:	pop    rdi
   140029610:	mov    al,0x74
   140029612:	(bad)  
   140029613:	jo     0x1400295d2
   140029615:	cmp    bl,al
   140029617:	mov    ah,0x68
   140029619:	xchg   ecx,eax
   14002961a:	(bad)  
   14002961b:	sar    dl,0xd1
   14002961e:	pop    rax
   14002961f:	vpminub xmm10,xmm9,XMMWORD PTR [rsp+rbx*1-0x1682c980]
   140029628:	in     eax,dx
   140029629:	jge    0x1400295e8
   14002962b:	push   rbp
   14002962c:	nop    edi
   14002962f:	ss pop rbp
   140029631:	(bad)  
   140029632:	int3   
   140029633:	jne    0x140029679
   140029635:	(bad)  
   140029636:	clc    
   140029637:	(bad)  
   140029638:	adc    ebx,esp
   14002963a:	jmp    FWORD PTR [rdi-0x4d904ccf]
   140029640:	and    BYTE PTR [rax-0x7e4f779b],dl
   140029646:	test   al,0x4f
   140029648:	and    DWORD PTR [rdx],ebx
   14002964a:	ror    DWORD PTR [rax-0x556f7e58],cl
   140029650:	jo     0x1400296a1
   140029652:	mov    dh,cl
   140029654:	cmp    eax,0x59c03e7
   140029659:	push   rax
   14002965a:	rex.R
   14002965b:	ss mov ch,0x3
   14002965e:	add    eax,0x194c88f
   140029663:	fs xor edx,edi
   140029666:	clc    
   140029667:	mov    bh,0x31
   140029669:	(bad)  
   14002966a:	jle    0x1400295fd
   14002966c:	imul   ebp,DWORD PTR [rdi-0x2b3333c3],0xffffff94
   140029673:	pop    rbp
   140029674:	cli    
   140029675:	int3   
   140029676:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029677:	cwde   
   140029678:	(bad)  
   140029679:	mov    dl,0x25
   14002967b:	add    eax,0x9df612fb
   140029680:	pop    rbx
   140029681:	push   rdi
   140029682:	ficomp WORD PTR [rax]
   140029684:	sub    DWORD PTR [rbp+0x5f],esp
   140029687:	xor    ah,BYTE PTR [rbx+rdi*2-0x6404ea65]
   14002968e:	ret    0x2ac4
   140029691:	(bad)  
   140029692:	jb     0x14002966b
   140029694:	rol    edi,1
   140029696:	adc    DWORD PTR [rsi-0x4d07d913],ebp
   14002969c:	sbb    ebx,eax
   14002969e:	cld    
   14002969f:	retf   
   1400296a0:	xchg   ebp,eax
   1400296a1:	movabs eax,ds:0xa179a0e5ca8d8004
   1400296aa:	repnz in eax,0x9c
   1400296ad:	fstp   QWORD PTR [rsp+0x203f3933]
   1400296b4:	rex.W loop 0x14002964b
   1400296b7:	(bad)  
   1400296b8:	sbb    ebp,eax
   1400296ba:	pop    rbx
   1400296bb:	imul   ebp,DWORD PTR [rdi],0xffffffd9
   1400296be:	pushf  
   1400296bf:	cdq    
   1400296c0:	jl     0x14002966c
   1400296c2:	lods   al,BYTE PTR ds:[rsi]
   1400296c3:	(bad)  
   1400296c4:	(bad)  
   1400296c5:	test   al,0xaf
   1400296c7:	push   rsi
   1400296c8:	test   DWORD PTR [rbx],ecx
   1400296ca:	cmp    eax,DWORD PTR [ebp-0x1d777849]
   1400296d1:	mov    ebx,ds
   1400296d3:	adc    DWORD PTR [rbp-0x43ddd5ea],ebp
   1400296d9:	stc    
   1400296da:	xchg   DWORD PTR [rcx-0x1dfb05e2],ecx
   1400296e0:	mov    dh,0xf
   1400296e2:	xchg   edx,eax
   1400296e3:	sbb    bh,BYTE PTR gs:[rdx+0x6d]
   1400296e7:	test   BYTE PTR [rax+riz*4-0x11977eca],cl
   1400296ee:	add    esi,0x1a5c614
   1400296f4:	sbb    edx,DWORD PTR [rcx+0x11e24baf]
   1400296fa:	sub    DWORD PTR [rsi-0x2b],0x502075f
   140029701:	mov    DWORD PTR [rax+0x5d],ebp
   140029704:	or     BYTE PTR [rbx-0x6db77a4f],ah
   14002970a:	cs cli 
   14002970c:	jnp    0x14002970d
   14002970e:	(bad)  
   14002970f:	leave  
   140029710:	js     0x1400296a0
   140029712:	imul   ecx,DWORD PTR [rsi],0x5f
   140029715:	rex.WRXB adc BYTE PTR [r12+r8*2+0x3d264481],r8b
   14002971d:	rex.W jp 0x140029799
   140029720:	mov    WORD PTR [rdi],?
   140029722:	outs   dx,DWORD PTR ds:[rsi]
   140029723:	movabs ds:0xe4be4128d88caff8,eax
   14002972c:	mov    ecx,0x737b7e7f
   140029731:	lea    eax,[rdi]
   140029733:	cdq    
   140029734:	ret    0x9280
   140029737:	jbe    0x1400296c3
   140029739:	mov    cl,0x1f
   14002973b:	pop    rdi
   14002973c:	mov    ch,0xd1
   14002973e:	or     eax,0x2c1cc09f
   140029743:	mov    ebx,0x72ffaf2d
   140029748:	fs call 0xd9a5f74e
   14002974e:	adc    BYTE PTR [rdi-0x30920463],0x52
   140029755:	or     al,0x83
   140029757:	mov    BYTE PTR [rip+0x5fff0aaa],0xd0        # 0x1a001a208
   14002975e:	in     eax,dx
   14002975f:	imul   esp,DWORD PTR [rdx-0x3e0a33aa],0xb12ab231
   140029769:	xchg   edi,esp
   14002976b:	(bad)  
   14002976c:	out    0xbe,eax
   14002976e:	mov    edi,0x4453789b
   140029773:	(bad)  
   140029774:	mov    esp,0xe260ab11
   140029779:	mov    bh,0x49
   14002977b:	(bad)  
   14002977c:	int3   
   14002977d:	cmc    
   14002977e:	(bad)  
   14002977f:	jle    0x140029761
   140029781:	movsxd eax,DWORD PTR [rdi+rcx*1]
   140029784:	(bad)  
   140029785:	cmp    bl,cl
   140029787:	hlt    
   140029788:	cmc    
   140029789:	cwde   
   14002978a:	(bad)  
   14002978b:	movabs ds:0x3116736431a34c1d,al
   140029794:	mov    dh,0xc7
   140029796:	pop    rdx
   140029797:	(bad)  
   140029798:	rcl    BYTE PTR [rbp-0x119834e7],cl
   14002979e:	adc    eax,0x7f5debd7
   1400297a3:	mov    cl,0xbd
   1400297a5:	xor    bl,BYTE PTR [rdx]
   1400297a7:	rex.WXB
   1400297a8:	rex.RB jbe 0x1400297a9
   1400297ab:	add    al,0xea
   1400297ad:	fcom   st(3)
   1400297af:	sbb    al,0xb8
   1400297b1:	out    dx,al
   1400297b2:	rex.RX (bad) 
   1400297b4:	rex adc DWORD PTR [rcx+rax*1],eax
   1400297b8:	retf   0x90a4
   1400297bb:	rex.WRXB pop r15
   1400297bd:	ss stos DWORD PTR es:[rdi],eax
   1400297bf:	xchg   esp,eax
   1400297c0:	mov    ebx,0x5b09576c
   1400297c5:	ja     0x140029818
   1400297c7:	or     esi,edx
   1400297c9:	scas   al,BYTE PTR es:[rdi]
   1400297ca:	sbb    DWORD PTR [rax+0x2148f03],edx
   1400297d0:	and    eax,0x28b9d225
   1400297d5:	ret    0x37e5
   1400297d8:	mov    WORD PTR [rdi+rdi*2],ss
   1400297db:	and    esi,DWORD PTR [rdx]
   1400297dd:	je     0x1400297df
   1400297df:	xor    BYTE PTR [rax-0x4a],cl
   1400297e2:	(bad)  
   1400297e3:	outs   dx,DWORD PTR ds:[rsi]
   1400297e4:	xor    edi,DWORD PTR [rbp+0x7f]
   1400297e7:	jl     0x1400297c0
   1400297e9:	mov    dl,0xbd
   1400297eb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400297ec:	cmp    BYTE PTR [rax],ch
   1400297ee:	(bad)  
   1400297ef:	cwde   
   1400297f0:	adc    bl,cl
   1400297f2:	adc    al,0x79
   1400297f4:	jne    0x1400297f3
   1400297f6:	mov    gs,WORD PTR [rax-0x1]
   1400297f9:	addr32 push rcx
   1400297fb:	stc    
   1400297fc:	in     al,dx
   1400297fd:	lahf   
   1400297fe:	(bad)  
   1400297ff:	stos   DWORD PTR es:[rdi],eax
   140029800:	in     eax,dx
   140029801:	inc    DWORD PTR [rcx]
   140029803:	and    ah,BYTE PTR [rdx+0xf2dd126]
   140029809:	push   rdx
   14002980a:	sti    
   14002980b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002980c:	inc    DWORD PTR [rdi]
   14002980e:	loop   0x1400297a6
   140029810:	not    DWORD PTR [rbx+0x5f5b5d25]
   140029816:	xchg   al,cl
   140029819:	cli    
   14002981a:	and    al,0x34
   14002981c:	mul    DWORD PTR [rax+0x6a]
   14002981f:	push   rbx
   140029820:	jbe    0x1400297ec
   140029822:	mov    cl,0xbb
   140029824:	ins    BYTE PTR es:[rdi],dx
   140029825:	jrcxz  0x14002984e
   140029827:	push   rsp
   140029828:	stc    
   140029829:	stos   DWORD PTR es:[rdi],eax
   14002982a:	(bad)  
   14002982b:	in     eax,0xe1
   14002982d:	sar    DWORD PTR [rsi-0x285f5821],0x26
   140029834:	cmp    bl,bh
   140029836:	sbb    al,0xd
   140029838:	and    eax,0xa208c48
   14002983d:	and    esp,DWORD PTR [rdx]
   14002983f:	rex mul BYTE PTR [rdx+0x3b]
   140029843:	out    dx,eax
   140029844:	shr    DWORD PTR [rdx+rdx*2-0x7de99381],0xb5
   14002984c:	(bad)  
   14002984d:	push   0x4a
   14002984f:	adc    DWORD PTR [rdx],ebp
   140029851:	mov    DWORD PTR [rdx],ebx
   140029853:	cmp    BYTE PTR [rdx+0x292a4797],dl
   140029859:	or     BYTE PTR [rax+rcx*8-0x5122f44d],ah
   140029860:	jge    0x140029853
   140029862:	rex.RB or al,0xf4
   140029865:	and    eax,0xec866cee
   14002986a:	(bad)  
   14002986b:	scas   al,BYTE PTR es:[rdi]
   14002986c:	(bad)  
   14002986d:	push   rdi
   14002986e:	add    al,al
   140029870:	xchg   esi,eax
   140029871:	leave  
   140029872:	movabs al,ds:0x9c48704175a02b67
   14002987b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002987c:	sbb    rbp,QWORD PTR [r13-0x1c]
   140029880:	push   0x1f
   140029882:	(bad)  
   140029884:	add    DWORD PTR [rbp-0x6f3ffe7],ecx
   14002988a:	sbb    ebp,DWORD PTR [rdi]
   14002988c:	sbb    eax,ebp
   14002988e:	cmc    
   14002988f:	adc    BYTE PTR [rip+0xfffffffffbe12d7d],dh        # 0x13be3c612
   140029895:	jle    0x140029824
   140029897:	loopne 0x140029916
   140029899:	mov    edi,0x41ec6e86
   14002989e:	ja     0x1400298fb
   1400298a0:	add    BYTE PTR [rsp+rdx*8-0x3a],0x91
   1400298a5:	movsxd edi,ebx
   1400298a7:	adc    BYTE PTR [rbx+0x7b],ah
   1400298aa:	ins    DWORD PTR es:[rdi],dx
   1400298ab:	and    dl,BYTE PTR [rcx-0x4446d915]
   1400298b1:	xor    ecx,0xfffffff3
   1400298b4:	add    eax,0x5c73bef0
   1400298b9:	mov    ebx,DWORD PTR [rbp+0x55]
   1400298bc:	rex.B
   1400298bd:	cs mov esp,0x5874dd4a
   1400298c3:	rex.WB xor al,0x9d
   1400298c6:	rex.WRX
   1400298c7:	fwait
   1400298c8:	jp     0x1400298e2
   1400298ca:	adc    DWORD PTR [rdx+0x2f2a96c4],ebx
   1400298d0:	(bad)  
   1400298d1:	mov    ebx,0x8da04261
   1400298d6:	sub    eax,0x218c6eaf
   1400298db:	or     ah,BYTE PTR [rcx+rax*4]
   1400298de:	push   rdx
   1400298df:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400298e0:	(bad)  
   1400298e1:	sbb    esp,ebx
   1400298e3:	sub    eax,0x14a766cd
   1400298e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400298e9:	cdq    
   1400298ea:	lods   eax,DWORD PTR ds:[rsi]
   1400298eb:	ficomp DWORD PTR [rdx+rbp*1]
   1400298ee:	mov    DWORD PTR [rdx+rax*8-0x48f1aef5],edx
   1400298f5:	(bad)  
   1400298f6:	outs   dx,BYTE PTR ds:[rsi]
   1400298f7:	xchg   edi,eax
   1400298f8:	or     al,0x35
   1400298fa:	add    BYTE PTR [rcx+rdi*1+0x2],ch
   1400298fe:	mov    ebx,0xf6509c42
   140029903:	push   rcx
   140029904:	add    al,0xf1
   140029906:	jb     0x1400298ce
   140029908:	xor    ecx,DWORD PTR ds:[rdi+0x68]
   14002990c:	(bad)  
   14002990d:	sbb    eax,DWORD PTR [rdx-0xd]
   140029910:	mov    esi,0xfde617b7
   140029915:	sbb    eax,0x775bf4a8
   14002991a:	leave  
   14002991b:	xchg   edi,eax
   14002991c:	sub    dh,BYTE PTR [rdx]
   14002991e:	ins    BYTE PTR es:[rdi],dx
   14002991f:	adc    ch,bl
   140029921:	cli    
   140029922:	and    eax,DWORD PTR [rdi+rdi*8-0x23]
   140029926:	mov    edi,0x57df9b83
   14002992b:	jb     0x140029946
   14002992d:	push   rcx
   14002992e:	ret    
   14002992f:	mov    edx,0x2c875303
   140029934:	(bad)  
   140029935:	adc    BYTE PTR [rax+rax*2],dh
   140029938:	sub    BYTE PTR [rax-0x26],al
   14002993b:	jnp    0x14002999b
   14002993d:	sub    ch,ah
   14002993f:	and    BYTE PTR [rsi],dl
   140029941:	and    ebp,DWORD PTR [rdi]
   140029943:	rex.X xor sil,BYTE PTR [rdi-0x7c]
   140029947:	std    
   140029948:	mov    QWORD PTR [r9+0x1],r10
   14002994c:	(bad)  
   14002994d:	jge    0x14002994e
   14002994f:	sti    
   140029950:	or     QWORD PTR [rip+0x6cc9a101],rsi        # 0x1accc3a58
   140029957:	mov    ch,BYTE PTR [rdi-0x4f]
   14002995a:	mov    edi,0xe8ec2373
   14002995f:	mov    edi,0xc72ca712
   140029964:	xor    DWORD PTR [rcx+0x4b0ac514],eax
   14002996a:	in     eax,0x12
   14002996c:	jmp    0x14002994c
   14002996e:	cmp    DWORD PTR [rax],edx
   140029970:	mov    ah,0xe2
   140029972:	cwde   
   140029973:	outs   dx,BYTE PTR ds:[rsi]
   140029974:	(bad)  
   140029975:	adc    DWORD PTR [rdx],ebp
   140029977:	rex.WB push r8
   140029979:	(bad)  
   14002997a:	rex.XB test al,0xca
   14002997d:	out    0xdd,al
   14002997f:	lock fnsave [rax]
   140029982:	(bad)  
   140029983:	sti    
   140029984:	xor    dl,BYTE PTR [rax+rax*1-0x5ef0aa50]
   14002998b:	(bad)  
   14002998c:	(bad)  
   14002998d:	(bad)  
   14002998e:	rex mov esi,DWORD PTR [rdx]
   140029991:	add    eax,0x971cd8d5
   140029996:	and    al,0x36
   140029998:	(bad)  
   140029999:	movsxd ecx,ebp
   14002999b:	(bad)  
   14002999c:	cmp    DWORD PTR [rdi+0x27],esp
   14002999f:	mov    ecx,0x2af1567a
   1400299a4:	test   DWORD PTR [rdi],ebp
   1400299a6:	rex.RX and r12b,bl
   1400299a9:	xchg   edx,eax
   1400299aa:	or     edi,DWORD PTR [rax*8+0x716b3eb1]
   1400299b1:	retf   0xf3d7
   1400299b4:	rex.WB or BYTE PTR [r9-0x5694666],al
   1400299bb:	movq   QWORD PTR [rcx+rdi*8],mm3
   1400299bf:	sbb    DWORD PTR [rdi],0x43
   1400299c2:	rex.WRXB (bad) 
   1400299c4:	add    al,0x93
   1400299c6:	and    al,BYTE PTR [rdx]
   1400299c8:	cmp    ebx,DWORD PTR [rdi+0x461f4e40]
   1400299ce:	rex.WR sbb rax,0x154361b4
   1400299d4:	add    DWORD PTR [rdx],ebp
   1400299d6:	scas   eax,DWORD PTR es:[rdi]
   1400299d7:	sub    esp,DWORD PTR [rax+0x2f]
   1400299da:	mov    esi,0x92290324
   1400299df:	popf   
   1400299e0:	add    al,0x2
   1400299e2:	fstp   QWORD PTR [rcx+0x62]
   1400299e5:	movabs ds:0x9ccf2724c4cccf37,al
   1400299ee:	in     eax,0xf4
   1400299f0:	fnstenv [rbx+0x61220284]
   1400299f6:	lods   al,BYTE PTR ds:[rsi]
   1400299f7:	imul   ebx,DWORD PTR [rdi+0x51],0xc0da2768
   1400299fe:	push   rdx
   1400299ff:	(bad)  
   140029a00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140029a01:	fwait
   140029a02:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029a03:	rex.R and DWORD PTR [rsi+rdx*1+0x1dcd9428],0x7b0138f6
   140029a0f:	jl     0x1400299a7
   140029a11:	fxam   
   140029a13:	mov    edi,0xca04d6b5
   140029a18:	rex.RX paddsb mm1,QWORD PTR [rdx+r8*8]
   140029a1d:	stos   BYTE PTR es:[rdi],al
   140029a1e:	mov    DWORD PTR [rdx+0x65],esi
   140029a21:	mov    dl,0xdb
   140029a23:	adc    al,0xdf
   140029a25:	leave  
   140029a26:	rol    BYTE PTR [rcx],1
   140029a28:	shl    BYTE PTR [rsi+0x3e],0x84
   140029a2c:	cmc    
   140029a2d:	loop   0x1400299ed
   140029a2f:	add    ch,BYTE PTR [rdx+rdx*4-0x64]
   140029a33:	(bad)  
   140029a34:	out    0x12,al
   140029a36:	rex.X adc dil,al
   140029a39:	push   rax
   140029a3a:	(bad)  
   140029a3b:	or     eax,0x1b405c93
   140029a40:	jmp    0x140029aad
   140029a42:	(bad)  
   140029a43:	cmp    DWORD PTR [rdx-0x175a240f],0xffffffd3
   140029a4a:	gs call 0x143f08f1c
   140029a50:	sbb    ebx,DWORD PTR [rbx-0x55]
   140029a53:	jo     0x140029a10
   140029a55:	rex.R test al,0x90
   140029a58:	call   0x1344cda0a
   140029a5d:	sar    bh,1
   140029a5f:	(bad)  
   140029a60:	mov    eax,0xc8c5ee1
   140029a65:	sub    eax,0x471f5eeb
   140029a6a:	rex.WR (bad) 
   140029a6c:	test   BYTE PTR [rcx-0x4ecee95],bl
   140029a72:	adc    DWORD PTR [rbp+0x4e550626],esi
   140029a78:	adc    dl,cl
   140029a7a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140029a7b:	out    dx,eax
   140029a7c:	mov    ebp,0x9b5ee890
   140029a81:	lock cld 
   140029a83:	stos   DWORD PTR es:[rdi],eax
   140029a84:	sbb    al,0x3a
   140029a86:	js     0x140029a88
   140029a88:	sbb    DWORD PTR [rsi+0x28f472bc],eax
   140029a8e:	retf   
   140029a8f:	lods   eax,DWORD PTR ds:[rsi]
   140029a90:	and    eax,0xe0bc92ea
   140029a95:	retf   0xaba0
   140029a98:	xor    BYTE PTR [rax],ch
   140029a9a:	imul   ecx,DWORD PTR [rax-0x4b],0x21277ce6
   140029aa1:	rol    esi,cl
   140029aa3:	mov    gs,esi
   140029aa5:	push   rdx
   140029aa6:	xchg   esi,eax
   140029aa7:	scas   al,BYTE PTR es:[rdi]
   140029aa8:	or     BYTE PTR [rbx+0x65479002],0xb4
   140029aaf:	(bad)  
   140029ab0:	mov    ecx,0x2084a297
   140029ab5:	adc    al,0x2
   140029ab7:	and    eax,0x7cda9144
   140029abc:	mov    ecx,0x92d5cb04
   140029ac1:	adc    esi,DWORD PTR [rax]
   140029ac3:	je     0x140029ac5
   140029ac5:	mov    al,0x19
   140029ac7:	mov    dl,0xe1
   140029ac9:	xchg   edx,ebp
   140029acb:	jno    0x140029b28
   140029acd:	rex.RB
   140029ace:	addr32 retf 
   140029ad0:	or     al,0x91
   140029ad2:	sbb    QWORD PTR [r15-0x77],rsp
   140029ad6:	xor    bl,BYTE PTR [rdi+0x5de91bde]
   140029adc:	es (bad) 
   140029ade:	jle    0x140029b1c
   140029ae0:	in     al,0x26
   140029ae2:	mov    ch,0x2e
   140029ae4:	jmp    0x140029ae0
   140029ae6:	jrcxz  0x140029b0f
   140029ae8:	(bad)  
   140029ae9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029aea:	or     DWORD PTR [rdx-0x59],eax
   140029aed:	mov    BYTE PTR [rcx+riz*4-0x2f],bh
   140029af1:	popf   
   140029af2:	and    BYTE PTR [rdx-0x1a],ch
   140029af5:	cmp    al,dl
   140029af7:	(bad)  
   140029af8:	jle    0x140029aff
   140029afa:	stc    
   140029afb:	scas   al,BYTE PTR es:[rdi]
   140029afc:	lahf   
   140029afd:	xchg   BYTE PTR [rcx+0x20073603],cl
   140029b03:	mov    BYTE PTR [rax+0x7b91fb53],dl
   140029b09:	outs   dx,DWORD PTR ds:[rsi]
   140029b0a:	rex.R int3 
   140029b0c:	pop    rsi
   140029b0d:	(bad)
   140029b11:	test   dl,dh
   140029b13:	push   rsp
   140029b14:	lods   al,BYTE PTR ds:[rsi]
   140029b15:	int3   
   140029b16:	sbb    BYTE PTR [rcx+rbx*2-0x11d36d67],dh
   140029b1d:	and    bl,BYTE PTR [rbx+0x67]
   140029b20:	cwde   
   140029b21:	fnstenv [rbx-0x3e4cb969]
   140029b27:	test   DWORD PTR [rsi-0x75],edx
   140029b2a:	xlat   BYTE PTR ds:[rbx]
   140029b2b:	rex.WRX pushf 
   140029b2d:	and    BYTE PTR [rbx+0x5a4a447b],cl
   140029b33:	sar    DWORD PTR [rsi+0xd],cl
   140029b36:	add    eax,0x49d04255
   140029b3b:	push   rdx
   140029b3c:	cs je  0x140029ba2
   140029b3f:	add    al,0x10
   140029b41:	sub    DWORD PTR [rcx+0x20],ecx
   140029b44:	fucom  st(4)
   140029b46:	and    ebx,edi
   140029b48:	sub    dl,BYTE PTR [rsi-0x6a79cca9]
   140029b4e:	and    al,0xa1
   140029b50:	fwait
   140029b51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029b52:	sub    BYTE PTR [rcx+0x41ad7990],ch
   140029b58:	bnd jmp 0x140029b15
   140029b5b:	adc    al,0xd9
   140029b5d:	in     eax,dx
   140029b5e:	or     bl,BYTE PTR [rdi-0x6b]
   140029b61:	stos   DWORD PTR es:[rdi],eax
   140029b62:	or     al,BYTE PTR [rax]
   140029b64:	cs mul ecx
   140029b67:	xchg   esi,eax
   140029b68:	in     al,0xb2
   140029b6a:	and    BYTE PTR [rcx+0x35],cl
   140029b6d:	xchg   ecx,eax
   140029b6e:	ss xor al,0xcc
   140029b71:	xor    cl,dh
   140029b73:	sub    BYTE PTR ss:[rdx-0x10846090],bh
   140029b7a:	(bad)
   140029b7d:	hlt    
   140029b7e:	mov    dh,0x3c
   140029b80:	mov    ebp,0x2410b0a6
   140029b85:	je     0x140029bb5
   140029b87:	fadd   st,st(2)
   140029b89:	sahf   
   140029b8a:	rcr    BYTE PTR [rdi],cl
   140029b8c:	lods   eax,DWORD PTR ds:[rsi]
   140029b8d:	pop    rsi
   140029b8e:	dec    DWORD PTR [rsi]
   140029b90:	sub    BYTE PTR [rbp-0x73],dl
   140029b93:	call   0xfc25bb8e
   140029b98:	out    dx,eax
   140029b99:	xchg   edi,eax
   140029b9a:	xor    bh,dl
   140029b9c:	fisubr WORD PTR [rcx-0x3]
   140029b9f:	jg     0x140029bce
   140029ba1:	adc    ch,dh
   140029ba3:	sub    esp,esp
   140029ba5:	(bad)  
   140029ba6:	mov    ch,0x88
   140029ba8:	leave  
   140029ba9:	or     DWORD PTR [rax+0x55a1857c],0xffffff96
   140029bb0:	mov    dh,0xb3
   140029bb2:	jb     0x140029b86
   140029bb4:	add    al,0xd1
   140029bb6:	pop    rsi
   140029bb7:	(bad)  
   140029bb8:	iret   
   140029bb9:	hlt    
   140029bba:	or     al,0x61
   140029bbc:	adc    BYTE PTR [rax],ah
   140029bbe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029bbf:	loopne 0x140029b8d
   140029bc1:	cld    
   140029bc2:	sbb    al,0xa7
   140029bc4:	(bad)  
   140029bc5:	out    0xad,al
   140029bc7:	jg     0x140029b78
   140029bc9:	(bad)  
   140029bca:	sub    dl,0x67
   140029bcd:	jns    0x140029b8d
   140029bcf:	rex.B jle 0x140029c0d
   140029bd2:	cs hlt 
   140029bd4:	(bad)  
   140029bd5:	cmp    ch,BYTE PTR [rcx+0x4a]
   140029bd8:	movabs al,ds:0xbc298d6efac225b0
   140029be1:	sub    ebp,DWORD PTR [rbp+0x304bd5a1]
   140029be7:	sbb    BYTE PTR [rdx],al
   140029be9:	and    eax,0x6a2eab11
   140029bee:	ins    DWORD PTR es:[rdi],dx
   140029bef:	mov    ecx,0xb5fa461a
   140029bf4:	in     al,0xaa
   140029bf6:	add    BYTE PTR [rax+0x7db87a4b],al
   140029bfc:	sbb    eax,0x3458db59
   140029c01:	in     al,0x29
   140029c03:	sub    BYTE PTR [rdx+0x5231832c],al
   140029c09:	xchg   esp,eax
   140029c0a:	icebp  
   140029c0b:	adc    ah,bh
   140029c0d:	pop    rbp
   140029c0e:	fiadd  WORD PTR [rax]
   140029c10:	stc    
   140029c11:	mov    BYTE PTR [rsi+0x2ec5c7fb],dl
   140029c17:	(bad)  
   140029c18:	rex.XB pop r14
   140029c1a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029c1b:	iret   
   140029c1c:	mov    edx,0x9d9a74e
   140029c21:	or     bh,BYTE PTR [rdi+0x6f7da896]
   140029c27:	movabs ds:0xb401fedc405f9ef6,al
   140029c30:	nop
   140029c31:	call   0xc90aa724
   140029c36:	ins    BYTE PTR es:[rdi],dx
   140029c37:	(bad)  
   140029c38:	and    dl,ch
   140029c3a:	adc    ecx,DWORD PTR [rax]
   140029c3c:	movabs eax,ds:0x41a51265d1bbb88a
   140029c45:	fcom   DWORD PTR [rax-0x597698a5]
   140029c4b:	shr    BYTE PTR [rax],cl
   140029c4d:	sbb    DWORD PTR [rax],esp
   140029c4f:	test   BYTE PTR [rax],ah
   140029c51:	rex.WXB adc cl,BYTE PTR [r14+0x4ac73d9d]
   140029c58:	sbb    al,0xdb
   140029c5a:	xor    BYTE PTR [rdi+0x56015574],bl
   140029c60:	fild   WORD PTR [rbx]
   140029c62:	sub    DWORD PTR [rax],esp
   140029c64:	(bad)  
   140029c65:	xchg   ch,al
   140029c67:	outs   dx,BYTE PTR ds:[rsi]
   140029c68:	iret   
   140029c69:	pop    rsi
   140029c6a:	rex.WXB pop r15
   140029c6c:	js     0x140029c1d
   140029c6e:	push   0x39
   140029c70:	sbb    BYTE PTR [rdx-0x57],bh
   140029c73:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029c74:	xchg   ebx,eax
   140029c75:	fs enter 0xf7c2,0x2a
   140029c7a:	xchg   ebx,eax
   140029c7b:	xchg   BYTE PTR [rsi],al
   140029c7d:	leave  
   140029c7e:	(bad)  
   140029c7f:	stos   BYTE PTR es:[rdi],al
   140029c80:	hlt    
   140029c81:	mov    esi,0xb8006aec
   140029c86:	lods   al,BYTE PTR ds:[rsi]
   140029c87:	(bad)  
   140029c88:	in     al,dx
   140029c89:	gs test al,0x9
   140029c8c:	(bad)  
   140029c8d:	sub    ah,bh
   140029c8f:	sbb    eax,0x829b5adc
   140029c94:	or     DWORD PTR [rsi-0x14],edx
   140029c97:	or     BYTE PTR [rbx-0x1ba2ae35],ah
   140029c9d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029c9e:	test   al,0x23
   140029ca0:	ret    0x7f8a
   140029ca3:	rex.RX pop rax
   140029ca5:	push   rsi
   140029ca6:	rex.WXB movabs r11,0x135d83644dcd5ec
   140029cb0:	and    DWORD PTR [rdi+0x57],ebx
   140029cb3:	mov    WORD PTR [rdx+0x130ece02],?
   140029cb9:	sbb    DWORD PTR [rip+0x11fb6e88],esi        # 0x151fe0b47
   140029cbf:	(bad)  
   140029cc0:	lods   eax,DWORD PTR ds:[rsi]
   140029cc1:	out    dx,eax
   140029cc2:	xchg   DWORD PTR [rax+0x5],edi
   140029cc5:	loop   0x140029cd5
   140029cc7:	rex.RX sub r15b,BYTE PTR [rbx+0x100c814e]
   140029cce:	cmp    bl,BYTE PTR [rdi+0x2d6c2989]
   140029cd4:	and    al,0x63
   140029cd6:	test   BYTE PTR [rip+0x69011bf5],cl        # 0x1a903b8d1
   140029cdc:	xchg   edi,eax
   140029cdd:	enter  0x8f4,0xeb
   140029ce1:	jne    0x140029c6f
   140029ce3:	rol    DWORD PTR [rdx+rdx*1+0x4e3dbb96],1
   140029cea:	pop    rsi
   140029ceb:	pop    rax
   140029cec:	(bad)  
   140029ced:	xor    edi,esi
   140029cef:	cmp    al,0x85
   140029cf1:	jbe    0x140029d37
   140029cf3:	mov    bl,BYTE PTR [rbx-0x6b]
   140029cf6:	(bad)  
   140029cf8:	out    dx,eax
   140029cf9:	fstp   TBYTE PTR [rbp-0x6da11a74]
   140029cff:	push   rdi
   140029d00:	adc    DWORD PTR [rdx],ebx
   140029d02:	ins    BYTE PTR es:[rdi],dx
   140029d03:	and    eax,0x9d0b39b9
   140029d08:	cmp    BYTE PTR [rcx-0x42869b69],ah
   140029d0e:	xor    DWORD PTR [rbp+0x5dab80ad],0x2aec9df1
   140029d18:	add    al,bl
   140029d1a:	sub    al,0xe2
   140029d1c:	(bad)  
   140029d1d:	pop    rcx
   140029d1e:	in     eax,dx
   140029d1f:	rex.WX
   140029d20:	rex.W test BYTE PTR [rsp+rbp*1-0xc5eb3d1],al
   140029d28:	adc    al,0x56
   140029d2a:	test   eax,0x25ab3a28
   140029d2f:	idiv   BYTE PTR [rsp+rbp*2+0x9cde33f]
   140029d36:	jo     0x140029d36
   140029d38:	xor    BYTE PTR [rdx],ah
   140029d3a:	(bad)  
   140029d3b:	jmp    0xfdeb1069
   140029d40:	repz push rax
   140029d42:	test   ah,al
   140029d44:	pop    rsi
   140029d45:	xchg   DWORD PTR [rax+riz*4-0x590f6fb5],ebp
   140029d4c:	sti    
   140029d4d:	(bad)  
   140029d4e:	out    dx,eax
   140029d4f:	sbb    edx,eax
   140029d51:	sub    esp,edi
   140029d53:	in     eax,dx
   140029d54:	push   rdx
   140029d55:	gs stos BYTE PTR es:[rdi],al
   140029d57:	xchg   BYTE PTR [rcx],dl
   140029d59:	pop    r14
   140029d5b:	cmp    eax,0x394a99c1
   140029d60:	(bad)  
   140029d61:	and    ch,BYTE PTR [rax+rsi*2]
   140029d64:	(bad)  
   140029d65:	out    dx,al
   140029d66:	or     dh,BYTE PTR [rbp-0x6f]
   140029d69:	xor    DWORD PTR [rcx],esi
   140029d6b:	ds pop rsi
   140029d6d:	and    al,0xf9
   140029d6f:	sub    BYTE PTR [rcx],cl
   140029d71:	addr32 xchg edi,eax
   140029d73:	cmp    ebp,DWORD PTR [rsi+rsi*2]
   140029d76:	movsxd eax,DWORD PTR [rdx+0x1]
   140029d79:	and    r8b,BYTE PTR [r13+0x375819bd]
   140029d80:	leave  
   140029d81:	push   rbp
   140029d82:	or     al,0xb6
   140029d84:	lods   eax,DWORD PTR ds:[rsi]
   140029d85:	(bad)  
   140029d86:	jbe    0x140029deb
   140029d88:	loop   0x140029db6
   140029d8a:	repz out dx,al
   140029d8c:	mov    gs,eax
   140029d8e:	retf   
   140029d8f:	scas   eax,DWORD PTR es:[rdi]
   140029d90:	mov    dl,0x1c
   140029d92:	or     eax,0x92b35ac4
   140029d97:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029d98:	sbb    bl,ah
   140029d9a:	sub    al,0xb
   140029d9c:	fucomip st,st(5)
   140029d9e:	ficomp DWORD PTR [rdx]
   140029da0:	push   rbx
   140029da1:	jg     0x140029d3b
   140029da3:	sub    eax,0x55d89
   140029da8:	fwait
   140029da9:	and    eax,0x908bd26e
   140029dae:	mov    dl,0x9c
   140029db0:	ret    
   140029db1:	out    dx,eax
   140029db2:	mov    esi,0xec181693
   140029db7:	pop    rsp
   140029db8:	add    DWORD PTR [rcx-0xa],edx
   140029dbb:	rex mov edi,0xbee6e7f3
   140029dc1:	outs   dx,DWORD PTR ds:[rsi]
   140029dc2:	(bad)  
   140029dc3:	(bad)  [rdi-0x13aea01b]
   140029dc9:	cs retf 
   140029dcb:	rex.WRX pop rbp
   140029dcd:	leave  
   140029dce:	(bad)  
   140029dcf:	fld    TBYTE PTR [rcx+0x62]
   140029dd2:	push   0x63
   140029dd4:	and    al,0xfb
   140029dd6:	outs   dx,BYTE PTR ds:[rsi]
   140029dd7:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140029dd9:	cmp    eax,0xe41122bb
   140029dde:	ror    DWORD PTR [rcx+0x26e3cb9d],cl
   140029de4:	or     edi,DWORD PTR [rcx+0x64]
   140029de7:	movabs rsp,0x8318c230a8db8a82
   140029df1:	ss xchg esi,eax
   140029df3:	rex.WR
   140029df4:	rex.WRB mov r13b,0xe6
   140029df7:	imul   eax,DWORD PTR fs:[rbp-0x122168fc],0xffffffd1
   140029dff:	mov    DWORD PTR [rsi+0x34],edi
   140029e02:	add    DWORD PTR [rbx+0x20],ebp
   140029e05:	cmc    
   140029e06:	mov    dl,0x8c
   140029e08:	push   rsi
   140029e09:	(bad)  
   140029e0a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140029e0b:	ins    BYTE PTR es:[rdi],dx
   140029e0c:	fcom   DWORD PTR [rdx+rcx*4]
   140029e0f:	pop    rdi
   140029e10:	mov    ebp,0x2ae66963
   140029e15:	or     ecx,DWORD PTR [rbx]
   140029e17:	pop    QWORD PTR [rcx+rbx*1+0x15d920c9]
   140029e1e:	add    BYTE PTR [rax+0x4cec08f9],dh
   140029e24:	icebp  
   140029e25:	xor    al,BYTE PTR [rax+rbx*2]
   140029e28:	int3   
   140029e29:	repz (bad) 
   140029e2b:	jbe    0x140029e0d
   140029e2d:	xor    bh,BYTE PTR [rsi+0x7628f76f]
   140029e33:	(bad)  
   140029e34:	and    eax,0xb54c605f
   140029e39:	jae    0x140029dd2
   140029e3b:	scas   al,BYTE PTR es:[rdi]
   140029e3c:	adc    edi,0x2b69df70
   140029e42:	outs   dx,DWORD PTR ds:[rsi]
   140029e43:	jbe    0x140029dd9
   140029e45:	sbb    QWORD PTR [rax-0x65],rdx
   140029e49:	mov    ebp,0x5ee80c0e
   140029e4e:	(bad)  
   140029e4f:	xchg   ebx,eax
   140029e50:	test   DWORD PTR es:[rdx-0x7d8c3eb],eax
   140029e57:	cmp    cl,BYTE PTR [rdx]
   140029e59:	(bad)  
   140029e5a:	adc    al,0x33
   140029e5c:	in     eax,dx
   140029e5d:	cld    
   140029e5e:	sbb    eax,0x742c30a4
   140029e63:	(bad)  
   140029e64:	(bad)  
   140029e65:	ja     0x140029e21
   140029e67:	cmp    DWORD PTR [rdi+0x6d],0x1f
   140029e6b:	(bad)  
   140029e6c:	push   0xffffffffffffffdf
   140029e6e:	hlt    
   140029e6f:	bnd ret 0x6ea2
   140029e73:	(bad)  
   140029e74:	fist   WORD PTR [rdx+0x72da7282]
   140029e7a:	jno    0x140029e6e
   140029e7c:	add    dl,BYTE PTR [rax+0x59660ecd]
   140029e82:	pop    rsi
   140029e83:	pop    rdi
   140029e84:	sbb    DWORD PTR [rdx-0x4d553e5b],ebp
   140029e8a:	cmc    
   140029e8b:	xchg   di,ax
   140029e8d:	sub    DWORD PTR [rax],ebp
   140029e8f:	add    al,cl
   140029e91:	xchg   ebp,eax
   140029e92:	pop    rdi
   140029e93:	(bad)  
   140029e95:	push   rbp
   140029e96:	pop    rdi
   140029e97:	mov    eax,0x8baa370f
   140029e9c:	(bad)  
   140029e9d:	xchg   ebp,eax
   140029e9e:	rex.RX xchg eax,eax
   140029ea0:	mov    ebx,0x455ef901
   140029ea5:	(bad)  
   140029ea6:	retf   0x1d14
   140029ea9:	push   rdi
   140029eaa:	and    al,dl
   140029eac:	stc    
   140029ead:	call   0x116259fdb
   140029eb2:	or     cl,BYTE PTR [rdx-0x392ef313]
   140029eb8:	nop
   140029eb9:	(bad)  
   140029eba:	sub    edx,DWORD PTR [rax+0x206508c6]
   140029ec0:	rex.WXB mov dl,r13b
   140029ec3:	or     DWORD PTR [rbx-0x5b],0x37
   140029ec7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140029ec9:	test   ch,bh
   140029ecb:	in     al,dx
   140029ecc:	stos   BYTE PTR es:[rdi],al
   140029ecd:	call   FWORD PTR [rdx-0xa0c56ae]
   140029ed3:	or     dh,BYTE PTR [rbp-0xb1063cf]
   140029ed9:	adc    dl,al
   140029edb:	(bad)  
   140029edc:	xchg   DWORD PTR [rdi+rdi*4-0x23],edi
   140029ee0:	fnstsw WORD PTR [rax+0x63]
   140029ee3:	xchg   edi,eax
   140029ee4:	movsxd esi,DWORD PTR [rax-0x13]
   140029ee7:	(bad)  
   140029ee8:	fistp  WORD PTR [rdx+0x3be89c3e]
   140029eee:	mov    BYTE PTR [rax],0x12
   140029ef1:	ret    0x5240
   140029ef4:	mov    ebx,DWORD PTR [rdi+rbx*2-0x27]
   140029ef8:	leave  
   140029ef9:	ja     0x140029ef2
   140029efb:	cmc    
   140029efc:	xchg   ecx,eax
   140029efd:	movabs eax,ds:0x66d55b8fc2b600b2
   140029f06:	ds pop rdx
   140029f08:	adc    al,0x53
   140029f0a:	jnp    0x140029f49
   140029f0c:	loop   0x140029f57
   140029f0e:	out    0xae,eax
   140029f10:	add    DWORD PTR [rdx],esi
   140029f12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029f13:	pop    rax
   140029f14:	repnz rcl BYTE PTR [rdx+rcx*2-0x59cc73a2],cl
   140029f1c:	lods   al,BYTE PTR ds:[rsi]
   140029f1d:	lahf   
   140029f1e:	out    0x67,eax
   140029f20:	adc    dl,BYTE PTR [rsi+0x7e8a6fca]
   140029f26:	sahf   
   140029f27:	cwde   
   140029f28:	mov    WORD PTR [rdi+riz*1-0x7],ss
   140029f2c:	(bad)  
   140029f2d:	in     al,dx
   140029f2e:	in     al,dx
   140029f2f:	(bad)  
   140029f30:	push   0xffffffffffffffd2
   140029f32:	cwde   
   140029f33:	in     al,0xec
   140029f35:	retf   
   140029f36:	call   0xc9f202f3
   140029f3b:	(bad)  
   140029f3c:	jo     0x140029f24
   140029f3e:	jle    0x140029f49
   140029f40:	xchg   edx,eax
   140029f41:	jns    0x140029f77
   140029f43:	rcr    BYTE PTR [rip+0xffffffffc3a45da4],0xf3        # 0x103a6fcee
   140029f4a:	fdiv   st,st(3)
   140029f4c:	mov    bh,0xc6
   140029f4e:	push   0xffffffffea255d32
   140029f53:	test   BYTE PTR [rdi-0x668ec451],dh
   140029f59:	imul   esp,eax,0xffffffdf
   140029f5c:	movabs ds:0x167f215b15c7bbdc,eax
   140029f65:	(bad)  
   140029f66:	or     BYTE PTR [rbx],al
   140029f68:	or     BYTE PTR [rdx],ah
   140029f6a:	mov    r11b,0x6
   140029f6d:	cmc    
   140029f6e:	mov    al,0xdf
   140029f70:	rcr    BYTE PTR [rdx],1
   140029f72:	sub    QWORD PTR [r11+0x6d],rax
   140029f76:	add    DWORD PTR [rcx+rcx*4-0x54],ebx
   140029f7a:	add    eax,0xe58bae20
   140029f7f:	stc    
   140029f80:	cmp    ch,al
   140029f82:	int3   
   140029f83:	pop    rbx
   140029f84:	or     eax,0x4a040d8
   140029f89:	in     eax,dx
   140029f8a:	fidiv  DWORD PTR [rdx+rbx*8]
   140029f8d:	mov    BYTE PTR [rax+rdx*4+0x41962b8f],bh
   140029f94:	ds repnz in eax,0x3d
   140029f98:	rcr    BYTE PTR [rbx-0x3461a110],1
   140029f9e:	(bad)  
   140029f9f:	or     DWORD PTR [rbx-0x42],edx
   140029fa2:	fdiv   QWORD PTR [rdi-0x2ffc63c5]
   140029fa8:	retf   
   140029fa9:	out    0x50,eax
   140029fab:	scas   eax,DWORD PTR es:[rdi]
   140029fac:	cmp    eax,0x4601948d
   140029fb1:	mov    rsi,ss
   140029fb4:	nop
   140029fb5:	data16 stc 
   140029fb7:	adc    al,0x5c
   140029fb9:	push   rcx
   140029fba:	lods   al,BYTE PTR ds:[rsi]
   140029fbb:	rex.R or al,0x8e
   140029fbe:	adc    eax,DWORD PTR [rax]
   140029fc0:	pop    rbp
   140029fc1:	(bad)  
   140029fc2:	(bad)  
   140029fc3:	xor    al,0xa7
   140029fc5:	and    BYTE PTR [rdi],al
   140029fc7:	cmp    DWORD PTR [rbx-0x14db3a12],ebp
   140029fcd:	(bad)  
   140029fce:	std    
   140029fcf:	fdivr  QWORD PTR [rsi-0x7efb419f]
   140029fd5:	xchg   edx,eax
   140029fd6:	rex.R cmc 
   140029fd8:	ja     0x140029f8e
   140029fda:	pop    rdi
   140029fdb:	rex.R push rdx
   140029fdd:	shr    BYTE PTR [rcx+rcx*1+0x11a191ea],1
   140029fe4:	cli    
   140029fe5:	rex.WXB xchg r8,rax
   140029fe7:	(bad)  
   140029fe8:	(bad)  
   140029fe9:	xchg   edi,eax
   140029fea:	movabs eax,ds:0x943d662e433600b2
   140029ff3:	out    0x39,al
   140029ff5:	gs std 
   140029ff7:	ds sti 
   140029ff9:	add    eax,0xc0a0431a
   140029ffe:	add    al,0xa1
   14002a000:	pop    rbp
   14002a001:	mov    bl,al
   14002a003:	outs   dx,DWORD PTR ds:[rsi]
   14002a004:	retf   
   14002a005:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a006:	lahf   
   14002a007:	(bad)  
   14002a008:	jle    0x14002a049
   14002a00a:	(bad)
   14002a00d:	cmp    DWORD PTR [rdx],ecx
   14002a00f:	and    eax,0x740c504f
   14002a014:	mov    dl,0xff
   14002a016:	and    al,0x3b
   14002a018:	push   rsp
   14002a019:	je     0x14002a08a
   14002a01b:	cdq    
   14002a01c:	in     al,0xa9
   14002a01e:	mov    edi,0x22af3382
   14002a023:	push   0x63
   14002a025:	mov    dh,0xb4
   14002a027:	push   rdi
   14002a028:	shl    BYTE PTR [rbp-0x26a87faa],cl
   14002a02e:	enter  0xd68d,0x2e
   14002a032:	int3   
   14002a033:	sub    DWORD PTR [rdx-0x1d],ebp
   14002a036:	hlt    
   14002a037:	or     BYTE PTR [rcx+0x5a],bl
   14002a03a:	mov    edx,0xa901dd60
   14002a03f:	sub    al,0xb9
   14002a041:	sub    al,BYTE PTR [rcx+rbx*2+0x28]
   14002a045:	(bad)  
   14002a048:	(bad)
   14002a04c:	(bad)  
   14002a04d:	push   rsp
   14002a04e:	jle    0x14002a042
   14002a050:	stos   BYTE PTR es:[rdi],al
   14002a051:	or     DWORD PTR [rbp-0x6c0b52f5],edx
   14002a057:	clts   
   14002a059:	mov    BYTE PTR [rsp+rcx*4],dl
   14002a05c:	(bad)  
   14002a05d:	movabs al,ds:0x5f5f7b9dc2d49359
   14002a066:	outs   dx,DWORD PTR ds:[rsi]
   14002a067:	mov    ecx,0x636000aa
   14002a06c:	outs   dx,BYTE PTR ds:[rsi]
   14002a06d:	rex.XB leave 
   14002a06f:	shr    BYTE PTR [rbx+0x43],1
   14002a072:	mov    cl,0x40
   14002a074:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a075:	and    esi,ebp
   14002a077:	add    ah,BYTE PTR [rip+0x5888a2c8]        # 0x1988b4345
   14002a07d:	rex.WRB movabs r11,0xd9e23c3345b807ee
   14002a087:	cwde   
   14002a088:	mov    dl,0x63
   14002a08a:	out    0x56,eax
   14002a08c:	xor    DWORD PTR [rbx+0xb],0xa85d1b00
   14002a093:	mov    edx,0x9fb43ba5
   14002a098:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a099:	lods   eax,DWORD PTR ds:[rsi]
   14002a09a:	jae    0x14002a090
   14002a09c:	mov    esi,0x9ec91ff2
   14002a0a1:	std    
   14002a0a2:	sbb    al,0xaa
   14002a0a4:	outs   dx,BYTE PTR ss:[rsi]
   14002a0a6:	(bad)  
   14002a0a7:	es cmp eax,0x22edb5e8
   14002a0ad:	and    al,0x39
   14002a0af:	not    ecx
   14002a0b1:	ja     0x14002a12e
   14002a0b3:	popf   
   14002a0b4:	and    DWORD PTR [rsp+rax*2],edx
   14002a0b7:	and    al,0x28
   14002a0b9:	jp     0x14002a12c
   14002a0bb:	xlat   BYTE PTR ds:[rbx]
   14002a0bc:	movabs ds:0xf30c67e820e81482,al
   14002a0c5:	cwde   
   14002a0c6:	jg     0x14002a0b9
   14002a0c8:	mov    ecx,0x14bf6fef
   14002a0cd:	js     0x14002a0fa
   14002a0cf:	or     eax,0xf0a4194a
   14002a0d4:	rcl    ah,0x93
   14002a0d7:	push   rax
   14002a0d8:	or     esi,eax
   14002a0da:	and    bh,bl
   14002a0dc:	stos   BYTE PTR es:[rdi],al
   14002a0dd:	add    eax,0x701a230
   14002a0e2:	retf   
   14002a0e3:	scas   al,BYTE PTR es:[rdi]
   14002a0e4:	ja     0x14002a0e7
   14002a0e6:	cs popf 
   14002a0e8:	sub    ecx,eax
   14002a0ea:	xchg   ebp,eax
   14002a0eb:	push   rsi
   14002a0ec:	sbb    BYTE PTR [rsp+rdx*1-0x1a6119bb],ah
   14002a0f3:	scas   al,BYTE PTR es:[rdi]
   14002a0f4:	jb     0x14002a101
   14002a0f6:	movabs al,ds:0x858bac669c388a6
   14002a0ff:	sub    eax,0x8de32608
   14002a104:	rex.B hlt 
   14002a106:	jne    0x14002a0f4
   14002a108:	push   rbp
   14002a109:	xlat   BYTE PTR ds:[rbx]
   14002a10a:	loope  0x14002a0c5
   14002a10c:	ret    
   14002a10d:	cmp    edx,ebp
   14002a10f:	in     al,dx
   14002a110:	xlat   BYTE PTR ds:[rbx]
   14002a111:	imul   ecx,DWORD PTR [rdi-0x77481708],0xa817f1bf
   14002a11b:	movsxd ecx,edi
   14002a11d:	pop    rdx
   14002a11e:	in     eax,0x17
   14002a120:	add    dl,BYTE PTR [rbx-0x5e962f3c]
   14002a126:	xchg   ebx,eax
   14002a127:	cs rex.WRX ror rbx,cl
   14002a12b:	sar    DWORD PTR [rsp-0x77ef5b15],1
   14002a132:	fidivr DWORD PTR [rax]
   14002a134:	ins    DWORD PTR es:[rdi],dx
   14002a135:	or     eax,0xfbd89a49
   14002a13a:	sub    DWORD PTR [rdx+rdx*2],edx
   14002a13d:	test   esi,esi
   14002a13f:	add    al,0x3e
   14002a141:	xor    edi,edx
   14002a143:	xchg   edi,eax
   14002a144:	loope  0x14002a1ad
   14002a146:	mov    esp,0x2d2d2886
   14002a14b:	movsxd edx,DWORD PTR [rdi]
   14002a14d:	push   0xffffffffffffff95
   14002a14f:	xchg   ecx,eax
   14002a150:	(bad)  
   14002a151:	mov    esp,0xd0b1926
   14002a156:	push   rdx
   14002a157:	mov    eax,0xda29ce75
   14002a15c:	xor    al,BYTE PTR [rsi]
   14002a15e:	push   rsp
   14002a15f:	(bad)  
   14002a160:	pop    rbp
   14002a161:	sbb    BYTE PTR [rdx-0x80],0x5
   14002a165:	adc    BYTE PTR [rcx+0x5d940ffe],0x7
   14002a16c:	add    BYTE PTR [rbx-0x22e9f1bf],bl
   14002a172:	mov    dl,0x20
   14002a174:	xchg   ebp,eax
   14002a175:	ins    BYTE PTR es:[rdi],dx
   14002a176:	out    dx,eax
   14002a177:	(bad)  
   14002a178:	fisub  DWORD PTR [rax]
   14002a17a:	xchg   ebp,eax
   14002a17b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a17c:	pop    rbx
   14002a17d:	push   rbx
   14002a17e:	mov    ah,0xa3
   14002a180:	std    
   14002a181:	int3   
   14002a182:	(bad)  
   14002a183:	adc    al,0xbb
   14002a185:	xchg   bp,ax
   14002a187:	hlt    
   14002a188:	pop    rcx
   14002a189:	mov    al,0x92
   14002a18b:	adc    esi,eax
   14002a18d:	or     DWORD PTR [rbx],ebp
   14002a18f:	push   rdi
   14002a190:	movsxd edx,eax
   14002a192:	xchg   esp,eax
   14002a193:	in     al,dx
   14002a194:	mov    ch,0xa9
   14002a196:	xchg   BYTE PTR [rdi-0x509abd06],ah
   14002a19c:	scas   eax,DWORD PTR es:[rdi]
   14002a19d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a19e:	jae    0x14002a1e7
   14002a1a0:	mov    DWORD PTR [rdi+0x3fe930fd],edi
   14002a1a6:	jle    0x14002a129
   14002a1a8:	movabs al,ds:0x7ff8d84009f50cbb
   14002a1b1:	ja     0x14002a1bc
   14002a1b3:	rcr    DWORD PTR [rbp-0x32],cl
   14002a1b6:	rex.RXB jg 0x14002a224
   14002a1b9:	jmp    0x150eab1d2
   14002a1be:	push   rbx
   14002a1bf:	imul   edi,DWORD PTR [rbx+0x5ec4c920],0xffffff96
   14002a1c6:	xchg   esi,eax
   14002a1c7:	xchg   esi,eax
   14002a1c8:	xchg   rbx,rax
   14002a1ca:	adc    al,0x21
   14002a1cc:	and    al,0x46
   14002a1ce:	rex.WB or r10b,al
   14002a1d1:	dec    BYTE PTR [rax-0x3f]
   14002a1d4:	pop    rdx
   14002a1d5:	cs nop
   14002a1d7:	(bad)  
   14002a1d8:	mov    dh,BYTE PTR [rbp-0x5a]
   14002a1db:	jg     0x14002a22a
   14002a1dd:	or     esi,eax
   14002a1df:	(bad)  
   14002a1e0:	xor    cl,bl
   14002a1e2:	adc    BYTE PTR [rsp+rdx*4],dh
   14002a1e5:	lods   eax,DWORD PTR ds:[rsi]
   14002a1e6:	add    ah,BYTE PTR [rdx+rcx*4-0x23]
   14002a1ea:	jb     0x14002a1e4
   14002a1ec:	adc    eax,0xb182a10
   14002a1f1:	add    eax,0xb5048b5
   14002a1f6:	in     al,0x96
   14002a1f8:	pop    rcx
   14002a1f9:	add    bl,al
   14002a1fb:	pushf  
   14002a1fc:	add    al,0x4
   14002a1fe:	mov    ebx,0x43360010
   14002a203:	ins    BYTE PTR es:[rdi],dx
   14002a204:	push   rdi
   14002a205:	adc    esi,DWORD PTR [rsi-0x37ce5852]
   14002a20b:	pushf  
   14002a20c:	mov    ah,0x92
   14002a20e:	and    BYTE PTR [rsi+r12*1-0xa25b657],r10b
   14002a216:	std    
   14002a217:	jbe    0x14002a228
   14002a219:	movsxd esi,DWORD PTR [rbx+0x152c84fc]
   14002a21f:	mov    esp,0x72001c8
   14002a224:	add    edi,DWORD PTR [rdi+0x911553c]
   14002a22a:	sub    bh,ah
   14002a22c:	or     eax,0xd78d5b8
   14002a231:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a232:	sub    BYTE PTR [rcx-0x31768503],bh
   14002a238:	(bad)  
   14002a239:	jp     0x14002a26a
   14002a23b:	jl     0x14002a1c6
   14002a23d:	hlt    
   14002a23e:	test   eax,0x7a9c46bf
   14002a243:	xchg   ecx,eax
   14002a244:	and    BYTE PTR [rdx-0x52d9cbd],ch
   14002a24a:	cli    
   14002a24b:	mov    ebp,0x5af4c15
   14002a250:	mov    ebp,0x93e89db6
   14002a255:	paddw  mm0,QWORD PTR [rsi]
   14002a258:	or     eax,0xffffff8b
   14002a25b:	pushf  
   14002a25c:	(bad)  
   14002a25d:	cs nop
   14002a25f:	mov    BYTE PTR ss:[rdx-0x6d],bh
   14002a263:	je     0x14002a24f
   14002a265:	xor    BYTE PTR [rbx+0xb],dh
   14002a268:	out    0x48,eax
   14002a26a:	xchg   ebx,eax
   14002a26b:	cs rex.WX
   14002a26d:	rex.WB mov BYTE PTR [r10],spl
   14002a270:	push   rsp
   14002a271:	adc    al,0xf5
   14002a273:	sti    
   14002a274:	repnz push rbp
   14002a276:	std    
   14002a277:	test   eax,0xc1600a12
   14002a27c:	sbb    BYTE PTR [rcx+0x14],al
   14002a27f:	or     BYTE PTR [rsi],ah
   14002a281:	jmp    0x14002a215
   14002a283:	mov    DWORD PTR [rdx],edi
   14002a285:	(bad)  
   14002a286:	fs mov esi,0xd8558c4
   14002a28c:	xor    al,0xc6
   14002a28e:	rex.WRX and QWORD PTR [rsi-0x2a],r13
   14002a292:	and    al,0x81
   14002a294:	adc    cl,BYTE PTR [rax+0x36]
   14002a297:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a298:	or     al,0xd8
   14002a29a:	outs   dx,BYTE PTR ds:[rsi]
   14002a29b:	xchg   esp,eax
   14002a29c:	pop    rbp
   14002a29d:	add    eax,0xfa359b00
   14002a2a2:	mov    ebx,0xf2631274
   14002a2a7:	and    eax,0xe6a29cc2
   14002a2ac:	cmc    
   14002a2ad:	add    DWORD PTR [rbp+rcx*2-0x2d],edx
   14002a2b1:	sbb    DWORD PTR [rbx],edi
   14002a2b3:	rex.WR stos BYTE PTR es:[rdi],al
   14002a2b5:	mov    al,0xa4
   14002a2b8:	in     al,0xc
   14002a2ba:	(bad)  
   14002a2bb:	jno    0x14002a2ca
   14002a2bd:	outs   dx,BYTE PTR ds:[rsi]
   14002a2be:	mov    ah,0xef
   14002a2c0:	repz or ax,WORD PTR [rax+rcx*8+0x15]
   14002a2c6:	(bad)  
   14002a2c7:	icebp  
   14002a2c8:	(bad)  
   14002a2c9:	jle    0x14002a2df
   14002a2cb:	rol    BYTE PTR [rax-0x50cb263],0x50
   14002a2d2:	xor    ecx,ecx
   14002a2d4:	cdq    
   14002a2d5:	xchg   edi,eax
   14002a2d6:	call   0xd83a9818
   14002a2db:	(bad)  
   14002a2dc:	call   FWORD PTR [rsi]
   14002a2de:	sbb    DWORD PTR [rdi-0x54d672ef],esi
   14002a2e4:	test   al,0x4a
   14002a2e6:	(bad)  
   14002a2e7:	sbb    eax,0x20000096
   14002a2ec:	add    BYTE PTR [rcx+0x44],cl
   14002a2ef:	push   r12
   14002a2f1:	jno    0x14002a2fa
   14002a2f3:	rcr    DWORD PTR [rbp-0x3a],cl
   14002a2f6:	hlt    
   14002a2f7:	pop    rdx
   14002a2f8:	push   rsi
   14002a2f9:	icebp  
   14002a2fa:	jne    0x14002a2e2
   14002a2fc:	jmp    0x1a8736166
   14002a301:	call   FWORD PTR [rbp-0x7372e7bd]
   14002a307:	(bad)  
   14002a308:	and    al,0x7b
   14002a30a:	outs   dx,BYTE PTR ds:[rsi]
   14002a30b:	in     al,0xdc
   14002a30d:	rcl    edi,1
   14002a30f:	call   0xce4f5e08
   14002a314:	rex.WRXB and r8b,r11b
   14002a317:	or     BYTE PTR [rdx+0x794e5ac8],al
   14002a31d:	jge    0x14002a2dd
   14002a31f:	(bad)  
   14002a320:	mov    ch,BYTE PTR [rdi-0x15c6e1cf]
   14002a326:	jl     0x14002a2cf
   14002a328:	mov    esp,0x128e4808
   14002a32d:	(bad)  
   14002a32e:	add    BYTE PTR [rbx+rdx*1],al
   14002a331:	jne    0x14002a374
   14002a333:	sub    ah,bh
   14002a335:	sbb    al,BYTE PTR [rcx]
   14002a337:	mov    dh,0x25
   14002a339:	(bad)  
   14002a33a:	push   rdx
   14002a33b:	cmp    bh,ch
   14002a33d:	int3   
   14002a33e:	lods   eax,DWORD PTR ds:[rsi]
   14002a33f:	(bad)  
   14002a340:	mov    esp,0x23cc3279
   14002a345:	jle    0x14002a39c
   14002a347:	xchg   BYTE PTR [rsi],bl
   14002a349:	add    BYTE PTR [rsi],dh
   14002a34b:	sti    
   14002a34c:	(bad)  
   14002a34d:	clc    
   14002a34e:	jl     0x14002a302
   14002a350:	rex (bad) 
   14002a352:	rex.R fnstcw WORD PTR [rcx+0x560e1d0b]
   14002a359:	pop    rax
   14002a35a:	(bad)  
   14002a35b:	mov    eax,0xa2983881
   14002a360:	fidivr WORD PTR [rbx]
   14002a362:	xchg   DWORD PTR [rsi],edx
   14002a364:	in     eax,0x6d
   14002a366:	adc    al,0xa2
   14002a368:	sbb    al,0xfd
   14002a36a:	in     eax,dx
   14002a36b:	rex.B
   14002a36c:	rex.RX movabs al,gs:0x9dd6f30a75d595d1
   14002a377:	rcr    DWORD PTR [rbx+0x58],cl
   14002a37a:	je     0x14002a397
   14002a37c:	and    eax,0x9ef43b8b
   14002a381:	std    
   14002a382:	sub    al,0xfa
   14002a384:	fxch   st(7)
   14002a386:	movsxd ecx,esi
   14002a388:	sbb    eax,0xbb354645
   14002a38d:	jb     0x14002a3df
   14002a38f:	sbb    bl,BYTE PTR [rbx-0x3b]
   14002a392:	out    dx,eax
   14002a393:	mov    ah,0x4a
   14002a395:	(bad)  
   14002a396:	fbstp  TBYTE PTR [rbx+0x53]
   14002a399:	cli    
   14002a39a:	mov    ah,BYTE PTR [rbp-0x5c996920]
   14002a3a0:	clc    
   14002a3a1:	rex.WRX (bad) 
   14002a3a3:	(bad)  
   14002a3a4:	jmp    0x17b3b0b7d
   14002a3a9:	not    DWORD PTR [rbp+rbx*8-0x5d77d6b7]
   14002a3b0:	fadd   QWORD PTR [rip+0x6f202ef0]        # 0x1af22d2a6
   14002a3b6:	(bad)  
   14002a3b7:	or     al,0x4
   14002a3b9:	rex.WRB add rax,0x73db1f81
   14002a3bf:	out    0x41,al
   14002a3c1:	rex.WRX xor r8b,BYTE PTR [rsi-0x7d94d9ee]
   14002a3c8:	icebp  
   14002a3c9:	(bad)  
   14002a3ca:	sub    eax,0x6e552a06
   14002a3cf:	test   eax,0x54b9ed79
   14002a3d4:	in     al,dx
   14002a3d5:	rex.WR
   14002a3d6:	fwait
   14002a3d7:	mov    esp,0x716b305a
   14002a3dc:	mov    dl,BYTE PTR [rdi-0x6b644d4]
   14002a3e2:	(bad)  
   14002a3e3:	enter  0x6000,0x2b
   14002a3e7:	outs   dx,DWORD PTR ds:[rsi]
   14002a3e8:	mov    esi,0x245d99df
   14002a3ed:	shl    ch,0x3a
   14002a3f0:	add    DWORD PTR [rbp-0x66],eax
   14002a3f3:	mov    esi,0xa3d84c01
   14002a3f8:	cmp    eax,0xb6b8887e
   14002a3fd:	xchg   DWORD PTR [rdx-0x19],ebx
   14002a400:	mov    ah,0xad
   14002a402:	test   DWORD PTR [rdi-0x4a],ebx
   14002a405:	rex.R
   14002a406:	rex.WRX add al,0x78
   14002a409:	xor    DWORD PTR [rdx],eax
   14002a40b:	loope  0x14002a39a
   14002a40d:	push   0x5d2e1ef9
   14002a412:	mov    al,0x20
   14002a414:	mov    al,0xc0
   14002a416:	(bad)  
   14002a417:	rcl    ch,cl
   14002a419:	xchg   esi,eax
   14002a41a:	std    
   14002a41b:	mov    BYTE PTR [rcx-0x2e],0x3b
   14002a41f:	imul   BYTE PTR [rbp-0x1e]
   14002a422:	(bad)  
   14002a423:	(bad)  
   14002a424:	add    eax,0x990a7fdf
   14002a429:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a42a:	enter  0x84e6,0x5
   14002a42e:	mov    ebp,0x967412ce
   14002a433:	shl    BYTE PTR [rcx+0x7],1
   14002a436:	push   rdx
   14002a437:	sbb    eax,ebx
   14002a439:	ja     0x14002a440
   14002a43b:	cmp    DWORD PTR [rbp+0x2aaf6fe7],ecx
   14002a441:	mov    edi,0x9a4865ed
   14002a446:	jge    0x14002a47f
   14002a448:	jno    0x14002a478
   14002a44a:	xchg   BYTE PTR [rbx-0x7beeb119],dh
   14002a450:	add    DWORD PTR [rax],ecx
   14002a452:	mov    DWORD PTR [rax-0x72],ebp
   14002a455:	rex.XB adc al,0xba
   14002a458:	popf   
   14002a459:	lods   eax,DWORD PTR ds:[rsi]
   14002a45a:	mov    ecx,0x94d0401e
   14002a45f:	int3   
   14002a460:	mov    cs,WORD PTR [rcx]
   14002a462:	(bad)  
   14002a463:	rex.WX adc BYTE PTR [rdx-0x77],cl
   14002a467:	(bad)  
   14002a468:	(bad)  
   14002a469:	xchg   ebp,eax
   14002a46a:	lahf   
   14002a46b:	rex.RX mov BYTE PTR [rdx],r10b
   14002a46e:	xor    al,0x43
   14002a470:	add    eax,0x78c175e3
   14002a475:	pop    rbp
   14002a476:	and    dh,BYTE PTR [rcx+0x411959ee]
   14002a47c:	je     0x14002a41e
   14002a47e:	xchg   ecx,eax
   14002a47f:	jnp    0x14002a4d7
   14002a481:	in     al,0x99
   14002a483:	(bad)  
   14002a484:	jmp    0x14002a41a
   14002a486:	or     BYTE PTR [rdi-0x7ac91368],bh
   14002a48c:	scas   eax,DWORD PTR es:[rdi]
   14002a48d:	retf   0x150
   14002a490:	shl    BYTE PTR [rsi-0x35],0xe0
   14002a494:	xchg   ebx,ebp
   14002a496:	xor    ebx,edx
   14002a498:	jge    0x14002a4fc
   14002a49a:	mov    bh,0xb9
   14002a49c:	shl    BYTE PTR [rax-0x59],1
   14002a49f:	(bad)  
   14002a4a0:	mov    bl,0x3c
   14002a4a2:	cmc    
   14002a4a3:	ss es (bad) 
   14002a4a6:	mov    edi,0x239a3b63
   14002a4ab:	div    edx
   14002a4ad:	fs and bl,dl
   14002a4b0:	ja     0x14002a44e
   14002a4b2:	movabs eax,ds:0x2a817229a797758c
   14002a4bb:	(bad)  [rdi+0x22ced243]
   14002a4c1:	mov    ebp,0xf64b3ea7
   14002a4c6:	in     eax,dx
   14002a4c7:	dec    DWORD PTR [rdx+0x440595a]
   14002a4cd:	and    DWORD PTR [rsi],esp
   14002a4cf:	sbb    al,bl
   14002a4d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a4d2:	cmp    eax,0x7412cacc
   14002a4d7:	xchg   edi,eax
   14002a4d8:	and    DWORD PTR [rbx+0x27a2f911],ecx
   14002a4de:	(bad)
   14002a4e1:	(bad)  
   14002a4e2:	test   BYTE PTR [rdx+0x27add170],ah
   14002a4e8:	xchg   ebx,eax
   14002a4e9:	push   QWORD PTR [rsi-0x4c]
   14002a4ec:	mov    ebp,0xe1c34649
   14002a4f1:	fstp   TBYTE PTR [rcx]
   14002a4f3:	fld    QWORD PTR [rbx+0x538fa733]
   14002a4f9:	or     eax,DWORD PTR [rbx-0x58]
   14002a4fc:	(bad)  
   14002a4fd:	adc    ebp,ecx
   14002a4ff:	or     DWORD PTR [rax+0x6b9a9161],edx
   14002a505:	xor    cl,0x9a
   14002a508:	(bad)  
   14002a509:	data16 rex.X mov al,0xa7
   14002a50d:	imul   ebp,DWORD PTR [rbx-0x1b35f905],0xa1444135
   14002a517:	int3   
   14002a518:	es mov bh,0xa
   14002a51b:	and    al,BYTE PTR [rip+0x58c10de3]        # 0x198c3b304
   14002a521:	or     eax,0xf52204c8
   14002a526:	adc    dh,BYTE PTR [rcx-0xdf03684]
   14002a52c:	mov    cl,0xea
   14002a52e:	push   rdx
   14002a52f:	fs mov bh,0x2b
   14002a532:	mov    esi,0x12ab93
   14002a537:	(bad)  
   14002a538:	rex.WRXB add al,0xca
   14002a53b:	test   ecx,0xe6ea8ba
   14002a541:	mov    edx,0x31817a2b
   14002a546:	and    BYTE PTR [rip+0xffffffffad02f0ad],al        # 0xed0595f9
   14002a54c:	std    
   14002a54d:	ja     0x14002a572
   14002a54f:	mov    ?,esi
   14002a551:	cdq    
   14002a552:	lahf   
   14002a553:	fbld   TBYTE PTR [rdi-0x37]
   14002a556:	(bad)  
   14002a557:	outs   dx,DWORD PTR ds:[rsi]
   14002a558:	shr    bh,0xf3
   14002a55b:	xchg   ebp,eax
   14002a55c:	or     esi,DWORD PTR [rax+0x28]
   14002a55f:	rol    DWORD PTR [rcx+0x137f95fb],cl
   14002a565:	ins    DWORD PTR es:[rdi],dx
   14002a566:	(bad)  
   14002a567:	xor    eax,0x23bd00c4
   14002a56c:	pop    rdi
   14002a56d:	and    edi,ecx
   14002a56f:	cli    
   14002a570:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a571:	loopne 0x14002a557
   14002a573:	or     ebp,DWORD PTR [rax]
   14002a575:	add    al,0x22
   14002a577:	push   0x5ed30600
   14002a57c:	test   dh,cl
   14002a57e:	adc    dh,ah
   14002a580:	cmp    al,ch
   14002a582:	adc    ah,al
   14002a584:	(bad)  
   14002a585:	(bad)  
   14002a586:	nop
   14002a587:	adc    al,ah
   14002a589:	ins    BYTE PTR es:[rdi],dx
   14002a58a:	outs   dx,BYTE PTR ds:[rsi]
   14002a58b:	jle    0x14002a60c
   14002a58d:	(bad)  
   14002a58e:	movabs ds:0x6e072162d99cfa9c,al
   14002a597:	loop   0x14002a571
   14002a599:	jmp    0x15d3e59f1
   14002a59e:	(bad)  
   14002a59f:	sbb    esp,DWORD PTR [rbx-0x78]
   14002a5a2:	rex.RX adc r11d,ecx
   14002a5a5:	ins    BYTE PTR es:[rdi],dx
   14002a5a6:	(bad)  
   14002a5a7:	outs   dx,BYTE PTR ds:[rsi]
   14002a5a8:	adc    al,BYTE PTR [rax]
   14002a5aa:	sbb    bl,BYTE PTR [rdx+0x498ecc11]
   14002a5b0:	data16 mov BYTE PTR [rip+0xffffffff90209201],0x7d        # 0xd02337b9
   14002a5b8:	ja     0x14002a57b
   14002a5ba:	(bad)  
   14002a5bb:	cmc    
   14002a5bc:	lods   eax,DWORD PTR ds:[rsi]
   14002a5bd:	xchg   esp,eax
   14002a5be:	and    BYTE PTR [rdx+0x2],dl
   14002a5c1:	mov    DWORD PTR [rbx+rdx*4-0x7d],eax
   14002a5c5:	shr    DWORD PTR [rdx-0x5fe9b7a7],cl
   14002a5cb:	sbb    al,0xc0
   14002a5cd:	jp     0x14002a574
   14002a5cf:	sbb    bh,dl
   14002a5d1:	mov    edi,0xd2895737
   14002a5d6:	sti    
   14002a5d7:	jb     0x14002a62e
   14002a5d9:	add    eax,eax
   14002a5db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a5dc:	cmp    al,0x60
   14002a5de:	and    DWORD PTR [rbp-0x68],0x11686565
   14002a5e5:	cmp    DWORD PTR [rdi],esp
   14002a5e7:	and    BYTE PTR [rbx+0x43c9a584],ah
   14002a5ed:	mov    ah,0xc7
   14002a5ef:	fimul  WORD PTR [rax-0x43]
   14002a5f2:	cmc    
   14002a5f3:	sub    al,BYTE PTR [rsi+0x45]
   14002a5f6:	test   DWORD PTR [rdx+0x8],edi
   14002a5f9:	outs   dx,DWORD PTR ds:[rsi]
   14002a5fa:	mov    ah,0xf7
   14002a5fc:	lods   eax,DWORD PTR ds:[rsi]
   14002a5fd:	add    DWORD PTR [rbp-0x24],ebp
   14002a600:	test   BYTE PTR [rcx],ah
   14002a602:	xor    ebx,eax
   14002a604:	enter  0x62d8,0xe5
   14002a608:	rex.WRXB pop r11
   14002a60a:	out    0xe8,eax
   14002a60c:	jge    0x14002a5f1
   14002a60e:	(bad)  
   14002a60f:	leave  
   14002a610:	sahf   
   14002a611:	jnp    0x14002a617
   14002a613:	adc    eax,0xf68541b7
   14002a618:	div    esp
   14002a61a:	fcmovbe st,st(0)
   14002a61c:	pop    rsi
   14002a61d:	ret    0xedc4
   14002a620:	and    dh,BYTE PTR [rdi+riz*8+0x5114aac0]
   14002a627:	xchg   edx,eax
   14002a628:	cwde   
   14002a629:	test   DWORD PTR [rcx-0x50],ecx
   14002a62c:	cmp    bh,BYTE PTR [rax+0x19002366]
   14002a632:	(bad)  
   14002a633:	out    0x3a,al
   14002a635:	xchg   esi,eax
   14002a636:	movsx  edx,WORD PTR [rbx+0x37febf17]
   14002a63d:	push   rsi
   14002a63e:	(bad)  
   14002a63f:	xchg   ebp,eax
   14002a640:	rex.X mov WORD PTR [rbp+0x22],cs
   14002a644:	movabs ds:0x9ab1fa476595a506,al
   14002a64d:	(bad)  
   14002a64e:	iret   
   14002a64f:	cwde   
   14002a650:	fs jbe 0x14002a69f
   14002a653:	movabs ds:0x437e529aa28488d0,al
   14002a65c:	jno    0x14002a6dc
   14002a65e:	cwde   
   14002a65f:	mov    ch,0x36
   14002a661:	sbb    al,0x80
   14002a663:	jp     0x14002a6ad
   14002a665:	jmp    0x14002a615
   14002a667:	sar    DWORD PTR [rdi+0x6e674a16],1
   14002a66d:	sub    eax,0xde951ab9
   14002a672:	xchg   edi,eax
   14002a673:	stos   DWORD PTR es:[rdi],eax
   14002a674:	(bad)  
   14002a675:	add    BYTE PTR [rsi],ch
   14002a677:	in     eax,0x41
   14002a679:	sti    
   14002a67a:	out    0xbb,al
   14002a67c:	jbe    0x14002a62a
   14002a67e:	jge    0x14002a641
   14002a680:	rex.WRX fist DWORD PTR [rdi-0x3818ce6f]
   14002a687:	imul   ebp,DWORD PTR [rsp+rbx*2-0x3a32c88d],0xffffffef
   14002a68f:	(bad)  
   14002a690:	lods   eax,DWORD PTR fs:[rsi]
   14002a692:	xor    ch,BYTE PTR [rdx-0x63490175]
   14002a698:	add    eax,0x14494da0
   14002a69d:	(bad)  
   14002a69e:	cmc    
   14002a69f:	add    al,0xf2
   14002a6a1:	mov    ebp,0xa02d81b4
   14002a6a6:	add    BYTE PTR [rdx+rbx*8-0x5d],cl
   14002a6aa:	div    edx
   14002a6ac:	xlat   BYTE PTR ds:[rbx]
   14002a6ad:	mov    BYTE PTR [rdi-0x4c37980a],bh
   14002a6b3:	scas   eax,DWORD PTR es:[rdi]
   14002a6b4:	movabs al,ds:0xee98269def2dba82
   14002a6bd:	add    eax,0x4985a74c
   14002a6c2:	shl    DWORD PTR [rdx],cl
   14002a6c4:	repnz push rcx
   14002a6c6:	mov    ebp,0xe9fb2507
   14002a6cb:	pop    rbp
   14002a6cc:	stos   DWORD PTR es:[rdi],eax
   14002a6cd:	and    eax,DWORD PTR [rbx]
   14002a6cf:	sti    
   14002a6d0:	outs   dx,BYTE PTR ds:[rsi]
   14002a6d1:	stos   DWORD PTR es:[rdi],eax
   14002a6d2:	jae    0x14002a749
   14002a6d4:	and    BYTE PTR [rsp+rdi*2],bh
   14002a6d7:	or     eax,edi
   14002a6d9:	rol    BYTE PTR [rax+0x48bc8f97],cl
   14002a6df:	movabs al,ds:0x502624f8e4754414
   14002a6e8:	fidiv  WORD PTR [rcx]
   14002a6ea:	jbe    0x14002a722
   14002a6ec:	in     al,0x58
   14002a6ee:	and    al,0x98
   14002a6f0:	sbb    DWORD PTR [rbx+0x4020a6e9],eax
   14002a6f6:	mov    al,0xbc
   14002a6f8:	test   BYTE PTR [rdi-0x6f],cl
   14002a6fb:	(bad)  
   14002a6fd:	push   0x1744be0a
   14002a702:	stc    
   14002a703:	sbb    esi,ebx
   14002a705:	jns    0x14002a74c
   14002a707:	jmp    QWORD PTR [rbp+0x8]
   14002a70a:	or     al,0xda
   14002a70c:	in     al,0x15
   14002a70e:	cdq    
   14002a70f:	(bad)  
   14002a710:	add    BYTE PTR [rcx+0x61f95dab],al
   14002a716:	enter  0xa000,0x1a
   14002a71a:	push   rbx
   14002a71b:	pop    rdi
   14002a71c:	outs   dx,DWORD PTR ds:[rsi]
   14002a71d:	mov    edi,0xcf52912b
   14002a722:	pop    rbp
   14002a723:	rex.RB (bad) 
   14002a725:	out    0xaf,eax
   14002a727:	xchg   edi,eax
   14002a728:	sub    al,0x37
   14002a72a:	ret    0x8ad0
   14002a72d:	pop    rdx
   14002a72e:	lods   al,BYTE PTR ds:[rsi]
   14002a72f:	sbb    al,0xbc
   14002a731:	(bad)
   14002a735:	mov    ecx,esp
   14002a737:	(bad)  
   14002a738:	jmp    0x14002a715
   14002a73a:	out    0x2d,al
   14002a73c:	clc    
   14002a73d:	loope  0x14002a6ff
   14002a73f:	movabs ds:0xfd54d1c2fd714355,al
   14002a748:	cmp    eax,0xc55379
   14002a74d:	frndint 
   14002a74f:	xor    DWORD PTR [rdx],edi
   14002a751:	rex.WRXB jle 0x14002a76e
   14002a754:	repz popf 
   14002a756:	dec    DWORD PTR [rdi]
   14002a758:	xchg   ebp,eax
   14002a759:	gs jbe 0x14002a760
   14002a75c:	(bad)  
   14002a75d:	push   rdx
   14002a75e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002a760:	add    eax,0xc4c25ed3
   14002a765:	pop    rbp
   14002a766:	retf   0xb6b9
   14002a769:	xchg   esp,eax
   14002a76a:	mov    di,0xccf6
   14002a76e:	jnp    0x14002a7c1
   14002a770:	sbb    eax,0x58dfbd69
   14002a775:	xchg   BYTE PTR [rax],dh
   14002a777:	jo     0x14002a7d9
   14002a779:	and    DWORD PTR [rdx+rax*2+0x7c83f3bf],eax
   14002a780:	out    0xa5,eax
   14002a782:	(bad)  
   14002a783:	pop    rcx
   14002a784:	pop    rax
   14002a785:	pop    rsp
   14002a786:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a787:	(bad)  
   14002a788:	rex.RX enter 0x38e6,0x6a
   14002a78d:	(bad)  
   14002a78e:	retf   0x5396
   14002a791:	retf   0xfbe8
   14002a794:	int    0x8d
   14002a796:	or     BYTE PTR [rsi-0x65],ah
   14002a799:	xchg   edx,eax
   14002a79a:	cdq    
   14002a79b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a79c:	sbb    al,BYTE PTR [rcx+0x67]
   14002a7a0:	(bad)
   14002a7a3:	mov    edi,ss
   14002a7a5:	jbe    0x14002a785
   14002a7a7:	ds out dx,al
   14002a7a9:	pop    rcx
   14002a7aa:	mov    BYTE PTR [rdi*2-0x247d4a9e],bh
   14002a7b1:	test   al,0x61
   14002a7b3:	rex.WRX (bad) 
   14002a7b5:	sbb    dl,BYTE PTR [rbx+0x4c]
   14002a7b8:	add    al,0xda
   14002a7ba:	sub    al,BYTE PTR [rbp+0x1920661f]
   14002a7c0:	sub    al,BYTE PTR [rax]
   14002a7c2:	fcomp  DWORD PTR [rsi]
   14002a7c4:	icebp  
   14002a7c5:	movsxd ebx,edx
   14002a7c7:	and    BYTE PTR [rax+rbp*1-0x377d50f8],ah
   14002a7ce:	retf   
   14002a7cf:	sti    
   14002a7d0:	pop    rbx
   14002a7d1:	pop    rbx
   14002a7d2:	cs jno 0x14002a836
   14002a7d5:	out    dx,eax
   14002a7d6:	sub    eax,0xcadccecc
   14002a7db:	fsubr  st,st(1)
   14002a7dd:	outs   dx,DWORD PTR ds:[rsi]
   14002a7de:	movabs al,ds:0x81ceb6178d181aa3
   14002a7e7:	and    BYTE PTR [rdi-0x26],ch
   14002a7ea:	push   rsp
   14002a7eb:	(bad)  
   14002a7ec:	jrcxz  0x14002a84a
   14002a7ee:	(bad)  
   14002a7ef:	sub    eax,0xcee9fc88
   14002a7f4:	add    eax,0x4abe9792
   14002a7f9:	out    dx,eax
   14002a7fa:	stos   DWORD PTR es:[rdi],eax
   14002a7fb:	call   FWORD PTR [rcx]
   14002a7fd:	xor    DWORD PTR [rdi-0x74],esi
   14002a800:	movabs al,ds:0x659df8ab02098e3e
   14002a809:	rex.WR movabs rsp,0xd711b8cc956a6902
   14002a813:	hlt    
   14002a814:	sub    eax,0x690aea04
   14002a819:	mov    BYTE PTR [rbp+0x18],dl
   14002a81c:	gs rex.RXB cli 
   14002a81f:	(bad)  
   14002a820:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a821:	retf   
   14002a822:	jae    0x14002a825
   14002a824:	add    BYTE PTR [rax+0x62],cl
   14002a827:	(bad)  
   14002a828:	loope  0x14002a885
   14002a82a:	mov    BYTE PTR [rdi],cl
   14002a82c:	ffree  st(6)
   14002a82e:	mov    bh,0xbf
   14002a830:	cli    
   14002a831:	push   rdi
   14002a832:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a833:	cmp    ah,BYTE PTR [rbx+0x1390d611]
   14002a839:	push   rbx
   14002a83a:	push   rax
   14002a83b:	imul   edx,DWORD PTR [rbp+rcx*1-0x2fcf23c7],0xffffff8c
   14002a843:	and    al,0x53
   14002a845:	or     eax,0x24923349
   14002a84a:	mov    DWORD PTR [rcx-0x5b],ebx
   14002a84d:	lock test ecx,ebx
   14002a850:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14002a852:	(bad)  
   14002a853:	sbb    edx,DWORD PTR [rcx-0x80]
   14002a856:	cmp    BYTE PTR [rdi-0x468a8869],0xc1
   14002a85d:	and    BYTE PTR [rcx],dh
   14002a85f:	pop    rdx
   14002a860:	pop    rsp
   14002a861:	push   rcx
   14002a862:	adc    al,0x60
   14002a864:	mov    bh,0xcb
   14002a866:	scas   al,BYTE PTR es:[rdi]
   14002a867:	add    al,BYTE PTR [rax-0x689dbd33]
   14002a86d:	test   BYTE PTR [rsi-0x40],ah
   14002a870:	rex.WRX jns 0x14002a840
   14002a873:	xchg   ebp,eax
   14002a874:	mov    esi,0xeff3d018
   14002a879:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a87a:	(bad)  
   14002a87b:	pushf  
   14002a87c:	stos   BYTE PTR es:[rdi],al
   14002a87d:	mov    ch,0x38
   14002a87f:	clc    
   14002a880:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a881:	rdmsr  
   14002a883:	jbe    0x14002a867
   14002a885:	(bad)  
   14002a886:	adc    BYTE PTR [rdx+0x17],bl
   14002a889:	movabs ds:0xfc1678376bd3a5,eax
   14002a892:	push   rbp
   14002a893:	mov    bh,0x55
   14002a895:	or     al,0xe8
   14002a897:	lock xchg edi,eax
   14002a899:	(bad)  
   14002a89a:	(bad)  
   14002a89b:	rex.W
   14002a89c:	rex.WRX cmp al,0x47
   14002a89f:	cld    
   14002a8a0:	lea    ecx,[rdi-0x3f]
   14002a8a3:	or     ecx,DWORD PTR [rdi+0x31b3125b]
   14002a8a9:	mov    DWORD PTR [rcx-0x45],ecx
   14002a8ac:	cwde   
   14002a8ad:	out    dx,al
   14002a8ae:	mov    cl,ch
   14002a8b0:	out    0x4b,al
   14002a8b2:	(bad)  
   14002a8b3:	sbb    edx,ebx
   14002a8b5:	out    dx,eax
   14002a8b6:	rex.WXB (bad) 
   14002a8b8:	int    0x15
   14002a8ba:	mov    WORD PTR [rdx],?
   14002a8bc:	rex.WRB fstp DWORD PTR [r13-0x65]
   14002a8c0:	imul   BYTE PTR [rdi+rbp*1]
   14002a8c3:	mov    edi,0x98715232
   14002a8c8:	(bad)  
   14002a8c9:	jnp    0x14002a87d
   14002a8cb:	adc    al,0xf1
   14002a8cd:	mov    ds,WORD PTR [rdi]
   14002a8cf:	jrcxz  0x14002a886
   14002a8d1:	mov    fs,ecx
   14002a8d3:	stc    
   14002a8d4:	out    dx,eax
   14002a8d5:	jle    0x14002a872
   14002a8d7:	mov    cl,0x5a
   14002a8d9:	sbb    eax,0x6723af51
   14002a8de:	neg    al
   14002a8e0:	add    al,0xa0
   14002a8e2:	ret    0xc9e2
   14002a8e5:	cmp    DWORD PTR [rax],eax
   14002a8e7:	sub    al,0xcf
   14002a8e9:	and    dh,BYTE PTR [rax-0x1549b8ba]
   14002a8ef:	adc    edx,ebx
   14002a8f1:	adc    DWORD PTR [rsi-0x151c0254],edi
   14002a8f7:	add    eax,0x77c5396
   14002a8fc:	cmp    eax,0x8c7e5775
   14002a901:	mov    esp,0x3a8addd
   14002a906:	mov    eax,0xd7641b
   14002a90b:	shl    dh,0x3d
   14002a90e:	adc    BYTE PTR [rbx-0x23],bl
   14002a911:	mov    dh,0x5a
   14002a913:	movabs al,ds:0xccd06608dee7e8b7
   14002a91c:	stos   DWORD PTR es:[rdi],eax
   14002a91d:	add    eax,0xc5de0f96
   14002a922:	(bad)  
   14002a923:	in     al,dx
   14002a924:	pop    rbx
   14002a925:	mov    BYTE PTR [rsi],dl
   14002a927:	pop    rdi
   14002a928:	rex.RX
   14002a929:	rex.RXB xchg r11d,eax
   14002a92b:	sbb    BYTE PTR [rbx+0x6eff62fb],ah
   14002a931:	add    al,0x2d
   14002a933:	and    r15b,cl
   14002a936:	add    eax,0x770d96f4
   14002a93b:	ins    DWORD PTR es:[rdi],dx
   14002a93c:	(bad)  
   14002a93d:	call   0xe062c2b5
   14002a942:	xchg   edi,eax
   14002a943:	(bad)  
   14002a944:	call   0x1190ba087
   14002a949:	(bad)  
   14002a94a:	call   FWORD PTR [rdx]
   14002a94c:	(bad)  
   14002a94d:	rex.WRXB and r13b,r11b
   14002a950:	jrcxz  0x14002a908
   14002a952:	and    bh,al
   14002a954:	retf   0xe805
   14002a957:	mov    ch,0x30
   14002a959:	imul   ecx,DWORD PTR [rdi],0xf6fecf52
   14002a95f:	or     dh,BYTE PTR [rbp-0x48]
   14002a962:	rex.X and eax,0x5156b8a6
   14002a968:	adc    BYTE PTR [rcx+0x45],dh
   14002a96b:	(bad)  
   14002a96c:	and    bl,BYTE PTR [rsi-0x56]
   14002a96f:	mov    dl,0xd3
   14002a971:	movsxd edx,DWORD PTR [rbx+0x72]
   14002a974:	sbb    bl,BYTE PTR [rax-0x7bcc65f4]
   14002a97a:	ja     0x14002a97a
   14002a97c:	cmp    BYTE PTR [rdi-0x3],bl
   14002a97f:	(bad)  
   14002a980:	(bad)  
   14002a981:	mov    al,0xd4
   14002a983:	pop    rdx
   14002a984:	(bad)
   14002a989:	cmp    DWORD PTR [rbx+0x7dce9f1c],ecx
   14002a98f:	stc    
   14002a990:	(bad)  
   14002a991:	fadd   QWORD PTR [rcx+0x2ebe2ac1]
   14002a997:	lods   al,BYTE PTR ds:[rsi]
   14002a998:	sub    al,0x9f
   14002a99a:	(bad)  
   14002a99b:	jmp    0x1a6419bf7
   14002a9a0:	(bad)  
   14002a9a1:	jg     0x14002a9cb
   14002a9a3:	and    eax,0x54e0faa8
   14002a9a8:	rex.RX add DWORD PTR [rsi],r14d
   14002a9ab:	fild   DWORD PTR [rdx]
   14002a9ad:	fsubr  DWORD PTR [rip+0xa430fca]        # 0x14a45b97d
   14002a9b3:	add    BYTE PTR [rbx-0xf],bl
   14002a9b6:	add    BYTE PTR [rdx-0x226b2ca],cl
   14002a9bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a9bd:	movabs al,ds:0x8cfd8bc1272fb32f
   14002a9c6:	or     BYTE PTR [rsi+rbp*1-0x9dcd8d9],0xdc
   14002a9ce:	cli    
   14002a9cf:	(bad)  
   14002a9d0:	ret    0xfe27
   14002a9d3:	rex.WRXB cmp r9,QWORD PTR [r15+0x5e]
   14002a9d7:	test   al,0x72
   14002a9d9:	and    al,0xcd
   14002a9db:	lea    eax,[rdx]
   14002a9dd:	fild   WORD PTR [rdx]
   14002a9df:	sub    BYTE PTR [rbx],bl
   14002a9e1:	xchg   ecx,eax
   14002a9e2:	mov    dh,bl
   14002a9e4:	mov    cl,ch
   14002a9e6:	mov    dl,0xbb
   14002a9e8:	add    dl,cl
   14002a9ea:	rex
   14002a9eb:	repnz retf 0xc9d7
   14002a9ef:	sahf   
   14002a9f0:	cli    
   14002a9f1:	sbb    esi,DWORD PTR [rdx+0x148ebe57]
   14002a9f7:	adc    ch,dl
   14002a9f9:	push   rbx
   14002a9fa:	adc    BYTE PTR [rdi-0x5de9622f],dh
   14002aa00:	xlat   BYTE PTR ds:[rbx]
   14002aa01:	(bad)  
   14002aa02:	fs (bad) 
   14002aa04:	mov    ch,0x2e
   14002aa06:	mov    bh,bh
   14002aa08:	mov    bl,BYTE PTR [rdi]
   14002aa0a:	(bad)  
   14002aa0c:	sub    BYTE PTR [rdi-0x1c],cl
   14002aa0f:	(bad)  
   14002aa10:	push   bp
   14002aa12:	ss mov dl,0x70
   14002aa15:	movabs ds:0x1084f4b2f19af0b6,eax
   14002aa1e:	cwde   
   14002aa1f:	jbe    0x14002a9ac
   14002aa21:	lock mov ebp,0x3464e21f
   14002aa27:	retf   
   14002aa28:	adc    ebx,edi
   14002aa2a:	cld    
   14002aa2b:	or     dl,BYTE PTR [rcx+0x64]
   14002aa2e:	rex.RXB jg 0x14002aa66
   14002aa31:	mov    ebx,0xf756a0f
   14002aa36:	jo     0x14002aa14
   14002aa38:	gs in  al,0xc
   14002aa3b:	(bad)  
   14002aa3c:	(bad)  
   14002aa3d:	adc    al,0x15
   14002aa3f:	pop    rax
   14002aa40:	cld    
   14002aa41:	push   rax
   14002aa42:	movsxd ebx,edi
   14002aa44:	mov    ebp,0x18bc9812
   14002aa49:	stos   DWORD PTR es:[rdi],eax
   14002aa4a:	(bad)  
   14002aa4b:	lahf   
   14002aa4c:	xchg   cl,ch
   14002aa4e:	imul   ebp,DWORD PTR [rbx],0xffffffbf
   14002aa51:	adc    al,0xaf
   14002aa53:	outs   dx,DWORD PTR ds:[rsi]
   14002aa54:	push   0xffffffffc1957ac3
   14002aa59:	(bad)  
   14002aa5a:	sub    al,0xbb
   14002aa5c:	rex.WB loope 0x14002aa0a
   14002aa5f:	xor    dl,BYTE PTR [rax+rax*1-0x50]
   14002aa63:	fnstenv [rbx]
   14002aa65:	scas   eax,DWORD PTR es:[rdi]
   14002aa66:	(bad)  
   14002aa67:	mov    dh,0xe5
   14002aa69:	rex.RX mov dil,0x3c
   14002aa6c:	(bad)  
   14002aa6d:	mov    ebp,0xefb27f0
   14002aa72:	je     0x14002aa3b
   14002aa74:	adc    DWORD PTR [rax],0x19
   14002aa77:	(bad)  
   14002aa78:	int    0x69
   14002aa7a:	outs   dx,BYTE PTR ds:[rsi]
   14002aa7b:	mov    edx,0xbd109ff1
   14002aa80:	lock pop rdi
   14002aa82:	mov    dh,ah
   14002aa84:	pop    rsi
   14002aa85:	and    al,0xab
   14002aa87:	iret   
   14002aa88:	xchg   esp,eax
   14002aa89:	(bad)  
   14002aa8a:	mov    bl,0xdb
   14002aa8c:	mov    ebp,0xdc8806e2
   14002aa91:	out    dx,eax
   14002aa92:	xchg   esi,eax
   14002aa93:	retf   
   14002aa94:	or     ecx,eax
   14002aa96:	out    dx,al
   14002aa97:	jb     0x14002aa6a
   14002aa99:	loopne 0x14002aa35
   14002aa9b:	adc    edx,eax
   14002aa9d:	xor    eax,0xa59d6d24
   14002aaa2:	div    esp
   14002aaa4:	addr32 leave 
   14002aaa6:	sahf   
   14002aaa7:	stc    
   14002aaa8:	cmp    al,0x72
   14002aaaa:	jns    0x14002aaba
   14002aaac:	adc    eax,0xb0d0618d
   14002aab1:	mov    esp,0x4efb9760
   14002aab6:	jrcxz  0x14002aa8d
   14002aab8:	int3   
   14002aab9:	mov    esi,0xcde3dcab
   14002aabe:	loop   0x14002aab3
   14002aac0:	out    dx,eax
   14002aac1:	xchg   DWORD PTR [rip+0x4f7565f7],ebp        # 0x18f7810be
   14002aac7:	hlt    
   14002aac8:	std    
   14002aac9:	push   rsi
   14002aaca:	movsxd edx,DWORD PTR [rdi+0x7]
   14002aacd:	jb     0x14002aafb
   14002aacf:	rex.WB mov r9b,0x32
   14002aad2:	mov    dl,0x80
   14002aad4:	and    al,0xc6
   14002aad6:	xor    al,0xa6
   14002aad8:	mov    BYTE PTR [rsi],bl
   14002aada:	clc    
   14002aadb:	(bad)  
   14002aadc:	cmp    al,0xf2
   14002aade:	(bad)  
   14002aadf:	(bad)  
   14002aae0:	cmp    BYTE PTR [rdi],dh
   14002aae2:	(bad)  
   14002aae3:	rex.WRXB movabs r13,0x1067a720ce4c40de
   14002aaed:	push   rdx
   14002aaee:	(bad)
   14002aaf3:	test   eax,0x5ad669d8
   14002aaf8:	pop    rbx
   14002aaf9:	jl     0x14002ab23
   14002aafb:	retf   0xe3ab
   14002aafe:	lods   al,BYTE PTR ds:[rsi]
   14002aaff:	and    edi,DWORD PTR [rdi]
   14002ab01:	movabs ds:0xee03baf935fd3732,eax
   14002ab0a:	in     eax,0xf7
   14002ab0c:	mov    edx,edx
   14002ab0e:	jp     0x14002aac0
   14002ab10:	add    al,ah
   14002ab12:	es jne 0x14002ab72
   14002ab15:	ret    0xad4d
   14002ab18:	fmul   QWORD PTR [rdi+0x55572cdd]
   14002ab1e:	adc    BYTE PTR [r15-0x2a],bl
   14002ab22:	jge    0x14002aadc
   14002ab24:	movabs ds:0xf7cf196fb27cd6d4,al
   14002ab2d:	xor    al,0xc6
   14002ab2f:	cdq    
   14002ab30:	sahf   
   14002ab31:	cmp    eax,0xe3abccbd
   14002ab36:	add    ecx,ebx
   14002ab38:	in     eax,dx
   14002ab39:	(bad)  
   14002ab3a:	or     r9d,DWORD PTR [r9-0x5c8f9d38]
   14002ab41:	pop    rbx
   14002ab42:	mov    fs,WORD PTR [rax]
   14002ab44:	(bad)  
   14002ab47:	(bad)  
   14002ab48:	xor    DWORD PTR [rsi+0x97b4e3a],esi
   14002ab4e:	(bad)  
   14002ab4f:	rex.WRXB fiadd DWORD PTR [r14]
   14002ab52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ab53:	in     al,dx
   14002ab54:	xlat   BYTE PTR ds:[rbx]
   14002ab55:	xor    ch,0xae
   14002ab58:	(bad)  
   14002ab59:	call   0xfd3ba41b
   14002ab5e:	mov    edi,0xd7f46df9
   14002ab63:	ds test edx,ebp
   14002ab66:	sub    al,0x21
   14002ab68:	ret    0x7431
   14002ab6b:	outs   dx,DWORD PTR ds:[rsi]
   14002ab6c:	add    eax,0xbd0678b3
   14002ab71:	mov    esp,0xad7e1960
   14002ab76:	mov    esi,ebx
   14002ab78:	(bad)  
   14002ab79:	or     edx,DWORD PTR [rbp+0x3c135238]
   14002ab7f:	lahf   
   14002ab80:	sbb    al,0x6f
   14002ab82:	and    al,0x76
   14002ab84:	lahf   
   14002ab85:	rex.WXB add rax,0x53b1a373
   14002ab8b:	cmp    ah,cl
   14002ab8d:	sub    ebx,DWORD PTR [rsi+0x12f69831]
   14002ab93:	loope  0x14002ac10
   14002ab95:	ds ret 0xb199
   14002ab99:	rex.XB cmp al,0xf6
   14002ab9c:	mov    ch,0xc7
   14002ab9e:	or     BYTE PTR [rdx+0x8d51100],al
   14002aba4:	imul   ah
   14002aba6:	(bad)  
   14002aba7:	(bad)  
   14002aba8:	fstp   TBYTE PTR [rbx]
   14002abaa:	mov    bl,0x18
   14002abac:	retf   
   14002abad:	mov    ?,ebx
   14002abaf:	mov    esi,0x2ceaaaff
   14002abb4:	ja     0x14002aba1
   14002abb6:	jne    0x14002abce
   14002abb8:	jb     0x14002abf2
   14002abba:	sbb    al,0x2e
   14002abbc:	and    ch,BYTE PTR [rcx]
   14002abbe:	jno    0x14002ab51
   14002abc0:	mov    r10b,BYTE PTR [rcx+0x2cb2852d]
   14002abc7:	add    DWORD PTR [rdx+0x4b2ca1d],edx
   14002abcd:	sbb    DWORD PTR [rcx+0x507a0815],eax
   14002abd3:	and    BYTE PTR [rsi+rax*1+0x1c],al
   14002abd7:	(bad)  
   14002abd8:	jbe    0x14002ab6a
   14002abda:	add    BYTE PTR [rcx+0x60],al
   14002abdd:	cmovno ebx,DWORD PTR [r12+r15*4-0x5313fedb]
   14002abe6:	rex.RX xchg eax,eax
   14002abe8:	rex.W mov dl,0x1c
   14002abeb:	mov    r10b,0x69
   14002abee:	rex.RXB
   14002abef:	rex.X
   14002abf0:	rex.WR ins DWORD PTR es:[rdi],dx
   14002abf2:	(bad)  
   14002abf3:	adc    ch,BYTE PTR [rbx-0x77]
   14002abf6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002abf7:	pop    rax
   14002abf8:	es and eax,0x69bee293
   14002abfe:	xchg   BYTE PTR [rbx],dh
   14002ac00:	ret    
   14002ac01:	pop    rcx
   14002ac02:	jp     0x14002abbe
   14002ac04:	sti    
   14002ac05:	out    dx,al
   14002ac06:	neg    DWORD PTR [rdx+rbp*4-0x62aabc36]
   14002ac0d:	jnp    0x14002ac7d
   14002ac0f:	iret   
   14002ac10:	or     al,0x35
   14002ac12:	in     al,0x4c
   14002ac14:	(bad)  
   14002ac15:	sti    
   14002ac16:	fdivr  QWORD PTR [rsi]
   14002ac18:	inc    ecx
   14002ac1a:	rex.RB neg r12d
   14002ac1d:	mov    esi,0xdf56ceb7
   14002ac22:	call   FWORD PTR [rbx-0x15]
   14002ac25:	sub    eax,DWORD PTR [rbx+rsi*4+0x5d]
   14002ac29:	push   0xffffffffffffff86
   14002ac2b:	and    cl,BYTE PTR [rdx-0xa87a405]
   14002ac31:	push   rsi
   14002ac32:	(bad)  
   14002ac33:	lods   al,BYTE PTR ds:[rsi]
   14002ac34:	(bad)  
   14002ac35:	sbb    cl,ah
   14002ac37:	std    
   14002ac38:	cli    
   14002ac39:	shr    BYTE PTR [rbp+rcx*8+0x1d],1
   14002ac3d:	jae    0x14002ac89
   14002ac3f:	mov    BYTE PTR [rsi+0x4a],dh
   14002ac42:	(bad)  
   14002ac43:	(bad)  
   14002ac44:	(bad)  
   14002ac45:	xchg   al,dh
   14002ac47:	and    BYTE PTR [rsi+0x219da6b0],dh
   14002ac4d:	mov    BYTE PTR [rdi+0x5f55ff27],dl
   14002ac53:	loop   0x14002ac50
   14002ac55:	jb     0x14002ac07
   14002ac57:	out    0x8,eax
   14002ac59:	loopne 0x14002abed
   14002ac5b:	(bad)  
   14002ac5c:	outs   dx,BYTE PTR ds:[rsi]
   14002ac5d:	leave  
   14002ac5e:	in     al,0x17
   14002ac60:	gs (bad) 
   14002ac62:	xor    DWORD PTR [rdx-0x4ed8157b],0x7cf390c5
   14002ac6c:	jle    0x14002ac02
   14002ac6e:	lea    ebx,[rbx-0x11417221]
   14002ac74:	(bad)  
   14002ac75:	(bad)  
   14002ac76:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ac77:	pcmpgtw mm7,QWORD PTR [rdi-0x46]
   14002ac7b:	cld    
   14002ac7c:	popf   
   14002ac7d:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ac7f:	mov    ch,0xa0
   14002ac81:	adc    ch,ah
   14002ac83:	fs shl ah,0xc9
   14002ac87:	out    dx,eax
   14002ac88:	(bad)  
   14002ac89:	(bad)  
   14002ac8a:	cmp    eax,0x6aa74a84
   14002ac8f:	lock and eax,0x4e3b9d90
   14002ac95:	dec    DWORD PTR [rbx-0x1]
   14002ac98:	mov    cs,ecx
   14002ac9a:	std    
   14002ac9b:	call   QWORD PTR [rsi]
   14002ac9d:	jnp    0x14002ac8b
   14002ac9f:	(bad)  
   14002aca0:	addr32 repnz pop rbx
   14002aca3:	sub    ebp,0xffffff9e
   14002aca6:	(bad)  
   14002aca7:	jbe    0x14002ac78
   14002aca9:	mov    eax,0x62b09ec2
   14002acae:	scas   eax,DWORD PTR es:[rdi]
   14002acaf:	ins    BYTE PTR es:[rdi],dx
   14002acb0:	add    dl,BYTE PTR [rdi+0x4956167e]
   14002acb6:	rex.W sti 
   14002acb8:	fldl2t 
   14002acba:	in     eax,0x95
   14002acbc:	out    dx,eax
   14002acbd:	add    ecx,eax
   14002acbf:	out    dx,eax
   14002acc0:	lahf   
   14002acc1:	(bad)  
   14002acc2:	(bad)  
   14002acc3:	cmp    al,0xf1
   14002acc5:	add    eax,0x87605e03
   14002acca:	add    ecx,esp
   14002accc:	sbb    DWORD PTR [rbx],0x1ffbbd68
   14002acd2:	lock vhaddps ymm2,ymm2,YMMWORD PTR [rbx-0x7658942d]
   14002acdb:	loop   0x14002acf5
   14002acdd:	mov    ch,0xb2
   14002acdf:	(bad)  
   14002ace0:	mov    ch,0xb2
   14002ace2:	(bad)  
   14002ace3:	mov    ebp,DWORD PTR [rsi+rdx*4]
   14002ace6:	cmp    al,0xbb
   14002ace8:	and    DWORD PTR [rbx-0x5a],ecx
   14002aceb:	mov    ebx,0xfadada08
   14002acf0:	xlat   BYTE PTR ds:[rbx]
   14002acf1:	(bad)
   14002acf4:	jo     0x14002ad1f
   14002acf6:	gs in  eax,dx
   14002acf8:	(bad)  
   14002acf9:	cmp    eax,0x534ba9eb
   14002acfe:	jl     0x14002acce
   14002ad00:	(bad)  
   14002ad01:	(bad)  
   14002ad02:	mul    BYTE PTR [rdi+0x7e092f61]
   14002ad08:	rcr    BYTE PTR [rsi+0x7e4b8021],0xb8
   14002ad0f:	pop    rsi
   14002ad10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ad11:	pop    rax
   14002ad12:	cmp    edx,DWORD PTR [rbp-0x7a]
   14002ad15:	rex.RX xchg esp,eax
   14002ad17:	fimul  DWORD PTR [rdi-0x25]
   14002ad1a:	rol    BYTE PTR [rdi],cl
   14002ad1c:	ins    DWORD PTR es:[rdi],dx
   14002ad1d:	movabs eax,ds:0xe886348f1e9898a7
   14002ad26:	mov    ebx,0x2c6e8a3f
   14002ad2b:	and    esi,DWORD PTR [rbx+0x63be9421]
   14002ad31:	rex.WXB push 0x28
   14002ad34:	jl     0x14002acfd
   14002ad36:	or     al,BYTE PTR [rcx-0x2e05ce6e]
   14002ad3c:	mov    edi,0xa47f1f40
   14002ad41:	fsub   DWORD PTR [rdx]
   14002ad43:	int3   
   14002ad44:	(bad)  
   14002ad45:	repnz (bad) 
   14002ad47:	sbb    BYTE PTR [rbp-0x2e65ccad],ah
   14002ad4d:	rex.XB div DWORD PTR [r11]
   14002ad50:	cli    
   14002ad51:	jrcxz  0x14002ace2
   14002ad53:	ret    
   14002ad54:	sbb    DWORD PTR [rdi+0x44],0xffffff8e
   14002ad58:	xchg   DWORD PTR [rax],ecx
   14002ad5a:	adc    DWORD PTR [rcx+0x6],esp
   14002ad5d:	pop    rbp
   14002ad5e:	int3   
   14002ad5f:	out    0x69,al
   14002ad61:	int3   
   14002ad62:	mov    al,0xb
   14002ad64:	jns    0x14002adc4
   14002ad66:	or     BYTE PTR [rbx+0x42b2510d],ch
   14002ad6c:	pop    rbx
   14002ad6d:	xchg   edi,eax
   14002ad6e:	scas   al,BYTE PTR es:[rdi]
   14002ad6f:	xor    DWORD PTR [rdi+rbx*2],ebp
   14002ad72:	ss rex.B
   14002ad74:	fwait
   14002ad75:	rex.WRXB scas rax,QWORD PTR es:[rdi]
   14002ad77:	sub    esp,ebx
   14002ad79:	(bad)  
   14002ad7a:	jl     0x14002ad1a
   14002ad7c:	fisttp WORD PTR [rdx-0x5db1abe0]
   14002ad82:	ins    BYTE PTR es:[rdi],dx
   14002ad83:	stc    
   14002ad84:	cli    
   14002ad85:	(bad)  
   14002ad86:	ror    DWORD PTR [rdx+rdi*8+0xffbdc2c],0x79
   14002ad8e:	ins    BYTE PTR es:[rdi],dx
   14002ad8f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ad90:	clc    
   14002ad91:	(bad)  
   14002ad92:	idiv   DWORD PTR [rdi-0x2eed6d73]
   14002ad98:	push   0x13
   14002ad9a:	pop    rbp
   14002ad9b:	jne    0x14002adb5
   14002ad9d:	sbb    cl,ch
   14002ad9f:	(bad)  
   14002ada0:	fldcw  WORD PTR [rdi+0x21]
   14002ada3:	test   al,0x85
   14002ada5:	stc    
   14002ada6:	pop    rdi
   14002ada7:	movabs rdi,0x179ddb4b846a206b
   14002adb1:	jle    0x14002ade0
   14002adb3:	std    
   14002adb4:	push   0xffffffffffffff83
   14002adb6:	(bad)
   14002adb9:	rex.RXB push r8
   14002adbb:	(bad)
   14002adbe:	repnz fld DWORD PTR [rip+0x250e0f7]        # 0x142538ebc
   14002adc5:	es mov ecx,0x5e107bf0
   14002adcb:	loopne 0x14002ae3e
   14002adcd:	fucomi st,st(5)
   14002adcf:	fldcw  WORD PTR [rip+0x5b982aa8]        # 0x19b9ad87d
   14002add5:	add    bh,BYTE PTR [rax-0x2c1de924]
   14002addb:	pop    rsp
   14002addc:	jle    0x14002ae27
   14002adde:	sub    BYTE PTR [rax+0x3b36a9a5],dh
   14002ade4:	in     eax,dx
   14002ade5:	sub    al,0x86
   14002ade7:	adc    esp,DWORD PTR [rbx-0x37118619]
   14002aded:	popf   
   14002adee:	call   0xe3132a2a
   14002adf3:	xor    eax,0xf842e8d2
   14002adf8:	retf   0x359a
   14002adfb:	lods   al,BYTE PTR ds:[rsi]
   14002adfc:	sub    edx,DWORD PTR [rax]
   14002adfe:	(bad)  
   14002adff:	ins    BYTE PTR es:[rdi],dx
   14002ae00:	fadd   QWORD PTR [rdx-0x64]
   14002ae03:	cmp    ecx,esi
   14002ae05:	clc    
   14002ae06:	imul   edi,DWORD PTR [rdi-0x80],0xffffffd9
   14002ae0a:	cmp    al,0x8d
   14002ae0c:	mov    BYTE PTR [rbx+0x4e],bl
   14002ae0f:	sbb    al,BYTE PTR [rbx-0x41]
   14002ae12:	jge    0x14002ada3
   14002ae14:	in     al,dx
   14002ae15:	(bad)
   14002ae18:	jg     0x14002adfb
   14002ae1a:	fbstp  TBYTE PTR [rax]
   14002ae1c:	stc    
   14002ae1d:	retf   0x21ef
   14002ae20:	iret   
   14002ae21:	ds out dx,eax
   14002ae23:	jge    0x14002ae0f
   14002ae25:	xor    DWORD PTR [rsi+0x6b7a067b],esi
   14002ae2b:	xor    BYTE PTR [rcx],bl
   14002ae2d:	mov    ecx,0xded96434
   14002ae32:	sub    eax,0xe022c969
   14002ae37:	data16 fst DWORD PTR [rdx-0x69]
   14002ae3b:	push   rax
   14002ae3c:	je     0x14002ae7a
   14002ae3e:	sub    BYTE PTR [rcx],dl
   14002ae40:	rex.RB clc 
   14002ae42:	xchg   edx,eax
   14002ae43:	adc    edx,eax
   14002ae45:	imul   eax,ebp,0xb15effa2
   14002ae4b:	add    DWORD PTR [rax-0x7629093b],ebp
   14002ae51:	fcomip st,st(4)
   14002ae53:	rex.WXB in al,0x6f
   14002ae56:	inc    BYTE PTR [rax]
   14002ae58:	lahf   
   14002ae59:	sti    
   14002ae5a:	repnz out 0x59,eax
   14002ae5d:	pop    rbx
   14002ae5e:	(bad)  
   14002ae5f:	rex.RXB xchg r12d,eax
   14002ae61:	ss push rax
   14002ae63:	sti    
   14002ae64:	scas   eax,DWORD PTR es:[rdi]
   14002ae65:	rex.RX sub eax,0x97f532af
   14002ae6b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ae6c:	ss push rbp
   14002ae6e:	pop    rcx
   14002ae6f:	mov    esi,0xb8a2b0dd
   14002ae74:	int    0xb6
   14002ae76:	cmp    cl,ch
   14002ae78:	push   rdx
   14002ae79:	movabs al,ds:0xc2bf5869c246c42f
   14002ae82:	iret   
   14002ae83:	retf   0x6ba9
   14002ae86:	(bad)  
   14002ae87:	(bad)  
   14002ae88:	adc    edx,ebx
   14002ae8a:	loop   0x14002aeb0
   14002ae8c:	ins    DWORD PTR es:[rdi],dx
   14002ae8d:	loope  0x14002ae87
   14002ae8f:	rex.RX (bad) 
   14002ae91:	shl    ebp,1
   14002ae93:	pushf  
   14002ae94:	xor    al,0x9a
   14002ae96:	rex.WRX cmc 
   14002ae98:	mov    ebp,0x5465f42e
   14002ae9d:	sub    cl,BYTE PTR [rax]
   14002ae9f:	mov    eax,0xb393f023
   14002aea4:	cwde   
   14002aea5:	out    dx,eax
   14002aea6:	ret    0x4ef
   14002aea9:	je     0x14002ae3c
   14002aeab:	rcr    BYTE PTR [rax+rbx*4-0x56],1
   14002aeaf:	push   rdx
   14002aeb0:	or     BYTE PTR [rsi-0x15407727],al
   14002aeb6:	cmp    eax,0x1fddcac7
   14002aebb:	(bad)  
   14002aebc:	cmc    
   14002aebd:	(bad)  
   14002aebe:	and    eax,DWORD PTR [rdi+rcx*8+0x7d]
   14002aec2:	(bad)  
   14002aec3:	fwait
   14002aec4:	sub    al,0x12
   14002aec6:	enter  0x1422,0xdd
   14002aeca:	int3   
   14002aecb:	sbb    al,0x4b
   14002aecd:	or     BYTE PTR [rdx+rdx*8-0x3e],al
   14002aed1:	ds cld 
   14002aed3:	add    BYTE PTR [rbp-0xf],bl
   14002aed6:	cmp    esi,DWORD PTR [rsi+rbp*8+0x74427fd]
   14002aedd:	outs   dx,DWORD PTR ds:[rsi]
   14002aede:	ret    0x8d18
   14002aee1:	xor    BYTE PTR [rdx],bl
   14002aee3:	mov    bl,0xf1
   14002aee5:	and    ah,BYTE PTR [rbx-0xce681e1]
   14002aeeb:	lock xlat BYTE PTR ds:[rbx]
   14002aeed:	nop
   14002aeee:	fwait
   14002aeef:	(bad)  
   14002aef0:	push   rcx
   14002aef1:	sub    dh,BYTE PTR [rsi+0x3b]
   14002aef4:	repnz rex.WR
   14002aef6:	ss mov al,0xe3
   14002aef9:	adc    DWORD PTR [rsi],esi
   14002aefb:	lahf   
   14002aefc:	adc    al,0x67
   14002aefe:	adc    dl,BYTE PTR [rdx+0x74]
   14002af01:	xor    eax,ecx
   14002af03:	mov    esp,0x4d3ee5a9
   14002af08:	in     eax,0x95
   14002af0a:	mov    ah,0xe4
   14002af0c:	(bad)  
   14002af0d:	pop    rsi
   14002af0f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002af10:	int3   
   14002af11:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002af12:	(bad)  
   14002af13:	pop    rcx
   14002af14:	mov    dh,0x5c
   14002af16:	ret    0xa87
   14002af19:	popf   
   14002af1a:	fucomi st,st(7)
   14002af1c:	(bad)  
   14002af1d:	push   rdi
   14002af1e:	psrlq  mm7,mm2
   14002af21:	mov    ebx,0x7f3f9cff
   14002af26:	in     al,0xc7
   14002af28:	cld    
   14002af29:	lock (bad) 
   14002af2b:	cpuid  
   14002af2d:	xchg   esp,eax
   14002af2e:	rex.X lods eax,DWORD PTR ds:[rsi]
   14002af30:	lods   al,BYTE PTR ds:[rsi]
   14002af31:	adc    bl,BYTE PTR [rdi+0x7d]
   14002af34:	fcom   DWORD PTR [rbp-0x45b1e8e5]
   14002af3a:	mov    edi,0x62b4c15b
   14002af3f:	idiv   BYTE PTR [rsp+rsi*4+0xa61dc6f]
   14002af46:	mov    bl,0xab
   14002af48:	cld    
   14002af49:	cmp    al,0x24
   14002af4b:	or     BYTE PTR [rbx+0x78],dl
   14002af4e:	rex.WRX (bad) 
   14002af50:	or     bl,BYTE PTR [rdi+0x2f]
   14002af53:	xor    BYTE PTR [rip+0x5a08a00a],ah        # 0x19a0b4f63
   14002af59:	or     al,BYTE PTR [rcx]
   14002af5b:	mov    ecx,0x96bf3c16
   14002af60:	jno    0x14002afd0
   14002af62:	test   al,0x39
   14002af64:	mov    ah,0x58
   14002af66:	ja     0x14002af6c
   14002af68:	mov    edx,0x8ae618
   14002af6d:	scas   al,BYTE PTR es:[rdi]
   14002af6e:	or     BYTE PTR [rbx+0x30e17c97],ah
   14002af74:	cmp    DWORD PTR [rdi-0xc77b0e5],esp
   14002af7a:	add    eax,0x47ff4a6
   14002af7f:	cmp    al,0xb5
   14002af81:	(bad)  
   14002af82:	xor    al,0xcd
   14002af84:	jge    0x14002af51
   14002af86:	cld    
   14002af87:	loop   0x14002af64
   14002af89:	jle    0x14002af0e
   14002af8b:	out    0xda,al
   14002af8d:	repz enter 0x8bee,0x4e
   14002af92:	retf   
   14002af93:	xchg   edi,eax
   14002af94:	mov    edi,0x86055617
   14002af99:	(bad)  
   14002af9a:	retf   
   14002af9b:	or     BYTE PTR [rcx],ah
   14002af9d:	adc    al,0xe2
   14002af9f:	xchg   DWORD PTR [rdi+0x62],ebx
   14002afa2:	hlt    
   14002afa3:	xchg   ebx,eax
   14002afa4:	(bad)  
   14002afa5:	xor    DWORD PTR [rcx-0x3d3bf10a],edi
   14002afab:	sub    ch,BYTE PTR [rdx+0x7eb441b7]
   14002afb1:	add    dh,BYTE PTR [rbx-0x2476f987]
   14002afb7:	(bad)  
   14002afb8:	rex.WXB cdqe 
   14002afba:	or     DWORD PTR [rsi],esi
   14002afbc:	retf   
   14002afbd:	shr    DWORD PTR [rdx-0x29],0x77
   14002afc1:	iret   
   14002afc2:	lahf   
   14002afc3:	mov    bl,0x2d
   14002afc5:	xor    DWORD PTR [rdi+0x64eb53b0],edx
   14002afcb:	sub    ah,BYTE PTR [rbx+rdx*2+0x2b]
   14002afcf:	in     al,0xbc
   14002afd1:	rex.RB
   14002afd2:	test   BYTE PTR ds:[rbp+rax*2-0x1a7cd317],cl
   14002afda:	and    bl,BYTE PTR [rbx+rcx*1-0x3a57a3b0]
   14002afe1:	jne    0x14002b015
   14002afe3:	lahf   
   14002afe4:	mov    WORD PTR [rax+0xa],es
   14002afe7:	xchg   esi,eax
   14002afe8:	jle    0x14002afdf
   14002afea:	mov    bh,0x79
   14002afec:	pop    rsp
   14002afed:	scas   al,BYTE PTR es:[rdi]
   14002afee:	repnz addr32 pop rdi
   14002aff1:	inc    BYTE PTR [rbx+rdx*4]
   14002aff4:	icebp  
   14002aff5:	test   dh,al
   14002aff7:	retf   0xe23e
   14002affa:	rex.XB xlat BYTE PTR ds:[rbx]
   14002affc:	and    DWORD PTR [rbx-0x63],ebx
   14002afff:	jo     0x14002b031
   14002b001:	test   DWORD PTR [rip+0xffffffff87b8210b],0x40440cf        # 0xc7bad116
   14002b00b:	pop    rdi
   14002b00c:	(bad)  [rax+0x5b]
   14002b00f:	mov    eax,0x20ec2100
   14002b014:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b015:	jl     0x14002aff8
   14002b017:	mov    bl,0x27
   14002b019:	movabs ds:0x921f14ca63300354,al
   14002b022:	rex.X
   14002b023:	lock (bad) 
   14002b025:	(bad)  
   14002b026:	movsxd esi,DWORD PTR [rbx+0x73]
   14002b029:	(bad)  
   14002b02a:	lea    esp,[rcx+rsi*2+0x7d]
   14002b02e:	fistp  DWORD PTR [rcx+0xa]
   14002b031:	pop    rsp
   14002b032:	push   rbp
   14002b033:	imul   esp,DWORD PTR [rdx+0x6e],0x8
   14002b037:	(bad)  
   14002b038:	pop    rbx
   14002b039:	(bad)  
   14002b03a:	rcl    al,1
   14002b03d:	xor    ebp,ebx
   14002b03f:	cmovp  esi,ebp
   14002b042:	out    dx,eax
   14002b043:	pop    rbx
   14002b044:	mov    gs,WORD PTR [rdi+0x73a26084]
   14002b04a:	mov    esi,0x59b7f4fc
   14002b04f:	mov    esi,0xedbc3de3
   14002b054:	sbb    eax,0xe5f449bf
   14002b059:	jg     0x14002afe8
   14002b05b:	int3   
   14002b05c:	rex.RXB adc BYTE PTR [rip+0xffffffffa608811c],r14b        # 0xe60b317f
   14002b063:	(bad)  
   14002b064:	(bad)  
   14002b065:	(bad)  
   14002b066:	(bad)  
   14002b067:	or     BYTE PTR [rax-0x2e],ah
   14002b06a:	test   BYTE PTR [rbp-0x7098dbad],cl
   14002b070:	adc    eax,0x42a5ab92
   14002b075:	or     DWORD PTR [rsi],r8d
   14002b078:	(bad)  
   14002b079:	rex.R
   14002b07a:	mov    BYTE PTR es:[rdx+0x59],ch
   14002b07e:	rcl    DWORD PTR [rdi+0x6845f7f3],cl
   14002b084:	scas   al,BYTE PTR es:[rdi]
   14002b085:	in     al,0xd7
   14002b087:	iret   
   14002b088:	pushf  
   14002b089:	scas   al,BYTE PTR es:[rdi]
   14002b08a:	push   rbx
   14002b08b:	xchg   ebx,eax
   14002b08c:	pop    rbx
   14002b08d:	(bad)  
   14002b08e:	cmp    eax,0x54f6660d
   14002b093:	cmp    ch,bh
   14002b095:	jg     0x14002b113
   14002b097:	(bad)  
   14002b098:	jle    0x14002b060
   14002b09a:	ror    esi,cl
   14002b09c:	pop    rsp
   14002b09d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b09e:	movabs al,ds:0x9fbe779b16ff2fce
   14002b0a7:	rex.WRXB jge 0x14002b09c
   14002b0aa:	(bad)  
   14002b0ab:	jb     0x14002b09f
   14002b0ad:	(bad)  
   14002b0ae:	or     DWORD PTR [rdx+0x43a82b0b],ebx
   14002b0b4:	xlat   BYTE PTR ds:[rbx]
   14002b0b5:	and    DWORD PTR [rdi-0xa],edx
   14002b0b8:	and    DWORD PTR [rbx+rbp*4+0xe],ebx
   14002b0bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b0bd:	rcl    DWORD PTR [rbx+0x4b651592],1
   14002b0c3:	out    0xb8,al
   14002b0c5:	(bad)  
   14002b0c6:	and    eax,0x624fc2b7
   14002b0cb:	shl    edi,1
   14002b0cd:	lahf   
   14002b0ce:	xor    dl,BYTE PTR [rax]
   14002b0d0:	ss push rcx
   14002b0d2:	mov    ch,0xe1
   14002b0d4:	mov    bl,0x6
   14002b0d6:	test   BYTE PTR [rcx],dl
   14002b0d8:	rex.RB ret 0xf666
   14002b0dc:	movabs eax,ds:0x5ac1665b6dda3681
   14002b0e5:	jrcxz  0x14002b101
   14002b0e7:	mov    WORD PTR [rax+0x5f18078b],gs
   14002b0ed:	cs stos BYTE PTR es:[rdi],al
   14002b0ef:	sub    dh,al
   14002b0f1:	pop    rbx
   14002b0f2:	push   rcx
   14002b0f3:	fstp   DWORD PTR [rax]
   14002b0f5:	shl    ch,0xfa
   14002b0f8:	clc    
   14002b0f9:	(bad)  
   14002b0fa:	sbb    eax,0xc2e21a73
   14002b0ff:	js     0x14002b156
   14002b101:	push   rbx
   14002b102:	clc    
   14002b103:	enter  0x9b8,0x5d
   14002b107:	(bad)  
   14002b108:	scas   al,BYTE PTR es:[rdi]
   14002b109:	xor    BYTE PTR [rbx+0x46],ch
   14002b10c:	(bad)  
   14002b10d:	push   rsp
   14002b10e:	int3   
   14002b10f:	mov    ecx,eax
   14002b111:	sbb    dh,bh
   14002b113:	cmp    eax,0xddcf00f6
   14002b118:	neg    BYTE PTR [rsi]
   14002b11a:	int3   
   14002b11b:	cmp    eax,0xb626e6bf
   14002b120:	out    dx,eax
   14002b121:	stos   BYTE PTR es:[rdi],al
   14002b122:	movsxd ecx,DWORD PTR [rbx]
   14002b124:	cmc    
   14002b125:	push   rbp
   14002b126:	sbb    al,0xb4
   14002b128:	fcom   DWORD PTR [rax+0x4]
   14002b12b:	or     ebp,DWORD PTR [rax+0x486d1a18]
   14002b131:	fcmovnu st,st(0)
   14002b133:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b134:	or     DWORD PTR [rax-0x6ce06be6],0xfffffff0
   14002b13b:	ret    0x84ef
   14002b13e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b13f:	fcomp  QWORD PTR [rax+0x74]
   14002b142:	jp     0x14002b16a
   14002b144:	loope  0x14002b1a5
   14002b146:	and    BYTE PTR [rbx+0x3fe81622],ch
   14002b14c:	(bad)  
   14002b14d:	lods   al,BYTE PTR ds:[rsi]
   14002b14e:	cwde   
   14002b14f:	mov    ebp,0x8cc1b377
   14002b154:	loop   0x14002b1d1
   14002b156:	(bad)  
   14002b157:	lods   al,BYTE PTR ds:[rsi]
   14002b158:	and    ch,BYTE PTR [rsi-0x7f]
   14002b15b:	add    eax,0x3d876393
   14002b160:	sbb    ch,BYTE PTR [rdi-0x7]
   14002b163:	add    dl,bh
   14002b165:	cmp    eax,0x7c4f98ff
   14002b16a:	jmp    0x187fdafad
   14002b16f:	call   QWORD PTR [rdi-0x41db2e5c]
   14002b175:	cli    
   14002b176:	xor    cl,dl
   14002b178:	rol    DWORD PTR [rbx+0x8],0x95
   14002b17c:	xchg   esp,eax
   14002b17d:	out    dx,al
   14002b17e:	lea    ebp,[rax]
   14002b180:	jle    0x14002b125
   14002b182:	lods   al,BYTE PTR ds:[rsi]
   14002b183:	mov    ch,0xed
   14002b185:	hlt    
   14002b186:	sbb    ch,BYTE PTR [rbp+rdx*1-0x2e9048c2]
   14002b18d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b18e:	fs int 0x94
   14002b191:	out    dx,al
   14002b192:	sub    esi,DWORD PTR [rsi]
   14002b194:	push   0xffffffffb802e771
   14002b199:	loope  0x14002b19f
   14002b19b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b19c:	je     0x14002b190
   14002b19e:	shl    DWORD PTR [rcx-0x4bcb3968],0xdb
   14002b1a5:	(bad)  
   14002b1a6:	fsub   st(0),st
   14002b1a8:	sub    esi,DWORD PTR [rdx]
   14002b1aa:	rex.RXB out 0x31,al
   14002b1ad:	jbe    0x14002b1ff
   14002b1af:	cmp    DWORD PTR [rdx],eax
   14002b1b1:	fmul   DWORD PTR [rsi-0x4ce1aff9]
   14002b1b7:	xor    BYTE PTR [rbx+0x2536d06d],al
   14002b1bd:	add    DWORD PTR [rcx],ebp
   14002b1bf:	cdq    
   14002b1c0:	movabs ds:0x4e86fbb796d31333,al
   14002b1c9:	(bad)  
   14002b1ca:	loopne 0x14002b19d
   14002b1cc:	mov    bl,0xcf
   14002b1ce:	repnz rex.RXB
   14002b1d0:	rex.WRXB jle 0x14002b166
   14002b1d3:	cmc    
   14002b1d4:	jnp    0x14002b214
   14002b1d6:	mov    bh,BYTE PTR [rbx+rsi*8-0x79]
   14002b1da:	jl     0x14002b16c
   14002b1dc:	cs stos DWORD PTR es:[edi],eax
   14002b1df:	mov    esi,0x104e932a
   14002b1e4:	fs imul edi,esp,0x24
   14002b1e8:	sahf   
   14002b1e9:	and    DWORD PTR [rdx],ecx
   14002b1eb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b1ec:	rex.X mov esp,0xf38b6055
   14002b1f2:	(bad)  
   14002b1f3:	ins    DWORD PTR es:[rdi],dx
   14002b1f4:	push   rax
   14002b1f5:	pop    rdx
   14002b1f6:	jbe    0x14002b24f
   14002b1f8:	rex.WR movabs rax,0x948929dbd0be7132
   14002b202:	ja     0x14002b232
   14002b204:	mov    dh,0x33
   14002b206:	cmc    
   14002b207:	or     dh,bh
   14002b209:	repz fisub DWORD PTR [rax-0x5]
   14002b20d:	sbb    esi,DWORD PTR [rsi+rbp*2]
   14002b210:	(bad)  
   14002b211:	cmp    edx,esp
   14002b213:	paddw  mm5,QWORD PTR [rbx]
   14002b216:	out    dx,al
   14002b217:	jnp    0x14002b209
   14002b219:	and    DWORD PTR [rsi],ebx
   14002b21b:	clc    
   14002b21c:	(bad)  
   14002b21d:	jmp    QWORD PTR [rsi]
   14002b21f:	push   rdx
   14002b220:	sub    ecx,ebp
   14002b222:	(bad)  
   14002b223:	xlat   BYTE PTR ds:[rbx]
   14002b224:	adc    bl,BYTE PTR [rbp+0x73]
   14002b227:	sbb    eax,0x6a9cd1aa
   14002b22c:	jle    0x14002b269
   14002b22e:	std    
   14002b22f:	cmp    DWORD PTR [rbx-0xd],esi
   14002b232:	or     BYTE PTR [rax+riz*8],bh
   14002b235:	leave  
   14002b236:	mov    dh,0x64
   14002b238:	(bad)  
   14002b239:	(bad)  
   14002b23a:	push   rsi
   14002b23b:	rex.WXB jmp 0x1192c01d7
   14002b241:	std    
   14002b242:	pop    rbp
   14002b243:	or     DWORD PTR [rax-0x149c699c],ebx
   14002b249:	movsxd eax,DWORD PTR [rsi-0x67]
   14002b24c:	cmc    
   14002b24d:	xor    DWORD PTR [rdx+0x5a61f7f2],ebx
   14002b253:	push   rbp
   14002b254:	fs cs jnp 0x14002b216
   14002b258:	int3   
   14002b259:	fwait
   14002b25a:	rcl    BYTE PTR [rdi-0x1fe8d6af],1
   14002b260:	push   rdx
   14002b261:	xchg   edi,eax
   14002b262:	add    ebx,DWORD PTR [rdi-0x16]
   14002b265:	pop    rax
   14002b266:	(bad)  
   14002b267:	add    eax,0x4fd22c21
   14002b26c:	test   al,0x62
   14002b26e:	adc    eax,0x19
   14002b271:	jae    0x14002b2e6
   14002b273:	xchg   esi,eax
   14002b274:	sbb    BYTE PTR [rdx-0x18d21887],cl
   14002b27a:	push   rsp
   14002b27b:	xor    eax,0x8f0bdef8
   14002b280:	jo     0x14002b2f2
   14002b282:	jno    0x14002b20d
   14002b284:	(bad)  
   14002b285:	mov    esp,0xce8b7eb
   14002b28a:	xor    BYTE PTR ss:[rdi],cl
   14002b28d:	dec    BYTE PTR [rcx]
   14002b28f:	xor    ch,BYTE PTR [rcx+0x63]
   14002b292:	push   rbp
   14002b293:	in     al,dx
   14002b294:	sbb    eax,DWORD PTR [rdx+rsi*1+0x35314a15]
   14002b29b:	out    0x83,eax
   14002b29d:	stos   DWORD PTR es:[rdi],eax
   14002b29e:	and    BYTE PTR [rax+0x5a],0x12
   14002b2a2:	adc    BYTE PTR [rdx],al
   14002b2a4:	call   0x10807817f
   14002b2a9:	ins    BYTE PTR es:[rdi],dx
   14002b2aa:	and    DWORD PTR [rsi+rdi*2+0x7],ebx
   14002b2ae:	fst    st(0)
   14002b2b0:	(bad)  
   14002b2b1:	iret   
   14002b2b2:	fild   QWORD PTR [rbx]
   14002b2b4:	loope  0x14002b279
   14002b2b6:	out    0xb6,eax
   14002b2b8:	pop    rax
   14002b2b9:	ficomp WORD PTR [rbx]
   14002b2bb:	cmp    bl,BYTE PTR [rsi]
   14002b2bd:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14002b2bf:	(bad)
   14002b2c2:	rex.WB fadd st,st(4)
   14002b2c5:	shl    ebp,cl
   14002b2c7:	shr    DWORD PTR [rbx],1
   14002b2c9:	sbb    eax,0xb113b840
   14002b2ce:	or     DWORD PTR [rip+0x1cfeb71a],0xffffffe9        # 0x15d0169ef
   14002b2d5:	(bad)  
   14002b2d6:	inc    BYTE PTR [rbx]
   14002b2d8:	jg     0x14002b2d8
   14002b2da:	int3   
   14002b2db:	push   rcx
   14002b2dc:	ds ja  0x14002b2be
   14002b2df:	jg     0x14002b2a4
   14002b2e1:	pop    rax
   14002b2e2:	rex.B out 0xc8,eax
   14002b2e5:	or     eax,0x446e47c4
   14002b2ea:	mov    ah,0x3b
   14002b2ec:	sbb    BYTE PTR [rdi-0x6a],ch
   14002b2ef:	mov    ebx,0xfce4a790
   14002b2f4:	ins    DWORD PTR es:[rdi],dx
   14002b2f5:	jnp    0x14002b2c1
   14002b2f7:	jne    0x14002b300
   14002b2f9:	fmulp  st(2),st
   14002b2fb:	xor    dh,dl
   14002b2fd:	(bad)  
   14002b2fe:	add    ecx,ecx
   14002b300:	cdq    
   14002b301:	fmul   DWORD PTR [rax+0x8]
   14002b304:	rex.WX mov dl,dl
   14002b307:	rex.WRB (bad) 
   14002b309:	shl    dh,0x28
   14002b30c:	out    0x85,eax
   14002b30e:	cmc    
   14002b30f:	xor    ebx,ebp
   14002b311:	std    
   14002b312:	adc    DWORD PTR [rdi-0x5ebaeba5],ebp
   14002b318:	(bad)  
   14002b319:	or     al,0x8c
   14002b31b:	jne    0x14002b333
   14002b31d:	add    BYTE PTR [rip+0x44af35ab],0x7e        # 0x184b1e8cf
   14002b324:	out    0x55,eax
   14002b326:	call   0x141175bf6
   14002b32b:	pop    rsp
   14002b32c:	or     DWORD PTR [rdx+rsi*8+0x43],ebx
   14002b330:	cmc    
   14002b331:	(bad)  
   14002b332:	sbb    al,0x56
   14002b334:	stos   BYTE PTR es:[rdi],al
   14002b335:	pop    rcx
   14002b336:	(bad)  
   14002b337:	pop    rsi
   14002b338:	mov    esi,0xe5b04590
   14002b33d:	push   rdi
   14002b33e:	mov    al,0x96
   14002b340:	rex.W
   14002b341:	rex.WX jb 0x14002b35f
   14002b344:	icebp  
   14002b345:	loopne 0x14002b2d2
   14002b347:	(bad)  
   14002b348:	loop   0x14002b38a
   14002b34a:	(bad)  
   14002b34b:	loop   0x14002b3ca
   14002b34d:	out    dx,eax
   14002b34e:	sti    
   14002b34f:	cmp    ch,ch
   14002b351:	mov    ah,0x45
   14002b353:	idiv   BYTE PTR [rbp+0x1cb2a0cf]
   14002b359:	fwait
   14002b35a:	mov    dh,0xdd
   14002b35c:	add    al,0x25
   14002b35e:	nop
   14002b35f:	(bad)  
   14002b360:	jo     0xe6a9e26f
   14002b366:	je     0x14002b37a
   14002b368:	xor    al,0xfe
   14002b36b:	mov    ebp,0x451fdb2d
   14002b370:	rex.WRB
   14002b371:	ds (bad) 
   14002b373:	outs   dx,DWORD PTR ds:[rsi]
   14002b374:	sahf   
   14002b375:	sbb    al,0x7c
   14002b377:	scas   eax,DWORD PTR es:[rdi]
   14002b378:	jl     0x14002b3e1
   14002b37a:	rex.RB
   14002b37b:	rex.WR
   14002b37c:	rex.WRB
   14002b37d:	lock adc BYTE PTR [rbx],ah
   14002b380:	cwde   
   14002b381:	sub    DWORD PTR [rbx+0x2845960d],ebx
   14002b387:	push   rdi
   14002b388:	or     al,0x95
   14002b38a:	xor    eax,DWORD PTR [rbp+0x68c1219f]
   14002b390:	rex.WR call FWORD PTR [rbp*4-0x1b618025]
   14002b398:	movsxd edi,DWORD PTR [rdi-0x61d0fc39]
   14002b39e:	jrcxz  0x14002b3f3
   14002b3a0:	lahf   
   14002b3a1:	std    
   14002b3a2:	scas   eax,DWORD PTR es:[rdi]
   14002b3a3:	or     al,0x46
   14002b3a5:	and    edx,DWORD PTR [rsi-0x36d28791]
   14002b3ab:	or     eax,0x4bdb2137
   14002b3b0:	ror    DWORD PTR [rax],cl
   14002b3b2:	mov    esi,0xfa84578f
   14002b3b7:	jle    0x14002b424
   14002b3b9:	movabs al,gs:0x97cbf6d08059a628
   14002b3c3:	pop    rbx
   14002b3c4:	jnp    0x14002b34b
   14002b3c6:	lods   eax,DWORD PTR ds:[rsi]
   14002b3c7:	or     eax,0xd3a96418
   14002b3cc:	pop    rax
   14002b3cd:	leave  
   14002b3ce:	cdq    
   14002b3cf:	adc    BYTE PTR [rdx+0x63ce618d],al
   14002b3d5:	rex.RXB jnp 0x14002b3cc
   14002b3d8:	xor    ecx,DWORD PTR [rax+0x13]
   14002b3db:	rex.WRXB pop r12
   14002b3dd:	and    eax,0xb27fcd07
   14002b3e2:	xor    bh,bh
   14002b3e4:	pop    rbp
   14002b3e5:	fld    QWORD PTR [rdx+0x41cde4b9]
   14002b3eb:	test   DWORD PTR [rdx-0x584e6830],0x75e5e008
   14002b3f5:	add    eax,0xd1696672
   14002b3fa:	cdq    
   14002b3fb:	retf   0xc6d7
   14002b3fe:	lahf   
   14002b3ff:	out    dx,eax
   14002b400:	(bad)  
   14002b401:	sti    
   14002b402:	pop    rdi
   14002b403:	rex.WXB scas al,BYTE PTR es:[rdi]
   14002b405:	outs   dx,BYTE PTR ds:[rsi]
   14002b406:	pop    rax
   14002b407:	sbb    cx,WORD PTR [rbx]
   14002b40a:	test   DWORD PTR [rdx+rdx*4],edx
   14002b40d:	rex.RXB iret 
   14002b40f:	(bad)  
   14002b410:	sbb    BYTE PTR [rcx],ah
   14002b412:	add    al,0xef
   14002b414:	jmp    rbp
   14002b416:	fbld   TBYTE PTR [rcx]
   14002b418:	imul   ebp,DWORD PTR [rsi],0x3fe37d93
   14002b41e:	adc    DWORD PTR [rdi],ecx
   14002b420:	mov    ebx,0xab0766d8
   14002b425:	int    0xb4
   14002b427:	leave  
   14002b428:	data16 sbb bl,dl
   14002b42b:	(bad)  
   14002b42c:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002b42e:	adc    BYTE PTR [rdx+rsi*4+0x4ab78c19],al
   14002b435:	mov    bh,BYTE PTR [rax-0x7b]
   14002b438:	(bad)  
   14002b43a:	jl     0x14002b400
   14002b43c:	js     0x14002b47b
   14002b43e:	(bad)  
   14002b43f:	sub    al,0x2
   14002b441:	cmp    edi,DWORD PTR [rip+0x7aa21b35]        # 0x1baa4cf7c
   14002b447:	out    0x65,eax
   14002b449:	add    ch,BYTE PTR [rax]
   14002b44b:	add    bh,BYTE PTR [rsi-0x3a]
   14002b44e:	loop   0x14002b3fd
   14002b450:	or     DWORD PTR [rcx],eax
   14002b452:	cmp    al,BYTE PTR [rbx+0x5bf69761]
   14002b458:	jle    0x14002b3df
   14002b45a:	clc    
   14002b45b:	ret    
   14002b45c:	mov    edi,0xf63e9fcb
   14002b461:	cmp    BYTE PTR [rdi+0x4effd3f9],bl
   14002b467:	outs   dx,DWORD PTR ds:[rsi]
   14002b468:	xor    BYTE PTR [rcx+rdi*8+0x35],ah
   14002b46c:	scas   eax,DWORD PTR es:[rdi]
   14002b46d:	and    edi,DWORD PTR [rbp+0x7b6426f1]
   14002b473:	sbb    DWORD PTR [rbx+0x30275fa5],ebp
   14002b479:	or     eax,0xba5b59f8
   14002b47e:	cs sub DWORD PTR fs:[rbx],edi
   14002b482:	xor    DWORD PTR [rbx-0x3b],ebp
   14002b485:	test   DWORD PTR [rbp+0x60b8dabd],esp
   14002b48b:	pop    rbp
   14002b48c:	sub    BYTE PTR [rsi],dh
   14002b48e:	jb     0x14002b4cb
   14002b490:	xor    al,BYTE PTR [rip+0xffffffffce2dd52f]        # 0x10e3089c5
   14002b496:	pop    rdx
   14002b497:	out    dx,eax
   14002b498:	(bad)
   14002b49c:	movabs al,ds:0x94833b096636e295
   14002b4a5:	(bad)  
   14002b4a6:	mov    esi,edi
   14002b4a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002b4a9:	mov    WORD PTR [rdi+0x68],?
   14002b4ac:	data16 mov dh,0x82
   14002b4af:	jrcxz  0x14002b513
   14002b4b1:	fsubr  DWORD PTR [rbx-0x3e]
   14002b4b4:	(bad)  
   14002b4b6:	rex.WR add BYTE PTR [rdi-0x2af99e04],r13b
   14002b4bd:	out    dx,eax
   14002b4be:	(bad)  
   14002b4bf:	(bad)  
   14002b4c0:	rex.X (bad) 
   14002b4c2:	out    0x39,eax
   14002b4c4:	(bad)  
   14002b4c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002b4c6:	rex jns 0x14002b4c2
   14002b4c9:	mov    ebp,0xf1728810
   14002b4ce:	jp     0x14002b4b9
   14002b4d0:	retf   0x1174
   14002b4d3:	cmp    al,0xbe
   14002b4d5:	imul   BYTE PTR [rax]
   14002b4d7:	jg     0x14002b53b
   14002b4d9:	es mov esp,0xcebfddf7
   14002b4df:	cmp    ebp,0xfcfc3237
   14002b4e5:	mov    edi,0x419e6d44
   14002b4ea:	jbe    0x14002b4e2
   14002b4ec:	stc    
   14002b4ed:	scas   al,BYTE PTR es:[rdi]
   14002b4ee:	ret    0x58d3
   14002b4f1:	rex.X mov al,0x34
   14002b4f4:	pushf  
   14002b4f5:	fwait
   14002b4f6:	cmp    al,0x5d
   14002b4f8:	adc    DWORD PTR [rax+0x6e],0xffffffcc
   14002b4fc:	jrcxz  0x14002b498
   14002b4fe:	jo     0x14002b550
   14002b500:	xor    ah,al
   14002b502:	int3   
   14002b503:	cmc    
   14002b504:	xchg   esi,eax
   14002b505:	mov    esi,0x3ba7e943
   14002b50a:	pop    rbp
   14002b50b:	(bad)  
   14002b50c:	cmp    BYTE PTR [rbx],ch
   14002b50e:	fwait
   14002b50f:	(bad)  
   14002b510:	xor    edx,DWORD PTR [rdi+0x4a492e1e]
   14002b516:	sbb    dh,dh
   14002b518:	shr    BYTE PTR [rax+0x3a],0xef
   14002b51c:	sti    
   14002b51d:	rex.WRB in al,0x2f
   14002b520:	std    
   14002b521:	and    edi,DWORD PTR [rsi]
   14002b523:	cmc    
   14002b524:	xchg   edi,eax
   14002b525:	(bad)  
   14002b527:	repz pop rdi
   14002b529:	cld    
   14002b52a:	sbb    al,0xc3
   14002b52c:	sub    al,0x67
   14002b52e:	jmp    0xce4c1119
   14002b533:	fadd   QWORD PTR [rax-0x4505d294]
   14002b539:	jnp    0x14002b4c6
   14002b53b:	cmc    
   14002b53c:	rex.X out dx,al
   14002b53e:	rex.WRX sar QWORD PTR [rbx+0x2d58361b],0xb3
   14002b546:	sar    DWORD PTR [rdi+0x18129de9],0x63
   14002b54d:	jge    0x14002b559
   14002b54f:	mov    al,0xcc
   14002b551:	rex.WXB loope 0x14002b547
   14002b554:	fisub  WORD PTR [rdx+0x8]
   14002b557:	or     r10d,r11d
   14002b55a:	rex mov DWORD PTR [rdi+0x10fadc30],ebp
   14002b561:	sub    BYTE PTR [rbp+0x4f],bh
   14002b564:	adc    DWORD PTR [rbp-0x4a9c62a8],0x66
   14002b56b:	jmp    0x14002b5e1
   14002b56d:	fisttp WORD PTR [rbx+0x7315bf02]
   14002b573:	rex.WXB add BYTE PTR [r15+0x34071085],dl
   14002b57a:	data16 (bad) 
   14002b57c:	or     ebp,DWORD PTR [rdi-0x63]
   14002b57f:	movsxd ebx,DWORD PTR [rbx-0x7c]
   14002b582:	stos   DWORD PTR es:[rdi],eax
   14002b583:	clc    
   14002b584:	mov    ds,WORD PTR [rbp-0x5067aeb6]
   14002b58a:	rex.WX movabs rdx,0x9d9f34f7399ec5cd
   14002b594:	je     0x14002b60f
   14002b596:	out    dx,eax
   14002b597:	pop    rbp
   14002b598:	mov    edi,0x6f074dc0
   14002b59d:	(bad)  
   14002b59e:	lock mov edi,0xf67c8e3e
   14002b5a4:	(bad)  
   14002b5a5:	enter  0x1174,0x13
   14002b5a9:	(bad)  
   14002b5aa:	and    eax,0xfbd10dc1
   14002b5af:	movabs al,ds:0x97ae43a2b001a7d9
   14002b5b8:	pop    rbp
   14002b5b9:	xor    DWORD PTR [rbx+0x1e],esi
   14002b5bc:	sbb    BYTE PTR [r10+0x27],cl
   14002b5c0:	pop    rbx
   14002b5c1:	clc    
   14002b5c2:	lock out dx,al
   14002b5c4:	mov    edi,0x945d88a6
   14002b5c9:	(bad)  
   14002b5ca:	adc    ecx,DWORD PTR [rax-0x32]
   14002b5cd:	imul   ebp,DWORD PTR [rsi+0x63],0xffffffa1
   14002b5d1:	ja     0x14002b5d9
   14002b5d3:	mov    ecx,0x3e163aff
   14002b5d8:	clc    
   14002b5d9:	(bad)  
   14002b5da:	cmp    BYTE PTR [rdi-0x39],dh
   14002b5dd:	mov    ebx,0xdff71ff8
   14002b5e2:	(bad)  
   14002b5e3:	xlat   BYTE PTR ds:[rbx]
   14002b5e4:	mov    edi,0xa35415fb
   14002b5e9:	ret    
   14002b5ea:	retf   0xb7cd
   14002b5ed:	adc    bl,BYTE PTR [rdi+0x7d]
   14002b5f0:	add    al,0xd2
   14002b5f2:	xchg   esi,eax
   14002b5f3:	out    dx,eax
   14002b5f4:	mov    eax,0x482bc6e3
   14002b5f9:	add    eax,0xf7ccc5b1
   14002b5fe:	pop    rdx
   14002b5ff:	stc    
   14002b600:	and    dh,BYTE PTR [rbp-0x2]
   14002b603:	xchg   r14d,eax
   14002b605:	ins    DWORD PTR es:[rdi],dx
   14002b606:	xchg   ecx,eax
   14002b607:	movabs eax,ds:0x50faba752ee38e98
   14002b610:	pop    rax
   14002b611:	jmp    0x14002b5d2
   14002b613:	loopne 0x14002b5ff
   14002b615:	and    BYTE PTR [rcx+rsi*2-0x1e7c50b5],cl
   14002b61c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b61d:	(bad)  
   14002b61e:	icebp  
   14002b61f:	in     al,0x68
   14002b621:	std    
   14002b622:	rex.RX
   14002b623:	es out dx,al
   14002b625:	ficomp WORD PTR [rbx]
   14002b627:	pop    rdi
   14002b628:	pop    rcx
   14002b629:	imul   edi,DWORD PTR [rcx+rbx*2-0xe],0x764e0d79
   14002b631:	leave  
   14002b632:	sahf   
   14002b633:	mov    WORD PTR [rbx],?
   14002b635:	lea    edi,[rcx+0x67cb8023]
   14002b63b:	cmc    
   14002b63c:	xchg   edx,eax
   14002b63d:	sar    cl,0xd7
   14002b640:	add    eax,0xb252553
   14002b645:	and    BYTE PTR [rsp+rbp*4],dl
   14002b648:	add    al,0xe3
   14002b64a:	ror    DWORD PTR [rbp+0x46],cl
   14002b64d:	xor    DWORD PTR [rip+0x38aeb777],ebp        # 0x178b16dca
   14002b653:	(bad)
   14002b656:	leave  
   14002b657:	dec    BYTE PTR [rcx-0x2]
   14002b65a:	clc    
   14002b65b:	fldcw  WORD PTR [rdi]
   14002b65d:	repnz imul BYTE PTR [rbx-0x22]
   14002b661:	ret    0x3f5b
   14002b664:	imul   BYTE PTR [rcx]
   14002b666:	es (bad) 
   14002b669:	iret   
   14002b66a:	call   0x1191d35de
   14002b66f:	fild   WORD PTR [rax+0x34]
   14002b672:	(bad)  
   14002b673:	fcom   QWORD PTR [rax+0x5bbc8ea5]
   14002b679:	movsxd ecx,DWORD PTR [rsi]
   14002b67b:	xor    r15b,r9b
   14002b67e:	iret   
   14002b67f:	clc    
   14002b680:	sbb    ebx,edx
   14002b682:	mov    dh,0x4c
   14002b684:	add    ah,BYTE PTR [rip+0x692d3a05]        # 0x1a92ff08f
   14002b68a:	(bad)  
   14002b68b:	shl    DWORD PTR [rcx+0x4533b8b7],cl
   14002b691:	(bad)  
   14002b692:	loopne 0x14002b63c
   14002b694:	shufps xmm2,XMMWORD PTR [rax+0x68fbecfc],0x7e
   14002b69c:	loopne 0x14002b63d
   14002b69e:	repnz movabs ds:0xf63cfbf87fd3e23c,eax
   14002b6a8:	fsubr  st(3),st
   14002b6aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b6ab:	sti    
   14002b6ac:	(bad)  
   14002b6ad:	xchg   edx,eax
   14002b6ae:	pop    rsi
   14002b6af:	jnp    0x14002b6b4
   14002b6b1:	shr    edx,1
   14002b6b3:	mov    BYTE PTR [r11],bl
   14002b6b6:	adc    al,0x2d
   14002b6b8:	mov    ecx,0xe5bb686c
   14002b6bd:	(bad)  
   14002b6be:	rex.WRX pop rdx
   14002b6c0:	scas   eax,DWORD PTR es:[rdi]
   14002b6c1:	cmc    
   14002b6c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b6c3:	xchg   DWORD PTR [rcx],edx
   14002b6c5:	outs   dx,BYTE PTR ds:[rsi]
   14002b6c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002b6c7:	and    DWORD PTR [rsp+rax*8],edx
   14002b6ca:	xor    BYTE PTR [rbp-0x3129ebaf],bh
   14002b6d0:	rex.R pop rbx
   14002b6d2:	sahf   
   14002b6d3:	cmp    bl,cl
   14002b6d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b6d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002b6d7:	es sub al,0x2d
   14002b6da:	mov    eax,0xaeb5a940
   14002b6df:	add    dl,cl
   14002b6e1:	xchg   ecx,eax
   14002b6e2:	test   cl,al
   14002b6e4:	imul   edi,DWORD PTR [rdi-0x13],0xb18b7c7d
   14002b6eb:	(bad)  
   14002b6ec:	ins    DWORD PTR es:[rdi],dx
   14002b6ed:	xor    al,0xe4
   14002b6ef:	(bad)  
   14002b6f0:	pop    rsp
   14002b6f1:	out    0x48,eax
   14002b6f3:	jrcxz  0x14002b722
   14002b6f5:	mov    al,BYTE PTR [rdx-0x6986ebdc]
   14002b6fb:	xor    ecx,ecx
   14002b6fd:	xor    cl,BYTE PTR [rcx+rsi*1-0x42c9a69c]
   14002b704:	out    0x52,al
   14002b706:	(bad)  
   14002b707:	(bad)  
   14002b708:	(bad)  
   14002b709:	lahf   
   14002b70a:	in     eax,0xcf
   14002b70c:	pop    rsp
   14002b70d:	call   0x19cc43109
   14002b712:	adc    eax,eax
   14002b714:	in     eax,0x8
   14002b716:	jg     0x14002b739
   14002b718:	jo     0x14002b74d
   14002b71a:	movs   DWORD PTR es:[rdi],DWORD PTR es:[rsi]
   14002b71c:	sub    BYTE PTR [rdx+0x59],ah
   14002b71f:	rex.B scas eax,DWORD PTR es:[rdi]
   14002b721:	outs   dx,BYTE PTR ds:[rsi]
   14002b722:	push   rbp
   14002b723:	sahf   
   14002b724:	test   edx,ebp
   14002b726:	adc    DWORD PTR [rbp+0x55dd05e8],eax
   14002b72c:	cli    
   14002b72d:	add    ch,al
   14002b72f:	js     0x14002b77b
   14002b731:	sub    bh,BYTE PTR [rdx-0x6a0d16d]
   14002b737:	leave  
   14002b738:	(bad)  
   14002b739:	js     0x14002b7a1
   14002b73b:	stc    
   14002b73c:	data16 dec dh
   14002b73f:	jnp    0x14002b740
   14002b741:	sbb    ebx,edi
   14002b743:	outs   dx,DWORD PTR ds:[rsi]
   14002b744:	jnp    0x14002b75d
   14002b746:	movabs ds:0x2904bf89e23efeaf,eax
   14002b74f:	mov    al,0x32
   14002b751:	jno    0x14002b710
   14002b753:	or     BYTE PTR [rbx+0x51b95f20],cl
   14002b759:	(bad)  
   14002b75a:	pop    rbx
   14002b75b:	cld    
   14002b75c:	ja     0x14002b714
   14002b75e:	pop    rax
   14002b75f:	shl    DWORD PTR [rbx+0x1df0bd66],0x75
   14002b766:	scas   eax,DWORD PTR es:[edi]
   14002b768:	rex.WX xchg rsp,rax
   14002b76a:	add    al,0xcf
   14002b76c:	pop    rbx
   14002b76d:	sbb    bh,BYTE PTR [rdx]
   14002b76f:	xchg   DWORD PTR [rsp+rcx*4+0x3a],edi
   14002b773:	je     0x14002b788
   14002b775:	lods   eax,DWORD PTR ds:[rsi]
   14002b776:	idiv   esi
   14002b778:	(bad)  
   14002b779:	ret    
   14002b77a:	(bad)  
   14002b77b:	mov    esi,0xff7f4f9b
   14002b780:	(bad)  
   14002b781:	mov    eax,0xd3f75bff
   14002b786:	sar    DWORD PTR [rcx],cl
   14002b788:	lods   eax,DWORD PTR ds:[rsi]
   14002b789:	sbb    ebx,DWORD PTR [rsi+0x43]
   14002b78c:	jb     0x14002b763
   14002b78e:	(bad)  
   14002b78f:	push   rsp
   14002b790:	imul   edx,DWORD PTR [rcx],0x2b
   14002b793:	and    esp,DWORD PTR [rsi-0x7e]
   14002b796:	jl     0x14002b73d
   14002b798:	retf   
   14002b799:	je     0x14002b730
   14002b79b:	jp     0x14002b77e
   14002b79d:	fadd   QWORD PTR [rbx]
   14002b79f:	xor    DWORD PTR [rdx+rsi*4+0x1766ee0a],edx
   14002b7a6:	sub    DWORD PTR [rbx],edi
   14002b7a8:	mov    bh,0xe3
   14002b7aa:	xchg   edx,eax
   14002b7ab:	movabs al,ds:0x6b939d74793cd43b
   14002b7b4:	add    ebp,esi
   14002b7b6:	ds loop 0x14002b73d
   14002b7b9:	(bad)  
   14002b7ba:	xlat   BYTE PTR ds:[rbx]
   14002b7bb:	(bad)  
   14002b7bc:	fdivr  DWORD PTR [rax]
   14002b7be:	push   rdi
   14002b7bf:	retf   0x5298
   14002b7c2:	cli    
   14002b7c3:	shr    BYTE PTR [rdx+0x67],cl
   14002b7c6:	add    eax,0x41b5c860
   14002b7cb:	cmp    DWORD PTR [esi],esi
   14002b7ce:	iret   
   14002b7cf:	sar    BYTE PTR [rcx-0x12],1
   14002b7d2:	jp     0x14002b80c
   14002b7d4:	sbb    bl,ah
   14002b7d6:	jmp    0x14002b805
   14002b7d8:	pushf  
   14002b7d9:	pop    rcx
   14002b7da:	(bad)  
   14002b7db:	je     0x14002b7a3
   14002b7dd:	jo     0x14002b817
   14002b7df:	movabs ds:0xb7f042a3468c2695,al
   14002b7e8:	mov    esi,0xd0bafdc2
   14002b7ed:	jnp    0x14002b841
   14002b7ef:	retf   0xdef3
   14002b7f2:	(bad)  
   14002b7f3:	iret   
   14002b7f4:	popf   
   14002b7f5:	stos   BYTE PTR es:[rdi],al
   14002b7f6:	mov    edx,0x80259513
   14002b7fb:	sub    esp,DWORD PTR [rcx]
   14002b7fd:	in     al,dx
   14002b7fe:	(bad)  
   14002b7ff:	(bad)  
   14002b800:	repz shl DWORD PTR [rdi-0x6a829f9c],0x4e
   14002b808:	rex.WB (bad) 
   14002b80a:	int    0x34
   14002b80c:	cld    
   14002b80d:	pushf  
   14002b80e:	jle    0x14002b879
   14002b810:	retf   
   14002b811:	sub    BYTE PTR [rcx+0x72818899],ah
   14002b817:	addr32 or eax,0x89094161
   14002b81d:	mov    dh,0x86
   14002b81f:	rex.RXB xlat BYTE PTR ds:[rbx]
   14002b821:	(bad)  
   14002b822:	out    0x78,eax
   14002b824:	out    dx,eax
   14002b825:	cmp    BYTE PTR [rdi],bh
   14002b827:	jnp    0x14002b811
   14002b829:	outs   dx,BYTE PTR ds:[rsi]
   14002b82a:	fdivp  st(4),st
   14002b82c:	imul   edi,DWORD PTR [rdi+0x40],0xfffffff2
   14002b830:	rcl    BYTE PTR [rdi-0x2f],1
   14002b833:	jmp    rdi
   14002b835:	adc    ebx,eax
   14002b837:	(bad)  
   14002b838:	(bad)  
   14002b839:	jne    0x14002b816
   14002b83b:	jno    0x14002b7c6
   14002b83d:	sbb    BYTE PTR [rsp+rax*8-0x3518d56a],dl
   14002b844:	rex.B ret 0xf799
   14002b848:	ret    0xf0cf
   14002b84b:	mov    dh,0xf
   14002b84d:	add    BYTE PTR [rsi],al
   14002b84f:	lahf   
   14002b850:	mov    esp,0xc09befc8
   14002b855:	and    DWORD PTR [rsi],eax
   14002b857:	mov    ah,0xc6
   14002b859:	(bad)  
   14002b85a:	sbb    al,0x21
   14002b85c:	and    eax,0x3423bed1
   14002b861:	fdivp  st(6),st
   14002b863:	mov    r10b,0xb7
   14002b866:	(bad)  
   14002b867:	cmp    eax,0x38e277be
   14002b86c:	jg     0x14002b864
   14002b86e:	xchg   edi,edi
   14002b870:	sahf   
   14002b871:	(bad)  
   14002b872:	(bad)  
   14002b873:	(bad)  
   14002b874:	rex.RXB mov r10d,0xf162aff
   14002b87a:	pop    rsi
   14002b87b:	sbb    DWORD PTR [rsp+rbx*2+0x42],0xffffffaa
   14002b880:	rex.RX sub BYTE PTR es:[rdi+0x1e],r9b
   14002b885:	add    dl,BYTE PTR [rdi+0x16415763]
   14002b88b:	icebp  
   14002b88c:	es or  al,dh
   14002b88f:	xchg   bh,cl
   14002b891:	test   BYTE PTR [rax],ah
   14002b893:	popf   
   14002b894:	lock xor DWORD PTR [rsi],ecx
   14002b897:	enterw 0xf9c2,0xfd
   14002b89c:	xchg   esi,eax
   14002b89d:	rcr    DWORD PTR [rbx-0x3b04419d],cl
   14002b8a3:	sbb    al,bl
   14002b8a5:	int3   
   14002b8a6:	ror    BYTE PTR [rax+riz*4+0x15],cl
   14002b8aa:	pop    rbx
   14002b8ab:	outs   dx,DWORD PTR ds:[rsi]
   14002b8ac:	mov    dh,0xbb
   14002b8ae:	std    
   14002b8af:	std    
   14002b8b0:	add    al,0xc6
   14002b8b2:	(bad)  
   14002b8b3:	or     BYTE PTR [rbx-0x42],cl
   14002b8b6:	mov    edi,0xdda3597f
   14002b8bb:	sti    
   14002b8bc:	loope  0x14002b8ad
   14002b8be:	sahf   
   14002b8bf:	add    dl,cl
   14002b8c1:	lahf   
   14002b8c2:	mov    bl,0x46
   14002b8c4:	xchg   ebx,eax
   14002b8c5:	cmp    DWORD PTR gs:[rcx-0x6a],ebx
   14002b8c9:	xchg   ecx,eax
   14002b8ca:	fld    DWORD PTR gs:[rip+0xffffffffe4f17f35]        # 0x124f43806
   14002b8d1:	cld    
   14002b8d2:	fild   WORD PTR [rdx-0x7540b440]
   14002b8d8:	push   rax
   14002b8d9:	or     BYTE PTR [rcx-0x181995ae],al
   14002b8df:	cmp    al,0x58
   14002b8e1:	add    al,0x95
   14002b8e3:	and    al,0x80
   14002b8e5:	in     eax,dx
   14002b8e6:	adc    bh,dh
   14002b8e8:	jmp    0x19e1ce174
   14002b8ed:	cmp    bh,dl
   14002b8ef:	push   rcx
   14002b8f0:	xchg   esp,eax
   14002b8f1:	push   rsi
   14002b8f2:	rcr    cl,1
   14002b8f4:	test   eax,0xa3325015
   14002b8f9:	sbb    eax,0x29220831
   14002b8fe:	mov    DWORD PTR [rsp+rbp*1-0x767c0d5e],eax
   14002b905:	(bad)  
   14002b906:	pushf  
   14002b907:	imul   ebx,DWORD PTR [rdx-0x11c1d377],0xffffff8c
   14002b90e:	(bad)  
   14002b90f:	(bad)  
   14002b910:	adc    esi,0x781e5d27
   14002b916:	(bad)  
   14002b917:	fwait
   14002b918:	cmp    al,0xdc
   14002b91a:	mov    esi,0xeb75bf8a
   14002b91f:	pop    rbp
   14002b920:	fdiv   st(6),st
   14002b922:	xchg   BYTE PTR [rdi-0x2e],cl
   14002b925:	jns    0x14002b90f
   14002b927:	sub    ebp,DWORD PTR [rsi+0xfb3cfc3]
   14002b92d:	movabs eax,ds:0x2093ec1f13303dc7
   14002b936:	adc    al,0x33
   14002b938:	cmp    eax,0x479e98c6
   14002b93d:	adc    DWORD PTR [rdi],esp
   14002b93f:	sub    ebx,esi
   14002b941:	or     edx,ecx
   14002b943:	jge    0x14002b994
   14002b945:	pop    rbp
   14002b946:	rex.RX cmp r12d,DWORD PTR [rcx+0x15210634]
   14002b94d:	stos   BYTE PTR es:[rdi],al
   14002b94e:	shl    DWORD PTR [rcx],1
   14002b950:	ds jb  0x14002b98e
   14002b953:	rcr    DWORD PTR [rbx+0x5de1917e],1
   14002b959:	mov    edi,0x9fd43c0
   14002b95e:	pop    rdi
   14002b95f:	cld    
   14002b960:	ret    0xe4ff
   14002b963:	scas   eax,DWORD PTR es:[rdi]
   14002b964:	sahf   
   14002b965:	clc    
   14002b966:	add    DWORD PTR [rdx-0x91e9e2d],edi
   14002b96c:	xlat   BYTE PTR ds:[rbx]
   14002b96d:	adc    ebp,DWORD PTR [rip+0x14a360ac]        # 0x154a61a1f
   14002b973:	push   rax
   14002b974:	rex.WRX or BYTE PTR [rbp+0x5a5d2b05],0xcd
   14002b97c:	xchg   BYTE PTR [rax+rbp*4-0x48a40831],dh
   14002b983:	rex.WX iretq 
   14002b985:	loopne 0x14002b93d
   14002b987:	or     esi,DWORD PTR [rdi+0x3b5b63a5]
   14002b98d:	mov    ch,0x6
   14002b98f:	rex.WX mov dil,0x19
   14002b992:	sub    eax,esp
   14002b994:	mov    ecx,0xeb867d53
   14002b999:	add    ebp,eax
   14002b99b:	xor    al,0xbd
   14002b99d:	loopne 0x14002b979
   14002b99f:	jmp    0x18cd963ea
   14002b9a4:	leave  
   14002b9a5:	es pop rsp
   14002b9a7:	sar    DWORD PTR fs:[rsi],1
   14002b9aa:	mov    BYTE PTR [rdx],ah
   14002b9ac:	jle    0x14002b9ff
   14002b9ae:	outs   dx,BYTE PTR ds:[rsi]
   14002b9af:	adc    ch,dl
   14002b9b1:	ss (bad) 
   14002b9b3:	mov    cl,0x8
   14002b9b5:	jrcxz  0x14002b9e3
   14002b9b7:	add    eax,0xceb92c63
   14002b9bc:	rcr    DWORD PTR [rdx+0x17],1
   14002b9bf:	(bad)  
   14002b9c1:	(bad)  
   14002b9c2:	mov    esi,0xa5f7d6ff
   14002b9c7:	xchg   esp,eax
   14002b9c8:	add    eax,0x50a52809
   14002b9cd:	rex.WX adc rdi,rax
   14002b9d0:	xor    DWORD PTR [rcx+0x1c],esi
   14002b9d3:	xor    ecx,DWORD PTR [rdi]
   14002b9d5:	test   al,0x14
   14002b9d7:	add    DWORD PTR [rsi+rcx*4-0x57],ebx
   14002b9db:	jne    0x14002b986
   14002b9dd:	fild   QWORD PTR [rbx]
   14002b9df:	ds in  eax,0xe6
   14002b9e2:	sbb    al,0xda
   14002b9e4:	(bad)  
   14002b9e5:	or     eax,0x1836763
   14002b9ea:	jbe    0x14002b9b7
   14002b9ec:	out    dx,eax
   14002b9ed:	add    dl,BYTE PTR [rsp+rdx*1-0x3a776c4c]
   14002b9f4:	retfw  0x3646
   14002b9f8:	ret    0x4d58
   14002b9fb:	ja     0x14002ba2f
   14002b9fd:	loope  0x14002b9f3
   14002b9ff:	rex jb 0x14002b9b7
   14002ba02:	rex.WX
   14002ba03:	xchg   r12,rax
   14002ba05:	pushf  
   14002ba06:	and    DWORD PTR [rdx],edx
   14002ba08:	add    esp,eax
   14002ba0a:	rol    BYTE PTR [rip+0xffffffff9de85eca],cl        # 0xddeb18da
   14002ba10:	in     al,0xe4
   14002ba12:	shl    DWORD PTR [rdi-0x6f824f88],cl
   14002ba18:	mov    ebx,0x370f78de
   14002ba1d:	(bad)  
   14002ba1f:	neg    BYTE PTR cs:[rbp-0x20397988]
   14002ba26:	jl     0x14002ba45
   14002ba28:	icebp  
   14002ba29:	in     al,0xf7
   14002ba2b:	cdq    
   14002ba2c:	lods   al,BYTE PTR ds:[rsi]
   14002ba2d:	sbb    eax,0xc59e6cc3
   14002ba32:	call   0x165ebeb98
   14002ba37:	add    ch,BYTE PTR [rbx]
   14002ba39:	xchg   ebp,eax
   14002ba3a:	rex.WXB xchg r13,rax
   14002ba3c:	or     DWORD PTR [rsi+riz*8-0x75],ebx
   14002ba40:	(bad)  
   14002ba41:	imul   edx,DWORD PTR [rsp+rax*1+0x1210811e],0x3c5d24a4
   14002ba4c:	rex.W mov spl,0xff
   14002ba4f:	pop    rdx
   14002ba50:	loop   0x14002ba3d
   14002ba52:	out    dx,al
   14002ba53:	and    BYTE PTR [rdi-0x3],bh
   14002ba56:	cmp    ebx,DWORD PTR [rax-0x45]
   14002ba59:	(bad)  
   14002ba5a:	(bad)  
   14002ba5b:	(bad)  
   14002ba5c:	out    dx,eax
   14002ba5d:	jne    0x14002ba58
   14002ba5f:	out    0x3,al
   14002ba61:	div    ecx
   14002ba63:	shl    BYTE PTR [rbx-0x5b91ccf1],1
   14002ba69:	sub    al,0xdd
   14002ba6b:	jno    0x14002baa8
   14002ba6d:	push   0x71
   14002ba6f:	add    eax,0x71ac62a1
   14002ba74:	jmp    0x165d70db6
   14002ba79:	pop    rax
   14002ba7a:	(bad)  
   14002ba7b:	sbb    al,0x95
   14002ba7d:	jle    0x14002baba
   14002ba7f:	sub    DWORD PTR [rcx-0xdf27e75],0x83197d6e
   14002ba89:	cmc    
   14002ba8a:	fs pop rdx
   14002ba8c:	jb     0x14002ba93
   14002ba8e:	lock stos DWORD PTR es:[rdi],eax
   14002ba90:	or     cl,BYTE PTR [rdx]
   14002ba92:	repnz add BYTE PTR [rcx],ah
   14002ba95:	or     al,0x6e
   14002ba97:	pop    rbx
   14002ba98:	je     0x14002ba91
   14002ba9a:	sub    dl,dl
   14002ba9c:	fimul  WORD PTR [rdx-0x11f18af1]
   14002baa3:	add    r14,QWORD PTR [r14]
   14002baa6:	(bad)  
   14002baa7:	adc    edi,ecx
   14002baa9:	xor    BYTE PTR [rax-0x1ea2ed63],al
   14002baaf:	push   rbx
   14002bab0:	loopne 0x14002ba8f
   14002bab2:	add    BYTE PTR [rdi+0xb],bl
   14002bab5:	(bad)  
   14002bab6:	mov    ch,0x8b
   14002bab8:	or     ebx,DWORD PTR [rax]
   14002baba:	rex.XB sahf 
   14002babc:	out    0x17,eax
   14002babe:	pushf  
   14002babf:	adc    esi,DWORD PTR [rbx]
   14002bac1:	xor    DWORD PTR [rdi+0x28010212],edx
   14002bac7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bac8:	mov    ah,BYTE PTR [rax-0x4a786794]
   14002bace:	add    eax,0x5cbc0150
   14002bad3:	ret    0x5290
   14002bad6:	adc    eax,0xe40b6291
   14002badb:	mov    ecx,0x6d16d721
   14002bae0:	std    
   14002bae1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002bae2:	cmp    eax,0x6567825b
   14002bae7:	or     BYTE PTR [rcx],al
   14002bae9:	lods   eax,DWORD PTR ds:[rsi]
   14002baea:	cmp    BYTE PTR [rdx+0x5f],ah
   14002baed:	mov    bl,0xc9
   14002baef:	cmp    bh,cl
   14002baf1:	cmp    DWORD PTR [rdi],esi
   14002baf3:	sbb    dh,BYTE PTR [rdx]
   14002baf5:	sar    DWORD PTR [rcx],1
   14002baf7:	addr32 jnp 0x14002bb0d
   14002bafa:	mov    al,0xb0
   14002bafc:	fmul   QWORD PTR [rcx+rcx*2+0x4a401b94]
   14002bb03:	mov    DWORD PTR [rdx],edx
   14002bb05:	cmp    BYTE PTR cs:[rax-0x50],ch
   14002bb09:	(bad)  
   14002bb0a:	sub    BYTE PTR [rcx+rdx*8-0x1f6112e4],cl
   14002bb11:	fsub   DWORD PTR [rbx+0x5f]
   14002bb14:	loopne 0x14002bb76
   14002bb16:	out    0x20,eax
   14002bb18:	xlat   BYTE PTR ds:[rbx]
   14002bb19:	lods   eax,DWORD PTR ds:[rsi]
   14002bb1a:	mov    esi,0xe7bed786
   14002bb1f:	movabs ds:0x67f1eacfbfeef55c,eax
   14002bb28:	push   0xfffffffffc8a789f
   14002bb2d:	in     al,0x53
   14002bb2f:	jo     0x14002bb13
   14002bb31:	imul   ebx,DWORD PTR [rax+0x7f],0x44327c91
   14002bb38:	rex.WRXB (bad) 
   14002bb3a:	rex.W popf 
   14002bb3c:	stc    
   14002bb3d:	(bad)  
   14002bb3e:	mov    ebp,0x288989e9
   14002bb43:	rex.B (bad) 
   14002bb45:	sub    DWORD PTR [rdx],ebp
   14002bb47:	ins    DWORD PTR es:[rdi],dx
   14002bb48:	movabs eax,ds:0x8ffb0f5e0e210e56
   14002bb51:	xor    BYTE PTR [rsi+0x1ece26ea],bh
   14002bb57:	mov    esi,0x9c93a385
   14002bb5c:	xchg   DWORD PTR [rsi+0x5f83c13d],ecx
   14002bb62:	sti    
   14002bb63:	or     al,0xcf
   14002bb65:	popf   
   14002bb66:	cmp    al,BYTE PTR [rsi+0x70b1685d]
   14002bb6c:	fld    TBYTE PTR [rbp+0x2c]
   14002bb6f:	mov    ch,0x3a
   14002bb71:	or     BYTE PTR [rcx],ah
   14002bb73:	xor    DWORD PTR [rsi+0x21],eax
   14002bb76:	mov    ah,0x6b
   14002bb78:	shl    BYTE PTR [rcx],1
   14002bb7a:	cmc    
   14002bb7b:	jge    0x14002bb21
   14002bb7d:	outs   dx,DWORD PTR ds:[rsi]
   14002bb7e:	fisub  DWORD PTR [rcx]
   14002bb80:	jge    0x14002bb6e
   14002bb82:	rex cmp DWORD PTR [rdx],eax
   14002bb85:	sub    BYTE PTR [rdx-0xd],ch
   14002bb88:	adc    DWORD PTR [rip+0xffffffff871e3ae2],0x28        # 0xc720f671
   14002bb8f:	mov    esi,0xed27072d
   14002bb94:	mov    ah,0xc6
   14002bb96:	sub    DWORD PTR [rcx+rax*4-0x109dde50],ebp
   14002bb9d:	xor    eax,0xfaa5b176
   14002bba2:	hlt    
   14002bba3:	pop    rbx
   14002bba4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bba5:	out    0x68,eax
   14002bba7:	(bad)  
   14002bba9:	gs rex.RX mov ebx,0x414f8978
   14002bbb0:	cmp    dl,bh
   14002bbb2:	and    ebx,DWORD PTR [rax+0x7]
   14002bbb5:	inc    BYTE PTR [rsp+rdi*8-0x68]
   14002bbb9:	es iret 
   14002bbbb:	cdq    
   14002bbbc:	rex.WR
   14002bbbd:	(bad)
   14002bbc1:	clc    
   14002bbc2:	mov    WORD PTR [rcx+0x67ad16b5],es
   14002bbc8:	mov    bl,0x4
   14002bbca:	outs   dx,BYTE PTR ds:[rsi]
   14002bbcb:	rex.W sbb cl,BYTE PTR cs:[rbp+0x20924906]
   14002bbd3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bbd4:	and    al,0x8a
   14002bbd6:	and    dl,BYTE PTR [rdx+rdx*2+0xf307b85]
   14002bbdd:	cwde   
   14002bbde:	pop    rbx
   14002bbdf:	add    bh,BYTE PTR [rax-0x5b]
   14002bbe2:	xchg   esi,eax
   14002bbe3:	(bad)  
   14002bbe4:	mov    ah,0x86
   14002bbe6:	push   rsi
   14002bbe7:	fiadd  DWORD PTR [rdx+0x1b]
   14002bbea:	lea    edx,[rax]
   14002bbec:	xor    BYTE PTR [rax],bl
   14002bbee:	addr32 je 0x14002bbf8
   14002bbf1:	movsxd esi,DWORD PTR [rdx]
   14002bbf3:	lods   eax,DWORD PTR ds:[rsi]
   14002bbf4:	xchg   ecx,eax
   14002bbf5:	rex.X pop rsi
   14002bbf7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002bbf8:	movabs ds:0x8d35602276dda6c,al
   14002bc01:	xchg   ebx,eax
   14002bc02:	mov    bh,0x69
   14002bc04:	retf   
   14002bc05:	cwde   
   14002bc06:	or     esi,0xf19ce898
   14002bc0c:	adc    dh,cl
   14002bc0e:	rex.WRX jb 0x14002bc73
   14002bc11:	add    eax,0x42cdba52
   14002bc16:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002bc17:	je     0x14002bc54
   14002bc19:	or     eax,0x21ae6dbb
   14002bc1e:	push   rdx
   14002bc1f:	add    ah,ch
   14002bc21:	lods   eax,DWORD PTR ds:[rsi]
   14002bc22:	mov    edi,fs
   14002bc24:	iret   
   14002bc25:	mov    esi,0x1ece4fc0
   14002bc2a:	jrcxz  0x14002bbdb
   14002bc2c:	rcl    DWORD PTR [rsi],cl
   14002bc2e:	retf   
   14002bc2f:	lea    esp,[rbp-0x52]
   14002bc32:	fstp   TBYTE PTR [rdi+0x23]
   14002bc35:	push   rdi
   14002bc36:	sbb    eax,0xccfb077e
   14002bc3b:	cmp    edi,DWORD PTR [rcx]
   14002bc3d:	cmp    cl,cl
   14002bc3f:	jmp    0x1147b592c
   14002bc44:	rex.RXB ins DWORD PTR es:[rdi],dx
   14002bc46:	sahf   
   14002bc47:	and    eax,0xd2a6f41d
   14002bc4c:	(bad)  
   14002bc4d:	mov    ebp,0x225edccf
   14002bc52:	pop    rbx
   14002bc53:	cmp    cl,BYTE PTR [rax+0x2f]
   14002bc56:	ins    DWORD PTR es:[rdi],dx
   14002bc57:	ror    BYTE PTR [rbp+0x38094e62],cl
   14002bc5d:	movabs eax,ds:0x783f33ca389ecf35
   14002bc66:	adc    BYTE PTR [rbx],0x9b
   14002bc69:	addr32 pop rax
   14002bc6b:	(bad)  
   14002bc6c:	or     eax,0xc6834910
   14002bc71:	sub    eax,0x8c54a1b7
   14002bc76:	(bad)  
   14002bc77:	sub    eax,0x264830f9
   14002bc7c:	enter  0x5250,0x48
   14002bc80:	push   rsp
   14002bc81:	lods   al,BYTE PTR ds:[rsi]
   14002bc82:	in     eax,dx
   14002bc83:	ret    
   14002bc84:	or     al,BYTE PTR [rcx+rsi*4+0x30a96448]
   14002bc8b:	retf   0x9182
   14002bc8e:	push   0xffffffffdad053df
   14002bc93:	jmp    0x1bf68f093
   14002bc98:	test   eax,0x1f042a98
   14002bc9d:	or     eax,0x885ed4a5
   14002bca2:	in     al,dx
   14002bca3:	fwait
   14002bca4:	enter  0xf3a5,0x4c
   14002bca8:	mov    ss,ecx
   14002bcaa:	sbb    dl,BYTE PTR [rdi-0x6c]
   14002bcad:	xor    BYTE PTR gs:[rdx+0x4b],bh
   14002bcb1:	or     al,0xc0
   14002bcb3:	or     cl,BYTE PTR [rcx+rcx*8-0x66f30c37]
   14002bcba:	addr32 in al,0x79
   14002bcbd:	mov    es,WORD PTR [rax+riz*2-0x4c]
   14002bcc1:	rex.RX pop rax
   14002bcc3:	(bad)  
   14002bcc4:	lock jno 0x14002bcd5
   14002bcc7:	popf   
   14002bcc8:	out    0xf4,eax
   14002bcca:	(bad)  
   14002bccb:	add    ebx,DWORD PTR [rdx+0x1a3464b1]
   14002bcd1:	adc    eax,0x1023f3
   14002bcd6:	rex.WR add rax,0xffffffffa576683f
   14002bcdc:	adc    al,0x69
   14002bcde:	(bad)  
   14002bcdf:	and    al,BYTE PTR [rax+riz*1+0x2492228a]
   14002bce6:	sub    DWORD PTR [rax-0x19ff3be0],ecx
   14002bcec:	add    DWORD PTR [rbx+0x45],esi
   14002bcef:	add    BYTE PTR [rdi-0x533417ac],ch
   14002bcf5:	(bad)  
   14002bcf6:	cmp    bh,BYTE PTR [rsi-0x6c]
   14002bcf9:	(bad)  
   14002bcfa:	fdivp  st(6),st
   14002bcfc:	push   rsi
   14002bcfd:	sahf   
   14002bcfe:	cmp    esi,ebp
   14002bd00:	or     al,0x83
   14002bd02:	icebp  
   14002bd03:	or     BYTE PTR [rcx],al
   14002bd05:	cmp    al,0x73
   14002bd07:	repnz sbb al,0xfb
   14002bd0a:	(bad)  
   14002bd0b:	sbb    bl,BYTE PTR [rsp+rbx*2]
   14002bd0e:	push   0x6f338422
   14002bd13:	add    esi,0x28
   14002bd16:	mov    ds,WORD PTR [rbx+0x12]
   14002bd19:	xchg   ah,dl
   14002bd1b:	ret    0x226a
   14002bd1e:	push   0xffffffff92313110
   14002bd23:	mov    DWORD PTR [rsi-0x38],ecx
   14002bd26:	lea    eax,[rbp+0x5b]
   14002bd29:	jmp    0x14002bd52
   14002bd2b:	mov    dl,0x25
   14002bd2d:	xlat   BYTE PTR ds:[rbx]
   14002bd2e:	xchg   BYTE PTR [rcx-0x3316f7cf],dl
   14002bd34:	push   rsi
   14002bd35:	mov    bh,0x1e
   14002bd37:	shr    ch,0xd4
   14002bd3a:	and    esp,DWORD PTR [rax+rcx*2]
   14002bd3d:	fbld   TBYTE PTR [rdi-0x3e4f9c95]
   14002bd43:	rex.WB
   14002bd44:	ss js  0x14002bd43
   14002bd47:	in     al,0x73
   14002bd49:	sub    BYTE PTR [rcx],ch
   14002bd4b:	pop    rcx
   14002bd4c:	push   0x5edcb02e
   14002bd51:	movabs eax,ds:0x8762f2cc65493691
   14002bd5a:	(bad)  
   14002bd5b:	push   0xffffffffffffff87
   14002bd5d:	imul   esi,DWORD PTR [rcx-0x2392c6e],0xf8ee90c9
   14002bd67:	add    eax,0xfe9c8326
   14002bd6c:	mov    al,0xcf
   14002bd6e:	pop    rdx
   14002bd6f:	ja     0x14002bd0e
   14002bd71:	int    0x41
   14002bd73:	lahf   
   14002bd74:	pop    rsp
   14002bd75:	pop    rbx
   14002bd76:	lods   al,BYTE PTR ds:[rsi]
   14002bd77:	xchg   ecx,eax
   14002bd78:	rex.R popf 
   14002bd7a:	(bad)  
   14002bd7b:	push   rdi
   14002bd7c:	sub    eax,0x40b5a2af
   14002bd81:	addr32 (bad) 
   14002bd83:	jb     0x14002bd06
   14002bd85:	rex.B movabs eax,ds:0xacedc3a0d72e5b7d
   14002bd8f:	jrcxz  0x14002bde3
   14002bd91:	jnp    0x14002bd4b
   14002bd93:	retf   0x6b40
   14002bd96:	xchg   ecx,eax
   14002bd97:	(bad)  
   14002bd98:	add    eax,0x55088547
   14002bd9d:	(bad)  
   14002bd9e:	(bad)  
   14002bd9f:	or     eax,0x4391d210
   14002bda4:	mov    cl,0x60
   14002bda6:	fiadd  DWORD PTR [rsi-0x59305c20]
   14002bdac:	sbb    BYTE PTR [rbx+0x51],cl
   14002bdaf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002bdb0:	in     al,dx
   14002bdb1:	cmp    DWORD PTR [rbp+rax*8-0x5e],0x23
   14002bdb6:	lahf   
   14002bdb7:	xlat   BYTE PTR ds:[rbx]
   14002bdb8:	ja     0x14002bdbe
   14002bdba:	movabs al,ds:0xa46b964372635a31
   14002bdc3:	adc    eax,0xf74a6368
   14002bdc8:	fdivr  QWORD PTR [rbx-0x234df9f5]
   14002bdce:	add    eax,0x4724c4f7
   14002bdd3:	adc    r8d,DWORD PTR [rdx+rax*8]
   14002bdd7:	jge    0x14002be07
   14002bdd9:	rex.R (bad) 
   14002bddb:	lods   eax,DWORD PTR ds:[rsi]
   14002bddc:	shr    eax,0x9c
   14002bddf:	shl    DWORD PTR [rax-0x3c],0x30
   14002bde3:	push   rcx
   14002bde4:	or     al,0x87
   14002bde6:	ret    
   14002bde7:	repz out 0x4a,al
   14002bdea:	mov    cl,0x6e
   14002bdec:	ret    0xfd07
   14002bdef:	loop   0x14002be29
   14002bdf1:	es rex.WRB push r11
   14002bdf4:	(bad)  
   14002bdf5:	int    0x26
   14002bdf7:	lods   eax,DWORD PTR ds:[rsi]
   14002bdf8:	push   rsi
   14002bdf9:	mov    eax,DWORD PTR [rsi-0x5d]
   14002bdfc:	xor    DWORD PTR [rdi-0x7319e026],edx
   14002be02:	add    BYTE PTR [rsi+0x2e],bl
   14002be05:	cs sbb dil,r10b
   14002be09:	out    dx,eax
   14002be0a:	pop    rdi
   14002be0b:	(bad)  
   14002be0c:	in     eax,0x91
   14002be0e:	(bad)  
   14002be0f:	mov    eax,0xf2f76df7
   14002be14:	(bad)  
   14002be15:	out    dx,eax
   14002be16:	jg     0x14002bdb5
   14002be18:	jae    0x14002bdd7
   14002be1a:	cs (bad) 
   14002be1d:	cmp    esp,DWORD PTR [rdx]
   14002be1f:	iret   
   14002be20:	rex.RXB mov r12d,0x1c83fae1
   14002be26:	call   0xc926475f
   14002be2b:	adc    dl,BYTE PTR [rdx]
   14002be2d:	sub    DWORD PTR [rsi+riz*1-0x2fb0394f],edi
   14002be34:	imul   ecx,ebp,0x14d010b9
   14002be3a:	xchg   esi,eax
   14002be3b:	rex.R or BYTE PTR [rcx-0x4df8e304],0xdc
   14002be43:	xchg   edx,eax
   14002be44:	sbb    DWORD PTR [rax],esi
   14002be46:	xchg   ecx,eax
   14002be47:	mov    ebp,esi
   14002be49:	imul   ebx,esp,0x12
   14002be4c:	fcomp  DWORD PTR [rbx+rcx*2]
   14002be4f:	sahf   
   14002be50:	sub    eax,edi
   14002be52:	and    edx,edx
   14002be54:	rex.RB shl DWORD PTR [r11],0x63
   14002be58:	or     ebp,edi
   14002be5a:	mov    bh,0xac
   14002be5c:	xor    BYTE PTR [rax],bl
   14002be5e:	or     al,0x1b
   14002be60:	xor    DWORD PTR [rip+0xffffffff8b399d8e],0xffffffc5        # 0xcb3c5bf5
   14002be67:	xor    eax,0x88a38cfd
   14002be6c:	sub    DWORD PTR [rdi+0x1a],r9d
   14002be70:	and    dh,BYTE PTR [rsp+rbx*8+0x5631a0c0]
   14002be77:	and    ebp,DWORD PTR [rbp+0x44850942]
   14002be7d:	rcl    DWORD PTR [rsi+0x31],1
   14002be80:	and    dl,BYTE PTR [rdx+0x2e]
   14002be83:	xor    esp,DWORD PTR [rax+0x24]
   14002be86:	cdq    
   14002be87:	(bad)  
   14002be88:	xor    DWORD PTR [rdx-0x48],ebx
   14002be8b:	sbb    BYTE PTR [rdx-0x37d2976c],al
   14002be91:	lods   eax,DWORD PTR ds:[rsi]
   14002be92:	stos   DWORD PTR es:[rdi],eax
   14002be93:	lods   eax,DWORD PTR ds:[rsi]
   14002be94:	(bad)  
   14002be95:	ds push rsp
   14002be97:	imul   ecx,DWORD PTR [rcx-0x30958238],0x73ec1098
   14002bea1:	add    al,0x61
   14002bea3:	rex.WRB or BYTE PTR [r14+0x2a],r8b
   14002bea7:	mov    edi,0xec742f9a
   14002beac:	xchg   edi,eax
   14002bead:	and    BYTE PTR [rsi],0x2c
   14002beb0:	push   0xffffffffffffff92
   14002beb2:	movabs eax,ds:0x2fb5fda733dfc026
   14002bebb:	sti    
   14002bebc:	cmc    
   14002bebd:	icebp  
   14002bebe:	xchg   ebp,eax
   14002bebf:	movabs al,ds:0x441b9e4168c5b5d5
   14002bec8:	scas   al,BYTE PTR es:[rdi]
   14002bec9:	rcr    DWORD PTR [rdx+0x3b],1
   14002becc:	jno    0x14002bf05
   14002bece:	movabs eax,ds:0x7db4ed582d6a601e
   14002bed7:	scas   al,BYTE PTR es:[rdi]
   14002bed8:	or     eax,0xbfc2eb52
   14002bedd:	mov    bh,0xd6
   14002bedf:	(bad)  
   14002bee0:	rex.XB mov r13d,0xdc932780
   14002bee6:	addr32 add edx,esi
   14002bee9:	cmp    al,0x9f
   14002beeb:	adc    eax,esp
   14002beed:	loopne 0x14002bed2
   14002beef:	rex.WXB sub QWORD PTR [r9-0x2d],rcx
   14002bef3:	mov    ah,0x78
   14002bef5:	xor    eax,0xf319cd9b
   14002befa:	mov    edi,0x279c069c
   14002beff:	push   rsp
   14002bf00:	sahf   
   14002bf01:	add    BYTE PTR [rsi],ch
   14002bf03:	(bad)  
   14002bf04:	sub    BYTE PTR [rax-0x5f],bh
   14002bf07:	out    dx,eax
   14002bf08:	pop    rsi
   14002bf09:	jge    0x14002befb
   14002bf0b:	add    bh,ch
   14002bf0d:	sbb    DWORD PTR [rsi+0x7c],esp
   14002bf10:	test   cl,0x73
   14002bf13:	mov    esp,0xcabf9dff
   14002bf18:	icebp  
   14002bf19:	ror    edi,cl
   14002bf1b:	jb     0x14002bf93
   14002bf1d:	jae    0x14002bebc
   14002bf1f:	jno    0x14002bf57
   14002bf21:	in     al,0xc7
   14002bf23:	(bad)  
   14002bf24:	xchg   DWORD PTR [rdx+rdx*4+0x21],esi
   14002bf28:	mov    cl,0xc8
   14002bf2a:	movsxd rbp,DWORD PTR [r8-0x3b]
   14002bf2e:	xor    DWORD PTR [rcx-0x5c],ebp
   14002bf31:	movabs ds:0xadebf39548ac4688,rax
   14002bf3b:	(bad)  
   14002bf3c:	(bad)
   14002bf3f:	mov    cl,ch
   14002bf41:	(bad)  
   14002bf42:	xchg   ecx,eax
   14002bf43:	push   0x29
   14002bf45:	or     al,0x49
   14002bf47:	nop
   14002bf48:	push   rdx
   14002bf49:	jmp    0x14002bf8d
   14002bf4b:	pop    rsi
   14002bf4c:	mov    ecx,0x37d21bff
   14002bf51:	mov    ebx,0xc8233204
   14002bf56:	add    DWORD PTR [rsp+rax*4+0x10],eax
   14002bf5a:	scas   al,BYTE PTR es:[rdi]
   14002bf5b:	mov    bh,0x7d
   14002bf5d:	rcl    ax,0x74
   14002bf61:	rex.WRB cmp r8b,BYTE PTR [r13-0x6986612d]
   14002bf68:	xor    ecx,esp
   14002bf6a:	pop    rsp
   14002bf6b:	loopne 0x14002bfb9
   14002bf6d:	or     BYTE PTR [rbx+0x517aae14],cl
   14002bf73:	rex.WB mov BYTE PTR [r10+rax*4-0x4f],spl
   14002bf78:	adc    ch,BYTE PTR [rip+0x14850a04]        # 0x15487c982
   14002bf7e:	(bad)  
   14002bf7f:	pop    rcx
   14002bf80:	lods   al,BYTE PTR ds:[rsi]
   14002bf81:	(bad)  
   14002bf82:	xor    cl,BYTE PTR [rax]
   14002bf84:	adc    al,0xca
   14002bf86:	and    eax,0x1280c1e2
   14002bf8b:	fiadd  WORD PTR [rip+0x11b76d09]        # 0x151ba2c9a
   14002bf91:	push   0xffffffff92b8516b
   14002bf96:	pop    rsi
   14002bf97:	and    eax,eax
   14002bf99:	pop    rdx
   14002bf9a:	add    DWORD PTR [rsi-0x5e],0xdca2c0ac
   14002bfa1:	adc    DWORD PTR [eax-0x7c],ebp
   14002bfa5:	jae    0x14002bfa8
   14002bfa7:	mov    dh,ah
   14002bfa9:	or     BYTE PTR [rbp-0x1d],al
   14002bfac:	(bad)  
   14002bfad:	ror    BYTE PTR [rsi+0x2],cl
   14002bfb0:	test   BYTE PTR [rsp+riz*4],bh
   14002bfb3:	adc    al,0x82
   14002bfb5:	pop    rsp
   14002bfb6:	rex.XB outs dx,BYTE PTR ds:[rsi]
   14002bfb8:	movabs al,ds:0x8fa5637e91f5ed28
   14002bfc1:	in     eax,0xd9
   14002bfc3:	and    dl,BYTE PTR [rdx]
   14002bfc5:	pop    rax
   14002bfc6:	hlt    
   14002bfc7:	and    esp,DWORD PTR [rax]
   14002bfc9:	adc    al,0xf8
   14002bfcb:	push   0xffffffff8eb5229f
   14002bfd0:	rex.WR lods al,BYTE PTR ds:[rsi]
   14002bfd2:	(bad)  
   14002bfd3:	(bad)  
   14002bfd4:	adc    DWORD PTR [rdx+0x2],esp
   14002bfd7:	push   rbx
   14002bfd8:	movabs ds:0xa698362c9592d630,al
   14002bfe1:	cmc    
   14002bfe2:	(bad)  
   14002bfe3:	test   eax,0x8d09249f
   14002bfe8:	rex.RX and DWORD PTR [rsi-0x4d],0x49
   14002bfed:	(bad)  
   14002bfee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002bfef:	(bad)  
   14002bff0:	jno    0x14002bfde
   14002bff2:	pop    rdx
   14002bff3:	fwait
   14002bff4:	iret   
   14002bff5:	movabs eax,ds:0x34dcb802495197d0
   14002bffe:	loopne 0x14002c04f
   14002c000:	sti    
   14002c001:	(bad)  
   14002c002:	in     eax,dx
   14002c003:	xlat   BYTE PTR ds:[rbx]
   14002c004:	pop    rdi
   14002c005:	ret    
   14002c006:	xchg   DWORD PTR [rbx-0x4001507c],esp
   14002c00c:	xchg   ecx,ebp
   14002c00e:	cdq    
   14002c00f:	(bad)  
   14002c010:	or     eax,0x4a5e24d9
   14002c015:	mov    DWORD PTR [rdx],ebx
   14002c017:	sub    esp,eax
   14002c019:	(bad)  
   14002c01a:	sbb    al,0x8d
   14002c01c:	adc    eax,0x301eb919
   14002c021:	sar    BYTE PTR [rbp+0x6],cl
   14002c024:	sbb    edi,DWORD PTR [rip+0xffffffffd61e93c6]        # 0x1162153f0
   14002c02a:	sub    BYTE PTR fs:[rcx+0x49],ah
   14002c02e:	xchg   ebp,eax
   14002c02f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c030:	adc    DWORD PTR [rbx],ecx
   14002c032:	pop    rdx
   14002c033:	mov    DWORD PTR [rcx+rbx*4+0x114aa444],esp
   14002c03a:	mov    QWORD PTR [r10+0x209c6692],rdx
   14002c041:	test   DWORD PTR [rip+0xffffffffb6e7da37],esp        # 0xf6ea9a7e
   14002c047:	cdq    
   14002c048:	jmp    0x105d8d3a1
   14002c04d:	fwait
   14002c04e:	rol    BYTE PTR [rbp+0x4b],1
   14002c051:	cmp    BYTE PTR [rbp+0x2dc81b96],cl
   14002c057:	rex.RB cmc 
   14002c059:	popf   
   14002c05a:	shr    DWORD PTR [rcx+0x6b],0x2d
   14002c05e:	push   rbx
   14002c05f:	neg    DWORD PTR [rsi+0x104ade10]
   14002c065:	sbb    cl,ah
   14002c067:	pop    rsp
   14002c068:	or     al,0xa3
   14002c06a:	popf   
   14002c06b:	xor    BYTE PTR [rdx],bl
   14002c06d:	movsxd edx,eax
   14002c06f:	mov    eax,0x54b2ba65
   14002c074:	movabs ds:0x91d574550a4184a4,al
   14002c07d:	xor    bh,al
   14002c07f:	std    
   14002c080:	add    al,BYTE PTR [rcx-0x4a16a7bc]
   14002c086:	mov    dh,0xb7
   14002c088:	jbe    0x14002c0fa
   14002c08a:	(bad)  
   14002c08b:	lea    edi,[rdx]
   14002c08d:	mov    eax,0xde36b803
   14002c092:	rex.RX cmp r9d,DWORD PTR [rbx]
   14002c095:	(bad)  
   14002c096:	jmp    0x1aeb47ecf
   14002c09b:	jns    0x14002c10c
   14002c09d:	and    BYTE PTR [rsi],al
   14002c09f:	and    ebp,ebx
   14002c0a1:	jns    0x14002c0ab
   14002c0a3:	or     edi,DWORD PTR [rcx-0x6060414b]
   14002c0a9:	movsxd ecx,DWORD PTR [rdx+0x61]
   14002c0ac:	std    
   14002c0ad:	xor    ah,ah
   14002c0af:	push   rdx
   14002c0b0:	jne    0x14002c091
   14002c0b2:	and    al,0x97
   14002c0b4:	mov    WORD PTR [rdx-0x7be4e6e4],?
   14002c0ba:	xor    DWORD PTR [rdx+rax*8-0x9],eax
   14002c0be:	or     esi,DWORD PTR [rax+0xf]
   14002c0c1:	rcr    BYTE PTR [rbx+0xb],1
   14002c0c4:	sbb    dh,BYTE PTR [rdi+0x558c3b5e]
   14002c0ca:	or     bl,BYTE PTR [rax]
   14002c0cc:	and    dl,BYTE PTR [rax-0x277be0ad]
   14002c0d2:	data16 xor al,0x53
   14002c0d5:	xchg   edi,eax
   14002c0d6:	mov    dh,0x8b
   14002c0d8:	movabs ds:0xff3597d083f330a8,al
   14002c0e1:	mov    esp,0x4317fa9a
   14002c0e6:	and    eax,0xb75ca008
   14002c0eb:	jge    0x14002c092
   14002c0ed:	xor    eax,0xdaf0c5fe
   14002c0f2:	ret    
   14002c0f3:	sti    
   14002c0f4:	cmp    DWORD PTR [rdx+rsi*8-0x1d8361ea],edi
   14002c0fb:	or     DWORD PTR [rsi-0x44],ecx
   14002c0fe:	clc    
   14002c0ff:	and    bl,BYTE PTR [rbx-0x6331b27d]
   14002c105:	sbb    dh,BYTE PTR [rbx+0x55c9ca31]
   14002c10b:	test   BYTE PTR [rcx+0x3518612],cl
   14002c111:	xchg   ecx,eax
   14002c112:	cs mov bl,0xdc
   14002c115:	cmp    DWORD PTR [rdx+0x63],eax
   14002c118:	mov    ch,0x49
   14002c11a:	ficom  DWORD PTR [rax+0x30c13908]
   14002c120:	movabs eax,ds:0xfeb59f49fd1ec3f
   14002c129:	cwde   
   14002c12a:	add    ecx,DWORD PTR fs:[rbp+rbx*4+0x5884ed60]
   14002c132:	in     al,0xb4
   14002c134:	(bad)  
   14002c135:	sbb    r13b,BYTE PTR [r9]
   14002c138:	pop    rdx
   14002c139:	jno    0x14002c187
   14002c13b:	sub    edx,DWORD PTR [rcx+0x34]
   14002c13e:	and    ch,cl
   14002c140:	mov    dl,0x1
   14002c142:	rex.RB pop r10
   14002c144:	int3   
   14002c145:	lahf   
   14002c146:	scas   eax,DWORD PTR es:[rdi]
   14002c147:	mov    cl,0x6e
   14002c149:	xor    DWORD PTR [rbx-0x683d3b4f],ebx
   14002c14f:	std    
   14002c150:	cli    
   14002c151:	fiadd  WORD PTR [rdx+rbx*8]
   14002c154:	(bad)  
   14002c155:	adc    al,0x80
   14002c157:	ret    0xc8ba
   14002c15a:	jge    0x14002c1a3
   14002c15c:	sbb    eax,0x18882563
   14002c161:	sub    eax,DWORD PTR [rsi+rax*8]
   14002c164:	sub    BYTE PTR [rax+rsi*2+0x6d06d9da],dh
   14002c16b:	outs   dx,DWORD PTR ds:[rsi]
   14002c16c:	fnsave [rdx-0x2988c325]
   14002c172:	(bad)  
   14002c173:	clc    
   14002c174:	(bad)  
   14002c175:	mov    ebp,0x12173f90
   14002c17a:	loope  0x14002c1fb
   14002c17c:	xchg   edi,eax
   14002c17d:	ret    0xeae5
   14002c180:	and    eax,0x23a58841
   14002c185:	or     ecx,ebp
   14002c187:	pop    rsp
   14002c188:	add    DWORD PTR [rbp+0x4c414b40],eax
   14002c18e:	call   0x1bb86ad73
   14002c193:	ret    0xf9f5
   14002c196:	xadd   edx,eax
   14002c199:	(bad)  
   14002c19a:	retf   0x75bb
   14002c19d:	adc    DWORD PTR [rsi-0x30],ebp
   14002c1a0:	fcomp  QWORD PTR [rdx+0x22]
   14002c1a3:	and    DWORD PTR [rdx-0x7b],ecx
   14002c1a6:	cmp    eax,0x16ba4239
   14002c1ab:	(bad)  
   14002c1ad:	rex.W mov WORD PTR [rcx-0x28c4461c],ss
   14002c1b4:	mov    DWORD PTR [rcx],esi
   14002c1b6:	rex.WR jb 0x14002c238
   14002c1b9:	loop   0x14002c1dc
   14002c1bb:	pop    rsi
   14002c1bc:	adc    BYTE PTR [rsp+rcx*1+0x29],bl
   14002c1c0:	nop
   14002c1c1:	rex.WX adc BYTE PTR [rcx-0x75],dil
   14002c1c5:	sub    al,BYTE PTR [rcx+0x77]
   14002c1c9:	xor    BYTE PTR [rdx-0x27],dh
   14002c1cc:	(bad)  
   14002c1cd:	test   eax,0xb865aab8
   14002c1d2:	out    0xe0,al
   14002c1d4:	ds (bad) 
   14002c1d6:	std    
   14002c1d7:	lods   eax,DWORD PTR ds:[rsi]
   14002c1d9:	push   rsi
   14002c1da:	stos   DWORD PTR es:[rdi],eax
   14002c1db:	adc    ah,bh
   14002c1dd:	(bad)  
   14002c1de:	loop   0x14002c1e7
   14002c1e0:	ins    DWORD PTR es:[rdi],dx
   14002c1e1:	(bad)  
   14002c1e2:	add    al,0x7f
   14002c1e4:	mov    ebx,0x426ed6e7
   14002c1e9:	and    eax,0xe295e008
   14002c1ee:	rex.X jns 0x14002c1cf
   14002c1f1:	xchg   edi,eax
   14002c1f2:	xor    DWORD PTR [rsi-0x55],0xffffffc9
   14002c1f6:	popf   
   14002c1f7:	ja     0x14002c1b7
   14002c1f9:	xchg   ecx,eax
   14002c1fa:	(bad)  [rdi]
   14002c1fc:	adc    edx,DWORD PTR [rdi]
   14002c1fe:	ins    BYTE PTR es:[rdi],dx
   14002c1ff:	(bad)  
   14002c200:	rex.WR sbb BYTE PTR [rdi+0x13264cc7],r9b
   14002c207:	xchg   bl,al
   14002c209:	adc    DWORD PTR [rbx-0x2214c143],ebx
   14002c20f:	ds fwait
   14002c211:	mov    ebp,0x8e4e8ce3
   14002c216:	jmp    0x106a9f7a9
   14002c21b:	xchg   edx,eax
   14002c21c:	movabs eax,ds:0x7962d9bb4a49e455
   14002c225:	loope  0x14002c227
   14002c227:	jmp    0x1a24d4c7e
   14002c22c:	ins    BYTE PTR es:[rdi],dx
   14002c22d:	and    al,0x0
   14002c22f:	int    0x58
   14002c231:	neg    DWORD PTR [rax]
   14002c233:	out    0x7d,eax
   14002c235:	(bad)  
   14002c236:	(bad)  
   14002c237:	fwait
   14002c238:	cld    
   14002c239:	fs mov bl,0x4b
   14002c23c:	data16 rex.RX
   14002c23e:	rex.R ret 0x2a92
   14002c242:	push   0x432890c4
   14002c247:	(bad)  
   14002c248:	mov    DWORD PTR [rcx+rdx*2-0x6f],ebx
   14002c24c:	xchg   esp,eax
   14002c24d:	(bad)  
   14002c24e:	push   rdx
   14002c24f:	ror    BYTE PTR [rbp+rbx*2-0x7a08d310],cl
   14002c256:	xor    eax,0x6ab180ca
   14002c25b:	pop    rdx
   14002c25c:	clc    
   14002c25d:	addr32 sub eax,0x4e4228d6
   14002c263:	shl    DWORD PTR [rip+0xffffffffc7cc80d8],0x18        # 0x107cf4342
   14002c26a:	pushf  
   14002c26b:	(bad)  
   14002c26c:	xchg   edi,eax
   14002c26d:	fs mov ecx,0x8559f00f
   14002c273:	(bad)  
   14002c274:	imul   edi,DWORD PTR [rax+0x21],0xb408c605
   14002c27b:	icebp  
   14002c27c:	fnstsw WORD PTR [rcx-0x75]
   14002c27f:	mov    esi,0x80313001
   14002c284:	(bad)  
   14002c285:	(bad)  
   14002c286:	cdq    
   14002c287:	scas   al,BYTE PTR es:[rdi]
   14002c288:	push   rcx
   14002c289:	mov    al,0x28
   14002c28b:	jmp    0x14e434cbd
   14002c290:	movabs eax,ds:0x9484afa5f1f78a69
   14002c299:	cmp    BYTE PTR [rdx-0x75],ah
   14002c29c:	and    ebx,DWORD PTR [rcx+0x10]
   14002c29f:	xchg   esi,eax
   14002c2a0:	pop    rbx
   14002c2a1:	movabs eax,ds:0xf58423904595c86c
   14002c2aa:	(bad)  
   14002c2ab:	sbb    BYTE PTR [rbx-0x3c],0x13
   14002c2af:	pop    rbx
   14002c2b0:	rex.XB
   14002c2b1:	or     DWORD PTR [r12+r8*1+0x456144cd],0x126b9444
   14002c2bd:	movabs eax,ds:0xfba72da31a0bba98
   14002c2c6:	cmp    DWORD PTR [rdi-0x63],ecx
   14002c2c9:	sbb    ah,BYTE PTR [rax]
   14002c2cb:	cmp    ecx,DWORD PTR [rdx-0x790ca48a]
   14002c2d1:	jmp    0x14002c282
   14002c2d3:	es xchg ebp,eax
   14002c2d5:	xor    DWORD PTR [rdi],edi
   14002c2d7:	jl     0x14002c2cd
   14002c2d9:	sub    BYTE PTR [rsi+0x2a],al
   14002c2dc:	pop    rdx
   14002c2dd:	lea    eax,[rsi]
   14002c2df:	(bad)  
   14002c2e0:	jp     0x14002c2bd
   14002c2e2:	or     eax,0x4894d234
   14002c2e7:	test   eax,0xc50fccc2
   14002c2ec:	cmp    al,0xc1
   14002c2ee:	or     eax,0x76e92578
   14002c2f3:	add    al,0x47
   14002c2f5:	add    BYTE PTR [rax],al
   14002c2f7:	or     ebx,DWORD PTR [rbp+0x54414449]
   14002c2fd:	fidivr DWORD PTR [rsi+0x13503b5c]
   14002c303:	ror    BYTE PTR [rsi],0xe0
   14002c306:	push   rdx
   14002c307:	or     dh,BYTE PTR [rax]
   14002c309:	scas   al,BYTE PTR es:[rdi]
   14002c30a:	hlt    
   14002c30b:	ret    
   14002c30c:	adc    BYTE PTR [rdx-0x70],al
   14002c30f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c310:	sub    DWORD PTR [rcx-0x6e],esi
   14002c313:	rex stos DWORD PTR es:[rdi],eax
   14002c315:	jne    0x14002c2f5
   14002c317:	fild   WORD PTR [rbx+0x71]
   14002c31a:	rex.WB sahf 
   14002c31c:	out    0x4c,eax
   14002c31e:	(bad)  
   14002c31f:	movsxd eax,DWORD PTR [rsi-0x5d]
   14002c322:	adc    ebx,eax
   14002c324:	loope  0x14002c2b6
   14002c326:	shr    DWORD PTR [rax+0x44],1
   14002c329:	jg     0x14002c35b
   14002c32b:	in     al,0xcc
   14002c32d:	(bad)  
   14002c32e:	es addr32 pop rsi
   14002c331:	in     al,dx
   14002c332:	jae    0x14002c2da
   14002c334:	cmp    esp,DWORD PTR [rsp+rbp*4+0x35]
   14002c338:	pop    rdx
   14002c339:	vshufps xmm4,xmm12,XMMWORD PTR [rdx],0x51
   14002c33e:	shl    BYTE PTR [rsi-0x4b],cl
   14002c341:	jge    0x14002c380
   14002c343:	xlat   BYTE PTR ds:[rbx]
   14002c344:	out    dx,eax
   14002c345:	jmp    0x14002c2d7
   14002c347:	xor    al,0x24
   14002c349:	jno    0x14002c3ad
   14002c34b:	leave  
   14002c34c:	rex.WRB (bad) 
   14002c34e:	out    0x78,al
   14002c350:	shl    dh,0x78
   14002c353:	shr    cl,0x71
   14002c356:	lahf   
   14002c357:	rex.WB
   14002c358:	rcr    BYTE PTR ds:[rdx-0x5ee146df],0xe4
   14002c360:	test   BYTE PTR [rdx+rcx*1+0x5a],al
   14002c364:	jno    0x14002c3aa
   14002c366:	sub    edx,DWORD PTR [rdx+0x5520b1a4]
   14002c36c:	movabs ds:0x6869ca102129ca08,al
   14002c375:	push   rdi
   14002c376:	lods   al,BYTE PTR ds:[rsi]
   14002c377:	out    0x4,eax
   14002c379:	cmp    BYTE PTR [rcx+0x6d74fce],dl
   14002c37f:	mov    al,0x12
   14002c381:	sub    eax,0x53171ac0
   14002c386:	xor    dh,bh
   14002c388:	pop    rsi
   14002c389:	in     eax,0xda
   14002c38b:	xchg   edx,eax
   14002c38c:	sbb    eax,DWORD PTR [rcx]
   14002c38e:	sub    BYTE PTR [rax],dl
   14002c390:	retf   0x17b9
   14002c393:	loopne 0x14002c31d
   14002c395:	or     BYTE PTR [rdx+rdx*4+0x36a22545],r13b
   14002c39d:	xchg   esi,eax
   14002c39e:	rex.WR or rbp,0xffffffffffffff9d
   14002c3a2:	stc    
   14002c3a3:	lahf   
   14002c3a4:	pop    rcx
   14002c3a5:	fadd   st(2),st
   14002c3a7:	sbb    ebx,DWORD PTR [rcx+rcx*4+0x73]
   14002c3ab:	pop    rax
   14002c3ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c3ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c3ae:	adc    BYTE PTR [rsi],bh
   14002c3b0:	xor    BYTE PTR [rcx],ch
   14002c3b2:	mov    esi,DWORD PTR [rax-0x5e]
   14002c3b5:	hlt    
   14002c3b6:	jg     0x14002c3cc
   14002c3b8:	jb     0x14002c3b4
   14002c3ba:	jl     0x14002c3de
   14002c3bc:	rex.WB leave 
   14002c3be:	add    dh,BYTE PTR [rax-0x2]
   14002c3c1:	rex.WRXB
   14002c3c2:	rex.WXB sbb QWORD PTR [r14-0x5b96bfed],rdx
   14002c3c9:	popf   
   14002c3ca:	(bad)  
   14002c3cb:	ror    BYTE PTR [rax+0x1],1
   14002c3ce:	xor    DWORD PTR [rsi+0x67],edi
   14002c3d1:	movsxd ebp,DWORD PTR [rbx-0x17df44bf]
   14002c3d7:	jne    0x14002c3e0
   14002c3d9:	push   rdi
   14002c3da:	stc    
   14002c3db:	(bad)  [rdi+0xace811f]
   14002c3e1:	rex.WXB retf 
   14002c3e3:	retf   
   14002c3e4:	lods   al,BYTE PTR ds:[rsi]
   14002c3e5:	mov    dh,0x1b
   14002c3e7:	jl     0x14002c3cb
   14002c3e9:	repz (bad) 
   14002c3ec:	in     al,0xd9
   14002c3ee:	(bad)  
   14002c3ef:	scas   eax,DWORD PTR es:[rdi]
   14002c3f0:	mov    ecx,0xfebf1f76
   14002c3f5:	repz xlat BYTE PTR ds:[rbx]
   14002c3f7:	icebp  
   14002c3f8:	(bad)  
   14002c3f9:	lahf   
   14002c3fa:	mov    ecx,0x5114a503
   14002c3ff:	adc    al,0xcd
   14002c401:	cwde   
   14002c402:	stc    
   14002c403:	scas   eax,DWORD PTR es:[rdi]
   14002c404:	(bad)  
   14002c405:	mov    edi,0x5fa0aaaf
   14002c40a:	or     al,0x95
   14002c40c:	and    al,BYTE PTR [rax-0x15127961]
   14002c412:	(bad)  
   14002c413:	clc    
   14002c414:	push   rdx
   14002c415:	nop
   14002c416:	push   rdx
   14002c417:	(bad)  
   14002c418:	cmp    edx,esp
   14002c41a:	push   rsi
   14002c41b:	mov    DWORD PTR [rax],esp
   14002c41d:	rex.X mov ds,ecx
   14002c420:	clc    
   14002c421:	hlt    
   14002c422:	push   rbp
   14002c423:	xchg   esi,eax
   14002c424:	mov    ecx,0xd1c32ac5
   14002c429:	mov    BYTE PTR [rbx-0x15],dh
   14002c42c:	fwait
   14002c42d:	ins    BYTE PTR es:[rdi],dx
   14002c42e:	ins    BYTE PTR es:[rdi],dx
   14002c42f:	jbe    0x14002c41a
   14002c431:	test   dh,0x30
   14002c434:	cmp    BYTE PTR [rbx-0x6c],dh
   14002c437:	mov    bl,0x83
   14002c439:	pushf  
   14002c43a:	mov    bl,0x23
   14002c43c:	sbb    BYTE PTR [rax-0x77],ch
   14002c43f:	mov    ss,WORD PTR [rbp*8-0x7454fd2a]
   14002c446:	sti    
   14002c447:	rex.WB pop r11
   14002c449:	rex.WRB movabs ds:0xcc4cb2844b1b0346,al
   14002c453:	mov    BYTE PTR [rsi-0x2a],bh
   14002c456:	addr32 jae 0x14002c431
   14002c459:	jrcxz  0x14002c49f
   14002c45b:	jg     0x14002c470
   14002c45d:	popf   
   14002c45e:	(bad)  
   14002c45f:	nop
   14002c460:	push   rdx
   14002c461:	adc    ebx,DWORD PTR [rcx+0x4b]
   14002c464:	and    ch,BYTE PTR [rcx+rbp*4]
   14002c467:	rol    ah,cl
   14002c469:	ret    0xc892
   14002c46c:	or     BYTE PTR [rip+0x5e948924],ah        # 0x19e974d96
   14002c472:	sub    BYTE PTR [rbp+0x70],bh
   14002c475:	iret   
   14002c476:	or     BYTE PTR [rdx+rdx*1+0x5ae66f58],dl
   14002c47d:	fild   QWORD PTR [rbp+0x5b10aac7]
   14002c483:	jo     0x14002c46e
   14002c485:	mov    esi,0xc2577b4c
   14002c48a:	sbb    BYTE PTR [rax+0x2b3923a4],cl
   14002c490:	enter  0x21b5,0x42
   14002c494:	xchg   ecx,eax
   14002c495:	rex.WX mov QWORD PTR [rip+0xfffffffff07c689e],rdx        # 0x1307f2d3a
   14002c49c:	iret   
   14002c49d:	xchg   esi,eax
   14002c49e:	jl     0x14002c494
   14002c4a0:	fdivr  QWORD PTR [rbx-0x714e29dd]
   14002c4a6:	(bad)  
   14002c4a7:	add    eax,0x75740c17
   14002c4ac:	pavgb  mm2,QWORD PTR [rbx+0x60e54587]
   14002c4b3:	pop    rax
   14002c4b4:	push   rax
   14002c4b5:	loopne 0x14002c461
   14002c4b7:	and    ebp,DWORD PTR [rip+0x41110289]        # 0x18113c746
   14002c4bd:	xchg   edx,eax
   14002c4be:	xchg   rsp,rax
   14002c4c0:	jb     0x14002c486
   14002c4c2:	mov    bl,0x98
   14002c4c4:	or     ah,BYTE PTR [rdx]
   14002c4c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c4c7:	fmul   QWORD PTR [rip+0x47150a56]        # 0x18717cf23
   14002c4cd:	sub    al,0x6c
   14002c4cf:	sahf   
   14002c4d0:	rex (bad) 
   14002c4d2:	in     eax,dx
   14002c4d3:	mov    bl,0xa6
   14002c4d5:	push   rbx
   14002c4d6:	sahf   
   14002c4d7:	retf   0xa724
   14002c4da:	iret   
   14002c4db:	cmc    
   14002c4dc:	mov    DWORD PTR [rsp+riz*8-0x4a1a8089],ebp
   14002c4e3:	fdiv   QWORD PTR [rbx-0x19]
   14002c4e6:	jmp    0x14002c4a0
   14002c4e8:	neg    BYTE PTR [rdx+0x10c631ab]
   14002c4ee:	(bad)  
   14002c4ef:	icebp  
   14002c4f0:	fsubr  st(5),st
   14002c4f2:	lock scas eax,DWORD PTR es:[rdi]
   14002c4f4:	add    al,0xe6
   14002c4f6:	(bad)  
   14002c4f7:	add    dl,cl
   14002c4f9:	jns    0x14002c4f7
   14002c4fb:	sub    eax,DWORD PTR [rcx-0x1addbed5]
   14002c501:	cli    
   14002c502:	icebp  
   14002c503:	cmp    BYTE PTR [rsi+0x1a3469],cl
   14002c509:	sub    al,0x3
   14002c50b:	xchg   DWORD PTR [rsi],ecx
   14002c50d:	sbb    eax,0xfb938e2a
   14002c512:	sub    dh,BYTE PTR [rbp-0x7256a834]
   14002c518:	(bad)  
   14002c519:	movsxd edi,DWORD PTR [rdx-0x3158c143]
   14002c51f:	ins    DWORD PTR es:[rdi],dx
   14002c520:	jb     0x14002c588
   14002c522:	std    
   14002c523:	or     al,0x6b
   14002c525:	fnstsw WORD PTR [rsi]
   14002c527:	ret    
   14002c528:	icebp  
   14002c529:	test   BYTE PTR [rbp+riz*4-0x74],bl
   14002c52d:	jrcxz  0x14002c565
   14002c52f:	rex.RX movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c531:	lods   al,BYTE PTR ds:[rsi]
   14002c532:	mov    ah,0x17
   14002c534:	mov    eax,0xd21ae961
   14002c539:	push   rsi
   14002c53a:	add    esp,DWORD PTR [rdx-0x30]
   14002c53d:	add    bh,dl
   14002c53f:	pop    rcx
   14002c540:	(bad)  
   14002c541:	and    BYTE PTR [rdi+0x74c6ca30],bl
   14002c547:	(bad)  
   14002c548:	add    esi,DWORD PTR [rdx]
   14002c54a:	cmp    eax,0x611a3c66
   14002c54f:	mov    dl,0x31
   14002c551:	mov    DWORD PTR [rax+rbx*2+0x12095342],eax
   14002c558:	rex.WRXB (bad) 
   14002c55a:	sar    dl,cl
   14002c55c:	rex (bad) 
   14002c55e:	(bad)  
   14002c55f:	jp     0x14002c5d1
   14002c561:	sti    
   14002c562:	or     edi,DWORD PTR [rdx]
   14002c564:	retf   
   14002c565:	movabs al,ds:0xe37d39f6a000bb19
   14002c56e:	push   rbx
   14002c56f:	jle    0x14002c5b7
   14002c571:	jns    0x14002c5cc
   14002c573:	cmc    
   14002c574:	mov    esi,DWORD PTR [rbx+0x5c]
   14002c577:	adc    al,0xdf
   14002c579:	rex.RXB std 
   14002c57b:	test   DWORD PTR [rbx+0x1d],ecx
   14002c57e:	pop    rdx
   14002c57f:	rex
   14002c580:	rex.WXB add QWORD PTR [r10+0x22],rcx
   14002c584:	cld    
   14002c585:	hlt    
   14002c586:	retf   0x1bbd
   14002c589:	loop   0x14002c5e5
   14002c58b:	jle    0x14002c526
   14002c58d:	adc    bl,cl
   14002c58f:	addr32 mov ds:0xd96f990d,al
   14002c595:	adc    eax,0xc0c68082
   14002c59a:	sub    bl,dl
   14002c59c:	or     al,0x26
   14002c59e:	sbb    dl,BYTE PTR [rip+0x6eb19469]        # 0x1aeb45a0d
   14002c5a4:	(bad)  
   14002c5a5:	xor    al,0x61
   14002c5a7:	fnstcw WORD PTR [rdi+0x470fc0bc]
   14002c5ad:	(bad)  
   14002c5ae:	(bad)  
   14002c5b0:	push   rsp
   14002c5b1:	ret    0x46fe
   14002c5b4:	(bad)  
   14002c5b5:	fld    TBYTE PTR [rdi+0x3d]
   14002c5b8:	(bad)  
   14002c5b9:	sub    eax,0xd2c75c37
   14002c5be:	retf   0x8b0a
   14002c5c1:	mov    ecx,DWORD PTR [rbx+0x794f5045]
   14002c5c7:	movabs ds:0xf6bf383ca914c630,al
   14002c5d0:	call   QWORD PTR [rdx+0x30]
   14002c5d3:	outs   dx,DWORD PTR ds:[rsi]
   14002c5d4:	pop    rdx
   14002c5d5:	mov    edi,0xc0124a8c
   14002c5da:	xchg   ebp,eax
   14002c5db:	(bad)  
   14002c5dc:	js     0x14002c656
   14002c5de:	jne    0x14002c5fe
   14002c5e0:	mov    dl,0x10
   14002c5e2:	(bad)  
   14002c5e3:	mov    edx,0x9edda4b0
   14002c5e8:	stc    
   14002c5e9:	fucomi st,st(5)
   14002c5eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c5ec:	fisttp WORD PTR [rbp+0x23470cd6]
   14002c5f2:	ss ss ss fldlg2 
   14002c5f7:	cmc    
   14002c5f8:	sbb    DWORD PTR [rsi],ecx
   14002c5fa:	(bad)  
   14002c5fb:	ins    BYTE PTR es:[rdi],dx
   14002c5fc:	test   BYTE PTR [rsi+0x72],0xfc
   14002c600:	call   0x149bff985
   14002c605:	or     esp,0xffffffa2
   14002c608:	add    eax,0xed36ada4
   14002c60d:	test   DWORD PTR [rip+0xffffffffa8896354],edx        # 0xe88c2967
   14002c613:	(bad)  
   14002c614:	jo     0x14002c66f
   14002c616:	mov    ebp,DWORD PTR [rax]
   14002c618:	es (bad) 
   14002c61a:	xchg   BYTE PTR [rcx+0x478facd1],cl
   14002c620:	ins    BYTE PTR es:[rdi],dx
   14002c621:	or     al,0xfa
   14002c623:	scas   al,BYTE PTR es:[rdi]
   14002c624:	jl     0x14002c67e
   14002c626:	in     al,0x2e
   14002c628:	cwde   
   14002c629:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c62a:	xor    ebp,DWORD PTR [rsi+rbx*4-0x5f]
   14002c62e:	xor    BYTE PTR [rdx+rax*2+0x22],al
   14002c632:	adc    esp,eax
   14002c634:	ret    0x912
   14002c637:	jrcxz  0x14002c606
   14002c639:	ja     0x14002c68a
   14002c63b:	adc    BYTE PTR [rdx+0x22],cl
   14002c63e:	xchg   esp,eax
   14002c63f:	lock jmp 0x14002c665
   14002c642:	sub    BYTE PTR [rcx-0x30a5977],al
   14002c649:	(bad)  
   14002c64a:	rol    dh,1
   14002c64c:	xchg   edx,eax
   14002c64d:	fwait
   14002c64e:	shr    BYTE PTR [rdi-0x38],1
   14002c651:	add    dh,BYTE PTR gs:[rbp+rsi*4+0x202f5f48]
   14002c659:	movsxd esp,ebp
   14002c65b:	sub    al,0x7d
   14002c65d:	loope  0x14002c631
   14002c65f:	mov    WORD PTR [rbx+0xb],fs
   14002c662:	or     eax,0xc14b3919
   14002c667:	push   0xffffffff922c32c8
   14002c66c:	mov    esi,0x4597384d
   14002c671:	mov    BYTE PTR [rcx],dl
   14002c673:	je     0x14002c6ba
   14002c675:	xchg   BYTE PTR [rdx+rbx*4+0x47d9ae5b],dl
   14002c67c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c67d:	(bad)  
   14002c67f:	mov    ebx,0x5a067a3f
   14002c684:	sbb    eax,0xdee4b19a
   14002c689:	pop    rbx
   14002c68a:	fcmovu st,st(4)
   14002c68c:	icebp  
   14002c68d:	ficomp DWORD PTR [rbx+0x2c3bb668]
   14002c693:	cs cs xchg edx,eax
   14002c696:	and    al,0xc9
   14002c698:	rex.WR (bad) 
   14002c69a:	cs xchg esp,eax
   14002c69c:	out    dx,eax
   14002c69d:	mov    esi,0xb0b3cc1c
   14002c6a2:	pop    rdi
   14002c6a3:	or     BYTE PTR [rbp+0x369d8023],dl
   14002c6a9:	icebp  
   14002c6aa:	ja     0x14002c6af
   14002c6ac:	test   BYTE PTR [rsp+rsi*4-0x52a5d2a6],dl
   14002c6b3:	(bad)  
   14002c6b4:	xchg   DWORD PTR [rsi+0x2fb4dfc],esi
   14002c6ba:	cwde   
   14002c6bb:	cmp    al,0xcf
   14002c6bd:	(bad)  
   14002c6bf:	fsub   st,st(4)
   14002c6c1:	hlt    
   14002c6c2:	fidivr DWORD PTR [rdx]
   14002c6c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c6c5:	(bad)  
   14002c6c6:	(bad)  
   14002c6c7:	fdivr  DWORD PTR [rax]
   14002c6c9:	(bad)  
   14002c6ca:	movsxd edi,DWORD PTR [rax]
   14002c6cc:	cdq    
   14002c6cd:	mov    al,0x99
   14002c6cf:	or     eax,DWORD PTR [rsi+0x9172236]
   14002c6d5:	in     eax,dx
   14002c6d6:	rex.RX add DWORD PTR [rbx-0x74dbb475],0x7
   14002c6de:	xor    BYTE PTR [rcx+0xa],cl
   14002c6e1:	push   rcx
   14002c6e2:	ret    0xac4
   14002c6e5:	xor    cl,BYTE PTR [rcx+rbx*4]
   14002c6e8:	leave  
   14002c6e9:	sbb    DWORD PTR [rsi+0x31934633],ecx
   14002c6ef:	mov    ebp,0x1b3c90d1
   14002c6f4:	(bad)  
   14002c6f5:	jae    0x14002c67a
   14002c6f7:	mov    dl,0xee
   14002c6f9:	and    eax,0x219f18d
   14002c6fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c6ff:	xlat   BYTE PTR ds:[rbx]
   14002c700:	push   rbx
   14002c701:	jmp    0x132ba4382
   14002c706:	rol    DWORD PTR [rip+0xffffffffb9c8d30d],1        # 0xf9cb9a19
   14002c70c:	adc    DWORD PTR [rsi-0x70d478df],ebp
   14002c712:	(bad)  
   14002c713:	(bad)  
   14002c714:	ror    DWORD PTR [rdi],1
   14002c716:	(bad)  
   14002c717:	shr    DWORD PTR [rsi],1
   14002c719:	sti    
   14002c71a:	(bad)  
   14002c71b:	sub    al,0x1a
   14002c71d:	rex.WXB adc cl,BYTE PTR [r9]
   14002c720:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c721:	int    0x7d
   14002c723:	ins    BYTE PTR es:[rdi],dx
   14002c724:	sar    cl,0xff
   14002c727:	xor    DWORD PTR [rsi-0x47cad329],edx
   14002c72d:	stc    
   14002c72e:	(bad)  
   14002c72f:	adc    eax,0xf11f7b4c
   14002c734:	ret    0x480a
   14002c737:	(bad)
   14002c73a:	(bad)  
   14002c73b:	lahf   
   14002c73c:	mov    esp,0x3b9e41ff
   14002c741:	fxam   
   14002c743:	or     eax,0xf03e5287
   14002c748:	mov    BYTE PTR [rbx],0x7c
   14002c74b:	loopne 0x14002c76a
   14002c74d:	ja     0x14002c722
   14002c74f:	push   0xffffffffffffffb7
   14002c751:	rex.W push rbx
   14002c753:	(bad)  
   14002c754:	int    0xbf
   14002c756:	fdivr  st(4),st
   14002c758:	pop    rbp
   14002c759:	adc    eax,0x4695c2e6
   14002c75e:	in     eax,0x8
   14002c760:	movabs al,ds:0x9b76ed2cc5ca2cc6
   14002c769:	imul   ebp,DWORD PTR [rsi-0x36775a67],0x64
   14002c770:	rex.X scas eax,DWORD PTR es:[rdi]
   14002c772:	(bad)  
   14002c773:	(bad)  
   14002c774:	xor    BYTE PTR [rax],bl
   14002c776:	xor    al,ch
   14002c778:	idiv   DWORD PTR [rcx]
   14002c77a:	mov    ebx,0x8dd9c9be
   14002c77f:	xor    ebx,DWORD PTR [rbp+rbp*8-0x38f216f2]
   14002c786:	in     al,0xd6
   14002c788:	rex.X fiadd DWORD PTR [rsi+0x24]
   14002c78c:	sbb    eax,0x4e83499a
   14002c791:	movabs ds:0x97daeda485716349,eax
   14002c79a:	sbb    esp,DWORD PTR [rcx]
   14002c79c:	call   0x1b0c44e88
   14002c7a1:	mov    dh,cl
   14002c7a3:	(bad)  
   14002c7a4:	fsubr  DWORD PTR [rdi+riz*1]
   14002c7a7:	retf   
   14002c7a8:	es ins BYTE PTR es:[rdi],dx
   14002c7aa:	mov    esi,es
   14002c7ac:	mov    WORD PTR [rdi+0x63],es
   14002c7af:	lods   al,BYTE PTR ds:[rsi]
   14002c7b0:	(bad)  
   14002c7b1:	sub    BYTE PTR [rax-0x5f],al
   14002c7b4:	mov    DWORD PTR [rsp+rax*2],esp
   14002c7b7:	ret    0x4912
   14002c7ba:	rex.B and al,0x4
   14002c7bd:	mov    DWORD PTR [rdx-0x5bae9ccc],edx
   14002c7c3:	xor    al,0xfd
   14002c7c5:	ficomp DWORD PTR [rdi+0xda0c5a9]
   14002c7cb:	popf   
   14002c7cc:	(bad)  
   14002c7cd:	scas   eax,DWORD PTR es:[rdi]
   14002c7ce:	push   rsp
   14002c7cf:	rex.R
   14002c7d0:	rex xchg edx,eax
   14002c7d2:	movabs al,ds:0x18c9da463f5a2695
   14002c7db:	sahf   
   14002c7dc:	xchg   BYTE PTR ds:[rax-0x5c],ch
   14002c7e0:	sub    r12b,dl
   14002c7e3:	test   eax,0x366b9f6e
   14002c7e8:	(bad)  
   14002c7e9:	cld    
   14002c7ea:	idiv   BYTE PTR [rbp+0x5bef71d7]
   14002c7f0:	out    dx,eax
   14002c7f1:	loopne 0x14002c799
   14002c7f3:	sbb    ebp,DWORD PTR [rdi+0x28]
   14002c7f6:	sub    al,0xc1
   14002c7f8:	movabs al,ds:0x76008a547cbc6bf5
   14002c801:	jb     0x14002c862
   14002c803:	sbb    ch,0x82
   14002c806:	retf   
   14002c807:	cmp    eax,0x584924cf
   14002c80c:	rex.WRB adc r10b,BYTE PTR [r14+0x57]
   14002c810:	xchg   esi,eax
   14002c811:	iret   
   14002c812:	sbb    esi,DWORD PTR [rbx]
   14002c814:	pop    rax
   14002c815:	setnp  BYTE PTR [rbx-0x17246365]
   14002c81c:	jb     0x14002c88c
   14002c81e:	mov    bl,0x4b
   14002c820:	mov    bh,0x7b
   14002c822:	mov    bh,dh
   14002c824:	cdq    
   14002c825:	movabs ds:0x5b58c33374331fac,eax
   14002c82e:	push   rsp
   14002c82f:	adc    al,0xd1
   14002c831:	pop    rcx
   14002c832:	fadd   DWORD PTR [rdi+0x24c6585a]
   14002c838:	ins    DWORD PTR es:[rdi],dx
   14002c839:	in     al,0xc2
   14002c83b:	adc    dh,BYTE PTR [rcx-0x66]
   14002c83e:	and    ah,BYTE PTR [rbp-0x462e0dd5]
   14002c844:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c845:	(bad)  
   14002c846:	sahf   
   14002c847:	shr    bl,1
   14002c849:	neg    DWORD PTR [rax]
   14002c84b:	lea    eax,[rsi-0x17e6d8f4]
   14002c851:	pushf  
   14002c852:	ins    BYTE PTR es:[rdi],dx
   14002c853:	cmp    al,0x46
   14002c855:	neg    ebp
   14002c857:	jbe    0x14002c83e
   14002c859:	mov    cl,0x12
   14002c85b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c85c:	adc    dl,dl
   14002c85e:	rex.W adc cl,BYTE PTR [rcx-0x49]
   14002c862:	pop    rsp
   14002c863:	mov    ecx,0xbc394cdd
   14002c868:	jg     0x14002c7ef
   14002c86a:	(bad)  
   14002c86b:	rex.WRX scas rax,QWORD PTR es:[rdi]
   14002c86d:	mov    ebx,0xc4643edd
   14002c872:	push   0xffffffffffffffd3
   14002c874:	repnz xor ebp,DWORD PTR [rdi+0x5e3b96bb]
   14002c87b:	ja     0x14002c888
   14002c87d:	or     ecx,DWORD PTR [rbx+0x4b]
   14002c880:	lods   al,BYTE PTR ds:[rsi]
   14002c881:	lods   al,BYTE PTR ds:[rsi]
   14002c882:	lods   al,BYTE PTR ds:[rsi]
   14002c883:	shr    BYTE PTR [rsi+rsi*1+0x49],1
   14002c887:	xchg   edx,eax
   14002c888:	in     al,0xbc
   14002c88a:	imul   ecx,DWORD PTR [rbx],0x7e
   14002c88d:	(bad)  
   14002c88e:	in     eax,0xa0
   14002c890:	sub    dh,bl
   14002c892:	(bad)  
   14002c893:	mov    ebx,0xb8022950
   14002c898:	sbb    al,0x54
   14002c89a:	loope  0x14002c8dd
   14002c89c:	outs   dx,DWORD PTR ds:[rsi]
   14002c89d:	xlat   BYTE PTR ds:[rbx]
   14002c89e:	cmp    DWORD PTR [rsi+0x6c],ebx
   14002c8a1:	fsub   QWORD PTR [rax+0x3d]
   14002c8a4:	sbb    al,0x38
   14002c8a6:	jo     0x14002c828
   14002c8a8:	add    eax,DWORD PTR [rdi]
   14002c8aa:	(bad)  
   14002c8ab:	int3   
   14002c8ac:	cld    
   14002c8ad:	int    0x18
   14002c8af:	ret    
   14002c8b0:	push   0xffffffffce3c663c
   14002c8b5:	sbb    BYTE PTR [rdi-0x3a],cl
   14002c8b8:	lods   al,BYTE PTR ds:[rsi]
   14002c8b9:	popf   
   14002c8ba:	pop    rbx
   14002c8bb:	ins    DWORD PTR es:[edi],dx
   14002c8bd:	jae    0x14002c84c
   14002c8bf:	(bad)  
   14002c8c0:	out    dx,al
   14002c8c1:	xor    DWORD PTR [rdx+0x328c0727],edi
   14002c8c7:	rex.WRB (bad) 
   14002c8c9:	xchg   esp,eax
   14002c8ca:	or     DWORD PTR [rax-0x37],0x524c8265
   14002c8d1:	fimul  DWORD PTR [rbx-0x24115335]
   14002c8d7:	rex.WRXB fisubr DWORD PTR [r8+r10*1-0x3b]
   14002c8dc:	test   eax,0xc7cbfaab
   14002c8e1:	cwde   
   14002c8e2:	ins    BYTE PTR es:[rdi],dx
   14002c8e3:	(bad)  
   14002c8e4:	(bad)  
   14002c8e5:	(bad)  
   14002c8e6:	hlt    
   14002c8e7:	xchg   BYTE PTR [rbx],ah
   14002c8e9:	ss ss (bad) 
   14002c8ec:	or     al,0xc7
   14002c8ee:	movsxd ecx,DWORD PTR [rsi]
   14002c8f0:	(bad)  
   14002c8f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8f2:	mov    esp,0x791bcee3
   14002c8f7:	in     al,dx
   14002c8f8:	jmp    0xd3d0c590
   14002c8fd:	(bad)  
   14002c8fe:	movabs al,ds:0x969bf0f84d2344b3
   14002c907:	mov    eax,0xe85bd6e3
   14002c90c:	je     0x14002c924
   14002c90e:	call   0x1694b0387
   14002c913:	mov    ebx,DWORD PTR [rsi+0x7e]
   14002c916:	in     eax,0x8
   14002c918:	jle    0x14002c987
   14002c91a:	out    0x5f,al
   14002c91c:	sbb    esp,ecx
   14002c91e:	cmp    eax,0x81e15401
   14002c923:	out    dx,eax
   14002c924:	mov    ah,0xe0
   14002c926:	pop    rdi
   14002c927:	or     ah,BYTE PTR [rsp+rdx*4+0x5a4d9ab4]
   14002c92e:	int    0x26
   14002c930:	loopne 0x14002c908
   14002c932:	xchg   rsp,rax
   14002c934:	(bad)  
   14002c935:	(bad)  
   14002c936:	pop    rdx
   14002c937:	xor    ebx,DWORD PTR [rax]
   14002c939:	(bad)  
   14002c93a:	jmp    0x1baf6d136
   14002c93f:	jge    0x14002c9bb
   14002c941:	mov    ebp,0x13fd1b1e
   14002c946:	pushf  
   14002c947:	cmp    eax,0xbd6b2cf1
   14002c94c:	and    edi,esp
   14002c94e:	(bad)  
   14002c94f:	sbb    DWORD PTR [rax-0x7b],ecx
   14002c952:	out    dx,al
   14002c953:	in     al,dx
   14002c954:	(bad)  
   14002c955:	rex.WRXB xchg r14,rax
   14002c957:	enter  0x2693,0x71
   14002c95b:	stos   DWORD PTR es:[rdi],eax
   14002c95c:	int    0x91
   14002c95e:	imul   esi,edi,0x11
   14002c961:	(bad)  
   14002c962:	adc    DWORD PTR [rbx+0x67c1e4b1],ecx
   14002c968:	iret   
   14002c969:	icebp  
   14002c96a:	pop    rdi
   14002c96b:	neg    DWORD PTR ds:[rbp-0x7a]
   14002c96f:	pop    rdx
   14002c970:	jno    0x14002c941
   14002c972:	int    0x8b
   14002c974:	jl     0x14002c966
   14002c976:	scas   al,BYTE PTR es:[rdi]
   14002c977:	add    edi,esp
   14002c979:	(bad)  
   14002c97b:	mov    bh,0xd1
   14002c97d:	imul   esi,DWORD PTR [rdi-0x6df2e4b7],0xc15e4638
   14002c987:	mov    dl,0xdc
   14002c989:	sub    cl,ah
   14002c98b:	test   DWORD PTR [rbp+0x4012dcc6],ebx
   14002c991:	push   rbp
   14002c992:	(bad)  
   14002c993:	div    BYTE PTR [rsi-0x64]
   14002c996:	out    0x4e,eax
   14002c998:	adc    BYTE PTR [rdx+0x4e858a52],cl
   14002c99e:	xchg   DWORD PTR [rbp-0x6551f8b2],eax
   14002c9a4:	jle    0x14002c96c
   14002c9a6:	adc    eax,0x7e266946
   14002c9ab:	cdq    
   14002c9ac:	out    dx,al
   14002c9ad:	out    0xc6,al
   14002c9af:	(bad)  
   14002c9b0:	jmp    0x14002c98f
   14002c9b2:	(bad)  
   14002c9b3:	fst    QWORD PTR [rbx-0x31dc8574]
   14002c9ba:	pushf  
   14002c9bb:	sbb    al,0xf1
   14002c9bd:	int3   
   14002c9be:	jp     0x14002c98e
   14002c9c0:	pop    rdx
   14002c9c1:	xchg   edx,eax
   14002c9c2:	adc    BYTE PTR [rcx-0x35],bl
   14002c9c5:	rex.RXB out dx,al
   14002c9c7:	pop    rdx
   14002c9c8:	loop   0x14002c9bf
   14002c9ca:	out    dx,eax
   14002c9cb:	mov    ebx,0xf87239e
   14002c9d0:	jno    0x14002c9ca
   14002c9d2:	rcl    ch,1
   14002c9d4:	add    ch,al
   14002c9d6:	sbb    bh,ah
   14002c9d8:	in     eax,dx
   14002c9d9:	cmp    bh,ch
   14002c9db:	in     eax,dx
   14002c9dc:	rex pop rbp
   14002c9de:	or     DWORD PTR [rax-0x785aafb5],edi
   14002c9e4:	push   rax
   14002c9e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c9e6:	ins    BYTE PTR es:[rdi],dx
   14002c9e7:	(bad)  
   14002c9e8:	retf   
   14002c9e9:	sbb    ebx,ebx
   14002c9eb:	adc    eax,0x24924946
   14002c9f0:	(bad)  
   14002c9f1:	(bad)  
   14002c9f2:	lods   al,BYTE PTR ds:[rsi]
   14002c9f3:	sub    al,0x2d
   14002c9f5:	jb     0x14002ca74
   14002c9f7:	jmp    0xc66e24eb
   14002c9fc:	jrcxz  0x14002c9ca
   14002c9fe:	adc    eax,0x528148e5
   14002ca03:	outs   dx,BYTE PTR ds:[rsi]
   14002ca04:	xchg   ecx,eax
   14002ca05:	(bad)  
   14002ca06:	jbe    0x14002ca68
   14002ca08:	(bad)  
   14002ca09:	out    0xc3,al
   14002ca0b:	jbe    0x14002c9b1
   14002ca0d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ca0e:	ja     0x14002ca22
   14002ca10:	jae    0x14002ca55
   14002ca12:	add    BYTE PTR [rbp+0x10],dl
   14002ca15:	(bad)  
   14002ca16:	(bad)  [rax-0x16]
   14002ca19:	out    dx,eax
   14002ca1a:	in     al,0x98
   14002ca1c:	loopne 0x14002ca4a
   14002ca1e:	xchg   DWORD PTR [rsi+0x73],esi
   14002ca21:	jnp    0x14002ca5a
   14002ca23:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ca24:	scas   al,BYTE PTR es:[rdi]
   14002ca25:	xor    eax,0xb2a3a5fe
   14002ca2a:	add    al,0x50
   14002ca2c:	test   DWORD PTR [rdi],eax
   14002ca2e:	push   rax
   14002ca2f:	and    eax,0xb8e2af81
   14002ca34:	cmp    esi,DWORD PTR [rip+0xffffffffd35f543e]        # 0x113621e78
   14002ca3a:	pop    rdi
   14002ca3b:	or     al,0x95
   14002ca3d:	and    eax,0x76351a80
   14002ca42:	add    dl,BYTE PTR [rbp+0x50]
   14002ca45:	xor    al,0x97
   14002ca47:	or     edx,0x11
   14002ca4a:	rex adc eax,0x4c95481e
   14002ca50:	repnz in eax,dx
   14002ca52:	sbb    al,0xbb
   14002ca54:	stos   BYTE PTR es:[rdi],al
   14002ca55:	(bad)  
   14002ca56:	push   QWORD PTR [rdx-0x69]
   14002ca59:	xchg   ecx,eax
   14002ca5a:	push   rdi
   14002ca5b:	or     DWORD PTR [rbp-0x339cffde],edx
   14002ca61:	adc    eax,0x2ed8fe29
   14002ca66:	push   rsp
   14002ca67:	xchg   r8,rax
   14002ca69:	stos   BYTE PTR es:[rdi],al
   14002ca6a:	rex.W sub bl,sil
   14002ca6d:	xor    bh,dh
   14002ca6f:	outs   dx,BYTE PTR ds:[rsi]
   14002ca70:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ca72:	or     BYTE PTR [rax-0x49],ah
   14002ca75:	movabs eax,ds:0xf18d5f71c55f024a
   14002ca7e:	not    DWORD PTR [rdx+0x4d43f0]
   14002ca84:	scas   eax,DWORD PTR es:[rdi]
   14002ca85:	sbb    bl,dh
   14002ca87:	(bad)  
   14002ca88:	(bad)  
   14002ca89:	fisttp DWORD PTR [rip+0xfffffffff8f4eee3]        # 0x138f7b972
   14002ca8f:	jnp    0x14002cade
   14002ca91:	call   0x1200c7361
   14002ca96:	movabs al,gs:0x7f1a9ddc77b7c536
   14002caa0:	pop    rsi
   14002caa1:	and    edi,edx
   14002caa3:	scas   eax,DWORD PTR es:[rdi]
   14002caa4:	add    al,0x35
   14002caa6:	add    DWORD PTR [rdx+riz*1-0x56],ebx
   14002caaa:	and    al,0xfc
   14002caac:	push   rbp
   14002caad:	and    al,0x95
   14002caaf:	in     eax,dx
   14002cab0:	(bad)  
   14002cab1:	cmp    esp,DWORD PTR [rax-0x2ba601ea]
   14002cab7:	add    al,0xf0
   14002cab9:	adc    ch,BYTE PTR [rax+0x5556809a]
   14002cabf:	cmp    bl,ch
   14002cac1:	ret    0x579d
   14002cac4:	sysexit 
   14002cac6:	add    DWORD PTR [rax+rdx*2+0x1fedf96b],edx
   14002cacd:	jnp    0x14002caf6
   14002cacf:	(bad)  
   14002cad0:	fisttp WORD PTR [rcx+0x2d]
   14002cad3:	(bad)  
   14002cad4:	enter  0xaaa5,0x4
   14002cad8:	mov    bl,0xbd
   14002cada:	xor    eax,0xec6a3599
   14002cadf:	xor    BYTE PTR [rdx+0x16af882a],ch
   14002cae5:	push   0xb
   14002cae7:	shl    BYTE PTR [rbx+0x31f3fed6],0xf6
   14002caee:	rex.WRX adc rax,r8
   14002caf1:	mov    esp,0x269ecd10
   14002caf6:	sub    BYTE PTR [rdx],0x9
   14002caf9:	push   0xffffffffedf2cd95
   14002cafe:	(bad)  
   14002caff:	jnp    0x14002cb28
   14002cb01:	test   DWORD PTR [rcx+0x5e],esi
   14002cb04:	add    al,0x3f
   14002cb06:	(bad)  
   14002cb07:	rex.WRXB adc QWORD PTR [r8-0x2b],r8
   14002cb0b:	add    al,0xb3
   14002cb0d:	rex.WX add al,0xb5
   14002cb10:	xchg   ebx,eax
   14002cb11:	jrcxz  0x14002ca9a
   14002cb13:	movsxd ebp,esp
   14002cb15:	(bad)  
   14002cb16:	jno    0x14002cafe
   14002cb18:	sbb    DWORD PTR [rbx-0x7a],edi
   14002cb1b:	add    BYTE PTR [rdx+0x1b55fc24],ch
   14002cb21:	ja     0x14002caca
   14002cb23:	(bad)  
   14002cb24:	(bad)  
   14002cb25:	(bad)  
   14002cb26:	movsxd ebx,DWORD PTR [rsi]
   14002cb28:	scas   al,BYTE PTR es:[rdi]
   14002cb29:	gs (bad) 
   14002cb2b:	(bad)  
   14002cb2c:	scas   al,BYTE PTR es:[rdi]
   14002cb2d:	or     DWORD PTR [rax+0x4554826a],esp
   14002cb33:	imul   esp,DWORD PTR [rdx-0x45],0xffffffc7
   14002cb37:	(bad)  
   14002cb38:	fsubr  DWORD PTR [rcx+0x115efec8]
   14002cb3e:	cld    
   14002cb3f:	or     BYTE PTR [rdx+0x11],0xc0
   14002cb43:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002cb44:	ds pushf 
   14002cb46:	sub    cl,BYTE PTR [rcx]
   14002cb48:	push   0xffffffff9e730555
   14002cb4d:	int3   
   14002cb4e:	cld    
   14002cb4f:	repnz icebp 
   14002cb51:	neg    BYTE PTR [rdx]
   14002cb53:	sub    al,BYTE PTR [rbp+0x0]
   14002cb56:	(bad)  
   14002cb57:	or     eax,0xef6e80b5
   14002cb5c:	mov    eax,0xec3e353b
   14002cb61:	mov    esi,es
   14002cb63:	fisttp WORD PTR [rbx-0x6aea40fe]
   14002cb69:	sub    BYTE PTR es:[rdx-0x36eaaff7],0x64
   14002cb71:	mov    ebx,0x4da80ec7
   14002cb76:	cld    
   14002cb77:	push   rdi
   14002cb78:	(bad)  
   14002cb79:	xchg   ebp,eax
   14002cb7a:	sbb    BYTE PTR es:[rdx],0xd5
   14002cb7e:	rex.RXB sub eax,0x2a2eaf90
   14002cb84:	rex.WB add BYTE PTR [r13-0x2e],dl
   14002cb88:	rcl    BYTE PTR [rbp-0x2b],1
   14002cb8b:	int3   
   14002cb8c:	repz mov dh,0x14
   14002cb8f:	mov    bh,0x26
   14002cb91:	(bad)  
   14002cb92:	or     esp,DWORD PTR [rbx+0x25500472]
   14002cb98:	and    DWORD PTR [rbp+0x3ddbb8da],ebp
   14002cb9e:	jbe    0x14002cbb8
   14002cba0:	mov    edi,0x1eedec0e
   14002cba5:	push   rsp
   14002cba6:	mov    es,WORD PTR [rax]
   14002cba8:	cs (bad) 
   14002cbaa:	push   rbp
   14002cbab:	adc    al,0x9e
   14002cbad:	jns    0x14002cbb7
   14002cbaf:	(bad)  
   14002cbb0:	int    0x73
   14002cbb2:	(bad)  
   14002cbb3:	mov    esi,0xf6818bca
   14002cbb8:	adc    al,0x1
   14002cbba:	push   rsp
   14002cbbb:	leave  
   14002cbbc:	jp     0x14002cb96
   14002cbbe:	out    dx,al
   14002cbbf:	mov    cl,0x77
   14002cbc1:	jp     0x14002cbbf
   14002cbc3:	stos   BYTE PTR es:[rdi],al
   14002cbc4:	pop    rdi
   14002cbc5:	retf   
   14002cbc6:	outs   dx,BYTE PTR ds:[rsi]
   14002cbc7:	cmp    esi,esp
   14002cbc9:	xchg   ebp,eax
   14002cbca:	(bad)  
   14002cbcb:	fcom   QWORD PTR [rbx]
   14002cbcd:	rex adc eax,0xc75572b5
   14002cbd3:	cs (bad) 
   14002cbd5:	movsxd ebx,DWORD PTR [rsi+0x1079fb7d]
   14002cbdb:	cld    
   14002cbdc:	cmp    BYTE PTR [rcx+0x9aa8026],0xff
   14002cbe3:	cmp    al,0x68
   14002cbe5:	leave  
   14002cbe6:	popf   
   14002cbe7:	pop    rsi
   14002cbe8:	mov    edi,DWORD PTR [rdi-0x1ed8672d]
   14002cbee:	xchg   DWORD PTR [rdx-0x235a3fef],ecx
   14002cbf4:	cld    
   14002cbf5:	sub    ch,BYTE PTR [rdx-0x31]
   14002cbf8:	pop    rdx
   14002cbf9:	lock (bad) 
   14002cbfb:	sbb    eax,0xce0096af
   14002cc00:	fwait
   14002cc01:	loopne 0x14002cc0a
   14002cc03:	push   rsp
   14002cc04:	mov    es,WORD PTR [rax]
   14002cc06:	pop    rsi
   14002cc07:	(bad)  
   14002cc08:	rex.B (bad) 
   14002cc0a:	add    bh,BYTE PTR [rdx-0xf]
   14002cc0d:	icebp  
   14002cc0e:	out    0x39,eax
   14002cc10:	repnz (bad) 
   14002cc12:	push   0xb
   14002cc14:	addr32 sbb eax,0xebb1ac04
   14002cc1a:	and    DWORD PTR [rax+rdi*4+0x3aaa31ec],eax
   14002cc21:	leave  
   14002cc22:	imul   ebx,DWORD PTR [rsp+rbx*1-0x6b],0x22
   14002cc27:	add    BYTE PTR [rcx],ah
   14002cc29:	(bad)  
   14002cc2a:	int3   
   14002cc2b:	rex.R fidivr WORD PTR [rdx]
   14002cc2e:	and    DWORD PTR [rdi-0x3620db3c],ebp
   14002cc34:	jno    0x14002cbe1
   14002cc36:	xor    al,0xbe
   14002cc38:	mov    ch,0x16
   14002cc3a:	and    esp,eax
   14002cc3c:	and    eax,0x5f76c091
   14002cc41:	iret   
   14002cc42:	stos   DWORD PTR es:[rdi],eax
   14002cc43:	jge    0x14002cc01
   14002cc45:	in     eax,dx
   14002cc46:	cmp    bh,dh
   14002cc48:	stos   DWORD PTR es:[rdi],eax
   14002cc49:	or     DWORD PTR [rdx+0x11],0xfe3ed400
   14002cc50:	rex.WRX mov ?,WORD PTR [rdi-0x6243966d]
   14002cc57:	ds (bad) 
   14002cc59:	xchg   ebp,eax
   14002cc5a:	cmp    al,0x66
   14002cc5c:	in     eax,dx
   14002cc5d:	add    dl,BYTE PTR [rax+rdx*1+0x55]
   14002cc61:	and    al,0x92
   14002cc63:	in     eax,dx
   14002cc64:	(bad)  
   14002cc65:	jnp    0x14002cc52
   14002cc67:	xor    DWORD PTR [rdx-0xa44a3b6],ebp
   14002cc6d:	mov    eax,0x927b11bb
   14002cc72:	add    BYTE PTR [rdx+0x56f3a02a],ch
   14002cc78:	lahf   
   14002cc79:	mov    edi,0xebd798d3
   14002cc7e:	mov    edx,0x229ec1c
   14002cc83:	test   al,0x4d
   14002cc85:	cld    
   14002cc86:	mov    esp,DWORD PTR [rbx+0x4dede34e]
   14002cc8c:	int3   
   14002cc8d:	cmp    eax,0x4683cc01
   14002cc92:	fisubr WORD PTR [rsi]
   14002cc94:	(bad)  
   14002cc95:	cmp    r14d,DWORD PTR [rip+0x2f00452a]        # 0x16f0311c6
   14002cc9c:	out    0x81,eax
   14002cc9e:	(bad)  
   14002cc9f:	(bad)  
   14002cca0:	jg     0x14002cd13
   14002cca2:	(bad)  
   14002cca3:	(bad)  
   14002cca4:	pop    rdi
   14002cca5:	and    esp,DWORD PTR [rax-0x2c0ffbae]
   14002ccab:	push   rax
   14002ccac:	fwait
   14002ccad:	clc    
   14002ccae:	(bad)  
   14002ccaf:	(bad)  
   14002ccb0:	mov    edi,0x71aa042e
   14002ccb5:	and    esp,edx
   14002ccb7:	pop    rbx
   14002ccb8:	or     ebp,0x39
   14002ccbb:	push   0xffffffffffffffe1
   14002ccbd:	test   al,0xf1
   14002ccbf:	push   rdx
   14002ccc0:	cwde   
   14002ccc1:	or     ecx,DWORD PTR [rbx]
   14002ccc3:	movabs al,ds:0xcfdfceb71f17fcd6
   14002cccc:	(bad)  
   14002cccd:	cmp    DWORD PTR [rsi+rcx*1+0x2a],ebx
   14002ccd1:	rex.WXB add BYTE PTR [r13-0xb],dl
   14002ccd5:	icebp  
   14002ccd6:	imul   esi,DWORD PTR [rbx-0x41],0xffffff9a
   14002ccda:	(bad)  
   14002ccdb:	fmul   QWORD PTR [rbp+0x502570e7]
   14002cce1:	cmp    DWORD PTR [rdx],eax
   14002cce3:	test   al,0x9b
   14002cce5:	jp     0x14002cca3
   14002cce7:	hlt    
   14002cce8:	xor    DWORD PTR [rsi-0x6],esi
   14002cceb:	js     0x14002cd28
   14002cced:	sbb    ebp,0xe5bb6c22
   14002ccf3:	cmp    al,0xae
   14002ccf5:	and    al,0x2a
   14002ccf7:	rex.RXB add BYTE PTR [r15+0x12],r10b
   14002ccfb:	push   rbp
   14002ccfc:	xor    eax,0x631eb7f1
   14002cd01:	(bad)  
   14002cd02:	test   esi,edi
   14002cd04:	(bad)  
   14002cd05:	cmp    ah,dh
   14002cd07:	outs   dx,BYTE PTR ds:[rsi]
   14002cd08:	cmp    al,0x87
   14002cd0a:	in     eax,dx
   14002cd0b:	(bad)  
   14002cd0c:	sahf   
   14002cd0d:	and    al,0x80
   14002cd0f:	stos   BYTE PTR es:[rdi],al
   14002cd10:	or     edi,DWORD PTR [rsi-0x63]
   14002cd13:	(bad)  
   14002cd14:	fcomi  st,st(5)
   14002cd16:	out    0x50,eax
   14002cd18:	cdq    
   14002cd19:	(bad)  
   14002cd1a:	mov    r11d,0xe96c0095
   14002cd20:	gs cld 
   14002cd22:	rex.WRXB mov WORD PTR [r9],?
   14002cd25:	cmp    QWORD PTR [rbx-0x6555748],rbx
   14002cd2c:	ds iret 
   14002cd2e:	ins    DWORD PTR es:[rdi],dx
   14002cd2f:	mov    bl,0xe6
   14002cd31:	std    
   14002cd32:	js     0x14002cd8f
   14002cd34:	xchg   ecx,eax
   14002cd35:	out    0x79,eax
   14002cd37:	jns    0x14002cd97
   14002cd39:	sbb    al,BYTE PTR [rax+0x33]
   14002cd3c:	cmp    eax,DWORD PTR [rdi-0x44b982a1]
   14002cd42:	or     BYTE PTR [rsi+0x2b],dh
   14002cd45:	add    eax,eax
   14002cd47:	hlt    
   14002cd48:	(bad)  
   14002cd49:	rex.WRB loop 0x14002cd84
   14002cd4c:	(bad)  
   14002cd4d:	add    BYTE PTR [rbx-0x5ad75455],ch
   14002cd53:	sub    ch,BYTE PTR [rdi-0xfae183f]
   14002cd59:	mov    ch,0xd6
   14002cd5b:	cmp    esi,DWORD PTR [rsi-0x54]
   14002cd5e:	lods   eax,DWORD PTR ds:[rsi]
   14002cd5f:	sub    BYTE PTR [rdi-0x19],bl
   14002cd62:	sub    ebx,DWORD PTR [rcx-0x66]
   14002cd65:	jnp    0x14002cd8c
   14002cd67:	push   rsi
   14002cd68:	add    eax,DWORD PTR [rsi]
   14002cd6a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cd6b:	imul   ebp,DWORD PTR [rdx],0x53902181
   14002cd71:	push   rdx
   14002cd72:	pop    rsi
   14002cd73:	mov    ebx,0x9dbb15
   14002cd78:	xor    al,BYTE PTR [rax-0x60b0582d]
   14002cd7e:	cmp    eax,0xc6c4e271
   14002cd83:	js     0x14002cdc1
   14002cd85:	ss cmp bl,dh
   14002cd88:	rex.WX push rdx
   14002cd8a:	and    DWORD PTR [rbx],esi
   14002cd8c:	imul   ebp,DWORD PTR [rbx],0xffffffaa
   14002cd8f:	mov    esp,0x5c6bc7e
   14002cd94:	(bad)  
   14002cd95:	add    ebx,edx
   14002cd97:	in     eax,dx
   14002cd98:	jbe    0x14002cd6f
   14002cd9a:	or     ebp,DWORD PTR [rdi]
   14002cd9c:	mov    esp,0xfc270a70
   14002cda1:	movsxd edi,edi
   14002cda3:	jae    0x14002cdfc
   14002cda5:	adc    eax,eax
   14002cda7:	outs   dx,BYTE PTR ds:[rsi]
   14002cda8:	popf   
   14002cda9:	mov    DWORD PTR [rdx],ecx
   14002cdab:	push   0x19606d00
   14002cdb0:	push   0xffffffffffaad7f9
   14002cdb5:	jg     0x14002cdca
   14002cdb7:	rex.W fdivr DWORD PTR [rbp-0x109ca019]
   14002cdbe:	rol    BYTE PTR [rdx],0x13
   14002cdc1:	pushf  
   14002cdc2:	(bad)  
   14002cdc3:	fcomip st,st(0)
   14002cdc5:	(bad)  
   14002cdc6:	xchg   eax,eax
   14002cdc8:	sub    edi,edi
   14002cdca:	(bad)  
   14002cdcb:	ds xor dl,al
   14002cdce:	mov    ecx,0xbb0ebb05
   14002cdd3:	(bad)  
   14002cdd4:	add    dh,BYTE PTR [rax-0x3ec9e448]
   14002cdda:	ffree  st(0)
   14002cddc:	or     al,ch
   14002cdde:	loopne 0x14002ce2c
   14002cde0:	stos   BYTE PTR es:[rdi],al
   14002cde1:	jo     0x14002ce16
   14002cde3:	ja     0x14002cdd0
   14002cde5:	mov    ecx,0xc87bd8d7
   14002cdea:	jno    0x14002cdc2
   14002cdec:	stos   BYTE PTR es:[rdi],al
   14002cded:	(bad)  
   14002cdee:	int    0xcf
   14002cdf0:	jae    0x14002cdb2
   14002cdf2:	add    BYTE PTR [rdi],dh
   14002cdf4:	jg     0x14002ce39
   14002cdf6:	cmp    al,0x60
   14002cdf8:	push   rdi
   14002cdf9:	(bad)  
   14002cdfa:	mov    bh,0xa
   14002cdfc:	push   rcx
   14002cdfd:	cdq    
   14002cdfe:	add    BYTE PTR [rdx+0x74],al
   14002ce01:	and    eax,0xc40ba07
   14002ce06:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ce07:	cmp    ch,ch
   14002ce09:	mov    edi,0x8d6c6f6b
   14002ce0e:	cmp    eax,0xc70f3083
   14002ce13:	cmp    BYTE PTR [rdx],dl
   14002ce15:	sbb    dl,ah
   14002ce17:	xchg   esp,eax
   14002ce18:	(bad)  
   14002ce19:	nop
   14002ce1a:	or     dl,BYTE PTR [rax]
   14002ce1c:	shr    BYTE PTR [rsi+0x36],0xa1
   14002ce20:	xchg   ebp,eax
   14002ce21:	jg     0x14002ce68
   14002ce23:	cmp    BYTE PTR [rbx+0x3f],dh
   14002ce26:	mov    esp,0x6efeff22
   14002ce2b:	neg    DWORD PTR ds:[rdx]
   14002ce2e:	jnp    0x14002ce3b
   14002ce30:	rex.B (bad) 
   14002ce32:	in     eax,0x38
   14002ce34:	movabs eax,ds:0x7fcd2bbfbfdcaf0f
   14002ce3d:	fcomp  st(5)
   14002ce3f:	rex.X adc al,0x82
   14002ce42:	jge    0x14002cdc5
   14002ce44:	or     dl,cl
   14002ce46:	mov    edi,0xa990bd43
   14002ce4b:	(bad)  
   14002ce4c:	out    dx,al
   14002ce4d:	sub    r12b,cl
   14002ce50:	or     dl,al
   14002ce52:	outs   dx,BYTE PTR ds:[rsi]
   14002ce53:	mov    dh,0xfc
   14002ce55:	mov    esi,0x1a802d6b
   14002ce5a:	xor    eax,0x51a8d46a
   14002ce5f:	movabs ds:0x51a8d46a351a8d46,eax
   14002ce68:	movabs ds:0x51a8d46a351a8d46,eax
   14002ce71:	movabs ds:0x51a8d46a351a8d46,eax
   14002ce7a:	movabs ds:0x51a8d46a351a8d46,eax
   14002ce83:	movabs ds:0x51a8d46a351a8d46,eax
   14002ce8c:	movabs ds:0xff04546a351a8d46,eax
   14002ce95:	(bad)  
   14002ce96:	fwait
   14002ce97:	cdq    
   14002ce98:	int    0x59
   14002ce9a:	outs   dx,DWORD PTR ds:[rsi]
   14002ce9b:	fwait
   14002ce9c:	rex.WX add BYTE PTR ss:[rax],al
   14002cea0:	add    BYTE PTR [rax],al
   14002cea2:	rex.WB
   14002cea3:	rex.RB
   14002cea4:	rex.WRX
   14002cea5:	rex.R scas al,BYTE PTR es:[rdi]
   14002cea7:	rex.X (bad) 
   14002cea9:	(bad)  
	...
   14002ceb2:	add    DWORD PTR [rax],eax
   14002ceb4:	or     eax,0x10101000
   14002ceb9:	add    BYTE PTR [rcx],al
   14002cebb:	add    BYTE PTR [rax+rax*1],al
   14002cebe:	sub    BYTE PTR [rcx],al
   14002cec0:	add    BYTE PTR [rax],al
   14002cec2:	adc    DWORD PTR [rax],eax
   14002cec4:	adc    BYTE PTR [rax],dl
   14002cec6:	add    BYTE PTR [rax],al
   14002cec8:	add    DWORD PTR [rax],eax
   14002ceca:	or     BYTE PTR [rax],al
   14002cecc:	push   0x12000005
   14002ced1:	add    BYTE PTR [rax],bl
   14002ced3:	sbb    BYTE PTR [rax],dl
   14002ced5:	add    BYTE PTR [rcx],al
   14002ced7:	add    BYTE PTR [rax+rax*1],al
   14002ceda:	call   0x15302cee0
   14002cedf:	add    BYTE PTR [rax],bl
   14002cee1:	sbb    BYTE PTR [rax],al
   14002cee3:	add    BYTE PTR [rcx],al
   14002cee5:	add    BYTE PTR [rax],cl
   14002cee7:	add    al,cl
   14002cee9:	(bad)  
   14002ceea:	add    BYTE PTR [rax],al
   14002ceec:	adc    al,0x0
   14002ceee:	and    BYTE PTR [rax],ah
   14002cef0:	adc    BYTE PTR [rax],al
   14002cef2:	add    DWORD PTR [rax],eax
   14002cef4:	add    al,0x0
   14002cef6:	call   0x15502cefd
   14002cefb:	add    BYTE PTR [rax],ah
   14002cefd:	and    BYTE PTR [rax],al
   14002ceff:	add    BYTE PTR [rcx],al
   14002cf01:	add    BYTE PTR [rax],cl
   14002cf03:	add    BYTE PTR [rax+0x16000008],ch
   14002cf09:	add    BYTE PTR [rax],dh
   14002cf0b:	xor    BYTE PTR [rax],dl
   14002cf0d:	add    BYTE PTR [rcx],al
   14002cf0f:	add    BYTE PTR [rax+rax*1],al
   14002cf12:	push   0x17000006
   14002cf17:	add    BYTE PTR [rax],dh
   14002cf19:	xor    BYTE PTR [rax],al
   14002cf1b:	add    BYTE PTR [rcx],al
   14002cf1d:	add    BYTE PTR [rax],cl
   14002cf1f:	add    BYTE PTR [rax+0x1800000e],ch
   14002cf25:	add    BYTE PTR [rax],dl
   14002cf27:	adc    BYTE PTR [rax],al
   14002cf29:	add    BYTE PTR [rcx],al
   14002cf2b:	add    BYTE PTR [rax],ah
   14002cf2d:	add    BYTE PTR [rax+0x4],ch
   14002cf30:	add    BYTE PTR [rax],al
   14002cf32:	sbb    DWORD PTR [rax],eax
   14002cf34:	sbb    BYTE PTR [rax],bl
   14002cf36:	add    BYTE PTR [rax],al
   14002cf38:	add    DWORD PTR [rax],eax
   14002cf3a:	and    BYTE PTR [rax],al
   14002cf3c:	mov    BYTE PTR [rcx],cl
   14002cf3e:	add    BYTE PTR [rax],al
   14002cf40:	sbb    al,BYTE PTR [rax]
   14002cf42:	and    BYTE PTR [rax],ah
   14002cf44:	add    BYTE PTR [rax],al
   14002cf46:	add    DWORD PTR [rax],eax
   14002cf48:	and    BYTE PTR [rax],al
   14002cf4a:	test   al,0x10
   14002cf4c:	add    BYTE PTR [rax],al
   14002cf4e:	sbb    eax,DWORD PTR [rax]
   14002cf50:	xor    BYTE PTR [rax],dh
   14002cf52:	add    BYTE PTR [rax],al
   14002cf54:	add    DWORD PTR [rax],eax
   14002cf56:	and    BYTE PTR [rax],al
   14002cf58:	test   al,0x25
   14002cf5a:	add    BYTE PTR [rax],al
   14002cf5c:	sbb    al,0x0
   14002cf5e:	add    BYTE PTR [rax],al
   14002cf60:	add    BYTE PTR [rax],al
   14002cf62:	add    DWORD PTR [rax],eax
   14002cf64:	and    BYTE PTR [rax],al
   14002cf66:	cli    
   14002cf67:	imul   eax,DWORD PTR [rax],0x0
   14002cf6a:	sbb    eax,0x0
   14002cf6f:	add    bh,ch
   14002cf71:	mov    ebx,0x783f3cbf
   14002cf76:	ins    DWORD PTR es:[rdi],dx
   14002cf77:	ins    BYTE PTR es:[rdi],dx
   14002cf78:	and    BYTE PTR [rsi+0x65],dh
   14002cf7b:	jb     0x14002cff0
   14002cf7d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
   14002cf84:	xor    BYTE PTR [rdi],ah
   14002cf86:	and    BYTE PTR [rbp+0x6e],ah
   14002cf89:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002cf8c:	imul   ebp,DWORD PTR [rsi+0x67],0x7475273d
   14002cf93:	sub    ax,0x2738
   14002cf97:	and    BYTE PTR [rbx+0x74],dh
   14002cf9a:	(bad)  
   14002cf9b:	outs   dx,BYTE PTR ds:[rsi]
   14002cf9c:	fs (bad) 
   14002cf9e:	ins    BYTE PTR es:[rdi],dx
   14002cf9f:	outs   dx,DWORD PTR ds:[rsi]
   14002cfa0:	outs   dx,BYTE PTR ds:[rsi]
   14002cfa1:	gs cmp eax,0x73657927
   14002cfa7:	(bad)  
   14002cfa8:	(bad)  
   14002cfa9:	ds or  eax,0x73613c0a
   14002cfaf:	jae    0x14002d016
   14002cfb1:	ins    DWORD PTR es:[rdi],dx
   14002cfb2:	(bad)  
   14002cfb3:	ins    BYTE PTR es:[rdi],dx
   14002cfb4:	jns    0x14002cfc3
   14002cfb6:	or     ah,BYTE PTR [rax]
   14002cfb8:	and    BYTE PTR [rax],ah
   14002cfba:	and    BYTE PTR [rax+0x6d],bh
   14002cfbd:	ins    BYTE PTR es:[rdi],dx
   14002cfbe:	outs   dx,BYTE PTR ds:[rsi]
   14002cfbf:	jae    0x14002cffe
   14002cfc1:	and    dh,BYTE PTR [rbp+0x72]
   14002cfc4:	outs   dx,BYTE PTR ds:[rsi]
   14002cfc5:	cmp    dh,BYTE PTR [rbx+0x63]
   14002cfc8:	push   0x73616d65
   14002cfcd:	sub    eax,0x7263696d
   14002cfd2:	outs   dx,DWORD PTR ds:[rsi]
   14002cfd3:	jae    0x14002d044
   14002cfd5:	data16 je 0x14002d005
   14002cfd8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002cfdb:	cmp    ah,BYTE PTR [rcx+0x73]
   14002cfde:	ins    DWORD PTR es:[rdi],dx
   14002cfdf:	cs jbe 0x14002d013
   14002cfe2:	and    ah,BYTE PTR [rax]
   14002cfe4:	or     eax,0x2020200a
   14002cfe9:	and    BYTE PTR [rax+0x6d],bh
   14002cfec:	ins    BYTE PTR es:[rdi],dx
   14002cfed:	outs   dx,BYTE PTR ds:[rsi]
   14002cfee:	jae    0x14002d02a
   14002cff0:	(bad)  
   14002cff1:	jae    0x14002d060
   14002cff3:	jbe    0x14002d028
   14002cff5:	cmp    eax,0x6e727522
   14002cffa:	cmp    dh,BYTE PTR [rbx+0x63]
   14002cffd:	push   0x73616d65
   14002d002:	sub    eax,0x7263696d
   14002d007:	outs   dx,DWORD PTR ds:[rsi]
   14002d008:	jae    0x14002d079
   14002d00a:	data16 je 0x14002d03a
   14002d00d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002d010:	cmp    ah,BYTE PTR [rcx+0x73]
   14002d013:	ins    DWORD PTR es:[rdi],dx
   14002d014:	cs jbe 0x14002d04a
   14002d017:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16022f027
   14002d01d:	and    BYTE PTR [rbp+0x61],ch
   14002d020:	outs   dx,BYTE PTR ds:[rsi]
   14002d021:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14002d028:	jb     0x14002d09d
   14002d02a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14002d031:	xor    BYTE PTR [rdx],ah
   14002d033:	ds or  eax,0x3c20200a
   14002d039:	(bad)  
   14002d03a:	jae    0x14002d0af
   14002d03c:	gs ins DWORD PTR es:[rdi],dx
   14002d03e:	(bad)  
   14002d03f:	ins    BYTE PTR es:[rdi],dx
   14002d040:	jns    0x14002d08b
   14002d042:	fs outs dx,BYTE PTR gs:[rsi]
   14002d045:	je     0x14002d0b0
   14002d047:	je     0x14002d0c2
   14002d049:	or     eax,0x2020200a
   14002d04e:	and    BYTE PTR [rax],ah
   14002d050:	and    BYTE PTR [rsi+0x61],ch
   14002d053:	ins    DWORD PTR es:[rdi],dx
   14002d054:	gs cmp eax,0x63694d22
   14002d05a:	jb     0x14002d0cb
   14002d05c:	jae    0x14002d0cd
   14002d05e:	data16 je 0x14002d08f
   14002d061:	push   rdi
   14002d062:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14002d069:	push   rdi
   14002d06a:	rex.WRB jo 0x14002d0d9
   14002d06d:	(bad)  
   14002d06e:	jns    0x14002d0d5
   14002d070:	jb     0x14002d094
   14002d072:	or     eax,0x2020200a
   14002d077:	and    BYTE PTR [rax],ah
   14002d079:	and    BYTE PTR [rax+0x72],dh
   14002d07c:	outs   dx,DWORD PTR ds:[rsi]
   14002d07d:	movsxd esp,DWORD PTR [rbp+0x73]
   14002d080:	jae    0x14002d0f1
   14002d082:	jb     0x14002d0c5
   14002d084:	jb     0x14002d0e9
   14002d086:	push   0x63657469
   14002d08b:	je     0x14002d102
   14002d08d:	jb     0x14002d0f4
   14002d08f:	cmp    eax,0xd222a22
   14002d094:	or     ah,BYTE PTR [rax]
   14002d096:	and    BYTE PTR [rax],ah
   14002d098:	and    BYTE PTR [rax],ah
   14002d09a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14002d09e:	gs cmp eax,0x6e697722
   14002d0a4:	xor    esi,DWORD PTR [rdx]
   14002d0a6:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16022f0b6
   14002d0ac:	and    BYTE PTR [rax],ah
   14002d0ae:	and    BYTE PTR [rsi+0x65],dh
   14002d0b1:	jb     0x14002d126
   14002d0b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e38223d
   14002d0ba:	xor    BYTE PTR [rsi],ch
   14002d0bc:	xor    BYTE PTR [rsi],ch
   14002d0be:	xor    BYTE PTR [rdx],ah
   14002d0c0:	or     eax,0x2020200a
   14002d0c5:	and    BYTE PTR [rax],ah
   14002d0c7:	and    BYTE PTR [rdi],ch
   14002d0c9:	ds or  eax,0x3c20200a
   14002d0cf:	fs gs jae 0x14002d136
   14002d0d3:	jb     0x14002d13e
   14002d0d5:	jo     0x14002d14b
   14002d0d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   14002d0de:	outs   dx,DWORD PTR fs:[rsi]
   14002d0e0:	ja     0x14002d155
   14002d0e2:	and    BYTE PTR [rbp+0x65],cl
   14002d0e5:	imul   esp,DWORD PTR fs:[rcx+0x20],0x79616c50
   14002d0ed:	gs jb  0x14002d12c
   14002d0f0:	(bad)  
   14002d0f1:	fs gs jae 0x14002d158
   14002d0f5:	jb     0x14002d160
   14002d0f7:	jo     0x14002d16d
   14002d0f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14002d100:	and    BYTE PTR [rsp+riz*2],bh
   14002d103:	gs jo  0x14002d16b
   14002d106:	outs   dx,BYTE PTR ds:[rsi]
   14002d107:	fs outs dx,BYTE PTR gs:[rsi]
   14002d10a:	movsxd edi,DWORD PTR [rcx+0x3e]
   14002d10d:	or     eax,0x2020200a
   14002d112:	and    BYTE PTR [rsp+riz*2],bh
   14002d115:	gs jo  0x14002d17d
   14002d118:	outs   dx,BYTE PTR ds:[rsi]
   14002d119:	fs outs dx,BYTE PTR gs:[rsi]
   14002d11c:	je     0x14002d15f
   14002d11e:	jae    0x14002d193
   14002d120:	gs ins DWORD PTR es:[rdi],dx
   14002d122:	(bad)  
   14002d123:	ins    BYTE PTR es:[rdi],dx
   14002d124:	jns    0x14002d164
   14002d126:	or     eax,0x2020200a
   14002d12b:	and    BYTE PTR [rax],ah
   14002d12d:	and    BYTE PTR [rcx+riz*2],bh
   14002d130:	jae    0x14002d1a5
   14002d132:	gs ins DWORD PTR es:[rdi],dx
   14002d134:	(bad)  
   14002d135:	ins    BYTE PTR es:[rdi],dx
   14002d136:	jns    0x14002d181
   14002d138:	fs outs dx,BYTE PTR gs:[rsi]
   14002d13b:	je     0x14002d1a6
   14002d13d:	je     0x14002d1b8
   14002d13f:	or     eax,0x2020200a
   14002d144:	and    BYTE PTR [rax],ah
   14002d146:	and    BYTE PTR [rax],ah
   14002d148:	and    BYTE PTR [rax],ah
   14002d14a:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14002d14e:	addr32 jne 0x14002d1b2
   14002d151:	addr32 gs cmp eax,0xd222a22
   14002d158:	or     ah,BYTE PTR [rax]
   14002d15a:	and    BYTE PTR [rax],ah
   14002d15c:	and    BYTE PTR [rax],ah
   14002d15e:	and    BYTE PTR [rax],ah
   14002d160:	and    BYTE PTR [rax],ah
   14002d162:	and    BYTE PTR [rsi+0x61],ch
   14002d165:	ins    DWORD PTR es:[rdi],dx
   14002d166:	gs cmp eax,0x63694d22
   14002d16c:	jb     0x14002d1dd
   14002d16e:	jae    0x14002d1df
   14002d170:	data16 je 0x14002d1a1
   14002d173:	push   rdi
   14002d174:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14002d17b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002d17d:	ins    DWORD PTR es:[rdi],dx
   14002d17e:	ins    DWORD PTR es:[rdi],dx
   14002d17f:	outs   dx,DWORD PTR ds:[rsi]
   14002d180:	outs   dx,BYTE PTR ds:[rsi]
   14002d181:	sub    eax,0x746e6f43
   14002d186:	jb     0x14002d1f7
   14002d188:	ins    BYTE PTR es:[rdi],dx
   14002d189:	jae    0x14002d1ad
   14002d18b:	or     eax,0x2020200a
   14002d190:	and    BYTE PTR [rax],ah
   14002d192:	and    BYTE PTR [rax],ah
   14002d194:	and    BYTE PTR [rax],ah
   14002d196:	and    BYTE PTR [rax+0x72],dh
   14002d199:	outs   dx,DWORD PTR ds:[rsi]
   14002d19a:	movsxd esp,DWORD PTR [rbp+0x73]
   14002d19d:	jae    0x14002d20e
   14002d19f:	jb     0x14002d1e2
   14002d1a1:	jb     0x14002d206
   14002d1a3:	push   0x63657469
   14002d1a8:	je     0x14002d21f
   14002d1aa:	jb     0x14002d211
   14002d1ac:	cmp    eax,0xd222a22
   14002d1b1:	or     ah,BYTE PTR [rax]
   14002d1b3:	and    BYTE PTR [rax],ah
   14002d1b5:	and    BYTE PTR [rax],ah
   14002d1b7:	and    BYTE PTR [rax],ah
   14002d1b9:	and    BYTE PTR [rax],ah
   14002d1bb:	and    BYTE PTR [rax+0x75],dh
   14002d1be:	(bad)  
   14002d1bf:	ins    BYTE PTR es:[rdi],dx
   14002d1c0:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14002d1c7:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14002d1cb:	and    dh,BYTE PTR [rsi]
   14002d1cd:	xor    eax,0x36623539
   14002d1d2:	xor    al,0x31
   14002d1d4:	xor    al,0x34
   14002d1d6:	movsxd esp,DWORD PTR [rbx+0x66]
   14002d1d9:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14002d1dd:	or     eax,0x2020200a
   14002d1e2:	and    BYTE PTR [rax],ah
   14002d1e4:	and    BYTE PTR [rax],ah
   14002d1e6:	and    BYTE PTR [rax],ah
   14002d1e8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14002d1ec:	gs cmp eax,0x6e697722
   14002d1f2:	xor    esi,DWORD PTR [rdx]
   14002d1f4:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16022f204
   14002d1fa:	and    BYTE PTR [rax],ah
   14002d1fc:	and    BYTE PTR [rax],ah
   14002d1fe:	and    BYTE PTR [rax],ah
   14002d200:	and    BYTE PTR [rsi+0x65],dh
   14002d203:	jb     0x14002d278
   14002d205:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14002d20c:	xor    BYTE PTR [rsi],ch
   14002d20e:	xor    BYTE PTR [rsi],ch
   14002d210:	xor    BYTE PTR [rdx],ah
   14002d212:	or     eax,0x2020200a
   14002d217:	and    BYTE PTR [rax],ah
   14002d219:	and    BYTE PTR [rax],ah
   14002d21b:	and    BYTE PTR [rax],ah
   14002d21d:	and    BYTE PTR [rdi],ch
   14002d21f:	ds or  eax,0x2020200a
   14002d225:	and    BYTE PTR [rdi+rbp*1],bh
   14002d228:	fs gs jo 0x14002d291
   14002d22c:	outs   dx,BYTE PTR ds:[rsi]
   14002d22d:	fs outs dx,BYTE PTR gs:[rsi]
   14002d230:	je     0x14002d273
   14002d232:	jae    0x14002d2a7
   14002d234:	gs ins DWORD PTR es:[rdi],dx
   14002d236:	(bad)  
   14002d237:	ins    BYTE PTR es:[rdi],dx
   14002d238:	jns    0x14002d278
   14002d23a:	or     eax,0x3c20200a
   14002d23f:	(bad)  
   14002d240:	fs gs jo 0x14002d2a9
   14002d244:	outs   dx,BYTE PTR ds:[rsi]
   14002d245:	fs outs dx,BYTE PTR gs:[rsi]
   14002d248:	movsxd edi,DWORD PTR [rcx+0x3e]
   14002d24b:	or     eax,0x3c20200a
   14002d250:	(bad)  
   14002d251:	jae    0x14002d2c0
   14002d253:	jbe    0x14002d288
   14002d255:	cmp    ah,BYTE PTR [rcx+0x70]
   14002d258:	jo     0x14002d2c6
   14002d25a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002d261:	ds or  eax,0x2020200a
   14002d267:	and    BYTE PTR [rcx+riz*2],bh
   14002d26a:	jae    0x14002d2d9
   14002d26c:	jbe    0x14002d2a1
   14002d26e:	cmp    dh,BYTE PTR [rdi+0x69]
   14002d271:	outs   dx,BYTE PTR ds:[rsi]
   14002d272:	outs   dx,DWORD PTR fs:[rsi]
   14002d274:	ja     0x14002d2e9
   14002d276:	push   rbx
   14002d277:	gs je  0x14002d2ee
   14002d27a:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14002d281:	ins    BYTE PTR es:[rdi],dx
   14002d282:	outs   dx,BYTE PTR ds:[rsi]
   14002d283:	jae    0x14002d2c2
   14002d285:	and    ch,BYTE PTR [rax+0x74]
   14002d288:	je     0x14002d2fa
   14002d28a:	cmp    ch,BYTE PTR [rdi]
   14002d28c:	(bad)  
   14002d28d:	jae    0x14002d2f2
   14002d28f:	push   0x73616d65
   14002d294:	cs ins DWORD PTR es:[rdi],dx
   14002d296:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14002d29d:	je     0x14002d2cd
   14002d29f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002d2a2:	(bad)  
   14002d2a3:	push   rbx
   14002d2a4:	rex.WRB
   14002d2a5:	rex.WB (bad) 
   14002d2a7:	xor    dh,BYTE PTR [rax]
   14002d2a9:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6c29de
   14002d2af:	outs   dx,DWORD PTR fs:[rsi]
   14002d2b1:	ja     0x14002d326
   14002d2b3:	push   rbx
   14002d2b4:	gs je  0x14002d32b
   14002d2b7:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   14002d2be:	or     ah,BYTE PTR [rax]
   14002d2c0:	and    BYTE PTR [rax],ah
   14002d2c2:	and    BYTE PTR [rax],ah
   14002d2c4:	and    BYTE PTR [rsp+riz*2],bh
   14002d2c7:	jo     0x14002d332
   14002d2c9:	rex.B ja 0x14002d32d
   14002d2cc:	jb     0x14002d333
   14002d2ce:	ds je  0x14002d343
   14002d2d1:	jne    0x14002d338
   14002d2d3:	cmp    al,0x2f
   14002d2d5:	fs jo  0x14002d341
   14002d2d8:	rex.B ja 0x14002d33c
   14002d2db:	jb     0x14002d342
   14002d2dd:	ds or  eax,0x2020200a
   14002d2e3:	and    BYTE PTR [rax],ah
   14002d2e5:	and    BYTE PTR [rsp+riz*2],bh
   14002d2e8:	imul   esi,DWORD PTR [rbx+0x61],0x57656c62
   14002d2ef:	imul   ebp,DWORD PTR [rsi+0x64],0x6946776f
   14002d2f6:	ins    BYTE PTR es:[rdi],dx
   14002d2f7:	je     0x14002d35e
   14002d2f9:	jb     0x14002d364
   14002d2fb:	outs   dx,BYTE PTR ds:[rsi]
   14002d2fc:	and    BYTE PTR [eax+0x6d],bh
   14002d300:	ins    BYTE PTR es:[rdi],dx
   14002d301:	outs   dx,BYTE PTR ds:[rsi]
   14002d302:	jae    0x14002d341
   14002d304:	and    ch,BYTE PTR [rax+0x74]
   14002d307:	je     0x14002d379
   14002d309:	cmp    ch,BYTE PTR [rdi]
   14002d30b:	(bad)  
   14002d30c:	jae    0x14002d371
   14002d30e:	push   0x73616d65
   14002d313:	cs ins DWORD PTR es:[rdi],dx
   14002d315:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14002d31c:	je     0x14002d34c
   14002d31e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002d321:	(bad)  
   14002d322:	push   rbx
   14002d323:	rex.WRB
   14002d324:	rex.WB (bad) 
   14002d326:	xor    dh,BYTE PTR [rax]
   14002d328:	xor    DWORD PTR [rcx],esi
   14002d32a:	(bad)  
   14002d32b:	push   rdi
   14002d32c:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14002d333:	gs je  0x14002d3aa
   14002d336:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14002d33d:	jb     0x14002d3b4
   14002d33f:	gs cmp al,0x2f
   14002d342:	imul   esi,DWORD PTR fs:[rbx+0x61],0x57656c62
   14002d34a:	imul   ebp,DWORD PTR [rsi+0x64],0x6946776f
   14002d351:	ins    BYTE PTR es:[rdi],dx
   14002d352:	je     0x14002d3b9
   14002d354:	jb     0x14002d3bf
   14002d356:	outs   dx,BYTE PTR ds:[rsi]
   14002d357:	addr32 ds or eax,0x2020200a
   14002d35e:	and    BYTE PTR [rdi+rbp*1],bh
   14002d361:	(bad)  
   14002d362:	jae    0x14002d3d1
   14002d364:	jbe    0x14002d399
   14002d366:	cmp    dh,BYTE PTR [rdi+0x69]
   14002d369:	outs   dx,BYTE PTR ds:[rsi]
   14002d36a:	outs   dx,DWORD PTR fs:[rsi]
   14002d36c:	ja     0x14002d3e1
   14002d36e:	push   rbx
   14002d36f:	gs je  0x14002d3e6
   14002d372:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14002d379:	and    BYTE PTR [rax],ah
   14002d37b:	cmp    al,0x2f
   14002d37d:	(bad)  
   14002d37e:	jae    0x14002d3ed
   14002d380:	jbe    0x14002d3b5
   14002d382:	cmp    ah,BYTE PTR [rcx+0x70]
   14002d385:	jo     0x14002d3f3
   14002d387:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002d38e:	ds or  eax,0x3c20200a
   14002d394:	je     0x14002d408
   14002d396:	jne    0x14002d40b
   14002d398:	je     0x14002d3e3
   14002d39a:	outs   dx,BYTE PTR ds:[rsi]
   14002d39b:	outs   dx,WORD PTR ds:[rsi]
   14002d39d:	and    BYTE PTR [rax+0x6d],bh
   14002d3a0:	ins    BYTE PTR es:[rdi],dx
   14002d3a1:	outs   dx,BYTE PTR ds:[rsi]
   14002d3a2:	jae    0x14002d3e1
   14002d3a4:	and    dh,BYTE PTR [rbp+0x72]
   14002d3a7:	outs   dx,BYTE PTR ds:[rsi]
   14002d3a8:	cmp    dh,BYTE PTR [rbx+0x63]
   14002d3ab:	push   0x73616d65
   14002d3b0:	sub    eax,0x7263696d
   14002d3b5:	outs   dx,DWORD PTR ds:[rsi]
   14002d3b6:	jae    0x14002d427
   14002d3b8:	data16 je 0x14002d3e8
   14002d3bb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002d3be:	cmp    ah,BYTE PTR [rcx+0x73]
   14002d3c1:	ins    DWORD PTR es:[rdi],dx
   14002d3c2:	cs jbe 0x14002d3f8
   14002d3c5:	and    bh,BYTE PTR [rsi]
   14002d3c7:	or     eax,0x2020200a
   14002d3cc:	and    BYTE PTR [rbx+rsi*2],bh
   14002d3cf:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14002d3d3:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14002d3db:	and    BYTE PTR [rax],ah
   14002d3dd:	and    BYTE PTR [rax],ah
   14002d3df:	cmp    al,0x72
   14002d3e1:	gs jno 0x14002d459
   14002d3e4:	gs jae 0x14002d45b
   14002d3e7:	gs fs push rax
   14002d3ea:	jb     0x14002d455
   14002d3ec:	jbe    0x14002d457
   14002d3ee:	ins    BYTE PTR es:[rdi],dx
   14002d3ef:	gs addr32 gs jae 0x14002d432
   14002d3f4:	or     eax,0x2020200a
   14002d3f9:	and    BYTE PTR [rax],ah
   14002d3fb:	and    BYTE PTR [rax],ah
   14002d3fd:	and    BYTE PTR [rdx+rsi*2],bh
   14002d400:	gs jno 0x14002d478
   14002d403:	gs jae 0x14002d47a
   14002d406:	gs fs rex.RB js 0x14002d470
   14002d40b:	movsxd esi,DWORD PTR [rbp+0x74]
   14002d40e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14002d415:	ins    BYTE PTR es:[rdi],dx
   14002d416:	or     eax,0x2020200a
   14002d41b:	and    BYTE PTR [rax],ah
   14002d41d:	and    BYTE PTR [rax],ah
   14002d41f:	and    BYTE PTR [rax],ah
   14002d421:	and    BYTE PTR [rax],ah
   14002d423:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14002d427:	gs ins BYTE PTR es:[rdi],dx
   14002d429:	cmp    eax,0x49736122
   14002d42e:	outs   dx,BYTE PTR ds:[rsi]
   14002d42f:	jbe    0x14002d4a0
   14002d431:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14002d435:	or     eax,0x2020200a
   14002d43a:	and    BYTE PTR [rax],ah
   14002d43c:	and    BYTE PTR [rax],ah
   14002d43e:	and    BYTE PTR [rax],ah
   14002d440:	and    BYTE PTR [rax],ah
   14002d442:	and    BYTE PTR [rbp+0x69],dh
   14002d445:	movsxd esp,DWORD PTR [r11+0x65]
   14002d449:	jae    0x14002d4be
   14002d44b:	cmp    eax,0x6c616622
   14002d450:	jae    0x14002d4b7
   14002d452:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16022f462
   14002d458:	and    BYTE PTR [rax],ah
   14002d45a:	and    BYTE PTR [rax],ah
   14002d45c:	and    BYTE PTR [rax],ah
   14002d45e:	and    BYTE PTR [rax],ah
   14002d460:	and    BYTE PTR [rdi],ch
   14002d462:	ds or  eax,0x2020200a
   14002d468:	and    BYTE PTR [rax],ah
   14002d46a:	and    BYTE PTR [rdi+rbp*1],bh
   14002d46d:	jb     0x14002d4d4
   14002d46f:	jno    0x14002d4e6
   14002d471:	gs jae 0x14002d4e8
   14002d474:	gs fs push rax
   14002d477:	jb     0x14002d4e2
   14002d479:	jbe    0x14002d4e4
   14002d47b:	ins    BYTE PTR es:[rdi],dx
   14002d47c:	gs addr32 gs jae 0x14002d4bf
   14002d481:	or     eax,0x2020200a
   14002d486:	and    BYTE PTR [rdi+rbp*1],bh
   14002d489:	jae    0x14002d4f0
   14002d48b:	movsxd esi,DWORD PTR [rbp+0x72]
   14002d48e:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14002d496:	cmp    al,0x2f
   14002d498:	je     0x14002d50c
   14002d49a:	jne    0x14002d50f
   14002d49c:	je     0x14002d4e7
   14002d49e:	outs   dx,BYTE PTR ds:[rsi]
   14002d49f:	outs   dx,WORD PTR ds:[rsi]
   14002d4a1:	ds or  eax,0x612f3c0a
   14002d4a7:	jae    0x14002d51c
   14002d4a9:	gs ins DWORD PTR es:[rdi],dx
   14002d4ab:	(bad)  
   14002d4ac:	ins    BYTE PTR es:[rdi],dx
   14002d4ad:	jns    0x14002d4ed
   14002d4af:	or     eax,0xa
   14002d4b4:	add    BYTE PTR [rax],al
   14002d4b6:	add    BYTE PTR [rax],al
   14002d4b8:	cwde   
   14002d4b9:	add    esi,DWORD PTR [rax+rax*1]
   14002d4bc:	add    BYTE PTR [rax],al
   14002d4be:	push   rsi
   14002d4bf:	add    BYTE PTR [rbx+0x0],dl
   14002d4c2:	pop    rdi
   14002d4c3:	add    BYTE PTR [rsi+0x0],dl
   14002d4c6:	add    BYTE PTR [r10+0x0],r10b
   14002d4ca:	push   rbx
   14002d4cb:	add    BYTE PTR [rcx+0x0],cl
   14002d4ce:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14002d4d2:	pop    rdi
   14002d4d3:	add    BYTE PTR [rcx+0x0],cl
   14002d4d6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14002d4da:	rex.WRXB add BYTE PTR [r8],r8b
   14002d4dd:	add    BYTE PTR [rax],al
   14002d4df:	add    BYTE PTR [rbp+0xfeef04],bh
   14002d4e5:	add    BYTE PTR [rcx],al
   14002d4e7:	add    BYTE PTR [rax],al
   14002d4e9:	add    BYTE PTR [rax+rax*1],cl
   14002d4ec:	add    BYTE PTR [rax+0x0],al
   14002d4ef:	sub    BYTE PTR [rax],al
   14002d4f1:	add    BYTE PTR [rax+rax*1],cl
   14002d4f4:	add    BYTE PTR [rax+0x0],al
   14002d4f7:	sub    BYTE PTR [rdi],bh
   14002d4f9:	add    BYTE PTR [rax],al
   14002d4fb:	add    BYTE PTR [rax],al
   14002d4fd:	add    BYTE PTR [rax],al
   14002d4ff:	add    BYTE PTR [rax+rax*1],al
   14002d502:	add    al,0x0
   14002d504:	add    DWORD PTR [rax],eax
	...
   14002d512:	add    BYTE PTR [rax],al
   14002d514:	test   BYTE PTR [rdx],0x0
   14002d517:	add    BYTE PTR [rcx],al
   14002d519:	add    BYTE PTR [rbx+0x0],dl
   14002d51c:	je     0x14002d51e
   14002d51e:	jb     0x14002d520
   14002d520:	imul   eax,DWORD PTR [rax],0x67006e
   14002d526:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14002d52a:	ins    BYTE PTR es:[rdi],dx
   14002d52b:	add    BYTE PTR [rbp+0x0],ah
   14002d52e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002d532:	data16 add BYTE PTR [rdi+0x0],ch
   14002d536:	add    BYTE PTR [rax],al
   14002d538:	rol    BYTE PTR [rdx],cl
   14002d53a:	add    BYTE PTR [rax],al
   14002d53c:	add    DWORD PTR [rax],eax
   14002d53e:	xor    BYTE PTR [rax],al
   14002d540:	xor    al,0x0
   14002d542:	xor    BYTE PTR [rax],al
   14002d544:	cmp    DWORD PTR [rax],eax
   14002d546:	xor    BYTE PTR [rax],al
   14002d548:	xor    al,0x0
   14002d54a:	rex.X add BYTE PTR [rax],sil
   14002d54d:	add    BYTE PTR [rax],al
   14002d54f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14002d553:	add    BYTE PTR [rcx],al
   14002d555:	add    BYTE PTR [rbx+0x0],al
   14002d558:	outs   dx,DWORD PTR ds:[rsi]
   14002d559:	add    BYTE PTR [rbp+0x0],ch
   14002d55c:	jo     0x14002d55e
   14002d55e:	(bad)  
   14002d55f:	add    BYTE PTR [rsi+0x0],ch
   14002d562:	jns    0x14002d564
   14002d564:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14002d568:	ins    DWORD PTR es:[rdi],dx
   14002d569:	add    BYTE PTR [rbp+0x0],ah
   14002d56c:	add    BYTE PTR [rax],al
   14002d56e:	add    BYTE PTR [rax],al
   14002d570:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14002d574:	movsxd eax,DWORD PTR [rax]
   14002d576:	jb     0x14002d578
   14002d578:	outs   dx,DWORD PTR ds:[rsi]
   14002d579:	add    BYTE PTR [rbx+0x0],dh
   14002d57c:	outs   dx,DWORD PTR ds:[rsi]
   14002d57d:	add    BYTE PTR [rsi+0x0],ah
   14002d580:	je     0x14002d582
   14002d582:	and    BYTE PTR [rax],al
   14002d584:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002d588:	jb     0x14002d58a
   14002d58a:	jo     0x14002d58c
   14002d58c:	outs   dx,DWORD PTR ds:[rsi]
   14002d58d:	add    BYTE PTR [rdx+0x0],dh
   14002d590:	(bad)  
   14002d591:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002d595:	add    BYTE PTR [rdi+0x0],ch
   14002d598:	outs   dx,BYTE PTR ds:[rsi]
   14002d599:	add    BYTE PTR [rax],al
   14002d59b:	add    BYTE PTR [rdx+0x0],dl
   14002d59e:	adc    eax,0x46000100
   14002d5a3:	add    BYTE PTR [rcx+0x0],ch
   14002d5a6:	ins    BYTE PTR es:[rdi],dx
   14002d5a7:	add    BYTE PTR [rbp+0x0],ah
   14002d5aa:	add    BYTE PTR [rbp+0x0],r12b
   14002d5ae:	jae    0x14002d5b0
   14002d5b0:	movsxd eax,DWORD PTR [rax]
   14002d5b2:	jb     0x14002d5b4
   14002d5b4:	imul   eax,DWORD PTR [rax],0x740070
   14002d5ba:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d5c0:	add    BYTE PTR [rax],al
   14002d5c2:	add    BYTE PTR [rax],al
   14002d5c4:	push   rdi
   14002d5c5:	add    BYTE PTR [rcx+0x0],ch
   14002d5c8:	outs   dx,BYTE PTR ds:[rsi]
   14002d5c9:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002d5cd:	add    BYTE PTR [rdi+0x0],dh
   14002d5d0:	jae    0x14002d5d2
   14002d5d2:	and    BYTE PTR [rax],al
   14002d5d4:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002d5d8:	add    BYTE PTR fs:[rcx+0x0],ch
   14002d5dc:	(bad)  
   14002d5dd:	add    BYTE PTR [rax],ah
   14002d5df:	add    BYTE PTR [rax+0x0],dl
   14002d5e2:	ins    BYTE PTR es:[rdi],dx
   14002d5e3:	add    BYTE PTR [rcx+0x0],ah
   14002d5e6:	jns    0x14002d5e8
   14002d5e8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d5ec:	add    BYTE PTR [rax],al
   14002d5ee:	add    BYTE PTR [rax],al
   14002d5f0:	data16 add BYTE PTR [rbx],ah
   14002d5f3:	add    BYTE PTR [rcx],al
   14002d5f5:	add    BYTE PTR [rsi+0x0],al
   14002d5f8:	imul   eax,DWORD PTR [rax],0x65006c
   14002d5fe:	push   rsi
   14002d5ff:	add    BYTE PTR [rbp+0x0],ah
   14002d602:	jb     0x14002d604
   14002d604:	jae    0x14002d606
   14002d606:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d60c:	add    BYTE PTR [rax],al
   14002d60e:	add    BYTE PTR [rax],al
   14002d610:	xor    DWORD PTR [rax],eax
   14002d612:	xor    al,BYTE PTR [rax]
   14002d614:	add    BYTE PTR cs:[rax],dh
   14002d617:	add    BYTE PTR [rsi],ch
   14002d619:	add    BYTE PTR [rcx],dh
   14002d61b:	add    BYTE PTR [rax],dh
   14002d61d:	add    BYTE PTR [rdx],dh
   14002d61f:	add    BYTE PTR [rax+rax*1],dh
   14002d622:	xor    BYTE PTR [rax],al
   14002d624:	add    BYTE PTR cs:[rcx],dh
   14002d627:	add    BYTE PTR [rsi],dh
   14002d629:	add    BYTE PTR [rbx],dh
   14002d62b:	add    BYTE PTR [rax],bh
   14002d62d:	add    BYTE PTR [rax+rax*1],dh
   14002d630:	and    BYTE PTR [rax],al
   14002d632:	sub    BYTE PTR [rax],al
   14002d634:	je     0x14002d636
   14002d636:	push   0x2e003100
   14002d63b:	add    BYTE PTR [rcx],dh
   14002d63d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177030643
   14002d643:	add    BYTE PTR [rax],dh
   14002d645:	add    BYTE PTR [rcx],bh
   14002d647:	add    BYTE PTR [rip+0x37003100],ch        # 0x17703074d
   14002d64d:	add    BYTE PTR [rax],dh
   14002d64f:	add    BYTE PTR [rax],dh
   14002d651:	add    BYTE PTR [rcx],ch
   14002d653:	add    BYTE PTR [rax],al
   14002d655:	add    BYTE PTR [rax],al
   14002d657:	add    BYTE PTR [rdx],bh
   14002d659:	add    BYTE PTR [rip+0x49000100],cl        # 0x18902d75f
   14002d65f:	add    BYTE PTR [rsi+0x0],ch
   14002d662:	je     0x14002d664
   14002d664:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d668:	outs   dx,BYTE PTR ds:[rsi]
   14002d669:	add    BYTE PTR [rcx+0x0],ah
   14002d66c:	ins    BYTE PTR es:[rdi],dx
   14002d66d:	add    BYTE PTR [rsi+0x0],cl
   14002d670:	(bad)  
   14002d671:	add    BYTE PTR [rbp+0x0],ch
   14002d674:	add    BYTE PTR gs:[rax],al
   14002d677:	add    BYTE PTR [rdi+0x0],dh
   14002d67a:	ins    DWORD PTR es:[rdi],dx
   14002d67b:	add    BYTE PTR [rax+0x0],dh
   14002d67e:	ins    BYTE PTR es:[rdi],dx
   14002d67f:	add    BYTE PTR [rcx+0x0],ah
   14002d682:	jns    0x14002d684
   14002d684:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d688:	add    BYTE PTR cs:[rbp+0x0],ah
   14002d68c:	js     0x14002d68e
   14002d68e:	add    BYTE PTR gs:[rax],al
   14002d691:	add    BYTE PTR [rax],al
   14002d693:	add    BYTE PTR [rax+0x1002e00],al
   14002d699:	add    BYTE PTR [rax+rax*1+0x65],cl
   14002d69d:	add    BYTE PTR [rdi+0x0],ah
   14002d6a0:	(bad)  
   14002d6a1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14002d6a5:	add    BYTE PTR [rdi+0x0],ch
   14002d6a8:	jo     0x14002d6aa
   14002d6aa:	jns    0x14002d6ac
   14002d6ac:	jb     0x14002d6ae
   14002d6ae:	imul   eax,DWORD PTR [rax],0x680067
   14002d6b4:	je     0x14002d6b6
   14002d6b6:	add    BYTE PTR [rax],al
   14002d6b8:	test   eax,0x4d002000
   14002d6bd:	add    BYTE PTR [rcx+0x0],ch
   14002d6c0:	movsxd eax,DWORD PTR [rax]
   14002d6c2:	jb     0x14002d6c4
   14002d6c4:	outs   dx,DWORD PTR ds:[rsi]
   14002d6c5:	add    BYTE PTR [rbx+0x0],dh
   14002d6c8:	outs   dx,DWORD PTR ds:[rsi]
   14002d6c9:	add    BYTE PTR [rsi+0x0],ah
   14002d6cc:	je     0x14002d6ce
   14002d6ce:	and    BYTE PTR [rax],al
   14002d6d0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002d6d4:	jb     0x14002d6d6
   14002d6d6:	jo     0x14002d6d8
   14002d6d8:	outs   dx,DWORD PTR ds:[rsi]
   14002d6d9:	add    BYTE PTR [rdx+0x0],dh
   14002d6dc:	(bad)  
   14002d6dd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002d6e1:	add    BYTE PTR [rdi+0x0],ch
   14002d6e4:	outs   dx,BYTE PTR ds:[rsi]
   14002d6e5:	add    BYTE PTR [rsi],ch
   14002d6e7:	add    BYTE PTR [rax],ah
   14002d6e9:	add    BYTE PTR [rcx+0x0],al
   14002d6ec:	ins    BYTE PTR es:[rdi],dx
   14002d6ed:	add    BYTE PTR [rax+rax*1+0x20],ch
   14002d6f1:	add    BYTE PTR [rdx+0x0],dh
   14002d6f4:	imul   eax,DWORD PTR [rax],0x680067
   14002d6fa:	je     0x14002d6fc
   14002d6fc:	jae    0x14002d6fe
   14002d6fe:	and    BYTE PTR [rax],al
   14002d700:	jb     0x14002d702
   14002d702:	add    BYTE PTR gs:[rbx+0x0],dh
   14002d706:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d70a:	jbe    0x14002d70c
   14002d70c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14002d711:	add    BYTE PTR [rax],al
   14002d713:	add    BYTE PTR [rdx+0x0],al
   14002d716:	or     eax,0x4f000100
   14002d71b:	add    BYTE PTR [rdx+0x0],dh
   14002d71e:	imul   eax,DWORD PTR [rax],0x690067
   14002d724:	outs   dx,BYTE PTR ds:[rsi]
   14002d725:	add    BYTE PTR [rcx+0x0],ah
   14002d728:	ins    BYTE PTR es:[rdi],dx
   14002d729:	add    BYTE PTR [rsi+0x0],al
   14002d72c:	imul   eax,DWORD PTR [rax],0x65006c
   14002d732:	outs   dx,BYTE PTR ds:[rsi]
   14002d733:	add    BYTE PTR [rcx+0x0],ah
   14002d736:	ins    DWORD PTR es:[rdi],dx
   14002d737:	add    BYTE PTR [rbp+0x0],ah
   14002d73a:	add    BYTE PTR [rax],al
   14002d73c:	ja     0x14002d73e
   14002d73e:	ins    DWORD PTR es:[rdi],dx
   14002d73f:	add    BYTE PTR [rax+0x0],dh
   14002d742:	ins    BYTE PTR es:[rdi],dx
   14002d743:	add    BYTE PTR [rcx+0x0],ah
   14002d746:	jns    0x14002d748
   14002d748:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d74c:	add    BYTE PTR cs:[rbp+0x0],ah
   14002d750:	js     0x14002d752
   14002d752:	add    BYTE PTR gs:[rax],al
   14002d755:	add    BYTE PTR [rax],al
   14002d757:	add    BYTE PTR [rdx+0x0],ch
   14002d75a:	and    eax,0x50000100
   14002d75f:	add    BYTE PTR [rdx+0x0],dh
   14002d762:	outs   dx,DWORD PTR ds:[rsi]
   14002d763:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002d767:	add    BYTE PTR [rbx+0x0],ah
   14002d76a:	je     0x14002d76c
   14002d76c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14002d770:	ins    DWORD PTR es:[rdi],dx
   14002d771:	add    BYTE PTR [rbp+0x0],ah
   14002d774:	add    BYTE PTR [rax],al
   14002d776:	add    BYTE PTR [rax],al
   14002d778:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14002d77c:	movsxd eax,DWORD PTR [rax]
   14002d77e:	jb     0x14002d780
   14002d780:	outs   dx,DWORD PTR ds:[rsi]
   14002d781:	add    BYTE PTR [rbx+0x0],dh
   14002d784:	outs   dx,DWORD PTR ds:[rsi]
   14002d785:	add    BYTE PTR [rsi+0x0],ah
   14002d788:	je     0x14002d78a
   14002d78a:	scas   al,BYTE PTR es:[rdi]
   14002d78b:	add    BYTE PTR [rax],ah
   14002d78d:	add    BYTE PTR [rdi+0x0],dl
   14002d790:	imul   eax,DWORD PTR [rax],0x64006e
   14002d796:	outs   dx,DWORD PTR ds:[rsi]
   14002d797:	add    BYTE PTR [rdi+0x0],dh
   14002d79a:	jae    0x14002d79c
   14002d79c:	scas   al,BYTE PTR es:[rdi]
   14002d79d:	add    BYTE PTR [rax],ah
   14002d79f:	add    BYTE PTR [rdi+0x0],cl
   14002d7a2:	jo     0x14002d7a4
   14002d7a4:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d7a8:	(bad)  
   14002d7a9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002d7ad:	add    BYTE PTR [rsi+0x0],ch
   14002d7b0:	add    BYTE PTR [eax],ah
   14002d7b3:	add    BYTE PTR [rbx+0x0],dl
   14002d7b6:	jns    0x14002d7b8
   14002d7b8:	jae    0x14002d7ba
   14002d7ba:	je     0x14002d7bc
   14002d7bc:	add    BYTE PTR gs:[rbp+0x0],ch
   14002d7c0:	add    BYTE PTR [rax],al
   14002d7c2:	add    BYTE PTR [rax],al
   14002d7c4:	rex.RX add BYTE PTR [rcx],r10b
   14002d7c7:	add    BYTE PTR [rcx],al
   14002d7c9:	add    BYTE PTR [rax+0x0],dl
   14002d7cc:	jb     0x14002d7ce
   14002d7ce:	outs   dx,DWORD PTR ds:[rsi]
   14002d7cf:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002d7d3:	add    BYTE PTR [rbx+0x0],ah
   14002d7d6:	je     0x14002d7d8
   14002d7d8:	push   rsi
   14002d7d9:	add    BYTE PTR [rbp+0x0],ah
   14002d7dc:	jb     0x14002d7de
   14002d7de:	jae    0x14002d7e0
   14002d7e0:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d7e6:	add    BYTE PTR [rax],al
   14002d7e8:	xor    DWORD PTR [rax],eax
   14002d7ea:	xor    al,BYTE PTR [rax]
   14002d7ec:	add    BYTE PTR cs:[rax],dh
   14002d7ef:	add    BYTE PTR [rsi],ch
   14002d7f1:	add    BYTE PTR [rcx],dh
   14002d7f3:	add    BYTE PTR [rax],dh
   14002d7f5:	add    BYTE PTR [rdx],dh
   14002d7f7:	add    BYTE PTR [rax+rax*1],dh
   14002d7fa:	xor    BYTE PTR [rax],al
   14002d7fc:	add    BYTE PTR cs:[rcx],dh
   14002d7ff:	add    BYTE PTR [rsi],dh
   14002d801:	add    BYTE PTR [rbx],dh
   14002d803:	add    BYTE PTR [rax],bh
   14002d805:	add    BYTE PTR [rax+rax*1],dh
   14002d808:	add    BYTE PTR [rax],al
   14002d80a:	add    BYTE PTR [rax],al
   14002d80c:	add    BYTE PTR [rax],r8b
   14002d80f:	add    BYTE PTR [rcx],al
   14002d811:	add    BYTE PTR [rsi+0x0],dl
   14002d814:	(bad)  
   14002d815:	add    BYTE PTR [rdx+0x0],dh
   14002d818:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14002d81c:	ins    BYTE PTR es:[rdi],dx
   14002d81d:	add    BYTE PTR [rbp+0x0],ah
   14002d820:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002d824:	data16 add BYTE PTR [rdi+0x0],ch
   14002d828:	add    BYTE PTR [rax],al
   14002d82a:	add    BYTE PTR [rax],al
   14002d82c:	and    al,0x0
   14002d82e:	add    al,0x0
   14002d830:	add    BYTE PTR [rax],al
   14002d832:	push   rsp
   14002d833:	add    BYTE PTR [rdx+0x0],dh
   14002d836:	(bad)  
   14002d837:	add    BYTE PTR [rsi+0x0],ch
   14002d83a:	jae    0x14002d83c
   14002d83c:	ins    BYTE PTR es:[rdi],dx
   14002d83d:	add    BYTE PTR [rcx+0x0],ah
   14002d840:	je     0x14002d842
   14002d842:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d848:	add    BYTE PTR [rax],al
   14002d84a:	add    BYTE PTR [rax],al
   14002d84c:	or     DWORD PTR [rax+rsi*4],eax
   14002d84f:	add    al,0xcd
   14002d851:	dec    ch
   14002d853:	(bad)  
   14002d854:	fadd   DWORD PTR [rax]
   14002d856:	add    BYTE PTR [rax],al
   14002d858:	add    BYTE PTR [rax],al
   14002d85a:	add    DWORD PTR [rax],eax
   14002d85c:	add    BYTE PTR [rax],al
   14002d85e:	add    BYTE PTR [rax],al
   14002d860:	adc    DWORD PTR [rax],eax
   14002d862:	add    BYTE PTR [rax],al
   14002d864:	add    BYTE PTR [rax],al
   14002d866:	add    BYTE PTR [rax],al
   14002d868:	add    al,BYTE PTR [rax]
   14002d86a:	add    BYTE PTR [rax],al
   14002d86c:	xlat   BYTE PTR ds:[rbx]
   14002d86d:	(bad)  
   14002d86e:	pop    rsp
   14002d86f:	sub    dl,BYTE PTR [rax-0x4fc7b913]
   14002d875:	cmc    
   14002d876:	stos   BYTE PTR es:[rdi],al
   14002d877:	fs and al,0x44
   14002d87a:	pop    rsi
   14002d87b:	pop    r10
   14002d87d:	push   rdx
   14002d87e:	repz add al,0x93
   14002d881:	jg     0x14002d8e6
   14002d883:	jl     0xd6ee63a9
   14002d889:	sbb    BYTE PTR [rbx-0x13],cl
	...
   14002d8a4:	mov    BYTE PTR [rax],al
   14002d8a6:	add    BYTE PTR [rax],al
   14002d8a8:	(bad)  
   14002d8a9:	add    BYTE PTR [rax],al
   14002d8ab:	add    BYTE PTR [rax+0x10000000],bl
   14002d8b1:	add    BYTE PTR [rax],al
   14002d8b3:	add    BYTE PTR [rax+0xe000000],ch
   14002d8b9:	add    BYTE PTR [rax],al
   14002d8bb:	add    BYTE PTR [rax+0x10000000],bh
	...
   14002d8c9:	add    BYTE PTR [rax],al
   14002d8cb:	add    al,cl
   14002d8cd:	add    BYTE PTR [rax],al
   14002d8cf:	add    BYTE PTR [rax+rax*1],cl
   14002d8d2:	add    BYTE PTR [rax],al
   14002d8d4:	add    BYTE PTR [rax],al
   14002d8d6:	add    BYTE PTR [rax],al
   14002d8d8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14002d8dc:	rex.WB add BYTE PTR [r8],al
	...
   14002d8e7:	add    BYTE PTR [rbx],al
   14002d8e9:	add    BYTE PTR [rax],al
   14002d8eb:	add    BYTE PTR [rsi],cl
   14002d8ed:	add    BYTE PTR [rax],al
   14002d8ef:	add    BYTE PTR [rax],dl
   14002d8f1:	add    BYTE PTR [rax],al
   14002d8f3:	add    BYTE PTR [rax],bl
   14002d8f5:	add    BYTE PTR [rax],al
   14002d8f7:	add    BYTE PTR [rbp+0x0],cl
   14002d8fa:	push   rbp
   14002d8fb:	add    BYTE PTR [rcx+0x0],cl
	...
   14002d906:	add    BYTE PTR [rax],al
   14002d908:	add    eax,DWORD PTR [rax]
   14002d90a:	add    BYTE PTR [rax],al
   14002d90c:	or     eax,DWORD PTR [rax]
   14002d90e:	add    BYTE PTR [rax],al
   14002d910:	(bad)  
   14002d911:	add    BYTE PTR [rax],al
   14002d913:	add    BYTE PTR [rax],dl
   14002d915:	add    BYTE PTR [rax],al
   14002d917:	add    BYTE PTR [rbp+0x0],ah
   14002d91a:	outs   dx,BYTE PTR ds:[rsi]
   14002d91b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193032e21
   14002d921:	add    BYTE PTR [rax],al
   14002d923:	add    BYTE PTR [rax],al
   14002d925:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014002e000 <.reloc>:
   14002e000:	add    BYTE PTR [rax],dh
   14002e002:	add    BYTE PTR [rax],al
   14002e004:	sbb    BYTE PTR [rax],al
   14002e006:	add    BYTE PTR [rax],al
   14002e008:	cmp    BYTE PTR [rdx-0x5d7f5dc0],ah
   14002e00e:	mov    BYTE PTR [rdx-0x5cdf5cf8],ah
   14002e014:	sub    BYTE PTR [rbx+0x5000a330],ah
   14002e01a:	add    BYTE PTR [rax],al
   14002e01c:	adc    BYTE PTR [rax],al
   14002e01e:	add    BYTE PTR [rax],al
   14002e020:	movabs al,ds:0x70000000a050a048
   14002e02a:	add    BYTE PTR [rax],al
   14002e02c:	adc    al,0x0
   14002e02e:	add    BYTE PTR [rax],al
   14002e030:	add    BYTE PTR [rax-0x5fe75ff8],ah
   14002e036:	and    BYTE PTR [rax-0x5fcf5fd8],ah
