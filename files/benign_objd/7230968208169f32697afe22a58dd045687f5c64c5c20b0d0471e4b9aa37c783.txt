
7230968208169f32697afe22a58dd045687f5c64c5c20b0d0471e4b9aa37c783.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rdi
   140001002:	sub    rsp,0x10
   140001006:	lea    rax,[rsp]
   14000100a:	mov    rdi,rax
   14000100d:	xor    eax,eax
   14000100f:	mov    ecx,0x1
   140001014:	rep stos BYTE PTR es:[rdi],al
   140001016:	add    rsp,0x10
   14000101a:	pop    rdi
   14000101b:	ret    
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	rex push rdi
   140001022:	sub    rsp,0x10
   140001026:	lea    rax,[rsp]
   14000102a:	mov    rdi,rax
   14000102d:	xor    eax,eax
   14000102f:	mov    ecx,0x1
   140001034:	rep stos BYTE PTR es:[rdi],al
   140001036:	add    rsp,0x10
   14000103a:	pop    rdi
   14000103b:	ret    
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	sub    rsp,0x28
   140001044:	lea    rcx,[rip+0x3a775]        # 0x14003b7c0
   14000104b:	call   0x140001390
   140001050:	lea    rcx,[rip+0x24bb9]        # 0x140025c10
   140001057:	call   0x1400216c8
   14000105c:	add    rsp,0x28
   140001060:	ret    
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	rex push rdi
   140001072:	sub    rsp,0x10
   140001076:	lea    rax,[rsp]
   14000107a:	mov    rdi,rax
   14000107d:	xor    eax,eax
   14000107f:	mov    ecx,0x1
   140001084:	rep stos BYTE PTR es:[rdi],al
   140001086:	add    rsp,0x10
   14000108a:	pop    rdi
   14000108b:	ret    
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	rex push rdi
   140001092:	sub    rsp,0x10
   140001096:	lea    rax,[rsp]
   14000109a:	mov    rdi,rax
   14000109d:	xor    eax,eax
   14000109f:	mov    ecx,0x1
   1400010a4:	rep stos BYTE PTR es:[rdi],al
   1400010a6:	add    rsp,0x10
   1400010aa:	pop    rdi
   1400010ab:	ret    
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	rex push rdi
   1400010b2:	sub    rsp,0x10
   1400010b6:	lea    rax,[rsp]
   1400010ba:	mov    rdi,rax
   1400010bd:	xor    eax,eax
   1400010bf:	mov    ecx,0x1
   1400010c4:	rep stos BYTE PTR es:[rdi],al
   1400010c6:	add    rsp,0x10
   1400010ca:	pop    rdi
   1400010cb:	ret    
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	rex push rdi
   1400010d2:	sub    rsp,0x10
   1400010d6:	lea    rax,[rsp]
   1400010da:	mov    rdi,rax
   1400010dd:	xor    eax,eax
   1400010df:	mov    ecx,0x1
   1400010e4:	rep stos BYTE PTR es:[rdi],al
   1400010e6:	add    rsp,0x10
   1400010ea:	pop    rdi
   1400010eb:	ret    
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rdi
   1400010f2:	sub    rsp,0x10
   1400010f6:	lea    rax,[rsp]
   1400010fa:	mov    rdi,rax
   1400010fd:	xor    eax,eax
   1400010ff:	mov    ecx,0x1
   140001104:	rep stos BYTE PTR es:[rdi],al
   140001106:	add    rsp,0x10
   14000110a:	pop    rdi
   14000110b:	ret    
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	rex push rdi
   140001112:	sub    rsp,0x10
   140001116:	lea    rax,[rsp]
   14000111a:	mov    rdi,rax
   14000111d:	xor    eax,eax
   14000111f:	mov    ecx,0x1
   140001124:	rep stos BYTE PTR es:[rdi],al
   140001126:	add    rsp,0x10
   14000112a:	pop    rdi
   14000112b:	ret    
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	rex push rdi
   140001132:	sub    rsp,0x10
   140001136:	lea    rax,[rsp]
   14000113a:	mov    rdi,rax
   14000113d:	xor    eax,eax
   14000113f:	mov    ecx,0x1
   140001144:	rep stos BYTE PTR es:[rdi],al
   140001146:	add    rsp,0x10
   14000114a:	pop    rdi
   14000114b:	ret    
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rdi
   140001152:	sub    rsp,0x10
   140001156:	lea    rax,[rsp]
   14000115a:	mov    rdi,rax
   14000115d:	xor    eax,eax
   14000115f:	mov    ecx,0x1
   140001164:	rep stos BYTE PTR es:[rdi],al
   140001166:	add    rsp,0x10
   14000116a:	pop    rdi
   14000116b:	ret    
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	sub    rsp,0x28
   140001174:	lea    rcx,[rip+0x3bac6]        # 0x14003cc41
   14000117b:	call   0x140012640
   140001180:	add    rsp,0x28
   140001184:	ret    
   140001185:	int3   
   140001186:	int3   
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	rex push rdi
   140001192:	sub    rsp,0x10
   140001196:	lea    rax,[rsp]
   14000119a:	mov    rdi,rax
   14000119d:	xor    eax,eax
   14000119f:	mov    ecx,0x1
   1400011a4:	rep stos BYTE PTR es:[rdi],al
   1400011a6:	add    rsp,0x10
   1400011aa:	pop    rdi
   1400011ab:	ret    
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	rex push rdi
   1400011b2:	sub    rsp,0x10
   1400011b6:	lea    rax,[rsp]
   1400011ba:	mov    rdi,rax
   1400011bd:	xor    eax,eax
   1400011bf:	mov    ecx,0x1
   1400011c4:	rep stos BYTE PTR es:[rdi],al
   1400011c6:	add    rsp,0x10
   1400011ca:	pop    rdi
   1400011cb:	ret    
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	sub    rsp,0x28
   1400011d4:	lea    rcx,[rip+0x3ba6d]        # 0x14003cc48
   1400011db:	call   0x140014e50
   1400011e0:	lea    rcx,[rip+0x24a49]        # 0x140025c30
   1400011e7:	call   0x1400216c8
   1400011ec:	add    rsp,0x28
   1400011f0:	ret    
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	rex push rdi
   140001202:	sub    rsp,0x10
   140001206:	lea    rax,[rsp]
   14000120a:	mov    rdi,rax
   14000120d:	xor    eax,eax
   14000120f:	mov    ecx,0x1
   140001214:	rep stos BYTE PTR es:[rdi],al
   140001216:	add    rsp,0x10
   14000121a:	pop    rdi
   14000121b:	ret    
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	rex push rdi
   140001222:	sub    rsp,0x10
   140001226:	lea    rax,[rsp]
   14000122a:	mov    rdi,rax
   14000122d:	xor    eax,eax
   14000122f:	mov    ecx,0x1
   140001234:	rep stos BYTE PTR es:[rdi],al
   140001236:	add    rsp,0x10
   14000123a:	pop    rdi
   14000123b:	ret    
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	rex push rdi
   140001242:	sub    rsp,0x10
   140001246:	lea    rax,[rsp]
   14000124a:	mov    rdi,rax
   14000124d:	xor    eax,eax
   14000124f:	mov    ecx,0x1
   140001254:	rep stos BYTE PTR es:[rdi],al
   140001256:	add    rsp,0x10
   14000125a:	pop    rdi
   14000125b:	ret    
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	rex push rdi
   140001262:	sub    rsp,0x10
   140001266:	lea    rax,[rsp]
   14000126a:	mov    rdi,rax
   14000126d:	xor    eax,eax
   14000126f:	mov    ecx,0x1
   140001274:	rep stos BYTE PTR es:[rdi],al
   140001276:	add    rsp,0x10
   14000127a:	pop    rdi
   14000127b:	ret    
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	rex push rdi
   140001282:	sub    rsp,0x10
   140001286:	lea    rax,[rsp]
   14000128a:	mov    rdi,rax
   14000128d:	xor    eax,eax
   14000128f:	mov    ecx,0x1
   140001294:	rep stos BYTE PTR es:[rdi],al
   140001296:	add    rsp,0x10
   14000129a:	pop    rdi
   14000129b:	ret    
   14000129c:	sub    rsp,0x38
   1400012a0:	and    DWORD PTR [rsp+0x20],0x0
   1400012a5:	lea    r8,[rip+0x1feb8]        # 0x140021164
   1400012ac:	lea    rcx,[rip+0x3b9fd]        # 0x14003ccb0
   1400012b3:	mov    r9d,0xc00
   1400012b9:	mov    edx,0x1
   1400012be:	call   0x1400221fc
   1400012c3:	lea    rax,[rip+0x3051e]        # 0x1400317e8
   1400012ca:	lea    rcx,[rip+0x24977]        # 0x140025c48
   1400012d1:	mov    QWORD PTR [rip+0x3b9d8],rax        # 0x14003ccb0
   1400012d8:	add    rsp,0x38
   1400012dc:	jmp    0x1400216c8
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	sub    rsp,0x28
   1400012e8:	lea    rcx,[rip+0x3c0c1]        # 0x14003d3b0
   1400012ef:	call   0x140021da8
   1400012f4:	lea    rcx,[rip+0x24959]        # 0x140025c54
   1400012fb:	add    rsp,0x28
   1400012ff:	jmp    0x1400216c8
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	lea    rcx,[rip+0x24949]        # 0x140025c60
   140001317:	jmp    0x1400216c8
   14000131c:	sub    rsp,0x28
   140001320:	mov    edx,0xc00
   140001325:	xor    ecx,ecx
   140001327:	call   0x140022220
   14000132c:	mov    BYTE PTR [rip+0x3c0e2],al        # 0x14003d414
   140001332:	add    rsp,0x28
   140001336:	ret    
   140001337:	int3   
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	mov    QWORD PTR [rsp+0x8],rcx
   140001345:	sub    rsp,0x28
   140001349:	mov    rax,QWORD PTR [rsp+0x30]
   14000134e:	mov    rcx,QWORD PTR [rax]
   140001351:	call   QWORD PTR [rip+0x25189]        # 0x1400264e0
   140001357:	add    rsp,0x28
   14000135b:	ret    
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    DWORD PTR [rsp+0x18],r8d
   140001365:	mov    DWORD PTR [rsp+0x10],edx
   140001369:	mov    QWORD PTR [rsp+0x8],rcx
   14000136e:	sub    rsp,0x28
   140001372:	mov    edx,DWORD PTR [rsp+0x38]
   140001376:	mov    rcx,QWORD PTR [rsp+0x30]
   14000137b:	call   QWORD PTR [rip+0x24dcf]        # 0x140026150
   140001381:	add    rsp,0x28
   140001385:	ret    
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    QWORD PTR [rsp+0x8],rcx
   140001395:	sub    rsp,0x58
   140001399:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400013a2:	xor    edx,edx
   1400013a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400013a9:	call   0x140020c44
   1400013ae:	nop
   1400013af:	mov    rax,QWORD PTR [rsp+0x60]
   1400013b4:	lea    rcx,[rip+0x2682d]        # 0x140027be8
   1400013bb:	mov    QWORD PTR [rax],rcx
   1400013be:	mov    rax,QWORD PTR [rsp+0x60]
   1400013c3:	add    rax,0x178
   1400013c9:	mov    rcx,rax
   1400013cc:	call   0x1400184f0
   1400013d1:	nop
   1400013d2:	mov    rax,QWORD PTR [rsp+0x60]
   1400013d7:	add    rax,0x298
   1400013dd:	mov    rcx,rax
   1400013e0:	call   0x140005be0
   1400013e5:	nop
   1400013e6:	mov    dl,0x1
   1400013e8:	lea    rcx,[rip+0x261d9]        # 0x1400275c8
   1400013ef:	call   0x140017250
   1400013f4:	lea    rcx,[rsp+0x40]
   1400013f9:	call   0x140003350
   1400013fe:	mov    r9d,0x400
   140001404:	xor    r8d,r8d
   140001407:	lea    rdx,[rsp+0x30]
   14000140c:	lea    rcx,[rsp+0x40]
   140001411:	call   0x140002f50
   140001416:	mov    QWORD PTR [rsp+0x20],rax
   14000141b:	mov    rax,QWORD PTR [rsp+0x20]
   140001420:	mov    QWORD PTR [rsp+0x28],rax
   140001425:	mov    rcx,QWORD PTR [rsp+0x28]
   14000142a:	call   QWORD PTR [rip+0x25980]        # 0x140026db0
   140001430:	mov    dl,0x1
   140001432:	mov    rcx,rax
   140001435:	call   0x140017250
   14000143a:	nop
   14000143b:	lea    rcx,[rsp+0x30]
   140001440:	call   QWORD PTR [rip+0x2591a]        # 0x140026d60
   140001446:	mov    rax,QWORD PTR [rsp+0x60]
   14000144b:	mov    QWORD PTR [rax+0x290],0x0
   140001456:	mov    rax,QWORD PTR [rsp+0x60]
   14000145b:	add    rsp,0x58
   14000145f:	ret    
   140001460:	int3   
   140001461:	int3   
   140001462:	int3   
   140001463:	int3   
   140001464:	int3   
   140001465:	int3   
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    QWORD PTR [rsp+0x8],rcx
   140001475:	sub    rsp,0x48
   140001479:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140001482:	mov    rax,QWORD PTR [rsp+0x50]
   140001487:	lea    rcx,[rip+0x2675a]        # 0x140027be8
   14000148e:	mov    QWORD PTR [rax],rcx
   140001491:	mov    dl,0x1
   140001493:	lea    rcx,[rip+0x2616e]        # 0x140027608
   14000149a:	call   0x140017250
   14000149f:	mov    dl,0x1
   1400014a1:	xor    ecx,ecx
   1400014a3:	call   0x140017250
   1400014a8:	call   0x140017310
   1400014ad:	mov    rax,QWORD PTR [rsp+0x50]
   1400014b2:	mov    rax,QWORD PTR [rax+0x290]
   1400014b9:	mov    QWORD PTR [rsp+0x28],rax
   1400014be:	mov    rax,QWORD PTR [rsp+0x28]
   1400014c3:	mov    QWORD PTR [rsp+0x20],rax
   1400014c8:	cmp    QWORD PTR [rsp+0x20],0x0
   1400014ce:	je     0x1400014ec
   1400014d0:	mov    rax,QWORD PTR [rsp+0x20]
   1400014d5:	mov    rax,QWORD PTR [rax]
   1400014d8:	mov    edx,0x1
   1400014dd:	mov    rcx,QWORD PTR [rsp+0x20]
   1400014e2:	call   QWORD PTR [rax+0x8]
   1400014e5:	mov    QWORD PTR [rsp+0x30],rax
   1400014ea:	jmp    0x1400014f5
   1400014ec:	mov    QWORD PTR [rsp+0x30],0x0
   1400014f5:	mov    rax,QWORD PTR [rsp+0x50]
   1400014fa:	mov    QWORD PTR [rax+0x290],0x0
   140001505:	mov    rax,QWORD PTR [rsp+0x50]
   14000150a:	add    rax,0x298
   140001510:	mov    rcx,rax
   140001513:	call   0x140002b20
   140001518:	nop
   140001519:	mov    rax,QWORD PTR [rsp+0x50]
   14000151e:	add    rax,0x178
   140001524:	mov    rcx,rax
   140001527:	call   0x1400185e0
   14000152c:	nop
   14000152d:	mov    rcx,QWORD PTR [rsp+0x50]
   140001532:	call   0x140020d10
   140001537:	add    rsp,0x48
   14000153b:	ret    
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	int3   
   140001541:	int3   
   140001542:	int3   
   140001543:	int3   
   140001544:	int3   
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    QWORD PTR [rsp+0x8],rcx
   140001555:	sub    rsp,0xe8
   14000155c:	mov    QWORD PTR [rsp+0xb8],0xfffffffffffffffe
   140001568:	mov    DWORD PTR [rsp+0x34],0x0
   140001570:	call   QWORD PTR [rip+0x24b02]        # 0x140026078
   140001576:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000157e:	call   0x140020ce6
   140001583:	xor    ecx,ecx
   140001585:	call   0x140020d22
   14000158a:	mov    edx,0x2
   14000158f:	xor    ecx,ecx
   140001591:	call   QWORD PTR [rip+0x258e1]        # 0x140026e78
   140001597:	mov    rax,QWORD PTR [rsp+0xf0]
   14000159f:	add    rax,0x298
   1400015a5:	mov    rdx,rax
   1400015a8:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400015b0:	call   0x140020c92
   1400015b5:	mov    rax,QWORD PTR [rsp+0xf0]
   1400015bd:	add    rax,0x298
   1400015c3:	mov    rcx,rax
   1400015c6:	call   0x140005e30
   1400015cb:	mov    rcx,rax
   1400015ce:	call   QWORD PTR [rip+0x24f3c]        # 0x140026510
   1400015d4:	test   eax,eax
   1400015d6:	jne    0x14000160d
   1400015d8:	mov    dl,0x1
   1400015da:	lea    rcx,[rip+0x2605f]        # 0x140027640
   1400015e1:	call   0x140017250
   1400015e6:	mov    rax,QWORD PTR [rsp+0xf0]
   1400015ee:	add    rax,0x298
   1400015f4:	mov    rcx,rax
   1400015f7:	call   0x140005e30
   1400015fc:	mov    dl,0x1
   1400015fe:	mov    rcx,rax
   140001601:	call   0x140017250
   140001606:	xor    eax,eax
   140001608:	jmp    0x140001936
   14000160d:	mov    BYTE PTR [rsp+0x30],0x0
   140001612:	mov    rax,QWORD PTR [rsp+0xf0]
   14000161a:	add    rax,0x298
   140001620:	mov    rcx,rax
   140001623:	call   0x140005eb0
   140001628:	mov    rdx,rax
   14000162b:	lea    rcx,[rsp+0x38]
   140001630:	call   QWORD PTR [rip+0x25732]        # 0x140026d68
   140001636:	nop
   140001637:	lea    rcx,[rsp+0x38]
   14000163c:	call   QWORD PTR [rip+0x2576e]        # 0x140026db0
   140001642:	mov    QWORD PTR [rsp+0x70],rax
   140001647:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000164f:	add    rcx,0x298
   140001656:	call   0x140005e80
   14000165b:	mov    QWORD PTR [rsp+0x60],rax
   140001660:	mov    rcx,QWORD PTR [rsp+0xf0]
   140001668:	add    rcx,0x298
   14000166f:	call   0x140005e30
   140001674:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000167c:	add    rcx,0x178
   140001683:	mov    rdx,QWORD PTR [rsp+0x70]
   140001688:	mov    r9,rdx
   14000168b:	mov    rdx,QWORD PTR [rsp+0x60]
   140001690:	mov    r8,rdx
   140001693:	mov    rdx,rax
   140001696:	call   0x1400186c0
   14000169b:	mov    BYTE PTR [rsp+0x30],al
   14000169f:	movzx  eax,BYTE PTR [rsp+0x30]
   1400016a4:	test   eax,eax
   1400016a6:	jne    0x1400016d2
   1400016a8:	mov    dl,0x1
   1400016aa:	lea    rcx,[rip+0x25fd7]        # 0x140027688
   1400016b1:	call   0x140017250
   1400016b6:	mov    DWORD PTR [rsp+0x44],0x0
   1400016be:	lea    rcx,[rsp+0x38]
   1400016c3:	call   QWORD PTR [rip+0x25697]        # 0x140026d60
   1400016c9:	mov    eax,DWORD PTR [rsp+0x44]
   1400016cd:	jmp    0x140001936
   1400016d2:	mov    rax,QWORD PTR [rsp+0xf0]
   1400016da:	add    rax,0x298
   1400016e0:	mov    rcx,rax
   1400016e3:	call   0x140005e60
   1400016e8:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400016f0:	add    rcx,0x178
   1400016f7:	mov    edx,eax
   1400016f9:	call   0x14001b4c0
   1400016fe:	nop
   1400016ff:	mov    ecx,0x10
   140001704:	call   0x140002b80
   140001709:	mov    QWORD PTR [rsp+0x50],rax
   14000170e:	cmp    QWORD PTR [rsp+0x50],0x0
   140001714:	je     0x140001784
   140001716:	lea    rdx,[rsp+0x90]
   14000171e:	mov    rcx,QWORD PTR [rsp+0xf0]
   140001726:	call   0x1400029c0
   14000172b:	mov    QWORD PTR [rsp+0x98],rax
   140001733:	mov    rax,QWORD PTR [rsp+0x98]
   14000173b:	mov    QWORD PTR [rsp+0x80],rax
   140001743:	mov    eax,DWORD PTR [rsp+0x34]
   140001747:	or     eax,0x1
   14000174a:	mov    DWORD PTR [rsp+0x34],eax
   14000174e:	mov    rcx,QWORD PTR [rsp+0x80]
   140001756:	call   QWORD PTR [rip+0x25654]        # 0x140026db0
   14000175c:	mov    QWORD PTR [rsp+0x20],0x0
   140001765:	mov    r9,rax
   140001768:	mov    r8d,0x1
   14000176e:	mov    edx,0x1
   140001773:	mov    rcx,QWORD PTR [rsp+0x50]
   140001778:	call   0x140020d28
   14000177d:	mov    QWORD PTR [rsp+0x58],rax
   140001782:	jmp    0x14000178d
   140001784:	mov    QWORD PTR [rsp+0x58],0x0
   14000178d:	mov    rax,QWORD PTR [rsp+0x58]
   140001792:	mov    QWORD PTR [rsp+0xa0],rax
   14000179a:	mov    rax,QWORD PTR [rsp+0xf0]
   1400017a2:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400017aa:	mov    QWORD PTR [rax+0x290],rcx
   1400017b1:	mov    eax,DWORD PTR [rsp+0x34]
   1400017b5:	and    eax,0x1
   1400017b8:	test   eax,eax
   1400017ba:	je     0x1400017d0
   1400017bc:	and    DWORD PTR [rsp+0x34],0xfffffffe
   1400017c1:	lea    rcx,[rsp+0x90]
   1400017c9:	call   QWORD PTR [rip+0x25591]        # 0x140026d60
   1400017cf:	nop
   1400017d0:	jmp    0x1400017d2
   1400017d2:	call   QWORD PTR [rip+0x24980]        # 0x140026158
   1400017d8:	cmp    eax,0xb7
   1400017dd:	jne    0x1400018b5
   1400017e3:	mov    rax,QWORD PTR [rsp+0xf0]
   1400017eb:	add    rax,0x178
   1400017f1:	mov    rcx,rax
   1400017f4:	call   0x14001b850
   1400017f9:	movzx  eax,al
   1400017fc:	test   eax,eax
   1400017fe:	jne    0x140001889
   140001804:	mov    dl,0x1
   140001806:	lea    rcx,[rip+0x25eb3]        # 0x1400276c0
   14000180d:	call   0x140017250
   140001812:	lea    rdx,[rsp+0x88]
   14000181a:	mov    rcx,QWORD PTR [rsp+0xf0]
   140001822:	call   0x140002930
   140001827:	mov    QWORD PTR [rsp+0x68],rax
   14000182c:	mov    rax,QWORD PTR [rsp+0x68]
   140001831:	mov    QWORD PTR [rsp+0x78],rax
   140001836:	mov    rcx,QWORD PTR [rsp+0x78]
   14000183b:	call   QWORD PTR [rip+0x2556f]        # 0x140026db0
   140001841:	mov    QWORD PTR [rsp+0x20],0x0
   14000184a:	mov    r9,rax
   14000184d:	xor    r8d,r8d
   140001850:	xor    edx,edx
   140001852:	lea    rcx,[rsp+0xa8]
   14000185a:	call   0x140020d2e
   14000185f:	nop
   140001860:	lea    rcx,[rsp+0x88]
   140001868:	call   QWORD PTR [rip+0x254f2]        # 0x140026d60
   14000186e:	lea    rcx,[rsp+0xa8]
   140001876:	call   0x1400033c0
   14000187b:	nop
   14000187c:	lea    rcx,[rsp+0xa8]
   140001884:	call   0x140020d34
   140001889:	mov    dl,0x1
   14000188b:	lea    rcx,[rip+0x25e7e]        # 0x140027710
   140001892:	call   0x140017250
   140001897:	mov    DWORD PTR [rsp+0x40],0x1
   14000189f:	lea    rcx,[rsp+0x38]
   1400018a4:	call   QWORD PTR [rip+0x254b6]        # 0x140026d60
   1400018aa:	mov    eax,DWORD PTR [rsp+0x40]
   1400018ae:	jmp    0x140001936
   1400018b3:	jmp    0x14000191f
   1400018b5:	mov    dl,0x1
   1400018b7:	lea    rcx,[rip+0x25e9a]        # 0x140027758
   1400018be:	call   0x140017250
   1400018c3:	mov    r8d,0x1
   1400018c9:	mov    rax,QWORD PTR [rsp+0xf0]
   1400018d1:	mov    rdx,QWORD PTR [rax+0x290]
   1400018d8:	lea    rcx,[rsp+0xc0]
   1400018e0:	call   0x140020d3a
   1400018e5:	nop
   1400018e6:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400018ee:	call   0x140001970
   1400018f3:	lea    rcx,[rsp+0xc0]
   1400018fb:	call   0x140020d40
   140001900:	mov    dl,0x1
   140001902:	lea    rcx,[rip+0x25e77]        # 0x140027780
   140001909:	call   0x140017250
   14000190e:	nop
   14000190f:	lea    rcx,[rsp+0xc0]
   140001917:	call   0x140002b00
   14000191c:	nop
   14000191d:	jmp    0x14000191f
   14000191f:	mov    DWORD PTR [rsp+0x48],0x1
   140001927:	lea    rcx,[rsp+0x38]
   14000192c:	call   QWORD PTR [rip+0x2542e]        # 0x140026d60
   140001932:	mov    eax,DWORD PTR [rsp+0x48]
   140001936:	add    rsp,0xe8
   14000193d:	ret    
   14000193e:	int3   
   14000193f:	int3   
   140001940:	int3   
   140001941:	int3   
   140001942:	int3   
   140001943:	int3   
   140001944:	int3   
   140001945:	int3   
   140001946:	int3   
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	mov    QWORD PTR [rsp+0x8],rcx
   140001955:	sub    rsp,0x28
   140001959:	mov    rcx,QWORD PTR [rsp+0x30]
   14000195e:	call   0x140020cec
   140001963:	add    rsp,0x28
   140001967:	ret    
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	mov    QWORD PTR [rsp+0x8],rcx
   140001975:	sub    rsp,0x68
   140001979:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140001982:	mov    dl,0x1
   140001984:	lea    rcx,[rip+0x25e1d]        # 0x1400277a8
   14000198b:	call   0x140017250
   140001990:	mov    rax,QWORD PTR [rsp+0x70]
   140001995:	add    rax,0x178
   14000199b:	lea    rdx,[rsp+0x30]
   1400019a0:	mov    rcx,rax
   1400019a3:	call   0x14001b500
   1400019a8:	mov    QWORD PTR [rsp+0x20],rax
   1400019ad:	mov    rax,QWORD PTR [rsp+0x20]
   1400019b2:	mov    QWORD PTR [rsp+0x28],rax
   1400019b7:	mov    rcx,QWORD PTR [rsp+0x28]
   1400019bc:	call   QWORD PTR [rip+0x253ee]        # 0x140026db0
   1400019c2:	mov    dl,0x1
   1400019c4:	mov    rcx,rax
   1400019c7:	call   0x140017250
   1400019cc:	nop
   1400019cd:	lea    rcx,[rsp+0x30]
   1400019d2:	call   QWORD PTR [rip+0x25388]        # 0x140026d60
   1400019d8:	mov    rax,QWORD PTR [rsp+0x70]
   1400019dd:	add    rax,0x178
   1400019e3:	mov    rcx,rax
   1400019e6:	call   0x14001b560
   1400019eb:	mov    dl,0x1
   1400019ed:	mov    rcx,rax
   1400019f0:	call   0x140017250
   1400019f5:	mov    rax,QWORD PTR [rsp+0x70]
   1400019fa:	add    rax,0x178
   140001a00:	lea    rdx,[rsp+0x48]
   140001a05:	mov    rcx,rax
   140001a08:	call   0x14001b5f0
   140001a0d:	mov    QWORD PTR [rsp+0x38],rax
   140001a12:	mov    rax,QWORD PTR [rsp+0x38]
   140001a17:	mov    QWORD PTR [rsp+0x40],rax
   140001a1c:	mov    rcx,QWORD PTR [rsp+0x40]
   140001a21:	call   QWORD PTR [rip+0x25389]        # 0x140026db0
   140001a27:	mov    dl,0x1
   140001a29:	mov    rcx,rax
   140001a2c:	call   0x140017250
   140001a31:	nop
   140001a32:	lea    rcx,[rsp+0x48]
   140001a37:	call   QWORD PTR [rip+0x25323]        # 0x140026d60
   140001a3d:	mov    dl,0x1
   140001a3f:	xor    ecx,ecx
   140001a41:	call   0x140017250
   140001a46:	mov    rcx,QWORD PTR [rsp+0x70]
   140001a4b:	call   0x140001ab0
   140001a50:	movzx  eax,al
   140001a53:	test   eax,eax
   140001a55:	jne    0x140001a69
   140001a57:	mov    dl,0x1
   140001a59:	lea    rcx,[rip+0x25dc0]        # 0x140027820
   140001a60:	call   0x140017250
   140001a65:	xor    al,al
   140001a67:	jmp    0x140001aa2
   140001a69:	mov    rax,QWORD PTR [rsp+0x70]
   140001a6e:	add    rax,0x178
   140001a74:	mov    rcx,rax
   140001a77:	call   0x14001b9e0
   140001a7c:	movzx  eax,al
   140001a7f:	test   eax,eax
   140001a81:	je     0x140001aa0
   140001a83:	mov    rcx,QWORD PTR [rsp+0x70]
   140001a88:	call   0x140002120
   140001a8d:	movzx  eax,al
   140001a90:	test   eax,eax
   140001a92:	je     0x140001a9a
   140001a94:	mov    al,0x1
   140001a96:	jmp    0x140001aa2
   140001a98:	jmp    0x140001a9e
   140001a9a:	xor    al,al
   140001a9c:	jmp    0x140001aa2
   140001a9e:	jmp    0x140001aa2
   140001aa0:	mov    al,0x1
   140001aa2:	add    rsp,0x68
   140001aa6:	ret    
   140001aa7:	int3   
   140001aa8:	int3   
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	mov    QWORD PTR [rsp+0x8],rcx
   140001ab5:	push   rdi
   140001ab6:	sub    rsp,0x9f0
   140001abd:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   140001ac9:	mov    rax,QWORD PTR [rip+0x39780]        # 0x14003b250
   140001ad0:	xor    rax,rsp
   140001ad3:	mov    QWORD PTR [rsp+0x9e0],rax
   140001adb:	call   0x140003460
   140001ae0:	mov    DWORD PTR [rsp+0x78],eax
   140001ae4:	mov    rax,QWORD PTR [rsp+0xa00]
   140001aec:	add    rax,0x178
   140001af2:	mov    rcx,rax
   140001af5:	call   0x14001b490
   140001afa:	cmp    eax,0x1
   140001afd:	jl     0x140001b40
   140001aff:	mov    rax,QWORD PTR [rsp+0xa00]
   140001b07:	add    rax,0x178
   140001b0d:	mov    rcx,rax
   140001b10:	call   0x14001b710
   140001b15:	movzx  eax,al
   140001b18:	test   eax,eax
   140001b1a:	je     0x140001b39
   140001b1c:	mov    rax,QWORD PTR [rsp+0xa00]
   140001b24:	add    rax,0x178
   140001b2a:	mov    edx,0xffffffff
   140001b2f:	mov    rcx,rax
   140001b32:	call   0x14001b450
   140001b37:	jmp    0x140001b40
   140001b39:	mov    al,0x1
   140001b3b:	jmp    0x140002101
   140001b40:	mov    rax,QWORD PTR [rsp+0xa00]
   140001b48:	add    rax,0x178
   140001b4e:	mov    rcx,rax
   140001b51:	call   0x14001b7e0
   140001b56:	mov    rcx,rax
   140001b59:	call   0x140017950
   140001b5e:	mov    rdx,rax
   140001b61:	lea    rcx,[rsp+0x40]
   140001b66:	call   QWORD PTR [rip+0x251fc]        # 0x140026d68
   140001b6c:	nop
   140001b6d:	lea    rdx,[rip+0x25ce4]        # 0x140027858
   140001b74:	lea    rcx,[rsp+0x40]
   140001b79:	call   0x140002c50
   140001b7e:	movzx  eax,al
   140001b81:	test   eax,eax
   140001b83:	je     0x140001b92
   140001b85:	mov    rcx,QWORD PTR [rsp+0xa00]
   140001b8d:	call   0x140002490
   140001b92:	mov    rax,QWORD PTR [rsp+0xa00]
   140001b9a:	add    rax,0x178
   140001ba0:	mov    rcx,rax
   140001ba3:	call   0x14001b490
   140001ba8:	cmp    eax,0xffffffff
   140001bab:	je     0x140001bb7
   140001bad:	mov    DWORD PTR [rsp+0x48],0x1
   140001bb5:	jmp    0x140001bbf
   140001bb7:	mov    DWORD PTR [rsp+0x48],0x0
   140001bbf:	movzx  eax,BYTE PTR [rsp+0x48]
   140001bc4:	mov    BYTE PTR [rsp+0x34],al
   140001bc8:	movzx  eax,BYTE PTR [rsp+0x34]
   140001bcd:	test   eax,eax
   140001bcf:	jne    0x140001d9c
   140001bd5:	mov    rax,QWORD PTR [rsp+0xa00]
   140001bdd:	add    rax,0x178
   140001be3:	mov    rcx,rax
   140001be6:	call   0x14001b5c0
   140001beb:	mov    rdx,rax
   140001bee:	lea    rcx,[rsp+0x38]
   140001bf3:	call   QWORD PTR [rip+0x2516f]        # 0x140026d68
   140001bf9:	nop
   140001bfa:	lea    rcx,[rsp+0x38]
   140001bff:	call   QWORD PTR [rip+0x251ab]        # 0x140026db0
   140001c05:	mov    rcx,rax
   140001c08:	call   QWORD PTR [rip+0x24902]        # 0x140026510
   140001c0e:	test   eax,eax
   140001c10:	jne    0x140001c5e
   140001c12:	xor    eax,eax
   140001c14:	mov    WORD PTR [rsp+0x7d0],ax
   140001c1c:	lea    rax,[rsp+0x7d2]
   140001c24:	mov    rdi,rax
   140001c27:	xor    eax,eax
   140001c29:	mov    ecx,0x206
   140001c2e:	rep stos BYTE PTR es:[rdi],al
   140001c30:	lea    rcx,[rsp+0x38]
   140001c35:	call   QWORD PTR [rip+0x25175]        # 0x140026db0
   140001c3b:	mov    r8,rax
   140001c3e:	mov    edx,0x104
   140001c43:	lea    rcx,[rsp+0x7d0]
   140001c4b:	call   QWORD PTR [rip+0x24727]        # 0x140026378
   140001c51:	lea    rcx,[rsp+0x7d0]
   140001c59:	call   0x1400086f0
   140001c5e:	lea    rcx,[rsp+0x38]
   140001c63:	call   QWORD PTR [rip+0x25147]        # 0x140026db0
   140001c69:	mov    rcx,rax
   140001c6c:	call   QWORD PTR [rip+0x2489e]        # 0x140026510
   140001c72:	test   eax,eax
   140001c74:	je     0x140001c8e
   140001c76:	lea    rcx,[rsp+0x38]
   140001c7b:	call   QWORD PTR [rip+0x2512f]        # 0x140026db0
   140001c81:	mov    rcx,rax
   140001c84:	call   QWORD PTR [rip+0x2488e]        # 0x140026518
   140001c8a:	test   eax,eax
   140001c8c:	jne    0x140001cb4
   140001c8e:	mov    BYTE PTR [rsp+0x32],0x0
   140001c93:	lea    rcx,[rsp+0x38]
   140001c98:	call   QWORD PTR [rip+0x250c2]        # 0x140026d60
   140001c9e:	nop
   140001c9f:	lea    rcx,[rsp+0x40]
   140001ca4:	call   QWORD PTR [rip+0x250b6]        # 0x140026d60
   140001caa:	movzx  eax,BYTE PTR [rsp+0x32]
   140001caf:	jmp    0x140002101
   140001cb4:	mov    rax,QWORD PTR [rsp+0xa00]
   140001cbc:	add    rax,0x178
   140001cc2:	mov    rcx,rax
   140001cc5:	call   0x14001b850
   140001cca:	movzx  eax,al
   140001ccd:	test   eax,eax
   140001ccf:	jne    0x140001d91
   140001cd5:	mov    rax,QWORD PTR [rsp+0xa00]
   140001cdd:	add    rax,0x178
   140001ce3:	mov    rcx,rax
   140001ce6:	call   0x14001bf80
   140001ceb:	test   eax,eax
   140001ced:	jne    0x140001d91
   140001cf3:	mov    rax,QWORD PTR [rsp+0xa00]
   140001cfb:	add    rax,0x178
   140001d01:	mov    QWORD PTR [rsp+0x80],rax
   140001d09:	mov    rcx,QWORD PTR [rsp+0xa00]
   140001d11:	add    rcx,0x178
   140001d18:	call   0x14001bc20
   140001d1d:	xor    r9d,r9d
   140001d20:	mov    rcx,QWORD PTR [rsp+0x80]
   140001d28:	mov    r8,rcx
   140001d2b:	mov    rdx,rax
   140001d2e:	lea    rcx,[rsp+0x4c0]
   140001d36:	call   0x140006850
   140001d3b:	nop
   140001d3c:	lea    rcx,[rsp+0x4c0]
   140001d44:	call   0x140020c0e
   140001d49:	cmp    rax,0x2
   140001d4d:	jne    0x140001d83
   140001d4f:	mov    BYTE PTR [rsp+0x33],0x0
   140001d54:	lea    rcx,[rsp+0x4c0]
   140001d5c:	call   0x140006980
   140001d61:	nop
   140001d62:	lea    rcx,[rsp+0x38]
   140001d67:	call   QWORD PTR [rip+0x24ff3]        # 0x140026d60
   140001d6d:	nop
   140001d6e:	lea    rcx,[rsp+0x40]
   140001d73:	call   QWORD PTR [rip+0x24fe7]        # 0x140026d60
   140001d79:	movzx  eax,BYTE PTR [rsp+0x33]
   140001d7e:	jmp    0x140002101
   140001d83:	lea    rcx,[rsp+0x4c0]
   140001d8b:	call   0x140006980
   140001d90:	nop
   140001d91:	lea    rcx,[rsp+0x38]
   140001d96:	call   QWORD PTR [rip+0x24fc4]        # 0x140026d60
   140001d9c:	mov    rax,QWORD PTR [rsp+0xa00]
   140001da4:	add    rax,0x178
   140001daa:	mov    QWORD PTR [rsp+0x70],rax
   140001daf:	mov    rcx,QWORD PTR [rsp+0xa00]
   140001db7:	add    rcx,0x178
   140001dbe:	call   0x14001bc50
   140001dc3:	xor    r9d,r9d
   140001dc6:	mov    rcx,QWORD PTR [rsp+0x70]
   140001dcb:	mov    r8,rcx
   140001dce:	mov    rdx,rax
   140001dd1:	lea    rcx,[rsp+0x1a0]
   140001dd9:	call   0x140007eb0
   140001dde:	nop
   140001ddf:	lea    rcx,[rsp+0xa0]
   140001de7:	call   0x1400034b0
   140001dec:	nop
   140001ded:	lea    rax,[rsp+0x1a0]
   140001df5:	test   rax,rax
   140001df8:	je     0x140001e0f
   140001dfa:	lea    rax,[rsp+0x1a0]
   140001e02:	add    rax,0x310
   140001e08:	mov    QWORD PTR [rsp+0x50],rax
   140001e0d:	jmp    0x140001e18
   140001e0f:	mov    QWORD PTR [rsp+0x50],0x0
   140001e18:	mov    rax,QWORD PTR [rsp+0xa00]
   140001e20:	add    rax,0x178
   140001e26:	mov    r8,QWORD PTR [rsp+0x50]
   140001e2b:	mov    rdx,rax
   140001e2e:	lea    rcx,[rsp+0xa0]
   140001e36:	call   0x140003650
   140001e3b:	movzx  eax,al
   140001e3e:	test   eax,eax
   140001e40:	jne    0x140001e78
   140001e42:	mov    BYTE PTR [rsp+0x35],0x0
   140001e47:	lea    rcx,[rsp+0xa0]
   140001e4f:	call   0x1400035c0
   140001e54:	nop
   140001e55:	lea    rcx,[rsp+0x1a0]
   140001e5d:	call   0x140007f50
   140001e62:	nop
   140001e63:	lea    rcx,[rsp+0x40]
   140001e68:	call   QWORD PTR [rip+0x24ef2]        # 0x140026d60
   140001e6e:	movzx  eax,BYTE PTR [rsp+0x35]
   140001e73:	jmp    0x140002101
   140001e78:	mov    rax,QWORD PTR [rsp+0xa00]
   140001e80:	add    rax,0x178
   140001e86:	xor    edx,edx
   140001e88:	mov    rcx,rax
   140001e8b:	call   0x14001b450
   140001e90:	lea    rcx,[rsp+0xa0]
   140001e98:	call   0x140003c60
   140001e9d:	movzx  eax,al
   140001ea0:	test   eax,eax
   140001ea2:	jne    0x14000203a
   140001ea8:	mov    rax,QWORD PTR [rsp+0xa00]
   140001eb0:	add    rax,0x178
   140001eb6:	mov    rcx,rax
   140001eb9:	call   0x14001b850
   140001ebe:	movzx  eax,al
   140001ec1:	test   eax,eax
   140001ec3:	je     0x140002025
   140001ec9:	mov    dl,0x1
   140001ecb:	lea    rcx,[rip+0x25996]        # 0x140027868
   140001ed2:	call   0x140017250
   140001ed7:	lea    rdx,[rsp+0x58]
   140001edc:	mov    rcx,QWORD PTR [rsp+0xa00]
   140001ee4:	call   0x140002930
   140001ee9:	mov    QWORD PTR [rsp+0x60],rax
   140001eee:	mov    rax,QWORD PTR [rsp+0x60]
   140001ef3:	mov    QWORD PTR [rsp+0x68],rax
   140001ef8:	mov    rcx,QWORD PTR [rsp+0x68]
   140001efd:	call   QWORD PTR [rip+0x24ead]        # 0x140026db0
   140001f03:	mov    QWORD PTR [rsp+0x20],0x0
   140001f0c:	mov    r9,rax
   140001f0f:	xor    r8d,r8d
   140001f12:	xor    edx,edx
   140001f14:	lea    rcx,[rsp+0x88]
   140001f1c:	call   0x140020d2e
   140001f21:	nop
   140001f22:	lea    rcx,[rsp+0x58]
   140001f27:	call   QWORD PTR [rip+0x24e33]        # 0x140026d60
   140001f2d:	lea    rcx,[rsp+0xa0]
   140001f35:	call   0x140003c60
   140001f3a:	movzx  eax,al
   140001f3d:	test   eax,eax
   140001f3f:	jne    0x140001fc6
   140001f45:	lea    rcx,[rsp+0xa0]
   140001f4d:	call   0x140003fc0
   140001f52:	movzx  eax,al
   140001f55:	test   eax,eax
   140001f57:	jne    0x140001fc6
   140001f59:	mov    edx,0x1f4
   140001f5e:	mov    rcx,QWORD PTR [rsp+0x90]
   140001f66:	call   QWORD PTR [rip+0x241cc]        # 0x140026138
   140001f6c:	mov    DWORD PTR [rsp+0x4c],eax
   140001f70:	cmp    DWORD PTR [rsp+0x4c],0x0
   140001f75:	jne    0x140001fb4
   140001f77:	mov    dl,0x1
   140001f79:	lea    rcx,[rip+0x25940]        # 0x1400278c0
   140001f80:	call   0x140017250
   140001f85:	mov    rax,QWORD PTR [rsp+0xa00]
   140001f8d:	add    rax,0x178
   140001f93:	xor    edx,edx
   140001f95:	mov    rcx,rax
   140001f98:	call   0x14001b880
   140001f9d:	lea    rdx,[rsp+0x1a0]
   140001fa5:	mov    rcx,QWORD PTR [rsp+0xa00]
   140001fad:	call   0x1400028d0
   140001fb2:	jmp    0x140001fc6
   140001fb4:	lea    rcx,[rsp+0xa0]
   140001fbc:	call   0x140003ec0
   140001fc1:	jmp    0x140001f2d
   140001fc6:	lea    rcx,[rsp+0xa0]
   140001fce:	call   0x140003fc0
   140001fd3:	movzx  eax,al
   140001fd6:	test   eax,eax
   140001fd8:	je     0x140002016
   140001fda:	mov    dl,0x1
   140001fdc:	lea    rcx,[rip+0x2592d]        # 0x140027910
   140001fe3:	call   0x140017250
   140001fe8:	mov    rax,QWORD PTR [rsp+0xa00]
   140001ff0:	add    rax,0x298
   140001ff6:	mov    rcx,rax
   140001ff9:	call   0x140005e30
   140001ffe:	mov    rcx,QWORD PTR [rsp+0xa00]
   140002006:	add    rcx,0x178
   14000200d:	mov    rdx,rax
   140002010:	call   0x14001cae0
   140002015:	nop
   140002016:	lea    rcx,[rsp+0x88]
   14000201e:	call   0x140020d34
   140002023:	jmp    0x14000203a
   140002025:	lea    rdx,[rsp+0x1a0]
   14000202d:	mov    rcx,QWORD PTR [rsp+0xa00]
   140002035:	call   0x1400028d0
   14000203a:	lea    rcx,[rsp+0xa0]
   140002042:	call   0x140003c60
   140002047:	movzx  eax,al
   14000204a:	test   eax,eax
   14000204c:	jne    0x140002090
   14000204e:	lea    rcx,[rsp+0xa0]
   140002056:	call   0x140003a10
   14000205b:	mov    BYTE PTR [rsp+0x30],0x0
   140002060:	lea    rcx,[rsp+0xa0]
   140002068:	call   0x1400035c0
   14000206d:	nop
   14000206e:	lea    rcx,[rsp+0x1a0]
   140002076:	call   0x140007f50
   14000207b:	nop
   14000207c:	lea    rcx,[rsp+0x40]
   140002081:	call   QWORD PTR [rip+0x24cd9]        # 0x140026d60
   140002087:	movzx  eax,BYTE PTR [rsp+0x30]
   14000208c:	jmp    0x140002101
   14000208e:	jmp    0x1400020d0
   140002090:	mov    rax,QWORD PTR [rsp+0xa00]
   140002098:	add    rax,0x178
   14000209e:	xor    edx,edx
   1400020a0:	mov    rcx,rax
   1400020a3:	call   0x14001b060
   1400020a8:	mov    rax,QWORD PTR [rsp+0xa00]
   1400020b0:	add    rax,0x178
   1400020b6:	mov    edx,0x1
   1400020bb:	mov    rcx,rax
   1400020be:	call   0x14001b450
   1400020c3:	mov    rcx,QWORD PTR [rsp+0xa00]
   1400020cb:	call   0x140002780
   1400020d0:	mov    BYTE PTR [rsp+0x31],0x1
   1400020d5:	lea    rcx,[rsp+0xa0]
   1400020dd:	call   0x1400035c0
   1400020e2:	nop
   1400020e3:	lea    rcx,[rsp+0x1a0]
   1400020eb:	call   0x140007f50
   1400020f0:	nop
   1400020f1:	lea    rcx,[rsp+0x40]
   1400020f6:	call   QWORD PTR [rip+0x24c64]        # 0x140026d60
   1400020fc:	movzx  eax,BYTE PTR [rsp+0x31]
   140002101:	mov    rcx,QWORD PTR [rsp+0x9e0]
   140002109:	xor    rcx,rsp
   14000210c:	call   0x140021890
   140002111:	add    rsp,0x9f0
   140002118:	pop    rdi
   140002119:	ret    
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	mov    QWORD PTR [rsp+0x8],rcx
   140002125:	sub    rsp,0x358
   14000212c:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140002135:	mov    BYTE PTR [rsp+0x20],0x0
   14000213a:	mov    rax,QWORD PTR [rsp+0x360]
   140002142:	add    rax,0x178
   140002148:	mov    rcx,rax
   14000214b:	call   0x14001b490
   140002150:	cmp    eax,0x1
   140002153:	jl     0x140002395
   140002159:	mov    rax,QWORD PTR [rsp+0x360]
   140002161:	add    rax,0x178
   140002167:	mov    rcx,rax
   14000216a:	call   0x14001b900
   14000216f:	cmp    eax,0x3
   140002172:	jne    0x140002181
   140002174:	mov    rcx,QWORD PTR [rsp+0x360]
   14000217c:	call   0x140002490
   140002181:	mov    rax,QWORD PTR [rsp+0x360]
   140002189:	add    rax,0x178
   14000218f:	mov    rcx,rax
   140002192:	call   0x14001c1d0
   140002197:	movzx  eax,al
   14000219a:	test   eax,eax
   14000219c:	je     0x140002395
   1400021a2:	mov    rax,QWORD PTR [rsp+0x360]
   1400021aa:	add    rax,0x178
   1400021b0:	mov    rcx,rax
   1400021b3:	call   0x14001b800
   1400021b8:	mov    rcx,rax
   1400021bb:	call   0x140018330
   1400021c0:	movzx  eax,al
   1400021c3:	test   eax,eax
   1400021c5:	je     0x1400021dd
   1400021c7:	mov    rcx,QWORD PTR [rsp+0x360]
   1400021cf:	call   0x1400023b0
   1400021d4:	mov    BYTE PTR [rsp+0x20],al
   1400021d8:	jmp    0x140002395
   1400021dd:	mov    rax,QWORD PTR [rsp+0x360]
   1400021e5:	add    rax,0x178
   1400021eb:	mov    QWORD PTR [rsp+0x30],rax
   1400021f0:	mov    rcx,QWORD PTR [rsp+0x360]
   1400021f8:	add    rcx,0x178
   1400021ff:	call   0x14001bce0
   140002204:	xor    r9d,r9d
   140002207:	mov    rcx,QWORD PTR [rsp+0x30]
   14000220c:	mov    r8,rcx
   14000220f:	mov    rdx,rax
   140002212:	lea    rcx,[rsp+0x40]
   140002217:	call   0x140007ca0
   14000221c:	nop
   14000221d:	lea    rcx,[rsp+0x40]
   140002222:	call   0x140020c0e
   140002227:	mov    QWORD PTR [rsp+0x28],rax
   14000222c:	mov    rax,QWORD PTR [rsp+0x360]
   140002234:	add    rax,0x178
   14000223a:	mov    edx,0x2
   14000223f:	mov    rcx,rax
   140002242:	call   0x14001b450
   140002247:	cmp    QWORD PTR [rsp+0x28],0x1
   14000224d:	jne    0x140002334
   140002253:	mov    rax,QWORD PTR [rsp+0x360]
   14000225b:	add    rax,0x178
   140002261:	mov    rcx,rax
   140002264:	call   0x14001ba40
   140002269:	movzx  eax,al
   14000226c:	test   eax,eax
   14000226e:	je     0x140002286
   140002270:	mov    rcx,QWORD PTR [rsp+0x360]
   140002278:	call   0x1400023b0
   14000227d:	mov    BYTE PTR [rsp+0x20],al
   140002281:	jmp    0x140002332
   140002286:	mov    rax,QWORD PTR [rsp+0x360]
   14000228e:	add    rax,0x178
   140002294:	mov    rcx,rax
   140002297:	call   0x14001ba90
   14000229c:	movzx  eax,al
   14000229f:	test   eax,eax
   1400022a1:	je     0x1400022df
   1400022a3:	mov    rax,QWORD PTR [rsp+0x360]
   1400022ab:	add    rax,0x298
   1400022b1:	mov    rcx,rax
   1400022b4:	call   0x140005e30
   1400022b9:	mov    rcx,QWORD PTR [rsp+0x360]
   1400022c1:	add    rcx,0x178
   1400022c8:	mov    rdx,rax
   1400022cb:	call   0x14001c470
   1400022d0:	mov    rcx,QWORD PTR [rsp+0x360]
   1400022d8:	call   0x140002490
   1400022dd:	jmp    0x140002332
   1400022df:	mov    rax,QWORD PTR [rsp+0x360]
   1400022e7:	add    rax,0x178
   1400022ed:	mov    rcx,rax
   1400022f0:	call   0x14001bae0
   1400022f5:	movzx  eax,al
   1400022f8:	test   eax,eax
   1400022fa:	je     0x140002332
   1400022fc:	mov    rax,QWORD PTR [rsp+0x360]
   140002304:	add    rax,0x178
   14000230a:	mov    rcx,rax
   14000230d:	call   0x14001bb30
   140002312:	cmp    eax,0xffffffff
   140002315:	jne    0x140002332
   140002317:	mov    rax,QWORD PTR [rsp+0x360]
   14000231f:	add    rax,0x178
   140002325:	mov    edx,0xffffffff
   14000232a:	mov    rcx,rax
   14000232d:	call   0x14001bb60
   140002332:	jmp    0x14000238b
   140002334:	mov    rcx,QWORD PTR [rsp+0x360]
   14000233c:	call   0x140002780
   140002341:	mov    rax,QWORD PTR [rsp+0x360]
   140002349:	add    rax,0x178
   14000234f:	mov    edx,0xffffffff
   140002354:	mov    rcx,rax
   140002357:	call   0x14001bb60
   14000235c:	mov    rax,QWORD PTR [rsp+0x360]
   140002364:	add    rax,0x178
   14000236a:	mov    dl,0x1
   14000236c:	mov    rcx,rax
   14000236f:	call   0x14001b060
   140002374:	mov    rax,QWORD PTR [rsp+0x360]
   14000237c:	add    rax,0x178
   140002382:	mov    rcx,rax
   140002385:	call   0x14001b030
   14000238a:	nop
   14000238b:	lea    rcx,[rsp+0x40]
   140002390:	call   0x140007d10
   140002395:	movzx  eax,BYTE PTR [rsp+0x20]
   14000239a:	add    rsp,0x358
   1400023a1:	ret    
   1400023a2:	int3   
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400023b5:	sub    rsp,0x48
   1400023b9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400023c2:	mov    BYTE PTR [rsp+0x20],0x0
   1400023c7:	mov    rax,QWORD PTR [rsp+0x50]
   1400023cc:	add    rax,0x178
   1400023d2:	mov    rdx,rax
   1400023d5:	lea    rcx,[rsp+0x28]
   1400023da:	call   0x1400055c0
   1400023df:	nop
   1400023e0:	lea    rcx,[rsp+0x28]
   1400023e5:	call   0x140005600
   1400023ea:	movzx  eax,al
   1400023ed:	test   eax,eax
   1400023ef:	je     0x14000241a
   1400023f1:	mov    rax,QWORD PTR [rsp+0x50]
   1400023f6:	add    rax,0x178
   1400023fc:	mov    edx,0x3
   140002401:	mov    rcx,rax
   140002404:	call   0x14001b450
   140002409:	mov    rcx,QWORD PTR [rsp+0x50]
   14000240e:	call   0x140002780
   140002413:	mov    BYTE PTR [rsp+0x20],0x1
   140002418:	jmp    0x14000245e
   14000241a:	mov    rax,QWORD PTR [rsp+0x50]
   14000241f:	add    rax,0x178
   140002425:	mov    edx,0x2
   14000242a:	mov    rcx,rax
   14000242d:	call   0x14001b450
   140002432:	mov    rcx,QWORD PTR [rsp+0x50]
   140002437:	call   0x140002780
   14000243c:	mov    rax,QWORD PTR [rsp+0x50]
   140002441:	add    rax,0x178
   140002447:	mov    rcx,rax
   14000244a:	call   0x14001b900
   14000244f:	cmp    eax,0x3
   140002452:	jne    0x14000245e
   140002454:	mov    rcx,QWORD PTR [rsp+0x50]
   140002459:	call   0x140002490
   14000245e:	movzx  eax,BYTE PTR [rsp+0x20]
   140002463:	mov    BYTE PTR [rsp+0x21],al
   140002467:	lea    rcx,[rsp+0x28]
   14000246c:	call   0x1400055f0
   140002471:	movzx  eax,BYTE PTR [rsp+0x21]
   140002476:	add    rsp,0x48
   14000247a:	ret    
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	int3   
   140002481:	int3   
   140002482:	int3   
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	mov    QWORD PTR [rsp+0x8],rcx
   140002495:	push   rdi
   140002496:	sub    rsp,0x2c0
   14000249d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   1400024a9:	mov    rax,QWORD PTR [rip+0x38da0]        # 0x14003b250
   1400024b0:	xor    rax,rsp
   1400024b3:	mov    QWORD PTR [rsp+0x2b0],rax
   1400024bb:	mov    dl,0x1
   1400024bd:	lea    rcx,[rip+0x24fdc]        # 0x1400274a0
   1400024c4:	call   0x140017250
   1400024c9:	mov    QWORD PTR [rsp+0x50],0xffffffff80000001
   1400024d2:	mov    QWORD PTR [rsp+0x48],0x0
   1400024db:	lea    r8,[rsp+0x48]
   1400024e0:	lea    rdx,[rip+0x25969]        # 0x140027e50
   1400024e7:	mov    rcx,QWORD PTR [rsp+0x50]
   1400024ec:	call   QWORD PTR [rip+0x23b76]        # 0x140026068
   1400024f2:	mov    DWORD PTR [rsp+0x38],eax
   1400024f6:	xor    eax,eax
   1400024f8:	mov    WORD PTR [rsp+0xa0],ax
   140002500:	lea    rax,[rsp+0xa2]
   140002508:	mov    rdi,rax
   14000250b:	xor    eax,eax
   14000250d:	mov    ecx,0x206
   140002512:	rep stos BYTE PTR es:[rdi],al
   140002514:	mov    r8d,0x104
   14000251a:	lea    rdx,[rsp+0xa0]
   140002522:	xor    ecx,ecx
   140002524:	call   QWORD PTR [rip+0x23c06]        # 0x140026130
   14000252a:	lea    rdx,[rip+0x24fa3]        # 0x1400274d4
   140002531:	lea    rcx,[rsp+0x30]
   140002536:	call   QWORD PTR [rip+0x2482c]        # 0x140026d68
   14000253c:	nop
   14000253d:	lea    rdx,[rsp+0xa0]
   140002545:	lea    rcx,[rsp+0x30]
   14000254a:	call   QWORD PTR [rip+0x24800]        # 0x140026d50
   140002550:	lea    rdx,[rip+0x24f81]        # 0x1400274d8
   140002557:	lea    rcx,[rsp+0x30]
   14000255c:	call   QWORD PTR [rip+0x247ee]        # 0x140026d50
   140002562:	lea    rdx,[rip+0x24f73]        # 0x1400274dc
   140002569:	lea    rcx,[rsp+0x30]
   14000256e:	call   QWORD PTR [rip+0x247dc]        # 0x140026d50
   140002574:	mov    rax,QWORD PTR [rsp+0x2d0]
   14000257c:	add    rax,0x298
   140002582:	mov    rcx,rax
   140002585:	call   0x140005e30
   14000258a:	mov    rdx,rax
   14000258d:	lea    rcx,[rsp+0x30]
   140002592:	call   QWORD PTR [rip+0x247b8]        # 0x140026d50
   140002598:	lea    rdx,[rip+0x24f45]        # 0x1400274e4
   14000259f:	lea    rcx,[rsp+0x30]
   1400025a4:	call   QWORD PTR [rip+0x247a6]        # 0x140026d50
   1400025aa:	lea    rdx,[rip+0x24f37]        # 0x1400274e8
   1400025b1:	lea    rcx,[rsp+0x30]
   1400025b6:	call   QWORD PTR [rip+0x24794]        # 0x140026d50
   1400025bc:	lea    rdx,[rip+0x24f3d]        # 0x140027500
   1400025c3:	lea    rcx,[rsp+0x30]
   1400025c8:	call   QWORD PTR [rip+0x24782]        # 0x140026d50
   1400025ce:	mov    rax,QWORD PTR [rsp+0x2d0]
   1400025d6:	add    rax,0x298
   1400025dc:	mov    rcx,rax
   1400025df:	call   0x140005e80
   1400025e4:	mov    rdx,rax
   1400025e7:	lea    rcx,[rsp+0x30]
   1400025ec:	call   QWORD PTR [rip+0x2475e]        # 0x140026d50
   1400025f2:	lea    rdx,[rip+0x24f1f]        # 0x140027518
   1400025f9:	lea    rcx,[rsp+0x30]
   1400025fe:	call   QWORD PTR [rip+0x2474c]        # 0x140026d50
   140002604:	mov    rax,QWORD PTR [rsp+0x2d0]
   14000260c:	add    rax,0x178
   140002612:	lea    rdx,[rsp+0x70]
   140002617:	mov    rcx,rax
   14000261a:	call   0x14001b500
   14000261f:	mov    QWORD PTR [rsp+0x80],rax
   140002627:	mov    rax,QWORD PTR [rsp+0x80]
   14000262f:	mov    QWORD PTR [rsp+0x58],rax
   140002634:	mov    rax,QWORD PTR [rsp+0x2d0]
   14000263c:	add    rax,0x178
   140002642:	mov    rcx,rax
   140002645:	call   0x14001b560
   14000264a:	mov    r8,QWORD PTR [rsp+0x58]
   14000264f:	mov    rdx,rax
   140002652:	lea    rcx,[rsp+0x40]
   140002657:	call   0x140002c90
   14000265c:	nop
   14000265d:	lea    rcx,[rsp+0x70]
   140002662:	call   QWORD PTR [rip+0x246f8]        # 0x140026d60
   140002668:	lea    r8,[rsp+0x40]
   14000266d:	lea    rdx,[rip+0x24eac]        # 0x140027520
   140002674:	lea    rcx,[rsp+0x68]
   140002679:	call   0x140002c90
   14000267e:	mov    QWORD PTR [rsp+0x88],rax
   140002686:	mov    rax,QWORD PTR [rsp+0x88]
   14000268e:	mov    QWORD PTR [rsp+0x60],rax
   140002693:	mov    rdx,QWORD PTR [rsp+0x60]
   140002698:	lea    rcx,[rsp+0x40]
   14000269d:	call   QWORD PTR [rip+0x246b5]        # 0x140026d58
   1400026a3:	nop
   1400026a4:	lea    rcx,[rsp+0x68]
   1400026a9:	call   QWORD PTR [rip+0x246b1]        # 0x140026d60
   1400026af:	cmp    DWORD PTR [rsp+0x38],0x0
   1400026b4:	jne    0x140002733
   1400026b6:	lea    rcx,[rsp+0x30]
   1400026bb:	call   QWORD PTR [rip+0x246df]        # 0x140026da0
   1400026c1:	inc    eax
   1400026c3:	cdqe   
   1400026c5:	shl    rax,1
   1400026c8:	mov    DWORD PTR [rsp+0x3c],eax
   1400026cc:	mov    edx,DWORD PTR [rsp+0x3c]
   1400026d0:	lea    rcx,[rsp+0x30]
   1400026d5:	call   QWORD PTR [rip+0x246cd]        # 0x140026da8
   1400026db:	mov    QWORD PTR [rsp+0x78],rax
   1400026e0:	lea    rcx,[rsp+0x40]
   1400026e5:	call   QWORD PTR [rip+0x246c5]        # 0x140026db0
   1400026eb:	mov    ecx,DWORD PTR [rsp+0x3c]
   1400026ef:	mov    DWORD PTR [rsp+0x28],ecx
   1400026f3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400026f8:	mov    QWORD PTR [rsp+0x20],rcx
   1400026fd:	mov    r9d,0x1
   140002703:	xor    r8d,r8d
   140002706:	mov    rdx,rax
   140002709:	mov    rcx,QWORD PTR [rsp+0x48]
   14000270e:	call   QWORD PTR [rip+0x23904]        # 0x140026018
   140002714:	mov    DWORD PTR [rsp+0x38],eax
   140002718:	mov    edx,0xffffffff
   14000271d:	lea    rcx,[rsp+0x30]
   140002722:	call   QWORD PTR [rip+0x24670]        # 0x140026d98
   140002728:	mov    rcx,QWORD PTR [rsp+0x48]
   14000272d:	call   QWORD PTR [rip+0x238cd]        # 0x140026000
   140002733:	mov    rcx,QWORD PTR [rsp+0x50]
   140002738:	call   QWORD PTR [rip+0x238c2]        # 0x140026000
   14000273e:	nop
   14000273f:	lea    rcx,[rsp+0x40]
   140002744:	call   QWORD PTR [rip+0x24616]        # 0x140026d60
   14000274a:	nop
   14000274b:	lea    rcx,[rsp+0x30]
   140002750:	call   QWORD PTR [rip+0x2460a]        # 0x140026d60
   140002756:	mov    rcx,QWORD PTR [rsp+0x2b0]
   14000275e:	xor    rcx,rsp
   140002761:	call   0x140021890
   140002766:	add    rsp,0x2c0
   14000276d:	pop    rdi
   14000276e:	ret    
   14000276f:	int3   
   140002770:	int3   
   140002771:	int3   
   140002772:	int3   
   140002773:	int3   
   140002774:	int3   
   140002775:	int3   
   140002776:	int3   
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    QWORD PTR [rsp+0x8],rcx
   140002785:	sub    rsp,0x88
   14000278c:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140002795:	mov    dl,0x1
   140002797:	lea    rcx,[rip+0x24d8a]        # 0x140027528
   14000279e:	call   0x140017250
   1400027a3:	mov    QWORD PTR [rsp+0x38],0xffffffff80000001
   1400027ac:	mov    QWORD PTR [rsp+0x30],0x0
   1400027b5:	lea    r8,[rsp+0x30]
   1400027ba:	lea    rdx,[rip+0x256ef]        # 0x140027eb0
   1400027c1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400027c6:	call   QWORD PTR [rip+0x23844]        # 0x140026010
   1400027cc:	mov    DWORD PTR [rsp+0x20],eax
   1400027d0:	mov    rax,QWORD PTR [rsp+0x90]
   1400027d8:	add    rax,0x178
   1400027de:	lea    rdx,[rsp+0x58]
   1400027e3:	mov    rcx,rax
   1400027e6:	call   0x14001b500
   1400027eb:	mov    QWORD PTR [rsp+0x68],rax
   1400027f0:	mov    rax,QWORD PTR [rsp+0x68]
   1400027f5:	mov    QWORD PTR [rsp+0x40],rax
   1400027fa:	mov    rax,QWORD PTR [rsp+0x90]
   140002802:	add    rax,0x178
   140002808:	mov    rcx,rax
   14000280b:	call   0x14001b560
   140002810:	mov    r8,QWORD PTR [rsp+0x40]
   140002815:	mov    rdx,rax
   140002818:	lea    rcx,[rsp+0x28]
   14000281d:	call   0x140002c90
   140002822:	nop
   140002823:	lea    rcx,[rsp+0x58]
   140002828:	call   QWORD PTR [rip+0x24532]        # 0x140026d60
   14000282e:	lea    r8,[rsp+0x28]
   140002833:	lea    rdx,[rip+0x24d26]        # 0x140027560
   14000283a:	lea    rcx,[rsp+0x60]
   14000283f:	call   0x140002c90
   140002844:	mov    QWORD PTR [rsp+0x48],rax
   140002849:	mov    rax,QWORD PTR [rsp+0x48]
   14000284e:	mov    QWORD PTR [rsp+0x50],rax
   140002853:	mov    rdx,QWORD PTR [rsp+0x50]
   140002858:	lea    rcx,[rsp+0x28]
   14000285d:	call   QWORD PTR [rip+0x244f5]        # 0x140026d58
   140002863:	nop
   140002864:	lea    rcx,[rsp+0x60]
   140002869:	call   QWORD PTR [rip+0x244f1]        # 0x140026d60
   14000286f:	cmp    DWORD PTR [rsp+0x20],0x0
   140002874:	jne    0x14000289e
   140002876:	lea    rcx,[rsp+0x28]
   14000287b:	call   QWORD PTR [rip+0x2452f]        # 0x140026db0
   140002881:	mov    rdx,rax
   140002884:	mov    rcx,QWORD PTR [rsp+0x30]
   140002889:	call   QWORD PTR [rip+0x23779]        # 0x140026008
   14000288f:	mov    DWORD PTR [rsp+0x20],eax
   140002893:	mov    rcx,QWORD PTR [rsp+0x30]
   140002898:	call   QWORD PTR [rip+0x23762]        # 0x140026000
   14000289e:	mov    rcx,QWORD PTR [rsp+0x38]
   1400028a3:	call   QWORD PTR [rip+0x23757]        # 0x140026000
   1400028a9:	nop
   1400028aa:	lea    rcx,[rsp+0x28]
   1400028af:	call   QWORD PTR [rip+0x244ab]        # 0x140026d60
   1400028b5:	add    rsp,0x88
   1400028bc:	ret    
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	int3   
   1400028c1:	int3   
   1400028c2:	int3   
   1400028c3:	int3   
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400028d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400028da:	sub    rsp,0x28
   1400028de:	mov    dl,0x1
   1400028e0:	lea    rcx,[rip+0x24fb1]        # 0x140027898
   1400028e7:	call   0x140017250
   1400028ec:	mov    rax,QWORD PTR [rsp+0x38]
   1400028f1:	mov    rax,QWORD PTR [rax]
   1400028f4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400028f9:	call   QWORD PTR [rax+0x2f0]
   1400028ff:	cmp    rax,0x2
   140002903:	jne    0x140002924
   140002905:	mov    rax,QWORD PTR [rsp+0x30]
   14000290a:	add    rax,0x178
   140002910:	mov    dl,0x1
   140002912:	mov    rcx,rax
   140002915:	call   0x14001b060
   14000291a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000291f:	call   0x140002780
   140002924:	add    rsp,0x28
   140002928:	ret    
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	mov    QWORD PTR [rsp+0x10],rdx
   140002935:	mov    QWORD PTR [rsp+0x8],rcx
   14000293a:	sub    rsp,0x58
   14000293e:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140002947:	mov    DWORD PTR [rsp+0x20],0x0
   14000294f:	mov    rax,QWORD PTR [rsp+0x60]
   140002954:	add    rax,0x178
   14000295a:	lea    rdx,[rsp+0x38]
   14000295f:	mov    rcx,rax
   140002962:	call   0x14001b500
   140002967:	mov    QWORD PTR [rsp+0x28],rax
   14000296c:	mov    rax,QWORD PTR [rsp+0x28]
   140002971:	mov    QWORD PTR [rsp+0x30],rax
   140002976:	mov    r8,QWORD PTR [rsp+0x30]
   14000297b:	lea    rdx,[rip+0x24be6]        # 0x140027568
   140002982:	mov    rcx,QWORD PTR [rsp+0x68]
   140002987:	call   0x140002c90
   14000298c:	mov    eax,DWORD PTR [rsp+0x20]
   140002990:	or     eax,0x1
   140002993:	mov    DWORD PTR [rsp+0x20],eax
   140002997:	lea    rcx,[rsp+0x38]
   14000299c:	call   QWORD PTR [rip+0x243be]        # 0x140026d60
   1400029a2:	mov    rax,QWORD PTR [rsp+0x68]
   1400029a7:	add    rsp,0x58
   1400029ab:	ret    
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	int3   
   1400029b1:	int3   
   1400029b2:	int3   
   1400029b3:	int3   
   1400029b4:	int3   
   1400029b5:	int3   
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	int3   
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	int3   
   1400029bd:	int3   
   1400029be:	int3   
   1400029bf:	int3   
   1400029c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400029c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400029ca:	sub    rsp,0x58
   1400029ce:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400029d7:	mov    DWORD PTR [rsp+0x20],0x0
   1400029df:	mov    rax,QWORD PTR [rsp+0x60]
   1400029e4:	add    rax,0x178
   1400029ea:	lea    rdx,[rsp+0x38]
   1400029ef:	mov    rcx,rax
   1400029f2:	call   0x14001b500
   1400029f7:	mov    QWORD PTR [rsp+0x28],rax
   1400029fc:	mov    rax,QWORD PTR [rsp+0x28]
   140002a01:	mov    QWORD PTR [rsp+0x30],rax
   140002a06:	mov    r8,QWORD PTR [rsp+0x30]
   140002a0b:	lea    rdx,[rip+0x24b6e]        # 0x140027580
   140002a12:	mov    rcx,QWORD PTR [rsp+0x68]
   140002a17:	call   0x140002c90
   140002a1c:	mov    eax,DWORD PTR [rsp+0x20]
   140002a20:	or     eax,0x1
   140002a23:	mov    DWORD PTR [rsp+0x20],eax
   140002a27:	lea    rcx,[rsp+0x38]
   140002a2c:	call   QWORD PTR [rip+0x2432e]        # 0x140026d60
   140002a32:	mov    rax,QWORD PTR [rsp+0x68]
   140002a37:	add    rsp,0x58
   140002a3b:	ret    
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	int3   
   140002a41:	int3   
   140002a42:	int3   
   140002a43:	int3   
   140002a44:	int3   
   140002a45:	int3   
   140002a46:	int3   
   140002a47:	int3   
   140002a48:	int3   
   140002a49:	int3   
   140002a4a:	int3   
   140002a4b:	int3   
   140002a4c:	int3   
   140002a4d:	int3   
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	lea    rax,[rip+0x253e1]        # 0x140027e38
   140002a57:	ret    
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	mov    QWORD PTR [rsp+0x8],rcx
   140002a65:	sub    rsp,0x28
   140002a69:	call   0x140002a50
   140002a6e:	add    rsp,0x28
   140002a72:	ret    
   140002a73:	int3   
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    QWORD PTR [rsp+0x8],rcx
   140002a85:	mov    rax,QWORD PTR [rsp+0x8]
   140002a8a:	mov    QWORD PTR [rax],0x0
   140002a91:	mov    rax,QWORD PTR [rsp+0x8]
   140002a96:	ret    
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	mov    QWORD PTR [rsp+0x10],rdx
   140002aa5:	mov    QWORD PTR [rsp+0x8],rcx
   140002aaa:	sub    rsp,0x28
   140002aae:	mov    rax,QWORD PTR [rsp+0x30]
   140002ab3:	xorps  xmm0,xmm0
   140002ab6:	movsd  QWORD PTR [rax],xmm0
   140002aba:	mov    rax,QWORD PTR [rsp+0x30]
   140002abf:	mov    DWORD PTR [rax+0x8],0x0
   140002ac6:	lea    rdx,[rsp+0x38]
   140002acb:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ad0:	call   0x140002bc0
   140002ad5:	mov    rax,QWORD PTR [rsp+0x30]
   140002ada:	add    rsp,0x28
   140002ade:	ret    
   140002adf:	int3   
   140002ae0:	mov    QWORD PTR [rsp+0x10],rdx
   140002ae5:	mov    QWORD PTR [rsp+0x8],rcx
   140002aea:	mov    rax,QWORD PTR [rsp+0x8]
   140002aef:	mov    rcx,QWORD PTR [rsp+0x10]
   140002af4:	mov    QWORD PTR [rax],rcx
   140002af7:	mov    rax,QWORD PTR [rsp+0x8]
   140002afc:	ret    
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    QWORD PTR [rsp+0x8],rcx
   140002b05:	sub    rsp,0x28
   140002b09:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b0e:	call   0x140020d40
   140002b13:	add    rsp,0x28
   140002b17:	ret    
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	mov    QWORD PTR [rsp+0x8],rcx
   140002b25:	sub    rsp,0x38
   140002b29:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002b32:	mov    rax,QWORD PTR [rsp+0x40]
   140002b37:	add    rax,0x60
   140002b3b:	mov    rcx,rax
   140002b3e:	call   QWORD PTR [rip+0x2421c]        # 0x140026d60
   140002b44:	nop
   140002b45:	mov    rax,QWORD PTR [rsp+0x40]
   140002b4a:	add    rax,0x58
   140002b4e:	mov    rcx,rax
   140002b51:	call   QWORD PTR [rip+0x24209]        # 0x140026d60
   140002b57:	nop
   140002b58:	mov    rax,QWORD PTR [rsp+0x40]
   140002b5d:	add    rax,0x48
   140002b61:	mov    rcx,rax
   140002b64:	call   QWORD PTR [rip+0x241f6]        # 0x140026d60
   140002b6a:	nop
   140002b6b:	mov    rcx,QWORD PTR [rsp+0x40]
   140002b70:	call   0x140020c38
   140002b75:	add    rsp,0x38
   140002b79:	ret    
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    QWORD PTR [rsp+0x8],rcx
   140002b85:	sub    rsp,0x28
   140002b89:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b8e:	call   0x140020b9c
   140002b93:	add    rsp,0x28
   140002b97:	ret    
   140002b98:	int3   
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ba5:	sub    rsp,0x28
   140002ba9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002bae:	call   0x140020b90
   140002bb3:	add    rsp,0x28
   140002bb7:	ret    
   140002bb8:	int3   
   140002bb9:	int3   
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	mov    QWORD PTR [rsp+0x10],rdx
   140002bc5:	mov    QWORD PTR [rsp+0x8],rcx
   140002bca:	sub    rsp,0x58
   140002bce:	mov    rax,QWORD PTR [rip+0x3867b]        # 0x14003b250
   140002bd5:	xor    rax,rsp
   140002bd8:	mov    QWORD PTR [rsp+0x40],rax
   140002bdd:	mov    rax,QWORD PTR [rsp+0x68]
   140002be2:	mov    rdx,QWORD PTR [rax]
   140002be5:	lea    rcx,[rsp+0x28]
   140002bea:	call   0x140002ae0
   140002bef:	lea    rdx,[rsp+0x30]
   140002bf4:	lea    rcx,[rsp+0x28]
   140002bf9:	call   0x140003190
   140002bfe:	movzx  eax,al
   140002c01:	test   eax,eax
   140002c03:	je     0x140002c22
   140002c05:	lea    rdx,[rsp+0x30]
   140002c0a:	mov    rcx,QWORD PTR [rsp+0x60]
   140002c0f:	call   0x140002f20
   140002c14:	test   eax,eax
   140002c16:	je     0x140002c22
   140002c18:	mov    DWORD PTR [rsp+0x20],0x0
   140002c20:	jmp    0x140002c2a
   140002c22:	mov    DWORD PTR [rsp+0x20],0x1
   140002c2a:	mov    rax,QWORD PTR [rsp+0x60]
   140002c2f:	mov    ecx,DWORD PTR [rsp+0x20]
   140002c33:	mov    DWORD PTR [rax+0x8],ecx
   140002c36:	mov    rax,QWORD PTR [rsp+0x60]
   140002c3b:	mov    rcx,QWORD PTR [rsp+0x40]
   140002c40:	xor    rcx,rsp
   140002c43:	call   0x140021890
   140002c48:	add    rsp,0x58
   140002c4c:	ret    
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	mov    QWORD PTR [rsp+0x10],rdx
   140002c55:	mov    QWORD PTR [rsp+0x8],rcx
   140002c5a:	sub    rsp,0x38
   140002c5e:	mov    rdx,QWORD PTR [rsp+0x48]
   140002c63:	mov    rcx,QWORD PTR [rsp+0x40]
   140002c68:	call   QWORD PTR [rip+0x240d2]        # 0x140026d40
   140002c6e:	test   eax,eax
   140002c70:	jne    0x140002c7c
   140002c72:	mov    DWORD PTR [rsp+0x20],0x1
   140002c7a:	jmp    0x140002c84
   140002c7c:	mov    DWORD PTR [rsp+0x20],0x0
   140002c84:	movzx  eax,BYTE PTR [rsp+0x20]
   140002c89:	add    rsp,0x38
   140002c8d:	ret    
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	mov    QWORD PTR [rsp+0x18],r8
   140002c95:	mov    QWORD PTR [rsp+0x10],rdx
   140002c9a:	mov    QWORD PTR [rsp+0x8],rcx
   140002c9f:	sub    rsp,0x58
   140002ca3:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140002cac:	mov    DWORD PTR [rsp+0x30],0x0
   140002cb4:	mov    rcx,QWORD PTR [rsp+0x70]
   140002cb9:	call   QWORD PTR [rip+0x24089]        # 0x140026d48
   140002cbf:	mov    rdx,rax
   140002cc2:	lea    rcx,[rsp+0x38]
   140002cc7:	call   QWORD PTR [rip+0x240ab]        # 0x140026d78
   140002ccd:	nop
   140002cce:	mov    rcx,QWORD PTR [rsp+0x70]
   140002cd3:	call   QWORD PTR [rip+0x240c7]        # 0x140026da0
   140002cd9:	mov    DWORD PTR [rsp+0x34],eax
   140002cdd:	mov    rcx,QWORD PTR [rsp+0x70]
   140002ce2:	call   QWORD PTR [rip+0x240c8]        # 0x140026db0
   140002ce8:	mov    QWORD PTR [rsp+0x40],rax
   140002ced:	mov    rcx,QWORD PTR [rsp+0x68]
   140002cf2:	call   QWORD PTR [rip+0x24098]        # 0x140026d90
   140002cf8:	mov    ecx,DWORD PTR [rsp+0x34]
   140002cfc:	mov    DWORD PTR [rsp+0x20],ecx
   140002d00:	mov    rcx,QWORD PTR [rsp+0x40]
   140002d05:	mov    r9,rcx
   140002d08:	mov    r8d,eax
   140002d0b:	mov    rdx,QWORD PTR [rsp+0x68]
   140002d10:	lea    rcx,[rsp+0x38]
   140002d15:	call   QWORD PTR [rip+0x2406d]        # 0x140026d88
   140002d1b:	lea    rdx,[rsp+0x38]
   140002d20:	mov    rcx,QWORD PTR [rsp+0x60]
   140002d25:	call   QWORD PTR [rip+0x24045]        # 0x140026d70
   140002d2b:	mov    eax,DWORD PTR [rsp+0x30]
   140002d2f:	or     eax,0x1
   140002d32:	mov    DWORD PTR [rsp+0x30],eax
   140002d36:	lea    rcx,[rsp+0x38]
   140002d3b:	call   QWORD PTR [rip+0x2401f]        # 0x140026d60
   140002d41:	mov    rax,QWORD PTR [rsp+0x60]
   140002d46:	add    rsp,0x58
   140002d4a:	ret    
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	mov    DWORD PTR [rsp+0x10],edx
   140002d54:	mov    QWORD PTR [rsp+0x8],rcx
   140002d59:	sub    rsp,0x28
   140002d5d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002d62:	call   0x140001470
   140002d67:	mov    eax,DWORD PTR [rsp+0x38]
   140002d6b:	and    eax,0x1
   140002d6e:	test   eax,eax
   140002d70:	je     0x140002d7c
   140002d72:	mov    rcx,QWORD PTR [rsp+0x30]
   140002d77:	call   0x140002ba0
   140002d7c:	mov    rax,QWORD PTR [rsp+0x30]
   140002d81:	add    rsp,0x28
   140002d85:	ret    
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	mov    QWORD PTR [rsp+0x10],rdx
   140002d95:	mov    QWORD PTR [rsp+0x8],rcx
   140002d9a:	sub    rsp,0x58
   140002d9e:	mov    rax,QWORD PTR [rip+0x384ab]        # 0x14003b250
   140002da5:	xor    rax,rsp
   140002da8:	mov    QWORD PTR [rsp+0x48],rax
   140002dad:	cmp    QWORD PTR [rsp+0x68],0x0
   140002db3:	je     0x140002dbf
   140002db5:	mov    DWORD PTR [rsp+0x2c],0x1
   140002dbd:	jmp    0x140002dc7
   140002dbf:	mov    DWORD PTR [rsp+0x2c],0x0
   140002dc7:	mov    eax,DWORD PTR [rsp+0x2c]
   140002dcb:	mov    DWORD PTR [rsp+0x30],eax
   140002dcf:	xor    eax,eax
   140002dd1:	test   eax,eax
   140002dd3:	jne    0x140002dcf
   140002dd5:	cmp    DWORD PTR [rsp+0x30],0x0
   140002dda:	jne    0x140002de6
   140002ddc:	mov    ecx,0x80004005
   140002de1:	call   0x140002ef0
   140002de6:	xor    eax,eax
   140002de8:	test   eax,eax
   140002dea:	jne    0x140002dad
   140002dec:	mov    rdx,QWORD PTR [rsp+0x68]
   140002df1:	mov    rcx,QWORD PTR [rsp+0x60]
   140002df6:	call   QWORD PTR [rip+0x236dc]        # 0x1400264d8
   140002dfc:	mov    DWORD PTR [rsp+0x20],eax
   140002e00:	mov    r8d,0x10
   140002e06:	xor    edx,edx
   140002e08:	lea    rcx,[rsp+0x38]
   140002e0d:	call   0x1400216e0
   140002e12:	cmp    DWORD PTR [rsp+0x20],0x0
   140002e17:	je     0x140002e3b
   140002e19:	lea    rdx,[rsp+0x38]
   140002e1e:	mov    rax,QWORD PTR [rsp+0x68]
   140002e23:	movsd  xmm0,QWORD PTR [rax]
   140002e27:	call   QWORD PTR [rip+0x236a3]        # 0x1400264d0
   140002e2d:	test   eax,eax
   140002e2f:	je     0x140002e3b
   140002e31:	mov    DWORD PTR [rsp+0x24],0x1
   140002e39:	jmp    0x140002e43
   140002e3b:	mov    DWORD PTR [rsp+0x24],0x0
   140002e43:	mov    eax,DWORD PTR [rsp+0x24]
   140002e47:	mov    DWORD PTR [rsp+0x20],eax
   140002e4b:	cmp    DWORD PTR [rsp+0x20],0x0
   140002e50:	je     0x140002ec7
   140002e52:	mov    rax,QWORD PTR [rsp+0x60]
   140002e57:	movzx  eax,WORD PTR [rax]
   140002e5a:	movzx  ecx,WORD PTR [rsp+0x38]
   140002e5f:	cmp    eax,ecx
   140002e61:	jne    0x140002ec7
   140002e63:	mov    rax,QWORD PTR [rsp+0x60]
   140002e68:	movzx  eax,WORD PTR [rax+0x2]
   140002e6c:	movzx  ecx,WORD PTR [rsp+0x3a]
   140002e71:	cmp    eax,ecx
   140002e73:	jne    0x140002ec7
   140002e75:	mov    rax,QWORD PTR [rsp+0x60]
   140002e7a:	movzx  eax,WORD PTR [rax+0x6]
   140002e7e:	movzx  ecx,WORD PTR [rsp+0x3e]
   140002e83:	cmp    eax,ecx
   140002e85:	jne    0x140002ec7
   140002e87:	mov    rax,QWORD PTR [rsp+0x60]
   140002e8c:	movzx  eax,WORD PTR [rax+0x8]
   140002e90:	movzx  ecx,WORD PTR [rsp+0x40]
   140002e95:	cmp    eax,ecx
   140002e97:	jne    0x140002ec7
   140002e99:	mov    rax,QWORD PTR [rsp+0x60]
   140002e9e:	movzx  eax,WORD PTR [rax+0xa]
   140002ea2:	movzx  ecx,WORD PTR [rsp+0x42]
   140002ea7:	cmp    eax,ecx
   140002ea9:	jne    0x140002ec7
   140002eab:	mov    rax,QWORD PTR [rsp+0x60]
   140002eb0:	movzx  eax,WORD PTR [rax+0xc]
   140002eb4:	movzx  ecx,WORD PTR [rsp+0x44]
   140002eb9:	cmp    eax,ecx
   140002ebb:	jne    0x140002ec7
   140002ebd:	mov    DWORD PTR [rsp+0x28],0x1
   140002ec5:	jmp    0x140002ecf
   140002ec7:	mov    DWORD PTR [rsp+0x28],0x0
   140002ecf:	mov    eax,DWORD PTR [rsp+0x28]
   140002ed3:	mov    DWORD PTR [rsp+0x20],eax
   140002ed7:	mov    eax,DWORD PTR [rsp+0x20]
   140002edb:	mov    rcx,QWORD PTR [rsp+0x48]
   140002ee0:	xor    rcx,rsp
   140002ee3:	call   0x140021890
   140002ee8:	add    rsp,0x58
   140002eec:	ret    
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    DWORD PTR [rsp+0x8],ecx
   140002ef4:	sub    rsp,0x28
   140002ef8:	cmp    DWORD PTR [rsp+0x30],0x8007000e
   140002f00:	jne    0x140002f09
   140002f02:	call   0x140020ba2
   140002f07:	jmp    0x140002f12
   140002f09:	mov    ecx,DWORD PTR [rsp+0x30]
   140002f0d:	call   0x140020ba8
   140002f12:	add    rsp,0x28
   140002f16:	ret    
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    QWORD PTR [rsp+0x10],rdx
   140002f25:	mov    QWORD PTR [rsp+0x8],rcx
   140002f2a:	sub    rsp,0x28
   140002f2e:	mov    rax,QWORD PTR [rsp+0x30]
   140002f33:	mov    rdx,rax
   140002f36:	mov    rcx,QWORD PTR [rsp+0x38]
   140002f3b:	call   0x140002d90
   140002f40:	add    rsp,0x28
   140002f44:	ret    
   140002f45:	int3   
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	mov    DWORD PTR [rsp+0x20],r9d
   140002f55:	mov    DWORD PTR [rsp+0x18],r8d
   140002f5a:	mov    QWORD PTR [rsp+0x10],rdx
   140002f5f:	mov    QWORD PTR [rsp+0x8],rcx
   140002f64:	sub    rsp,0x58
   140002f68:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140002f71:	mov    DWORD PTR [rsp+0x20],0x0
   140002f79:	mov    rcx,QWORD PTR [rsp+0x60]
   140002f7e:	call   0x140003340
   140002f83:	cmp    eax,0x2
   140002f86:	jne    0x140002fb0
   140002f88:	lea    rdx,[rip+0x24c49]        # 0x140027bd8
   140002f8f:	mov    rcx,QWORD PTR [rsp+0x68]
   140002f94:	call   QWORD PTR [rip+0x23dce]        # 0x140026d68
   140002f9a:	nop
   140002f9b:	mov    eax,DWORD PTR [rsp+0x20]
   140002f9f:	or     eax,0x1
   140002fa2:	mov    DWORD PTR [rsp+0x20],eax
   140002fa6:	mov    rax,QWORD PTR [rsp+0x68]
   140002fab:	jmp    0x140003161
   140002fb0:	mov    rcx,QWORD PTR [rsp+0x60]
   140002fb5:	call   0x140003340
   140002fba:	cmp    eax,0x1
   140002fbd:	jne    0x140003045
   140002fc3:	lea    rcx,[rsp+0x30]
   140002fc8:	call   QWORD PTR [rip+0x23db2]        # 0x140026d80
   140002fce:	nop
   140002fcf:	mov    edx,0xd800
   140002fd4:	lea    rcx,[rsp+0x30]
   140002fd9:	call   QWORD PTR [rip+0x23d59]        # 0x140026d38
   140002fdf:	test   eax,eax
   140002fe1:	je     0x140003013
   140002fe3:	lea    rdx,[rsp+0x30]
   140002fe8:	mov    rcx,QWORD PTR [rsp+0x68]
   140002fed:	call   QWORD PTR [rip+0x23d7d]        # 0x140026d70
   140002ff3:	mov    eax,DWORD PTR [rsp+0x20]
   140002ff7:	or     eax,0x1
   140002ffa:	mov    DWORD PTR [rsp+0x20],eax
   140002ffe:	lea    rcx,[rsp+0x30]
   140003003:	call   QWORD PTR [rip+0x23d57]        # 0x140026d60
   140003009:	mov    rax,QWORD PTR [rsp+0x68]
   14000300e:	jmp    0x140003161
   140003013:	mov    rdx,QWORD PTR [rip+0x2446e]        # 0x140027488
   14000301a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000301f:	call   QWORD PTR [rip+0x23d43]        # 0x140026d68
   140003025:	mov    eax,DWORD PTR [rsp+0x20]
   140003029:	or     eax,0x1
   14000302c:	mov    DWORD PTR [rsp+0x20],eax
   140003030:	lea    rcx,[rsp+0x30]
   140003035:	call   QWORD PTR [rip+0x23d25]        # 0x140026d60
   14000303b:	mov    rax,QWORD PTR [rsp+0x68]
   140003040:	jmp    0x140003161
   140003045:	lea    rcx,[rsp+0x28]
   14000304a:	call   0x140002a80
   14000304f:	nop
   140003050:	lea    rcx,[rsp+0x28]
   140003055:	call   0x140017e80
   14000305a:	mov    r9,rax
   14000305d:	mov    r8d,DWORD PTR [rsp+0x70]
   140003062:	mov    edx,DWORD PTR [rsp+0x78]
   140003066:	mov    rax,QWORD PTR [rsp+0x60]
   14000306b:	movsd  xmm0,QWORD PTR [rax]
   14000306f:	call   QWORD PTR [rip+0x23453]        # 0x1400264c8
   140003075:	test   eax,eax
   140003077:	jge    0x140003112
   14000307d:	lea    rcx,[rsp+0x38]
   140003082:	call   QWORD PTR [rip+0x23cf8]        # 0x140026d80
   140003088:	nop
   140003089:	mov    edx,0xd800
   14000308e:	lea    rcx,[rsp+0x38]
   140003093:	call   QWORD PTR [rip+0x23c9f]        # 0x140026d38
   140003099:	test   eax,eax
   14000309b:	je     0x1400030d8
   14000309d:	lea    rdx,[rsp+0x38]
   1400030a2:	mov    rcx,QWORD PTR [rsp+0x68]
   1400030a7:	call   QWORD PTR [rip+0x23cc3]        # 0x140026d70
   1400030ad:	mov    eax,DWORD PTR [rsp+0x20]
   1400030b1:	or     eax,0x1
   1400030b4:	mov    DWORD PTR [rsp+0x20],eax
   1400030b8:	lea    rcx,[rsp+0x38]
   1400030bd:	call   QWORD PTR [rip+0x23c9d]        # 0x140026d60
   1400030c3:	nop
   1400030c4:	lea    rcx,[rsp+0x28]
   1400030c9:	call   0x140001340
   1400030ce:	mov    rax,QWORD PTR [rsp+0x68]
   1400030d3:	jmp    0x140003161
   1400030d8:	mov    rdx,QWORD PTR [rip+0x243a9]        # 0x140027488
   1400030df:	mov    rcx,QWORD PTR [rsp+0x68]
   1400030e4:	call   QWORD PTR [rip+0x23c7e]        # 0x140026d68
   1400030ea:	mov    eax,DWORD PTR [rsp+0x20]
   1400030ee:	or     eax,0x1
   1400030f1:	mov    DWORD PTR [rsp+0x20],eax
   1400030f5:	lea    rcx,[rsp+0x38]
   1400030fa:	call   QWORD PTR [rip+0x23c60]        # 0x140026d60
   140003100:	nop
   140003101:	lea    rcx,[rsp+0x28]
   140003106:	call   0x140001340
   14000310b:	mov    rax,QWORD PTR [rsp+0x68]
   140003110:	jmp    0x140003161
   140003112:	lea    rcx,[rsp+0x28]
   140003117:	call   0x14001ea00
   14000311c:	mov    rdx,rax
   14000311f:	lea    rcx,[rsp+0x40]
   140003124:	call   QWORD PTR [rip+0x23c3e]        # 0x140026d68
   14000312a:	nop
   14000312b:	lea    rdx,[rsp+0x40]
   140003130:	mov    rcx,QWORD PTR [rsp+0x68]
   140003135:	call   QWORD PTR [rip+0x23c35]        # 0x140026d70
   14000313b:	mov    eax,DWORD PTR [rsp+0x20]
   14000313f:	or     eax,0x1
   140003142:	mov    DWORD PTR [rsp+0x20],eax
   140003146:	lea    rcx,[rsp+0x40]
   14000314b:	call   QWORD PTR [rip+0x23c0f]        # 0x140026d60
   140003151:	nop
   140003152:	lea    rcx,[rsp+0x28]
   140003157:	call   0x140001340
   14000315c:	mov    rax,QWORD PTR [rsp+0x68]
   140003161:	add    rsp,0x58
   140003165:	ret    
   140003166:	int3   
   140003167:	int3   
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	mov    QWORD PTR [rsp+0x8],rcx
   140003175:	xor    eax,eax
   140003177:	ret    
   140003178:	int3   
   140003179:	int3   
   14000317a:	int3   
   14000317b:	int3   
   14000317c:	int3   
   14000317d:	int3   
   14000317e:	int3   
   14000317f:	int3   
   140003180:	mov    QWORD PTR [rsp+0x8],rcx
   140003185:	mov    eax,0x1388
   14000318a:	ret    
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	mov    QWORD PTR [rsp+0x10],rdx
   140003195:	mov    QWORD PTR [rsp+0x8],rcx
   14000319a:	sub    rsp,0x68
   14000319e:	mov    rax,QWORD PTR [rip+0x380ab]        # 0x14003b250
   1400031a5:	xor    rax,rsp
   1400031a8:	mov    QWORD PTR [rsp+0x50],rax
   1400031ad:	lea    rdx,[rsp+0x28]
   1400031b2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400031b7:	call   0x140003270
   1400031bc:	mov    QWORD PTR [rsp+0x20],rax
   1400031c1:	cmp    QWORD PTR [rsp+0x20],0x0
   1400031c7:	jne    0x1400031d0
   1400031c9:	xor    al,al
   1400031cb:	jmp    0x14000325e
   1400031d0:	mov    rax,QWORD PTR [rsp+0x20]
   1400031d5:	mov    eax,DWORD PTR [rax+0x14]
   1400031d8:	add    eax,0x76c
   1400031dd:	mov    rcx,QWORD PTR [rsp+0x78]
   1400031e2:	mov    WORD PTR [rcx],ax
   1400031e5:	mov    rax,QWORD PTR [rsp+0x20]
   1400031ea:	mov    eax,DWORD PTR [rax+0x10]
   1400031ed:	inc    eax
   1400031ef:	mov    rcx,QWORD PTR [rsp+0x78]
   1400031f4:	mov    WORD PTR [rcx+0x2],ax
   1400031f8:	mov    rax,QWORD PTR [rsp+0x78]
   1400031fd:	mov    rcx,QWORD PTR [rsp+0x20]
   140003202:	movzx  ecx,WORD PTR [rcx+0x18]
   140003206:	mov    WORD PTR [rax+0x4],cx
   14000320a:	mov    rax,QWORD PTR [rsp+0x78]
   14000320f:	mov    rcx,QWORD PTR [rsp+0x20]
   140003214:	movzx  ecx,WORD PTR [rcx+0xc]
   140003218:	mov    WORD PTR [rax+0x6],cx
   14000321c:	mov    rax,QWORD PTR [rsp+0x78]
   140003221:	mov    rcx,QWORD PTR [rsp+0x20]
   140003226:	movzx  ecx,WORD PTR [rcx+0x8]
   14000322a:	mov    WORD PTR [rax+0x8],cx
   14000322e:	mov    rax,QWORD PTR [rsp+0x78]
   140003233:	mov    rcx,QWORD PTR [rsp+0x20]
   140003238:	movzx  ecx,WORD PTR [rcx+0x4]
   14000323c:	mov    WORD PTR [rax+0xa],cx
   140003240:	mov    rax,QWORD PTR [rsp+0x78]
   140003245:	mov    rcx,QWORD PTR [rsp+0x20]
   14000324a:	movzx  ecx,WORD PTR [rcx]
   14000324d:	mov    WORD PTR [rax+0xc],cx
   140003251:	xor    eax,eax
   140003253:	mov    rcx,QWORD PTR [rsp+0x78]
   140003258:	mov    WORD PTR [rcx+0xe],ax
   14000325c:	mov    al,0x1
   14000325e:	mov    rcx,QWORD PTR [rsp+0x50]
   140003263:	xor    rcx,rsp
   140003266:	call   0x140021890
   14000326b:	add    rsp,0x68
   14000326f:	ret    
   140003270:	mov    QWORD PTR [rsp+0x10],rdx
   140003275:	mov    QWORD PTR [rsp+0x8],rcx
   14000327a:	push   rsi
   14000327b:	push   rdi
   14000327c:	sub    rsp,0x68
   140003280:	mov    rax,QWORD PTR [rip+0x37fc9]        # 0x14003b250
   140003287:	xor    rax,rsp
   14000328a:	mov    QWORD PTR [rsp+0x58],rax
   14000328f:	cmp    QWORD PTR [rsp+0x88],0x0
   140003298:	je     0x1400032a4
   14000329a:	mov    DWORD PTR [rsp+0x20],0x1
   1400032a2:	jmp    0x1400032ac
   1400032a4:	mov    DWORD PTR [rsp+0x20],0x0
   1400032ac:	mov    eax,DWORD PTR [rsp+0x20]
   1400032b0:	mov    DWORD PTR [rsp+0x24],eax
   1400032b4:	xor    eax,eax
   1400032b6:	test   eax,eax
   1400032b8:	jne    0x1400032b4
   1400032ba:	cmp    DWORD PTR [rsp+0x24],0x0
   1400032bf:	jne    0x1400032cb
   1400032c1:	mov    ecx,0x80004005
   1400032c6:	call   0x140002ef0
   1400032cb:	xor    eax,eax
   1400032cd:	test   eax,eax
   1400032cf:	jne    0x14000328f
   1400032d1:	cmp    QWORD PTR [rsp+0x88],0x0
   1400032da:	je     0x140003322
   1400032dc:	mov    rax,QWORD PTR [rsp+0x80]
   1400032e4:	mov    rdx,rax
   1400032e7:	lea    rcx,[rsp+0x30]
   1400032ec:	call   QWORD PTR [rip+0x2307e]        # 0x140026370
   1400032f2:	mov    DWORD PTR [rsp+0x28],eax
   1400032f6:	cmp    DWORD PTR [rsp+0x28],0x0
   1400032fb:	je     0x140003301
   1400032fd:	xor    eax,eax
   1400032ff:	jmp    0x140003324
   140003301:	lea    rax,[rsp+0x30]
   140003306:	mov    rdi,QWORD PTR [rsp+0x88]
   14000330e:	mov    rsi,rax
   140003311:	mov    ecx,0x24
   140003316:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003318:	mov    rax,QWORD PTR [rsp+0x88]
   140003320:	jmp    0x140003324
   140003322:	xor    eax,eax
   140003324:	mov    rcx,QWORD PTR [rsp+0x58]
   140003329:	xor    rcx,rsp
   14000332c:	call   0x140021890
   140003331:	add    rsp,0x68
   140003335:	pop    rdi
   140003336:	pop    rsi
   140003337:	ret    
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	mov    QWORD PTR [rsp+0x8],rcx
   140003345:	mov    rax,QWORD PTR [rsp+0x8]
   14000334a:	mov    eax,DWORD PTR [rax+0x8]
   14000334d:	ret    
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    QWORD PTR [rsp+0x8],rcx
   140003355:	sub    rsp,0x28
   140003359:	xor    ecx,ecx
   14000335b:	call   QWORD PTR [rip+0x23007]        # 0x140026368
   140003361:	mov    rdx,rax
   140003364:	mov    rcx,QWORD PTR [rsp+0x30]
   140003369:	call   0x140002aa0
   14000336e:	mov    rax,QWORD PTR [rsp+0x30]
   140003373:	add    rsp,0x28
   140003377:	ret    
   140003378:	int3   
   140003379:	int3   
   14000337a:	int3   
   14000337b:	int3   
   14000337c:	int3   
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	mov    QWORD PTR [rsp+0x8],rcx
   140003385:	mov    rax,QWORD PTR [rsp+0x8]
   14000338a:	mov    eax,DWORD PTR [rax+0x14c]
   140003390:	and    eax,0x10
   140003393:	ret    
   140003394:	int3   
   140003395:	int3   
   140003396:	int3   
   140003397:	int3   
   140003398:	int3   
   140003399:	int3   
   14000339a:	int3   
   14000339b:	int3   
   14000339c:	int3   
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400033a5:	mov    rax,QWORD PTR [rsp+0x8]
   1400033aa:	mov    eax,DWORD PTR [rax+0x14c]
   1400033b0:	and    eax,0x20
   1400033b3:	ret    
   1400033b4:	int3   
   1400033b5:	int3   
   1400033b6:	int3   
   1400033b7:	int3   
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400033c5:	sub    rsp,0x28
   1400033c9:	mov    rax,QWORD PTR [rsp+0x30]
   1400033ce:	mov    rcx,QWORD PTR [rax+0x8]
   1400033d2:	call   QWORD PTR [rip+0x22d68]        # 0x140026140
   1400033d8:	add    rsp,0x28
   1400033dc:	ret    
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400033e5:	mov    rax,QWORD PTR [rsp+0x8]
   1400033ea:	mov    eax,DWORD PTR [rax+0x14c]
   1400033f0:	and    eax,0x2
   1400033f3:	ret    
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    QWORD PTR [rsp+0x8],rcx
   140003405:	mov    rax,QWORD PTR [rsp+0x8]
   14000340a:	mov    eax,DWORD PTR [rax+0x14c]
   140003410:	and    eax,0x8
   140003413:	ret    
   140003414:	int3   
   140003415:	int3   
   140003416:	int3   
   140003417:	int3   
   140003418:	int3   
   140003419:	int3   
   14000341a:	int3   
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	mov    QWORD PTR [rsp+0x8],rcx
   140003425:	mov    rax,QWORD PTR [rsp+0x8]
   14000342a:	mov    eax,DWORD PTR [rax+0x14c]
   140003430:	and    eax,0x4
   140003433:	ret    
   140003434:	int3   
   140003435:	int3   
   140003436:	int3   
   140003437:	int3   
   140003438:	int3   
   140003439:	int3   
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	mov    QWORD PTR [rsp+0x8],rcx
   140003445:	mov    rax,QWORD PTR [rsp+0x8]
   14000344a:	mov    eax,DWORD PTR [rax+0x14c]
   140003450:	and    eax,0x1
   140003453:	ret    
   140003454:	int3   
   140003455:	int3   
   140003456:	int3   
   140003457:	int3   
   140003458:	int3   
   140003459:	int3   
   14000345a:	int3   
   14000345b:	int3   
   14000345c:	int3   
   14000345d:	int3   
   14000345e:	int3   
   14000345f:	int3   
   140003460:	mov    eax,0x3
   140003465:	ret    
   140003466:	int3   
   140003467:	int3   
   140003468:	int3   
   140003469:	int3   
   14000346a:	int3   
   14000346b:	int3   
   14000346c:	int3   
   14000346d:	int3   
   14000346e:	int3   
   14000346f:	int3   
   140003470:	mov    QWORD PTR [rsp+0x10],rdx
   140003475:	mov    QWORD PTR [rsp+0x8],rcx
   14000347a:	sub    rsp,0x38
   14000347e:	mov    rdx,QWORD PTR [rsp+0x48]
   140003483:	mov    rcx,QWORD PTR [rsp+0x40]
   140003488:	call   0x140004ef0
   14000348d:	movzx  eax,al
   140003490:	test   eax,eax
   140003492:	jne    0x14000349e
   140003494:	mov    DWORD PTR [rsp+0x20],0x1
   14000349c:	jmp    0x1400034a6
   14000349e:	mov    DWORD PTR [rsp+0x20],0x0
   1400034a6:	movzx  eax,BYTE PTR [rsp+0x20]
   1400034ab:	add    rsp,0x38
   1400034af:	ret    
   1400034b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400034b5:	sub    rsp,0x78
   1400034b9:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400034c2:	mov    rax,QWORD PTR [rip+0x37d87]        # 0x14003b250
   1400034c9:	xor    rax,rsp
   1400034cc:	mov    QWORD PTR [rsp+0x60],rax
   1400034d1:	mov    rcx,QWORD PTR [rsp+0x80]
   1400034d9:	call   0x140020d52
   1400034de:	nop
   1400034df:	mov    rax,QWORD PTR [rsp+0x80]
   1400034e7:	lea    rcx,[rip+0x25142]        # 0x140028630
   1400034ee:	mov    QWORD PTR [rax],rcx
   1400034f1:	mov    edx,0x2
   1400034f6:	xor    ecx,ecx
   1400034f8:	call   QWORD PTR [rip+0x2397a]        # 0x140026e78
   1400034fe:	mov    rax,QWORD PTR [rsp+0x80]
   140003506:	mov    QWORD PTR [rax+0xf0],0x0
   140003511:	mov    rax,QWORD PTR [rsp+0x80]
   140003519:	mov    QWORD PTR [rax+0xe0],0x0
   140003524:	call   0x140005370
   140003529:	mov    QWORD PTR [rsp+0x40],rax
   14000352e:	lea    rcx,[rsp+0x50]
   140003533:	call   0x140005180
   140003538:	mov    QWORD PTR [rsp+0x38],0x0
   140003541:	mov    DWORD PTR [rsp+0x30],0x0
   140003549:	mov    rcx,QWORD PTR [rsp+0x40]
   14000354e:	mov    QWORD PTR [rsp+0x28],rcx
   140003553:	mov    QWORD PTR [rsp+0x20],rax
   140003558:	xor    r9d,r9d
   14000355b:	lea    r8,[rip+0x24b46]        # 0x1400280a8
   140003562:	xor    edx,edx
   140003564:	mov    rcx,QWORD PTR [rsp+0x80]
   14000356c:	call   0x140020d64
   140003571:	mov    rax,QWORD PTR [rsp+0x80]
   140003579:	mov    BYTE PTR [rax+0xd8],0x0
   140003580:	mov    rax,QWORD PTR [rsp+0x80]
   140003588:	mov    DWORD PTR [rax+0xf8],0x0
   140003592:	mov    rax,QWORD PTR [rsp+0x80]
   14000359a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000359f:	xor    rcx,rsp
   1400035a2:	call   0x140021890
   1400035a7:	add    rsp,0x78
   1400035ab:	ret    
   1400035ac:	int3   
   1400035ad:	int3   
   1400035ae:	int3   
   1400035af:	int3   
   1400035b0:	int3   
   1400035b1:	int3   
   1400035b2:	int3   
   1400035b3:	int3   
   1400035b4:	int3   
   1400035b5:	int3   
   1400035b6:	int3   
   1400035b7:	int3   
   1400035b8:	int3   
   1400035b9:	int3   
   1400035ba:	int3   
   1400035bb:	int3   
   1400035bc:	int3   
   1400035bd:	int3   
   1400035be:	int3   
   1400035bf:	int3   
   1400035c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400035c5:	sub    rsp,0x38
   1400035c9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400035d2:	mov    rax,QWORD PTR [rsp+0x40]
   1400035d7:	lea    rcx,[rip+0x25052]        # 0x140028630
   1400035de:	mov    QWORD PTR [rax],rcx
   1400035e1:	mov    rax,QWORD PTR [rsp+0x40]
   1400035e6:	cmp    QWORD PTR [rax+0xf0],0x0
   1400035ee:	je     0x14000361e
   1400035f0:	mov    rax,QWORD PTR [rsp+0x40]
   1400035f5:	mov    rax,QWORD PTR [rax+0xf0]
   1400035fc:	mov    rcx,QWORD PTR [rsp+0x40]
   140003601:	mov    rcx,QWORD PTR [rcx+0xf0]
   140003608:	mov    rax,QWORD PTR [rax]
   14000360b:	call   QWORD PTR [rax+0x10]
   14000360e:	mov    rax,QWORD PTR [rsp+0x40]
   140003613:	mov    QWORD PTR [rax+0xf0],0x0
   14000361e:	mov    rax,QWORD PTR [rsp+0x40]
   140003623:	mov    QWORD PTR [rax+0xe0],0x0
   14000362e:	mov    rcx,QWORD PTR [rsp+0x40]
   140003633:	call   0x140020ec6
   140003638:	add    rsp,0x38
   14000363c:	ret    
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	int3   
   140003641:	int3   
   140003642:	int3   
   140003643:	int3   
   140003644:	int3   
   140003645:	int3   
   140003646:	int3   
   140003647:	int3   
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	mov    QWORD PTR [rsp+0x18],r8
   140003655:	mov    QWORD PTR [rsp+0x10],rdx
   14000365a:	mov    QWORD PTR [rsp+0x8],rcx
   14000365f:	push   rdi
   140003660:	sub    rsp,0x3c0
   140003667:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140003670:	mov    rax,QWORD PTR [rip+0x37bd9]        # 0x14003b250
   140003677:	xor    rax,rsp
   14000367a:	mov    QWORD PTR [rsp+0x3b8],rax
   140003682:	mov    BYTE PTR [rsp+0x30],0x0
   140003687:	mov    rax,QWORD PTR [rsp+0x3d0]
   14000368f:	cmp    QWORD PTR [rax+0xe0],0x0
   140003697:	jne    0x1400039e7
   14000369d:	mov    dl,0x1
   14000369f:	lea    rcx,[rip+0x24b32]        # 0x1400281d8
   1400036a6:	call   0x140017250
   1400036ab:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400036b3:	mov    rcx,QWORD PTR [rsp+0x3d8]
   1400036bb:	mov    QWORD PTR [rax+0xe0],rcx
   1400036c2:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400036ca:	mov    rcx,QWORD PTR [rsp+0x3e0]
   1400036d2:	mov    QWORD PTR [rax+0xe8],rcx
   1400036d9:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400036e1:	add    rax,0xf0
   1400036e7:	mov    QWORD PTR [rsp+0x20],rax
   1400036ec:	lea    r9,[rip+0x24f25]        # 0x140028618
   1400036f3:	mov    r8d,0x4
   1400036f9:	xor    edx,edx
   1400036fb:	lea    rcx,[rip+0x24f06]        # 0x140028608
   140003702:	call   QWORD PTR [rip+0x23768]        # 0x140026e70
   140003708:	mov    DWORD PTR [rsp+0x34],eax
   14000370c:	cmp    DWORD PTR [rsp+0x34],0x0
   140003711:	jge    0x1400037e9
   140003717:	cmp    DWORD PTR [rsp+0x34],0x80070005
   14000371f:	jne    0x140003734
   140003721:	mov    dl,0x1
   140003723:	lea    rcx,[rip+0x24af6]        # 0x140028220
   14000372a:	call   0x140017250
   14000372f:	jmp    0x1400037d1
   140003734:	mov    dl,0x1
   140003736:	lea    rcx,[rip+0x24a1b]        # 0x140028158
   14000373d:	call   0x140017250
   140003742:	xor    eax,eax
   140003744:	mov    WORD PTR [rsp+0x3a0],ax
   14000374c:	lea    rax,[rsp+0x3a2]
   140003754:	mov    rdi,rax
   140003757:	xor    eax,eax
   140003759:	mov    ecx,0x12
   14000375e:	rep stos BYTE PTR es:[rdi],al
   140003760:	mov    r9d,0x10
   140003766:	mov    r8d,0xa
   14000376c:	lea    rdx,[rsp+0x3a0]
   140003774:	mov    ecx,DWORD PTR [rsp+0x34]
   140003778:	call   QWORD PTR [rip+0x22bca]        # 0x140026348
   14000377e:	mov    dl,0x1
   140003780:	lea    rcx,[rsp+0x3a0]
   140003788:	call   0x140017250
   14000378d:	mov    rcx,QWORD PTR [rsp+0x3d8]
   140003795:	call   0x14001bbf0
   14000379a:	xor    r9d,r9d
   14000379d:	mov    r8,QWORD PTR [rsp+0x3d8]
   1400037a5:	mov    rdx,rax
   1400037a8:	lea    rcx,[rsp+0x90]
   1400037b0:	call   0x140006850
   1400037b5:	nop
   1400037b6:	lea    rcx,[rsp+0x90]
   1400037be:	call   0x140020c0e
   1400037c3:	nop
   1400037c4:	lea    rcx,[rsp+0x90]
   1400037cc:	call   0x140006980
   1400037d1:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400037d9:	mov    QWORD PTR [rax+0xe0],0x0
   1400037e4:	jmp    0x1400039e7
   1400037e9:	mov    BYTE PTR [rsp+0x30],0x1
   1400037ee:	mov    dl,0x1
   1400037f0:	lea    rcx,[rip+0x24a01]        # 0x1400281f8
   1400037f7:	call   0x140017250
   1400037fc:	mov    rcx,QWORD PTR [rsp+0x3d8]
   140003804:	call   0x14001b7e0
   140003809:	lea    rdx,[rsp+0x38]
   14000380e:	mov    rcx,rax
   140003811:	call   0x1400054c0
   140003816:	jmp    0x14000382d
   140003818:	xor    r8d,r8d
   14000381b:	lea    rdx,[rsp+0x88]
   140003823:	lea    rcx,[rsp+0x38]
   140003828:	call   0x140005210
   14000382d:	mov    rcx,QWORD PTR [rsp+0x3d8]
   140003835:	call   0x14001b7e0
   14000383a:	lea    rdx,[rsp+0x80]
   140003842:	mov    rcx,rax
   140003845:	call   0x140005500
   14000384a:	mov    rdx,rax
   14000384d:	lea    rcx,[rsp+0x38]
   140003852:	call   0x140005a90
   140003857:	movzx  eax,al
   14000385a:	test   eax,eax
   14000385c:	je     0x14000399a
   140003862:	lea    rcx,[rsp+0x38]
   140003867:	call   0x1400051f0
   14000386c:	mov    QWORD PTR [rsp+0x40],rax
   140003871:	mov    rcx,QWORD PTR [rsp+0x3d8]
   140003879:	call   0x14001b490
   14000387e:	cmp    eax,0xffffffff
   140003881:	jne    0x140003912
   140003887:	mov    rdx,QWORD PTR [rsp+0x40]
   14000388c:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140003894:	call   0x140004970
   140003899:	movzx  eax,al
   14000389c:	test   eax,eax
   14000389e:	jne    0x14000390d
   1400038a0:	mov    dl,0x1
   1400038a2:	lea    rcx,[rip+0x249bf]        # 0x140028268
   1400038a9:	call   0x140017250
   1400038ae:	lea    rdx,[rsp+0x68]
   1400038b3:	mov    rcx,QWORD PTR [rsp+0x3d8]
   1400038bb:	call   0x14001b500
   1400038c0:	mov    QWORD PTR [rsp+0x58],rax
   1400038c5:	mov    rax,QWORD PTR [rsp+0x58]
   1400038ca:	mov    QWORD PTR [rsp+0x70],rax
   1400038cf:	mov    rcx,QWORD PTR [rsp+0x70]
   1400038d4:	call   QWORD PTR [rip+0x234d6]        # 0x140026db0
   1400038da:	mov    dl,0x1
   1400038dc:	mov    rcx,rax
   1400038df:	call   0x140017250
   1400038e4:	nop
   1400038e5:	lea    rcx,[rsp+0x68]
   1400038ea:	call   QWORD PTR [rip+0x23470]        # 0x140026d60
   1400038f0:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400038f8:	mov    QWORD PTR [rax+0xe0],0x0
   140003903:	mov    BYTE PTR [rsp+0x30],0x0
   140003908:	jmp    0x14000399a
   14000390d:	jmp    0x140003995
   140003912:	mov    rdx,QWORD PTR [rsp+0x40]
   140003917:	mov    rcx,QWORD PTR [rsp+0x3d0]
   14000391f:	call   0x140004cf0
   140003924:	movzx  eax,al
   140003927:	test   eax,eax
   140003929:	jne    0x140003995
   14000392b:	mov    dl,0x1
   14000392d:	lea    rcx,[rip+0x24974]        # 0x1400282a8
   140003934:	call   0x140017250
   140003939:	lea    rdx,[rsp+0x50]
   14000393e:	mov    rcx,QWORD PTR [rsp+0x3d8]
   140003946:	call   0x14001b500
   14000394b:	mov    QWORD PTR [rsp+0x48],rax
   140003950:	mov    rax,QWORD PTR [rsp+0x48]
   140003955:	mov    QWORD PTR [rsp+0x60],rax
   14000395a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000395f:	call   QWORD PTR [rip+0x2344b]        # 0x140026db0
   140003965:	mov    dl,0x1
   140003967:	mov    rcx,rax
   14000396a:	call   0x140017250
   14000396f:	nop
   140003970:	lea    rcx,[rsp+0x50]
   140003975:	call   QWORD PTR [rip+0x233e5]        # 0x140026d60
   14000397b:	mov    rax,QWORD PTR [rsp+0x3d0]
   140003983:	mov    QWORD PTR [rax+0xe0],0x0
   14000398e:	mov    BYTE PTR [rsp+0x30],0x0
   140003993:	jmp    0x14000399a
   140003995:	jmp    0x140003818
   14000399a:	movzx  eax,BYTE PTR [rsp+0x30]
   14000399f:	test   eax,eax
   1400039a1:	je     0x1400039e7
   1400039a3:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400039ab:	cmp    QWORD PTR [rax+0xe8],0x0
   1400039b3:	je     0x1400039d8
   1400039b5:	mov    rax,QWORD PTR [rsp+0x3d0]
   1400039bd:	mov    rax,QWORD PTR [rax+0xe8]
   1400039c4:	mov    rcx,QWORD PTR [rsp+0x3d0]
   1400039cc:	mov    rcx,QWORD PTR [rcx+0xe8]
   1400039d3:	mov    rax,QWORD PTR [rax]
   1400039d6:	call   QWORD PTR [rax]
   1400039d8:	mov    dl,0x1
   1400039da:	mov    rcx,QWORD PTR [rsp+0x3d0]
   1400039e2:	call   0x140004e60
   1400039e7:	movzx  eax,BYTE PTR [rsp+0x30]
   1400039ec:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400039f4:	xor    rcx,rsp
   1400039f7:	call   0x140021890
   1400039fc:	add    rsp,0x3c0
   140003a03:	pop    rdi
   140003a04:	ret    
   140003a05:	int3   
   140003a06:	int3   
   140003a07:	int3   
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	mov    QWORD PTR [rsp+0x8],rcx
   140003a15:	sub    rsp,0x88
   140003a1c:	mov    rax,QWORD PTR [rip+0x3782d]        # 0x14003b250
   140003a23:	xor    rax,rsp
   140003a26:	mov    QWORD PTR [rsp+0x70],rax
   140003a2b:	mov    dl,0x1
   140003a2d:	lea    rcx,[rip+0x249d4]        # 0x140028408
   140003a34:	call   0x140017250
   140003a39:	xor    edx,edx
   140003a3b:	mov    rcx,QWORD PTR [rsp+0x90]
   140003a43:	call   0x140004e60
   140003a48:	mov    rax,QWORD PTR [rsp+0x90]
   140003a50:	add    rax,0xf0
   140003a56:	mov    QWORD PTR [rsp+0x20],rax
   140003a5b:	lea    r9,[rip+0x24bb6]        # 0x140028618
   140003a62:	mov    r8d,0x4
   140003a68:	xor    edx,edx
   140003a6a:	lea    rcx,[rip+0x24b97]        # 0x140028608
   140003a71:	call   QWORD PTR [rip+0x233f9]        # 0x140026e70
   140003a77:	mov    DWORD PTR [rsp+0x30],eax
   140003a7b:	cmp    DWORD PTR [rsp+0x30],0x80010108
   140003a83:	je     0x140003a97
   140003a85:	mov    rax,QWORD PTR [rsp+0x90]
   140003a8d:	cmp    QWORD PTR [rax+0xf0],0x0
   140003a95:	jne    0x140003acb
   140003a97:	xor    edx,edx
   140003a99:	mov    rcx,QWORD PTR [rsp+0x90]
   140003aa1:	call   0x140004e60
   140003aa6:	mov    edx,0x1
   140003aab:	mov    rcx,QWORD PTR [rsp+0x90]
   140003ab3:	call   0x1400046c0
   140003ab8:	mov    dl,0x1
   140003aba:	lea    rcx,[rip+0x2496f]        # 0x140028430
   140003ac1:	call   0x140017250
   140003ac6:	jmp    0x140003c39
   140003acb:	cmp    DWORD PTR [rsp+0x30],0x0
   140003ad0:	jl     0x140003ae4
   140003ad2:	mov    rax,QWORD PTR [rsp+0x90]
   140003ada:	cmp    QWORD PTR [rax+0xe0],0x0
   140003ae2:	jne    0x140003b32
   140003ae4:	mov    rax,QWORD PTR [rsp+0x90]
   140003aec:	cmp    QWORD PTR [rax+0xf0],0x0
   140003af4:	je     0x140003b2d
   140003af6:	mov    rax,QWORD PTR [rsp+0x90]
   140003afe:	mov    rax,QWORD PTR [rax+0xf0]
   140003b05:	mov    rcx,QWORD PTR [rsp+0x90]
   140003b0d:	mov    rcx,QWORD PTR [rcx+0xf0]
   140003b14:	mov    rax,QWORD PTR [rax]
   140003b17:	call   QWORD PTR [rax+0x10]
   140003b1a:	mov    rax,QWORD PTR [rsp+0x90]
   140003b22:	mov    QWORD PTR [rax+0xf0],0x0
   140003b2d:	jmp    0x140003c39
   140003b32:	mov    QWORD PTR [rsp+0x38],0x0
   140003b3b:	mov    rax,QWORD PTR [rsp+0x90]
   140003b43:	mov    rcx,QWORD PTR [rax+0xe0]
   140003b4a:	call   0x14001b7e0
   140003b4f:	lea    rdx,[rsp+0x40]
   140003b54:	mov    rcx,rax
   140003b57:	call   0x1400054c0
   140003b5c:	jmp    0x140003b70
   140003b5e:	xor    r8d,r8d
   140003b61:	lea    rdx,[rsp+0x58]
   140003b66:	lea    rcx,[rsp+0x40]
   140003b6b:	call   0x140005210
   140003b70:	mov    rax,QWORD PTR [rsp+0x90]
   140003b78:	mov    rcx,QWORD PTR [rax+0xe0]
   140003b7f:	call   0x14001b7e0
   140003b84:	lea    rdx,[rsp+0x50]
   140003b89:	mov    rcx,rax
   140003b8c:	call   0x140005500
   140003b91:	mov    rdx,rax
   140003b94:	lea    rcx,[rsp+0x40]
   140003b99:	call   0x140005a90
   140003b9e:	movzx  eax,al
   140003ba1:	test   eax,eax
   140003ba3:	je     0x140003c39
   140003ba9:	lea    rcx,[rsp+0x40]
   140003bae:	call   0x1400051f0
   140003bb3:	mov    QWORD PTR [rsp+0x48],rax
   140003bb8:	lea    rdx,[rsp+0x60]
   140003bbd:	mov    rcx,QWORD PTR [rsp+0x48]
   140003bc2:	call   0x14001f460
   140003bc7:	lea    rdx,[rip+0x2dc42]        # 0x140031810
   140003bce:	lea    rcx,[rsp+0x60]
   140003bd3:	call   0x140003470
   140003bd8:	movzx  eax,al
   140003bdb:	test   eax,eax
   140003bdd:	je     0x140003c34
   140003bdf:	mov    rax,QWORD PTR [rsp+0x90]
   140003be7:	mov    rax,QWORD PTR [rax+0xf0]
   140003bee:	mov    rcx,QWORD PTR [rsp+0x90]
   140003bf6:	mov    rcx,QWORD PTR [rcx+0xf0]
   140003bfd:	mov    rax,QWORD PTR [rax]
   140003c00:	lea    r8,[rsp+0x38]
   140003c05:	lea    rdx,[rsp+0x60]
   140003c0a:	call   QWORD PTR [rax+0x20]
   140003c0d:	mov    DWORD PTR [rsp+0x30],eax
   140003c11:	cmp    DWORD PTR [rsp+0x30],0x0
   140003c16:	jl     0x140003c34
   140003c18:	cmp    QWORD PTR [rsp+0x38],0x0
   140003c1e:	je     0x140003c34
   140003c20:	mov    rax,QWORD PTR [rsp+0x38]
   140003c25:	mov    rax,QWORD PTR [rax]
   140003c28:	mov    rcx,QWORD PTR [rsp+0x38]
   140003c2d:	call   QWORD PTR [rax+0x30]
   140003c30:	mov    DWORD PTR [rsp+0x30],eax
   140003c34:	jmp    0x140003b5e
   140003c39:	mov    rcx,QWORD PTR [rsp+0x70]
   140003c3e:	xor    rcx,rsp
   140003c41:	call   0x140021890
   140003c46:	add    rsp,0x88
   140003c4d:	ret    
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	int3   
   140003c51:	int3   
   140003c52:	int3   
   140003c53:	int3   
   140003c54:	int3   
   140003c55:	int3   
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	int3   
   140003c59:	int3   
   140003c5a:	int3   
   140003c5b:	int3   
   140003c5c:	int3   
   140003c5d:	int3   
   140003c5e:	int3   
   140003c5f:	int3   
   140003c60:	mov    QWORD PTR [rsp+0x8],rcx
   140003c65:	sub    rsp,0x98
   140003c6c:	mov    rax,QWORD PTR [rip+0x375dd]        # 0x14003b250
   140003c73:	xor    rax,rsp
   140003c76:	mov    QWORD PTR [rsp+0x88],rax
   140003c7e:	mov    BYTE PTR [rsp+0x20],0x0
   140003c83:	mov    rax,QWORD PTR [rsp+0xa0]
   140003c8b:	cmp    QWORD PTR [rax+0xe0],0x0
   140003c93:	je     0x140003e90
   140003c99:	mov    rax,QWORD PTR [rsp+0xa0]
   140003ca1:	cmp    QWORD PTR [rax+0xf0],0x0
   140003ca9:	je     0x140003e90
   140003caf:	mov    BYTE PTR [rsp+0x20],0x1
   140003cb4:	mov    rax,QWORD PTR [rsp+0xa0]
   140003cbc:	mov    rcx,QWORD PTR [rax+0xe0]
   140003cc3:	call   0x14001b7e0
   140003cc8:	lea    rdx,[rsp+0x38]
   140003ccd:	mov    rcx,rax
   140003cd0:	call   0x1400054c0
   140003cd5:	jmp    0x140003ce9
   140003cd7:	xor    r8d,r8d
   140003cda:	lea    rdx,[rsp+0x58]
   140003cdf:	lea    rcx,[rsp+0x38]
   140003ce4:	call   0x140005210
   140003ce9:	mov    rax,QWORD PTR [rsp+0xa0]
   140003cf1:	mov    rcx,QWORD PTR [rax+0xe0]
   140003cf8:	call   0x14001b7e0
   140003cfd:	lea    rdx,[rsp+0x60]
   140003d02:	mov    rcx,rax
   140003d05:	call   0x140005500
   140003d0a:	mov    rdx,rax
   140003d0d:	lea    rcx,[rsp+0x38]
   140003d12:	call   0x140005a90
   140003d17:	movzx  eax,al
   140003d1a:	test   eax,eax
   140003d1c:	je     0x140003e90
   140003d22:	lea    rcx,[rsp+0x38]
   140003d27:	call   0x1400051f0
   140003d2c:	mov    QWORD PTR [rsp+0x40],rax
   140003d31:	mov    QWORD PTR [rsp+0x28],0x0
   140003d3a:	mov    DWORD PTR [rsp+0x24],0x0
   140003d42:	lea    rdx,[rsp+0x68]
   140003d47:	mov    rcx,QWORD PTR [rsp+0x40]
   140003d4c:	call   0x14001f460
   140003d51:	lea    rdx,[rip+0x2dab8]        # 0x140031810
   140003d58:	mov    rcx,rax
   140003d5b:	call   0x140003470
   140003d60:	movzx  eax,al
   140003d63:	test   eax,eax
   140003d65:	je     0x140003e04
   140003d6b:	lea    rdx,[rsp+0x78]
   140003d70:	mov    rcx,QWORD PTR [rsp+0x40]
   140003d75:	call   0x14001f460
   140003d7a:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003d82:	mov    rcx,QWORD PTR [rcx+0xf0]
   140003d89:	mov    rdx,QWORD PTR [rsp+0xa0]
   140003d91:	mov    rdx,QWORD PTR [rdx+0xf0]
   140003d98:	mov    QWORD PTR [rsp+0x48],rdx
   140003d9d:	mov    rcx,QWORD PTR [rcx]
   140003da0:	mov    QWORD PTR [rsp+0x50],rcx
   140003da5:	lea    r8,[rsp+0x28]
   140003daa:	mov    rdx,rax
   140003dad:	mov    rax,QWORD PTR [rsp+0x48]
   140003db2:	mov    rcx,rax
   140003db5:	mov    rax,QWORD PTR [rsp+0x50]
   140003dba:	call   QWORD PTR [rax+0x20]
   140003dbd:	mov    DWORD PTR [rsp+0x24],eax
   140003dc1:	cmp    DWORD PTR [rsp+0x24],0x80010108
   140003dc9:	jne    0x140003e04
   140003dcb:	xor    edx,edx
   140003dcd:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003dd5:	call   0x140004e60
   140003dda:	mov    dl,0x1
   140003ddc:	lea    rcx,[rip+0x2469d]        # 0x140028480
   140003de3:	call   0x140017250
   140003de8:	mov    edx,0x1
   140003ded:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003df5:	call   0x1400046c0
   140003dfa:	mov    BYTE PTR [rsp+0x20],0x0
   140003dff:	jmp    0x140003e90
   140003e04:	cmp    DWORD PTR [rsp+0x24],0x0
   140003e09:	je     0x140003e1c
   140003e0b:	cmp    DWORD PTR [rsp+0x24],0x80200001
   140003e13:	je     0x140003e1c
   140003e15:	mov    BYTE PTR [rsp+0x20],0x0
   140003e1a:	jmp    0x140003e90
   140003e1c:	cmp    QWORD PTR [rsp+0x28],0x0
   140003e22:	je     0x140003e8b
   140003e24:	mov    rax,QWORD PTR [rsp+0x28]
   140003e29:	mov    rax,QWORD PTR [rax]
   140003e2c:	lea    rdx,[rsp+0x34]
   140003e31:	mov    rcx,QWORD PTR [rsp+0x28]
   140003e36:	call   QWORD PTR [rax+0x70]
   140003e39:	mov    DWORD PTR [rsp+0x30],eax
   140003e3d:	cmp    DWORD PTR [rsp+0x30],0x80010108
   140003e45:	jne    0x140003e7d
   140003e47:	xor    edx,edx
   140003e49:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003e51:	call   0x140004e60
   140003e56:	mov    dl,0x1
   140003e58:	lea    rcx,[rip+0x24671]        # 0x1400284d0
   140003e5f:	call   0x140017250
   140003e64:	mov    edx,0x1
   140003e69:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003e71:	call   0x1400046c0
   140003e76:	mov    BYTE PTR [rsp+0x20],0x0
   140003e7b:	jmp    0x140003e90
   140003e7d:	cmp    DWORD PTR [rsp+0x34],0x7
   140003e82:	je     0x140003e8b
   140003e84:	mov    BYTE PTR [rsp+0x20],0x0
   140003e89:	jmp    0x140003e90
   140003e8b:	jmp    0x140003cd7
   140003e90:	movzx  eax,BYTE PTR [rsp+0x20]
   140003e95:	mov    rcx,QWORD PTR [rsp+0x88]
   140003e9d:	xor    rcx,rsp
   140003ea0:	call   0x140021890
   140003ea5:	add    rsp,0x98
   140003eac:	ret    
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	int3   
   140003eb1:	int3   
   140003eb2:	int3   
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	int3   
   140003ebd:	int3   
   140003ebe:	int3   
   140003ebf:	int3   
   140003ec0:	mov    QWORD PTR [rsp+0x8],rcx
   140003ec5:	sub    rsp,0x38
   140003ec9:	mov    rax,QWORD PTR [rsp+0x40]
   140003ece:	movzx  eax,BYTE PTR [rax+0xd8]
   140003ed5:	test   eax,eax
   140003ed7:	je     0x140003fb5
   140003edd:	mov    rcx,QWORD PTR [rsp+0x40]
   140003ee2:	call   0x1400042c0
   140003ee7:	mov    rcx,QWORD PTR [rsp+0x40]
   140003eec:	call   0x140004720
   140003ef1:	mov    rcx,QWORD PTR [rsp+0x40]
   140003ef6:	call   0x140003c60
   140003efb:	movzx  eax,al
   140003efe:	test   eax,eax
   140003f00:	je     0x140003f4b
   140003f02:	xor    edx,edx
   140003f04:	mov    rcx,QWORD PTR [rsp+0x40]
   140003f09:	call   0x140004e60
   140003f0e:	mov    rax,QWORD PTR [rsp+0x40]
   140003f13:	cmp    QWORD PTR [rax+0xe8],0x0
   140003f1b:	je     0x140003f3b
   140003f1d:	mov    rax,QWORD PTR [rsp+0x40]
   140003f22:	mov    rax,QWORD PTR [rax+0xe8]
   140003f29:	mov    rcx,QWORD PTR [rsp+0x40]
   140003f2e:	mov    rcx,QWORD PTR [rcx+0xe8]
   140003f35:	mov    rax,QWORD PTR [rax]
   140003f38:	call   QWORD PTR [rax+0x8]
   140003f3b:	mov    dl,0x1
   140003f3d:	lea    rcx,[rip+0x23fcc]        # 0x140027f10
   140003f44:	call   0x140017250
   140003f49:	jmp    0x140003fb5
   140003f4b:	mov    rcx,QWORD PTR [rsp+0x40]
   140003f50:	call   0x140004020
   140003f55:	movsd  QWORD PTR [rsp+0x20],xmm0
   140003f5b:	movsd  xmm1,QWORD PTR [rsp+0x20]
   140003f61:	mov    rax,QWORD PTR [rsp+0x40]
   140003f66:	mov    rcx,QWORD PTR [rax+0xe0]
   140003f6d:	call   0x14001c040
   140003f72:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140003f78:	comisd xmm0,QWORD PTR [rip+0x249d0]        # 0x140028950
   140003f80:	jb     0x140003fb5
   140003f82:	mov    rax,QWORD PTR [rsp+0x40]
   140003f87:	cmp    QWORD PTR [rax+0xe8],0x0
   140003f8f:	je     0x140003fb5
   140003f91:	mov    rax,QWORD PTR [rsp+0x40]
   140003f96:	mov    rax,QWORD PTR [rax+0xe8]
   140003f9d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003fa2:	mov    rcx,QWORD PTR [rcx+0xe8]
   140003fa9:	mov    rax,QWORD PTR [rax]
   140003fac:	movsd  xmm1,QWORD PTR [rsp+0x20]
   140003fb2:	call   QWORD PTR [rax+0x10]
   140003fb5:	add    rsp,0x38
   140003fb9:	ret    
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	mov    QWORD PTR [rsp+0x8],rcx
   140003fc5:	sub    rsp,0x18
   140003fc9:	mov    rax,QWORD PTR [rsp+0x20]
   140003fce:	cmp    DWORD PTR [rax+0xf8],0x0
   140003fd5:	je     0x140003fdd
   140003fd7:	mov    BYTE PTR [rsp],0x1
   140003fdb:	jmp    0x140003fe1
   140003fdd:	mov    BYTE PTR [rsp],0x0
   140003fe1:	movzx  eax,BYTE PTR [rsp]
   140003fe5:	add    rsp,0x18
   140003fe9:	ret    
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	mov    QWORD PTR [rsp+0x10],rdx
   140003ff5:	mov    QWORD PTR [rsp+0x8],rcx
   140003ffa:	sub    rsp,0x28
   140003ffe:	mov    rcx,QWORD PTR [rsp+0x30]
   140004003:	call   0x140003ec0
   140004008:	add    rsp,0x28
   14000400c:	ret    
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	int3   
   140004011:	int3   
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rcx
   140004025:	sub    rsp,0xc8
   14000402c:	mov    rax,QWORD PTR [rip+0x3721d]        # 0x14003b250
   140004033:	xor    rax,rsp
   140004036:	mov    QWORD PTR [rsp+0xb0],rax
   14000403e:	xorps  xmm0,xmm0
   140004041:	movsd  QWORD PTR [rsp+0x48],xmm0
   140004047:	mov    QWORD PTR [rsp+0x30],0x0
   140004050:	mov    QWORD PTR [rsp+0x20],0x0
   140004059:	mov    rax,QWORD PTR [rsp+0xd0]
   140004061:	cmp    QWORD PTR [rax+0xe0],0x0
   140004069:	je     0x140004295
   14000406f:	mov    rax,QWORD PTR [rsp+0xd0]
   140004077:	cmp    QWORD PTR [rax+0xf0],0x0
   14000407f:	je     0x140004295
   140004085:	mov    rax,QWORD PTR [rsp+0xd0]
   14000408d:	mov    rcx,QWORD PTR [rax+0xe0]
   140004094:	call   0x14001b7e0
   140004099:	lea    rdx,[rsp+0x50]
   14000409e:	mov    rcx,rax
   1400040a1:	call   0x1400054c0
   1400040a6:	jmp    0x1400040ba
   1400040a8:	xor    r8d,r8d
   1400040ab:	lea    rdx,[rsp+0x68]
   1400040b0:	lea    rcx,[rsp+0x50]
   1400040b5:	call   0x140005210
   1400040ba:	mov    rax,QWORD PTR [rsp+0xd0]
   1400040c2:	mov    rcx,QWORD PTR [rax+0xe0]
   1400040c9:	call   0x14001b7e0
   1400040ce:	lea    rdx,[rsp+0x70]
   1400040d3:	mov    rcx,rax
   1400040d6:	call   0x140005500
   1400040db:	mov    rdx,rax
   1400040de:	lea    rcx,[rsp+0x50]
   1400040e3:	call   0x140005a90
   1400040e8:	movzx  eax,al
   1400040eb:	test   eax,eax
   1400040ed:	je     0x140004259
   1400040f3:	lea    rcx,[rsp+0x50]
   1400040f8:	call   0x1400051f0
   1400040fd:	mov    QWORD PTR [rsp+0x28],rax
   140004102:	mov    QWORD PTR [rsp+0x40],0x0
   14000410b:	mov    DWORD PTR [rsp+0x38],0x0
   140004113:	lea    rdx,[rsp+0x90]
   14000411b:	mov    rcx,QWORD PTR [rsp+0x28]
   140004120:	call   0x14001f460
   140004125:	lea    rdx,[rip+0x2d6e4]        # 0x140031810
   14000412c:	mov    rcx,rax
   14000412f:	call   0x140003470
   140004134:	movzx  eax,al
   140004137:	test   eax,eax
   140004139:	je     0x140004194
   14000413b:	lea    rdx,[rsp+0xa0]
   140004143:	mov    rcx,QWORD PTR [rsp+0x28]
   140004148:	call   0x14001f460
   14000414d:	mov    rcx,QWORD PTR [rsp+0xd0]
   140004155:	mov    rcx,QWORD PTR [rcx+0xf0]
   14000415c:	mov    rdx,QWORD PTR [rsp+0xd0]
   140004164:	mov    rdx,QWORD PTR [rdx+0xf0]
   14000416b:	mov    QWORD PTR [rsp+0x58],rdx
   140004170:	mov    rcx,QWORD PTR [rcx]
   140004173:	mov    QWORD PTR [rsp+0x60],rcx
   140004178:	lea    r8,[rsp+0x40]
   14000417d:	mov    rdx,rax
   140004180:	mov    rax,QWORD PTR [rsp+0x58]
   140004185:	mov    rcx,rax
   140004188:	mov    rax,QWORD PTR [rsp+0x60]
   14000418d:	call   QWORD PTR [rax+0x20]
   140004190:	mov    DWORD PTR [rsp+0x38],eax
   140004194:	cmp    DWORD PTR [rsp+0x38],0x80010108
   14000419c:	jne    0x1400041ac
   14000419e:	mov    QWORD PTR [rsp+0x20],0x0
   1400041a7:	jmp    0x140004259
   1400041ac:	cmp    QWORD PTR [rsp+0x40],0x0
   1400041b2:	jne    0x1400041ea
   1400041b4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400041b9:	call   0x14001f650
   1400041be:	mov    rcx,QWORD PTR [rsp+0x30]
   1400041c3:	add    rcx,rax
   1400041c6:	mov    rax,rcx
   1400041c9:	mov    QWORD PTR [rsp+0x30],rax
   1400041ce:	mov    rcx,QWORD PTR [rsp+0x28]
   1400041d3:	call   0x14001f650
   1400041d8:	mov    rcx,QWORD PTR [rsp+0x20]
   1400041dd:	add    rcx,rax
   1400041e0:	mov    rax,rcx
   1400041e3:	mov    QWORD PTR [rsp+0x20],rax
   1400041e8:	jmp    0x140004254
   1400041ea:	mov    rax,QWORD PTR [rsp+0x40]
   1400041ef:	mov    rax,QWORD PTR [rax]
   1400041f2:	lea    rdx,[rsp+0x78]
   1400041f7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400041fc:	call   QWORD PTR [rax+0x60]
   1400041ff:	test   eax,eax
   140004201:	jl     0x140004254
   140004203:	cmp    QWORD PTR [rsp+0x78],0xffffffffffffffff
   140004209:	jne    0x140004227
   14000420b:	mov    rcx,QWORD PTR [rsp+0x28]
   140004210:	call   0x14001f650
   140004215:	mov    rcx,QWORD PTR [rsp+0x20]
   14000421a:	add    rcx,rax
   14000421d:	mov    rax,rcx
   140004220:	mov    QWORD PTR [rsp+0x20],rax
   140004225:	jmp    0x140004254
   140004227:	mov    rax,QWORD PTR [rsp+0x80]
   14000422f:	mov    rcx,QWORD PTR [rsp+0x30]
   140004234:	add    rcx,rax
   140004237:	mov    rax,rcx
   14000423a:	mov    QWORD PTR [rsp+0x30],rax
   14000423f:	mov    rax,QWORD PTR [rsp+0x78]
   140004244:	mov    rcx,QWORD PTR [rsp+0x20]
   140004249:	add    rcx,rax
   14000424c:	mov    rax,rcx
   14000424f:	mov    QWORD PTR [rsp+0x20],rax
   140004254:	jmp    0x1400040a8
   140004259:	cmp    QWORD PTR [rsp+0x20],0x0
   14000425f:	jle    0x140004287
   140004261:	cvtsi2ss xmm0,QWORD PTR [rsp+0x30]
   140004268:	cvtsi2ss xmm1,QWORD PTR [rsp+0x20]
   14000426f:	divss  xmm0,xmm1
   140004273:	cvtss2sd xmm0,xmm0
   140004277:	mulsd  xmm0,QWORD PTR [rip+0x246d9]        # 0x140028958
   14000427f:	movsd  QWORD PTR [rsp+0x48],xmm0
   140004285:	jmp    0x140004295
   140004287:	movsd  xmm0,QWORD PTR [rip+0x246d1]        # 0x140028960
   14000428f:	movsd  QWORD PTR [rsp+0x48],xmm0
   140004295:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000429b:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400042a3:	xor    rcx,rsp
   1400042a6:	call   0x140021890
   1400042ab:	add    rsp,0xc8
   1400042b2:	ret    
   1400042b3:	int3   
   1400042b4:	int3   
   1400042b5:	int3   
   1400042b6:	int3   
   1400042b7:	int3   
   1400042b8:	int3   
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400042c5:	sub    rsp,0x118
   1400042cc:	mov    QWORD PTR [rsp+0xd0],0xfffffffffffffffe
   1400042d8:	mov    rax,QWORD PTR [rip+0x36f71]        # 0x14003b250
   1400042df:	xor    rax,rsp
   1400042e2:	mov    QWORD PTR [rsp+0x108],rax
   1400042ea:	mov    rax,QWORD PTR [rsp+0x120]
   1400042f2:	cmp    QWORD PTR [rax+0xe0],0x0
   1400042fa:	je     0x1400046a1
   140004300:	mov    rax,QWORD PTR [rsp+0x120]
   140004308:	cmp    QWORD PTR [rax+0xf0],0x0
   140004310:	je     0x1400046a1
   140004316:	mov    rax,QWORD PTR [rsp+0x120]
   14000431e:	mov    rcx,QWORD PTR [rax+0xe0]
   140004325:	call   0x14001b7e0
   14000432a:	lea    rdx,[rsp+0x48]
   14000432f:	mov    rcx,rax
   140004332:	call   0x1400054c0
   140004337:	jmp    0x14000434e
   140004339:	xor    r8d,r8d
   14000433c:	lea    rdx,[rsp+0xe0]
   140004344:	lea    rcx,[rsp+0x48]
   140004349:	call   0x140005210
   14000434e:	mov    rax,QWORD PTR [rsp+0x120]
   140004356:	mov    rcx,QWORD PTR [rax+0xe0]
   14000435d:	call   0x14001b7e0
   140004362:	lea    rdx,[rsp+0xd8]
   14000436a:	mov    rcx,rax
   14000436d:	call   0x140005500
   140004372:	mov    rdx,rax
   140004375:	lea    rcx,[rsp+0x48]
   14000437a:	call   0x140005a90
   14000437f:	movzx  eax,al
   140004382:	test   eax,eax
   140004384:	je     0x1400046a1
   14000438a:	lea    rcx,[rsp+0x48]
   14000438f:	call   0x1400051f0
   140004394:	mov    QWORD PTR [rsp+0x60],rax
   140004399:	mov    QWORD PTR [rsp+0x28],0x0
   1400043a2:	lea    rdx,[rsp+0xe8]
   1400043aa:	mov    rcx,QWORD PTR [rsp+0x60]
   1400043af:	call   0x14001f460
   1400043b4:	lea    rdx,[rip+0x2d455]        # 0x140031810
   1400043bb:	mov    rcx,rax
   1400043be:	call   0x140003470
   1400043c3:	movzx  eax,al
   1400043c6:	test   eax,eax
   1400043c8:	je     0x14000469c
   1400043ce:	lea    rdx,[rsp+0xf8]
   1400043d6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400043db:	call   0x14001f460
   1400043e0:	mov    rcx,QWORD PTR [rsp+0x120]
   1400043e8:	mov    rcx,QWORD PTR [rcx+0xf0]
   1400043ef:	mov    rdx,QWORD PTR [rsp+0x120]
   1400043f7:	mov    rdx,QWORD PTR [rdx+0xf0]
   1400043fe:	mov    QWORD PTR [rsp+0xc0],rdx
   140004406:	mov    rcx,QWORD PTR [rcx]
   140004409:	mov    QWORD PTR [rsp+0x68],rcx
   14000440e:	lea    r8,[rsp+0x28]
   140004413:	mov    rdx,rax
   140004416:	mov    rax,QWORD PTR [rsp+0xc0]
   14000441e:	mov    rcx,rax
   140004421:	mov    rax,QWORD PTR [rsp+0x68]
   140004426:	call   QWORD PTR [rax+0x20]
   140004429:	mov    DWORD PTR [rsp+0x58],eax
   14000442d:	cmp    DWORD PTR [rsp+0x58],0x80010108
   140004435:	jne    0x14000446b
   140004437:	xor    edx,edx
   140004439:	mov    rcx,QWORD PTR [rsp+0x120]
   140004441:	call   0x140004e60
   140004446:	mov    dl,0x1
   140004448:	lea    rcx,[rip+0x23af1]        # 0x140027f40
   14000444f:	call   0x140017250
   140004454:	mov    edx,0x1
   140004459:	mov    rcx,QWORD PTR [rsp+0x120]
   140004461:	call   0x1400046c0
   140004466:	jmp    0x14000469c
   14000446b:	cmp    QWORD PTR [rsp+0x28],0x0
   140004471:	je     0x14000469c
   140004477:	mov    rax,QWORD PTR [rsp+0x28]
   14000447c:	mov    rax,QWORD PTR [rax]
   14000447f:	lea    rdx,[rsp+0x20]
   140004484:	mov    rcx,QWORD PTR [rsp+0x28]
   140004489:	call   QWORD PTR [rax+0x70]
   14000448c:	mov    DWORD PTR [rsp+0x40],eax
   140004490:	cmp    DWORD PTR [rsp+0x40],0x0
   140004495:	jge    0x1400044cb
   140004497:	xor    edx,edx
   140004499:	mov    rcx,QWORD PTR [rsp+0x120]
   1400044a1:	call   0x140004e60
   1400044a6:	mov    dl,0x1
   1400044a8:	lea    rcx,[rip+0x23ad9]        # 0x140027f88
   1400044af:	call   0x140017250
   1400044b4:	mov    edx,0x1
   1400044b9:	mov    rcx,QWORD PTR [rsp+0x120]
   1400044c1:	call   0x1400046c0
   1400044c6:	jmp    0x14000469c
   1400044cb:	cmp    DWORD PTR [rsp+0x20],0x4
   1400044d0:	je     0x1400044dd
   1400044d2:	cmp    DWORD PTR [rsp+0x20],0x5
   1400044d7:	jne    0x14000469c
   1400044dd:	mov    rax,QWORD PTR [rsp+0x28]
   1400044e2:	mov    rax,QWORD PTR [rax]
   1400044e5:	lea    rdx,[rsp+0x50]
   1400044ea:	mov    rcx,QWORD PTR [rsp+0x28]
   1400044ef:	call   QWORD PTR [rax+0x78]
   1400044f2:	cmp    QWORD PTR [rsp+0x50],0x0
   1400044f8:	je     0x14000469c
   1400044fe:	mov    rax,QWORD PTR [rsp+0x50]
   140004503:	mov    rax,QWORD PTR [rax]
   140004506:	lea    r8,[rsp+0x78]
   14000450b:	lea    rdx,[rsp+0x34]
   140004510:	mov    rcx,QWORD PTR [rsp+0x50]
   140004515:	call   QWORD PTR [rax+0x18]
   140004518:	mov    DWORD PTR [rsp+0x88],eax
   14000451f:	mov    DWORD PTR [rsp+0x30],0x2
   140004527:	lea    rcx,[rsp+0x38]
   14000452c:	call   QWORD PTR [rip+0x2284e]        # 0x140026d80
   140004532:	nop
   140004533:	mov    r8d,DWORD PTR [rsp+0x34]
   140004538:	lea    rdx,[rip+0x23a75]        # 0x140027fb4
   14000453f:	lea    rcx,[rsp+0x38]
   140004544:	call   QWORD PTR [rip+0x225be]        # 0x140026b08
   14000454a:	cmp    DWORD PTR [rsp+0x34],0x5
   14000454f:	jne    0x1400045b6
   140004551:	lea    r8,[rsp+0x38]
   140004556:	lea    rdx,[rip+0x23a63]        # 0x140027fc0
   14000455d:	lea    rcx,[rsp+0xb8]
   140004565:	call   0x140002c90
   14000456a:	mov    QWORD PTR [rsp+0xb0],rax
   140004572:	mov    rax,QWORD PTR [rsp+0xb0]
   14000457a:	mov    QWORD PTR [rsp+0x98],rax
   140004582:	mov    rcx,QWORD PTR [rsp+0x98]
   14000458a:	call   QWORD PTR [rip+0x22820]        # 0x140026db0
   140004590:	mov    dl,0x1
   140004592:	mov    rcx,rax
   140004595:	call   0x140017250
   14000459a:	nop
   14000459b:	lea    rcx,[rsp+0xb8]
   1400045a3:	call   QWORD PTR [rip+0x227b7]        # 0x140026d60
   1400045a9:	mov    DWORD PTR [rsp+0x30],0x3
   1400045b1:	jmp    0x140004670
   1400045b6:	cmp    DWORD PTR [rsp+0x20],0x4
   1400045bb:	jne    0x140004611
   1400045bd:	lea    r8,[rsp+0x38]
   1400045c2:	lea    rdx,[rip+0x23a67]        # 0x140028030
   1400045c9:	lea    rcx,[rsp+0x70]
   1400045ce:	call   0x140002c90
   1400045d3:	mov    QWORD PTR [rsp+0xa8],rax
   1400045db:	mov    rax,QWORD PTR [rsp+0xa8]
   1400045e3:	mov    QWORD PTR [rsp+0xc8],rax
   1400045eb:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400045f3:	call   QWORD PTR [rip+0x227b7]        # 0x140026db0
   1400045f9:	mov    dl,0x1
   1400045fb:	mov    rcx,rax
   1400045fe:	call   0x140017250
   140004603:	nop
   140004604:	lea    rcx,[rsp+0x70]
   140004609:	call   QWORD PTR [rip+0x22751]        # 0x140026d60
   14000460f:	jmp    0x140004670
   140004611:	cmp    DWORD PTR [rsp+0x20],0x5
   140004616:	jne    0x140004670
   140004618:	lea    r8,[rsp+0x38]
   14000461d:	lea    rdx,[rip+0x23aac]        # 0x1400280d0
   140004624:	lea    rcx,[rsp+0xa0]
   14000462c:	call   0x140002c90
   140004631:	mov    QWORD PTR [rsp+0x80],rax
   140004639:	mov    rax,QWORD PTR [rsp+0x80]
   140004641:	mov    QWORD PTR [rsp+0x90],rax
   140004649:	mov    rcx,QWORD PTR [rsp+0x90]
   140004651:	call   QWORD PTR [rip+0x22759]        # 0x140026db0
   140004657:	mov    dl,0x1
   140004659:	mov    rcx,rax
   14000465c:	call   0x140017250
   140004661:	nop
   140004662:	lea    rcx,[rsp+0xa0]
   14000466a:	call   QWORD PTR [rip+0x226f0]        # 0x140026d60
   140004670:	xor    edx,edx
   140004672:	mov    rcx,QWORD PTR [rsp+0x120]
   14000467a:	call   0x140004e60
   14000467f:	mov    edx,DWORD PTR [rsp+0x30]
   140004683:	mov    rcx,QWORD PTR [rsp+0x120]
   14000468b:	call   0x1400046c0
   140004690:	nop
   140004691:	lea    rcx,[rsp+0x38]
   140004696:	call   QWORD PTR [rip+0x226c4]        # 0x140026d60
   14000469c:	jmp    0x140004339
   1400046a1:	mov    rcx,QWORD PTR [rsp+0x108]
   1400046a9:	xor    rcx,rsp
   1400046ac:	call   0x140021890
   1400046b1:	add    rsp,0x118
   1400046b8:	ret    
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	mov    DWORD PTR [rsp+0x10],edx
   1400046c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400046c9:	sub    rsp,0x28
   1400046cd:	mov    rax,QWORD PTR [rsp+0x30]
   1400046d2:	cmp    QWORD PTR [rax+0xe8],0x0
   1400046da:	je     0x1400046fe
   1400046dc:	mov    rax,QWORD PTR [rsp+0x30]
   1400046e1:	mov    rax,QWORD PTR [rax+0xe8]
   1400046e8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400046ed:	mov    rcx,QWORD PTR [rcx+0xe8]
   1400046f4:	mov    rax,QWORD PTR [rax]
   1400046f7:	mov    edx,DWORD PTR [rsp+0x38]
   1400046fb:	call   QWORD PTR [rax+0x18]
   1400046fe:	mov    rax,QWORD PTR [rsp+0x30]
   140004703:	mov    ecx,DWORD PTR [rsp+0x38]
   140004707:	mov    DWORD PTR [rax+0xf8],ecx
   14000470d:	add    rsp,0x28
   140004711:	ret    
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	mov    QWORD PTR [rsp+0x8],rcx
   140004725:	sub    rsp,0xa8
   14000472c:	mov    rax,QWORD PTR [rip+0x36b1d]        # 0x14003b250
   140004733:	xor    rax,rsp
   140004736:	mov    QWORD PTR [rsp+0x98],rax
   14000473e:	mov    rax,QWORD PTR [rsp+0xb0]
   140004746:	cmp    QWORD PTR [rax+0xe0],0x0
   14000474e:	je     0x140004943
   140004754:	mov    rax,QWORD PTR [rsp+0xb0]
   14000475c:	cmp    QWORD PTR [rax+0xf0],0x0
   140004764:	je     0x140004943
   14000476a:	mov    rax,QWORD PTR [rsp+0xb0]
   140004772:	mov    rcx,QWORD PTR [rax+0xe0]
   140004779:	call   0x14001b7e0
   14000477e:	lea    rdx,[rsp+0x30]
   140004783:	mov    rcx,rax
   140004786:	call   0x1400054c0
   14000478b:	jmp    0x14000479f
   14000478d:	xor    r8d,r8d
   140004790:	lea    rdx,[rsp+0x60]
   140004795:	lea    rcx,[rsp+0x30]
   14000479a:	call   0x140005210
   14000479f:	mov    rax,QWORD PTR [rsp+0xb0]
   1400047a7:	mov    rcx,QWORD PTR [rax+0xe0]
   1400047ae:	call   0x14001b7e0
   1400047b3:	lea    rdx,[rsp+0x58]
   1400047b8:	mov    rcx,rax
   1400047bb:	call   0x140005500
   1400047c0:	mov    rdx,rax
   1400047c3:	lea    rcx,[rsp+0x30]
   1400047c8:	call   0x140005a90
   1400047cd:	movzx  eax,al
   1400047d0:	test   eax,eax
   1400047d2:	je     0x140004943
   1400047d8:	lea    rcx,[rsp+0x30]
   1400047dd:	call   0x1400051f0
   1400047e2:	mov    QWORD PTR [rsp+0x40],rax
   1400047e7:	mov    QWORD PTR [rsp+0x20],0x0
   1400047f0:	lea    rdx,[rsp+0x78]
   1400047f5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400047fa:	call   0x14001f460
   1400047ff:	lea    rdx,[rip+0x2d00a]        # 0x140031810
   140004806:	mov    rcx,rax
   140004809:	call   0x140003470
   14000480e:	movzx  eax,al
   140004811:	test   eax,eax
   140004813:	je     0x14000493e
   140004819:	lea    rdx,[rsp+0x88]
   140004821:	mov    rcx,QWORD PTR [rsp+0x40]
   140004826:	call   0x14001f460
   14000482b:	mov    rcx,QWORD PTR [rsp+0xb0]
   140004833:	mov    rcx,QWORD PTR [rcx+0xf0]
   14000483a:	mov    rdx,QWORD PTR [rsp+0xb0]
   140004842:	mov    rdx,QWORD PTR [rdx+0xf0]
   140004849:	mov    QWORD PTR [rsp+0x48],rdx
   14000484e:	mov    rcx,QWORD PTR [rcx]
   140004851:	mov    QWORD PTR [rsp+0x50],rcx
   140004856:	lea    r8,[rsp+0x20]
   14000485b:	mov    rdx,rax
   14000485e:	mov    rax,QWORD PTR [rsp+0x48]
   140004863:	mov    rcx,rax
   140004866:	mov    rax,QWORD PTR [rsp+0x50]
   14000486b:	call   QWORD PTR [rax+0x20]
   14000486e:	mov    DWORD PTR [rsp+0x38],eax
   140004872:	cmp    DWORD PTR [rsp+0x38],0x80010108
   14000487a:	jne    0x1400048b0
   14000487c:	xor    edx,edx
   14000487e:	mov    rcx,QWORD PTR [rsp+0xb0]
   140004886:	call   0x140004e60
   14000488b:	mov    edx,0x1
   140004890:	mov    rcx,QWORD PTR [rsp+0xb0]
   140004898:	call   0x1400046c0
   14000489d:	mov    dl,0x1
   14000489f:	lea    rcx,[rip+0x238ea]        # 0x140028190
   1400048a6:	call   0x140017250
   1400048ab:	jmp    0x14000493e
   1400048b0:	cmp    QWORD PTR [rsp+0x20],0x0
   1400048b6:	je     0x14000493e
   1400048bc:	mov    rax,QWORD PTR [rsp+0x20]
   1400048c1:	mov    rax,QWORD PTR [rax]
   1400048c4:	lea    rdx,[rsp+0x2c]
   1400048c9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400048ce:	call   QWORD PTR [rax+0x70]
   1400048d1:	mov    DWORD PTR [rsp+0x28],eax
   1400048d5:	cmp    DWORD PTR [rsp+0x28],0x0
   1400048da:	jl     0x14000493e
   1400048dc:	cmp    DWORD PTR [rsp+0x2c],0x6
   1400048e1:	jne    0x14000493e
   1400048e3:	mov    rax,QWORD PTR [rsp+0x20]
   1400048e8:	mov    rax,QWORD PTR [rax]
   1400048eb:	lea    rdx,[rsp+0x68]
   1400048f0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400048f5:	call   QWORD PTR [rax+0x50]
   1400048f8:	mov    DWORD PTR [rsp+0x28],eax
   1400048fc:	cmp    DWORD PTR [rsp+0x28],0x0
   140004901:	jl     0x14000492e
   140004903:	mov    rax,QWORD PTR [rsp+0xb0]
   14000490b:	cmp    QWORD PTR [rax+0xe0],0x0
   140004913:	je     0x14000492e
   140004915:	lea    rdx,[rsp+0x68]
   14000491a:	mov    rax,QWORD PTR [rsp+0xb0]
   140004922:	mov    rcx,QWORD PTR [rax+0xe0]
   140004929:	call   0x14001c0d0
   14000492e:	mov    rax,QWORD PTR [rsp+0x20]
   140004933:	mov    rax,QWORD PTR [rax]
   140004936:	mov    rcx,QWORD PTR [rsp+0x20]
   14000493b:	call   QWORD PTR [rax+0x48]
   14000493e:	jmp    0x14000478d
   140004943:	mov    rcx,QWORD PTR [rsp+0x98]
   14000494b:	xor    rcx,rsp
   14000494e:	call   0x140021890
   140004953:	add    rsp,0xa8
   14000495a:	ret    
   14000495b:	int3   
   14000495c:	int3   
   14000495d:	int3   
   14000495e:	int3   
   14000495f:	int3   
   140004960:	int3   
   140004961:	int3   
   140004962:	int3   
   140004963:	int3   
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	int3   
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	mov    QWORD PTR [rsp+0x10],rdx
   140004975:	mov    QWORD PTR [rsp+0x8],rcx
   14000497a:	push   rsi
   14000497b:	push   rdi
   14000497c:	sub    rsp,0x318
   140004983:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000498f:	mov    rax,QWORD PTR [rip+0x368ba]        # 0x14003b250
   140004996:	xor    rax,rsp
   140004999:	mov    QWORD PTR [rsp+0x308],rax
   1400049a1:	mov    BYTE PTR [rsp+0x30],0x0
   1400049a6:	call   0x140003460
   1400049ab:	mov    DWORD PTR [rsp+0x60],eax
   1400049af:	mov    rax,QWORD PTR [rsp+0x330]
   1400049b7:	cmp    QWORD PTR [rax+0xf0],0x0
   1400049bf:	je     0x140004cc9
   1400049c5:	mov    dl,0x1
   1400049c7:	lea    rcx,[rip+0x23912]        # 0x1400282e0
   1400049ce:	call   0x140017250
   1400049d3:	mov    rax,QWORD PTR [rsp+0x330]
   1400049db:	mov    rcx,QWORD PTR [rax+0xe0]
   1400049e2:	call   0x14001b5c0
   1400049e7:	mov    r8,rax
   1400049ea:	lea    rdx,[rsp+0x40]
   1400049ef:	mov    rcx,QWORD PTR [rsp+0x338]
   1400049f7:	call   0x14001f240
   1400049fc:	nop
   1400049fd:	lea    rcx,[rsp+0x40]
   140004a02:	call   QWORD PTR [rip+0x223a8]        # 0x140026db0
   140004a08:	mov    rcx,rax
   140004a0b:	call   QWORD PTR [rip+0x21aff]        # 0x140026510
   140004a11:	test   eax,eax
   140004a13:	je     0x140004a50
   140004a15:	lea    rax,[rsp+0xb0]
   140004a1d:	lea    rcx,[rip+0x2cdec]        # 0x140031810
   140004a24:	mov    rdi,rax
   140004a27:	mov    rsi,rcx
   140004a2a:	mov    ecx,0x10
   140004a2f:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004a31:	lea    rdx,[rsp+0xb0]
   140004a39:	mov    rcx,QWORD PTR [rsp+0x338]
   140004a41:	call   0x14001f490
   140004a46:	mov    BYTE PTR [rsp+0x30],0x1
   140004a4b:	jmp    0x140004cbe
   140004a50:	lea    rcx,[rip+0x238b1]        # 0x140028308
   140004a57:	call   0x140017e80
   140004a5c:	mov    rcx,QWORD PTR [rsp+0x330]
   140004a64:	mov    rcx,QWORD PTR [rcx+0xf0]
   140004a6b:	mov    rdx,QWORD PTR [rsp+0x330]
   140004a73:	mov    rdx,QWORD PTR [rdx+0xf0]
   140004a7a:	mov    QWORD PTR [rsp+0x58],rdx
   140004a7f:	mov    rcx,QWORD PTR [rcx]
   140004a82:	mov    QWORD PTR [rsp+0x88],rcx
   140004a8a:	lea    rdi,[rsp+0x38]
   140004a8f:	mov    QWORD PTR [rsp+0x20],rdi
   140004a94:	lea    r9,[rsp+0xc0]
   140004a9c:	xor    r8d,r8d
   140004a9f:	mov    rdx,rax
   140004aa2:	mov    rax,QWORD PTR [rsp+0x58]
   140004aa7:	mov    rcx,rax
   140004aaa:	mov    rax,QWORD PTR [rsp+0x88]
   140004ab2:	call   QWORD PTR [rax+0x18]
   140004ab5:	mov    DWORD PTR [rsp+0x34],eax
   140004ab9:	cmp    DWORD PTR [rsp+0x34],0x80010108
   140004ac1:	jne    0x140004af7
   140004ac3:	xor    edx,edx
   140004ac5:	mov    rcx,QWORD PTR [rsp+0x330]
   140004acd:	call   0x140004e60
   140004ad2:	mov    edx,0x1
   140004ad7:	mov    rcx,QWORD PTR [rsp+0x330]
   140004adf:	call   0x1400046c0
   140004ae4:	mov    dl,0x1
   140004ae6:	lea    rcx,[rip+0x23853]        # 0x140028340
   140004aed:	call   0x140017250
   140004af2:	jmp    0x140004cbe
   140004af7:	cmp    DWORD PTR [rsp+0x34],0x0
   140004afc:	jl     0x140004c64
   140004b02:	cmp    QWORD PTR [rsp+0x38],0x0
   140004b08:	je     0x140004c64
   140004b0e:	lea    rdx,[rip+0x2ccfb]        # 0x140031810
   140004b15:	lea    rcx,[rsp+0xc0]
   140004b1d:	call   0x140003470
   140004b22:	movzx  eax,al
   140004b25:	test   eax,eax
   140004b27:	je     0x140004c64
   140004b2d:	mov    rax,QWORD PTR [rsp+0x38]
   140004b32:	mov    rax,QWORD PTR [rax]
   140004b35:	xor    edx,edx
   140004b37:	mov    rcx,QWORD PTR [rsp+0x38]
   140004b3c:	call   QWORD PTR [rax+0xa8]
   140004b42:	lea    rcx,[rsp+0x40]
   140004b47:	call   QWORD PTR [rip+0x22263]        # 0x140026db0
   140004b4d:	mov    dl,0x1
   140004b4f:	mov    rcx,rax
   140004b52:	call   0x140017250
   140004b57:	lea    rcx,[rsp+0x40]
   140004b5c:	call   QWORD PTR [rip+0x2224e]        # 0x140026db0
   140004b62:	mov    rdx,rax
   140004b65:	lea    rcx,[rsp+0xd0]
   140004b6d:	call   0x140005100
   140004b72:	mov    QWORD PTR [rsp+0x80],rax
   140004b7a:	mov    rax,QWORD PTR [rsp+0x80]
   140004b82:	mov    QWORD PTR [rsp+0x70],rax
   140004b87:	mov    rcx,QWORD PTR [rsp+0x70]
   140004b8c:	call   0x14001ea00
   140004b91:	mov    QWORD PTR [rsp+0x78],rax
   140004b96:	mov    rcx,QWORD PTR [rsp+0x338]
   140004b9e:	call   0x14001f5a0
   140004ba3:	mov    rdx,rax
   140004ba6:	lea    rcx,[rsp+0x1e0]
   140004bae:	call   0x140005100
   140004bb3:	mov    QWORD PTR [rsp+0x48],rax
   140004bb8:	mov    rax,QWORD PTR [rsp+0x48]
   140004bbd:	mov    QWORD PTR [rsp+0x68],rax
   140004bc2:	mov    rcx,QWORD PTR [rsp+0x68]
   140004bc7:	call   0x14001ea00
   140004bcc:	mov    rcx,QWORD PTR [rsp+0x38]
   140004bd1:	mov    rcx,QWORD PTR [rcx]
   140004bd4:	mov    QWORD PTR [rsp+0x50],rcx
   140004bd9:	mov    rdx,QWORD PTR [rsp+0x78]
   140004bde:	mov    r8,rdx
   140004be1:	mov    rdx,rax
   140004be4:	mov    rcx,QWORD PTR [rsp+0x38]
   140004be9:	mov    rax,QWORD PTR [rsp+0x50]
   140004bee:	call   QWORD PTR [rax+0x20]
   140004bf1:	mov    DWORD PTR [rsp+0x34],eax
   140004bf5:	lea    rcx,[rsp+0x1e0]
   140004bfd:	call   0x1400051c0
   140004c02:	nop
   140004c03:	lea    rcx,[rsp+0xd0]
   140004c0b:	call   0x1400051c0
   140004c10:	cmp    DWORD PTR [rsp+0x34],0x0
   140004c15:	jl     0x140004c62
   140004c17:	mov    rax,QWORD PTR [rsp+0x38]
   140004c1c:	mov    rax,QWORD PTR [rax]
   140004c1f:	mov    rcx,QWORD PTR [rsp+0x38]
   140004c24:	call   QWORD PTR [rax+0x38]
   140004c27:	mov    DWORD PTR [rsp+0x34],eax
   140004c2b:	lea    rax,[rsp+0xa0]
   140004c33:	lea    rcx,[rsp+0xc0]
   140004c3b:	mov    rdi,rax
   140004c3e:	mov    rsi,rcx
   140004c41:	mov    ecx,0x10
   140004c46:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004c48:	lea    rdx,[rsp+0xa0]
   140004c50:	mov    rcx,QWORD PTR [rsp+0x338]
   140004c58:	call   0x14001f490
   140004c5d:	mov    BYTE PTR [rsp+0x30],0x1
   140004c62:	jmp    0x140004cbe
   140004c64:	mov    dl,0x1
   140004c66:	lea    rcx,[rip+0x23743]        # 0x1400283b0
   140004c6d:	call   0x140017250
   140004c72:	xor    eax,eax
   140004c74:	mov    WORD PTR [rsp+0x2f0],ax
   140004c7c:	lea    rax,[rsp+0x2f2]
   140004c84:	mov    rdi,rax
   140004c87:	xor    eax,eax
   140004c89:	mov    ecx,0x12
   140004c8e:	rep stos BYTE PTR es:[rdi],al
   140004c90:	mov    r9d,0x10
   140004c96:	mov    r8d,0xa
   140004c9c:	lea    rdx,[rsp+0x2f0]
   140004ca4:	mov    ecx,DWORD PTR [rsp+0x34]
   140004ca8:	call   QWORD PTR [rip+0x2169a]        # 0x140026348
   140004cae:	mov    dl,0x1
   140004cb0:	lea    rcx,[rsp+0x2f0]
   140004cb8:	call   0x140017250
   140004cbd:	nop
   140004cbe:	lea    rcx,[rsp+0x40]
   140004cc3:	call   QWORD PTR [rip+0x22097]        # 0x140026d60
   140004cc9:	movzx  eax,BYTE PTR [rsp+0x30]
   140004cce:	mov    rcx,QWORD PTR [rsp+0x308]
   140004cd6:	xor    rcx,rsp
   140004cd9:	call   0x140021890
   140004cde:	add    rsp,0x318
   140004ce5:	pop    rdi
   140004ce6:	pop    rsi
   140004ce7:	ret    
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	mov    QWORD PTR [rsp+0x10],rdx
   140004cf5:	mov    QWORD PTR [rsp+0x8],rcx
   140004cfa:	sub    rsp,0x68
   140004cfe:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140004d07:	mov    rax,QWORD PTR [rip+0x36542]        # 0x14003b250
   140004d0e:	xor    rax,rsp
   140004d11:	mov    QWORD PTR [rsp+0x50],rax
   140004d16:	mov    BYTE PTR [rsp+0x20],0x0
   140004d1b:	mov    rax,QWORD PTR [rsp+0x70]
   140004d20:	cmp    QWORD PTR [rax+0xf0],0x0
   140004d28:	je     0x140004e3a
   140004d2e:	mov    rax,QWORD PTR [rsp+0x70]
   140004d33:	cmp    QWORD PTR [rax+0xe0],0x0
   140004d3b:	je     0x140004e3a
   140004d41:	mov    dl,0x1
   140004d43:	lea    rcx,[rip+0x2363e]        # 0x140028388
   140004d4a:	call   0x140017250
   140004d4f:	lea    rdx,[rsp+0x40]
   140004d54:	mov    rcx,QWORD PTR [rsp+0x78]
   140004d59:	call   0x14001f460
   140004d5e:	mov    QWORD PTR [rsp+0x28],0x0
   140004d67:	lea    rdx,[rip+0x2caa2]        # 0x140031810
   140004d6e:	lea    rcx,[rsp+0x40]
   140004d73:	call   0x140003470
   140004d78:	movzx  eax,al
   140004d7b:	test   eax,eax
   140004d7d:	je     0x140004e3a
   140004d83:	mov    rax,QWORD PTR [rsp+0x70]
   140004d88:	mov    rax,QWORD PTR [rax+0xf0]
   140004d8f:	mov    rcx,QWORD PTR [rsp+0x70]
   140004d94:	mov    rcx,QWORD PTR [rcx+0xf0]
   140004d9b:	mov    rax,QWORD PTR [rax]
   140004d9e:	lea    r8,[rsp+0x28]
   140004da3:	lea    rdx,[rsp+0x40]
   140004da8:	call   QWORD PTR [rax+0x20]
   140004dab:	mov    DWORD PTR [rsp+0x24],eax
   140004daf:	mov    rax,QWORD PTR [rsp+0x70]
   140004db4:	mov    rcx,QWORD PTR [rax+0xe0]
   140004dbb:	call   0x14001b5c0
   140004dc0:	mov    r8,rax
   140004dc3:	lea    rdx,[rsp+0x30]
   140004dc8:	mov    rcx,QWORD PTR [rsp+0x78]
   140004dcd:	call   0x14001f240
   140004dd2:	nop
   140004dd3:	cmp    DWORD PTR [rsp+0x24],0x0
   140004dd8:	jl     0x140004de2
   140004dda:	cmp    QWORD PTR [rsp+0x28],0x0
   140004de0:	jne    0x140004e01
   140004de2:	lea    rcx,[rsp+0x30]
   140004de7:	call   QWORD PTR [rip+0x21fc3]        # 0x140026db0
   140004ded:	mov    rcx,rax
   140004df0:	call   QWORD PTR [rip+0x2171a]        # 0x140026510
   140004df6:	test   eax,eax
   140004df8:	je     0x140004dff
   140004dfa:	mov    BYTE PTR [rsp+0x20],0x1
   140004dff:	jmp    0x140004e2f
   140004e01:	lea    rcx,[rsp+0x30]
   140004e06:	call   QWORD PTR [rip+0x21fa4]        # 0x140026db0
   140004e0c:	mov    dl,0x1
   140004e0e:	mov    rcx,rax
   140004e11:	call   0x140017250
   140004e16:	mov    rax,QWORD PTR [rsp+0x28]
   140004e1b:	mov    rax,QWORD PTR [rax]
   140004e1e:	mov    rcx,QWORD PTR [rsp+0x28]
   140004e23:	call   QWORD PTR [rax+0x38]
   140004e26:	mov    DWORD PTR [rsp+0x24],eax
   140004e2a:	mov    BYTE PTR [rsp+0x20],0x1
   140004e2f:	lea    rcx,[rsp+0x30]
   140004e34:	call   QWORD PTR [rip+0x21f26]        # 0x140026d60
   140004e3a:	movzx  eax,BYTE PTR [rsp+0x20]
   140004e3f:	mov    rcx,QWORD PTR [rsp+0x50]
   140004e44:	xor    rcx,rsp
   140004e47:	call   0x140021890
   140004e4c:	add    rsp,0x68
   140004e50:	ret    
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	int3   
   140004e55:	int3   
   140004e56:	int3   
   140004e57:	int3   
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	mov    BYTE PTR [rsp+0x10],dl
   140004e64:	mov    QWORD PTR [rsp+0x8],rcx
   140004e69:	sub    rsp,0x28
   140004e6d:	mov    rax,QWORD PTR [rsp+0x30]
   140004e72:	movzx  ecx,BYTE PTR [rsp+0x38]
   140004e77:	mov    BYTE PTR [rax+0xd8],cl
   140004e7d:	movzx  eax,BYTE PTR [rsp+0x38]
   140004e82:	test   eax,eax
   140004e84:	je     0x140004e9d
   140004e86:	xor    r9d,r9d
   140004e89:	mov    r8d,0x1f4
   140004e8f:	xor    edx,edx
   140004e91:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e96:	call   0x140005460
   140004e9b:	jmp    0x140004eb2
   140004e9d:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ea2:	call   0x140005390
   140004ea7:	xor    edx,edx
   140004ea9:	mov    rcx,rax
   140004eac:	call   QWORD PTR [rip+0x216fe]        # 0x1400265b0
   140004eb2:	add    rsp,0x28
   140004eb6:	ret    
   140004eb7:	int3   
   140004eb8:	int3   
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	lea    rax,[rip+0x23a79]        # 0x140028940
   140004ec7:	ret    
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    QWORD PTR [rsp+0x8],rcx
   140004ed5:	sub    rsp,0x28
   140004ed9:	call   0x140004ec0
   140004ede:	add    rsp,0x28
   140004ee2:	ret    
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	int3   
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	mov    QWORD PTR [rsp+0x10],rdx
   140004ef5:	mov    QWORD PTR [rsp+0x8],rcx
   140004efa:	sub    rsp,0x38
   140004efe:	mov    rdx,QWORD PTR [rsp+0x48]
   140004f03:	mov    rcx,QWORD PTR [rsp+0x40]
   140004f08:	call   0x140005570
   140004f0d:	test   eax,eax
   140004f0f:	je     0x140004f1b
   140004f11:	mov    DWORD PTR [rsp+0x20],0x1
   140004f19:	jmp    0x140004f23
   140004f1b:	mov    DWORD PTR [rsp+0x20],0x0
   140004f23:	movzx  eax,BYTE PTR [rsp+0x20]
   140004f28:	add    rsp,0x38
   140004f2c:	ret    
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	mov    DWORD PTR [rsp+0x20],r9d
   140004f35:	mov    QWORD PTR [rsp+0x18],r8
   140004f3a:	mov    DWORD PTR [rsp+0x10],edx
   140004f3e:	mov    QWORD PTR [rsp+0x8],rcx
   140004f43:	sub    rsp,0x48
   140004f47:	cmp    QWORD PTR [rsp+0x50],0x0
   140004f4d:	je     0x140004f59
   140004f4f:	mov    DWORD PTR [rsp+0x20],0x1
   140004f57:	jmp    0x140004f61
   140004f59:	mov    DWORD PTR [rsp+0x20],0x0
   140004f61:	mov    eax,DWORD PTR [rsp+0x20]
   140004f65:	mov    DWORD PTR [rsp+0x2c],eax
   140004f69:	xor    eax,eax
   140004f6b:	test   eax,eax
   140004f6d:	jne    0x140004f69
   140004f6f:	cmp    DWORD PTR [rsp+0x2c],0x0
   140004f74:	jne    0x140004f80
   140004f76:	mov    ecx,0x80070057
   140004f7b:	call   0x140002ef0
   140004f80:	xor    eax,eax
   140004f82:	test   eax,eax
   140004f84:	jne    0x140004f47
   140004f86:	cmp    DWORD PTR [rsp+0x58],0x0
   140004f8b:	jl     0x140004f97
   140004f8d:	mov    DWORD PTR [rsp+0x24],0x1
   140004f95:	jmp    0x140004f9f
   140004f97:	mov    DWORD PTR [rsp+0x24],0x0
   140004f9f:	mov    eax,DWORD PTR [rsp+0x24]
   140004fa3:	mov    DWORD PTR [rsp+0x30],eax
   140004fa7:	xor    eax,eax
   140004fa9:	test   eax,eax
   140004fab:	jne    0x140004fa7
   140004fad:	cmp    DWORD PTR [rsp+0x30],0x0
   140004fb2:	jne    0x140004fbe
   140004fb4:	mov    ecx,0x80070057
   140004fb9:	call   0x140002ef0
   140004fbe:	xor    eax,eax
   140004fc0:	test   eax,eax
   140004fc2:	jne    0x140004f86
   140004fc4:	cmp    QWORD PTR [rsp+0x60],0x0
   140004fca:	je     0x140004fd6
   140004fcc:	mov    DWORD PTR [rsp+0x28],0x1
   140004fd4:	jmp    0x140004fde
   140004fd6:	mov    DWORD PTR [rsp+0x28],0x0
   140004fde:	mov    eax,DWORD PTR [rsp+0x28]
   140004fe2:	mov    DWORD PTR [rsp+0x34],eax
   140004fe6:	xor    eax,eax
   140004fe8:	test   eax,eax
   140004fea:	jne    0x140004fe6
   140004fec:	cmp    DWORD PTR [rsp+0x34],0x0
   140004ff1:	jne    0x140004ffd
   140004ff3:	mov    ecx,0x80070057
   140004ff8:	call   0x140002ef0
   140004ffd:	xor    eax,eax
   140004fff:	test   eax,eax
   140005001:	jne    0x140004fc4
   140005003:	mov    rax,QWORD PTR [rsp+0x50]
   140005008:	mov    rcx,QWORD PTR [rsp+0x60]
   14000500d:	cmp    QWORD PTR [rax],rcx
   140005010:	je     0x14000507b
   140005012:	mov    eax,DWORD PTR [rsp+0x68]
   140005016:	cmp    DWORD PTR [rsp+0x58],eax
   14000501a:	jle    0x14000505e
   14000501c:	movsxd rax,DWORD PTR [rsp+0x58]
   140005021:	mov    r8d,0x2
   140005027:	mov    rdx,rax
   14000502a:	mov    rax,QWORD PTR [rsp+0x50]
   14000502f:	mov    rcx,QWORD PTR [rax]
   140005032:	call   QWORD PTR [rip+0x21300]        # 0x140026338
   140005038:	mov    QWORD PTR [rsp+0x38],rax
   14000503d:	cmp    QWORD PTR [rsp+0x38],0x0
   140005043:	jne    0x14000504f
   140005045:	mov    ecx,0x8007000e
   14000504a:	call   0x140002ef0
   14000504f:	mov    rax,QWORD PTR [rsp+0x50]
   140005054:	mov    rcx,QWORD PTR [rsp+0x38]
   140005059:	mov    QWORD PTR [rax],rcx
   14000505c:	jmp    0x140005079
   14000505e:	mov    rax,QWORD PTR [rsp+0x50]
   140005063:	mov    rcx,QWORD PTR [rax]
   140005066:	call   QWORD PTR [rip+0x21334]        # 0x1400263a0
   14000506c:	mov    rax,QWORD PTR [rsp+0x50]
   140005071:	mov    rcx,QWORD PTR [rsp+0x60]
   140005076:	mov    QWORD PTR [rax],rcx
   140005079:	jmp    0x1400050af
   14000507b:	mov    eax,DWORD PTR [rsp+0x68]
   14000507f:	cmp    DWORD PTR [rsp+0x58],eax
   140005083:	jle    0x1400050a2
   140005085:	movsxd rax,DWORD PTR [rsp+0x58]
   14000508a:	mov    edx,0x2
   14000508f:	mov    rcx,rax
   140005092:	call   QWORD PTR [rip+0x212a8]        # 0x140026340
   140005098:	mov    rcx,QWORD PTR [rsp+0x50]
   14000509d:	mov    QWORD PTR [rcx],rax
   1400050a0:	jmp    0x1400050af
   1400050a2:	mov    rax,QWORD PTR [rsp+0x50]
   1400050a7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400050ac:	mov    QWORD PTR [rax],rcx
   1400050af:	mov    rax,QWORD PTR [rsp+0x50]
   1400050b4:	cmp    QWORD PTR [rax],0x0
   1400050b8:	jne    0x1400050c4
   1400050ba:	mov    ecx,0x8007000e
   1400050bf:	call   0x140002ef0
   1400050c4:	add    rsp,0x48
   1400050c8:	ret    
   1400050c9:	int3   
   1400050ca:	int3   
   1400050cb:	int3   
   1400050cc:	int3   
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	mov    DWORD PTR [rsp+0x18],r8d
   1400050d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400050da:	mov    QWORD PTR [rsp+0x8],rcx
   1400050df:	sub    rsp,0x28
   1400050e3:	mov    rax,QWORD PTR [rsp+0x38]
   1400050e8:	cmp    QWORD PTR [rsp+0x30],rax
   1400050ed:	je     0x1400050fa
   1400050ef:	mov    rcx,QWORD PTR [rsp+0x30]
   1400050f4:	call   QWORD PTR [rip+0x212a6]        # 0x1400263a0
   1400050fa:	add    rsp,0x28
   1400050fe:	ret    
   1400050ff:	int3   
   140005100:	mov    QWORD PTR [rsp+0x10],rdx
   140005105:	mov    QWORD PTR [rsp+0x8],rcx
   14000510a:	sub    rsp,0x28
   14000510e:	mov    rax,QWORD PTR [rsp+0x30]
   140005113:	add    rax,0x8
   140005117:	mov    rcx,QWORD PTR [rsp+0x30]
   14000511c:	mov    QWORD PTR [rcx],rax
   14000511f:	mov    rdx,QWORD PTR [rsp+0x38]
   140005124:	mov    rcx,QWORD PTR [rsp+0x30]
   140005129:	call   0x1400053d0
   14000512e:	mov    rax,QWORD PTR [rsp+0x30]
   140005133:	add    rsp,0x28
   140005137:	ret    
   140005138:	int3   
   140005139:	int3   
   14000513a:	int3   
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	mov    QWORD PTR [rsp+0x18],r8
   140005145:	mov    QWORD PTR [rsp+0x10],rdx
   14000514a:	mov    QWORD PTR [rsp+0x8],rcx
   14000514f:	sub    rsp,0x28
   140005153:	mov    r8,QWORD PTR [rsp+0x40]
   140005158:	mov    rdx,QWORD PTR [rsp+0x38]
   14000515d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005162:	call   0x1400059d0
   140005167:	mov    rax,QWORD PTR [rsp+0x30]
   14000516c:	add    rsp,0x28
   140005170:	ret    
   140005171:	int3   
   140005172:	int3   
   140005173:	int3   
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    QWORD PTR [rsp+0x8],rcx
   140005185:	mov    rax,QWORD PTR [rsp+0x8]
   14000518a:	mov    DWORD PTR [rax],0x0
   140005190:	mov    rax,QWORD PTR [rsp+0x8]
   140005195:	mov    DWORD PTR [rax+0x4],0x0
   14000519c:	mov    rax,QWORD PTR [rsp+0x8]
   1400051a1:	mov    DWORD PTR [rax+0x8],0x0
   1400051a8:	mov    rax,QWORD PTR [rsp+0x8]
   1400051ad:	mov    DWORD PTR [rax+0xc],0x0
   1400051b4:	mov    rax,QWORD PTR [rsp+0x8]
   1400051b9:	ret    
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400051c5:	sub    rsp,0x28
   1400051c9:	mov    rax,QWORD PTR [rsp+0x30]
   1400051ce:	add    rax,0x8
   1400051d2:	mov    r8d,0x80
   1400051d8:	mov    rdx,rax
   1400051db:	mov    rax,QWORD PTR [rsp+0x30]
   1400051e0:	mov    rcx,QWORD PTR [rax]
   1400051e3:	call   0x1400050d0
   1400051e8:	add    rsp,0x28
   1400051ec:	ret    
   1400051ed:	int3   
   1400051ee:	int3   
   1400051ef:	int3   
   1400051f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400051f5:	sub    rsp,0x28
   1400051f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051fe:	call   0x140005ad0
   140005203:	add    rsp,0x28
   140005207:	ret    
   140005208:	int3   
   140005209:	int3   
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	mov    DWORD PTR [rsp+0x18],r8d
   140005215:	mov    QWORD PTR [rsp+0x10],rdx
   14000521a:	mov    QWORD PTR [rsp+0x8],rcx
   14000521f:	sub    rsp,0x38
   140005223:	mov    rax,QWORD PTR [rsp+0x40]
   140005228:	mov    rax,QWORD PTR [rax]
   14000522b:	mov    QWORD PTR [rsp+0x20],rax
   140005230:	mov    rcx,QWORD PTR [rsp+0x40]
   140005235:	call   0x140005260
   14000523a:	mov    rax,QWORD PTR [rsp+0x48]
   14000523f:	mov    rcx,QWORD PTR [rsp+0x20]
   140005244:	mov    QWORD PTR [rax],rcx
   140005247:	mov    rax,QWORD PTR [rsp+0x48]
   14000524c:	add    rsp,0x38
   140005250:	ret    
   140005251:	int3   
   140005252:	int3   
   140005253:	int3   
   140005254:	int3   
   140005255:	int3   
   140005256:	int3   
   140005257:	int3   
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	mov    QWORD PTR [rsp+0x8],rcx
   140005265:	sub    rsp,0x28
   140005269:	mov    rcx,QWORD PTR [rsp+0x30]
   14000526e:	call   0x140005b40
   140005273:	mov    rax,QWORD PTR [rsp+0x30]
   140005278:	add    rsp,0x28
   14000527c:	ret    
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	mov    DWORD PTR [rsp+0x10],edx
   140005284:	mov    QWORD PTR [rsp+0x8],rcx
   140005289:	sub    rsp,0x28
   14000528d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005292:	call   0x1400035c0
   140005297:	mov    eax,DWORD PTR [rsp+0x38]
   14000529b:	and    eax,0x1
   14000529e:	test   eax,eax
   1400052a0:	je     0x1400052ac
   1400052a2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400052a7:	call   0x140002ba0
   1400052ac:	mov    rax,QWORD PTR [rsp+0x30]
   1400052b1:	add    rsp,0x28
   1400052b5:	ret    
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    DWORD PTR [rsp+0x8],ecx
   1400052c4:	sub    rsp,0x38
   1400052c8:	mov    eax,DWORD PTR [rsp+0x40]
   1400052cc:	mov    DWORD PTR [rsp+0x20],eax
   1400052d0:	cmp    DWORD PTR [rsp+0x20],0x0
   1400052d5:	je     0x140005303
   1400052d7:	cmp    DWORD PTR [rsp+0x20],0xc
   1400052dc:	je     0x1400052f5
   1400052de:	cmp    DWORD PTR [rsp+0x20],0x16
   1400052e3:	je     0x1400052fc
   1400052e5:	cmp    DWORD PTR [rsp+0x20],0x22
   1400052ea:	je     0x1400052fc
   1400052ec:	cmp    DWORD PTR [rsp+0x20],0x50
   1400052f1:	je     0x140005303
   1400052f3:	jmp    0x140005305
   1400052f5:	call   0x140020ba2
   1400052fa:	jmp    0x14000530a
   1400052fc:	call   0x140020d46
   140005301:	jmp    0x14000530a
   140005303:	jmp    0x14000530a
   140005305:	call   0x140020d46
   14000530a:	mov    eax,DWORD PTR [rsp+0x40]
   14000530e:	add    rsp,0x38
   140005312:	ret    
   140005313:	int3   
   140005314:	int3   
   140005315:	int3   
   140005316:	int3   
   140005317:	int3   
   140005318:	int3   
   140005319:	int3   
   14000531a:	int3   
   14000531b:	int3   
   14000531c:	int3   
   14000531d:	int3   
   14000531e:	int3   
   14000531f:	int3   
   140005320:	mov    QWORD PTR [rsp+0x8],rcx
   140005325:	sub    rsp,0x28
   140005329:	xor    edx,edx
   14000532b:	mov    rax,QWORD PTR [rsp+0x30]
   140005330:	mov    rcx,QWORD PTR [rax+0x40]
   140005334:	call   QWORD PTR [rip+0x2126e]        # 0x1400265a8
   14000533a:	add    rsp,0x28
   14000533e:	ret    
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x8],rcx
   140005345:	sub    rsp,0x28
   140005349:	mov    edx,0x1
   14000534e:	mov    rax,QWORD PTR [rsp+0x30]
   140005353:	mov    rcx,QWORD PTR [rax+0x40]
   140005357:	call   QWORD PTR [rip+0x2124b]        # 0x1400265a8
   14000535d:	add    rsp,0x28
   140005361:	ret    
   140005362:	int3   
   140005363:	int3   
   140005364:	int3   
   140005365:	int3   
   140005366:	int3   
   140005367:	int3   
   140005368:	int3   
   140005369:	int3   
   14000536a:	int3   
   14000536b:	int3   
   14000536c:	int3   
   14000536d:	int3   
   14000536e:	int3   
   14000536f:	int3   
   140005370:	sub    rsp,0x28
   140005374:	call   QWORD PTR [rip+0x21226]        # 0x1400265a0
   14000537a:	mov    rcx,rax
   14000537d:	call   0x140020d58
   140005382:	add    rsp,0x28
   140005386:	ret    
   140005387:	int3   
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	mov    QWORD PTR [rsp+0x8],rcx
   140005395:	sub    rsp,0x18
   140005399:	cmp    QWORD PTR [rsp+0x20],0x0
   14000539f:	jne    0x1400053ab
   1400053a1:	mov    QWORD PTR [rsp],0x0
   1400053a9:	jmp    0x1400053b8
   1400053ab:	mov    rax,QWORD PTR [rsp+0x20]
   1400053b0:	mov    rax,QWORD PTR [rax+0x40]
   1400053b4:	mov    QWORD PTR [rsp],rax
   1400053b8:	mov    rax,QWORD PTR [rsp]
   1400053bc:	add    rsp,0x18
   1400053c0:	ret    
   1400053c1:	int3   
   1400053c2:	int3   
   1400053c3:	int3   
   1400053c4:	int3   
   1400053c5:	int3   
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400053d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400053da:	sub    rsp,0x38
   1400053de:	cmp    QWORD PTR [rsp+0x48],0x0
   1400053e4:	jne    0x1400053f4
   1400053e6:	mov    rax,QWORD PTR [rsp+0x40]
   1400053eb:	mov    QWORD PTR [rax],0x0
   1400053f2:	jmp    0x140005453
   1400053f4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400053f9:	call   QWORD PTR [rip+0x20f51]        # 0x140026350
   1400053ff:	inc    eax
   140005401:	mov    DWORD PTR [rsp+0x20],eax
   140005405:	mov    rax,QWORD PTR [rsp+0x40]
   14000540a:	add    rax,0x8
   14000540e:	mov    rcx,QWORD PTR [rsp+0x40]
   140005413:	mov    r9d,0x80
   140005419:	mov    r8,rax
   14000541c:	mov    edx,DWORD PTR [rsp+0x20]
   140005420:	call   0x140004f30
   140005425:	xor    eax,eax
   140005427:	test   eax,eax
   140005429:	jne    0x140005425
   14000542b:	movsxd rax,DWORD PTR [rsp+0x20]
   140005430:	shl    rax,1
   140005433:	movsxd rcx,DWORD PTR [rsp+0x20]
   140005438:	shl    rcx,1
   14000543b:	mov    r9,rax
   14000543e:	mov    r8,QWORD PTR [rsp+0x48]
   140005443:	mov    rdx,rcx
   140005446:	mov    rax,QWORD PTR [rsp+0x40]
   14000544b:	mov    rcx,QWORD PTR [rax]
   14000544e:	call   0x140005530
   140005453:	add    rsp,0x38
   140005457:	ret    
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	mov    QWORD PTR [rsp+0x20],r9
   140005465:	mov    DWORD PTR [rsp+0x18],r8d
   14000546a:	mov    QWORD PTR [rsp+0x10],rdx
   14000546f:	mov    QWORD PTR [rsp+0x8],rcx
   140005474:	sub    rsp,0x28
   140005478:	mov    r9,QWORD PTR [rsp+0x48]
   14000547d:	mov    r8d,DWORD PTR [rsp+0x40]
   140005482:	mov    rdx,QWORD PTR [rsp+0x38]
   140005487:	mov    rax,QWORD PTR [rsp+0x30]
   14000548c:	mov    rcx,QWORD PTR [rax+0x40]
   140005490:	call   QWORD PTR [rip+0x21122]        # 0x1400265b8
   140005496:	add    rsp,0x28
   14000549a:	ret    
   14000549b:	int3   
   14000549c:	int3   
   14000549d:	int3   
   14000549e:	int3   
   14000549f:	int3   
   1400054a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400054a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400054aa:	ret    
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400054b5:	mov    rax,QWORD PTR [rsp+0x8]
   1400054ba:	add    rax,0x10
   1400054be:	ret    
   1400054bf:	int3   
   1400054c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400054c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400054ca:	sub    rsp,0x28
   1400054ce:	mov    rax,QWORD PTR [rsp+0x30]
   1400054d3:	mov    rcx,QWORD PTR [rax]
   1400054d6:	call   0x140017e80
   1400054db:	mov    r8,QWORD PTR [rsp+0x30]
   1400054e0:	mov    rdx,QWORD PTR [rax]
   1400054e3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400054e8:	call   0x140005140
   1400054ed:	mov    rax,QWORD PTR [rsp+0x38]
   1400054f2:	add    rsp,0x28
   1400054f6:	ret    
   1400054f7:	int3   
   1400054f8:	int3   
   1400054f9:	int3   
   1400054fa:	int3   
   1400054fb:	int3   
   1400054fc:	int3   
   1400054fd:	int3   
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	mov    QWORD PTR [rsp+0x10],rdx
   140005505:	mov    QWORD PTR [rsp+0x8],rcx
   14000550a:	sub    rsp,0x28
   14000550e:	mov    r8,QWORD PTR [rsp+0x30]
   140005513:	mov    rax,QWORD PTR [rsp+0x30]
   140005518:	mov    rdx,QWORD PTR [rax]
   14000551b:	mov    rcx,QWORD PTR [rsp+0x38]
   140005520:	call   0x140005140
   140005525:	mov    rax,QWORD PTR [rsp+0x38]
   14000552a:	add    rsp,0x28
   14000552e:	ret    
   14000552f:	int3   
   140005530:	mov    QWORD PTR [rsp+0x20],r9
   140005535:	mov    QWORD PTR [rsp+0x18],r8
   14000553a:	mov    QWORD PTR [rsp+0x10],rdx
   14000553f:	mov    QWORD PTR [rsp+0x8],rcx
   140005544:	sub    rsp,0x28
   140005548:	mov    r9,QWORD PTR [rsp+0x48]
   14000554d:	mov    r8,QWORD PTR [rsp+0x40]
   140005552:	mov    rdx,QWORD PTR [rsp+0x38]
   140005557:	mov    rcx,QWORD PTR [rsp+0x30]
   14000555c:	call   QWORD PTR [rip+0x20df6]        # 0x140026358
   140005562:	mov    ecx,eax
   140005564:	call   0x1400052c0
   140005569:	add    rsp,0x28
   14000556d:	ret    
   14000556e:	int3   
   14000556f:	int3   
   140005570:	mov    QWORD PTR [rsp+0x10],rdx
   140005575:	mov    QWORD PTR [rsp+0x8],rcx
   14000557a:	sub    rsp,0x38
   14000557e:	mov    r8d,0x10
   140005584:	mov    rdx,QWORD PTR [rsp+0x48]
   140005589:	mov    rcx,QWORD PTR [rsp+0x40]
   14000558e:	call   0x1400218b0
   140005593:	test   eax,eax
   140005595:	jne    0x1400055a1
   140005597:	mov    DWORD PTR [rsp+0x20],0x1
   14000559f:	jmp    0x1400055a9
   1400055a1:	mov    DWORD PTR [rsp+0x20],0x0
   1400055a9:	mov    eax,DWORD PTR [rsp+0x20]
   1400055ad:	add    rsp,0x38
   1400055b1:	ret    
   1400055b2:	int3   
   1400055b3:	int3   
   1400055b4:	int3   
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400055c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400055ca:	mov    rax,QWORD PTR [rsp+0x8]
   1400055cf:	mov    rcx,QWORD PTR [rsp+0x10]
   1400055d4:	mov    QWORD PTR [rax],rcx
   1400055d7:	mov    rax,QWORD PTR [rsp+0x8]
   1400055dc:	ret    
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	int3   
   1400055e1:	int3   
   1400055e2:	int3   
   1400055e3:	int3   
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	int3   
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400055f5:	ret    
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	mov    QWORD PTR [rsp+0x8],rcx
   140005605:	push   rdi
   140005606:	sub    rsp,0x2a0
   14000560d:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140005616:	mov    rax,QWORD PTR [rip+0x35c33]        # 0x14003b250
   14000561d:	xor    rax,rsp
   140005620:	mov    QWORD PTR [rsp+0x290],rax
   140005628:	mov    BYTE PTR [rsp+0x20],0x0
   14000562d:	mov    rax,QWORD PTR [rsp+0x2b0]
   140005635:	cmp    QWORD PTR [rax],0x0
   140005639:	je     0x140005813
   14000563f:	mov    BYTE PTR [rsp+0x20],0x1
   140005644:	mov    dl,0x1
   140005646:	lea    rcx,[rip+0x23323]        # 0x140028970
   14000564d:	call   0x140017250
   140005652:	mov    rax,QWORD PTR [rsp+0x2b0]
   14000565a:	mov    rcx,QWORD PTR [rax]
   14000565d:	call   0x14001b800
   140005662:	lea    rdx,[rsp+0x38]
   140005667:	mov    rcx,rax
   14000566a:	call   0x140005b70
   14000566f:	jmp    0x140005683
   140005671:	xor    r8d,r8d
   140005674:	lea    rdx,[rsp+0x78]
   140005679:	lea    rcx,[rsp+0x38]
   14000567e:	call   0x140005af0
   140005683:	mov    rax,QWORD PTR [rsp+0x2b0]
   14000568b:	mov    rcx,QWORD PTR [rax]
   14000568e:	call   0x14001b800
   140005693:	lea    rdx,[rsp+0x70]
   140005698:	mov    rcx,rax
   14000569b:	call   0x140005bb0
   1400056a0:	mov    rdx,rax
   1400056a3:	lea    rcx,[rsp+0x38]
   1400056a8:	call   0x140005a90
   1400056ad:	movzx  eax,al
   1400056b0:	test   eax,eax
   1400056b2:	je     0x140005813
   1400056b8:	movzx  eax,BYTE PTR [rsp+0x20]
   1400056bd:	test   eax,eax
   1400056bf:	je     0x140005813
   1400056c5:	lea    rcx,[rsp+0x38]
   1400056ca:	call   0x140005ad0
   1400056cf:	mov    QWORD PTR [rsp+0x40],rax
   1400056d4:	xor    eax,eax
   1400056d6:	mov    WORD PTR [rsp+0x80],ax
   1400056de:	lea    rax,[rsp+0x82]
   1400056e6:	mov    rdi,rax
   1400056e9:	xor    eax,eax
   1400056eb:	mov    ecx,0x206
   1400056f0:	rep stos BYTE PTR es:[rdi],al
   1400056f2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400056f7:	call   0x14001f810
   1400056fc:	mov    QWORD PTR [rsp+0x58],rax
   140005701:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140005709:	mov    rcx,QWORD PTR [rcx]
   14000570c:	call   0x14001b5c0
   140005711:	mov    rcx,QWORD PTR [rsp+0x58]
   140005716:	mov    r8,rcx
   140005719:	mov    rdx,rax
   14000571c:	lea    rcx,[rsp+0x80]
   140005724:	call   QWORD PTR [rip+0x20df6]        # 0x140026520
   14000572a:	lea    rdx,[rsp+0x80]
   140005732:	lea    rcx,[rsp+0x28]
   140005737:	call   QWORD PTR [rip+0x2162b]        # 0x140026d68
   14000573d:	nop
   14000573e:	mov    rcx,QWORD PTR [rsp+0x40]
   140005743:	call   0x14001f870
   140005748:	mov    rdx,rax
   14000574b:	lea    rcx,[rsp+0x30]
   140005750:	call   QWORD PTR [rip+0x21612]        # 0x140026d68
   140005756:	nop
   140005757:	lea    rcx,[rsp+0x30]
   14000575c:	call   QWORD PTR [rip+0x2115e]        # 0x1400268c0
   140005762:	movzx  eax,al
   140005765:	test   eax,eax
   140005767:	jne    0x1400057c3
   140005769:	lea    r8,[rip+0x23220]        # 0x140028990
   140005770:	lea    rdx,[rip+0x2321d]        # 0x140028994
   140005777:	lea    rcx,[rsp+0x30]
   14000577c:	call   QWORD PTR [rip+0x2112e]        # 0x1400268b0
   140005782:	lea    r8,[rsp+0x30]
   140005787:	lea    rdx,[rip+0x2320a]        # 0x140028998
   14000578e:	lea    rcx,[rsp+0x60]
   140005793:	call   0x140002c90
   140005798:	mov    QWORD PTR [rsp+0x48],rax
   14000579d:	mov    rax,QWORD PTR [rsp+0x48]
   1400057a2:	mov    QWORD PTR [rsp+0x50],rax
   1400057a7:	mov    rdx,QWORD PTR [rsp+0x50]
   1400057ac:	lea    rcx,[rsp+0x28]
   1400057b1:	call   QWORD PTR [rip+0x21101]        # 0x1400268b8
   1400057b7:	nop
   1400057b8:	lea    rcx,[rsp+0x60]
   1400057bd:	call   QWORD PTR [rip+0x2159d]        # 0x140026d60
   1400057c3:	lea    rcx,[rsp+0x28]
   1400057c8:	call   QWORD PTR [rip+0x215e2]        # 0x140026db0
   1400057ce:	mov    dl,0x1
   1400057d0:	mov    rcx,rax
   1400057d3:	call   0x140017250
   1400057d8:	lea    rcx,[rsp+0x28]
   1400057dd:	call   QWORD PTR [rip+0x215cd]        # 0x140026db0
   1400057e3:	mov    rdx,rax
   1400057e6:	mov    rcx,QWORD PTR [rsp+0x2b0]
   1400057ee:	call   0x140005840
   1400057f3:	mov    BYTE PTR [rsp+0x20],al
   1400057f7:	lea    rcx,[rsp+0x30]
   1400057fc:	call   QWORD PTR [rip+0x2155e]        # 0x140026d60
   140005802:	nop
   140005803:	lea    rcx,[rsp+0x28]
   140005808:	call   QWORD PTR [rip+0x21552]        # 0x140026d60
   14000580e:	jmp    0x140005671
   140005813:	movzx  eax,BYTE PTR [rsp+0x20]
   140005818:	mov    rcx,QWORD PTR [rsp+0x290]
   140005820:	xor    rcx,rsp
   140005823:	call   0x140021890
   140005828:	add    rsp,0x2a0
   14000582f:	pop    rdi
   140005830:	ret    
   140005831:	int3   
   140005832:	int3   
   140005833:	int3   
   140005834:	int3   
   140005835:	int3   
   140005836:	int3   
   140005837:	int3   
   140005838:	int3   
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	mov    QWORD PTR [rsp+0x10],rdx
   140005845:	mov    QWORD PTR [rsp+0x8],rcx
   14000584a:	sub    rsp,0x118
   140005851:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000585d:	mov    DWORD PTR [rsp+0x58],0x0
   140005865:	mov    rax,QWORD PTR [rsp+0x128]
   14000586d:	mov    QWORD PTR [rsp+0x70],rax
   140005872:	mov    r8d,0x68
   140005878:	xor    edx,edx
   14000587a:	lea    rcx,[rsp+0xa0]
   140005882:	call   0x1400216e0
   140005887:	mov    DWORD PTR [rsp+0xa0],0x68
   140005892:	lea    rax,[rsp+0x78]
   140005897:	mov    QWORD PTR [rsp+0x48],rax
   14000589c:	lea    rax,[rsp+0xa0]
   1400058a4:	mov    QWORD PTR [rsp+0x40],rax
   1400058a9:	mov    QWORD PTR [rsp+0x38],0x0
   1400058b2:	mov    QWORD PTR [rsp+0x30],0x0
   1400058bb:	mov    DWORD PTR [rsp+0x28],0x0
   1400058c3:	mov    DWORD PTR [rsp+0x20],0x0
   1400058cb:	xor    r9d,r9d
   1400058ce:	xor    r8d,r8d
   1400058d1:	mov    rdx,QWORD PTR [rsp+0x70]
   1400058d6:	xor    ecx,ecx
   1400058d8:	call   QWORD PTR [rip+0x207ba]        # 0x140026098
   1400058de:	mov    DWORD PTR [rsp+0x58],eax
   1400058e2:	call   QWORD PTR [rip+0x20870]        # 0x140026158
   1400058e8:	mov    DWORD PTR [rsp+0x68],eax
   1400058ec:	mov    edx,0xffffffff
   1400058f1:	mov    rcx,QWORD PTR [rsp+0x78]
   1400058f6:	call   QWORD PTR [rip+0x2083c]        # 0x140026138
   1400058fc:	lea    rdx,[rsp+0x54]
   140005901:	mov    rcx,QWORD PTR [rsp+0x78]
   140005906:	call   QWORD PTR [rip+0x207fc]        # 0x140026108
   14000590c:	mov    rcx,QWORD PTR [rsp+0x78]
   140005911:	call   QWORD PTR [rip+0x207b1]        # 0x1400260c8
   140005917:	mov    rcx,QWORD PTR [rsp+0x80]
   14000591f:	call   QWORD PTR [rip+0x207a3]        # 0x1400260c8
   140005925:	lea    rcx,[rsp+0x60]
   14000592a:	call   QWORD PTR [rip+0x21450]        # 0x140026d80
   140005930:	nop
   140005931:	cmp    DWORD PTR [rsp+0x58],0x0
   140005936:	je     0x140005951
   140005938:	mov    r8d,DWORD PTR [rsp+0x54]
   14000593d:	lea    rdx,[rip+0x2305c]        # 0x1400289a0
   140005944:	lea    rcx,[rsp+0x60]
   140005949:	call   QWORD PTR [rip+0x211b9]        # 0x140026b08
   14000594f:	jmp    0x14000596d
   140005951:	mov    r9d,DWORD PTR [rsp+0x54]
   140005956:	mov    r8d,DWORD PTR [rsp+0x68]
   14000595b:	lea    rdx,[rip+0x2308e]        # 0x1400289f0
   140005962:	lea    rcx,[rsp+0x60]
   140005967:	call   QWORD PTR [rip+0x2119b]        # 0x140026b08
   14000596d:	lea    rcx,[rsp+0x60]
   140005972:	call   QWORD PTR [rip+0x21438]        # 0x140026db0
   140005978:	mov    dl,0x1
   14000597a:	mov    rcx,rax
   14000597d:	call   0x140017250
   140005982:	cmp    DWORD PTR [rsp+0x54],0x0
   140005987:	je     0x1400059a7
   140005989:	cmp    DWORD PTR [rsp+0x54],0x669
   140005991:	je     0x1400059a7
   140005993:	cmp    DWORD PTR [rsp+0x54],0xbc2
   14000599b:	je     0x1400059a7
   14000599d:	mov    DWORD PTR [rsp+0x5c],0x0
   1400059a5:	jmp    0x1400059af
   1400059a7:	mov    DWORD PTR [rsp+0x5c],0x1
   1400059af:	movzx  eax,BYTE PTR [rsp+0x5c]
   1400059b4:	mov    BYTE PTR [rsp+0x50],al
   1400059b8:	lea    rcx,[rsp+0x60]
   1400059bd:	call   QWORD PTR [rip+0x2139d]        # 0x140026d60
   1400059c3:	movzx  eax,BYTE PTR [rsp+0x50]
   1400059c8:	add    rsp,0x118
   1400059cf:	ret    
   1400059d0:	mov    QWORD PTR [rsp+0x18],r8
   1400059d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400059da:	mov    QWORD PTR [rsp+0x8],rcx
   1400059df:	sub    rsp,0x28
   1400059e3:	mov    r8,QWORD PTR [rsp+0x40]
   1400059e8:	mov    rdx,QWORD PTR [rsp+0x38]
   1400059ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400059f2:	call   0x140005a10
   1400059f7:	mov    rax,QWORD PTR [rsp+0x30]
   1400059fc:	add    rsp,0x28
   140005a00:	ret    
   140005a01:	int3   
   140005a02:	int3   
   140005a03:	int3   
   140005a04:	int3   
   140005a05:	int3   
   140005a06:	int3   
   140005a07:	int3   
   140005a08:	int3   
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	mov    QWORD PTR [rsp+0x18],r8
   140005a15:	mov    QWORD PTR [rsp+0x10],rdx
   140005a1a:	mov    QWORD PTR [rsp+0x8],rcx
   140005a1f:	sub    rsp,0x28
   140005a23:	mov    rax,QWORD PTR [rsp+0x30]
   140005a28:	mov    rcx,QWORD PTR [rsp+0x38]
   140005a2d:	mov    QWORD PTR [rax],rcx
   140005a30:	mov    rdx,QWORD PTR [rsp+0x40]
   140005a35:	mov    rcx,QWORD PTR [rsp+0x30]
   140005a3a:	call   0x1400054a0
   140005a3f:	mov    rax,QWORD PTR [rsp+0x30]
   140005a44:	add    rsp,0x28
   140005a48:	ret    
   140005a49:	int3   
   140005a4a:	int3   
   140005a4b:	int3   
   140005a4c:	int3   
   140005a4d:	int3   
   140005a4e:	int3   
   140005a4f:	int3   
   140005a50:	mov    QWORD PTR [rsp+0x10],rdx
   140005a55:	mov    QWORD PTR [rsp+0x8],rcx
   140005a5a:	sub    rsp,0x18
   140005a5e:	mov    rax,QWORD PTR [rsp+0x20]
   140005a63:	mov    rcx,QWORD PTR [rsp+0x28]
   140005a68:	mov    rcx,QWORD PTR [rcx]
   140005a6b:	cmp    QWORD PTR [rax],rcx
   140005a6e:	jne    0x140005a79
   140005a70:	mov    DWORD PTR [rsp],0x1
   140005a77:	jmp    0x140005a80
   140005a79:	mov    DWORD PTR [rsp],0x0
   140005a80:	movzx  eax,BYTE PTR [rsp]
   140005a84:	add    rsp,0x18
   140005a88:	ret    
   140005a89:	int3   
   140005a8a:	int3   
   140005a8b:	int3   
   140005a8c:	int3   
   140005a8d:	int3   
   140005a8e:	int3   
   140005a8f:	int3   
   140005a90:	mov    QWORD PTR [rsp+0x10],rdx
   140005a95:	mov    QWORD PTR [rsp+0x8],rcx
   140005a9a:	sub    rsp,0x38
   140005a9e:	mov    rdx,QWORD PTR [rsp+0x48]
   140005aa3:	mov    rcx,QWORD PTR [rsp+0x40]
   140005aa8:	call   0x140005a50
   140005aad:	movzx  eax,al
   140005ab0:	test   eax,eax
   140005ab2:	jne    0x140005abe
   140005ab4:	mov    DWORD PTR [rsp+0x20],0x1
   140005abc:	jmp    0x140005ac6
   140005abe:	mov    DWORD PTR [rsp+0x20],0x0
   140005ac6:	movzx  eax,BYTE PTR [rsp+0x20]
   140005acb:	add    rsp,0x38
   140005acf:	ret    
   140005ad0:	mov    QWORD PTR [rsp+0x8],rcx
   140005ad5:	sub    rsp,0x28
   140005ad9:	mov    rax,QWORD PTR [rsp+0x30]
   140005ade:	mov    rcx,QWORD PTR [rax]
   140005ae1:	call   0x1400054b0
   140005ae6:	add    rsp,0x28
   140005aea:	ret    
   140005aeb:	int3   
   140005aec:	int3   
   140005aed:	int3   
   140005aee:	int3   
   140005aef:	int3   
   140005af0:	mov    DWORD PTR [rsp+0x18],r8d
   140005af5:	mov    QWORD PTR [rsp+0x10],rdx
   140005afa:	mov    QWORD PTR [rsp+0x8],rcx
   140005aff:	sub    rsp,0x38
   140005b03:	mov    rax,QWORD PTR [rsp+0x40]
   140005b08:	mov    rax,QWORD PTR [rax]
   140005b0b:	mov    QWORD PTR [rsp+0x20],rax
   140005b10:	mov    rcx,QWORD PTR [rsp+0x40]
   140005b15:	call   0x140005b40
   140005b1a:	mov    rax,QWORD PTR [rsp+0x48]
   140005b1f:	mov    rcx,QWORD PTR [rsp+0x20]
   140005b24:	mov    QWORD PTR [rax],rcx
   140005b27:	mov    rax,QWORD PTR [rsp+0x48]
   140005b2c:	add    rsp,0x38
   140005b30:	ret    
   140005b31:	int3   
   140005b32:	int3   
   140005b33:	int3   
   140005b34:	int3   
   140005b35:	int3   
   140005b36:	int3   
   140005b37:	int3   
   140005b38:	int3   
   140005b39:	int3   
   140005b3a:	int3   
   140005b3b:	int3   
   140005b3c:	int3   
   140005b3d:	int3   
   140005b3e:	int3   
   140005b3f:	int3   
   140005b40:	mov    QWORD PTR [rsp+0x8],rcx
   140005b45:	sub    rsp,0x28
   140005b49:	mov    rax,QWORD PTR [rsp+0x30]
   140005b4e:	mov    rcx,QWORD PTR [rax]
   140005b51:	call   0x140017e80
   140005b56:	mov    rcx,QWORD PTR [rsp+0x30]
   140005b5b:	mov    rax,QWORD PTR [rax]
   140005b5e:	mov    QWORD PTR [rcx],rax
   140005b61:	mov    rax,QWORD PTR [rsp+0x30]
   140005b66:	add    rsp,0x28
   140005b6a:	ret    
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	mov    QWORD PTR [rsp+0x10],rdx
   140005b75:	mov    QWORD PTR [rsp+0x8],rcx
   140005b7a:	sub    rsp,0x28
   140005b7e:	mov    rax,QWORD PTR [rsp+0x30]
   140005b83:	mov    rcx,QWORD PTR [rax]
   140005b86:	call   0x140017e80
   140005b8b:	mov    r8,QWORD PTR [rsp+0x30]
   140005b90:	mov    rdx,QWORD PTR [rax]
   140005b93:	mov    rcx,QWORD PTR [rsp+0x38]
   140005b98:	call   0x1400059d0
   140005b9d:	mov    rax,QWORD PTR [rsp+0x38]
   140005ba2:	add    rsp,0x28
   140005ba6:	ret    
   140005ba7:	int3   
   140005ba8:	int3   
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	mov    QWORD PTR [rsp+0x10],rdx
   140005bb5:	mov    QWORD PTR [rsp+0x8],rcx
   140005bba:	sub    rsp,0x28
   140005bbe:	mov    r8,QWORD PTR [rsp+0x30]
   140005bc3:	mov    rax,QWORD PTR [rsp+0x30]
   140005bc8:	mov    rdx,QWORD PTR [rax]
   140005bcb:	mov    rcx,QWORD PTR [rsp+0x38]
   140005bd0:	call   0x1400059d0
   140005bd5:	mov    rax,QWORD PTR [rsp+0x38]
   140005bda:	add    rsp,0x28
   140005bde:	ret    
   140005bdf:	int3   
   140005be0:	mov    QWORD PTR [rsp+0x8],rcx
   140005be5:	sub    rsp,0x38
   140005be9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005bf2:	mov    rcx,QWORD PTR [rsp+0x40]
   140005bf7:	call   0x140020f02
   140005bfc:	nop
   140005bfd:	mov    rax,QWORD PTR [rsp+0x40]
   140005c02:	lea    rcx,[rip+0x22f6f]        # 0x140028b78
   140005c09:	mov    QWORD PTR [rax],rcx
   140005c0c:	mov    rax,QWORD PTR [rsp+0x40]
   140005c11:	add    rax,0x48
   140005c15:	mov    rcx,rax
   140005c18:	call   QWORD PTR [rip+0x21162]        # 0x140026d80
   140005c1e:	nop
   140005c1f:	mov    rax,QWORD PTR [rsp+0x40]
   140005c24:	add    rax,0x58
   140005c28:	mov    rcx,rax
   140005c2b:	call   QWORD PTR [rip+0x2114f]        # 0x140026d80
   140005c31:	nop
   140005c32:	mov    rax,QWORD PTR [rsp+0x40]
   140005c37:	add    rax,0x60
   140005c3b:	mov    rcx,rax
   140005c3e:	call   QWORD PTR [rip+0x2113c]        # 0x140026d80
   140005c44:	nop
   140005c45:	mov    rax,QWORD PTR [rsp+0x40]
   140005c4a:	mov    DWORD PTR [rax+0x50],0x4
   140005c51:	mov    rax,QWORD PTR [rsp+0x40]
   140005c56:	add    rsp,0x38
   140005c5a:	ret    
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	int3   
   140005c61:	int3   
   140005c62:	int3   
   140005c63:	int3   
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	mov    DWORD PTR [rsp+0x20],r9d
   140005c75:	mov    DWORD PTR [rsp+0x18],r8d
   140005c7a:	mov    QWORD PTR [rsp+0x10],rdx
   140005c7f:	mov    QWORD PTR [rsp+0x8],rcx
   140005c84:	sub    rsp,0x58
   140005c88:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140005c91:	cmp    DWORD PTR [rsp+0x70],0x0
   140005c96:	jne    0x140005cb4
   140005c98:	mov    rax,QWORD PTR [rsp+0x60]
   140005c9d:	add    rax,0x48
   140005ca1:	mov    rdx,QWORD PTR [rsp+0x68]
   140005ca6:	mov    rcx,rax
   140005ca9:	call   QWORD PTR [rip+0x20bf1]        # 0x1400268a0
   140005caf:	jmp    0x140005e24
   140005cb4:	mov    rdx,QWORD PTR [rsp+0x68]
   140005cb9:	lea    rcx,[rsp+0x28]
   140005cbe:	call   QWORD PTR [rip+0x210a4]        # 0x140026d68
   140005cc4:	nop
   140005cc5:	lea    rcx,[rsp+0x28]
   140005cca:	call   QWORD PTR [rip+0x20bc0]        # 0x140026890
   140005cd0:	xor    r8d,r8d
   140005cd3:	lea    rdx,[rip+0x22df6]        # 0x140028ad0
   140005cda:	lea    rcx,[rsp+0x28]
   140005cdf:	call   QWORD PTR [rip+0x20bb3]        # 0x140026898
   140005ce5:	mov    DWORD PTR [rsp+0x20],eax
   140005ce9:	cmp    DWORD PTR [rsp+0x20],0xffffffff
   140005cee:	je     0x140005e19
   140005cf4:	mov    r8d,DWORD PTR [rsp+0x20]
   140005cf9:	lea    rdx,[rsp+0x38]
   140005cfe:	lea    rcx,[rsp+0x28]
   140005d03:	call   QWORD PTR [rip+0x20b77]        # 0x140026880
   140005d09:	nop
   140005d0a:	lea    rcx,[rsp+0x28]
   140005d0f:	call   QWORD PTR [rip+0x2108b]        # 0x140026da0
   140005d15:	sub    eax,DWORD PTR [rsp+0x20]
   140005d19:	mov    ecx,DWORD PTR [rsp+0x20]
   140005d1d:	inc    ecx
   140005d1f:	mov    r9d,eax
   140005d22:	mov    r8d,ecx
   140005d25:	lea    rdx,[rsp+0x30]
   140005d2a:	lea    rcx,[rsp+0x28]
   140005d2f:	call   QWORD PTR [rip+0x20b53]        # 0x140026888
   140005d35:	nop
   140005d36:	lea    rdx,[rip+0x22d9b]        # 0x140028ad8
   140005d3d:	lea    rcx,[rsp+0x38]
   140005d42:	call   0x140002c50
   140005d47:	movzx  eax,al
   140005d4a:	test   eax,eax
   140005d4c:	je     0x140005d6a
   140005d4e:	mov    rax,QWORD PTR [rsp+0x60]
   140005d53:	add    rax,0x48
   140005d57:	lea    rdx,[rsp+0x30]
   140005d5c:	mov    rcx,rax
   140005d5f:	call   QWORD PTR [rip+0x20ff3]        # 0x140026d58
   140005d65:	jmp    0x140005e01
   140005d6a:	lea    rdx,[rip+0x22d77]        # 0x140028ae8
   140005d71:	lea    rcx,[rsp+0x38]
   140005d76:	call   0x140002c50
   140005d7b:	movzx  eax,al
   140005d7e:	test   eax,eax
   140005d80:	je     0x140005da0
   140005d82:	lea    rcx,[rsp+0x30]
   140005d87:	call   QWORD PTR [rip+0x21023]        # 0x140026db0
   140005d8d:	mov    rcx,rax
   140005d90:	call   QWORD PTR [rip+0x2059a]        # 0x140026330
   140005d96:	mov    rcx,QWORD PTR [rsp+0x60]
   140005d9b:	mov    DWORD PTR [rcx+0x50],eax
   140005d9e:	jmp    0x140005e01
   140005da0:	lea    rdx,[rip+0x22d51]        # 0x140028af8
   140005da7:	lea    rcx,[rsp+0x38]
   140005dac:	call   0x140002c50
   140005db1:	movzx  eax,al
   140005db4:	test   eax,eax
   140005db6:	je     0x140005dd1
   140005db8:	mov    rax,QWORD PTR [rsp+0x60]
   140005dbd:	add    rax,0x58
   140005dc1:	lea    rdx,[rsp+0x30]
   140005dc6:	mov    rcx,rax
   140005dc9:	call   QWORD PTR [rip+0x20f89]        # 0x140026d58
   140005dcf:	jmp    0x140005e01
   140005dd1:	lea    rdx,[rip+0x22d30]        # 0x140028b08
   140005dd8:	lea    rcx,[rsp+0x38]
   140005ddd:	call   0x140002c50
   140005de2:	movzx  eax,al
   140005de5:	test   eax,eax
   140005de7:	je     0x140005e01
   140005de9:	mov    rax,QWORD PTR [rsp+0x60]
   140005dee:	add    rax,0x60
   140005df2:	lea    rdx,[rsp+0x30]
   140005df7:	mov    rcx,rax
   140005dfa:	call   QWORD PTR [rip+0x20f58]        # 0x140026d58
   140005e00:	nop
   140005e01:	lea    rcx,[rsp+0x30]
   140005e06:	call   QWORD PTR [rip+0x20f54]        # 0x140026d60
   140005e0c:	nop
   140005e0d:	lea    rcx,[rsp+0x38]
   140005e12:	call   QWORD PTR [rip+0x20f48]        # 0x140026d60
   140005e18:	nop
   140005e19:	lea    rcx,[rsp+0x28]
   140005e1e:	call   QWORD PTR [rip+0x20f3c]        # 0x140026d60
   140005e24:	add    rsp,0x58
   140005e28:	ret    
   140005e29:	int3   
   140005e2a:	int3   
   140005e2b:	int3   
   140005e2c:	int3   
   140005e2d:	int3   
   140005e2e:	int3   
   140005e2f:	int3   
   140005e30:	mov    QWORD PTR [rsp+0x8],rcx
   140005e35:	sub    rsp,0x28
   140005e39:	mov    rax,QWORD PTR [rsp+0x30]
   140005e3e:	add    rax,0x48
   140005e42:	mov    rcx,rax
   140005e45:	call   QWORD PTR [rip+0x20f65]        # 0x140026db0
   140005e4b:	add    rsp,0x28
   140005e4f:	ret    
   140005e50:	int3   
   140005e51:	int3   
   140005e52:	int3   
   140005e53:	int3   
   140005e54:	int3   
   140005e55:	int3   
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	int3   
   140005e5d:	int3   
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	mov    QWORD PTR [rsp+0x8],rcx
   140005e65:	mov    rax,QWORD PTR [rsp+0x8]
   140005e6a:	mov    eax,DWORD PTR [rax+0x50]
   140005e6d:	ret    
   140005e6e:	int3   
   140005e6f:	int3   
   140005e70:	int3   
   140005e71:	int3   
   140005e72:	int3   
   140005e73:	int3   
   140005e74:	int3   
   140005e75:	int3   
   140005e76:	int3   
   140005e77:	int3   
   140005e78:	int3   
   140005e79:	int3   
   140005e7a:	int3   
   140005e7b:	int3   
   140005e7c:	int3   
   140005e7d:	int3   
   140005e7e:	int3   
   140005e7f:	int3   
   140005e80:	mov    QWORD PTR [rsp+0x8],rcx
   140005e85:	sub    rsp,0x28
   140005e89:	mov    rax,QWORD PTR [rsp+0x30]
   140005e8e:	add    rax,0x58
   140005e92:	mov    rcx,rax
   140005e95:	call   QWORD PTR [rip+0x20f15]        # 0x140026db0
   140005e9b:	add    rsp,0x28
   140005e9f:	ret    
   140005ea0:	int3   
   140005ea1:	int3   
   140005ea2:	int3   
   140005ea3:	int3   
   140005ea4:	int3   
   140005ea5:	int3   
   140005ea6:	int3   
   140005ea7:	int3   
   140005ea8:	int3   
   140005ea9:	int3   
   140005eaa:	int3   
   140005eab:	int3   
   140005eac:	int3   
   140005ead:	int3   
   140005eae:	int3   
   140005eaf:	int3   
   140005eb0:	mov    QWORD PTR [rsp+0x8],rcx
   140005eb5:	sub    rsp,0x28
   140005eb9:	mov    rax,QWORD PTR [rsp+0x30]
   140005ebe:	add    rax,0x60
   140005ec2:	mov    rcx,rax
   140005ec5:	call   QWORD PTR [rip+0x20ee5]        # 0x140026db0
   140005ecb:	add    rsp,0x28
   140005ecf:	ret    
   140005ed0:	mov    DWORD PTR [rsp+0x10],edx
   140005ed4:	mov    QWORD PTR [rsp+0x8],rcx
   140005ed9:	sub    rsp,0x28
   140005edd:	mov    rcx,QWORD PTR [rsp+0x30]
   140005ee2:	call   0x140002b20
   140005ee7:	mov    eax,DWORD PTR [rsp+0x38]
   140005eeb:	and    eax,0x1
   140005eee:	test   eax,eax
   140005ef0:	je     0x140005efc
   140005ef2:	mov    rcx,QWORD PTR [rsp+0x30]
   140005ef7:	call   0x140002ba0
   140005efc:	mov    rax,QWORD PTR [rsp+0x30]
   140005f01:	add    rsp,0x28
   140005f05:	ret    
   140005f06:	int3   
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	mov    QWORD PTR [rsp+0x8],rcx
   140005f15:	sub    rsp,0x38
   140005f19:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005f22:	mov    rcx,QWORD PTR [rsp+0x40]
   140005f27:	call   0x140020f20
   140005f2c:	nop
   140005f2d:	mov    rax,QWORD PTR [rsp+0x40]
   140005f32:	lea    rcx,[rip+0x234c7]        # 0x140029400
   140005f39:	mov    QWORD PTR [rax],rcx
   140005f3c:	mov    rax,QWORD PTR [rsp+0x40]
   140005f41:	mov    QWORD PTR [rax+0x40],0x0
   140005f49:	mov    rcx,QWORD PTR [rsp+0x40]
   140005f4e:	call   0x140020f26
   140005f53:	nop
   140005f54:	mov    rax,QWORD PTR [rsp+0x40]
   140005f59:	add    rsp,0x38
   140005f5d:	ret    
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	int3   
   140005f61:	int3   
   140005f62:	int3   
   140005f63:	int3   
   140005f64:	int3   
   140005f65:	int3   
   140005f66:	int3   
   140005f67:	int3   
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	mov    QWORD PTR [rsp+0x8],rcx
   140005f75:	sub    rsp,0x38
   140005f79:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005f82:	mov    rax,QWORD PTR [rsp+0x40]
   140005f87:	lea    rcx,[rip+0x23472]        # 0x140029400
   140005f8e:	mov    QWORD PTR [rax],rcx
   140005f91:	mov    rax,QWORD PTR [rsp+0x40]
   140005f96:	mov    QWORD PTR [rax+0x40],0x0
   140005f9e:	mov    rcx,QWORD PTR [rsp+0x40]
   140005fa3:	call   0x140020f2c
   140005fa8:	add    rsp,0x38
   140005fac:	ret    
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	int3   
   140005fb1:	int3   
   140005fb2:	int3   
   140005fb3:	int3   
   140005fb4:	int3   
   140005fb5:	int3   
   140005fb6:	int3   
   140005fb7:	int3   
   140005fb8:	int3   
   140005fb9:	int3   
   140005fba:	int3   
   140005fbb:	int3   
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	mov    QWORD PTR [rsp+0x10],rdx
   140005fc5:	mov    QWORD PTR [rsp+0x8],rcx
   140005fca:	mov    rax,QWORD PTR [rsp+0x8]
   140005fcf:	mov    rcx,QWORD PTR [rsp+0x10]
   140005fd4:	mov    QWORD PTR [rax+0x40],rcx
   140005fd8:	ret    
   140005fd9:	int3   
   140005fda:	int3   
   140005fdb:	int3   
   140005fdc:	int3   
   140005fdd:	int3   
   140005fde:	int3   
   140005fdf:	int3   
   140005fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140005fe5:	sub    rsp,0x28
   140005fe9:	mov    rcx,QWORD PTR [rsp+0x30]
   140005fee:	call   0x140020bb4
   140005ff3:	add    rsp,0x28
   140005ff7:	ret    
   140005ff8:	int3   
   140005ff9:	int3   
   140005ffa:	int3   
   140005ffb:	int3   
   140005ffc:	int3   
   140005ffd:	int3   
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	mov    QWORD PTR [rsp+0x10],rdx
   140006005:	mov    QWORD PTR [rsp+0x8],rcx
   14000600a:	sub    rsp,0x38
   14000600e:	mov    rax,QWORD PTR [rsp+0x40]
   140006013:	mov    rax,QWORD PTR [rax]
   140006016:	mov    rcx,QWORD PTR [rsp+0x40]
   14000601b:	call   QWORD PTR [rax+0xb8]
   140006021:	mov    QWORD PTR [rsp+0x20],rax
   140006026:	cmp    QWORD PTR [rsp+0x20],0x0
   14000602c:	je     0x14000603d
   14000602e:	mov    rdx,QWORD PTR [rsp+0x48]
   140006033:	mov    rcx,QWORD PTR [rsp+0x20]
   140006038:	call   0x14001ba00
   14000603d:	mov    edx,0x1
   140006042:	mov    rcx,QWORD PTR [rsp+0x40]
   140006047:	call   0x140006690
   14000604c:	add    rsp,0x38
   140006050:	ret    
   140006051:	int3   
   140006052:	int3   
   140006053:	int3   
   140006054:	int3   
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	mov    DWORD PTR [rsp+0x10],edx
   140006064:	mov    QWORD PTR [rsp+0x8],rcx
   140006069:	sub    rsp,0x38
   14000606d:	mov    rax,QWORD PTR [rsp+0x40]
   140006072:	mov    rax,QWORD PTR [rax]
   140006075:	mov    rcx,QWORD PTR [rsp+0x40]
   14000607a:	call   QWORD PTR [rax+0xb8]
   140006080:	mov    QWORD PTR [rsp+0x20],rax
   140006085:	cmp    QWORD PTR [rsp+0x20],0x0
   14000608b:	je     0x14000609b
   14000608d:	mov    edx,DWORD PTR [rsp+0x48]
   140006091:	mov    rcx,QWORD PTR [rsp+0x20]
   140006096:	call   0x14001bb60
   14000609b:	add    rsp,0x38
   14000609f:	ret    
   1400060a0:	int3   
   1400060a1:	int3   
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400060b5:	sub    rsp,0x48
   1400060b9:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400060c2:	lea    rcx,[rsp+0x20]
   1400060c7:	call   QWORD PTR [rip+0x20cb3]        # 0x140026d80
   1400060cd:	nop
   1400060ce:	mov    rax,QWORD PTR [rsp+0x50]
   1400060d3:	mov    rax,QWORD PTR [rax]
   1400060d6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400060db:	call   QWORD PTR [rax+0xb8]
   1400060e1:	mov    QWORD PTR [rsp+0x28],rax
   1400060e6:	cmp    QWORD PTR [rsp+0x28],0x0
   1400060ec:	je     0x140006106
   1400060ee:	mov    rcx,QWORD PTR [rsp+0x28]
   1400060f3:	call   0x14001b820
   1400060f8:	mov    rdx,rax
   1400060fb:	lea    rcx,[rsp+0x20]
   140006100:	call   QWORD PTR [rip+0x2079a]        # 0x1400268a0
   140006106:	lea    rcx,[rsp+0x20]
   14000610b:	call   QWORD PTR [rip+0x20747]        # 0x140026858
   140006111:	mov    QWORD PTR [rsp+0x30],rax
   140006116:	lea    rcx,[rsp+0x20]
   14000611b:	call   QWORD PTR [rip+0x20c3f]        # 0x140026d60
   140006121:	mov    rax,QWORD PTR [rsp+0x30]
   140006126:	add    rsp,0x48
   14000612a:	ret    
   14000612b:	int3   
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	int3   
   14000612f:	int3   
   140006130:	int3   
   140006131:	int3   
   140006132:	int3   
   140006133:	int3   
   140006134:	int3   
   140006135:	int3   
   140006136:	int3   
   140006137:	int3   
   140006138:	int3   
   140006139:	int3   
   14000613a:	int3   
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	mov    QWORD PTR [rsp+0x8],rcx
   140006145:	sub    rsp,0x38
   140006149:	mov    DWORD PTR [rsp+0x20],0x0
   140006151:	mov    rax,QWORD PTR [rsp+0x40]
   140006156:	mov    rax,QWORD PTR [rax]
   140006159:	mov    rcx,QWORD PTR [rsp+0x40]
   14000615e:	call   QWORD PTR [rax+0xb8]
   140006164:	mov    QWORD PTR [rsp+0x28],rax
   140006169:	cmp    QWORD PTR [rsp+0x28],0x0
   14000616f:	je     0x140006183
   140006171:	mov    rcx,QWORD PTR [rsp+0x28]
   140006176:	call   0x14001bfe0
   14000617b:	cvttsd2si eax,xmm0
   14000617f:	mov    DWORD PTR [rsp+0x20],eax
   140006183:	mov    eax,DWORD PTR [rsp+0x20]
   140006187:	add    rsp,0x38
   14000618b:	ret    
   14000618c:	int3   
   14000618d:	int3   
   14000618e:	int3   
   14000618f:	int3   
   140006190:	int3   
   140006191:	int3   
   140006192:	int3   
   140006193:	int3   
   140006194:	int3   
   140006195:	int3   
   140006196:	int3   
   140006197:	int3   
   140006198:	int3   
   140006199:	int3   
   14000619a:	int3   
   14000619b:	int3   
   14000619c:	int3   
   14000619d:	int3   
   14000619e:	int3   
   14000619f:	int3   
   1400061a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400061a5:	sub    rsp,0x68
   1400061a9:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400061b2:	lea    rcx,[rsp+0x20]
   1400061b7:	call   QWORD PTR [rip+0x20bc3]        # 0x140026d80
   1400061bd:	nop
   1400061be:	mov    rax,QWORD PTR [rsp+0x70]
   1400061c3:	mov    rax,QWORD PTR [rax]
   1400061c6:	mov    rcx,QWORD PTR [rsp+0x70]
   1400061cb:	call   QWORD PTR [rax+0xb8]
   1400061d1:	mov    QWORD PTR [rsp+0x28],rax
   1400061d6:	cmp    QWORD PTR [rsp+0x28],0x0
   1400061dc:	je     0x140006218
   1400061de:	lea    rdx,[rsp+0x40]
   1400061e3:	mov    rcx,QWORD PTR [rsp+0x28]
   1400061e8:	call   0x14001b5f0
   1400061ed:	mov    QWORD PTR [rsp+0x30],rax
   1400061f2:	mov    rax,QWORD PTR [rsp+0x30]
   1400061f7:	mov    QWORD PTR [rsp+0x38],rax
   1400061fc:	mov    rdx,QWORD PTR [rsp+0x38]
   140006201:	lea    rcx,[rsp+0x20]
   140006206:	call   QWORD PTR [rip+0x20b4c]        # 0x140026d58
   14000620c:	nop
   14000620d:	lea    rcx,[rsp+0x40]
   140006212:	call   QWORD PTR [rip+0x20b48]        # 0x140026d60
   140006218:	lea    rcx,[rsp+0x20]
   14000621d:	call   QWORD PTR [rip+0x20635]        # 0x140026858
   140006223:	mov    QWORD PTR [rsp+0x48],rax
   140006228:	lea    rcx,[rsp+0x20]
   14000622d:	call   QWORD PTR [rip+0x20b2d]        # 0x140026d60
   140006233:	mov    rax,QWORD PTR [rsp+0x48]
   140006238:	add    rsp,0x68
   14000623c:	ret    
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	int3   
   140006241:	int3   
   140006242:	int3   
   140006243:	int3   
   140006244:	int3   
   140006245:	int3   
   140006246:	int3   
   140006247:	int3   
   140006248:	int3   
   140006249:	int3   
   14000624a:	int3   
   14000624b:	int3   
   14000624c:	int3   
   14000624d:	int3   
   14000624e:	int3   
   14000624f:	int3   
   140006250:	mov    QWORD PTR [rsp+0x8],rcx
   140006255:	sub    rsp,0x28
   140006259:	mov    rax,QWORD PTR [rsp+0x30]
   14000625e:	cmp    QWORD PTR [rax+0x40],0x0
   140006263:	je     0x140006280
   140006265:	mov    rax,QWORD PTR [rsp+0x30]
   14000626a:	mov    rax,QWORD PTR [rax+0x40]
   14000626e:	mov    rcx,QWORD PTR [rsp+0x30]
   140006273:	mov    rcx,QWORD PTR [rcx+0x40]
   140006277:	mov    rax,QWORD PTR [rax]
   14000627a:	call   QWORD PTR [rax+0x3c8]
   140006280:	add    rsp,0x28
   140006284:	ret    
   140006285:	int3   
   140006286:	int3   
   140006287:	int3   
   140006288:	int3   
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	mov    QWORD PTR [rsp+0x8],rcx
   140006295:	sub    rsp,0x48
   140006299:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400062a2:	lea    rcx,[rsp+0x20]
   1400062a7:	call   QWORD PTR [rip+0x20ad3]        # 0x140026d80
   1400062ad:	nop
   1400062ae:	mov    rax,QWORD PTR [rsp+0x50]
   1400062b3:	mov    rax,QWORD PTR [rax]
   1400062b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400062bb:	call   QWORD PTR [rax+0xb8]
   1400062c1:	mov    QWORD PTR [rsp+0x28],rax
   1400062c6:	cmp    QWORD PTR [rsp+0x28],0x0
   1400062cc:	je     0x1400062ff
   1400062ce:	mov    rcx,QWORD PTR [rsp+0x28]
   1400062d3:	call   0x14001bbc0
   1400062d8:	mov    rdx,rax
   1400062db:	lea    rcx,[rsp+0x20]
   1400062e0:	call   QWORD PTR [rip+0x205ba]        # 0x1400268a0
   1400062e6:	lea    r8,[rip+0x22ea7]        # 0x140029194
   1400062ed:	lea    rdx,[rip+0x22f38]        # 0x14002922c
   1400062f4:	lea    rcx,[rsp+0x20]
   1400062f9:	call   QWORD PTR [rip+0x205b1]        # 0x1400268b0
   1400062ff:	lea    rcx,[rsp+0x20]
   140006304:	call   QWORD PTR [rip+0x2054e]        # 0x140026858
   14000630a:	mov    QWORD PTR [rsp+0x30],rax
   14000630f:	lea    rcx,[rsp+0x20]
   140006314:	call   QWORD PTR [rip+0x20a46]        # 0x140026d60
   14000631a:	mov    rax,QWORD PTR [rsp+0x30]
   14000631f:	add    rsp,0x48
   140006323:	ret    
   140006324:	int3   
   140006325:	int3   
   140006326:	int3   
   140006327:	int3   
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	mov    QWORD PTR [rsp+0x8],rcx
   140006335:	sub    rsp,0x48
   140006339:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140006342:	lea    rcx,[rsp+0x20]
   140006347:	call   QWORD PTR [rip+0x20a33]        # 0x140026d80
   14000634d:	nop
   14000634e:	mov    rax,QWORD PTR [rsp+0x50]
   140006353:	mov    rax,QWORD PTR [rax]
   140006356:	mov    rcx,QWORD PTR [rsp+0x50]
   14000635b:	call   QWORD PTR [rax+0xb8]
   140006361:	mov    QWORD PTR [rsp+0x28],rax
   140006366:	cmp    QWORD PTR [rsp+0x28],0x0
   14000636c:	je     0x14000639f
   14000636e:	mov    rcx,QWORD PTR [rsp+0x28]
   140006373:	call   0x14001b590
   140006378:	mov    rdx,rax
   14000637b:	lea    rcx,[rsp+0x20]
   140006380:	call   QWORD PTR [rip+0x2051a]        # 0x1400268a0
   140006386:	lea    r8,[rip+0x22efb]        # 0x140029288
   14000638d:	lea    rdx,[rip+0x22ef8]        # 0x14002928c
   140006394:	lea    rcx,[rsp+0x20]
   140006399:	call   QWORD PTR [rip+0x20511]        # 0x1400268b0
   14000639f:	lea    rcx,[rsp+0x20]
   1400063a4:	call   QWORD PTR [rip+0x204ae]        # 0x140026858
   1400063aa:	mov    QWORD PTR [rsp+0x30],rax
   1400063af:	lea    rcx,[rsp+0x20]
   1400063b4:	call   QWORD PTR [rip+0x209a6]        # 0x140026d60
   1400063ba:	mov    rax,QWORD PTR [rsp+0x30]
   1400063bf:	add    rsp,0x48
   1400063c3:	ret    
   1400063c4:	int3   
   1400063c5:	int3   
   1400063c6:	int3   
   1400063c7:	int3   
   1400063c8:	int3   
   1400063c9:	int3   
   1400063ca:	int3   
   1400063cb:	int3   
   1400063cc:	int3   
   1400063cd:	int3   
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400063d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400063da:	sub    rsp,0x68
   1400063de:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400063e7:	lea    rcx,[rsp+0x20]
   1400063ec:	call   QWORD PTR [rip+0x2098e]        # 0x140026d80
   1400063f2:	nop
   1400063f3:	mov    rax,QWORD PTR [rsp+0x70]
   1400063f8:	mov    rax,QWORD PTR [rax]
   1400063fb:	mov    rcx,QWORD PTR [rsp+0x70]
   140006400:	call   QWORD PTR [rax+0xb8]
   140006406:	mov    QWORD PTR [rsp+0x28],rax
   14000640b:	cmp    QWORD PTR [rsp+0x28],0x0
   140006411:	je     0x140006452
   140006413:	mov    r8,QWORD PTR [rsp+0x78]
   140006418:	lea    rdx,[rsp+0x40]
   14000641d:	mov    rcx,QWORD PTR [rsp+0x28]
   140006422:	call   0x14001bd40
   140006427:	mov    QWORD PTR [rsp+0x30],rax
   14000642c:	mov    rax,QWORD PTR [rsp+0x30]
   140006431:	mov    QWORD PTR [rsp+0x38],rax
   140006436:	mov    rdx,QWORD PTR [rsp+0x38]
   14000643b:	lea    rcx,[rsp+0x20]
   140006440:	call   QWORD PTR [rip+0x20912]        # 0x140026d58
   140006446:	nop
   140006447:	lea    rcx,[rsp+0x40]
   14000644c:	call   QWORD PTR [rip+0x2090e]        # 0x140026d60
   140006452:	lea    rcx,[rsp+0x20]
   140006457:	call   QWORD PTR [rip+0x203fb]        # 0x140026858
   14000645d:	mov    QWORD PTR [rsp+0x48],rax
   140006462:	lea    rcx,[rsp+0x20]
   140006467:	call   QWORD PTR [rip+0x208f3]        # 0x140026d60
   14000646d:	mov    rax,QWORD PTR [rsp+0x48]
   140006472:	add    rsp,0x68
   140006476:	ret    
   140006477:	int3   
   140006478:	int3   
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	mov    QWORD PTR [rsp+0x10],rdx
   140006485:	mov    QWORD PTR [rsp+0x8],rcx
   14000648a:	sub    rsp,0x68
   14000648e:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140006497:	lea    rcx,[rsp+0x20]
   14000649c:	call   QWORD PTR [rip+0x208de]        # 0x140026d80
   1400064a2:	nop
   1400064a3:	mov    rax,QWORD PTR [rsp+0x70]
   1400064a8:	mov    rax,QWORD PTR [rax]
   1400064ab:	mov    rcx,QWORD PTR [rsp+0x70]
   1400064b0:	call   QWORD PTR [rax+0xb8]
   1400064b6:	mov    QWORD PTR [rsp+0x28],rax
   1400064bb:	cmp    QWORD PTR [rsp+0x28],0x0
   1400064c1:	je     0x140006502
   1400064c3:	mov    r8,QWORD PTR [rsp+0x78]
   1400064c8:	lea    rdx,[rsp+0x40]
   1400064cd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400064d2:	call   0x14001bdf0
   1400064d7:	mov    QWORD PTR [rsp+0x30],rax
   1400064dc:	mov    rax,QWORD PTR [rsp+0x30]
   1400064e1:	mov    QWORD PTR [rsp+0x38],rax
   1400064e6:	mov    rdx,QWORD PTR [rsp+0x38]
   1400064eb:	lea    rcx,[rsp+0x20]
   1400064f0:	call   QWORD PTR [rip+0x20862]        # 0x140026d58
   1400064f6:	nop
   1400064f7:	lea    rcx,[rsp+0x40]
   1400064fc:	call   QWORD PTR [rip+0x2085e]        # 0x140026d60
   140006502:	lea    rcx,[rsp+0x20]
   140006507:	call   QWORD PTR [rip+0x2034b]        # 0x140026858
   14000650d:	mov    QWORD PTR [rsp+0x48],rax
   140006512:	lea    rcx,[rsp+0x20]
   140006517:	call   QWORD PTR [rip+0x20843]        # 0x140026d60
   14000651d:	mov    rax,QWORD PTR [rsp+0x48]
   140006522:	add    rsp,0x68
   140006526:	ret    
   140006527:	int3   
   140006528:	int3   
   140006529:	int3   
   14000652a:	int3   
   14000652b:	int3   
   14000652c:	int3   
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	mov    QWORD PTR [rsp+0x10],rdx
   140006535:	mov    QWORD PTR [rsp+0x8],rcx
   14000653a:	sub    rsp,0x68
   14000653e:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140006547:	lea    rcx,[rsp+0x20]
   14000654c:	call   QWORD PTR [rip+0x2082e]        # 0x140026d80
   140006552:	nop
   140006553:	mov    rax,QWORD PTR [rsp+0x70]
   140006558:	mov    rax,QWORD PTR [rax]
   14000655b:	mov    rcx,QWORD PTR [rsp+0x70]
   140006560:	call   QWORD PTR [rax+0xb8]
   140006566:	mov    QWORD PTR [rsp+0x28],rax
   14000656b:	cmp    QWORD PTR [rsp+0x28],0x0
   140006571:	je     0x1400065b2
   140006573:	mov    r8,QWORD PTR [rsp+0x78]
   140006578:	lea    rdx,[rsp+0x40]
   14000657d:	mov    rcx,QWORD PTR [rsp+0x28]
   140006582:	call   0x14001bea0
   140006587:	mov    QWORD PTR [rsp+0x30],rax
   14000658c:	mov    rax,QWORD PTR [rsp+0x30]
   140006591:	mov    QWORD PTR [rsp+0x38],rax
   140006596:	mov    rdx,QWORD PTR [rsp+0x38]
   14000659b:	lea    rcx,[rsp+0x20]
   1400065a0:	call   QWORD PTR [rip+0x207b2]        # 0x140026d58
   1400065a6:	nop
   1400065a7:	lea    rcx,[rsp+0x40]
   1400065ac:	call   QWORD PTR [rip+0x207ae]        # 0x140026d60
   1400065b2:	lea    rcx,[rsp+0x20]
   1400065b7:	call   QWORD PTR [rip+0x2029b]        # 0x140026858
   1400065bd:	mov    QWORD PTR [rsp+0x48],rax
   1400065c2:	lea    rcx,[rsp+0x20]
   1400065c7:	call   QWORD PTR [rip+0x20793]        # 0x140026d60
   1400065cd:	mov    rax,QWORD PTR [rsp+0x48]
   1400065d2:	add    rsp,0x68
   1400065d6:	ret    
   1400065d7:	int3   
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	int3   
   1400065dd:	int3   
   1400065de:	int3   
   1400065df:	int3   
   1400065e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400065e5:	sub    rsp,0x38
   1400065e9:	mov    DWORD PTR [rsp+0x20],0x0
   1400065f1:	mov    rax,QWORD PTR [rsp+0x40]
   1400065f6:	mov    rax,QWORD PTR [rax]
   1400065f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400065fe:	call   QWORD PTR [rax+0xb8]
   140006604:	mov    QWORD PTR [rsp+0x28],rax
   140006609:	cmp    QWORD PTR [rsp+0x28],0x0
   14000660f:	je     0x14000661f
   140006611:	mov    rcx,QWORD PTR [rsp+0x28]
   140006616:	call   0x14001bf80
   14000661b:	mov    DWORD PTR [rsp+0x20],eax
   14000661f:	mov    eax,DWORD PTR [rsp+0x20]
   140006623:	add    rsp,0x38
   140006627:	ret    
   140006628:	int3   
   140006629:	int3   
   14000662a:	int3   
   14000662b:	int3   
   14000662c:	int3   
   14000662d:	int3   
   14000662e:	int3   
   14000662f:	int3   
   140006630:	mov    QWORD PTR [rsp+0x8],rcx
   140006635:	sub    rsp,0x28
   140006639:	mov    edx,0x2
   14000663e:	mov    rcx,QWORD PTR [rsp+0x30]
   140006643:	call   0x140006690
   140006648:	add    rsp,0x28
   14000664c:	ret    
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	int3   
   140006651:	int3   
   140006652:	int3   
   140006653:	int3   
   140006654:	int3   
   140006655:	int3   
   140006656:	int3   
   140006657:	int3   
   140006658:	int3   
   140006659:	int3   
   14000665a:	int3   
   14000665b:	int3   
   14000665c:	int3   
   14000665d:	int3   
   14000665e:	int3   
   14000665f:	int3   
   140006660:	mov    QWORD PTR [rsp+0x8],rcx
   140006665:	sub    rsp,0x28
   140006669:	mov    edx,0x1
   14000666e:	mov    rcx,QWORD PTR [rsp+0x30]
   140006673:	call   0x140006690
   140006678:	add    rsp,0x28
   14000667c:	ret    
   14000667d:	int3   
   14000667e:	int3   
   14000667f:	int3   
   140006680:	int3   
   140006681:	int3   
   140006682:	int3   
   140006683:	int3   
   140006684:	int3   
   140006685:	int3   
   140006686:	int3   
   140006687:	int3   
   140006688:	int3   
   140006689:	int3   
   14000668a:	int3   
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	mov    DWORD PTR [rsp+0x10],edx
   140006694:	mov    QWORD PTR [rsp+0x8],rcx
   140006699:	sub    rsp,0x28
   14000669d:	mov    rax,QWORD PTR [rsp+0x30]
   1400066a2:	cmp    QWORD PTR [rax+0x40],0x0
   1400066a7:	je     0x1400066d0
   1400066a9:	movsxd rax,DWORD PTR [rsp+0x38]
   1400066ae:	and    rax,0xffff
   1400066b4:	movzx  eax,ax
   1400066b7:	xor    r9d,r9d
   1400066ba:	mov    r8d,eax
   1400066bd:	mov    edx,0x111
   1400066c2:	mov    rax,QWORD PTR [rsp+0x30]
   1400066c7:	mov    rcx,QWORD PTR [rax+0x40]
   1400066cb:	call   0x140006810
   1400066d0:	add    rsp,0x28
   1400066d4:	ret    
   1400066d5:	int3   
   1400066d6:	int3   
   1400066d7:	int3   
   1400066d8:	int3   
   1400066d9:	int3   
   1400066da:	int3   
   1400066db:	int3   
   1400066dc:	int3   
   1400066dd:	int3   
   1400066de:	int3   
   1400066df:	int3   
   1400066e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400066e5:	sub    rsp,0x38
   1400066e9:	mov    QWORD PTR [rsp+0x20],0x0
   1400066f2:	mov    rax,QWORD PTR [rsp+0x40]
   1400066f7:	cmp    QWORD PTR [rax+0x40],0x0
   1400066fc:	je     0x14000671e
   1400066fe:	mov    rax,QWORD PTR [rsp+0x40]
   140006703:	mov    rax,QWORD PTR [rax+0x40]
   140006707:	mov    rcx,QWORD PTR [rsp+0x40]
   14000670c:	mov    rcx,QWORD PTR [rcx+0x40]
   140006710:	mov    rax,QWORD PTR [rax]
   140006713:	call   QWORD PTR [rax+0x3c0]
   140006719:	mov    QWORD PTR [rsp+0x20],rax
   14000671e:	mov    rax,QWORD PTR [rsp+0x20]
   140006723:	add    rsp,0x38
   140006727:	ret    
   140006728:	int3   
   140006729:	int3   
   14000672a:	int3   
   14000672b:	int3   
   14000672c:	int3   
   14000672d:	int3   
   14000672e:	int3   
   14000672f:	int3   
   140006730:	sub    rsp,0x28
   140006734:	call   0x140020f1a
   140006739:	add    rsp,0x28
   14000673d:	ret    
   14000673e:	int3   
   14000673f:	int3   
   140006740:	int3   
   140006741:	int3   
   140006742:	int3   
   140006743:	int3   
   140006744:	int3   
   140006745:	int3   
   140006746:	int3   
   140006747:	int3   
   140006748:	int3   
   140006749:	int3   
   14000674a:	int3   
   14000674b:	int3   
   14000674c:	int3   
   14000674d:	int3   
   14000674e:	int3   
   14000674f:	int3   
   140006750:	lea    rax,[rip+0x22459]        # 0x140028bb0
   140006757:	ret    
   140006758:	int3   
   140006759:	int3   
   14000675a:	int3   
   14000675b:	int3   
   14000675c:	int3   
   14000675d:	int3   
   14000675e:	int3   
   14000675f:	int3   
   140006760:	mov    QWORD PTR [rsp+0x8],rcx
   140006765:	lea    rax,[rip+0x22444]        # 0x140028bb0
   14000676c:	ret    
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	int3   
   140006771:	int3   
   140006772:	int3   
   140006773:	int3   
   140006774:	int3   
   140006775:	int3   
   140006776:	int3   
   140006777:	int3   
   140006778:	int3   
   140006779:	int3   
   14000677a:	int3   
   14000677b:	int3   
   14000677c:	int3   
   14000677d:	int3   
   14000677e:	int3   
   14000677f:	int3   
   140006780:	lea    rax,[rip+0x22859]        # 0x140028fe0
   140006787:	ret    
   140006788:	int3   
   140006789:	int3   
   14000678a:	int3   
   14000678b:	int3   
   14000678c:	int3   
   14000678d:	int3   
   14000678e:	int3   
   14000678f:	int3   
   140006790:	mov    QWORD PTR [rsp+0x8],rcx
   140006795:	lea    rax,[rip+0x22844]        # 0x140028fe0
   14000679c:	ret    
   14000679d:	int3   
   14000679e:	int3   
   14000679f:	int3   
   1400067a0:	int3   
   1400067a1:	int3   
   1400067a2:	int3   
   1400067a3:	int3   
   1400067a4:	int3   
   1400067a5:	int3   
   1400067a6:	int3   
   1400067a7:	int3   
   1400067a8:	int3   
   1400067a9:	int3   
   1400067aa:	int3   
   1400067ab:	int3   
   1400067ac:	int3   
   1400067ad:	int3   
   1400067ae:	int3   
   1400067af:	int3   
   1400067b0:	lea    rax,[rip+0x22869]        # 0x140029020
   1400067b7:	ret    
   1400067b8:	int3   
   1400067b9:	int3   
   1400067ba:	int3   
   1400067bb:	int3   
   1400067bc:	int3   
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400067c5:	lea    rax,[rip+0x22854]        # 0x140029020
   1400067cc:	ret    
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	mov    DWORD PTR [rsp+0x10],edx
   1400067d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400067d9:	sub    rsp,0x28
   1400067dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067e2:	call   0x140005f70
   1400067e7:	mov    eax,DWORD PTR [rsp+0x38]
   1400067eb:	and    eax,0x1
   1400067ee:	test   eax,eax
   1400067f0:	je     0x1400067fc
   1400067f2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067f7:	call   0x140002ba0
   1400067fc:	mov    rax,QWORD PTR [rsp+0x30]
   140006801:	add    rsp,0x28
   140006805:	ret    
   140006806:	int3   
   140006807:	int3   
   140006808:	int3   
   140006809:	int3   
   14000680a:	int3   
   14000680b:	int3   
   14000680c:	int3   
   14000680d:	int3   
   14000680e:	int3   
   14000680f:	int3   
   140006810:	mov    QWORD PTR [rsp+0x20],r9
   140006815:	mov    QWORD PTR [rsp+0x18],r8
   14000681a:	mov    DWORD PTR [rsp+0x10],edx
   14000681e:	mov    QWORD PTR [rsp+0x8],rcx
   140006823:	sub    rsp,0x28
   140006827:	mov    r9,QWORD PTR [rsp+0x48]
   14000682c:	mov    r8,QWORD PTR [rsp+0x40]
   140006831:	mov    edx,DWORD PTR [rsp+0x38]
   140006835:	mov    rax,QWORD PTR [rsp+0x30]
   14000683a:	mov    rcx,QWORD PTR [rax+0x40]
   14000683e:	call   QWORD PTR [rip+0x1fd54]        # 0x140026598
   140006844:	add    rsp,0x28
   140006848:	ret    
   140006849:	int3   
   14000684a:	int3   
   14000684b:	int3   
   14000684c:	int3   
   14000684d:	int3   
   14000684e:	int3   
   14000684f:	int3   
   140006850:	mov    QWORD PTR [rsp+0x20],r9
   140006855:	mov    QWORD PTR [rsp+0x18],r8
   14000685a:	mov    QWORD PTR [rsp+0x10],rdx
   14000685f:	mov    QWORD PTR [rsp+0x8],rcx
   140006864:	sub    rsp,0x38
   140006868:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140006871:	mov    r9,QWORD PTR [rsp+0x58]
   140006876:	xor    r8d,r8d
   140006879:	mov    edx,0x66
   14000687e:	mov    rcx,QWORD PTR [rsp+0x40]
   140006883:	call   0x140020ffe
   140006888:	nop
   140006889:	mov    rax,QWORD PTR [rsp+0x40]
   14000688e:	lea    rcx,[rip+0x238ab]        # 0x14002a140
   140006895:	mov    QWORD PTR [rax],rcx
   140006898:	mov    rax,QWORD PTR [rsp+0x40]
   14000689d:	lea    rcx,[rip+0x23c9c]        # 0x14002a540
   1400068a4:	mov    QWORD PTR [rax+0x120],rcx
   1400068ab:	mov    rax,QWORD PTR [rsp+0x40]
   1400068b0:	add    rax,0x278
   1400068b6:	lea    rdx,[rip+0x22c4f]        # 0x14002950c
   1400068bd:	mov    rcx,rax
   1400068c0:	call   QWORD PTR [rip+0x204a2]        # 0x140026d68
   1400068c6:	nop
   1400068c7:	mov    rax,QWORD PTR [rsp+0x40]
   1400068cc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400068d1:	mov    QWORD PTR [rax+0x280],rcx
   1400068d8:	mov    rax,QWORD PTR [rsp+0x40]
   1400068dd:	add    rax,0x288
   1400068e3:	mov    rcx,rax
   1400068e6:	call   0x140005f10
   1400068eb:	nop
   1400068ec:	mov    rax,QWORD PTR [rsp+0x40]
   1400068f1:	add    rax,0x2d0
   1400068f7:	mov    edx,0xa
   1400068fc:	mov    rcx,rax
   1400068ff:	call   0x140020f44
   140006904:	nop
   140006905:	mov    rax,QWORD PTR [rsp+0x40]
   14000690a:	mov    BYTE PTR [rax+0x308],0x0
   140006911:	mov    rdx,QWORD PTR [rsp+0x48]
   140006916:	mov    rcx,QWORD PTR [rsp+0x40]
   14000691b:	call   0x140007590
   140006920:	mov    rax,QWORD PTR [rsp+0x40]
   140006925:	add    rax,0x288
   14000692b:	mov    rcx,QWORD PTR [rsp+0x40]
   140006930:	mov    rcx,QWORD PTR [rcx+0x288]
   140006937:	mov    QWORD PTR [rsp+0x20],rcx
   14000693c:	mov    rdx,QWORD PTR [rsp+0x40]
   140006941:	mov    rcx,rax
   140006944:	mov    rax,QWORD PTR [rsp+0x20]
   140006949:	call   QWORD PTR [rax+0xb0]
   14000694f:	cmp    QWORD PTR [rsp+0x58],0x0
   140006955:	je     0x140006963
   140006957:	mov    rax,QWORD PTR [rsp+0x40]
   14000695c:	mov    BYTE PTR [rax+0x308],0x1
   140006963:	mov    rax,QWORD PTR [rsp+0x40]
   140006968:	add    rsp,0x38
   14000696c:	ret    
   14000696d:	int3   
   14000696e:	int3   
   14000696f:	int3   
   140006970:	int3   
   140006971:	int3   
   140006972:	int3   
   140006973:	int3   
   140006974:	int3   
   140006975:	int3   
   140006976:	int3   
   140006977:	int3   
   140006978:	int3   
   140006979:	int3   
   14000697a:	int3   
   14000697b:	int3   
   14000697c:	int3   
   14000697d:	int3   
   14000697e:	int3   
   14000697f:	int3   
   140006980:	mov    QWORD PTR [rsp+0x8],rcx
   140006985:	sub    rsp,0x38
   140006989:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006992:	mov    rax,QWORD PTR [rsp+0x40]
   140006997:	lea    rcx,[rip+0x237a2]        # 0x14002a140
   14000699e:	mov    QWORD PTR [rax],rcx
   1400069a1:	mov    rax,QWORD PTR [rsp+0x40]
   1400069a6:	lea    rcx,[rip+0x23b93]        # 0x14002a540
   1400069ad:	mov    QWORD PTR [rax+0x120],rcx
   1400069b4:	mov    rax,QWORD PTR [rsp+0x40]
   1400069b9:	add    rax,0x2d0
   1400069bf:	mov    rcx,rax
   1400069c2:	call   0x140020f56
   1400069c7:	mov    rax,QWORD PTR [rsp+0x40]
   1400069cc:	mov    QWORD PTR [rax+0x280],0x0
   1400069d7:	xor    edx,edx
   1400069d9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400069de:	call   0x14002102e
   1400069e3:	nop
   1400069e4:	mov    rax,QWORD PTR [rsp+0x40]
   1400069e9:	add    rax,0x2d0
   1400069ef:	mov    rcx,rax
   1400069f2:	call   0x140020f5c
   1400069f7:	nop
   1400069f8:	mov    rax,QWORD PTR [rsp+0x40]
   1400069fd:	add    rax,0x288
   140006a03:	mov    rcx,rax
   140006a06:	call   0x140005f70
   140006a0b:	nop
   140006a0c:	mov    rax,QWORD PTR [rsp+0x40]
   140006a11:	add    rax,0x278
   140006a17:	mov    rcx,rax
   140006a1a:	call   QWORD PTR [rip+0x20340]        # 0x140026d60
   140006a20:	nop
   140006a21:	mov    rcx,QWORD PTR [rsp+0x40]
   140006a26:	call   0x140021004
   140006a2b:	add    rsp,0x38
   140006a2f:	ret    
   140006a30:	int3   
   140006a31:	int3   
   140006a32:	int3   
   140006a33:	int3   
   140006a34:	int3   
   140006a35:	int3   
   140006a36:	int3   
   140006a37:	int3   
   140006a38:	int3   
   140006a39:	int3   
   140006a3a:	int3   
   140006a3b:	int3   
   140006a3c:	int3   
   140006a3d:	int3   
   140006a3e:	int3   
   140006a3f:	int3   
   140006a40:	mov    QWORD PTR [rsp+0x8],rcx
   140006a45:	mov    rax,QWORD PTR [rsp+0x8]
   140006a4a:	mov    rax,QWORD PTR [rax+0x280]
   140006a51:	ret    
   140006a52:	int3   
   140006a53:	int3   
   140006a54:	int3   
   140006a55:	int3   
   140006a56:	int3   
   140006a57:	int3   
   140006a58:	int3   
   140006a59:	int3   
   140006a5a:	int3   
   140006a5b:	int3   
   140006a5c:	int3   
   140006a5d:	int3   
   140006a5e:	int3   
   140006a5f:	int3   
   140006a60:	mov    QWORD PTR [rsp+0x8],rcx
   140006a65:	sub    rsp,0x28
   140006a69:	mov    dl,0x1
   140006a6b:	lea    rcx,[rip+0x23306]        # 0x140029d78
   140006a72:	call   0x140017250
   140006a77:	mov    rax,QWORD PTR [rsp+0x30]
   140006a7c:	add    rax,0x278
   140006a82:	mov    rcx,rax
   140006a85:	call   QWORD PTR [rip+0x20325]        # 0x140026db0
   140006a8b:	mov    dl,0x1
   140006a8d:	mov    rcx,rax
   140006a90:	call   0x140017250
   140006a95:	mov    rax,QWORD PTR [rsp+0x30]
   140006a9a:	add    rax,0x278
   140006aa0:	mov    rcx,rax
   140006aa3:	call   QWORD PTR [rip+0x20307]        # 0x140026db0
   140006aa9:	mov    rdx,rax
   140006aac:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ab1:	call   0x140020f6e
   140006ab6:	add    rsp,0x28
   140006aba:	ret    
   140006abb:	int3   
   140006abc:	int3   
   140006abd:	int3   
   140006abe:	int3   
   140006abf:	int3   
   140006ac0:	int3   
   140006ac1:	int3   
   140006ac2:	int3   
   140006ac3:	int3   
   140006ac4:	int3   
   140006ac5:	int3   
   140006ac6:	int3   
   140006ac7:	int3   
   140006ac8:	int3   
   140006ac9:	int3   
   140006aca:	int3   
   140006acb:	int3   
   140006acc:	int3   
   140006acd:	int3   
   140006ace:	int3   
   140006acf:	int3   
   140006ad0:	mov    QWORD PTR [rsp+0x8],rcx
   140006ad5:	mov    eax,0x1
   140006ada:	ret    
   140006adb:	int3   
   140006adc:	int3   
   140006add:	int3   
   140006ade:	int3   
   140006adf:	int3   
   140006ae0:	int3   
   140006ae1:	int3   
   140006ae2:	int3   
   140006ae3:	int3   
   140006ae4:	int3   
   140006ae5:	int3   
   140006ae6:	int3   
   140006ae7:	int3   
   140006ae8:	int3   
   140006ae9:	int3   
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	int3   
   140006aed:	int3   
   140006aee:	int3   
   140006aef:	int3   
   140006af0:	mov    QWORD PTR [rsp+0x20],r9
   140006af5:	mov    QWORD PTR [rsp+0x18],r8
   140006afa:	mov    QWORD PTR [rsp+0x10],rdx
   140006aff:	mov    QWORD PTR [rsp+0x8],rcx
   140006b04:	push   rsi
   140006b05:	push   rdi
   140006b06:	sub    rsp,0x118
   140006b0d:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
   140006b19:	mov    DWORD PTR [rsp+0x50],0x0
   140006b21:	mov    rax,QWORD PTR [rsp+0x130]
   140006b29:	add    rax,0x150
   140006b2f:	mov    rcx,rax
   140006b32:	call   0x14001ea00
   140006b37:	test   rax,rax
   140006b3a:	je     0x140006d69
   140006b40:	mov    rax,QWORD PTR [rsp+0x130]
   140006b48:	add    rax,0x150
   140006b4e:	mov    rcx,rax
   140006b51:	call   0x14001ea00
   140006b56:	mov    QWORD PTR [rsp+0x88],rax
   140006b5e:	mov    rax,QWORD PTR [rsp+0x88]
   140006b66:	mov    rax,QWORD PTR [rax]
   140006b69:	lea    rdx,[rsp+0x58]
   140006b6e:	mov    rcx,QWORD PTR [rsp+0x88]
   140006b76:	call   QWORD PTR [rax+0x38]
   140006b79:	mov    DWORD PTR [rsp+0x50],eax
   140006b7d:	cmp    DWORD PTR [rsp+0x50],0x0
   140006b82:	jl     0x140006d69
   140006b88:	cmp    QWORD PTR [rsp+0x58],0x0
   140006b8e:	je     0x140006d69
   140006b94:	mov    rdx,QWORD PTR [rsp+0x138]
   140006b9c:	lea    rcx,[rsp+0x90]
   140006ba4:	call   0x1400076b0
   140006ba9:	nop
   140006baa:	mov    DWORD PTR [rsp+0x60],0x0
   140006bb2:	lea    rcx,[rsp+0x90]
   140006bba:	call   0x140017e80
   140006bbf:	mov    rcx,QWORD PTR [rsp+0x58]
   140006bc4:	mov    rcx,QWORD PTR [rcx]
   140006bc7:	mov    QWORD PTR [rsp+0x98],rcx
   140006bcf:	lea    rdx,[rsp+0x60]
   140006bd4:	mov    QWORD PTR [rsp+0x28],rdx
   140006bd9:	mov    DWORD PTR [rsp+0x20],0x800
   140006be1:	mov    r9d,0x1
   140006be7:	mov    r8,rax
   140006bea:	lea    rdx,[rip+0x2ac1f]        # 0x140031810
   140006bf1:	mov    rcx,QWORD PTR [rsp+0x58]
   140006bf6:	mov    rax,QWORD PTR [rsp+0x98]
   140006bfe:	call   QWORD PTR [rax+0x28]
   140006c01:	mov    DWORD PTR [rsp+0x50],eax
   140006c05:	cmp    DWORD PTR [rsp+0x50],0x0
   140006c0a:	jl     0x140006d4a
   140006c10:	mov    r8d,0x18
   140006c16:	xor    edx,edx
   140006c18:	lea    rcx,[rsp+0x68]
   140006c1d:	call   0x1400216e0
   140006c22:	cmp    QWORD PTR [rsp+0x140],0x0
   140006c2b:	je     0x140006ca2
   140006c2d:	mov    DWORD PTR [rsp+0x78],0x1
   140006c35:	mov    eax,DWORD PTR [rsp+0x78]
   140006c39:	mov    QWORD PTR [rsp+0xb0],rax
   140006c41:	mov    eax,0x18
   140006c46:	mov    rcx,QWORD PTR [rsp+0xb0]
   140006c4e:	mul    rcx
   140006c51:	mov    rcx,0xffffffffffffffff
   140006c58:	cmovo  rax,rcx
   140006c5c:	mov    rcx,rax
   140006c5f:	call   0x140020f3e
   140006c64:	mov    QWORD PTR [rsp+0xa8],rax
   140006c6c:	mov    rax,QWORD PTR [rsp+0xa8]
   140006c74:	mov    QWORD PTR [rsp+0x68],rax
   140006c79:	mov    DWORD PTR [rsp+0x7c],0x0
   140006c81:	mov    eax,0x18
   140006c86:	imul   rax,rax,0x0
   140006c8a:	mov    rcx,QWORD PTR [rsp+0x68]
   140006c8f:	lea    rdi,[rcx+rax*1]
   140006c93:	mov    rsi,QWORD PTR [rsp+0x140]
   140006c9b:	mov    ecx,0x18
   140006ca0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006ca2:	mov    r8d,0x40
   140006ca8:	xor    edx,edx
   140006caa:	lea    rcx,[rsp+0xd0]
   140006cb2:	call   0x1400216e0
   140006cb7:	mov    DWORD PTR [rsp+0x80],0xffffffff
   140006cc2:	mov    rax,QWORD PTR [rsp+0x58]
   140006cc7:	mov    rax,QWORD PTR [rax]
   140006cca:	lea    rcx,[rsp+0x80]
   140006cd2:	mov    QWORD PTR [rsp+0x40],rcx
   140006cd7:	lea    rcx,[rsp+0xd0]
   140006cdf:	mov    QWORD PTR [rsp+0x38],rcx
   140006ce4:	mov    rcx,QWORD PTR [rsp+0x148]
   140006cec:	mov    QWORD PTR [rsp+0x30],rcx
   140006cf1:	lea    rcx,[rsp+0x68]
   140006cf6:	mov    QWORD PTR [rsp+0x28],rcx
   140006cfb:	mov    WORD PTR [rsp+0x20],0x1
   140006d02:	xor    r9d,r9d
   140006d05:	lea    r8,[rip+0x2ab04]        # 0x140031810
   140006d0c:	mov    edx,DWORD PTR [rsp+0x60]
   140006d10:	mov    rcx,QWORD PTR [rsp+0x58]
   140006d15:	call   QWORD PTR [rax+0x30]
   140006d18:	mov    DWORD PTR [rsp+0x50],eax
   140006d1c:	cmp    QWORD PTR [rsp+0x140],0x0
   140006d25:	je     0x140006d4a
   140006d27:	mov    rax,QWORD PTR [rsp+0x68]
   140006d2c:	mov    QWORD PTR [rsp+0xb8],rax
   140006d34:	mov    rcx,QWORD PTR [rsp+0xb8]
   140006d3c:	call   0x140020b96
   140006d41:	mov    QWORD PTR [rsp+0x68],0x0
   140006d4a:	mov    rax,QWORD PTR [rsp+0x58]
   140006d4f:	mov    rax,QWORD PTR [rax]
   140006d52:	mov    rcx,QWORD PTR [rsp+0x58]
   140006d57:	call   QWORD PTR [rax+0x10]
   140006d5a:	nop
   140006d5b:	lea    rcx,[rsp+0x90]
   140006d63:	call   0x140001340
   140006d68:	nop
   140006d69:	jmp    0x140006d6b
   140006d6b:	mov    eax,DWORD PTR [rsp+0x50]
   140006d6f:	add    rsp,0x118
   140006d76:	pop    rdi
   140006d77:	pop    rsi
   140006d78:	ret    
   140006d79:	int3   
   140006d7a:	int3   
   140006d7b:	int3   
   140006d7c:	int3   
   140006d7d:	int3   
   140006d7e:	int3   
   140006d7f:	int3   
   140006d80:	mov    QWORD PTR [rsp+0x8],rcx
   140006d85:	sub    rsp,0x38
   140006d89:	mov    rcx,QWORD PTR [rsp+0x40]
   140006d8e:	call   0x140021028
   140006d93:	mov    rax,QWORD PTR [rsp+0x40]
   140006d98:	add    rax,0x288
   140006d9e:	xor    edx,edx
   140006da0:	mov    rcx,rax
   140006da3:	call   0x140020f68
   140006da8:	mov    rdx,rax
   140006dab:	mov    rcx,QWORD PTR [rsp+0x40]
   140006db0:	call   0x14002102e
   140006db5:	call   0x140007a10
   140006dba:	mov    edx,0x64
   140006dbf:	mov    rcx,rax
   140006dc2:	call   0x140007ae0
   140006dc7:	mov    QWORD PTR [rsp+0x20],rax
   140006dcc:	mov    r8d,0x1
   140006dd2:	mov    rdx,QWORD PTR [rsp+0x20]
   140006dd7:	mov    rcx,QWORD PTR [rsp+0x40]
   140006ddc:	call   0x140007b90
   140006de1:	xor    r8d,r8d
   140006de4:	mov    rdx,QWORD PTR [rsp+0x20]
   140006de9:	mov    rcx,QWORD PTR [rsp+0x40]
   140006dee:	call   0x140007b90
   140006df3:	mov    eax,0x1
   140006df8:	add    rsp,0x38
   140006dfc:	ret    
   140006dfd:	int3   
   140006dfe:	int3   
   140006dff:	int3   
   140006e00:	int3   
   140006e01:	int3   
   140006e02:	int3   
   140006e03:	int3   
   140006e04:	int3   
   140006e05:	int3   
   140006e06:	int3   
   140006e07:	int3   
   140006e08:	int3   
   140006e09:	int3   
   140006e0a:	int3   
   140006e0b:	int3   
   140006e0c:	int3   
   140006e0d:	int3   
   140006e0e:	int3   
   140006e0f:	int3   
   140006e10:	mov    QWORD PTR [rsp+0x10],rdx
   140006e15:	mov    QWORD PTR [rsp+0x8],rcx
   140006e1a:	sub    rsp,0x28
   140006e1e:	mov    rdx,QWORD PTR [rsp+0x38]
   140006e23:	mov    rcx,QWORD PTR [rsp+0x30]
   140006e28:	call   0x1400054a0
   140006e2d:	add    rsp,0x28
   140006e31:	ret    
   140006e32:	int3   
   140006e33:	int3   
   140006e34:	int3   
   140006e35:	int3   
   140006e36:	int3   
   140006e37:	int3   
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	mov    QWORD PTR [rsp+0x18],r8
   140006e45:	mov    QWORD PTR [rsp+0x10],rdx
   140006e4a:	mov    QWORD PTR [rsp+0x8],rcx
   140006e4f:	sub    rsp,0x28
   140006e53:	mov    r8,QWORD PTR [rsp+0x40]
   140006e58:	mov    rdx,QWORD PTR [rsp+0x38]
   140006e5d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006e62:	call   0x140021022
   140006e67:	mov    rax,QWORD PTR [rsp+0x30]
   140006e6c:	add    rax,0x130
   140006e72:	mov    rcx,rax
   140006e75:	call   QWORD PTR [rip+0x1fa45]        # 0x1400268c0
   140006e7b:	movzx  eax,al
   140006e7e:	test   eax,eax
   140006e80:	jne    0x140006ef2
   140006e82:	mov    rax,QWORD PTR [rsp+0x30]
   140006e87:	add    rax,0x130
   140006e8d:	mov    rdx,QWORD PTR [rsp+0x40]
   140006e92:	mov    rcx,rax
   140006e95:	call   QWORD PTR [rip+0x1f975]        # 0x140026810
   140006e9b:	test   eax,eax
   140006e9d:	jne    0x140006ef2
   140006e9f:	mov    rax,QWORD PTR [rsp+0x30]
   140006ea4:	mov    rax,QWORD PTR [rax]
   140006ea7:	mov    rcx,QWORD PTR [rsp+0x30]
   140006eac:	call   QWORD PTR [rax+0x3e8]
   140006eb2:	mov    rax,QWORD PTR [rsp+0x30]
   140006eb7:	mov    rax,QWORD PTR [rax]
   140006eba:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ebf:	call   QWORD PTR [rax+0x3e0]
   140006ec5:	mov    rax,QWORD PTR [rsp+0x30]
   140006eca:	mov    rax,QWORD PTR [rax]
   140006ecd:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ed2:	call   QWORD PTR [rax+0x3f0]
   140006ed8:	movzx  eax,al
   140006edb:	test   eax,eax
   140006edd:	je     0x140006ef2
   140006edf:	mov    rax,QWORD PTR [rsp+0x30]
   140006ee4:	mov    rax,QWORD PTR [rax]
   140006ee7:	mov    rcx,QWORD PTR [rsp+0x30]
   140006eec:	call   QWORD PTR [rax+0x3c8]
   140006ef2:	add    rsp,0x28
   140006ef6:	ret    
   140006ef7:	int3   
   140006ef8:	int3   
   140006ef9:	int3   
   140006efa:	int3   
   140006efb:	int3   
   140006efc:	int3   
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	sub    rsp,0x28
   140006f04:	call   0x14002109a
   140006f09:	add    rsp,0x28
   140006f0d:	ret    
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	int3   
   140006f11:	int3   
   140006f12:	int3   
   140006f13:	int3   
   140006f14:	int3   
   140006f15:	int3   
   140006f16:	int3   
   140006f17:	int3   
   140006f18:	int3   
   140006f19:	int3   
   140006f1a:	int3   
   140006f1b:	int3   
   140006f1c:	int3   
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	lea    rax,[rip+0x230f9]        # 0x14002a020
   140006f27:	ret    
   140006f28:	int3   
   140006f29:	int3   
   140006f2a:	int3   
   140006f2b:	int3   
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	mov    QWORD PTR [rsp+0x8],rcx
   140006f35:	lea    rax,[rip+0x230e4]        # 0x14002a020
   140006f3c:	ret    
   140006f3d:	int3   
   140006f3e:	int3   
   140006f3f:	int3   
   140006f40:	int3   
   140006f41:	int3   
   140006f42:	int3   
   140006f43:	int3   
   140006f44:	int3   
   140006f45:	int3   
   140006f46:	int3   
   140006f47:	int3   
   140006f48:	int3   
   140006f49:	int3   
   140006f4a:	int3   
   140006f4b:	int3   
   140006f4c:	int3   
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	lea    rax,[rip+0x23659]        # 0x14002a5b0
   140006f57:	ret    
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	mov    QWORD PTR [rsp+0x8],rcx
   140006f65:	sub    rsp,0x28
   140006f69:	call   0x140006f50
   140006f6e:	add    rsp,0x28
   140006f72:	ret    
   140006f73:	int3   
   140006f74:	int3   
   140006f75:	int3   
   140006f76:	int3   
   140006f77:	int3   
   140006f78:	int3   
   140006f79:	int3   
   140006f7a:	int3   
   140006f7b:	int3   
   140006f7c:	int3   
   140006f7d:	int3   
   140006f7e:	int3   
   140006f7f:	int3   
   140006f80:	mov    QWORD PTR [rsp+0x8],rcx
   140006f85:	push   rsi
   140006f86:	push   rdi
   140006f87:	sub    rsp,0x28
   140006f8b:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140006f93:	mov    eax,DWORD PTR [rip+0x34b27]        # 0x14003bac0
   140006f99:	and    eax,0x1
   140006f9c:	test   eax,eax
   140006f9e:	jne    0x140006fd9
   140006fa0:	mov    eax,DWORD PTR [rip+0x34b1a]        # 0x14003bac0
   140006fa6:	or     eax,0x1
   140006fa9:	mov    DWORD PTR [rip+0x34b11],eax        # 0x14003bac0
   140006faf:	mov    QWORD PTR [rsp+0x8],0x0
   140006fb8:	mov    DWORD PTR [rsp+0x10],0x0
   140006fc0:	lea    rax,[rip+0x34189]        # 0x14003b150
   140006fc7:	lea    rcx,[rsp+0x8]
   140006fcc:	mov    rdi,rax
   140006fcf:	mov    rsi,rcx
   140006fd2:	mov    ecx,0x10
   140006fd7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006fd9:	lea    rax,[rip+0x34160]        # 0x14003b140
   140006fe0:	add    rsp,0x28
   140006fe4:	pop    rdi
   140006fe5:	pop    rsi
   140006fe6:	ret    
   140006fe7:	int3   
   140006fe8:	int3   
   140006fe9:	int3   
   140006fea:	int3   
   140006feb:	int3   
   140006fec:	int3   
   140006fed:	int3   
   140006fee:	int3   
   140006fef:	int3   
   140006ff0:	lea    rax,[rip+0x230a1]        # 0x14002a098
   140006ff7:	ret    
   140006ff8:	int3   
   140006ff9:	int3   
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	int3   
   140006ffd:	int3   
   140006ffe:	int3   
   140006fff:	int3   
   140007000:	mov    QWORD PTR [rsp+0x8],rcx
   140007005:	lea    rax,[rip+0x2308c]        # 0x14002a098
   14000700c:	ret    
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	int3   
   140007011:	int3   
   140007012:	int3   
   140007013:	int3   
   140007014:	int3   
   140007015:	int3   
   140007016:	int3   
   140007017:	int3   
   140007018:	int3   
   140007019:	int3   
   14000701a:	int3   
   14000701b:	int3   
   14000701c:	int3   
   14000701d:	int3   
   14000701e:	int3   
   14000701f:	int3   
   140007020:	mov    QWORD PTR [rsp+0x10],rdx
   140007025:	mov    QWORD PTR [rsp+0x8],rcx
   14000702a:	sub    rsp,0x58
   14000702e:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140007037:	mov    BYTE PTR [rsp+0x20],0x0
   14000703c:	cmp    QWORD PTR [rsp+0x68],0x0
   140007042:	je     0x1400071ff
   140007048:	mov    rax,QWORD PTR [rsp+0x60]
   14000704d:	add    rax,0x2d0
   140007053:	mov    rcx,rax
   140007056:	call   0x140020f56
   14000705b:	mov    rax,QWORD PTR [rsp+0x68]
   140007060:	movzx  eax,WORD PTR [rax]
   140007063:	test   eax,eax
   140007065:	je     0x1400071ff
   14000706b:	mov    dx,0x3a
   14000706f:	mov    rcx,QWORD PTR [rsp+0x68]
   140007074:	call   QWORD PTR [rip+0x1f2ae]        # 0x140026328
   14000707a:	mov    QWORD PTR [rsp+0x28],rax
   14000707f:	cmp    QWORD PTR [rsp+0x28],0x0
   140007085:	jne    0x14000708c
   140007087:	jmp    0x1400071ff
   14000708c:	mov    rax,QWORD PTR [rsp+0x68]
   140007091:	mov    rcx,QWORD PTR [rsp+0x28]
   140007096:	sub    rcx,rax
   140007099:	mov    rax,rcx
   14000709c:	sar    rax,1
   14000709f:	mov    r8d,eax
   1400070a2:	mov    rdx,QWORD PTR [rsp+0x68]
   1400070a7:	lea    rcx,[rsp+0x30]
   1400070ac:	call   QWORD PTR [rip+0x1f766]        # 0x140026818
   1400070b2:	nop
   1400070b3:	lea    rcx,[rsp+0x30]
   1400070b8:	call   QWORD PTR [rip+0x1f742]        # 0x140026800
   1400070be:	lea    rcx,[rsp+0x30]
   1400070c3:	call   QWORD PTR [rip+0x1f73f]        # 0x140026808
   1400070c9:	mov    rax,QWORD PTR [rsp+0x28]
   1400070ce:	add    rax,0x2
   1400070d2:	mov    QWORD PTR [rsp+0x28],rax
   1400070d7:	mov    rax,QWORD PTR [rsp+0x28]
   1400070dc:	movzx  eax,WORD PTR [rax]
   1400070df:	test   eax,eax
   1400070e1:	je     0x140007100
   1400070e3:	mov    rax,QWORD PTR [rsp+0x28]
   1400070e8:	movzx  eax,WORD PTR [rax]
   1400070eb:	cmp    eax,0x20
   1400070ee:	jne    0x140007100
   1400070f0:	mov    rax,QWORD PTR [rsp+0x28]
   1400070f5:	add    rax,0x2
   1400070f9:	mov    QWORD PTR [rsp+0x28],rax
   1400070fe:	jmp    0x1400070d7
   140007100:	mov    rax,QWORD PTR [rsp+0x28]
   140007105:	mov    QWORD PTR [rsp+0x68],rax
   14000710a:	mov    dx,0x20
   14000710e:	mov    rcx,QWORD PTR [rsp+0x68]
   140007113:	call   QWORD PTR [rip+0x1f20f]        # 0x140026328
   140007119:	mov    QWORD PTR [rsp+0x28],rax
   14000711e:	cmp    QWORD PTR [rsp+0x28],0x0
   140007124:	jne    0x14000713f
   140007126:	mov    rcx,QWORD PTR [rsp+0x68]
   14000712b:	call   QWORD PTR [rip+0x1f21f]        # 0x140026350
   140007131:	mov    rcx,QWORD PTR [rsp+0x68]
   140007136:	lea    rax,[rcx+rax*2]
   14000713a:	mov    QWORD PTR [rsp+0x28],rax
   14000713f:	mov    rax,QWORD PTR [rsp+0x68]
   140007144:	cmp    QWORD PTR [rsp+0x28],rax
   140007149:	jne    0x14000715b
   14000714b:	lea    rcx,[rsp+0x30]
   140007150:	call   QWORD PTR [rip+0x1fc0a]        # 0x140026d60
   140007156:	jmp    0x1400071ff
   14000715b:	mov    rax,QWORD PTR [rsp+0x68]
   140007160:	mov    rcx,QWORD PTR [rsp+0x28]
   140007165:	sub    rcx,rax
   140007168:	mov    rax,rcx
   14000716b:	sar    rax,1
   14000716e:	mov    r8d,eax
   140007171:	mov    rdx,QWORD PTR [rsp+0x68]
   140007176:	lea    rcx,[rsp+0x38]
   14000717b:	call   QWORD PTR [rip+0x1f697]        # 0x140026818
   140007181:	nop
   140007182:	lea    rcx,[rsp+0x38]
   140007187:	call   QWORD PTR [rip+0x1f67b]        # 0x140026808
   14000718d:	mov    rax,QWORD PTR [rsp+0x28]
   140007192:	movzx  eax,WORD PTR [rax]
   140007195:	test   eax,eax
   140007197:	je     0x1400071a7
   140007199:	mov    rax,QWORD PTR [rsp+0x28]
   14000719e:	add    rax,0x2
   1400071a2:	mov    QWORD PTR [rsp+0x28],rax
   1400071a7:	mov    rax,QWORD PTR [rsp+0x28]
   1400071ac:	mov    QWORD PTR [rsp+0x68],rax
   1400071b1:	lea    rcx,[rsp+0x30]
   1400071b6:	call   QWORD PTR [rip+0x1fbf4]        # 0x140026db0
   1400071bc:	mov    rcx,QWORD PTR [rsp+0x60]
   1400071c1:	add    rcx,0x2d0
   1400071c8:	mov    rdx,rax
   1400071cb:	call   0x140020f50
   1400071d0:	lea    rdx,[rsp+0x38]
   1400071d5:	mov    rcx,rax
   1400071d8:	call   QWORD PTR [rip+0x1fb7a]        # 0x140026d58
   1400071de:	mov    BYTE PTR [rsp+0x20],0x1
   1400071e3:	lea    rcx,[rsp+0x38]
   1400071e8:	call   QWORD PTR [rip+0x1fb72]        # 0x140026d60
   1400071ee:	nop
   1400071ef:	lea    rcx,[rsp+0x30]
   1400071f4:	call   QWORD PTR [rip+0x1fb66]        # 0x140026d60
   1400071fa:	jmp    0x14000705b
   1400071ff:	movzx  eax,BYTE PTR [rsp+0x20]
   140007204:	add    rsp,0x58
   140007208:	ret    
   140007209:	int3   
   14000720a:	int3   
   14000720b:	int3   
   14000720c:	int3   
   14000720d:	int3   
   14000720e:	int3   
   14000720f:	int3   
   140007210:	mov    QWORD PTR [rsp+0x8],rcx
   140007215:	sub    rsp,0x98
   14000721c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140007225:	mov    rax,QWORD PTR [rip+0x34024]        # 0x14003b250
   14000722c:	xor    rax,rsp
   14000722f:	mov    QWORD PTR [rsp+0x88],rax
   140007237:	mov    BYTE PTR [rsp+0x40],0x0
   14000723c:	lea    rcx,[rsp+0x58]
   140007241:	call   QWORD PTR [rip+0x1fb39]        # 0x140026d80
   140007247:	nop
   140007248:	mov    DWORD PTR [rsp+0x4c],0x0
   140007250:	mov    DWORD PTR [rsp+0x48],0x0
   140007258:	mov    DWORD PTR [rsp+0x44],0x0
   140007260:	mov    rax,QWORD PTR [rsp+0xa0]
   140007268:	add    rax,0x2d0
   14000726e:	lea    r8,[rsp+0x58]
   140007273:	lea    rdx,[rip+0x22c0e]        # 0x140029e88
   14000727a:	mov    rcx,rax
   14000727d:	call   0x140020f4a
   140007282:	test   eax,eax
   140007284:	je     0x1400073b5
   14000728a:	mov    eax,DWORD PTR [rsp+0x44]
   14000728e:	inc    eax
   140007290:	mov    DWORD PTR [rsp+0x44],eax
   140007294:	lea    rcx,[rsp+0x58]
   140007299:	call   QWORD PTR [rip+0x1fb11]        # 0x140026db0
   14000729f:	lea    r9,[rsp+0x48]
   1400072a4:	lea    r8,[rsp+0x4c]
   1400072a9:	lea    rdx,[rip+0x22bf8]        # 0x140029ea8
   1400072b0:	mov    rcx,rax
   1400072b3:	call   QWORD PTR [rip+0x1f067]        # 0x140026320
   1400072b9:	cmp    eax,0x2
   1400072bc:	jne    0x1400073b5
   1400072c2:	mov    eax,DWORD PTR [rsp+0x44]
   1400072c6:	inc    eax
   1400072c8:	mov    DWORD PTR [rsp+0x44],eax
   1400072cc:	lea    rcx,[rsp+0x68]
   1400072d1:	call   0x140005180
   1400072d6:	lea    rcx,[rsp+0x78]
   1400072db:	call   0x140005180
   1400072e0:	lea    rdx,[rsp+0x78]
   1400072e5:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400072ed:	call   0x140007a60
   1400072f2:	lea    rdx,[rsp+0x68]
   1400072f7:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400072ff:	call   0x140007a90
   140007304:	lea    rcx,[rsp+0x68]
   140007309:	call   0x140007bd0
   14000730e:	mov    ecx,DWORD PTR [rsp+0x4c]
   140007312:	add    ecx,eax
   140007314:	mov    eax,ecx
   140007316:	mov    DWORD PTR [rsp+0x50],eax
   14000731a:	lea    rcx,[rsp+0x78]
   14000731f:	call   0x140007bd0
   140007324:	mov    ecx,DWORD PTR [rsp+0x50]
   140007328:	sub    ecx,eax
   14000732a:	mov    eax,ecx
   14000732c:	mov    DWORD PTR [rsp+0x4c],eax
   140007330:	lea    rcx,[rsp+0x68]
   140007335:	call   0x140007ac0
   14000733a:	mov    ecx,DWORD PTR [rsp+0x48]
   14000733e:	add    ecx,eax
   140007340:	mov    eax,ecx
   140007342:	mov    DWORD PTR [rsp+0x54],eax
   140007346:	lea    rcx,[rsp+0x78]
   14000734b:	call   0x140007ac0
   140007350:	mov    ecx,DWORD PTR [rsp+0x54]
   140007354:	sub    ecx,eax
   140007356:	mov    eax,ecx
   140007358:	mov    DWORD PTR [rsp+0x48],eax
   14000735c:	mov    DWORD PTR [rsp+0x30],0x26
   140007364:	mov    eax,DWORD PTR [rsp+0x48]
   140007368:	mov    DWORD PTR [rsp+0x28],eax
   14000736c:	mov    eax,DWORD PTR [rsp+0x4c]
   140007370:	mov    DWORD PTR [rsp+0x20],eax
   140007374:	xor    r9d,r9d
   140007377:	xor    r8d,r8d
   14000737a:	mov    rdx,QWORD PTR [rip+0x1f387]        # 0x140026708
   140007381:	mov    rcx,QWORD PTR [rsp+0xa0]
   140007389:	call   0x140020f74
   14000738e:	mov    rax,QWORD PTR [rsp+0xa0]
   140007396:	movzx  eax,BYTE PTR [rax+0x308]
   14000739d:	test   eax,eax
   14000739f:	je     0x1400073b0
   1400073a1:	xor    edx,edx
   1400073a3:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400073ab:	call   0x140020f7a
   1400073b0:	mov    BYTE PTR [rsp+0x40],0x1
   1400073b5:	movzx  eax,BYTE PTR [rsp+0x40]
   1400073ba:	mov    BYTE PTR [rsp+0x41],al
   1400073be:	lea    rcx,[rsp+0x58]
   1400073c3:	call   QWORD PTR [rip+0x1f997]        # 0x140026d60
   1400073c9:	movzx  eax,BYTE PTR [rsp+0x41]
   1400073ce:	mov    rcx,QWORD PTR [rsp+0x88]
   1400073d6:	xor    rcx,rsp
   1400073d9:	call   0x140021890
   1400073de:	add    rsp,0x98
   1400073e5:	ret    
   1400073e6:	int3   
   1400073e7:	int3   
   1400073e8:	int3   
   1400073e9:	int3   
   1400073ea:	int3   
   1400073eb:	int3   
   1400073ec:	int3   
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400073f5:	sub    rsp,0x48
   1400073f9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140007402:	lea    rcx,[rsp+0x20]
   140007407:	call   0x140002a80
   14000740c:	nop
   14000740d:	lea    rdx,[rip+0x22a04]        # 0x140029e18
   140007414:	mov    rcx,QWORD PTR [rsp+0x50]
   140007419:	call   0x140021094
   14000741e:	mov    rdx,rax
   140007421:	lea    rcx,[rsp+0x20]
   140007426:	call   0x1400077f0
   14000742b:	lea    rcx,[rsp+0x20]
   140007430:	call   0x140007950
   140007435:	mov    rcx,QWORD PTR [rsp+0x50]
   14000743a:	mov    rcx,QWORD PTR [rcx]
   14000743d:	mov    QWORD PTR [rsp+0x28],rcx
   140007442:	mov    rdx,rax
   140007445:	mov    rcx,QWORD PTR [rsp+0x50]
   14000744a:	mov    rax,QWORD PTR [rsp+0x28]
   14000744f:	call   QWORD PTR [rax+0x3d8]
   140007455:	nop
   140007456:	lea    rcx,[rsp+0x20]
   14000745b:	call   0x1400077d0
   140007460:	add    rsp,0x48
   140007464:	ret    
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	int3   
   140007469:	int3   
   14000746a:	int3   
   14000746b:	int3   
   14000746c:	int3   
   14000746d:	int3   
   14000746e:	int3   
   14000746f:	int3   
   140007470:	mov    QWORD PTR [rsp+0x8],rcx
   140007475:	sub    rsp,0x68
   140007479:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140007482:	mov    BYTE PTR [rsp+0x20],0x0
   140007487:	lea    rcx,[rsp+0x28]
   14000748c:	call   0x140007680
   140007491:	nop
   140007492:	lea    rcx,[rsp+0x28]
   140007497:	call   0x140017e80
   14000749c:	mov    rcx,QWORD PTR [rsp+0x70]
   1400074a1:	add    rcx,0x120
   1400074a8:	mov    rdx,QWORD PTR [rsp+0x70]
   1400074ad:	mov    rdx,QWORD PTR [rdx+0x120]
   1400074b4:	mov    QWORD PTR [rsp+0x50],rdx
   1400074b9:	mov    rdx,rax
   1400074bc:	mov    rax,QWORD PTR [rsp+0x50]
   1400074c1:	call   QWORD PTR [rax+0x48]
   1400074c4:	mov    DWORD PTR [rsp+0x30],eax
   1400074c8:	cmp    DWORD PTR [rsp+0x30],0x0
   1400074cd:	jl     0x140007563
   1400074d3:	xor    edx,edx
   1400074d5:	lea    rcx,[rsp+0x28]
   1400074da:	call   0x140007910
   1400074df:	movzx  eax,al
   1400074e2:	test   eax,eax
   1400074e4:	je     0x140007563
   1400074e6:	lea    rcx,[rsp+0x38]
   1400074eb:	call   0x140002a80
   1400074f0:	nop
   1400074f1:	lea    rcx,[rsp+0x28]
   1400074f6:	call   0x14001ea00
   1400074fb:	mov    QWORD PTR [rsp+0x40],rax
   140007500:	lea    rcx,[rsp+0x38]
   140007505:	call   0x140017e80
   14000750a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000750f:	mov    rcx,QWORD PTR [rcx]
   140007512:	mov    QWORD PTR [rsp+0x48],rcx
   140007517:	mov    rdx,rax
   14000751a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000751f:	mov    rax,QWORD PTR [rsp+0x48]
   140007524:	call   QWORD PTR [rax+0x88]
   14000752a:	mov    DWORD PTR [rsp+0x34],eax
   14000752e:	cmp    DWORD PTR [rsp+0x34],0x0
   140007533:	jl     0x140007559
   140007535:	lea    rcx,[rsp+0x38]
   14000753a:	call   0x14001ea00
   14000753f:	mov    rcx,QWORD PTR [rsp+0x70]
   140007544:	add    rcx,0x278
   14000754b:	mov    rdx,rax
   14000754e:	call   QWORD PTR [rip+0x1f34c]        # 0x1400268a0
   140007554:	mov    BYTE PTR [rsp+0x20],0x1
   140007559:	lea    rcx,[rsp+0x38]
   14000755e:	call   0x140001340
   140007563:	movzx  eax,BYTE PTR [rsp+0x20]
   140007568:	mov    BYTE PTR [rsp+0x21],al
   14000756c:	lea    rcx,[rsp+0x28]
   140007571:	call   0x140007780
   140007576:	movzx  eax,BYTE PTR [rsp+0x21]
   14000757b:	add    rsp,0x68
   14000757f:	ret    
   140007580:	int3   
   140007581:	int3   
   140007582:	int3   
   140007583:	int3   
   140007584:	int3   
   140007585:	int3   
   140007586:	int3   
   140007587:	int3   
   140007588:	int3   
   140007589:	int3   
   14000758a:	int3   
   14000758b:	int3   
   14000758c:	int3   
   14000758d:	int3   
   14000758e:	int3   
   14000758f:	int3   
   140007590:	mov    QWORD PTR [rsp+0x10],rdx
   140007595:	mov    QWORD PTR [rsp+0x8],rcx
   14000759a:	sub    rsp,0x38
   14000759e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400075a7:	cmp    QWORD PTR [rsp+0x48],0x0
   1400075ad:	je     0x140007669
   1400075b3:	mov    eax,0x2
   1400075b8:	imul   rax,rax,0x0
   1400075bc:	mov    rcx,QWORD PTR [rsp+0x48]
   1400075c1:	movzx  eax,WORD PTR [rcx+rax*1]
   1400075c5:	test   eax,eax
   1400075c7:	je     0x140007669
   1400075cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400075d2:	call   QWORD PTR [rip+0x1ef38]        # 0x140026510
   1400075d8:	test   eax,eax
   1400075da:	je     0x140007611
   1400075dc:	mov    dl,0x1
   1400075de:	lea    rcx,[rip+0x2276b]        # 0x140029d50
   1400075e5:	call   0x140017250
   1400075ea:	mov    dl,0x1
   1400075ec:	mov    rcx,QWORD PTR [rsp+0x48]
   1400075f1:	call   0x140017250
   1400075f6:	mov    rax,QWORD PTR [rsp+0x40]
   1400075fb:	add    rax,0x130
   140007601:	mov    rdx,QWORD PTR [rsp+0x48]
   140007606:	mov    rcx,rax
   140007609:	call   QWORD PTR [rip+0x1f291]        # 0x1400268a0
   14000760f:	jmp    0x140007667
   140007611:	lea    rdx,[rip+0x22788]        # 0x140029da0
   140007618:	lea    rcx,[rsp+0x20]
   14000761d:	call   QWORD PTR [rip+0x1f745]        # 0x140026d68
   140007623:	nop
   140007624:	mov    rdx,QWORD PTR [rsp+0x48]
   140007629:	lea    rcx,[rsp+0x20]
   14000762e:	call   QWORD PTR [rip+0x1f71c]        # 0x140026d50
   140007634:	lea    rdx,[rip+0x227bd]        # 0x140029df8
   14000763b:	lea    rcx,[rsp+0x20]
   140007640:	call   QWORD PTR [rip+0x1f70a]        # 0x140026d50
   140007646:	lea    rcx,[rsp+0x20]
   14000764b:	call   QWORD PTR [rip+0x1f75f]        # 0x140026db0
   140007651:	mov    dl,0x1
   140007653:	mov    rcx,rax
   140007656:	call   0x140017250
   14000765b:	nop
   14000765c:	lea    rcx,[rsp+0x20]
   140007661:	call   QWORD PTR [rip+0x1f6f9]        # 0x140026d60
   140007667:	jmp    0x140007677
   140007669:	mov    dl,0x1
   14000766b:	lea    rcx,[rip+0x227be]        # 0x140029e30
   140007672:	call   0x140017250
   140007677:	add    rsp,0x38
   14000767b:	ret    
   14000767c:	int3   
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	mov    QWORD PTR [rsp+0x8],rcx
   140007685:	sub    rsp,0x38
   140007689:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007692:	mov    rcx,QWORD PTR [rsp+0x40]
   140007697:	call   0x140002a80
   14000769c:	nop
   14000769d:	mov    rax,QWORD PTR [rsp+0x40]
   1400076a2:	add    rsp,0x38
   1400076a6:	ret    
   1400076a7:	int3   
   1400076a8:	int3   
   1400076a9:	int3   
   1400076aa:	int3   
   1400076ab:	int3   
   1400076ac:	int3   
   1400076ad:	int3   
   1400076ae:	int3   
   1400076af:	int3   
   1400076b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400076b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400076ba:	sub    rsp,0x28
   1400076be:	cmp    QWORD PTR [rsp+0x38],0x0
   1400076c4:	jne    0x1400076d4
   1400076c6:	mov    rax,QWORD PTR [rsp+0x30]
   1400076cb:	mov    QWORD PTR [rax],0x0
   1400076d2:	jmp    0x140007702
   1400076d4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400076d9:	call   QWORD PTR [rip+0x1ede1]        # 0x1400264c0
   1400076df:	mov    rcx,QWORD PTR [rsp+0x30]
   1400076e4:	mov    QWORD PTR [rcx],rax
   1400076e7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400076ec:	call   0x1400078a0
   1400076f1:	movzx  eax,al
   1400076f4:	test   eax,eax
   1400076f6:	je     0x140007702
   1400076f8:	mov    ecx,0x8007000e
   1400076fd:	call   0x140002ef0
   140007702:	mov    rax,QWORD PTR [rsp+0x30]
   140007707:	add    rsp,0x28
   14000770b:	ret    
   14000770c:	int3   
   14000770d:	int3   
   14000770e:	int3   
   14000770f:	int3   
   140007710:	mov    QWORD PTR [rsp+0x10],rdx
   140007715:	mov    QWORD PTR [rsp+0x8],rcx
   14000771a:	sub    rsp,0x28
   14000771e:	mov    rax,QWORD PTR [rsp+0x30]
   140007723:	mov    QWORD PTR [rax+0x8],0x0
   14000772b:	mov    rax,QWORD PTR [rsp+0x30]
   140007730:	mov    DWORD PTR [rax+0x10],0x1
   140007737:	mov    rcx,QWORD PTR [rsp+0x38]
   14000773c:	call   QWORD PTR [rip+0x1ed7e]        # 0x1400264c0
   140007742:	mov    rcx,QWORD PTR [rsp+0x30]
   140007747:	mov    QWORD PTR [rcx],rax
   14000774a:	mov    rax,QWORD PTR [rsp+0x30]
   14000774f:	cmp    QWORD PTR [rax],0x0
   140007753:	jne    0x140007767
   140007755:	cmp    QWORD PTR [rsp+0x38],0x0
   14000775b:	je     0x140007767
   14000775d:	mov    ecx,0x8007000e
   140007762:	call   0x140021e90
   140007767:	mov    rax,QWORD PTR [rsp+0x30]
   14000776c:	add    rsp,0x28
   140007770:	ret    
   140007771:	int3   
   140007772:	int3   
   140007773:	int3   
   140007774:	int3   
   140007775:	int3   
   140007776:	int3   
   140007777:	int3   
   140007778:	int3   
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	mov    QWORD PTR [rsp+0x8],rcx
   140007785:	sub    rsp,0x38
   140007789:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007792:	mov    rcx,QWORD PTR [rsp+0x40]
   140007797:	call   0x14001ea10
   14000779c:	add    rsp,0x38
   1400077a0:	ret    
   1400077a1:	int3   
   1400077a2:	int3   
   1400077a3:	int3   
   1400077a4:	int3   
   1400077a5:	int3   
   1400077a6:	int3   
   1400077a7:	int3   
   1400077a8:	int3   
   1400077a9:	int3   
   1400077aa:	int3   
   1400077ab:	int3   
   1400077ac:	int3   
   1400077ad:	int3   
   1400077ae:	int3   
   1400077af:	int3   
   1400077b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400077b5:	sub    rsp,0x28
   1400077b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400077be:	call   0x140007bf0
   1400077c3:	add    rsp,0x28
   1400077c7:	ret    
   1400077c8:	int3   
   1400077c9:	int3   
   1400077ca:	int3   
   1400077cb:	int3   
   1400077cc:	int3   
   1400077cd:	int3   
   1400077ce:	int3   
   1400077cf:	int3   
   1400077d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400077d5:	sub    rsp,0x28
   1400077d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400077de:	call   0x140007c60
   1400077e3:	add    rsp,0x28
   1400077e7:	ret    
   1400077e8:	int3   
   1400077e9:	int3   
   1400077ea:	int3   
   1400077eb:	int3   
   1400077ec:	int3   
   1400077ed:	int3   
   1400077ee:	int3   
   1400077ef:	int3   
   1400077f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400077f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400077fa:	sub    rsp,0x48
   1400077fe:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140007807:	cmp    QWORD PTR [rsp+0x58],0x0
   14000780d:	je     0x140007820
   14000780f:	mov    rcx,QWORD PTR [rsp+0x50]
   140007814:	call   0x140007950
   140007819:	cmp    rax,QWORD PTR [rsp+0x58]
   14000781e:	je     0x14000788c
   140007820:	mov    rcx,QWORD PTR [rsp+0x50]
   140007825:	call   0x140007c60
   14000782a:	mov    ecx,0x18
   14000782f:	call   0x140002b80
   140007834:	mov    QWORD PTR [rsp+0x20],rax
   140007839:	cmp    QWORD PTR [rsp+0x20],0x0
   14000783f:	je     0x140007857
   140007841:	mov    rdx,QWORD PTR [rsp+0x58]
   140007846:	mov    rcx,QWORD PTR [rsp+0x20]
   14000784b:	call   0x140007710
   140007850:	mov    QWORD PTR [rsp+0x28],rax
   140007855:	jmp    0x140007860
   140007857:	mov    QWORD PTR [rsp+0x28],0x0
   140007860:	mov    rax,QWORD PTR [rsp+0x28]
   140007865:	mov    QWORD PTR [rsp+0x30],rax
   14000786a:	mov    rax,QWORD PTR [rsp+0x50]
   14000786f:	mov    rcx,QWORD PTR [rsp+0x30]
   140007874:	mov    QWORD PTR [rax],rcx
   140007877:	mov    rax,QWORD PTR [rsp+0x50]
   14000787c:	cmp    QWORD PTR [rax],0x0
   140007880:	jne    0x14000788c
   140007882:	mov    ecx,0x8007000e
   140007887:	call   0x140021e90
   14000788c:	mov    rax,QWORD PTR [rsp+0x50]
   140007891:	add    rsp,0x48
   140007895:	ret    
   140007896:	int3   
   140007897:	int3   
   140007898:	int3   
   140007899:	int3   
   14000789a:	int3   
   14000789b:	int3   
   14000789c:	int3   
   14000789d:	int3   
   14000789e:	int3   
   14000789f:	int3   
   1400078a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400078a5:	sub    rsp,0x18
   1400078a9:	mov    rax,QWORD PTR [rsp+0x20]
   1400078ae:	cmp    QWORD PTR [rax],0x0
   1400078b2:	jne    0x1400078bd
   1400078b4:	mov    DWORD PTR [rsp],0x1
   1400078bb:	jmp    0x1400078c4
   1400078bd:	mov    DWORD PTR [rsp],0x0
   1400078c4:	movzx  eax,BYTE PTR [rsp]
   1400078c8:	add    rsp,0x18
   1400078cc:	ret    
   1400078cd:	int3   
   1400078ce:	int3   
   1400078cf:	int3   
   1400078d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400078d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400078da:	sub    rsp,0x18
   1400078de:	mov    rax,QWORD PTR [rsp+0x20]
   1400078e3:	mov    rcx,QWORD PTR [rsp+0x28]
   1400078e8:	cmp    QWORD PTR [rax],rcx
   1400078eb:	jne    0x1400078f6
   1400078ed:	mov    DWORD PTR [rsp],0x1
   1400078f4:	jmp    0x1400078fd
   1400078f6:	mov    DWORD PTR [rsp],0x0
   1400078fd:	movzx  eax,BYTE PTR [rsp]
   140007901:	add    rsp,0x18
   140007905:	ret    
   140007906:	int3   
   140007907:	int3   
   140007908:	int3   
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	mov    QWORD PTR [rsp+0x10],rdx
   140007915:	mov    QWORD PTR [rsp+0x8],rcx
   14000791a:	sub    rsp,0x38
   14000791e:	mov    rdx,QWORD PTR [rsp+0x48]
   140007923:	mov    rcx,QWORD PTR [rsp+0x40]
   140007928:	call   0x1400078d0
   14000792d:	movzx  eax,al
   140007930:	test   eax,eax
   140007932:	jne    0x14000793e
   140007934:	mov    DWORD PTR [rsp+0x20],0x1
   14000793c:	jmp    0x140007946
   14000793e:	mov    DWORD PTR [rsp+0x20],0x0
   140007946:	movzx  eax,BYTE PTR [rsp+0x20]
   14000794b:	add    rsp,0x38
   14000794f:	ret    
   140007950:	mov    QWORD PTR [rsp+0x8],rcx
   140007955:	sub    rsp,0x38
   140007959:	mov    rax,QWORD PTR [rsp+0x40]
   14000795e:	cmp    QWORD PTR [rax],0x0
   140007962:	je     0x14000797b
   140007964:	mov    rax,QWORD PTR [rsp+0x40]
   140007969:	mov    rcx,QWORD PTR [rax]
   14000796c:	call   0x140017e80
   140007971:	mov    rax,QWORD PTR [rax]
   140007974:	mov    QWORD PTR [rsp+0x20],rax
   140007979:	jmp    0x140007984
   14000797b:	mov    QWORD PTR [rsp+0x20],0x0
   140007984:	mov    rax,QWORD PTR [rsp+0x20]
   140007989:	add    rsp,0x38
   14000798d:	ret    
   14000798e:	int3   
   14000798f:	int3   
   140007990:	mov    DWORD PTR [rsp+0x10],edx
   140007994:	mov    QWORD PTR [rsp+0x8],rcx
   140007999:	sub    rsp,0x28
   14000799d:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079a2:	call   0x140006980
   1400079a7:	mov    eax,DWORD PTR [rsp+0x38]
   1400079ab:	and    eax,0x1
   1400079ae:	test   eax,eax
   1400079b0:	je     0x1400079bc
   1400079b2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079b7:	call   0x140002ba0
   1400079bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400079c1:	add    rsp,0x28
   1400079c5:	ret    
   1400079c6:	int3   
   1400079c7:	int3   
   1400079c8:	int3   
   1400079c9:	int3   
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	int3   
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	mov    DWORD PTR [rsp+0x10],edx
   1400079d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400079d9:	sub    rsp,0x28
   1400079dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079e2:	call   0x1400077b0
   1400079e7:	mov    eax,DWORD PTR [rsp+0x38]
   1400079eb:	and    eax,0x1
   1400079ee:	test   eax,eax
   1400079f0:	je     0x1400079fc
   1400079f2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079f7:	call   0x140020b90
   1400079fc:	mov    rax,QWORD PTR [rsp+0x30]
   140007a01:	add    rsp,0x28
   140007a05:	ret    
   140007a06:	int3   
   140007a07:	int3   
   140007a08:	int3   
   140007a09:	int3   
   140007a0a:	int3   
   140007a0b:	int3   
   140007a0c:	int3   
   140007a0d:	int3   
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	sub    rsp,0x28
   140007a14:	call   0x140020f62
   140007a19:	mov    rax,QWORD PTR [rax+0x8]
   140007a1d:	add    rsp,0x28
   140007a21:	ret    
   140007a22:	int3   
   140007a23:	int3   
   140007a24:	int3   
   140007a25:	int3   
   140007a26:	int3   
   140007a27:	int3   
   140007a28:	int3   
   140007a29:	int3   
   140007a2a:	int3   
   140007a2b:	int3   
   140007a2c:	int3   
   140007a2d:	int3   
   140007a2e:	int3   
   140007a2f:	int3   
   140007a30:	mov    QWORD PTR [rsp+0x18],r8
   140007a35:	mov    DWORD PTR [rsp+0x10],edx
   140007a39:	mov    QWORD PTR [rsp+0x8],rcx
   140007a3e:	sub    rsp,0x28
   140007a42:	movzx  eax,WORD PTR [rsp+0x38]
   140007a47:	mov    r8,QWORD PTR [rsp+0x40]
   140007a4c:	mov    edx,eax
   140007a4e:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a53:	call   0x140020f80
   140007a58:	add    rsp,0x28
   140007a5c:	ret    
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	mov    QWORD PTR [rsp+0x10],rdx
   140007a65:	mov    QWORD PTR [rsp+0x8],rcx
   140007a6a:	sub    rsp,0x28
   140007a6e:	mov    rdx,QWORD PTR [rsp+0x38]
   140007a73:	mov    rax,QWORD PTR [rsp+0x30]
   140007a78:	mov    rcx,QWORD PTR [rax+0x40]
   140007a7c:	call   QWORD PTR [rip+0x1eb06]        # 0x140026588
   140007a82:	add    rsp,0x28
   140007a86:	ret    
   140007a87:	int3   
   140007a88:	int3   
   140007a89:	int3   
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	mov    QWORD PTR [rsp+0x10],rdx
   140007a95:	mov    QWORD PTR [rsp+0x8],rcx
   140007a9a:	sub    rsp,0x28
   140007a9e:	mov    rdx,QWORD PTR [rsp+0x38]
   140007aa3:	mov    rax,QWORD PTR [rsp+0x30]
   140007aa8:	mov    rcx,QWORD PTR [rax+0x40]
   140007aac:	call   QWORD PTR [rip+0x1eace]        # 0x140026580
   140007ab2:	add    rsp,0x28
   140007ab6:	ret    
   140007ab7:	int3   
   140007ab8:	int3   
   140007ab9:	int3   
   140007aba:	int3   
   140007abb:	int3   
   140007abc:	int3   
   140007abd:	int3   
   140007abe:	int3   
   140007abf:	int3   
   140007ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140007ac5:	mov    rax,QWORD PTR [rsp+0x8]
   140007aca:	mov    rcx,QWORD PTR [rsp+0x8]
   140007acf:	mov    ecx,DWORD PTR [rcx+0x4]
   140007ad2:	mov    eax,DWORD PTR [rax+0xc]
   140007ad5:	sub    eax,ecx
   140007ad7:	ret    
   140007ad8:	int3   
   140007ad9:	int3   
   140007ada:	int3   
   140007adb:	int3   
   140007adc:	int3   
   140007add:	int3   
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	mov    DWORD PTR [rsp+0x10],edx
   140007ae4:	mov    QWORD PTR [rsp+0x8],rcx
   140007ae9:	sub    rsp,0x38
   140007aed:	movzx  eax,WORD PTR [rsp+0x48]
   140007af2:	mov    QWORD PTR [rsp+0x20],rax
   140007af7:	movzx  ecx,WORD PTR [rsp+0x48]
   140007afc:	mov    edx,0xe
   140007b01:	call   0x140020fc8
   140007b06:	mov    rcx,QWORD PTR [rsp+0x20]
   140007b0b:	mov    rdx,rcx
   140007b0e:	mov    rcx,rax
   140007b11:	call   QWORD PTR [rip+0x1ea61]        # 0x140026578
   140007b17:	add    rsp,0x38
   140007b1b:	ret    
   140007b1c:	int3   
   140007b1d:	int3   
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	mov    QWORD PTR [rsp+0x8],rcx
   140007b25:	sub    rsp,0x48
   140007b29:	mov    rax,QWORD PTR [rsp+0x50]
   140007b2e:	add    rax,0x10
   140007b32:	mov    ecx,0xffffffff
   140007b37:	lock xadd DWORD PTR [rax],ecx
   140007b3b:	dec    ecx
   140007b3d:	mov    eax,ecx
   140007b3f:	mov    DWORD PTR [rsp+0x20],eax
   140007b43:	cmp    DWORD PTR [rsp+0x20],0x0
   140007b48:	jne    0x140007b85
   140007b4a:	mov    rax,QWORD PTR [rsp+0x50]
   140007b4f:	mov    QWORD PTR [rsp+0x30],rax
   140007b54:	mov    rax,QWORD PTR [rsp+0x30]
   140007b59:	mov    QWORD PTR [rsp+0x28],rax
   140007b5e:	cmp    QWORD PTR [rsp+0x28],0x0
   140007b64:	je     0x140007b7c
   140007b66:	mov    edx,0x1
   140007b6b:	mov    rcx,QWORD PTR [rsp+0x28]
   140007b70:	call   0x1400079d0
   140007b75:	mov    QWORD PTR [rsp+0x38],rax
   140007b7a:	jmp    0x140007b85
   140007b7c:	mov    QWORD PTR [rsp+0x38],0x0
   140007b85:	mov    eax,DWORD PTR [rsp+0x20]
   140007b89:	add    rsp,0x48
   140007b8d:	ret    
   140007b8e:	int3   
   140007b8f:	int3   
   140007b90:	mov    DWORD PTR [rsp+0x18],r8d
   140007b95:	mov    QWORD PTR [rsp+0x10],rdx
   140007b9a:	mov    QWORD PTR [rsp+0x8],rcx
   140007b9f:	sub    rsp,0x28
   140007ba3:	movsxd rax,DWORD PTR [rsp+0x40]
   140007ba8:	mov    r9,QWORD PTR [rsp+0x38]
   140007bad:	mov    r8,rax
   140007bb0:	mov    edx,0x80
   140007bb5:	mov    rax,QWORD PTR [rsp+0x30]
   140007bba:	mov    rcx,QWORD PTR [rax+0x40]
   140007bbe:	call   QWORD PTR [rip+0x1e9cc]        # 0x140026590
   140007bc4:	add    rsp,0x28
   140007bc8:	ret    
   140007bc9:	int3   
   140007bca:	int3   
   140007bcb:	int3   
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	mov    QWORD PTR [rsp+0x8],rcx
   140007bd5:	mov    rax,QWORD PTR [rsp+0x8]
   140007bda:	mov    rcx,QWORD PTR [rsp+0x8]
   140007bdf:	mov    ecx,DWORD PTR [rcx]
   140007be1:	mov    eax,DWORD PTR [rax+0x8]
   140007be4:	sub    eax,ecx
   140007be6:	ret    
   140007be7:	int3   
   140007be8:	int3   
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	int3   
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	mov    QWORD PTR [rsp+0x8],rcx
   140007bf5:	sub    rsp,0x38
   140007bf9:	mov    rax,QWORD PTR [rsp+0x40]
   140007bfe:	cmp    QWORD PTR [rax],0x0
   140007c02:	je     0x140007c1e
   140007c04:	mov    rax,QWORD PTR [rsp+0x40]
   140007c09:	mov    rcx,QWORD PTR [rax]
   140007c0c:	call   QWORD PTR [rip+0x1e8ce]        # 0x1400264e0
   140007c12:	mov    rax,QWORD PTR [rsp+0x40]
   140007c17:	mov    QWORD PTR [rax],0x0
   140007c1e:	mov    rax,QWORD PTR [rsp+0x40]
   140007c23:	cmp    QWORD PTR [rax+0x8],0x0
   140007c28:	je     0x140007c4f
   140007c2a:	mov    rax,QWORD PTR [rsp+0x40]
   140007c2f:	mov    rax,QWORD PTR [rax+0x8]
   140007c33:	mov    QWORD PTR [rsp+0x20],rax
   140007c38:	mov    rcx,QWORD PTR [rsp+0x20]
   140007c3d:	call   0x140020b96
   140007c42:	mov    rax,QWORD PTR [rsp+0x40]
   140007c47:	mov    QWORD PTR [rax+0x8],0x0
   140007c4f:	add    rsp,0x38
   140007c53:	ret    
   140007c54:	int3   
   140007c55:	int3   
   140007c56:	int3   
   140007c57:	int3   
   140007c58:	int3   
   140007c59:	int3   
   140007c5a:	int3   
   140007c5b:	int3   
   140007c5c:	int3   
   140007c5d:	int3   
   140007c5e:	int3   
   140007c5f:	int3   
   140007c60:	mov    QWORD PTR [rsp+0x8],rcx
   140007c65:	sub    rsp,0x28
   140007c69:	mov    rax,QWORD PTR [rsp+0x30]
   140007c6e:	cmp    QWORD PTR [rax],0x0
   140007c72:	je     0x140007c8d
   140007c74:	mov    rax,QWORD PTR [rsp+0x30]
   140007c79:	mov    rcx,QWORD PTR [rax]
   140007c7c:	call   0x140007b20
   140007c81:	mov    rax,QWORD PTR [rsp+0x30]
   140007c86:	mov    QWORD PTR [rax],0x0
   140007c8d:	add    rsp,0x28
   140007c91:	ret    
   140007c92:	int3   
   140007c93:	int3   
   140007c94:	int3   
   140007c95:	int3   
   140007c96:	int3   
   140007c97:	int3   
   140007c98:	int3   
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	mov    QWORD PTR [rsp+0x20],r9
   140007ca5:	mov    QWORD PTR [rsp+0x18],r8
   140007caa:	mov    QWORD PTR [rsp+0x10],rdx
   140007caf:	mov    QWORD PTR [rsp+0x8],rcx
   140007cb4:	sub    rsp,0x38
   140007cb8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007cc1:	mov    r9,QWORD PTR [rsp+0x58]
   140007cc6:	mov    r8,QWORD PTR [rsp+0x50]
   140007ccb:	mov    rdx,QWORD PTR [rsp+0x48]
   140007cd0:	mov    rcx,QWORD PTR [rsp+0x40]
   140007cd5:	call   0x140006850
   140007cda:	nop
   140007cdb:	mov    rax,QWORD PTR [rsp+0x40]
   140007ce0:	lea    rcx,[rip+0x22959]        # 0x14002a640
   140007ce7:	mov    QWORD PTR [rax],rcx
   140007cea:	mov    rax,QWORD PTR [rsp+0x40]
   140007cef:	lea    rcx,[rip+0x22d4a]        # 0x14002aa40
   140007cf6:	mov    QWORD PTR [rax+0x120],rcx
   140007cfd:	mov    rax,QWORD PTR [rsp+0x40]
   140007d02:	add    rsp,0x38
   140007d06:	ret    
   140007d07:	int3   
   140007d08:	int3   
   140007d09:	int3   
   140007d0a:	int3   
   140007d0b:	int3   
   140007d0c:	int3   
   140007d0d:	int3   
   140007d0e:	int3   
   140007d0f:	int3   
   140007d10:	mov    QWORD PTR [rsp+0x8],rcx
   140007d15:	sub    rsp,0x38
   140007d19:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007d22:	mov    rax,QWORD PTR [rsp+0x40]
   140007d27:	lea    rcx,[rip+0x22912]        # 0x14002a640
   140007d2e:	mov    QWORD PTR [rax],rcx
   140007d31:	mov    rax,QWORD PTR [rsp+0x40]
   140007d36:	lea    rcx,[rip+0x22d03]        # 0x14002aa40
   140007d3d:	mov    QWORD PTR [rax+0x120],rcx
   140007d44:	mov    rcx,QWORD PTR [rsp+0x40]
   140007d49:	call   0x140006980
   140007d4e:	add    rsp,0x38
   140007d52:	ret    
   140007d53:	int3   
   140007d54:	int3   
   140007d55:	int3   
   140007d56:	int3   
   140007d57:	int3   
   140007d58:	int3   
   140007d59:	int3   
   140007d5a:	int3   
   140007d5b:	int3   
   140007d5c:	int3   
   140007d5d:	int3   
   140007d5e:	int3   
   140007d5f:	int3   
   140007d60:	mov    QWORD PTR [rsp+0x8],rcx
   140007d65:	sub    rsp,0x38
   140007d69:	mov    rcx,QWORD PTR [rsp+0x40]
   140007d6e:	call   0x140006d80
   140007d73:	call   0x140007a10
   140007d78:	mov    edx,0x65
   140007d7d:	mov    rcx,rax
   140007d80:	call   0x140007ae0
   140007d85:	mov    QWORD PTR [rsp+0x20],rax
   140007d8a:	mov    r8d,0x1
   140007d90:	mov    rdx,QWORD PTR [rsp+0x20]
   140007d95:	mov    rcx,QWORD PTR [rsp+0x40]
   140007d9a:	call   0x140007b90
   140007d9f:	xor    r8d,r8d
   140007da2:	mov    rdx,QWORD PTR [rsp+0x20]
   140007da7:	mov    rcx,QWORD PTR [rsp+0x40]
   140007dac:	call   0x140007b90
   140007db1:	mov    eax,0x1
   140007db6:	add    rsp,0x38
   140007dba:	ret    
   140007dbb:	int3   
   140007dbc:	int3   
   140007dbd:	int3   
   140007dbe:	int3   
   140007dbf:	int3   
   140007dc0:	int3   
   140007dc1:	int3   
   140007dc2:	int3   
   140007dc3:	int3   
   140007dc4:	int3   
   140007dc5:	int3   
   140007dc6:	int3   
   140007dc7:	int3   
   140007dc8:	int3   
   140007dc9:	int3   
   140007dca:	int3   
   140007dcb:	int3   
   140007dcc:	int3   
   140007dcd:	int3   
   140007dce:	int3   
   140007dcf:	int3   
   140007dd0:	lea    rax,[rip+0x22cd9]        # 0x14002aab0
   140007dd7:	ret    
   140007dd8:	int3   
   140007dd9:	int3   
   140007dda:	int3   
   140007ddb:	int3   
   140007ddc:	int3   
   140007ddd:	int3   
   140007dde:	int3   
   140007ddf:	int3   
   140007de0:	mov    QWORD PTR [rsp+0x8],rcx
   140007de5:	sub    rsp,0x28
   140007de9:	call   0x140007dd0
   140007dee:	add    rsp,0x28
   140007df2:	ret    
   140007df3:	int3   
   140007df4:	int3   
   140007df5:	int3   
   140007df6:	int3   
   140007df7:	int3   
   140007df8:	int3   
   140007df9:	int3   
   140007dfa:	int3   
   140007dfb:	int3   
   140007dfc:	int3   
   140007dfd:	int3   
   140007dfe:	int3   
   140007dff:	int3   
   140007e00:	mov    QWORD PTR [rsp+0x8],rcx
   140007e05:	push   rsi
   140007e06:	push   rdi
   140007e07:	sub    rsp,0x28
   140007e0b:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140007e13:	mov    eax,DWORD PTR [rip+0x33cab]        # 0x14003bac4
   140007e19:	and    eax,0x1
   140007e1c:	test   eax,eax
   140007e1e:	jne    0x140007e59
   140007e20:	mov    eax,DWORD PTR [rip+0x33c9e]        # 0x14003bac4
   140007e26:	or     eax,0x1
   140007e29:	mov    DWORD PTR [rip+0x33c95],eax        # 0x14003bac4
   140007e2f:	mov    QWORD PTR [rsp+0x8],0x0
   140007e38:	mov    DWORD PTR [rsp+0x10],0x0
   140007e40:	lea    rax,[rip+0x33329]        # 0x14003b170
   140007e47:	lea    rcx,[rsp+0x8]
   140007e4c:	mov    rdi,rax
   140007e4f:	mov    rsi,rcx
   140007e52:	mov    ecx,0x10
   140007e57:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007e59:	lea    rax,[rip+0x33300]        # 0x14003b160
   140007e60:	add    rsp,0x28
   140007e64:	pop    rdi
   140007e65:	pop    rsi
   140007e66:	ret    
   140007e67:	int3   
   140007e68:	int3   
   140007e69:	int3   
   140007e6a:	int3   
   140007e6b:	int3   
   140007e6c:	int3   
   140007e6d:	int3   
   140007e6e:	int3   
   140007e6f:	int3   
   140007e70:	mov    DWORD PTR [rsp+0x10],edx
   140007e74:	mov    QWORD PTR [rsp+0x8],rcx
   140007e79:	sub    rsp,0x28
   140007e7d:	mov    rcx,QWORD PTR [rsp+0x30]
   140007e82:	call   0x140007d10
   140007e87:	mov    eax,DWORD PTR [rsp+0x38]
   140007e8b:	and    eax,0x1
   140007e8e:	test   eax,eax
   140007e90:	je     0x140007e9c
   140007e92:	mov    rcx,QWORD PTR [rsp+0x30]
   140007e97:	call   0x140002ba0
   140007e9c:	mov    rax,QWORD PTR [rsp+0x30]
   140007ea1:	add    rsp,0x28
   140007ea5:	ret    
   140007ea6:	int3   
   140007ea7:	int3   
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	int3   
   140007ead:	int3   
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	mov    QWORD PTR [rsp+0x20],r9
   140007eb5:	mov    QWORD PTR [rsp+0x18],r8
   140007eba:	mov    QWORD PTR [rsp+0x10],rdx
   140007ebf:	mov    QWORD PTR [rsp+0x8],rcx
   140007ec4:	sub    rsp,0x38
   140007ec8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007ed1:	mov    r9,QWORD PTR [rsp+0x58]
   140007ed6:	mov    r8,QWORD PTR [rsp+0x50]
   140007edb:	mov    rdx,QWORD PTR [rsp+0x48]
   140007ee0:	mov    rcx,QWORD PTR [rsp+0x40]
   140007ee5:	call   0x140006850
   140007eea:	nop
   140007eeb:	mov    rax,QWORD PTR [rsp+0x40]
   140007ef0:	add    rax,0x310
   140007ef6:	mov    rcx,rax
   140007ef9:	call   0x1400084f0
   140007efe:	mov    rax,QWORD PTR [rsp+0x40]
   140007f03:	lea    rcx,[rip+0x22d66]        # 0x14002ac70
   140007f0a:	mov    QWORD PTR [rax],rcx
   140007f0d:	mov    rax,QWORD PTR [rsp+0x40]
   140007f12:	lea    rcx,[rip+0x23157]        # 0x14002b070
   140007f19:	mov    QWORD PTR [rax+0x120],rcx
   140007f20:	mov    rax,QWORD PTR [rsp+0x40]
   140007f25:	lea    rcx,[rip+0x2319c]        # 0x14002b0c8
   140007f2c:	mov    QWORD PTR [rax+0x310],rcx
   140007f33:	mov    rax,QWORD PTR [rsp+0x40]
   140007f38:	add    rsp,0x38
   140007f3c:	ret    
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	int3   
   140007f41:	int3   
   140007f42:	int3   
   140007f43:	int3   
   140007f44:	int3   
   140007f45:	int3   
   140007f46:	int3   
   140007f47:	int3   
   140007f48:	int3   
   140007f49:	int3   
   140007f4a:	int3   
   140007f4b:	int3   
   140007f4c:	int3   
   140007f4d:	int3   
   140007f4e:	int3   
   140007f4f:	int3   
   140007f50:	mov    QWORD PTR [rsp+0x8],rcx
   140007f55:	sub    rsp,0x38
   140007f59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007f62:	mov    rax,QWORD PTR [rsp+0x40]
   140007f67:	lea    rcx,[rip+0x22d02]        # 0x14002ac70
   140007f6e:	mov    QWORD PTR [rax],rcx
   140007f71:	mov    rax,QWORD PTR [rsp+0x40]
   140007f76:	lea    rcx,[rip+0x230f3]        # 0x14002b070
   140007f7d:	mov    QWORD PTR [rax+0x120],rcx
   140007f84:	mov    rax,QWORD PTR [rsp+0x40]
   140007f89:	lea    rcx,[rip+0x23138]        # 0x14002b0c8
   140007f90:	mov    QWORD PTR [rax+0x310],rcx
   140007f97:	mov    rcx,QWORD PTR [rsp+0x40]
   140007f9c:	call   0x140006980
   140007fa1:	add    rsp,0x38
   140007fa5:	ret    
   140007fa6:	int3   
   140007fa7:	int3   
   140007fa8:	int3   
   140007fa9:	int3   
   140007faa:	int3   
   140007fab:	int3   
   140007fac:	int3   
   140007fad:	int3   
   140007fae:	int3   
   140007faf:	int3   
   140007fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140007fb5:	sub    rsp,0x368
   140007fbc:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140007fc5:	mov    rax,QWORD PTR [rsp+0x370]
   140007fcd:	mov    rax,QWORD PTR [rax]
   140007fd0:	mov    rcx,QWORD PTR [rsp+0x370]
   140007fd8:	call   QWORD PTR [rax+0x3c0]
   140007fde:	mov    QWORD PTR [rsp+0x28],rax
   140007fe3:	mov    rcx,QWORD PTR [rsp+0x28]
   140007fe8:	call   0x14001bd10
   140007fed:	mov    rdx,rax
   140007ff0:	lea    rcx,[rsp+0x20]
   140007ff5:	call   QWORD PTR [rip+0x1ed6d]        # 0x140026d68
   140007ffb:	nop
   140007ffc:	lea    rcx,[rsp+0x20]
   140008001:	call   QWORD PTR [rip+0x1e8b9]        # 0x1400268c0
   140008007:	movzx  eax,al
   14000800a:	test   eax,eax
   14000800c:	jne    0x1400080c5
   140008012:	lea    rcx,[rsp+0x20]
   140008017:	call   QWORD PTR [rip+0x1ed93]        # 0x140026db0
   14000801d:	mov    rcx,rax
   140008020:	call   QWORD PTR [rip+0x1e4ea]        # 0x140026510
   140008026:	test   eax,eax
   140008028:	je     0x1400080c5
   14000802e:	lea    rcx,[rsp+0x20]
   140008033:	call   QWORD PTR [rip+0x1ed77]        # 0x140026db0
   140008039:	mov    r9,QWORD PTR [rsp+0x370]
   140008041:	mov    r8,QWORD PTR [rsp+0x28]
   140008046:	mov    rdx,rax
   140008049:	lea    rcx,[rsp+0x50]
   14000804e:	call   0x140006850
   140008053:	nop
   140008054:	lea    rcx,[rsp+0x50]
   140008059:	call   0x140020c0e
   14000805e:	cmp    rax,0x1
   140008062:	jne    0x140008073
   140008064:	mov    rcx,QWORD PTR [rsp+0x370]
   14000806c:	call   0x140020f9e
   140008071:	jmp    0x1400080b9
   140008073:	lea    rdx,[rip+0x22aba]        # 0x14002ab34
   14000807a:	lea    rcx,[rsp+0x38]
   14000807f:	call   0x140008510
   140008084:	nop
   140008085:	mov    rax,QWORD PTR [rsp+0x370]
   14000808d:	mov    rax,QWORD PTR [rax]
   140008090:	xor    r9d,r9d
   140008093:	lea    r8,[rsp+0x38]
   140008098:	lea    rdx,[rip+0x22aa1]        # 0x14002ab40
   14000809f:	mov    rcx,QWORD PTR [rsp+0x370]
   1400080a7:	call   QWORD PTR [rax+0x3d0]
   1400080ad:	nop
   1400080ae:	lea    rcx,[rsp+0x38]
   1400080b3:	call   0x140008570
   1400080b8:	nop
   1400080b9:	lea    rcx,[rsp+0x50]
   1400080be:	call   0x140006980
   1400080c3:	jmp    0x1400080d3
   1400080c5:	mov    rcx,QWORD PTR [rsp+0x370]
   1400080cd:	call   0x140020f9e
   1400080d2:	nop
   1400080d3:	lea    rcx,[rsp+0x20]
   1400080d8:	call   QWORD PTR [rip+0x1ec82]        # 0x140026d60
   1400080de:	add    rsp,0x368
   1400080e5:	ret    
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	int3   
   1400080e9:	int3   
   1400080ea:	int3   
   1400080eb:	int3   
   1400080ec:	int3   
   1400080ed:	int3   
   1400080ee:	int3   
   1400080ef:	int3   
   1400080f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400080f5:	sub    rsp,0x48
   1400080f9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140008102:	mov    rax,QWORD PTR [rsp+0x50]
   140008107:	mov    rcx,QWORD PTR [rax+0x40]
   14000810b:	call   QWORD PTR [rip+0x1e45f]        # 0x140026570
   140008111:	test   eax,eax
   140008113:	je     0x1400081ac
   140008119:	mov    rax,QWORD PTR [rsp+0x50]
   14000811e:	mov    rcx,QWORD PTR [rax+0x280]
   140008125:	call   0x14001bfe0
   14000812a:	cvttsd2si eax,xmm0
   14000812e:	mov    DWORD PTR [rsp+0x20],eax
   140008132:	lea    rcx,[rsp+0x28]
   140008137:	call   QWORD PTR [rip+0x1ec43]        # 0x140026d80
   14000813d:	nop
   14000813e:	mov    rax,QWORD PTR [rsp+0x50]
   140008143:	add    rax,0x278
   140008149:	mov    rcx,rax
   14000814c:	call   QWORD PTR [rip+0x1ec5e]        # 0x140026db0
   140008152:	mov    r8d,DWORD PTR [rsp+0x20]
   140008157:	mov    rdx,rax
   14000815a:	lea    rcx,[rsp+0x28]
   14000815f:	call   QWORD PTR [rip+0x1e9a3]        # 0x140026b08
   140008165:	mov    dl,0x1
   140008167:	lea    rcx,[rip+0x229a2]        # 0x14002ab10
   14000816e:	call   0x140017250
   140008173:	lea    rcx,[rsp+0x28]
   140008178:	call   QWORD PTR [rip+0x1ec32]        # 0x140026db0
   14000817e:	mov    dl,0x1
   140008180:	mov    rcx,rax
   140008183:	call   0x140017250
   140008188:	lea    rcx,[rsp+0x28]
   14000818d:	call   QWORD PTR [rip+0x1ec1d]        # 0x140026db0
   140008193:	mov    rdx,rax
   140008196:	mov    rcx,QWORD PTR [rsp+0x50]
   14000819b:	call   0x140020f6e
   1400081a0:	nop
   1400081a1:	lea    rcx,[rsp+0x28]
   1400081a6:	call   QWORD PTR [rip+0x1ebb4]        # 0x140026d60
   1400081ac:	add    rsp,0x48
   1400081b0:	ret    
   1400081b1:	int3   
   1400081b2:	int3   
   1400081b3:	int3   
   1400081b4:	int3   
   1400081b5:	int3   
   1400081b6:	int3   
   1400081b7:	int3   
   1400081b8:	int3   
   1400081b9:	int3   
   1400081ba:	int3   
   1400081bb:	int3   
   1400081bc:	int3   
   1400081bd:	int3   
   1400081be:	int3   
   1400081bf:	int3   
   1400081c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400081c5:	sub    rsp,0x28
   1400081c9:	mov    dl,0x1
   1400081cb:	lea    rcx,[rip+0x228ee]        # 0x14002aac0
   1400081d2:	call   0x140017250
   1400081d7:	add    rsp,0x28
   1400081db:	ret    
   1400081dc:	int3   
   1400081dd:	int3   
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	int3   
   1400081e1:	int3   
   1400081e2:	int3   
   1400081e3:	int3   
   1400081e4:	int3   
   1400081e5:	int3   
   1400081e6:	int3   
   1400081e7:	int3   
   1400081e8:	int3   
   1400081e9:	int3   
   1400081ea:	int3   
   1400081eb:	int3   
   1400081ec:	int3   
   1400081ed:	int3   
   1400081ee:	int3   
   1400081ef:	int3   
   1400081f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400081f5:	sub    rsp,0x38
   1400081f9:	mov    dl,0x1
   1400081fb:	lea    rcx,[rip+0x228e6]        # 0x14002aae8
   140008202:	call   0x140017250
   140008207:	mov    rax,QWORD PTR [rsp+0x40]
   14000820c:	mov    rcx,QWORD PTR [rax-0x2d0]
   140008213:	call   QWORD PTR [rip+0x1e357]        # 0x140026570
   140008219:	test   eax,eax
   14000821b:	je     0x14000825f
   14000821d:	mov    rax,QWORD PTR [rsp+0x40]
   140008222:	sub    rax,0x310
   140008228:	mov    rcx,QWORD PTR [rsp+0x40]
   14000822d:	mov    rcx,QWORD PTR [rcx-0x310]
   140008234:	mov    QWORD PTR [rsp+0x20],rcx
   140008239:	mov    rcx,rax
   14000823c:	mov    rax,QWORD PTR [rsp+0x20]
   140008241:	call   QWORD PTR [rax+0x3c8]
   140008247:	mov    rax,QWORD PTR [rsp+0x40]
   14000824c:	sub    rax,0x310
   140008252:	mov    edx,0x1
   140008257:	mov    rcx,rax
   14000825a:	call   0x1400210a6
   14000825f:	add    rsp,0x38
   140008263:	ret    
   140008264:	int3   
   140008265:	int3   
   140008266:	int3   
   140008267:	int3   
   140008268:	int3   
   140008269:	int3   
   14000826a:	int3   
   14000826b:	int3   
   14000826c:	int3   
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	movsd  QWORD PTR [rsp+0x10],xmm1
   140008276:	mov    QWORD PTR [rsp+0x8],rcx
   14000827b:	ret    
   14000827c:	int3   
   14000827d:	int3   
   14000827e:	int3   
   14000827f:	int3   
   140008280:	int3   
   140008281:	int3   
   140008282:	int3   
   140008283:	int3   
   140008284:	int3   
   140008285:	int3   
   140008286:	int3   
   140008287:	int3   
   140008288:	int3   
   140008289:	int3   
   14000828a:	int3   
   14000828b:	int3   
   14000828c:	int3   
   14000828d:	int3   
   14000828e:	int3   
   14000828f:	int3   
   140008290:	mov    DWORD PTR [rsp+0x10],edx
   140008294:	mov    QWORD PTR [rsp+0x8],rcx
   140008299:	sub    rsp,0x988
   1400082a0:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400082a9:	movzx  eax,BYTE PTR [rip+0x3381c]        # 0x14003bacc
   1400082b0:	test   eax,eax
   1400082b2:	jne    0x140008440
   1400082b8:	mov    BYTE PTR [rip+0x3380d],0x1        # 0x14003bacc
   1400082bf:	mov    rax,QWORD PTR [rsp+0x990]
   1400082c7:	mov    rcx,QWORD PTR [rax-0x2d0]
   1400082ce:	call   QWORD PTR [rip+0x1e29c]        # 0x140026570
   1400082d4:	test   eax,eax
   1400082d6:	je     0x140008440
   1400082dc:	mov    rax,QWORD PTR [rsp+0x990]
   1400082e4:	sub    rax,0x310
   1400082ea:	mov    rcx,QWORD PTR [rsp+0x990]
   1400082f2:	mov    rcx,QWORD PTR [rcx-0x310]
   1400082f9:	mov    QWORD PTR [rsp+0x40],rcx
   1400082fe:	mov    rcx,rax
   140008301:	mov    rax,QWORD PTR [rsp+0x40]
   140008306:	call   QWORD PTR [rax+0x3c0]
   14000830c:	mov    QWORD PTR [rsp+0x20],rax
   140008311:	cmp    DWORD PTR [rsp+0x998],0x3
   140008319:	jne    0x140008376
   14000831b:	mov    rax,QWORD PTR [rsp+0x990]
   140008323:	sub    rax,0x310
   140008329:	mov    QWORD PTR [rsp+0x38],rax
   14000832e:	mov    rcx,QWORD PTR [rsp+0x20]
   140008333:	call   0x14001bc80
   140008338:	mov    rcx,QWORD PTR [rsp+0x38]
   14000833d:	mov    r9,rcx
   140008340:	mov    r8,QWORD PTR [rsp+0x20]
   140008345:	mov    rdx,rax
   140008348:	lea    rcx,[rsp+0x360]
   140008350:	call   0x140006850
   140008355:	nop
   140008356:	lea    rcx,[rsp+0x360]
   14000835e:	call   0x140020c0e
   140008363:	nop
   140008364:	lea    rcx,[rsp+0x360]
   14000836c:	call   0x140006980
   140008371:	jmp    0x140008425
   140008376:	cmp    DWORD PTR [rsp+0x998],0x1
   14000837e:	jne    0x1400083cf
   140008380:	mov    rax,QWORD PTR [rsp+0x990]
   140008388:	sub    rax,0x310
   14000838e:	mov    QWORD PTR [rsp+0x30],rax
   140008393:	mov    rcx,QWORD PTR [rsp+0x20]
   140008398:	call   0x14001bbf0
   14000839d:	mov    rcx,QWORD PTR [rsp+0x30]
   1400083a2:	mov    r9,rcx
   1400083a5:	mov    r8,QWORD PTR [rsp+0x20]
   1400083aa:	mov    rdx,rax
   1400083ad:	lea    rcx,[rsp+0x50]
   1400083b2:	call   0x140006850
   1400083b7:	nop
   1400083b8:	lea    rcx,[rsp+0x50]
   1400083bd:	call   0x140020c0e
   1400083c2:	nop
   1400083c3:	lea    rcx,[rsp+0x50]
   1400083c8:	call   0x140006980
   1400083cd:	jmp    0x140008425
   1400083cf:	mov    rax,QWORD PTR [rsp+0x990]
   1400083d7:	sub    rax,0x310
   1400083dd:	mov    QWORD PTR [rsp+0x28],rax
   1400083e2:	mov    rcx,QWORD PTR [rsp+0x20]
   1400083e7:	call   0x14001bcb0
   1400083ec:	mov    rcx,QWORD PTR [rsp+0x28]
   1400083f1:	mov    r9,rcx
   1400083f4:	mov    r8,QWORD PTR [rsp+0x20]
   1400083f9:	mov    rdx,rax
   1400083fc:	lea    rcx,[rsp+0x670]
   140008404:	call   0x140006850
   140008409:	nop
   14000840a:	lea    rcx,[rsp+0x670]
   140008412:	call   0x140020c0e
   140008417:	nop
   140008418:	lea    rcx,[rsp+0x670]
   140008420:	call   0x140006980
   140008425:	mov    rax,QWORD PTR [rsp+0x990]
   14000842d:	sub    rax,0x310
   140008433:	mov    edx,0x2
   140008438:	mov    rcx,rax
   14000843b:	call   0x1400210a6
   140008440:	add    rsp,0x988
   140008447:	ret    
   140008448:	int3   
   140008449:	int3   
   14000844a:	int3   
   14000844b:	int3   
   14000844c:	int3   
   14000844d:	int3   
   14000844e:	int3   
   14000844f:	int3   
   140008450:	lea    rax,[rip+0x22cb1]        # 0x14002b108
   140008457:	ret    
   140008458:	int3   
   140008459:	int3   
   14000845a:	int3   
   14000845b:	int3   
   14000845c:	int3   
   14000845d:	int3   
   14000845e:	int3   
   14000845f:	int3   
   140008460:	mov    QWORD PTR [rsp+0x8],rcx
   140008465:	sub    rsp,0x28
   140008469:	call   0x140008450
   14000846e:	add    rsp,0x28
   140008472:	ret    
   140008473:	int3   
   140008474:	int3   
   140008475:	int3   
   140008476:	int3   
   140008477:	int3   
   140008478:	int3   
   140008479:	int3   
   14000847a:	int3   
   14000847b:	int3   
   14000847c:	int3   
   14000847d:	int3   
   14000847e:	int3   
   14000847f:	int3   
   140008480:	mov    QWORD PTR [rsp+0x8],rcx
   140008485:	push   rsi
   140008486:	push   rdi
   140008487:	sub    rsp,0x28
   14000848b:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140008493:	mov    eax,DWORD PTR [rip+0x3362f]        # 0x14003bac8
   140008499:	and    eax,0x1
   14000849c:	test   eax,eax
   14000849e:	jne    0x1400084d9
   1400084a0:	mov    eax,DWORD PTR [rip+0x33622]        # 0x14003bac8
   1400084a6:	or     eax,0x1
   1400084a9:	mov    DWORD PTR [rip+0x33619],eax        # 0x14003bac8
   1400084af:	mov    QWORD PTR [rsp+0x8],0x0
   1400084b8:	mov    DWORD PTR [rsp+0x10],0x0
   1400084c0:	lea    rax,[rip+0x32cc9]        # 0x14003b190
   1400084c7:	lea    rcx,[rsp+0x8]
   1400084cc:	mov    rdi,rax
   1400084cf:	mov    rsi,rcx
   1400084d2:	mov    ecx,0x10
   1400084d7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400084d9:	lea    rax,[rip+0x32ca0]        # 0x14003b180
   1400084e0:	add    rsp,0x28
   1400084e4:	pop    rdi
   1400084e5:	pop    rsi
   1400084e6:	ret    
   1400084e7:	int3   
   1400084e8:	int3   
   1400084e9:	int3   
   1400084ea:	int3   
   1400084eb:	int3   
   1400084ec:	int3   
   1400084ed:	int3   
   1400084ee:	int3   
   1400084ef:	int3   
   1400084f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400084f5:	mov    rax,QWORD PTR [rsp+0x8]
   1400084fa:	lea    rcx,[rip+0x22747]        # 0x14002ac48
   140008501:	mov    QWORD PTR [rax],rcx
   140008504:	mov    rax,QWORD PTR [rsp+0x8]
   140008509:	ret    
   14000850a:	int3   
   14000850b:	int3   
   14000850c:	int3   
   14000850d:	int3   
   14000850e:	int3   
   14000850f:	int3   
   140008510:	mov    QWORD PTR [rsp+0x10],rdx
   140008515:	mov    QWORD PTR [rsp+0x8],rcx
   14000851a:	sub    rsp,0x28
   14000851e:	mov    eax,0x8
   140008523:	mov    rcx,QWORD PTR [rsp+0x30]
   140008528:	mov    WORD PTR [rcx],ax
   14000852b:	mov    rcx,QWORD PTR [rsp+0x38]
   140008530:	call   QWORD PTR [rip+0x1df8a]        # 0x1400264c0
   140008536:	mov    rcx,QWORD PTR [rsp+0x30]
   14000853b:	mov    QWORD PTR [rcx+0x8],rax
   14000853f:	mov    rax,QWORD PTR [rsp+0x30]
   140008544:	cmp    QWORD PTR [rax+0x8],0x0
   140008549:	jne    0x14000855d
   14000854b:	cmp    QWORD PTR [rsp+0x38],0x0
   140008551:	je     0x14000855d
   140008553:	mov    ecx,0x8007000e
   140008558:	call   0x140021e90
   14000855d:	mov    rax,QWORD PTR [rsp+0x30]
   140008562:	add    rsp,0x28
   140008566:	ret    
   140008567:	int3   
   140008568:	int3   
   140008569:	int3   
   14000856a:	int3   
   14000856b:	int3   
   14000856c:	int3   
   14000856d:	int3   
   14000856e:	int3   
   14000856f:	int3   
   140008570:	mov    QWORD PTR [rsp+0x8],rcx
   140008575:	sub    rsp,0x28
   140008579:	mov    rcx,QWORD PTR [rsp+0x30]
   14000857e:	call   QWORD PTR [rip+0x1df34]        # 0x1400264b8
   140008584:	add    rsp,0x28
   140008588:	ret    
   140008589:	int3   
   14000858a:	int3   
   14000858b:	int3   
   14000858c:	int3   
   14000858d:	int3   
   14000858e:	int3   
   14000858f:	int3   
   140008590:	mov    DWORD PTR [rsp+0x10],edx
   140008594:	mov    QWORD PTR [rsp+0x8],rcx
   140008599:	sub    rsp,0x28
   14000859d:	mov    rcx,QWORD PTR [rsp+0x30]
   1400085a2:	call   0x140007f50
   1400085a7:	mov    eax,DWORD PTR [rsp+0x38]
   1400085ab:	and    eax,0x1
   1400085ae:	test   eax,eax
   1400085b0:	je     0x1400085bc
   1400085b2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400085b7:	call   0x140002ba0
   1400085bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400085c1:	add    rsp,0x28
   1400085c5:	ret    
   1400085c6:	int3   
   1400085c7:	int3   
   1400085c8:	int3   
   1400085c9:	int3   
   1400085ca:	int3   
   1400085cb:	int3   
   1400085cc:	int3   
   1400085cd:	int3   
   1400085ce:	int3   
   1400085cf:	int3   
   1400085d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400085d5:	sub    rsp,0x58
   1400085d9:	mov    BYTE PTR [rsp+0x40],0x0
   1400085de:	mov    QWORD PTR [rsp+0x30],0x0
   1400085e7:	mov    DWORD PTR [rsp+0x28],0x80
   1400085ef:	mov    DWORD PTR [rsp+0x20],0x3
   1400085f7:	xor    r9d,r9d
   1400085fa:	xor    r8d,r8d
   1400085fd:	mov    edx,0x80000000
   140008602:	mov    rcx,QWORD PTR [rsp+0x60]
   140008607:	call   QWORD PTR [rip+0x1da9b]        # 0x1400260a8
   14000860d:	mov    QWORD PTR [rsp+0x48],rax
   140008612:	cmp    QWORD PTR [rsp+0x48],0xffffffffffffffff
   140008618:	je     0x14000862a
   14000861a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000861f:	call   QWORD PTR [rip+0x1daa3]        # 0x1400260c8
   140008625:	mov    BYTE PTR [rsp+0x40],0x1
   14000862a:	movzx  eax,BYTE PTR [rsp+0x40]
   14000862f:	add    rsp,0x58
   140008633:	ret    
   140008634:	int3   
   140008635:	int3   
   140008636:	int3   
   140008637:	int3   
   140008638:	int3   
   140008639:	int3   
   14000863a:	int3   
   14000863b:	int3   
   14000863c:	int3   
   14000863d:	int3   
   14000863e:	int3   
   14000863f:	int3   
   140008640:	mov    QWORD PTR [rsp+0x8],rcx
   140008645:	sub    rsp,0x58
   140008649:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140008652:	mov    BYTE PTR [rsp+0x20],0x0
   140008657:	mov    rdx,QWORD PTR [rsp+0x60]
   14000865c:	lea    rcx,[rsp+0x38]
   140008661:	call   0x140009f20
   140008666:	nop
   140008667:	lea    rcx,[rsp+0x38]
   14000866c:	call   0x14000ad20
   140008671:	test   eax,eax
   140008673:	jne    0x1400086c2
   140008675:	mov    edx,0x104
   14000867a:	lea    rcx,[rsp+0x38]
   14000867f:	call   0x14000a5f0
   140008684:	mov    QWORD PTR [rsp+0x28],rax
   140008689:	mov    rcx,QWORD PTR [rsp+0x28]
   14000868e:	call   QWORD PTR [rip+0x1de94]        # 0x140026528
   140008694:	lea    rcx,[rsp+0x38]
   140008699:	call   0x14000a520
   14000869e:	mov    rcx,rax
   1400086a1:	call   QWORD PTR [rip+0x1da29]        # 0x1400260d0
   1400086a7:	mov    DWORD PTR [rsp+0x24],eax
   1400086ab:	cmp    DWORD PTR [rsp+0x24],0xffffffff
   1400086b0:	je     0x1400086c2
   1400086b2:	mov    eax,DWORD PTR [rsp+0x24]
   1400086b6:	and    eax,0x10
   1400086b9:	test   eax,eax
   1400086bb:	je     0x1400086c2
   1400086bd:	mov    BYTE PTR [rsp+0x20],0x1
   1400086c2:	movzx  eax,BYTE PTR [rsp+0x20]
   1400086c7:	mov    BYTE PTR [rsp+0x21],al
   1400086cb:	lea    rcx,[rsp+0x38]
   1400086d0:	call   0x140009e60
   1400086d5:	movzx  eax,BYTE PTR [rsp+0x21]
   1400086da:	add    rsp,0x58
   1400086de:	ret    
   1400086df:	int3   
   1400086e0:	int3   
   1400086e1:	int3   
   1400086e2:	int3   
   1400086e3:	int3   
   1400086e4:	int3   
   1400086e5:	int3   
   1400086e6:	int3   
   1400086e7:	int3   
   1400086e8:	int3   
   1400086e9:	int3   
   1400086ea:	int3   
   1400086eb:	int3   
   1400086ec:	int3   
   1400086ed:	int3   
   1400086ee:	int3   
   1400086ef:	int3   
   1400086f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400086f5:	push   rdi
   1400086f6:	sub    rsp,0x280
   1400086fd:	mov    rax,QWORD PTR [rip+0x32b4c]        # 0x14003b250
   140008704:	xor    rax,rsp
   140008707:	mov    QWORD PTR [rsp+0x270],rax
   14000870f:	mov    DWORD PTR [rsp+0x38],0x0
   140008717:	mov    QWORD PTR [rsp+0x30],0x0
   140008720:	mov    DWORD PTR [rsp+0x40],0x18
   140008728:	mov    DWORD PTR [rsp+0x50],0x0
   140008730:	lea    rcx,[rsp+0x40]
   140008735:	call   0x140008840
   14000873a:	movzx  eax,al
   14000873d:	test   eax,eax
   14000873f:	je     0x14000874b
   140008741:	lea    rax,[rsp+0x40]
   140008746:	mov    QWORD PTR [rsp+0x30],rax
   14000874b:	xor    eax,eax
   14000874d:	mov    WORD PTR [rsp+0x60],ax
   140008752:	lea    rax,[rsp+0x62]
   140008757:	mov    rdi,rax
   14000875a:	xor    eax,eax
   14000875c:	mov    ecx,0x206
   140008761:	rep stos BYTE PTR es:[rdi],al
   140008763:	mov    rax,QWORD PTR [rsp+0x290]
   14000876b:	mov    QWORD PTR [rsp+0x20],rax
   140008770:	lea    rax,[rsp+0x60]
   140008775:	mov    QWORD PTR [rsp+0x28],rax
   14000877a:	mov    rax,QWORD PTR [rsp+0x20]
   14000877f:	movzx  eax,WORD PTR [rax]
   140008782:	test   eax,eax
   140008784:	je     0x1400087f6
   140008786:	mov    rax,QWORD PTR [rsp+0x20]
   14000878b:	movzx  eax,WORD PTR [rax]
   14000878e:	cmp    eax,0x5c
   140008791:	je     0x1400087a0
   140008793:	mov    rax,QWORD PTR [rsp+0x20]
   140008798:	movzx  eax,WORD PTR [rax]
   14000879b:	cmp    eax,0x2f
   14000879e:	jne    0x1400087be
   1400087a0:	mov    rax,QWORD PTR [rsp+0x20]
   1400087a5:	movzx  eax,WORD PTR [rax-0x2]
   1400087a9:	cmp    eax,0x3a
   1400087ac:	je     0x1400087be
   1400087ae:	mov    rdx,QWORD PTR [rsp+0x30]
   1400087b3:	lea    rcx,[rsp+0x60]
   1400087b8:	call   QWORD PTR [rip+0x1d8e2]        # 0x1400260a0
   1400087be:	mov    rax,QWORD PTR [rsp+0x28]
   1400087c3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400087c8:	movzx  ecx,WORD PTR [rcx]
   1400087cb:	mov    WORD PTR [rax],cx
   1400087ce:	mov    rax,QWORD PTR [rsp+0x28]
   1400087d3:	add    rax,0x2
   1400087d7:	mov    QWORD PTR [rsp+0x28],rax
   1400087dc:	mov    rax,QWORD PTR [rsp+0x20]
   1400087e1:	add    rax,0x2
   1400087e5:	mov    QWORD PTR [rsp+0x20],rax
   1400087ea:	xor    eax,eax
   1400087ec:	mov    rcx,QWORD PTR [rsp+0x28]
   1400087f1:	mov    WORD PTR [rcx],ax
   1400087f4:	jmp    0x14000877a
   1400087f6:	mov    rdx,QWORD PTR [rsp+0x30]
   1400087fb:	lea    rcx,[rsp+0x60]
   140008800:	call   QWORD PTR [rip+0x1d89a]        # 0x1400260a0
   140008806:	mov    rcx,QWORD PTR [rsp+0x30]
   14000880b:	call   0x1400088b0
   140008810:	mov    rcx,QWORD PTR [rsp+0x290]
   140008818:	call   0x140008640
   14000881d:	mov    rcx,QWORD PTR [rsp+0x270]
   140008825:	xor    rcx,rsp
   140008828:	call   0x140021890
   14000882d:	add    rsp,0x280
   140008834:	pop    rdi
   140008835:	ret    
   140008836:	int3   
   140008837:	int3   
   140008838:	int3   
   140008839:	int3   
   14000883a:	int3   
   14000883b:	int3   
   14000883c:	int3   
   14000883d:	int3   
   14000883e:	int3   
   14000883f:	int3   
   140008840:	mov    QWORD PTR [rsp+0x8],rcx
   140008845:	sub    rsp,0x38
   140008849:	mov    BYTE PTR [rsp+0x21],0x0
   14000884e:	lea    rax,[rip+0x228cb]        # 0x14002b120
   140008855:	mov    QWORD PTR [rsp+0x28],rax
   14000885a:	cmp    QWORD PTR [rsp+0x40],0x0
   140008860:	je     0x140008899
   140008862:	mov    rax,QWORD PTR [rsp+0x40]
   140008867:	add    rax,0x8
   14000886b:	xor    r9d,r9d
   14000886e:	mov    r8,rax
   140008871:	mov    edx,0x1
   140008876:	mov    rcx,QWORD PTR [rsp+0x28]
   14000887b:	call   0x140021da0
   140008880:	test   eax,eax
   140008882:	je     0x14000888b
   140008884:	mov    BYTE PTR [rsp+0x20],0x1
   140008889:	jmp    0x140008890
   14000888b:	mov    BYTE PTR [rsp+0x20],0x0
   140008890:	movzx  eax,BYTE PTR [rsp+0x20]
   140008895:	mov    BYTE PTR [rsp+0x21],al
   140008899:	movzx  eax,BYTE PTR [rsp+0x21]
   14000889e:	add    rsp,0x38
   1400088a2:	ret    
   1400088a3:	int3   
   1400088a4:	int3   
   1400088a5:	int3   
   1400088a6:	int3   
   1400088a7:	int3   
   1400088a8:	int3   
   1400088a9:	int3   
   1400088aa:	int3   
   1400088ab:	int3   
   1400088ac:	int3   
   1400088ad:	int3   
   1400088ae:	int3   
   1400088af:	int3   
   1400088b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400088b5:	sub    rsp,0x38
   1400088b9:	mov    QWORD PTR [rsp+0x28],0x0
   1400088c2:	cmp    QWORD PTR [rsp+0x40],0x0
   1400088c8:	je     0x1400088e6
   1400088ca:	cmp    QWORD PTR [rsp+0x40],0x0
   1400088d0:	je     0x1400088e6
   1400088d2:	mov    rax,QWORD PTR [rsp+0x40]
   1400088d7:	mov    rcx,QWORD PTR [rax+0x8]
   1400088db:	call   QWORD PTR [rip+0x1d81f]        # 0x140026100
   1400088e1:	mov    QWORD PTR [rsp+0x28],rax
   1400088e6:	cmp    QWORD PTR [rsp+0x28],0x0
   1400088ec:	jne    0x1400088f8
   1400088ee:	mov    DWORD PTR [rsp+0x20],0x1
   1400088f6:	jmp    0x140008900
   1400088f8:	mov    DWORD PTR [rsp+0x20],0x0
   140008900:	movzx  eax,BYTE PTR [rsp+0x20]
   140008905:	add    rsp,0x38
   140008909:	ret    
   14000890a:	int3   
   14000890b:	int3   
   14000890c:	int3   
   14000890d:	int3   
   14000890e:	int3   
   14000890f:	int3   
   140008910:	mov    QWORD PTR [rsp+0x8],rcx
   140008915:	sub    rsp,0x38
   140008919:	xor    edx,edx
   14000891b:	mov    rcx,QWORD PTR [rsp+0x40]
   140008920:	call   0x140008ac0
   140008925:	movzx  eax,al
   140008928:	test   eax,eax
   14000892a:	je     0x140008933
   14000892c:	mov    BYTE PTR [rsp+0x20],0x1
   140008931:	jmp    0x140008938
   140008933:	mov    BYTE PTR [rsp+0x20],0x0
   140008938:	movzx  eax,BYTE PTR [rsp+0x20]
   14000893d:	mov    BYTE PTR [rsp+0x21],al
   140008941:	movzx  eax,BYTE PTR [rsp+0x21]
   140008946:	add    rsp,0x38
   14000894a:	ret    
   14000894b:	int3   
   14000894c:	int3   
   14000894d:	int3   
   14000894e:	int3   
   14000894f:	int3   
   140008950:	int3   
   140008951:	int3   
   140008952:	int3   
   140008953:	int3   
   140008954:	int3   
   140008955:	int3   
   140008956:	int3   
   140008957:	int3   
   140008958:	int3   
   140008959:	int3   
   14000895a:	int3   
   14000895b:	int3   
   14000895c:	int3   
   14000895d:	int3   
   14000895e:	int3   
   14000895f:	int3   
   140008960:	mov    QWORD PTR [rsp+0x10],rdx
   140008965:	mov    QWORD PTR [rsp+0x8],rcx
   14000896a:	push   rdi
   14000896b:	sub    rsp,0x490
   140008972:	mov    rax,QWORD PTR [rip+0x328d7]        # 0x14003b250
   140008979:	xor    rax,rsp
   14000897c:	mov    QWORD PTR [rsp+0x480],rax
   140008984:	mov    BYTE PTR [rsp+0x20],0x0
   140008989:	mov    rcx,QWORD PTR [rsp+0x4a0]
   140008991:	call   0x1400086f0
   140008996:	mov    r8d,0x38
   14000899c:	xor    edx,edx
   14000899e:	lea    rcx,[rsp+0x28]
   1400089a3:	call   0x1400216e0
   1400089a8:	mov    DWORD PTR [rsp+0x30],0x2
   1400089b0:	mov    eax,0x414
   1400089b5:	mov    WORD PTR [rsp+0x48],ax
   1400089ba:	xor    eax,eax
   1400089bc:	mov    WORD PTR [rsp+0x60],ax
   1400089c1:	lea    rax,[rsp+0x62]
   1400089c6:	mov    rdi,rax
   1400089c9:	xor    eax,eax
   1400089cb:	mov    ecx,0x206
   1400089d0:	rep stos BYTE PTR es:[rdi],al
   1400089d2:	xor    eax,eax
   1400089d4:	mov    WORD PTR [rsp+0x270],ax
   1400089dc:	lea    rax,[rsp+0x272]
   1400089e4:	mov    rdi,rax
   1400089e7:	xor    eax,eax
   1400089e9:	mov    ecx,0x206
   1400089ee:	rep stos BYTE PTR es:[rdi],al
   1400089f0:	mov    r8,QWORD PTR [rsp+0x4a8]
   1400089f8:	mov    edx,0x104
   1400089fd:	lea    rcx,[rsp+0x60]
   140008a02:	call   QWORD PTR [rip+0x1d970]        # 0x140026378
   140008a08:	lea    rdx,[rip+0x22785]        # 0x14002b194
   140008a0f:	lea    rcx,[rsp+0x60]
   140008a14:	call   QWORD PTR [rip+0x1db2e]        # 0x140026548
   140008a1a:	mov    r8,QWORD PTR [rsp+0x4a0]
   140008a22:	mov    edx,0x104
   140008a27:	lea    rcx,[rsp+0x270]
   140008a2f:	call   QWORD PTR [rip+0x1d943]        # 0x140026378
   140008a35:	lea    rax,[rsp+0x60]
   140008a3a:	mov    QWORD PTR [rsp+0x38],rax
   140008a3f:	lea    rax,[rsp+0x270]
   140008a47:	mov    QWORD PTR [rsp+0x40],rax
   140008a4c:	lea    rcx,[rsp+0x28]
   140008a51:	call   QWORD PTR [rip+0x1daa9]        # 0x140026500
   140008a57:	mov    DWORD PTR [rsp+0x24],eax
   140008a5b:	cmp    DWORD PTR [rsp+0x24],0x0
   140008a60:	jne    0x140008a69
   140008a62:	mov    BYTE PTR [rsp+0x20],0x1
   140008a67:	jmp    0x140008a9a
   140008a69:	mov    rdx,QWORD PTR [rsp+0x4a8]
   140008a71:	mov    rcx,QWORD PTR [rsp+0x4a0]
   140008a79:	call   0x1400099f0
   140008a7e:	movzx  eax,al
   140008a81:	test   eax,eax
   140008a83:	je     0x140008a8c
   140008a85:	mov    BYTE PTR [rsp+0x21],0x1
   140008a8a:	jmp    0x140008a91
   140008a8c:	mov    BYTE PTR [rsp+0x21],0x0
   140008a91:	movzx  eax,BYTE PTR [rsp+0x21]
   140008a96:	mov    BYTE PTR [rsp+0x20],al
   140008a9a:	movzx  eax,BYTE PTR [rsp+0x20]
   140008a9f:	mov    rcx,QWORD PTR [rsp+0x480]
   140008aa7:	xor    rcx,rsp
   140008aaa:	call   0x140021890
   140008aaf:	add    rsp,0x490
   140008ab6:	pop    rdi
   140008ab7:	ret    
   140008ab8:	int3   
   140008ab9:	int3   
   140008aba:	int3   
   140008abb:	int3   
   140008abc:	int3   
   140008abd:	int3   
   140008abe:	int3   
   140008abf:	int3   
   140008ac0:	mov    BYTE PTR [rsp+0x10],dl
   140008ac4:	mov    QWORD PTR [rsp+0x8],rcx
   140008ac9:	sub    rsp,0x6b8
   140008ad0:	mov    rax,QWORD PTR [rip+0x32779]        # 0x14003b250
   140008ad7:	xor    rax,rsp
   140008ada:	mov    QWORD PTR [rsp+0x6a0],rax
   140008ae2:	mov    BYTE PTR [rsp+0x20],0x1
   140008ae7:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140008af0:	lea    r8,[rip+0x22691]        # 0x14002b188
   140008af7:	mov    rdx,QWORD PTR [rsp+0x6c0]
   140008aff:	lea    rcx,[rsp+0x490]
   140008b07:	call   QWORD PTR [rip+0x1da13]        # 0x140026520
   140008b0d:	lea    rdx,[rsp+0x30]
   140008b12:	lea    rcx,[rsp+0x490]
   140008b1a:	call   QWORD PTR [rip+0x1d5f0]        # 0x140026110
   140008b20:	mov    QWORD PTR [rsp+0x28],rax
   140008b25:	cmp    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140008b2b:	jne    0x140008b37
   140008b2d:	mov    BYTE PTR [rsp+0x20],0x0
   140008b32:	jmp    0x140008d63
   140008b37:	mov    r8,QWORD PTR [rsp+0x6c0]
   140008b3f:	mov    edx,0x104
   140008b44:	lea    rcx,[rsp+0x280]
   140008b4c:	call   QWORD PTR [rip+0x1d826]        # 0x140026378
   140008b52:	lea    rcx,[rsp+0x280]
   140008b5a:	call   QWORD PTR [rip+0x1d9c8]        # 0x140026528
   140008b60:	lea    r8,[rsp+0x280]
   140008b68:	mov    edx,0x104
   140008b6d:	lea    rcx,[rsp+0x490]
   140008b75:	call   QWORD PTR [rip+0x1d7fd]        # 0x140026378
   140008b7b:	mov    BYTE PTR [rsp+0x21],0x1
   140008b80:	movzx  eax,BYTE PTR [rsp+0x21]
   140008b85:	test   eax,eax
   140008b87:	je     0x140008d1c
   140008b8d:	lea    rdx,[rsp+0x30]
   140008b92:	mov    rcx,QWORD PTR [rsp+0x28]
   140008b97:	call   QWORD PTR [rip+0x1d5c3]        # 0x140026160
   140008b9d:	test   eax,eax
   140008b9f:	je     0x140008cf3
   140008ba5:	mov    eax,0x2
   140008baa:	imul   rax,rax,0x0
   140008bae:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140008bb3:	cmp    eax,0x2e
   140008bb6:	jne    0x140008bf1
   140008bb8:	mov    eax,0x2
   140008bbd:	imul   rax,rax,0x1
   140008bc1:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140008bc6:	test   eax,eax
   140008bc8:	je     0x140008bef
   140008bca:	mov    eax,0x2
   140008bcf:	imul   rax,rax,0x1
   140008bd3:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140008bd8:	cmp    eax,0x2e
   140008bdb:	jne    0x140008bf1
   140008bdd:	mov    eax,0x2
   140008be2:	imul   rax,rax,0x2
   140008be6:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140008beb:	test   eax,eax
   140008bed:	jne    0x140008bf1
   140008bef:	jmp    0x140008b80
   140008bf1:	lea    rdx,[rsp+0x5c]
   140008bf6:	lea    rcx,[rsp+0x280]
   140008bfe:	call   QWORD PTR [rip+0x1d944]        # 0x140026548
   140008c04:	mov    eax,DWORD PTR [rsp+0x30]
   140008c08:	and    eax,0x10
   140008c0b:	test   eax,eax
   140008c0d:	je     0x140008c6a
   140008c0f:	mov    dl,0x1
   140008c11:	lea    rcx,[rsp+0x280]
   140008c19:	call   0x140008ac0
   140008c1e:	movzx  eax,al
   140008c21:	test   eax,eax
   140008c23:	jne    0x140008c3c
   140008c25:	mov    rcx,QWORD PTR [rsp+0x28]
   140008c2a:	call   QWORD PTR [rip+0x1d488]        # 0x1400260b8
   140008c30:	mov    BYTE PTR [rsp+0x20],0x0
   140008c35:	jmp    0x140008d1c
   140008c3a:	jmp    0x140008c65
   140008c3c:	lea    rcx,[rsp+0x280]
   140008c44:	call   QWORD PTR [rip+0x1d49e]        # 0x1400260e8
   140008c4a:	lea    r8,[rsp+0x490]
   140008c52:	mov    edx,0x104
   140008c57:	lea    rcx,[rsp+0x280]
   140008c5f:	call   QWORD PTR [rip+0x1d713]        # 0x140026378
   140008c65:	jmp    0x140008cf1
   140008c6a:	mov    eax,DWORD PTR [rsp+0x30]
   140008c6e:	and    eax,0x1
   140008c71:	test   eax,eax
   140008c73:	je     0x140008cb0
   140008c75:	lea    rcx,[rsp+0x280]
   140008c7d:	call   QWORD PTR [rip+0x1d44d]        # 0x1400260d0
   140008c83:	mov    DWORD PTR [rsp+0x24],eax
   140008c87:	cmp    DWORD PTR [rsp+0x24],0xffffffff
   140008c8c:	je     0x140008cb0
   140008c8e:	mov    eax,DWORD PTR [rsp+0x24]
   140008c92:	and    eax,0x1
   140008c95:	test   eax,eax
   140008c97:	je     0x140008cb0
   140008c99:	mov    eax,DWORD PTR [rsp+0x24]
   140008c9d:	and    eax,0xfffffffe
   140008ca0:	mov    edx,eax
   140008ca2:	lea    rcx,[rsp+0x280]
   140008caa:	call   QWORD PTR [rip+0x1d440]        # 0x1400260f0
   140008cb0:	lea    rcx,[rsp+0x280]
   140008cb8:	call   QWORD PTR [rip+0x1d3f2]        # 0x1400260b0
   140008cbe:	test   eax,eax
   140008cc0:	jne    0x140008cd6
   140008cc2:	mov    rcx,QWORD PTR [rsp+0x28]
   140008cc7:	call   QWORD PTR [rip+0x1d3eb]        # 0x1400260b8
   140008ccd:	mov    BYTE PTR [rsp+0x20],0x0
   140008cd2:	jmp    0x140008d1c
   140008cd4:	jmp    0x140008cf1
   140008cd6:	lea    r8,[rsp+0x490]
   140008cde:	mov    edx,0x104
   140008ce3:	lea    rcx,[rsp+0x280]
   140008ceb:	call   QWORD PTR [rip+0x1d687]        # 0x140026378
   140008cf1:	jmp    0x140008d17
   140008cf3:	call   QWORD PTR [rip+0x1d45f]        # 0x140026158
   140008cf9:	cmp    eax,0x12
   140008cfc:	jne    0x140008d05
   140008cfe:	mov    BYTE PTR [rsp+0x21],0x0
   140008d03:	jmp    0x140008d17
   140008d05:	mov    rcx,QWORD PTR [rsp+0x28]
   140008d0a:	call   QWORD PTR [rip+0x1d3a8]        # 0x1400260b8
   140008d10:	mov    BYTE PTR [rsp+0x20],0x0
   140008d15:	jmp    0x140008d1c
   140008d17:	jmp    0x140008b80
   140008d1c:	mov    rcx,QWORD PTR [rsp+0x28]
   140008d21:	call   QWORD PTR [rip+0x1d391]        # 0x1400260b8
   140008d27:	movzx  eax,BYTE PTR [rsp+0x6c8]
   140008d2f:	test   eax,eax
   140008d31:	jne    0x140008d63
   140008d33:	movzx  eax,BYTE PTR [rsp+0x20]
   140008d38:	test   eax,eax
   140008d3a:	je     0x140008d63
   140008d3c:	mov    rcx,QWORD PTR [rsp+0x6c0]
   140008d44:	call   QWORD PTR [rip+0x1d39e]        # 0x1400260e8
   140008d4a:	test   eax,eax
   140008d4c:	je     0x140008d55
   140008d4e:	mov    BYTE PTR [rsp+0x22],0x1
   140008d53:	jmp    0x140008d5a
   140008d55:	mov    BYTE PTR [rsp+0x22],0x0
   140008d5a:	movzx  eax,BYTE PTR [rsp+0x22]
   140008d5f:	mov    BYTE PTR [rsp+0x20],al
   140008d63:	movzx  eax,BYTE PTR [rsp+0x20]
   140008d68:	mov    rcx,QWORD PTR [rsp+0x6a0]
   140008d70:	xor    rcx,rsp
   140008d73:	call   0x140021890
   140008d78:	add    rsp,0x6b8
   140008d7f:	ret    
   140008d80:	int3   
   140008d81:	int3   
   140008d82:	int3   
   140008d83:	int3   
   140008d84:	int3   
   140008d85:	int3   
   140008d86:	int3   
   140008d87:	int3   
   140008d88:	int3   
   140008d89:	int3   
   140008d8a:	int3   
   140008d8b:	int3   
   140008d8c:	int3   
   140008d8d:	int3   
   140008d8e:	int3   
   140008d8f:	int3   
   140008d90:	mov    QWORD PTR [rsp+0x20],r9
   140008d95:	mov    QWORD PTR [rsp+0x18],r8
   140008d9a:	mov    QWORD PTR [rsp+0x10],rdx
   140008d9f:	mov    QWORD PTR [rsp+0x8],rcx
   140008da4:	push   rbp
   140008da5:	push   rdi
   140008da6:	sub    rsp,0x1f8
   140008dad:	lea    rbp,[rsp+0x40]
   140008db2:	mov    QWORD PTR [rbp+0x80],0xfffffffffffffffe
   140008dbd:	mov    rax,QWORD PTR [rip+0x3248c]        # 0x14003b250
   140008dc4:	xor    rax,rbp
   140008dc7:	mov    QWORD PTR [rbp+0x1a0],rax
   140008dce:	mov    BYTE PTR [rbp+0x0],0x0
   140008dd2:	lea    rcx,[rbp+0x60]
   140008dd6:	call   0x140009e20
   140008ddb:	nop
   140008ddc:	mov    edx,0x104
   140008de1:	lea    rcx,[rbp+0x60]
   140008de5:	call   0x14000a5f0
   140008dea:	mov    r8,QWORD PTR [rbp+0x1d8]
   140008df1:	mov    rdx,QWORD PTR [rbp+0x1d0]
   140008df8:	mov    rcx,rax
   140008dfb:	call   QWORD PTR [rip+0x1d71f]        # 0x140026520
   140008e01:	mov    edx,0xffffffff
   140008e06:	lea    rcx,[rbp+0x60]
   140008e0a:	call   0x14000a6d0
   140008e0f:	lea    rcx,[rbp+0x60]
   140008e13:	call   0x14000a520
   140008e18:	mov    rcx,rax
   140008e1b:	call   0x1400085d0
   140008e20:	movzx  eax,al
   140008e23:	test   eax,eax
   140008e25:	je     0x140009070
   140008e2b:	mov    QWORD PTR [rbp+0x10],0xffffffffffffffff
   140008e33:	lea    rcx,[rbp+0x60]
   140008e37:	call   0x14000a520
   140008e3c:	mov    QWORD PTR [rsp+0x30],0x0
   140008e45:	mov    DWORD PTR [rsp+0x28],0x80
   140008e4d:	mov    DWORD PTR [rsp+0x20],0x3
   140008e55:	xor    r9d,r9d
   140008e58:	mov    r8d,0x1
   140008e5e:	mov    edx,0x80000000
   140008e63:	mov    rcx,rax
   140008e66:	call   QWORD PTR [rip+0x1d23c]        # 0x1400260a8
   140008e6c:	mov    QWORD PTR [rbp+0x10],rax
   140008e70:	cmp    QWORD PTR [rbp+0x10],0xffffffffffffffff
   140008e75:	je     0x140009070
   140008e7b:	mov    DWORD PTR [rbp+0x18],0x0
   140008e82:	mov    DWORD PTR [rbp+0x4],0x0
   140008e89:	lea    rdx,[rbp+0x18]
   140008e8d:	mov    rcx,QWORD PTR [rbp+0x10]
   140008e91:	call   QWORD PTR [rip+0x1d241]        # 0x1400260d8
   140008e97:	mov    DWORD PTR [rbp+0x4],eax
   140008e9a:	cmp    DWORD PTR [rbp+0x4],0x0
   140008e9e:	je     0x140009066
   140008ea4:	cmp    DWORD PTR [rbp+0x18],0x0
   140008ea8:	jne    0x140009066
   140008eae:	mov    eax,DWORD PTR [rbp+0x4]
   140008eb1:	mov    ecx,eax
   140008eb3:	call   0x140020f3e
   140008eb8:	mov    QWORD PTR [rbp+0x58],rax
   140008ebc:	mov    rax,QWORD PTR [rbp+0x1e0]
   140008ec3:	mov    rcx,QWORD PTR [rbp+0x58]
   140008ec7:	mov    QWORD PTR [rax],rcx
   140008eca:	mov    rax,QWORD PTR [rbp+0x1e0]
   140008ed1:	cmp    QWORD PTR [rax],0x0
   140008ed5:	je     0x140009066
   140008edb:	mov    eax,DWORD PTR [rbp+0x4]
   140008ede:	mov    DWORD PTR [rbp+0x8],eax
   140008ee1:	mov    QWORD PTR [rsp+0x20],0x0
   140008eea:	lea    r9,[rbp+0x8]
   140008eee:	mov    r8d,DWORD PTR [rbp+0x4]
   140008ef2:	mov    rax,QWORD PTR [rbp+0x1e0]
   140008ef9:	mov    rdx,QWORD PTR [rax]
   140008efc:	mov    rcx,QWORD PTR [rbp+0x10]
   140008f00:	call   QWORD PTR [rip+0x1d1da]        # 0x1400260e0
   140008f06:	test   eax,eax
   140008f08:	je     0x140009066
   140008f0e:	mov    eax,DWORD PTR [rbp+0x4]
   140008f11:	cmp    DWORD PTR [rbp+0x8],eax
   140008f14:	jne    0x140009066
   140008f1a:	call   0x140003460
   140008f1f:	mov    DWORD PTR [rbp+0x1c],eax
   140008f22:	mov    eax,DWORD PTR [rbp+0x8]
   140008f25:	mov    rcx,QWORD PTR [rbp+0x1e8]
   140008f2c:	mov    QWORD PTR [rcx],rax
   140008f2f:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140008f36:	call   QWORD PTR [rip+0x1d414]        # 0x140026350
   140008f3c:	add    rax,0x12
   140008f40:	mov    QWORD PTR [rbp+0x30],rax
   140008f44:	mov    BYTE PTR [rbp+0x90],0x0
   140008f4b:	lea    rax,[rbp+0x91]
   140008f52:	mov    rdi,rax
   140008f55:	xor    eax,eax
   140008f57:	mov    ecx,0x103
   140008f5c:	rep stos BYTE PTR es:[rdi],al
   140008f5e:	lea    r8,[rip+0x390ab]        # 0x140042010
   140008f65:	mov    rdx,QWORD PTR [rbp+0x30]
   140008f69:	lea    rcx,[rbp+0x90]
   140008f70:	call   QWORD PTR [rip+0x1d39a]        # 0x140026310
   140008f76:	mov    rax,QWORD PTR [rbp+0x1d8]
   140008f7d:	mov    QWORD PTR [rbp+0x20],rax
   140008f81:	cmp    QWORD PTR [rbp+0x20],0x0
   140008f86:	jne    0x140008f95
   140008f88:	mov    QWORD PTR [rbp+0x38],0x0
   140008f90:	jmp    0x140009016
   140008f95:	mov    rcx,QWORD PTR [rbp+0x20]
   140008f99:	call   QWORD PTR [rip+0x1d3b1]        # 0x140026350
   140008f9f:	inc    eax
   140008fa1:	mov    DWORD PTR [rbp+0xc],eax
   140008fa4:	cmp    DWORD PTR [rbp+0xc],0x3fffffff
   140008fab:	jle    0x140008fb7
   140008fad:	mov    QWORD PTR [rbp+0x28],0x0
   140008fb5:	jmp    0x14000900e
   140008fb7:	movsxd rax,DWORD PTR [rbp+0xc]
   140008fbb:	shl    rax,1
   140008fbe:	mov    QWORD PTR [rbp+0x48],rax
   140008fc2:	movsxd rcx,DWORD PTR [rbp+0xc]
   140008fc6:	shl    rcx,1
   140008fc9:	mov    rdx,rcx
   140008fcc:	add    rdx,0xf
   140008fd0:	cmp    rdx,rcx
   140008fd3:	ja     0x140008fdf
   140008fd5:	movabs rdx,0xffffffffffffff0
   140008fdf:	and    rdx,0xfffffffffffffff0
   140008fe3:	mov    rax,rdx
   140008fe6:	call   0x1400218e0
   140008feb:	sub    rsp,rax
   140008fee:	lea    rax,[rsp+0x40]
   140008ff3:	mov    r9d,DWORD PTR [rbp+0x1c]
   140008ff7:	mov    rcx,QWORD PTR [rbp+0x48]
   140008ffb:	mov    r8d,ecx
   140008ffe:	mov    rdx,QWORD PTR [rbp+0x20]
   140009002:	mov    rcx,rax
   140009005:	call   0x140009d20
   14000900a:	mov    QWORD PTR [rbp+0x28],rax
   14000900e:	mov    rax,QWORD PTR [rbp+0x28]
   140009012:	mov    QWORD PTR [rbp+0x38],rax
   140009016:	mov    r8,QWORD PTR [rbp+0x38]
   14000901a:	mov    rdx,QWORD PTR [rbp+0x30]
   14000901e:	lea    rcx,[rbp+0x90]
   140009025:	call   QWORD PTR [rip+0x1d2dd]        # 0x140026308
   14000902b:	lea    rax,[rbp+0x90]
   140009032:	mov    QWORD PTR [rbp+0x40],rax
   140009036:	mov    eax,DWORD PTR [rbp+0x8]
   140009039:	mov    QWORD PTR [rbp+0x78],rax
   14000903d:	mov    rcx,QWORD PTR [rbp+0x40]
   140009041:	call   0x1400218bc
   140009046:	mov    rcx,QWORD PTR [rbp+0x78]
   14000904a:	mov    r9,rcx
   14000904d:	mov    rcx,QWORD PTR [rbp+0x1e0]
   140009054:	mov    r8,QWORD PTR [rcx]
   140009057:	mov    rdx,rax
   14000905a:	mov    rcx,QWORD PTR [rbp+0x40]
   14000905e:	call   0x14000b930
   140009063:	mov    BYTE PTR [rbp+0x0],al
   140009066:	mov    rcx,QWORD PTR [rbp+0x10]
   14000906a:	call   QWORD PTR [rip+0x1d058]        # 0x1400260c8
   140009070:	movzx  eax,BYTE PTR [rbp+0x0]
   140009074:	test   eax,eax
   140009076:	jne    0x14000909d
   140009078:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000907f:	mov    rax,QWORD PTR [rax]
   140009082:	mov    QWORD PTR [rbp+0x50],rax
   140009086:	mov    rcx,QWORD PTR [rbp+0x50]
   14000908a:	call   0x140020b96
   14000908f:	mov    rax,QWORD PTR [rbp+0x1e0]
   140009096:	mov    QWORD PTR [rax],0x0
   14000909d:	movzx  eax,BYTE PTR [rbp+0x0]
   1400090a1:	mov    BYTE PTR [rbp+0x1],al
   1400090a4:	lea    rcx,[rbp+0x60]
   1400090a8:	call   0x140009e60
   1400090ad:	movzx  eax,BYTE PTR [rbp+0x1]
   1400090b1:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400090b8:	xor    rcx,rbp
   1400090bb:	call   0x140021890
   1400090c0:	lea    rsp,[rbp+0x1b8]
   1400090c7:	pop    rdi
   1400090c8:	pop    rbp
   1400090c9:	ret    
   1400090ca:	int3   
   1400090cb:	int3   
   1400090cc:	int3   
   1400090cd:	int3   
   1400090ce:	int3   
   1400090cf:	int3   
   1400090d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400090d5:	sub    rsp,0x38
   1400090d9:	mov    rax,QWORD PTR [rsp+0x40]
   1400090de:	cmp    QWORD PTR [rax],0x0
   1400090e2:	je     0x140009107
   1400090e4:	mov    rax,QWORD PTR [rsp+0x40]
   1400090e9:	mov    rax,QWORD PTR [rax]
   1400090ec:	mov    QWORD PTR [rsp+0x20],rax
   1400090f1:	mov    rcx,QWORD PTR [rsp+0x20]
   1400090f6:	call   0x140020b96
   1400090fb:	mov    rax,QWORD PTR [rsp+0x40]
   140009100:	mov    QWORD PTR [rax],0x0
   140009107:	mov    al,0x1
   140009109:	add    rsp,0x38
   14000910d:	ret    
   14000910e:	int3   
   14000910f:	int3   
   140009110:	int3   
   140009111:	int3   
   140009112:	int3   
   140009113:	int3   
   140009114:	int3   
   140009115:	int3   
   140009116:	int3   
   140009117:	int3   
   140009118:	int3   
   140009119:	int3   
   14000911a:	int3   
   14000911b:	int3   
   14000911c:	int3   
   14000911d:	int3   
   14000911e:	int3   
   14000911f:	int3   
   140009120:	mov    QWORD PTR [rsp+0x20],r9
   140009125:	mov    QWORD PTR [rsp+0x18],r8
   14000912a:	mov    QWORD PTR [rsp+0x10],rdx
   14000912f:	mov    QWORD PTR [rsp+0x8],rcx
   140009134:	push   rbp
   140009135:	push   rdi
   140009136:	sub    rsp,0x1f8
   14000913d:	lea    rbp,[rsp+0x40]
   140009142:	mov    QWORD PTR [rbp+0x88],0xfffffffffffffffe
   14000914d:	mov    rax,QWORD PTR [rip+0x320fc]        # 0x14003b250
   140009154:	xor    rax,rbp
   140009157:	mov    QWORD PTR [rbp+0x1a0],rax
   14000915e:	mov    BYTE PTR [rbp+0x0],0x0
   140009162:	call   0x140003460
   140009167:	mov    DWORD PTR [rbp+0x20],eax
   14000916a:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140009171:	call   QWORD PTR [rip+0x1d1d9]        # 0x140026350
   140009177:	add    rax,0x12
   14000917b:	mov    QWORD PTR [rbp+0x38],rax
   14000917f:	mov    BYTE PTR [rbp+0x90],0x0
   140009186:	lea    rax,[rbp+0x91]
   14000918d:	mov    rdi,rax
   140009190:	xor    eax,eax
   140009192:	mov    ecx,0x103
   140009197:	rep stos BYTE PTR es:[rdi],al
   140009199:	lea    r8,[rip+0x38e70]        # 0x140042010
   1400091a0:	mov    rdx,QWORD PTR [rbp+0x38]
   1400091a4:	lea    rcx,[rbp+0x90]
   1400091ab:	call   QWORD PTR [rip+0x1d15f]        # 0x140026310
   1400091b1:	mov    rax,QWORD PTR [rbp+0x1d8]
   1400091b8:	mov    QWORD PTR [rbp+0x10],rax
   1400091bc:	cmp    QWORD PTR [rbp+0x10],0x0
   1400091c1:	jne    0x1400091d0
   1400091c3:	mov    QWORD PTR [rbp+0x40],0x0
   1400091cb:	jmp    0x140009251
   1400091d0:	mov    rcx,QWORD PTR [rbp+0x10]
   1400091d4:	call   QWORD PTR [rip+0x1d176]        # 0x140026350
   1400091da:	inc    eax
   1400091dc:	mov    DWORD PTR [rbp+0x4],eax
   1400091df:	cmp    DWORD PTR [rbp+0x4],0x3fffffff
   1400091e6:	jle    0x1400091f2
   1400091e8:	mov    QWORD PTR [rbp+0x30],0x0
   1400091f0:	jmp    0x140009249
   1400091f2:	movsxd rax,DWORD PTR [rbp+0x4]
   1400091f6:	shl    rax,1
   1400091f9:	mov    QWORD PTR [rbp+0x50],rax
   1400091fd:	movsxd rcx,DWORD PTR [rbp+0x4]
   140009201:	shl    rcx,1
   140009204:	mov    rdx,rcx
   140009207:	add    rdx,0xf
   14000920b:	cmp    rdx,rcx
   14000920e:	ja     0x14000921a
   140009210:	movabs rdx,0xffffffffffffff0
   14000921a:	and    rdx,0xfffffffffffffff0
   14000921e:	mov    rax,rdx
   140009221:	call   0x1400218e0
   140009226:	sub    rsp,rax
   140009229:	lea    rax,[rsp+0x40]
   14000922e:	mov    r9d,DWORD PTR [rbp+0x20]
   140009232:	mov    rcx,QWORD PTR [rbp+0x50]
   140009236:	mov    r8d,ecx
   140009239:	mov    rdx,QWORD PTR [rbp+0x10]
   14000923d:	mov    rcx,rax
   140009240:	call   0x140009d20
   140009245:	mov    QWORD PTR [rbp+0x30],rax
   140009249:	mov    rax,QWORD PTR [rbp+0x30]
   14000924d:	mov    QWORD PTR [rbp+0x40],rax
   140009251:	mov    r8,QWORD PTR [rbp+0x40]
   140009255:	mov    rdx,QWORD PTR [rbp+0x38]
   140009259:	lea    rcx,[rbp+0x90]
   140009260:	call   QWORD PTR [rip+0x1d0a2]        # 0x140026308
   140009266:	lea    rax,[rbp+0x90]
   14000926d:	mov    QWORD PTR [rbp+0x48],rax
   140009271:	mov    rcx,QWORD PTR [rbp+0x48]
   140009275:	call   0x1400218bc
   14000927a:	mov    r9,QWORD PTR [rbp+0x1e8]
   140009281:	mov    rcx,QWORD PTR [rbp+0x1e0]
   140009288:	mov    r8,QWORD PTR [rcx]
   14000928b:	mov    rdx,rax
   14000928e:	mov    rcx,QWORD PTR [rbp+0x48]
   140009292:	call   0x14000b8c0
   140009297:	mov    BYTE PTR [rbp+0x0],al
   14000929a:	movzx  eax,BYTE PTR [rbp+0x0]
   14000929e:	test   eax,eax
   1400092a0:	je     0x1400093c1
   1400092a6:	mov    BYTE PTR [rbp+0x0],0x0
   1400092aa:	lea    rcx,[rbp+0x70]
   1400092ae:	call   0x140009e20
   1400092b3:	nop
   1400092b4:	mov    edx,0x104
   1400092b9:	lea    rcx,[rbp+0x70]
   1400092bd:	call   0x14000a5f0
   1400092c2:	mov    r8,QWORD PTR [rbp+0x1d8]
   1400092c9:	mov    rdx,QWORD PTR [rbp+0x1d0]
   1400092d0:	mov    rcx,rax
   1400092d3:	call   QWORD PTR [rip+0x1d247]        # 0x140026520
   1400092d9:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400092e0:	call   0x140008640
   1400092e5:	movzx  eax,al
   1400092e8:	test   eax,eax
   1400092ea:	jne    0x1400092f8
   1400092ec:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400092f3:	call   0x1400086f0
   1400092f8:	mov    QWORD PTR [rbp+0x28],0x0
   140009300:	mov    DWORD PTR [rbp+0x58],0x18
   140009307:	mov    DWORD PTR [rbp+0x68],0x0
   14000930e:	lea    rcx,[rbp+0x58]
   140009312:	call   0x140008840
   140009317:	movzx  eax,al
   14000931a:	test   eax,eax
   14000931c:	je     0x140009326
   14000931e:	lea    rax,[rbp+0x58]
   140009322:	mov    QWORD PTR [rbp+0x28],rax
   140009326:	lea    rcx,[rbp+0x70]
   14000932a:	call   0x14000a520
   14000932f:	mov    QWORD PTR [rsp+0x30],0x0
   140009338:	mov    DWORD PTR [rsp+0x28],0x22
   140009340:	mov    DWORD PTR [rsp+0x20],0x2
   140009348:	mov    r9,QWORD PTR [rbp+0x28]
   14000934c:	xor    r8d,r8d
   14000934f:	mov    edx,0x40000000
   140009354:	mov    rcx,rax
   140009357:	call   QWORD PTR [rip+0x1cd4b]        # 0x1400260a8
   14000935d:	mov    QWORD PTR [rbp+0x18],rax
   140009361:	cmp    QWORD PTR [rbp+0x18],0xffffffffffffffff
   140009366:	je     0x1400093ae
   140009368:	mov    QWORD PTR [rsp+0x20],0x0
   140009371:	lea    r9,[rbp+0x8]
   140009375:	mov    r8d,DWORD PTR [rbp+0x1e8]
   14000937c:	mov    rax,QWORD PTR [rbp+0x1e0]
   140009383:	mov    rdx,QWORD PTR [rax]
   140009386:	mov    rcx,QWORD PTR [rbp+0x18]
   14000938a:	call   QWORD PTR [rip+0x1cdd8]        # 0x140026168
   140009390:	test   eax,eax
   140009392:	je     0x1400093a4
   140009394:	mov    eax,DWORD PTR [rbp+0x8]
   140009397:	cmp    QWORD PTR [rbp+0x1e8],rax
   14000939e:	jne    0x1400093a4
   1400093a0:	mov    BYTE PTR [rbp+0x0],0x1
   1400093a4:	mov    rcx,QWORD PTR [rbp+0x18]
   1400093a8:	call   QWORD PTR [rip+0x1cd1a]        # 0x1400260c8
   1400093ae:	mov    rcx,QWORD PTR [rbp+0x28]
   1400093b2:	call   0x1400088b0
   1400093b7:	nop
   1400093b8:	lea    rcx,[rbp+0x70]
   1400093bc:	call   0x140009e60
   1400093c1:	movzx  eax,BYTE PTR [rbp+0x0]
   1400093c5:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400093cc:	xor    rcx,rbp
   1400093cf:	call   0x140021890
   1400093d4:	lea    rsp,[rbp+0x1b8]
   1400093db:	pop    rdi
   1400093dc:	pop    rbp
   1400093dd:	ret    
   1400093de:	int3   
   1400093df:	int3   
   1400093e0:	int3   
   1400093e1:	int3   
   1400093e2:	int3   
   1400093e3:	int3   
   1400093e4:	int3   
   1400093e5:	int3   
   1400093e6:	int3   
   1400093e7:	int3   
   1400093e8:	int3   
   1400093e9:	int3   
   1400093ea:	int3   
   1400093eb:	int3   
   1400093ec:	int3   
   1400093ed:	int3   
   1400093ee:	int3   
   1400093ef:	int3   
   1400093f0:	mov    QWORD PTR [rsp+0x20],r9
   1400093f5:	mov    QWORD PTR [rsp+0x18],r8
   1400093fa:	mov    QWORD PTR [rsp+0x10],rdx
   1400093ff:	mov    QWORD PTR [rsp+0x8],rcx
   140009404:	sub    rsp,0x58
   140009408:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140009411:	mov    BYTE PTR [rsp+0x20],0x1
   140009416:	lea    rcx,[rsp+0x38]
   14000941b:	call   0x140009e20
   140009420:	nop
   140009421:	mov    edx,0x104
   140009426:	lea    rcx,[rsp+0x38]
   14000942b:	call   0x14000a5f0
   140009430:	mov    QWORD PTR [rsp+0x28],rax
   140009435:	mov    rcx,QWORD PTR [rsp+0x28]
   14000943a:	call   0x14000c440
   14000943f:	lea    rdx,[rip+0x21d52]        # 0x14002b198
   140009446:	mov    rcx,QWORD PTR [rsp+0x28]
   14000944b:	call   QWORD PTR [rip+0x1d0f7]        # 0x140026548
   140009451:	mov    rdx,QWORD PTR [rsp+0x60]
   140009456:	mov    rcx,QWORD PTR [rsp+0x28]
   14000945b:	call   QWORD PTR [rip+0x1d0e7]        # 0x140026548
   140009461:	mov    rdx,QWORD PTR [rsp+0x68]
   140009466:	mov    rcx,QWORD PTR [rsp+0x28]
   14000946b:	call   QWORD PTR [rip+0x1d0d7]        # 0x140026548
   140009471:	mov    edx,0xffffffff
   140009476:	lea    rcx,[rsp+0x38]
   14000947b:	call   0x14000a6d0
   140009480:	cmp    QWORD PTR [rsp+0x70],0x0
   140009486:	je     0x1400094c5
   140009488:	lea    rcx,[rsp+0x38]
   14000948d:	call   0x14000a540
   140009492:	mov    rcx,QWORD PTR [rsp+0x78]
   140009497:	cmp    DWORD PTR [rcx],eax
   140009499:	jle    0x1400094c0
   14000949b:	lea    rcx,[rsp+0x38]
   1400094a0:	call   0x14000a520
   1400094a5:	mov    rcx,QWORD PTR [rsp+0x78]
   1400094aa:	movsxd rcx,DWORD PTR [rcx]
   1400094ad:	mov    r8,rax
   1400094b0:	mov    rdx,rcx
   1400094b3:	mov    rcx,QWORD PTR [rsp+0x70]
   1400094b8:	call   QWORD PTR [rip+0x1ceba]        # 0x140026378
   1400094be:	jmp    0x1400094c5
   1400094c0:	mov    BYTE PTR [rsp+0x20],0x0
   1400094c5:	lea    rcx,[rsp+0x38]
   1400094ca:	call   0x14000a540
   1400094cf:	mov    rcx,QWORD PTR [rsp+0x78]
   1400094d4:	mov    DWORD PTR [rcx],eax
   1400094d6:	movzx  eax,BYTE PTR [rsp+0x20]
   1400094db:	mov    BYTE PTR [rsp+0x21],al
   1400094df:	lea    rcx,[rsp+0x38]
   1400094e4:	call   0x140009e60
   1400094e9:	movzx  eax,BYTE PTR [rsp+0x21]
   1400094ee:	add    rsp,0x58
   1400094f2:	ret    
   1400094f3:	int3   
   1400094f4:	int3   
   1400094f5:	int3   
   1400094f6:	int3   
   1400094f7:	int3   
   1400094f8:	int3   
   1400094f9:	int3   
   1400094fa:	int3   
   1400094fb:	int3   
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	mov    QWORD PTR [rsp+0x18],r8
   140009505:	mov    QWORD PTR [rsp+0x10],rdx
   14000950a:	mov    QWORD PTR [rsp+0x8],rcx
   14000950f:	push   rbp
   140009510:	push   rdi
   140009511:	sub    rsp,0xb8
   140009518:	lea    rbp,[rsp+0x20]
   14000951d:	mov    QWORD PTR [rbp+0x58],0xfffffffffffffffe
   140009525:	mov    rax,QWORD PTR [rip+0x31d24]        # 0x14003b250
   14000952c:	xor    rax,rbp
   14000952f:	mov    QWORD PTR [rbp+0x88],rax
   140009536:	mov    BYTE PTR [rbp+0x0],0x1
   14000953a:	call   0x140003460
   14000953f:	mov    DWORD PTR [rbp+0xc],eax
   140009542:	lea    rcx,[rbp+0x38]
   140009546:	call   0x140009e20
   14000954b:	nop
   14000954c:	mov    BYTE PTR [rbp+0x78],0x0
   140009550:	lea    rax,[rbp+0x79]
   140009554:	mov    rdi,rax
   140009557:	xor    eax,eax
   140009559:	mov    ecx,0xf
   14000955e:	rep stos BYTE PTR es:[rdi],al
   140009560:	mov    rax,QWORD PTR [rbp+0xb0]
   140009567:	mov    QWORD PTR [rbp+0x10],rax
   14000956b:	cmp    QWORD PTR [rbp+0x10],0x0
   140009570:	jne    0x14000957f
   140009572:	mov    QWORD PTR [rbp+0x18],0x0
   14000957a:	jmp    0x140009600
   14000957f:	mov    rcx,QWORD PTR [rbp+0x10]
   140009583:	call   QWORD PTR [rip+0x1cdc7]        # 0x140026350
   140009589:	inc    eax
   14000958b:	mov    DWORD PTR [rbp+0x8],eax
   14000958e:	cmp    DWORD PTR [rbp+0x8],0x3fffffff
   140009595:	jle    0x1400095a1
   140009597:	mov    QWORD PTR [rbp+0x20],0x0
   14000959f:	jmp    0x1400095f8
   1400095a1:	movsxd rax,DWORD PTR [rbp+0x8]
   1400095a5:	shl    rax,1
   1400095a8:	mov    QWORD PTR [rbp+0x30],rax
   1400095ac:	movsxd rcx,DWORD PTR [rbp+0x8]
   1400095b0:	shl    rcx,1
   1400095b3:	mov    rdx,rcx
   1400095b6:	add    rdx,0xf
   1400095ba:	cmp    rdx,rcx
   1400095bd:	ja     0x1400095c9
   1400095bf:	movabs rdx,0xffffffffffffff0
   1400095c9:	and    rdx,0xfffffffffffffff0
   1400095cd:	mov    rax,rdx
   1400095d0:	call   0x1400218e0
   1400095d5:	sub    rsp,rax
   1400095d8:	lea    rax,[rsp+0x20]
   1400095dd:	mov    r9d,DWORD PTR [rbp+0xc]
   1400095e1:	mov    rcx,QWORD PTR [rbp+0x30]
   1400095e5:	mov    r8d,ecx
   1400095e8:	mov    rdx,QWORD PTR [rbp+0x10]
   1400095ec:	mov    rcx,rax
   1400095ef:	call   0x140009d20
   1400095f4:	mov    QWORD PTR [rbp+0x20],rax
   1400095f8:	mov    rax,QWORD PTR [rbp+0x20]
   1400095fc:	mov    QWORD PTR [rbp+0x18],rax
   140009600:	mov    rcx,QWORD PTR [rbp+0xb0]
   140009607:	call   QWORD PTR [rip+0x1cd43]        # 0x140026350
   14000960d:	lea    r8,[rbp+0x78]
   140009611:	mov    rdx,rax
   140009614:	mov    rcx,QWORD PTR [rbp+0x18]
   140009618:	call   0x140014b70
   14000961d:	mov    DWORD PTR [rbp+0x4],0x0
   140009624:	jmp    0x14000962e
   140009626:	mov    eax,DWORD PTR [rbp+0x4]
   140009629:	inc    eax
   14000962b:	mov    DWORD PTR [rbp+0x4],eax
   14000962e:	cmp    DWORD PTR [rbp+0x4],0x8
   140009632:	jge    0x140009657
   140009634:	movsxd rax,DWORD PTR [rbp+0x4]
   140009638:	mov    ecx,DWORD PTR [rbp+0x4]
   14000963b:	add    ecx,0x8
   14000963e:	movsxd rcx,ecx
   140009641:	movzx  ecx,BYTE PTR [rbp+rcx*1+0x78]
   140009646:	movzx  eax,BYTE PTR [rbp+rax*1+0x78]
   14000964b:	add    eax,ecx
   14000964d:	movsxd rcx,DWORD PTR [rbp+0x4]
   140009651:	mov    BYTE PTR [rbp+rcx*1+0x78],al
   140009655:	jmp    0x140009626
   140009657:	mov    r8d,0x8
   14000965d:	lea    rdx,[rbp+0x78]
   140009661:	lea    rcx,[rbp+0x60]
   140009665:	call   0x14000d660
   14000966a:	mov    QWORD PTR [rbp+0x50],rax
   14000966e:	mov    rax,QWORD PTR [rbp+0x50]
   140009672:	mov    QWORD PTR [rbp+0x28],rax
   140009676:	mov    rdx,QWORD PTR [rbp+0x28]
   14000967a:	lea    rcx,[rbp+0x38]
   14000967e:	call   0x14000a260
   140009683:	nop
   140009684:	lea    rcx,[rbp+0x60]
   140009688:	call   0x140009e60
   14000968d:	cmp    QWORD PTR [rbp+0xb8],0x0
   140009695:	je     0x1400096d7
   140009697:	lea    rcx,[rbp+0x38]
   14000969b:	call   0x14000a540
   1400096a0:	mov    rcx,QWORD PTR [rbp+0xc0]
   1400096a7:	cmp    DWORD PTR [rcx],eax
   1400096a9:	jle    0x1400096d3
   1400096ab:	lea    rcx,[rbp+0x38]
   1400096af:	call   0x14000a520
   1400096b4:	mov    rcx,QWORD PTR [rbp+0xc0]
   1400096bb:	movsxd rcx,DWORD PTR [rcx]
   1400096be:	mov    r8,rax
   1400096c1:	mov    rdx,rcx
   1400096c4:	mov    rcx,QWORD PTR [rbp+0xb8]
   1400096cb:	call   QWORD PTR [rip+0x1cca7]        # 0x140026378
   1400096d1:	jmp    0x1400096d7
   1400096d3:	mov    BYTE PTR [rbp+0x0],0x0
   1400096d7:	lea    rcx,[rbp+0x38]
   1400096db:	call   0x14000a540
   1400096e0:	mov    rcx,QWORD PTR [rbp+0xc0]
   1400096e7:	mov    DWORD PTR [rcx],eax
   1400096e9:	movzx  eax,BYTE PTR [rbp+0x0]
   1400096ed:	mov    BYTE PTR [rbp+0x1],al
   1400096f0:	lea    rcx,[rbp+0x38]
   1400096f4:	call   0x140009e60
   1400096f9:	movzx  eax,BYTE PTR [rbp+0x1]
   1400096fd:	mov    rcx,QWORD PTR [rbp+0x88]
   140009704:	xor    rcx,rbp
   140009707:	call   0x140021890
   14000970c:	lea    rsp,[rbp+0x98]
   140009713:	pop    rdi
   140009714:	pop    rbp
   140009715:	ret    
   140009716:	int3   
   140009717:	int3   
   140009718:	int3   
   140009719:	int3   
   14000971a:	int3   
   14000971b:	int3   
   14000971c:	int3   
   14000971d:	int3   
   14000971e:	int3   
   14000971f:	int3   
   140009720:	mov    QWORD PTR [rsp+0x10],rdx
   140009725:	mov    QWORD PTR [rsp+0x8],rcx
   14000972a:	sub    rsp,0x38
   14000972e:	mov    r9,QWORD PTR [rsp+0x48]
   140009733:	lea    r8,[rip+0x21a76]        # 0x14002b1b0
   14000973a:	mov    rdx,QWORD PTR [rsp+0x40]
   14000973f:	mov    rcx,0xffffffff80000001
   140009746:	call   0x14000cac0
   14000974b:	test   eax,eax
   14000974d:	je     0x140009756
   14000974f:	mov    BYTE PTR [rsp+0x20],0x1
   140009754:	jmp    0x14000975b
   140009756:	mov    BYTE PTR [rsp+0x20],0x0
   14000975b:	movzx  eax,BYTE PTR [rsp+0x20]
   140009760:	add    rsp,0x38
   140009764:	ret    
   140009765:	int3   
   140009766:	int3   
   140009767:	int3   
   140009768:	int3   
   140009769:	int3   
   14000976a:	int3   
   14000976b:	int3   
   14000976c:	int3   
   14000976d:	int3   
   14000976e:	int3   
   14000976f:	int3   
   140009770:	mov    QWORD PTR [rsp+0x18],r8
   140009775:	mov    QWORD PTR [rsp+0x10],rdx
   14000977a:	mov    QWORD PTR [rsp+0x8],rcx
   14000977f:	sub    rsp,0x58
   140009783:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000978c:	mov    BYTE PTR [rsp+0x20],0x0
   140009791:	lea    r9,[rip+0x21a28]        # 0x14002b1c0
   140009798:	mov    r8,QWORD PTR [rsp+0x60]
   14000979d:	mov    rdx,0xffffffff80000001
   1400097a4:	lea    rcx,[rsp+0x30]
   1400097a9:	call   0x14000c9c0
   1400097ae:	nop
   1400097af:	lea    rcx,[rsp+0x30]
   1400097b4:	call   0x14000ad20
   1400097b9:	test   eax,eax
   1400097bb:	jne    0x14000981a
   1400097bd:	lea    rcx,[rsp+0x30]
   1400097c2:	call   0x14000a540
   1400097c7:	mov    DWORD PTR [rsp+0x24],eax
   1400097cb:	cmp    QWORD PTR [rsp+0x68],0x0
   1400097d1:	je     0x14000980a
   1400097d3:	mov    rax,QWORD PTR [rsp+0x70]
   1400097d8:	mov    ecx,DWORD PTR [rsp+0x24]
   1400097dc:	cmp    DWORD PTR [rax],ecx
   1400097de:	jle    0x140009808
   1400097e0:	lea    rcx,[rsp+0x30]
   1400097e5:	call   0x14000a520
   1400097ea:	mov    rcx,QWORD PTR [rsp+0x70]
   1400097ef:	movsxd rcx,DWORD PTR [rcx]
   1400097f2:	mov    r8,rax
   1400097f5:	mov    rdx,rcx
   1400097f8:	mov    rcx,QWORD PTR [rsp+0x68]
   1400097fd:	call   QWORD PTR [rip+0x1cb75]        # 0x140026378
   140009803:	mov    BYTE PTR [rsp+0x20],0x1
   140009808:	jmp    0x14000980f
   14000980a:	mov    BYTE PTR [rsp+0x20],0x1
   14000980f:	mov    rax,QWORD PTR [rsp+0x70]
   140009814:	mov    ecx,DWORD PTR [rsp+0x24]
   140009818:	mov    DWORD PTR [rax],ecx
   14000981a:	movzx  eax,BYTE PTR [rsp+0x20]
   14000981f:	mov    BYTE PTR [rsp+0x21],al
   140009823:	lea    rcx,[rsp+0x30]
   140009828:	call   0x140009e60
   14000982d:	movzx  eax,BYTE PTR [rsp+0x21]
   140009832:	add    rsp,0x58
   140009836:	ret    
   140009837:	int3   
   140009838:	int3   
   140009839:	int3   
   14000983a:	int3   
   14000983b:	int3   
   14000983c:	int3   
   14000983d:	int3   
   14000983e:	int3   
   14000983f:	int3   
   140009840:	mov    QWORD PTR [rsp+0x8],rcx
   140009845:	sub    rsp,0x38
   140009849:	lea    r9,[rip+0x21980]        # 0x14002b1d0
   140009850:	lea    r8,[rip+0x21989]        # 0x14002b1e0
   140009857:	mov    rdx,QWORD PTR [rsp+0x40]
   14000985c:	mov    rcx,0xffffffff80000001
   140009863:	call   0x14000cac0
   140009868:	test   eax,eax
   14000986a:	je     0x140009873
   14000986c:	mov    BYTE PTR [rsp+0x20],0x1
   140009871:	jmp    0x140009878
   140009873:	mov    BYTE PTR [rsp+0x20],0x0
   140009878:	movzx  eax,BYTE PTR [rsp+0x20]
   14000987d:	add    rsp,0x38
   140009881:	ret    
   140009882:	int3   
   140009883:	int3   
   140009884:	int3   
   140009885:	int3   
   140009886:	int3   
   140009887:	int3   
   140009888:	int3   
   140009889:	int3   
   14000988a:	int3   
   14000988b:	int3   
   14000988c:	int3   
   14000988d:	int3   
   14000988e:	int3   
   14000988f:	int3   
   140009890:	mov    QWORD PTR [rsp+0x10],rdx
   140009895:	mov    QWORD PTR [rsp+0x8],rcx
   14000989a:	push   rdi
   14000989b:	sub    rsp,0x270
   1400098a2:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400098ab:	mov    rax,QWORD PTR [rip+0x3199e]        # 0x14003b250
   1400098b2:	xor    rax,rsp
   1400098b5:	mov    QWORD PTR [rsp+0x260],rax
   1400098bd:	mov    BYTE PTR [rsp+0x20],0x0
   1400098c2:	lea    rcx,[rsp+0x30]
   1400098c7:	call   0x140009e20
   1400098cc:	nop
   1400098cd:	mov    DWORD PTR [rsp+0x28],0x104
   1400098d5:	xor    eax,eax
   1400098d7:	mov    WORD PTR [rsp+0x50],ax
   1400098dc:	lea    rax,[rsp+0x52]
   1400098e1:	mov    rdi,rax
   1400098e4:	xor    eax,eax
   1400098e6:	mov    ecx,0x206
   1400098eb:	rep stos BYTE PTR es:[rdi],al
   1400098ed:	lea    rdx,[rsp+0x50]
   1400098f2:	mov    ecx,DWORD PTR [rsp+0x28]
   1400098f6:	call   QWORD PTR [rip+0x1c7fc]        # 0x1400260f8
   1400098fc:	test   eax,eax
   1400098fe:	jbe    0x140009910
   140009900:	lea    rdx,[rsp+0x50]
   140009905:	lea    rcx,[rsp+0x30]
   14000990a:	call   0x14000a200
   14000990f:	nop
   140009910:	jmp    0x140009912
   140009912:	lea    rcx,[rsp+0x30]
   140009917:	call   0x14000ad20
   14000991c:	test   eax,eax
   14000991e:	je     0x140009931
   140009920:	lea    rdx,[rip+0x218c9]        # 0x14002b1f0
   140009927:	lea    rcx,[rsp+0x30]
   14000992c:	call   0x14000a200
   140009931:	lea    rcx,[rsp+0x30]
   140009936:	call   0x14000ad20
   14000993b:	test   eax,eax
   14000993d:	jne    0x1400099ab
   14000993f:	lea    rcx,[rsp+0x30]
   140009944:	call   0x14000a540
   140009949:	mov    DWORD PTR [rsp+0x24],eax
   14000994d:	cmp    QWORD PTR [rsp+0x280],0x0
   140009956:	je     0x140009998
   140009958:	mov    rax,QWORD PTR [rsp+0x288]
   140009960:	mov    ecx,DWORD PTR [rsp+0x24]
   140009964:	cmp    DWORD PTR [rax],ecx
   140009966:	jle    0x140009996
   140009968:	lea    rcx,[rsp+0x30]
   14000996d:	call   0x14000a520
   140009972:	mov    rcx,QWORD PTR [rsp+0x288]
   14000997a:	movsxd rcx,DWORD PTR [rcx]
   14000997d:	mov    r8,rax
   140009980:	mov    rdx,rcx
   140009983:	mov    rcx,QWORD PTR [rsp+0x280]
   14000998b:	call   QWORD PTR [rip+0x1c9e7]        # 0x140026378
   140009991:	mov    BYTE PTR [rsp+0x20],0x1
   140009996:	jmp    0x14000999d
   140009998:	mov    BYTE PTR [rsp+0x20],0x1
   14000999d:	mov    rax,QWORD PTR [rsp+0x288]
   1400099a5:	mov    ecx,DWORD PTR [rsp+0x24]
   1400099a9:	mov    DWORD PTR [rax],ecx
   1400099ab:	movzx  eax,BYTE PTR [rsp+0x20]
   1400099b0:	mov    BYTE PTR [rsp+0x21],al
   1400099b4:	lea    rcx,[rsp+0x30]
   1400099b9:	call   0x140009e60
   1400099be:	movzx  eax,BYTE PTR [rsp+0x21]
   1400099c3:	mov    rcx,QWORD PTR [rsp+0x260]
   1400099cb:	xor    rcx,rsp
   1400099ce:	call   0x140021890
   1400099d3:	add    rsp,0x270
   1400099da:	pop    rdi
   1400099db:	ret    
   1400099dc:	int3   
   1400099dd:	int3   
   1400099de:	int3   
   1400099df:	int3   
   1400099e0:	int3   
   1400099e1:	int3   
   1400099e2:	int3   
   1400099e3:	int3   
   1400099e4:	int3   
   1400099e5:	int3   
   1400099e6:	int3   
   1400099e7:	int3   
   1400099e8:	int3   
   1400099e9:	int3   
   1400099ea:	int3   
   1400099eb:	int3   
   1400099ec:	int3   
   1400099ed:	int3   
   1400099ee:	int3   
   1400099ef:	int3   
   1400099f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400099f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400099fa:	sub    rsp,0xad8
   140009a01:	mov    rax,QWORD PTR [rip+0x31848]        # 0x14003b250
   140009a08:	xor    rax,rsp
   140009a0b:	mov    QWORD PTR [rsp+0xac0],rax
   140009a13:	mov    BYTE PTR [rsp+0x20],0x1
   140009a18:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140009a21:	lea    r8,[rip+0x21764]        # 0x14002b18c
   140009a28:	mov    rdx,QWORD PTR [rsp+0xae8]
   140009a30:	lea    rcx,[rsp+0x6a0]
   140009a38:	call   QWORD PTR [rip+0x1cae2]        # 0x140026520
   140009a3e:	lea    r8,[rip+0x2174b]        # 0x14002b190
   140009a45:	mov    rdx,QWORD PTR [rsp+0xae0]
   140009a4d:	lea    rcx,[rsp+0x8b0]
   140009a55:	call   QWORD PTR [rip+0x1cac5]        # 0x140026520
   140009a5b:	lea    rdx,[rsp+0x30]
   140009a60:	lea    rcx,[rsp+0x6a0]
   140009a68:	call   QWORD PTR [rip+0x1c6a2]        # 0x140026110
   140009a6e:	mov    QWORD PTR [rsp+0x28],rax
   140009a73:	cmp    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140009a79:	jne    0x140009a85
   140009a7b:	mov    BYTE PTR [rsp+0x20],0x0
   140009a80:	jmp    0x140009cfd
   140009a85:	mov    rcx,QWORD PTR [rsp+0xae0]
   140009a8d:	call   0x1400086f0
   140009a92:	mov    r8,QWORD PTR [rsp+0xae8]
   140009a9a:	mov    edx,0x104
   140009a9f:	lea    rcx,[rsp+0x490]
   140009aa7:	call   QWORD PTR [rip+0x1c8cb]        # 0x140026378
   140009aad:	mov    r8,QWORD PTR [rsp+0xae0]
   140009ab5:	mov    edx,0x104
   140009aba:	lea    rcx,[rsp+0x280]
   140009ac2:	call   QWORD PTR [rip+0x1c8b0]        # 0x140026378
   140009ac8:	lea    rcx,[rsp+0x490]
   140009ad0:	call   QWORD PTR [rip+0x1ca52]        # 0x140026528
   140009ad6:	lea    rcx,[rsp+0x280]
   140009ade:	call   QWORD PTR [rip+0x1ca44]        # 0x140026528
   140009ae4:	lea    r8,[rsp+0x490]
   140009aec:	mov    edx,0x104
   140009af1:	lea    rcx,[rsp+0x6a0]
   140009af9:	call   QWORD PTR [rip+0x1c879]        # 0x140026378
   140009aff:	lea    r8,[rsp+0x280]
   140009b07:	mov    edx,0x104
   140009b0c:	lea    rcx,[rsp+0x8b0]
   140009b14:	call   QWORD PTR [rip+0x1c85e]        # 0x140026378
   140009b1a:	mov    BYTE PTR [rsp+0x21],0x1
   140009b1f:	movzx  eax,BYTE PTR [rsp+0x21]
   140009b24:	test   eax,eax
   140009b26:	je     0x140009cea
   140009b2c:	lea    rdx,[rsp+0x30]
   140009b31:	mov    rcx,QWORD PTR [rsp+0x28]
   140009b36:	call   QWORD PTR [rip+0x1c624]        # 0x140026160
   140009b3c:	test   eax,eax
   140009b3e:	je     0x140009cb8
   140009b44:	mov    eax,0x2
   140009b49:	imul   rax,rax,0x0
   140009b4d:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140009b52:	cmp    eax,0x2e
   140009b55:	jne    0x140009b90
   140009b57:	mov    eax,0x2
   140009b5c:	imul   rax,rax,0x1
   140009b60:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140009b65:	test   eax,eax
   140009b67:	je     0x140009b8e
   140009b69:	mov    eax,0x2
   140009b6e:	imul   rax,rax,0x1
   140009b72:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140009b77:	cmp    eax,0x2e
   140009b7a:	jne    0x140009b90
   140009b7c:	mov    eax,0x2
   140009b81:	imul   rax,rax,0x2
   140009b85:	movzx  eax,WORD PTR [rsp+rax*1+0x5c]
   140009b8a:	test   eax,eax
   140009b8c:	jne    0x140009b90
   140009b8e:	jmp    0x140009b1f
   140009b90:	lea    rdx,[rsp+0x5c]
   140009b95:	lea    rcx,[rsp+0x490]
   140009b9d:	call   QWORD PTR [rip+0x1c9a5]        # 0x140026548
   140009ba3:	lea    rdx,[rsp+0x5c]
   140009ba8:	lea    rcx,[rsp+0x280]
   140009bb0:	call   QWORD PTR [rip+0x1c992]        # 0x140026548
   140009bb6:	mov    eax,DWORD PTR [rsp+0x30]
   140009bba:	and    eax,0x10
   140009bbd:	test   eax,eax
   140009bbf:	je     0x140009c46
   140009bc5:	lea    rdx,[rsp+0x490]
   140009bcd:	lea    rcx,[rsp+0x280]
   140009bd5:	call   0x1400099f0
   140009bda:	movzx  eax,al
   140009bdd:	test   eax,eax
   140009bdf:	jne    0x140009c01
   140009be1:	mov    rcx,QWORD PTR [rsp+0x28]
   140009be6:	call   QWORD PTR [rip+0x1c4cc]        # 0x1400260b8
   140009bec:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140009bf5:	mov    BYTE PTR [rsp+0x20],0x0
   140009bfa:	jmp    0x140009cea
   140009bff:	jmp    0x140009c44
   140009c01:	lea    rcx,[rsp+0x280]
   140009c09:	call   0x1400086f0
   140009c0e:	lea    r8,[rsp+0x6a0]
   140009c16:	mov    edx,0x104
   140009c1b:	lea    rcx,[rsp+0x490]
   140009c23:	call   QWORD PTR [rip+0x1c74f]        # 0x140026378
   140009c29:	lea    r8,[rsp+0x8b0]
   140009c31:	mov    edx,0x104
   140009c36:	lea    rcx,[rsp+0x280]
   140009c3e:	call   QWORD PTR [rip+0x1c734]        # 0x140026378
   140009c44:	jmp    0x140009cb6
   140009c46:	xor    r8d,r8d
   140009c49:	lea    rdx,[rsp+0x280]
   140009c51:	lea    rcx,[rsp+0x490]
   140009c59:	call   QWORD PTR [rip+0x1c4b9]        # 0x140026118
   140009c5f:	test   eax,eax
   140009c61:	jne    0x140009c80
   140009c63:	mov    rcx,QWORD PTR [rsp+0x28]
   140009c68:	call   QWORD PTR [rip+0x1c44a]        # 0x1400260b8
   140009c6e:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140009c77:	mov    BYTE PTR [rsp+0x20],0x0
   140009c7c:	jmp    0x140009cea
   140009c7e:	jmp    0x140009cb6
   140009c80:	lea    r8,[rsp+0x6a0]
   140009c88:	mov    edx,0x104
   140009c8d:	lea    rcx,[rsp+0x490]
   140009c95:	call   QWORD PTR [rip+0x1c6dd]        # 0x140026378
   140009c9b:	lea    r8,[rsp+0x8b0]
   140009ca3:	mov    edx,0x104
   140009ca8:	lea    rcx,[rsp+0x280]
   140009cb0:	call   QWORD PTR [rip+0x1c6c2]        # 0x140026378
   140009cb6:	jmp    0x140009ce5
   140009cb8:	call   QWORD PTR [rip+0x1c49a]        # 0x140026158
   140009cbe:	cmp    eax,0x12
   140009cc1:	jne    0x140009cca
   140009cc3:	mov    BYTE PTR [rsp+0x21],0x0
   140009cc8:	jmp    0x140009ce5
   140009cca:	mov    rcx,QWORD PTR [rsp+0x28]
   140009ccf:	call   QWORD PTR [rip+0x1c3e3]        # 0x1400260b8
   140009cd5:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140009cde:	mov    BYTE PTR [rsp+0x20],0x0
   140009ce3:	jmp    0x140009cea
   140009ce5:	jmp    0x140009b1f
   140009cea:	cmp    QWORD PTR [rsp+0x28],0xffffffffffffffff
   140009cf0:	je     0x140009cfd
   140009cf2:	mov    rcx,QWORD PTR [rsp+0x28]
   140009cf7:	call   QWORD PTR [rip+0x1c3bb]        # 0x1400260b8
   140009cfd:	movzx  eax,BYTE PTR [rsp+0x20]
   140009d02:	mov    rcx,QWORD PTR [rsp+0xac0]
   140009d0a:	xor    rcx,rsp
   140009d0d:	call   0x140021890
   140009d12:	add    rsp,0xad8
   140009d19:	ret    
   140009d1a:	int3   
   140009d1b:	int3   
   140009d1c:	int3   
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	mov    DWORD PTR [rsp+0x20],r9d
   140009d25:	mov    DWORD PTR [rsp+0x18],r8d
   140009d2a:	mov    QWORD PTR [rsp+0x10],rdx
   140009d2f:	mov    QWORD PTR [rsp+0x8],rcx
   140009d34:	sub    rsp,0x58
   140009d38:	cmp    QWORD PTR [rsp+0x60],0x0
   140009d3e:	je     0x140009d48
   140009d40:	cmp    QWORD PTR [rsp+0x68],0x0
   140009d46:	jne    0x140009d4c
   140009d48:	xor    eax,eax
   140009d4a:	jmp    0x140009da3
   140009d4c:	mov    rax,QWORD PTR [rsp+0x60]
   140009d51:	mov    BYTE PTR [rax],0x0
   140009d54:	mov    QWORD PTR [rsp+0x38],0x0
   140009d5d:	mov    QWORD PTR [rsp+0x30],0x0
   140009d66:	mov    eax,DWORD PTR [rsp+0x70]
   140009d6a:	mov    DWORD PTR [rsp+0x28],eax
   140009d6e:	mov    rax,QWORD PTR [rsp+0x60]
   140009d73:	mov    QWORD PTR [rsp+0x20],rax
   140009d78:	mov    r9d,0xffffffff
   140009d7e:	mov    r8,QWORD PTR [rsp+0x68]
   140009d83:	xor    edx,edx
   140009d85:	mov    ecx,DWORD PTR [rsp+0x78]
   140009d89:	call   QWORD PTR [rip+0x1c391]        # 0x140026120
   140009d8f:	mov    DWORD PTR [rsp+0x40],eax
   140009d93:	cmp    DWORD PTR [rsp+0x40],0x0
   140009d98:	jne    0x140009d9e
   140009d9a:	xor    eax,eax
   140009d9c:	jmp    0x140009da3
   140009d9e:	mov    rax,QWORD PTR [rsp+0x60]
   140009da3:	add    rsp,0x58
   140009da7:	ret    
   140009da8:	int3   
   140009da9:	int3   
   140009daa:	int3   
   140009dab:	int3   
   140009dac:	int3   
   140009dad:	int3   
   140009dae:	int3   
   140009daf:	int3   
   140009db0:	mov    DWORD PTR [rsp+0x18],r8d
   140009db5:	mov    DWORD PTR [rsp+0x10],edx
   140009db9:	mov    QWORD PTR [rsp+0x8],rcx
   140009dbe:	sub    rsp,0x38
   140009dc2:	cmp    QWORD PTR [rsp+0x40],0x0
   140009dc8:	je     0x140009e05
   140009dca:	mov    eax,DWORD PTR [rsp+0x48]
   140009dce:	mov    edx,eax
   140009dd0:	mov    rcx,QWORD PTR [rsp+0x40]
   140009dd5:	call   QWORD PTR [rip+0x1c34d]        # 0x140026128
   140009ddb:	test   eax,eax
   140009ddd:	jne    0x140009e05
   140009ddf:	cmp    DWORD PTR [rsp+0x50],0x0
   140009de4:	je     0x140009dfb
   140009de6:	mov    eax,DWORD PTR [rsp+0x48]
   140009dea:	mov    edx,eax
   140009dec:	mov    rcx,QWORD PTR [rsp+0x40]
   140009df1:	call   QWORD PTR [rip+0x1c379]        # 0x140026170
   140009df7:	test   eax,eax
   140009df9:	jne    0x140009e05
   140009dfb:	mov    DWORD PTR [rsp+0x20],0x1
   140009e03:	jmp    0x140009e0d
   140009e05:	mov    DWORD PTR [rsp+0x20],0x0
   140009e0d:	mov    eax,DWORD PTR [rsp+0x20]
   140009e11:	add    rsp,0x38
   140009e15:	ret    
   140009e16:	int3   
   140009e17:	int3   
   140009e18:	int3   
   140009e19:	int3   
   140009e1a:	int3   
   140009e1b:	int3   
   140009e1c:	int3   
   140009e1d:	int3   
   140009e1e:	int3   
   140009e1f:	int3   
   140009e20:	mov    QWORD PTR [rsp+0x8],rcx
   140009e25:	mov    rax,QWORD PTR [rsp+0x8]
   140009e2a:	lea    rcx,[rip+0x21daf]        # 0x14002bbe0
   140009e31:	mov    QWORD PTR [rax],rcx
   140009e34:	mov    rax,QWORD PTR [rsp+0x8]
   140009e39:	mov    rcx,QWORD PTR [rip+0x31370]        # 0x14003b1b0
   140009e40:	mov    QWORD PTR [rax+0x8],rcx
   140009e44:	mov    rax,QWORD PTR [rsp+0x8]
   140009e49:	mov    DWORD PTR [rax+0x10],0x0
   140009e50:	mov    rax,QWORD PTR [rsp+0x8]
   140009e55:	ret    
   140009e56:	int3   
   140009e57:	int3   
   140009e58:	int3   
   140009e59:	int3   
   140009e5a:	int3   
   140009e5b:	int3   
   140009e5c:	int3   
   140009e5d:	int3   
   140009e5e:	int3   
   140009e5f:	int3   
   140009e60:	mov    QWORD PTR [rsp+0x8],rcx
   140009e65:	sub    rsp,0x28
   140009e69:	mov    rax,QWORD PTR [rsp+0x30]
   140009e6e:	lea    rcx,[rip+0x21d6b]        # 0x14002bbe0
   140009e75:	mov    QWORD PTR [rax],rcx
   140009e78:	mov    rcx,QWORD PTR [rsp+0x30]
   140009e7d:	call   0x14000a9d0
   140009e82:	add    rsp,0x28
   140009e86:	ret    
   140009e87:	int3   
   140009e88:	int3   
   140009e89:	int3   
   140009e8a:	int3   
   140009e8b:	int3   
   140009e8c:	int3   
   140009e8d:	int3   
   140009e8e:	int3   
   140009e8f:	int3   
   140009e90:	mov    QWORD PTR [rsp+0x10],rdx
   140009e95:	mov    QWORD PTR [rsp+0x8],rcx
   140009e9a:	sub    rsp,0x28
   140009e9e:	mov    rax,QWORD PTR [rsp+0x30]
   140009ea3:	lea    rcx,[rip+0x21d36]        # 0x14002bbe0
   140009eaa:	mov    QWORD PTR [rax],rcx
   140009ead:	mov    rax,QWORD PTR [rsp+0x38]
   140009eb2:	mov    rcx,QWORD PTR [rax+0x8]
   140009eb6:	call   QWORD PTR [rip+0x1c424]        # 0x1400262e0
   140009ebc:	mov    rcx,QWORD PTR [rsp+0x30]
   140009ec1:	mov    QWORD PTR [rcx+0x8],rax
   140009ec5:	mov    rcx,QWORD PTR [rsp+0x30]
   140009eca:	call   0x14000a540
   140009ecf:	inc    eax
   140009ed1:	cdqe   
   140009ed3:	shl    rax,1
   140009ed6:	mov    rcx,QWORD PTR [rsp+0x30]
   140009edb:	mov    DWORD PTR [rcx+0x10],eax
   140009ede:	mov    rax,QWORD PTR [rsp+0x30]
   140009ee3:	add    rsp,0x28
   140009ee7:	ret    
   140009ee8:	int3   
   140009ee9:	int3   
   140009eea:	int3   
   140009eeb:	int3   
   140009eec:	int3   
   140009eed:	int3   
   140009eee:	int3   
   140009eef:	int3   
   140009ef0:	mov    QWORD PTR [rsp+0x10],rdx
   140009ef5:	mov    QWORD PTR [rsp+0x8],rcx
   140009efa:	mov    rax,QWORD PTR [rsp+0x8]
   140009eff:	lea    rcx,[rip+0x21cda]        # 0x14002bbe0
   140009f06:	mov    QWORD PTR [rax],rcx
   140009f09:	mov    rax,QWORD PTR [rsp+0x8]
   140009f0e:	ret    
   140009f0f:	int3   
   140009f10:	int3   
   140009f11:	int3   
   140009f12:	int3   
   140009f13:	int3   
   140009f14:	int3   
   140009f15:	int3   
   140009f16:	int3   
   140009f17:	int3   
   140009f18:	int3   
   140009f19:	int3   
   140009f1a:	int3   
   140009f1b:	int3   
   140009f1c:	int3   
   140009f1d:	int3   
   140009f1e:	int3   
   140009f1f:	int3   
   140009f20:	mov    QWORD PTR [rsp+0x10],rdx
   140009f25:	mov    QWORD PTR [rsp+0x8],rcx
   140009f2a:	sub    rsp,0x28
   140009f2e:	mov    rax,QWORD PTR [rsp+0x30]
   140009f33:	lea    rcx,[rip+0x21ca6]        # 0x14002bbe0
   140009f3a:	mov    QWORD PTR [rax],rcx
   140009f3d:	cmp    QWORD PTR [rsp+0x38],0x0
   140009f43:	je     0x140009f74
   140009f45:	mov    rcx,QWORD PTR [rsp+0x38]
   140009f4a:	call   QWORD PTR [rip+0x1c390]        # 0x1400262e0
   140009f50:	mov    rcx,QWORD PTR [rsp+0x30]
   140009f55:	mov    QWORD PTR [rcx+0x8],rax
   140009f59:	mov    rcx,QWORD PTR [rsp+0x30]
   140009f5e:	call   0x14000a540
   140009f63:	inc    eax
   140009f65:	cdqe   
   140009f67:	shl    rax,1
   140009f6a:	mov    rcx,QWORD PTR [rsp+0x30]
   140009f6f:	mov    DWORD PTR [rcx+0x10],eax
   140009f72:	jmp    0x140009f90
   140009f74:	mov    rax,QWORD PTR [rsp+0x30]
   140009f79:	mov    rcx,QWORD PTR [rip+0x31230]        # 0x14003b1b0
   140009f80:	mov    QWORD PTR [rax+0x8],rcx
   140009f84:	mov    rax,QWORD PTR [rsp+0x30]
   140009f89:	mov    DWORD PTR [rax+0x10],0x0
   140009f90:	mov    rax,QWORD PTR [rsp+0x30]
   140009f95:	add    rsp,0x28
   140009f99:	ret    
   140009f9a:	int3   
   140009f9b:	int3   
   140009f9c:	int3   
   140009f9d:	int3   
   140009f9e:	int3   
   140009f9f:	int3   
   140009fa0:	mov    QWORD PTR [rsp+0x18],r8
   140009fa5:	mov    QWORD PTR [rsp+0x10],rdx
   140009faa:	mov    QWORD PTR [rsp+0x8],rcx
   140009faf:	sub    rsp,0x28
   140009fb3:	mov    rax,QWORD PTR [rsp+0x30]
   140009fb8:	lea    rcx,[rip+0x21c21]        # 0x14002bbe0
   140009fbf:	mov    QWORD PTR [rax],rcx
   140009fc2:	cmp    QWORD PTR [rsp+0x38],0x0
   140009fc8:	je     0x14000a03a
   140009fca:	mov    rax,QWORD PTR [rsp+0x40]
   140009fcf:	lea    rax,[rax+rax*1+0x2]
   140009fd4:	mov    rcx,QWORD PTR [rsp+0x30]
   140009fd9:	mov    DWORD PTR [rcx+0x10],eax
   140009fdc:	mov    rax,QWORD PTR [rsp+0x30]
   140009fe1:	movsxd rax,DWORD PTR [rax+0x10]
   140009fe5:	mov    rcx,rax
   140009fe8:	call   QWORD PTR [rip+0x1c30a]        # 0x1400262f8
   140009fee:	mov    rcx,QWORD PTR [rsp+0x30]
   140009ff3:	mov    QWORD PTR [rcx+0x8],rax
   140009ff7:	mov    rax,QWORD PTR [rsp+0x30]
   140009ffc:	movsxd rax,DWORD PTR [rax+0x10]
   14000a000:	xor    edx,edx
   14000a002:	mov    ecx,0x2
   14000a007:	div    rcx
   14000a00a:	mov    r9,QWORD PTR [rsp+0x40]
   14000a00f:	mov    r8,QWORD PTR [rsp+0x38]
   14000a014:	mov    rdx,rax
   14000a017:	mov    rax,QWORD PTR [rsp+0x30]
   14000a01c:	mov    rcx,QWORD PTR [rax+0x8]
   14000a020:	call   QWORD PTR [rip+0x1c292]        # 0x1400262b8
   14000a026:	mov    rax,QWORD PTR [rsp+0x30]
   14000a02b:	mov    rax,QWORD PTR [rax+0x8]
   14000a02f:	xor    ecx,ecx
   14000a031:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a036:	mov    WORD PTR [rax+rdx*2],cx
   14000a03a:	mov    rax,QWORD PTR [rsp+0x30]
   14000a03f:	add    rsp,0x28
   14000a043:	ret    
   14000a044:	int3   
   14000a045:	int3   
   14000a046:	int3   
   14000a047:	int3   
   14000a048:	int3   
   14000a049:	int3   
   14000a04a:	int3   
   14000a04b:	int3   
   14000a04c:	int3   
   14000a04d:	int3   
   14000a04e:	int3   
   14000a04f:	int3   
   14000a050:	mov    DWORD PTR [rsp+0x18],r8d
   14000a055:	mov    WORD PTR [rsp+0x10],dx
   14000a05a:	mov    QWORD PTR [rsp+0x8],rcx
   14000a05f:	sub    rsp,0x48
   14000a063:	mov    rax,QWORD PTR [rsp+0x50]
   14000a068:	lea    rcx,[rip+0x21b71]        # 0x14002bbe0
   14000a06f:	mov    QWORD PTR [rax],rcx
   14000a072:	mov    eax,DWORD PTR [rsp+0x60]
   14000a076:	inc    eax
   14000a078:	cdqe   
   14000a07a:	shl    rax,1
   14000a07d:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a082:	mov    DWORD PTR [rcx+0x10],eax
   14000a085:	mov    rax,QWORD PTR [rsp+0x50]
   14000a08a:	movsxd rax,DWORD PTR [rax+0x10]
   14000a08e:	mov    rcx,rax
   14000a091:	call   QWORD PTR [rip+0x1c261]        # 0x1400262f8
   14000a097:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a09c:	mov    QWORD PTR [rcx+0x8],rax
   14000a0a0:	mov    rax,QWORD PTR [rsp+0x50]
   14000a0a5:	cmp    QWORD PTR [rax+0x8],0x0
   14000a0aa:	jne    0x14000a0d5
   14000a0ac:	mov    rax,QWORD PTR [rsp+0x50]
   14000a0b1:	mov    DWORD PTR [rax+0x10],0x0
   14000a0b8:	lea    rax,[rip+0x219b1]        # 0x14002ba70
   14000a0bf:	mov    QWORD PTR [rsp+0x20],rax
   14000a0c4:	lea    rdx,[rip+0x2e6fd]        # 0x1400387c8
   14000a0cb:	lea    rcx,[rsp+0x20]
   14000a0d0:	call   0x14002193a
   14000a0d5:	mov    rax,QWORD PTR [rsp+0x50]
   14000a0da:	movsxd rax,DWORD PTR [rax+0x10]
   14000a0de:	mov    r8,rax
   14000a0e1:	xor    edx,edx
   14000a0e3:	mov    rax,QWORD PTR [rsp+0x50]
   14000a0e8:	mov    rcx,QWORD PTR [rax+0x8]
   14000a0ec:	call   0x1400216e0
   14000a0f1:	movsxd rax,DWORD PTR [rsp+0x60]
   14000a0f6:	mov    QWORD PTR [rsp+0x28],rax
   14000a0fb:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a100:	movsxd rcx,DWORD PTR [rcx+0x10]
   14000a104:	xor    edx,edx
   14000a106:	mov    rax,rcx
   14000a109:	mov    ecx,0x2
   14000a10e:	div    rcx
   14000a111:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a116:	mov    r9,rcx
   14000a119:	movzx  r8d,WORD PTR [rsp+0x58]
   14000a11f:	mov    rdx,rax
   14000a122:	mov    rax,QWORD PTR [rsp+0x50]
   14000a127:	mov    rcx,QWORD PTR [rax+0x8]
   14000a12b:	call   QWORD PTR [rip+0x1c16f]        # 0x1400262a0
   14000a131:	movsxd rax,DWORD PTR [rsp+0x60]
   14000a136:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a13b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a13f:	lea    rax,[rcx+rax*2]
   14000a143:	mov    QWORD PTR [rsp+0x30],rax
   14000a148:	xor    eax,eax
   14000a14a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a14f:	mov    WORD PTR [rcx],ax
   14000a152:	mov    rax,QWORD PTR [rsp+0x50]
   14000a157:	add    rsp,0x48
   14000a15b:	ret    
   14000a15c:	int3   
   14000a15d:	int3   
   14000a15e:	int3   
   14000a15f:	int3   
   14000a160:	int3   
   14000a161:	int3   
   14000a162:	int3   
   14000a163:	int3   
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	int3   
   14000a167:	int3   
   14000a168:	int3   
   14000a169:	int3   
   14000a16a:	int3   
   14000a16b:	int3   
   14000a16c:	int3   
   14000a16d:	int3   
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	mov    WORD PTR [rsp+0x10],dx
   14000a175:	mov    QWORD PTR [rsp+0x8],rcx
   14000a17a:	push   rdi
   14000a17b:	sub    rsp,0x30
   14000a17f:	xor    eax,eax
   14000a181:	mov    WORD PTR [rsp+0x20],ax
   14000a186:	lea    rax,[rsp+0x22]
   14000a18b:	mov    rdi,rax
   14000a18e:	xor    eax,eax
   14000a190:	mov    ecx,0x2
   14000a195:	rep stos BYTE PTR es:[rdi],al
   14000a197:	mov    eax,0x2
   14000a19c:	imul   rax,rax,0x0
   14000a1a0:	movzx  ecx,WORD PTR [rsp+0x48]
   14000a1a5:	mov    WORD PTR [rsp+rax*1+0x20],cx
   14000a1aa:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a1af:	call   0x14000a9d0
   14000a1b4:	mov    eax,0x2
   14000a1b9:	imul   rax,rax,0x0
   14000a1bd:	lea    rax,[rsp+rax*1+0x20]
   14000a1c2:	mov    rcx,rax
   14000a1c5:	call   QWORD PTR [rip+0x1c115]        # 0x1400262e0
   14000a1cb:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a1d0:	mov    QWORD PTR [rcx+0x8],rax
   14000a1d4:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a1d9:	call   0x14000a540
   14000a1de:	inc    eax
   14000a1e0:	cdqe   
   14000a1e2:	shl    rax,1
   14000a1e5:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a1ea:	mov    DWORD PTR [rcx+0x10],eax
   14000a1ed:	mov    rax,QWORD PTR [rsp+0x40]
   14000a1f2:	add    rsp,0x30
   14000a1f6:	pop    rdi
   14000a1f7:	ret    
   14000a1f8:	int3   
   14000a1f9:	int3   
   14000a1fa:	int3   
   14000a1fb:	int3   
   14000a1fc:	int3   
   14000a1fd:	int3   
   14000a1fe:	int3   
   14000a1ff:	int3   
   14000a200:	mov    QWORD PTR [rsp+0x10],rdx
   14000a205:	mov    QWORD PTR [rsp+0x8],rcx
   14000a20a:	sub    rsp,0x28
   14000a20e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a213:	call   0x14000a9d0
   14000a218:	cmp    QWORD PTR [rsp+0x38],0x0
   14000a21e:	je     0x14000a24d
   14000a220:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a225:	call   QWORD PTR [rip+0x1c0b5]        # 0x1400262e0
   14000a22b:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a230:	mov    QWORD PTR [rcx+0x8],rax
   14000a234:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a239:	call   0x14000a540
   14000a23e:	inc    eax
   14000a240:	cdqe   
   14000a242:	shl    rax,1
   14000a245:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a24a:	mov    DWORD PTR [rcx+0x10],eax
   14000a24d:	mov    rax,QWORD PTR [rsp+0x30]
   14000a252:	add    rsp,0x28
   14000a256:	ret    
   14000a257:	int3   
   14000a258:	int3   
   14000a259:	int3   
   14000a25a:	int3   
   14000a25b:	int3   
   14000a25c:	int3   
   14000a25d:	int3   
   14000a25e:	int3   
   14000a25f:	int3   
   14000a260:	mov    QWORD PTR [rsp+0x10],rdx
   14000a265:	mov    QWORD PTR [rsp+0x8],rcx
   14000a26a:	sub    rsp,0x28
   14000a26e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a273:	call   0x14000a9d0
   14000a278:	mov    rax,QWORD PTR [rsp+0x38]
   14000a27d:	mov    rcx,QWORD PTR [rax+0x8]
   14000a281:	call   QWORD PTR [rip+0x1c059]        # 0x1400262e0
   14000a287:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a28c:	mov    QWORD PTR [rcx+0x8],rax
   14000a290:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a295:	call   0x14000a540
   14000a29a:	inc    eax
   14000a29c:	cdqe   
   14000a29e:	shl    rax,1
   14000a2a1:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a2a6:	mov    DWORD PTR [rcx+0x10],eax
   14000a2a9:	mov    rax,QWORD PTR [rsp+0x30]
   14000a2ae:	add    rsp,0x28
   14000a2b2:	ret    
   14000a2b3:	int3   
   14000a2b4:	int3   
   14000a2b5:	int3   
   14000a2b6:	int3   
   14000a2b7:	int3   
   14000a2b8:	int3   
   14000a2b9:	int3   
   14000a2ba:	int3   
   14000a2bb:	int3   
   14000a2bc:	int3   
   14000a2bd:	int3   
   14000a2be:	int3   
   14000a2bf:	int3   
   14000a2c0:	mov    WORD PTR [rsp+0x10],dx
   14000a2c5:	mov    QWORD PTR [rsp+0x8],rcx
   14000a2ca:	sub    rsp,0x58
   14000a2ce:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a2d3:	call   0x14000a540
   14000a2d8:	add    eax,0x2
   14000a2db:	cdqe   
   14000a2dd:	shl    rax,1
   14000a2e0:	mov    DWORD PTR [rsp+0x20],eax
   14000a2e4:	movsxd rax,DWORD PTR [rsp+0x20]
   14000a2e9:	mov    rcx,rax
   14000a2ec:	call   QWORD PTR [rip+0x1c006]        # 0x1400262f8
   14000a2f2:	mov    QWORD PTR [rsp+0x30],rax
   14000a2f7:	cmp    QWORD PTR [rsp+0x30],0x0
   14000a2fd:	jne    0x14000a328
   14000a2ff:	mov    rax,QWORD PTR [rsp+0x60]
   14000a304:	mov    DWORD PTR [rax+0x10],0x0
   14000a30b:	lea    rax,[rip+0x21786]        # 0x14002ba98
   14000a312:	mov    QWORD PTR [rsp+0x38],rax
   14000a317:	lea    rdx,[rip+0x2e4aa]        # 0x1400387c8
   14000a31e:	lea    rcx,[rsp+0x38]
   14000a323:	call   0x14002193a
   14000a328:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a32d:	call   0x14000a540
   14000a332:	inc    eax
   14000a334:	cdqe   
   14000a336:	mov    QWORD PTR [rsp+0x40],rax
   14000a33b:	movsxd rcx,DWORD PTR [rsp+0x20]
   14000a340:	xor    edx,edx
   14000a342:	mov    rax,rcx
   14000a345:	mov    ecx,0x2
   14000a34a:	div    rcx
   14000a34d:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a352:	mov    r9,rcx
   14000a355:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a35a:	mov    r8,QWORD PTR [rcx+0x8]
   14000a35e:	mov    rdx,rax
   14000a361:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a366:	call   QWORD PTR [rip+0x1bf4c]        # 0x1400262b8
   14000a36c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a371:	call   0x14000a540
   14000a376:	cdqe   
   14000a378:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a37d:	lea    rax,[rcx+rax*2]
   14000a381:	mov    QWORD PTR [rsp+0x28],rax
   14000a386:	mov    rax,QWORD PTR [rsp+0x28]
   14000a38b:	movzx  ecx,WORD PTR [rsp+0x68]
   14000a390:	mov    WORD PTR [rax],cx
   14000a393:	mov    rax,QWORD PTR [rsp+0x28]
   14000a398:	add    rax,0x2
   14000a39c:	mov    QWORD PTR [rsp+0x28],rax
   14000a3a1:	xor    eax,eax
   14000a3a3:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a3a8:	mov    WORD PTR [rcx],ax
   14000a3ab:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a3b0:	call   0x14000a9d0
   14000a3b5:	mov    rax,QWORD PTR [rsp+0x60]
   14000a3ba:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a3bf:	mov    QWORD PTR [rax+0x8],rcx
   14000a3c3:	mov    rax,QWORD PTR [rsp+0x60]
   14000a3c8:	mov    ecx,DWORD PTR [rsp+0x20]
   14000a3cc:	mov    DWORD PTR [rax+0x10],ecx
   14000a3cf:	mov    rax,QWORD PTR [rsp+0x60]
   14000a3d4:	add    rsp,0x58
   14000a3d8:	ret    
   14000a3d9:	int3   
   14000a3da:	int3   
   14000a3db:	int3   
   14000a3dc:	int3   
   14000a3dd:	int3   
   14000a3de:	int3   
   14000a3df:	int3   
   14000a3e0:	mov    QWORD PTR [rsp+0x10],rdx
   14000a3e5:	mov    QWORD PTR [rsp+0x8],rcx
   14000a3ea:	sub    rsp,0x58
   14000a3ee:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a3f3:	call   0x14000a540
   14000a3f8:	cdqe   
   14000a3fa:	mov    QWORD PTR [rsp+0x30],rax
   14000a3ff:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a404:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a408:	call   QWORD PTR [rip+0x1bf42]        # 0x140026350
   14000a40e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a413:	add    rcx,rax
   14000a416:	mov    rax,rcx
   14000a419:	lea    rax,[rax+rax*1+0x2]
   14000a41e:	mov    DWORD PTR [rsp+0x20],eax
   14000a422:	movsxd rax,DWORD PTR [rsp+0x20]
   14000a427:	mov    rcx,rax
   14000a42a:	call   QWORD PTR [rip+0x1bec8]        # 0x1400262f8
   14000a430:	mov    QWORD PTR [rsp+0x28],rax
   14000a435:	cmp    QWORD PTR [rsp+0x28],0x0
   14000a43b:	jne    0x14000a45a
   14000a43d:	lea    rax,[rip+0x2167c]        # 0x14002bac0
   14000a444:	mov    QWORD PTR [rsp+0x38],rax
   14000a449:	lea    rdx,[rip+0x2e378]        # 0x1400387c8
   14000a450:	lea    rcx,[rsp+0x38]
   14000a455:	call   0x14002193a
   14000a45a:	movsxd rax,DWORD PTR [rsp+0x20]
   14000a45f:	xor    edx,edx
   14000a461:	mov    ecx,0x2
   14000a466:	div    rcx
   14000a469:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a46e:	mov    r8,QWORD PTR [rcx+0x8]
   14000a472:	mov    rdx,rax
   14000a475:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a47a:	call   QWORD PTR [rip+0x1bef8]        # 0x140026378
   14000a480:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a485:	call   0x14000a520
   14000a48a:	mov    QWORD PTR [rsp+0x40],rax
   14000a48f:	movsxd rcx,DWORD PTR [rsp+0x20]
   14000a494:	xor    edx,edx
   14000a496:	mov    rax,rcx
   14000a499:	mov    ecx,0x2
   14000a49e:	div    rcx
   14000a4a1:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a4a6:	mov    r8,rcx
   14000a4a9:	mov    rdx,rax
   14000a4ac:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a4b1:	call   QWORD PTR [rip+0x1be21]        # 0x1400262d8
   14000a4b7:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a4bc:	call   0x14000a9d0
   14000a4c1:	mov    rax,QWORD PTR [rsp+0x60]
   14000a4c6:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a4cb:	mov    QWORD PTR [rax+0x8],rcx
   14000a4cf:	mov    rax,QWORD PTR [rsp+0x60]
   14000a4d4:	mov    ecx,DWORD PTR [rsp+0x20]
   14000a4d8:	mov    DWORD PTR [rax+0x10],ecx
   14000a4db:	mov    rax,QWORD PTR [rsp+0x60]
   14000a4e0:	add    rsp,0x58
   14000a4e4:	ret    
   14000a4e5:	int3   
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	int3   
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	mov    DWORD PTR [rsp+0x10],edx
   14000a4f4:	mov    QWORD PTR [rsp+0x8],rcx
   14000a4f9:	sub    rsp,0x28
   14000a4fd:	mov    edx,DWORD PTR [rsp+0x38]
   14000a501:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a506:	call   0x14000a570
   14000a50b:	add    rsp,0x28
   14000a50f:	ret    
   14000a510:	int3   
   14000a511:	int3   
   14000a512:	int3   
   14000a513:	int3   
   14000a514:	int3   
   14000a515:	int3   
   14000a516:	int3   
   14000a517:	int3   
   14000a518:	int3   
   14000a519:	int3   
   14000a51a:	int3   
   14000a51b:	int3   
   14000a51c:	int3   
   14000a51d:	int3   
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	mov    QWORD PTR [rsp+0x8],rcx
   14000a525:	mov    rax,QWORD PTR [rsp+0x8]
   14000a52a:	mov    rax,QWORD PTR [rax+0x8]
   14000a52e:	ret    
   14000a52f:	int3   
   14000a530:	int3   
   14000a531:	int3   
   14000a532:	int3   
   14000a533:	int3   
   14000a534:	int3   
   14000a535:	int3   
   14000a536:	int3   
   14000a537:	int3   
   14000a538:	int3   
   14000a539:	int3   
   14000a53a:	int3   
   14000a53b:	int3   
   14000a53c:	int3   
   14000a53d:	int3   
   14000a53e:	int3   
   14000a53f:	int3   
   14000a540:	mov    QWORD PTR [rsp+0x8],rcx
   14000a545:	sub    rsp,0x28
   14000a549:	mov    rax,QWORD PTR [rsp+0x30]
   14000a54e:	mov    rcx,QWORD PTR [rax+0x8]
   14000a552:	call   QWORD PTR [rip+0x1bdf8]        # 0x140026350
   14000a558:	add    rsp,0x28
   14000a55c:	ret    
   14000a55d:	int3   
   14000a55e:	int3   
   14000a55f:	int3   
   14000a560:	int3   
   14000a561:	int3   
   14000a562:	int3   
   14000a563:	int3   
   14000a564:	int3   
   14000a565:	int3   
   14000a566:	int3   
   14000a567:	int3   
   14000a568:	int3   
   14000a569:	int3   
   14000a56a:	int3   
   14000a56b:	int3   
   14000a56c:	int3   
   14000a56d:	int3   
   14000a56e:	int3   
   14000a56f:	int3   
   14000a570:	mov    DWORD PTR [rsp+0x10],edx
   14000a574:	mov    QWORD PTR [rsp+0x8],rcx
   14000a579:	sub    rsp,0x18
   14000a57d:	movsxd rax,DWORD PTR [rsp+0x28]
   14000a582:	mov    rcx,QWORD PTR [rsp+0x20]
   14000a587:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a58b:	lea    rax,[rcx+rax*2]
   14000a58f:	mov    QWORD PTR [rsp],rax
   14000a593:	mov    rax,QWORD PTR [rsp]
   14000a597:	movzx  eax,WORD PTR [rax]
   14000a59a:	add    rsp,0x18
   14000a59e:	ret    
   14000a59f:	int3   
   14000a5a0:	int3   
   14000a5a1:	int3   
   14000a5a2:	int3   
   14000a5a3:	int3   
   14000a5a4:	int3   
   14000a5a5:	int3   
   14000a5a6:	int3   
   14000a5a7:	int3   
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	int3   
   14000a5ad:	int3   
   14000a5ae:	int3   
   14000a5af:	int3   
   14000a5b0:	mov    WORD PTR [rsp+0x18],r8w
   14000a5b6:	mov    DWORD PTR [rsp+0x10],edx
   14000a5ba:	mov    QWORD PTR [rsp+0x8],rcx
   14000a5bf:	sub    rsp,0x18
   14000a5c3:	movsxd rax,DWORD PTR [rsp+0x28]
   14000a5c8:	mov    rcx,QWORD PTR [rsp+0x20]
   14000a5cd:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a5d1:	lea    rax,[rcx+rax*2]
   14000a5d5:	mov    QWORD PTR [rsp],rax
   14000a5d9:	mov    rax,QWORD PTR [rsp]
   14000a5dd:	movzx  ecx,WORD PTR [rsp+0x30]
   14000a5e2:	mov    WORD PTR [rax],cx
   14000a5e5:	add    rsp,0x18
   14000a5e9:	ret    
   14000a5ea:	int3   
   14000a5eb:	int3   
   14000a5ec:	int3   
   14000a5ed:	int3   
   14000a5ee:	int3   
   14000a5ef:	int3   
   14000a5f0:	mov    DWORD PTR [rsp+0x10],edx
   14000a5f4:	mov    QWORD PTR [rsp+0x8],rcx
   14000a5f9:	sub    rsp,0x48
   14000a5fd:	movsxd rax,DWORD PTR [rsp+0x58]
   14000a602:	shl    rax,1
   14000a605:	mov    DWORD PTR [rsp+0x20],eax
   14000a609:	mov    rax,QWORD PTR [rsp+0x50]
   14000a60e:	mov    eax,DWORD PTR [rax+0x10]
   14000a611:	cmp    DWORD PTR [rsp+0x20],eax
   14000a615:	jg     0x14000a625
   14000a617:	mov    rax,QWORD PTR [rsp+0x50]
   14000a61c:	mov    rax,QWORD PTR [rax+0x8]
   14000a620:	jmp    0x14000a6b7
   14000a625:	movsxd rax,DWORD PTR [rsp+0x20]
   14000a62a:	mov    rcx,rax
   14000a62d:	call   QWORD PTR [rip+0x1bcc5]        # 0x1400262f8
   14000a633:	mov    QWORD PTR [rsp+0x28],rax
   14000a638:	cmp    QWORD PTR [rsp+0x28],0x0
   14000a63e:	jne    0x14000a65d
   14000a640:	lea    rax,[rip+0x214a1]        # 0x14002bae8
   14000a647:	mov    QWORD PTR [rsp+0x30],rax
   14000a64c:	lea    rdx,[rip+0x2e175]        # 0x1400387c8
   14000a653:	lea    rcx,[rsp+0x30]
   14000a658:	call   0x14002193a
   14000a65d:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a662:	call   0x14000a540
   14000a667:	inc    eax
   14000a669:	cdqe   
   14000a66b:	movsxd rcx,DWORD PTR [rsp+0x58]
   14000a670:	mov    r9,rax
   14000a673:	mov    rax,QWORD PTR [rsp+0x50]
   14000a678:	mov    r8,QWORD PTR [rax+0x8]
   14000a67c:	mov    rdx,rcx
   14000a67f:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a684:	call   QWORD PTR [rip+0x1bc2e]        # 0x1400262b8
   14000a68a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a68f:	call   0x14000a9d0
   14000a694:	mov    rax,QWORD PTR [rsp+0x50]
   14000a699:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a69e:	mov    QWORD PTR [rax+0x8],rcx
   14000a6a2:	mov    rax,QWORD PTR [rsp+0x50]
   14000a6a7:	mov    ecx,DWORD PTR [rsp+0x20]
   14000a6ab:	mov    DWORD PTR [rax+0x10],ecx
   14000a6ae:	mov    rax,QWORD PTR [rsp+0x50]
   14000a6b3:	mov    rax,QWORD PTR [rax+0x8]
   14000a6b7:	add    rsp,0x48
   14000a6bb:	ret    
   14000a6bc:	int3   
   14000a6bd:	int3   
   14000a6be:	int3   
   14000a6bf:	int3   
   14000a6c0:	int3   
   14000a6c1:	int3   
   14000a6c2:	int3   
   14000a6c3:	int3   
   14000a6c4:	int3   
   14000a6c5:	int3   
   14000a6c6:	int3   
   14000a6c7:	int3   
   14000a6c8:	int3   
   14000a6c9:	int3   
   14000a6ca:	int3   
   14000a6cb:	int3   
   14000a6cc:	int3   
   14000a6cd:	int3   
   14000a6ce:	int3   
   14000a6cf:	int3   
   14000a6d0:	mov    DWORD PTR [rsp+0x10],edx
   14000a6d4:	mov    QWORD PTR [rsp+0x8],rcx
   14000a6d9:	sub    rsp,0x28
   14000a6dd:	cmp    DWORD PTR [rsp+0x38],0xffffffff
   14000a6e2:	jne    0x14000a6f2
   14000a6e4:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a6e9:	call   0x14000a540
   14000a6ee:	mov    DWORD PTR [rsp+0x38],eax
   14000a6f2:	movsxd rax,DWORD PTR [rsp+0x38]
   14000a6f7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a6fc:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a700:	xor    edx,edx
   14000a702:	mov    WORD PTR [rcx+rax*2],dx
   14000a706:	add    rsp,0x28
   14000a70a:	ret    
   14000a70b:	int3   
   14000a70c:	int3   
   14000a70d:	int3   
   14000a70e:	int3   
   14000a70f:	int3   
   14000a710:	int3   
   14000a711:	int3   
   14000a712:	int3   
   14000a713:	int3   
   14000a714:	int3   
   14000a715:	int3   
   14000a716:	int3   
   14000a717:	int3   
   14000a718:	int3   
   14000a719:	int3   
   14000a71a:	int3   
   14000a71b:	int3   
   14000a71c:	int3   
   14000a71d:	int3   
   14000a71e:	int3   
   14000a71f:	int3   
   14000a720:	mov    QWORD PTR [rsp+0x8],rcx
   14000a725:	sub    rsp,0x28
   14000a729:	mov    rax,QWORD PTR [rsp+0x30]
   14000a72e:	mov    rcx,QWORD PTR [rax+0x8]
   14000a732:	call   QWORD PTR [rip+0x1bb60]        # 0x140026298
   14000a738:	add    rsp,0x28
   14000a73c:	ret    
   14000a73d:	int3   
   14000a73e:	int3   
   14000a73f:	int3   
   14000a740:	int3   
   14000a741:	int3   
   14000a742:	int3   
   14000a743:	int3   
   14000a744:	int3   
   14000a745:	int3   
   14000a746:	int3   
   14000a747:	int3   
   14000a748:	int3   
   14000a749:	int3   
   14000a74a:	int3   
   14000a74b:	int3   
   14000a74c:	int3   
   14000a74d:	int3   
   14000a74e:	int3   
   14000a74f:	int3   
   14000a750:	mov    QWORD PTR [rsp+0x8],rcx
   14000a755:	sub    rsp,0x28
   14000a759:	mov    rax,QWORD PTR [rsp+0x30]
   14000a75e:	movsxd rax,DWORD PTR [rax+0x10]
   14000a762:	xor    edx,edx
   14000a764:	mov    ecx,0x2
   14000a769:	div    rcx
   14000a76c:	mov    rdx,rax
   14000a76f:	mov    rax,QWORD PTR [rsp+0x30]
   14000a774:	mov    rcx,QWORD PTR [rax+0x8]
   14000a778:	call   QWORD PTR [rip+0x1bb0a]        # 0x140026288
   14000a77e:	add    rsp,0x28
   14000a782:	ret    
   14000a783:	int3   
   14000a784:	int3   
   14000a785:	int3   
   14000a786:	int3   
   14000a787:	int3   
   14000a788:	int3   
   14000a789:	int3   
   14000a78a:	int3   
   14000a78b:	int3   
   14000a78c:	int3   
   14000a78d:	int3   
   14000a78e:	int3   
   14000a78f:	int3   
   14000a790:	mov    QWORD PTR [rsp+0x8],rcx
   14000a795:	sub    rsp,0x28
   14000a799:	mov    rax,QWORD PTR [rsp+0x30]
   14000a79e:	movsxd rax,DWORD PTR [rax+0x10]
   14000a7a2:	xor    edx,edx
   14000a7a4:	mov    ecx,0x2
   14000a7a9:	div    rcx
   14000a7ac:	mov    rdx,rax
   14000a7af:	mov    rax,QWORD PTR [rsp+0x30]
   14000a7b4:	mov    rcx,QWORD PTR [rax+0x8]
   14000a7b8:	call   QWORD PTR [rip+0x1bad2]        # 0x140026290
   14000a7be:	add    rsp,0x28
   14000a7c2:	ret    
   14000a7c3:	int3   
   14000a7c4:	int3   
   14000a7c5:	int3   
   14000a7c6:	int3   
   14000a7c7:	int3   
   14000a7c8:	int3   
   14000a7c9:	int3   
   14000a7ca:	int3   
   14000a7cb:	int3   
   14000a7cc:	int3   
   14000a7cd:	int3   
   14000a7ce:	int3   
   14000a7cf:	int3   
   14000a7d0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a7d5:	sub    rsp,0x58
   14000a7d9:	mov    rax,QWORD PTR [rsp+0x60]
   14000a7de:	mov    rax,QWORD PTR [rax+0x8]
   14000a7e2:	mov    QWORD PTR [rsp+0x28],rax
   14000a7e7:	mov    rax,QWORD PTR [rsp+0x28]
   14000a7ec:	movzx  eax,WORD PTR [rax]
   14000a7ef:	cmp    eax,0xa
   14000a7f2:	je     0x14000a80e
   14000a7f4:	mov    rax,QWORD PTR [rsp+0x28]
   14000a7f9:	movzx  eax,WORD PTR [rax]
   14000a7fc:	cmp    eax,0x9
   14000a7ff:	je     0x14000a80e
   14000a801:	mov    rax,QWORD PTR [rsp+0x28]
   14000a806:	movzx  eax,WORD PTR [rax]
   14000a809:	cmp    eax,0x20
   14000a80c:	jne    0x14000a81e
   14000a80e:	mov    rax,QWORD PTR [rsp+0x28]
   14000a813:	add    rax,0x2
   14000a817:	mov    QWORD PTR [rsp+0x28],rax
   14000a81c:	jmp    0x14000a7e7
   14000a81e:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a823:	call   QWORD PTR [rip+0x1bb27]        # 0x140026350
   14000a829:	lea    rax,[rax+rax*1+0x2]
   14000a82e:	mov    DWORD PTR [rsp+0x20],eax
   14000a832:	movsxd rax,DWORD PTR [rsp+0x20]
   14000a837:	mov    rcx,rax
   14000a83a:	call   QWORD PTR [rip+0x1bab8]        # 0x1400262f8
   14000a840:	mov    QWORD PTR [rsp+0x30],rax
   14000a845:	cmp    QWORD PTR [rsp+0x30],0x0
   14000a84b:	jne    0x14000a86a
   14000a84d:	lea    rax,[rip+0x211a4]        # 0x14002b9f8
   14000a854:	mov    QWORD PTR [rsp+0x38],rax
   14000a859:	lea    rdx,[rip+0x2df68]        # 0x1400387c8
   14000a860:	lea    rcx,[rsp+0x38]
   14000a865:	call   0x14002193a
   14000a86a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a86f:	call   QWORD PTR [rip+0x1badb]        # 0x140026350
   14000a875:	inc    rax
   14000a878:	mov    QWORD PTR [rsp+0x40],rax
   14000a87d:	movsxd rcx,DWORD PTR [rsp+0x20]
   14000a882:	xor    edx,edx
   14000a884:	mov    rax,rcx
   14000a887:	mov    ecx,0x2
   14000a88c:	div    rcx
   14000a88f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a894:	mov    r9,rcx
   14000a897:	mov    r8,QWORD PTR [rsp+0x28]
   14000a89c:	mov    rdx,rax
   14000a89f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a8a4:	call   QWORD PTR [rip+0x1ba0e]        # 0x1400262b8
   14000a8aa:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a8af:	call   0x14000a9d0
   14000a8b4:	mov    rax,QWORD PTR [rsp+0x60]
   14000a8b9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a8be:	mov    QWORD PTR [rax+0x8],rcx
   14000a8c2:	mov    rax,QWORD PTR [rsp+0x60]
   14000a8c7:	mov    ecx,DWORD PTR [rsp+0x20]
   14000a8cb:	mov    DWORD PTR [rax+0x10],ecx
   14000a8ce:	add    rsp,0x58
   14000a8d2:	ret    
   14000a8d3:	int3   
   14000a8d4:	int3   
   14000a8d5:	int3   
   14000a8d6:	int3   
   14000a8d7:	int3   
   14000a8d8:	int3   
   14000a8d9:	int3   
   14000a8da:	int3   
   14000a8db:	int3   
   14000a8dc:	int3   
   14000a8dd:	int3   
   14000a8de:	int3   
   14000a8df:	int3   
   14000a8e0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a8e5:	sub    rsp,0x38
   14000a8e9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a8ee:	call   0x14000a540
   14000a8f3:	test   eax,eax
   14000a8f5:	jle    0x14000a957
   14000a8f7:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a8fc:	call   0x14000a540
   14000a901:	cdqe   
   14000a903:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a908:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a90c:	lea    rax,[rcx+rax*2-0x2]
   14000a911:	mov    QWORD PTR [rsp+0x20],rax
   14000a916:	mov    rax,QWORD PTR [rsp+0x20]
   14000a91b:	movzx  eax,WORD PTR [rax]
   14000a91e:	cmp    eax,0xa
   14000a921:	je     0x14000a93d
   14000a923:	mov    rax,QWORD PTR [rsp+0x20]
   14000a928:	movzx  eax,WORD PTR [rax]
   14000a92b:	cmp    eax,0x9
   14000a92e:	je     0x14000a93d
   14000a930:	mov    rax,QWORD PTR [rsp+0x20]
   14000a935:	movzx  eax,WORD PTR [rax]
   14000a938:	cmp    eax,0x20
   14000a93b:	jne    0x14000a957
   14000a93d:	xor    eax,eax
   14000a93f:	mov    rcx,QWORD PTR [rsp+0x20]
   14000a944:	mov    WORD PTR [rcx],ax
   14000a947:	mov    rax,QWORD PTR [rsp+0x20]
   14000a94c:	sub    rax,0x2
   14000a950:	mov    QWORD PTR [rsp+0x20],rax
   14000a955:	jmp    0x14000a916
   14000a957:	add    rsp,0x38
   14000a95b:	ret    
   14000a95c:	int3   
   14000a95d:	int3   
   14000a95e:	int3   
   14000a95f:	int3   
   14000a960:	int3   
   14000a961:	int3   
   14000a962:	int3   
   14000a963:	int3   
   14000a964:	int3   
   14000a965:	int3   
   14000a966:	int3   
   14000a967:	int3   
   14000a968:	int3   
   14000a969:	int3   
   14000a96a:	int3   
   14000a96b:	int3   
   14000a96c:	int3   
   14000a96d:	int3   
   14000a96e:	int3   
   14000a96f:	int3   
   14000a970:	mov    QWORD PTR [rsp+0x8],rcx
   14000a975:	sub    rsp,0x28
   14000a979:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a97e:	call   0x14000a7d0
   14000a983:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a988:	call   0x14000a8e0
   14000a98d:	add    rsp,0x28
   14000a991:	ret    
   14000a992:	int3   
   14000a993:	int3   
   14000a994:	int3   
   14000a995:	int3   
   14000a996:	int3   
   14000a997:	int3   
   14000a998:	int3   
   14000a999:	int3   
   14000a99a:	int3   
   14000a99b:	int3   
   14000a99c:	int3   
   14000a99d:	int3   
   14000a99e:	int3   
   14000a99f:	int3   
   14000a9a0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a9a5:	sub    rsp,0x28
   14000a9a9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a9ae:	call   0x14000a970
   14000a9b3:	mov    rax,QWORD PTR [rsp+0x30]
   14000a9b8:	add    rsp,0x28
   14000a9bc:	ret    
   14000a9bd:	int3   
   14000a9be:	int3   
   14000a9bf:	int3   
   14000a9c0:	int3   
   14000a9c1:	int3   
   14000a9c2:	int3   
   14000a9c3:	int3   
   14000a9c4:	int3   
   14000a9c5:	int3   
   14000a9c6:	int3   
   14000a9c7:	int3   
   14000a9c8:	int3   
   14000a9c9:	int3   
   14000a9ca:	int3   
   14000a9cb:	int3   
   14000a9cc:	int3   
   14000a9cd:	int3   
   14000a9ce:	int3   
   14000a9cf:	int3   
   14000a9d0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a9d5:	sub    rsp,0x28
   14000a9d9:	mov    rax,QWORD PTR [rsp+0x30]
   14000a9de:	cmp    QWORD PTR [rax+0x8],0x0
   14000a9e3:	je     0x14000aa06
   14000a9e5:	mov    rax,QWORD PTR [rsp+0x30]
   14000a9ea:	mov    rcx,QWORD PTR [rip+0x307bf]        # 0x14003b1b0
   14000a9f1:	cmp    QWORD PTR [rax+0x8],rcx
   14000a9f5:	je     0x14000aa06
   14000a9f7:	mov    rax,QWORD PTR [rsp+0x30]
   14000a9fc:	mov    rcx,QWORD PTR [rax+0x8]
   14000aa00:	call   QWORD PTR [rip+0x1b99a]        # 0x1400263a0
   14000aa06:	mov    rax,QWORD PTR [rsp+0x30]
   14000aa0b:	mov    rcx,QWORD PTR [rip+0x3079e]        # 0x14003b1b0
   14000aa12:	mov    QWORD PTR [rax+0x8],rcx
   14000aa16:	mov    rax,QWORD PTR [rsp+0x30]
   14000aa1b:	mov    DWORD PTR [rax+0x10],0x0
   14000aa22:	add    rsp,0x28
   14000aa26:	ret    
   14000aa27:	int3   
   14000aa28:	int3   
   14000aa29:	int3   
   14000aa2a:	int3   
   14000aa2b:	int3   
   14000aa2c:	int3   
   14000aa2d:	int3   
   14000aa2e:	int3   
   14000aa2f:	int3   
   14000aa30:	mov    QWORD PTR [rsp+0x10],rdx
   14000aa35:	mov    QWORD PTR [rsp+0x8],rcx
   14000aa3a:	mov    eax,0x1
   14000aa3f:	ret    
   14000aa40:	int3   
   14000aa41:	int3   
   14000aa42:	int3   
   14000aa43:	int3   
   14000aa44:	int3   
   14000aa45:	int3   
   14000aa46:	int3   
   14000aa47:	int3   
   14000aa48:	int3   
   14000aa49:	int3   
   14000aa4a:	int3   
   14000aa4b:	int3   
   14000aa4c:	int3   
   14000aa4d:	int3   
   14000aa4e:	int3   
   14000aa4f:	int3   
   14000aa50:	mov    QWORD PTR [rsp+0x10],rdx
   14000aa55:	mov    QWORD PTR [rsp+0x8],rcx
   14000aa5a:	mov    QWORD PTR [rsp+0x18],r8
   14000aa5f:	mov    QWORD PTR [rsp+0x20],r9
   14000aa64:	sub    rsp,0x38
   14000aa68:	lea    rax,[rsp+0x50]
   14000aa6d:	mov    QWORD PTR [rsp+0x20],rax
   14000aa72:	mov    r8,QWORD PTR [rsp+0x20]
   14000aa77:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aa7c:	mov    rcx,QWORD PTR [rsp+0x40]
   14000aa81:	call   0x14000b770
   14000aa86:	mov    QWORD PTR [rsp+0x20],0x0
   14000aa8f:	add    rsp,0x38
   14000aa93:	ret    
   14000aa94:	int3   
   14000aa95:	int3   
   14000aa96:	int3   
   14000aa97:	int3   
   14000aa98:	int3   
   14000aa99:	int3   
   14000aa9a:	int3   
   14000aa9b:	int3   
   14000aa9c:	int3   
   14000aa9d:	int3   
   14000aa9e:	int3   
   14000aa9f:	int3   
   14000aaa0:	mov    WORD PTR [rsp+0x10],dx
   14000aaa5:	mov    QWORD PTR [rsp+0x8],rcx
   14000aaaa:	sub    rsp,0x38
   14000aaae:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000aab6:	movzx  edx,WORD PTR [rsp+0x48]
   14000aabb:	mov    rax,QWORD PTR [rsp+0x40]
   14000aac0:	mov    rcx,QWORD PTR [rax+0x8]
   14000aac4:	call   0x14000b830
   14000aac9:	mov    QWORD PTR [rsp+0x28],rax
   14000aace:	cmp    QWORD PTR [rsp+0x28],0x0
   14000aad4:	je     0x14000aaf1
   14000aad6:	mov    rax,QWORD PTR [rsp+0x40]
   14000aadb:	mov    rax,QWORD PTR [rax+0x8]
   14000aadf:	mov    rcx,QWORD PTR [rsp+0x28]
   14000aae4:	sub    rcx,rax
   14000aae7:	mov    rax,rcx
   14000aaea:	sar    rax,1
   14000aaed:	mov    DWORD PTR [rsp+0x20],eax
   14000aaf1:	mov    eax,DWORD PTR [rsp+0x20]
   14000aaf5:	add    rsp,0x38
   14000aaf9:	ret    
   14000aafa:	int3   
   14000aafb:	int3   
   14000aafc:	int3   
   14000aafd:	int3   
   14000aafe:	int3   
   14000aaff:	int3   
   14000ab00:	mov    QWORD PTR [rsp+0x10],rdx
   14000ab05:	mov    QWORD PTR [rsp+0x8],rcx
   14000ab0a:	sub    rsp,0x38
   14000ab0e:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   14000ab17:	mov    rdx,QWORD PTR [rsp+0x48]
   14000ab1c:	mov    rax,QWORD PTR [rsp+0x40]
   14000ab21:	mov    rcx,QWORD PTR [rax+0x8]
   14000ab25:	call   0x14000b890
   14000ab2a:	mov    QWORD PTR [rsp+0x20],rax
   14000ab2f:	cmp    QWORD PTR [rsp+0x20],0x0
   14000ab35:	je     0x14000ab53
   14000ab37:	mov    rax,QWORD PTR [rsp+0x40]
   14000ab3c:	mov    rax,QWORD PTR [rax+0x8]
   14000ab40:	mov    rcx,QWORD PTR [rsp+0x20]
   14000ab45:	sub    rcx,rax
   14000ab48:	mov    rax,rcx
   14000ab4b:	sar    rax,1
   14000ab4e:	mov    QWORD PTR [rsp+0x28],rax
   14000ab53:	mov    eax,DWORD PTR [rsp+0x28]
   14000ab57:	add    rsp,0x38
   14000ab5b:	ret    
   14000ab5c:	int3   
   14000ab5d:	int3   
   14000ab5e:	int3   
   14000ab5f:	int3   
   14000ab60:	int3   
   14000ab61:	int3   
   14000ab62:	int3   
   14000ab63:	int3   
   14000ab64:	int3   
   14000ab65:	int3   
   14000ab66:	int3   
   14000ab67:	int3   
   14000ab68:	int3   
   14000ab69:	int3   
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	mov    DWORD PTR [rsp+0x18],r8d
   14000ab75:	mov    WORD PTR [rsp+0x10],dx
   14000ab7a:	mov    QWORD PTR [rsp+0x8],rcx
   14000ab7f:	sub    rsp,0x38
   14000ab83:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ab8b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ab90:	call   0x14000a540
   14000ab95:	cmp    DWORD PTR [rsp+0x50],eax
   14000ab99:	jge    0x14000abe2
   14000ab9b:	movsxd rax,DWORD PTR [rsp+0x50]
   14000aba0:	mov    rcx,QWORD PTR [rsp+0x40]
   14000aba5:	mov    rcx,QWORD PTR [rcx+0x8]
   14000aba9:	lea    rax,[rcx+rax*2]
   14000abad:	movzx  edx,WORD PTR [rsp+0x48]
   14000abb2:	mov    rcx,rax
   14000abb5:	call   0x14000b830
   14000abba:	mov    QWORD PTR [rsp+0x28],rax
   14000abbf:	cmp    QWORD PTR [rsp+0x28],0x0
   14000abc5:	je     0x14000abe2
   14000abc7:	mov    rax,QWORD PTR [rsp+0x40]
   14000abcc:	mov    rax,QWORD PTR [rax+0x8]
   14000abd0:	mov    rcx,QWORD PTR [rsp+0x28]
   14000abd5:	sub    rcx,rax
   14000abd8:	mov    rax,rcx
   14000abdb:	sar    rax,1
   14000abde:	mov    DWORD PTR [rsp+0x20],eax
   14000abe2:	mov    eax,DWORD PTR [rsp+0x20]
   14000abe6:	add    rsp,0x38
   14000abea:	ret    
   14000abeb:	int3   
   14000abec:	int3   
   14000abed:	int3   
   14000abee:	int3   
   14000abef:	int3   
   14000abf0:	int3   
   14000abf1:	int3   
   14000abf2:	int3   
   14000abf3:	int3   
   14000abf4:	int3   
   14000abf5:	int3   
   14000abf6:	int3   
   14000abf7:	int3   
   14000abf8:	int3   
   14000abf9:	int3   
   14000abfa:	int3   
   14000abfb:	int3   
   14000abfc:	int3   
   14000abfd:	int3   
   14000abfe:	int3   
   14000abff:	int3   
   14000ac00:	mov    DWORD PTR [rsp+0x18],r8d
   14000ac05:	mov    QWORD PTR [rsp+0x10],rdx
   14000ac0a:	mov    QWORD PTR [rsp+0x8],rcx
   14000ac0f:	sub    rsp,0x38
   14000ac13:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ac1b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ac20:	call   0x14000a540
   14000ac25:	cmp    DWORD PTR [rsp+0x50],eax
   14000ac29:	jge    0x14000ac72
   14000ac2b:	movsxd rax,DWORD PTR [rsp+0x50]
   14000ac30:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ac35:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ac39:	lea    rax,[rcx+rax*2]
   14000ac3d:	mov    rdx,QWORD PTR [rsp+0x48]
   14000ac42:	mov    rcx,rax
   14000ac45:	call   0x14000b890
   14000ac4a:	mov    QWORD PTR [rsp+0x28],rax
   14000ac4f:	cmp    QWORD PTR [rsp+0x28],0x0
   14000ac55:	je     0x14000ac72
   14000ac57:	mov    rax,QWORD PTR [rsp+0x40]
   14000ac5c:	mov    rax,QWORD PTR [rax+0x8]
   14000ac60:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ac65:	sub    rcx,rax
   14000ac68:	mov    rax,rcx
   14000ac6b:	sar    rax,1
   14000ac6e:	mov    DWORD PTR [rsp+0x20],eax
   14000ac72:	mov    eax,DWORD PTR [rsp+0x20]
   14000ac76:	add    rsp,0x38
   14000ac7a:	ret    
   14000ac7b:	int3   
   14000ac7c:	int3   
   14000ac7d:	int3   
   14000ac7e:	int3   
   14000ac7f:	int3   
   14000ac80:	int3   
   14000ac81:	int3   
   14000ac82:	int3   
   14000ac83:	int3   
   14000ac84:	int3   
   14000ac85:	int3   
   14000ac86:	int3   
   14000ac87:	int3   
   14000ac88:	int3   
   14000ac89:	int3   
   14000ac8a:	int3   
   14000ac8b:	int3   
   14000ac8c:	int3   
   14000ac8d:	int3   
   14000ac8e:	int3   
   14000ac8f:	int3   
   14000ac90:	mov    WORD PTR [rsp+0x10],dx
   14000ac95:	mov    QWORD PTR [rsp+0x8],rcx
   14000ac9a:	sub    rsp,0x38
   14000ac9e:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000aca6:	movzx  edx,WORD PTR [rsp+0x48]
   14000acab:	mov    rax,QWORD PTR [rsp+0x40]
   14000acb0:	mov    rcx,QWORD PTR [rax+0x8]
   14000acb4:	call   0x14000b860
   14000acb9:	mov    QWORD PTR [rsp+0x28],rax
   14000acbe:	cmp    QWORD PTR [rsp+0x28],0x0
   14000acc4:	je     0x14000ace1
   14000acc6:	mov    rax,QWORD PTR [rsp+0x40]
   14000accb:	mov    rax,QWORD PTR [rax+0x8]
   14000accf:	mov    rcx,QWORD PTR [rsp+0x28]
   14000acd4:	sub    rcx,rax
   14000acd7:	mov    rax,rcx
   14000acda:	sar    rax,1
   14000acdd:	mov    DWORD PTR [rsp+0x20],eax
   14000ace1:	mov    eax,DWORD PTR [rsp+0x20]
   14000ace5:	add    rsp,0x38
   14000ace9:	ret    
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	int3   
   14000aced:	int3   
   14000acee:	int3   
   14000acef:	int3   
   14000acf0:	mov    QWORD PTR [rsp+0x10],rdx
   14000acf5:	mov    QWORD PTR [rsp+0x8],rcx
   14000acfa:	sub    rsp,0x28
   14000acfe:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ad03:	mov    rax,QWORD PTR [rsp+0x30]
   14000ad08:	mov    rcx,QWORD PTR [rax+0x8]
   14000ad0c:	call   QWORD PTR [rip+0x1b5ae]        # 0x1400262c0
   14000ad12:	add    rsp,0x28
   14000ad16:	ret    
   14000ad17:	int3   
   14000ad18:	int3   
   14000ad19:	int3   
   14000ad1a:	int3   
   14000ad1b:	int3   
   14000ad1c:	int3   
   14000ad1d:	int3   
   14000ad1e:	int3   
   14000ad1f:	int3   
   14000ad20:	mov    QWORD PTR [rsp+0x8],rcx
   14000ad25:	sub    rsp,0x38
   14000ad29:	mov    rax,QWORD PTR [rsp+0x40]
   14000ad2e:	cmp    QWORD PTR [rax+0x8],0x0
   14000ad33:	je     0x14000ad4d
   14000ad35:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ad3a:	call   0x14000a540
   14000ad3f:	test   eax,eax
   14000ad41:	je     0x14000ad4d
   14000ad43:	mov    DWORD PTR [rsp+0x20],0x0
   14000ad4b:	jmp    0x14000ad55
   14000ad4d:	mov    DWORD PTR [rsp+0x20],0x1
   14000ad55:	mov    eax,DWORD PTR [rsp+0x20]
   14000ad59:	add    rsp,0x38
   14000ad5d:	ret    
   14000ad5e:	int3   
   14000ad5f:	int3   
   14000ad60:	int3   
   14000ad61:	int3   
   14000ad62:	int3   
   14000ad63:	int3   
   14000ad64:	int3   
   14000ad65:	int3   
   14000ad66:	int3   
   14000ad67:	int3   
   14000ad68:	int3   
   14000ad69:	int3   
   14000ad6a:	int3   
   14000ad6b:	int3   
   14000ad6c:	int3   
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	mov    QWORD PTR [rsp+0x10],rdx
   14000ad75:	mov    QWORD PTR [rsp+0x8],rcx
   14000ad7a:	sub    rsp,0x28
   14000ad7e:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ad83:	mov    rax,QWORD PTR [rsp+0x30]
   14000ad88:	mov    rcx,QWORD PTR [rax+0x8]
   14000ad8c:	call   QWORD PTR [rip+0x1b536]        # 0x1400262c8
   14000ad92:	add    rsp,0x28
   14000ad96:	ret    
   14000ad97:	int3   
   14000ad98:	int3   
   14000ad99:	int3   
   14000ad9a:	int3   
   14000ad9b:	int3   
   14000ad9c:	int3   
   14000ad9d:	int3   
   14000ad9e:	int3   
   14000ad9f:	int3   
   14000ada0:	mov    QWORD PTR [rsp+0x10],rdx
   14000ada5:	mov    QWORD PTR [rsp+0x8],rcx
   14000adaa:	sub    rsp,0x68
   14000adae:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000adb7:	mov    rdx,QWORD PTR [rsp+0x70]
   14000adbc:	lea    rcx,[rsp+0x48]
   14000adc1:	call   0x140009e90
   14000adc6:	nop
   14000adc7:	lea    rcx,[rsp+0x48]
   14000adcc:	call   0x14000a790
   14000add1:	mov    rdx,QWORD PTR [rsp+0x78]
   14000add6:	lea    rcx,[rsp+0x30]
   14000addb:	call   0x140009f20
   14000ade0:	nop
   14000ade1:	lea    rcx,[rsp+0x30]
   14000ade6:	call   0x14000a790
   14000adeb:	lea    rcx,[rsp+0x30]
   14000adf0:	call   0x14000a540
   14000adf5:	mov    edx,eax
   14000adf7:	lea    rcx,[rsp+0x30]
   14000adfc:	call   0x14000a5f0
   14000ae01:	mov    rdx,rax
   14000ae04:	lea    rcx,[rsp+0x48]
   14000ae09:	call   0x14000ad70
   14000ae0e:	mov    DWORD PTR [rsp+0x20],eax
   14000ae12:	lea    rcx,[rsp+0x30]
   14000ae17:	call   0x140009e60
   14000ae1c:	nop
   14000ae1d:	lea    rcx,[rsp+0x48]
   14000ae22:	call   0x140009e60
   14000ae27:	mov    eax,DWORD PTR [rsp+0x20]
   14000ae2b:	add    rsp,0x68
   14000ae2f:	ret    
   14000ae30:	int3   
   14000ae31:	int3   
   14000ae32:	int3   
   14000ae33:	int3   
   14000ae34:	int3   
   14000ae35:	int3   
   14000ae36:	int3   
   14000ae37:	int3   
   14000ae38:	int3   
   14000ae39:	int3   
   14000ae3a:	int3   
   14000ae3b:	int3   
   14000ae3c:	int3   
   14000ae3d:	int3   
   14000ae3e:	int3   
   14000ae3f:	int3   
   14000ae40:	mov    DWORD PTR [rsp+0x18],r8d
   14000ae45:	mov    QWORD PTR [rsp+0x10],rdx
   14000ae4a:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae4f:	sub    rsp,0x58
   14000ae53:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000ae5c:	mov    DWORD PTR [rsp+0x20],0x0
   14000ae64:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ae69:	call   0x14000a540
   14000ae6e:	cmp    DWORD PTR [rsp+0x70],eax
   14000ae72:	jle    0x14000ae82
   14000ae74:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ae79:	call   0x14000a540
   14000ae7e:	mov    DWORD PTR [rsp+0x70],eax
   14000ae82:	mov    rax,QWORD PTR [rsp+0x60]
   14000ae87:	mov    rcx,QWORD PTR [rax+0x8]
   14000ae8b:	call   QWORD PTR [rip+0x1b44f]        # 0x1400262e0
   14000ae91:	mov    QWORD PTR [rsp+0x28],rax
   14000ae96:	movsxd rax,DWORD PTR [rsp+0x70]
   14000ae9b:	xor    ecx,ecx
   14000ae9d:	mov    rdx,QWORD PTR [rsp+0x28]
   14000aea2:	mov    WORD PTR [rdx+rax*2],cx
   14000aea6:	mov    rdx,QWORD PTR [rsp+0x28]
   14000aeab:	lea    rcx,[rsp+0x38]
   14000aeb0:	call   0x140009f20
   14000aeb5:	nop
   14000aeb6:	mov    rcx,QWORD PTR [rsp+0x28]
   14000aebb:	call   QWORD PTR [rip+0x1b4df]        # 0x1400263a0
   14000aec1:	lea    rdx,[rsp+0x38]
   14000aec6:	mov    rcx,QWORD PTR [rsp+0x68]
   14000aecb:	call   0x140009e90
   14000aed0:	mov    eax,DWORD PTR [rsp+0x20]
   14000aed4:	or     eax,0x1
   14000aed7:	mov    DWORD PTR [rsp+0x20],eax
   14000aedb:	lea    rcx,[rsp+0x38]
   14000aee0:	call   0x140009e60
   14000aee5:	mov    rax,QWORD PTR [rsp+0x68]
   14000aeea:	add    rsp,0x58
   14000aeee:	ret    
   14000aeef:	int3   
   14000aef0:	int3   
   14000aef1:	int3   
   14000aef2:	int3   
   14000aef3:	int3   
   14000aef4:	int3   
   14000aef5:	int3   
   14000aef6:	int3   
   14000aef7:	int3   
   14000aef8:	int3   
   14000aef9:	int3   
   14000aefa:	int3   
   14000aefb:	int3   
   14000aefc:	int3   
   14000aefd:	int3   
   14000aefe:	int3   
   14000aeff:	int3   
   14000af00:	mov    QWORD PTR [rsp+0x18],r8
   14000af05:	mov    QWORD PTR [rsp+0x10],rdx
   14000af0a:	mov    QWORD PTR [rsp+0x8],rcx
   14000af0f:	sub    rsp,0x78
   14000af13:	mov    rcx,QWORD PTR [rsp+0x88]
   14000af1b:	call   QWORD PTR [rip+0x1b42f]        # 0x140026350
   14000af21:	mov    DWORD PTR [rsp+0x2c],eax
   14000af25:	cmp    DWORD PTR [rsp+0x2c],0x0
   14000af2a:	jne    0x14000af33
   14000af2c:	xor    eax,eax
   14000af2e:	jmp    0x14000b246
   14000af33:	mov    rcx,QWORD PTR [rsp+0x90]
   14000af3b:	call   QWORD PTR [rip+0x1b40f]        # 0x140026350
   14000af41:	mov    DWORD PTR [rsp+0x34],eax
   14000af45:	mov    DWORD PTR [rsp+0x30],0x0
   14000af4d:	mov    rax,QWORD PTR [rsp+0x80]
   14000af55:	mov    rax,QWORD PTR [rax+0x8]
   14000af59:	mov    QWORD PTR [rsp+0x20],rax
   14000af5e:	mov    rcx,QWORD PTR [rsp+0x80]
   14000af66:	call   0x14000a540
   14000af6b:	cdqe   
   14000af6d:	mov    rcx,QWORD PTR [rsp+0x80]
   14000af75:	mov    rcx,QWORD PTR [rcx+0x8]
   14000af79:	lea    rax,[rcx+rax*2]
   14000af7d:	mov    QWORD PTR [rsp+0x48],rax
   14000af82:	mov    rax,QWORD PTR [rsp+0x48]
   14000af87:	cmp    QWORD PTR [rsp+0x20],rax
   14000af8c:	jae    0x14000afff
   14000af8e:	mov    rdx,QWORD PTR [rsp+0x88]
   14000af96:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af9b:	call   0x14000b890
   14000afa0:	mov    QWORD PTR [rsp+0x38],rax
   14000afa5:	cmp    QWORD PTR [rsp+0x38],0x0
   14000afab:	je     0x14000afe3
   14000afad:	mov    eax,DWORD PTR [rsp+0x30]
   14000afb1:	inc    eax
   14000afb3:	mov    DWORD PTR [rsp+0x30],eax
   14000afb7:	movsxd rax,DWORD PTR [rsp+0x2c]
   14000afbc:	mov    rcx,QWORD PTR [rsp+0x38]
   14000afc1:	lea    rax,[rcx+rax*2]
   14000afc5:	mov    QWORD PTR [rsp+0x20],rax
   14000afca:	mov    rdx,QWORD PTR [rsp+0x88]
   14000afd2:	mov    rcx,QWORD PTR [rsp+0x20]
   14000afd7:	call   0x14000b890
   14000afdc:	mov    QWORD PTR [rsp+0x38],rax
   14000afe1:	jmp    0x14000afa5
   14000afe3:	mov    rcx,QWORD PTR [rsp+0x20]
   14000afe8:	call   QWORD PTR [rip+0x1b362]        # 0x140026350
   14000afee:	mov    rcx,QWORD PTR [rsp+0x20]
   14000aff3:	lea    rax,[rcx+rax*2+0x2]
   14000aff8:	mov    QWORD PTR [rsp+0x20],rax
   14000affd:	jmp    0x14000af82
   14000afff:	cmp    DWORD PTR [rsp+0x30],0x0
   14000b004:	jle    0x14000b242
   14000b00a:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b012:	call   0x14000a540
   14000b017:	mov    DWORD PTR [rsp+0x28],eax
   14000b01b:	mov    eax,DWORD PTR [rsp+0x2c]
   14000b01f:	mov    ecx,DWORD PTR [rsp+0x34]
   14000b023:	sub    ecx,eax
   14000b025:	mov    eax,ecx
   14000b027:	imul   eax,DWORD PTR [rsp+0x30]
   14000b02c:	mov    ecx,DWORD PTR [rsp+0x28]
   14000b030:	lea    eax,[rcx+rax*1+0x1]
   14000b034:	mov    DWORD PTR [rsp+0x40],eax
   14000b038:	mov    eax,DWORD PTR [rsp+0x40]
   14000b03c:	cmp    DWORD PTR [rsp+0x28],eax
   14000b040:	jge    0x14000b0dc
   14000b046:	movsxd rax,DWORD PTR [rsp+0x40]
   14000b04b:	shl    rax,1
   14000b04e:	mov    rcx,rax
   14000b051:	call   QWORD PTR [rip+0x1b2a1]        # 0x1400262f8
   14000b057:	mov    QWORD PTR [rsp+0x50],rax
   14000b05c:	cmp    QWORD PTR [rsp+0x50],0x0
   14000b062:	jne    0x14000b081
   14000b064:	lea    rax,[rip+0x209b5]        # 0x14002ba20
   14000b06b:	mov    QWORD PTR [rsp+0x58],rax
   14000b070:	lea    rdx,[rip+0x2d751]        # 0x1400387c8
   14000b077:	lea    rcx,[rsp+0x58]
   14000b07c:	call   0x14002193a
   14000b081:	mov    eax,DWORD PTR [rsp+0x28]
   14000b085:	inc    eax
   14000b087:	cdqe   
   14000b089:	movsxd rcx,DWORD PTR [rsp+0x40]
   14000b08e:	mov    r9,rax
   14000b091:	mov    rax,QWORD PTR [rsp+0x80]
   14000b099:	mov    r8,QWORD PTR [rax+0x8]
   14000b09d:	mov    rdx,rcx
   14000b0a0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b0a5:	call   QWORD PTR [rip+0x1b20d]        # 0x1400262b8
   14000b0ab:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b0b3:	call   0x14000a9d0
   14000b0b8:	mov    rax,QWORD PTR [rsp+0x80]
   14000b0c0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b0c5:	mov    QWORD PTR [rax+0x8],rcx
   14000b0c9:	movsxd rax,DWORD PTR [rsp+0x40]
   14000b0ce:	shl    rax,1
   14000b0d1:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b0d9:	mov    DWORD PTR [rcx+0x10],eax
   14000b0dc:	mov    rax,QWORD PTR [rsp+0x80]
   14000b0e4:	mov    rax,QWORD PTR [rax+0x8]
   14000b0e8:	mov    QWORD PTR [rsp+0x20],rax
   14000b0ed:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b0f5:	call   0x14000a540
   14000b0fa:	cdqe   
   14000b0fc:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b104:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b108:	lea    rax,[rcx+rax*2]
   14000b10c:	mov    QWORD PTR [rsp+0x48],rax
   14000b111:	mov    rax,QWORD PTR [rsp+0x48]
   14000b116:	cmp    QWORD PTR [rsp+0x20],rax
   14000b11b:	jae    0x14000b242
   14000b121:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b129:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b12e:	call   0x14000b890
   14000b133:	mov    QWORD PTR [rsp+0x38],rax
   14000b138:	cmp    QWORD PTR [rsp+0x38],0x0
   14000b13e:	je     0x14000b223
   14000b144:	movsxd rax,DWORD PTR [rsp+0x28]
   14000b149:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b151:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b155:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b15a:	sub    rdx,rcx
   14000b15d:	mov    rcx,rdx
   14000b160:	sar    rcx,1
   14000b163:	movsxd rdx,DWORD PTR [rsp+0x2c]
   14000b168:	add    rcx,rdx
   14000b16b:	sub    rax,rcx
   14000b16e:	mov    DWORD PTR [rsp+0x44],eax
   14000b172:	movsxd rax,DWORD PTR [rsp+0x44]
   14000b177:	shl    rax,1
   14000b17a:	movsxd rcx,DWORD PTR [rsp+0x2c]
   14000b17f:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b184:	lea    rcx,[rdx+rcx*2]
   14000b188:	movsxd rdx,DWORD PTR [rsp+0x34]
   14000b18d:	mov    r8,QWORD PTR [rsp+0x38]
   14000b192:	lea    rdx,[r8+rdx*2]
   14000b196:	mov    QWORD PTR [rsp+0x60],rdx
   14000b19b:	mov    r8,rax
   14000b19e:	mov    rdx,rcx
   14000b1a1:	mov    rax,QWORD PTR [rsp+0x60]
   14000b1a6:	mov    rcx,rax
   14000b1a9:	call   QWORD PTR [rip+0x1b1e1]        # 0x140026390
   14000b1af:	movsxd rax,DWORD PTR [rsp+0x34]
   14000b1b4:	shl    rax,1
   14000b1b7:	mov    r8,rax
   14000b1ba:	mov    rdx,QWORD PTR [rsp+0x90]
   14000b1c2:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b1c7:	call   0x140021934
   14000b1cc:	movsxd rax,DWORD PTR [rsp+0x34]
   14000b1d1:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b1d6:	lea    rax,[rcx+rax*2]
   14000b1da:	mov    QWORD PTR [rsp+0x20],rax
   14000b1df:	movsxd rax,DWORD PTR [rsp+0x44]
   14000b1e4:	xor    ecx,ecx
   14000b1e6:	mov    rdx,QWORD PTR [rsp+0x20]
   14000b1eb:	mov    WORD PTR [rdx+rax*2],cx
   14000b1ef:	mov    eax,DWORD PTR [rsp+0x2c]
   14000b1f3:	mov    ecx,DWORD PTR [rsp+0x34]
   14000b1f7:	sub    ecx,eax
   14000b1f9:	mov    eax,ecx
   14000b1fb:	mov    ecx,DWORD PTR [rsp+0x28]
   14000b1ff:	add    ecx,eax
   14000b201:	mov    eax,ecx
   14000b203:	mov    DWORD PTR [rsp+0x28],eax
   14000b207:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b20f:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b214:	call   0x14000b890
   14000b219:	mov    QWORD PTR [rsp+0x38],rax
   14000b21e:	jmp    0x14000b138
   14000b223:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b228:	call   QWORD PTR [rip+0x1b122]        # 0x140026350
   14000b22e:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b233:	lea    rax,[rcx+rax*2+0x2]
   14000b238:	mov    QWORD PTR [rsp+0x20],rax
   14000b23d:	jmp    0x14000b111
   14000b242:	mov    eax,DWORD PTR [rsp+0x30]
   14000b246:	add    rsp,0x78
   14000b24a:	ret    
   14000b24b:	int3   
   14000b24c:	int3   
   14000b24d:	int3   
   14000b24e:	int3   
   14000b24f:	int3   
   14000b250:	int3   
   14000b251:	int3   
   14000b252:	int3   
   14000b253:	int3   
   14000b254:	int3   
   14000b255:	int3   
   14000b256:	int3   
   14000b257:	int3   
   14000b258:	int3   
   14000b259:	int3   
   14000b25a:	int3   
   14000b25b:	int3   
   14000b25c:	int3   
   14000b25d:	int3   
   14000b25e:	int3   
   14000b25f:	int3   
   14000b260:	mov    DWORD PTR [rsp+0x18],r8d
   14000b265:	mov    QWORD PTR [rsp+0x10],rdx
   14000b26a:	mov    QWORD PTR [rsp+0x8],rcx
   14000b26f:	sub    rsp,0x68
   14000b273:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000b27c:	mov    DWORD PTR [rsp+0x24],0x0
   14000b284:	lea    rcx,[rsp+0x40]
   14000b289:	call   0x140009e20
   14000b28e:	nop
   14000b28f:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b294:	call   0x14000a540
   14000b299:	cmp    DWORD PTR [rsp+0x80],eax
   14000b2a0:	jle    0x14000b2b3
   14000b2a2:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b2a7:	call   0x14000a540
   14000b2ac:	mov    DWORD PTR [rsp+0x80],eax
   14000b2b3:	cmp    DWORD PTR [rsp+0x80],0x0
   14000b2bb:	jle    0x14000b342
   14000b2c1:	mov    rax,QWORD PTR [rsp+0x70]
   14000b2c6:	mov    rcx,QWORD PTR [rax+0x8]
   14000b2ca:	call   QWORD PTR [rip+0x1b010]        # 0x1400262e0
   14000b2d0:	mov    QWORD PTR [rsp+0x30],rax
   14000b2d5:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b2da:	call   0x14000a540
   14000b2df:	sub    eax,DWORD PTR [rsp+0x80]
   14000b2e6:	dec    eax
   14000b2e8:	mov    DWORD PTR [rsp+0x20],eax
   14000b2ec:	mov    rax,QWORD PTR [rsp+0x30]
   14000b2f1:	mov    QWORD PTR [rsp+0x28],rax
   14000b2f6:	cmp    DWORD PTR [rsp+0x20],0x0
   14000b2fb:	jl     0x14000b328
   14000b2fd:	movsxd rax,DWORD PTR [rsp+0x20]
   14000b302:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b307:	lea    rax,[rcx+rax*2]
   14000b30b:	mov    QWORD PTR [rsp+0x28],rax
   14000b310:	xor    eax,eax
   14000b312:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b317:	mov    WORD PTR [rcx],ax
   14000b31a:	mov    rax,QWORD PTR [rsp+0x28]
   14000b31f:	add    rax,0x2
   14000b323:	mov    QWORD PTR [rsp+0x28],rax
   14000b328:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b32d:	lea    rcx,[rsp+0x40]
   14000b332:	call   0x14000a200
   14000b337:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b33c:	call   QWORD PTR [rip+0x1b05e]        # 0x1400263a0
   14000b342:	lea    rdx,[rsp+0x40]
   14000b347:	mov    rcx,QWORD PTR [rsp+0x78]
   14000b34c:	call   0x140009e90
   14000b351:	mov    eax,DWORD PTR [rsp+0x24]
   14000b355:	or     eax,0x1
   14000b358:	mov    DWORD PTR [rsp+0x24],eax
   14000b35c:	lea    rcx,[rsp+0x40]
   14000b361:	call   0x140009e60
   14000b366:	mov    rax,QWORD PTR [rsp+0x78]
   14000b36b:	add    rsp,0x68
   14000b36f:	ret    
   14000b370:	int3   
   14000b371:	int3   
   14000b372:	int3   
   14000b373:	int3   
   14000b374:	int3   
   14000b375:	int3   
   14000b376:	int3   
   14000b377:	int3   
   14000b378:	int3   
   14000b379:	int3   
   14000b37a:	int3   
   14000b37b:	int3   
   14000b37c:	int3   
   14000b37d:	int3   
   14000b37e:	int3   
   14000b37f:	int3   
   14000b380:	mov    DWORD PTR [rsp+0x18],r8d
   14000b385:	mov    QWORD PTR [rsp+0x10],rdx
   14000b38a:	mov    QWORD PTR [rsp+0x8],rcx
   14000b38f:	sub    rsp,0x38
   14000b393:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000b39c:	mov    DWORD PTR [rsp+0x20],0x0
   14000b3a4:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b3a9:	call   0x14000a540
   14000b3ae:	sub    eax,DWORD PTR [rsp+0x50]
   14000b3b2:	mov    r9d,eax
   14000b3b5:	mov    r8d,DWORD PTR [rsp+0x50]
   14000b3ba:	mov    rdx,QWORD PTR [rsp+0x48]
   14000b3bf:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b3c4:	call   0x14000b3f0
   14000b3c9:	nop
   14000b3ca:	mov    eax,DWORD PTR [rsp+0x20]
   14000b3ce:	or     eax,0x1
   14000b3d1:	mov    DWORD PTR [rsp+0x20],eax
   14000b3d5:	mov    rax,QWORD PTR [rsp+0x48]
   14000b3da:	add    rsp,0x38
   14000b3de:	ret    
   14000b3df:	int3   
   14000b3e0:	int3   
   14000b3e1:	int3   
   14000b3e2:	int3   
   14000b3e3:	int3   
   14000b3e4:	int3   
   14000b3e5:	int3   
   14000b3e6:	int3   
   14000b3e7:	int3   
   14000b3e8:	int3   
   14000b3e9:	int3   
   14000b3ea:	int3   
   14000b3eb:	int3   
   14000b3ec:	int3   
   14000b3ed:	int3   
   14000b3ee:	int3   
   14000b3ef:	int3   
   14000b3f0:	mov    DWORD PTR [rsp+0x20],r9d
   14000b3f5:	mov    DWORD PTR [rsp+0x18],r8d
   14000b3fa:	mov    QWORD PTR [rsp+0x10],rdx
   14000b3ff:	mov    QWORD PTR [rsp+0x8],rcx
   14000b404:	sub    rsp,0x58
   14000b408:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000b411:	mov    DWORD PTR [rsp+0x20],0x0
   14000b419:	lea    rcx,[rsp+0x38]
   14000b41e:	call   0x140009e20
   14000b423:	nop
   14000b424:	cmp    DWORD PTR [rsp+0x70],0x0
   14000b429:	jge    0x14000b433
   14000b42b:	mov    DWORD PTR [rsp+0x70],0x0
   14000b433:	cmp    DWORD PTR [rsp+0x78],0x0
   14000b438:	jge    0x14000b442
   14000b43a:	mov    DWORD PTR [rsp+0x78],0x0
   14000b442:	mov    eax,DWORD PTR [rsp+0x78]
   14000b446:	mov    ecx,DWORD PTR [rsp+0x70]
   14000b44a:	add    ecx,eax
   14000b44c:	mov    eax,ecx
   14000b44e:	mov    DWORD PTR [rsp+0x24],eax
   14000b452:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b457:	call   0x14000a540
   14000b45c:	mov    ecx,DWORD PTR [rsp+0x24]
   14000b460:	cmp    ecx,eax
   14000b462:	jle    0x14000b476
   14000b464:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b469:	call   0x14000a540
   14000b46e:	sub    eax,DWORD PTR [rsp+0x70]
   14000b472:	mov    DWORD PTR [rsp+0x78],eax
   14000b476:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b47b:	call   0x14000a540
   14000b480:	cmp    DWORD PTR [rsp+0x70],eax
   14000b484:	jle    0x14000b48e
   14000b486:	mov    DWORD PTR [rsp+0x78],0x0
   14000b48e:	movsxd rax,DWORD PTR [rsp+0x70]
   14000b493:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b498:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b49c:	lea    rax,[rcx+rax*2]
   14000b4a0:	mov    rcx,rax
   14000b4a3:	call   QWORD PTR [rip+0x1ae37]        # 0x1400262e0
   14000b4a9:	mov    QWORD PTR [rsp+0x28],rax
   14000b4ae:	movsxd rax,DWORD PTR [rsp+0x78]
   14000b4b3:	xor    ecx,ecx
   14000b4b5:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b4ba:	mov    WORD PTR [rdx+rax*2],cx
   14000b4be:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b4c3:	lea    rcx,[rsp+0x38]
   14000b4c8:	call   0x14000a200
   14000b4cd:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b4d2:	call   QWORD PTR [rip+0x1aec8]        # 0x1400263a0
   14000b4d8:	lea    rdx,[rsp+0x38]
   14000b4dd:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b4e2:	call   0x140009e90
   14000b4e7:	mov    eax,DWORD PTR [rsp+0x20]
   14000b4eb:	or     eax,0x1
   14000b4ee:	mov    DWORD PTR [rsp+0x20],eax
   14000b4f2:	lea    rcx,[rsp+0x38]
   14000b4f7:	call   0x140009e60
   14000b4fc:	mov    rax,QWORD PTR [rsp+0x68]
   14000b501:	add    rsp,0x58
   14000b505:	ret    
   14000b506:	int3   
   14000b507:	int3   
   14000b508:	int3   
   14000b509:	int3   
   14000b50a:	int3   
   14000b50b:	int3   
   14000b50c:	int3   
   14000b50d:	int3   
   14000b50e:	int3   
   14000b50f:	int3   
   14000b510:	mov    WORD PTR [rsp+0x10],dx
   14000b515:	mov    QWORD PTR [rsp+0x8],rcx
   14000b51a:	sub    rsp,0x48
   14000b51e:	mov    rax,QWORD PTR [rsp+0x50]
   14000b523:	mov    rax,QWORD PTR [rax+0x8]
   14000b527:	mov    QWORD PTR [rsp+0x28],rax
   14000b52c:	mov    rax,QWORD PTR [rsp+0x50]
   14000b531:	mov    rax,QWORD PTR [rax+0x8]
   14000b535:	mov    QWORD PTR [rsp+0x30],rax
   14000b53a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b53f:	call   0x14000a540
   14000b544:	cdqe   
   14000b546:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b54b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b54f:	lea    rax,[rcx+rax*2]
   14000b553:	mov    QWORD PTR [rsp+0x38],rax
   14000b558:	mov    rax,QWORD PTR [rsp+0x38]
   14000b55d:	cmp    QWORD PTR [rsp+0x28],rax
   14000b562:	jae    0x14000b5a3
   14000b564:	mov    rax,QWORD PTR [rsp+0x28]
   14000b569:	movzx  eax,WORD PTR [rax]
   14000b56c:	movzx  ecx,WORD PTR [rsp+0x58]
   14000b571:	cmp    eax,ecx
   14000b573:	je     0x14000b593
   14000b575:	mov    rax,QWORD PTR [rsp+0x30]
   14000b57a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b57f:	movzx  ecx,WORD PTR [rcx]
   14000b582:	mov    WORD PTR [rax],cx
   14000b585:	mov    rax,QWORD PTR [rsp+0x30]
   14000b58a:	add    rax,0x2
   14000b58e:	mov    QWORD PTR [rsp+0x30],rax
   14000b593:	mov    rax,QWORD PTR [rsp+0x28]
   14000b598:	add    rax,0x2
   14000b59c:	mov    QWORD PTR [rsp+0x28],rax
   14000b5a1:	jmp    0x14000b558
   14000b5a3:	xor    eax,eax
   14000b5a5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b5aa:	mov    WORD PTR [rcx],ax
   14000b5ad:	mov    rax,QWORD PTR [rsp+0x30]
   14000b5b2:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b5b7:	sub    rcx,rax
   14000b5ba:	mov    rax,rcx
   14000b5bd:	sar    rax,1
   14000b5c0:	mov    DWORD PTR [rsp+0x20],eax
   14000b5c4:	mov    eax,DWORD PTR [rsp+0x20]
   14000b5c8:	add    rsp,0x48
   14000b5cc:	ret    
   14000b5cd:	int3   
   14000b5ce:	int3   
   14000b5cf:	int3   
   14000b5d0:	int3   
   14000b5d1:	int3   
   14000b5d2:	int3   
   14000b5d3:	int3   
   14000b5d4:	int3   
   14000b5d5:	int3   
   14000b5d6:	int3   
   14000b5d7:	int3   
   14000b5d8:	int3   
   14000b5d9:	int3   
   14000b5da:	int3   
   14000b5db:	int3   
   14000b5dc:	int3   
   14000b5dd:	int3   
   14000b5de:	int3   
   14000b5df:	int3   
   14000b5e0:	mov    QWORD PTR [rsp+0x18],r8
   14000b5e5:	mov    DWORD PTR [rsp+0x10],edx
   14000b5e9:	mov    QWORD PTR [rsp+0x8],rcx
   14000b5ee:	sub    rsp,0x58
   14000b5f2:	cmp    DWORD PTR [rsp+0x68],0x0
   14000b5f7:	jge    0x14000b601
   14000b5f9:	mov    DWORD PTR [rsp+0x68],0x0
   14000b601:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b606:	call   QWORD PTR [rip+0x1ad44]        # 0x140026350
   14000b60c:	test   rax,rax
   14000b60f:	jbe    0x14000b74d
   14000b615:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b61a:	call   0x14000a540
   14000b61f:	cdqe   
   14000b621:	mov    QWORD PTR [rsp+0x30],rax
   14000b626:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b62b:	call   QWORD PTR [rip+0x1ad1f]        # 0x140026350
   14000b631:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b636:	add    rcx,rax
   14000b639:	mov    rax,rcx
   14000b63c:	lea    rax,[rax+rax*1+0x2]
   14000b641:	mov    DWORD PTR [rsp+0x20],eax
   14000b645:	movsxd rax,DWORD PTR [rsp+0x20]
   14000b64a:	mov    rcx,rax
   14000b64d:	call   QWORD PTR [rip+0x1aca5]        # 0x1400262f8
   14000b653:	mov    QWORD PTR [rsp+0x28],rax
   14000b658:	cmp    QWORD PTR [rsp+0x28],0x0
   14000b65e:	jne    0x14000b67d
   14000b660:	lea    rax,[rip+0x203e1]        # 0x14002ba48
   14000b667:	mov    QWORD PTR [rsp+0x38],rax
   14000b66c:	lea    rdx,[rip+0x2d155]        # 0x1400387c8
   14000b673:	lea    rcx,[rsp+0x38]
   14000b678:	call   0x14002193a
   14000b67d:	movsxd rax,DWORD PTR [rsp+0x68]
   14000b682:	mov    QWORD PTR [rsp+0x40],rax
   14000b687:	movsxd rcx,DWORD PTR [rsp+0x20]
   14000b68c:	xor    edx,edx
   14000b68e:	mov    rax,rcx
   14000b691:	mov    ecx,0x2
   14000b696:	div    rcx
   14000b699:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b69e:	mov    r9,rcx
   14000b6a1:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b6a6:	mov    r8,QWORD PTR [rcx+0x8]
   14000b6aa:	mov    rdx,rax
   14000b6ad:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b6b2:	call   QWORD PTR [rip+0x1ac00]        # 0x1400262b8
   14000b6b8:	movsxd rax,DWORD PTR [rsp+0x68]
   14000b6bd:	xor    ecx,ecx
   14000b6bf:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b6c4:	mov    WORD PTR [rdx+rax*2],cx
   14000b6c8:	movsxd rax,DWORD PTR [rsp+0x20]
   14000b6cd:	xor    edx,edx
   14000b6cf:	mov    ecx,0x2
   14000b6d4:	div    rcx
   14000b6d7:	mov    r8,QWORD PTR [rsp+0x70]
   14000b6dc:	mov    rdx,rax
   14000b6df:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b6e4:	call   QWORD PTR [rip+0x1abee]        # 0x1400262d8
   14000b6ea:	movsxd rax,DWORD PTR [rsp+0x68]
   14000b6ef:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b6f4:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b6f8:	lea    rax,[rcx+rax*2]
   14000b6fc:	mov    QWORD PTR [rsp+0x48],rax
   14000b701:	movsxd rcx,DWORD PTR [rsp+0x20]
   14000b706:	xor    edx,edx
   14000b708:	mov    rax,rcx
   14000b70b:	mov    ecx,0x2
   14000b710:	div    rcx
   14000b713:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b718:	mov    r8,rcx
   14000b71b:	mov    rdx,rax
   14000b71e:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b723:	call   QWORD PTR [rip+0x1abaf]        # 0x1400262d8
   14000b729:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b72e:	call   0x14000a9d0
   14000b733:	mov    rax,QWORD PTR [rsp+0x60]
   14000b738:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b73d:	mov    QWORD PTR [rax+0x8],rcx
   14000b741:	mov    rax,QWORD PTR [rsp+0x60]
   14000b746:	mov    ecx,DWORD PTR [rsp+0x20]
   14000b74a:	mov    DWORD PTR [rax+0x10],ecx
   14000b74d:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b752:	call   0x14000a540
   14000b757:	add    rsp,0x58
   14000b75b:	ret    
   14000b75c:	int3   
   14000b75d:	int3   
   14000b75e:	int3   
   14000b75f:	int3   
   14000b760:	int3   
   14000b761:	int3   
   14000b762:	int3   
   14000b763:	int3   
   14000b764:	int3   
   14000b765:	int3   
   14000b766:	int3   
   14000b767:	int3   
   14000b768:	int3   
   14000b769:	int3   
   14000b76a:	int3   
   14000b76b:	int3   
   14000b76c:	int3   
   14000b76d:	int3   
   14000b76e:	int3   
   14000b76f:	int3   
   14000b770:	mov    QWORD PTR [rsp+0x18],r8
   14000b775:	mov    QWORD PTR [rsp+0x10],rdx
   14000b77a:	mov    QWORD PTR [rsp+0x8],rcx
   14000b77f:	sub    rsp,0x38
   14000b783:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b788:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b78d:	call   QWORD PTR [rip+0x1aae5]        # 0x140026278
   14000b793:	mov    DWORD PTR [rsp+0x20],eax
   14000b797:	mov    eax,DWORD PTR [rsp+0x20]
   14000b79b:	inc    eax
   14000b79d:	mov    edx,eax
   14000b79f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b7a4:	call   0x14000a5f0
   14000b7a9:	mov    QWORD PTR [rsp+0x28],rax
   14000b7ae:	mov    eax,DWORD PTR [rsp+0x20]
   14000b7b2:	inc    eax
   14000b7b4:	cdqe   
   14000b7b6:	mov    r9,QWORD PTR [rsp+0x50]
   14000b7bb:	mov    r8,QWORD PTR [rsp+0x48]
   14000b7c0:	mov    rdx,rax
   14000b7c3:	mov    rcx,QWORD PTR [rsp+0x28]
   14000b7c8:	call   QWORD PTR [rip+0x1aab2]        # 0x140026280
   14000b7ce:	mov    DWORD PTR [rsp+0x24],eax
   14000b7d2:	mov    edx,0xffffffff
   14000b7d7:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b7dc:	call   0x14000a6d0
   14000b7e1:	add    rsp,0x38
   14000b7e5:	ret    
   14000b7e6:	int3   
   14000b7e7:	int3   
   14000b7e8:	int3   
   14000b7e9:	int3   
   14000b7ea:	int3   
   14000b7eb:	int3   
   14000b7ec:	int3   
   14000b7ed:	int3   
   14000b7ee:	int3   
   14000b7ef:	int3   
   14000b7f0:	mov    DWORD PTR [rsp+0x10],edx
   14000b7f4:	mov    QWORD PTR [rsp+0x8],rcx
   14000b7f9:	sub    rsp,0x28
   14000b7fd:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b802:	call   0x140009e60
   14000b807:	mov    eax,DWORD PTR [rsp+0x38]
   14000b80b:	and    eax,0x1
   14000b80e:	test   eax,eax
   14000b810:	je     0x14000b81c
   14000b812:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b817:	call   0x140020b90
   14000b81c:	mov    rax,QWORD PTR [rsp+0x30]
   14000b821:	add    rsp,0x28
   14000b825:	ret    
   14000b826:	int3   
   14000b827:	int3   
   14000b828:	int3   
   14000b829:	int3   
   14000b82a:	int3   
   14000b82b:	int3   
   14000b82c:	int3   
   14000b82d:	int3   
   14000b82e:	int3   
   14000b82f:	int3   
   14000b830:	mov    WORD PTR [rsp+0x10],dx
   14000b835:	mov    QWORD PTR [rsp+0x8],rcx
   14000b83a:	sub    rsp,0x28
   14000b83e:	movzx  edx,WORD PTR [rsp+0x38]
   14000b843:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b848:	call   QWORD PTR [rip+0x1aada]        # 0x140026328
   14000b84e:	add    rsp,0x28
   14000b852:	ret    
   14000b853:	int3   
   14000b854:	int3   
   14000b855:	int3   
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	int3   
   14000b859:	int3   
   14000b85a:	int3   
   14000b85b:	int3   
   14000b85c:	int3   
   14000b85d:	int3   
   14000b85e:	int3   
   14000b85f:	int3   
   14000b860:	mov    WORD PTR [rsp+0x10],dx
   14000b865:	mov    QWORD PTR [rsp+0x8],rcx
   14000b86a:	sub    rsp,0x28
   14000b86e:	movzx  edx,WORD PTR [rsp+0x38]
   14000b873:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b878:	call   QWORD PTR [rip+0x1aa32]        # 0x1400262b0
   14000b87e:	add    rsp,0x28
   14000b882:	ret    
   14000b883:	int3   
   14000b884:	int3   
   14000b885:	int3   
   14000b886:	int3   
   14000b887:	int3   
   14000b888:	int3   
   14000b889:	int3   
   14000b88a:	int3   
   14000b88b:	int3   
   14000b88c:	int3   
   14000b88d:	int3   
   14000b88e:	int3   
   14000b88f:	int3   
   14000b890:	mov    QWORD PTR [rsp+0x10],rdx
   14000b895:	mov    QWORD PTR [rsp+0x8],rcx
   14000b89a:	sub    rsp,0x28
   14000b89e:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b8a3:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b8a8:	call   QWORD PTR [rip+0x1a9fa]        # 0x1400262a8
   14000b8ae:	add    rsp,0x28
   14000b8b2:	ret    
   14000b8b3:	int3   
   14000b8b4:	int3   
   14000b8b5:	int3   
   14000b8b6:	int3   
   14000b8b7:	int3   
   14000b8b8:	int3   
   14000b8b9:	int3   
   14000b8ba:	int3   
   14000b8bb:	int3   
   14000b8bc:	int3   
   14000b8bd:	int3   
   14000b8be:	int3   
   14000b8bf:	int3   
   14000b8c0:	mov    QWORD PTR [rsp+0x20],r9
   14000b8c5:	mov    QWORD PTR [rsp+0x18],r8
   14000b8ca:	mov    QWORD PTR [rsp+0x10],rdx
   14000b8cf:	mov    QWORD PTR [rsp+0x8],rcx
   14000b8d4:	sub    rsp,0x38
   14000b8d8:	mov    BYTE PTR [rsp+0x20],0x0
   14000b8dd:	lea    rcx,[rip+0x31364]        # 0x14003cc48
   14000b8e4:	call   0x140014f00
   14000b8e9:	mov    rdx,QWORD PTR [rsp+0x48]
   14000b8ee:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b8f3:	call   0x14000bb50
   14000b8f8:	mov    rdx,QWORD PTR [rsp+0x58]
   14000b8fd:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b902:	call   0x14000bc90
   14000b907:	movzx  eax,al
   14000b90a:	test   eax,eax
   14000b90c:	je     0x14000b913
   14000b90e:	mov    BYTE PTR [rsp+0x20],0x1
   14000b913:	lea    rcx,[rip+0x3132e]        # 0x14003cc48
   14000b91a:	call   0x140014f40
   14000b91f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000b924:	add    rsp,0x38
   14000b928:	ret    
   14000b929:	int3   
   14000b92a:	int3   
   14000b92b:	int3   
   14000b92c:	int3   
   14000b92d:	int3   
   14000b92e:	int3   
   14000b92f:	int3   
   14000b930:	mov    QWORD PTR [rsp+0x20],r9
   14000b935:	mov    QWORD PTR [rsp+0x18],r8
   14000b93a:	mov    QWORD PTR [rsp+0x10],rdx
   14000b93f:	mov    QWORD PTR [rsp+0x8],rcx
   14000b944:	sub    rsp,0x38
   14000b948:	mov    BYTE PTR [rsp+0x20],0x0
   14000b94d:	lea    rcx,[rip+0x312f4]        # 0x14003cc48
   14000b954:	call   0x140014f00
   14000b959:	mov    rdx,QWORD PTR [rsp+0x48]
   14000b95e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b963:	call   0x14000bb50
   14000b968:	mov    rdx,QWORD PTR [rsp+0x58]
   14000b96d:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b972:	call   0x14000bce0
   14000b977:	movzx  eax,al
   14000b97a:	test   eax,eax
   14000b97c:	je     0x14000b983
   14000b97e:	mov    BYTE PTR [rsp+0x20],0x1
   14000b983:	lea    rcx,[rip+0x312be]        # 0x14003cc48
   14000b98a:	call   0x140014f40
   14000b98f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000b994:	add    rsp,0x38
   14000b998:	ret    
   14000b999:	int3   
   14000b99a:	int3   
   14000b99b:	int3   
   14000b99c:	int3   
   14000b99d:	int3   
   14000b99e:	int3   
   14000b99f:	int3   
   14000b9a0:	mov    QWORD PTR [rsp+0x18],r8
   14000b9a5:	mov    QWORD PTR [rsp+0x10],rdx
   14000b9aa:	mov    QWORD PTR [rsp+0x8],rcx
   14000b9af:	push   rsi
   14000b9b0:	push   rdi
   14000b9b1:	sub    rsp,0xc8
   14000b9b8:	mov    rax,QWORD PTR [rip+0x2f891]        # 0x14003b250
   14000b9bf:	xor    rax,rsp
   14000b9c2:	mov    QWORD PTR [rsp+0xb0],rax
   14000b9ca:	lea    rax,[rsp+0x50]
   14000b9cf:	lea    rcx,[rip+0x2021a]        # 0x14002bbf0
   14000b9d6:	mov    rdi,rax
   14000b9d9:	mov    rsi,rcx
   14000b9dc:	mov    ecx,0x57
   14000b9e1:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b9e3:	lea    rax,[rsp+0x50]
   14000b9e8:	mov    QWORD PTR [rsp+0x38],rax
   14000b9ed:	lea    rcx,[rsp+0x50]
   14000b9f2:	call   0x1400218bc
   14000b9f7:	mov    QWORD PTR [rsp+0x40],rax
   14000b9fc:	mov    QWORD PTR [rsp+0x28],0x0
   14000ba05:	mov    QWORD PTR [rsp+0x30],0x0
   14000ba0e:	jmp    0x14000ba1d
   14000ba10:	mov    rax,QWORD PTR [rsp+0x30]
   14000ba15:	inc    rax
   14000ba18:	mov    QWORD PTR [rsp+0x30],rax
   14000ba1d:	mov    rax,QWORD PTR [rsp+0xe8]
   14000ba25:	cmp    QWORD PTR [rsp+0x30],rax
   14000ba2a:	jae    0x14000baa7
   14000ba2c:	mov    rax,QWORD PTR [rsp+0x30]
   14000ba31:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000ba39:	add    rcx,rax
   14000ba3c:	mov    rax,rcx
   14000ba3f:	movzx  eax,BYTE PTR [rax]
   14000ba42:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ba47:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ba4c:	add    rdx,rcx
   14000ba4f:	mov    rcx,rdx
   14000ba52:	movzx  ecx,BYTE PTR [rcx]
   14000ba55:	xor    eax,ecx
   14000ba57:	mov    BYTE PTR [rsp+0x20],al
   14000ba5b:	mov    rax,QWORD PTR [rsp+0x30]
   14000ba60:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000ba68:	add    rcx,rax
   14000ba6b:	mov    rax,rcx
   14000ba6e:	movzx  ecx,BYTE PTR [rsp+0x20]
   14000ba73:	mov    BYTE PTR [rax],cl
   14000ba75:	mov    rax,QWORD PTR [rsp+0xf0]
   14000ba7d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ba82:	add    rcx,rax
   14000ba85:	mov    rax,rcx
   14000ba88:	mov    QWORD PTR [rsp+0x28],rax
   14000ba8d:	mov    rax,QWORD PTR [rsp+0x40]
   14000ba92:	cmp    QWORD PTR [rsp+0x28],rax
   14000ba97:	jbe    0x14000baa2
   14000ba99:	mov    QWORD PTR [rsp+0x28],0x0
   14000baa2:	jmp    0x14000ba10
   14000baa7:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000baaf:	xor    rcx,rsp
   14000bab2:	call   0x140021890
   14000bab7:	add    rsp,0xc8
   14000babe:	pop    rdi
   14000babf:	pop    rsi
   14000bac0:	ret    
   14000bac1:	int3   
   14000bac2:	int3   
   14000bac3:	int3   
   14000bac4:	int3   
   14000bac5:	int3   
   14000bac6:	int3   
   14000bac7:	int3   
   14000bac8:	int3   
   14000bac9:	int3   
   14000baca:	int3   
   14000bacb:	int3   
   14000bacc:	int3   
   14000bacd:	int3   
   14000bace:	int3   
   14000bacf:	int3   
   14000bad0:	mov    QWORD PTR [rsp+0x10],rdx
   14000bad5:	mov    QWORD PTR [rsp+0x8],rcx
   14000bada:	sub    rsp,0x18
   14000bade:	mov    QWORD PTR [rsp+0x8],0x0
   14000bae7:	jmp    0x14000baf6
   14000bae9:	mov    rax,QWORD PTR [rsp+0x8]
   14000baee:	inc    rax
   14000baf1:	mov    QWORD PTR [rsp+0x8],rax
   14000baf6:	mov    rax,QWORD PTR [rsp+0x28]
   14000bafb:	cmp    QWORD PTR [rsp+0x8],rax
   14000bb00:	jae    0x14000bb37
   14000bb02:	mov    rax,QWORD PTR [rsp+0x8]
   14000bb07:	mov    rcx,QWORD PTR [rsp+0x20]
   14000bb0c:	add    rcx,rax
   14000bb0f:	mov    rax,rcx
   14000bb12:	movzx  eax,BYTE PTR [rax]
   14000bb15:	movzx  ecx,BYTE PTR [rsp+0x28]
   14000bb1a:	xor    eax,ecx
   14000bb1c:	mov    BYTE PTR [rsp],al
   14000bb1f:	mov    rax,QWORD PTR [rsp+0x8]
   14000bb24:	mov    rcx,QWORD PTR [rsp+0x20]
   14000bb29:	add    rcx,rax
   14000bb2c:	mov    rax,rcx
   14000bb2f:	movzx  ecx,BYTE PTR [rsp]
   14000bb33:	mov    BYTE PTR [rax],cl
   14000bb35:	jmp    0x14000bae9
   14000bb37:	add    rsp,0x18
   14000bb3b:	ret    
   14000bb3c:	int3   
   14000bb3d:	int3   
   14000bb3e:	int3   
   14000bb3f:	int3   
   14000bb40:	int3   
   14000bb41:	int3   
   14000bb42:	int3   
   14000bb43:	int3   
   14000bb44:	int3   
   14000bb45:	int3   
   14000bb46:	int3   
   14000bb47:	int3   
   14000bb48:	int3   
   14000bb49:	int3   
   14000bb4a:	int3   
   14000bb4b:	int3   
   14000bb4c:	int3   
   14000bb4d:	int3   
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	mov    QWORD PTR [rsp+0x10],rdx
   14000bb55:	mov    QWORD PTR [rsp+0x8],rcx
   14000bb5a:	sub    rsp,0x28
   14000bb5e:	cmp    QWORD PTR [rsp+0x30],0x0
   14000bb64:	je     0x14000bb6e
   14000bb66:	cmp    QWORD PTR [rsp+0x38],0x0
   14000bb6c:	jne    0x14000bb72
   14000bb6e:	xor    al,al
   14000bb70:	jmp    0x14000bb9d
   14000bb72:	cmp    QWORD PTR [rsp+0x38],0x38
   14000bb78:	jbe    0x14000bb7e
   14000bb7a:	xor    al,al
   14000bb7c:	jmp    0x14000bb9d
   14000bb7e:	mov    r8d,DWORD PTR [rsp+0x38]
   14000bb83:	mov    rdx,QWORD PTR [rsp+0x30]
   14000bb88:	lea    rcx,[rip+0x2ff61]        # 0x14003baf0
   14000bb8f:	call   0x140014fc0
   14000bb94:	mov    BYTE PTR [rip+0x2ff45],0x1        # 0x14003bae0
   14000bb9b:	mov    al,0x1
   14000bb9d:	add    rsp,0x28
   14000bba1:	ret    
   14000bba2:	int3   
   14000bba3:	int3   
   14000bba4:	int3   
   14000bba5:	int3   
   14000bba6:	int3   
   14000bba7:	int3   
   14000bba8:	int3   
   14000bba9:	int3   
   14000bbaa:	int3   
   14000bbab:	int3   
   14000bbac:	int3   
   14000bbad:	int3   
   14000bbae:	int3   
   14000bbaf:	int3   
   14000bbb0:	mov    BYTE PTR [rsp+0x18],r8b
   14000bbb5:	mov    QWORD PTR [rsp+0x10],rdx
   14000bbba:	mov    QWORD PTR [rsp+0x8],rcx
   14000bbbf:	sub    rsp,0x48
   14000bbc3:	cmp    QWORD PTR [rsp+0x58],0x8
   14000bbc9:	jae    0x14000bbd2
   14000bbcb:	xor    al,al
   14000bbcd:	jmp    0x14000bc7a
   14000bbd2:	mov    QWORD PTR [rsp+0x28],0x0
   14000bbdb:	mov    BYTE PTR [rsp+0x20],0x1
   14000bbe0:	movzx  eax,BYTE PTR [rsp+0x20]
   14000bbe5:	test   eax,eax
   14000bbe7:	je     0x14000bc78
   14000bbed:	mov    rax,QWORD PTR [rsp+0x28]
   14000bbf2:	mov    rcx,QWORD PTR [rsp+0x58]
   14000bbf7:	sub    rcx,rax
   14000bbfa:	mov    rax,rcx
   14000bbfd:	cmp    rax,0x8
   14000bc01:	jae    0x14000bc05
   14000bc03:	jmp    0x14000bc78
   14000bc05:	mov    rax,QWORD PTR [rsp+0x28]
   14000bc0a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000bc0f:	add    rcx,rax
   14000bc12:	mov    rax,rcx
   14000bc15:	mov    QWORD PTR [rsp+0x38],rax
   14000bc1a:	mov    rax,QWORD PTR [rsp+0x50]
   14000bc1f:	mov    rcx,QWORD PTR [rsp+0x28]
   14000bc24:	lea    rax,[rax+rcx*1+0x4]
   14000bc29:	mov    QWORD PTR [rsp+0x30],rax
   14000bc2e:	movzx  eax,BYTE PTR [rsp+0x60]
   14000bc33:	test   eax,eax
   14000bc35:	je     0x14000bc4f
   14000bc37:	mov    r8,QWORD PTR [rsp+0x30]
   14000bc3c:	mov    rdx,QWORD PTR [rsp+0x38]
   14000bc41:	lea    rcx,[rip+0x2fea8]        # 0x14003baf0
   14000bc48:	call   0x140015210
   14000bc4d:	jmp    0x14000bc65
   14000bc4f:	mov    r8,QWORD PTR [rsp+0x30]
   14000bc54:	mov    rdx,QWORD PTR [rsp+0x38]
   14000bc59:	lea    rcx,[rip+0x2fe90]        # 0x14003baf0
   14000bc60:	call   0x140015320
   14000bc65:	mov    rax,QWORD PTR [rsp+0x28]
   14000bc6a:	add    rax,0x8
   14000bc6e:	mov    QWORD PTR [rsp+0x28],rax
   14000bc73:	jmp    0x14000bbe0
   14000bc78:	mov    al,0x1
   14000bc7a:	add    rsp,0x48
   14000bc7e:	ret    
   14000bc7f:	int3   
   14000bc80:	int3   
   14000bc81:	int3   
   14000bc82:	int3   
   14000bc83:	int3   
   14000bc84:	int3   
   14000bc85:	int3   
   14000bc86:	int3   
   14000bc87:	int3   
   14000bc88:	int3   
   14000bc89:	int3   
   14000bc8a:	int3   
   14000bc8b:	int3   
   14000bc8c:	int3   
   14000bc8d:	int3   
   14000bc8e:	int3   
   14000bc8f:	int3   
   14000bc90:	mov    QWORD PTR [rsp+0x10],rdx
   14000bc95:	mov    QWORD PTR [rsp+0x8],rcx
   14000bc9a:	sub    rsp,0x28
   14000bc9e:	cmp    QWORD PTR [rsp+0x30],0x0
   14000bca4:	je     0x14000bcae
   14000bca6:	cmp    QWORD PTR [rsp+0x38],0x0
   14000bcac:	jne    0x14000bcb2
   14000bcae:	xor    al,al
   14000bcb0:	jmp    0x14000bcd3
   14000bcb2:	movzx  eax,BYTE PTR [rip+0x2fe27]        # 0x14003bae0
   14000bcb9:	test   eax,eax
   14000bcbb:	jne    0x14000bcc1
   14000bcbd:	xor    al,al
   14000bcbf:	jmp    0x14000bcd3
   14000bcc1:	mov    r8b,0x1
   14000bcc4:	mov    rdx,QWORD PTR [rsp+0x38]
   14000bcc9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bcce:	call   0x14000bbb0
   14000bcd3:	add    rsp,0x28
   14000bcd7:	ret    
   14000bcd8:	int3   
   14000bcd9:	int3   
   14000bcda:	int3   
   14000bcdb:	int3   
   14000bcdc:	int3   
   14000bcdd:	int3   
   14000bcde:	int3   
   14000bcdf:	int3   
   14000bce0:	mov    QWORD PTR [rsp+0x10],rdx
   14000bce5:	mov    QWORD PTR [rsp+0x8],rcx
   14000bcea:	sub    rsp,0x28
   14000bcee:	cmp    QWORD PTR [rsp+0x30],0x0
   14000bcf4:	je     0x14000bcfe
   14000bcf6:	cmp    QWORD PTR [rsp+0x38],0x0
   14000bcfc:	jne    0x14000bd02
   14000bcfe:	xor    al,al
   14000bd00:	jmp    0x14000bd23
   14000bd02:	movzx  eax,BYTE PTR [rip+0x2fdd7]        # 0x14003bae0
   14000bd09:	test   eax,eax
   14000bd0b:	jne    0x14000bd11
   14000bd0d:	xor    al,al
   14000bd0f:	jmp    0x14000bd23
   14000bd11:	xor    r8d,r8d
   14000bd14:	mov    rdx,QWORD PTR [rsp+0x38]
   14000bd19:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bd1e:	call   0x14000bbb0
   14000bd23:	add    rsp,0x28
   14000bd27:	ret    
   14000bd28:	int3   
   14000bd29:	int3   
   14000bd2a:	int3   
   14000bd2b:	int3   
   14000bd2c:	int3   
   14000bd2d:	int3   
   14000bd2e:	int3   
   14000bd2f:	int3   
   14000bd30:	mov    QWORD PTR [rsp+0x8],rcx
   14000bd35:	sub    rsp,0x28
   14000bd39:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bd3e:	call   QWORD PTR [rip+0x1a5a4]        # 0x1400262e8
   14000bd44:	add    rsp,0x28
   14000bd48:	ret    
   14000bd49:	int3   
   14000bd4a:	int3   
   14000bd4b:	int3   
   14000bd4c:	int3   
   14000bd4d:	int3   
   14000bd4e:	int3   
   14000bd4f:	int3   
   14000bd50:	mov    DWORD PTR [rsp+0x8],ecx
   14000bd54:	sub    rsp,0x18
   14000bd58:	mov    eax,DWORD PTR [rsp+0x20]
   14000bd5c:	and    eax,0xff
   14000bd61:	mov    WORD PTR [rsp],ax
   14000bd65:	movzx  eax,WORD PTR [rsp]
   14000bd69:	mov    DWORD PTR [rsp+0x4],eax
   14000bd6d:	mov    eax,DWORD PTR [rsp+0x4]
   14000bd71:	dec    eax
   14000bd73:	mov    DWORD PTR [rsp+0x4],eax
   14000bd77:	cmp    DWORD PTR [rsp+0x4],0x23
   14000bd7c:	ja     0x14000bf01
   14000bd82:	movsxd rax,DWORD PTR [rsp+0x4]
   14000bd87:	lea    rcx,[rip+0xffffffffffff4272]        # 0x140000000
   14000bd8e:	mov    eax,DWORD PTR [rcx+rax*4+0xbf18]
   14000bd95:	add    rax,rcx
   14000bd98:	jmp    rax
   14000bd9a:	cmp    DWORD PTR [rsp+0x20],0x416
   14000bda2:	jne    0x14000bdb0
   14000bda4:	lea    rax,[rip+0x2047d]        # 0x14002c228
   14000bdab:	jmp    0x14000bf11
   14000bdb0:	lea    rax,[rip+0x204c5]        # 0x14002c27c
   14000bdb7:	jmp    0x14000bf11
   14000bdbc:	cmp    DWORD PTR [rsp+0x20],0x404
   14000bdc4:	je     0x14000bde4
   14000bdc6:	cmp    DWORD PTR [rsp+0x20],0x7c04
   14000bdce:	je     0x14000bde4
   14000bdd0:	cmp    DWORD PTR [rsp+0x20],0xc04
   14000bdd8:	je     0x14000bde4
   14000bdda:	cmp    DWORD PTR [rsp+0x20],0x1404
   14000bde2:	jne    0x14000bdf0
   14000bde4:	lea    rax,[rip+0x20499]        # 0x14002c284
   14000bdeb:	jmp    0x14000bf11
   14000bdf0:	lea    rax,[rip+0x20495]        # 0x14002c28c
   14000bdf7:	jmp    0x14000bf11
   14000bdfc:	lea    rax,[rip+0x20491]        # 0x14002c294
   14000be03:	jmp    0x14000bf11
   14000be08:	lea    rax,[rip+0x2048d]        # 0x14002c29c
   14000be0f:	jmp    0x14000bf11
   14000be14:	lea    rax,[rip+0x20489]        # 0x14002c2a4
   14000be1b:	jmp    0x14000bf11
   14000be20:	lea    rax,[rip+0x20485]        # 0x14002c2ac
   14000be27:	jmp    0x14000bf11
   14000be2c:	lea    rax,[rip+0x20481]        # 0x14002c2b4
   14000be33:	jmp    0x14000bf11
   14000be38:	lea    rax,[rip+0x2047d]        # 0x14002c2bc
   14000be3f:	jmp    0x14000bf11
   14000be44:	lea    rax,[rip+0x20479]        # 0x14002c2c4
   14000be4b:	jmp    0x14000bf11
   14000be50:	lea    rax,[rip+0x20475]        # 0x14002c2cc
   14000be57:	jmp    0x14000bf11
   14000be5c:	lea    rax,[rip+0x20471]        # 0x14002c2d4
   14000be63:	jmp    0x14000bf11
   14000be68:	lea    rax,[rip+0x2046d]        # 0x14002c2dc
   14000be6f:	jmp    0x14000bf11
   14000be74:	lea    rax,[rip+0x20469]        # 0x14002c2e4
   14000be7b:	jmp    0x14000bf11
   14000be80:	lea    rax,[rip+0x20465]        # 0x14002c2ec
   14000be87:	jmp    0x14000bf11
   14000be8c:	lea    rax,[rip+0x20461]        # 0x14002c2f4
   14000be93:	jmp    0x14000bf11
   14000be95:	lea    rax,[rip+0x20460]        # 0x14002c2fc
   14000be9c:	jmp    0x14000bf11
   14000be9e:	lea    rax,[rip+0x2045f]        # 0x14002c304
   14000bea5:	jmp    0x14000bf11
   14000bea7:	lea    rax,[rip+0x2045e]        # 0x14002c30c
   14000beae:	jmp    0x14000bf11
   14000beb0:	lea    rax,[rip+0x2045d]        # 0x14002c314
   14000beb7:	jmp    0x14000bf11
   14000beb9:	lea    rax,[rip+0x2045c]        # 0x14002c31c
   14000bec0:	jmp    0x14000bf11
   14000bec2:	lea    rax,[rip+0x2045b]        # 0x14002c324
   14000bec9:	jmp    0x14000bf11
   14000becb:	lea    rax,[rip+0x2045a]        # 0x14002c32c
   14000bed2:	jmp    0x14000bf11
   14000bed4:	lea    rax,[rip+0x20459]        # 0x14002c334
   14000bedb:	jmp    0x14000bf11
   14000bedd:	lea    rax,[rip+0x20458]        # 0x14002c33c
   14000bee4:	jmp    0x14000bf11
   14000bee6:	lea    rax,[rip+0x20457]        # 0x14002c344
   14000beed:	jmp    0x14000bf11
   14000beef:	lea    rax,[rip+0x20456]        # 0x14002c34c
   14000bef6:	jmp    0x14000bf11
   14000bef8:	lea    rax,[rip+0x20455]        # 0x14002c354
   14000beff:	jmp    0x14000bf11
   14000bf01:	lea    rax,[rip+0x20454]        # 0x14002c35c
   14000bf08:	jmp    0x14000bf11
   14000bf0a:	lea    rax,[rip+0x20453]        # 0x14002c364
   14000bf11:	add    rsp,0x18
   14000bf15:	ret    
   14000bf16:	xchg   ax,ax
   14000bf18:	ret    0xbe
   14000bf1b:	add    BYTE PTR [rcx],al
   14000bf1d:	mov    edi,0xbf010000
   14000bf22:	add    BYTE PTR [rax],al
   14000bf24:	mov    esp,0xfc0000bd
   14000bf29:	mov    ebp,0xbea70000
   14000bf2e:	add    BYTE PTR [rax],al
   14000bf30:	or     BYTE PTR [rsi-0x411a0000],bh
   14000bf36:	add    BYTE PTR [rax],al
   14000bf38:	adc    al,0xbe
   14000bf3a:	add    BYTE PTR [rax],al
   14000bf3c:	and    BYTE PTR [rsi-0x416b0000],bh
   14000bf42:	add    BYTE PTR [rax],al
   14000bf44:	sub    al,0xbe
   14000bf46:	add    BYTE PTR [rax],al
   14000bf48:	(bad)  
   14000bf49:	mov    esi,0xbe5c0000
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	add    DWORD PTR [rdi-0x41c80000],edi
   14000bf56:	add    BYTE PTR [rax],al
   14000bf58:	rex.R mov esi,0xbe500000
   14000bf5e:	add    BYTE PTR [rax],al
   14000bf60:	push   0x740000be
   14000bf65:	mov    esi,0xbe800000
   14000bf6a:	add    BYTE PTR [rax],al
   14000bf6c:	(bad)  
   14000bf6d:	mov    ebp,0xbf010000
   14000bf72:	add    BYTE PTR [rax],al
   14000bf74:	out    dx,eax
   14000bf75:	mov    esi,0xbe8c0000
   14000bf7a:	add    BYTE PTR [rax],al
   14000bf7c:	clc    
   14000bf7d:	mov    esi,0xbeb00000
   14000bf82:	add    BYTE PTR [rax],al
   14000bf84:	add    DWORD PTR [rdi-0x41620000],edi
   14000bf8a:	add    BYTE PTR [rax],al
   14000bf8c:	fnstsw WORD PTR [rsi-0x41350000]
   14000bf92:	add    BYTE PTR [rax],al
   14000bf94:	add    DWORD PTR [rdi-0x40ff0000],edi
   14000bf9a:	add    BYTE PTR [rax],al
   14000bf9c:	add    DWORD PTR [rdi-0x40ff0000],edi
   14000bfa2:	add    BYTE PTR [rax],al
   14000bfa4:	mov    ecx,0xcc0000be
   14000bfa9:	int3   
   14000bfaa:	int3   
   14000bfab:	int3   
   14000bfac:	int3   
   14000bfad:	int3   
   14000bfae:	int3   
   14000bfaf:	int3   
   14000bfb0:	sub    rsp,0x168
   14000bfb7:	mov    rax,QWORD PTR [rip+0x2f292]        # 0x14003b250
   14000bfbe:	xor    rax,rsp
   14000bfc1:	mov    QWORD PTR [rsp+0x150],rax
   14000bfc9:	cmp    DWORD PTR [rip+0x30c74],0x0        # 0x14003cc44
   14000bfd0:	jne    0x14000c03b
   14000bfd2:	mov    DWORD PTR [rip+0x30c68],0x1        # 0x14003cc44
   14000bfdc:	mov    DWORD PTR [rsp+0x30],0x114
   14000bfe4:	lea    rcx,[rsp+0x30]
   14000bfe9:	call   QWORD PTR [rip+0x1a1a9]        # 0x140026198
   14000bfef:	cmp    DWORD PTR [rsp+0x40],0x2
   14000bff4:	jne    0x14000c031
   14000bff6:	cmp    DWORD PTR [rsp+0x34],0x6
   14000bffb:	jae    0x14000c031
   14000bffd:	mov    r8d,0xe0000000
   14000c003:	xor    edx,edx
   14000c005:	xor    ecx,ecx
   14000c007:	call   QWORD PTR [rip+0x1a053]        # 0x140026060
   14000c00d:	mov    QWORD PTR [rsp+0x20],rax
   14000c012:	cmp    QWORD PTR [rsp+0x20],0x0
   14000c018:	jne    0x14000c024
   14000c01a:	mov    DWORD PTR [rip+0x2f1a4],0x0        # 0x14003b1c8
   14000c024:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c029:	call   QWORD PTR [rip+0x1a029]        # 0x140026058
   14000c02f:	jmp    0x14000c03b
   14000c031:	mov    DWORD PTR [rip+0x2f18d],0x1        # 0x14003b1c8
   14000c03b:	mov    eax,DWORD PTR [rip+0x2f187]        # 0x14003b1c8
   14000c041:	mov    rcx,QWORD PTR [rsp+0x150]
   14000c049:	xor    rcx,rsp
   14000c04c:	call   0x140021890
   14000c051:	add    rsp,0x168
   14000c058:	ret    
   14000c059:	int3   
   14000c05a:	int3   
   14000c05b:	int3   
   14000c05c:	int3   
   14000c05d:	int3   
   14000c05e:	int3   
   14000c05f:	int3   
   14000c060:	mov    DWORD PTR [rsp+0x10],edx
   14000c064:	mov    QWORD PTR [rsp+0x8],rcx
   14000c069:	sub    rsp,0x58
   14000c06d:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000c076:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c07b:	lea    rcx,[rsp+0x38]
   14000c080:	call   0x140009f20
   14000c085:	nop
   14000c086:	lea    rcx,[rsp+0x38]
   14000c08b:	call   0x14000a7d0
   14000c090:	lea    rcx,[rsp+0x38]
   14000c095:	call   0x14000a8e0
   14000c09a:	mov    dx,0x2d
   14000c09e:	lea    rcx,[rsp+0x38]
   14000c0a3:	call   0x14000b510
   14000c0a8:	mov    DWORD PTR [rsp+0x20],0x4
   14000c0b0:	lea    rcx,[rsp+0x38]
   14000c0b5:	call   0x14000a540
   14000c0ba:	cmp    DWORD PTR [rsp+0x20],eax
   14000c0be:	jge    0x14000c0e2
   14000c0c0:	lea    r8,[rip+0x1fb89]        # 0x14002bc50
   14000c0c7:	mov    edx,DWORD PTR [rsp+0x20]
   14000c0cb:	lea    rcx,[rsp+0x38]
   14000c0d0:	call   0x14000b5e0
   14000c0d5:	mov    eax,DWORD PTR [rsp+0x20]
   14000c0d9:	add    eax,0x5
   14000c0dc:	mov    DWORD PTR [rsp+0x20],eax
   14000c0e0:	jmp    0x14000c0b0
   14000c0e2:	lea    rcx,[rsp+0x38]
   14000c0e7:	call   0x14000a540
   14000c0ec:	inc    eax
   14000c0ee:	cdqe   
   14000c0f0:	mov    QWORD PTR [rsp+0x28],rax
   14000c0f5:	lea    rcx,[rsp+0x38]
   14000c0fa:	call   0x14000a520
   14000c0ff:	movsxd rcx,DWORD PTR [rsp+0x68]
   14000c104:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c109:	mov    r9,rdx
   14000c10c:	mov    r8,rax
   14000c10f:	mov    rdx,rcx
   14000c112:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c117:	call   QWORD PTR [rip+0x1a19b]        # 0x1400262b8
   14000c11d:	nop
   14000c11e:	lea    rcx,[rsp+0x38]
   14000c123:	call   0x140009e60
   14000c128:	add    rsp,0x58
   14000c12c:	ret    
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	int3   
   14000c131:	int3   
   14000c132:	int3   
   14000c133:	int3   
   14000c134:	int3   
   14000c135:	int3   
   14000c136:	int3   
   14000c137:	int3   
   14000c138:	int3   
   14000c139:	int3   
   14000c13a:	int3   
   14000c13b:	int3   
   14000c13c:	int3   
   14000c13d:	int3   
   14000c13e:	int3   
   14000c13f:	int3   
   14000c140:	mov    QWORD PTR [rsp+0x18],r8
   14000c145:	mov    QWORD PTR [rsp+0x10],rdx
   14000c14a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c14f:	sub    rsp,0x58
   14000c153:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000c15c:	mov    rdx,QWORD PTR [rsp+0x68]
   14000c161:	lea    rcx,[rsp+0x38]
   14000c166:	call   0x140009f20
   14000c16b:	nop
   14000c16c:	lea    rcx,[rsp+0x38]
   14000c171:	call   0x14000a520
   14000c176:	mov    DWORD PTR [rsp+0x28],0x5
   14000c17e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000c183:	mov    QWORD PTR [rsp+0x20],rcx
   14000c188:	lea    r9,[rip+0x1fac5]        # 0x14002bc54
   14000c18f:	mov    r8,rax
   14000c192:	lea    rdx,[rip+0x1fabf]        # 0x14002bc58
   14000c199:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c19e:	call   QWORD PTR [rip+0x1a354]        # 0x1400264f8
   14000c1a4:	nop
   14000c1a5:	lea    rcx,[rsp+0x38]
   14000c1aa:	call   0x140009e60
   14000c1af:	add    rsp,0x58
   14000c1b3:	ret    
   14000c1b4:	int3   
   14000c1b5:	int3   
   14000c1b6:	int3   
   14000c1b7:	int3   
   14000c1b8:	int3   
   14000c1b9:	int3   
   14000c1ba:	int3   
   14000c1bb:	int3   
   14000c1bc:	int3   
   14000c1bd:	int3   
   14000c1be:	int3   
   14000c1bf:	int3   
   14000c1c0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c1c5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c1ca:	push   rdi
   14000c1cb:	sub    rsp,0x4d0
   14000c1d2:	mov    rax,QWORD PTR [rip+0x2f077]        # 0x14003b250
   14000c1d9:	xor    rax,rsp
   14000c1dc:	mov    QWORD PTR [rsp+0x4c0],rax
   14000c1e4:	mov    rax,QWORD PTR [rsp+0x4e8]
   14000c1ec:	mov    QWORD PTR [rax],0x0
   14000c1f3:	mov    r8,QWORD PTR [rsp+0x4e0]
   14000c1fb:	mov    edx,0x104
   14000c200:	lea    rcx,[rsp+0x2b0]
   14000c208:	call   QWORD PTR [rip+0x1a16a]        # 0x140026378
   14000c20e:	lea    rcx,[rsp+0x2b0]
   14000c216:	call   QWORD PTR [rip+0x1a134]        # 0x140026350
   14000c21c:	mov    QWORD PTR [rsp+0x58],rax
   14000c221:	mov    rax,QWORD PTR [rsp+0x58]
   14000c226:	movzx  eax,WORD PTR [rsp+rax*2+0x2ae]
   14000c22e:	cmp    eax,0x5c
   14000c231:	je     0x14000c24d
   14000c233:	lea    r8,[rip+0x1fa2a]        # 0x14002bc64
   14000c23a:	mov    edx,0x104
   14000c23f:	lea    rcx,[rsp+0x2b0]
   14000c247:	call   QWORD PTR [rip+0x1a08b]        # 0x1400262d8
   14000c24d:	xor    eax,eax
   14000c24f:	mov    WORD PTR [rsp+0xa0],ax
   14000c257:	lea    rax,[rsp+0xa2]
   14000c25f:	mov    rdi,rax
   14000c262:	xor    eax,eax
   14000c264:	mov    ecx,0x206
   14000c269:	rep stos BYTE PTR es:[rdi],al
   14000c26b:	lea    r8,[rsp+0x2b0]
   14000c273:	mov    edx,0x104
   14000c278:	lea    rcx,[rsp+0xa0]
   14000c280:	call   QWORD PTR [rip+0x1a0f2]        # 0x140026378
   14000c286:	lea    rcx,[rsp+0xa0]
   14000c28e:	call   QWORD PTR [rip+0x19e3c]        # 0x1400260d0
   14000c294:	mov    DWORD PTR [rsp+0x48],eax
   14000c298:	cmp    DWORD PTR [rsp+0x48],0xffffffff
   14000c29d:	je     0x14000c2aa
   14000c29f:	mov    eax,DWORD PTR [rsp+0x48]
   14000c2a3:	and    eax,0x10
   14000c2a6:	test   eax,eax
   14000c2a8:	jne    0x14000c2b1
   14000c2aa:	xor    eax,eax
   14000c2ac:	jmp    0x14000c41a
   14000c2b1:	lea    r8,[rsp+0x2b0]
   14000c2b9:	mov    edx,0x104
   14000c2be:	lea    rcx,[rsp+0xa0]
   14000c2c6:	call   QWORD PTR [rip+0x1a0ac]        # 0x140026378
   14000c2cc:	lea    r9,[rsp+0xa0]
   14000c2d4:	xor    r8d,r8d
   14000c2d7:	lea    rdx,[rip+0x1f98a]        # 0x14002bc68
   14000c2de:	lea    rcx,[rsp+0x2b0]
   14000c2e6:	call   QWORD PTR [rip+0x19e94]        # 0x140026180
   14000c2ec:	test   eax,eax
   14000c2ee:	jne    0x14000c2f7
   14000c2f0:	xor    eax,eax
   14000c2f2:	jmp    0x14000c41a
   14000c2f7:	mov    QWORD PTR [rsp+0x30],0x0
   14000c300:	mov    DWORD PTR [rsp+0x28],0x0
   14000c308:	mov    DWORD PTR [rsp+0x20],0x2
   14000c310:	xor    r9d,r9d
   14000c313:	xor    r8d,r8d
   14000c316:	mov    edx,0x40000000
   14000c31b:	lea    rcx,[rsp+0xa0]
   14000c323:	call   QWORD PTR [rip+0x19d7f]        # 0x1400260a8
   14000c329:	mov    QWORD PTR [rsp+0x50],rax
   14000c32e:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   14000c334:	jne    0x14000c33d
   14000c336:	xor    eax,eax
   14000c338:	jmp    0x14000c41a
   14000c33d:	mov    DWORD PTR [rsp+0x44],0x0
   14000c345:	xor    r9d,r9d
   14000c348:	xor    r8d,r8d
   14000c34b:	lea    rdx,[rsp+0x60]
   14000c350:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c355:	call   QWORD PTR [rip+0x19e1d]        # 0x140026178
   14000c35b:	test   eax,eax
   14000c35d:	je     0x14000c3fd
   14000c363:	lea    rdx,[rsp+0x68]
   14000c368:	lea    rcx,[rsp+0x60]
   14000c36d:	call   QWORD PTR [rip+0x19e4d]        # 0x1400261c0
   14000c373:	mov    r8d,0x24
   14000c379:	xor    edx,edx
   14000c37b:	lea    rcx,[rsp+0x78]
   14000c380:	call   0x1400216e0
   14000c385:	movzx  eax,WORD PTR [rsp+0x68]
   14000c38a:	sub    eax,0x76c
   14000c38f:	mov    DWORD PTR [rsp+0x8c],eax
   14000c396:	movzx  eax,WORD PTR [rsp+0x6a]
   14000c39b:	dec    eax
   14000c39d:	mov    DWORD PTR [rsp+0x88],eax
   14000c3a4:	movzx  eax,WORD PTR [rsp+0x6e]
   14000c3a9:	mov    DWORD PTR [rsp+0x84],eax
   14000c3b0:	movzx  eax,WORD PTR [rsp+0x70]
   14000c3b5:	mov    DWORD PTR [rsp+0x80],eax
   14000c3bc:	movzx  eax,WORD PTR [rsp+0x72]
   14000c3c1:	mov    DWORD PTR [rsp+0x7c],eax
   14000c3c5:	mov    DWORD PTR [rsp+0x40],0x0
   14000c3cd:	lea    rcx,[rsp+0x40]
   14000c3d2:	call   QWORD PTR [rip+0x19e78]        # 0x140026250
   14000c3d8:	lea    rcx,[rsp+0x78]
   14000c3dd:	call   0x14000bd30
   14000c3e2:	movsxd rcx,DWORD PTR [rsp+0x40]
   14000c3e7:	sub    rax,rcx
   14000c3ea:	mov    rcx,QWORD PTR [rsp+0x4e8]
   14000c3f2:	mov    QWORD PTR [rcx],rax
   14000c3f5:	mov    DWORD PTR [rsp+0x44],0x1
   14000c3fd:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c402:	call   QWORD PTR [rip+0x19cc0]        # 0x1400260c8
   14000c408:	lea    rcx,[rsp+0xa0]
   14000c410:	call   QWORD PTR [rip+0x19c9a]        # 0x1400260b0
   14000c416:	mov    eax,DWORD PTR [rsp+0x44]
   14000c41a:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14000c422:	xor    rcx,rsp
   14000c425:	call   0x140021890
   14000c42a:	add    rsp,0x4d0
   14000c431:	pop    rdi
   14000c432:	ret    
   14000c433:	int3   
   14000c434:	int3   
   14000c435:	int3   
   14000c436:	int3   
   14000c437:	int3   
   14000c438:	int3   
   14000c439:	int3   
   14000c43a:	int3   
   14000c43b:	int3   
   14000c43c:	int3   
   14000c43d:	int3   
   14000c43e:	int3   
   14000c43f:	int3   
   14000c440:	mov    QWORD PTR [rsp+0x8],rcx
   14000c445:	push   rdi
   14000c446:	sub    rsp,0x290
   14000c44d:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000c456:	mov    rax,QWORD PTR [rip+0x2edf3]        # 0x14003b250
   14000c45d:	xor    rax,rsp
   14000c460:	mov    QWORD PTR [rsp+0x280],rax
   14000c468:	mov    BYTE PTR [rsp+0x30],0x1
   14000c46d:	mov    DWORD PTR [rsp+0x34],0x0
   14000c475:	mov    QWORD PTR [rsp+0x38],0x0
   14000c47e:	lea    rdx,[rip+0x1f7eb]        # 0x14002bc70
   14000c485:	lea    rcx,[rsp+0x58]
   14000c48a:	call   0x140009f20
   14000c48f:	nop
   14000c490:	lea    rcx,[rsp+0x58]
   14000c495:	call   0x14000a520
   14000c49a:	mov    rcx,rax
   14000c49d:	call   QWORD PTR [rip+0x19d0d]        # 0x1400261b0
   14000c4a3:	mov    QWORD PTR [rsp+0x48],rax
   14000c4a8:	cmp    QWORD PTR [rsp+0x48],0x0
   14000c4ae:	je     0x14000c509
   14000c4b0:	lea    rdx,[rip+0x1f7d9]        # 0x14002bc90
   14000c4b7:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c4bc:	call   QWORD PTR [rip+0x19ce6]        # 0x1400261a8
   14000c4c2:	mov    QWORD PTR [rsp+0x38],rax
   14000c4c7:	cmp    QWORD PTR [rsp+0x38],0x0
   14000c4cd:	je     0x14000c4fe
   14000c4cf:	mov    rax,QWORD PTR [rsp+0x2a0]
   14000c4d7:	mov    QWORD PTR [rsp+0x20],rax
   14000c4dc:	xor    r9d,r9d
   14000c4df:	xor    r8d,r8d
   14000c4e2:	mov    edx,0x8023
   14000c4e7:	xor    ecx,ecx
   14000c4e9:	call   QWORD PTR [rsp+0x38]
   14000c4ed:	test   eax,eax
   14000c4ef:	jl     0x14000c4fe
   14000c4f1:	mov    DWORD PTR [rsp+0x34],0x1
   14000c4f9:	mov    BYTE PTR [rsp+0x30],0x0
   14000c4fe:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c503:	call   QWORD PTR [rip+0x19c97]        # 0x1400261a0
   14000c509:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c50e:	test   eax,eax
   14000c510:	je     0x14000c55c
   14000c512:	xor    eax,eax
   14000c514:	mov    WORD PTR [rsp+0x70],ax
   14000c519:	lea    rax,[rsp+0x72]
   14000c51e:	mov    rdi,rax
   14000c521:	xor    eax,eax
   14000c523:	mov    ecx,0x206
   14000c528:	rep stos BYTE PTR es:[rdi],al
   14000c52a:	mov    edx,0x104
   14000c52f:	lea    rcx,[rsp+0x70]
   14000c534:	call   QWORD PTR [rip+0x19c56]        # 0x140026190
   14000c53a:	lea    r8,[rip+0x1f767]        # 0x14002bca8
   14000c541:	lea    rdx,[rsp+0x70]
   14000c546:	mov    rcx,QWORD PTR [rsp+0x2a0]
   14000c54e:	call   QWORD PTR [rip+0x19fcc]        # 0x140026520
   14000c554:	mov    DWORD PTR [rsp+0x34],0x1
   14000c55c:	mov    eax,DWORD PTR [rsp+0x34]
   14000c560:	mov    DWORD PTR [rsp+0x40],eax
   14000c564:	lea    rcx,[rsp+0x58]
   14000c569:	call   0x140009e60
   14000c56e:	mov    eax,DWORD PTR [rsp+0x40]
   14000c572:	mov    rcx,QWORD PTR [rsp+0x280]
   14000c57a:	xor    rcx,rsp
   14000c57d:	call   0x140021890
   14000c582:	add    rsp,0x290
   14000c589:	pop    rdi
   14000c58a:	ret    
   14000c58b:	int3   
   14000c58c:	int3   
   14000c58d:	int3   
   14000c58e:	int3   
   14000c58f:	int3   
   14000c590:	int3   
   14000c591:	int3   
   14000c592:	int3   
   14000c593:	int3   
   14000c594:	int3   
   14000c595:	int3   
   14000c596:	int3   
   14000c597:	int3   
   14000c598:	int3   
   14000c599:	int3   
   14000c59a:	int3   
   14000c59b:	int3   
   14000c59c:	int3   
   14000c59d:	int3   
   14000c59e:	int3   
   14000c59f:	int3   
   14000c5a0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c5a5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c5aa:	push   rdi
   14000c5ab:	sub    rsp,0x8d0
   14000c5b2:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000c5bb:	mov    rax,QWORD PTR [rip+0x2ec8e]        # 0x14003b250
   14000c5c2:	xor    rax,rsp
   14000c5c5:	mov    QWORD PTR [rsp+0x8c0],rax
   14000c5cd:	mov    BYTE PTR [rsp+0x30],0x0
   14000c5d2:	mov    BYTE PTR [rsp+0x31],0x1
   14000c5d7:	xor    eax,eax
   14000c5d9:	mov    WORD PTR [rsp+0x80],ax
   14000c5e1:	lea    rax,[rsp+0x82]
   14000c5e9:	mov    rdi,rax
   14000c5ec:	xor    eax,eax
   14000c5ee:	mov    ecx,0x206
   14000c5f3:	rep stos BYTE PTR es:[rdi],al
   14000c5f5:	mov    QWORD PTR [rsp+0x40],0x0
   14000c5fe:	lea    rdx,[rip+0x1f6d3]        # 0x14002bcd8
   14000c605:	lea    rcx,[rsp+0x58]
   14000c60a:	call   0x140009f20
   14000c60f:	nop
   14000c610:	lea    rcx,[rsp+0x58]
   14000c615:	call   0x14000a520
   14000c61a:	mov    rcx,rax
   14000c61d:	call   QWORD PTR [rip+0x19b8d]        # 0x1400261b0
   14000c623:	mov    QWORD PTR [rsp+0x50],rax
   14000c628:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c62e:	je     0x14000c6ea
   14000c634:	lea    rdx,[rip+0x1f6bd]        # 0x14002bcf8
   14000c63b:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c640:	call   QWORD PTR [rip+0x19b62]        # 0x1400261a8
   14000c646:	mov    QWORD PTR [rsp+0x40],rax
   14000c64b:	cmp    QWORD PTR [rsp+0x40],0x0
   14000c651:	je     0x14000c6df
   14000c657:	lea    rax,[rsp+0x80]
   14000c65f:	mov    QWORD PTR [rsp+0x20],rax
   14000c664:	xor    r9d,r9d
   14000c667:	xor    r8d,r8d
   14000c66a:	mov    edx,0x801a
   14000c66f:	xor    ecx,ecx
   14000c671:	call   QWORD PTR [rsp+0x40]
   14000c675:	test   eax,eax
   14000c677:	jl     0x14000c6df
   14000c679:	mov    BYTE PTR [rsp+0x31],0x0
   14000c67e:	lea    rcx,[rsp+0x80]
   14000c686:	call   QWORD PTR [rip+0x19cc4]        # 0x140026350
   14000c68c:	mov    DWORD PTR [rsp+0x34],eax
   14000c690:	mov    rax,QWORD PTR [rsp+0x8e8]
   14000c698:	mov    ecx,DWORD PTR [rsp+0x34]
   14000c69c:	cmp    DWORD PTR [rax],ecx
   14000c69e:	jle    0x14000c6d1
   14000c6a0:	mov    BYTE PTR [rsp+0x30],0x1
   14000c6a5:	movsxd rax,DWORD PTR [rsp+0x34]
   14000c6aa:	mov    rcx,QWORD PTR [rsp+0x8e8]
   14000c6b2:	movsxd rcx,DWORD PTR [rcx]
   14000c6b5:	mov    r9,rax
   14000c6b8:	lea    r8,[rsp+0x80]
   14000c6c0:	mov    rdx,rcx
   14000c6c3:	mov    rcx,QWORD PTR [rsp+0x8e0]
   14000c6cb:	call   QWORD PTR [rip+0x19be7]        # 0x1400262b8
   14000c6d1:	mov    rax,QWORD PTR [rsp+0x8e8]
   14000c6d9:	mov    ecx,DWORD PTR [rsp+0x34]
   14000c6dd:	mov    DWORD PTR [rax],ecx
   14000c6df:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c6e4:	call   QWORD PTR [rip+0x19ab6]        # 0x1400261a0
   14000c6ea:	movzx  eax,BYTE PTR [rsp+0x31]
   14000c6ef:	test   eax,eax
   14000c6f1:	je     0x14000c81b
   14000c6f7:	xor    eax,eax
   14000c6f9:	mov    WORD PTR [rsp+0x290],ax
   14000c701:	lea    rax,[rsp+0x292]
   14000c709:	mov    rdi,rax
   14000c70c:	xor    eax,eax
   14000c70e:	mov    ecx,0x206
   14000c713:	rep stos BYTE PTR es:[rdi],al
   14000c715:	xor    eax,eax
   14000c717:	mov    WORD PTR [rsp+0x6b0],ax
   14000c71f:	lea    rax,[rsp+0x6b2]
   14000c727:	mov    rdi,rax
   14000c72a:	xor    eax,eax
   14000c72c:	mov    ecx,0x206
   14000c731:	rep stos BYTE PTR es:[rdi],al
   14000c733:	mov    DWORD PTR [rsp+0x48],0x104
   14000c73b:	xor    eax,eax
   14000c73d:	mov    WORD PTR [rsp+0x4a0],ax
   14000c745:	lea    rax,[rsp+0x4a2]
   14000c74d:	mov    rdi,rax
   14000c750:	xor    eax,eax
   14000c752:	mov    ecx,0x206
   14000c757:	rep stos BYTE PTR es:[rdi],al
   14000c759:	mov    edx,0x104
   14000c75e:	lea    rcx,[rsp+0x290]
   14000c766:	call   QWORD PTR [rip+0x19a24]        # 0x140026190
   14000c76c:	lea    rdx,[rsp+0x48]
   14000c771:	lea    rcx,[rsp+0x4a0]
   14000c779:	call   QWORD PTR [rip+0x198a9]        # 0x140026028
   14000c77f:	lea    r8,[rip+0x1f58a]        # 0x14002bd10
   14000c786:	lea    rdx,[rsp+0x290]
   14000c78e:	lea    rcx,[rsp+0x6b0]
   14000c796:	call   QWORD PTR [rip+0x19d84]        # 0x140026520
   14000c79c:	lea    r8,[rsp+0x4a0]
   14000c7a4:	lea    rdx,[rsp+0x6b0]
   14000c7ac:	lea    rcx,[rsp+0x80]
   14000c7b4:	call   QWORD PTR [rip+0x19d66]        # 0x140026520
   14000c7ba:	lea    rcx,[rsp+0x80]
   14000c7c2:	call   QWORD PTR [rip+0x19b88]        # 0x140026350
   14000c7c8:	mov    DWORD PTR [rsp+0x38],eax
   14000c7cc:	mov    rax,QWORD PTR [rsp+0x8e8]
   14000c7d4:	mov    ecx,DWORD PTR [rsp+0x38]
   14000c7d8:	cmp    DWORD PTR [rax],ecx
   14000c7da:	jle    0x14000c80d
   14000c7dc:	mov    BYTE PTR [rsp+0x30],0x1
   14000c7e1:	movsxd rax,DWORD PTR [rsp+0x38]
   14000c7e6:	mov    rcx,QWORD PTR [rsp+0x8e8]
   14000c7ee:	movsxd rcx,DWORD PTR [rcx]
   14000c7f1:	mov    r9,rax
   14000c7f4:	lea    r8,[rsp+0x80]
   14000c7fc:	mov    rdx,rcx
   14000c7ff:	mov    rcx,QWORD PTR [rsp+0x8e0]
   14000c807:	call   QWORD PTR [rip+0x19aab]        # 0x1400262b8
   14000c80d:	mov    rax,QWORD PTR [rsp+0x8e8]
   14000c815:	mov    ecx,DWORD PTR [rsp+0x38]
   14000c819:	mov    DWORD PTR [rax],ecx
   14000c81b:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c820:	mov    BYTE PTR [rsp+0x32],al
   14000c824:	lea    rcx,[rsp+0x58]
   14000c829:	call   0x140009e60
   14000c82e:	movzx  eax,BYTE PTR [rsp+0x32]
   14000c833:	mov    rcx,QWORD PTR [rsp+0x8c0]
   14000c83b:	xor    rcx,rsp
   14000c83e:	call   0x140021890
   14000c843:	add    rsp,0x8d0
   14000c84a:	pop    rdi
   14000c84b:	ret    
   14000c84c:	int3   
   14000c84d:	int3   
   14000c84e:	int3   
   14000c84f:	int3   
   14000c850:	int3   
   14000c851:	int3   
   14000c852:	int3   
   14000c853:	int3   
   14000c854:	int3   
   14000c855:	int3   
   14000c856:	int3   
   14000c857:	int3   
   14000c858:	int3   
   14000c859:	int3   
   14000c85a:	int3   
   14000c85b:	int3   
   14000c85c:	int3   
   14000c85d:	int3   
   14000c85e:	int3   
   14000c85f:	int3   
   14000c860:	mov    QWORD PTR [rsp+0x20],r9
   14000c865:	mov    QWORD PTR [rsp+0x18],r8
   14000c86a:	mov    QWORD PTR [rsp+0x10],rdx
   14000c86f:	mov    QWORD PTR [rsp+0x8],rcx
   14000c874:	sub    rsp,0xa8
   14000c87b:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14000c884:	mov    DWORD PTR [rsp+0x34],0x0
   14000c88c:	lea    rcx,[rsp+0x58]
   14000c891:	call   0x140009e20
   14000c896:	nop
   14000c897:	mov    QWORD PTR [rsp+0x40],0x0
   14000c8a0:	lea    rax,[rsp+0x40]
   14000c8a5:	mov    QWORD PTR [rsp+0x20],rax
   14000c8aa:	mov    r9d,0x20019
   14000c8b0:	xor    r8d,r8d
   14000c8b3:	mov    rdx,QWORD PTR [rsp+0xb8]
   14000c8bb:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000c8c3:	call   QWORD PTR [rip+0x1977f]        # 0x140026048
   14000c8c9:	mov    DWORD PTR [rsp+0x38],eax
   14000c8cd:	cmp    DWORD PTR [rsp+0x38],0x0
   14000c8d2:	jne    0x14000c995
   14000c8d8:	mov    r8,QWORD PTR [rsp+0xc0]
   14000c8e0:	mov    rdx,QWORD PTR [rsp+0x40]
   14000c8e5:	lea    rcx,[rsp+0x80]
   14000c8ed:	call   0x14000cc70
   14000c8f2:	mov    QWORD PTR [rsp+0x48],rax
   14000c8f7:	mov    rax,QWORD PTR [rsp+0x48]
   14000c8fc:	mov    QWORD PTR [rsp+0x70],rax
   14000c901:	mov    rdx,QWORD PTR [rsp+0x70]
   14000c906:	lea    rcx,[rsp+0x58]
   14000c90b:	call   0x14000a260
   14000c910:	nop
   14000c911:	lea    rcx,[rsp+0x80]
   14000c919:	call   0x140009e60
   14000c91e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c923:	call   QWORD PTR [rip+0x196d7]        # 0x140026000
   14000c929:	lea    rcx,[rsp+0x58]
   14000c92e:	call   0x14000ad20
   14000c933:	test   eax,eax
   14000c935:	jne    0x14000c995
   14000c937:	lea    rcx,[rsp+0x58]
   14000c93c:	call   0x14000a540
   14000c941:	mov    DWORD PTR [rsp+0x30],eax
   14000c945:	mov    eax,DWORD PTR [rsp+0xd0]
   14000c94c:	cmp    DWORD PTR [rsp+0x30],eax
   14000c950:	jge    0x14000c995
   14000c952:	mov    eax,DWORD PTR [rsp+0x30]
   14000c956:	inc    eax
   14000c958:	cdqe   
   14000c95a:	mov    QWORD PTR [rsp+0x50],rax
   14000c95f:	lea    rcx,[rsp+0x58]
   14000c964:	call   0x14000a520
   14000c969:	movsxd rcx,DWORD PTR [rsp+0xd0]
   14000c971:	mov    rdx,QWORD PTR [rsp+0x50]
   14000c976:	mov    r9,rdx
   14000c979:	mov    r8,rax
   14000c97c:	mov    rdx,rcx
   14000c97f:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000c987:	call   QWORD PTR [rip+0x1992b]        # 0x1400262b8
   14000c98d:	mov    DWORD PTR [rsp+0x34],0x1
   14000c995:	mov    eax,DWORD PTR [rsp+0x34]
   14000c999:	mov    DWORD PTR [rsp+0x3c],eax
   14000c99d:	lea    rcx,[rsp+0x58]
   14000c9a2:	call   0x140009e60
   14000c9a7:	mov    eax,DWORD PTR [rsp+0x3c]
   14000c9ab:	add    rsp,0xa8
   14000c9b2:	ret    
   14000c9b3:	int3   
   14000c9b4:	int3   
   14000c9b5:	int3   
   14000c9b6:	int3   
   14000c9b7:	int3   
   14000c9b8:	int3   
   14000c9b9:	int3   
   14000c9ba:	int3   
   14000c9bb:	int3   
   14000c9bc:	int3   
   14000c9bd:	int3   
   14000c9be:	int3   
   14000c9bf:	int3   
   14000c9c0:	mov    QWORD PTR [rsp+0x20],r9
   14000c9c5:	mov    QWORD PTR [rsp+0x18],r8
   14000c9ca:	mov    QWORD PTR [rsp+0x10],rdx
   14000c9cf:	mov    QWORD PTR [rsp+0x8],rcx
   14000c9d4:	sub    rsp,0x98
   14000c9db:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000c9e4:	mov    DWORD PTR [rsp+0x30],0x0
   14000c9ec:	lea    rcx,[rsp+0x50]
   14000c9f1:	call   0x140009e20
   14000c9f6:	nop
   14000c9f7:	mov    QWORD PTR [rsp+0x38],0x0
   14000ca00:	lea    rax,[rsp+0x38]
   14000ca05:	mov    QWORD PTR [rsp+0x20],rax
   14000ca0a:	mov    r9d,0x20019
   14000ca10:	xor    r8d,r8d
   14000ca13:	mov    rdx,QWORD PTR [rsp+0xb0]
   14000ca1b:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000ca23:	call   QWORD PTR [rip+0x1961f]        # 0x140026048
   14000ca29:	mov    DWORD PTR [rsp+0x34],eax
   14000ca2d:	cmp    DWORD PTR [rsp+0x34],0x0
   14000ca32:	jne    0x14000ca7f
   14000ca34:	mov    r8,QWORD PTR [rsp+0xb8]
   14000ca3c:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ca41:	lea    rcx,[rsp+0x70]
   14000ca46:	call   0x14000cc70
   14000ca4b:	mov    QWORD PTR [rsp+0x40],rax
   14000ca50:	mov    rax,QWORD PTR [rsp+0x40]
   14000ca55:	mov    QWORD PTR [rsp+0x48],rax
   14000ca5a:	mov    rdx,QWORD PTR [rsp+0x48]
   14000ca5f:	lea    rcx,[rsp+0x50]
   14000ca64:	call   0x14000a260
   14000ca69:	nop
   14000ca6a:	lea    rcx,[rsp+0x70]
   14000ca6f:	call   0x140009e60
   14000ca74:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ca79:	call   QWORD PTR [rip+0x19581]        # 0x140026000
   14000ca7f:	lea    rdx,[rsp+0x50]
   14000ca84:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000ca8c:	call   0x140009e90
   14000ca91:	mov    eax,DWORD PTR [rsp+0x30]
   14000ca95:	or     eax,0x1
   14000ca98:	mov    DWORD PTR [rsp+0x30],eax
   14000ca9c:	lea    rcx,[rsp+0x50]
   14000caa1:	call   0x140009e60
   14000caa6:	mov    rax,QWORD PTR [rsp+0xa0]
   14000caae:	add    rsp,0x98
   14000cab5:	ret    
   14000cab6:	int3   
   14000cab7:	int3   
   14000cab8:	int3   
   14000cab9:	int3   
   14000caba:	int3   
   14000cabb:	int3   
   14000cabc:	int3   
   14000cabd:	int3   
   14000cabe:	int3   
   14000cabf:	int3   
   14000cac0:	mov    QWORD PTR [rsp+0x20],r9
   14000cac5:	mov    QWORD PTR [rsp+0x18],r8
   14000caca:	mov    QWORD PTR [rsp+0x10],rdx
   14000cacf:	mov    QWORD PTR [rsp+0x8],rcx
   14000cad4:	sub    rsp,0x68
   14000cad8:	mov    DWORD PTR [rsp+0x54],0x0
   14000cae0:	mov    QWORD PTR [rsp+0x58],0x0
   14000cae9:	mov    QWORD PTR [rsp+0x40],0x0
   14000caf2:	lea    rax,[rsp+0x58]
   14000caf7:	mov    QWORD PTR [rsp+0x38],rax
   14000cafc:	mov    QWORD PTR [rsp+0x30],0x0
   14000cb05:	mov    DWORD PTR [rsp+0x28],0x2001f
   14000cb0d:	mov    DWORD PTR [rsp+0x20],0x0
   14000cb15:	xor    r9d,r9d
   14000cb18:	xor    r8d,r8d
   14000cb1b:	mov    rdx,QWORD PTR [rsp+0x78]
   14000cb20:	mov    rcx,QWORD PTR [rsp+0x70]
   14000cb25:	call   QWORD PTR [rip+0x19505]        # 0x140026030
   14000cb2b:	mov    DWORD PTR [rsp+0x50],eax
   14000cb2f:	cmp    DWORD PTR [rsp+0x50],0x0
   14000cb34:	jne    0x14000cb92
   14000cb36:	mov    rcx,QWORD PTR [rsp+0x88]
   14000cb3e:	call   QWORD PTR [rip+0x1980c]        # 0x140026350
   14000cb44:	shl    rax,1
   14000cb47:	mov    DWORD PTR [rsp+0x28],eax
   14000cb4b:	mov    rax,QWORD PTR [rsp+0x88]
   14000cb53:	mov    QWORD PTR [rsp+0x20],rax
   14000cb58:	mov    r9d,0x1
   14000cb5e:	xor    r8d,r8d
   14000cb61:	mov    rdx,QWORD PTR [rsp+0x80]
   14000cb69:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cb6e:	call   QWORD PTR [rip+0x194a4]        # 0x140026018
   14000cb74:	mov    DWORD PTR [rsp+0x50],eax
   14000cb78:	cmp    DWORD PTR [rsp+0x50],0x0
   14000cb7d:	jne    0x14000cb87
   14000cb7f:	mov    DWORD PTR [rsp+0x54],0x1
   14000cb87:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cb8c:	call   QWORD PTR [rip+0x1946e]        # 0x140026000
   14000cb92:	mov    eax,DWORD PTR [rsp+0x54]
   14000cb96:	add    rsp,0x68
   14000cb9a:	ret    
   14000cb9b:	int3   
   14000cb9c:	int3   
   14000cb9d:	int3   
   14000cb9e:	int3   
   14000cb9f:	int3   
   14000cba0:	int3   
   14000cba1:	int3   
   14000cba2:	int3   
   14000cba3:	int3   
   14000cba4:	int3   
   14000cba5:	int3   
   14000cba6:	int3   
   14000cba7:	int3   
   14000cba8:	int3   
   14000cba9:	int3   
   14000cbaa:	int3   
   14000cbab:	int3   
   14000cbac:	int3   
   14000cbad:	int3   
   14000cbae:	int3   
   14000cbaf:	int3   
   14000cbb0:	mov    QWORD PTR [rsp+0x18],r8
   14000cbb5:	mov    QWORD PTR [rsp+0x10],rdx
   14000cbba:	mov    QWORD PTR [rsp+0x8],rcx
   14000cbbf:	sub    rsp,0x68
   14000cbc3:	mov    DWORD PTR [rsp+0x54],0x0
   14000cbcb:	mov    QWORD PTR [rsp+0x58],0x0
   14000cbd4:	mov    QWORD PTR [rsp+0x40],0x0
   14000cbdd:	lea    rax,[rsp+0x58]
   14000cbe2:	mov    QWORD PTR [rsp+0x38],rax
   14000cbe7:	mov    QWORD PTR [rsp+0x30],0x0
   14000cbf0:	mov    DWORD PTR [rsp+0x28],0x2001f
   14000cbf8:	mov    DWORD PTR [rsp+0x20],0x0
   14000cc00:	xor    r9d,r9d
   14000cc03:	xor    r8d,r8d
   14000cc06:	mov    rdx,QWORD PTR [rsp+0x78]
   14000cc0b:	mov    rcx,QWORD PTR [rsp+0x70]
   14000cc10:	call   QWORD PTR [rip+0x1941a]        # 0x140026030
   14000cc16:	mov    DWORD PTR [rsp+0x50],eax
   14000cc1a:	cmp    DWORD PTR [rsp+0x50],0x0
   14000cc1f:	jne    0x14000cc52
   14000cc21:	mov    rdx,QWORD PTR [rsp+0x80]
   14000cc29:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cc2e:	call   QWORD PTR [rip+0x193d4]        # 0x140026008
   14000cc34:	mov    DWORD PTR [rsp+0x50],eax
   14000cc38:	cmp    DWORD PTR [rsp+0x50],0x0
   14000cc3d:	jne    0x14000cc47
   14000cc3f:	mov    DWORD PTR [rsp+0x54],0x1
   14000cc47:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cc4c:	call   QWORD PTR [rip+0x193ae]        # 0x140026000
   14000cc52:	mov    eax,DWORD PTR [rsp+0x54]
   14000cc56:	add    rsp,0x68
   14000cc5a:	ret    
   14000cc5b:	int3   
   14000cc5c:	int3   
   14000cc5d:	int3   
   14000cc5e:	int3   
   14000cc5f:	int3   
   14000cc60:	int3   
   14000cc61:	int3   
   14000cc62:	int3   
   14000cc63:	int3   
   14000cc64:	int3   
   14000cc65:	int3   
   14000cc66:	int3   
   14000cc67:	int3   
   14000cc68:	int3   
   14000cc69:	int3   
   14000cc6a:	int3   
   14000cc6b:	int3   
   14000cc6c:	int3   
   14000cc6d:	int3   
   14000cc6e:	int3   
   14000cc6f:	int3   
   14000cc70:	mov    QWORD PTR [rsp+0x18],r8
   14000cc75:	mov    QWORD PTR [rsp+0x10],rdx
   14000cc7a:	mov    QWORD PTR [rsp+0x8],rcx
   14000cc7f:	sub    rsp,0x78
   14000cc83:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000cc8c:	mov    DWORD PTR [rsp+0x38],0x0
   14000cc94:	lea    rcx,[rsp+0x50]
   14000cc99:	call   0x140009e20
   14000cc9e:	nop
   14000cc9f:	mov    DWORD PTR [rsp+0x30],0x1000
   14000cca7:	mov    edx,DWORD PTR [rsp+0x30]
   14000ccab:	lea    rcx,[rsp+0x50]
   14000ccb0:	call   0x14000a5f0
   14000ccb5:	mov    QWORD PTR [rsp+0x40],rax
   14000ccba:	mov    DWORD PTR [rsp+0x34],0x1
   14000ccc2:	lea    rax,[rsp+0x30]
   14000ccc7:	mov    QWORD PTR [rsp+0x28],rax
   14000cccc:	mov    rax,QWORD PTR [rsp+0x40]
   14000ccd1:	mov    QWORD PTR [rsp+0x20],rax
   14000ccd6:	lea    r9,[rsp+0x34]
   14000ccdb:	xor    r8d,r8d
   14000ccde:	mov    rdx,QWORD PTR [rsp+0x90]
   14000cce6:	mov    rcx,QWORD PTR [rsp+0x88]
   14000ccee:	call   QWORD PTR [rip+0x1935c]        # 0x140026050
   14000ccf4:	mov    DWORD PTR [rsp+0x3c],eax
   14000ccf8:	cmp    DWORD PTR [rsp+0x3c],0x0
   14000ccfd:	jne    0x14000cd06
   14000ccff:	cmp    DWORD PTR [rsp+0x34],0x1
   14000cd04:	je     0x14000cd19
   14000cd06:	lea    rdx,[rip+0x1ef7f]        # 0x14002bc8c
   14000cd0d:	lea    rcx,[rsp+0x50]
   14000cd12:	call   0x14000a200
   14000cd17:	jmp    0x14000cd32
   14000cd19:	mov    edx,0xffffffff
   14000cd1e:	lea    rcx,[rsp+0x50]
   14000cd23:	call   0x14000a6d0
   14000cd28:	lea    rcx,[rsp+0x50]
   14000cd2d:	call   0x14000a970
   14000cd32:	lea    rdx,[rsp+0x50]
   14000cd37:	mov    rcx,QWORD PTR [rsp+0x80]
   14000cd3f:	call   0x140009e90
   14000cd44:	mov    eax,DWORD PTR [rsp+0x38]
   14000cd48:	or     eax,0x1
   14000cd4b:	mov    DWORD PTR [rsp+0x38],eax
   14000cd4f:	lea    rcx,[rsp+0x50]
   14000cd54:	call   0x140009e60
   14000cd59:	mov    rax,QWORD PTR [rsp+0x80]
   14000cd61:	add    rsp,0x78
   14000cd65:	ret    
   14000cd66:	int3   
   14000cd67:	int3   
   14000cd68:	int3   
   14000cd69:	int3   
   14000cd6a:	int3   
   14000cd6b:	int3   
   14000cd6c:	int3   
   14000cd6d:	int3   
   14000cd6e:	int3   
   14000cd6f:	int3   
   14000cd70:	mov    QWORD PTR [rsp+0x20],r9
   14000cd75:	mov    QWORD PTR [rsp+0x18],r8
   14000cd7a:	mov    QWORD PTR [rsp+0x10],rdx
   14000cd7f:	mov    QWORD PTR [rsp+0x8],rcx
   14000cd84:	sub    rsp,0x48
   14000cd88:	mov    DWORD PTR [rsp+0x30],0x0
   14000cd90:	mov    QWORD PTR [rsp+0x38],0x0
   14000cd99:	lea    rax,[rsp+0x38]
   14000cd9e:	mov    QWORD PTR [rsp+0x20],rax
   14000cda3:	mov    r9d,0x20019
   14000cda9:	xor    r8d,r8d
   14000cdac:	mov    rdx,QWORD PTR [rsp+0x58]
   14000cdb1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cdb6:	call   QWORD PTR [rip+0x1928c]        # 0x140026048
   14000cdbc:	mov    DWORD PTR [rsp+0x34],eax
   14000cdc0:	cmp    DWORD PTR [rsp+0x34],0x0
   14000cdc5:	jne    0x14000cdf2
   14000cdc7:	mov    r8,QWORD PTR [rsp+0x68]
   14000cdcc:	mov    rdx,QWORD PTR [rsp+0x60]
   14000cdd1:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cdd6:	call   0x14000cee0
   14000cddb:	test   eax,eax
   14000cddd:	je     0x14000cde7
   14000cddf:	mov    DWORD PTR [rsp+0x30],0x1
   14000cde7:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cdec:	call   QWORD PTR [rip+0x1920e]        # 0x140026000
   14000cdf2:	mov    eax,DWORD PTR [rsp+0x30]
   14000cdf6:	add    rsp,0x48
   14000cdfa:	ret    
   14000cdfb:	int3   
   14000cdfc:	int3   
   14000cdfd:	int3   
   14000cdfe:	int3   
   14000cdff:	int3   
   14000ce00:	int3   
   14000ce01:	int3   
   14000ce02:	int3   
   14000ce03:	int3   
   14000ce04:	int3   
   14000ce05:	int3   
   14000ce06:	int3   
   14000ce07:	int3   
   14000ce08:	int3   
   14000ce09:	int3   
   14000ce0a:	int3   
   14000ce0b:	int3   
   14000ce0c:	int3   
   14000ce0d:	int3   
   14000ce0e:	int3   
   14000ce0f:	int3   
   14000ce10:	mov    DWORD PTR [rsp+0x20],r9d
   14000ce15:	mov    QWORD PTR [rsp+0x18],r8
   14000ce1a:	mov    QWORD PTR [rsp+0x10],rdx
   14000ce1f:	mov    QWORD PTR [rsp+0x8],rcx
   14000ce24:	sub    rsp,0x68
   14000ce28:	mov    DWORD PTR [rsp+0x50],0x0
   14000ce30:	mov    QWORD PTR [rsp+0x58],0x0
   14000ce39:	mov    QWORD PTR [rsp+0x40],0x0
   14000ce42:	lea    rax,[rsp+0x58]
   14000ce47:	mov    QWORD PTR [rsp+0x38],rax
   14000ce4c:	mov    QWORD PTR [rsp+0x30],0x0
   14000ce55:	mov    DWORD PTR [rsp+0x28],0x2001f
   14000ce5d:	mov    DWORD PTR [rsp+0x20],0x0
   14000ce65:	xor    r9d,r9d
   14000ce68:	xor    r8d,r8d
   14000ce6b:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ce70:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ce75:	call   QWORD PTR [rip+0x191b5]        # 0x140026030
   14000ce7b:	mov    DWORD PTR [rsp+0x54],eax
   14000ce7f:	cmp    DWORD PTR [rsp+0x54],0x0
   14000ce84:	jne    0x14000cece
   14000ce86:	mov    DWORD PTR [rsp+0x28],0x4
   14000ce8e:	lea    rax,[rsp+0x88]
   14000ce96:	mov    QWORD PTR [rsp+0x20],rax
   14000ce9b:	mov    r9d,0x4
   14000cea1:	xor    r8d,r8d
   14000cea4:	mov    rdx,QWORD PTR [rsp+0x80]
   14000ceac:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ceb1:	call   QWORD PTR [rip+0x19161]        # 0x140026018
   14000ceb7:	test   eax,eax
   14000ceb9:	jne    0x14000cec3
   14000cebb:	mov    DWORD PTR [rsp+0x50],0x1
   14000cec3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cec8:	call   QWORD PTR [rip+0x19132]        # 0x140026000
   14000cece:	mov    eax,DWORD PTR [rsp+0x50]
   14000ced2:	add    rsp,0x68
   14000ced6:	ret    
   14000ced7:	int3   
   14000ced8:	int3   
   14000ced9:	int3   
   14000ceda:	int3   
   14000cedb:	int3   
   14000cedc:	int3   
   14000cedd:	int3   
   14000cede:	int3   
   14000cedf:	int3   
   14000cee0:	mov    QWORD PTR [rsp+0x18],r8
   14000cee5:	mov    QWORD PTR [rsp+0x10],rdx
   14000ceea:	mov    QWORD PTR [rsp+0x8],rcx
   14000ceef:	sub    rsp,0x48
   14000cef3:	mov    DWORD PTR [rsp+0x38],0x0
   14000cefb:	mov    DWORD PTR [rsp+0x34],0x4
   14000cf03:	mov    DWORD PTR [rsp+0x30],0x4
   14000cf0b:	lea    rax,[rsp+0x34]
   14000cf10:	mov    QWORD PTR [rsp+0x28],rax
   14000cf15:	mov    rax,QWORD PTR [rsp+0x60]
   14000cf1a:	mov    QWORD PTR [rsp+0x20],rax
   14000cf1f:	lea    r9,[rsp+0x30]
   14000cf24:	xor    r8d,r8d
   14000cf27:	mov    rdx,QWORD PTR [rsp+0x58]
   14000cf2c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cf31:	call   QWORD PTR [rip+0x19119]        # 0x140026050
   14000cf37:	test   eax,eax
   14000cf39:	jne    0x14000cf58
   14000cf3b:	cmp    DWORD PTR [rsp+0x30],0x4
   14000cf40:	je     0x14000cf49
   14000cf42:	cmp    DWORD PTR [rsp+0x30],0x3
   14000cf47:	jne    0x14000cf58
   14000cf49:	cmp    DWORD PTR [rsp+0x34],0x4
   14000cf4e:	jne    0x14000cf58
   14000cf50:	mov    DWORD PTR [rsp+0x38],0x1
   14000cf58:	mov    eax,DWORD PTR [rsp+0x38]
   14000cf5c:	add    rsp,0x48
   14000cf60:	ret    
   14000cf61:	int3   
   14000cf62:	int3   
   14000cf63:	int3   
   14000cf64:	int3   
   14000cf65:	int3   
   14000cf66:	int3   
   14000cf67:	int3   
   14000cf68:	int3   
   14000cf69:	int3   
   14000cf6a:	int3   
   14000cf6b:	int3   
   14000cf6c:	int3   
   14000cf6d:	int3   
   14000cf6e:	int3   
   14000cf6f:	int3   
   14000cf70:	mov    QWORD PTR [rsp+0x20],r9
   14000cf75:	mov    QWORD PTR [rsp+0x18],r8
   14000cf7a:	mov    QWORD PTR [rsp+0x10],rdx
   14000cf7f:	mov    QWORD PTR [rsp+0x8],rcx
   14000cf84:	sub    rsp,0x48
   14000cf88:	mov    DWORD PTR [rsp+0x30],0x0
   14000cf90:	mov    QWORD PTR [rsp+0x38],0x0
   14000cf99:	lea    rax,[rsp+0x38]
   14000cf9e:	mov    QWORD PTR [rsp+0x20],rax
   14000cfa3:	mov    r9d,0x20019
   14000cfa9:	xor    r8d,r8d
   14000cfac:	mov    rdx,QWORD PTR [rsp+0x58]
   14000cfb1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cfb6:	call   QWORD PTR [rip+0x1908c]        # 0x140026048
   14000cfbc:	mov    DWORD PTR [rsp+0x34],eax
   14000cfc0:	cmp    DWORD PTR [rsp+0x34],0x0
   14000cfc5:	jne    0x14000cfef
   14000cfc7:	mov    r9,QWORD PTR [rsp+0x70]
   14000cfcc:	mov    r8,QWORD PTR [rsp+0x68]
   14000cfd1:	mov    rdx,QWORD PTR [rsp+0x60]
   14000cfd6:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cfdb:	call   0x140010400
   14000cfe0:	mov    DWORD PTR [rsp+0x30],eax
   14000cfe4:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cfe9:	call   QWORD PTR [rip+0x19011]        # 0x140026000
   14000cfef:	mov    eax,DWORD PTR [rsp+0x30]
   14000cff3:	add    rsp,0x48
   14000cff7:	ret    
   14000cff8:	int3   
   14000cff9:	int3   
   14000cffa:	int3   
   14000cffb:	int3   
   14000cffc:	int3   
   14000cffd:	int3   
   14000cffe:	int3   
   14000cfff:	int3   
   14000d000:	mov    QWORD PTR [rsp+0x20],r9
   14000d005:	mov    QWORD PTR [rsp+0x18],r8
   14000d00a:	mov    QWORD PTR [rsp+0x10],rdx
   14000d00f:	mov    QWORD PTR [rsp+0x8],rcx
   14000d014:	sub    rsp,0x68
   14000d018:	mov    DWORD PTR [rsp+0x50],0x0
   14000d020:	mov    QWORD PTR [rsp+0x58],0x0
   14000d029:	cmp    DWORD PTR [rsp+0x90],0x0
   14000d031:	jbe    0x14000d0cf
   14000d037:	mov    QWORD PTR [rsp+0x40],0x0
   14000d040:	lea    rax,[rsp+0x58]
   14000d045:	mov    QWORD PTR [rsp+0x38],rax
   14000d04a:	mov    QWORD PTR [rsp+0x30],0x0
   14000d053:	mov    DWORD PTR [rsp+0x28],0x2001f
   14000d05b:	mov    DWORD PTR [rsp+0x20],0x0
   14000d063:	xor    r9d,r9d
   14000d066:	xor    r8d,r8d
   14000d069:	mov    rdx,QWORD PTR [rsp+0x78]
   14000d06e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000d073:	call   QWORD PTR [rip+0x18fb7]        # 0x140026030
   14000d079:	mov    DWORD PTR [rsp+0x54],eax
   14000d07d:	cmp    DWORD PTR [rsp+0x54],0x0
   14000d082:	jne    0x14000d0cf
   14000d084:	mov    eax,DWORD PTR [rsp+0x90]
   14000d08b:	mov    DWORD PTR [rsp+0x28],eax
   14000d08f:	mov    rax,QWORD PTR [rsp+0x88]
   14000d097:	mov    QWORD PTR [rsp+0x20],rax
   14000d09c:	mov    r9d,0x3
   14000d0a2:	xor    r8d,r8d
   14000d0a5:	mov    rdx,QWORD PTR [rsp+0x80]
   14000d0ad:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d0b2:	call   QWORD PTR [rip+0x18f60]        # 0x140026018
   14000d0b8:	test   eax,eax
   14000d0ba:	jne    0x14000d0c4
   14000d0bc:	mov    DWORD PTR [rsp+0x50],0x1
   14000d0c4:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d0c9:	call   QWORD PTR [rip+0x18f31]        # 0x140026000
   14000d0cf:	mov    eax,DWORD PTR [rsp+0x50]
   14000d0d3:	add    rsp,0x68
   14000d0d7:	ret    
   14000d0d8:	int3   
   14000d0d9:	int3   
   14000d0da:	int3   
   14000d0db:	int3   
   14000d0dc:	int3   
   14000d0dd:	int3   
   14000d0de:	int3   
   14000d0df:	int3   
   14000d0e0:	mov    QWORD PTR [rsp+0x18],r8
   14000d0e5:	mov    QWORD PTR [rsp+0x10],rdx
   14000d0ea:	mov    QWORD PTR [rsp+0x8],rcx
   14000d0ef:	sub    rsp,0x48
   14000d0f3:	mov    DWORD PTR [rsp+0x30],0x0
   14000d0fb:	mov    QWORD PTR [rsp+0x38],0x0
   14000d104:	lea    rax,[rsp+0x38]
   14000d109:	mov    QWORD PTR [rsp+0x20],rax
   14000d10e:	mov    r9d,0x2001f
   14000d114:	xor    r8d,r8d
   14000d117:	mov    rdx,QWORD PTR [rsp+0x58]
   14000d11c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d121:	call   QWORD PTR [rip+0x18f21]        # 0x140026048
   14000d127:	mov    DWORD PTR [rsp+0x34],eax
   14000d12b:	cmp    DWORD PTR [rsp+0x34],0x0
   14000d130:	jne    0x14000d159
   14000d132:	mov    rdx,QWORD PTR [rsp+0x60]
   14000d137:	mov    rcx,QWORD PTR [rsp+0x38]
   14000d13c:	call   QWORD PTR [rip+0x18ec6]        # 0x140026008
   14000d142:	test   eax,eax
   14000d144:	jne    0x14000d14e
   14000d146:	mov    DWORD PTR [rsp+0x30],0x1
   14000d14e:	mov    rcx,QWORD PTR [rsp+0x38]
   14000d153:	call   QWORD PTR [rip+0x18ea7]        # 0x140026000
   14000d159:	mov    eax,DWORD PTR [rsp+0x30]
   14000d15d:	add    rsp,0x48
   14000d161:	ret    
   14000d162:	int3   
   14000d163:	int3   
   14000d164:	int3   
   14000d165:	int3   
   14000d166:	int3   
   14000d167:	int3   
   14000d168:	int3   
   14000d169:	int3   
   14000d16a:	int3   
   14000d16b:	int3   
   14000d16c:	int3   
   14000d16d:	int3   
   14000d16e:	int3   
   14000d16f:	int3   
   14000d170:	mov    DWORD PTR [rsp+0x18],r8d
   14000d175:	mov    QWORD PTR [rsp+0x10],rdx
   14000d17a:	mov    QWORD PTR [rsp+0x8],rcx
   14000d17f:	sub    rsp,0x198
   14000d186:	mov    QWORD PTR [rsp+0xb8],0xfffffffffffffffe
   14000d192:	mov    DWORD PTR [rsp+0x58],0x0
   14000d19a:	mov    DWORD PTR [rsp+0x54],0x0
   14000d1a2:	mov    rdx,QWORD PTR [rsp+0x1a0]
   14000d1aa:	lea    rcx,[rsp+0xa0]
   14000d1b2:	call   0x140009f20
   14000d1b7:	nop
   14000d1b8:	lea    rdx,[rip+0x1eea1]        # 0x14002c060
   14000d1bf:	lea    rcx,[rsp+0xd8]
   14000d1c7:	call   0x140009f20
   14000d1cc:	nop
   14000d1cd:	lea    rdx,[rsp+0xd8]
   14000d1d5:	lea    rcx,[rsp+0xa0]
   14000d1dd:	call   0x14000a3e0
   14000d1e2:	nop
   14000d1e3:	lea    rcx,[rsp+0xd8]
   14000d1eb:	call   0x140009e60
   14000d1f0:	lea    rdx,[rip+0x1ee79]        # 0x14002c070
   14000d1f7:	lea    rcx,[rsp+0x70]
   14000d1fc:	call   0x140009f20
   14000d201:	nop
   14000d202:	mov    rdx,QWORD PTR [rsp+0x1a8]
   14000d20a:	lea    rcx,[rsp+0xc0]
   14000d212:	call   0x140009f20
   14000d217:	nop
   14000d218:	lea    rdx,[rsp+0xc0]
   14000d220:	lea    rcx,[rsp+0x70]
   14000d225:	call   0x14000a3e0
   14000d22a:	nop
   14000d22b:	lea    rcx,[rsp+0xc0]
   14000d233:	call   0x140009e60
   14000d238:	mov    r8d,0x68
   14000d23e:	xor    edx,edx
   14000d240:	lea    rcx,[rsp+0x120]
   14000d248:	call   0x1400216e0
   14000d24d:	mov    DWORD PTR [rsp+0x120],0x68
   14000d258:	xor    ecx,ecx
   14000d25a:	call   QWORD PTR [rip+0x18f28]        # 0x140026188
   14000d260:	lea    rcx,[rsp+0x70]
   14000d265:	call   0x14000a540
   14000d26a:	mov    edx,eax
   14000d26c:	lea    rcx,[rsp+0x70]
   14000d271:	call   0x14000a5f0
   14000d276:	mov    QWORD PTR [rsp+0x68],rax
   14000d27b:	lea    rcx,[rsp+0xa0]
   14000d283:	call   0x14000a520
   14000d288:	lea    rcx,[rsp+0x88]
   14000d290:	mov    QWORD PTR [rsp+0x48],rcx
   14000d295:	lea    rcx,[rsp+0x120]
   14000d29d:	mov    QWORD PTR [rsp+0x40],rcx
   14000d2a2:	mov    QWORD PTR [rsp+0x38],0x0
   14000d2ab:	mov    QWORD PTR [rsp+0x30],0x0
   14000d2b4:	mov    DWORD PTR [rsp+0x28],0x0
   14000d2bc:	mov    DWORD PTR [rsp+0x20],0x0
   14000d2c4:	xor    r9d,r9d
   14000d2c7:	xor    r8d,r8d
   14000d2ca:	mov    rcx,QWORD PTR [rsp+0x68]
   14000d2cf:	mov    rdx,rcx
   14000d2d2:	mov    rcx,rax
   14000d2d5:	call   QWORD PTR [rip+0x18dbd]        # 0x140026098
   14000d2db:	mov    DWORD PTR [rsp+0x58],eax
   14000d2df:	mov    edx,0xffffffff
   14000d2e4:	lea    rcx,[rsp+0x70]
   14000d2e9:	call   0x14000a6d0
   14000d2ee:	call   QWORD PTR [rip+0x18e64]        # 0x140026158
   14000d2f4:	mov    DWORD PTR [rsp+0x60],eax
   14000d2f8:	cmp    DWORD PTR [rsp+0x58],0x0
   14000d2fd:	je     0x14000d3ae
   14000d303:	cmp    DWORD PTR [rsp+0x1b0],0x0
   14000d30b:	je     0x14000d392
   14000d311:	mov    DWORD PTR [rsp+0x50],0x1
   14000d319:	mov    edx,0x1f4
   14000d31e:	mov    rcx,QWORD PTR [rsp+0x88]
   14000d326:	call   QWORD PTR [rip+0x18e0c]        # 0x140026138
   14000d32c:	test   eax,eax
   14000d32e:	jne    0x14000d33a
   14000d330:	mov    DWORD PTR [rsp+0x50],0x0
   14000d338:	jmp    0x14000d378
   14000d33a:	mov    DWORD PTR [rsp+0x20],0x1
   14000d342:	xor    r9d,r9d
   14000d345:	xor    r8d,r8d
   14000d348:	xor    edx,edx
   14000d34a:	lea    rcx,[rsp+0xf0]
   14000d352:	call   QWORD PTR [rip+0x19200]        # 0x140026558
   14000d358:	test   eax,eax
   14000d35a:	je     0x14000d378
   14000d35c:	lea    rcx,[rsp+0xf0]
   14000d364:	call   QWORD PTR [rip+0x191fe]        # 0x140026568
   14000d36a:	lea    rcx,[rsp+0xf0]
   14000d372:	call   QWORD PTR [rip+0x191e8]        # 0x140026560
   14000d378:	cmp    DWORD PTR [rsp+0x50],0x0
   14000d37d:	jne    0x14000d319
   14000d37f:	lea    rdx,[rsp+0x54]
   14000d384:	mov    rcx,QWORD PTR [rsp+0x88]
   14000d38c:	call   QWORD PTR [rip+0x18d76]        # 0x140026108
   14000d392:	mov    rcx,QWORD PTR [rsp+0x88]
   14000d39a:	call   QWORD PTR [rip+0x18d28]        # 0x1400260c8
   14000d3a0:	mov    rcx,QWORD PTR [rsp+0x90]
   14000d3a8:	call   QWORD PTR [rip+0x18d1a]        # 0x1400260c8
   14000d3ae:	mov    eax,DWORD PTR [rsp+0x54]
   14000d3b2:	mov    DWORD PTR [rsp+0x5c],eax
   14000d3b6:	lea    rcx,[rsp+0x70]
   14000d3bb:	call   0x140009e60
   14000d3c0:	nop
   14000d3c1:	lea    rcx,[rsp+0xa0]
   14000d3c9:	call   0x140009e60
   14000d3ce:	mov    eax,DWORD PTR [rsp+0x5c]
   14000d3d2:	add    rsp,0x198
   14000d3d9:	ret    
   14000d3da:	int3   
   14000d3db:	int3   
   14000d3dc:	int3   
   14000d3dd:	int3   
   14000d3de:	int3   
   14000d3df:	int3   
   14000d3e0:	mov    QWORD PTR [rsp+0x10],rdx
   14000d3e5:	mov    QWORD PTR [rsp+0x8],rcx
   14000d3ea:	push   rbx
   14000d3eb:	push   rdi
   14000d3ec:	sub    rsp,0xb8
   14000d3f3:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000d3ff:	mov    BYTE PTR [rsp+0x60],0x0
   14000d404:	mov    QWORD PTR [rsp+0x78],0x0
   14000d40d:	lea    rdx,[rip+0x1ecc4]        # 0x14002c0d8
   14000d414:	lea    rcx,[rsp+0x98]
   14000d41c:	call   0x140009f20
   14000d421:	nop
   14000d422:	lea    rcx,[rsp+0x98]
   14000d42a:	call   0x14000a520
   14000d42f:	mov    rcx,rax
   14000d432:	call   QWORD PTR [rip+0x18d78]        # 0x1400261b0
   14000d438:	mov    QWORD PTR [rsp+0x88],rax
   14000d440:	cmp    QWORD PTR [rsp+0x88],0x0
   14000d449:	je     0x14000d62b
   14000d44f:	lea    rdx,[rip+0x1eca2]        # 0x14002c0f8
   14000d456:	mov    rcx,QWORD PTR [rsp+0x88]
   14000d45e:	call   QWORD PTR [rip+0x18d44]        # 0x1400261a8
   14000d464:	mov    QWORD PTR [rsp+0x78],rax
   14000d469:	cmp    QWORD PTR [rsp+0x78],0x0
   14000d46f:	je     0x14000d61d
   14000d475:	mov    QWORD PTR [rsp+0x68],0x0
   14000d47e:	mov    DWORD PTR [rsp+0x70],0x0
   14000d486:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d48e:	cmp    DWORD PTR [rax],0x10
   14000d491:	jle    0x14000d60f
   14000d497:	lea    rdx,[rsp+0x70]
   14000d49c:	mov    rcx,QWORD PTR [rsp+0x68]
   14000d4a1:	call   QWORD PTR [rsp+0x78]
   14000d4a5:	cmp    eax,0x6f
   14000d4a8:	jne    0x14000d60f
   14000d4ae:	mov    eax,DWORD PTR [rsp+0x70]
   14000d4b2:	mov    ecx,eax
   14000d4b4:	call   QWORD PTR [rip+0x18e3e]        # 0x1400262f8
   14000d4ba:	mov    QWORD PTR [rsp+0x80],rax
   14000d4c2:	cmp    QWORD PTR [rsp+0x80],0x0
   14000d4cb:	je     0x14000d60f
   14000d4d1:	lea    rdx,[rsp+0x70]
   14000d4d6:	mov    rcx,QWORD PTR [rsp+0x80]
   14000d4de:	call   QWORD PTR [rsp+0x78]
   14000d4e2:	test   eax,eax
   14000d4e4:	jne    0x14000d601
   14000d4ea:	mov    BYTE PTR [rsp+0x60],0x1
   14000d4ef:	mov    rax,QWORD PTR [rsp+0x80]
   14000d4f7:	mov    QWORD PTR [rsp+0x68],rax
   14000d4fc:	mov    eax,0x1
   14000d501:	imul   rax,rax,0x7
   14000d505:	mov    rcx,QWORD PTR [rsp+0x68]
   14000d50a:	movzx  eax,BYTE PTR [rcx+rax*1+0x198]
   14000d512:	mov    ecx,0x1
   14000d517:	imul   rcx,rcx,0x6
   14000d51b:	mov    rdx,QWORD PTR [rsp+0x68]
   14000d520:	movzx  ecx,BYTE PTR [rdx+rcx*1+0x198]
   14000d528:	mov    edx,0x1
   14000d52d:	imul   rdx,rdx,0x5
   14000d531:	mov    r8,QWORD PTR [rsp+0x68]
   14000d536:	movzx  edx,BYTE PTR [r8+rdx*1+0x198]
   14000d53f:	mov    r8d,0x1
   14000d545:	imul   r8,r8,0x4
   14000d549:	mov    r9,QWORD PTR [rsp+0x68]
   14000d54e:	movzx  r8d,BYTE PTR [r9+r8*1+0x198]
   14000d557:	mov    r9d,0x1
   14000d55d:	imul   r9,r9,0x3
   14000d561:	mov    r10,QWORD PTR [rsp+0x68]
   14000d566:	movzx  r9d,BYTE PTR [r10+r9*1+0x198]
   14000d56f:	mov    r10d,0x1
   14000d575:	imul   r10,r10,0x2
   14000d579:	mov    r11,QWORD PTR [rsp+0x68]
   14000d57e:	movzx  r10d,BYTE PTR [r11+r10*1+0x198]
   14000d587:	mov    r11d,0x1
   14000d58d:	imul   r11,r11,0x1
   14000d591:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d596:	movzx  ebx,BYTE PTR [rbx+r11*1+0x198]
   14000d59f:	mov    r11d,0x1
   14000d5a5:	imul   r11,r11,0x0
   14000d5a9:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d5ae:	movzx  edi,BYTE PTR [rdi+r11*1+0x198]
   14000d5b7:	mov    r11,QWORD PTR [rsp+0xd8]
   14000d5bf:	movsxd r11,DWORD PTR [r11]
   14000d5c2:	mov    DWORD PTR [rsp+0x50],eax
   14000d5c6:	mov    DWORD PTR [rsp+0x48],ecx
   14000d5ca:	mov    DWORD PTR [rsp+0x40],edx
   14000d5ce:	mov    DWORD PTR [rsp+0x38],r8d
   14000d5d3:	mov    DWORD PTR [rsp+0x30],r9d
   14000d5d8:	mov    DWORD PTR [rsp+0x28],r10d
   14000d5dd:	mov    DWORD PTR [rsp+0x20],ebx
   14000d5e1:	mov    r9d,edi
   14000d5e4:	lea    r8,[rip+0x1eb55]        # 0x14002c140
   14000d5eb:	mov    rdx,r11
   14000d5ee:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000d5f6:	call   QWORD PTR [rip+0x18c5c]        # 0x140026258
   14000d5fc:	mov    BYTE PTR [rsp+0x60],0x1
   14000d601:	mov    rcx,QWORD PTR [rsp+0x80]
   14000d609:	call   QWORD PTR [rip+0x18d91]        # 0x1400263a0
   14000d60f:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d617:	mov    DWORD PTR [rax],0x10
   14000d61d:	mov    rcx,QWORD PTR [rsp+0x88]
   14000d625:	call   QWORD PTR [rip+0x18b75]        # 0x1400261a0
   14000d62b:	movzx  eax,BYTE PTR [rsp+0x60]
   14000d630:	mov    BYTE PTR [rsp+0x61],al
   14000d634:	lea    rcx,[rsp+0x98]
   14000d63c:	call   0x140009e60
   14000d641:	movzx  eax,BYTE PTR [rsp+0x61]
   14000d646:	add    rsp,0xb8
   14000d64d:	pop    rdi
   14000d64e:	pop    rbx
   14000d64f:	ret    
   14000d650:	int3   
   14000d651:	int3   
   14000d652:	int3   
   14000d653:	int3   
   14000d654:	int3   
   14000d655:	int3   
   14000d656:	int3   
   14000d657:	int3   
   14000d658:	int3   
   14000d659:	int3   
   14000d65a:	int3   
   14000d65b:	int3   
   14000d65c:	int3   
   14000d65d:	int3   
   14000d65e:	int3   
   14000d65f:	int3   
   14000d660:	mov    DWORD PTR [rsp+0x18],r8d
   14000d665:	mov    QWORD PTR [rsp+0x10],rdx
   14000d66a:	mov    QWORD PTR [rsp+0x8],rcx
   14000d66f:	push   rdi
   14000d670:	sub    rsp,0x80
   14000d677:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000d680:	mov    rax,QWORD PTR [rip+0x2dbc9]        # 0x14003b250
   14000d687:	xor    rax,rsp
   14000d68a:	mov    QWORD PTR [rsp+0x78],rax
   14000d68f:	mov    DWORD PTR [rsp+0x24],0x0
   14000d697:	lea    rcx,[rsp+0x28]
   14000d69c:	call   0x140009e20
   14000d6a1:	nop
   14000d6a2:	xor    eax,eax
   14000d6a4:	mov    WORD PTR [rsp+0x60],ax
   14000d6a9:	lea    rax,[rsp+0x62]
   14000d6ae:	mov    rdi,rax
   14000d6b1:	xor    eax,eax
   14000d6b3:	mov    ecx,0x12
   14000d6b8:	rep stos BYTE PTR es:[rdi],al
   14000d6ba:	mov    DWORD PTR [rsp+0x20],0x0
   14000d6c2:	jmp    0x14000d6ce
   14000d6c4:	mov    eax,DWORD PTR [rsp+0x20]
   14000d6c8:	inc    eax
   14000d6ca:	mov    DWORD PTR [rsp+0x20],eax
   14000d6ce:	mov    eax,DWORD PTR [rsp+0xa0]
   14000d6d5:	cmp    DWORD PTR [rsp+0x20],eax
   14000d6d9:	jge    0x14000d732
   14000d6db:	movsxd rax,DWORD PTR [rsp+0x20]
   14000d6e0:	mov    rcx,QWORD PTR [rsp+0x98]
   14000d6e8:	movzx  eax,BYTE PTR [rcx+rax*1]
   14000d6ec:	mov    r9d,eax
   14000d6ef:	lea    r8,[rip+0x1eaa2]        # 0x14002c198
   14000d6f6:	mov    edx,0xa
   14000d6fb:	lea    rcx,[rsp+0x60]
   14000d700:	call   QWORD PTR [rip+0x18b52]        # 0x140026258
   14000d706:	lea    rdx,[rsp+0x60]
   14000d70b:	lea    rcx,[rsp+0x48]
   14000d710:	call   0x140009f20
   14000d715:	nop
   14000d716:	lea    rdx,[rsp+0x48]
   14000d71b:	lea    rcx,[rsp+0x28]
   14000d720:	call   0x14000a3e0
   14000d725:	nop
   14000d726:	lea    rcx,[rsp+0x48]
   14000d72b:	call   0x140009e60
   14000d730:	jmp    0x14000d6c4
   14000d732:	lea    rdx,[rsp+0x28]
   14000d737:	mov    rcx,QWORD PTR [rsp+0x90]
   14000d73f:	call   0x140009e90
   14000d744:	mov    eax,DWORD PTR [rsp+0x24]
   14000d748:	or     eax,0x1
   14000d74b:	mov    DWORD PTR [rsp+0x24],eax
   14000d74f:	lea    rcx,[rsp+0x28]
   14000d754:	call   0x140009e60
   14000d759:	mov    rax,QWORD PTR [rsp+0x90]
   14000d761:	mov    rcx,QWORD PTR [rsp+0x78]
   14000d766:	xor    rcx,rsp
   14000d769:	call   0x140021890
   14000d76e:	add    rsp,0x80
   14000d775:	pop    rdi
   14000d776:	ret    
   14000d777:	int3   
   14000d778:	int3   
   14000d779:	int3   
   14000d77a:	int3   
   14000d77b:	int3   
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	mov    QWORD PTR [rsp+0x18],r8
   14000d785:	mov    QWORD PTR [rsp+0x10],rdx
   14000d78a:	mov    QWORD PTR [rsp+0x8],rcx
   14000d78f:	sub    rsp,0x478
   14000d796:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000d79f:	mov    rax,QWORD PTR [rip+0x2daaa]        # 0x14003b250
   14000d7a6:	xor    rax,rsp
   14000d7a9:	mov    QWORD PTR [rsp+0x460],rax
   14000d7b1:	mov    rcx,QWORD PTR [rsp+0x480]
   14000d7b9:	call   0x140013f60
   14000d7be:	mov    rcx,QWORD PTR [rsp+0x490]
   14000d7c6:	call   0x14000a520
   14000d7cb:	lea    r8,[rsp+0x28]
   14000d7d0:	mov    rdx,rax
   14000d7d3:	mov    rax,QWORD PTR [rsp+0x488]
   14000d7db:	mov    rcx,QWORD PTR [rax]
   14000d7de:	call   QWORD PTR [rip+0x1882c]        # 0x140026010
   14000d7e4:	mov    DWORD PTR [rsp+0x24],eax
   14000d7e8:	cmp    DWORD PTR [rsp+0x24],0x0
   14000d7ed:	je     0x14000d7f6
   14000d7ef:	xor    al,al
   14000d7f1:	jmp    0x14000d880
   14000d7f6:	mov    DWORD PTR [rsp+0x20],0x0
   14000d7fe:	xor    eax,eax
   14000d800:	cmp    eax,0x1
   14000d803:	je     0x14000d873
   14000d805:	mov    r9d,0x200
   14000d80b:	lea    r8,[rsp+0x60]
   14000d810:	mov    edx,DWORD PTR [rsp+0x20]
   14000d814:	mov    rcx,QWORD PTR [rsp+0x28]
   14000d819:	call   QWORD PTR [rip+0x18819]        # 0x140026038
   14000d81f:	mov    DWORD PTR [rsp+0x24],eax
   14000d823:	cmp    DWORD PTR [rsp+0x24],0x0
   14000d828:	je     0x14000d82c
   14000d82a:	jmp    0x14000d873
   14000d82c:	lea    rdx,[rsp+0x60]
   14000d831:	lea    rcx,[rsp+0x48]
   14000d836:	call   0x140009f20
   14000d83b:	mov    QWORD PTR [rsp+0x30],rax
   14000d840:	mov    rax,QWORD PTR [rsp+0x30]
   14000d845:	mov    QWORD PTR [rsp+0x38],rax
   14000d84a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000d84f:	mov    rcx,QWORD PTR [rsp+0x480]
   14000d857:	call   0x140014b10
   14000d85c:	nop
   14000d85d:	lea    rcx,[rsp+0x48]
   14000d862:	call   0x140009e60
   14000d867:	mov    eax,DWORD PTR [rsp+0x20]
   14000d86b:	inc    eax
   14000d86d:	mov    DWORD PTR [rsp+0x20],eax
   14000d871:	jmp    0x14000d7fe
   14000d873:	mov    rcx,QWORD PTR [rsp+0x28]
   14000d878:	call   QWORD PTR [rip+0x18782]        # 0x140026000
   14000d87e:	mov    al,0x1
   14000d880:	mov    rcx,QWORD PTR [rsp+0x460]
   14000d888:	xor    rcx,rsp
   14000d88b:	call   0x140021890
   14000d890:	add    rsp,0x478
   14000d897:	ret    
   14000d898:	int3   
   14000d899:	int3   
   14000d89a:	int3   
   14000d89b:	int3   
   14000d89c:	int3   
   14000d89d:	int3   
   14000d89e:	int3   
   14000d89f:	int3   
   14000d8a0:	mov    QWORD PTR [rsp+0x18],r8
   14000d8a5:	mov    QWORD PTR [rsp+0x10],rdx
   14000d8aa:	mov    QWORD PTR [rsp+0x8],rcx
   14000d8af:	mov    eax,0x10a8
   14000d8b4:	call   0x1400218e0
   14000d8b9:	sub    rsp,rax
   14000d8bc:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14000d8c5:	mov    rax,QWORD PTR [rip+0x2d984]        # 0x14003b250
   14000d8cc:	xor    rax,rsp
   14000d8cf:	mov    QWORD PTR [rsp+0x1090],rax
   14000d8d7:	lea    rcx,[rsp+0x60]
   14000d8dc:	call   0x140009e20
   14000d8e1:	nop
   14000d8e2:	mov    QWORD PTR [rsp+0x58],0x0
   14000d8eb:	lea    rax,[rsp+0x58]
   14000d8f0:	mov    QWORD PTR [rsp+0x20],rax
   14000d8f5:	mov    r9d,0x20019
   14000d8fb:	xor    r8d,r8d
   14000d8fe:	mov    rdx,QWORD PTR [rsp+0x10b8]
   14000d906:	mov    rcx,QWORD PTR [rsp+0x10b0]
   14000d90e:	call   QWORD PTR [rip+0x18734]        # 0x140026048
   14000d914:	mov    DWORD PTR [rsp+0x50],eax
   14000d918:	cmp    DWORD PTR [rsp+0x50],0x0
   14000d91d:	je     0x14000d938
   14000d91f:	mov    BYTE PTR [rsp+0x42],0x0
   14000d924:	lea    rcx,[rsp+0x60]
   14000d929:	call   0x140009e60
   14000d92e:	movzx  eax,BYTE PTR [rsp+0x42]
   14000d933:	jmp    0x14000d9fc
   14000d938:	mov    DWORD PTR [rsp+0x48],0x800
   14000d940:	mov    DWORD PTR [rsp+0x4c],0x0
   14000d948:	mov    DWORD PTR [rsp+0x44],0x0
   14000d950:	jmp    0x14000d95c
   14000d952:	mov    eax,DWORD PTR [rsp+0x44]
   14000d956:	inc    eax
   14000d958:	mov    DWORD PTR [rsp+0x44],eax
   14000d95c:	cmp    DWORD PTR [rsp+0x4c],0x0
   14000d961:	jne    0x14000d9e8
   14000d967:	mov    QWORD PTR [rsp+0x38],0x0
   14000d970:	mov    QWORD PTR [rsp+0x30],0x0
   14000d979:	mov    QWORD PTR [rsp+0x28],0x0
   14000d982:	mov    QWORD PTR [rsp+0x20],0x0
   14000d98b:	lea    r9,[rsp+0x48]
   14000d990:	lea    r8,[rsp+0x80]
   14000d998:	mov    edx,DWORD PTR [rsp+0x44]
   14000d99c:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d9a1:	call   QWORD PTR [rip+0x18699]        # 0x140026040
   14000d9a7:	mov    DWORD PTR [rsp+0x4c],eax
   14000d9ab:	mov    rdx,QWORD PTR [rsp+0x10c0]
   14000d9b3:	lea    rcx,[rsp+0x80]
   14000d9bb:	call   QWORD PTR [rip+0x18907]        # 0x1400262c8
   14000d9c1:	test   eax,eax
   14000d9c3:	jne    0x14000d9db
   14000d9c5:	mov    BYTE PTR [rsp+0x40],0x1
   14000d9ca:	lea    rcx,[rsp+0x60]
   14000d9cf:	call   0x140009e60
   14000d9d4:	movzx  eax,BYTE PTR [rsp+0x40]
   14000d9d9:	jmp    0x14000d9fc
   14000d9db:	mov    DWORD PTR [rsp+0x48],0x800
   14000d9e3:	jmp    0x14000d952
   14000d9e8:	mov    BYTE PTR [rsp+0x41],0x0
   14000d9ed:	lea    rcx,[rsp+0x60]
   14000d9f2:	call   0x140009e60
   14000d9f7:	movzx  eax,BYTE PTR [rsp+0x41]
   14000d9fc:	mov    rcx,QWORD PTR [rsp+0x1090]
   14000da04:	xor    rcx,rsp
   14000da07:	call   0x140021890
   14000da0c:	add    rsp,0x10a8
   14000da13:	ret    
   14000da14:	int3   
   14000da15:	int3   
   14000da16:	int3   
   14000da17:	int3   
   14000da18:	int3   
   14000da19:	int3   
   14000da1a:	int3   
   14000da1b:	int3   
   14000da1c:	int3   
   14000da1d:	int3   
   14000da1e:	int3   
   14000da1f:	int3   
   14000da20:	mov    QWORD PTR [rsp+0x18],r8
   14000da25:	mov    QWORD PTR [rsp+0x10],rdx
   14000da2a:	mov    QWORD PTR [rsp+0x8],rcx
   14000da2f:	sub    rsp,0x68
   14000da33:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000da3c:	mov    BYTE PTR [rsp+0x20],0x0
   14000da41:	mov    rdx,QWORD PTR [rsp+0x70]
   14000da46:	lea    rcx,[rsp+0x38]
   14000da4b:	call   0x140009f20
   14000da50:	nop
   14000da51:	lea    rdx,[rip+0x1e750]        # 0x14002c1a8
   14000da58:	lea    rcx,[rsp+0x38]
   14000da5d:	call   0x14000ab00
   14000da62:	mov    DWORD PTR [rsp+0x24],eax
   14000da66:	lea    rcx,[rip+0x1e74b]        # 0x14002c1b8
   14000da6d:	call   QWORD PTR [rip+0x188dd]        # 0x140026350
   14000da73:	mov    ecx,DWORD PTR [rsp+0x24]
   14000da77:	add    ecx,eax
   14000da79:	mov    eax,ecx
   14000da7b:	mov    DWORD PTR [rsp+0x24],eax
   14000da7f:	mov    edx,DWORD PTR [rsp+0x24]
   14000da83:	lea    rcx,[rsp+0x38]
   14000da88:	call   0x14000a570
   14000da8d:	mov    WORD PTR [rsp+0x2c],ax
   14000da92:	movzx  eax,WORD PTR [rsp+0x2c]
   14000da97:	cmp    eax,0x22
   14000da9a:	je     0x14000dae4
   14000da9c:	mov    r8d,DWORD PTR [rsp+0x24]
   14000daa1:	lea    rdx,[rip+0x1e324]        # 0x14002bdcc
   14000daa8:	lea    rcx,[rsp+0x38]
   14000daad:	call   0x14000ac00
   14000dab2:	mov    DWORD PTR [rsp+0x30],eax
   14000dab6:	lea    r8,[rip+0x1e327]        # 0x14002bde4
   14000dabd:	mov    edx,DWORD PTR [rsp+0x24]
   14000dac1:	lea    rcx,[rsp+0x38]
   14000dac6:	call   0x14000b5e0
   14000dacb:	mov    eax,DWORD PTR [rsp+0x30]
   14000dacf:	inc    eax
   14000dad1:	lea    r8,[rip+0x1e31c]        # 0x14002bdf4
   14000dad8:	mov    edx,eax
   14000dada:	lea    rcx,[rsp+0x38]
   14000dadf:	call   0x14000b5e0
   14000dae4:	lea    rcx,[rsp+0x38]
   14000dae9:	call   0x14000a540
   14000daee:	inc    eax
   14000daf0:	mov    DWORD PTR [rsp+0x28],eax
   14000daf4:	mov    rax,QWORD PTR [rsp+0x80]
   14000dafc:	mov    eax,DWORD PTR [rax]
   14000dafe:	cmp    DWORD PTR [rsp+0x28],eax
   14000db02:	jge    0x14000db41
   14000db04:	movsxd rax,DWORD PTR [rsp+0x28]
   14000db09:	mov    QWORD PTR [rsp+0x50],rax
   14000db0e:	lea    rcx,[rsp+0x38]
   14000db13:	call   0x14000a520
   14000db18:	mov    rcx,QWORD PTR [rsp+0x80]
   14000db20:	movsxd rcx,DWORD PTR [rcx]
   14000db23:	mov    rdx,QWORD PTR [rsp+0x50]
   14000db28:	mov    r9,rdx
   14000db2b:	mov    r8,rax
   14000db2e:	mov    rdx,rcx
   14000db31:	mov    rcx,QWORD PTR [rsp+0x78]
   14000db36:	call   QWORD PTR [rip+0x1877c]        # 0x1400262b8
   14000db3c:	mov    BYTE PTR [rsp+0x20],0x1
   14000db41:	mov    rax,QWORD PTR [rsp+0x80]
   14000db49:	mov    ecx,DWORD PTR [rsp+0x28]
   14000db4d:	mov    DWORD PTR [rax],ecx
   14000db4f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000db54:	mov    BYTE PTR [rsp+0x21],al
   14000db58:	lea    rcx,[rsp+0x38]
   14000db5d:	call   0x140009e60
   14000db62:	movzx  eax,BYTE PTR [rsp+0x21]
   14000db67:	add    rsp,0x68
   14000db6b:	ret    
   14000db6c:	int3   
   14000db6d:	int3   
   14000db6e:	int3   
   14000db6f:	int3   
   14000db70:	int3   
   14000db71:	int3   
   14000db72:	int3   
   14000db73:	int3   
   14000db74:	int3   
   14000db75:	int3   
   14000db76:	int3   
   14000db77:	int3   
   14000db78:	int3   
   14000db79:	int3   
   14000db7a:	int3   
   14000db7b:	int3   
   14000db7c:	int3   
   14000db7d:	int3   
   14000db7e:	int3   
   14000db7f:	int3   
   14000db80:	mov    DWORD PTR [rsp+0x20],r9d
   14000db85:	mov    QWORD PTR [rsp+0x18],r8
   14000db8a:	mov    QWORD PTR [rsp+0x10],rdx
   14000db8f:	mov    QWORD PTR [rsp+0x8],rcx
   14000db94:	sub    rsp,0xb8
   14000db9b:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
   14000dba7:	mov    BYTE PTR [rsp+0x30],0x0
   14000dbac:	lea    rcx,[rsp+0x60]
   14000dbb1:	call   0x140009e20
   14000dbb6:	nop
   14000dbb7:	mov    QWORD PTR [rsp+0x38],0x0
   14000dbc0:	lea    rax,[rsp+0x38]
   14000dbc5:	mov    QWORD PTR [rsp+0x20],rax
   14000dbca:	mov    r9d,0x20019
   14000dbd0:	xor    r8d,r8d
   14000dbd3:	mov    rdx,QWORD PTR [rsp+0xc0]
   14000dbdb:	mov    rcx,0xffffffff80000001
   14000dbe2:	call   QWORD PTR [rip+0x18460]        # 0x140026048
   14000dbe8:	mov    DWORD PTR [rsp+0x34],eax
   14000dbec:	cmp    DWORD PTR [rsp+0x34],0x0
   14000dbf1:	jne    0x14000dcea
   14000dbf7:	mov    DWORD PTR [rsp+0x48],0x1000
   14000dbff:	mov    edx,DWORD PTR [rsp+0x48]
   14000dc03:	lea    rcx,[rsp+0x60]
   14000dc08:	call   0x14000a5f0
   14000dc0d:	mov    QWORD PTR [rsp+0x98],rax
   14000dc15:	mov    DWORD PTR [rsp+0x54],0x1
   14000dc1d:	lea    rax,[rsp+0x48]
   14000dc22:	mov    QWORD PTR [rsp+0x28],rax
   14000dc27:	mov    rax,QWORD PTR [rsp+0x98]
   14000dc2f:	mov    QWORD PTR [rsp+0x20],rax
   14000dc34:	lea    r9,[rsp+0x54]
   14000dc39:	xor    r8d,r8d
   14000dc3c:	mov    rdx,QWORD PTR [rsp+0xc8]
   14000dc44:	mov    rcx,QWORD PTR [rsp+0x38]
   14000dc49:	call   QWORD PTR [rip+0x18401]        # 0x140026050
   14000dc4f:	mov    DWORD PTR [rsp+0x58],eax
   14000dc53:	mov    edx,0xffffffff
   14000dc58:	lea    rcx,[rsp+0x60]
   14000dc5d:	call   0x14000a6d0
   14000dc62:	cmp    DWORD PTR [rsp+0x58],0x0
   14000dc67:	jne    0x14000dcdf
   14000dc69:	cmp    DWORD PTR [rsp+0x54],0x1
   14000dc6e:	jne    0x14000dcdf
   14000dc70:	mov    BYTE PTR [rsp+0x30],0x1
   14000dc75:	lea    rcx,[rsp+0x60]
   14000dc7a:	call   0x14000ad20
   14000dc7f:	test   eax,eax
   14000dc81:	jne    0x14000dcdf
   14000dc83:	lea    rcx,[rsp+0x60]
   14000dc88:	call   0x14000a540
   14000dc8d:	mov    DWORD PTR [rsp+0x40],eax
   14000dc91:	mov    eax,DWORD PTR [rsp+0xd8]
   14000dc98:	cmp    DWORD PTR [rsp+0x40],eax
   14000dc9c:	jge    0x14000dcdf
   14000dc9e:	mov    eax,DWORD PTR [rsp+0x40]
   14000dca2:	inc    eax
   14000dca4:	cdqe   
   14000dca6:	mov    QWORD PTR [rsp+0x90],rax
   14000dcae:	lea    rcx,[rsp+0x60]
   14000dcb3:	call   0x14000a520
   14000dcb8:	movsxd rcx,DWORD PTR [rsp+0xd8]
   14000dcc0:	mov    rdx,QWORD PTR [rsp+0x90]
   14000dcc8:	mov    r9,rdx
   14000dccb:	mov    r8,rax
   14000dcce:	mov    rdx,rcx
   14000dcd1:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000dcd9:	call   QWORD PTR [rip+0x185d9]        # 0x1400262b8
   14000dcdf:	mov    rcx,QWORD PTR [rsp+0x38]
   14000dce4:	call   QWORD PTR [rip+0x18316]        # 0x140026000
   14000dcea:	movzx  eax,BYTE PTR [rsp+0x30]
   14000dcef:	test   eax,eax
   14000dcf1:	jne    0x14000de1d
   14000dcf7:	lea    rax,[rsp+0x38]
   14000dcfc:	mov    QWORD PTR [rsp+0x20],rax
   14000dd01:	mov    r9d,0x20019
   14000dd07:	xor    r8d,r8d
   14000dd0a:	mov    rdx,QWORD PTR [rsp+0xc0]
   14000dd12:	mov    rcx,0xffffffff80000002
   14000dd19:	call   QWORD PTR [rip+0x18329]        # 0x140026048
   14000dd1f:	mov    DWORD PTR [rsp+0x34],eax
   14000dd23:	cmp    DWORD PTR [rsp+0x34],0x0
   14000dd28:	jne    0x14000de1d
   14000dd2e:	mov    DWORD PTR [rsp+0x50],0x1000
   14000dd36:	mov    edx,DWORD PTR [rsp+0x50]
   14000dd3a:	lea    rcx,[rsp+0x60]
   14000dd3f:	call   0x14000a5f0
   14000dd44:	mov    QWORD PTR [rsp+0x80],rax
   14000dd4c:	mov    DWORD PTR [rsp+0x44],0x1
   14000dd54:	lea    rax,[rsp+0x50]
   14000dd59:	mov    QWORD PTR [rsp+0x28],rax
   14000dd5e:	mov    rax,QWORD PTR [rsp+0x80]
   14000dd66:	mov    QWORD PTR [rsp+0x20],rax
   14000dd6b:	lea    r9,[rsp+0x44]
   14000dd70:	xor    r8d,r8d
   14000dd73:	mov    rdx,QWORD PTR [rsp+0xc8]
   14000dd7b:	mov    rcx,QWORD PTR [rsp+0x38]
   14000dd80:	call   QWORD PTR [rip+0x182ca]        # 0x140026050
   14000dd86:	mov    DWORD PTR [rsp+0x78],eax
   14000dd8a:	mov    edx,0xffffffff
   14000dd8f:	lea    rcx,[rsp+0x60]
   14000dd94:	call   0x14000a6d0
   14000dd99:	cmp    DWORD PTR [rsp+0x78],0x0
   14000dd9e:	jne    0x14000de11
   14000dda0:	cmp    DWORD PTR [rsp+0x44],0x1
   14000dda5:	jne    0x14000de11
   14000dda7:	lea    rcx,[rsp+0x60]
   14000ddac:	call   0x14000ad20
   14000ddb1:	test   eax,eax
   14000ddb3:	jne    0x14000de11
   14000ddb5:	lea    rcx,[rsp+0x60]
   14000ddba:	call   0x14000a540
   14000ddbf:	mov    DWORD PTR [rsp+0x4c],eax
   14000ddc3:	mov    eax,DWORD PTR [rsp+0xd8]
   14000ddca:	cmp    DWORD PTR [rsp+0x4c],eax
   14000ddce:	jge    0x14000de11
   14000ddd0:	mov    eax,DWORD PTR [rsp+0x4c]
   14000ddd4:	inc    eax
   14000ddd6:	cdqe   
   14000ddd8:	mov    QWORD PTR [rsp+0x88],rax
   14000dde0:	lea    rcx,[rsp+0x60]
   14000dde5:	call   0x14000a520
   14000ddea:	movsxd rcx,DWORD PTR [rsp+0xd8]
   14000ddf2:	mov    rdx,QWORD PTR [rsp+0x88]
   14000ddfa:	mov    r9,rdx
   14000ddfd:	mov    r8,rax
   14000de00:	mov    rdx,rcx
   14000de03:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000de0b:	call   QWORD PTR [rip+0x184a7]        # 0x1400262b8
   14000de11:	mov    rcx,QWORD PTR [rsp+0x38]
   14000de16:	call   QWORD PTR [rip+0x181e4]        # 0x140026000
   14000de1c:	nop
   14000de1d:	lea    rcx,[rsp+0x60]
   14000de22:	call   0x140009e60
   14000de27:	add    rsp,0xb8
   14000de2e:	ret    
   14000de2f:	int3   
   14000de30:	int3   
   14000de31:	int3   
   14000de32:	int3   
   14000de33:	int3   
   14000de34:	int3   
   14000de35:	int3   
   14000de36:	int3   
   14000de37:	int3   
   14000de38:	int3   
   14000de39:	int3   
   14000de3a:	int3   
   14000de3b:	int3   
   14000de3c:	int3   
   14000de3d:	int3   
   14000de3e:	int3   
   14000de3f:	int3   
   14000de40:	mov    QWORD PTR [rsp+0x18],r8
   14000de45:	mov    QWORD PTR [rsp+0x10],rdx
   14000de4a:	mov    QWORD PTR [rsp+0x8],rcx
   14000de4f:	sub    rsp,0x78
   14000de53:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000de5c:	cmp    QWORD PTR [rsp+0x88],0x0
   14000de65:	je     0x14000df94
   14000de6b:	cmp    QWORD PTR [rsp+0x90],0x0
   14000de74:	je     0x14000df94
   14000de7a:	cmp    QWORD PTR [rsp+0x80],0x0
   14000de83:	je     0x14000df94
   14000de89:	mov    eax,0x2
   14000de8e:	imul   rax,rax,0x0
   14000de92:	mov    rcx,QWORD PTR [rsp+0x88]
   14000de9a:	movzx  eax,WORD PTR [rcx+rax*1]
   14000de9e:	test   eax,eax
   14000dea0:	je     0x14000df94
   14000dea6:	mov    eax,0x2
   14000deab:	imul   rax,rax,0x0
   14000deaf:	mov    rcx,QWORD PTR [rsp+0x80]
   14000deb7:	movzx  eax,WORD PTR [rcx+rax*1]
   14000debb:	test   eax,eax
   14000debd:	je     0x14000df94
   14000dec3:	mov    rdx,QWORD PTR [rsp+0x80]
   14000decb:	lea    rcx,[rsp+0x28]
   14000ded0:	call   0x140009f20
   14000ded5:	nop
   14000ded6:	lea    rdx,[rip+0x1df97]        # 0x14002be74
   14000dedd:	lea    rcx,[rsp+0x40]
   14000dee2:	call   0x140009f20
   14000dee7:	nop
   14000dee8:	lea    rdx,[rsp+0x40]
   14000deed:	lea    rcx,[rsp+0x28]
   14000def2:	call   0x14000a3e0
   14000def7:	nop
   14000def8:	lea    rcx,[rsp+0x40]
   14000defd:	call   0x140009e60
   14000df02:	lea    rdx,[rip+0x1e2bf]        # 0x14002c1c8
   14000df09:	lea    rcx,[rsp+0x58]
   14000df0e:	call   0x140009f20
   14000df13:	nop
   14000df14:	lea    rdx,[rsp+0x58]
   14000df19:	lea    rcx,[rsp+0x28]
   14000df1e:	call   0x14000a3e0
   14000df23:	nop
   14000df24:	lea    rcx,[rsp+0x58]
   14000df29:	call   0x140009e60
   14000df2e:	mov    rax,QWORD PTR [rsp+0x90]
   14000df36:	movzx  eax,WORD PTR [rax]
   14000df39:	test   eax,eax
   14000df3b:	je     0x14000df68
   14000df3d:	lea    rcx,[rsp+0x28]
   14000df42:	call   0x14000a520
   14000df47:	mov    r9,QWORD PTR [rsp+0x90]
   14000df4f:	mov    r8,QWORD PTR [rsp+0x88]
   14000df57:	mov    rdx,rax
   14000df5a:	mov    rcx,0xffffffff80000001
   14000df61:	call   0x14000cac0
   14000df66:	jmp    0x14000df8a
   14000df68:	lea    rcx,[rsp+0x28]
   14000df6d:	call   0x14000a520
   14000df72:	mov    r8,QWORD PTR [rsp+0x88]
   14000df7a:	mov    rdx,rax
   14000df7d:	mov    rcx,0xffffffff80000001
   14000df84:	call   0x14000cbb0
   14000df89:	nop
   14000df8a:	lea    rcx,[rsp+0x28]
   14000df8f:	call   0x140009e60
   14000df94:	add    rsp,0x78
   14000df98:	ret    
   14000df99:	int3   
   14000df9a:	int3   
   14000df9b:	int3   
   14000df9c:	int3   
   14000df9d:	int3   
   14000df9e:	int3   
   14000df9f:	int3   
   14000dfa0:	mov    QWORD PTR [rsp+0x10],rdx
   14000dfa5:	mov    QWORD PTR [rsp+0x8],rcx
   14000dfaa:	mov    eax,0x2168
   14000dfaf:	call   0x1400218e0
   14000dfb4:	sub    rsp,rax
   14000dfb7:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   14000dfc3:	mov    rax,QWORD PTR [rip+0x2d286]        # 0x14003b250
   14000dfca:	xor    rax,rsp
   14000dfcd:	mov    QWORD PTR [rsp+0x2150],rax
   14000dfd5:	mov    DWORD PTR [rsp+0x48],0x0
   14000dfdd:	lea    rcx,[rsp+0x60]
   14000dfe2:	call   0x140009e20
   14000dfe7:	nop
   14000dfe8:	cmp    QWORD PTR [rsp+0x2178],0x0
   14000dff1:	je     0x14000e261
   14000dff7:	mov    eax,0x2
   14000dffc:	imul   rax,rax,0x0
   14000e000:	mov    rcx,QWORD PTR [rsp+0x2178]
   14000e008:	movzx  eax,WORD PTR [rcx+rax*1]
   14000e00c:	test   eax,eax
   14000e00e:	je     0x14000e261
   14000e014:	mov    rdx,QWORD PTR [rsp+0x2178]
   14000e01c:	lea    rcx,[rsp+0x78]
   14000e021:	call   0x140009f20
   14000e026:	nop
   14000e027:	lea    rdx,[rip+0x1de86]        # 0x14002beb4
   14000e02e:	lea    rcx,[rsp+0xf8]
   14000e036:	call   0x140009f20
   14000e03b:	nop
   14000e03c:	lea    rdx,[rsp+0xf8]
   14000e044:	lea    rcx,[rsp+0x78]
   14000e049:	call   0x14000a3e0
   14000e04e:	nop
   14000e04f:	lea    rcx,[rsp+0xf8]
   14000e057:	call   0x140009e60
   14000e05c:	lea    rdx,[rip+0x1e1a5]        # 0x14002c208
   14000e063:	lea    rcx,[rsp+0xc8]
   14000e06b:	call   0x140009f20
   14000e070:	nop
   14000e071:	lea    rdx,[rsp+0xc8]
   14000e079:	lea    rcx,[rsp+0x78]
   14000e07e:	call   0x14000a3e0
   14000e083:	nop
   14000e084:	lea    rcx,[rsp+0xc8]
   14000e08c:	call   0x140009e60
   14000e091:	mov    QWORD PTR [rsp+0x58],0x0
   14000e09a:	lea    rcx,[rsp+0x78]
   14000e09f:	call   0x14000a520
   14000e0a4:	lea    rcx,[rsp+0x58]
   14000e0a9:	mov    QWORD PTR [rsp+0x20],rcx
   14000e0ae:	mov    r9d,0x20019
   14000e0b4:	xor    r8d,r8d
   14000e0b7:	mov    rdx,rax
   14000e0ba:	mov    rcx,0xffffffff80000001
   14000e0c1:	call   QWORD PTR [rip+0x17f81]        # 0x140026048
   14000e0c7:	test   eax,eax
   14000e0c9:	jne    0x14000e257
   14000e0cf:	mov    DWORD PTR [rsp+0x4c],0x800
   14000e0d7:	mov    DWORD PTR [rsp+0x44],0x800
   14000e0df:	mov    DWORD PTR [rsp+0x40],0x0
   14000e0e7:	mov    DWORD PTR [rsp+0x50],0x0
   14000e0ef:	lea    rax,[rsp+0x44]
   14000e0f4:	mov    QWORD PTR [rsp+0x38],rax
   14000e0f9:	lea    rax,[rsp+0x1140]
   14000e101:	mov    QWORD PTR [rsp+0x30],rax
   14000e106:	lea    rax,[rsp+0x50]
   14000e10b:	mov    QWORD PTR [rsp+0x28],rax
   14000e110:	mov    QWORD PTR [rsp+0x20],0x0
   14000e119:	lea    r9,[rsp+0x4c]
   14000e11e:	lea    r8,[rsp+0x130]
   14000e126:	mov    edx,DWORD PTR [rsp+0x40]
   14000e12a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e12f:	call   QWORD PTR [rip+0x17f0b]        # 0x140026040
   14000e135:	test   eax,eax
   14000e137:	jne    0x14000e24b
   14000e13d:	cmp    DWORD PTR [rsp+0x50],0x1
   14000e142:	jne    0x14000e22c
   14000e148:	lea    rcx,[rsp+0x60]
   14000e14d:	call   0x14000a540
   14000e152:	test   eax,eax
   14000e154:	je     0x14000e18b
   14000e156:	lea    rdx,[rip+0x1dd67]        # 0x14002bec4
   14000e15d:	lea    rcx,[rsp+0x110]
   14000e165:	call   0x140009f20
   14000e16a:	nop
   14000e16b:	lea    rdx,[rsp+0x110]
   14000e173:	lea    rcx,[rsp+0x60]
   14000e178:	call   0x14000a3e0
   14000e17d:	nop
   14000e17e:	lea    rcx,[rsp+0x110]
   14000e186:	call   0x140009e60
   14000e18b:	lea    rdx,[rsp+0x130]
   14000e193:	lea    rcx,[rsp+0x90]
   14000e19b:	call   0x140009f20
   14000e1a0:	nop
   14000e1a1:	lea    rdx,[rsp+0x90]
   14000e1a9:	lea    rcx,[rsp+0x60]
   14000e1ae:	call   0x14000a3e0
   14000e1b3:	nop
   14000e1b4:	lea    rcx,[rsp+0x90]
   14000e1bc:	call   0x140009e60
   14000e1c1:	lea    rdx,[rip+0x1dd0c]        # 0x14002bed4
   14000e1c8:	lea    rcx,[rsp+0xb0]
   14000e1d0:	call   0x140009f20
   14000e1d5:	nop
   14000e1d6:	lea    rdx,[rsp+0xb0]
   14000e1de:	lea    rcx,[rsp+0x60]
   14000e1e3:	call   0x14000a3e0
   14000e1e8:	nop
   14000e1e9:	lea    rcx,[rsp+0xb0]
   14000e1f1:	call   0x140009e60
   14000e1f6:	lea    rdx,[rsp+0x1140]
   14000e1fe:	lea    rcx,[rsp+0xe0]
   14000e206:	call   0x140009f20
   14000e20b:	nop
   14000e20c:	lea    rdx,[rsp+0xe0]
   14000e214:	lea    rcx,[rsp+0x60]
   14000e219:	call   0x14000a3e0
   14000e21e:	nop
   14000e21f:	lea    rcx,[rsp+0xe0]
   14000e227:	call   0x140009e60
   14000e22c:	mov    eax,DWORD PTR [rsp+0x40]
   14000e230:	inc    eax
   14000e232:	mov    DWORD PTR [rsp+0x40],eax
   14000e236:	mov    DWORD PTR [rsp+0x4c],0x800
   14000e23e:	mov    DWORD PTR [rsp+0x44],0x800
   14000e246:	jmp    0x14000e0ef
   14000e24b:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e250:	call   QWORD PTR [rip+0x17daa]        # 0x140026000
   14000e256:	nop
   14000e257:	lea    rcx,[rsp+0x78]
   14000e25c:	call   0x140009e60
   14000e261:	lea    rdx,[rsp+0x60]
   14000e266:	mov    rcx,QWORD PTR [rsp+0x2170]
   14000e26e:	call   0x140009e90
   14000e273:	mov    eax,DWORD PTR [rsp+0x48]
   14000e277:	or     eax,0x1
   14000e27a:	mov    DWORD PTR [rsp+0x48],eax
   14000e27e:	lea    rcx,[rsp+0x60]
   14000e283:	call   0x140009e60
   14000e288:	mov    rax,QWORD PTR [rsp+0x2170]
   14000e290:	mov    rcx,QWORD PTR [rsp+0x2150]
   14000e298:	xor    rcx,rsp
   14000e29b:	call   0x140021890
   14000e2a0:	add    rsp,0x2168
   14000e2a7:	ret    
   14000e2a8:	int3   
   14000e2a9:	int3   
   14000e2aa:	int3   
   14000e2ab:	int3   
   14000e2ac:	int3   
   14000e2ad:	int3   
   14000e2ae:	int3   
   14000e2af:	int3   
   14000e2b0:	mov    QWORD PTR [rsp+0x18],r8
   14000e2b5:	mov    QWORD PTR [rsp+0x10],rdx
   14000e2ba:	mov    QWORD PTR [rsp+0x8],rcx
   14000e2bf:	sub    rsp,0xc8
   14000e2c6:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   14000e2d2:	mov    DWORD PTR [rsp+0x20],0x0
   14000e2da:	lea    rcx,[rsp+0x50]
   14000e2df:	call   0x140009e20
   14000e2e4:	nop
   14000e2e5:	cmp    QWORD PTR [rsp+0xd8],0x0
   14000e2ee:	je     0x14000e3e5
   14000e2f4:	mov    eax,0x2
   14000e2f9:	imul   rax,rax,0x0
   14000e2fd:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000e305:	movzx  eax,WORD PTR [rcx+rax*1]
   14000e309:	test   eax,eax
   14000e30b:	je     0x14000e3e5
   14000e311:	mov    rdx,QWORD PTR [rsp+0xd8]
   14000e319:	lea    rcx,[rsp+0x38]
   14000e31e:	call   0x140009f20
   14000e323:	nop
   14000e324:	lea    rdx,[rip+0x1db61]        # 0x14002be8c
   14000e32b:	lea    rcx,[rsp+0x68]
   14000e330:	call   0x140009f20
   14000e335:	nop
   14000e336:	lea    rdx,[rsp+0x68]
   14000e33b:	lea    rcx,[rsp+0x38]
   14000e340:	call   0x14000a3e0
   14000e345:	nop
   14000e346:	lea    rcx,[rsp+0x68]
   14000e34b:	call   0x140009e60
   14000e350:	lea    rdx,[rip+0x1de91]        # 0x14002c1e8
   14000e357:	lea    rcx,[rsp+0x80]
   14000e35f:	call   0x140009f20
   14000e364:	nop
   14000e365:	lea    rdx,[rsp+0x80]
   14000e36d:	lea    rcx,[rsp+0x38]
   14000e372:	call   0x14000a3e0
   14000e377:	nop
   14000e378:	lea    rcx,[rsp+0x80]
   14000e380:	call   0x140009e60
   14000e385:	lea    rcx,[rsp+0x38]
   14000e38a:	call   0x14000a520
   14000e38f:	mov    r9,QWORD PTR [rsp+0xe0]
   14000e397:	mov    r8,rax
   14000e39a:	mov    rdx,0xffffffff80000001
   14000e3a1:	lea    rcx,[rsp+0xa0]
   14000e3a9:	call   0x14000c9c0
   14000e3ae:	mov    QWORD PTR [rsp+0x28],rax
   14000e3b3:	mov    rax,QWORD PTR [rsp+0x28]
   14000e3b8:	mov    QWORD PTR [rsp+0x30],rax
   14000e3bd:	mov    rdx,QWORD PTR [rsp+0x30]
   14000e3c2:	lea    rcx,[rsp+0x50]
   14000e3c7:	call   0x14000a260
   14000e3cc:	nop
   14000e3cd:	lea    rcx,[rsp+0xa0]
   14000e3d5:	call   0x140009e60
   14000e3da:	nop
   14000e3db:	lea    rcx,[rsp+0x38]
   14000e3e0:	call   0x140009e60
   14000e3e5:	lea    rdx,[rsp+0x50]
   14000e3ea:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000e3f2:	call   0x140009e90
   14000e3f7:	mov    eax,DWORD PTR [rsp+0x20]
   14000e3fb:	or     eax,0x1
   14000e3fe:	mov    DWORD PTR [rsp+0x20],eax
   14000e402:	lea    rcx,[rsp+0x50]
   14000e407:	call   0x140009e60
   14000e40c:	mov    rax,QWORD PTR [rsp+0xd0]
   14000e414:	add    rsp,0xc8
   14000e41b:	ret    
   14000e41c:	int3   
   14000e41d:	int3   
   14000e41e:	int3   
   14000e41f:	int3   
   14000e420:	int3   
   14000e421:	int3   
   14000e422:	int3   
   14000e423:	int3   
   14000e424:	int3   
   14000e425:	int3   
   14000e426:	int3   
   14000e427:	int3   
   14000e428:	int3   
   14000e429:	int3   
   14000e42a:	int3   
   14000e42b:	int3   
   14000e42c:	int3   
   14000e42d:	int3   
   14000e42e:	int3   
   14000e42f:	int3   
   14000e430:	mov    QWORD PTR [rsp+0x20],r9
   14000e435:	mov    QWORD PTR [rsp+0x18],r8
   14000e43a:	mov    QWORD PTR [rsp+0x10],rdx
   14000e43f:	mov    QWORD PTR [rsp+0x8],rcx
   14000e444:	sub    rsp,0x38
   14000e448:	mov    DWORD PTR [rsp+0x20],0x0
   14000e450:	mov    eax,0x1
   14000e455:	imul   rax,rax,0x0
   14000e459:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e45e:	add    rcx,rax
   14000e461:	mov    rax,rcx
   14000e464:	mov    QWORD PTR [rsp+0x28],rax
   14000e469:	mov    r9d,0x4
   14000e46f:	mov    r8,QWORD PTR [rsp+0x48]
   14000e474:	mov    edx,0xc
   14000e479:	mov    rcx,QWORD PTR [rsp+0x28]
   14000e47e:	call   QWORD PTR [rip+0x17de4]        # 0x140026268
   14000e484:	mov    rax,QWORD PTR [rsp+0x28]
   14000e489:	add    rax,0x4
   14000e48d:	mov    QWORD PTR [rsp+0x28],rax
   14000e492:	mov    eax,0x1
   14000e497:	imul   rax,rax,0xc
   14000e49b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e4a0:	add    rcx,rax
   14000e4a3:	mov    rax,rcx
   14000e4a6:	cmp    QWORD PTR [rsp+0x28],rax
   14000e4ab:	jae    0x14000e514
   14000e4ad:	mov    r9d,0x4
   14000e4b3:	mov    r8,QWORD PTR [rsp+0x50]
   14000e4b8:	mov    edx,0x8
   14000e4bd:	mov    rcx,QWORD PTR [rsp+0x28]
   14000e4c2:	call   QWORD PTR [rip+0x17da0]        # 0x140026268
   14000e4c8:	mov    rax,QWORD PTR [rsp+0x28]
   14000e4cd:	add    rax,0x4
   14000e4d1:	mov    QWORD PTR [rsp+0x28],rax
   14000e4d6:	mov    eax,0x1
   14000e4db:	imul   rax,rax,0xc
   14000e4df:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e4e4:	add    rcx,rax
   14000e4e7:	mov    rax,rcx
   14000e4ea:	cmp    QWORD PTR [rsp+0x28],rax
   14000e4ef:	jae    0x14000e514
   14000e4f1:	mov    r9d,0x4
   14000e4f7:	mov    r8,QWORD PTR [rsp+0x58]
   14000e4fc:	mov    edx,0x5
   14000e501:	mov    rcx,QWORD PTR [rsp+0x28]
   14000e506:	call   QWORD PTR [rip+0x17d5c]        # 0x140026268
   14000e50c:	mov    DWORD PTR [rsp+0x20],0x1
   14000e514:	mov    eax,DWORD PTR [rsp+0x20]
   14000e518:	add    rsp,0x38
   14000e51c:	ret    
   14000e51d:	int3   
   14000e51e:	int3   
   14000e51f:	int3   
   14000e520:	int3   
   14000e521:	int3   
   14000e522:	int3   
   14000e523:	int3   
   14000e524:	int3   
   14000e525:	int3   
   14000e526:	int3   
   14000e527:	int3   
   14000e528:	int3   
   14000e529:	int3   
   14000e52a:	int3   
   14000e52b:	int3   
   14000e52c:	int3   
   14000e52d:	int3   
   14000e52e:	int3   
   14000e52f:	int3   
   14000e530:	mov    DWORD PTR [rsp+0x20],r9d
   14000e535:	mov    DWORD PTR [rsp+0x18],r8d
   14000e53a:	mov    DWORD PTR [rsp+0x10],edx
   14000e53e:	mov    DWORD PTR [rsp+0x8],ecx
   14000e542:	sub    rsp,0x58
   14000e546:	mov    rax,QWORD PTR [rip+0x2cd03]        # 0x14003b250
   14000e54d:	xor    rax,rsp
   14000e550:	mov    QWORD PTR [rsp+0x48],rax
   14000e555:	mov    QWORD PTR [rsp+0x20],0x0
   14000e55e:	mov    DWORD PTR [rsp+0x28],0x10
   14000e566:	mov    eax,DWORD PTR [rsp+0x28]
   14000e56a:	mov    ecx,eax
   14000e56c:	call   QWORD PTR [rip+0x17d86]        # 0x1400262f8
   14000e572:	mov    QWORD PTR [rsp+0x20],rax
   14000e577:	cmp    QWORD PTR [rsp+0x20],0x0
   14000e57d:	je     0x14000e5e0
   14000e57f:	mov    rax,QWORD PTR [rsp+0x20]
   14000e584:	mov    ecx,DWORD PTR [rsp+0x28]
   14000e588:	mov    DWORD PTR [rax],ecx
   14000e58a:	mov    rax,QWORD PTR [rsp+0x20]
   14000e58f:	add    rax,0x4
   14000e593:	mov    QWORD PTR [rsp+0x30],rax
   14000e598:	movzx  eax,WORD PTR [rsp+0x60]
   14000e59d:	mov    WORD PTR [rsp+0x38],ax
   14000e5a2:	movzx  eax,WORD PTR [rsp+0x68]
   14000e5a7:	mov    WORD PTR [rsp+0x3a],ax
   14000e5ac:	movzx  eax,WORD PTR [rsp+0x70]
   14000e5b1:	mov    WORD PTR [rsp+0x3c],ax
   14000e5b6:	movzx  eax,WORD PTR [rsp+0x78]
   14000e5bb:	mov    WORD PTR [rsp+0x42],ax
   14000e5c0:	mov    eax,DWORD PTR [rsp+0x80]
   14000e5c7:	mov    DWORD PTR [rsp+0x3e],eax
   14000e5cb:	mov    r8d,0xc
   14000e5d1:	lea    rdx,[rsp+0x38]
   14000e5d6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e5db:	call   0x140021934
   14000e5e0:	mov    rax,QWORD PTR [rsp+0x20]
   14000e5e5:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e5ea:	xor    rcx,rsp
   14000e5ed:	call   0x140021890
   14000e5f2:	add    rsp,0x58
   14000e5f6:	ret    
   14000e5f7:	int3   
   14000e5f8:	int3   
   14000e5f9:	int3   
   14000e5fa:	int3   
   14000e5fb:	int3   
   14000e5fc:	int3   
   14000e5fd:	int3   
   14000e5fe:	int3   
   14000e5ff:	int3   
   14000e600:	mov    QWORD PTR [rsp+0x20],r9
   14000e605:	mov    QWORD PTR [rsp+0x18],r8
   14000e60a:	mov    QWORD PTR [rsp+0x10],rdx
   14000e60f:	mov    DWORD PTR [rsp+0x8],ecx
   14000e613:	sub    rsp,0x68
   14000e617:	mov    rax,QWORD PTR [rip+0x2cc32]        # 0x14003b250
   14000e61e:	xor    rax,rsp
   14000e621:	mov    QWORD PTR [rsp+0x50],rax
   14000e626:	mov    QWORD PTR [rsp+0x28],0x0
   14000e62f:	mov    DWORD PTR [rsp+0x34],0x10
   14000e637:	mov    eax,DWORD PTR [rsp+0x34]
   14000e63b:	mov    ecx,eax
   14000e63d:	call   QWORD PTR [rip+0x17cb5]        # 0x1400262f8
   14000e643:	mov    QWORD PTR [rsp+0x28],rax
   14000e648:	cmp    QWORD PTR [rsp+0x28],0x0
   14000e64e:	je     0x14000e8c0
   14000e654:	mov    rax,QWORD PTR [rsp+0x28]
   14000e659:	mov    ecx,DWORD PTR [rsp+0x34]
   14000e65d:	mov    DWORD PTR [rax],ecx
   14000e65f:	mov    rax,QWORD PTR [rsp+0x28]
   14000e664:	add    rax,0x4
   14000e668:	mov    QWORD PTR [rsp+0x38],rax
   14000e66d:	movzx  eax,WORD PTR [rsp+0x70]
   14000e672:	mov    WORD PTR [rsp+0x40],ax
   14000e677:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e67f:	call   QWORD PTR [rip+0x17cab]        # 0x140026330
   14000e685:	mov    DWORD PTR [rsp+0x30],eax
   14000e689:	lea    rdx,[rip+0x1d728]        # 0x14002bdb8
   14000e690:	mov    rcx,QWORD PTR [rsp+0x78]
   14000e695:	call   QWORD PTR [rip+0x17bc5]        # 0x140026260
   14000e69b:	test   eax,eax
   14000e69d:	jne    0x14000e70e
   14000e69f:	mov    eax,0x2
   14000e6a4:	mov    WORD PTR [rsp+0x42],ax
   14000e6a9:	mov    eax,0xffffffff
   14000e6ae:	mov    WORD PTR [rsp+0x44],ax
   14000e6b3:	mov    eax,DWORD PTR [rsp+0x30]
   14000e6b7:	mov    DWORD PTR [rsp+0x46],eax
   14000e6bb:	lea    rdx,[rip+0x1d70e]        # 0x14002bdd0
   14000e6c2:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e6ca:	call   QWORD PTR [rip+0x17b90]        # 0x140026260
   14000e6d0:	test   eax,eax
   14000e6d2:	jne    0x14000e6dd
   14000e6d4:	xor    eax,eax
   14000e6d6:	mov    WORD PTR [rsp+0x4a],ax
   14000e6db:	jmp    0x14000e709
   14000e6dd:	lea    rdx,[rip+0x1d704]        # 0x14002bde8
   14000e6e4:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e6ec:	call   QWORD PTR [rip+0x17b6e]        # 0x140026260
   14000e6f2:	test   eax,eax
   14000e6f4:	jne    0x14000e702
   14000e6f6:	mov    eax,0x1
   14000e6fb:	mov    WORD PTR [rsp+0x4a],ax
   14000e700:	jmp    0x14000e709
   14000e702:	xor    eax,eax
   14000e704:	mov    WORD PTR [rsp+0x4a],ax
   14000e709:	jmp    0x14000e8ab
   14000e70e:	lea    rdx,[rip+0x1d743]        # 0x14002be58
   14000e715:	mov    rcx,QWORD PTR [rsp+0x78]
   14000e71a:	call   QWORD PTR [rip+0x17b40]        # 0x140026260
   14000e720:	test   eax,eax
   14000e722:	jne    0x14000e8ab
   14000e728:	lea    rdx,[rip+0x1d749]        # 0x14002be78
   14000e72f:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e737:	call   QWORD PTR [rip+0x17b23]        # 0x140026260
   14000e73d:	test   eax,eax
   14000e73f:	jne    0x14000e766
   14000e741:	lea    rdx,[rip+0x1d748]        # 0x14002be90
   14000e748:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e750:	call   QWORD PTR [rip+0x17b0a]        # 0x140026260
   14000e756:	test   eax,eax
   14000e758:	jne    0x14000e766
   14000e75a:	xor    eax,eax
   14000e75c:	mov    WORD PTR [rsp+0x42],ax
   14000e761:	jmp    0x14000e81e
   14000e766:	lea    rdx,[rip+0x1d733]        # 0x14002bea0
   14000e76d:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e775:	call   QWORD PTR [rip+0x17ae5]        # 0x140026260
   14000e77b:	test   eax,eax
   14000e77d:	jne    0x14000e7a4
   14000e77f:	lea    rdx,[rip+0x1d732]        # 0x14002beb8
   14000e786:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e78e:	call   QWORD PTR [rip+0x17acc]        # 0x140026260
   14000e794:	test   eax,eax
   14000e796:	jne    0x14000e7a4
   14000e798:	mov    eax,0x3
   14000e79d:	mov    WORD PTR [rsp+0x42],ax
   14000e7a2:	jmp    0x14000e81e
   14000e7a4:	lea    rdx,[rip+0x1d71d]        # 0x14002bec8
   14000e7ab:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e7b3:	call   QWORD PTR [rip+0x17aa7]        # 0x140026260
   14000e7b9:	test   eax,eax
   14000e7bb:	jne    0x14000e7e2
   14000e7bd:	lea    rdx,[rip+0x1d714]        # 0x14002bed8
   14000e7c4:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e7cc:	call   QWORD PTR [rip+0x17a8e]        # 0x140026260
   14000e7d2:	test   eax,eax
   14000e7d4:	jne    0x14000e7e2
   14000e7d6:	mov    eax,0x1
   14000e7db:	mov    WORD PTR [rsp+0x42],ax
   14000e7e0:	jmp    0x14000e81e
   14000e7e2:	lea    rdx,[rip+0x1d6ff]        # 0x14002bee8
   14000e7e9:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e7f1:	call   QWORD PTR [rip+0x17a69]        # 0x140026260
   14000e7f7:	test   eax,eax
   14000e7f9:	jne    0x14000e81e
   14000e7fb:	lea    rdx,[rip+0x1d6f6]        # 0x14002bef8
   14000e802:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e80a:	call   QWORD PTR [rip+0x17a50]        # 0x140026260
   14000e810:	test   eax,eax
   14000e812:	jne    0x14000e81e
   14000e814:	mov    eax,0x4
   14000e819:	mov    WORD PTR [rsp+0x42],ax
   14000e81e:	movzx  eax,WORD PTR [rsp+0x30]
   14000e823:	mov    WORD PTR [rsp+0x44],ax
   14000e828:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e830:	mov    rcx,QWORD PTR [rsp+0x98]
   14000e838:	call   QWORD PTR [rip+0x17b12]        # 0x140026350
   14000e83e:	test   rax,rax
   14000e841:	jbe    0x14000e855
   14000e843:	mov    rcx,QWORD PTR [rsp+0x98]
   14000e84b:	call   QWORD PTR [rip+0x17adf]        # 0x140026330
   14000e851:	mov    DWORD PTR [rsp+0x20],eax
   14000e855:	mov    eax,DWORD PTR [rsp+0x20]
   14000e859:	mov    DWORD PTR [rsp+0x46],eax
   14000e85d:	lea    rdx,[rip+0x1d6b4]        # 0x14002bf18
   14000e864:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e86c:	call   QWORD PTR [rip+0x179ee]        # 0x140026260
   14000e872:	test   eax,eax
   14000e874:	jne    0x14000e87f
   14000e876:	xor    eax,eax
   14000e878:	mov    WORD PTR [rsp+0x4a],ax
   14000e87d:	jmp    0x14000e8ab
   14000e87f:	lea    rdx,[rip+0x1d722]        # 0x14002bfa8
   14000e886:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e88e:	call   QWORD PTR [rip+0x179cc]        # 0x140026260
   14000e894:	test   eax,eax
   14000e896:	jne    0x14000e8a4
   14000e898:	mov    eax,0x1
   14000e89d:	mov    WORD PTR [rsp+0x4a],ax
   14000e8a2:	jmp    0x14000e8ab
   14000e8a4:	xor    eax,eax
   14000e8a6:	mov    WORD PTR [rsp+0x4a],ax
   14000e8ab:	mov    r8d,0xc
   14000e8b1:	lea    rdx,[rsp+0x40]
   14000e8b6:	mov    rcx,QWORD PTR [rsp+0x38]
   14000e8bb:	call   0x140021934
   14000e8c0:	mov    rax,QWORD PTR [rsp+0x28]
   14000e8c5:	mov    rcx,QWORD PTR [rsp+0x50]
   14000e8ca:	xor    rcx,rsp
   14000e8cd:	call   0x140021890
   14000e8d2:	add    rsp,0x68
   14000e8d6:	ret    
   14000e8d7:	int3   
   14000e8d8:	int3   
   14000e8d9:	int3   
   14000e8da:	int3   
   14000e8db:	int3   
   14000e8dc:	int3   
   14000e8dd:	int3   
   14000e8de:	int3   
   14000e8df:	int3   
   14000e8e0:	mov    QWORD PTR [rsp+0x18],r8
   14000e8e5:	mov    QWORD PTR [rsp+0x10],rdx
   14000e8ea:	mov    QWORD PTR [rsp+0x8],rcx
   14000e8ef:	sub    rsp,0x2a8
   14000e8f6:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14000e8ff:	mov    rax,QWORD PTR [rip+0x2c94a]        # 0x14003b250
   14000e906:	xor    rax,rsp
   14000e909:	mov    QWORD PTR [rsp+0x290],rax
   14000e911:	mov    BYTE PTR [rsp+0x30],0x0
   14000e916:	mov    QWORD PTR [rsp+0x40],0x0
   14000e91f:	mov    QWORD PTR [rsp+0x48],0x0
   14000e928:	lea    rcx,[rsp+0x68]
   14000e92d:	call   0x140009e20
   14000e932:	nop
   14000e933:	mov    DWORD PTR [rsp+0x3c],0x0
   14000e93b:	mov    DWORD PTR [rsp+0x34],0x0
   14000e943:	xor    edx,edx
   14000e945:	mov    rcx,QWORD PTR [rsp+0x2b0]
   14000e94d:	call   0x1400221e4
   14000e952:	mov    DWORD PTR [rsp+0x3c],eax
   14000e956:	cmp    DWORD PTR [rsp+0x3c],0x0
   14000e95b:	jbe    0x14000eabb
   14000e961:	mov    eax,DWORD PTR [rsp+0x3c]
   14000e965:	inc    eax
   14000e967:	mov    eax,eax
   14000e969:	mov    ecx,eax
   14000e96b:	call   0x140020f3e
   14000e970:	mov    QWORD PTR [rsp+0x50],rax
   14000e975:	mov    rax,QWORD PTR [rsp+0x50]
   14000e97a:	mov    QWORD PTR [rsp+0x40],rax
   14000e97f:	cmp    QWORD PTR [rsp+0x40],0x0
   14000e985:	je     0x14000eabb
   14000e98b:	mov    r9,QWORD PTR [rsp+0x40]
   14000e990:	mov    r8d,DWORD PTR [rsp+0x3c]
   14000e995:	xor    edx,edx
   14000e997:	mov    rcx,QWORD PTR [rsp+0x2b0]
   14000e99f:	call   0x1400221ea
   14000e9a4:	test   eax,eax
   14000e9a6:	je     0x14000ea9f
   14000e9ac:	lea    r9,[rsp+0x34]
   14000e9b1:	lea    r8,[rsp+0x48]
   14000e9b6:	lea    rdx,[rip+0x1d74b]        # 0x14002c108
   14000e9bd:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e9c2:	call   0x1400221f0
   14000e9c7:	test   eax,eax
   14000e9c9:	je     0x14000ea9f
   14000e9cf:	cmp    DWORD PTR [rsp+0x34],0x0
   14000e9d4:	jbe    0x14000ea9f
   14000e9da:	mov    rax,QWORD PTR [rsp+0x48]
   14000e9df:	movzx  eax,WORD PTR [rax+0x2]
   14000e9e3:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e9e8:	movzx  ecx,WORD PTR [rcx]
   14000e9eb:	mov    DWORD PTR [rsp+0x20],eax
   14000e9ef:	mov    r9d,ecx
   14000e9f2:	lea    r8,[rip+0x1d837]        # 0x14002c230
   14000e9f9:	mov    edx,0x104
   14000e9fe:	lea    rcx,[rsp+0x80]
   14000ea06:	call   QWORD PTR [rip+0x1784c]        # 0x140026258
   14000ea0c:	mov    DWORD PTR [rsp+0x34],0x0
   14000ea14:	lea    r9,[rsp+0x34]
   14000ea19:	lea    r8,[rsp+0x48]
   14000ea1e:	lea    rdx,[rsp+0x80]
   14000ea26:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ea2b:	call   0x1400221f0
   14000ea30:	test   eax,eax
   14000ea32:	je     0x14000ea9f
   14000ea34:	cmp    DWORD PTR [rsp+0x34],0x0
   14000ea39:	jbe    0x14000ea9f
   14000ea3b:	cmp    QWORD PTR [rsp+0x48],0x0
   14000ea41:	je     0x14000ea90
   14000ea43:	mov    eax,DWORD PTR [rsp+0x34]
   14000ea47:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14000ea4f:	cmp    QWORD PTR [rcx],rax
   14000ea52:	jbe    0x14000ea90
   14000ea54:	mov    eax,DWORD PTR [rsp+0x34]
   14000ea58:	mov    r9d,eax
   14000ea5b:	mov    r8,QWORD PTR [rsp+0x48]
   14000ea60:	mov    rax,QWORD PTR [rsp+0x2c0]
   14000ea68:	mov    rdx,QWORD PTR [rax]
   14000ea6b:	mov    rcx,QWORD PTR [rsp+0x2b8]
   14000ea73:	call   QWORD PTR [rip+0x1783f]        # 0x1400262b8
   14000ea79:	mov    eax,DWORD PTR [rsp+0x34]
   14000ea7d:	xor    ecx,ecx
   14000ea7f:	mov    rdx,QWORD PTR [rsp+0x2b8]
   14000ea87:	mov    WORD PTR [rdx+rax*2],cx
   14000ea8b:	mov    BYTE PTR [rsp+0x30],0x1
   14000ea90:	mov    eax,DWORD PTR [rsp+0x34]
   14000ea94:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14000ea9c:	mov    QWORD PTR [rcx],rax
   14000ea9f:	cmp    QWORD PTR [rsp+0x40],0x0
   14000eaa5:	je     0x14000eabb
   14000eaa7:	mov    rax,QWORD PTR [rsp+0x40]
   14000eaac:	mov    QWORD PTR [rsp+0x58],rax
   14000eab1:	mov    rcx,QWORD PTR [rsp+0x58]
   14000eab6:	call   0x140020b96
   14000eabb:	movzx  eax,BYTE PTR [rsp+0x30]
   14000eac0:	mov    BYTE PTR [rsp+0x38],al
   14000eac4:	lea    rcx,[rsp+0x68]
   14000eac9:	call   0x140009e60
   14000eace:	movzx  eax,BYTE PTR [rsp+0x38]
   14000ead3:	mov    rcx,QWORD PTR [rsp+0x290]
   14000eadb:	xor    rcx,rsp
   14000eade:	call   0x140021890
   14000eae3:	add    rsp,0x2a8
   14000eaea:	ret    
   14000eaeb:	int3   
   14000eaec:	int3   
   14000eaed:	int3   
   14000eaee:	int3   
   14000eaef:	int3   
   14000eaf0:	int3   
   14000eaf1:	int3   
   14000eaf2:	int3   
   14000eaf3:	int3   
   14000eaf4:	int3   
   14000eaf5:	int3   
   14000eaf6:	int3   
   14000eaf7:	int3   
   14000eaf8:	int3   
   14000eaf9:	int3   
   14000eafa:	int3   
   14000eafb:	int3   
   14000eafc:	int3   
   14000eafd:	int3   
   14000eafe:	int3   
   14000eaff:	int3   
   14000eb00:	mov    QWORD PTR [rsp+0x20],r9
   14000eb05:	mov    QWORD PTR [rsp+0x18],r8
   14000eb0a:	mov    QWORD PTR [rsp+0x10],rdx
   14000eb0f:	mov    QWORD PTR [rsp+0x8],rcx
   14000eb14:	sub    rsp,0x1d8
   14000eb1b:	mov    QWORD PTR [rsp+0x180],0xfffffffffffffffe
   14000eb27:	call   0x140003460
   14000eb2c:	mov    DWORD PTR [rsp+0x100],eax
   14000eb33:	mov    BYTE PTR [rsp+0x54],0x0
   14000eb38:	lea    rdx,[rip+0x1d831]        # 0x14002c370
   14000eb3f:	lea    rcx,[rsp+0xb8]
   14000eb47:	call   0x140009f20
   14000eb4c:	nop
   14000eb4d:	mov    rdx,QWORD PTR [rsp+0x1e0]
   14000eb55:	lea    rcx,[rsp+0x1a0]
   14000eb5d:	call   0x140009f20
   14000eb62:	nop
   14000eb63:	lea    rdx,[rsp+0x1a0]
   14000eb6b:	lea    rcx,[rsp+0xb8]
   14000eb73:	call   0x14000a3e0
   14000eb78:	nop
   14000eb79:	lea    rcx,[rsp+0x1a0]
   14000eb81:	call   0x140009e60
   14000eb86:	mov    QWORD PTR [rsp+0x60],0x0
   14000eb8f:	lea    rax,[rsp+0x60]
   14000eb94:	mov    QWORD PTR [rsp+0x20],rax
   14000eb99:	lea    r9,[rip+0x22d40]        # 0x1400318e0
   14000eba0:	mov    r8d,0x1
   14000eba6:	xor    edx,edx
   14000eba8:	lea    rcx,[rip+0x22d21]        # 0x1400318d0
   14000ebaf:	call   QWORD PTR [rip+0x182bb]        # 0x140026e70
   14000ebb5:	mov    DWORD PTR [rsp+0x50],eax
   14000ebb9:	cmp    DWORD PTR [rsp+0x50],0x0
   14000ebbe:	jge    0x14000ebdc
   14000ebc0:	mov    BYTE PTR [rsp+0x56],0x0
   14000ebc5:	lea    rcx,[rsp+0xb8]
   14000ebcd:	call   0x140009e60
   14000ebd2:	movzx  eax,BYTE PTR [rsp+0x56]
   14000ebd7:	jmp    0x14000f1e9
   14000ebdc:	mov    QWORD PTR [rsp+0x68],0x0
   14000ebe5:	lea    rdx,[rip+0x1d7a4]        # 0x14002c390
   14000ebec:	lea    rcx,[rsp+0xe0]
   14000ebf4:	call   0x140012a80
   14000ebf9:	mov    QWORD PTR [rsp+0x168],rax
   14000ec01:	mov    rax,QWORD PTR [rsp+0x168]
   14000ec09:	mov    QWORD PTR [rsp+0x178],rax
   14000ec11:	mov    rcx,QWORD PTR [rsp+0x178]
   14000ec19:	call   0x140012dd0
   14000ec1e:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ec23:	mov    rcx,QWORD PTR [rcx]
   14000ec26:	mov    QWORD PTR [rsp+0x140],rcx
   14000ec2e:	lea    rdx,[rsp+0x68]
   14000ec33:	mov    QWORD PTR [rsp+0x40],rdx
   14000ec38:	mov    QWORD PTR [rsp+0x38],0x0
   14000ec41:	mov    QWORD PTR [rsp+0x30],0x0
   14000ec4a:	mov    DWORD PTR [rsp+0x28],0x0
   14000ec52:	mov    QWORD PTR [rsp+0x20],0x0
   14000ec5b:	xor    r9d,r9d
   14000ec5e:	xor    r8d,r8d
   14000ec61:	mov    rdx,rax
   14000ec64:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ec69:	mov    rax,QWORD PTR [rsp+0x140]
   14000ec71:	call   QWORD PTR [rax+0x18]
   14000ec74:	mov    DWORD PTR [rsp+0x50],eax
   14000ec78:	lea    rcx,[rsp+0xe0]
   14000ec80:	call   0x1400077d0
   14000ec85:	cmp    DWORD PTR [rsp+0x50],0x0
   14000ec8a:	jge    0x14000ecb8
   14000ec8c:	mov    rax,QWORD PTR [rsp+0x60]
   14000ec91:	mov    rax,QWORD PTR [rax]
   14000ec94:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ec99:	call   QWORD PTR [rax+0x10]
   14000ec9c:	mov    BYTE PTR [rsp+0x58],0x0
   14000eca1:	lea    rcx,[rsp+0xb8]
   14000eca9:	call   0x140009e60
   14000ecae:	movzx  eax,BYTE PTR [rsp+0x58]
   14000ecb3:	jmp    0x14000f1e9
   14000ecb8:	mov    DWORD PTR [rsp+0x38],0x0
   14000ecc0:	mov    QWORD PTR [rsp+0x30],0x0
   14000ecc9:	mov    DWORD PTR [rsp+0x28],0x3
   14000ecd1:	mov    DWORD PTR [rsp+0x20],0x3
   14000ecd9:	xor    r9d,r9d
   14000ecdc:	xor    r8d,r8d
   14000ecdf:	mov    edx,0xa
   14000ece4:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ece9:	call   QWORD PTR [rip+0x18171]        # 0x140026e60
   14000ecef:	mov    DWORD PTR [rsp+0x50],eax
   14000ecf3:	cmp    DWORD PTR [rsp+0x50],0x0
   14000ecf8:	jge    0x14000ed36
   14000ecfa:	mov    rax,QWORD PTR [rsp+0x68]
   14000ecff:	mov    rax,QWORD PTR [rax]
   14000ed02:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ed07:	call   QWORD PTR [rax+0x10]
   14000ed0a:	mov    rax,QWORD PTR [rsp+0x60]
   14000ed0f:	mov    rax,QWORD PTR [rax]
   14000ed12:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ed17:	call   QWORD PTR [rax+0x10]
   14000ed1a:	mov    BYTE PTR [rsp+0x57],0x0
   14000ed1f:	lea    rcx,[rsp+0xb8]
   14000ed27:	call   0x140009e60
   14000ed2c:	movzx  eax,BYTE PTR [rsp+0x57]
   14000ed31:	jmp    0x14000f1e9
   14000ed36:	mov    QWORD PTR [rsp+0x78],0x0
   14000ed3f:	mov    QWORD PTR [rsp+0x70],0x0
   14000ed48:	lea    rcx,[rsp+0xb8]
   14000ed50:	call   0x14000a520
   14000ed55:	mov    rdx,rax
   14000ed58:	lea    rcx,[rsp+0x120]
   14000ed60:	call   0x140012a80
   14000ed65:	mov    QWORD PTR [rsp+0x158],rax
   14000ed6d:	mov    rax,QWORD PTR [rsp+0x158]
   14000ed75:	mov    QWORD PTR [rsp+0xf0],rax
   14000ed7d:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ed85:	call   0x140012dd0
   14000ed8a:	mov    QWORD PTR [rsp+0x150],rax
   14000ed92:	lea    rdx,[rip+0x1d15b]        # 0x14002bef4
   14000ed99:	lea    rcx,[rsp+0x170]
   14000eda1:	call   0x1400129f0
   14000eda6:	mov    QWORD PTR [rsp+0x160],rax
   14000edae:	mov    rax,QWORD PTR [rsp+0x160]
   14000edb6:	mov    QWORD PTR [rsp+0xd0],rax
   14000edbe:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000edc6:	call   0x140012dd0
   14000edcb:	mov    rcx,QWORD PTR [rsp+0x68]
   14000edd0:	mov    rcx,QWORD PTR [rcx]
   14000edd3:	mov    QWORD PTR [rsp+0x110],rcx
   14000eddb:	lea    rdx,[rsp+0x78]
   14000ede0:	mov    QWORD PTR [rsp+0x28],rdx
   14000ede5:	mov    QWORD PTR [rsp+0x20],0x0
   14000edee:	mov    r9d,0x30
   14000edf4:	mov    rdx,QWORD PTR [rsp+0x150]
   14000edfc:	mov    r8,rdx
   14000edff:	mov    rdx,rax
   14000ee02:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ee07:	mov    rax,QWORD PTR [rsp+0x110]
   14000ee0f:	call   QWORD PTR [rax+0xa0]
   14000ee15:	mov    DWORD PTR [rsp+0x50],eax
   14000ee19:	lea    rcx,[rsp+0x170]
   14000ee21:	call   0x1400077d0
   14000ee26:	nop
   14000ee27:	lea    rcx,[rsp+0x120]
   14000ee2f:	call   0x1400077d0
   14000ee34:	cmp    DWORD PTR [rsp+0x50],0x0
   14000ee39:	jl     0x14000f186
   14000ee3f:	cmp    QWORD PTR [rsp+0x78],0x0
   14000ee45:	je     0x14000f186
   14000ee4b:	mov    DWORD PTR [rsp+0x84],0x0
   14000ee56:	mov    rax,QWORD PTR [rsp+0x78]
   14000ee5b:	mov    rax,QWORD PTR [rax]
   14000ee5e:	lea    rcx,[rsp+0x84]
   14000ee66:	mov    QWORD PTR [rsp+0x20],rcx
   14000ee6b:	lea    r9,[rsp+0x70]
   14000ee70:	mov    r8d,0x1
   14000ee76:	mov    edx,0xffffffff
   14000ee7b:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ee80:	call   QWORD PTR [rax+0x20]
   14000ee83:	mov    DWORD PTR [rsp+0x50],eax
   14000ee87:	cmp    DWORD PTR [rsp+0x50],0x0
   14000ee8c:	jl     0x14000f186
   14000ee92:	cmp    QWORD PTR [rsp+0x70],0x0
   14000ee98:	je     0x14000f186
   14000ee9e:	mov    rdx,QWORD PTR [rsp+0x1e8]
   14000eea6:	lea    rcx,[rsp+0xd8]
   14000eeae:	call   0x140012a80
   14000eeb3:	mov    QWORD PTR [rsp+0x138],rax
   14000eebb:	mov    rax,QWORD PTR [rsp+0x138]
   14000eec3:	mov    QWORD PTR [rsp+0x130],rax
   14000eecb:	mov    rcx,QWORD PTR [rsp+0x130]
   14000eed3:	call   0x140007950
   14000eed8:	mov    rcx,QWORD PTR [rsp+0x70]
   14000eedd:	mov    rcx,QWORD PTR [rcx]
   14000eee0:	mov    QWORD PTR [rsp+0x148],rcx
   14000eee8:	mov    QWORD PTR [rsp+0x28],0x0
   14000eef1:	lea    rdx,[rsp+0x80]
   14000eef9:	mov    QWORD PTR [rsp+0x20],rdx
   14000eefe:	lea    r9,[rsp+0xa0]
   14000ef06:	xor    r8d,r8d
   14000ef09:	mov    rdx,rax
   14000ef0c:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ef11:	mov    rax,QWORD PTR [rsp+0x148]
   14000ef19:	call   QWORD PTR [rax+0x20]
   14000ef1c:	mov    DWORD PTR [rsp+0x50],eax
   14000ef20:	lea    rcx,[rsp+0xd8]
   14000ef28:	call   0x1400077d0
   14000ef2d:	lea    rcx,[rsp+0x88]
   14000ef35:	call   0x140009e20
   14000ef3a:	nop
   14000ef3b:	cmp    DWORD PTR [rsp+0x50],0x0
   14000ef40:	jl     0x14000ef6c
   14000ef42:	movzx  eax,WORD PTR [rsp+0xa0]
   14000ef4a:	cmp    eax,0x8
   14000ef4d:	jne    0x14000ef6c
   14000ef4f:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000ef57:	call   0x140012640
   14000ef5c:	mov    rdx,rax
   14000ef5f:	lea    rcx,[rsp+0x88]
   14000ef67:	call   0x14000a200
   14000ef6c:	lea    rcx,[rsp+0xa0]
   14000ef74:	call   QWORD PTR [rip+0x1753e]        # 0x1400264b8
   14000ef7a:	cmp    QWORD PTR [rsp+0x1f0],0x0
   14000ef83:	je     0x14000f0ce
   14000ef89:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14000ef91:	call   QWORD PTR [rip+0x173b9]        # 0x140026350
   14000ef97:	test   rax,rax
   14000ef9a:	jbe    0x14000f0ce
   14000efa0:	mov    rdx,QWORD PTR [rsp+0x1f0]
   14000efa8:	lea    rcx,[rsp+0x118]
   14000efb0:	call   0x140012a80
   14000efb5:	mov    QWORD PTR [rsp+0xe8],rax
   14000efbd:	mov    rax,QWORD PTR [rsp+0xe8]
   14000efc5:	mov    QWORD PTR [rsp+0xf8],rax
   14000efcd:	mov    rcx,QWORD PTR [rsp+0xf8]
   14000efd5:	call   0x140007950
   14000efda:	mov    rcx,QWORD PTR [rsp+0x70]
   14000efdf:	mov    rcx,QWORD PTR [rcx]
   14000efe2:	mov    QWORD PTR [rsp+0x108],rcx
   14000efea:	mov    QWORD PTR [rsp+0x28],0x0
   14000eff3:	lea    rdx,[rsp+0x80]
   14000effb:	mov    QWORD PTR [rsp+0x20],rdx
   14000f000:	lea    r9,[rsp+0xa0]
   14000f008:	xor    r8d,r8d
   14000f00b:	mov    rdx,rax
   14000f00e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f013:	mov    rax,QWORD PTR [rsp+0x108]
   14000f01b:	call   QWORD PTR [rax+0x20]
   14000f01e:	mov    DWORD PTR [rsp+0x50],eax
   14000f022:	lea    rcx,[rsp+0x118]
   14000f02a:	call   0x1400077d0
   14000f02f:	cmp    DWORD PTR [rsp+0x50],0x0
   14000f034:	jl     0x14000f0c0
   14000f03a:	movzx  eax,WORD PTR [rsp+0xa0]
   14000f042:	cmp    eax,0x8
   14000f045:	jne    0x14000f0c0
   14000f047:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000f04f:	call   0x140012640
   14000f054:	mov    rdx,rax
   14000f057:	lea    rcx,[rsp+0x1b8]
   14000f05f:	call   0x140009f20
   14000f064:	nop
   14000f065:	lea    rdx,[rip+0x1ce98]        # 0x14002bf04
   14000f06c:	lea    rcx,[rsp+0x188]
   14000f074:	call   0x140009f20
   14000f079:	nop
   14000f07a:	lea    rdx,[rsp+0x188]
   14000f082:	lea    rcx,[rsp+0x88]
   14000f08a:	call   0x14000a3e0
   14000f08f:	nop
   14000f090:	lea    rcx,[rsp+0x188]
   14000f098:	call   0x140009e60
   14000f09d:	lea    rdx,[rsp+0x1b8]
   14000f0a5:	lea    rcx,[rsp+0x88]
   14000f0ad:	call   0x14000a3e0
   14000f0b2:	nop
   14000f0b3:	lea    rcx,[rsp+0x1b8]
   14000f0bb:	call   0x140009e60
   14000f0c0:	lea    rcx,[rsp+0xa0]
   14000f0c8:	call   QWORD PTR [rip+0x173ea]        # 0x1400264b8
   14000f0ce:	lea    rcx,[rsp+0x88]
   14000f0d6:	call   0x14000ad20
   14000f0db:	test   eax,eax
   14000f0dd:	jne    0x14000f168
   14000f0e3:	lea    rcx,[rsp+0x88]
   14000f0eb:	call   0x14000a540
   14000f0f0:	mov    rcx,QWORD PTR [rsp+0x200]
   14000f0f8:	cmp    eax,DWORD PTR [rcx]
   14000f0fa:	jge    0x14000f151
   14000f0fc:	lea    rcx,[rsp+0x88]
   14000f104:	call   0x14000a540
   14000f109:	inc    eax
   14000f10b:	cdqe   
   14000f10d:	mov    QWORD PTR [rsp+0x128],rax
   14000f115:	lea    rcx,[rsp+0x88]
   14000f11d:	call   0x14000a520
   14000f122:	mov    rcx,QWORD PTR [rsp+0x200]
   14000f12a:	movsxd rcx,DWORD PTR [rcx]
   14000f12d:	mov    rdx,QWORD PTR [rsp+0x128]
   14000f135:	mov    r9,rdx
   14000f138:	mov    r8,rax
   14000f13b:	mov    rdx,rcx
   14000f13e:	mov    rcx,QWORD PTR [rsp+0x1f8]
   14000f146:	call   QWORD PTR [rip+0x1716c]        # 0x1400262b8
   14000f14c:	mov    BYTE PTR [rsp+0x54],0x1
   14000f151:	lea    rcx,[rsp+0x88]
   14000f159:	call   0x14000a540
   14000f15e:	mov    rcx,QWORD PTR [rsp+0x200]
   14000f166:	mov    DWORD PTR [rcx],eax
   14000f168:	mov    rax,QWORD PTR [rsp+0x70]
   14000f16d:	mov    rax,QWORD PTR [rax]
   14000f170:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f175:	call   QWORD PTR [rax+0x10]
   14000f178:	nop
   14000f179:	lea    rcx,[rsp+0x88]
   14000f181:	call   0x140009e60
   14000f186:	cmp    QWORD PTR [rsp+0x68],0x0
   14000f18c:	je     0x14000f19e
   14000f18e:	mov    rax,QWORD PTR [rsp+0x68]
   14000f193:	mov    rax,QWORD PTR [rax]
   14000f196:	mov    rcx,QWORD PTR [rsp+0x68]
   14000f19b:	call   QWORD PTR [rax+0x10]
   14000f19e:	cmp    QWORD PTR [rsp+0x60],0x0
   14000f1a4:	je     0x14000f1b6
   14000f1a6:	mov    rax,QWORD PTR [rsp+0x60]
   14000f1ab:	mov    rax,QWORD PTR [rax]
   14000f1ae:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f1b3:	call   QWORD PTR [rax+0x10]
   14000f1b6:	cmp    QWORD PTR [rsp+0x78],0x0
   14000f1bc:	je     0x14000f1ce
   14000f1be:	mov    rax,QWORD PTR [rsp+0x78]
   14000f1c3:	mov    rax,QWORD PTR [rax]
   14000f1c6:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f1cb:	call   QWORD PTR [rax+0x10]
   14000f1ce:	movzx  eax,BYTE PTR [rsp+0x54]
   14000f1d3:	mov    BYTE PTR [rsp+0x55],al
   14000f1d7:	lea    rcx,[rsp+0xb8]
   14000f1df:	call   0x140009e60
   14000f1e4:	movzx  eax,BYTE PTR [rsp+0x55]
   14000f1e9:	add    rsp,0x1d8
   14000f1f0:	ret    
   14000f1f1:	int3   
   14000f1f2:	int3   
   14000f1f3:	int3   
   14000f1f4:	int3   
   14000f1f5:	int3   
   14000f1f6:	int3   
   14000f1f7:	int3   
   14000f1f8:	int3   
   14000f1f9:	int3   
   14000f1fa:	int3   
   14000f1fb:	int3   
   14000f1fc:	int3   
   14000f1fd:	int3   
   14000f1fe:	int3   
   14000f1ff:	int3   
   14000f200:	mov    QWORD PTR [rsp+0x10],rdx
   14000f205:	mov    QWORD PTR [rsp+0x8],rcx
   14000f20a:	push   rdi
   14000f20b:	sub    rsp,0x390
   14000f212:	mov    QWORD PTR [rsp+0x220],0xfffffffffffffffe
   14000f21e:	mov    rax,QWORD PTR [rip+0x2c02b]        # 0x14003b250
   14000f225:	xor    rax,rsp
   14000f228:	mov    QWORD PTR [rsp+0x380],rax
   14000f230:	call   0x140003460
   14000f235:	mov    DWORD PTR [rsp+0x198],eax
   14000f23c:	mov    BYTE PTR [rsp+0x50],0x0
   14000f241:	lea    r9,[rip+0x1d160]        # 0x14002c3a8
   14000f248:	lea    r8,[rip+0x1d169]        # 0x14002c3b8
   14000f24f:	mov    rdx,0xffffffff80000001
   14000f256:	lea    rcx,[rsp+0xb0]
   14000f25e:	call   0x14000c9c0
   14000f263:	nop
   14000f264:	lea    rcx,[rsp+0xb0]
   14000f26c:	call   0x14000ad20
   14000f271:	test   eax,eax
   14000f273:	jne    0x14000f31e
   14000f279:	lea    rcx,[rsp+0xb0]
   14000f281:	call   0x14000a540
   14000f286:	mov    rcx,QWORD PTR [rsp+0x3a8]
   14000f28e:	cmp    eax,DWORD PTR [rcx]
   14000f290:	jge    0x14000f2e7
   14000f292:	lea    rcx,[rsp+0xb0]
   14000f29a:	call   0x14000a540
   14000f29f:	inc    eax
   14000f2a1:	cdqe   
   14000f2a3:	mov    QWORD PTR [rsp+0x1d8],rax
   14000f2ab:	lea    rcx,[rsp+0xb0]
   14000f2b3:	call   0x14000a520
   14000f2b8:	mov    rcx,QWORD PTR [rsp+0x3a8]
   14000f2c0:	movsxd rcx,DWORD PTR [rcx]
   14000f2c3:	mov    rdx,QWORD PTR [rsp+0x1d8]
   14000f2cb:	mov    r9,rdx
   14000f2ce:	mov    r8,rax
   14000f2d1:	mov    rdx,rcx
   14000f2d4:	mov    rcx,QWORD PTR [rsp+0x3a0]
   14000f2dc:	call   QWORD PTR [rip+0x16fd6]        # 0x1400262b8
   14000f2e2:	mov    BYTE PTR [rsp+0x50],0x1
   14000f2e7:	lea    rcx,[rsp+0xb0]
   14000f2ef:	call   0x14000a540
   14000f2f4:	mov    rcx,QWORD PTR [rsp+0x3a8]
   14000f2fc:	mov    DWORD PTR [rcx],eax
   14000f2fe:	movzx  eax,BYTE PTR [rsp+0x50]
   14000f303:	mov    BYTE PTR [rsp+0x5c],al
   14000f307:	lea    rcx,[rsp+0xb0]
   14000f30f:	call   0x140009e60
   14000f314:	movzx  eax,BYTE PTR [rsp+0x5c]
   14000f319:	jmp    0x14000fd2f
   14000f31e:	lea    rdx,[rip+0x1d0bb]        # 0x14002c3e0
   14000f325:	lea    rcx,[rsp+0x180]
   14000f32d:	call   0x140009f20
   14000f332:	nop
   14000f333:	mov    QWORD PTR [rsp+0x60],0x0
   14000f33c:	lea    rax,[rsp+0x60]
   14000f341:	mov    QWORD PTR [rsp+0x20],rax
   14000f346:	lea    r9,[rip+0x22593]        # 0x1400318e0
   14000f34d:	mov    r8d,0x1
   14000f353:	xor    edx,edx
   14000f355:	lea    rcx,[rip+0x22574]        # 0x1400318d0
   14000f35c:	call   QWORD PTR [rip+0x17b0e]        # 0x140026e70
   14000f362:	mov    DWORD PTR [rsp+0x54],eax
   14000f366:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f36b:	jge    0x14000f397
   14000f36d:	mov    BYTE PTR [rsp+0x5b],0x0
   14000f372:	lea    rcx,[rsp+0x180]
   14000f37a:	call   0x140009e60
   14000f37f:	nop
   14000f380:	lea    rcx,[rsp+0xb0]
   14000f388:	call   0x140009e60
   14000f38d:	movzx  eax,BYTE PTR [rsp+0x5b]
   14000f392:	jmp    0x14000fd2f
   14000f397:	mov    QWORD PTR [rsp+0x70],0x0
   14000f3a0:	lea    rdx,[rip+0x1d111]        # 0x14002c4b8
   14000f3a7:	lea    rcx,[rsp+0x218]
   14000f3af:	call   0x140012a80
   14000f3b4:	mov    QWORD PTR [rsp+0x1e8],rax
   14000f3bc:	mov    rax,QWORD PTR [rsp+0x1e8]
   14000f3c4:	mov    QWORD PTR [rsp+0x1f8],rax
   14000f3cc:	mov    rcx,QWORD PTR [rsp+0x1f8]
   14000f3d4:	call   0x140012dd0
   14000f3d9:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f3de:	mov    rcx,QWORD PTR [rcx]
   14000f3e1:	mov    QWORD PTR [rsp+0x208],rcx
   14000f3e9:	lea    rdx,[rsp+0x70]
   14000f3ee:	mov    QWORD PTR [rsp+0x40],rdx
   14000f3f3:	mov    QWORD PTR [rsp+0x38],0x0
   14000f3fc:	mov    QWORD PTR [rsp+0x30],0x0
   14000f405:	mov    DWORD PTR [rsp+0x28],0x0
   14000f40d:	mov    QWORD PTR [rsp+0x20],0x0
   14000f416:	xor    r9d,r9d
   14000f419:	xor    r8d,r8d
   14000f41c:	mov    rdx,rax
   14000f41f:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f424:	mov    rax,QWORD PTR [rsp+0x208]
   14000f42c:	call   QWORD PTR [rax+0x18]
   14000f42f:	mov    DWORD PTR [rsp+0x54],eax
   14000f433:	lea    rcx,[rsp+0x218]
   14000f43b:	call   0x1400077d0
   14000f440:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f445:	jge    0x14000f481
   14000f447:	mov    rax,QWORD PTR [rsp+0x60]
   14000f44c:	mov    rax,QWORD PTR [rax]
   14000f44f:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f454:	call   QWORD PTR [rax+0x10]
   14000f457:	mov    BYTE PTR [rsp+0x58],0x0
   14000f45c:	lea    rcx,[rsp+0x180]
   14000f464:	call   0x140009e60
   14000f469:	nop
   14000f46a:	lea    rcx,[rsp+0xb0]
   14000f472:	call   0x140009e60
   14000f477:	movzx  eax,BYTE PTR [rsp+0x58]
   14000f47c:	jmp    0x14000fd2f
   14000f481:	mov    DWORD PTR [rsp+0x38],0x0
   14000f489:	mov    QWORD PTR [rsp+0x30],0x0
   14000f492:	mov    DWORD PTR [rsp+0x28],0x3
   14000f49a:	mov    DWORD PTR [rsp+0x20],0x3
   14000f4a2:	xor    r9d,r9d
   14000f4a5:	xor    r8d,r8d
   14000f4a8:	mov    edx,0xa
   14000f4ad:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f4b2:	call   QWORD PTR [rip+0x179a8]        # 0x140026e60
   14000f4b8:	mov    DWORD PTR [rsp+0x54],eax
   14000f4bc:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f4c1:	jge    0x14000f50d
   14000f4c3:	mov    rax,QWORD PTR [rsp+0x70]
   14000f4c8:	mov    rax,QWORD PTR [rax]
   14000f4cb:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f4d0:	call   QWORD PTR [rax+0x10]
   14000f4d3:	mov    rax,QWORD PTR [rsp+0x60]
   14000f4d8:	mov    rax,QWORD PTR [rax]
   14000f4db:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f4e0:	call   QWORD PTR [rax+0x10]
   14000f4e3:	mov    BYTE PTR [rsp+0x5a],0x0
   14000f4e8:	lea    rcx,[rsp+0x180]
   14000f4f0:	call   0x140009e60
   14000f4f5:	nop
   14000f4f6:	lea    rcx,[rsp+0xb0]
   14000f4fe:	call   0x140009e60
   14000f503:	movzx  eax,BYTE PTR [rsp+0x5a]
   14000f508:	jmp    0x14000fd2f
   14000f50d:	mov    QWORD PTR [rsp+0x80],0x0
   14000f519:	lea    rcx,[rsp+0x180]
   14000f521:	call   0x14000a520
   14000f526:	mov    rdx,rax
   14000f529:	lea    rcx,[rsp+0x1a8]
   14000f531:	call   0x140012a80
   14000f536:	mov    QWORD PTR [rsp+0x130],rax
   14000f53e:	mov    rax,QWORD PTR [rsp+0x130]
   14000f546:	mov    QWORD PTR [rsp+0x1d0],rax
   14000f54e:	mov    rcx,QWORD PTR [rsp+0x1d0]
   14000f556:	call   0x140012dd0
   14000f55b:	mov    QWORD PTR [rsp+0x150],rax
   14000f563:	lea    rdx,[rip+0x1c9aa]        # 0x14002bf14
   14000f56a:	lea    rcx,[rsp+0x160]
   14000f572:	call   0x1400129f0
   14000f577:	mov    QWORD PTR [rsp+0x140],rax
   14000f57f:	mov    rax,QWORD PTR [rsp+0x140]
   14000f587:	mov    QWORD PTR [rsp+0x178],rax
   14000f58f:	mov    rcx,QWORD PTR [rsp+0x178]
   14000f597:	call   0x140012dd0
   14000f59c:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f5a1:	mov    rcx,QWORD PTR [rcx]
   14000f5a4:	mov    QWORD PTR [rsp+0x120],rcx
   14000f5ac:	lea    rdx,[rsp+0x80]
   14000f5b4:	mov    QWORD PTR [rsp+0x28],rdx
   14000f5b9:	mov    QWORD PTR [rsp+0x20],0x0
   14000f5c2:	mov    r9d,0x30
   14000f5c8:	mov    rdx,QWORD PTR [rsp+0x150]
   14000f5d0:	mov    r8,rdx
   14000f5d3:	mov    rdx,rax
   14000f5d6:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f5db:	mov    rax,QWORD PTR [rsp+0x120]
   14000f5e3:	call   QWORD PTR [rax+0xa0]
   14000f5e9:	mov    DWORD PTR [rsp+0x54],eax
   14000f5ed:	lea    rcx,[rsp+0x160]
   14000f5f5:	call   0x1400077d0
   14000f5fa:	nop
   14000f5fb:	lea    rcx,[rsp+0x1a8]
   14000f603:	call   0x1400077d0
   14000f608:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f60d:	jl     0x14000fcb5
   14000f613:	cmp    QWORD PTR [rsp+0x80],0x0
   14000f61c:	je     0x14000fcb5
   14000f622:	mov    DWORD PTR [rsp+0x68],0x0
   14000f62a:	mov    rax,QWORD PTR [rsp+0x80]
   14000f632:	mov    rax,QWORD PTR [rax]
   14000f635:	lea    rcx,[rsp+0x68]
   14000f63a:	mov    QWORD PTR [rsp+0x20],rcx
   14000f63f:	lea    r9,[rsp+0x260]
   14000f647:	mov    r8d,0x1e
   14000f64d:	mov    edx,0xffffffff
   14000f652:	mov    rcx,QWORD PTR [rsp+0x80]
   14000f65a:	call   QWORD PTR [rax+0x20]
   14000f65d:	mov    DWORD PTR [rsp+0x54],eax
   14000f661:	lea    rcx,[rsp+0xe0]
   14000f669:	call   0x140009e20
   14000f66e:	nop
   14000f66f:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f674:	jl     0x14000fca8
   14000f67a:	cmp    DWORD PTR [rsp+0x68],0x0
   14000f67f:	jbe    0x14000fca8
   14000f685:	lea    rcx,[rsp+0xf8]
   14000f68d:	call   0x140012910
   14000f692:	nop
   14000f693:	lea    rcx,[rsp+0x98]
   14000f69b:	call   0x140012880
   14000f6a0:	mov    DWORD PTR [rsp+0x6c],0x0
   14000f6a8:	jmp    0x14000f6b4
   14000f6aa:	mov    eax,DWORD PTR [rsp+0x6c]
   14000f6ae:	inc    eax
   14000f6b0:	mov    DWORD PTR [rsp+0x6c],eax
   14000f6b4:	mov    eax,DWORD PTR [rsp+0x68]
   14000f6b8:	cmp    DWORD PTR [rsp+0x6c],eax
   14000f6bc:	jae    0x14000fa5a
   14000f6c2:	mov    eax,DWORD PTR [rsp+0x6c]
   14000f6c6:	mov    rax,QWORD PTR [rsp+rax*8+0x260]
   14000f6ce:	mov    QWORD PTR [rsp+0x88],rax
   14000f6d6:	cmp    QWORD PTR [rsp+0x88],0x0
   14000f6df:	je     0x14000fa55
   14000f6e5:	lea    rdx,[rip+0x1c64c]        # 0x14002bd38
   14000f6ec:	lea    rcx,[rsp+0x210]
   14000f6f4:	call   0x140012a80
   14000f6f9:	mov    QWORD PTR [rsp+0x170],rax
   14000f701:	mov    rax,QWORD PTR [rsp+0x170]
   14000f709:	mov    QWORD PTR [rsp+0x1b8],rax
   14000f711:	mov    rcx,QWORD PTR [rsp+0x1b8]
   14000f719:	call   0x140007950
   14000f71e:	mov    rcx,QWORD PTR [rsp+0x88]
   14000f726:	mov    rcx,QWORD PTR [rcx]
   14000f729:	mov    QWORD PTR [rsp+0x1c8],rcx
   14000f731:	mov    QWORD PTR [rsp+0x28],0x0
   14000f73a:	lea    rdx,[rsp+0x90]
   14000f742:	mov    QWORD PTR [rsp+0x20],rdx
   14000f747:	lea    r9,[rsp+0xc8]
   14000f74f:	xor    r8d,r8d
   14000f752:	mov    rdx,rax
   14000f755:	mov    rcx,QWORD PTR [rsp+0x88]
   14000f75d:	mov    rax,QWORD PTR [rsp+0x1c8]
   14000f765:	call   QWORD PTR [rax+0x20]
   14000f768:	mov    DWORD PTR [rsp+0x54],eax
   14000f76c:	lea    rcx,[rsp+0x210]
   14000f774:	call   0x1400077d0
   14000f779:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f77e:	jl     0x14000fa55
   14000f784:	movzx  eax,WORD PTR [rsp+0xc8]
   14000f78c:	cmp    eax,0x3
   14000f78f:	jne    0x14000fa55
   14000f795:	mov    eax,DWORD PTR [rsp+0xd0]
   14000f79c:	mov    DWORD PTR [rsp+0x94],eax
   14000f7a3:	lea    rcx,[rsp+0xc8]
   14000f7ab:	call   QWORD PTR [rip+0x16d07]        # 0x1400264b8
   14000f7b1:	lea    rdx,[rip+0x1c590]        # 0x14002bd48
   14000f7b8:	lea    rcx,[rsp+0x200]
   14000f7c0:	call   0x140012a80
   14000f7c5:	mov    QWORD PTR [rsp+0x1a0],rax
   14000f7cd:	mov    rax,QWORD PTR [rsp+0x1a0]
   14000f7d5:	mov    QWORD PTR [rsp+0x1e0],rax
   14000f7dd:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14000f7e5:	call   0x140007950
   14000f7ea:	mov    rcx,QWORD PTR [rsp+0x88]
   14000f7f2:	mov    rcx,QWORD PTR [rcx]
   14000f7f5:	mov    QWORD PTR [rsp+0x1b0],rcx
   14000f7fd:	mov    QWORD PTR [rsp+0x28],0x0
   14000f806:	lea    rdx,[rsp+0x90]
   14000f80e:	mov    QWORD PTR [rsp+0x20],rdx
   14000f813:	lea    r9,[rsp+0xc8]
   14000f81b:	xor    r8d,r8d
   14000f81e:	mov    rdx,rax
   14000f821:	mov    rcx,QWORD PTR [rsp+0x88]
   14000f829:	mov    rax,QWORD PTR [rsp+0x1b0]
   14000f831:	call   QWORD PTR [rax+0x20]
   14000f834:	mov    DWORD PTR [rsp+0x54],eax
   14000f838:	lea    rcx,[rsp+0x200]
   14000f840:	call   0x1400077d0
   14000f845:	mov    eax,DWORD PTR [rsp+0xd0]
   14000f84c:	mov    DWORD PTR [rsp+0xa0],eax
   14000f853:	lea    rcx,[rsp+0xc8]
   14000f85b:	call   QWORD PTR [rip+0x16c57]        # 0x1400264b8
   14000f861:	lea    rdx,[rip+0x1c510]        # 0x14002bd78
   14000f868:	lea    rcx,[rsp+0x138]
   14000f870:	call   0x140012a80
   14000f875:	mov    QWORD PTR [rsp+0x1c0],rax
   14000f87d:	mov    rax,QWORD PTR [rsp+0x1c0]
   14000f885:	mov    QWORD PTR [rsp+0x1f0],rax
   14000f88d:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14000f895:	call   0x140007950
   14000f89a:	mov    rcx,QWORD PTR [rsp+0x88]
   14000f8a2:	mov    rcx,QWORD PTR [rcx]
   14000f8a5:	mov    QWORD PTR [rsp+0x128],rcx
   14000f8ad:	mov    QWORD PTR [rsp+0x28],0x0
   14000f8b6:	lea    rdx,[rsp+0x90]
   14000f8be:	mov    QWORD PTR [rsp+0x20],rdx
   14000f8c3:	lea    r9,[rsp+0xc8]
   14000f8cb:	xor    r8d,r8d
   14000f8ce:	mov    rdx,rax
   14000f8d1:	mov    rcx,QWORD PTR [rsp+0x88]
   14000f8d9:	mov    rax,QWORD PTR [rsp+0x128]
   14000f8e1:	call   QWORD PTR [rax+0x20]
   14000f8e4:	mov    DWORD PTR [rsp+0x54],eax
   14000f8e8:	lea    rcx,[rsp+0x138]
   14000f8f0:	call   0x1400077d0
   14000f8f5:	lea    rcx,[rsp+0x108]
   14000f8fd:	call   0x140009e20
   14000f902:	nop
   14000f903:	cmp    DWORD PTR [rsp+0x54],0x0
   14000f908:	jl     0x14000fa39
   14000f90e:	movzx  eax,WORD PTR [rsp+0xc8]
   14000f916:	cmp    eax,0x8
   14000f919:	jne    0x14000f93d
   14000f91b:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000f923:	call   0x140012640
   14000f928:	mov    rdx,rax
   14000f92b:	lea    rcx,[rsp+0x108]
   14000f933:	call   0x14000a200
   14000f938:	jmp    0x14000f9e8
   14000f93d:	cmp    DWORD PTR [rsp+0xa0],0x16
   14000f945:	jne    0x14000f9e8
   14000f94b:	xor    eax,eax
   14000f94d:	mov    WORD PTR [rsp+0x350],ax
   14000f955:	lea    rax,[rsp+0x352]
   14000f95d:	mov    rdi,rax
   14000f960:	xor    eax,eax
   14000f962:	mov    ecx,0x12
   14000f967:	rep stos BYTE PTR es:[rdi],al
   14000f969:	mov    r9d,0xa
   14000f96f:	mov    r8d,0xa
   14000f975:	lea    rdx,[rsp+0x350]
   14000f97d:	mov    ecx,DWORD PTR [rsp+0x94]
   14000f984:	call   QWORD PTR [rip+0x169be]        # 0x140026348
   14000f98a:	lea    r9,[rsp+0x350]
   14000f992:	lea    r8,[rip+0x1c3f7]        # 0x14002bd90
   14000f999:	mov    rdx,0xffffffff80000001
   14000f9a0:	lea    rcx,[rsp+0x240]
   14000f9a8:	call   0x14000c9c0
   14000f9ad:	mov    QWORD PTR [rsp+0x148],rax
   14000f9b5:	mov    rax,QWORD PTR [rsp+0x148]
   14000f9bd:	mov    QWORD PTR [rsp+0x158],rax
   14000f9c5:	mov    rdx,QWORD PTR [rsp+0x158]
   14000f9cd:	lea    rcx,[rsp+0x108]
   14000f9d5:	call   0x14000a260
   14000f9da:	nop
   14000f9db:	lea    rcx,[rsp+0x240]
   14000f9e3:	call   0x140009e60
   14000f9e8:	lea    rcx,[rsp+0x108]
   14000f9f0:	call   0x14000ad20
   14000f9f5:	test   eax,eax
   14000f9f7:	jne    0x14000fa39
   14000f9f9:	lea    r8,[rip+0x1c2a4]        # 0x14002bca4
   14000fa00:	lea    rdx,[rip+0x1c2ed]        # 0x14002bcf4
   14000fa07:	lea    rcx,[rsp+0x108]
   14000fa0f:	call   0x14000af00
   14000fa14:	lea    rdx,[rsp+0x94]
   14000fa1c:	lea    rcx,[rsp+0xf8]
   14000fa24:	call   0x140012cb0
   14000fa29:	lea    rdx,[rsp+0x108]
   14000fa31:	mov    rcx,rax
   14000fa34:	call   0x14000a260
   14000fa39:	lea    rcx,[rsp+0xc8]
   14000fa41:	call   QWORD PTR [rip+0x16a71]        # 0x1400264b8
   14000fa47:	nop
   14000fa48:	lea    rcx,[rsp+0x108]
   14000fa50:	call   0x140009e60
   14000fa55:	jmp    0x14000f6aa
   14000fa5a:	lea    rdx,[rsp+0x228]
   14000fa62:	lea    rcx,[rsp+0xf8]
   14000fa6a:	call   0x140013ea0
   14000fa6f:	mov    rax,QWORD PTR [rax]
   14000fa72:	mov    QWORD PTR [rsp+0x98],rax
   14000fa7a:	jmp    0x14000fa94
   14000fa7c:	xor    r8d,r8d
   14000fa7f:	lea    rdx,[rsp+0x238]
   14000fa87:	lea    rcx,[rsp+0x98]
   14000fa8f:	call   0x140012ee0
   14000fa94:	lea    rdx,[rsp+0x230]
   14000fa9c:	lea    rcx,[rsp+0xf8]
   14000faa4:	call   0x140014060
   14000faa9:	mov    rdx,rax
   14000faac:	lea    rcx,[rsp+0x98]
   14000fab4:	call   0x140012c70
   14000fab9:	movzx  eax,al
   14000fabc:	test   eax,eax
   14000fabe:	je     0x14000fbab
   14000fac4:	lea    rcx,[rsp+0x98]
   14000facc:	call   0x140012e50
   14000fad1:	add    rax,0x8
   14000fad5:	mov    rdx,rax
   14000fad8:	lea    rcx,[rsp+0xe0]
   14000fae0:	call   0x14000a260
   14000fae5:	lea    rcx,[rsp+0xe0]
   14000faed:	call   0x14000ad20
   14000faf2:	test   eax,eax
   14000faf4:	jne    0x14000fba6
   14000fafa:	lea    rcx,[rsp+0x98]
   14000fb02:	call   0x140012e50
   14000fb07:	mov    eax,DWORD PTR [rax]
   14000fb09:	mov    DWORD PTR [rsp+0xa4],eax
   14000fb10:	xor    eax,eax
   14000fb12:	mov    WORD PTR [rsp+0x368],ax
   14000fb1a:	lea    rax,[rsp+0x36a]
   14000fb22:	mov    rdi,rax
   14000fb25:	xor    eax,eax
   14000fb27:	mov    ecx,0x12
   14000fb2c:	rep stos BYTE PTR es:[rdi],al
   14000fb2e:	mov    r9d,0xa
   14000fb34:	mov    r8d,0xa
   14000fb3a:	lea    rdx,[rsp+0x368]
   14000fb42:	mov    ecx,DWORD PTR [rsp+0xa4]
   14000fb49:	call   QWORD PTR [rip+0x167f9]        # 0x140026348
   14000fb4f:	lea    rcx,[rsp+0xe0]
   14000fb57:	call   0x14000a520
   14000fb5c:	mov    r9,rax
   14000fb5f:	lea    r8,[rsp+0x368]
   14000fb67:	lea    rdx,[rip+0x1c28a]        # 0x14002bdf8
   14000fb6e:	mov    rcx,0xffffffff80000001
   14000fb75:	call   0x14000cac0
   14000fb7a:	lea    rcx,[rsp+0xe0]
   14000fb82:	call   0x14000a520
   14000fb87:	mov    r9,rax
   14000fb8a:	lea    r8,[rip+0x1c28f]        # 0x14002be20
   14000fb91:	lea    rdx,[rip+0x1c298]        # 0x14002be30
   14000fb98:	mov    rcx,0xffffffff80000001
   14000fb9f:	call   0x14000cac0
   14000fba4:	jmp    0x14000fbab
   14000fba6:	jmp    0x14000fa7c
   14000fbab:	lea    rcx,[rsp+0xe0]
   14000fbb3:	call   0x14000ad20
   14000fbb8:	test   eax,eax
   14000fbba:	jne    0x14000fc45
   14000fbc0:	lea    rcx,[rsp+0xe0]
   14000fbc8:	call   0x14000a540
   14000fbcd:	mov    rcx,QWORD PTR [rsp+0x3a8]
   14000fbd5:	cmp    eax,DWORD PTR [rcx]
   14000fbd7:	jge    0x14000fc2e
   14000fbd9:	lea    rcx,[rsp+0xe0]
   14000fbe1:	call   0x14000a540
   14000fbe6:	inc    eax
   14000fbe8:	cdqe   
   14000fbea:	mov    QWORD PTR [rsp+0x168],rax
   14000fbf2:	lea    rcx,[rsp+0xe0]
   14000fbfa:	call   0x14000a520
   14000fbff:	mov    rcx,QWORD PTR [rsp+0x3a8]
   14000fc07:	movsxd rcx,DWORD PTR [rcx]
   14000fc0a:	mov    rdx,QWORD PTR [rsp+0x168]
   14000fc12:	mov    r9,rdx
   14000fc15:	mov    r8,rax
   14000fc18:	mov    rdx,rcx
   14000fc1b:	mov    rcx,QWORD PTR [rsp+0x3a0]
   14000fc23:	call   QWORD PTR [rip+0x1668f]        # 0x1400262b8
   14000fc29:	mov    BYTE PTR [rsp+0x50],0x1
   14000fc2e:	lea    rcx,[rsp+0xe0]
   14000fc36:	call   0x14000a540
   14000fc3b:	mov    rcx,QWORD PTR [rsp+0x3a8]
   14000fc43:	mov    DWORD PTR [rcx],eax
   14000fc45:	mov    DWORD PTR [rsp+0x78],0x0
   14000fc4d:	jmp    0x14000fc59
   14000fc4f:	mov    eax,DWORD PTR [rsp+0x78]
   14000fc53:	inc    eax
   14000fc55:	mov    DWORD PTR [rsp+0x78],eax
   14000fc59:	mov    eax,DWORD PTR [rsp+0x68]
   14000fc5d:	cmp    DWORD PTR [rsp+0x78],eax
   14000fc61:	jae    0x14000fc9a
   14000fc63:	mov    eax,DWORD PTR [rsp+0x78]
   14000fc67:	mov    rax,QWORD PTR [rsp+rax*8+0x260]
   14000fc6f:	mov    QWORD PTR [rsp+0xa8],rax
   14000fc77:	cmp    QWORD PTR [rsp+0xa8],0x0
   14000fc80:	je     0x14000fc98
   14000fc82:	mov    rax,QWORD PTR [rsp+0xa8]
   14000fc8a:	mov    rax,QWORD PTR [rax]
   14000fc8d:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000fc95:	call   QWORD PTR [rax+0x10]
   14000fc98:	jmp    0x14000fc4f
   14000fc9a:	lea    rcx,[rsp+0xf8]
   14000fca2:	call   0x140012bc0
   14000fca7:	nop
   14000fca8:	lea    rcx,[rsp+0xe0]
   14000fcb0:	call   0x140009e60
   14000fcb5:	cmp    QWORD PTR [rsp+0x70],0x0
   14000fcbb:	je     0x14000fccd
   14000fcbd:	mov    rax,QWORD PTR [rsp+0x70]
   14000fcc2:	mov    rax,QWORD PTR [rax]
   14000fcc5:	mov    rcx,QWORD PTR [rsp+0x70]
   14000fcca:	call   QWORD PTR [rax+0x10]
   14000fccd:	cmp    QWORD PTR [rsp+0x60],0x0
   14000fcd3:	je     0x14000fce5
   14000fcd5:	mov    rax,QWORD PTR [rsp+0x60]
   14000fcda:	mov    rax,QWORD PTR [rax]
   14000fcdd:	mov    rcx,QWORD PTR [rsp+0x60]
   14000fce2:	call   QWORD PTR [rax+0x10]
   14000fce5:	cmp    QWORD PTR [rsp+0x80],0x0
   14000fcee:	je     0x14000fd06
   14000fcf0:	mov    rax,QWORD PTR [rsp+0x80]
   14000fcf8:	mov    rax,QWORD PTR [rax]
   14000fcfb:	mov    rcx,QWORD PTR [rsp+0x80]
   14000fd03:	call   QWORD PTR [rax+0x10]
   14000fd06:	movzx  eax,BYTE PTR [rsp+0x50]
   14000fd0b:	mov    BYTE PTR [rsp+0x59],al
   14000fd0f:	lea    rcx,[rsp+0x180]
   14000fd17:	call   0x140009e60
   14000fd1c:	nop
   14000fd1d:	lea    rcx,[rsp+0xb0]
   14000fd25:	call   0x140009e60
   14000fd2a:	movzx  eax,BYTE PTR [rsp+0x59]
   14000fd2f:	mov    rcx,QWORD PTR [rsp+0x380]
   14000fd37:	xor    rcx,rsp
   14000fd3a:	call   0x140021890
   14000fd3f:	add    rsp,0x390
   14000fd46:	pop    rdi
   14000fd47:	ret    
   14000fd48:	int3   
   14000fd49:	int3   
   14000fd4a:	int3   
   14000fd4b:	int3   
   14000fd4c:	int3   
   14000fd4d:	int3   
   14000fd4e:	int3   
   14000fd4f:	int3   
   14000fd50:	mov    QWORD PTR [rsp+0x10],rdx
   14000fd55:	mov    QWORD PTR [rsp+0x8],rcx
   14000fd5a:	push   rdi
   14000fd5b:	sub    rsp,0x320
   14000fd62:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000fd6e:	mov    rax,QWORD PTR [rip+0x2b4db]        # 0x14003b250
   14000fd75:	xor    rax,rsp
   14000fd78:	mov    QWORD PTR [rsp+0x310],rax
   14000fd80:	mov    BYTE PTR [rsp+0x30],0x0
   14000fd85:	lea    rcx,[rsp+0x40]
   14000fd8a:	call   0x140009e20
   14000fd8f:	nop
   14000fd90:	xor    eax,eax
   14000fd92:	mov    WORD PTR [rsp+0x100],ax
   14000fd9a:	lea    rax,[rsp+0x102]
   14000fda2:	mov    rdi,rax
   14000fda5:	xor    eax,eax
   14000fda7:	mov    ecx,0x206
   14000fdac:	rep stos BYTE PTR es:[rdi],al
   14000fdae:	mov    DWORD PTR [rsp+0x34],0x104
   14000fdb6:	lea    rax,[rsp+0x34]
   14000fdbb:	mov    QWORD PTR [rsp+0x20],rax
   14000fdc0:	lea    r9,[rsp+0x100]
   14000fdc8:	lea    r8,[rip+0x1c139]        # 0x14002bf08
   14000fdcf:	lea    rdx,[rip+0x1c162]        # 0x14002bf38
   14000fdd6:	lea    rcx,[rip+0x1c17b]        # 0x14002bf58
   14000fddd:	call   0x14000eb00
   14000fde2:	movzx  eax,al
   14000fde5:	test   eax,eax
   14000fde7:	je     0x14000fdfb
   14000fde9:	lea    rdx,[rsp+0x100]
   14000fdf1:	lea    rcx,[rsp+0x40]
   14000fdf6:	call   0x14000a200
   14000fdfb:	mov    r8d,0x104
   14000fe01:	xor    edx,edx
   14000fe03:	lea    rcx,[rsp+0x100]
   14000fe0b:	call   0x1400216e0
   14000fe10:	mov    DWORD PTR [rsp+0x34],0x104
   14000fe18:	lea    rax,[rsp+0x34]
   14000fe1d:	mov    QWORD PTR [rsp+0x20],rax
   14000fe22:	lea    r9,[rsp+0x100]
   14000fe2a:	lea    r8,[rip+0x1c157]        # 0x14002bf88
   14000fe31:	lea    rdx,[rip+0x1c190]        # 0x14002bfc8
   14000fe38:	lea    rcx,[rip+0x1c1a9]        # 0x14002bfe8
   14000fe3f:	call   0x14000eb00
   14000fe44:	movzx  eax,al
   14000fe47:	test   eax,eax
   14000fe49:	je     0x14000fead
   14000fe4b:	lea    rdx,[rip+0x1beba]        # 0x14002bd0c
   14000fe52:	lea    rcx,[rsp+0x60]
   14000fe57:	call   0x140009f20
   14000fe5c:	nop
   14000fe5d:	lea    rdx,[rsp+0x60]
   14000fe62:	lea    rcx,[rsp+0x40]
   14000fe67:	call   0x14000a3e0
   14000fe6c:	nop
   14000fe6d:	lea    rcx,[rsp+0x60]
   14000fe72:	call   0x140009e60
   14000fe77:	lea    rdx,[rsp+0x100]
   14000fe7f:	lea    rcx,[rsp+0xe0]
   14000fe87:	call   0x140009f20
   14000fe8c:	nop
   14000fe8d:	lea    rdx,[rsp+0xe0]
   14000fe95:	lea    rcx,[rsp+0x40]
   14000fe9a:	call   0x14000a3e0
   14000fe9f:	nop
   14000fea0:	lea    rcx,[rsp+0xe0]
   14000fea8:	call   0x140009e60
   14000fead:	mov    r8d,0x104
   14000feb3:	xor    edx,edx
   14000feb5:	lea    rcx,[rsp+0x100]
   14000febd:	call   0x1400216e0
   14000fec2:	mov    DWORD PTR [rsp+0x34],0x104
   14000feca:	lea    rax,[rsp+0x34]
   14000fecf:	mov    QWORD PTR [rsp+0x20],rax
   14000fed4:	lea    r9,[rsp+0x100]
   14000fedc:	lea    r8,[rip+0x1c125]        # 0x14002c008
   14000fee3:	lea    rdx,[rip+0x1c13e]        # 0x14002c028
   14000feea:	lea    rcx,[rip+0x1c157]        # 0x14002c048
   14000fef1:	call   0x14000eb00
   14000fef6:	movzx  eax,al
   14000fef9:	test   eax,eax
   14000fefb:	je     0x14000ff5f
   14000fefd:	lea    rdx,[rip+0x1be30]        # 0x14002bd34
   14000ff04:	lea    rcx,[rsp+0xb0]
   14000ff0c:	call   0x140009f20
   14000ff11:	nop
   14000ff12:	lea    rdx,[rsp+0xb0]
   14000ff1a:	lea    rcx,[rsp+0x40]
   14000ff1f:	call   0x14000a3e0
   14000ff24:	nop
   14000ff25:	lea    rcx,[rsp+0xb0]
   14000ff2d:	call   0x140009e60
   14000ff32:	lea    rdx,[rsp+0x100]
   14000ff3a:	lea    rcx,[rsp+0x78]
   14000ff3f:	call   0x140009f20
   14000ff44:	nop
   14000ff45:	lea    rdx,[rsp+0x78]
   14000ff4a:	lea    rcx,[rsp+0x40]
   14000ff4f:	call   0x14000a3e0
   14000ff54:	nop
   14000ff55:	lea    rcx,[rsp+0x78]
   14000ff5a:	call   0x140009e60
   14000ff5f:	mov    r8d,0x104
   14000ff65:	xor    edx,edx
   14000ff67:	lea    rcx,[rsp+0x100]
   14000ff6f:	call   0x1400216e0
   14000ff74:	mov    DWORD PTR [rsp+0x34],0x104
   14000ff7c:	lea    rdx,[rsp+0x34]
   14000ff81:	lea    rcx,[rsp+0x100]
   14000ff89:	call   0x14000f200
   14000ff8e:	movzx  eax,al
   14000ff91:	test   eax,eax
   14000ff93:	je     0x140010000
   14000ff95:	lea    rdx,[rip+0x1bda8]        # 0x14002bd44
   14000ff9c:	lea    rcx,[rsp+0x98]
   14000ffa4:	call   0x140009f20
   14000ffa9:	nop
   14000ffaa:	lea    rdx,[rsp+0x98]
   14000ffb2:	lea    rcx,[rsp+0x40]
   14000ffb7:	call   0x14000a3e0
   14000ffbc:	nop
   14000ffbd:	lea    rcx,[rsp+0x98]
   14000ffc5:	call   0x140009e60
   14000ffca:	lea    rdx,[rsp+0x100]
   14000ffd2:	lea    rcx,[rsp+0xc8]
   14000ffda:	call   0x140009f20
   14000ffdf:	nop
   14000ffe0:	lea    rdx,[rsp+0xc8]
   14000ffe8:	lea    rcx,[rsp+0x40]
   14000ffed:	call   0x14000a3e0
   14000fff2:	nop
   14000fff3:	lea    rcx,[rsp+0xc8]
   14000fffb:	call   0x140009e60
   140010000:	lea    rcx,[rsp+0x40]
   140010005:	call   0x14000a540
   14001000a:	mov    rcx,QWORD PTR [rsp+0x338]
   140010012:	cmp    eax,DWORD PTR [rcx]
   140010014:	jge    0x14001005f
   140010016:	lea    rcx,[rsp+0x40]
   14001001b:	call   0x14000a540
   140010020:	inc    eax
   140010022:	cdqe   
   140010024:	mov    QWORD PTR [rsp+0x58],rax
   140010029:	lea    rcx,[rsp+0x40]
   14001002e:	call   0x14000a520
   140010033:	mov    rcx,QWORD PTR [rsp+0x338]
   14001003b:	movsxd rcx,DWORD PTR [rcx]
   14001003e:	mov    rdx,QWORD PTR [rsp+0x58]
   140010043:	mov    r9,rdx
   140010046:	mov    r8,rax
   140010049:	mov    rdx,rcx
   14001004c:	mov    rcx,QWORD PTR [rsp+0x330]
   140010054:	call   QWORD PTR [rip+0x1625e]        # 0x1400262b8
   14001005a:	mov    BYTE PTR [rsp+0x30],0x1
   14001005f:	lea    rcx,[rsp+0x40]
   140010064:	call   0x14000a540
   140010069:	mov    rcx,QWORD PTR [rsp+0x338]
   140010071:	mov    DWORD PTR [rcx],eax
   140010073:	movzx  eax,BYTE PTR [rsp+0x30]
   140010078:	mov    BYTE PTR [rsp+0x38],al
   14001007c:	lea    rcx,[rsp+0x40]
   140010081:	call   0x140009e60
   140010086:	movzx  eax,BYTE PTR [rsp+0x38]
   14001008b:	mov    rcx,QWORD PTR [rsp+0x310]
   140010093:	xor    rcx,rsp
   140010096:	call   0x140021890
   14001009b:	add    rsp,0x320
   1400100a2:	pop    rdi
   1400100a3:	ret    
   1400100a4:	int3   
   1400100a5:	int3   
   1400100a6:	int3   
   1400100a7:	int3   
   1400100a8:	int3   
   1400100a9:	int3   
   1400100aa:	int3   
   1400100ab:	int3   
   1400100ac:	int3   
   1400100ad:	int3   
   1400100ae:	int3   
   1400100af:	int3   
   1400100b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400100b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400100ba:	push   rdi
   1400100bb:	sub    rsp,0x250
   1400100c2:	mov    rax,QWORD PTR [rip+0x2b187]        # 0x14003b250
   1400100c9:	xor    rax,rsp
   1400100cc:	mov    QWORD PTR [rsp+0x240],rax
   1400100d4:	mov    BYTE PTR [rsp+0x20],0x0
   1400100d9:	xor    eax,eax
   1400100db:	mov    WORD PTR [rsp+0x30],ax
   1400100e0:	lea    rax,[rsp+0x32]
   1400100e5:	mov    rdi,rax
   1400100e8:	xor    eax,eax
   1400100ea:	mov    ecx,0x206
   1400100ef:	rep stos BYTE PTR es:[rdi],al
   1400100f1:	mov    DWORD PTR [rsp+0x24],0x104
   1400100f9:	lea    rdx,[rsp+0x24]
   1400100fe:	lea    rcx,[rsp+0x30]
   140010103:	call   QWORD PTR [rip+0x160af]        # 0x1400261b8
   140010109:	test   eax,eax
   14001010b:	je     0x14001015b
   14001010d:	mov    eax,DWORD PTR [rsp+0x24]
   140010111:	mov    rcx,QWORD PTR [rsp+0x268]
   140010119:	cmp    rax,QWORD PTR [rcx]
   14001011c:	jae    0x14001014c
   14001011e:	mov    eax,DWORD PTR [rsp+0x24]
   140010122:	inc    eax
   140010124:	mov    eax,eax
   140010126:	mov    r9d,eax
   140010129:	lea    r8,[rsp+0x30]
   14001012e:	mov    rax,QWORD PTR [rsp+0x268]
   140010136:	mov    rdx,QWORD PTR [rax]
   140010139:	mov    rcx,QWORD PTR [rsp+0x260]
   140010141:	call   QWORD PTR [rip+0x16171]        # 0x1400262b8
   140010147:	mov    BYTE PTR [rsp+0x20],0x1
   14001014c:	mov    eax,DWORD PTR [rsp+0x24]
   140010150:	mov    rcx,QWORD PTR [rsp+0x268]
   140010158:	mov    QWORD PTR [rcx],rax
   14001015b:	movzx  eax,BYTE PTR [rsp+0x20]
   140010160:	mov    rcx,QWORD PTR [rsp+0x240]
   140010168:	xor    rcx,rsp
   14001016b:	call   0x140021890
   140010170:	add    rsp,0x250
   140010177:	pop    rdi
   140010178:	ret    
   140010179:	int3   
   14001017a:	int3   
   14001017b:	int3   
   14001017c:	int3   
   14001017d:	int3   
   14001017e:	int3   
   14001017f:	int3   
   140010180:	mov    QWORD PTR [rsp+0x8],rcx
   140010185:	push   rbp
   140010186:	push   rdi
   140010187:	sub    rsp,0xcd8
   14001018e:	lea    rbp,[rsp+0x20]
   140010193:	mov    QWORD PTR [rbp+0x68],0xfffffffffffffffe
   14001019b:	mov    rax,QWORD PTR [rip+0x2b0ae]        # 0x14003b250
   1400101a2:	xor    rax,rbp
   1400101a5:	mov    QWORD PTR [rbp+0xca0],rax
   1400101ac:	xor    ecx,ecx
   1400101ae:	call   QWORD PTR [rip+0x16ca4]        # 0x140026e58
   1400101b4:	call   0x140003460
   1400101b9:	mov    DWORD PTR [rbp+0xc],eax
   1400101bc:	xor    eax,eax
   1400101be:	mov    WORD PTR [rbp+0x4a0],ax
   1400101c5:	lea    rax,[rbp+0x4a2]
   1400101cc:	mov    rdi,rax
   1400101cf:	xor    eax,eax
   1400101d1:	mov    ecx,0x7fe
   1400101d6:	rep stos BYTE PTR es:[rdi],al
   1400101d8:	mov    DWORD PTR [rbp+0x0],0x400
   1400101df:	lea    rdx,[rbp+0x0]
   1400101e3:	lea    rcx,[rbp+0x4a0]
   1400101ea:	call   0x14000fd50
   1400101ef:	mov    BYTE PTR [rbp+0xa0],0x0
   1400101f6:	lea    rax,[rbp+0xa1]
   1400101fd:	mov    rdi,rax
   140010200:	xor    eax,eax
   140010202:	mov    ecx,0x3ff
   140010207:	rep stos BYTE PTR es:[rdi],al
   140010209:	lea    rax,[rbp+0x4a0]
   140010210:	mov    QWORD PTR [rbp+0x10],rax
   140010214:	cmp    QWORD PTR [rbp+0x10],0x0
   140010219:	jne    0x140010228
   14001021b:	mov    QWORD PTR [rbp+0x28],0x0
   140010223:	jmp    0x1400102a9
   140010228:	mov    rcx,QWORD PTR [rbp+0x10]
   14001022c:	call   QWORD PTR [rip+0x1611e]        # 0x140026350
   140010232:	inc    eax
   140010234:	mov    DWORD PTR [rbp+0x4],eax
   140010237:	cmp    DWORD PTR [rbp+0x4],0x3fffffff
   14001023e:	jle    0x14001024a
   140010240:	mov    QWORD PTR [rbp+0x20],0x0
   140010248:	jmp    0x1400102a1
   14001024a:	movsxd rax,DWORD PTR [rbp+0x4]
   14001024e:	shl    rax,1
   140010251:	mov    QWORD PTR [rbp+0x30],rax
   140010255:	movsxd rcx,DWORD PTR [rbp+0x4]
   140010259:	shl    rcx,1
   14001025c:	mov    rdx,rcx
   14001025f:	add    rdx,0xf
   140010263:	cmp    rdx,rcx
   140010266:	ja     0x140010272
   140010268:	movabs rdx,0xffffffffffffff0
   140010272:	and    rdx,0xfffffffffffffff0
   140010276:	mov    rax,rdx
   140010279:	call   0x1400218e0
   14001027e:	sub    rsp,rax
   140010281:	lea    rax,[rsp+0x20]
   140010286:	mov    r9d,DWORD PTR [rbp+0xc]
   14001028a:	mov    rcx,QWORD PTR [rbp+0x30]
   14001028e:	mov    r8d,ecx
   140010291:	mov    rdx,QWORD PTR [rbp+0x10]
   140010295:	mov    rcx,rax
   140010298:	call   0x140009d20
   14001029d:	mov    QWORD PTR [rbp+0x20],rax
   1400102a1:	mov    rax,QWORD PTR [rbp+0x20]
   1400102a5:	mov    QWORD PTR [rbp+0x28],rax
   1400102a9:	mov    eax,DWORD PTR [rbp+0x0]
   1400102ac:	inc    eax
   1400102ae:	cdqe   
   1400102b0:	mov    r9,rax
   1400102b3:	mov    r8,QWORD PTR [rbp+0x28]
   1400102b7:	mov    edx,0x400
   1400102bc:	lea    rcx,[rbp+0xa0]
   1400102c3:	call   QWORD PTR [rip+0x15f9f]        # 0x140026268
   1400102c9:	mov    BYTE PTR [rbp+0x88],0x0
   1400102d0:	lea    rax,[rbp+0x89]
   1400102d7:	mov    rdi,rax
   1400102da:	xor    eax,eax
   1400102dc:	mov    ecx,0xf
   1400102e1:	rep stos BYTE PTR es:[rdi],al
   1400102e3:	movsxd rax,DWORD PTR [rbp+0x0]
   1400102e7:	lea    r8,[rbp+0x88]
   1400102ee:	mov    rdx,rax
   1400102f1:	lea    rcx,[rbp+0xa0]
   1400102f8:	call   0x140014b70
   1400102fd:	mov    r8d,0x10
   140010303:	lea    rdx,[rbp+0x88]
   14001030a:	lea    rcx,[rbp+0x48]
   14001030e:	call   0x14000d660
   140010313:	nop
   140010314:	lea    r8,[rbp+0x48]
   140010318:	lea    rdx,[rip+0x1bd75]        # 0x14002c094
   14001031f:	lea    rcx,[rbp+0x70]
   140010323:	call   0x140013140
   140010328:	mov    QWORD PTR [rbp+0x60],rax
   14001032c:	mov    rax,QWORD PTR [rbp+0x60]
   140010330:	mov    QWORD PTR [rbp+0x40],rax
   140010334:	mov    rdx,QWORD PTR [rbp+0x40]
   140010338:	lea    rcx,[rbp+0x48]
   14001033c:	call   0x14000a260
   140010341:	nop
   140010342:	lea    rcx,[rbp+0x70]
   140010346:	call   0x140009e60
   14001034b:	lea    rcx,[rbp+0x48]
   14001034f:	call   0x14000a540
   140010354:	mov    DWORD PTR [rbp+0x8],eax
   140010357:	cmp    DWORD PTR [rbp+0x8],0x7f
   14001035b:	jle    0x140010364
   14001035d:	mov    DWORD PTR [rbp+0x8],0x7f
   140010364:	mov    eax,DWORD PTR [rbp+0x8]
   140010367:	inc    eax
   140010369:	cdqe   
   14001036b:	mov    QWORD PTR [rbp+0x38],rax
   14001036f:	lea    rcx,[rbp+0x48]
   140010373:	call   0x14000a520
   140010378:	mov    rcx,QWORD PTR [rbp+0x38]
   14001037c:	mov    r9,rcx
   14001037f:	mov    r8,rax
   140010382:	mov    edx,0x80
   140010387:	lea    rcx,[rip+0x2c7b2]        # 0x14003cb40
   14001038e:	call   QWORD PTR [rip+0x15f24]        # 0x1400262b8
   140010394:	lea    r9,[rip+0x2c7a5]        # 0x14003cb40
   14001039b:	lea    r8,[rip+0x1bcfe]        # 0x14002c0a0
   1400103a2:	lea    rdx,[rip+0x1bd07]        # 0x14002c0b0
   1400103a9:	mov    rcx,0xffffffff80000001
   1400103b0:	call   0x14000cac0
   1400103b5:	call   QWORD PTR [rip+0x16aad]        # 0x140026e68
   1400103bb:	mov    DWORD PTR [rbp+0x18],0x0
   1400103c2:	lea    rcx,[rbp+0x48]
   1400103c6:	call   0x140009e60
   1400103cb:	mov    eax,DWORD PTR [rbp+0x18]
   1400103ce:	mov    rcx,QWORD PTR [rbp+0xca0]
   1400103d5:	xor    rcx,rbp
   1400103d8:	call   0x140021890
   1400103dd:	lea    rsp,[rbp+0xcb8]
   1400103e4:	pop    rdi
   1400103e5:	pop    rbp
   1400103e6:	ret    
   1400103e7:	int3   
   1400103e8:	int3   
   1400103e9:	int3   
   1400103ea:	int3   
   1400103eb:	int3   
   1400103ec:	int3   
   1400103ed:	int3   
   1400103ee:	int3   
   1400103ef:	int3   
   1400103f0:	ret    
   1400103f1:	int3   
   1400103f2:	int3   
   1400103f3:	int3   
   1400103f4:	int3   
   1400103f5:	int3   
   1400103f6:	int3   
   1400103f7:	int3   
   1400103f8:	int3   
   1400103f9:	int3   
   1400103fa:	int3   
   1400103fb:	int3   
   1400103fc:	int3   
   1400103fd:	int3   
   1400103fe:	int3   
   1400103ff:	int3   
   140010400:	mov    QWORD PTR [rsp+0x20],r9
   140010405:	mov    QWORD PTR [rsp+0x18],r8
   14001040a:	mov    QWORD PTR [rsp+0x10],rdx
   14001040f:	mov    QWORD PTR [rsp+0x8],rcx
   140010414:	sub    rsp,0x48
   140010418:	mov    DWORD PTR [rsp+0x38],0x0
   140010420:	mov    DWORD PTR [rsp+0x34],0x0
   140010428:	mov    DWORD PTR [rsp+0x30],0x0
   140010430:	mov    rax,QWORD PTR [rsp+0x68]
   140010435:	mov    QWORD PTR [rsp+0x28],rax
   14001043a:	mov    rax,QWORD PTR [rsp+0x60]
   14001043f:	mov    QWORD PTR [rsp+0x20],rax
   140010444:	lea    r9,[rsp+0x34]
   140010449:	xor    r8d,r8d
   14001044c:	mov    rdx,QWORD PTR [rsp+0x58]
   140010451:	mov    rcx,QWORD PTR [rsp+0x50]
   140010456:	call   QWORD PTR [rip+0x15bf4]        # 0x140026050
   14001045c:	mov    DWORD PTR [rsp+0x30],eax
   140010460:	cmp    DWORD PTR [rsp+0x30],0x0
   140010465:	jne    0x140010480
   140010467:	cmp    DWORD PTR [rsp+0x34],0x3
   14001046c:	jne    0x140010480
   14001046e:	cmp    QWORD PTR [rsp+0x60],0x0
   140010474:	je     0x14001047e
   140010476:	mov    DWORD PTR [rsp+0x38],0x1
   14001047e:	jmp    0x140010495
   140010480:	cmp    DWORD PTR [rsp+0x30],0xea
   140010488:	je     0x140010495
   14001048a:	mov    rax,QWORD PTR [rsp+0x68]
   14001048f:	mov    DWORD PTR [rax],0x0
   140010495:	mov    eax,DWORD PTR [rsp+0x38]
   140010499:	add    rsp,0x48
   14001049d:	ret    
   14001049e:	int3   
   14001049f:	int3   
   1400104a0:	mov    QWORD PTR [rsp+0x20],r9
   1400104a5:	mov    QWORD PTR [rsp+0x18],r8
   1400104aa:	mov    BYTE PTR [rsp+0x10],dl
   1400104ae:	mov    QWORD PTR [rsp+0x8],rcx
   1400104b3:	push   rdi
   1400104b4:	sub    rsp,0x40
   1400104b8:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400104c1:	lea    rax,[rsp+0x30]
   1400104c6:	mov    rdi,rax
   1400104c9:	xor    eax,eax
   1400104cb:	mov    ecx,0x1
   1400104d0:	rep stos BYTE PTR es:[rdi],al
   1400104d2:	lea    rax,[rsp+0x31]
   1400104d7:	mov    rdi,rax
   1400104da:	xor    eax,eax
   1400104dc:	mov    ecx,0x1
   1400104e1:	rep stos BYTE PTR es:[rdi],al
   1400104e3:	movzx  eax,BYTE PTR [rsp+0x30]
   1400104e8:	mov    BYTE PTR [rsp+0x20],al
   1400104ec:	movzx  r9d,BYTE PTR [rsp+0x31]
   1400104f2:	mov    r8,QWORD PTR [rsp+0x68]
   1400104f7:	mov    rdx,QWORD PTR [rsp+0x60]
   1400104fc:	mov    rcx,QWORD PTR [rsp+0x50]
   140010501:	call   0x140010600
   140010506:	nop
   140010507:	mov    rax,QWORD PTR [rsp+0x50]
   14001050c:	add    rsp,0x40
   140010510:	pop    rdi
   140010511:	ret    
   140010512:	int3   
   140010513:	int3   
   140010514:	int3   
   140010515:	int3   
   140010516:	int3   
   140010517:	int3   
   140010518:	int3   
   140010519:	int3   
   14001051a:	int3   
   14001051b:	int3   
   14001051c:	int3   
   14001051d:	int3   
   14001051e:	int3   
   14001051f:	int3   
   140010520:	mov    QWORD PTR [rsp+0x10],rdx
   140010525:	mov    QWORD PTR [rsp+0x8],rcx
   14001052a:	sub    rsp,0x28
   14001052e:	mov    rcx,QWORD PTR [rsp+0x38]
   140010533:	call   0x140012640
   140010538:	mov    rcx,QWORD PTR [rsp+0x30]
   14001053d:	mov    QWORD PTR [rcx],rax
   140010540:	mov    rax,QWORD PTR [rsp+0x30]
   140010545:	add    rsp,0x28
   140010549:	ret    
   14001054a:	int3   
   14001054b:	int3   
   14001054c:	int3   
   14001054d:	int3   
   14001054e:	int3   
   14001054f:	int3   
   140010550:	mov    QWORD PTR [rsp+0x10],rdx
   140010555:	mov    QWORD PTR [rsp+0x8],rcx
   14001055a:	sub    rsp,0x28
   14001055e:	mov    rcx,QWORD PTR [rsp+0x38]
   140010563:	call   0x140012640
   140010568:	mov    rcx,rax
   14001056b:	call   0x140012640
   140010570:	mov    rdx,rax
   140010573:	mov    rcx,QWORD PTR [rsp+0x30]
   140010578:	call   0x140012950
   14001057d:	mov    rax,QWORD PTR [rsp+0x38]
   140010582:	mov    rcx,QWORD PTR [rax]
   140010585:	call   0x140012640
   14001058a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001058f:	mov    rdx,rax
   140010592:	call   0x140010520
   140010597:	mov    rax,QWORD PTR [rsp+0x30]
   14001059c:	add    rsp,0x28
   1400105a0:	ret    
   1400105a1:	int3   
   1400105a2:	int3   
   1400105a3:	int3   
   1400105a4:	int3   
   1400105a5:	int3   
   1400105a6:	int3   
   1400105a7:	int3   
   1400105a8:	int3   
   1400105a9:	int3   
   1400105aa:	int3   
   1400105ab:	int3   
   1400105ac:	int3   
   1400105ad:	int3   
   1400105ae:	int3   
   1400105af:	int3   
   1400105b0:	mov    QWORD PTR [rsp+0x18],r8
   1400105b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400105ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400105bf:	sub    rsp,0x28
   1400105c3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400105c8:	call   0x140012640
   1400105cd:	mov    rax,QWORD PTR [rax]
   1400105d0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400105d5:	mov    QWORD PTR [rcx],rax
   1400105d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400105dd:	call   0x140012640
   1400105e2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400105e7:	movzx  eax,BYTE PTR [rax]
   1400105ea:	mov    BYTE PTR [rcx+0x8],al
   1400105ed:	mov    rax,QWORD PTR [rsp+0x30]
   1400105f2:	add    rsp,0x28
   1400105f6:	ret    
   1400105f7:	int3   
   1400105f8:	int3   
   1400105f9:	int3   
   1400105fa:	int3   
   1400105fb:	int3   
   1400105fc:	int3   
   1400105fd:	int3   
   1400105fe:	int3   
   1400105ff:	int3   
   140010600:	mov    BYTE PTR [rsp+0x20],r9b
   140010605:	mov    QWORD PTR [rsp+0x18],r8
   14001060a:	mov    QWORD PTR [rsp+0x10],rdx
   14001060f:	mov    QWORD PTR [rsp+0x8],rcx
   140010614:	sub    rsp,0x38
   140010618:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010621:	mov    rcx,QWORD PTR [rsp+0x48]
   140010626:	call   0x140012640
   14001062b:	mov    rcx,rax
   14001062e:	call   0x140012620
   140010633:	mov    rcx,QWORD PTR [rsp+0x40]
   140010638:	mov    eax,DWORD PTR [rax]
   14001063a:	mov    DWORD PTR [rcx],eax
   14001063c:	mov    rax,QWORD PTR [rsp+0x40]
   140010641:	add    rax,0x8
   140010645:	mov    rcx,rax
   140010648:	call   0x140009e20
   14001064d:	nop
   14001064e:	mov    rax,QWORD PTR [rsp+0x40]
   140010653:	add    rsp,0x38
   140010657:	ret    
   140010658:	int3   
   140010659:	int3   
   14001065a:	int3   
   14001065b:	int3   
   14001065c:	int3   
   14001065d:	int3   
   14001065e:	int3   
   14001065f:	int3   
   140010660:	mov    QWORD PTR [rsp+0x10],rdx
   140010665:	mov    QWORD PTR [rsp+0x8],rcx
   14001066a:	sub    rsp,0x38
   14001066e:	mov    QWORD PTR [rsp+0x20],0x0
   140010677:	cmp    QWORD PTR [rsp+0x40],0x0
   14001067d:	jne    0x140010681
   14001067f:	jmp    0x1400106b3
   140010681:	movabs rax,0x666666666666666
   14001068b:	cmp    QWORD PTR [rsp+0x40],rax
   140010690:	ja     0x1400106ad
   140010692:	imul   rax,QWORD PTR [rsp+0x40],0x28
   140010698:	mov    rcx,rax
   14001069b:	call   0x140020b9c
   1400106a0:	mov    QWORD PTR [rsp+0x20],rax
   1400106a5:	cmp    QWORD PTR [rsp+0x20],0x0
   1400106ab:	jne    0x1400106b3
   1400106ad:	call   QWORD PTR [rip+0x15b85]        # 0x140026238
   1400106b3:	mov    rax,QWORD PTR [rsp+0x20]
   1400106b8:	add    rsp,0x38
   1400106bc:	ret    
   1400106bd:	int3   
   1400106be:	int3   
   1400106bf:	int3   
   1400106c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400106c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400106ca:	sub    rsp,0x38
   1400106ce:	mov    QWORD PTR [rsp+0x20],0x0
   1400106d7:	cmp    QWORD PTR [rsp+0x40],0x0
   1400106dd:	jne    0x1400106e1
   1400106df:	jmp    0x140010713
   1400106e1:	movabs rax,0x3ffffffffffffff
   1400106eb:	cmp    QWORD PTR [rsp+0x40],rax
   1400106f0:	ja     0x14001070d
   1400106f2:	imul   rax,QWORD PTR [rsp+0x40],0x40
   1400106f8:	mov    rcx,rax
   1400106fb:	call   0x140020b9c
   140010700:	mov    QWORD PTR [rsp+0x20],rax
   140010705:	cmp    QWORD PTR [rsp+0x20],0x0
   14001070b:	jne    0x140010713
   14001070d:	call   QWORD PTR [rip+0x15b25]        # 0x140026238
   140010713:	mov    rax,QWORD PTR [rsp+0x20]
   140010718:	add    rsp,0x38
   14001071c:	ret    
   14001071d:	int3   
   14001071e:	int3   
   14001071f:	int3   
   140010720:	mov    QWORD PTR [rsp+0x20],r9
   140010725:	mov    QWORD PTR [rsp+0x18],r8
   14001072a:	mov    QWORD PTR [rsp+0x10],rdx
   14001072f:	mov    QWORD PTR [rsp+0x8],rcx
   140010734:	sub    rsp,0x78
   140010738:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140010741:	mov    rcx,QWORD PTR [rsp+0x80]
   140010749:	call   0x140013430
   14001074e:	mov    QWORD PTR [rsp+0x38],rax
   140010753:	mov    rcx,QWORD PTR [rsp+0x38]
   140010758:	call   0x140013530
   14001075d:	mov    BYTE PTR [rax],0x0
   140010760:	mov    rcx,QWORD PTR [rsp+0x38]
   140010765:	call   0x1400138d0
   14001076a:	mov    BYTE PTR [rax],0x0
   14001076d:	mov    rcx,QWORD PTR [rsp+0x98]
   140010775:	call   0x140012640
   14001077a:	mov    QWORD PTR [rsp+0x40],rax
   14001077f:	mov    rcx,QWORD PTR [rsp+0x90]
   140010787:	call   0x140012640
   14001078c:	mov    QWORD PTR [rsp+0x48],rax
   140010791:	mov    rcx,QWORD PTR [rsp+0x88]
   140010799:	call   0x140012640
   14001079e:	mov    QWORD PTR [rsp+0x50],rax
   1400107a3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400107a8:	call   0x140013bc0
   1400107ad:	mov    rcx,rax
   1400107b0:	call   0x140012640
   1400107b5:	mov    QWORD PTR [rsp+0x58],rax
   1400107ba:	lea    rdx,[rsp+0x30]
   1400107bf:	mov    rcx,QWORD PTR [rsp+0x80]
   1400107c7:	call   0x140013840
   1400107cc:	mov    rcx,QWORD PTR [rsp+0x40]
   1400107d1:	mov    QWORD PTR [rsp+0x20],rcx
   1400107d6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400107db:	mov    r9,rcx
   1400107de:	mov    rcx,QWORD PTR [rsp+0x50]
   1400107e3:	mov    r8,rcx
   1400107e6:	mov    rcx,QWORD PTR [rsp+0x58]
   1400107eb:	mov    rdx,rcx
   1400107ee:	mov    rcx,rax
   1400107f1:	call   0x140012120
   1400107f6:	nop
   1400107f7:	jmp    0x1400107f9
   1400107f9:	mov    rax,QWORD PTR [rsp+0x38]
   1400107fe:	add    rsp,0x78
   140010802:	ret    
   140010803:	int3   
   140010804:	int3   
   140010805:	int3   
   140010806:	int3   
   140010807:	int3   
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	mov    QWORD PTR [rsp+0x20],r9
   140010815:	mov    QWORD PTR [rsp+0x18],r8
   14001081a:	mov    QWORD PTR [rsp+0x10],rdx
   14001081f:	mov    QWORD PTR [rsp+0x8],rcx
   140010824:	sub    rsp,0x58
   140010828:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140010831:	mov    r8,QWORD PTR [rsp+0x70]
   140010836:	mov    rdx,QWORD PTR [rsp+0x68]
   14001083b:	mov    rcx,QWORD PTR [rsp+0x60]
   140010840:	call   0x140013350
   140010845:	mov    QWORD PTR [rsp+0x28],rax
   14001084a:	mov    rcx,QWORD PTR [rsp+0x78]
   14001084f:	call   0x140012640
   140010854:	mov    QWORD PTR [rsp+0x30],rax
   140010859:	mov    rcx,QWORD PTR [rsp+0x28]
   14001085e:	call   0x140013be0
   140010863:	mov    rcx,rax
   140010866:	call   0x140012640
   14001086b:	mov    QWORD PTR [rsp+0x38],rax
   140010870:	lea    rdx,[rsp+0x20]
   140010875:	mov    rcx,QWORD PTR [rsp+0x60]
   14001087a:	call   0x140013840
   14001087f:	mov    rcx,QWORD PTR [rsp+0x30]
   140010884:	mov    r8,rcx
   140010887:	mov    rcx,QWORD PTR [rsp+0x38]
   14001088c:	mov    rdx,rcx
   14001088f:	mov    rcx,rax
   140010892:	call   0x1400122e0
   140010897:	nop
   140010898:	jmp    0x14001089a
   14001089a:	mov    rax,QWORD PTR [rsp+0x28]
   14001089f:	add    rsp,0x58
   1400108a3:	ret    
   1400108a4:	int3   
   1400108a5:	int3   
   1400108a6:	int3   
   1400108a7:	int3   
   1400108a8:	int3   
   1400108a9:	int3   
   1400108aa:	int3   
   1400108ab:	int3   
   1400108ac:	int3   
   1400108ad:	int3   
   1400108ae:	int3   
   1400108af:	int3   
   1400108b0:	mov    QWORD PTR [rsp+0x18],r8
   1400108b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400108ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400108bf:	mov    rax,QWORD PTR [rsp+0x10]
   1400108c4:	ret    
   1400108c5:	int3   
   1400108c6:	int3   
   1400108c7:	int3   
   1400108c8:	int3   
   1400108c9:	int3   
   1400108ca:	int3   
   1400108cb:	int3   
   1400108cc:	int3   
   1400108cd:	int3   
   1400108ce:	int3   
   1400108cf:	int3   
   1400108d0:	mov    QWORD PTR [rsp+0x18],r8
   1400108d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400108da:	mov    QWORD PTR [rsp+0x8],rcx
   1400108df:	sub    rsp,0x48
   1400108e3:	lea    rcx,[rsp+0x58]
   1400108e8:	call   0x140013bb0
   1400108ed:	mov    QWORD PTR [rsp+0x20],rax
   1400108f2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400108f7:	call   0x140012640
   1400108fc:	mov    QWORD PTR [rsp+0x30],rax
   140010901:	mov    rcx,QWORD PTR [rsp+0x20]
   140010906:	call   0x140013bd0
   14001090b:	mov    rcx,QWORD PTR [rsp+0x30]
   140010910:	mov    r9,rcx
   140010913:	mov    r8,QWORD PTR [rax]
   140010916:	mov    rdx,QWORD PTR [rsp+0x20]
   14001091b:	mov    rcx,QWORD PTR [rsp+0x50]
   140010920:	call   0x140010810
   140010925:	mov    QWORD PTR [rsp+0x28],rax
   14001092a:	mov    edx,0x1
   14001092f:	mov    rcx,QWORD PTR [rsp+0x50]
   140010934:	call   0x140013870
   140010939:	mov    rcx,QWORD PTR [rsp+0x20]
   14001093e:	call   0x140013bd0
   140010943:	mov    rcx,QWORD PTR [rsp+0x28]
   140010948:	mov    QWORD PTR [rax],rcx
   14001094b:	mov    rcx,QWORD PTR [rsp+0x28]
   140010950:	call   0x140013bd0
   140010955:	mov    rcx,QWORD PTR [rax]
   140010958:	call   0x140012640
   14001095d:	mov    rcx,QWORD PTR [rsp+0x28]
   140010962:	mov    QWORD PTR [rax],rcx
   140010965:	add    rsp,0x48
   140010969:	ret    
   14001096a:	int3   
   14001096b:	int3   
   14001096c:	int3   
   14001096d:	int3   
   14001096e:	int3   
   14001096f:	int3   
   140010970:	mov    QWORD PTR [rsp+0x20],r9
   140010975:	mov    BYTE PTR [rsp+0x18],r8b
   14001097a:	mov    QWORD PTR [rsp+0x10],rdx
   14001097f:	mov    QWORD PTR [rsp+0x8],rcx
   140010984:	sub    rsp,0x48
   140010988:	mov    rcx,QWORD PTR [rsp+0x50]
   14001098d:	call   0x1400149f0
   140010992:	dec    rax
   140010995:	mov    rcx,QWORD PTR [rsp+0x50]
   14001099a:	cmp    rax,QWORD PTR [rcx+0x8]
   14001099e:	ja     0x1400109bc
   1400109a0:	mov    rdx,QWORD PTR [rsp+0x78]
   1400109a5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400109aa:	call   0x140013540
   1400109af:	lea    rcx,[rip+0x1ca2a]        # 0x14002d3e0
   1400109b6:	call   QWORD PTR [rip+0x15884]        # 0x140026240
   1400109bc:	mov    rcx,QWORD PTR [rsp+0x70]
   1400109c1:	call   0x140012640
   1400109c6:	mov    r8,rax
   1400109c9:	mov    rdx,QWORD PTR [rsp+0x78]
   1400109ce:	mov    rcx,QWORD PTR [rsp+0x50]
   1400109d3:	call   0x1400108b0
   1400109d8:	mov    QWORD PTR [rsp+0x28],rax
   1400109dd:	mov    rax,QWORD PTR [rsp+0x50]
   1400109e2:	mov    rax,QWORD PTR [rax+0x8]
   1400109e6:	inc    rax
   1400109e9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400109ee:	mov    QWORD PTR [rcx+0x8],rax
   1400109f2:	mov    rax,QWORD PTR [rsp+0x28]
   1400109f7:	mov    rcx,QWORD PTR [rsp+0x68]
   1400109fc:	mov    QWORD PTR [rax+0x8],rcx
   140010a00:	mov    rax,QWORD PTR [rsp+0x50]
   140010a05:	mov    rax,QWORD PTR [rax]
   140010a08:	cmp    QWORD PTR [rsp+0x68],rax
   140010a0d:	jne    0x140010a47
   140010a0f:	mov    rcx,QWORD PTR [rsp+0x50]
   140010a14:	call   0x140013c10
   140010a19:	mov    rcx,QWORD PTR [rsp+0x28]
   140010a1e:	mov    QWORD PTR [rax],rcx
   140010a21:	mov    rcx,QWORD PTR [rsp+0x50]
   140010a26:	call   0x140012620
   140010a2b:	mov    rcx,QWORD PTR [rsp+0x28]
   140010a30:	mov    QWORD PTR [rax],rcx
   140010a33:	mov    rcx,QWORD PTR [rsp+0x50]
   140010a38:	call   0x140013bf0
   140010a3d:	mov    rcx,QWORD PTR [rsp+0x28]
   140010a42:	mov    QWORD PTR [rax],rcx
   140010a45:	jmp    0x140010ac2
   140010a47:	movzx  eax,BYTE PTR [rsp+0x60]
   140010a4c:	test   eax,eax
   140010a4e:	je     0x140010a8a
   140010a50:	mov    rcx,QWORD PTR [rsp+0x68]
   140010a55:	call   0x140012640
   140010a5a:	mov    rcx,QWORD PTR [rsp+0x28]
   140010a5f:	mov    QWORD PTR [rax],rcx
   140010a62:	mov    rcx,QWORD PTR [rsp+0x50]
   140010a67:	call   0x140012620
   140010a6c:	mov    rax,QWORD PTR [rax]
   140010a6f:	cmp    QWORD PTR [rsp+0x68],rax
   140010a74:	jne    0x140010a88
   140010a76:	mov    rcx,QWORD PTR [rsp+0x50]
   140010a7b:	call   0x140012620
   140010a80:	mov    rcx,QWORD PTR [rsp+0x28]
   140010a85:	mov    QWORD PTR [rax],rcx
   140010a88:	jmp    0x140010ac2
   140010a8a:	mov    rcx,QWORD PTR [rsp+0x68]
   140010a8f:	call   0x140013be0
   140010a94:	mov    rcx,QWORD PTR [rsp+0x28]
   140010a99:	mov    QWORD PTR [rax],rcx
   140010a9c:	mov    rcx,QWORD PTR [rsp+0x50]
   140010aa1:	call   0x140013bf0
   140010aa6:	mov    rax,QWORD PTR [rax]
   140010aa9:	cmp    QWORD PTR [rsp+0x68],rax
   140010aae:	jne    0x140010ac2
   140010ab0:	mov    rcx,QWORD PTR [rsp+0x50]
   140010ab5:	call   0x140013bf0
   140010aba:	mov    rcx,QWORD PTR [rsp+0x28]
   140010abf:	mov    QWORD PTR [rax],rcx
   140010ac2:	mov    rax,QWORD PTR [rsp+0x28]
   140010ac7:	mov    QWORD PTR [rsp+0x20],rax
   140010acc:	mov    rcx,QWORD PTR [rsp+0x20]
   140010ad1:	call   0x140013bd0
   140010ad6:	mov    rcx,QWORD PTR [rax]
   140010ad9:	call   0x140013530
   140010ade:	movsx  eax,BYTE PTR [rax]
   140010ae1:	test   eax,eax
   140010ae3:	jne    0x140010d6b
   140010ae9:	mov    rcx,QWORD PTR [rsp+0x20]
   140010aee:	call   0x140013bd0
   140010af3:	mov    QWORD PTR [rsp+0x30],rax
   140010af8:	mov    rcx,QWORD PTR [rsp+0x20]
   140010afd:	call   0x140013bd0
   140010b02:	mov    rcx,QWORD PTR [rax]
   140010b05:	call   0x140013bd0
   140010b0a:	mov    rcx,QWORD PTR [rax]
   140010b0d:	call   0x140012640
   140010b12:	mov    rax,QWORD PTR [rax]
   140010b15:	mov    rcx,QWORD PTR [rsp+0x30]
   140010b1a:	cmp    QWORD PTR [rcx],rax
   140010b1d:	jne    0x140010c47
   140010b23:	mov    rcx,QWORD PTR [rsp+0x20]
   140010b28:	call   0x140013bd0
   140010b2d:	mov    rcx,QWORD PTR [rax]
   140010b30:	call   0x140013bd0
   140010b35:	mov    rcx,QWORD PTR [rax]
   140010b38:	call   0x140013be0
   140010b3d:	mov    rax,QWORD PTR [rax]
   140010b40:	mov    QWORD PTR [rsp+0x68],rax
   140010b45:	mov    rcx,QWORD PTR [rsp+0x68]
   140010b4a:	call   0x140013530
   140010b4f:	movsx  eax,BYTE PTR [rax]
   140010b52:	test   eax,eax
   140010b54:	jne    0x140010bb4
   140010b56:	mov    rcx,QWORD PTR [rsp+0x20]
   140010b5b:	call   0x140013bd0
   140010b60:	mov    rcx,QWORD PTR [rax]
   140010b63:	call   0x140013530
   140010b68:	mov    BYTE PTR [rax],0x1
   140010b6b:	mov    rcx,QWORD PTR [rsp+0x68]
   140010b70:	call   0x140013530
   140010b75:	mov    BYTE PTR [rax],0x1
   140010b78:	mov    rcx,QWORD PTR [rsp+0x20]
   140010b7d:	call   0x140013bd0
   140010b82:	mov    rcx,QWORD PTR [rax]
   140010b85:	call   0x140013bd0
   140010b8a:	mov    rcx,QWORD PTR [rax]
   140010b8d:	call   0x140013530
   140010b92:	mov    BYTE PTR [rax],0x0
   140010b95:	mov    rcx,QWORD PTR [rsp+0x20]
   140010b9a:	call   0x140013bd0
   140010b9f:	mov    rcx,QWORD PTR [rax]
   140010ba2:	call   0x140013bd0
   140010ba7:	mov    rax,QWORD PTR [rax]
   140010baa:	mov    QWORD PTR [rsp+0x20],rax
   140010baf:	jmp    0x140010c42
   140010bb4:	mov    rcx,QWORD PTR [rsp+0x20]
   140010bb9:	call   0x140013bd0
   140010bbe:	mov    rcx,QWORD PTR [rax]
   140010bc1:	call   0x140013be0
   140010bc6:	mov    rax,QWORD PTR [rax]
   140010bc9:	cmp    QWORD PTR [rsp+0x20],rax
   140010bce:	jne    0x140010bf1
   140010bd0:	mov    rcx,QWORD PTR [rsp+0x20]
   140010bd5:	call   0x140013bd0
   140010bda:	mov    rax,QWORD PTR [rax]
   140010bdd:	mov    QWORD PTR [rsp+0x20],rax
   140010be2:	mov    rdx,QWORD PTR [rsp+0x20]
   140010be7:	mov    rcx,QWORD PTR [rsp+0x50]
   140010bec:	call   0x1400139f0
   140010bf1:	mov    rcx,QWORD PTR [rsp+0x20]
   140010bf6:	call   0x140013bd0
   140010bfb:	mov    rcx,QWORD PTR [rax]
   140010bfe:	call   0x140013530
   140010c03:	mov    BYTE PTR [rax],0x1
   140010c06:	mov    rcx,QWORD PTR [rsp+0x20]
   140010c0b:	call   0x140013bd0
   140010c10:	mov    rcx,QWORD PTR [rax]
   140010c13:	call   0x140013bd0
   140010c18:	mov    rcx,QWORD PTR [rax]
   140010c1b:	call   0x140013530
   140010c20:	mov    BYTE PTR [rax],0x0
   140010c23:	mov    rcx,QWORD PTR [rsp+0x20]
   140010c28:	call   0x140013bd0
   140010c2d:	mov    rcx,QWORD PTR [rax]
   140010c30:	call   0x140013bd0
   140010c35:	mov    rdx,QWORD PTR [rax]
   140010c38:	mov    rcx,QWORD PTR [rsp+0x50]
   140010c3d:	call   0x140013c30
   140010c42:	jmp    0x140010d66
   140010c47:	mov    rcx,QWORD PTR [rsp+0x20]
   140010c4c:	call   0x140013bd0
   140010c51:	mov    rcx,QWORD PTR [rax]
   140010c54:	call   0x140013bd0
   140010c59:	mov    rcx,QWORD PTR [rax]
   140010c5c:	call   0x140012640
   140010c61:	mov    rax,QWORD PTR [rax]
   140010c64:	mov    QWORD PTR [rsp+0x68],rax
   140010c69:	mov    rcx,QWORD PTR [rsp+0x68]
   140010c6e:	call   0x140013530
   140010c73:	movsx  eax,BYTE PTR [rax]
   140010c76:	test   eax,eax
   140010c78:	jne    0x140010cd8
   140010c7a:	mov    rcx,QWORD PTR [rsp+0x20]
   140010c7f:	call   0x140013bd0
   140010c84:	mov    rcx,QWORD PTR [rax]
   140010c87:	call   0x140013530
   140010c8c:	mov    BYTE PTR [rax],0x1
   140010c8f:	mov    rcx,QWORD PTR [rsp+0x68]
   140010c94:	call   0x140013530
   140010c99:	mov    BYTE PTR [rax],0x1
   140010c9c:	mov    rcx,QWORD PTR [rsp+0x20]
   140010ca1:	call   0x140013bd0
   140010ca6:	mov    rcx,QWORD PTR [rax]
   140010ca9:	call   0x140013bd0
   140010cae:	mov    rcx,QWORD PTR [rax]
   140010cb1:	call   0x140013530
   140010cb6:	mov    BYTE PTR [rax],0x0
   140010cb9:	mov    rcx,QWORD PTR [rsp+0x20]
   140010cbe:	call   0x140013bd0
   140010cc3:	mov    rcx,QWORD PTR [rax]
   140010cc6:	call   0x140013bd0
   140010ccb:	mov    rax,QWORD PTR [rax]
   140010cce:	mov    QWORD PTR [rsp+0x20],rax
   140010cd3:	jmp    0x140010d66
   140010cd8:	mov    rcx,QWORD PTR [rsp+0x20]
   140010cdd:	call   0x140013bd0
   140010ce2:	mov    rcx,QWORD PTR [rax]
   140010ce5:	call   0x140012640
   140010cea:	mov    rax,QWORD PTR [rax]
   140010ced:	cmp    QWORD PTR [rsp+0x20],rax
   140010cf2:	jne    0x140010d15
   140010cf4:	mov    rcx,QWORD PTR [rsp+0x20]
   140010cf9:	call   0x140013bd0
   140010cfe:	mov    rax,QWORD PTR [rax]
   140010d01:	mov    QWORD PTR [rsp+0x20],rax
   140010d06:	mov    rdx,QWORD PTR [rsp+0x20]
   140010d0b:	mov    rcx,QWORD PTR [rsp+0x50]
   140010d10:	call   0x140013c30
   140010d15:	mov    rcx,QWORD PTR [rsp+0x20]
   140010d1a:	call   0x140013bd0
   140010d1f:	mov    rcx,QWORD PTR [rax]
   140010d22:	call   0x140013530
   140010d27:	mov    BYTE PTR [rax],0x1
   140010d2a:	mov    rcx,QWORD PTR [rsp+0x20]
   140010d2f:	call   0x140013bd0
   140010d34:	mov    rcx,QWORD PTR [rax]
   140010d37:	call   0x140013bd0
   140010d3c:	mov    rcx,QWORD PTR [rax]
   140010d3f:	call   0x140013530
   140010d44:	mov    BYTE PTR [rax],0x0
   140010d47:	mov    rcx,QWORD PTR [rsp+0x20]
   140010d4c:	call   0x140013bd0
   140010d51:	mov    rcx,QWORD PTR [rax]
   140010d54:	call   0x140013bd0
   140010d59:	mov    rdx,QWORD PTR [rax]
   140010d5c:	mov    rcx,QWORD PTR [rsp+0x50]
   140010d61:	call   0x1400139f0
   140010d66:	jmp    0x140010acc
   140010d6b:	mov    rcx,QWORD PTR [rsp+0x50]
   140010d70:	call   0x140013c10
   140010d75:	mov    rcx,QWORD PTR [rax]
   140010d78:	call   0x140013530
   140010d7d:	mov    BYTE PTR [rax],0x1
   140010d80:	mov    r8,QWORD PTR [rsp+0x50]
   140010d85:	mov    rdx,QWORD PTR [rsp+0x28]
   140010d8a:	mov    rcx,QWORD PTR [rsp+0x58]
   140010d8f:	call   0x140012840
   140010d94:	mov    rax,QWORD PTR [rsp+0x58]
   140010d99:	add    rsp,0x48
   140010d9d:	ret    
   140010d9e:	int3   
   140010d9f:	int3   
   140010da0:	mov    QWORD PTR [rsp+0x20],r9
   140010da5:	mov    QWORD PTR [rsp+0x18],r8
   140010daa:	mov    QWORD PTR [rsp+0x10],rdx
   140010daf:	mov    QWORD PTR [rsp+0x8],rcx
   140010db4:	sub    rsp,0x1d8
   140010dbb:	mov    QWORD PTR [rsp+0x180],0xfffffffffffffffe
   140010dc7:	lea    rcx,[rsp+0x38]
   140010dcc:	call   0x140012820
   140010dd1:	mov    BYTE PTR [rsp+0x30],0x0
   140010dd6:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010dde:	call   0x140014b60
   140010de3:	test   rax,rax
   140010de6:	jne    0x140010e3c
   140010de8:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140010df0:	call   0x140012640
   140010df5:	mov    rcx,QWORD PTR [rsp+0x200]
   140010dfd:	mov    QWORD PTR [rsp+0x28],rcx
   140010e02:	mov    QWORD PTR [rsp+0x20],rax
   140010e07:	mov    rax,QWORD PTR [rsp+0x1e0]
   140010e0f:	mov    r9,QWORD PTR [rax]
   140010e12:	mov    r8b,0x1
   140010e15:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140010e1d:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010e25:	call   0x140010970
   140010e2a:	mov    rax,QWORD PTR [rsp+0x1e8]
   140010e32:	jmp    0x140011b1a
   140010e37:	jmp    0x140011aca
   140010e3c:	xor    eax,eax
   140010e3e:	test   eax,eax
   140010e40:	je     0x140011492
   140010e46:	lea    rdx,[rsp+0x190]
   140010e4e:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010e56:	call   0x140013ea0
   140010e5b:	mov    rdx,rax
   140010e5e:	lea    rcx,[rsp+0x1f0]
   140010e66:	call   0x140012c30
   140010e6b:	movzx  eax,al
   140010e6e:	test   eax,eax
   140010e70:	je     0x140010f57
   140010e76:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140010e7e:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010e86:	call   0x140013910
   140010e8b:	mov    QWORD PTR [rsp+0xd0],rax
   140010e93:	lea    rcx,[rsp+0x1f0]
   140010e9b:	call   0x140013bb0
   140010ea0:	mov    rdx,rax
   140010ea3:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010eab:	call   0x1400138e0
   140010eb0:	mov    QWORD PTR [rsp+0x60],rax
   140010eb5:	lea    rdx,[rsp+0x48]
   140010eba:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010ec2:	call   0x140012c20
   140010ec7:	mov    rcx,QWORD PTR [rsp+0xd0]
   140010ecf:	mov    r8,rcx
   140010ed2:	mov    rcx,QWORD PTR [rsp+0x60]
   140010ed7:	mov    rdx,rcx
   140010eda:	mov    rcx,rax
   140010edd:	call   0x1400131c0
   140010ee2:	movzx  eax,al
   140010ee5:	test   eax,eax
   140010ee7:	jne    0x140010f4d
   140010ee9:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140010ef1:	call   0x140012640
   140010ef6:	mov    QWORD PTR [rsp+0x110],rax
   140010efe:	lea    rcx,[rsp+0x1f0]
   140010f06:	call   0x140013bb0
   140010f0b:	mov    rcx,QWORD PTR [rsp+0x200]
   140010f13:	mov    QWORD PTR [rsp+0x28],rcx
   140010f18:	mov    rcx,QWORD PTR [rsp+0x110]
   140010f20:	mov    QWORD PTR [rsp+0x20],rcx
   140010f25:	mov    r9,rax
   140010f28:	mov    r8b,0x1
   140010f2b:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140010f33:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010f3b:	call   0x140010970
   140010f40:	mov    rax,QWORD PTR [rsp+0x1e8]
   140010f48:	jmp    0x140011b1a
   140010f4d:	mov    BYTE PTR [rsp+0x30],0x1
   140010f52:	jmp    0x14001148d
   140010f57:	lea    rdx,[rsp+0x1b0]
   140010f5f:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010f67:	call   0x140014060
   140010f6c:	mov    rdx,rax
   140010f6f:	lea    rcx,[rsp+0x1f0]
   140010f77:	call   0x140012c30
   140010f7c:	movzx  eax,al
   140010f7f:	test   eax,eax
   140010f81:	je     0x140011063
   140010f87:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010f8f:	call   0x140013bf0
   140010f94:	mov    rdx,QWORD PTR [rax]
   140010f97:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010f9f:	call   0x1400138e0
   140010fa4:	mov    QWORD PTR [rsp+0x70],rax
   140010fa9:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140010fb1:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010fb9:	call   0x140013910
   140010fbe:	mov    QWORD PTR [rsp+0x148],rax
   140010fc6:	lea    rdx,[rsp+0x4b]
   140010fcb:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140010fd3:	call   0x140012c20
   140010fd8:	mov    rcx,QWORD PTR [rsp+0x70]
   140010fdd:	mov    r8,rcx
   140010fe0:	mov    rcx,QWORD PTR [rsp+0x148]
   140010fe8:	mov    rdx,rcx
   140010feb:	mov    rcx,rax
   140010fee:	call   0x1400131c0
   140010ff3:	movzx  eax,al
   140010ff6:	test   eax,eax
   140010ff8:	jne    0x14001105e
   140010ffa:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140011002:	call   0x140012640
   140011007:	mov    QWORD PTR [rsp+0x80],rax
   14001100f:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011017:	call   0x140013bf0
   14001101c:	mov    rcx,QWORD PTR [rsp+0x200]
   140011024:	mov    QWORD PTR [rsp+0x28],rcx
   140011029:	mov    rcx,QWORD PTR [rsp+0x80]
   140011031:	mov    QWORD PTR [rsp+0x20],rcx
   140011036:	mov    r9,QWORD PTR [rax]
   140011039:	xor    r8d,r8d
   14001103c:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140011044:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14001104c:	call   0x140010970
   140011051:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011059:	jmp    0x140011b1a
   14001105e:	jmp    0x14001148d
   140011063:	mov    rdx,QWORD PTR [rsp+0x1f8]
   14001106b:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011073:	call   0x140013910
   140011078:	mov    QWORD PTR [rsp+0x120],rax
   140011080:	lea    rcx,[rsp+0x1f0]
   140011088:	call   0x140013bb0
   14001108d:	mov    rdx,rax
   140011090:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011098:	call   0x1400138e0
   14001109d:	mov    QWORD PTR [rsp+0x90],rax
   1400110a5:	lea    rdx,[rsp+0x42]
   1400110aa:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400110b2:	call   0x140012c20
   1400110b7:	mov    rcx,QWORD PTR [rsp+0x120]
   1400110bf:	mov    r8,rcx
   1400110c2:	mov    rcx,QWORD PTR [rsp+0x90]
   1400110ca:	mov    rdx,rcx
   1400110cd:	mov    rcx,rax
   1400110d0:	call   0x1400131c0
   1400110d5:	movzx  eax,al
   1400110d8:	test   eax,eax
   1400110da:	jne    0x14001125c
   1400110e0:	mov    rax,QWORD PTR [rsp+0x1f0]
   1400110e8:	mov    QWORD PTR [rsp+0x38],rax
   1400110ed:	lea    rcx,[rsp+0x38]
   1400110f2:	call   0x140013010
   1400110f7:	mov    rcx,rax
   1400110fa:	call   0x140013bb0
   1400110ff:	mov    rdx,rax
   140011102:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14001110a:	call   0x1400138e0
   14001110f:	mov    QWORD PTR [rsp+0x158],rax
   140011117:	mov    rdx,QWORD PTR [rsp+0x1f8]
   14001111f:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011127:	call   0x140013910
   14001112c:	mov    QWORD PTR [rsp+0xa0],rax
   140011134:	lea    rdx,[rsp+0x4a]
   140011139:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011141:	call   0x140012c20
   140011146:	mov    rcx,QWORD PTR [rsp+0x158]
   14001114e:	mov    r8,rcx
   140011151:	mov    rcx,QWORD PTR [rsp+0xa0]
   140011159:	mov    rdx,rcx
   14001115c:	mov    rcx,rax
   14001115f:	call   0x1400131c0
   140011164:	movzx  eax,al
   140011167:	test   eax,eax
   140011169:	jne    0x14001125c
   14001116f:	lea    rcx,[rsp+0x38]
   140011174:	call   0x140013bb0
   140011179:	mov    rcx,rax
   14001117c:	call   0x140013be0
   140011181:	mov    rcx,QWORD PTR [rax]
   140011184:	call   0x1400138d0
   140011189:	movsx  eax,BYTE PTR [rax]
   14001118c:	test   eax,eax
   14001118e:	je     0x1400111f3
   140011190:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140011198:	call   0x140012640
   14001119d:	mov    QWORD PTR [rsp+0x130],rax
   1400111a5:	lea    rcx,[rsp+0x38]
   1400111aa:	call   0x140013bb0
   1400111af:	mov    rcx,QWORD PTR [rsp+0x200]
   1400111b7:	mov    QWORD PTR [rsp+0x28],rcx
   1400111bc:	mov    rcx,QWORD PTR [rsp+0x130]
   1400111c4:	mov    QWORD PTR [rsp+0x20],rcx
   1400111c9:	mov    r9,rax
   1400111cc:	xor    r8d,r8d
   1400111cf:	mov    rdx,QWORD PTR [rsp+0x1e8]
   1400111d7:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400111df:	call   0x140010970
   1400111e4:	mov    rax,QWORD PTR [rsp+0x1e8]
   1400111ec:	jmp    0x140011b1a
   1400111f1:	jmp    0x140011257
   1400111f3:	mov    rcx,QWORD PTR [rsp+0x1f8]
   1400111fb:	call   0x140012640
   140011200:	mov    QWORD PTR [rsp+0xb0],rax
   140011208:	lea    rcx,[rsp+0x1f0]
   140011210:	call   0x140013bb0
   140011215:	mov    rcx,QWORD PTR [rsp+0x200]
   14001121d:	mov    QWORD PTR [rsp+0x28],rcx
   140011222:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001122a:	mov    QWORD PTR [rsp+0x20],rcx
   14001122f:	mov    r9,rax
   140011232:	mov    r8b,0x1
   140011235:	mov    rdx,QWORD PTR [rsp+0x1e8]
   14001123d:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011245:	call   0x140010970
   14001124a:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011252:	jmp    0x140011b1a
   140011257:	jmp    0x14001148d
   14001125c:	lea    rcx,[rsp+0x1f0]
   140011264:	call   0x140013bb0
   140011269:	mov    rdx,rax
   14001126c:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011274:	call   0x1400138e0
   140011279:	mov    QWORD PTR [rsp+0x168],rax
   140011281:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140011289:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011291:	call   0x140013910
   140011296:	mov    QWORD PTR [rsp+0xc0],rax
   14001129e:	lea    rdx,[rsp+0x44]
   1400112a3:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400112ab:	call   0x140012c20
   1400112b0:	mov    rcx,QWORD PTR [rsp+0x168]
   1400112b8:	mov    r8,rcx
   1400112bb:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400112c3:	mov    rdx,rcx
   1400112c6:	mov    rcx,rax
   1400112c9:	call   0x1400131c0
   1400112ce:	movzx  eax,al
   1400112d1:	test   eax,eax
   1400112d3:	jne    0x140011488
   1400112d9:	mov    rax,QWORD PTR [rsp+0x1f0]
   1400112e1:	mov    QWORD PTR [rsp+0x38],rax
   1400112e6:	lea    rdx,[rsp+0x1a0]
   1400112ee:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400112f6:	call   0x140014060
   1400112fb:	mov    QWORD PTR [rsp+0x140],rax
   140011303:	lea    rcx,[rsp+0x38]
   140011308:	call   0x140012ec0
   14001130d:	mov    rcx,QWORD PTR [rsp+0x140]
   140011315:	mov    rdx,rcx
   140011318:	mov    rcx,rax
   14001131b:	call   0x140012c30
   140011320:	movzx  eax,al
   140011323:	test   eax,eax
   140011325:	jne    0x14001139b
   140011327:	mov    rdx,QWORD PTR [rsp+0x1f8]
   14001132f:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011337:	call   0x140013910
   14001133c:	mov    QWORD PTR [rsp+0x50],rax
   140011341:	lea    rcx,[rsp+0x38]
   140011346:	call   0x140013bb0
   14001134b:	mov    rdx,rax
   14001134e:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011356:	call   0x1400138e0
   14001135b:	mov    QWORD PTR [rsp+0x178],rax
   140011363:	lea    rdx,[rsp+0x40]
   140011368:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011370:	call   0x140012c20
   140011375:	mov    rcx,QWORD PTR [rsp+0x50]
   14001137a:	mov    r8,rcx
   14001137d:	mov    rcx,QWORD PTR [rsp+0x178]
   140011385:	mov    rdx,rcx
   140011388:	mov    rcx,rax
   14001138b:	call   0x1400131c0
   140011390:	movzx  eax,al
   140011393:	test   eax,eax
   140011395:	jne    0x140011488
   14001139b:	lea    rcx,[rsp+0x1f0]
   1400113a3:	call   0x140013bb0
   1400113a8:	mov    rcx,rax
   1400113ab:	call   0x140013be0
   1400113b0:	mov    rcx,QWORD PTR [rax]
   1400113b3:	call   0x1400138d0
   1400113b8:	movsx  eax,BYTE PTR [rax]
   1400113bb:	test   eax,eax
   1400113bd:	je     0x140011425
   1400113bf:	mov    rcx,QWORD PTR [rsp+0x1f8]
   1400113c7:	call   0x140012640
   1400113cc:	mov    QWORD PTR [rsp+0xe0],rax
   1400113d4:	lea    rcx,[rsp+0x1f0]
   1400113dc:	call   0x140013bb0
   1400113e1:	mov    rcx,QWORD PTR [rsp+0x200]
   1400113e9:	mov    QWORD PTR [rsp+0x28],rcx
   1400113ee:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400113f6:	mov    QWORD PTR [rsp+0x20],rcx
   1400113fb:	mov    r9,rax
   1400113fe:	xor    r8d,r8d
   140011401:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140011409:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011411:	call   0x140010970
   140011416:	mov    rax,QWORD PTR [rsp+0x1e8]
   14001141e:	jmp    0x140011b1a
   140011423:	jmp    0x140011486
   140011425:	mov    rcx,QWORD PTR [rsp+0x1f8]
   14001142d:	call   0x140012640
   140011432:	mov    QWORD PTR [rsp+0x150],rax
   14001143a:	lea    rcx,[rsp+0x38]
   14001143f:	call   0x140013bb0
   140011444:	mov    rcx,QWORD PTR [rsp+0x200]
   14001144c:	mov    QWORD PTR [rsp+0x28],rcx
   140011451:	mov    rcx,QWORD PTR [rsp+0x150]
   140011459:	mov    QWORD PTR [rsp+0x20],rcx
   14001145e:	mov    r9,rax
   140011461:	mov    r8b,0x1
   140011464:	mov    rdx,QWORD PTR [rsp+0x1e8]
   14001146c:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011474:	call   0x140010970
   140011479:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011481:	jmp    0x140011b1a
   140011486:	jmp    0x14001148d
   140011488:	mov    BYTE PTR [rsp+0x30],0x1
   14001148d:	jmp    0x140011aca
   140011492:	lea    rdx,[rsp+0x188]
   14001149a:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400114a2:	call   0x140013ea0
   1400114a7:	mov    rdx,rax
   1400114aa:	lea    rcx,[rsp+0x1f0]
   1400114b2:	call   0x140012c30
   1400114b7:	movzx  eax,al
   1400114ba:	test   eax,eax
   1400114bc:	je     0x1400115a4
   1400114c2:	lea    rcx,[rsp+0x1f0]
   1400114ca:	call   0x140013bb0
   1400114cf:	mov    rdx,rax
   1400114d2:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400114da:	call   0x1400138e0
   1400114df:	mov    QWORD PTR [rsp+0xf0],rax
   1400114e7:	mov    rdx,QWORD PTR [rsp+0x1f8]
   1400114ef:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400114f7:	call   0x140013910
   1400114fc:	mov    QWORD PTR [rsp+0x170],rax
   140011504:	lea    rdx,[rsp+0x46]
   140011509:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011511:	call   0x140012c20
   140011516:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001151e:	mov    r8,rcx
   140011521:	mov    rcx,QWORD PTR [rsp+0x170]
   140011529:	mov    rdx,rcx
   14001152c:	mov    rcx,rax
   14001152f:	call   0x1400131c0
   140011534:	movzx  eax,al
   140011537:	test   eax,eax
   140011539:	je     0x14001159f
   14001153b:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140011543:	call   0x140012640
   140011548:	mov    QWORD PTR [rsp+0x100],rax
   140011550:	lea    rcx,[rsp+0x1f0]
   140011558:	call   0x140013bb0
   14001155d:	mov    rcx,QWORD PTR [rsp+0x200]
   140011565:	mov    QWORD PTR [rsp+0x28],rcx
   14001156a:	mov    rcx,QWORD PTR [rsp+0x100]
   140011572:	mov    QWORD PTR [rsp+0x20],rcx
   140011577:	mov    r9,rax
   14001157a:	mov    r8b,0x1
   14001157d:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140011585:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14001158d:	call   0x140010970
   140011592:	mov    rax,QWORD PTR [rsp+0x1e8]
   14001159a:	jmp    0x140011b1a
   14001159f:	jmp    0x140011aca
   1400115a4:	lea    rdx,[rsp+0x198]
   1400115ac:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400115b4:	call   0x140014060
   1400115b9:	mov    rdx,rax
   1400115bc:	lea    rcx,[rsp+0x1f0]
   1400115c4:	call   0x140012c30
   1400115c9:	movzx  eax,al
   1400115cc:	test   eax,eax
   1400115ce:	je     0x1400116aa
   1400115d4:	mov    rdx,QWORD PTR [rsp+0x1f8]
   1400115dc:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400115e4:	call   0x140013910
   1400115e9:	mov    QWORD PTR [rsp+0x160],rax
   1400115f1:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400115f9:	call   0x140013bf0
   1400115fe:	mov    rdx,QWORD PTR [rax]
   140011601:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011609:	call   0x1400138e0
   14001160e:	mov    QWORD PTR [rsp+0x58],rax
   140011613:	lea    rdx,[rsp+0x41]
   140011618:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011620:	call   0x140012c20
   140011625:	mov    rcx,QWORD PTR [rsp+0x160]
   14001162d:	mov    r8,rcx
   140011630:	mov    rcx,QWORD PTR [rsp+0x58]
   140011635:	mov    rdx,rcx
   140011638:	mov    rcx,rax
   14001163b:	call   0x1400131c0
   140011640:	movzx  eax,al
   140011643:	test   eax,eax
   140011645:	je     0x1400116a5
   140011647:	mov    rcx,QWORD PTR [rsp+0x1f8]
   14001164f:	call   0x140012640
   140011654:	mov    QWORD PTR [rsp+0x68],rax
   140011659:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011661:	call   0x140013bf0
   140011666:	mov    rcx,QWORD PTR [rsp+0x200]
   14001166e:	mov    QWORD PTR [rsp+0x28],rcx
   140011673:	mov    rcx,QWORD PTR [rsp+0x68]
   140011678:	mov    QWORD PTR [rsp+0x20],rcx
   14001167d:	mov    r9,QWORD PTR [rax]
   140011680:	xor    r8d,r8d
   140011683:	mov    rdx,QWORD PTR [rsp+0x1e8]
   14001168b:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011693:	call   0x140010970
   140011698:	mov    rax,QWORD PTR [rsp+0x1e8]
   1400116a0:	jmp    0x140011b1a
   1400116a5:	jmp    0x140011aca
   1400116aa:	lea    rcx,[rsp+0x1f0]
   1400116b2:	call   0x140013bb0
   1400116b7:	mov    rdx,rax
   1400116ba:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400116c2:	call   0x1400138e0
   1400116c7:	mov    QWORD PTR [rsp+0x78],rax
   1400116cc:	mov    rdx,QWORD PTR [rsp+0x1f8]
   1400116d4:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400116dc:	call   0x140013910
   1400116e1:	mov    QWORD PTR [rsp+0x88],rax
   1400116e9:	lea    rdx,[rsp+0x43]
   1400116ee:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400116f6:	call   0x140012c20
   1400116fb:	mov    rcx,QWORD PTR [rsp+0x78]
   140011700:	mov    r8,rcx
   140011703:	mov    rcx,QWORD PTR [rsp+0x88]
   14001170b:	mov    rdx,rcx
   14001170e:	mov    rcx,rax
   140011711:	call   0x1400131c0
   140011716:	movzx  eax,al
   140011719:	test   eax,eax
   14001171b:	je     0x14001189d
   140011721:	mov    rax,QWORD PTR [rsp+0x1f0]
   140011729:	mov    QWORD PTR [rsp+0x38],rax
   14001172e:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140011736:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14001173e:	call   0x140013910
   140011743:	mov    QWORD PTR [rsp+0x98],rax
   14001174b:	lea    rcx,[rsp+0x38]
   140011750:	call   0x140013010
   140011755:	mov    rcx,rax
   140011758:	call   0x140013bb0
   14001175d:	mov    rdx,rax
   140011760:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011768:	call   0x1400138e0
   14001176d:	mov    QWORD PTR [rsp+0xa8],rax
   140011775:	lea    rdx,[rsp+0x45]
   14001177a:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011782:	call   0x140012c20
   140011787:	mov    rcx,QWORD PTR [rsp+0x98]
   14001178f:	mov    r8,rcx
   140011792:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001179a:	mov    rdx,rcx
   14001179d:	mov    rcx,rax
   1400117a0:	call   0x1400131c0
   1400117a5:	movzx  eax,al
   1400117a8:	test   eax,eax
   1400117aa:	je     0x14001189d
   1400117b0:	lea    rcx,[rsp+0x38]
   1400117b5:	call   0x140013bb0
   1400117ba:	mov    rcx,rax
   1400117bd:	call   0x140013be0
   1400117c2:	mov    rcx,QWORD PTR [rax]
   1400117c5:	call   0x1400138d0
   1400117ca:	movsx  eax,BYTE PTR [rax]
   1400117cd:	test   eax,eax
   1400117cf:	je     0x140011834
   1400117d1:	mov    rcx,QWORD PTR [rsp+0x1f8]
   1400117d9:	call   0x140012640
   1400117de:	mov    QWORD PTR [rsp+0xb8],rax
   1400117e6:	lea    rcx,[rsp+0x38]
   1400117eb:	call   0x140013bb0
   1400117f0:	mov    rcx,QWORD PTR [rsp+0x200]
   1400117f8:	mov    QWORD PTR [rsp+0x28],rcx
   1400117fd:	mov    rcx,QWORD PTR [rsp+0xb8]
   140011805:	mov    QWORD PTR [rsp+0x20],rcx
   14001180a:	mov    r9,rax
   14001180d:	xor    r8d,r8d
   140011810:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140011818:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011820:	call   0x140010970
   140011825:	mov    rax,QWORD PTR [rsp+0x1e8]
   14001182d:	jmp    0x140011b1a
   140011832:	jmp    0x140011898
   140011834:	mov    rcx,QWORD PTR [rsp+0x1f8]
   14001183c:	call   0x140012640
   140011841:	mov    QWORD PTR [rsp+0xc8],rax
   140011849:	lea    rcx,[rsp+0x1f0]
   140011851:	call   0x140013bb0
   140011856:	mov    rcx,QWORD PTR [rsp+0x200]
   14001185e:	mov    QWORD PTR [rsp+0x28],rcx
   140011863:	mov    rcx,QWORD PTR [rsp+0xc8]
   14001186b:	mov    QWORD PTR [rsp+0x20],rcx
   140011870:	mov    r9,rax
   140011873:	mov    r8b,0x1
   140011876:	mov    rdx,QWORD PTR [rsp+0x1e8]
   14001187e:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011886:	call   0x140010970
   14001188b:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011893:	jmp    0x140011b1a
   140011898:	jmp    0x140011aca
   14001189d:	mov    rdx,QWORD PTR [rsp+0x1f8]
   1400118a5:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400118ad:	call   0x140013910
   1400118b2:	mov    QWORD PTR [rsp+0xd8],rax
   1400118ba:	lea    rcx,[rsp+0x1f0]
   1400118c2:	call   0x140013bb0
   1400118c7:	mov    rdx,rax
   1400118ca:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400118d2:	call   0x1400138e0
   1400118d7:	mov    QWORD PTR [rsp+0xe8],rax
   1400118df:	lea    rdx,[rsp+0x47]
   1400118e4:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400118ec:	call   0x140012c20
   1400118f1:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400118f9:	mov    r8,rcx
   1400118fc:	mov    rcx,QWORD PTR [rsp+0xe8]
   140011904:	mov    rdx,rcx
   140011907:	mov    rcx,rax
   14001190a:	call   0x1400131c0
   14001190f:	movzx  eax,al
   140011912:	test   eax,eax
   140011914:	je     0x140011aca
   14001191a:	mov    rax,QWORD PTR [rsp+0x1f0]
   140011922:	mov    QWORD PTR [rsp+0x38],rax
   140011927:	lea    rdx,[rsp+0x1a8]
   14001192f:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011937:	call   0x140014060
   14001193c:	mov    QWORD PTR [rsp+0xf8],rax
   140011944:	lea    rcx,[rsp+0x38]
   140011949:	call   0x140012ec0
   14001194e:	mov    rcx,QWORD PTR [rsp+0xf8]
   140011956:	mov    rdx,rcx
   140011959:	mov    rcx,rax
   14001195c:	call   0x140012c30
   140011961:	movzx  eax,al
   140011964:	test   eax,eax
   140011966:	jne    0x1400119e2
   140011968:	lea    rcx,[rsp+0x38]
   14001196d:	call   0x140013bb0
   140011972:	mov    rdx,rax
   140011975:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14001197d:	call   0x1400138e0
   140011982:	mov    QWORD PTR [rsp+0x108],rax
   14001198a:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140011992:	mov    rcx,QWORD PTR [rsp+0x1e0]
   14001199a:	call   0x140013910
   14001199f:	mov    QWORD PTR [rsp+0x118],rax
   1400119a7:	lea    rdx,[rsp+0x49]
   1400119ac:	mov    rcx,QWORD PTR [rsp+0x1e0]
   1400119b4:	call   0x140012c20
   1400119b9:	mov    rcx,QWORD PTR [rsp+0x108]
   1400119c1:	mov    r8,rcx
   1400119c4:	mov    rcx,QWORD PTR [rsp+0x118]
   1400119cc:	mov    rdx,rcx
   1400119cf:	mov    rcx,rax
   1400119d2:	call   0x1400131c0
   1400119d7:	movzx  eax,al
   1400119da:	test   eax,eax
   1400119dc:	je     0x140011aca
   1400119e2:	lea    rcx,[rsp+0x1f0]
   1400119ea:	call   0x140013bb0
   1400119ef:	mov    rcx,rax
   1400119f2:	call   0x140013be0
   1400119f7:	mov    rcx,QWORD PTR [rax]
   1400119fa:	call   0x1400138d0
   1400119ff:	movsx  eax,BYTE PTR [rax]
   140011a02:	test   eax,eax
   140011a04:	je     0x140011a6c
   140011a06:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140011a0e:	call   0x140012640
   140011a13:	mov    QWORD PTR [rsp+0x128],rax
   140011a1b:	lea    rcx,[rsp+0x1f0]
   140011a23:	call   0x140013bb0
   140011a28:	mov    rcx,QWORD PTR [rsp+0x200]
   140011a30:	mov    QWORD PTR [rsp+0x28],rcx
   140011a35:	mov    rcx,QWORD PTR [rsp+0x128]
   140011a3d:	mov    QWORD PTR [rsp+0x20],rcx
   140011a42:	mov    r9,rax
   140011a45:	xor    r8d,r8d
   140011a48:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140011a50:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011a58:	call   0x140010970
   140011a5d:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011a65:	jmp    0x140011b1a
   140011a6a:	jmp    0x140011aca
   140011a6c:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140011a74:	call   0x140012640
   140011a79:	mov    QWORD PTR [rsp+0x138],rax
   140011a81:	lea    rcx,[rsp+0x38]
   140011a86:	call   0x140013bb0
   140011a8b:	mov    rcx,QWORD PTR [rsp+0x200]
   140011a93:	mov    QWORD PTR [rsp+0x28],rcx
   140011a98:	mov    rcx,QWORD PTR [rsp+0x138]
   140011aa0:	mov    QWORD PTR [rsp+0x20],rcx
   140011aa5:	mov    r9,rax
   140011aa8:	mov    r8b,0x1
   140011aab:	mov    rdx,QWORD PTR [rsp+0x1e8]
   140011ab3:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011abb:	call   0x140010970
   140011ac0:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011ac8:	jmp    0x140011b1a
   140011aca:	jmp    0x140011acc
   140011acc:	mov    rcx,QWORD PTR [rsp+0x1f8]
   140011ad4:	call   0x140012640
   140011ad9:	mov    rcx,QWORD PTR [rsp+0x200]
   140011ae1:	mov    QWORD PTR [rsp+0x20],rcx
   140011ae6:	mov    r9,rax
   140011ae9:	movzx  r8d,BYTE PTR [rsp+0x30]
   140011aef:	lea    rdx,[rsp+0x1b8]
   140011af7:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011aff:	call   0x140011b30
   140011b04:	mov    rax,QWORD PTR [rax]
   140011b07:	mov    rcx,QWORD PTR [rsp+0x1e8]
   140011b0f:	mov    QWORD PTR [rcx],rax
   140011b12:	mov    rax,QWORD PTR [rsp+0x1e8]
   140011b1a:	add    rsp,0x1d8
   140011b21:	ret    
   140011b22:	int3   
   140011b23:	int3   
   140011b24:	int3   
   140011b25:	int3   
   140011b26:	int3   
   140011b27:	int3   
   140011b28:	int3   
   140011b29:	int3   
   140011b2a:	int3   
   140011b2b:	int3   
   140011b2c:	int3   
   140011b2d:	int3   
   140011b2e:	int3   
   140011b2f:	int3   
   140011b30:	mov    QWORD PTR [rsp+0x20],r9
   140011b35:	mov    BYTE PTR [rsp+0x18],r8b
   140011b3a:	mov    QWORD PTR [rsp+0x10],rdx
   140011b3f:	mov    QWORD PTR [rsp+0x8],rcx
   140011b44:	sub    rsp,0xc8
   140011b4b:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   140011b57:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011b5f:	call   0x140013c10
   140011b64:	mov    rax,QWORD PTR [rax]
   140011b67:	mov    QWORD PTR [rsp+0x38],rax
   140011b6c:	mov    rax,QWORD PTR [rsp+0xd0]
   140011b74:	mov    rax,QWORD PTR [rax]
   140011b77:	mov    QWORD PTR [rsp+0x48],rax
   140011b7c:	mov    BYTE PTR [rsp+0x30],0x1
   140011b81:	mov    rcx,QWORD PTR [rsp+0x38]
   140011b86:	call   0x1400138d0
   140011b8b:	movsx  eax,BYTE PTR [rax]
   140011b8e:	test   eax,eax
   140011b90:	jne    0x140011cd8
   140011b96:	mov    rax,QWORD PTR [rsp+0x38]
   140011b9b:	mov    QWORD PTR [rsp+0x48],rax
   140011ba0:	movzx  eax,BYTE PTR [rsp+0xe0]
   140011ba8:	test   eax,eax
   140011baa:	je     0x140011c35
   140011bb0:	mov    rdx,QWORD PTR [rsp+0xe8]
   140011bb8:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011bc0:	call   0x140013910
   140011bc5:	mov    QWORD PTR [rsp+0x78],rax
   140011bca:	mov    rdx,QWORD PTR [rsp+0x38]
   140011bcf:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011bd7:	call   0x1400138e0
   140011bdc:	mov    QWORD PTR [rsp+0x88],rax
   140011be4:	lea    rdx,[rsp+0x35]
   140011be9:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011bf1:	call   0x140012c20
   140011bf6:	mov    rcx,QWORD PTR [rsp+0x78]
   140011bfb:	mov    r8,rcx
   140011bfe:	mov    rcx,QWORD PTR [rsp+0x88]
   140011c06:	mov    rdx,rcx
   140011c09:	mov    rcx,rax
   140011c0c:	call   0x1400131c0
   140011c11:	movzx  eax,al
   140011c14:	test   eax,eax
   140011c16:	jne    0x140011c22
   140011c18:	mov    DWORD PTR [rsp+0x44],0x1
   140011c20:	jmp    0x140011c2a
   140011c22:	mov    DWORD PTR [rsp+0x44],0x0
   140011c2a:	movzx  eax,BYTE PTR [rsp+0x44]
   140011c2f:	mov    BYTE PTR [rsp+0x30],al
   140011c33:	jmp    0x140011c9a
   140011c35:	mov    rdx,QWORD PTR [rsp+0x38]
   140011c3a:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011c42:	call   0x1400138e0
   140011c47:	mov    QWORD PTR [rsp+0x80],rax
   140011c4f:	mov    rdx,QWORD PTR [rsp+0xe8]
   140011c57:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011c5f:	call   0x140013910
   140011c64:	mov    QWORD PTR [rsp+0x70],rax
   140011c69:	lea    rdx,[rsp+0x40]
   140011c6e:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011c76:	call   0x140012c20
   140011c7b:	mov    rcx,QWORD PTR [rsp+0x80]
   140011c83:	mov    r8,rcx
   140011c86:	mov    rcx,QWORD PTR [rsp+0x70]
   140011c8b:	mov    rdx,rcx
   140011c8e:	mov    rcx,rax
   140011c91:	call   0x1400131c0
   140011c96:	mov    BYTE PTR [rsp+0x30],al
   140011c9a:	movzx  eax,BYTE PTR [rsp+0x30]
   140011c9f:	test   eax,eax
   140011ca1:	je     0x140011cb7
   140011ca3:	mov    rcx,QWORD PTR [rsp+0x38]
   140011ca8:	call   0x140012640
   140011cad:	mov    rax,QWORD PTR [rax]
   140011cb0:	mov    QWORD PTR [rsp+0x58],rax
   140011cb5:	jmp    0x140011cc9
   140011cb7:	mov    rcx,QWORD PTR [rsp+0x38]
   140011cbc:	call   0x140013be0
   140011cc1:	mov    rax,QWORD PTR [rax]
   140011cc4:	mov    QWORD PTR [rsp+0x58],rax
   140011cc9:	mov    rax,QWORD PTR [rsp+0x58]
   140011cce:	mov    QWORD PTR [rsp+0x38],rax
   140011cd3:	jmp    0x140011b81
   140011cd8:	xor    eax,eax
   140011cda:	test   eax,eax
   140011cdc:	je     0x140011d49
   140011cde:	mov    BYTE PTR [rsp+0x33],0x1
   140011ce3:	mov    rcx,QWORD PTR [rsp+0xe8]
   140011ceb:	call   0x140012640
   140011cf0:	mov    rcx,QWORD PTR [rsp+0xf0]
   140011cf8:	mov    QWORD PTR [rsp+0x28],rcx
   140011cfd:	mov    QWORD PTR [rsp+0x20],rax
   140011d02:	mov    r9,QWORD PTR [rsp+0x48]
   140011d07:	movzx  r8d,BYTE PTR [rsp+0x30]
   140011d0d:	lea    rdx,[rsp+0xa8]
   140011d15:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011d1d:	call   0x140010970
   140011d22:	lea    r8,[rsp+0x33]
   140011d27:	mov    rdx,rax
   140011d2a:	mov    rcx,QWORD PTR [rsp+0xd8]
   140011d32:	call   0x1400105b0
   140011d37:	mov    rax,QWORD PTR [rsp+0xd8]
   140011d3f:	jmp    0x140011f12
   140011d44:	jmp    0x140011f10
   140011d49:	mov    r8,QWORD PTR [rsp+0xd0]
   140011d51:	mov    rdx,QWORD PTR [rsp+0x48]
   140011d56:	lea    rcx,[rsp+0x50]
   140011d5b:	call   0x140012840
   140011d60:	movzx  eax,BYTE PTR [rsp+0x30]
   140011d65:	test   eax,eax
   140011d67:	jne    0x140011d6e
   140011d69:	jmp    0x140011e06
   140011d6e:	lea    rdx,[rsp+0x98]
   140011d76:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011d7e:	call   0x140013ea0
   140011d83:	mov    rdx,rax
   140011d86:	lea    rcx,[rsp+0x50]
   140011d8b:	call   0x140012c30
   140011d90:	movzx  eax,al
   140011d93:	test   eax,eax
   140011d95:	je     0x140011dfc
   140011d97:	mov    BYTE PTR [rsp+0x31],0x1
   140011d9c:	mov    rcx,QWORD PTR [rsp+0xe8]
   140011da4:	call   0x140012640
   140011da9:	mov    rcx,QWORD PTR [rsp+0xf0]
   140011db1:	mov    QWORD PTR [rsp+0x28],rcx
   140011db6:	mov    QWORD PTR [rsp+0x20],rax
   140011dbb:	mov    r9,QWORD PTR [rsp+0x48]
   140011dc0:	mov    r8b,0x1
   140011dc3:	lea    rdx,[rsp+0xa0]
   140011dcb:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011dd3:	call   0x140010970
   140011dd8:	lea    r8,[rsp+0x31]
   140011ddd:	mov    rdx,rax
   140011de0:	mov    rcx,QWORD PTR [rsp+0xd8]
   140011de8:	call   0x1400105b0
   140011ded:	mov    rax,QWORD PTR [rsp+0xd8]
   140011df5:	jmp    0x140011f12
   140011dfa:	jmp    0x140011e06
   140011dfc:	lea    rcx,[rsp+0x50]
   140011e01:	call   0x140013030
   140011e06:	mov    rdx,QWORD PTR [rsp+0xe8]
   140011e0e:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011e16:	call   0x140013910
   140011e1b:	mov    QWORD PTR [rsp+0x60],rax
   140011e20:	lea    rcx,[rsp+0x50]
   140011e25:	call   0x140013bb0
   140011e2a:	mov    rdx,rax
   140011e2d:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011e35:	call   0x1400138e0
   140011e3a:	mov    QWORD PTR [rsp+0x68],rax
   140011e3f:	lea    rdx,[rsp+0x36]
   140011e44:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011e4c:	call   0x140012c20
   140011e51:	mov    rcx,QWORD PTR [rsp+0x60]
   140011e56:	mov    r8,rcx
   140011e59:	mov    rcx,QWORD PTR [rsp+0x68]
   140011e5e:	mov    rdx,rcx
   140011e61:	mov    rcx,rax
   140011e64:	call   0x1400131c0
   140011e69:	movzx  eax,al
   140011e6c:	test   eax,eax
   140011e6e:	je     0x140011ed5
   140011e70:	mov    BYTE PTR [rsp+0x32],0x1
   140011e75:	mov    rcx,QWORD PTR [rsp+0xe8]
   140011e7d:	call   0x140012640
   140011e82:	mov    rcx,QWORD PTR [rsp+0xf0]
   140011e8a:	mov    QWORD PTR [rsp+0x28],rcx
   140011e8f:	mov    QWORD PTR [rsp+0x20],rax
   140011e94:	mov    r9,QWORD PTR [rsp+0x48]
   140011e99:	movzx  r8d,BYTE PTR [rsp+0x30]
   140011e9f:	lea    rdx,[rsp+0xb0]
   140011ea7:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011eaf:	call   0x140010970
   140011eb4:	lea    r8,[rsp+0x32]
   140011eb9:	mov    rdx,rax
   140011ebc:	mov    rcx,QWORD PTR [rsp+0xd8]
   140011ec4:	call   0x1400105b0
   140011ec9:	mov    rax,QWORD PTR [rsp+0xd8]
   140011ed1:	jmp    0x140011f12
   140011ed3:	jmp    0x140011f10
   140011ed5:	mov    rdx,QWORD PTR [rsp+0xf0]
   140011edd:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011ee5:	call   0x140013540
   140011eea:	mov    BYTE PTR [rsp+0x34],0x0
   140011eef:	lea    r8,[rsp+0x34]
   140011ef4:	lea    rdx,[rsp+0x50]
   140011ef9:	mov    rcx,QWORD PTR [rsp+0xd8]
   140011f01:	call   0x1400105b0
   140011f06:	mov    rax,QWORD PTR [rsp+0xd8]
   140011f0e:	jmp    0x140011f12
   140011f10:	jmp    0x140011f12
   140011f12:	add    rsp,0xc8
   140011f19:	ret    
   140011f1a:	int3   
   140011f1b:	int3   
   140011f1c:	int3   
   140011f1d:	int3   
   140011f1e:	int3   
   140011f1f:	int3   
   140011f20:	mov    QWORD PTR [rsp+0x18],r8
   140011f25:	mov    QWORD PTR [rsp+0x10],rdx
   140011f2a:	mov    QWORD PTR [rsp+0x8],rcx
   140011f2f:	sub    rsp,0x28
   140011f33:	mov    rcx,QWORD PTR [rsp+0x40]
   140011f38:	call   0x140012640
   140011f3d:	mov    r8,rax
   140011f40:	mov    rdx,QWORD PTR [rsp+0x38]
   140011f45:	mov    rcx,QWORD PTR [rsp+0x30]
   140011f4a:	call   0x140011fe0
   140011f4f:	add    rsp,0x28
   140011f53:	ret    
   140011f54:	int3   
   140011f55:	int3   
   140011f56:	int3   
   140011f57:	int3   
   140011f58:	int3   
   140011f59:	int3   
   140011f5a:	int3   
   140011f5b:	int3   
   140011f5c:	int3   
   140011f5d:	int3   
   140011f5e:	int3   
   140011f5f:	int3   
   140011f60:	mov    QWORD PTR [rsp+0x18],r8
   140011f65:	mov    QWORD PTR [rsp+0x10],rdx
   140011f6a:	mov    QWORD PTR [rsp+0x8],rcx
   140011f6f:	sub    rsp,0x48
   140011f73:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140011f7c:	mov    rdx,QWORD PTR [rsp+0x58]
   140011f81:	mov    ecx,0x8
   140011f86:	call   0x140012c20
   140011f8b:	mov    QWORD PTR [rsp+0x20],rax
   140011f90:	cmp    QWORD PTR [rsp+0x20],0x0
   140011f96:	je     0x140011fb9
   140011f98:	mov    rcx,QWORD PTR [rsp+0x60]
   140011f9d:	call   0x140012640
   140011fa2:	mov    rcx,QWORD PTR [rsp+0x20]
   140011fa7:	mov    rax,QWORD PTR [rax]
   140011faa:	mov    QWORD PTR [rcx],rax
   140011fad:	mov    rax,QWORD PTR [rsp+0x20]
   140011fb2:	mov    QWORD PTR [rsp+0x28],rax
   140011fb7:	jmp    0x140011fc2
   140011fb9:	mov    QWORD PTR [rsp+0x28],0x0
   140011fc2:	mov    rax,QWORD PTR [rsp+0x28]
   140011fc7:	mov    QWORD PTR [rsp+0x38],rax
   140011fcc:	add    rsp,0x48
   140011fd0:	ret    
   140011fd1:	int3   
   140011fd2:	int3   
   140011fd3:	int3   
   140011fd4:	int3   
   140011fd5:	int3   
   140011fd6:	int3   
   140011fd7:	int3   
   140011fd8:	int3   
   140011fd9:	int3   
   140011fda:	int3   
   140011fdb:	int3   
   140011fdc:	int3   
   140011fdd:	int3   
   140011fde:	int3   
   140011fdf:	int3   
   140011fe0:	mov    QWORD PTR [rsp+0x18],r8
   140011fe5:	mov    QWORD PTR [rsp+0x10],rdx
   140011fea:	mov    QWORD PTR [rsp+0x8],rcx
   140011fef:	sub    rsp,0x28
   140011ff3:	mov    rcx,QWORD PTR [rsp+0x40]
   140011ff8:	call   0x140012640
   140011ffd:	mov    r8,rax
   140012000:	mov    rdx,QWORD PTR [rsp+0x38]
   140012005:	mov    rcx,QWORD PTR [rsp+0x30]
   14001200a:	call   0x140011f60
   14001200f:	add    rsp,0x28
   140012013:	ret    
   140012014:	int3   
   140012015:	int3   
   140012016:	int3   
   140012017:	int3   
   140012018:	int3   
   140012019:	int3   
   14001201a:	int3   
   14001201b:	int3   
   14001201c:	int3   
   14001201d:	int3   
   14001201e:	int3   
   14001201f:	int3   
   140012020:	mov    QWORD PTR [rsp+0x18],r8
   140012025:	mov    QWORD PTR [rsp+0x10],rdx
   14001202a:	mov    QWORD PTR [rsp+0x8],rcx
   14001202f:	sub    rsp,0x28
   140012033:	mov    rcx,QWORD PTR [rsp+0x40]
   140012038:	call   0x140012640
   14001203d:	mov    r8,rax
   140012040:	mov    rdx,QWORD PTR [rsp+0x38]
   140012045:	mov    rcx,QWORD PTR [rsp+0x30]
   14001204a:	call   0x1400120e0
   14001204f:	add    rsp,0x28
   140012053:	ret    
   140012054:	int3   
   140012055:	int3   
   140012056:	int3   
   140012057:	int3   
   140012058:	int3   
   140012059:	int3   
   14001205a:	int3   
   14001205b:	int3   
   14001205c:	int3   
   14001205d:	int3   
   14001205e:	int3   
   14001205f:	int3   
   140012060:	mov    QWORD PTR [rsp+0x18],r8
   140012065:	mov    QWORD PTR [rsp+0x10],rdx
   14001206a:	mov    QWORD PTR [rsp+0x8],rcx
   14001206f:	sub    rsp,0x48
   140012073:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001207c:	mov    rdx,QWORD PTR [rsp+0x58]
   140012081:	mov    ecx,0x8
   140012086:	call   0x140012c20
   14001208b:	mov    QWORD PTR [rsp+0x20],rax
   140012090:	cmp    QWORD PTR [rsp+0x20],0x0
   140012096:	je     0x1400120b9
   140012098:	mov    rcx,QWORD PTR [rsp+0x60]
   14001209d:	call   0x140012640
   1400120a2:	mov    rcx,QWORD PTR [rsp+0x20]
   1400120a7:	mov    rax,QWORD PTR [rax]
   1400120aa:	mov    QWORD PTR [rcx],rax
   1400120ad:	mov    rax,QWORD PTR [rsp+0x20]
   1400120b2:	mov    QWORD PTR [rsp+0x28],rax
   1400120b7:	jmp    0x1400120c2
   1400120b9:	mov    QWORD PTR [rsp+0x28],0x0
   1400120c2:	mov    rax,QWORD PTR [rsp+0x28]
   1400120c7:	mov    QWORD PTR [rsp+0x38],rax
   1400120cc:	add    rsp,0x48
   1400120d0:	ret    
   1400120d1:	int3   
   1400120d2:	int3   
   1400120d3:	int3   
   1400120d4:	int3   
   1400120d5:	int3   
   1400120d6:	int3   
   1400120d7:	int3   
   1400120d8:	int3   
   1400120d9:	int3   
   1400120da:	int3   
   1400120db:	int3   
   1400120dc:	int3   
   1400120dd:	int3   
   1400120de:	int3   
   1400120df:	int3   
   1400120e0:	mov    QWORD PTR [rsp+0x18],r8
   1400120e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400120ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400120ef:	sub    rsp,0x28
   1400120f3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400120f8:	call   0x140012640
   1400120fd:	mov    r8,rax
   140012100:	mov    rdx,QWORD PTR [rsp+0x38]
   140012105:	mov    rcx,QWORD PTR [rsp+0x30]
   14001210a:	call   0x140012060
   14001210f:	add    rsp,0x28
   140012113:	ret    
   140012114:	int3   
   140012115:	int3   
   140012116:	int3   
   140012117:	int3   
   140012118:	int3   
   140012119:	int3   
   14001211a:	int3   
   14001211b:	int3   
   14001211c:	int3   
   14001211d:	int3   
   14001211e:	int3   
   14001211f:	int3   
   140012120:	mov    QWORD PTR [rsp+0x20],r9
   140012125:	mov    QWORD PTR [rsp+0x18],r8
   14001212a:	mov    QWORD PTR [rsp+0x10],rdx
   14001212f:	mov    QWORD PTR [rsp+0x8],rcx
   140012134:	sub    rsp,0x48
   140012138:	mov    rcx,QWORD PTR [rsp+0x70]
   14001213d:	call   0x140012640
   140012142:	mov    QWORD PTR [rsp+0x30],rax
   140012147:	mov    rcx,QWORD PTR [rsp+0x68]
   14001214c:	call   0x140012640
   140012151:	mov    QWORD PTR [rsp+0x38],rax
   140012156:	mov    rcx,QWORD PTR [rsp+0x60]
   14001215b:	call   0x140012640
   140012160:	mov    rcx,QWORD PTR [rsp+0x30]
   140012165:	mov    QWORD PTR [rsp+0x20],rcx
   14001216a:	mov    rcx,QWORD PTR [rsp+0x38]
   14001216f:	mov    r9,rcx
   140012172:	mov    r8,rax
   140012175:	mov    rdx,QWORD PTR [rsp+0x58]
   14001217a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001217f:	call   0x140012270
   140012184:	add    rsp,0x48
   140012188:	ret    
   140012189:	int3   
   14001218a:	int3   
   14001218b:	int3   
   14001218c:	int3   
   14001218d:	int3   
   14001218e:	int3   
   14001218f:	int3   
   140012190:	mov    QWORD PTR [rsp+0x20],r9
   140012195:	mov    QWORD PTR [rsp+0x18],r8
   14001219a:	mov    QWORD PTR [rsp+0x10],rdx
   14001219f:	mov    QWORD PTR [rsp+0x8],rcx
   1400121a4:	sub    rsp,0x78
   1400121a8:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400121b1:	mov    rdx,QWORD PTR [rsp+0x88]
   1400121b9:	mov    ecx,0x20
   1400121be:	call   0x140012c20
   1400121c3:	mov    QWORD PTR [rsp+0x28],rax
   1400121c8:	cmp    QWORD PTR [rsp+0x28],0x0
   1400121ce:	je     0x140012257
   1400121d4:	lea    rax,[rsp+0x20]
   1400121d9:	mov    QWORD PTR [rsp+0x50],rax
   1400121de:	lea    rax,[rsp+0x60]
   1400121e3:	mov    QWORD PTR [rsp+0x38],rax
   1400121e8:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400121f0:	call   0x140012640
   1400121f5:	mov    rdx,rax
   1400121f8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400121fd:	call   0x140012950
   140012202:	mov    QWORD PTR [rsp+0x48],rax
   140012207:	mov    rcx,QWORD PTR [rsp+0x98]
   14001220f:	call   0x140012640
   140012214:	mov    rdx,rax
   140012217:	mov    rcx,QWORD PTR [rsp+0x38]
   14001221c:	call   0x140010550
   140012221:	mov    QWORD PTR [rsp+0x40],rax
   140012226:	mov    rcx,QWORD PTR [rsp+0x90]
   14001222e:	call   0x140012640
   140012233:	mov    rcx,QWORD PTR [rsp+0x48]
   140012238:	mov    r9,rcx
   14001223b:	mov    rcx,QWORD PTR [rsp+0x40]
   140012240:	mov    r8,rcx
   140012243:	movzx  edx,BYTE PTR [rax]
   140012246:	mov    rcx,QWORD PTR [rsp+0x28]
   14001224b:	call   0x1400104a0
   140012250:	mov    QWORD PTR [rsp+0x30],rax
   140012255:	jmp    0x140012260
   140012257:	mov    QWORD PTR [rsp+0x30],0x0
   140012260:	mov    rax,QWORD PTR [rsp+0x30]
   140012265:	mov    QWORD PTR [rsp+0x68],rax
   14001226a:	add    rsp,0x78
   14001226e:	ret    
   14001226f:	int3   
   140012270:	mov    QWORD PTR [rsp+0x20],r9
   140012275:	mov    QWORD PTR [rsp+0x18],r8
   14001227a:	mov    QWORD PTR [rsp+0x10],rdx
   14001227f:	mov    QWORD PTR [rsp+0x8],rcx
   140012284:	sub    rsp,0x48
   140012288:	mov    rcx,QWORD PTR [rsp+0x70]
   14001228d:	call   0x140012640
   140012292:	mov    QWORD PTR [rsp+0x30],rax
   140012297:	mov    rcx,QWORD PTR [rsp+0x68]
   14001229c:	call   0x140012640
   1400122a1:	mov    QWORD PTR [rsp+0x38],rax
   1400122a6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400122ab:	call   0x140012640
   1400122b0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400122b5:	mov    QWORD PTR [rsp+0x20],rcx
   1400122ba:	mov    rcx,QWORD PTR [rsp+0x38]
   1400122bf:	mov    r9,rcx
   1400122c2:	mov    r8,rax
   1400122c5:	mov    rdx,QWORD PTR [rsp+0x58]
   1400122ca:	mov    rcx,QWORD PTR [rsp+0x50]
   1400122cf:	call   0x140012190
   1400122d4:	add    rsp,0x48
   1400122d8:	ret    
   1400122d9:	int3   
   1400122da:	int3   
   1400122db:	int3   
   1400122dc:	int3   
   1400122dd:	int3   
   1400122de:	int3   
   1400122df:	int3   
   1400122e0:	mov    QWORD PTR [rsp+0x18],r8
   1400122e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400122ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400122ef:	sub    rsp,0x28
   1400122f3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400122f8:	call   0x140012640
   1400122fd:	mov    r8,rax
   140012300:	mov    rdx,QWORD PTR [rsp+0x38]
   140012305:	mov    rcx,QWORD PTR [rsp+0x30]
   14001230a:	call   0x140012390
   14001230f:	add    rsp,0x28
   140012313:	ret    
   140012314:	int3   
   140012315:	int3   
   140012316:	int3   
   140012317:	int3   
   140012318:	int3   
   140012319:	int3   
   14001231a:	int3   
   14001231b:	int3   
   14001231c:	int3   
   14001231d:	int3   
   14001231e:	int3   
   14001231f:	int3   
   140012320:	mov    QWORD PTR [rsp+0x18],r8
   140012325:	mov    QWORD PTR [rsp+0x10],rdx
   14001232a:	mov    QWORD PTR [rsp+0x8],rcx
   14001232f:	sub    rsp,0x48
   140012333:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001233c:	mov    rdx,QWORD PTR [rsp+0x58]
   140012341:	mov    ecx,0x18
   140012346:	call   0x140012c20
   14001234b:	mov    QWORD PTR [rsp+0x20],rax
   140012350:	cmp    QWORD PTR [rsp+0x20],0x0
   140012356:	je     0x140012376
   140012358:	mov    rcx,QWORD PTR [rsp+0x60]
   14001235d:	call   0x140012640
   140012362:	mov    rdx,rax
   140012365:	mov    rcx,QWORD PTR [rsp+0x20]
   14001236a:	call   0x140009e90
   14001236f:	mov    QWORD PTR [rsp+0x28],rax
   140012374:	jmp    0x14001237f
   140012376:	mov    QWORD PTR [rsp+0x28],0x0
   14001237f:	mov    rax,QWORD PTR [rsp+0x28]
   140012384:	mov    QWORD PTR [rsp+0x38],rax
   140012389:	add    rsp,0x48
   14001238d:	ret    
   14001238e:	int3   
   14001238f:	int3   
   140012390:	mov    QWORD PTR [rsp+0x18],r8
   140012395:	mov    QWORD PTR [rsp+0x10],rdx
   14001239a:	mov    QWORD PTR [rsp+0x8],rcx
   14001239f:	sub    rsp,0x28
   1400123a3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400123a8:	call   0x140012640
   1400123ad:	mov    r8,rax
   1400123b0:	mov    rdx,QWORD PTR [rsp+0x38]
   1400123b5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400123ba:	call   0x140012320
   1400123bf:	add    rsp,0x28
   1400123c3:	ret    
   1400123c4:	int3   
   1400123c5:	int3   
   1400123c6:	int3   
   1400123c7:	int3   
   1400123c8:	int3   
   1400123c9:	int3   
   1400123ca:	int3   
   1400123cb:	int3   
   1400123cc:	int3   
   1400123cd:	int3   
   1400123ce:	int3   
   1400123cf:	int3   
   1400123d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400123d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400123da:	ret    
   1400123db:	int3   
   1400123dc:	int3   
   1400123dd:	int3   
   1400123de:	int3   
   1400123df:	int3   
   1400123e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400123e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400123ea:	sub    rsp,0x28
   1400123ee:	mov    rdx,QWORD PTR [rsp+0x38]
   1400123f3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400123f8:	call   0x140012410
   1400123fd:	add    rsp,0x28
   140012401:	ret    
   140012402:	int3   
   140012403:	int3   
   140012404:	int3   
   140012405:	int3   
   140012406:	int3   
   140012407:	int3   
   140012408:	int3   
   140012409:	int3   
   14001240a:	int3   
   14001240b:	int3   
   14001240c:	int3   
   14001240d:	int3   
   14001240e:	int3   
   14001240f:	int3   
   140012410:	mov    QWORD PTR [rsp+0x10],rdx
   140012415:	mov    QWORD PTR [rsp+0x8],rcx
   14001241a:	sub    rsp,0x28
   14001241e:	mov    rdx,QWORD PTR [rsp+0x38]
   140012423:	mov    rcx,QWORD PTR [rsp+0x30]
   140012428:	call   0x1400123d0
   14001242d:	add    rsp,0x28
   140012431:	ret    
   140012432:	int3   
   140012433:	int3   
   140012434:	int3   
   140012435:	int3   
   140012436:	int3   
   140012437:	int3   
   140012438:	int3   
   140012439:	int3   
   14001243a:	int3   
   14001243b:	int3   
   14001243c:	int3   
   14001243d:	int3   
   14001243e:	int3   
   14001243f:	int3   
   140012440:	mov    QWORD PTR [rsp+0x10],rdx
   140012445:	mov    QWORD PTR [rsp+0x8],rcx
   14001244a:	sub    rsp,0x28
   14001244e:	mov    rdx,QWORD PTR [rsp+0x38]
   140012453:	mov    rcx,QWORD PTR [rsp+0x30]
   140012458:	call   0x140012490
   14001245d:	add    rsp,0x28
   140012461:	ret    
   140012462:	int3   
   140012463:	int3   
   140012464:	int3   
   140012465:	int3   
   140012466:	int3   
   140012467:	int3   
   140012468:	int3   
   140012469:	int3   
   14001246a:	int3   
   14001246b:	int3   
   14001246c:	int3   
   14001246d:	int3   
   14001246e:	int3   
   14001246f:	int3   
   140012470:	mov    QWORD PTR [rsp+0x10],rdx
   140012475:	mov    QWORD PTR [rsp+0x8],rcx
   14001247a:	sub    rsp,0x28
   14001247e:	xor    edx,edx
   140012480:	mov    rcx,QWORD PTR [rsp+0x38]
   140012485:	call   0x140013200
   14001248a:	add    rsp,0x28
   14001248e:	ret    
   14001248f:	int3   
   140012490:	mov    QWORD PTR [rsp+0x10],rdx
   140012495:	mov    QWORD PTR [rsp+0x8],rcx
   14001249a:	sub    rsp,0x28
   14001249e:	mov    rdx,QWORD PTR [rsp+0x38]
   1400124a3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400124a8:	call   0x140012470
   1400124ad:	add    rsp,0x28
   1400124b1:	ret    
   1400124b2:	int3   
   1400124b3:	int3   
   1400124b4:	int3   
   1400124b5:	int3   
   1400124b6:	int3   
   1400124b7:	int3   
   1400124b8:	int3   
   1400124b9:	int3   
   1400124ba:	int3   
   1400124bb:	int3   
   1400124bc:	int3   
   1400124bd:	int3   
   1400124be:	int3   
   1400124bf:	int3   
   1400124c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400124c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400124ca:	sub    rsp,0x28
   1400124ce:	mov    rdx,QWORD PTR [rsp+0x38]
   1400124d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400124d8:	call   0x140012520
   1400124dd:	add    rsp,0x28
   1400124e1:	ret    
   1400124e2:	int3   
   1400124e3:	int3   
   1400124e4:	int3   
   1400124e5:	int3   
   1400124e6:	int3   
   1400124e7:	int3   
   1400124e8:	int3   
   1400124e9:	int3   
   1400124ea:	int3   
   1400124eb:	int3   
   1400124ec:	int3   
   1400124ed:	int3   
   1400124ee:	int3   
   1400124ef:	int3   
   1400124f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400124f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400124fa:	sub    rsp,0x28
   1400124fe:	mov    rax,QWORD PTR [rsp+0x38]
   140012503:	mov    rax,QWORD PTR [rax]
   140012506:	xor    edx,edx
   140012508:	mov    rcx,QWORD PTR [rsp+0x38]
   14001250d:	call   QWORD PTR [rax]
   14001250f:	add    rsp,0x28
   140012513:	ret    
   140012514:	int3   
   140012515:	int3   
   140012516:	int3   
   140012517:	int3   
   140012518:	int3   
   140012519:	int3   
   14001251a:	int3   
   14001251b:	int3   
   14001251c:	int3   
   14001251d:	int3   
   14001251e:	int3   
   14001251f:	int3   
   140012520:	mov    QWORD PTR [rsp+0x10],rdx
   140012525:	mov    QWORD PTR [rsp+0x8],rcx
   14001252a:	sub    rsp,0x28
   14001252e:	mov    rdx,QWORD PTR [rsp+0x38]
   140012533:	mov    rcx,QWORD PTR [rsp+0x30]
   140012538:	call   0x1400124f0
   14001253d:	add    rsp,0x28
   140012541:	ret    
   140012542:	int3   
   140012543:	int3   
   140012544:	int3   
   140012545:	int3   
   140012546:	int3   
   140012547:	int3   
   140012548:	int3   
   140012549:	int3   
   14001254a:	int3   
   14001254b:	int3   
   14001254c:	int3   
   14001254d:	int3   
   14001254e:	int3   
   14001254f:	int3   
   140012550:	mov    QWORD PTR [rsp+0x20],r9
   140012555:	mov    QWORD PTR [rsp+0x18],r8
   14001255a:	mov    QWORD PTR [rsp+0x10],rdx
   14001255f:	mov    QWORD PTR [rsp+0x8],rcx
   140012564:	sub    rsp,0x58
   140012568:	mov    rcx,QWORD PTR [rsp+0x88]
   140012570:	call   0x140012640
   140012575:	mov    QWORD PTR [rsp+0x38],rax
   14001257a:	mov    rcx,QWORD PTR [rsp+0x80]
   140012582:	call   0x140012640
   140012587:	mov    QWORD PTR [rsp+0x40],rax
   14001258c:	mov    rcx,QWORD PTR [rsp+0x78]
   140012591:	call   0x140012640
   140012596:	mov    rcx,QWORD PTR [rsp+0x38]
   14001259b:	mov    r9,rcx
   14001259e:	mov    rcx,QWORD PTR [rsp+0x40]
   1400125a3:	mov    r8,rcx
   1400125a6:	mov    rdx,rax
   1400125a9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400125ae:	call   0x140010720
   1400125b3:	mov    QWORD PTR [rsp+0x30],rax
   1400125b8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400125bd:	call   0x140013bc0
   1400125c2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400125c7:	mov    QWORD PTR [rsp+0x20],rcx
   1400125cc:	mov    r9,rax
   1400125cf:	mov    r8,QWORD PTR [rsp+0x70]
   1400125d4:	mov    rdx,QWORD PTR [rsp+0x68]
   1400125d9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400125de:	call   0x140010da0
   1400125e3:	mov    rax,QWORD PTR [rsp+0x68]
   1400125e8:	add    rsp,0x58
   1400125ec:	ret    
   1400125ed:	int3   
   1400125ee:	int3   
   1400125ef:	int3   
   1400125f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400125f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400125fa:	sub    rsp,0x28
   1400125fe:	mov    rcx,QWORD PTR [rsp+0x38]
   140012603:	call   0x140012640
   140012608:	mov    rdx,rax
   14001260b:	mov    rcx,QWORD PTR [rsp+0x30]
   140012610:	call   0x140012960
   140012615:	mov    rax,QWORD PTR [rsp+0x30]
   14001261a:	add    rsp,0x28
   14001261e:	ret    
   14001261f:	int3   
   140012620:	mov    QWORD PTR [rsp+0x8],rcx
   140012625:	sub    rsp,0x28
   140012629:	mov    rax,QWORD PTR [rsp+0x30]
   14001262e:	mov    rcx,QWORD PTR [rax]
   140012631:	call   0x140012640
   140012636:	add    rsp,0x28
   14001263a:	ret    
   14001263b:	int3   
   14001263c:	int3   
   14001263d:	int3   
   14001263e:	int3   
   14001263f:	int3   
   140012640:	mov    QWORD PTR [rsp+0x8],rcx
   140012645:	mov    rax,QWORD PTR [rsp+0x8]
   14001264a:	ret    
   14001264b:	int3   
   14001264c:	int3   
   14001264d:	int3   
   14001264e:	int3   
   14001264f:	int3   
   140012650:	mov    QWORD PTR [rsp+0x10],rdx
   140012655:	mov    QWORD PTR [rsp+0x8],rcx
   14001265a:	sub    rsp,0x38
   14001265e:	mov    rcx,QWORD PTR [rsp+0x40]
   140012663:	call   0x140012640
   140012668:	movzx  eax,BYTE PTR [rax]
   14001266b:	mov    BYTE PTR [rsp+0x20],al
   14001266f:	mov    rcx,QWORD PTR [rsp+0x48]
   140012674:	call   0x140012640
   140012679:	mov    rcx,QWORD PTR [rsp+0x40]
   14001267e:	movzx  eax,BYTE PTR [rax]
   140012681:	mov    BYTE PTR [rcx],al
   140012683:	lea    rcx,[rsp+0x20]
   140012688:	call   0x140012640
   14001268d:	mov    rcx,QWORD PTR [rsp+0x48]
   140012692:	movzx  eax,BYTE PTR [rax]
   140012695:	mov    BYTE PTR [rcx],al
   140012697:	add    rsp,0x38
   14001269b:	ret    
   14001269c:	int3   
   14001269d:	int3   
   14001269e:	int3   
   14001269f:	int3   
   1400126a0:	mov    QWORD PTR [rsp+0x18],r8
   1400126a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400126aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400126af:	sub    rsp,0x28
   1400126b3:	mov    rax,QWORD PTR [rsp+0x30]
   1400126b8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400126bd:	mov    QWORD PTR [rax],rcx
   1400126c0:	mov    rdx,QWORD PTR [rsp+0x40]
   1400126c5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400126ca:	call   0x1400054a0
   1400126cf:	mov    rax,QWORD PTR [rsp+0x30]
   1400126d4:	add    rsp,0x28
   1400126d8:	ret    
   1400126d9:	int3   
   1400126da:	int3   
   1400126db:	int3   
   1400126dc:	int3   
   1400126dd:	int3   
   1400126de:	int3   
   1400126df:	int3   
   1400126e0:	mov    QWORD PTR [rsp+0x18],r8
   1400126e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400126ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400126ef:	sub    rsp,0x28
   1400126f3:	mov    r8,QWORD PTR [rsp+0x40]
   1400126f8:	mov    rdx,QWORD PTR [rsp+0x38]
   1400126fd:	mov    rcx,QWORD PTR [rsp+0x30]
   140012702:	call   0x1400126a0
   140012707:	mov    rax,QWORD PTR [rsp+0x30]
   14001270c:	add    rsp,0x28
   140012710:	ret    
   140012711:	int3   
   140012712:	int3   
   140012713:	int3   
   140012714:	int3   
   140012715:	int3   
   140012716:	int3   
   140012717:	int3   
   140012718:	int3   
   140012719:	int3   
   14001271a:	int3   
   14001271b:	int3   
   14001271c:	int3   
   14001271d:	int3   
   14001271e:	int3   
   14001271f:	int3   
   140012720:	mov    QWORD PTR [rsp+0x18],r8
   140012725:	mov    QWORD PTR [rsp+0x10],rdx
   14001272a:	mov    QWORD PTR [rsp+0x8],rcx
   14001272f:	sub    rsp,0x38
   140012733:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001273c:	mov    r8,QWORD PTR [rsp+0x50]
   140012741:	mov    rdx,QWORD PTR [rsp+0x48]
   140012746:	mov    rcx,QWORD PTR [rsp+0x40]
   14001274b:	call   0x1400127e0
   140012750:	nop
   140012751:	mov    rax,QWORD PTR [rsp+0x40]
   140012756:	add    rsp,0x38
   14001275a:	ret    
   14001275b:	int3   
   14001275c:	int3   
   14001275d:	int3   
   14001275e:	int3   
   14001275f:	int3   
   140012760:	mov    QWORD PTR [rsp+0x10],rdx
   140012765:	mov    QWORD PTR [rsp+0x8],rcx
   14001276a:	sub    rsp,0x28
   14001276e:	mov    rcx,QWORD PTR [rsp+0x30]
   140012773:	call   0x1400128c0
   140012778:	mov    rcx,QWORD PTR [rsp+0x30]
   14001277d:	call   0x140013240
   140012782:	mov    rcx,QWORD PTR [rsp+0x30]
   140012787:	mov    QWORD PTR [rcx],rax
   14001278a:	mov    rax,QWORD PTR [rsp+0x30]
   14001278f:	add    rsp,0x28
   140012793:	ret    
   140012794:	int3   
   140012795:	int3   
   140012796:	int3   
   140012797:	int3   
   140012798:	int3   
   140012799:	int3   
   14001279a:	int3   
   14001279b:	int3   
   14001279c:	int3   
   14001279d:	int3   
   14001279e:	int3   
   14001279f:	int3   
   1400127a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400127a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400127aa:	sub    rsp,0x38
   1400127ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400127b7:	mov    rdx,QWORD PTR [rsp+0x48]
   1400127bc:	mov    rcx,QWORD PTR [rsp+0x40]
   1400127c1:	call   0x140012760
   1400127c6:	nop
   1400127c7:	mov    rax,QWORD PTR [rsp+0x40]
   1400127cc:	add    rsp,0x38
   1400127d0:	ret    
   1400127d1:	int3   
   1400127d2:	int3   
   1400127d3:	int3   
   1400127d4:	int3   
   1400127d5:	int3   
   1400127d6:	int3   
   1400127d7:	int3   
   1400127d8:	int3   
   1400127d9:	int3   
   1400127da:	int3   
   1400127db:	int3   
   1400127dc:	int3   
   1400127dd:	int3   
   1400127de:	int3   
   1400127df:	int3   
   1400127e0:	mov    QWORD PTR [rsp+0x18],r8
   1400127e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400127ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400127ef:	sub    rsp,0x38
   1400127f3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400127fc:	mov    rdx,QWORD PTR [rsp+0x50]
   140012801:	mov    rcx,QWORD PTR [rsp+0x40]
   140012806:	call   0x1400127a0
   14001280b:	nop
   14001280c:	mov    rax,QWORD PTR [rsp+0x40]
   140012811:	add    rsp,0x38
   140012815:	ret    
   140012816:	int3   
   140012817:	int3   
   140012818:	int3   
   140012819:	int3   
   14001281a:	int3   
   14001281b:	int3   
   14001281c:	int3   
   14001281d:	int3   
   14001281e:	int3   
   14001281f:	int3   
   140012820:	mov    QWORD PTR [rsp+0x8],rcx
   140012825:	sub    rsp,0x28
   140012829:	mov    rcx,QWORD PTR [rsp+0x30]
   14001282e:	call   0x1400128a0
   140012833:	mov    rax,QWORD PTR [rsp+0x30]
   140012838:	add    rsp,0x28
   14001283c:	ret    
   14001283d:	int3   
   14001283e:	int3   
   14001283f:	int3   
   140012840:	mov    QWORD PTR [rsp+0x18],r8
   140012845:	mov    QWORD PTR [rsp+0x10],rdx
   14001284a:	mov    QWORD PTR [rsp+0x8],rcx
   14001284f:	sub    rsp,0x28
   140012853:	mov    r8,QWORD PTR [rsp+0x40]
   140012858:	mov    rdx,QWORD PTR [rsp+0x38]
   14001285d:	mov    rcx,QWORD PTR [rsp+0x30]
   140012862:	call   0x1400126e0
   140012867:	mov    rax,QWORD PTR [rsp+0x30]
   14001286c:	add    rsp,0x28
   140012870:	ret    
   140012871:	int3   
   140012872:	int3   
   140012873:	int3   
   140012874:	int3   
   140012875:	int3   
   140012876:	int3   
   140012877:	int3   
   140012878:	int3   
   140012879:	int3   
   14001287a:	int3   
   14001287b:	int3   
   14001287c:	int3   
   14001287d:	int3   
   14001287e:	int3   
   14001287f:	int3   
   140012880:	mov    QWORD PTR [rsp+0x8],rcx
   140012885:	sub    rsp,0x28
   140012889:	mov    rcx,QWORD PTR [rsp+0x30]
   14001288e:	call   0x140012820
   140012893:	mov    rax,QWORD PTR [rsp+0x30]
   140012898:	add    rsp,0x28
   14001289c:	ret    
   14001289d:	int3   
   14001289e:	int3   
   14001289f:	int3   
   1400128a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400128a5:	mov    rax,QWORD PTR [rsp+0x8]
   1400128aa:	mov    QWORD PTR [rax],0x0
   1400128b1:	mov    rax,QWORD PTR [rsp+0x8]
   1400128b6:	ret    
   1400128b7:	int3   
   1400128b8:	int3   
   1400128b9:	int3   
   1400128ba:	int3   
   1400128bb:	int3   
   1400128bc:	int3   
   1400128bd:	int3   
   1400128be:	int3   
   1400128bf:	int3   
   1400128c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400128c5:	mov    rax,QWORD PTR [rsp+0x8]
   1400128ca:	mov    QWORD PTR [rax],0x0
   1400128d1:	mov    rax,QWORD PTR [rsp+0x8]
   1400128d6:	mov    QWORD PTR [rax+0x8],0x0
   1400128de:	mov    rax,QWORD PTR [rsp+0x8]
   1400128e3:	ret    
   1400128e4:	int3   
   1400128e5:	int3   
   1400128e6:	int3   
   1400128e7:	int3   
   1400128e8:	int3   
   1400128e9:	int3   
   1400128ea:	int3   
   1400128eb:	int3   
   1400128ec:	int3   
   1400128ed:	int3   
   1400128ee:	int3   
   1400128ef:	int3   
   1400128f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400128f5:	sub    rsp,0x28
   1400128f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400128fe:	call   0x140012640
   140012903:	mov    rax,QWORD PTR [rsp+0x30]
   140012908:	add    rsp,0x28
   14001290c:	ret    
   14001290d:	int3   
   14001290e:	int3   
   14001290f:	int3   
   140012910:	mov    QWORD PTR [rsp+0x8],rcx
   140012915:	sub    rsp,0x38
   140012919:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140012922:	lea    rcx,[rsp+0x20]
   140012927:	call   0x140012640
   14001292c:	mov    r8,rax
   14001292f:	lea    rdx,[rsp+0x21]
   140012934:	mov    rcx,QWORD PTR [rsp+0x40]
   140012939:	call   0x140012720
   14001293e:	nop
   14001293f:	mov    rax,QWORD PTR [rsp+0x40]
   140012944:	add    rsp,0x38
   140012948:	ret    
   140012949:	int3   
   14001294a:	int3   
   14001294b:	int3   
   14001294c:	int3   
   14001294d:	int3   
   14001294e:	int3   
   14001294f:	int3   
   140012950:	mov    QWORD PTR [rsp+0x10],rdx
   140012955:	mov    QWORD PTR [rsp+0x8],rcx
   14001295a:	mov    rax,QWORD PTR [rsp+0x8]
   14001295f:	ret    
   140012960:	mov    QWORD PTR [rsp+0x10],rdx
   140012965:	mov    QWORD PTR [rsp+0x8],rcx
   14001296a:	sub    rsp,0x28
   14001296e:	mov    rcx,QWORD PTR [rsp+0x30]
   140012973:	call   0x140012640
   140012978:	mov    rax,QWORD PTR [rsp+0x30]
   14001297d:	mov    rdx,QWORD PTR [rsp+0x38]
   140012982:	mov    rcx,rax
   140012985:	call   0x140010520
   14001298a:	mov    rax,QWORD PTR [rsp+0x30]
   14001298f:	add    rsp,0x28
   140012993:	ret    
   140012994:	int3   
   140012995:	int3   
   140012996:	int3   
   140012997:	int3   
   140012998:	int3   
   140012999:	int3   
   14001299a:	int3   
   14001299b:	int3   
   14001299c:	int3   
   14001299d:	int3   
   14001299e:	int3   
   14001299f:	int3   
   1400129a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400129a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400129aa:	sub    rsp,0x28
   1400129ae:	mov    rax,QWORD PTR [rsp+0x30]
   1400129b3:	mov    QWORD PTR [rax+0x8],0x0
   1400129bb:	mov    rax,QWORD PTR [rsp+0x30]
   1400129c0:	mov    DWORD PTR [rax+0x10],0x1
   1400129c7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400129cc:	call   0x140021f40
   1400129d1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400129d6:	mov    QWORD PTR [rcx],rax
   1400129d9:	mov    rax,QWORD PTR [rsp+0x30]
   1400129de:	add    rsp,0x28
   1400129e2:	ret    
   1400129e3:	int3   
   1400129e4:	int3   
   1400129e5:	int3   
   1400129e6:	int3   
   1400129e7:	int3   
   1400129e8:	int3   
   1400129e9:	int3   
   1400129ea:	int3   
   1400129eb:	int3   
   1400129ec:	int3   
   1400129ed:	int3   
   1400129ee:	int3   
   1400129ef:	int3   
   1400129f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400129f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400129fa:	sub    rsp,0x48
   1400129fe:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140012a07:	mov    ecx,0x18
   140012a0c:	call   0x140002b80
   140012a11:	mov    QWORD PTR [rsp+0x20],rax
   140012a16:	cmp    QWORD PTR [rsp+0x20],0x0
   140012a1c:	je     0x140012a34
   140012a1e:	mov    rdx,QWORD PTR [rsp+0x58]
   140012a23:	mov    rcx,QWORD PTR [rsp+0x20]
   140012a28:	call   0x1400129a0
   140012a2d:	mov    QWORD PTR [rsp+0x28],rax
   140012a32:	jmp    0x140012a3d
   140012a34:	mov    QWORD PTR [rsp+0x28],0x0
   140012a3d:	mov    rax,QWORD PTR [rsp+0x28]
   140012a42:	mov    QWORD PTR [rsp+0x30],rax
   140012a47:	mov    rax,QWORD PTR [rsp+0x50]
   140012a4c:	mov    rcx,QWORD PTR [rsp+0x30]
   140012a51:	mov    QWORD PTR [rax],rcx
   140012a54:	mov    rax,QWORD PTR [rsp+0x50]
   140012a59:	cmp    QWORD PTR [rax],0x0
   140012a5d:	jne    0x140012a69
   140012a5f:	mov    ecx,0x8007000e
   140012a64:	call   0x140021e90
   140012a69:	mov    rax,QWORD PTR [rsp+0x50]
   140012a6e:	add    rsp,0x48
   140012a72:	ret    
   140012a73:	int3   
   140012a74:	int3   
   140012a75:	int3   
   140012a76:	int3   
   140012a77:	int3   
   140012a78:	int3   
   140012a79:	int3   
   140012a7a:	int3   
   140012a7b:	int3   
   140012a7c:	int3   
   140012a7d:	int3   
   140012a7e:	int3   
   140012a7f:	int3   
   140012a80:	mov    QWORD PTR [rsp+0x10],rdx
   140012a85:	mov    QWORD PTR [rsp+0x8],rcx
   140012a8a:	sub    rsp,0x48
   140012a8e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140012a97:	mov    ecx,0x18
   140012a9c:	call   0x140002b80
   140012aa1:	mov    QWORD PTR [rsp+0x20],rax
   140012aa6:	cmp    QWORD PTR [rsp+0x20],0x0
   140012aac:	je     0x140012ac4
   140012aae:	mov    rdx,QWORD PTR [rsp+0x58]
   140012ab3:	mov    rcx,QWORD PTR [rsp+0x20]
   140012ab8:	call   0x140007710
   140012abd:	mov    QWORD PTR [rsp+0x28],rax
   140012ac2:	jmp    0x140012acd
   140012ac4:	mov    QWORD PTR [rsp+0x28],0x0
   140012acd:	mov    rax,QWORD PTR [rsp+0x28]
   140012ad2:	mov    QWORD PTR [rsp+0x30],rax
   140012ad7:	mov    rax,QWORD PTR [rsp+0x50]
   140012adc:	mov    rcx,QWORD PTR [rsp+0x30]
   140012ae1:	mov    QWORD PTR [rax],rcx
   140012ae4:	mov    rax,QWORD PTR [rsp+0x50]
   140012ae9:	cmp    QWORD PTR [rax],0x0
   140012aed:	jne    0x140012af9
   140012aef:	mov    ecx,0x8007000e
   140012af4:	call   0x140021e90
   140012af9:	mov    rax,QWORD PTR [rsp+0x50]
   140012afe:	add    rsp,0x48
   140012b02:	ret    
   140012b03:	int3   
   140012b04:	int3   
   140012b05:	int3   
   140012b06:	int3   
   140012b07:	int3   
   140012b08:	int3   
   140012b09:	int3   
   140012b0a:	int3   
   140012b0b:	int3   
   140012b0c:	int3   
   140012b0d:	int3   
   140012b0e:	int3   
   140012b0f:	int3   
   140012b10:	mov    QWORD PTR [rsp+0x8],rcx
   140012b15:	sub    rsp,0x38
   140012b19:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012b22:	mov    rcx,QWORD PTR [rsp+0x40]
   140012b27:	call   0x140013d70
   140012b2c:	nop
   140012b2d:	mov    rcx,QWORD PTR [rsp+0x40]
   140012b32:	call   0x140012b90
   140012b37:	add    rsp,0x38
   140012b3b:	ret    
   140012b3c:	int3   
   140012b3d:	int3   
   140012b3e:	int3   
   140012b3f:	int3   
   140012b40:	mov    QWORD PTR [rsp+0x8],rcx
   140012b45:	sub    rsp,0x28
   140012b49:	mov    rax,QWORD PTR [rsp+0x30]
   140012b4e:	mov    rdx,QWORD PTR [rax]
   140012b51:	mov    rcx,QWORD PTR [rsp+0x30]
   140012b56:	call   0x140013680
   140012b5b:	add    rsp,0x28
   140012b5f:	ret    
   140012b60:	mov    QWORD PTR [rsp+0x8],rcx
   140012b65:	sub    rsp,0x38
   140012b69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012b72:	mov    rcx,QWORD PTR [rsp+0x40]
   140012b77:	call   0x140012b40
   140012b7c:	add    rsp,0x38
   140012b80:	ret    
   140012b81:	int3   
   140012b82:	int3   
   140012b83:	int3   
   140012b84:	int3   
   140012b85:	int3   
   140012b86:	int3   
   140012b87:	int3   
   140012b88:	int3   
   140012b89:	int3   
   140012b8a:	int3   
   140012b8b:	int3   
   140012b8c:	int3   
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	mov    QWORD PTR [rsp+0x8],rcx
   140012b95:	sub    rsp,0x38
   140012b99:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012ba2:	mov    rcx,QWORD PTR [rsp+0x40]
   140012ba7:	call   0x140012b60
   140012bac:	add    rsp,0x38
   140012bb0:	ret    
   140012bb1:	int3   
   140012bb2:	int3   
   140012bb3:	int3   
   140012bb4:	int3   
   140012bb5:	int3   
   140012bb6:	int3   
   140012bb7:	int3   
   140012bb8:	int3   
   140012bb9:	int3   
   140012bba:	int3   
   140012bbb:	int3   
   140012bbc:	int3   
   140012bbd:	int3   
   140012bbe:	int3   
   140012bbf:	int3   
   140012bc0:	mov    QWORD PTR [rsp+0x8],rcx
   140012bc5:	sub    rsp,0x38
   140012bc9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012bd2:	mov    rcx,QWORD PTR [rsp+0x40]
   140012bd7:	call   0x140012b10
   140012bdc:	add    rsp,0x38
   140012be0:	ret    
   140012be1:	int3   
   140012be2:	int3   
   140012be3:	int3   
   140012be4:	int3   
   140012be5:	int3   
   140012be6:	int3   
   140012be7:	int3   
   140012be8:	int3   
   140012be9:	int3   
   140012bea:	int3   
   140012beb:	int3   
   140012bec:	int3   
   140012bed:	int3   
   140012bee:	int3   
   140012bef:	int3   
   140012bf0:	mov    QWORD PTR [rsp+0x8],rcx
   140012bf5:	sub    rsp,0x38
   140012bf9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012c02:	mov    rax,QWORD PTR [rsp+0x40]
   140012c07:	add    rax,0x8
   140012c0b:	mov    rcx,rax
   140012c0e:	call   0x140009e60
   140012c13:	add    rsp,0x38
   140012c17:	ret    
   140012c18:	int3   
   140012c19:	int3   
   140012c1a:	int3   
   140012c1b:	int3   
   140012c1c:	int3   
   140012c1d:	int3   
   140012c1e:	int3   
   140012c1f:	int3   
   140012c20:	mov    QWORD PTR [rsp+0x10],rdx
   140012c25:	mov    QWORD PTR [rsp+0x8],rcx
   140012c2a:	mov    rax,QWORD PTR [rsp+0x10]
   140012c2f:	ret    
   140012c30:	mov    QWORD PTR [rsp+0x10],rdx
   140012c35:	mov    QWORD PTR [rsp+0x8],rcx
   140012c3a:	sub    rsp,0x18
   140012c3e:	mov    rax,QWORD PTR [rsp+0x20]
   140012c43:	mov    rcx,QWORD PTR [rsp+0x28]
   140012c48:	mov    rcx,QWORD PTR [rcx]
   140012c4b:	cmp    QWORD PTR [rax],rcx
   140012c4e:	jne    0x140012c59
   140012c50:	mov    DWORD PTR [rsp],0x1
   140012c57:	jmp    0x140012c60
   140012c59:	mov    DWORD PTR [rsp],0x0
   140012c60:	movzx  eax,BYTE PTR [rsp]
   140012c64:	add    rsp,0x18
   140012c68:	ret    
   140012c69:	int3   
   140012c6a:	int3   
   140012c6b:	int3   
   140012c6c:	int3   
   140012c6d:	int3   
   140012c6e:	int3   
   140012c6f:	int3   
   140012c70:	mov    QWORD PTR [rsp+0x10],rdx
   140012c75:	mov    QWORD PTR [rsp+0x8],rcx
   140012c7a:	sub    rsp,0x38
   140012c7e:	mov    rdx,QWORD PTR [rsp+0x48]
   140012c83:	mov    rcx,QWORD PTR [rsp+0x40]
   140012c88:	call   0x140012c30
   140012c8d:	movzx  eax,al
   140012c90:	test   eax,eax
   140012c92:	jne    0x140012c9e
   140012c94:	mov    DWORD PTR [rsp+0x20],0x1
   140012c9c:	jmp    0x140012ca6
   140012c9e:	mov    DWORD PTR [rsp+0x20],0x0
   140012ca6:	movzx  eax,BYTE PTR [rsp+0x20]
   140012cab:	add    rsp,0x38
   140012caf:	ret    
   140012cb0:	mov    QWORD PTR [rsp+0x10],rdx
   140012cb5:	mov    QWORD PTR [rsp+0x8],rcx
   140012cba:	sub    rsp,0x78
   140012cbe:	mov    r8,QWORD PTR [rsp+0x88]
   140012cc6:	lea    rdx,[rsp+0x38]
   140012ccb:	mov    rcx,QWORD PTR [rsp+0x80]
   140012cd3:	call   0x1400149b0
   140012cd8:	lea    rdx,[rsp+0x58]
   140012cdd:	mov    rcx,QWORD PTR [rsp+0x80]
   140012ce5:	call   0x140014060
   140012cea:	mov    rdx,rax
   140012ced:	lea    rcx,[rsp+0x38]
   140012cf2:	call   0x140012c30
   140012cf7:	movzx  eax,al
   140012cfa:	test   eax,eax
   140012cfc:	jne    0x140012d4e
   140012cfe:	lea    rcx,[rsp+0x38]
   140012d03:	call   0x140013bb0
   140012d08:	mov    rdx,rax
   140012d0b:	mov    rcx,QWORD PTR [rsp+0x80]
   140012d13:	call   0x1400138e0
   140012d18:	mov    QWORD PTR [rsp+0x48],rax
   140012d1d:	lea    rdx,[rsp+0x31]
   140012d22:	mov    rcx,QWORD PTR [rsp+0x80]
   140012d2a:	call   0x140012c20
   140012d2f:	mov    rcx,QWORD PTR [rsp+0x48]
   140012d34:	mov    r8,rcx
   140012d37:	mov    rdx,QWORD PTR [rsp+0x88]
   140012d3f:	mov    rcx,rax
   140012d42:	call   0x1400131c0
   140012d47:	movzx  eax,al
   140012d4a:	test   eax,eax
   140012d4c:	je     0x140012dae
   140012d4e:	mov    rax,QWORD PTR [rsp+0x38]
   140012d53:	mov    QWORD PTR [rsp+0x50],rax
   140012d58:	lea    rcx,[rsp+0x30]
   140012d5d:	call   0x140012640
   140012d62:	mov    QWORD PTR [rsp+0x40],rax
   140012d67:	mov    rdx,QWORD PTR [rsp+0x88]
   140012d6f:	lea    rcx,[rsp+0x60]
   140012d74:	call   0x1400125f0
   140012d79:	mov    rcx,QWORD PTR [rsp+0x40]
   140012d7e:	mov    QWORD PTR [rsp+0x28],rcx
   140012d83:	mov    QWORD PTR [rsp+0x20],rax
   140012d88:	lea    r9,[rip+0x29eb4]        # 0x14003cc43
   140012d8f:	mov    r8,QWORD PTR [rsp+0x50]
   140012d94:	lea    rdx,[rsp+0x68]
   140012d99:	mov    rcx,QWORD PTR [rsp+0x80]
   140012da1:	call   0x140012550
   140012da6:	mov    rax,QWORD PTR [rax]
   140012da9:	mov    QWORD PTR [rsp+0x38],rax
   140012dae:	lea    rcx,[rsp+0x38]
   140012db3:	call   0x140012e10
   140012db8:	add    rax,0x8
   140012dbc:	add    rsp,0x78
   140012dc0:	ret    
   140012dc1:	int3   
   140012dc2:	int3   
   140012dc3:	int3   
   140012dc4:	int3   
   140012dc5:	int3   
   140012dc6:	int3   
   140012dc7:	int3   
   140012dc8:	int3   
   140012dc9:	int3   
   140012dca:	int3   
   140012dcb:	int3   
   140012dcc:	int3   
   140012dcd:	int3   
   140012dce:	int3   
   140012dcf:	int3   
   140012dd0:	mov    QWORD PTR [rsp+0x8],rcx
   140012dd5:	sub    rsp,0x38
   140012dd9:	mov    rax,QWORD PTR [rsp+0x40]
   140012dde:	cmp    QWORD PTR [rax],0x0
   140012de2:	je     0x140012dfb
   140012de4:	mov    rax,QWORD PTR [rsp+0x40]
   140012de9:	mov    rcx,QWORD PTR [rax]
   140012dec:	call   0x140017e80
   140012df1:	mov    rax,QWORD PTR [rax]
   140012df4:	mov    QWORD PTR [rsp+0x20],rax
   140012df9:	jmp    0x140012e04
   140012dfb:	mov    QWORD PTR [rsp+0x20],0x0
   140012e04:	mov    rax,QWORD PTR [rsp+0x20]
   140012e09:	add    rsp,0x38
   140012e0d:	ret    
   140012e0e:	int3   
   140012e0f:	int3   
   140012e10:	mov    QWORD PTR [rsp+0x8],rcx
   140012e15:	sub    rsp,0x28
   140012e19:	mov    rcx,QWORD PTR [rsp+0x30]
   140012e1e:	call   0x140012e50
   140012e23:	mov    rcx,rax
   140012e26:	call   0x140014af0
   140012e2b:	add    rsp,0x28
   140012e2f:	ret    
   140012e30:	mov    QWORD PTR [rsp+0x8],rcx
   140012e35:	sub    rsp,0x28
   140012e39:	mov    rax,QWORD PTR [rsp+0x30]
   140012e3e:	mov    rcx,QWORD PTR [rax]
   140012e41:	call   0x140013bc0
   140012e46:	add    rsp,0x28
   140012e4a:	ret    
   140012e4b:	int3   
   140012e4c:	int3   
   140012e4d:	int3   
   140012e4e:	int3   
   140012e4f:	int3   
   140012e50:	mov    QWORD PTR [rsp+0x8],rcx
   140012e55:	sub    rsp,0x28
   140012e59:	mov    rcx,QWORD PTR [rsp+0x30]
   140012e5e:	call   0x140012e30
   140012e63:	add    rsp,0x28
   140012e67:	ret    
   140012e68:	int3   
   140012e69:	int3   
   140012e6a:	int3   
   140012e6b:	int3   
   140012e6c:	int3   
   140012e6d:	int3   
   140012e6e:	int3   
   140012e6f:	int3   
   140012e70:	mov    DWORD PTR [rsp+0x18],r8d
   140012e75:	mov    QWORD PTR [rsp+0x10],rdx
   140012e7a:	mov    QWORD PTR [rsp+0x8],rcx
   140012e7f:	sub    rsp,0x38
   140012e83:	mov    rax,QWORD PTR [rsp+0x40]
   140012e88:	mov    rax,QWORD PTR [rax]
   140012e8b:	mov    QWORD PTR [rsp+0x20],rax
   140012e90:	mov    rcx,QWORD PTR [rsp+0x40]
   140012e95:	call   0x140012ec0
   140012e9a:	mov    rax,QWORD PTR [rsp+0x48]
   140012e9f:	mov    rcx,QWORD PTR [rsp+0x20]
   140012ea4:	mov    QWORD PTR [rax],rcx
   140012ea7:	mov    rax,QWORD PTR [rsp+0x48]
   140012eac:	add    rsp,0x38
   140012eb0:	ret    
   140012eb1:	int3   
   140012eb2:	int3   
   140012eb3:	int3   
   140012eb4:	int3   
   140012eb5:	int3   
   140012eb6:	int3   
   140012eb7:	int3   
   140012eb8:	int3   
   140012eb9:	int3   
   140012eba:	int3   
   140012ebb:	int3   
   140012ebc:	int3   
   140012ebd:	int3   
   140012ebe:	int3   
   140012ebf:	int3   
   140012ec0:	mov    QWORD PTR [rsp+0x8],rcx
   140012ec5:	sub    rsp,0x28
   140012ec9:	mov    rcx,QWORD PTR [rsp+0x30]
   140012ece:	call   0x140012f50
   140012ed3:	mov    rax,QWORD PTR [rsp+0x30]
   140012ed8:	add    rsp,0x28
   140012edc:	ret    
   140012edd:	int3   
   140012ede:	int3   
   140012edf:	int3   
   140012ee0:	mov    DWORD PTR [rsp+0x18],r8d
   140012ee5:	mov    QWORD PTR [rsp+0x10],rdx
   140012eea:	mov    QWORD PTR [rsp+0x8],rcx
   140012eef:	sub    rsp,0x38
   140012ef3:	mov    rax,QWORD PTR [rsp+0x40]
   140012ef8:	mov    rax,QWORD PTR [rax]
   140012efb:	mov    QWORD PTR [rsp+0x20],rax
   140012f00:	mov    rcx,QWORD PTR [rsp+0x40]
   140012f05:	call   0x140012f30
   140012f0a:	mov    rax,QWORD PTR [rsp+0x48]
   140012f0f:	mov    rcx,QWORD PTR [rsp+0x20]
   140012f14:	mov    QWORD PTR [rax],rcx
   140012f17:	mov    rax,QWORD PTR [rsp+0x48]
   140012f1c:	add    rsp,0x38
   140012f20:	ret    
   140012f21:	int3   
   140012f22:	int3   
   140012f23:	int3   
   140012f24:	int3   
   140012f25:	int3   
   140012f26:	int3   
   140012f27:	int3   
   140012f28:	int3   
   140012f29:	int3   
   140012f2a:	int3   
   140012f2b:	int3   
   140012f2c:	int3   
   140012f2d:	int3   
   140012f2e:	int3   
   140012f2f:	int3   
   140012f30:	mov    QWORD PTR [rsp+0x8],rcx
   140012f35:	sub    rsp,0x28
   140012f39:	mov    rcx,QWORD PTR [rsp+0x30]
   140012f3e:	call   0x140012ec0
   140012f43:	mov    rax,QWORD PTR [rsp+0x30]
   140012f48:	add    rsp,0x28
   140012f4c:	ret    
   140012f4d:	int3   
   140012f4e:	int3   
   140012f4f:	int3   
   140012f50:	mov    QWORD PTR [rsp+0x8],rcx
   140012f55:	sub    rsp,0x38
   140012f59:	mov    rax,QWORD PTR [rsp+0x40]
   140012f5e:	mov    rcx,QWORD PTR [rax]
   140012f61:	call   0x1400138d0
   140012f66:	movsx  eax,BYTE PTR [rax]
   140012f69:	test   eax,eax
   140012f6b:	je     0x140012f72
   140012f6d:	jmp    0x140013006
   140012f72:	mov    rax,QWORD PTR [rsp+0x40]
   140012f77:	mov    rcx,QWORD PTR [rax]
   140012f7a:	call   0x140013be0
   140012f7f:	mov    rcx,QWORD PTR [rax]
   140012f82:	call   0x1400138d0
   140012f87:	movsx  eax,BYTE PTR [rax]
   140012f8a:	test   eax,eax
   140012f8c:	jne    0x140012fad
   140012f8e:	mov    rax,QWORD PTR [rsp+0x40]
   140012f93:	mov    rcx,QWORD PTR [rax]
   140012f96:	call   0x140013be0
   140012f9b:	mov    rcx,QWORD PTR [rax]
   140012f9e:	call   0x140013b70
   140012fa3:	mov    rcx,QWORD PTR [rsp+0x40]
   140012fa8:	mov    QWORD PTR [rcx],rax
   140012fab:	jmp    0x140013006
   140012fad:	mov    rax,QWORD PTR [rsp+0x40]
   140012fb2:	mov    rcx,QWORD PTR [rax]
   140012fb5:	call   0x140013bd0
   140012fba:	mov    rax,QWORD PTR [rax]
   140012fbd:	mov    QWORD PTR [rsp+0x20],rax
   140012fc2:	mov    rcx,QWORD PTR [rsp+0x20]
   140012fc7:	call   0x1400138d0
   140012fcc:	movsx  eax,BYTE PTR [rax]
   140012fcf:	test   eax,eax
   140012fd1:	jne    0x140012ff9
   140012fd3:	mov    rcx,QWORD PTR [rsp+0x20]
   140012fd8:	call   0x140013be0
   140012fdd:	mov    rcx,QWORD PTR [rsp+0x40]
   140012fe2:	mov    rax,QWORD PTR [rax]
   140012fe5:	cmp    QWORD PTR [rcx],rax
   140012fe8:	jne    0x140012ff9
   140012fea:	mov    rax,QWORD PTR [rsp+0x40]
   140012fef:	mov    rcx,QWORD PTR [rsp+0x20]
   140012ff4:	mov    QWORD PTR [rax],rcx
   140012ff7:	jmp    0x140012fad
   140012ff9:	mov    rax,QWORD PTR [rsp+0x40]
   140012ffe:	mov    rcx,QWORD PTR [rsp+0x20]
   140013003:	mov    QWORD PTR [rax],rcx
   140013006:	mov    rax,QWORD PTR [rsp+0x40]
   14001300b:	add    rsp,0x38
   14001300f:	ret    
   140013010:	mov    QWORD PTR [rsp+0x8],rcx
   140013015:	sub    rsp,0x28
   140013019:	mov    rcx,QWORD PTR [rsp+0x30]
   14001301e:	call   0x140013050
   140013023:	mov    rax,QWORD PTR [rsp+0x30]
   140013028:	add    rsp,0x28
   14001302c:	ret    
   14001302d:	int3   
   14001302e:	int3   
   14001302f:	int3   
   140013030:	mov    QWORD PTR [rsp+0x8],rcx
   140013035:	sub    rsp,0x28
   140013039:	mov    rcx,QWORD PTR [rsp+0x30]
   14001303e:	call   0x140013010
   140013043:	mov    rax,QWORD PTR [rsp+0x30]
   140013048:	add    rsp,0x28
   14001304c:	ret    
   14001304d:	int3   
   14001304e:	int3   
   14001304f:	int3   
   140013050:	mov    QWORD PTR [rsp+0x8],rcx
   140013055:	sub    rsp,0x38
   140013059:	mov    rax,QWORD PTR [rsp+0x40]
   14001305e:	mov    rcx,QWORD PTR [rax]
   140013061:	call   0x1400138d0
   140013066:	movsx  eax,BYTE PTR [rax]
   140013069:	test   eax,eax
   14001306b:	je     0x14001308a
   14001306d:	mov    rax,QWORD PTR [rsp+0x40]
   140013072:	mov    rcx,QWORD PTR [rax]
   140013075:	call   0x140013be0
   14001307a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001307f:	mov    rax,QWORD PTR [rax]
   140013082:	mov    QWORD PTR [rcx],rax
   140013085:	jmp    0x140013134
   14001308a:	mov    rax,QWORD PTR [rsp+0x40]
   14001308f:	mov    rcx,QWORD PTR [rax]
   140013092:	call   0x140012640
   140013097:	mov    rcx,QWORD PTR [rax]
   14001309a:	call   0x1400138d0
   14001309f:	movsx  eax,BYTE PTR [rax]
   1400130a2:	test   eax,eax
   1400130a4:	jne    0x1400130c5
   1400130a6:	mov    rax,QWORD PTR [rsp+0x40]
   1400130ab:	mov    rcx,QWORD PTR [rax]
   1400130ae:	call   0x140012640
   1400130b3:	mov    rcx,QWORD PTR [rax]
   1400130b6:	call   0x140013b30
   1400130bb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400130c0:	mov    QWORD PTR [rcx],rax
   1400130c3:	jmp    0x140013134
   1400130c5:	mov    rax,QWORD PTR [rsp+0x40]
   1400130ca:	mov    rcx,QWORD PTR [rax]
   1400130cd:	call   0x140013bd0
   1400130d2:	mov    rax,QWORD PTR [rax]
   1400130d5:	mov    QWORD PTR [rsp+0x20],rax
   1400130da:	mov    rcx,QWORD PTR [rsp+0x20]
   1400130df:	call   0x1400138d0
   1400130e4:	movsx  eax,BYTE PTR [rax]
   1400130e7:	test   eax,eax
   1400130e9:	jne    0x140013111
   1400130eb:	mov    rcx,QWORD PTR [rsp+0x20]
   1400130f0:	call   0x140012640
   1400130f5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400130fa:	mov    rax,QWORD PTR [rax]
   1400130fd:	cmp    QWORD PTR [rcx],rax
   140013100:	jne    0x140013111
   140013102:	mov    rax,QWORD PTR [rsp+0x40]
   140013107:	mov    rcx,QWORD PTR [rsp+0x20]
   14001310c:	mov    QWORD PTR [rax],rcx
   14001310f:	jmp    0x1400130c5
   140013111:	mov    rax,QWORD PTR [rsp+0x40]
   140013116:	mov    rcx,QWORD PTR [rax]
   140013119:	call   0x1400138d0
   14001311e:	movsx  eax,BYTE PTR [rax]
   140013121:	test   eax,eax
   140013123:	je     0x140013127
   140013125:	jmp    0x140013134
   140013127:	mov    rax,QWORD PTR [rsp+0x40]
   14001312c:	mov    rcx,QWORD PTR [rsp+0x20]
   140013131:	mov    QWORD PTR [rax],rcx
   140013134:	mov    rax,QWORD PTR [rsp+0x40]
   140013139:	add    rsp,0x38
   14001313d:	ret    
   14001313e:	int3   
   14001313f:	int3   
   140013140:	mov    QWORD PTR [rsp+0x18],r8
   140013145:	mov    QWORD PTR [rsp+0x10],rdx
   14001314a:	mov    QWORD PTR [rsp+0x8],rcx
   14001314f:	sub    rsp,0x58
   140013153:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001315c:	mov    DWORD PTR [rsp+0x20],0x0
   140013164:	mov    rdx,QWORD PTR [rsp+0x68]
   140013169:	lea    rcx,[rsp+0x30]
   14001316e:	call   0x140009f20
   140013173:	nop
   140013174:	mov    rdx,QWORD PTR [rsp+0x70]
   140013179:	lea    rcx,[rsp+0x30]
   14001317e:	call   0x14000a3e0
   140013183:	lea    rdx,[rsp+0x30]
   140013188:	mov    rcx,QWORD PTR [rsp+0x60]
   14001318d:	call   0x140009e90
   140013192:	mov    eax,DWORD PTR [rsp+0x20]
   140013196:	or     eax,0x1
   140013199:	mov    DWORD PTR [rsp+0x20],eax
   14001319d:	lea    rcx,[rsp+0x30]
   1400131a2:	call   0x140009e60
   1400131a7:	mov    rax,QWORD PTR [rsp+0x60]
   1400131ac:	add    rsp,0x58
   1400131b0:	ret    
   1400131b1:	int3   
   1400131b2:	int3   
   1400131b3:	int3   
   1400131b4:	int3   
   1400131b5:	int3   
   1400131b6:	int3   
   1400131b7:	int3   
   1400131b8:	int3   
   1400131b9:	int3   
   1400131ba:	int3   
   1400131bb:	int3   
   1400131bc:	int3   
   1400131bd:	int3   
   1400131be:	int3   
   1400131bf:	int3   
   1400131c0:	mov    QWORD PTR [rsp+0x18],r8
   1400131c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400131ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400131cf:	sub    rsp,0x18
   1400131d3:	mov    rax,QWORD PTR [rsp+0x28]
   1400131d8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400131dd:	mov    ecx,DWORD PTR [rcx]
   1400131df:	cmp    DWORD PTR [rax],ecx
   1400131e1:	jge    0x1400131ec
   1400131e3:	mov    DWORD PTR [rsp],0x1
   1400131ea:	jmp    0x1400131f3
   1400131ec:	mov    DWORD PTR [rsp],0x0
   1400131f3:	movzx  eax,BYTE PTR [rsp]
   1400131f7:	add    rsp,0x18
   1400131fb:	ret    
   1400131fc:	int3   
   1400131fd:	int3   
   1400131fe:	int3   
   1400131ff:	int3   
   140013200:	mov    DWORD PTR [rsp+0x10],edx
   140013204:	mov    QWORD PTR [rsp+0x8],rcx
   140013209:	sub    rsp,0x28
   14001320d:	mov    rcx,QWORD PTR [rsp+0x30]
   140013212:	call   0x140012bf0
   140013217:	mov    eax,DWORD PTR [rsp+0x38]
   14001321b:	and    eax,0x1
   14001321e:	test   eax,eax
   140013220:	je     0x14001322c
   140013222:	mov    rcx,QWORD PTR [rsp+0x30]
   140013227:	call   0x140020b90
   14001322c:	mov    rax,QWORD PTR [rsp+0x30]
   140013231:	add    rsp,0x28
   140013235:	ret    
   140013236:	int3   
   140013237:	int3   
   140013238:	int3   
   140013239:	int3   
   14001323a:	int3   
   14001323b:	int3   
   14001323c:	int3   
   14001323d:	int3   
   14001323e:	int3   
   14001323f:	int3   
   140013240:	mov    QWORD PTR [rsp+0x8],rcx
   140013245:	sub    rsp,0x58
   140013249:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140013252:	lea    rdx,[rsp+0x2a]
   140013257:	mov    rcx,QWORD PTR [rsp+0x60]
   14001325c:	call   0x140013840
   140013261:	mov    edx,0x1
   140013266:	mov    rcx,rax
   140013269:	call   0x140013e30
   14001326e:	mov    QWORD PTR [rsp+0x20],rax
   140013273:	mov    rcx,QWORD PTR [rsp+0x20]
   140013278:	call   0x140012640
   14001327d:	mov    rcx,rax
   140013280:	call   0x140012640
   140013285:	mov    QWORD PTR [rsp+0x30],rax
   14001328a:	lea    rdx,[rsp+0x29]
   14001328f:	mov    rcx,QWORD PTR [rsp+0x60]
   140013294:	call   0x140013840
   140013299:	lea    r8,[rsp+0x20]
   14001329e:	mov    rcx,QWORD PTR [rsp+0x30]
   1400132a3:	mov    rdx,rcx
   1400132a6:	mov    rcx,rax
   1400132a9:	call   0x140012020
   1400132ae:	mov    rcx,QWORD PTR [rsp+0x20]
   1400132b3:	call   0x140013bd0
   1400132b8:	mov    rcx,rax
   1400132bb:	call   0x140012640
   1400132c0:	mov    QWORD PTR [rsp+0x40],rax
   1400132c5:	lea    rdx,[rsp+0x2c]
   1400132ca:	mov    rcx,QWORD PTR [rsp+0x60]
   1400132cf:	call   0x140013840
   1400132d4:	lea    r8,[rsp+0x20]
   1400132d9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400132de:	mov    rdx,rcx
   1400132e1:	mov    rcx,rax
   1400132e4:	call   0x140012020
   1400132e9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400132ee:	call   0x140013be0
   1400132f3:	mov    rcx,rax
   1400132f6:	call   0x140012640
   1400132fb:	mov    QWORD PTR [rsp+0x38],rax
   140013300:	lea    rdx,[rsp+0x2b]
   140013305:	mov    rcx,QWORD PTR [rsp+0x60]
   14001330a:	call   0x140013840
   14001330f:	lea    r8,[rsp+0x20]
   140013314:	mov    rcx,QWORD PTR [rsp+0x38]
   140013319:	mov    rdx,rcx
   14001331c:	mov    rcx,rax
   14001331f:	call   0x140012020
   140013324:	nop
   140013325:	jmp    0x140013327
   140013327:	mov    rcx,QWORD PTR [rsp+0x20]
   14001332c:	call   0x140013530
   140013331:	mov    BYTE PTR [rax],0x1
   140013334:	mov    rcx,QWORD PTR [rsp+0x20]
   140013339:	call   0x1400138d0
   14001333e:	mov    BYTE PTR [rax],0x1
   140013341:	mov    rax,QWORD PTR [rsp+0x20]
   140013346:	add    rsp,0x58
   14001334a:	ret    
   14001334b:	int3   
   14001334c:	int3   
   14001334d:	int3   
   14001334e:	int3   
   14001334f:	int3   
   140013350:	mov    QWORD PTR [rsp+0x18],r8
   140013355:	mov    QWORD PTR [rsp+0x10],rdx
   14001335a:	mov    QWORD PTR [rsp+0x8],rcx
   14001335f:	sub    rsp,0x58
   140013363:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001336c:	lea    rdx,[rsp+0x20]
   140013371:	mov    rcx,QWORD PTR [rsp+0x60]
   140013376:	call   0x140013840
   14001337b:	mov    edx,0x1
   140013380:	mov    rcx,rax
   140013383:	call   0x140013e00
   140013388:	mov    QWORD PTR [rsp+0x28],rax
   14001338d:	cmp    QWORD PTR [rsp+0x68],0x0
   140013393:	jne    0x1400133a9
   140013395:	mov    rax,QWORD PTR [rsp+0x28]
   14001339a:	mov    QWORD PTR [rsp+0x68],rax
   14001339f:	mov    rax,QWORD PTR [rsp+0x28]
   1400133a4:	mov    QWORD PTR [rsp+0x70],rax
   1400133a9:	mov    rcx,QWORD PTR [rsp+0x28]
   1400133ae:	call   0x140012640
   1400133b3:	mov    rcx,rax
   1400133b6:	call   0x140012640
   1400133bb:	mov    QWORD PTR [rsp+0x30],rax
   1400133c0:	lea    rdx,[rsp+0x21]
   1400133c5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400133ca:	call   0x140013840
   1400133cf:	lea    r8,[rsp+0x68]
   1400133d4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400133d9:	mov    rdx,rcx
   1400133dc:	mov    rcx,rax
   1400133df:	call   0x140011f20
   1400133e4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400133e9:	call   0x140013bd0
   1400133ee:	mov    rcx,rax
   1400133f1:	call   0x140012640
   1400133f6:	mov    QWORD PTR [rsp+0x38],rax
   1400133fb:	lea    rdx,[rsp+0x22]
   140013400:	mov    rcx,QWORD PTR [rsp+0x60]
   140013405:	call   0x140013840
   14001340a:	lea    r8,[rsp+0x70]
   14001340f:	mov    rcx,QWORD PTR [rsp+0x38]
   140013414:	mov    rdx,rcx
   140013417:	mov    rcx,rax
   14001341a:	call   0x140011f20
   14001341f:	nop
   140013420:	jmp    0x140013422
   140013422:	mov    rax,QWORD PTR [rsp+0x28]
   140013427:	add    rsp,0x58
   14001342b:	ret    
   14001342c:	int3   
   14001342d:	int3   
   14001342e:	int3   
   14001342f:	int3   
   140013430:	mov    QWORD PTR [rsp+0x8],rcx
   140013435:	sub    rsp,0x58
   140013439:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140013442:	lea    rdx,[rsp+0x24]
   140013447:	mov    rcx,QWORD PTR [rsp+0x60]
   14001344c:	call   0x140013840
   140013451:	mov    edx,0x1
   140013456:	mov    rcx,rax
   140013459:	call   0x140013e30
   14001345e:	mov    QWORD PTR [rsp+0x28],rax
   140013463:	mov    rcx,QWORD PTR [rsp+0x28]
   140013468:	call   0x140012640
   14001346d:	mov    rcx,rax
   140013470:	call   0x140012640
   140013475:	mov    QWORD PTR [rsp+0x40],rax
   14001347a:	lea    rdx,[rsp+0x23]
   14001347f:	mov    rcx,QWORD PTR [rsp+0x60]
   140013484:	call   0x140013840
   140013489:	mov    r8,QWORD PTR [rsp+0x60]
   14001348e:	mov    rcx,QWORD PTR [rsp+0x40]
   140013493:	mov    rdx,rcx
   140013496:	mov    rcx,rax
   140013499:	call   0x140012020
   14001349e:	mov    rcx,QWORD PTR [rsp+0x28]
   1400134a3:	call   0x140013bd0
   1400134a8:	mov    rcx,rax
   1400134ab:	call   0x140012640
   1400134b0:	mov    QWORD PTR [rsp+0x30],rax
   1400134b5:	lea    rdx,[rsp+0x21]
   1400134ba:	mov    rcx,QWORD PTR [rsp+0x60]
   1400134bf:	call   0x140013840
   1400134c4:	mov    r8,QWORD PTR [rsp+0x60]
   1400134c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400134ce:	mov    rdx,rcx
   1400134d1:	mov    rcx,rax
   1400134d4:	call   0x140012020
   1400134d9:	mov    rcx,QWORD PTR [rsp+0x28]
   1400134de:	call   0x140013be0
   1400134e3:	mov    rcx,rax
   1400134e6:	call   0x140012640
   1400134eb:	mov    QWORD PTR [rsp+0x38],rax
   1400134f0:	lea    rdx,[rsp+0x22]
   1400134f5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400134fa:	call   0x140013840
   1400134ff:	mov    r8,QWORD PTR [rsp+0x60]
   140013504:	mov    rcx,QWORD PTR [rsp+0x38]
   140013509:	mov    rdx,rcx
   14001350c:	mov    rcx,rax
   14001350f:	call   0x140012020
   140013514:	nop
   140013515:	jmp    0x140013517
   140013517:	mov    rax,QWORD PTR [rsp+0x28]
   14001351c:	add    rsp,0x58
   140013520:	ret    
   140013521:	int3   
   140013522:	int3   
   140013523:	int3   
   140013524:	int3   
   140013525:	int3   
   140013526:	int3   
   140013527:	int3   
   140013528:	int3   
   140013529:	int3   
   14001352a:	int3   
   14001352b:	int3   
   14001352c:	int3   
   14001352d:	int3   
   14001352e:	int3   
   14001352f:	int3   
   140013530:	mov    QWORD PTR [rsp+0x8],rcx
   140013535:	mov    rax,QWORD PTR [rsp+0x8]
   14001353a:	add    rax,0x18
   14001353e:	ret    
   14001353f:	int3   
   140013540:	mov    QWORD PTR [rsp+0x10],rdx
   140013545:	mov    QWORD PTR [rsp+0x8],rcx
   14001354a:	sub    rsp,0x38
   14001354e:	mov    rcx,QWORD PTR [rsp+0x48]
   140013553:	call   0x140013bc0
   140013558:	mov    rcx,rax
   14001355b:	call   0x140012640
   140013560:	mov    QWORD PTR [rsp+0x28],rax
   140013565:	lea    rdx,[rsp+0x20]
   14001356a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001356f:	call   0x140013840
   140013574:	mov    rcx,QWORD PTR [rsp+0x28]
   140013579:	mov    rdx,rcx
   14001357c:	mov    rcx,rax
   14001357f:	call   0x140012440
   140013584:	lea    rdx,[rsp+0x21]
   140013589:	mov    rcx,QWORD PTR [rsp+0x40]
   14001358e:	call   0x140013840
   140013593:	mov    r8d,0x1
   140013599:	mov    rdx,QWORD PTR [rsp+0x48]
   14001359e:	mov    rcx,rax
   1400135a1:	call   0x140014000
   1400135a6:	add    rsp,0x38
   1400135aa:	ret    
   1400135ab:	int3   
   1400135ac:	int3   
   1400135ad:	int3   
   1400135ae:	int3   
   1400135af:	int3   
   1400135b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400135b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400135ba:	sub    rsp,0x48
   1400135be:	mov    rax,QWORD PTR [rsp+0x58]
   1400135c3:	mov    QWORD PTR [rsp+0x28],rax
   1400135c8:	jmp    0x1400135d4
   1400135ca:	mov    rax,QWORD PTR [rsp+0x28]
   1400135cf:	mov    QWORD PTR [rsp+0x58],rax
   1400135d4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400135d9:	call   0x1400138d0
   1400135de:	movsx  eax,BYTE PTR [rax]
   1400135e1:	test   eax,eax
   1400135e3:	jne    0x14001366f
   1400135e9:	mov    rcx,QWORD PTR [rsp+0x28]
   1400135ee:	call   0x140013be0
   1400135f3:	mov    rdx,QWORD PTR [rax]
   1400135f6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400135fb:	call   0x1400135b0
   140013600:	mov    rcx,QWORD PTR [rsp+0x28]
   140013605:	call   0x140012640
   14001360a:	mov    rax,QWORD PTR [rax]
   14001360d:	mov    QWORD PTR [rsp+0x28],rax
   140013612:	mov    rcx,QWORD PTR [rsp+0x58]
   140013617:	call   0x140013bc0
   14001361c:	mov    rcx,rax
   14001361f:	call   0x140012640
   140013624:	mov    QWORD PTR [rsp+0x30],rax
   140013629:	lea    rdx,[rsp+0x20]
   14001362e:	mov    rcx,QWORD PTR [rsp+0x50]
   140013633:	call   0x140013840
   140013638:	mov    rcx,QWORD PTR [rsp+0x30]
   14001363d:	mov    rdx,rcx
   140013640:	mov    rcx,rax
   140013643:	call   0x140012440
   140013648:	lea    rdx,[rsp+0x21]
   14001364d:	mov    rcx,QWORD PTR [rsp+0x50]
   140013652:	call   0x140013840
   140013657:	mov    r8d,0x1
   14001365d:	mov    rdx,QWORD PTR [rsp+0x58]
   140013662:	mov    rcx,rax
   140013665:	call   0x140014000
   14001366a:	jmp    0x1400135ca
   14001366f:	add    rsp,0x48
   140013673:	ret    
   140013674:	int3   
   140013675:	int3   
   140013676:	int3   
   140013677:	int3   
   140013678:	int3   
   140013679:	int3   
   14001367a:	int3   
   14001367b:	int3   
   14001367c:	int3   
   14001367d:	int3   
   14001367e:	int3   
   14001367f:	int3   
   140013680:	mov    QWORD PTR [rsp+0x10],rdx
   140013685:	mov    QWORD PTR [rsp+0x8],rcx
   14001368a:	sub    rsp,0x48
   14001368e:	mov    rcx,QWORD PTR [rsp+0x58]
   140013693:	call   0x140012640
   140013698:	mov    rcx,rax
   14001369b:	call   0x140012640
   1400136a0:	mov    QWORD PTR [rsp+0x28],rax
   1400136a5:	lea    rdx,[rsp+0x20]
   1400136aa:	mov    rcx,QWORD PTR [rsp+0x50]
   1400136af:	call   0x140013840
   1400136b4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400136b9:	mov    rdx,rcx
   1400136bc:	mov    rcx,rax
   1400136bf:	call   0x1400123e0
   1400136c4:	mov    rcx,QWORD PTR [rsp+0x58]
   1400136c9:	call   0x140013bd0
   1400136ce:	mov    rcx,rax
   1400136d1:	call   0x140012640
   1400136d6:	mov    QWORD PTR [rsp+0x30],rax
   1400136db:	lea    rdx,[rsp+0x21]
   1400136e0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400136e5:	call   0x140013840
   1400136ea:	mov    rcx,QWORD PTR [rsp+0x30]
   1400136ef:	mov    rdx,rcx
   1400136f2:	mov    rcx,rax
   1400136f5:	call   0x1400123e0
   1400136fa:	mov    rcx,QWORD PTR [rsp+0x58]
   1400136ff:	call   0x140013be0
   140013704:	mov    rcx,rax
   140013707:	call   0x140012640
   14001370c:	mov    QWORD PTR [rsp+0x38],rax
   140013711:	lea    rdx,[rsp+0x22]
   140013716:	mov    rcx,QWORD PTR [rsp+0x50]
   14001371b:	call   0x140013840
   140013720:	mov    rcx,QWORD PTR [rsp+0x38]
   140013725:	mov    rdx,rcx
   140013728:	mov    rcx,rax
   14001372b:	call   0x1400123e0
   140013730:	lea    rdx,[rsp+0x23]
   140013735:	mov    rcx,QWORD PTR [rsp+0x50]
   14001373a:	call   0x140013840
   14001373f:	mov    r8d,0x1
   140013745:	mov    rdx,QWORD PTR [rsp+0x58]
   14001374a:	mov    rcx,rax
   14001374d:	call   0x140014000
   140013752:	add    rsp,0x48
   140013756:	ret    
   140013757:	int3   
   140013758:	int3   
   140013759:	int3   
   14001375a:	int3   
   14001375b:	int3   
   14001375c:	int3   
   14001375d:	int3   
   14001375e:	int3   
   14001375f:	int3   
   140013760:	mov    QWORD PTR [rsp+0x10],rdx
   140013765:	mov    QWORD PTR [rsp+0x8],rcx
   14001376a:	sub    rsp,0x48
   14001376e:	mov    rcx,QWORD PTR [rsp+0x58]
   140013773:	call   0x140012640
   140013778:	mov    rcx,rax
   14001377b:	call   0x140012640
   140013780:	mov    QWORD PTR [rsp+0x28],rax
   140013785:	lea    rdx,[rsp+0x20]
   14001378a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001378f:	call   0x140013840
   140013794:	mov    rcx,QWORD PTR [rsp+0x28]
   140013799:	mov    rdx,rcx
   14001379c:	mov    rcx,rax
   14001379f:	call   0x1400123e0
   1400137a4:	mov    rcx,QWORD PTR [rsp+0x58]
   1400137a9:	call   0x140013bd0
   1400137ae:	mov    rcx,rax
   1400137b1:	call   0x140012640
   1400137b6:	mov    QWORD PTR [rsp+0x30],rax
   1400137bb:	lea    rdx,[rsp+0x21]
   1400137c0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400137c5:	call   0x140013840
   1400137ca:	mov    rcx,QWORD PTR [rsp+0x30]
   1400137cf:	mov    rdx,rcx
   1400137d2:	mov    rcx,rax
   1400137d5:	call   0x1400123e0
   1400137da:	mov    rcx,QWORD PTR [rsp+0x58]
   1400137df:	call   0x140013be0
   1400137e4:	mov    rcx,rax
   1400137e7:	call   0x140012640
   1400137ec:	mov    QWORD PTR [rsp+0x38],rax
   1400137f1:	lea    rdx,[rsp+0x22]
   1400137f6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400137fb:	call   0x140013840
   140013800:	mov    rcx,QWORD PTR [rsp+0x38]
   140013805:	mov    rdx,rcx
   140013808:	mov    rcx,rax
   14001380b:	call   0x1400124c0
   140013810:	lea    rdx,[rsp+0x23]
   140013815:	mov    rcx,QWORD PTR [rsp+0x50]
   14001381a:	call   0x140013840
   14001381f:	mov    r8d,0x1
   140013825:	mov    rdx,QWORD PTR [rsp+0x58]
   14001382a:	mov    rcx,rax
   14001382d:	call   0x140014000
   140013832:	add    rsp,0x48
   140013836:	ret    
   140013837:	int3   
   140013838:	int3   
   140013839:	int3   
   14001383a:	int3   
   14001383b:	int3   
   14001383c:	int3   
   14001383d:	int3   
   14001383e:	int3   
   14001383f:	int3   
   140013840:	mov    QWORD PTR [rsp+0x10],rdx
   140013845:	mov    QWORD PTR [rsp+0x8],rcx
   14001384a:	sub    rsp,0x28
   14001384e:	mov    rcx,QWORD PTR [rsp+0x38]
   140013853:	call   0x1400128f0
   140013858:	mov    rax,QWORD PTR [rsp+0x38]
   14001385d:	add    rsp,0x28
   140013861:	ret    
   140013862:	int3   
   140013863:	int3   
   140013864:	int3   
   140013865:	int3   
   140013866:	int3   
   140013867:	int3   
   140013868:	int3   
   140013869:	int3   
   14001386a:	int3   
   14001386b:	int3   
   14001386c:	int3   
   14001386d:	int3   
   14001386e:	int3   
   14001386f:	int3   
   140013870:	mov    QWORD PTR [rsp+0x10],rdx
   140013875:	mov    QWORD PTR [rsp+0x8],rcx
   14001387a:	sub    rsp,0x28
   14001387e:	mov    rcx,QWORD PTR [rsp+0x30]
   140013883:	call   0x140014ac0
   140013888:	mov    rcx,QWORD PTR [rsp+0x30]
   14001388d:	sub    rax,QWORD PTR [rcx+0x8]
   140013891:	dec    rax
   140013894:	cmp    rax,QWORD PTR [rsp+0x38]
   140013899:	jae    0x1400138a8
   14001389b:	lea    rcx,[rip+0x19b26]        # 0x14002d3c8
   1400138a2:	call   QWORD PTR [rip+0x12998]        # 0x140026240
   1400138a8:	mov    rax,QWORD PTR [rsp+0x30]
   1400138ad:	mov    rax,QWORD PTR [rax+0x8]
   1400138b1:	add    rax,QWORD PTR [rsp+0x38]
   1400138b6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400138bb:	mov    QWORD PTR [rcx+0x8],rax
   1400138bf:	add    rsp,0x28
   1400138c3:	ret    
   1400138c4:	int3   
   1400138c5:	int3   
   1400138c6:	int3   
   1400138c7:	int3   
   1400138c8:	int3   
   1400138c9:	int3   
   1400138ca:	int3   
   1400138cb:	int3   
   1400138cc:	int3   
   1400138cd:	int3   
   1400138ce:	int3   
   1400138cf:	int3   
   1400138d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400138d5:	mov    rax,QWORD PTR [rsp+0x8]
   1400138da:	add    rax,0x19
   1400138de:	ret    
   1400138df:	int3   
   1400138e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400138e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400138ea:	sub    rsp,0x28
   1400138ee:	mov    rcx,QWORD PTR [rsp+0x38]
   1400138f3:	call   0x140013bc0
   1400138f8:	mov    rdx,rax
   1400138fb:	mov    rcx,QWORD PTR [rsp+0x30]
   140013900:	call   0x140013910
   140013905:	add    rsp,0x28
   140013909:	ret    
   14001390a:	int3   
   14001390b:	int3   
   14001390c:	int3   
   14001390d:	int3   
   14001390e:	int3   
   14001390f:	int3   
   140013910:	mov    QWORD PTR [rsp+0x10],rdx
   140013915:	mov    QWORD PTR [rsp+0x8],rcx
   14001391a:	sub    rsp,0x28
   14001391e:	mov    rcx,QWORD PTR [rsp+0x38]
   140013923:	call   0x140012640
   140013928:	add    rsp,0x28
   14001392c:	ret    
   14001392d:	int3   
   14001392e:	int3   
   14001392f:	int3   
   140013930:	mov    QWORD PTR [rsp+0x10],rdx
   140013935:	mov    QWORD PTR [rsp+0x8],rcx
   14001393a:	sub    rsp,0x48
   14001393e:	mov    rcx,QWORD PTR [rsp+0x50]
   140013943:	call   0x140013c10
   140013948:	mov    rax,QWORD PTR [rax]
   14001394b:	mov    QWORD PTR [rsp+0x28],rax
   140013950:	mov    rax,QWORD PTR [rsp+0x50]
   140013955:	mov    rax,QWORD PTR [rax]
   140013958:	mov    QWORD PTR [rsp+0x30],rax
   14001395d:	mov    rcx,QWORD PTR [rsp+0x28]
   140013962:	call   0x1400138d0
   140013967:	movsx  eax,BYTE PTR [rax]
   14001396a:	test   eax,eax
   14001396c:	jne    0x1400139e2
   14001396e:	mov    rdx,QWORD PTR [rsp+0x28]
   140013973:	mov    rcx,QWORD PTR [rsp+0x50]
   140013978:	call   0x1400138e0
   14001397d:	mov    QWORD PTR [rsp+0x38],rax
   140013982:	lea    rdx,[rsp+0x20]
   140013987:	mov    rcx,QWORD PTR [rsp+0x50]
   14001398c:	call   0x140012c20
   140013991:	mov    r8,QWORD PTR [rsp+0x58]
   140013996:	mov    rcx,QWORD PTR [rsp+0x38]
   14001399b:	mov    rdx,rcx
   14001399e:	mov    rcx,rax
   1400139a1:	call   0x1400131c0
   1400139a6:	movzx  eax,al
   1400139a9:	test   eax,eax
   1400139ab:	je     0x1400139c1
   1400139ad:	mov    rcx,QWORD PTR [rsp+0x28]
   1400139b2:	call   0x140013be0
   1400139b7:	mov    rax,QWORD PTR [rax]
   1400139ba:	mov    QWORD PTR [rsp+0x28],rax
   1400139bf:	jmp    0x1400139dd
   1400139c1:	mov    rax,QWORD PTR [rsp+0x28]
   1400139c6:	mov    QWORD PTR [rsp+0x30],rax
   1400139cb:	mov    rcx,QWORD PTR [rsp+0x28]
   1400139d0:	call   0x140012640
   1400139d5:	mov    rax,QWORD PTR [rax]
   1400139d8:	mov    QWORD PTR [rsp+0x28],rax
   1400139dd:	jmp    0x14001395d
   1400139e2:	mov    rax,QWORD PTR [rsp+0x30]
   1400139e7:	add    rsp,0x48
   1400139eb:	ret    
   1400139ec:	int3   
   1400139ed:	int3   
   1400139ee:	int3   
   1400139ef:	int3   
   1400139f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400139f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400139fa:	sub    rsp,0x48
   1400139fe:	mov    rcx,QWORD PTR [rsp+0x58]
   140013a03:	call   0x140013be0
   140013a08:	mov    rax,QWORD PTR [rax]
   140013a0b:	mov    QWORD PTR [rsp+0x20],rax
   140013a10:	mov    rcx,QWORD PTR [rsp+0x20]
   140013a15:	call   0x140012640
   140013a1a:	mov    QWORD PTR [rsp+0x28],rax
   140013a1f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013a24:	call   0x140013be0
   140013a29:	mov    rcx,QWORD PTR [rsp+0x28]
   140013a2e:	mov    rcx,QWORD PTR [rcx]
   140013a31:	mov    QWORD PTR [rax],rcx
   140013a34:	mov    rcx,QWORD PTR [rsp+0x20]
   140013a39:	call   0x140012640
   140013a3e:	mov    rcx,QWORD PTR [rax]
   140013a41:	call   0x1400138d0
   140013a46:	movsx  eax,BYTE PTR [rax]
   140013a49:	test   eax,eax
   140013a4b:	jne    0x140013a67
   140013a4d:	mov    rcx,QWORD PTR [rsp+0x20]
   140013a52:	call   0x140012640
   140013a57:	mov    rcx,QWORD PTR [rax]
   140013a5a:	call   0x140013bd0
   140013a5f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013a64:	mov    QWORD PTR [rax],rcx
   140013a67:	mov    rcx,QWORD PTR [rsp+0x58]
   140013a6c:	call   0x140013bd0
   140013a71:	mov    QWORD PTR [rsp+0x30],rax
   140013a76:	mov    rcx,QWORD PTR [rsp+0x20]
   140013a7b:	call   0x140013bd0
   140013a80:	mov    rcx,QWORD PTR [rsp+0x30]
   140013a85:	mov    rcx,QWORD PTR [rcx]
   140013a88:	mov    QWORD PTR [rax],rcx
   140013a8b:	mov    rcx,QWORD PTR [rsp+0x50]
   140013a90:	call   0x140013c10
   140013a95:	mov    rax,QWORD PTR [rax]
   140013a98:	cmp    QWORD PTR [rsp+0x58],rax
   140013a9d:	jne    0x140013ab3
   140013a9f:	mov    rcx,QWORD PTR [rsp+0x50]
   140013aa4:	call   0x140013c10
   140013aa9:	mov    rcx,QWORD PTR [rsp+0x20]
   140013aae:	mov    QWORD PTR [rax],rcx
   140013ab1:	jmp    0x140013b05
   140013ab3:	mov    rcx,QWORD PTR [rsp+0x58]
   140013ab8:	call   0x140013bd0
   140013abd:	mov    rcx,QWORD PTR [rax]
   140013ac0:	call   0x140012640
   140013ac5:	mov    rax,QWORD PTR [rax]
   140013ac8:	cmp    QWORD PTR [rsp+0x58],rax
   140013acd:	jne    0x140013aeb
   140013acf:	mov    rcx,QWORD PTR [rsp+0x58]
   140013ad4:	call   0x140013bd0
   140013ad9:	mov    rcx,QWORD PTR [rax]
   140013adc:	call   0x140012640
   140013ae1:	mov    rcx,QWORD PTR [rsp+0x20]
   140013ae6:	mov    QWORD PTR [rax],rcx
   140013ae9:	jmp    0x140013b05
   140013aeb:	mov    rcx,QWORD PTR [rsp+0x58]
   140013af0:	call   0x140013bd0
   140013af5:	mov    rcx,QWORD PTR [rax]
   140013af8:	call   0x140013be0
   140013afd:	mov    rcx,QWORD PTR [rsp+0x20]
   140013b02:	mov    QWORD PTR [rax],rcx
   140013b05:	mov    rcx,QWORD PTR [rsp+0x20]
   140013b0a:	call   0x140012640
   140013b0f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013b14:	mov    QWORD PTR [rax],rcx
   140013b17:	mov    rcx,QWORD PTR [rsp+0x58]
   140013b1c:	call   0x140013bd0
   140013b21:	mov    rcx,QWORD PTR [rsp+0x20]
   140013b26:	mov    QWORD PTR [rax],rcx
   140013b29:	add    rsp,0x48
   140013b2d:	ret    
   140013b2e:	int3   
   140013b2f:	int3   
   140013b30:	mov    QWORD PTR [rsp+0x8],rcx
   140013b35:	sub    rsp,0x28
   140013b39:	mov    rcx,QWORD PTR [rsp+0x30]
   140013b3e:	call   0x140013be0
   140013b43:	mov    rcx,QWORD PTR [rax]
   140013b46:	call   0x1400138d0
   140013b4b:	movsx  eax,BYTE PTR [rax]
   140013b4e:	test   eax,eax
   140013b50:	jne    0x140013b66
   140013b52:	mov    rcx,QWORD PTR [rsp+0x30]
   140013b57:	call   0x140013be0
   140013b5c:	mov    rax,QWORD PTR [rax]
   140013b5f:	mov    QWORD PTR [rsp+0x30],rax
   140013b64:	jmp    0x140013b39
   140013b66:	mov    rax,QWORD PTR [rsp+0x30]
   140013b6b:	add    rsp,0x28
   140013b6f:	ret    
   140013b70:	mov    QWORD PTR [rsp+0x8],rcx
   140013b75:	sub    rsp,0x28
   140013b79:	mov    rcx,QWORD PTR [rsp+0x30]
   140013b7e:	call   0x140012640
   140013b83:	mov    rcx,QWORD PTR [rax]
   140013b86:	call   0x1400138d0
   140013b8b:	movsx  eax,BYTE PTR [rax]
   140013b8e:	test   eax,eax
   140013b90:	jne    0x140013ba6
   140013b92:	mov    rcx,QWORD PTR [rsp+0x30]
   140013b97:	call   0x140012640
   140013b9c:	mov    rax,QWORD PTR [rax]
   140013b9f:	mov    QWORD PTR [rsp+0x30],rax
   140013ba4:	jmp    0x140013b79
   140013ba6:	mov    rax,QWORD PTR [rsp+0x30]
   140013bab:	add    rsp,0x28
   140013baf:	ret    
   140013bb0:	mov    QWORD PTR [rsp+0x8],rcx
   140013bb5:	mov    rax,QWORD PTR [rsp+0x8]
   140013bba:	mov    rax,QWORD PTR [rax]
   140013bbd:	ret    
   140013bbe:	int3   
   140013bbf:	int3   
   140013bc0:	mov    QWORD PTR [rsp+0x8],rcx
   140013bc5:	mov    rax,QWORD PTR [rsp+0x8]
   140013bca:	add    rax,0x20
   140013bce:	ret    
   140013bcf:	int3   
   140013bd0:	mov    QWORD PTR [rsp+0x8],rcx
   140013bd5:	mov    rax,QWORD PTR [rsp+0x8]
   140013bda:	add    rax,0x8
   140013bde:	ret    
   140013bdf:	int3   
   140013be0:	mov    QWORD PTR [rsp+0x8],rcx
   140013be5:	mov    rax,QWORD PTR [rsp+0x8]
   140013bea:	add    rax,0x10
   140013bee:	ret    
   140013bef:	int3   
   140013bf0:	mov    QWORD PTR [rsp+0x8],rcx
   140013bf5:	sub    rsp,0x28
   140013bf9:	mov    rax,QWORD PTR [rsp+0x30]
   140013bfe:	mov    rcx,QWORD PTR [rax]
   140013c01:	call   0x140013be0
   140013c06:	add    rsp,0x28
   140013c0a:	ret    
   140013c0b:	int3   
   140013c0c:	int3   
   140013c0d:	int3   
   140013c0e:	int3   
   140013c0f:	int3   
   140013c10:	mov    QWORD PTR [rsp+0x8],rcx
   140013c15:	sub    rsp,0x28
   140013c19:	mov    rax,QWORD PTR [rsp+0x30]
   140013c1e:	mov    rcx,QWORD PTR [rax]
   140013c21:	call   0x140013bd0
   140013c26:	add    rsp,0x28
   140013c2a:	ret    
   140013c2b:	int3   
   140013c2c:	int3   
   140013c2d:	int3   
   140013c2e:	int3   
   140013c2f:	int3   
   140013c30:	mov    QWORD PTR [rsp+0x10],rdx
   140013c35:	mov    QWORD PTR [rsp+0x8],rcx
   140013c3a:	sub    rsp,0x48
   140013c3e:	mov    rcx,QWORD PTR [rsp+0x58]
   140013c43:	call   0x140012640
   140013c48:	mov    rax,QWORD PTR [rax]
   140013c4b:	mov    QWORD PTR [rsp+0x20],rax
   140013c50:	mov    rcx,QWORD PTR [rsp+0x20]
   140013c55:	call   0x140013be0
   140013c5a:	mov    QWORD PTR [rsp+0x28],rax
   140013c5f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013c64:	call   0x140012640
   140013c69:	mov    rcx,QWORD PTR [rsp+0x28]
   140013c6e:	mov    rcx,QWORD PTR [rcx]
   140013c71:	mov    QWORD PTR [rax],rcx
   140013c74:	mov    rcx,QWORD PTR [rsp+0x20]
   140013c79:	call   0x140013be0
   140013c7e:	mov    rcx,QWORD PTR [rax]
   140013c81:	call   0x1400138d0
   140013c86:	movsx  eax,BYTE PTR [rax]
   140013c89:	test   eax,eax
   140013c8b:	jne    0x140013ca7
   140013c8d:	mov    rcx,QWORD PTR [rsp+0x20]
   140013c92:	call   0x140013be0
   140013c97:	mov    rcx,QWORD PTR [rax]
   140013c9a:	call   0x140013bd0
   140013c9f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013ca4:	mov    QWORD PTR [rax],rcx
   140013ca7:	mov    rcx,QWORD PTR [rsp+0x58]
   140013cac:	call   0x140013bd0
   140013cb1:	mov    QWORD PTR [rsp+0x30],rax
   140013cb6:	mov    rcx,QWORD PTR [rsp+0x20]
   140013cbb:	call   0x140013bd0
   140013cc0:	mov    rcx,QWORD PTR [rsp+0x30]
   140013cc5:	mov    rcx,QWORD PTR [rcx]
   140013cc8:	mov    QWORD PTR [rax],rcx
   140013ccb:	mov    rcx,QWORD PTR [rsp+0x50]
   140013cd0:	call   0x140013c10
   140013cd5:	mov    rax,QWORD PTR [rax]
   140013cd8:	cmp    QWORD PTR [rsp+0x58],rax
   140013cdd:	jne    0x140013cf3
   140013cdf:	mov    rcx,QWORD PTR [rsp+0x50]
   140013ce4:	call   0x140013c10
   140013ce9:	mov    rcx,QWORD PTR [rsp+0x20]
   140013cee:	mov    QWORD PTR [rax],rcx
   140013cf1:	jmp    0x140013d45
   140013cf3:	mov    rcx,QWORD PTR [rsp+0x58]
   140013cf8:	call   0x140013bd0
   140013cfd:	mov    rcx,QWORD PTR [rax]
   140013d00:	call   0x140013be0
   140013d05:	mov    rax,QWORD PTR [rax]
   140013d08:	cmp    QWORD PTR [rsp+0x58],rax
   140013d0d:	jne    0x140013d2b
   140013d0f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013d14:	call   0x140013bd0
   140013d19:	mov    rcx,QWORD PTR [rax]
   140013d1c:	call   0x140013be0
   140013d21:	mov    rcx,QWORD PTR [rsp+0x20]
   140013d26:	mov    QWORD PTR [rax],rcx
   140013d29:	jmp    0x140013d45
   140013d2b:	mov    rcx,QWORD PTR [rsp+0x58]
   140013d30:	call   0x140013bd0
   140013d35:	mov    rcx,QWORD PTR [rax]
   140013d38:	call   0x140012640
   140013d3d:	mov    rcx,QWORD PTR [rsp+0x20]
   140013d42:	mov    QWORD PTR [rax],rcx
   140013d45:	mov    rcx,QWORD PTR [rsp+0x20]
   140013d4a:	call   0x140013be0
   140013d4f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013d54:	mov    QWORD PTR [rax],rcx
   140013d57:	mov    rcx,QWORD PTR [rsp+0x58]
   140013d5c:	call   0x140013bd0
   140013d61:	mov    rcx,QWORD PTR [rsp+0x20]
   140013d66:	mov    QWORD PTR [rax],rcx
   140013d69:	add    rsp,0x48
   140013d6d:	ret    
   140013d6e:	int3   
   140013d6f:	int3   
   140013d70:	mov    QWORD PTR [rsp+0x8],rcx
   140013d75:	sub    rsp,0x58
   140013d79:	lea    rdx,[rsp+0x30]
   140013d7e:	mov    rcx,QWORD PTR [rsp+0x60]
   140013d83:	call   0x140014060
   140013d88:	mov    rax,QWORD PTR [rax]
   140013d8b:	mov    QWORD PTR [rsp+0x20],rax
   140013d90:	lea    rdx,[rsp+0x38]
   140013d95:	mov    rcx,QWORD PTR [rsp+0x60]
   140013d9a:	call   0x140013ea0
   140013d9f:	mov    rax,QWORD PTR [rax]
   140013da2:	mov    QWORD PTR [rsp+0x28],rax
   140013da7:	mov    r9,QWORD PTR [rsp+0x20]
   140013dac:	mov    r8,QWORD PTR [rsp+0x28]
   140013db1:	lea    rdx,[rsp+0x40]
   140013db6:	mov    rcx,QWORD PTR [rsp+0x60]
   140013dbb:	call   0x140014090
   140013dc0:	add    rsp,0x58
   140013dc4:	ret    
   140013dc5:	int3   
   140013dc6:	int3   
   140013dc7:	int3   
   140013dc8:	int3   
   140013dc9:	int3   
   140013dca:	int3   
   140013dcb:	int3   
   140013dcc:	int3   
   140013dcd:	int3   
   140013dce:	int3   
   140013dcf:	int3   
   140013dd0:	mov    QWORD PTR [rsp+0x10],rdx
   140013dd5:	mov    QWORD PTR [rsp+0x8],rcx
   140013dda:	sub    rsp,0x28
   140013dde:	mov    r8,QWORD PTR [rsp+0x30]
   140013de3:	mov    rax,QWORD PTR [rsp+0x30]
   140013de8:	mov    rdx,QWORD PTR [rax]
   140013deb:	mov    rcx,QWORD PTR [rsp+0x38]
   140013df0:	call   0x1400126e0
   140013df5:	mov    rax,QWORD PTR [rsp+0x38]
   140013dfa:	add    rsp,0x28
   140013dfe:	ret    
   140013dff:	int3   
   140013e00:	mov    QWORD PTR [rsp+0x10],rdx
   140013e05:	mov    QWORD PTR [rsp+0x8],rcx
   140013e0a:	sub    rsp,0x28
   140013e0e:	mov    rdx,QWORD PTR [rsp+0x38]
   140013e13:	mov    rcx,QWORD PTR [rsp+0x30]
   140013e18:	call   0x140013e60
   140013e1d:	add    rsp,0x28
   140013e21:	ret    
   140013e22:	int3   
   140013e23:	int3   
   140013e24:	int3   
   140013e25:	int3   
   140013e26:	int3   
   140013e27:	int3   
   140013e28:	int3   
   140013e29:	int3   
   140013e2a:	int3   
   140013e2b:	int3   
   140013e2c:	int3   
   140013e2d:	int3   
   140013e2e:	int3   
   140013e2f:	int3   
   140013e30:	mov    QWORD PTR [rsp+0x10],rdx
   140013e35:	mov    QWORD PTR [rsp+0x8],rcx
   140013e3a:	sub    rsp,0x28
   140013e3e:	mov    rdx,QWORD PTR [rsp+0x38]
   140013e43:	mov    rcx,QWORD PTR [rsp+0x30]
   140013e48:	call   0x140013e80
   140013e4d:	add    rsp,0x28
   140013e51:	ret    
   140013e52:	int3   
   140013e53:	int3   
   140013e54:	int3   
   140013e55:	int3   
   140013e56:	int3   
   140013e57:	int3   
   140013e58:	int3   
   140013e59:	int3   
   140013e5a:	int3   
   140013e5b:	int3   
   140013e5c:	int3   
   140013e5d:	int3   
   140013e5e:	int3   
   140013e5f:	int3   
   140013e60:	mov    QWORD PTR [rsp+0x10],rdx
   140013e65:	mov    QWORD PTR [rsp+0x8],rcx
   140013e6a:	sub    rsp,0x28
   140013e6e:	xor    edx,edx
   140013e70:	mov    rcx,QWORD PTR [rsp+0x38]
   140013e75:	call   0x140010660
   140013e7a:	add    rsp,0x28
   140013e7e:	ret    
   140013e7f:	int3   
   140013e80:	mov    QWORD PTR [rsp+0x10],rdx
   140013e85:	mov    QWORD PTR [rsp+0x8],rcx
   140013e8a:	sub    rsp,0x28
   140013e8e:	xor    edx,edx
   140013e90:	mov    rcx,QWORD PTR [rsp+0x38]
   140013e95:	call   0x1400106c0
   140013e9a:	add    rsp,0x28
   140013e9e:	ret    
   140013e9f:	int3   
   140013ea0:	mov    QWORD PTR [rsp+0x10],rdx
   140013ea5:	mov    QWORD PTR [rsp+0x8],rcx
   140013eaa:	sub    rsp,0x28
   140013eae:	mov    rcx,QWORD PTR [rsp+0x30]
   140013eb3:	call   0x140012620
   140013eb8:	mov    r8,QWORD PTR [rsp+0x30]
   140013ebd:	mov    rdx,QWORD PTR [rax]
   140013ec0:	mov    rcx,QWORD PTR [rsp+0x38]
   140013ec5:	call   0x140012840
   140013eca:	mov    rax,QWORD PTR [rsp+0x38]
   140013ecf:	add    rsp,0x28
   140013ed3:	ret    
   140013ed4:	int3   
   140013ed5:	int3   
   140013ed6:	int3   
   140013ed7:	int3   
   140013ed8:	int3   
   140013ed9:	int3   
   140013eda:	int3   
   140013edb:	int3   
   140013edc:	int3   
   140013edd:	int3   
   140013ede:	int3   
   140013edf:	int3   
   140013ee0:	mov    QWORD PTR [rsp+0x8],rcx
   140013ee5:	sub    rsp,0x28
   140013ee9:	mov    rcx,QWORD PTR [rsp+0x30]
   140013eee:	call   0x140013c10
   140013ef3:	mov    rdx,QWORD PTR [rax]
   140013ef6:	mov    rcx,QWORD PTR [rsp+0x30]
   140013efb:	call   0x1400135b0
   140013f00:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f05:	call   0x140013c10
   140013f0a:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f0f:	mov    rcx,QWORD PTR [rcx]
   140013f12:	mov    QWORD PTR [rax],rcx
   140013f15:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f1a:	call   0x140012620
   140013f1f:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f24:	mov    rcx,QWORD PTR [rcx]
   140013f27:	mov    QWORD PTR [rax],rcx
   140013f2a:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f2f:	call   0x140013bf0
   140013f34:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f39:	mov    rcx,QWORD PTR [rcx]
   140013f3c:	mov    QWORD PTR [rax],rcx
   140013f3f:	mov    rax,QWORD PTR [rsp+0x30]
   140013f44:	mov    QWORD PTR [rax+0x8],0x0
   140013f4c:	add    rsp,0x28
   140013f50:	ret    
   140013f51:	int3   
   140013f52:	int3   
   140013f53:	int3   
   140013f54:	int3   
   140013f55:	int3   
   140013f56:	int3   
   140013f57:	int3   
   140013f58:	int3   
   140013f59:	int3   
   140013f5a:	int3   
   140013f5b:	int3   
   140013f5c:	int3   
   140013f5d:	int3   
   140013f5e:	int3   
   140013f5f:	int3   
   140013f60:	mov    QWORD PTR [rsp+0x8],rcx
   140013f65:	sub    rsp,0x38
   140013f69:	mov    rax,QWORD PTR [rsp+0x40]
   140013f6e:	mov    rcx,QWORD PTR [rax]
   140013f71:	call   0x140012640
   140013f76:	mov    rax,QWORD PTR [rax]
   140013f79:	mov    QWORD PTR [rsp+0x20],rax
   140013f7e:	mov    rax,QWORD PTR [rsp+0x40]
   140013f83:	mov    rcx,QWORD PTR [rax]
   140013f86:	call   0x140012640
   140013f8b:	mov    rcx,QWORD PTR [rsp+0x40]
   140013f90:	mov    rcx,QWORD PTR [rcx]
   140013f93:	mov    QWORD PTR [rax],rcx
   140013f96:	mov    rax,QWORD PTR [rsp+0x40]
   140013f9b:	mov    rcx,QWORD PTR [rax]
   140013f9e:	call   0x140013bd0
   140013fa3:	mov    rcx,QWORD PTR [rsp+0x40]
   140013fa8:	mov    rcx,QWORD PTR [rcx]
   140013fab:	mov    QWORD PTR [rax],rcx
   140013fae:	mov    rax,QWORD PTR [rsp+0x40]
   140013fb3:	mov    QWORD PTR [rax+0x8],0x0
   140013fbb:	jmp    0x140013fc7
   140013fbd:	mov    rax,QWORD PTR [rsp+0x28]
   140013fc2:	mov    QWORD PTR [rsp+0x20],rax
   140013fc7:	mov    rax,QWORD PTR [rsp+0x40]
   140013fcc:	mov    rax,QWORD PTR [rax]
   140013fcf:	cmp    QWORD PTR [rsp+0x20],rax
   140013fd4:	je     0x140013ff9
   140013fd6:	mov    rcx,QWORD PTR [rsp+0x20]
   140013fdb:	call   0x140012640
   140013fe0:	mov    rax,QWORD PTR [rax]
   140013fe3:	mov    QWORD PTR [rsp+0x28],rax
   140013fe8:	mov    rdx,QWORD PTR [rsp+0x20]
   140013fed:	mov    rcx,QWORD PTR [rsp+0x40]
   140013ff2:	call   0x140013760
   140013ff7:	jmp    0x140013fbd
   140013ff9:	add    rsp,0x38
   140013ffd:	ret    
   140013ffe:	int3   
   140013fff:	int3   
   140014000:	mov    QWORD PTR [rsp+0x18],r8
   140014005:	mov    QWORD PTR [rsp+0x10],rdx
   14001400a:	mov    QWORD PTR [rsp+0x8],rcx
   14001400f:	sub    rsp,0x28
   140014013:	mov    r8,QWORD PTR [rsp+0x40]
   140014018:	mov    rdx,QWORD PTR [rsp+0x38]
   14001401d:	mov    rcx,QWORD PTR [rsp+0x30]
   140014022:	call   0x140014030
   140014027:	add    rsp,0x28
   14001402b:	ret    
   14001402c:	int3   
   14001402d:	int3   
   14001402e:	int3   
   14001402f:	int3   
   140014030:	mov    QWORD PTR [rsp+0x18],r8
   140014035:	mov    QWORD PTR [rsp+0x10],rdx
   14001403a:	mov    QWORD PTR [rsp+0x8],rcx
   14001403f:	sub    rsp,0x28
   140014043:	mov    rcx,QWORD PTR [rsp+0x38]
   140014048:	call   0x140020b90
   14001404d:	add    rsp,0x28
   140014051:	ret    
   140014052:	int3   
   140014053:	int3   
   140014054:	int3   
   140014055:	int3   
   140014056:	int3   
   140014057:	int3   
   140014058:	int3   
   140014059:	int3   
   14001405a:	int3   
   14001405b:	int3   
   14001405c:	int3   
   14001405d:	int3   
   14001405e:	int3   
   14001405f:	int3   
   140014060:	mov    QWORD PTR [rsp+0x10],rdx
   140014065:	mov    QWORD PTR [rsp+0x8],rcx
   14001406a:	sub    rsp,0x28
   14001406e:	mov    r8,QWORD PTR [rsp+0x30]
   140014073:	mov    rax,QWORD PTR [rsp+0x30]
   140014078:	mov    rdx,QWORD PTR [rax]
   14001407b:	mov    rcx,QWORD PTR [rsp+0x38]
   140014080:	call   0x140012840
   140014085:	mov    rax,QWORD PTR [rsp+0x38]
   14001408a:	add    rsp,0x28
   14001408e:	ret    
   14001408f:	int3   
   140014090:	mov    QWORD PTR [rsp+0x20],r9
   140014095:	mov    QWORD PTR [rsp+0x18],r8
   14001409a:	mov    QWORD PTR [rsp+0x10],rdx
   14001409f:	mov    QWORD PTR [rsp+0x8],rcx
   1400140a4:	sub    rsp,0x48
   1400140a8:	lea    rdx,[rsp+0x20]
   1400140ad:	mov    rcx,QWORD PTR [rsp+0x50]
   1400140b2:	call   0x140013ea0
   1400140b7:	mov    rdx,rax
   1400140ba:	lea    rcx,[rsp+0x60]
   1400140bf:	call   0x140012c30
   1400140c4:	movzx  eax,al
   1400140c7:	test   eax,eax
   1400140c9:	je     0x140014110
   1400140cb:	lea    rdx,[rsp+0x28]
   1400140d0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400140d5:	call   0x140014060
   1400140da:	mov    rdx,rax
   1400140dd:	lea    rcx,[rsp+0x68]
   1400140e2:	call   0x140012c30
   1400140e7:	movzx  eax,al
   1400140ea:	test   eax,eax
   1400140ec:	je     0x140014110
   1400140ee:	mov    rcx,QWORD PTR [rsp+0x50]
   1400140f3:	call   0x140013ee0
   1400140f8:	mov    rdx,QWORD PTR [rsp+0x58]
   1400140fd:	mov    rcx,QWORD PTR [rsp+0x50]
   140014102:	call   0x140013ea0
   140014107:	mov    rax,QWORD PTR [rsp+0x58]
   14001410c:	jmp    0x140014165
   14001410e:	jmp    0x140014165
   140014110:	lea    rdx,[rsp+0x68]
   140014115:	lea    rcx,[rsp+0x60]
   14001411a:	call   0x140012c70
   14001411f:	movzx  eax,al
   140014122:	test   eax,eax
   140014124:	je     0x14001414c
   140014126:	xor    r8d,r8d
   140014129:	lea    rdx,[rsp+0x30]
   14001412e:	lea    rcx,[rsp+0x60]
   140014133:	call   0x140012e70
   140014138:	mov    r8,QWORD PTR [rax]
   14001413b:	lea    rdx,[rsp+0x38]
   140014140:	mov    rcx,QWORD PTR [rsp+0x50]
   140014145:	call   0x140014170
   14001414a:	jmp    0x140014110
   14001414c:	mov    r8,QWORD PTR [rsp+0x50]
   140014151:	mov    rdx,QWORD PTR [rsp+0x60]
   140014156:	mov    rcx,QWORD PTR [rsp+0x58]
   14001415b:	call   0x140012840
   140014160:	mov    rax,QWORD PTR [rsp+0x58]
   140014165:	add    rsp,0x48
   140014169:	ret    
   14001416a:	int3   
   14001416b:	int3   
   14001416c:	int3   
   14001416d:	int3   
   14001416e:	int3   
   14001416f:	int3   
   140014170:	mov    QWORD PTR [rsp+0x18],r8
   140014175:	mov    QWORD PTR [rsp+0x10],rdx
   14001417a:	mov    QWORD PTR [rsp+0x8],rcx
   14001417f:	sub    rsp,0x98
   140014186:	lea    rcx,[rsp+0xb0]
   14001418e:	call   0x140013bb0
   140014193:	mov    QWORD PTR [rsp+0x38],rax
   140014198:	lea    rcx,[rsp+0xb0]
   1400141a0:	call   0x140012ec0
   1400141a5:	mov    rax,QWORD PTR [rsp+0x38]
   1400141aa:	mov    QWORD PTR [rsp+0x20],rax
   1400141af:	mov    rcx,QWORD PTR [rsp+0x20]
   1400141b4:	call   0x140012640
   1400141b9:	mov    rcx,QWORD PTR [rax]
   1400141bc:	call   0x1400138d0
   1400141c1:	movsx  eax,BYTE PTR [rax]
   1400141c4:	test   eax,eax
   1400141c6:	je     0x1400141dc
   1400141c8:	mov    rcx,QWORD PTR [rsp+0x20]
   1400141cd:	call   0x140013be0
   1400141d2:	mov    rax,QWORD PTR [rax]
   1400141d5:	mov    QWORD PTR [rsp+0x30],rax
   1400141da:	jmp    0x14001422d
   1400141dc:	mov    rcx,QWORD PTR [rsp+0x20]
   1400141e1:	call   0x140013be0
   1400141e6:	mov    rcx,QWORD PTR [rax]
   1400141e9:	call   0x1400138d0
   1400141ee:	movsx  eax,BYTE PTR [rax]
   1400141f1:	test   eax,eax
   1400141f3:	je     0x140014209
   1400141f5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400141fa:	call   0x140012640
   1400141ff:	mov    rax,QWORD PTR [rax]
   140014202:	mov    QWORD PTR [rsp+0x30],rax
   140014207:	jmp    0x14001422d
   140014209:	lea    rcx,[rsp+0xb0]
   140014211:	call   0x140013bb0
   140014216:	mov    QWORD PTR [rsp+0x20],rax
   14001421b:	mov    rcx,QWORD PTR [rsp+0x20]
   140014220:	call   0x140013be0
   140014225:	mov    rax,QWORD PTR [rax]
   140014228:	mov    QWORD PTR [rsp+0x30],rax
   14001422d:	mov    rax,QWORD PTR [rsp+0x38]
   140014232:	cmp    QWORD PTR [rsp+0x20],rax
   140014237:	jne    0x14001438f
   14001423d:	mov    rcx,QWORD PTR [rsp+0x38]
   140014242:	call   0x140013bd0
   140014247:	mov    rax,QWORD PTR [rax]
   14001424a:	mov    QWORD PTR [rsp+0x28],rax
   14001424f:	mov    rcx,QWORD PTR [rsp+0x30]
   140014254:	call   0x1400138d0
   140014259:	movsx  eax,BYTE PTR [rax]
   14001425c:	test   eax,eax
   14001425e:	jne    0x140014272
   140014260:	mov    rcx,QWORD PTR [rsp+0x30]
   140014265:	call   0x140013bd0
   14001426a:	mov    rcx,QWORD PTR [rsp+0x28]
   14001426f:	mov    QWORD PTR [rax],rcx
   140014272:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001427a:	call   0x140013c10
   14001427f:	mov    rcx,QWORD PTR [rsp+0x38]
   140014284:	cmp    QWORD PTR [rax],rcx
   140014287:	jne    0x1400142a0
   140014289:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014291:	call   0x140013c10
   140014296:	mov    rcx,QWORD PTR [rsp+0x30]
   14001429b:	mov    QWORD PTR [rax],rcx
   14001429e:	jmp    0x1400142da
   1400142a0:	mov    rcx,QWORD PTR [rsp+0x28]
   1400142a5:	call   0x140012640
   1400142aa:	mov    rcx,QWORD PTR [rsp+0x38]
   1400142af:	cmp    QWORD PTR [rax],rcx
   1400142b2:	jne    0x1400142c8
   1400142b4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400142b9:	call   0x140012640
   1400142be:	mov    rcx,QWORD PTR [rsp+0x30]
   1400142c3:	mov    QWORD PTR [rax],rcx
   1400142c6:	jmp    0x1400142da
   1400142c8:	mov    rcx,QWORD PTR [rsp+0x28]
   1400142cd:	call   0x140013be0
   1400142d2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400142d7:	mov    QWORD PTR [rax],rcx
   1400142da:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400142e2:	call   0x140012620
   1400142e7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400142ec:	cmp    QWORD PTR [rax],rcx
   1400142ef:	jne    0x140014332
   1400142f1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400142f6:	call   0x1400138d0
   1400142fb:	movsx  eax,BYTE PTR [rax]
   1400142fe:	test   eax,eax
   140014300:	je     0x14001430e
   140014302:	mov    rax,QWORD PTR [rsp+0x28]
   140014307:	mov    QWORD PTR [rsp+0x50],rax
   14001430c:	jmp    0x14001431d
   14001430e:	mov    rcx,QWORD PTR [rsp+0x30]
   140014313:	call   0x140013b70
   140014318:	mov    QWORD PTR [rsp+0x50],rax
   14001431d:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014325:	call   0x140012620
   14001432a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001432f:	mov    QWORD PTR [rax],rcx
   140014332:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001433a:	call   0x140013bf0
   14001433f:	mov    rcx,QWORD PTR [rsp+0x38]
   140014344:	cmp    QWORD PTR [rax],rcx
   140014347:	jne    0x14001438a
   140014349:	mov    rcx,QWORD PTR [rsp+0x30]
   14001434e:	call   0x1400138d0
   140014353:	movsx  eax,BYTE PTR [rax]
   140014356:	test   eax,eax
   140014358:	je     0x140014366
   14001435a:	mov    rax,QWORD PTR [rsp+0x28]
   14001435f:	mov    QWORD PTR [rsp+0x48],rax
   140014364:	jmp    0x140014375
   140014366:	mov    rcx,QWORD PTR [rsp+0x30]
   14001436b:	call   0x140013b30
   140014370:	mov    QWORD PTR [rsp+0x48],rax
   140014375:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001437d:	call   0x140013bf0
   140014382:	mov    rcx,QWORD PTR [rsp+0x48]
   140014387:	mov    QWORD PTR [rax],rcx
   14001438a:	jmp    0x140014548
   14001438f:	mov    rcx,QWORD PTR [rsp+0x38]
   140014394:	call   0x140012640
   140014399:	mov    rcx,QWORD PTR [rax]
   14001439c:	call   0x140013bd0
   1400143a1:	mov    rcx,QWORD PTR [rsp+0x20]
   1400143a6:	mov    QWORD PTR [rax],rcx
   1400143a9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400143ae:	call   0x140012640
   1400143b3:	mov    QWORD PTR [rsp+0x70],rax
   1400143b8:	mov    rcx,QWORD PTR [rsp+0x20]
   1400143bd:	call   0x140012640
   1400143c2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400143c7:	mov    rcx,QWORD PTR [rcx]
   1400143ca:	mov    QWORD PTR [rax],rcx
   1400143cd:	mov    rcx,QWORD PTR [rsp+0x38]
   1400143d2:	call   0x140013be0
   1400143d7:	mov    rax,QWORD PTR [rax]
   1400143da:	cmp    QWORD PTR [rsp+0x20],rax
   1400143df:	jne    0x1400143f0
   1400143e1:	mov    rax,QWORD PTR [rsp+0x20]
   1400143e6:	mov    QWORD PTR [rsp+0x28],rax
   1400143eb:	jmp    0x14001447b
   1400143f0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400143f5:	call   0x140013bd0
   1400143fa:	mov    rax,QWORD PTR [rax]
   1400143fd:	mov    QWORD PTR [rsp+0x28],rax
   140014402:	mov    rcx,QWORD PTR [rsp+0x30]
   140014407:	call   0x1400138d0
   14001440c:	movsx  eax,BYTE PTR [rax]
   14001440f:	test   eax,eax
   140014411:	jne    0x140014425
   140014413:	mov    rcx,QWORD PTR [rsp+0x30]
   140014418:	call   0x140013bd0
   14001441d:	mov    rcx,QWORD PTR [rsp+0x28]
   140014422:	mov    QWORD PTR [rax],rcx
   140014425:	mov    rcx,QWORD PTR [rsp+0x28]
   14001442a:	call   0x140012640
   14001442f:	mov    rcx,QWORD PTR [rsp+0x30]
   140014434:	mov    QWORD PTR [rax],rcx
   140014437:	mov    rcx,QWORD PTR [rsp+0x38]
   14001443c:	call   0x140013be0
   140014441:	mov    QWORD PTR [rsp+0x80],rax
   140014449:	mov    rcx,QWORD PTR [rsp+0x20]
   14001444e:	call   0x140013be0
   140014453:	mov    rcx,QWORD PTR [rsp+0x80]
   14001445b:	mov    rcx,QWORD PTR [rcx]
   14001445e:	mov    QWORD PTR [rax],rcx
   140014461:	mov    rcx,QWORD PTR [rsp+0x38]
   140014466:	call   0x140013be0
   14001446b:	mov    rcx,QWORD PTR [rax]
   14001446e:	call   0x140013bd0
   140014473:	mov    rcx,QWORD PTR [rsp+0x20]
   140014478:	mov    QWORD PTR [rax],rcx
   14001447b:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014483:	call   0x140013c10
   140014488:	mov    rcx,QWORD PTR [rsp+0x38]
   14001448d:	cmp    QWORD PTR [rax],rcx
   140014490:	jne    0x1400144a9
   140014492:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001449a:	call   0x140013c10
   14001449f:	mov    rcx,QWORD PTR [rsp+0x20]
   1400144a4:	mov    QWORD PTR [rax],rcx
   1400144a7:	jmp    0x1400144fb
   1400144a9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400144ae:	call   0x140013bd0
   1400144b3:	mov    rcx,QWORD PTR [rax]
   1400144b6:	call   0x140012640
   1400144bb:	mov    rcx,QWORD PTR [rsp+0x38]
   1400144c0:	cmp    QWORD PTR [rax],rcx
   1400144c3:	jne    0x1400144e1
   1400144c5:	mov    rcx,QWORD PTR [rsp+0x38]
   1400144ca:	call   0x140013bd0
   1400144cf:	mov    rcx,QWORD PTR [rax]
   1400144d2:	call   0x140012640
   1400144d7:	mov    rcx,QWORD PTR [rsp+0x20]
   1400144dc:	mov    QWORD PTR [rax],rcx
   1400144df:	jmp    0x1400144fb
   1400144e1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400144e6:	call   0x140013bd0
   1400144eb:	mov    rcx,QWORD PTR [rax]
   1400144ee:	call   0x140013be0
   1400144f3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400144f8:	mov    QWORD PTR [rax],rcx
   1400144fb:	mov    rcx,QWORD PTR [rsp+0x38]
   140014500:	call   0x140013bd0
   140014505:	mov    QWORD PTR [rsp+0x58],rax
   14001450a:	mov    rcx,QWORD PTR [rsp+0x20]
   14001450f:	call   0x140013bd0
   140014514:	mov    rcx,QWORD PTR [rsp+0x58]
   140014519:	mov    rcx,QWORD PTR [rcx]
   14001451c:	mov    QWORD PTR [rax],rcx
   14001451f:	mov    rcx,QWORD PTR [rsp+0x38]
   140014524:	call   0x140013530
   140014529:	mov    QWORD PTR [rsp+0x60],rax
   14001452e:	mov    rcx,QWORD PTR [rsp+0x20]
   140014533:	call   0x140013530
   140014538:	mov    rcx,QWORD PTR [rsp+0x60]
   14001453d:	mov    rdx,rcx
   140014540:	mov    rcx,rax
   140014543:	call   0x140012650
   140014548:	mov    rcx,QWORD PTR [rsp+0x38]
   14001454d:	call   0x140013530
   140014552:	movsx  eax,BYTE PTR [rax]
   140014555:	cmp    eax,0x1
   140014558:	jne    0x1400148e9
   14001455e:	jmp    0x140014572
   140014560:	mov    rcx,QWORD PTR [rsp+0x30]
   140014565:	call   0x140013bd0
   14001456a:	mov    rax,QWORD PTR [rax]
   14001456d:	mov    QWORD PTR [rsp+0x28],rax
   140014572:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001457a:	call   0x140013c10
   14001457f:	mov    rax,QWORD PTR [rax]
   140014582:	cmp    QWORD PTR [rsp+0x30],rax
   140014587:	je     0x1400148dc
   14001458d:	mov    rcx,QWORD PTR [rsp+0x30]
   140014592:	call   0x140013530
   140014597:	movsx  eax,BYTE PTR [rax]
   14001459a:	cmp    eax,0x1
   14001459d:	jne    0x1400148dc
   1400145a3:	mov    rcx,QWORD PTR [rsp+0x28]
   1400145a8:	call   0x140012640
   1400145ad:	mov    rax,QWORD PTR [rax]
   1400145b0:	cmp    QWORD PTR [rsp+0x30],rax
   1400145b5:	jne    0x14001474d
   1400145bb:	mov    rcx,QWORD PTR [rsp+0x28]
   1400145c0:	call   0x140013be0
   1400145c5:	mov    rax,QWORD PTR [rax]
   1400145c8:	mov    QWORD PTR [rsp+0x20],rax
   1400145cd:	mov    rcx,QWORD PTR [rsp+0x20]
   1400145d2:	call   0x140013530
   1400145d7:	movsx  eax,BYTE PTR [rax]
   1400145da:	test   eax,eax
   1400145dc:	jne    0x14001461c
   1400145de:	mov    rcx,QWORD PTR [rsp+0x20]
   1400145e3:	call   0x140013530
   1400145e8:	mov    BYTE PTR [rax],0x1
   1400145eb:	mov    rcx,QWORD PTR [rsp+0x28]
   1400145f0:	call   0x140013530
   1400145f5:	mov    BYTE PTR [rax],0x0
   1400145f8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400145fd:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014605:	call   0x1400139f0
   14001460a:	mov    rcx,QWORD PTR [rsp+0x28]
   14001460f:	call   0x140013be0
   140014614:	mov    rax,QWORD PTR [rax]
   140014617:	mov    QWORD PTR [rsp+0x20],rax
   14001461c:	mov    rcx,QWORD PTR [rsp+0x20]
   140014621:	call   0x1400138d0
   140014626:	movsx  eax,BYTE PTR [rax]
   140014629:	test   eax,eax
   14001462b:	je     0x14001463c
   14001462d:	mov    rax,QWORD PTR [rsp+0x28]
   140014632:	mov    QWORD PTR [rsp+0x30],rax
   140014637:	jmp    0x140014748
   14001463c:	mov    rcx,QWORD PTR [rsp+0x20]
   140014641:	call   0x140012640
   140014646:	mov    rcx,QWORD PTR [rax]
   140014649:	call   0x140013530
   14001464e:	movsx  eax,BYTE PTR [rax]
   140014651:	cmp    eax,0x1
   140014654:	jne    0x14001468c
   140014656:	mov    rcx,QWORD PTR [rsp+0x20]
   14001465b:	call   0x140013be0
   140014660:	mov    rcx,QWORD PTR [rax]
   140014663:	call   0x140013530
   140014668:	movsx  eax,BYTE PTR [rax]
   14001466b:	cmp    eax,0x1
   14001466e:	jne    0x14001468c
   140014670:	mov    rcx,QWORD PTR [rsp+0x20]
   140014675:	call   0x140013530
   14001467a:	mov    BYTE PTR [rax],0x0
   14001467d:	mov    rax,QWORD PTR [rsp+0x28]
   140014682:	mov    QWORD PTR [rsp+0x30],rax
   140014687:	jmp    0x140014748
   14001468c:	mov    rcx,QWORD PTR [rsp+0x20]
   140014691:	call   0x140013be0
   140014696:	mov    rcx,QWORD PTR [rax]
   140014699:	call   0x140013530
   14001469e:	movsx  eax,BYTE PTR [rax]
   1400146a1:	cmp    eax,0x1
   1400146a4:	jne    0x1400146ec
   1400146a6:	mov    rcx,QWORD PTR [rsp+0x20]
   1400146ab:	call   0x140012640
   1400146b0:	mov    rcx,QWORD PTR [rax]
   1400146b3:	call   0x140013530
   1400146b8:	mov    BYTE PTR [rax],0x1
   1400146bb:	mov    rcx,QWORD PTR [rsp+0x20]
   1400146c0:	call   0x140013530
   1400146c5:	mov    BYTE PTR [rax],0x0
   1400146c8:	mov    rdx,QWORD PTR [rsp+0x20]
   1400146cd:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400146d5:	call   0x140013c30
   1400146da:	mov    rcx,QWORD PTR [rsp+0x28]
   1400146df:	call   0x140013be0
   1400146e4:	mov    rax,QWORD PTR [rax]
   1400146e7:	mov    QWORD PTR [rsp+0x20],rax
   1400146ec:	mov    rcx,QWORD PTR [rsp+0x28]
   1400146f1:	call   0x140013530
   1400146f6:	mov    QWORD PTR [rsp+0x68],rax
   1400146fb:	mov    rcx,QWORD PTR [rsp+0x20]
   140014700:	call   0x140013530
   140014705:	mov    rcx,QWORD PTR [rsp+0x68]
   14001470a:	movzx  ecx,BYTE PTR [rcx]
   14001470d:	mov    BYTE PTR [rax],cl
   14001470f:	mov    rcx,QWORD PTR [rsp+0x28]
   140014714:	call   0x140013530
   140014719:	mov    BYTE PTR [rax],0x1
   14001471c:	mov    rcx,QWORD PTR [rsp+0x20]
   140014721:	call   0x140013be0
   140014726:	mov    rcx,QWORD PTR [rax]
   140014729:	call   0x140013530
   14001472e:	mov    BYTE PTR [rax],0x1
   140014731:	mov    rdx,QWORD PTR [rsp+0x28]
   140014736:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001473e:	call   0x1400139f0
   140014743:	jmp    0x1400148dc
   140014748:	jmp    0x1400148d7
   14001474d:	mov    rcx,QWORD PTR [rsp+0x28]
   140014752:	call   0x140012640
   140014757:	mov    rax,QWORD PTR [rax]
   14001475a:	mov    QWORD PTR [rsp+0x20],rax
   14001475f:	mov    rcx,QWORD PTR [rsp+0x20]
   140014764:	call   0x140013530
   140014769:	movsx  eax,BYTE PTR [rax]
   14001476c:	test   eax,eax
   14001476e:	jne    0x1400147ae
   140014770:	mov    rcx,QWORD PTR [rsp+0x20]
   140014775:	call   0x140013530
   14001477a:	mov    BYTE PTR [rax],0x1
   14001477d:	mov    rcx,QWORD PTR [rsp+0x28]
   140014782:	call   0x140013530
   140014787:	mov    BYTE PTR [rax],0x0
   14001478a:	mov    rdx,QWORD PTR [rsp+0x28]
   14001478f:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014797:	call   0x140013c30
   14001479c:	mov    rcx,QWORD PTR [rsp+0x28]
   1400147a1:	call   0x140012640
   1400147a6:	mov    rax,QWORD PTR [rax]
   1400147a9:	mov    QWORD PTR [rsp+0x20],rax
   1400147ae:	mov    rcx,QWORD PTR [rsp+0x20]
   1400147b3:	call   0x1400138d0
   1400147b8:	movsx  eax,BYTE PTR [rax]
   1400147bb:	test   eax,eax
   1400147bd:	je     0x1400147ce
   1400147bf:	mov    rax,QWORD PTR [rsp+0x28]
   1400147c4:	mov    QWORD PTR [rsp+0x30],rax
   1400147c9:	jmp    0x1400148d7
   1400147ce:	mov    rcx,QWORD PTR [rsp+0x20]
   1400147d3:	call   0x140013be0
   1400147d8:	mov    rcx,QWORD PTR [rax]
   1400147db:	call   0x140013530
   1400147e0:	movsx  eax,BYTE PTR [rax]
   1400147e3:	cmp    eax,0x1
   1400147e6:	jne    0x14001481e
   1400147e8:	mov    rcx,QWORD PTR [rsp+0x20]
   1400147ed:	call   0x140012640
   1400147f2:	mov    rcx,QWORD PTR [rax]
   1400147f5:	call   0x140013530
   1400147fa:	movsx  eax,BYTE PTR [rax]
   1400147fd:	cmp    eax,0x1
   140014800:	jne    0x14001481e
   140014802:	mov    rcx,QWORD PTR [rsp+0x20]
   140014807:	call   0x140013530
   14001480c:	mov    BYTE PTR [rax],0x0
   14001480f:	mov    rax,QWORD PTR [rsp+0x28]
   140014814:	mov    QWORD PTR [rsp+0x30],rax
   140014819:	jmp    0x1400148d7
   14001481e:	mov    rcx,QWORD PTR [rsp+0x20]
   140014823:	call   0x140012640
   140014828:	mov    rcx,QWORD PTR [rax]
   14001482b:	call   0x140013530
   140014830:	movsx  eax,BYTE PTR [rax]
   140014833:	cmp    eax,0x1
   140014836:	jne    0x14001487e
   140014838:	mov    rcx,QWORD PTR [rsp+0x20]
   14001483d:	call   0x140013be0
   140014842:	mov    rcx,QWORD PTR [rax]
   140014845:	call   0x140013530
   14001484a:	mov    BYTE PTR [rax],0x1
   14001484d:	mov    rcx,QWORD PTR [rsp+0x20]
   140014852:	call   0x140013530
   140014857:	mov    BYTE PTR [rax],0x0
   14001485a:	mov    rdx,QWORD PTR [rsp+0x20]
   14001485f:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014867:	call   0x1400139f0
   14001486c:	mov    rcx,QWORD PTR [rsp+0x28]
   140014871:	call   0x140012640
   140014876:	mov    rax,QWORD PTR [rax]
   140014879:	mov    QWORD PTR [rsp+0x20],rax
   14001487e:	mov    rcx,QWORD PTR [rsp+0x28]
   140014883:	call   0x140013530
   140014888:	mov    QWORD PTR [rsp+0x78],rax
   14001488d:	mov    rcx,QWORD PTR [rsp+0x20]
   140014892:	call   0x140013530
   140014897:	mov    rcx,QWORD PTR [rsp+0x78]
   14001489c:	movzx  ecx,BYTE PTR [rcx]
   14001489f:	mov    BYTE PTR [rax],cl
   1400148a1:	mov    rcx,QWORD PTR [rsp+0x28]
   1400148a6:	call   0x140013530
   1400148ab:	mov    BYTE PTR [rax],0x1
   1400148ae:	mov    rcx,QWORD PTR [rsp+0x20]
   1400148b3:	call   0x140012640
   1400148b8:	mov    rcx,QWORD PTR [rax]
   1400148bb:	call   0x140013530
   1400148c0:	mov    BYTE PTR [rax],0x1
   1400148c3:	mov    rdx,QWORD PTR [rsp+0x28]
   1400148c8:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400148d0:	call   0x140013c30
   1400148d5:	jmp    0x1400148dc
   1400148d7:	jmp    0x140014560
   1400148dc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400148e1:	call   0x140013530
   1400148e6:	mov    BYTE PTR [rax],0x1
   1400148e9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400148ee:	call   0x140013bc0
   1400148f3:	mov    rcx,rax
   1400148f6:	call   0x140012640
   1400148fb:	mov    QWORD PTR [rsp+0x88],rax
   140014903:	lea    rdx,[rsp+0x41]
   140014908:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014910:	call   0x140013840
   140014915:	mov    rcx,QWORD PTR [rsp+0x88]
   14001491d:	mov    rdx,rcx
   140014920:	mov    rcx,rax
   140014923:	call   0x140012440
   140014928:	lea    rdx,[rsp+0x40]
   14001492d:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014935:	call   0x140013840
   14001493a:	mov    r8d,0x1
   140014940:	mov    rdx,QWORD PTR [rsp+0x38]
   140014945:	mov    rcx,rax
   140014948:	call   0x140014000
   14001494d:	mov    rax,QWORD PTR [rsp+0xa0]
   140014955:	cmp    QWORD PTR [rax+0x8],0x0
   14001495a:	jbe    0x140014977
   14001495c:	mov    rax,QWORD PTR [rsp+0xa0]
   140014964:	mov    rax,QWORD PTR [rax+0x8]
   140014968:	dec    rax
   14001496b:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014973:	mov    QWORD PTR [rcx+0x8],rax
   140014977:	mov    r8,QWORD PTR [rsp+0xa0]
   14001497f:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014987:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001498f:	call   0x140012840
   140014994:	mov    rax,QWORD PTR [rsp+0xa8]
   14001499c:	add    rsp,0x98
   1400149a3:	ret    
   1400149a4:	int3   
   1400149a5:	int3   
   1400149a6:	int3   
   1400149a7:	int3   
   1400149a8:	int3   
   1400149a9:	int3   
   1400149aa:	int3   
   1400149ab:	int3   
   1400149ac:	int3   
   1400149ad:	int3   
   1400149ae:	int3   
   1400149af:	int3   
   1400149b0:	mov    QWORD PTR [rsp+0x18],r8
   1400149b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400149ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400149bf:	sub    rsp,0x28
   1400149c3:	mov    rdx,QWORD PTR [rsp+0x40]
   1400149c8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400149cd:	call   0x140013930
   1400149d2:	mov    r8,QWORD PTR [rsp+0x30]
   1400149d7:	mov    rdx,rax
   1400149da:	mov    rcx,QWORD PTR [rsp+0x38]
   1400149df:	call   0x140012840
   1400149e4:	mov    rax,QWORD PTR [rsp+0x38]
   1400149e9:	add    rsp,0x28
   1400149ed:	ret    
   1400149ee:	int3   
   1400149ef:	int3   
   1400149f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400149f5:	sub    rsp,0x38
   1400149f9:	lea    rdx,[rsp+0x20]
   1400149fe:	mov    rcx,QWORD PTR [rsp+0x40]
   140014a03:	call   0x140013840
   140014a08:	mov    rcx,rax
   140014a0b:	call   0x140014a40
   140014a10:	add    rsp,0x38
   140014a14:	ret    
   140014a15:	int3   
   140014a16:	int3   
   140014a17:	int3   
   140014a18:	int3   
   140014a19:	int3   
   140014a1a:	int3   
   140014a1b:	int3   
   140014a1c:	int3   
   140014a1d:	int3   
   140014a1e:	int3   
   140014a1f:	int3   
   140014a20:	mov    QWORD PTR [rsp+0x8],rcx
   140014a25:	sub    rsp,0x28
   140014a29:	mov    rcx,QWORD PTR [rsp+0x30]
   140014a2e:	call   0x140014a80
   140014a33:	add    rsp,0x28
   140014a37:	ret    
   140014a38:	int3   
   140014a39:	int3   
   140014a3a:	int3   
   140014a3b:	int3   
   140014a3c:	int3   
   140014a3d:	int3   
   140014a3e:	int3   
   140014a3f:	int3   
   140014a40:	mov    QWORD PTR [rsp+0x8],rcx
   140014a45:	sub    rsp,0x28
   140014a49:	mov    rcx,QWORD PTR [rsp+0x30]
   140014a4e:	call   0x140014aa0
   140014a53:	add    rsp,0x28
   140014a57:	ret    
   140014a58:	int3   
   140014a59:	int3   
   140014a5a:	int3   
   140014a5b:	int3   
   140014a5c:	int3   
   140014a5d:	int3   
   140014a5e:	int3   
   140014a5f:	int3   
   140014a60:	mov    QWORD PTR [rsp+0x8],rcx
   140014a65:	movabs rax,0x666666666666666
   140014a6f:	ret    
   140014a70:	mov    QWORD PTR [rsp+0x8],rcx
   140014a75:	movabs rax,0x3ffffffffffffff
   140014a7f:	ret    
   140014a80:	mov    QWORD PTR [rsp+0x8],rcx
   140014a85:	sub    rsp,0x28
   140014a89:	mov    rcx,QWORD PTR [rsp+0x30]
   140014a8e:	call   0x140014a60
   140014a93:	add    rsp,0x28
   140014a97:	ret    
   140014a98:	int3   
   140014a99:	int3   
   140014a9a:	int3   
   140014a9b:	int3   
   140014a9c:	int3   
   140014a9d:	int3   
   140014a9e:	int3   
   140014a9f:	int3   
   140014aa0:	mov    QWORD PTR [rsp+0x8],rcx
   140014aa5:	sub    rsp,0x28
   140014aa9:	mov    rcx,QWORD PTR [rsp+0x30]
   140014aae:	call   0x140014a70
   140014ab3:	add    rsp,0x28
   140014ab7:	ret    
   140014ab8:	int3   
   140014ab9:	int3   
   140014aba:	int3   
   140014abb:	int3   
   140014abc:	int3   
   140014abd:	int3   
   140014abe:	int3   
   140014abf:	int3   
   140014ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140014ac5:	sub    rsp,0x38
   140014ac9:	lea    rdx,[rsp+0x20]
   140014ace:	mov    rcx,QWORD PTR [rsp+0x40]
   140014ad3:	call   0x140013840
   140014ad8:	mov    rcx,rax
   140014adb:	call   0x140014a20
   140014ae0:	add    rsp,0x38
   140014ae4:	ret    
   140014ae5:	int3   
   140014ae6:	int3   
   140014ae7:	int3   
   140014ae8:	int3   
   140014ae9:	int3   
   140014aea:	int3   
   140014aeb:	int3   
   140014aec:	int3   
   140014aed:	int3   
   140014aee:	int3   
   140014aef:	int3   
   140014af0:	mov    QWORD PTR [rsp+0x8],rcx
   140014af5:	sub    rsp,0x28
   140014af9:	mov    rcx,QWORD PTR [rsp+0x30]
   140014afe:	call   0x140012640
   140014b03:	add    rsp,0x28
   140014b07:	ret    
   140014b08:	int3   
   140014b09:	int3   
   140014b0a:	int3   
   140014b0b:	int3   
   140014b0c:	int3   
   140014b0d:	int3   
   140014b0e:	int3   
   140014b0f:	int3   
   140014b10:	mov    QWORD PTR [rsp+0x10],rdx
   140014b15:	mov    QWORD PTR [rsp+0x8],rcx
   140014b1a:	sub    rsp,0x38
   140014b1e:	lea    rdx,[rsp+0x28]
   140014b23:	mov    rcx,QWORD PTR [rsp+0x40]
   140014b28:	call   0x140013dd0
   140014b2d:	mov    rax,QWORD PTR [rax]
   140014b30:	mov    QWORD PTR [rsp+0x20],rax
   140014b35:	mov    rcx,QWORD PTR [rsp+0x48]
   140014b3a:	call   0x140012640
   140014b3f:	mov    r8,rax
   140014b42:	mov    rdx,QWORD PTR [rsp+0x20]
   140014b47:	mov    rcx,QWORD PTR [rsp+0x40]
   140014b4c:	call   0x1400108d0
   140014b51:	add    rsp,0x38
   140014b55:	ret    
   140014b56:	int3   
   140014b57:	int3   
   140014b58:	int3   
   140014b59:	int3   
   140014b5a:	int3   
   140014b5b:	int3   
   140014b5c:	int3   
   140014b5d:	int3   
   140014b5e:	int3   
   140014b5f:	int3   
   140014b60:	mov    QWORD PTR [rsp+0x8],rcx
   140014b65:	mov    rax,QWORD PTR [rsp+0x8]
   140014b6a:	mov    rax,QWORD PTR [rax+0x8]
   140014b6e:	ret    
   140014b6f:	int3   
   140014b70:	mov    QWORD PTR [rsp+0x18],r8
   140014b75:	mov    QWORD PTR [rsp+0x10],rdx
   140014b7a:	mov    QWORD PTR [rsp+0x8],rcx
   140014b7f:	sub    rsp,0x98
   140014b86:	mov    rax,QWORD PTR [rip+0x266c3]        # 0x14003b250
   140014b8d:	xor    rax,rsp
   140014b90:	mov    QWORD PTR [rsp+0x80],rax
   140014b98:	lea    rcx,[rsp+0x20]
   140014b9d:	call   0x140015530
   140014ba2:	mov    r8d,DWORD PTR [rsp+0xa8]
   140014baa:	mov    rdx,QWORD PTR [rsp+0xa0]
   140014bb2:	lea    rcx,[rsp+0x20]
   140014bb7:	call   0x1400155c0
   140014bbc:	lea    rdx,[rsp+0x20]
   140014bc1:	mov    rcx,QWORD PTR [rsp+0xb0]
   140014bc9:	call   0x140015780
   140014bce:	mov    rcx,QWORD PTR [rsp+0x80]
   140014bd6:	xor    rcx,rsp
   140014bd9:	call   0x140021890
   140014bde:	add    rsp,0x98
   140014be5:	ret    
   140014be6:	int3   
   140014be7:	int3   
   140014be8:	int3   
   140014be9:	int3   
   140014bea:	int3   
   140014beb:	int3   
   140014bec:	int3   
   140014bed:	int3   
   140014bee:	int3   
   140014bef:	int3   
   140014bf0:	mov    QWORD PTR [rsp+0x20],r9
   140014bf5:	mov    QWORD PTR [rsp+0x18],r8
   140014bfa:	mov    QWORD PTR [rsp+0x10],rdx
   140014bff:	mov    QWORD PTR [rsp+0x8],rcx
   140014c04:	sub    rsp,0x88
   140014c0b:	mov    rax,QWORD PTR [rip+0x2663e]        # 0x14003b250
   140014c12:	xor    rax,rsp
   140014c15:	mov    QWORD PTR [rsp+0x78],rax
   140014c1a:	mov    BYTE PTR [rsp+0x20],0x0
   140014c1f:	mov    rax,QWORD PTR [rsp+0x98]
   140014c27:	add    rax,0x11
   140014c2b:	mov    rcx,rax
   140014c2e:	call   0x140020f3e
   140014c33:	mov    QWORD PTR [rsp+0x60],rax
   140014c38:	mov    rax,QWORD PTR [rsp+0x60]
   140014c3d:	mov    QWORD PTR [rsp+0x28],rax
   140014c42:	cmp    QWORD PTR [rsp+0x28],0x0
   140014c48:	je     0x140014d3e
   140014c4e:	mov    r8d,0x10
   140014c54:	mov    edx,0x36
   140014c59:	mov    rcx,QWORD PTR [rsp+0x28]
   140014c5e:	call   0x1400216e0
   140014c63:	mov    rax,QWORD PTR [rsp+0x98]
   140014c6b:	inc    rax
   140014c6e:	mov    rcx,QWORD PTR [rsp+0x28]
   140014c73:	add    rcx,0x10
   140014c77:	mov    r8,rax
   140014c7a:	xor    edx,edx
   140014c7c:	call   0x1400216e0
   140014c81:	mov    QWORD PTR [rsp+0x40],0x0
   140014c8a:	jmp    0x140014c99
   140014c8c:	mov    rax,QWORD PTR [rsp+0x40]
   140014c91:	inc    rax
   140014c94:	mov    QWORD PTR [rsp+0x40],rax
   140014c99:	cmp    QWORD PTR [rsp+0x40],0x10
   140014c9f:	jae    0x140014ce2
   140014ca1:	mov    rax,QWORD PTR [rsp+0x40]
   140014ca6:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014cae:	add    rcx,rax
   140014cb1:	mov    rax,rcx
   140014cb4:	movzx  eax,BYTE PTR [rax]
   140014cb7:	mov    rcx,QWORD PTR [rsp+0x40]
   140014cbc:	mov    rdx,QWORD PTR [rsp+0x28]
   140014cc1:	add    rdx,rcx
   140014cc4:	mov    rcx,rdx
   140014cc7:	movzx  ecx,BYTE PTR [rcx]
   140014cca:	xor    ecx,eax
   140014ccc:	mov    eax,ecx
   140014cce:	mov    rcx,QWORD PTR [rsp+0x40]
   140014cd3:	mov    rdx,QWORD PTR [rsp+0x28]
   140014cd8:	add    rdx,rcx
   140014cdb:	mov    rcx,rdx
   140014cde:	mov    BYTE PTR [rcx],al
   140014ce0:	jmp    0x140014c8c
   140014ce2:	mov    rax,QWORD PTR [rsp+0x28]
   140014ce7:	add    rax,0x10
   140014ceb:	mov    r9,QWORD PTR [rsp+0x98]
   140014cf3:	mov    r8,QWORD PTR [rsp+0x90]
   140014cfb:	mov    rdx,QWORD PTR [rsp+0x98]
   140014d03:	mov    rcx,rax
   140014d06:	call   QWORD PTR [rip+0x1164c]        # 0x140026358
   140014d0c:	mov    rax,QWORD PTR [rsp+0x98]
   140014d14:	add    rax,0x10
   140014d18:	lea    r8,[rsp+0x68]
   140014d1d:	mov    rdx,rax
   140014d20:	mov    rcx,QWORD PTR [rsp+0x28]
   140014d25:	call   0x140014b70
   140014d2a:	mov    rax,QWORD PTR [rsp+0x28]
   140014d2f:	mov    QWORD PTR [rsp+0x48],rax
   140014d34:	mov    rcx,QWORD PTR [rsp+0x48]
   140014d39:	call   0x140020b96
   140014d3e:	mov    ecx,0x20
   140014d43:	call   0x140020f3e
   140014d48:	mov    QWORD PTR [rsp+0x50],rax
   140014d4d:	mov    rax,QWORD PTR [rsp+0x50]
   140014d52:	mov    QWORD PTR [rsp+0x30],rax
   140014d57:	cmp    QWORD PTR [rsp+0x30],0x0
   140014d5d:	je     0x140014e2b
   140014d63:	mov    r8d,0x10
   140014d69:	mov    edx,0x5c
   140014d6e:	mov    rcx,QWORD PTR [rsp+0x30]
   140014d73:	call   0x1400216e0
   140014d78:	mov    QWORD PTR [rsp+0x38],0x0
   140014d81:	jmp    0x140014d90
   140014d83:	mov    rax,QWORD PTR [rsp+0x38]
   140014d88:	inc    rax
   140014d8b:	mov    QWORD PTR [rsp+0x38],rax
   140014d90:	cmp    QWORD PTR [rsp+0x38],0x10
   140014d96:	jae    0x140014dd9
   140014d98:	mov    rax,QWORD PTR [rsp+0x38]
   140014d9d:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014da5:	add    rcx,rax
   140014da8:	mov    rax,rcx
   140014dab:	movzx  eax,BYTE PTR [rax]
   140014dae:	mov    rcx,QWORD PTR [rsp+0x38]
   140014db3:	mov    rdx,QWORD PTR [rsp+0x30]
   140014db8:	add    rdx,rcx
   140014dbb:	mov    rcx,rdx
   140014dbe:	movzx  ecx,BYTE PTR [rcx]
   140014dc1:	xor    ecx,eax
   140014dc3:	mov    eax,ecx
   140014dc5:	mov    rcx,QWORD PTR [rsp+0x38]
   140014dca:	mov    rdx,QWORD PTR [rsp+0x30]
   140014dcf:	add    rdx,rcx
   140014dd2:	mov    rcx,rdx
   140014dd5:	mov    BYTE PTR [rcx],al
   140014dd7:	jmp    0x140014d83
   140014dd9:	mov    rax,QWORD PTR [rsp+0x30]
   140014dde:	add    rax,0x10
   140014de2:	mov    r9d,0x10
   140014de8:	lea    r8,[rsp+0x68]
   140014ded:	mov    edx,0x10
   140014df2:	mov    rcx,rax
   140014df5:	call   QWORD PTR [rip+0x1158d]        # 0x140026388
   140014dfb:	mov    r8,QWORD PTR [rsp+0xa8]
   140014e03:	mov    edx,0x20
   140014e08:	mov    rcx,QWORD PTR [rsp+0x30]
   140014e0d:	call   0x140014b70
   140014e12:	mov    rax,QWORD PTR [rsp+0x30]
   140014e17:	mov    QWORD PTR [rsp+0x58],rax
   140014e1c:	mov    rcx,QWORD PTR [rsp+0x58]
   140014e21:	call   0x140020b96
   140014e26:	mov    BYTE PTR [rsp+0x20],0x1
   140014e2b:	movzx  eax,BYTE PTR [rsp+0x20]
   140014e30:	mov    rcx,QWORD PTR [rsp+0x78]
   140014e35:	xor    rcx,rsp
   140014e38:	call   0x140021890
   140014e3d:	add    rsp,0x88
   140014e44:	ret    
   140014e45:	int3   
   140014e46:	int3   
   140014e47:	int3   
   140014e48:	int3   
   140014e49:	int3   
   140014e4a:	int3   
   140014e4b:	int3   
   140014e4c:	int3   
   140014e4d:	int3   
   140014e4e:	int3   
   140014e4f:	int3   
   140014e50:	mov    QWORD PTR [rsp+0x8],rcx
   140014e55:	sub    rsp,0x38
   140014e59:	mov    rax,QWORD PTR [rsp+0x40]
   140014e5e:	lea    rcx,[rip+0x18c7b]        # 0x14002dae0
   140014e65:	mov    QWORD PTR [rax],rcx
   140014e68:	cmp    QWORD PTR [rsp+0x40],0x0
   140014e6e:	je     0x140014e80
   140014e70:	mov    rax,QWORD PTR [rsp+0x40]
   140014e75:	add    rax,0x8
   140014e79:	mov    QWORD PTR [rsp+0x20],rax
   140014e7e:	jmp    0x140014e89
   140014e80:	mov    QWORD PTR [rsp+0x20],0x0
   140014e89:	mov    rcx,QWORD PTR [rsp+0x20]
   140014e8e:	call   QWORD PTR [rip+0x11334]        # 0x1400261c8
   140014e94:	mov    rax,QWORD PTR [rsp+0x40]
   140014e99:	add    rsp,0x38
   140014e9d:	ret    
   140014e9e:	int3   
   140014e9f:	int3   
   140014ea0:	int3   
   140014ea1:	int3   
   140014ea2:	int3   
   140014ea3:	int3   
   140014ea4:	int3   
   140014ea5:	int3   
   140014ea6:	int3   
   140014ea7:	int3   
   140014ea8:	int3   
   140014ea9:	int3   
   140014eaa:	int3   
   140014eab:	int3   
   140014eac:	int3   
   140014ead:	int3   
   140014eae:	int3   
   140014eaf:	int3   
   140014eb0:	mov    QWORD PTR [rsp+0x8],rcx
   140014eb5:	sub    rsp,0x38
   140014eb9:	mov    rax,QWORD PTR [rsp+0x40]
   140014ebe:	lea    rcx,[rip+0x18c1b]        # 0x14002dae0
   140014ec5:	mov    QWORD PTR [rax],rcx
   140014ec8:	cmp    QWORD PTR [rsp+0x40],0x0
   140014ece:	je     0x140014ee0
   140014ed0:	mov    rax,QWORD PTR [rsp+0x40]
   140014ed5:	add    rax,0x8
   140014ed9:	mov    QWORD PTR [rsp+0x20],rax
   140014ede:	jmp    0x140014ee9
   140014ee0:	mov    QWORD PTR [rsp+0x20],0x0
   140014ee9:	mov    rcx,QWORD PTR [rsp+0x20]
   140014eee:	call   QWORD PTR [rip+0x11254]        # 0x140026148
   140014ef4:	add    rsp,0x38
   140014ef8:	ret    
   140014ef9:	int3   
   140014efa:	int3   
   140014efb:	int3   
   140014efc:	int3   
   140014efd:	int3   
   140014efe:	int3   
   140014eff:	int3   
   140014f00:	mov    QWORD PTR [rsp+0x8],rcx
   140014f05:	sub    rsp,0x38
   140014f09:	cmp    QWORD PTR [rsp+0x40],0x0
   140014f0f:	je     0x140014f21
   140014f11:	mov    rax,QWORD PTR [rsp+0x40]
   140014f16:	add    rax,0x8
   140014f1a:	mov    QWORD PTR [rsp+0x20],rax
   140014f1f:	jmp    0x140014f2a
   140014f21:	mov    QWORD PTR [rsp+0x20],0x0
   140014f2a:	mov    rcx,QWORD PTR [rsp+0x20]
   140014f2f:	call   QWORD PTR [rip+0x1129b]        # 0x1400261d0
   140014f35:	add    rsp,0x38
   140014f39:	ret    
   140014f3a:	int3   
   140014f3b:	int3   
   140014f3c:	int3   
   140014f3d:	int3   
   140014f3e:	int3   
   140014f3f:	int3   
   140014f40:	mov    QWORD PTR [rsp+0x8],rcx
   140014f45:	sub    rsp,0x38
   140014f49:	cmp    QWORD PTR [rsp+0x40],0x0
   140014f4f:	je     0x140014f61
   140014f51:	mov    rax,QWORD PTR [rsp+0x40]
   140014f56:	add    rax,0x8
   140014f5a:	mov    QWORD PTR [rsp+0x20],rax
   140014f5f:	jmp    0x140014f6a
   140014f61:	mov    QWORD PTR [rsp+0x20],0x0
   140014f6a:	mov    rcx,QWORD PTR [rsp+0x20]
   140014f6f:	call   QWORD PTR [rip+0x1126b]        # 0x1400261e0
   140014f75:	add    rsp,0x38
   140014f79:	ret    
   140014f7a:	int3   
   140014f7b:	int3   
   140014f7c:	int3   
   140014f7d:	int3   
   140014f7e:	int3   
   140014f7f:	int3   
   140014f80:	mov    DWORD PTR [rsp+0x10],edx
   140014f84:	mov    QWORD PTR [rsp+0x8],rcx
   140014f89:	sub    rsp,0x28
   140014f8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140014f92:	call   0x140014eb0
   140014f97:	mov    eax,DWORD PTR [rsp+0x38]
   140014f9b:	and    eax,0x1
   140014f9e:	test   eax,eax
   140014fa0:	je     0x140014fac
   140014fa2:	mov    rcx,QWORD PTR [rsp+0x30]
   140014fa7:	call   0x140020b90
   140014fac:	mov    rax,QWORD PTR [rsp+0x30]
   140014fb1:	add    rsp,0x28
   140014fb5:	ret    
   140014fb6:	int3   
   140014fb7:	int3   
   140014fb8:	int3   
   140014fb9:	int3   
   140014fba:	int3   
   140014fbb:	int3   
   140014fbc:	int3   
   140014fbd:	int3   
   140014fbe:	int3   
   140014fbf:	int3   
   140014fc0:	mov    DWORD PTR [rsp+0x18],r8d
   140014fc5:	mov    QWORD PTR [rsp+0x10],rdx
   140014fca:	mov    QWORD PTR [rsp+0x8],rcx
   140014fcf:	sub    rsp,0x48
   140014fd3:	mov    DWORD PTR [rsp+0x20],0x0
   140014fdb:	jmp    0x140014fe7
   140014fdd:	mov    eax,DWORD PTR [rsp+0x20]
   140014fe1:	inc    eax
   140014fe3:	mov    DWORD PTR [rsp+0x20],eax
   140014fe7:	cmp    DWORD PTR [rsp+0x20],0x4
   140014fec:	jge    0x140015050
   140014fee:	mov    DWORD PTR [rsp+0x24],0x0
   140014ff6:	jmp    0x140015002
   140014ff8:	mov    eax,DWORD PTR [rsp+0x24]
   140014ffc:	inc    eax
   140014ffe:	mov    DWORD PTR [rsp+0x24],eax
   140015002:	cmp    DWORD PTR [rsp+0x24],0x100
   14001500a:	jge    0x14001504e
   14001500c:	movsxd rax,DWORD PTR [rsp+0x20]
   140015011:	imul   rax,rax,0x400
   140015018:	lea    rcx,[rip+0x18b21]        # 0x14002db40
   14001501f:	add    rcx,rax
   140015022:	mov    rax,rcx
   140015025:	movsxd rcx,DWORD PTR [rsp+0x24]
   14001502a:	movsxd rdx,DWORD PTR [rsp+0x20]
   14001502f:	imul   rdx,rdx,0x400
   140015036:	mov    r8,QWORD PTR [rsp+0x50]
   14001503b:	lea    rdx,[r8+rdx*1+0x48]
   140015040:	movsxd r8,DWORD PTR [rsp+0x24]
   140015045:	mov    eax,DWORD PTR [rax+rcx*4]
   140015048:	mov    DWORD PTR [rdx+r8*4],eax
   14001504c:	jmp    0x140014ff8
   14001504e:	jmp    0x140014fdd
   140015050:	mov    DWORD PTR [rsp+0x24],0x0
   140015058:	mov    DWORD PTR [rsp+0x20],0x0
   140015060:	jmp    0x14001506c
   140015062:	mov    eax,DWORD PTR [rsp+0x20]
   140015066:	inc    eax
   140015068:	mov    DWORD PTR [rsp+0x20],eax
   14001506c:	cmp    DWORD PTR [rsp+0x20],0x12
   140015071:	jge    0x1400150fa
   140015077:	mov    DWORD PTR [rsp+0x34],0x0
   14001507f:	mov    DWORD PTR [rsp+0x30],0x0
   140015087:	jmp    0x140015093
   140015089:	mov    eax,DWORD PTR [rsp+0x30]
   14001508d:	inc    eax
   14001508f:	mov    DWORD PTR [rsp+0x30],eax
   140015093:	cmp    DWORD PTR [rsp+0x30],0x4
   140015098:	jge    0x1400150d3
   14001509a:	mov    eax,DWORD PTR [rsp+0x34]
   14001509e:	shl    eax,0x8
   1400150a1:	movsxd rcx,DWORD PTR [rsp+0x24]
   1400150a6:	mov    rdx,QWORD PTR [rsp+0x58]
   1400150ab:	movzx  ecx,BYTE PTR [rdx+rcx*1]
   1400150af:	or     eax,ecx
   1400150b1:	mov    DWORD PTR [rsp+0x34],eax
   1400150b5:	mov    eax,DWORD PTR [rsp+0x24]
   1400150b9:	inc    eax
   1400150bb:	mov    DWORD PTR [rsp+0x24],eax
   1400150bf:	mov    eax,DWORD PTR [rsp+0x60]
   1400150c3:	cmp    DWORD PTR [rsp+0x24],eax
   1400150c7:	jl     0x1400150d1
   1400150c9:	mov    DWORD PTR [rsp+0x24],0x0
   1400150d1:	jmp    0x140015089
   1400150d3:	movsxd rax,DWORD PTR [rsp+0x20]
   1400150d8:	lea    rcx,[rip+0x18a11]        # 0x14002daf0
   1400150df:	mov    edx,DWORD PTR [rsp+0x34]
   1400150e3:	mov    eax,DWORD PTR [rcx+rax*4]
   1400150e6:	xor    eax,edx
   1400150e8:	movsxd rcx,DWORD PTR [rsp+0x20]
   1400150ed:	mov    rdx,QWORD PTR [rsp+0x50]
   1400150f2:	mov    DWORD PTR [rdx+rcx*4],eax
   1400150f5:	jmp    0x140015062
   1400150fa:	mov    DWORD PTR [rsp+0x28],0x0
   140015102:	mov    DWORD PTR [rsp+0x2c],0x0
   14001510a:	mov    DWORD PTR [rsp+0x20],0x0
   140015112:	jmp    0x14001511f
   140015114:	mov    eax,DWORD PTR [rsp+0x20]
   140015118:	add    eax,0x2
   14001511b:	mov    DWORD PTR [rsp+0x20],eax
   14001511f:	cmp    DWORD PTR [rsp+0x20],0x12
   140015124:	jge    0x140015161
   140015126:	lea    r8,[rsp+0x2c]
   14001512b:	lea    rdx,[rsp+0x28]
   140015130:	mov    rcx,QWORD PTR [rsp+0x50]
   140015135:	call   0x140015210
   14001513a:	movsxd rax,DWORD PTR [rsp+0x20]
   14001513f:	mov    rcx,QWORD PTR [rsp+0x50]
   140015144:	mov    edx,DWORD PTR [rsp+0x28]
   140015148:	mov    DWORD PTR [rcx+rax*4],edx
   14001514b:	mov    eax,DWORD PTR [rsp+0x20]
   14001514f:	inc    eax
   140015151:	cdqe   
   140015153:	mov    rcx,QWORD PTR [rsp+0x50]
   140015158:	mov    edx,DWORD PTR [rsp+0x2c]
   14001515c:	mov    DWORD PTR [rcx+rax*4],edx
   14001515f:	jmp    0x140015114
   140015161:	mov    DWORD PTR [rsp+0x20],0x0
   140015169:	jmp    0x140015175
   14001516b:	mov    eax,DWORD PTR [rsp+0x20]
   14001516f:	inc    eax
   140015171:	mov    DWORD PTR [rsp+0x20],eax
   140015175:	cmp    DWORD PTR [rsp+0x20],0x4
   14001517a:	jge    0x140015202
   140015180:	mov    DWORD PTR [rsp+0x24],0x0
   140015188:	jmp    0x140015195
   14001518a:	mov    eax,DWORD PTR [rsp+0x24]
   14001518e:	add    eax,0x2
   140015191:	mov    DWORD PTR [rsp+0x24],eax
   140015195:	cmp    DWORD PTR [rsp+0x24],0x100
   14001519d:	jge    0x1400151fd
   14001519f:	lea    r8,[rsp+0x2c]
   1400151a4:	lea    rdx,[rsp+0x28]
   1400151a9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400151ae:	call   0x140015210
   1400151b3:	movsxd rax,DWORD PTR [rsp+0x20]
   1400151b8:	imul   rax,rax,0x400
   1400151bf:	mov    rcx,QWORD PTR [rsp+0x50]
   1400151c4:	lea    rax,[rcx+rax*1+0x48]
   1400151c9:	movsxd rcx,DWORD PTR [rsp+0x24]
   1400151ce:	mov    edx,DWORD PTR [rsp+0x28]
   1400151d2:	mov    DWORD PTR [rax+rcx*4],edx
   1400151d5:	movsxd rax,DWORD PTR [rsp+0x20]
   1400151da:	imul   rax,rax,0x400
   1400151e1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400151e6:	lea    rax,[rcx+rax*1+0x48]
   1400151eb:	mov    ecx,DWORD PTR [rsp+0x24]
   1400151ef:	inc    ecx
   1400151f1:	movsxd rcx,ecx
   1400151f4:	mov    edx,DWORD PTR [rsp+0x2c]
   1400151f8:	mov    DWORD PTR [rax+rcx*4],edx
   1400151fb:	jmp    0x14001518a
   1400151fd:	jmp    0x14001516b
   140015202:	add    rsp,0x48
   140015206:	ret    
   140015207:	int3   
   140015208:	int3   
   140015209:	int3   
   14001520a:	int3   
   14001520b:	int3   
   14001520c:	int3   
   14001520d:	int3   
   14001520e:	int3   
   14001520f:	int3   
   140015210:	mov    QWORD PTR [rsp+0x18],r8
   140015215:	mov    QWORD PTR [rsp+0x10],rdx
   14001521a:	mov    QWORD PTR [rsp+0x8],rcx
   14001521f:	sub    rsp,0x38
   140015223:	mov    rax,QWORD PTR [rsp+0x48]
   140015228:	mov    eax,DWORD PTR [rax]
   14001522a:	mov    DWORD PTR [rsp+0x24],eax
   14001522e:	mov    rax,QWORD PTR [rsp+0x50]
   140015233:	mov    eax,DWORD PTR [rax]
   140015235:	mov    DWORD PTR [rsp+0x28],eax
   140015239:	xor    eax,eax
   14001523b:	mov    WORD PTR [rsp+0x20],ax
   140015240:	jmp    0x14001524f
   140015242:	movzx  eax,WORD PTR [rsp+0x20]
   140015247:	inc    ax
   14001524a:	mov    WORD PTR [rsp+0x20],ax
   14001524f:	movsx  eax,WORD PTR [rsp+0x20]
   140015254:	cmp    eax,0x10
   140015257:	jge    0x1400152a3
   140015259:	movsx  rax,WORD PTR [rsp+0x20]
   14001525f:	mov    rcx,QWORD PTR [rsp+0x40]
   140015264:	mov    eax,DWORD PTR [rcx+rax*4]
   140015267:	mov    ecx,DWORD PTR [rsp+0x24]
   14001526b:	xor    ecx,eax
   14001526d:	mov    eax,ecx
   14001526f:	mov    DWORD PTR [rsp+0x24],eax
   140015273:	mov    edx,DWORD PTR [rsp+0x24]
   140015277:	mov    rcx,QWORD PTR [rsp+0x40]
   14001527c:	call   0x140015430
   140015281:	xor    eax,DWORD PTR [rsp+0x28]
   140015285:	mov    DWORD PTR [rsp+0x28],eax
   140015289:	mov    eax,DWORD PTR [rsp+0x24]
   14001528d:	mov    DWORD PTR [rsp+0x2c],eax
   140015291:	mov    eax,DWORD PTR [rsp+0x28]
   140015295:	mov    DWORD PTR [rsp+0x24],eax
   140015299:	mov    eax,DWORD PTR [rsp+0x2c]
   14001529d:	mov    DWORD PTR [rsp+0x28],eax
   1400152a1:	jmp    0x140015242
   1400152a3:	mov    eax,DWORD PTR [rsp+0x24]
   1400152a7:	mov    DWORD PTR [rsp+0x2c],eax
   1400152ab:	mov    eax,DWORD PTR [rsp+0x28]
   1400152af:	mov    DWORD PTR [rsp+0x24],eax
   1400152b3:	mov    eax,DWORD PTR [rsp+0x2c]
   1400152b7:	mov    DWORD PTR [rsp+0x28],eax
   1400152bb:	mov    eax,0x4
   1400152c0:	imul   rax,rax,0x10
   1400152c4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400152c9:	mov    eax,DWORD PTR [rcx+rax*1]
   1400152cc:	mov    ecx,DWORD PTR [rsp+0x28]
   1400152d0:	xor    ecx,eax
   1400152d2:	mov    eax,ecx
   1400152d4:	mov    DWORD PTR [rsp+0x28],eax
   1400152d8:	mov    eax,0x4
   1400152dd:	imul   rax,rax,0x11
   1400152e1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400152e6:	mov    eax,DWORD PTR [rcx+rax*1]
   1400152e9:	mov    ecx,DWORD PTR [rsp+0x24]
   1400152ed:	xor    ecx,eax
   1400152ef:	mov    eax,ecx
   1400152f1:	mov    DWORD PTR [rsp+0x24],eax
   1400152f5:	mov    rax,QWORD PTR [rsp+0x48]
   1400152fa:	mov    ecx,DWORD PTR [rsp+0x24]
   1400152fe:	mov    DWORD PTR [rax],ecx
   140015300:	mov    rax,QWORD PTR [rsp+0x50]
   140015305:	mov    ecx,DWORD PTR [rsp+0x28]
   140015309:	mov    DWORD PTR [rax],ecx
   14001530b:	add    rsp,0x38
   14001530f:	ret    
   140015310:	int3   
   140015311:	int3   
   140015312:	int3   
   140015313:	int3   
   140015314:	int3   
   140015315:	int3   
   140015316:	int3   
   140015317:	int3   
   140015318:	int3   
   140015319:	int3   
   14001531a:	int3   
   14001531b:	int3   
   14001531c:	int3   
   14001531d:	int3   
   14001531e:	int3   
   14001531f:	int3   
   140015320:	mov    QWORD PTR [rsp+0x18],r8
   140015325:	mov    QWORD PTR [rsp+0x10],rdx
   14001532a:	mov    QWORD PTR [rsp+0x8],rcx
   14001532f:	sub    rsp,0x38
   140015333:	mov    rax,QWORD PTR [rsp+0x48]
   140015338:	mov    eax,DWORD PTR [rax]
   14001533a:	mov    DWORD PTR [rsp+0x24],eax
   14001533e:	mov    rax,QWORD PTR [rsp+0x50]
   140015343:	mov    eax,DWORD PTR [rax]
   140015345:	mov    DWORD PTR [rsp+0x28],eax
   140015349:	mov    eax,0x11
   14001534e:	mov    WORD PTR [rsp+0x20],ax
   140015353:	jmp    0x140015362
   140015355:	movzx  eax,WORD PTR [rsp+0x20]
   14001535a:	dec    ax
   14001535d:	mov    WORD PTR [rsp+0x20],ax
   140015362:	movsx  eax,WORD PTR [rsp+0x20]
   140015367:	cmp    eax,0x1
   14001536a:	jle    0x1400153b6
   14001536c:	movsx  rax,WORD PTR [rsp+0x20]
   140015372:	mov    rcx,QWORD PTR [rsp+0x40]
   140015377:	mov    eax,DWORD PTR [rcx+rax*4]
   14001537a:	mov    ecx,DWORD PTR [rsp+0x24]
   14001537e:	xor    ecx,eax
   140015380:	mov    eax,ecx
   140015382:	mov    DWORD PTR [rsp+0x24],eax
   140015386:	mov    edx,DWORD PTR [rsp+0x24]
   14001538a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001538f:	call   0x140015430
   140015394:	xor    eax,DWORD PTR [rsp+0x28]
   140015398:	mov    DWORD PTR [rsp+0x28],eax
   14001539c:	mov    eax,DWORD PTR [rsp+0x24]
   1400153a0:	mov    DWORD PTR [rsp+0x2c],eax
   1400153a4:	mov    eax,DWORD PTR [rsp+0x28]
   1400153a8:	mov    DWORD PTR [rsp+0x24],eax
   1400153ac:	mov    eax,DWORD PTR [rsp+0x2c]
   1400153b0:	mov    DWORD PTR [rsp+0x28],eax
   1400153b4:	jmp    0x140015355
   1400153b6:	mov    eax,DWORD PTR [rsp+0x24]
   1400153ba:	mov    DWORD PTR [rsp+0x2c],eax
   1400153be:	mov    eax,DWORD PTR [rsp+0x28]
   1400153c2:	mov    DWORD PTR [rsp+0x24],eax
   1400153c6:	mov    eax,DWORD PTR [rsp+0x2c]
   1400153ca:	mov    DWORD PTR [rsp+0x28],eax
   1400153ce:	mov    eax,0x4
   1400153d3:	imul   rax,rax,0x1
   1400153d7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400153dc:	mov    eax,DWORD PTR [rcx+rax*1]
   1400153df:	mov    ecx,DWORD PTR [rsp+0x28]
   1400153e3:	xor    ecx,eax
   1400153e5:	mov    eax,ecx
   1400153e7:	mov    DWORD PTR [rsp+0x28],eax
   1400153eb:	mov    eax,0x4
   1400153f0:	imul   rax,rax,0x0
   1400153f4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400153f9:	mov    eax,DWORD PTR [rcx+rax*1]
   1400153fc:	mov    ecx,DWORD PTR [rsp+0x24]
   140015400:	xor    ecx,eax
   140015402:	mov    eax,ecx
   140015404:	mov    DWORD PTR [rsp+0x24],eax
   140015408:	mov    rax,QWORD PTR [rsp+0x48]
   14001540d:	mov    ecx,DWORD PTR [rsp+0x24]
   140015411:	mov    DWORD PTR [rax],ecx
   140015413:	mov    rax,QWORD PTR [rsp+0x50]
   140015418:	mov    ecx,DWORD PTR [rsp+0x28]
   14001541c:	mov    DWORD PTR [rax],ecx
   14001541e:	add    rsp,0x38
   140015422:	ret    
   140015423:	int3   
   140015424:	int3   
   140015425:	int3   
   140015426:	int3   
   140015427:	int3   
   140015428:	int3   
   140015429:	int3   
   14001542a:	int3   
   14001542b:	int3   
   14001542c:	int3   
   14001542d:	int3   
   14001542e:	int3   
   14001542f:	int3   
   140015430:	mov    DWORD PTR [rsp+0x10],edx
   140015434:	mov    QWORD PTR [rsp+0x8],rcx
   140015439:	sub    rsp,0x28
   14001543d:	mov    eax,DWORD PTR [rsp+0x38]
   140015441:	and    eax,0xff
   140015446:	mov    WORD PTR [rsp+0xc],ax
   14001544b:	mov    eax,DWORD PTR [rsp+0x38]
   14001544f:	shr    eax,0x8
   140015452:	mov    DWORD PTR [rsp+0x38],eax
   140015456:	mov    eax,DWORD PTR [rsp+0x38]
   14001545a:	and    eax,0xff
   14001545f:	mov    WORD PTR [rsp+0x8],ax
   140015464:	mov    eax,DWORD PTR [rsp+0x38]
   140015468:	shr    eax,0x8
   14001546b:	mov    DWORD PTR [rsp+0x38],eax
   14001546f:	mov    eax,DWORD PTR [rsp+0x38]
   140015473:	and    eax,0xff
   140015478:	mov    WORD PTR [rsp+0x4],ax
   14001547d:	mov    eax,DWORD PTR [rsp+0x38]
   140015481:	shr    eax,0x8
   140015484:	mov    DWORD PTR [rsp+0x38],eax
   140015488:	mov    eax,DWORD PTR [rsp+0x38]
   14001548c:	and    eax,0xff
   140015491:	mov    WORD PTR [rsp],ax
   140015495:	mov    eax,0x400
   14001549a:	imul   rax,rax,0x0
   14001549e:	mov    rcx,QWORD PTR [rsp+0x30]
   1400154a3:	lea    rax,[rcx+rax*1+0x48]
   1400154a8:	movzx  ecx,WORD PTR [rsp]
   1400154ac:	mov    edx,0x400
   1400154b1:	imul   rdx,rdx,0x1
   1400154b5:	mov    r8,QWORD PTR [rsp+0x30]
   1400154ba:	lea    rdx,[r8+rdx*1+0x48]
   1400154bf:	movzx  r8d,WORD PTR [rsp+0x4]
   1400154c5:	mov    eax,DWORD PTR [rax+rcx*4]
   1400154c8:	add    eax,DWORD PTR [rdx+r8*4]
   1400154cc:	mov    DWORD PTR [rsp+0x10],eax
   1400154d0:	mov    eax,0x400
   1400154d5:	imul   rax,rax,0x2
   1400154d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400154de:	lea    rax,[rcx+rax*1+0x48]
   1400154e3:	movzx  ecx,WORD PTR [rsp+0x8]
   1400154e8:	mov    eax,DWORD PTR [rax+rcx*4]
   1400154eb:	mov    ecx,DWORD PTR [rsp+0x10]
   1400154ef:	xor    ecx,eax
   1400154f1:	mov    eax,ecx
   1400154f3:	mov    DWORD PTR [rsp+0x10],eax
   1400154f7:	mov    eax,0x400
   1400154fc:	imul   rax,rax,0x3
   140015500:	mov    rcx,QWORD PTR [rsp+0x30]
   140015505:	lea    rax,[rcx+rax*1+0x48]
   14001550a:	movzx  ecx,WORD PTR [rsp+0xc]
   14001550f:	mov    eax,DWORD PTR [rax+rcx*4]
   140015512:	mov    ecx,DWORD PTR [rsp+0x10]
   140015516:	add    ecx,eax
   140015518:	mov    eax,ecx
   14001551a:	mov    DWORD PTR [rsp+0x10],eax
   14001551e:	mov    eax,DWORD PTR [rsp+0x10]
   140015522:	add    rsp,0x28
   140015526:	ret    
   140015527:	int3   
   140015528:	int3   
   140015529:	int3   
   14001552a:	int3   
   14001552b:	int3   
   14001552c:	int3   
   14001552d:	int3   
   14001552e:	int3   
   14001552f:	int3   
   140015530:	mov    QWORD PTR [rsp+0x8],rcx
   140015535:	mov    eax,0x4
   14001553a:	imul   rax,rax,0x1
   14001553e:	mov    rcx,QWORD PTR [rsp+0x8]
   140015543:	mov    DWORD PTR [rcx+rax*1+0x10],0x0
   14001554b:	mov    eax,0x4
   140015550:	imul   rax,rax,0x0
   140015554:	mov    rcx,QWORD PTR [rsp+0x8]
   140015559:	mov    DWORD PTR [rcx+rax*1+0x10],0x0
   140015561:	mov    eax,0x4
   140015566:	imul   rax,rax,0x0
   14001556a:	mov    rcx,QWORD PTR [rsp+0x8]
   14001556f:	mov    DWORD PTR [rcx+rax*1],0x67452301
   140015576:	mov    eax,0x4
   14001557b:	imul   rax,rax,0x1
   14001557f:	mov    rcx,QWORD PTR [rsp+0x8]
   140015584:	mov    DWORD PTR [rcx+rax*1],0xefcdab89
   14001558b:	mov    eax,0x4
   140015590:	imul   rax,rax,0x2
   140015594:	mov    rcx,QWORD PTR [rsp+0x8]
   140015599:	mov    DWORD PTR [rcx+rax*1],0x98badcfe
   1400155a0:	mov    eax,0x4
   1400155a5:	imul   rax,rax,0x3
   1400155a9:	mov    rcx,QWORD PTR [rsp+0x8]
   1400155ae:	mov    DWORD PTR [rcx+rax*1],0x10325476
   1400155b5:	ret    
   1400155b6:	int3   
   1400155b7:	int3   
   1400155b8:	int3   
   1400155b9:	int3   
   1400155ba:	int3   
   1400155bb:	int3   
   1400155bc:	int3   
   1400155bd:	int3   
   1400155be:	int3   
   1400155bf:	int3   
   1400155c0:	mov    DWORD PTR [rsp+0x18],r8d
   1400155c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400155ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400155cf:	sub    rsp,0x48
   1400155d3:	mov    eax,0x4
   1400155d8:	imul   rax,rax,0x0
   1400155dc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400155e1:	mov    eax,DWORD PTR [rcx+rax*1+0x10]
   1400155e5:	shr    eax,0x3
   1400155e8:	and    eax,0x3f
   1400155eb:	mov    DWORD PTR [rsp+0x24],eax
   1400155ef:	mov    eax,0x4
   1400155f4:	imul   rax,rax,0x0
   1400155f8:	mov    ecx,DWORD PTR [rsp+0x60]
   1400155fc:	shl    ecx,0x3
   1400155ff:	mov    rdx,QWORD PTR [rsp+0x50]
   140015604:	mov    eax,DWORD PTR [rdx+rax*1+0x10]
   140015608:	add    eax,ecx
   14001560a:	mov    DWORD PTR [rsp+0x2c],eax
   14001560e:	mov    eax,0x4
   140015613:	imul   rax,rax,0x0
   140015617:	mov    rcx,QWORD PTR [rsp+0x50]
   14001561c:	mov    edx,DWORD PTR [rsp+0x2c]
   140015620:	mov    DWORD PTR [rcx+rax*1+0x10],edx
   140015624:	mov    eax,DWORD PTR [rsp+0x60]
   140015628:	shl    eax,0x3
   14001562b:	cmp    DWORD PTR [rsp+0x2c],eax
   14001562f:	jae    0x140015657
   140015631:	mov    eax,0x4
   140015636:	imul   rax,rax,0x1
   14001563a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001563f:	mov    eax,DWORD PTR [rcx+rax*1+0x10]
   140015643:	inc    eax
   140015645:	mov    ecx,0x4
   14001564a:	imul   rcx,rcx,0x1
   14001564e:	mov    rdx,QWORD PTR [rsp+0x50]
   140015653:	mov    DWORD PTR [rdx+rcx*1+0x10],eax
   140015657:	mov    eax,0x4
   14001565c:	imul   rax,rax,0x1
   140015660:	mov    ecx,DWORD PTR [rsp+0x60]
   140015664:	shr    ecx,0x1d
   140015667:	mov    rdx,QWORD PTR [rsp+0x50]
   14001566c:	add    ecx,DWORD PTR [rdx+rax*1+0x10]
   140015670:	mov    eax,ecx
   140015672:	mov    ecx,0x4
   140015677:	imul   rcx,rcx,0x1
   14001567b:	mov    rdx,QWORD PTR [rsp+0x50]
   140015680:	mov    DWORD PTR [rdx+rcx*1+0x10],eax
   140015684:	mov    eax,0x40
   140015689:	sub    eax,DWORD PTR [rsp+0x24]
   14001568d:	mov    DWORD PTR [rsp+0x28],eax
   140015691:	mov    eax,DWORD PTR [rsp+0x28]
   140015695:	cmp    DWORD PTR [rsp+0x60],eax
   140015699:	jb     0x14001571f
   14001569f:	mov    eax,DWORD PTR [rsp+0x24]
   1400156a3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400156a8:	lea    rax,[rcx+rax*1+0x18]
   1400156ad:	mov    r8d,DWORD PTR [rsp+0x28]
   1400156b2:	mov    rdx,QWORD PTR [rsp+0x58]
   1400156b7:	mov    rcx,rax
   1400156ba:	call   0x1400171a0
   1400156bf:	mov    rax,QWORD PTR [rsp+0x50]
   1400156c4:	add    rax,0x18
   1400156c8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400156cd:	mov    rdx,rax
   1400156d0:	call   0x140015870
   1400156d5:	mov    eax,DWORD PTR [rsp+0x28]
   1400156d9:	mov    DWORD PTR [rsp+0x20],eax
   1400156dd:	jmp    0x1400156ea
   1400156df:	mov    eax,DWORD PTR [rsp+0x20]
   1400156e3:	add    eax,0x40
   1400156e6:	mov    DWORD PTR [rsp+0x20],eax
   1400156ea:	mov    eax,DWORD PTR [rsp+0x20]
   1400156ee:	add    eax,0x3f
   1400156f1:	cmp    eax,DWORD PTR [rsp+0x60]
   1400156f5:	jae    0x140015715
   1400156f7:	mov    eax,DWORD PTR [rsp+0x20]
   1400156fb:	mov    rcx,QWORD PTR [rsp+0x58]
   140015700:	add    rcx,rax
   140015703:	mov    rax,rcx
   140015706:	mov    rcx,QWORD PTR [rsp+0x50]
   14001570b:	mov    rdx,rax
   14001570e:	call   0x140015870
   140015713:	jmp    0x1400156df
   140015715:	mov    DWORD PTR [rsp+0x24],0x0
   14001571d:	jmp    0x140015727
   14001571f:	mov    DWORD PTR [rsp+0x20],0x0
   140015727:	mov    eax,DWORD PTR [rsp+0x20]
   14001572b:	mov    ecx,DWORD PTR [rsp+0x60]
   14001572f:	sub    ecx,eax
   140015731:	mov    eax,ecx
   140015733:	mov    ecx,DWORD PTR [rsp+0x20]
   140015737:	mov    rdx,QWORD PTR [rsp+0x58]
   14001573c:	add    rdx,rcx
   14001573f:	mov    rcx,rdx
   140015742:	mov    edx,DWORD PTR [rsp+0x24]
   140015746:	mov    r8,QWORD PTR [rsp+0x50]
   14001574b:	lea    rdx,[r8+rdx*1+0x18]
   140015750:	mov    QWORD PTR [rsp+0x30],rdx
   140015755:	mov    r8d,eax
   140015758:	mov    rdx,rcx
   14001575b:	mov    rax,QWORD PTR [rsp+0x30]
   140015760:	mov    rcx,rax
   140015763:	call   0x1400171a0
   140015768:	add    rsp,0x48
   14001576c:	ret    
   14001576d:	int3   
   14001576e:	int3   
   14001576f:	int3   
   140015770:	int3   
   140015771:	int3   
   140015772:	int3   
   140015773:	int3   
   140015774:	int3   
   140015775:	int3   
   140015776:	int3   
   140015777:	int3   
   140015778:	int3   
   140015779:	int3   
   14001577a:	int3   
   14001577b:	int3   
   14001577c:	int3   
   14001577d:	int3   
   14001577e:	int3   
   14001577f:	int3   
   140015780:	mov    QWORD PTR [rsp+0x10],rdx
   140015785:	mov    QWORD PTR [rsp+0x8],rcx
   14001578a:	sub    rsp,0x48
   14001578e:	mov    rax,QWORD PTR [rip+0x25abb]        # 0x14003b250
   140015795:	xor    rax,rsp
   140015798:	mov    QWORD PTR [rsp+0x38],rax
   14001579d:	mov    rax,QWORD PTR [rsp+0x58]
   1400157a2:	add    rax,0x10
   1400157a6:	mov    r8d,0x8
   1400157ac:	mov    rdx,rax
   1400157af:	lea    rcx,[rsp+0x30]
   1400157b4:	call   0x140017010
   1400157b9:	mov    eax,0x4
   1400157be:	imul   rax,rax,0x0
   1400157c2:	mov    rcx,QWORD PTR [rsp+0x58]
   1400157c7:	mov    eax,DWORD PTR [rcx+rax*1+0x10]
   1400157cb:	shr    eax,0x3
   1400157ce:	and    eax,0x3f
   1400157d1:	mov    DWORD PTR [rsp+0x20],eax
   1400157d5:	cmp    DWORD PTR [rsp+0x20],0x38
   1400157da:	jae    0x1400157eb
   1400157dc:	mov    eax,0x38
   1400157e1:	sub    eax,DWORD PTR [rsp+0x20]
   1400157e5:	mov    DWORD PTR [rsp+0x24],eax
   1400157e9:	jmp    0x1400157f8
   1400157eb:	mov    eax,0x78
   1400157f0:	sub    eax,DWORD PTR [rsp+0x20]
   1400157f4:	mov    DWORD PTR [rsp+0x24],eax
   1400157f8:	mov    eax,DWORD PTR [rsp+0x24]
   1400157fc:	mov    DWORD PTR [rsp+0x28],eax
   140015800:	mov    r8d,DWORD PTR [rsp+0x28]
   140015805:	lea    rdx,[rip+0x259d4]        # 0x14003b1e0
   14001580c:	mov    rcx,QWORD PTR [rsp+0x58]
   140015811:	call   0x1400155c0
   140015816:	mov    r8d,0x8
   14001581c:	lea    rdx,[rsp+0x30]
   140015821:	mov    rcx,QWORD PTR [rsp+0x58]
   140015826:	call   0x1400155c0
   14001582b:	mov    rax,QWORD PTR [rsp+0x58]
   140015830:	mov    r8d,0x10
   140015836:	mov    rdx,rax
   140015839:	mov    rcx,QWORD PTR [rsp+0x50]
   14001583e:	call   0x140017010
   140015843:	mov    r8d,0x58
   140015849:	xor    edx,edx
   14001584b:	mov    rcx,QWORD PTR [rsp+0x58]
   140015850:	call   0x140017200
   140015855:	mov    rcx,QWORD PTR [rsp+0x38]
   14001585a:	xor    rcx,rsp
   14001585d:	call   0x140021890
   140015862:	add    rsp,0x48
   140015866:	ret    
   140015867:	int3   
   140015868:	int3   
   140015869:	int3   
   14001586a:	int3   
   14001586b:	int3   
   14001586c:	int3   
   14001586d:	int3   
   14001586e:	int3   
   14001586f:	int3   
   140015870:	mov    QWORD PTR [rsp+0x10],rdx
   140015875:	mov    QWORD PTR [rsp+0x8],rcx
   14001587a:	sub    rsp,0x88
   140015881:	mov    rax,QWORD PTR [rip+0x259c8]        # 0x14003b250
   140015888:	xor    rax,rsp
   14001588b:	mov    QWORD PTR [rsp+0x70],rax
   140015890:	mov    eax,0x4
   140015895:	imul   rax,rax,0x0
   140015899:	mov    rcx,QWORD PTR [rsp+0x90]
   1400158a1:	mov    eax,DWORD PTR [rcx+rax*1]
   1400158a4:	mov    DWORD PTR [rsp+0x24],eax
   1400158a8:	mov    eax,0x4
   1400158ad:	imul   rax,rax,0x1
   1400158b1:	mov    rcx,QWORD PTR [rsp+0x90]
   1400158b9:	mov    eax,DWORD PTR [rcx+rax*1]
   1400158bc:	mov    DWORD PTR [rsp+0x2c],eax
   1400158c0:	mov    eax,0x4
   1400158c5:	imul   rax,rax,0x2
   1400158c9:	mov    rcx,QWORD PTR [rsp+0x90]
   1400158d1:	mov    eax,DWORD PTR [rcx+rax*1]
   1400158d4:	mov    DWORD PTR [rsp+0x20],eax
   1400158d8:	mov    eax,0x4
   1400158dd:	imul   rax,rax,0x3
   1400158e1:	mov    rcx,QWORD PTR [rsp+0x90]
   1400158e9:	mov    eax,DWORD PTR [rcx+rax*1]
   1400158ec:	mov    DWORD PTR [rsp+0x28],eax
   1400158f0:	mov    r8d,0x40
   1400158f6:	mov    rdx,QWORD PTR [rsp+0x98]
   1400158fe:	lea    rcx,[rsp+0x30]
   140015903:	call   0x1400170f0
   140015908:	mov    eax,DWORD PTR [rsp+0x20]
   14001590c:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015910:	and    ecx,eax
   140015912:	mov    eax,ecx
   140015914:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015918:	not    ecx
   14001591a:	and    ecx,DWORD PTR [rsp+0x28]
   14001591e:	or     eax,ecx
   140015920:	mov    ecx,0x4
   140015925:	imul   rcx,rcx,0x0
   140015929:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001592d:	mov    ecx,0xd76aa478
   140015932:	mov    edx,DWORD PTR [rsp+0x24]
   140015936:	add    rcx,rdx
   140015939:	add    eax,ecx
   14001593b:	mov    DWORD PTR [rsp+0x24],eax
   14001593f:	mov    eax,DWORD PTR [rsp+0x24]
   140015943:	shl    eax,0x7
   140015946:	mov    ecx,DWORD PTR [rsp+0x24]
   14001594a:	shr    ecx,0x19
   14001594d:	or     eax,ecx
   14001594f:	mov    DWORD PTR [rsp+0x24],eax
   140015953:	mov    eax,DWORD PTR [rsp+0x2c]
   140015957:	mov    ecx,DWORD PTR [rsp+0x24]
   14001595b:	add    ecx,eax
   14001595d:	mov    eax,ecx
   14001595f:	mov    DWORD PTR [rsp+0x24],eax
   140015963:	mov    eax,DWORD PTR [rsp+0x2c]
   140015967:	mov    ecx,DWORD PTR [rsp+0x24]
   14001596b:	and    ecx,eax
   14001596d:	mov    eax,ecx
   14001596f:	mov    ecx,DWORD PTR [rsp+0x24]
   140015973:	not    ecx
   140015975:	and    ecx,DWORD PTR [rsp+0x20]
   140015979:	or     eax,ecx
   14001597b:	mov    ecx,0x4
   140015980:	imul   rcx,rcx,0x1
   140015984:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015988:	mov    ecx,0xe8c7b756
   14001598d:	mov    edx,DWORD PTR [rsp+0x28]
   140015991:	add    rcx,rdx
   140015994:	add    eax,ecx
   140015996:	mov    DWORD PTR [rsp+0x28],eax
   14001599a:	mov    eax,DWORD PTR [rsp+0x28]
   14001599e:	shl    eax,0xc
   1400159a1:	mov    ecx,DWORD PTR [rsp+0x28]
   1400159a5:	shr    ecx,0x14
   1400159a8:	or     eax,ecx
   1400159aa:	mov    DWORD PTR [rsp+0x28],eax
   1400159ae:	mov    eax,DWORD PTR [rsp+0x24]
   1400159b2:	mov    ecx,DWORD PTR [rsp+0x28]
   1400159b6:	add    ecx,eax
   1400159b8:	mov    eax,ecx
   1400159ba:	mov    DWORD PTR [rsp+0x28],eax
   1400159be:	mov    eax,DWORD PTR [rsp+0x24]
   1400159c2:	mov    ecx,DWORD PTR [rsp+0x28]
   1400159c6:	and    ecx,eax
   1400159c8:	mov    eax,ecx
   1400159ca:	mov    ecx,DWORD PTR [rsp+0x28]
   1400159ce:	not    ecx
   1400159d0:	and    ecx,DWORD PTR [rsp+0x2c]
   1400159d4:	or     eax,ecx
   1400159d6:	mov    ecx,0x4
   1400159db:	imul   rcx,rcx,0x2
   1400159df:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400159e3:	mov    ecx,DWORD PTR [rsp+0x20]
   1400159e7:	lea    eax,[rcx+rax*1+0x242070db]
   1400159ee:	mov    DWORD PTR [rsp+0x20],eax
   1400159f2:	mov    eax,DWORD PTR [rsp+0x20]
   1400159f6:	shl    eax,0x11
   1400159f9:	mov    ecx,DWORD PTR [rsp+0x20]
   1400159fd:	shr    ecx,0xf
   140015a00:	or     eax,ecx
   140015a02:	mov    DWORD PTR [rsp+0x20],eax
   140015a06:	mov    eax,DWORD PTR [rsp+0x28]
   140015a0a:	mov    ecx,DWORD PTR [rsp+0x20]
   140015a0e:	add    ecx,eax
   140015a10:	mov    eax,ecx
   140015a12:	mov    DWORD PTR [rsp+0x20],eax
   140015a16:	mov    eax,DWORD PTR [rsp+0x28]
   140015a1a:	mov    ecx,DWORD PTR [rsp+0x20]
   140015a1e:	and    ecx,eax
   140015a20:	mov    eax,ecx
   140015a22:	mov    ecx,DWORD PTR [rsp+0x20]
   140015a26:	not    ecx
   140015a28:	and    ecx,DWORD PTR [rsp+0x24]
   140015a2c:	or     eax,ecx
   140015a2e:	mov    ecx,0x4
   140015a33:	imul   rcx,rcx,0x3
   140015a37:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015a3b:	mov    ecx,0xc1bdceee
   140015a40:	mov    edx,DWORD PTR [rsp+0x2c]
   140015a44:	add    rcx,rdx
   140015a47:	add    eax,ecx
   140015a49:	mov    DWORD PTR [rsp+0x2c],eax
   140015a4d:	mov    eax,DWORD PTR [rsp+0x2c]
   140015a51:	shl    eax,0x16
   140015a54:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015a58:	shr    ecx,0xa
   140015a5b:	or     eax,ecx
   140015a5d:	mov    DWORD PTR [rsp+0x2c],eax
   140015a61:	mov    eax,DWORD PTR [rsp+0x20]
   140015a65:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015a69:	add    ecx,eax
   140015a6b:	mov    eax,ecx
   140015a6d:	mov    DWORD PTR [rsp+0x2c],eax
   140015a71:	mov    eax,DWORD PTR [rsp+0x20]
   140015a75:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015a79:	and    ecx,eax
   140015a7b:	mov    eax,ecx
   140015a7d:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015a81:	not    ecx
   140015a83:	and    ecx,DWORD PTR [rsp+0x28]
   140015a87:	or     eax,ecx
   140015a89:	mov    ecx,0x4
   140015a8e:	imul   rcx,rcx,0x4
   140015a92:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015a96:	mov    ecx,0xf57c0faf
   140015a9b:	mov    edx,DWORD PTR [rsp+0x24]
   140015a9f:	add    rcx,rdx
   140015aa2:	add    eax,ecx
   140015aa4:	mov    DWORD PTR [rsp+0x24],eax
   140015aa8:	mov    eax,DWORD PTR [rsp+0x24]
   140015aac:	shl    eax,0x7
   140015aaf:	mov    ecx,DWORD PTR [rsp+0x24]
   140015ab3:	shr    ecx,0x19
   140015ab6:	or     eax,ecx
   140015ab8:	mov    DWORD PTR [rsp+0x24],eax
   140015abc:	mov    eax,DWORD PTR [rsp+0x2c]
   140015ac0:	mov    ecx,DWORD PTR [rsp+0x24]
   140015ac4:	add    ecx,eax
   140015ac6:	mov    eax,ecx
   140015ac8:	mov    DWORD PTR [rsp+0x24],eax
   140015acc:	mov    eax,DWORD PTR [rsp+0x2c]
   140015ad0:	mov    ecx,DWORD PTR [rsp+0x24]
   140015ad4:	and    ecx,eax
   140015ad6:	mov    eax,ecx
   140015ad8:	mov    ecx,DWORD PTR [rsp+0x24]
   140015adc:	not    ecx
   140015ade:	and    ecx,DWORD PTR [rsp+0x20]
   140015ae2:	or     eax,ecx
   140015ae4:	mov    ecx,0x4
   140015ae9:	imul   rcx,rcx,0x5
   140015aed:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015af1:	mov    ecx,DWORD PTR [rsp+0x28]
   140015af5:	lea    eax,[rcx+rax*1+0x4787c62a]
   140015afc:	mov    DWORD PTR [rsp+0x28],eax
   140015b00:	mov    eax,DWORD PTR [rsp+0x28]
   140015b04:	shl    eax,0xc
   140015b07:	mov    ecx,DWORD PTR [rsp+0x28]
   140015b0b:	shr    ecx,0x14
   140015b0e:	or     eax,ecx
   140015b10:	mov    DWORD PTR [rsp+0x28],eax
   140015b14:	mov    eax,DWORD PTR [rsp+0x24]
   140015b18:	mov    ecx,DWORD PTR [rsp+0x28]
   140015b1c:	add    ecx,eax
   140015b1e:	mov    eax,ecx
   140015b20:	mov    DWORD PTR [rsp+0x28],eax
   140015b24:	mov    eax,DWORD PTR [rsp+0x24]
   140015b28:	mov    ecx,DWORD PTR [rsp+0x28]
   140015b2c:	and    ecx,eax
   140015b2e:	mov    eax,ecx
   140015b30:	mov    ecx,DWORD PTR [rsp+0x28]
   140015b34:	not    ecx
   140015b36:	and    ecx,DWORD PTR [rsp+0x2c]
   140015b3a:	or     eax,ecx
   140015b3c:	mov    ecx,0x4
   140015b41:	imul   rcx,rcx,0x6
   140015b45:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015b49:	mov    ecx,0xa8304613
   140015b4e:	mov    edx,DWORD PTR [rsp+0x20]
   140015b52:	add    rcx,rdx
   140015b55:	add    eax,ecx
   140015b57:	mov    DWORD PTR [rsp+0x20],eax
   140015b5b:	mov    eax,DWORD PTR [rsp+0x20]
   140015b5f:	shl    eax,0x11
   140015b62:	mov    ecx,DWORD PTR [rsp+0x20]
   140015b66:	shr    ecx,0xf
   140015b69:	or     eax,ecx
   140015b6b:	mov    DWORD PTR [rsp+0x20],eax
   140015b6f:	mov    eax,DWORD PTR [rsp+0x28]
   140015b73:	mov    ecx,DWORD PTR [rsp+0x20]
   140015b77:	add    ecx,eax
   140015b79:	mov    eax,ecx
   140015b7b:	mov    DWORD PTR [rsp+0x20],eax
   140015b7f:	mov    eax,DWORD PTR [rsp+0x28]
   140015b83:	mov    ecx,DWORD PTR [rsp+0x20]
   140015b87:	and    ecx,eax
   140015b89:	mov    eax,ecx
   140015b8b:	mov    ecx,DWORD PTR [rsp+0x20]
   140015b8f:	not    ecx
   140015b91:	and    ecx,DWORD PTR [rsp+0x24]
   140015b95:	or     eax,ecx
   140015b97:	mov    ecx,0x4
   140015b9c:	imul   rcx,rcx,0x7
   140015ba0:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015ba4:	mov    ecx,0xfd469501
   140015ba9:	mov    edx,DWORD PTR [rsp+0x2c]
   140015bad:	add    rcx,rdx
   140015bb0:	add    eax,ecx
   140015bb2:	mov    DWORD PTR [rsp+0x2c],eax
   140015bb6:	mov    eax,DWORD PTR [rsp+0x2c]
   140015bba:	shl    eax,0x16
   140015bbd:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015bc1:	shr    ecx,0xa
   140015bc4:	or     eax,ecx
   140015bc6:	mov    DWORD PTR [rsp+0x2c],eax
   140015bca:	mov    eax,DWORD PTR [rsp+0x20]
   140015bce:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015bd2:	add    ecx,eax
   140015bd4:	mov    eax,ecx
   140015bd6:	mov    DWORD PTR [rsp+0x2c],eax
   140015bda:	mov    eax,DWORD PTR [rsp+0x20]
   140015bde:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015be2:	and    ecx,eax
   140015be4:	mov    eax,ecx
   140015be6:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015bea:	not    ecx
   140015bec:	and    ecx,DWORD PTR [rsp+0x28]
   140015bf0:	or     eax,ecx
   140015bf2:	mov    ecx,0x4
   140015bf7:	imul   rcx,rcx,0x8
   140015bfb:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015bff:	mov    ecx,DWORD PTR [rsp+0x24]
   140015c03:	lea    eax,[rcx+rax*1+0x698098d8]
   140015c0a:	mov    DWORD PTR [rsp+0x24],eax
   140015c0e:	mov    eax,DWORD PTR [rsp+0x24]
   140015c12:	shl    eax,0x7
   140015c15:	mov    ecx,DWORD PTR [rsp+0x24]
   140015c19:	shr    ecx,0x19
   140015c1c:	or     eax,ecx
   140015c1e:	mov    DWORD PTR [rsp+0x24],eax
   140015c22:	mov    eax,DWORD PTR [rsp+0x2c]
   140015c26:	mov    ecx,DWORD PTR [rsp+0x24]
   140015c2a:	add    ecx,eax
   140015c2c:	mov    eax,ecx
   140015c2e:	mov    DWORD PTR [rsp+0x24],eax
   140015c32:	mov    eax,DWORD PTR [rsp+0x2c]
   140015c36:	mov    ecx,DWORD PTR [rsp+0x24]
   140015c3a:	and    ecx,eax
   140015c3c:	mov    eax,ecx
   140015c3e:	mov    ecx,DWORD PTR [rsp+0x24]
   140015c42:	not    ecx
   140015c44:	and    ecx,DWORD PTR [rsp+0x20]
   140015c48:	or     eax,ecx
   140015c4a:	mov    ecx,0x4
   140015c4f:	imul   rcx,rcx,0x9
   140015c53:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015c57:	mov    ecx,0x8b44f7af
   140015c5c:	mov    edx,DWORD PTR [rsp+0x28]
   140015c60:	add    rcx,rdx
   140015c63:	add    eax,ecx
   140015c65:	mov    DWORD PTR [rsp+0x28],eax
   140015c69:	mov    eax,DWORD PTR [rsp+0x28]
   140015c6d:	shl    eax,0xc
   140015c70:	mov    ecx,DWORD PTR [rsp+0x28]
   140015c74:	shr    ecx,0x14
   140015c77:	or     eax,ecx
   140015c79:	mov    DWORD PTR [rsp+0x28],eax
   140015c7d:	mov    eax,DWORD PTR [rsp+0x24]
   140015c81:	mov    ecx,DWORD PTR [rsp+0x28]
   140015c85:	add    ecx,eax
   140015c87:	mov    eax,ecx
   140015c89:	mov    DWORD PTR [rsp+0x28],eax
   140015c8d:	mov    eax,DWORD PTR [rsp+0x24]
   140015c91:	mov    ecx,DWORD PTR [rsp+0x28]
   140015c95:	and    ecx,eax
   140015c97:	mov    eax,ecx
   140015c99:	mov    ecx,DWORD PTR [rsp+0x28]
   140015c9d:	not    ecx
   140015c9f:	and    ecx,DWORD PTR [rsp+0x2c]
   140015ca3:	or     eax,ecx
   140015ca5:	mov    ecx,0x4
   140015caa:	imul   rcx,rcx,0xa
   140015cae:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015cb2:	mov    ecx,0xffff5bb1
   140015cb7:	mov    edx,DWORD PTR [rsp+0x20]
   140015cbb:	add    rcx,rdx
   140015cbe:	add    eax,ecx
   140015cc0:	mov    DWORD PTR [rsp+0x20],eax
   140015cc4:	mov    eax,DWORD PTR [rsp+0x20]
   140015cc8:	shl    eax,0x11
   140015ccb:	mov    ecx,DWORD PTR [rsp+0x20]
   140015ccf:	shr    ecx,0xf
   140015cd2:	or     eax,ecx
   140015cd4:	mov    DWORD PTR [rsp+0x20],eax
   140015cd8:	mov    eax,DWORD PTR [rsp+0x28]
   140015cdc:	mov    ecx,DWORD PTR [rsp+0x20]
   140015ce0:	add    ecx,eax
   140015ce2:	mov    eax,ecx
   140015ce4:	mov    DWORD PTR [rsp+0x20],eax
   140015ce8:	mov    eax,DWORD PTR [rsp+0x28]
   140015cec:	mov    ecx,DWORD PTR [rsp+0x20]
   140015cf0:	and    ecx,eax
   140015cf2:	mov    eax,ecx
   140015cf4:	mov    ecx,DWORD PTR [rsp+0x20]
   140015cf8:	not    ecx
   140015cfa:	and    ecx,DWORD PTR [rsp+0x24]
   140015cfe:	or     eax,ecx
   140015d00:	mov    ecx,0x4
   140015d05:	imul   rcx,rcx,0xb
   140015d09:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015d0d:	mov    ecx,0x895cd7be
   140015d12:	mov    edx,DWORD PTR [rsp+0x2c]
   140015d16:	add    rcx,rdx
   140015d19:	add    eax,ecx
   140015d1b:	mov    DWORD PTR [rsp+0x2c],eax
   140015d1f:	mov    eax,DWORD PTR [rsp+0x2c]
   140015d23:	shl    eax,0x16
   140015d26:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015d2a:	shr    ecx,0xa
   140015d2d:	or     eax,ecx
   140015d2f:	mov    DWORD PTR [rsp+0x2c],eax
   140015d33:	mov    eax,DWORD PTR [rsp+0x20]
   140015d37:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015d3b:	add    ecx,eax
   140015d3d:	mov    eax,ecx
   140015d3f:	mov    DWORD PTR [rsp+0x2c],eax
   140015d43:	mov    eax,DWORD PTR [rsp+0x20]
   140015d47:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015d4b:	and    ecx,eax
   140015d4d:	mov    eax,ecx
   140015d4f:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015d53:	not    ecx
   140015d55:	and    ecx,DWORD PTR [rsp+0x28]
   140015d59:	or     eax,ecx
   140015d5b:	mov    ecx,0x4
   140015d60:	imul   rcx,rcx,0xc
   140015d64:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015d68:	mov    ecx,DWORD PTR [rsp+0x24]
   140015d6c:	lea    eax,[rcx+rax*1+0x6b901122]
   140015d73:	mov    DWORD PTR [rsp+0x24],eax
   140015d77:	mov    eax,DWORD PTR [rsp+0x24]
   140015d7b:	shl    eax,0x7
   140015d7e:	mov    ecx,DWORD PTR [rsp+0x24]
   140015d82:	shr    ecx,0x19
   140015d85:	or     eax,ecx
   140015d87:	mov    DWORD PTR [rsp+0x24],eax
   140015d8b:	mov    eax,DWORD PTR [rsp+0x2c]
   140015d8f:	mov    ecx,DWORD PTR [rsp+0x24]
   140015d93:	add    ecx,eax
   140015d95:	mov    eax,ecx
   140015d97:	mov    DWORD PTR [rsp+0x24],eax
   140015d9b:	mov    eax,DWORD PTR [rsp+0x2c]
   140015d9f:	mov    ecx,DWORD PTR [rsp+0x24]
   140015da3:	and    ecx,eax
   140015da5:	mov    eax,ecx
   140015da7:	mov    ecx,DWORD PTR [rsp+0x24]
   140015dab:	not    ecx
   140015dad:	and    ecx,DWORD PTR [rsp+0x20]
   140015db1:	or     eax,ecx
   140015db3:	mov    ecx,0x4
   140015db8:	imul   rcx,rcx,0xd
   140015dbc:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015dc0:	mov    ecx,0xfd987193
   140015dc5:	mov    edx,DWORD PTR [rsp+0x28]
   140015dc9:	add    rcx,rdx
   140015dcc:	add    eax,ecx
   140015dce:	mov    DWORD PTR [rsp+0x28],eax
   140015dd2:	mov    eax,DWORD PTR [rsp+0x28]
   140015dd6:	shl    eax,0xc
   140015dd9:	mov    ecx,DWORD PTR [rsp+0x28]
   140015ddd:	shr    ecx,0x14
   140015de0:	or     eax,ecx
   140015de2:	mov    DWORD PTR [rsp+0x28],eax
   140015de6:	mov    eax,DWORD PTR [rsp+0x24]
   140015dea:	mov    ecx,DWORD PTR [rsp+0x28]
   140015dee:	add    ecx,eax
   140015df0:	mov    eax,ecx
   140015df2:	mov    DWORD PTR [rsp+0x28],eax
   140015df6:	mov    eax,DWORD PTR [rsp+0x24]
   140015dfa:	mov    ecx,DWORD PTR [rsp+0x28]
   140015dfe:	and    ecx,eax
   140015e00:	mov    eax,ecx
   140015e02:	mov    ecx,DWORD PTR [rsp+0x28]
   140015e06:	not    ecx
   140015e08:	and    ecx,DWORD PTR [rsp+0x2c]
   140015e0c:	or     eax,ecx
   140015e0e:	mov    ecx,0x4
   140015e13:	imul   rcx,rcx,0xe
   140015e17:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015e1b:	mov    ecx,0xa679438e
   140015e20:	mov    edx,DWORD PTR [rsp+0x20]
   140015e24:	add    rcx,rdx
   140015e27:	add    eax,ecx
   140015e29:	mov    DWORD PTR [rsp+0x20],eax
   140015e2d:	mov    eax,DWORD PTR [rsp+0x20]
   140015e31:	shl    eax,0x11
   140015e34:	mov    ecx,DWORD PTR [rsp+0x20]
   140015e38:	shr    ecx,0xf
   140015e3b:	or     eax,ecx
   140015e3d:	mov    DWORD PTR [rsp+0x20],eax
   140015e41:	mov    eax,DWORD PTR [rsp+0x28]
   140015e45:	mov    ecx,DWORD PTR [rsp+0x20]
   140015e49:	add    ecx,eax
   140015e4b:	mov    eax,ecx
   140015e4d:	mov    DWORD PTR [rsp+0x20],eax
   140015e51:	mov    eax,DWORD PTR [rsp+0x28]
   140015e55:	mov    ecx,DWORD PTR [rsp+0x20]
   140015e59:	and    ecx,eax
   140015e5b:	mov    eax,ecx
   140015e5d:	mov    ecx,DWORD PTR [rsp+0x20]
   140015e61:	not    ecx
   140015e63:	and    ecx,DWORD PTR [rsp+0x24]
   140015e67:	or     eax,ecx
   140015e69:	mov    ecx,0x4
   140015e6e:	imul   rcx,rcx,0xf
   140015e72:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015e76:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015e7a:	lea    eax,[rcx+rax*1+0x49b40821]
   140015e81:	mov    DWORD PTR [rsp+0x2c],eax
   140015e85:	mov    eax,DWORD PTR [rsp+0x2c]
   140015e89:	shl    eax,0x16
   140015e8c:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015e90:	shr    ecx,0xa
   140015e93:	or     eax,ecx
   140015e95:	mov    DWORD PTR [rsp+0x2c],eax
   140015e99:	mov    eax,DWORD PTR [rsp+0x20]
   140015e9d:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015ea1:	add    ecx,eax
   140015ea3:	mov    eax,ecx
   140015ea5:	mov    DWORD PTR [rsp+0x2c],eax
   140015ea9:	mov    eax,DWORD PTR [rsp+0x28]
   140015ead:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015eb1:	and    ecx,eax
   140015eb3:	mov    eax,ecx
   140015eb5:	mov    ecx,DWORD PTR [rsp+0x28]
   140015eb9:	not    ecx
   140015ebb:	mov    edx,DWORD PTR [rsp+0x20]
   140015ebf:	and    edx,ecx
   140015ec1:	mov    ecx,edx
   140015ec3:	or     eax,ecx
   140015ec5:	mov    ecx,0x4
   140015eca:	imul   rcx,rcx,0x1
   140015ece:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015ed2:	mov    ecx,0xf61e2562
   140015ed7:	mov    edx,DWORD PTR [rsp+0x24]
   140015edb:	add    rcx,rdx
   140015ede:	add    eax,ecx
   140015ee0:	mov    DWORD PTR [rsp+0x24],eax
   140015ee4:	mov    eax,DWORD PTR [rsp+0x24]
   140015ee8:	shl    eax,0x5
   140015eeb:	mov    ecx,DWORD PTR [rsp+0x24]
   140015eef:	shr    ecx,0x1b
   140015ef2:	or     eax,ecx
   140015ef4:	mov    DWORD PTR [rsp+0x24],eax
   140015ef8:	mov    eax,DWORD PTR [rsp+0x2c]
   140015efc:	mov    ecx,DWORD PTR [rsp+0x24]
   140015f00:	add    ecx,eax
   140015f02:	mov    eax,ecx
   140015f04:	mov    DWORD PTR [rsp+0x24],eax
   140015f08:	mov    eax,DWORD PTR [rsp+0x20]
   140015f0c:	mov    ecx,DWORD PTR [rsp+0x24]
   140015f10:	and    ecx,eax
   140015f12:	mov    eax,ecx
   140015f14:	mov    ecx,DWORD PTR [rsp+0x20]
   140015f18:	not    ecx
   140015f1a:	mov    edx,DWORD PTR [rsp+0x2c]
   140015f1e:	and    edx,ecx
   140015f20:	mov    ecx,edx
   140015f22:	or     eax,ecx
   140015f24:	mov    ecx,0x4
   140015f29:	imul   rcx,rcx,0x6
   140015f2d:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015f31:	mov    ecx,0xc040b340
   140015f36:	mov    edx,DWORD PTR [rsp+0x28]
   140015f3a:	add    rcx,rdx
   140015f3d:	add    eax,ecx
   140015f3f:	mov    DWORD PTR [rsp+0x28],eax
   140015f43:	mov    eax,DWORD PTR [rsp+0x28]
   140015f47:	shl    eax,0x9
   140015f4a:	mov    ecx,DWORD PTR [rsp+0x28]
   140015f4e:	shr    ecx,0x17
   140015f51:	or     eax,ecx
   140015f53:	mov    DWORD PTR [rsp+0x28],eax
   140015f57:	mov    eax,DWORD PTR [rsp+0x24]
   140015f5b:	mov    ecx,DWORD PTR [rsp+0x28]
   140015f5f:	add    ecx,eax
   140015f61:	mov    eax,ecx
   140015f63:	mov    DWORD PTR [rsp+0x28],eax
   140015f67:	mov    eax,DWORD PTR [rsp+0x2c]
   140015f6b:	mov    ecx,DWORD PTR [rsp+0x28]
   140015f6f:	and    ecx,eax
   140015f71:	mov    eax,ecx
   140015f73:	mov    ecx,DWORD PTR [rsp+0x2c]
   140015f77:	not    ecx
   140015f79:	mov    edx,DWORD PTR [rsp+0x24]
   140015f7d:	and    edx,ecx
   140015f7f:	mov    ecx,edx
   140015f81:	or     eax,ecx
   140015f83:	mov    ecx,0x4
   140015f88:	imul   rcx,rcx,0xb
   140015f8c:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015f90:	mov    ecx,DWORD PTR [rsp+0x20]
   140015f94:	lea    eax,[rcx+rax*1+0x265e5a51]
   140015f9b:	mov    DWORD PTR [rsp+0x20],eax
   140015f9f:	mov    eax,DWORD PTR [rsp+0x20]
   140015fa3:	shl    eax,0xe
   140015fa6:	mov    ecx,DWORD PTR [rsp+0x20]
   140015faa:	shr    ecx,0x12
   140015fad:	or     eax,ecx
   140015faf:	mov    DWORD PTR [rsp+0x20],eax
   140015fb3:	mov    eax,DWORD PTR [rsp+0x28]
   140015fb7:	mov    ecx,DWORD PTR [rsp+0x20]
   140015fbb:	add    ecx,eax
   140015fbd:	mov    eax,ecx
   140015fbf:	mov    DWORD PTR [rsp+0x20],eax
   140015fc3:	mov    eax,DWORD PTR [rsp+0x24]
   140015fc7:	mov    ecx,DWORD PTR [rsp+0x20]
   140015fcb:	and    ecx,eax
   140015fcd:	mov    eax,ecx
   140015fcf:	mov    ecx,DWORD PTR [rsp+0x24]
   140015fd3:	not    ecx
   140015fd5:	mov    edx,DWORD PTR [rsp+0x28]
   140015fd9:	and    edx,ecx
   140015fdb:	mov    ecx,edx
   140015fdd:	or     eax,ecx
   140015fdf:	mov    ecx,0x4
   140015fe4:	imul   rcx,rcx,0x0
   140015fe8:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140015fec:	mov    ecx,0xe9b6c7aa
   140015ff1:	mov    edx,DWORD PTR [rsp+0x2c]
   140015ff5:	add    rcx,rdx
   140015ff8:	add    eax,ecx
   140015ffa:	mov    DWORD PTR [rsp+0x2c],eax
   140015ffe:	mov    eax,DWORD PTR [rsp+0x2c]
   140016002:	shl    eax,0x14
   140016005:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016009:	shr    ecx,0xc
   14001600c:	or     eax,ecx
   14001600e:	mov    DWORD PTR [rsp+0x2c],eax
   140016012:	mov    eax,DWORD PTR [rsp+0x20]
   140016016:	mov    ecx,DWORD PTR [rsp+0x2c]
   14001601a:	add    ecx,eax
   14001601c:	mov    eax,ecx
   14001601e:	mov    DWORD PTR [rsp+0x2c],eax
   140016022:	mov    eax,DWORD PTR [rsp+0x28]
   140016026:	mov    ecx,DWORD PTR [rsp+0x2c]
   14001602a:	and    ecx,eax
   14001602c:	mov    eax,ecx
   14001602e:	mov    ecx,DWORD PTR [rsp+0x28]
   140016032:	not    ecx
   140016034:	mov    edx,DWORD PTR [rsp+0x20]
   140016038:	and    edx,ecx
   14001603a:	mov    ecx,edx
   14001603c:	or     eax,ecx
   14001603e:	mov    ecx,0x4
   140016043:	imul   rcx,rcx,0x5
   140016047:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001604b:	mov    ecx,0xd62f105d
   140016050:	mov    edx,DWORD PTR [rsp+0x24]
   140016054:	add    rcx,rdx
   140016057:	add    eax,ecx
   140016059:	mov    DWORD PTR [rsp+0x24],eax
   14001605d:	mov    eax,DWORD PTR [rsp+0x24]
   140016061:	shl    eax,0x5
   140016064:	mov    ecx,DWORD PTR [rsp+0x24]
   140016068:	shr    ecx,0x1b
   14001606b:	or     eax,ecx
   14001606d:	mov    DWORD PTR [rsp+0x24],eax
   140016071:	mov    eax,DWORD PTR [rsp+0x2c]
   140016075:	mov    ecx,DWORD PTR [rsp+0x24]
   140016079:	add    ecx,eax
   14001607b:	mov    eax,ecx
   14001607d:	mov    DWORD PTR [rsp+0x24],eax
   140016081:	mov    eax,DWORD PTR [rsp+0x20]
   140016085:	mov    ecx,DWORD PTR [rsp+0x24]
   140016089:	and    ecx,eax
   14001608b:	mov    eax,ecx
   14001608d:	mov    ecx,DWORD PTR [rsp+0x20]
   140016091:	not    ecx
   140016093:	mov    edx,DWORD PTR [rsp+0x2c]
   140016097:	and    edx,ecx
   140016099:	mov    ecx,edx
   14001609b:	or     eax,ecx
   14001609d:	mov    ecx,0x4
   1400160a2:	imul   rcx,rcx,0xa
   1400160a6:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400160aa:	mov    ecx,DWORD PTR [rsp+0x28]
   1400160ae:	lea    eax,[rcx+rax*1+0x2441453]
   1400160b5:	mov    DWORD PTR [rsp+0x28],eax
   1400160b9:	mov    eax,DWORD PTR [rsp+0x28]
   1400160bd:	shl    eax,0x9
   1400160c0:	mov    ecx,DWORD PTR [rsp+0x28]
   1400160c4:	shr    ecx,0x17
   1400160c7:	or     eax,ecx
   1400160c9:	mov    DWORD PTR [rsp+0x28],eax
   1400160cd:	mov    eax,DWORD PTR [rsp+0x24]
   1400160d1:	mov    ecx,DWORD PTR [rsp+0x28]
   1400160d5:	add    ecx,eax
   1400160d7:	mov    eax,ecx
   1400160d9:	mov    DWORD PTR [rsp+0x28],eax
   1400160dd:	mov    eax,DWORD PTR [rsp+0x2c]
   1400160e1:	mov    ecx,DWORD PTR [rsp+0x28]
   1400160e5:	and    ecx,eax
   1400160e7:	mov    eax,ecx
   1400160e9:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400160ed:	not    ecx
   1400160ef:	mov    edx,DWORD PTR [rsp+0x24]
   1400160f3:	and    edx,ecx
   1400160f5:	mov    ecx,edx
   1400160f7:	or     eax,ecx
   1400160f9:	mov    ecx,0x4
   1400160fe:	imul   rcx,rcx,0xf
   140016102:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016106:	mov    ecx,0xd8a1e681
   14001610b:	mov    edx,DWORD PTR [rsp+0x20]
   14001610f:	add    rcx,rdx
   140016112:	add    eax,ecx
   140016114:	mov    DWORD PTR [rsp+0x20],eax
   140016118:	mov    eax,DWORD PTR [rsp+0x20]
   14001611c:	shl    eax,0xe
   14001611f:	mov    ecx,DWORD PTR [rsp+0x20]
   140016123:	shr    ecx,0x12
   140016126:	or     eax,ecx
   140016128:	mov    DWORD PTR [rsp+0x20],eax
   14001612c:	mov    eax,DWORD PTR [rsp+0x28]
   140016130:	mov    ecx,DWORD PTR [rsp+0x20]
   140016134:	add    ecx,eax
   140016136:	mov    eax,ecx
   140016138:	mov    DWORD PTR [rsp+0x20],eax
   14001613c:	mov    eax,DWORD PTR [rsp+0x24]
   140016140:	mov    ecx,DWORD PTR [rsp+0x20]
   140016144:	and    ecx,eax
   140016146:	mov    eax,ecx
   140016148:	mov    ecx,DWORD PTR [rsp+0x24]
   14001614c:	not    ecx
   14001614e:	mov    edx,DWORD PTR [rsp+0x28]
   140016152:	and    edx,ecx
   140016154:	mov    ecx,edx
   140016156:	or     eax,ecx
   140016158:	mov    ecx,0x4
   14001615d:	imul   rcx,rcx,0x4
   140016161:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016165:	mov    ecx,0xe7d3fbc8
   14001616a:	mov    edx,DWORD PTR [rsp+0x2c]
   14001616e:	add    rcx,rdx
   140016171:	add    eax,ecx
   140016173:	mov    DWORD PTR [rsp+0x2c],eax
   140016177:	mov    eax,DWORD PTR [rsp+0x2c]
   14001617b:	shl    eax,0x14
   14001617e:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016182:	shr    ecx,0xc
   140016185:	or     eax,ecx
   140016187:	mov    DWORD PTR [rsp+0x2c],eax
   14001618b:	mov    eax,DWORD PTR [rsp+0x20]
   14001618f:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016193:	add    ecx,eax
   140016195:	mov    eax,ecx
   140016197:	mov    DWORD PTR [rsp+0x2c],eax
   14001619b:	mov    eax,DWORD PTR [rsp+0x28]
   14001619f:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400161a3:	and    ecx,eax
   1400161a5:	mov    eax,ecx
   1400161a7:	mov    ecx,DWORD PTR [rsp+0x28]
   1400161ab:	not    ecx
   1400161ad:	mov    edx,DWORD PTR [rsp+0x20]
   1400161b1:	and    edx,ecx
   1400161b3:	mov    ecx,edx
   1400161b5:	or     eax,ecx
   1400161b7:	mov    ecx,0x4
   1400161bc:	imul   rcx,rcx,0x9
   1400161c0:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400161c4:	mov    ecx,DWORD PTR [rsp+0x24]
   1400161c8:	lea    eax,[rcx+rax*1+0x21e1cde6]
   1400161cf:	mov    DWORD PTR [rsp+0x24],eax
   1400161d3:	mov    eax,DWORD PTR [rsp+0x24]
   1400161d7:	shl    eax,0x5
   1400161da:	mov    ecx,DWORD PTR [rsp+0x24]
   1400161de:	shr    ecx,0x1b
   1400161e1:	or     eax,ecx
   1400161e3:	mov    DWORD PTR [rsp+0x24],eax
   1400161e7:	mov    eax,DWORD PTR [rsp+0x2c]
   1400161eb:	mov    ecx,DWORD PTR [rsp+0x24]
   1400161ef:	add    ecx,eax
   1400161f1:	mov    eax,ecx
   1400161f3:	mov    DWORD PTR [rsp+0x24],eax
   1400161f7:	mov    eax,DWORD PTR [rsp+0x20]
   1400161fb:	mov    ecx,DWORD PTR [rsp+0x24]
   1400161ff:	and    ecx,eax
   140016201:	mov    eax,ecx
   140016203:	mov    ecx,DWORD PTR [rsp+0x20]
   140016207:	not    ecx
   140016209:	mov    edx,DWORD PTR [rsp+0x2c]
   14001620d:	and    edx,ecx
   14001620f:	mov    ecx,edx
   140016211:	or     eax,ecx
   140016213:	mov    ecx,0x4
   140016218:	imul   rcx,rcx,0xe
   14001621c:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016220:	mov    ecx,0xc33707d6
   140016225:	mov    edx,DWORD PTR [rsp+0x28]
   140016229:	add    rcx,rdx
   14001622c:	add    eax,ecx
   14001622e:	mov    DWORD PTR [rsp+0x28],eax
   140016232:	mov    eax,DWORD PTR [rsp+0x28]
   140016236:	shl    eax,0x9
   140016239:	mov    ecx,DWORD PTR [rsp+0x28]
   14001623d:	shr    ecx,0x17
   140016240:	or     eax,ecx
   140016242:	mov    DWORD PTR [rsp+0x28],eax
   140016246:	mov    eax,DWORD PTR [rsp+0x24]
   14001624a:	mov    ecx,DWORD PTR [rsp+0x28]
   14001624e:	add    ecx,eax
   140016250:	mov    eax,ecx
   140016252:	mov    DWORD PTR [rsp+0x28],eax
   140016256:	mov    eax,DWORD PTR [rsp+0x2c]
   14001625a:	mov    ecx,DWORD PTR [rsp+0x28]
   14001625e:	and    ecx,eax
   140016260:	mov    eax,ecx
   140016262:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016266:	not    ecx
   140016268:	mov    edx,DWORD PTR [rsp+0x24]
   14001626c:	and    edx,ecx
   14001626e:	mov    ecx,edx
   140016270:	or     eax,ecx
   140016272:	mov    ecx,0x4
   140016277:	imul   rcx,rcx,0x3
   14001627b:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001627f:	mov    ecx,0xf4d50d87
   140016284:	mov    edx,DWORD PTR [rsp+0x20]
   140016288:	add    rcx,rdx
   14001628b:	add    eax,ecx
   14001628d:	mov    DWORD PTR [rsp+0x20],eax
   140016291:	mov    eax,DWORD PTR [rsp+0x20]
   140016295:	shl    eax,0xe
   140016298:	mov    ecx,DWORD PTR [rsp+0x20]
   14001629c:	shr    ecx,0x12
   14001629f:	or     eax,ecx
   1400162a1:	mov    DWORD PTR [rsp+0x20],eax
   1400162a5:	mov    eax,DWORD PTR [rsp+0x28]
   1400162a9:	mov    ecx,DWORD PTR [rsp+0x20]
   1400162ad:	add    ecx,eax
   1400162af:	mov    eax,ecx
   1400162b1:	mov    DWORD PTR [rsp+0x20],eax
   1400162b5:	mov    eax,DWORD PTR [rsp+0x24]
   1400162b9:	mov    ecx,DWORD PTR [rsp+0x20]
   1400162bd:	and    ecx,eax
   1400162bf:	mov    eax,ecx
   1400162c1:	mov    ecx,DWORD PTR [rsp+0x24]
   1400162c5:	not    ecx
   1400162c7:	mov    edx,DWORD PTR [rsp+0x28]
   1400162cb:	and    edx,ecx
   1400162cd:	mov    ecx,edx
   1400162cf:	or     eax,ecx
   1400162d1:	mov    ecx,0x4
   1400162d6:	imul   rcx,rcx,0x8
   1400162da:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400162de:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400162e2:	lea    eax,[rcx+rax*1+0x455a14ed]
   1400162e9:	mov    DWORD PTR [rsp+0x2c],eax
   1400162ed:	mov    eax,DWORD PTR [rsp+0x2c]
   1400162f1:	shl    eax,0x14
   1400162f4:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400162f8:	shr    ecx,0xc
   1400162fb:	or     eax,ecx
   1400162fd:	mov    DWORD PTR [rsp+0x2c],eax
   140016301:	mov    eax,DWORD PTR [rsp+0x20]
   140016305:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016309:	add    ecx,eax
   14001630b:	mov    eax,ecx
   14001630d:	mov    DWORD PTR [rsp+0x2c],eax
   140016311:	mov    eax,DWORD PTR [rsp+0x28]
   140016315:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016319:	and    ecx,eax
   14001631b:	mov    eax,ecx
   14001631d:	mov    ecx,DWORD PTR [rsp+0x28]
   140016321:	not    ecx
   140016323:	mov    edx,DWORD PTR [rsp+0x20]
   140016327:	and    edx,ecx
   140016329:	mov    ecx,edx
   14001632b:	or     eax,ecx
   14001632d:	mov    ecx,0x4
   140016332:	imul   rcx,rcx,0xd
   140016336:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001633a:	mov    ecx,0xa9e3e905
   14001633f:	mov    edx,DWORD PTR [rsp+0x24]
   140016343:	add    rcx,rdx
   140016346:	add    eax,ecx
   140016348:	mov    DWORD PTR [rsp+0x24],eax
   14001634c:	mov    eax,DWORD PTR [rsp+0x24]
   140016350:	shl    eax,0x5
   140016353:	mov    ecx,DWORD PTR [rsp+0x24]
   140016357:	shr    ecx,0x1b
   14001635a:	or     eax,ecx
   14001635c:	mov    DWORD PTR [rsp+0x24],eax
   140016360:	mov    eax,DWORD PTR [rsp+0x2c]
   140016364:	mov    ecx,DWORD PTR [rsp+0x24]
   140016368:	add    ecx,eax
   14001636a:	mov    eax,ecx
   14001636c:	mov    DWORD PTR [rsp+0x24],eax
   140016370:	mov    eax,DWORD PTR [rsp+0x20]
   140016374:	mov    ecx,DWORD PTR [rsp+0x24]
   140016378:	and    ecx,eax
   14001637a:	mov    eax,ecx
   14001637c:	mov    ecx,DWORD PTR [rsp+0x20]
   140016380:	not    ecx
   140016382:	mov    edx,DWORD PTR [rsp+0x2c]
   140016386:	and    edx,ecx
   140016388:	mov    ecx,edx
   14001638a:	or     eax,ecx
   14001638c:	mov    ecx,0x4
   140016391:	imul   rcx,rcx,0x2
   140016395:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016399:	mov    ecx,0xfcefa3f8
   14001639e:	mov    edx,DWORD PTR [rsp+0x28]
   1400163a2:	add    rcx,rdx
   1400163a5:	add    eax,ecx
   1400163a7:	mov    DWORD PTR [rsp+0x28],eax
   1400163ab:	mov    eax,DWORD PTR [rsp+0x28]
   1400163af:	shl    eax,0x9
   1400163b2:	mov    ecx,DWORD PTR [rsp+0x28]
   1400163b6:	shr    ecx,0x17
   1400163b9:	or     eax,ecx
   1400163bb:	mov    DWORD PTR [rsp+0x28],eax
   1400163bf:	mov    eax,DWORD PTR [rsp+0x24]
   1400163c3:	mov    ecx,DWORD PTR [rsp+0x28]
   1400163c7:	add    ecx,eax
   1400163c9:	mov    eax,ecx
   1400163cb:	mov    DWORD PTR [rsp+0x28],eax
   1400163cf:	mov    eax,DWORD PTR [rsp+0x2c]
   1400163d3:	mov    ecx,DWORD PTR [rsp+0x28]
   1400163d7:	and    ecx,eax
   1400163d9:	mov    eax,ecx
   1400163db:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400163df:	not    ecx
   1400163e1:	mov    edx,DWORD PTR [rsp+0x24]
   1400163e5:	and    edx,ecx
   1400163e7:	mov    ecx,edx
   1400163e9:	or     eax,ecx
   1400163eb:	mov    ecx,0x4
   1400163f0:	imul   rcx,rcx,0x7
   1400163f4:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400163f8:	mov    ecx,DWORD PTR [rsp+0x20]
   1400163fc:	lea    eax,[rcx+rax*1+0x676f02d9]
   140016403:	mov    DWORD PTR [rsp+0x20],eax
   140016407:	mov    eax,DWORD PTR [rsp+0x20]
   14001640b:	shl    eax,0xe
   14001640e:	mov    ecx,DWORD PTR [rsp+0x20]
   140016412:	shr    ecx,0x12
   140016415:	or     eax,ecx
   140016417:	mov    DWORD PTR [rsp+0x20],eax
   14001641b:	mov    eax,DWORD PTR [rsp+0x28]
   14001641f:	mov    ecx,DWORD PTR [rsp+0x20]
   140016423:	add    ecx,eax
   140016425:	mov    eax,ecx
   140016427:	mov    DWORD PTR [rsp+0x20],eax
   14001642b:	mov    eax,DWORD PTR [rsp+0x24]
   14001642f:	mov    ecx,DWORD PTR [rsp+0x20]
   140016433:	and    ecx,eax
   140016435:	mov    eax,ecx
   140016437:	mov    ecx,DWORD PTR [rsp+0x24]
   14001643b:	not    ecx
   14001643d:	mov    edx,DWORD PTR [rsp+0x28]
   140016441:	and    edx,ecx
   140016443:	mov    ecx,edx
   140016445:	or     eax,ecx
   140016447:	mov    ecx,0x4
   14001644c:	imul   rcx,rcx,0xc
   140016450:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016454:	mov    ecx,0x8d2a4c8a
   140016459:	mov    edx,DWORD PTR [rsp+0x2c]
   14001645d:	add    rcx,rdx
   140016460:	add    eax,ecx
   140016462:	mov    DWORD PTR [rsp+0x2c],eax
   140016466:	mov    eax,DWORD PTR [rsp+0x2c]
   14001646a:	shl    eax,0x14
   14001646d:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016471:	shr    ecx,0xc
   140016474:	or     eax,ecx
   140016476:	mov    DWORD PTR [rsp+0x2c],eax
   14001647a:	mov    eax,DWORD PTR [rsp+0x20]
   14001647e:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016482:	add    ecx,eax
   140016484:	mov    eax,ecx
   140016486:	mov    DWORD PTR [rsp+0x2c],eax
   14001648a:	mov    eax,DWORD PTR [rsp+0x20]
   14001648e:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016492:	xor    ecx,eax
   140016494:	mov    eax,ecx
   140016496:	xor    eax,DWORD PTR [rsp+0x28]
   14001649a:	mov    ecx,0x4
   14001649f:	imul   rcx,rcx,0x5
   1400164a3:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400164a7:	mov    ecx,0xfffa3942
   1400164ac:	mov    edx,DWORD PTR [rsp+0x24]
   1400164b0:	add    rcx,rdx
   1400164b3:	add    eax,ecx
   1400164b5:	mov    DWORD PTR [rsp+0x24],eax
   1400164b9:	mov    eax,DWORD PTR [rsp+0x24]
   1400164bd:	shl    eax,0x4
   1400164c0:	mov    ecx,DWORD PTR [rsp+0x24]
   1400164c4:	shr    ecx,0x1c
   1400164c7:	or     eax,ecx
   1400164c9:	mov    DWORD PTR [rsp+0x24],eax
   1400164cd:	mov    eax,DWORD PTR [rsp+0x2c]
   1400164d1:	mov    ecx,DWORD PTR [rsp+0x24]
   1400164d5:	add    ecx,eax
   1400164d7:	mov    eax,ecx
   1400164d9:	mov    DWORD PTR [rsp+0x24],eax
   1400164dd:	mov    eax,DWORD PTR [rsp+0x2c]
   1400164e1:	mov    ecx,DWORD PTR [rsp+0x24]
   1400164e5:	xor    ecx,eax
   1400164e7:	mov    eax,ecx
   1400164e9:	xor    eax,DWORD PTR [rsp+0x20]
   1400164ed:	mov    ecx,0x4
   1400164f2:	imul   rcx,rcx,0x8
   1400164f6:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400164fa:	mov    ecx,0x8771f681
   1400164ff:	mov    edx,DWORD PTR [rsp+0x28]
   140016503:	add    rcx,rdx
   140016506:	add    eax,ecx
   140016508:	mov    DWORD PTR [rsp+0x28],eax
   14001650c:	mov    eax,DWORD PTR [rsp+0x28]
   140016510:	shl    eax,0xb
   140016513:	mov    ecx,DWORD PTR [rsp+0x28]
   140016517:	shr    ecx,0x15
   14001651a:	or     eax,ecx
   14001651c:	mov    DWORD PTR [rsp+0x28],eax
   140016520:	mov    eax,DWORD PTR [rsp+0x24]
   140016524:	mov    ecx,DWORD PTR [rsp+0x28]
   140016528:	add    ecx,eax
   14001652a:	mov    eax,ecx
   14001652c:	mov    DWORD PTR [rsp+0x28],eax
   140016530:	mov    eax,DWORD PTR [rsp+0x24]
   140016534:	mov    ecx,DWORD PTR [rsp+0x28]
   140016538:	xor    ecx,eax
   14001653a:	mov    eax,ecx
   14001653c:	xor    eax,DWORD PTR [rsp+0x2c]
   140016540:	mov    ecx,0x4
   140016545:	imul   rcx,rcx,0xb
   140016549:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001654d:	mov    ecx,DWORD PTR [rsp+0x20]
   140016551:	lea    eax,[rcx+rax*1+0x6d9d6122]
   140016558:	mov    DWORD PTR [rsp+0x20],eax
   14001655c:	mov    eax,DWORD PTR [rsp+0x20]
   140016560:	shl    eax,0x10
   140016563:	mov    ecx,DWORD PTR [rsp+0x20]
   140016567:	shr    ecx,0x10
   14001656a:	or     eax,ecx
   14001656c:	mov    DWORD PTR [rsp+0x20],eax
   140016570:	mov    eax,DWORD PTR [rsp+0x28]
   140016574:	mov    ecx,DWORD PTR [rsp+0x20]
   140016578:	add    ecx,eax
   14001657a:	mov    eax,ecx
   14001657c:	mov    DWORD PTR [rsp+0x20],eax
   140016580:	mov    eax,DWORD PTR [rsp+0x28]
   140016584:	mov    ecx,DWORD PTR [rsp+0x20]
   140016588:	xor    ecx,eax
   14001658a:	mov    eax,ecx
   14001658c:	xor    eax,DWORD PTR [rsp+0x24]
   140016590:	mov    ecx,0x4
   140016595:	imul   rcx,rcx,0xe
   140016599:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001659d:	mov    ecx,0xfde5380c
   1400165a2:	mov    edx,DWORD PTR [rsp+0x2c]
   1400165a6:	add    rcx,rdx
   1400165a9:	add    eax,ecx
   1400165ab:	mov    DWORD PTR [rsp+0x2c],eax
   1400165af:	mov    eax,DWORD PTR [rsp+0x2c]
   1400165b3:	shl    eax,0x17
   1400165b6:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400165ba:	shr    ecx,0x9
   1400165bd:	or     eax,ecx
   1400165bf:	mov    DWORD PTR [rsp+0x2c],eax
   1400165c3:	mov    eax,DWORD PTR [rsp+0x20]
   1400165c7:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400165cb:	add    ecx,eax
   1400165cd:	mov    eax,ecx
   1400165cf:	mov    DWORD PTR [rsp+0x2c],eax
   1400165d3:	mov    eax,DWORD PTR [rsp+0x20]
   1400165d7:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400165db:	xor    ecx,eax
   1400165dd:	mov    eax,ecx
   1400165df:	xor    eax,DWORD PTR [rsp+0x28]
   1400165e3:	mov    ecx,0x4
   1400165e8:	imul   rcx,rcx,0x1
   1400165ec:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400165f0:	mov    ecx,0xa4beea44
   1400165f5:	mov    edx,DWORD PTR [rsp+0x24]
   1400165f9:	add    rcx,rdx
   1400165fc:	add    eax,ecx
   1400165fe:	mov    DWORD PTR [rsp+0x24],eax
   140016602:	mov    eax,DWORD PTR [rsp+0x24]
   140016606:	shl    eax,0x4
   140016609:	mov    ecx,DWORD PTR [rsp+0x24]
   14001660d:	shr    ecx,0x1c
   140016610:	or     eax,ecx
   140016612:	mov    DWORD PTR [rsp+0x24],eax
   140016616:	mov    eax,DWORD PTR [rsp+0x2c]
   14001661a:	mov    ecx,DWORD PTR [rsp+0x24]
   14001661e:	add    ecx,eax
   140016620:	mov    eax,ecx
   140016622:	mov    DWORD PTR [rsp+0x24],eax
   140016626:	mov    eax,DWORD PTR [rsp+0x2c]
   14001662a:	mov    ecx,DWORD PTR [rsp+0x24]
   14001662e:	xor    ecx,eax
   140016630:	mov    eax,ecx
   140016632:	xor    eax,DWORD PTR [rsp+0x20]
   140016636:	mov    ecx,0x4
   14001663b:	imul   rcx,rcx,0x4
   14001663f:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016643:	mov    ecx,DWORD PTR [rsp+0x28]
   140016647:	lea    eax,[rcx+rax*1+0x4bdecfa9]
   14001664e:	mov    DWORD PTR [rsp+0x28],eax
   140016652:	mov    eax,DWORD PTR [rsp+0x28]
   140016656:	shl    eax,0xb
   140016659:	mov    ecx,DWORD PTR [rsp+0x28]
   14001665d:	shr    ecx,0x15
   140016660:	or     eax,ecx
   140016662:	mov    DWORD PTR [rsp+0x28],eax
   140016666:	mov    eax,DWORD PTR [rsp+0x24]
   14001666a:	mov    ecx,DWORD PTR [rsp+0x28]
   14001666e:	add    ecx,eax
   140016670:	mov    eax,ecx
   140016672:	mov    DWORD PTR [rsp+0x28],eax
   140016676:	mov    eax,DWORD PTR [rsp+0x24]
   14001667a:	mov    ecx,DWORD PTR [rsp+0x28]
   14001667e:	xor    ecx,eax
   140016680:	mov    eax,ecx
   140016682:	xor    eax,DWORD PTR [rsp+0x2c]
   140016686:	mov    ecx,0x4
   14001668b:	imul   rcx,rcx,0x7
   14001668f:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016693:	mov    ecx,0xf6bb4b60
   140016698:	mov    edx,DWORD PTR [rsp+0x20]
   14001669c:	add    rcx,rdx
   14001669f:	add    eax,ecx
   1400166a1:	mov    DWORD PTR [rsp+0x20],eax
   1400166a5:	mov    eax,DWORD PTR [rsp+0x20]
   1400166a9:	shl    eax,0x10
   1400166ac:	mov    ecx,DWORD PTR [rsp+0x20]
   1400166b0:	shr    ecx,0x10
   1400166b3:	or     eax,ecx
   1400166b5:	mov    DWORD PTR [rsp+0x20],eax
   1400166b9:	mov    eax,DWORD PTR [rsp+0x28]
   1400166bd:	mov    ecx,DWORD PTR [rsp+0x20]
   1400166c1:	add    ecx,eax
   1400166c3:	mov    eax,ecx
   1400166c5:	mov    DWORD PTR [rsp+0x20],eax
   1400166c9:	mov    eax,DWORD PTR [rsp+0x28]
   1400166cd:	mov    ecx,DWORD PTR [rsp+0x20]
   1400166d1:	xor    ecx,eax
   1400166d3:	mov    eax,ecx
   1400166d5:	xor    eax,DWORD PTR [rsp+0x24]
   1400166d9:	mov    ecx,0x4
   1400166de:	imul   rcx,rcx,0xa
   1400166e2:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400166e6:	mov    ecx,0xbebfbc70
   1400166eb:	mov    edx,DWORD PTR [rsp+0x2c]
   1400166ef:	add    rcx,rdx
   1400166f2:	add    eax,ecx
   1400166f4:	mov    DWORD PTR [rsp+0x2c],eax
   1400166f8:	mov    eax,DWORD PTR [rsp+0x2c]
   1400166fc:	shl    eax,0x17
   1400166ff:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016703:	shr    ecx,0x9
   140016706:	or     eax,ecx
   140016708:	mov    DWORD PTR [rsp+0x2c],eax
   14001670c:	mov    eax,DWORD PTR [rsp+0x20]
   140016710:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016714:	add    ecx,eax
   140016716:	mov    eax,ecx
   140016718:	mov    DWORD PTR [rsp+0x2c],eax
   14001671c:	mov    eax,DWORD PTR [rsp+0x20]
   140016720:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016724:	xor    ecx,eax
   140016726:	mov    eax,ecx
   140016728:	xor    eax,DWORD PTR [rsp+0x28]
   14001672c:	mov    ecx,0x4
   140016731:	imul   rcx,rcx,0xd
   140016735:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016739:	mov    ecx,DWORD PTR [rsp+0x24]
   14001673d:	lea    eax,[rcx+rax*1+0x289b7ec6]
   140016744:	mov    DWORD PTR [rsp+0x24],eax
   140016748:	mov    eax,DWORD PTR [rsp+0x24]
   14001674c:	shl    eax,0x4
   14001674f:	mov    ecx,DWORD PTR [rsp+0x24]
   140016753:	shr    ecx,0x1c
   140016756:	or     eax,ecx
   140016758:	mov    DWORD PTR [rsp+0x24],eax
   14001675c:	mov    eax,DWORD PTR [rsp+0x2c]
   140016760:	mov    ecx,DWORD PTR [rsp+0x24]
   140016764:	add    ecx,eax
   140016766:	mov    eax,ecx
   140016768:	mov    DWORD PTR [rsp+0x24],eax
   14001676c:	mov    eax,DWORD PTR [rsp+0x2c]
   140016770:	mov    ecx,DWORD PTR [rsp+0x24]
   140016774:	xor    ecx,eax
   140016776:	mov    eax,ecx
   140016778:	xor    eax,DWORD PTR [rsp+0x20]
   14001677c:	mov    ecx,0x4
   140016781:	imul   rcx,rcx,0x0
   140016785:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016789:	mov    ecx,0xeaa127fa
   14001678e:	mov    edx,DWORD PTR [rsp+0x28]
   140016792:	add    rcx,rdx
   140016795:	add    eax,ecx
   140016797:	mov    DWORD PTR [rsp+0x28],eax
   14001679b:	mov    eax,DWORD PTR [rsp+0x28]
   14001679f:	shl    eax,0xb
   1400167a2:	mov    ecx,DWORD PTR [rsp+0x28]
   1400167a6:	shr    ecx,0x15
   1400167a9:	or     eax,ecx
   1400167ab:	mov    DWORD PTR [rsp+0x28],eax
   1400167af:	mov    eax,DWORD PTR [rsp+0x24]
   1400167b3:	mov    ecx,DWORD PTR [rsp+0x28]
   1400167b7:	add    ecx,eax
   1400167b9:	mov    eax,ecx
   1400167bb:	mov    DWORD PTR [rsp+0x28],eax
   1400167bf:	mov    eax,DWORD PTR [rsp+0x24]
   1400167c3:	mov    ecx,DWORD PTR [rsp+0x28]
   1400167c7:	xor    ecx,eax
   1400167c9:	mov    eax,ecx
   1400167cb:	xor    eax,DWORD PTR [rsp+0x2c]
   1400167cf:	mov    ecx,0x4
   1400167d4:	imul   rcx,rcx,0x3
   1400167d8:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400167dc:	mov    ecx,0xd4ef3085
   1400167e1:	mov    edx,DWORD PTR [rsp+0x20]
   1400167e5:	add    rcx,rdx
   1400167e8:	add    eax,ecx
   1400167ea:	mov    DWORD PTR [rsp+0x20],eax
   1400167ee:	mov    eax,DWORD PTR [rsp+0x20]
   1400167f2:	shl    eax,0x10
   1400167f5:	mov    ecx,DWORD PTR [rsp+0x20]
   1400167f9:	shr    ecx,0x10
   1400167fc:	or     eax,ecx
   1400167fe:	mov    DWORD PTR [rsp+0x20],eax
   140016802:	mov    eax,DWORD PTR [rsp+0x28]
   140016806:	mov    ecx,DWORD PTR [rsp+0x20]
   14001680a:	add    ecx,eax
   14001680c:	mov    eax,ecx
   14001680e:	mov    DWORD PTR [rsp+0x20],eax
   140016812:	mov    eax,DWORD PTR [rsp+0x28]
   140016816:	mov    ecx,DWORD PTR [rsp+0x20]
   14001681a:	xor    ecx,eax
   14001681c:	mov    eax,ecx
   14001681e:	xor    eax,DWORD PTR [rsp+0x24]
   140016822:	mov    ecx,0x4
   140016827:	imul   rcx,rcx,0x6
   14001682b:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001682f:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016833:	lea    eax,[rcx+rax*1+0x4881d05]
   14001683a:	mov    DWORD PTR [rsp+0x2c],eax
   14001683e:	mov    eax,DWORD PTR [rsp+0x2c]
   140016842:	shl    eax,0x17
   140016845:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016849:	shr    ecx,0x9
   14001684c:	or     eax,ecx
   14001684e:	mov    DWORD PTR [rsp+0x2c],eax
   140016852:	mov    eax,DWORD PTR [rsp+0x20]
   140016856:	mov    ecx,DWORD PTR [rsp+0x2c]
   14001685a:	add    ecx,eax
   14001685c:	mov    eax,ecx
   14001685e:	mov    DWORD PTR [rsp+0x2c],eax
   140016862:	mov    eax,DWORD PTR [rsp+0x20]
   140016866:	mov    ecx,DWORD PTR [rsp+0x2c]
   14001686a:	xor    ecx,eax
   14001686c:	mov    eax,ecx
   14001686e:	xor    eax,DWORD PTR [rsp+0x28]
   140016872:	mov    ecx,0x4
   140016877:	imul   rcx,rcx,0x9
   14001687b:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   14001687f:	mov    ecx,0xd9d4d039
   140016884:	mov    edx,DWORD PTR [rsp+0x24]
   140016888:	add    rcx,rdx
   14001688b:	add    eax,ecx
   14001688d:	mov    DWORD PTR [rsp+0x24],eax
   140016891:	mov    eax,DWORD PTR [rsp+0x24]
   140016895:	shl    eax,0x4
   140016898:	mov    ecx,DWORD PTR [rsp+0x24]
   14001689c:	shr    ecx,0x1c
   14001689f:	or     eax,ecx
   1400168a1:	mov    DWORD PTR [rsp+0x24],eax
   1400168a5:	mov    eax,DWORD PTR [rsp+0x2c]
   1400168a9:	mov    ecx,DWORD PTR [rsp+0x24]
   1400168ad:	add    ecx,eax
   1400168af:	mov    eax,ecx
   1400168b1:	mov    DWORD PTR [rsp+0x24],eax
   1400168b5:	mov    eax,DWORD PTR [rsp+0x2c]
   1400168b9:	mov    ecx,DWORD PTR [rsp+0x24]
   1400168bd:	xor    ecx,eax
   1400168bf:	mov    eax,ecx
   1400168c1:	xor    eax,DWORD PTR [rsp+0x20]
   1400168c5:	mov    ecx,0x4
   1400168ca:	imul   rcx,rcx,0xc
   1400168ce:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400168d2:	mov    ecx,0xe6db99e5
   1400168d7:	mov    edx,DWORD PTR [rsp+0x28]
   1400168db:	add    rcx,rdx
   1400168de:	add    eax,ecx
   1400168e0:	mov    DWORD PTR [rsp+0x28],eax
   1400168e4:	mov    eax,DWORD PTR [rsp+0x28]
   1400168e8:	shl    eax,0xb
   1400168eb:	mov    ecx,DWORD PTR [rsp+0x28]
   1400168ef:	shr    ecx,0x15
   1400168f2:	or     eax,ecx
   1400168f4:	mov    DWORD PTR [rsp+0x28],eax
   1400168f8:	mov    eax,DWORD PTR [rsp+0x24]
   1400168fc:	mov    ecx,DWORD PTR [rsp+0x28]
   140016900:	add    ecx,eax
   140016902:	mov    eax,ecx
   140016904:	mov    DWORD PTR [rsp+0x28],eax
   140016908:	mov    eax,DWORD PTR [rsp+0x24]
   14001690c:	mov    ecx,DWORD PTR [rsp+0x28]
   140016910:	xor    ecx,eax
   140016912:	mov    eax,ecx
   140016914:	xor    eax,DWORD PTR [rsp+0x2c]
   140016918:	mov    ecx,0x4
   14001691d:	imul   rcx,rcx,0xf
   140016921:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016925:	mov    ecx,DWORD PTR [rsp+0x20]
   140016929:	lea    eax,[rcx+rax*1+0x1fa27cf8]
   140016930:	mov    DWORD PTR [rsp+0x20],eax
   140016934:	mov    eax,DWORD PTR [rsp+0x20]
   140016938:	shl    eax,0x10
   14001693b:	mov    ecx,DWORD PTR [rsp+0x20]
   14001693f:	shr    ecx,0x10
   140016942:	or     eax,ecx
   140016944:	mov    DWORD PTR [rsp+0x20],eax
   140016948:	mov    eax,DWORD PTR [rsp+0x28]
   14001694c:	mov    ecx,DWORD PTR [rsp+0x20]
   140016950:	add    ecx,eax
   140016952:	mov    eax,ecx
   140016954:	mov    DWORD PTR [rsp+0x20],eax
   140016958:	mov    eax,DWORD PTR [rsp+0x28]
   14001695c:	mov    ecx,DWORD PTR [rsp+0x20]
   140016960:	xor    ecx,eax
   140016962:	mov    eax,ecx
   140016964:	xor    eax,DWORD PTR [rsp+0x24]
   140016968:	mov    ecx,0x4
   14001696d:	imul   rcx,rcx,0x2
   140016971:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016975:	mov    ecx,0xc4ac5665
   14001697a:	mov    edx,DWORD PTR [rsp+0x2c]
   14001697e:	add    rcx,rdx
   140016981:	add    eax,ecx
   140016983:	mov    DWORD PTR [rsp+0x2c],eax
   140016987:	mov    eax,DWORD PTR [rsp+0x2c]
   14001698b:	shl    eax,0x17
   14001698e:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016992:	shr    ecx,0x9
   140016995:	or     eax,ecx
   140016997:	mov    DWORD PTR [rsp+0x2c],eax
   14001699b:	mov    eax,DWORD PTR [rsp+0x20]
   14001699f:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400169a3:	add    ecx,eax
   1400169a5:	mov    eax,ecx
   1400169a7:	mov    DWORD PTR [rsp+0x2c],eax
   1400169ab:	mov    eax,DWORD PTR [rsp+0x28]
   1400169af:	not    eax
   1400169b1:	mov    ecx,DWORD PTR [rsp+0x2c]
   1400169b5:	or     ecx,eax
   1400169b7:	mov    eax,ecx
   1400169b9:	mov    ecx,DWORD PTR [rsp+0x20]
   1400169bd:	xor    ecx,eax
   1400169bf:	mov    eax,ecx
   1400169c1:	mov    ecx,0x4
   1400169c6:	imul   rcx,rcx,0x0
   1400169ca:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   1400169ce:	mov    ecx,0xf4292244
   1400169d3:	mov    edx,DWORD PTR [rsp+0x24]
   1400169d7:	add    rcx,rdx
   1400169da:	add    eax,ecx
   1400169dc:	mov    DWORD PTR [rsp+0x24],eax
   1400169e0:	mov    eax,DWORD PTR [rsp+0x24]
   1400169e4:	shl    eax,0x6
   1400169e7:	mov    ecx,DWORD PTR [rsp+0x24]
   1400169eb:	shr    ecx,0x1a
   1400169ee:	or     eax,ecx
   1400169f0:	mov    DWORD PTR [rsp+0x24],eax
   1400169f4:	mov    eax,DWORD PTR [rsp+0x2c]
   1400169f8:	mov    ecx,DWORD PTR [rsp+0x24]
   1400169fc:	add    ecx,eax
   1400169fe:	mov    eax,ecx
   140016a00:	mov    DWORD PTR [rsp+0x24],eax
   140016a04:	mov    eax,DWORD PTR [rsp+0x20]
   140016a08:	not    eax
   140016a0a:	mov    ecx,DWORD PTR [rsp+0x24]
   140016a0e:	or     ecx,eax
   140016a10:	mov    eax,ecx
   140016a12:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016a16:	xor    ecx,eax
   140016a18:	mov    eax,ecx
   140016a1a:	mov    ecx,0x4
   140016a1f:	imul   rcx,rcx,0x7
   140016a23:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016a27:	mov    ecx,DWORD PTR [rsp+0x28]
   140016a2b:	lea    eax,[rcx+rax*1+0x432aff97]
   140016a32:	mov    DWORD PTR [rsp+0x28],eax
   140016a36:	mov    eax,DWORD PTR [rsp+0x28]
   140016a3a:	shl    eax,0xa
   140016a3d:	mov    ecx,DWORD PTR [rsp+0x28]
   140016a41:	shr    ecx,0x16
   140016a44:	or     eax,ecx
   140016a46:	mov    DWORD PTR [rsp+0x28],eax
   140016a4a:	mov    eax,DWORD PTR [rsp+0x24]
   140016a4e:	mov    ecx,DWORD PTR [rsp+0x28]
   140016a52:	add    ecx,eax
   140016a54:	mov    eax,ecx
   140016a56:	mov    DWORD PTR [rsp+0x28],eax
   140016a5a:	mov    eax,DWORD PTR [rsp+0x2c]
   140016a5e:	not    eax
   140016a60:	mov    ecx,DWORD PTR [rsp+0x28]
   140016a64:	or     ecx,eax
   140016a66:	mov    eax,ecx
   140016a68:	mov    ecx,DWORD PTR [rsp+0x24]
   140016a6c:	xor    ecx,eax
   140016a6e:	mov    eax,ecx
   140016a70:	mov    ecx,0x4
   140016a75:	imul   rcx,rcx,0xe
   140016a79:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016a7d:	mov    ecx,0xab9423a7
   140016a82:	mov    edx,DWORD PTR [rsp+0x20]
   140016a86:	add    rcx,rdx
   140016a89:	add    eax,ecx
   140016a8b:	mov    DWORD PTR [rsp+0x20],eax
   140016a8f:	mov    eax,DWORD PTR [rsp+0x20]
   140016a93:	shl    eax,0xf
   140016a96:	mov    ecx,DWORD PTR [rsp+0x20]
   140016a9a:	shr    ecx,0x11
   140016a9d:	or     eax,ecx
   140016a9f:	mov    DWORD PTR [rsp+0x20],eax
   140016aa3:	mov    eax,DWORD PTR [rsp+0x28]
   140016aa7:	mov    ecx,DWORD PTR [rsp+0x20]
   140016aab:	add    ecx,eax
   140016aad:	mov    eax,ecx
   140016aaf:	mov    DWORD PTR [rsp+0x20],eax
   140016ab3:	mov    eax,DWORD PTR [rsp+0x24]
   140016ab7:	not    eax
   140016ab9:	mov    ecx,DWORD PTR [rsp+0x20]
   140016abd:	or     ecx,eax
   140016abf:	mov    eax,ecx
   140016ac1:	mov    ecx,DWORD PTR [rsp+0x28]
   140016ac5:	xor    ecx,eax
   140016ac7:	mov    eax,ecx
   140016ac9:	mov    ecx,0x4
   140016ace:	imul   rcx,rcx,0x5
   140016ad2:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016ad6:	mov    ecx,0xfc93a039
   140016adb:	mov    edx,DWORD PTR [rsp+0x2c]
   140016adf:	add    rcx,rdx
   140016ae2:	add    eax,ecx
   140016ae4:	mov    DWORD PTR [rsp+0x2c],eax
   140016ae8:	mov    eax,DWORD PTR [rsp+0x2c]
   140016aec:	shl    eax,0x15
   140016aef:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016af3:	shr    ecx,0xb
   140016af6:	or     eax,ecx
   140016af8:	mov    DWORD PTR [rsp+0x2c],eax
   140016afc:	mov    eax,DWORD PTR [rsp+0x20]
   140016b00:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016b04:	add    ecx,eax
   140016b06:	mov    eax,ecx
   140016b08:	mov    DWORD PTR [rsp+0x2c],eax
   140016b0c:	mov    eax,DWORD PTR [rsp+0x28]
   140016b10:	not    eax
   140016b12:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016b16:	or     ecx,eax
   140016b18:	mov    eax,ecx
   140016b1a:	mov    ecx,DWORD PTR [rsp+0x20]
   140016b1e:	xor    ecx,eax
   140016b20:	mov    eax,ecx
   140016b22:	mov    ecx,0x4
   140016b27:	imul   rcx,rcx,0xc
   140016b2b:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016b2f:	mov    ecx,DWORD PTR [rsp+0x24]
   140016b33:	lea    eax,[rcx+rax*1+0x655b59c3]
   140016b3a:	mov    DWORD PTR [rsp+0x24],eax
   140016b3e:	mov    eax,DWORD PTR [rsp+0x24]
   140016b42:	shl    eax,0x6
   140016b45:	mov    ecx,DWORD PTR [rsp+0x24]
   140016b49:	shr    ecx,0x1a
   140016b4c:	or     eax,ecx
   140016b4e:	mov    DWORD PTR [rsp+0x24],eax
   140016b52:	mov    eax,DWORD PTR [rsp+0x2c]
   140016b56:	mov    ecx,DWORD PTR [rsp+0x24]
   140016b5a:	add    ecx,eax
   140016b5c:	mov    eax,ecx
   140016b5e:	mov    DWORD PTR [rsp+0x24],eax
   140016b62:	mov    eax,DWORD PTR [rsp+0x20]
   140016b66:	not    eax
   140016b68:	mov    ecx,DWORD PTR [rsp+0x24]
   140016b6c:	or     ecx,eax
   140016b6e:	mov    eax,ecx
   140016b70:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016b74:	xor    ecx,eax
   140016b76:	mov    eax,ecx
   140016b78:	mov    ecx,0x4
   140016b7d:	imul   rcx,rcx,0x3
   140016b81:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016b85:	mov    ecx,0x8f0ccc92
   140016b8a:	mov    edx,DWORD PTR [rsp+0x28]
   140016b8e:	add    rcx,rdx
   140016b91:	add    eax,ecx
   140016b93:	mov    DWORD PTR [rsp+0x28],eax
   140016b97:	mov    eax,DWORD PTR [rsp+0x28]
   140016b9b:	shl    eax,0xa
   140016b9e:	mov    ecx,DWORD PTR [rsp+0x28]
   140016ba2:	shr    ecx,0x16
   140016ba5:	or     eax,ecx
   140016ba7:	mov    DWORD PTR [rsp+0x28],eax
   140016bab:	mov    eax,DWORD PTR [rsp+0x24]
   140016baf:	mov    ecx,DWORD PTR [rsp+0x28]
   140016bb3:	add    ecx,eax
   140016bb5:	mov    eax,ecx
   140016bb7:	mov    DWORD PTR [rsp+0x28],eax
   140016bbb:	mov    eax,DWORD PTR [rsp+0x2c]
   140016bbf:	not    eax
   140016bc1:	mov    ecx,DWORD PTR [rsp+0x28]
   140016bc5:	or     ecx,eax
   140016bc7:	mov    eax,ecx
   140016bc9:	mov    ecx,DWORD PTR [rsp+0x24]
   140016bcd:	xor    ecx,eax
   140016bcf:	mov    eax,ecx
   140016bd1:	mov    ecx,0x4
   140016bd6:	imul   rcx,rcx,0xa
   140016bda:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016bde:	mov    ecx,0xffeff47d
   140016be3:	mov    edx,DWORD PTR [rsp+0x20]
   140016be7:	add    rcx,rdx
   140016bea:	add    eax,ecx
   140016bec:	mov    DWORD PTR [rsp+0x20],eax
   140016bf0:	mov    eax,DWORD PTR [rsp+0x20]
   140016bf4:	shl    eax,0xf
   140016bf7:	mov    ecx,DWORD PTR [rsp+0x20]
   140016bfb:	shr    ecx,0x11
   140016bfe:	or     eax,ecx
   140016c00:	mov    DWORD PTR [rsp+0x20],eax
   140016c04:	mov    eax,DWORD PTR [rsp+0x28]
   140016c08:	mov    ecx,DWORD PTR [rsp+0x20]
   140016c0c:	add    ecx,eax
   140016c0e:	mov    eax,ecx
   140016c10:	mov    DWORD PTR [rsp+0x20],eax
   140016c14:	mov    eax,DWORD PTR [rsp+0x24]
   140016c18:	not    eax
   140016c1a:	mov    ecx,DWORD PTR [rsp+0x20]
   140016c1e:	or     ecx,eax
   140016c20:	mov    eax,ecx
   140016c22:	mov    ecx,DWORD PTR [rsp+0x28]
   140016c26:	xor    ecx,eax
   140016c28:	mov    eax,ecx
   140016c2a:	mov    ecx,0x4
   140016c2f:	imul   rcx,rcx,0x1
   140016c33:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016c37:	mov    ecx,0x85845dd1
   140016c3c:	mov    edx,DWORD PTR [rsp+0x2c]
   140016c40:	add    rcx,rdx
   140016c43:	add    eax,ecx
   140016c45:	mov    DWORD PTR [rsp+0x2c],eax
   140016c49:	mov    eax,DWORD PTR [rsp+0x2c]
   140016c4d:	shl    eax,0x15
   140016c50:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016c54:	shr    ecx,0xb
   140016c57:	or     eax,ecx
   140016c59:	mov    DWORD PTR [rsp+0x2c],eax
   140016c5d:	mov    eax,DWORD PTR [rsp+0x20]
   140016c61:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016c65:	add    ecx,eax
   140016c67:	mov    eax,ecx
   140016c69:	mov    DWORD PTR [rsp+0x2c],eax
   140016c6d:	mov    eax,DWORD PTR [rsp+0x28]
   140016c71:	not    eax
   140016c73:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016c77:	or     ecx,eax
   140016c79:	mov    eax,ecx
   140016c7b:	mov    ecx,DWORD PTR [rsp+0x20]
   140016c7f:	xor    ecx,eax
   140016c81:	mov    eax,ecx
   140016c83:	mov    ecx,0x4
   140016c88:	imul   rcx,rcx,0x8
   140016c8c:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016c90:	mov    ecx,DWORD PTR [rsp+0x24]
   140016c94:	lea    eax,[rcx+rax*1+0x6fa87e4f]
   140016c9b:	mov    DWORD PTR [rsp+0x24],eax
   140016c9f:	mov    eax,DWORD PTR [rsp+0x24]
   140016ca3:	shl    eax,0x6
   140016ca6:	mov    ecx,DWORD PTR [rsp+0x24]
   140016caa:	shr    ecx,0x1a
   140016cad:	or     eax,ecx
   140016caf:	mov    DWORD PTR [rsp+0x24],eax
   140016cb3:	mov    eax,DWORD PTR [rsp+0x2c]
   140016cb7:	mov    ecx,DWORD PTR [rsp+0x24]
   140016cbb:	add    ecx,eax
   140016cbd:	mov    eax,ecx
   140016cbf:	mov    DWORD PTR [rsp+0x24],eax
   140016cc3:	mov    eax,DWORD PTR [rsp+0x20]
   140016cc7:	not    eax
   140016cc9:	mov    ecx,DWORD PTR [rsp+0x24]
   140016ccd:	or     ecx,eax
   140016ccf:	mov    eax,ecx
   140016cd1:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016cd5:	xor    ecx,eax
   140016cd7:	mov    eax,ecx
   140016cd9:	mov    ecx,0x4
   140016cde:	imul   rcx,rcx,0xf
   140016ce2:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016ce6:	mov    ecx,0xfe2ce6e0
   140016ceb:	mov    edx,DWORD PTR [rsp+0x28]
   140016cef:	add    rcx,rdx
   140016cf2:	add    eax,ecx
   140016cf4:	mov    DWORD PTR [rsp+0x28],eax
   140016cf8:	mov    eax,DWORD PTR [rsp+0x28]
   140016cfc:	shl    eax,0xa
   140016cff:	mov    ecx,DWORD PTR [rsp+0x28]
   140016d03:	shr    ecx,0x16
   140016d06:	or     eax,ecx
   140016d08:	mov    DWORD PTR [rsp+0x28],eax
   140016d0c:	mov    eax,DWORD PTR [rsp+0x24]
   140016d10:	mov    ecx,DWORD PTR [rsp+0x28]
   140016d14:	add    ecx,eax
   140016d16:	mov    eax,ecx
   140016d18:	mov    DWORD PTR [rsp+0x28],eax
   140016d1c:	mov    eax,DWORD PTR [rsp+0x2c]
   140016d20:	not    eax
   140016d22:	mov    ecx,DWORD PTR [rsp+0x28]
   140016d26:	or     ecx,eax
   140016d28:	mov    eax,ecx
   140016d2a:	mov    ecx,DWORD PTR [rsp+0x24]
   140016d2e:	xor    ecx,eax
   140016d30:	mov    eax,ecx
   140016d32:	mov    ecx,0x4
   140016d37:	imul   rcx,rcx,0x6
   140016d3b:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016d3f:	mov    ecx,0xa3014314
   140016d44:	mov    edx,DWORD PTR [rsp+0x20]
   140016d48:	add    rcx,rdx
   140016d4b:	add    eax,ecx
   140016d4d:	mov    DWORD PTR [rsp+0x20],eax
   140016d51:	mov    eax,DWORD PTR [rsp+0x20]
   140016d55:	shl    eax,0xf
   140016d58:	mov    ecx,DWORD PTR [rsp+0x20]
   140016d5c:	shr    ecx,0x11
   140016d5f:	or     eax,ecx
   140016d61:	mov    DWORD PTR [rsp+0x20],eax
   140016d65:	mov    eax,DWORD PTR [rsp+0x28]
   140016d69:	mov    ecx,DWORD PTR [rsp+0x20]
   140016d6d:	add    ecx,eax
   140016d6f:	mov    eax,ecx
   140016d71:	mov    DWORD PTR [rsp+0x20],eax
   140016d75:	mov    eax,DWORD PTR [rsp+0x24]
   140016d79:	not    eax
   140016d7b:	mov    ecx,DWORD PTR [rsp+0x20]
   140016d7f:	or     ecx,eax
   140016d81:	mov    eax,ecx
   140016d83:	mov    ecx,DWORD PTR [rsp+0x28]
   140016d87:	xor    ecx,eax
   140016d89:	mov    eax,ecx
   140016d8b:	mov    ecx,0x4
   140016d90:	imul   rcx,rcx,0xd
   140016d94:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016d98:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016d9c:	lea    eax,[rcx+rax*1+0x4e0811a1]
   140016da3:	mov    DWORD PTR [rsp+0x2c],eax
   140016da7:	mov    eax,DWORD PTR [rsp+0x2c]
   140016dab:	shl    eax,0x15
   140016dae:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016db2:	shr    ecx,0xb
   140016db5:	or     eax,ecx
   140016db7:	mov    DWORD PTR [rsp+0x2c],eax
   140016dbb:	mov    eax,DWORD PTR [rsp+0x20]
   140016dbf:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016dc3:	add    ecx,eax
   140016dc5:	mov    eax,ecx
   140016dc7:	mov    DWORD PTR [rsp+0x2c],eax
   140016dcb:	mov    eax,DWORD PTR [rsp+0x28]
   140016dcf:	not    eax
   140016dd1:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016dd5:	or     ecx,eax
   140016dd7:	mov    eax,ecx
   140016dd9:	mov    ecx,DWORD PTR [rsp+0x20]
   140016ddd:	xor    ecx,eax
   140016ddf:	mov    eax,ecx
   140016de1:	mov    ecx,0x4
   140016de6:	imul   rcx,rcx,0x4
   140016dea:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016dee:	mov    ecx,0xf7537e82
   140016df3:	mov    edx,DWORD PTR [rsp+0x24]
   140016df7:	add    rcx,rdx
   140016dfa:	add    eax,ecx
   140016dfc:	mov    DWORD PTR [rsp+0x24],eax
   140016e00:	mov    eax,DWORD PTR [rsp+0x24]
   140016e04:	shl    eax,0x6
   140016e07:	mov    ecx,DWORD PTR [rsp+0x24]
   140016e0b:	shr    ecx,0x1a
   140016e0e:	or     eax,ecx
   140016e10:	mov    DWORD PTR [rsp+0x24],eax
   140016e14:	mov    eax,DWORD PTR [rsp+0x2c]
   140016e18:	mov    ecx,DWORD PTR [rsp+0x24]
   140016e1c:	add    ecx,eax
   140016e1e:	mov    eax,ecx
   140016e20:	mov    DWORD PTR [rsp+0x24],eax
   140016e24:	mov    eax,DWORD PTR [rsp+0x20]
   140016e28:	not    eax
   140016e2a:	mov    ecx,DWORD PTR [rsp+0x24]
   140016e2e:	or     ecx,eax
   140016e30:	mov    eax,ecx
   140016e32:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016e36:	xor    ecx,eax
   140016e38:	mov    eax,ecx
   140016e3a:	mov    ecx,0x4
   140016e3f:	imul   rcx,rcx,0xb
   140016e43:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016e47:	mov    ecx,0xbd3af235
   140016e4c:	mov    edx,DWORD PTR [rsp+0x28]
   140016e50:	add    rcx,rdx
   140016e53:	add    eax,ecx
   140016e55:	mov    DWORD PTR [rsp+0x28],eax
   140016e59:	mov    eax,DWORD PTR [rsp+0x28]
   140016e5d:	shl    eax,0xa
   140016e60:	mov    ecx,DWORD PTR [rsp+0x28]
   140016e64:	shr    ecx,0x16
   140016e67:	or     eax,ecx
   140016e69:	mov    DWORD PTR [rsp+0x28],eax
   140016e6d:	mov    eax,DWORD PTR [rsp+0x24]
   140016e71:	mov    ecx,DWORD PTR [rsp+0x28]
   140016e75:	add    ecx,eax
   140016e77:	mov    eax,ecx
   140016e79:	mov    DWORD PTR [rsp+0x28],eax
   140016e7d:	mov    eax,DWORD PTR [rsp+0x2c]
   140016e81:	not    eax
   140016e83:	mov    ecx,DWORD PTR [rsp+0x28]
   140016e87:	or     ecx,eax
   140016e89:	mov    eax,ecx
   140016e8b:	mov    ecx,DWORD PTR [rsp+0x24]
   140016e8f:	xor    ecx,eax
   140016e91:	mov    eax,ecx
   140016e93:	mov    ecx,0x4
   140016e98:	imul   rcx,rcx,0x2
   140016e9c:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016ea0:	mov    ecx,DWORD PTR [rsp+0x20]
   140016ea4:	lea    eax,[rcx+rax*1+0x2ad7d2bb]
   140016eab:	mov    DWORD PTR [rsp+0x20],eax
   140016eaf:	mov    eax,DWORD PTR [rsp+0x20]
   140016eb3:	shl    eax,0xf
   140016eb6:	mov    ecx,DWORD PTR [rsp+0x20]
   140016eba:	shr    ecx,0x11
   140016ebd:	or     eax,ecx
   140016ebf:	mov    DWORD PTR [rsp+0x20],eax
   140016ec3:	mov    eax,DWORD PTR [rsp+0x28]
   140016ec7:	mov    ecx,DWORD PTR [rsp+0x20]
   140016ecb:	add    ecx,eax
   140016ecd:	mov    eax,ecx
   140016ecf:	mov    DWORD PTR [rsp+0x20],eax
   140016ed3:	mov    eax,DWORD PTR [rsp+0x24]
   140016ed7:	not    eax
   140016ed9:	mov    ecx,DWORD PTR [rsp+0x20]
   140016edd:	or     ecx,eax
   140016edf:	mov    eax,ecx
   140016ee1:	mov    ecx,DWORD PTR [rsp+0x28]
   140016ee5:	xor    ecx,eax
   140016ee7:	mov    eax,ecx
   140016ee9:	mov    ecx,0x4
   140016eee:	imul   rcx,rcx,0x9
   140016ef2:	add    eax,DWORD PTR [rsp+rcx*1+0x30]
   140016ef6:	mov    ecx,0xeb86d391
   140016efb:	mov    edx,DWORD PTR [rsp+0x2c]
   140016eff:	add    rcx,rdx
   140016f02:	add    eax,ecx
   140016f04:	mov    DWORD PTR [rsp+0x2c],eax
   140016f08:	mov    eax,DWORD PTR [rsp+0x2c]
   140016f0c:	shl    eax,0x15
   140016f0f:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016f13:	shr    ecx,0xb
   140016f16:	or     eax,ecx
   140016f18:	mov    DWORD PTR [rsp+0x2c],eax
   140016f1c:	mov    eax,DWORD PTR [rsp+0x20]
   140016f20:	mov    ecx,DWORD PTR [rsp+0x2c]
   140016f24:	add    ecx,eax
   140016f26:	mov    eax,ecx
   140016f28:	mov    DWORD PTR [rsp+0x2c],eax
   140016f2c:	mov    eax,0x4
   140016f31:	imul   rax,rax,0x0
   140016f35:	mov    rcx,QWORD PTR [rsp+0x90]
   140016f3d:	mov    eax,DWORD PTR [rcx+rax*1]
   140016f40:	add    eax,DWORD PTR [rsp+0x24]
   140016f44:	mov    ecx,0x4
   140016f49:	imul   rcx,rcx,0x0
   140016f4d:	mov    rdx,QWORD PTR [rsp+0x90]
   140016f55:	mov    DWORD PTR [rdx+rcx*1],eax
   140016f58:	mov    eax,0x4
   140016f5d:	imul   rax,rax,0x1
   140016f61:	mov    rcx,QWORD PTR [rsp+0x90]
   140016f69:	mov    eax,DWORD PTR [rcx+rax*1]
   140016f6c:	add    eax,DWORD PTR [rsp+0x2c]
   140016f70:	mov    ecx,0x4
   140016f75:	imul   rcx,rcx,0x1
   140016f79:	mov    rdx,QWORD PTR [rsp+0x90]
   140016f81:	mov    DWORD PTR [rdx+rcx*1],eax
   140016f84:	mov    eax,0x4
   140016f89:	imul   rax,rax,0x2
   140016f8d:	mov    rcx,QWORD PTR [rsp+0x90]
   140016f95:	mov    eax,DWORD PTR [rcx+rax*1]
   140016f98:	add    eax,DWORD PTR [rsp+0x20]
   140016f9c:	mov    ecx,0x4
   140016fa1:	imul   rcx,rcx,0x2
   140016fa5:	mov    rdx,QWORD PTR [rsp+0x90]
   140016fad:	mov    DWORD PTR [rdx+rcx*1],eax
   140016fb0:	mov    eax,0x4
   140016fb5:	imul   rax,rax,0x3
   140016fb9:	mov    rcx,QWORD PTR [rsp+0x90]
   140016fc1:	mov    eax,DWORD PTR [rcx+rax*1]
   140016fc4:	add    eax,DWORD PTR [rsp+0x28]
   140016fc8:	mov    ecx,0x4
   140016fcd:	imul   rcx,rcx,0x3
   140016fd1:	mov    rdx,QWORD PTR [rsp+0x90]
   140016fd9:	mov    DWORD PTR [rdx+rcx*1],eax
   140016fdc:	mov    r8d,0x40
   140016fe2:	xor    edx,edx
   140016fe4:	lea    rcx,[rsp+0x30]
   140016fe9:	call   0x140017200
   140016fee:	mov    rcx,QWORD PTR [rsp+0x70]
   140016ff3:	xor    rcx,rsp
   140016ff6:	call   0x140021890
   140016ffb:	add    rsp,0x88
   140017002:	ret    
   140017003:	int3   
   140017004:	int3   
   140017005:	int3   
   140017006:	int3   
   140017007:	int3   
   140017008:	int3   
   140017009:	int3   
   14001700a:	int3   
   14001700b:	int3   
   14001700c:	int3   
   14001700d:	int3   
   14001700e:	int3   
   14001700f:	int3   
   140017010:	mov    DWORD PTR [rsp+0x18],r8d
   140017015:	mov    QWORD PTR [rsp+0x10],rdx
   14001701a:	mov    QWORD PTR [rsp+0x8],rcx
   14001701f:	sub    rsp,0x18
   140017023:	mov    DWORD PTR [rsp+0x4],0x0
   14001702b:	mov    DWORD PTR [rsp],0x0
   140017032:	jmp    0x140017047
   140017034:	mov    eax,DWORD PTR [rsp+0x4]
   140017038:	inc    eax
   14001703a:	mov    DWORD PTR [rsp+0x4],eax
   14001703e:	mov    eax,DWORD PTR [rsp]
   140017041:	add    eax,0x4
   140017044:	mov    DWORD PTR [rsp],eax
   140017047:	mov    eax,DWORD PTR [rsp+0x30]
   14001704b:	cmp    DWORD PTR [rsp],eax
   14001704e:	jae    0x1400170e0
   140017054:	mov    eax,DWORD PTR [rsp+0x4]
   140017058:	mov    rcx,QWORD PTR [rsp+0x28]
   14001705d:	mov    eax,DWORD PTR [rcx+rax*4]
   140017060:	and    eax,0xff
   140017065:	mov    ecx,DWORD PTR [rsp]
   140017068:	mov    rdx,QWORD PTR [rsp+0x20]
   14001706d:	mov    BYTE PTR [rdx+rcx*1],al
   140017070:	mov    eax,DWORD PTR [rsp+0x4]
   140017074:	mov    rcx,QWORD PTR [rsp+0x28]
   140017079:	mov    eax,DWORD PTR [rcx+rax*4]
   14001707c:	shr    eax,0x8
   14001707f:	and    eax,0xff
   140017084:	mov    ecx,DWORD PTR [rsp]
   140017087:	inc    ecx
   140017089:	mov    ecx,ecx
   14001708b:	mov    rdx,QWORD PTR [rsp+0x20]
   140017090:	mov    BYTE PTR [rdx+rcx*1],al
   140017093:	mov    eax,DWORD PTR [rsp+0x4]
   140017097:	mov    rcx,QWORD PTR [rsp+0x28]
   14001709c:	mov    eax,DWORD PTR [rcx+rax*4]
   14001709f:	shr    eax,0x10
   1400170a2:	and    eax,0xff
   1400170a7:	mov    ecx,DWORD PTR [rsp]
   1400170aa:	add    ecx,0x2
   1400170ad:	mov    ecx,ecx
   1400170af:	mov    rdx,QWORD PTR [rsp+0x20]
   1400170b4:	mov    BYTE PTR [rdx+rcx*1],al
   1400170b7:	mov    eax,DWORD PTR [rsp+0x4]
   1400170bb:	mov    rcx,QWORD PTR [rsp+0x28]
   1400170c0:	mov    eax,DWORD PTR [rcx+rax*4]
   1400170c3:	shr    eax,0x18
   1400170c6:	and    eax,0xff
   1400170cb:	mov    ecx,DWORD PTR [rsp]
   1400170ce:	add    ecx,0x3
   1400170d1:	mov    ecx,ecx
   1400170d3:	mov    rdx,QWORD PTR [rsp+0x20]
   1400170d8:	mov    BYTE PTR [rdx+rcx*1],al
   1400170db:	jmp    0x140017034
   1400170e0:	add    rsp,0x18
   1400170e4:	ret    
   1400170e5:	int3   
   1400170e6:	int3   
   1400170e7:	int3   
   1400170e8:	int3   
   1400170e9:	int3   
   1400170ea:	int3   
   1400170eb:	int3   
   1400170ec:	int3   
   1400170ed:	int3   
   1400170ee:	int3   
   1400170ef:	int3   
   1400170f0:	mov    DWORD PTR [rsp+0x18],r8d
   1400170f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400170fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400170ff:	sub    rsp,0x18
   140017103:	mov    DWORD PTR [rsp+0x4],0x0
   14001710b:	mov    DWORD PTR [rsp],0x0
   140017112:	jmp    0x140017127
   140017114:	mov    eax,DWORD PTR [rsp+0x4]
   140017118:	inc    eax
   14001711a:	mov    DWORD PTR [rsp+0x4],eax
   14001711e:	mov    eax,DWORD PTR [rsp]
   140017121:	add    eax,0x4
   140017124:	mov    DWORD PTR [rsp],eax
   140017127:	mov    eax,DWORD PTR [rsp+0x30]
   14001712b:	cmp    DWORD PTR [rsp],eax
   14001712e:	jae    0x14001718b
   140017130:	mov    eax,DWORD PTR [rsp]
   140017133:	mov    rcx,QWORD PTR [rsp+0x28]
   140017138:	movzx  eax,BYTE PTR [rcx+rax*1]
   14001713c:	mov    ecx,DWORD PTR [rsp]
   14001713f:	inc    ecx
   140017141:	mov    ecx,ecx
   140017143:	mov    rdx,QWORD PTR [rsp+0x28]
   140017148:	movzx  ecx,BYTE PTR [rdx+rcx*1]
   14001714c:	shl    ecx,0x8
   14001714f:	or     eax,ecx
   140017151:	mov    ecx,DWORD PTR [rsp]
   140017154:	add    ecx,0x2
   140017157:	mov    ecx,ecx
   140017159:	mov    rdx,QWORD PTR [rsp+0x28]
   14001715e:	movzx  ecx,BYTE PTR [rdx+rcx*1]
   140017162:	shl    ecx,0x10
   140017165:	or     eax,ecx
   140017167:	mov    ecx,DWORD PTR [rsp]
   14001716a:	add    ecx,0x3
   14001716d:	mov    ecx,ecx
   14001716f:	mov    rdx,QWORD PTR [rsp+0x28]
   140017174:	movzx  ecx,BYTE PTR [rdx+rcx*1]
   140017178:	shl    ecx,0x18
   14001717b:	or     eax,ecx
   14001717d:	mov    ecx,DWORD PTR [rsp+0x4]
   140017181:	mov    rdx,QWORD PTR [rsp+0x20]
   140017186:	mov    DWORD PTR [rdx+rcx*4],eax
   140017189:	jmp    0x140017114
   14001718b:	add    rsp,0x18
   14001718f:	ret    
   140017190:	int3   
   140017191:	int3   
   140017192:	int3   
   140017193:	int3   
   140017194:	int3   
   140017195:	int3   
   140017196:	int3   
   140017197:	int3   
   140017198:	int3   
   140017199:	int3   
   14001719a:	int3   
   14001719b:	int3   
   14001719c:	int3   
   14001719d:	int3   
   14001719e:	int3   
   14001719f:	int3   
   1400171a0:	mov    DWORD PTR [rsp+0x18],r8d
   1400171a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400171aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400171af:	sub    rsp,0x18
   1400171b3:	mov    DWORD PTR [rsp],0x0
   1400171ba:	jmp    0x1400171c4
   1400171bc:	mov    eax,DWORD PTR [rsp]
   1400171bf:	inc    eax
   1400171c1:	mov    DWORD PTR [rsp],eax
   1400171c4:	mov    eax,DWORD PTR [rsp+0x30]
   1400171c8:	cmp    DWORD PTR [rsp],eax
   1400171cb:	jae    0x1400171e7
   1400171cd:	mov    eax,DWORD PTR [rsp]
   1400171d0:	mov    ecx,DWORD PTR [rsp]
   1400171d3:	mov    rdx,QWORD PTR [rsp+0x20]
   1400171d8:	mov    r8,QWORD PTR [rsp+0x28]
   1400171dd:	movzx  eax,BYTE PTR [r8+rax*1]
   1400171e2:	mov    BYTE PTR [rdx+rcx*1],al
   1400171e5:	jmp    0x1400171bc
   1400171e7:	add    rsp,0x18
   1400171eb:	ret    
   1400171ec:	int3   
   1400171ed:	int3   
   1400171ee:	int3   
   1400171ef:	int3   
   1400171f0:	int3   
   1400171f1:	int3   
   1400171f2:	int3   
   1400171f3:	int3   
   1400171f4:	int3   
   1400171f5:	int3   
   1400171f6:	int3   
   1400171f7:	int3   
   1400171f8:	int3   
   1400171f9:	int3   
   1400171fa:	int3   
   1400171fb:	int3   
   1400171fc:	int3   
   1400171fd:	int3   
   1400171fe:	int3   
   1400171ff:	int3   
   140017200:	mov    DWORD PTR [rsp+0x18],r8d
   140017205:	mov    DWORD PTR [rsp+0x10],edx
   140017209:	mov    QWORD PTR [rsp+0x8],rcx
   14001720e:	sub    rsp,0x18
   140017212:	mov    DWORD PTR [rsp],0x0
   140017219:	jmp    0x140017223
   14001721b:	mov    eax,DWORD PTR [rsp]
   14001721e:	inc    eax
   140017220:	mov    DWORD PTR [rsp],eax
   140017223:	mov    eax,DWORD PTR [rsp+0x30]
   140017227:	cmp    DWORD PTR [rsp],eax
   14001722a:	jae    0x14001723e
   14001722c:	mov    eax,DWORD PTR [rsp]
   14001722f:	mov    rcx,QWORD PTR [rsp+0x20]
   140017234:	movzx  edx,BYTE PTR [rsp+0x28]
   140017239:	mov    BYTE PTR [rcx+rax*1],dl
   14001723c:	jmp    0x14001721b
   14001723e:	add    rsp,0x18
   140017242:	ret    
   140017243:	int3   
   140017244:	int3   
   140017245:	int3   
   140017246:	int3   
   140017247:	int3   
   140017248:	int3   
   140017249:	int3   
   14001724a:	int3   
   14001724b:	int3   
   14001724c:	int3   
   14001724d:	int3   
   14001724e:	int3   
   14001724f:	int3   
   140017250:	mov    BYTE PTR [rsp+0x10],dl
   140017254:	mov    QWORD PTR [rsp+0x8],rcx
   140017259:	sub    rsp,0x48
   14001725d:	call   0x140017370
   140017262:	mov    QWORD PTR [rsp+0x20],rax
   140017267:	cmp    QWORD PTR [rsp+0x20],0x0
   14001726d:	jne    0x140017274
   14001726f:	jmp    0x1400172fc
   140017274:	movzx  eax,BYTE PTR [rip+0x25a0d]        # 0x14003cc88
   14001727b:	test   eax,eax
   14001727d:	jne    0x140017290
   14001727f:	mov    rcx,QWORD PTR [rsp+0x20]
   140017284:	call   0x1400173f0
   140017289:	mov    BYTE PTR [rip+0x259f8],0x1        # 0x14003cc88
   140017290:	mov    rax,QWORD PTR [rsp+0x20]
   140017295:	movzx  eax,BYTE PTR [rax+0x30]
   140017299:	test   eax,eax
   14001729b:	jne    0x14001729f
   14001729d:	jmp    0x1400172fc
   14001729f:	cmp    QWORD PTR [rsp+0x50],0x0
   1400172a5:	je     0x1400172cc
   1400172a7:	mov    rax,QWORD PTR [rsp+0x20]
   1400172ac:	mov    rcx,QWORD PTR [rsp+0x20]
   1400172b1:	mov    rcx,QWORD PTR [rcx]
   1400172b4:	mov    QWORD PTR [rsp+0x28],rcx
   1400172b9:	mov    rdx,QWORD PTR [rsp+0x50]
   1400172be:	mov    rcx,rax
   1400172c1:	mov    rax,QWORD PTR [rsp+0x28]
   1400172c6:	call   QWORD PTR [rax+0xc0]
   1400172cc:	movzx  eax,BYTE PTR [rsp+0x58]
   1400172d1:	test   eax,eax
   1400172d3:	je     0x1400172fc
   1400172d5:	mov    rax,QWORD PTR [rsp+0x20]
   1400172da:	mov    rcx,QWORD PTR [rsp+0x20]
   1400172df:	mov    rcx,QWORD PTR [rcx]
   1400172e2:	mov    QWORD PTR [rsp+0x30],rcx
   1400172e7:	lea    rdx,[rip+0x17852]        # 0x14002eb40
   1400172ee:	mov    rcx,rax
   1400172f1:	mov    rax,QWORD PTR [rsp+0x30]
   1400172f6:	call   QWORD PTR [rax+0xc0]
   1400172fc:	add    rsp,0x48
   140017300:	ret    
   140017301:	int3   
   140017302:	int3   
   140017303:	int3   
   140017304:	int3   
   140017305:	int3   
   140017306:	int3   
   140017307:	int3   
   140017308:	int3   
   140017309:	int3   
   14001730a:	int3   
   14001730b:	int3   
   14001730c:	int3   
   14001730d:	int3   
   14001730e:	int3   
   14001730f:	int3   
   140017310:	sub    rsp,0x48
   140017314:	mov    rax,QWORD PTR [rip+0x25965]        # 0x14003cc80
   14001731b:	mov    QWORD PTR [rsp+0x28],rax
   140017320:	mov    rax,QWORD PTR [rsp+0x28]
   140017325:	mov    QWORD PTR [rsp+0x20],rax
   14001732a:	cmp    QWORD PTR [rsp+0x20],0x0
   140017330:	je     0x140017348
   140017332:	mov    edx,0x1
   140017337:	mov    rcx,QWORD PTR [rsp+0x20]
   14001733c:	call   0x1400176b0
   140017341:	mov    QWORD PTR [rsp+0x30],rax
   140017346:	jmp    0x140017351
   140017348:	mov    QWORD PTR [rsp+0x30],0x0
   140017351:	mov    QWORD PTR [rip+0x25924],0x0        # 0x14003cc80
   14001735c:	add    rsp,0x48
   140017360:	ret    
   140017361:	int3   
   140017362:	int3   
   140017363:	int3   
   140017364:	int3   
   140017365:	int3   
   140017366:	int3   
   140017367:	int3   
   140017368:	int3   
   140017369:	int3   
   14001736a:	int3   
   14001736b:	int3   
   14001736c:	int3   
   14001736d:	int3   
   14001736e:	int3   
   14001736f:	int3   
   140017370:	sub    rsp,0x48
   140017374:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001737d:	cmp    QWORD PTR [rip+0x258fb],0x0        # 0x14003cc80
   140017385:	jne    0x1400173d9
   140017387:	mov    ecx,0x38
   14001738c:	call   0x140020b9c
   140017391:	mov    QWORD PTR [rsp+0x20],rax
   140017396:	cmp    QWORD PTR [rsp+0x20],0x0
   14001739c:	je     0x1400173af
   14001739e:	mov    rcx,QWORD PTR [rsp+0x20]
   1400173a3:	call   0x140017580
   1400173a8:	mov    QWORD PTR [rsp+0x28],rax
   1400173ad:	jmp    0x1400173b8
   1400173af:	mov    QWORD PTR [rsp+0x28],0x0
   1400173b8:	mov    rax,QWORD PTR [rsp+0x28]
   1400173bd:	mov    QWORD PTR [rsp+0x30],rax
   1400173c2:	mov    rax,QWORD PTR [rsp+0x30]
   1400173c7:	mov    QWORD PTR [rip+0x258b2],rax        # 0x14003cc80
   1400173ce:	mov    rax,QWORD PTR [rip+0x258ab]        # 0x14003cc80
   1400173d5:	mov    BYTE PTR [rax+0x30],0x0
   1400173d9:	mov    rax,QWORD PTR [rip+0x258a0]        # 0x14003cc80
   1400173e0:	add    rsp,0x48
   1400173e4:	ret    
   1400173e5:	int3   
   1400173e6:	int3   
   1400173e7:	int3   
   1400173e8:	int3   
   1400173e9:	int3   
   1400173ea:	int3   
   1400173eb:	int3   
   1400173ec:	int3   
   1400173ed:	int3   
   1400173ee:	int3   
   1400173ef:	int3   
   1400173f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400173f5:	push   rdi
   1400173f6:	sub    rsp,0x270
   1400173fd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140017406:	mov    rax,QWORD PTR [rip+0x23e43]        # 0x14003b250
   14001740d:	xor    rax,rsp
   140017410:	mov    QWORD PTR [rsp+0x260],rax
   140017418:	xor    eax,eax
   14001741a:	mov    WORD PTR [rsp+0x50],ax
   14001741f:	lea    rax,[rsp+0x52]
   140017424:	mov    rdi,rax
   140017427:	xor    eax,eax
   140017429:	mov    ecx,0x206
   14001742e:	rep stos BYTE PTR es:[rdi],al
   140017430:	lea    rdx,[rsp+0x50]
   140017435:	mov    ecx,0x104
   14001743a:	call   QWORD PTR [rip+0xecb8]        # 0x1400260f8
   140017440:	test   eax,eax
   140017442:	je     0x140017456
   140017444:	lea    rdx,[rip+0x176fd]        # 0x14002eb48
   14001744b:	lea    rcx,[rsp+0x50]
   140017450:	call   QWORD PTR [rip+0xf0f2]        # 0x140026548
   140017456:	xor    r9d,r9d
   140017459:	mov    r8d,0xffffffff
   14001745f:	xor    edx,edx
   140017461:	lea    rcx,[rsp+0x30]
   140017466:	call   0x1400174f0
   14001746b:	nop
   14001746c:	mov    rax,QWORD PTR [rsp+0x280]
   140017474:	mov    rcx,QWORD PTR [rsp+0x280]
   14001747c:	mov    rcx,QWORD PTR [rcx]
   14001747f:	mov    QWORD PTR [rsp+0x20],rcx
   140017484:	lea    r9,[rsp+0x30]
   140017489:	mov    r8d,0x7001
   14001748f:	lea    rdx,[rsp+0x50]
   140017494:	mov    rcx,rax
   140017497:	mov    rax,QWORD PTR [rsp+0x20]
   14001749c:	call   QWORD PTR [rax+0x58]
   14001749f:	test   eax,eax
   1400174a1:	je     0x1400174bf
   1400174a3:	mov    rax,QWORD PTR [rsp+0x280]
   1400174ab:	mov    rcx,rax
   1400174ae:	call   0x1400176f0
   1400174b3:	mov    rax,QWORD PTR [rsp+0x280]
   1400174bb:	mov    BYTE PTR [rax+0x30],0x1
   1400174bf:	lea    rcx,[rsp+0x30]
   1400174c4:	call   0x1400175e0
   1400174c9:	mov    rcx,QWORD PTR [rsp+0x260]
   1400174d1:	xor    rcx,rsp
   1400174d4:	call   0x140021890
   1400174d9:	add    rsp,0x270
   1400174e0:	pop    rdi
   1400174e1:	ret    
   1400174e2:	int3   
   1400174e3:	int3   
   1400174e4:	int3   
   1400174e5:	int3   
   1400174e6:	int3   
   1400174e7:	int3   
   1400174e8:	int3   
   1400174e9:	int3   
   1400174ea:	int3   
   1400174eb:	int3   
   1400174ec:	int3   
   1400174ed:	int3   
   1400174ee:	int3   
   1400174ef:	int3   
   1400174f0:	mov    QWORD PTR [rsp+0x20],r9
   1400174f5:	mov    DWORD PTR [rsp+0x18],r8d
   1400174fa:	mov    DWORD PTR [rsp+0x10],edx
   1400174fe:	mov    QWORD PTR [rsp+0x8],rcx
   140017503:	sub    rsp,0x38
   140017507:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017510:	mov    rcx,QWORD PTR [rsp+0x40]
   140017515:	call   0x1400210ac
   14001751a:	nop
   14001751b:	mov    rax,QWORD PTR [rsp+0x40]
   140017520:	lea    rcx,[rip+0x17759]        # 0x14002ec80
   140017527:	mov    QWORD PTR [rax],rcx
   14001752a:	mov    rax,QWORD PTR [rsp+0x40]
   14001752f:	add    rax,0x18
   140017533:	mov    rcx,rax
   140017536:	call   QWORD PTR [rip+0xf844]        # 0x140026d80
   14001753c:	nop
   14001753d:	mov    rax,QWORD PTR [rsp+0x40]
   140017542:	mov    ecx,DWORD PTR [rsp+0x48]
   140017546:	mov    DWORD PTR [rax+0x10],ecx
   140017549:	mov    rax,QWORD PTR [rsp+0x40]
   14001754e:	mov    ecx,DWORD PTR [rsp+0x50]
   140017552:	mov    DWORD PTR [rax+0x14],ecx
   140017555:	mov    rax,QWORD PTR [rsp+0x40]
   14001755a:	add    rax,0x18
   14001755e:	mov    rdx,QWORD PTR [rsp+0x58]
   140017563:	mov    rcx,rax
   140017566:	call   QWORD PTR [rip+0xf334]        # 0x1400268a0
   14001756c:	nop
   14001756d:	mov    rax,QWORD PTR [rsp+0x40]
   140017572:	add    rsp,0x38
   140017576:	ret    
   140017577:	int3   
   140017578:	int3   
   140017579:	int3   
   14001757a:	int3   
   14001757b:	int3   
   14001757c:	int3   
   14001757d:	int3   
   14001757e:	int3   
   14001757f:	int3   
   140017580:	mov    QWORD PTR [rsp+0x8],rcx
   140017585:	sub    rsp,0x38
   140017589:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017592:	mov    rax,QWORD PTR [rsp+0x40]
   140017597:	mov    rcx,rax
   14001759a:	call   0x1400210ca
   14001759f:	nop
   1400175a0:	mov    rax,QWORD PTR [rsp+0x40]
   1400175a5:	add    rsp,0x38
   1400175a9:	ret    
   1400175aa:	int3   
   1400175ab:	int3   
   1400175ac:	int3   
   1400175ad:	int3   
   1400175ae:	int3   
   1400175af:	int3   
   1400175b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400175b5:	sub    rsp,0x38
   1400175b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400175c2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400175c7:	call   0x140017630
   1400175cc:	add    rsp,0x38
   1400175d0:	ret    
   1400175d1:	int3   
   1400175d2:	int3   
   1400175d3:	int3   
   1400175d4:	int3   
   1400175d5:	int3   
   1400175d6:	int3   
   1400175d7:	int3   
   1400175d8:	int3   
   1400175d9:	int3   
   1400175da:	int3   
   1400175db:	int3   
   1400175dc:	int3   
   1400175dd:	int3   
   1400175de:	int3   
   1400175df:	int3   
   1400175e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400175e5:	sub    rsp,0x38
   1400175e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400175f2:	mov    rax,QWORD PTR [rsp+0x40]
   1400175f7:	lea    rcx,[rip+0x17682]        # 0x14002ec80
   1400175fe:	mov    QWORD PTR [rax],rcx
   140017601:	mov    rax,QWORD PTR [rsp+0x40]
   140017606:	add    rax,0x18
   14001760a:	mov    rcx,rax
   14001760d:	call   QWORD PTR [rip+0xf74d]        # 0x140026d60
   140017613:	nop
   140017614:	mov    rcx,QWORD PTR [rsp+0x40]
   140017619:	call   0x1400175b0
   14001761e:	add    rsp,0x38
   140017622:	ret    
   140017623:	int3   
   140017624:	int3   
   140017625:	int3   
   140017626:	int3   
   140017627:	int3   
   140017628:	int3   
   140017629:	int3   
   14001762a:	int3   
   14001762b:	int3   
   14001762c:	int3   
   14001762d:	int3   
   14001762e:	int3   
   14001762f:	int3   
   140017630:	mov    QWORD PTR [rsp+0x8],rcx
   140017635:	ret    
   140017636:	int3   
   140017637:	int3   
   140017638:	int3   
   140017639:	int3   
   14001763a:	int3   
   14001763b:	int3   
   14001763c:	int3   
   14001763d:	int3   
   14001763e:	int3   
   14001763f:	int3   
   140017640:	mov    QWORD PTR [rsp+0x8],rcx
   140017645:	sub    rsp,0x38
   140017649:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017652:	mov    rax,QWORD PTR [rsp+0x40]
   140017657:	mov    rcx,rax
   14001765a:	call   0x1400210d0
   14001765f:	add    rsp,0x38
   140017663:	ret    
   140017664:	int3   
   140017665:	int3   
   140017666:	int3   
   140017667:	int3   
   140017668:	int3   
   140017669:	int3   
   14001766a:	int3   
   14001766b:	int3   
   14001766c:	int3   
   14001766d:	int3   
   14001766e:	int3   
   14001766f:	int3   
   140017670:	mov    DWORD PTR [rsp+0x10],edx
   140017674:	mov    QWORD PTR [rsp+0x8],rcx
   140017679:	sub    rsp,0x28
   14001767d:	mov    rcx,QWORD PTR [rsp+0x30]
   140017682:	call   0x1400175e0
   140017687:	mov    eax,DWORD PTR [rsp+0x38]
   14001768b:	and    eax,0x1
   14001768e:	test   eax,eax
   140017690:	je     0x14001769c
   140017692:	mov    rcx,QWORD PTR [rsp+0x30]
   140017697:	call   0x140002ba0
   14001769c:	mov    rax,QWORD PTR [rsp+0x30]
   1400176a1:	add    rsp,0x28
   1400176a5:	ret    
   1400176a6:	int3   
   1400176a7:	int3   
   1400176a8:	int3   
   1400176a9:	int3   
   1400176aa:	int3   
   1400176ab:	int3   
   1400176ac:	int3   
   1400176ad:	int3   
   1400176ae:	int3   
   1400176af:	int3   
   1400176b0:	mov    DWORD PTR [rsp+0x10],edx
   1400176b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400176b9:	sub    rsp,0x28
   1400176bd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400176c2:	call   0x140017640
   1400176c7:	mov    eax,DWORD PTR [rsp+0x38]
   1400176cb:	and    eax,0x1
   1400176ce:	test   eax,eax
   1400176d0:	je     0x1400176dc
   1400176d2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400176d7:	call   0x140020b90
   1400176dc:	mov    rax,QWORD PTR [rsp+0x30]
   1400176e1:	add    rsp,0x28
   1400176e5:	ret    
   1400176e6:	int3   
   1400176e7:	int3   
   1400176e8:	int3   
   1400176e9:	int3   
   1400176ea:	int3   
   1400176eb:	int3   
   1400176ec:	int3   
   1400176ed:	int3   
   1400176ee:	int3   
   1400176ef:	int3   
   1400176f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400176f5:	sub    rsp,0x28
   1400176f9:	mov    rax,QWORD PTR [rsp+0x30]
   1400176fe:	mov    rax,QWORD PTR [rax]
   140017701:	mov    r8d,0x2
   140017707:	xor    edx,edx
   140017709:	mov    rcx,QWORD PTR [rsp+0x30]
   14001770e:	call   QWORD PTR [rax+0x68]
   140017711:	add    rsp,0x28
   140017715:	ret    
   140017716:	int3   
   140017717:	int3   
   140017718:	int3   
   140017719:	int3   
   14001771a:	int3   
   14001771b:	int3   
   14001771c:	int3   
   14001771d:	int3   
   14001771e:	int3   
   14001771f:	int3   
   140017720:	mov    BYTE PTR [rsp+0x10],dl
   140017724:	mov    QWORD PTR [rsp+0x8],rcx
   140017729:	sub    rsp,0x38
   14001772d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017736:	mov    rcx,QWORD PTR [rsp+0x40]
   14001773b:	call   0x140017e90
   140017740:	nop
   140017741:	mov    rax,QWORD PTR [rsp+0x40]
   140017746:	add    rax,0x18
   14001774a:	mov    rcx,rax
   14001774d:	call   QWORD PTR [rip+0xf62d]        # 0x140026d80
   140017753:	nop
   140017754:	mov    rax,QWORD PTR [rsp+0x40]
   140017759:	add    rax,0x20
   14001775d:	mov    rcx,rax
   140017760:	call   QWORD PTR [rip+0xf61a]        # 0x140026d80
   140017766:	nop
   140017767:	mov    rax,QWORD PTR [rsp+0x40]
   14001776c:	add    rax,0x28
   140017770:	mov    rcx,rax
   140017773:	call   QWORD PTR [rip+0xf607]        # 0x140026d80
   140017779:	nop
   14001777a:	mov    rax,QWORD PTR [rsp+0x40]
   14001777f:	add    rax,0x30
   140017783:	mov    rcx,rax
   140017786:	call   QWORD PTR [rip+0xf5f4]        # 0x140026d80
   14001778c:	nop
   14001778d:	mov    rax,QWORD PTR [rsp+0x40]
   140017792:	add    rax,0x38
   140017796:	mov    rcx,rax
   140017799:	call   QWORD PTR [rip+0xf5e1]        # 0x140026d80
   14001779f:	nop
   1400177a0:	mov    rax,QWORD PTR [rsp+0x40]
   1400177a5:	add    rax,0x40
   1400177a9:	mov    rcx,rax
   1400177ac:	call   QWORD PTR [rip+0xf5ce]        # 0x140026d80
   1400177b2:	nop
   1400177b3:	mov    rax,QWORD PTR [rsp+0x40]
   1400177b8:	add    rax,0x48
   1400177bc:	mov    rcx,rax
   1400177bf:	call   QWORD PTR [rip+0xf5bb]        # 0x140026d80
   1400177c5:	nop
   1400177c6:	mov    rax,QWORD PTR [rsp+0x40]
   1400177cb:	add    rax,0x50
   1400177cf:	mov    rcx,rax
   1400177d2:	call   QWORD PTR [rip+0xf5a8]        # 0x140026d80
   1400177d8:	nop
   1400177d9:	mov    rax,QWORD PTR [rsp+0x40]
   1400177de:	movzx  ecx,BYTE PTR [rsp+0x48]
   1400177e3:	mov    BYTE PTR [rax+0x10],cl
   1400177e6:	mov    rax,QWORD PTR [rsp+0x40]
   1400177eb:	add    rsp,0x38
   1400177ef:	ret    
   1400177f0:	int3   
   1400177f1:	int3   
   1400177f2:	int3   
   1400177f3:	int3   
   1400177f4:	int3   
   1400177f5:	int3   
   1400177f6:	int3   
   1400177f7:	int3   
   1400177f8:	int3   
   1400177f9:	int3   
   1400177fa:	int3   
   1400177fb:	int3   
   1400177fc:	int3   
   1400177fd:	int3   
   1400177fe:	int3   
   1400177ff:	int3   
   140017800:	mov    QWORD PTR [rsp+0x8],rcx
   140017805:	sub    rsp,0x88
   14001780c:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140017815:	mov    rax,QWORD PTR [rip+0x23a34]        # 0x14003b250
   14001781c:	xor    rax,rsp
   14001781f:	mov    QWORD PTR [rsp+0x70],rax
   140017824:	mov    QWORD PTR [rsp+0x28],0x0
   14001782d:	lea    rdx,[rsp+0x20]
   140017832:	mov    rcx,QWORD PTR [rsp+0x90]
   14001783a:	call   0x1400054c0
   14001783f:	jmp    0x140017853
   140017841:	xor    r8d,r8d
   140017844:	lea    rdx,[rsp+0x40]
   140017849:	lea    rcx,[rsp+0x20]
   14001784e:	call   0x140005210
   140017853:	lea    rdx,[rsp+0x38]
   140017858:	mov    rcx,QWORD PTR [rsp+0x90]
   140017860:	call   0x140005500
   140017865:	mov    rdx,rax
   140017868:	lea    rcx,[rsp+0x20]
   14001786d:	call   0x140005a90
   140017872:	movzx  eax,al
   140017875:	test   eax,eax
   140017877:	je     0x1400178b7
   140017879:	lea    rcx,[rsp+0x20]
   14001787e:	call   0x1400051f0
   140017883:	mov    rdx,rax
   140017886:	lea    rcx,[rsp+0x48]
   14001788b:	call   0x140017ed0
   140017890:	nop
   140017891:	lea    rcx,[rsp+0x48]
   140017896:	call   0x14001f650
   14001789b:	mov    rcx,QWORD PTR [rsp+0x28]
   1400178a0:	add    rcx,rax
   1400178a3:	mov    rax,rcx
   1400178a6:	mov    QWORD PTR [rsp+0x28],rax
   1400178ab:	lea    rcx,[rsp+0x48]
   1400178b0:	call   0x140017fb0
   1400178b5:	jmp    0x140017841
   1400178b7:	mov    rax,QWORD PTR [rsp+0x28]
   1400178bc:	mov    rcx,QWORD PTR [rsp+0x70]
   1400178c1:	xor    rcx,rsp
   1400178c4:	call   0x140021890
   1400178c9:	add    rsp,0x88
   1400178d0:	ret    
   1400178d1:	int3   
   1400178d2:	int3   
   1400178d3:	int3   
   1400178d4:	int3   
   1400178d5:	int3   
   1400178d6:	int3   
   1400178d7:	int3   
   1400178d8:	int3   
   1400178d9:	int3   
   1400178da:	int3   
   1400178db:	int3   
   1400178dc:	int3   
   1400178dd:	int3   
   1400178de:	int3   
   1400178df:	int3   
   1400178e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400178e5:	mov    rax,QWORD PTR [rsp+0x8]
   1400178ea:	movzx  eax,BYTE PTR [rax+0x10]
   1400178ee:	ret    
   1400178ef:	int3   
   1400178f0:	int3   
   1400178f1:	int3   
   1400178f2:	int3   
   1400178f3:	int3   
   1400178f4:	int3   
   1400178f5:	int3   
   1400178f6:	int3   
   1400178f7:	int3   
   1400178f8:	int3   
   1400178f9:	int3   
   1400178fa:	int3   
   1400178fb:	int3   
   1400178fc:	int3   
   1400178fd:	int3   
   1400178fe:	int3   
   1400178ff:	int3   
   140017900:	mov    BYTE PTR [rsp+0x10],dl
   140017904:	mov    QWORD PTR [rsp+0x8],rcx
   140017909:	mov    rax,QWORD PTR [rsp+0x8]
   14001790e:	movzx  ecx,BYTE PTR [rsp+0x10]
   140017913:	mov    BYTE PTR [rax+0x10],cl
   140017916:	ret    
   140017917:	int3   
   140017918:	int3   
   140017919:	int3   
   14001791a:	int3   
   14001791b:	int3   
   14001791c:	int3   
   14001791d:	int3   
   14001791e:	int3   
   14001791f:	int3   
   140017920:	mov    QWORD PTR [rsp+0x10],rdx
   140017925:	mov    QWORD PTR [rsp+0x8],rcx
   14001792a:	sub    rsp,0x28
   14001792e:	mov    rax,QWORD PTR [rsp+0x30]
   140017933:	add    rax,0x18
   140017937:	mov    rdx,QWORD PTR [rsp+0x38]
   14001793c:	mov    rcx,rax
   14001793f:	call   QWORD PTR [rip+0xef5b]        # 0x1400268a0
   140017945:	add    rsp,0x28
   140017949:	ret    
   14001794a:	int3   
   14001794b:	int3   
   14001794c:	int3   
   14001794d:	int3   
   14001794e:	int3   
   14001794f:	int3   
   140017950:	mov    QWORD PTR [rsp+0x8],rcx
   140017955:	sub    rsp,0x28
   140017959:	mov    rax,QWORD PTR [rsp+0x30]
   14001795e:	add    rax,0x18
   140017962:	mov    rcx,rax
   140017965:	call   QWORD PTR [rip+0xf445]        # 0x140026db0
   14001796b:	add    rsp,0x28
   14001796f:	ret    
   140017970:	int3   
   140017971:	int3   
   140017972:	int3   
   140017973:	int3   
   140017974:	int3   
   140017975:	int3   
   140017976:	int3   
   140017977:	int3   
   140017978:	int3   
   140017979:	int3   
   14001797a:	int3   
   14001797b:	int3   
   14001797c:	int3   
   14001797d:	int3   
   14001797e:	int3   
   14001797f:	int3   
   140017980:	mov    QWORD PTR [rsp+0x8],rcx
   140017985:	sub    rsp,0x28
   140017989:	mov    rax,QWORD PTR [rsp+0x30]
   14001798e:	add    rax,0x20
   140017992:	mov    rcx,rax
   140017995:	call   QWORD PTR [rip+0xf415]        # 0x140026db0
   14001799b:	add    rsp,0x28
   14001799f:	ret    
   1400179a0:	int3   
   1400179a1:	int3   
   1400179a2:	int3   
   1400179a3:	int3   
   1400179a4:	int3   
   1400179a5:	int3   
   1400179a6:	int3   
   1400179a7:	int3   
   1400179a8:	int3   
   1400179a9:	int3   
   1400179aa:	int3   
   1400179ab:	int3   
   1400179ac:	int3   
   1400179ad:	int3   
   1400179ae:	int3   
   1400179af:	int3   
   1400179b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400179b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400179ba:	sub    rsp,0x28
   1400179be:	mov    rax,QWORD PTR [rsp+0x30]
   1400179c3:	add    rax,0x20
   1400179c7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400179cc:	mov    rcx,rax
   1400179cf:	call   QWORD PTR [rip+0xeecb]        # 0x1400268a0
   1400179d5:	add    rsp,0x28
   1400179d9:	ret    
   1400179da:	int3   
   1400179db:	int3   
   1400179dc:	int3   
   1400179dd:	int3   
   1400179de:	int3   
   1400179df:	int3   
   1400179e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400179e5:	sub    rsp,0x28
   1400179e9:	mov    rax,QWORD PTR [rsp+0x30]
   1400179ee:	add    rax,0x38
   1400179f2:	mov    rcx,rax
   1400179f5:	call   QWORD PTR [rip+0xf3b5]        # 0x140026db0
   1400179fb:	add    rsp,0x28
   1400179ff:	ret    
   140017a00:	int3   
   140017a01:	int3   
   140017a02:	int3   
   140017a03:	int3   
   140017a04:	int3   
   140017a05:	int3   
   140017a06:	int3   
   140017a07:	int3   
   140017a08:	int3   
   140017a09:	int3   
   140017a0a:	int3   
   140017a0b:	int3   
   140017a0c:	int3   
   140017a0d:	int3   
   140017a0e:	int3   
   140017a0f:	int3   
   140017a10:	mov    QWORD PTR [rsp+0x10],rdx
   140017a15:	mov    QWORD PTR [rsp+0x8],rcx
   140017a1a:	sub    rsp,0x28
   140017a1e:	mov    rax,QWORD PTR [rsp+0x30]
   140017a23:	add    rax,0x38
   140017a27:	mov    rdx,QWORD PTR [rsp+0x38]
   140017a2c:	mov    rcx,rax
   140017a2f:	call   QWORD PTR [rip+0xee6b]        # 0x1400268a0
   140017a35:	add    rsp,0x28
   140017a39:	ret    
   140017a3a:	int3   
   140017a3b:	int3   
   140017a3c:	int3   
   140017a3d:	int3   
   140017a3e:	int3   
   140017a3f:	int3   
   140017a40:	mov    QWORD PTR [rsp+0x8],rcx
   140017a45:	sub    rsp,0x28
   140017a49:	mov    rax,QWORD PTR [rsp+0x30]
   140017a4e:	add    rax,0x30
   140017a52:	mov    rcx,rax
   140017a55:	call   QWORD PTR [rip+0xf355]        # 0x140026db0
   140017a5b:	add    rsp,0x28
   140017a5f:	ret    
   140017a60:	int3   
   140017a61:	int3   
   140017a62:	int3   
   140017a63:	int3   
   140017a64:	int3   
   140017a65:	int3   
   140017a66:	int3   
   140017a67:	int3   
   140017a68:	int3   
   140017a69:	int3   
   140017a6a:	int3   
   140017a6b:	int3   
   140017a6c:	int3   
   140017a6d:	int3   
   140017a6e:	int3   
   140017a6f:	int3   
   140017a70:	mov    QWORD PTR [rsp+0x10],rdx
   140017a75:	mov    QWORD PTR [rsp+0x8],rcx
   140017a7a:	sub    rsp,0x28
   140017a7e:	mov    rax,QWORD PTR [rsp+0x30]
   140017a83:	add    rax,0x30
   140017a87:	mov    rdx,QWORD PTR [rsp+0x38]
   140017a8c:	mov    rcx,rax
   140017a8f:	call   QWORD PTR [rip+0xee0b]        # 0x1400268a0
   140017a95:	add    rsp,0x28
   140017a99:	ret    
   140017a9a:	int3   
   140017a9b:	int3   
   140017a9c:	int3   
   140017a9d:	int3   
   140017a9e:	int3   
   140017a9f:	int3   
   140017aa0:	mov    QWORD PTR [rsp+0x8],rcx
   140017aa5:	sub    rsp,0x28
   140017aa9:	mov    rax,QWORD PTR [rsp+0x30]
   140017aae:	add    rax,0x28
   140017ab2:	mov    rcx,rax
   140017ab5:	call   QWORD PTR [rip+0xf2f5]        # 0x140026db0
   140017abb:	add    rsp,0x28
   140017abf:	ret    
   140017ac0:	int3   
   140017ac1:	int3   
   140017ac2:	int3   
   140017ac3:	int3   
   140017ac4:	int3   
   140017ac5:	int3   
   140017ac6:	int3   
   140017ac7:	int3   
   140017ac8:	int3   
   140017ac9:	int3   
   140017aca:	int3   
   140017acb:	int3   
   140017acc:	int3   
   140017acd:	int3   
   140017ace:	int3   
   140017acf:	int3   
   140017ad0:	mov    QWORD PTR [rsp+0x10],rdx
   140017ad5:	mov    QWORD PTR [rsp+0x8],rcx
   140017ada:	sub    rsp,0x28
   140017ade:	mov    rax,QWORD PTR [rsp+0x30]
   140017ae3:	add    rax,0x28
   140017ae7:	mov    rdx,QWORD PTR [rsp+0x38]
   140017aec:	mov    rcx,rax
   140017aef:	call   QWORD PTR [rip+0xedab]        # 0x1400268a0
   140017af5:	add    rsp,0x28
   140017af9:	ret    
   140017afa:	int3   
   140017afb:	int3   
   140017afc:	int3   
   140017afd:	int3   
   140017afe:	int3   
   140017aff:	int3   
   140017b00:	mov    QWORD PTR [rsp+0x8],rcx
   140017b05:	sub    rsp,0x28
   140017b09:	mov    rax,QWORD PTR [rsp+0x30]
   140017b0e:	add    rax,0x48
   140017b12:	mov    rcx,rax
   140017b15:	call   QWORD PTR [rip+0xf295]        # 0x140026db0
   140017b1b:	add    rsp,0x28
   140017b1f:	ret    
   140017b20:	int3   
   140017b21:	int3   
   140017b22:	int3   
   140017b23:	int3   
   140017b24:	int3   
   140017b25:	int3   
   140017b26:	int3   
   140017b27:	int3   
   140017b28:	int3   
   140017b29:	int3   
   140017b2a:	int3   
   140017b2b:	int3   
   140017b2c:	int3   
   140017b2d:	int3   
   140017b2e:	int3   
   140017b2f:	int3   
   140017b30:	mov    QWORD PTR [rsp+0x10],rdx
   140017b35:	mov    QWORD PTR [rsp+0x8],rcx
   140017b3a:	sub    rsp,0x28
   140017b3e:	mov    rax,QWORD PTR [rsp+0x30]
   140017b43:	add    rax,0x48
   140017b47:	mov    rdx,QWORD PTR [rsp+0x38]
   140017b4c:	mov    rcx,rax
   140017b4f:	call   QWORD PTR [rip+0xed4b]        # 0x1400268a0
   140017b55:	add    rsp,0x28
   140017b59:	ret    
   140017b5a:	int3   
   140017b5b:	int3   
   140017b5c:	int3   
   140017b5d:	int3   
   140017b5e:	int3   
   140017b5f:	int3   
   140017b60:	mov    QWORD PTR [rsp+0x8],rcx
   140017b65:	sub    rsp,0x28
   140017b69:	mov    rax,QWORD PTR [rsp+0x30]
   140017b6e:	add    rax,0x40
   140017b72:	mov    rcx,rax
   140017b75:	call   QWORD PTR [rip+0xf235]        # 0x140026db0
   140017b7b:	add    rsp,0x28
   140017b7f:	ret    
   140017b80:	int3   
   140017b81:	int3   
   140017b82:	int3   
   140017b83:	int3   
   140017b84:	int3   
   140017b85:	int3   
   140017b86:	int3   
   140017b87:	int3   
   140017b88:	int3   
   140017b89:	int3   
   140017b8a:	int3   
   140017b8b:	int3   
   140017b8c:	int3   
   140017b8d:	int3   
   140017b8e:	int3   
   140017b8f:	int3   
   140017b90:	mov    QWORD PTR [rsp+0x10],rdx
   140017b95:	mov    QWORD PTR [rsp+0x8],rcx
   140017b9a:	sub    rsp,0x28
   140017b9e:	mov    rax,QWORD PTR [rsp+0x30]
   140017ba3:	add    rax,0x40
   140017ba7:	mov    rdx,QWORD PTR [rsp+0x38]
   140017bac:	mov    rcx,rax
   140017baf:	call   QWORD PTR [rip+0xeceb]        # 0x1400268a0
   140017bb5:	add    rsp,0x28
   140017bb9:	ret    
   140017bba:	int3   
   140017bbb:	int3   
   140017bbc:	int3   
   140017bbd:	int3   
   140017bbe:	int3   
   140017bbf:	int3   
   140017bc0:	mov    QWORD PTR [rsp+0x8],rcx
   140017bc5:	sub    rsp,0x28
   140017bc9:	mov    rax,QWORD PTR [rsp+0x30]
   140017bce:	add    rax,0x50
   140017bd2:	mov    rcx,rax
   140017bd5:	call   QWORD PTR [rip+0xf1d5]        # 0x140026db0
   140017bdb:	add    rsp,0x28
   140017bdf:	ret    
   140017be0:	int3   
   140017be1:	int3   
   140017be2:	int3   
   140017be3:	int3   
   140017be4:	int3   
   140017be5:	int3   
   140017be6:	int3   
   140017be7:	int3   
   140017be8:	int3   
   140017be9:	int3   
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	int3   
   140017bed:	int3   
   140017bee:	int3   
   140017bef:	int3   
   140017bf0:	mov    QWORD PTR [rsp+0x10],rdx
   140017bf5:	mov    QWORD PTR [rsp+0x8],rcx
   140017bfa:	sub    rsp,0x28
   140017bfe:	mov    rax,QWORD PTR [rsp+0x30]
   140017c03:	add    rax,0x50
   140017c07:	mov    rdx,QWORD PTR [rsp+0x38]
   140017c0c:	mov    rcx,rax
   140017c0f:	call   QWORD PTR [rip+0xec8b]        # 0x1400268a0
   140017c15:	add    rsp,0x28
   140017c19:	ret    
   140017c1a:	int3   
   140017c1b:	int3   
   140017c1c:	int3   
   140017c1d:	int3   
   140017c1e:	int3   
   140017c1f:	int3   
   140017c20:	mov    QWORD PTR [rsp+0x10],rdx
   140017c25:	mov    QWORD PTR [rsp+0x8],rcx
   140017c2a:	sub    rsp,0x38
   140017c2e:	mov    QWORD PTR [rsp+0x20],0x0
   140017c37:	cmp    QWORD PTR [rsp+0x40],0x0
   140017c3d:	jne    0x140017c41
   140017c3f:	jmp    0x140017c73
   140017c41:	movabs rax,0x492492492492492
   140017c4b:	cmp    QWORD PTR [rsp+0x40],rax
   140017c50:	ja     0x140017c6d
   140017c52:	imul   rax,QWORD PTR [rsp+0x40],0x38
   140017c58:	mov    rcx,rax
   140017c5b:	call   0x140020b9c
   140017c60:	mov    QWORD PTR [rsp+0x20],rax
   140017c65:	cmp    QWORD PTR [rsp+0x20],0x0
   140017c6b:	jne    0x140017c73
   140017c6d:	call   QWORD PTR [rip+0xe5c5]        # 0x140026238
   140017c73:	mov    rax,QWORD PTR [rsp+0x20]
   140017c78:	add    rsp,0x38
   140017c7c:	ret    
   140017c7d:	int3   
   140017c7e:	int3   
   140017c7f:	int3   
   140017c80:	mov    QWORD PTR [rsp+0x18],r8
   140017c85:	mov    QWORD PTR [rsp+0x10],rdx
   140017c8a:	mov    QWORD PTR [rsp+0x8],rcx
   140017c8f:	sub    rsp,0x28
   140017c93:	mov    rcx,QWORD PTR [rsp+0x40]
   140017c98:	call   0x140017e80
   140017c9d:	mov    r8,rax
   140017ca0:	mov    rdx,QWORD PTR [rsp+0x38]
   140017ca5:	mov    rcx,QWORD PTR [rsp+0x30]
   140017caa:	call   0x140017d40
   140017caf:	add    rsp,0x28
   140017cb3:	ret    
   140017cb4:	int3   
   140017cb5:	int3   
   140017cb6:	int3   
   140017cb7:	int3   
   140017cb8:	int3   
   140017cb9:	int3   
   140017cba:	int3   
   140017cbb:	int3   
   140017cbc:	int3   
   140017cbd:	int3   
   140017cbe:	int3   
   140017cbf:	int3   
   140017cc0:	mov    QWORD PTR [rsp+0x18],r8
   140017cc5:	mov    QWORD PTR [rsp+0x10],rdx
   140017cca:	mov    QWORD PTR [rsp+0x8],rcx
   140017ccf:	sub    rsp,0x48
   140017cd3:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140017cdc:	mov    rdx,QWORD PTR [rsp+0x58]
   140017ce1:	mov    ecx,0x8
   140017ce6:	call   0x140012c20
   140017ceb:	mov    QWORD PTR [rsp+0x20],rax
   140017cf0:	cmp    QWORD PTR [rsp+0x20],0x0
   140017cf6:	je     0x140017d19
   140017cf8:	mov    rcx,QWORD PTR [rsp+0x60]
   140017cfd:	call   0x140017e80
   140017d02:	mov    rcx,QWORD PTR [rsp+0x20]
   140017d07:	mov    rax,QWORD PTR [rax]
   140017d0a:	mov    QWORD PTR [rcx],rax
   140017d0d:	mov    rax,QWORD PTR [rsp+0x20]
   140017d12:	mov    QWORD PTR [rsp+0x28],rax
   140017d17:	jmp    0x140017d22
   140017d19:	mov    QWORD PTR [rsp+0x28],0x0
   140017d22:	mov    rax,QWORD PTR [rsp+0x28]
   140017d27:	mov    QWORD PTR [rsp+0x38],rax
   140017d2c:	add    rsp,0x48
   140017d30:	ret    
   140017d31:	int3   
   140017d32:	int3   
   140017d33:	int3   
   140017d34:	int3   
   140017d35:	int3   
   140017d36:	int3   
   140017d37:	int3   
   140017d38:	int3   
   140017d39:	int3   
   140017d3a:	int3   
   140017d3b:	int3   
   140017d3c:	int3   
   140017d3d:	int3   
   140017d3e:	int3   
   140017d3f:	int3   
   140017d40:	mov    QWORD PTR [rsp+0x18],r8
   140017d45:	mov    QWORD PTR [rsp+0x10],rdx
   140017d4a:	mov    QWORD PTR [rsp+0x8],rcx
   140017d4f:	sub    rsp,0x28
   140017d53:	mov    rcx,QWORD PTR [rsp+0x40]
   140017d58:	call   0x140017e80
   140017d5d:	mov    r8,rax
   140017d60:	mov    rdx,QWORD PTR [rsp+0x38]
   140017d65:	mov    rcx,QWORD PTR [rsp+0x30]
   140017d6a:	call   0x140017cc0
   140017d6f:	add    rsp,0x28
   140017d73:	ret    
   140017d74:	int3   
   140017d75:	int3   
   140017d76:	int3   
   140017d77:	int3   
   140017d78:	int3   
   140017d79:	int3   
   140017d7a:	int3   
   140017d7b:	int3   
   140017d7c:	int3   
   140017d7d:	int3   
   140017d7e:	int3   
   140017d7f:	int3   
   140017d80:	mov    QWORD PTR [rsp+0x10],rdx
   140017d85:	mov    QWORD PTR [rsp+0x8],rcx
   140017d8a:	sub    rsp,0x28
   140017d8e:	mov    rdx,QWORD PTR [rsp+0x38]
   140017d93:	mov    rcx,QWORD PTR [rsp+0x30]
   140017d98:	call   0x140017dd0
   140017d9d:	add    rsp,0x28
   140017da1:	ret    
   140017da2:	int3   
   140017da3:	int3   
   140017da4:	int3   
   140017da5:	int3   
   140017da6:	int3   
   140017da7:	int3   
   140017da8:	int3   
   140017da9:	int3   
   140017daa:	int3   
   140017dab:	int3   
   140017dac:	int3   
   140017dad:	int3   
   140017dae:	int3   
   140017daf:	int3   
   140017db0:	mov    QWORD PTR [rsp+0x10],rdx
   140017db5:	mov    QWORD PTR [rsp+0x8],rcx
   140017dba:	sub    rsp,0x28
   140017dbe:	xor    edx,edx
   140017dc0:	mov    rcx,QWORD PTR [rsp+0x38]
   140017dc5:	call   0x140017ff0
   140017dca:	add    rsp,0x28
   140017dce:	ret    
   140017dcf:	int3   
   140017dd0:	mov    QWORD PTR [rsp+0x10],rdx
   140017dd5:	mov    QWORD PTR [rsp+0x8],rcx
   140017dda:	sub    rsp,0x28
   140017dde:	mov    rdx,QWORD PTR [rsp+0x38]
   140017de3:	mov    rcx,QWORD PTR [rsp+0x30]
   140017de8:	call   0x140017db0
   140017ded:	add    rsp,0x28
   140017df1:	ret    
   140017df2:	int3   
   140017df3:	int3   
   140017df4:	int3   
   140017df5:	int3   
   140017df6:	int3   
   140017df7:	int3   
   140017df8:	int3   
   140017df9:	int3   
   140017dfa:	int3   
   140017dfb:	int3   
   140017dfc:	int3   
   140017dfd:	int3   
   140017dfe:	int3   
   140017dff:	int3   
   140017e00:	mov    QWORD PTR [rsp+0x10],rdx
   140017e05:	mov    QWORD PTR [rsp+0x8],rcx
   140017e0a:	sub    rsp,0x28
   140017e0e:	mov    rcx,QWORD PTR [rsp+0x30]
   140017e13:	call   0x14001da30
   140017e18:	mov    rcx,QWORD PTR [rsp+0x30]
   140017e1d:	call   0x140018030
   140017e22:	mov    rcx,QWORD PTR [rsp+0x30]
   140017e27:	mov    QWORD PTR [rcx],rax
   140017e2a:	mov    rax,QWORD PTR [rsp+0x30]
   140017e2f:	add    rsp,0x28
   140017e33:	ret    
   140017e34:	int3   
   140017e35:	int3   
   140017e36:	int3   
   140017e37:	int3   
   140017e38:	int3   
   140017e39:	int3   
   140017e3a:	int3   
   140017e3b:	int3   
   140017e3c:	int3   
   140017e3d:	int3   
   140017e3e:	int3   
   140017e3f:	int3   
   140017e40:	mov    QWORD PTR [rsp+0x10],rdx
   140017e45:	mov    QWORD PTR [rsp+0x8],rcx
   140017e4a:	sub    rsp,0x38
   140017e4e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017e57:	mov    rdx,QWORD PTR [rsp+0x48]
   140017e5c:	mov    rcx,QWORD PTR [rsp+0x40]
   140017e61:	call   0x140017e00
   140017e66:	nop
   140017e67:	mov    rax,QWORD PTR [rsp+0x40]
   140017e6c:	add    rsp,0x38
   140017e70:	ret    
   140017e71:	int3   
   140017e72:	int3   
   140017e73:	int3   
   140017e74:	int3   
   140017e75:	int3   
   140017e76:	int3   
   140017e77:	int3   
   140017e78:	int3   
   140017e79:	int3   
   140017e7a:	int3   
   140017e7b:	int3   
   140017e7c:	int3   
   140017e7d:	int3   
   140017e7e:	int3   
   140017e7f:	int3   
   140017e80:	mov    QWORD PTR [rsp+0x8],rcx
   140017e85:	mov    rax,QWORD PTR [rsp+0x8]
   140017e8a:	ret    
   140017e8b:	int3   
   140017e8c:	int3   
   140017e8d:	int3   
   140017e8e:	int3   
   140017e8f:	int3   
   140017e90:	mov    QWORD PTR [rsp+0x8],rcx
   140017e95:	sub    rsp,0x38
   140017e99:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140017ea2:	lea    rcx,[rsp+0x20]
   140017ea7:	call   0x140017e80
   140017eac:	mov    rdx,rax
   140017eaf:	mov    rcx,QWORD PTR [rsp+0x40]
   140017eb4:	call   0x140017e40
   140017eb9:	nop
   140017eba:	mov    rax,QWORD PTR [rsp+0x40]
   140017ebf:	add    rsp,0x38
   140017ec3:	ret    
   140017ec4:	int3   
   140017ec5:	int3   
   140017ec6:	int3   
   140017ec7:	int3   
   140017ec8:	int3   
   140017ec9:	int3   
   140017eca:	int3   
   140017ecb:	int3   
   140017ecc:	int3   
   140017ecd:	int3   
   140017ece:	int3   
   140017ecf:	int3   
   140017ed0:	mov    QWORD PTR [rsp+0x10],rdx
   140017ed5:	mov    QWORD PTR [rsp+0x8],rcx
   140017eda:	push   rsi
   140017edb:	push   rdi
   140017edc:	sub    rsp,0x38
   140017ee0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017ee9:	mov    rax,QWORD PTR [rsp+0x58]
   140017eee:	mov    rcx,QWORD PTR [rsp+0x50]
   140017ef3:	mov    rdx,rax
   140017ef6:	call   QWORD PTR [rip+0xee74]        # 0x140026d70
   140017efc:	nop
   140017efd:	mov    rax,QWORD PTR [rsp+0x58]
   140017f02:	add    rax,0x8
   140017f06:	mov    rcx,QWORD PTR [rsp+0x50]
   140017f0b:	add    rcx,0x8
   140017f0f:	mov    rdx,rax
   140017f12:	call   QWORD PTR [rip+0xee58]        # 0x140026d70
   140017f18:	nop
   140017f19:	mov    rax,QWORD PTR [rsp+0x50]
   140017f1e:	mov    rcx,QWORD PTR [rsp+0x58]
   140017f23:	mov    rcx,QWORD PTR [rcx+0x10]
   140017f27:	mov    QWORD PTR [rax+0x10],rcx
   140017f2b:	mov    rax,QWORD PTR [rsp+0x50]
   140017f30:	mov    rcx,QWORD PTR [rsp+0x58]
   140017f35:	lea    rdi,[rax+0x18]
   140017f39:	lea    rsi,[rcx+0x18]
   140017f3d:	mov    ecx,0x10
   140017f42:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f44:	mov    rax,QWORD PTR [rsp+0x50]
   140017f49:	add    rsp,0x38
   140017f4d:	pop    rdi
   140017f4e:	pop    rsi
   140017f4f:	ret    
   140017f50:	mov    QWORD PTR [rsp+0x8],rcx
   140017f55:	sub    rsp,0x38
   140017f59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017f62:	mov    rcx,QWORD PTR [rsp+0x40]
   140017f67:	call   0x14001ddc0
   140017f6c:	add    rsp,0x38
   140017f70:	ret    
   140017f71:	int3   
   140017f72:	int3   
   140017f73:	int3   
   140017f74:	int3   
   140017f75:	int3   
   140017f76:	int3   
   140017f77:	int3   
   140017f78:	int3   
   140017f79:	int3   
   140017f7a:	int3   
   140017f7b:	int3   
   140017f7c:	int3   
   140017f7d:	int3   
   140017f7e:	int3   
   140017f7f:	int3   
   140017f80:	mov    QWORD PTR [rsp+0x8],rcx
   140017f85:	sub    rsp,0x38
   140017f89:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017f92:	mov    rcx,QWORD PTR [rsp+0x40]
   140017f97:	call   0x140018220
   140017f9c:	nop
   140017f9d:	mov    rcx,QWORD PTR [rsp+0x40]
   140017fa2:	call   0x140017f50
   140017fa7:	add    rsp,0x38
   140017fab:	ret    
   140017fac:	int3   
   140017fad:	int3   
   140017fae:	int3   
   140017faf:	int3   
   140017fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140017fb5:	sub    rsp,0x38
   140017fb9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017fc2:	mov    rax,QWORD PTR [rsp+0x40]
   140017fc7:	add    rax,0x8
   140017fcb:	mov    rcx,rax
   140017fce:	call   QWORD PTR [rip+0xed8c]        # 0x140026d60
   140017fd4:	nop
   140017fd5:	mov    rax,QWORD PTR [rsp+0x40]
   140017fda:	mov    rcx,rax
   140017fdd:	call   QWORD PTR [rip+0xed7d]        # 0x140026d60
   140017fe3:	add    rsp,0x38
   140017fe7:	ret    
   140017fe8:	int3   
   140017fe9:	int3   
   140017fea:	int3   
   140017feb:	int3   
   140017fec:	int3   
   140017fed:	int3   
   140017fee:	int3   
   140017fef:	int3   
   140017ff0:	mov    DWORD PTR [rsp+0x10],edx
   140017ff4:	mov    QWORD PTR [rsp+0x8],rcx
   140017ff9:	sub    rsp,0x28
   140017ffd:	mov    rcx,QWORD PTR [rsp+0x30]
   140018002:	call   0x140017fb0
   140018007:	mov    eax,DWORD PTR [rsp+0x38]
   14001800b:	and    eax,0x1
   14001800e:	test   eax,eax
   140018010:	je     0x14001801c
   140018012:	mov    rcx,QWORD PTR [rsp+0x30]
   140018017:	call   0x140020b90
   14001801c:	mov    rax,QWORD PTR [rsp+0x30]
   140018021:	add    rsp,0x28
   140018025:	ret    
   140018026:	int3   
   140018027:	int3   
   140018028:	int3   
   140018029:	int3   
   14001802a:	int3   
   14001802b:	int3   
   14001802c:	int3   
   14001802d:	int3   
   14001802e:	int3   
   14001802f:	int3   
   140018030:	mov    QWORD PTR [rsp+0x8],rcx
   140018035:	sub    rsp,0x28
   140018039:	xor    r8d,r8d
   14001803c:	xor    edx,edx
   14001803e:	mov    rcx,QWORD PTR [rsp+0x30]
   140018043:	call   0x140018050
   140018048:	add    rsp,0x28
   14001804c:	ret    
   14001804d:	int3   
   14001804e:	int3   
   14001804f:	int3   
   140018050:	mov    QWORD PTR [rsp+0x18],r8
   140018055:	mov    QWORD PTR [rsp+0x10],rdx
   14001805a:	mov    QWORD PTR [rsp+0x8],rcx
   14001805f:	sub    rsp,0x58
   140018063:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001806c:	lea    rdx,[rsp+0x20]
   140018071:	mov    rcx,QWORD PTR [rsp+0x60]
   140018076:	call   0x14001e910
   14001807b:	mov    edx,0x1
   140018080:	mov    rcx,rax
   140018083:	call   0x140018240
   140018088:	mov    QWORD PTR [rsp+0x28],rax
   14001808d:	cmp    QWORD PTR [rsp+0x68],0x0
   140018093:	jne    0x1400180a9
   140018095:	mov    rax,QWORD PTR [rsp+0x28]
   14001809a:	mov    QWORD PTR [rsp+0x68],rax
   14001809f:	mov    rax,QWORD PTR [rsp+0x28]
   1400180a4:	mov    QWORD PTR [rsp+0x70],rax
   1400180a9:	mov    rcx,QWORD PTR [rsp+0x28]
   1400180ae:	call   0x140017e80
   1400180b3:	mov    rcx,rax
   1400180b6:	call   0x140017e80
   1400180bb:	mov    QWORD PTR [rsp+0x30],rax
   1400180c0:	lea    rdx,[rsp+0x21]
   1400180c5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400180ca:	call   0x14001e910
   1400180cf:	lea    r8,[rsp+0x68]
   1400180d4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400180d9:	mov    rdx,rcx
   1400180dc:	mov    rcx,rax
   1400180df:	call   0x140017c80
   1400180e4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400180e9:	call   0x140018210
   1400180ee:	mov    rcx,rax
   1400180f1:	call   0x140017e80
   1400180f6:	mov    QWORD PTR [rsp+0x38],rax
   1400180fb:	lea    rdx,[rsp+0x22]
   140018100:	mov    rcx,QWORD PTR [rsp+0x60]
   140018105:	call   0x14001e910
   14001810a:	lea    r8,[rsp+0x70]
   14001810f:	mov    rcx,QWORD PTR [rsp+0x38]
   140018114:	mov    rdx,rcx
   140018117:	mov    rcx,rax
   14001811a:	call   0x140017c80
   14001811f:	nop
   140018120:	jmp    0x140018122
   140018122:	mov    rax,QWORD PTR [rsp+0x28]
   140018127:	add    rsp,0x58
   14001812b:	ret    
   14001812c:	int3   
   14001812d:	int3   
   14001812e:	int3   
   14001812f:	int3   
   140018130:	mov    QWORD PTR [rsp+0x10],rdx
   140018135:	mov    QWORD PTR [rsp+0x8],rcx
   14001813a:	sub    rsp,0x48
   14001813e:	mov    rcx,QWORD PTR [rsp+0x58]
   140018143:	call   0x140017e80
   140018148:	mov    rcx,rax
   14001814b:	call   0x140017e80
   140018150:	mov    QWORD PTR [rsp+0x28],rax
   140018155:	lea    rdx,[rsp+0x20]
   14001815a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001815f:	call   0x14001e910
   140018164:	mov    rcx,QWORD PTR [rsp+0x28]
   140018169:	mov    rdx,rcx
   14001816c:	mov    rcx,rax
   14001816f:	call   0x14001d8d0
   140018174:	mov    rcx,QWORD PTR [rsp+0x58]
   140018179:	call   0x140018210
   14001817e:	mov    rcx,rax
   140018181:	call   0x140017e80
   140018186:	mov    QWORD PTR [rsp+0x30],rax
   14001818b:	lea    rdx,[rsp+0x21]
   140018190:	mov    rcx,QWORD PTR [rsp+0x50]
   140018195:	call   0x14001e910
   14001819a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001819f:	mov    rdx,rcx
   1400181a2:	mov    rcx,rax
   1400181a5:	call   0x14001d8d0
   1400181aa:	mov    rcx,QWORD PTR [rsp+0x58]
   1400181af:	call   0x1400054b0
   1400181b4:	mov    rcx,rax
   1400181b7:	call   0x140017e80
   1400181bc:	mov    QWORD PTR [rsp+0x38],rax
   1400181c1:	lea    rdx,[rsp+0x22]
   1400181c6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400181cb:	call   0x14001e910
   1400181d0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400181d5:	mov    rdx,rcx
   1400181d8:	mov    rcx,rax
   1400181db:	call   0x140017d80
   1400181e0:	lea    rdx,[rsp+0x23]
   1400181e5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400181ea:	call   0x14001e910
   1400181ef:	mov    r8d,0x1
   1400181f5:	mov    rdx,QWORD PTR [rsp+0x58]
   1400181fa:	mov    rcx,rax
   1400181fd:	call   0x14001ec00
   140018202:	add    rsp,0x48
   140018206:	ret    
   140018207:	int3   
   140018208:	int3   
   140018209:	int3   
   14001820a:	int3   
   14001820b:	int3   
   14001820c:	int3   
   14001820d:	int3   
   14001820e:	int3   
   14001820f:	int3   
   140018210:	mov    QWORD PTR [rsp+0x8],rcx
   140018215:	mov    rax,QWORD PTR [rsp+0x8]
   14001821a:	add    rax,0x8
   14001821e:	ret    
   14001821f:	int3   
   140018220:	mov    QWORD PTR [rsp+0x8],rcx
   140018225:	sub    rsp,0x28
   140018229:	mov    rcx,QWORD PTR [rsp+0x30]
   14001822e:	call   0x140018290
   140018233:	add    rsp,0x28
   140018237:	ret    
   140018238:	int3   
   140018239:	int3   
   14001823a:	int3   
   14001823b:	int3   
   14001823c:	int3   
   14001823d:	int3   
   14001823e:	int3   
   14001823f:	int3   
   140018240:	mov    QWORD PTR [rsp+0x10],rdx
   140018245:	mov    QWORD PTR [rsp+0x8],rcx
   14001824a:	sub    rsp,0x28
   14001824e:	mov    rdx,QWORD PTR [rsp+0x38]
   140018253:	mov    rcx,QWORD PTR [rsp+0x30]
   140018258:	call   0x140018270
   14001825d:	add    rsp,0x28
   140018261:	ret    
   140018262:	int3   
   140018263:	int3   
   140018264:	int3   
   140018265:	int3   
   140018266:	int3   
   140018267:	int3   
   140018268:	int3   
   140018269:	int3   
   14001826a:	int3   
   14001826b:	int3   
   14001826c:	int3   
   14001826d:	int3   
   14001826e:	int3   
   14001826f:	int3   
   140018270:	mov    QWORD PTR [rsp+0x10],rdx
   140018275:	mov    QWORD PTR [rsp+0x8],rcx
   14001827a:	sub    rsp,0x28
   14001827e:	xor    edx,edx
   140018280:	mov    rcx,QWORD PTR [rsp+0x38]
   140018285:	call   0x140017c20
   14001828a:	add    rsp,0x28
   14001828e:	ret    
   14001828f:	int3   
   140018290:	mov    QWORD PTR [rsp+0x8],rcx
   140018295:	sub    rsp,0x38
   140018299:	mov    rax,QWORD PTR [rsp+0x40]
   14001829e:	mov    rcx,QWORD PTR [rax]
   1400182a1:	call   0x140017e80
   1400182a6:	mov    rax,QWORD PTR [rax]
   1400182a9:	mov    QWORD PTR [rsp+0x20],rax
   1400182ae:	mov    rax,QWORD PTR [rsp+0x40]
   1400182b3:	mov    rcx,QWORD PTR [rax]
   1400182b6:	call   0x140017e80
   1400182bb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400182c0:	mov    rcx,QWORD PTR [rcx]
   1400182c3:	mov    QWORD PTR [rax],rcx
   1400182c6:	mov    rax,QWORD PTR [rsp+0x40]
   1400182cb:	mov    rcx,QWORD PTR [rax]
   1400182ce:	call   0x140018210
   1400182d3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400182d8:	mov    rcx,QWORD PTR [rcx]
   1400182db:	mov    QWORD PTR [rax],rcx
   1400182de:	mov    rax,QWORD PTR [rsp+0x40]
   1400182e3:	mov    QWORD PTR [rax+0x8],0x0
   1400182eb:	jmp    0x1400182f7
   1400182ed:	mov    rax,QWORD PTR [rsp+0x28]
   1400182f2:	mov    QWORD PTR [rsp+0x20],rax
   1400182f7:	mov    rax,QWORD PTR [rsp+0x40]
   1400182fc:	mov    rax,QWORD PTR [rax]
   1400182ff:	cmp    QWORD PTR [rsp+0x20],rax
   140018304:	je     0x140018329
   140018306:	mov    rcx,QWORD PTR [rsp+0x20]
   14001830b:	call   0x140017e80
   140018310:	mov    rax,QWORD PTR [rax]
   140018313:	mov    QWORD PTR [rsp+0x28],rax
   140018318:	mov    rdx,QWORD PTR [rsp+0x20]
   14001831d:	mov    rcx,QWORD PTR [rsp+0x40]
   140018322:	call   0x140018130
   140018327:	jmp    0x1400182ed
   140018329:	add    rsp,0x38
   14001832d:	ret    
   14001832e:	int3   
   14001832f:	int3   
   140018330:	mov    QWORD PTR [rsp+0x8],rcx
   140018335:	mov    rax,QWORD PTR [rsp+0x8]
   14001833a:	movzx  eax,BYTE PTR [rax+0x10]
   14001833e:	ret    
   14001833f:	int3   
   140018340:	int3   
   140018341:	int3   
   140018342:	int3   
   140018343:	int3   
   140018344:	int3   
   140018345:	int3   
   140018346:	int3   
   140018347:	int3   
   140018348:	int3   
   140018349:	int3   
   14001834a:	int3   
   14001834b:	int3   
   14001834c:	int3   
   14001834d:	int3   
   14001834e:	int3   
   14001834f:	int3   
   140018350:	mov    BYTE PTR [rsp+0x10],dl
   140018354:	mov    QWORD PTR [rsp+0x8],rcx
   140018359:	mov    rax,QWORD PTR [rsp+0x8]
   14001835e:	movzx  ecx,BYTE PTR [rsp+0x10]
   140018363:	mov    BYTE PTR [rax+0x10],cl
   140018366:	ret    
   140018367:	int3   
   140018368:	int3   
   140018369:	int3   
   14001836a:	int3   
   14001836b:	int3   
   14001836c:	int3   
   14001836d:	int3   
   14001836e:	int3   
   14001836f:	int3   
   140018370:	mov    QWORD PTR [rsp+0x10],rdx
   140018375:	mov    QWORD PTR [rsp+0x8],rcx
   14001837a:	sub    rsp,0x28
   14001837e:	mov    rax,QWORD PTR [rsp+0x30]
   140018383:	add    rax,0x20
   140018387:	mov    rdx,QWORD PTR [rsp+0x38]
   14001838c:	mov    rcx,rax
   14001838f:	call   QWORD PTR [rip+0xe50b]        # 0x1400268a0
   140018395:	add    rsp,0x28
   140018399:	ret    
   14001839a:	int3   
   14001839b:	int3   
   14001839c:	int3   
   14001839d:	int3   
   14001839e:	int3   
   14001839f:	int3   
   1400183a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400183a5:	sub    rsp,0x28
   1400183a9:	mov    rax,QWORD PTR [rsp+0x30]
   1400183ae:	add    rax,0x20
   1400183b2:	mov    rcx,rax
   1400183b5:	call   QWORD PTR [rip+0xe9f5]        # 0x140026db0
   1400183bb:	add    rsp,0x28
   1400183bf:	ret    
   1400183c0:	int3   
   1400183c1:	int3   
   1400183c2:	int3   
   1400183c3:	int3   
   1400183c4:	int3   
   1400183c5:	int3   
   1400183c6:	int3   
   1400183c7:	int3   
   1400183c8:	int3   
   1400183c9:	int3   
   1400183ca:	int3   
   1400183cb:	int3   
   1400183cc:	int3   
   1400183cd:	int3   
   1400183ce:	int3   
   1400183cf:	int3   
   1400183d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400183d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400183da:	sub    rsp,0x28
   1400183de:	mov    rax,QWORD PTR [rsp+0x30]
   1400183e3:	add    rax,0x28
   1400183e7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400183ec:	mov    rcx,rax
   1400183ef:	call   QWORD PTR [rip+0xe4ab]        # 0x1400268a0
   1400183f5:	add    rsp,0x28
   1400183f9:	ret    
   1400183fa:	int3   
   1400183fb:	int3   
   1400183fc:	int3   
   1400183fd:	int3   
   1400183fe:	int3   
   1400183ff:	int3   
   140018400:	mov    QWORD PTR [rsp+0x8],rcx
   140018405:	sub    rsp,0x28
   140018409:	mov    rax,QWORD PTR [rsp+0x30]
   14001840e:	add    rax,0x28
   140018412:	mov    rcx,rax
   140018415:	call   QWORD PTR [rip+0xe995]        # 0x140026db0
   14001841b:	add    rsp,0x28
   14001841f:	ret    
   140018420:	int3   
   140018421:	int3   
   140018422:	int3   
   140018423:	int3   
   140018424:	int3   
   140018425:	int3   
   140018426:	int3   
   140018427:	int3   
   140018428:	int3   
   140018429:	int3   
   14001842a:	int3   
   14001842b:	int3   
   14001842c:	int3   
   14001842d:	int3   
   14001842e:	int3   
   14001842f:	int3   
   140018430:	mov    QWORD PTR [rsp+0x10],rdx
   140018435:	mov    QWORD PTR [rsp+0x8],rcx
   14001843a:	sub    rsp,0x28
   14001843e:	mov    rax,QWORD PTR [rsp+0x30]
   140018443:	add    rax,0x18
   140018447:	mov    rdx,QWORD PTR [rsp+0x38]
   14001844c:	mov    rcx,rax
   14001844f:	call   QWORD PTR [rip+0xe44b]        # 0x1400268a0
   140018455:	add    rsp,0x28
   140018459:	ret    
   14001845a:	int3   
   14001845b:	int3   
   14001845c:	int3   
   14001845d:	int3   
   14001845e:	int3   
   14001845f:	int3   
   140018460:	mov    QWORD PTR [rsp+0x8],rcx
   140018465:	sub    rsp,0x28
   140018469:	mov    rax,QWORD PTR [rsp+0x30]
   14001846e:	add    rax,0x18
   140018472:	mov    rcx,rax
   140018475:	call   QWORD PTR [rip+0xe935]        # 0x140026db0
   14001847b:	add    rsp,0x28
   14001847f:	ret    
   140018480:	int3   
   140018481:	int3   
   140018482:	int3   
   140018483:	int3   
   140018484:	int3   
   140018485:	int3   
   140018486:	int3   
   140018487:	int3   
   140018488:	int3   
   140018489:	int3   
   14001848a:	int3   
   14001848b:	int3   
   14001848c:	int3   
   14001848d:	int3   
   14001848e:	int3   
   14001848f:	int3   
   140018490:	mov    QWORD PTR [rsp+0x8],rcx
   140018495:	sub    rsp,0x28
   140018499:	mov    rax,QWORD PTR [rsp+0x30]
   14001849e:	add    rax,0x30
   1400184a2:	mov    rcx,rax
   1400184a5:	call   QWORD PTR [rip+0xe905]        # 0x140026db0
   1400184ab:	add    rsp,0x28
   1400184af:	ret    
   1400184b0:	int3   
   1400184b1:	int3   
   1400184b2:	int3   
   1400184b3:	int3   
   1400184b4:	int3   
   1400184b5:	int3   
   1400184b6:	int3   
   1400184b7:	int3   
   1400184b8:	int3   
   1400184b9:	int3   
   1400184ba:	int3   
   1400184bb:	int3   
   1400184bc:	int3   
   1400184bd:	int3   
   1400184be:	int3   
   1400184bf:	int3   
   1400184c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400184c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400184ca:	sub    rsp,0x28
   1400184ce:	mov    rax,QWORD PTR [rsp+0x30]
   1400184d3:	add    rax,0x30
   1400184d7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400184dc:	mov    rcx,rax
   1400184df:	call   QWORD PTR [rip+0xe3bb]        # 0x1400268a0
   1400184e5:	add    rsp,0x28
   1400184e9:	ret    
   1400184ea:	int3   
   1400184eb:	int3   
   1400184ec:	int3   
   1400184ed:	int3   
   1400184ee:	int3   
   1400184ef:	int3   
   1400184f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400184f5:	sub    rsp,0x38
   1400184f9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018502:	mov    rax,QWORD PTR [rsp+0x40]
   140018507:	xor    edx,edx
   140018509:	mov    rcx,rax
   14001850c:	call   0x140017720
   140018511:	nop
   140018512:	mov    rax,QWORD PTR [rsp+0x40]
   140018517:	add    rax,0x58
   14001851b:	mov    rcx,rax
   14001851e:	call   0x14001dcb0
   140018523:	nop
   140018524:	mov    rax,QWORD PTR [rsp+0x40]
   140018529:	add    rax,0x90
   14001852f:	mov    rcx,rax
   140018532:	call   QWORD PTR [rip+0xe848]        # 0x140026d80
   140018538:	nop
   140018539:	mov    rax,QWORD PTR [rsp+0x40]
   14001853e:	add    rax,0x98
   140018544:	mov    rcx,rax
   140018547:	call   QWORD PTR [rip+0xe833]        # 0x140026d80
   14001854d:	nop
   14001854e:	mov    rax,QWORD PTR [rsp+0x40]
   140018553:	add    rax,0xa0
   140018559:	mov    rcx,rax
   14001855c:	call   QWORD PTR [rip+0xe81e]        # 0x140026d80
   140018562:	nop
   140018563:	mov    rax,QWORD PTR [rsp+0x40]
   140018568:	add    rax,0xb0
   14001856e:	mov    rcx,rax
   140018571:	call   0x14001f8d0
   140018576:	nop
   140018577:	mov    rax,QWORD PTR [rsp+0x40]
   14001857c:	add    rax,0xd8
   140018582:	mov    rcx,rax
   140018585:	call   QWORD PTR [rip+0xe7f5]        # 0x140026d80
   14001858b:	nop
   14001858c:	mov    rax,QWORD PTR [rsp+0x40]
   140018591:	add    rax,0xe8
   140018597:	mov    rcx,rax
   14001859a:	call   0x140014e50
   14001859f:	nop
   1400185a0:	mov    rax,QWORD PTR [rsp+0x40]
   1400185a5:	mov    DWORD PTR [rax+0xa8],0x4
   1400185af:	mov    rax,QWORD PTR [rsp+0x40]
   1400185b4:	mov    BYTE PTR [rax+0xe0],0x1
   1400185bb:	xorps  xmm1,xmm1
   1400185be:	mov    rcx,QWORD PTR [rsp+0x40]
   1400185c3:	call   0x14001c040
   1400185c8:	nop
   1400185c9:	mov    rax,QWORD PTR [rsp+0x40]
   1400185ce:	add    rsp,0x38
   1400185d2:	ret    
   1400185d3:	int3   
   1400185d4:	int3   
   1400185d5:	int3   
   1400185d6:	int3   
   1400185d7:	int3   
   1400185d8:	int3   
   1400185d9:	int3   
   1400185da:	int3   
   1400185db:	int3   
   1400185dc:	int3   
   1400185dd:	int3   
   1400185de:	int3   
   1400185df:	int3   
   1400185e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400185e5:	sub    rsp,0x38
   1400185e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400185f2:	mov    rax,QWORD PTR [rsp+0x40]
   1400185f7:	mov    rcx,rax
   1400185fa:	call   0x140018290
   1400185ff:	mov    rax,QWORD PTR [rsp+0x40]
   140018604:	add    rax,0x58
   140018608:	mov    rcx,rax
   14001860b:	call   0x14001eab0
   140018610:	nop
   140018611:	mov    rax,QWORD PTR [rsp+0x40]
   140018616:	add    rax,0xe8
   14001861c:	mov    rcx,rax
   14001861f:	call   0x140014eb0
   140018624:	nop
   140018625:	mov    rax,QWORD PTR [rsp+0x40]
   14001862a:	add    rax,0xd8
   140018630:	mov    rcx,rax
   140018633:	call   QWORD PTR [rip+0xe727]        # 0x140026d60
   140018639:	nop
   14001863a:	mov    rax,QWORD PTR [rsp+0x40]
   14001863f:	add    rax,0xb0
   140018645:	mov    rcx,rax
   140018648:	call   0x14001f930
   14001864d:	nop
   14001864e:	mov    rax,QWORD PTR [rsp+0x40]
   140018653:	add    rax,0xa0
   140018659:	mov    rcx,rax
   14001865c:	call   QWORD PTR [rip+0xe6fe]        # 0x140026d60
   140018662:	nop
   140018663:	mov    rax,QWORD PTR [rsp+0x40]
   140018668:	add    rax,0x98
   14001866e:	mov    rcx,rax
   140018671:	call   QWORD PTR [rip+0xe6e9]        # 0x140026d60
   140018677:	nop
   140018678:	mov    rax,QWORD PTR [rsp+0x40]
   14001867d:	add    rax,0x90
   140018683:	mov    rcx,rax
   140018686:	call   QWORD PTR [rip+0xe6d4]        # 0x140026d60
   14001868c:	nop
   14001868d:	mov    rax,QWORD PTR [rsp+0x40]
   140018692:	add    rax,0x58
   140018696:	mov    rcx,rax
   140018699:	call   0x14001df60
   14001869e:	nop
   14001869f:	mov    rax,QWORD PTR [rsp+0x40]
   1400186a4:	mov    rcx,rax
   1400186a7:	call   0x14001de60
   1400186ac:	add    rsp,0x38
   1400186b0:	ret    
   1400186b1:	int3   
   1400186b2:	int3   
   1400186b3:	int3   
   1400186b4:	int3   
   1400186b5:	int3   
   1400186b6:	int3   
   1400186b7:	int3   
   1400186b8:	int3   
   1400186b9:	int3   
   1400186ba:	int3   
   1400186bb:	int3   
   1400186bc:	int3   
   1400186bd:	int3   
   1400186be:	int3   
   1400186bf:	int3   
   1400186c0:	mov    QWORD PTR [rsp+0x20],r9
   1400186c5:	mov    QWORD PTR [rsp+0x18],r8
   1400186ca:	mov    QWORD PTR [rsp+0x10],rdx
   1400186cf:	mov    QWORD PTR [rsp+0x8],rcx
   1400186d4:	sub    rsp,0xaa8
   1400186db:	mov    QWORD PTR [rsp+0x960],0xfffffffffffffffe
   1400186e7:	mov    rax,QWORD PTR [rip+0x22b62]        # 0x14003b250
   1400186ee:	xor    rax,rsp
   1400186f1:	mov    QWORD PTR [rsp+0xa90],rax
   1400186f9:	mov    BYTE PTR [rsp+0x38],0x0
   1400186fe:	mov    BYTE PTR [rsp+0x20],0x0
   140018703:	mov    BYTE PTR [rsp+0x21],0x0
   140018708:	lea    rcx,[rsp+0x50]
   14001870d:	call   0x140002a80
   140018712:	nop
   140018713:	mov    r9d,0x17
   140018719:	xor    r8d,r8d
   14001871c:	lea    rdx,[rip+0x17add]        # 0x140030200
   140018723:	lea    rcx,[rsp+0x50]
   140018728:	call   0x14001e260
   14001872d:	mov    DWORD PTR [rsp+0xd8],eax
   140018734:	cmp    DWORD PTR [rsp+0xd8],0x0
   14001873c:	jl     0x14001afed
   140018742:	mov    rdx,QWORD PTR [rsp+0xab8]
   14001874a:	lea    rcx,[rsp+0xa48]
   140018752:	call   0x140008510
   140018757:	nop
   140018758:	lea    rcx,[rsp+0x50]
   14001875d:	call   0x14001e100
   140018762:	lea    rdx,[rsp+0xa48]
   14001876a:	mov    rcx,rax
   14001876d:	call   0x14001ed10
   140018772:	nop
   140018773:	lea    rcx,[rsp+0xa48]
   14001877b:	call   0x140008570
   140018780:	xor    edx,edx
   140018782:	lea    rcx,[rsp+0x30]
   140018787:	call   0x14001db00
   14001878c:	nop
   14001878d:	xor    edx,edx
   14001878f:	lea    rcx,[rsp+0x28]
   140018794:	call   0x14001db00
   140018799:	nop
   14001879a:	lea    rax,[rsp+0xa38]
   1400187a2:	mov    QWORD PTR [rsp+0x8b8],rax
   1400187aa:	lea    rdx,[rip+0x1743f]        # 0x14002fbf0
   1400187b1:	mov    rcx,QWORD PTR [rsp+0x8b8]
   1400187b9:	call   0x140012a80
   1400187be:	mov    QWORD PTR [rsp+0x860],rax
   1400187c6:	mov    rax,QWORD PTR [rsp+0x860]
   1400187ce:	mov    QWORD PTR [rsp+0x5d0],rax
   1400187d6:	lea    rcx,[rsp+0x50]
   1400187db:	call   0x14001e100
   1400187e0:	nop
   1400187e1:	mov    r8,QWORD PTR [rsp+0x5d0]
   1400187e9:	lea    rdx,[rsp+0x48]
   1400187ee:	mov    rcx,rax
   1400187f1:	call   0x14001f070
   1400187f6:	nop
   1400187f7:	xor    edx,edx
   1400187f9:	lea    rcx,[rsp+0x48]
   1400187fe:	call   0x14001e080
   140018803:	movzx  eax,al
   140018806:	test   eax,eax
   140018808:	je     0x140018e2f
   14001880e:	lea    rcx,[rsp+0x48]
   140018813:	call   0x14001e100
   140018818:	lea    rdx,[rsp+0x160]
   140018820:	mov    rcx,rax
   140018823:	call   0x14001e3d0
   140018828:	mov    QWORD PTR [rsp+0x150],rax
   140018830:	mov    rax,QWORD PTR [rsp+0x150]
   140018838:	mov    QWORD PTR [rsp+0x908],rax
   140018840:	mov    rdx,QWORD PTR [rsp+0x908]
   140018848:	lea    rcx,[rsp+0x30]
   14001884d:	call   0x14001e000
   140018852:	nop
   140018853:	lea    rcx,[rsp+0x160]
   14001885b:	call   0x14001de10
   140018860:	xor    edx,edx
   140018862:	lea    rcx,[rsp+0x30]
   140018867:	call   0x14001e080
   14001886c:	movzx  eax,al
   14001886f:	test   eax,eax
   140018871:	je     0x140018e28
   140018877:	lea    rax,[rsp+0x970]
   14001887f:	mov    QWORD PTR [rsp+0x5e0],rax
   140018887:	lea    rdx,[rip+0x17382]        # 0x14002fc10
   14001888e:	mov    rcx,QWORD PTR [rsp+0x5e0]
   140018896:	call   0x140012a80
   14001889b:	mov    QWORD PTR [rsp+0x170],rax
   1400188a3:	mov    rax,QWORD PTR [rsp+0x170]
   1400188ab:	mov    QWORD PTR [rsp+0x820],rax
   1400188b3:	lea    rcx,[rsp+0x30]
   1400188b8:	call   0x14001e100
   1400188bd:	nop
   1400188be:	mov    r8,QWORD PTR [rsp+0x820]
   1400188c6:	lea    rdx,[rsp+0x190]
   1400188ce:	mov    rcx,rax
   1400188d1:	call   0x14001ec60
   1400188d6:	mov    QWORD PTR [rsp+0x180],rax
   1400188de:	mov    rax,QWORD PTR [rsp+0x180]
   1400188e6:	mov    QWORD PTR [rsp+0x5f0],rax
   1400188ee:	mov    rdx,QWORD PTR [rsp+0x5f0]
   1400188f6:	lea    rcx,[rsp+0x28]
   1400188fb:	call   0x14001e000
   140018900:	nop
   140018901:	lea    rcx,[rsp+0x190]
   140018909:	call   0x14001de10
   14001890e:	xor    edx,edx
   140018910:	lea    rcx,[rsp+0x28]
   140018915:	call   0x14001e080
   14001891a:	movzx  eax,al
   14001891d:	test   eax,eax
   14001891f:	je     0x140018987
   140018921:	lea    rcx,[rsp+0x28]
   140018926:	call   0x14001e100
   14001892b:	lea    rdx,[rsp+0x600]
   140018933:	mov    rcx,rax
   140018936:	call   0x14001e540
   14001893b:	mov    QWORD PTR [rsp+0x918],rax
   140018943:	mov    rax,QWORD PTR [rsp+0x918]
   14001894b:	mov    QWORD PTR [rsp+0x1a0],rax
   140018953:	mov    rcx,QWORD PTR [rsp+0x1a0]
   14001895b:	call   0x140007950
   140018960:	mov    rcx,QWORD PTR [rsp+0xab0]
   140018968:	add    rcx,0xb0
   14001896f:	mov    rdx,rax
   140018972:	call   0x14001fa10
   140018977:	nop
   140018978:	lea    rcx,[rsp+0x600]
   140018980:	call   0x1400077d0
   140018985:	jmp    0x14001898c
   140018987:	mov    BYTE PTR [rsp+0x20],0x1
   14001898c:	lea    rax,[rsp+0xa20]
   140018994:	mov    QWORD PTR [rsp+0x1b0],rax
   14001899c:	lea    rdx,[rip+0x17285]        # 0x14002fc28
   1400189a3:	mov    rcx,QWORD PTR [rsp+0x1b0]
   1400189ab:	call   0x140012a80
   1400189b0:	mov    QWORD PTR [rsp+0x830],rax
   1400189b8:	mov    rax,QWORD PTR [rsp+0x830]
   1400189c0:	mov    QWORD PTR [rsp+0x1c0],rax
   1400189c8:	lea    rcx,[rsp+0x30]
   1400189cd:	call   0x14001e100
   1400189d2:	nop
   1400189d3:	mov    r8,QWORD PTR [rsp+0x1c0]
   1400189db:	lea    rdx,[rsp+0x928]
   1400189e3:	mov    rcx,rax
   1400189e6:	call   0x14001ec60
   1400189eb:	mov    QWORD PTR [rsp+0x610],rax
   1400189f3:	mov    rax,QWORD PTR [rsp+0x610]
   1400189fb:	mov    QWORD PTR [rsp+0x1d0],rax
   140018a03:	mov    rdx,QWORD PTR [rsp+0x1d0]
   140018a0b:	lea    rcx,[rsp+0x28]
   140018a10:	call   0x14001e000
   140018a15:	nop
   140018a16:	lea    rcx,[rsp+0x928]
   140018a1e:	call   0x14001de10
   140018a23:	xor    edx,edx
   140018a25:	lea    rcx,[rsp+0x28]
   140018a2a:	call   0x14001e080
   140018a2f:	movzx  eax,al
   140018a32:	test   eax,eax
   140018a34:	je     0x140018a9c
   140018a36:	lea    rcx,[rsp+0x28]
   140018a3b:	call   0x14001e100
   140018a40:	lea    rdx,[rsp+0x1f0]
   140018a48:	mov    rcx,rax
   140018a4b:	call   0x14001e540
   140018a50:	mov    QWORD PTR [rsp+0x1e0],rax
   140018a58:	mov    rax,QWORD PTR [rsp+0x1e0]
   140018a60:	mov    QWORD PTR [rsp+0x620],rax
   140018a68:	mov    rcx,QWORD PTR [rsp+0x620]
   140018a70:	call   0x140007950
   140018a75:	mov    rcx,QWORD PTR [rsp+0xab0]
   140018a7d:	add    rcx,0xb0
   140018a84:	mov    rdx,rax
   140018a87:	call   0x14001f990
   140018a8c:	nop
   140018a8d:	lea    rcx,[rsp+0x1f0]
   140018a95:	call   0x1400077d0
   140018a9a:	jmp    0x140018aa1
   140018a9c:	mov    BYTE PTR [rsp+0x20],0x1
   140018aa1:	lea    rax,[rsp+0x980]
   140018aa9:	mov    QWORD PTR [rsp+0x840],rax
   140018ab1:	lea    rdx,[rip+0x17178]        # 0x14002fc30
   140018ab8:	mov    rcx,QWORD PTR [rsp+0x840]
   140018ac0:	call   0x140012a80
   140018ac5:	mov    QWORD PTR [rsp+0x200],rax
   140018acd:	mov    rax,QWORD PTR [rsp+0x200]
   140018ad5:	mov    QWORD PTR [rsp+0x630],rax
   140018add:	lea    rcx,[rsp+0x30]
   140018ae2:	call   0x14001e100
   140018ae7:	nop
   140018ae8:	mov    r8,QWORD PTR [rsp+0x630]
   140018af0:	lea    rdx,[rsp+0x220]
   140018af8:	mov    rcx,rax
   140018afb:	call   0x14001ec60
   140018b00:	mov    QWORD PTR [rsp+0x210],rax
   140018b08:	mov    rax,QWORD PTR [rsp+0x210]
   140018b10:	mov    QWORD PTR [rsp+0x938],rax
   140018b18:	mov    rdx,QWORD PTR [rsp+0x938]
   140018b20:	lea    rcx,[rsp+0x28]
   140018b25:	call   0x14001e000
   140018b2a:	nop
   140018b2b:	lea    rcx,[rsp+0x220]
   140018b33:	call   0x14001de10
   140018b38:	xor    edx,edx
   140018b3a:	lea    rcx,[rsp+0x28]
   140018b3f:	call   0x14001e080
   140018b44:	movzx  eax,al
   140018b47:	test   eax,eax
   140018b49:	je     0x140018bb2
   140018b4b:	lea    rcx,[rsp+0x28]
   140018b50:	call   0x14001e100
   140018b55:	lea    rdx,[rsp+0x850]
   140018b5d:	mov    rcx,rax
   140018b60:	call   0x14001e540
   140018b65:	mov    QWORD PTR [rsp+0x640],rax
   140018b6d:	mov    rax,QWORD PTR [rsp+0x640]
   140018b75:	mov    QWORD PTR [rsp+0x230],rax
   140018b7d:	mov    rcx,QWORD PTR [rsp+0x230]
   140018b85:	call   0x140007950
   140018b8a:	mov    rcx,QWORD PTR [rsp+0xab0]
   140018b92:	add    rcx,0x90
   140018b99:	mov    rdx,rax
   140018b9c:	call   QWORD PTR [rip+0xdcfe]        # 0x1400268a0
   140018ba2:	nop
   140018ba3:	lea    rcx,[rsp+0x850]
   140018bab:	call   0x1400077d0
   140018bb0:	jmp    0x140018bb7
   140018bb2:	mov    BYTE PTR [rsp+0x20],0x1
   140018bb7:	lea    rax,[rsp+0x9f0]
   140018bbf:	mov    QWORD PTR [rsp+0x240],rax
   140018bc7:	lea    rdx,[rip+0x17072]        # 0x14002fc40
   140018bce:	mov    rcx,QWORD PTR [rsp+0x240]
   140018bd6:	call   0x140012a80
   140018bdb:	mov    QWORD PTR [rsp+0x650],rax
   140018be3:	mov    rax,QWORD PTR [rsp+0x650]
   140018beb:	mov    QWORD PTR [rsp+0x250],rax
   140018bf3:	lea    rcx,[rsp+0x30]
   140018bf8:	call   0x14001e100
   140018bfd:	nop
   140018bfe:	mov    r8,QWORD PTR [rsp+0x250]
   140018c06:	lea    rdx,[rsp+0x660]
   140018c0e:	mov    rcx,rax
   140018c11:	call   0x14001ec60
   140018c16:	mov    QWORD PTR [rsp+0x948],rax
   140018c1e:	mov    rax,QWORD PTR [rsp+0x948]
   140018c26:	mov    QWORD PTR [rsp+0x260],rax
   140018c2e:	mov    rdx,QWORD PTR [rsp+0x260]
   140018c36:	lea    rcx,[rsp+0x28]
   140018c3b:	call   0x14001e000
   140018c40:	nop
   140018c41:	lea    rcx,[rsp+0x660]
   140018c49:	call   0x14001de10
   140018c4e:	xor    edx,edx
   140018c50:	lea    rcx,[rsp+0x28]
   140018c55:	call   0x14001e080
   140018c5a:	movzx  eax,al
   140018c5d:	test   eax,eax
   140018c5f:	je     0x140018cc8
   140018c61:	lea    rcx,[rsp+0x28]
   140018c66:	call   0x14001e100
   140018c6b:	lea    rdx,[rsp+0x280]
   140018c73:	mov    rcx,rax
   140018c76:	call   0x14001e540
   140018c7b:	mov    QWORD PTR [rsp+0x270],rax
   140018c83:	mov    rax,QWORD PTR [rsp+0x270]
   140018c8b:	mov    QWORD PTR [rsp+0x958],rax
   140018c93:	mov    rcx,QWORD PTR [rsp+0x958]
   140018c9b:	call   0x140007950
   140018ca0:	mov    rcx,QWORD PTR [rsp+0xab0]
   140018ca8:	add    rcx,0x98
   140018caf:	mov    rdx,rax
   140018cb2:	call   QWORD PTR [rip+0xdbe8]        # 0x1400268a0
   140018cb8:	nop
   140018cb9:	lea    rcx,[rsp+0x280]
   140018cc1:	call   0x1400077d0
   140018cc6:	jmp    0x140018ccd
   140018cc8:	mov    BYTE PTR [rsp+0x20],0x1
   140018ccd:	cmp    QWORD PTR [rsp+0xac8],0x0
   140018cd6:	je     0x140018cef
   140018cd8:	mov    rcx,QWORD PTR [rsp+0xac8]
   140018ce0:	call   QWORD PTR [rip+0xd66a]        # 0x140026350
   140018ce6:	test   rax,rax
   140018ce9:	jne    0x140018e07
   140018cef:	lea    rax,[rsp+0x990]
   140018cf7:	mov    QWORD PTR [rsp+0x670],rax
   140018cff:	lea    rdx,[rip+0x16f5a]        # 0x14002fc60
   140018d06:	mov    rcx,QWORD PTR [rsp+0x670]
   140018d0e:	call   0x140012a80
   140018d13:	mov    QWORD PTR [rsp+0x290],rax
   140018d1b:	mov    rax,QWORD PTR [rsp+0x290]
   140018d23:	mov    QWORD PTR [rsp+0x8e0],rax
   140018d2b:	lea    rcx,[rsp+0x30]
   140018d30:	call   0x14001e100
   140018d35:	nop
   140018d36:	mov    r8,QWORD PTR [rsp+0x8e0]
   140018d3e:	lea    rdx,[rsp+0x2b0]
   140018d46:	mov    rcx,rax
   140018d49:	call   0x14001ec60
   140018d4e:	mov    QWORD PTR [rsp+0x2a0],rax
   140018d56:	mov    rax,QWORD PTR [rsp+0x2a0]
   140018d5e:	mov    QWORD PTR [rsp+0x680],rax
   140018d66:	mov    rdx,QWORD PTR [rsp+0x680]
   140018d6e:	lea    rcx,[rsp+0x28]
   140018d73:	call   0x14001e000
   140018d78:	nop
   140018d79:	lea    rcx,[rsp+0x2b0]
   140018d81:	call   0x14001de10
   140018d86:	xor    edx,edx
   140018d88:	lea    rcx,[rsp+0x28]
   140018d8d:	call   0x14001e080
   140018d92:	movzx  eax,al
   140018d95:	test   eax,eax
   140018d97:	je     0x140018e00
   140018d99:	lea    rcx,[rsp+0x28]
   140018d9e:	call   0x14001e100
   140018da3:	lea    rdx,[rsp+0x690]
   140018dab:	mov    rcx,rax
   140018dae:	call   0x14001e540
   140018db3:	mov    QWORD PTR [rsp+0x870],rax
   140018dbb:	mov    rax,QWORD PTR [rsp+0x870]
   140018dc3:	mov    QWORD PTR [rsp+0x2c0],rax
   140018dcb:	mov    rcx,QWORD PTR [rsp+0x2c0]
   140018dd3:	call   0x140007950
   140018dd8:	mov    rcx,QWORD PTR [rsp+0xab0]
   140018de0:	add    rcx,0xa0
   140018de7:	mov    rdx,rax
   140018dea:	call   QWORD PTR [rip+0xdab0]        # 0x1400268a0
   140018df0:	nop
   140018df1:	lea    rcx,[rsp+0x690]
   140018df9:	call   0x1400077d0
   140018dfe:	jmp    0x140018e05
   140018e00:	mov    BYTE PTR [rsp+0x20],0x1
   140018e05:	jmp    0x140018e26
   140018e07:	mov    rax,QWORD PTR [rsp+0xab0]
   140018e0f:	add    rax,0xa0
   140018e15:	mov    rdx,QWORD PTR [rsp+0xac8]
   140018e1d:	mov    rcx,rax
   140018e20:	call   QWORD PTR [rip+0xda7a]        # 0x1400268a0
   140018e26:	jmp    0x140018e2d
   140018e28:	mov    BYTE PTR [rsp+0x20],0x1
   140018e2d:	jmp    0x140018e34
   140018e2f:	mov    BYTE PTR [rsp+0x20],0x1
   140018e34:	movzx  eax,BYTE PTR [rsp+0x20]
   140018e39:	test   eax,eax
   140018e3b:	jne    0x140019dfa
   140018e41:	lea    rax,[rsp+0xa40]
   140018e49:	mov    QWORD PTR [rsp+0x2d0],rax
   140018e51:	lea    rdx,[rip+0x16e28]        # 0x14002fc80
   140018e58:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140018e60:	call   0x140012a80
   140018e65:	mov    QWORD PTR [rsp+0x920],rax
   140018e6d:	mov    rax,QWORD PTR [rsp+0x920]
   140018e75:	mov    QWORD PTR [rsp+0x2e0],rax
   140018e7d:	lea    rcx,[rsp+0x50]
   140018e82:	call   0x14001e100
   140018e87:	nop
   140018e88:	mov    r8,QWORD PTR [rsp+0x2e0]
   140018e90:	lea    rdx,[rsp+0x880]
   140018e98:	mov    rcx,rax
   140018e9b:	call   0x14001f070
   140018ea0:	mov    QWORD PTR [rsp+0x6a0],rax
   140018ea8:	mov    rax,QWORD PTR [rsp+0x6a0]
   140018eb0:	mov    QWORD PTR [rsp+0x2f0],rax
   140018eb8:	mov    rdx,QWORD PTR [rsp+0x2f0]
   140018ec0:	lea    rcx,[rsp+0x48]
   140018ec5:	call   0x14001e000
   140018eca:	nop
   140018ecb:	lea    rcx,[rsp+0x880]
   140018ed3:	call   0x14001de10
   140018ed8:	xor    edx,edx
   140018eda:	lea    rcx,[rsp+0x48]
   140018edf:	call   0x14001e080
   140018ee4:	movzx  eax,al
   140018ee7:	test   eax,eax
   140018ee9:	je     0x140019df5
   140018eef:	lea    rcx,[rsp+0x48]
   140018ef4:	call   0x14001e100
   140018ef9:	lea    rdx,[rsp+0x310]
   140018f01:	mov    rcx,rax
   140018f04:	call   0x14001e3d0
   140018f09:	mov    QWORD PTR [rsp+0x300],rax
   140018f11:	mov    rax,QWORD PTR [rsp+0x300]
   140018f19:	mov    QWORD PTR [rsp+0x6b0],rax
   140018f21:	mov    rdx,QWORD PTR [rsp+0x6b0]
   140018f29:	lea    rcx,[rsp+0x30]
   140018f2e:	call   0x14001e000
   140018f33:	nop
   140018f34:	lea    rcx,[rsp+0x310]
   140018f3c:	call   0x14001de10
   140018f41:	xor    edx,edx
   140018f43:	lea    rcx,[rsp+0x30]
   140018f48:	call   0x14001e080
   140018f4d:	movzx  eax,al
   140018f50:	test   eax,eax
   140018f52:	je     0x140019dee
   140018f58:	mov    rax,QWORD PTR [rsp+0xab0]
   140018f60:	xor    edx,edx
   140018f62:	mov    rcx,rax
   140018f65:	call   0x140017900
   140018f6a:	lea    rax,[rsp+0x9a0]
   140018f72:	mov    QWORD PTR [rsp+0x8f0],rax
   140018f7a:	lea    rdx,[rip+0x16d2f]        # 0x14002fcb0
   140018f81:	mov    rcx,QWORD PTR [rsp+0x8f0]
   140018f89:	call   0x140012a80
   140018f8e:	mov    QWORD PTR [rsp+0x320],rax
   140018f96:	mov    rax,QWORD PTR [rsp+0x320]
   140018f9e:	mov    QWORD PTR [rsp+0x6c0],rax
   140018fa6:	lea    rcx,[rsp+0x30]
   140018fab:	call   0x14001e100
   140018fb0:	nop
   140018fb1:	mov    r8,QWORD PTR [rsp+0x6c0]
   140018fb9:	lea    rdx,[rsp+0x340]
   140018fc1:	mov    rcx,rax
   140018fc4:	call   0x14001ec60
   140018fc9:	mov    QWORD PTR [rsp+0x330],rax
   140018fd1:	mov    rax,QWORD PTR [rsp+0x330]
   140018fd9:	mov    QWORD PTR [rsp+0x890],rax
   140018fe1:	mov    rdx,QWORD PTR [rsp+0x890]
   140018fe9:	lea    rcx,[rsp+0x28]
   140018fee:	call   0x14001e000
   140018ff3:	nop
   140018ff4:	lea    rcx,[rsp+0x340]
   140018ffc:	call   0x14001de10
   140019001:	xor    edx,edx
   140019003:	lea    rcx,[rsp+0x28]
   140019008:	call   0x14001e080
   14001900d:	movzx  eax,al
   140019010:	test   eax,eax
   140019012:	je     0x1400190a9
   140019018:	lea    rcx,[rsp+0x28]
   14001901d:	call   0x14001e100
   140019022:	lea    rdx,[rsp+0x940]
   14001902a:	mov    rcx,rax
   14001902d:	call   0x14001e540
   140019032:	mov    QWORD PTR [rsp+0x6d0],rax
   14001903a:	mov    rax,QWORD PTR [rsp+0x6d0]
   140019042:	mov    QWORD PTR [rsp+0x350],rax
   14001904a:	mov    rcx,QWORD PTR [rsp+0x350]
   140019052:	call   0x140007950
   140019057:	mov    rdx,rax
   14001905a:	lea    rcx,[rsp+0x108]
   140019062:	call   QWORD PTR [rip+0xdd00]        # 0x140026d68
   140019068:	nop
   140019069:	lea    rcx,[rsp+0x940]
   140019071:	call   0x1400077d0
   140019076:	lea    rdx,[rip+0x16397]        # 0x14002f414
   14001907d:	lea    rcx,[rsp+0x108]
   140019085:	call   0x14001e0c0
   14001908a:	mov    rcx,QWORD PTR [rsp+0xab0]
   140019092:	movzx  edx,al
   140019095:	call   0x140017900
   14001909a:	nop
   14001909b:	lea    rcx,[rsp+0x108]
   1400190a3:	call   QWORD PTR [rip+0xdcb7]        # 0x140026d60
   1400190a9:	lea    rax,[rsp+0xa00]
   1400190b1:	mov    QWORD PTR [rsp+0x360],rax
   1400190b9:	lea    rdx,[rip+0x16c00]        # 0x14002fcc0
   1400190c0:	mov    rcx,QWORD PTR [rsp+0x360]
   1400190c8:	call   0x140012a80
   1400190cd:	mov    QWORD PTR [rsp+0x6e0],rax
   1400190d5:	mov    rax,QWORD PTR [rsp+0x6e0]
   1400190dd:	mov    QWORD PTR [rsp+0x370],rax
   1400190e5:	lea    rcx,[rsp+0x30]
   1400190ea:	call   0x14001e100
   1400190ef:	nop
   1400190f0:	mov    r8,QWORD PTR [rsp+0x370]
   1400190f8:	lea    rdx,[rsp+0x6f0]
   140019100:	mov    rcx,rax
   140019103:	call   0x14001ec60
   140019108:	mov    QWORD PTR [rsp+0x8a0],rax
   140019110:	mov    rax,QWORD PTR [rsp+0x8a0]
   140019118:	mov    QWORD PTR [rsp+0x380],rax
   140019120:	mov    rdx,QWORD PTR [rsp+0x380]
   140019128:	lea    rcx,[rsp+0x28]
   14001912d:	call   0x14001e000
   140019132:	nop
   140019133:	lea    rcx,[rsp+0x6f0]
   14001913b:	call   0x14001de10
   140019140:	xor    edx,edx
   140019142:	lea    rcx,[rsp+0x28]
   140019147:	call   0x14001e080
   14001914c:	movzx  eax,al
   14001914f:	test   eax,eax
   140019151:	je     0x1400191b0
   140019153:	lea    rcx,[rsp+0x28]
   140019158:	call   0x14001e100
   14001915d:	lea    rdx,[rsp+0x3a0]
   140019165:	mov    rcx,rax
   140019168:	call   0x14001e540
   14001916d:	mov    QWORD PTR [rsp+0x390],rax
   140019175:	mov    rax,QWORD PTR [rsp+0x390]
   14001917d:	mov    QWORD PTR [rsp+0x900],rax
   140019185:	mov    rcx,QWORD PTR [rsp+0x900]
   14001918d:	call   0x140007950
   140019192:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001919a:	mov    rdx,rax
   14001919d:	call   0x140017920
   1400191a2:	nop
   1400191a3:	lea    rcx,[rsp+0x3a0]
   1400191ab:	call   0x1400077d0
   1400191b0:	lea    rax,[rsp+0x9b0]
   1400191b8:	mov    QWORD PTR [rsp+0x700],rax
   1400191c0:	lea    rdx,[rip+0x16b21]        # 0x14002fce8
   1400191c7:	mov    rcx,QWORD PTR [rsp+0x700]
   1400191cf:	call   0x140012a80
   1400191d4:	mov    QWORD PTR [rsp+0x3b0],rax
   1400191dc:	mov    rax,QWORD PTR [rsp+0x3b0]
   1400191e4:	mov    QWORD PTR [rsp+0x8b0],rax
   1400191ec:	lea    rcx,[rsp+0x30]
   1400191f1:	call   0x14001e100
   1400191f6:	nop
   1400191f7:	mov    r8,QWORD PTR [rsp+0x8b0]
   1400191ff:	lea    rdx,[rsp+0x3d0]
   140019207:	mov    rcx,rax
   14001920a:	call   0x14001ec60
   14001920f:	mov    QWORD PTR [rsp+0x3c0],rax
   140019217:	mov    rax,QWORD PTR [rsp+0x3c0]
   14001921f:	mov    QWORD PTR [rsp+0x710],rax
   140019227:	mov    rdx,QWORD PTR [rsp+0x710]
   14001922f:	lea    rcx,[rsp+0x28]
   140019234:	call   0x14001e000
   140019239:	nop
   14001923a:	lea    rcx,[rsp+0x3d0]
   140019242:	call   0x14001de10
   140019247:	xor    edx,edx
   140019249:	lea    rcx,[rsp+0x28]
   14001924e:	call   0x14001e080
   140019253:	movzx  eax,al
   140019256:	test   eax,eax
   140019258:	je     0x140019378
   14001925e:	lea    rcx,[rsp+0x28]
   140019263:	call   0x14001e100
   140019268:	lea    rdx,[rsp+0x720]
   140019270:	mov    rcx,rax
   140019273:	call   0x14001e540
   140019278:	mov    QWORD PTR [rsp+0x930],rax
   140019280:	mov    rax,QWORD PTR [rsp+0x930]
   140019288:	mov    QWORD PTR [rsp+0x3e0],rax
   140019290:	mov    rcx,QWORD PTR [rsp+0x3e0]
   140019298:	call   0x140007950
   14001929d:	mov    rdx,rax
   1400192a0:	lea    rcx,[rsp+0xf8]
   1400192a8:	call   QWORD PTR [rip+0xdaba]        # 0x140026d68
   1400192ae:	nop
   1400192af:	lea    rcx,[rsp+0x720]
   1400192b7:	call   0x1400077d0
   1400192bc:	lea    rcx,[rsp+0xf8]
   1400192c4:	call   QWORD PTR [rip+0xd5f6]        # 0x1400268c0
   1400192ca:	movzx  eax,al
   1400192cd:	test   eax,eax
   1400192cf:	jne    0x14001936a
   1400192d5:	mov    rdx,QWORD PTR [rsp+0xac0]
   1400192dd:	lea    rcx,[rsp+0xa8]
   1400192e5:	call   QWORD PTR [rip+0xda7d]        # 0x140026d68
   1400192eb:	nop
   1400192ec:	lea    rcx,[rsp+0xf8]
   1400192f4:	call   QWORD PTR [rip+0xdab6]        # 0x140026db0
   1400192fa:	mov    QWORD PTR [rsp+0x3f0],rax
   140019302:	mov    edx,0x104
   140019307:	lea    rcx,[rsp+0xa8]
   14001930f:	call   QWORD PTR [rip+0xda93]        # 0x140026da8
   140019315:	mov    rcx,QWORD PTR [rsp+0x3f0]
   14001931d:	mov    rdx,rcx
   140019320:	mov    rcx,rax
   140019323:	call   QWORD PTR [rip+0xd21f]        # 0x140026548
   140019329:	mov    edx,0xffffffff
   14001932e:	lea    rcx,[rsp+0xa8]
   140019336:	call   QWORD PTR [rip+0xda5c]        # 0x140026d98
   14001933c:	lea    rcx,[rsp+0xa8]
   140019344:	call   QWORD PTR [rip+0xda66]        # 0x140026db0
   14001934a:	mov    rcx,QWORD PTR [rsp+0xab0]
   140019352:	mov    rdx,rax
   140019355:	call   0x1400179b0
   14001935a:	nop
   14001935b:	lea    rcx,[rsp+0xa8]
   140019363:	call   QWORD PTR [rip+0xd9f7]        # 0x140026d60
   140019369:	nop
   14001936a:	lea    rcx,[rsp+0xf8]
   140019372:	call   QWORD PTR [rip+0xd9e8]        # 0x140026d60
   140019378:	lea    rax,[rsp+0xa30]
   140019380:	mov    QWORD PTR [rsp+0x8c0],rax
   140019388:	lea    rdx,[rip+0x16989]        # 0x14002fd18
   14001938f:	mov    rcx,QWORD PTR [rsp+0x8c0]
   140019397:	call   0x140012a80
   14001939c:	mov    QWORD PTR [rsp+0x400],rax
   1400193a4:	mov    rax,QWORD PTR [rsp+0x400]
   1400193ac:	mov    QWORD PTR [rsp+0x730],rax
   1400193b4:	lea    rcx,[rsp+0x30]
   1400193b9:	call   0x14001e100
   1400193be:	nop
   1400193bf:	mov    r8,QWORD PTR [rsp+0x730]
   1400193c7:	lea    rdx,[rsp+0x420]
   1400193cf:	mov    rcx,rax
   1400193d2:	call   0x14001ec60
   1400193d7:	mov    QWORD PTR [rsp+0x410],rax
   1400193df:	mov    rax,QWORD PTR [rsp+0x410]
   1400193e7:	mov    QWORD PTR [rsp+0x910],rax
   1400193ef:	mov    rdx,QWORD PTR [rsp+0x910]
   1400193f7:	lea    rcx,[rsp+0x28]
   1400193fc:	call   0x14001e000
   140019401:	nop
   140019402:	lea    rcx,[rsp+0x420]
   14001940a:	call   0x14001de10
   14001940f:	xor    edx,edx
   140019411:	lea    rcx,[rsp+0x28]
   140019416:	call   0x14001e080
   14001941b:	movzx  eax,al
   14001941e:	test   eax,eax
   140019420:	je     0x140019531
   140019426:	lea    rcx,[rsp+0x28]
   14001942b:	call   0x14001e100
   140019430:	lea    rdx,[rsp+0x8d0]
   140019438:	mov    rcx,rax
   14001943b:	call   0x14001e540
   140019440:	mov    QWORD PTR [rsp+0x740],rax
   140019448:	mov    rax,QWORD PTR [rsp+0x740]
   140019450:	mov    QWORD PTR [rsp+0x430],rax
   140019458:	mov    rcx,QWORD PTR [rsp+0x430]
   140019460:	call   0x140007950
   140019465:	mov    rdx,rax
   140019468:	lea    rcx,[rsp+0xb8]
   140019470:	call   QWORD PTR [rip+0xd8f2]        # 0x140026d68
   140019476:	nop
   140019477:	lea    rcx,[rsp+0x8d0]
   14001947f:	call   0x1400077d0
   140019484:	lea    rcx,[rsp+0xb8]
   14001948c:	call   QWORD PTR [rip+0xd42e]        # 0x1400268c0
   140019492:	movzx  eax,al
   140019495:	test   eax,eax
   140019497:	jne    0x140019523
   14001949d:	mov    rdx,QWORD PTR [rsp+0xac0]
   1400194a5:	lea    rcx,[rsp+0x78]
   1400194aa:	call   QWORD PTR [rip+0xd8b8]        # 0x140026d68
   1400194b0:	nop
   1400194b1:	lea    rcx,[rsp+0xb8]
   1400194b9:	call   QWORD PTR [rip+0xd8f1]        # 0x140026db0
   1400194bf:	mov    QWORD PTR [rsp+0x440],rax
   1400194c7:	mov    edx,0x104
   1400194cc:	lea    rcx,[rsp+0x78]
   1400194d1:	call   QWORD PTR [rip+0xd8d1]        # 0x140026da8
   1400194d7:	mov    rcx,QWORD PTR [rsp+0x440]
   1400194df:	mov    rdx,rcx
   1400194e2:	mov    rcx,rax
   1400194e5:	call   QWORD PTR [rip+0xd05d]        # 0x140026548
   1400194eb:	mov    edx,0xffffffff
   1400194f0:	lea    rcx,[rsp+0x78]
   1400194f5:	call   QWORD PTR [rip+0xd89d]        # 0x140026d98
   1400194fb:	lea    rcx,[rsp+0x78]
   140019500:	call   QWORD PTR [rip+0xd8aa]        # 0x140026db0
   140019506:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001950e:	mov    rdx,rax
   140019511:	call   0x140017ad0
   140019516:	nop
   140019517:	lea    rcx,[rsp+0x78]
   14001951c:	call   QWORD PTR [rip+0xd83e]        # 0x140026d60
   140019522:	nop
   140019523:	lea    rcx,[rsp+0xb8]
   14001952b:	call   QWORD PTR [rip+0xd82f]        # 0x140026d60
   140019531:	lea    rax,[rsp+0x9c0]
   140019539:	mov    QWORD PTR [rsp+0x750],rax
   140019541:	lea    rdx,[rip+0x167f8]        # 0x14002fd40
   140019548:	mov    rcx,QWORD PTR [rsp+0x750]
   140019550:	call   0x140012a80
   140019555:	mov    QWORD PTR [rsp+0x450],rax
   14001955d:	mov    rax,QWORD PTR [rsp+0x450]
   140019565:	mov    QWORD PTR [rsp+0x950],rax
   14001956d:	lea    rcx,[rsp+0x30]
   140019572:	call   0x14001e100
   140019577:	nop
   140019578:	mov    r8,QWORD PTR [rsp+0x950]
   140019580:	lea    rdx,[rsp+0x470]
   140019588:	mov    rcx,rax
   14001958b:	call   0x14001ec60
   140019590:	mov    QWORD PTR [rsp+0x460],rax
   140019598:	mov    rax,QWORD PTR [rsp+0x460]
   1400195a0:	mov    QWORD PTR [rsp+0x760],rax
   1400195a8:	mov    rdx,QWORD PTR [rsp+0x760]
   1400195b0:	lea    rcx,[rsp+0x28]
   1400195b5:	call   0x14001e000
   1400195ba:	nop
   1400195bb:	lea    rcx,[rsp+0x470]
   1400195c3:	call   0x14001de10
   1400195c8:	xor    edx,edx
   1400195ca:	lea    rcx,[rsp+0x28]
   1400195cf:	call   0x14001e080
   1400195d4:	movzx  eax,al
   1400195d7:	test   eax,eax
   1400195d9:	je     0x1400196f9
   1400195df:	lea    rcx,[rsp+0x28]
   1400195e4:	call   0x14001e100
   1400195e9:	lea    rdx,[rsp+0x770]
   1400195f1:	mov    rcx,rax
   1400195f4:	call   0x14001e540
   1400195f9:	mov    QWORD PTR [rsp+0x858],rax
   140019601:	mov    rax,QWORD PTR [rsp+0x858]
   140019609:	mov    QWORD PTR [rsp+0x480],rax
   140019611:	mov    rcx,QWORD PTR [rsp+0x480]
   140019619:	call   0x140007950
   14001961e:	mov    rdx,rax
   140019621:	lea    rcx,[rsp+0xd0]
   140019629:	call   QWORD PTR [rip+0xd739]        # 0x140026d68
   14001962f:	nop
   140019630:	lea    rcx,[rsp+0x770]
   140019638:	call   0x1400077d0
   14001963d:	lea    rcx,[rsp+0xd0]
   140019645:	call   QWORD PTR [rip+0xd275]        # 0x1400268c0
   14001964b:	movzx  eax,al
   14001964e:	test   eax,eax
   140019650:	jne    0x1400196eb
   140019656:	mov    rdx,QWORD PTR [rsp+0xac0]
   14001965e:	lea    rcx,[rsp+0x98]
   140019666:	call   QWORD PTR [rip+0xd6fc]        # 0x140026d68
   14001966c:	nop
   14001966d:	lea    rcx,[rsp+0xd0]
   140019675:	call   QWORD PTR [rip+0xd735]        # 0x140026db0
   14001967b:	mov    QWORD PTR [rsp+0x490],rax
   140019683:	mov    edx,0x104
   140019688:	lea    rcx,[rsp+0x98]
   140019690:	call   QWORD PTR [rip+0xd712]        # 0x140026da8
   140019696:	mov    rcx,QWORD PTR [rsp+0x490]
   14001969e:	mov    rdx,rcx
   1400196a1:	mov    rcx,rax
   1400196a4:	call   QWORD PTR [rip+0xce9e]        # 0x140026548
   1400196aa:	mov    edx,0xffffffff
   1400196af:	lea    rcx,[rsp+0x98]
   1400196b7:	call   QWORD PTR [rip+0xd6db]        # 0x140026d98
   1400196bd:	lea    rcx,[rsp+0x98]
   1400196c5:	call   QWORD PTR [rip+0xd6e5]        # 0x140026db0
   1400196cb:	mov    rcx,QWORD PTR [rsp+0xab0]
   1400196d3:	mov    rdx,rax
   1400196d6:	call   0x140017a70
   1400196db:	nop
   1400196dc:	lea    rcx,[rsp+0x98]
   1400196e4:	call   QWORD PTR [rip+0xd676]        # 0x140026d60
   1400196ea:	nop
   1400196eb:	lea    rcx,[rsp+0xd0]
   1400196f3:	call   QWORD PTR [rip+0xd667]        # 0x140026d60
   1400196f9:	lea    rax,[rsp+0xa10]
   140019701:	mov    QWORD PTR [rsp+0x868],rax
   140019709:	lea    rdx,[rip+0x16660]        # 0x14002fd70
   140019710:	mov    rcx,QWORD PTR [rsp+0x868]
   140019718:	call   0x140012a80
   14001971d:	mov    QWORD PTR [rsp+0x4a0],rax
   140019725:	mov    rax,QWORD PTR [rsp+0x4a0]
   14001972d:	mov    QWORD PTR [rsp+0x780],rax
   140019735:	lea    rcx,[rsp+0x30]
   14001973a:	call   0x14001e100
   14001973f:	nop
   140019740:	mov    r8,QWORD PTR [rsp+0x780]
   140019748:	lea    rdx,[rsp+0x4c0]
   140019750:	mov    rcx,rax
   140019753:	call   0x14001ec60
   140019758:	mov    QWORD PTR [rsp+0x4b0],rax
   140019760:	mov    rax,QWORD PTR [rsp+0x4b0]
   140019768:	mov    QWORD PTR [rsp+0x878],rax
   140019770:	mov    rdx,QWORD PTR [rsp+0x878]
   140019778:	lea    rcx,[rsp+0x28]
   14001977d:	call   0x14001e000
   140019782:	nop
   140019783:	lea    rcx,[rsp+0x4c0]
   14001978b:	call   0x14001de10
   140019790:	xor    edx,edx
   140019792:	lea    rcx,[rsp+0x28]
   140019797:	call   0x14001e080
   14001979c:	movzx  eax,al
   14001979f:	test   eax,eax
   1400197a1:	je     0x1400198c1
   1400197a7:	lea    rcx,[rsp+0x28]
   1400197ac:	call   0x14001e100
   1400197b1:	lea    rdx,[rsp+0x888]
   1400197b9:	mov    rcx,rax
   1400197bc:	call   0x14001e540
   1400197c1:	mov    QWORD PTR [rsp+0x790],rax
   1400197c9:	mov    rax,QWORD PTR [rsp+0x790]
   1400197d1:	mov    QWORD PTR [rsp+0x4d0],rax
   1400197d9:	mov    rcx,QWORD PTR [rsp+0x4d0]
   1400197e1:	call   0x140007950
   1400197e6:	mov    rdx,rax
   1400197e9:	lea    rcx,[rsp+0xf0]
   1400197f1:	call   QWORD PTR [rip+0xd571]        # 0x140026d68
   1400197f7:	nop
   1400197f8:	lea    rcx,[rsp+0x888]
   140019800:	call   0x1400077d0
   140019805:	lea    rcx,[rsp+0xf0]
   14001980d:	call   QWORD PTR [rip+0xd0ad]        # 0x1400268c0
   140019813:	movzx  eax,al
   140019816:	test   eax,eax
   140019818:	jne    0x1400198b3
   14001981e:	mov    rdx,QWORD PTR [rsp+0xac0]
   140019826:	lea    rcx,[rsp+0x88]
   14001982e:	call   QWORD PTR [rip+0xd534]        # 0x140026d68
   140019834:	nop
   140019835:	lea    rcx,[rsp+0xf0]
   14001983d:	call   QWORD PTR [rip+0xd56d]        # 0x140026db0
   140019843:	mov    QWORD PTR [rsp+0x4e0],rax
   14001984b:	mov    edx,0x104
   140019850:	lea    rcx,[rsp+0x88]
   140019858:	call   QWORD PTR [rip+0xd54a]        # 0x140026da8
   14001985e:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140019866:	mov    rdx,rcx
   140019869:	mov    rcx,rax
   14001986c:	call   QWORD PTR [rip+0xccd6]        # 0x140026548
   140019872:	mov    edx,0xffffffff
   140019877:	lea    rcx,[rsp+0x88]
   14001987f:	call   QWORD PTR [rip+0xd513]        # 0x140026d98
   140019885:	lea    rcx,[rsp+0x88]
   14001988d:	call   QWORD PTR [rip+0xd51d]        # 0x140026db0
   140019893:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001989b:	mov    rdx,rax
   14001989e:	call   0x140017a10
   1400198a3:	nop
   1400198a4:	lea    rcx,[rsp+0x88]
   1400198ac:	call   QWORD PTR [rip+0xd4ae]        # 0x140026d60
   1400198b2:	nop
   1400198b3:	lea    rcx,[rsp+0xf0]
   1400198bb:	call   QWORD PTR [rip+0xd49f]        # 0x140026d60
   1400198c1:	lea    rax,[rsp+0x9d0]
   1400198c9:	mov    QWORD PTR [rsp+0x7a0],rax
   1400198d1:	lea    rdx,[rip+0x164c0]        # 0x14002fd98
   1400198d8:	mov    rcx,QWORD PTR [rsp+0x7a0]
   1400198e0:	call   0x140012a80
   1400198e5:	mov    QWORD PTR [rsp+0x4f0],rax
   1400198ed:	mov    rax,QWORD PTR [rsp+0x4f0]
   1400198f5:	mov    QWORD PTR [rsp+0x898],rax
   1400198fd:	lea    rcx,[rsp+0x30]
   140019902:	call   0x14001e100
   140019907:	nop
   140019908:	mov    r8,QWORD PTR [rsp+0x898]
   140019910:	lea    rdx,[rsp+0x510]
   140019918:	mov    rcx,rax
   14001991b:	call   0x14001ec60
   140019920:	mov    QWORD PTR [rsp+0x500],rax
   140019928:	mov    rax,QWORD PTR [rsp+0x500]
   140019930:	mov    QWORD PTR [rsp+0x7b0],rax
   140019938:	mov    rdx,QWORD PTR [rsp+0x7b0]
   140019940:	lea    rcx,[rsp+0x28]
   140019945:	call   0x14001e000
   14001994a:	nop
   14001994b:	lea    rcx,[rsp+0x510]
   140019953:	call   0x14001de10
   140019958:	xor    edx,edx
   14001995a:	lea    rcx,[rsp+0x28]
   14001995f:	call   0x14001e080
   140019964:	movzx  eax,al
   140019967:	test   eax,eax
   140019969:	je     0x140019a7a
   14001996f:	lea    rcx,[rsp+0x28]
   140019974:	call   0x14001e100
   140019979:	lea    rdx,[rsp+0x7c0]
   140019981:	mov    rcx,rax
   140019984:	call   0x14001e540
   140019989:	mov    QWORD PTR [rsp+0x8a8],rax
   140019991:	mov    rax,QWORD PTR [rsp+0x8a8]
   140019999:	mov    QWORD PTR [rsp+0x520],rax
   1400199a1:	mov    rcx,QWORD PTR [rsp+0x520]
   1400199a9:	call   0x140007950
   1400199ae:	mov    rdx,rax
   1400199b1:	lea    rcx,[rsp+0xe8]
   1400199b9:	call   QWORD PTR [rip+0xd3a9]        # 0x140026d68
   1400199bf:	nop
   1400199c0:	lea    rcx,[rsp+0x7c0]
   1400199c8:	call   0x1400077d0
   1400199cd:	lea    rcx,[rsp+0xe8]
   1400199d5:	call   QWORD PTR [rip+0xcee5]        # 0x1400268c0
   1400199db:	movzx  eax,al
   1400199de:	test   eax,eax
   1400199e0:	jne    0x140019a6c
   1400199e6:	mov    rdx,QWORD PTR [rsp+0xac0]
   1400199ee:	lea    rcx,[rsp+0x68]
   1400199f3:	call   QWORD PTR [rip+0xd36f]        # 0x140026d68
   1400199f9:	nop
   1400199fa:	lea    rcx,[rsp+0xe8]
   140019a02:	call   QWORD PTR [rip+0xd3a8]        # 0x140026db0
   140019a08:	mov    QWORD PTR [rsp+0x530],rax
   140019a10:	mov    edx,0x104
   140019a15:	lea    rcx,[rsp+0x68]
   140019a1a:	call   QWORD PTR [rip+0xd388]        # 0x140026da8
   140019a20:	mov    rcx,QWORD PTR [rsp+0x530]
   140019a28:	mov    rdx,rcx
   140019a2b:	mov    rcx,rax
   140019a2e:	call   QWORD PTR [rip+0xcb14]        # 0x140026548
   140019a34:	mov    edx,0xffffffff
   140019a39:	lea    rcx,[rsp+0x68]
   140019a3e:	call   QWORD PTR [rip+0xd354]        # 0x140026d98
   140019a44:	lea    rcx,[rsp+0x68]
   140019a49:	call   QWORD PTR [rip+0xd361]        # 0x140026db0
   140019a4f:	mov    rcx,QWORD PTR [rsp+0xab0]
   140019a57:	mov    rdx,rax
   140019a5a:	call   0x140017b90
   140019a5f:	nop
   140019a60:	lea    rcx,[rsp+0x68]
   140019a65:	call   QWORD PTR [rip+0xd2f5]        # 0x140026d60
   140019a6b:	nop
   140019a6c:	lea    rcx,[rsp+0xe8]
   140019a74:	call   QWORD PTR [rip+0xd2e6]        # 0x140026d60
   140019a7a:	lea    rax,[rsp+0xa60]
   140019a82:	mov    QWORD PTR [rsp+0x138],rax
   140019a8a:	lea    rdx,[rip+0x1632f]        # 0x14002fdc0
   140019a91:	mov    rcx,QWORD PTR [rsp+0x138]
   140019a99:	call   0x140012a80
   140019a9e:	mov    QWORD PTR [rsp+0x540],rax
   140019aa6:	mov    rax,QWORD PTR [rsp+0x540]
   140019aae:	mov    QWORD PTR [rsp+0x7d0],rax
   140019ab6:	lea    rcx,[rsp+0x30]
   140019abb:	call   0x14001e100
   140019ac0:	nop
   140019ac1:	mov    r8,QWORD PTR [rsp+0x7d0]
   140019ac9:	lea    rdx,[rsp+0x560]
   140019ad1:	mov    rcx,rax
   140019ad4:	call   0x14001ec60
   140019ad9:	mov    QWORD PTR [rsp+0x550],rax
   140019ae1:	mov    rax,QWORD PTR [rsp+0x550]
   140019ae9:	mov    QWORD PTR [rsp+0x8c8],rax
   140019af1:	mov    rdx,QWORD PTR [rsp+0x8c8]
   140019af9:	lea    rcx,[rsp+0x28]
   140019afe:	call   0x14001e000
   140019b03:	nop
   140019b04:	lea    rcx,[rsp+0x560]
   140019b0c:	call   0x14001de10
   140019b11:	xor    edx,edx
   140019b13:	lea    rcx,[rsp+0x28]
   140019b18:	call   0x14001e080
   140019b1d:	movzx  eax,al
   140019b20:	test   eax,eax
   140019b22:	je     0x140019c33
   140019b28:	lea    rcx,[rsp+0x28]
   140019b2d:	call   0x14001e100
   140019b32:	lea    rdx,[rsp+0x8d8]
   140019b3a:	mov    rcx,rax
   140019b3d:	call   0x14001e540
   140019b42:	mov    QWORD PTR [rsp+0x7e0],rax
   140019b4a:	mov    rax,QWORD PTR [rsp+0x7e0]
   140019b52:	mov    QWORD PTR [rsp+0x570],rax
   140019b5a:	mov    rcx,QWORD PTR [rsp+0x570]
   140019b62:	call   0x140007950
   140019b67:	mov    rdx,rax
   140019b6a:	lea    rcx,[rsp+0x100]
   140019b72:	call   QWORD PTR [rip+0xd1f0]        # 0x140026d68
   140019b78:	nop
   140019b79:	lea    rcx,[rsp+0x8d8]
   140019b81:	call   0x1400077d0
   140019b86:	lea    rcx,[rsp+0x100]
   140019b8e:	call   QWORD PTR [rip+0xcd2c]        # 0x1400268c0
   140019b94:	movzx  eax,al
   140019b97:	test   eax,eax
   140019b99:	jne    0x140019c25
   140019b9f:	mov    rdx,QWORD PTR [rsp+0xac0]
   140019ba7:	lea    rcx,[rsp+0x60]
   140019bac:	call   QWORD PTR [rip+0xd1b6]        # 0x140026d68
   140019bb2:	nop
   140019bb3:	lea    rcx,[rsp+0x100]
   140019bbb:	call   QWORD PTR [rip+0xd1ef]        # 0x140026db0
   140019bc1:	mov    QWORD PTR [rsp+0x580],rax
   140019bc9:	mov    edx,0x104
   140019bce:	lea    rcx,[rsp+0x60]
   140019bd3:	call   QWORD PTR [rip+0xd1cf]        # 0x140026da8
   140019bd9:	mov    rcx,QWORD PTR [rsp+0x580]
   140019be1:	mov    rdx,rcx
   140019be4:	mov    rcx,rax
   140019be7:	call   QWORD PTR [rip+0xc95b]        # 0x140026548
   140019bed:	mov    edx,0xffffffff
   140019bf2:	lea    rcx,[rsp+0x60]
   140019bf7:	call   QWORD PTR [rip+0xd19b]        # 0x140026d98
   140019bfd:	lea    rcx,[rsp+0x60]
   140019c02:	call   QWORD PTR [rip+0xd1a8]        # 0x140026db0
   140019c08:	mov    rcx,QWORD PTR [rsp+0xab0]
   140019c10:	mov    rdx,rax
   140019c13:	call   0x140017b30
   140019c18:	nop
   140019c19:	lea    rcx,[rsp+0x60]
   140019c1e:	call   QWORD PTR [rip+0xd13c]        # 0x140026d60
   140019c24:	nop
   140019c25:	lea    rcx,[rsp+0x100]
   140019c2d:	call   QWORD PTR [rip+0xd12d]        # 0x140026d60
   140019c33:	lea    rax,[rsp+0x9e0]
   140019c3b:	mov    QWORD PTR [rsp+0x7f0],rax
   140019c43:	lea    rdx,[rip+0x1619e]        # 0x14002fde8
   140019c4a:	mov    rcx,QWORD PTR [rsp+0x7f0]
   140019c52:	call   0x140012a80
   140019c57:	mov    QWORD PTR [rsp+0x590],rax
   140019c5f:	mov    rax,QWORD PTR [rsp+0x590]
   140019c67:	mov    QWORD PTR [rsp+0x8e8],rax
   140019c6f:	lea    rcx,[rsp+0x30]
   140019c74:	call   0x14001e100
   140019c79:	nop
   140019c7a:	mov    r8,QWORD PTR [rsp+0x8e8]
   140019c82:	lea    rdx,[rsp+0x5b0]
   140019c8a:	mov    rcx,rax
   140019c8d:	call   0x14001ec60
   140019c92:	mov    QWORD PTR [rsp+0x5a0],rax
   140019c9a:	mov    rax,QWORD PTR [rsp+0x5a0]
   140019ca2:	mov    QWORD PTR [rsp+0x800],rax
   140019caa:	mov    rdx,QWORD PTR [rsp+0x800]
   140019cb2:	lea    rcx,[rsp+0x28]
   140019cb7:	call   0x14001e000
   140019cbc:	nop
   140019cbd:	lea    rcx,[rsp+0x5b0]
   140019cc5:	call   0x14001de10
   140019cca:	xor    edx,edx
   140019ccc:	lea    rcx,[rsp+0x28]
   140019cd1:	call   0x14001e080
   140019cd6:	movzx  eax,al
   140019cd9:	test   eax,eax
   140019cdb:	je     0x140019dec
   140019ce1:	lea    rcx,[rsp+0x28]
   140019ce6:	call   0x14001e100
   140019ceb:	lea    rdx,[rsp+0x810]
   140019cf3:	mov    rcx,rax
   140019cf6:	call   0x14001e540
   140019cfb:	mov    QWORD PTR [rsp+0x8f8],rax
   140019d03:	mov    rax,QWORD PTR [rsp+0x8f8]
   140019d0b:	mov    QWORD PTR [rsp+0x5c0],rax
   140019d13:	mov    rcx,QWORD PTR [rsp+0x5c0]
   140019d1b:	call   0x140007950
   140019d20:	mov    rdx,rax
   140019d23:	lea    rcx,[rsp+0xc0]
   140019d2b:	call   QWORD PTR [rip+0xd037]        # 0x140026d68
   140019d31:	nop
   140019d32:	lea    rcx,[rsp+0x810]
   140019d3a:	call   0x1400077d0
   140019d3f:	lea    rcx,[rsp+0xc0]
   140019d47:	call   QWORD PTR [rip+0xcb73]        # 0x1400268c0
   140019d4d:	movzx  eax,al
   140019d50:	test   eax,eax
   140019d52:	jne    0x140019dde
   140019d58:	mov    rdx,QWORD PTR [rsp+0xac0]
   140019d60:	lea    rcx,[rsp+0x70]
   140019d65:	call   QWORD PTR [rip+0xcffd]        # 0x140026d68
   140019d6b:	nop
   140019d6c:	lea    rcx,[rsp+0xc0]
   140019d74:	call   QWORD PTR [rip+0xd036]        # 0x140026db0
   140019d7a:	mov    QWORD PTR [rsp+0x140],rax
   140019d82:	mov    edx,0x104
   140019d87:	lea    rcx,[rsp+0x70]
   140019d8c:	call   QWORD PTR [rip+0xd016]        # 0x140026da8
   140019d92:	mov    rcx,QWORD PTR [rsp+0x140]
   140019d9a:	mov    rdx,rcx
   140019d9d:	mov    rcx,rax
   140019da0:	call   QWORD PTR [rip+0xc7a2]        # 0x140026548
   140019da6:	mov    edx,0xffffffff
   140019dab:	lea    rcx,[rsp+0x70]
   140019db0:	call   QWORD PTR [rip+0xcfe2]        # 0x140026d98
   140019db6:	lea    rcx,[rsp+0x70]
   140019dbb:	call   QWORD PTR [rip+0xcfef]        # 0x140026db0
   140019dc1:	mov    rcx,QWORD PTR [rsp+0xab0]
   140019dc9:	mov    rdx,rax
   140019dcc:	call   0x140017bf0
   140019dd1:	nop
   140019dd2:	lea    rcx,[rsp+0x70]
   140019dd7:	call   QWORD PTR [rip+0xcf83]        # 0x140026d60
   140019ddd:	nop
   140019dde:	lea    rcx,[rsp+0xc0]
   140019de6:	call   QWORD PTR [rip+0xcf74]        # 0x140026d60
   140019dec:	jmp    0x140019df3
   140019dee:	mov    BYTE PTR [rsp+0x20],0x1
   140019df3:	jmp    0x140019dfa
   140019df5:	mov    BYTE PTR [rsp+0x20],0x1
   140019dfa:	movzx  eax,BYTE PTR [rsp+0x20]
   140019dff:	test   eax,eax
   140019e01:	jne    0x14001a387
   140019e07:	lea    rax,[rsp+0x968]
   140019e0f:	mov    QWORD PTR [rsp+0x148],rax
   140019e17:	lea    rdx,[rip+0x16002]        # 0x14002fe20
   140019e1e:	mov    rcx,QWORD PTR [rsp+0x148]
   140019e26:	call   0x140012a80
   140019e2b:	mov    QWORD PTR [rsp+0x158],rax
   140019e33:	mov    rax,QWORD PTR [rsp+0x158]
   140019e3b:	mov    QWORD PTR [rsp+0x168],rax
   140019e43:	lea    rcx,[rsp+0x50]
   140019e48:	call   0x14001e100
   140019e4d:	nop
   140019e4e:	mov    r8,QWORD PTR [rsp+0x168]
   140019e56:	lea    rdx,[rsp+0x90]
   140019e5e:	mov    rcx,rax
   140019e61:	call   0x14001efc0
   140019e66:	nop
   140019e67:	xor    edx,edx
   140019e69:	lea    rcx,[rsp+0x90]
   140019e71:	call   0x14001e080
   140019e76:	movzx  eax,al
   140019e79:	test   eax,eax
   140019e7b:	je     0x14001a375
   140019e81:	mov    DWORD PTR [rsp+0x5c],0x0
   140019e89:	lea    rcx,[rsp+0x90]
   140019e91:	call   0x14001e100
   140019e96:	mov    QWORD PTR [rsp+0x118],rax
   140019e9e:	mov    rax,QWORD PTR [rsp+0x118]
   140019ea6:	mov    rax,QWORD PTR [rax]
   140019ea9:	lea    rdx,[rsp+0x5c]
   140019eae:	mov    rcx,QWORD PTR [rsp+0x118]
   140019eb6:	call   QWORD PTR [rax+0x40]
   140019eb9:	mov    DWORD PTR [rsp+0x40],0x0
   140019ec1:	mov    DWORD PTR [rsp+0x40],0x0
   140019ec9:	jmp    0x140019ed5
   140019ecb:	mov    eax,DWORD PTR [rsp+0x40]
   140019ecf:	inc    eax
   140019ed1:	mov    DWORD PTR [rsp+0x40],eax
   140019ed5:	mov    eax,DWORD PTR [rsp+0x5c]
   140019ed9:	cmp    DWORD PTR [rsp+0x40],eax
   140019edd:	jge    0x14001a373
   140019ee3:	lea    rcx,[rsp+0xa68]
   140019eeb:	call   0x14001f1b0
   140019ef0:	nop
   140019ef1:	lea    rcx,[rsp+0x80]
   140019ef9:	call   QWORD PTR [rip+0xce81]        # 0x140026d80
   140019eff:	nop
   140019f00:	lea    rcx,[rsp+0x90]
   140019f08:	call   0x14001e100
   140019f0d:	mov    r8d,DWORD PTR [rsp+0x40]
   140019f12:	lea    rdx,[rsp+0xc8]
   140019f1a:	mov    rcx,rax
   140019f1d:	call   0x14001e460
   140019f22:	nop
   140019f23:	xor    edx,edx
   140019f25:	lea    rcx,[rsp+0xc8]
   140019f2d:	call   0x14001e080
   140019f32:	movzx  eax,al
   140019f35:	test   eax,eax
   140019f37:	je     0x14001a31d
   140019f3d:	lea    rcx,[rsp+0xc8]
   140019f45:	call   0x14001e100
   140019f4a:	lea    rdx,[rsp+0x198]
   140019f52:	mov    rcx,rax
   140019f55:	call   0x14001e3d0
   140019f5a:	mov    QWORD PTR [rsp+0x178],rax
   140019f62:	mov    rax,QWORD PTR [rsp+0x178]
   140019f6a:	mov    QWORD PTR [rsp+0x188],rax
   140019f72:	mov    rdx,QWORD PTR [rsp+0x188]
   140019f7a:	lea    rcx,[rsp+0x30]
   140019f7f:	call   0x14001e000
   140019f84:	nop
   140019f85:	lea    rcx,[rsp+0x198]
   140019f8d:	call   0x14001de10
   140019f92:	xor    edx,edx
   140019f94:	lea    rcx,[rsp+0x30]
   140019f99:	call   0x14001e080
   140019f9e:	movzx  eax,al
   140019fa1:	test   eax,eax
   140019fa3:	je     0x14001a316
   140019fa9:	lea    rax,[rsp+0x978]
   140019fb1:	mov    QWORD PTR [rsp+0x1a8],rax
   140019fb9:	lea    rdx,[rip+0x15ea0]        # 0x14002fe60
   140019fc0:	mov    rcx,QWORD PTR [rsp+0x1a8]
   140019fc8:	call   0x140012a80
   140019fcd:	mov    QWORD PTR [rsp+0x1b8],rax
   140019fd5:	mov    rax,QWORD PTR [rsp+0x1b8]
   140019fdd:	mov    QWORD PTR [rsp+0x1c8],rax
   140019fe5:	lea    rcx,[rsp+0x30]
   140019fea:	call   0x14001e100
   140019fef:	nop
   140019ff0:	mov    r8,QWORD PTR [rsp+0x1c8]
   140019ff8:	lea    rdx,[rsp+0x1f8]
   14001a000:	mov    rcx,rax
   14001a003:	call   0x14001ec60
   14001a008:	mov    QWORD PTR [rsp+0x1d8],rax
   14001a010:	mov    rax,QWORD PTR [rsp+0x1d8]
   14001a018:	mov    QWORD PTR [rsp+0x1e8],rax
   14001a020:	mov    rdx,QWORD PTR [rsp+0x1e8]
   14001a028:	lea    rcx,[rsp+0x28]
   14001a02d:	call   0x14001e000
   14001a032:	nop
   14001a033:	lea    rcx,[rsp+0x1f8]
   14001a03b:	call   0x14001de10
   14001a040:	xor    edx,edx
   14001a042:	lea    rcx,[rsp+0x28]
   14001a047:	call   0x14001e080
   14001a04c:	movzx  eax,al
   14001a04f:	test   eax,eax
   14001a051:	je     0x14001a0b2
   14001a053:	lea    rcx,[rsp+0x28]
   14001a058:	call   0x14001e100
   14001a05d:	lea    rdx,[rsp+0x228]
   14001a065:	mov    rcx,rax
   14001a068:	call   0x14001e540
   14001a06d:	mov    QWORD PTR [rsp+0x208],rax
   14001a075:	mov    rax,QWORD PTR [rsp+0x208]
   14001a07d:	mov    QWORD PTR [rsp+0x218],rax
   14001a085:	mov    rcx,QWORD PTR [rsp+0x218]
   14001a08d:	call   0x140007950
   14001a092:	mov    rdx,rax
   14001a095:	lea    rcx,[rsp+0xa68]
   14001a09d:	call   0x14001f5d0
   14001a0a2:	nop
   14001a0a3:	lea    rcx,[rsp+0x228]
   14001a0ab:	call   0x1400077d0
   14001a0b0:	jmp    0x14001a0b7
   14001a0b2:	mov    BYTE PTR [rsp+0x20],0x1
   14001a0b7:	lea    rax,[rsp+0x988]
   14001a0bf:	mov    QWORD PTR [rsp+0x238],rax
   14001a0c7:	lea    rdx,[rip+0x15d9a]        # 0x14002fe68
   14001a0ce:	mov    rcx,QWORD PTR [rsp+0x238]
   14001a0d6:	call   0x140012a80
   14001a0db:	mov    QWORD PTR [rsp+0x248],rax
   14001a0e3:	mov    rax,QWORD PTR [rsp+0x248]
   14001a0eb:	mov    QWORD PTR [rsp+0x258],rax
   14001a0f3:	lea    rcx,[rsp+0x30]
   14001a0f8:	call   0x14001e100
   14001a0fd:	nop
   14001a0fe:	mov    r8,QWORD PTR [rsp+0x258]
   14001a106:	lea    rdx,[rsp+0x288]
   14001a10e:	mov    rcx,rax
   14001a111:	call   0x14001ec60
   14001a116:	mov    QWORD PTR [rsp+0x268],rax
   14001a11e:	mov    rax,QWORD PTR [rsp+0x268]
   14001a126:	mov    QWORD PTR [rsp+0x278],rax
   14001a12e:	mov    rdx,QWORD PTR [rsp+0x278]
   14001a136:	lea    rcx,[rsp+0x28]
   14001a13b:	call   0x14001e000
   14001a140:	nop
   14001a141:	lea    rcx,[rsp+0x288]
   14001a149:	call   0x14001de10
   14001a14e:	xor    edx,edx
   14001a150:	lea    rcx,[rsp+0x28]
   14001a155:	call   0x14001e080
   14001a15a:	movzx  eax,al
   14001a15d:	test   eax,eax
   14001a15f:	je     0x14001a208
   14001a165:	lea    rcx,[rsp+0x28]
   14001a16a:	call   0x14001e100
   14001a16f:	lea    rdx,[rsp+0x2b8]
   14001a177:	mov    rcx,rax
   14001a17a:	call   0x14001e540
   14001a17f:	mov    QWORD PTR [rsp+0x298],rax
   14001a187:	mov    rax,QWORD PTR [rsp+0x298]
   14001a18f:	mov    QWORD PTR [rsp+0x2a8],rax
   14001a197:	mov    rcx,QWORD PTR [rsp+0x2a8]
   14001a19f:	call   0x140007950
   14001a1a4:	mov    rdx,rax
   14001a1a7:	lea    rcx,[rsp+0x80]
   14001a1af:	call   QWORD PTR [rip+0xc6eb]        # 0x1400268a0
   14001a1b5:	nop
   14001a1b6:	lea    rcx,[rsp+0x2b8]
   14001a1be:	call   0x1400077d0
   14001a1c3:	lea    rcx,[rsp+0x80]
   14001a1cb:	call   QWORD PTR [rip+0xc6ef]        # 0x1400268c0
   14001a1d1:	movzx  eax,al
   14001a1d4:	test   eax,eax
   14001a1d6:	jne    0x14001a201
   14001a1d8:	lea    rcx,[rsp+0x80]
   14001a1e0:	call   QWORD PTR [rip+0xcbca]        # 0x140026db0
   14001a1e6:	mov    rcx,rax
   14001a1e9:	call   QWORD PTR [rip+0xc1b9]        # 0x1400263a8
   14001a1ef:	mov    rdx,rax
   14001a1f2:	lea    rcx,[rsp+0xa68]
   14001a1fa:	call   0x14001f630
   14001a1ff:	jmp    0x14001a206
   14001a201:	mov    BYTE PTR [rsp+0x20],0x1
   14001a206:	jmp    0x14001a20d
   14001a208:	mov    BYTE PTR [rsp+0x20],0x1
   14001a20d:	lea    rax,[rsp+0x998]
   14001a215:	mov    QWORD PTR [rsp+0x2c8],rax
   14001a21d:	lea    rdx,[rip+0x15c54]        # 0x14002fe78
   14001a224:	mov    rcx,QWORD PTR [rsp+0x2c8]
   14001a22c:	call   0x140012a80
   14001a231:	mov    QWORD PTR [rsp+0x2d8],rax
   14001a239:	mov    rax,QWORD PTR [rsp+0x2d8]
   14001a241:	mov    QWORD PTR [rsp+0x2e8],rax
   14001a249:	lea    rcx,[rsp+0x30]
   14001a24e:	call   0x14001e100
   14001a253:	nop
   14001a254:	mov    r8,QWORD PTR [rsp+0x2e8]
   14001a25c:	lea    rdx,[rsp+0x318]
   14001a264:	mov    rcx,rax
   14001a267:	call   0x14001ec60
   14001a26c:	mov    QWORD PTR [rsp+0x2f8],rax
   14001a274:	mov    rax,QWORD PTR [rsp+0x2f8]
   14001a27c:	mov    QWORD PTR [rsp+0x308],rax
   14001a284:	mov    rdx,QWORD PTR [rsp+0x308]
   14001a28c:	lea    rcx,[rsp+0x28]
   14001a291:	call   0x14001e000
   14001a296:	nop
   14001a297:	lea    rcx,[rsp+0x318]
   14001a29f:	call   0x14001de10
   14001a2a4:	xor    edx,edx
   14001a2a6:	lea    rcx,[rsp+0x28]
   14001a2ab:	call   0x14001e080
   14001a2b0:	movzx  eax,al
   14001a2b3:	test   eax,eax
   14001a2b5:	je     0x14001a314
   14001a2b7:	lea    rcx,[rsp+0x28]
   14001a2bc:	call   0x14001e100
   14001a2c1:	lea    rdx,[rsp+0x348]
   14001a2c9:	mov    rcx,rax
   14001a2cc:	call   0x14001e540
   14001a2d1:	mov    QWORD PTR [rsp+0x328],rax
   14001a2d9:	mov    rax,QWORD PTR [rsp+0x328]
   14001a2e1:	mov    QWORD PTR [rsp+0x338],rax
   14001a2e9:	mov    rcx,QWORD PTR [rsp+0x338]
   14001a2f1:	call   0x140007950
   14001a2f6:	mov    rdx,rax
   14001a2f9:	lea    rcx,[rsp+0xa68]
   14001a301:	call   0x14001f600
   14001a306:	nop
   14001a307:	lea    rcx,[rsp+0x348]
   14001a30f:	call   0x1400077d0
   14001a314:	jmp    0x14001a31b
   14001a316:	mov    BYTE PTR [rsp+0x20],0x1
   14001a31b:	jmp    0x14001a322
   14001a31d:	mov    BYTE PTR [rsp+0x20],0x1
   14001a322:	movzx  eax,BYTE PTR [rsp+0x20]
   14001a327:	test   eax,eax
   14001a329:	jne    0x14001a344
   14001a32b:	mov    rax,QWORD PTR [rsp+0xab0]
   14001a333:	lea    rdx,[rsp+0xa68]
   14001a33b:	mov    rcx,rax
   14001a33e:	call   0x14001eeb0
   14001a343:	nop
   14001a344:	lea    rcx,[rsp+0xc8]
   14001a34c:	call   0x14001de10
   14001a351:	nop
   14001a352:	lea    rcx,[rsp+0x80]
   14001a35a:	call   QWORD PTR [rip+0xca00]        # 0x140026d60
   14001a360:	nop
   14001a361:	lea    rcx,[rsp+0xa68]
   14001a369:	call   0x140017fb0
   14001a36e:	jmp    0x140019ecb
   14001a373:	jmp    0x14001a37a
   14001a375:	mov    BYTE PTR [rsp+0x20],0x1
   14001a37a:	lea    rcx,[rsp+0x90]
   14001a382:	call   0x14001de10
   14001a387:	movzx  eax,BYTE PTR [rsp+0x20]
   14001a38c:	test   eax,eax
   14001a38e:	jne    0x14001ab09
   14001a394:	lea    rax,[rsp+0x9a8]
   14001a39c:	mov    QWORD PTR [rsp+0x358],rax
   14001a3a4:	lea    rdx,[rip+0x15add]        # 0x14002fe88
   14001a3ab:	mov    rcx,QWORD PTR [rsp+0x358]
   14001a3b3:	call   0x140012a80
   14001a3b8:	mov    QWORD PTR [rsp+0x368],rax
   14001a3c0:	mov    rax,QWORD PTR [rsp+0x368]
   14001a3c8:	mov    QWORD PTR [rsp+0x378],rax
   14001a3d0:	lea    rcx,[rsp+0x50]
   14001a3d5:	call   0x14001e100
   14001a3da:	nop
   14001a3db:	mov    r8,QWORD PTR [rsp+0x378]
   14001a3e3:	lea    rdx,[rsp+0x3a8]
   14001a3eb:	mov    rcx,rax
   14001a3ee:	call   0x14001f070
   14001a3f3:	mov    QWORD PTR [rsp+0x388],rax
   14001a3fb:	mov    rax,QWORD PTR [rsp+0x388]
   14001a403:	mov    QWORD PTR [rsp+0x398],rax
   14001a40b:	mov    rdx,QWORD PTR [rsp+0x398]
   14001a413:	lea    rcx,[rsp+0x48]
   14001a418:	call   0x14001e000
   14001a41d:	nop
   14001a41e:	lea    rcx,[rsp+0x3a8]
   14001a426:	call   0x14001de10
   14001a42b:	xor    edx,edx
   14001a42d:	lea    rcx,[rsp+0x48]
   14001a432:	call   0x14001e080
   14001a437:	movzx  eax,al
   14001a43a:	test   eax,eax
   14001a43c:	je     0x14001ab04
   14001a442:	lea    rcx,[rsp+0x48]
   14001a447:	call   0x14001e100
   14001a44c:	lea    rdx,[rsp+0x3d8]
   14001a454:	mov    rcx,rax
   14001a457:	call   0x14001e3d0
   14001a45c:	mov    QWORD PTR [rsp+0x3b8],rax
   14001a464:	mov    rax,QWORD PTR [rsp+0x3b8]
   14001a46c:	mov    QWORD PTR [rsp+0x3c8],rax
   14001a474:	mov    rdx,QWORD PTR [rsp+0x3c8]
   14001a47c:	lea    rcx,[rsp+0x30]
   14001a481:	call   0x14001e000
   14001a486:	nop
   14001a487:	lea    rcx,[rsp+0x3d8]
   14001a48f:	call   0x14001de10
   14001a494:	xor    edx,edx
   14001a496:	lea    rcx,[rsp+0x30]
   14001a49b:	call   0x14001e080
   14001a4a0:	movzx  eax,al
   14001a4a3:	test   eax,eax
   14001a4a5:	je     0x14001aafd
   14001a4ab:	lea    rax,[rsp+0x9b8]
   14001a4b3:	mov    QWORD PTR [rsp+0x3e8],rax
   14001a4bb:	lea    rdx,[rip+0x159fe]        # 0x14002fec0
   14001a4c2:	mov    rcx,QWORD PTR [rsp+0x3e8]
   14001a4ca:	call   0x140012a80
   14001a4cf:	mov    QWORD PTR [rsp+0x3f8],rax
   14001a4d7:	mov    rax,QWORD PTR [rsp+0x3f8]
   14001a4df:	mov    QWORD PTR [rsp+0x408],rax
   14001a4e7:	lea    rcx,[rsp+0x30]
   14001a4ec:	call   0x14001e100
   14001a4f1:	nop
   14001a4f2:	mov    r8,QWORD PTR [rsp+0x408]
   14001a4fa:	lea    rdx,[rsp+0x438]
   14001a502:	mov    rcx,rax
   14001a505:	call   0x14001ec60
   14001a50a:	mov    QWORD PTR [rsp+0x418],rax
   14001a512:	mov    rax,QWORD PTR [rsp+0x418]
   14001a51a:	mov    QWORD PTR [rsp+0x428],rax
   14001a522:	mov    rdx,QWORD PTR [rsp+0x428]
   14001a52a:	lea    rcx,[rsp+0x28]
   14001a52f:	call   0x14001e000
   14001a534:	nop
   14001a535:	lea    rcx,[rsp+0x438]
   14001a53d:	call   0x14001de10
   14001a542:	xor    edx,edx
   14001a544:	lea    rcx,[rsp+0x28]
   14001a549:	call   0x14001e080
   14001a54e:	movzx  eax,al
   14001a551:	test   eax,eax
   14001a553:	je     0x14001a5b8
   14001a555:	lea    rcx,[rsp+0x28]
   14001a55a:	call   0x14001e100
   14001a55f:	lea    rdx,[rsp+0x468]
   14001a567:	mov    rcx,rax
   14001a56a:	call   0x14001e540
   14001a56f:	mov    QWORD PTR [rsp+0x448],rax
   14001a577:	mov    rax,QWORD PTR [rsp+0x448]
   14001a57f:	mov    QWORD PTR [rsp+0x458],rax
   14001a587:	mov    rcx,QWORD PTR [rsp+0x458]
   14001a58f:	call   0x140007950
   14001a594:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001a59c:	add    rcx,0x58
   14001a5a0:	mov    rdx,rax
   14001a5a3:	call   0x140018370
   14001a5a8:	nop
   14001a5a9:	lea    rcx,[rsp+0x468]
   14001a5b1:	call   0x1400077d0
   14001a5b6:	jmp    0x14001a5d3
   14001a5b8:	mov    rax,QWORD PTR [rsp+0xab0]
   14001a5c0:	add    rax,0x58
   14001a5c4:	lea    rdx,[rip+0x15915]        # 0x14002fee0
   14001a5cb:	mov    rcx,rax
   14001a5ce:	call   0x140018370
   14001a5d3:	lea    rax,[rsp+0x9c8]
   14001a5db:	mov    QWORD PTR [rsp+0x478],rax
   14001a5e3:	lea    rdx,[rip+0x1590e]        # 0x14002fef8
   14001a5ea:	mov    rcx,QWORD PTR [rsp+0x478]
   14001a5f2:	call   0x140012a80
   14001a5f7:	mov    QWORD PTR [rsp+0x488],rax
   14001a5ff:	mov    rax,QWORD PTR [rsp+0x488]
   14001a607:	mov    QWORD PTR [rsp+0x498],rax
   14001a60f:	lea    rcx,[rsp+0x30]
   14001a614:	call   0x14001e100
   14001a619:	nop
   14001a61a:	mov    r8,QWORD PTR [rsp+0x498]
   14001a622:	lea    rdx,[rsp+0x4c8]
   14001a62a:	mov    rcx,rax
   14001a62d:	call   0x14001ec60
   14001a632:	mov    QWORD PTR [rsp+0x4a8],rax
   14001a63a:	mov    rax,QWORD PTR [rsp+0x4a8]
   14001a642:	mov    QWORD PTR [rsp+0x4b8],rax
   14001a64a:	mov    rdx,QWORD PTR [rsp+0x4b8]
   14001a652:	lea    rcx,[rsp+0x28]
   14001a657:	call   0x14001e000
   14001a65c:	nop
   14001a65d:	lea    rcx,[rsp+0x4c8]
   14001a665:	call   0x14001de10
   14001a66a:	xor    edx,edx
   14001a66c:	lea    rcx,[rsp+0x28]
   14001a671:	call   0x14001e080
   14001a676:	movzx  eax,al
   14001a679:	test   eax,eax
   14001a67b:	je     0x14001a6e0
   14001a67d:	lea    rcx,[rsp+0x28]
   14001a682:	call   0x14001e100
   14001a687:	lea    rdx,[rsp+0x4f8]
   14001a68f:	mov    rcx,rax
   14001a692:	call   0x14001e540
   14001a697:	mov    QWORD PTR [rsp+0x4d8],rax
   14001a69f:	mov    rax,QWORD PTR [rsp+0x4d8]
   14001a6a7:	mov    QWORD PTR [rsp+0x4e8],rax
   14001a6af:	mov    rcx,QWORD PTR [rsp+0x4e8]
   14001a6b7:	call   0x140007950
   14001a6bc:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001a6c4:	add    rcx,0x58
   14001a6c8:	mov    rdx,rax
   14001a6cb:	call   0x1400183d0
   14001a6d0:	nop
   14001a6d1:	lea    rcx,[rsp+0x4f8]
   14001a6d9:	call   0x1400077d0
   14001a6de:	jmp    0x14001a6fb
   14001a6e0:	mov    rax,QWORD PTR [rsp+0xab0]
   14001a6e8:	add    rax,0x58
   14001a6ec:	lea    rdx,[rip+0x1582d]        # 0x14002ff20
   14001a6f3:	mov    rcx,rax
   14001a6f6:	call   0x1400183d0
   14001a6fb:	mov    rax,QWORD PTR [rsp+0xab0]
   14001a703:	add    rax,0x58
   14001a707:	xor    edx,edx
   14001a709:	mov    rcx,rax
   14001a70c:	call   0x140018350
   14001a711:	lea    rax,[rsp+0x9d8]
   14001a719:	mov    QWORD PTR [rsp+0x508],rax
   14001a721:	lea    rdx,[rip+0x15808]        # 0x14002ff30
   14001a728:	mov    rcx,QWORD PTR [rsp+0x508]
   14001a730:	call   0x140012a80
   14001a735:	mov    QWORD PTR [rsp+0x518],rax
   14001a73d:	mov    rax,QWORD PTR [rsp+0x518]
   14001a745:	mov    QWORD PTR [rsp+0x528],rax
   14001a74d:	lea    rcx,[rsp+0x30]
   14001a752:	call   0x14001e100
   14001a757:	nop
   14001a758:	mov    r8,QWORD PTR [rsp+0x528]
   14001a760:	lea    rdx,[rsp+0x558]
   14001a768:	mov    rcx,rax
   14001a76b:	call   0x14001ec60
   14001a770:	mov    QWORD PTR [rsp+0x538],rax
   14001a778:	mov    rax,QWORD PTR [rsp+0x538]
   14001a780:	mov    QWORD PTR [rsp+0x548],rax
   14001a788:	mov    rdx,QWORD PTR [rsp+0x548]
   14001a790:	lea    rcx,[rsp+0x28]
   14001a795:	call   0x14001e000
   14001a79a:	nop
   14001a79b:	lea    rcx,[rsp+0x558]
   14001a7a3:	call   0x14001de10
   14001a7a8:	xor    edx,edx
   14001a7aa:	lea    rcx,[rsp+0x28]
   14001a7af:	call   0x14001e080
   14001a7b4:	movzx  eax,al
   14001a7b7:	test   eax,eax
   14001a7b9:	je     0x14001a85d
   14001a7bf:	lea    rcx,[rsp+0x28]
   14001a7c4:	call   0x14001e100
   14001a7c9:	lea    rdx,[rsp+0x588]
   14001a7d1:	mov    rcx,rax
   14001a7d4:	call   0x14001e540
   14001a7d9:	mov    QWORD PTR [rsp+0x568],rax
   14001a7e1:	mov    rax,QWORD PTR [rsp+0x568]
   14001a7e9:	mov    QWORD PTR [rsp+0x578],rax
   14001a7f1:	mov    rcx,QWORD PTR [rsp+0x578]
   14001a7f9:	call   0x140007950
   14001a7fe:	mov    rdx,rax
   14001a801:	lea    rcx,[rsp+0x110]
   14001a809:	call   QWORD PTR [rip+0xc559]        # 0x140026d68
   14001a80f:	nop
   14001a810:	lea    rcx,[rsp+0x588]
   14001a818:	call   0x1400077d0
   14001a81d:	lea    rdx,[rip+0x1462c]        # 0x14002ee50
   14001a824:	lea    rcx,[rsp+0x110]
   14001a82c:	call   0x140002c50
   14001a831:	movzx  eax,al
   14001a834:	test   eax,eax
   14001a836:	je     0x14001a84f
   14001a838:	mov    rax,QWORD PTR [rsp+0xab0]
   14001a840:	add    rax,0x58
   14001a844:	mov    dl,0x1
   14001a846:	mov    rcx,rax
   14001a849:	call   0x140018350
   14001a84e:	nop
   14001a84f:	lea    rcx,[rsp+0x110]
   14001a857:	call   QWORD PTR [rip+0xc503]        # 0x140026d60
   14001a85d:	lea    rax,[rsp+0x9e8]
   14001a865:	mov    QWORD PTR [rsp+0x598],rax
   14001a86d:	lea    rdx,[rip+0x145e4]        # 0x14002ee58
   14001a874:	mov    rcx,QWORD PTR [rsp+0x598]
   14001a87c:	call   0x140012a80
   14001a881:	mov    QWORD PTR [rsp+0x5a8],rax
   14001a889:	mov    rax,QWORD PTR [rsp+0x5a8]
   14001a891:	mov    QWORD PTR [rsp+0x5b8],rax
   14001a899:	lea    rcx,[rsp+0x30]
   14001a89e:	call   0x14001e100
   14001a8a3:	nop
   14001a8a4:	mov    r8,QWORD PTR [rsp+0x5b8]
   14001a8ac:	lea    rdx,[rsp+0x5e8]
   14001a8b4:	mov    rcx,rax
   14001a8b7:	call   0x14001ec60
   14001a8bc:	mov    QWORD PTR [rsp+0x5c8],rax
   14001a8c4:	mov    rax,QWORD PTR [rsp+0x5c8]
   14001a8cc:	mov    QWORD PTR [rsp+0x5d8],rax
   14001a8d4:	mov    rdx,QWORD PTR [rsp+0x5d8]
   14001a8dc:	lea    rcx,[rsp+0x28]
   14001a8e1:	call   0x14001e000
   14001a8e6:	nop
   14001a8e7:	lea    rcx,[rsp+0x5e8]
   14001a8ef:	call   0x14001de10
   14001a8f4:	xor    edx,edx
   14001a8f6:	lea    rcx,[rsp+0x28]
   14001a8fb:	call   0x14001e080
   14001a900:	movzx  eax,al
   14001a903:	test   eax,eax
   14001a905:	je     0x14001a96a
   14001a907:	lea    rcx,[rsp+0x28]
   14001a90c:	call   0x14001e100
   14001a911:	lea    rdx,[rsp+0x618]
   14001a919:	mov    rcx,rax
   14001a91c:	call   0x14001e540
   14001a921:	mov    QWORD PTR [rsp+0x5f8],rax
   14001a929:	mov    rax,QWORD PTR [rsp+0x5f8]
   14001a931:	mov    QWORD PTR [rsp+0x608],rax
   14001a939:	mov    rcx,QWORD PTR [rsp+0x608]
   14001a941:	call   0x140007950
   14001a946:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001a94e:	add    rcx,0x58
   14001a952:	mov    rdx,rax
   14001a955:	call   0x1400184c0
   14001a95a:	nop
   14001a95b:	lea    rcx,[rsp+0x618]
   14001a963:	call   0x1400077d0
   14001a968:	jmp    0x14001a96f
   14001a96a:	mov    BYTE PTR [rsp+0x21],0x1
   14001a96f:	lea    rax,[rsp+0x9f8]
   14001a977:	mov    QWORD PTR [rsp+0x628],rax
   14001a97f:	lea    rdx,[rip+0x144ea]        # 0x14002ee70
   14001a986:	mov    rcx,QWORD PTR [rsp+0x628]
   14001a98e:	call   0x140012a80
   14001a993:	mov    QWORD PTR [rsp+0x638],rax
   14001a99b:	mov    rax,QWORD PTR [rsp+0x638]
   14001a9a3:	mov    QWORD PTR [rsp+0x648],rax
   14001a9ab:	lea    rcx,[rsp+0x30]
   14001a9b0:	call   0x14001e100
   14001a9b5:	nop
   14001a9b6:	mov    r8,QWORD PTR [rsp+0x648]
   14001a9be:	lea    rdx,[rsp+0x678]
   14001a9c6:	mov    rcx,rax
   14001a9c9:	call   0x14001ec60
   14001a9ce:	mov    QWORD PTR [rsp+0x658],rax
   14001a9d6:	mov    rax,QWORD PTR [rsp+0x658]
   14001a9de:	mov    QWORD PTR [rsp+0x668],rax
   14001a9e6:	mov    rdx,QWORD PTR [rsp+0x668]
   14001a9ee:	lea    rcx,[rsp+0x28]
   14001a9f3:	call   0x14001e000
   14001a9f8:	nop
   14001a9f9:	lea    rcx,[rsp+0x678]
   14001aa01:	call   0x14001de10
   14001aa06:	xor    edx,edx
   14001aa08:	lea    rcx,[rsp+0x28]
   14001aa0d:	call   0x14001e080
   14001aa12:	movzx  eax,al
   14001aa15:	test   eax,eax
   14001aa17:	je     0x14001aaf6
   14001aa1d:	mov    rdx,QWORD PTR [rsp+0xac0]
   14001aa25:	lea    rcx,[rsp+0xa0]
   14001aa2d:	call   QWORD PTR [rip+0xc335]        # 0x140026d68
   14001aa33:	nop
   14001aa34:	lea    rcx,[rsp+0x28]
   14001aa39:	call   0x14001e100
   14001aa3e:	lea    rdx,[rsp+0x6b8]
   14001aa46:	mov    rcx,rax
   14001aa49:	call   0x14001e540
   14001aa4e:	mov    QWORD PTR [rsp+0x688],rax
   14001aa56:	mov    rax,QWORD PTR [rsp+0x688]
   14001aa5e:	mov    QWORD PTR [rsp+0x698],rax
   14001aa66:	mov    rcx,QWORD PTR [rsp+0x698]
   14001aa6e:	call   0x140007950
   14001aa73:	mov    QWORD PTR [rsp+0x6a8],rax
   14001aa7b:	mov    edx,0x104
   14001aa80:	lea    rcx,[rsp+0xa0]
   14001aa88:	call   QWORD PTR [rip+0xc31a]        # 0x140026da8
   14001aa8e:	mov    rcx,QWORD PTR [rsp+0x6a8]
   14001aa96:	mov    rdx,rcx
   14001aa99:	mov    rcx,rax
   14001aa9c:	call   QWORD PTR [rip+0xbaa6]        # 0x140026548
   14001aaa2:	nop
   14001aaa3:	lea    rcx,[rsp+0x6b8]
   14001aaab:	call   0x1400077d0
   14001aab0:	mov    edx,0xffffffff
   14001aab5:	lea    rcx,[rsp+0xa0]
   14001aabd:	call   QWORD PTR [rip+0xc2d5]        # 0x140026d98
   14001aac3:	lea    rcx,[rsp+0xa0]
   14001aacb:	call   QWORD PTR [rip+0xc2df]        # 0x140026db0
   14001aad1:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001aad9:	add    rcx,0x58
   14001aadd:	mov    rdx,rax
   14001aae0:	call   0x140018430
   14001aae5:	nop
   14001aae6:	lea    rcx,[rsp+0xa0]
   14001aaee:	call   QWORD PTR [rip+0xc26c]        # 0x140026d60
   14001aaf4:	jmp    0x14001aafb
   14001aaf6:	mov    BYTE PTR [rsp+0x21],0x1
   14001aafb:	jmp    0x14001ab02
   14001aafd:	mov    BYTE PTR [rsp+0x21],0x1
   14001ab02:	jmp    0x14001ab09
   14001ab04:	mov    BYTE PTR [rsp+0x21],0x1
   14001ab09:	movzx  eax,BYTE PTR [rsp+0x20]
   14001ab0e:	test   eax,eax
   14001ab10:	jne    0x14001af74
   14001ab16:	movzx  eax,BYTE PTR [rsp+0x21]
   14001ab1b:	test   eax,eax
   14001ab1d:	jne    0x14001af74
   14001ab23:	lea    rax,[rsp+0xa08]
   14001ab2b:	mov    QWORD PTR [rsp+0x6c8],rax
   14001ab33:	lea    rdx,[rip+0x14356]        # 0x14002ee90
   14001ab3a:	mov    rcx,QWORD PTR [rsp+0x6c8]
   14001ab42:	call   0x140012a80
   14001ab47:	mov    QWORD PTR [rsp+0x6d8],rax
   14001ab4f:	mov    rax,QWORD PTR [rsp+0x6d8]
   14001ab57:	mov    QWORD PTR [rsp+0x6e8],rax
   14001ab5f:	lea    rcx,[rsp+0x50]
   14001ab64:	call   0x14001e100
   14001ab69:	nop
   14001ab6a:	mov    r8,QWORD PTR [rsp+0x6e8]
   14001ab72:	lea    rdx,[rsp+0xb0]
   14001ab7a:	mov    rcx,rax
   14001ab7d:	call   0x14001efc0
   14001ab82:	nop
   14001ab83:	xor    edx,edx
   14001ab85:	lea    rcx,[rsp+0xb0]
   14001ab8d:	call   0x14001e080
   14001ab92:	movzx  eax,al
   14001ab95:	test   eax,eax
   14001ab97:	je     0x14001af62
   14001ab9d:	mov    DWORD PTR [rsp+0x58],0x0
   14001aba5:	lea    rcx,[rsp+0xb0]
   14001abad:	call   0x14001e100
   14001abb2:	mov    QWORD PTR [rsp+0x120],rax
   14001abba:	mov    rax,QWORD PTR [rsp+0x120]
   14001abc2:	mov    rax,QWORD PTR [rax]
   14001abc5:	lea    rdx,[rsp+0x58]
   14001abca:	mov    rcx,QWORD PTR [rsp+0x120]
   14001abd2:	call   QWORD PTR [rax+0x40]
   14001abd5:	cmp    DWORD PTR [rsp+0x58],0x0
   14001abda:	jg     0x14001abe3
   14001abdc:	mov    BYTE PTR [rsp+0x21],0x1
   14001abe1:	jmp    0x14001abe8
   14001abe3:	mov    BYTE PTR [rsp+0x21],0x0
   14001abe8:	mov    DWORD PTR [rsp+0x3c],0x0
   14001abf0:	mov    DWORD PTR [rsp+0x3c],0x0
   14001abf8:	jmp    0x14001ac04
   14001abfa:	mov    eax,DWORD PTR [rsp+0x3c]
   14001abfe:	inc    eax
   14001ac00:	mov    DWORD PTR [rsp+0x3c],eax
   14001ac04:	mov    eax,DWORD PTR [rsp+0x58]
   14001ac08:	cmp    DWORD PTR [rsp+0x3c],eax
   14001ac0c:	jge    0x14001af60
   14001ac12:	lea    rcx,[rsp+0x128]
   14001ac1a:	call   0x14001dc70
   14001ac1f:	nop
   14001ac20:	lea    rcx,[rsp+0x848]
   14001ac28:	call   QWORD PTR [rip+0xc152]        # 0x140026d80
   14001ac2e:	nop
   14001ac2f:	lea    rcx,[rsp+0xb0]
   14001ac37:	call   0x14001e100
   14001ac3c:	mov    r8d,DWORD PTR [rsp+0x3c]
   14001ac41:	lea    rdx,[rsp+0xe0]
   14001ac49:	mov    rcx,rax
   14001ac4c:	call   0x14001e460
   14001ac51:	nop
   14001ac52:	xor    edx,edx
   14001ac54:	lea    rcx,[rsp+0xe0]
   14001ac5c:	call   0x14001e080
   14001ac61:	movzx  eax,al
   14001ac64:	test   eax,eax
   14001ac66:	je     0x14001aefd
   14001ac6c:	lea    rcx,[rsp+0xe0]
   14001ac74:	call   0x14001e100
   14001ac79:	lea    rdx,[rsp+0x718]
   14001ac81:	mov    rcx,rax
   14001ac84:	call   0x14001e3d0
   14001ac89:	mov    QWORD PTR [rsp+0x6f8],rax
   14001ac91:	mov    rax,QWORD PTR [rsp+0x6f8]
   14001ac99:	mov    QWORD PTR [rsp+0x708],rax
   14001aca1:	mov    rdx,QWORD PTR [rsp+0x708]
   14001aca9:	lea    rcx,[rsp+0x30]
   14001acae:	call   0x14001e000
   14001acb3:	nop
   14001acb4:	lea    rcx,[rsp+0x718]
   14001acbc:	call   0x14001de10
   14001acc1:	xor    edx,edx
   14001acc3:	lea    rcx,[rsp+0x30]
   14001acc8:	call   0x14001e080
   14001accd:	movzx  eax,al
   14001acd0:	test   eax,eax
   14001acd2:	je     0x14001aef6
   14001acd8:	lea    rax,[rsp+0xa18]
   14001ace0:	mov    QWORD PTR [rsp+0x728],rax
   14001ace8:	lea    rdx,[rip+0x141e9]        # 0x14002eed8
   14001acef:	mov    rcx,QWORD PTR [rsp+0x728]
   14001acf7:	call   0x140012a80
   14001acfc:	mov    QWORD PTR [rsp+0x738],rax
   14001ad04:	mov    rax,QWORD PTR [rsp+0x738]
   14001ad0c:	mov    QWORD PTR [rsp+0x748],rax
   14001ad14:	lea    rcx,[rsp+0x30]
   14001ad19:	call   0x14001e100
   14001ad1e:	nop
   14001ad1f:	mov    r8,QWORD PTR [rsp+0x748]
   14001ad27:	lea    rdx,[rsp+0x778]
   14001ad2f:	mov    rcx,rax
   14001ad32:	call   0x14001ec60
   14001ad37:	mov    QWORD PTR [rsp+0x758],rax
   14001ad3f:	mov    rax,QWORD PTR [rsp+0x758]
   14001ad47:	mov    QWORD PTR [rsp+0x768],rax
   14001ad4f:	mov    rdx,QWORD PTR [rsp+0x768]
   14001ad57:	lea    rcx,[rsp+0x28]
   14001ad5c:	call   0x14001e000
   14001ad61:	nop
   14001ad62:	lea    rcx,[rsp+0x778]
   14001ad6a:	call   0x14001de10
   14001ad6f:	xor    edx,edx
   14001ad71:	lea    rcx,[rsp+0x28]
   14001ad76:	call   0x14001e080
   14001ad7b:	movzx  eax,al
   14001ad7e:	test   eax,eax
   14001ad80:	je     0x14001ade1
   14001ad82:	lea    rcx,[rsp+0x28]
   14001ad87:	call   0x14001e100
   14001ad8c:	lea    rdx,[rsp+0x7a8]
   14001ad94:	mov    rcx,rax
   14001ad97:	call   0x14001e540
   14001ad9c:	mov    QWORD PTR [rsp+0x788],rax
   14001ada4:	mov    rax,QWORD PTR [rsp+0x788]
   14001adac:	mov    QWORD PTR [rsp+0x798],rax
   14001adb4:	mov    rcx,QWORD PTR [rsp+0x798]
   14001adbc:	call   0x140007950
   14001adc1:	mov    rdx,rax
   14001adc4:	lea    rcx,[rsp+0x128]
   14001adcc:	call   0x14001f840
   14001add1:	nop
   14001add2:	lea    rcx,[rsp+0x7a8]
   14001adda:	call   0x1400077d0
   14001addf:	jmp    0x14001ade6
   14001ade1:	mov    BYTE PTR [rsp+0x21],0x1
   14001ade6:	lea    rax,[rsp+0xa28]
   14001adee:	mov    QWORD PTR [rsp+0x7b8],rax
   14001adf6:	lea    rdx,[rip+0x140eb]        # 0x14002eee8
   14001adfd:	mov    rcx,QWORD PTR [rsp+0x7b8]
   14001ae05:	call   0x140012a80
   14001ae0a:	mov    QWORD PTR [rsp+0x7c8],rax
   14001ae12:	mov    rax,QWORD PTR [rsp+0x7c8]
   14001ae1a:	mov    QWORD PTR [rsp+0x7d8],rax
   14001ae22:	lea    rcx,[rsp+0x30]
   14001ae27:	call   0x14001e100
   14001ae2c:	nop
   14001ae2d:	mov    r8,QWORD PTR [rsp+0x7d8]
   14001ae35:	lea    rdx,[rsp+0x808]
   14001ae3d:	mov    rcx,rax
   14001ae40:	call   0x14001ec60
   14001ae45:	mov    QWORD PTR [rsp+0x7e8],rax
   14001ae4d:	mov    rax,QWORD PTR [rsp+0x7e8]
   14001ae55:	mov    QWORD PTR [rsp+0x7f8],rax
   14001ae5d:	mov    rdx,QWORD PTR [rsp+0x7f8]
   14001ae65:	lea    rcx,[rsp+0x28]
   14001ae6a:	call   0x14001e000
   14001ae6f:	nop
   14001ae70:	lea    rcx,[rsp+0x808]
   14001ae78:	call   0x14001de10
   14001ae7d:	xor    edx,edx
   14001ae7f:	lea    rcx,[rsp+0x28]
   14001ae84:	call   0x14001e080
   14001ae89:	movzx  eax,al
   14001ae8c:	test   eax,eax
   14001ae8e:	je     0x14001aeef
   14001ae90:	lea    rcx,[rsp+0x28]
   14001ae95:	call   0x14001e100
   14001ae9a:	lea    rdx,[rsp+0x838]
   14001aea2:	mov    rcx,rax
   14001aea5:	call   0x14001e540
   14001aeaa:	mov    QWORD PTR [rsp+0x818],rax
   14001aeb2:	mov    rax,QWORD PTR [rsp+0x818]
   14001aeba:	mov    QWORD PTR [rsp+0x828],rax
   14001aec2:	mov    rcx,QWORD PTR [rsp+0x828]
   14001aeca:	call   0x140007950
   14001aecf:	mov    rdx,rax
   14001aed2:	lea    rcx,[rsp+0x128]
   14001aeda:	call   0x14001f8a0
   14001aedf:	nop
   14001aee0:	lea    rcx,[rsp+0x838]
   14001aee8:	call   0x1400077d0
   14001aeed:	jmp    0x14001aef4
   14001aeef:	mov    BYTE PTR [rsp+0x21],0x1
   14001aef4:	jmp    0x14001aefb
   14001aef6:	mov    BYTE PTR [rsp+0x21],0x1
   14001aefb:	jmp    0x14001af02
   14001aefd:	mov    BYTE PTR [rsp+0x21],0x1
   14001af02:	movzx  eax,BYTE PTR [rsp+0x20]
   14001af07:	test   eax,eax
   14001af09:	jne    0x14001af31
   14001af0b:	movzx  eax,BYTE PTR [rsp+0x21]
   14001af10:	test   eax,eax
   14001af12:	jne    0x14001af31
   14001af14:	mov    rax,QWORD PTR [rsp+0xab0]
   14001af1c:	add    rax,0x58
   14001af20:	lea    rdx,[rsp+0x128]
   14001af28:	mov    rcx,rax
   14001af2b:	call   0x14001eef0
   14001af30:	nop
   14001af31:	lea    rcx,[rsp+0xe0]
   14001af39:	call   0x14001de10
   14001af3e:	nop
   14001af3f:	lea    rcx,[rsp+0x848]
   14001af47:	call   QWORD PTR [rip+0xbe13]        # 0x140026d60
   14001af4d:	nop
   14001af4e:	lea    rcx,[rsp+0x128]
   14001af56:	call   0x14001df20
   14001af5b:	jmp    0x14001abfa
   14001af60:	jmp    0x14001af67
   14001af62:	mov    BYTE PTR [rsp+0x21],0x1
   14001af67:	lea    rcx,[rsp+0xb0]
   14001af6f:	call   0x14001de10
   14001af74:	movzx  eax,BYTE PTR [rsp+0x20]
   14001af79:	test   eax,eax
   14001af7b:	jne    0x14001af9a
   14001af7d:	movzx  eax,BYTE PTR [rsp+0x21]
   14001af82:	test   eax,eax
   14001af84:	jne    0x14001af9a
   14001af86:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001af8e:	call   0x14001b270
   14001af93:	mov    BYTE PTR [rsp+0x38],0x1
   14001af98:	jmp    0x14001afcd
   14001af9a:	movzx  eax,BYTE PTR [rsp+0x20]
   14001af9f:	test   eax,eax
   14001afa1:	jne    0x14001afcd
   14001afa3:	movzx  eax,BYTE PTR [rsp+0x21]
   14001afa8:	test   eax,eax
   14001afaa:	je     0x14001afcd
   14001afac:	mov    rcx,QWORD PTR [rsp+0xab0]
   14001afb4:	call   0x14001b270
   14001afb9:	mov    rax,QWORD PTR [rsp+0xab0]
   14001afc1:	mov    BYTE PTR [rax+0xe0],0x0
   14001afc8:	mov    BYTE PTR [rsp+0x38],0x1
   14001afcd:	lea    rcx,[rsp+0x48]
   14001afd2:	call   0x14001de10
   14001afd7:	nop
   14001afd8:	lea    rcx,[rsp+0x28]
   14001afdd:	call   0x14001de10
   14001afe2:	nop
   14001afe3:	lea    rcx,[rsp+0x30]
   14001afe8:	call   0x14001de10
   14001afed:	movzx  eax,BYTE PTR [rsp+0x38]
   14001aff2:	mov    BYTE PTR [rsp+0x39],al
   14001aff6:	lea    rcx,[rsp+0x50]
   14001affb:	call   0x14001de10
   14001b000:	movzx  eax,BYTE PTR [rsp+0x39]
   14001b005:	mov    rcx,QWORD PTR [rsp+0xa90]
   14001b00d:	xor    rcx,rsp
   14001b010:	call   0x140021890
   14001b015:	add    rsp,0xaa8
   14001b01c:	ret    
   14001b01d:	int3   
   14001b01e:	int3   
   14001b01f:	int3   
   14001b020:	int3   
   14001b021:	int3   
   14001b022:	int3   
   14001b023:	int3   
   14001b024:	int3   
   14001b025:	int3   
   14001b026:	int3   
   14001b027:	int3   
   14001b028:	int3   
   14001b029:	int3   
   14001b02a:	int3   
   14001b02b:	int3   
   14001b02c:	int3   
   14001b02d:	int3   
   14001b02e:	int3   
   14001b02f:	int3   
   14001b030:	mov    QWORD PTR [rsp+0x8],rcx
   14001b035:	sub    rsp,0x28
   14001b039:	mov    rax,QWORD PTR [rsp+0x30]
   14001b03e:	add    rax,0xb0
   14001b044:	mov    rcx,rax
   14001b047:	call   0x14001fa70
   14001b04c:	add    rsp,0x28
   14001b050:	ret    
   14001b051:	int3   
   14001b052:	int3   
   14001b053:	int3   
   14001b054:	int3   
   14001b055:	int3   
   14001b056:	int3   
   14001b057:	int3   
   14001b058:	int3   
   14001b059:	int3   
   14001b05a:	int3   
   14001b05b:	int3   
   14001b05c:	int3   
   14001b05d:	int3   
   14001b05e:	int3   
   14001b05f:	int3   
   14001b060:	mov    BYTE PTR [rsp+0x10],dl
   14001b064:	mov    QWORD PTR [rsp+0x8],rcx
   14001b069:	sub    rsp,0x28
   14001b06d:	mov    rax,QWORD PTR [rsp+0x30]
   14001b072:	add    rax,0xb0
   14001b078:	movzx  edx,BYTE PTR [rsp+0x38]
   14001b07d:	mov    rcx,rax
   14001b080:	call   0x14001fad0
   14001b085:	add    rsp,0x28
   14001b089:	ret    
   14001b08a:	int3   
   14001b08b:	int3   
   14001b08c:	int3   
   14001b08d:	int3   
   14001b08e:	int3   
   14001b08f:	int3   
   14001b090:	mov    QWORD PTR [rsp+0x8],rcx
   14001b095:	sub    rsp,0x28
   14001b099:	mov    rax,QWORD PTR [rsp+0x30]
   14001b09e:	add    rax,0xb0
   14001b0a4:	mov    rcx,rax
   14001b0a7:	call   0x14001fb70
   14001b0ac:	add    rsp,0x28
   14001b0b0:	ret    
   14001b0b1:	int3   
   14001b0b2:	int3   
   14001b0b3:	int3   
   14001b0b4:	int3   
   14001b0b5:	int3   
   14001b0b6:	int3   
   14001b0b7:	int3   
   14001b0b8:	int3   
   14001b0b9:	int3   
   14001b0ba:	int3   
   14001b0bb:	int3   
   14001b0bc:	int3   
   14001b0bd:	int3   
   14001b0be:	int3   
   14001b0bf:	int3   
   14001b0c0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b0c5:	sub    rsp,0x88
   14001b0cc:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14001b0d5:	mov    rax,QWORD PTR [rsp+0x90]
   14001b0dd:	add    rax,0xb0
   14001b0e3:	mov    rcx,rax
   14001b0e6:	call   0x140020140
   14001b0eb:	mov    rax,QWORD PTR [rsp+0x90]
   14001b0f3:	add    rax,0xb0
   14001b0f9:	lea    rdx,[rsp+0x40]
   14001b0fe:	mov    rcx,rax
   14001b101:	call   0x14001fc10
   14001b106:	nop
   14001b107:	lea    r8,[rip+0x13d46]        # 0x14002ee54
   14001b10e:	lea    rdx,[rsp+0x40]
   14001b113:	lea    rcx,[rsp+0x38]
   14001b118:	call   0x14001e130
   14001b11d:	nop
   14001b11e:	lea    rdx,[rip+0x13dd3]        # 0x14002eef8
   14001b125:	lea    rcx,[rsp+0x38]
   14001b12a:	call   QWORD PTR [rip+0xbc20]        # 0x140026d50
   14001b130:	mov    DWORD PTR [rsp+0x20],0x0
   14001b138:	mov    rax,QWORD PTR [rsp+0x90]
   14001b140:	lea    rdx,[rsp+0x28]
   14001b145:	mov    rcx,rax
   14001b148:	call   0x1400054c0
   14001b14d:	jmp    0x14001b16b
   14001b14f:	xor    r8d,r8d
   14001b152:	lea    rdx,[rsp+0x70]
   14001b157:	lea    rcx,[rsp+0x28]
   14001b15c:	call   0x140005210
   14001b161:	mov    eax,DWORD PTR [rsp+0x20]
   14001b165:	inc    eax
   14001b167:	mov    DWORD PTR [rsp+0x20],eax
   14001b16b:	mov    rax,QWORD PTR [rsp+0x90]
   14001b173:	lea    rdx,[rsp+0x78]
   14001b178:	mov    rcx,rax
   14001b17b:	call   0x140005500
   14001b180:	mov    rdx,rax
   14001b183:	lea    rcx,[rsp+0x28]
   14001b188:	call   0x140005a90
   14001b18d:	movzx  eax,al
   14001b190:	test   eax,eax
   14001b192:	je     0x14001b241
   14001b198:	lea    rcx,[rsp+0x28]
   14001b19d:	call   0x1400051f0
   14001b1a2:	mov    QWORD PTR [rsp+0x60],rax
   14001b1a7:	lea    rcx,[rsp+0x30]
   14001b1ac:	call   QWORD PTR [rip+0xbbce]        # 0x140026d80
   14001b1b2:	nop
   14001b1b3:	mov    r8d,DWORD PTR [rsp+0x20]
   14001b1b8:	lea    rdx,[rip+0x13d49]        # 0x14002ef08
   14001b1bf:	lea    rcx,[rsp+0x30]
   14001b1c4:	call   QWORD PTR [rip+0xb93e]        # 0x140026b08
   14001b1ca:	lea    rdx,[rsp+0x48]
   14001b1cf:	mov    rcx,QWORD PTR [rsp+0x60]
   14001b1d4:	call   0x14001f4c0
   14001b1d9:	nop
   14001b1da:	lea    rcx,[rsp+0x48]
   14001b1df:	call   QWORD PTR [rip+0xbbcb]        # 0x140026db0
   14001b1e5:	mov    QWORD PTR [rsp+0x58],rax
   14001b1ea:	lea    rcx,[rsp+0x30]
   14001b1ef:	call   QWORD PTR [rip+0xbbbb]        # 0x140026db0
   14001b1f5:	mov    QWORD PTR [rsp+0x50],rax
   14001b1fa:	lea    rcx,[rsp+0x38]
   14001b1ff:	call   QWORD PTR [rip+0xbbab]        # 0x140026db0
   14001b205:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b20a:	mov    r9,rcx
   14001b20d:	mov    rcx,QWORD PTR [rsp+0x50]
   14001b212:	mov    r8,rcx
   14001b215:	mov    rdx,rax
   14001b218:	mov    rcx,0xffffffff80000001
   14001b21f:	call   0x14000cac0
   14001b224:	nop
   14001b225:	lea    rcx,[rsp+0x48]
   14001b22a:	call   QWORD PTR [rip+0xbb30]        # 0x140026d60
   14001b230:	nop
   14001b231:	lea    rcx,[rsp+0x30]
   14001b236:	call   QWORD PTR [rip+0xbb24]        # 0x140026d60
   14001b23c:	jmp    0x14001b14f
   14001b241:	lea    rcx,[rsp+0x38]
   14001b246:	call   QWORD PTR [rip+0xbb14]        # 0x140026d60
   14001b24c:	nop
   14001b24d:	lea    rcx,[rsp+0x40]
   14001b252:	call   QWORD PTR [rip+0xbb08]        # 0x140026d60
   14001b258:	add    rsp,0x88
   14001b25f:	ret    
   14001b260:	int3   
   14001b261:	int3   
   14001b262:	int3   
   14001b263:	int3   
   14001b264:	int3   
   14001b265:	int3   
   14001b266:	int3   
   14001b267:	int3   
   14001b268:	int3   
   14001b269:	int3   
   14001b26a:	int3   
   14001b26b:	int3   
   14001b26c:	int3   
   14001b26d:	int3   
   14001b26e:	int3   
   14001b26f:	int3   
   14001b270:	mov    QWORD PTR [rsp+0x8],rcx
   14001b275:	sub    rsp,0x98
   14001b27c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001b285:	mov    rax,QWORD PTR [rsp+0xa0]
   14001b28d:	add    rax,0xb0
   14001b293:	mov    rcx,rax
   14001b296:	call   0x1400200b0
   14001b29b:	mov    rax,QWORD PTR [rsp+0xa0]
   14001b2a3:	add    rax,0xb0
   14001b2a9:	lea    rdx,[rsp+0x48]
   14001b2ae:	mov    rcx,rax
   14001b2b1:	call   0x14001fc10
   14001b2b6:	nop
   14001b2b7:	lea    r8,[rip+0x13c26]        # 0x14002eee4
   14001b2be:	lea    rdx,[rsp+0x48]
   14001b2c3:	lea    rcx,[rsp+0x40]
   14001b2c8:	call   0x14001e130
   14001b2cd:	nop
   14001b2ce:	lea    rdx,[rip+0x13c3b]        # 0x14002ef10
   14001b2d5:	lea    rcx,[rsp+0x40]
   14001b2da:	call   QWORD PTR [rip+0xba70]        # 0x140026d50
   14001b2e0:	mov    DWORD PTR [rsp+0x20],0x0
   14001b2e8:	mov    rax,QWORD PTR [rsp+0xa0]
   14001b2f0:	lea    rdx,[rsp+0x38]
   14001b2f5:	mov    rcx,rax
   14001b2f8:	call   0x1400054c0
   14001b2fd:	jmp    0x14001b31b
   14001b2ff:	xor    r8d,r8d
   14001b302:	lea    rdx,[rsp+0x70]
   14001b307:	lea    rcx,[rsp+0x38]
   14001b30c:	call   0x140005210
   14001b311:	mov    eax,DWORD PTR [rsp+0x20]
   14001b315:	inc    eax
   14001b317:	mov    DWORD PTR [rsp+0x20],eax
   14001b31b:	mov    rax,QWORD PTR [rsp+0xa0]
   14001b323:	lea    rdx,[rsp+0x68]
   14001b328:	mov    rcx,rax
   14001b32b:	call   0x140005500
   14001b330:	mov    rdx,rax
   14001b333:	lea    rcx,[rsp+0x38]
   14001b338:	call   0x140005a90
   14001b33d:	movzx  eax,al
   14001b340:	test   eax,eax
   14001b342:	je     0x14001b41d
   14001b348:	lea    rcx,[rsp+0x38]
   14001b34d:	call   0x1400051f0
   14001b352:	mov    QWORD PTR [rsp+0x58],rax
   14001b357:	lea    rcx,[rsp+0x30]
   14001b35c:	call   QWORD PTR [rip+0xba1e]        # 0x140026d80
   14001b362:	nop
   14001b363:	mov    r8d,DWORD PTR [rsp+0x20]
   14001b368:	lea    rdx,[rip+0x13bb1]        # 0x14002ef20
   14001b36f:	lea    rcx,[rsp+0x30]
   14001b374:	call   QWORD PTR [rip+0xb78e]        # 0x140026b08
   14001b37a:	lea    rcx,[rsp+0x30]
   14001b37f:	call   QWORD PTR [rip+0xba2b]        # 0x140026db0
   14001b385:	mov    QWORD PTR [rsp+0x50],rax
   14001b38a:	lea    rcx,[rsp+0x40]
   14001b38f:	call   QWORD PTR [rip+0xba1b]        # 0x140026db0
   14001b395:	mov    rcx,QWORD PTR [rsp+0x50]
   14001b39a:	mov    r9,rcx
   14001b39d:	mov    r8,rax
   14001b3a0:	mov    rdx,0xffffffff80000001
   14001b3a7:	lea    rcx,[rsp+0x78]
   14001b3ac:	call   0x14000c9c0
   14001b3b1:	nop
   14001b3b2:	lea    rcx,[rsp+0x78]
   14001b3b7:	call   0x14000a520
   14001b3bc:	mov    rdx,rax
   14001b3bf:	lea    rcx,[rsp+0x28]
   14001b3c4:	call   QWORD PTR [rip+0xb99e]        # 0x140026d68
   14001b3ca:	nop
   14001b3cb:	lea    rcx,[rsp+0x28]
   14001b3d0:	call   QWORD PTR [rip+0xb4ea]        # 0x1400268c0
   14001b3d6:	movzx  eax,al
   14001b3d9:	test   eax,eax
   14001b3db:	jne    0x14001b3f6
   14001b3dd:	lea    rcx,[rsp+0x28]
   14001b3e2:	call   QWORD PTR [rip+0xb9c8]        # 0x140026db0
   14001b3e8:	mov    rdx,rax
   14001b3eb:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b3f0:	call   0x14001f520
   14001b3f5:	nop
   14001b3f6:	lea    rcx,[rsp+0x28]
   14001b3fb:	call   QWORD PTR [rip+0xb95f]        # 0x140026d60
   14001b401:	nop
   14001b402:	lea    rcx,[rsp+0x78]
   14001b407:	call   0x140009e60
   14001b40c:	nop
   14001b40d:	lea    rcx,[rsp+0x30]
   14001b412:	call   QWORD PTR [rip+0xb948]        # 0x140026d60
   14001b418:	jmp    0x14001b2ff
   14001b41d:	lea    rcx,[rsp+0x40]
   14001b422:	call   QWORD PTR [rip+0xb938]        # 0x140026d60
   14001b428:	nop
   14001b429:	lea    rcx,[rsp+0x48]
   14001b42e:	call   QWORD PTR [rip+0xb92c]        # 0x140026d60
   14001b434:	add    rsp,0x98
   14001b43b:	ret    
   14001b43c:	int3   
   14001b43d:	int3   
   14001b43e:	int3   
   14001b43f:	int3   
   14001b440:	int3   
   14001b441:	int3   
   14001b442:	int3   
   14001b443:	int3   
   14001b444:	int3   
   14001b445:	int3   
   14001b446:	int3   
   14001b447:	int3   
   14001b448:	int3   
   14001b449:	int3   
   14001b44a:	int3   
   14001b44b:	int3   
   14001b44c:	int3   
   14001b44d:	int3   
   14001b44e:	int3   
   14001b44f:	int3   
   14001b450:	mov    DWORD PTR [rsp+0x10],edx
   14001b454:	mov    QWORD PTR [rsp+0x8],rcx
   14001b459:	sub    rsp,0x28
   14001b45d:	mov    rax,QWORD PTR [rsp+0x30]
   14001b462:	add    rax,0xb0
   14001b468:	mov    edx,DWORD PTR [rsp+0x38]
   14001b46c:	mov    rcx,rax
   14001b46f:	call   0x1400201b0
   14001b474:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b479:	call   0x14001b0c0
   14001b47e:	add    rsp,0x28
   14001b482:	ret    
   14001b483:	int3   
   14001b484:	int3   
   14001b485:	int3   
   14001b486:	int3   
   14001b487:	int3   
   14001b488:	int3   
   14001b489:	int3   
   14001b48a:	int3   
   14001b48b:	int3   
   14001b48c:	int3   
   14001b48d:	int3   
   14001b48e:	int3   
   14001b48f:	int3   
   14001b490:	mov    QWORD PTR [rsp+0x8],rcx
   14001b495:	sub    rsp,0x28
   14001b499:	mov    rax,QWORD PTR [rsp+0x30]
   14001b49e:	add    rax,0xb0
   14001b4a4:	mov    rcx,rax
   14001b4a7:	call   0x1400201d0
   14001b4ac:	add    rsp,0x28
   14001b4b0:	ret    
   14001b4b1:	int3   
   14001b4b2:	int3   
   14001b4b3:	int3   
   14001b4b4:	int3   
   14001b4b5:	int3   
   14001b4b6:	int3   
   14001b4b7:	int3   
   14001b4b8:	int3   
   14001b4b9:	int3   
   14001b4ba:	int3   
   14001b4bb:	int3   
   14001b4bc:	int3   
   14001b4bd:	int3   
   14001b4be:	int3   
   14001b4bf:	int3   
   14001b4c0:	mov    DWORD PTR [rsp+0x10],edx
   14001b4c4:	mov    QWORD PTR [rsp+0x8],rcx
   14001b4c9:	mov    rax,QWORD PTR [rsp+0x8]
   14001b4ce:	mov    ecx,DWORD PTR [rsp+0x10]
   14001b4d2:	mov    DWORD PTR [rax+0xa8],ecx
   14001b4d8:	ret    
   14001b4d9:	int3   
   14001b4da:	int3   
   14001b4db:	int3   
   14001b4dc:	int3   
   14001b4dd:	int3   
   14001b4de:	int3   
   14001b4df:	int3   
   14001b4e0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b4e5:	mov    rax,QWORD PTR [rsp+0x8]
   14001b4ea:	mov    eax,DWORD PTR [rax+0xa8]
   14001b4f0:	ret    
   14001b4f1:	int3   
   14001b4f2:	int3   
   14001b4f3:	int3   
   14001b4f4:	int3   
   14001b4f5:	int3   
   14001b4f6:	int3   
   14001b4f7:	int3   
   14001b4f8:	int3   
   14001b4f9:	int3   
   14001b4fa:	int3   
   14001b4fb:	int3   
   14001b4fc:	int3   
   14001b4fd:	int3   
   14001b4fe:	int3   
   14001b4ff:	int3   
   14001b500:	mov    QWORD PTR [rsp+0x10],rdx
   14001b505:	mov    QWORD PTR [rsp+0x8],rcx
   14001b50a:	sub    rsp,0x38
   14001b50e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001b517:	mov    DWORD PTR [rsp+0x20],0x0
   14001b51f:	mov    rax,QWORD PTR [rsp+0x40]
   14001b524:	add    rax,0xb0
   14001b52a:	mov    rcx,rax
   14001b52d:	call   0x14001f9c0
   14001b532:	mov    rdx,rax
   14001b535:	mov    rcx,QWORD PTR [rsp+0x48]
   14001b53a:	call   QWORD PTR [rip+0xb828]        # 0x140026d68
   14001b540:	nop
   14001b541:	mov    eax,DWORD PTR [rsp+0x20]
   14001b545:	or     eax,0x1
   14001b548:	mov    DWORD PTR [rsp+0x20],eax
   14001b54c:	mov    rax,QWORD PTR [rsp+0x48]
   14001b551:	add    rsp,0x38
   14001b555:	ret    
   14001b556:	int3   
   14001b557:	int3   
   14001b558:	int3   
   14001b559:	int3   
   14001b55a:	int3   
   14001b55b:	int3   
   14001b55c:	int3   
   14001b55d:	int3   
   14001b55e:	int3   
   14001b55f:	int3   
   14001b560:	mov    QWORD PTR [rsp+0x8],rcx
   14001b565:	sub    rsp,0x28
   14001b569:	mov    rax,QWORD PTR [rsp+0x30]
   14001b56e:	add    rax,0x90
   14001b574:	mov    rcx,rax
   14001b577:	call   QWORD PTR [rip+0xb833]        # 0x140026db0
   14001b57d:	add    rsp,0x28
   14001b581:	ret    
   14001b582:	int3   
   14001b583:	int3   
   14001b584:	int3   
   14001b585:	int3   
   14001b586:	int3   
   14001b587:	int3   
   14001b588:	int3   
   14001b589:	int3   
   14001b58a:	int3   
   14001b58b:	int3   
   14001b58c:	int3   
   14001b58d:	int3   
   14001b58e:	int3   
   14001b58f:	int3   
   14001b590:	mov    QWORD PTR [rsp+0x8],rcx
   14001b595:	sub    rsp,0x28
   14001b599:	mov    rax,QWORD PTR [rsp+0x30]
   14001b59e:	add    rax,0x98
   14001b5a4:	mov    rcx,rax
   14001b5a7:	call   QWORD PTR [rip+0xb803]        # 0x140026db0
   14001b5ad:	add    rsp,0x28
   14001b5b1:	ret    
   14001b5b2:	int3   
   14001b5b3:	int3   
   14001b5b4:	int3   
   14001b5b5:	int3   
   14001b5b6:	int3   
   14001b5b7:	int3   
   14001b5b8:	int3   
   14001b5b9:	int3   
   14001b5ba:	int3   
   14001b5bb:	int3   
   14001b5bc:	int3   
   14001b5bd:	int3   
   14001b5be:	int3   
   14001b5bf:	int3   
   14001b5c0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b5c5:	sub    rsp,0x28
   14001b5c9:	mov    rax,QWORD PTR [rsp+0x30]
   14001b5ce:	add    rax,0xa0
   14001b5d4:	mov    rcx,rax
   14001b5d7:	call   QWORD PTR [rip+0xb7d3]        # 0x140026db0
   14001b5dd:	add    rsp,0x28
   14001b5e1:	ret    
   14001b5e2:	int3   
   14001b5e3:	int3   
   14001b5e4:	int3   
   14001b5e5:	int3   
   14001b5e6:	int3   
   14001b5e7:	int3   
   14001b5e8:	int3   
   14001b5e9:	int3   
   14001b5ea:	int3   
   14001b5eb:	int3   
   14001b5ec:	int3   
   14001b5ed:	int3   
   14001b5ee:	int3   
   14001b5ef:	int3   
   14001b5f0:	mov    QWORD PTR [rsp+0x10],rdx
   14001b5f5:	mov    QWORD PTR [rsp+0x8],rcx
   14001b5fa:	sub    rsp,0x68
   14001b5fe:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001b607:	mov    DWORD PTR [rsp+0x20],0x0
   14001b60f:	lea    rcx,[rsp+0x28]
   14001b614:	call   QWORD PTR [rip+0xb766]        # 0x140026d80
   14001b61a:	nop
   14001b61b:	mov    rax,QWORD PTR [rsp+0x70]
   14001b620:	lea    rdx,[rsp+0x30]
   14001b625:	mov    rcx,rax
   14001b628:	call   0x1400054c0
   14001b62d:	jmp    0x14001b641
   14001b62f:	xor    r8d,r8d
   14001b632:	lea    rdx,[rsp+0x50]
   14001b637:	lea    rcx,[rsp+0x30]
   14001b63c:	call   0x140005210
   14001b641:	mov    rax,QWORD PTR [rsp+0x70]
   14001b646:	lea    rdx,[rsp+0x58]
   14001b64b:	mov    rcx,rax
   14001b64e:	call   0x140005500
   14001b653:	mov    rdx,rax
   14001b656:	lea    rcx,[rsp+0x30]
   14001b65b:	call   0x140005a90
   14001b660:	movzx  eax,al
   14001b663:	test   eax,eax
   14001b665:	je     0x14001b6d2
   14001b667:	lea    rcx,[rsp+0x30]
   14001b66c:	call   0x1400051f0
   14001b671:	mov    QWORD PTR [rsp+0x40],rax
   14001b676:	lea    r8,[rip+0x13d2b]        # 0x14002f3a8
   14001b67d:	lea    rdx,[rsp+0x38]
   14001b682:	mov    rcx,QWORD PTR [rsp+0x40]
   14001b687:	call   0x14001f240
   14001b68c:	nop
   14001b68d:	lea    rcx,[rsp+0x28]
   14001b692:	call   QWORD PTR [rip+0xb228]        # 0x1400268c0
   14001b698:	movzx  eax,al
   14001b69b:	test   eax,eax
   14001b69d:	jne    0x14001b6b1
   14001b69f:	lea    rdx,[rip+0x13d9e]        # 0x14002f444
   14001b6a6:	lea    rcx,[rsp+0x28]
   14001b6ab:	call   QWORD PTR [rip+0xb69f]        # 0x140026d50
   14001b6b1:	lea    rdx,[rsp+0x38]
   14001b6b6:	lea    rcx,[rsp+0x28]
   14001b6bb:	call   QWORD PTR [rip+0xb1f7]        # 0x1400268b8
   14001b6c1:	nop
   14001b6c2:	lea    rcx,[rsp+0x38]
   14001b6c7:	call   QWORD PTR [rip+0xb693]        # 0x140026d60
   14001b6cd:	jmp    0x14001b62f
   14001b6d2:	lea    rdx,[rsp+0x28]
   14001b6d7:	mov    rcx,QWORD PTR [rsp+0x78]
   14001b6dc:	call   QWORD PTR [rip+0xb68e]        # 0x140026d70
   14001b6e2:	mov    eax,DWORD PTR [rsp+0x20]
   14001b6e6:	or     eax,0x1
   14001b6e9:	mov    DWORD PTR [rsp+0x20],eax
   14001b6ed:	lea    rcx,[rsp+0x28]
   14001b6f2:	call   QWORD PTR [rip+0xb668]        # 0x140026d60
   14001b6f8:	mov    rax,QWORD PTR [rsp+0x78]
   14001b6fd:	add    rsp,0x68
   14001b701:	ret    
   14001b702:	int3   
   14001b703:	int3   
   14001b704:	int3   
   14001b705:	int3   
   14001b706:	int3   
   14001b707:	int3   
   14001b708:	int3   
   14001b709:	int3   
   14001b70a:	int3   
   14001b70b:	int3   
   14001b70c:	int3   
   14001b70d:	int3   
   14001b70e:	int3   
   14001b70f:	int3   
   14001b710:	mov    QWORD PTR [rsp+0x8],rcx
   14001b715:	sub    rsp,0x68
   14001b719:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001b722:	mov    BYTE PTR [rsp+0x20],0x0
   14001b727:	mov    rax,QWORD PTR [rsp+0x70]
   14001b72c:	lea    rdx,[rsp+0x28]
   14001b731:	mov    rcx,rax
   14001b734:	call   0x1400054c0
   14001b739:	jmp    0x14001b74d
   14001b73b:	xor    r8d,r8d
   14001b73e:	lea    rdx,[rsp+0x48]
   14001b743:	lea    rcx,[rsp+0x28]
   14001b748:	call   0x140005210
   14001b74d:	mov    rax,QWORD PTR [rsp+0x70]
   14001b752:	lea    rdx,[rsp+0x50]
   14001b757:	mov    rcx,rax
   14001b75a:	call   0x140005500
   14001b75f:	mov    rdx,rax
   14001b762:	lea    rcx,[rsp+0x28]
   14001b767:	call   0x140005a90
   14001b76c:	movzx  eax,al
   14001b76f:	test   eax,eax
   14001b771:	je     0x14001b7cc
   14001b773:	lea    rcx,[rsp+0x28]
   14001b778:	call   0x1400051f0
   14001b77d:	mov    QWORD PTR [rsp+0x38],rax
   14001b782:	mov    rcx,QWORD PTR [rsp+0x70]
   14001b787:	call   0x14001b5c0
   14001b78c:	mov    r8,rax
   14001b78f:	lea    rdx,[rsp+0x30]
   14001b794:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b799:	call   0x14001f240
   14001b79e:	nop
   14001b79f:	lea    rcx,[rsp+0x30]
   14001b7a4:	call   QWORD PTR [rip+0xb606]        # 0x140026db0
   14001b7aa:	mov    rcx,rax
   14001b7ad:	call   QWORD PTR [rip+0xad5d]        # 0x140026510
   14001b7b3:	test   eax,eax
   14001b7b5:	jne    0x14001b7bc
   14001b7b7:	mov    BYTE PTR [rsp+0x20],0x1
   14001b7bc:	lea    rcx,[rsp+0x30]
   14001b7c1:	call   QWORD PTR [rip+0xb599]        # 0x140026d60
   14001b7c7:	jmp    0x14001b73b
   14001b7cc:	movzx  eax,BYTE PTR [rsp+0x20]
   14001b7d1:	add    rsp,0x68
   14001b7d5:	ret    
   14001b7d6:	int3   
   14001b7d7:	int3   
   14001b7d8:	int3   
   14001b7d9:	int3   
   14001b7da:	int3   
   14001b7db:	int3   
   14001b7dc:	int3   
   14001b7dd:	int3   
   14001b7de:	int3   
   14001b7df:	int3   
   14001b7e0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b7e5:	mov    rax,QWORD PTR [rsp+0x8]
   14001b7ea:	ret    
   14001b7eb:	int3   
   14001b7ec:	int3   
   14001b7ed:	int3   
   14001b7ee:	int3   
   14001b7ef:	int3   
   14001b7f0:	int3   
   14001b7f1:	int3   
   14001b7f2:	int3   
   14001b7f3:	int3   
   14001b7f4:	int3   
   14001b7f5:	int3   
   14001b7f6:	int3   
   14001b7f7:	int3   
   14001b7f8:	int3   
   14001b7f9:	int3   
   14001b7fa:	int3   
   14001b7fb:	int3   
   14001b7fc:	int3   
   14001b7fd:	int3   
   14001b7fe:	int3   
   14001b7ff:	int3   
   14001b800:	mov    QWORD PTR [rsp+0x8],rcx
   14001b805:	mov    rax,QWORD PTR [rsp+0x8]
   14001b80a:	add    rax,0x58
   14001b80e:	ret    
   14001b80f:	int3   
   14001b810:	int3   
   14001b811:	int3   
   14001b812:	int3   
   14001b813:	int3   
   14001b814:	int3   
   14001b815:	int3   
   14001b816:	int3   
   14001b817:	int3   
   14001b818:	int3   
   14001b819:	int3   
   14001b81a:	int3   
   14001b81b:	int3   
   14001b81c:	int3   
   14001b81d:	int3   
   14001b81e:	int3   
   14001b81f:	int3   
   14001b820:	mov    QWORD PTR [rsp+0x8],rcx
   14001b825:	sub    rsp,0x28
   14001b829:	mov    rax,QWORD PTR [rsp+0x30]
   14001b82e:	add    rax,0x58
   14001b832:	mov    rcx,rax
   14001b835:	call   0x140018490
   14001b83a:	add    rsp,0x28
   14001b83e:	ret    
   14001b83f:	int3   
   14001b840:	int3   
   14001b841:	int3   
   14001b842:	int3   
   14001b843:	int3   
   14001b844:	int3   
   14001b845:	int3   
   14001b846:	int3   
   14001b847:	int3   
   14001b848:	int3   
   14001b849:	int3   
   14001b84a:	int3   
   14001b84b:	int3   
   14001b84c:	int3   
   14001b84d:	int3   
   14001b84e:	int3   
   14001b84f:	int3   
   14001b850:	mov    QWORD PTR [rsp+0x8],rcx
   14001b855:	sub    rsp,0x28
   14001b859:	mov    rax,QWORD PTR [rsp+0x30]
   14001b85e:	mov    rcx,rax
   14001b861:	call   0x1400178e0
   14001b866:	add    rsp,0x28
   14001b86a:	ret    
   14001b86b:	int3   
   14001b86c:	int3   
   14001b86d:	int3   
   14001b86e:	int3   
   14001b86f:	int3   
   14001b870:	int3   
   14001b871:	int3   
   14001b872:	int3   
   14001b873:	int3   
   14001b874:	int3   
   14001b875:	int3   
   14001b876:	int3   
   14001b877:	int3   
   14001b878:	int3   
   14001b879:	int3   
   14001b87a:	int3   
   14001b87b:	int3   
   14001b87c:	int3   
   14001b87d:	int3   
   14001b87e:	int3   
   14001b87f:	int3   
   14001b880:	mov    BYTE PTR [rsp+0x10],dl
   14001b884:	mov    QWORD PTR [rsp+0x8],rcx
   14001b889:	sub    rsp,0x28
   14001b88d:	mov    rax,QWORD PTR [rsp+0x30]
   14001b892:	movzx  edx,BYTE PTR [rsp+0x38]
   14001b897:	mov    rcx,rax
   14001b89a:	call   0x140017900
   14001b89f:	add    rsp,0x28
   14001b8a3:	ret    
   14001b8a4:	int3   
   14001b8a5:	int3   
   14001b8a6:	int3   
   14001b8a7:	int3   
   14001b8a8:	int3   
   14001b8a9:	int3   
   14001b8aa:	int3   
   14001b8ab:	int3   
   14001b8ac:	int3   
   14001b8ad:	int3   
   14001b8ae:	int3   
   14001b8af:	int3   
   14001b8b0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b8b5:	sub    rsp,0x28
   14001b8b9:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b8be:	call   0x14001b490
   14001b8c3:	cmp    eax,0x2
   14001b8c6:	jne    0x14001b8dc
   14001b8c8:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b8cd:	call   0x14001b800
   14001b8d2:	mov    rcx,rax
   14001b8d5:	call   0x140018400
   14001b8da:	jmp    0x14001b8ee
   14001b8dc:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b8e1:	call   0x14001b800
   14001b8e6:	mov    rcx,rax
   14001b8e9:	call   0x1400183a0
   14001b8ee:	add    rsp,0x28
   14001b8f2:	ret    
   14001b8f3:	int3   
   14001b8f4:	int3   
   14001b8f5:	int3   
   14001b8f6:	int3   
   14001b8f7:	int3   
   14001b8f8:	int3   
   14001b8f9:	int3   
   14001b8fa:	int3   
   14001b8fb:	int3   
   14001b8fc:	int3   
   14001b8fd:	int3   
   14001b8fe:	int3   
   14001b8ff:	int3   
   14001b900:	mov    QWORD PTR [rsp+0x8],rcx
   14001b905:	sub    rsp,0x48
   14001b909:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001b912:	mov    rcx,QWORD PTR [rsp+0x50]
   14001b917:	call   0x14001b8b0
   14001b91c:	mov    rdx,rax
   14001b91f:	lea    rcx,[rsp+0x30]
   14001b924:	call   QWORD PTR [rip+0xb43e]        # 0x140026d68
   14001b92a:	nop
   14001b92b:	lea    rdx,[rip+0x135f6]        # 0x14002ef28
   14001b932:	lea    rcx,[rsp+0x30]
   14001b937:	call   0x140002c50
   14001b93c:	movzx  eax,al
   14001b93f:	test   eax,eax
   14001b941:	je     0x14001b95c
   14001b943:	mov    DWORD PTR [rsp+0x20],0x3
   14001b94b:	lea    rcx,[rsp+0x30]
   14001b950:	call   QWORD PTR [rip+0xb40a]        # 0x140026d60
   14001b956:	mov    eax,DWORD PTR [rsp+0x20]
   14001b95a:	jmp    0x14001b9d5
   14001b95c:	lea    rdx,[rip+0x135d5]        # 0x14002ef38
   14001b963:	lea    rcx,[rsp+0x30]
   14001b968:	call   0x140002c50
   14001b96d:	movzx  eax,al
   14001b970:	test   eax,eax
   14001b972:	je     0x14001b98d
   14001b974:	mov    DWORD PTR [rsp+0x24],0x0
   14001b97c:	lea    rcx,[rsp+0x30]
   14001b981:	call   QWORD PTR [rip+0xb3d9]        # 0x140026d60
   14001b987:	mov    eax,DWORD PTR [rsp+0x24]
   14001b98b:	jmp    0x14001b9d5
   14001b98d:	lea    rdx,[rip+0x135bc]        # 0x14002ef50
   14001b994:	lea    rcx,[rsp+0x30]
   14001b999:	call   0x140002c50
   14001b99e:	movzx  eax,al
   14001b9a1:	test   eax,eax
   14001b9a3:	je     0x14001b9be
   14001b9a5:	mov    DWORD PTR [rsp+0x28],0x1
   14001b9ad:	lea    rcx,[rsp+0x30]
   14001b9b2:	call   QWORD PTR [rip+0xb3a8]        # 0x140026d60
   14001b9b8:	mov    eax,DWORD PTR [rsp+0x28]
   14001b9bc:	jmp    0x14001b9d5
   14001b9be:	mov    DWORD PTR [rsp+0x2c],0x4
   14001b9c6:	lea    rcx,[rsp+0x30]
   14001b9cb:	call   QWORD PTR [rip+0xb38f]        # 0x140026d60
   14001b9d1:	mov    eax,DWORD PTR [rsp+0x2c]
   14001b9d5:	add    rsp,0x48
   14001b9d9:	ret    
   14001b9da:	int3   
   14001b9db:	int3   
   14001b9dc:	int3   
   14001b9dd:	int3   
   14001b9de:	int3   
   14001b9df:	int3   
   14001b9e0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b9e5:	mov    rax,QWORD PTR [rsp+0x8]
   14001b9ea:	movzx  eax,BYTE PTR [rax+0xe0]
   14001b9f1:	ret    
   14001b9f2:	int3   
   14001b9f3:	int3   
   14001b9f4:	int3   
   14001b9f5:	int3   
   14001b9f6:	int3   
   14001b9f7:	int3   
   14001b9f8:	int3   
   14001b9f9:	int3   
   14001b9fa:	int3   
   14001b9fb:	int3   
   14001b9fc:	int3   
   14001b9fd:	int3   
   14001b9fe:	int3   
   14001b9ff:	int3   
   14001ba00:	mov    QWORD PTR [rsp+0x10],rdx
   14001ba05:	mov    QWORD PTR [rsp+0x8],rcx
   14001ba0a:	sub    rsp,0x28
   14001ba0e:	mov    rax,QWORD PTR [rsp+0x30]
   14001ba13:	add    rax,0xd8
   14001ba19:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ba1e:	mov    rcx,rax
   14001ba21:	call   QWORD PTR [rip+0xae79]        # 0x1400268a0
   14001ba27:	add    rsp,0x28
   14001ba2b:	ret    
   14001ba2c:	int3   
   14001ba2d:	int3   
   14001ba2e:	int3   
   14001ba2f:	int3   
   14001ba30:	int3   
   14001ba31:	int3   
   14001ba32:	int3   
   14001ba33:	int3   
   14001ba34:	int3   
   14001ba35:	int3   
   14001ba36:	int3   
   14001ba37:	int3   
   14001ba38:	int3   
   14001ba39:	int3   
   14001ba3a:	int3   
   14001ba3b:	int3   
   14001ba3c:	int3   
   14001ba3d:	int3   
   14001ba3e:	int3   
   14001ba3f:	int3   
   14001ba40:	mov    QWORD PTR [rsp+0x8],rcx
   14001ba45:	sub    rsp,0x38
   14001ba49:	mov    rax,QWORD PTR [rsp+0x40]
   14001ba4e:	add    rax,0xd8
   14001ba54:	lea    rdx,[rip+0x13535]        # 0x14002ef90
   14001ba5b:	mov    rcx,rax
   14001ba5e:	call   0x140002c50
   14001ba63:	movzx  eax,al
   14001ba66:	test   eax,eax
   14001ba68:	je     0x14001ba71
   14001ba6a:	mov    BYTE PTR [rsp+0x20],0x1
   14001ba6f:	jmp    0x14001ba76
   14001ba71:	mov    BYTE PTR [rsp+0x20],0x0
   14001ba76:	movzx  eax,BYTE PTR [rsp+0x20]
   14001ba7b:	add    rsp,0x38
   14001ba7f:	ret    
   14001ba80:	int3   
   14001ba81:	int3   
   14001ba82:	int3   
   14001ba83:	int3   
   14001ba84:	int3   
   14001ba85:	int3   
   14001ba86:	int3   
   14001ba87:	int3   
   14001ba88:	int3   
   14001ba89:	int3   
   14001ba8a:	int3   
   14001ba8b:	int3   
   14001ba8c:	int3   
   14001ba8d:	int3   
   14001ba8e:	int3   
   14001ba8f:	int3   
   14001ba90:	mov    QWORD PTR [rsp+0x8],rcx
   14001ba95:	sub    rsp,0x38
   14001ba99:	mov    rax,QWORD PTR [rsp+0x40]
   14001ba9e:	add    rax,0xd8
   14001baa4:	lea    rdx,[rip+0x134ed]        # 0x14002ef98
   14001baab:	mov    rcx,rax
   14001baae:	call   0x140002c50
   14001bab3:	movzx  eax,al
   14001bab6:	test   eax,eax
   14001bab8:	je     0x14001bac1
   14001baba:	mov    BYTE PTR [rsp+0x20],0x1
   14001babf:	jmp    0x14001bac6
   14001bac1:	mov    BYTE PTR [rsp+0x20],0x0
   14001bac6:	movzx  eax,BYTE PTR [rsp+0x20]
   14001bacb:	add    rsp,0x38
   14001bacf:	ret    
   14001bad0:	int3   
   14001bad1:	int3   
   14001bad2:	int3   
   14001bad3:	int3   
   14001bad4:	int3   
   14001bad5:	int3   
   14001bad6:	int3   
   14001bad7:	int3   
   14001bad8:	int3   
   14001bad9:	int3   
   14001bada:	int3   
   14001badb:	int3   
   14001badc:	int3   
   14001badd:	int3   
   14001bade:	int3   
   14001badf:	int3   
   14001bae0:	mov    QWORD PTR [rsp+0x8],rcx
   14001bae5:	sub    rsp,0x38
   14001bae9:	mov    rax,QWORD PTR [rsp+0x40]
   14001baee:	add    rax,0xd8
   14001baf4:	lea    rdx,[rip+0x134ad]        # 0x14002efa8
   14001bafb:	mov    rcx,rax
   14001bafe:	call   0x140002c50
   14001bb03:	movzx  eax,al
   14001bb06:	test   eax,eax
   14001bb08:	je     0x14001bb11
   14001bb0a:	mov    BYTE PTR [rsp+0x20],0x1
   14001bb0f:	jmp    0x14001bb16
   14001bb11:	mov    BYTE PTR [rsp+0x20],0x0
   14001bb16:	movzx  eax,BYTE PTR [rsp+0x20]
   14001bb1b:	add    rsp,0x38
   14001bb1f:	ret    
   14001bb20:	int3   
   14001bb21:	int3   
   14001bb22:	int3   
   14001bb23:	int3   
   14001bb24:	int3   
   14001bb25:	int3   
   14001bb26:	int3   
   14001bb27:	int3   
   14001bb28:	int3   
   14001bb29:	int3   
   14001bb2a:	int3   
   14001bb2b:	int3   
   14001bb2c:	int3   
   14001bb2d:	int3   
   14001bb2e:	int3   
   14001bb2f:	int3   
   14001bb30:	mov    QWORD PTR [rsp+0x8],rcx
   14001bb35:	sub    rsp,0x28
   14001bb39:	mov    rax,QWORD PTR [rsp+0x30]
   14001bb3e:	add    rax,0xb0
   14001bb44:	mov    rcx,rax
   14001bb47:	call   0x14001fff0
   14001bb4c:	add    rsp,0x28
   14001bb50:	ret    
   14001bb51:	int3   
   14001bb52:	int3   
   14001bb53:	int3   
   14001bb54:	int3   
   14001bb55:	int3   
   14001bb56:	int3   
   14001bb57:	int3   
   14001bb58:	int3   
   14001bb59:	int3   
   14001bb5a:	int3   
   14001bb5b:	int3   
   14001bb5c:	int3   
   14001bb5d:	int3   
   14001bb5e:	int3   
   14001bb5f:	int3   
   14001bb60:	mov    DWORD PTR [rsp+0x10],edx
   14001bb64:	mov    QWORD PTR [rsp+0x8],rcx
   14001bb69:	sub    rsp,0x28
   14001bb6d:	mov    rax,QWORD PTR [rsp+0x30]
   14001bb72:	add    rax,0xb0
   14001bb78:	mov    edx,DWORD PTR [rsp+0x38]
   14001bb7c:	mov    rcx,rax
   14001bb7f:	call   0x14001fdf0
   14001bb84:	add    rsp,0x28
   14001bb88:	ret    
   14001bb89:	int3   
   14001bb8a:	int3   
   14001bb8b:	int3   
   14001bb8c:	int3   
   14001bb8d:	int3   
   14001bb8e:	int3   
   14001bb8f:	int3   
   14001bb90:	mov    QWORD PTR [rsp+0x8],rcx
   14001bb95:	sub    rsp,0x28
   14001bb99:	mov    rax,QWORD PTR [rsp+0x30]
   14001bb9e:	add    rax,0xb0
   14001bba4:	mov    rcx,rax
   14001bba7:	call   0x14001ff20
   14001bbac:	add    rsp,0x28
   14001bbb0:	ret    
   14001bbb1:	int3   
   14001bbb2:	int3   
   14001bbb3:	int3   
   14001bbb4:	int3   
   14001bbb5:	int3   
   14001bbb6:	int3   
   14001bbb7:	int3   
   14001bbb8:	int3   
   14001bbb9:	int3   
   14001bbba:	int3   
   14001bbbb:	int3   
   14001bbbc:	int3   
   14001bbbd:	int3   
   14001bbbe:	int3   
   14001bbbf:	int3   
   14001bbc0:	mov    QWORD PTR [rsp+0x8],rcx
   14001bbc5:	sub    rsp,0x28
   14001bbc9:	mov    rax,QWORD PTR [rsp+0x30]
   14001bbce:	mov    rcx,rax
   14001bbd1:	call   0x140017980
   14001bbd6:	add    rsp,0x28
   14001bbda:	ret    
   14001bbdb:	int3   
   14001bbdc:	int3   
   14001bbdd:	int3   
   14001bbde:	int3   
   14001bbdf:	int3   
   14001bbe0:	int3   
   14001bbe1:	int3   
   14001bbe2:	int3   
   14001bbe3:	int3   
   14001bbe4:	int3   
   14001bbe5:	int3   
   14001bbe6:	int3   
   14001bbe7:	int3   
   14001bbe8:	int3   
   14001bbe9:	int3   
   14001bbea:	int3   
   14001bbeb:	int3   
   14001bbec:	int3   
   14001bbed:	int3   
   14001bbee:	int3   
   14001bbef:	int3   
   14001bbf0:	mov    QWORD PTR [rsp+0x8],rcx
   14001bbf5:	sub    rsp,0x28
   14001bbf9:	mov    rax,QWORD PTR [rsp+0x30]
   14001bbfe:	mov    rcx,rax
   14001bc01:	call   0x1400179e0
   14001bc06:	add    rsp,0x28
   14001bc0a:	ret    
   14001bc0b:	int3   
   14001bc0c:	int3   
   14001bc0d:	int3   
   14001bc0e:	int3   
   14001bc0f:	int3   
   14001bc10:	int3   
   14001bc11:	int3   
   14001bc12:	int3   
   14001bc13:	int3   
   14001bc14:	int3   
   14001bc15:	int3   
   14001bc16:	int3   
   14001bc17:	int3   
   14001bc18:	int3   
   14001bc19:	int3   
   14001bc1a:	int3   
   14001bc1b:	int3   
   14001bc1c:	int3   
   14001bc1d:	int3   
   14001bc1e:	int3   
   14001bc1f:	int3   
   14001bc20:	mov    QWORD PTR [rsp+0x8],rcx
   14001bc25:	sub    rsp,0x28
   14001bc29:	mov    rax,QWORD PTR [rsp+0x30]
   14001bc2e:	mov    rcx,rax
   14001bc31:	call   0x140017a40
   14001bc36:	add    rsp,0x28
   14001bc3a:	ret    
   14001bc3b:	int3   
   14001bc3c:	int3   
   14001bc3d:	int3   
   14001bc3e:	int3   
   14001bc3f:	int3   
   14001bc40:	int3   
   14001bc41:	int3   
   14001bc42:	int3   
   14001bc43:	int3   
   14001bc44:	int3   
   14001bc45:	int3   
   14001bc46:	int3   
   14001bc47:	int3   
   14001bc48:	int3   
   14001bc49:	int3   
   14001bc4a:	int3   
   14001bc4b:	int3   
   14001bc4c:	int3   
   14001bc4d:	int3   
   14001bc4e:	int3   
   14001bc4f:	int3   
   14001bc50:	mov    QWORD PTR [rsp+0x8],rcx
   14001bc55:	sub    rsp,0x28
   14001bc59:	mov    rax,QWORD PTR [rsp+0x30]
   14001bc5e:	mov    rcx,rax
   14001bc61:	call   0x140017aa0
   14001bc66:	add    rsp,0x28
   14001bc6a:	ret    
   14001bc6b:	int3   
   14001bc6c:	int3   
   14001bc6d:	int3   
   14001bc6e:	int3   
   14001bc6f:	int3   
   14001bc70:	int3   
   14001bc71:	int3   
   14001bc72:	int3   
   14001bc73:	int3   
   14001bc74:	int3   
   14001bc75:	int3   
   14001bc76:	int3   
   14001bc77:	int3   
   14001bc78:	int3   
   14001bc79:	int3   
   14001bc7a:	int3   
   14001bc7b:	int3   
   14001bc7c:	int3   
   14001bc7d:	int3   
   14001bc7e:	int3   
   14001bc7f:	int3   
   14001bc80:	mov    QWORD PTR [rsp+0x8],rcx
   14001bc85:	sub    rsp,0x28
   14001bc89:	mov    rax,QWORD PTR [rsp+0x30]
   14001bc8e:	mov    rcx,rax
   14001bc91:	call   0x140017b00
   14001bc96:	add    rsp,0x28
   14001bc9a:	ret    
   14001bc9b:	int3   
   14001bc9c:	int3   
   14001bc9d:	int3   
   14001bc9e:	int3   
   14001bc9f:	int3   
   14001bca0:	int3   
   14001bca1:	int3   
   14001bca2:	int3   
   14001bca3:	int3   
   14001bca4:	int3   
   14001bca5:	int3   
   14001bca6:	int3   
   14001bca7:	int3   
   14001bca8:	int3   
   14001bca9:	int3   
   14001bcaa:	int3   
   14001bcab:	int3   
   14001bcac:	int3   
   14001bcad:	int3   
   14001bcae:	int3   
   14001bcaf:	int3   
   14001bcb0:	mov    QWORD PTR [rsp+0x8],rcx
   14001bcb5:	sub    rsp,0x28
   14001bcb9:	mov    rax,QWORD PTR [rsp+0x30]
   14001bcbe:	mov    rcx,rax
   14001bcc1:	call   0x140017b60
   14001bcc6:	add    rsp,0x28
   14001bcca:	ret    
   14001bccb:	int3   
   14001bccc:	int3   
   14001bccd:	int3   
   14001bcce:	int3   
   14001bccf:	int3   
   14001bcd0:	int3   
   14001bcd1:	int3   
   14001bcd2:	int3   
   14001bcd3:	int3   
   14001bcd4:	int3   
   14001bcd5:	int3   
   14001bcd6:	int3   
   14001bcd7:	int3   
   14001bcd8:	int3   
   14001bcd9:	int3   
   14001bcda:	int3   
   14001bcdb:	int3   
   14001bcdc:	int3   
   14001bcdd:	int3   
   14001bcde:	int3   
   14001bcdf:	int3   
   14001bce0:	mov    QWORD PTR [rsp+0x8],rcx
   14001bce5:	sub    rsp,0x28
   14001bce9:	mov    rax,QWORD PTR [rsp+0x30]
   14001bcee:	add    rax,0x58
   14001bcf2:	mov    rcx,rax
   14001bcf5:	call   0x140018460
   14001bcfa:	add    rsp,0x28
   14001bcfe:	ret    
   14001bcff:	int3   
   14001bd00:	int3   
   14001bd01:	int3   
   14001bd02:	int3   
   14001bd03:	int3   
   14001bd04:	int3   
   14001bd05:	int3   
   14001bd06:	int3   
   14001bd07:	int3   
   14001bd08:	int3   
   14001bd09:	int3   
   14001bd0a:	int3   
   14001bd0b:	int3   
   14001bd0c:	int3   
   14001bd0d:	int3   
   14001bd0e:	int3   
   14001bd0f:	int3   
   14001bd10:	mov    QWORD PTR [rsp+0x8],rcx
   14001bd15:	sub    rsp,0x28
   14001bd19:	mov    rax,QWORD PTR [rsp+0x30]
   14001bd1e:	mov    rcx,rax
   14001bd21:	call   0x140017bc0
   14001bd26:	add    rsp,0x28
   14001bd2a:	ret    
   14001bd2b:	int3   
   14001bd2c:	int3   
   14001bd2d:	int3   
   14001bd2e:	int3   
   14001bd2f:	int3   
   14001bd30:	int3   
   14001bd31:	int3   
   14001bd32:	int3   
   14001bd33:	int3   
   14001bd34:	int3   
   14001bd35:	int3   
   14001bd36:	int3   
   14001bd37:	int3   
   14001bd38:	int3   
   14001bd39:	int3   
   14001bd3a:	int3   
   14001bd3b:	int3   
   14001bd3c:	int3   
   14001bd3d:	int3   
   14001bd3e:	int3   
   14001bd3f:	int3   
   14001bd40:	mov    QWORD PTR [rsp+0x18],r8
   14001bd45:	mov    QWORD PTR [rsp+0x10],rdx
   14001bd4a:	mov    QWORD PTR [rsp+0x8],rcx
   14001bd4f:	sub    rsp,0x48
   14001bd53:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001bd5c:	mov    DWORD PTR [rsp+0x20],0x0
   14001bd64:	mov    rax,QWORD PTR [rsp+0x50]
   14001bd69:	add    rax,0xa0
   14001bd6f:	mov    r9d,0x1
   14001bd75:	xor    r8d,r8d
   14001bd78:	lea    rdx,[rsp+0x30]
   14001bd7d:	mov    rcx,rax
   14001bd80:	call   QWORD PTR [rip+0xab02]        # 0x140026888
   14001bd86:	nop
   14001bd87:	lea    rcx,[rsp+0x28]
   14001bd8c:	call   QWORD PTR [rip+0xafee]        # 0x140026d80
   14001bd92:	nop
   14001bd93:	mov    r8,QWORD PTR [rsp+0x30]
   14001bd98:	mov    rdx,QWORD PTR [rsp+0x60]
   14001bd9d:	lea    rcx,[rsp+0x28]
   14001bda2:	call   QWORD PTR [rip+0xad60]        # 0x140026b08
   14001bda8:	lea    rdx,[rsp+0x28]
   14001bdad:	mov    rcx,QWORD PTR [rsp+0x58]
   14001bdb2:	call   QWORD PTR [rip+0xafb8]        # 0x140026d70
   14001bdb8:	mov    eax,DWORD PTR [rsp+0x20]
   14001bdbc:	or     eax,0x1
   14001bdbf:	mov    DWORD PTR [rsp+0x20],eax
   14001bdc3:	lea    rcx,[rsp+0x28]
   14001bdc8:	call   QWORD PTR [rip+0xaf92]        # 0x140026d60
   14001bdce:	nop
   14001bdcf:	lea    rcx,[rsp+0x30]
   14001bdd4:	call   QWORD PTR [rip+0xaf86]        # 0x140026d60
   14001bdda:	mov    rax,QWORD PTR [rsp+0x58]
   14001bddf:	add    rsp,0x48
   14001bde3:	ret    
   14001bde4:	int3   
   14001bde5:	int3   
   14001bde6:	int3   
   14001bde7:	int3   
   14001bde8:	int3   
   14001bde9:	int3   
   14001bdea:	int3   
   14001bdeb:	int3   
   14001bdec:	int3   
   14001bded:	int3   
   14001bdee:	int3   
   14001bdef:	int3   
   14001bdf0:	mov    QWORD PTR [rsp+0x18],r8
   14001bdf5:	mov    QWORD PTR [rsp+0x10],rdx
   14001bdfa:	mov    QWORD PTR [rsp+0x8],rcx
   14001bdff:	sub    rsp,0x58
   14001be03:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001be0c:	mov    DWORD PTR [rsp+0x20],0x0
   14001be14:	mov    rcx,QWORD PTR [rsp+0x60]
   14001be19:	call   0x14001d040
   14001be1e:	mov    QWORD PTR [rsp+0x30],rax
   14001be23:	cvtsi2sd xmm0,QWORD PTR [rsp+0x30]
   14001be2a:	divsd  xmm0,QWORD PTR [rip+0x14986]        # 0x1400307b8
   14001be32:	movsd  QWORD PTR [rsp+0x38],xmm0
   14001be38:	lea    rcx,[rsp+0x28]
   14001be3d:	call   QWORD PTR [rip+0xaf3d]        # 0x140026d80
   14001be43:	nop
   14001be44:	movsd  xmm2,QWORD PTR [rsp+0x38]
   14001be4a:	movq   r8,xmm2
   14001be4f:	mov    rdx,QWORD PTR [rsp+0x70]
   14001be54:	lea    rcx,[rsp+0x28]
   14001be59:	call   QWORD PTR [rip+0xaca9]        # 0x140026b08
   14001be5f:	lea    rdx,[rsp+0x28]
   14001be64:	mov    rcx,QWORD PTR [rsp+0x68]
   14001be69:	call   QWORD PTR [rip+0xaf01]        # 0x140026d70
   14001be6f:	mov    eax,DWORD PTR [rsp+0x20]
   14001be73:	or     eax,0x1
   14001be76:	mov    DWORD PTR [rsp+0x20],eax
   14001be7a:	lea    rcx,[rsp+0x28]
   14001be7f:	call   QWORD PTR [rip+0xaedb]        # 0x140026d60
   14001be85:	mov    rax,QWORD PTR [rsp+0x68]
   14001be8a:	add    rsp,0x58
   14001be8e:	ret    
   14001be8f:	int3   
   14001be90:	int3   
   14001be91:	int3   
   14001be92:	int3   
   14001be93:	int3   
   14001be94:	int3   
   14001be95:	int3   
   14001be96:	int3   
   14001be97:	int3   
   14001be98:	int3   
   14001be99:	int3   
   14001be9a:	int3   
   14001be9b:	int3   
   14001be9c:	int3   
   14001be9d:	int3   
   14001be9e:	int3   
   14001be9f:	int3   
   14001bea0:	mov    QWORD PTR [rsp+0x18],r8
   14001bea5:	mov    QWORD PTR [rsp+0x10],rdx
   14001beaa:	mov    QWORD PTR [rsp+0x8],rcx
   14001beaf:	sub    rsp,0x58
   14001beb3:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001bebc:	mov    DWORD PTR [rsp+0x20],0x0
   14001bec4:	mov    rcx,QWORD PTR [rsp+0x60]
   14001bec9:	call   0x14001c0a0
   14001bece:	mov    QWORD PTR [rsp+0x30],rax
   14001bed3:	cvtsi2sd xmm0,QWORD PTR [rsp+0x30]
   14001beda:	divsd  xmm0,QWORD PTR [rip+0x148d6]        # 0x1400307b8
   14001bee2:	movsd  QWORD PTR [rsp+0x38],xmm0
   14001bee8:	lea    rcx,[rsp+0x28]
   14001beed:	call   QWORD PTR [rip+0xae8d]        # 0x140026d80
   14001bef3:	nop
   14001bef4:	movsd  xmm2,QWORD PTR [rsp+0x38]
   14001befa:	movq   r8,xmm2
   14001beff:	mov    rdx,QWORD PTR [rsp+0x70]
   14001bf04:	lea    rcx,[rsp+0x28]
   14001bf09:	call   QWORD PTR [rip+0xabf9]        # 0x140026b08
   14001bf0f:	mov    dl,0x1
   14001bf11:	lea    rcx,[rip+0x13050]        # 0x14002ef68
   14001bf18:	call   0x140017250
   14001bf1d:	mov    dl,0x1
   14001bf1f:	mov    rcx,QWORD PTR [rsp+0x70]
   14001bf24:	call   0x140017250
   14001bf29:	lea    rcx,[rsp+0x28]
   14001bf2e:	call   QWORD PTR [rip+0xae7c]        # 0x140026db0
   14001bf34:	mov    dl,0x1
   14001bf36:	mov    rcx,rax
   14001bf39:	call   0x140017250
   14001bf3e:	lea    rdx,[rsp+0x28]
   14001bf43:	mov    rcx,QWORD PTR [rsp+0x68]
   14001bf48:	call   QWORD PTR [rip+0xae22]        # 0x140026d70
   14001bf4e:	mov    eax,DWORD PTR [rsp+0x20]
   14001bf52:	or     eax,0x1
   14001bf55:	mov    DWORD PTR [rsp+0x20],eax
   14001bf59:	lea    rcx,[rsp+0x28]
   14001bf5e:	call   QWORD PTR [rip+0xadfc]        # 0x140026d60
   14001bf64:	mov    rax,QWORD PTR [rsp+0x68]
   14001bf69:	add    rsp,0x58
   14001bf6d:	ret    
   14001bf6e:	int3   
   14001bf6f:	int3   
   14001bf70:	int3   
   14001bf71:	int3   
   14001bf72:	int3   
   14001bf73:	int3   
   14001bf74:	int3   
   14001bf75:	int3   
   14001bf76:	int3   
   14001bf77:	int3   
   14001bf78:	int3   
   14001bf79:	int3   
   14001bf7a:	int3   
   14001bf7b:	int3   
   14001bf7c:	int3   
   14001bf7d:	int3   
   14001bf7e:	int3   
   14001bf7f:	int3   
   14001bf80:	mov    QWORD PTR [rsp+0x8],rcx
   14001bf85:	sub    rsp,0x48
   14001bf89:	mov    DWORD PTR [rsp+0x20],0x0
   14001bf91:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bf96:	call   0x14001c0a0
   14001bf9b:	mov    QWORD PTR [rsp+0x30],rax
   14001bfa0:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bfa5:	call   0x14001d040
   14001bfaa:	mov    QWORD PTR [rsp+0x28],rax
   14001bfaf:	mov    rax,QWORD PTR [rsp+0x28]
   14001bfb4:	cmp    QWORD PTR [rsp+0x30],rax
   14001bfb9:	jae    0x14001bfc3
   14001bfbb:	mov    DWORD PTR [rsp+0x20],0x1
   14001bfc3:	mov    eax,DWORD PTR [rsp+0x20]
   14001bfc7:	add    rsp,0x48
   14001bfcb:	ret    
   14001bfcc:	int3   
   14001bfcd:	int3   
   14001bfce:	int3   
   14001bfcf:	int3   
   14001bfd0:	int3   
   14001bfd1:	int3   
   14001bfd2:	int3   
   14001bfd3:	int3   
   14001bfd4:	int3   
   14001bfd5:	int3   
   14001bfd6:	int3   
   14001bfd7:	int3   
   14001bfd8:	int3   
   14001bfd9:	int3   
   14001bfda:	int3   
   14001bfdb:	int3   
   14001bfdc:	int3   
   14001bfdd:	int3   
   14001bfde:	int3   
   14001bfdf:	int3   
   14001bfe0:	mov    QWORD PTR [rsp+0x8],rcx
   14001bfe5:	sub    rsp,0x38
   14001bfe9:	mov    rax,QWORD PTR [rsp+0x40]
   14001bfee:	add    rax,0xe8
   14001bff4:	mov    rcx,rax
   14001bff7:	call   0x140014f00
   14001bffc:	mov    rax,QWORD PTR [rsp+0x40]
   14001c001:	movsd  xmm0,QWORD PTR [rax+0xd0]
   14001c009:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001c00f:	mov    rax,QWORD PTR [rsp+0x40]
   14001c014:	add    rax,0xe8
   14001c01a:	mov    rcx,rax
   14001c01d:	call   0x140014f40
   14001c022:	movsd  xmm0,QWORD PTR [rsp+0x20]
   14001c028:	add    rsp,0x38
   14001c02c:	ret    
   14001c02d:	int3   
   14001c02e:	int3   
   14001c02f:	int3   
   14001c030:	int3   
   14001c031:	int3   
   14001c032:	int3   
   14001c033:	int3   
   14001c034:	int3   
   14001c035:	int3   
   14001c036:	int3   
   14001c037:	int3   
   14001c038:	int3   
   14001c039:	int3   
   14001c03a:	int3   
   14001c03b:	int3   
   14001c03c:	int3   
   14001c03d:	int3   
   14001c03e:	int3   
   14001c03f:	int3   
   14001c040:	movsd  QWORD PTR [rsp+0x10],xmm1
   14001c046:	mov    QWORD PTR [rsp+0x8],rcx
   14001c04b:	sub    rsp,0x28
   14001c04f:	mov    rax,QWORD PTR [rsp+0x30]
   14001c054:	add    rax,0xe8
   14001c05a:	mov    rcx,rax
   14001c05d:	call   0x140014f00
   14001c062:	mov    rax,QWORD PTR [rsp+0x30]
   14001c067:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14001c06d:	movsd  QWORD PTR [rax+0xd0],xmm0
   14001c075:	mov    rax,QWORD PTR [rsp+0x30]
   14001c07a:	add    rax,0xe8
   14001c080:	mov    rcx,rax
   14001c083:	call   0x140014f40
   14001c088:	add    rsp,0x28
   14001c08c:	ret    
   14001c08d:	int3   
   14001c08e:	int3   
   14001c08f:	int3   
   14001c090:	int3   
   14001c091:	int3   
   14001c092:	int3   
   14001c093:	int3   
   14001c094:	int3   
   14001c095:	int3   
   14001c096:	int3   
   14001c097:	int3   
   14001c098:	int3   
   14001c099:	int3   
   14001c09a:	int3   
   14001c09b:	int3   
   14001c09c:	int3   
   14001c09d:	int3   
   14001c09e:	int3   
   14001c09f:	int3   
   14001c0a0:	mov    QWORD PTR [rsp+0x8],rcx
   14001c0a5:	sub    rsp,0x28
   14001c0a9:	mov    rax,QWORD PTR [rsp+0x30]
   14001c0ae:	mov    rcx,rax
   14001c0b1:	call   0x140017800
   14001c0b6:	add    rsp,0x28
   14001c0ba:	ret    
   14001c0bb:	int3   
   14001c0bc:	int3   
   14001c0bd:	int3   
   14001c0be:	int3   
   14001c0bf:	int3   
   14001c0c0:	int3   
   14001c0c1:	int3   
   14001c0c2:	int3   
   14001c0c3:	int3   
   14001c0c4:	int3   
   14001c0c5:	int3   
   14001c0c6:	int3   
   14001c0c7:	int3   
   14001c0c8:	int3   
   14001c0c9:	int3   
   14001c0ca:	int3   
   14001c0cb:	int3   
   14001c0cc:	int3   
   14001c0cd:	int3   
   14001c0ce:	int3   
   14001c0cf:	int3   
   14001c0d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001c0d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001c0da:	push   rsi
   14001c0db:	push   rdi
   14001c0dc:	sub    rsp,0x78
   14001c0e0:	mov    rax,QWORD PTR [rip+0x1f169]        # 0x14003b250
   14001c0e7:	xor    rax,rsp
   14001c0ea:	mov    QWORD PTR [rsp+0x68],rax
   14001c0ef:	mov    rax,QWORD PTR [rsp+0x90]
   14001c0f7:	lea    rdx,[rsp+0x20]
   14001c0fc:	mov    rcx,rax
   14001c0ff:	call   0x1400054c0
   14001c104:	jmp    0x14001c118
   14001c106:	xor    r8d,r8d
   14001c109:	lea    rdx,[rsp+0x30]
   14001c10e:	lea    rcx,[rsp+0x20]
   14001c113:	call   0x140005210
   14001c118:	mov    rax,QWORD PTR [rsp+0x90]
   14001c120:	lea    rdx,[rsp+0x50]
   14001c125:	mov    rcx,rax
   14001c128:	call   0x140005500
   14001c12d:	mov    rdx,rax
   14001c130:	lea    rcx,[rsp+0x20]
   14001c135:	call   0x140005a90
   14001c13a:	movzx  eax,al
   14001c13d:	test   eax,eax
   14001c13f:	je     0x14001c1a3
   14001c141:	lea    rcx,[rsp+0x20]
   14001c146:	call   0x1400051f0
   14001c14b:	mov    QWORD PTR [rsp+0x28],rax
   14001c150:	lea    rdx,[rsp+0x58]
   14001c155:	mov    rcx,QWORD PTR [rsp+0x28]
   14001c15a:	call   0x14001f460
   14001c15f:	mov    rdx,QWORD PTR [rsp+0x98]
   14001c167:	mov    rcx,rax
   14001c16a:	call   0x140004ef0
   14001c16f:	movzx  eax,al
   14001c172:	test   eax,eax
   14001c174:	je     0x14001c19e
   14001c176:	lea    rax,[rsp+0x40]
   14001c17b:	lea    rcx,[rip+0x1568e]        # 0x140031810
   14001c182:	mov    rdi,rax
   14001c185:	mov    rsi,rcx
   14001c188:	mov    ecx,0x10
   14001c18d:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c18f:	lea    rdx,[rsp+0x40]
   14001c194:	mov    rcx,QWORD PTR [rsp+0x28]
   14001c199:	call   0x14001f490
   14001c19e:	jmp    0x14001c106
   14001c1a3:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c1ab:	call   0x14001b0c0
   14001c1b0:	mov    rcx,QWORD PTR [rsp+0x68]
   14001c1b5:	xor    rcx,rsp
   14001c1b8:	call   0x140021890
   14001c1bd:	add    rsp,0x78
   14001c1c1:	pop    rdi
   14001c1c2:	pop    rsi
   14001c1c3:	ret    
   14001c1c4:	int3   
   14001c1c5:	int3   
   14001c1c6:	int3   
   14001c1c7:	int3   
   14001c1c8:	int3   
   14001c1c9:	int3   
   14001c1ca:	int3   
   14001c1cb:	int3   
   14001c1cc:	int3   
   14001c1cd:	int3   
   14001c1ce:	int3   
   14001c1cf:	int3   
   14001c1d0:	mov    QWORD PTR [rsp+0x8],rcx
   14001c1d5:	sub    rsp,0x88
   14001c1dc:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14001c1e5:	mov    BYTE PTR [rsp+0x20],0x1
   14001c1ea:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c1f2:	call   0x14001b900
   14001c1f7:	mov    DWORD PTR [rsp+0x28],eax
   14001c1fb:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c203:	call   0x14001b4e0
   14001c208:	mov    DWORD PTR [rsp+0x24],eax
   14001c20c:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c214:	call   0x14001bb90
   14001c219:	movzx  eax,al
   14001c21c:	test   eax,eax
   14001c21e:	jne    0x14001c22b
   14001c220:	cmp    DWORD PTR [rsp+0x24],0x2
   14001c225:	jne    0x14001c406
   14001c22b:	mov    edx,0xffffffff
   14001c230:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c238:	call   0x14001bb60
   14001c23d:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c245:	call   0x14001b850
   14001c24a:	movzx  eax,al
   14001c24d:	test   eax,eax
   14001c24f:	jne    0x14001c262
   14001c251:	cmp    DWORD PTR [rsp+0x24],0x2
   14001c256:	jne    0x14001c262
   14001c258:	mov    DWORD PTR [rsp+0x2c],0x1
   14001c260:	jmp    0x14001c26a
   14001c262:	mov    DWORD PTR [rsp+0x2c],0x0
   14001c26a:	movzx  eax,BYTE PTR [rsp+0x2c]
   14001c26f:	mov    BYTE PTR [rsp+0x21],al
   14001c273:	movzx  eax,BYTE PTR [rsp+0x21]
   14001c278:	test   eax,eax
   14001c27a:	jne    0x14001c2d8
   14001c27c:	mov    eax,DWORD PTR [rsp+0x24]
   14001c280:	cmp    DWORD PTR [rsp+0x28],eax
   14001c284:	je     0x14001c2d8
   14001c286:	lea    rcx,[rsp+0x50]
   14001c28b:	call   QWORD PTR [rip+0xaaef]        # 0x140026d80
   14001c291:	nop
   14001c292:	mov    r9d,DWORD PTR [rsp+0x28]
   14001c297:	mov    r8d,DWORD PTR [rsp+0x24]
   14001c29c:	lea    rdx,[rip+0x12d1d]        # 0x14002efc0
   14001c2a3:	lea    rcx,[rsp+0x50]
   14001c2a8:	call   QWORD PTR [rip+0xa85a]        # 0x140026b08
   14001c2ae:	lea    rcx,[rsp+0x50]
   14001c2b3:	call   QWORD PTR [rip+0xaaf7]        # 0x140026db0
   14001c2b9:	mov    dl,0x1
   14001c2bb:	mov    rcx,rax
   14001c2be:	call   0x140017250
   14001c2c3:	mov    BYTE PTR [rsp+0x20],0x0
   14001c2c8:	lea    rcx,[rsp+0x50]
   14001c2cd:	call   QWORD PTR [rip+0xaa8d]        # 0x140026d60
   14001c2d3:	jmp    0x14001c404
   14001c2d8:	movzx  eax,BYTE PTR [rsp+0x21]
   14001c2dd:	test   eax,eax
   14001c2df:	je     0x14001c32f
   14001c2e1:	lea    rcx,[rsp+0x30]
   14001c2e6:	call   QWORD PTR [rip+0xaa94]        # 0x140026d80
   14001c2ec:	nop
   14001c2ed:	mov    r9d,DWORD PTR [rsp+0x28]
   14001c2f2:	mov    r8d,DWORD PTR [rsp+0x24]
   14001c2f7:	lea    rdx,[rip+0x12d92]        # 0x14002f090
   14001c2fe:	lea    rcx,[rsp+0x30]
   14001c303:	call   QWORD PTR [rip+0xa7ff]        # 0x140026b08
   14001c309:	lea    rcx,[rsp+0x30]
   14001c30e:	call   QWORD PTR [rip+0xaa9c]        # 0x140026db0
   14001c314:	mov    dl,0x1
   14001c316:	mov    rcx,rax
   14001c319:	call   0x140017250
   14001c31e:	nop
   14001c31f:	lea    rcx,[rsp+0x30]
   14001c324:	call   QWORD PTR [rip+0xaa36]        # 0x140026d60
   14001c32a:	jmp    0x14001c404
   14001c32f:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c337:	call   0x14001b490
   14001c33c:	cmp    eax,0x3
   14001c33f:	jne    0x14001c3bb
   14001c341:	lea    rcx,[rsp+0x48]
   14001c346:	call   QWORD PTR [rip+0xaa34]        # 0x140026d80
   14001c34c:	nop
   14001c34d:	lea    rdx,[rsp+0x60]
   14001c352:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c35a:	call   0x14001b500
   14001c35f:	mov    QWORD PTR [rsp+0x58],rax
   14001c364:	mov    rax,QWORD PTR [rsp+0x58]
   14001c369:	mov    QWORD PTR [rsp+0x68],rax
   14001c36e:	mov    rax,QWORD PTR [rsp+0x68]
   14001c373:	mov    r8,QWORD PTR [rax]
   14001c376:	lea    rdx,[rip+0x12e13]        # 0x14002f190
   14001c37d:	lea    rcx,[rsp+0x48]
   14001c382:	call   QWORD PTR [rip+0xa780]        # 0x140026b08
   14001c388:	nop
   14001c389:	lea    rcx,[rsp+0x60]
   14001c38e:	call   QWORD PTR [rip+0xa9cc]        # 0x140026d60
   14001c394:	lea    rcx,[rsp+0x48]
   14001c399:	call   QWORD PTR [rip+0xaa11]        # 0x140026db0
   14001c39f:	mov    dl,0x1
   14001c3a1:	mov    rcx,rax
   14001c3a4:	call   0x140017250
   14001c3a9:	mov    BYTE PTR [rsp+0x20],0x0
   14001c3ae:	lea    rcx,[rsp+0x48]
   14001c3b3:	call   QWORD PTR [rip+0xa9a7]        # 0x140026d60
   14001c3b9:	jmp    0x14001c404
   14001c3bb:	lea    rcx,[rsp+0x40]
   14001c3c0:	call   QWORD PTR [rip+0xa9ba]        # 0x140026d80
   14001c3c6:	nop
   14001c3c7:	mov    r9d,DWORD PTR [rsp+0x28]
   14001c3cc:	mov    r8d,DWORD PTR [rsp+0x24]
   14001c3d1:	lea    rdx,[rip+0x12e38]        # 0x14002f210
   14001c3d8:	lea    rcx,[rsp+0x40]
   14001c3dd:	call   QWORD PTR [rip+0xa725]        # 0x140026b08
   14001c3e3:	lea    rcx,[rsp+0x40]
   14001c3e8:	call   QWORD PTR [rip+0xa9c2]        # 0x140026db0
   14001c3ee:	mov    dl,0x1
   14001c3f0:	mov    rcx,rax
   14001c3f3:	call   0x140017250
   14001c3f8:	nop
   14001c3f9:	lea    rcx,[rsp+0x40]
   14001c3fe:	call   QWORD PTR [rip+0xa95c]        # 0x140026d60
   14001c404:	jmp    0x14001c453
   14001c406:	lea    rcx,[rsp+0x38]
   14001c40b:	call   QWORD PTR [rip+0xa96f]        # 0x140026d80
   14001c411:	nop
   14001c412:	mov    r9d,DWORD PTR [rsp+0x28]
   14001c417:	mov    r8d,DWORD PTR [rsp+0x24]
   14001c41c:	lea    rdx,[rip+0x12ead]        # 0x14002f2d0
   14001c423:	lea    rcx,[rsp+0x38]
   14001c428:	call   QWORD PTR [rip+0xa6da]        # 0x140026b08
   14001c42e:	lea    rcx,[rsp+0x38]
   14001c433:	call   QWORD PTR [rip+0xa977]        # 0x140026db0
   14001c439:	mov    dl,0x1
   14001c43b:	mov    rcx,rax
   14001c43e:	call   0x140017250
   14001c443:	mov    BYTE PTR [rsp+0x20],0x0
   14001c448:	lea    rcx,[rsp+0x38]
   14001c44d:	call   QWORD PTR [rip+0xa90d]        # 0x140026d60
   14001c453:	movzx  eax,BYTE PTR [rsp+0x20]
   14001c458:	add    rsp,0x88
   14001c45f:	ret    
   14001c460:	int3   
   14001c461:	int3   
   14001c462:	int3   
   14001c463:	int3   
   14001c464:	int3   
   14001c465:	int3   
   14001c466:	int3   
   14001c467:	int3   
   14001c468:	int3   
   14001c469:	int3   
   14001c46a:	int3   
   14001c46b:	int3   
   14001c46c:	int3   
   14001c46d:	int3   
   14001c46e:	int3   
   14001c46f:	int3   
   14001c470:	mov    QWORD PTR [rsp+0x10],rdx
   14001c475:	mov    QWORD PTR [rsp+0x8],rcx
   14001c47a:	sub    rsp,0x208
   14001c481:	mov    QWORD PTR [rsp+0x180],0xfffffffffffffffe
   14001c48d:	mov    dl,0x1
   14001c48f:	lea    rcx,[rip+0x12f1a]        # 0x14002f3b0
   14001c496:	call   0x140017250
   14001c49b:	lea    rcx,[rsp+0x20]
   14001c4a0:	call   0x140002a80
   14001c4a5:	nop
   14001c4a6:	mov    r9d,0x17
   14001c4ac:	xor    r8d,r8d
   14001c4af:	lea    rdx,[rip+0x13d4a]        # 0x140030200
   14001c4b6:	lea    rcx,[rsp+0x20]
   14001c4bb:	call   0x14001e260
   14001c4c0:	mov    DWORD PTR [rsp+0x48],eax
   14001c4c4:	cmp    DWORD PTR [rsp+0x48],0x0
   14001c4c9:	jge    0x14001c4e7
   14001c4cb:	xor    edx,edx
   14001c4cd:	lea    rcx,[rsp+0x20]
   14001c4d2:	call   0x14001dfd0
   14001c4d7:	nop
   14001c4d8:	lea    rcx,[rsp+0x20]
   14001c4dd:	call   0x14001de10
   14001c4e2:	jmp    0x14001cac8
   14001c4e7:	mov    rdx,QWORD PTR [rsp+0x218]
   14001c4ef:	lea    rcx,[rsp+0x1c8]
   14001c4f7:	call   0x140008510
   14001c4fc:	nop
   14001c4fd:	lea    rcx,[rsp+0x20]
   14001c502:	call   0x14001e100
   14001c507:	lea    rdx,[rsp+0x1c8]
   14001c50f:	mov    rcx,rax
   14001c512:	call   0x14001ed10
   14001c517:	nop
   14001c518:	lea    rcx,[rsp+0x1c8]
   14001c520:	call   0x140008570
   14001c525:	lea    rax,[rsp+0x190]
   14001c52d:	mov    QWORD PTR [rsp+0x100],rax
   14001c535:	lea    rdx,[rip+0x12b1c]        # 0x14002f058
   14001c53c:	mov    rcx,QWORD PTR [rsp+0x100]
   14001c544:	call   0x140012a80
   14001c549:	mov    QWORD PTR [rsp+0x120],rax
   14001c551:	mov    rax,QWORD PTR [rsp+0x120]
   14001c559:	mov    QWORD PTR [rsp+0x70],rax
   14001c55e:	lea    rcx,[rsp+0x20]
   14001c563:	call   0x14001e100
   14001c568:	nop
   14001c569:	mov    r8,QWORD PTR [rsp+0x70]
   14001c56e:	lea    rdx,[rsp+0x40]
   14001c573:	mov    rcx,rax
   14001c576:	call   0x14001efc0
   14001c57b:	nop
   14001c57c:	xor    edx,edx
   14001c57e:	lea    rcx,[rsp+0x40]
   14001c583:	call   0x14001e030
   14001c588:	movzx  eax,al
   14001c58b:	test   eax,eax
   14001c58d:	jne    0x14001c5a6
   14001c58f:	lea    rcx,[rsp+0x40]
   14001c594:	call   0x14001e100
   14001c599:	mov    rcx,rax
   14001c59c:	call   0x14001e4f0
   14001c5a1:	cmp    eax,0x1
   14001c5a4:	je     0x14001c5c0
   14001c5a6:	lea    rcx,[rsp+0x40]
   14001c5ab:	call   0x14001de10
   14001c5b0:	nop
   14001c5b1:	lea    rcx,[rsp+0x20]
   14001c5b6:	call   0x14001de10
   14001c5bb:	jmp    0x14001cac8
   14001c5c0:	lea    rcx,[rsp+0x40]
   14001c5c5:	call   0x14001e100
   14001c5ca:	xor    r8d,r8d
   14001c5cd:	lea    rdx,[rsp+0x50]
   14001c5d2:	mov    rcx,rax
   14001c5d5:	call   0x14001e460
   14001c5da:	nop
   14001c5db:	lea    rcx,[rsp+0x50]
   14001c5e0:	call   0x14001e100
   14001c5e5:	lea    rdx,[rsp+0x30]
   14001c5ea:	mov    rcx,rax
   14001c5ed:	call   0x14001e3d0
   14001c5f2:	nop
   14001c5f3:	xor    edx,edx
   14001c5f5:	lea    rcx,[rsp+0x30]
   14001c5fa:	call   0x14001e030
   14001c5ff:	movzx  eax,al
   14001c602:	test   eax,eax
   14001c604:	je     0x14001c636
   14001c606:	lea    rcx,[rsp+0x30]
   14001c60b:	call   0x14001de10
   14001c610:	nop
   14001c611:	lea    rcx,[rsp+0x50]
   14001c616:	call   0x14001de10
   14001c61b:	nop
   14001c61c:	lea    rcx,[rsp+0x40]
   14001c621:	call   0x14001de10
   14001c626:	nop
   14001c627:	lea    rcx,[rsp+0x20]
   14001c62c:	call   0x14001de10
   14001c631:	jmp    0x14001cac8
   14001c636:	lea    rax,[rsp+0x1e0]
   14001c63e:	mov    QWORD PTR [rsp+0x178],rax
   14001c646:	lea    rdx,[rip+0x12afb]        # 0x14002f148
   14001c64d:	mov    rcx,QWORD PTR [rsp+0x178]
   14001c655:	call   0x140012a80
   14001c65a:	mov    QWORD PTR [rsp+0x80],rax
   14001c662:	mov    rax,QWORD PTR [rsp+0x80]
   14001c66a:	mov    QWORD PTR [rsp+0x130],rax
   14001c672:	lea    rcx,[rsp+0x30]
   14001c677:	call   0x14001e100
   14001c67c:	nop
   14001c67d:	mov    r8,QWORD PTR [rsp+0x130]
   14001c685:	lea    rdx,[rsp+0x28]
   14001c68a:	mov    rcx,rax
   14001c68d:	call   0x14001ec60
   14001c692:	nop
   14001c693:	xor    edx,edx
   14001c695:	lea    rcx,[rsp+0x28]
   14001c69a:	call   0x14001e080
   14001c69f:	movzx  eax,al
   14001c6a2:	test   eax,eax
   14001c6a4:	je     0x14001c702
   14001c6a6:	lea    rax,[rsp+0x1a0]
   14001c6ae:	mov    QWORD PTR [rsp+0x90],rax
   14001c6b6:	lea    rdx,[rip+0x12d4b]        # 0x14002f408
   14001c6bd:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c6c5:	call   0x140012a80
   14001c6ca:	mov    QWORD PTR [rsp+0x170],rax
   14001c6d2:	mov    rax,QWORD PTR [rsp+0x170]
   14001c6da:	mov    QWORD PTR [rsp+0xa0],rax
   14001c6e2:	lea    rcx,[rsp+0x28]
   14001c6e7:	call   0x14001e100
   14001c6ec:	nop
   14001c6ed:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001c6f5:	mov    rcx,rax
   14001c6f8:	call   0x14001e5d0
   14001c6fd:	jmp    0x14001c84b
   14001c702:	lea    rax,[rsp+0x1c0]
   14001c70a:	mov    QWORD PTR [rsp+0x140],rax
   14001c712:	lea    rdx,[rip+0x12c6f]        # 0x14002f388
   14001c719:	mov    rcx,QWORD PTR [rsp+0x140]
   14001c721:	call   0x140012a80
   14001c726:	mov    QWORD PTR [rsp+0xb0],rax
   14001c72e:	mov    rax,QWORD PTR [rsp+0xb0]
   14001c736:	mov    QWORD PTR [rsp+0x160],rax
   14001c73e:	lea    rcx,[rsp+0x20]
   14001c743:	call   0x14001e100
   14001c748:	nop
   14001c749:	mov    r8,QWORD PTR [rsp+0x160]
   14001c751:	lea    rdx,[rsp+0xd0]
   14001c759:	mov    rcx,rax
   14001c75c:	call   0x14001eb50
   14001c761:	mov    QWORD PTR [rsp+0xc0],rax
   14001c769:	mov    rax,QWORD PTR [rsp+0xc0]
   14001c771:	mov    QWORD PTR [rsp+0x150],rax
   14001c779:	mov    rdx,QWORD PTR [rsp+0x150]
   14001c781:	lea    rcx,[rsp+0x28]
   14001c786:	call   0x14001d1d0
   14001c78b:	nop
   14001c78c:	lea    rcx,[rsp+0xd0]
   14001c794:	call   0x14001de10
   14001c799:	xor    edx,edx
   14001c79b:	lea    rcx,[rsp+0x28]
   14001c7a0:	call   0x14001e080
   14001c7a5:	movzx  eax,al
   14001c7a8:	test   eax,eax
   14001c7aa:	je     0x14001c84b
   14001c7b0:	lea    rax,[rsp+0x1b0]
   14001c7b8:	mov    QWORD PTR [rsp+0x128],rax
   14001c7c0:	lea    rdx,[rip+0x12c51]        # 0x14002f418
   14001c7c7:	mov    rcx,QWORD PTR [rsp+0x128]
   14001c7cf:	call   0x140012a80
   14001c7d4:	mov    QWORD PTR [rsp+0xe0],rax
   14001c7dc:	mov    rax,QWORD PTR [rsp+0xe0]
   14001c7e4:	mov    QWORD PTR [rsp+0x138],rax
   14001c7ec:	lea    rcx,[rsp+0x28]
   14001c7f1:	call   0x14001e100
   14001c7f6:	nop
   14001c7f7:	mov    rdx,QWORD PTR [rsp+0x138]
   14001c7ff:	mov    rcx,rax
   14001c802:	call   0x14001e5d0
   14001c807:	lea    rcx,[rsp+0x28]
   14001c80c:	call   0x14001ea00
   14001c811:	mov    QWORD PTR [rsp+0xf0],rax
   14001c819:	lea    rcx,[rsp+0x30]
   14001c81e:	call   0x14001e100
   14001c823:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001c82b:	mov    r8,rcx
   14001c82e:	lea    rdx,[rsp+0x148]
   14001c836:	mov    rcx,rax
   14001c839:	call   0x14001f120
   14001c83e:	lea    rcx,[rsp+0x148]
   14001c846:	call   0x14001de10
   14001c84b:	lea    rax,[rsp+0x188]
   14001c853:	mov    QWORD PTR [rsp+0x58],rax
   14001c858:	lea    rdx,[rip+0x12909]        # 0x14002f168
   14001c85f:	mov    rcx,QWORD PTR [rsp+0x58]
   14001c864:	call   0x140012a80
   14001c869:	mov    QWORD PTR [rsp+0x158],rax
   14001c871:	mov    rax,QWORD PTR [rsp+0x158]
   14001c879:	mov    QWORD PTR [rsp+0x110],rax
   14001c881:	lea    rcx,[rsp+0x30]
   14001c886:	call   0x14001e100
   14001c88b:	nop
   14001c88c:	mov    r8,QWORD PTR [rsp+0x110]
   14001c894:	lea    rdx,[rsp+0x38]
   14001c899:	mov    rcx,rax
   14001c89c:	call   0x14001ec60
   14001c8a1:	nop
   14001c8a2:	xor    edx,edx
   14001c8a4:	lea    rcx,[rsp+0x38]
   14001c8a9:	call   0x14001e080
   14001c8ae:	movzx  eax,al
   14001c8b1:	test   eax,eax
   14001c8b3:	je     0x14001c905
   14001c8b5:	lea    rax,[rsp+0x198]
   14001c8bd:	mov    QWORD PTR [rsp+0x168],rax
   14001c8c5:	lea    rdx,[rip+0x12b5c]        # 0x14002f428
   14001c8cc:	mov    rcx,QWORD PTR [rsp+0x168]
   14001c8d4:	call   0x140012a80
   14001c8d9:	mov    QWORD PTR [rsp+0x60],rax
   14001c8de:	mov    rax,QWORD PTR [rsp+0x60]
   14001c8e3:	mov    QWORD PTR [rsp+0x68],rax
   14001c8e8:	lea    rcx,[rsp+0x38]
   14001c8ed:	call   0x14001e100
   14001c8f2:	nop
   14001c8f3:	mov    rdx,QWORD PTR [rsp+0x68]
   14001c8f8:	mov    rcx,rax
   14001c8fb:	call   0x14001e5d0
   14001c900:	jmp    0x14001ca48
   14001c905:	lea    rax,[rsp+0x1a8]
   14001c90d:	mov    QWORD PTR [rsp+0x78],rax
   14001c912:	lea    rdx,[rip+0x1298f]        # 0x14002f2a8
   14001c919:	mov    rcx,QWORD PTR [rsp+0x78]
   14001c91e:	call   0x140012a80
   14001c923:	mov    QWORD PTR [rsp+0x88],rax
   14001c92b:	mov    rax,QWORD PTR [rsp+0x88]
   14001c933:	mov    QWORD PTR [rsp+0x98],rax
   14001c93b:	lea    rcx,[rsp+0x20]
   14001c940:	call   0x14001e100
   14001c945:	nop
   14001c946:	mov    r8,QWORD PTR [rsp+0x98]
   14001c94e:	lea    rdx,[rsp+0xc8]
   14001c956:	mov    rcx,rax
   14001c959:	call   0x14001eb50
   14001c95e:	mov    QWORD PTR [rsp+0xa8],rax
   14001c966:	mov    rax,QWORD PTR [rsp+0xa8]
   14001c96e:	mov    QWORD PTR [rsp+0xb8],rax
   14001c976:	mov    rdx,QWORD PTR [rsp+0xb8]
   14001c97e:	lea    rcx,[rsp+0x38]
   14001c983:	call   0x14001d1d0
   14001c988:	nop
   14001c989:	lea    rcx,[rsp+0xc8]
   14001c991:	call   0x14001de10
   14001c996:	xor    edx,edx
   14001c998:	lea    rcx,[rsp+0x38]
   14001c99d:	call   0x14001e080
   14001c9a2:	movzx  eax,al
   14001c9a5:	test   eax,eax
   14001c9a7:	je     0x14001ca48
   14001c9ad:	lea    rax,[rsp+0x1b8]
   14001c9b5:	mov    QWORD PTR [rsp+0xd8],rax
   14001c9bd:	lea    rdx,[rip+0x12a74]        # 0x14002f438
   14001c9c4:	mov    rcx,QWORD PTR [rsp+0xd8]
   14001c9cc:	call   0x140012a80
   14001c9d1:	mov    QWORD PTR [rsp+0xe8],rax
   14001c9d9:	mov    rax,QWORD PTR [rsp+0xe8]
   14001c9e1:	mov    QWORD PTR [rsp+0xf8],rax
   14001c9e9:	lea    rcx,[rsp+0x38]
   14001c9ee:	call   0x14001e100
   14001c9f3:	nop
   14001c9f4:	mov    rdx,QWORD PTR [rsp+0xf8]
   14001c9fc:	mov    rcx,rax
   14001c9ff:	call   0x14001e5d0
   14001ca04:	lea    rcx,[rsp+0x38]
   14001ca09:	call   0x14001ea00
   14001ca0e:	mov    QWORD PTR [rsp+0x108],rax
   14001ca16:	lea    rcx,[rsp+0x30]
   14001ca1b:	call   0x14001e100
   14001ca20:	mov    rcx,QWORD PTR [rsp+0x108]
   14001ca28:	mov    r8,rcx
   14001ca2b:	lea    rdx,[rsp+0x118]
   14001ca33:	mov    rcx,rax
   14001ca36:	call   0x14001f120
   14001ca3b:	lea    rcx,[rsp+0x118]
   14001ca43:	call   0x14001de10
   14001ca48:	mov    rdx,QWORD PTR [rsp+0x218]
   14001ca50:	lea    rcx,[rsp+0x1e8]
   14001ca58:	call   0x140008510
   14001ca5d:	nop
   14001ca5e:	lea    rcx,[rsp+0x20]
   14001ca63:	call   0x14001e100
   14001ca68:	lea    rdx,[rsp+0x1e8]
   14001ca70:	mov    rcx,rax
   14001ca73:	call   0x14001ef30
   14001ca78:	nop
   14001ca79:	lea    rcx,[rsp+0x1e8]
   14001ca81:	call   0x140008570
   14001ca86:	nop
   14001ca87:	lea    rcx,[rsp+0x38]
   14001ca8c:	call   0x14001de10
   14001ca91:	nop
   14001ca92:	lea    rcx,[rsp+0x28]
   14001ca97:	call   0x14001de10
   14001ca9c:	nop
   14001ca9d:	lea    rcx,[rsp+0x30]
   14001caa2:	call   0x14001de10
   14001caa7:	nop
   14001caa8:	lea    rcx,[rsp+0x50]
   14001caad:	call   0x14001de10
   14001cab2:	nop
   14001cab3:	lea    rcx,[rsp+0x40]
   14001cab8:	call   0x14001de10
   14001cabd:	nop
   14001cabe:	lea    rcx,[rsp+0x20]
   14001cac3:	call   0x14001de10
   14001cac8:	add    rsp,0x208
   14001cacf:	ret    
   14001cad0:	int3   
   14001cad1:	int3   
   14001cad2:	int3   
   14001cad3:	int3   
   14001cad4:	int3   
   14001cad5:	int3   
   14001cad6:	int3   
   14001cad7:	int3   
   14001cad8:	int3   
   14001cad9:	int3   
   14001cada:	int3   
   14001cadb:	int3   
   14001cadc:	int3   
   14001cadd:	int3   
   14001cade:	int3   
   14001cadf:	int3   
   14001cae0:	mov    QWORD PTR [rsp+0x10],rdx
   14001cae5:	mov    QWORD PTR [rsp+0x8],rcx
   14001caea:	sub    rsp,0x28
   14001caee:	xor    r8d,r8d
   14001caf1:	mov    rdx,QWORD PTR [rsp+0x38]
   14001caf6:	mov    rcx,QWORD PTR [rsp+0x30]
   14001cafb:	call   0x14001cb10
   14001cb00:	add    rsp,0x28
   14001cb04:	ret    
   14001cb05:	int3   
   14001cb06:	int3   
   14001cb07:	int3   
   14001cb08:	int3   
   14001cb09:	int3   
   14001cb0a:	int3   
   14001cb0b:	int3   
   14001cb0c:	int3   
   14001cb0d:	int3   
   14001cb0e:	int3   
   14001cb0f:	int3   
   14001cb10:	mov    BYTE PTR [rsp+0x18],r8b
   14001cb15:	mov    QWORD PTR [rsp+0x10],rdx
   14001cb1a:	mov    QWORD PTR [rsp+0x8],rcx
   14001cb1f:	sub    rsp,0x1a8
   14001cb26:	mov    QWORD PTR [rsp+0x128],0xfffffffffffffffe
   14001cb32:	mov    dl,0x1
   14001cb34:	lea    rcx,[rip+0x12915]        # 0x14002f450
   14001cb3b:	call   0x140017250
   14001cb40:	lea    rcx,[rsp+0x20]
   14001cb45:	call   0x140002a80
   14001cb4a:	nop
   14001cb4b:	mov    r9d,0x17
   14001cb51:	xor    r8d,r8d
   14001cb54:	lea    rdx,[rip+0x136a5]        # 0x140030200
   14001cb5b:	lea    rcx,[rsp+0x20]
   14001cb60:	call   0x14001e260
   14001cb65:	mov    DWORD PTR [rsp+0x48],eax
   14001cb69:	cmp    DWORD PTR [rsp+0x48],0x0
   14001cb6e:	jge    0x14001cb8c
   14001cb70:	xor    edx,edx
   14001cb72:	lea    rcx,[rsp+0x20]
   14001cb77:	call   0x14001dfd0
   14001cb7c:	nop
   14001cb7d:	lea    rcx,[rsp+0x20]
   14001cb82:	call   0x14001de10
   14001cb87:	jmp    0x14001d026
   14001cb8c:	mov    rdx,QWORD PTR [rsp+0x1b8]
   14001cb94:	lea    rcx,[rsp+0x160]
   14001cb9c:	call   0x140008510
   14001cba1:	nop
   14001cba2:	lea    rcx,[rsp+0x20]
   14001cba7:	call   0x14001e100
   14001cbac:	lea    rdx,[rsp+0x160]
   14001cbb4:	mov    rcx,rax
   14001cbb7:	call   0x14001ed10
   14001cbbc:	nop
   14001cbbd:	lea    rcx,[rsp+0x160]
   14001cbc5:	call   0x140008570
   14001cbca:	lea    rax,[rsp+0x138]
   14001cbd2:	mov    QWORD PTR [rsp+0x110],rax
   14001cbda:	lea    rdx,[rip+0x128df]        # 0x14002f4c0
   14001cbe1:	mov    rcx,QWORD PTR [rsp+0x110]
   14001cbe9:	call   0x140012a80
   14001cbee:	mov    QWORD PTR [rsp+0x68],rax
   14001cbf3:	mov    rax,QWORD PTR [rsp+0x68]
   14001cbf8:	mov    QWORD PTR [rsp+0x108],rax
   14001cc00:	lea    rcx,[rsp+0x20]
   14001cc05:	call   0x14001e100
   14001cc0a:	nop
   14001cc0b:	mov    r8,QWORD PTR [rsp+0x108]
   14001cc13:	lea    rdx,[rsp+0x28]
   14001cc18:	mov    rcx,rax
   14001cc1b:	call   0x14001efc0
   14001cc20:	nop
   14001cc21:	xor    edx,edx
   14001cc23:	lea    rcx,[rsp+0x28]
   14001cc28:	call   0x14001e030
   14001cc2d:	movzx  eax,al
   14001cc30:	test   eax,eax
   14001cc32:	jne    0x14001cc4b
   14001cc34:	lea    rcx,[rsp+0x28]
   14001cc39:	call   0x14001e100
   14001cc3e:	mov    rcx,rax
   14001cc41:	call   0x14001e4f0
   14001cc46:	cmp    eax,0x1
   14001cc49:	je     0x14001cc65
   14001cc4b:	lea    rcx,[rsp+0x28]
   14001cc50:	call   0x14001de10
   14001cc55:	nop
   14001cc56:	lea    rcx,[rsp+0x20]
   14001cc5b:	call   0x14001de10
   14001cc60:	jmp    0x14001d026
   14001cc65:	lea    rcx,[rsp+0x28]
   14001cc6a:	call   0x14001e100
   14001cc6f:	xor    r8d,r8d
   14001cc72:	lea    rdx,[rsp+0x50]
   14001cc77:	mov    rcx,rax
   14001cc7a:	call   0x14001e460
   14001cc7f:	nop
   14001cc80:	lea    rcx,[rsp+0x50]
   14001cc85:	call   0x14001e100
   14001cc8a:	lea    rdx,[rsp+0x38]
   14001cc8f:	mov    rcx,rax
   14001cc92:	call   0x14001e3d0
   14001cc97:	nop
   14001cc98:	xor    edx,edx
   14001cc9a:	lea    rcx,[rsp+0x38]
   14001cc9f:	call   0x14001e030
   14001cca4:	movzx  eax,al
   14001cca7:	test   eax,eax
   14001cca9:	je     0x14001ccdb
   14001ccab:	lea    rcx,[rsp+0x38]
   14001ccb0:	call   0x14001de10
   14001ccb5:	nop
   14001ccb6:	lea    rcx,[rsp+0x50]
   14001ccbb:	call   0x14001de10
   14001ccc0:	nop
   14001ccc1:	lea    rcx,[rsp+0x28]
   14001ccc6:	call   0x14001de10
   14001cccb:	nop
   14001cccc:	lea    rcx,[rsp+0x20]
   14001ccd1:	call   0x14001de10
   14001ccd6:	jmp    0x14001d026
   14001ccdb:	lea    rax,[rsp+0x158]
   14001cce3:	mov    QWORD PTR [rsp+0x78],rax
   14001cce8:	lea    rdx,[rip+0x12801]        # 0x14002f4f0
   14001ccef:	mov    rcx,QWORD PTR [rsp+0x78]
   14001ccf4:	call   0x140012a80
   14001ccf9:	mov    QWORD PTR [rsp+0xf8],rax
   14001cd01:	mov    rax,QWORD PTR [rsp+0xf8]
   14001cd09:	mov    QWORD PTR [rsp+0x88],rax
   14001cd11:	lea    rcx,[rsp+0x38]
   14001cd16:	call   0x14001e100
   14001cd1b:	nop
   14001cd1c:	mov    r8,QWORD PTR [rsp+0x88]
   14001cd24:	lea    rdx,[rsp+0x40]
   14001cd29:	mov    rcx,rax
   14001cd2c:	call   0x14001ec60
   14001cd31:	nop
   14001cd32:	xor    edx,edx
   14001cd34:	lea    rcx,[rsp+0x40]
   14001cd39:	call   0x14001e080
   14001cd3e:	movzx  eax,al
   14001cd41:	test   eax,eax
   14001cd43:	je     0x14001ce0a
   14001cd49:	movzx  eax,BYTE PTR [rsp+0x1c0]
   14001cd51:	test   eax,eax
   14001cd53:	je     0x14001cdae
   14001cd55:	lea    rax,[rsp+0x148]
   14001cd5d:	mov    QWORD PTR [rsp+0x118],rax
   14001cd65:	lea    rdx,[rip+0x12188]        # 0x14002eef4
   14001cd6c:	mov    rcx,QWORD PTR [rsp+0x118]
   14001cd74:	call   0x140012a80
   14001cd79:	mov    QWORD PTR [rsp+0x98],rax
   14001cd81:	mov    rax,QWORD PTR [rsp+0x98]
   14001cd89:	mov    QWORD PTR [rsp+0xe0],rax
   14001cd91:	lea    rcx,[rsp+0x40]
   14001cd96:	call   0x14001e100
   14001cd9b:	nop
   14001cd9c:	mov    rdx,QWORD PTR [rsp+0xe0]
   14001cda4:	mov    rcx,rax
   14001cda7:	call   0x14001e5d0
   14001cdac:	jmp    0x14001ce05
   14001cdae:	lea    rax,[rsp+0x178]
   14001cdb6:	mov    QWORD PTR [rsp+0xa8],rax
   14001cdbe:	lea    rdx,[rip+0x1216f]        # 0x14002ef34
   14001cdc5:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001cdcd:	call   0x140012a80
   14001cdd2:	mov    QWORD PTR [rsp+0xf0],rax
   14001cdda:	mov    rax,QWORD PTR [rsp+0xf0]
   14001cde2:	mov    QWORD PTR [rsp+0xb8],rax
   14001cdea:	lea    rcx,[rsp+0x40]
   14001cdef:	call   0x14001e100
   14001cdf4:	nop
   14001cdf5:	mov    rdx,QWORD PTR [rsp+0xb8]
   14001cdfd:	mov    rcx,rax
   14001ce00:	call   0x14001e5d0
   14001ce05:	jmp    0x14001cfb1
   14001ce0a:	lea    rax,[rsp+0x130]
   14001ce12:	mov    QWORD PTR [rsp+0x100],rax
   14001ce1a:	lea    rdx,[rip+0x126df]        # 0x14002f500
   14001ce21:	mov    rcx,QWORD PTR [rsp+0x100]
   14001ce29:	call   0x140012a80
   14001ce2e:	mov    QWORD PTR [rsp+0xc8],rax
   14001ce36:	mov    rax,QWORD PTR [rsp+0xc8]
   14001ce3e:	mov    QWORD PTR [rsp+0x58],rax
   14001ce43:	lea    rcx,[rsp+0x20]
   14001ce48:	call   0x14001e100
   14001ce4d:	nop
   14001ce4e:	mov    r8,QWORD PTR [rsp+0x58]
   14001ce53:	lea    rdx,[rsp+0xe8]
   14001ce5b:	mov    rcx,rax
   14001ce5e:	call   0x14001eb50
   14001ce63:	mov    QWORD PTR [rsp+0xd8],rax
   14001ce6b:	mov    rax,QWORD PTR [rsp+0xd8]
   14001ce73:	mov    QWORD PTR [rsp+0x120],rax
   14001ce7b:	mov    rdx,QWORD PTR [rsp+0x120]
   14001ce83:	lea    rcx,[rsp+0x30]
   14001ce88:	call   0x14001d0d0
   14001ce8d:	nop
   14001ce8e:	lea    rcx,[rsp+0xe8]
   14001ce96:	call   0x14001de10
   14001ce9b:	xor    edx,edx
   14001ce9d:	lea    rcx,[rsp+0x30]
   14001cea2:	call   0x14001e080
   14001cea7:	movzx  eax,al
   14001ceaa:	test   eax,eax
   14001ceac:	je     0x14001cfa7
   14001ceb2:	movzx  eax,BYTE PTR [rsp+0x1c0]
   14001ceba:	test   eax,eax
   14001cebc:	je     0x14001cf0b
   14001cebe:	lea    rax,[rsp+0x140]
   14001cec6:	mov    QWORD PTR [rsp+0x60],rax
   14001cecb:	lea    rdx,[rip+0x12092]        # 0x14002ef64
   14001ced2:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ced7:	call   0x140012a80
   14001cedc:	mov    QWORD PTR [rsp+0x70],rax
   14001cee1:	mov    rax,QWORD PTR [rsp+0x70]
   14001cee6:	mov    QWORD PTR [rsp+0x80],rax
   14001ceee:	lea    rcx,[rsp+0x30]
   14001cef3:	call   0x14001e100
   14001cef8:	nop
   14001cef9:	mov    rdx,QWORD PTR [rsp+0x80]
   14001cf01:	mov    rcx,rax
   14001cf04:	call   0x14001e5d0
   14001cf09:	jmp    0x14001cf62
   14001cf0b:	lea    rax,[rsp+0x150]
   14001cf13:	mov    QWORD PTR [rsp+0x90],rax
   14001cf1b:	lea    rdx,[rip+0x12082]        # 0x14002efa4
   14001cf22:	mov    rcx,QWORD PTR [rsp+0x90]
   14001cf2a:	call   0x140012a80
   14001cf2f:	mov    QWORD PTR [rsp+0xa0],rax
   14001cf37:	mov    rax,QWORD PTR [rsp+0xa0]
   14001cf3f:	mov    QWORD PTR [rsp+0xb0],rax
   14001cf47:	lea    rcx,[rsp+0x30]
   14001cf4c:	call   0x14001e100
   14001cf51:	nop
   14001cf52:	mov    rdx,QWORD PTR [rsp+0xb0]
   14001cf5a:	mov    rcx,rax
   14001cf5d:	call   0x14001e5d0
   14001cf62:	lea    rcx,[rsp+0x30]
   14001cf67:	call   0x14001ea00
   14001cf6c:	mov    QWORD PTR [rsp+0xc0],rax
   14001cf74:	lea    rcx,[rsp+0x38]
   14001cf79:	call   0x14001e100
   14001cf7e:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001cf86:	mov    r8,rcx
   14001cf89:	lea    rdx,[rsp+0xd0]
   14001cf91:	mov    rcx,rax
   14001cf94:	call   0x14001f120
   14001cf99:	lea    rcx,[rsp+0xd0]
   14001cfa1:	call   0x14001de10
   14001cfa6:	nop
   14001cfa7:	lea    rcx,[rsp+0x30]
   14001cfac:	call   0x14001de10
   14001cfb1:	mov    rdx,QWORD PTR [rsp+0x1b8]
   14001cfb9:	lea    rcx,[rsp+0x180]
   14001cfc1:	call   0x140008510
   14001cfc6:	nop
   14001cfc7:	lea    rcx,[rsp+0x20]
   14001cfcc:	call   0x14001e100
   14001cfd1:	lea    rdx,[rsp+0x180]
   14001cfd9:	mov    rcx,rax
   14001cfdc:	call   0x14001ef30
   14001cfe1:	nop
   14001cfe2:	lea    rcx,[rsp+0x180]
   14001cfea:	call   0x140008570
   14001cfef:	nop
   14001cff0:	lea    rcx,[rsp+0x40]
   14001cff5:	call   0x14001de10
   14001cffa:	nop
   14001cffb:	lea    rcx,[rsp+0x38]
   14001d000:	call   0x14001de10
   14001d005:	nop
   14001d006:	lea    rcx,[rsp+0x50]
   14001d00b:	call   0x14001de10
   14001d010:	nop
   14001d011:	lea    rcx,[rsp+0x28]
   14001d016:	call   0x14001de10
   14001d01b:	nop
   14001d01c:	lea    rcx,[rsp+0x20]
   14001d021:	call   0x14001de10
   14001d026:	add    rsp,0x1a8
   14001d02d:	ret    
   14001d02e:	int3   
   14001d02f:	int3   
   14001d030:	int3   
   14001d031:	int3   
   14001d032:	int3   
   14001d033:	int3   
   14001d034:	int3   
   14001d035:	int3   
   14001d036:	int3   
   14001d037:	int3   
   14001d038:	int3   
   14001d039:	int3   
   14001d03a:	int3   
   14001d03b:	int3   
   14001d03c:	int3   
   14001d03d:	int3   
   14001d03e:	int3   
   14001d03f:	int3   
   14001d040:	mov    QWORD PTR [rsp+0x8],rcx
   14001d045:	sub    rsp,0x48
   14001d049:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001d052:	mov    r8d,0x8
   14001d058:	xor    edx,edx
   14001d05a:	lea    rcx,[rsp+0x30]
   14001d05f:	call   0x1400216e0
   14001d064:	mov    r8d,0x8
   14001d06a:	xor    edx,edx
   14001d06c:	lea    rcx,[rsp+0x28]
   14001d071:	call   0x1400216e0
   14001d076:	mov    r8d,0x8
   14001d07c:	xor    edx,edx
   14001d07e:	lea    rcx,[rsp+0x20]
   14001d083:	call   0x1400216e0
   14001d088:	nop
   14001d089:	mov    rax,QWORD PTR [rsp+0x50]
   14001d08e:	add    rax,0xa0
   14001d094:	mov    rcx,rax
   14001d097:	call   QWORD PTR [rip+0x9d13]        # 0x140026db0
   14001d09d:	lea    r9,[rsp+0x20]
   14001d0a2:	lea    r8,[rsp+0x28]
   14001d0a7:	lea    rdx,[rsp+0x30]
   14001d0ac:	mov    rcx,rax
   14001d0af:	call   QWORD PTR [rip+0x9173]        # 0x140026228
   14001d0b5:	nop
   14001d0b6:	jmp    0x14001d0b8
   14001d0b8:	mov    rax,QWORD PTR [rsp+0x20]
   14001d0bd:	add    rsp,0x48
   14001d0c1:	ret    
   14001d0c2:	int3   
   14001d0c3:	int3   
   14001d0c4:	int3   
   14001d0c5:	int3   
   14001d0c6:	int3   
   14001d0c7:	int3   
   14001d0c8:	int3   
   14001d0c9:	int3   
   14001d0ca:	int3   
   14001d0cb:	int3   
   14001d0cc:	int3   
   14001d0cd:	int3   
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001d0d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001d0da:	sub    rsp,0x58
   14001d0de:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001d0e7:	mov    rax,QWORD PTR [rsp+0x60]
   14001d0ec:	mov    QWORD PTR [rax],0x0
   14001d0f3:	lea    rax,[rsp+0x48]
   14001d0f8:	mov    QWORD PTR [rsp+0x28],rax
   14001d0fd:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d102:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d107:	call   0x14001da80
   14001d10c:	mov    QWORD PTR [rsp+0x30],rax
   14001d111:	mov    rax,QWORD PTR [rsp+0x30]
   14001d116:	mov    QWORD PTR [rsp+0x38],rax
   14001d11b:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d120:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d125:	call   0x14001d530
   14001d12a:	mov    DWORD PTR [rsp+0x20],eax
   14001d12e:	cmp    DWORD PTR [rsp+0x20],0x0
   14001d133:	jge    0x14001d148
   14001d135:	cmp    DWORD PTR [rsp+0x20],0x80004002
   14001d13d:	je     0x14001d148
   14001d13f:	mov    ecx,DWORD PTR [rsp+0x20]
   14001d143:	call   0x140021e90
   14001d148:	mov    rax,QWORD PTR [rsp+0x60]
   14001d14d:	add    rsp,0x58
   14001d151:	ret    
   14001d152:	int3   
   14001d153:	int3   
   14001d154:	int3   
   14001d155:	int3   
   14001d156:	int3   
   14001d157:	int3   
   14001d158:	int3   
   14001d159:	int3   
   14001d15a:	int3   
   14001d15b:	int3   
   14001d15c:	int3   
   14001d15d:	int3   
   14001d15e:	int3   
   14001d15f:	int3   
   14001d160:	mov    QWORD PTR [rsp+0x10],rdx
   14001d165:	mov    QWORD PTR [rsp+0x8],rcx
   14001d16a:	sub    rsp,0x38
   14001d16e:	mov    rax,QWORD PTR [rsp+0x40]
   14001d173:	mov    rcx,QWORD PTR [rsp+0x48]
   14001d178:	cmp    QWORD PTR [rax],rcx
   14001d17b:	je     0x14001d1b9
   14001d17d:	mov    rax,QWORD PTR [rsp+0x40]
   14001d182:	mov    rax,QWORD PTR [rax]
   14001d185:	mov    QWORD PTR [rsp+0x20],rax
   14001d18a:	mov    rax,QWORD PTR [rsp+0x40]
   14001d18f:	mov    rcx,QWORD PTR [rsp+0x48]
   14001d194:	mov    QWORD PTR [rax],rcx
   14001d197:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d19c:	call   0x14001e650
   14001d1a1:	cmp    QWORD PTR [rsp+0x20],0x0
   14001d1a7:	je     0x14001d1b9
   14001d1a9:	mov    rax,QWORD PTR [rsp+0x20]
   14001d1ae:	mov    rax,QWORD PTR [rax]
   14001d1b1:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d1b6:	call   QWORD PTR [rax+0x10]
   14001d1b9:	mov    rax,QWORD PTR [rsp+0x40]
   14001d1be:	add    rsp,0x38
   14001d1c2:	ret    
   14001d1c3:	int3   
   14001d1c4:	int3   
   14001d1c5:	int3   
   14001d1c6:	int3   
   14001d1c7:	int3   
   14001d1c8:	int3   
   14001d1c9:	int3   
   14001d1ca:	int3   
   14001d1cb:	int3   
   14001d1cc:	int3   
   14001d1cd:	int3   
   14001d1ce:	int3   
   14001d1cf:	int3   
   14001d1d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001d1d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001d1da:	sub    rsp,0x58
   14001d1de:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001d1e7:	lea    rax,[rsp+0x48]
   14001d1ec:	mov    QWORD PTR [rsp+0x28],rax
   14001d1f1:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d1f6:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d1fb:	call   0x14001da80
   14001d200:	mov    QWORD PTR [rsp+0x30],rax
   14001d205:	mov    rax,QWORD PTR [rsp+0x30]
   14001d20a:	mov    QWORD PTR [rsp+0x38],rax
   14001d20f:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d214:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d219:	call   0x14001d530
   14001d21e:	mov    DWORD PTR [rsp+0x20],eax
   14001d222:	cmp    DWORD PTR [rsp+0x20],0x0
   14001d227:	jge    0x14001d23c
   14001d229:	cmp    DWORD PTR [rsp+0x20],0x80004002
   14001d231:	je     0x14001d23c
   14001d233:	mov    ecx,DWORD PTR [rsp+0x20]
   14001d237:	call   0x140021e90
   14001d23c:	mov    rax,QWORD PTR [rsp+0x60]
   14001d241:	add    rsp,0x58
   14001d245:	ret    
   14001d246:	int3   
   14001d247:	int3   
   14001d248:	int3   
   14001d249:	int3   
   14001d24a:	int3   
   14001d24b:	int3   
   14001d24c:	int3   
   14001d24d:	int3   
   14001d24e:	int3   
   14001d24f:	int3   
   14001d250:	mov    QWORD PTR [rsp+0x10],rdx
   14001d255:	mov    QWORD PTR [rsp+0x8],rcx
   14001d25a:	sub    rsp,0x38
   14001d25e:	mov    QWORD PTR [rsp+0x20],0x0
   14001d267:	cmp    QWORD PTR [rsp+0x40],0x0
   14001d26d:	jne    0x14001d271
   14001d26f:	jmp    0x14001d2a3
   14001d271:	movabs rax,0x7ffffffffffffff
   14001d27b:	cmp    QWORD PTR [rsp+0x40],rax
   14001d280:	ja     0x14001d29d
   14001d282:	imul   rax,QWORD PTR [rsp+0x40],0x20
   14001d288:	mov    rcx,rax
   14001d28b:	call   0x140020b9c
   14001d290:	mov    QWORD PTR [rsp+0x20],rax
   14001d295:	cmp    QWORD PTR [rsp+0x20],0x0
   14001d29b:	jne    0x14001d2a3
   14001d29d:	call   QWORD PTR [rip+0x8f95]        # 0x140026238
   14001d2a3:	mov    rax,QWORD PTR [rsp+0x20]
   14001d2a8:	add    rsp,0x38
   14001d2ac:	ret    
   14001d2ad:	int3   
   14001d2ae:	int3   
   14001d2af:	int3   
   14001d2b0:	mov    QWORD PTR [rsp+0x20],r9
   14001d2b5:	mov    QWORD PTR [rsp+0x18],r8
   14001d2ba:	mov    QWORD PTR [rsp+0x10],rdx
   14001d2bf:	mov    QWORD PTR [rsp+0x8],rcx
   14001d2c4:	sub    rsp,0x58
   14001d2c8:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001d2d1:	mov    r8,QWORD PTR [rsp+0x70]
   14001d2d6:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d2db:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d2e0:	call   0x140018050
   14001d2e5:	mov    QWORD PTR [rsp+0x28],rax
   14001d2ea:	mov    rcx,QWORD PTR [rsp+0x78]
   14001d2ef:	call   0x140017e80
   14001d2f4:	mov    QWORD PTR [rsp+0x30],rax
   14001d2f9:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d2fe:	call   0x1400054b0
   14001d303:	mov    rcx,rax
   14001d306:	call   0x140017e80
   14001d30b:	mov    QWORD PTR [rsp+0x38],rax
   14001d310:	lea    rdx,[rsp+0x20]
   14001d315:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d31a:	call   0x14001e910
   14001d31f:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d324:	mov    r8,rcx
   14001d327:	mov    rcx,QWORD PTR [rsp+0x38]
   14001d32c:	mov    rdx,rcx
   14001d32f:	mov    rcx,rax
   14001d332:	call   0x14001d6f0
   14001d337:	nop
   14001d338:	jmp    0x14001d33a
   14001d33a:	mov    rax,QWORD PTR [rsp+0x28]
   14001d33f:	add    rsp,0x58
   14001d343:	ret    
   14001d344:	int3   
   14001d345:	int3   
   14001d346:	int3   
   14001d347:	int3   
   14001d348:	int3   
   14001d349:	int3   
   14001d34a:	int3   
   14001d34b:	int3   
   14001d34c:	int3   
   14001d34d:	int3   
   14001d34e:	int3   
   14001d34f:	int3   
   14001d350:	mov    QWORD PTR [rsp+0x20],r9
   14001d355:	mov    QWORD PTR [rsp+0x18],r8
   14001d35a:	mov    QWORD PTR [rsp+0x10],rdx
   14001d35f:	mov    QWORD PTR [rsp+0x8],rcx
   14001d364:	sub    rsp,0x58
   14001d368:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001d371:	mov    r8,QWORD PTR [rsp+0x70]
   14001d376:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d37b:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d380:	call   0x14001e6a0
   14001d385:	mov    QWORD PTR [rsp+0x28],rax
   14001d38a:	mov    rcx,QWORD PTR [rsp+0x78]
   14001d38f:	call   0x140017e80
   14001d394:	mov    QWORD PTR [rsp+0x30],rax
   14001d399:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d39e:	call   0x1400054b0
   14001d3a3:	mov    rcx,rax
   14001d3a6:	call   0x140017e80
   14001d3ab:	mov    QWORD PTR [rsp+0x38],rax
   14001d3b0:	lea    rdx,[rsp+0x20]
   14001d3b5:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d3ba:	call   0x14001e910
   14001d3bf:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d3c4:	mov    r8,rcx
   14001d3c7:	mov    rcx,QWORD PTR [rsp+0x38]
   14001d3cc:	mov    rdx,rcx
   14001d3cf:	mov    rcx,rax
   14001d3d2:	call   0x14001d7e0
   14001d3d7:	nop
   14001d3d8:	jmp    0x14001d3da
   14001d3da:	mov    rax,QWORD PTR [rsp+0x28]
   14001d3df:	add    rsp,0x58
   14001d3e3:	ret    
   14001d3e4:	int3   
   14001d3e5:	int3   
   14001d3e6:	int3   
   14001d3e7:	int3   
   14001d3e8:	int3   
   14001d3e9:	int3   
   14001d3ea:	int3   
   14001d3eb:	int3   
   14001d3ec:	int3   
   14001d3ed:	int3   
   14001d3ee:	int3   
   14001d3ef:	int3   
   14001d3f0:	mov    QWORD PTR [rsp+0x18],r8
   14001d3f5:	mov    QWORD PTR [rsp+0x10],rdx
   14001d3fa:	mov    QWORD PTR [rsp+0x8],rcx
   14001d3ff:	sub    rsp,0x48
   14001d403:	lea    rcx,[rsp+0x58]
   14001d408:	call   0x14001ea00
   14001d40d:	mov    QWORD PTR [rsp+0x20],rax
   14001d412:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d417:	call   0x140017e80
   14001d41c:	mov    QWORD PTR [rsp+0x30],rax
   14001d421:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d426:	call   0x140018210
   14001d42b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d430:	mov    r9,rcx
   14001d433:	mov    r8,QWORD PTR [rax]
   14001d436:	mov    rdx,QWORD PTR [rsp+0x20]
   14001d43b:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d440:	call   0x14001d2b0
   14001d445:	mov    QWORD PTR [rsp+0x28],rax
   14001d44a:	mov    edx,0x1
   14001d44f:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d454:	call   0x14001e940
   14001d459:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d45e:	call   0x140018210
   14001d463:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d468:	mov    QWORD PTR [rax],rcx
   14001d46b:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d470:	call   0x140018210
   14001d475:	mov    rcx,QWORD PTR [rax]
   14001d478:	call   0x140017e80
   14001d47d:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d482:	mov    QWORD PTR [rax],rcx
   14001d485:	add    rsp,0x48
   14001d489:	ret    
   14001d48a:	int3   
   14001d48b:	int3   
   14001d48c:	int3   
   14001d48d:	int3   
   14001d48e:	int3   
   14001d48f:	int3   
   14001d490:	mov    QWORD PTR [rsp+0x18],r8
   14001d495:	mov    QWORD PTR [rsp+0x10],rdx
   14001d49a:	mov    QWORD PTR [rsp+0x8],rcx
   14001d49f:	sub    rsp,0x48
   14001d4a3:	lea    rcx,[rsp+0x58]
   14001d4a8:	call   0x14001ea00
   14001d4ad:	mov    QWORD PTR [rsp+0x20],rax
   14001d4b2:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d4b7:	call   0x140017e80
   14001d4bc:	mov    QWORD PTR [rsp+0x30],rax
   14001d4c1:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d4c6:	call   0x140018210
   14001d4cb:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d4d0:	mov    r9,rcx
   14001d4d3:	mov    r8,QWORD PTR [rax]
   14001d4d6:	mov    rdx,QWORD PTR [rsp+0x20]
   14001d4db:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d4e0:	call   0x14001d350
   14001d4e5:	mov    QWORD PTR [rsp+0x28],rax
   14001d4ea:	mov    edx,0x1
   14001d4ef:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d4f4:	call   0x14001e9a0
   14001d4f9:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d4fe:	call   0x140018210
   14001d503:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d508:	mov    QWORD PTR [rax],rcx
   14001d50b:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d510:	call   0x140018210
   14001d515:	mov    rcx,QWORD PTR [rax]
   14001d518:	call   0x140017e80
   14001d51d:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d522:	mov    QWORD PTR [rax],rcx
   14001d525:	add    rsp,0x48
   14001d529:	ret    
   14001d52a:	int3   
   14001d52b:	int3   
   14001d52c:	int3   
   14001d52d:	int3   
   14001d52e:	int3   
   14001d52f:	int3   
   14001d530:	mov    QWORD PTR [rsp+0x10],rdx
   14001d535:	mov    QWORD PTR [rsp+0x8],rcx
   14001d53a:	sub    rsp,0x58
   14001d53e:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001d547:	xor    edx,edx
   14001d549:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d54e:	call   0x14001e080
   14001d553:	movzx  eax,al
   14001d556:	test   eax,eax
   14001d558:	je     0x14001d5c0
   14001d55a:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d55f:	call   0x14001e100
   14001d564:	mov    QWORD PTR [rsp+0x28],rax
   14001d569:	call   0x14001e3c0
   14001d56e:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d573:	mov    rcx,QWORD PTR [rcx]
   14001d576:	mov    QWORD PTR [rsp+0x38],rcx
   14001d57b:	lea    r8,[rsp+0x40]
   14001d580:	mov    rdx,rax
   14001d583:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d588:	mov    rax,QWORD PTR [rsp+0x38]
   14001d58d:	call   QWORD PTR [rax]
   14001d58f:	mov    DWORD PTR [rsp+0x20],eax
   14001d593:	cmp    DWORD PTR [rsp+0x20],0x0
   14001d598:	jl     0x14001d5a6
   14001d59a:	mov    rax,QWORD PTR [rsp+0x40]
   14001d59f:	mov    QWORD PTR [rsp+0x30],rax
   14001d5a4:	jmp    0x14001d5af
   14001d5a6:	mov    QWORD PTR [rsp+0x30],0x0
   14001d5af:	mov    rdx,QWORD PTR [rsp+0x30]
   14001d5b4:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d5b9:	call   0x14001e230
   14001d5be:	jmp    0x14001d5d4
   14001d5c0:	xor    edx,edx
   14001d5c2:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d5c7:	call   0x14001d160
   14001d5cc:	mov    DWORD PTR [rsp+0x20],0x80004002
   14001d5d4:	mov    eax,DWORD PTR [rsp+0x20]
   14001d5d8:	mov    DWORD PTR [rsp+0x24],eax
   14001d5dc:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d5e1:	call   0x14001de10
   14001d5e6:	mov    eax,DWORD PTR [rsp+0x24]
   14001d5ea:	add    rsp,0x58
   14001d5ee:	ret    
   14001d5ef:	int3   
   14001d5f0:	mov    QWORD PTR [rsp+0x18],r8
   14001d5f5:	mov    QWORD PTR [rsp+0x10],rdx
   14001d5fa:	mov    QWORD PTR [rsp+0x8],rcx
   14001d5ff:	sub    rsp,0x28
   14001d603:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d608:	call   0x140017e80
   14001d60d:	mov    r8,rax
   14001d610:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d615:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d61a:	call   0x14001d6b0
   14001d61f:	add    rsp,0x28
   14001d623:	ret    
   14001d624:	int3   
   14001d625:	int3   
   14001d626:	int3   
   14001d627:	int3   
   14001d628:	int3   
   14001d629:	int3   
   14001d62a:	int3   
   14001d62b:	int3   
   14001d62c:	int3   
   14001d62d:	int3   
   14001d62e:	int3   
   14001d62f:	int3   
   14001d630:	mov    QWORD PTR [rsp+0x18],r8
   14001d635:	mov    QWORD PTR [rsp+0x10],rdx
   14001d63a:	mov    QWORD PTR [rsp+0x8],rcx
   14001d63f:	sub    rsp,0x48
   14001d643:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001d64c:	mov    rdx,QWORD PTR [rsp+0x58]
   14001d651:	mov    ecx,0x8
   14001d656:	call   0x140012c20
   14001d65b:	mov    QWORD PTR [rsp+0x20],rax
   14001d660:	cmp    QWORD PTR [rsp+0x20],0x0
   14001d666:	je     0x14001d689
   14001d668:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d66d:	call   0x140017e80
   14001d672:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d677:	mov    rax,QWORD PTR [rax]
   14001d67a:	mov    QWORD PTR [rcx],rax
   14001d67d:	mov    rax,QWORD PTR [rsp+0x20]
   14001d682:	mov    QWORD PTR [rsp+0x28],rax
   14001d687:	jmp    0x14001d692
   14001d689:	mov    QWORD PTR [rsp+0x28],0x0
   14001d692:	mov    rax,QWORD PTR [rsp+0x28]
   14001d697:	mov    QWORD PTR [rsp+0x38],rax
   14001d69c:	add    rsp,0x48
   14001d6a0:	ret    
   14001d6a1:	int3   
   14001d6a2:	int3   
   14001d6a3:	int3   
   14001d6a4:	int3   
   14001d6a5:	int3   
   14001d6a6:	int3   
   14001d6a7:	int3   
   14001d6a8:	int3   
   14001d6a9:	int3   
   14001d6aa:	int3   
   14001d6ab:	int3   
   14001d6ac:	int3   
   14001d6ad:	int3   
   14001d6ae:	int3   
   14001d6af:	int3   
   14001d6b0:	mov    QWORD PTR [rsp+0x18],r8
   14001d6b5:	mov    QWORD PTR [rsp+0x10],rdx
   14001d6ba:	mov    QWORD PTR [rsp+0x8],rcx
   14001d6bf:	sub    rsp,0x28
   14001d6c3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d6c8:	call   0x140017e80
   14001d6cd:	mov    r8,rax
   14001d6d0:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d6d5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d6da:	call   0x14001d630
   14001d6df:	add    rsp,0x28
   14001d6e3:	ret    
   14001d6e4:	int3   
   14001d6e5:	int3   
   14001d6e6:	int3   
   14001d6e7:	int3   
   14001d6e8:	int3   
   14001d6e9:	int3   
   14001d6ea:	int3   
   14001d6eb:	int3   
   14001d6ec:	int3   
   14001d6ed:	int3   
   14001d6ee:	int3   
   14001d6ef:	int3   
   14001d6f0:	mov    QWORD PTR [rsp+0x18],r8
   14001d6f5:	mov    QWORD PTR [rsp+0x10],rdx
   14001d6fa:	mov    QWORD PTR [rsp+0x8],rcx
   14001d6ff:	sub    rsp,0x28
   14001d703:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d708:	call   0x140017e80
   14001d70d:	mov    r8,rax
   14001d710:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d715:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d71a:	call   0x14001d7a0
   14001d71f:	add    rsp,0x28
   14001d723:	ret    
   14001d724:	int3   
   14001d725:	int3   
   14001d726:	int3   
   14001d727:	int3   
   14001d728:	int3   
   14001d729:	int3   
   14001d72a:	int3   
   14001d72b:	int3   
   14001d72c:	int3   
   14001d72d:	int3   
   14001d72e:	int3   
   14001d72f:	int3   
   14001d730:	mov    QWORD PTR [rsp+0x18],r8
   14001d735:	mov    QWORD PTR [rsp+0x10],rdx
   14001d73a:	mov    QWORD PTR [rsp+0x8],rcx
   14001d73f:	sub    rsp,0x48
   14001d743:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001d74c:	mov    rdx,QWORD PTR [rsp+0x58]
   14001d751:	mov    ecx,0x28
   14001d756:	call   0x140012c20
   14001d75b:	mov    QWORD PTR [rsp+0x20],rax
   14001d760:	cmp    QWORD PTR [rsp+0x20],0x0
   14001d766:	je     0x14001d786
   14001d768:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d76d:	call   0x140017e80
   14001d772:	mov    rdx,rax
   14001d775:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d77a:	call   0x140017ed0
   14001d77f:	mov    QWORD PTR [rsp+0x28],rax
   14001d784:	jmp    0x14001d78f
   14001d786:	mov    QWORD PTR [rsp+0x28],0x0
   14001d78f:	mov    rax,QWORD PTR [rsp+0x28]
   14001d794:	mov    QWORD PTR [rsp+0x38],rax
   14001d799:	add    rsp,0x48
   14001d79d:	ret    
   14001d79e:	int3   
   14001d79f:	int3   
   14001d7a0:	mov    QWORD PTR [rsp+0x18],r8
   14001d7a5:	mov    QWORD PTR [rsp+0x10],rdx
   14001d7aa:	mov    QWORD PTR [rsp+0x8],rcx
   14001d7af:	sub    rsp,0x28
   14001d7b3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d7b8:	call   0x140017e80
   14001d7bd:	mov    r8,rax
   14001d7c0:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d7c5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d7ca:	call   0x14001d730
   14001d7cf:	add    rsp,0x28
   14001d7d3:	ret    
   14001d7d4:	int3   
   14001d7d5:	int3   
   14001d7d6:	int3   
   14001d7d7:	int3   
   14001d7d8:	int3   
   14001d7d9:	int3   
   14001d7da:	int3   
   14001d7db:	int3   
   14001d7dc:	int3   
   14001d7dd:	int3   
   14001d7de:	int3   
   14001d7df:	int3   
   14001d7e0:	mov    QWORD PTR [rsp+0x18],r8
   14001d7e5:	mov    QWORD PTR [rsp+0x10],rdx
   14001d7ea:	mov    QWORD PTR [rsp+0x8],rcx
   14001d7ef:	sub    rsp,0x28
   14001d7f3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d7f8:	call   0x140017e80
   14001d7fd:	mov    r8,rax
   14001d800:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d805:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d80a:	call   0x14001d890
   14001d80f:	add    rsp,0x28
   14001d813:	ret    
   14001d814:	int3   
   14001d815:	int3   
   14001d816:	int3   
   14001d817:	int3   
   14001d818:	int3   
   14001d819:	int3   
   14001d81a:	int3   
   14001d81b:	int3   
   14001d81c:	int3   
   14001d81d:	int3   
   14001d81e:	int3   
   14001d81f:	int3   
   14001d820:	mov    QWORD PTR [rsp+0x18],r8
   14001d825:	mov    QWORD PTR [rsp+0x10],rdx
   14001d82a:	mov    QWORD PTR [rsp+0x8],rcx
   14001d82f:	sub    rsp,0x48
   14001d833:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001d83c:	mov    rdx,QWORD PTR [rsp+0x58]
   14001d841:	mov    ecx,0x10
   14001d846:	call   0x140012c20
   14001d84b:	mov    QWORD PTR [rsp+0x20],rax
   14001d850:	cmp    QWORD PTR [rsp+0x20],0x0
   14001d856:	je     0x14001d876
   14001d858:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d85d:	call   0x140017e80
   14001d862:	mov    rdx,rax
   14001d865:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d86a:	call   0x14001dc10
   14001d86f:	mov    QWORD PTR [rsp+0x28],rax
   14001d874:	jmp    0x14001d87f
   14001d876:	mov    QWORD PTR [rsp+0x28],0x0
   14001d87f:	mov    rax,QWORD PTR [rsp+0x28]
   14001d884:	mov    QWORD PTR [rsp+0x38],rax
   14001d889:	add    rsp,0x48
   14001d88d:	ret    
   14001d88e:	int3   
   14001d88f:	int3   
   14001d890:	mov    QWORD PTR [rsp+0x18],r8
   14001d895:	mov    QWORD PTR [rsp+0x10],rdx
   14001d89a:	mov    QWORD PTR [rsp+0x8],rcx
   14001d89f:	sub    rsp,0x28
   14001d8a3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d8a8:	call   0x140017e80
   14001d8ad:	mov    r8,rax
   14001d8b0:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d8b5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d8ba:	call   0x14001d820
   14001d8bf:	add    rsp,0x28
   14001d8c3:	ret    
   14001d8c4:	int3   
   14001d8c5:	int3   
   14001d8c6:	int3   
   14001d8c7:	int3   
   14001d8c8:	int3   
   14001d8c9:	int3   
   14001d8ca:	int3   
   14001d8cb:	int3   
   14001d8cc:	int3   
   14001d8cd:	int3   
   14001d8ce:	int3   
   14001d8cf:	int3   
   14001d8d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001d8d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001d8da:	sub    rsp,0x28
   14001d8de:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d8e3:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d8e8:	call   0x14001d900
   14001d8ed:	add    rsp,0x28
   14001d8f1:	ret    
   14001d8f2:	int3   
   14001d8f3:	int3   
   14001d8f4:	int3   
   14001d8f5:	int3   
   14001d8f6:	int3   
   14001d8f7:	int3   
   14001d8f8:	int3   
   14001d8f9:	int3   
   14001d8fa:	int3   
   14001d8fb:	int3   
   14001d8fc:	int3   
   14001d8fd:	int3   
   14001d8fe:	int3   
   14001d8ff:	int3   
   14001d900:	mov    QWORD PTR [rsp+0x10],rdx
   14001d905:	mov    QWORD PTR [rsp+0x8],rcx
   14001d90a:	sub    rsp,0x28
   14001d90e:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d913:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d918:	call   0x1400054a0
   14001d91d:	add    rsp,0x28
   14001d921:	ret    
   14001d922:	int3   
   14001d923:	int3   
   14001d924:	int3   
   14001d925:	int3   
   14001d926:	int3   
   14001d927:	int3   
   14001d928:	int3   
   14001d929:	int3   
   14001d92a:	int3   
   14001d92b:	int3   
   14001d92c:	int3   
   14001d92d:	int3   
   14001d92e:	int3   
   14001d92f:	int3   
   14001d930:	mov    QWORD PTR [rsp+0x10],rdx
   14001d935:	mov    QWORD PTR [rsp+0x8],rcx
   14001d93a:	sub    rsp,0x28
   14001d93e:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d943:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d948:	call   0x14001d980
   14001d94d:	add    rsp,0x28
   14001d951:	ret    
   14001d952:	int3   
   14001d953:	int3   
   14001d954:	int3   
   14001d955:	int3   
   14001d956:	int3   
   14001d957:	int3   
   14001d958:	int3   
   14001d959:	int3   
   14001d95a:	int3   
   14001d95b:	int3   
   14001d95c:	int3   
   14001d95d:	int3   
   14001d95e:	int3   
   14001d95f:	int3   
   14001d960:	mov    QWORD PTR [rsp+0x10],rdx
   14001d965:	mov    QWORD PTR [rsp+0x8],rcx
   14001d96a:	sub    rsp,0x28
   14001d96e:	xor    edx,edx
   14001d970:	mov    rcx,QWORD PTR [rsp+0x38]
   14001d975:	call   0x14001e1f0
   14001d97a:	add    rsp,0x28
   14001d97e:	ret    
   14001d97f:	int3   
   14001d980:	mov    QWORD PTR [rsp+0x10],rdx
   14001d985:	mov    QWORD PTR [rsp+0x8],rcx
   14001d98a:	sub    rsp,0x28
   14001d98e:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d993:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d998:	call   0x14001d960
   14001d99d:	add    rsp,0x28
   14001d9a1:	ret    
   14001d9a2:	int3   
   14001d9a3:	int3   
   14001d9a4:	int3   
   14001d9a5:	int3   
   14001d9a6:	int3   
   14001d9a7:	int3   
   14001d9a8:	int3   
   14001d9a9:	int3   
   14001d9aa:	int3   
   14001d9ab:	int3   
   14001d9ac:	int3   
   14001d9ad:	int3   
   14001d9ae:	int3   
   14001d9af:	int3   
   14001d9b0:	mov    QWORD PTR [rsp+0x10],rdx
   14001d9b5:	mov    QWORD PTR [rsp+0x8],rcx
   14001d9ba:	sub    rsp,0x28
   14001d9be:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d9c3:	call   0x14001da30
   14001d9c8:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d9cd:	call   0x14001e680
   14001d9d2:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d9d7:	mov    QWORD PTR [rcx],rax
   14001d9da:	mov    rax,QWORD PTR [rsp+0x30]
   14001d9df:	add    rsp,0x28
   14001d9e3:	ret    
   14001d9e4:	int3   
   14001d9e5:	int3   
   14001d9e6:	int3   
   14001d9e7:	int3   
   14001d9e8:	int3   
   14001d9e9:	int3   
   14001d9ea:	int3   
   14001d9eb:	int3   
   14001d9ec:	int3   
   14001d9ed:	int3   
   14001d9ee:	int3   
   14001d9ef:	int3   
   14001d9f0:	mov    QWORD PTR [rsp+0x10],rdx
   14001d9f5:	mov    QWORD PTR [rsp+0x8],rcx
   14001d9fa:	sub    rsp,0x38
   14001d9fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001da07:	mov    rdx,QWORD PTR [rsp+0x48]
   14001da0c:	mov    rcx,QWORD PTR [rsp+0x40]
   14001da11:	call   0x14001d9b0
   14001da16:	nop
   14001da17:	mov    rax,QWORD PTR [rsp+0x40]
   14001da1c:	add    rsp,0x38
   14001da20:	ret    
   14001da21:	int3   
   14001da22:	int3   
   14001da23:	int3   
   14001da24:	int3   
   14001da25:	int3   
   14001da26:	int3   
   14001da27:	int3   
   14001da28:	int3   
   14001da29:	int3   
   14001da2a:	int3   
   14001da2b:	int3   
   14001da2c:	int3   
   14001da2d:	int3   
   14001da2e:	int3   
   14001da2f:	int3   
   14001da30:	mov    QWORD PTR [rsp+0x8],rcx
   14001da35:	mov    rax,QWORD PTR [rsp+0x8]
   14001da3a:	mov    QWORD PTR [rax],0x0
   14001da41:	mov    rax,QWORD PTR [rsp+0x8]
   14001da46:	mov    QWORD PTR [rax+0x8],0x0
   14001da4e:	mov    rax,QWORD PTR [rsp+0x8]
   14001da53:	ret    
   14001da54:	int3   
   14001da55:	int3   
   14001da56:	int3   
   14001da57:	int3   
   14001da58:	int3   
   14001da59:	int3   
   14001da5a:	int3   
   14001da5b:	int3   
   14001da5c:	int3   
   14001da5d:	int3   
   14001da5e:	int3   
   14001da5f:	int3   
   14001da60:	mov    QWORD PTR [rsp+0x8],rcx
   14001da65:	sub    rsp,0x28
   14001da69:	mov    rcx,QWORD PTR [rsp+0x30]
   14001da6e:	call   0x140017e80
   14001da73:	mov    rax,QWORD PTR [rsp+0x30]
   14001da78:	add    rsp,0x28
   14001da7c:	ret    
   14001da7d:	int3   
   14001da7e:	int3   
   14001da7f:	int3   
   14001da80:	mov    QWORD PTR [rsp+0x10],rdx
   14001da85:	mov    QWORD PTR [rsp+0x8],rcx
   14001da8a:	sub    rsp,0x28
   14001da8e:	mov    rax,QWORD PTR [rsp+0x30]
   14001da93:	mov    rcx,QWORD PTR [rsp+0x38]
   14001da98:	mov    rcx,QWORD PTR [rcx]
   14001da9b:	mov    QWORD PTR [rax],rcx
   14001da9e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001daa3:	call   0x14001e650
   14001daa8:	mov    rax,QWORD PTR [rsp+0x30]
   14001daad:	add    rsp,0x28
   14001dab1:	ret    
   14001dab2:	int3   
   14001dab3:	int3   
   14001dab4:	int3   
   14001dab5:	int3   
   14001dab6:	int3   
   14001dab7:	int3   
   14001dab8:	int3   
   14001dab9:	int3   
   14001daba:	int3   
   14001dabb:	int3   
   14001dabc:	int3   
   14001dabd:	int3   
   14001dabe:	int3   
   14001dabf:	int3   
   14001dac0:	mov    BYTE PTR [rsp+0x18],r8b
   14001dac5:	mov    QWORD PTR [rsp+0x10],rdx
   14001daca:	mov    QWORD PTR [rsp+0x8],rcx
   14001dacf:	sub    rsp,0x28
   14001dad3:	mov    rax,QWORD PTR [rsp+0x30]
   14001dad8:	mov    rcx,QWORD PTR [rsp+0x38]
   14001dadd:	mov    QWORD PTR [rax],rcx
   14001dae0:	movzx  eax,BYTE PTR [rsp+0x40]
   14001dae5:	test   eax,eax
   14001dae7:	je     0x14001daf3
   14001dae9:	mov    rcx,QWORD PTR [rsp+0x30]
   14001daee:	call   0x14001e650
   14001daf3:	mov    rax,QWORD PTR [rsp+0x30]
   14001daf8:	add    rsp,0x28
   14001dafc:	ret    
   14001dafd:	int3   
   14001dafe:	int3   
   14001daff:	int3   
   14001db00:	mov    DWORD PTR [rsp+0x10],edx
   14001db04:	mov    QWORD PTR [rsp+0x8],rcx
   14001db09:	sub    rsp,0x28
   14001db0d:	mov    rax,QWORD PTR [rsp+0x30]
   14001db12:	mov    QWORD PTR [rax],0x0
   14001db19:	cmp    DWORD PTR [rsp+0x38],0x0
   14001db1e:	je     0x14001db2a
   14001db20:	mov    ecx,0x80004003
   14001db25:	call   0x140021e90
   14001db2a:	mov    rax,QWORD PTR [rsp+0x30]
   14001db2f:	add    rsp,0x28
   14001db33:	ret    
   14001db34:	int3   
   14001db35:	int3   
   14001db36:	int3   
   14001db37:	int3   
   14001db38:	int3   
   14001db39:	int3   
   14001db3a:	int3   
   14001db3b:	int3   
   14001db3c:	int3   
   14001db3d:	int3   
   14001db3e:	int3   
   14001db3f:	int3   
   14001db40:	mov    QWORD PTR [rsp+0x8],rcx
   14001db45:	sub    rsp,0x38
   14001db49:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001db52:	lea    rcx,[rsp+0x20]
   14001db57:	call   0x140017e80
   14001db5c:	mov    rdx,rax
   14001db5f:	mov    rcx,QWORD PTR [rsp+0x40]
   14001db64:	call   0x14001d9f0
   14001db69:	nop
   14001db6a:	mov    rax,QWORD PTR [rsp+0x40]
   14001db6f:	add    rsp,0x38
   14001db73:	ret    
   14001db74:	int3   
   14001db75:	int3   
   14001db76:	int3   
   14001db77:	int3   
   14001db78:	int3   
   14001db79:	int3   
   14001db7a:	int3   
   14001db7b:	int3   
   14001db7c:	int3   
   14001db7d:	int3   
   14001db7e:	int3   
   14001db7f:	int3   
   14001db80:	mov    BYTE PTR [rsp+0x18],r8b
   14001db85:	mov    QWORD PTR [rsp+0x10],rdx
   14001db8a:	mov    QWORD PTR [rsp+0x8],rcx
   14001db8f:	sub    rsp,0x28
   14001db93:	mov    rax,QWORD PTR [rsp+0x30]
   14001db98:	mov    QWORD PTR [rax+0x8],0x0
   14001dba0:	mov    rax,QWORD PTR [rsp+0x30]
   14001dba5:	mov    DWORD PTR [rax+0x10],0x1
   14001dbac:	movzx  eax,BYTE PTR [rsp+0x40]
   14001dbb1:	test   eax,eax
   14001dbb3:	je     0x14001dbf4
   14001dbb5:	cmp    QWORD PTR [rsp+0x38],0x0
   14001dbbb:	je     0x14001dbf4
   14001dbbd:	mov    rcx,QWORD PTR [rsp+0x38]
   14001dbc2:	call   QWORD PTR [rip+0x88e8]        # 0x1400264b0
   14001dbc8:	mov    edx,eax
   14001dbca:	mov    rcx,QWORD PTR [rsp+0x38]
   14001dbcf:	call   QWORD PTR [rip+0x88d3]        # 0x1400264a8
   14001dbd5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dbda:	mov    QWORD PTR [rcx],rax
   14001dbdd:	mov    rax,QWORD PTR [rsp+0x30]
   14001dbe2:	cmp    QWORD PTR [rax],0x0
   14001dbe6:	jne    0x14001dbf2
   14001dbe8:	mov    ecx,0x8007000e
   14001dbed:	call   0x140021e90
   14001dbf2:	jmp    0x14001dc01
   14001dbf4:	mov    rax,QWORD PTR [rsp+0x30]
   14001dbf9:	mov    rcx,QWORD PTR [rsp+0x38]
   14001dbfe:	mov    QWORD PTR [rax],rcx
   14001dc01:	mov    rax,QWORD PTR [rsp+0x30]
   14001dc06:	add    rsp,0x28
   14001dc0a:	ret    
   14001dc0b:	int3   
   14001dc0c:	int3   
   14001dc0d:	int3   
   14001dc0e:	int3   
   14001dc0f:	int3   
   14001dc10:	mov    QWORD PTR [rsp+0x10],rdx
   14001dc15:	mov    QWORD PTR [rsp+0x8],rcx
   14001dc1a:	sub    rsp,0x38
   14001dc1e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001dc27:	mov    rax,QWORD PTR [rsp+0x48]
   14001dc2c:	mov    rcx,QWORD PTR [rsp+0x40]
   14001dc31:	mov    rdx,rax
   14001dc34:	call   QWORD PTR [rip+0x9136]        # 0x140026d70
   14001dc3a:	nop
   14001dc3b:	mov    rax,QWORD PTR [rsp+0x48]
   14001dc40:	add    rax,0x8
   14001dc44:	mov    rcx,QWORD PTR [rsp+0x40]
   14001dc49:	add    rcx,0x8
   14001dc4d:	mov    rdx,rax
   14001dc50:	call   QWORD PTR [rip+0x911a]        # 0x140026d70
   14001dc56:	nop
   14001dc57:	mov    rax,QWORD PTR [rsp+0x40]
   14001dc5c:	add    rsp,0x38
   14001dc60:	ret    
   14001dc61:	int3   
   14001dc62:	int3   
   14001dc63:	int3   
   14001dc64:	int3   
   14001dc65:	int3   
   14001dc66:	int3   
   14001dc67:	int3   
   14001dc68:	int3   
   14001dc69:	int3   
   14001dc6a:	int3   
   14001dc6b:	int3   
   14001dc6c:	int3   
   14001dc6d:	int3   
   14001dc6e:	int3   
   14001dc6f:	int3   
   14001dc70:	mov    QWORD PTR [rsp+0x8],rcx
   14001dc75:	sub    rsp,0x38
   14001dc79:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001dc82:	mov    rax,QWORD PTR [rsp+0x40]
   14001dc87:	mov    rcx,rax
   14001dc8a:	call   QWORD PTR [rip+0x90f0]        # 0x140026d80
   14001dc90:	nop
   14001dc91:	mov    rax,QWORD PTR [rsp+0x40]
   14001dc96:	add    rax,0x8
   14001dc9a:	mov    rcx,rax
   14001dc9d:	call   QWORD PTR [rip+0x90dd]        # 0x140026d80
   14001dca3:	nop
   14001dca4:	mov    rax,QWORD PTR [rsp+0x40]
   14001dca9:	add    rsp,0x38
   14001dcad:	ret    
   14001dcae:	int3   
   14001dcaf:	int3   
   14001dcb0:	mov    QWORD PTR [rsp+0x8],rcx
   14001dcb5:	sub    rsp,0x38
   14001dcb9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001dcc2:	mov    rcx,QWORD PTR [rsp+0x40]
   14001dcc7:	call   0x14001db40
   14001dccc:	nop
   14001dccd:	mov    rax,QWORD PTR [rsp+0x40]
   14001dcd2:	add    rax,0x18
   14001dcd6:	mov    rcx,rax
   14001dcd9:	call   QWORD PTR [rip+0x90a1]        # 0x140026d80
   14001dcdf:	nop
   14001dce0:	mov    rax,QWORD PTR [rsp+0x40]
   14001dce5:	add    rax,0x20
   14001dce9:	mov    rcx,rax
   14001dcec:	call   QWORD PTR [rip+0x908e]        # 0x140026d80
   14001dcf2:	nop
   14001dcf3:	mov    rax,QWORD PTR [rsp+0x40]
   14001dcf8:	add    rax,0x28
   14001dcfc:	mov    rcx,rax
   14001dcff:	call   QWORD PTR [rip+0x907b]        # 0x140026d80
   14001dd05:	nop
   14001dd06:	mov    rax,QWORD PTR [rsp+0x40]
   14001dd0b:	add    rax,0x30
   14001dd0f:	mov    rcx,rax
   14001dd12:	call   QWORD PTR [rip+0x9068]        # 0x140026d80
   14001dd18:	nop
   14001dd19:	mov    rax,QWORD PTR [rsp+0x40]
   14001dd1e:	add    rsp,0x38
   14001dd22:	ret    
   14001dd23:	int3   
   14001dd24:	int3   
   14001dd25:	int3   
   14001dd26:	int3   
   14001dd27:	int3   
   14001dd28:	int3   
   14001dd29:	int3   
   14001dd2a:	int3   
   14001dd2b:	int3   
   14001dd2c:	int3   
   14001dd2d:	int3   
   14001dd2e:	int3   
   14001dd2f:	int3   
   14001dd30:	mov    BYTE PTR [rsp+0x18],r8b
   14001dd35:	mov    QWORD PTR [rsp+0x10],rdx
   14001dd3a:	mov    QWORD PTR [rsp+0x8],rcx
   14001dd3f:	sub    rsp,0x48
   14001dd43:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001dd4c:	mov    ecx,0x18
   14001dd51:	call   0x140002b80
   14001dd56:	mov    QWORD PTR [rsp+0x20],rax
   14001dd5b:	cmp    QWORD PTR [rsp+0x20],0x0
   14001dd61:	je     0x14001dd7f
   14001dd63:	movzx  r8d,BYTE PTR [rsp+0x60]
   14001dd69:	mov    rdx,QWORD PTR [rsp+0x58]
   14001dd6e:	mov    rcx,QWORD PTR [rsp+0x20]
   14001dd73:	call   0x14001db80
   14001dd78:	mov    QWORD PTR [rsp+0x28],rax
   14001dd7d:	jmp    0x14001dd88
   14001dd7f:	mov    QWORD PTR [rsp+0x28],0x0
   14001dd88:	mov    rax,QWORD PTR [rsp+0x28]
   14001dd8d:	mov    QWORD PTR [rsp+0x30],rax
   14001dd92:	mov    rax,QWORD PTR [rsp+0x50]
   14001dd97:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dd9c:	mov    QWORD PTR [rax],rcx
   14001dd9f:	mov    rax,QWORD PTR [rsp+0x50]
   14001dda4:	cmp    QWORD PTR [rax],0x0
   14001dda8:	jne    0x14001ddb4
   14001ddaa:	mov    ecx,0x8007000e
   14001ddaf:	call   0x140021e90
   14001ddb4:	mov    rax,QWORD PTR [rsp+0x50]
   14001ddb9:	add    rsp,0x48
   14001ddbd:	ret    
   14001ddbe:	int3   
   14001ddbf:	int3   
   14001ddc0:	mov    QWORD PTR [rsp+0x8],rcx
   14001ddc5:	sub    rsp,0x28
   14001ddc9:	mov    rax,QWORD PTR [rsp+0x30]
   14001ddce:	mov    rdx,QWORD PTR [rax]
   14001ddd1:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ddd6:	call   0x14001e780
   14001dddb:	add    rsp,0x28
   14001dddf:	ret    
   14001dde0:	mov    QWORD PTR [rsp+0x8],rcx
   14001dde5:	sub    rsp,0x38
   14001dde9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ddf2:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ddf7:	call   0x14001ddc0
   14001ddfc:	add    rsp,0x38
   14001de00:	ret    
   14001de01:	int3   
   14001de02:	int3   
   14001de03:	int3   
   14001de04:	int3   
   14001de05:	int3   
   14001de06:	int3   
   14001de07:	int3   
   14001de08:	int3   
   14001de09:	int3   
   14001de0a:	int3   
   14001de0b:	int3   
   14001de0c:	int3   
   14001de0d:	int3   
   14001de0e:	int3   
   14001de0f:	int3   
   14001de10:	mov    QWORD PTR [rsp+0x8],rcx
   14001de15:	sub    rsp,0x28
   14001de19:	mov    rcx,QWORD PTR [rsp+0x30]
   14001de1e:	call   0x14001ea10
   14001de23:	add    rsp,0x28
   14001de27:	ret    
   14001de28:	int3   
   14001de29:	int3   
   14001de2a:	int3   
   14001de2b:	int3   
   14001de2c:	int3   
   14001de2d:	int3   
   14001de2e:	int3   
   14001de2f:	int3   
   14001de30:	mov    QWORD PTR [rsp+0x8],rcx
   14001de35:	sub    rsp,0x38
   14001de39:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001de42:	mov    rcx,QWORD PTR [rsp+0x40]
   14001de47:	call   0x14001ea40
   14001de4c:	nop
   14001de4d:	mov    rcx,QWORD PTR [rsp+0x40]
   14001de52:	call   0x14001dde0
   14001de57:	add    rsp,0x38
   14001de5b:	ret    
   14001de5c:	int3   
   14001de5d:	int3   
   14001de5e:	int3   
   14001de5f:	int3   
   14001de60:	mov    QWORD PTR [rsp+0x8],rcx
   14001de65:	sub    rsp,0x38
   14001de69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001de72:	mov    rax,QWORD PTR [rsp+0x40]
   14001de77:	add    rax,0x50
   14001de7b:	mov    rcx,rax
   14001de7e:	call   QWORD PTR [rip+0x8edc]        # 0x140026d60
   14001de84:	nop
   14001de85:	mov    rax,QWORD PTR [rsp+0x40]
   14001de8a:	add    rax,0x48
   14001de8e:	mov    rcx,rax
   14001de91:	call   QWORD PTR [rip+0x8ec9]        # 0x140026d60
   14001de97:	nop
   14001de98:	mov    rax,QWORD PTR [rsp+0x40]
   14001de9d:	add    rax,0x40
   14001dea1:	mov    rcx,rax
   14001dea4:	call   QWORD PTR [rip+0x8eb6]        # 0x140026d60
   14001deaa:	nop
   14001deab:	mov    rax,QWORD PTR [rsp+0x40]
   14001deb0:	add    rax,0x38
   14001deb4:	mov    rcx,rax
   14001deb7:	call   QWORD PTR [rip+0x8ea3]        # 0x140026d60
   14001debd:	nop
   14001debe:	mov    rax,QWORD PTR [rsp+0x40]
   14001dec3:	add    rax,0x30
   14001dec7:	mov    rcx,rax
   14001deca:	call   QWORD PTR [rip+0x8e90]        # 0x140026d60
   14001ded0:	nop
   14001ded1:	mov    rax,QWORD PTR [rsp+0x40]
   14001ded6:	add    rax,0x28
   14001deda:	mov    rcx,rax
   14001dedd:	call   QWORD PTR [rip+0x8e7d]        # 0x140026d60
   14001dee3:	nop
   14001dee4:	mov    rax,QWORD PTR [rsp+0x40]
   14001dee9:	add    rax,0x20
   14001deed:	mov    rcx,rax
   14001def0:	call   QWORD PTR [rip+0x8e6a]        # 0x140026d60
   14001def6:	nop
   14001def7:	mov    rax,QWORD PTR [rsp+0x40]
   14001defc:	add    rax,0x18
   14001df00:	mov    rcx,rax
   14001df03:	call   QWORD PTR [rip+0x8e57]        # 0x140026d60
   14001df09:	nop
   14001df0a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001df0f:	call   0x140017f80
   14001df14:	add    rsp,0x38
   14001df18:	ret    
   14001df19:	int3   
   14001df1a:	int3   
   14001df1b:	int3   
   14001df1c:	int3   
   14001df1d:	int3   
   14001df1e:	int3   
   14001df1f:	int3   
   14001df20:	mov    QWORD PTR [rsp+0x8],rcx
   14001df25:	sub    rsp,0x38
   14001df29:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001df32:	mov    rax,QWORD PTR [rsp+0x40]
   14001df37:	add    rax,0x8
   14001df3b:	mov    rcx,rax
   14001df3e:	call   QWORD PTR [rip+0x8e1c]        # 0x140026d60
   14001df44:	nop
   14001df45:	mov    rax,QWORD PTR [rsp+0x40]
   14001df4a:	mov    rcx,rax
   14001df4d:	call   QWORD PTR [rip+0x8e0d]        # 0x140026d60
   14001df53:	add    rsp,0x38
   14001df57:	ret    
   14001df58:	int3   
   14001df59:	int3   
   14001df5a:	int3   
   14001df5b:	int3   
   14001df5c:	int3   
   14001df5d:	int3   
   14001df5e:	int3   
   14001df5f:	int3   
   14001df60:	mov    QWORD PTR [rsp+0x8],rcx
   14001df65:	sub    rsp,0x38
   14001df69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001df72:	mov    rax,QWORD PTR [rsp+0x40]
   14001df77:	add    rax,0x30
   14001df7b:	mov    rcx,rax
   14001df7e:	call   QWORD PTR [rip+0x8ddc]        # 0x140026d60
   14001df84:	nop
   14001df85:	mov    rax,QWORD PTR [rsp+0x40]
   14001df8a:	add    rax,0x28
   14001df8e:	mov    rcx,rax
   14001df91:	call   QWORD PTR [rip+0x8dc9]        # 0x140026d60
   14001df97:	nop
   14001df98:	mov    rax,QWORD PTR [rsp+0x40]
   14001df9d:	add    rax,0x20
   14001dfa1:	mov    rcx,rax
   14001dfa4:	call   QWORD PTR [rip+0x8db6]        # 0x140026d60
   14001dfaa:	nop
   14001dfab:	mov    rax,QWORD PTR [rsp+0x40]
   14001dfb0:	add    rax,0x18
   14001dfb4:	mov    rcx,rax
   14001dfb7:	call   QWORD PTR [rip+0x8da3]        # 0x140026d60
   14001dfbd:	nop
   14001dfbe:	mov    rcx,QWORD PTR [rsp+0x40]
   14001dfc3:	call   0x14001de30
   14001dfc8:	add    rsp,0x38
   14001dfcc:	ret    
   14001dfcd:	int3   
   14001dfce:	int3   
   14001dfcf:	int3   
   14001dfd0:	mov    DWORD PTR [rsp+0x10],edx
   14001dfd4:	mov    QWORD PTR [rsp+0x8],rcx
   14001dfd9:	sub    rsp,0x28
   14001dfdd:	cmp    DWORD PTR [rsp+0x38],0x0
   14001dfe2:	je     0x14001dfee
   14001dfe4:	mov    ecx,0x80004003
   14001dfe9:	call   0x140021e90
   14001dfee:	xor    edx,edx
   14001dff0:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dff5:	call   0x14001d160
   14001dffa:	add    rsp,0x28
   14001dffe:	ret    
   14001dfff:	int3   
   14001e000:	mov    QWORD PTR [rsp+0x10],rdx
   14001e005:	mov    QWORD PTR [rsp+0x8],rcx
   14001e00a:	sub    rsp,0x28
   14001e00e:	mov    rax,QWORD PTR [rsp+0x38]
   14001e013:	mov    rdx,QWORD PTR [rax]
   14001e016:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e01b:	call   0x14001d160
   14001e020:	add    rsp,0x28
   14001e024:	ret    
   14001e025:	int3   
   14001e026:	int3   
   14001e027:	int3   
   14001e028:	int3   
   14001e029:	int3   
   14001e02a:	int3   
   14001e02b:	int3   
   14001e02c:	int3   
   14001e02d:	int3   
   14001e02e:	int3   
   14001e02f:	int3   
   14001e030:	mov    DWORD PTR [rsp+0x10],edx
   14001e034:	mov    QWORD PTR [rsp+0x8],rcx
   14001e039:	sub    rsp,0x38
   14001e03d:	cmp    DWORD PTR [rsp+0x48],0x0
   14001e042:	je     0x14001e04e
   14001e044:	mov    ecx,0x80004003
   14001e049:	call   0x140021e90
   14001e04e:	mov    rax,QWORD PTR [rsp+0x40]
   14001e053:	cmp    QWORD PTR [rax],0x0
   14001e057:	jne    0x14001e063
   14001e059:	mov    DWORD PTR [rsp+0x20],0x1
   14001e061:	jmp    0x14001e06b
   14001e063:	mov    DWORD PTR [rsp+0x20],0x0
   14001e06b:	movzx  eax,BYTE PTR [rsp+0x20]
   14001e070:	add    rsp,0x38
   14001e074:	ret    
   14001e075:	int3   
   14001e076:	int3   
   14001e077:	int3   
   14001e078:	int3   
   14001e079:	int3   
   14001e07a:	int3   
   14001e07b:	int3   
   14001e07c:	int3   
   14001e07d:	int3   
   14001e07e:	int3   
   14001e07f:	int3   
   14001e080:	mov    DWORD PTR [rsp+0x10],edx
   14001e084:	mov    QWORD PTR [rsp+0x8],rcx
   14001e089:	sub    rsp,0x38
   14001e08d:	mov    edx,DWORD PTR [rsp+0x48]
   14001e091:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e096:	call   0x14001e030
   14001e09b:	movzx  eax,al
   14001e09e:	test   eax,eax
   14001e0a0:	jne    0x14001e0ac
   14001e0a2:	mov    DWORD PTR [rsp+0x20],0x1
   14001e0aa:	jmp    0x14001e0b4
   14001e0ac:	mov    DWORD PTR [rsp+0x20],0x0
   14001e0b4:	movzx  eax,BYTE PTR [rsp+0x20]
   14001e0b9:	add    rsp,0x38
   14001e0bd:	ret    
   14001e0be:	int3   
   14001e0bf:	int3   
   14001e0c0:	mov    QWORD PTR [rsp+0x10],rdx
   14001e0c5:	mov    QWORD PTR [rsp+0x8],rcx
   14001e0ca:	sub    rsp,0x38
   14001e0ce:	mov    rdx,QWORD PTR [rsp+0x48]
   14001e0d3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e0d8:	call   QWORD PTR [rip+0x8c62]        # 0x140026d40
   14001e0de:	test   eax,eax
   14001e0e0:	je     0x14001e0ec
   14001e0e2:	mov    DWORD PTR [rsp+0x20],0x1
   14001e0ea:	jmp    0x14001e0f4
   14001e0ec:	mov    DWORD PTR [rsp+0x20],0x0
   14001e0f4:	movzx  eax,BYTE PTR [rsp+0x20]
   14001e0f9:	add    rsp,0x38
   14001e0fd:	ret    
   14001e0fe:	int3   
   14001e0ff:	int3   
   14001e100:	mov    QWORD PTR [rsp+0x8],rcx
   14001e105:	sub    rsp,0x28
   14001e109:	mov    rax,QWORD PTR [rsp+0x30]
   14001e10e:	cmp    QWORD PTR [rax],0x0
   14001e112:	jne    0x14001e11e
   14001e114:	mov    ecx,0x80004003
   14001e119:	call   0x140021e90
   14001e11e:	mov    rax,QWORD PTR [rsp+0x30]
   14001e123:	mov    rax,QWORD PTR [rax]
   14001e126:	add    rsp,0x28
   14001e12a:	ret    
   14001e12b:	int3   
   14001e12c:	int3   
   14001e12d:	int3   
   14001e12e:	int3   
   14001e12f:	int3   
   14001e130:	mov    QWORD PTR [rsp+0x18],r8
   14001e135:	mov    QWORD PTR [rsp+0x10],rdx
   14001e13a:	mov    QWORD PTR [rsp+0x8],rcx
   14001e13f:	sub    rsp,0x58
   14001e143:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001e14c:	mov    DWORD PTR [rsp+0x30],0x0
   14001e154:	mov    rcx,QWORD PTR [rsp+0x68]
   14001e159:	call   QWORD PTR [rip+0x8be9]        # 0x140026d48
   14001e15f:	mov    rdx,rax
   14001e162:	lea    rcx,[rsp+0x40]
   14001e167:	call   QWORD PTR [rip+0x8c0b]        # 0x140026d78
   14001e16d:	nop
   14001e16e:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e173:	call   QWORD PTR [rip+0x8c17]        # 0x140026d90
   14001e179:	mov    DWORD PTR [rsp+0x34],eax
   14001e17d:	mov    rcx,QWORD PTR [rsp+0x68]
   14001e182:	call   QWORD PTR [rip+0x8c18]        # 0x140026da0
   14001e188:	mov    DWORD PTR [rsp+0x38],eax
   14001e18c:	mov    rcx,QWORD PTR [rsp+0x68]
   14001e191:	call   QWORD PTR [rip+0x8c19]        # 0x140026db0
   14001e197:	mov    ecx,DWORD PTR [rsp+0x34]
   14001e19b:	mov    DWORD PTR [rsp+0x20],ecx
   14001e19f:	mov    r9,QWORD PTR [rsp+0x70]
   14001e1a4:	mov    ecx,DWORD PTR [rsp+0x38]
   14001e1a8:	mov    r8d,ecx
   14001e1ab:	mov    rdx,rax
   14001e1ae:	lea    rcx,[rsp+0x40]
   14001e1b3:	call   QWORD PTR [rip+0x8bcf]        # 0x140026d88
   14001e1b9:	lea    rdx,[rsp+0x40]
   14001e1be:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e1c3:	call   QWORD PTR [rip+0x8ba7]        # 0x140026d70
   14001e1c9:	mov    eax,DWORD PTR [rsp+0x30]
   14001e1cd:	or     eax,0x1
   14001e1d0:	mov    DWORD PTR [rsp+0x30],eax
   14001e1d4:	lea    rcx,[rsp+0x40]
   14001e1d9:	call   QWORD PTR [rip+0x8b81]        # 0x140026d60
   14001e1df:	mov    rax,QWORD PTR [rsp+0x60]
   14001e1e4:	add    rsp,0x58
   14001e1e8:	ret    
   14001e1e9:	int3   
   14001e1ea:	int3   
   14001e1eb:	int3   
   14001e1ec:	int3   
   14001e1ed:	int3   
   14001e1ee:	int3   
   14001e1ef:	int3   
   14001e1f0:	mov    DWORD PTR [rsp+0x10],edx
   14001e1f4:	mov    QWORD PTR [rsp+0x8],rcx
   14001e1f9:	sub    rsp,0x28
   14001e1fd:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e202:	call   0x14001df20
   14001e207:	mov    eax,DWORD PTR [rsp+0x38]
   14001e20b:	and    eax,0x1
   14001e20e:	test   eax,eax
   14001e210:	je     0x14001e21c
   14001e212:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e217:	call   0x140020b90
   14001e21c:	mov    rax,QWORD PTR [rsp+0x30]
   14001e221:	add    rsp,0x28
   14001e225:	ret    
   14001e226:	int3   
   14001e227:	int3   
   14001e228:	int3   
   14001e229:	int3   
   14001e22a:	int3   
   14001e22b:	int3   
   14001e22c:	int3   
   14001e22d:	int3   
   14001e22e:	int3   
   14001e22f:	int3   
   14001e230:	mov    QWORD PTR [rsp+0x10],rdx
   14001e235:	mov    QWORD PTR [rsp+0x8],rcx
   14001e23a:	sub    rsp,0x28
   14001e23e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e243:	call   0x14001ea10
   14001e248:	mov    rax,QWORD PTR [rsp+0x30]
   14001e24d:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e252:	mov    QWORD PTR [rax],rcx
   14001e255:	add    rsp,0x28
   14001e259:	ret    
   14001e25a:	int3   
   14001e25b:	int3   
   14001e25c:	int3   
   14001e25d:	int3   
   14001e25e:	int3   
   14001e25f:	int3   
   14001e260:	mov    DWORD PTR [rsp+0x20],r9d
   14001e265:	mov    QWORD PTR [rsp+0x18],r8
   14001e26a:	mov    QWORD PTR [rsp+0x10],rdx
   14001e26f:	mov    QWORD PTR [rsp+0x8],rcx
   14001e274:	sub    rsp,0x68
   14001e278:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e27d:	call   0x14001ea10
   14001e282:	mov    eax,DWORD PTR [rsp+0x88]
   14001e289:	and    eax,0x14
   14001e28c:	test   eax,eax
   14001e28e:	je     0x14001e32a
   14001e294:	lea    rax,[rsp+0x38]
   14001e299:	mov    QWORD PTR [rsp+0x20],rax
   14001e29e:	lea    r9,[rip+0x91d3]        # 0x140027478
   14001e2a5:	mov    r8d,DWORD PTR [rsp+0x88]
   14001e2ad:	mov    rdx,QWORD PTR [rsp+0x80]
   14001e2b5:	mov    rcx,QWORD PTR [rsp+0x78]
   14001e2ba:	call   QWORD PTR [rip+0x8bb0]        # 0x140026e70
   14001e2c0:	mov    DWORD PTR [rsp+0x30],eax
   14001e2c4:	cmp    DWORD PTR [rsp+0x30],0x0
   14001e2c9:	jl     0x14001e328
   14001e2cb:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e2d0:	call   QWORD PTR [rip+0x8b7a]        # 0x140026e50
   14001e2d6:	mov    DWORD PTR [rsp+0x30],eax
   14001e2da:	cmp    DWORD PTR [rsp+0x30],0x0
   14001e2df:	jl     0x14001e318
   14001e2e1:	mov    rax,QWORD PTR [rsp+0x70]
   14001e2e6:	mov    QWORD PTR [rsp+0x40],rax
   14001e2eb:	call   0x14001e3b0
   14001e2f0:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e2f5:	mov    rcx,QWORD PTR [rcx]
   14001e2f8:	mov    QWORD PTR [rsp+0x48],rcx
   14001e2fd:	mov    rdx,QWORD PTR [rsp+0x40]
   14001e302:	mov    r8,rdx
   14001e305:	mov    rdx,rax
   14001e308:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e30d:	mov    rax,QWORD PTR [rsp+0x48]
   14001e312:	call   QWORD PTR [rax]
   14001e314:	mov    DWORD PTR [rsp+0x30],eax
   14001e318:	mov    rax,QWORD PTR [rsp+0x38]
   14001e31d:	mov    rax,QWORD PTR [rax]
   14001e320:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e325:	call   QWORD PTR [rax+0x10]
   14001e328:	jmp    0x14001e365
   14001e32a:	mov    rax,QWORD PTR [rsp+0x70]
   14001e32f:	mov    QWORD PTR [rsp+0x50],rax
   14001e334:	call   0x14001e3b0
   14001e339:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e33e:	mov    QWORD PTR [rsp+0x20],rcx
   14001e343:	mov    r9,rax
   14001e346:	mov    r8d,DWORD PTR [rsp+0x88]
   14001e34e:	mov    rdx,QWORD PTR [rsp+0x80]
   14001e356:	mov    rcx,QWORD PTR [rsp+0x78]
   14001e35b:	call   QWORD PTR [rip+0x8b0f]        # 0x140026e70
   14001e361:	mov    DWORD PTR [rsp+0x30],eax
   14001e365:	cmp    DWORD PTR [rsp+0x30],0x0
   14001e36a:	jge    0x14001e378
   14001e36c:	mov    rax,QWORD PTR [rsp+0x70]
   14001e371:	mov    QWORD PTR [rax],0x0
   14001e378:	mov    eax,DWORD PTR [rsp+0x30]
   14001e37c:	add    rsp,0x68
   14001e380:	ret    
   14001e381:	int3   
   14001e382:	int3   
   14001e383:	int3   
   14001e384:	int3   
   14001e385:	int3   
   14001e386:	int3   
   14001e387:	int3   
   14001e388:	int3   
   14001e389:	int3   
   14001e38a:	int3   
   14001e38b:	int3   
   14001e38c:	int3   
   14001e38d:	int3   
   14001e38e:	int3   
   14001e38f:	int3   
   14001e390:	lea    rax,[rip+0x11e79]        # 0x140030210
   14001e397:	ret    
   14001e398:	int3   
   14001e399:	int3   
   14001e39a:	int3   
   14001e39b:	int3   
   14001e39c:	int3   
   14001e39d:	int3   
   14001e39e:	int3   
   14001e39f:	int3   
   14001e3a0:	lea    rax,[rip+0x11e39]        # 0x1400301e0
   14001e3a7:	ret    
   14001e3a8:	int3   
   14001e3a9:	int3   
   14001e3aa:	int3   
   14001e3ab:	int3   
   14001e3ac:	int3   
   14001e3ad:	int3   
   14001e3ae:	int3   
   14001e3af:	int3   
   14001e3b0:	sub    rsp,0x28
   14001e3b4:	call   0x14001e390
   14001e3b9:	add    rsp,0x28
   14001e3bd:	ret    
   14001e3be:	int3   
   14001e3bf:	int3   
   14001e3c0:	sub    rsp,0x28
   14001e3c4:	call   0x14001e3a0
   14001e3c9:	add    rsp,0x28
   14001e3cd:	ret    
   14001e3ce:	int3   
   14001e3cf:	int3   
   14001e3d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001e3d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001e3da:	sub    rsp,0x48
   14001e3de:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001e3e7:	mov    DWORD PTR [rsp+0x24],0x0
   14001e3ef:	mov    QWORD PTR [rsp+0x28],0x0
   14001e3f8:	mov    rax,QWORD PTR [rsp+0x50]
   14001e3fd:	mov    rax,QWORD PTR [rax]
   14001e400:	lea    rdx,[rsp+0x28]
   14001e405:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e40a:	call   QWORD PTR [rax+0x88]
   14001e410:	mov    DWORD PTR [rsp+0x20],eax
   14001e414:	cmp    DWORD PTR [rsp+0x20],0x0
   14001e419:	jge    0x14001e430
   14001e41b:	lea    r8,[rip+0x11dbe]        # 0x1400301e0
   14001e422:	mov    rdx,QWORD PTR [rsp+0x50]
   14001e427:	mov    ecx,DWORD PTR [rsp+0x20]
   14001e42b:	call   0x140021ea0
   14001e430:	xor    r8d,r8d
   14001e433:	mov    rdx,QWORD PTR [rsp+0x28]
   14001e438:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e43d:	call   0x14001dac0
   14001e442:	nop
   14001e443:	mov    eax,DWORD PTR [rsp+0x24]
   14001e447:	or     eax,0x1
   14001e44a:	mov    DWORD PTR [rsp+0x24],eax
   14001e44e:	mov    rax,QWORD PTR [rsp+0x58]
   14001e453:	add    rsp,0x48
   14001e457:	ret    
   14001e458:	int3   
   14001e459:	int3   
   14001e45a:	int3   
   14001e45b:	int3   
   14001e45c:	int3   
   14001e45d:	int3   
   14001e45e:	int3   
   14001e45f:	int3   
   14001e460:	mov    DWORD PTR [rsp+0x18],r8d
   14001e465:	mov    QWORD PTR [rsp+0x10],rdx
   14001e46a:	mov    QWORD PTR [rsp+0x8],rcx
   14001e46f:	sub    rsp,0x48
   14001e473:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001e47c:	mov    DWORD PTR [rsp+0x24],0x0
   14001e484:	mov    QWORD PTR [rsp+0x28],0x0
   14001e48d:	mov    rax,QWORD PTR [rsp+0x50]
   14001e492:	mov    rax,QWORD PTR [rax]
   14001e495:	lea    r8,[rsp+0x28]
   14001e49a:	mov    edx,DWORD PTR [rsp+0x60]
   14001e49e:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e4a3:	call   QWORD PTR [rax+0x38]
   14001e4a6:	mov    DWORD PTR [rsp+0x20],eax
   14001e4aa:	cmp    DWORD PTR [rsp+0x20],0x0
   14001e4af:	jge    0x14001e4c6
   14001e4b1:	lea    r8,[rip+0x11d38]        # 0x1400301f0
   14001e4b8:	mov    rdx,QWORD PTR [rsp+0x50]
   14001e4bd:	mov    ecx,DWORD PTR [rsp+0x20]
   14001e4c1:	call   0x140021ea0
   14001e4c6:	xor    r8d,r8d
   14001e4c9:	mov    rdx,QWORD PTR [rsp+0x28]
   14001e4ce:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e4d3:	call   0x14001dac0
   14001e4d8:	nop
   14001e4d9:	mov    eax,DWORD PTR [rsp+0x24]
   14001e4dd:	or     eax,0x1
   14001e4e0:	mov    DWORD PTR [rsp+0x24],eax
   14001e4e4:	mov    rax,QWORD PTR [rsp+0x58]
   14001e4e9:	add    rsp,0x48
   14001e4ed:	ret    
   14001e4ee:	int3   
   14001e4ef:	int3   
   14001e4f0:	mov    QWORD PTR [rsp+0x8],rcx
   14001e4f5:	sub    rsp,0x38
   14001e4f9:	mov    DWORD PTR [rsp+0x24],0x0
   14001e501:	mov    rax,QWORD PTR [rsp+0x40]
   14001e506:	mov    rax,QWORD PTR [rax]
   14001e509:	lea    rdx,[rsp+0x24]
   14001e50e:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e513:	call   QWORD PTR [rax+0x40]
   14001e516:	mov    DWORD PTR [rsp+0x20],eax
   14001e51a:	cmp    DWORD PTR [rsp+0x20],0x0
   14001e51f:	jge    0x14001e536
   14001e521:	lea    r8,[rip+0x11cc8]        # 0x1400301f0
   14001e528:	mov    rdx,QWORD PTR [rsp+0x40]
   14001e52d:	mov    ecx,DWORD PTR [rsp+0x20]
   14001e531:	call   0x140021ea0
   14001e536:	mov    eax,DWORD PTR [rsp+0x24]
   14001e53a:	add    rsp,0x38
   14001e53e:	ret    
   14001e53f:	int3   
   14001e540:	mov    QWORD PTR [rsp+0x10],rdx
   14001e545:	mov    QWORD PTR [rsp+0x8],rcx
   14001e54a:	sub    rsp,0x48
   14001e54e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001e557:	mov    DWORD PTR [rsp+0x24],0x0
   14001e55f:	mov    QWORD PTR [rsp+0x28],0x0
   14001e568:	mov    rax,QWORD PTR [rsp+0x50]
   14001e56d:	mov    rax,QWORD PTR [rax]
   14001e570:	lea    rdx,[rsp+0x28]
   14001e575:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e57a:	call   QWORD PTR [rax+0xd0]
   14001e580:	mov    DWORD PTR [rsp+0x20],eax
   14001e584:	cmp    DWORD PTR [rsp+0x20],0x0
   14001e589:	jge    0x14001e5a0
   14001e58b:	lea    r8,[rip+0x11c4e]        # 0x1400301e0
   14001e592:	mov    rdx,QWORD PTR [rsp+0x50]
   14001e597:	mov    ecx,DWORD PTR [rsp+0x20]
   14001e59b:	call   0x140021ea0
   14001e5a0:	xor    r8d,r8d
   14001e5a3:	mov    rdx,QWORD PTR [rsp+0x28]
   14001e5a8:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e5ad:	call   0x14001dd30
   14001e5b2:	nop
   14001e5b3:	mov    eax,DWORD PTR [rsp+0x24]
   14001e5b7:	or     eax,0x1
   14001e5ba:	mov    DWORD PTR [rsp+0x24],eax
   14001e5be:	mov    rax,QWORD PTR [rsp+0x58]
   14001e5c3:	add    rsp,0x48
   14001e5c7:	ret    
   14001e5c8:	int3   
   14001e5c9:	int3   
   14001e5ca:	int3   
   14001e5cb:	int3   
   14001e5cc:	int3   
   14001e5cd:	int3   
   14001e5ce:	int3   
   14001e5cf:	int3   
   14001e5d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001e5d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001e5da:	sub    rsp,0x48
   14001e5de:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001e5e7:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e5ec:	call   0x140012dd0
   14001e5f1:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e5f6:	mov    rcx,QWORD PTR [rcx]
   14001e5f9:	mov    QWORD PTR [rsp+0x28],rcx
   14001e5fe:	mov    rdx,rax
   14001e601:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e606:	mov    rax,QWORD PTR [rsp+0x28]
   14001e60b:	call   QWORD PTR [rax+0xd8]
   14001e611:	mov    DWORD PTR [rsp+0x20],eax
   14001e615:	cmp    DWORD PTR [rsp+0x20],0x0
   14001e61a:	jge    0x14001e632
   14001e61c:	lea    r8,[rip+0x11bbd]        # 0x1400301e0
   14001e623:	mov    rdx,QWORD PTR [rsp+0x50]
   14001e628:	mov    ecx,DWORD PTR [rsp+0x20]
   14001e62c:	call   0x140021ea0
   14001e631:	nop
   14001e632:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e637:	call   0x1400077d0
   14001e63c:	add    rsp,0x48
   14001e640:	ret    
   14001e641:	int3   
   14001e642:	int3   
   14001e643:	int3   
   14001e644:	int3   
   14001e645:	int3   
   14001e646:	int3   
   14001e647:	int3   
   14001e648:	int3   
   14001e649:	int3   
   14001e64a:	int3   
   14001e64b:	int3   
   14001e64c:	int3   
   14001e64d:	int3   
   14001e64e:	int3   
   14001e64f:	int3   
   14001e650:	mov    QWORD PTR [rsp+0x8],rcx
   14001e655:	sub    rsp,0x28
   14001e659:	mov    rax,QWORD PTR [rsp+0x30]
   14001e65e:	cmp    QWORD PTR [rax],0x0
   14001e662:	je     0x14001e67a
   14001e664:	mov    rax,QWORD PTR [rsp+0x30]
   14001e669:	mov    rax,QWORD PTR [rax]
   14001e66c:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e671:	mov    rcx,QWORD PTR [rcx]
   14001e674:	mov    rax,QWORD PTR [rax]
   14001e677:	call   QWORD PTR [rax+0x8]
   14001e67a:	add    rsp,0x28
   14001e67e:	ret    
   14001e67f:	int3   
   14001e680:	mov    QWORD PTR [rsp+0x8],rcx
   14001e685:	sub    rsp,0x28
   14001e689:	xor    r8d,r8d
   14001e68c:	xor    edx,edx
   14001e68e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e693:	call   0x14001e6a0
   14001e698:	add    rsp,0x28
   14001e69c:	ret    
   14001e69d:	int3   
   14001e69e:	int3   
   14001e69f:	int3   
   14001e6a0:	mov    QWORD PTR [rsp+0x18],r8
   14001e6a5:	mov    QWORD PTR [rsp+0x10],rdx
   14001e6aa:	mov    QWORD PTR [rsp+0x8],rcx
   14001e6af:	sub    rsp,0x58
   14001e6b3:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001e6bc:	lea    rdx,[rsp+0x20]
   14001e6c1:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e6c6:	call   0x14001e910
   14001e6cb:	mov    edx,0x1
   14001e6d0:	mov    rcx,rax
   14001e6d3:	call   0x14001ea60
   14001e6d8:	mov    QWORD PTR [rsp+0x28],rax
   14001e6dd:	cmp    QWORD PTR [rsp+0x68],0x0
   14001e6e3:	jne    0x14001e6f9
   14001e6e5:	mov    rax,QWORD PTR [rsp+0x28]
   14001e6ea:	mov    QWORD PTR [rsp+0x68],rax
   14001e6ef:	mov    rax,QWORD PTR [rsp+0x28]
   14001e6f4:	mov    QWORD PTR [rsp+0x70],rax
   14001e6f9:	mov    rcx,QWORD PTR [rsp+0x28]
   14001e6fe:	call   0x140017e80
   14001e703:	mov    rcx,rax
   14001e706:	call   0x140017e80
   14001e70b:	mov    QWORD PTR [rsp+0x30],rax
   14001e710:	lea    rdx,[rsp+0x21]
   14001e715:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e71a:	call   0x14001e910
   14001e71f:	lea    r8,[rsp+0x68]
   14001e724:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e729:	mov    rdx,rcx
   14001e72c:	mov    rcx,rax
   14001e72f:	call   0x14001d5f0
   14001e734:	mov    rcx,QWORD PTR [rsp+0x28]
   14001e739:	call   0x140018210
   14001e73e:	mov    rcx,rax
   14001e741:	call   0x140017e80
   14001e746:	mov    QWORD PTR [rsp+0x38],rax
   14001e74b:	lea    rdx,[rsp+0x22]
   14001e750:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e755:	call   0x14001e910
   14001e75a:	lea    r8,[rsp+0x70]
   14001e75f:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e764:	mov    rdx,rcx
   14001e767:	mov    rcx,rax
   14001e76a:	call   0x14001d5f0
   14001e76f:	nop
   14001e770:	jmp    0x14001e772
   14001e772:	mov    rax,QWORD PTR [rsp+0x28]
   14001e777:	add    rsp,0x58
   14001e77b:	ret    
   14001e77c:	int3   
   14001e77d:	int3   
   14001e77e:	int3   
   14001e77f:	int3   
   14001e780:	mov    QWORD PTR [rsp+0x10],rdx
   14001e785:	mov    QWORD PTR [rsp+0x8],rcx
   14001e78a:	sub    rsp,0x48
   14001e78e:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e793:	call   0x140017e80
   14001e798:	mov    rcx,rax
   14001e79b:	call   0x140017e80
   14001e7a0:	mov    QWORD PTR [rsp+0x28],rax
   14001e7a5:	lea    rdx,[rsp+0x20]
   14001e7aa:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e7af:	call   0x14001e910
   14001e7b4:	mov    rcx,QWORD PTR [rsp+0x28]
   14001e7b9:	mov    rdx,rcx
   14001e7bc:	mov    rcx,rax
   14001e7bf:	call   0x14001d8d0
   14001e7c4:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e7c9:	call   0x140018210
   14001e7ce:	mov    rcx,rax
   14001e7d1:	call   0x140017e80
   14001e7d6:	mov    QWORD PTR [rsp+0x30],rax
   14001e7db:	lea    rdx,[rsp+0x21]
   14001e7e0:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e7e5:	call   0x14001e910
   14001e7ea:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e7ef:	mov    rdx,rcx
   14001e7f2:	mov    rcx,rax
   14001e7f5:	call   0x14001d8d0
   14001e7fa:	lea    rdx,[rsp+0x22]
   14001e7ff:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e804:	call   0x14001e910
   14001e809:	mov    r8d,0x1
   14001e80f:	mov    rdx,QWORD PTR [rsp+0x58]
   14001e814:	mov    rcx,rax
   14001e817:	call   0x14001ec00
   14001e81c:	add    rsp,0x48
   14001e820:	ret    
   14001e821:	int3   
   14001e822:	int3   
   14001e823:	int3   
   14001e824:	int3   
   14001e825:	int3   
   14001e826:	int3   
   14001e827:	int3   
   14001e828:	int3   
   14001e829:	int3   
   14001e82a:	int3   
   14001e82b:	int3   
   14001e82c:	int3   
   14001e82d:	int3   
   14001e82e:	int3   
   14001e82f:	int3   
   14001e830:	mov    QWORD PTR [rsp+0x10],rdx
   14001e835:	mov    QWORD PTR [rsp+0x8],rcx
   14001e83a:	sub    rsp,0x48
   14001e83e:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e843:	call   0x140017e80
   14001e848:	mov    rcx,rax
   14001e84b:	call   0x140017e80
   14001e850:	mov    QWORD PTR [rsp+0x28],rax
   14001e855:	lea    rdx,[rsp+0x20]
   14001e85a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e85f:	call   0x14001e910
   14001e864:	mov    rcx,QWORD PTR [rsp+0x28]
   14001e869:	mov    rdx,rcx
   14001e86c:	mov    rcx,rax
   14001e86f:	call   0x14001d8d0
   14001e874:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e879:	call   0x140018210
   14001e87e:	mov    rcx,rax
   14001e881:	call   0x140017e80
   14001e886:	mov    QWORD PTR [rsp+0x30],rax
   14001e88b:	lea    rdx,[rsp+0x21]
   14001e890:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e895:	call   0x14001e910
   14001e89a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e89f:	mov    rdx,rcx
   14001e8a2:	mov    rcx,rax
   14001e8a5:	call   0x14001d8d0
   14001e8aa:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e8af:	call   0x1400054b0
   14001e8b4:	mov    rcx,rax
   14001e8b7:	call   0x140017e80
   14001e8bc:	mov    QWORD PTR [rsp+0x38],rax
   14001e8c1:	lea    rdx,[rsp+0x22]
   14001e8c6:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e8cb:	call   0x14001e910
   14001e8d0:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e8d5:	mov    rdx,rcx
   14001e8d8:	mov    rcx,rax
   14001e8db:	call   0x14001d930
   14001e8e0:	lea    rdx,[rsp+0x23]
   14001e8e5:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e8ea:	call   0x14001e910
   14001e8ef:	mov    r8d,0x1
   14001e8f5:	mov    rdx,QWORD PTR [rsp+0x58]
   14001e8fa:	mov    rcx,rax
   14001e8fd:	call   0x14001ec00
   14001e902:	add    rsp,0x48
   14001e906:	ret    
   14001e907:	int3   
   14001e908:	int3   
   14001e909:	int3   
   14001e90a:	int3   
   14001e90b:	int3   
   14001e90c:	int3   
   14001e90d:	int3   
   14001e90e:	int3   
   14001e90f:	int3   
   14001e910:	mov    QWORD PTR [rsp+0x10],rdx
   14001e915:	mov    QWORD PTR [rsp+0x8],rcx
   14001e91a:	sub    rsp,0x28
   14001e91e:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e923:	call   0x14001da60
   14001e928:	mov    rax,QWORD PTR [rsp+0x38]
   14001e92d:	add    rsp,0x28
   14001e931:	ret    
   14001e932:	int3   
   14001e933:	int3   
   14001e934:	int3   
   14001e935:	int3   
   14001e936:	int3   
   14001e937:	int3   
   14001e938:	int3   
   14001e939:	int3   
   14001e93a:	int3   
   14001e93b:	int3   
   14001e93c:	int3   
   14001e93d:	int3   
   14001e93e:	int3   
   14001e93f:	int3   
   14001e940:	mov    QWORD PTR [rsp+0x10],rdx
   14001e945:	mov    QWORD PTR [rsp+0x8],rcx
   14001e94a:	sub    rsp,0x28
   14001e94e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e953:	call   0x14001ee50
   14001e958:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e95d:	sub    rax,QWORD PTR [rcx+0x8]
   14001e961:	dec    rax
   14001e964:	cmp    rax,QWORD PTR [rsp+0x38]
   14001e969:	jae    0x14001e978
   14001e96b:	lea    rcx,[rip+0xea56]        # 0x14002d3c8
   14001e972:	call   QWORD PTR [rip+0x78c8]        # 0x140026240
   14001e978:	mov    rax,QWORD PTR [rsp+0x30]
   14001e97d:	mov    rax,QWORD PTR [rax+0x8]
   14001e981:	add    rax,QWORD PTR [rsp+0x38]
   14001e986:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e98b:	mov    QWORD PTR [rcx+0x8],rax
   14001e98f:	add    rsp,0x28
   14001e993:	ret    
   14001e994:	int3   
   14001e995:	int3   
   14001e996:	int3   
   14001e997:	int3   
   14001e998:	int3   
   14001e999:	int3   
   14001e99a:	int3   
   14001e99b:	int3   
   14001e99c:	int3   
   14001e99d:	int3   
   14001e99e:	int3   
   14001e99f:	int3   
   14001e9a0:	mov    QWORD PTR [rsp+0x10],rdx
   14001e9a5:	mov    QWORD PTR [rsp+0x8],rcx
   14001e9aa:	sub    rsp,0x28
   14001e9ae:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e9b3:	call   0x14001ee80
   14001e9b8:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e9bd:	sub    rax,QWORD PTR [rcx+0x8]
   14001e9c1:	dec    rax
   14001e9c4:	cmp    rax,QWORD PTR [rsp+0x38]
   14001e9c9:	jae    0x14001e9d8
   14001e9cb:	lea    rcx,[rip+0xe9f6]        # 0x14002d3c8
   14001e9d2:	call   QWORD PTR [rip+0x7868]        # 0x140026240
   14001e9d8:	mov    rax,QWORD PTR [rsp+0x30]
   14001e9dd:	mov    rax,QWORD PTR [rax+0x8]
   14001e9e1:	add    rax,QWORD PTR [rsp+0x38]
   14001e9e6:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e9eb:	mov    QWORD PTR [rcx+0x8],rax
   14001e9ef:	add    rsp,0x28
   14001e9f3:	ret    
   14001e9f4:	int3   
   14001e9f5:	int3   
   14001e9f6:	int3   
   14001e9f7:	int3   
   14001e9f8:	int3   
   14001e9f9:	int3   
   14001e9fa:	int3   
   14001e9fb:	int3   
   14001e9fc:	int3   
   14001e9fd:	int3   
   14001e9fe:	int3   
   14001e9ff:	int3   
   14001ea00:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea05:	mov    rax,QWORD PTR [rsp+0x8]
   14001ea0a:	mov    rax,QWORD PTR [rax]
   14001ea0d:	ret    
   14001ea0e:	int3   
   14001ea0f:	int3   
   14001ea10:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea15:	sub    rsp,0x28
   14001ea19:	mov    rax,QWORD PTR [rsp+0x30]
   14001ea1e:	cmp    QWORD PTR [rax],0x0
   14001ea22:	je     0x14001ea3a
   14001ea24:	mov    rax,QWORD PTR [rsp+0x30]
   14001ea29:	mov    rax,QWORD PTR [rax]
   14001ea2c:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ea31:	mov    rcx,QWORD PTR [rcx]
   14001ea34:	mov    rax,QWORD PTR [rax]
   14001ea37:	call   QWORD PTR [rax+0x10]
   14001ea3a:	add    rsp,0x28
   14001ea3e:	ret    
   14001ea3f:	int3   
   14001ea40:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea45:	sub    rsp,0x28
   14001ea49:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ea4e:	call   0x14001eab0
   14001ea53:	add    rsp,0x28
   14001ea57:	ret    
   14001ea58:	int3   
   14001ea59:	int3   
   14001ea5a:	int3   
   14001ea5b:	int3   
   14001ea5c:	int3   
   14001ea5d:	int3   
   14001ea5e:	int3   
   14001ea5f:	int3   
   14001ea60:	mov    QWORD PTR [rsp+0x10],rdx
   14001ea65:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea6a:	sub    rsp,0x28
   14001ea6e:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ea73:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ea78:	call   0x14001ea90
   14001ea7d:	add    rsp,0x28
   14001ea81:	ret    
   14001ea82:	int3   
   14001ea83:	int3   
   14001ea84:	int3   
   14001ea85:	int3   
   14001ea86:	int3   
   14001ea87:	int3   
   14001ea88:	int3   
   14001ea89:	int3   
   14001ea8a:	int3   
   14001ea8b:	int3   
   14001ea8c:	int3   
   14001ea8d:	int3   
   14001ea8e:	int3   
   14001ea8f:	int3   
   14001ea90:	mov    QWORD PTR [rsp+0x10],rdx
   14001ea95:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea9a:	sub    rsp,0x28
   14001ea9e:	xor    edx,edx
   14001eaa0:	mov    rcx,QWORD PTR [rsp+0x38]
   14001eaa5:	call   0x14001d250
   14001eaaa:	add    rsp,0x28
   14001eaae:	ret    
   14001eaaf:	int3   
   14001eab0:	mov    QWORD PTR [rsp+0x8],rcx
   14001eab5:	sub    rsp,0x38
   14001eab9:	mov    rax,QWORD PTR [rsp+0x40]
   14001eabe:	mov    rcx,QWORD PTR [rax]
   14001eac1:	call   0x140017e80
   14001eac6:	mov    rax,QWORD PTR [rax]
   14001eac9:	mov    QWORD PTR [rsp+0x20],rax
   14001eace:	mov    rax,QWORD PTR [rsp+0x40]
   14001ead3:	mov    rcx,QWORD PTR [rax]
   14001ead6:	call   0x140017e80
   14001eadb:	mov    rcx,QWORD PTR [rsp+0x40]
   14001eae0:	mov    rcx,QWORD PTR [rcx]
   14001eae3:	mov    QWORD PTR [rax],rcx
   14001eae6:	mov    rax,QWORD PTR [rsp+0x40]
   14001eaeb:	mov    rcx,QWORD PTR [rax]
   14001eaee:	call   0x140018210
   14001eaf3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001eaf8:	mov    rcx,QWORD PTR [rcx]
   14001eafb:	mov    QWORD PTR [rax],rcx
   14001eafe:	mov    rax,QWORD PTR [rsp+0x40]
   14001eb03:	mov    QWORD PTR [rax+0x8],0x0
   14001eb0b:	jmp    0x14001eb17
   14001eb0d:	mov    rax,QWORD PTR [rsp+0x28]
   14001eb12:	mov    QWORD PTR [rsp+0x20],rax
   14001eb17:	mov    rax,QWORD PTR [rsp+0x40]
   14001eb1c:	mov    rax,QWORD PTR [rax]
   14001eb1f:	cmp    QWORD PTR [rsp+0x20],rax
   14001eb24:	je     0x14001eb49
   14001eb26:	mov    rcx,QWORD PTR [rsp+0x20]
   14001eb2b:	call   0x140017e80
   14001eb30:	mov    rax,QWORD PTR [rax]
   14001eb33:	mov    QWORD PTR [rsp+0x28],rax
   14001eb38:	mov    rdx,QWORD PTR [rsp+0x20]
   14001eb3d:	mov    rcx,QWORD PTR [rsp+0x40]
   14001eb42:	call   0x14001e830
   14001eb47:	jmp    0x14001eb0d
   14001eb49:	add    rsp,0x38
   14001eb4d:	ret    
   14001eb4e:	int3   
   14001eb4f:	int3   
   14001eb50:	mov    QWORD PTR [rsp+0x18],r8
   14001eb55:	mov    QWORD PTR [rsp+0x10],rdx
   14001eb5a:	mov    QWORD PTR [rsp+0x8],rcx
   14001eb5f:	sub    rsp,0x48
   14001eb63:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001eb6c:	mov    DWORD PTR [rsp+0x24],0x0
   14001eb74:	mov    QWORD PTR [rsp+0x28],0x0
   14001eb7d:	mov    rcx,QWORD PTR [rsp+0x60]
   14001eb82:	call   0x140012dd0
   14001eb87:	mov    rcx,QWORD PTR [rsp+0x50]
   14001eb8c:	mov    rcx,QWORD PTR [rcx]
   14001eb8f:	mov    QWORD PTR [rsp+0x30],rcx
   14001eb94:	lea    r8,[rsp+0x28]
   14001eb99:	mov    rdx,rax
   14001eb9c:	mov    rcx,QWORD PTR [rsp+0x50]
   14001eba1:	mov    rax,QWORD PTR [rsp+0x30]
   14001eba6:	call   QWORD PTR [rax+0x1a8]
   14001ebac:	mov    DWORD PTR [rsp+0x20],eax
   14001ebb0:	cmp    DWORD PTR [rsp+0x20],0x0
   14001ebb5:	jge    0x14001ebcc
   14001ebb7:	lea    r8,[rip+0x11602]        # 0x1400301c0
   14001ebbe:	mov    rdx,QWORD PTR [rsp+0x50]
   14001ebc3:	mov    ecx,DWORD PTR [rsp+0x20]
   14001ebc7:	call   0x140021ea0
   14001ebcc:	xor    r8d,r8d
   14001ebcf:	mov    rdx,QWORD PTR [rsp+0x28]
   14001ebd4:	mov    rcx,QWORD PTR [rsp+0x58]
   14001ebd9:	call   0x14001dac0
   14001ebde:	mov    eax,DWORD PTR [rsp+0x24]
   14001ebe2:	or     eax,0x1
   14001ebe5:	mov    DWORD PTR [rsp+0x24],eax
   14001ebe9:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ebee:	call   0x1400077d0
   14001ebf3:	mov    rax,QWORD PTR [rsp+0x58]
   14001ebf8:	add    rsp,0x48
   14001ebfc:	ret    
   14001ebfd:	int3   
   14001ebfe:	int3   
   14001ebff:	int3   
   14001ec00:	mov    QWORD PTR [rsp+0x18],r8
   14001ec05:	mov    QWORD PTR [rsp+0x10],rdx
   14001ec0a:	mov    QWORD PTR [rsp+0x8],rcx
   14001ec0f:	sub    rsp,0x28
   14001ec13:	mov    r8,QWORD PTR [rsp+0x40]
   14001ec18:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ec1d:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ec22:	call   0x14001ec30
   14001ec27:	add    rsp,0x28
   14001ec2b:	ret    
   14001ec2c:	int3   
   14001ec2d:	int3   
   14001ec2e:	int3   
   14001ec2f:	int3   
   14001ec30:	mov    QWORD PTR [rsp+0x18],r8
   14001ec35:	mov    QWORD PTR [rsp+0x10],rdx
   14001ec3a:	mov    QWORD PTR [rsp+0x8],rcx
   14001ec3f:	sub    rsp,0x28
   14001ec43:	mov    rcx,QWORD PTR [rsp+0x38]
   14001ec48:	call   0x140020b90
   14001ec4d:	add    rsp,0x28
   14001ec51:	ret    
   14001ec52:	int3   
   14001ec53:	int3   
   14001ec54:	int3   
   14001ec55:	int3   
   14001ec56:	int3   
   14001ec57:	int3   
   14001ec58:	int3   
   14001ec59:	int3   
   14001ec5a:	int3   
   14001ec5b:	int3   
   14001ec5c:	int3   
   14001ec5d:	int3   
   14001ec5e:	int3   
   14001ec5f:	int3   
   14001ec60:	mov    QWORD PTR [rsp+0x18],r8
   14001ec65:	mov    QWORD PTR [rsp+0x10],rdx
   14001ec6a:	mov    QWORD PTR [rsp+0x8],rcx
   14001ec6f:	sub    rsp,0x48
   14001ec73:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001ec7c:	mov    DWORD PTR [rsp+0x24],0x0
   14001ec84:	mov    QWORD PTR [rsp+0x28],0x0
   14001ec8d:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ec92:	call   0x140012dd0
   14001ec97:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ec9c:	mov    rcx,QWORD PTR [rcx]
   14001ec9f:	mov    QWORD PTR [rsp+0x30],rcx
   14001eca4:	lea    r8,[rsp+0x28]
   14001eca9:	mov    rdx,rax
   14001ecac:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ecb1:	mov    rax,QWORD PTR [rsp+0x30]
   14001ecb6:	call   QWORD PTR [rax+0x38]
   14001ecb9:	mov    DWORD PTR [rsp+0x20],eax
   14001ecbd:	cmp    DWORD PTR [rsp+0x20],0x0
   14001ecc2:	jge    0x14001ecd9
   14001ecc4:	lea    r8,[rip+0x11505]        # 0x1400301d0
   14001eccb:	mov    rdx,QWORD PTR [rsp+0x50]
   14001ecd0:	mov    ecx,DWORD PTR [rsp+0x20]
   14001ecd4:	call   0x140021ea0
   14001ecd9:	xor    r8d,r8d
   14001ecdc:	mov    rdx,QWORD PTR [rsp+0x28]
   14001ece1:	mov    rcx,QWORD PTR [rsp+0x58]
   14001ece6:	call   0x14001dac0
   14001eceb:	mov    eax,DWORD PTR [rsp+0x24]
   14001ecef:	or     eax,0x1
   14001ecf2:	mov    DWORD PTR [rsp+0x24],eax
   14001ecf6:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ecfb:	call   0x1400077d0
   14001ed00:	mov    rax,QWORD PTR [rsp+0x58]
   14001ed05:	add    rsp,0x48
   14001ed09:	ret    
   14001ed0a:	int3   
   14001ed0b:	int3   
   14001ed0c:	int3   
   14001ed0d:	int3   
   14001ed0e:	int3   
   14001ed0f:	int3   
   14001ed10:	mov    QWORD PTR [rsp+0x10],rdx
   14001ed15:	mov    QWORD PTR [rsp+0x8],rcx
   14001ed1a:	push   rsi
   14001ed1b:	push   rdi
   14001ed1c:	sub    rsp,0x68
   14001ed20:	xor    eax,eax
   14001ed22:	mov    WORD PTR [rsp+0x20],ax
   14001ed27:	lea    rax,[rsp+0x28]
   14001ed2c:	mov    rdi,rax
   14001ed2f:	mov    rsi,QWORD PTR [rsp+0x88]
   14001ed37:	mov    ecx,0x18
   14001ed3c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ed3e:	lea    rax,[rsp+0x40]
   14001ed43:	lea    rcx,[rsp+0x28]
   14001ed48:	mov    rdi,rax
   14001ed4b:	mov    rsi,rcx
   14001ed4e:	mov    ecx,0x18
   14001ed53:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ed55:	mov    rax,QWORD PTR [rsp+0x80]
   14001ed5d:	mov    rax,QWORD PTR [rax]
   14001ed60:	lea    r8,[rsp+0x20]
   14001ed65:	lea    rdx,[rsp+0x40]
   14001ed6a:	mov    rcx,QWORD PTR [rsp+0x80]
   14001ed72:	call   QWORD PTR [rax+0x1d0]
   14001ed78:	mov    DWORD PTR [rsp+0x24],eax
   14001ed7c:	cmp    DWORD PTR [rsp+0x24],0x0
   14001ed81:	jge    0x14001ed9b
   14001ed83:	lea    r8,[rip+0x11436]        # 0x1400301c0
   14001ed8a:	mov    rdx,QWORD PTR [rsp+0x80]
   14001ed92:	mov    ecx,DWORD PTR [rsp+0x24]
   14001ed96:	call   0x140021ea0
   14001ed9b:	movzx  eax,WORD PTR [rsp+0x20]
   14001eda0:	add    rsp,0x68
   14001eda4:	pop    rdi
   14001eda5:	pop    rsi
   14001eda6:	ret    
   14001eda7:	int3   
   14001eda8:	int3   
   14001eda9:	int3   
   14001edaa:	int3   
   14001edab:	int3   
   14001edac:	int3   
   14001edad:	int3   
   14001edae:	int3   
   14001edaf:	int3   
   14001edb0:	mov    QWORD PTR [rsp+0x8],rcx
   14001edb5:	sub    rsp,0x28
   14001edb9:	mov    rcx,QWORD PTR [rsp+0x30]
   14001edbe:	call   0x14001ee10
   14001edc3:	add    rsp,0x28
   14001edc7:	ret    
   14001edc8:	int3   
   14001edc9:	int3   
   14001edca:	int3   
   14001edcb:	int3   
   14001edcc:	int3   
   14001edcd:	int3   
   14001edce:	int3   
   14001edcf:	int3   
   14001edd0:	mov    QWORD PTR [rsp+0x8],rcx
   14001edd5:	sub    rsp,0x28
   14001edd9:	mov    rcx,QWORD PTR [rsp+0x30]
   14001edde:	call   0x14001ee30
   14001ede3:	add    rsp,0x28
   14001ede7:	ret    
   14001ede8:	int3   
   14001ede9:	int3   
   14001edea:	int3   
   14001edeb:	int3   
   14001edec:	int3   
   14001eded:	int3   
   14001edee:	int3   
   14001edef:	int3   
   14001edf0:	mov    QWORD PTR [rsp+0x8],rcx
   14001edf5:	movabs rax,0x492492492492492
   14001edff:	ret    
   14001ee00:	mov    QWORD PTR [rsp+0x8],rcx
   14001ee05:	movabs rax,0x7ffffffffffffff
   14001ee0f:	ret    
   14001ee10:	mov    QWORD PTR [rsp+0x8],rcx
   14001ee15:	sub    rsp,0x28
   14001ee19:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ee1e:	call   0x14001edf0
   14001ee23:	add    rsp,0x28
   14001ee27:	ret    
   14001ee28:	int3   
   14001ee29:	int3   
   14001ee2a:	int3   
   14001ee2b:	int3   
   14001ee2c:	int3   
   14001ee2d:	int3   
   14001ee2e:	int3   
   14001ee2f:	int3   
   14001ee30:	mov    QWORD PTR [rsp+0x8],rcx
   14001ee35:	sub    rsp,0x28
   14001ee39:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ee3e:	call   0x14001ee00
   14001ee43:	add    rsp,0x28
   14001ee47:	ret    
   14001ee48:	int3   
   14001ee49:	int3   
   14001ee4a:	int3   
   14001ee4b:	int3   
   14001ee4c:	int3   
   14001ee4d:	int3   
   14001ee4e:	int3   
   14001ee4f:	int3   
   14001ee50:	mov    QWORD PTR [rsp+0x8],rcx
   14001ee55:	sub    rsp,0x38
   14001ee59:	lea    rdx,[rsp+0x20]
   14001ee5e:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ee63:	call   0x14001e910
   14001ee68:	mov    rcx,rax
   14001ee6b:	call   0x14001edb0
   14001ee70:	add    rsp,0x38
   14001ee74:	ret    
   14001ee75:	int3   
   14001ee76:	int3   
   14001ee77:	int3   
   14001ee78:	int3   
   14001ee79:	int3   
   14001ee7a:	int3   
   14001ee7b:	int3   
   14001ee7c:	int3   
   14001ee7d:	int3   
   14001ee7e:	int3   
   14001ee7f:	int3   
   14001ee80:	mov    QWORD PTR [rsp+0x8],rcx
   14001ee85:	sub    rsp,0x38
   14001ee89:	lea    rdx,[rsp+0x20]
   14001ee8e:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ee93:	call   0x14001e910
   14001ee98:	mov    rcx,rax
   14001ee9b:	call   0x14001edd0
   14001eea0:	add    rsp,0x38
   14001eea4:	ret    
   14001eea5:	int3   
   14001eea6:	int3   
   14001eea7:	int3   
   14001eea8:	int3   
   14001eea9:	int3   
   14001eeaa:	int3   
   14001eeab:	int3   
   14001eeac:	int3   
   14001eead:	int3   
   14001eeae:	int3   
   14001eeaf:	int3   
   14001eeb0:	mov    QWORD PTR [rsp+0x10],rdx
   14001eeb5:	mov    QWORD PTR [rsp+0x8],rcx
   14001eeba:	sub    rsp,0x38
   14001eebe:	lea    rdx,[rsp+0x28]
   14001eec3:	mov    rcx,QWORD PTR [rsp+0x40]
   14001eec8:	call   0x140005bb0
   14001eecd:	mov    rax,QWORD PTR [rax]
   14001eed0:	mov    QWORD PTR [rsp+0x20],rax
   14001eed5:	mov    r8,QWORD PTR [rsp+0x48]
   14001eeda:	mov    rdx,QWORD PTR [rsp+0x20]
   14001eedf:	mov    rcx,QWORD PTR [rsp+0x40]
   14001eee4:	call   0x14001d3f0
   14001eee9:	add    rsp,0x38
   14001eeed:	ret    
   14001eeee:	int3   
   14001eeef:	int3   
   14001eef0:	mov    QWORD PTR [rsp+0x10],rdx
   14001eef5:	mov    QWORD PTR [rsp+0x8],rcx
   14001eefa:	sub    rsp,0x38
   14001eefe:	lea    rdx,[rsp+0x28]
   14001ef03:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ef08:	call   0x140005bb0
   14001ef0d:	mov    rax,QWORD PTR [rax]
   14001ef10:	mov    QWORD PTR [rsp+0x20],rax
   14001ef15:	mov    r8,QWORD PTR [rsp+0x48]
   14001ef1a:	mov    rdx,QWORD PTR [rsp+0x20]
   14001ef1f:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ef24:	call   0x14001d490
   14001ef29:	add    rsp,0x38
   14001ef2d:	ret    
   14001ef2e:	int3   
   14001ef2f:	int3   
   14001ef30:	mov    QWORD PTR [rsp+0x10],rdx
   14001ef35:	mov    QWORD PTR [rsp+0x8],rcx
   14001ef3a:	push   rsi
   14001ef3b:	push   rdi
   14001ef3c:	sub    rsp,0x68
   14001ef40:	lea    rax,[rsp+0x28]
   14001ef45:	mov    rdi,rax
   14001ef48:	mov    rsi,QWORD PTR [rsp+0x88]
   14001ef50:	mov    ecx,0x18
   14001ef55:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ef57:	lea    rax,[rsp+0x40]
   14001ef5c:	lea    rcx,[rsp+0x28]
   14001ef61:	mov    rdi,rax
   14001ef64:	mov    rsi,rcx
   14001ef67:	mov    ecx,0x18
   14001ef6c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ef6e:	mov    rax,QWORD PTR [rsp+0x80]
   14001ef76:	mov    rax,QWORD PTR [rax]
   14001ef79:	lea    rdx,[rsp+0x40]
   14001ef7e:	mov    rcx,QWORD PTR [rsp+0x80]
   14001ef86:	call   QWORD PTR [rax+0x210]
   14001ef8c:	mov    DWORD PTR [rsp+0x20],eax
   14001ef90:	cmp    DWORD PTR [rsp+0x20],0x0
   14001ef95:	jge    0x14001efaf
   14001ef97:	lea    r8,[rip+0x11222]        # 0x1400301c0
   14001ef9e:	mov    rdx,QWORD PTR [rsp+0x80]
   14001efa6:	mov    ecx,DWORD PTR [rsp+0x20]
   14001efaa:	call   0x140021ea0
   14001efaf:	mov    eax,DWORD PTR [rsp+0x20]
   14001efb3:	add    rsp,0x68
   14001efb7:	pop    rdi
   14001efb8:	pop    rsi
   14001efb9:	ret    
   14001efba:	int3   
   14001efbb:	int3   
   14001efbc:	int3   
   14001efbd:	int3   
   14001efbe:	int3   
   14001efbf:	int3   
   14001efc0:	mov    QWORD PTR [rsp+0x18],r8
   14001efc5:	mov    QWORD PTR [rsp+0x10],rdx
   14001efca:	mov    QWORD PTR [rsp+0x8],rcx
   14001efcf:	sub    rsp,0x48
   14001efd3:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001efdc:	mov    DWORD PTR [rsp+0x24],0x0
   14001efe4:	mov    QWORD PTR [rsp+0x28],0x0
   14001efed:	mov    rcx,QWORD PTR [rsp+0x60]
   14001eff2:	call   0x140012dd0
   14001eff7:	mov    rcx,QWORD PTR [rsp+0x50]
   14001effc:	mov    rcx,QWORD PTR [rcx]
   14001efff:	mov    QWORD PTR [rsp+0x30],rcx
   14001f004:	lea    r8,[rsp+0x28]
   14001f009:	mov    rdx,rax
   14001f00c:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f011:	mov    rax,QWORD PTR [rsp+0x30]
   14001f016:	call   QWORD PTR [rax+0x120]
   14001f01c:	mov    DWORD PTR [rsp+0x20],eax
   14001f020:	cmp    DWORD PTR [rsp+0x20],0x0
   14001f025:	jge    0x14001f03c
   14001f027:	lea    r8,[rip+0x111b2]        # 0x1400301e0
   14001f02e:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f033:	mov    ecx,DWORD PTR [rsp+0x20]
   14001f037:	call   0x140021ea0
   14001f03c:	xor    r8d,r8d
   14001f03f:	mov    rdx,QWORD PTR [rsp+0x28]
   14001f044:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f049:	call   0x14001dac0
   14001f04e:	mov    eax,DWORD PTR [rsp+0x24]
   14001f052:	or     eax,0x1
   14001f055:	mov    DWORD PTR [rsp+0x24],eax
   14001f059:	mov    rcx,QWORD PTR [rsp+0x60]
   14001f05e:	call   0x1400077d0
   14001f063:	mov    rax,QWORD PTR [rsp+0x58]
   14001f068:	add    rsp,0x48
   14001f06c:	ret    
   14001f06d:	int3   
   14001f06e:	int3   
   14001f06f:	int3   
   14001f070:	mov    QWORD PTR [rsp+0x18],r8
   14001f075:	mov    QWORD PTR [rsp+0x10],rdx
   14001f07a:	mov    QWORD PTR [rsp+0x8],rcx
   14001f07f:	sub    rsp,0x48
   14001f083:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001f08c:	mov    DWORD PTR [rsp+0x24],0x0
   14001f094:	mov    QWORD PTR [rsp+0x28],0x0
   14001f09d:	mov    rcx,QWORD PTR [rsp+0x60]
   14001f0a2:	call   0x140012dd0
   14001f0a7:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f0ac:	mov    rcx,QWORD PTR [rcx]
   14001f0af:	mov    QWORD PTR [rsp+0x30],rcx
   14001f0b4:	lea    r8,[rsp+0x28]
   14001f0b9:	mov    rdx,rax
   14001f0bc:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f0c1:	mov    rax,QWORD PTR [rsp+0x30]
   14001f0c6:	call   QWORD PTR [rax+0x128]
   14001f0cc:	mov    DWORD PTR [rsp+0x20],eax
   14001f0d0:	cmp    DWORD PTR [rsp+0x20],0x0
   14001f0d5:	jge    0x14001f0ec
   14001f0d7:	lea    r8,[rip+0x11102]        # 0x1400301e0
   14001f0de:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f0e3:	mov    ecx,DWORD PTR [rsp+0x20]
   14001f0e7:	call   0x140021ea0
   14001f0ec:	xor    r8d,r8d
   14001f0ef:	mov    rdx,QWORD PTR [rsp+0x28]
   14001f0f4:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f0f9:	call   0x14001dac0
   14001f0fe:	mov    eax,DWORD PTR [rsp+0x24]
   14001f102:	or     eax,0x1
   14001f105:	mov    DWORD PTR [rsp+0x24],eax
   14001f109:	mov    rcx,QWORD PTR [rsp+0x60]
   14001f10e:	call   0x1400077d0
   14001f113:	mov    rax,QWORD PTR [rsp+0x58]
   14001f118:	add    rsp,0x48
   14001f11c:	ret    
   14001f11d:	int3   
   14001f11e:	int3   
   14001f11f:	int3   
   14001f120:	mov    QWORD PTR [rsp+0x18],r8
   14001f125:	mov    QWORD PTR [rsp+0x10],rdx
   14001f12a:	mov    QWORD PTR [rsp+0x8],rcx
   14001f12f:	sub    rsp,0x48
   14001f133:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001f13c:	mov    DWORD PTR [rsp+0x24],0x0
   14001f144:	mov    QWORD PTR [rsp+0x28],0x0
   14001f14d:	mov    rax,QWORD PTR [rsp+0x50]
   14001f152:	mov    rax,QWORD PTR [rax]
   14001f155:	lea    r8,[rsp+0x28]
   14001f15a:	mov    rdx,QWORD PTR [rsp+0x60]
   14001f15f:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f164:	call   QWORD PTR [rax+0x40]
   14001f167:	mov    DWORD PTR [rsp+0x20],eax
   14001f16b:	cmp    DWORD PTR [rsp+0x20],0x0
   14001f170:	jge    0x14001f187
   14001f172:	lea    r8,[rip+0x11057]        # 0x1400301d0
   14001f179:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f17e:	mov    ecx,DWORD PTR [rsp+0x20]
   14001f182:	call   0x140021ea0
   14001f187:	xor    r8d,r8d
   14001f18a:	mov    rdx,QWORD PTR [rsp+0x28]
   14001f18f:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f194:	call   0x14001dac0
   14001f199:	nop
   14001f19a:	mov    eax,DWORD PTR [rsp+0x24]
   14001f19e:	or     eax,0x1
   14001f1a1:	mov    DWORD PTR [rsp+0x24],eax
   14001f1a5:	mov    rax,QWORD PTR [rsp+0x58]
   14001f1aa:	add    rsp,0x48
   14001f1ae:	ret    
   14001f1af:	int3   
   14001f1b0:	mov    QWORD PTR [rsp+0x8],rcx
   14001f1b5:	push   rsi
   14001f1b6:	push   rdi
   14001f1b7:	sub    rsp,0x38
   14001f1bb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f1c4:	mov    rax,QWORD PTR [rsp+0x50]
   14001f1c9:	mov    rcx,rax
   14001f1cc:	call   QWORD PTR [rip+0x7bae]        # 0x140026d80
   14001f1d2:	nop
   14001f1d3:	mov    rax,QWORD PTR [rsp+0x50]
   14001f1d8:	add    rax,0x8
   14001f1dc:	mov    rcx,rax
   14001f1df:	call   QWORD PTR [rip+0x7b9b]        # 0x140026d80
   14001f1e5:	nop
   14001f1e6:	mov    rax,QWORD PTR [rsp+0x50]
   14001f1eb:	lea    rdx,[rip+0x115ce]        # 0x1400307c0
   14001f1f2:	mov    rcx,rax
   14001f1f5:	call   QWORD PTR [rip+0x76a5]        # 0x1400268a0
   14001f1fb:	mov    rax,QWORD PTR [rsp+0x50]
   14001f200:	mov    QWORD PTR [rax+0x10],0x0
   14001f208:	mov    rax,QWORD PTR [rsp+0x50]
   14001f20d:	lea    rcx,[rip+0x125fc]        # 0x140031810
   14001f214:	lea    rdi,[rax+0x18]
   14001f218:	mov    rsi,rcx
   14001f21b:	mov    ecx,0x10
   14001f220:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f222:	mov    rax,QWORD PTR [rsp+0x50]
   14001f227:	add    rsp,0x38
   14001f22b:	pop    rdi
   14001f22c:	pop    rsi
   14001f22d:	ret    
   14001f22e:	int3   
   14001f22f:	int3   
   14001f230:	int3   
   14001f231:	int3   
   14001f232:	int3   
   14001f233:	int3   
   14001f234:	int3   
   14001f235:	int3   
   14001f236:	int3   
   14001f237:	int3   
   14001f238:	int3   
   14001f239:	int3   
   14001f23a:	int3   
   14001f23b:	int3   
   14001f23c:	int3   
   14001f23d:	int3   
   14001f23e:	int3   
   14001f23f:	int3   
   14001f240:	mov    QWORD PTR [rsp+0x18],r8
   14001f245:	mov    QWORD PTR [rsp+0x10],rdx
   14001f24a:	mov    QWORD PTR [rsp+0x8],rcx
   14001f24f:	push   rdi
   14001f250:	mov    eax,0x68a0
   14001f255:	call   0x1400218e0
   14001f25a:	sub    rsp,rax
   14001f25d:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001f266:	mov    rax,QWORD PTR [rip+0x1bfe3]        # 0x14003b250
   14001f26d:	xor    rax,rsp
   14001f270:	mov    QWORD PTR [rsp+0x6890],rax
   14001f278:	mov    DWORD PTR [rsp+0x28],0x0
   14001f280:	lea    rcx,[rsp+0x20]
   14001f285:	call   QWORD PTR [rip+0x7af5]        # 0x140026d80
   14001f28b:	nop
   14001f28c:	lea    rcx,[rsp+0x40]
   14001f291:	call   0x140020950
   14001f296:	nop
   14001f297:	mov    rax,QWORD PTR [rsp+0x68b0]
   14001f29f:	add    rax,0x8
   14001f2a3:	mov    rcx,rax
   14001f2a6:	call   QWORD PTR [rip+0x7614]        # 0x1400268c0
   14001f2ac:	movzx  eax,al
   14001f2af:	test   eax,eax
   14001f2b1:	jne    0x14001f317
   14001f2b3:	xor    eax,eax
   14001f2b5:	mov    WORD PTR [rsp+0x6680],ax
   14001f2bd:	lea    rax,[rsp+0x6682]
   14001f2c5:	mov    rdi,rax
   14001f2c8:	xor    eax,eax
   14001f2ca:	mov    ecx,0x206
   14001f2cf:	rep stos BYTE PTR es:[rdi],al
   14001f2d1:	mov    rax,QWORD PTR [rsp+0x68b0]
   14001f2d9:	add    rax,0x8
   14001f2dd:	mov    rcx,rax
   14001f2e0:	call   QWORD PTR [rip+0x7aca]        # 0x140026db0
   14001f2e6:	mov    r8,rax
   14001f2e9:	mov    rdx,QWORD PTR [rsp+0x68c0]
   14001f2f1:	lea    rcx,[rsp+0x6680]
   14001f2f9:	call   QWORD PTR [rip+0x7221]        # 0x140026520
   14001f2ff:	lea    rdx,[rsp+0x6680]
   14001f307:	lea    rcx,[rsp+0x20]
   14001f30c:	call   QWORD PTR [rip+0x758e]        # 0x1400268a0
   14001f312:	jmp    0x14001f3ff
   14001f317:	mov    rax,QWORD PTR [rsp+0x68b0]
   14001f31f:	mov    rcx,rax
   14001f322:	call   QWORD PTR [rip+0x7a88]        # 0x140026db0
   14001f328:	lea    r9,[rsp+0x40]
   14001f32d:	xor    r8d,r8d
   14001f330:	xor    edx,edx
   14001f332:	mov    rcx,rax
   14001f335:	call   QWORD PTR [rip+0x72ad]        # 0x1400265e8
   14001f33b:	test   eax,eax
   14001f33d:	je     0x14001f399
   14001f33f:	xor    eax,eax
   14001f341:	mov    WORD PTR [rsp+0x6470],ax
   14001f349:	lea    rax,[rsp+0x6472]
   14001f351:	mov    rdi,rax
   14001f354:	xor    eax,eax
   14001f356:	mov    ecx,0x206
   14001f35b:	rep stos BYTE PTR es:[rdi],al
   14001f35d:	lea    rcx,[rsp+0x41c8]
   14001f365:	call   QWORD PTR [rip+0x71c5]        # 0x140026530
   14001f36b:	mov    r8,rax
   14001f36e:	mov    rdx,QWORD PTR [rsp+0x68c0]
   14001f376:	lea    rcx,[rsp+0x6470]
   14001f37e:	call   QWORD PTR [rip+0x719c]        # 0x140026520
   14001f384:	lea    rdx,[rsp+0x6470]
   14001f38c:	lea    rcx,[rsp+0x20]
   14001f391:	call   QWORD PTR [rip+0x7509]        # 0x1400268a0
   14001f397:	jmp    0x14001f3ff
   14001f399:	xor    eax,eax
   14001f39b:	mov    WORD PTR [rsp+0x6260],ax
   14001f3a3:	lea    rax,[rsp+0x6262]
   14001f3ab:	mov    rdi,rax
   14001f3ae:	xor    eax,eax
   14001f3b0:	mov    ecx,0x206
   14001f3b5:	rep stos BYTE PTR es:[rdi],al
   14001f3b7:	mov    rax,QWORD PTR [rsp+0x68b0]
   14001f3bf:	mov    rcx,rax
   14001f3c2:	call   QWORD PTR [rip+0x79e8]        # 0x140026db0
   14001f3c8:	mov    r8,rax
   14001f3cb:	mov    edx,0x104
   14001f3d0:	lea    rcx,[rsp+0x6260]
   14001f3d8:	call   QWORD PTR [rip+0x6f9a]        # 0x140026378
   14001f3de:	lea    rcx,[rsp+0x6260]
   14001f3e6:	call   QWORD PTR [rip+0x714c]        # 0x140026538
   14001f3ec:	lea    rdx,[rsp+0x6260]
   14001f3f4:	lea    rcx,[rsp+0x20]
   14001f3f9:	call   QWORD PTR [rip+0x74a1]        # 0x1400268a0
   14001f3ff:	lea    rdx,[rsp+0x20]
   14001f404:	mov    rcx,QWORD PTR [rsp+0x68b8]
   14001f40c:	call   QWORD PTR [rip+0x795e]        # 0x140026d70
   14001f412:	mov    eax,DWORD PTR [rsp+0x28]
   14001f416:	or     eax,0x1
   14001f419:	mov    DWORD PTR [rsp+0x28],eax
   14001f41d:	lea    rcx,[rsp+0x40]
   14001f422:	call   0x140020ac0
   14001f427:	nop
   14001f428:	lea    rcx,[rsp+0x20]
   14001f42d:	call   QWORD PTR [rip+0x792d]        # 0x140026d60
   14001f433:	mov    rax,QWORD PTR [rsp+0x68b8]
   14001f43b:	mov    rcx,QWORD PTR [rsp+0x6890]
   14001f443:	xor    rcx,rsp
   14001f446:	call   0x140021890
   14001f44b:	add    rsp,0x68a0
   14001f452:	pop    rdi
   14001f453:	ret    
   14001f454:	int3   
   14001f455:	int3   
   14001f456:	int3   
   14001f457:	int3   
   14001f458:	int3   
   14001f459:	int3   
   14001f45a:	int3   
   14001f45b:	int3   
   14001f45c:	int3   
   14001f45d:	int3   
   14001f45e:	int3   
   14001f45f:	int3   
   14001f460:	mov    QWORD PTR [rsp+0x10],rdx
   14001f465:	mov    QWORD PTR [rsp+0x8],rcx
   14001f46a:	push   rsi
   14001f46b:	push   rdi
   14001f46c:	mov    rax,QWORD PTR [rsp+0x18]
   14001f471:	mov    rdi,QWORD PTR [rsp+0x20]
   14001f476:	lea    rsi,[rax+0x18]
   14001f47a:	mov    ecx,0x10
   14001f47f:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f481:	mov    rax,QWORD PTR [rsp+0x20]
   14001f486:	pop    rdi
   14001f487:	pop    rsi
   14001f488:	ret    
   14001f489:	int3   
   14001f48a:	int3   
   14001f48b:	int3   
   14001f48c:	int3   
   14001f48d:	int3   
   14001f48e:	int3   
   14001f48f:	int3   
   14001f490:	mov    QWORD PTR [rsp+0x10],rdx
   14001f495:	mov    QWORD PTR [rsp+0x8],rcx
   14001f49a:	push   rsi
   14001f49b:	push   rdi
   14001f49c:	mov    rax,QWORD PTR [rsp+0x18]
   14001f4a1:	lea    rdi,[rax+0x18]
   14001f4a5:	mov    rsi,QWORD PTR [rsp+0x20]
   14001f4aa:	mov    ecx,0x10
   14001f4af:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f4b1:	pop    rdi
   14001f4b2:	pop    rsi
   14001f4b3:	ret    
   14001f4b4:	int3   
   14001f4b5:	int3   
   14001f4b6:	int3   
   14001f4b7:	int3   
   14001f4b8:	int3   
   14001f4b9:	int3   
   14001f4ba:	int3   
   14001f4bb:	int3   
   14001f4bc:	int3   
   14001f4bd:	int3   
   14001f4be:	int3   
   14001f4bf:	int3   
   14001f4c0:	mov    QWORD PTR [rsp+0x10],rdx
   14001f4c5:	mov    QWORD PTR [rsp+0x8],rcx
   14001f4ca:	sub    rsp,0x38
   14001f4ce:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001f4d7:	mov    DWORD PTR [rsp+0x20],0x0
   14001f4df:	mov    rax,QWORD PTR [rsp+0x40]
   14001f4e4:	add    rax,0x18
   14001f4e8:	mov    rdx,rax
   14001f4eb:	mov    rcx,QWORD PTR [rsp+0x48]
   14001f4f0:	call   0x14001f760
   14001f4f5:	nop
   14001f4f6:	mov    eax,DWORD PTR [rsp+0x20]
   14001f4fa:	or     eax,0x1
   14001f4fd:	mov    DWORD PTR [rsp+0x20],eax
   14001f501:	mov    rax,QWORD PTR [rsp+0x48]
   14001f506:	add    rsp,0x38
   14001f50a:	ret    
   14001f50b:	int3   
   14001f50c:	int3   
   14001f50d:	int3   
   14001f50e:	int3   
   14001f50f:	int3   
   14001f510:	int3   
   14001f511:	int3   
   14001f512:	int3   
   14001f513:	int3   
   14001f514:	int3   
   14001f515:	int3   
   14001f516:	int3   
   14001f517:	int3   
   14001f518:	int3   
   14001f519:	int3   
   14001f51a:	int3   
   14001f51b:	int3   
   14001f51c:	int3   
   14001f51d:	int3   
   14001f51e:	int3   
   14001f51f:	int3   
   14001f520:	mov    QWORD PTR [rsp+0x10],rdx
   14001f525:	mov    QWORD PTR [rsp+0x8],rcx
   14001f52a:	push   rsi
   14001f52b:	push   rdi
   14001f52c:	sub    rsp,0x58
   14001f530:	mov    rax,QWORD PTR [rip+0x1bd19]        # 0x14003b250
   14001f537:	xor    rax,rsp
   14001f53a:	mov    QWORD PTR [rsp+0x40],rax
   14001f53f:	mov    rdx,QWORD PTR [rsp+0x78]
   14001f544:	lea    rcx,[rsp+0x20]
   14001f549:	call   0x14001f670
   14001f54e:	lea    rcx,[rsp+0x30]
   14001f553:	mov    rdi,rcx
   14001f556:	mov    rsi,rax
   14001f559:	mov    ecx,0x10
   14001f55e:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f560:	mov    rax,QWORD PTR [rsp+0x70]
   14001f565:	lea    rcx,[rsp+0x30]
   14001f56a:	lea    rdi,[rax+0x18]
   14001f56e:	mov    rsi,rcx
   14001f571:	mov    ecx,0x10
   14001f576:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f578:	mov    rcx,QWORD PTR [rsp+0x40]
   14001f57d:	xor    rcx,rsp
   14001f580:	call   0x140021890
   14001f585:	add    rsp,0x58
   14001f589:	pop    rdi
   14001f58a:	pop    rsi
   14001f58b:	ret    
   14001f58c:	int3   
   14001f58d:	int3   
   14001f58e:	int3   
   14001f58f:	int3   
   14001f590:	int3   
   14001f591:	int3   
   14001f592:	int3   
   14001f593:	int3   
   14001f594:	int3   
   14001f595:	int3   
   14001f596:	int3   
   14001f597:	int3   
   14001f598:	int3   
   14001f599:	int3   
   14001f59a:	int3   
   14001f59b:	int3   
   14001f59c:	int3   
   14001f59d:	int3   
   14001f59e:	int3   
   14001f59f:	int3   
   14001f5a0:	mov    QWORD PTR [rsp+0x8],rcx
   14001f5a5:	sub    rsp,0x28
   14001f5a9:	mov    rax,QWORD PTR [rsp+0x30]
   14001f5ae:	mov    rcx,rax
   14001f5b1:	call   QWORD PTR [rip+0x77f9]        # 0x140026db0
   14001f5b7:	add    rsp,0x28
   14001f5bb:	ret    
   14001f5bc:	int3   
   14001f5bd:	int3   
   14001f5be:	int3   
   14001f5bf:	int3   
   14001f5c0:	int3   
   14001f5c1:	int3   
   14001f5c2:	int3   
   14001f5c3:	int3   
   14001f5c4:	int3   
   14001f5c5:	int3   
   14001f5c6:	int3   
   14001f5c7:	int3   
   14001f5c8:	int3   
   14001f5c9:	int3   
   14001f5ca:	int3   
   14001f5cb:	int3   
   14001f5cc:	int3   
   14001f5cd:	int3   
   14001f5ce:	int3   
   14001f5cf:	int3   
   14001f5d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001f5d5:	mov    QWORD PTR [rsp+0x8],rcx
   14001f5da:	sub    rsp,0x28
   14001f5de:	mov    rax,QWORD PTR [rsp+0x30]
   14001f5e3:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f5e8:	mov    rcx,rax
   14001f5eb:	call   QWORD PTR [rip+0x72af]        # 0x1400268a0
   14001f5f1:	add    rsp,0x28
   14001f5f5:	ret    
   14001f5f6:	int3   
   14001f5f7:	int3   
   14001f5f8:	int3   
   14001f5f9:	int3   
   14001f5fa:	int3   
   14001f5fb:	int3   
   14001f5fc:	int3   
   14001f5fd:	int3   
   14001f5fe:	int3   
   14001f5ff:	int3   
   14001f600:	mov    QWORD PTR [rsp+0x10],rdx
   14001f605:	mov    QWORD PTR [rsp+0x8],rcx
   14001f60a:	sub    rsp,0x28
   14001f60e:	mov    rax,QWORD PTR [rsp+0x30]
   14001f613:	add    rax,0x8
   14001f617:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f61c:	mov    rcx,rax
   14001f61f:	call   QWORD PTR [rip+0x727b]        # 0x1400268a0
   14001f625:	add    rsp,0x28
   14001f629:	ret    
   14001f62a:	int3   
   14001f62b:	int3   
   14001f62c:	int3   
   14001f62d:	int3   
   14001f62e:	int3   
   14001f62f:	int3   
   14001f630:	mov    QWORD PTR [rsp+0x10],rdx
   14001f635:	mov    QWORD PTR [rsp+0x8],rcx
   14001f63a:	mov    rax,QWORD PTR [rsp+0x8]
   14001f63f:	mov    rcx,QWORD PTR [rsp+0x10]
   14001f644:	mov    QWORD PTR [rax+0x10],rcx
   14001f648:	ret    
   14001f649:	int3   
   14001f64a:	int3   
   14001f64b:	int3   
   14001f64c:	int3   
   14001f64d:	int3   
   14001f64e:	int3   
   14001f64f:	int3   
   14001f650:	mov    QWORD PTR [rsp+0x8],rcx
   14001f655:	mov    rax,QWORD PTR [rsp+0x8]
   14001f65a:	mov    rax,QWORD PTR [rax+0x10]
   14001f65e:	ret    
   14001f65f:	int3   
   14001f660:	int3   
   14001f661:	int3   
   14001f662:	int3   
   14001f663:	int3   
   14001f664:	int3   
   14001f665:	int3   
   14001f666:	int3   
   14001f667:	int3   
   14001f668:	int3   
   14001f669:	int3   
   14001f66a:	int3   
   14001f66b:	int3   
   14001f66c:	int3   
   14001f66d:	int3   
   14001f66e:	int3   
   14001f66f:	int3   
   14001f670:	mov    QWORD PTR [rsp+0x10],rdx
   14001f675:	mov    QWORD PTR [rsp+0x8],rcx
   14001f67a:	push   rsi
   14001f67b:	push   rdi
   14001f67c:	sub    rsp,0x178
   14001f683:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001f68c:	mov    rax,QWORD PTR [rip+0x1bbbd]        # 0x14003b250
   14001f693:	xor    rax,rsp
   14001f696:	mov    QWORD PTR [rsp+0x160],rax
   14001f69e:	lea    rax,[rsp+0x40]
   14001f6a3:	lea    rcx,[rip+0x12166]        # 0x140031810
   14001f6aa:	mov    rdi,rax
   14001f6ad:	mov    rsi,rcx
   14001f6b0:	mov    ecx,0x10
   14001f6b5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f6b7:	mov    rdx,QWORD PTR [rsp+0x198]
   14001f6bf:	lea    rcx,[rsp+0x50]
   14001f6c4:	call   0x140005100
   14001f6c9:	mov    QWORD PTR [rsp+0x30],rax
   14001f6ce:	mov    rax,QWORD PTR [rsp+0x30]
   14001f6d3:	mov    QWORD PTR [rsp+0x28],rax
   14001f6d8:	mov    rcx,QWORD PTR [rsp+0x28]
   14001f6dd:	call   0x14001ea00
   14001f6e2:	lea    rdx,[rsp+0x40]
   14001f6e7:	mov    rcx,rax
   14001f6ea:	call   QWORD PTR [rip+0x7758]        # 0x140026e48
   14001f6f0:	mov    DWORD PTR [rsp+0x20],eax
   14001f6f4:	lea    rcx,[rsp+0x50]
   14001f6f9:	call   0x1400051c0
   14001f6fe:	cmp    DWORD PTR [rsp+0x20],0x0
   14001f703:	jge    0x14001f71e
   14001f705:	lea    rax,[rsp+0x40]
   14001f70a:	lea    rcx,[rip+0x120ff]        # 0x140031810
   14001f711:	mov    rdi,rax
   14001f714:	mov    rsi,rcx
   14001f717:	mov    ecx,0x10
   14001f71c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f71e:	lea    rax,[rsp+0x40]
   14001f723:	mov    rdi,QWORD PTR [rsp+0x190]
   14001f72b:	mov    rsi,rax
   14001f72e:	mov    ecx,0x10
   14001f733:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f735:	mov    rax,QWORD PTR [rsp+0x190]
   14001f73d:	mov    rcx,QWORD PTR [rsp+0x160]
   14001f745:	xor    rcx,rsp
   14001f748:	call   0x140021890
   14001f74d:	add    rsp,0x178
   14001f754:	pop    rdi
   14001f755:	pop    rsi
   14001f756:	ret    
   14001f757:	int3   
   14001f758:	int3   
   14001f759:	int3   
   14001f75a:	int3   
   14001f75b:	int3   
   14001f75c:	int3   
   14001f75d:	int3   
   14001f75e:	int3   
   14001f75f:	int3   
   14001f760:	mov    QWORD PTR [rsp+0x10],rdx
   14001f765:	mov    QWORD PTR [rsp+0x8],rcx
   14001f76a:	push   rdi
   14001f76b:	sub    rsp,0x90
   14001f772:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001f77b:	mov    rax,QWORD PTR [rip+0x1bace]        # 0x14003b250
   14001f782:	xor    rax,rsp
   14001f785:	mov    QWORD PTR [rsp+0x80],rax
   14001f78d:	mov    DWORD PTR [rsp+0x20],0x0
   14001f795:	xor    eax,eax
   14001f797:	mov    WORD PTR [rsp+0x30],ax
   14001f79c:	lea    rax,[rsp+0x32]
   14001f7a1:	mov    rdi,rax
   14001f7a4:	xor    eax,eax
   14001f7a6:	mov    ecx,0x4e
   14001f7ab:	rep stos BYTE PTR es:[rdi],al
   14001f7ad:	mov    r8d,0x28
   14001f7b3:	lea    rdx,[rsp+0x30]
   14001f7b8:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001f7c0:	call   QWORD PTR [rip+0x767a]        # 0x140026e40
   14001f7c6:	mov    DWORD PTR [rsp+0x24],eax
   14001f7ca:	lea    rdx,[rsp+0x30]
   14001f7cf:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001f7d7:	call   QWORD PTR [rip+0x758b]        # 0x140026d68
   14001f7dd:	nop
   14001f7de:	mov    eax,DWORD PTR [rsp+0x20]
   14001f7e2:	or     eax,0x1
   14001f7e5:	mov    DWORD PTR [rsp+0x20],eax
   14001f7e9:	mov    rax,QWORD PTR [rsp+0xa0]
   14001f7f1:	mov    rcx,QWORD PTR [rsp+0x80]
   14001f7f9:	xor    rcx,rsp
   14001f7fc:	call   0x140021890
   14001f801:	add    rsp,0x90
   14001f808:	pop    rdi
   14001f809:	ret    
   14001f80a:	int3   
   14001f80b:	int3   
   14001f80c:	int3   
   14001f80d:	int3   
   14001f80e:	int3   
   14001f80f:	int3   
   14001f810:	mov    QWORD PTR [rsp+0x8],rcx
   14001f815:	sub    rsp,0x28
   14001f819:	mov    rax,QWORD PTR [rsp+0x30]
   14001f81e:	mov    rcx,rax
   14001f821:	call   QWORD PTR [rip+0x7589]        # 0x140026db0
   14001f827:	add    rsp,0x28
   14001f82b:	ret    
   14001f82c:	int3   
   14001f82d:	int3   
   14001f82e:	int3   
   14001f82f:	int3   
   14001f830:	int3   
   14001f831:	int3   
   14001f832:	int3   
   14001f833:	int3   
   14001f834:	int3   
   14001f835:	int3   
   14001f836:	int3   
   14001f837:	int3   
   14001f838:	int3   
   14001f839:	int3   
   14001f83a:	int3   
   14001f83b:	int3   
   14001f83c:	int3   
   14001f83d:	int3   
   14001f83e:	int3   
   14001f83f:	int3   
   14001f840:	mov    QWORD PTR [rsp+0x10],rdx
   14001f845:	mov    QWORD PTR [rsp+0x8],rcx
   14001f84a:	sub    rsp,0x28
   14001f84e:	mov    rax,QWORD PTR [rsp+0x30]
   14001f853:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f858:	mov    rcx,rax
   14001f85b:	call   QWORD PTR [rip+0x703f]        # 0x1400268a0
   14001f861:	add    rsp,0x28
   14001f865:	ret    
   14001f866:	int3   
   14001f867:	int3   
   14001f868:	int3   
   14001f869:	int3   
   14001f86a:	int3   
   14001f86b:	int3   
   14001f86c:	int3   
   14001f86d:	int3   
   14001f86e:	int3   
   14001f86f:	int3   
   14001f870:	mov    QWORD PTR [rsp+0x8],rcx
   14001f875:	sub    rsp,0x28
   14001f879:	mov    rax,QWORD PTR [rsp+0x30]
   14001f87e:	add    rax,0x8
   14001f882:	mov    rcx,rax
   14001f885:	call   QWORD PTR [rip+0x7525]        # 0x140026db0
   14001f88b:	add    rsp,0x28
   14001f88f:	ret    
   14001f890:	int3   
   14001f891:	int3   
   14001f892:	int3   
   14001f893:	int3   
   14001f894:	int3   
   14001f895:	int3   
   14001f896:	int3   
   14001f897:	int3   
   14001f898:	int3   
   14001f899:	int3   
   14001f89a:	int3   
   14001f89b:	int3   
   14001f89c:	int3   
   14001f89d:	int3   
   14001f89e:	int3   
   14001f89f:	int3   
   14001f8a0:	mov    QWORD PTR [rsp+0x10],rdx
   14001f8a5:	mov    QWORD PTR [rsp+0x8],rcx
   14001f8aa:	sub    rsp,0x28
   14001f8ae:	mov    rax,QWORD PTR [rsp+0x30]
   14001f8b3:	add    rax,0x8
   14001f8b7:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f8bc:	mov    rcx,rax
   14001f8bf:	call   QWORD PTR [rip+0x6fdb]        # 0x1400268a0
   14001f8c5:	add    rsp,0x28
   14001f8c9:	ret    
   14001f8ca:	int3   
   14001f8cb:	int3   
   14001f8cc:	int3   
   14001f8cd:	int3   
   14001f8ce:	int3   
   14001f8cf:	int3   
   14001f8d0:	mov    QWORD PTR [rsp+0x8],rcx
   14001f8d5:	sub    rsp,0x38
   14001f8d9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f8e2:	mov    rax,QWORD PTR [rsp+0x40]
   14001f8e7:	lea    rcx,[rip+0x11e7a]        # 0x140031768
   14001f8ee:	mov    QWORD PTR [rax],rcx
   14001f8f1:	mov    rax,QWORD PTR [rsp+0x40]
   14001f8f6:	add    rax,0x8
   14001f8fa:	mov    rcx,rax
   14001f8fd:	call   QWORD PTR [rip+0x747d]        # 0x140026d80
   14001f903:	nop
   14001f904:	mov    rax,QWORD PTR [rsp+0x40]
   14001f909:	add    rax,0x10
   14001f90d:	mov    rcx,rax
   14001f910:	call   QWORD PTR [rip+0x746a]        # 0x140026d80
   14001f916:	nop
   14001f917:	mov    rax,QWORD PTR [rsp+0x40]
   14001f91c:	add    rsp,0x38
   14001f920:	ret    
   14001f921:	int3   
   14001f922:	int3   
   14001f923:	int3   
   14001f924:	int3   
   14001f925:	int3   
   14001f926:	int3   
   14001f927:	int3   
   14001f928:	int3   
   14001f929:	int3   
   14001f92a:	int3   
   14001f92b:	int3   
   14001f92c:	int3   
   14001f92d:	int3   
   14001f92e:	int3   
   14001f92f:	int3   
   14001f930:	mov    QWORD PTR [rsp+0x8],rcx
   14001f935:	sub    rsp,0x38
   14001f939:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f942:	mov    rax,QWORD PTR [rsp+0x40]
   14001f947:	lea    rcx,[rip+0x11e1a]        # 0x140031768
   14001f94e:	mov    QWORD PTR [rax],rcx
   14001f951:	mov    rax,QWORD PTR [rsp+0x40]
   14001f956:	add    rax,0x10
   14001f95a:	mov    rcx,rax
   14001f95d:	call   QWORD PTR [rip+0x73fd]        # 0x140026d60
   14001f963:	nop
   14001f964:	mov    rax,QWORD PTR [rsp+0x40]
   14001f969:	add    rax,0x8
   14001f96d:	mov    rcx,rax
   14001f970:	call   QWORD PTR [rip+0x73ea]        # 0x140026d60
   14001f976:	add    rsp,0x38
   14001f97a:	ret    
   14001f97b:	int3   
   14001f97c:	int3   
   14001f97d:	int3   
   14001f97e:	int3   
   14001f97f:	int3   
   14001f980:	int3   
   14001f981:	int3   
   14001f982:	int3   
   14001f983:	int3   
   14001f984:	int3   
   14001f985:	int3   
   14001f986:	int3   
   14001f987:	int3   
   14001f988:	int3   
   14001f989:	int3   
   14001f98a:	int3   
   14001f98b:	int3   
   14001f98c:	int3   
   14001f98d:	int3   
   14001f98e:	int3   
   14001f98f:	int3   
   14001f990:	mov    QWORD PTR [rsp+0x10],rdx
   14001f995:	mov    QWORD PTR [rsp+0x8],rcx
   14001f99a:	sub    rsp,0x28
   14001f99e:	mov    rax,QWORD PTR [rsp+0x30]
   14001f9a3:	add    rax,0x8
   14001f9a7:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f9ac:	mov    rcx,rax
   14001f9af:	call   QWORD PTR [rip+0x6eeb]        # 0x1400268a0
   14001f9b5:	add    rsp,0x28
   14001f9b9:	ret    
   14001f9ba:	int3   
   14001f9bb:	int3   
   14001f9bc:	int3   
   14001f9bd:	int3   
   14001f9be:	int3   
   14001f9bf:	int3   
   14001f9c0:	mov    QWORD PTR [rsp+0x8],rcx
   14001f9c5:	sub    rsp,0x28
   14001f9c9:	mov    rax,QWORD PTR [rsp+0x30]
   14001f9ce:	add    rax,0x8
   14001f9d2:	mov    rcx,rax
   14001f9d5:	call   QWORD PTR [rip+0x6ee5]        # 0x1400268c0
   14001f9db:	movzx  eax,al
   14001f9de:	test   eax,eax
   14001f9e0:	jne    0x14001f9f8
   14001f9e2:	mov    rax,QWORD PTR [rsp+0x30]
   14001f9e7:	add    rax,0x8
   14001f9eb:	mov    rcx,rax
   14001f9ee:	call   QWORD PTR [rip+0x73bc]        # 0x140026db0
   14001f9f4:	jmp    0x14001f9ff
   14001f9f6:	jmp    0x14001f9ff
   14001f9f8:	lea    rax,[rip+0x11341]        # 0x140030d40
   14001f9ff:	add    rsp,0x28
   14001fa03:	ret    
   14001fa04:	int3   
   14001fa05:	int3   
   14001fa06:	int3   
   14001fa07:	int3   
   14001fa08:	int3   
   14001fa09:	int3   
   14001fa0a:	int3   
   14001fa0b:	int3   
   14001fa0c:	int3   
   14001fa0d:	int3   
   14001fa0e:	int3   
   14001fa0f:	int3   
   14001fa10:	mov    QWORD PTR [rsp+0x10],rdx
   14001fa15:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa1a:	sub    rsp,0x28
   14001fa1e:	mov    rax,QWORD PTR [rsp+0x30]
   14001fa23:	add    rax,0x10
   14001fa27:	mov    rdx,QWORD PTR [rsp+0x38]
   14001fa2c:	mov    rcx,rax
   14001fa2f:	call   QWORD PTR [rip+0x6e6b]        # 0x1400268a0
   14001fa35:	add    rsp,0x28
   14001fa39:	ret    
   14001fa3a:	int3   
   14001fa3b:	int3   
   14001fa3c:	int3   
   14001fa3d:	int3   
   14001fa3e:	int3   
   14001fa3f:	int3   
   14001fa40:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa45:	sub    rsp,0x28
   14001fa49:	mov    rax,QWORD PTR [rsp+0x30]
   14001fa4e:	add    rax,0x10
   14001fa52:	mov    rcx,rax
   14001fa55:	call   QWORD PTR [rip+0x7355]        # 0x140026db0
   14001fa5b:	add    rsp,0x28
   14001fa5f:	ret    
   14001fa60:	int3   
   14001fa61:	int3   
   14001fa62:	int3   
   14001fa63:	int3   
   14001fa64:	int3   
   14001fa65:	int3   
   14001fa66:	int3   
   14001fa67:	int3   
   14001fa68:	int3   
   14001fa69:	int3   
   14001fa6a:	int3   
   14001fa6b:	int3   
   14001fa6c:	int3   
   14001fa6d:	int3   
   14001fa6e:	int3   
   14001fa6f:	int3   
   14001fa70:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa75:	sub    rsp,0x38
   14001fa79:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001fa82:	lea    rdx,[rsp+0x20]
   14001fa87:	mov    rcx,QWORD PTR [rsp+0x40]
   14001fa8c:	call   0x14001fc10
   14001fa91:	nop
   14001fa92:	lea    rcx,[rsp+0x20]
   14001fa97:	call   QWORD PTR [rip+0x7313]        # 0x140026db0
   14001fa9d:	mov    rdx,rax
   14001faa0:	mov    rcx,0xffffffff80000001
   14001faa7:	call   QWORD PTR [rip+0x6a93]        # 0x140026540
   14001faad:	nop
   14001faae:	lea    rcx,[rsp+0x20]
   14001fab3:	call   QWORD PTR [rip+0x72a7]        # 0x140026d60
   14001fab9:	add    rsp,0x38
   14001fabd:	ret    
   14001fabe:	int3   
   14001fabf:	int3   
   14001fac0:	int3   
   14001fac1:	int3   
   14001fac2:	int3   
   14001fac3:	int3   
   14001fac4:	int3   
   14001fac5:	int3   
   14001fac6:	int3   
   14001fac7:	int3   
   14001fac8:	int3   
   14001fac9:	int3   
   14001faca:	int3   
   14001facb:	int3   
   14001facc:	int3   
   14001facd:	int3   
   14001face:	int3   
   14001facf:	int3   
   14001fad0:	mov    BYTE PTR [rsp+0x10],dl
   14001fad4:	mov    QWORD PTR [rsp+0x8],rcx
   14001fad9:	sub    rsp,0x48
   14001fadd:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001fae6:	mov    DWORD PTR [rsp+0x20],0x0
   14001faee:	movzx  eax,BYTE PTR [rsp+0x58]
   14001faf3:	test   eax,eax
   14001faf5:	je     0x14001faff
   14001faf7:	mov    DWORD PTR [rsp+0x20],0x1
   14001faff:	lea    rdx,[rsp+0x28]
   14001fb04:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fb09:	call   0x14001fd60
   14001fb0e:	nop
   14001fb0f:	mov    rax,QWORD PTR [rsp+0x50]
   14001fb14:	add    rax,0x8
   14001fb18:	mov    rcx,rax
   14001fb1b:	call   QWORD PTR [rip+0x728f]        # 0x140026db0
   14001fb21:	mov    QWORD PTR [rsp+0x30],rax
   14001fb26:	lea    rcx,[rsp+0x28]
   14001fb2b:	call   QWORD PTR [rip+0x727f]        # 0x140026db0
   14001fb31:	mov    r9d,DWORD PTR [rsp+0x20]
   14001fb36:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fb3b:	mov    r8,rcx
   14001fb3e:	mov    rdx,rax
   14001fb41:	mov    rcx,0xffffffff80000001
   14001fb48:	call   0x14000ce10
   14001fb4d:	nop
   14001fb4e:	lea    rcx,[rsp+0x28]
   14001fb53:	call   QWORD PTR [rip+0x7207]        # 0x140026d60
   14001fb59:	add    rsp,0x48
   14001fb5d:	ret    
   14001fb5e:	int3   
   14001fb5f:	int3   
   14001fb60:	int3   
   14001fb61:	int3   
   14001fb62:	int3   
   14001fb63:	int3   
   14001fb64:	int3   
   14001fb65:	int3   
   14001fb66:	int3   
   14001fb67:	int3   
   14001fb68:	int3   
   14001fb69:	int3   
   14001fb6a:	int3   
   14001fb6b:	int3   
   14001fb6c:	int3   
   14001fb6d:	int3   
   14001fb6e:	int3   
   14001fb6f:	int3   
   14001fb70:	mov    QWORD PTR [rsp+0x8],rcx
   14001fb75:	sub    rsp,0x48
   14001fb79:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001fb82:	lea    rdx,[rsp+0x28]
   14001fb87:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fb8c:	call   0x14001fd60
   14001fb91:	nop
   14001fb92:	mov    DWORD PTR [rsp+0x24],0x0
   14001fb9a:	mov    rax,QWORD PTR [rsp+0x50]
   14001fb9f:	add    rax,0x8
   14001fba3:	mov    rcx,rax
   14001fba6:	call   QWORD PTR [rip+0x7204]        # 0x140026db0
   14001fbac:	mov    QWORD PTR [rsp+0x30],rax
   14001fbb1:	lea    rcx,[rsp+0x28]
   14001fbb6:	call   QWORD PTR [rip+0x71f4]        # 0x140026db0
   14001fbbc:	lea    r9,[rsp+0x24]
   14001fbc1:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fbc6:	mov    r8,rcx
   14001fbc9:	mov    rdx,rax
   14001fbcc:	mov    rcx,0xffffffff80000001
   14001fbd3:	call   0x14000cd70
   14001fbd8:	cmp    DWORD PTR [rsp+0x24],0x0
   14001fbdd:	je     0x14001fbe6
   14001fbdf:	mov    BYTE PTR [rsp+0x20],0x1
   14001fbe4:	jmp    0x14001fbeb
   14001fbe6:	mov    BYTE PTR [rsp+0x20],0x0
   14001fbeb:	movzx  eax,BYTE PTR [rsp+0x20]
   14001fbf0:	mov    BYTE PTR [rsp+0x21],al
   14001fbf4:	lea    rcx,[rsp+0x28]
   14001fbf9:	call   QWORD PTR [rip+0x7161]        # 0x140026d60
   14001fbff:	movzx  eax,BYTE PTR [rsp+0x21]
   14001fc04:	add    rsp,0x48
   14001fc08:	ret    
   14001fc09:	int3   
   14001fc0a:	int3   
   14001fc0b:	int3   
   14001fc0c:	int3   
   14001fc0d:	int3   
   14001fc0e:	int3   
   14001fc0f:	int3   
   14001fc10:	mov    QWORD PTR [rsp+0x10],rdx
   14001fc15:	mov    QWORD PTR [rsp+0x8],rcx
   14001fc1a:	sub    rsp,0x48
   14001fc1e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001fc27:	mov    DWORD PTR [rsp+0x20],0x0
   14001fc2f:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fc34:	call   0x14001fa40
   14001fc39:	mov    rdx,rax
   14001fc3c:	lea    rcx,[rsp+0x28]
   14001fc41:	call   QWORD PTR [rip+0x7121]        # 0x140026d68
   14001fc47:	nop
   14001fc48:	lea    rdx,[rip+0x11129]        # 0x140030d78
   14001fc4f:	lea    rcx,[rsp+0x28]
   14001fc54:	call   QWORD PTR [rip+0x70f6]        # 0x140026d50
   14001fc5a:	lea    rdx,[rip+0x11103]        # 0x140030d64
   14001fc61:	lea    rcx,[rsp+0x28]
   14001fc66:	call   QWORD PTR [rip+0x70e4]        # 0x140026d50
   14001fc6c:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fc71:	call   0x14001f9c0
   14001fc76:	mov    rdx,rax
   14001fc79:	lea    rcx,[rsp+0x28]
   14001fc7e:	call   QWORD PTR [rip+0x70cc]        # 0x140026d50
   14001fc84:	lea    rdx,[rsp+0x28]
   14001fc89:	mov    rcx,QWORD PTR [rsp+0x58]
   14001fc8e:	call   QWORD PTR [rip+0x70dc]        # 0x140026d70
   14001fc94:	mov    eax,DWORD PTR [rsp+0x20]
   14001fc98:	or     eax,0x1
   14001fc9b:	mov    DWORD PTR [rsp+0x20],eax
   14001fc9f:	lea    rcx,[rsp+0x28]
   14001fca4:	call   QWORD PTR [rip+0x70b6]        # 0x140026d60
   14001fcaa:	mov    rax,QWORD PTR [rsp+0x58]
   14001fcaf:	add    rsp,0x48
   14001fcb3:	ret    
   14001fcb4:	int3   
   14001fcb5:	int3   
   14001fcb6:	int3   
   14001fcb7:	int3   
   14001fcb8:	int3   
   14001fcb9:	int3   
   14001fcba:	int3   
   14001fcbb:	int3   
   14001fcbc:	int3   
   14001fcbd:	int3   
   14001fcbe:	int3   
   14001fcbf:	int3   
   14001fcc0:	mov    QWORD PTR [rsp+0x10],rdx
   14001fcc5:	mov    QWORD PTR [rsp+0x8],rcx
   14001fcca:	sub    rsp,0x48
   14001fcce:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001fcd7:	mov    DWORD PTR [rsp+0x20],0x0
   14001fcdf:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fce4:	call   0x14001fa40
   14001fce9:	mov    rdx,rax
   14001fcec:	lea    rcx,[rsp+0x28]
   14001fcf1:	call   QWORD PTR [rip+0x7071]        # 0x140026d68
   14001fcf7:	nop
   14001fcf8:	lea    rdx,[rip+0x110a1]        # 0x140030da0
   14001fcff:	lea    rcx,[rsp+0x28]
   14001fd04:	call   QWORD PTR [rip+0x7046]        # 0x140026d50
   14001fd0a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fd0f:	call   0x14001f9c0
   14001fd14:	mov    rdx,rax
   14001fd17:	lea    rcx,[rsp+0x28]
   14001fd1c:	call   QWORD PTR [rip+0x702e]        # 0x140026d50
   14001fd22:	lea    rdx,[rsp+0x28]
   14001fd27:	mov    rcx,QWORD PTR [rsp+0x58]
   14001fd2c:	call   QWORD PTR [rip+0x703e]        # 0x140026d70
   14001fd32:	mov    eax,DWORD PTR [rsp+0x20]
   14001fd36:	or     eax,0x1
   14001fd39:	mov    DWORD PTR [rsp+0x20],eax
   14001fd3d:	lea    rcx,[rsp+0x28]
   14001fd42:	call   QWORD PTR [rip+0x7018]        # 0x140026d60
   14001fd48:	mov    rax,QWORD PTR [rsp+0x58]
   14001fd4d:	add    rsp,0x48
   14001fd51:	ret    
   14001fd52:	int3   
   14001fd53:	int3   
   14001fd54:	int3   
   14001fd55:	int3   
   14001fd56:	int3   
   14001fd57:	int3   
   14001fd58:	int3   
   14001fd59:	int3   
   14001fd5a:	int3   
   14001fd5b:	int3   
   14001fd5c:	int3   
   14001fd5d:	int3   
   14001fd5e:	int3   
   14001fd5f:	int3   
   14001fd60:	mov    QWORD PTR [rsp+0x10],rdx
   14001fd65:	mov    QWORD PTR [rsp+0x8],rcx
   14001fd6a:	sub    rsp,0x48
   14001fd6e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001fd77:	mov    DWORD PTR [rsp+0x20],0x0
   14001fd7f:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fd84:	call   0x14001fa40
   14001fd89:	mov    rdx,rax
   14001fd8c:	lea    rcx,[rsp+0x28]
   14001fd91:	call   QWORD PTR [rip+0x6fd1]        # 0x140026d68
   14001fd97:	nop
   14001fd98:	lea    rdx,[rip+0x11021]        # 0x140030dc0
   14001fd9f:	lea    rcx,[rsp+0x28]
   14001fda4:	call   QWORD PTR [rip+0x6fa6]        # 0x140026d50
   14001fdaa:	lea    rdx,[rsp+0x28]
   14001fdaf:	mov    rcx,QWORD PTR [rsp+0x58]
   14001fdb4:	call   QWORD PTR [rip+0x6fb6]        # 0x140026d70
   14001fdba:	mov    eax,DWORD PTR [rsp+0x20]
   14001fdbe:	or     eax,0x1
   14001fdc1:	mov    DWORD PTR [rsp+0x20],eax
   14001fdc5:	lea    rcx,[rsp+0x28]
   14001fdca:	call   QWORD PTR [rip+0x6f90]        # 0x140026d60
   14001fdd0:	mov    rax,QWORD PTR [rsp+0x58]
   14001fdd5:	add    rsp,0x48
   14001fdd9:	ret    
   14001fdda:	int3   
   14001fddb:	int3   
   14001fddc:	int3   
   14001fddd:	int3   
   14001fdde:	int3   
   14001fddf:	int3   
   14001fde0:	int3   
   14001fde1:	int3   
   14001fde2:	int3   
   14001fde3:	int3   
   14001fde4:	int3   
   14001fde5:	int3   
   14001fde6:	int3   
   14001fde7:	int3   
   14001fde8:	int3   
   14001fde9:	int3   
   14001fdea:	int3   
   14001fdeb:	int3   
   14001fdec:	int3   
   14001fded:	int3   
   14001fdee:	int3   
   14001fdef:	int3   
   14001fdf0:	mov    DWORD PTR [rsp+0x10],edx
   14001fdf4:	mov    QWORD PTR [rsp+0x8],rcx
   14001fdf9:	push   rsi
   14001fdfa:	push   rdi
   14001fdfb:	sub    rsp,0x98
   14001fe02:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001fe0b:	lea    rdx,[rsp+0x30]
   14001fe10:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001fe18:	call   0x14001fcc0
   14001fe1d:	nop
   14001fe1e:	lea    rcx,[rsp+0x30]
   14001fe23:	call   QWORD PTR [rip+0x6f87]        # 0x140026db0
   14001fe29:	mov    rdx,rax
   14001fe2c:	mov    rcx,0xffffffff80000001
   14001fe33:	call   QWORD PTR [rip+0x6707]        # 0x140026540
   14001fe39:	cmp    DWORD PTR [rsp+0xb8],0xffffffff
   14001fe41:	je     0x14001fef6
   14001fe47:	mov    DWORD PTR [rsp+0x20],0x0
   14001fe4f:	xor    r9d,r9d
   14001fe52:	xor    r8d,r8d
   14001fe55:	mov    edx,DWORD PTR [rsp+0xb8]
   14001fe5c:	lea    rcx,[rsp+0x70]
   14001fe61:	call   0x140020320
   14001fe66:	lea    rcx,[rsp+0x50]
   14001fe6b:	mov    rdi,rcx
   14001fe6e:	mov    rsi,rax
   14001fe71:	mov    ecx,0x10
   14001fe76:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe78:	lea    rcx,[rsp+0x80]
   14001fe80:	call   0x140003350
   14001fe85:	lea    r8,[rsp+0x50]
   14001fe8a:	lea    rdx,[rsp+0x60]
   14001fe8f:	mov    rcx,rax
   14001fe92:	call   0x140020470
   14001fe97:	mov    r9d,0x400
   14001fe9d:	xor    r8d,r8d
   14001fea0:	lea    rdx,[rsp+0x38]
   14001fea5:	lea    rcx,[rsp+0x60]
   14001feaa:	call   0x140002f50
   14001feaf:	nop
   14001feb0:	lea    rcx,[rsp+0x38]
   14001feb5:	call   QWORD PTR [rip+0x6ef5]        # 0x140026db0
   14001febb:	mov    QWORD PTR [rsp+0x40],rax
   14001fec0:	lea    rcx,[rsp+0x30]
   14001fec5:	call   QWORD PTR [rip+0x6ee5]        # 0x140026db0
   14001fecb:	mov    rcx,QWORD PTR [rsp+0x40]
   14001fed0:	mov    r9,rcx
   14001fed3:	lea    r8,[rip+0x10f06]        # 0x140030de0
   14001feda:	mov    rdx,rax
   14001fedd:	mov    rcx,0xffffffff80000001
   14001fee4:	call   0x14000cac0
   14001fee9:	nop
   14001feea:	lea    rcx,[rsp+0x38]
   14001feef:	call   QWORD PTR [rip+0x6e6b]        # 0x140026d60
   14001fef5:	nop
   14001fef6:	lea    rcx,[rsp+0x30]
   14001fefb:	call   QWORD PTR [rip+0x6e5f]        # 0x140026d60
   14001ff01:	add    rsp,0x98
   14001ff08:	pop    rdi
   14001ff09:	pop    rsi
   14001ff0a:	ret    
   14001ff0b:	int3   
   14001ff0c:	int3   
   14001ff0d:	int3   
   14001ff0e:	int3   
   14001ff0f:	int3   
   14001ff10:	int3   
   14001ff11:	int3   
   14001ff12:	int3   
   14001ff13:	int3   
   14001ff14:	int3   
   14001ff15:	int3   
   14001ff16:	int3   
   14001ff17:	int3   
   14001ff18:	int3   
   14001ff19:	int3   
   14001ff1a:	int3   
   14001ff1b:	int3   
   14001ff1c:	int3   
   14001ff1d:	int3   
   14001ff1e:	int3   
   14001ff1f:	int3   
   14001ff20:	mov    QWORD PTR [rsp+0x8],rcx
   14001ff25:	sub    rsp,0x68
   14001ff29:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001ff32:	mov    BYTE PTR [rsp+0x21],0x1
   14001ff37:	lea    rdx,[rsp+0x28]
   14001ff3c:	mov    rcx,QWORD PTR [rsp+0x70]
   14001ff41:	call   0x1400201f0
   14001ff46:	nop
   14001ff47:	lea    rcx,[rsp+0x28]
   14001ff4c:	call   QWORD PTR [rip+0x696e]        # 0x1400268c0
   14001ff52:	movzx  eax,al
   14001ff55:	test   eax,eax
   14001ff57:	jne    0x14001ffbe
   14001ff59:	lea    rcx,[rsp+0x38]
   14001ff5e:	call   0x1400202f0
   14001ff63:	lea    rcx,[rsp+0x28]
   14001ff68:	call   QWORD PTR [rip+0x6e42]        # 0x140026db0
   14001ff6e:	mov    r9d,0x400
   14001ff74:	xor    r8d,r8d
   14001ff77:	mov    rdx,rax
   14001ff7a:	lea    rcx,[rsp+0x38]
   14001ff7f:	call   0x140020740
   14001ff84:	movzx  eax,al
   14001ff87:	test   eax,eax
   14001ff89:	je     0x14001ffbe
   14001ff8b:	lea    rcx,[rsp+0x48]
   14001ff90:	call   0x140003350
   14001ff95:	lea    rdx,[rsp+0x38]
   14001ff9a:	mov    rcx,rax
   14001ff9d:	call   0x1400204d0
   14001ffa2:	movzx  eax,al
   14001ffa5:	test   eax,eax
   14001ffa7:	je     0x14001ffb0
   14001ffa9:	mov    BYTE PTR [rsp+0x20],0x1
   14001ffae:	jmp    0x14001ffb5
   14001ffb0:	mov    BYTE PTR [rsp+0x20],0x0
   14001ffb5:	movzx  eax,BYTE PTR [rsp+0x20]
   14001ffba:	mov    BYTE PTR [rsp+0x21],al
   14001ffbe:	movzx  eax,BYTE PTR [rsp+0x21]
   14001ffc3:	mov    BYTE PTR [rsp+0x22],al
   14001ffc7:	lea    rcx,[rsp+0x28]
   14001ffcc:	call   QWORD PTR [rip+0x6d8e]        # 0x140026d60
   14001ffd2:	movzx  eax,BYTE PTR [rsp+0x22]
   14001ffd7:	add    rsp,0x68
   14001ffdb:	ret    
   14001ffdc:	int3   
   14001ffdd:	int3   
   14001ffde:	int3   
   14001ffdf:	int3   
   14001ffe0:	int3   
   14001ffe1:	int3   
   14001ffe2:	int3   
   14001ffe3:	int3   
   14001ffe4:	int3   
   14001ffe5:	int3   
   14001ffe6:	int3   
   14001ffe7:	int3   
   14001ffe8:	int3   
   14001ffe9:	int3   
   14001ffea:	int3   
   14001ffeb:	int3   
   14001ffec:	int3   
   14001ffed:	int3   
   14001ffee:	int3   
   14001ffef:	int3   
   14001fff0:	mov    QWORD PTR [rsp+0x8],rcx
   14001fff5:	sub    rsp,0x78
   14001fff9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020002:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14002000a:	lea    rdx,[rsp+0x28]
   14002000f:	mov    rcx,QWORD PTR [rsp+0x80]
   140020017:	call   0x1400201f0
   14002001c:	nop
   14002001d:	lea    rcx,[rsp+0x28]
   140020022:	call   QWORD PTR [rip+0x6898]        # 0x1400268c0
   140020028:	movzx  eax,al
   14002002b:	test   eax,eax
   14002002d:	jne    0x14002008b
   14002002f:	lea    rcx,[rsp+0x38]
   140020034:	call   0x1400202f0
   140020039:	lea    rcx,[rsp+0x28]
   14002003e:	call   QWORD PTR [rip+0x6d6c]        # 0x140026db0
   140020044:	mov    r9d,0x400
   14002004a:	xor    r8d,r8d
   14002004d:	mov    rdx,rax
   140020050:	lea    rcx,[rsp+0x38]
   140020055:	call   0x140020740
   14002005a:	movzx  eax,al
   14002005d:	test   eax,eax
   14002005f:	je     0x14002008b
   140020061:	lea    rcx,[rsp+0x58]
   140020066:	call   0x140003350
   14002006b:	mov    r8,rax
   14002006e:	lea    rdx,[rsp+0x48]
   140020073:	lea    rcx,[rsp+0x38]
   140020078:	call   0x140020410
   14002007d:	lea    rcx,[rsp+0x48]
   140020082:	call   0x1400206c0
   140020087:	mov    DWORD PTR [rsp+0x20],eax
   14002008b:	mov    eax,DWORD PTR [rsp+0x20]
   14002008f:	mov    DWORD PTR [rsp+0x24],eax
   140020093:	lea    rcx,[rsp+0x28]
   140020098:	call   QWORD PTR [rip+0x6cc2]        # 0x140026d60
   14002009e:	mov    eax,DWORD PTR [rsp+0x24]
   1400200a2:	add    rsp,0x78
   1400200a6:	ret    
   1400200a7:	int3   
   1400200a8:	int3   
   1400200a9:	int3   
   1400200aa:	int3   
   1400200ab:	int3   
   1400200ac:	int3   
   1400200ad:	int3   
   1400200ae:	int3   
   1400200af:	int3   
   1400200b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400200b5:	sub    rsp,0x48
   1400200b9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400200c2:	lea    rdx,[rsp+0x28]
   1400200c7:	mov    rcx,QWORD PTR [rsp+0x50]
   1400200cc:	call   0x14001fc10
   1400200d1:	nop
   1400200d2:	mov    DWORD PTR [rsp+0x20],0x0
   1400200da:	lea    rcx,[rsp+0x28]
   1400200df:	call   QWORD PTR [rip+0x6ccb]        # 0x140026db0
   1400200e5:	lea    r9,[rsp+0x20]
   1400200ea:	lea    r8,[rip+0x10c67]        # 0x140030d58
   1400200f1:	mov    rdx,rax
   1400200f4:	mov    rcx,0xffffffff80000001
   1400200fb:	call   0x14000cd70
   140020100:	test   eax,eax
   140020102:	je     0x140020112
   140020104:	mov    rax,QWORD PTR [rsp+0x50]
   140020109:	mov    ecx,DWORD PTR [rsp+0x20]
   14002010d:	mov    DWORD PTR [rax+0x18],ecx
   140020110:	jmp    0x14002011e
   140020112:	mov    rax,QWORD PTR [rsp+0x50]
   140020117:	mov    DWORD PTR [rax+0x18],0xffffffff
   14002011e:	lea    rcx,[rsp+0x28]
   140020123:	call   QWORD PTR [rip+0x6c37]        # 0x140026d60
   140020129:	add    rsp,0x48
   14002012d:	ret    
   14002012e:	int3   
   14002012f:	int3   
   140020130:	int3   
   140020131:	int3   
   140020132:	int3   
   140020133:	int3   
   140020134:	int3   
   140020135:	int3   
   140020136:	int3   
   140020137:	int3   
   140020138:	int3   
   140020139:	int3   
   14002013a:	int3   
   14002013b:	int3   
   14002013c:	int3   
   14002013d:	int3   
   14002013e:	int3   
   14002013f:	int3   
   140020140:	mov    QWORD PTR [rsp+0x8],rcx
   140020145:	sub    rsp,0x38
   140020149:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140020152:	lea    rdx,[rsp+0x20]
   140020157:	mov    rcx,QWORD PTR [rsp+0x40]
   14002015c:	call   0x14001fc10
   140020161:	nop
   140020162:	lea    rcx,[rsp+0x20]
   140020167:	call   QWORD PTR [rip+0x6c43]        # 0x140026db0
   14002016d:	mov    rcx,QWORD PTR [rsp+0x40]
   140020172:	mov    r9d,DWORD PTR [rcx+0x18]
   140020176:	lea    r8,[rip+0x10beb]        # 0x140030d68
   14002017d:	mov    rdx,rax
   140020180:	mov    rcx,0xffffffff80000001
   140020187:	call   0x14000ce10
   14002018c:	nop
   14002018d:	lea    rcx,[rsp+0x20]
   140020192:	call   QWORD PTR [rip+0x6bc8]        # 0x140026d60
   140020198:	add    rsp,0x38
   14002019c:	ret    
   14002019d:	int3   
   14002019e:	int3   
   14002019f:	int3   
   1400201a0:	int3   
   1400201a1:	int3   
   1400201a2:	int3   
   1400201a3:	int3   
   1400201a4:	int3   
   1400201a5:	int3   
   1400201a6:	int3   
   1400201a7:	int3   
   1400201a8:	int3   
   1400201a9:	int3   
   1400201aa:	int3   
   1400201ab:	int3   
   1400201ac:	int3   
   1400201ad:	int3   
   1400201ae:	int3   
   1400201af:	int3   
   1400201b0:	mov    DWORD PTR [rsp+0x10],edx
   1400201b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400201b9:	mov    rax,QWORD PTR [rsp+0x8]
   1400201be:	mov    ecx,DWORD PTR [rsp+0x10]
   1400201c2:	mov    DWORD PTR [rax+0x18],ecx
   1400201c5:	ret    
   1400201c6:	int3   
   1400201c7:	int3   
   1400201c8:	int3   
   1400201c9:	int3   
   1400201ca:	int3   
   1400201cb:	int3   
   1400201cc:	int3   
   1400201cd:	int3   
   1400201ce:	int3   
   1400201cf:	int3   
   1400201d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400201d5:	mov    rax,QWORD PTR [rsp+0x8]
   1400201da:	mov    eax,DWORD PTR [rax+0x18]
   1400201dd:	ret    
   1400201de:	int3   
   1400201df:	int3   
   1400201e0:	int3   
   1400201e1:	int3   
   1400201e2:	int3   
   1400201e3:	int3   
   1400201e4:	int3   
   1400201e5:	int3   
   1400201e6:	int3   
   1400201e7:	int3   
   1400201e8:	int3   
   1400201e9:	int3   
   1400201ea:	int3   
   1400201eb:	int3   
   1400201ec:	int3   
   1400201ed:	int3   
   1400201ee:	int3   
   1400201ef:	int3   
   1400201f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400201f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400201fa:	sub    rsp,0x78
   1400201fe:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140020207:	mov    DWORD PTR [rsp+0x20],0x0
   14002020f:	lea    rdx,[rsp+0x30]
   140020214:	mov    rcx,QWORD PTR [rsp+0x80]
   14002021c:	call   0x14001fcc0
   140020221:	nop
   140020222:	lea    rcx,[rsp+0x30]
   140020227:	call   QWORD PTR [rip+0x6b83]        # 0x140026db0
   14002022d:	lea    r9,[rip+0x10bbc]        # 0x140030df0
   140020234:	mov    r8,rax
   140020237:	mov    rdx,0xffffffff80000001
   14002023e:	lea    rcx,[rsp+0x50]
   140020243:	call   0x14000c9c0
   140020248:	mov    QWORD PTR [rsp+0x38],rax
   14002024d:	mov    rax,QWORD PTR [rsp+0x38]
   140020252:	mov    QWORD PTR [rsp+0x40],rax
   140020257:	mov    rcx,QWORD PTR [rsp+0x40]
   14002025c:	call   0x14000a520
   140020261:	mov    rdx,rax
   140020264:	lea    rcx,[rsp+0x28]
   140020269:	call   QWORD PTR [rip+0x6af9]        # 0x140026d68
   14002026f:	nop
   140020270:	lea    rcx,[rsp+0x50]
   140020275:	call   0x140009e60
   14002027a:	lea    rdx,[rsp+0x28]
   14002027f:	mov    rcx,QWORD PTR [rsp+0x88]
   140020287:	call   QWORD PTR [rip+0x6ae3]        # 0x140026d70
   14002028d:	mov    eax,DWORD PTR [rsp+0x20]
   140020291:	or     eax,0x1
   140020294:	mov    DWORD PTR [rsp+0x20],eax
   140020298:	lea    rcx,[rsp+0x28]
   14002029d:	call   QWORD PTR [rip+0x6abd]        # 0x140026d60
   1400202a3:	nop
   1400202a4:	lea    rcx,[rsp+0x30]
   1400202a9:	call   QWORD PTR [rip+0x6ab1]        # 0x140026d60
   1400202af:	mov    rax,QWORD PTR [rsp+0x88]
   1400202b7:	add    rsp,0x78
   1400202bb:	ret    
   1400202bc:	int3   
   1400202bd:	int3   
   1400202be:	int3   
   1400202bf:	int3   
   1400202c0:	movsd  QWORD PTR [rsp+0x10],xmm1
   1400202c6:	mov    QWORD PTR [rsp+0x8],rcx
   1400202cb:	mov    rax,QWORD PTR [rsp+0x8]
   1400202d0:	movsd  xmm0,QWORD PTR [rsp+0x10]
   1400202d6:	movsd  QWORD PTR [rax],xmm0
   1400202da:	mov    rax,QWORD PTR [rsp+0x8]
   1400202df:	mov    DWORD PTR [rax+0x8],0x0
   1400202e6:	mov    rax,QWORD PTR [rsp+0x8]
   1400202eb:	ret    
   1400202ec:	int3   
   1400202ed:	int3   
   1400202ee:	int3   
   1400202ef:	int3   
   1400202f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400202f5:	mov    rax,QWORD PTR [rsp+0x8]
   1400202fa:	xorps  xmm0,xmm0
   1400202fd:	movsd  QWORD PTR [rax],xmm0
   140020301:	mov    rax,QWORD PTR [rsp+0x8]
   140020306:	mov    DWORD PTR [rax+0x8],0x0
   14002030d:	mov    rax,QWORD PTR [rsp+0x8]
   140020312:	ret    
   140020313:	int3   
   140020314:	int3   
   140020315:	int3   
   140020316:	int3   
   140020317:	int3   
   140020318:	int3   
   140020319:	int3   
   14002031a:	int3   
   14002031b:	int3   
   14002031c:	int3   
   14002031d:	int3   
   14002031e:	int3   
   14002031f:	int3   
   140020320:	mov    DWORD PTR [rsp+0x20],r9d
   140020325:	mov    DWORD PTR [rsp+0x18],r8d
   14002032a:	mov    DWORD PTR [rsp+0x10],edx
   14002032e:	mov    QWORD PTR [rsp+0x8],rcx
   140020333:	sub    rsp,0x38
   140020337:	mov    eax,DWORD PTR [rsp+0x60]
   14002033b:	mov    DWORD PTR [rsp+0x20],eax
   14002033f:	mov    r9d,DWORD PTR [rsp+0x58]
   140020344:	mov    r8d,DWORD PTR [rsp+0x50]
   140020349:	mov    edx,DWORD PTR [rsp+0x48]
   14002034d:	mov    rcx,QWORD PTR [rsp+0x40]
   140020352:	call   0x1400208c0
   140020357:	mov    rax,QWORD PTR [rsp+0x40]
   14002035c:	add    rsp,0x38
   140020360:	ret    
   140020361:	int3   
   140020362:	int3   
   140020363:	int3   
   140020364:	int3   
   140020365:	int3   
   140020366:	int3   
   140020367:	int3   
   140020368:	int3   
   140020369:	int3   
   14002036a:	int3   
   14002036b:	int3   
   14002036c:	int3   
   14002036d:	int3   
   14002036e:	int3   
   14002036f:	int3   
   140020370:	movsd  QWORD PTR [rsp+0x10],xmm1
   140020376:	mov    QWORD PTR [rsp+0x8],rcx
   14002037b:	sub    rsp,0x28
   14002037f:	mov    rax,QWORD PTR [rsp+0x30]
   140020384:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14002038a:	movsd  QWORD PTR [rax],xmm0
   14002038e:	mov    rax,QWORD PTR [rsp+0x30]
   140020393:	mov    DWORD PTR [rax+0x8],0x0
   14002039a:	mov    rcx,QWORD PTR [rsp+0x30]
   14002039f:	call   0x1400205a0
   1400203a4:	mov    rax,QWORD PTR [rsp+0x30]
   1400203a9:	add    rsp,0x28
   1400203ad:	ret    
   1400203ae:	int3   
   1400203af:	int3   
   1400203b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400203b5:	sub    rsp,0x38
   1400203b9:	mov    rax,QWORD PTR [rsp+0x40]
   1400203be:	cmp    QWORD PTR [rax],0x0
   1400203c2:	je     0x1400203f0
   1400203c4:	mov    rax,QWORD PTR [rsp+0x40]
   1400203c9:	mov    rax,QWORD PTR [rax]
   1400203cc:	mov    QWORD PTR [rsp+0x20],rax
   1400203d1:	mov    rax,QWORD PTR [rsp+0x40]
   1400203d6:	mov    rax,QWORD PTR [rax]
   1400203d9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400203de:	mov    rax,QWORD PTR [rax]
   1400203e1:	mov    QWORD PTR [rcx],rax
   1400203e4:	mov    rcx,QWORD PTR [rsp+0x20]
   1400203e9:	call   0x1400206a0
   1400203ee:	jmp    0x1400203b9
   1400203f0:	add    rsp,0x38
   1400203f4:	ret    
   1400203f5:	int3   
   1400203f6:	int3   
   1400203f7:	int3   
   1400203f8:	int3   
   1400203f9:	int3   
   1400203fa:	int3   
   1400203fb:	int3   
   1400203fc:	int3   
   1400203fd:	int3   
   1400203fe:	int3   
   1400203ff:	int3   
   140020400:	mov    QWORD PTR [rsp+0x8],rcx
   140020405:	mov    rax,QWORD PTR [rsp+0x8]
   14002040a:	movsd  xmm0,QWORD PTR [rax]
   14002040e:	ret    
   14002040f:	int3   
   140020410:	mov    QWORD PTR [rsp+0x18],r8
   140020415:	mov    QWORD PTR [rsp+0x10],rdx
   14002041a:	mov    QWORD PTR [rsp+0x8],rcx
   14002041f:	sub    rsp,0x38
   140020423:	mov    rax,QWORD PTR [rsp+0x40]
   140020428:	movsd  xmm0,QWORD PTR [rax]
   14002042c:	call   0x140020640
   140020431:	movsd  QWORD PTR [rsp+0x20],xmm0
   140020437:	mov    rax,QWORD PTR [rsp+0x50]
   14002043c:	movsd  xmm0,QWORD PTR [rax]
   140020440:	call   0x140020640
   140020445:	movsd  xmm1,QWORD PTR [rsp+0x20]
   14002044b:	subsd  xmm1,xmm0
   14002044f:	movaps xmm0,xmm1
   140020452:	movaps xmm1,xmm0
   140020455:	mov    rcx,QWORD PTR [rsp+0x48]
   14002045a:	call   0x140020370
   14002045f:	mov    rax,QWORD PTR [rsp+0x48]
   140020464:	add    rsp,0x38
   140020468:	ret    
   140020469:	int3   
   14002046a:	int3   
   14002046b:	int3   
   14002046c:	int3   
   14002046d:	int3   
   14002046e:	int3   
   14002046f:	int3   
   140020470:	mov    QWORD PTR [rsp+0x18],r8
   140020475:	mov    QWORD PTR [rsp+0x10],rdx
   14002047a:	mov    QWORD PTR [rsp+0x8],rcx
   14002047f:	sub    rsp,0x38
   140020483:	mov    rax,QWORD PTR [rsp+0x40]
   140020488:	movsd  xmm0,QWORD PTR [rax]
   14002048c:	call   0x140020640
   140020491:	movsd  QWORD PTR [rsp+0x20],xmm0
   140020497:	mov    rcx,QWORD PTR [rsp+0x50]
   14002049c:	call   0x140020400
   1400204a1:	movsd  xmm1,QWORD PTR [rsp+0x20]
   1400204a7:	addsd  xmm1,xmm0
   1400204ab:	movaps xmm0,xmm1
   1400204ae:	call   0x1400205e0
   1400204b3:	movaps xmm1,xmm0
   1400204b6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400204bb:	call   0x1400202c0
   1400204c0:	mov    rax,QWORD PTR [rsp+0x48]
   1400204c5:	add    rsp,0x38
   1400204c9:	ret    
   1400204ca:	int3   
   1400204cb:	int3   
   1400204cc:	int3   
   1400204cd:	int3   
   1400204ce:	int3   
   1400204cf:	int3   
   1400204d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400204d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400204da:	sub    rsp,0x38
   1400204de:	mov    rcx,QWORD PTR [rsp+0x40]
   1400204e3:	call   0x140003340
   1400204e8:	test   eax,eax
   1400204ea:	jne    0x140020553
   1400204ec:	mov    rcx,QWORD PTR [rsp+0x40]
   1400204f1:	call   0x140003340
   1400204f6:	mov    DWORD PTR [rsp+0x24],eax
   1400204fa:	mov    rcx,QWORD PTR [rsp+0x48]
   1400204ff:	call   0x140003340
   140020504:	mov    ecx,DWORD PTR [rsp+0x24]
   140020508:	cmp    ecx,eax
   14002050a:	jne    0x140020553
   14002050c:	mov    rax,QWORD PTR [rsp+0x40]
   140020511:	movsd  xmm0,QWORD PTR [rax]
   140020515:	call   0x140020640
   14002051a:	movsd  QWORD PTR [rsp+0x28],xmm0
   140020520:	mov    rax,QWORD PTR [rsp+0x48]
   140020525:	movsd  xmm0,QWORD PTR [rax]
   140020529:	call   0x140020640
   14002052e:	movsd  xmm1,QWORD PTR [rsp+0x28]
   140020534:	comisd xmm1,xmm0
   140020538:	jbe    0x140020544
   14002053a:	mov    DWORD PTR [rsp+0x20],0x1
   140020542:	jmp    0x14002054c
   140020544:	mov    DWORD PTR [rsp+0x20],0x0
   14002054c:	movzx  eax,BYTE PTR [rsp+0x20]
   140020551:	jmp    0x140020555
   140020553:	xor    al,al
   140020555:	add    rsp,0x38
   140020559:	ret    
   14002055a:	int3   
   14002055b:	int3   
   14002055c:	int3   
   14002055d:	int3   
   14002055e:	int3   
   14002055f:	int3   
   140020560:	mov    DWORD PTR [rsp+0x10],edx
   140020564:	mov    QWORD PTR [rsp+0x8],rcx
   140020569:	sub    rsp,0x28
   14002056d:	mov    rcx,QWORD PTR [rsp+0x30]
   140020572:	call   0x14001f930
   140020577:	mov    eax,DWORD PTR [rsp+0x38]
   14002057b:	and    eax,0x1
   14002057e:	test   eax,eax
   140020580:	je     0x14002058c
   140020582:	mov    rcx,QWORD PTR [rsp+0x30]
   140020587:	call   0x140020b90
   14002058c:	mov    rax,QWORD PTR [rsp+0x30]
   140020591:	add    rsp,0x28
   140020595:	ret    
   140020596:	int3   
   140020597:	int3   
   140020598:	int3   
   140020599:	int3   
   14002059a:	int3   
   14002059b:	int3   
   14002059c:	int3   
   14002059d:	int3   
   14002059e:	int3   
   14002059f:	int3   
   1400205a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400205a5:	mov    rax,QWORD PTR [rsp+0x8]
   1400205aa:	movsd  xmm0,QWORD PTR [rip+0x111de]        # 0x140031790
   1400205b2:	comisd xmm0,QWORD PTR [rax]
   1400205b6:	ja     0x1400205cb
   1400205b8:	mov    rax,QWORD PTR [rsp+0x8]
   1400205bd:	movsd  xmm0,QWORD PTR [rax]
   1400205c1:	comisd xmm0,QWORD PTR [rip+0x111bf]        # 0x140031788
   1400205c9:	jbe    0x1400205d7
   1400205cb:	mov    rax,QWORD PTR [rsp+0x8]
   1400205d0:	mov    DWORD PTR [rax+0x8],0x1
   1400205d7:	ret    
   1400205d8:	int3   
   1400205d9:	int3   
   1400205da:	int3   
   1400205db:	int3   
   1400205dc:	int3   
   1400205dd:	int3   
   1400205de:	int3   
   1400205df:	int3   
   1400205e0:	movsd  QWORD PTR [rsp+0x8],xmm0
   1400205e6:	sub    rsp,0x38
   1400205ea:	movsd  xmm0,QWORD PTR [rip+0x6e9e]        # 0x140027490
   1400205f2:	xorps  xmm0,XMMWORD PTR [rip+0x111a7]        # 0x1400317a0
   1400205f9:	movsd  xmm1,QWORD PTR [rsp+0x40]
   1400205ff:	comisd xmm1,xmm0
   140020603:	jbe    0x14002060d
   140020605:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14002060b:	jmp    0x140020638
   14002060d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140020613:	call   QWORD PTR [rip+0x5e77]        # 0x140026490
   140020619:	movsd  QWORD PTR [rsp+0x20],xmm0
   14002061f:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140020625:	subsd  xmm0,QWORD PTR [rsp+0x40]
   14002062b:	movsd  xmm1,QWORD PTR [rsp+0x20]
   140020631:	addsd  xmm1,xmm0
   140020635:	movaps xmm0,xmm1
   140020638:	add    rsp,0x38
   14002063c:	ret    
   14002063d:	int3   
   14002063e:	int3   
   14002063f:	int3   
   140020640:	movsd  QWORD PTR [rsp+0x8],xmm0
   140020646:	sub    rsp,0x38
   14002064a:	movsd  xmm0,QWORD PTR [rip+0x6e3e]        # 0x140027490
   140020652:	xorps  xmm0,XMMWORD PTR [rip+0x11147]        # 0x1400317a0
   140020659:	movsd  xmm1,QWORD PTR [rsp+0x40]
   14002065f:	comisd xmm1,xmm0
   140020663:	jbe    0x14002066d
   140020665:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14002066b:	jmp    0x140020698
   14002066d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140020673:	call   QWORD PTR [rip+0x5d1f]        # 0x140026398
   140020679:	movsd  QWORD PTR [rsp+0x20],xmm0
   14002067f:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140020685:	subsd  xmm0,QWORD PTR [rsp+0x20]
   14002068b:	movsd  xmm1,QWORD PTR [rsp+0x20]
   140020691:	subsd  xmm1,xmm0
   140020695:	movaps xmm0,xmm1
   140020698:	add    rsp,0x38
   14002069c:	ret    
   14002069d:	int3   
   14002069e:	int3   
   14002069f:	int3   
   1400206a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400206a5:	sub    rsp,0x28
   1400206a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400206ae:	call   QWORD PTR [rip+0x5cec]        # 0x1400263a0
   1400206b4:	add    rsp,0x28
   1400206b8:	ret    
   1400206b9:	int3   
   1400206ba:	int3   
   1400206bb:	int3   
   1400206bc:	int3   
   1400206bd:	int3   
   1400206be:	int3   
   1400206bf:	int3   
   1400206c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400206c5:	sub    rsp,0x28
   1400206c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400206ce:	call   0x1400206e0
   1400206d3:	cvttsd2si eax,xmm0
   1400206d7:	add    rsp,0x28
   1400206db:	ret    
   1400206dc:	int3   
   1400206dd:	int3   
   1400206de:	int3   
   1400206df:	int3   
   1400206e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400206e5:	sub    rsp,0x18
   1400206e9:	mov    rax,QWORD PTR [rsp+0x20]
   1400206ee:	xorps  xmm0,xmm0
   1400206f1:	comisd xmm0,QWORD PTR [rax]
   1400206f5:	jbe    0x14002070d
   1400206f7:	movsd  xmm0,QWORD PTR [rip+0x6d91]        # 0x140027490
   1400206ff:	xorps  xmm0,XMMWORD PTR [rip+0x1109a]        # 0x1400317a0
   140020706:	movsd  QWORD PTR [rsp],xmm0
   14002070b:	jmp    0x14002071a
   14002070d:	movsd  xmm0,QWORD PTR [rip+0x6d7b]        # 0x140027490
   140020715:	movsd  QWORD PTR [rsp],xmm0
   14002071a:	mov    rax,QWORD PTR [rsp+0x20]
   14002071f:	movsd  xmm0,QWORD PTR [rax]
   140020723:	addsd  xmm0,QWORD PTR [rsp]
   140020728:	cvttsd2si rax,xmm0
   14002072d:	cvtsi2sd xmm0,rax
   140020732:	add    rsp,0x18
   140020736:	ret    
   140020737:	int3   
   140020738:	int3   
   140020739:	int3   
   14002073a:	int3   
   14002073b:	int3   
   14002073c:	int3   
   14002073d:	int3   
   14002073e:	int3   
   14002073f:	int3   
   140020740:	mov    DWORD PTR [rsp+0x20],r9d
   140020745:	mov    DWORD PTR [rsp+0x18],r8d
   14002074a:	mov    QWORD PTR [rsp+0x10],rdx
   14002074f:	mov    QWORD PTR [rsp+0x8],rcx
   140020754:	sub    rsp,0x68
   140020758:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140020761:	call   0x140003460
   140020766:	mov    DWORD PTR [rsp+0x38],eax
   14002076a:	lea    rcx,[rsp+0x28]
   14002076f:	call   0x140002a80
   140020774:	nop
   140020775:	cmp    QWORD PTR [rsp+0x78],0x0
   14002077b:	jne    0x14002078b
   14002077d:	lea    rax,[rip+0x7454]        # 0x140027bd8
   140020784:	mov    QWORD PTR [rsp+0x30],rax
   140020789:	jmp    0x140020795
   14002078b:	mov    rax,QWORD PTR [rsp+0x78]
   140020790:	mov    QWORD PTR [rsp+0x30],rax
   140020795:	mov    rax,QWORD PTR [rsp+0x30]
   14002079a:	mov    QWORD PTR [rsp+0x48],rax
   14002079f:	mov    edx,0x400
   1400207a4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400207a9:	call   0x140020940
   1400207ae:	mov    QWORD PTR [rsp+0x40],rax
   1400207b3:	mov    rax,QWORD PTR [rsp+0x70]
   1400207b8:	mov    r9,rax
   1400207bb:	mov    r8d,DWORD PTR [rsp+0x80]
   1400207c3:	mov    edx,DWORD PTR [rsp+0x88]
   1400207ca:	mov    rcx,QWORD PTR [rsp+0x40]
   1400207cf:	call   QWORD PTR [rip+0x5ccb]        # 0x1400264a0
   1400207d5:	mov    DWORD PTR [rsp+0x24],eax
   1400207d9:	cmp    DWORD PTR [rsp+0x24],0x0
   1400207de:	jge    0x140020893
   1400207e4:	cmp    DWORD PTR [rsp+0x24],0x80020005
   1400207ec:	jne    0x140020821
   1400207ee:	mov    rax,QWORD PTR [rsp+0x70]
   1400207f3:	xorps  xmm0,xmm0
   1400207f6:	movsd  QWORD PTR [rax],xmm0
   1400207fa:	mov    rax,QWORD PTR [rsp+0x70]
   1400207ff:	mov    DWORD PTR [rax+0x8],0x1
   140020806:	mov    BYTE PTR [rsp+0x23],0x0
   14002080b:	lea    rcx,[rsp+0x28]
   140020810:	call   0x1400203b0
   140020815:	movzx  eax,BYTE PTR [rsp+0x23]
   14002081a:	jmp    0x1400208b3
   14002081f:	jmp    0x140020893
   140020821:	cmp    DWORD PTR [rsp+0x24],0x8002000a
   140020829:	jne    0x140020860
   14002082b:	mov    rax,QWORD PTR [rsp+0x70]
   140020830:	movsd  xmm0,QWORD PTR [rip+0x8128]        # 0x140028960
   140020838:	movsd  QWORD PTR [rax],xmm0
   14002083c:	mov    rax,QWORD PTR [rsp+0x70]
   140020841:	mov    DWORD PTR [rax+0x8],0x1
   140020848:	mov    BYTE PTR [rsp+0x21],0x0
   14002084d:	lea    rcx,[rsp+0x28]
   140020852:	call   0x1400203b0
   140020857:	movzx  eax,BYTE PTR [rsp+0x21]
   14002085c:	jmp    0x1400208b3
   14002085e:	jmp    0x140020893
   140020860:	mov    rax,QWORD PTR [rsp+0x70]
   140020865:	movsd  xmm0,QWORD PTR [rip+0x80f3]        # 0x140028960
   14002086d:	movsd  QWORD PTR [rax],xmm0
   140020871:	mov    rax,QWORD PTR [rsp+0x70]
   140020876:	mov    DWORD PTR [rax+0x8],0x1
   14002087d:	mov    BYTE PTR [rsp+0x22],0x0
   140020882:	lea    rcx,[rsp+0x28]
   140020887:	call   0x1400203b0
   14002088c:	movzx  eax,BYTE PTR [rsp+0x22]
   140020891:	jmp    0x1400208b3
   140020893:	mov    rax,QWORD PTR [rsp+0x70]
   140020898:	mov    DWORD PTR [rax+0x8],0x0
   14002089f:	mov    BYTE PTR [rsp+0x20],0x1
   1400208a4:	lea    rcx,[rsp+0x28]
   1400208a9:	call   0x1400203b0
   1400208ae:	movzx  eax,BYTE PTR [rsp+0x20]
   1400208b3:	add    rsp,0x68
   1400208b7:	ret    
   1400208b8:	int3   
   1400208b9:	int3   
   1400208ba:	int3   
   1400208bb:	int3   
   1400208bc:	int3   
   1400208bd:	int3   
   1400208be:	int3   
   1400208bf:	int3   
   1400208c0:	mov    DWORD PTR [rsp+0x20],r9d
   1400208c5:	mov    DWORD PTR [rsp+0x18],r8d
   1400208ca:	mov    DWORD PTR [rsp+0x10],edx
   1400208ce:	mov    QWORD PTR [rsp+0x8],rcx
   1400208d3:	sub    rsp,0x28
   1400208d7:	cvtsi2sd xmm0,DWORD PTR [rsp+0x38]
   1400208dd:	cvtsi2sd xmm1,DWORD PTR [rsp+0x40]
   1400208e3:	divsd  xmm1,QWORD PTR [rip+0x10e85]        # 0x140031770
   1400208eb:	addsd  xmm0,xmm1
   1400208ef:	cvtsi2sd xmm1,DWORD PTR [rsp+0x48]
   1400208f5:	divsd  xmm1,QWORD PTR [rip+0x10e7b]        # 0x140031778
   1400208fd:	addsd  xmm0,xmm1
   140020901:	cvtsi2sd xmm1,DWORD PTR [rsp+0x50]
   140020907:	divsd  xmm1,QWORD PTR [rip+0x10e71]        # 0x140031780
   14002090f:	addsd  xmm0,xmm1
   140020913:	mov    rax,QWORD PTR [rsp+0x30]
   140020918:	movsd  QWORD PTR [rax],xmm0
   14002091c:	mov    rax,QWORD PTR [rsp+0x30]
   140020921:	mov    DWORD PTR [rax+0x8],0x0
   140020928:	mov    rcx,QWORD PTR [rsp+0x30]
   14002092d:	call   0x1400205a0
   140020932:	add    rsp,0x28
   140020936:	ret    
   140020937:	int3   
   140020938:	int3   
   140020939:	int3   
   14002093a:	int3   
   14002093b:	int3   
   14002093c:	int3   
   14002093d:	int3   
   14002093e:	int3   
   14002093f:	int3   
   140020940:	mov    DWORD PTR [rsp+0x10],edx
   140020944:	mov    QWORD PTR [rsp+0x8],rcx
   140020949:	mov    rax,QWORD PTR [rsp+0x8]
   14002094e:	ret    
   14002094f:	int3   
   140020950:	mov    QWORD PTR [rsp+0x8],rcx
   140020955:	sub    rsp,0x28
   140020959:	mov    rax,QWORD PTR [rsp+0x30]
   14002095e:	add    rax,0x68
   140020962:	mov    edx,0x1048
   140020967:	mov    rcx,rax
   14002096a:	call   0x140020b60
   14002096f:	mov    rax,QWORD PTR [rsp+0x30]
   140020974:	add    rax,0x10b0
   14002097a:	mov    edx,0x1048
   14002097f:	mov    rcx,rax
   140020982:	call   0x140020b60
   140020987:	mov    rax,QWORD PTR [rsp+0x30]
   14002098c:	add    rax,0x20f8
   140020992:	mov    edx,0x1048
   140020997:	mov    rcx,rax
   14002099a:	call   0x140020b60
   14002099f:	mov    rax,QWORD PTR [rsp+0x30]
   1400209a4:	add    rax,0x3140
   1400209aa:	mov    edx,0x1048
   1400209af:	mov    rcx,rax
   1400209b2:	call   0x140020b60
   1400209b7:	mov    rax,QWORD PTR [rsp+0x30]
   1400209bc:	add    rax,0x4188
   1400209c2:	mov    edx,0x1048
   1400209c7:	mov    rcx,rax
   1400209ca:	call   0x140020b60
   1400209cf:	mov    rax,QWORD PTR [rsp+0x30]
   1400209d4:	add    rax,0x51d0
   1400209da:	mov    edx,0x1048
   1400209df:	mov    rcx,rax
   1400209e2:	call   0x140020b60
   1400209e7:	mov    rax,QWORD PTR [rsp+0x30]
   1400209ec:	mov    DWORD PTR [rax],0x68
   1400209f2:	mov    rax,QWORD PTR [rsp+0x30]
   1400209f7:	add    rax,0x68
   1400209fb:	mov    rcx,QWORD PTR [rsp+0x30]
   140020a00:	mov    QWORD PTR [rcx+0x8],rax
   140020a04:	mov    rax,QWORD PTR [rsp+0x30]
   140020a09:	mov    DWORD PTR [rax+0x10],0x824
   140020a10:	mov    rax,QWORD PTR [rsp+0x30]
   140020a15:	add    rax,0x10b0
   140020a1b:	mov    rcx,QWORD PTR [rsp+0x30]
   140020a20:	mov    QWORD PTR [rcx+0x18],rax
   140020a24:	mov    rax,QWORD PTR [rsp+0x30]
   140020a29:	mov    DWORD PTR [rax+0x20],0x824
   140020a30:	mov    rax,QWORD PTR [rsp+0x30]
   140020a35:	add    rax,0x20f8
   140020a3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140020a40:	mov    QWORD PTR [rcx+0x28],rax
   140020a44:	mov    rax,QWORD PTR [rsp+0x30]
   140020a49:	mov    DWORD PTR [rax+0x30],0x824
   140020a50:	mov    rax,QWORD PTR [rsp+0x30]
   140020a55:	add    rax,0x3140
   140020a5b:	mov    rcx,QWORD PTR [rsp+0x30]
   140020a60:	mov    QWORD PTR [rcx+0x38],rax
   140020a64:	mov    rax,QWORD PTR [rsp+0x30]
   140020a69:	mov    DWORD PTR [rax+0x40],0x824
   140020a70:	mov    rax,QWORD PTR [rsp+0x30]
   140020a75:	add    rax,0x4188
   140020a7b:	mov    rcx,QWORD PTR [rsp+0x30]
   140020a80:	mov    QWORD PTR [rcx+0x48],rax
   140020a84:	mov    rax,QWORD PTR [rsp+0x30]
   140020a89:	mov    DWORD PTR [rax+0x50],0x824
   140020a90:	mov    rax,QWORD PTR [rsp+0x30]
   140020a95:	add    rax,0x51d0
   140020a9b:	mov    rcx,QWORD PTR [rsp+0x30]
   140020aa0:	mov    QWORD PTR [rcx+0x58],rax
   140020aa4:	mov    rax,QWORD PTR [rsp+0x30]
   140020aa9:	mov    DWORD PTR [rax+0x60],0x824
   140020ab0:	mov    rax,QWORD PTR [rsp+0x30]
   140020ab5:	add    rsp,0x28
   140020ab9:	ret    
   140020aba:	int3   
   140020abb:	int3   
   140020abc:	int3   
   140020abd:	int3   
   140020abe:	int3   
   140020abf:	int3   
   140020ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140020ac5:	sub    rsp,0x28
   140020ac9:	mov    rax,QWORD PTR [rsp+0x30]
   140020ace:	add    rax,0x68
   140020ad2:	mov    edx,0x1048
   140020ad7:	mov    rcx,rax
   140020ada:	call   0x140020b60
   140020adf:	mov    rax,QWORD PTR [rsp+0x30]
   140020ae4:	add    rax,0x10b0
   140020aea:	mov    edx,0x1048
   140020aef:	mov    rcx,rax
   140020af2:	call   0x140020b60
   140020af7:	mov    rax,QWORD PTR [rsp+0x30]
   140020afc:	add    rax,0x20f8
   140020b02:	mov    edx,0x1048
   140020b07:	mov    rcx,rax
   140020b0a:	call   0x140020b60
   140020b0f:	mov    rax,QWORD PTR [rsp+0x30]
   140020b14:	add    rax,0x3140
   140020b1a:	mov    edx,0x1048
   140020b1f:	mov    rcx,rax
   140020b22:	call   0x140020b60
   140020b27:	mov    rax,QWORD PTR [rsp+0x30]
   140020b2c:	add    rax,0x4188
   140020b32:	mov    edx,0x1048
   140020b37:	mov    rcx,rax
   140020b3a:	call   0x140020b60
   140020b3f:	mov    rax,QWORD PTR [rsp+0x30]
   140020b44:	add    rax,0x51d0
   140020b4a:	mov    edx,0x1048
   140020b4f:	mov    rcx,rax
   140020b52:	call   0x140020b60
   140020b57:	add    rsp,0x28
   140020b5b:	ret    
   140020b5c:	int3   
   140020b5d:	int3   
   140020b5e:	int3   
   140020b5f:	int3   
   140020b60:	mov    QWORD PTR [rsp+0x10],rdx
   140020b65:	mov    QWORD PTR [rsp+0x8],rcx
   140020b6a:	push   rdi
   140020b6b:	sub    rsp,0x10
   140020b6f:	mov    rax,QWORD PTR [rsp+0x20]
   140020b74:	mov    QWORD PTR [rsp],rax
   140020b78:	mov    rdi,QWORD PTR [rsp]
   140020b7c:	xor    eax,eax
   140020b7e:	mov    rcx,QWORD PTR [rsp+0x28]
   140020b83:	rep stos BYTE PTR es:[rdi],al
   140020b85:	mov    rax,QWORD PTR [rsp+0x20]
   140020b8a:	add    rsp,0x10
   140020b8e:	pop    rdi
   140020b8f:	ret    
   140020b90:	jmp    QWORD PTR [rip+0x625a]        # 0x140026df0
   140020b96:	jmp    QWORD PTR [rip+0x6244]        # 0x140026de0
   140020b9c:	jmp    QWORD PTR [rip+0x6236]        # 0x140026dd8
   140020ba2:	jmp    QWORD PTR [rip+0x6218]        # 0x140026dc0
   140020ba8:	jmp    QWORD PTR [rip+0x620a]        # 0x140026db8
   140020bae:	jmp    QWORD PTR [rip+0x617c]        # 0x140026d30
   140020bb4:	jmp    QWORD PTR [rip+0x616e]        # 0x140026d28
   140020bba:	jmp    QWORD PTR [rip+0x6160]        # 0x140026d20
   140020bc0:	jmp    QWORD PTR [rip+0x6152]        # 0x140026d18
   140020bc6:	jmp    QWORD PTR [rip+0x6144]        # 0x140026d10
   140020bcc:	jmp    QWORD PTR [rip+0x6136]        # 0x140026d08
   140020bd2:	jmp    QWORD PTR [rip+0x6128]        # 0x140026d00
   140020bd8:	jmp    QWORD PTR [rip+0x611a]        # 0x140026cf8
   140020bde:	jmp    QWORD PTR [rip+0x610c]        # 0x140026cf0
   140020be4:	jmp    QWORD PTR [rip+0x60fe]        # 0x140026ce8
   140020bea:	jmp    QWORD PTR [rip+0x60f0]        # 0x140026ce0
   140020bf0:	jmp    QWORD PTR [rip+0x60e2]        # 0x140026cd8
   140020bf6:	jmp    QWORD PTR [rip+0x60d4]        # 0x140026cd0
   140020bfc:	jmp    QWORD PTR [rip+0x60c6]        # 0x140026cc8
   140020c02:	jmp    QWORD PTR [rip+0x60b8]        # 0x140026cc0
   140020c08:	jmp    QWORD PTR [rip+0x60aa]        # 0x140026cb8
   140020c0e:	jmp    QWORD PTR [rip+0x609c]        # 0x140026cb0
   140020c14:	jmp    QWORD PTR [rip+0x608e]        # 0x140026ca8
   140020c1a:	jmp    QWORD PTR [rip+0x6080]        # 0x140026ca0
   140020c20:	jmp    QWORD PTR [rip+0x6072]        # 0x140026c98
   140020c26:	jmp    QWORD PTR [rip+0x6064]        # 0x140026c90
   140020c2c:	jmp    QWORD PTR [rip+0x6056]        # 0x140026c88
   140020c32:	jmp    QWORD PTR [rip+0x6048]        # 0x140026c80
   140020c38:	jmp    QWORD PTR [rip+0x603a]        # 0x140026c78
   140020c3e:	jmp    QWORD PTR [rip+0x602c]        # 0x140026c70
   140020c44:	jmp    QWORD PTR [rip+0x601e]        # 0x140026c68
   140020c4a:	jmp    QWORD PTR [rip+0x6010]        # 0x140026c60
   140020c50:	jmp    QWORD PTR [rip+0x6002]        # 0x140026c58
   140020c56:	jmp    QWORD PTR [rip+0x5ff4]        # 0x140026c50
   140020c5c:	jmp    QWORD PTR [rip+0x5fe6]        # 0x140026c48
   140020c62:	jmp    QWORD PTR [rip+0x5fd8]        # 0x140026c40
   140020c68:	jmp    QWORD PTR [rip+0x5fca]        # 0x140026c38
   140020c6e:	jmp    QWORD PTR [rip+0x5fbc]        # 0x140026c30
   140020c74:	jmp    QWORD PTR [rip+0x5fae]        # 0x140026c28
   140020c7a:	jmp    QWORD PTR [rip+0x5fa0]        # 0x140026c20
   140020c80:	jmp    QWORD PTR [rip+0x5f92]        # 0x140026c18
   140020c86:	jmp    QWORD PTR [rip+0x5f84]        # 0x140026c10
   140020c8c:	jmp    QWORD PTR [rip+0x5f76]        # 0x140026c08
   140020c92:	jmp    QWORD PTR [rip+0x5f68]        # 0x140026c00
   140020c98:	jmp    QWORD PTR [rip+0x5f5a]        # 0x140026bf8
   140020c9e:	jmp    QWORD PTR [rip+0x5f4c]        # 0x140026bf0
   140020ca4:	jmp    QWORD PTR [rip+0x5f3e]        # 0x140026be8
   140020caa:	jmp    QWORD PTR [rip+0x5f30]        # 0x140026be0
   140020cb0:	jmp    QWORD PTR [rip+0x5f22]        # 0x140026bd8
   140020cb6:	jmp    QWORD PTR [rip+0x5f14]        # 0x140026bd0
   140020cbc:	jmp    QWORD PTR [rip+0x5f06]        # 0x140026bc8
   140020cc2:	jmp    QWORD PTR [rip+0x5ef8]        # 0x140026bc0
   140020cc8:	jmp    QWORD PTR [rip+0x5eea]        # 0x140026bb8
   140020cce:	jmp    QWORD PTR [rip+0x5edc]        # 0x140026bb0
   140020cd4:	jmp    QWORD PTR [rip+0x5ece]        # 0x140026ba8
   140020cda:	jmp    QWORD PTR [rip+0x5ec0]        # 0x140026ba0
   140020ce0:	jmp    QWORD PTR [rip+0x5eb2]        # 0x140026b98
   140020ce6:	jmp    QWORD PTR [rip+0x5ea4]        # 0x140026b90
   140020cec:	jmp    QWORD PTR [rip+0x5e96]        # 0x140026b88
   140020cf2:	jmp    QWORD PTR [rip+0x5e88]        # 0x140026b80
   140020cf8:	jmp    QWORD PTR [rip+0x5e7a]        # 0x140026b78
   140020cfe:	jmp    QWORD PTR [rip+0x5e6c]        # 0x140026b70
   140020d04:	jmp    QWORD PTR [rip+0x5e5e]        # 0x140026b68
   140020d0a:	jmp    QWORD PTR [rip+0x5e50]        # 0x140026b60
   140020d10:	jmp    QWORD PTR [rip+0x5e42]        # 0x140026b58
   140020d16:	jmp    QWORD PTR [rip+0x5e34]        # 0x140026b50
   140020d1c:	jmp    QWORD PTR [rip+0x5e26]        # 0x140026b48
   140020d22:	jmp    QWORD PTR [rip+0x5e18]        # 0x140026b40
   140020d28:	jmp    QWORD PTR [rip+0x5e0a]        # 0x140026b38
   140020d2e:	jmp    QWORD PTR [rip+0x5dfc]        # 0x140026b30
   140020d34:	jmp    QWORD PTR [rip+0x5dee]        # 0x140026b28
   140020d3a:	jmp    QWORD PTR [rip+0x5de0]        # 0x140026b20
   140020d40:	jmp    QWORD PTR [rip+0x5dd2]        # 0x140026b18
   140020d46:	jmp    QWORD PTR [rip+0x5dc4]        # 0x140026b10
   140020d4c:	jmp    QWORD PTR [rip+0x5dae]        # 0x140026b00
   140020d52:	jmp    QWORD PTR [rip+0x5da0]        # 0x140026af8
   140020d58:	jmp    QWORD PTR [rip+0x5d92]        # 0x140026af0
   140020d5e:	jmp    QWORD PTR [rip+0x5d84]        # 0x140026ae8
   140020d64:	jmp    QWORD PTR [rip+0x5d76]        # 0x140026ae0
   140020d6a:	jmp    QWORD PTR [rip+0x5d68]        # 0x140026ad8
   140020d70:	jmp    QWORD PTR [rip+0x5d5a]        # 0x140026ad0
   140020d76:	jmp    QWORD PTR [rip+0x5d4c]        # 0x140026ac8
   140020d7c:	jmp    QWORD PTR [rip+0x5d3e]        # 0x140026ac0
   140020d82:	jmp    QWORD PTR [rip+0x5d30]        # 0x140026ab8
   140020d88:	jmp    QWORD PTR [rip+0x5d22]        # 0x140026ab0
   140020d8e:	jmp    QWORD PTR [rip+0x5d14]        # 0x140026aa8
   140020d94:	jmp    QWORD PTR [rip+0x5d06]        # 0x140026aa0
   140020d9a:	jmp    QWORD PTR [rip+0x5cf8]        # 0x140026a98
   140020da0:	jmp    QWORD PTR [rip+0x5cea]        # 0x140026a90
   140020da6:	jmp    QWORD PTR [rip+0x5cdc]        # 0x140026a88
   140020dac:	jmp    QWORD PTR [rip+0x5cce]        # 0x140026a80
   140020db2:	jmp    QWORD PTR [rip+0x5cc0]        # 0x140026a78
   140020db8:	jmp    QWORD PTR [rip+0x5cb2]        # 0x140026a70
   140020dbe:	jmp    QWORD PTR [rip+0x5ca4]        # 0x140026a68
   140020dc4:	jmp    QWORD PTR [rip+0x5c96]        # 0x140026a60
   140020dca:	jmp    QWORD PTR [rip+0x5c88]        # 0x140026a58
   140020dd0:	jmp    QWORD PTR [rip+0x5c7a]        # 0x140026a50
   140020dd6:	jmp    QWORD PTR [rip+0x5c6c]        # 0x140026a48
   140020ddc:	jmp    QWORD PTR [rip+0x5c5e]        # 0x140026a40
   140020de2:	jmp    QWORD PTR [rip+0x5c50]        # 0x140026a38
   140020de8:	jmp    QWORD PTR [rip+0x5c42]        # 0x140026a30
   140020dee:	jmp    QWORD PTR [rip+0x5c34]        # 0x140026a28
   140020df4:	jmp    QWORD PTR [rip+0x5c26]        # 0x140026a20
   140020dfa:	jmp    QWORD PTR [rip+0x5c18]        # 0x140026a18
   140020e00:	jmp    QWORD PTR [rip+0x5c0a]        # 0x140026a10
   140020e06:	jmp    QWORD PTR [rip+0x5bfc]        # 0x140026a08
   140020e0c:	jmp    QWORD PTR [rip+0x5bee]        # 0x140026a00
   140020e12:	jmp    QWORD PTR [rip+0x5be0]        # 0x1400269f8
   140020e18:	jmp    QWORD PTR [rip+0x5bd2]        # 0x1400269f0
   140020e1e:	jmp    QWORD PTR [rip+0x5bc4]        # 0x1400269e8
   140020e24:	jmp    QWORD PTR [rip+0x5bb6]        # 0x1400269e0
   140020e2a:	jmp    QWORD PTR [rip+0x5f98]        # 0x140026dc8
   140020e30:	jmp    QWORD PTR [rip+0x5b9a]        # 0x1400269d0
   140020e36:	jmp    QWORD PTR [rip+0x5b8c]        # 0x1400269c8
   140020e3c:	jmp    QWORD PTR [rip+0x5b7e]        # 0x1400269c0
   140020e42:	jmp    QWORD PTR [rip+0x5b70]        # 0x1400269b8
   140020e48:	jmp    QWORD PTR [rip+0x5b62]        # 0x1400269b0
   140020e4e:	jmp    QWORD PTR [rip+0x5b54]        # 0x1400269a8
   140020e54:	jmp    QWORD PTR [rip+0x5b46]        # 0x1400269a0
   140020e5a:	jmp    QWORD PTR [rip+0x5b38]        # 0x140026998
   140020e60:	jmp    QWORD PTR [rip+0x5b2a]        # 0x140026990
   140020e66:	jmp    QWORD PTR [rip+0x5b1c]        # 0x140026988
   140020e6c:	jmp    QWORD PTR [rip+0x5b0e]        # 0x140026980
   140020e72:	jmp    QWORD PTR [rip+0x5b00]        # 0x140026978
   140020e78:	jmp    QWORD PTR [rip+0x5af2]        # 0x140026970
   140020e7e:	jmp    QWORD PTR [rip+0x5ae4]        # 0x140026968
   140020e84:	jmp    QWORD PTR [rip+0x5ad6]        # 0x140026960
   140020e8a:	jmp    QWORD PTR [rip+0x5ac8]        # 0x140026958
   140020e90:	jmp    QWORD PTR [rip+0x5aba]        # 0x140026950
   140020e96:	jmp    QWORD PTR [rip+0x5aac]        # 0x140026948
   140020e9c:	jmp    QWORD PTR [rip+0x5a9e]        # 0x140026940
   140020ea2:	jmp    QWORD PTR [rip+0x5a90]        # 0x140026938
   140020ea8:	jmp    QWORD PTR [rip+0x5a82]        # 0x140026930
   140020eae:	jmp    QWORD PTR [rip+0x5a74]        # 0x140026928
   140020eb4:	jmp    QWORD PTR [rip+0x5a66]        # 0x140026920
   140020eba:	jmp    QWORD PTR [rip+0x5a58]        # 0x140026918
   140020ec0:	jmp    QWORD PTR [rip+0x5a4a]        # 0x140026910
   140020ec6:	jmp    QWORD PTR [rip+0x5a3c]        # 0x140026908
   140020ecc:	jmp    QWORD PTR [rip+0x5a2e]        # 0x140026900
   140020ed2:	jmp    QWORD PTR [rip+0x5a20]        # 0x1400268f8
   140020ed8:	jmp    QWORD PTR [rip+0x5a12]        # 0x1400268f0
   140020ede:	jmp    QWORD PTR [rip+0x5a04]        # 0x1400268e8
   140020ee4:	jmp    QWORD PTR [rip+0x59f6]        # 0x1400268e0
   140020eea:	jmp    QWORD PTR [rip+0x59e8]        # 0x1400268d8
   140020ef0:	jmp    QWORD PTR [rip+0x59da]        # 0x1400268d0
   140020ef6:	jmp    QWORD PTR [rip+0x59cc]        # 0x1400268c8
   140020efc:	jmp    QWORD PTR [rip+0x59a6]        # 0x1400268a8
   140020f02:	jmp    QWORD PTR [rip+0x5970]        # 0x140026878
   140020f08:	jmp    QWORD PTR [rip+0x5962]        # 0x140026870
   140020f0e:	jmp    QWORD PTR [rip+0x5954]        # 0x140026868
   140020f14:	jmp    QWORD PTR [rip+0x5946]        # 0x140026860
   140020f1a:	jmp    QWORD PTR [rip+0x5930]        # 0x140026850
   140020f20:	jmp    QWORD PTR [rip+0x5922]        # 0x140026848
   140020f26:	jmp    QWORD PTR [rip+0x5914]        # 0x140026840
   140020f2c:	jmp    QWORD PTR [rip+0x5906]        # 0x140026838
   140020f32:	jmp    QWORD PTR [rip+0x58f8]        # 0x140026830
   140020f38:	jmp    QWORD PTR [rip+0x58ea]        # 0x140026828
   140020f3e:	jmp    QWORD PTR [rip+0x58dc]        # 0x140026820
   140020f44:	jmp    QWORD PTR [rip+0x58ae]        # 0x1400267f8
   140020f4a:	jmp    QWORD PTR [rip+0x58a0]        # 0x1400267f0
   140020f50:	jmp    QWORD PTR [rip+0x5892]        # 0x1400267e8
   140020f56:	jmp    QWORD PTR [rip+0x5884]        # 0x1400267e0
   140020f5c:	jmp    QWORD PTR [rip+0x5876]        # 0x1400267d8
   140020f62:	jmp    QWORD PTR [rip+0x5868]        # 0x1400267d0
   140020f68:	jmp    QWORD PTR [rip+0x585a]        # 0x1400267c8
   140020f6e:	jmp    QWORD PTR [rip+0x584c]        # 0x1400267c0
   140020f74:	jmp    QWORD PTR [rip+0x583e]        # 0x1400267b8
   140020f7a:	jmp    QWORD PTR [rip+0x5830]        # 0x1400267b0
   140020f80:	jmp    QWORD PTR [rip+0x5822]        # 0x1400267a8
   140020f86:	jmp    QWORD PTR [rip+0x5814]        # 0x1400267a0
   140020f8c:	jmp    QWORD PTR [rip+0x5806]        # 0x140026798
   140020f92:	jmp    QWORD PTR [rip+0x57f8]        # 0x140026790
   140020f98:	jmp    QWORD PTR [rip+0x57ea]        # 0x140026788
   140020f9e:	jmp    QWORD PTR [rip+0x57dc]        # 0x140026780
   140020fa4:	jmp    QWORD PTR [rip+0x57ce]        # 0x140026778
   140020faa:	jmp    QWORD PTR [rip+0x57c0]        # 0x140026770
   140020fb0:	jmp    QWORD PTR [rip+0x57b2]        # 0x140026768
   140020fb6:	jmp    QWORD PTR [rip+0x57a4]        # 0x140026760
   140020fbc:	jmp    QWORD PTR [rip+0x5796]        # 0x140026758
   140020fc2:	jmp    QWORD PTR [rip+0x5788]        # 0x140026750
   140020fc8:	jmp    QWORD PTR [rip+0x56d2]        # 0x1400266a0
   140020fce:	jmp    QWORD PTR [rip+0x5dfc]        # 0x140026dd0
   140020fd4:	jmp    QWORD PTR [rip+0x59fe]        # 0x1400269d8
   140020fda:	jmp    QWORD PTR [rip+0x5618]        # 0x1400265f8
   140020fe0:	jmp    QWORD PTR [rip+0x561a]        # 0x140026600
   140020fe6:	jmp    QWORD PTR [rip+0x561c]        # 0x140026608
   140020fec:	jmp    QWORD PTR [rip+0x561e]        # 0x140026610
   140020ff2:	jmp    QWORD PTR [rip+0x5620]        # 0x140026618
   140020ff8:	jmp    QWORD PTR [rip+0x5622]        # 0x140026620
   140020ffe:	jmp    QWORD PTR [rip+0x5624]        # 0x140026628
   140021004:	jmp    QWORD PTR [rip+0x5626]        # 0x140026630
   14002100a:	jmp    QWORD PTR [rip+0x5628]        # 0x140026638
   140021010:	jmp    QWORD PTR [rip+0x562a]        # 0x140026640
   140021016:	jmp    QWORD PTR [rip+0x562c]        # 0x140026648
   14002101c:	jmp    QWORD PTR [rip+0x562e]        # 0x140026650
   140021022:	jmp    QWORD PTR [rip+0x5630]        # 0x140026658
   140021028:	jmp    QWORD PTR [rip+0x5632]        # 0x140026660
   14002102e:	jmp    QWORD PTR [rip+0x5634]        # 0x140026668
   140021034:	jmp    QWORD PTR [rip+0x5636]        # 0x140026670
   14002103a:	jmp    QWORD PTR [rip+0x5638]        # 0x140026678
   140021040:	jmp    QWORD PTR [rip+0x563a]        # 0x140026680
   140021046:	jmp    QWORD PTR [rip+0x563c]        # 0x140026688
   14002104c:	jmp    QWORD PTR [rip+0x563e]        # 0x140026690
   140021052:	jmp    QWORD PTR [rip+0x5640]        # 0x140026698
   140021058:	jmp    QWORD PTR [rip+0x5d8a]        # 0x140026de8
   14002105e:	jmp    QWORD PTR [rip+0x5644]        # 0x1400266a8
   140021064:	jmp    QWORD PTR [rip+0x5646]        # 0x1400266b0
   14002106a:	jmp    QWORD PTR [rip+0x5648]        # 0x1400266b8
   140021070:	jmp    QWORD PTR [rip+0x564a]        # 0x1400266c0
   140021076:	jmp    QWORD PTR [rip+0x564c]        # 0x1400266c8
   14002107c:	jmp    QWORD PTR [rip+0x564e]        # 0x1400266d0
   140021082:	jmp    QWORD PTR [rip+0x5650]        # 0x1400266d8
   140021088:	jmp    QWORD PTR [rip+0x5652]        # 0x1400266e0
   14002108e:	jmp    QWORD PTR [rip+0x5654]        # 0x1400266e8
   140021094:	jmp    QWORD PTR [rip+0x5656]        # 0x1400266f0
   14002109a:	jmp    QWORD PTR [rip+0x5658]        # 0x1400266f8
   1400210a0:	jmp    QWORD PTR [rip+0x565a]        # 0x140026700
   1400210a6:	jmp    QWORD PTR [rip+0x5664]        # 0x140026710
   1400210ac:	jmp    QWORD PTR [rip+0x5666]        # 0x140026718
   1400210b2:	jmp    QWORD PTR [rip+0x5668]        # 0x140026720
   1400210b8:	jmp    QWORD PTR [rip+0x566a]        # 0x140026728
   1400210be:	jmp    QWORD PTR [rip+0x566c]        # 0x140026730
   1400210c4:	jmp    QWORD PTR [rip+0x566e]        # 0x140026738
   1400210ca:	jmp    QWORD PTR [rip+0x5670]        # 0x140026740
   1400210d0:	jmp    QWORD PTR [rip+0x5672]        # 0x140026748
   1400210d6:	int3   
   1400210d7:	int3   
   1400210d8:	sub    rsp,0x28
   1400210dc:	cmp    edx,0x1
   1400210df:	jne    0x140021111
   1400210e1:	mov    edx,0x2000
   1400210e6:	xor    ecx,ecx
   1400210e8:	call   QWORD PTR [rip+0x5132]        # 0x140026220
   1400210ee:	test   rax,rax
   1400210f1:	je     0x14002112e
   1400210f3:	mov    rcx,rax
   1400210f6:	call   QWORD PTR [rip+0x5004]        # 0x140026100
   1400210fc:	lea    rcx,[rip+0x1bbad]        # 0x14003ccb0
   140021103:	call   0x140022208
   140021108:	mov    QWORD PTR [rip+0x1bcd1],rax        # 0x14003cde0
   14002110f:	jmp    0x140021129
   140021111:	test   edx,edx
   140021113:	jne    0x140021129
   140021115:	cmp    DWORD PTR [rip+0x1bccd],edx        # 0x14003cde8
   14002111b:	jne    0x140021129
   14002111d:	mov    rcx,QWORD PTR [rip+0x1bcbc]        # 0x14003cde0
   140021124:	call   0x140022208
   140021129:	mov    eax,0x1
   14002112e:	add    rsp,0x28
   140021132:	ret    
   140021133:	int3   
   140021134:	mov    QWORD PTR [rsp+0x8],rbx
   140021139:	push   rdi
   14002113a:	sub    rsp,0x20
   14002113e:	mov    ebx,edx
   140021140:	mov    rdi,rcx
   140021143:	call   0x140022202
   140021148:	test   bl,0x1
   14002114b:	je     0x140021155
   14002114d:	mov    rcx,rdi
   140021150:	call   0x1400221f6
   140021155:	mov    rax,rdi
   140021158:	mov    rbx,QWORD PTR [rsp+0x30]
   14002115d:	add    rsp,0x20
   140021161:	pop    rdi
   140021162:	ret    
   140021163:	int3   
   140021164:	mov    rax,rsp
   140021167:	push   rdi
   140021168:	sub    rsp,0x40
   14002116c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140021174:	mov    QWORD PTR [rax+0x8],rbx
   140021178:	mov    QWORD PTR [rax+0x10],rbp
   14002117c:	mov    QWORD PTR [rax+0x18],rsi
   140021180:	mov    rbx,r9
   140021183:	mov    rdi,r8
   140021186:	mov    esi,edx
   140021188:	mov    rbp,rcx
   14002118b:	call   0x140021bc0
   140021190:	lea    rdx,[rip+0x1bb19]        # 0x14003ccb0
   140021197:	lea    rcx,[rsp+0x28]
   14002119c:	call   0x14002220e
   1400211a1:	nop
   1400211a2:	mov    r9,rbx
   1400211a5:	mov    r8,rdi
   1400211a8:	mov    edx,esi
   1400211aa:	mov    rcx,rbp
   1400211ad:	call   0x14002221a
   1400211b2:	mov    rbx,rax
   1400211b5:	lea    rcx,[rsp+0x28]
   1400211ba:	call   0x140022214
   1400211bf:	mov    rax,rbx
   1400211c2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400211c7:	mov    rbp,QWORD PTR [rsp+0x58]
   1400211cc:	mov    rsi,QWORD PTR [rsp+0x60]
   1400211d1:	add    rsp,0x40
   1400211d5:	pop    rdi
   1400211d6:	ret    
   1400211d7:	int3   
   1400211d8:	sub    rsp,0x28
   1400211dc:	mov    eax,0x5a4d
   1400211e1:	cmp    WORD PTR [rip+0xfffffffffffdee18],ax        # 0x140000000
   1400211e8:	je     0x1400211ee
   1400211ea:	xor    ecx,ecx
   1400211ec:	jmp    0x140021226
   1400211ee:	movsxd rax,DWORD PTR [rip+0xfffffffffffdee47]        # 0x14000003c
   1400211f5:	lea    rcx,[rip+0xfffffffffffdee04]        # 0x140000000
   1400211fc:	add    rax,rcx
   1400211ff:	cmp    DWORD PTR [rax],0x4550
   140021205:	jne    0x1400211ea
   140021207:	mov    ecx,0x20b
   14002120c:	cmp    WORD PTR [rax+0x18],cx
   140021210:	jne    0x1400211ea
   140021212:	xor    ecx,ecx
   140021214:	cmp    DWORD PTR [rax+0x84],0xe
   14002121b:	jbe    0x140021226
   14002121d:	cmp    DWORD PTR [rax+0xf8],ecx
   140021223:	setne  cl
   140021226:	mov    DWORD PTR [rip+0x1bbcc],ecx        # 0x14003cdf8
   14002122c:	mov    ecx,0x2
   140021231:	call   QWORD PTR [rip+0x5229]        # 0x140026460
   140021237:	or     rcx,0xffffffffffffffff
   14002123b:	call   QWORD PTR [rip+0x4fd7]        # 0x140026218
   140021241:	mov    rcx,QWORD PTR [rip+0x51d0]        # 0x140026418
   140021248:	mov    QWORD PTR [rip+0x1c1d9],rax        # 0x14003d428
   14002124f:	mov    QWORD PTR [rip+0x1c1da],rax        # 0x14003d430
   140021256:	mov    eax,DWORD PTR [rip+0x1bbc8]        # 0x14003ce24
   14002125c:	mov    DWORD PTR [rcx],eax
   14002125e:	mov    rdx,QWORD PTR [rip+0x51ab]        # 0x140026410
   140021265:	mov    eax,DWORD PTR [rip+0x1bbad]        # 0x14003ce18
   14002126b:	mov    DWORD PTR [rdx],eax
   14002126d:	call   0x140021bc4
   140021272:	call   0x140021bc0
   140021277:	cmp    DWORD PTR [rip+0x19fe2],0x0        # 0x14003b260
   14002127e:	jne    0x14002128d
   140021280:	lea    rcx,[rip+0x939]        # 0x140021bc0
   140021287:	call   QWORD PTR [rip+0x51ab]        # 0x140026438
   14002128d:	cmp    DWORD PTR [rip+0x19fd0],0xffffffff        # 0x14003b264
   140021294:	jne    0x14002129f
   140021296:	or     ecx,0xffffffff
   140021299:	call   QWORD PTR [rip+0x51a1]        # 0x140026440
   14002129f:	xor    eax,eax
   1400212a1:	add    rsp,0x28
   1400212a5:	ret    
   1400212a6:	int3   
   1400212a7:	int3   
   1400212a8:	sub    rsp,0x38
   1400212ac:	lea    rcx,[rip+0x949]        # 0x140021bfc
   1400212b3:	call   0x1400216c8
   1400212b8:	mov    eax,DWORD PTR [rip+0x1bb62]        # 0x14003ce20
   1400212be:	mov    r9d,DWORD PTR [rip+0x1bb57]        # 0x14003ce1c
   1400212c5:	mov    DWORD PTR [rip+0x1bb49],eax        # 0x14003ce14
   1400212cb:	lea    rax,[rip+0x1bb42]        # 0x14003ce14
   1400212d2:	lea    r8,[rip+0x1bb2f]        # 0x14003ce08
   1400212d9:	lea    rdx,[rip+0x1bb20]        # 0x14003ce00
   1400212e0:	lea    rcx,[rip+0x1bb15]        # 0x14003cdfc
   1400212e7:	mov    QWORD PTR [rsp+0x20],rax
   1400212ec:	call   QWORD PTR [rip+0x5176]        # 0x140026468
   1400212f2:	mov    DWORD PTR [rip+0x1bb18],eax        # 0x14003ce10
   1400212f8:	test   eax,eax
   1400212fa:	jns    0x140021306
   1400212fc:	mov    ecx,0x8
   140021301:	call   0x140021a36
   140021306:	add    rsp,0x38
   14002130a:	ret    
   14002130b:	int3   
   14002130c:	mov    rax,rsp
   14002130f:	mov    QWORD PTR [rax+0x8],rbx
   140021313:	mov    QWORD PTR [rax+0x10],rsi
   140021317:	mov    QWORD PTR [rax+0x18],rdi
   14002131b:	mov    QWORD PTR [rax+0x20],r14
   14002131f:	push   r15
   140021321:	sub    rsp,0x30
   140021325:	xor    r15d,r15d
   140021328:	mov    QWORD PTR [rax-0x10],r15
   14002132c:	mov    DWORD PTR [rax-0x18],r15d
   140021330:	call   QWORD PTR [rip+0x5142]        # 0x140026478
   140021336:	movzx  r14d,ax
   14002133a:	mov    rcx,QWORD PTR gs:0x30
   140021343:	mov    rdx,QWORD PTR [rcx+0x8]
   140021347:	mov    esi,r15d
   14002134a:	xor    eax,eax
   14002134c:	lock cmpxchg QWORD PTR [rip+0x1c0c3],rdx        # 0x14003d418
   140021355:	je     0x140021367
   140021357:	cmp    rax,rdx
   14002135a:	jne    0x140021365
   14002135c:	mov    ebx,0x1
   140021361:	mov    esi,ebx
   140021363:	jmp    0x14002136c
   140021365:	jmp    0x14002134a
   140021367:	mov    ebx,0x1
   14002136c:	mov    eax,DWORD PTR [rip+0x1c0ae]        # 0x14003d420
   140021372:	cmp    eax,ebx
   140021374:	jne    0x140021384
   140021376:	mov    edi,0x1f
   14002137b:	mov    ecx,edi
   14002137d:	call   0x140021a36
   140021382:	jmp    0x1400213c0
   140021384:	mov    eax,DWORD PTR [rip+0x1c096]        # 0x14003d420
   14002138a:	test   eax,eax
   14002138c:	jne    0x1400213b5
   14002138e:	mov    DWORD PTR [rip+0x1c08c],ebx        # 0x14003d420
   140021394:	lea    rdx,[rip+0x5be5]        # 0x140026f80
   14002139b:	lea    rcx,[rip+0x5bbe]        # 0x140026f60
   1400213a2:	call   0x140021c34
   1400213a7:	test   eax,eax
   1400213a9:	je     0x1400213bb
   1400213ab:	mov    eax,0xff
   1400213b0:	jmp    0x1400214eb
   1400213b5:	mov    DWORD PTR [rip+0x1ba35],ebx        # 0x14003cdf0
   1400213bb:	mov    edi,0x1f
   1400213c0:	mov    eax,DWORD PTR [rip+0x1c05a]        # 0x14003d420
   1400213c6:	cmp    eax,ebx
   1400213c8:	jne    0x1400213e7
   1400213ca:	lea    rdx,[rip+0x5b87]        # 0x140026f58
   1400213d1:	lea    rcx,[rip+0x5ab0]        # 0x140026e88
   1400213d8:	call   0x140021c3a
   1400213dd:	mov    DWORD PTR [rip+0x1c039],0x2        # 0x14003d420
   1400213e7:	test   esi,esi
   1400213e9:	jne    0x1400213f5
   1400213eb:	mov    rax,r15
   1400213ee:	xchg   QWORD PTR [rip+0x1c023],rax        # 0x14003d418
   1400213f5:	cmp    QWORD PTR [rip+0x1c03c],r15        # 0x14003d438
   1400213fc:	je     0x140021420
   1400213fe:	lea    rcx,[rip+0x1c033]        # 0x14003d438
   140021405:	call   0x140021a90
   14002140a:	test   eax,eax
   14002140c:	je     0x140021420
   14002140e:	xor    r8d,r8d
   140021411:	lea    edx,[r8+0x2]
   140021415:	xor    ecx,ecx
   140021417:	mov    rax,QWORD PTR [rip+0x1c01a]        # 0x14003d438
   14002141e:	call   rax
   140021420:	mov    rax,QWORD PTR [rip+0x4ff9]        # 0x140026420
   140021427:	mov    rcx,QWORD PTR [rax]
   14002142a:	mov    QWORD PTR [rsp+0x28],rcx
   14002142f:	mov    edx,DWORD PTR [rsp+0x20]
   140021433:	cmp    WORD PTR [rcx],0x20
   140021437:	ja     0x14002149c
   140021439:	cmp    WORD PTR [rcx],r15w
   14002143d:	je     0x140021443
   14002143f:	test   edx,edx
   140021441:	jne    0x14002149c
   140021443:	movzx  eax,WORD PTR [rcx]
   140021446:	sub    ax,bx
   140021449:	cmp    ax,di
   14002144c:	ja     0x140021459
   14002144e:	add    rcx,0x2
   140021452:	mov    QWORD PTR [rsp+0x28],rcx
   140021457:	jmp    0x140021443
   140021459:	movzx  r9d,r14w
   14002145d:	mov    r8,rcx
   140021460:	xor    edx,edx
   140021462:	lea    rcx,[rip+0xfffffffffffdeb97]        # 0x140000000
   140021469:	call   0x14002224c
   14002146e:	mov    DWORD PTR [rip+0x1b980],eax        # 0x14003cdf4
   140021474:	cmp    DWORD PTR [rip+0x1b97d],r15d        # 0x14003cdf8
   14002147b:	jne    0x140021485
   14002147d:	mov    ecx,eax
   14002147f:	call   QWORD PTR [rip+0x4fd3]        # 0x140026458
   140021485:	cmp    DWORD PTR [rip+0x1b964],r15d        # 0x14003cdf0
   14002148c:	jne    0x14002149a
   14002148e:	call   QWORD PTR [rip+0x4fb4]        # 0x140026448
   140021494:	mov    eax,DWORD PTR [rip+0x1b95a]        # 0x14003cdf4
   14002149a:	jmp    0x1400214eb
   14002149c:	cmp    WORD PTR [rcx],0x22
   1400214a0:	jne    0x1400214b0
   1400214a2:	mov    eax,r15d
   1400214a5:	test   edx,edx
   1400214a7:	sete   al
   1400214aa:	mov    edx,eax
   1400214ac:	mov    DWORD PTR [rsp+0x20],eax
   1400214b0:	add    rcx,0x2
   1400214b4:	mov    QWORD PTR [rsp+0x28],rcx
   1400214b9:	jmp    0x140021433
   1400214be:	mov    DWORD PTR [rip+0x1b930],eax        # 0x14003cdf4
   1400214c4:	cmp    DWORD PTR [rip+0x1b92d],0x0        # 0x14003cdf8
   1400214cb:	jne    0x1400214d6
   1400214cd:	mov    ecx,eax
   1400214cf:	call   QWORD PTR [rip+0x4f7b]        # 0x140026450
   1400214d5:	int3   
   1400214d6:	cmp    DWORD PTR [rip+0x1b913],0x0        # 0x14003cdf0
   1400214dd:	jne    0x1400214eb
   1400214df:	call   QWORD PTR [rip+0x4f63]        # 0x140026448
   1400214e5:	mov    eax,DWORD PTR [rip+0x1b909]        # 0x14003cdf4
   1400214eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400214f0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400214f5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400214fa:	mov    r14,QWORD PTR [rsp+0x58]
   1400214ff:	add    rsp,0x30
   140021503:	pop    r15
   140021505:	ret    
   140021506:	int3   
   140021507:	int3   
   140021508:	sub    rsp,0x28
   14002150c:	call   0x140021b10
   140021511:	add    rsp,0x28
   140021515:	jmp    0x14002130c
   14002151a:	int3   
   14002151b:	int3   
   14002151c:	mov    rax,rsp
   14002151f:	mov    QWORD PTR [rax+0x20],r9
   140021523:	mov    DWORD PTR [rax+0x18],r8d
   140021527:	mov    QWORD PTR [rax+0x10],rdx
   14002152b:	push   rbx
   14002152c:	push   rsi
   14002152d:	push   rdi
   14002152e:	push   r14
   140021530:	sub    rsp,0x38
   140021534:	mov    r14,r9
   140021537:	movsxd rdi,r8d
   14002153a:	mov    rsi,rdx
   14002153d:	and    DWORD PTR [rax-0x38],0x0
   140021541:	mov    rbx,rdi
   140021544:	imul   rbx,rdx
   140021548:	add    rbx,rcx
   14002154b:	mov    QWORD PTR [rax+0x8],rbx
   14002154f:	dec    edi
   140021551:	mov    DWORD PTR [rsp+0x70],edi
   140021555:	js     0x140021567
   140021557:	sub    rbx,rsi
   14002155a:	mov    QWORD PTR [rsp+0x60],rbx
   14002155f:	mov    rcx,rbx
   140021562:	call   r14
   140021565:	jmp    0x14002154f
   140021567:	mov    DWORD PTR [rsp+0x20],0x1
   14002156f:	add    rsp,0x38
   140021573:	pop    r14
   140021575:	pop    rdi
   140021576:	pop    rsi
   140021577:	pop    rbx
   140021578:	ret    
   140021579:	int3   
   14002157a:	int3   
   14002157b:	int3   
   14002157c:	mov    QWORD PTR [rsp+0x10],rbx
   140021581:	mov    DWORD PTR [rsp+0x18],r8d
   140021586:	mov    QWORD PTR [rsp+0x8],rcx
   14002158b:	push   rsi
   14002158c:	push   rdi
   14002158d:	push   r14
   14002158f:	sub    rsp,0x40
   140021593:	mov    rsi,r9
   140021596:	mov    edi,r8d
   140021599:	mov    r14,rdx
   14002159c:	mov    rbx,rcx
   14002159f:	dec    edi
   1400215a1:	mov    DWORD PTR [rsp+0x70],edi
   1400215a5:	js     0x1400215b6
   1400215a7:	sub    rbx,r14
   1400215aa:	mov    QWORD PTR [rsp+0x60],rbx
   1400215af:	mov    rcx,rbx
   1400215b2:	call   rsi
   1400215b4:	jmp    0x14002159f
   1400215b6:	jmp    0x1400215b8
   1400215b8:	mov    rbx,QWORD PTR [rsp+0x68]
   1400215bd:	add    rsp,0x40
   1400215c1:	pop    r14
   1400215c3:	pop    rdi
   1400215c4:	pop    rsi
   1400215c5:	ret    
   1400215c6:	int3   
   1400215c7:	int3   
   1400215c8:	rex push rbx
   1400215ca:	sub    rsp,0x20
   1400215ce:	cmp    QWORD PTR [rip+0x1be5a],0x0        # 0x14003d430
   1400215d6:	jne    0x14002160e
   1400215d8:	mov    edx,0x8
   1400215dd:	lea    ecx,[rdx+0x18]
   1400215e0:	call   QWORD PTR [rip+0x4e0a]        # 0x1400263f0
   1400215e6:	mov    rcx,rax
   1400215e9:	mov    rbx,rax
   1400215ec:	call   QWORD PTR [rip+0x4c26]        # 0x140026218
   1400215f2:	mov    QWORD PTR [rip+0x1be37],rax        # 0x14003d430
   1400215f9:	mov    QWORD PTR [rip+0x1be28],rax        # 0x14003d428
   140021600:	test   rbx,rbx
   140021603:	jne    0x14002160a
   140021605:	lea    eax,[rbx+0x18]
   140021608:	jmp    0x140021610
   14002160a:	and    QWORD PTR [rbx],0x0
   14002160e:	xor    eax,eax
   140021610:	add    rsp,0x20
   140021614:	pop    rbx
   140021615:	ret    
   140021616:	int3   
   140021617:	int3   
   140021618:	rex push rbx
   14002161a:	sub    rsp,0x20
   14002161e:	mov    rbx,rcx
   140021621:	mov    rcx,QWORD PTR [rip+0x1be08]        # 0x14003d430
   140021628:	call   QWORD PTR [rip+0x4baa]        # 0x1400261d8
   14002162e:	mov    QWORD PTR [rsp+0x38],rax
   140021633:	cmp    rax,0xffffffffffffffff
   140021637:	jne    0x140021644
   140021639:	mov    rcx,rbx
   14002163c:	call   QWORD PTR [rip+0x4d9e]        # 0x1400263e0
   140021642:	jmp    0x1400216c2
   140021644:	mov    ecx,0x8
   140021649:	call   0x140021c46
   14002164e:	nop
   14002164f:	mov    rcx,QWORD PTR [rip+0x1bdda]        # 0x14003d430
   140021656:	call   QWORD PTR [rip+0x4b7c]        # 0x1400261d8
   14002165c:	mov    QWORD PTR [rsp+0x38],rax
   140021661:	mov    rcx,QWORD PTR [rip+0x1bdc0]        # 0x14003d428
   140021668:	call   QWORD PTR [rip+0x4b6a]        # 0x1400261d8
   14002166e:	mov    QWORD PTR [rsp+0x40],rax
   140021673:	mov    rcx,rbx
   140021676:	call   QWORD PTR [rip+0x4b9c]        # 0x140026218
   14002167c:	mov    rcx,rax
   14002167f:	lea    r8,[rsp+0x40]
   140021684:	lea    rdx,[rsp+0x38]
   140021689:	call   0x140021c52
   14002168e:	mov    rbx,rax
   140021691:	mov    rcx,QWORD PTR [rsp+0x38]
   140021696:	call   QWORD PTR [rip+0x4b7c]        # 0x140026218
   14002169c:	mov    QWORD PTR [rip+0x1bd8d],rax        # 0x14003d430
   1400216a3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400216a8:	call   QWORD PTR [rip+0x4b6a]        # 0x140026218
   1400216ae:	mov    QWORD PTR [rip+0x1bd73],rax        # 0x14003d428
   1400216b5:	mov    ecx,0x8
   1400216ba:	call   0x140021c4c
   1400216bf:	mov    rax,rbx
   1400216c2:	add    rsp,0x20
   1400216c6:	pop    rbx
   1400216c7:	ret    
   1400216c8:	sub    rsp,0x28
   1400216cc:	call   0x140021618
   1400216d1:	neg    rax
   1400216d4:	sbb    eax,eax
   1400216d6:	neg    eax
   1400216d8:	dec    eax
   1400216da:	add    rsp,0x28
   1400216de:	ret    
   1400216df:	int3   
   1400216e0:	jmp    QWORD PTR [rip+0x4bea]        # 0x1400262d0
   1400216e6:	jmp    QWORD PTR [rip+0x4cb4]        # 0x1400263a0
   1400216ec:	jmp    QWORD PTR [rip+0x4c8e]        # 0x140026380
   1400216f2:	int3   
   1400216f3:	int3   
   1400216f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400216f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400216fe:	push   rdi
   1400216ff:	sub    rsp,0x20
   140021703:	mov    esi,edx
   140021705:	mov    rbx,rcx
   140021708:	test   dl,0x2
   14002170b:	je     0x140021738
   14002170d:	lea    rdi,[rcx-0x8]
   140021711:	lea    r9,[rip+0x664]        # 0x140021d7c
   140021718:	mov    edx,0x18
   14002171d:	mov    r8d,DWORD PTR [rdi]
   140021720:	call   0x14002151c
   140021725:	test   sil,0x1
   140021729:	je     0x140021733
   14002172b:	mov    rcx,rdi
   14002172e:	call   0x140020b90
   140021733:	mov    rax,rdi
   140021736:	jmp    0x14002174e
   140021738:	call   0x140021d7c
   14002173d:	test   sil,0x1
   140021741:	je     0x14002174b
   140021743:	mov    rcx,rbx
   140021746:	call   0x140020b90
   14002174b:	mov    rax,rbx
   14002174e:	mov    rbx,QWORD PTR [rsp+0x30]
   140021753:	mov    rsi,QWORD PTR [rsp+0x38]
   140021758:	add    rsp,0x20
   14002175c:	pop    rdi
   14002175d:	ret    
   14002175e:	int3   
   14002175f:	int3   
   140021760:	sub    rsp,0x28
   140021764:	mov    r8,QWORD PTR [r9+0x38]
   140021768:	mov    rcx,rdx
   14002176b:	mov    rdx,r9
   14002176e:	call   0x140021780
   140021773:	mov    eax,0x1
   140021778:	add    rsp,0x28
   14002177c:	ret    
   14002177d:	int3   
   14002177e:	int3   
   14002177f:	int3   
   140021780:	rex push rbx
   140021782:	sub    rsp,0x20
   140021786:	mov    r11d,DWORD PTR [r8]
   140021789:	mov    rbx,rdx
   14002178c:	mov    r9,rcx
   14002178f:	and    r11d,0xfffffff8
   140021793:	test   BYTE PTR [r8],0x4
   140021797:	mov    r10,rcx
   14002179a:	je     0x1400217af
   14002179c:	mov    eax,DWORD PTR [r8+0x8]
   1400217a0:	movsxd r10,DWORD PTR [r8+0x4]
   1400217a4:	neg    eax
   1400217a6:	add    r10,rcx
   1400217a9:	movsxd rcx,eax
   1400217ac:	and    r10,rcx
   1400217af:	movsxd rax,r11d
   1400217b2:	mov    rdx,QWORD PTR [rax+r10*1]
   1400217b6:	mov    rax,QWORD PTR [rbx+0x10]
   1400217ba:	mov    ecx,DWORD PTR [rax+0x8]
   1400217bd:	add    rcx,QWORD PTR [rbx+0x8]
   1400217c1:	test   BYTE PTR [rcx+0x3],0xf
   1400217c5:	je     0x1400217d3
   1400217c7:	movzx  eax,BYTE PTR [rcx+0x3]
   1400217cb:	and    eax,0xfffffff0
   1400217ce:	cdqe   
   1400217d0:	add    r9,rax
   1400217d3:	xor    r9,rdx
   1400217d6:	mov    rcx,r9
   1400217d9:	add    rsp,0x20
   1400217dd:	pop    rbx
   1400217de:	jmp    0x140021890
   1400217e3:	int3   
   1400217e4:	mov    rax,rsp
   1400217e7:	mov    QWORD PTR [rax+0x8],rbx
   1400217eb:	mov    QWORD PTR [rax+0x10],rbp
   1400217ef:	mov    QWORD PTR [rax+0x18],rsi
   1400217f3:	mov    QWORD PTR [rax+0x20],rdi
   1400217f7:	push   r14
   1400217f9:	sub    rsp,0x20
   1400217fd:	mov    rbx,QWORD PTR [r9+0x38]
   140021801:	mov    rsi,rdx
   140021804:	mov    r14,r8
   140021807:	mov    rbp,rcx
   14002180a:	lea    r8,[rbx+0x4]
   14002180e:	mov    rdx,r9
   140021811:	mov    rcx,rsi
   140021814:	mov    rdi,r9
   140021817:	call   0x140021780
   14002181c:	mov    r11d,DWORD PTR [rbx+0x4]
   140021820:	mov    r10d,DWORD PTR [rbp+0x4]
   140021824:	mov    eax,r11d
   140021827:	and    r11d,0x2
   14002182b:	mov    r8d,0x1
   140021831:	and    eax,r8d
   140021834:	and    r10b,0x66
   140021838:	cmove  r11d,eax
   14002183c:	test   r11d,r11d
   14002183f:	je     0x140021855
   140021841:	mov    r9,rdi
   140021844:	mov    r8,r14
   140021847:	mov    rdx,rsi
   14002184a:	mov    rcx,rbp
   14002184d:	call   0x1400216ec
   140021852:	mov    r8d,eax
   140021855:	mov    rbx,QWORD PTR [rsp+0x30]
   14002185a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002185f:	mov    rsi,QWORD PTR [rsp+0x40]
   140021864:	mov    rdi,QWORD PTR [rsp+0x48]
   140021869:	mov    eax,r8d
   14002186c:	add    rsp,0x20
   140021870:	pop    r14
   140021872:	ret    
   140021873:	int3   
   140021874:	int3   
   140021875:	int3   
   140021876:	int3   
   140021877:	int3   
   140021878:	int3   
   140021879:	int3   
   14002187a:	int3   
   14002187b:	int3   
   14002187c:	int3   
   14002187d:	int3   
   14002187e:	int3   
   14002187f:	int3   
   140021880:	int3   
   140021881:	int3   
   140021882:	int3   
   140021883:	int3   
   140021884:	int3   
   140021885:	int3   
   140021886:	data16 nop WORD PTR [rax+rax*1+0x0]
   140021890:	cmp    rcx,QWORD PTR [rip+0x199b9]        # 0x14003b250
   140021897:	jne    0x1400218aa
   140021899:	rol    rcx,0x10
   14002189d:	test   cx,0xffff
   1400218a2:	jne    0x1400218a6
   1400218a4:	repz ret 
   1400218a6:	ror    rcx,0x10
   1400218aa:	jmp    0x140021ca4
   1400218af:	int3   
   1400218b0:	jmp    QWORD PTR [rip+0x4aaa]        # 0x140026360
   1400218b6:	jmp    QWORD PTR [rip+0x4a5c]        # 0x140026318
   1400218bc:	jmp    QWORD PTR [rip+0x4a3e]        # 0x140026300
   1400218c2:	int3   
   1400218c3:	int3   
   1400218c4:	int3   
   1400218c5:	int3   
   1400218c6:	int3   
   1400218c7:	int3   
   1400218c8:	int3   
   1400218c9:	int3   
   1400218ca:	int3   
   1400218cb:	int3   
   1400218cc:	int3   
   1400218cd:	int3   
   1400218ce:	int3   
   1400218cf:	int3   
   1400218d0:	int3   
   1400218d1:	int3   
   1400218d2:	int3   
   1400218d3:	int3   
   1400218d4:	int3   
   1400218d5:	int3   
   1400218d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400218e0:	sub    rsp,0x10
   1400218e4:	mov    QWORD PTR [rsp],r10
   1400218e8:	mov    QWORD PTR [rsp+0x8],r11
   1400218ed:	xor    r11,r11
   1400218f0:	lea    r10,[rsp+0x18]
   1400218f5:	sub    r10,rax
   1400218f8:	cmovb  r10,r11
   1400218fc:	mov    r11,QWORD PTR gs:0x10
   140021905:	cmp    r10,r11
   140021908:	jae    0x140021920
   14002190a:	and    r10w,0xf000
   140021910:	lea    r11,[r11-0x1000]
   140021917:	mov    BYTE PTR [r11],0x0
   14002191b:	cmp    r10,r11
   14002191e:	jne    0x140021910
   140021920:	mov    r10,QWORD PTR [rsp]
   140021924:	mov    r11,QWORD PTR [rsp+0x8]
   140021929:	add    rsp,0x10
   14002192d:	ret    
   14002192e:	jmp    QWORD PTR [rip+0x49c4]        # 0x1400262f8
   140021934:	jmp    QWORD PTR [rip+0x49b6]        # 0x1400262f0
   14002193a:	jmp    QWORD PTR [rip+0x4930]        # 0x140026270
   140021940:	jmp    QWORD PTR [rip+0x4b42]        # 0x140026488
   140021946:	int3   
   140021947:	int3   
   140021948:	mov    rax,rsp
   14002194b:	mov    QWORD PTR [rax+0x8],rbx
   14002194f:	mov    QWORD PTR [rax+0x10],rbp
   140021953:	mov    QWORD PTR [rax+0x18],rsi
   140021957:	mov    QWORD PTR [rax+0x20],rdi
   14002195b:	push   r14
   14002195d:	sub    rsp,0x20
   140021961:	mov    r10,QWORD PTR [r9+0x38]
   140021965:	mov    rsi,rdx
   140021968:	mov    r14,r8
   14002196b:	mov    ebx,DWORD PTR [r10]
   14002196e:	mov    rbp,rcx
   140021971:	mov    rdx,r9
   140021974:	shl    rbx,0x4
   140021978:	mov    rcx,rsi
   14002197b:	mov    rdi,r9
   14002197e:	add    rbx,r10
   140021981:	lea    r8,[rbx+0x4]
   140021985:	call   0x140021780
   14002198a:	mov    r11d,DWORD PTR [rbx+0x4]
   14002198e:	mov    r10d,DWORD PTR [rbp+0x4]
   140021992:	mov    eax,r11d
   140021995:	and    r11d,0x2
   140021999:	mov    edx,0x1
   14002199e:	and    eax,edx
   1400219a0:	and    r10b,0x66
   1400219a4:	cmove  r11d,eax
   1400219a8:	test   r11d,r11d
   1400219ab:	je     0x1400219c0
   1400219ad:	mov    r9,rdi
   1400219b0:	mov    r8,r14
   1400219b3:	mov    rdx,rsi
   1400219b6:	mov    rcx,rbp
   1400219b9:	call   0x140021940
   1400219be:	mov    edx,eax
   1400219c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400219c5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400219ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400219cf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400219d4:	mov    eax,edx
   1400219d6:	add    rsp,0x20
   1400219da:	pop    r14
   1400219dc:	ret    
   1400219dd:	int3   
   1400219de:	int3   
   1400219df:	int3   
   1400219e0:	sub    rsp,0x28
   1400219e4:	mov    rax,QWORD PTR [rcx]
   1400219e7:	cmp    DWORD PTR [rax],0xe06d7363
   1400219ed:	jne    0x140021a0b
   1400219ef:	cmp    DWORD PTR [rax+0x18],0x4
   1400219f3:	jne    0x140021a0b
   1400219f5:	mov    ecx,DWORD PTR [rax+0x20]
   1400219f8:	lea    eax,[rcx-0x19930520]
   1400219fe:	cmp    eax,0x2
   140021a01:	jbe    0x140021a12
   140021a03:	cmp    ecx,0x1994000
   140021a09:	je     0x140021a12
   140021a0b:	xor    eax,eax
   140021a0d:	add    rsp,0x28
   140021a11:	ret    
   140021a12:	call   0x140021c40
   140021a17:	int3   
   140021a18:	sub    rsp,0x28
   140021a1c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x1400219e0
   140021a23:	call   0x140021d76
   140021a28:	xor    eax,eax
   140021a2a:	add    rsp,0x28
   140021a2e:	ret    
   140021a2f:	int3   
   140021a30:	jmp    QWORD PTR [rip+0x4a4a]        # 0x140026480
   140021a36:	jmp    QWORD PTR [rip+0x4a34]        # 0x140026470
   140021a3c:	int3   
   140021a3d:	int3   
   140021a3e:	int3   
   140021a3f:	int3   
   140021a40:	movsxd r8,DWORD PTR [rcx+0x3c]
   140021a44:	xor    r9d,r9d
   140021a47:	mov    r10,rdx
   140021a4a:	add    r8,rcx
   140021a4d:	movzx  eax,WORD PTR [r8+0x14]
   140021a52:	movzx  r11d,WORD PTR [r8+0x6]
   140021a57:	add    rax,0x18
   140021a5b:	add    rax,r8
   140021a5e:	test   r11d,r11d
   140021a61:	je     0x140021a81
   140021a63:	mov    edx,DWORD PTR [rax+0xc]
   140021a66:	cmp    r10,rdx
   140021a69:	jb     0x140021a75
   140021a6b:	mov    ecx,DWORD PTR [rax+0x8]
   140021a6e:	add    ecx,edx
   140021a70:	cmp    r10,rcx
   140021a73:	jb     0x140021a83
   140021a75:	inc    r9d
   140021a78:	add    rax,0x28
   140021a7c:	cmp    r9d,r11d
   140021a7f:	jb     0x140021a63
   140021a81:	xor    eax,eax
   140021a83:	ret    
   140021a84:	int3   
   140021a85:	int3   
   140021a86:	int3   
   140021a87:	int3   
   140021a88:	int3   
   140021a89:	int3   
   140021a8a:	int3   
   140021a8b:	int3   
   140021a8c:	int3   
   140021a8d:	int3   
   140021a8e:	int3   
   140021a8f:	int3   
   140021a90:	mov    QWORD PTR [rsp+0x8],rbx
   140021a95:	push   rdi
   140021a96:	sub    rsp,0x20
   140021a9a:	mov    rbx,rcx
   140021a9d:	lea    rdi,[rip+0xfffffffffffde55c]        # 0x140000000
   140021aa4:	mov    rcx,rdi
   140021aa7:	call   0x140021ae0
   140021aac:	test   eax,eax
   140021aae:	je     0x140021ad2
   140021ab0:	sub    rbx,rdi
   140021ab3:	mov    rdx,rbx
   140021ab6:	mov    rcx,rdi
   140021ab9:	call   0x140021a40
   140021abe:	test   rax,rax
   140021ac1:	je     0x140021ad2
   140021ac3:	mov    eax,DWORD PTR [rax+0x24]
   140021ac6:	shr    eax,0x1f
   140021ac9:	not    eax
   140021acb:	and    eax,0x1
   140021ace:	jmp    0x140021ad2
   140021ad0:	xor    eax,eax
   140021ad2:	mov    rbx,QWORD PTR [rsp+0x30]
   140021ad7:	add    rsp,0x20
   140021adb:	pop    rdi
   140021adc:	ret    
   140021add:	int3   
   140021ade:	int3   
   140021adf:	int3   
   140021ae0:	mov    rax,rcx
   140021ae3:	mov    ecx,0x5a4d
   140021ae8:	cmp    WORD PTR [rax],cx
   140021aeb:	je     0x140021af0
   140021aed:	xor    eax,eax
   140021aef:	ret    
   140021af0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140021af4:	add    rcx,rax
   140021af7:	xor    eax,eax
   140021af9:	cmp    DWORD PTR [rcx],0x4550
   140021aff:	jne    0x140021b0d
   140021b01:	mov    edx,0x20b
   140021b06:	cmp    WORD PTR [rcx+0x18],dx
   140021b0a:	sete   al
   140021b0d:	ret    
   140021b0e:	int3   
   140021b0f:	int3   
   140021b10:	mov    QWORD PTR [rsp+0x20],rbx
   140021b15:	push   rbp
   140021b16:	mov    rbp,rsp
   140021b19:	sub    rsp,0x20
   140021b1d:	mov    rax,QWORD PTR [rip+0x1972c]        # 0x14003b250
   140021b24:	and    QWORD PTR [rbp+0x18],0x0
   140021b29:	movabs rbx,0x2b992ddfa232
   140021b33:	cmp    rax,rbx
   140021b36:	jne    0x140021ba7
   140021b38:	lea    rcx,[rbp+0x18]
   140021b3c:	call   QWORD PTR [rip+0x46b6]        # 0x1400261f8
   140021b42:	mov    rax,QWORD PTR [rbp+0x18]
   140021b46:	mov    QWORD PTR [rbp+0x10],rax
   140021b4a:	call   QWORD PTR [rip+0x46b0]        # 0x140026200
   140021b50:	mov    eax,eax
   140021b52:	xor    QWORD PTR [rbp+0x10],rax
   140021b56:	call   QWORD PTR [rip+0x46ac]        # 0x140026208
   140021b5c:	lea    rcx,[rbp+0x20]
   140021b60:	mov    eax,eax
   140021b62:	xor    QWORD PTR [rbp+0x10],rax
   140021b66:	call   QWORD PTR [rip+0x46a4]        # 0x140026210
   140021b6c:	mov    eax,DWORD PTR [rbp+0x20]
   140021b6f:	shl    rax,0x20
   140021b73:	lea    rcx,[rbp+0x10]
   140021b77:	xor    rax,QWORD PTR [rbp+0x20]
   140021b7b:	xor    rax,QWORD PTR [rbp+0x10]
   140021b7f:	xor    rax,rcx
   140021b82:	movabs rcx,0xffffffffffff
   140021b8c:	and    rax,rcx
   140021b8f:	movabs rcx,0x2b992ddfa233
   140021b99:	cmp    rax,rbx
   140021b9c:	cmove  rax,rcx
   140021ba0:	mov    QWORD PTR [rip+0x196a9],rax        # 0x14003b250
   140021ba7:	mov    rbx,QWORD PTR [rsp+0x48]
   140021bac:	not    rax
   140021baf:	mov    QWORD PTR [rip+0x196a2],rax        # 0x14003b258
   140021bb6:	add    rsp,0x20
   140021bba:	pop    rbp
   140021bbb:	ret    
   140021bbc:	int3   
   140021bbd:	int3   
   140021bbe:	int3   
   140021bbf:	int3   
   140021bc0:	xor    eax,eax
   140021bc2:	ret    
   140021bc3:	int3   
   140021bc4:	mov    QWORD PTR [rsp+0x8],rbx
   140021bc9:	push   rdi
   140021bca:	sub    rsp,0x20
   140021bce:	lea    rbx,[rip+0x10ddb]        # 0x1400329b0
   140021bd5:	lea    rdi,[rip+0x10dd4]        # 0x1400329b0
   140021bdc:	jmp    0x140021bec
   140021bde:	mov    rax,QWORD PTR [rbx]
   140021be1:	test   rax,rax
   140021be4:	je     0x140021be8
   140021be6:	call   rax
   140021be8:	add    rbx,0x8
   140021bec:	cmp    rbx,rdi
   140021bef:	jb     0x140021bde
   140021bf1:	mov    rbx,QWORD PTR [rsp+0x30]
   140021bf6:	add    rsp,0x20
   140021bfa:	pop    rdi
   140021bfb:	ret    
   140021bfc:	mov    QWORD PTR [rsp+0x8],rbx
   140021c01:	push   rdi
   140021c02:	sub    rsp,0x20
   140021c06:	lea    rbx,[rip+0x10db3]        # 0x1400329c0
   140021c0d:	lea    rdi,[rip+0x10dac]        # 0x1400329c0
   140021c14:	jmp    0x140021c24
   140021c16:	mov    rax,QWORD PTR [rbx]
   140021c19:	test   rax,rax
   140021c1c:	je     0x140021c20
   140021c1e:	call   rax
   140021c20:	add    rbx,0x8
   140021c24:	cmp    rbx,rdi
   140021c27:	jb     0x140021c16
   140021c29:	mov    rbx,QWORD PTR [rsp+0x30]
   140021c2e:	add    rsp,0x20
   140021c32:	pop    rdi
   140021c33:	ret    
   140021c34:	jmp    QWORD PTR [rip+0x47f6]        # 0x140026430
   140021c3a:	jmp    QWORD PTR [rip+0x47e8]        # 0x140026428
   140021c40:	jmp    QWORD PTR [rip+0x47c2]        # 0x140026408
   140021c46:	jmp    QWORD PTR [rip+0x47b4]        # 0x140026400
   140021c4c:	jmp    QWORD PTR [rip+0x47a6]        # 0x1400263f8
   140021c52:	jmp    QWORD PTR [rip+0x4790]        # 0x1400263e8
   140021c58:	rex push rbx
   140021c5a:	sub    rsp,0x20
   140021c5e:	mov    rbx,rcx
   140021c61:	call   QWORD PTR [rip+0x4589]        # 0x1400261f0
   140021c67:	mov    ecx,0x1
   140021c6c:	mov    DWORD PTR [rip+0x1b72e],eax        # 0x14003d3a0
   140021c72:	call   0x140021d82
   140021c77:	mov    rcx,rbx
   140021c7a:	call   0x140021d88
   140021c7f:	cmp    DWORD PTR [rip+0x1b71a],0x0        # 0x14003d3a0
   140021c86:	jne    0x140021c92
   140021c88:	mov    ecx,0x1
   140021c8d:	call   0x140021d82
   140021c92:	mov    ecx,0xc0000409
   140021c97:	add    rsp,0x20
   140021c9b:	pop    rbx
   140021c9c:	jmp    0x140021d8e
   140021ca1:	int3   
   140021ca2:	int3   
   140021ca3:	int3   
   140021ca4:	mov    QWORD PTR [rsp+0x8],rcx
   140021ca9:	sub    rsp,0x38
   140021cad:	mov    ecx,0x17
   140021cb2:	call   0x140021d9a
   140021cb7:	test   eax,eax
   140021cb9:	je     0x140021cc2
   140021cbb:	mov    ecx,0x2
   140021cc0:	int    0x29
   140021cc2:	lea    rcx,[rip+0x1b207]        # 0x14003ced0
   140021cc9:	call   0x140021d94
   140021cce:	mov    rax,QWORD PTR [rsp+0x38]
   140021cd3:	mov    QWORD PTR [rip+0x1b2ee],rax        # 0x14003cfc8
   140021cda:	lea    rax,[rsp+0x38]
   140021cdf:	add    rax,0x8
   140021ce3:	mov    QWORD PTR [rip+0x1b27e],rax        # 0x14003cf68
   140021cea:	mov    rax,QWORD PTR [rip+0x1b2d7]        # 0x14003cfc8
   140021cf1:	mov    QWORD PTR [rip+0x1b148],rax        # 0x14003ce40
   140021cf8:	mov    rax,QWORD PTR [rsp+0x40]
   140021cfd:	mov    QWORD PTR [rip+0x1b24c],rax        # 0x14003cf50
   140021d04:	mov    DWORD PTR [rip+0x1b122],0xc0000409        # 0x14003ce30
   140021d0e:	mov    DWORD PTR [rip+0x1b11c],0x1        # 0x14003ce34
   140021d18:	mov    DWORD PTR [rip+0x1b126],0x1        # 0x14003ce48
   140021d22:	mov    eax,0x8
   140021d27:	imul   rax,rax,0x0
   140021d2b:	lea    rcx,[rip+0x1b11e]        # 0x14003ce50
   140021d32:	mov    QWORD PTR [rcx+rax*1],0x2
   140021d3a:	mov    eax,0x8
   140021d3f:	imul   rax,rax,0x0
   140021d43:	mov    rcx,QWORD PTR [rip+0x19506]        # 0x14003b250
   140021d4a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140021d4f:	mov    eax,0x8
   140021d54:	imul   rax,rax,0x1
   140021d58:	mov    rcx,QWORD PTR [rip+0x194f9]        # 0x14003b258
   140021d5f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140021d64:	lea    rcx,[rip+0xfa95]        # 0x140031800
   140021d6b:	call   0x140021c58
   140021d70:	add    rsp,0x38
   140021d74:	ret    
   140021d75:	int3   
   140021d76:	jmp    QWORD PTR [rip+0x465c]        # 0x1400263d8
   140021d7c:	jmp    QWORD PTR [rip+0x464e]        # 0x1400263d0
   140021d82:	jmp    QWORD PTR [rip+0x4640]        # 0x1400263c8
   140021d88:	jmp    QWORD PTR [rip+0x4632]        # 0x1400263c0
   140021d8e:	jmp    QWORD PTR [rip+0x4624]        # 0x1400263b8
   140021d94:	jmp    QWORD PTR [rip+0x4616]        # 0x1400263b0
   140021d9a:	jmp    QWORD PTR [rip+0x4448]        # 0x1400261e8
   140021da0:	jmp    QWORD PTR [rip+0x427a]        # 0x140026020
   140021da6:	int3   
   140021da7:	int3   
   140021da8:	mov    QWORD PTR [rsp+0x8],rbx
   140021dad:	push   rdi
   140021dae:	sub    rsp,0x20
   140021db2:	xor    edx,edx
   140021db4:	mov    rdi,rcx
   140021db7:	lea    r8d,[rdx+0x28]
   140021dbb:	add    rcx,r8
   140021dbe:	call   0x1400216e0
   140021dc3:	and    QWORD PTR [rdi+0x50],0x0
   140021dc8:	and    DWORD PTR [rdi+0x58],0x0
   140021dcc:	and    DWORD PTR [rdi+0x5c],0x0
   140021dd0:	lea    rax,[rip+0xfffffffffffde229]        # 0x140000000
   140021dd7:	lea    rcx,[rdi+0x28]
   140021ddb:	mov    QWORD PTR [rdi+0x10],rax
   140021ddf:	mov    QWORD PTR [rdi+0x8],rax
   140021de3:	lea    rax,[rip+0xfa36]        # 0x140031820
   140021dea:	xor    r8d,r8d
   140021ded:	xor    edx,edx
   140021def:	mov    DWORD PTR [rdi],0x60
   140021df5:	mov    QWORD PTR [rdi+0x20],rax
   140021df9:	mov    DWORD PTR [rdi+0x18],0xc00
   140021e00:	call   0x140001360
   140021e05:	test   eax,eax
   140021e07:	jne    0x140021e3f
   140021e09:	call   QWORD PTR [rip+0x4349]        # 0x140026158
   140021e0f:	movzx  ecx,ax
   140021e12:	or     ecx,0x80070000
   140021e18:	test   eax,eax
   140021e1a:	cmovle ecx,eax
   140021e1d:	test   ecx,ecx
   140021e1f:	jns    0x140021e3f
   140021e21:	call   QWORD PTR [rip+0x43c9]        # 0x1400261f0
   140021e27:	test   eax,eax
   140021e29:	je     0x140021e38
   140021e2b:	lea    rcx,[rip+0xf9fe]        # 0x140031830
   140021e32:	call   QWORD PTR [rip+0x4288]        # 0x1400260c0
   140021e38:	mov    BYTE PTR [rip+0x19975],0x1        # 0x14003b7b4
   140021e3f:	mov    rax,rdi
   140021e42:	mov    rbx,QWORD PTR [rsp+0x30]
   140021e47:	add    rsp,0x20
   140021e4b:	pop    rdi
   140021e4c:	ret    
   140021e4d:	int3   
   140021e4e:	int3   
   140021e4f:	int3   
   140021e50:	rex push rbx
   140021e52:	sub    rsp,0x20
   140021e56:	mov    rbx,rcx
   140021e59:	add    rcx,0x28
   140021e5d:	call   QWORD PTR [rip+0x42e5]        # 0x140026148
   140021e63:	mov    rcx,QWORD PTR [rbx+0x50]
   140021e67:	test   rcx,rcx
   140021e6a:	je     0x140021e76
   140021e6c:	call   0x1400216e6
   140021e71:	and    QWORD PTR [rbx+0x50],0x0
   140021e76:	and    DWORD PTR [rbx+0x58],0x0
   140021e7a:	and    DWORD PTR [rbx+0x5c],0x0
   140021e7e:	add    rsp,0x20
   140021e82:	pop    rbx
   140021e83:	ret    
   140021e84:	int3   
   140021e85:	int3   
   140021e86:	int3   
   140021e87:	int3   
   140021e88:	int3   
   140021e89:	int3   
   140021e8a:	int3   
   140021e8b:	int3   
   140021e8c:	int3   
   140021e8d:	int3   
   140021e8e:	int3   
   140021e8f:	int3   
   140021e90:	xor    edx,edx
   140021e92:	rex.W jmp QWORD PTR [rip+0x193d7]        # 0x14003b270
   140021e99:	int3   
   140021e9a:	int3   
   140021e9b:	int3   
   140021e9c:	int3   
   140021e9d:	int3   
   140021e9e:	int3   
   140021e9f:	int3   
   140021ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140021ea5:	mov    QWORD PTR [rsp+0x18],rsi
   140021eaa:	push   rdi
   140021eab:	sub    rsp,0x20
   140021eaf:	xor    edi,edi
   140021eb1:	mov    rbx,r8
   140021eb4:	mov    r9,rdx
   140021eb7:	mov    esi,ecx
   140021eb9:	mov    QWORD PTR [rsp+0x38],rdi
   140021ebe:	test   rdx,rdx
   140021ec1:	je     0x140021f21
   140021ec3:	mov    rax,QWORD PTR [rdx]
   140021ec6:	lea    r8,[rsp+0x48]
   140021ecb:	lea    rdx,[rip+0xf9e6]        # 0x1400318b8
   140021ed2:	mov    rcx,r9
   140021ed5:	call   QWORD PTR [rax]
   140021ed7:	test   eax,eax
   140021ed9:	js     0x140021f1c
   140021edb:	mov    rcx,QWORD PTR [rsp+0x48]
   140021ee0:	mov    rdx,rbx
   140021ee3:	mov    rax,QWORD PTR [rcx]
   140021ee6:	call   QWORD PTR [rax+0x18]
   140021ee9:	mov    rcx,QWORD PTR [rsp+0x48]
   140021eee:	mov    rdx,QWORD PTR [rcx]
   140021ef1:	mov    ebx,eax
   140021ef3:	call   QWORD PTR [rdx+0x10]
   140021ef6:	test   ebx,ebx
   140021ef8:	jne    0x140021f1c
   140021efa:	lea    rdx,[rsp+0x38]
   140021eff:	xor    ecx,ecx
   140021f01:	call   QWORD PTR [rip+0x45e1]        # 0x1400264e8
   140021f07:	mov    rcx,QWORD PTR [rsp+0x38]
   140021f0c:	test   eax,eax
   140021f0e:	cmovne rcx,rdi
   140021f12:	mov    rdi,rcx
   140021f15:	mov    QWORD PTR [rsp+0x38],rcx
   140021f1a:	jmp    0x140021f21
   140021f1c:	mov    rdi,QWORD PTR [rsp+0x38]
   140021f21:	mov    rdx,rdi
   140021f24:	mov    ecx,esi
   140021f26:	call   QWORD PTR [rip+0x19344]        # 0x14003b270
   140021f2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140021f31:	mov    rsi,QWORD PTR [rsp+0x40]
   140021f36:	add    rsp,0x20
   140021f3a:	pop    rdi
   140021f3b:	ret    
   140021f3c:	int3   
   140021f3d:	int3   
   140021f3e:	int3   
   140021f3f:	int3   
   140021f40:	mov    QWORD PTR [rsp+0x8],rcx
   140021f45:	push   rbp
   140021f46:	push   rdi
   140021f47:	push   r14
   140021f49:	sub    rsp,0x50
   140021f4d:	lea    rbp,[rsp+0x30]
   140021f52:	mov    QWORD PTR [rbp+0x48],rbx
   140021f56:	mov    QWORD PTR [rbp+0x50],rsi
   140021f5a:	mov    rax,QWORD PTR [rip+0x192ef]        # 0x14003b250
   140021f61:	xor    rax,rbp
   140021f64:	mov    QWORD PTR [rbp+0x10],rax
   140021f68:	mov    rsi,rcx
   140021f6b:	test   rcx,rcx
   140021f6e:	jne    0x140021f77
   140021f70:	xor    eax,eax
   140021f72:	jmp    0x1400220a6
   140021f77:	call   QWORD PTR [rip+0x410b]        # 0x140026088
   140021f7d:	lea    r14d,[rax+0x1]
   140021f81:	mov    DWORD PTR [rbp+0x4],r14d
   140021f85:	xor    eax,eax
   140021f87:	mov    DWORD PTR [rsp+0x28],eax
   140021f8b:	mov    QWORD PTR [rsp+0x20],rax
   140021f90:	mov    r9d,r14d
   140021f93:	mov    r8,rsi
   140021f96:	xor    edx,edx
   140021f98:	xor    ecx,ecx
   140021f9a:	call   QWORD PTR [rip+0x40f0]        # 0x140026090
   140021fa0:	movsxd rdi,eax
   140021fa3:	mov    DWORD PTR [rbp+0x0],edi
   140021fa6:	test   eax,eax
   140021fa8:	jne    0x140021fc4
   140021faa:	call   QWORD PTR [rip+0x41a8]        # 0x140026158
   140021fb0:	test   eax,eax
   140021fb2:	jle    0x140021fbc
   140021fb4:	movzx  eax,ax
   140021fb7:	or     eax,0x80070000
   140021fbc:	mov    ecx,eax
   140021fbe:	call   0x140021e90
   140021fc3:	nop
   140021fc4:	cmp    edi,0x1000
   140021fca:	jge    0x140021ffb
   140021fcc:	mov    rax,rdi
   140021fcf:	add    rax,rax
   140021fd2:	lea    rcx,[rax+0xf]
   140021fd6:	cmp    rcx,rax
   140021fd9:	ja     0x140021fe5
   140021fdb:	movabs rcx,0xffffffffffffff0
   140021fe5:	and    rcx,0xfffffffffffffff0
   140021fe9:	mov    rax,rcx
   140021fec:	call   0x1400218e0
   140021ff1:	sub    rsp,rcx
   140021ff4:	lea    rbx,[rsp+0x30]
   140021ff9:	jmp    0x140022009
   140021ffb:	mov    rcx,rdi
   140021ffe:	add    rcx,rcx
   140022001:	call   0x14002192e
   140022006:	mov    rbx,rax
   140022009:	mov    QWORD PTR [rbp+0x8],rbx
   14002200d:	jmp    0x140022020
   14002200f:	xor    ebx,ebx
   140022011:	mov    QWORD PTR [rbp+0x8],rbx
   140022015:	mov    rsi,QWORD PTR [rbp+0x40]
   140022019:	mov    r14d,DWORD PTR [rbp+0x4]
   14002201d:	mov    edi,DWORD PTR [rbp+0x0]
   140022020:	test   rbx,rbx
   140022023:	jne    0x140022030
   140022025:	mov    ecx,0x8007000e
   14002202a:	call   0x140021e90
   14002202f:	int3   
   140022030:	mov    DWORD PTR [rsp+0x28],edi
   140022034:	mov    QWORD PTR [rsp+0x20],rbx
   140022039:	mov    r9d,r14d
   14002203c:	mov    r8,rsi
   14002203f:	xor    edx,edx
   140022041:	xor    ecx,ecx
   140022043:	call   QWORD PTR [rip+0x4047]        # 0x140026090
   140022049:	test   eax,eax
   14002204b:	jne    0x140022077
   14002204d:	cmp    edi,0x1000
   140022053:	jl     0x14002205d
   140022055:	mov    rcx,rbx
   140022058:	call   0x1400216e6
   14002205d:	call   QWORD PTR [rip+0x40f5]        # 0x140026158
   140022063:	test   eax,eax
   140022065:	jle    0x14002206f
   140022067:	movzx  eax,ax
   14002206a:	or     eax,0x80070000
   14002206f:	mov    ecx,eax
   140022071:	call   0x140021e90
   140022076:	int3   
   140022077:	mov    rcx,rbx
   14002207a:	call   QWORD PTR [rip+0x4440]        # 0x1400264c0
   140022080:	mov    rsi,rax
   140022083:	cmp    edi,0x1000
   140022089:	jl     0x140022093
   14002208b:	mov    rcx,rbx
   14002208e:	call   0x1400216e6
   140022093:	test   rsi,rsi
   140022096:	jne    0x1400220a3
   140022098:	mov    ecx,0x8007000e
   14002209d:	call   0x140021e90
   1400220a2:	int3   
   1400220a3:	mov    rax,rsi
   1400220a6:	mov    rcx,QWORD PTR [rbp+0x10]
   1400220aa:	xor    rcx,rbp
   1400220ad:	call   0x140021890
   1400220b2:	mov    rbx,QWORD PTR [rbp+0x48]
   1400220b6:	mov    rsi,QWORD PTR [rbp+0x50]
   1400220ba:	lea    rsp,[rbp+0x20]
   1400220be:	pop    r14
   1400220c0:	pop    rdi
   1400220c1:	pop    rbp
   1400220c2:	ret    
   1400220c3:	int3   
   1400220c4:	int3   
   1400220c5:	int3   
   1400220c6:	int3   
   1400220c7:	int3   
   1400220c8:	int3   
   1400220c9:	int3   
   1400220ca:	int3   
   1400220cb:	int3   
   1400220cc:	int3   
   1400220cd:	int3   
   1400220ce:	int3   
   1400220cf:	int3   
   1400220d0:	rex push rbx
   1400220d2:	sub    rsp,0x20
   1400220d6:	lea    rax,[rip+0xf7eb]        # 0x1400318c8
   1400220dd:	mov    rbx,rcx
   1400220e0:	mov    QWORD PTR [rcx],rax
   1400220e3:	mov    eax,DWORD PTR [rdx+0x8]
   1400220e6:	mov    DWORD PTR [rcx+0x8],eax
   1400220e9:	mov    rax,QWORD PTR [rdx+0x10]
   1400220ed:	mov    QWORD PTR [rcx+0x18],0x0
   1400220f5:	mov    QWORD PTR [rcx+0x10],rax
   1400220f9:	mov    rcx,rax
   1400220fc:	test   rax,rax
   1400220ff:	je     0x140022107
   140022101:	mov    rax,QWORD PTR [rax]
   140022104:	call   QWORD PTR [rax+0x8]
   140022107:	mov    rax,rbx
   14002210a:	add    rsp,0x20
   14002210e:	pop    rbx
   14002210f:	ret    
   140022110:	rex push rbx
   140022112:	sub    rsp,0x20
   140022116:	lea    rax,[rip+0xf7ab]        # 0x1400318c8
   14002211d:	mov    rbx,rcx
   140022120:	mov    QWORD PTR [rcx],rax
   140022123:	mov    rcx,QWORD PTR [rcx+0x10]
   140022127:	test   rcx,rcx
   14002212a:	je     0x140022132
   14002212c:	mov    rax,QWORD PTR [rcx]
   14002212f:	call   QWORD PTR [rax+0x10]
   140022132:	mov    rcx,QWORD PTR [rbx+0x18]
   140022136:	test   rcx,rcx
   140022139:	je     0x140022147
   14002213b:	add    rsp,0x20
   14002213f:	pop    rbx
   140022140:	rex.W jmp QWORD PTR [rip+0x3fb9]        # 0x140026100
   140022147:	add    rsp,0x20
   14002214b:	pop    rbx
   14002214c:	ret    
   14002214d:	int3   
   14002214e:	int3   
   14002214f:	int3   
   140022150:	mov    QWORD PTR [rsp+0x8],rbx
   140022155:	push   rdi
   140022156:	sub    rsp,0x20
   14002215a:	lea    rax,[rip+0xf767]        # 0x1400318c8
   140022161:	mov    rbx,rcx
   140022164:	mov    edi,edx
   140022166:	mov    QWORD PTR [rcx],rax
   140022169:	mov    rcx,QWORD PTR [rcx+0x10]
   14002216d:	test   rcx,rcx
   140022170:	je     0x140022178
   140022172:	mov    rax,QWORD PTR [rcx]
   140022175:	call   QWORD PTR [rax+0x10]
   140022178:	mov    rcx,QWORD PTR [rbx+0x18]
   14002217c:	test   rcx,rcx
   14002217f:	je     0x140022187
   140022181:	call   QWORD PTR [rip+0x3f79]        # 0x140026100
   140022187:	test   dil,0x1
   14002218b:	je     0x140022195
   14002218d:	mov    rcx,rbx
   140022190:	call   0x140020b90
   140022195:	mov    rax,rbx
   140022198:	mov    rbx,QWORD PTR [rsp+0x30]
   14002219d:	add    rsp,0x20
   1400221a1:	pop    rdi
   1400221a2:	ret    
   1400221a3:	int3   
   1400221a4:	int3   
   1400221a5:	int3   
   1400221a6:	int3   
   1400221a7:	int3   
   1400221a8:	int3   
   1400221a9:	int3   
   1400221aa:	int3   
   1400221ab:	int3   
   1400221ac:	int3   
   1400221ad:	int3   
   1400221ae:	int3   
   1400221af:	int3   
   1400221b0:	sub    rsp,0x48
   1400221b4:	lea    rax,[rip+0xf70d]        # 0x1400318c8
   1400221bb:	mov    DWORD PTR [rsp+0x28],ecx
   1400221bf:	mov    QWORD PTR [rsp+0x30],rdx
   1400221c4:	lea    rdx,[rip+0x16685]        # 0x140038850
   1400221cb:	lea    rcx,[rsp+0x20]
   1400221d0:	mov    QWORD PTR [rsp+0x38],0x0
   1400221d9:	mov    QWORD PTR [rsp+0x20],rax
   1400221de:	call   0x14002193a
   1400221e3:	int3   
   1400221e4:	jmp    QWORD PTR [rip+0x43e6]        # 0x1400265d0
   1400221ea:	jmp    QWORD PTR [rip+0x43d8]        # 0x1400265c8
   1400221f0:	jmp    QWORD PTR [rip+0x43e2]        # 0x1400265d8
   1400221f6:	jmp    QWORD PTR [rip+0x4bfc]        # 0x140026df8
   1400221fc:	jmp    QWORD PTR [rip+0x4bfe]        # 0x140026e00
   140022202:	jmp    QWORD PTR [rip+0x4c00]        # 0x140026e08
   140022208:	jmp    QWORD PTR [rip+0x4c02]        # 0x140026e10
   14002220e:	jmp    QWORD PTR [rip+0x4c04]        # 0x140026e18
   140022214:	jmp    QWORD PTR [rip+0x4c06]        # 0x140026e20
   14002221a:	jmp    QWORD PTR [rip+0x4c08]        # 0x140026e28
   140022220:	mov    QWORD PTR [rsp+0x8],rbx
   140022225:	push   rdi
   140022226:	sub    rsp,0x20
   14002222a:	mov    edi,edx
   14002222c:	mov    ebx,ecx
   14002222e:	call   0x140020f62
   140022233:	mov    BYTE PTR [rax+0x28],bl
   140022236:	mov    rbx,QWORD PTR [rsp+0x30]
   14002223b:	mov    DWORD PTR [rax+0x78],edi
   14002223e:	mov    eax,0x1
   140022243:	add    rsp,0x20
   140022247:	pop    rdi
   140022248:	ret    
   140022249:	int3   
   14002224a:	int3   
   14002224b:	int3   
   14002224c:	jmp    0x140022252
   140022251:	int3   
   140022252:	jmp    QWORD PTR [rip+0x4bd8]        # 0x140026e30
   140022258:	int3   
   140022259:	int3   
   14002225a:	int3   
   14002225b:	int3   
   14002225c:	int3   
   14002225d:	int3   
   14002225e:	int3   
   14002225f:	int3   
   140022260:	rex push rbp
   140022262:	sub    rsp,0x20
   140022266:	mov    rbp,rdx
   140022269:	mov    rcx,QWORD PTR [rbp+0x60]
   14002226d:	call   0x140020d10
   140022272:	add    rsp,0x20
   140022276:	pop    rbp
   140022277:	ret    
   140022278:	rex push rbp
   14002227a:	sub    rsp,0x20
   14002227e:	mov    rbp,rdx
   140022281:	mov    rcx,QWORD PTR [rbp+0x60]
   140022285:	add    rcx,0x178
   14002228c:	call   0x1400185e0
   140022291:	add    rsp,0x20
   140022295:	pop    rbp
   140022296:	ret    
   140022297:	rex push rbp
   140022299:	sub    rsp,0x20
   14002229d:	mov    rbp,rdx
   1400222a0:	mov    rcx,QWORD PTR [rbp+0x60]
   1400222a4:	add    rcx,0x298
   1400222ab:	call   0x140002b20
   1400222b0:	add    rsp,0x20
   1400222b4:	pop    rbp
   1400222b5:	ret    
   1400222b6:	rex push rbp
   1400222b8:	sub    rsp,0x20
   1400222bc:	mov    rbp,rdx
   1400222bf:	lea    rcx,[rbp+0x30]
   1400222c3:	call   QWORD PTR [rip+0x4a97]        # 0x140026d60
   1400222c9:	add    rsp,0x20
   1400222cd:	pop    rbp
   1400222ce:	ret    
   1400222cf:	rex push rbp
   1400222d1:	sub    rsp,0x20
   1400222d5:	mov    rbp,rdx
   1400222d8:	mov    rcx,QWORD PTR [rbp+0x50]
   1400222dc:	call   0x140020d10
   1400222e1:	add    rsp,0x20
   1400222e5:	pop    rbp
   1400222e6:	ret    
   1400222e7:	rex push rbp
   1400222e9:	sub    rsp,0x20
   1400222ed:	mov    rbp,rdx
   1400222f0:	mov    rcx,QWORD PTR [rbp+0x50]
   1400222f4:	add    rcx,0x178
   1400222fb:	call   0x1400185e0
   140022300:	add    rsp,0x20
   140022304:	pop    rbp
   140022305:	ret    
   140022306:	rex push rbp
   140022308:	sub    rsp,0x20
   14002230c:	mov    rbp,rdx
   14002230f:	mov    rcx,QWORD PTR [rbp+0x50]
   140022313:	add    rcx,0x298
   14002231a:	call   0x140002b20
   14002231f:	add    rsp,0x20
   140022323:	pop    rbp
   140022324:	ret    
   140022325:	rex push rbp
   140022327:	sub    rsp,0x20
   14002232b:	mov    rbp,rdx
   14002232e:	lea    rcx,[rbp+0x38]
   140022332:	call   QWORD PTR [rip+0x4a28]        # 0x140026d60
   140022338:	add    rsp,0x20
   14002233c:	pop    rbp
   14002233d:	ret    
   14002233e:	rex push rbp
   140022340:	sub    rsp,0x20
   140022344:	mov    rbp,rdx
   140022347:	mov    rcx,QWORD PTR [rbp+0x50]
   14002234b:	call   0x140002ba0
   140022350:	add    rsp,0x20
   140022354:	pop    rbp
   140022355:	ret    
   140022356:	rex push rbp
   140022358:	sub    rsp,0x20
   14002235c:	mov    rbp,rdx
   14002235f:	mov    eax,DWORD PTR [rbp+0x34]
   140022362:	and    eax,0x1
   140022365:	test   eax,eax
   140022367:	je     0x14002237a
   140022369:	and    DWORD PTR [rbp+0x34],0xfffffffe
   14002236d:	lea    rcx,[rbp+0x90]
   140022374:	call   QWORD PTR [rip+0x49e6]        # 0x140026d60
   14002237a:	add    rsp,0x20
   14002237e:	pop    rbp
   14002237f:	ret    
   140022380:	mov    QWORD PTR [rsp+0x10],rdx
   140022385:	push   rbp
   140022386:	sub    rsp,0x30
   14002238a:	mov    rbp,rdx
   14002238d:	lea    rax,[rip+0xfffffffffffdf43e]        # 0x1400017d2
   140022394:	add    rsp,0x30
   140022398:	pop    rbp
   140022399:	ret    
   14002239a:	int3   
   14002239b:	rex push rbp
   14002239d:	sub    rsp,0x20
   1400223a1:	mov    rbp,rdx
   1400223a4:	lea    rcx,[rbp+0x88]
   1400223ab:	call   QWORD PTR [rip+0x49af]        # 0x140026d60
   1400223b1:	add    rsp,0x20
   1400223b5:	pop    rbp
   1400223b6:	ret    
   1400223b7:	rex push rbp
   1400223b9:	sub    rsp,0x20
   1400223bd:	mov    rbp,rdx
   1400223c0:	lea    rcx,[rbp+0xa8]
   1400223c7:	call   0x140020d34
   1400223cc:	add    rsp,0x20
   1400223d0:	pop    rbp
   1400223d1:	ret    
   1400223d2:	rex push rbp
   1400223d4:	sub    rsp,0x20
   1400223d8:	mov    rbp,rdx
   1400223db:	lea    rcx,[rbp+0xc0]
   1400223e2:	call   0x140002b00
   1400223e7:	add    rsp,0x20
   1400223eb:	pop    rbp
   1400223ec:	ret    
   1400223ed:	mov    QWORD PTR [rsp+0x10],rdx
   1400223f2:	push   rbp
   1400223f3:	sub    rsp,0x30
   1400223f7:	mov    rbp,rdx
   1400223fa:	mov    dl,0x1
   1400223fc:	lea    rcx,[rip+0x53cd]        # 0x1400277d0
   140022403:	call   0x140017250
   140022408:	mov    dl,0x1
   14002240a:	xor    ecx,ecx
   14002240c:	call   0x140017250
   140022411:	nop
   140022412:	lea    rax,[rip+0xfffffffffffdf506]        # 0x14000191f
   140022419:	add    rsp,0x30
   14002241d:	pop    rbp
   14002241e:	ret    
   14002241f:	int3   
   140022420:	rex push rbp
   140022422:	sub    rsp,0x20
   140022426:	mov    rbp,rdx
   140022429:	lea    rcx,[rbp+0x30]
   14002242d:	call   QWORD PTR [rip+0x492d]        # 0x140026d60
   140022433:	add    rsp,0x20
   140022437:	pop    rbp
   140022438:	ret    
   140022439:	rex push rbp
   14002243b:	sub    rsp,0x20
   14002243f:	mov    rbp,rdx
   140022442:	lea    rcx,[rbp+0x48]
   140022446:	call   QWORD PTR [rip+0x4914]        # 0x140026d60
   14002244c:	add    rsp,0x20
   140022450:	pop    rbp
   140022451:	ret    
   140022452:	rex push rbp
   140022454:	sub    rsp,0x20
   140022458:	mov    rbp,rdx
   14002245b:	lea    rcx,[rbp+0x40]
   14002245f:	call   QWORD PTR [rip+0x48fb]        # 0x140026d60
   140022465:	add    rsp,0x20
   140022469:	pop    rbp
   14002246a:	ret    
   14002246b:	rex push rbp
   14002246d:	sub    rsp,0x20
   140022471:	mov    rbp,rdx
   140022474:	lea    rcx,[rbp+0x38]
   140022478:	call   QWORD PTR [rip+0x48e2]        # 0x140026d60
   14002247e:	add    rsp,0x20
   140022482:	pop    rbp
   140022483:	ret    
   140022484:	rex push rbp
   140022486:	sub    rsp,0x20
   14002248a:	mov    rbp,rdx
   14002248d:	lea    rcx,[rbp+0x4c0]
   140022494:	call   0x140006980
   140022499:	add    rsp,0x20
   14002249d:	pop    rbp
   14002249e:	ret    
   14002249f:	rex push rbp
   1400224a1:	sub    rsp,0x20
   1400224a5:	mov    rbp,rdx
   1400224a8:	lea    rcx,[rbp+0x1a0]
   1400224af:	call   0x140007f50
   1400224b4:	add    rsp,0x20
   1400224b8:	pop    rbp
   1400224b9:	ret    
   1400224ba:	rex push rbp
   1400224bc:	sub    rsp,0x20
   1400224c0:	mov    rbp,rdx
   1400224c3:	lea    rcx,[rbp+0xa0]
   1400224ca:	call   0x1400035c0
   1400224cf:	add    rsp,0x20
   1400224d3:	pop    rbp
   1400224d4:	ret    
   1400224d5:	rex push rbp
   1400224d7:	sub    rsp,0x20
   1400224db:	mov    rbp,rdx
   1400224de:	lea    rcx,[rbp+0x58]
   1400224e2:	call   QWORD PTR [rip+0x4878]        # 0x140026d60
   1400224e8:	add    rsp,0x20
   1400224ec:	pop    rbp
   1400224ed:	ret    
   1400224ee:	rex push rbp
   1400224f0:	sub    rsp,0x20
   1400224f4:	mov    rbp,rdx
   1400224f7:	lea    rcx,[rbp+0x88]
   1400224fe:	call   0x140020d34
   140022503:	add    rsp,0x20
   140022507:	pop    rbp
   140022508:	ret    
   140022509:	rex push rbp
   14002250b:	sub    rsp,0x20
   14002250f:	mov    rbp,rdx
   140022512:	lea    rcx,[rbp+0x40]
   140022516:	call   0x140007d10
   14002251b:	add    rsp,0x20
   14002251f:	pop    rbp
   140022520:	ret    
   140022521:	rex push rbp
   140022523:	sub    rsp,0x20
   140022527:	mov    rbp,rdx
   14002252a:	lea    rcx,[rbp+0x28]
   14002252e:	call   0x1400055f0
   140022533:	add    rsp,0x20
   140022537:	pop    rbp
   140022538:	ret    
   140022539:	rex push rbp
   14002253b:	sub    rsp,0x20
   14002253f:	mov    rbp,rdx
   140022542:	lea    rcx,[rbp+0x30]
   140022546:	call   QWORD PTR [rip+0x4814]        # 0x140026d60
   14002254c:	add    rsp,0x20
   140022550:	pop    rbp
   140022551:	ret    
   140022552:	rex push rbp
   140022554:	sub    rsp,0x20
   140022558:	mov    rbp,rdx
   14002255b:	lea    rcx,[rbp+0x70]
   14002255f:	call   QWORD PTR [rip+0x47fb]        # 0x140026d60
   140022565:	add    rsp,0x20
   140022569:	pop    rbp
   14002256a:	ret    
   14002256b:	rex push rbp
   14002256d:	sub    rsp,0x20
   140022571:	mov    rbp,rdx
   140022574:	lea    rcx,[rbp+0x40]
   140022578:	call   QWORD PTR [rip+0x47e2]        # 0x140026d60
   14002257e:	add    rsp,0x20
   140022582:	pop    rbp
   140022583:	ret    
   140022584:	rex push rbp
   140022586:	sub    rsp,0x20
   14002258a:	mov    rbp,rdx
   14002258d:	lea    rcx,[rbp+0x68]
   140022591:	call   QWORD PTR [rip+0x47c9]        # 0x140026d60
   140022597:	add    rsp,0x20
   14002259b:	pop    rbp
   14002259c:	ret    
   14002259d:	rex push rbp
   14002259f:	sub    rsp,0x20
   1400225a3:	mov    rbp,rdx
   1400225a6:	lea    rcx,[rbp+0x58]
   1400225aa:	call   QWORD PTR [rip+0x47b0]        # 0x140026d60
   1400225b0:	add    rsp,0x20
   1400225b4:	pop    rbp
   1400225b5:	ret    
   1400225b6:	rex push rbp
   1400225b8:	sub    rsp,0x20
   1400225bc:	mov    rbp,rdx
   1400225bf:	lea    rcx,[rbp+0x28]
   1400225c3:	call   QWORD PTR [rip+0x4797]        # 0x140026d60
   1400225c9:	add    rsp,0x20
   1400225cd:	pop    rbp
   1400225ce:	ret    
   1400225cf:	rex push rbp
   1400225d1:	sub    rsp,0x20
   1400225d5:	mov    rbp,rdx
   1400225d8:	lea    rcx,[rbp+0x60]
   1400225dc:	call   QWORD PTR [rip+0x477e]        # 0x140026d60
   1400225e2:	add    rsp,0x20
   1400225e6:	pop    rbp
   1400225e7:	ret    
   1400225e8:	rex push rbp
   1400225ea:	sub    rsp,0x20
   1400225ee:	mov    rbp,rdx
   1400225f1:	lea    rcx,[rbp+0x38]
   1400225f5:	call   QWORD PTR [rip+0x4765]        # 0x140026d60
   1400225fb:	add    rsp,0x20
   1400225ff:	pop    rbp
   140022600:	ret    
   140022601:	rex push rbp
   140022603:	sub    rsp,0x20
   140022607:	mov    rbp,rdx
   14002260a:	mov    eax,DWORD PTR [rbp+0x20]
   14002260d:	and    eax,0x1
   140022610:	test   eax,eax
   140022612:	je     0x140022622
   140022614:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140022618:	mov    rcx,QWORD PTR [rbp+0x68]
   14002261c:	call   QWORD PTR [rip+0x473e]        # 0x140026d60
   140022622:	add    rsp,0x20
   140022626:	pop    rbp
   140022627:	ret    
   140022628:	rex push rbp
   14002262a:	sub    rsp,0x20
   14002262e:	mov    rbp,rdx
   140022631:	lea    rcx,[rbp+0x38]
   140022635:	call   QWORD PTR [rip+0x4725]        # 0x140026d60
   14002263b:	add    rsp,0x20
   14002263f:	pop    rbp
   140022640:	ret    
   140022641:	rex push rbp
   140022643:	sub    rsp,0x20
   140022647:	mov    rbp,rdx
   14002264a:	mov    eax,DWORD PTR [rbp+0x20]
   14002264d:	and    eax,0x1
   140022650:	test   eax,eax
   140022652:	je     0x140022662
   140022654:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140022658:	mov    rcx,QWORD PTR [rbp+0x68]
   14002265c:	call   QWORD PTR [rip+0x46fe]        # 0x140026d60
   140022662:	add    rsp,0x20
   140022666:	pop    rbp
   140022667:	ret    
   140022668:	int3   
   140022669:	int3   
   14002266a:	int3   
   14002266b:	int3   
   14002266c:	int3   
   14002266d:	int3   
   14002266e:	int3   
   14002266f:	int3   
   140022670:	rex push rbp
   140022672:	sub    rsp,0x20
   140022676:	mov    rbp,rdx
   140022679:	mov    rcx,QWORD PTR [rbp+0x40]
   14002267d:	call   0x140020c38
   140022682:	add    rsp,0x20
   140022686:	pop    rbp
   140022687:	ret    
   140022688:	rex push rbp
   14002268a:	sub    rsp,0x20
   14002268e:	mov    rbp,rdx
   140022691:	mov    rcx,QWORD PTR [rbp+0x40]
   140022695:	add    rcx,0x48
   140022699:	call   QWORD PTR [rip+0x46c1]        # 0x140026d60
   14002269f:	add    rsp,0x20
   1400226a3:	pop    rbp
   1400226a4:	ret    
   1400226a5:	rex push rbp
   1400226a7:	sub    rsp,0x20
   1400226ab:	mov    rbp,rdx
   1400226ae:	mov    rcx,QWORD PTR [rbp+0x40]
   1400226b2:	add    rcx,0x58
   1400226b6:	call   QWORD PTR [rip+0x46a4]        # 0x140026d60
   1400226bc:	add    rsp,0x20
   1400226c0:	pop    rbp
   1400226c1:	ret    
   1400226c2:	rex push rbp
   1400226c4:	sub    rsp,0x20
   1400226c8:	mov    rbp,rdx
   1400226cb:	mov    rcx,QWORD PTR [rbp+0x40]
   1400226cf:	add    rcx,0x60
   1400226d3:	call   QWORD PTR [rip+0x4687]        # 0x140026d60
   1400226d9:	add    rsp,0x20
   1400226dd:	pop    rbp
   1400226de:	ret    
   1400226df:	int3   
   1400226e0:	rex push rbp
   1400226e2:	sub    rsp,0x20
   1400226e6:	mov    rbp,rdx
   1400226e9:	lea    rcx,[rbp+0x38]
   1400226ed:	call   QWORD PTR [rip+0x466d]        # 0x140026d60
   1400226f3:	add    rsp,0x20
   1400226f7:	pop    rbp
   1400226f8:	ret    
   1400226f9:	rex push rbp
   1400226fb:	sub    rsp,0x20
   1400226ff:	mov    rbp,rdx
   140022702:	mov    eax,DWORD PTR [rbp+0x30]
   140022705:	and    eax,0x1
   140022708:	test   eax,eax
   14002270a:	je     0x14002271a
   14002270c:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140022710:	mov    rcx,QWORD PTR [rbp+0x60]
   140022714:	call   QWORD PTR [rip+0x4646]        # 0x140026d60
   14002271a:	add    rsp,0x20
   14002271e:	pop    rbp
   14002271f:	ret    
   140022720:	rex push rbp
   140022722:	sub    rsp,0x20
   140022726:	mov    rbp,rdx
   140022729:	mov    eax,DWORD PTR [rbp+0x20]
   14002272c:	and    eax,0x1
   14002272f:	test   eax,eax
   140022731:	je     0x140022741
   140022733:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140022737:	mov    rcx,QWORD PTR [rbp+0x68]
   14002273b:	call   QWORD PTR [rip+0x461f]        # 0x140026d60
   140022741:	add    rsp,0x20
   140022745:	pop    rbp
   140022746:	ret    
   140022747:	rex push rbp
   140022749:	sub    rsp,0x20
   14002274d:	mov    rbp,rdx
   140022750:	lea    rcx,[rbp+0x30]
   140022754:	call   QWORD PTR [rip+0x4606]        # 0x140026d60
   14002275a:	add    rsp,0x20
   14002275e:	pop    rbp
   14002275f:	ret    
   140022760:	rex push rbp
   140022762:	sub    rsp,0x20
   140022766:	mov    rbp,rdx
   140022769:	lea    rcx,[rbp+0x28]
   14002276d:	call   0x140001340
   140022772:	add    rsp,0x20
   140022776:	pop    rbp
   140022777:	ret    
   140022778:	rex push rbp
   14002277a:	sub    rsp,0x20
   14002277e:	mov    rbp,rdx
   140022781:	lea    rcx,[rbp+0x38]
   140022785:	call   QWORD PTR [rip+0x45d5]        # 0x140026d60
   14002278b:	add    rsp,0x20
   14002278f:	pop    rbp
   140022790:	ret    
   140022791:	rex push rbp
   140022793:	sub    rsp,0x20
   140022797:	mov    rbp,rdx
   14002279a:	lea    rcx,[rbp+0x40]
   14002279e:	call   QWORD PTR [rip+0x45bc]        # 0x140026d60
   1400227a4:	add    rsp,0x20
   1400227a8:	pop    rbp
   1400227a9:	ret    
   1400227aa:	int3   
   1400227ab:	int3   
   1400227ac:	int3   
   1400227ad:	int3   
   1400227ae:	int3   
   1400227af:	int3   
   1400227b0:	rex push rbp
   1400227b2:	sub    rsp,0x20
   1400227b6:	mov    rbp,rdx
   1400227b9:	mov    rcx,QWORD PTR [rbp+0x80]
   1400227c0:	call   0x140020ec6
   1400227c5:	add    rsp,0x20
   1400227c9:	pop    rbp
   1400227ca:	ret    
   1400227cb:	rex push rbp
   1400227cd:	sub    rsp,0x20
   1400227d1:	mov    rbp,rdx
   1400227d4:	mov    rcx,QWORD PTR [rbp+0x40]
   1400227d8:	call   0x140020ec6
   1400227dd:	add    rsp,0x20
   1400227e1:	pop    rbp
   1400227e2:	ret    
   1400227e3:	rex push rbp
   1400227e5:	sub    rsp,0x20
   1400227e9:	mov    rbp,rdx
   1400227ec:	lea    rcx,[rbp+0x90]
   1400227f3:	call   0x140006980
   1400227f8:	add    rsp,0x20
   1400227fc:	pop    rbp
   1400227fd:	ret    
   1400227fe:	rex push rbp
   140022800:	sub    rsp,0x20
   140022804:	mov    rbp,rdx
   140022807:	lea    rcx,[rbp+0x68]
   14002280b:	call   QWORD PTR [rip+0x454f]        # 0x140026d60
   140022811:	add    rsp,0x20
   140022815:	pop    rbp
   140022816:	ret    
   140022817:	rex push rbp
   140022819:	sub    rsp,0x20
   14002281d:	mov    rbp,rdx
   140022820:	lea    rcx,[rbp+0x50]
   140022824:	call   QWORD PTR [rip+0x4536]        # 0x140026d60
   14002282a:	add    rsp,0x20
   14002282e:	pop    rbp
   14002282f:	ret    
   140022830:	rex push rbp
   140022832:	sub    rsp,0x20
   140022836:	mov    rbp,rdx
   140022839:	lea    rcx,[rbp+0x38]
   14002283d:	call   QWORD PTR [rip+0x451d]        # 0x140026d60
   140022843:	add    rsp,0x20
   140022847:	pop    rbp
   140022848:	ret    
   140022849:	rex push rbp
   14002284b:	sub    rsp,0x20
   14002284f:	mov    rbp,rdx
   140022852:	lea    rcx,[rbp+0xb8]
   140022859:	call   QWORD PTR [rip+0x4501]        # 0x140026d60
   14002285f:	add    rsp,0x20
   140022863:	pop    rbp
   140022864:	ret    
   140022865:	rex push rbp
   140022867:	sub    rsp,0x20
   14002286b:	mov    rbp,rdx
   14002286e:	lea    rcx,[rbp+0x70]
   140022872:	call   QWORD PTR [rip+0x44e8]        # 0x140026d60
   140022878:	add    rsp,0x20
   14002287c:	pop    rbp
   14002287d:	ret    
   14002287e:	rex push rbp
   140022880:	sub    rsp,0x20
   140022884:	mov    rbp,rdx
   140022887:	lea    rcx,[rbp+0xa0]
   14002288e:	call   QWORD PTR [rip+0x44cc]        # 0x140026d60
   140022894:	add    rsp,0x20
   140022898:	pop    rbp
   140022899:	ret    
   14002289a:	rex push rbp
   14002289c:	sub    rsp,0x20
   1400228a0:	mov    rbp,rdx
   1400228a3:	lea    rcx,[rbp+0x40]
   1400228a7:	call   QWORD PTR [rip+0x44b3]        # 0x140026d60
   1400228ad:	add    rsp,0x20
   1400228b1:	pop    rbp
   1400228b2:	ret    
   1400228b3:	rex push rbp
   1400228b5:	sub    rsp,0x20
   1400228b9:	mov    rbp,rdx
   1400228bc:	lea    rcx,[rbp+0xd0]
   1400228c3:	call   0x1400051c0
   1400228c8:	add    rsp,0x20
   1400228cc:	pop    rbp
   1400228cd:	ret    
   1400228ce:	rex push rbp
   1400228d0:	sub    rsp,0x20
   1400228d4:	mov    rbp,rdx
   1400228d7:	lea    rcx,[rbp+0x1e0]
   1400228de:	call   0x1400051c0
   1400228e3:	add    rsp,0x20
   1400228e7:	pop    rbp
   1400228e8:	ret    
   1400228e9:	rex push rbp
   1400228eb:	sub    rsp,0x20
   1400228ef:	mov    rbp,rdx
   1400228f2:	lea    rcx,[rbp+0x30]
   1400228f6:	call   QWORD PTR [rip+0x4464]        # 0x140026d60
   1400228fc:	add    rsp,0x20
   140022900:	pop    rbp
   140022901:	ret    
   140022902:	int3   
   140022903:	int3   
   140022904:	int3   
   140022905:	int3   
   140022906:	int3   
   140022907:	int3   
   140022908:	int3   
   140022909:	int3   
   14002290a:	int3   
   14002290b:	int3   
   14002290c:	int3   
   14002290d:	int3   
   14002290e:	int3   
   14002290f:	int3   
   140022910:	rex push rbp
   140022912:	sub    rsp,0x20
   140022916:	mov    rbp,rdx
   140022919:	lea    rcx,[rbp+0x28]
   14002291d:	call   QWORD PTR [rip+0x443d]        # 0x140026d60
   140022923:	add    rsp,0x20
   140022927:	pop    rbp
   140022928:	ret    
   140022929:	rex push rbp
   14002292b:	sub    rsp,0x20
   14002292f:	mov    rbp,rdx
   140022932:	lea    rcx,[rbp+0x30]
   140022936:	call   QWORD PTR [rip+0x4424]        # 0x140026d60
   14002293c:	add    rsp,0x20
   140022940:	pop    rbp
   140022941:	ret    
   140022942:	rex push rbp
   140022944:	sub    rsp,0x20
   140022948:	mov    rbp,rdx
   14002294b:	lea    rcx,[rbp+0x60]
   14002294f:	call   QWORD PTR [rip+0x440b]        # 0x140026d60
   140022955:	add    rsp,0x20
   140022959:	pop    rbp
   14002295a:	ret    
   14002295b:	rex push rbp
   14002295d:	sub    rsp,0x20
   140022961:	mov    rbp,rdx
   140022964:	lea    rcx,[rbp+0x60]
   140022968:	call   QWORD PTR [rip+0x43f2]        # 0x140026d60
   14002296e:	add    rsp,0x20
   140022972:	pop    rbp
   140022973:	ret    
   140022974:	int3   
   140022975:	int3   
   140022976:	int3   
   140022977:	int3   
   140022978:	int3   
   140022979:	int3   
   14002297a:	int3   
   14002297b:	int3   
   14002297c:	int3   
   14002297d:	int3   
   14002297e:	int3   
   14002297f:	int3   
   140022980:	rex push rbp
   140022982:	sub    rsp,0x20
   140022986:	mov    rbp,rdx
   140022989:	mov    rcx,QWORD PTR [rbp+0x40]
   14002298d:	call   0x140020c38
   140022992:	add    rsp,0x20
   140022996:	pop    rbp
   140022997:	ret    
   140022998:	rex push rbp
   14002299a:	sub    rsp,0x20
   14002299e:	mov    rbp,rdx
   1400229a1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400229a5:	add    rcx,0x48
   1400229a9:	call   QWORD PTR [rip+0x43b1]        # 0x140026d60
   1400229af:	add    rsp,0x20
   1400229b3:	pop    rbp
   1400229b4:	ret    
   1400229b5:	rex push rbp
   1400229b7:	sub    rsp,0x20
   1400229bb:	mov    rbp,rdx
   1400229be:	mov    rcx,QWORD PTR [rbp+0x40]
   1400229c2:	add    rcx,0x58
   1400229c6:	call   QWORD PTR [rip+0x4394]        # 0x140026d60
   1400229cc:	add    rsp,0x20
   1400229d0:	pop    rbp
   1400229d1:	ret    
   1400229d2:	rex push rbp
   1400229d4:	sub    rsp,0x20
   1400229d8:	mov    rbp,rdx
   1400229db:	mov    rcx,QWORD PTR [rbp+0x40]
   1400229df:	add    rcx,0x60
   1400229e3:	call   QWORD PTR [rip+0x4377]        # 0x140026d60
   1400229e9:	add    rsp,0x20
   1400229ed:	pop    rbp
   1400229ee:	ret    
   1400229ef:	rex push rbp
   1400229f1:	sub    rsp,0x20
   1400229f5:	mov    rbp,rdx
   1400229f8:	lea    rcx,[rbp+0x28]
   1400229fc:	call   QWORD PTR [rip+0x435e]        # 0x140026d60
   140022a02:	add    rsp,0x20
   140022a06:	pop    rbp
   140022a07:	ret    
   140022a08:	rex push rbp
   140022a0a:	sub    rsp,0x20
   140022a0e:	mov    rbp,rdx
   140022a11:	lea    rcx,[rbp+0x38]
   140022a15:	call   QWORD PTR [rip+0x4345]        # 0x140026d60
   140022a1b:	add    rsp,0x20
   140022a1f:	pop    rbp
   140022a20:	ret    
   140022a21:	rex push rbp
   140022a23:	sub    rsp,0x20
   140022a27:	mov    rbp,rdx
   140022a2a:	lea    rcx,[rbp+0x30]
   140022a2e:	call   QWORD PTR [rip+0x432c]        # 0x140026d60
   140022a34:	add    rsp,0x20
   140022a38:	pop    rbp
   140022a39:	ret    
   140022a3a:	int3   
   140022a3b:	int3   
   140022a3c:	int3   
   140022a3d:	int3   
   140022a3e:	int3   
   140022a3f:	int3   
   140022a40:	rex push rbp
   140022a42:	sub    rsp,0x20
   140022a46:	mov    rbp,rdx
   140022a49:	mov    rcx,QWORD PTR [rbp+0x40]
   140022a4d:	call   0x140020f2c
   140022a52:	add    rsp,0x20
   140022a56:	pop    rbp
   140022a57:	ret    
   140022a58:	rex push rbp
   140022a5a:	sub    rsp,0x20
   140022a5e:	mov    rbp,rdx
   140022a61:	mov    rcx,QWORD PTR [rbp+0x40]
   140022a65:	call   0x140020f2c
   140022a6a:	add    rsp,0x20
   140022a6e:	pop    rbp
   140022a6f:	ret    
   140022a70:	rex push rbp
   140022a72:	sub    rsp,0x20
   140022a76:	mov    rbp,rdx
   140022a79:	lea    rcx,[rbp+0x20]
   140022a7d:	call   QWORD PTR [rip+0x42dd]        # 0x140026d60
   140022a83:	add    rsp,0x20
   140022a87:	pop    rbp
   140022a88:	ret    
   140022a89:	rex push rbp
   140022a8b:	sub    rsp,0x20
   140022a8f:	mov    rbp,rdx
   140022a92:	lea    rcx,[rbp+0x20]
   140022a96:	call   QWORD PTR [rip+0x42c4]        # 0x140026d60
   140022a9c:	add    rsp,0x20
   140022aa0:	pop    rbp
   140022aa1:	ret    
   140022aa2:	rex push rbp
   140022aa4:	sub    rsp,0x20
   140022aa8:	mov    rbp,rdx
   140022aab:	lea    rcx,[rbp+0x40]
   140022aaf:	call   QWORD PTR [rip+0x42ab]        # 0x140026d60
   140022ab5:	add    rsp,0x20
   140022ab9:	pop    rbp
   140022aba:	ret    
   140022abb:	rex push rbp
   140022abd:	sub    rsp,0x20
   140022ac1:	mov    rbp,rdx
   140022ac4:	lea    rcx,[rbp+0x20]
   140022ac8:	call   QWORD PTR [rip+0x4292]        # 0x140026d60
   140022ace:	add    rsp,0x20
   140022ad2:	pop    rbp
   140022ad3:	ret    
   140022ad4:	rex push rbp
   140022ad6:	sub    rsp,0x20
   140022ada:	mov    rbp,rdx
   140022add:	lea    rcx,[rbp+0x20]
   140022ae1:	call   QWORD PTR [rip+0x4279]        # 0x140026d60
   140022ae7:	add    rsp,0x20
   140022aeb:	pop    rbp
   140022aec:	ret    
   140022aed:	rex push rbp
   140022aef:	sub    rsp,0x20
   140022af3:	mov    rbp,rdx
   140022af6:	lea    rcx,[rbp+0x20]
   140022afa:	call   QWORD PTR [rip+0x4260]        # 0x140026d60
   140022b00:	add    rsp,0x20
   140022b04:	pop    rbp
   140022b05:	ret    
   140022b06:	rex push rbp
   140022b08:	sub    rsp,0x20
   140022b0c:	mov    rbp,rdx
   140022b0f:	lea    rcx,[rbp+0x40]
   140022b13:	call   QWORD PTR [rip+0x4247]        # 0x140026d60
   140022b19:	add    rsp,0x20
   140022b1d:	pop    rbp
   140022b1e:	ret    
   140022b1f:	rex push rbp
   140022b21:	sub    rsp,0x20
   140022b25:	mov    rbp,rdx
   140022b28:	lea    rcx,[rbp+0x20]
   140022b2c:	call   QWORD PTR [rip+0x422e]        # 0x140026d60
   140022b32:	add    rsp,0x20
   140022b36:	pop    rbp
   140022b37:	ret    
   140022b38:	rex push rbp
   140022b3a:	sub    rsp,0x20
   140022b3e:	mov    rbp,rdx
   140022b41:	lea    rcx,[rbp+0x40]
   140022b45:	call   QWORD PTR [rip+0x4215]        # 0x140026d60
   140022b4b:	add    rsp,0x20
   140022b4f:	pop    rbp
   140022b50:	ret    
   140022b51:	rex push rbp
   140022b53:	sub    rsp,0x20
   140022b57:	mov    rbp,rdx
   140022b5a:	lea    rcx,[rbp+0x20]
   140022b5e:	call   QWORD PTR [rip+0x41fc]        # 0x140026d60
   140022b64:	add    rsp,0x20
   140022b68:	pop    rbp
   140022b69:	ret    
   140022b6a:	rex push rbp
   140022b6c:	sub    rsp,0x20
   140022b70:	mov    rbp,rdx
   140022b73:	lea    rcx,[rbp+0x40]
   140022b77:	call   QWORD PTR [rip+0x41e3]        # 0x140026d60
   140022b7d:	add    rsp,0x20
   140022b81:	pop    rbp
   140022b82:	ret    
   140022b83:	int3   
   140022b84:	int3   
   140022b85:	int3   
   140022b86:	int3   
   140022b87:	int3   
   140022b88:	int3   
   140022b89:	int3   
   140022b8a:	int3   
   140022b8b:	int3   
   140022b8c:	int3   
   140022b8d:	int3   
   140022b8e:	int3   
   140022b8f:	int3   
   140022b90:	rex push rbp
   140022b92:	sub    rsp,0x20
   140022b96:	mov    rbp,rdx
   140022b99:	mov    rcx,QWORD PTR [rbp+0x40]
   140022b9d:	call   0x140021004
   140022ba2:	add    rsp,0x20
   140022ba6:	pop    rbp
   140022ba7:	ret    
   140022ba8:	rex push rbp
   140022baa:	sub    rsp,0x20
   140022bae:	mov    rbp,rdx
   140022bb1:	mov    rcx,QWORD PTR [rbp+0x40]
   140022bb5:	add    rcx,0x278
   140022bbc:	call   QWORD PTR [rip+0x419e]        # 0x140026d60
   140022bc2:	add    rsp,0x20
   140022bc6:	pop    rbp
   140022bc7:	ret    
   140022bc8:	rex push rbp
   140022bca:	sub    rsp,0x20
   140022bce:	mov    rbp,rdx
   140022bd1:	mov    rcx,QWORD PTR [rbp+0x40]
   140022bd5:	add    rcx,0x288
   140022bdc:	call   0x140005f70
   140022be1:	add    rsp,0x20
   140022be5:	pop    rbp
   140022be6:	ret    
   140022be7:	rex push rbp
   140022be9:	sub    rsp,0x20
   140022bed:	mov    rbp,rdx
   140022bf0:	mov    rcx,QWORD PTR [rbp+0x40]
   140022bf4:	add    rcx,0x2d0
   140022bfb:	call   0x140020f5c
   140022c00:	add    rsp,0x20
   140022c04:	pop    rbp
   140022c05:	ret    
   140022c06:	rex push rbp
   140022c08:	sub    rsp,0x20
   140022c0c:	mov    rbp,rdx
   140022c0f:	mov    rcx,QWORD PTR [rbp+0x40]
   140022c13:	call   0x140021004
   140022c18:	add    rsp,0x20
   140022c1c:	pop    rbp
   140022c1d:	ret    
   140022c1e:	rex push rbp
   140022c20:	sub    rsp,0x20
   140022c24:	mov    rbp,rdx
   140022c27:	mov    rcx,QWORD PTR [rbp+0x40]
   140022c2b:	add    rcx,0x278
   140022c32:	call   QWORD PTR [rip+0x4128]        # 0x140026d60
   140022c38:	add    rsp,0x20
   140022c3c:	pop    rbp
   140022c3d:	ret    
   140022c3e:	rex push rbp
   140022c40:	sub    rsp,0x20
   140022c44:	mov    rbp,rdx
   140022c47:	mov    rcx,QWORD PTR [rbp+0x40]
   140022c4b:	add    rcx,0x288
   140022c52:	call   0x140005f70
   140022c57:	add    rsp,0x20
   140022c5b:	pop    rbp
   140022c5c:	ret    
   140022c5d:	rex push rbp
   140022c5f:	sub    rsp,0x20
   140022c63:	mov    rbp,rdx
   140022c66:	mov    rcx,QWORD PTR [rbp+0x40]
   140022c6a:	add    rcx,0x2d0
   140022c71:	call   0x140020f5c
   140022c76:	add    rsp,0x20
   140022c7a:	pop    rbp
   140022c7b:	ret    
   140022c7c:	rex push rbp
   140022c7e:	sub    rsp,0x20
   140022c82:	mov    rbp,rdx
   140022c85:	lea    rcx,[rbp+0x90]
   140022c8c:	call   0x140001340
   140022c91:	add    rsp,0x20
   140022c95:	pop    rbp
   140022c96:	ret    
   140022c97:	mov    QWORD PTR [rsp+0x10],rdx
   140022c9c:	push   rbp
   140022c9d:	sub    rsp,0x50
   140022ca1:	mov    rbp,rdx
   140022ca4:	mov    DWORD PTR [rbp+0x50],0x80004005
   140022cab:	cmp    QWORD PTR [rbp+0x140],0x0
   140022cb3:	je     0x140022cdb
   140022cb5:	cmp    QWORD PTR [rbp+0x68],0x0
   140022cba:	je     0x140022cdb
   140022cbc:	mov    rax,QWORD PTR [rbp+0x68]
   140022cc0:	mov    QWORD PTR [rbp+0xa0],rax
   140022cc7:	mov    rcx,QWORD PTR [rbp+0xa0]
   140022cce:	call   0x140020b96
   140022cd3:	mov    QWORD PTR [rbp+0x68],0x0
   140022cdb:	lea    rax,[rip+0xfffffffffffe4089]        # 0x140006d6b
   140022ce2:	add    rsp,0x50
   140022ce6:	pop    rbp
   140022ce7:	ret    
   140022ce8:	int3   
   140022ce9:	rex push rbp
   140022ceb:	mov    rbp,rdx
   140022cee:	mov    eax,DWORD PTR [rip+0x18dcc]        # 0x14003bac0
   140022cf4:	and    eax,0xfffffffe
   140022cf7:	mov    DWORD PTR [rip+0x18dc3],eax        # 0x14003bac0
   140022cfd:	pop    rbp
   140022cfe:	ret    
   140022cff:	rex push rbp
   140022d01:	sub    rsp,0x20
   140022d05:	mov    rbp,rdx
   140022d08:	lea    rcx,[rbp+0x30]
   140022d0c:	call   QWORD PTR [rip+0x404e]        # 0x140026d60
   140022d12:	add    rsp,0x20
   140022d16:	pop    rbp
   140022d17:	ret    
   140022d18:	rex push rbp
   140022d1a:	sub    rsp,0x20
   140022d1e:	mov    rbp,rdx
   140022d21:	lea    rcx,[rbp+0x38]
   140022d25:	call   QWORD PTR [rip+0x4035]        # 0x140026d60
   140022d2b:	add    rsp,0x20
   140022d2f:	pop    rbp
   140022d30:	ret    
   140022d31:	rex push rbp
   140022d33:	sub    rsp,0x20
   140022d37:	mov    rbp,rdx
   140022d3a:	lea    rcx,[rbp+0x58]
   140022d3e:	call   QWORD PTR [rip+0x401c]        # 0x140026d60
   140022d44:	add    rsp,0x20
   140022d48:	pop    rbp
   140022d49:	ret    
   140022d4a:	rex push rbp
   140022d4c:	sub    rsp,0x20
   140022d50:	mov    rbp,rdx
   140022d53:	lea    rcx,[rbp+0x20]
   140022d57:	call   0x1400077d0
   140022d5c:	add    rsp,0x20
   140022d60:	pop    rbp
   140022d61:	ret    
   140022d62:	rex push rbp
   140022d64:	sub    rsp,0x20
   140022d68:	mov    rbp,rdx
   140022d6b:	lea    rcx,[rbp+0x28]
   140022d6f:	call   0x140007780
   140022d74:	add    rsp,0x20
   140022d78:	pop    rbp
   140022d79:	ret    
   140022d7a:	rex push rbp
   140022d7c:	sub    rsp,0x20
   140022d80:	mov    rbp,rdx
   140022d83:	lea    rcx,[rbp+0x38]
   140022d87:	call   0x140001340
   140022d8c:	add    rsp,0x20
   140022d90:	pop    rbp
   140022d91:	ret    
   140022d92:	rex push rbp
   140022d94:	sub    rsp,0x20
   140022d98:	mov    rbp,rdx
   140022d9b:	lea    rcx,[rbp+0x20]
   140022d9f:	call   QWORD PTR [rip+0x3fbb]        # 0x140026d60
   140022da5:	add    rsp,0x20
   140022da9:	pop    rbp
   140022daa:	ret    
   140022dab:	int3   
   140022dac:	int3   
   140022dad:	int3   
   140022dae:	int3   
   140022daf:	int3   
   140022db0:	rex push rbp
   140022db2:	sub    rsp,0x20
   140022db6:	mov    rbp,rdx
   140022db9:	mov    rcx,QWORD PTR [rbp+0x40]
   140022dbd:	call   0x14001ea10
   140022dc2:	add    rsp,0x20
   140022dc6:	pop    rbp
   140022dc7:	ret    
   140022dc8:	int3   
   140022dc9:	int3   
   140022dca:	int3   
   140022dcb:	int3   
   140022dcc:	int3   
   140022dcd:	int3   
   140022dce:	int3   
   140022dcf:	int3   
   140022dd0:	rex push rbp
   140022dd2:	sub    rsp,0x20
   140022dd6:	mov    rbp,rdx
   140022dd9:	mov    rcx,QWORD PTR [rbp+0x40]
   140022ddd:	call   0x140006980
   140022de2:	add    rsp,0x20
   140022de6:	pop    rbp
   140022de7:	ret    
   140022de8:	rex push rbp
   140022dea:	sub    rsp,0x20
   140022dee:	mov    rbp,rdx
   140022df1:	mov    rcx,QWORD PTR [rbp+0x40]
   140022df5:	call   0x140006980
   140022dfa:	add    rsp,0x20
   140022dfe:	pop    rbp
   140022dff:	ret    
   140022e00:	rex push rbp
   140022e02:	mov    rbp,rdx
   140022e05:	mov    eax,DWORD PTR [rip+0x18cb9]        # 0x14003bac4
   140022e0b:	and    eax,0xfffffffe
   140022e0e:	mov    DWORD PTR [rip+0x18cb0],eax        # 0x14003bac4
   140022e14:	pop    rbp
   140022e15:	ret    
   140022e16:	int3   
   140022e17:	int3   
   140022e18:	int3   
   140022e19:	int3   
   140022e1a:	int3   
   140022e1b:	int3   
   140022e1c:	int3   
   140022e1d:	int3   
   140022e1e:	int3   
   140022e1f:	int3   
   140022e20:	rex push rbp
   140022e22:	sub    rsp,0x20
   140022e26:	mov    rbp,rdx
   140022e29:	mov    rcx,QWORD PTR [rbp+0x40]
   140022e2d:	call   0x140006980
   140022e32:	add    rsp,0x20
   140022e36:	pop    rbp
   140022e37:	ret    
   140022e38:	rex push rbp
   140022e3a:	sub    rsp,0x20
   140022e3e:	mov    rbp,rdx
   140022e41:	mov    rcx,QWORD PTR [rbp+0x40]
   140022e45:	call   0x140006980
   140022e4a:	add    rsp,0x20
   140022e4e:	pop    rbp
   140022e4f:	ret    
   140022e50:	rex push rbp
   140022e52:	sub    rsp,0x20
   140022e56:	mov    rbp,rdx
   140022e59:	lea    rcx,[rbp+0x20]
   140022e5d:	call   QWORD PTR [rip+0x3efd]        # 0x140026d60
   140022e63:	add    rsp,0x20
   140022e67:	pop    rbp
   140022e68:	ret    
   140022e69:	rex push rbp
   140022e6b:	sub    rsp,0x20
   140022e6f:	mov    rbp,rdx
   140022e72:	lea    rcx,[rbp+0x50]
   140022e76:	call   0x140006980
   140022e7b:	add    rsp,0x20
   140022e7f:	pop    rbp
   140022e80:	ret    
   140022e81:	rex push rbp
   140022e83:	sub    rsp,0x20
   140022e87:	mov    rbp,rdx
   140022e8a:	lea    rcx,[rbp+0x38]
   140022e8e:	call   0x140008570
   140022e93:	add    rsp,0x20
   140022e97:	pop    rbp
   140022e98:	ret    
   140022e99:	rex push rbp
   140022e9b:	sub    rsp,0x20
   140022e9f:	mov    rbp,rdx
   140022ea2:	lea    rcx,[rbp+0x28]
   140022ea6:	call   QWORD PTR [rip+0x3eb4]        # 0x140026d60
   140022eac:	add    rsp,0x20
   140022eb0:	pop    rbp
   140022eb1:	ret    
   140022eb2:	rex push rbp
   140022eb4:	sub    rsp,0x20
   140022eb8:	mov    rbp,rdx
   140022ebb:	lea    rcx,[rbp+0x360]
   140022ec2:	call   0x140006980
   140022ec7:	add    rsp,0x20
   140022ecb:	pop    rbp
   140022ecc:	ret    
   140022ecd:	rex push rbp
   140022ecf:	sub    rsp,0x20
   140022ed3:	mov    rbp,rdx
   140022ed6:	lea    rcx,[rbp+0x50]
   140022eda:	call   0x140006980
   140022edf:	add    rsp,0x20
   140022ee3:	pop    rbp
   140022ee4:	ret    
   140022ee5:	rex push rbp
   140022ee7:	sub    rsp,0x20
   140022eeb:	mov    rbp,rdx
   140022eee:	lea    rcx,[rbp+0x670]
   140022ef5:	call   0x140006980
   140022efa:	add    rsp,0x20
   140022efe:	pop    rbp
   140022eff:	ret    
   140022f00:	rex push rbp
   140022f02:	mov    rbp,rdx
   140022f05:	mov    eax,DWORD PTR [rip+0x18bbd]        # 0x14003bac8
   140022f0b:	and    eax,0xfffffffe
   140022f0e:	mov    DWORD PTR [rip+0x18bb4],eax        # 0x14003bac8
   140022f14:	pop    rbp
   140022f15:	ret    
   140022f16:	int3   
   140022f17:	int3   
   140022f18:	int3   
   140022f19:	int3   
   140022f1a:	int3   
   140022f1b:	int3   
   140022f1c:	int3   
   140022f1d:	int3   
   140022f1e:	int3   
   140022f1f:	int3   
   140022f20:	rex push rbp
   140022f22:	sub    rsp,0x20
   140022f26:	mov    rbp,rdx
   140022f29:	lea    rcx,[rbp+0x38]
   140022f2d:	call   0x140009e60
   140022f32:	add    rsp,0x20
   140022f36:	pop    rbp
   140022f37:	ret    
   140022f38:	rex push rbp
   140022f3a:	sub    rsp,0x20
   140022f3e:	lea    rbp,[rdx+0x40]
   140022f42:	lea    rcx,[rbp+0x60]
   140022f46:	call   0x140009e60
   140022f4b:	add    rsp,0x20
   140022f4f:	pop    rbp
   140022f50:	ret    
   140022f51:	rex push rbp
   140022f53:	sub    rsp,0x20
   140022f57:	lea    rbp,[rdx+0x40]
   140022f5b:	lea    rcx,[rbp+0x70]
   140022f5f:	call   0x140009e60
   140022f64:	add    rsp,0x20
   140022f68:	pop    rbp
   140022f69:	ret    
   140022f6a:	rex push rbp
   140022f6c:	sub    rsp,0x20
   140022f70:	mov    rbp,rdx
   140022f73:	lea    rcx,[rbp+0x38]
   140022f77:	call   0x140009e60
   140022f7c:	add    rsp,0x20
   140022f80:	pop    rbp
   140022f81:	ret    
   140022f82:	rex push rbp
   140022f84:	sub    rsp,0x20
   140022f88:	lea    rbp,[rdx+0x20]
   140022f8c:	lea    rcx,[rbp+0x38]
   140022f90:	call   0x140009e60
   140022f95:	add    rsp,0x20
   140022f99:	pop    rbp
   140022f9a:	ret    
   140022f9b:	rex push rbp
   140022f9d:	sub    rsp,0x20
   140022fa1:	lea    rbp,[rdx+0x20]
   140022fa5:	lea    rcx,[rbp+0x60]
   140022fa9:	call   0x140009e60
   140022fae:	add    rsp,0x20
   140022fb2:	pop    rbp
   140022fb3:	ret    
   140022fb4:	rex push rbp
   140022fb6:	sub    rsp,0x20
   140022fba:	mov    rbp,rdx
   140022fbd:	lea    rcx,[rbp+0x30]
   140022fc1:	call   0x140009e60
   140022fc6:	add    rsp,0x20
   140022fca:	pop    rbp
   140022fcb:	ret    
   140022fcc:	rex push rbp
   140022fce:	sub    rsp,0x20
   140022fd2:	mov    rbp,rdx
   140022fd5:	lea    rcx,[rbp+0x30]
   140022fd9:	call   0x140009e60
   140022fde:	add    rsp,0x20
   140022fe2:	pop    rbp
   140022fe3:	ret    
   140022fe4:	mov    QWORD PTR [rsp+0x10],rdx
   140022fe9:	push   rbp
   140022fea:	sub    rsp,0x20
   140022fee:	mov    rbp,rdx
   140022ff1:	lea    rax,[rip+0xfffffffffffe691a]        # 0x140009912
   140022ff8:	add    rsp,0x20
   140022ffc:	pop    rbp
   140022ffd:	ret    
   140022ffe:	int3   
   140022fff:	int3   
   140023000:	rex push rbp
   140023002:	sub    rsp,0x20
   140023006:	mov    rbp,rdx
   140023009:	lea    rcx,[rbp+0x48]
   14002300d:	call   0x140009e60
   140023012:	add    rsp,0x20
   140023016:	pop    rbp
   140023017:	ret    
   140023018:	rex push rbp
   14002301a:	sub    rsp,0x20
   14002301e:	mov    rbp,rdx
   140023021:	lea    rcx,[rbp+0x30]
   140023025:	call   0x140009e60
   14002302a:	add    rsp,0x20
   14002302e:	pop    rbp
   14002302f:	ret    
   140023030:	rex push rbp
   140023032:	sub    rsp,0x20
   140023036:	mov    rbp,rdx
   140023039:	lea    rcx,[rbp+0x38]
   14002303d:	call   0x140009e60
   140023042:	add    rsp,0x20
   140023046:	pop    rbp
   140023047:	ret    
   140023048:	rex push rbp
   14002304a:	sub    rsp,0x20
   14002304e:	mov    rbp,rdx
   140023051:	mov    eax,DWORD PTR [rbp+0x20]
   140023054:	and    eax,0x1
   140023057:	test   eax,eax
   140023059:	je     0x140023068
   14002305b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002305f:	mov    rcx,QWORD PTR [rbp+0x68]
   140023063:	call   0x140009e60
   140023068:	add    rsp,0x20
   14002306c:	pop    rbp
   14002306d:	ret    
   14002306e:	rex push rbp
   140023070:	sub    rsp,0x20
   140023074:	mov    rbp,rdx
   140023077:	lea    rcx,[rbp+0x40]
   14002307b:	call   0x140009e60
   140023080:	add    rsp,0x20
   140023084:	pop    rbp
   140023085:	ret    
   140023086:	rex push rbp
   140023088:	sub    rsp,0x20
   14002308c:	mov    rbp,rdx
   14002308f:	mov    eax,DWORD PTR [rbp+0x24]
   140023092:	and    eax,0x1
   140023095:	test   eax,eax
   140023097:	je     0x1400230a6
   140023099:	and    DWORD PTR [rbp+0x24],0xfffffffe
   14002309d:	mov    rcx,QWORD PTR [rbp+0x78]
   1400230a1:	call   0x140009e60
   1400230a6:	add    rsp,0x20
   1400230aa:	pop    rbp
   1400230ab:	ret    
   1400230ac:	rex push rbp
   1400230ae:	sub    rsp,0x20
   1400230b2:	mov    rbp,rdx
   1400230b5:	mov    eax,DWORD PTR [rbp+0x20]
   1400230b8:	and    eax,0x1
   1400230bb:	test   eax,eax
   1400230bd:	je     0x1400230cc
   1400230bf:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400230c3:	mov    rcx,QWORD PTR [rbp+0x48]
   1400230c7:	call   0x140009e60
   1400230cc:	add    rsp,0x20
   1400230d0:	pop    rbp
   1400230d1:	ret    
   1400230d2:	rex push rbp
   1400230d4:	sub    rsp,0x20
   1400230d8:	mov    rbp,rdx
   1400230db:	lea    rcx,[rbp+0x38]
   1400230df:	call   0x140009e60
   1400230e4:	add    rsp,0x20
   1400230e8:	pop    rbp
   1400230e9:	ret    
   1400230ea:	rex push rbp
   1400230ec:	sub    rsp,0x20
   1400230f0:	mov    rbp,rdx
   1400230f3:	mov    eax,DWORD PTR [rbp+0x20]
   1400230f6:	and    eax,0x1
   1400230f9:	test   eax,eax
   1400230fb:	je     0x14002310a
   1400230fd:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140023101:	mov    rcx,QWORD PTR [rbp+0x68]
   140023105:	call   0x140009e60
   14002310a:	add    rsp,0x20
   14002310e:	pop    rbp
   14002310f:	ret    
   140023110:	rex push rbp
   140023112:	sub    rsp,0x20
   140023116:	mov    rbp,rdx
   140023119:	lea    rcx,[rbp+0x38]
   14002311d:	call   0x140009e60
   140023122:	add    rsp,0x20
   140023126:	pop    rbp
   140023127:	ret    
   140023128:	rex push rbp
   14002312a:	sub    rsp,0x20
   14002312e:	mov    rbp,rdx
   140023131:	lea    rcx,[rbp+0x38]
   140023135:	call   0x140009e60
   14002313a:	add    rsp,0x20
   14002313e:	pop    rbp
   14002313f:	ret    
   140023140:	rex push rbp
   140023142:	sub    rsp,0x20
   140023146:	mov    rbp,rdx
   140023149:	lea    rcx,[rbp+0x58]
   14002314d:	call   0x140009e60
   140023152:	add    rsp,0x20
   140023156:	pop    rbp
   140023157:	ret    
   140023158:	rex push rbp
   14002315a:	sub    rsp,0x20
   14002315e:	mov    rbp,rdx
   140023161:	lea    rcx,[rbp+0x58]
   140023165:	call   0x140009e60
   14002316a:	add    rsp,0x20
   14002316e:	pop    rbp
   14002316f:	ret    
   140023170:	rex push rbp
   140023172:	sub    rsp,0x20
   140023176:	mov    rbp,rdx
   140023179:	lea    rcx,[rbp+0x58]
   14002317d:	call   0x140009e60
   140023182:	add    rsp,0x20
   140023186:	pop    rbp
   140023187:	ret    
   140023188:	rex push rbp
   14002318a:	sub    rsp,0x20
   14002318e:	mov    rbp,rdx
   140023191:	lea    rcx,[rbp+0x80]
   140023198:	call   0x140009e60
   14002319d:	add    rsp,0x20
   1400231a1:	pop    rbp
   1400231a2:	ret    
   1400231a3:	rex push rbp
   1400231a5:	sub    rsp,0x20
   1400231a9:	mov    rbp,rdx
   1400231ac:	lea    rcx,[rbp+0x50]
   1400231b0:	call   0x140009e60
   1400231b5:	add    rsp,0x20
   1400231b9:	pop    rbp
   1400231ba:	ret    
   1400231bb:	rex push rbp
   1400231bd:	sub    rsp,0x20
   1400231c1:	mov    rbp,rdx
   1400231c4:	lea    rcx,[rbp+0x70]
   1400231c8:	call   0x140009e60
   1400231cd:	add    rsp,0x20
   1400231d1:	pop    rbp
   1400231d2:	ret    
   1400231d3:	rex push rbp
   1400231d5:	sub    rsp,0x20
   1400231d9:	mov    rbp,rdx
   1400231dc:	mov    eax,DWORD PTR [rbp+0x30]
   1400231df:	and    eax,0x1
   1400231e2:	test   eax,eax
   1400231e4:	je     0x1400231f6
   1400231e6:	and    DWORD PTR [rbp+0x30],0xfffffffe
   1400231ea:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400231f1:	call   0x140009e60
   1400231f6:	add    rsp,0x20
   1400231fa:	pop    rbp
   1400231fb:	ret    
   1400231fc:	rex push rbp
   1400231fe:	sub    rsp,0x20
   140023202:	mov    rbp,rdx
   140023205:	lea    rcx,[rbp+0x50]
   140023209:	call   0x140009e60
   14002320e:	add    rsp,0x20
   140023212:	pop    rbp
   140023213:	ret    
   140023214:	rex push rbp
   140023216:	sub    rsp,0x20
   14002321a:	mov    rbp,rdx
   14002321d:	mov    eax,DWORD PTR [rbp+0x38]
   140023220:	and    eax,0x1
   140023223:	test   eax,eax
   140023225:	je     0x140023237
   140023227:	and    DWORD PTR [rbp+0x38],0xfffffffe
   14002322b:	mov    rcx,QWORD PTR [rbp+0x80]
   140023232:	call   0x140009e60
   140023237:	add    rsp,0x20
   14002323b:	pop    rbp
   14002323c:	ret    
   14002323d:	rex push rbp
   14002323f:	sub    rsp,0x20
   140023243:	mov    rbp,rdx
   140023246:	lea    rcx,[rbp+0xa0]
   14002324d:	call   0x140009e60
   140023252:	add    rsp,0x20
   140023256:	pop    rbp
   140023257:	ret    
   140023258:	rex push rbp
   14002325a:	sub    rsp,0x20
   14002325e:	mov    rbp,rdx
   140023261:	lea    rcx,[rbp+0xd8]
   140023268:	call   0x140009e60
   14002326d:	add    rsp,0x20
   140023271:	pop    rbp
   140023272:	ret    
   140023273:	rex push rbp
   140023275:	sub    rsp,0x20
   140023279:	mov    rbp,rdx
   14002327c:	lea    rcx,[rbp+0x70]
   140023280:	call   0x140009e60
   140023285:	add    rsp,0x20
   140023289:	pop    rbp
   14002328a:	ret    
   14002328b:	rex push rbp
   14002328d:	sub    rsp,0x20
   140023291:	mov    rbp,rdx
   140023294:	lea    rcx,[rbp+0xc0]
   14002329b:	call   0x140009e60
   1400232a0:	add    rsp,0x20
   1400232a4:	pop    rbp
   1400232a5:	ret    
   1400232a6:	rex push rbp
   1400232a8:	sub    rsp,0x20
   1400232ac:	mov    rbp,rdx
   1400232af:	lea    rcx,[rbp+0x98]
   1400232b6:	call   0x140009e60
   1400232bb:	add    rsp,0x20
   1400232bf:	pop    rbp
   1400232c0:	ret    
   1400232c1:	rex push rbp
   1400232c3:	sub    rsp,0x20
   1400232c7:	mov    rbp,rdx
   1400232ca:	lea    rcx,[rbp+0x28]
   1400232ce:	call   0x140009e60
   1400232d3:	add    rsp,0x20
   1400232d7:	pop    rbp
   1400232d8:	ret    
   1400232d9:	rex push rbp
   1400232db:	sub    rsp,0x20
   1400232df:	mov    rbp,rdx
   1400232e2:	lea    rcx,[rbp+0x48]
   1400232e6:	call   0x140009e60
   1400232eb:	add    rsp,0x20
   1400232ef:	pop    rbp
   1400232f0:	ret    
   1400232f1:	rex push rbp
   1400232f3:	sub    rsp,0x20
   1400232f7:	mov    rbp,rdx
   1400232fa:	mov    eax,DWORD PTR [rbp+0x24]
   1400232fd:	and    eax,0x1
   140023300:	test   eax,eax
   140023302:	je     0x140023314
   140023304:	and    DWORD PTR [rbp+0x24],0xfffffffe
   140023308:	mov    rcx,QWORD PTR [rbp+0x90]
   14002330f:	call   0x140009e60
   140023314:	add    rsp,0x20
   140023318:	pop    rbp
   140023319:	ret    
   14002331a:	rex push rbp
   14002331c:	sub    rsp,0x20
   140023320:	mov    rbp,rdx
   140023323:	lea    rcx,[rbp+0x48]
   140023327:	call   0x140009e60
   14002332c:	add    rsp,0x20
   140023330:	pop    rbp
   140023331:	ret    
   140023332:	rex push rbp
   140023334:	sub    rsp,0x20
   140023338:	mov    rbp,rdx
   14002333b:	lea    rcx,[rbp+0x60]
   14002333f:	call   0x140009e60
   140023344:	add    rsp,0x20
   140023348:	pop    rbp
   140023349:	ret    
   14002334a:	rex push rbp
   14002334c:	sub    rsp,0x20
   140023350:	mov    rbp,rdx
   140023353:	lea    rcx,[rbp+0x38]
   140023357:	call   0x140009e60
   14002335c:	add    rsp,0x20
   140023360:	pop    rbp
   140023361:	ret    
   140023362:	rex push rbp
   140023364:	sub    rsp,0x20
   140023368:	mov    rbp,rdx
   14002336b:	lea    rcx,[rbp+0x60]
   14002336f:	call   0x140009e60
   140023374:	add    rsp,0x20
   140023378:	pop    rbp
   140023379:	ret    
   14002337a:	rex push rbp
   14002337c:	sub    rsp,0x20
   140023380:	mov    rbp,rdx
   140023383:	lea    rcx,[rbp+0x28]
   140023387:	call   0x140009e60
   14002338c:	add    rsp,0x20
   140023390:	pop    rbp
   140023391:	ret    
   140023392:	rex push rbp
   140023394:	sub    rsp,0x20
   140023398:	mov    rbp,rdx
   14002339b:	lea    rcx,[rbp+0x40]
   14002339f:	call   0x140009e60
   1400233a4:	add    rsp,0x20
   1400233a8:	pop    rbp
   1400233a9:	ret    
   1400233aa:	rex push rbp
   1400233ac:	sub    rsp,0x20
   1400233b0:	mov    rbp,rdx
   1400233b3:	lea    rcx,[rbp+0x58]
   1400233b7:	call   0x140009e60
   1400233bc:	add    rsp,0x20
   1400233c0:	pop    rbp
   1400233c1:	ret    
   1400233c2:	rex push rbp
   1400233c4:	sub    rsp,0x20
   1400233c8:	mov    rbp,rdx
   1400233cb:	lea    rcx,[rbp+0x60]
   1400233cf:	call   0x140009e60
   1400233d4:	add    rsp,0x20
   1400233d8:	pop    rbp
   1400233d9:	ret    
   1400233da:	rex push rbp
   1400233dc:	sub    rsp,0x20
   1400233e0:	mov    rbp,rdx
   1400233e3:	lea    rcx,[rbp+0x78]
   1400233e7:	call   0x140009e60
   1400233ec:	add    rsp,0x20
   1400233f0:	pop    rbp
   1400233f1:	ret    
   1400233f2:	rex push rbp
   1400233f4:	sub    rsp,0x20
   1400233f8:	mov    rbp,rdx
   1400233fb:	lea    rcx,[rbp+0xf8]
   140023402:	call   0x140009e60
   140023407:	add    rsp,0x20
   14002340b:	pop    rbp
   14002340c:	ret    
   14002340d:	rex push rbp
   14002340f:	sub    rsp,0x20
   140023413:	mov    rbp,rdx
   140023416:	lea    rcx,[rbp+0xc8]
   14002341d:	call   0x140009e60
   140023422:	add    rsp,0x20
   140023426:	pop    rbp
   140023427:	ret    
   140023428:	rex push rbp
   14002342a:	sub    rsp,0x20
   14002342e:	mov    rbp,rdx
   140023431:	lea    rcx,[rbp+0x110]
   140023438:	call   0x140009e60
   14002343d:	add    rsp,0x20
   140023441:	pop    rbp
   140023442:	ret    
   140023443:	rex push rbp
   140023445:	sub    rsp,0x20
   140023449:	mov    rbp,rdx
   14002344c:	lea    rcx,[rbp+0x90]
   140023453:	call   0x140009e60
   140023458:	add    rsp,0x20
   14002345c:	pop    rbp
   14002345d:	ret    
   14002345e:	rex push rbp
   140023460:	sub    rsp,0x20
   140023464:	mov    rbp,rdx
   140023467:	lea    rcx,[rbp+0xb0]
   14002346e:	call   0x140009e60
   140023473:	add    rsp,0x20
   140023477:	pop    rbp
   140023478:	ret    
   140023479:	rex push rbp
   14002347b:	sub    rsp,0x20
   14002347f:	mov    rbp,rdx
   140023482:	lea    rcx,[rbp+0xe0]
   140023489:	call   0x140009e60
   14002348e:	add    rsp,0x20
   140023492:	pop    rbp
   140023493:	ret    
   140023494:	rex push rbp
   140023496:	sub    rsp,0x20
   14002349a:	mov    rbp,rdx
   14002349d:	mov    eax,DWORD PTR [rbp+0x48]
   1400234a0:	and    eax,0x1
   1400234a3:	test   eax,eax
   1400234a5:	je     0x1400234b7
   1400234a7:	and    DWORD PTR [rbp+0x48],0xfffffffe
   1400234ab:	mov    rcx,QWORD PTR [rbp+0x2170]
   1400234b2:	call   0x140009e60
   1400234b7:	add    rsp,0x20
   1400234bb:	pop    rbp
   1400234bc:	ret    
   1400234bd:	rex push rbp
   1400234bf:	sub    rsp,0x20
   1400234c3:	mov    rbp,rdx
   1400234c6:	lea    rcx,[rbp+0x50]
   1400234ca:	call   0x140009e60
   1400234cf:	add    rsp,0x20
   1400234d3:	pop    rbp
   1400234d4:	ret    
   1400234d5:	rex push rbp
   1400234d7:	sub    rsp,0x20
   1400234db:	mov    rbp,rdx
   1400234de:	lea    rcx,[rbp+0x38]
   1400234e2:	call   0x140009e60
   1400234e7:	add    rsp,0x20
   1400234eb:	pop    rbp
   1400234ec:	ret    
   1400234ed:	rex push rbp
   1400234ef:	sub    rsp,0x20
   1400234f3:	mov    rbp,rdx
   1400234f6:	lea    rcx,[rbp+0x68]
   1400234fa:	call   0x140009e60
   1400234ff:	add    rsp,0x20
   140023503:	pop    rbp
   140023504:	ret    
   140023505:	rex push rbp
   140023507:	sub    rsp,0x20
   14002350b:	mov    rbp,rdx
   14002350e:	lea    rcx,[rbp+0x80]
   140023515:	call   0x140009e60
   14002351a:	add    rsp,0x20
   14002351e:	pop    rbp
   14002351f:	ret    
   140023520:	rex push rbp
   140023522:	sub    rsp,0x20
   140023526:	mov    rbp,rdx
   140023529:	lea    rcx,[rbp+0xa0]
   140023530:	call   0x140009e60
   140023535:	add    rsp,0x20
   140023539:	pop    rbp
   14002353a:	ret    
   14002353b:	rex push rbp
   14002353d:	sub    rsp,0x20
   140023541:	mov    rbp,rdx
   140023544:	mov    eax,DWORD PTR [rbp+0x20]
   140023547:	and    eax,0x1
   14002354a:	test   eax,eax
   14002354c:	je     0x14002355e
   14002354e:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140023552:	mov    rcx,QWORD PTR [rbp+0xd0]
   140023559:	call   0x140009e60
   14002355e:	add    rsp,0x20
   140023562:	pop    rbp
   140023563:	ret    
   140023564:	rex push rbp
   140023566:	sub    rsp,0x20
   14002356a:	mov    rbp,rdx
   14002356d:	lea    rcx,[rbp+0x68]
   140023571:	call   0x140009e60
   140023576:	add    rsp,0x20
   14002357a:	pop    rbp
   14002357b:	ret    
   14002357c:	rex push rbp
   14002357e:	sub    rsp,0x20
   140023582:	mov    rbp,rdx
   140023585:	lea    rcx,[rbp+0xb8]
   14002358c:	call   0x140009e60
   140023591:	add    rsp,0x20
   140023595:	pop    rbp
   140023596:	ret    
   140023597:	rex push rbp
   140023599:	sub    rsp,0x20
   14002359d:	mov    rbp,rdx
   1400235a0:	lea    rcx,[rbp+0x1a0]
   1400235a7:	call   0x140009e60
   1400235ac:	add    rsp,0x20
   1400235b0:	pop    rbp
   1400235b1:	ret    
   1400235b2:	rex push rbp
   1400235b4:	sub    rsp,0x20
   1400235b8:	mov    rbp,rdx
   1400235bb:	lea    rcx,[rbp+0xe0]
   1400235c2:	call   0x1400077d0
   1400235c7:	add    rsp,0x20
   1400235cb:	pop    rbp
   1400235cc:	ret    
   1400235cd:	rex push rbp
   1400235cf:	sub    rsp,0x20
   1400235d3:	mov    rbp,rdx
   1400235d6:	lea    rcx,[rbp+0x120]
   1400235dd:	call   0x1400077d0
   1400235e2:	add    rsp,0x20
   1400235e6:	pop    rbp
   1400235e7:	ret    
   1400235e8:	rex push rbp
   1400235ea:	sub    rsp,0x20
   1400235ee:	mov    rbp,rdx
   1400235f1:	lea    rcx,[rbp+0x170]
   1400235f8:	call   0x1400077d0
   1400235fd:	add    rsp,0x20
   140023601:	pop    rbp
   140023602:	ret    
   140023603:	rex push rbp
   140023605:	sub    rsp,0x20
   140023609:	mov    rbp,rdx
   14002360c:	lea    rcx,[rbp+0xd8]
   140023613:	call   0x1400077d0
   140023618:	add    rsp,0x20
   14002361c:	pop    rbp
   14002361d:	ret    
   14002361e:	rex push rbp
   140023620:	sub    rsp,0x20
   140023624:	mov    rbp,rdx
   140023627:	lea    rcx,[rbp+0x88]
   14002362e:	call   0x140009e60
   140023633:	add    rsp,0x20
   140023637:	pop    rbp
   140023638:	ret    
   140023639:	rex push rbp
   14002363b:	sub    rsp,0x20
   14002363f:	mov    rbp,rdx
   140023642:	lea    rcx,[rbp+0x118]
   140023649:	call   0x1400077d0
   14002364e:	add    rsp,0x20
   140023652:	pop    rbp
   140023653:	ret    
   140023654:	rex push rbp
   140023656:	sub    rsp,0x20
   14002365a:	mov    rbp,rdx
   14002365d:	lea    rcx,[rbp+0x1b8]
   140023664:	call   0x140009e60
   140023669:	add    rsp,0x20
   14002366d:	pop    rbp
   14002366e:	ret    
   14002366f:	rex push rbp
   140023671:	sub    rsp,0x20
   140023675:	mov    rbp,rdx
   140023678:	lea    rcx,[rbp+0x188]
   14002367f:	call   0x140009e60
   140023684:	add    rsp,0x20
   140023688:	pop    rbp
   140023689:	ret    
   14002368a:	rex push rbp
   14002368c:	sub    rsp,0x20
   140023690:	mov    rbp,rdx
   140023693:	lea    rcx,[rbp+0xb0]
   14002369a:	call   0x140009e60
   14002369f:	add    rsp,0x20
   1400236a3:	pop    rbp
   1400236a4:	ret    
   1400236a5:	rex push rbp
   1400236a7:	sub    rsp,0x20
   1400236ab:	mov    rbp,rdx
   1400236ae:	lea    rcx,[rbp+0x180]
   1400236b5:	call   0x140009e60
   1400236ba:	add    rsp,0x20
   1400236be:	pop    rbp
   1400236bf:	ret    
   1400236c0:	rex push rbp
   1400236c2:	sub    rsp,0x20
   1400236c6:	mov    rbp,rdx
   1400236c9:	lea    rcx,[rbp+0x218]
   1400236d0:	call   0x1400077d0
   1400236d5:	add    rsp,0x20
   1400236d9:	pop    rbp
   1400236da:	ret    
   1400236db:	rex push rbp
   1400236dd:	sub    rsp,0x20
   1400236e1:	mov    rbp,rdx
   1400236e4:	lea    rcx,[rbp+0x1a8]
   1400236eb:	call   0x1400077d0
   1400236f0:	add    rsp,0x20
   1400236f4:	pop    rbp
   1400236f5:	ret    
   1400236f6:	rex push rbp
   1400236f8:	sub    rsp,0x20
   1400236fc:	mov    rbp,rdx
   1400236ff:	lea    rcx,[rbp+0x160]
   140023706:	call   0x1400077d0
   14002370b:	add    rsp,0x20
   14002370f:	pop    rbp
   140023710:	ret    
   140023711:	rex push rbp
   140023713:	sub    rsp,0x20
   140023717:	mov    rbp,rdx
   14002371a:	lea    rcx,[rbp+0xe0]
   140023721:	call   0x140009e60
   140023726:	add    rsp,0x20
   14002372a:	pop    rbp
   14002372b:	ret    
   14002372c:	rex push rbp
   14002372e:	sub    rsp,0x20
   140023732:	mov    rbp,rdx
   140023735:	lea    rcx,[rbp+0xf8]
   14002373c:	call   0x140012bc0
   140023741:	add    rsp,0x20
   140023745:	pop    rbp
   140023746:	ret    
   140023747:	rex push rbp
   140023749:	sub    rsp,0x20
   14002374d:	mov    rbp,rdx
   140023750:	lea    rcx,[rbp+0x210]
   140023757:	call   0x1400077d0
   14002375c:	add    rsp,0x20
   140023760:	pop    rbp
   140023761:	ret    
   140023762:	rex push rbp
   140023764:	sub    rsp,0x20
   140023768:	mov    rbp,rdx
   14002376b:	lea    rcx,[rbp+0x200]
   140023772:	call   0x1400077d0
   140023777:	add    rsp,0x20
   14002377b:	pop    rbp
   14002377c:	ret    
   14002377d:	rex push rbp
   14002377f:	sub    rsp,0x20
   140023783:	mov    rbp,rdx
   140023786:	lea    rcx,[rbp+0x138]
   14002378d:	call   0x1400077d0
   140023792:	add    rsp,0x20
   140023796:	pop    rbp
   140023797:	ret    
   140023798:	rex push rbp
   14002379a:	sub    rsp,0x20
   14002379e:	mov    rbp,rdx
   1400237a1:	lea    rcx,[rbp+0x108]
   1400237a8:	call   0x140009e60
   1400237ad:	add    rsp,0x20
   1400237b1:	pop    rbp
   1400237b2:	ret    
   1400237b3:	rex push rbp
   1400237b5:	sub    rsp,0x20
   1400237b9:	mov    rbp,rdx
   1400237bc:	lea    rcx,[rbp+0x240]
   1400237c3:	call   0x140009e60
   1400237c8:	add    rsp,0x20
   1400237cc:	pop    rbp
   1400237cd:	ret    
   1400237ce:	rex push rbp
   1400237d0:	sub    rsp,0x20
   1400237d4:	mov    rbp,rdx
   1400237d7:	lea    rcx,[rbp+0x40]
   1400237db:	call   0x140009e60
   1400237e0:	add    rsp,0x20
   1400237e4:	pop    rbp
   1400237e5:	ret    
   1400237e6:	rex push rbp
   1400237e8:	sub    rsp,0x20
   1400237ec:	mov    rbp,rdx
   1400237ef:	lea    rcx,[rbp+0x60]
   1400237f3:	call   0x140009e60
   1400237f8:	add    rsp,0x20
   1400237fc:	pop    rbp
   1400237fd:	ret    
   1400237fe:	rex push rbp
   140023800:	sub    rsp,0x20
   140023804:	mov    rbp,rdx
   140023807:	lea    rcx,[rbp+0xe0]
   14002380e:	call   0x140009e60
   140023813:	add    rsp,0x20
   140023817:	pop    rbp
   140023818:	ret    
   140023819:	rex push rbp
   14002381b:	sub    rsp,0x20
   14002381f:	mov    rbp,rdx
   140023822:	lea    rcx,[rbp+0xb0]
   140023829:	call   0x140009e60
   14002382e:	add    rsp,0x20
   140023832:	pop    rbp
   140023833:	ret    
   140023834:	rex push rbp
   140023836:	sub    rsp,0x20
   14002383a:	mov    rbp,rdx
   14002383d:	lea    rcx,[rbp+0x78]
   140023841:	call   0x140009e60
   140023846:	add    rsp,0x20
   14002384a:	pop    rbp
   14002384b:	ret    
   14002384c:	rex push rbp
   14002384e:	sub    rsp,0x20
   140023852:	mov    rbp,rdx
   140023855:	lea    rcx,[rbp+0x98]
   14002385c:	call   0x140009e60
   140023861:	add    rsp,0x20
   140023865:	pop    rbp
   140023866:	ret    
   140023867:	rex push rbp
   140023869:	sub    rsp,0x20
   14002386d:	mov    rbp,rdx
   140023870:	lea    rcx,[rbp+0xc8]
   140023877:	call   0x140009e60
   14002387c:	add    rsp,0x20
   140023880:	pop    rbp
   140023881:	ret    
   140023882:	rex push rbp
   140023884:	sub    rsp,0x20
   140023888:	lea    rbp,[rdx+0x20]
   14002388c:	lea    rcx,[rbp+0x48]
   140023890:	call   0x140009e60
   140023895:	add    rsp,0x20
   140023899:	pop    rbp
   14002389a:	ret    
   14002389b:	rex push rbp
   14002389d:	sub    rsp,0x20
   1400238a1:	lea    rbp,[rdx+0x20]
   1400238a5:	lea    rcx,[rbp+0x70]
   1400238a9:	call   0x140009e60
   1400238ae:	add    rsp,0x20
   1400238b2:	pop    rbp
   1400238b3:	ret    
   1400238b4:	int3   
   1400238b5:	int3   
   1400238b6:	int3   
   1400238b7:	int3   
   1400238b8:	int3   
   1400238b9:	int3   
   1400238ba:	int3   
   1400238bb:	int3   
   1400238bc:	int3   
   1400238bd:	int3   
   1400238be:	int3   
   1400238bf:	int3   
   1400238c0:	rex push rbp
   1400238c2:	sub    rsp,0x20
   1400238c6:	mov    rbp,rdx
   1400238c9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400238cd:	call   0x140012bf0
   1400238d2:	add    rsp,0x20
   1400238d6:	pop    rbp
   1400238d7:	ret    
   1400238d8:	int3   
   1400238d9:	int3   
   1400238da:	int3   
   1400238db:	int3   
   1400238dc:	int3   
   1400238dd:	int3   
   1400238de:	int3   
   1400238df:	int3   
   1400238e0:	rex push rbp
   1400238e2:	sub    rsp,0x20
   1400238e6:	mov    rbp,rdx
   1400238e9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400238ed:	add    rcx,0x8
   1400238f1:	call   0x140009e60
   1400238f6:	add    rsp,0x20
   1400238fa:	pop    rbp
   1400238fb:	ret    
   1400238fc:	int3   
   1400238fd:	int3   
   1400238fe:	int3   
   1400238ff:	int3   
   140023900:	mov    QWORD PTR [rsp+0x10],rdx
   140023905:	push   rbp
   140023906:	sub    rsp,0x30
   14002390a:	mov    rbp,rdx
   14002390d:	mov    rdx,QWORD PTR [rbp+0x38]
   140023911:	mov    rcx,QWORD PTR [rbp+0x80]
   140023918:	call   0x140013680
   14002391d:	xor    edx,edx
   14002391f:	xor    ecx,ecx
   140023921:	call   0x14002193a
   140023926:	nop
   140023927:	lea    rax,[rip+0xfffffffffffececb]        # 0x1400107f9
   14002392e:	add    rsp,0x30
   140023932:	pop    rbp
   140023933:	ret    
   140023934:	int3   
   140023935:	int3   
   140023936:	int3   
   140023937:	int3   
   140023938:	int3   
   140023939:	int3   
   14002393a:	int3   
   14002393b:	int3   
   14002393c:	int3   
   14002393d:	int3   
   14002393e:	int3   
   14002393f:	int3   
   140023940:	mov    QWORD PTR [rsp+0x10],rdx
   140023945:	push   rbp
   140023946:	sub    rsp,0x20
   14002394a:	mov    rbp,rdx
   14002394d:	lea    rdx,[rbp+0x21]
   140023951:	mov    rcx,QWORD PTR [rbp+0x60]
   140023955:	call   0x140013840
   14002395a:	mov    r8d,0x1
   140023960:	mov    rdx,QWORD PTR [rbp+0x28]
   140023964:	mov    rcx,rax
   140023967:	call   0x140014000
   14002396c:	xor    edx,edx
   14002396e:	xor    ecx,ecx
   140023970:	call   0x14002193a
   140023975:	nop
   140023976:	lea    rax,[rip+0xfffffffffffecf1d]        # 0x14001089a
   14002397d:	add    rsp,0x20
   140023981:	pop    rbp
   140023982:	ret    
   140023983:	int3   
   140023984:	int3   
   140023985:	int3   
   140023986:	int3   
   140023987:	int3   
   140023988:	int3   
   140023989:	int3   
   14002398a:	int3   
   14002398b:	int3   
   14002398c:	int3   
   14002398d:	int3   
   14002398e:	int3   
   14002398f:	int3   
   140023990:	mov    QWORD PTR [rsp+0x10],rdx
   140023995:	push   rbp
   140023996:	sub    rsp,0x30
   14002399a:	mov    rbp,rdx
   14002399d:	mov    rdx,QWORD PTR [rbp+0x200]
   1400239a4:	mov    rcx,QWORD PTR [rbp+0x1e0]
   1400239ab:	call   0x140013540
   1400239b0:	xor    edx,edx
   1400239b2:	xor    ecx,ecx
   1400239b4:	call   0x14002193a
   1400239b9:	nop
   1400239ba:	lea    rax,[rip+0xfffffffffffee10b]        # 0x140011acc
   1400239c1:	add    rsp,0x30
   1400239c5:	pop    rbp
   1400239c6:	ret    
   1400239c7:	int3   
   1400239c8:	int3   
   1400239c9:	int3   
   1400239ca:	int3   
   1400239cb:	int3   
   1400239cc:	int3   
   1400239cd:	int3   
   1400239ce:	int3   
   1400239cf:	int3   
   1400239d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400239d5:	push   rbp
   1400239d6:	sub    rsp,0x30
   1400239da:	mov    rbp,rdx
   1400239dd:	mov    rdx,QWORD PTR [rbp+0xf0]
   1400239e4:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400239eb:	call   0x140013540
   1400239f0:	xor    edx,edx
   1400239f2:	xor    ecx,ecx
   1400239f4:	call   0x14002193a
   1400239f9:	nop
   1400239fa:	lea    rax,[rip+0xfffffffffffee511]        # 0x140011f12
   140023a01:	add    rsp,0x30
   140023a05:	pop    rbp
   140023a06:	ret    
   140023a07:	int3   
   140023a08:	int3   
   140023a09:	int3   
   140023a0a:	int3   
   140023a0b:	int3   
   140023a0c:	int3   
   140023a0d:	int3   
   140023a0e:	int3   
   140023a0f:	int3   
   140023a10:	rex push rbp
   140023a12:	sub    rsp,0x20
   140023a16:	mov    rbp,rdx
   140023a19:	mov    rdx,QWORD PTR [rbp+0x88]
   140023a20:	mov    rcx,QWORD PTR [rbp+0x28]
   140023a24:	call   0x1400123d0
   140023a29:	add    rsp,0x20
   140023a2d:	pop    rbp
   140023a2e:	ret    
   140023a2f:	int3   
   140023a30:	rex push rbp
   140023a32:	sub    rsp,0x20
   140023a36:	mov    rbp,rdx
   140023a39:	mov    rdx,QWORD PTR [rbp+0x58]
   140023a3d:	mov    rcx,QWORD PTR [rbp+0x20]
   140023a41:	call   0x1400123d0
   140023a46:	add    rsp,0x20
   140023a4a:	pop    rbp
   140023a4b:	ret    
   140023a4c:	int3   
   140023a4d:	int3   
   140023a4e:	int3   
   140023a4f:	int3   
   140023a50:	rex push rbp
   140023a52:	sub    rsp,0x20
   140023a56:	mov    rbp,rdx
   140023a59:	mov    rcx,QWORD PTR [rbp+0x40]
   140023a5d:	call   0x140012b60
   140023a62:	add    rsp,0x20
   140023a66:	pop    rbp
   140023a67:	ret    
   140023a68:	int3   
   140023a69:	int3   
   140023a6a:	int3   
   140023a6b:	int3   
   140023a6c:	int3   
   140023a6d:	int3   
   140023a6e:	int3   
   140023a6f:	int3   
   140023a70:	rex push rbp
   140023a72:	sub    rsp,0x20
   140023a76:	mov    rbp,rdx
   140023a79:	mov    rcx,QWORD PTR [rbp+0x20]
   140023a7d:	call   0x140020b90
   140023a82:	add    rsp,0x20
   140023a86:	pop    rbp
   140023a87:	ret    
   140023a88:	int3   
   140023a89:	int3   
   140023a8a:	int3   
   140023a8b:	int3   
   140023a8c:	int3   
   140023a8d:	int3   
   140023a8e:	int3   
   140023a8f:	int3   
   140023a90:	rex push rbp
   140023a92:	sub    rsp,0x20
   140023a96:	mov    rbp,rdx
   140023a99:	mov    rcx,QWORD PTR [rbp+0x40]
   140023a9d:	call   0x140012b90
   140023aa2:	add    rsp,0x20
   140023aa6:	pop    rbp
   140023aa7:	ret    
   140023aa8:	int3   
   140023aa9:	int3   
   140023aaa:	int3   
   140023aab:	int3   
   140023aac:	int3   
   140023aad:	int3   
   140023aae:	int3   
   140023aaf:	int3   
   140023ab0:	rex push rbp
   140023ab2:	sub    rsp,0x20
   140023ab6:	mov    rbp,rdx
   140023ab9:	mov    rcx,QWORD PTR [rbp+0x40]
   140023abd:	call   0x140012b40
   140023ac2:	add    rsp,0x20
   140023ac6:	pop    rbp
   140023ac7:	ret    
   140023ac8:	int3   
   140023ac9:	int3   
   140023aca:	int3   
   140023acb:	int3   
   140023acc:	int3   
   140023acd:	int3   
   140023ace:	int3   
   140023acf:	int3   
   140023ad0:	rex push rbp
   140023ad2:	sub    rsp,0x20
   140023ad6:	mov    rbp,rdx
   140023ad9:	mov    rcx,QWORD PTR [rbp+0x40]
   140023add:	call   0x140012b10
   140023ae2:	add    rsp,0x20
   140023ae6:	pop    rbp
   140023ae7:	ret    
   140023ae8:	int3   
   140023ae9:	int3   
   140023aea:	int3   
   140023aeb:	int3   
   140023aec:	int3   
   140023aed:	int3   
   140023aee:	int3   
   140023aef:	int3   
   140023af0:	rex push rbp
   140023af2:	sub    rsp,0x20
   140023af6:	mov    rbp,rdx
   140023af9:	lea    rcx,[rbp+0x30]
   140023afd:	call   0x140009e60
   140023b02:	add    rsp,0x20
   140023b06:	pop    rbp
   140023b07:	ret    
   140023b08:	rex push rbp
   140023b0a:	sub    rsp,0x20
   140023b0e:	mov    rbp,rdx
   140023b11:	mov    eax,DWORD PTR [rbp+0x20]
   140023b14:	and    eax,0x1
   140023b17:	test   eax,eax
   140023b19:	je     0x140023b28
   140023b1b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140023b1f:	mov    rcx,QWORD PTR [rbp+0x60]
   140023b23:	call   0x140009e60
   140023b28:	add    rsp,0x20
   140023b2c:	pop    rbp
   140023b2d:	ret    
   140023b2e:	int3   
   140023b2f:	int3   
   140023b30:	mov    QWORD PTR [rsp+0x10],rdx
   140023b35:	push   rbp
   140023b36:	sub    rsp,0x20
   140023b3a:	mov    rbp,rdx
   140023b3d:	lea    rdx,[rbp+0x28]
   140023b41:	mov    rcx,QWORD PTR [rbp+0x60]
   140023b45:	call   0x140013840
   140023b4a:	mov    r8d,0x1
   140023b50:	mov    rdx,QWORD PTR [rbp+0x20]
   140023b54:	mov    rcx,rax
   140023b57:	call   0x140014000
   140023b5c:	xor    edx,edx
   140023b5e:	xor    ecx,ecx
   140023b60:	call   0x14002193a
   140023b65:	nop
   140023b66:	lea    rax,[rip+0xfffffffffffef7ba]        # 0x140013327
   140023b6d:	add    rsp,0x20
   140023b71:	pop    rbp
   140023b72:	ret    
   140023b73:	int3   
   140023b74:	int3   
   140023b75:	int3   
   140023b76:	int3   
   140023b77:	int3   
   140023b78:	int3   
   140023b79:	int3   
   140023b7a:	int3   
   140023b7b:	int3   
   140023b7c:	int3   
   140023b7d:	int3   
   140023b7e:	int3   
   140023b7f:	int3   
   140023b80:	mov    QWORD PTR [rsp+0x10],rdx
   140023b85:	push   rbp
   140023b86:	sub    rsp,0x20
   140023b8a:	mov    rbp,rdx
   140023b8d:	lea    rdx,[rbp+0x23]
   140023b91:	mov    rcx,QWORD PTR [rbp+0x60]
   140023b95:	call   0x140013840
   140023b9a:	mov    r8d,0x1
   140023ba0:	mov    rdx,QWORD PTR [rbp+0x28]
   140023ba4:	mov    rcx,rax
   140023ba7:	call   0x140014000
   140023bac:	xor    edx,edx
   140023bae:	xor    ecx,ecx
   140023bb0:	call   0x14002193a
   140023bb5:	nop
   140023bb6:	lea    rax,[rip+0xfffffffffffef865]        # 0x140013422
   140023bbd:	add    rsp,0x20
   140023bc1:	pop    rbp
   140023bc2:	ret    
   140023bc3:	int3   
   140023bc4:	int3   
   140023bc5:	int3   
   140023bc6:	int3   
   140023bc7:	int3   
   140023bc8:	int3   
   140023bc9:	int3   
   140023bca:	int3   
   140023bcb:	int3   
   140023bcc:	int3   
   140023bcd:	int3   
   140023bce:	int3   
   140023bcf:	int3   
   140023bd0:	mov    QWORD PTR [rsp+0x10],rdx
   140023bd5:	push   rbp
   140023bd6:	sub    rsp,0x20
   140023bda:	mov    rbp,rdx
   140023bdd:	lea    rdx,[rbp+0x20]
   140023be1:	mov    rcx,QWORD PTR [rbp+0x60]
   140023be5:	call   0x140013840
   140023bea:	mov    r8d,0x1
   140023bf0:	mov    rdx,QWORD PTR [rbp+0x28]
   140023bf4:	mov    rcx,rax
   140023bf7:	call   0x140014000
   140023bfc:	xor    edx,edx
   140023bfe:	xor    ecx,ecx
   140023c00:	call   0x14002193a
   140023c05:	nop
   140023c06:	lea    rax,[rip+0xfffffffffffef90a]        # 0x140013517
   140023c0d:	add    rsp,0x20
   140023c11:	pop    rbp
   140023c12:	ret    
   140023c13:	int3   
   140023c14:	int3   
   140023c15:	int3   
   140023c16:	int3   
   140023c17:	int3   
   140023c18:	int3   
   140023c19:	int3   
   140023c1a:	int3   
   140023c1b:	int3   
   140023c1c:	int3   
   140023c1d:	int3   
   140023c1e:	int3   
   140023c1f:	int3   
   140023c20:	rex push rbp
   140023c22:	sub    rsp,0x20
   140023c26:	mov    rbp,rdx
   140023c29:	mov    rcx,QWORD PTR [rbp+0x20]
   140023c2d:	call   0x140020b90
   140023c32:	add    rsp,0x20
   140023c36:	pop    rbp
   140023c37:	ret    
   140023c38:	rex push rbp
   140023c3a:	sub    rsp,0x20
   140023c3e:	mov    rbp,rdx
   140023c41:	lea    rcx,[rbp+0x30]
   140023c45:	call   0x1400175e0
   140023c4a:	add    rsp,0x20
   140023c4e:	pop    rbp
   140023c4f:	ret    
   140023c50:	rex push rbp
   140023c52:	sub    rsp,0x20
   140023c56:	mov    rbp,rdx
   140023c59:	mov    rcx,QWORD PTR [rbp+0x40]
   140023c5d:	call   0x1400210d0
   140023c62:	add    rsp,0x20
   140023c66:	pop    rbp
   140023c67:	ret    
   140023c68:	int3   
   140023c69:	int3   
   140023c6a:	int3   
   140023c6b:	int3   
   140023c6c:	int3   
   140023c6d:	int3   
   140023c6e:	int3   
   140023c6f:	int3   
   140023c70:	rex push rbp
   140023c72:	sub    rsp,0x20
   140023c76:	mov    rbp,rdx
   140023c79:	mov    rcx,QWORD PTR [rbp+0x40]
   140023c7d:	call   0x140017630
   140023c82:	add    rsp,0x20
   140023c86:	pop    rbp
   140023c87:	ret    
   140023c88:	int3   
   140023c89:	int3   
   140023c8a:	int3   
   140023c8b:	int3   
   140023c8c:	int3   
   140023c8d:	int3   
   140023c8e:	int3   
   140023c8f:	int3   
   140023c90:	rex push rbp
   140023c92:	sub    rsp,0x20
   140023c96:	mov    rbp,rdx
   140023c99:	mov    rcx,QWORD PTR [rbp+0x40]
   140023c9d:	call   0x1400175b0
   140023ca2:	add    rsp,0x20
   140023ca6:	pop    rbp
   140023ca7:	ret    
   140023ca8:	rex push rbp
   140023caa:	sub    rsp,0x20
   140023cae:	mov    rbp,rdx
   140023cb1:	mov    rcx,QWORD PTR [rbp+0x40]
   140023cb5:	add    rcx,0x18
   140023cb9:	call   QWORD PTR [rip+0x30a1]        # 0x140026d60
   140023cbf:	add    rsp,0x20
   140023cc3:	pop    rbp
   140023cc4:	ret    
   140023cc5:	int3   
   140023cc6:	int3   
   140023cc7:	int3   
   140023cc8:	int3   
   140023cc9:	int3   
   140023cca:	int3   
   140023ccb:	int3   
   140023ccc:	int3   
   140023ccd:	int3   
   140023cce:	int3   
   140023ccf:	int3   
   140023cd0:	rex push rbp
   140023cd2:	sub    rsp,0x20
   140023cd6:	mov    rbp,rdx
   140023cd9:	mov    rcx,QWORD PTR [rbp+0x40]
   140023cdd:	call   0x140017f80
   140023ce2:	add    rsp,0x20
   140023ce6:	pop    rbp
   140023ce7:	ret    
   140023ce8:	rex push rbp
   140023cea:	sub    rsp,0x20
   140023cee:	mov    rbp,rdx
   140023cf1:	mov    rcx,QWORD PTR [rbp+0x40]
   140023cf5:	add    rcx,0x18
   140023cf9:	call   QWORD PTR [rip+0x3061]        # 0x140026d60
   140023cff:	add    rsp,0x20
   140023d03:	pop    rbp
   140023d04:	ret    
   140023d05:	rex push rbp
   140023d07:	sub    rsp,0x20
   140023d0b:	mov    rbp,rdx
   140023d0e:	mov    rcx,QWORD PTR [rbp+0x40]
   140023d12:	add    rcx,0x20
   140023d16:	call   QWORD PTR [rip+0x3044]        # 0x140026d60
   140023d1c:	add    rsp,0x20
   140023d20:	pop    rbp
   140023d21:	ret    
   140023d22:	rex push rbp
   140023d24:	sub    rsp,0x20
   140023d28:	mov    rbp,rdx
   140023d2b:	mov    rcx,QWORD PTR [rbp+0x40]
   140023d2f:	add    rcx,0x28
   140023d33:	call   QWORD PTR [rip+0x3027]        # 0x140026d60
   140023d39:	add    rsp,0x20
   140023d3d:	pop    rbp
   140023d3e:	ret    
   140023d3f:	rex push rbp
   140023d41:	sub    rsp,0x20
   140023d45:	mov    rbp,rdx
   140023d48:	mov    rcx,QWORD PTR [rbp+0x40]
   140023d4c:	add    rcx,0x30
   140023d50:	call   QWORD PTR [rip+0x300a]        # 0x140026d60
   140023d56:	add    rsp,0x20
   140023d5a:	pop    rbp
   140023d5b:	ret    
   140023d5c:	rex push rbp
   140023d5e:	sub    rsp,0x20
   140023d62:	mov    rbp,rdx
   140023d65:	mov    rcx,QWORD PTR [rbp+0x40]
   140023d69:	add    rcx,0x38
   140023d6d:	call   QWORD PTR [rip+0x2fed]        # 0x140026d60
   140023d73:	add    rsp,0x20
   140023d77:	pop    rbp
   140023d78:	ret    
   140023d79:	rex push rbp
   140023d7b:	sub    rsp,0x20
   140023d7f:	mov    rbp,rdx
   140023d82:	mov    rcx,QWORD PTR [rbp+0x40]
   140023d86:	add    rcx,0x40
   140023d8a:	call   QWORD PTR [rip+0x2fd0]        # 0x140026d60
   140023d90:	add    rsp,0x20
   140023d94:	pop    rbp
   140023d95:	ret    
   140023d96:	rex push rbp
   140023d98:	sub    rsp,0x20
   140023d9c:	mov    rbp,rdx
   140023d9f:	mov    rcx,QWORD PTR [rbp+0x40]
   140023da3:	add    rcx,0x48
   140023da7:	call   QWORD PTR [rip+0x2fb3]        # 0x140026d60
   140023dad:	add    rsp,0x20
   140023db1:	pop    rbp
   140023db2:	ret    
   140023db3:	rex push rbp
   140023db5:	sub    rsp,0x20
   140023db9:	mov    rbp,rdx
   140023dbc:	mov    rcx,QWORD PTR [rbp+0x40]
   140023dc0:	add    rcx,0x50
   140023dc4:	call   QWORD PTR [rip+0x2f96]        # 0x140026d60
   140023dca:	add    rsp,0x20
   140023dce:	pop    rbp
   140023dcf:	ret    
   140023dd0:	rex push rbp
   140023dd2:	sub    rsp,0x20
   140023dd6:	mov    rbp,rdx
   140023dd9:	lea    rcx,[rbp+0x48]
   140023ddd:	call   0x140017fb0
   140023de2:	add    rsp,0x20
   140023de6:	pop    rbp
   140023de7:	ret    
   140023de8:	int3   
   140023de9:	int3   
   140023dea:	int3   
   140023deb:	int3   
   140023dec:	int3   
   140023ded:	int3   
   140023dee:	int3   
   140023def:	int3   
   140023df0:	rex push rbp
   140023df2:	sub    rsp,0x20
   140023df6:	mov    rbp,rdx
   140023df9:	mov    rcx,QWORD PTR [rbp+0x40]
   140023dfd:	call   0x140017f50
   140023e02:	add    rsp,0x20
   140023e06:	pop    rbp
   140023e07:	ret    
   140023e08:	int3   
   140023e09:	int3   
   140023e0a:	int3   
   140023e0b:	int3   
   140023e0c:	int3   
   140023e0d:	int3   
   140023e0e:	int3   
   140023e0f:	int3   
   140023e10:	rex push rbp
   140023e12:	sub    rsp,0x20
   140023e16:	mov    rbp,rdx
   140023e19:	mov    rcx,QWORD PTR [rbp+0x50]
   140023e1d:	call   QWORD PTR [rip+0x2f3d]        # 0x140026d60
   140023e23:	add    rsp,0x20
   140023e27:	pop    rbp
   140023e28:	ret    
   140023e29:	rex push rbp
   140023e2b:	sub    rsp,0x20
   140023e2f:	mov    rbp,rdx
   140023e32:	mov    rcx,QWORD PTR [rbp+0x50]
   140023e36:	add    rcx,0x8
   140023e3a:	call   QWORD PTR [rip+0x2f20]        # 0x140026d60
   140023e40:	add    rsp,0x20
   140023e44:	pop    rbp
   140023e45:	ret    
   140023e46:	int3   
   140023e47:	int3   
   140023e48:	int3   
   140023e49:	int3   
   140023e4a:	int3   
   140023e4b:	int3   
   140023e4c:	int3   
   140023e4d:	int3   
   140023e4e:	int3   
   140023e4f:	int3   
   140023e50:	mov    QWORD PTR [rsp+0x10],rdx
   140023e55:	push   rbp
   140023e56:	sub    rsp,0x20
   140023e5a:	mov    rbp,rdx
   140023e5d:	lea    rdx,[rbp+0x23]
   140023e61:	mov    rcx,QWORD PTR [rbp+0x60]
   140023e65:	call   0x14001e910
   140023e6a:	mov    r8d,0x1
   140023e70:	mov    rdx,QWORD PTR [rbp+0x28]
   140023e74:	mov    rcx,rax
   140023e77:	call   0x14001ec00
   140023e7c:	xor    edx,edx
   140023e7e:	xor    ecx,ecx
   140023e80:	call   0x14002193a
   140023e85:	nop
   140023e86:	lea    rax,[rip+0xffffffffffff4295]        # 0x140018122
   140023e8d:	add    rsp,0x20
   140023e91:	pop    rbp
   140023e92:	ret    
   140023e93:	int3   
   140023e94:	int3   
   140023e95:	int3   
   140023e96:	int3   
   140023e97:	int3   
   140023e98:	int3   
   140023e99:	int3   
   140023e9a:	int3   
   140023e9b:	int3   
   140023e9c:	int3   
   140023e9d:	int3   
   140023e9e:	int3   
   140023e9f:	int3   
   140023ea0:	rex push rbp
   140023ea2:	sub    rsp,0x20
   140023ea6:	mov    rbp,rdx
   140023ea9:	mov    rcx,QWORD PTR [rbp+0x40]
   140023ead:	call   0x14001de60
   140023eb2:	add    rsp,0x20
   140023eb6:	pop    rbp
   140023eb7:	ret    
   140023eb8:	rex push rbp
   140023eba:	sub    rsp,0x20
   140023ebe:	mov    rbp,rdx
   140023ec1:	mov    rcx,QWORD PTR [rbp+0x40]
   140023ec5:	add    rcx,0x58
   140023ec9:	call   0x14001df60
   140023ece:	add    rsp,0x20
   140023ed2:	pop    rbp
   140023ed3:	ret    
   140023ed4:	rex push rbp
   140023ed6:	sub    rsp,0x20
   140023eda:	mov    rbp,rdx
   140023edd:	mov    rcx,QWORD PTR [rbp+0x40]
   140023ee1:	add    rcx,0x90
   140023ee8:	call   QWORD PTR [rip+0x2e72]        # 0x140026d60
   140023eee:	add    rsp,0x20
   140023ef2:	pop    rbp
   140023ef3:	ret    
   140023ef4:	rex push rbp
   140023ef6:	sub    rsp,0x20
   140023efa:	mov    rbp,rdx
   140023efd:	mov    rcx,QWORD PTR [rbp+0x40]
   140023f01:	add    rcx,0x98
   140023f08:	call   QWORD PTR [rip+0x2e52]        # 0x140026d60
   140023f0e:	add    rsp,0x20
   140023f12:	pop    rbp
   140023f13:	ret    
   140023f14:	rex push rbp
   140023f16:	sub    rsp,0x20
   140023f1a:	mov    rbp,rdx
   140023f1d:	mov    rcx,QWORD PTR [rbp+0x40]
   140023f21:	add    rcx,0xa0
   140023f28:	call   QWORD PTR [rip+0x2e32]        # 0x140026d60
   140023f2e:	add    rsp,0x20
   140023f32:	pop    rbp
   140023f33:	ret    
   140023f34:	rex push rbp
   140023f36:	sub    rsp,0x20
   140023f3a:	mov    rbp,rdx
   140023f3d:	mov    rcx,QWORD PTR [rbp+0x40]
   140023f41:	add    rcx,0xb0
   140023f48:	call   0x14001f930
   140023f4d:	add    rsp,0x20
   140023f51:	pop    rbp
   140023f52:	ret    
   140023f53:	rex push rbp
   140023f55:	sub    rsp,0x20
   140023f59:	mov    rbp,rdx
   140023f5c:	mov    rcx,QWORD PTR [rbp+0x40]
   140023f60:	add    rcx,0xd8
   140023f67:	call   QWORD PTR [rip+0x2df3]        # 0x140026d60
   140023f6d:	add    rsp,0x20
   140023f71:	pop    rbp
   140023f72:	ret    
   140023f73:	rex push rbp
   140023f75:	sub    rsp,0x20
   140023f79:	mov    rbp,rdx
   140023f7c:	mov    rcx,QWORD PTR [rbp+0x40]
   140023f80:	add    rcx,0xe8
   140023f87:	call   0x140014eb0
   140023f8c:	add    rsp,0x20
   140023f90:	pop    rbp
   140023f91:	ret    
   140023f92:	rex push rbp
   140023f94:	sub    rsp,0x20
   140023f98:	mov    rbp,rdx
   140023f9b:	mov    rcx,QWORD PTR [rbp+0x40]
   140023f9f:	call   0x14001de60
   140023fa4:	add    rsp,0x20
   140023fa8:	pop    rbp
   140023fa9:	ret    
   140023faa:	rex push rbp
   140023fac:	sub    rsp,0x20
   140023fb0:	mov    rbp,rdx
   140023fb3:	mov    rcx,QWORD PTR [rbp+0x40]
   140023fb7:	add    rcx,0x58
   140023fbb:	call   0x14001df60
   140023fc0:	add    rsp,0x20
   140023fc4:	pop    rbp
   140023fc5:	ret    
   140023fc6:	rex push rbp
   140023fc8:	sub    rsp,0x20
   140023fcc:	mov    rbp,rdx
   140023fcf:	mov    rcx,QWORD PTR [rbp+0x40]
   140023fd3:	add    rcx,0x90
   140023fda:	call   QWORD PTR [rip+0x2d80]        # 0x140026d60
   140023fe0:	add    rsp,0x20
   140023fe4:	pop    rbp
   140023fe5:	ret    
   140023fe6:	rex push rbp
   140023fe8:	sub    rsp,0x20
   140023fec:	mov    rbp,rdx
   140023fef:	mov    rcx,QWORD PTR [rbp+0x40]
   140023ff3:	add    rcx,0x98
   140023ffa:	call   QWORD PTR [rip+0x2d60]        # 0x140026d60
   140024000:	add    rsp,0x20
   140024004:	pop    rbp
   140024005:	ret    
   140024006:	rex push rbp
   140024008:	sub    rsp,0x20
   14002400c:	mov    rbp,rdx
   14002400f:	mov    rcx,QWORD PTR [rbp+0x40]
   140024013:	add    rcx,0xa0
   14002401a:	call   QWORD PTR [rip+0x2d40]        # 0x140026d60
   140024020:	add    rsp,0x20
   140024024:	pop    rbp
   140024025:	ret    
   140024026:	rex push rbp
   140024028:	sub    rsp,0x20
   14002402c:	mov    rbp,rdx
   14002402f:	mov    rcx,QWORD PTR [rbp+0x40]
   140024033:	add    rcx,0xb0
   14002403a:	call   0x14001f930
   14002403f:	add    rsp,0x20
   140024043:	pop    rbp
   140024044:	ret    
   140024045:	rex push rbp
   140024047:	sub    rsp,0x20
   14002404b:	mov    rbp,rdx
   14002404e:	mov    rcx,QWORD PTR [rbp+0x40]
   140024052:	add    rcx,0xd8
   140024059:	call   QWORD PTR [rip+0x2d01]        # 0x140026d60
   14002405f:	add    rsp,0x20
   140024063:	pop    rbp
   140024064:	ret    
   140024065:	rex push rbp
   140024067:	sub    rsp,0x20
   14002406b:	mov    rbp,rdx
   14002406e:	mov    rcx,QWORD PTR [rbp+0x40]
   140024072:	add    rcx,0xe8
   140024079:	call   0x140014eb0
   14002407e:	add    rsp,0x20
   140024082:	pop    rbp
   140024083:	ret    
   140024084:	rex push rbp
   140024086:	sub    rsp,0x20
   14002408a:	mov    rbp,rdx
   14002408d:	lea    rcx,[rbp+0x50]
   140024091:	call   0x14001de10
   140024096:	add    rsp,0x20
   14002409a:	pop    rbp
   14002409b:	ret    
   14002409c:	rex push rbp
   14002409e:	sub    rsp,0x20
   1400240a2:	mov    rbp,rdx
   1400240a5:	lea    rcx,[rbp+0xa48]
   1400240ac:	call   0x140008570
   1400240b1:	add    rsp,0x20
   1400240b5:	pop    rbp
   1400240b6:	ret    
   1400240b7:	rex push rbp
   1400240b9:	sub    rsp,0x20
   1400240bd:	mov    rbp,rdx
   1400240c0:	lea    rcx,[rbp+0x30]
   1400240c4:	call   0x14001de10
   1400240c9:	add    rsp,0x20
   1400240cd:	pop    rbp
   1400240ce:	ret    
   1400240cf:	rex push rbp
   1400240d1:	sub    rsp,0x20
   1400240d5:	mov    rbp,rdx
   1400240d8:	lea    rcx,[rbp+0x28]
   1400240dc:	call   0x14001de10
   1400240e1:	add    rsp,0x20
   1400240e5:	pop    rbp
   1400240e6:	ret    
   1400240e7:	rex push rbp
   1400240e9:	sub    rsp,0x20
   1400240ed:	mov    rbp,rdx
   1400240f0:	mov    rcx,QWORD PTR [rbp+0x8b8]
   1400240f7:	call   0x1400077d0
   1400240fc:	add    rsp,0x20
   140024100:	pop    rbp
   140024101:	ret    
   140024102:	rex push rbp
   140024104:	sub    rsp,0x20
   140024108:	mov    rbp,rdx
   14002410b:	lea    rcx,[rbp+0x48]
   14002410f:	call   0x14001de10
   140024114:	add    rsp,0x20
   140024118:	pop    rbp
   140024119:	ret    
   14002411a:	rex push rbp
   14002411c:	sub    rsp,0x20
   140024120:	mov    rbp,rdx
   140024123:	lea    rcx,[rbp+0x160]
   14002412a:	call   0x14001de10
   14002412f:	add    rsp,0x20
   140024133:	pop    rbp
   140024134:	ret    
   140024135:	rex push rbp
   140024137:	sub    rsp,0x20
   14002413b:	mov    rbp,rdx
   14002413e:	mov    rcx,QWORD PTR [rbp+0x5e0]
   140024145:	call   0x1400077d0
   14002414a:	add    rsp,0x20
   14002414e:	pop    rbp
   14002414f:	ret    
   140024150:	rex push rbp
   140024152:	sub    rsp,0x20
   140024156:	mov    rbp,rdx
   140024159:	lea    rcx,[rbp+0x190]
   140024160:	call   0x14001de10
   140024165:	add    rsp,0x20
   140024169:	pop    rbp
   14002416a:	ret    
   14002416b:	rex push rbp
   14002416d:	sub    rsp,0x20
   140024171:	mov    rbp,rdx
   140024174:	lea    rcx,[rbp+0x600]
   14002417b:	call   0x1400077d0
   140024180:	add    rsp,0x20
   140024184:	pop    rbp
   140024185:	ret    
   140024186:	rex push rbp
   140024188:	sub    rsp,0x20
   14002418c:	mov    rbp,rdx
   14002418f:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140024196:	call   0x1400077d0
   14002419b:	add    rsp,0x20
   14002419f:	pop    rbp
   1400241a0:	ret    
   1400241a1:	rex push rbp
   1400241a3:	sub    rsp,0x20
   1400241a7:	mov    rbp,rdx
   1400241aa:	lea    rcx,[rbp+0x928]
   1400241b1:	call   0x14001de10
   1400241b6:	add    rsp,0x20
   1400241ba:	pop    rbp
   1400241bb:	ret    
   1400241bc:	rex push rbp
   1400241be:	sub    rsp,0x20
   1400241c2:	mov    rbp,rdx
   1400241c5:	lea    rcx,[rbp+0x1f0]
   1400241cc:	call   0x1400077d0
   1400241d1:	add    rsp,0x20
   1400241d5:	pop    rbp
   1400241d6:	ret    
   1400241d7:	rex push rbp
   1400241d9:	sub    rsp,0x20
   1400241dd:	mov    rbp,rdx
   1400241e0:	mov    rcx,QWORD PTR [rbp+0x840]
   1400241e7:	call   0x1400077d0
   1400241ec:	add    rsp,0x20
   1400241f0:	pop    rbp
   1400241f1:	ret    
   1400241f2:	rex push rbp
   1400241f4:	sub    rsp,0x20
   1400241f8:	mov    rbp,rdx
   1400241fb:	lea    rcx,[rbp+0x220]
   140024202:	call   0x14001de10
   140024207:	add    rsp,0x20
   14002420b:	pop    rbp
   14002420c:	ret    
   14002420d:	rex push rbp
   14002420f:	sub    rsp,0x20
   140024213:	mov    rbp,rdx
   140024216:	lea    rcx,[rbp+0x850]
   14002421d:	call   0x1400077d0
   140024222:	add    rsp,0x20
   140024226:	pop    rbp
   140024227:	ret    
   140024228:	rex push rbp
   14002422a:	sub    rsp,0x20
   14002422e:	mov    rbp,rdx
   140024231:	mov    rcx,QWORD PTR [rbp+0x240]
   140024238:	call   0x1400077d0
   14002423d:	add    rsp,0x20
   140024241:	pop    rbp
   140024242:	ret    
   140024243:	rex push rbp
   140024245:	sub    rsp,0x20
   140024249:	mov    rbp,rdx
   14002424c:	lea    rcx,[rbp+0x660]
   140024253:	call   0x14001de10
   140024258:	add    rsp,0x20
   14002425c:	pop    rbp
   14002425d:	ret    
   14002425e:	rex push rbp
   140024260:	sub    rsp,0x20
   140024264:	mov    rbp,rdx
   140024267:	lea    rcx,[rbp+0x280]
   14002426e:	call   0x1400077d0
   140024273:	add    rsp,0x20
   140024277:	pop    rbp
   140024278:	ret    
   140024279:	rex push rbp
   14002427b:	sub    rsp,0x20
   14002427f:	mov    rbp,rdx
   140024282:	mov    rcx,QWORD PTR [rbp+0x670]
   140024289:	call   0x1400077d0
   14002428e:	add    rsp,0x20
   140024292:	pop    rbp
   140024293:	ret    
   140024294:	rex push rbp
   140024296:	sub    rsp,0x20
   14002429a:	mov    rbp,rdx
   14002429d:	lea    rcx,[rbp+0x2b0]
   1400242a4:	call   0x14001de10
   1400242a9:	add    rsp,0x20
   1400242ad:	pop    rbp
   1400242ae:	ret    
   1400242af:	rex push rbp
   1400242b1:	sub    rsp,0x20
   1400242b5:	mov    rbp,rdx
   1400242b8:	lea    rcx,[rbp+0x690]
   1400242bf:	call   0x1400077d0
   1400242c4:	add    rsp,0x20
   1400242c8:	pop    rbp
   1400242c9:	ret    
   1400242ca:	rex push rbp
   1400242cc:	sub    rsp,0x20
   1400242d0:	mov    rbp,rdx
   1400242d3:	mov    rcx,QWORD PTR [rbp+0x2d0]
   1400242da:	call   0x1400077d0
   1400242df:	add    rsp,0x20
   1400242e3:	pop    rbp
   1400242e4:	ret    
   1400242e5:	rex push rbp
   1400242e7:	sub    rsp,0x20
   1400242eb:	mov    rbp,rdx
   1400242ee:	lea    rcx,[rbp+0x880]
   1400242f5:	call   0x14001de10
   1400242fa:	add    rsp,0x20
   1400242fe:	pop    rbp
   1400242ff:	ret    
   140024300:	rex push rbp
   140024302:	sub    rsp,0x20
   140024306:	mov    rbp,rdx
   140024309:	lea    rcx,[rbp+0x310]
   140024310:	call   0x14001de10
   140024315:	add    rsp,0x20
   140024319:	pop    rbp
   14002431a:	ret    
   14002431b:	rex push rbp
   14002431d:	sub    rsp,0x20
   140024321:	mov    rbp,rdx
   140024324:	mov    rcx,QWORD PTR [rbp+0x8f0]
   14002432b:	call   0x1400077d0
   140024330:	add    rsp,0x20
   140024334:	pop    rbp
   140024335:	ret    
   140024336:	rex push rbp
   140024338:	sub    rsp,0x20
   14002433c:	mov    rbp,rdx
   14002433f:	lea    rcx,[rbp+0x340]
   140024346:	call   0x14001de10
   14002434b:	add    rsp,0x20
   14002434f:	pop    rbp
   140024350:	ret    
   140024351:	rex push rbp
   140024353:	sub    rsp,0x20
   140024357:	mov    rbp,rdx
   14002435a:	lea    rcx,[rbp+0x940]
   140024361:	call   0x1400077d0
   140024366:	add    rsp,0x20
   14002436a:	pop    rbp
   14002436b:	ret    
   14002436c:	rex push rbp
   14002436e:	sub    rsp,0x20
   140024372:	mov    rbp,rdx
   140024375:	lea    rcx,[rbp+0x108]
   14002437c:	call   QWORD PTR [rip+0x29de]        # 0x140026d60
   140024382:	add    rsp,0x20
   140024386:	pop    rbp
   140024387:	ret    
   140024388:	rex push rbp
   14002438a:	sub    rsp,0x20
   14002438e:	mov    rbp,rdx
   140024391:	mov    rcx,QWORD PTR [rbp+0x360]
   140024398:	call   0x1400077d0
   14002439d:	add    rsp,0x20
   1400243a1:	pop    rbp
   1400243a2:	ret    
   1400243a3:	rex push rbp
   1400243a5:	sub    rsp,0x20
   1400243a9:	mov    rbp,rdx
   1400243ac:	lea    rcx,[rbp+0x6f0]
   1400243b3:	call   0x14001de10
   1400243b8:	add    rsp,0x20
   1400243bc:	pop    rbp
   1400243bd:	ret    
   1400243be:	rex push rbp
   1400243c0:	sub    rsp,0x20
   1400243c4:	mov    rbp,rdx
   1400243c7:	lea    rcx,[rbp+0x3a0]
   1400243ce:	call   0x1400077d0
   1400243d3:	add    rsp,0x20
   1400243d7:	pop    rbp
   1400243d8:	ret    
   1400243d9:	rex push rbp
   1400243db:	sub    rsp,0x20
   1400243df:	mov    rbp,rdx
   1400243e2:	mov    rcx,QWORD PTR [rbp+0x700]
   1400243e9:	call   0x1400077d0
   1400243ee:	add    rsp,0x20
   1400243f2:	pop    rbp
   1400243f3:	ret    
   1400243f4:	rex push rbp
   1400243f6:	sub    rsp,0x20
   1400243fa:	mov    rbp,rdx
   1400243fd:	lea    rcx,[rbp+0x3d0]
   140024404:	call   0x14001de10
   140024409:	add    rsp,0x20
   14002440d:	pop    rbp
   14002440e:	ret    
   14002440f:	rex push rbp
   140024411:	sub    rsp,0x20
   140024415:	mov    rbp,rdx
   140024418:	lea    rcx,[rbp+0x720]
   14002441f:	call   0x1400077d0
   140024424:	add    rsp,0x20
   140024428:	pop    rbp
   140024429:	ret    
   14002442a:	rex push rbp
   14002442c:	sub    rsp,0x20
   140024430:	mov    rbp,rdx
   140024433:	lea    rcx,[rbp+0xf8]
   14002443a:	call   QWORD PTR [rip+0x2920]        # 0x140026d60
   140024440:	add    rsp,0x20
   140024444:	pop    rbp
   140024445:	ret    
   140024446:	rex push rbp
   140024448:	sub    rsp,0x20
   14002444c:	mov    rbp,rdx
   14002444f:	lea    rcx,[rbp+0xa8]
   140024456:	call   QWORD PTR [rip+0x2904]        # 0x140026d60
   14002445c:	add    rsp,0x20
   140024460:	pop    rbp
   140024461:	ret    
   140024462:	rex push rbp
   140024464:	sub    rsp,0x20
   140024468:	mov    rbp,rdx
   14002446b:	mov    rcx,QWORD PTR [rbp+0x8c0]
   140024472:	call   0x1400077d0
   140024477:	add    rsp,0x20
   14002447b:	pop    rbp
   14002447c:	ret    
   14002447d:	rex push rbp
   14002447f:	sub    rsp,0x20
   140024483:	mov    rbp,rdx
   140024486:	lea    rcx,[rbp+0x420]
   14002448d:	call   0x14001de10
   140024492:	add    rsp,0x20
   140024496:	pop    rbp
   140024497:	ret    
   140024498:	rex push rbp
   14002449a:	sub    rsp,0x20
   14002449e:	mov    rbp,rdx
   1400244a1:	lea    rcx,[rbp+0x8d0]
   1400244a8:	call   0x1400077d0
   1400244ad:	add    rsp,0x20
   1400244b1:	pop    rbp
   1400244b2:	ret    
   1400244b3:	rex push rbp
   1400244b5:	sub    rsp,0x20
   1400244b9:	mov    rbp,rdx
   1400244bc:	lea    rcx,[rbp+0xb8]
   1400244c3:	call   QWORD PTR [rip+0x2897]        # 0x140026d60
   1400244c9:	add    rsp,0x20
   1400244cd:	pop    rbp
   1400244ce:	ret    
   1400244cf:	rex push rbp
   1400244d1:	sub    rsp,0x20
   1400244d5:	mov    rbp,rdx
   1400244d8:	lea    rcx,[rbp+0x78]
   1400244dc:	call   QWORD PTR [rip+0x287e]        # 0x140026d60
   1400244e2:	add    rsp,0x20
   1400244e6:	pop    rbp
   1400244e7:	ret    
   1400244e8:	rex push rbp
   1400244ea:	sub    rsp,0x20
   1400244ee:	mov    rbp,rdx
   1400244f1:	mov    rcx,QWORD PTR [rbp+0x750]
   1400244f8:	call   0x1400077d0
   1400244fd:	add    rsp,0x20
   140024501:	pop    rbp
   140024502:	ret    
   140024503:	rex push rbp
   140024505:	sub    rsp,0x20
   140024509:	mov    rbp,rdx
   14002450c:	lea    rcx,[rbp+0x470]
   140024513:	call   0x14001de10
   140024518:	add    rsp,0x20
   14002451c:	pop    rbp
   14002451d:	ret    
   14002451e:	rex push rbp
   140024520:	sub    rsp,0x20
   140024524:	mov    rbp,rdx
   140024527:	lea    rcx,[rbp+0x770]
   14002452e:	call   0x1400077d0
   140024533:	add    rsp,0x20
   140024537:	pop    rbp
   140024538:	ret    
   140024539:	rex push rbp
   14002453b:	sub    rsp,0x20
   14002453f:	mov    rbp,rdx
   140024542:	lea    rcx,[rbp+0xd0]
   140024549:	call   QWORD PTR [rip+0x2811]        # 0x140026d60
   14002454f:	add    rsp,0x20
   140024553:	pop    rbp
   140024554:	ret    
   140024555:	rex push rbp
   140024557:	sub    rsp,0x20
   14002455b:	mov    rbp,rdx
   14002455e:	lea    rcx,[rbp+0x98]
   140024565:	call   QWORD PTR [rip+0x27f5]        # 0x140026d60
   14002456b:	add    rsp,0x20
   14002456f:	pop    rbp
   140024570:	ret    
   140024571:	rex push rbp
   140024573:	sub    rsp,0x20
   140024577:	mov    rbp,rdx
   14002457a:	mov    rcx,QWORD PTR [rbp+0x868]
   140024581:	call   0x1400077d0
   140024586:	add    rsp,0x20
   14002458a:	pop    rbp
   14002458b:	ret    
   14002458c:	rex push rbp
   14002458e:	sub    rsp,0x20
   140024592:	mov    rbp,rdx
   140024595:	lea    rcx,[rbp+0x4c0]
   14002459c:	call   0x14001de10
   1400245a1:	add    rsp,0x20
   1400245a5:	pop    rbp
   1400245a6:	ret    
   1400245a7:	rex push rbp
   1400245a9:	sub    rsp,0x20
   1400245ad:	mov    rbp,rdx
   1400245b0:	lea    rcx,[rbp+0x888]
   1400245b7:	call   0x1400077d0
   1400245bc:	add    rsp,0x20
   1400245c0:	pop    rbp
   1400245c1:	ret    
   1400245c2:	rex push rbp
   1400245c4:	sub    rsp,0x20
   1400245c8:	mov    rbp,rdx
   1400245cb:	lea    rcx,[rbp+0xf0]
   1400245d2:	call   QWORD PTR [rip+0x2788]        # 0x140026d60
   1400245d8:	add    rsp,0x20
   1400245dc:	pop    rbp
   1400245dd:	ret    
   1400245de:	rex push rbp
   1400245e0:	sub    rsp,0x20
   1400245e4:	mov    rbp,rdx
   1400245e7:	lea    rcx,[rbp+0x88]
   1400245ee:	call   QWORD PTR [rip+0x276c]        # 0x140026d60
   1400245f4:	add    rsp,0x20
   1400245f8:	pop    rbp
   1400245f9:	ret    
   1400245fa:	rex push rbp
   1400245fc:	sub    rsp,0x20
   140024600:	mov    rbp,rdx
   140024603:	mov    rcx,QWORD PTR [rbp+0x7a0]
   14002460a:	call   0x1400077d0
   14002460f:	add    rsp,0x20
   140024613:	pop    rbp
   140024614:	ret    
   140024615:	rex push rbp
   140024617:	sub    rsp,0x20
   14002461b:	mov    rbp,rdx
   14002461e:	lea    rcx,[rbp+0x510]
   140024625:	call   0x14001de10
   14002462a:	add    rsp,0x20
   14002462e:	pop    rbp
   14002462f:	ret    
   140024630:	rex push rbp
   140024632:	sub    rsp,0x20
   140024636:	mov    rbp,rdx
   140024639:	lea    rcx,[rbp+0x7c0]
   140024640:	call   0x1400077d0
   140024645:	add    rsp,0x20
   140024649:	pop    rbp
   14002464a:	ret    
   14002464b:	rex push rbp
   14002464d:	sub    rsp,0x20
   140024651:	mov    rbp,rdx
   140024654:	lea    rcx,[rbp+0xe8]
   14002465b:	call   QWORD PTR [rip+0x26ff]        # 0x140026d60
   140024661:	add    rsp,0x20
   140024665:	pop    rbp
   140024666:	ret    
   140024667:	rex push rbp
   140024669:	sub    rsp,0x20
   14002466d:	mov    rbp,rdx
   140024670:	lea    rcx,[rbp+0x68]
   140024674:	call   QWORD PTR [rip+0x26e6]        # 0x140026d60
   14002467a:	add    rsp,0x20
   14002467e:	pop    rbp
   14002467f:	ret    
   140024680:	rex push rbp
   140024682:	sub    rsp,0x20
   140024686:	mov    rbp,rdx
   140024689:	mov    rcx,QWORD PTR [rbp+0x138]
   140024690:	call   0x1400077d0
   140024695:	add    rsp,0x20
   140024699:	pop    rbp
   14002469a:	ret    
   14002469b:	rex push rbp
   14002469d:	sub    rsp,0x20
   1400246a1:	mov    rbp,rdx
   1400246a4:	lea    rcx,[rbp+0x560]
   1400246ab:	call   0x14001de10
   1400246b0:	add    rsp,0x20
   1400246b4:	pop    rbp
   1400246b5:	ret    
   1400246b6:	rex push rbp
   1400246b8:	sub    rsp,0x20
   1400246bc:	mov    rbp,rdx
   1400246bf:	lea    rcx,[rbp+0x8d8]
   1400246c6:	call   0x1400077d0
   1400246cb:	add    rsp,0x20
   1400246cf:	pop    rbp
   1400246d0:	ret    
   1400246d1:	rex push rbp
   1400246d3:	sub    rsp,0x20
   1400246d7:	mov    rbp,rdx
   1400246da:	lea    rcx,[rbp+0x100]
   1400246e1:	call   QWORD PTR [rip+0x2679]        # 0x140026d60
   1400246e7:	add    rsp,0x20
   1400246eb:	pop    rbp
   1400246ec:	ret    
   1400246ed:	rex push rbp
   1400246ef:	sub    rsp,0x20
   1400246f3:	mov    rbp,rdx
   1400246f6:	lea    rcx,[rbp+0x60]
   1400246fa:	call   QWORD PTR [rip+0x2660]        # 0x140026d60
   140024700:	add    rsp,0x20
   140024704:	pop    rbp
   140024705:	ret    
   140024706:	rex push rbp
   140024708:	sub    rsp,0x20
   14002470c:	mov    rbp,rdx
   14002470f:	mov    rcx,QWORD PTR [rbp+0x7f0]
   140024716:	call   0x1400077d0
   14002471b:	add    rsp,0x20
   14002471f:	pop    rbp
   140024720:	ret    
   140024721:	rex push rbp
   140024723:	sub    rsp,0x20
   140024727:	mov    rbp,rdx
   14002472a:	lea    rcx,[rbp+0x5b0]
   140024731:	call   0x14001de10
   140024736:	add    rsp,0x20
   14002473a:	pop    rbp
   14002473b:	ret    
   14002473c:	rex push rbp
   14002473e:	sub    rsp,0x20
   140024742:	mov    rbp,rdx
   140024745:	lea    rcx,[rbp+0x810]
   14002474c:	call   0x1400077d0
   140024751:	add    rsp,0x20
   140024755:	pop    rbp
   140024756:	ret    
   140024757:	rex push rbp
   140024759:	sub    rsp,0x20
   14002475d:	mov    rbp,rdx
   140024760:	lea    rcx,[rbp+0xc0]
   140024767:	call   QWORD PTR [rip+0x25f3]        # 0x140026d60
   14002476d:	add    rsp,0x20
   140024771:	pop    rbp
   140024772:	ret    
   140024773:	rex push rbp
   140024775:	sub    rsp,0x20
   140024779:	mov    rbp,rdx
   14002477c:	lea    rcx,[rbp+0x70]
   140024780:	call   QWORD PTR [rip+0x25da]        # 0x140026d60
   140024786:	add    rsp,0x20
   14002478a:	pop    rbp
   14002478b:	ret    
   14002478c:	rex push rbp
   14002478e:	sub    rsp,0x20
   140024792:	mov    rbp,rdx
   140024795:	mov    rcx,QWORD PTR [rbp+0x148]
   14002479c:	call   0x1400077d0
   1400247a1:	add    rsp,0x20
   1400247a5:	pop    rbp
   1400247a6:	ret    
   1400247a7:	rex push rbp
   1400247a9:	sub    rsp,0x20
   1400247ad:	mov    rbp,rdx
   1400247b0:	lea    rcx,[rbp+0x90]
   1400247b7:	call   0x14001de10
   1400247bc:	add    rsp,0x20
   1400247c0:	pop    rbp
   1400247c1:	ret    
   1400247c2:	rex push rbp
   1400247c4:	sub    rsp,0x20
   1400247c8:	mov    rbp,rdx
   1400247cb:	lea    rcx,[rbp+0xa68]
   1400247d2:	call   0x140017fb0
   1400247d7:	add    rsp,0x20
   1400247db:	pop    rbp
   1400247dc:	ret    
   1400247dd:	rex push rbp
   1400247df:	sub    rsp,0x20
   1400247e3:	mov    rbp,rdx
   1400247e6:	lea    rcx,[rbp+0x80]
   1400247ed:	call   QWORD PTR [rip+0x256d]        # 0x140026d60
   1400247f3:	add    rsp,0x20
   1400247f7:	pop    rbp
   1400247f8:	ret    
   1400247f9:	rex push rbp
   1400247fb:	sub    rsp,0x20
   1400247ff:	mov    rbp,rdx
   140024802:	lea    rcx,[rbp+0xc8]
   140024809:	call   0x14001de10
   14002480e:	add    rsp,0x20
   140024812:	pop    rbp
   140024813:	ret    
   140024814:	rex push rbp
   140024816:	sub    rsp,0x20
   14002481a:	mov    rbp,rdx
   14002481d:	lea    rcx,[rbp+0x198]
   140024824:	call   0x14001de10
   140024829:	add    rsp,0x20
   14002482d:	pop    rbp
   14002482e:	ret    
   14002482f:	rex push rbp
   140024831:	sub    rsp,0x20
   140024835:	mov    rbp,rdx
   140024838:	mov    rcx,QWORD PTR [rbp+0x1a8]
   14002483f:	call   0x1400077d0
   140024844:	add    rsp,0x20
   140024848:	pop    rbp
   140024849:	ret    
   14002484a:	rex push rbp
   14002484c:	sub    rsp,0x20
   140024850:	mov    rbp,rdx
   140024853:	lea    rcx,[rbp+0x1f8]
   14002485a:	call   0x14001de10
   14002485f:	add    rsp,0x20
   140024863:	pop    rbp
   140024864:	ret    
   140024865:	rex push rbp
   140024867:	sub    rsp,0x20
   14002486b:	mov    rbp,rdx
   14002486e:	lea    rcx,[rbp+0x228]
   140024875:	call   0x1400077d0
   14002487a:	add    rsp,0x20
   14002487e:	pop    rbp
   14002487f:	ret    
   140024880:	rex push rbp
   140024882:	sub    rsp,0x20
   140024886:	mov    rbp,rdx
   140024889:	mov    rcx,QWORD PTR [rbp+0x238]
   140024890:	call   0x1400077d0
   140024895:	add    rsp,0x20
   140024899:	pop    rbp
   14002489a:	ret    
   14002489b:	rex push rbp
   14002489d:	sub    rsp,0x20
   1400248a1:	mov    rbp,rdx
   1400248a4:	lea    rcx,[rbp+0x288]
   1400248ab:	call   0x14001de10
   1400248b0:	add    rsp,0x20
   1400248b4:	pop    rbp
   1400248b5:	ret    
   1400248b6:	rex push rbp
   1400248b8:	sub    rsp,0x20
   1400248bc:	mov    rbp,rdx
   1400248bf:	lea    rcx,[rbp+0x2b8]
   1400248c6:	call   0x1400077d0
   1400248cb:	add    rsp,0x20
   1400248cf:	pop    rbp
   1400248d0:	ret    
   1400248d1:	rex push rbp
   1400248d3:	sub    rsp,0x20
   1400248d7:	mov    rbp,rdx
   1400248da:	mov    rcx,QWORD PTR [rbp+0x2c8]
   1400248e1:	call   0x1400077d0
   1400248e6:	add    rsp,0x20
   1400248ea:	pop    rbp
   1400248eb:	ret    
   1400248ec:	rex push rbp
   1400248ee:	sub    rsp,0x20
   1400248f2:	mov    rbp,rdx
   1400248f5:	lea    rcx,[rbp+0x318]
   1400248fc:	call   0x14001de10
   140024901:	add    rsp,0x20
   140024905:	pop    rbp
   140024906:	ret    
   140024907:	rex push rbp
   140024909:	sub    rsp,0x20
   14002490d:	mov    rbp,rdx
   140024910:	lea    rcx,[rbp+0x348]
   140024917:	call   0x1400077d0
   14002491c:	add    rsp,0x20
   140024920:	pop    rbp
   140024921:	ret    
   140024922:	rex push rbp
   140024924:	sub    rsp,0x20
   140024928:	mov    rbp,rdx
   14002492b:	mov    rcx,QWORD PTR [rbp+0x358]
   140024932:	call   0x1400077d0
   140024937:	add    rsp,0x20
   14002493b:	pop    rbp
   14002493c:	ret    
   14002493d:	rex push rbp
   14002493f:	sub    rsp,0x20
   140024943:	mov    rbp,rdx
   140024946:	lea    rcx,[rbp+0x3a8]
   14002494d:	call   0x14001de10
   140024952:	add    rsp,0x20
   140024956:	pop    rbp
   140024957:	ret    
   140024958:	rex push rbp
   14002495a:	sub    rsp,0x20
   14002495e:	mov    rbp,rdx
   140024961:	lea    rcx,[rbp+0x3d8]
   140024968:	call   0x14001de10
   14002496d:	add    rsp,0x20
   140024971:	pop    rbp
   140024972:	ret    
   140024973:	rex push rbp
   140024975:	sub    rsp,0x20
   140024979:	mov    rbp,rdx
   14002497c:	mov    rcx,QWORD PTR [rbp+0x3e8]
   140024983:	call   0x1400077d0
   140024988:	add    rsp,0x20
   14002498c:	pop    rbp
   14002498d:	ret    
   14002498e:	rex push rbp
   140024990:	sub    rsp,0x20
   140024994:	mov    rbp,rdx
   140024997:	lea    rcx,[rbp+0x438]
   14002499e:	call   0x14001de10
   1400249a3:	add    rsp,0x20
   1400249a7:	pop    rbp
   1400249a8:	ret    
   1400249a9:	rex push rbp
   1400249ab:	sub    rsp,0x20
   1400249af:	mov    rbp,rdx
   1400249b2:	lea    rcx,[rbp+0x468]
   1400249b9:	call   0x1400077d0
   1400249be:	add    rsp,0x20
   1400249c2:	pop    rbp
   1400249c3:	ret    
   1400249c4:	rex push rbp
   1400249c6:	sub    rsp,0x20
   1400249ca:	mov    rbp,rdx
   1400249cd:	mov    rcx,QWORD PTR [rbp+0x478]
   1400249d4:	call   0x1400077d0
   1400249d9:	add    rsp,0x20
   1400249dd:	pop    rbp
   1400249de:	ret    
   1400249df:	rex push rbp
   1400249e1:	sub    rsp,0x20
   1400249e5:	mov    rbp,rdx
   1400249e8:	lea    rcx,[rbp+0x4c8]
   1400249ef:	call   0x14001de10
   1400249f4:	add    rsp,0x20
   1400249f8:	pop    rbp
   1400249f9:	ret    
   1400249fa:	rex push rbp
   1400249fc:	sub    rsp,0x20
   140024a00:	mov    rbp,rdx
   140024a03:	lea    rcx,[rbp+0x4f8]
   140024a0a:	call   0x1400077d0
   140024a0f:	add    rsp,0x20
   140024a13:	pop    rbp
   140024a14:	ret    
   140024a15:	rex push rbp
   140024a17:	sub    rsp,0x20
   140024a1b:	mov    rbp,rdx
   140024a1e:	mov    rcx,QWORD PTR [rbp+0x508]
   140024a25:	call   0x1400077d0
   140024a2a:	add    rsp,0x20
   140024a2e:	pop    rbp
   140024a2f:	ret    
   140024a30:	rex push rbp
   140024a32:	sub    rsp,0x20
   140024a36:	mov    rbp,rdx
   140024a39:	lea    rcx,[rbp+0x558]
   140024a40:	call   0x14001de10
   140024a45:	add    rsp,0x20
   140024a49:	pop    rbp
   140024a4a:	ret    
   140024a4b:	rex push rbp
   140024a4d:	sub    rsp,0x20
   140024a51:	mov    rbp,rdx
   140024a54:	lea    rcx,[rbp+0x588]
   140024a5b:	call   0x1400077d0
   140024a60:	add    rsp,0x20
   140024a64:	pop    rbp
   140024a65:	ret    
   140024a66:	rex push rbp
   140024a68:	sub    rsp,0x20
   140024a6c:	mov    rbp,rdx
   140024a6f:	lea    rcx,[rbp+0x110]
   140024a76:	call   QWORD PTR [rip+0x22e4]        # 0x140026d60
   140024a7c:	add    rsp,0x20
   140024a80:	pop    rbp
   140024a81:	ret    
   140024a82:	rex push rbp
   140024a84:	sub    rsp,0x20
   140024a88:	mov    rbp,rdx
   140024a8b:	mov    rcx,QWORD PTR [rbp+0x598]
   140024a92:	call   0x1400077d0
   140024a97:	add    rsp,0x20
   140024a9b:	pop    rbp
   140024a9c:	ret    
   140024a9d:	rex push rbp
   140024a9f:	sub    rsp,0x20
   140024aa3:	mov    rbp,rdx
   140024aa6:	lea    rcx,[rbp+0x5e8]
   140024aad:	call   0x14001de10
   140024ab2:	add    rsp,0x20
   140024ab6:	pop    rbp
   140024ab7:	ret    
   140024ab8:	rex push rbp
   140024aba:	sub    rsp,0x20
   140024abe:	mov    rbp,rdx
   140024ac1:	lea    rcx,[rbp+0x618]
   140024ac8:	call   0x1400077d0
   140024acd:	add    rsp,0x20
   140024ad1:	pop    rbp
   140024ad2:	ret    
   140024ad3:	rex push rbp
   140024ad5:	sub    rsp,0x20
   140024ad9:	mov    rbp,rdx
   140024adc:	mov    rcx,QWORD PTR [rbp+0x628]
   140024ae3:	call   0x1400077d0
   140024ae8:	add    rsp,0x20
   140024aec:	pop    rbp
   140024aed:	ret    
   140024aee:	rex push rbp
   140024af0:	sub    rsp,0x20
   140024af4:	mov    rbp,rdx
   140024af7:	lea    rcx,[rbp+0x678]
   140024afe:	call   0x14001de10
   140024b03:	add    rsp,0x20
   140024b07:	pop    rbp
   140024b08:	ret    
   140024b09:	rex push rbp
   140024b0b:	sub    rsp,0x20
   140024b0f:	mov    rbp,rdx
   140024b12:	lea    rcx,[rbp+0xa0]
   140024b19:	call   QWORD PTR [rip+0x2241]        # 0x140026d60
   140024b1f:	add    rsp,0x20
   140024b23:	pop    rbp
   140024b24:	ret    
   140024b25:	rex push rbp
   140024b27:	sub    rsp,0x20
   140024b2b:	mov    rbp,rdx
   140024b2e:	lea    rcx,[rbp+0x6b8]
   140024b35:	call   0x1400077d0
   140024b3a:	add    rsp,0x20
   140024b3e:	pop    rbp
   140024b3f:	ret    
   140024b40:	rex push rbp
   140024b42:	sub    rsp,0x20
   140024b46:	mov    rbp,rdx
   140024b49:	mov    rcx,QWORD PTR [rbp+0x6c8]
   140024b50:	call   0x1400077d0
   140024b55:	add    rsp,0x20
   140024b59:	pop    rbp
   140024b5a:	ret    
   140024b5b:	rex push rbp
   140024b5d:	sub    rsp,0x20
   140024b61:	mov    rbp,rdx
   140024b64:	lea    rcx,[rbp+0xb0]
   140024b6b:	call   0x14001de10
   140024b70:	add    rsp,0x20
   140024b74:	pop    rbp
   140024b75:	ret    
   140024b76:	rex push rbp
   140024b78:	sub    rsp,0x20
   140024b7c:	mov    rbp,rdx
   140024b7f:	lea    rcx,[rbp+0x128]
   140024b86:	call   0x14001df20
   140024b8b:	add    rsp,0x20
   140024b8f:	pop    rbp
   140024b90:	ret    
   140024b91:	rex push rbp
   140024b93:	sub    rsp,0x20
   140024b97:	mov    rbp,rdx
   140024b9a:	lea    rcx,[rbp+0x848]
   140024ba1:	call   QWORD PTR [rip+0x21b9]        # 0x140026d60
   140024ba7:	add    rsp,0x20
   140024bab:	pop    rbp
   140024bac:	ret    
   140024bad:	rex push rbp
   140024baf:	sub    rsp,0x20
   140024bb3:	mov    rbp,rdx
   140024bb6:	lea    rcx,[rbp+0xe0]
   140024bbd:	call   0x14001de10
   140024bc2:	add    rsp,0x20
   140024bc6:	pop    rbp
   140024bc7:	ret    
   140024bc8:	rex push rbp
   140024bca:	sub    rsp,0x20
   140024bce:	mov    rbp,rdx
   140024bd1:	lea    rcx,[rbp+0x718]
   140024bd8:	call   0x14001de10
   140024bdd:	add    rsp,0x20
   140024be1:	pop    rbp
   140024be2:	ret    
   140024be3:	rex push rbp
   140024be5:	sub    rsp,0x20
   140024be9:	mov    rbp,rdx
   140024bec:	mov    rcx,QWORD PTR [rbp+0x728]
   140024bf3:	call   0x1400077d0
   140024bf8:	add    rsp,0x20
   140024bfc:	pop    rbp
   140024bfd:	ret    
   140024bfe:	rex push rbp
   140024c00:	sub    rsp,0x20
   140024c04:	mov    rbp,rdx
   140024c07:	lea    rcx,[rbp+0x778]
   140024c0e:	call   0x14001de10
   140024c13:	add    rsp,0x20
   140024c17:	pop    rbp
   140024c18:	ret    
   140024c19:	rex push rbp
   140024c1b:	sub    rsp,0x20
   140024c1f:	mov    rbp,rdx
   140024c22:	lea    rcx,[rbp+0x7a8]
   140024c29:	call   0x1400077d0
   140024c2e:	add    rsp,0x20
   140024c32:	pop    rbp
   140024c33:	ret    
   140024c34:	rex push rbp
   140024c36:	sub    rsp,0x20
   140024c3a:	mov    rbp,rdx
   140024c3d:	mov    rcx,QWORD PTR [rbp+0x7b8]
   140024c44:	call   0x1400077d0
   140024c49:	add    rsp,0x20
   140024c4d:	pop    rbp
   140024c4e:	ret    
   140024c4f:	rex push rbp
   140024c51:	sub    rsp,0x20
   140024c55:	mov    rbp,rdx
   140024c58:	lea    rcx,[rbp+0x808]
   140024c5f:	call   0x14001de10
   140024c64:	add    rsp,0x20
   140024c68:	pop    rbp
   140024c69:	ret    
   140024c6a:	rex push rbp
   140024c6c:	sub    rsp,0x20
   140024c70:	mov    rbp,rdx
   140024c73:	lea    rcx,[rbp+0x838]
   140024c7a:	call   0x1400077d0
   140024c7f:	add    rsp,0x20
   140024c83:	pop    rbp
   140024c84:	ret    
   140024c85:	rex push rbp
   140024c87:	sub    rsp,0x20
   140024c8b:	mov    rbp,rdx
   140024c8e:	lea    rcx,[rbp+0x40]
   140024c92:	call   QWORD PTR [rip+0x20c8]        # 0x140026d60
   140024c98:	add    rsp,0x20
   140024c9c:	pop    rbp
   140024c9d:	ret    
   140024c9e:	rex push rbp
   140024ca0:	sub    rsp,0x20
   140024ca4:	mov    rbp,rdx
   140024ca7:	lea    rcx,[rbp+0x38]
   140024cab:	call   QWORD PTR [rip+0x20af]        # 0x140026d60
   140024cb1:	add    rsp,0x20
   140024cb5:	pop    rbp
   140024cb6:	ret    
   140024cb7:	rex push rbp
   140024cb9:	sub    rsp,0x20
   140024cbd:	mov    rbp,rdx
   140024cc0:	lea    rcx,[rbp+0x30]
   140024cc4:	call   QWORD PTR [rip+0x2096]        # 0x140026d60
   140024cca:	add    rsp,0x20
   140024cce:	pop    rbp
   140024ccf:	ret    
   140024cd0:	rex push rbp
   140024cd2:	sub    rsp,0x20
   140024cd6:	mov    rbp,rdx
   140024cd9:	lea    rcx,[rbp+0x48]
   140024cdd:	call   QWORD PTR [rip+0x207d]        # 0x140026d60
   140024ce3:	add    rsp,0x20
   140024ce7:	pop    rbp
   140024ce8:	ret    
   140024ce9:	rex push rbp
   140024ceb:	sub    rsp,0x20
   140024cef:	mov    rbp,rdx
   140024cf2:	lea    rcx,[rbp+0x48]
   140024cf6:	call   QWORD PTR [rip+0x2064]        # 0x140026d60
   140024cfc:	add    rsp,0x20
   140024d00:	pop    rbp
   140024d01:	ret    
   140024d02:	rex push rbp
   140024d04:	sub    rsp,0x20
   140024d08:	mov    rbp,rdx
   140024d0b:	lea    rcx,[rbp+0x40]
   140024d0f:	call   QWORD PTR [rip+0x204b]        # 0x140026d60
   140024d15:	add    rsp,0x20
   140024d19:	pop    rbp
   140024d1a:	ret    
   140024d1b:	rex push rbp
   140024d1d:	sub    rsp,0x20
   140024d21:	mov    rbp,rdx
   140024d24:	lea    rcx,[rbp+0x30]
   140024d28:	call   QWORD PTR [rip+0x2032]        # 0x140026d60
   140024d2e:	add    rsp,0x20
   140024d32:	pop    rbp
   140024d33:	ret    
   140024d34:	rex push rbp
   140024d36:	sub    rsp,0x20
   140024d3a:	mov    rbp,rdx
   140024d3d:	lea    rcx,[rbp+0x78]
   140024d41:	call   0x140009e60
   140024d46:	add    rsp,0x20
   140024d4a:	pop    rbp
   140024d4b:	ret    
   140024d4c:	rex push rbp
   140024d4e:	sub    rsp,0x20
   140024d52:	mov    rbp,rdx
   140024d55:	lea    rcx,[rbp+0x28]
   140024d59:	call   QWORD PTR [rip+0x2001]        # 0x140026d60
   140024d5f:	add    rsp,0x20
   140024d63:	pop    rbp
   140024d64:	ret    
   140024d65:	rex push rbp
   140024d67:	sub    rsp,0x20
   140024d6b:	mov    rbp,rdx
   140024d6e:	mov    eax,DWORD PTR [rbp+0x20]
   140024d71:	and    eax,0x1
   140024d74:	test   eax,eax
   140024d76:	je     0x140024d86
   140024d78:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140024d7c:	mov    rcx,QWORD PTR [rbp+0x48]
   140024d80:	call   QWORD PTR [rip+0x1fda]        # 0x140026d60
   140024d86:	add    rsp,0x20
   140024d8a:	pop    rbp
   140024d8b:	ret    
   140024d8c:	rex push rbp
   140024d8e:	sub    rsp,0x20
   140024d92:	mov    rbp,rdx
   140024d95:	lea    rcx,[rbp+0x28]
   140024d99:	call   QWORD PTR [rip+0x1fc1]        # 0x140026d60
   140024d9f:	add    rsp,0x20
   140024da3:	pop    rbp
   140024da4:	ret    
   140024da5:	rex push rbp
   140024da7:	sub    rsp,0x20
   140024dab:	mov    rbp,rdx
   140024dae:	lea    rcx,[rbp+0x38]
   140024db2:	call   QWORD PTR [rip+0x1fa8]        # 0x140026d60
   140024db8:	add    rsp,0x20
   140024dbc:	pop    rbp
   140024dbd:	ret    
   140024dbe:	rex push rbp
   140024dc0:	sub    rsp,0x20
   140024dc4:	mov    rbp,rdx
   140024dc7:	mov    eax,DWORD PTR [rbp+0x20]
   140024dca:	and    eax,0x1
   140024dcd:	test   eax,eax
   140024dcf:	je     0x140024ddf
   140024dd1:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140024dd5:	mov    rcx,QWORD PTR [rbp+0x78]
   140024dd9:	call   QWORD PTR [rip+0x1f81]        # 0x140026d60
   140024ddf:	add    rsp,0x20
   140024de3:	pop    rbp
   140024de4:	ret    
   140024de5:	rex push rbp
   140024de7:	sub    rsp,0x20
   140024deb:	mov    rbp,rdx
   140024dee:	lea    rcx,[rbp+0x30]
   140024df2:	call   QWORD PTR [rip+0x1f68]        # 0x140026d60
   140024df8:	add    rsp,0x20
   140024dfc:	pop    rbp
   140024dfd:	ret    
   140024dfe:	rex push rbp
   140024e00:	sub    rsp,0x20
   140024e04:	mov    rbp,rdx
   140024e07:	lea    rcx,[rbp+0x30]
   140024e0b:	call   QWORD PTR [rip+0x1f4f]        # 0x140026d60
   140024e11:	add    rsp,0x20
   140024e15:	pop    rbp
   140024e16:	ret    
   140024e17:	rex push rbp
   140024e19:	sub    rsp,0x20
   140024e1d:	mov    rbp,rdx
   140024e20:	lea    rcx,[rbp+0x30]
   140024e24:	call   QWORD PTR [rip+0x1f36]        # 0x140026d60
   140024e2a:	add    rsp,0x20
   140024e2e:	pop    rbp
   140024e2f:	ret    
   140024e30:	rex push rbp
   140024e32:	sub    rsp,0x20
   140024e36:	mov    rbp,rdx
   140024e39:	lea    rcx,[rbp+0x28]
   140024e3d:	call   QWORD PTR [rip+0x1f1d]        # 0x140026d60
   140024e43:	add    rsp,0x20
   140024e47:	pop    rbp
   140024e48:	ret    
   140024e49:	rex push rbp
   140024e4b:	sub    rsp,0x20
   140024e4f:	mov    rbp,rdx
   140024e52:	mov    eax,DWORD PTR [rbp+0x20]
   140024e55:	and    eax,0x1
   140024e58:	test   eax,eax
   140024e5a:	je     0x140024e6a
   140024e5c:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140024e60:	mov    rcx,QWORD PTR [rbp+0x58]
   140024e64:	call   QWORD PTR [rip+0x1ef6]        # 0x140026d60
   140024e6a:	add    rsp,0x20
   140024e6e:	pop    rbp
   140024e6f:	ret    
   140024e70:	rex push rbp
   140024e72:	sub    rsp,0x20
   140024e76:	mov    rbp,rdx
   140024e79:	lea    rcx,[rbp+0x28]
   140024e7d:	call   QWORD PTR [rip+0x1edd]        # 0x140026d60
   140024e83:	add    rsp,0x20
   140024e87:	pop    rbp
   140024e88:	ret    
   140024e89:	rex push rbp
   140024e8b:	sub    rsp,0x20
   140024e8f:	mov    rbp,rdx
   140024e92:	mov    eax,DWORD PTR [rbp+0x20]
   140024e95:	and    eax,0x1
   140024e98:	test   eax,eax
   140024e9a:	je     0x140024eaa
   140024e9c:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140024ea0:	mov    rcx,QWORD PTR [rbp+0x68]
   140024ea4:	call   QWORD PTR [rip+0x1eb6]        # 0x140026d60
   140024eaa:	add    rsp,0x20
   140024eae:	pop    rbp
   140024eaf:	ret    
   140024eb0:	rex push rbp
   140024eb2:	sub    rsp,0x20
   140024eb6:	mov    rbp,rdx
   140024eb9:	lea    rcx,[rbp+0x28]
   140024ebd:	call   QWORD PTR [rip+0x1e9d]        # 0x140026d60
   140024ec3:	add    rsp,0x20
   140024ec7:	pop    rbp
   140024ec8:	ret    
   140024ec9:	rex push rbp
   140024ecb:	sub    rsp,0x20
   140024ecf:	mov    rbp,rdx
   140024ed2:	mov    eax,DWORD PTR [rbp+0x20]
   140024ed5:	and    eax,0x1
   140024ed8:	test   eax,eax
   140024eda:	je     0x140024eea
   140024edc:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140024ee0:	mov    rcx,QWORD PTR [rbp+0x68]
   140024ee4:	call   QWORD PTR [rip+0x1e76]        # 0x140026d60
   140024eea:	add    rsp,0x20
   140024eee:	pop    rbp
   140024eef:	ret    
   140024ef0:	rex push rbp
   140024ef2:	sub    rsp,0x20
   140024ef6:	mov    rbp,rdx
   140024ef9:	lea    rcx,[rbp+0x50]
   140024efd:	call   QWORD PTR [rip+0x1e5d]        # 0x140026d60
   140024f03:	add    rsp,0x20
   140024f07:	pop    rbp
   140024f08:	ret    
   140024f09:	rex push rbp
   140024f0b:	sub    rsp,0x20
   140024f0f:	mov    rbp,rdx
   140024f12:	lea    rcx,[rbp+0x30]
   140024f16:	call   QWORD PTR [rip+0x1e44]        # 0x140026d60
   140024f1c:	add    rsp,0x20
   140024f20:	pop    rbp
   140024f21:	ret    
   140024f22:	rex push rbp
   140024f24:	sub    rsp,0x20
   140024f28:	mov    rbp,rdx
   140024f2b:	lea    rcx,[rbp+0x48]
   140024f2f:	call   QWORD PTR [rip+0x1e2b]        # 0x140026d60
   140024f35:	add    rsp,0x20
   140024f39:	pop    rbp
   140024f3a:	ret    
   140024f3b:	rex push rbp
   140024f3d:	sub    rsp,0x20
   140024f41:	mov    rbp,rdx
   140024f44:	lea    rcx,[rbp+0x60]
   140024f48:	call   QWORD PTR [rip+0x1e12]        # 0x140026d60
   140024f4e:	add    rsp,0x20
   140024f52:	pop    rbp
   140024f53:	ret    
   140024f54:	rex push rbp
   140024f56:	sub    rsp,0x20
   140024f5a:	mov    rbp,rdx
   140024f5d:	lea    rcx,[rbp+0x40]
   140024f61:	call   QWORD PTR [rip+0x1df9]        # 0x140026d60
   140024f67:	add    rsp,0x20
   140024f6b:	pop    rbp
   140024f6c:	ret    
   140024f6d:	rex push rbp
   140024f6f:	sub    rsp,0x20
   140024f73:	mov    rbp,rdx
   140024f76:	lea    rcx,[rbp+0x38]
   140024f7a:	call   QWORD PTR [rip+0x1de0]        # 0x140026d60
   140024f80:	add    rsp,0x20
   140024f84:	pop    rbp
   140024f85:	ret    
   140024f86:	rex push rbp
   140024f88:	sub    rsp,0x20
   140024f8c:	mov    rbp,rdx
   140024f8f:	lea    rcx,[rbp+0x20]
   140024f93:	call   0x14001de10
   140024f98:	add    rsp,0x20
   140024f9c:	pop    rbp
   140024f9d:	ret    
   140024f9e:	rex push rbp
   140024fa0:	sub    rsp,0x20
   140024fa4:	mov    rbp,rdx
   140024fa7:	lea    rcx,[rbp+0x1c8]
   140024fae:	call   0x140008570
   140024fb3:	add    rsp,0x20
   140024fb7:	pop    rbp
   140024fb8:	ret    
   140024fb9:	rex push rbp
   140024fbb:	sub    rsp,0x20
   140024fbf:	mov    rbp,rdx
   140024fc2:	mov    rcx,QWORD PTR [rbp+0x100]
   140024fc9:	call   0x1400077d0
   140024fce:	add    rsp,0x20
   140024fd2:	pop    rbp
   140024fd3:	ret    
   140024fd4:	rex push rbp
   140024fd6:	sub    rsp,0x20
   140024fda:	mov    rbp,rdx
   140024fdd:	lea    rcx,[rbp+0x40]
   140024fe1:	call   0x14001de10
   140024fe6:	add    rsp,0x20
   140024fea:	pop    rbp
   140024feb:	ret    
   140024fec:	rex push rbp
   140024fee:	sub    rsp,0x20
   140024ff2:	mov    rbp,rdx
   140024ff5:	lea    rcx,[rbp+0x50]
   140024ff9:	call   0x14001de10
   140024ffe:	add    rsp,0x20
   140025002:	pop    rbp
   140025003:	ret    
   140025004:	rex push rbp
   140025006:	sub    rsp,0x20
   14002500a:	mov    rbp,rdx
   14002500d:	lea    rcx,[rbp+0x30]
   140025011:	call   0x14001de10
   140025016:	add    rsp,0x20
   14002501a:	pop    rbp
   14002501b:	ret    
   14002501c:	rex push rbp
   14002501e:	sub    rsp,0x20
   140025022:	mov    rbp,rdx
   140025025:	mov    rcx,QWORD PTR [rbp+0x178]
   14002502c:	call   0x1400077d0
   140025031:	add    rsp,0x20
   140025035:	pop    rbp
   140025036:	ret    
   140025037:	rex push rbp
   140025039:	sub    rsp,0x20
   14002503d:	mov    rbp,rdx
   140025040:	lea    rcx,[rbp+0x28]
   140025044:	call   0x14001de10
   140025049:	add    rsp,0x20
   14002504d:	pop    rbp
   14002504e:	ret    
   14002504f:	rex push rbp
   140025051:	sub    rsp,0x20
   140025055:	mov    rbp,rdx
   140025058:	mov    rcx,QWORD PTR [rbp+0x90]
   14002505f:	call   0x1400077d0
   140025064:	add    rsp,0x20
   140025068:	pop    rbp
   140025069:	ret    
   14002506a:	rex push rbp
   14002506c:	sub    rsp,0x20
   140025070:	mov    rbp,rdx
   140025073:	mov    rcx,QWORD PTR [rbp+0x140]
   14002507a:	call   0x1400077d0
   14002507f:	add    rsp,0x20
   140025083:	pop    rbp
   140025084:	ret    
   140025085:	rex push rbp
   140025087:	sub    rsp,0x20
   14002508b:	mov    rbp,rdx
   14002508e:	lea    rcx,[rbp+0xd0]
   140025095:	call   0x14001de10
   14002509a:	add    rsp,0x20
   14002509e:	pop    rbp
   14002509f:	ret    
   1400250a0:	rex push rbp
   1400250a2:	sub    rsp,0x20
   1400250a6:	mov    rbp,rdx
   1400250a9:	mov    rcx,QWORD PTR [rbp+0x128]
   1400250b0:	call   0x1400077d0
   1400250b5:	add    rsp,0x20
   1400250b9:	pop    rbp
   1400250ba:	ret    
   1400250bb:	rex push rbp
   1400250bd:	sub    rsp,0x20
   1400250c1:	mov    rbp,rdx
   1400250c4:	mov    rcx,QWORD PTR [rbp+0x58]
   1400250c8:	call   0x1400077d0
   1400250cd:	add    rsp,0x20
   1400250d1:	pop    rbp
   1400250d2:	ret    
   1400250d3:	rex push rbp
   1400250d5:	sub    rsp,0x20
   1400250d9:	mov    rbp,rdx
   1400250dc:	lea    rcx,[rbp+0x38]
   1400250e0:	call   0x14001de10
   1400250e5:	add    rsp,0x20
   1400250e9:	pop    rbp
   1400250ea:	ret    
   1400250eb:	rex push rbp
   1400250ed:	sub    rsp,0x20
   1400250f1:	mov    rbp,rdx
   1400250f4:	mov    rcx,QWORD PTR [rbp+0x168]
   1400250fb:	call   0x1400077d0
   140025100:	add    rsp,0x20
   140025104:	pop    rbp
   140025105:	ret    
   140025106:	rex push rbp
   140025108:	sub    rsp,0x20
   14002510c:	mov    rbp,rdx
   14002510f:	mov    rcx,QWORD PTR [rbp+0x78]
   140025113:	call   0x1400077d0
   140025118:	add    rsp,0x20
   14002511c:	pop    rbp
   14002511d:	ret    
   14002511e:	rex push rbp
   140025120:	sub    rsp,0x20
   140025124:	mov    rbp,rdx
   140025127:	lea    rcx,[rbp+0xc8]
   14002512e:	call   0x14001de10
   140025133:	add    rsp,0x20
   140025137:	pop    rbp
   140025138:	ret    
   140025139:	rex push rbp
   14002513b:	sub    rsp,0x20
   14002513f:	mov    rbp,rdx
   140025142:	mov    rcx,QWORD PTR [rbp+0xd8]
   140025149:	call   0x1400077d0
   14002514e:	add    rsp,0x20
   140025152:	pop    rbp
   140025153:	ret    
   140025154:	rex push rbp
   140025156:	sub    rsp,0x20
   14002515a:	mov    rbp,rdx
   14002515d:	lea    rcx,[rbp+0x1e8]
   140025164:	call   0x140008570
   140025169:	add    rsp,0x20
   14002516d:	pop    rbp
   14002516e:	ret    
   14002516f:	rex push rbp
   140025171:	sub    rsp,0x20
   140025175:	mov    rbp,rdx
   140025178:	lea    rcx,[rbp+0x20]
   14002517c:	call   0x14001de10
   140025181:	add    rsp,0x20
   140025185:	pop    rbp
   140025186:	ret    
   140025187:	rex push rbp
   140025189:	sub    rsp,0x20
   14002518d:	mov    rbp,rdx
   140025190:	lea    rcx,[rbp+0x160]
   140025197:	call   0x140008570
   14002519c:	add    rsp,0x20
   1400251a0:	pop    rbp
   1400251a1:	ret    
   1400251a2:	rex push rbp
   1400251a4:	sub    rsp,0x20
   1400251a8:	mov    rbp,rdx
   1400251ab:	mov    rcx,QWORD PTR [rbp+0x110]
   1400251b2:	call   0x1400077d0
   1400251b7:	add    rsp,0x20
   1400251bb:	pop    rbp
   1400251bc:	ret    
   1400251bd:	rex push rbp
   1400251bf:	sub    rsp,0x20
   1400251c3:	mov    rbp,rdx
   1400251c6:	lea    rcx,[rbp+0x28]
   1400251ca:	call   0x14001de10
   1400251cf:	add    rsp,0x20
   1400251d3:	pop    rbp
   1400251d4:	ret    
   1400251d5:	rex push rbp
   1400251d7:	sub    rsp,0x20
   1400251db:	mov    rbp,rdx
   1400251de:	lea    rcx,[rbp+0x50]
   1400251e2:	call   0x14001de10
   1400251e7:	add    rsp,0x20
   1400251eb:	pop    rbp
   1400251ec:	ret    
   1400251ed:	rex push rbp
   1400251ef:	sub    rsp,0x20
   1400251f3:	mov    rbp,rdx
   1400251f6:	lea    rcx,[rbp+0x38]
   1400251fa:	call   0x14001de10
   1400251ff:	add    rsp,0x20
   140025203:	pop    rbp
   140025204:	ret    
   140025205:	rex push rbp
   140025207:	sub    rsp,0x20
   14002520b:	mov    rbp,rdx
   14002520e:	mov    rcx,QWORD PTR [rbp+0x78]
   140025212:	call   0x1400077d0
   140025217:	add    rsp,0x20
   14002521b:	pop    rbp
   14002521c:	ret    
   14002521d:	rex push rbp
   14002521f:	sub    rsp,0x20
   140025223:	mov    rbp,rdx
   140025226:	lea    rcx,[rbp+0x40]
   14002522a:	call   0x14001de10
   14002522f:	add    rsp,0x20
   140025233:	pop    rbp
   140025234:	ret    
   140025235:	rex push rbp
   140025237:	sub    rsp,0x20
   14002523b:	mov    rbp,rdx
   14002523e:	mov    rcx,QWORD PTR [rbp+0x118]
   140025245:	call   0x1400077d0
   14002524a:	add    rsp,0x20
   14002524e:	pop    rbp
   14002524f:	ret    
   140025250:	rex push rbp
   140025252:	sub    rsp,0x20
   140025256:	mov    rbp,rdx
   140025259:	mov    rcx,QWORD PTR [rbp+0xa8]
   140025260:	call   0x1400077d0
   140025265:	add    rsp,0x20
   140025269:	pop    rbp
   14002526a:	ret    
   14002526b:	rex push rbp
   14002526d:	sub    rsp,0x20
   140025271:	mov    rbp,rdx
   140025274:	mov    rcx,QWORD PTR [rbp+0x100]
   14002527b:	call   0x1400077d0
   140025280:	add    rsp,0x20
   140025284:	pop    rbp
   140025285:	ret    
   140025286:	rex push rbp
   140025288:	sub    rsp,0x20
   14002528c:	mov    rbp,rdx
   14002528f:	lea    rcx,[rbp+0xe8]
   140025296:	call   0x14001de10
   14002529b:	add    rsp,0x20
   14002529f:	pop    rbp
   1400252a0:	ret    
   1400252a1:	rex push rbp
   1400252a3:	sub    rsp,0x20
   1400252a7:	mov    rbp,rdx
   1400252aa:	lea    rcx,[rbp+0x30]
   1400252ae:	call   0x14001de10
   1400252b3:	add    rsp,0x20
   1400252b7:	pop    rbp
   1400252b8:	ret    
   1400252b9:	rex push rbp
   1400252bb:	sub    rsp,0x20
   1400252bf:	mov    rbp,rdx
   1400252c2:	mov    rcx,QWORD PTR [rbp+0x60]
   1400252c6:	call   0x1400077d0
   1400252cb:	add    rsp,0x20
   1400252cf:	pop    rbp
   1400252d0:	ret    
   1400252d1:	rex push rbp
   1400252d3:	sub    rsp,0x20
   1400252d7:	mov    rbp,rdx
   1400252da:	mov    rcx,QWORD PTR [rbp+0x90]
   1400252e1:	call   0x1400077d0
   1400252e6:	add    rsp,0x20
   1400252ea:	pop    rbp
   1400252eb:	ret    
   1400252ec:	rex push rbp
   1400252ee:	sub    rsp,0x20
   1400252f2:	mov    rbp,rdx
   1400252f5:	lea    rcx,[rbp+0x180]
   1400252fc:	call   0x140008570
   140025301:	add    rsp,0x20
   140025305:	pop    rbp
   140025306:	ret    
   140025307:	mov    QWORD PTR [rsp+0x10],rdx
   14002530c:	push   rbp
   14002530d:	sub    rsp,0x20
   140025311:	mov    rbp,rdx
   140025314:	mov    r8d,0x8
   14002531a:	xor    edx,edx
   14002531c:	lea    rcx,[rbp+0x28]
   140025320:	call   0x1400216e0
   140025325:	mov    r8d,0x8
   14002532b:	xor    edx,edx
   14002532d:	lea    rcx,[rbp+0x20]
   140025331:	call   0x1400216e0
   140025336:	nop
   140025337:	lea    rax,[rip+0xffffffffffff7d7a]        # 0x14001d0b8
   14002533e:	add    rsp,0x20
   140025342:	pop    rbp
   140025343:	ret    
   140025344:	int3   
   140025345:	int3   
   140025346:	int3   
   140025347:	int3   
   140025348:	int3   
   140025349:	int3   
   14002534a:	int3   
   14002534b:	int3   
   14002534c:	int3   
   14002534d:	int3   
   14002534e:	int3   
   14002534f:	int3   
   140025350:	rex push rbp
   140025352:	sub    rsp,0x20
   140025356:	mov    rbp,rdx
   140025359:	mov    rcx,QWORD PTR [rbp+0x28]
   14002535d:	call   0x14001de10
   140025362:	add    rsp,0x20
   140025366:	pop    rbp
   140025367:	ret    
   140025368:	int3   
   140025369:	int3   
   14002536a:	int3   
   14002536b:	int3   
   14002536c:	int3   
   14002536d:	int3   
   14002536e:	int3   
   14002536f:	int3   
   140025370:	mov    QWORD PTR [rsp+0x10],rdx
   140025375:	push   rbp
   140025376:	sub    rsp,0x20
   14002537a:	mov    rbp,rdx
   14002537d:	lea    rdx,[rbp+0x21]
   140025381:	mov    rcx,QWORD PTR [rbp+0x60]
   140025385:	call   0x14001e910
   14002538a:	mov    r8d,0x1
   140025390:	mov    rdx,QWORD PTR [rbp+0x28]
   140025394:	mov    rcx,rax
   140025397:	call   0x14001ec00
   14002539c:	xor    edx,edx
   14002539e:	xor    ecx,ecx
   1400253a0:	call   0x14002193a
   1400253a5:	nop
   1400253a6:	lea    rax,[rip+0xffffffffffff7f8d]        # 0x14001d33a
   1400253ad:	add    rsp,0x20
   1400253b1:	pop    rbp
   1400253b2:	ret    
   1400253b3:	int3   
   1400253b4:	int3   
   1400253b5:	int3   
   1400253b6:	int3   
   1400253b7:	int3   
   1400253b8:	int3   
   1400253b9:	int3   
   1400253ba:	int3   
   1400253bb:	int3   
   1400253bc:	int3   
   1400253bd:	int3   
   1400253be:	int3   
   1400253bf:	int3   
   1400253c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400253c5:	push   rbp
   1400253c6:	sub    rsp,0x20
   1400253ca:	mov    rbp,rdx
   1400253cd:	lea    rdx,[rbp+0x21]
   1400253d1:	mov    rcx,QWORD PTR [rbp+0x60]
   1400253d5:	call   0x14001e910
   1400253da:	mov    r8d,0x1
   1400253e0:	mov    rdx,QWORD PTR [rbp+0x28]
   1400253e4:	mov    rcx,rax
   1400253e7:	call   0x14001ec00
   1400253ec:	xor    edx,edx
   1400253ee:	xor    ecx,ecx
   1400253f0:	call   0x14002193a
   1400253f5:	nop
   1400253f6:	lea    rax,[rip+0xffffffffffff7fdd]        # 0x14001d3da
   1400253fd:	add    rsp,0x20
   140025401:	pop    rbp
   140025402:	ret    
   140025403:	int3   
   140025404:	int3   
   140025405:	int3   
   140025406:	int3   
   140025407:	int3   
   140025408:	int3   
   140025409:	int3   
   14002540a:	int3   
   14002540b:	int3   
   14002540c:	int3   
   14002540d:	int3   
   14002540e:	int3   
   14002540f:	int3   
   140025410:	rex push rbp
   140025412:	sub    rsp,0x20
   140025416:	mov    rbp,rdx
   140025419:	mov    rcx,QWORD PTR [rbp+0x68]
   14002541d:	call   0x14001de10
   140025422:	add    rsp,0x20
   140025426:	pop    rbp
   140025427:	ret    
   140025428:	int3   
   140025429:	int3   
   14002542a:	int3   
   14002542b:	int3   
   14002542c:	int3   
   14002542d:	int3   
   14002542e:	int3   
   14002542f:	int3   
   140025430:	rex push rbp
   140025432:	sub    rsp,0x20
   140025436:	mov    rbp,rdx
   140025439:	mov    rcx,QWORD PTR [rbp+0x40]
   14002543d:	call   0x14001dde0
   140025442:	add    rsp,0x20
   140025446:	pop    rbp
   140025447:	ret    
   140025448:	int3   
   140025449:	int3   
   14002544a:	int3   
   14002544b:	int3   
   14002544c:	int3   
   14002544d:	int3   
   14002544e:	int3   
   14002544f:	int3   
   140025450:	rex push rbp
   140025452:	sub    rsp,0x20
   140025456:	mov    rbp,rdx
   140025459:	mov    rcx,QWORD PTR [rbp+0x40]
   14002545d:	call   QWORD PTR [rip+0x18fd]        # 0x140026d60
   140025463:	add    rsp,0x20
   140025467:	pop    rbp
   140025468:	ret    
   140025469:	rex push rbp
   14002546b:	sub    rsp,0x20
   14002546f:	mov    rbp,rdx
   140025472:	mov    rcx,QWORD PTR [rbp+0x40]
   140025476:	add    rcx,0x8
   14002547a:	call   QWORD PTR [rip+0x18e0]        # 0x140026d60
   140025480:	add    rsp,0x20
   140025484:	pop    rbp
   140025485:	ret    
   140025486:	int3   
   140025487:	int3   
   140025488:	int3   
   140025489:	int3   
   14002548a:	int3   
   14002548b:	int3   
   14002548c:	int3   
   14002548d:	int3   
   14002548e:	int3   
   14002548f:	int3   
   140025490:	rex push rbp
   140025492:	sub    rsp,0x20
   140025496:	mov    rbp,rdx
   140025499:	mov    rcx,QWORD PTR [rbp+0x40]
   14002549d:	call   0x14001de30
   1400254a2:	add    rsp,0x20
   1400254a6:	pop    rbp
   1400254a7:	ret    
   1400254a8:	rex push rbp
   1400254aa:	sub    rsp,0x20
   1400254ae:	mov    rbp,rdx
   1400254b1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400254b5:	add    rcx,0x18
   1400254b9:	call   QWORD PTR [rip+0x18a1]        # 0x140026d60
   1400254bf:	add    rsp,0x20
   1400254c3:	pop    rbp
   1400254c4:	ret    
   1400254c5:	rex push rbp
   1400254c7:	sub    rsp,0x20
   1400254cb:	mov    rbp,rdx
   1400254ce:	mov    rcx,QWORD PTR [rbp+0x40]
   1400254d2:	add    rcx,0x20
   1400254d6:	call   QWORD PTR [rip+0x1884]        # 0x140026d60
   1400254dc:	add    rsp,0x20
   1400254e0:	pop    rbp
   1400254e1:	ret    
   1400254e2:	rex push rbp
   1400254e4:	sub    rsp,0x20
   1400254e8:	mov    rbp,rdx
   1400254eb:	mov    rcx,QWORD PTR [rbp+0x40]
   1400254ef:	add    rcx,0x28
   1400254f3:	call   QWORD PTR [rip+0x1867]        # 0x140026d60
   1400254f9:	add    rsp,0x20
   1400254fd:	pop    rbp
   1400254fe:	ret    
   1400254ff:	rex push rbp
   140025501:	sub    rsp,0x20
   140025505:	mov    rbp,rdx
   140025508:	mov    rcx,QWORD PTR [rbp+0x40]
   14002550c:	add    rcx,0x30
   140025510:	call   QWORD PTR [rip+0x184a]        # 0x140026d60
   140025516:	add    rsp,0x20
   14002551a:	pop    rbp
   14002551b:	ret    
   14002551c:	int3   
   14002551d:	int3   
   14002551e:	int3   
   14002551f:	int3   
   140025520:	rex push rbp
   140025522:	sub    rsp,0x20
   140025526:	mov    rbp,rdx
   140025529:	mov    rcx,QWORD PTR [rbp+0x40]
   14002552d:	call   0x14001ddc0
   140025532:	add    rsp,0x20
   140025536:	pop    rbp
   140025537:	ret    
   140025538:	int3   
   140025539:	int3   
   14002553a:	int3   
   14002553b:	int3   
   14002553c:	int3   
   14002553d:	int3   
   14002553e:	int3   
   14002553f:	int3   
   140025540:	rex push rbp
   140025542:	sub    rsp,0x20
   140025546:	mov    rbp,rdx
   140025549:	mov    rcx,QWORD PTR [rbp+0x40]
   14002554d:	call   0x140017f80
   140025552:	add    rsp,0x20
   140025556:	pop    rbp
   140025557:	ret    
   140025558:	rex push rbp
   14002555a:	sub    rsp,0x20
   14002555e:	mov    rbp,rdx
   140025561:	mov    rcx,QWORD PTR [rbp+0x40]
   140025565:	add    rcx,0x18
   140025569:	call   QWORD PTR [rip+0x17f1]        # 0x140026d60
   14002556f:	add    rsp,0x20
   140025573:	pop    rbp
   140025574:	ret    
   140025575:	rex push rbp
   140025577:	sub    rsp,0x20
   14002557b:	mov    rbp,rdx
   14002557e:	mov    rcx,QWORD PTR [rbp+0x40]
   140025582:	add    rcx,0x20
   140025586:	call   QWORD PTR [rip+0x17d4]        # 0x140026d60
   14002558c:	add    rsp,0x20
   140025590:	pop    rbp
   140025591:	ret    
   140025592:	rex push rbp
   140025594:	sub    rsp,0x20
   140025598:	mov    rbp,rdx
   14002559b:	mov    rcx,QWORD PTR [rbp+0x40]
   14002559f:	add    rcx,0x28
   1400255a3:	call   QWORD PTR [rip+0x17b7]        # 0x140026d60
   1400255a9:	add    rsp,0x20
   1400255ad:	pop    rbp
   1400255ae:	ret    
   1400255af:	rex push rbp
   1400255b1:	sub    rsp,0x20
   1400255b5:	mov    rbp,rdx
   1400255b8:	mov    rcx,QWORD PTR [rbp+0x40]
   1400255bc:	add    rcx,0x30
   1400255c0:	call   QWORD PTR [rip+0x179a]        # 0x140026d60
   1400255c6:	add    rsp,0x20
   1400255ca:	pop    rbp
   1400255cb:	ret    
   1400255cc:	rex push rbp
   1400255ce:	sub    rsp,0x20
   1400255d2:	mov    rbp,rdx
   1400255d5:	mov    rcx,QWORD PTR [rbp+0x40]
   1400255d9:	add    rcx,0x38
   1400255dd:	call   QWORD PTR [rip+0x177d]        # 0x140026d60
   1400255e3:	add    rsp,0x20
   1400255e7:	pop    rbp
   1400255e8:	ret    
   1400255e9:	rex push rbp
   1400255eb:	sub    rsp,0x20
   1400255ef:	mov    rbp,rdx
   1400255f2:	mov    rcx,QWORD PTR [rbp+0x40]
   1400255f6:	add    rcx,0x40
   1400255fa:	call   QWORD PTR [rip+0x1760]        # 0x140026d60
   140025600:	add    rsp,0x20
   140025604:	pop    rbp
   140025605:	ret    
   140025606:	rex push rbp
   140025608:	sub    rsp,0x20
   14002560c:	mov    rbp,rdx
   14002560f:	mov    rcx,QWORD PTR [rbp+0x40]
   140025613:	add    rcx,0x48
   140025617:	call   QWORD PTR [rip+0x1743]        # 0x140026d60
   14002561d:	add    rsp,0x20
   140025621:	pop    rbp
   140025622:	ret    
   140025623:	rex push rbp
   140025625:	sub    rsp,0x20
   140025629:	mov    rbp,rdx
   14002562c:	mov    rcx,QWORD PTR [rbp+0x40]
   140025630:	add    rcx,0x50
   140025634:	call   QWORD PTR [rip+0x1726]        # 0x140026d60
   14002563a:	add    rsp,0x20
   14002563e:	pop    rbp
   14002563f:	ret    
   140025640:	rex push rbp
   140025642:	sub    rsp,0x20
   140025646:	mov    rbp,rdx
   140025649:	lea    rcx,[rbp+0x40]
   14002564d:	call   QWORD PTR [rip+0x170d]        # 0x140026d60
   140025653:	add    rsp,0x20
   140025657:	pop    rbp
   140025658:	ret    
   140025659:	rex push rbp
   14002565b:	sub    rsp,0x20
   14002565f:	mov    rbp,rdx
   140025662:	mov    eax,DWORD PTR [rbp+0x30]
   140025665:	and    eax,0x1
   140025668:	test   eax,eax
   14002566a:	je     0x14002567a
   14002566c:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140025670:	mov    rcx,QWORD PTR [rbp+0x60]
   140025674:	call   QWORD PTR [rip+0x16e6]        # 0x140026d60
   14002567a:	add    rsp,0x20
   14002567e:	pop    rbp
   14002567f:	ret    
   140025680:	rex push rbp
   140025682:	sub    rsp,0x20
   140025686:	mov    rbp,rdx
   140025689:	mov    eax,DWORD PTR [rbp+0x24]
   14002568c:	and    eax,0x1
   14002568f:	test   eax,eax
   140025691:	je     0x1400256a0
   140025693:	and    DWORD PTR [rbp+0x24],0xfffffffe
   140025697:	mov    rcx,QWORD PTR [rbp+0x58]
   14002569b:	call   0x1400077d0
   1400256a0:	add    rsp,0x20
   1400256a4:	pop    rbp
   1400256a5:	ret    
   1400256a6:	int3   
   1400256a7:	int3   
   1400256a8:	int3   
   1400256a9:	int3   
   1400256aa:	int3   
   1400256ab:	int3   
   1400256ac:	int3   
   1400256ad:	int3   
   1400256ae:	int3   
   1400256af:	int3   
   1400256b0:	rex push rbp
   1400256b2:	sub    rsp,0x20
   1400256b6:	mov    rbp,rdx
   1400256b9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400256bd:	call   0x1400077d0
   1400256c2:	add    rsp,0x20
   1400256c6:	pop    rbp
   1400256c7:	ret    
   1400256c8:	int3   
   1400256c9:	int3   
   1400256ca:	int3   
   1400256cb:	int3   
   1400256cc:	int3   
   1400256cd:	int3   
   1400256ce:	int3   
   1400256cf:	int3   
   1400256d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400256d5:	push   rbp
   1400256d6:	sub    rsp,0x20
   1400256da:	mov    rbp,rdx
   1400256dd:	lea    rdx,[rbp+0x23]
   1400256e1:	mov    rcx,QWORD PTR [rbp+0x60]
   1400256e5:	call   0x14001e910
   1400256ea:	mov    r8d,0x1
   1400256f0:	mov    rdx,QWORD PTR [rbp+0x28]
   1400256f4:	mov    rcx,rax
   1400256f7:	call   0x14001ec00
   1400256fc:	xor    edx,edx
   1400256fe:	xor    ecx,ecx
   140025700:	call   0x14002193a
   140025705:	nop
   140025706:	lea    rax,[rip+0xffffffffffff9065]        # 0x14001e772
   14002570d:	add    rsp,0x20
   140025711:	pop    rbp
   140025712:	ret    
   140025713:	int3   
   140025714:	int3   
   140025715:	int3   
   140025716:	int3   
   140025717:	int3   
   140025718:	int3   
   140025719:	int3   
   14002571a:	int3   
   14002571b:	int3   
   14002571c:	int3   
   14002571d:	int3   
   14002571e:	int3   
   14002571f:	int3   
   140025720:	rex push rbp
   140025722:	sub    rsp,0x20
   140025726:	mov    rbp,rdx
   140025729:	mov    rcx,QWORD PTR [rbp+0x60]
   14002572d:	call   0x1400077d0
   140025732:	add    rsp,0x20
   140025736:	pop    rbp
   140025737:	ret    
   140025738:	rex push rbp
   14002573a:	sub    rsp,0x20
   14002573e:	mov    rbp,rdx
   140025741:	mov    eax,DWORD PTR [rbp+0x24]
   140025744:	and    eax,0x1
   140025747:	test   eax,eax
   140025749:	je     0x140025758
   14002574b:	and    DWORD PTR [rbp+0x24],0xfffffffe
   14002574f:	mov    rcx,QWORD PTR [rbp+0x58]
   140025753:	call   0x14001de10
   140025758:	add    rsp,0x20
   14002575c:	pop    rbp
   14002575d:	ret    
   14002575e:	int3   
   14002575f:	int3   
   140025760:	rex push rbp
   140025762:	sub    rsp,0x20
   140025766:	mov    rbp,rdx
   140025769:	mov    eax,DWORD PTR [rbp+0x24]
   14002576c:	and    eax,0x1
   14002576f:	test   eax,eax
   140025771:	je     0x140025780
   140025773:	and    DWORD PTR [rbp+0x24],0xfffffffe
   140025777:	mov    rcx,QWORD PTR [rbp+0x58]
   14002577b:	call   0x14001de10
   140025780:	add    rsp,0x20
   140025784:	pop    rbp
   140025785:	ret    
   140025786:	int3   
   140025787:	int3   
   140025788:	int3   
   140025789:	int3   
   14002578a:	int3   
   14002578b:	int3   
   14002578c:	int3   
   14002578d:	int3   
   14002578e:	int3   
   14002578f:	int3   
   140025790:	rex push rbp
   140025792:	sub    rsp,0x20
   140025796:	mov    rbp,rdx
   140025799:	mov    rcx,QWORD PTR [rbp+0x50]
   14002579d:	call   QWORD PTR [rip+0x15bd]        # 0x140026d60
   1400257a3:	add    rsp,0x20
   1400257a7:	pop    rbp
   1400257a8:	ret    
   1400257a9:	rex push rbp
   1400257ab:	sub    rsp,0x20
   1400257af:	mov    rbp,rdx
   1400257b2:	mov    rcx,QWORD PTR [rbp+0x50]
   1400257b6:	add    rcx,0x8
   1400257ba:	call   QWORD PTR [rip+0x15a0]        # 0x140026d60
   1400257c0:	add    rsp,0x20
   1400257c4:	pop    rbp
   1400257c5:	ret    
   1400257c6:	rex push rbp
   1400257c8:	sub    rsp,0x20
   1400257cc:	mov    rbp,rdx
   1400257cf:	lea    rcx,[rbp+0x20]
   1400257d3:	call   QWORD PTR [rip+0x1587]        # 0x140026d60
   1400257d9:	add    rsp,0x20
   1400257dd:	pop    rbp
   1400257de:	ret    
   1400257df:	rex push rbp
   1400257e1:	sub    rsp,0x20
   1400257e5:	mov    rbp,rdx
   1400257e8:	lea    rcx,[rbp+0x40]
   1400257ec:	call   0x140020ac0
   1400257f1:	add    rsp,0x20
   1400257f5:	pop    rbp
   1400257f6:	ret    
   1400257f7:	rex push rbp
   1400257f9:	sub    rsp,0x20
   1400257fd:	mov    rbp,rdx
   140025800:	mov    eax,DWORD PTR [rbp+0x28]
   140025803:	and    eax,0x1
   140025806:	test   eax,eax
   140025808:	je     0x14002581b
   14002580a:	and    DWORD PTR [rbp+0x28],0xfffffffe
   14002580e:	mov    rcx,QWORD PTR [rbp+0x68b8]
   140025815:	call   QWORD PTR [rip+0x1545]        # 0x140026d60
   14002581b:	add    rsp,0x20
   14002581f:	pop    rbp
   140025820:	ret    
   140025821:	rex push rbp
   140025823:	sub    rsp,0x20
   140025827:	mov    rbp,rdx
   14002582a:	mov    eax,DWORD PTR [rbp+0x20]
   14002582d:	and    eax,0x1
   140025830:	test   eax,eax
   140025832:	je     0x140025842
   140025834:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140025838:	mov    rcx,QWORD PTR [rbp+0x48]
   14002583c:	call   QWORD PTR [rip+0x151e]        # 0x140026d60
   140025842:	add    rsp,0x20
   140025846:	pop    rbp
   140025847:	ret    
   140025848:	rex push rbp
   14002584a:	sub    rsp,0x20
   14002584e:	mov    rbp,rdx
   140025851:	lea    rcx,[rbp+0x50]
   140025855:	call   0x1400051c0
   14002585a:	add    rsp,0x20
   14002585e:	pop    rbp
   14002585f:	ret    
   140025860:	rex push rbp
   140025862:	sub    rsp,0x20
   140025866:	mov    rbp,rdx
   140025869:	mov    eax,DWORD PTR [rbp+0x20]
   14002586c:	and    eax,0x1
   14002586f:	test   eax,eax
   140025871:	je     0x140025884
   140025873:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140025877:	mov    rcx,QWORD PTR [rbp+0xa0]
   14002587e:	call   QWORD PTR [rip+0x14dc]        # 0x140026d60
   140025884:	add    rsp,0x20
   140025888:	pop    rbp
   140025889:	ret    
   14002588a:	int3   
   14002588b:	int3   
   14002588c:	int3   
   14002588d:	int3   
   14002588e:	int3   
   14002588f:	int3   
   140025890:	rex push rbp
   140025892:	sub    rsp,0x20
   140025896:	mov    rbp,rdx
   140025899:	mov    rcx,QWORD PTR [rbp+0x40]
   14002589d:	add    rcx,0x8
   1400258a1:	call   QWORD PTR [rip+0x14b9]        # 0x140026d60
   1400258a7:	add    rsp,0x20
   1400258ab:	pop    rbp
   1400258ac:	ret    
   1400258ad:	rex push rbp
   1400258af:	sub    rsp,0x20
   1400258b3:	mov    rbp,rdx
   1400258b6:	mov    rcx,QWORD PTR [rbp+0x40]
   1400258ba:	add    rcx,0x10
   1400258be:	call   QWORD PTR [rip+0x149c]        # 0x140026d60
   1400258c4:	add    rsp,0x20
   1400258c8:	pop    rbp
   1400258c9:	ret    
   1400258ca:	rex push rbp
   1400258cc:	sub    rsp,0x20
   1400258d0:	mov    rbp,rdx
   1400258d3:	mov    rcx,QWORD PTR [rbp+0x40]
   1400258d7:	add    rcx,0x8
   1400258db:	call   QWORD PTR [rip+0x147f]        # 0x140026d60
   1400258e1:	add    rsp,0x20
   1400258e5:	pop    rbp
   1400258e6:	ret    
   1400258e7:	rex push rbp
   1400258e9:	sub    rsp,0x20
   1400258ed:	mov    rbp,rdx
   1400258f0:	mov    rcx,QWORD PTR [rbp+0x40]
   1400258f4:	add    rcx,0x10
   1400258f8:	call   QWORD PTR [rip+0x1462]        # 0x140026d60
   1400258fe:	add    rsp,0x20
   140025902:	pop    rbp
   140025903:	ret    
   140025904:	rex push rbp
   140025906:	sub    rsp,0x20
   14002590a:	mov    rbp,rdx
   14002590d:	lea    rcx,[rbp+0x20]
   140025911:	call   QWORD PTR [rip+0x1449]        # 0x140026d60
   140025917:	add    rsp,0x20
   14002591b:	pop    rbp
   14002591c:	ret    
   14002591d:	rex push rbp
   14002591f:	sub    rsp,0x20
   140025923:	mov    rbp,rdx
   140025926:	lea    rcx,[rbp+0x28]
   14002592a:	call   QWORD PTR [rip+0x1430]        # 0x140026d60
   140025930:	add    rsp,0x20
   140025934:	pop    rbp
   140025935:	ret    
   140025936:	rex push rbp
   140025938:	sub    rsp,0x20
   14002593c:	mov    rbp,rdx
   14002593f:	lea    rcx,[rbp+0x28]
   140025943:	call   QWORD PTR [rip+0x1417]        # 0x140026d60
   140025949:	add    rsp,0x20
   14002594d:	pop    rbp
   14002594e:	ret    
   14002594f:	rex push rbp
   140025951:	sub    rsp,0x20
   140025955:	mov    rbp,rdx
   140025958:	lea    rcx,[rbp+0x28]
   14002595c:	call   QWORD PTR [rip+0x13fe]        # 0x140026d60
   140025962:	add    rsp,0x20
   140025966:	pop    rbp
   140025967:	ret    
   140025968:	rex push rbp
   14002596a:	sub    rsp,0x20
   14002596e:	mov    rbp,rdx
   140025971:	mov    eax,DWORD PTR [rbp+0x20]
   140025974:	and    eax,0x1
   140025977:	test   eax,eax
   140025979:	je     0x140025989
   14002597b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002597f:	mov    rcx,QWORD PTR [rbp+0x58]
   140025983:	call   QWORD PTR [rip+0x13d7]        # 0x140026d60
   140025989:	add    rsp,0x20
   14002598d:	pop    rbp
   14002598e:	ret    
   14002598f:	rex push rbp
   140025991:	sub    rsp,0x20
   140025995:	mov    rbp,rdx
   140025998:	lea    rcx,[rbp+0x28]
   14002599c:	call   QWORD PTR [rip+0x13be]        # 0x140026d60
   1400259a2:	add    rsp,0x20
   1400259a6:	pop    rbp
   1400259a7:	ret    
   1400259a8:	rex push rbp
   1400259aa:	sub    rsp,0x20
   1400259ae:	mov    rbp,rdx
   1400259b1:	mov    eax,DWORD PTR [rbp+0x20]
   1400259b4:	and    eax,0x1
   1400259b7:	test   eax,eax
   1400259b9:	je     0x1400259c9
   1400259bb:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400259bf:	mov    rcx,QWORD PTR [rbp+0x58]
   1400259c3:	call   QWORD PTR [rip+0x1397]        # 0x140026d60
   1400259c9:	add    rsp,0x20
   1400259cd:	pop    rbp
   1400259ce:	ret    
   1400259cf:	rex push rbp
   1400259d1:	sub    rsp,0x20
   1400259d5:	mov    rbp,rdx
   1400259d8:	lea    rcx,[rbp+0x28]
   1400259dc:	call   QWORD PTR [rip+0x137e]        # 0x140026d60
   1400259e2:	add    rsp,0x20
   1400259e6:	pop    rbp
   1400259e7:	ret    
   1400259e8:	rex push rbp
   1400259ea:	sub    rsp,0x20
   1400259ee:	mov    rbp,rdx
   1400259f1:	mov    eax,DWORD PTR [rbp+0x20]
   1400259f4:	and    eax,0x1
   1400259f7:	test   eax,eax
   1400259f9:	je     0x140025a09
   1400259fb:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400259ff:	mov    rcx,QWORD PTR [rbp+0x58]
   140025a03:	call   QWORD PTR [rip+0x1357]        # 0x140026d60
   140025a09:	add    rsp,0x20
   140025a0d:	pop    rbp
   140025a0e:	ret    
   140025a0f:	rex push rbp
   140025a11:	sub    rsp,0x20
   140025a15:	mov    rbp,rdx
   140025a18:	lea    rcx,[rbp+0x30]
   140025a1c:	call   QWORD PTR [rip+0x133e]        # 0x140026d60
   140025a22:	add    rsp,0x20
   140025a26:	pop    rbp
   140025a27:	ret    
   140025a28:	rex push rbp
   140025a2a:	sub    rsp,0x20
   140025a2e:	mov    rbp,rdx
   140025a31:	lea    rcx,[rbp+0x38]
   140025a35:	call   QWORD PTR [rip+0x1325]        # 0x140026d60
   140025a3b:	add    rsp,0x20
   140025a3f:	pop    rbp
   140025a40:	ret    
   140025a41:	rex push rbp
   140025a43:	sub    rsp,0x20
   140025a47:	mov    rbp,rdx
   140025a4a:	lea    rcx,[rbp+0x28]
   140025a4e:	call   QWORD PTR [rip+0x130c]        # 0x140026d60
   140025a54:	add    rsp,0x20
   140025a58:	pop    rbp
   140025a59:	ret    
   140025a5a:	rex push rbp
   140025a5c:	sub    rsp,0x20
   140025a60:	mov    rbp,rdx
   140025a63:	lea    rcx,[rbp+0x28]
   140025a67:	call   QWORD PTR [rip+0x12f3]        # 0x140026d60
   140025a6d:	add    rsp,0x20
   140025a71:	pop    rbp
   140025a72:	ret    
   140025a73:	rex push rbp
   140025a75:	sub    rsp,0x20
   140025a79:	mov    rbp,rdx
   140025a7c:	lea    rcx,[rbp+0x28]
   140025a80:	call   QWORD PTR [rip+0x12da]        # 0x140026d60
   140025a86:	add    rsp,0x20
   140025a8a:	pop    rbp
   140025a8b:	ret    
   140025a8c:	rex push rbp
   140025a8e:	sub    rsp,0x20
   140025a92:	mov    rbp,rdx
   140025a95:	lea    rcx,[rbp+0x20]
   140025a99:	call   QWORD PTR [rip+0x12c1]        # 0x140026d60
   140025a9f:	add    rsp,0x20
   140025aa3:	pop    rbp
   140025aa4:	ret    
   140025aa5:	rex push rbp
   140025aa7:	sub    rsp,0x20
   140025aab:	mov    rbp,rdx
   140025aae:	lea    rcx,[rbp+0x30]
   140025ab2:	call   QWORD PTR [rip+0x12a8]        # 0x140026d60
   140025ab8:	add    rsp,0x20
   140025abc:	pop    rbp
   140025abd:	ret    
   140025abe:	rex push rbp
   140025ac0:	sub    rsp,0x20
   140025ac4:	mov    rbp,rdx
   140025ac7:	lea    rcx,[rbp+0x50]
   140025acb:	call   0x140009e60
   140025ad0:	add    rsp,0x20
   140025ad4:	pop    rbp
   140025ad5:	ret    
   140025ad6:	rex push rbp
   140025ad8:	sub    rsp,0x20
   140025adc:	mov    rbp,rdx
   140025adf:	lea    rcx,[rbp+0x28]
   140025ae3:	call   QWORD PTR [rip+0x1277]        # 0x140026d60
   140025ae9:	add    rsp,0x20
   140025aed:	pop    rbp
   140025aee:	ret    
   140025aef:	rex push rbp
   140025af1:	sub    rsp,0x20
   140025af5:	mov    rbp,rdx
   140025af8:	mov    eax,DWORD PTR [rbp+0x20]
   140025afb:	and    eax,0x1
   140025afe:	test   eax,eax
   140025b00:	je     0x140025b13
   140025b02:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140025b06:	mov    rcx,QWORD PTR [rbp+0x88]
   140025b0d:	call   QWORD PTR [rip+0x124d]        # 0x140026d60
   140025b13:	add    rsp,0x20
   140025b17:	pop    rbp
   140025b18:	ret    
   140025b19:	int3   
   140025b1a:	int3   
   140025b1b:	int3   
   140025b1c:	int3   
   140025b1d:	int3   
   140025b1e:	int3   
   140025b1f:	int3   
   140025b20:	rex push rbp
   140025b22:	sub    rsp,0x20
   140025b26:	mov    rbp,rdx
   140025b29:	lea    rcx,[rbp+0x28]
   140025b2d:	call   0x1400203b0
   140025b32:	add    rsp,0x20
   140025b36:	pop    rbp
   140025b37:	ret    
   140025b38:	lea    rcx,[rdx+0x28]
   140025b3f:	jmp    0x140022214
   140025b44:	rex push rbp
   140025b46:	sub    rsp,0x20
   140025b4a:	mov    rbp,rdx
   140025b4d:	mov    rax,QWORD PTR [rcx]
   140025b50:	mov    rdx,rcx
   140025b53:	mov    ecx,DWORD PTR [rax]
   140025b55:	call   0x140021a30
   140025b5a:	nop
   140025b5b:	add    rsp,0x20
   140025b5f:	pop    rbp
   140025b60:	ret    
   140025b61:	int3   
   140025b62:	rex push rbp
   140025b64:	sub    rsp,0x20
   140025b68:	mov    rbp,rdx
   140025b6b:	cmp    DWORD PTR [rbp+0x20],0x0
   140025b6f:	jne    0x140025b87
   140025b71:	mov    r9,QWORD PTR [rbp+0x78]
   140025b75:	mov    r8d,DWORD PTR [rbp+0x70]
   140025b79:	mov    rdx,QWORD PTR [rbp+0x68]
   140025b7d:	mov    rcx,QWORD PTR [rbp+0x60]
   140025b81:	call   0x14002157c
   140025b86:	nop
   140025b87:	add    rsp,0x20
   140025b8b:	pop    rbp
   140025b8c:	ret    
   140025b8d:	int3   
   140025b8e:	rex push rbp
   140025b90:	sub    rsp,0x20
   140025b94:	mov    rbp,rdx
   140025b97:	mov    QWORD PTR [rbp+0x38],rcx
   140025b9b:	mov    QWORD PTR [rbp+0x28],rcx
   140025b9f:	mov    rax,QWORD PTR [rbp+0x28]
   140025ba3:	mov    rcx,QWORD PTR [rax]
   140025ba6:	mov    QWORD PTR [rbp+0x30],rcx
   140025baa:	mov    rax,QWORD PTR [rbp+0x30]
   140025bae:	cmp    DWORD PTR [rax],0xe06d7363
   140025bb4:	je     0x140025bc2
   140025bb6:	mov    DWORD PTR [rbp+0x20],0x0
   140025bbd:	mov    eax,DWORD PTR [rbp+0x20]
   140025bc0:	jmp    0x140025bc8
   140025bc2:	call   0x140021c40
   140025bc7:	nop
   140025bc8:	add    rsp,0x20
   140025bcc:	pop    rbp
   140025bcd:	ret    
   140025bce:	int3   
   140025bcf:	rex push rbp
   140025bd1:	sub    rsp,0x20
   140025bd5:	mov    rbp,rdx
   140025bd8:	mov    ecx,0x8
   140025bdd:	call   0x140021c4c
   140025be2:	nop
   140025be3:	add    rsp,0x20
   140025be7:	pop    rbp
   140025be8:	ret    
   140025be9:	int3   
   140025bea:	int3   
   140025beb:	int3   
   140025bec:	int3   
   140025bed:	int3   
   140025bee:	int3   
   140025bef:	int3   
   140025bf0:	rex push rbp
   140025bf2:	sub    rsp,0x20
   140025bf6:	mov    rbp,rdx
   140025bf9:	mov    rax,QWORD PTR [rcx]
   140025bfc:	xor    ecx,ecx
   140025bfe:	cmp    DWORD PTR [rax],0xc0000005
   140025c04:	sete   cl
   140025c07:	mov    eax,ecx
   140025c09:	add    rsp,0x20
   140025c0d:	pop    rbp
   140025c0e:	ret    
   140025c0f:	int3   
   140025c10:	sub    rsp,0x28
   140025c14:	lea    rcx,[rip+0x15ba5]        # 0x14003b7c0
   140025c1b:	call   0x140001470
   140025c20:	add    rsp,0x28
   140025c24:	ret    
   140025c25:	int3   
   140025c26:	int3   
   140025c27:	int3   
   140025c28:	int3   
   140025c29:	int3   
   140025c2a:	int3   
   140025c2b:	int3   
   140025c2c:	int3   
   140025c2d:	int3   
   140025c2e:	int3   
   140025c2f:	int3   
   140025c30:	sub    rsp,0x28
   140025c34:	lea    rcx,[rip+0x1700d]        # 0x14003cc48
   140025c3b:	call   0x140014eb0
   140025c40:	add    rsp,0x28
   140025c44:	ret    
   140025c45:	int3   
   140025c46:	int3   
   140025c47:	int3   
   140025c48:	lea    rcx,[rip+0x17061]        # 0x14003ccb0
   140025c4f:	jmp    0x140022202
   140025c54:	lea    rcx,[rip+0x17755]        # 0x14003d3b0
   140025c5b:	jmp    0x140021e50
   140025c60:	lea    rcx,[rip+0x15611]        # 0x14003b278
   140025c67:	rex.W jmp QWORD PTR [rip+0x84a]        # 0x1400264b8

Disassembly of section .rdata:

0000000140026000 <.rdata>:
   140026000:	or     BYTE PTR [rcx+0x3],ah
   140026006:	add    BYTE PTR [rax],al
   140026008:	movabs eax,es:0xa138000000000003
   140026012:	add    eax,DWORD PTR [rax]
   140026014:	add    BYTE PTR [rax],al
   140026016:	add    BYTE PTR [rax],al
   140026018:	rex.RX movabs eax,ds:0xa158000000000003
   140026022:	add    eax,DWORD PTR [rax]
   140026024:	add    BYTE PTR [rax],al
   140026026:	add    BYTE PTR [rax],al
   140026028:	nop
   140026029:	movabs eax,ds:0xa1a0000000000003
   140026032:	add    eax,DWORD PTR [rax]
   140026034:	add    BYTE PTR [rax],al
   140026036:	add    BYTE PTR [rax],al
   140026038:	mov    dl,0xa1
   14002603a:	add    eax,DWORD PTR [rax]
   14002603c:	add    BYTE PTR [rax],al
   14002603e:	add    BYTE PTR [rax],al
   140026040:	shl    BYTE PTR [rcx+0x3],0x0
   140026047:	add    al,dl
   140026049:	movabs eax,ds:0xa1e0000000000003
   140026052:	add    eax,DWORD PTR [rax]
   140026054:	add    BYTE PTR [rax],al
   140026056:	add    BYTE PTR [rax],al
   140026058:	hlt    
   140026059:	movabs eax,ds:0xa20a000000000003
   140026062:	add    eax,DWORD PTR [rax]
   140026064:	add    BYTE PTR [rax],al
   140026066:	add    BYTE PTR [rax],al
   140026068:	(bad)  
   140026069:	movabs eax,ds:0x3
   140026072:	add    BYTE PTR [rax],al
   140026074:	add    BYTE PTR [rax],al
   140026076:	add    BYTE PTR [rax],al
   140026078:	adc    DWORD PTR [rax],eax
   14002607a:	add    BYTE PTR [rax],al
   14002607c:	add    BYTE PTR [rax],al
   14002607e:	add    BYTE PTR [rax+0x0],al
   140026084:	add    BYTE PTR [rax],al
   140026086:	add    BYTE PTR [rax],al
   140026088:	jb     0x14002602e
   14002608a:	add    eax,DWORD PTR [rax]
   14002608c:	add    BYTE PTR [rax],al
   14002608e:	add    BYTE PTR [rax],al
   140026090:	jle    0x140026036
   140026092:	add    eax,DWORD PTR [rax]
   140026094:	add    BYTE PTR [rax],al
   140026096:	add    BYTE PTR [rax],al
   140026098:	sub    BYTE PTR [rbp+0x3],bl
   14002609e:	add    BYTE PTR [rax],al
   1400260a0:	cmp    bl,BYTE PTR [rbp+0x3]
   1400260a6:	add    BYTE PTR [rax],al
   1400260a8:	rex.WRX popf 
   1400260aa:	add    eax,DWORD PTR [rax]
   1400260ac:	add    BYTE PTR [rax],al
   1400260ae:	add    BYTE PTR [rax],al
   1400260b0:	pop    rsp
   1400260b1:	popf   
   1400260b2:	add    eax,DWORD PTR [rax]
   1400260b4:	add    BYTE PTR [rax],al
   1400260b6:	add    BYTE PTR [rax],al
   1400260b8:	push   0xffffffffffffff9d
   1400260ba:	add    eax,DWORD PTR [rax]
   1400260bc:	add    BYTE PTR [rax],al
   1400260be:	add    BYTE PTR [rax],al
   1400260c0:	pop    rsp
   1400260c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400260c2:	add    eax,DWORD PTR [rax]
   1400260c4:	add    BYTE PTR [rax],al
   1400260c6:	add    BYTE PTR [rax],al
   1400260c8:	add    al,0x9d
   1400260ca:	add    eax,DWORD PTR [rax]
   1400260cc:	add    BYTE PTR [rax],al
   1400260ce:	add    BYTE PTR [rax],al
   1400260d0:	cwde   
   1400260d1:	popf   
   1400260d2:	add    eax,DWORD PTR [rax]
   1400260d4:	add    BYTE PTR [rax],al
   1400260d6:	add    BYTE PTR [rax],al
   1400260d8:	scas   al,BYTE PTR es:[rdi]
   1400260d9:	popf   
   1400260da:	add    eax,DWORD PTR [rax]
   1400260dc:	add    BYTE PTR [rax],al
   1400260de:	add    BYTE PTR [rax],al
   1400260e0:	mov    esp,0x39d
   1400260e5:	add    BYTE PTR [rax],al
   1400260e7:	add    al,cl
   1400260e9:	popf   
   1400260ea:	add    eax,DWORD PTR [rax]
   1400260ec:	add    BYTE PTR [rax],al
   1400260ee:	add    BYTE PTR [rax],al
   1400260f0:	fcomp  QWORD PTR [rbp+0x3]
   1400260f6:	add    BYTE PTR [rax],al
   1400260f8:	(bad)  
   1400260f9:	popf   
   1400260fa:	add    eax,DWORD PTR [rax]
   1400260fc:	add    BYTE PTR [rax],al
   1400260fe:	add    BYTE PTR [rax],al
   140026100:	(bad)  
   140026101:	sahf   
   140026102:	add    eax,DWORD PTR [rax]
   140026104:	add    BYTE PTR [rax],al
   140026106:	add    BYTE PTR [rax],al
   140026108:	adc    bl,BYTE PTR [rbp+0x3]
   14002610e:	add    BYTE PTR [rax],al
   140026110:	jbe    0x1400260af
   140026112:	add    eax,DWORD PTR [rax]
   140026114:	add    BYTE PTR [rax],al
   140026116:	add    BYTE PTR [rax],al
   140026118:	sbb    bl,BYTE PTR [rsi+0x3]
   14002611e:	add    BYTE PTR [rax],al
   140026120:	es sahf 
   140026122:	add    eax,DWORD PTR [rax]
   140026124:	add    BYTE PTR [rax],al
   140026126:	add    BYTE PTR [rax],al
   140026128:	cmp    al,0x9e
   14002612a:	add    eax,DWORD PTR [rax]
   14002612c:	add    BYTE PTR [rax],al
   14002612e:	add    BYTE PTR [rax],al
   140026130:	out    dx,al
   140026131:	pushf  
   140026132:	add    eax,DWORD PTR [rax]
   140026134:	add    BYTE PTR [rax],al
   140026136:	add    BYTE PTR [rax],al
   140026138:	fcomp  DWORD PTR [rbx+rax*1+0x0]
   14002613f:	add    ah,cl
   140026141:	pushf  
   140026142:	add    eax,DWORD PTR [rax]
   140026144:	add    BYTE PTR [rax],al
   140026146:	add    BYTE PTR [rax],al
   140026148:	mov    ah,0x9c
   14002614a:	add    eax,DWORD PTR [rax]
   14002614c:	add    BYTE PTR [rax],al
   14002614e:	add    BYTE PTR [rax],al
   140026150:	mov    WORD PTR [rbx+rax*1+0x0],ds
   140026157:	add    BYTE PTR [rsp+rbx*4+0x3],bh
   14002615b:	add    BYTE PTR [rax],al
   14002615d:	add    BYTE PTR [rax],al
   14002615f:	add    BYTE PTR [rax+0x39d],cl
   140026165:	add    BYTE PTR [rax],al
   140026167:	add    dl,dh
   140026169:	popf   
   14002616a:	add    eax,DWORD PTR [rax]
   14002616c:	add    BYTE PTR [rax],al
   14002616e:	add    BYTE PTR [rax],al
   140026170:	rex.WR sahf 
   140026172:	add    eax,DWORD PTR [rax]
   140026174:	add    BYTE PTR [rax],al
   140026176:	add    BYTE PTR [rax],al
   140026178:	pop    rsp
   140026179:	sahf   
   14002617a:	add    eax,DWORD PTR [rax]
   14002617c:	add    BYTE PTR [rax],al
   14002617e:	add    BYTE PTR [rax],al
   140026180:	push   0xffffffffffffff9e
   140026182:	add    eax,DWORD PTR [rax]
   140026184:	add    BYTE PTR [rax],al
   140026186:	add    BYTE PTR [rax],al
   140026188:	jle    0x140026128
   14002618a:	add    eax,DWORD PTR [rax]
   14002618c:	add    BYTE PTR [rax],al
   14002618e:	add    BYTE PTR [rax],al
   140026190:	mov    ds,WORD PTR [rsi+0x3]
   140026196:	add    BYTE PTR [rax],al
   140026198:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140026199:	sahf   
   14002619a:	add    eax,DWORD PTR [rax]
   14002619c:	add    BYTE PTR [rax],al
   14002619e:	add    BYTE PTR [rax],al
   1400261a0:	mov    dh,0x9e
   1400261a2:	add    eax,DWORD PTR [rax]
   1400261a4:	add    BYTE PTR [rax],al
   1400261a6:	add    BYTE PTR [rax],al
   1400261a8:	(bad)  
   1400261a9:	sahf   
   1400261aa:	add    eax,DWORD PTR [rax]
   1400261ac:	add    BYTE PTR [rax],al
   1400261ae:	add    BYTE PTR [rax],al
   1400261b0:	(bad)  
   1400261b1:	sahf   
   1400261b2:	add    eax,DWORD PTR [rax]
   1400261b4:	add    BYTE PTR [rax],al
   1400261b6:	add    BYTE PTR [rax],al
   1400261b8:	out    0x9e,al
   1400261ba:	add    eax,DWORD PTR [rax]
   1400261bc:	add    BYTE PTR [rax],al
   1400261be:	add    BYTE PTR [rax],al
   1400261c0:	cli    
   1400261c1:	sahf   
   1400261c2:	add    eax,DWORD PTR [rax]
   1400261c4:	add    BYTE PTR [rax],al
   1400261c6:	add    BYTE PTR [rax],al
   1400261c8:	adc    bl,BYTE PTR [rdi+0x3]
   1400261ce:	add    BYTE PTR [rax],al
   1400261d0:	cs lahf 
   1400261d2:	add    eax,DWORD PTR [rax]
   1400261d4:	add    BYTE PTR [rax],al
   1400261d6:	add    BYTE PTR [rax],al
   1400261d8:	ins    BYTE PTR es:[rdi],dx
   1400261d9:	pushf  
   1400261da:	add    eax,DWORD PTR [rax]
   1400261dc:	add    BYTE PTR [rax],al
   1400261de:	add    BYTE PTR [rax],al
   1400261e0:	rex.RX lahf 
   1400261e2:	add    eax,DWORD PTR [rax]
   1400261e4:	add    BYTE PTR [rax],al
   1400261e6:	add    BYTE PTR [rax],al
   1400261e8:	(bad)  
   1400261e9:	movabs al,ds:0x9ff2000000000003
   1400261f2:	add    eax,DWORD PTR [rax]
   1400261f4:	add    BYTE PTR [rax],al
   1400261f6:	add    BYTE PTR [rax],al
   1400261f8:	fcomp  DWORD PTR [rdi+0x3]
   1400261fe:	add    BYTE PTR [rax],al
   140026200:	ret    0x39f
   140026203:	add    BYTE PTR [rax],al
   140026205:	add    BYTE PTR [rax],al
   140026207:	add    BYTE PTR [rdi+rbx*4+0x3],ch
   14002620e:	add    BYTE PTR [rax],al
   140026210:	xchg   edx,eax
   140026211:	lahf   
   140026212:	add    eax,DWORD PTR [rax]
   140026214:	add    BYTE PTR [rax],al
   140026216:	add    BYTE PTR [rax],al
   140026218:	(bad)  
   140026219:	lahf   
   14002621a:	add    eax,DWORD PTR [rax]
   14002621c:	add    BYTE PTR [rax],al
   14002621e:	add    BYTE PTR [rax],al
   140026220:	je     0x1400261c1
   140026222:	add    eax,DWORD PTR [rax]
   140026224:	add    BYTE PTR [rax],al
   140026226:	add    BYTE PTR [rax],al
   140026228:	pop    rsi
   140026229:	lahf   
   14002622a:	add    eax,DWORD PTR [rax]
	...
   140026238:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026239:	movabs ds:0xa3be000000000003,eax
   140026242:	add    eax,DWORD PTR [rax]
	...
   140026250:	and    BYTE PTR [rdx+0x3],bl
   140026256:	add    BYTE PTR [rax],al
   140026258:	adc    bl,BYTE PTR [rdx+0x3]
   14002625e:	add    BYTE PTR [rax],al
   140026260:	(bad)  
   140026261:	(bad)  
   140026262:	add    eax,DWORD PTR [rax]
   140026264:	add    BYTE PTR [rax],al
   140026266:	add    BYTE PTR [rax],al
   140026268:	cli    
   140026269:	cdq    
   14002626a:	add    eax,DWORD PTR [rax]
   14002626c:	add    BYTE PTR [rax],al
   14002626e:	add    BYTE PTR [rax],al
   140026270:	in     al,0x99
   140026272:	add    eax,DWORD PTR [rax]
   140026274:	add    BYTE PTR [rax],al
   140026276:	add    BYTE PTR [rax],al
   140026278:	(bad)  
   140026279:	cdq    
   14002627a:	add    eax,DWORD PTR [rax]
   14002627c:	add    BYTE PTR [rax],al
   14002627e:	add    BYTE PTR [rax],al
   140026280:	enter  0x399,0x0
   140026284:	add    BYTE PTR [rax],al
   140026286:	add    BYTE PTR [rax],al
   140026288:	mov    esp,0x399
   14002628d:	add    BYTE PTR [rax],al
   14002628f:	add    BYTE PTR [rax+0x399],dh
   140026295:	add    BYTE PTR [rax],al
   140026297:	add    BYTE PTR [rsi+0x399],ah
   14002629d:	add    BYTE PTR [rax],al
   14002629f:	add    BYTE PTR [rax+0x399],bl
   1400262a5:	add    BYTE PTR [rax],al
   1400262a7:	add    BYTE PTR [rsi+0x399],cl
   1400262ad:	add    BYTE PTR [rax],al
   1400262af:	add    BYTE PTR [rcx+rbx*4+0x3],al
   1400262b6:	add    BYTE PTR [rax],al
   1400262b8:	js     0x140026253
   1400262ba:	add    eax,DWORD PTR [rax]
   1400262bc:	add    BYTE PTR [rax],al
   1400262be:	add    BYTE PTR [rax],al
   1400262c0:	outs   dx,BYTE PTR ds:[rsi]
   1400262c1:	cdq    
   1400262c2:	add    eax,DWORD PTR [rax]
   1400262c4:	add    BYTE PTR [rax],al
   1400262c6:	add    BYTE PTR [rax],al
   1400262c8:	fs cdq 
   1400262ca:	add    eax,DWORD PTR [rax]
   1400262cc:	add    BYTE PTR [rax],al
   1400262ce:	add    BYTE PTR [rax],al
   1400262d0:	push   rsp
   1400262d1:	cwde   
   1400262d2:	add    eax,DWORD PTR [rax]
   1400262d4:	add    BYTE PTR [rax],al
   1400262d6:	add    BYTE PTR [rax],al
   1400262d8:	pop    rax
   1400262d9:	cdq    
   1400262da:	add    eax,DWORD PTR [rax]
   1400262dc:	add    BYTE PTR [rax],al
   1400262de:	add    BYTE PTR [rax],al
   1400262e0:	rex.WRX cqo 
   1400262e2:	add    eax,DWORD PTR [rax]
   1400262e4:	add    BYTE PTR [rax],al
   1400262e6:	add    BYTE PTR [rax],al
   1400262e8:	xor    BYTE PTR [rdx+0x3],bl
   1400262ee:	add    BYTE PTR [rax],al
   1400262f0:	cmp    bl,BYTE PTR [rcx+0x3]
   1400262f6:	add    BYTE PTR [rax],al
   1400262f8:	xor    BYTE PTR [rcx+0x3],bl
   1400262fe:	add    BYTE PTR [rax],al
   140026300:	es cdq 
   140026302:	add    eax,DWORD PTR [rax]
   140026304:	add    BYTE PTR [rax],al
   140026306:	add    BYTE PTR [rax],al
   140026308:	sbb    bl,BYTE PTR [rcx+0x3]
   14002630e:	add    BYTE PTR [rax],al
   140026310:	(bad)  
   140026311:	cdq    
   140026312:	add    eax,DWORD PTR [rax]
   140026314:	add    BYTE PTR [rax],al
   140026316:	add    BYTE PTR [rax],al
   140026318:	add    bl,BYTE PTR [rcx+0x3]
   14002631e:	add    BYTE PTR [rax],al
   140026320:	neg    BYTE PTR [rax+0x3]
   140026326:	add    BYTE PTR [rax],al
   140026328:	in     al,dx
   140026329:	cwde   
   14002632a:	add    eax,DWORD PTR [rax]
   14002632c:	add    BYTE PTR [rax],al
   14002632e:	add    BYTE PTR [rax],al
   140026330:	in     al,0x98
   140026332:	add    eax,DWORD PTR [rax]
   140026334:	add    BYTE PTR [rax],al
   140026336:	add    BYTE PTR [rax],al
   140026338:	fcomp  DWORD PTR [rax+0x3]
   14002633e:	add    BYTE PTR [rax],al
   140026340:	(bad)  
   140026341:	cwde   
   140026342:	add    eax,DWORD PTR [rax]
   140026344:	add    BYTE PTR [rax],al
   140026346:	add    BYTE PTR [rax],al
   140026348:	(bad)  
   140026349:	cwde   
   14002634a:	add    eax,DWORD PTR [rax]
   14002634c:	add    BYTE PTR [rax],al
   14002634e:	add    BYTE PTR [rax],al
   140026350:	mov    edx,0x398
   140026355:	add    BYTE PTR [rax],al
   140026357:	add    BYTE PTR [rsi+0x398],ch
   14002635d:	add    BYTE PTR [rax],al
   14002635f:	add    BYTE PTR [rax+rbx*4+0x3],ah
   140026366:	add    BYTE PTR [rax],al
   140026368:	(bad)  
   140026369:	cwde   
   14002636a:	add    eax,DWORD PTR [rax]
   14002636c:	add    BYTE PTR [rax],al
   14002636e:	add    BYTE PTR [rax],al
   140026370:	mov    BYTE PTR [rax+0x3],bl
   140026376:	add    BYTE PTR [rax],al
   140026378:	jl     0x140026312
   14002637a:	add    eax,DWORD PTR [rax]
   14002637c:	add    BYTE PTR [rax],al
   14002637e:	add    BYTE PTR [rax],al
   140026380:	cbw    
   140026382:	add    eax,DWORD PTR [rax]
   140026384:	add    BYTE PTR [rax],al
   140026386:	add    BYTE PTR [rax],al
   140026388:	cmp    al,0x9a
   14002638a:	add    eax,DWORD PTR [rax]
   14002638c:	add    BYTE PTR [rax],al
   14002638e:	add    BYTE PTR [rax],al
   140026390:	rex.R cdq 
   140026392:	add    eax,DWORD PTR [rax]
   140026394:	add    BYTE PTR [rax],al
   140026396:	add    BYTE PTR [rax],al
   140026398:	push   rdx
   140026399:	(bad)  
   14002639a:	add    eax,DWORD PTR [rax]
   14002639c:	add    BYTE PTR [rax],al
   14002639e:	add    BYTE PTR [rax],al
   1400263a0:	pop    rsi
   1400263a1:	cwde   
   1400263a2:	add    eax,DWORD PTR [rax]
   1400263a4:	add    BYTE PTR [rax],al
   1400263a6:	add    BYTE PTR [rax],al
   1400263a8:	rex.W (bad) 
   1400263aa:	add    eax,DWORD PTR [rax]
   1400263ac:	add    BYTE PTR [rax],al
   1400263ae:	add    BYTE PTR [rax],al
   1400263b0:	rex.WRX pushf 
   1400263b2:	add    eax,DWORD PTR [rax]
   1400263b4:	add    BYTE PTR [rax],al
   1400263b6:	add    BYTE PTR [rax],al
   1400263b8:	ss pushf 
   1400263ba:	add    eax,DWORD PTR [rax]
   1400263bc:	add    BYTE PTR [rax],al
   1400263be:	add    BYTE PTR [rax],al
   1400263c0:	sbb    al,0x9c
   1400263c2:	add    eax,DWORD PTR [rax]
   1400263c4:	add    BYTE PTR [rax],al
   1400263c6:	add    BYTE PTR [rax],al
   1400263c8:	(bad)  
   1400263c9:	pushf  
   1400263ca:	add    eax,DWORD PTR [rax]
   1400263cc:	add    BYTE PTR [rax],al
   1400263ce:	add    BYTE PTR [rax],al
   1400263d0:	rcr    BYTE PTR [rbx+0x3],1
   1400263d6:	add    BYTE PTR [rax],al
   1400263d8:	lods   al,BYTE PTR ds:[rsi]
   1400263d9:	fwait
   1400263da:	add    eax,DWORD PTR [rax]
   1400263dc:	add    BYTE PTR [rax],al
   1400263de:	add    BYTE PTR [rax],al
   1400263e0:	xchg   esp,eax
   1400263e1:	fwait
   1400263e2:	add    eax,DWORD PTR [rax]
   1400263e4:	add    BYTE PTR [rax],al
   1400263e6:	add    BYTE PTR [rax],al
   1400263e8:	xchg   BYTE PTR [rbx+0x3],bl
   1400263ee:	add    BYTE PTR [rax],al
   1400263f0:	js     0x14002638d
   1400263f2:	add    eax,DWORD PTR [rax]
   1400263f4:	add    BYTE PTR [rax],al
   1400263f6:	add    BYTE PTR [rax],al
   1400263f8:	outs   dx,BYTE PTR ds:[rsi]
   1400263f9:	fwait
   1400263fa:	add    eax,DWORD PTR [rax]
   1400263fc:	add    BYTE PTR [rax],al
   1400263fe:	add    BYTE PTR [rax],al
   140026400:	data16 fwait
   140026402:	add    eax,DWORD PTR [rax]
   140026404:	add    BYTE PTR [rax],al
   140026406:	add    BYTE PTR [rax],al
   140026408:	push   rdx
   140026409:	fwait
   14002640a:	add    eax,DWORD PTR [rax]
   14002640c:	add    BYTE PTR [rax],al
   14002640e:	add    BYTE PTR [rax],al
   140026410:	rex.RX
   140026411:	fwait
   140026412:	add    eax,DWORD PTR [rax]
   140026414:	add    BYTE PTR [rax],al
   140026416:	add    BYTE PTR [rax],al
   140026418:	cmp    al,0x9b
   14002641a:	add    eax,DWORD PTR [rax]
   14002641c:	add    BYTE PTR [rax],al
   14002641e:	add    BYTE PTR [rax],al
   140026420:	xor    bl,BYTE PTR [rbx+0x3]
   140026426:	add    BYTE PTR [rax],al
   140026428:	es fwait
   14002642a:	add    eax,DWORD PTR [rax]
   14002642c:	add    BYTE PTR [rax],al
   14002642e:	add    BYTE PTR [rax],al
   140026430:	sbb    BYTE PTR [rbx+0x3],bl
   140026436:	add    BYTE PTR [rax],al
   140026438:	add    al,0x9b
   14002643a:	add    eax,DWORD PTR [rax]
   14002643c:	add    BYTE PTR [rax],al
   14002643e:	add    BYTE PTR [rax],al
   140026440:	out    dx,al
   140026441:	(bad)  
   140026442:	add    eax,DWORD PTR [rax]
   140026444:	add    BYTE PTR [rax],al
   140026446:	add    BYTE PTR [rax],al
   140026448:	in     al,0x9a
   14002644a:	add    eax,DWORD PTR [rax]
   14002644c:	add    BYTE PTR [rax],al
   14002644e:	add    BYTE PTR [rax],al
   140026450:	fcomp  QWORD PTR [rdx+0x3]
   140026456:	add    BYTE PTR [rax],al
   140026458:	(bad)  
   140026459:	(bad)  
   14002645a:	add    eax,DWORD PTR [rax]
   14002645c:	add    BYTE PTR [rax],al
   14002645e:	add    BYTE PTR [rax],al
   140026460:	ret    0x39a
   140026463:	add    BYTE PTR [rax],al
   140026465:	add    BYTE PTR [rax],al
   140026467:	add    BYTE PTR [rax+0x39a],dh
   14002646d:	add    BYTE PTR [rax],al
   14002646f:	add    BYTE PTR [rdx+0x39a],ah
   140026475:	add    BYTE PTR [rax],al
   140026477:	add    BYTE PTR [rax+0x39a],cl
   14002647d:	add    BYTE PTR [rax],al
   14002647f:	add    BYTE PTR [rdx-0x66],bh
   140026482:	add    eax,DWORD PTR [rax]
   140026484:	add    BYTE PTR [rax],al
   140026486:	add    BYTE PTR [rax],al
   140026488:	(bad)  
   140026489:	(bad)  
   14002648a:	add    eax,DWORD PTR [rax]
   14002648c:	add    BYTE PTR [rax],al
   14002648e:	add    BYTE PTR [rax],al
   140026490:	pop    rdx
   140026491:	(bad)  
   140026492:	add    eax,DWORD PTR [rax]
	...
   1400264a0:	pop    rsi
   1400264a1:	add    BYTE PTR [rax],al
   1400264a3:	add    BYTE PTR [rax],al
   1400264a5:	add    BYTE PTR [rax],al
   1400264a7:	adc    BYTE PTR [rsi+0x0],0x0
   1400264ae:	add    BYTE PTR [rax+0x95],al
   1400264b4:	add    BYTE PTR [rax],al
   1400264b6:	add    BYTE PTR [rax+0x9],al
   1400264bc:	add    BYTE PTR [rax],al
   1400264be:	add    BYTE PTR [rax+0x2],al
   1400264c4:	add    BYTE PTR [rax],al
   1400264c6:	add    BYTE PTR [rax+0x72],al
   1400264cc:	add    BYTE PTR [rax],al
   1400264ce:	add    BYTE PTR [rax+0xb9],al
   1400264d4:	add    BYTE PTR [rax],al
   1400264d6:	add    BYTE PTR [rax+0xb8],al
   1400264dc:	add    BYTE PTR [rax],al
   1400264de:	add    BYTE PTR [rax+0x6],al
   1400264e4:	add    BYTE PTR [rax],al
   1400264e6:	add    BYTE PTR [rax+0xc8],al
   1400264ec:	add    BYTE PTR [rax],al
   1400264ee:	add    BYTE PTR [rax+0x0],al
   1400264f4:	add    BYTE PTR [rax],al
   1400264f6:	add    BYTE PTR [rax],al
   1400264f8:	movabs ds:0xa22a000000000003,al
   140026502:	add    eax,DWORD PTR [rax]
	...
   140026510:	push   0x3a2
   140026515:	add    BYTE PTR [rax],al
   140026517:	add    BYTE PTR [rdx-0x5e],bh
   14002651a:	add    eax,DWORD PTR [rax]
   14002651c:	add    BYTE PTR [rax],al
   14002651e:	add    BYTE PTR [rax],al
   140026520:	mov    fs,WORD PTR [rdx+0x3]
   140026526:	add    BYTE PTR [rax],al
   140026528:	sahf   
   140026529:	movabs ds:0xa2c0000000000003,al
   140026532:	add    eax,DWORD PTR [rax]
   140026534:	add    BYTE PTR [rax],al
   140026536:	add    BYTE PTR [rax],al
   140026538:	(bad)  
   140026539:	movabs ds:0xa2e6000000000003,al
   140026542:	add    eax,DWORD PTR [rax]
   140026544:	add    BYTE PTR [rax],al
   140026546:	add    BYTE PTR [rax],al
   140026548:	mov    dl,0xa2
   14002654a:	add    eax,DWORD PTR [rax]
	...
   140026558:	in     al,dx
   140026559:	movabs al,ds:0xa0d8000000000003
   140026562:	add    eax,DWORD PTR [rax]
   140026564:	add    BYTE PTR [rax],al
   140026566:	add    BYTE PTR [rax],al
   140026568:	(bad)  
   140026569:	movabs al,ds:0xa0b8000000000003
   140026572:	add    eax,DWORD PTR [rax]
   140026574:	add    BYTE PTR [rax],al
   140026576:	add    BYTE PTR [rax],al
   140026578:	lods   al,BYTE PTR ds:[rsi]
   140026579:	movabs al,ds:0xa09c000000000003
   140026582:	add    eax,DWORD PTR [rax]
   140026584:	add    BYTE PTR [rax],al
   140026586:	add    BYTE PTR [rax],al
   140026588:	mov    WORD PTR [rax+0x3],fs
   14002658e:	add    BYTE PTR [rax],al
   140026590:	jl     0x140026532
   140026592:	add    eax,DWORD PTR [rax]
   140026594:	add    BYTE PTR [rax],al
   140026596:	add    BYTE PTR [rax],al
   140026598:	ins    BYTE PTR es:[rdi],dx
   140026599:	movabs al,ds:0xa058000000000003
   1400265a2:	add    eax,DWORD PTR [rax]
   1400265a4:	add    BYTE PTR [rax],al
   1400265a6:	add    BYTE PTR [rax],al
   1400265a8:	rex.W movabs al,ds:0xa03c000000000003
   1400265b2:	add    eax,DWORD PTR [rax]
   1400265b4:	add    BYTE PTR [rax],al
   1400265b6:	add    BYTE PTR [rax],al
   1400265b8:	xor    BYTE PTR [rax+0x3],ah
	...
   1400265c6:	add    BYTE PTR [rax],al
   1400265c8:	sub    BYTE PTR [rbx+rax*1+0x0],ah
   1400265cf:	add    BYTE PTR [rsi],cl
   1400265d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400265d2:	add    eax,DWORD PTR [rax]
   1400265d4:	add    BYTE PTR [rax],al
   1400265d6:	add    BYTE PTR [rax],al
   1400265d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400265da:	add    eax,DWORD PTR [rax]
	...
   1400265e8:	out    dx,al
   1400265e9:	movabs ds:0x3,eax
   1400265f2:	add    BYTE PTR [rax],al
   1400265f4:	add    BYTE PTR [rax],al
   1400265f6:	add    BYTE PTR [rax],al
   1400265f8:	rex.XB (bad) 
   1400265fa:	add    BYTE PTR [rax],al
   1400265fc:	add    BYTE PTR [rax],al
   1400265fe:	add    BYTE PTR [rax+0x1cac],al
   140026604:	add    BYTE PTR [rax],al
   140026606:	add    BYTE PTR [rax+0x1ca4],al
   14002660c:	add    BYTE PTR [rax],al
   14002660e:	add    BYTE PTR [rax+0x1530],al
   140026614:	add    BYTE PTR [rax],al
   140026616:	add    BYTE PTR [rax+0x1e1e],al
   14002661c:	add    BYTE PTR [rax],al
   14002661e:	add    BYTE PTR [rax+0xedf],al
   140026624:	add    BYTE PTR [rax],al
   140026626:	add    BYTE PTR [rax+0x1ba],al
   14002662c:	add    BYTE PTR [rax],al
   14002662e:	add    BYTE PTR [rax+0x43d],al
   140026634:	add    BYTE PTR [rax],al
   140026636:	add    BYTE PTR [rax+0xc60],al
   14002663c:	add    BYTE PTR [rax],al
   14002663e:	add    BYTE PTR [rax+0x1404],al
   140026644:	add    BYTE PTR [rax],al
   140026646:	add    BYTE PTR [rax+0x217f],al
   14002664c:	add    BYTE PTR [rax],al
   14002664e:	add    BYTE PTR [rax+0x28b3],al
   140026654:	add    BYTE PTR [rax],al
   140026656:	add    BYTE PTR [rax+0x235e],al
   14002665c:	add    BYTE PTR [rax],al
   14002665e:	add    BYTE PTR [rax+0x273b],al
   140026664:	add    BYTE PTR [rax],al
   140026666:	add    BYTE PTR [rax+0x32f5],al
   14002666c:	add    BYTE PTR [rax],al
   14002666e:	add    BYTE PTR [rax+0x1e67],al
   140026674:	add    BYTE PTR [rax],al
   140026676:	add    BYTE PTR [rax+0x3564],al
   14002667c:	add    BYTE PTR [rax],al
   14002667e:	add    BYTE PTR [rax+0x1513],al
   140026684:	add    BYTE PTR [rax],al
   140026686:	add    BYTE PTR [rax+0x3597],al
   14002668c:	add    BYTE PTR [rax],al
   14002668e:	add    BYTE PTR [rax+0x1d42],al
   140026694:	add    BYTE PTR [rax],al
   140026696:	add    BYTE PTR [rax+0x36d4],al
   14002669c:	add    BYTE PTR [rax],al
   14002669e:	add    BYTE PTR [rax+0x861],al
   1400266a4:	add    BYTE PTR [rax],al
   1400266a6:	add    BYTE PTR [rax+0x2363],al
   1400266ac:	add    BYTE PTR [rax],al
   1400266ae:	add    BYTE PTR [rax+0x2677],al
   1400266b4:	add    BYTE PTR [rax],al
   1400266b6:	add    BYTE PTR [rax+0x306b],al
   1400266bc:	add    BYTE PTR [rax],al
   1400266be:	add    BYTE PTR [rax+0x362a],al
   1400266c4:	add    BYTE PTR [rax],al
   1400266c6:	add    BYTE PTR [rax+0x1721],al
   1400266cc:	add    BYTE PTR [rax],al
   1400266ce:	add    BYTE PTR [rax+0x1446],al
   1400266d4:	add    BYTE PTR [rax],al
   1400266d6:	add    BYTE PTR [rax+0x1491],al
   1400266dc:	add    BYTE PTR [rax],al
   1400266de:	add    BYTE PTR [rax+0x3638],al
   1400266e4:	add    BYTE PTR [rax],al
   1400266e6:	add    BYTE PTR [rax+0x116d],al
   1400266ec:	add    BYTE PTR [rax],al
   1400266ee:	add    BYTE PTR [rax+0x1460],al
   1400266f4:	add    BYTE PTR [rax],al
   1400266f6:	add    BYTE PTR [rax+0x1a55],al
   1400266fc:	add    BYTE PTR [rax],al
   1400266fe:	add    BYTE PTR [rax+0x1bd0],al
   140026704:	add    BYTE PTR [rax],al
   140026706:	add    BYTE PTR [rax+0x36fe],al
   14002670c:	add    BYTE PTR [rax],al
   14002670e:	add    BYTE PTR [rax+0x10cb],al
   140026714:	add    BYTE PTR [rax],al
   140026716:	add    BYTE PTR [rax+0x1e2],al
   14002671c:	add    BYTE PTR [rax],al
   14002671e:	add    BYTE PTR [rax+0x146e],al
   140026724:	add    BYTE PTR [rax],al
   140026726:	add    BYTE PTR [rax+0x302e],al
   14002672c:	add    BYTE PTR [rax],al
   14002672e:	add    BYTE PTR [rax+0x1843],al
   140026734:	add    BYTE PTR [rax],al
   140026736:	add    BYTE PTR [rax+0x1470],al
   14002673c:	add    BYTE PTR [rax],al
   14002673e:	add    BYTE PTR [rax+0x3be],al
   140026744:	add    BYTE PTR [rax],al
   140026746:	add    BYTE PTR [rax+0x58e],al
   14002674c:	add    BYTE PTR [rax],al
   14002674e:	add    BYTE PTR [rax+0x2da7],al
   140026754:	add    BYTE PTR [rax],al
   140026756:	add    BYTE PTR [rax+0x170e],al
   14002675c:	add    BYTE PTR [rax],al
   14002675e:	add    BYTE PTR [rax+0x33c8],al
   140026764:	add    BYTE PTR [rax],al
   140026766:	add    BYTE PTR [rax+0xa5f],al
   14002676c:	add    BYTE PTR [rax],al
   14002676e:	add    BYTE PTR [rax+0x224e],al
   140026774:	add    BYTE PTR [rax],al
   140026776:	add    BYTE PTR [rax+0x2dd0],al
   14002677c:	add    BYTE PTR [rax],al
   14002677e:	add    BYTE PTR [rax+0x21a4],al
   140026784:	add    BYTE PTR [rax],al
   140026786:	add    BYTE PTR [rax+0x2958],al
   14002678c:	add    BYTE PTR [rax],al
   14002678e:	add    BYTE PTR [rax+0x2ace],al
   140026794:	add    BYTE PTR [rax],al
   140026796:	add    BYTE PTR [rax+0xcc1],al
   14002679c:	add    BYTE PTR [rax],al
   14002679e:	add    BYTE PTR [rax+0xcc2],al
   1400267a4:	add    BYTE PTR [rax],al
   1400267a6:	add    BYTE PTR [rax+0xbd5],al
   1400267ac:	add    BYTE PTR [rax],al
   1400267ae:	add    BYTE PTR [rax+0xa54],al
   1400267b4:	add    BYTE PTR [rax],al
   1400267b6:	add    BYTE PTR [rax+0x3534],al
   1400267bc:	add    BYTE PTR [rax],al
   1400267be:	add    BYTE PTR [rax+0x353a],al
   1400267c4:	add    BYTE PTR [rax],al
   1400267c6:	add    BYTE PTR [rax+0x152d],al
   1400267cc:	add    BYTE PTR [rax],al
   1400267ce:	add    BYTE PTR [rax+0x87a],al
   1400267d4:	add    BYTE PTR [rax],al
   1400267d6:	add    BYTE PTR [rax+0x489],al
   1400267dc:	add    BYTE PTR [rax],al
   1400267de:	add    BYTE PTR [rax+0x2f76],al
   1400267e4:	add    BYTE PTR [rax],al
   1400267e6:	add    BYTE PTR [rax+0x660],al
   1400267ec:	add    BYTE PTR [rax],al
   1400267ee:	add    BYTE PTR [rax+0x1f98],al
   1400267f4:	add    BYTE PTR [rax],al
   1400267f6:	add    BYTE PTR [rax+0x21f],al
   1400267fc:	add    BYTE PTR [rax],al
   1400267fe:	add    BYTE PTR [rax+0x3644],al
   140026804:	add    BYTE PTR [rax],al
   140026806:	add    BYTE PTR [rax+0x364a],al
   14002680c:	add    BYTE PTR [rax],al
   14002680e:	add    BYTE PTR [rax+0xb33],al
   140026814:	add    BYTE PTR [rax],al
   140026816:	add    BYTE PTR [rax+0x11f],al
   14002681c:	add    BYTE PTR [rax],al
   14002681e:	add    BYTE PTR [rax+0x109],al
   140026824:	add    BYTE PTR [rax],al
   140026826:	add    BYTE PTR [rax+0x1ba9],al
   14002682c:	add    BYTE PTR [rax],al
   14002682e:	add    BYTE PTR [rax+0x1613],al
   140026834:	add    BYTE PTR [rax],al
   140026836:	add    BYTE PTR [rax+0x41d],al
   14002683c:	add    BYTE PTR [rax],al
   14002683e:	add    BYTE PTR [rax+0x104f],al
   140026844:	add    BYTE PTR [rax],al
   140026846:	add    BYTE PTR [rax+0x16a],al
   14002684c:	add    BYTE PTR [rax],al
   14002684e:	add    BYTE PTR [rax+0x1a39],al
   140026854:	add    BYTE PTR [rax],al
   140026856:	add    BYTE PTR [rax+0x932],al
   14002685c:	add    BYTE PTR [rax],al
   14002685e:	add    BYTE PTR [rax+0x1bac],al
   140026864:	add    BYTE PTR [rax],al
   140026866:	add    BYTE PTR [rax+0x1ba5],al
   14002686c:	add    BYTE PTR [rax],al
   14002686e:	add    BYTE PTR [rax+0x2d49],al
   140026874:	add    BYTE PTR [rax],al
   140026876:	add    BYTE PTR [rax+0x16d],al
   14002687c:	add    BYTE PTR [rax],al
   14002687e:	add    BYTE PTR [rax+0x1f04],al
   140026884:	add    BYTE PTR [rax],al
   140026886:	add    BYTE PTR [rax+0x208e],al
   14002688c:	add    BYTE PTR [rax],al
   14002688e:	add    BYTE PTR [rax+0x2063],al
   140026894:	add    BYTE PTR [rax],al
   140026896:	add    BYTE PTR [rax+0x1173],al
   14002689c:	add    BYTE PTR [rax],al
   14002689e:	add    BYTE PTR [rax+0x5da],al
   1400268a4:	add    BYTE PTR [rax],al
   1400268a6:	add    BYTE PTR [rax+0x1905],al
   1400268ac:	add    BYTE PTR [rax],al
   1400268ae:	add    BYTE PTR [rax+0x3019],al
   1400268b4:	add    BYTE PTR [rax],al
   1400268b6:	add    BYTE PTR [rax+0x67e],al
   1400268bc:	add    BYTE PTR [rax],al
   1400268be:	add    BYTE PTR [rax+0x1e5f],al
   1400268c4:	add    BYTE PTR [rax],al
   1400268c6:	add    BYTE PTR [rax+0x1c72],al
   1400268cc:	add    BYTE PTR [rax],al
   1400268ce:	add    BYTE PTR [rax+0x1710],al
   1400268d4:	add    BYTE PTR [rax],al
   1400268d6:	add    BYTE PTR [rax+0x33cc],al
   1400268dc:	add    BYTE PTR [rax],al
   1400268de:	add    BYTE PTR [rax+0xc62],al
   1400268e4:	add    BYTE PTR [rax],al
   1400268e6:	add    BYTE PTR [rax+0xc5f],al
   1400268ec:	add    BYTE PTR [rax],al
   1400268ee:	add    BYTE PTR [rax+0x2663],al
   1400268f4:	add    BYTE PTR [rax],al
   1400268f6:	add    BYTE PTR [rax+0x1e73],al
   1400268fc:	add    BYTE PTR [rax],al
   1400268fe:	add    BYTE PTR [rax+0xa60],al
   140026904:	add    BYTE PTR [rax],al
   140026906:	add    BYTE PTR [rax+0x5a9],al
   14002690c:	add    BYTE PTR [rax],al
   14002690e:	add    BYTE PTR [rax+0x2681],al
   140026914:	add    BYTE PTR [rax],al
   140026916:	add    BYTE PTR [rax+0x2683],al
   14002691c:	add    BYTE PTR [rax],al
   14002691e:	add    BYTE PTR [rax+0x2682],al
   140026924:	add    BYTE PTR [rax],al
   140026926:	add    BYTE PTR [rax+0x2680],al
   14002692c:	add    BYTE PTR [rax],al
   14002692e:	add    BYTE PTR [rax+0x2684],al
   140026934:	add    BYTE PTR [rax],al
   140026936:	add    BYTE PTR [rax+0x14eb],al
   14002693c:	add    BYTE PTR [rax],al
   14002693e:	add    BYTE PTR [rax+0x2c18],al
   140026944:	add    BYTE PTR [rax],al
   140026946:	add    BYTE PTR [rax+0x2c19],al
   14002694c:	add    BYTE PTR [rax],al
   14002694e:	add    BYTE PTR [rax+0x2207],al
   140026954:	add    BYTE PTR [rax],al
   140026956:	add    BYTE PTR [rax+0x2d7d],al
   14002695c:	add    BYTE PTR [rax],al
   14002695e:	add    BYTE PTR [rax+0xe5b],al
   140026964:	add    BYTE PTR [rax],al
   140026966:	add    BYTE PTR [rax+0x2ceb],al
   14002696c:	add    BYTE PTR [rax],al
   14002696e:	add    BYTE PTR [rax+0x36f3],al
   140026974:	add    BYTE PTR [rax],al
   140026976:	add    BYTE PTR [rax+0x2159],al
   14002697c:	add    BYTE PTR [rax],al
   14002697e:	add    BYTE PTR [rax+0x2e00],al
   140026984:	add    BYTE PTR [rax],al
   140026986:	add    BYTE PTR [rax+0x19e1],al
   14002698c:	add    BYTE PTR [rax],al
   14002698e:	add    BYTE PTR [rax+0x294b],al
   140026994:	add    BYTE PTR [rax],al
   140026996:	add    BYTE PTR [rax+0x227c],al
   14002699c:	add    BYTE PTR [rax],al
   14002699e:	add    BYTE PTR [rax+0xc3b],al
   1400269a4:	add    BYTE PTR [rax],al
   1400269a6:	add    BYTE PTR [rax+0x343c],al
   1400269ac:	add    BYTE PTR [rax],al
   1400269ae:	add    BYTE PTR [rax+0x2e27],al
   1400269b4:	add    BYTE PTR [rax],al
   1400269b6:	add    BYTE PTR [rax+0x2e25],al
   1400269bc:	add    BYTE PTR [rax],al
   1400269be:	add    BYTE PTR [rax+0x699],al
   1400269c4:	add    BYTE PTR [rax],al
   1400269c6:	add    BYTE PTR [rax+0x6a5],al
   1400269cc:	add    BYTE PTR [rax],al
   1400269ce:	add    BYTE PTR [rax+0x6ad],al
   1400269d4:	add    BYTE PTR [rax],al
   1400269d6:	add    BYTE PTR [rax+0x777],al
   1400269dc:	add    BYTE PTR [rax],al
   1400269de:	add    BYTE PTR [rax+0x6b2],al
   1400269e4:	add    BYTE PTR [rax],al
   1400269e6:	add    BYTE PTR [rax+0x126e],al
   1400269ec:	add    BYTE PTR [rax],al
   1400269ee:	add    BYTE PTR [rax+0x1297],al
   1400269f4:	add    BYTE PTR [rax],al
   1400269f6:	add    BYTE PTR [rax+0x1276],al
   1400269fc:	add    BYTE PTR [rax],al
   1400269fe:	add    BYTE PTR [rax+0x1282],al
   140026a04:	add    BYTE PTR [rax],al
   140026a06:	add    BYTE PTR [rax+0x127e],al
   140026a0c:	add    BYTE PTR [rax],al
   140026a0e:	add    BYTE PTR [rax+0x127a],al
   140026a14:	add    BYTE PTR [rax],al
   140026a16:	add    BYTE PTR [rax+0x129f],al
   140026a1c:	add    BYTE PTR [rax],al
   140026a1e:	add    BYTE PTR [rax+0x1293],al
   140026a24:	add    BYTE PTR [rax],al
   140026a26:	add    BYTE PTR [rax+0x1272],al
   140026a2c:	add    BYTE PTR [rax],al
   140026a2e:	add    BYTE PTR [rax+0x12a3],al
   140026a34:	add    BYTE PTR [rax],al
   140026a36:	add    BYTE PTR [rax+0x1288],al
   140026a3c:	add    BYTE PTR [rax],al
   140026a3e:	add    BYTE PTR [rax+0x1262],al
   140026a44:	add    BYTE PTR [rax],al
   140026a46:	add    BYTE PTR [rax+0x1269],al
   140026a4c:	add    BYTE PTR [rax],al
   140026a4e:	add    BYTE PTR [rax+0x128c],al
   140026a54:	add    BYTE PTR [rax],al
   140026a56:	add    BYTE PTR [rax+0x10dc],al
   140026a5c:	add    BYTE PTR [rax],al
   140026a5e:	add    BYTE PTR [rax+0x156c],al
   140026a64:	add    BYTE PTR [rax],al
   140026a66:	add    BYTE PTR [rax+0x2431],al
   140026a6c:	add    BYTE PTR [rax],al
   140026a6e:	add    BYTE PTR [rax+0x10d4],al
   140026a74:	add    BYTE PTR [rax],al
   140026a76:	add    BYTE PTR [rax+0xb6d],al
   140026a7c:	add    BYTE PTR [rax],al
   140026a7e:	add    BYTE PTR [rax+0x36f5],al
   140026a84:	add    BYTE PTR [rax],al
   140026a86:	add    BYTE PTR [rax+0x1d6f],al
   140026a8c:	add    BYTE PTR [rax],al
   140026a8e:	add    BYTE PTR [rax+0x36fb],al
   140026a94:	add    BYTE PTR [rax],al
   140026a96:	add    BYTE PTR [rax+0x197f],al
   140026a9c:	add    BYTE PTR [rax],al
   140026a9e:	add    BYTE PTR [rax+0x2c10],al
   140026aa4:	add    BYTE PTR [rax],al
   140026aa6:	add    BYTE PTR [rax+0x339d],al
   140026aac:	add    BYTE PTR [rax],al
   140026aae:	add    BYTE PTR [rax+0x15f9],al
   140026ab4:	add    BYTE PTR [rax],al
   140026ab6:	add    BYTE PTR [rax+0xa1b],al
   140026abc:	add    BYTE PTR [rax],al
   140026abe:	add    BYTE PTR [rax+0x2da0],al
   140026ac4:	add    BYTE PTR [rax],al
   140026ac6:	add    BYTE PTR [rax+0xeb9],al
   140026acc:	add    BYTE PTR [rax],al
   140026ace:	add    BYTE PTR [rax+0xca4],al
   140026ad4:	add    BYTE PTR [rax],al
   140026ad6:	add    BYTE PTR [rax+0xca5],al
   140026adc:	add    BYTE PTR [rax],al
   140026ade:	add    BYTE PTR [rax+0xc3a],al
   140026ae4:	add    BYTE PTR [rax],al
   140026ae6:	add    BYTE PTR [rax+0x2dcc],al
   140026aec:	add    BYTE PTR [rax],al
   140026aee:	add    BYTE PTR [rax+0x124a],al
   140026af4:	add    BYTE PTR [rax],al
   140026af6:	add    BYTE PTR [rax+0x3db],al
   140026afc:	add    BYTE PTR [rax],al
   140026afe:	add    BYTE PTR [rax+0x1974],al
   140026b04:	add    BYTE PTR [rax],al
   140026b06:	add    BYTE PTR [rax+0x1204],al
   140026b0c:	add    BYTE PTR [rax],al
   140026b0e:	add    BYTE PTR [rax+0x8fe],al
   140026b14:	add    BYTE PTR [rax],al
   140026b16:	add    BYTE PTR [rax+0x366c],al
   140026b1c:	add    BYTE PTR [rax],al
   140026b1e:	add    BYTE PTR [rax+0x3ab],al
   140026b24:	add    BYTE PTR [rax],al
   140026b26:	add    BYTE PTR [rax+0x45c],al
   140026b2c:	add    BYTE PTR [rax],al
   140026b2e:	add    BYTE PTR [rax+0x1e0],al
   140026b34:	add    BYTE PTR [rax],al
   140026b36:	add    BYTE PTR [rax+0x3a5],al
   140026b3c:	add    BYTE PTR [rax],al
   140026b3e:	add    BYTE PTR [rax+0x858],al
   140026b44:	add    BYTE PTR [rax],al
   140026b46:	add    BYTE PTR [rax+0x1f71],al
   140026b4c:	add    BYTE PTR [rax],al
   140026b4e:	add    BYTE PTR [rax+0x1c71],al
   140026b54:	add    BYTE PTR [rax],al
   140026b56:	add    BYTE PTR [rax+0x5a5],al
   140026b5c:	add    BYTE PTR [rax],al
   140026b5e:	add    BYTE PTR [rax+0x1f1e],al
   140026b64:	add    BYTE PTR [rax],al
   140026b66:	add    BYTE PTR [rax+0x2e1b],al
   140026b6c:	add    BYTE PTR [rax],al
   140026b6e:	add    BYTE PTR [rax+0x2715],al
   140026b74:	add    BYTE PTR [rax],al
   140026b76:	add    BYTE PTR [rax+0x30bc],al
   140026b7c:	add    BYTE PTR [rax],al
   140026b7e:	add    BYTE PTR [rax+0x307e],al
   140026b84:	add    BYTE PTR [rax],al
   140026b86:	add    BYTE PTR [rax+0x1131],al
   140026b8c:	add    BYTE PTR [rax],al
   140026b8e:	add    BYTE PTR [rax+0x1db0],al
   140026b94:	add    BYTE PTR [rax],al
   140026b96:	add    BYTE PTR [rax+0x1ee1],al
   140026b9c:	add    BYTE PTR [rax],al
   140026b9e:	add    BYTE PTR [rax+0x13df],al
   140026ba4:	add    BYTE PTR [rax],al
   140026ba6:	add    BYTE PTR [rax+0x95d],al
   140026bac:	add    BYTE PTR [rax],al
   140026bae:	add    BYTE PTR [rax+0x2f3d],al
   140026bb4:	add    BYTE PTR [rax],al
   140026bb6:	add    BYTE PTR [rax+0x2f3c],al
   140026bbc:	add    BYTE PTR [rax],al
   140026bbe:	add    BYTE PTR [rax+0x36f4],al
   140026bc4:	add    BYTE PTR [rax],al
   140026bc6:	add    BYTE PTR [rax+0x1d6e],al
   140026bcc:	add    BYTE PTR [rax],al
   140026bce:	add    BYTE PTR [rax+0x36fa],al
   140026bd4:	add    BYTE PTR [rax],al
   140026bd6:	add    BYTE PTR [rax+0x230a],al
   140026bdc:	add    BYTE PTR [rax],al
   140026bde:	add    BYTE PTR [rax+0xf80],al
   140026be4:	add    BYTE PTR [rax],al
   140026be6:	add    BYTE PTR [rax+0xf42],al
   140026bec:	add    BYTE PTR [rax],al
   140026bee:	add    BYTE PTR [rax+0x30cf],al
   140026bf4:	add    BYTE PTR [rax],al
   140026bf6:	add    BYTE PTR [rax+0x1d80],al
   140026bfc:	add    BYTE PTR [rax],al
   140026bfe:	add    BYTE PTR [rax+0x2d3f],al
   140026c04:	add    BYTE PTR [rax],al
   140026c06:	add    BYTE PTR [rax+0x7b1],al
   140026c0c:	add    BYTE PTR [rax],al
   140026c0e:	add    BYTE PTR [rax+0x2d13],al
   140026c14:	add    BYTE PTR [rax],al
   140026c16:	add    BYTE PTR [rax+0x2d12],al
   140026c1c:	add    BYTE PTR [rax],al
   140026c1e:	add    BYTE PTR [rax+0x367b],al
   140026c24:	add    BYTE PTR [rax],al
   140026c26:	add    BYTE PTR [rax+0x2f32],al
   140026c2c:	add    BYTE PTR [rax],al
   140026c2e:	add    BYTE PTR [rax+0x1db3],al
   140026c34:	add    BYTE PTR [rax],al
   140026c36:	add    BYTE PTR [rax+0x3742],al
   140026c3c:	add    BYTE PTR [rax],al
   140026c3e:	add    BYTE PTR [rax+0x1787],al
   140026c44:	add    BYTE PTR [rax],al
   140026c46:	add    BYTE PTR [rax+0x3744],al
   140026c4c:	add    BYTE PTR [rax],al
   140026c4e:	add    BYTE PTR [rax+0x1789],al
   140026c54:	add    BYTE PTR [rax],al
   140026c56:	add    BYTE PTR [rax+0x3743],al
   140026c5c:	add    BYTE PTR [rax],al
   140026c5e:	add    BYTE PTR [rax+0x1788],al
   140026c64:	add    BYTE PTR [rax],al
   140026c66:	add    BYTE PTR [rax+0x3d4],al
   140026c6c:	add    BYTE PTR [rax],al
   140026c6e:	add    BYTE PTR [rax+0x196f],al
   140026c74:	add    BYTE PTR [rax],al
   140026c76:	add    BYTE PTR [rax+0x420],al
   140026c7c:	add    BYTE PTR [rax],al
   140026c7e:	add    BYTE PTR [rax+0xe68],al
   140026c84:	add    BYTE PTR [rax],al
   140026c86:	add    BYTE PTR [rax+0x15e8],al
   140026c8c:	add    BYTE PTR [rax],al
   140026c8e:	add    BYTE PTR [rax+0x2e13],al
   140026c94:	add    BYTE PTR [rax],al
   140026c96:	add    BYTE PTR [rax+0x1e7a],al
   140026c9c:	add    BYTE PTR [rax],al
   140026c9e:	add    BYTE PTR [rax+0x2e1f],al
   140026ca4:	add    BYTE PTR [rax],al
   140026ca6:	add    BYTE PTR [rax+0x2dff],al
   140026cac:	add    BYTE PTR [rax],al
   140026cae:	add    BYTE PTR [rax+0xf44],al
   140026cb4:	add    BYTE PTR [rax],al
   140026cb6:	add    BYTE PTR [rax+0x137b],al
   140026cbc:	add    BYTE PTR [rax],al
   140026cbe:	add    BYTE PTR [rax+0x1493],al
   140026cc4:	add    BYTE PTR [rax],al
   140026cc6:	add    BYTE PTR [rax+0x154f],al
   140026ccc:	add    BYTE PTR [rax],al
   140026cce:	add    BYTE PTR [rax+0x22da],al
   140026cd4:	add    BYTE PTR [rax],al
   140026cd6:	add    BYTE PTR [rax+0x147b],al
   140026cdc:	add    BYTE PTR [rax],al
   140026cde:	add    BYTE PTR [rax+0x1552],al
   140026ce4:	add    BYTE PTR [rax],al
   140026ce6:	add    BYTE PTR [rax+0x137e],al
   140026cec:	add    BYTE PTR [rax],al
   140026cee:	add    BYTE PTR [rax+0x140d],al
   140026cf4:	add    BYTE PTR [rax],al
   140026cf6:	add    BYTE PTR [rax+0x136a],al
   140026cfc:	add    BYTE PTR [rax],al
   140026cfe:	add    BYTE PTR [rax+0x1cb2],al
   140026d04:	add    BYTE PTR [rax],al
   140026d06:	add    BYTE PTR [rax+0x1cb3],al
   140026d0c:	add    BYTE PTR [rax],al
   140026d0e:	add    BYTE PTR [rax+0x1ca9],al
   140026d14:	add    BYTE PTR [rax],al
   140026d16:	add    BYTE PTR [rax+0x140b],al
   140026d1c:	add    BYTE PTR [rax],al
   140026d1e:	add    BYTE PTR [rax+0x1e7c],al
   140026d24:	add    BYTE PTR [rax],al
   140026d26:	add    BYTE PTR [rax+0x265e],al
   140026d2c:	add    BYTE PTR [rax],al
   140026d2e:	add    BYTE PTR [rax+0x224d],al
   140026d34:	add    BYTE PTR [rax],al
   140026d36:	add    BYTE PTR [rax+0x1f6b],al
   140026d3c:	add    BYTE PTR [rax],al
   140026d3e:	add    BYTE PTR [rax+0xb2d],al
   140026d44:	add    BYTE PTR [rax],al
   140026d46:	add    BYTE PTR [rax+0x15eb],al
   140026d4c:	add    BYTE PTR [rax],al
   140026d4e:	add    BYTE PTR [rax+0x681],al
   140026d54:	add    BYTE PTR [rax],al
   140026d56:	add    BYTE PTR [rax+0x5d8],al
   140026d5c:	add    BYTE PTR [rax],al
   140026d5e:	add    BYTE PTR [rax+0x406],al
   140026d64:	add    BYTE PTR [rax],al
   140026d66:	add    BYTE PTR [rax+0x11e],al
   140026d6c:	add    BYTE PTR [rax],al
   140026d6e:	add    BYTE PTR [rax+0x118],al
   140026d74:	add    BYTE PTR [rax],al
   140026d76:	add    BYTE PTR [rax+0x11d],al
   140026d7c:	add    BYTE PTR [rax],al
   140026d7e:	add    BYTE PTR [rax+0x128],al
   140026d84:	add    BYTE PTR [rax],al
   140026d86:	add    BYTE PTR [rax+0xb3f],al
   140026d8c:	add    BYTE PTR [rax],al
   140026d8e:	add    BYTE PTR [rax+0x35f0],al
   140026d94:	add    BYTE PTR [rax],al
   140026d96:	add    BYTE PTR [rax+0x2f4e],al
   140026d9c:	add    BYTE PTR [rax],al
   140026d9e:	add    BYTE PTR [rax+0x15c8],al
   140026da4:	add    BYTE PTR [rax],al
   140026da6:	add    BYTE PTR [rax+0x12f7],al
   140026dac:	add    BYTE PTR [rax],al
   140026dae:	add    BYTE PTR [rax+0x664],al
   140026db4:	add    BYTE PTR [rax],al
   140026db6:	add    BYTE PTR [rax+0x904],al
   140026dbc:	add    BYTE PTR [rax],al
   140026dbe:	add    BYTE PTR [rax+0x900],al
   140026dc4:	add    BYTE PTR [rax],al
   140026dc6:	add    BYTE PTR [rax+0x6a9],al
   140026dcc:	add    BYTE PTR [rax],al
   140026dce:	add    BYTE PTR [rax+0xa51],al
   140026dd4:	add    BYTE PTR [rax],al
   140026dd6:	add    BYTE PTR [rax+0x5cc],al
   140026ddc:	add    BYTE PTR [rax],al
   140026dde:	add    BYTE PTR [rax+0x10a],al
   140026de4:	add    BYTE PTR [rax],al
   140026de6:	add    BYTE PTR [rax+0x1088],al
   140026dec:	add    BYTE PTR [rax],al
   140026dee:	add    BYTE PTR [rax+0x5ce],al
   140026df4:	add    BYTE PTR [rax],al
   140026df6:	add    BYTE PTR [rax+0x5cf],al
   140026dfc:	add    BYTE PTR [rax],al
   140026dfe:	add    BYTE PTR [rax+0x144],al
   140026e04:	add    BYTE PTR [rax],al
   140026e06:	add    BYTE PTR [rax+0x40d],al
   140026e0c:	add    BYTE PTR [rax],al
   140026e0e:	add    BYTE PTR [rax+0x8ed],al
   140026e14:	add    BYTE PTR [rax],al
   140026e16:	add    BYTE PTR [rax+0x143],al
   140026e1c:	add    BYTE PTR [rax],al
   140026e1e:	add    BYTE PTR [rax+0x40c],al
   140026e24:	add    BYTE PTR [rax],al
   140026e26:	add    BYTE PTR [rax+0x91a],al
   140026e2c:	add    BYTE PTR [rax],al
   140026e2e:	add    BYTE PTR [rax+0x918],al
   140026e34:	add    BYTE PTR [rax],al
   140026e36:	add    BYTE PTR [rax+0x0],al
   140026e3c:	add    BYTE PTR [rax],al
   140026e3e:	add    BYTE PTR [rax],al
   140026e40:	jp     0x140026de5
   140026e42:	add    eax,DWORD PTR [rax]
   140026e44:	add    BYTE PTR [rax],al
   140026e46:	add    BYTE PTR [rax],al
   140026e48:	push   0x3a3
   140026e4d:	add    BYTE PTR [rax],al
   140026e4f:	add    BYTE PTR [rsi-0x5d],bl
   140026e52:	add    eax,DWORD PTR [rax]
   140026e54:	add    BYTE PTR [rax],al
   140026e56:	add    BYTE PTR [rax],al
   140026e58:	rex.WRX movabs ds:0xa33a000000000003,rax
   140026e62:	add    eax,DWORD PTR [rax]
   140026e64:	add    BYTE PTR [rax],al
   140026e66:	add    BYTE PTR [rax],al
   140026e68:	sub    BYTE PTR [rbx+0x3],ah
   140026e6e:	add    BYTE PTR [rax],al
   140026e70:	adc    al,0xa3
   140026e72:	add    eax,DWORD PTR [rax]
   140026e74:	add    BYTE PTR [rax],al
   140026e76:	add    BYTE PTR [rax],al
   140026e78:	add    ah,BYTE PTR [rbx+0x3]
	...
   140026e8e:	add    BYTE PTR [rax],al
   140026e90:	test   al,0x12
   140026e92:	add    al,BYTE PTR [rax+0x1]
   140026e95:	add    BYTE PTR [rax],al
   140026e97:	add    BYTE PTR [rdx+rdx*1+0x14000],bl
   140026e9e:	add    BYTE PTR [rax],al
   140026ea0:	in     al,0x12
   140026ea2:	add    BYTE PTR [rax+0x1],al
   140026ea5:	add    BYTE PTR [rax],al
   140026ea7:	add    BYTE PTR [rbx+rdx*1],bl
   140026eaa:	add    BYTE PTR [rax+0x1],al
   140026ead:	add    BYTE PTR [rax],al
   140026eaf:	add    BYTE PTR [rax],ah
   140026eb1:	adc    BYTE PTR [rax],al
   140026eb3:	rex add DWORD PTR [rax],eax
   140026eb6:	add    BYTE PTR [rax],al
   140026eb8:	add    BYTE PTR [rax],dl
   140026eba:	add    BYTE PTR [rax+0x1],al
   140026ebd:	add    BYTE PTR [rax],al
   140026ebf:	add    BYTE PTR [rax+0x10],al
   140026ec2:	add    BYTE PTR [rax+0x1],al
   140026ec5:	add    BYTE PTR [rax],al
   140026ec7:	add    BYTE PTR [rax+0x1400010],dl
   140026ecd:	add    BYTE PTR [rax],al
   140026ecf:	add    BYTE PTR [rax+0x10],dh
   140026ed2:	add    BYTE PTR [rax+0x1],al
   140026ed5:	add    BYTE PTR [rax],al
   140026ed7:	add    al,dl
   140026ed9:	adc    BYTE PTR [rax],al
   140026edb:	rex add DWORD PTR [rax],eax
   140026ede:	add    BYTE PTR [rax],al
   140026ee0:	mov    al,0x10
   140026ee2:	add    BYTE PTR [rax+0x1],al
   140026ee5:	add    BYTE PTR [rax],al
   140026ee7:	add    BYTE PTR [rax],dl
   140026ee9:	adc    DWORD PTR [rax],eax
   140026eeb:	rex add DWORD PTR [rax],eax
   140026eee:	add    BYTE PTR [rax],al
   140026ef0:	lock adc BYTE PTR [rax],al
   140026ef3:	rex add DWORD PTR [rax],eax
   140026ef6:	add    BYTE PTR [rax],al
   140026ef8:	nop
   140026ef9:	adc    DWORD PTR [rax],eax
   140026efb:	rex add DWORD PTR [rax],eax
   140026efe:	add    BYTE PTR [rax],al
   140026f00:	push   rax
   140026f01:	adc    DWORD PTR [rax],eax
   140026f03:	rex add DWORD PTR [rax],eax
   140026f06:	add    BYTE PTR [rax],al
   140026f08:	jo     0x140026f1b
   140026f0a:	add    BYTE PTR [rax+0x1],al
   140026f0d:	add    BYTE PTR [rax],al
   140026f0f:	add    BYTE PTR [rax],dh
   140026f11:	adc    DWORD PTR [rax],eax
   140026f13:	rex add DWORD PTR [rax],eax
   140026f16:	add    BYTE PTR [rax],al
   140026f18:	add    BYTE PTR [rdx],dl
   140026f1a:	add    BYTE PTR [rax+0x1],al
   140026f1d:	add    BYTE PTR [rax],al
   140026f1f:	add    BYTE PTR [rax+0x1400011],dh
   140026f25:	add    BYTE PTR [rax],al
   140026f27:	add    al,dl
   140026f29:	adc    DWORD PTR [rax],eax
   140026f2b:	rex add DWORD PTR [rax],eax
   140026f2e:	add    BYTE PTR [rax],al
   140026f30:	adc    al,BYTE PTR [rax]
   140026f33:	rex add DWORD PTR [rax],eax
   140026f36:	add    BYTE PTR [rax],al
   140026f38:	and    BYTE PTR [rdx],dl
   140026f3a:	add    BYTE PTR [rax+0x1],al
   140026f3d:	add    BYTE PTR [rax],al
   140026f3f:	add    BYTE PTR [rax+0x1400012],al
   140026f45:	add    BYTE PTR [rax],al
   140026f47:	add    BYTE PTR [rax+0x12],ah
   140026f4a:	add    BYTE PTR [rax+0x1],al
   140026f4d:	add    BYTE PTR [rax],al
   140026f4f:	add    BYTE PTR [rax],dl
   140026f51:	adc    eax,DWORD PTR [rax]
   140026f53:	rex add DWORD PTR [rax],eax
	...
   140026f66:	add    BYTE PTR [rax],al
   140026f68:	fcom   DWORD PTR [rcx]
   140026f6a:	add    al,BYTE PTR [rax+0x1]
   140026f6d:	add    BYTE PTR [rax],al
   140026f6f:	add    al,cl
   140026f71:	adc    eax,0x14002
   140026f76:	add    BYTE PTR [rax],al
   140026f78:	sbb    BYTE PTR [rdx],bl
   140026f7a:	add    al,BYTE PTR [rax+0x1]
	...
   140026f91:	add    BYTE PTR [rax],al
   140026f93:	add    BYTE PTR [rdx],cl
   140026f95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026f96:	sbb    BYTE PTR [rbx+0x0],dl
   140026f99:	add    BYTE PTR [rax],al
   140026f9b:	add    BYTE PTR [rdx],al
   140026f9d:	add    BYTE PTR [rax],al
   140026f9f:	add    BYTE PTR [rdi+0x0],bl
   140026fa2:	add    BYTE PTR [rax],al
   140026fa4:	(bad)  
   140026fa5:	sbb    DWORD PTR [rbx],eax
   140026fa7:	add    BYTE PTR [rax+0xb],ah
   140026faa:	add    eax,DWORD PTR [rax]
   140026fac:	add    BYTE PTR [rax],al
   140026fae:	add    BYTE PTR [rax],al
   140026fb0:	or     ah,BYTE PTR [rbp+0x5318]
   140026fb6:	add    BYTE PTR [rax],al
   140026fb8:	or     al,0x0
   140026fba:	add    BYTE PTR [rax],al
   140026fbc:	adc    al,0x0
   140026fbe:	add    BYTE PTR [rax],al
   140026fc0:	rcr    BYTE PTR [rcx],0x3
   140026fc3:	add    al,al
   140026fc5:	or     eax,DWORD PTR [rbx]
   140026fc7:	add    BYTE PTR [rcx+0x0],ah
   140026fca:	je     0x140026fcc
   140026fcc:	ins    BYTE PTR es:[rdi],dx
   140026fcd:	add    BYTE PTR [rax+rax*1+0x72],dl
   140026fd1:	add    BYTE PTR [rcx+0x0],ah
   140026fd4:	movsxd eax,DWORD PTR [rax]
   140026fd6:	add    BYTE PTR gs:[rcx+0x0],dl
   140026fda:	rex.WB add BYTE PTR [r8],al
   140026fdd:	add    BYTE PTR [rax],al
   140026fdf:	add    BYTE PTR [rcx+0x0],ah
   140026fe2:	je     0x140026fe4
   140026fe4:	ins    BYTE PTR es:[rdi],dx
   140026fe5:	add    BYTE PTR [rax+rax*1+0x72],dl
   140026fe9:	add    BYTE PTR [rcx+0x0],ah
   140026fec:	movsxd eax,DWORD PTR [rax]
   140026fee:	add    BYTE PTR gs:[rdx+0x0],dl
   140026ff2:	add    BYTE PTR gs:[rdi+0x0],ah
   140026ff6:	imul   eax,DWORD PTR [rax],0x740073
   140026ffc:	jb     0x140026ffe
   140026ffe:	(bad)  
   140026fff:	add    BYTE PTR [rdx+0x0],dh
   140027002:	add    BYTE PTR [rax],al
   140027004:	push   rbx
   140027005:	add    BYTE PTR [rax],al
   140027007:	add    BYTE PTR [rcx+0x0],ah
   14002700a:	je     0x14002700c
   14002700c:	ins    BYTE PTR es:[rdi],dx
   14002700d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027011:	add    BYTE PTR [rcx+0x0],ah
   140027014:	movsxd eax,DWORD PTR [rax]
   140027016:	add    BYTE PTR gs:[rdx+0x0],dl
   14002701a:	add    BYTE PTR gs:[rsi+0x0],ah
   14002701e:	movsxd eax,DWORD PTR [rax]
   140027020:	outs   dx,DWORD PTR ds:[rsi]
   140027021:	add    BYTE PTR [rbp+0x0],dh
   140027024:	outs   dx,BYTE PTR ds:[rsi]
   140027025:	add    BYTE PTR [rax+rax*1+0x0],dh
   140027029:	add    BYTE PTR [rax],al
   14002702b:	add    BYTE PTR [rbp+0x0],cl
   14002702e:	add    BYTE PTR [rax],al
   140027030:	(bad)  
   140027031:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027035:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027039:	add    BYTE PTR [rcx+0x0],ah
   14002703c:	movsxd eax,DWORD PTR [rax]
   14002703e:	add    BYTE PTR gs:[rdi+0x0],dl
   140027042:	imul   eax,DWORD PTR [rax],0x64006e
   140027048:	outs   dx,DWORD PTR ds:[rsi]
   140027049:	add    BYTE PTR [rdi+0x0],dh
   14002704c:	imul   eax,DWORD PTR [rax],0x67006e
   140027052:	add    BYTE PTR [rax],al
   140027054:	add    BYTE PTR [rax],r8b
   140027057:	add    BYTE PTR [rcx+0x0],ah
   14002705a:	je     0x14002705c
   14002705c:	ins    BYTE PTR es:[rdi],dx
   14002705d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027061:	add    BYTE PTR [rcx+0x0],ah
   140027064:	movsxd eax,DWORD PTR [rax]
   140027066:	add    BYTE PTR gs:[rbx+0x0],al
   14002706a:	outs   dx,DWORD PTR ds:[rsi]
   14002706b:	add    BYTE PTR [rsi+0x0],ch
   14002706e:	je     0x140027070
   140027070:	jb     0x140027072
   140027072:	outs   dx,DWORD PTR ds:[rsi]
   140027073:	add    BYTE PTR [rax+rax*1+0x73],ch
   140027077:	add    BYTE PTR [rax],al
   140027079:	add    BYTE PTR [rax],al
   14002707b:	add    BYTE PTR [rdx+0x0],al
   14002707e:	add    BYTE PTR [rax],al
   140027080:	(bad)  
   140027081:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027085:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027089:	add    BYTE PTR [rcx+0x0],ah
   14002708c:	movsxd eax,DWORD PTR [rax]
   14002708e:	add    BYTE PTR gs:[rax+0x0],cl
   140027092:	outs   dx,DWORD PTR ds:[rsi]
   140027093:	add    BYTE PTR [rbx+0x0],dh
   140027096:	je     0x140027098
   140027098:	imul   eax,DWORD PTR [rax],0x67006e
   14002709e:	add    BYTE PTR [rax],al
   1400270a0:	(bad)  
   1400270a1:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400270a5:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400270a9:	add    BYTE PTR [rcx+0x0],ah
   1400270ac:	movsxd eax,DWORD PTR [rax]
   1400270ae:	add    BYTE PTR gs:[rax+rax*1+0x42],al
   1400270b3:	add    BYTE PTR [rbx+0x0],al
   1400270b6:	ins    BYTE PTR es:[rdi],dx
   1400270b7:	add    BYTE PTR [rcx+0x0],ch
   1400270ba:	add    BYTE PTR gs:[rsi+0x0],ch
   1400270be:	je     0x1400270c0
	...
   1400270c8:	(bad)  
   1400270c9:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400270cd:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400270d1:	add    BYTE PTR [rcx+0x0],ah
   1400270d4:	movsxd eax,DWORD PTR [rax]
   1400270d6:	add    BYTE PTR gs:[rax+rax*1+0x42],al
   1400270db:	add    BYTE PTR [rax+0x0],dl
   1400270de:	jb     0x1400270e0
   1400270e0:	outs   dx,DWORD PTR ds:[rsi]
   1400270e1:	add    BYTE PTR [rsi+0x0],dh
   1400270e4:	imul   eax,DWORD PTR [rax],0x650064
   1400270ea:	jb     0x1400270ec
   1400270ec:	add    BYTE PTR [rax],al
   1400270ee:	add    BYTE PTR [rax],al
   1400270f0:	(bad)  
   1400270f1:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400270f5:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400270f9:	add    BYTE PTR [rcx+0x0],ah
   1400270fc:	movsxd eax,DWORD PTR [rax]
   1400270fe:	add    BYTE PTR gs:[rbx+0x0],dl
   140027102:	outs   dx,BYTE PTR ds:[rsi]
   140027103:	add    BYTE PTR [rcx+0x0],ah
   140027106:	jo     0x140027108
   140027108:	imul   eax,DWORD PTR [rax],0x6e
   14002710e:	add    BYTE PTR [rax],al
   140027110:	(bad)  
   140027111:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027115:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027119:	add    BYTE PTR [rcx+0x0],ah
   14002711c:	movsxd eax,DWORD PTR [rax]
   14002711e:	add    BYTE PTR gs:[rsi+0x0],cl
   140027122:	outs   dx,DWORD PTR ds:[rsi]
   140027123:	add    BYTE PTR [rax+rax*1+0x49],dh
   140027127:	add    BYTE PTR [rbp+0x0],ch
   14002712a:	jo     0x14002712c
   14002712c:	ins    BYTE PTR es:[rdi],dx
   14002712d:	add    BYTE PTR [rax],al
   14002712f:	add    BYTE PTR [rcx+0x0],al
   140027132:	jo     0x140027134
   140027134:	jo     0x140027136
   140027136:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002713b:	add    BYTE PTR [rax],al
   14002713d:	add    BYTE PTR [rax],al
   14002713f:	add    BYTE PTR [rbx+0x0],al
   140027142:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140027146:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002714b:	add    BYTE PTR [rax],al
   14002714d:	add    BYTE PTR [rax],al
   14002714f:	add    BYTE PTR [rbx+0x0],al
   140027152:	outs   dx,DWORD PTR ds:[rsi]
   140027153:	add    BYTE PTR [rbp+0x0],ch
   140027156:	jo     0x140027158
   140027158:	outs   dx,DWORD PTR ds:[rsi]
   140027159:	add    BYTE PTR [rsi+0x0],ch
   14002715c:	add    BYTE PTR gs:[rsi+0x0],ch
   140027160:	je     0x140027162
   140027162:	and    BYTE PTR [rax],al
   140027164:	rex.XB add BYTE PTR [r9+0x0],spl
   140027168:	je     0x14002716a
   14002716a:	add    BYTE PTR gs:[rdi+0x0],ah
   14002716e:	outs   dx,DWORD PTR ds:[rsi]
   14002716f:	add    BYTE PTR [rdx+0x0],dh
   140027172:	imul   eax,DWORD PTR [rax],0x730065
	...
   140027180:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140027184:	ins    BYTE PTR es:[rdi],dx
   140027185:	add    BYTE PTR [rbp+0x0],ah
   140027188:	push   rsp
   140027189:	add    BYTE PTR [rcx+0x0],bh
   14002718c:	jo     0x14002718e
   14002718e:	add    BYTE PTR gs:[rax],al
   140027191:	add    BYTE PTR [rax],al
   140027193:	add    BYTE PTR [rax],al
   140027195:	add    BYTE PTR [rax],al
   140027197:	add    BYTE PTR [rcx+0x0],cl
   14002719a:	outs   dx,BYTE PTR ds:[rsi]
   14002719b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002719f:	add    BYTE PTR [rdx+0x0],dh
   1400271a2:	data16 add BYTE PTR [rcx+0x0],ah
   1400271a6:	movsxd eax,DWORD PTR [rax]
   1400271a8:	add    BYTE PTR gs:[rax],al
   1400271ab:	add    BYTE PTR [rax],al
   1400271ad:	add    BYTE PTR [rax],al
   1400271af:	add    BYTE PTR [rax+0x0],cl
   1400271b2:	(bad)  
   1400271b3:	add    BYTE PTR [rdx+0x0],dh
   1400271b6:	add    BYTE PTR fs:[rdi+0x0],dh
   1400271ba:	(bad)  
   1400271bb:	add    BYTE PTR [rdx+0x0],dh
   1400271be:	add    BYTE PTR gs:[rax],al
   1400271c1:	add    BYTE PTR [rax],al
   1400271c3:	add    BYTE PTR [rax],al
   1400271c5:	add    BYTE PTR [rax],al
   1400271c7:	add    BYTE PTR [rbp+0x0],cl
   1400271ca:	imul   eax,DWORD PTR [rax],0x65006d
	...
   1400271d8:	push   rbx
   1400271d9:	add    BYTE PTR [rcx+0x0],al
   1400271dc:	rex.WRB add BYTE PTR [r8],r8b
   1400271df:	add    BYTE PTR [rbx+0x0],dl
   1400271e2:	add    BYTE PTR [r11+0x0],r8b
   1400271e6:	push   rbp
   1400271e7:	add    BYTE PTR [rdx+0x0],dl
   1400271ea:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   1400271f7:	add    BYTE PTR [rbx+0x0],dl
   1400271fa:	pop    rcx
   1400271fb:	add    BYTE PTR [rbx+0x0],dl
   1400271fe:	push   rsp
   1400271ff:	add    BYTE PTR [rbp+0x0],al
   140027202:	rex.WRB add BYTE PTR [r8],r8b
   140027205:	add    BYTE PTR [rax],al
   140027207:	add    BYTE PTR [rbx+0x0],dl
   14002720a:	outs   dx,DWORD PTR ds:[rsi]
   14002720b:	add    BYTE PTR [rsi+0x0],ah
   14002720e:	je     0x140027210
   140027210:	ja     0x140027212
   140027212:	(bad)  
   140027213:	add    BYTE PTR [rdx+0x0],dh
   140027216:	add    BYTE PTR gs:[rax],al
   140027219:	add    BYTE PTR [rax],al
   14002721b:	add    BYTE PTR [rax],al
   14002721d:	add    BYTE PTR [rax],al
   14002721f:	add    BYTE PTR [rax+rax*1+0x79],dl
   140027223:	add    BYTE PTR [rax+0x0],dh
   140027226:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14002722b:	add    BYTE PTR [rdx+0x0],ah
   14002722e:	add    BYTE PTR [rax],al
   140027230:	(bad)  
   140027231:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027235:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027239:	add    BYTE PTR [rcx+0x0],ah
   14002723c:	movsxd eax,DWORD PTR [rax]
   14002723e:	add    BYTE PTR gs:[rcx+0x0],al
   140027242:	ins    BYTE PTR es:[rdi],dx
   140027243:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140027247:	add    BYTE PTR [rbx+0x0],ah
   14002724a:	(bad)  
   14002724b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002724f:	add    BYTE PTR [rdi+0x0],ch
   140027252:	outs   dx,BYTE PTR ds:[rsi]
   140027253:	add    BYTE PTR [rax],al
   140027255:	add    BYTE PTR [rax],al
   140027257:	add    BYTE PTR [rcx+0x0],ah
   14002725a:	je     0x14002725c
   14002725c:	ins    BYTE PTR es:[rdi],dx
   14002725d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027261:	add    BYTE PTR [rcx+0x0],ah
   140027264:	movsxd eax,DWORD PTR [rax]
   140027266:	add    BYTE PTR gs:[rbp+0x0],al
   14002726a:	js     0x14002726c
   14002726c:	movsxd eax,DWORD PTR [rax]
   14002726e:	add    BYTE PTR gs:[rax+0x0],dh
   140027272:	je     0x140027274
   140027274:	imul   eax,DWORD PTR [rax],0x6e006f
   14002727a:	add    BYTE PTR [rax],al
   14002727c:	add    BYTE PTR [rax],al
   14002727e:	add    BYTE PTR [rax],al
   140027280:	(bad)  
   140027281:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027285:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027289:	add    BYTE PTR [rcx+0x0],ah
   14002728c:	movsxd eax,DWORD PTR [rax]
   14002728e:	add    BYTE PTR gs:[rax+rax*1+0x69],dl
   140027293:	add    BYTE PTR [rbp+0x0],ch
   140027296:	add    BYTE PTR gs:[rax],al
   140027299:	add    BYTE PTR [rax],al
   14002729b:	add    BYTE PTR [rax],al
   14002729d:	add    BYTE PTR [rax],al
   14002729f:	add    BYTE PTR [rcx+0x0],ah
   1400272a2:	je     0x1400272a4
   1400272a4:	ins    BYTE PTR es:[rdi],dx
   1400272a5:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400272a9:	add    BYTE PTR [rcx+0x0],ah
   1400272ac:	movsxd eax,DWORD PTR [rax]
   1400272ae:	add    BYTE PTR gs:[rbx+0x0],al
   1400272b2:	(bad)  
   1400272b3:	add    BYTE PTR [rbx+0x0],ah
   1400272b6:	push   0x6500
   1400272bb:	add    BYTE PTR [rax],al
   1400272bd:	add    BYTE PTR [rax],al
   1400272bf:	add    BYTE PTR [rcx+0x0],cl
   1400272c2:	outs   dx,BYTE PTR ds:[rsi]
   1400272c3:	add    BYTE PTR [rsi+0x0],dh
   1400272c6:	(bad)  
   1400272c7:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400272cb:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400272cf:	add    BYTE PTR [rax+rax*1+0x61],al
   1400272d3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400272d7:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400272db:	add    BYTE PTR [rbp+0x0],ch
   1400272de:	add    BYTE PTR gs:[rax],al
   1400272e1:	add    BYTE PTR [rax],al
   1400272e3:	add    BYTE PTR [rax],al
   1400272e5:	add    BYTE PTR [rax],al
   1400272e7:	add    BYTE PTR [rcx+0x0],cl
   1400272ea:	outs   dx,BYTE PTR ds:[rsi]
   1400272eb:	add    BYTE PTR [rsi+0x0],dh
   1400272ee:	(bad)  
   1400272ef:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400272f3:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400272f7:	add    BYTE PTR [rax+rax*1+0x61],al
   1400272fb:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400272ff:	add    BYTE PTR [rax+rax*1+0x69],dl
   140027303:	add    BYTE PTR [rbp+0x0],ch
   140027306:	add    BYTE PTR gs:[rbx+0x0],dl
   14002730a:	jo     0x14002730c
   14002730c:	(bad)  
   14002730d:	add    BYTE PTR [rsi+0x0],ch
	...
   140027318:	(bad)  
   140027319:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002731d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027321:	add    BYTE PTR [rcx+0x0],ah
   140027324:	movsxd eax,DWORD PTR [rax]
   140027326:	add    BYTE PTR gs:[rbx+0x0],dl
   14002732a:	je     0x14002732c
   14002732c:	add    BYTE PTR gs:[rsi+0x0],ch
   140027330:	movsxd eax,DWORD PTR [rax]
   140027332:	imul   eax,DWORD PTR [rax],0x6c
   140027338:	(bad)  
   140027339:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002733d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027341:	add    BYTE PTR [rcx+0x0],ah
   140027344:	movsxd eax,DWORD PTR [rax]
   140027346:	add    BYTE PTR gs:[rbx+0x0],dl
   14002734a:	je     0x14002734c
   14002734c:	jb     0x14002734e
   14002734e:	imul   eax,DWORD PTR [rax],0x67006e
   140027354:	add    BYTE PTR [rax],al
   140027356:	add    BYTE PTR [rax],al
   140027358:	(bad)  
   140027359:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002735d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027361:	add    BYTE PTR [rcx+0x0],ah
   140027364:	movsxd eax,DWORD PTR [rax]
   140027366:	add    BYTE PTR gs:[rbp+0x0],cl
   14002736a:	(bad)  
   14002736b:	add    BYTE PTR [rax+0x0],dh
   14002736e:	add    BYTE PTR [rax],al
   140027370:	(bad)  
   140027371:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027375:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027379:	add    BYTE PTR [rcx+0x0],ah
   14002737c:	movsxd eax,DWORD PTR [rax]
   14002737e:	add    BYTE PTR gs:[rbp+0x0],dl
   140027382:	je     0x140027384
   140027384:	imul   eax,DWORD PTR [rax],0x6c
   14002738a:	add    BYTE PTR [rax],al
   14002738c:	add    BYTE PTR [rax],al
   14002738e:	add    BYTE PTR [rax],al
   140027390:	push   rsi
   140027391:	add    BYTE PTR [rcx+0x0],ah
   140027394:	ins    BYTE PTR es:[rdi],dx
   140027395:	add    BYTE PTR [rax],al
   140027397:	add    BYTE PTR [rsi+0x0],al
   14002739a:	outs   dx,DWORD PTR ds:[rsi]
   14002739b:	add    BYTE PTR [rdx+0x0],dh
   14002739e:	movsxd eax,DWORD PTR [rax]
   1400273a0:	add    BYTE PTR gs:[rdx+0x0],dl
   1400273a4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400273a8:	outs   dx,DWORD PTR ds:[rsi]
   1400273a9:	add    BYTE PTR [rsi+0x0],dh
   1400273ac:	add    BYTE PTR gs:[rax],al
   1400273af:	add    BYTE PTR [rcx+0x0],ah
   1400273b2:	je     0x1400273b4
   1400273b4:	ins    BYTE PTR es:[rdi],dx
   1400273b5:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400273b9:	add    BYTE PTR [rcx+0x0],ah
   1400273bc:	movsxd eax,DWORD PTR [rax]
   1400273be:	add    BYTE PTR gs:[rbx+0x0],dl
   1400273c2:	add    BYTE PTR gs:[rbx+0x0],ah
   1400273c6:	jne    0x1400273c8
   1400273c8:	jb     0x1400273ca
   1400273ca:	imul   eax,DWORD PTR [rax],0x790074
	...
   1400273d8:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400273dc:	push   rdx
   1400273dd:	add    BYTE PTR [rbp+0x0],ah
   1400273e0:	ins    DWORD PTR es:[rdi],dx
   1400273e1:	add    BYTE PTR [rdi+0x0],ch
   1400273e4:	jbe    0x1400273e6
   1400273e6:	add    BYTE PTR gs:[rax],al
   1400273e9:	add    BYTE PTR [rax],al
   1400273eb:	add    BYTE PTR [rax],al
   1400273ed:	add    BYTE PTR [rax],al
   1400273ef:	add    BYTE PTR [rax+rax*1+0x65],al
   1400273f3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400273f7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400273fb:	add    BYTE PTR [rax],al
   1400273fd:	add    BYTE PTR [rax],al
   1400273ff:	add    BYTE PTR [rcx+0x0],ah
   140027402:	je     0x140027404
   140027404:	ins    BYTE PTR es:[rdi],dx
   140027405:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027409:	add    BYTE PTR [rcx+0x0],ah
   14002740c:	movsxd eax,DWORD PTR [rax]
   14002740e:	add    BYTE PTR gs:[rbx+0x0],dl
   140027412:	jns    0x140027414
   140027414:	outs   dx,BYTE PTR ds:[rsi]
   140027415:	add    BYTE PTR [rbx+0x0],ah
	...
   140027420:	(bad)  
   140027421:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027425:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027429:	add    BYTE PTR [rcx+0x0],ah
   14002742c:	movsxd eax,DWORD PTR [rax]
   14002742e:	add    BYTE PTR gs:[rcx+0x0],cl
   140027432:	push   rbx
   140027433:	add    BYTE PTR [rcx+0x0],al
   140027436:	push   rax
   140027437:	add    BYTE PTR [rcx+0x0],cl
   14002743a:	add    BYTE PTR [rax],al
   14002743c:	add    BYTE PTR [rax],al
   14002743e:	add    BYTE PTR [rax],al
   140027440:	(bad)  
   140027441:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027445:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027449:	add    BYTE PTR [rcx+0x0],ah
   14002744c:	movsxd eax,DWORD PTR [rax]
   14002744e:	add    BYTE PTR gs:[rdi+0x0],al
   140027452:	add    BYTE PTR gs:[rsi+0x0],ch
   140027456:	add    BYTE PTR gs:[rdx+0x0],dh
   14002745a:	(bad)  
   14002745b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002745f:	add    BYTE PTR [rcx+0x0],ah
   140027462:	je     0x140027464
   140027464:	ins    BYTE PTR es:[rdi],dx
   140027465:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027469:	add    BYTE PTR [rcx+0x0],ah
   14002746c:	movsxd eax,DWORD PTR [rax]
   14002746e:	add    BYTE PTR gs:[rbx+0x0],al
   140027472:	rex.WRXB add BYTE PTR [r13+0x0],r9b
	...
   14002747e:	add    BYTE PTR [rax],al
   140027480:	rol    BYTE PTR [rax],0x0
   140027483:	add    BYTE PTR [rax],al
   140027485:	add    BYTE PTR [rax],al
   140027487:	rex.RX shl BYTE PTR [rdx+0x2],0x40
   14002748c:	add    DWORD PTR [rax],eax
   14002748e:	add    BYTE PTR [rax],al
   140027490:	sub    DWORD PTR [rcx-0x32],edx
   140027493:	movabs al,ds:0x3ed845c8
   14002749c:	add    BYTE PTR [rax],al
   14002749e:	add    BYTE PTR [rax],al
   1400274a0:	add    BYTE PTR [r8+rax*1+0x64],spl
   1400274a5:	add    BYTE PTR [rcx+0x0],ch
   1400274a8:	outs   dx,BYTE PTR ds:[rsi]
   1400274a9:	add    BYTE PTR [rdi+0x0],ah
   1400274ac:	and    BYTE PTR [rax],al
   1400274ae:	add    BYTE PTR fs:[rcx+0x0],ch
   1400274b2:	ins    DWORD PTR es:[rdi],dx
   1400274b3:	add    BYTE PTR [rax],ah
   1400274b5:	add    BYTE PTR [rdx+0x0],ch
   1400274b8:	outs   dx,DWORD PTR ds:[rsi]
   1400274b9:	add    BYTE PTR [rdx+0x0],ah
   1400274bc:	and    BYTE PTR [rax],al
   1400274be:	je     0x1400274c0
   1400274c0:	outs   dx,DWORD PTR ds:[rsi]
   1400274c1:	add    BYTE PTR [rax],ah
   1400274c3:	add    BYTE PTR [rbx+0x0],dh
   1400274c6:	je     0x1400274c8
   1400274c8:	(bad)  
   1400274c9:	add    BYTE PTR [rdx+0x0],dh
   1400274cc:	je     0x1400274ce
   1400274ce:	jne    0x1400274d0
   1400274d0:	jo     0x1400274d2
   1400274d2:	add    BYTE PTR [rax],al
   1400274d4:	and    al,BYTE PTR [rax]
   1400274d6:	add    BYTE PTR [rax],al
   1400274d8:	and    al,BYTE PTR [rax]
   1400274da:	add    BYTE PTR [rax],al
   1400274dc:	and    BYTE PTR [rax],al
   1400274de:	and    al,BYTE PTR [rax]
   1400274e0:	add    BYTE PTR [rax],al
   1400274e2:	add    BYTE PTR [rax],al
   1400274e4:	and    al,BYTE PTR [rax]
   1400274e6:	add    BYTE PTR [rax],al
   1400274e8:	and    BYTE PTR [rax],al
   1400274ea:	sub    eax,0x61004c00
   1400274ef:	add    BYTE PTR [rbp+0x0],dh
   1400274f2:	outs   dx,BYTE PTR ds:[rsi]
   1400274f3:	add    BYTE PTR [rbx+0x0],ah
   1400274f6:	push   0x33003d00
   1400274fb:	add    BYTE PTR [rax],al
   1400274fd:	add    BYTE PTR [rax],al
   1400274ff:	add    BYTE PTR [rax],ah
   140027501:	add    BYTE PTR [rip+0x69007500],ch        # 0x1a902ea07
   140027507:	add    BYTE PTR [rdx+0x0],ah
   14002750a:	(bad)  
   14002750b:	add    BYTE PTR [rbx+0x0],dh
   14002750e:	add    BYTE PTR gs:[rip+0x2200],bh        # 0x140029715
   140027515:	add    BYTE PTR [rax],al
   140027517:	add    BYTE PTR [rdx],ah
   140027519:	add    BYTE PTR [rax],al
   14002751b:	add    BYTE PTR [rax],al
   14002751d:	add    BYTE PTR [rax],al
   14002751f:	add    BYTE PTR [rax+rax*1+0x49],al
   140027523:	add    BYTE PTR [rbp+0x0],cl
   140027526:	add    BYTE PTR [rax],al
   140027528:	push   rdx
   140027529:	add    BYTE PTR [rbp+0x0],ah
   14002752c:	ins    DWORD PTR es:[rdi],dx
   14002752d:	add    BYTE PTR [rdi+0x0],ch
   140027530:	jbe    0x140027532
   140027532:	imul   eax,DWORD PTR [rax],0x67006e
   140027538:	and    BYTE PTR [rax],al
   14002753a:	add    BYTE PTR fs:[rcx+0x0],ch
   14002753e:	ins    DWORD PTR es:[rdi],dx
   14002753f:	add    BYTE PTR [rax],ah
   140027541:	add    BYTE PTR [rdx+0x0],ch
   140027544:	outs   dx,DWORD PTR ds:[rsi]
   140027545:	add    BYTE PTR [rdx+0x0],ah
   140027548:	and    BYTE PTR [rax],al
   14002754a:	je     0x14002754c
   14002754c:	outs   dx,DWORD PTR ds:[rsi]
   14002754d:	add    BYTE PTR [rax],ah
   14002754f:	add    BYTE PTR [rbx+0x0],dh
   140027552:	je     0x140027554
   140027554:	(bad)  
   140027555:	add    BYTE PTR [rdx+0x0],dh
   140027558:	je     0x14002755a
   14002755a:	jne    0x14002755c
   14002755c:	jo     0x14002755e
   14002755e:	add    BYTE PTR [rax],al
   140027560:	add    BYTE PTR [rcx+0x0],r9b
   140027564:	rex.WRB add BYTE PTR [r8],r8b
   140027567:	add    BYTE PTR [rax+rax*1+0x49],al
   14002756b:	add    BYTE PTR [rbp+0x0],cl
   14002756e:	push   rax
   14002756f:	add    BYTE PTR [rdi+0x0],ch
   140027572:	jo     0x140027574
   140027574:	push   rbp
   140027575:	add    BYTE PTR [rax+0x0],dh
   140027578:	add    BYTE PTR cs:[rax],al
   14002757b:	add    BYTE PTR [rax],al
   14002757d:	add    BYTE PTR [rax],al
   14002757f:	add    BYTE PTR [rax+rax*1+0x49],al
   140027583:	add    BYTE PTR [rbp+0x0],cl
   140027586:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002758a:	jae    0x14002758c
   14002758c:	je     0x14002758e
   14002758e:	(bad)  
   14002758f:	add    BYTE PTR [rsi+0x0],ch
   140027592:	movsxd eax,DWORD PTR [rax]
   140027594:	add    BYTE PTR gs:[rsi],ch
	...
   14002759f:	add    BYTE PTR [rcx+0x0],cl
   1400275a2:	outs   dx,BYTE PTR ds:[rsi]
   1400275a3:	add    BYTE PTR [rsi+0x0],dh
   1400275a6:	(bad)  
   1400275a7:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400275ab:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400275af:	add    BYTE PTR [rax+rax*1+0x61],al
   1400275b3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400275b7:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400275bb:	add    BYTE PTR [rbp+0x0],ch
   1400275be:	add    BYTE PTR gs:[rax],al
   1400275c1:	add    BYTE PTR [rax],al
   1400275c3:	add    BYTE PTR [rax],al
   1400275c5:	add    BYTE PTR [rax],al
   1400275c7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a2cd
   1400275cd:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a2d3
   1400275d3:	add    BYTE PTR [rip+0x53002d00],ch        # 0x19302a2d9
   1400275d9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400275dd:	add    BYTE PTR [rdx+0x0],dh
   1400275e0:	je     0x1400275e2
   1400275e2:	imul   eax,DWORD PTR [rax],0x67006e
   1400275e8:	and    BYTE PTR [rax],al
   1400275ea:	add    BYTE PTR [rcx+0x0],r9b
   1400275ee:	rex.WRB add BYTE PTR [rip+0x2d002d00],r13b        # 0x16d02a2f5
   1400275f5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a2fb
   1400275fb:	add    BYTE PTR [rip+0x3e002d00],ch        # 0x17e02a301
   140027601:	add    BYTE PTR [rax],al
   140027603:	add    BYTE PTR [rax],al
   140027605:	add    BYTE PTR [rax],al
   140027607:	add    BYTE PTR [rax+rax*1],bh
   14002760a:	sub    eax,0x2d002d00
   14002760f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a315
   140027615:	add    BYTE PTR [rip+0x45002d00],ch        # 0x18502a31b
   14002761b:	add    BYTE PTR [rsi+0x0],ch
   14002761e:	add    BYTE PTR fs:[rcx+0x0],ch
   140027622:	outs   dx,BYTE PTR ds:[rsi]
   140027623:	add    BYTE PTR [rdi+0x0],ah
   140027626:	and    BYTE PTR [rax],al
   140027628:	add    BYTE PTR [rcx+0x0],r9b
   14002762c:	rex.WRB add BYTE PTR [rip+0x2d002d00],r13b        # 0x16d02a333
   140027633:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a339
   140027639:	add    BYTE PTR [rip+0x2d00],ch        # 0x14002a33f
   14002763f:	add    BYTE PTR [rax+0x0],bl
   140027642:	rex.WRB add BYTE PTR [r8+rax*1+0x20],r9b
   140027647:	add    BYTE PTR [rax+0x0],dl
   14002764a:	(bad)  
   14002764b:	add    BYTE PTR [rdx+0x0],dh
   14002764e:	(bad)  
   14002764f:	add    BYTE PTR [rbp+0x0],ch
   140027652:	jae    0x140027654
   140027654:	and    BYTE PTR [rax],al
   140027656:	data16 add BYTE PTR [rcx+0x0],ch
   14002765a:	ins    BYTE PTR es:[rdi],dx
   14002765b:	add    BYTE PTR [rbp+0x0],ah
   14002765e:	and    BYTE PTR [rax],al
   140027660:	add    BYTE PTR fs:[rdi+0x0],ch
   140027664:	add    BYTE PTR gs:[rbx+0x0],dh
   140027668:	and    BYTE PTR [rax],al
   14002766a:	outs   dx,BYTE PTR ds:[rsi]
   14002766b:	add    BYTE PTR [rdi+0x0],ch
   14002766e:	je     0x140027670
   140027670:	and    BYTE PTR [rax],al
   140027672:	add    BYTE PTR gs:[rax+0x0],bh
   140027676:	imul   eax,DWORD PTR [rax],0x740073
   14002767c:	and    BYTE PTR [rax],al
   14002767e:	(bad)  
   14002767f:	add    BYTE PTR [rax+rax*1+0x3a],dh
   140027683:	add    BYTE PTR [rax],al
   140027685:	add    BYTE PTR [rax],al
   140027687:	add    BYTE PTR [rbx+0x0],al
   14002768a:	outs   dx,DWORD PTR ds:[rsi]
   14002768b:	add    BYTE PTR [rbp+0x0],dh
   14002768e:	ins    BYTE PTR es:[rdi],dx
   14002768f:	add    BYTE PTR [rax+rax*1+0x20],ah
   140027693:	add    BYTE PTR [rsi+0x0],ch
   140027696:	outs   dx,DWORD PTR ds:[rsi]
   140027697:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002769b:	add    BYTE PTR [rbx+0x0],ah
   14002769e:	jb     0x1400276a0
   1400276a0:	add    BYTE PTR gs:[rcx+0x0],ah
   1400276a4:	je     0x1400276a6
   1400276a6:	add    BYTE PTR gs:[rax],ah
   1400276a9:	add    BYTE PTR [rax+rax*1+0x49],al
   1400276ad:	add    BYTE PTR [rbp+0x0],cl
   1400276b0:	and    BYTE PTR [rax],al
   1400276b2:	push   0x0
   1400276b4:	outs   dx,DWORD PTR ds:[rsi]
   1400276b5:	add    BYTE PTR [rdx+0x0],ah
	...
   1400276c0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400276c4:	je     0x1400276c6
   1400276c6:	imul   eax,DWORD PTR [rax],0x790066
   1400276cc:	imul   eax,DWORD PTR [rax],0x67006e
   1400276d2:	and    BYTE PTR [rax],al
   1400276d4:	add    BYTE PTR gs:[rax+0x0],bh
   1400276d8:	imul   eax,DWORD PTR [rax],0x740073
   1400276de:	imul   eax,DWORD PTR [rax],0x67006e
   1400276e4:	and    BYTE PTR [rax],al
   1400276e6:	imul   eax,DWORD PTR [rax],0x73006e
   1400276ec:	je     0x1400276ee
   1400276ee:	(bad)  
   1400276ef:	add    BYTE PTR [rsi+0x0],ch
   1400276f2:	movsxd eax,DWORD PTR [rax]
   1400276f4:	add    BYTE PTR gs:[rax],ah
   1400276f7:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400276fb:	add    BYTE PTR [rax],ah
   1400276fd:	add    BYTE PTR [rax+0x0],dh
   140027700:	outs   dx,DWORD PTR ds:[rsi]
   140027701:	add    BYTE PTR [rax+0x0],dh
   140027704:	and    BYTE PTR [rax],al
   140027706:	jne    0x140027708
   140027708:	jo     0x14002770a
   14002770a:	add    BYTE PTR [rax],al
   14002770c:	add    BYTE PTR [rax],al
   14002770e:	add    BYTE PTR [rax],al
   140027710:	rex.WB add BYTE PTR [r14+0x0],bpl
   140027714:	jae    0x140027716
   140027716:	je     0x140027718
   140027718:	(bad)  
   140027719:	add    BYTE PTR [rsi+0x0],ch
   14002771c:	movsxd eax,DWORD PTR [rax]
   14002771e:	add    BYTE PTR gs:[rax],ah
   140027721:	add    BYTE PTR [rcx+0x0],ah
   140027724:	ins    BYTE PTR es:[rdi],dx
   140027725:	add    BYTE PTR [rdx+0x0],dh
   140027728:	add    BYTE PTR gs:[rcx+0x0],ah
   14002772c:	add    BYTE PTR fs:[rcx+0x0],bh
   140027730:	and    BYTE PTR [rax],al
   140027732:	add    BYTE PTR gs:[rax+0x0],bh
   140027736:	imul   eax,DWORD PTR [rax],0x740073
   14002773c:	jae    0x14002773e
   14002773e:	sub    al,0x0
   140027740:	and    BYTE PTR [rax],al
   140027742:	add    BYTE PTR gs:[rax+0x0],bh
   140027746:	imul   eax,DWORD PTR [rax],0x690074
   14002774c:	outs   dx,BYTE PTR ds:[rsi]
   14002774d:	add    BYTE PTR [rdi+0x0],ah
   140027750:	add    BYTE PTR cs:[rsi],ch
   140027753:	add    BYTE PTR [rsi],ch
   140027755:	add    BYTE PTR [rax],al
   140027757:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14002775b:	add    BYTE PTR [rbx+0x0],ah
   14002775e:	imul   eax,DWORD PTR [rax],0x69
   140027761:	add    BYTE PTR [rsi+0x0],ch
   140027764:	add    BYTE PTR [eax],ah
   140027767:	add    BYTE PTR [rcx+0x0],ch
   14002776a:	outs   dx,BYTE PTR ds:[rsi]
   14002776b:	add    BYTE PTR [rbx+0x0],dh
   14002776e:	je     0x140027770
   140027770:	(bad)  
   140027771:	add    BYTE PTR [rsi+0x0],ch
   140027774:	movsxd eax,DWORD PTR [rax]
   140027776:	add    BYTE PTR gs:[rax],al
   140027779:	add    BYTE PTR [rax],al
   14002777b:	add    BYTE PTR [rax],al
   14002777d:	add    BYTE PTR [rax],al
   14002777f:	add    BYTE PTR [rbp+0x0],dl
   140027782:	outs   dx,BYTE PTR ds:[rsi]
   140027783:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140027787:	add    BYTE PTR [rbx+0x0],ah
   14002778a:	imul   eax,DWORD PTR [rax],0x69
   14002778d:	add    BYTE PTR [rsi+0x0],ch
   140027790:	add    BYTE PTR [eax],ah
   140027793:	add    BYTE PTR [rcx+0x0],ch
   140027796:	outs   dx,BYTE PTR ds:[rsi]
   140027797:	add    BYTE PTR [rbx+0x0],dh
   14002779a:	je     0x14002779c
   14002779c:	(bad)  
   14002779d:	add    BYTE PTR [rsi+0x0],ch
   1400277a0:	movsxd eax,DWORD PTR [rax]
   1400277a2:	add    BYTE PTR gs:[rax],al
   1400277a5:	add    BYTE PTR [rax],al
   1400277a7:	add    BYTE PTR [rdx+0x0],cl
   1400277aa:	outs   dx,DWORD PTR ds:[rsi]
   1400277ab:	add    BYTE PTR [rdx+0x0],ah
   1400277ae:	and    BYTE PTR [rax],al
   1400277b0:	push   rax
   1400277b1:	add    BYTE PTR [rcx+0x0],ah
   1400277b4:	jb     0x1400277b6
   1400277b6:	(bad)  
   1400277b7:	add    BYTE PTR [rbp+0x0],ch
   1400277ba:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   1400277bf:	add    BYTE PTR [rdx+0x0],dh
   1400277c2:	jae    0x1400277c4
   1400277c4:	and    BYTE PTR [rax],al
   1400277c6:	(bad)  
   1400277c7:	add    BYTE PTR [rdx+0x0],dh
   1400277ca:	add    BYTE PTR gs:[rdx],bh
   1400277cd:	add    BYTE PTR [rax],al
   1400277cf:	add    BYTE PTR [rax+rax*1],bh
   1400277d2:	sub    eax,0x2d002d00
   1400277d7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a4dd
   1400277dd:	add    BYTE PTR [rip+0x45002d00],ch        # 0x18502a4e3
   1400277e3:	add    BYTE PTR [rsi+0x0],ch
   1400277e6:	add    BYTE PTR fs:[rcx+0x0],ch
   1400277ea:	outs   dx,BYTE PTR ds:[rsi]
   1400277eb:	add    BYTE PTR [rdi+0x0],ah
   1400277ee:	and    BYTE PTR [rax],al
   1400277f0:	add    BYTE PTR [rcx+0x0],r9b
   1400277f4:	rex.WRB add BYTE PTR [r8],r12b
   1400277f7:	add    BYTE PTR [rax],ch
   1400277f9:	add    BYTE PTR [rbp+0x0],ah
   1400277fc:	js     0x1400277fe
   1400277fe:	movsxd eax,DWORD PTR [rax]
   140027800:	add    BYTE PTR gs:[rax+0x0],dh
   140027804:	je     0x140027806
   140027806:	imul   eax,DWORD PTR [rax],0x6e006f
   14002780c:	sub    DWORD PTR [rax],eax
   14002780e:	sub    eax,0x2d002d00
   140027813:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d02a519
   140027819:	add    BYTE PTR [rip+0x2d00],ch        # 0x14002a51f
   14002781f:	add    BYTE PTR [rbx+0x0],al
   140027822:	outs   dx,DWORD PTR ds:[rsi]
   140027823:	add    BYTE PTR [rbp+0x0],dh
   140027826:	ins    BYTE PTR es:[rdi],dx
   140027827:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002782b:	add    BYTE PTR [rsi+0x0],ch
   14002782e:	outs   dx,DWORD PTR ds:[rsi]
   14002782f:	add    BYTE PTR [rax+rax*1+0x20],dh
   140027833:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140027837:	add    BYTE PTR [rdi+0x0],dh
   14002783a:	outs   dx,BYTE PTR ds:[rsi]
   14002783b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002783f:	add    BYTE PTR [rcx+0x0],ah
   140027842:	add    BYTE PTR fs:[rax],ah
   140027845:	add    BYTE PTR [rsi+0x0],ah
   140027848:	imul   eax,DWORD PTR [rax],0x65006c
   14002784e:	jae    0x140027850
	...
   140027858:	ins    BYTE PTR es:[rdi],dx
   140027859:	add    BYTE PTR [rdi+0x0],ch
   14002785c:	add    BYTE PTR [edi+0x0],ch
   140027860:	outs   dx,BYTE PTR ds:[rsi]
   140027861:	add    BYTE PTR [rax],al
   140027863:	add    BYTE PTR [rax],al
   140027865:	add    BYTE PTR [rax],al
   140027867:	add    BYTE PTR [rax+rax*1+0x6f],al
   14002786b:	add    BYTE PTR [rdi+0x0],dh
   14002786e:	outs   dx,BYTE PTR ds:[rsi]
   14002786f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140027873:	add    BYTE PTR [rcx+0x0],ah
   140027876:	add    BYTE PTR fs:[rcx+0x0],ch
   14002787a:	outs   dx,BYTE PTR ds:[rsi]
   14002787b:	add    BYTE PTR [rdi+0x0],ah
   14002787e:	and    BYTE PTR [rax],al
   140027880:	jae    0x140027882
   140027882:	imul   eax,DWORD PTR [rax],0x65006c
   140027888:	outs   dx,BYTE PTR ds:[rsi]
   140027889:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002788d:	add    BYTE PTR [rcx+0x0],bh
	...
   140027898:	add    BYTE PTR [rdi+0x0],r13b
   14002789c:	ja     0x14002789e
   14002789e:	outs   dx,BYTE PTR ds:[rsi]
   14002789f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400278a3:	add    BYTE PTR [rcx+0x0],ah
   1400278a6:	add    BYTE PTR fs:[rcx+0x0],ch
   1400278aa:	outs   dx,BYTE PTR ds:[rsi]
   1400278ab:	add    BYTE PTR [rdi+0x0],ah
   1400278ae:	and    BYTE PTR [rax],al
   1400278b0:	ja     0x1400278b2
   1400278b2:	imul   eax,DWORD PTR [rax],0x680074
   1400278b8:	and    BYTE PTR [rax],al
   1400278ba:	push   rbp
   1400278bb:	add    BYTE PTR [rcx+0x0],cl
   1400278be:	add    BYTE PTR [rax],al
   1400278c0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400278c4:	je     0x1400278c6
   1400278c6:	imul   eax,DWORD PTR [rax],0x690066
   1400278cc:	movsxd eax,DWORD PTR [rax]
   1400278ce:	(bad)  
   1400278cf:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400278d3:	add    BYTE PTR [rdi+0x0],ch
   1400278d6:	outs   dx,BYTE PTR ds:[rsi]
   1400278d7:	add    BYTE PTR [rax],ah
   1400278d9:	add    BYTE PTR [rdx+0x0],dh
   1400278dc:	add    BYTE PTR gs:[rbx+0x0],ah
   1400278e0:	add    BYTE PTR gs:[rcx+0x0],ch
   1400278e4:	jbe    0x1400278e6
   1400278e6:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400278eb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400278ef:	add    BYTE PTR [rax],ah
   1400278f1:	add    BYTE PTR [rdx+0x0],ah
   1400278f4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400278f8:	outs   dx,DWORD PTR ds:[rsi]
   1400278f9:	add    BYTE PTR [rbp+0x0],ch
   1400278fc:	add    BYTE PTR gs:[rax],ah
   1400278ff:	add    BYTE PTR [rsi+0x0],dh
   140027902:	imul   eax,DWORD PTR [rax],0x690073
   140027908:	(bad)  
   140027909:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002790d:	add    BYTE PTR [rax],al
   14002790f:	add    BYTE PTR [rbp+0x0],al
   140027912:	jb     0x140027914
   140027914:	jb     0x140027916
   140027916:	outs   dx,DWORD PTR ds:[rsi]
   140027917:	add    BYTE PTR [rdx+0x0],dh
   14002791a:	and    BYTE PTR [rax],al
   14002791c:	add    BYTE PTR fs:[rbp+0x0],dh
   140027920:	jb     0x140027922
   140027922:	imul   eax,DWORD PTR [rax],0x67006e
   140027928:	and    BYTE PTR [rax],al
   14002792a:	jae    0x14002792c
   14002792c:	imul   eax,DWORD PTR [rax],0x65006c
   140027932:	outs   dx,BYTE PTR ds:[rsi]
   140027933:	add    BYTE PTR [rax+rax*1+0x20],dh
   140027937:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002793b:	add    BYTE PTR [rdi+0x0],dh
   14002793e:	outs   dx,BYTE PTR ds:[rsi]
   14002793f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140027943:	add    BYTE PTR [rcx+0x0],ah
   140027946:	add    BYTE PTR fs:[rcx+0x0],ch
   14002794a:	outs   dx,BYTE PTR ds:[rsi]
   14002794b:	add    BYTE PTR [rdi+0x0],ah
   14002794e:	and    BYTE PTR [rax],al
   140027950:	sub    eax,0x6d002000
   140027955:	add    BYTE PTR [rcx+0x0],ah
   140027958:	imul   eax,DWORD PTR [rax],0x69
   14002795b:	add    BYTE PTR [rsi+0x0],ch
   14002795e:	add    BYTE PTR [eax],ah
   140027961:	add    BYTE PTR [rsi+0x0],ch
   140027964:	add    BYTE PTR gs:[rax+0x0],bh
   140027968:	je     0x14002796a
   14002796a:	and    BYTE PTR [rax],al
   14002796c:	jb     0x14002796e
   14002796e:	jne    0x140027970
   140027970:	outs   dx,BYTE PTR ds:[rsi]
   140027971:	add    BYTE PTR [rax],ah
   140027973:	add    BYTE PTR [rsi+0x0],ch
   140027976:	outs   dx,DWORD PTR ds:[rsi]
   140027977:	add    BYTE PTR [rsi+0x0],ch
   14002797a:	sub    eax,0x69007300
   14002797f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140027983:	add    BYTE PTR [rsi+0x0],ch
   140027986:	je     0x140027988
	...
   140027990:	and    al,BYTE PTR [rip+0x41993]        # 0x140069329
   140027996:	add    BYTE PTR [rax],al
   140027998:	xchg   esp,eax
   140027999:	sub    eax,DWORD PTR [rbx]
	...
   1400279a3:	add    BYTE PTR [rdi],al
   1400279a5:	add    BYTE PTR [rax],al
   1400279a7:	add    BYTE PTR [rbx+rbp*1+0x380003],dh
	...
   1400279b6:	add    BYTE PTR [rax],al
   1400279b8:	and    al,BYTE PTR [rip+0x31993]        # 0x140059351
   1400279be:	add    BYTE PTR [rax],al
   1400279c0:	sbb    al,0x2c
   1400279c2:	add    eax,DWORD PTR [rax]
	...
   1400279cc:	add    eax,0x34000000
   1400279d1:	sub    al,0x3
   1400279d3:	add    BYTE PTR [rax],bh
	...
   1400279dd:	add    BYTE PTR [rax],al
   1400279df:	add    BYTE PTR [rdx],ah
   1400279e1:	add    eax,0xc1993
   1400279e6:	add    BYTE PTR [rax],al
   1400279e8:	test   BYTE PTR [rbx+rax*1],ch
   1400279eb:	add    BYTE PTR [rdx],al
   1400279ed:	add    BYTE PTR [rax],al
   1400279ef:	add    ah,ah
   1400279f1:	sub    al,0x3
   1400279f3:	add    BYTE PTR [rax],bl
   1400279f5:	add    BYTE PTR [rax],al
   1400279f7:	add    BYTE PTR [rbp*1+0xb80003],dh
	...
   140027a06:	add    BYTE PTR [rax],al
   140027a08:	and    al,BYTE PTR [rip+0x21993]        # 0x1400493a1
   140027a0e:	add    BYTE PTR [rax],al
   140027a10:	pop    rsp
   140027a11:	add    eax,DWORD PTR cs:[rax]
	...
   140027a1c:	add    eax,0x6c000000
   140027a21:	add    eax,DWORD PTR cs:[rax]
   140027a24:	push   rax
	...
   140027a2d:	add    BYTE PTR [rax],al
   140027a2f:	add    BYTE PTR [rdx],ah
   140027a31:	add    eax,0x81993
   140027a36:	add    BYTE PTR [rax],al
   140027a38:	mov    esp,0x32e
   140027a3d:	add    BYTE PTR [rax],al
   140027a3f:	add    BYTE PTR [rax],al
   140027a41:	add    BYTE PTR [rax],al
   140027a43:	add    BYTE PTR [rax+rax*1],bl
   140027a46:	add    BYTE PTR [rax],al
   140027a48:	cld    
   140027a49:	add    eax,DWORD PTR cs:[rax]
   140027a4c:	cwde   
	...
   140027a55:	add    BYTE PTR [rax],al
   140027a57:	add    BYTE PTR [rdx],ah
   140027a59:	add    eax,0x11993
   140027a5e:	add    BYTE PTR [rax],al
   140027a60:	and    al,0x30
   140027a62:	add    eax,DWORD PTR [rax]
	...
   140027a6c:	add    eax,DWORD PTR [rax]
   140027a6e:	add    BYTE PTR [rax],al
   140027a70:	sub    al,0x30
   140027a72:	add    eax,DWORD PTR [rax]
   140027a74:	cmp    BYTE PTR [rax],al
	...
   140027a7e:	add    BYTE PTR [rax],al
   140027a80:	and    al,BYTE PTR [rip+0x11993]        # 0x140039419
   140027a86:	add    BYTE PTR [rax],al
   140027a88:	pop    rsp
   140027a89:	xor    BYTE PTR [rbx],al
	...
   140027a93:	add    BYTE PTR [rbx],al
   140027a95:	add    BYTE PTR [rax],al
   140027a97:	add    BYTE PTR [rax+rsi*1+0x3],ah
   140027a9b:	add    BYTE PTR [rax],dh
	...
   140027aa5:	add    BYTE PTR [rax],al
   140027aa7:	add    BYTE PTR [rdx],ah
   140027aa9:	add    eax,0x51993
   140027aae:	add    BYTE PTR [rax],al
   140027ab0:	pushf  
   140027ab1:	xor    BYTE PTR [rbx],al
	...
   140027abb:	add    BYTE PTR [rax],cl
   140027abd:	add    BYTE PTR [rax],al
   140027abf:	add    ah,al
   140027ac1:	xor    BYTE PTR [rbx],al
   140027ac3:	add    BYTE PTR [rax+0x0],dl
   140027ac9:	add    BYTE PTR [rax],al
   140027acb:	add    BYTE PTR [rax],al
   140027acd:	add    BYTE PTR [rax],al
   140027acf:	add    BYTE PTR [rdx],ah
   140027ad1:	add    eax,0x41993
   140027ad6:	add    BYTE PTR [rax],al
   140027ad8:	xor    al,0x31
   140027ada:	add    eax,DWORD PTR [rax]
	...
   140027ae4:	(bad)  
   140027ae5:	add    BYTE PTR [rax],al
   140027ae7:	add    BYTE PTR [rcx+rsi*1+0x3],dl
   140027aeb:	add    BYTE PTR [rax+0x0],dh
	...
   140027af6:	add    BYTE PTR [rax],al
   140027af8:	and    al,BYTE PTR [rip+0x21993]        # 0x140049491
   140027afe:	add    BYTE PTR [rax],al
   140027b00:	mov    ah,0x31
   140027b02:	add    eax,DWORD PTR [rax]
	...
   140027b0c:	add    eax,DWORD PTR [rax]
   140027b0e:	add    BYTE PTR [rax],al
   140027b10:	(bad)  
   140027b11:	xor    DWORD PTR [rbx],eax
   140027b13:	add    BYTE PTR [rax+0x0],al
	...
   140027b1e:	add    BYTE PTR [rax],al
   140027b20:	and    al,BYTE PTR [rip+0x21993]        # 0x1400494b9
   140027b26:	add    BYTE PTR [rax],al
   140027b28:	cld    
   140027b29:	xor    DWORD PTR [rbx],eax
	...
   140027b33:	add    BYTE PTR [rbx],al
   140027b35:	add    BYTE PTR [rax],al
   140027b37:	add    BYTE PTR [rdx+rsi*1],cl
   140027b3a:	add    eax,DWORD PTR [rax]
   140027b3c:	add    BYTE PTR [rax],al
	...
   140027b4f:	add    BYTE PTR [rdx],ah
   140027b51:	add    eax,0x21993
   140027b56:	add    BYTE PTR [rax],al
   140027b58:	clc    
   140027b59:	sub    DWORD PTR [rbx],eax
	...
   140027b63:	add    BYTE PTR [rbx],al
   140027b65:	add    BYTE PTR [rax],al
   140027b67:	add    BYTE PTR [rax],cl
   140027b69:	sub    al,BYTE PTR [rbx]
   140027b6b:	add    BYTE PTR [rax+0x0],cl
	...
   140027b7e:	add    BYTE PTR [rax],al
   140027b80:	and    al,BYTE PTR [rip+0x51993]        # 0x140079519
   140027b86:	add    BYTE PTR [rax],al
   140027b88:	ins    BYTE PTR es:[rdi],dx
   140027b89:	sub    al,BYTE PTR [rbx]
	...
   140027b93:	add    BYTE PTR [rbx],dl
   140027b95:	add    BYTE PTR [rax],al
   140027b97:	add    BYTE PTR [rdx+rbp*1+0x480003],dl
	...
   140027bae:	add    BYTE PTR [rax],al
   140027bb0:	and    al,BYTE PTR [rip+0x41993]        # 0x140069549
   140027bb6:	add    BYTE PTR [rax],al
   140027bb8:	cmp    al,0x2b
   140027bba:	add    eax,DWORD PTR [rax]
	...
   140027bc4:	add    eax,0x5c000000
   140027bc9:	sub    eax,DWORD PTR [rbx]
   140027bcb:	add    BYTE PTR [rax],ah
	...
   140027bdd:	add    BYTE PTR [rax],al
   140027bdf:	add    BYTE PTR [rax+0x140031a],cl
   140027be5:	add    BYTE PTR [rax],al
   140027be7:	add    BYTE PTR [rsi],bh
   140027be9:	or     al,0x2
   140027beb:	rex add DWORD PTR [rax],eax
   140027bee:	add    BYTE PTR [rax],al
   140027bf0:	push   rax
   140027bf1:	sub    eax,0x14000
   140027bf6:	add    BYTE PTR [rax],al
   140027bf8:	movabs al,ds:0x3000000001400054
   140027c01:	jbe    0x140027c04
   140027c03:	rex add DWORD PTR [rax],eax
   140027c06:	add    BYTE PTR [rax],al
   140027c08:	movabs al,ds:0xae00000001400054
   140027c11:	or     eax,DWORD PTR [rdx]
   140027c13:	rex add DWORD PTR [rax],eax
   140027c16:	add    BYTE PTR [rax],al
   140027c18:	mov    ah,0xb
   140027c1a:	add    al,BYTE PTR [rax+0x1]
   140027c1d:	add    BYTE PTR [rax],al
   140027c1f:	add    BYTE PTR [rdx+0x140020b],bh
   140027c25:	add    BYTE PTR [rax],al
   140027c27:	add    al,al
   140027c29:	or     eax,DWORD PTR [rdx]
   140027c2b:	rex add DWORD PTR [rax],eax
   140027c2e:	add    BYTE PTR [rax],al
   140027c30:	(bad)  
   140027c31:	or     eax,DWORD PTR [rdx]
   140027c33:	rex add DWORD PTR [rax],eax
   140027c36:	add    BYTE PTR [rax],al
   140027c38:	int3   
   140027c39:	or     eax,DWORD PTR [rdx]
   140027c3b:	rex add DWORD PTR [rax],eax
   140027c3e:	add    BYTE PTR [rax],al
   140027c40:	ror    BYTE PTR [rbx],cl
   140027c42:	add    al,BYTE PTR [rax+0x1]
   140027c45:	add    BYTE PTR [rax],al
   140027c47:	add    BYTE PTR [rax+0x2a],ah
   140027c4a:	add    BYTE PTR [rax+0x1],al
   140027c4d:	add    BYTE PTR [rax],al
   140027c4f:	add    al,bl
   140027c51:	or     eax,DWORD PTR [rdx]
   140027c53:	rex add DWORD PTR [rax],eax
   140027c56:	add    BYTE PTR [rax],al
   140027c58:	fimul  WORD PTR [rbx]
   140027c5a:	add    al,BYTE PTR [rax+0x1]
   140027c5d:	add    BYTE PTR [rax],al
   140027c5f:	add    ah,ah
   140027c61:	or     eax,DWORD PTR [rdx]
   140027c63:	rex add DWORD PTR [rax],eax
   140027c66:	add    BYTE PTR [rax],al
   140027c68:	(bad)  
   140027c69:	or     eax,DWORD PTR [rdx]
   140027c6b:	rex add DWORD PTR [rax],eax
   140027c6e:	add    BYTE PTR [rax],al
   140027c70:	lock or eax,DWORD PTR [rdx]
   140027c73:	rex add DWORD PTR [rax],eax
   140027c76:	add    BYTE PTR [rax],al
   140027c78:	test   BYTE PTR [rbx],0x2
   140027c7b:	rex add DWORD PTR [rax],eax
   140027c7e:	add    BYTE PTR [rax],al
   140027c80:	cld    
   140027c81:	or     eax,DWORD PTR [rdx]
   140027c83:	rex add DWORD PTR [rax],eax
   140027c86:	add    BYTE PTR [rax],al
   140027c88:	add    cl,BYTE PTR [rdx+rax*1]
   140027c8b:	rex add DWORD PTR [rax],eax
   140027c8e:	add    BYTE PTR [rax],al
   140027c90:	or     BYTE PTR [rdx+rax*1],cl
   140027c93:	rex add DWORD PTR [rax],eax
   140027c96:	add    BYTE PTR [rax],al
   140027c98:	push   rax
   140027c99:	adc    eax,0x14000
   140027c9e:	add    BYTE PTR [rax],al
   140027ca0:	clc    
   140027ca1:	or     al,0x2
   140027ca3:	rex add DWORD PTR [rax],eax
   140027ca6:	add    BYTE PTR [rax],al
   140027ca8:	adc    al,0xc
   140027caa:	add    al,BYTE PTR [rax+0x1]
   140027cad:	add    BYTE PTR [rax],al
   140027caf:	add    BYTE PTR [rdx],bl
   140027cb1:	or     al,0x2
   140027cb3:	rex add DWORD PTR [rax],eax
   140027cb6:	add    BYTE PTR [rax],al
   140027cb8:	dec    BYTE PTR [rdx+rax*1]
   140027cbb:	rex add DWORD PTR [rax],eax
   140027cbe:	add    BYTE PTR [rax],al
   140027cc0:	and    BYTE PTR [rdx+rax*1],cl
   140027cc3:	rex add DWORD PTR [rax],eax
   140027cc6:	add    BYTE PTR [rax],al
   140027cc8:	push   rax
   140027cc9:	sbb    DWORD PTR [rax],eax
   140027ccb:	rex add DWORD PTR [rax],eax
   140027cce:	add    BYTE PTR [rax],al
   140027cd0:	add    al,0xd
   140027cd2:	add    al,BYTE PTR [rax+0x1]
   140027cd5:	add    BYTE PTR [rax],al
   140027cd7:	add    BYTE PTR [rsi],ah
   140027cd9:	or     al,0x2
   140027cdb:	rex add DWORD PTR [rax],eax
   140027cde:	add    BYTE PTR [rax],al
   140027ce0:	sub    al,0xc
   140027ce2:	add    al,BYTE PTR [rax+0x1]
   140027ce5:	add    BYTE PTR [rax],al
   140027ce7:	add    BYTE PTR [rdx],dh
   140027ce9:	or     al,0x2
   140027ceb:	rex add DWORD PTR [rax],eax
   140027cee:	add    BYTE PTR [rax],al
   140027cf0:	rex.WX or al,0x2
   140027cf3:	rex add DWORD PTR [rax],eax
   140027cf6:	add    BYTE PTR [rax],al
   140027cf8:	push   rax
   140027cf9:	or     al,0x2
   140027cfb:	rex add DWORD PTR [rax],eax
   140027cfe:	add    BYTE PTR [rax],al
   140027d00:	push   rsi
   140027d01:	or     al,0x2
   140027d03:	rex add DWORD PTR [rax],eax
   140027d06:	add    BYTE PTR [rax],al
   140027d08:	pop    rsp
   140027d09:	or     al,0x2
   140027d0b:	rex add DWORD PTR [rax],eax
   140027d0e:	add    BYTE PTR [rax],al
   140027d10:	(bad)  
   140027d11:	or     al,0x2
   140027d13:	rex add DWORD PTR [rax],eax
   140027d16:	add    BYTE PTR [rax],al
   140027d18:	push   0x140020c
   140027d1d:	add    BYTE PTR [rax],al
   140027d1f:	add    BYTE PTR [rsi+0xc],ch
   140027d22:	add    al,BYTE PTR [rax+0x1]
   140027d25:	add    BYTE PTR [rax],al
   140027d27:	add    BYTE PTR [rsp+rcx*1+0x2],dh
   140027d2b:	rex add DWORD PTR [rax],eax
   140027d2e:	add    BYTE PTR [rax],al
   140027d30:	jp     0x140027d3e
   140027d32:	add    al,BYTE PTR [rax+0x1]
   140027d35:	add    BYTE PTR [rax],al
   140027d37:	add    BYTE PTR [rsi+0x140020c],al
   140027d3d:	add    BYTE PTR [rax],al
   140027d3f:	add    BYTE PTR [rax+0x140020c],al
   140027d45:	add    BYTE PTR [rax],al
   140027d47:	add    BYTE PTR [rsp+rcx*1+0x14002],cl
   140027d4e:	add    BYTE PTR [rax],al
   140027d50:	cwde   
   140027d51:	or     al,0x2
   140027d53:	rex add DWORD PTR [rax],eax
   140027d56:	add    BYTE PTR [rax],al
   140027d58:	sahf   
   140027d59:	or     al,0x2
   140027d5b:	rex add DWORD PTR [rax],eax
   140027d5e:	add    BYTE PTR [rax],al
   140027d60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027d61:	or     al,0x2
   140027d63:	rex add DWORD PTR [rax],eax
   140027d66:	add    BYTE PTR [rax],al
   140027d68:	stos   BYTE PTR es:[rdi],al
   140027d69:	or     al,0x2
   140027d6b:	rex add DWORD PTR [rax],eax
   140027d6e:	add    BYTE PTR [rax],al
   140027d70:	mov    al,0xc
   140027d72:	add    al,BYTE PTR [rax+0x1]
   140027d75:	add    BYTE PTR [rax],al
   140027d77:	add    BYTE PTR [rsi+0x140020c],dh
   140027d7d:	add    BYTE PTR [rax],al
   140027d7f:	add    BYTE PTR [rsp+rcx*1+0x14002],bh
   140027d86:	add    BYTE PTR [rax],al
   140027d88:	ret    0x20c
   140027d8b:	rex add DWORD PTR [rax],eax
   140027d8e:	add    BYTE PTR [rax],al
   140027d90:	(bad)  
   140027d91:	or     al,0x2
   140027d93:	rex add DWORD PTR [rax],eax
   140027d96:	add    BYTE PTR [rax],al
   140027d98:	enter  0x20c,0x40
   140027d9c:	add    DWORD PTR [rax],eax
   140027d9e:	add    BYTE PTR [rax],al
   140027da0:	(bad)  
   140027da1:	or     al,0x2
   140027da3:	rex add DWORD PTR [rax],eax
   140027da6:	add    BYTE PTR [rax],al
   140027da8:	xor    al,0x0
   140027dab:	rex add DWORD PTR [rax],eax
   140027dae:	add    BYTE PTR [rax],al
   140027db0:	loopne 0x140027de5
   140027db2:	add    BYTE PTR [rax+0x1],al
   140027db5:	add    BYTE PTR [rax],al
   140027db7:	add    BYTE PTR [rax],ah
   140027db9:	xor    al,0x0
   140027dbb:	rex add DWORD PTR [rax],eax
   140027dbe:	add    BYTE PTR [rax],al
   140027dc0:	add    BYTE PTR [rax+rax*1],dh
   140027dc3:	rex add DWORD PTR [rax],eax
   140027dc6:	add    BYTE PTR [rax],al
   140027dc8:	xor    BYTE PTR [rbx],0x0
   140027dcb:	rex add DWORD PTR [rax],eax
   140027dce:	add    BYTE PTR [rax],al
   140027dd0:	movabs al,ds:0x7000000001400033
   140027dd9:	xor    DWORD PTR [rax],eax
   140027ddb:	rex add DWORD PTR [rax],eax
   140027dde:	add    BYTE PTR [rax],al
   140027de0:	jo     0x140027e13
   140027de2:	add    BYTE PTR [rax+0x1],al
   140027de5:	add    BYTE PTR [rax],al
   140027de7:	add    BYTE PTR [rax+0x1400031],al
   140027ded:	add    BYTE PTR [rax],al
   140027def:	add    dl,bl
   140027df1:	or     al,0x2
   140027df3:	rex add DWORD PTR [rax],eax
   140027df6:	add    BYTE PTR [rax],al
   140027df8:	loopne 0x140027e06
   140027dfa:	add    al,BYTE PTR [rax+0x1]
   140027dfd:	add    BYTE PTR [rax],al
   140027dff:	add    dl,dh
   140027e01:	or     al,0x2
   140027e03:	rex add DWORD PTR [rax],eax
   140027e06:	add    BYTE PTR [rax],al
   140027e08:	or     cl,BYTE PTR [rip+0x14002]        # 0x14003be10
   140027e0e:	add    BYTE PTR [rax],al
   140027e10:	sbb    al,0xd
   140027e12:	add    al,BYTE PTR [rax+0x1]
	...
   140027e35:	add    BYTE PTR [rax],al
   140027e37:	add    BYTE PTR [rsi],dl
   140027e39:	or     eax,0x14002
   140027e3e:	add    BYTE PTR [rax],al
   140027e40:	sbb    BYTE PTR [rsi+0x2],bh
   140027e43:	rex add DWORD PTR [rax],eax
	...
   140027e4e:	add    BYTE PTR [rax],al
   140027e50:	push   rbx
   140027e51:	add    BYTE PTR [rdi+0x0],cl
   140027e54:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140027e59:	add    BYTE PTR [rcx+0x0],al
   140027e5c:	push   rdx
   140027e5d:	add    BYTE PTR [rbp+0x0],al
   140027e60:	pop    rsp
   140027e61:	add    BYTE PTR [rbp+0x0],cl
   140027e64:	imul   eax,DWORD PTR [rax],0x720063
   140027e6a:	outs   dx,DWORD PTR ds:[rsi]
   140027e6b:	add    BYTE PTR [rbx+0x0],dh
   140027e6e:	outs   dx,DWORD PTR ds:[rsi]
   140027e6f:	add    BYTE PTR [rsi+0x0],ah
   140027e72:	je     0x140027e74
   140027e74:	pop    rsp
   140027e75:	add    BYTE PTR [rdi+0x0],dl
   140027e78:	imul   eax,DWORD PTR [rax],0x64006e
   140027e7e:	outs   dx,DWORD PTR ds:[rsi]
   140027e7f:	add    BYTE PTR [rdi+0x0],dh
   140027e82:	jae    0x140027e84
   140027e84:	pop    rsp
   140027e85:	add    BYTE PTR [rbx+0x0],al
   140027e88:	jne    0x140027e8a
   140027e8a:	jb     0x140027e8c
   140027e8c:	jb     0x140027e8e
   140027e8e:	add    BYTE PTR gs:[rsi+0x0],ch
   140027e92:	je     0x140027e94
   140027e94:	push   rsi
   140027e95:	add    BYTE PTR [rbp+0x0],ah
   140027e98:	jb     0x140027e9a
   140027e9a:	jae    0x140027e9c
   140027e9c:	imul   eax,DWORD PTR [rax],0x6e006f
   140027ea2:	pop    rsp
   140027ea3:	add    BYTE PTR [rdx+0x0],dl
   140027ea6:	jne    0x140027ea8
   140027ea8:	outs   dx,BYTE PTR ds:[rsi]
   140027ea9:	add    BYTE PTR [rax],al
   140027eab:	add    BYTE PTR [rax],al
   140027ead:	add    BYTE PTR [rax],al
   140027eaf:	add    BYTE PTR [rbx+0x0],dl
   140027eb2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140027eb6:	push   rsp
   140027eb7:	add    BYTE PTR [rdi+0x0],dl
   140027eba:	add    BYTE PTR [r10+0x0],dl
   140027ebe:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140027ec3:	add    BYTE PTR [rcx+0x0],ch
   140027ec6:	movsxd eax,DWORD PTR [rax]
   140027ec8:	jb     0x140027eca
   140027eca:	outs   dx,DWORD PTR ds:[rsi]
   140027ecb:	add    BYTE PTR [rbx+0x0],dh
   140027ece:	outs   dx,DWORD PTR ds:[rsi]
   140027ecf:	add    BYTE PTR [rsi+0x0],ah
   140027ed2:	je     0x140027ed4
   140027ed4:	pop    rsp
   140027ed5:	add    BYTE PTR [rdi+0x0],dl
   140027ed8:	imul   eax,DWORD PTR [rax],0x64006e
   140027ede:	outs   dx,DWORD PTR ds:[rsi]
   140027edf:	add    BYTE PTR [rdi+0x0],dh
   140027ee2:	jae    0x140027ee4
   140027ee4:	pop    rsp
   140027ee5:	add    BYTE PTR [rbx+0x0],al
   140027ee8:	jne    0x140027eea
   140027eea:	jb     0x140027eec
   140027eec:	jb     0x140027eee
   140027eee:	add    BYTE PTR gs:[rsi+0x0],ch
   140027ef2:	je     0x140027ef4
   140027ef4:	push   rsi
   140027ef5:	add    BYTE PTR [rbp+0x0],ah
   140027ef8:	jb     0x140027efa
   140027efa:	jae    0x140027efc
   140027efc:	imul   eax,DWORD PTR [rax],0x6e006f
   140027f02:	pop    rsp
   140027f03:	add    BYTE PTR [rdx+0x0],dl
   140027f06:	jne    0x140027f08
   140027f08:	outs   dx,BYTE PTR ds:[rsi]
   140027f09:	add    BYTE PTR [rax],al
   140027f0b:	add    BYTE PTR [rax],al
   140027f0d:	add    BYTE PTR [rax],al
   140027f0f:	add    BYTE PTR [rbx+0x0],al
   140027f12:	outs   dx,DWORD PTR ds:[rsi]
   140027f13:	add    BYTE PTR [rbp+0x0],ch
   140027f16:	jo     0x140027f18
   140027f18:	ins    BYTE PTR es:[rdi],dx
   140027f19:	add    BYTE PTR [rbp+0x0],ah
   140027f1c:	je     0x140027f1e
   140027f1e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140027f23:	add    BYTE PTR [rcx+0x0],ah
   140027f26:	ins    BYTE PTR es:[rdi],dx
   140027f27:	add    BYTE PTR [rax+rax*1+0x20],ch
   140027f2b:	add    BYTE PTR [rbx+0x0],dh
   140027f2e:	jne    0x140027f30
   140027f30:	(bad)  
   140027f31:	add    BYTE PTR [rax],ah
   140027f33:	add    BYTE PTR [rdx+0x0],ch
   140027f36:	outs   dx,DWORD PTR ds:[rsi]
   140027f37:	add    BYTE PTR [rdx+0x0],ah
   140027f3a:	jae    0x140027f3c
   140027f3c:	add    BYTE PTR [rax],al
   140027f3e:	add    BYTE PTR [rax],al
   140027f40:	push   rbx
   140027f41:	add    BYTE PTR [rbp+0x0],ah
   140027f44:	jb     0x140027f46
   140027f46:	jbe    0x140027f48
   140027f48:	imul   eax,DWORD PTR [rax],0x650063
   140027f4e:	and    BYTE PTR [rax],al
   140027f50:	add    BYTE PTR [rdi+0x0],r13b
   140027f54:	ja     0x140027f56
   140027f56:	outs   dx,BYTE PTR ds:[rsi]
   140027f57:	add    BYTE PTR [rax],ah
   140027f59:	add    BYTE PTR [rip+0x42002000],ch        # 0x182029f5f
   140027f5f:	add    BYTE PTR [rcx+0x0],cl
   140027f62:	push   rsp
   140027f63:	add    BYTE PTR [rbx+0x0],dl
   140027f66:	and    BYTE PTR [rax],al
   140027f68:	add    BYTE PTR [rcx+0x0],r13b
   140027f6c:	jae    0x140027f6e
   140027f6e:	movsxd eax,DWORD PTR [rax]
   140027f70:	outs   dx,DWORD PTR ds:[rsi]
   140027f71:	add    BYTE PTR [rsi+0x0],ch
   140027f74:	outs   dx,BYTE PTR ds:[rsi]
   140027f75:	add    BYTE PTR [rbp+0x0],ah
   140027f78:	movsxd eax,DWORD PTR [rax]
   140027f7a:	je     0x140027f7c
   140027f7c:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140027f81:	add    BYTE PTR [rax],al
   140027f83:	add    BYTE PTR [rax],al
   140027f85:	add    BYTE PTR [rax],al
   140027f87:	add    BYTE PTR [rbx+0x0],al
   140027f8a:	(bad)  
   140027f8b:	add    BYTE PTR [rsi+0x0],ch
   140027f8e:	outs   dx,BYTE PTR ds:[rsi]
   140027f8f:	add    BYTE PTR [rdi+0x0],ch
   140027f92:	je     0x140027f94
   140027f94:	and    BYTE PTR [rax],al
   140027f96:	add    BYTE PTR [ebp+0x0],ah
   140027f9a:	je     0x140027f9c
   140027f9c:	and    BYTE PTR [rax],al
   140027f9e:	push   0x0
   140027fa0:	outs   dx,DWORD PTR ds:[rsi]
   140027fa1:	add    BYTE PTR [rdx+0x0],ah
   140027fa4:	and    BYTE PTR [rax],al
   140027fa6:	jae    0x140027fa8
   140027fa8:	je     0x140027faa
   140027faa:	(bad)  
   140027fab:	add    BYTE PTR [rax+rax*1+0x65],dh
   140027faf:	add    BYTE PTR [rax],al
   140027fb1:	add    BYTE PTR [rax],al
   140027fb3:	add    BYTE PTR [rip+0x6400],ah        # 0x14002e3b9
   140027fb9:	add    BYTE PTR [rax],al
   140027fbb:	add    BYTE PTR [rax],al
   140027fbd:	add    BYTE PTR [rax],al
   140027fbf:	add    BYTE PTR [rbp+0x0],al
   140027fc2:	jb     0x140027fc4
   140027fc4:	jb     0x140027fc6
   140027fc6:	outs   dx,DWORD PTR ds:[rsi]
   140027fc7:	add    BYTE PTR [rdx+0x0],dh
   140027fca:	and    BYTE PTR [rax],al
   140027fcc:	add    BYTE PTR fs:[rbp+0x0],ah
   140027fd0:	je     0x140027fd2
   140027fd2:	add    BYTE PTR gs:[rbx+0x0],ah
   140027fd6:	je     0x140027fd8
   140027fd8:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140027fdd:	add    BYTE PTR [rsi+0x0],ah
   140027fe0:	outs   dx,DWORD PTR ds:[rsi]
   140027fe1:	add    BYTE PTR [rdx+0x0],dh
   140027fe4:	and    BYTE PTR [rax],al
   140027fe6:	jae    0x140027fe8
   140027fe8:	jne    0x140027fea
   140027fea:	(bad)  
   140027feb:	add    BYTE PTR [rax],ah
   140027fed:	add    BYTE PTR [rdx+0x0],ch
   140027ff0:	outs   dx,DWORD PTR ds:[rsi]
   140027ff1:	add    BYTE PTR [rdx+0x0],ah
   140027ff4:	and    BYTE PTR [rax],al
   140027ff6:	sub    eax,0x50002000
   140027ffb:	add    BYTE PTR [rdx+0x0],dh
   140027ffe:	outs   dx,DWORD PTR ds:[rsi]
   140027fff:	add    BYTE PTR [rdx+0x0],ah
   140028002:	ins    BYTE PTR es:[rdi],dx
   140028003:	add    BYTE PTR [rbp+0x0],ah
   140028006:	ins    DWORD PTR es:[rdi],dx
   140028007:	add    BYTE PTR [rax],ah
   140028009:	add    BYTE PTR [rdi+0x0],dh
   14002800c:	imul   eax,DWORD PTR [rax],0x680074
   140028012:	and    BYTE PTR [rax],al
   140028014:	jb     0x140028016
   140028016:	add    BYTE PTR gs:[rbp+0x0],ch
   14002801a:	outs   dx,DWORD PTR ds:[rsi]
   14002801b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002801f:	add    BYTE PTR [rax],ah
   140028021:	add    BYTE PTR [rsi+0x0],ah
   140028024:	imul   eax,DWORD PTR [rax],0x65006c
   14002802a:	and    BYTE PTR [rax],al
   14002802c:	add    BYTE PTR [rax],al
   14002802e:	add    BYTE PTR [rax],al
   140028030:	add    BYTE PTR [r10+0x0],r14b
   140028034:	jb     0x140028036
   140028036:	outs   dx,DWORD PTR ds:[rsi]
   140028037:	add    BYTE PTR [rdx+0x0],dh
   14002803a:	and    BYTE PTR [rax],al
   14002803c:	add    BYTE PTR fs:[rbp+0x0],ah
   140028040:	je     0x140028042
   140028042:	add    BYTE PTR gs:[rbx+0x0],ah
   140028046:	je     0x140028048
   140028048:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002804d:	add    BYTE PTR [rsi+0x0],ah
   140028050:	outs   dx,DWORD PTR ds:[rsi]
   140028051:	add    BYTE PTR [rdx+0x0],dh
   140028054:	and    BYTE PTR [rax],al
   140028056:	jae    0x140028058
   140028058:	jne    0x14002805a
   14002805a:	(bad)  
   14002805b:	add    BYTE PTR [rax],ah
   14002805d:	add    BYTE PTR [rdx+0x0],ch
   140028060:	outs   dx,DWORD PTR ds:[rsi]
   140028061:	add    BYTE PTR [rdx+0x0],ah
   140028064:	and    BYTE PTR [rax],al
   140028066:	sub    eax,0x42002000
   14002806b:	add    BYTE PTR [rcx+0x0],ah
   14002806e:	movsxd eax,DWORD PTR [rax]
   140028070:	imul   eax,DWORD PTR [rax],0x67
   140028073:	add    BYTE PTR [rdx+0x0],dh
   140028076:	outs   dx,DWORD PTR ds:[rsi]
   140028077:	add    BYTE PTR [rbp+0x0],dh
   14002807a:	outs   dx,BYTE PTR ds:[rsi]
   14002807b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002807f:	add    BYTE PTR [rdx+0x0],cl
   140028082:	outs   dx,DWORD PTR ds:[rsi]
   140028083:	add    BYTE PTR [rdx+0x0],ah
   140028086:	and    BYTE PTR [rax],al
   140028088:	push   rbx
   140028089:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002808d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140028091:	add    BYTE PTR [rax],ah
   140028093:	add    BYTE PTR [rbp+0x0],ah
   140028096:	jb     0x140028098
   140028098:	jb     0x14002809a
   14002809a:	outs   dx,DWORD PTR ds:[rsi]
   14002809b:	add    BYTE PTR [rdx+0x0],dh
   14002809e:	and    BYTE PTR [rax],al
	...
   1400280a8:	push   rsp
   1400280a9:	add    BYTE PTR [rcx+0x0],ch
   1400280ac:	ins    DWORD PTR es:[rdi],dx
   1400280ad:	add    BYTE PTR [rbp+0x0],ah
   1400280b0:	jb     0x1400280b2
   1400280b2:	add    BYTE PTR [rbp+0x0],r14b
   1400280b6:	ins    DWORD PTR es:[rdi],dx
   1400280b7:	add    BYTE PTR [rbp+0x0],ch
   1400280ba:	jns    0x1400280bc
   1400280bc:	push   rdi
   1400280bd:	add    BYTE PTR [rcx+0x0],ch
   1400280c0:	outs   dx,BYTE PTR ds:[rsi]
   1400280c1:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400280c5:	add    BYTE PTR [rdi+0x0],dh
	...
   1400280d0:	add    BYTE PTR [r10+0x0],r14b
   1400280d4:	jb     0x1400280d6
   1400280d6:	outs   dx,DWORD PTR ds:[rsi]
   1400280d7:	add    BYTE PTR [rdx+0x0],dh
   1400280da:	and    BYTE PTR [rax],al
   1400280dc:	add    BYTE PTR fs:[rbp+0x0],ah
   1400280e0:	je     0x1400280e2
   1400280e2:	add    BYTE PTR gs:[rbx+0x0],ah
   1400280e6:	je     0x1400280e8
   1400280e8:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400280ed:	add    BYTE PTR [rsi+0x0],ah
   1400280f0:	outs   dx,DWORD PTR ds:[rsi]
   1400280f1:	add    BYTE PTR [rdx+0x0],dh
   1400280f4:	and    BYTE PTR [rax],al
   1400280f6:	jae    0x1400280f8
   1400280f8:	jne    0x1400280fa
   1400280fa:	(bad)  
   1400280fb:	add    BYTE PTR [rax],ah
   1400280fd:	add    BYTE PTR [rdx+0x0],ch
   140028100:	outs   dx,DWORD PTR ds:[rsi]
   140028101:	add    BYTE PTR [rdx+0x0],ah
   140028104:	and    BYTE PTR [rax],al
   140028106:	sub    eax,0x42002000
   14002810b:	add    BYTE PTR [rcx+0x0],ah
   14002810e:	movsxd eax,DWORD PTR [rax]
   140028110:	imul   eax,DWORD PTR [rax],0x67
   140028113:	add    BYTE PTR [rdx+0x0],dh
   140028116:	outs   dx,DWORD PTR ds:[rsi]
   140028117:	add    BYTE PTR [rbp+0x0],dh
   14002811a:	outs   dx,BYTE PTR ds:[rsi]
   14002811b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002811f:	add    BYTE PTR [rdx+0x0],cl
   140028122:	outs   dx,DWORD PTR ds:[rsi]
   140028123:	add    BYTE PTR [rdx+0x0],ah
   140028126:	and    BYTE PTR [rax],al
   140028128:	push   rbx
   140028129:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002812d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140028131:	add    BYTE PTR [rax],ah
   140028133:	add    BYTE PTR [rax+rax*1+0x72],dl
   140028137:	add    BYTE PTR [rcx+0x0],ah
   14002813a:	outs   dx,BYTE PTR ds:[rsi]
   14002813b:	add    BYTE PTR [rbx+0x0],dh
   14002813e:	imul   eax,DWORD PTR [rax],0x6e0065
   140028144:	je     0x140028146
   140028146:	and    BYTE PTR [rax],al
   140028148:	add    BYTE PTR gs:[rdx+0x0],dh
   14002814c:	jb     0x14002814e
   14002814e:	outs   dx,DWORD PTR ds:[rsi]
   14002814f:	add    BYTE PTR [rdx+0x0],dh
   140028152:	and    BYTE PTR [rax],al
   140028154:	add    BYTE PTR [rax],al
   140028156:	add    BYTE PTR [rax],al
   140028158:	rex.X add BYTE PTR [rcx+0x0],cl
   14002815c:	push   rsp
   14002815d:	add    BYTE PTR [rbx+0x0],dl
   140028160:	and    BYTE PTR [rax],al
   140028162:	push   rbx
   140028163:	add    BYTE PTR [rbp+0x0],ah
   140028166:	jb     0x140028168
   140028168:	jbe    0x14002816a
   14002816a:	imul   eax,DWORD PTR [rax],0x650063
   140028170:	and    BYTE PTR [rax],al
   140028172:	jne    0x140028174
   140028174:	outs   dx,BYTE PTR ds:[rsi]
   140028175:	add    BYTE PTR [rcx+0x0],ah
   140028178:	jbe    0x14002817a
   14002817a:	(bad)  
   14002817b:	add    BYTE PTR [rcx+0x0],ch
   14002817e:	ins    BYTE PTR es:[rdi],dx
   14002817f:	add    BYTE PTR [rcx+0x0],ah
   140028182:	(bad)  
   140028183:	add    BYTE PTR [rax+rax*1+0x65],ch
   140028187:	add    BYTE PTR [rdx],bh
   140028189:	add    BYTE PTR [rax],al
   14002818b:	add    BYTE PTR [rax],al
   14002818d:	add    BYTE PTR [rax],al
   14002818f:	add    BYTE PTR [rbx+0x0],dl
   140028192:	add    BYTE PTR gs:[rdx+0x0],dh
   140028196:	jbe    0x140028198
   140028198:	imul   eax,DWORD PTR [rax],0x650063
   14002819e:	and    BYTE PTR [rax],al
   1400281a0:	add    BYTE PTR [rdi+0x0],r13b
   1400281a4:	ja     0x1400281a6
   1400281a6:	outs   dx,BYTE PTR ds:[rsi]
   1400281a7:	add    BYTE PTR [rax],ah
   1400281a9:	add    BYTE PTR [rip+0x42002000],ch        # 0x18202a1af
   1400281af:	add    BYTE PTR [rcx+0x0],cl
   1400281b2:	push   rsp
   1400281b3:	add    BYTE PTR [rbx+0x0],dl
   1400281b6:	and    BYTE PTR [rax],al
   1400281b8:	add    BYTE PTR [rcx+0x0],r13b
   1400281bc:	jae    0x1400281be
   1400281be:	movsxd eax,DWORD PTR [rax]
   1400281c0:	outs   dx,DWORD PTR ds:[rsi]
   1400281c1:	add    BYTE PTR [rsi+0x0],ch
   1400281c4:	outs   dx,BYTE PTR ds:[rsi]
   1400281c5:	add    BYTE PTR [rbp+0x0],ah
   1400281c8:	movsxd eax,DWORD PTR [rax]
   1400281ca:	je     0x1400281cc
   1400281cc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400281d1:	add    BYTE PTR [rax],al
   1400281d3:	add    BYTE PTR [rax],al
   1400281d5:	add    BYTE PTR [rax],al
   1400281d7:	add    BYTE PTR [rbx+0x0],dl
   1400281da:	jne    0x1400281dc
   1400281dc:	(bad)  
   1400281dd:	add    BYTE PTR [rbp+0x0],ch
   1400281e0:	imul   eax,DWORD PTR [rax],0x740074
   1400281e6:	imul   eax,DWORD PTR [rax],0x67006e
   1400281ec:	and    BYTE PTR [rax],al
   1400281ee:	rex.WX add BYTE PTR [rdi+0x0],bpl
   1400281f2:	(bad)  
   1400281f3:	add    BYTE PTR [rax],al
   1400281f5:	add    BYTE PTR [rax],al
   1400281f7:	add    BYTE PTR [rax+rax*1+0x6f],al
   1400281fb:	add    BYTE PTR [rdi+0x0],dh
   1400281fe:	outs   dx,BYTE PTR ds:[rsi]
   1400281ff:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140028203:	add    BYTE PTR [rcx+0x0],ah
   140028206:	add    BYTE PTR fs:[rcx+0x0],ch
   14002820a:	outs   dx,BYTE PTR ds:[rsi]
   14002820b:	add    BYTE PTR [rdi+0x0],ah
   14002820e:	and    BYTE PTR [rax],al
   140028210:	data16 add BYTE PTR [rcx+0x0],ch
   140028214:	ins    BYTE PTR es:[rdi],dx
   140028215:	add    BYTE PTR [rbp+0x0],ah
   140028218:	jae    0x14002821a
   14002821a:	cmp    al,BYTE PTR [rax]
   14002821c:	add    BYTE PTR [rax],al
   14002821e:	add    BYTE PTR [rax],al
   140028220:	add    BYTE PTR [r11+0x0],spl
   140028224:	movsxd eax,DWORD PTR [rax]
   140028226:	add    BYTE PTR gs:[rbx+0x0],dh
   14002822a:	jae    0x14002822c
   14002822c:	and    BYTE PTR [rax],al
   14002822e:	add    BYTE PTR fs:[rbp+0x0],ah
   140028232:	outs   dx,BYTE PTR ds:[rsi]
   140028233:	add    BYTE PTR [rcx+0x0],ch
   140028236:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002823b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002823f:	add    BYTE PTR [rax],ah
   140028241:	add    BYTE PTR [rax+rax*1+0x68],dh
   140028245:	add    BYTE PTR [rbp+0x0],ah
   140028248:	and    BYTE PTR [rax],al
   14002824a:	rex.X add BYTE PTR [rcx+0x0],cl
   14002824e:	push   rsp
   14002824f:	add    BYTE PTR [rbx+0x0],dl
   140028252:	and    BYTE PTR [rax],al
   140028254:	push   rbx
   140028255:	add    BYTE PTR [rbp+0x0],ah
   140028258:	jb     0x14002825a
   14002825a:	jbe    0x14002825c
   14002825c:	imul   eax,DWORD PTR [rax],0x650063
   140028262:	add    BYTE PTR [rax],al
   140028264:	add    BYTE PTR [rax],al
   140028266:	add    BYTE PTR [rax],al
   140028268:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002826c:	jne    0x14002826e
   14002826e:	ins    BYTE PTR es:[rdi],dx
   14002826f:	add    BYTE PTR [rax+rax*1+0x20],ah
   140028273:	add    BYTE PTR [rsi+0x0],ch
   140028276:	outs   dx,DWORD PTR ds:[rsi]
   140028277:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002827b:	add    BYTE PTR [rbx+0x0],dh
   14002827e:	je     0x140028280
   140028280:	(bad)  
   140028281:	add    BYTE PTR [rdx+0x0],dh
   140028284:	je     0x140028286
   140028286:	jne    0x140028288
   140028288:	jo     0x14002828a
   14002828a:	and    BYTE PTR [rax],al
   14002828c:	(bad)  
   14002828d:	add    BYTE PTR [rax],ah
   14002828f:	add    BYTE PTR [rbx+0x0],dh
   140028292:	jne    0x140028294
   140028294:	(bad)  
   140028295:	add    BYTE PTR [rax],ah
   140028297:	add    BYTE PTR [rdx+0x0],ch
   14002829a:	outs   dx,DWORD PTR ds:[rsi]
   14002829b:	add    BYTE PTR [rdx+0x0],ah
   14002829e:	cmp    al,BYTE PTR [rax]
	...
   1400282a8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400282ac:	jne    0x1400282ae
   1400282ae:	ins    BYTE PTR es:[rdi],dx
   1400282af:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400282b3:	add    BYTE PTR [rsi+0x0],ch
   1400282b6:	outs   dx,DWORD PTR ds:[rsi]
   1400282b7:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400282bb:	add    BYTE PTR [rdx+0x0],dh
   1400282be:	add    BYTE PTR gs:[rbx+0x0],dh
   1400282c2:	jne    0x1400282c4
   1400282c4:	ins    DWORD PTR es:[rdi],dx
   1400282c5:	add    BYTE PTR [rbp+0x0],ah
   1400282c8:	and    BYTE PTR [rax],al
   1400282ca:	(bad)  
   1400282cb:	add    BYTE PTR [rax],ah
   1400282cd:	add    BYTE PTR [rbx+0x0],dh
   1400282d0:	jne    0x1400282d2
   1400282d2:	(bad)  
   1400282d3:	add    BYTE PTR [rax],ah
   1400282d5:	add    BYTE PTR [rdx+0x0],ch
   1400282d8:	outs   dx,DWORD PTR ds:[rsi]
   1400282d9:	add    BYTE PTR [rdx+0x0],ah
   1400282dc:	cmp    al,BYTE PTR [rax]
   1400282de:	add    BYTE PTR [rax],al
   1400282e0:	push   rbx
   1400282e1:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400282e5:	add    BYTE PTR [rdx+0x0],dh
   1400282e8:	je     0x1400282ea
   1400282ea:	imul   eax,DWORD PTR [rax],0x67006e
   1400282f0:	and    BYTE PTR [rax],al
   1400282f2:	push   rbp
   1400282f3:	add    BYTE PTR [rax+0x0],dh
   1400282f6:	and    BYTE PTR [rax],al
   1400282f8:	push   rbx
   1400282f9:	add    BYTE PTR [rbp+0x0],dh
   1400282fc:	(bad)  
   1400282fd:	add    BYTE PTR [rax],ah
   1400282ff:	add    BYTE PTR [rdx+0x0],cl
   140028302:	outs   dx,DWORD PTR ds:[rsi]
   140028303:	add    BYTE PTR [rdx+0x0],ah
   140028306:	add    BYTE PTR [rax],al
   140028308:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002830c:	jb     0x14002830e
   14002830e:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140028313:	add    BYTE PTR [rax+rax*1+0x6f],al
   140028317:	add    BYTE PTR [rdi+0x0],dh
   14002831a:	outs   dx,BYTE PTR ds:[rsi]
   14002831b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002831f:	add    BYTE PTR [rcx+0x0],ah
   140028322:	add    BYTE PTR fs:[rax],ah
   140028325:	add    BYTE PTR [rbp+0x0],cl
   140028328:	(bad)  
   140028329:	add    BYTE PTR [rsi+0x0],ch
   14002832c:	(bad)  
   14002832d:	add    BYTE PTR [rdi+0x0],ah
   140028330:	add    BYTE PTR gs:[rdx+0x0],dh
   140028334:	and    BYTE PTR [rax],al
   140028336:	rex.WX add BYTE PTR [rdi+0x0],bpl
   14002833a:	(bad)  
   14002833b:	add    BYTE PTR [rax],al
   14002833d:	add    BYTE PTR [rax],al
   14002833f:	add    BYTE PTR [rbx+0x0],dl
   140028342:	add    BYTE PTR gs:[rdx+0x0],dh
   140028346:	jbe    0x140028348
   140028348:	imul   eax,DWORD PTR [rax],0x650063
   14002834e:	and    BYTE PTR [rax],al
   140028350:	add    BYTE PTR [rdi+0x0],r13b
   140028354:	ja     0x140028356
   140028356:	outs   dx,BYTE PTR ds:[rsi]
   140028357:	add    BYTE PTR [rax],ah
   140028359:	add    BYTE PTR [rip+0x63002000],ch        # 0x1a302a35f
   14002835f:	add    BYTE PTR [rdi+0x0],ch
   140028362:	jne    0x140028364
   140028364:	ins    BYTE PTR es:[rdi],dx
   140028365:	add    BYTE PTR [rax+rax*1+0x20],ah
   140028369:	add    BYTE PTR [rsi+0x0],ch
   14002836c:	outs   dx,DWORD PTR ds:[rsi]
   14002836d:	add    BYTE PTR [rax+rax*1+0x20],dh
   140028371:	add    BYTE PTR [rbx+0x0],ah
   140028374:	jb     0x140028376
   140028376:	add    BYTE PTR gs:[rcx+0x0],ah
   14002837a:	je     0x14002837c
   14002837c:	add    BYTE PTR gs:[rax],ah
   14002837f:	add    BYTE PTR [rdx+0x0],ch
   140028382:	outs   dx,DWORD PTR ds:[rsi]
   140028383:	add    BYTE PTR [rdx+0x0],ah
   140028386:	add    BYTE PTR [rax],al
   140028388:	push   rdx
   140028389:	add    BYTE PTR [rbp+0x0],ah
   14002838c:	jae    0x14002838e
   14002838e:	jne    0x140028390
   140028390:	ins    DWORD PTR es:[rdi],dx
   140028391:	add    BYTE PTR [rcx+0x0],ch
   140028394:	outs   dx,BYTE PTR ds:[rsi]
   140028395:	add    BYTE PTR [rdi+0x0],ah
   140028398:	and    BYTE PTR [rax],al
   14002839a:	push   rbx
   14002839b:	add    BYTE PTR [rbp+0x0],dh
   14002839e:	(bad)  
   14002839f:	add    BYTE PTR [rax],ah
   1400283a1:	add    BYTE PTR [rdx+0x0],cl
   1400283a4:	outs   dx,DWORD PTR ds:[rsi]
   1400283a5:	add    BYTE PTR [rdx+0x0],ah
	...
   1400283b0:	rex.X add BYTE PTR [rcx+0x0],cl
   1400283b4:	push   rsp
   1400283b5:	add    BYTE PTR [rbx+0x0],dl
   1400283b8:	and    BYTE PTR [rax],al
   1400283ba:	push   rbx
   1400283bb:	add    BYTE PTR [rbp+0x0],ah
   1400283be:	jb     0x1400283c0
   1400283c0:	jbe    0x1400283c2
   1400283c2:	imul   eax,DWORD PTR [rax],0x650063
   1400283c8:	and    BYTE PTR [rax],al
   1400283ca:	movsxd eax,DWORD PTR [rax]
   1400283cc:	outs   dx,DWORD PTR ds:[rsi]
   1400283cd:	add    BYTE PTR [rbp+0x0],dh
   1400283d0:	ins    BYTE PTR es:[rdi],dx
   1400283d1:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400283d5:	add    BYTE PTR [rsi+0x0],ch
   1400283d8:	outs   dx,DWORD PTR ds:[rsi]
   1400283d9:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400283dd:	add    BYTE PTR [rbx+0x0],ah
   1400283e0:	jb     0x1400283e2
   1400283e2:	add    BYTE PTR gs:[rcx+0x0],ah
   1400283e6:	je     0x1400283e8
   1400283e8:	add    BYTE PTR gs:[rax],ah
   1400283eb:	add    BYTE PTR [rdx+0x0],ch
   1400283ee:	outs   dx,DWORD PTR ds:[rsi]
   1400283ef:	add    BYTE PTR [rdx+0x0],ah
   1400283f2:	and    BYTE PTR [rax],al
   1400283f4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400283f8:	jb     0x1400283fa
   1400283fa:	outs   dx,DWORD PTR ds:[rsi]
   1400283fb:	add    BYTE PTR [rdx+0x0],dh
   1400283fe:	cmp    al,BYTE PTR [rax]
	...
   140028408:	push   rbx
   140028409:	add    BYTE PTR [rbp+0x0],dh
   14002840c:	jae    0x14002840e
   14002840e:	jo     0x140028410
   140028410:	add    BYTE PTR gs:[rsi+0x0],ch
   140028414:	add    BYTE PTR fs:[rcx+0x0],ch
   140028418:	outs   dx,BYTE PTR ds:[rsi]
   140028419:	add    BYTE PTR [rdi+0x0],ah
   14002841c:	and    BYTE PTR [rax],al
   14002841e:	push   rbx
   14002841f:	add    BYTE PTR [rbp+0x0],dh
   140028422:	(bad)  
   140028423:	add    BYTE PTR [rax],ah
   140028425:	add    BYTE PTR [rdx+0x0],cl
   140028428:	outs   dx,DWORD PTR ds:[rsi]
   140028429:	add    BYTE PTR [rdx+0x0],ah
   14002842c:	add    BYTE PTR [rax],al
   14002842e:	add    BYTE PTR [rax],al
   140028430:	push   rbx
   140028431:	add    BYTE PTR [rbp+0x0],ah
   140028434:	jb     0x140028436
   140028436:	jbe    0x140028438
   140028438:	imul   eax,DWORD PTR [rax],0x650063
   14002843e:	and    BYTE PTR [rax],al
   140028440:	add    BYTE PTR [rdi+0x0],r13b
   140028444:	ja     0x140028446
   140028446:	outs   dx,BYTE PTR ds:[rsi]
   140028447:	add    BYTE PTR [rax],ah
   140028449:	add    BYTE PTR [rip+0x63002000],ch        # 0x1a302a44f
   14002844f:	add    BYTE PTR [rdi+0x0],ch
   140028452:	jne    0x140028454
   140028454:	ins    BYTE PTR es:[rdi],dx
   140028455:	add    BYTE PTR [rax+rax*1+0x20],ah
   140028459:	add    BYTE PTR [rsi+0x0],ch
   14002845c:	outs   dx,DWORD PTR ds:[rsi]
   14002845d:	add    BYTE PTR [rax+rax*1+0x20],dh
   140028461:	add    BYTE PTR [rbx+0x0],dh
   140028464:	jne    0x140028466
   140028466:	jae    0x140028468
   140028468:	jo     0x14002846a
   14002846a:	add    BYTE PTR gs:[rsi+0x0],ch
   14002846e:	add    BYTE PTR fs:[rax],ah
   140028471:	add    BYTE PTR [rdx+0x0],ch
   140028474:	outs   dx,DWORD PTR ds:[rsi]
   140028475:	add    BYTE PTR [rdx+0x0],ah
	...
   140028480:	push   rbx
   140028481:	add    BYTE PTR [rbp+0x0],ah
   140028484:	jb     0x140028486
   140028486:	jbe    0x140028488
   140028488:	imul   eax,DWORD PTR [rax],0x650063
   14002848e:	and    BYTE PTR [rax],al
   140028490:	add    BYTE PTR [rdi+0x0],r13b
   140028494:	ja     0x140028496
   140028496:	outs   dx,BYTE PTR ds:[rsi]
   140028497:	add    BYTE PTR [rax],ah
   140028499:	add    BYTE PTR [rip+0x42002000],ch        # 0x18202a49f
   14002849f:	add    BYTE PTR [rcx+0x0],cl
   1400284a2:	push   rsp
   1400284a3:	add    BYTE PTR [rbx+0x0],dl
   1400284a6:	and    BYTE PTR [rax],al
   1400284a8:	add    BYTE PTR [rcx+0x0],r13b
   1400284ac:	jae    0x1400284ae
   1400284ae:	movsxd eax,DWORD PTR [rax]
   1400284b0:	outs   dx,DWORD PTR ds:[rsi]
   1400284b1:	add    BYTE PTR [rsi+0x0],ch
   1400284b4:	outs   dx,BYTE PTR ds:[rsi]
   1400284b5:	add    BYTE PTR [rbp+0x0],ah
   1400284b8:	movsxd eax,DWORD PTR [rax]
   1400284ba:	je     0x1400284bc
   1400284bc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
	...
   1400284cd:	add    BYTE PTR [rax],al
   1400284cf:	add    BYTE PTR [rbx+0x0],dl
   1400284d2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400284d6:	jbe    0x1400284d8
   1400284d8:	imul   eax,DWORD PTR [rax],0x650063
   1400284de:	and    BYTE PTR [rax],al
   1400284e0:	add    BYTE PTR [rdi+0x0],r13b
   1400284e4:	ja     0x1400284e6
   1400284e6:	outs   dx,BYTE PTR ds:[rsi]
   1400284e7:	add    BYTE PTR [rax],ah
   1400284e9:	add    BYTE PTR [rip+0x42002000],ch        # 0x18202a4ef
   1400284ef:	add    BYTE PTR [rcx+0x0],cl
   1400284f2:	push   rsp
   1400284f3:	add    BYTE PTR [rbx+0x0],dl
   1400284f6:	and    BYTE PTR [rax],al
   1400284f8:	add    BYTE PTR [rcx+0x0],r13b
   1400284fc:	jae    0x1400284fe
   1400284fe:	movsxd eax,DWORD PTR [rax]
   140028500:	outs   dx,DWORD PTR ds:[rsi]
   140028501:	add    BYTE PTR [rsi+0x0],ch
   140028504:	outs   dx,BYTE PTR ds:[rsi]
   140028505:	add    BYTE PTR [rbp+0x0],ah
   140028508:	movsxd eax,DWORD PTR [rax]
   14002850a:	je     0x14002850c
   14002850c:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140028511:	add    BYTE PTR [rax],al
   140028513:	add    BYTE PTR [rax],al
   140028515:	add    BYTE PTR [rax],al
   140028517:	add    BYTE PTR [rdx],ah
   140028519:	add    eax,0x11993
   14002851e:	add    BYTE PTR [rax],al
   140028520:	(bad)  
   140028521:	xor    al,BYTE PTR [rbx]
	...
   14002852b:	add    BYTE PTR [rbx],al
   14002852d:	add    BYTE PTR [rax],al
   14002852f:	add    BYTE PTR [rax+0x32],ch
   140028532:	add    eax,DWORD PTR [rax]
   140028534:	rex.W add BYTE PTR [rax],al
	...
   14002853f:	add    BYTE PTR [rdx],ah
   140028541:	add    eax,0x11993
   140028546:	add    BYTE PTR [rax],al
   140028548:	cwde   
   140028549:	xor    al,BYTE PTR [rbx]
	...
   140028553:	add    BYTE PTR [rbx],al
   140028555:	add    BYTE PTR [rax],al
   140028557:	add    BYTE PTR [rax+0x20000332],ah
	...
   140028565:	add    BYTE PTR [rax],al
   140028567:	add    BYTE PTR [rdx],ah
   140028569:	add    eax,0x31993
   14002856e:	add    BYTE PTR [rax],al
   140028570:	fdiv   DWORD PTR [rdx]
   140028572:	add    eax,DWORD PTR [rax]
	...
   14002857c:	(bad)  
   14002857d:	add    BYTE PTR [rax],al
   14002857f:	add    al,dh
   140028581:	xor    al,BYTE PTR [rbx]
   140028583:	add    BYTE PTR [rax+0x0],bh
	...
   14002858e:	add    BYTE PTR [rax],al
   140028590:	and    al,BYTE PTR [rip+0x41993]        # 0x140069f29
   140028596:	add    BYTE PTR [rax],al
   140028598:	pushf  
   140028599:	xor    eax,DWORD PTR [rbx]
	...
   1400285a3:	add    BYTE PTR [rcx],cl
   1400285a5:	add    BYTE PTR [rax],al
   1400285a7:	add    BYTE PTR [rbx+rsi*1+0xd00003],bh
	...
   1400285b6:	add    BYTE PTR [rax],al
   1400285b8:	and    al,BYTE PTR [rip+0x31993]        # 0x140059f51
   1400285be:	add    BYTE PTR [rax],al
   1400285c0:	push   rsp
   1400285c1:	xor    al,0x3
	...
   1400285cb:	add    BYTE PTR [rdi],al
   1400285cd:	add    BYTE PTR [rax],al
   1400285cf:	add    BYTE PTR [rsp+rsi*1+0x3],ch
   1400285d3:	add    BYTE PTR [rax+0x0],dl
   1400285d9:	add    BYTE PTR [rax],al
   1400285db:	add    BYTE PTR [rax],al
   1400285dd:	add    BYTE PTR [rax],al
   1400285df:	add    BYTE PTR [rdx],ah
   1400285e1:	add    eax,0x11993
   1400285e6:	add    BYTE PTR [rax],al
   1400285e8:	shl    BYTE PTR [rbx+rax*1],1
	...
   1400285f3:	add    BYTE PTR [rbx],al
   1400285f5:	add    BYTE PTR [rax],al
   1400285f7:	add    al,bl
   1400285f9:	xor    al,0x3
   1400285fb:	add    BYTE PTR [rax],bh
	...
   140028605:	add    BYTE PTR [rax],al
   140028607:	add    BYTE PTR [rbx-0x2d],cl
   14002860a:	xchg   ecx,eax
   14002860b:	rex.WB movabs rax,ds:0x362833b683429180
   140028615:	imul   edx,DWORD PTR [rax-0x1cb3f269],0x5c
   14002861c:	leave  
   14002861d:	or     eax,0x7c894c1f
   140028622:	fisub  DWORD PTR [rcx+0x7cee8cb7]
   140028628:	rex.W sbb al,0x3
   14002862b:	rex add DWORD PTR [rax],eax
   14002862e:	add    BYTE PTR [rax],al
   140028630:	rex.WR or rax,0x14002
   140028636:	add    BYTE PTR [rax],al
   140028638:	adc    BYTE PTR [rdx+0x0],0x40
   14002863c:	add    DWORD PTR [rax],eax
   14002863e:	add    BYTE PTR [rax],al
   140028640:	movabs al,ds:0x3000000001400054
   140028649:	jbe    0x14002864c
   14002864b:	rex add DWORD PTR [rax],eax
   14002864e:	add    BYTE PTR [rax],al
   140028650:	movabs al,ds:0xae00000001400054
   140028659:	or     eax,DWORD PTR [rdx]
   14002865b:	rex add DWORD PTR [rax],eax
   14002865e:	add    BYTE PTR [rax],al
   140028660:	fmul   DWORD PTR [rsi]
   140028662:	add    al,BYTE PTR [rax+0x1]
   140028665:	add    BYTE PTR [rax],al
   140028667:	add    BYTE PTR [rdx+0x140020b],bh
   14002866d:	add    BYTE PTR [rax],al
   14002866f:	add    al,al
   140028671:	or     eax,DWORD PTR [rdx]
   140028673:	rex add DWORD PTR [rax],eax
   140028676:	add    BYTE PTR [rax],al
   140028678:	(bad)  
   140028679:	or     eax,DWORD PTR [rdx]
   14002867b:	rex add DWORD PTR [rax],eax
   14002867e:	add    BYTE PTR [rax],al
   140028680:	int3   
   140028681:	or     eax,DWORD PTR [rdx]
   140028683:	rex add DWORD PTR [rax],eax
   140028686:	add    BYTE PTR [rax],al
   140028688:	ror    BYTE PTR [rbx],cl
   14002868a:	add    al,BYTE PTR [rax+0x1]
   14002868d:	add    BYTE PTR [rax],al
   14002868f:	add    al,dl
   140028691:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140028695:	add    BYTE PTR [rax],al
   140028697:	add    al,bl
   140028699:	or     eax,DWORD PTR [rdx]
   14002869b:	rex add DWORD PTR [rax],eax
   14002869e:	add    BYTE PTR [rax],al
   1400286a0:	fimul  WORD PTR [rbx]
   1400286a2:	add    al,BYTE PTR [rax+0x1]
   1400286a5:	add    BYTE PTR [rax],al
   1400286a7:	add    ah,ah
   1400286a9:	or     eax,DWORD PTR [rdx]
   1400286ab:	rex add DWORD PTR [rax],eax
   1400286ae:	add    BYTE PTR [rax],al
   1400286b0:	(bad)  
   1400286b1:	or     eax,0x14002
   1400286b6:	add    BYTE PTR [rax],al
   1400286b8:	lock or eax,DWORD PTR [rdx]
   1400286bb:	rex add DWORD PTR [rax],eax
   1400286be:	add    BYTE PTR [rax],al
   1400286c0:	test   BYTE PTR [rbx],0x2
   1400286c3:	rex add DWORD PTR [rax],eax
   1400286c6:	add    BYTE PTR [rax],al
   1400286c8:	cld    
   1400286c9:	or     eax,DWORD PTR [rdx]
   1400286cb:	rex add DWORD PTR [rax],eax
   1400286ce:	add    BYTE PTR [rax],al
   1400286d0:	add    cl,BYTE PTR [rdx+rax*1]
   1400286d3:	rex add DWORD PTR [rax],eax
   1400286d6:	add    BYTE PTR [rax],al
   1400286d8:	or     BYTE PTR [rdx+rax*1],cl
   1400286db:	rex add DWORD PTR [rax],eax
   1400286de:	add    BYTE PTR [rax],al
   1400286e0:	pop    rsi
   1400286e1:	or     eax,0x14002
   1400286e6:	add    BYTE PTR [rax],al
   1400286e8:	fs or  eax,0x14002
   1400286ee:	add    BYTE PTR [rax],al
   1400286f0:	jo     0x1400286ff
   1400286f2:	add    al,BYTE PTR [rax+0x1]
   1400286f5:	add    BYTE PTR [rax],al
   1400286f7:	add    BYTE PTR [rdx+0xd],ch
   1400286fa:	add    al,BYTE PTR [rax+0x1]
   1400286fd:	add    BYTE PTR [rax],al
   1400286ff:	add    BYTE PTR [rsi+0xd],dh
   140028702:	add    al,BYTE PTR [rax+0x1]
   140028705:	add    BYTE PTR [rax],al
   140028707:	add    BYTE PTR [rbp+rcx*1+0x2],bh
   14002870b:	rex add DWORD PTR [rax],eax
   14002870e:	add    BYTE PTR [rax],al
   140028710:	(bad)  
   140028711:	or     eax,0x14002
   140028716:	add    BYTE PTR [rax],al
   140028718:	mov    BYTE PTR [rip+0x14002],cl        # 0x14003c720
   14002871e:	add    BYTE PTR [rax],al
   140028720:	mov    cs,WORD PTR [rip+0x14002]        # 0x14003c728
   140028726:	add    BYTE PTR [rax],al
   140028728:	xchg   esp,eax
   140028729:	or     eax,0x14002
   14002872e:	add    BYTE PTR [rax],al
   140028730:	(bad)  
   140028731:	or     eax,0x14002
   140028736:	add    BYTE PTR [rax],al
   140028738:	movabs al,ds:0xa60000000140020d
   140028741:	or     eax,0x14002
   140028746:	add    BYTE PTR [rax],al
   140028748:	lods   al,BYTE PTR ds:[rsi]
   140028749:	or     eax,0x14002
   14002874e:	add    BYTE PTR [rax],al
   140028750:	mov    dl,0xd
   140028752:	add    al,BYTE PTR [rax+0x1]
   140028755:	add    BYTE PTR [rax],al
   140028757:	add    BYTE PTR [rax+0x140020d],bh
   14002875d:	add    BYTE PTR [rax],al
   14002875f:	add    BYTE PTR [rsi+0x140020d],bh
   140028765:	add    BYTE PTR [rax],al
   140028767:	add    dl,cl
   140028769:	or     eax,0x14002
   14002876e:	add    BYTE PTR [rax],al
   140028770:	ror    BYTE PTR [rip+0x14002],1        # 0x14003c778
   140028776:	add    BYTE PTR [rax],al
   140028778:	(bad)  
   140028779:	or     eax,0x14002
   14002877e:	add    BYTE PTR [rax],al
   140028780:	fmul   QWORD PTR [rip+0x14002]        # 0x14003c788
   140028786:	add    BYTE PTR [rax],al
   140028788:	loop   0x140028797
   14002878a:	add    al,BYTE PTR [rax+0x1]
   14002878d:	add    BYTE PTR [rax],al
   14002878f:	add    al,ch
   140028791:	or     eax,0x14002
   140028796:	add    BYTE PTR [rax],al
   140028798:	out    dx,al
   140028799:	or     eax,0x14002
   14002879e:	add    BYTE PTR [rax],al
   1400287a0:	hlt    
   1400287a1:	or     eax,0x14002
   1400287a6:	add    BYTE PTR [rax],al
   1400287a8:	cli    
   1400287a9:	or     eax,0x14002
   1400287ae:	add    BYTE PTR [rax],al
   1400287b0:	add    BYTE PTR [rsi],cl
   1400287b2:	add    al,BYTE PTR [rax+0x1]
   1400287b5:	add    BYTE PTR [rax],al
   1400287b7:	add    BYTE PTR [rsi],al
   1400287b9:	(bad)  
   1400287ba:	add    al,BYTE PTR [rax+0x1]
   1400287bd:	add    BYTE PTR [rax],al
   1400287bf:	add    BYTE PTR [rsi+rcx*1],cl
   1400287c2:	add    al,BYTE PTR [rax+0x1]
   1400287c5:	add    BYTE PTR [rax],al
   1400287c7:	add    BYTE PTR [rdx],dl
   1400287c9:	(bad)  
   1400287ca:	add    al,BYTE PTR [rax+0x1]
   1400287cd:	add    BYTE PTR [rax],al
   1400287cf:	add    BYTE PTR [rax],bl
   1400287d1:	(bad)  
   1400287d2:	add    al,BYTE PTR [rax+0x1]
   1400287d5:	add    BYTE PTR [rax],al
   1400287d7:	add    BYTE PTR [rsi],bl
   1400287d9:	(bad)  
   1400287da:	add    al,BYTE PTR [rax+0x1]
   1400287dd:	add    BYTE PTR [rax],al
   1400287df:	add    BYTE PTR [rsi+rcx*1],ah
   1400287e2:	add    al,BYTE PTR [rax+0x1]
   1400287e5:	add    BYTE PTR [rax],al
   1400287e7:	add    BYTE PTR [rdx],ch
   1400287e9:	(bad)  
   1400287ea:	add    al,BYTE PTR [rax+0x1]
   1400287ed:	add    BYTE PTR [rax],al
   1400287ef:	add    BYTE PTR [rax],dh
   1400287f1:	(bad)  
   1400287f2:	add    al,BYTE PTR [rax+0x1]
   1400287f5:	add    BYTE PTR [rax],al
   1400287f7:	add    BYTE PTR [rsi],dh
   1400287f9:	(bad)  
   1400287fa:	add    al,BYTE PTR [rax+0x1]
   1400287fd:	add    BYTE PTR [rax],al
   1400287ff:	add    BYTE PTR [rsi+rcx*1],bh
   140028802:	add    al,BYTE PTR [rax+0x1]
   140028805:	add    BYTE PTR [rax],al
   140028807:	add    BYTE PTR [rdx+0xe],al
   14002880a:	add    al,BYTE PTR [rax+0x1]
   14002880d:	add    BYTE PTR [rax],al
   14002880f:	add    BYTE PTR [rax+0xe],cl
   140028812:	add    al,BYTE PTR [rax+0x1]
   140028815:	add    BYTE PTR [rax],al
   140028817:	add    BYTE PTR [rsi+0xe],cl
   14002881a:	add    al,BYTE PTR [rax+0x1]
   14002881d:	add    BYTE PTR [rax],al
   14002881f:	add    BYTE PTR [rsi+rcx*1+0x2],dl
   140028823:	rex add DWORD PTR [rax],eax
   140028826:	add    BYTE PTR [rax],al
   140028828:	pop    rdx
   140028829:	(bad)  
   14002882a:	add    al,BYTE PTR [rax+0x1]
   14002882d:	add    BYTE PTR [rax],al
   14002882f:	add    BYTE PTR [rax+0xe],ah
   140028832:	add    al,BYTE PTR [rax+0x1]
   140028835:	add    BYTE PTR [rax],al
   140028837:	add    BYTE PTR [rsi+0xe],ah
   14002883a:	add    al,BYTE PTR [rax+0x1]
   14002883d:	add    BYTE PTR [rax],al
   14002883f:	add    BYTE PTR [rax+0x1400054],ah
   140028845:	add    BYTE PTR [rax],al
   140028847:	add    BYTE PTR [rax],ah
   140028849:	push   rbx
   14002884a:	add    BYTE PTR [rax+0x1],al
   14002884d:	add    BYTE PTR [rax],al
   14002884f:	add    BYTE PTR [rax+0x53],al
   140028852:	add    BYTE PTR [rax+0x1],al
   140028855:	add    BYTE PTR [rax],al
   140028857:	add    BYTE PTR [rsi+rcx*1+0x2],ch
   14002885b:	rex add DWORD PTR [rax],eax
   14002885e:	add    BYTE PTR [rax],al
   140028860:	jb     0x140028870
   140028862:	add    al,BYTE PTR [rax+0x1]
   140028865:	add    BYTE PTR [rax],al
   140028867:	add    BYTE PTR [rax+0xe],bh
   14002886a:	add    al,BYTE PTR [rax+0x1]
   14002886d:	add    BYTE PTR [rax],al
   14002886f:	add    BYTE PTR [rsi+0xe],bh
   140028872:	add    al,BYTE PTR [rax+0x1]
   140028875:	add    BYTE PTR [rax],al
   140028877:	add    BYTE PTR [rsi+rcx*1+0x14002],al
   14002887e:	add    BYTE PTR [rax],al
   140028880:	mov    cl,BYTE PTR [rsi]
   140028882:	add    al,BYTE PTR [rax+0x1]
   140028885:	add    BYTE PTR [rax],al
   140028887:	add    BYTE PTR [rax+0x140020e],dl
   14002888d:	add    BYTE PTR [rax],al
   14002888f:	add    BYTE PTR [rsi+0x140020e],dl
   140028895:	add    BYTE PTR [rax],al
   140028897:	add    BYTE PTR [rsi+rcx*1+0x14002],bl
   14002889e:	add    BYTE PTR [rax],al
   1400288a0:	movabs ds:0xa80000000140020e,al
   1400288a9:	(bad)  
   1400288aa:	add    al,BYTE PTR [rax+0x1]
   1400288ad:	add    BYTE PTR [rax],al
   1400288af:	add    BYTE PTR [rsi+0x140020e],ch
   1400288b5:	add    BYTE PTR [rax],al
   1400288b7:	add    BYTE PTR [rsi+rcx*1+0x14002],dh
   1400288be:	add    BYTE PTR [rax],al
   1400288c0:	mov    edx,0x140020e
   1400288c5:	add    BYTE PTR [rax],al
   1400288c7:	add    al,al
   1400288c9:	(bad)  
   1400288ca:	add    al,BYTE PTR [rax+0x1]
   1400288cd:	add    BYTE PTR [rax],al
   1400288cf:	add    ah,cl
   1400288d1:	(bad)  
   1400288d2:	add    al,BYTE PTR [rax+0x1]
   1400288d5:	add    BYTE PTR [rax],al
   1400288d7:	add    dl,dl
   1400288d9:	(bad)  
   1400288da:	add    al,BYTE PTR [rax+0x1]
   1400288dd:	add    BYTE PTR [rax],al
   1400288df:	add    dh,bl
   1400288e1:	(bad)  
   1400288e2:	add    al,BYTE PTR [rax+0x1]
   1400288e5:	add    BYTE PTR [rax],al
   1400288e7:	add    ah,ah
   1400288e9:	(bad)  
   1400288ea:	add    al,BYTE PTR [rax+0x1]
   1400288ed:	add    BYTE PTR [rax],al
   1400288ef:	add    dl,ch
   1400288f1:	(bad)  
   1400288f2:	add    al,BYTE PTR [rax+0x1]
   1400288f5:	add    BYTE PTR [rax],al
   1400288f7:	add    al,dh
   1400288f9:	(bad)  
   1400288fa:	add    al,BYTE PTR [rax+0x1]
   1400288fd:	add    BYTE PTR [rax],al
   1400288ff:	add    BYTE PTR [rbx],dl
   140028901:	add    DWORD PTR [rax],eax
	...
   14002890f:	add    BYTE PTR [rip+0x0],dl        # 0x140028915
   140028915:	add    BYTE PTR [rax],al
   140028917:	add    al,dh
   140028919:	(bad)  
   14002891a:	add    BYTE PTR [rax+0x1],al
	...
   14002893d:	add    BYTE PTR [rax],al
   14002893f:	add    dh,dh
   140028941:	(bad)  
   140028942:	add    al,BYTE PTR [rax+0x1]
   140028945:	add    BYTE PTR [rax],al
   140028947:	add    BYTE PTR [rax],al
   140028949:	mov    DWORD PTR [rdx],eax
   14002894b:	rex add DWORD PTR [rax],eax
	...
   14002895e:	pop    rcx
   14002895f:	add    BYTE PTR [rax],al
   140028962:	add    BYTE PTR [rax],al
   140028964:	add    BYTE PTR [rax],al
   140028966:	lock mov edi,0x0
   14002896c:	add    BYTE PTR [rax],al
   14002896e:	add    BYTE PTR [rax],al
   140028970:	push   rdx
   140028971:	add    BYTE PTR [rbp+0x0],dh
   140028974:	outs   dx,BYTE PTR ds:[rsi]
   140028975:	add    BYTE PTR [rsi+0x0],ch
   140028978:	imul   eax,DWORD PTR [rax],0x67006e
   14002897e:	and    BYTE PTR [rax],al
   140028980:	data16 add BYTE PTR [rcx+0x0],ch
   140028984:	ins    BYTE PTR es:[rdi],dx
   140028985:	add    BYTE PTR [rbp+0x0],ah
   140028988:	jae    0x14002898a
   14002898a:	cmp    al,BYTE PTR [rax]
   14002898c:	add    BYTE PTR [rax],al
   14002898e:	add    BYTE PTR [rax],al
   140028990:	and    al,BYTE PTR [rax]
   140028992:	add    BYTE PTR [rax],al
   140028994:	(bad)  
   140028995:	add    BYTE PTR [rax],al
   140028997:	add    BYTE PTR [rax],ah
   140028999:	add    BYTE PTR [rax],al
   14002899b:	add    BYTE PTR [rax],al
   14002899d:	add    BYTE PTR [rax],al
   14002899f:	add    BYTE PTR [rcx+0x0],cl
   1400289a2:	outs   dx,BYTE PTR ds:[rsi]
   1400289a3:	add    BYTE PTR [rbx+0x0],dh
   1400289a6:	je     0x1400289a8
   1400289a8:	(bad)  
   1400289a9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400289ad:	add    BYTE PTR [rax],ah
   1400289af:	add    BYTE PTR [rsi+0x0],ah
   1400289b2:	imul   eax,DWORD PTR [rax],0x69006e
   1400289b8:	jae    0x1400289ba
   1400289ba:	push   0x64006500
   1400289bf:	add    BYTE PTR [rax],ah
   1400289c1:	add    BYTE PTR [rdi+0x0],dh
   1400289c4:	imul   eax,DWORD PTR [rax],0x680074
   1400289ca:	and    BYTE PTR [rax],al
   1400289cc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400289d0:	jb     0x1400289d2
   1400289d2:	outs   dx,DWORD PTR ds:[rsi]
   1400289d3:	add    BYTE PTR [rdx+0x0],dh
   1400289d6:	and    BYTE PTR [rax],al
   1400289d8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400289dc:	add    BYTE PTR fs:[rbp+0x0],ah
   1400289e0:	cmp    al,BYTE PTR [rax]
   1400289e2:	and    BYTE PTR [rax],al
   1400289e4:	and    eax,0x68005800
   1400289e9:	add    BYTE PTR [rax],al
   1400289eb:	add    BYTE PTR [rax],al
   1400289ed:	add    BYTE PTR [rax],al
   1400289ef:	add    BYTE PTR [rbx+0x0],al
   1400289f2:	jb     0x1400289f4
   1400289f4:	add    BYTE PTR gs:[rcx+0x0],ah
   1400289f8:	je     0x1400289fa
   1400289fa:	add    BYTE PTR gs:[rax],ah
   1400289fd:	add    BYTE PTR [rax+0x0],dl
   140028a00:	jb     0x140028a02
   140028a02:	outs   dx,DWORD PTR ds:[rsi]
   140028a03:	add    BYTE PTR [rbx+0x0],ah
   140028a06:	add    BYTE PTR gs:[rbx+0x0],dh
   140028a0a:	jae    0x140028a0c
   140028a0c:	and    BYTE PTR [rax],al
   140028a0e:	data16 add BYTE PTR [rcx+0x0],ah
   140028a12:	imul   eax,DWORD PTR [rax],0x65006c
   140028a18:	add    BYTE PTR fs:[rax],ah
   140028a1b:	add    BYTE PTR [rip+0x45002000],ch        # 0x18502aa21
   140028a21:	add    BYTE PTR [rdx+0x0],dh
   140028a24:	jb     0x140028a26
   140028a26:	outs   dx,DWORD PTR ds:[rsi]
   140028a27:	add    BYTE PTR [rdx+0x0],dh
   140028a2a:	and    BYTE PTR [rax],al
   140028a2c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140028a30:	add    BYTE PTR fs:[rbp+0x0],ah
   140028a34:	cmp    al,BYTE PTR [rax]
   140028a36:	and    BYTE PTR [rax],al
   140028a38:	and    eax,0x68005800
   140028a3d:	add    BYTE PTR [rax],ah
   140028a3f:	add    BYTE PTR [rip+0x50002000],ch        # 0x19002aa45
   140028a45:	add    BYTE PTR [rdx+0x0],dh
   140028a48:	outs   dx,DWORD PTR ds:[rsi]
   140028a49:	add    BYTE PTR [rbx+0x0],ah
   140028a4c:	add    BYTE PTR gs:[rbx+0x0],dh
   140028a50:	jae    0x140028a52
   140028a52:	and    BYTE PTR [rax],al
   140028a54:	add    BYTE PTR gs:[rax+0x0],bh
   140028a58:	imul   eax,DWORD PTR [rax],0x200074
   140028a5e:	add    BYTE PTR gs:[rdx+0x0],dh
   140028a62:	jb     0x140028a64
   140028a64:	outs   dx,DWORD PTR ds:[rsi]
   140028a65:	add    BYTE PTR [rdx+0x0],dh
   140028a68:	and    BYTE PTR [rax],al
   140028a6a:	rex.XB add BYTE PTR [r15+0x0],bpl
   140028a6e:	add    BYTE PTR fs:[rbp+0x0],ah
   140028a72:	cmp    al,BYTE PTR [rax]
   140028a74:	and    BYTE PTR [rax],al
   140028a76:	and    eax,0x68005800
   140028a7b:	add    BYTE PTR [rax],al
   140028a7d:	add    BYTE PTR [rax],al
   140028a7f:	add    BYTE PTR [rdx],ah
   140028a81:	add    eax,0x31993
   140028a86:	add    BYTE PTR [rax],al
   140028a88:	xor    BYTE PTR [rip+0x3],dh        # 0x140028a91
   140028a8e:	add    BYTE PTR [rax],al
   140028a90:	add    BYTE PTR [rax],al
   140028a92:	add    BYTE PTR [rax],al
   140028a94:	(bad)  
   140028a95:	add    BYTE PTR [rax],al
   140028a97:	add    BYTE PTR [rax+0x35],cl
   140028a9a:	add    eax,DWORD PTR [rax]
   140028a9c:	push   0x0
   140028aa1:	add    BYTE PTR [rax],al
   140028aa3:	add    BYTE PTR [rax],al
   140028aa5:	add    BYTE PTR [rax],al
   140028aa7:	add    BYTE PTR [rdx],ah
   140028aa9:	add    eax,0x11993
   140028aae:	add    BYTE PTR [rax],al
   140028ab0:	test   al,0x35
   140028ab2:	add    eax,DWORD PTR [rax]
	...
   140028abc:	add    eax,DWORD PTR [rax]
   140028abe:	add    BYTE PTR [rax],al
   140028ac0:	mov    al,0x35
   140028ac2:	add    eax,DWORD PTR [rax]
   140028ac4:	nop
	...
   140028acd:	add    BYTE PTR [rax],al
   140028acf:	add    BYTE PTR [rip+0x0],bh        # 0x140028ad5
   140028ad5:	add    BYTE PTR [rax],al
   140028ad7:	add    BYTE PTR [rsi+0x0],ah
   140028ada:	imul   eax,DWORD PTR [rax],0x65006c
	...
   140028ae8:	ins    BYTE PTR es:[rdi],dx
   140028ae9:	add    BYTE PTR [rcx+0x0],ah
   140028aec:	jne    0x140028aee
   140028aee:	outs   dx,BYTE PTR ds:[rsi]
   140028aef:	add    BYTE PTR [rbx+0x0],ah
   140028af2:	push   0x0
   140028af7:	add    BYTE PTR [rbp+0x0],dh
   140028afa:	imul   eax,DWORD PTR [rax],0x610062
   140028b00:	jae    0x140028b02
   140028b02:	add    BYTE PTR gs:[rax],al
   140028b05:	add    BYTE PTR [rax],al
   140028b07:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140028b0b:	add    BYTE PTR [rdi+0x0],dh
   140028b0e:	outs   dx,BYTE PTR ds:[rsi]
   140028b0f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140028b13:	add    BYTE PTR [rcx+0x0],ah
   140028b16:	add    BYTE PTR fs:[rax+rax*1+0x69],ah
   140028b1b:	add    BYTE PTR [rdx+0x0],dh
   140028b1e:	add    BYTE PTR [rax],al
   140028b20:	and    al,BYTE PTR [rip+0x41993]        # 0x14006a4b9
   140028b26:	add    BYTE PTR [rax],al
   140028b28:	call   0x140028e62
   140028b2d:	add    BYTE PTR [rax],al
   140028b2f:	add    BYTE PTR [rax],al
   140028b31:	add    BYTE PTR [rax],al
   140028b33:	add    BYTE PTR [rsi],al
   140028b35:	add    BYTE PTR [rax],al
   140028b37:	add    BYTE PTR [rax],cl
   140028b39:	add    eax,DWORD PTR ss:[rax]
   140028b3c:	and    BYTE PTR [rax],al
	...
   140028b46:	add    BYTE PTR [rax],al
   140028b48:	and    al,BYTE PTR [rip+0x31993]        # 0x14005a4e1
   140028b4e:	add    BYTE PTR [rax],al
   140028b50:	push   0x336
   140028b55:	add    BYTE PTR [rax],al
   140028b57:	add    BYTE PTR [rax],al
   140028b59:	add    BYTE PTR [rax],al
   140028b5b:	add    BYTE PTR [rdi],al
   140028b5d:	add    BYTE PTR [rax],al
   140028b5f:	add    BYTE PTR [rax+0x40000336],al
	...
   140028b6d:	add    BYTE PTR [rax],al
   140028b6f:	add    al,bl
   140028b71:	sbb    al,0x3
   140028b73:	rex add DWORD PTR [rax],eax
   140028b76:	add    BYTE PTR [rax],al
   140028b78:	cld    
   140028b79:	(bad)  
   140028b7a:	add    al,BYTE PTR [rax+0x1]
   140028b7d:	add    BYTE PTR [rax],al
   140028b7f:	add    al,dl
   140028b81:	pop    rsi
   140028b82:	add    BYTE PTR [rax+0x1],al
   140028b85:	add    BYTE PTR [rax],al
   140028b87:	add    BYTE PTR [rax+0x1400054],ah
   140028b8d:	add    BYTE PTR [rax],al
   140028b8f:	add    BYTE PTR [rax],dh
   140028b91:	jbe    0x140028b94
   140028b93:	rex add DWORD PTR [rax],eax
   140028b96:	add    BYTE PTR [rax],al
   140028b98:	movabs al,ds:0x800000001400054
   140028ba1:	lar    eax,WORD PTR [rax+0x1]
   140028ba5:	add    BYTE PTR [rax],al
   140028ba7:	add    BYTE PTR [rax+0x5c],dh
   140028baa:	add    BYTE PTR [rax+0x1],al
   140028bad:	add    BYTE PTR [rax],al
   140028baf:	add    BYTE PTR [rax-0x70],al
   140028bb2:	add    al,BYTE PTR [rax+0x1]
   140028bb5:	add    BYTE PTR [rax],al
   140028bb7:	add    BYTE PTR [rax+0x0],cl
   140028bba:	add    BYTE PTR [rax],al
   140028bbc:	(bad)  
   140028bbd:	inc    DWORD PTR [rax]
	...
   140028bc7:	add    BYTE PTR [rax],dh
   140028bc9:	add    BYTE PTR [eax+0x1],al
	...
   140028bdd:	add    BYTE PTR [rax],al
   140028bdf:	add    BYTE PTR [rax-0x70],bl
   140028be2:	add    al,BYTE PTR [rax+0x1]
   140028be5:	add    BYTE PTR [rax],al
   140028be7:	add    bh,bh
   140028be9:	(bad)  
   140028bea:	(bad)  
   140028beb:	inc    DWORD PTR [rax]
   140028bed:	add    BYTE PTR [rax],al
   140028bef:	add    BYTE PTR [rax+rdx*4+0x2],dl
   140028bf3:	rex add DWORD PTR [rax],eax
	...
   140028bfe:	add    BYTE PTR [rax],al
   140028c00:	add    BYTE PTR [rax+0x0],ah
   140028c03:	rex add DWORD PTR [rax],eax
	...
   140028c1e:	add    BYTE PTR [rax],al
   140028c20:	js     0x140028bb2
   140028c22:	add    al,BYTE PTR [rax+0x1]
   140028c25:	add    BYTE PTR [rax],al
   140028c27:	add    bh,bh
   140028c29:	(bad)  
   140028c2a:	(bad)  
   140028c2b:	inc    DWORD PTR [rax]
   140028c2d:	add    BYTE PTR [rax],al
   140028c2f:	add    BYTE PTR [rax+0x1400290],bl
	...
   140028c3d:	add    BYTE PTR [rax],al
   140028c3f:	add    BYTE PTR [rax+0x60],ah
   140028c42:	add    BYTE PTR [rax+0x1],al
	...
   140028c5d:	add    BYTE PTR [rax],al
   140028c5f:	add    BYTE PTR [rax+0x1400290],ah
   140028c65:	add    BYTE PTR [rax],al
   140028c67:	add    bh,bh
   140028c69:	(bad)  
   140028c6a:	(bad)  
   140028c6b:	inc    DWORD PTR [rax]
	...
   140028c75:	add    BYTE PTR [rax],al
   140028c77:	add    BYTE PTR [rax],cl
   140028c79:	add    BYTE PTR [rax],al
   140028c7b:	add    BYTE PTR [rax],al
   140028c7d:	add    BYTE PTR [rax],al
   140028c7f:	add    BYTE PTR [rax+0x1400060],dh
	...
   140028c9d:	add    BYTE PTR [rax],al
   140028c9f:	add    al,cl
   140028ca1:	nop
   140028ca2:	add    al,BYTE PTR [rax+0x1]
   140028ca5:	add    BYTE PTR [rax],al
   140028ca7:	add    bh,bh
   140028ca9:	(bad)  
   140028caa:	(bad)  
   140028cab:	inc    DWORD PTR [rax]
	...
   140028cb5:	add    BYTE PTR [rax],al
   140028cb7:	add    BYTE PTR [rbx],al
   140028cb9:	add    BYTE PTR [rax],al
   140028cbb:	add    BYTE PTR [rax],al
   140028cbd:	add    BYTE PTR [rax],al
   140028cbf:	add    BYTE PTR [rax+0x61],al
   140028cc2:	add    BYTE PTR [rax+0x1],al
	...
   140028cdd:	add    BYTE PTR [rax],al
   140028cdf:	add    al,dh
   140028ce1:	nop
   140028ce2:	add    al,BYTE PTR [rax+0x1]
   140028ce5:	add    BYTE PTR [rax],al
   140028ce7:	add    bh,bh
   140028ce9:	(bad)  
   140028cea:	(bad)  
   140028ceb:	inc    DWORD PTR [rax]
	...
   140028cf5:	add    BYTE PTR [rax],al
   140028cf7:	add    BYTE PTR [rax],cl
   140028cf9:	add    BYTE PTR [rax],al
   140028cfb:	add    BYTE PTR [rax],al
   140028cfd:	add    BYTE PTR [rax],al
   140028cff:	add    BYTE PTR [rax+0x1400061],ah
	...
   140028d1d:	add    BYTE PTR [rax],al
   140028d1f:	add    BYTE PTR [rax],dl
   140028d21:	xchg   ecx,eax
   140028d22:	add    al,BYTE PTR [rax+0x1]
   140028d25:	add    BYTE PTR [rax],al
   140028d27:	add    bh,bh
   140028d29:	(bad)  
   140028d2a:	(bad)  
   140028d2b:	inc    DWORD PTR [rax]
	...
   140028d3d:	add    BYTE PTR [rax],al
   140028d3f:	add    BYTE PTR [rax+0x62],dl
   140028d42:	add    BYTE PTR [rax+0x1],al
	...
   140028d5d:	add    BYTE PTR [rax],al
   140028d5f:	add    BYTE PTR [rax],bh
   140028d61:	xchg   ecx,eax
   140028d62:	add    al,BYTE PTR [rax+0x1]
   140028d65:	add    BYTE PTR [rax],al
   140028d67:	add    bh,bh
   140028d69:	(bad)  
   140028d6a:	(bad)  
   140028d6b:	inc    DWORD PTR [rax]
	...
   140028d75:	add    BYTE PTR [rax],al
   140028d77:	add    BYTE PTR [rax],cl
   140028d79:	add    BYTE PTR [rax],al
   140028d7b:	add    BYTE PTR [rax],al
   140028d7d:	add    BYTE PTR [rax],al
   140028d7f:	add    BYTE PTR [rax+0x1400062],dl
	...
   140028d9d:	add    BYTE PTR [rax],al
   140028d9f:	add    BYTE PTR [rax-0x6f],ch
   140028da2:	add    al,BYTE PTR [rax+0x1]
   140028da5:	add    BYTE PTR [rax],al
   140028da7:	add    bh,bh
   140028da9:	(bad)  
   140028daa:	(bad)  
   140028dab:	inc    DWORD PTR [rax]
	...
   140028db5:	add    BYTE PTR [rax],al
   140028db7:	add    BYTE PTR [rax],cl
   140028db9:	add    BYTE PTR [rax],al
   140028dbb:	add    BYTE PTR [rax],al
   140028dbd:	add    BYTE PTR [rax],al
   140028dbf:	add    BYTE PTR [rax],dh
   140028dc1:	movsxd eax,DWORD PTR [rax]
   140028dc3:	rex add DWORD PTR [rax],eax
	...
   140028dde:	add    BYTE PTR [rax],al
   140028de0:	cwde   
   140028de1:	xchg   ecx,eax
   140028de2:	add    al,BYTE PTR [rax+0x1]
   140028de5:	add    BYTE PTR [rax],al
   140028de7:	add    bh,bh
   140028de9:	(bad)  
   140028dea:	(bad)  
   140028deb:	inc    DWORD PTR [rax]
   140028ded:	add    BYTE PTR [rax],al
   140028def:	add    BYTE PTR [rax+rdx*4+0x14002],bl
   140028df6:	add    BYTE PTR [rax],al
   140028df8:	or     BYTE PTR [rax],al
   140028dfa:	add    BYTE PTR [rax],al
   140028dfc:	add    BYTE PTR [rax],al
   140028dfe:	add    BYTE PTR [rax],al
   140028e00:	shl    BYTE PTR [rbx+0x0],1
   140028e03:	rex add DWORD PTR [rax],eax
	...
   140028e1e:	add    BYTE PTR [rax],al
   140028e20:	rcl    BYTE PTR [rcx+0x14002],0x0
   140028e27:	add    bh,bh
   140028e29:	(bad)  
   140028e2a:	(bad)  
   140028e2b:	inc    DWORD PTR [rax]
   140028e2d:	add    BYTE PTR [rax],al
   140028e2f:	add    ah,al
   140028e31:	nop
   140028e32:	add    al,BYTE PTR [rax+0x1]
   140028e35:	add    BYTE PTR [rax],al
   140028e37:	add    BYTE PTR [rax],cl
   140028e39:	add    BYTE PTR [rax],al
   140028e3b:	add    BYTE PTR [rax],al
   140028e3d:	add    BYTE PTR [rax],al
   140028e3f:	add    BYTE PTR [rax+0x1400064],al
	...
   140028e5d:	add    BYTE PTR [rax],al
   140028e5f:	add    al,ch
   140028e61:	xchg   ecx,eax
   140028e62:	add    al,BYTE PTR [rax+0x1]
   140028e65:	add    BYTE PTR [rax],al
   140028e67:	add    bh,bh
   140028e69:	(bad)  
   140028e6a:	(bad)  
   140028e6b:	inc    DWORD PTR [rax]
   140028e6d:	add    BYTE PTR [rax],al
   140028e6f:	add    BYTE PTR [rcx+rdx*4],dh
   140028e72:	add    al,BYTE PTR [rax+0x1]
   140028e75:	add    BYTE PTR [rax],al
   140028e77:	add    BYTE PTR [rax],cl
   140028e79:	add    BYTE PTR [rax],al
   140028e7b:	add    BYTE PTR [rax],al
   140028e7d:	add    BYTE PTR [rax],al
   140028e7f:	add    BYTE PTR [rax],dh
   140028e81:	add    BYTE PTR gs:[rax+0x1],al
	...
   140028e9d:	add    BYTE PTR [rax],al
   140028e9f:	add    BYTE PTR [rax],dl
   140028ea1:	xchg   edx,eax
   140028ea2:	add    al,BYTE PTR [rax+0x1]
   140028ea5:	add    BYTE PTR [rax],al
   140028ea7:	add    bh,bh
   140028ea9:	(bad)  
   140028eaa:	(bad)  
   140028eab:	inc    DWORD PTR [rax]
	...
   140028eb5:	add    BYTE PTR [rax],al
   140028eb7:	add    BYTE PTR [rbx],cl
   140028eb9:	add    BYTE PTR [rax],al
   140028ebb:	add    BYTE PTR [rax],al
   140028ebd:	add    BYTE PTR [rax],al
   140028ebf:	add    al,ah
   140028ec1:	add    BYTE PTR gs:[rax+0x1],al
	...
   140028edd:	add    BYTE PTR [rax],al
   140028edf:	add    BYTE PTR [rax],dh
   140028ee1:	xchg   edx,eax
   140028ee2:	add    al,BYTE PTR [rax+0x1]
   140028ee5:	add    BYTE PTR [rax],al
   140028ee7:	add    bh,bh
   140028ee9:	(bad)  
   140028eea:	(bad)  
   140028eeb:	inc    DWORD PTR [rax]
	...
   140028efd:	add    BYTE PTR [rax],al
   140028eff:	add    BYTE PTR [rax],dh
   140028f01:	data16 add BYTE PTR [rax+0x1],al
	...
   140028f1d:	add    BYTE PTR [rax],al
   140028f1f:	add    BYTE PTR [rax-0x6e],dl
   140028f22:	add    al,BYTE PTR [rax+0x1]
   140028f25:	add    BYTE PTR [rax],al
   140028f27:	add    bh,bh
   140028f29:	(bad)  
   140028f2a:	(bad)  
   140028f2b:	inc    DWORD PTR [rax]
	...
   140028f3d:	add    BYTE PTR [rax],al
   140028f3f:	add    BYTE PTR [rax+0x66],ah
   140028f42:	add    BYTE PTR [rax+0x1],al
	...
   140028f5d:	add    BYTE PTR [rax],al
   140028f5f:	add    BYTE PTR [rax-0x6e],ch
   140028f62:	add    al,BYTE PTR [rax+0x1]
   140028f65:	add    BYTE PTR [rax],al
   140028f67:	add    bh,bh
   140028f69:	(bad)  
   140028f6a:	(bad)  
   140028f6b:	inc    DWORD PTR [rax]
   140028f6d:	add    BYTE PTR [rax],al
   140028f6f:	add    BYTE PTR [rcx+rdx*4+0x2],ah
   140028f73:	rex add DWORD PTR [rax],eax
	...
   140028f7e:	add    BYTE PTR [rax],al
   140028f80:	nop
   140028f81:	data16 add BYTE PTR [rax+0x1],al
	...
   140028fa5:	add    BYTE PTR [rax],al
   140028fa7:	add    bh,bh
   140028fa9:	(bad)  
   140028faa:	(bad)  
   140028fab:	inc    DWORD PTR [rax]
	...
   140028fb5:	add    BYTE PTR [rax],al
   140028fb7:	add    BYTE PTR [rax],bl
	...
   140028fcd:	add    BYTE PTR [rax],al
   140028fcf:	add    bh,bh
   140028fd1:	(bad)  
   140028fd2:	(bad)  
   140028fd3:	(bad)  
   140028fd4:	(bad)  
   140028fd5:	(bad)  
   140028fd6:	(bad)  
   140028fd7:	inc    DWORD PTR [rax]
   140028fd9:	add    BYTE PTR [rax],al
   140028fdb:	add    BYTE PTR [rax],al
   140028fdd:	add    BYTE PTR [rax],al
   140028fdf:	add    BYTE PTR [rsi],cl
   140028fe1:	lar    eax,WORD PTR [rax+0x1]
   140028fe5:	add    BYTE PTR [rax],al
   140028fe7:	add    al,ah
   140028fe9:	mov    eax,DWORD PTR [rdx]
   140028feb:	rex add DWORD PTR [rax],eax
   140028fee:	add    BYTE PTR [rax],al
   140028ff0:	add    BYTE PTR [rax+0x14003],dh
   140028ff6:	add    BYTE PTR [rax],al
   140028ff8:	add    al,0xb0
   140028ffa:	add    eax,DWORD PTR [rax+0x1]
   140028ffd:	add    BYTE PTR [rax],al
   140028fff:	add    BYTE PTR [rax],dh
   140029001:	nop
   140029002:	add    al,BYTE PTR [rax+0x1]
   140029005:	add    BYTE PTR [rax],al
   140029007:	add    BYTE PTR [rax],ah
	...
   140029015:	add    BYTE PTR [rax],al
   140029017:	add    bh,bh
   140029019:	(bad)  
   14002901a:	(bad)  
   14002901b:	(bad)  
   14002901c:	(bad)  
   14002901d:	(bad)  
   14002901e:	(bad)  
   14002901f:	call   QWORD PTR [rdi+rcx*1]
   140029022:	add    al,BYTE PTR [rax+0x1]
   140029025:	add    BYTE PTR [rax],al
   140029027:	add    BYTE PTR [rax],al
   140029029:	nop
   14002902a:	add    al,BYTE PTR [rax+0x1]
   14002902d:	add    BYTE PTR [rax],al
   14002902f:	add    cl,ch
   140029031:	push   rcx
   140029032:	(bad)  
   140029033:	pop    rsp
   140029034:	out    dx,eax
   140029035:	pop    rbx
   140029036:	retf   
   140029037:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140029039:	mov    dh,0xdf
   14002903b:	rex.RB (bad) 
   14002903d:	xchg   ebp,eax
   14002903e:	jns    0x14002909a
   140029040:	rex.XB
   140029041:	imul   r13d,DWORD PTR [rbp+0x44],0x614a676c
   140029049:	jbe    0x1400290ac
   14002904b:	rex.RB js 0x1400290c2
   14002904e:	outs   dx,BYTE PTR gs:[rsi]
   140029050:	fs gs jb 0x140029054
   140029054:	or     BYTE PTR [rax],al
   140029056:	add    BYTE PTR [rax],al
   140029058:	push   rbx
   140029059:	add    BYTE PTR [rbp+0x0],ah
   14002905c:	je     0x14002905e
   14002905e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140029062:	jae    0x140029064
   140029064:	je     0x140029066
   140029066:	(bad)  
   140029067:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002906b:	add    BYTE PTR [rax+rax*1+0x79],dl
   14002906f:	add    BYTE PTR [rax+0x0],dh
   140029072:	add    BYTE PTR gs:[rax],al
   140029075:	add    BYTE PTR [rax],al
   140029077:	add    BYTE PTR [rbx+0x0],dl
   14002907a:	add    BYTE PTR gs:[rax+rax*1+0x44],dh
   14002907f:	add    BYTE PTR [rcx+0x0],ah
   140029082:	jns    0x140029084
   140029084:	jae    0x140029086
   140029086:	push   rdx
   140029087:	add    BYTE PTR [rbp+0x0],ah
   14002908a:	ins    DWORD PTR es:[rdi],dx
   14002908b:	add    BYTE PTR [rcx+0x0],ch
   14002908e:	outs   dx,BYTE PTR ds:[rsi]
   14002908f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140029093:	add    BYTE PTR [rdx+0x0],dh
   140029096:	add    BYTE PTR [rax],al
   140029098:	add    eax,DWORD PTR [rax]
   14002909a:	add    BYTE PTR [rax],al
   14002909c:	or     BYTE PTR [rax],al
   14002909e:	add    BYTE PTR [rax],al
   1400290a0:	rex.RXB add BYTE PTR [r13+0x0],r12b
   1400290a4:	je     0x1400290a6
   1400290a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400290aa:	jae    0x1400290ac
   1400290ac:	je     0x1400290ae
   1400290ae:	(bad)  
   1400290af:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400290b3:	add    BYTE PTR [rdi+0x0],cl
   1400290b6:	jo     0x1400290b8
   1400290b8:	je     0x1400290ba
   1400290ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400290c0:	add    BYTE PTR [rax],al
   1400290c2:	add    BYTE PTR [rax],al
   1400290c4:	or     BYTE PTR [rax],al
   1400290c6:	add    BYTE PTR [rax],al
   1400290c8:	rex.RXB add BYTE PTR [r13+0x0],r12b
   1400290cc:	je     0x1400290ce
   1400290ce:	add    BYTE PTR [rdi+0x0],r13b
   1400290d2:	ja     0x1400290d4
   1400290d4:	outs   dx,BYTE PTR ds:[rsi]
   1400290d5:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400290d9:	add    BYTE PTR [rcx+0x0],ah
   1400290dc:	add    BYTE PTR fs:[rax+0x0],dl
   1400290e0:	jb     0x1400290e2
   1400290e2:	outs   dx,DWORD PTR ds:[rsi]
   1400290e3:	add    BYTE PTR [rdi+0x0],ah
   1400290e6:	jb     0x1400290e8
   1400290e8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400290ec:	jae    0x1400290ee
   1400290ee:	add    BYTE PTR [rax],al
   1400290f0:	rex.RXB add BYTE PTR [r13+0x0],r12b
   1400290f4:	je     0x1400290f6
   1400290f6:	add    BYTE PTR [rdi+0x0],r13b
   1400290fa:	ja     0x1400290fc
   1400290fc:	outs   dx,BYTE PTR ds:[rsi]
   1400290fd:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029101:	add    BYTE PTR [rcx+0x0],ah
   140029104:	add    BYTE PTR fs:[rcx+0x0],cl
   140029108:	je     0x14002910a
   14002910a:	add    BYTE PTR gs:[rbp+0x0],ch
   14002910e:	add    BYTE PTR [rax],al
   140029110:	push   rbp
   140029111:	add    BYTE PTR [rax+0x0],dh
   140029114:	add    BYTE PTR fs:[rcx+0x0],ah
   140029118:	je     0x14002911a
   14002911a:	add    BYTE PTR gs:[rax+rax*1+0x69],al
   14002911f:	add    BYTE PTR [rcx+0x0],ah
   140029122:	ins    BYTE PTR es:[rdi],dx
   140029123:	add    BYTE PTR [rdi+0x0],ch
   140029126:	add    BYTE PTR [eax+eax*1+0x69],dl
   14002912b:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002912f:	add    BYTE PTR [rbp+0x0],ah
   140029132:	add    BYTE PTR [rax],al
   140029134:	or     BYTE PTR [rax],al
   140029136:	add    BYTE PTR [rax],al
   140029138:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14002913c:	je     0x14002913e
   14002913e:	rex.X add BYTE PTR [rcx+0x0],bpl
   140029142:	je     0x140029144
   140029144:	jae    0x140029146
   140029146:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14002914a:	(bad)  
   14002914b:	add    BYTE PTR [rdx+0x0],dh
   14002914e:	outs   dx,BYTE PTR ds:[rsi]
   14002914f:	add    BYTE PTR [rbp+0x0],cl
   140029152:	outs   dx,DWORD PTR ds:[rsi]
   140029153:	add    BYTE PTR [rdx+0x0],dh
   140029156:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14002915b:	add    BYTE PTR [rsi+0x0],ch
   14002915e:	imul   eax,DWORD PTR [rax],0x0
   140029161:	add    BYTE PTR [rax],al
   140029163:	add    BYTE PTR [rbx],al
   140029165:	add    BYTE PTR [rax],al
   140029167:	add    BYTE PTR [rdi+0x0],al
   14002916a:	add    BYTE PTR gs:[rax+rax*1+0x42],dh
   14002916f:	add    BYTE PTR [rcx+0x0],ah
   140029172:	movsxd eax,DWORD PTR [rax]
   140029174:	imul   eax,DWORD PTR [rax],0x75
   140029177:	add    BYTE PTR [rax+0x0],dh
   14002917a:	add    BYTE PTR [rdi+0x0],r13b
   14002917e:	ja     0x140029180
   140029180:	outs   dx,BYTE PTR ds:[rsi]
   140029181:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029185:	add    BYTE PTR [rcx+0x0],ah
   140029188:	add    BYTE PTR fs:[rbp+0x0],dl
   14002918c:	jb     0x14002918e
   14002918e:	ins    BYTE PTR es:[rdi],dx
   14002918f:	add    BYTE PTR [rax],al
   140029191:	add    BYTE PTR [rax],al
   140029193:	add    BYTE PTR [rdi],ch
   140029195:	add    BYTE PTR [rax],al
   140029197:	add    BYTE PTR [rdi+0x0],al
   14002919a:	add    BYTE PTR gs:[rax+rax*1+0x4e],dh
   14002919f:	add    BYTE PTR [rdi+0x0],ch
   1400291a2:	add    BYTE PTR [r14+0x0],r13b
   1400291a6:	outs   dx,DWORD PTR ds:[rsi]
   1400291a7:	add    BYTE PTR [rbp+0x0],dh
   1400291aa:	add    BYTE PTR [eax+0x0],ch
   1400291ae:	push   rbx
   1400291af:	add    BYTE PTR [rax+0x0],dh
   1400291b2:	(bad)  
   1400291b3:	add    BYTE PTR [rbx+0x0],ah
   1400291b6:	add    BYTE PTR gs:[rbp+0x0],cl
   1400291ba:	jae    0x1400291bc
   1400291bc:	add    BYTE PTR [eax],al
   1400291bf:	add    BYTE PTR [rdi+0x0],al
   1400291c2:	add    BYTE PTR gs:[rax+rax*1+0x41],dh
   1400291c7:	add    BYTE PTR [rsi+0x0],dh
   1400291ca:	(bad)  
   1400291cb:	add    BYTE PTR [rcx+0x0],ch
   1400291ce:	ins    BYTE PTR es:[rdi],dx
   1400291cf:	add    BYTE PTR [rcx+0x0],ah
   1400291d2:	(bad)  
   1400291d3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400291d7:	add    BYTE PTR [rbx+0x0],dl
   1400291da:	imul   eax,DWORD PTR [rax],0x65007a
   1400291e0:	rex.WRB add BYTE PTR [r11+0x0],r14b
   1400291e4:	add    BYTE PTR [eax],al
   1400291e7:	add    BYTE PTR [rdi+0x0],al
   1400291ea:	add    BYTE PTR gs:[rax+rax*1+0x52],dh
   1400291ef:	add    BYTE PTR [rbp+0x0],ah
   1400291f2:	jno    0x1400291f4
   1400291f4:	jne    0x1400291f6
   1400291f6:	imul   eax,DWORD PTR [rax],0x650072
   1400291fc:	add    BYTE PTR fs:[rbx+0x0],dl
   140029200:	imul   eax,DWORD PTR [rax],0x65007a
   140029206:	rex.WRB add BYTE PTR [r11+0x0],r14b
   14002920a:	add    BYTE PTR [eax],al
   14002920d:	add    BYTE PTR [rax],al
   14002920f:	add    BYTE PTR [rcx+0x0],cl
   140029212:	jae    0x140029214
   140029214:	push   rbx
   140029215:	add    BYTE PTR [rax+0x0],dh
   140029218:	(bad)  
   140029219:	add    BYTE PTR [rbx+0x0],ah
   14002921c:	add    BYTE PTR gs:[rbp+0x0],al
   140029220:	outs   dx,BYTE PTR ds:[rsi]
   140029221:	add    BYTE PTR [rdi+0x0],ch
   140029224:	jne    0x140029226
   140029226:	add    BYTE PTR [eax+0x0],ch
   14002922a:	add    BYTE PTR [rax],al
   14002922c:	pop    rsp
   14002922d:	add    BYTE PTR [rax],al
   14002922f:	add    BYTE PTR [rax+rax*1+0x49],al
   140029233:	add    BYTE PTR [rbp+0x0],cl
   140029236:	add    BYTE PTR [rcx+0x0],r13b
   14002923a:	(bad)  
   14002923b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002923f:	add    BYTE PTR [rdi+0x0],ah
   140029242:	rex.XB add BYTE PTR [r9+0x0],spl
   140029246:	outs   dx,BYTE PTR ds:[rsi]
   140029247:	add    BYTE PTR [rbx+0x0],ah
   14002924a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14002924f:	add    BYTE PTR [rax+rax*1+0x49],al
   140029253:	add    BYTE PTR [rbp+0x0],cl
   140029256:	add    BYTE PTR [rcx+0x0],r13b
   14002925a:	(bad)  
   14002925b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002925f:	add    BYTE PTR [rdi+0x0],ah
   140029262:	rex.WRXB add BYTE PTR [r11+0x0],r9b
   140029266:	add    BYTE PTR [rax],al
   140029268:	add    BYTE PTR [r8+r8*1+0x6f],bpl
   14002926d:	add    BYTE PTR [rbx+0x0],dh
   140029270:	add    BYTE PTR gs:[rax+rax*1+0x69],al
   140029275:	add    BYTE PTR [rbp+0x0],ch
   140029278:	push   rdi
   140029279:	add    BYTE PTR [rcx+0x0],ch
   14002927c:	outs   dx,BYTE PTR ds:[rsi]
   14002927d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029281:	add    BYTE PTR [rdi+0x0],dh
   140029284:	add    BYTE PTR [rax],al
   140029286:	add    BYTE PTR [rax],al
   140029288:	(bad)  
   140029289:	add    BYTE PTR [rax],al
   14002928b:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002928f:	add    BYTE PTR [rdx],ah
   140029291:	add    eax,0x11993
   140029296:	add    BYTE PTR [rax],al
   140029298:	clc    
   140029299:	add    eax,DWORD PTR ss:[rax]
	...
   1400292a4:	add    eax,DWORD PTR [rax]
   1400292a6:	add    BYTE PTR [rax],al
   1400292a8:	add    BYTE PTR [rdi],dh
   1400292aa:	add    eax,DWORD PTR [rax]
   1400292ac:	and    BYTE PTR [rax],al
	...
   1400292b6:	add    BYTE PTR [rax],al
   1400292b8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003ac51
   1400292be:	add    BYTE PTR [rax],al
   1400292c0:	xor    BYTE PTR [rdi],dh
   1400292c2:	add    eax,DWORD PTR [rax]
	...
   1400292cc:	add    eax,DWORD PTR [rax]
   1400292ce:	add    BYTE PTR [rax],al
   1400292d0:	cmp    BYTE PTR [rdi],dh
   1400292d2:	add    eax,DWORD PTR [rax]
   1400292d4:	and    BYTE PTR [rax],al
	...
   1400292de:	add    BYTE PTR [rax],al
   1400292e0:	and    al,BYTE PTR [rip+0x11993]        # 0x14003ac79
   1400292e6:	add    BYTE PTR [rax],al
   1400292e8:	xor    BYTE PTR [rdi],0x3
	...
   1400292f3:	add    BYTE PTR [rbx],al
   1400292f5:	add    BYTE PTR [rax],al
   1400292f7:	add    BYTE PTR [rax+0x38000337],cl
	...
   140029305:	add    BYTE PTR [rax],al
   140029307:	add    BYTE PTR [rdx],ah
   140029309:	add    eax,0x21993
   14002930e:	add    BYTE PTR [rax],al
   140029310:	shl    BYTE PTR [rdi],0x3
	...
   14002931b:	add    BYTE PTR [rip+0xffffffffd0000000],al        # 0x110029321
   140029321:	(bad)  
   140029322:	add    eax,DWORD PTR [rax]
   140029324:	push   rax
	...
   14002932d:	add    BYTE PTR [rax],al
   14002932f:	add    BYTE PTR [rdx],ah
   140029331:	add    eax,0x11993
   140029336:	add    BYTE PTR [rax],al
   140029338:	and    BYTE PTR [rax],bh
   14002933a:	add    eax,DWORD PTR [rax]
	...
   140029344:	add    eax,DWORD PTR [rax]
   140029346:	add    BYTE PTR [rax],al
   140029348:	sub    BYTE PTR [rax],bh
   14002934a:	add    eax,DWORD PTR [rax]
   14002934c:	cmp    BYTE PTR [rax],al
	...
   140029356:	add    BYTE PTR [rax],al
   140029358:	and    al,BYTE PTR [rip+0x11993]        # 0x14003acf1
   14002935e:	add    BYTE PTR [rax],al
   140029360:	pop    rax
   140029361:	cmp    BYTE PTR [rbx],al
	...
   14002936b:	add    BYTE PTR [rbx],al
   14002936d:	add    BYTE PTR [rax],al
   14002936f:	add    BYTE PTR [rax+0x38],ah
   140029372:	add    eax,DWORD PTR [rax]
   140029374:	cmp    BYTE PTR [rax],al
	...
   14002937e:	add    BYTE PTR [rax],al
   140029380:	and    al,BYTE PTR [rip+0x21993]        # 0x14004ad19
   140029386:	add    BYTE PTR [rax],al
   140029388:	nop
   140029389:	cmp    BYTE PTR [rbx],al
	...
   140029393:	add    BYTE PTR [rip+0xffffffffa0000000],al        # 0xe0029399
   140029399:	cmp    BYTE PTR [rbx],al
   14002939b:	add    BYTE PTR [rax+0x0],dl
	...
   1400293a6:	add    BYTE PTR [rax],al
   1400293a8:	and    al,BYTE PTR [rip+0x21993]        # 0x14004ad41
   1400293ae:	add    BYTE PTR [rax],al
   1400293b0:	call   0x1400296ed
   1400293b5:	add    BYTE PTR [rax],al
   1400293b7:	add    BYTE PTR [rax],al
   1400293b9:	add    BYTE PTR [rax],al
   1400293bb:	add    BYTE PTR [rip+0xfffffffff8000000],al        # 0x1380293c1
   1400293c1:	cmp    BYTE PTR [rbx],al
   1400293c3:	add    BYTE PTR [rax+0x0],dl
	...
   1400293ce:	add    BYTE PTR [rax],al
   1400293d0:	and    al,BYTE PTR [rip+0x21993]        # 0x14004ad69
   1400293d6:	add    BYTE PTR [rax],al
   1400293d8:	rex cmp DWORD PTR [rbx],eax
	...
   1400293e3:	add    BYTE PTR [rip+0x50000000],al        # 0x1900293e9
   1400293e9:	cmp    DWORD PTR [rbx],eax
   1400293eb:	add    BYTE PTR [rax+0x0],dl
	...
   1400293f6:	add    BYTE PTR [rax],al
   1400293f8:	mov    eax,0x140031d
   1400293fd:	add    BYTE PTR [rax],al
   1400293ff:	add    BYTE PTR [rax+0x67],ah
   140029402:	add    BYTE PTR [rax+0x1],al
   140029405:	add    BYTE PTR [rax],al
   140029407:	add    al,dl
   140029409:	add    BYTE PTR [eax+0x1],al
   14002940d:	add    BYTE PTR [rax],al
   14002940f:	add    BYTE PTR [rax+0x1400054],ah
   140029415:	add    BYTE PTR [rax],al
   140029417:	add    BYTE PTR [rax],dh
   140029419:	jbe    0x14002941c
   14002941b:	rex add DWORD PTR [rax],eax
   14002941e:	add    BYTE PTR [rax],al
   140029420:	movabs al,ds:0xae00000001400054
   140029429:	or     eax,DWORD PTR [rdx]
   14002942b:	rex add DWORD PTR [rax],eax
   14002942e:	add    BYTE PTR [rax],al
   140029430:	loopne 0x140029491
   140029432:	add    BYTE PTR [rax+0x1],al
   140029435:	add    BYTE PTR [rax],al
   140029437:	add    BYTE PTR [rdx+0x140020b],bh
   14002943d:	add    BYTE PTR [rax],al
   14002943f:	add    al,al
   140029441:	or     eax,DWORD PTR [rdx]
   140029443:	rex add DWORD PTR [rax],eax
   140029446:	add    BYTE PTR [rax],al
   140029448:	(bad)  
   140029449:	or     eax,DWORD PTR [rdx]
   14002944b:	rex add DWORD PTR [rax],eax
   14002944e:	add    BYTE PTR [rax],al
   140029450:	int3   
   140029451:	or     eax,DWORD PTR [rdx]
   140029453:	rex add DWORD PTR [rax],eax
   140029456:	add    BYTE PTR [rax],al
   140029458:	ror    BYTE PTR [rbx],cl
   14002945a:	add    al,BYTE PTR [rax+0x1]
   14002945d:	add    BYTE PTR [rax],al
   14002945f:	add    BYTE PTR [rdx],dh
   140029461:	lar    eax,WORD PTR [rax+0x1]
   140029465:	add    BYTE PTR [rax],al
   140029467:	add    al,bl
   140029469:	or     eax,DWORD PTR [rdx]
   14002946b:	rex add DWORD PTR [rax],eax
   14002946e:	add    BYTE PTR [rax],al
   140029470:	nop
   140029471:	add    BYTE PTR [eax+0x1],al
   140029475:	add    BYTE PTR [rax],al
   140029477:	add    ah,ah
   140029479:	or     eax,DWORD PTR [rdx]
   14002947b:	rex add DWORD PTR [rax],eax
   14002947e:	add    BYTE PTR [rax],al
   140029480:	shl    BYTE PTR [rdi+0x0],0x40
   140029484:	add    DWORD PTR [rax],eax
   140029486:	add    BYTE PTR [rax],al
   140029488:	lock or eax,DWORD PTR [rdx]
   14002948b:	rex add DWORD PTR [rax],eax
   14002948e:	add    BYTE PTR [rax],al
   140029490:	test   BYTE PTR [rbx],0x2
   140029493:	rex add DWORD PTR [rax],eax
   140029496:	add    BYTE PTR [rax],al
   140029498:	cld    
   140029499:	or     eax,DWORD PTR [rdx]
   14002949b:	rex add DWORD PTR [rax],eax
   14002949e:	add    BYTE PTR [rax],al
   1400294a0:	add    cl,BYTE PTR [rdx+rax*1]
   1400294a3:	rex add DWORD PTR [rax],eax
   1400294a6:	add    BYTE PTR [rax],al
   1400294a8:	or     BYTE PTR [rdx+rax*1],cl
   1400294ab:	rex add DWORD PTR [rax],eax
   1400294ae:	add    BYTE PTR [rax],al
   1400294b0:	rcr    BYTE PTR [rdi+0x0],0x40
   1400294b4:	add    DWORD PTR [rax],eax
   1400294b6:	add    BYTE PTR [rax],al
   1400294b8:	loopne 0x140029520
   1400294ba:	add    BYTE PTR [rax+0x1],al
   1400294bd:	add    BYTE PTR [rax],al
   1400294bf:	add    BYTE PTR [rbx+0x0],dl
   1400294c2:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   1400294c7:	add    BYTE PTR [rbx+0x0],ah
   1400294ca:	je     0x1400294cc
   1400294cc:	imul   eax,DWORD PTR [rax],0x6e006f
   1400294d2:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400294d6:	ins    DWORD PTR es:[rdi],dx
   1400294d7:	add    BYTE PTR [rbp+0x0],ah
   1400294da:	jae    0x1400294dc
   1400294dc:	jo     0x1400294de
   1400294de:	(bad)  
   1400294df:	add    BYTE PTR [rbx+0x0],ah
   1400294e2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400294e6:	add    BYTE PTR [rax],al
   1400294e8:	push   rbx
   1400294e9:	add    BYTE PTR [rbp+0x0],ah
   1400294ec:	ins    BYTE PTR es:[rdi],dx
   1400294ed:	add    BYTE PTR [rbp+0x0],ah
   1400294f0:	movsxd eax,DWORD PTR [rax]
   1400294f2:	je     0x1400294f4
   1400294f4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400294fa:	rex.WR add BYTE PTR [rcx+0x0],r12b
   1400294fe:	outs   dx,BYTE PTR ds:[rsi]
   1400294ff:	add    BYTE PTR [rdi+0x0],ah
   140029502:	jne    0x140029504
   140029504:	(bad)  
   140029505:	add    BYTE PTR [rdi+0x0],ah
   140029508:	add    BYTE PTR gs:[rax],al
   14002950b:	add    BYTE PTR [rax],al
   14002950d:	add    BYTE PTR [rax],al
   14002950f:	add    BYTE PTR [rax+0x0],bh
   140029512:	ins    DWORD PTR es:[rdi],dx
   140029513:	add    BYTE PTR [rax+rax*1+0x6e],ch
   140029517:	add    BYTE PTR [rbx+0x0],dh
   14002951a:	cmp    eax,0x75002700
   14002951f:	add    BYTE PTR [rdx+0x0],dh
   140029522:	outs   dx,BYTE PTR ds:[rsi]
   140029523:	add    BYTE PTR [rdx],bh
   140029525:	add    BYTE PTR [rdi+0x0],dh
   140029528:	ja     0x14002952a
   14002952a:	ja     0x14002952c
   14002952c:	add    BYTE PTR cs:[rbx+0x0],ah
   140029530:	outs   dx,DWORD PTR ds:[rsi]
   140029531:	add    BYTE PTR [rdx+0x0],dh
   140029534:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
   140029539:	add    BYTE PTR [rbx+0x0],ah
   14002953c:	outs   dx,DWORD PTR ds:[rsi]
   14002953d:	add    BYTE PTR [rbp+0x0],ch
   140029540:	sub    eax,0x70006900
   140029545:	add    BYTE PTR [rbp+0x0],ch
   140029548:	sub    eax,0x79006400
   14002954d:	add    BYTE PTR [rsi+0x0],ch
   140029550:	(bad)  
   140029551:	add    BYTE PTR [rbp+0x0],ch
   140029554:	imul   eax,DWORD PTR [rax],0x6d0063
   14002955a:	add    BYTE PTR gs:[rbx+0x0],dh
   14002955e:	jae    0x140029560
   140029560:	(bad)  
   140029561:	add    BYTE PTR [rdi+0x0],ah
   140029564:	add    BYTE PTR gs:[rbx+0x0],dh
   140029568:	(bad)  
   140029569:	add    BYTE PTR [rax],ah
   14002956b:	add    BYTE PTR [rax+0x0],bh
   14002956e:	ins    DWORD PTR es:[rdi],dx
   14002956f:	add    BYTE PTR [rax+rax*1+0x6e],ch
   140029573:	add    BYTE PTR [rbx+0x0],dh
   140029576:	cmp    al,BYTE PTR [rax]
   140029578:	add    BYTE PTR fs:[rbp+0x0],ch
   14002957c:	cmp    eax,0x75002700
   140029581:	add    BYTE PTR [rdx+0x0],dh
   140029584:	outs   dx,BYTE PTR ds:[rsi]
   140029585:	add    BYTE PTR [rdx],bh
   140029587:	add    BYTE PTR [rdi+0x0],dh
   14002958a:	ja     0x14002958c
   14002958c:	ja     0x14002958e
   14002958e:	add    BYTE PTR cs:[rbx+0x0],ah
   140029592:	outs   dx,DWORD PTR ds:[rsi]
   140029593:	add    BYTE PTR [rdx+0x0],dh
   140029596:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
   14002959b:	add    BYTE PTR [rbx+0x0],ah
   14002959e:	outs   dx,DWORD PTR ds:[rsi]
   14002959f:	add    BYTE PTR [rbp+0x0],ch
   1400295a2:	sub    eax,0x70006900
   1400295a7:	add    BYTE PTR [rbp+0x0],ch
   1400295aa:	sub    eax,0x79006400
   1400295af:	add    BYTE PTR [rsi+0x0],ch
   1400295b2:	(bad)  
   1400295b3:	add    BYTE PTR [rbp+0x0],ch
   1400295b6:	imul   eax,DWORD PTR [rax],0x6d0063
   1400295bc:	add    BYTE PTR gs:[rbx+0x0],dh
   1400295c0:	jae    0x1400295c2
   1400295c2:	(bad)  
   1400295c3:	add    BYTE PTR [rdi+0x0],ah
   1400295c6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400295ca:	(bad)  
   1400295cb:	add    BYTE PTR [rax],ah
   1400295cd:	add    BYTE PTR [rax+0x0],bh
   1400295d0:	ins    DWORD PTR es:[rdi],dx
   1400295d1:	add    BYTE PTR [rax+rax*1+0x6e],ch
   1400295d5:	add    BYTE PTR [rbx+0x0],dh
   1400295d8:	cmp    al,BYTE PTR [rax]
   1400295da:	ja     0x1400295dc
   1400295dc:	ins    DWORD PTR es:[rdi],dx
   1400295dd:	add    BYTE PTR [rip+0x75002700],bh        # 0x1b502bce3
   1400295e3:	add    BYTE PTR [rdx+0x0],dh
   1400295e6:	outs   dx,BYTE PTR ds:[rsi]
   1400295e7:	add    BYTE PTR [rdx],bh
   1400295e9:	add    BYTE PTR [rdi+0x0],dh
   1400295ec:	ja     0x1400295ee
   1400295ee:	ja     0x1400295f0
   1400295f0:	add    BYTE PTR cs:[rbx+0x0],ah
   1400295f4:	outs   dx,DWORD PTR ds:[rsi]
   1400295f5:	add    BYTE PTR [rdx+0x0],dh
   1400295f8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
   1400295fd:	add    BYTE PTR [rbx+0x0],ah
   140029600:	outs   dx,DWORD PTR ds:[rsi]
   140029601:	add    BYTE PTR [rbp+0x0],ch
   140029604:	sub    eax,0x70006900
   140029609:	add    BYTE PTR [rbp+0x0],ch
   14002960c:	sub    eax,0x6f007700
   140029611:	add    BYTE PTR [rdx+0x0],dh
   140029614:	imul   eax,DWORD PTR [rax],0x66
   140029617:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002961b:	add    BYTE PTR [rdi+0x0],dh
   14002961e:	ins    DWORD PTR es:[rdi],dx
   14002961f:	add    BYTE PTR [rbp+0x0],ah
   140029622:	jae    0x140029624
   140029624:	jae    0x140029626
   140029626:	(bad)  
   140029627:	add    BYTE PTR [rdi+0x0],ah
   14002962a:	add    BYTE PTR gs:[rbx+0x0],dh
   14002962e:	(bad)  
	...
   140029637:	add    BYTE PTR [rax+0x0],bl
   14002963a:	push   rax
   14002963b:	add    BYTE PTR [rcx+0x0],ah
   14002963e:	je     0x140029640
   140029640:	push   0x0
   140029645:	add    BYTE PTR [rax],al
   140029647:	add    BYTE PTR [rax+0x0],al
   14002964a:	jbe    0x14002964c
   14002964c:	(bad)  
   14002964d:	add    BYTE PTR [rax+rax*1+0x75],ch
   140029651:	add    BYTE PTR [rbp+0x0],ah
   140029654:	add    BYTE PTR [rax],al
   140029656:	add    BYTE PTR [rax],al
   140029658:	(bad)  
   140029659:	add    BYTE PTR [rdi],ch
   14002965b:	add    BYTE PTR [rbp+0x0],ch
   14002965e:	add    BYTE PTR gs:[rbx+0x0],dh
   140029662:	jae    0x140029664
   140029664:	(bad)  
   140029665:	add    BYTE PTR [rdi+0x0],ah
   140029668:	add    BYTE PTR gs:[rbx+0x0],dh
   14002966c:	(bad)  
   14002966d:	add    BYTE PTR [rax+0x0],al
   140029670:	jbe    0x140029672
   140029672:	add    BYTE PTR gs:[rdx+0x0],dh
   140029676:	jae    0x140029678
   140029678:	imul   eax,DWORD PTR [rax],0x6e006f
   14002967e:	add    BYTE PTR [rax],al
   140029680:	js     0x140029682
   140029682:	ins    DWORD PTR es:[rdi],dx
   140029683:	add    BYTE PTR [rax+rax*1+0x6e],ch
   140029687:	add    BYTE PTR [rbx+0x0],dh
   14002968a:	cmp    al,BYTE PTR [rax]
   14002968c:	jae    0x14002968e
   14002968e:	outs   dx,DWORD PTR ds:[rsi]
   14002968f:	add    BYTE PTR [rcx+0x0],ah
   140029692:	jo     0x140029694
   140029694:	add    BYTE PTR gs:[rsi+0x0],ch
   140029698:	jbe    0x14002969a
   14002969a:	cmp    eax,0x68002200
   14002969f:	add    BYTE PTR [rax+rax*1+0x74],dh
   1400296a3:	add    BYTE PTR [rax+0x0],dh
   1400296a6:	cmp    al,BYTE PTR [rax]
   1400296a8:	(bad)  
   1400296a9:	add    BYTE PTR [rdi],ch
   1400296ab:	add    BYTE PTR [rbx+0x0],dh
   1400296ae:	movsxd eax,DWORD PTR [rax]
   1400296b0:	push   0x6d006500
   1400296b5:	add    BYTE PTR [rcx+0x0],ah
   1400296b8:	jae    0x1400296ba
   1400296ba:	add    BYTE PTR cs:[rax+0x0],bh
   1400296be:	ins    DWORD PTR es:[rdi],dx
   1400296bf:	add    BYTE PTR [rax+rax*1+0x73],ch
   1400296c3:	add    BYTE PTR [rdi+0x0],ch
   1400296c6:	(bad)  
   1400296c7:	add    BYTE PTR [rax+0x0],dh
   1400296ca:	add    BYTE PTR cs:[rdi+0x0],ch
   1400296ce:	jb     0x1400296d0
   1400296d0:	add    BYTE PTR [edi],ch
   1400296d3:	add    BYTE PTR [rbx+0x0],dh
   1400296d6:	outs   dx,DWORD PTR ds:[rsi]
   1400296d7:	add    BYTE PTR [rcx+0x0],ah
   1400296da:	jo     0x1400296dc
   1400296dc:	(bad)  
   1400296dd:	add    BYTE PTR [rbp+0x0],ah
   1400296e0:	outs   dx,BYTE PTR ds:[rsi]
   1400296e1:	add    BYTE PTR [rsi+0x0],dh
   1400296e4:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
   1400296e9:	add    BYTE PTR [rax+0x0],dh
   1400296ec:	add    BYTE PTR gs:[rdi],ch
   1400296ef:	add    BYTE PTR [rdx],ah
   1400296f1:	add    BYTE PTR [rax],ah
   1400296f3:	add    BYTE PTR [rax+0x0],bh
   1400296f6:	ins    DWORD PTR es:[rdi],dx
   1400296f7:	add    BYTE PTR [rax+rax*1+0x6e],ch
   1400296fb:	add    BYTE PTR [rbx+0x0],dh
   1400296fe:	cmp    al,BYTE PTR [rax]
   140029700:	outs   dx,BYTE PTR ds:[rsi]
   140029701:	add    BYTE PTR [rbx+0x0],dh
   140029704:	xor    DWORD PTR [rax],eax
   140029706:	cmp    eax,0x68002200
   14002970b:	add    BYTE PTR [rax+rax*1+0x74],dh
   14002970f:	add    BYTE PTR [rax+0x0],dh
   140029712:	cmp    al,BYTE PTR [rax]
   140029714:	(bad)  
   140029715:	add    BYTE PTR [rdi],ch
   140029717:	add    BYTE PTR [rcx+0x0],ch
   14002971a:	jo     0x14002971c
   14002971c:	ins    DWORD PTR es:[rdi],dx
   14002971d:	add    BYTE PTR [rdi+0x0],dh
   140029720:	add    BYTE PTR gs:[rdx+0x0],ah
   140029724:	jae    0x140029726
   140029726:	add    BYTE PTR gs:[rdx+0x0],dh
   14002972a:	jbe    0x14002972c
   14002972c:	imul   eax,DWORD PTR [rax],0x650063
   140029732:	jae    0x140029734
   140029734:	add    BYTE PTR cs:[rbx+0x0],ah
   140029738:	outs   dx,DWORD PTR ds:[rsi]
   140029739:	add    BYTE PTR [rdx+0x0],dh
   14002973c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
   140029741:	add    BYTE PTR [rbx+0x0],ah
   140029744:	outs   dx,DWORD PTR ds:[rsi]
   140029745:	add    BYTE PTR [rbp+0x0],ch
   140029748:	(bad)  
   140029749:	add    BYTE PTR [rsi+0x0],dh
   14002974c:	xor    DWORD PTR [rax],eax
   14002974e:	and    al,BYTE PTR [rax]
	...
   140029758:	(bad)  
   140029759:	add    BYTE PTR [rdi],ch
   14002975b:	add    BYTE PTR [rbp+0x0],ch
   14002975e:	add    BYTE PTR gs:[rbx+0x0],dh
   140029762:	jae    0x140029764
   140029764:	(bad)  
   140029765:	add    BYTE PTR [rdi+0x0],ah
   140029768:	add    BYTE PTR gs:[rbx+0x0],dh
   14002976c:	(bad)  
   14002976d:	add    BYTE PTR [rbp+0x0],ch
   140029770:	add    BYTE PTR gs:[rbx+0x0],dh
   140029774:	jae    0x140029776
   140029776:	(bad)  
   140029777:	add    BYTE PTR [rdi+0x0],ah
   14002977a:	add    BYTE PTR gs:[rdi],ch
   14002977d:	add    BYTE PTR [rax+0x0],al
   140029780:	jbe    0x140029782
   140029782:	imul   eax,DWORD PTR [rax],0x690073
   140029788:	(bad)  
   140029789:	add    BYTE PTR [rcx+0x0],ch
   14002978c:	ins    BYTE PTR es:[rdi],dx
   14002978d:	add    BYTE PTR [rcx+0x0],ch
   140029790:	je     0x140029792
   140029792:	jns    0x140029794
   140029794:	add    BYTE PTR [rax],al
   140029796:	add    BYTE PTR [rax],al
   140029798:	add    BYTE PTR [rax+rax*1+0x6f],bpl
   14002979d:	add    BYTE PTR [rbx+0x0],ah
   1400297a0:	(bad)  
   1400297a1:	add    BYTE PTR [rax+rax*1+0x70],ch
   1400297a5:	add    BYTE PTR [rcx+0x0],ah
   1400297a8:	je     0x1400297aa
   1400297aa:	push   0x0
   1400297af:	add    BYTE PTR [rax+0x0],bh
   1400297b2:	ins    DWORD PTR es:[rdi],dx
   1400297b3:	add    BYTE PTR [rax+rax*1+0x6e],ch
   1400297b7:	add    BYTE PTR [rbx+0x0],dh
   1400297ba:	cmp    al,BYTE PTR [rax]
   1400297bc:	jae    0x1400297be
   1400297be:	outs   dx,DWORD PTR ds:[rsi]
   1400297bf:	add    BYTE PTR [rcx+0x0],ah
   1400297c2:	jo     0x1400297c4
   1400297c4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400297c8:	jbe    0x1400297ca
   1400297ca:	cmp    eax,0x68002200
   1400297cf:	add    BYTE PTR [rax+rax*1+0x74],dh
   1400297d3:	add    BYTE PTR [rax+0x0],dh
   1400297d6:	cmp    al,BYTE PTR [rax]
   1400297d8:	(bad)  
   1400297d9:	add    BYTE PTR [rdi],ch
   1400297db:	add    BYTE PTR [rbx+0x0],dh
   1400297de:	movsxd eax,DWORD PTR [rax]
   1400297e0:	push   0x6d006500
   1400297e5:	add    BYTE PTR [rcx+0x0],ah
   1400297e8:	jae    0x1400297ea
   1400297ea:	add    BYTE PTR cs:[rax+0x0],bh
   1400297ee:	ins    DWORD PTR es:[rdi],dx
   1400297ef:	add    BYTE PTR [rax+rax*1+0x73],ch
   1400297f3:	add    BYTE PTR [rdi+0x0],ch
   1400297f6:	(bad)  
   1400297f7:	add    BYTE PTR [rax+0x0],dh
   1400297fa:	add    BYTE PTR cs:[rdi+0x0],ch
   1400297fe:	jb     0x140029800
   140029800:	add    BYTE PTR [edi],ch
   140029803:	add    BYTE PTR [rbx+0x0],dh
   140029806:	outs   dx,DWORD PTR ds:[rsi]
   140029807:	add    BYTE PTR [rcx+0x0],ah
   14002980a:	jo     0x14002980c
   14002980c:	(bad)  
   14002980d:	add    BYTE PTR [rbp+0x0],ah
   140029810:	outs   dx,BYTE PTR ds:[rsi]
   140029811:	add    BYTE PTR [rsi+0x0],dh
   140029814:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
   140029819:	add    BYTE PTR [rax+0x0],dh
   14002981c:	add    BYTE PTR gs:[rdi],ch
   14002981f:	add    BYTE PTR [rdx],ah
   140029821:	add    BYTE PTR [rax],ah
   140029823:	add    BYTE PTR [rax+0x0],bh
   140029826:	ins    DWORD PTR es:[rdi],dx
   140029827:	add    BYTE PTR [rax+rax*1+0x6e],ch
   14002982b:	add    BYTE PTR [rbx+0x0],dh
   14002982e:	cmp    al,BYTE PTR [rax]
   140029830:	outs   dx,BYTE PTR ds:[rsi]
   140029831:	add    BYTE PTR [rbx+0x0],dh
   140029834:	xor    DWORD PTR [rax],eax
   140029836:	cmp    eax,0x75002200
   14002983b:	add    BYTE PTR [rdx+0x0],dh
   14002983e:	outs   dx,BYTE PTR ds:[rsi]
   14002983f:	add    BYTE PTR [rdx],bh
   140029841:	add    BYTE PTR [rax+0x0],ch
   140029844:	je     0x140029846
   140029846:	je     0x140029848
   140029848:	jo     0x14002984a
   14002984a:	cmp    al,BYTE PTR [rax]
   14002984c:	(bad)  
   14002984d:	add    BYTE PTR [rdi],ch
   14002984f:	add    BYTE PTR [rdi+0x0],dh
   140029852:	ja     0x140029854
   140029854:	ja     0x140029856
   140029856:	add    BYTE PTR cs:[rsi+0x0],ch
   14002985a:	add    BYTE PTR gs:[rax+rax*1+0x78],dh
   14002985f:	add    BYTE PTR [rax+0x0],dh
   140029862:	outs   dx,DWORD PTR ds:[rsi]
   140029863:	add    BYTE PTR [rbx+0x0],dh
   140029866:	jne    0x140029868
   140029868:	jb     0x14002986a
   14002986a:	add    BYTE PTR gs:[rsi],ch
   14002986d:	add    BYTE PTR [rbx+0x0],ah
   140029870:	outs   dx,DWORD PTR ds:[rsi]
   140029871:	add    BYTE PTR [rbp+0x0],ch
   140029874:	(bad)  
   140029875:	add    BYTE PTR [rbp+0x0],ah
   140029878:	js     0x14002987a
   14002987a:	outs   dx,DWORD PTR ds:[rsi]
   14002987b:	add    BYTE PTR [rdi+0x0],ah
   14002987e:	add    BYTE PTR gs:[rsi+0x0],ch
   140029882:	and    al,BYTE PTR [rax]
   140029884:	and    BYTE PTR [rax],al
   140029886:	js     0x140029888
   140029888:	ins    DWORD PTR es:[rdi],dx
   140029889:	add    BYTE PTR [rax+rax*1+0x6e],ch
   14002988d:	add    BYTE PTR [rbx+0x0],dh
   140029890:	cmp    al,BYTE PTR [rax]
   140029892:	js     0x140029894
   140029894:	jae    0x140029896
   140029896:	imul   eax,DWORD PTR [rax],0x22003d
   14002989c:	push   0x74007400
   1400298a1:	add    BYTE PTR [rax+0x0],dh
   1400298a4:	cmp    al,BYTE PTR [rax]
   1400298a6:	(bad)  
   1400298a7:	add    BYTE PTR [rdi],ch
   1400298a9:	add    BYTE PTR [rdi+0x0],dh
   1400298ac:	ja     0x1400298ae
   1400298ae:	ja     0x1400298b0
   1400298b0:	add    BYTE PTR cs:[rdi+0x0],dh
   1400298b4:	xor    eax,DWORD PTR [rax]
   1400298b6:	add    BYTE PTR cs:[rdi+0x0],ch
   1400298ba:	jb     0x1400298bc
   1400298bc:	add    BYTE PTR [edi],ch
   1400298bf:	add    BYTE PTR [rdx],dh
   1400298c1:	add    BYTE PTR [rax],dh
   1400298c3:	add    BYTE PTR [rax],dh
   1400298c5:	add    BYTE PTR [rcx],dh
   1400298c7:	add    BYTE PTR [rdi],ch
   1400298c9:	add    BYTE PTR [rax+0x0],bl
   1400298cc:	rex.WRB add BYTE PTR [r8+rax*1+0x53],r9b
   1400298d1:	add    BYTE PTR [rbx+0x0],ah
   1400298d4:	push   0x6d006500
   1400298d9:	add    BYTE PTR [rcx+0x0],ah
   1400298dc:	sub    eax,0x6e006900
   1400298e1:	add    BYTE PTR [rbx+0x0],dh
   1400298e4:	je     0x1400298e6
   1400298e6:	(bad)  
   1400298e7:	add    BYTE PTR [rsi+0x0],ch
   1400298ea:	movsxd eax,DWORD PTR [rax]
   1400298ec:	add    BYTE PTR gs:[rdx],ah
   1400298ef:	add    BYTE PTR [rax],ah
   1400298f1:	add    BYTE PTR [rax+0x0],bh
   1400298f4:	ins    DWORD PTR es:[rdi],dx
   1400298f5:	add    BYTE PTR [rax+rax*1+0x6e],ch
   1400298f9:	add    BYTE PTR [rbx+0x0],dh
   1400298fc:	cmp    al,BYTE PTR [rax]
   1400298fe:	jae    0x140029900
   140029900:	outs   dx,DWORD PTR ds:[rsi]
   140029901:	add    BYTE PTR [rcx+0x0],ah
   140029904:	jo     0x140029906
   140029906:	add    BYTE PTR gs:[rsi+0x0],ch
   14002990a:	movsxd eax,DWORD PTR [rax]
   14002990c:	cmp    eax,0x68002200
   140029911:	add    BYTE PTR [rax+rax*1+0x74],dh
   140029915:	add    BYTE PTR [rax+0x0],dh
   140029918:	cmp    al,BYTE PTR [rax]
   14002991a:	(bad)  
   14002991b:	add    BYTE PTR [rdi],ch
   14002991d:	add    BYTE PTR [rbx+0x0],dh
   140029920:	movsxd eax,DWORD PTR [rax]
   140029922:	push   0x6d006500
   140029927:	add    BYTE PTR [rcx+0x0],ah
   14002992a:	jae    0x14002992c
   14002992c:	add    BYTE PTR cs:[rax+0x0],bh
   140029930:	ins    DWORD PTR es:[rdi],dx
   140029931:	add    BYTE PTR [rax+rax*1+0x73],ch
   140029935:	add    BYTE PTR [rdi+0x0],ch
   140029938:	(bad)  
   140029939:	add    BYTE PTR [rax+0x0],dh
   14002993c:	add    BYTE PTR cs:[rdi+0x0],ch
   140029940:	jb     0x140029942
   140029942:	add    BYTE PTR [edi],ch
   140029945:	add    BYTE PTR [rbx+0x0],dh
   140029948:	outs   dx,DWORD PTR ds:[rsi]
   140029949:	add    BYTE PTR [rcx+0x0],ah
   14002994c:	jo     0x14002994e
   14002994e:	(bad)  
   14002994f:	add    BYTE PTR [rbp+0x0],ah
   140029952:	outs   dx,BYTE PTR ds:[rsi]
   140029953:	add    BYTE PTR [rbx+0x0],ah
   140029956:	outs   dx,DWORD PTR ds:[rsi]
   140029957:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002995b:	add    BYTE PTR [rsi+0x0],ch
   14002995e:	add    BYTE PTR [edi],ch
   140029961:	add    BYTE PTR [rdx],ah
   140029963:	add    BYTE PTR [rax],al
   140029965:	add    BYTE PTR [rax],al
   140029967:	add    BYTE PTR [rax+0x0],al
   14002996a:	imul   eax,DWORD PTR [rax],0x65
   14002996d:	add    BYTE PTR [rcx+0x0],bh
	...
   140029978:	(bad)  
   140029979:	add    BYTE PTR [rdi],ch
   14002997b:	add    BYTE PTR [rbp+0x0],ch
   14002997e:	add    BYTE PTR gs:[rbx+0x0],dh
   140029982:	jae    0x140029984
   140029984:	(bad)  
   140029985:	add    BYTE PTR [rdi+0x0],ah
   140029988:	add    BYTE PTR gs:[rbx+0x0],dh
   14002998c:	(bad)  
   14002998d:	add    BYTE PTR [rbp+0x0],ch
   140029990:	add    BYTE PTR gs:[rbx+0x0],dh
   140029994:	jae    0x140029996
   140029996:	(bad)  
   140029997:	add    BYTE PTR [rdi+0x0],ah
   14002999a:	add    BYTE PTR gs:[rdi],ch
   14002999d:	add    BYTE PTR [rax+0x0],al
   1400299a0:	jbe    0x1400299a2
   1400299a2:	(bad)  
   1400299a3:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400299a7:	add    BYTE PTR [rax+rax*1+0x69],ah
   1400299ab:	add    BYTE PTR [rax+rax*1+0x79],dh
	...
   1400299b7:	add    BYTE PTR [rax+0x0],al
   1400299ba:	outs   dx,BYTE PTR ds:[rsi]
   1400299bb:	add    BYTE PTR [rcx+0x0],ah
   1400299be:	ins    DWORD PTR es:[rdi],dx
   1400299bf:	add    BYTE PTR [rbp+0x0],ah
   1400299c2:	add    BYTE PTR [rax],al
   1400299c4:	add    BYTE PTR [rax],al
   1400299c6:	add    BYTE PTR [rax],al
   1400299c8:	(bad)  
   1400299c9:	add    BYTE PTR [rbx+0x0],dh
   1400299cc:	jns    0x1400299ce
   1400299ce:	jae    0x1400299d0
   1400299d0:	je     0x1400299d2
   1400299d2:	add    BYTE PTR gs:[rbp+0x0],ch
   1400299d6:	imul   eax,DWORD PTR [rax],0x66006e
   1400299dc:	outs   dx,DWORD PTR ds:[rsi]
   1400299dd:	add    BYTE PTR [rdi],ch
   1400299df:	add    BYTE PTR [rax+0x0],al
   1400299e2:	outs   dx,DWORD PTR ds:[rsi]
   1400299e3:	add    BYTE PTR [rsi+0x0],ch
   1400299e6:	ins    BYTE PTR es:[rdi],dx
   1400299e7:	add    BYTE PTR [rcx+0x0],ch
   1400299ea:	outs   dx,BYTE PTR ds:[rsi]
   1400299eb:	add    BYTE PTR [rbp+0x0],ah
   1400299ee:	add    BYTE PTR [rax],al
   1400299f0:	(bad)  
   1400299f1:	add    BYTE PTR [rdi],ch
   1400299f3:	add    BYTE PTR [rdi+0x0],dh
   1400299f6:	ins    DWORD PTR es:[rdi],dx
   1400299f7:	add    BYTE PTR [rdx],bh
   1400299f9:	add    BYTE PTR [rdi+0x0],dh
   1400299fc:	outs   dx,DWORD PTR ds:[rsi]
   1400299fd:	add    BYTE PTR [rdx+0x0],dh
   140029a00:	imul   eax,DWORD PTR [rax],0x66
   140029a03:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029a07:	add    BYTE PTR [rdi+0x0],dh
   140029a0a:	ins    DWORD PTR es:[rdi],dx
   140029a0b:	add    BYTE PTR [rbp+0x0],ah
   140029a0e:	jae    0x140029a10
   140029a10:	jae    0x140029a12
   140029a12:	(bad)  
   140029a13:	add    BYTE PTR [rdi+0x0],ah
   140029a16:	add    BYTE PTR gs:[rbx+0x0],dh
   140029a1a:	(bad)  
   140029a1b:	add    BYTE PTR [rdi+0x0],dh
   140029a1e:	ins    DWORD PTR es:[rdi],dx
   140029a1f:	add    BYTE PTR [rdx],bh
   140029a21:	add    BYTE PTR [rdi+0x0],dh
   140029a24:	outs   dx,DWORD PTR ds:[rsi]
   140029a25:	add    BYTE PTR [rdx+0x0],dh
   140029a28:	imul   eax,DWORD PTR [rax],0x66
   140029a2b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029a2f:	add    BYTE PTR [rdi+0x0],dh
   140029a32:	ins    DWORD PTR es:[rdi],dx
   140029a33:	add    BYTE PTR [rbp+0x0],ah
   140029a36:	jae    0x140029a38
   140029a38:	jae    0x140029a3a
   140029a3a:	(bad)  
   140029a3b:	add    BYTE PTR [rdi+0x0],ah
   140029a3e:	add    BYTE PTR gs:[rdi],ch
   140029a41:	add    BYTE PTR [rax+0x0],al
   140029a44:	jbe    0x140029a46
   140029a46:	(bad)  
   140029a47:	add    BYTE PTR [rax+rax*1+0x69],ch
   140029a4b:	add    BYTE PTR [rax+rax*1+0x69],ah
   140029a4f:	add    BYTE PTR [rax+rax*1+0x79],dh
   140029a53:	add    BYTE PTR [rax],al
   140029a55:	add    BYTE PTR [rax],al
   140029a57:	add    BYTE PTR [rax+0x0],al
   140029a5a:	outs   dx,DWORD PTR ds:[rsi]
   140029a5b:	add    BYTE PTR [rsi+0x0],ch
   140029a5e:	ins    BYTE PTR es:[rdi],dx
   140029a5f:	add    BYTE PTR [rcx+0x0],ch
   140029a62:	outs   dx,BYTE PTR ds:[rsi]
   140029a63:	add    BYTE PTR [rbp+0x0],ah
   140029a66:	add    BYTE PTR [rax],al
   140029a68:	add    BYTE PTR [rax+rax*1+0x69],bpl
   140029a6d:	add    BYTE PTR [rbx+0x0],ah
   140029a70:	add    BYTE PTR gs:[rsi+0x0],ch
   140029a74:	jae    0x140029a76
   140029a76:	add    BYTE PTR gs:[rcx+0x0],ch
   140029a7a:	add    BYTE PTR fs:[rax],al
   140029a7d:	add    BYTE PTR [rax],al
   140029a7f:	add    BYTE PTR [rdi],ch
   140029a81:	add    BYTE PTR [rdi],ch
   140029a83:	add    BYTE PTR [rdi+0x0],dh
   140029a86:	ins    DWORD PTR es:[rdi],dx
   140029a87:	add    BYTE PTR [rdx],bh
   140029a89:	add    BYTE PTR [rdi+0x0],dh
   140029a8c:	outs   dx,DWORD PTR ds:[rsi]
   140029a8d:	add    BYTE PTR [rdx+0x0],dh
   140029a90:	imul   eax,DWORD PTR [rax],0x66
   140029a93:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029a97:	add    BYTE PTR [rdi+0x0],dh
   140029a9a:	ins    DWORD PTR es:[rdi],dx
   140029a9b:	add    BYTE PTR [rbp+0x0],ah
   140029a9e:	jae    0x140029aa0
   140029aa0:	jae    0x140029aa2
   140029aa2:	(bad)  
   140029aa3:	add    BYTE PTR [rdi+0x0],ah
   140029aa6:	add    BYTE PTR gs:[rbx+0x0],dh
   140029aaa:	(bad)  
   140029aab:	add    BYTE PTR [rdi+0x0],dh
   140029aae:	ins    DWORD PTR es:[rdi],dx
   140029aaf:	add    BYTE PTR [rdx],bh
   140029ab1:	add    BYTE PTR [rdi+0x0],dh
   140029ab4:	outs   dx,DWORD PTR ds:[rsi]
   140029ab5:	add    BYTE PTR [rdx+0x0],dh
   140029ab8:	imul   eax,DWORD PTR [rax],0x66
   140029abb:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029abf:	add    BYTE PTR [rdi+0x0],dh
   140029ac2:	ins    DWORD PTR es:[rdi],dx
   140029ac3:	add    BYTE PTR [rbp+0x0],ah
   140029ac6:	jae    0x140029ac8
   140029ac8:	jae    0x140029aca
   140029aca:	(bad)  
   140029acb:	add    BYTE PTR [rdi+0x0],ah
   140029ace:	add    BYTE PTR gs:[rdi],ch
   140029ad1:	add    BYTE PTR [rax+0x0],al
   140029ad4:	jbe    0x140029ad6
   140029ad6:	imul   eax,DWORD PTR [rax],0x690073
   140029adc:	(bad)  
   140029add:	add    BYTE PTR [rcx+0x0],ch
   140029ae0:	ins    BYTE PTR es:[rdi],dx
   140029ae1:	add    BYTE PTR [rcx+0x0],ch
   140029ae4:	je     0x140029ae6
   140029ae6:	jns    0x140029ae8
	...
   140029af0:	(bad)  
   140029af1:	add    BYTE PTR [rdi],ch
   140029af3:	add    BYTE PTR [rdi+0x0],dh
   140029af6:	ins    DWORD PTR es:[rdi],dx
   140029af7:	add    BYTE PTR [rdx],bh
   140029af9:	add    BYTE PTR [rdi+0x0],dh
   140029afc:	outs   dx,DWORD PTR ds:[rsi]
   140029afd:	add    BYTE PTR [rdx+0x0],dh
   140029b00:	imul   eax,DWORD PTR [rax],0x66
   140029b03:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029b07:	add    BYTE PTR [rdi+0x0],dh
   140029b0a:	ins    DWORD PTR es:[rdi],dx
   140029b0b:	add    BYTE PTR [rbp+0x0],ah
   140029b0e:	jae    0x140029b10
   140029b10:	jae    0x140029b12
   140029b12:	(bad)  
   140029b13:	add    BYTE PTR [rdi+0x0],ah
   140029b16:	add    BYTE PTR gs:[rbx+0x0],dh
   140029b1a:	(bad)  
   140029b1b:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029b1f:	add    BYTE PTR [rdi+0x0],dh
   140029b22:	outs   dx,BYTE PTR ds:[rsi]
   140029b23:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029b27:	add    BYTE PTR [rcx+0x0],ah
   140029b2a:	add    BYTE PTR fs:[rbx+0x0],dh
   140029b2e:	(bad)  
   140029b2f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029b33:	add    BYTE PTR [rdi+0x0],dh
   140029b36:	outs   dx,BYTE PTR ds:[rsi]
   140029b37:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029b3b:	add    BYTE PTR [rcx+0x0],ah
   140029b3e:	add    BYTE PTR fs:[rax],al
   140029b41:	add    BYTE PTR [rax],al
   140029b43:	add    BYTE PTR [rax],al
   140029b45:	add    BYTE PTR [rax],al
   140029b47:	add    BYTE PTR [rdi],ch
   140029b49:	add    BYTE PTR [rdi],ch
   140029b4b:	add    BYTE PTR [rbp+0x0],ch
   140029b4e:	add    BYTE PTR gs:[rbx+0x0],dh
   140029b52:	jae    0x140029b54
   140029b54:	(bad)  
   140029b55:	add    BYTE PTR [rdi+0x0],ah
   140029b58:	add    BYTE PTR gs:[rbx+0x0],dh
   140029b5c:	(bad)  
   140029b5d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029b61:	add    BYTE PTR [rdi+0x0],dh
   140029b64:	outs   dx,BYTE PTR ds:[rsi]
   140029b65:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029b69:	add    BYTE PTR [rcx+0x0],ah
   140029b6c:	add    BYTE PTR fs:[rbx+0x0],dh
   140029b70:	(bad)  
   140029b71:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029b75:	add    BYTE PTR [rdi+0x0],dh
   140029b78:	outs   dx,BYTE PTR ds:[rsi]
   140029b79:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029b7d:	add    BYTE PTR [rcx+0x0],ah
   140029b80:	add    BYTE PTR fs:[rax],al
   140029b83:	add    BYTE PTR [rax],al
   140029b85:	add    BYTE PTR [rax],al
   140029b87:	add    BYTE PTR [rax+0x0],al
   140029b8a:	jae    0x140029b8c
   140029b8c:	outs   dx,DWORD PTR ds:[rsi]
   140029b8d:	add    BYTE PTR [rbp+0x0],dh
   140029b90:	jb     0x140029b92
   140029b92:	movsxd eax,DWORD PTR [rax]
   140029b94:	add    BYTE PTR gs:[rcx+0x0],ch
   140029b98:	add    BYTE PTR fs:[rax],al
   140029b9b:	add    BYTE PTR [rax],al
   140029b9d:	add    BYTE PTR [rax],al
   140029b9f:	add    BYTE PTR [rdi],ch
   140029ba1:	add    BYTE PTR [rdi],ch
   140029ba3:	add    BYTE PTR [rdi+0x0],dh
   140029ba6:	ins    DWORD PTR es:[rdi],dx
   140029ba7:	add    BYTE PTR [rdx],bh
   140029ba9:	add    BYTE PTR [rdi+0x0],dh
   140029bac:	outs   dx,DWORD PTR ds:[rsi]
   140029bad:	add    BYTE PTR [rdx+0x0],dh
   140029bb0:	imul   eax,DWORD PTR [rax],0x66
   140029bb3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029bb7:	add    BYTE PTR [rdi+0x0],dh
   140029bba:	ins    DWORD PTR es:[rdi],dx
   140029bbb:	add    BYTE PTR [rbp+0x0],ah
   140029bbe:	jae    0x140029bc0
   140029bc0:	jae    0x140029bc2
   140029bc2:	(bad)  
   140029bc3:	add    BYTE PTR [rdi+0x0],ah
   140029bc6:	add    BYTE PTR gs:[rbx+0x0],dh
   140029bca:	(bad)  
   140029bcb:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029bcf:	add    BYTE PTR [rdi+0x0],dh
   140029bd2:	outs   dx,BYTE PTR ds:[rsi]
   140029bd3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029bd7:	add    BYTE PTR [rcx+0x0],ah
   140029bda:	add    BYTE PTR fs:[rbx+0x0],dh
   140029bde:	add    BYTE PTR [rax],al
   140029be0:	(bad)  
   140029be1:	add    BYTE PTR [rdi],ch
   140029be3:	add    BYTE PTR [rbp+0x0],ch
   140029be6:	add    BYTE PTR gs:[rbx+0x0],dh
   140029bea:	jae    0x140029bec
   140029bec:	(bad)  
   140029bed:	add    BYTE PTR [rdi+0x0],ah
   140029bf0:	add    BYTE PTR gs:[rbx+0x0],dh
   140029bf4:	(bad)  
   140029bf5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029bf9:	add    BYTE PTR [rdi+0x0],dh
   140029bfc:	outs   dx,BYTE PTR ds:[rsi]
   140029bfd:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140029c01:	add    BYTE PTR [rcx+0x0],ah
   140029c04:	add    BYTE PTR fs:[rbx+0x0],dh
	...
   140029c10:	data16 add BYTE PTR [rcx+0x0],ah
   140029c14:	ins    BYTE PTR es:[rdi],dx
   140029c15:	add    BYTE PTR [rbx+0x0],dh
   140029c18:	add    BYTE PTR gs:[rax],al
   140029c1b:	add    BYTE PTR [rax],al
   140029c1d:	add    BYTE PTR [rax],al
   140029c1f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140029c23:	add    BYTE PTR [rbp+0x0],dh
   140029c26:	add    BYTE PTR gs:[rax],al
   140029c29:	add    BYTE PTR [rax],al
   140029c2b:	add    BYTE PTR [rax],al
   140029c2d:	add    BYTE PTR [rax],al
   140029c2f:	add    BYTE PTR [rax+0x0],al
   140029c32:	jne    0x140029c34
   140029c34:	jb     0x140029c36
   140029c36:	ins    BYTE PTR es:[rdi],dx
	...
   140029c3f:	add    BYTE PTR [rax+0x0],al
   140029c42:	jne    0x140029c44
   140029c44:	jb     0x140029c46
   140029c46:	ins    BYTE PTR es:[rdi],dx
	...
   140029c4f:	add    BYTE PTR [rax+0x0],al
   140029c52:	ins    BYTE PTR es:[rdi],dx
   140029c53:	add    BYTE PTR [rdi+0x0],ch
   140029c56:	movsxd eax,DWORD PTR [rax]
   140029c58:	(bad)  
   140029c59:	add    BYTE PTR [rax+rax*1+0x70],ch
   140029c5d:	add    BYTE PTR [rcx+0x0],ah
   140029c60:	je     0x140029c62
   140029c62:	push   0x0
   140029c67:	add    BYTE PTR [rax+0x0],al
   140029c6a:	imul   eax,DWORD PTR [rax],0x64
   140029c70:	add    BYTE PTR [rbp+0x0],bpl
   140029c74:	outs   dx,DWORD PTR ds:[rsi]
   140029c75:	add    BYTE PTR [rax+rax*1+0x69],ah
   140029c79:	add    BYTE PTR [rsi+0x0],ah
   140029c7c:	imul   eax,DWORD PTR [rax],0x640065
   140029c82:	sub    eax,0x69007400
   140029c87:	add    BYTE PTR [rbp+0x0],ch
   140029c8a:	add    BYTE PTR gs:[rbx+0x0],dh
   140029c8e:	je     0x140029c90
   140029c90:	(bad)  
   140029c91:	add    BYTE PTR [rbp+0x0],ch
   140029c94:	jo     0x140029c96
   140029c96:	add    BYTE PTR [rax],al
   140029c98:	add    BYTE PTR [rsi+0x0],sil
   140029c9c:	(bad)  
   140029c9d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140029ca1:	add    BYTE PTR [rax+rax*1+0x69],ah
   140029ca5:	add    BYTE PTR [rax+rax*1+0x79],dh
   140029ca9:	add    BYTE PTR [rax],al
   140029cab:	add    BYTE PTR [rax],al
   140029cad:	add    BYTE PTR [rax],al
   140029caf:	add    BYTE PTR [rax+0x0],al
   140029cb2:	jbe    0x140029cb4
   140029cb4:	imul   eax,DWORD PTR [rax],0x690073
   140029cba:	(bad)  
   140029cbb:	add    BYTE PTR [rcx+0x0],ch
   140029cbe:	ins    BYTE PTR es:[rdi],dx
   140029cbf:	add    BYTE PTR [rcx+0x0],ch
   140029cc2:	je     0x140029cc4
   140029cc4:	jns    0x140029cc6
   140029cc6:	add    BYTE PTR [rax],al
   140029cc8:	add    BYTE PTR [rsi+0x0],sil
   140029ccc:	(bad)  
   140029ccd:	add    BYTE PTR [rax+rax*1+0x69],ch
   140029cd1:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140029cd5:	add    BYTE PTR [rsi+0x0],ah
   140029cd8:	jb     0x140029cda
   140029cda:	outs   dx,DWORD PTR ds:[rsi]
   140029cdb:	add    BYTE PTR [rbp+0x0],ch
   140029cde:	add    BYTE PTR [rax],al
   140029ce0:	add    BYTE PTR [rsi+0x0],sil
   140029ce4:	(bad)  
   140029ce5:	add    BYTE PTR [rax+rax*1+0x69],ch
   140029ce9:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140029ced:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140029cf1:	add    BYTE PTR [rax],al
   140029cf3:	add    BYTE PTR [rax],al
   140029cf5:	add    BYTE PTR [rax],al
   140029cf7:	add    BYTE PTR [rax+0x0],al
   140029cfa:	jo     0x140029cfc
   140029cfc:	jb     0x140029cfe
   140029cfe:	imul   eax,DWORD PTR [rax],0x72006f
   140029d04:	imul   eax,DWORD PTR [rax],0x790074
   140029d0a:	add    BYTE PTR [rax],al
   140029d0c:	add    BYTE PTR [rax],al
   140029d0e:	add    BYTE PTR [rax],al
   140029d10:	add    BYTE PTR [rcx+0x0],bpl
   140029d14:	add    BYTE PTR fs:[rax],al
   140029d17:	add    BYTE PTR [rax+0x0],al
   140029d1a:	je     0x140029d1c
   140029d1c:	jns    0x140029d1e
   140029d1e:	jo     0x140029d20
   140029d20:	add    BYTE PTR gs:[rax],al
   140029d23:	add    BYTE PTR [rax],al
   140029d25:	add    BYTE PTR [rax],al
   140029d27:	add    BYTE PTR [rax+0x0],al
   140029d2a:	ins    BYTE PTR es:[rdi],dx
   140029d2b:	add    BYTE PTR [rdi+0x0],ch
   140029d2e:	movsxd eax,DWORD PTR [rax]
   140029d30:	(bad)  
   140029d31:	add    BYTE PTR [rax+rax*1+0x70],ch
   140029d35:	add    BYTE PTR [rcx+0x0],ah
   140029d38:	je     0x140029d3a
   140029d3a:	push   0x0
   140029d3f:	add    BYTE PTR [rbx+0x44],al
   140029d42:	imul   ebp,DWORD PTR [rbp+0x48],0x446c6d74
   140029d49:	ins    BYTE PTR es:[rdi],dx
   140029d4a:	add    BYTE PTR [eax],al
   140029d4d:	add    BYTE PTR [rax],al
   140029d4f:	add    BYTE PTR [rbp+0x0],dl
   140029d52:	jae    0x140029d54
   140029d54:	imul   eax,DWORD PTR [rax],0x67006e
   140029d5a:	and    BYTE PTR [rax],al
   140029d5c:	movsxd eax,DWORD PTR [rax]
   140029d5e:	jne    0x140029d60
   140029d60:	jae    0x140029d62
   140029d62:	je     0x140029d64
   140029d64:	outs   dx,DWORD PTR ds:[rsi]
   140029d65:	add    BYTE PTR [rbp+0x0],ch
   140029d68:	and    BYTE PTR [rax],al
   140029d6a:	push   rbp
   140029d6b:	add    BYTE PTR [rcx+0x0],cl
   140029d6e:	and    BYTE PTR [rax],al
   140029d70:	(bad)  
   140029d71:	add    BYTE PTR [rax+rax*1+0x3a],dh
   140029d75:	add    BYTE PTR [rax],al
   140029d77:	add    BYTE PTR [rbx+0x0],dl
   140029d7a:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   140029d7f:	add    BYTE PTR [rax+rax*1+0x69],al
   140029d83:	add    BYTE PTR [rcx+0x0],ah
   140029d86:	ins    BYTE PTR es:[rdi],dx
   140029d87:	add    BYTE PTR [rdi+0x0],ch
   140029d8a:	add    BYTE PTR [eax],ah
   140029d8d:	add    BYTE PTR [rax+rax*1+0x69],dl
   140029d91:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140029d95:	add    BYTE PTR [rbp+0x0],ah
   140029d98:	cmp    al,BYTE PTR [rax]
   140029d9a:	add    BYTE PTR [rax],al
   140029d9c:	add    BYTE PTR [rax],al
   140029d9e:	add    BYTE PTR [rax],al
   140029da0:	movsxd eax,DWORD PTR [rax]
   140029da2:	(bad)  
   140029da3:	add    BYTE PTR [rsi+0x0],ch
   140029da6:	outs   dx,BYTE PTR ds:[rsi]
   140029da7:	add    BYTE PTR [rdi+0x0],ch
   140029daa:	je     0x140029dac
   140029dac:	and    BYTE PTR [rax],al
   140029dae:	data16 add BYTE PTR [rcx+0x0],ch
   140029db2:	outs   dx,BYTE PTR ds:[rsi]
   140029db3:	add    BYTE PTR [rax+rax*1+0x20],ah
   140029db7:	add    BYTE PTR [rax+0x0],ch
   140029dba:	je     0x140029dbc
   140029dbc:	ins    DWORD PTR es:[rdi],dx
   140029dbd:	add    BYTE PTR [rax+rax*1+0x20],ch
   140029dc1:	add    BYTE PTR [rdx+0x0],dh
   140029dc4:	add    BYTE PTR gs:[rbx+0x0],dh
   140029dc8:	outs   dx,DWORD PTR ds:[rsi]
   140029dc9:	add    BYTE PTR [rbp+0x0],dh
   140029dcc:	movsxd eax,DWORD PTR [rax]
   140029dce:	add    BYTE PTR gs:[rax],ah
   140029dd1:	add    BYTE PTR [rsi+0x0],ah
   140029dd4:	outs   dx,DWORD PTR ds:[rsi]
   140029dd5:	add    BYTE PTR [rdx+0x0],dh
   140029dd8:	and    BYTE PTR [rax],al
   140029dda:	je     0x140029ddc
   140029ddc:	push   0x73006900
   140029de1:	add    BYTE PTR [rax],ah
   140029de3:	add    BYTE PTR [rax+rax*1+0x69],ah
   140029de7:	add    BYTE PTR [rcx+0x0],ah
   140029dea:	ins    BYTE PTR es:[rdi],dx
   140029deb:	add    BYTE PTR [rdi+0x0],ch
   140029dee:	add    BYTE PTR [esi],ch
   140029df1:	add    BYTE PTR [rax],ah
   140029df3:	add    BYTE PTR [rax],al
   140029df5:	add    BYTE PTR [rax],al
   140029df7:	add    BYTE PTR [rax],ah
   140029df9:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140029dfd:	add    BYTE PTR [rbp+0x0],ah
   140029e00:	jae    0x140029e02
   140029e02:	outs   dx,BYTE PTR ds:[rsi]
   140029e03:	add    BYTE PTR [rdi],ah
   140029e05:	add    BYTE PTR [rax+rax*1+0x20],dh
   140029e09:	add    BYTE PTR [rbp+0x0],ah
   140029e0c:	js     0x140029e0e
   140029e0e:	imul   eax,DWORD PTR [rax],0x740073
   140029e14:	add    BYTE PTR [rax],al
   140029e16:	add    BYTE PTR [rax],al
   140029e18:	jo     0x140029e1a
   140029e1a:	movsxd eax,DWORD PTR [rax]
   140029e1c:	jne    0x140029e1e
   140029e1e:	pop    rdi
   140029e1f:	add    BYTE PTR [rax+rax*1+0x61],ah
   140029e23:	add    BYTE PTR [rax+rax*1+0x61],dh
	...
   140029e2f:	add    BYTE PTR [rbx+0x0],ah
   140029e32:	(bad)  
   140029e33:	add    BYTE PTR [rsi+0x0],ch
   140029e36:	outs   dx,BYTE PTR ds:[rsi]
   140029e37:	add    BYTE PTR [rdi+0x0],ch
   140029e3a:	je     0x140029e3c
   140029e3c:	and    BYTE PTR [rax],al
   140029e3e:	data16 add BYTE PTR [rcx+0x0],ch
   140029e42:	outs   dx,BYTE PTR ds:[rsi]
   140029e43:	add    BYTE PTR [rax+rax*1+0x20],ah
   140029e47:	add    BYTE PTR [rax+0x0],ch
   140029e4a:	je     0x140029e4c
   140029e4c:	ins    DWORD PTR es:[rdi],dx
   140029e4d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140029e51:	add    BYTE PTR [rdx+0x0],dh
   140029e54:	add    BYTE PTR gs:[rbx+0x0],dh
   140029e58:	outs   dx,DWORD PTR ds:[rsi]
   140029e59:	add    BYTE PTR [rbp+0x0],dh
   140029e5c:	movsxd eax,DWORD PTR [rax]
   140029e5e:	add    BYTE PTR gs:[rax],ah
   140029e61:	add    BYTE PTR [rsi+0x0],ah
   140029e64:	outs   dx,DWORD PTR ds:[rsi]
   140029e65:	add    BYTE PTR [rdx+0x0],dh
   140029e68:	and    BYTE PTR [rax],al
   140029e6a:	je     0x140029e6c
   140029e6c:	push   0x73006900
   140029e71:	add    BYTE PTR [rax],ah
   140029e73:	add    BYTE PTR [rax+rax*1+0x69],ah
   140029e77:	add    BYTE PTR [rcx+0x0],ah
   140029e7a:	ins    BYTE PTR es:[rdi],dx
   140029e7b:	add    BYTE PTR [rdi+0x0],ch
   140029e7e:	add    BYTE PTR [eax],al
   140029e81:	add    BYTE PTR [rax],al
   140029e83:	add    BYTE PTR [rax],al
   140029e85:	add    BYTE PTR [rax],al
   140029e87:	add    BYTE PTR [rax+0x0],dl
   140029e8a:	(bad)  
   140029e8b:	add    BYTE PTR [rdi+0x0],ah
   140029e8e:	add    BYTE PTR gs:[rax+rax*1+0x69],al
   140029e93:	add    BYTE PTR [rbp+0x0],ch
   140029e96:	add    BYTE PTR gs:[rsi+0x0],ch
   140029e9a:	jae    0x140029e9c
   140029e9c:	imul   eax,DWORD PTR [rax],0x6e006f
   140029ea2:	add    BYTE PTR [rax],al
   140029ea4:	add    BYTE PTR [rax],al
   140029ea6:	add    BYTE PTR [rax],al
   140029ea8:	and    eax,0x2c006400
   140029ead:	add    BYTE PTR [rip+0x6400],ah        # 0x1400302b3
   140029eb3:	add    BYTE PTR [rax],al
   140029eb5:	add    BYTE PTR [rax],al
   140029eb7:	add    BYTE PTR [rdx],ah
   140029eb9:	add    eax,0x41993
   140029ebe:	add    BYTE PTR [rax],al
   140029ec0:	cmp    BYTE PTR [rdx],bh
   140029ec2:	add    eax,DWORD PTR [rax]
	...
   140029ecc:	(bad)  
   140029ecd:	add    BYTE PTR [rax],al
   140029ecf:	add    BYTE PTR [rax+0x3a],bl
   140029ed2:	add    eax,DWORD PTR [rax]
   140029ed4:	sub    BYTE PTR [rax],al
	...
   140029ede:	add    BYTE PTR [rax],al
   140029ee0:	and    al,BYTE PTR [rip+0x41993]        # 0x14006b879
   140029ee6:	add    BYTE PTR [rax],al
   140029ee8:	mov    eax,0x33a
   140029eed:	add    BYTE PTR [rax],al
   140029eef:	add    BYTE PTR [rax],al
   140029ef1:	add    BYTE PTR [rax],al
   140029ef3:	add    BYTE PTR [rsi],al
   140029ef5:	add    BYTE PTR [rax],al
   140029ef7:	add    al,bl
   140029ef9:	cmp    al,BYTE PTR [rbx]
   140029efb:	add    BYTE PTR [rax],ah
	...
   140029f05:	add    BYTE PTR [rax],al
   140029f07:	add    BYTE PTR [rdx],ah
   140029f09:	add    eax,0x31993
   140029f0e:	add    BYTE PTR [rax],al
   140029f10:	cmp    r8d,DWORD PTR [rbx]
   140029f13:	add    BYTE PTR [rcx],al
   140029f15:	add    BYTE PTR [rax],al
   140029f17:	add    BYTE PTR [rbx+rdi*1+0x3],bl
   140029f1b:	add    BYTE PTR [rax],cl
   140029f1d:	add    BYTE PTR [rax],al
   140029f1f:	add    BYTE PTR [rbx+rdi*1+0xc00003],al
	...
   140029f2e:	add    BYTE PTR [rax],al
   140029f30:	and    al,BYTE PTR [rip+0x11993]        # 0x14003b8c9
   140029f36:	add    BYTE PTR [rax],al
   140029f38:	sbb    BYTE PTR [rbx+rax*1],bh
	...
   140029f43:	add    BYTE PTR [rbx],al
   140029f45:	add    BYTE PTR [rax],al
   140029f47:	add    BYTE PTR [rax],ah
   140029f49:	cmp    al,0x3
	...
   140029f57:	add    BYTE PTR [rdx],ah
   140029f59:	add    eax,0x21993
   140029f5e:	add    BYTE PTR [rax],al
   140029f60:	push   rax
   140029f61:	cmp    al,0x3
	...
   140029f6b:	add    BYTE PTR [rdi],al
   140029f6d:	add    BYTE PTR [rax],al
   140029f6f:	add    BYTE PTR [rax+0x3c],ah
   140029f72:	add    eax,DWORD PTR [rax]
   140029f74:	add    BYTE PTR [rax],al
	...
   140029f7f:	add    BYTE PTR [rdx],ah
   140029f81:	add    eax,0x11993
   140029f86:	add    BYTE PTR [rax],al
   140029f88:	mov    esp,0x33c
   140029f8d:	add    BYTE PTR [rax],al
   140029f8f:	add    BYTE PTR [rax],al
   140029f91:	add    BYTE PTR [rax],al
   140029f93:	add    BYTE PTR [rbx],al
   140029f95:	add    BYTE PTR [rax],al
   140029f97:	add    ah,al
   140029f99:	cmp    al,0x3
   140029f9b:	add    BYTE PTR [rax+0x0],ah
	...
   140029fa6:	add    BYTE PTR [rax],al
   140029fa8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003b941
   140029fae:	add    BYTE PTR [rax],al
   140029fb0:	hlt    
   140029fb1:	cmp    al,0x3
	...
   140029fbb:	add    BYTE PTR [rbx],al
   140029fbd:	add    BYTE PTR [rax],al
   140029fbf:	add    ah,bh
   140029fc1:	cmp    al,0x3
   140029fc3:	add    BYTE PTR [rax],dh
	...
   140029fcd:	add    BYTE PTR [rax],al
   140029fcf:	add    BYTE PTR [rdx],ah
   140029fd1:	add    eax,0x21993
   140029fd6:	add    BYTE PTR [rax],al
   140029fd8:	sub    al,0x3d
   140029fda:	add    eax,DWORD PTR [rax]
	...
   140029fe4:	add    eax,0x3c000000
   140029fe9:	cmp    eax,0x580003
	...
   140029ff6:	add    BYTE PTR [rax],al
   140029ff8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003b991
   140029ffe:	add    BYTE PTR [rax],al
   14002a000:	test   BYTE PTR [rip+0x3],bh        # 0x14002a009
   14002a006:	add    BYTE PTR [rax],al
   14002a008:	add    BYTE PTR [rax],al
   14002a00a:	add    BYTE PTR [rax],al
   14002a00c:	add    eax,DWORD PTR [rax]
   14002a00e:	add    BYTE PTR [rax],al
   14002a010:	mov    WORD PTR [rip+0x280003],?        # 0x1402aa019
	...
   14002a01e:	add    BYTE PTR [rax],al
   14002a020:	rex popf 
   14002a022:	add    al,BYTE PTR [rax+0x1]
   14002a025:	add    BYTE PTR [rax],al
   14002a027:	add    BYTE PTR [rax],dl
   14002a029:	add    eax,DWORD PTR [rax]
   14002a02b:	add    bh,bh
   14002a02d:	inc    DWORD PTR [rax]
	...
   14002a037:	add    BYTE PTR [rax],al
   14002a039:	outs   dx,DWORD PTR ds:[rsi]
   14002a03a:	add    BYTE PTR [rax+0x1],al
	...
   14002a055:	add    BYTE PTR [rax],al
   14002a057:	add    bh,bh
   14002a059:	(bad)  
   14002a05a:	(bad)  
   14002a05b:	inc    DWORD PTR [rax]
	...
   14002a065:	add    BYTE PTR [rax],al
   14002a067:	add    BYTE PTR [rax],bl
	...
   14002a07d:	add    BYTE PTR [rax],al
   14002a07f:	add    bh,bh
   14002a081:	(bad)  
   14002a082:	(bad)  
   14002a083:	(bad)  
   14002a084:	(bad)  
   14002a085:	(bad)  
   14002a086:	(bad)  
   14002a087:	inc    DWORD PTR [rax]
   14002a089:	add    BYTE PTR [rax],al
   14002a08b:	add    BYTE PTR [rax],al
   14002a08d:	add    BYTE PTR [rax],al
   14002a08f:	add    bh,bh
   14002a091:	(bad)  
   14002a092:	(bad)  
   14002a093:	inc    DWORD PTR [rax]
   14002a095:	add    BYTE PTR [rax],al
   14002a097:	add    BYTE PTR [rax],bh
   14002a099:	lar    eax,WORD PTR [rax+0x1]
   14002a09d:	add    BYTE PTR [rax],al
   14002a09f:	add    BYTE PTR [rax-0x60],dl
   14002a0a2:	add    al,BYTE PTR [rax+0x1]
   14002a0a5:	add    BYTE PTR [rax],al
   14002a0a7:	add    BYTE PTR [rax],bh
   14002a0a9:	mov    cl,0x3
   14002a0ab:	rex add DWORD PTR [rax],eax
   14002a0ae:	add    BYTE PTR [rax],al
   14002a0b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14003ba49
   14002a0b6:	add    BYTE PTR [rax],al
   14002a0b8:	mov    BYTE PTR [rdx+0x3],dl
	...
   14002a0c3:	add    BYTE PTR [rbx],al
   14002a0c5:	add    BYTE PTR [rax],al
   14002a0c7:	add    al,dl
   14002a0c9:	cmp    DWORD PTR [rbx],eax
   14002a0cb:	add    BYTE PTR [rax],bh
	...
   14002a0dd:	add    BYTE PTR [rax],al
   14002a0df:	add    BYTE PTR [rdx],ah
   14002a0e1:	add    eax,0x11993
   14002a0e6:	add    BYTE PTR [rax],al
   14002a0e8:	add    BYTE PTR [rdx],bh
   14002a0ea:	add    eax,DWORD PTR [rax]
	...
   14002a0f4:	add    DWORD PTR [rax],eax
   14002a0f6:	add    BYTE PTR [rax],al
   14002a0f8:	or     BYTE PTR [rdx],bh
   14002a0fa:	add    eax,DWORD PTR [rax]
   14002a0fc:	and    BYTE PTR [rax],al
	...
   14002a10e:	add    BYTE PTR [rax],al
   14002a110:	and    al,BYTE PTR [rip+0x11993]        # 0x14003baa9
   14002a116:	add    BYTE PTR [rax],al
   14002a118:	add    BYTE PTR [rdx],bh
   14002a11a:	add    eax,DWORD PTR [rax]
	...
   14002a124:	add    DWORD PTR [rax],eax
   14002a126:	add    BYTE PTR [rax],al
   14002a128:	and    BYTE PTR [rdx],bh
   14002a12a:	add    eax,DWORD PTR [rax]
   14002a12c:	and    BYTE PTR [rax],al
	...
   14002a136:	add    BYTE PTR [rax],al
   14002a138:	test   al,0x1e
   14002a13a:	add    eax,DWORD PTR [rax+0x1]
   14002a13d:	add    BYTE PTR [rax],al
   14002a13f:	add    BYTE PTR [rax],dh
   14002a141:	outs   dx,DWORD PTR ds:[rsi]
   14002a142:	add    BYTE PTR [rax+0x1],al
   14002a145:	add    BYTE PTR [rax],al
   14002a147:	add    BYTE PTR [rax+0x1400079],dl
   14002a14d:	add    BYTE PTR [rax],al
   14002a14f:	add    BYTE PTR [rax+0x1400054],ah
   14002a155:	add    BYTE PTR [rax],al
   14002a157:	add    BYTE PTR [rax],dh
   14002a159:	jbe    0x14002a15c
   14002a15b:	rex add DWORD PTR [rax],eax
   14002a15e:	add    BYTE PTR [rax],al
   14002a160:	movabs al,ds:0xaa00000001400054
   14002a169:	lar    eax,WORD PTR [rax+0x1]
   14002a16d:	add    BYTE PTR [rax],al
   14002a16f:	add    al,bl
   14002a171:	(bad)  
   14002a172:	add    al,BYTE PTR [rax+0x1]
   14002a175:	add    BYTE PTR [rax],al
   14002a177:	add    BYTE PTR [rdx+0x140020b],bh
   14002a17d:	add    BYTE PTR [rax],al
   14002a17f:	add    al,al
   14002a181:	or     eax,DWORD PTR [rdx]
   14002a183:	rex add DWORD PTR [rax],eax
   14002a186:	add    BYTE PTR [rax],al
   14002a188:	(bad)  
   14002a189:	or     eax,DWORD PTR [rdx]
   14002a18b:	rex add DWORD PTR [rax],eax
   14002a18e:	add    BYTE PTR [rax],al
   14002a190:	int3   
   14002a191:	or     eax,DWORD PTR [rdx]
   14002a193:	rex add DWORD PTR [rax],eax
   14002a196:	add    BYTE PTR [rax],al
   14002a198:	ror    BYTE PTR [rbx],cl
   14002a19a:	add    al,BYTE PTR [rax+0x1]
   14002a19d:	add    BYTE PTR [rax],al
   14002a19f:	add    BYTE PTR [rax+0x6f],ah
   14002a1a2:	add    BYTE PTR [rax+0x1],al
   14002a1a5:	add    BYTE PTR [rax],al
   14002a1a7:	add    al,bl
   14002a1a9:	or     eax,DWORD PTR [rdx]
   14002a1ab:	rex add DWORD PTR [rax],eax
   14002a1ae:	add    BYTE PTR [rax],al
   14002a1b0:	fimul  WORD PTR [rbx]
   14002a1b2:	add    al,BYTE PTR [rax+0x1]
   14002a1b5:	add    BYTE PTR [rax],al
   14002a1b7:	add    ah,ah
   14002a1b9:	or     eax,DWORD PTR [rdx]
   14002a1bb:	rex add DWORD PTR [rax],eax
   14002a1be:	add    BYTE PTR [rax],al
   14002a1c0:	(bad)  
   14002a1c1:	or     eax,0x14002
   14002a1c6:	add    BYTE PTR [rax],al
   14002a1c8:	add    BYTE PTR [rax+0x0],dh
   14002a1cb:	rex add DWORD PTR [rax],eax
   14002a1ce:	add    BYTE PTR [rax],al
   14002a1d0:	test   BYTE PTR [rbx],0x2
   14002a1d3:	rex add DWORD PTR [rax],eax
   14002a1d6:	add    BYTE PTR [rax],al
   14002a1d8:	cld    
   14002a1d9:	or     eax,DWORD PTR [rdx]
   14002a1db:	rex add DWORD PTR [rax],eax
   14002a1de:	add    BYTE PTR [rax],al
   14002a1e0:	add    cl,BYTE PTR [rdx+rax*1]
   14002a1e3:	rex add DWORD PTR [rax],eax
   14002a1e6:	add    BYTE PTR [rax],al
   14002a1e8:	or     BYTE PTR [rdx+rax*1],cl
   14002a1eb:	rex add DWORD PTR [rax],eax
   14002a1ee:	add    BYTE PTR [rax],al
   14002a1f0:	pop    rsi
   14002a1f1:	or     eax,0x14002
   14002a1f6:	add    BYTE PTR [rax],al
   14002a1f8:	fs or  eax,0x14002
   14002a1fe:	add    BYTE PTR [rax],al
   14002a200:	jo     0x14002a20f
   14002a202:	add    al,BYTE PTR [rax+0x1]
   14002a205:	add    BYTE PTR [rax],al
   14002a207:	add    BYTE PTR [rdx+0xd],ch
   14002a20a:	add    al,BYTE PTR [rax+0x1]
   14002a20d:	add    BYTE PTR [rax],al
   14002a20f:	add    BYTE PTR [rsi+0xd],dh
   14002a212:	add    al,BYTE PTR [rax+0x1]
   14002a215:	add    BYTE PTR [rax],al
   14002a217:	add    BYTE PTR [rbp+rcx*1+0x2],bh
   14002a21b:	rex add DWORD PTR [rax],eax
   14002a21e:	add    BYTE PTR [rax],al
   14002a220:	(bad)  
   14002a221:	or     eax,0x14002
   14002a226:	add    BYTE PTR [rax],al
   14002a228:	mov    BYTE PTR [rip+0x14002],cl        # 0x14003e230
   14002a22e:	add    BYTE PTR [rax],al
   14002a230:	mov    cs,WORD PTR [rip+0x14002]        # 0x14003e238
   14002a236:	add    BYTE PTR [rax],al
   14002a238:	xchg   esp,eax
   14002a239:	or     eax,0x14002
   14002a23e:	add    BYTE PTR [rax],al
   14002a240:	(bad)  
   14002a241:	or     eax,0x14002
   14002a246:	add    BYTE PTR [rax],al
   14002a248:	movabs al,ds:0xa60000000140020d
   14002a251:	or     eax,0x14002
   14002a256:	add    BYTE PTR [rax],al
   14002a258:	lods   al,BYTE PTR ds:[rsi]
   14002a259:	or     eax,0x14002
   14002a25e:	add    BYTE PTR [rax],al
   14002a260:	mov    dl,0xd
   14002a262:	add    al,BYTE PTR [rax+0x1]
   14002a265:	add    BYTE PTR [rax],al
   14002a267:	add    BYTE PTR [rax+0x140020d],bh
   14002a26d:	add    BYTE PTR [rax],al
   14002a26f:	add    BYTE PTR [rsi+0x140020d],bh
   14002a275:	add    BYTE PTR [rax],al
   14002a277:	add    dl,cl
   14002a279:	or     eax,0x14002
   14002a27e:	add    BYTE PTR [rax],al
   14002a280:	ror    BYTE PTR [rip+0x14002],1        # 0x14003e288
   14002a286:	add    BYTE PTR [rax],al
   14002a288:	(bad)  
   14002a289:	or     eax,0x14002
   14002a28e:	add    BYTE PTR [rax],al
   14002a290:	fmul   QWORD PTR [rip+0x14002]        # 0x14003e298
   14002a296:	add    BYTE PTR [rax],al
   14002a298:	loop   0x14002a2a7
   14002a29a:	add    al,BYTE PTR [rax+0x1]
   14002a29d:	add    BYTE PTR [rax],al
   14002a29f:	add    al,ch
   14002a2a1:	or     eax,0x14002
   14002a2a6:	add    BYTE PTR [rax],al
   14002a2a8:	out    dx,al
   14002a2a9:	or     eax,0x14002
   14002a2ae:	add    BYTE PTR [rax],al
   14002a2b0:	hlt    
   14002a2b1:	or     eax,0x14002
   14002a2b6:	add    BYTE PTR [rax],al
   14002a2b8:	cli    
   14002a2b9:	or     eax,0x14002
   14002a2be:	add    BYTE PTR [rax],al
   14002a2c0:	add    BYTE PTR [rsi],cl
   14002a2c2:	add    al,BYTE PTR [rax+0x1]
   14002a2c5:	add    BYTE PTR [rax],al
   14002a2c7:	add    BYTE PTR [rsi],al
   14002a2c9:	(bad)  
   14002a2ca:	add    al,BYTE PTR [rax+0x1]
   14002a2cd:	add    BYTE PTR [rax],al
   14002a2cf:	add    BYTE PTR [rsi+rcx*1],cl
   14002a2d2:	add    al,BYTE PTR [rax+0x1]
   14002a2d5:	add    BYTE PTR [rax],al
   14002a2d7:	add    BYTE PTR [rdx],dl
   14002a2d9:	(bad)  
   14002a2da:	add    al,BYTE PTR [rax+0x1]
   14002a2dd:	add    BYTE PTR [rax],al
   14002a2df:	add    BYTE PTR [rax],bl
   14002a2e1:	(bad)  
   14002a2e2:	add    al,BYTE PTR [rax+0x1]
   14002a2e5:	add    BYTE PTR [rax],al
   14002a2e7:	add    BYTE PTR [rsi],bl
   14002a2e9:	(bad)  
   14002a2ea:	add    al,BYTE PTR [rax+0x1]
   14002a2ed:	add    BYTE PTR [rax],al
   14002a2ef:	add    BYTE PTR [rsi+rcx*1],ah
   14002a2f2:	add    al,BYTE PTR [rax+0x1]
   14002a2f5:	add    BYTE PTR [rax],al
   14002a2f7:	add    BYTE PTR [rdx],ch
   14002a2f9:	(bad)  
   14002a2fa:	add    al,BYTE PTR [rax+0x1]
   14002a2fd:	add    BYTE PTR [rax],al
   14002a2ff:	add    BYTE PTR [rax],dh
   14002a301:	(bad)  
   14002a302:	add    al,BYTE PTR [rax+0x1]
   14002a305:	add    BYTE PTR [rax],al
   14002a307:	add    BYTE PTR [rsi],dh
   14002a309:	(bad)  
   14002a30a:	add    al,BYTE PTR [rax+0x1]
   14002a30d:	add    BYTE PTR [rax],al
   14002a30f:	add    BYTE PTR [rsi+rcx*1],bh
   14002a312:	add    al,BYTE PTR [rax+0x1]
   14002a315:	add    BYTE PTR [rax],al
   14002a317:	add    BYTE PTR [rdx+0xe],al
   14002a31a:	add    al,BYTE PTR [rax+0x1]
   14002a31d:	add    BYTE PTR [rax],al
   14002a31f:	add    BYTE PTR [rax+0xe],cl
   14002a322:	add    al,BYTE PTR [rax+0x1]
   14002a325:	add    BYTE PTR [rax],al
   14002a327:	add    BYTE PTR [rsi+0xe],cl
   14002a32a:	add    al,BYTE PTR [rax+0x1]
   14002a32d:	add    BYTE PTR [rax],al
   14002a32f:	add    BYTE PTR [rsi+rcx*1+0x2],dl
   14002a333:	rex add DWORD PTR [rax],eax
   14002a336:	add    BYTE PTR [rax],al
   14002a338:	pop    rdx
   14002a339:	(bad)  
   14002a33a:	add    al,BYTE PTR [rax+0x1]
   14002a33d:	add    BYTE PTR [rax],al
   14002a33f:	add    BYTE PTR [rax+0xe],ah
   14002a342:	add    al,BYTE PTR [rax+0x1]
   14002a345:	add    BYTE PTR [rax],al
   14002a347:	add    BYTE PTR [rsi+0xe],ah
   14002a34a:	add    al,BYTE PTR [rax+0x1]
   14002a34d:	add    BYTE PTR [rax],al
   14002a34f:	add    BYTE PTR [rax],dl
   14002a351:	outs   dx,BYTE PTR ds:[rsi]
   14002a352:	add    BYTE PTR [rax+0x1],al
   14002a355:	add    BYTE PTR [rax],al
   14002a357:	add    BYTE PTR [rax],ah
   14002a359:	push   rbx
   14002a35a:	add    BYTE PTR [rax+0x1],al
   14002a35d:	add    BYTE PTR [rax],al
   14002a35f:	add    BYTE PTR [rax+0x53],al
   14002a362:	add    BYTE PTR [rax+0x1],al
   14002a365:	add    BYTE PTR [rax],al
   14002a367:	add    BYTE PTR [rdi+rcx*1+0x14002],ah
   14002a36e:	add    BYTE PTR [rax],al
   14002a370:	jb     0x14002a380
   14002a372:	add    al,BYTE PTR [rax+0x1]
   14002a375:	add    BYTE PTR [rax],al
   14002a377:	add    BYTE PTR [rax+0xe],bh
   14002a37a:	add    al,BYTE PTR [rax+0x1]
   14002a37d:	add    BYTE PTR [rax],al
   14002a37f:	add    BYTE PTR [rsi+0xe],bh
   14002a382:	add    al,BYTE PTR [rax+0x1]
   14002a385:	add    BYTE PTR [rax],al
   14002a387:	add    BYTE PTR [rsi+rcx*1+0x14002],al
   14002a38e:	add    BYTE PTR [rax],al
   14002a390:	mov    cl,BYTE PTR [rsi]
   14002a392:	add    al,BYTE PTR [rax+0x1]
   14002a395:	add    BYTE PTR [rax],al
   14002a397:	add    BYTE PTR [rax+0x140020e],dl
   14002a39d:	add    BYTE PTR [rax],al
   14002a39f:	add    BYTE PTR [rsi+0x140020e],dl
   14002a3a5:	add    BYTE PTR [rax],al
   14002a3a7:	add    BYTE PTR [rsi+rcx*1+0x14002],bl
   14002a3ae:	add    BYTE PTR [rax],al
   14002a3b0:	movabs ds:0xa80000000140020e,al
   14002a3b9:	(bad)  
   14002a3ba:	add    al,BYTE PTR [rax+0x1]
   14002a3bd:	add    BYTE PTR [rax],al
   14002a3bf:	add    BYTE PTR [rsi+0x140020e],ch
   14002a3c5:	add    BYTE PTR [rax],al
   14002a3c7:	add    BYTE PTR [rsi+rcx*1+0x14002],dh
   14002a3ce:	add    BYTE PTR [rax],al
   14002a3d0:	mov    edx,0x140020e
   14002a3d5:	add    BYTE PTR [rax],al
   14002a3d7:	add    al,al
   14002a3d9:	(bad)  
   14002a3da:	add    al,BYTE PTR [rax+0x1]
   14002a3dd:	add    BYTE PTR [rax],al
   14002a3df:	add    BYTE PTR [rax+0x140020f],dh
   14002a3e5:	add    BYTE PTR [rax],al
   14002a3e7:	add    dl,dl
   14002a3e9:	(bad)  
   14002a3ea:	add    al,BYTE PTR [rax+0x1]
   14002a3ed:	add    BYTE PTR [rax],al
   14002a3ef:	add    dh,bl
   14002a3f1:	(bad)  
   14002a3f2:	add    al,BYTE PTR [rax+0x1]
   14002a3f5:	add    BYTE PTR [rax],al
   14002a3f7:	add    BYTE PTR [rdx],cl
   14002a3f9:	adc    BYTE PTR [rdx],al
   14002a3fb:	rex add DWORD PTR [rax],eax
   14002a3fe:	add    BYTE PTR [rax],al
   14002a400:	mov    dh,0xf
   14002a402:	add    al,BYTE PTR [rax+0x1]
   14002a405:	add    BYTE PTR [rax],al
   14002a407:	add    BYTE PTR [rdi+rcx*1+0x14002],bh
   14002a40e:	add    BYTE PTR [rax],al
   14002a410:	xor    BYTE PTR [rdx+0x0],bh
   14002a413:	rex add DWORD PTR [rax],eax
   14002a416:	add    BYTE PTR [rax],al
   14002a418:	or     BYTE PTR [rdi],0x2
   14002a41b:	rex add DWORD PTR [rax],eax
   14002a41e:	add    BYTE PTR [rax],al
   14002a420:	mov    WORD PTR [rdi],cs
   14002a422:	add    al,BYTE PTR [rax+0x1]
   14002a425:	add    BYTE PTR [rax],al
   14002a427:	add    BYTE PTR [rsi+0x140020f],al
   14002a42d:	add    BYTE PTR [rax],al
   14002a42f:	add    BYTE PTR [rsi],cl
   14002a431:	or     al,0x2
   14002a433:	rex add DWORD PTR [rax],eax
   14002a436:	add    BYTE PTR [rax],al
   14002a438:	sub    BYTE PTR [rbp+0x0],0x40
   14002a43c:	add    DWORD PTR [rax],eax
   14002a43e:	add    BYTE PTR [rax],al
   14002a440:	xchg   edx,eax
   14002a441:	lar    eax,WORD PTR [rax+0x1]
   14002a445:	add    BYTE PTR [rax],al
   14002a447:	add    BYTE PTR [rax+0x140020f],bl
   14002a44d:	add    BYTE PTR [rax],al
   14002a44f:	add    BYTE PTR [rsi+0x140020f],bl
   14002a455:	add    BYTE PTR [rax],al
   14002a457:	add    dl,al
   14002a459:	lar    eax,WORD PTR [rax+0x1]
   14002a45d:	add    BYTE PTR [rax],al
   14002a45f:	add    al,dl
   14002a461:	push   0x0
   14002a463:	rex add DWORD PTR [rax],eax
   14002a466:	add    BYTE PTR [rax],al
   14002a468:	(bad)  
   14002a469:	adc    BYTE PTR [rdx],al
   14002a46b:	rex add DWORD PTR [rax],eax
   14002a46e:	add    BYTE PTR [rax],al
   14002a470:	sbb    al,0x10
   14002a472:	add    al,BYTE PTR [rax+0x1]
   14002a475:	add    BYTE PTR [rax],al
   14002a477:	add    BYTE PTR [rax+0x6e],al
   14002a47a:	add    BYTE PTR [rax+0x1],al
   14002a47d:	add    BYTE PTR [rax],al
   14002a47f:	add    BYTE PTR [rax+rdx*1],dh
   14002a482:	add    al,BYTE PTR [rax+0x1]
   14002a485:	add    BYTE PTR [rax],al
   14002a487:	add    BYTE PTR [rdx],bh
   14002a489:	adc    BYTE PTR [rdx],al
   14002a48b:	rex add DWORD PTR [rax],eax
   14002a48e:	add    BYTE PTR [rax],al
   14002a490:	adc    BYTE PTR [rdx],al
   14002a493:	rex add DWORD PTR [rax],eax
   14002a496:	add    BYTE PTR [rax],al
   14002a498:	rex.RX adc BYTE PTR [rdx],r8b
   14002a49b:	rex add DWORD PTR [rax],eax
   14002a49e:	add    BYTE PTR [rax],al
   14002a4a0:	rex.WR adc BYTE PTR [rdx],r8b
   14002a4a3:	rex add DWORD PTR [rax],eax
   14002a4a6:	add    BYTE PTR [rax],al
   14002a4a8:	push   rdx
   14002a4a9:	adc    BYTE PTR [rdx],al
   14002a4ab:	rex add DWORD PTR [rax],eax
   14002a4ae:	add    BYTE PTR [rax],al
   14002a4b0:	pop    rax
   14002a4b1:	adc    BYTE PTR [rdx],al
   14002a4b3:	rex add DWORD PTR [rax],eax
   14002a4b6:	add    BYTE PTR [rax],al
   14002a4b8:	pop    rsi
   14002a4b9:	adc    BYTE PTR [rdx],al
   14002a4bb:	rex add DWORD PTR [rax],eax
   14002a4be:	add    BYTE PTR [rax],al
   14002a4c0:	adc    BYTE PTR fs:[rdx],al
   14002a4c3:	rex add DWORD PTR [rax],eax
   14002a4c6:	add    BYTE PTR [rax],al
   14002a4c8:	push   0x10
   14002a4ca:	add    al,BYTE PTR [rax+0x1]
   14002a4cd:	add    BYTE PTR [rax],al
   14002a4cf:	add    BYTE PTR [rax+0x10],dh
   14002a4d2:	add    al,BYTE PTR [rax+0x1]
   14002a4d5:	add    BYTE PTR [rax],al
   14002a4d7:	add    BYTE PTR [rsi+0x10],dh
   14002a4da:	add    al,BYTE PTR [rax+0x1]
   14002a4dd:	add    BYTE PTR [rax],al
   14002a4df:	add    BYTE PTR [rax+rdx*1+0x2],bh
   14002a4e3:	rex add DWORD PTR [rax],eax
   14002a4e6:	add    BYTE PTR [rax],al
   14002a4e8:	(bad)  
   14002a4e9:	adc    BYTE PTR [rdx],al
   14002a4eb:	rex add DWORD PTR [rax],eax
   14002a4ee:	add    BYTE PTR [rax],al
   14002a4f0:	mov    BYTE PTR [rax],dl
   14002a4f2:	add    al,BYTE PTR [rax+0x1]
   14002a4f5:	add    BYTE PTR [rax],al
   14002a4f7:	add    BYTE PTR [rsi+0x1400210],cl
   14002a4fd:	add    BYTE PTR [rax],al
   14002a4ff:	add    BYTE PTR [rax+0x6a],al
   14002a502:	add    BYTE PTR [rax+0x1],al
   14002a505:	add    BYTE PTR [rax],al
   14002a507:	add    BYTE PTR [rax+0x6a],ah
   14002a50a:	add    BYTE PTR [rax+0x1],al
   14002a50d:	add    BYTE PTR [rax],al
   14002a50f:	add    al,dh
   14002a511:	push   0x0
   14002a513:	rex add DWORD PTR [rax],eax
   14002a516:	add    BYTE PTR [rax],al
   14002a518:	and    BYTE PTR [rax+0x0],dh
   14002a51b:	rex add DWORD PTR [rax],eax
   14002a51e:	add    BYTE PTR [rax],al
   14002a520:	adc    BYTE PTR [rdx+0x0],dh
   14002a523:	rex add DWORD PTR [rax],eax
   14002a526:	add    BYTE PTR [rax],al
   14002a528:	lock jae 0x14002a52b
   14002a52b:	rex add DWORD PTR [rax],eax
   14002a52e:	add    BYTE PTR [rax],al
   14002a530:	jo     0x14002a5a6
   14002a532:	add    BYTE PTR [rax+0x1],al
   14002a535:	add    BYTE PTR [rax],al
   14002a537:	add    BYTE PTR [rax+0x22],bl
   14002a53a:	add    eax,DWORD PTR [rax+0x1]
   14002a53d:	add    BYTE PTR [rax],al
   14002a53f:	add    dh,cl
   14002a541:	lar    eax,WORD PTR [rax+0x1]
   14002a545:	add    BYTE PTR [rax],al
   14002a547:	add    ah,dl
   14002a549:	lar    eax,WORD PTR [rax+0x1]
   14002a54d:	add    BYTE PTR [rax],al
   14002a54f:	add    dl,bl
   14002a551:	lar    eax,WORD PTR [rax+0x1]
   14002a555:	add    BYTE PTR [rax],al
   14002a557:	add    al,ah
   14002a559:	lar    eax,WORD PTR [rax+0x1]
   14002a55d:	add    BYTE PTR [rax],al
   14002a55f:	add    dh,ah
   14002a561:	lar    eax,WORD PTR [rax+0x1]
   14002a565:	add    BYTE PTR [rax],al
   14002a567:	add    ah,ch
   14002a569:	lar    eax,WORD PTR [rax+0x1]
   14002a56d:	add    BYTE PTR [rax],al
   14002a56f:	add    dl,dh
   14002a571:	lar    eax,WORD PTR [rax+0x1]
   14002a575:	add    BYTE PTR [rax],al
   14002a577:	add    BYTE PTR [rax+0x140006f],al
   14002a57d:	add    BYTE PTR [rax],al
   14002a57f:	add    al,bh
   14002a581:	lar    eax,WORD PTR [rax+0x1]
   14002a585:	add    BYTE PTR [rax],al
   14002a587:	add    BYTE PTR [rax],dl
   14002a589:	adc    BYTE PTR [rdx],al
   14002a58b:	rex add DWORD PTR [rax],eax
	...
   14002a5ae:	add    BYTE PTR [rax],al
   14002a5b0:	movabs al,ds:0x9000000001400210
   14002a5b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a5ba:	add    al,BYTE PTR [rax+0x1]
   14002a5bd:	add    BYTE PTR [rax],al
   14002a5bf:	add    BYTE PTR [rdx],ah
   14002a5c1:	add    eax,0x11993
   14002a5c6:	add    BYTE PTR [rax],al
   14002a5c8:	mov    esp,0x33d
   14002a5cd:	add    BYTE PTR [rax],al
   14002a5cf:	add    BYTE PTR [rax],al
   14002a5d1:	add    BYTE PTR [rax],al
   14002a5d3:	add    BYTE PTR [rbx],al
   14002a5d5:	add    BYTE PTR [rax],al
   14002a5d7:	add    ah,al
   14002a5d9:	cmp    eax,0x200003
	...
   14002a5e6:	add    BYTE PTR [rax],al
   14002a5e8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003bf81
   14002a5ee:	add    BYTE PTR [rax],al
   14002a5f0:	hlt    
   14002a5f1:	cmp    eax,0x3
   14002a5f6:	add    BYTE PTR [rax],al
   14002a5f8:	add    BYTE PTR [rax],al
   14002a5fa:	add    BYTE PTR [rax],al
   14002a5fc:	add    DWORD PTR [rax],eax
   14002a5fe:	add    BYTE PTR [rax],al
   14002a600:	cld    
   14002a601:	cmp    eax,0x200003
	...
   14002a60e:	add    BYTE PTR [rax],al
   14002a610:	and    al,BYTE PTR [rip+0x11993]        # 0x14003bfa9
   14002a616:	add    BYTE PTR [rax],al
   14002a618:	xor    BYTE PTR [rsi],bh
   14002a61a:	add    eax,DWORD PTR [rax]
	...
   14002a624:	add    eax,DWORD PTR [rax]
   14002a626:	add    BYTE PTR [rax],al
   14002a628:	cmp    BYTE PTR [rsi],bh
   14002a62a:	add    eax,DWORD PTR [rax]
	...
   14002a638:	and    BYTE PTR [rdx],0x3
   14002a63b:	rex add DWORD PTR [rax],eax
   14002a63e:	add    BYTE PTR [rax],al
   14002a640:	xor    BYTE PTR [rdi+0x0],ch
   14002a643:	rex add DWORD PTR [rax],eax
   14002a646:	add    BYTE PTR [rax],al
   14002a648:	jo     0x14002a6c8
   14002a64a:	add    BYTE PTR [rax+0x1],al
   14002a64d:	add    BYTE PTR [rax],al
   14002a64f:	add    BYTE PTR [rax+0x1400054],ah
   14002a655:	add    BYTE PTR [rax],al
   14002a657:	add    BYTE PTR [rax],dh
   14002a659:	jbe    0x14002a65c
   14002a65b:	rex add DWORD PTR [rax],eax
   14002a65e:	add    BYTE PTR [rax],al
   14002a660:	movabs al,ds:0xaa00000001400054
   14002a669:	lar    eax,WORD PTR [rax+0x1]
   14002a66d:	add    BYTE PTR [rax],al
   14002a66f:	add    al,bl
   14002a671:	(bad)  
   14002a672:	add    al,BYTE PTR [rax+0x1]
   14002a675:	add    BYTE PTR [rax],al
   14002a677:	add    BYTE PTR [rdx+0x140020b],bh
   14002a67d:	add    BYTE PTR [rax],al
   14002a67f:	add    al,al
   14002a681:	or     eax,DWORD PTR [rdx]
   14002a683:	rex add DWORD PTR [rax],eax
   14002a686:	add    BYTE PTR [rax],al
   14002a688:	(bad)  
   14002a689:	or     eax,DWORD PTR [rdx]
   14002a68b:	rex add DWORD PTR [rax],eax
   14002a68e:	add    BYTE PTR [rax],al
   14002a690:	int3   
   14002a691:	or     eax,DWORD PTR [rdx]
   14002a693:	rex add DWORD PTR [rax],eax
   14002a696:	add    BYTE PTR [rax],al
   14002a698:	ror    BYTE PTR [rbx],cl
   14002a69a:	add    al,BYTE PTR [rax+0x1]
   14002a69d:	add    BYTE PTR [rax],al
   14002a69f:	add    al,ah
   14002a6a1:	jge    0x14002a6a3
   14002a6a3:	rex add DWORD PTR [rax],eax
   14002a6a6:	add    BYTE PTR [rax],al
   14002a6a8:	fmul   DWORD PTR [rbx]
   14002a6aa:	add    al,BYTE PTR [rax+0x1]
   14002a6ad:	add    BYTE PTR [rax],al
   14002a6af:	add    dh,bl
   14002a6b1:	or     eax,DWORD PTR [rdx]
   14002a6b3:	rex add DWORD PTR [rax],eax
   14002a6b6:	add    BYTE PTR [rax],al
   14002a6b8:	in     al,0xb
   14002a6ba:	add    al,BYTE PTR [rax+0x1]
   14002a6bd:	add    BYTE PTR [rax],al
   14002a6bf:	add    ah,al
   14002a6c1:	or     eax,0x14002
   14002a6c6:	add    BYTE PTR [rax],al
   14002a6c8:	add    BYTE PTR [rax+0x0],dh
   14002a6cb:	rex add DWORD PTR [rax],eax
   14002a6ce:	add    BYTE PTR [rax],al
   14002a6d0:	test   BYTE PTR [rbx],0x2
   14002a6d3:	rex add DWORD PTR [rax],eax
   14002a6d6:	add    BYTE PTR [rax],al
   14002a6d8:	cld    
   14002a6d9:	or     eax,DWORD PTR [rdx]
   14002a6db:	rex add DWORD PTR [rax],eax
   14002a6de:	add    BYTE PTR [rax],al
   14002a6e0:	add    cl,BYTE PTR [rdx+rax*1]
   14002a6e3:	rex add DWORD PTR [rax],eax
   14002a6e6:	add    BYTE PTR [rax],al
   14002a6e8:	or     BYTE PTR [rdx+rax*1],cl
   14002a6eb:	rex add DWORD PTR [rax],eax
   14002a6ee:	add    BYTE PTR [rax],al
   14002a6f0:	pop    rsi
   14002a6f1:	or     eax,0x14002
   14002a6f6:	add    BYTE PTR [rax],al
   14002a6f8:	fs or  eax,0x14002
   14002a6fe:	add    BYTE PTR [rax],al
   14002a700:	jo     0x14002a70f
   14002a702:	add    al,BYTE PTR [rax+0x1]
   14002a705:	add    BYTE PTR [rax],al
   14002a707:	add    BYTE PTR [rdx+0xd],ch
   14002a70a:	add    al,BYTE PTR [rax+0x1]
   14002a70d:	add    BYTE PTR [rax],al
   14002a70f:	add    BYTE PTR [rsi+0xd],dh
   14002a712:	add    al,BYTE PTR [rax+0x1]
   14002a715:	add    BYTE PTR [rax],al
   14002a717:	add    BYTE PTR [rbp+rcx*1+0x2],bh
   14002a71b:	rex add DWORD PTR [rax],eax
   14002a71e:	add    BYTE PTR [rax],al
   14002a720:	(bad)  
   14002a721:	or     eax,0x14002
   14002a726:	add    BYTE PTR [rax],al
   14002a728:	mov    BYTE PTR [rip+0x14002],cl        # 0x14003e730
   14002a72e:	add    BYTE PTR [rax],al
   14002a730:	mov    cs,WORD PTR [rip+0x14002]        # 0x14003e738
   14002a736:	add    BYTE PTR [rax],al
   14002a738:	xchg   esp,eax
   14002a739:	or     eax,0x14002
   14002a73e:	add    BYTE PTR [rax],al
   14002a740:	(bad)  
   14002a741:	or     eax,0x14002
   14002a746:	add    BYTE PTR [rax],al
   14002a748:	movabs al,ds:0xa60000000140020d
   14002a751:	or     eax,0x14002
   14002a756:	add    BYTE PTR [rax],al
   14002a758:	lods   al,BYTE PTR ds:[rsi]
   14002a759:	or     eax,0x14002
   14002a75e:	add    BYTE PTR [rax],al
   14002a760:	mov    dl,0xd
   14002a762:	add    al,BYTE PTR [rax+0x1]
   14002a765:	add    BYTE PTR [rax],al
   14002a767:	add    BYTE PTR [rax+0x140020d],bh
   14002a76d:	add    BYTE PTR [rax],al
   14002a76f:	add    BYTE PTR [rsi+0x140020d],bh
   14002a775:	add    BYTE PTR [rax],al
   14002a777:	add    dl,cl
   14002a779:	or     eax,0x14002
   14002a77e:	add    BYTE PTR [rax],al
   14002a780:	ror    BYTE PTR [rip+0x14002],1        # 0x14003e788
   14002a786:	add    BYTE PTR [rax],al
   14002a788:	(bad)  
   14002a789:	or     eax,0x14002
   14002a78e:	add    BYTE PTR [rax],al
   14002a790:	fmul   QWORD PTR [rip+0x14002]        # 0x14003e798
   14002a796:	add    BYTE PTR [rax],al
   14002a798:	loop   0x14002a7a7
   14002a79a:	add    al,BYTE PTR [rax+0x1]
   14002a79d:	add    BYTE PTR [rax],al
   14002a79f:	add    al,ch
   14002a7a1:	or     eax,0x14002
   14002a7a6:	add    BYTE PTR [rax],al
   14002a7a8:	out    dx,al
   14002a7a9:	or     eax,0x14002
   14002a7ae:	add    BYTE PTR [rax],al
   14002a7b0:	hlt    
   14002a7b1:	or     eax,0x14002
   14002a7b6:	add    BYTE PTR [rax],al
   14002a7b8:	cli    
   14002a7b9:	or     eax,0x14002
   14002a7be:	add    BYTE PTR [rax],al
   14002a7c0:	add    BYTE PTR [rsi],cl
   14002a7c2:	add    al,BYTE PTR [rax+0x1]
   14002a7c5:	add    BYTE PTR [rax],al
   14002a7c7:	add    BYTE PTR [rsi],al
   14002a7c9:	(bad)  
   14002a7ca:	add    al,BYTE PTR [rax+0x1]
   14002a7cd:	add    BYTE PTR [rax],al
   14002a7cf:	add    BYTE PTR [rsi+rcx*1],cl
   14002a7d2:	add    al,BYTE PTR [rax+0x1]
   14002a7d5:	add    BYTE PTR [rax],al
   14002a7d7:	add    BYTE PTR [rdx],dl
   14002a7d9:	(bad)  
   14002a7da:	add    al,BYTE PTR [rax+0x1]
   14002a7dd:	add    BYTE PTR [rax],al
   14002a7df:	add    BYTE PTR [rax],bl
   14002a7e1:	(bad)  
   14002a7e2:	add    al,BYTE PTR [rax+0x1]
   14002a7e5:	add    BYTE PTR [rax],al
   14002a7e7:	add    BYTE PTR [rsi],bl
   14002a7e9:	(bad)  
   14002a7ea:	add    al,BYTE PTR [rax+0x1]
   14002a7ed:	add    BYTE PTR [rax],al
   14002a7ef:	add    BYTE PTR [rsi+rcx*1],ah
   14002a7f2:	add    al,BYTE PTR [rax+0x1]
   14002a7f5:	add    BYTE PTR [rax],al
   14002a7f7:	add    BYTE PTR [rdx],ch
   14002a7f9:	(bad)  
   14002a7fa:	add    al,BYTE PTR [rax+0x1]
   14002a7fd:	add    BYTE PTR [rax],al
   14002a7ff:	add    BYTE PTR [rax],dh
   14002a801:	(bad)  
   14002a802:	add    al,BYTE PTR [rax+0x1]
   14002a805:	add    BYTE PTR [rax],al
   14002a807:	add    BYTE PTR [rsi],dh
   14002a809:	(bad)  
   14002a80a:	add    al,BYTE PTR [rax+0x1]
   14002a80d:	add    BYTE PTR [rax],al
   14002a80f:	add    BYTE PTR [rsi+rcx*1],bh
   14002a812:	add    al,BYTE PTR [rax+0x1]
   14002a815:	add    BYTE PTR [rax],al
   14002a817:	add    BYTE PTR [rdx+0xe],al
   14002a81a:	add    al,BYTE PTR [rax+0x1]
   14002a81d:	add    BYTE PTR [rax],al
   14002a81f:	add    BYTE PTR [rax+0xe],cl
   14002a822:	add    al,BYTE PTR [rax+0x1]
   14002a825:	add    BYTE PTR [rax],al
   14002a827:	add    BYTE PTR [rsi+0xe],cl
   14002a82a:	add    al,BYTE PTR [rax+0x1]
   14002a82d:	add    BYTE PTR [rax],al
   14002a82f:	add    BYTE PTR [rsi+rcx*1+0x2],dl
   14002a833:	rex add DWORD PTR [rax],eax
   14002a836:	add    BYTE PTR [rax],al
   14002a838:	pop    rdx
   14002a839:	(bad)  
   14002a83a:	add    al,BYTE PTR [rax+0x1]
   14002a83d:	add    BYTE PTR [rax],al
   14002a83f:	add    BYTE PTR [rax+0xe],ah
   14002a842:	add    al,BYTE PTR [rax+0x1]
   14002a845:	add    BYTE PTR [rax],al
   14002a847:	add    BYTE PTR [rsi+0xe],ah
   14002a84a:	add    al,BYTE PTR [rax+0x1]
   14002a84d:	add    BYTE PTR [rax],al
   14002a84f:	add    BYTE PTR [rax],dl
   14002a851:	outs   dx,BYTE PTR ds:[rsi]
   14002a852:	add    BYTE PTR [rax+0x1],al
   14002a855:	add    BYTE PTR [rax],al
   14002a857:	add    BYTE PTR [rax],ah
   14002a859:	push   rbx
   14002a85a:	add    BYTE PTR [rax+0x1],al
   14002a85d:	add    BYTE PTR [rax],al
   14002a85f:	add    BYTE PTR [rax+0x53],al
   14002a862:	add    BYTE PTR [rax+0x1],al
   14002a865:	add    BYTE PTR [rax],al
   14002a867:	add    BYTE PTR [rdi+rcx*1+0x14002],ah
   14002a86e:	add    BYTE PTR [rax],al
   14002a870:	jb     0x14002a880
   14002a872:	add    al,BYTE PTR [rax+0x1]
   14002a875:	add    BYTE PTR [rax],al
   14002a877:	add    BYTE PTR [rax+0xe],bh
   14002a87a:	add    al,BYTE PTR [rax+0x1]
   14002a87d:	add    BYTE PTR [rax],al
   14002a87f:	add    BYTE PTR [rsi+0xe],bh
   14002a882:	add    al,BYTE PTR [rax+0x1]
   14002a885:	add    BYTE PTR [rax],al
   14002a887:	add    BYTE PTR [rsi+rcx*1+0x14002],al
   14002a88e:	add    BYTE PTR [rax],al
   14002a890:	mov    cl,BYTE PTR [rsi]
   14002a892:	add    al,BYTE PTR [rax+0x1]
   14002a895:	add    BYTE PTR [rax],al
   14002a897:	add    BYTE PTR [rax+0x140020e],dl
   14002a89d:	add    BYTE PTR [rax],al
   14002a89f:	add    BYTE PTR [rsi+0x140020e],dl
   14002a8a5:	add    BYTE PTR [rax],al
   14002a8a7:	add    BYTE PTR [rsi+rcx*1+0x14002],bl
   14002a8ae:	add    BYTE PTR [rax],al
   14002a8b0:	movabs ds:0xa80000000140020e,al
   14002a8b9:	(bad)  
   14002a8ba:	add    al,BYTE PTR [rax+0x1]
   14002a8bd:	add    BYTE PTR [rax],al
   14002a8bf:	add    BYTE PTR [rsi+0x140020e],ch
   14002a8c5:	add    BYTE PTR [rax],al
   14002a8c7:	add    BYTE PTR [rsi+rcx*1+0x14002],dh
   14002a8ce:	add    BYTE PTR [rax],al
   14002a8d0:	mov    edx,0x140020e
   14002a8d5:	add    BYTE PTR [rax],al
   14002a8d7:	add    al,al
   14002a8d9:	(bad)  
   14002a8da:	add    al,BYTE PTR [rax+0x1]
   14002a8dd:	add    BYTE PTR [rax],al
   14002a8df:	add    BYTE PTR [rax+0x140020f],dh
   14002a8e5:	add    BYTE PTR [rax],al
   14002a8e7:	add    dl,dl
   14002a8e9:	(bad)  
   14002a8ea:	add    al,BYTE PTR [rax+0x1]
   14002a8ed:	add    BYTE PTR [rax],al
   14002a8ef:	add    dh,bl
   14002a8f1:	(bad)  
   14002a8f2:	add    al,BYTE PTR [rax+0x1]
   14002a8f5:	add    BYTE PTR [rax],al
   14002a8f7:	add    BYTE PTR [rdx],cl
   14002a8f9:	adc    BYTE PTR [rdx],al
   14002a8fb:	rex add DWORD PTR [rax],eax
   14002a8fe:	add    BYTE PTR [rax],al
   14002a900:	mov    dh,0xf
   14002a902:	add    al,BYTE PTR [rax+0x1]
   14002a905:	add    BYTE PTR [rax],al
   14002a907:	add    BYTE PTR [rdi+rcx*1+0x14002],bh
   14002a90e:	add    BYTE PTR [rax],al
   14002a910:	xor    BYTE PTR [rdx+0x0],bh
   14002a913:	rex add DWORD PTR [rax],eax
   14002a916:	add    BYTE PTR [rax],al
   14002a918:	or     BYTE PTR [rdi],0x2
   14002a91b:	rex add DWORD PTR [rax],eax
   14002a91e:	add    BYTE PTR [rax],al
   14002a920:	mov    WORD PTR [rdi],cs
   14002a922:	add    al,BYTE PTR [rax+0x1]
   14002a925:	add    BYTE PTR [rax],al
   14002a927:	add    BYTE PTR [rsi+0x140020f],al
   14002a92d:	add    BYTE PTR [rax],al
   14002a92f:	add    BYTE PTR [rsi],cl
   14002a931:	or     al,0x2
   14002a933:	rex add DWORD PTR [rax],eax
   14002a936:	add    BYTE PTR [rax],al
   14002a938:	(bad)  
   14002a939:	jge    0x14002a93b
   14002a93b:	rex add DWORD PTR [rax],eax
   14002a93e:	add    BYTE PTR [rax],al
   14002a940:	xchg   edx,eax
   14002a941:	lar    eax,WORD PTR [rax+0x1]
   14002a945:	add    BYTE PTR [rax],al
   14002a947:	add    BYTE PTR [rax+0x140020f],bl
   14002a94d:	add    BYTE PTR [rax],al
   14002a94f:	add    BYTE PTR [rsi+0x140020f],bl
   14002a955:	add    BYTE PTR [rax],al
   14002a957:	add    dl,al
   14002a959:	lar    eax,WORD PTR [rax+0x1]
   14002a95d:	add    BYTE PTR [rax],al
   14002a95f:	add    al,dl
   14002a961:	push   0x0
   14002a963:	rex add DWORD PTR [rax],eax
   14002a966:	add    BYTE PTR [rax],al
   14002a968:	(bad)  
   14002a969:	adc    BYTE PTR [rdx],al
   14002a96b:	rex add DWORD PTR [rax],eax
   14002a96e:	add    BYTE PTR [rax],al
   14002a970:	sbb    al,0x10
   14002a972:	add    al,BYTE PTR [rax+0x1]
   14002a975:	add    BYTE PTR [rax],al
   14002a977:	add    BYTE PTR [rax+0x6e],al
   14002a97a:	add    BYTE PTR [rax+0x1],al
   14002a97d:	add    BYTE PTR [rax],al
   14002a97f:	add    BYTE PTR [rax+rdx*1],dh
   14002a982:	add    al,BYTE PTR [rax+0x1]
   14002a985:	add    BYTE PTR [rax],al
   14002a987:	add    BYTE PTR [rdx],bh
   14002a989:	adc    BYTE PTR [rdx],al
   14002a98b:	rex add DWORD PTR [rax],eax
   14002a98e:	add    BYTE PTR [rax],al
   14002a990:	adc    BYTE PTR [rdx],al
   14002a993:	rex add DWORD PTR [rax],eax
   14002a996:	add    BYTE PTR [rax],al
   14002a998:	rex.RX adc BYTE PTR [rdx],r8b
   14002a99b:	rex add DWORD PTR [rax],eax
   14002a99e:	add    BYTE PTR [rax],al
   14002a9a0:	rex.WR adc BYTE PTR [rdx],r8b
   14002a9a3:	rex add DWORD PTR [rax],eax
   14002a9a6:	add    BYTE PTR [rax],al
   14002a9a8:	push   rdx
   14002a9a9:	adc    BYTE PTR [rdx],al
   14002a9ab:	rex add DWORD PTR [rax],eax
   14002a9ae:	add    BYTE PTR [rax],al
   14002a9b0:	pop    rax
   14002a9b1:	adc    BYTE PTR [rdx],al
   14002a9b3:	rex add DWORD PTR [rax],eax
   14002a9b6:	add    BYTE PTR [rax],al
   14002a9b8:	pop    rsi
   14002a9b9:	adc    BYTE PTR [rdx],al
   14002a9bb:	rex add DWORD PTR [rax],eax
   14002a9be:	add    BYTE PTR [rax],al
   14002a9c0:	adc    BYTE PTR fs:[rdx],al
   14002a9c3:	rex add DWORD PTR [rax],eax
   14002a9c6:	add    BYTE PTR [rax],al
   14002a9c8:	push   0x10
   14002a9ca:	add    al,BYTE PTR [rax+0x1]
   14002a9cd:	add    BYTE PTR [rax],al
   14002a9cf:	add    BYTE PTR [rax+0x10],dh
   14002a9d2:	add    al,BYTE PTR [rax+0x1]
   14002a9d5:	add    BYTE PTR [rax],al
   14002a9d7:	add    BYTE PTR [rsi+0x10],dh
   14002a9da:	add    al,BYTE PTR [rax+0x1]
   14002a9dd:	add    BYTE PTR [rax],al
   14002a9df:	add    BYTE PTR [rax+rdx*1+0x2],bh
   14002a9e3:	rex add DWORD PTR [rax],eax
   14002a9e6:	add    BYTE PTR [rax],al
   14002a9e8:	(bad)  
   14002a9e9:	adc    BYTE PTR [rdx],al
   14002a9eb:	rex add DWORD PTR [rax],eax
   14002a9ee:	add    BYTE PTR [rax],al
   14002a9f0:	mov    BYTE PTR [rax],dl
   14002a9f2:	add    al,BYTE PTR [rax+0x1]
   14002a9f5:	add    BYTE PTR [rax],al
   14002a9f7:	add    BYTE PTR [rsi+0x1400210],cl
   14002a9fd:	add    BYTE PTR [rax],al
   14002a9ff:	add    BYTE PTR [rax+0x6a],al
   14002aa02:	add    BYTE PTR [rax+0x1],al
   14002aa05:	add    BYTE PTR [rax],al
   14002aa07:	add    BYTE PTR [rax+0x6a],ah
   14002aa0a:	add    BYTE PTR [rax+0x1],al
   14002aa0d:	add    BYTE PTR [rax],al
   14002aa0f:	add    al,dh
   14002aa11:	push   0x0
   14002aa13:	rex add DWORD PTR [rax],eax
   14002aa16:	add    BYTE PTR [rax],al
   14002aa18:	and    BYTE PTR [rax+0x0],dh
   14002aa1b:	rex add DWORD PTR [rax],eax
   14002aa1e:	add    BYTE PTR [rax],al
   14002aa20:	adc    BYTE PTR [rdx+0x0],dh
   14002aa23:	rex add DWORD PTR [rax],eax
   14002aa26:	add    BYTE PTR [rax],al
   14002aa28:	lock jae 0x14002aa2b
   14002aa2b:	rex add DWORD PTR [rax],eax
   14002aa2e:	add    BYTE PTR [rax],al
   14002aa30:	jo     0x14002aaa6
   14002aa32:	add    BYTE PTR [rax+0x1],al
   14002aa35:	add    BYTE PTR [rax],al
   14002aa37:	add    BYTE PTR [rax+0x23],cl
   14002aa3a:	add    eax,DWORD PTR [rax+0x1]
   14002aa3d:	add    BYTE PTR [rax],al
   14002aa3f:	add    dh,cl
   14002aa41:	lar    eax,WORD PTR [rax+0x1]
   14002aa45:	add    BYTE PTR [rax],al
   14002aa47:	add    ah,dl
   14002aa49:	lar    eax,WORD PTR [rax+0x1]
   14002aa4d:	add    BYTE PTR [rax],al
   14002aa4f:	add    dl,bl
   14002aa51:	lar    eax,WORD PTR [rax+0x1]
   14002aa55:	add    BYTE PTR [rax],al
   14002aa57:	add    al,ah
   14002aa59:	lar    eax,WORD PTR [rax+0x1]
   14002aa5d:	add    BYTE PTR [rax],al
   14002aa5f:	add    dh,ah
   14002aa61:	lar    eax,WORD PTR [rax+0x1]
   14002aa65:	add    BYTE PTR [rax],al
   14002aa67:	add    ah,ch
   14002aa69:	lar    eax,WORD PTR [rax+0x1]
   14002aa6d:	add    BYTE PTR [rax],al
   14002aa6f:	add    dl,dh
   14002aa71:	lar    eax,WORD PTR [rax+0x1]
   14002aa75:	add    BYTE PTR [rax],al
   14002aa77:	add    BYTE PTR [rax],al
   14002aa79:	jle    0x14002aa7b
   14002aa7b:	rex add DWORD PTR [rax],eax
   14002aa7e:	add    BYTE PTR [rax],al
   14002aa80:	clc    
   14002aa81:	lar    eax,WORD PTR [rax+0x1]
   14002aa85:	add    BYTE PTR [rax],al
   14002aa87:	add    BYTE PTR [rax],dl
   14002aa89:	adc    BYTE PTR [rdx],al
   14002aa8b:	rex add DWORD PTR [rax],eax
	...
   14002aaae:	add    BYTE PTR [rax],al
   14002aab0:	movabs al,ds:0x9000000001400210
   14002aab9:	stos   BYTE PTR es:[rdi],al
   14002aaba:	add    al,BYTE PTR [rax+0x1]
   14002aabd:	add    BYTE PTR [rax],al
   14002aabf:	add    BYTE PTR [rax+rax*1+0x6f],al
   14002aac3:	add    BYTE PTR [rdi+0x0],dh
   14002aac6:	outs   dx,BYTE PTR ds:[rsi]
   14002aac7:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002aacb:	add    BYTE PTR [rcx+0x0],ah
   14002aace:	add    BYTE PTR fs:[rax],ah
   14002aad1:	add    BYTE PTR [rbx+0x0],dh
   14002aad4:	je     0x14002aad6
   14002aad6:	(bad)  
   14002aad7:	add    BYTE PTR [rdx+0x0],dh
   14002aada:	je     0x14002aadc
   14002aadc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002aae1:	add    BYTE PTR [rax],al
   14002aae3:	add    BYTE PTR [rax],al
   14002aae5:	add    BYTE PTR [rax],al
   14002aae7:	add    BYTE PTR [rax+rax*1+0x6f],al
   14002aaeb:	add    BYTE PTR [rdi+0x0],dh
   14002aaee:	outs   dx,BYTE PTR ds:[rsi]
   14002aaef:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002aaf3:	add    BYTE PTR [rcx+0x0],ah
   14002aaf6:	add    BYTE PTR fs:[rax],ah
   14002aaf9:	add    BYTE PTR [rbx+0x0],ah
   14002aafc:	outs   dx,DWORD PTR ds:[rsi]
   14002aafd:	add    BYTE PTR [rbp+0x0],ch
   14002ab00:	jo     0x14002ab02
   14002ab02:	ins    BYTE PTR es:[rdi],dx
   14002ab03:	add    BYTE PTR [rbp+0x0],ah
   14002ab06:	je     0x14002ab08
   14002ab08:	add    BYTE PTR gs:[rax],al
   14002ab0b:	add    BYTE PTR [rax],al
   14002ab0d:	add    BYTE PTR [rax],al
   14002ab0f:	add    BYTE PTR [rbx+0x0],dl
   14002ab12:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14002ab17:	add    BYTE PTR [rax+rax*1+0x69],al
   14002ab1b:	add    BYTE PTR [rcx+0x0],ah
   14002ab1e:	ins    BYTE PTR es:[rdi],dx
   14002ab1f:	add    BYTE PTR [rdi+0x0],ch
   14002ab22:	add    BYTE PTR [eax],ah
   14002ab25:	add    BYTE PTR [rax+rax*1+0x69],dl
   14002ab29:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002ab2d:	add    BYTE PTR [rbp+0x0],ah
   14002ab30:	cmp    al,BYTE PTR [rax]
   14002ab32:	add    BYTE PTR [rax],al
   14002ab34:	outs   dx,BYTE PTR ds:[rsi]
   14002ab35:	add    BYTE PTR [rdi+0x0],ch
	...
   14002ab40:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14002ab44:	push   rsp
   14002ab45:	add    BYTE PTR [rcx+0x0],ch
   14002ab48:	ins    DWORD PTR es:[rdi],dx
   14002ab49:	add    BYTE PTR [rbp+0x0],ah
   14002ab4c:	jb     0x14002ab4e
   14002ab4e:	add    BYTE PTR [rax],al
   14002ab50:	and    al,BYTE PTR [rip+0x11993]        # 0x14003c4e9
   14002ab56:	add    BYTE PTR [rax],al
   14002ab58:	push   0x33e
   14002ab5d:	add    BYTE PTR [rax],al
   14002ab5f:	add    BYTE PTR [rax],al
   14002ab61:	add    BYTE PTR [rax],al
   14002ab63:	add    BYTE PTR [rbx],al
   14002ab65:	add    BYTE PTR [rax],al
   14002ab67:	add    BYTE PTR [rax+0x3e],dh
   14002ab6a:	add    eax,DWORD PTR [rax]
   14002ab6c:	and    BYTE PTR [rax],al
	...
   14002ab76:	add    BYTE PTR [rax],al
   14002ab78:	and    al,BYTE PTR [rip+0x11993]        # 0x14003c511
   14002ab7e:	add    BYTE PTR [rax],al
   14002ab80:	movabs al,ds:0x33e
   14002ab89:	add    BYTE PTR [rax],al
   14002ab8b:	add    BYTE PTR [rcx],al
   14002ab8d:	add    BYTE PTR [rax],al
   14002ab8f:	add    BYTE PTR [rax+0x2000033e],ch
	...
   14002ab9d:	add    BYTE PTR [rax],al
   14002ab9f:	add    BYTE PTR [rdx],ah
   14002aba1:	add    eax,0x31993
   14002aba6:	add    BYTE PTR [rax],al
   14002aba8:	enter  0x33e,0x0
	...
   14002abb4:	(bad)  
   14002abb5:	add    BYTE PTR [rax],al
   14002abb7:	add    al,ah
   14002abb9:	add    eax,DWORD PTR ds:[rax]
   14002abbc:	xor    BYTE PTR [rax],al
	...
   14002abc6:	add    BYTE PTR [rax],al
   14002abc8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003c561
   14002abce:	add    BYTE PTR [rax],al
   14002abd0:	rex (bad) 
   14002abd2:	add    eax,DWORD PTR [rax]
	...
   14002abdc:	add    eax,DWORD PTR [rax]
   14002abde:	add    BYTE PTR [rax],al
   14002abe0:	rex.W (bad) 
   14002abe2:	add    eax,DWORD PTR [rax]
   14002abe4:	xor    BYTE PTR [rax],al
	...
   14002abee:	add    BYTE PTR [rax],al
   14002abf0:	and    al,BYTE PTR [rip+0x31993]        # 0x14005c589
   14002abf6:	add    BYTE PTR [rax],al
   14002abf8:	mov    BYTE PTR [rdi],bh
   14002abfa:	add    eax,DWORD PTR [rax]
	...
   14002ac04:	(bad)  
   14002ac05:	add    BYTE PTR [rax],al
   14002ac07:	add    BYTE PTR [rax+0x4800033f],ah
	...
   14002ac15:	add    BYTE PTR [rax],al
   14002ac17:	add    BYTE PTR [rdx],ah
   14002ac19:	add    eax,0x11993
   14002ac1e:	add    BYTE PTR [rax],al
   14002ac20:	or     al,0x40
   14002ac22:	add    eax,DWORD PTR [rax]
	...
   14002ac2c:	add    eax,DWORD PTR [rax]
   14002ac2e:	add    BYTE PTR [rax],al
   14002ac30:	adc    al,0x40
   14002ac32:	add    eax,DWORD PTR [rax]
	...
   14002ac40:	jo     0x14002ac65
   14002ac42:	add    eax,DWORD PTR [rax+0x1]
   14002ac45:	add    BYTE PTR [rax],al
   14002ac47:	add    BYTE PTR [rsi+0x1400218],dh
   14002ac4d:	add    BYTE PTR [rax],al
   14002ac4f:	add    BYTE PTR [rsi+0x1400218],dh
   14002ac55:	add    BYTE PTR [rax],al
   14002ac57:	add    BYTE PTR [rsi+0x1400218],dh
   14002ac5d:	add    BYTE PTR [rax],al
   14002ac5f:	add    BYTE PTR [rsi+0x1400218],dh
   14002ac65:	add    BYTE PTR [rax],al
   14002ac67:	add    al,ch
   14002ac69:	and    eax,DWORD PTR [rbx]
   14002ac6b:	rex add DWORD PTR [rax],eax
   14002ac6e:	add    BYTE PTR [rax],al
   14002ac70:	xor    BYTE PTR [rdi+0x0],ch
   14002ac73:	rex add DWORD PTR [rax],eax
   14002ac76:	add    BYTE PTR [rax],al
   14002ac78:	nop
   14002ac79:	test   DWORD PTR [rax],eax
   14002ac7b:	rex add DWORD PTR [rax],eax
   14002ac7e:	add    BYTE PTR [rax],al
   14002ac80:	movabs al,ds:0x3000000001400054
   14002ac89:	jbe    0x14002ac8c
   14002ac8b:	rex add DWORD PTR [rax],eax
   14002ac8e:	add    BYTE PTR [rax],al
   14002ac90:	movabs al,ds:0xaa00000001400054
   14002ac99:	lar    eax,WORD PTR [rax+0x1]
   14002ac9d:	add    BYTE PTR [rax],al
   14002ac9f:	add    al,bl
   14002aca1:	(bad)  
   14002aca2:	add    al,BYTE PTR [rax+0x1]
   14002aca5:	add    BYTE PTR [rax],al
   14002aca7:	add    BYTE PTR [rdx+0x140020b],bh
   14002acad:	add    BYTE PTR [rax],al
   14002acaf:	add    al,al
   14002acb1:	or     eax,DWORD PTR [rdx]
   14002acb3:	rex add DWORD PTR [rax],eax
   14002acb6:	add    BYTE PTR [rax],al
   14002acb8:	(bad)  
   14002acb9:	or     eax,DWORD PTR [rdx]
   14002acbb:	rex add DWORD PTR [rax],eax
   14002acbe:	add    BYTE PTR [rax],al
   14002acc0:	int3   
   14002acc1:	or     eax,DWORD PTR [rdx]
   14002acc3:	rex add DWORD PTR [rax],eax
   14002acc6:	add    BYTE PTR [rax],al
   14002acc8:	ror    BYTE PTR [rbx],cl
   14002acca:	add    al,BYTE PTR [rax+0x1]
   14002accd:	add    BYTE PTR [rax],al
   14002accf:	add    BYTE PTR [rax-0x7c],ah
   14002acd2:	add    BYTE PTR [rax+0x1],al
   14002acd5:	add    BYTE PTR [rax],al
   14002acd7:	add    al,bl
   14002acd9:	or     eax,DWORD PTR [rdx]
   14002acdb:	rex add DWORD PTR [rax],eax
   14002acde:	add    BYTE PTR [rax],al
   14002ace0:	fimul  WORD PTR [rbx]
   14002ace2:	add    al,BYTE PTR [rax+0x1]
   14002ace5:	add    BYTE PTR [rax],al
   14002ace7:	add    ah,ah
   14002ace9:	or     eax,DWORD PTR [rdx]
   14002aceb:	rex add DWORD PTR [rax],eax
   14002acee:	add    BYTE PTR [rax],al
   14002acf0:	(bad)  
   14002acf1:	or     eax,0x14002
   14002acf6:	add    BYTE PTR [rax],al
   14002acf8:	add    BYTE PTR [rax+0x0],dh
   14002acfb:	rex add DWORD PTR [rax],eax
   14002acfe:	add    BYTE PTR [rax],al
   14002ad00:	test   BYTE PTR [rbx],0x2
   14002ad03:	rex add DWORD PTR [rax],eax
   14002ad06:	add    BYTE PTR [rax],al
   14002ad08:	cld    
   14002ad09:	or     eax,DWORD PTR [rdx]
   14002ad0b:	rex add DWORD PTR [rax],eax
   14002ad0e:	add    BYTE PTR [rax],al
   14002ad10:	add    cl,BYTE PTR [rdx+rax*1]
   14002ad13:	rex add DWORD PTR [rax],eax
   14002ad16:	add    BYTE PTR [rax],al
   14002ad18:	or     BYTE PTR [rdx+rax*1],cl
   14002ad1b:	rex add DWORD PTR [rax],eax
   14002ad1e:	add    BYTE PTR [rax],al
   14002ad20:	pop    rsi
   14002ad21:	or     eax,0x14002
   14002ad26:	add    BYTE PTR [rax],al
   14002ad28:	fs or  eax,0x14002
   14002ad2e:	add    BYTE PTR [rax],al
   14002ad30:	jo     0x14002ad3f
   14002ad32:	add    al,BYTE PTR [rax+0x1]
   14002ad35:	add    BYTE PTR [rax],al
   14002ad37:	add    BYTE PTR [rdx+0xd],ch
   14002ad3a:	add    al,BYTE PTR [rax+0x1]
   14002ad3d:	add    BYTE PTR [rax],al
   14002ad3f:	add    BYTE PTR [rsi+0xd],dh
   14002ad42:	add    al,BYTE PTR [rax+0x1]
   14002ad45:	add    BYTE PTR [rax],al
   14002ad47:	add    BYTE PTR [rbp+rcx*1+0x2],bh
   14002ad4b:	rex add DWORD PTR [rax],eax
   14002ad4e:	add    BYTE PTR [rax],al
   14002ad50:	(bad)  
   14002ad51:	or     eax,0x14002
   14002ad56:	add    BYTE PTR [rax],al
   14002ad58:	mov    BYTE PTR [rip+0x14002],cl        # 0x14003ed60
   14002ad5e:	add    BYTE PTR [rax],al
   14002ad60:	mov    cs,WORD PTR [rip+0x14002]        # 0x14003ed68
   14002ad66:	add    BYTE PTR [rax],al
   14002ad68:	xchg   esp,eax
   14002ad69:	or     eax,0x14002
   14002ad6e:	add    BYTE PTR [rax],al
   14002ad70:	(bad)  
   14002ad71:	or     eax,0x14002
   14002ad76:	add    BYTE PTR [rax],al
   14002ad78:	movabs al,ds:0xa60000000140020d
   14002ad81:	or     eax,0x14002
   14002ad86:	add    BYTE PTR [rax],al
   14002ad88:	lods   al,BYTE PTR ds:[rsi]
   14002ad89:	or     eax,0x14002
   14002ad8e:	add    BYTE PTR [rax],al
   14002ad90:	mov    dl,0xd
   14002ad92:	add    al,BYTE PTR [rax+0x1]
   14002ad95:	add    BYTE PTR [rax],al
   14002ad97:	add    BYTE PTR [rax+0x140020d],bh
   14002ad9d:	add    BYTE PTR [rax],al
   14002ad9f:	add    BYTE PTR [rsi+0x140020d],bh
   14002ada5:	add    BYTE PTR [rax],al
   14002ada7:	add    dl,cl
   14002ada9:	or     eax,0x14002
   14002adae:	add    BYTE PTR [rax],al
   14002adb0:	ror    BYTE PTR [rip+0x14002],1        # 0x14003edb8
   14002adb6:	add    BYTE PTR [rax],al
   14002adb8:	(bad)  
   14002adb9:	or     eax,0x14002
   14002adbe:	add    BYTE PTR [rax],al
   14002adc0:	fmul   QWORD PTR [rip+0x14002]        # 0x14003edc8
   14002adc6:	add    BYTE PTR [rax],al
   14002adc8:	loop   0x14002add7
   14002adca:	add    al,BYTE PTR [rax+0x1]
   14002adcd:	add    BYTE PTR [rax],al
   14002adcf:	add    al,ch
   14002add1:	or     eax,0x14002
   14002add6:	add    BYTE PTR [rax],al
   14002add8:	out    dx,al
   14002add9:	or     eax,0x14002
   14002adde:	add    BYTE PTR [rax],al
   14002ade0:	hlt    
   14002ade1:	or     eax,0x14002
   14002ade6:	add    BYTE PTR [rax],al
   14002ade8:	cli    
   14002ade9:	or     eax,0x14002
   14002adee:	add    BYTE PTR [rax],al
   14002adf0:	add    BYTE PTR [rsi],cl
   14002adf2:	add    al,BYTE PTR [rax+0x1]
   14002adf5:	add    BYTE PTR [rax],al
   14002adf7:	add    BYTE PTR [rsi],al
   14002adf9:	(bad)  
   14002adfa:	add    al,BYTE PTR [rax+0x1]
   14002adfd:	add    BYTE PTR [rax],al
   14002adff:	add    BYTE PTR [rsi+rcx*1],cl
   14002ae02:	add    al,BYTE PTR [rax+0x1]
   14002ae05:	add    BYTE PTR [rax],al
   14002ae07:	add    BYTE PTR [rdx],dl
   14002ae09:	(bad)  
   14002ae0a:	add    al,BYTE PTR [rax+0x1]
   14002ae0d:	add    BYTE PTR [rax],al
   14002ae0f:	add    BYTE PTR [rax],bl
   14002ae11:	(bad)  
   14002ae12:	add    al,BYTE PTR [rax+0x1]
   14002ae15:	add    BYTE PTR [rax],al
   14002ae17:	add    BYTE PTR [rsi],bl
   14002ae19:	(bad)  
   14002ae1a:	add    al,BYTE PTR [rax+0x1]
   14002ae1d:	add    BYTE PTR [rax],al
   14002ae1f:	add    BYTE PTR [rsi+rcx*1],ah
   14002ae22:	add    al,BYTE PTR [rax+0x1]
   14002ae25:	add    BYTE PTR [rax],al
   14002ae27:	add    BYTE PTR [rdx],ch
   14002ae29:	(bad)  
   14002ae2a:	add    al,BYTE PTR [rax+0x1]
   14002ae2d:	add    BYTE PTR [rax],al
   14002ae2f:	add    BYTE PTR [rax],dh
   14002ae31:	(bad)  
   14002ae32:	add    al,BYTE PTR [rax+0x1]
   14002ae35:	add    BYTE PTR [rax],al
   14002ae37:	add    BYTE PTR [rsi],dh
   14002ae39:	(bad)  
   14002ae3a:	add    al,BYTE PTR [rax+0x1]
   14002ae3d:	add    BYTE PTR [rax],al
   14002ae3f:	add    BYTE PTR [rsi+rcx*1],bh
   14002ae42:	add    al,BYTE PTR [rax+0x1]
   14002ae45:	add    BYTE PTR [rax],al
   14002ae47:	add    BYTE PTR [rdx+0xe],al
   14002ae4a:	add    al,BYTE PTR [rax+0x1]
   14002ae4d:	add    BYTE PTR [rax],al
   14002ae4f:	add    BYTE PTR [rax+0xe],cl
   14002ae52:	add    al,BYTE PTR [rax+0x1]
   14002ae55:	add    BYTE PTR [rax],al
   14002ae57:	add    BYTE PTR [rsi+0xe],cl
   14002ae5a:	add    al,BYTE PTR [rax+0x1]
   14002ae5d:	add    BYTE PTR [rax],al
   14002ae5f:	add    BYTE PTR [rsi+rcx*1+0x2],dl
   14002ae63:	rex add DWORD PTR [rax],eax
   14002ae66:	add    BYTE PTR [rax],al
   14002ae68:	pop    rdx
   14002ae69:	(bad)  
   14002ae6a:	add    al,BYTE PTR [rax+0x1]
   14002ae6d:	add    BYTE PTR [rax],al
   14002ae6f:	add    BYTE PTR [rax+0xe],ah
   14002ae72:	add    al,BYTE PTR [rax+0x1]
   14002ae75:	add    BYTE PTR [rax],al
   14002ae77:	add    BYTE PTR [rsi+0xe],ah
   14002ae7a:	add    al,BYTE PTR [rax+0x1]
   14002ae7d:	add    BYTE PTR [rax],al
   14002ae7f:	add    BYTE PTR [rax],dl
   14002ae81:	outs   dx,BYTE PTR ds:[rsi]
   14002ae82:	add    BYTE PTR [rax+0x1],al
   14002ae85:	add    BYTE PTR [rax],al
   14002ae87:	add    BYTE PTR [rax],ah
   14002ae89:	push   rbx
   14002ae8a:	add    BYTE PTR [rax+0x1],al
   14002ae8d:	add    BYTE PTR [rax],al
   14002ae8f:	add    BYTE PTR [rax+0x53],al
   14002ae92:	add    BYTE PTR [rax+0x1],al
   14002ae95:	add    BYTE PTR [rax],al
   14002ae97:	add    BYTE PTR [rdi+rcx*1+0x14002],ah
   14002ae9e:	add    BYTE PTR [rax],al
   14002aea0:	jb     0x14002aeb0
   14002aea2:	add    al,BYTE PTR [rax+0x1]
   14002aea5:	add    BYTE PTR [rax],al
   14002aea7:	add    BYTE PTR [rax+0xe],bh
   14002aeaa:	add    al,BYTE PTR [rax+0x1]
   14002aead:	add    BYTE PTR [rax],al
   14002aeaf:	add    BYTE PTR [rsi+0xe],bh
   14002aeb2:	add    al,BYTE PTR [rax+0x1]
   14002aeb5:	add    BYTE PTR [rax],al
   14002aeb7:	add    BYTE PTR [rsi+rcx*1+0x14002],al
   14002aebe:	add    BYTE PTR [rax],al
   14002aec0:	mov    cl,BYTE PTR [rsi]
   14002aec2:	add    al,BYTE PTR [rax+0x1]
   14002aec5:	add    BYTE PTR [rax],al
   14002aec7:	add    BYTE PTR [rax+0x140020e],dl
   14002aecd:	add    BYTE PTR [rax],al
   14002aecf:	add    BYTE PTR [rsi+0x140020e],dl
   14002aed5:	add    BYTE PTR [rax],al
   14002aed7:	add    BYTE PTR [rsi+rcx*1+0x14002],bl
   14002aede:	add    BYTE PTR [rax],al
   14002aee0:	movabs ds:0xa80000000140020e,al
   14002aee9:	(bad)  
   14002aeea:	add    al,BYTE PTR [rax+0x1]
   14002aeed:	add    BYTE PTR [rax],al
   14002aeef:	add    BYTE PTR [rsi+0x140020e],ch
   14002aef5:	add    BYTE PTR [rax],al
   14002aef7:	add    BYTE PTR [rsi+rcx*1+0x14002],dh
   14002aefe:	add    BYTE PTR [rax],al
   14002af00:	mov    edx,0x140020e
   14002af05:	add    BYTE PTR [rax],al
   14002af07:	add    al,al
   14002af09:	(bad)  
   14002af0a:	add    al,BYTE PTR [rax+0x1]
   14002af0d:	add    BYTE PTR [rax],al
   14002af0f:	add    BYTE PTR [rax+0x140020f],dh
   14002af15:	add    BYTE PTR [rax],al
   14002af17:	add    dl,dl
   14002af19:	(bad)  
   14002af1a:	add    al,BYTE PTR [rax+0x1]
   14002af1d:	add    BYTE PTR [rax],al
   14002af1f:	add    dh,bl
   14002af21:	(bad)  
   14002af22:	add    al,BYTE PTR [rax+0x1]
   14002af25:	add    BYTE PTR [rax],al
   14002af27:	add    BYTE PTR [rdx],cl
   14002af29:	adc    BYTE PTR [rdx],al
   14002af2b:	rex add DWORD PTR [rax],eax
   14002af2e:	add    BYTE PTR [rax],al
   14002af30:	mov    dh,0xf
   14002af32:	add    al,BYTE PTR [rax+0x1]
   14002af35:	add    BYTE PTR [rax],al
   14002af37:	add    BYTE PTR [rdi+rcx*1+0x14002],bh
   14002af3e:	add    BYTE PTR [rax],al
   14002af40:	xor    BYTE PTR [rdx+0x0],bh
   14002af43:	rex add DWORD PTR [rax],eax
   14002af46:	add    BYTE PTR [rax],al
   14002af48:	or     BYTE PTR [rdi],0x2
   14002af4b:	rex add DWORD PTR [rax],eax
   14002af4e:	add    BYTE PTR [rax],al
   14002af50:	mov    WORD PTR [rdi],cs
   14002af52:	add    al,BYTE PTR [rax+0x1]
   14002af55:	add    BYTE PTR [rax],al
   14002af57:	add    BYTE PTR [rsi+0x140020f],al
   14002af5d:	add    BYTE PTR [rax],al
   14002af5f:	add    BYTE PTR [rsi],cl
   14002af61:	or     al,0x2
   14002af63:	rex add DWORD PTR [rax],eax
   14002af66:	add    BYTE PTR [rax],al
   14002af68:	sub    BYTE PTR [rbp+0x0],0x40
   14002af6c:	add    DWORD PTR [rax],eax
   14002af6e:	add    BYTE PTR [rax],al
   14002af70:	xchg   edx,eax
   14002af71:	lar    eax,WORD PTR [rax+0x1]
   14002af75:	add    BYTE PTR [rax],al
   14002af77:	add    BYTE PTR [rax+0x140020f],bl
   14002af7d:	add    BYTE PTR [rax],al
   14002af7f:	add    BYTE PTR [rax+0x140007f],dh
   14002af85:	add    BYTE PTR [rax],al
   14002af87:	add    dl,al
   14002af89:	lar    eax,WORD PTR [rax+0x1]
   14002af8d:	add    BYTE PTR [rax],al
   14002af8f:	add    al,dl
   14002af91:	push   0x0
   14002af93:	rex add DWORD PTR [rax],eax
   14002af96:	add    BYTE PTR [rax],al
   14002af98:	(bad)  
   14002af99:	adc    BYTE PTR [rdx],al
   14002af9b:	rex add DWORD PTR [rax],eax
   14002af9e:	add    BYTE PTR [rax],al
   14002afa0:	sbb    al,0x10
   14002afa2:	add    al,BYTE PTR [rax+0x1]
   14002afa5:	add    BYTE PTR [rax],al
   14002afa7:	add    BYTE PTR [rax+0x6e],al
   14002afaa:	add    BYTE PTR [rax+0x1],al
   14002afad:	add    BYTE PTR [rax],al
   14002afaf:	add    BYTE PTR [rax+rdx*1],dh
   14002afb2:	add    al,BYTE PTR [rax+0x1]
   14002afb5:	add    BYTE PTR [rax],al
   14002afb7:	add    BYTE PTR [rdx],bh
   14002afb9:	adc    BYTE PTR [rdx],al
   14002afbb:	rex add DWORD PTR [rax],eax
   14002afbe:	add    BYTE PTR [rax],al
   14002afc0:	adc    BYTE PTR [rdx],al
   14002afc3:	rex add DWORD PTR [rax],eax
   14002afc6:	add    BYTE PTR [rax],al
   14002afc8:	rex.RX adc BYTE PTR [rdx],r8b
   14002afcb:	rex add DWORD PTR [rax],eax
   14002afce:	add    BYTE PTR [rax],al
   14002afd0:	rex.WR adc BYTE PTR [rdx],r8b
   14002afd3:	rex add DWORD PTR [rax],eax
   14002afd6:	add    BYTE PTR [rax],al
   14002afd8:	push   rdx
   14002afd9:	adc    BYTE PTR [rdx],al
   14002afdb:	rex add DWORD PTR [rax],eax
   14002afde:	add    BYTE PTR [rax],al
   14002afe0:	pop    rax
   14002afe1:	adc    BYTE PTR [rdx],al
   14002afe3:	rex add DWORD PTR [rax],eax
   14002afe6:	add    BYTE PTR [rax],al
   14002afe8:	pop    rsi
   14002afe9:	adc    BYTE PTR [rdx],al
   14002afeb:	rex add DWORD PTR [rax],eax
   14002afee:	add    BYTE PTR [rax],al
   14002aff0:	adc    BYTE PTR fs:[rdx],al
   14002aff3:	rex add DWORD PTR [rax],eax
   14002aff6:	add    BYTE PTR [rax],al
   14002aff8:	push   0x10
   14002affa:	add    al,BYTE PTR [rax+0x1]
   14002affd:	add    BYTE PTR [rax],al
   14002afff:	add    BYTE PTR [rax+0x10],dh
   14002b002:	add    al,BYTE PTR [rax+0x1]
   14002b005:	add    BYTE PTR [rax],al
   14002b007:	add    BYTE PTR [rsi+0x10],dh
   14002b00a:	add    al,BYTE PTR [rax+0x1]
   14002b00d:	add    BYTE PTR [rax],al
   14002b00f:	add    BYTE PTR [rax+rdx*1+0x2],bh
   14002b013:	rex add DWORD PTR [rax],eax
   14002b016:	add    BYTE PTR [rax],al
   14002b018:	(bad)  
   14002b019:	adc    BYTE PTR [rdx],al
   14002b01b:	rex add DWORD PTR [rax],eax
   14002b01e:	add    BYTE PTR [rax],al
   14002b020:	mov    BYTE PTR [rax],dl
   14002b022:	add    al,BYTE PTR [rax+0x1]
   14002b025:	add    BYTE PTR [rax],al
   14002b027:	add    BYTE PTR [rsi+0x1400210],cl
   14002b02d:	add    BYTE PTR [rax],al
   14002b02f:	add    BYTE PTR [rax+0x6a],al
   14002b032:	add    BYTE PTR [rax+0x1],al
   14002b035:	add    BYTE PTR [rax],al
   14002b037:	add    al,dh
   14002b039:	add    BYTE PTR [rax],0x40
   14002b03c:	add    DWORD PTR [rax],eax
   14002b03e:	add    BYTE PTR [rax],al
   14002b040:	lock push 0x0
   14002b043:	rex add DWORD PTR [rax],eax
   14002b046:	add    BYTE PTR [rax],al
   14002b048:	and    BYTE PTR [rax+0x0],dh
   14002b04b:	rex add DWORD PTR [rax],eax
   14002b04e:	add    BYTE PTR [rax],al
   14002b050:	adc    BYTE PTR [rdx+0x0],dh
   14002b053:	rex add DWORD PTR [rax],eax
   14002b056:	add    BYTE PTR [rax],al
   14002b058:	lock jae 0x14002b05b
   14002b05b:	rex add DWORD PTR [rax],eax
   14002b05e:	add    BYTE PTR [rax],al
   14002b060:	jo     0x14002b0d6
   14002b062:	add    BYTE PTR [rax+0x1],al
   14002b065:	add    BYTE PTR [rax],al
   14002b067:	add    al,ch
   14002b069:	and    al,0x3
   14002b06b:	rex add DWORD PTR [rax],eax
   14002b06e:	add    BYTE PTR [rax],al
   14002b070:	(bad)  
   14002b071:	lar    eax,WORD PTR [rax+0x1]
   14002b075:	add    BYTE PTR [rax],al
   14002b077:	add    ah,dl
   14002b079:	lar    eax,WORD PTR [rax+0x1]
   14002b07d:	add    BYTE PTR [rax],al
   14002b07f:	add    dl,bl
   14002b081:	lar    eax,WORD PTR [rax+0x1]
   14002b085:	add    BYTE PTR [rax],al
   14002b087:	add    al,ah
   14002b089:	lar    eax,WORD PTR [rax+0x1]
   14002b08d:	add    BYTE PTR [rax],al
   14002b08f:	add    dh,ah
   14002b091:	lar    eax,WORD PTR [rax+0x1]
   14002b095:	add    BYTE PTR [rax],al
   14002b097:	add    ah,ch
   14002b099:	lar    eax,WORD PTR [rax+0x1]
   14002b09d:	add    BYTE PTR [rax],al
   14002b09f:	add    dl,dh
   14002b0a1:	lar    eax,WORD PTR [rax+0x1]
   14002b0a5:	add    BYTE PTR [rax],al
   14002b0a7:	add    BYTE PTR [rax+0x1400084],al
   14002b0ad:	add    BYTE PTR [rax],al
   14002b0af:	add    al,bh
   14002b0b1:	lar    eax,WORD PTR [rax+0x1]
   14002b0b5:	add    BYTE PTR [rax],al
   14002b0b7:	add    BYTE PTR [rax],dl
   14002b0b9:	adc    BYTE PTR [rdx],al
   14002b0bb:	rex add DWORD PTR [rax],eax
   14002b0be:	add    BYTE PTR [rax],al
   14002b0c0:	adc    BYTE PTR [rip+0x14003],ah        # 0x14003f0c9
   14002b0c6:	add    BYTE PTR [rax],al
   14002b0c8:	rol    BYTE PTR [rcx+0x14000],0x0
   14002b0cf:	add    al,dh
   14002b0d1:	add    DWORD PTR [rax],0x140
   14002b0d7:	add    BYTE PTR [rax-0x7e],dh
   14002b0da:	add    BYTE PTR [rax+0x1],al
   14002b0dd:	add    BYTE PTR [rax],al
   14002b0df:	add    BYTE PTR [rax+0x1400082],dl
	...
   14002b105:	add    BYTE PTR [rax],al
   14002b107:	add    BYTE PTR [rax+0x1400210],ah
   14002b10d:	add    BYTE PTR [rax],al
   14002b10f:	add    al,ch
   14002b111:	mov    al,0x2
   14002b113:	rex add DWORD PTR [rax],eax
	...
   14002b11e:	add    BYTE PTR [rax],al
   14002b120:	add    BYTE PTR [rdx],r15b
   14002b123:	add    BYTE PTR [rax],ch
   14002b125:	add    BYTE PTR [rcx+0x0],al
   14002b128:	cmp    eax,DWORD PTR [rax]
   14002b12a:	rex.WRXB add BYTE PTR [r9+0x0],r9b
   14002b12e:	rex.XB add BYTE PTR [r9+0x0],cl
   14002b132:	cmp    eax,DWORD PTR [rax]
   14002b134:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14002b138:	cmp    eax,DWORD PTR [rax]
   14002b13a:	cmp    eax,DWORD PTR [rax]
   14002b13c:	cmp    eax,DWORD PTR [rax]
   14002b13e:	push   rbx
   14002b13f:	add    BYTE PTR [rcx+0x0],bl
   14002b142:	sub    DWORD PTR [rax],eax
   14002b144:	sub    BYTE PTR [rax],al
   14002b146:	add    BYTE PTR [r11],dil
   14002b149:	add    BYTE PTR [rdi+0x0],cl
   14002b14c:	rex.WB add BYTE PTR [r11+0x0],al
   14002b150:	rex.WB add BYTE PTR [r11],dil
   14002b153:	add    BYTE PTR [rdi+0x0],al
   14002b156:	add    BYTE PTR [r11],dil
   14002b159:	add    BYTE PTR [rbx],bh
   14002b15b:	add    BYTE PTR [rbx],bh
   14002b15d:	add    BYTE PTR [rdi+0x0],dl
   14002b160:	add    BYTE PTR [rcx],r13b
   14002b163:	add    BYTE PTR [rax],ch
   14002b165:	add    BYTE PTR [rcx+0x0],al
   14002b168:	cmp    eax,DWORD PTR [rax]
   14002b16a:	rex.WRXB add BYTE PTR [r9+0x0],r9b
   14002b16e:	rex.XB add BYTE PTR [r9+0x0],cl
   14002b172:	cmp    eax,DWORD PTR [rax]
   14002b174:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14002b178:	cmp    eax,DWORD PTR [rax]
   14002b17a:	cmp    eax,DWORD PTR [rax]
   14002b17c:	cmp    eax,DWORD PTR [rax]
   14002b17e:	rex.X add BYTE PTR [rcx+0x0],al
   14002b182:	sub    DWORD PTR [rax],eax
   14002b184:	add    BYTE PTR [rax],al
   14002b186:	add    BYTE PTR [rax],al
   14002b188:	sub    al,BYTE PTR [rax]
   14002b18a:	add    BYTE PTR [rax],al
   14002b18c:	sub    al,BYTE PTR [rax]
   14002b18e:	add    BYTE PTR [rax],al
   14002b190:	sub    al,BYTE PTR [rax]
   14002b192:	add    BYTE PTR [rax],al
   14002b194:	sub    al,BYTE PTR [rax]
   14002b196:	add    BYTE PTR [rax],al
   14002b198:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002b19c:	jb     0x14002b19e
   14002b19e:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14002b1a3:	add    BYTE PTR [rdx+0x0],ah
   14002b1a6:	imul   eax,DWORD PTR [rax],0x6e
   14002b1ac:	add    BYTE PTR [rax],al
   14002b1ae:	add    BYTE PTR [rax],al
   14002b1b0:	push   rax
   14002b1b1:	add    BYTE PTR [rdx+0x0],dh
   14002b1b4:	outs   dx,DWORD PTR ds:[rsi]
   14002b1b5:	add    BYTE PTR [rsi+0x0],ah
   14002b1b8:	imul   eax,DWORD PTR [rax],0x65006c
   14002b1be:	add    BYTE PTR [rax],al
   14002b1c0:	push   rax
   14002b1c1:	add    BYTE PTR [rdx+0x0],dh
   14002b1c4:	outs   dx,DWORD PTR ds:[rsi]
   14002b1c5:	add    BYTE PTR [rsi+0x0],ah
   14002b1c8:	imul   eax,DWORD PTR [rax],0x65006c
   14002b1ce:	add    BYTE PTR [rax],al
   14002b1d0:	pop    rdx
   14002b1d1:	add    BYTE PTR [rdx+0x0],bl
   14002b1d4:	pop    rdx
   14002b1d5:	add    BYTE PTR [rdx+0x0],bl
   14002b1d8:	pop    rdx
   14002b1d9:	add    BYTE PTR [rdx+0x0],bl
   14002b1dc:	add    BYTE PTR [rax],al
   14002b1de:	add    BYTE PTR [rax],al
   14002b1e0:	push   rax
   14002b1e1:	add    BYTE PTR [rdx+0x0],dh
   14002b1e4:	outs   dx,DWORD PTR ds:[rsi]
   14002b1e5:	add    BYTE PTR [rsi+0x0],ah
   14002b1e8:	imul   eax,DWORD PTR [rax],0x65006c
   14002b1ee:	add    BYTE PTR [rax],al
   14002b1f0:	rex.XB add BYTE PTR [r10],dil
   14002b1f3:	add    BYTE PTR [rax+rax*1+0x74],bl
   14002b1f7:	add    BYTE PTR [rbp+0x0],ah
   14002b1fa:	ins    DWORD PTR es:[rdi],dx
   14002b1fb:	add    BYTE PTR [rax+0x0],dh
   14002b1fe:	add    BYTE PTR [rax],al
   14002b200:	push   rsp
   14002b201:	add    BYTE PTR [rdi+0x0],ch
   14002b204:	je     0x14002b206
   14002b206:	(bad)  
   14002b207:	add    BYTE PTR [rax+rax*1+0x4c],ch
   14002b20b:	add    BYTE PTR [rcx+0x0],ah
   14002b20e:	jne    0x14002b210
   14002b210:	outs   dx,BYTE PTR ds:[rsi]
   14002b211:	add    BYTE PTR [rbx+0x0],ah
   14002b214:	push   0x6f004300
   14002b219:	add    BYTE PTR [rbp+0x0],dh
   14002b21c:	outs   dx,BYTE PTR ds:[rsi]
   14002b21d:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002b221:	add    BYTE PTR [rax],al
   14002b223:	add    BYTE PTR [rax],al
   14002b225:	add    BYTE PTR [rax],al
   14002b227:	add    BYTE PTR [rax+0x0],dl
   14002b22a:	jb     0x14002b22c
   14002b22c:	outs   dx,DWORD PTR ds:[rsi]
   14002b22d:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002b231:	add    BYTE PTR [rbx+0x0],ah
   14002b234:	je     0x14002b236
   14002b236:	push   rsp
   14002b237:	add    BYTE PTR [rcx+0x0],ch
   14002b23a:	je     0x14002b23c
   14002b23c:	ins    BYTE PTR es:[rdi],dx
   14002b23d:	add    BYTE PTR [rbp+0x0],ah
	...
   14002b248:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14002b24c:	ins    DWORD PTR es:[rdi],dx
   14002b24d:	add    BYTE PTR [rax+rax*1+0x61],al
   14002b251:	add    BYTE PTR [rcx+0x0],bh
   14002b254:	jae    0x14002b256
   14002b256:	add    BYTE PTR [rax],al
   14002b258:	push   rsp
   14002b259:	add    BYTE PTR [rdi+0x0],ch
   14002b25c:	je     0x14002b25e
   14002b25e:	(bad)  
   14002b25f:	add    BYTE PTR [rax+rax*1+0x44],ch
   14002b263:	add    BYTE PTR [rcx+0x0],ah
   14002b266:	jns    0x14002b268
   14002b268:	jae    0x14002b26a
   14002b26a:	add    BYTE PTR [rax],al
   14002b26c:	add    BYTE PTR [rax],al
   14002b26e:	add    BYTE PTR [rax],al
   14002b270:	push   rbx
   14002b271:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002b275:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002b279:	add    BYTE PTR [rbx+0x0],dh
   14002b27c:	add    BYTE PTR [rax],al
   14002b27e:	add    BYTE PTR [rax],al
   14002b280:	push   rbx
   14002b281:	add    BYTE PTR [rsi+0x0],cl
   14002b284:	add    BYTE PTR [rax],al
   14002b286:	add    BYTE PTR [rax],al
   14002b288:	push   rbx
   14002b289:	add    BYTE PTR [rsi+0x0],cl
   14002b28c:	rex.RX add BYTE PTR [rax],r8b
   14002b28f:	add    BYTE PTR [rcx+0x0],al
   14002b292:	movsxd eax,DWORD PTR [rax]
   14002b294:	je     0x14002b296
   14002b296:	imul   eax,DWORD PTR [rax],0x610076
   14002b29c:	je     0x14002b29e
   14002b29e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b2a4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002b2a8:	add    BYTE PTR fs:[rbp+0x0],ah
   14002b2ac:	add    BYTE PTR [rax],al
   14002b2ae:	add    BYTE PTR [rax],al
   14002b2b0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002b2b4:	jae    0x14002b2b6
   14002b2b6:	je     0x14002b2b8
   14002b2b8:	(bad)  
   14002b2b9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002b2bd:	add    BYTE PTR [rcx+0x0],ah
   14002b2c0:	je     0x14002b2c2
   14002b2c2:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b2c8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002b2cc:	add    BYTE PTR fs:[rbp+0x0],ah
   14002b2d0:	add    BYTE PTR [rax],al
   14002b2d2:	add    BYTE PTR [rax],al
   14002b2d4:	push   rbx
   14002b2d5:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002b2d9:	add    BYTE PTR [rax],al
   14002b2db:	add    BYTE PTR [rax+rax*1+0x43],cl
	...
   14002b2e7:	add    BYTE PTR [rax+rax*1+0x69],cl
   14002b2eb:	add    BYTE PTR [rbx+0x0],ah
   14002b2ee:	add    BYTE PTR gs:[rsi+0x0],ch
   14002b2f2:	jae    0x14002b2f4
   14002b2f4:	add    BYTE PTR gs:[rax],al
   14002b2f7:	add    BYTE PTR [rbx+0x0],dl
   14002b2fa:	push   rsi
   14002b2fb:	add    BYTE PTR [rdx+0x0],dl
   14002b2fe:	rex.XB add BYTE PTR [r11+0x0],cl
   14002b302:	push   rbx
   14002b303:	add    BYTE PTR [rax],al
   14002b305:	add    BYTE PTR [rax],al
   14002b307:	add    BYTE PTR [rax+0x0],dl
   14002b30a:	rex.XB add BYTE PTR [r9+0x0],cl
   14002b30e:	add    BYTE PTR [rax],r8b
   14002b311:	add    BYTE PTR [rax],al
   14002b313:	add    BYTE PTR [rax],al
   14002b315:	add    BYTE PTR [rax],al
   14002b317:	add    BYTE PTR [rax+0x0],dl
   14002b31a:	rex.XB add BYTE PTR [r9+0x0],cl
   14002b31e:	add    BYTE PTR [rsi+0x0],r8b
   14002b322:	add    BYTE PTR [rax],al
   14002b324:	add    BYTE PTR [rax],al
   14002b326:	add    BYTE PTR [rax],al
   14002b328:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002b32c:	outs   dx,BYTE PTR ds:[rsi]
   14002b32d:	add    BYTE PTR [rdi+0x0],ah
   14002b330:	push   rax
   14002b331:	add    BYTE PTR [rcx+0x0],ah
   14002b334:	je     0x14002b336
   14002b336:	push   0x0
   14002b33b:	add    BYTE PTR [rax],al
   14002b33d:	add    BYTE PTR [rax],al
   14002b33f:	add    BYTE PTR [rax+rax*1+0x61],cl
   14002b343:	add    BYTE PTR [rsi+0x0],ch
   14002b346:	add    BYTE PTR [ebx+0x0],al
   14002b34a:	outs   dx,DWORD PTR ds:[rsi]
   14002b34b:	add    BYTE PTR [rax+rax*1+0x65],ah
	...
   14002b357:	add    BYTE PTR [rdx+0x0],dl
   14002b35a:	add    BYTE PTR gs:[rdi+0x0],ah
   14002b35e:	push   rsp
   14002b35f:	add    BYTE PTR [rdx+0x0],dh
   14002b362:	imul   eax,DWORD PTR [rax],0x670067
   14002b368:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b36c:	add    BYTE PTR [rax],al
   14002b36e:	add    BYTE PTR [rax],al
   14002b370:	push   rdx
   14002b371:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002b375:	add    BYTE PTR [rax],al
   14002b377:	add    BYTE PTR [rbx+0x0],dl
   14002b37a:	outs   dx,DWORD PTR ds:[rsi]
   14002b37b:	add    BYTE PTR [rbp+0x0],dh
   14002b37e:	jb     0x14002b380
   14002b380:	movsxd eax,DWORD PTR [rax]
   14002b382:	add    BYTE PTR gs:[rcx+0x0],cl
   14002b386:	add    BYTE PTR [rax],r8b
   14002b389:	add    BYTE PTR [rax],al
   14002b38b:	add    BYTE PTR [rax],al
   14002b38d:	add    BYTE PTR [rax],al
   14002b38f:	add    BYTE PTR [rax+0x0],dl
   14002b392:	(bad)  
   14002b393:	add    BYTE PTR [rdx+0x0],dh
   14002b396:	add    BYTE PTR gs:[rsi+0x0],ch
   14002b39a:	je     0x14002b39c
   14002b39c:	push   rbx
   14002b39d:	add    BYTE PTR [rdi+0x0],ch
   14002b3a0:	jne    0x14002b3a2
   14002b3a2:	jb     0x14002b3a4
   14002b3a4:	movsxd eax,DWORD PTR [rax]
   14002b3a6:	add    BYTE PTR gs:[rcx+0x0],cl
   14002b3aa:	add    BYTE PTR [rax],r8b
   14002b3ad:	add    BYTE PTR [rax],al
   14002b3af:	add    BYTE PTR [rcx+0x0],cl
   14002b3b2:	jae    0x14002b3b4
   14002b3b4:	push   rax
   14002b3b5:	add    BYTE PTR [rdx+0x0],dh
   14002b3b8:	outs   dx,DWORD PTR ds:[rsi]
   14002b3b9:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002b3bd:	add    BYTE PTR [rbx+0x0],ah
   14002b3c0:	je     0x14002b3c2
   14002b3c2:	add    BYTE PTR [rax],al
   14002b3c4:	add    BYTE PTR [rax],al
   14002b3c6:	add    BYTE PTR [rax],al
   14002b3c8:	rex.W add BYTE PTR [rdi+0x0],dl
   14002b3cc:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002b3d1:	add    BYTE PTR [rax],al
   14002b3d3:	add    BYTE PTR [rax],al
   14002b3d5:	add    BYTE PTR [rax],al
   14002b3d7:	add    BYTE PTR [rcx+0x0],cl
   14002b3da:	jae    0x14002b3dc
   14002b3dc:	push   rdx
   14002b3dd:	add    BYTE PTR [rbp+0x0],ah
   14002b3e0:	add    BYTE PTR [ecx+0x0],ch
   14002b3e4:	jae    0x14002b3e6
   14002b3e6:	je     0x14002b3e8
   14002b3e8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b3ec:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002b3f1:	add    BYTE PTR [rax],al
   14002b3f3:	add    BYTE PTR [rax],al
   14002b3f5:	add    BYTE PTR [rax],al
   14002b3f7:	add    BYTE PTR [rax+rax*1+0x45],al
   14002b3fb:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002b3ff:	add    BYTE PTR [rbx+0x0],al
   14002b402:	push   rbp
   14002b403:	add    BYTE PTR [rbx+0x0],dl
   14002b406:	push   rsp
   14002b407:	add    BYTE PTR [rcx+0x0],cl
   14002b40a:	add    BYTE PTR [rax],r8b
   14002b40d:	add    BYTE PTR [rax],al
   14002b40f:	add    BYTE PTR [rax+rax*1+0x45],al
   14002b413:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002b417:	add    BYTE PTR [rax+0x0],dl
   14002b41a:	push   rdx
   14002b41b:	add    BYTE PTR [rdi+0x0],cl
   14002b41e:	add    BYTE PTR [rbp+0x0],r10b
   14002b422:	add    BYTE PTR [r8+r8*1+0x0],dl
   14002b427:	add    BYTE PTR [rax+rax*1+0x45],al
   14002b42b:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002b42f:	add    BYTE PTR [rbx+0x0],dl
   14002b432:	add    BYTE PTR [r10+0x0],r10b
   14002b436:	push   rsi
   14002b437:	add    BYTE PTR [rcx+0x0],cl
   14002b43a:	rex.XB add BYTE PTR [r13+0x0],al
   14002b43e:	push   rsp
   14002b43f:	add    BYTE PTR [rcx+0x0],al
   14002b442:	rex.RXB add BYTE PTR [r8],r8b
   14002b445:	add    BYTE PTR [rax],al
   14002b447:	add    BYTE PTR [rsi+0x0],al
   14002b44a:	add    BYTE PTR gs:[rcx+0x0],ah
   14002b44e:	je     0x14002b450
   14002b450:	jne    0x14002b452
   14002b452:	jb     0x14002b454
   14002b454:	add    BYTE PTR gs:[rcx+0x0],cl
   14002b458:	add    BYTE PTR [rax],r8b
   14002b45b:	add    BYTE PTR [rax],al
   14002b45d:	add    BYTE PTR [rax],al
   14002b45f:	add    BYTE PTR [rsi+0x0],dl
   14002b462:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b466:	jae    0x14002b468
   14002b468:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b46e:	add    BYTE PTR [rax],al
   14002b470:	push   rdx
   14002b471:	add    BYTE PTR [rbp+0x0],ah
   14002b474:	add    BYTE PTR [eax+eax*1+0x79],dl
   14002b479:	add    BYTE PTR [rax+0x0],dh
   14002b47c:	add    BYTE PTR gs:[rax],al
   14002b47f:	add    BYTE PTR [rdx+0x0],dl
   14002b482:	add    BYTE PTR gs:[rdi+0x0],ah
   14002b486:	rex.WRXB add BYTE PTR [r14+0x0],r14b
   14002b48a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b48e:	add    BYTE PTR [rax],al
   14002b490:	add    BYTE PTR [r8+0x0],sil
   14002b494:	jo     0x14002b496
   14002b496:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002b49a:	outs   dx,BYTE PTR ds:[rsi]
   14002b49b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002b49f:	add    BYTE PTR [rax+0x0],bh
   14002b4a2:	je     0x14002b4a4
   14002b4a4:	add    BYTE PTR [rax],al
   14002b4a6:	add    BYTE PTR [rax],al
   14002b4a8:	rex.W add BYTE PTR [rax+rax*1+0x49],al
   14002b4ad:	add    BYTE PTR [rax+rax*1+0x0],al
   14002b4b1:	add    BYTE PTR [rax],al
   14002b4b3:	add    BYTE PTR [rax],al
   14002b4b5:	add    BYTE PTR [rax],al
   14002b4b7:	add    BYTE PTR [rbp+0x0],al
   14002b4ba:	js     0x14002b4bc
   14002b4bc:	je     0x14002b4be
   14002b4be:	add    BYTE PTR gs:[rsi+0x0],ch
   14002b4c2:	jae    0x14002b4c4
   14002b4c4:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b4ca:	push   rax
   14002b4cb:	add    BYTE PTR [rbp+0x0],ah
   14002b4ce:	jb     0x14002b4d0
   14002b4d0:	imul   eax,DWORD PTR [rax],0x64006f
   14002b4d6:	add    BYTE PTR [rax],al
   14002b4d8:	push   rax
   14002b4d9:	add    BYTE PTR [rdx+0x0],dh
   14002b4dc:	outs   dx,DWORD PTR ds:[rsi]
   14002b4dd:	add    BYTE PTR [rsi+0x0],ah
   14002b4e0:	imul   eax,DWORD PTR [rax],0x65006c
   14002b4e6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002b4eb:	add    BYTE PTR [rax],al
   14002b4ed:	add    BYTE PTR [rax],al
   14002b4ef:	add    BYTE PTR [rbp+0x0],dl
   14002b4f2:	jae    0x14002b4f4
   14002b4f4:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b4f8:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002b4fd:	add    BYTE PTR [rax],al
   14002b4ff:	add    BYTE PTR [rbx+0x0],dl
   14002b502:	jne    0x14002b504
   14002b504:	(bad)  
   14002b505:	add    BYTE PTR [rbx+0x0],dh
   14002b508:	movsxd eax,DWORD PTR [rax]
   14002b50a:	jb     0x14002b50c
   14002b50c:	imul   eax,DWORD PTR [rax],0x740070
   14002b512:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b518:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002b51d:	add    BYTE PTR [rax],al
   14002b51f:	add    BYTE PTR [rbx+0x0],dl
   14002b522:	jne    0x14002b524
   14002b524:	(bad)  
   14002b525:	add    BYTE PTR [rbx+0x0],dh
   14002b528:	movsxd eax,DWORD PTR [rax]
   14002b52a:	jb     0x14002b52c
   14002b52c:	imul   eax,DWORD PTR [rax],0x740070
   14002b532:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b538:	push   rdx
   14002b539:	add    BYTE PTR [rbp+0x0],ah
   14002b53c:	ins    DWORD PTR es:[rdi],dx
   14002b53d:	add    BYTE PTR [rcx+0x0],ch
   14002b540:	outs   dx,BYTE PTR ds:[rsi]
   14002b541:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002b545:	add    BYTE PTR [rdx+0x0],dh
   14002b548:	add    BYTE PTR [rcx+0x0],r12b
   14002b54c:	jns    0x14002b54e
   14002b54e:	jae    0x14002b550
	...
   14002b558:	push   rbx
   14002b559:	add    BYTE PTR [rbp+0x0],dh
   14002b55c:	(bad)  
   14002b55d:	add    BYTE PTR [rbx+0x0],dh
   14002b560:	movsxd eax,DWORD PTR [rax]
   14002b562:	jb     0x14002b564
   14002b564:	imul   eax,DWORD PTR [rax],0x740070
   14002b56a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b570:	push   rdx
   14002b571:	add    BYTE PTR [rbp+0x0],ah
   14002b574:	ins    DWORD PTR es:[rdi],dx
   14002b575:	add    BYTE PTR [rcx+0x0],ch
   14002b578:	outs   dx,BYTE PTR ds:[rsi]
   14002b579:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002b57d:	add    BYTE PTR [rdx+0x0],dh
   14002b580:	push   rbx
   14002b581:	add    BYTE PTR [rax+0x0],ch
   14002b584:	outs   dx,DWORD PTR ds:[rsi]
   14002b585:	add    BYTE PTR [rdi+0x0],dh
	...
   14002b590:	push   rax
   14002b591:	add    BYTE PTR [rbx+0x0],dl
   14002b594:	rex.WRX add BYTE PTR [rax],r8b
   14002b597:	add    BYTE PTR [rax+0x0],dl
   14002b59a:	push   rbx
   14002b59b:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002b59f:	add    BYTE PTR [rdx+0x0],dl
   14002b5a2:	jne    0x14002b5a4
   14002b5a4:	outs   dx,BYTE PTR ds:[rsi]
   14002b5a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002b5a9:	add    BYTE PTR [rbp+0x0],ch
   14002b5ac:	add    BYTE PTR gs:[rbp+0x0],al
   14002b5b0:	jbe    0x14002b5b2
   14002b5b2:	add    BYTE PTR gs:[rsi+0x0],ch
   14002b5b6:	je     0x14002b5b8
	...
   14002b5c0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002b5c4:	movsxd eax,DWORD PTR [rax]
   14002b5c6:	push   0x6e006900
   14002b5cb:	add    BYTE PTR [rbp+0x0],ah
   14002b5ce:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002b5d3:	add    BYTE PTR [rax],al
   14002b5d5:	add    BYTE PTR [rax],al
   14002b5d7:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002b5db:	add    BYTE PTR [rcx+0x0],ch
   14002b5de:	(bad)  
   14002b5df:	add    BYTE PTR [rax+rax*1+0x74],ch
   14002b5e3:	add    BYTE PTR [rdx+0x0],dh
   14002b5e6:	(bad)  
   14002b5e7:	add    BYTE PTR [rbx+0x0],ah
   14002b5ea:	imul   eax,DWORD PTR [rax],0x69
   14002b5ed:	add    BYTE PTR [rsi+0x0],ch
   14002b5f0:	add    BYTE PTR [ecx+0x0],ch
   14002b5f4:	add    BYTE PTR fs:[rax],al
   14002b5f7:	add    BYTE PTR [rcx+0x0],ch
   14002b5fa:	(bad)  
   14002b5fb:	add    BYTE PTR [rdx+0x0],dh
   14002b5fe:	je     0x14002b600
   14002b600:	jb     0x14002b602
   14002b602:	(bad)  
   14002b603:	add    BYTE PTR [rbx+0x0],ah
   14002b606:	imul   eax,DWORD PTR [rax],0x69
   14002b609:	add    BYTE PTR [rsi+0x0],ch
   14002b60c:	add    BYTE PTR [ecx+0x0],ch
   14002b610:	add    BYTE PTR fs:[rax],al
   14002b613:	add    BYTE PTR [rax],al
   14002b615:	add    BYTE PTR [rax],al
   14002b617:	add    BYTE PTR [rbp+0x0],cl
   14002b61a:	(bad)  
   14002b61b:	add    BYTE PTR [rdx+0x0],ch
   14002b61e:	outs   dx,DWORD PTR ds:[rsi]
   14002b61f:	add    BYTE PTR [rdx+0x0],dh
   14002b622:	push   rsi
   14002b623:	add    BYTE PTR [rbp+0x0],ah
   14002b626:	jb     0x14002b628
   14002b628:	jae    0x14002b62a
   14002b62a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002b638:	add    BYTE PTR [r13+0x0],r13b
   14002b63c:	(bad)  
   14002b63d:	add    BYTE PTR [rcx+0x0],ch
   14002b640:	ins    BYTE PTR es:[rdi],dx
   14002b641:	add    BYTE PTR [rbx+0x0],dl
   14002b644:	je     0x14002b646
   14002b646:	(bad)  
   14002b647:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002b64b:	add    BYTE PTR [rbx+0x0],dh
   14002b64e:	add    BYTE PTR [rax],al
   14002b650:	push   rbx
   14002b651:	add    BYTE PTR [rbp+0x0],dh
   14002b654:	(bad)  
   14002b655:	add    BYTE PTR [rbx+0x0],dh
   14002b658:	movsxd eax,DWORD PTR [rax]
   14002b65a:	jb     0x14002b65c
   14002b65c:	imul   eax,DWORD PTR [rax],0x740070
   14002b662:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b668:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14002b66d:	add    BYTE PTR [rbx+0x0],dh
   14002b670:	jae    0x14002b672
   14002b672:	imul   eax,DWORD PTR [rax],0x690066
   14002b678:	movsxd eax,DWORD PTR [rax]
   14002b67a:	(bad)  
   14002b67b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002b67f:	add    BYTE PTR [rdi+0x0],ch
   14002b682:	outs   dx,BYTE PTR ds:[rsi]
   14002b683:	add    BYTE PTR [rax],al
   14002b685:	add    BYTE PTR [rax],al
   14002b687:	add    BYTE PTR [rbx+0x0],dh
   14002b68a:	je     0x14002b68c
   14002b68c:	outs   dx,DWORD PTR ds:[rsi]
   14002b68d:	add    BYTE PTR [rdx+0x0],dh
   14002b690:	(bad)  
   14002b691:	add    BYTE PTR [rdi+0x0],ah
   14002b694:	add    BYTE PTR gs:[rax],al
   14002b697:	add    BYTE PTR [rbp+0x0],cl
   14002b69a:	(bad)  
   14002b69b:	add    BYTE PTR [rdx+0x0],ch
   14002b69e:	outs   dx,DWORD PTR ds:[rsi]
   14002b69f:	add    BYTE PTR [rdx+0x0],dh
   14002b6a2:	(bad)  
   14002b6a3:	add    BYTE PTR [rsi+0x0],ch
   14002b6a6:	add    BYTE PTR fs:[rbp+0x0],cl
   14002b6aa:	imul   eax,DWORD PTR [rax],0x6f006e
   14002b6b0:	jb     0x14002b6b2
   14002b6b2:	push   rsi
   14002b6b3:	add    BYTE PTR [rbp+0x0],ah
   14002b6b6:	jb     0x14002b6b8
   14002b6b8:	jae    0x14002b6ba
   14002b6ba:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002b6c8:	push   rbx
   14002b6c9:	add    BYTE PTR [rbp+0x0],dh
   14002b6cc:	(bad)  
   14002b6cd:	add    BYTE PTR [rbx+0x0],dh
   14002b6d0:	movsxd eax,DWORD PTR [rax]
   14002b6d2:	jb     0x14002b6d4
   14002b6d4:	imul   eax,DWORD PTR [rax],0x740070
   14002b6da:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b6e0:	rex.XB add BYTE PTR [r13+0x0],sil
   14002b6e4:	jb     0x14002b6e6
   14002b6e6:	jb     0x14002b6e8
   14002b6e8:	add    BYTE PTR gs:[rsi+0x0],ch
   14002b6ec:	je     0x14002b6ee
   14002b6ee:	push   rsi
   14002b6ef:	add    BYTE PTR [rbp+0x0],ah
   14002b6f2:	jb     0x14002b6f4
   14002b6f4:	jae    0x14002b6f6
   14002b6f6:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b6fc:	add    BYTE PTR [rax],al
   14002b6fe:	add    BYTE PTR [rax],al
   14002b700:	push   rbx
   14002b701:	add    BYTE PTR [rbp+0x0],dh
   14002b704:	(bad)  
   14002b705:	add    BYTE PTR [rbx+0x0],dh
   14002b708:	movsxd eax,DWORD PTR [rax]
   14002b70a:	jb     0x14002b70c
   14002b70c:	imul   eax,DWORD PTR [rax],0x740070
   14002b712:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b718:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002b71c:	jae    0x14002b71e
   14002b71e:	je     0x14002b720
   14002b720:	push   rbp
   14002b721:	add    BYTE PTR [rbx+0x0],dh
   14002b724:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002b729:	add    BYTE PTR [rbp+0x0],ah
   14002b72c:	jb     0x14002b72e
   14002b72e:	jae    0x14002b730
   14002b730:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b736:	add    BYTE PTR [rax],al
   14002b738:	jae    0x14002b73a
   14002b73a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b73e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002b744:	jae    0x14002b746
   14002b746:	add    BYTE PTR gs:[rcx+0x0],ah
   14002b74a:	je     0x14002b74c
   14002b74c:	jae    0x14002b74e
   14002b74e:	add    BYTE PTR [rax],al
   14002b750:	jae    0x14002b752
   14002b752:	jne    0x14002b754
   14002b754:	(bad)  
   14002b755:	add    BYTE PTR [rbx+0x0],dh
   14002b758:	movsxd eax,DWORD PTR [rax]
   14002b75a:	jb     0x14002b75c
   14002b75c:	imul   eax,DWORD PTR [rax],0x740070
   14002b762:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b768:	jae    0x14002b76a
   14002b76a:	add    BYTE PTR gs:[rcx+0x0],ah
   14002b76e:	je     0x14002b770
   14002b770:	movsxd eax,DWORD PTR [rax]
   14002b772:	outs   dx,DWORD PTR ds:[rsi]
   14002b773:	add    BYTE PTR [rbp+0x0],dh
   14002b776:	outs   dx,BYTE PTR ds:[rsi]
   14002b777:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002b77b:	add    BYTE PTR [rax],al
   14002b77d:	add    BYTE PTR [rax],al
   14002b77f:	add    BYTE PTR [rbx+0x0],dh
   14002b782:	jne    0x14002b784
   14002b784:	(bad)  
   14002b785:	add    BYTE PTR [rbx+0x0],dh
   14002b788:	movsxd eax,DWORD PTR [rax]
   14002b78a:	jb     0x14002b78c
   14002b78c:	imul   eax,DWORD PTR [rax],0x740070
   14002b792:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b798:	outs   dx,DWORD PTR ds:[rsi]
   14002b799:	add    BYTE PTR [rdx+0x0],dh
   14002b79c:	imul   eax,DWORD PTR [rax],0x690067
   14002b7a2:	outs   dx,BYTE PTR ds:[rsi]
   14002b7a3:	add    BYTE PTR [rax],al
   14002b7a5:	add    BYTE PTR [rax],al
   14002b7a7:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002b7ab:	add    BYTE PTR [rbx+0x0],dl
   14002b7ae:	add    BYTE PTR [rcx+0x0],r12b
   14002b7b2:	jns    0x14002b7b4
   14002b7b4:	jae    0x14002b7b6
   14002b7b6:	push   rdx
   14002b7b7:	add    BYTE PTR [rbp+0x0],ah
   14002b7ba:	ins    DWORD PTR es:[rdi],dx
   14002b7bb:	add    BYTE PTR [rcx+0x0],ah
   14002b7be:	imul   eax,DWORD PTR [rax],0x69006e
   14002b7c4:	outs   dx,BYTE PTR ds:[rsi]
   14002b7c5:	add    BYTE PTR [rdi+0x0],ah
	...
   14002b7d0:	movsxd eax,DWORD PTR [rax]
   14002b7d2:	outs   dx,DWORD PTR ds:[rsi]
   14002b7d3:	add    BYTE PTR [rbp+0x0],ch
   14002b7d6:	jo     0x14002b7d8
   14002b7d8:	(bad)  
   14002b7d9:	add    BYTE PTR [rsi+0x0],ch
   14002b7dc:	jns    0x14002b7de
   14002b7de:	outs   dx,BYTE PTR ds:[rsi]
   14002b7df:	add    BYTE PTR [rcx+0x0],ah
   14002b7e2:	ins    DWORD PTR es:[rdi],dx
   14002b7e3:	add    BYTE PTR [rbp+0x0],ah
   14002b7e6:	add    BYTE PTR [rax],al
   14002b7e8:	jne    0x14002b7ea
   14002b7ea:	jae    0x14002b7ec
   14002b7ec:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b7f0:	outs   dx,BYTE PTR ds:[rsi]
   14002b7f1:	add    BYTE PTR [rcx+0x0],ch
   14002b7f4:	movsxd eax,DWORD PTR [rax]
   14002b7f6:	imul   eax,DWORD PTR [rax],0x6e
   14002b7f9:	add    BYTE PTR [rcx+0x0],ah
   14002b7fc:	ins    DWORD PTR es:[rdi],dx
   14002b7fd:	add    BYTE PTR [rbp+0x0],ah
	...
   14002b808:	jne    0x14002b80a
   14002b80a:	jae    0x14002b80c
   14002b80c:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b810:	jae    0x14002b812
   14002b812:	movsxd eax,DWORD PTR [rax]
   14002b814:	outs   dx,DWORD PTR ds:[rsi]
   14002b815:	add    BYTE PTR [rdx+0x0],dh
   14002b818:	add    BYTE PTR gs:[rax],al
   14002b81b:	add    BYTE PTR [rax],al
   14002b81d:	add    BYTE PTR [rax],al
   14002b81f:	add    BYTE PTR [rbx+0x0],al
   14002b822:	outs   dx,DWORD PTR ds:[rsi]
   14002b823:	add    BYTE PTR [rdx+0x0],dh
   14002b826:	add    BYTE PTR gs:[rax+rax*1+0x43],ch
   14002b82b:	add    BYTE PTR [rdi+0x0],ch
   14002b82e:	ins    DWORD PTR es:[rdi],dx
   14002b82f:	add    BYTE PTR [rbx+0x0],dl
   14002b832:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b836:	jbe    0x14002b838
   14002b838:	add    BYTE PTR gs:[rdx+0x0],dh
   14002b83c:	add    BYTE PTR [rax],al
   14002b83e:	add    BYTE PTR [rax],al
   14002b840:	movsxd eax,DWORD PTR [rax]
   14002b842:	jb     0x14002b844
   14002b844:	add    BYTE PTR gs:[rcx+0x0],ah
   14002b848:	je     0x14002b84a
   14002b84a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002b84f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002b853:	add    BYTE PTR [rsi+0x0],dh
   14002b856:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14002b85b:	add    BYTE PTR [rax],al
   14002b85d:	add    BYTE PTR [rax],al
   14002b85f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002b863:	add    BYTE PTR [rbx+0x0],dh
   14002b866:	(bad)  
   14002b867:	add    BYTE PTR [rbx+0x0],ah
   14002b86a:	movsxd eax,DWORD PTR [rax]
   14002b86c:	add    BYTE PTR gs:[rax+0x0],dh
   14002b870:	je     0x14002b872
   14002b872:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002b877:	add    BYTE PTR [rbp+0x0],ah
   14002b87a:	jb     0x14002b87c
   14002b87c:	jae    0x14002b87e
   14002b87e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b884:	add    BYTE PTR [rax],al
   14002b886:	add    BYTE PTR [rax],al
   14002b888:	je     0x14002b88a
   14002b88a:	outs   dx,DWORD PTR ds:[rsi]
   14002b88b:	add    BYTE PTR [rbx+0x0],dh
   14002b88e:	movsxd eax,DWORD PTR [rax]
   14002b890:	jne    0x14002b892
   14002b892:	jb     0x14002b894
   14002b894:	jb     0x14002b896
   14002b896:	add    BYTE PTR gs:[rsi+0x0],ch
   14002b89a:	je     0x14002b89c
   14002b89c:	push   rsi
   14002b89d:	add    BYTE PTR [rbp+0x0],ah
   14002b8a0:	jb     0x14002b8a2
   14002b8a2:	jae    0x14002b8a4
   14002b8a4:	imul   eax,DWORD PTR [rax],0x6e006f
   14002b8aa:	add    BYTE PTR [rax],al
   14002b8ac:	add    BYTE PTR [rax],al
   14002b8ae:	add    BYTE PTR [rax],al
   14002b8b0:	push   rdi
   14002b8b1:	add    BYTE PTR [rdi+0x0],ch
   14002b8b4:	jb     0x14002b8b6
   14002b8b6:	imul   eax,DWORD PTR [rax],0x66
   14002b8b9:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002b8bd:	add    BYTE PTR [rdi+0x0],dh
	...
   14002b8c8:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002b8cc:	jae    0x14002b8ce
   14002b8ce:	jae    0x14002b8d0
   14002b8d0:	(bad)  
   14002b8d1:	add    BYTE PTR [rdi+0x0],ah
   14002b8d4:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14002b8e0:	and    al,BYTE PTR [rip+0x11993]        # 0x14003d279
   14002b8e6:	add    BYTE PTR [rax],al
   14002b8e8:	push   rsp
   14002b8e9:	rex add eax,DWORD PTR [rax]
	...
   14002b8f4:	add    eax,DWORD PTR [rax]
   14002b8f6:	add    BYTE PTR [rax],al
   14002b8f8:	pop    rsp
   14002b8f9:	rex add eax,DWORD PTR [rax]
   14002b8fc:	xor    BYTE PTR [rax],al
	...
   14002b906:	add    BYTE PTR [rax],al
   14002b908:	and    al,BYTE PTR [rip+0x11993]        # 0x14003d2a1
   14002b90e:	add    BYTE PTR [rax],al
   14002b910:	call   0x14002bc55
   14002b915:	add    BYTE PTR [rax],al
   14002b917:	add    BYTE PTR [rax],al
   14002b919:	add    BYTE PTR [rax],al
   14002b91b:	add    BYTE PTR [rbx],al
   14002b91d:	add    BYTE PTR [rax],al
   14002b91f:	add    al,dh
   14002b921:	rex add eax,DWORD PTR [rax]
   14002b924:	rol    BYTE PTR [rax],0x0
	...
   14002b92f:	add    BYTE PTR [rdx],ah
   14002b931:	add    eax,0x11993
   14002b936:	add    BYTE PTR [rax],al
   14002b938:	xor    al,0x41
   14002b93a:	add    eax,DWORD PTR [rax]
	...
   14002b944:	add    eax,DWORD PTR [rax]
   14002b946:	add    BYTE PTR [rax],al
   14002b948:	cmp    al,0x41
   14002b94a:	add    eax,DWORD PTR [rax]
   14002b94c:	enter  0x0,0x0
	...
   14002b958:	and    al,BYTE PTR [rip+0x11993]        # 0x14003d2f1
   14002b95e:	add    BYTE PTR [rax],al
   14002b960:	ins    BYTE PTR es:[rdi],dx
   14002b961:	add    eax,DWORD PTR [r8]
	...
   14002b96c:	add    eax,DWORD PTR [rax]
   14002b96e:	add    BYTE PTR [rax],al
   14002b970:	je     0x14002b9b3
   14002b972:	add    eax,DWORD PTR [rax]
   14002b974:	xor    BYTE PTR [rax],al
	...
   14002b97e:	add    BYTE PTR [rax],al
   14002b980:	and    al,BYTE PTR [rip+0x21993]        # 0x14004d319
   14002b986:	add    BYTE PTR [rax],al
   14002b988:	mov    al,0x41
   14002b98a:	add    eax,DWORD PTR [rax]
	...
   14002b994:	add    eax,0xc0000000
   14002b999:	add    eax,DWORD PTR [r8]
   14002b99c:	js     0x14002b99e
	...
   14002b9a6:	add    BYTE PTR [rax],al
   14002b9a8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003d341
   14002b9ae:	add    BYTE PTR [rax],al
   14002b9b0:	adc    BYTE PTR [rdx+0x3],al
	...
   14002b9bb:	add    BYTE PTR [rbx],al
   14002b9bd:	add    BYTE PTR [rax],al
   14002b9bf:	add    BYTE PTR [rax],bl
   14002b9c1:	rex.X add eax,DWORD PTR [rax]
   14002b9c4:	sub    BYTE PTR [rax],al
	...
   14002b9ce:	add    BYTE PTR [rax],al
   14002b9d0:	and    al,BYTE PTR [rip+0x31993]        # 0x14005d369
   14002b9d6:	add    BYTE PTR [rax],al
   14002b9d8:	pop    rax
   14002b9d9:	rex.X add eax,DWORD PTR [rax]
   14002b9dc:	add    DWORD PTR [rax],eax
   14002b9de:	add    BYTE PTR [rax],al
   14002b9e0:	jo     0x14002ba24
   14002b9e2:	add    eax,DWORD PTR [rax]
   14002b9e4:	add    eax,0x98000000
   14002b9e9:	rex.X add eax,DWORD PTR [rax]
   14002b9ec:	rex.W add BYTE PTR [rax],al
	...
   14002b9f7:	add    BYTE PTR [rsi+0x0],cl
   14002b9fa:	outs   dx,DWORD PTR ds:[rsi]
   14002b9fb:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002b9ff:	add    BYTE PTR [rbp+0x0],al
   14002ba02:	outs   dx,BYTE PTR ds:[rsi]
   14002ba03:	add    BYTE PTR [rdi+0x0],ch
   14002ba06:	jne    0x14002ba08
   14002ba08:	add    BYTE PTR [eax+0x0],ch
   14002ba0c:	and    BYTE PTR [rax],al
   14002ba0e:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002ba12:	ins    DWORD PTR es:[rdi],dx
   14002ba13:	add    BYTE PTR [rdi+0x0],ch
   14002ba16:	jb     0x14002ba18
   14002ba18:	jns    0x14002ba1a
   14002ba1a:	add    BYTE PTR [rax],al
   14002ba1c:	add    BYTE PTR [rax],al
   14002ba1e:	add    BYTE PTR [rax],al
   14002ba20:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002ba24:	je     0x14002ba26
   14002ba26:	and    BYTE PTR [rax],al
   14002ba28:	add    BYTE PTR [r14+0x0],r13b
   14002ba2c:	outs   dx,DWORD PTR ds:[rsi]
   14002ba2d:	add    BYTE PTR [rbp+0x0],dh
   14002ba30:	add    BYTE PTR [eax+0x0],ch
   14002ba34:	and    BYTE PTR [rax],al
   14002ba36:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002ba3a:	ins    DWORD PTR es:[rdi],dx
   14002ba3b:	add    BYTE PTR [rdi+0x0],ch
   14002ba3e:	jb     0x14002ba40
   14002ba40:	jns    0x14002ba42
   14002ba42:	add    BYTE PTR [rax],al
   14002ba44:	add    BYTE PTR [rax],al
   14002ba46:	add    BYTE PTR [rax],al
   14002ba48:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002ba4c:	je     0x14002ba4e
   14002ba4e:	and    BYTE PTR [rax],al
   14002ba50:	add    BYTE PTR [r14+0x0],r13b
   14002ba54:	outs   dx,DWORD PTR ds:[rsi]
   14002ba55:	add    BYTE PTR [rbp+0x0],dh
   14002ba58:	add    BYTE PTR [eax+0x0],ch
   14002ba5c:	and    BYTE PTR [rax],al
   14002ba5e:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002ba62:	ins    DWORD PTR es:[rdi],dx
   14002ba63:	add    BYTE PTR [rdi+0x0],ch
   14002ba66:	jb     0x14002ba68
   14002ba68:	jns    0x14002ba6a
   14002ba6a:	add    BYTE PTR [rax],al
   14002ba6c:	add    BYTE PTR [rax],al
   14002ba6e:	add    BYTE PTR [rax],al
   14002ba70:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002ba74:	je     0x14002ba76
   14002ba76:	and    BYTE PTR [rax],al
   14002ba78:	add    BYTE PTR [r14+0x0],r13b
   14002ba7c:	outs   dx,DWORD PTR ds:[rsi]
   14002ba7d:	add    BYTE PTR [rbp+0x0],dh
   14002ba80:	add    BYTE PTR [eax+0x0],ch
   14002ba84:	and    BYTE PTR [rax],al
   14002ba86:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002ba8a:	ins    DWORD PTR es:[rdi],dx
   14002ba8b:	add    BYTE PTR [rdi+0x0],ch
   14002ba8e:	jb     0x14002ba90
   14002ba90:	jns    0x14002ba92
   14002ba92:	add    BYTE PTR [rax],al
   14002ba94:	add    BYTE PTR [rax],al
   14002ba96:	add    BYTE PTR [rax],al
   14002ba98:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002ba9c:	je     0x14002ba9e
   14002ba9e:	and    BYTE PTR [rax],al
   14002baa0:	add    BYTE PTR [r14+0x0],r13b
   14002baa4:	outs   dx,DWORD PTR ds:[rsi]
   14002baa5:	add    BYTE PTR [rbp+0x0],dh
   14002baa8:	add    BYTE PTR [eax+0x0],ch
   14002baac:	and    BYTE PTR [rax],al
   14002baae:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002bab2:	ins    DWORD PTR es:[rdi],dx
   14002bab3:	add    BYTE PTR [rdi+0x0],ch
   14002bab6:	jb     0x14002bab8
   14002bab8:	jns    0x14002baba
   14002baba:	add    BYTE PTR [rax],al
   14002babc:	add    BYTE PTR [rax],al
   14002babe:	add    BYTE PTR [rax],al
   14002bac0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002bac4:	je     0x14002bac6
   14002bac6:	and    BYTE PTR [rax],al
   14002bac8:	add    BYTE PTR [r14+0x0],r13b
   14002bacc:	outs   dx,DWORD PTR ds:[rsi]
   14002bacd:	add    BYTE PTR [rbp+0x0],dh
   14002bad0:	add    BYTE PTR [eax+0x0],ch
   14002bad4:	and    BYTE PTR [rax],al
   14002bad6:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002bada:	ins    DWORD PTR es:[rdi],dx
   14002badb:	add    BYTE PTR [rdi+0x0],ch
   14002bade:	jb     0x14002bae0
   14002bae0:	jns    0x14002bae2
   14002bae2:	add    BYTE PTR [rax],al
   14002bae4:	add    BYTE PTR [rax],al
   14002bae6:	add    BYTE PTR [rax],al
   14002bae8:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002baec:	je     0x14002baee
   14002baee:	and    BYTE PTR [rax],al
   14002baf0:	add    BYTE PTR [r14+0x0],r13b
   14002baf4:	outs   dx,DWORD PTR ds:[rsi]
   14002baf5:	add    BYTE PTR [rbp+0x0],dh
   14002baf8:	add    BYTE PTR [eax+0x0],ch
   14002bafc:	and    BYTE PTR [rax],al
   14002bafe:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002bb02:	ins    DWORD PTR es:[rdi],dx
   14002bb03:	add    BYTE PTR [rdi+0x0],ch
   14002bb06:	jb     0x14002bb08
   14002bb08:	jns    0x14002bb0a
   14002bb0a:	add    BYTE PTR [rax],al
   14002bb0c:	add    BYTE PTR [rax],al
   14002bb0e:	add    BYTE PTR [rax],al
   14002bb10:	and    al,BYTE PTR [rip+0x21993]        # 0x14004d4a9
   14002bb16:	add    BYTE PTR [rax],al
   14002bb18:	or     BYTE PTR [rbx+rax*1+0x0],al
	...
   14002bb24:	add    eax,0x18000000
   14002bb29:	add    r8d,DWORD PTR [rax]
   14002bb2c:	sub    BYTE PTR [rax],al
	...
   14002bb36:	add    BYTE PTR [rax],al
   14002bb38:	and    al,BYTE PTR [rip+0x21993]        # 0x14004d4d1
   14002bb3e:	add    BYTE PTR [rax],al
   14002bb40:	(bad)  
   14002bb41:	add    r8d,DWORD PTR [rax]
	...
   14002bb4c:	add    eax,DWORD PTR [rax]
   14002bb4e:	add    BYTE PTR [rax],al
   14002bb50:	jo     0x14002bb96
   14002bb52:	add    eax,DWORD PTR [rax]
   14002bb54:	xor    BYTE PTR [rax],al
	...
   14002bb5e:	add    BYTE PTR [rax],al
   14002bb60:	and    al,BYTE PTR [rip+0x21993]        # 0x14004d4f9
   14002bb66:	add    BYTE PTR [rax],al
   14002bb68:	mov    al,0x44
   14002bb6a:	add    eax,DWORD PTR [rax]
	...
   14002bb74:	add    eax,DWORD PTR [rax]
   14002bb76:	add    BYTE PTR [rax],al
   14002bb78:	rol    BYTE PTR [rbx+rax*1+0x0],0x38
	...
   14002bb85:	add    BYTE PTR [rax],al
   14002bb87:	add    BYTE PTR [rdx],ah
   14002bb89:	add    eax,0x11993
   14002bb8e:	add    BYTE PTR [rax],al
   14002bb90:	clc    
   14002bb91:	add    r8d,DWORD PTR [rax]
	...
   14002bb9c:	add    al,BYTE PTR [rax]
   14002bb9e:	add    BYTE PTR [rax],al
   14002bba0:	add    BYTE PTR [rbp+0x3],al
   14002bba3:	add    BYTE PTR [rax],ch
	...
   14002bbad:	add    BYTE PTR [rax],al
   14002bbaf:	add    BYTE PTR [rdx],ah
   14002bbb1:	add    eax,0x21993
   14002bbb6:	add    BYTE PTR [rax],al
   14002bbb8:	sub    BYTE PTR [rbp+0x3],al
	...
   14002bbc3:	add    BYTE PTR [rbx],al
   14002bbc5:	add    BYTE PTR [rax],al
   14002bbc7:	add    BYTE PTR [rax],bh
   14002bbc9:	add    r8d,DWORD PTR [r8]
   14002bbcc:	xor    BYTE PTR [rax],al
	...
   14002bbd6:	add    BYTE PTR [rax],al
   14002bbd8:	cmp    BYTE PTR [rip+0x14003],ah        # 0x14003fbe1
   14002bbde:	add    BYTE PTR [rax],al
   14002bbe0:	lock mov bh,0x0
   14002bbe3:	rex add DWORD PTR [rax],eax
	...
   14002bbee:	add    BYTE PTR [rax],al
   14002bbf0:	cmp    BYTE PTR [rbx+rbp*2+0x23],ch
   14002bbf4:	xor    ah,BYTE PTR [rip+0x3231682a]        # 0x172342424
   14002bbfa:	and    DWORD PTR [rsi+0x6b],ebp
   14002bbfd:	push   0x6b3d6835
   14002bc02:	xor    DWORD PTR [rbx],ebp
   14002bc04:	xor    esi,DWORD PTR [rsi*1+0x64736a27]
   14002bc0b:	data16 jge 0x14002bc3e
   14002bc0e:	rex (bad) 
   14002bc10:	xor    BYTE PTR [rbx],dh
   14002bc12:	jnp    0x14002bc48
   14002bc14:	xor    eax,0x5d646c73
   14002bc19:	jns    0x14002bc92
   14002bc1b:	jae    0x14002bc89
   14002bc1d:	push   0x32
   14002bc1f:	sub    BYTE PTR [rsp+rcx*2],dh
   14002bc22:	xor    al,0x53
   14002bc24:	sub    r12b,BYTE PTR [rip+0x326d675f]        # 0x17270238a
   14002bc2b:	xor    edi,DWORD PTR [rbx+0x70]
   14002bc2e:	outs   dx,DWORD PTR ds:[rsi]
   14002bc2f:	rex.WB sub dl,BYTE PTR [r12+rax*2+0x38]
   14002bc34:	xor    BYTE PTR [rax+0x30],al
   14002bc37:	sub    BYTE PTR [rdx],ch
   14002bc39:	fs gs rex push bx
   14002bc3e:	and    al,0x28
   14002bc40:	and    al,0x25
   14002bc42:	rex.WXB jge 0x14002bcc0
   14002bc45:	jl     0x14002bc47
	...
   14002bc4f:	add    BYTE PTR [rip+0x0],ch        # 0x14002bc55
   14002bc55:	add    BYTE PTR [rax],al
   14002bc57:	add    BYTE PTR [rdi+0x0],cl
   14002bc5a:	push   rax
   14002bc5b:	add    BYTE PTR [rbp+0x0],al
   14002bc5e:	rex.WRX add BYTE PTR [rax],r8b
   14002bc61:	add    BYTE PTR [rax],al
   14002bc63:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002bc67:	add    BYTE PTR [rax+0x0],dh
   14002bc6a:	movsxd eax,DWORD PTR [rax]
   14002bc6c:	jne    0x14002bc6e
   14002bc6e:	add    BYTE PTR [rax],al
   14002bc70:	jae    0x14002bc72
   14002bc72:	push   0x6f006600
   14002bc77:	add    BYTE PTR [rax+rax*1+0x64],ch
   14002bc7b:	add    BYTE PTR [rbp+0x0],ah
   14002bc7e:	jb     0x14002bc80
   14002bc80:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14002bc85:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002bc89:	add    BYTE PTR [rax],al
   14002bc8b:	add    BYTE PTR [rax],al
   14002bc8d:	add    BYTE PTR [rax],al
   14002bc8f:	add    BYTE PTR [rbx+0x48],dl
   14002bc92:	rex.RXB
   14002bc93:	gs je  0x14002bcdc
   14002bc96:	outs   dx,DWORD PTR ds:[rsi]
   14002bc97:	ins    BYTE PTR es:[rdi],dx
   14002bc98:	fs gs jb 0x14002bcec
   14002bc9c:	(bad)  
   14002bc9d:	je     0x14002bd07
   14002bc9f:	push   rdi
	...
   14002bca8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002bcac:	ins    DWORD PTR es:[rdi],dx
   14002bcad:	add    BYTE PTR [rbp+0x0],ch
   14002bcb0:	outs   dx,DWORD PTR ds:[rsi]
   14002bcb1:	add    BYTE PTR [rsi+0x0],ch
   14002bcb4:	and    BYTE PTR [rax],al
   14002bcb6:	add    BYTE PTR [r8+0x0],sil
   14002bcba:	jo     0x14002bcbc
   14002bcbc:	ins    BYTE PTR es:[rdi],dx
   14002bcbd:	add    BYTE PTR [rcx+0x0],ch
   14002bcc0:	movsxd eax,DWORD PTR [rax]
   14002bcc2:	(bad)  
   14002bcc3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002bcc7:	add    BYTE PTR [rdi+0x0],ch
   14002bcca:	outs   dx,BYTE PTR ds:[rsi]
   14002bccb:	add    BYTE PTR [rax],ah
   14002bccd:	add    BYTE PTR [rax+rax*1+0x61],al
   14002bcd1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002bcd5:	add    BYTE PTR [rax],al
   14002bcd7:	add    BYTE PTR [rbx+0x0],dh
   14002bcda:	push   0x6f006600
   14002bcdf:	add    BYTE PTR [rax+rax*1+0x64],ch
   14002bce3:	add    BYTE PTR [rbp+0x0],ah
   14002bce6:	jb     0x14002bce8
   14002bce8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14002bced:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002bcf1:	add    BYTE PTR [rax],al
   14002bcf3:	add    BYTE PTR [rdx],bh
   14002bcf5:	add    BYTE PTR [rax],al
   14002bcf7:	add    BYTE PTR [rbx+0x48],dl
   14002bcfa:	rex.RXB
   14002bcfb:	gs je  0x14002bd44
   14002bcfe:	outs   dx,DWORD PTR ds:[rsi]
   14002bcff:	ins    BYTE PTR es:[rdi],dx
   14002bd00:	fs gs jb 0x14002bd54
   14002bd04:	(bad)  
   14002bd05:	je     0x14002bd6f
   14002bd07:	push   rdi
   14002bd08:	add    BYTE PTR [rax],al
   14002bd0a:	add    BYTE PTR [rax],al
   14002bd0c:	jl     0x14002bd0e
   14002bd0e:	add    BYTE PTR [rax],al
   14002bd10:	add    BYTE PTR [r8+0x0],sil
   14002bd14:	jo     0x14002bd16
   14002bd16:	ins    BYTE PTR es:[rdi],dx
   14002bd17:	add    BYTE PTR [rcx+0x0],ch
   14002bd1a:	movsxd eax,DWORD PTR [rax]
   14002bd1c:	(bad)  
   14002bd1d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002bd21:	add    BYTE PTR [rdi+0x0],ch
   14002bd24:	outs   dx,BYTE PTR ds:[rsi]
   14002bd25:	add    BYTE PTR [rax],ah
   14002bd27:	add    BYTE PTR [rax+rax*1+0x61],al
   14002bd2b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002bd2f:	add    BYTE PTR [rax],al
   14002bd31:	add    BYTE PTR [rax],al
   14002bd33:	add    BYTE PTR [rax+rax*1+0x0],bh
   14002bd37:	add    BYTE PTR [rcx+0x0],cl
   14002bd3a:	outs   dx,BYTE PTR ds:[rsi]
   14002bd3b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002bd3f:	add    BYTE PTR [rax+0x0],bh
   14002bd42:	add    BYTE PTR [rax],al
   14002bd44:	jl     0x14002bd46
   14002bd46:	add    BYTE PTR [rax],al
   14002bd48:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002bd4c:	outs   dx,BYTE PTR ds:[rsi]
   14002bd4d:	add    BYTE PTR [rsi+0x0],ah
   14002bd50:	imul   eax,DWORD PTR [rax],0x4d0067
   14002bd56:	(bad)  
   14002bd57:	add    BYTE PTR [rsi+0x0],ch
   14002bd5a:	(bad)  
   14002bd5b:	add    BYTE PTR [rdi+0x0],ah
   14002bd5e:	add    BYTE PTR gs:[rdx+0x0],dh
   14002bd62:	add    BYTE PTR [r10+0x0],r14b
   14002bd66:	jb     0x14002bd68
   14002bd68:	outs   dx,DWORD PTR ds:[rsi]
   14002bd69:	add    BYTE PTR [rdx+0x0],dh
   14002bd6c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002bd70:	add    BYTE PTR fs:[rbp+0x0],ah
   14002bd74:	add    BYTE PTR [rax],al
   14002bd76:	add    BYTE PTR [rax],al
   14002bd78:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14002bd7c:	rex.XB add BYTE PTR [r9+0x0],al
   14002bd80:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   14002bd85:	add    BYTE PTR [rbp+0x0],ah
   14002bd88:	jae    0x14002bd8a
   14002bd8a:	jae    0x14002bd8c
   14002bd8c:	add    BYTE PTR [rax],al
   14002bd8e:	add    BYTE PTR [rax],al
   14002bd90:	push   rbx
   14002bd91:	add    BYTE PTR [rdi+0x0],ch
   14002bd94:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14002bd99:	add    BYTE PTR [rcx+0x0],ah
   14002bd9c:	jb     0x14002bd9e
   14002bd9e:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   14002bda3:	add    BYTE PTR [rdi+0x0],ch
   14002bda6:	jb     0x14002bda8
   14002bda8:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14002bdad:	add    BYTE PTR [rax+0x0],dl
   14002bdb0:	rex.XB add BYTE PTR [r13+0x0],dl
   14002bdb4:	add    BYTE PTR [rax],al
   14002bdb6:	add    BYTE PTR [rax],al
   14002bdb8:	add    BYTE PTR fs:[rbp+0x0],ah
   14002bdbc:	ins    BYTE PTR es:[rdi],dx
   14002bdbd:	add    BYTE PTR [rcx+0x0],ah
   14002bdc0:	jns    0x14002bdc2
   14002bdc2:	pop    rdi
   14002bdc3:	add    BYTE PTR [rsi+0x0],ah
   14002bdc6:	outs   dx,DWORD PTR ds:[rsi]
   14002bdc7:	add    BYTE PTR [rdx+0x0],dh
   14002bdca:	add    BYTE PTR [rax],al
   14002bdcc:	and    BYTE PTR [rax],al
   14002bdce:	add    BYTE PTR [rax],al
   14002bdd0:	ins    BYTE PTR es:[rdi],dx
   14002bdd1:	add    BYTE PTR [rcx+0x0],ah
   14002bdd4:	jne    0x14002bdd6
   14002bdd6:	outs   dx,BYTE PTR ds:[rsi]
   14002bdd7:	add    BYTE PTR [rbx+0x0],ah
   14002bdda:	push   0x73006500
   14002bddf:	add    BYTE PTR [rax],al
   14002bde1:	add    BYTE PTR [rax],al
   14002bde3:	add    BYTE PTR [rdx],ah
   14002bde5:	add    BYTE PTR [rax],al
   14002bde7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002bdeb:	add    BYTE PTR [rcx+0x0],bh
   14002bdee:	jae    0x14002bdf0
   14002bdf0:	add    BYTE PTR [rax],al
   14002bdf2:	add    BYTE PTR [rax],al
   14002bdf4:	and    al,BYTE PTR [rax]
   14002bdf6:	add    BYTE PTR [rax],al
   14002bdf8:	push   rbx
   14002bdf9:	add    BYTE PTR [rdi+0x0],ch
   14002bdfc:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14002be01:	add    BYTE PTR [rcx+0x0],ah
   14002be04:	jb     0x14002be06
   14002be06:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   14002be0b:	add    BYTE PTR [rdi+0x0],ch
   14002be0e:	jb     0x14002be10
   14002be10:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14002be15:	add    BYTE PTR [rax+0x0],dl
   14002be18:	rex.XB add BYTE PTR [r13+0x0],dl
   14002be1c:	add    BYTE PTR [rax],al
   14002be1e:	add    BYTE PTR [rax],al
   14002be20:	rex.W add BYTE PTR [rsi+0x0],al
   14002be24:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14002be28:	jbe    0x14002be2a
   14002be2a:	xor    al,BYTE PTR [rax]
   14002be2c:	add    BYTE PTR [rax],al
   14002be2e:	add    BYTE PTR [rax],al
   14002be30:	push   rbx
   14002be31:	add    BYTE PTR [rdi+0x0],ch
   14002be34:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14002be39:	add    BYTE PTR [rcx+0x0],ah
   14002be3c:	jb     0x14002be3e
   14002be3e:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   14002be43:	add    BYTE PTR [rdi+0x0],ch
   14002be46:	jb     0x14002be48
   14002be48:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14002be4d:	add    BYTE PTR [rax+0x0],dl
   14002be50:	rex.XB add BYTE PTR [r13+0x0],dl
   14002be54:	add    BYTE PTR [rax],al
   14002be56:	add    BYTE PTR [rax],al
   14002be58:	add    BYTE PTR fs:[rcx+0x0],ch
   14002be5c:	jae    0x14002be5e
   14002be5e:	jo     0x14002be60
   14002be60:	ins    BYTE PTR es:[rdi],dx
   14002be61:	add    BYTE PTR [rcx+0x0],ah
   14002be64:	jns    0x14002be66
   14002be66:	pop    rdi
   14002be67:	add    BYTE PTR [rbp+0x0],ah
   14002be6a:	jbe    0x14002be6c
   14002be6c:	add    BYTE PTR gs:[rdx+0x0],dh
   14002be70:	jns    0x14002be72
   14002be72:	add    BYTE PTR [rax],al
   14002be74:	pop    rsp
   14002be75:	add    BYTE PTR [rax],al
   14002be77:	add    BYTE PTR [rax+rax*1+0x61],ch
   14002be7b:	add    BYTE PTR [rbp+0x0],dh
   14002be7e:	outs   dx,BYTE PTR ds:[rsi]
   14002be7f:	add    BYTE PTR [rbx+0x0],ah
   14002be82:	push   0x73006500
   14002be87:	add    BYTE PTR [rax],al
   14002be89:	add    BYTE PTR [rax],al
   14002be8b:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002be8f:	add    BYTE PTR [rbx+0x0],dh
   14002be92:	je     0x14002be94
   14002be94:	(bad)  
   14002be95:	add    BYTE PTR [rdx+0x0],dh
   14002be98:	je     0x14002be9a
   14002be9a:	jne    0x14002be9c
   14002be9c:	jo     0x14002be9e
   14002be9e:	add    BYTE PTR [rax],al
   14002bea0:	ins    BYTE PTR es:[rdi],dx
   14002bea1:	add    BYTE PTR [rcx+0x0],ah
   14002bea4:	jne    0x14002bea6
   14002bea6:	outs   dx,BYTE PTR ds:[rsi]
   14002bea7:	add    BYTE PTR [rbx+0x0],ah
   14002beaa:	push   0x73006500
   14002beaf:	add    BYTE PTR [rax],al
   14002beb1:	add    BYTE PTR [rax],al
   14002beb3:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002beb7:	add    BYTE PTR [rbp+0x0],ah
   14002beba:	js     0x14002bebc
   14002bebc:	imul   eax,DWORD PTR [rax],0x74
   14002bec2:	add    BYTE PTR [rax],al
   14002bec4:	add    BYTE PTR es:[rax],al
   14002bec7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002becb:	add    BYTE PTR [rcx+0x0],bh
   14002bece:	jae    0x14002bed0
   14002bed0:	add    BYTE PTR [rax],al
   14002bed2:	add    BYTE PTR [rax],al
   14002bed4:	cmp    eax,0x73000000
   14002bed9:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002bedd:	add    BYTE PTR [rdx+0x0],dh
   14002bee0:	je     0x14002bee2
   14002bee2:	jne    0x14002bee4
   14002bee4:	jo     0x14002bee6
   14002bee6:	add    BYTE PTR [rax],al
   14002bee8:	add    BYTE PTR fs:[rcx+0x0],ah
   14002beec:	jns    0x14002beee
   14002beee:	jae    0x14002bef0
   14002bef0:	add    BYTE PTR [rax],al
   14002bef2:	add    BYTE PTR [rax],al
   14002bef4:	push   rdi
   14002bef5:	push   rcx
   14002bef6:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14002befa:	js     0x14002befc
   14002befc:	imul   eax,DWORD PTR [rax],0x74
   14002bf02:	add    BYTE PTR [rax],al
   14002bf04:	jl     0x14002bf06
   14002bf06:	add    BYTE PTR [rax],al
   14002bf08:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14002bf0c:	add    BYTE PTR fs:[rbp+0x0],ah
   14002bf10:	ins    BYTE PTR es:[rdi],dx
   14002bf11:	add    BYTE PTR [rax],al
   14002bf13:	add    BYTE PTR [rdi+0x51],dl
   14002bf16:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14002bf1a:	outs   dx,BYTE PTR ds:[rsi]
   14002bf1b:	add    BYTE PTR [rax+rax*1+0x5f],ah
   14002bf1f:	add    BYTE PTR [rcx+0x0],ah
   14002bf22:	data16 add BYTE PTR [rax+rax*1+0x65],dh
   14002bf27:	add    BYTE PTR [rdx+0x0],dh
   14002bf2a:	pop    rdi
   14002bf2b:	add    BYTE PTR [rbx+0x0],ah
   14002bf2e:	outs   dx,DWORD PTR ds:[rsi]
   14002bf2f:	add    BYTE PTR [rbp+0x0],dh
   14002bf32:	outs   dx,BYTE PTR ds:[rsi]
   14002bf33:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002bf37:	add    BYTE PTR [rbp+0x0],cl
   14002bf3a:	(bad)  
   14002bf3b:	add    BYTE PTR [rsi+0x0],ch
   14002bf3e:	jne    0x14002bf40
   14002bf40:	data16 add BYTE PTR [rcx+0x0],ah
   14002bf44:	movsxd eax,DWORD PTR [rax]
   14002bf46:	je     0x14002bf48
   14002bf48:	jne    0x14002bf4a
   14002bf4a:	jb     0x14002bf4c
   14002bf4c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14002bf58:	push   rdi
   14002bf59:	add    BYTE PTR [rcx+0x0],ch
   14002bf5c:	outs   dx,BYTE PTR ds:[rsi]
   14002bf5d:	add    BYTE PTR [rbx],dh
   14002bf5f:	add    BYTE PTR [rdx],dh
   14002bf61:	add    BYTE PTR [rdi+0x0],bl
   14002bf64:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002bf68:	ins    DWORD PTR es:[rdi],dx
   14002bf69:	add    BYTE PTR [rax+0x0],dh
   14002bf6c:	jne    0x14002bf6e
   14002bf6e:	je     0x14002bf70
   14002bf70:	add    BYTE PTR gs:[rdx+0x0],dh
   14002bf74:	push   rbx
   14002bf75:	add    BYTE PTR [rcx+0x0],bh
   14002bf78:	jae    0x14002bf7a
   14002bf7a:	je     0x14002bf7c
   14002bf7c:	add    BYTE PTR gs:[rbp+0x0],ch
	...
   14002bf88:	push   rbx
   14002bf89:	add    BYTE PTR [rbp+0x0],ah
   14002bf8c:	jb     0x14002bf8e
   14002bf8e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002bf94:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14002bf98:	ins    DWORD PTR es:[rdi],dx
   14002bf99:	add    BYTE PTR [rdx+0x0],ah
   14002bf9c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14002bfa8:	add    BYTE PTR gs:[rsi+0x0],ch
   14002bfac:	add    BYTE PTR fs:[rdi+0x0],bl
   14002bfb0:	(bad)  
   14002bfb1:	add    BYTE PTR [rsi+0x0],ah
   14002bfb4:	je     0x14002bfb6
   14002bfb6:	add    BYTE PTR gs:[rdx+0x0],dh
   14002bfba:	pop    rdi
   14002bfbb:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002bfbf:	add    BYTE PTR [rcx+0x0],bh
   14002bfc2:	jae    0x14002bfc4
   14002bfc4:	add    BYTE PTR [rax],al
   14002bfc6:	add    BYTE PTR [rax],al
   14002bfc8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002bfcc:	outs   dx,BYTE PTR ds:[rsi]
   14002bfcd:	add    BYTE PTR [rbp+0x0],dh
   14002bfd0:	data16 add BYTE PTR [rcx+0x0],ah
   14002bfd4:	movsxd eax,DWORD PTR [rax]
   14002bfd6:	je     0x14002bfd8
   14002bfd8:	jne    0x14002bfda
   14002bfda:	jb     0x14002bfdc
   14002bfdc:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14002bfe8:	push   rdi
   14002bfe9:	add    BYTE PTR [rcx+0x0],ch
   14002bfec:	outs   dx,BYTE PTR ds:[rsi]
   14002bfed:	add    BYTE PTR [rbx],dh
   14002bfef:	add    BYTE PTR [rdx],dh
   14002bff1:	add    BYTE PTR [rdi+0x0],bl
   14002bff4:	rex.X add BYTE PTR [rcx+0x0],spl
   14002bff8:	jae    0x14002bffa
   14002bffa:	add    BYTE PTR gs:[rdx+0x0],al
   14002bffe:	outs   dx,DWORD PTR ds:[rsi]
   14002bfff:	add    BYTE PTR [rcx+0x0],ah
   14002c002:	jb     0x14002c004
   14002c004:	add    BYTE PTR fs:[rax],al
   14002c007:	add    BYTE PTR [rbx+0x0],dl
   14002c00a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c00e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002c014:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14002c018:	ins    DWORD PTR es:[rdi],dx
   14002c019:	add    BYTE PTR [rdx+0x0],ah
   14002c01c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14002c028:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002c02c:	outs   dx,BYTE PTR ds:[rsi]
   14002c02d:	add    BYTE PTR [rbp+0x0],dh
   14002c030:	data16 add BYTE PTR [rcx+0x0],ah
   14002c034:	movsxd eax,DWORD PTR [rax]
   14002c036:	je     0x14002c038
   14002c038:	jne    0x14002c03a
   14002c03a:	jb     0x14002c03c
   14002c03c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14002c048:	push   rdi
   14002c049:	add    BYTE PTR [rcx+0x0],ch
   14002c04c:	outs   dx,BYTE PTR ds:[rsi]
   14002c04d:	add    BYTE PTR [rbx],dh
   14002c04f:	add    BYTE PTR [rdx],dh
   14002c051:	add    BYTE PTR [rdi+0x0],bl
   14002c054:	rex.X add BYTE PTR [rcx+0x0],cl
   14002c058:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   14002c05c:	add    BYTE PTR [rax],al
   14002c05e:	add    BYTE PTR [rax],al
   14002c060:	add    BYTE PTR [rcx+0x0],r9b
   14002c064:	rex.WRB add BYTE PTR [r14],r13b
   14002c067:	add    BYTE PTR [rbp+0x0],ah
   14002c06a:	js     0x14002c06c
   14002c06c:	add    BYTE PTR gs:[rax],al
   14002c06f:	add    BYTE PTR [rbx+0x0],al
   14002c072:	outs   dx,DWORD PTR ds:[rsi]
   14002c073:	add    BYTE PTR [rdx+0x0],dh
   14002c076:	add    BYTE PTR gs:[rax+rax*1+0x44],ch
   14002c07b:	add    BYTE PTR [rdi+0x0],ch
   14002c07e:	ja     0x14002c080
   14002c080:	outs   dx,BYTE PTR ds:[rsi]
   14002c081:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002c085:	add    BYTE PTR [rcx+0x0],ah
   14002c088:	add    BYTE PTR fs:[rbp+0x0],cl
   14002c08c:	add    BYTE PTR [edx+0x0],dh
   14002c090:	and    BYTE PTR [rax],al
   14002c092:	add    BYTE PTR [rax],al
   14002c094:	push   rsi
   14002c095:	add    BYTE PTR [rdx],dh
	...
   14002c09f:	add    BYTE PTR [rax+0x0],cl
   14002c0a2:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14002c0a6:	jbe    0x14002c0a8
   14002c0a8:	xor    al,BYTE PTR [rax]
   14002c0aa:	add    BYTE PTR [rax],al
   14002c0ac:	add    BYTE PTR [rax],al
   14002c0ae:	add    BYTE PTR [rax],al
   14002c0b0:	push   rbx
   14002c0b1:	add    BYTE PTR [rdi+0x0],ch
   14002c0b4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14002c0b9:	add    BYTE PTR [rcx+0x0],ah
   14002c0bc:	jb     0x14002c0be
   14002c0be:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   14002c0c3:	add    BYTE PTR [rdi+0x0],ch
   14002c0c6:	jb     0x14002c0c8
   14002c0c8:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14002c0cd:	add    BYTE PTR [rax+0x0],dl
   14002c0d0:	rex.XB add BYTE PTR [r13+0x0],dl
   14002c0d4:	add    BYTE PTR [rax],al
   14002c0d6:	add    BYTE PTR [rax],al
   14002c0d8:	rex.WB add BYTE PTR [r8+0x0],sil
   14002c0dc:	push   0x70006c00
   14002c0e1:	add    BYTE PTR [rcx+0x0],ah
   14002c0e4:	jo     0x14002c0e6
   14002c0e6:	imul   eax,DWORD PTR [rax],0x64002e
   14002c0ec:	ins    BYTE PTR es:[rdi],dx
   14002c0ed:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002c0f1:	add    BYTE PTR [rax],al
   14002c0f3:	add    BYTE PTR [rax],al
   14002c0f5:	add    BYTE PTR [rax],al
   14002c0f7:	add    BYTE PTR [rdi+0x65],al
   14002c0fa:	je     0x14002c13d
   14002c0fc:	fs (bad) 
   14002c0fe:	jo     0x14002c174
   14002c100:	gs jb  0x14002c176
   14002c103:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002c105:	outs   dx,WORD PTR ds:[rsi]
   14002c107:	add    BYTE PTR [rax+rax*1+0x56],bl
   14002c10b:	add    BYTE PTR [rcx+0x0],ah
   14002c10e:	jb     0x14002c110
   14002c110:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14002c114:	ins    BYTE PTR es:[rdi],dx
   14002c115:	add    BYTE PTR [rbp+0x0],ah
   14002c118:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002c11c:	data16 add BYTE PTR [rdi+0x0],ch
   14002c120:	pop    rsp
   14002c121:	add    BYTE PTR [rax+rax*1+0x72],dl
   14002c125:	add    BYTE PTR [rcx+0x0],ah
   14002c128:	outs   dx,BYTE PTR ds:[rsi]
   14002c129:	add    BYTE PTR [rbx+0x0],dh
   14002c12c:	ins    BYTE PTR es:[rdi],dx
   14002c12d:	add    BYTE PTR [rcx+0x0],ah
   14002c130:	je     0x14002c132
   14002c132:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002c140:	and    eax,0x32003000
   14002c145:	add    BYTE PTR [rax+0x0],ch
   14002c148:	js     0x14002c14a
   14002c14a:	and    eax,0x32003000
   14002c14f:	add    BYTE PTR [rax+0x0],ch
   14002c152:	js     0x14002c154
   14002c154:	and    eax,0x32003000
   14002c159:	add    BYTE PTR [rax+0x0],ch
   14002c15c:	js     0x14002c15e
   14002c15e:	and    eax,0x32003000
   14002c163:	add    BYTE PTR [rax+0x0],ch
   14002c166:	js     0x14002c168
   14002c168:	and    eax,0x32003000
   14002c16d:	add    BYTE PTR [rax+0x0],ch
   14002c170:	js     0x14002c172
   14002c172:	and    eax,0x32003000
   14002c177:	add    BYTE PTR [rax+0x0],ch
   14002c17a:	js     0x14002c17c
   14002c17c:	and    eax,0x32003000
   14002c181:	add    BYTE PTR [rax+0x0],ch
   14002c184:	js     0x14002c186
   14002c186:	and    eax,0x32003000
   14002c18b:	add    BYTE PTR [rax+0x0],ch
   14002c18e:	js     0x14002c190
	...
   14002c198:	and    eax,0x32002e00
   14002c19d:	add    BYTE PTR [rax+0x0],ch
   14002c1a0:	pop    rax
   14002c1a1:	add    BYTE PTR [rax],al
   14002c1a3:	add    BYTE PTR [rax],al
   14002c1a5:	add    BYTE PTR [rax],al
   14002c1a7:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002c1ab:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002c1af:	add    BYTE PTR [rbp+0x0],ah
   14002c1b2:	cmp    eax,0x0
   14002c1b7:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002c1bb:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002c1bf:	add    BYTE PTR [rbp+0x0],ah
   14002c1c2:	cmp    eax,0x0
   14002c1c7:	add    BYTE PTR [rbx+0x0],al
   14002c1ca:	rex.XB add BYTE PTR [r11+0x0],al
   14002c1ce:	pop    rsp
   14002c1cf:	add    BYTE PTR [rbx+0x0],dl
   14002c1d2:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c1d6:	jbe    0x14002c1d8
   14002c1d8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c1dc:	add    BYTE PTR [rcx+0x0],r12b
   14002c1e0:	je     0x14002c1e2
   14002c1e2:	(bad)  
   14002c1e3:	add    BYTE PTR [rax],al
   14002c1e5:	add    BYTE PTR [rax],al
   14002c1e7:	add    BYTE PTR [rbx+0x0],al
   14002c1ea:	rex.XB add BYTE PTR [r11+0x0],al
   14002c1ee:	pop    rsp
   14002c1ef:	add    BYTE PTR [rbx+0x0],dl
   14002c1f2:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c1f6:	jbe    0x14002c1f8
   14002c1f8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c1fc:	add    BYTE PTR [rcx+0x0],r12b
   14002c200:	je     0x14002c202
   14002c202:	(bad)  
   14002c203:	add    BYTE PTR [rax],al
   14002c205:	add    BYTE PTR [rax],al
   14002c207:	add    BYTE PTR [rbx+0x0],al
   14002c20a:	rex.XB add BYTE PTR [r11+0x0],al
   14002c20e:	pop    rsp
   14002c20f:	add    BYTE PTR [rbx+0x0],dl
   14002c212:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c216:	jbe    0x14002c218
   14002c218:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c21c:	add    BYTE PTR [rcx+0x0],r12b
   14002c220:	je     0x14002c222
   14002c222:	(bad)  
   14002c223:	add    BYTE PTR [rax],al
   14002c225:	add    BYTE PTR [rax],al
   14002c227:	add    BYTE PTR [rdx+0x0],al
   14002c22a:	push   rdx
   14002c22b:	add    BYTE PTR [rax],al
   14002c22d:	add    BYTE PTR [rax],al
   14002c22f:	add    BYTE PTR [rax+rax*1+0x53],bl
   14002c233:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002c237:	add    BYTE PTR [rcx+0x0],ch
   14002c23a:	outs   dx,BYTE PTR ds:[rsi]
   14002c23b:	add    BYTE PTR [rdi+0x0],ah
   14002c23e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14002c242:	ins    BYTE PTR es:[rdi],dx
   14002c243:	add    BYTE PTR [rbp+0x0],ah
   14002c246:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002c24a:	data16 add BYTE PTR [rdi+0x0],ch
   14002c24e:	pop    rsp
   14002c24f:	add    BYTE PTR [rip+0x34003000],ah        # 0x17402f255
   14002c255:	add    BYTE PTR [rax+0x0],bh
   14002c258:	and    eax,0x34003000
   14002c25d:	add    BYTE PTR [rax+0x0],bh
   14002c260:	pop    rsp
   14002c261:	add    BYTE PTR [rsi+0x0],al
   14002c264:	imul   eax,DWORD PTR [rax],0x65006c
   14002c26a:	push   rsi
   14002c26b:	add    BYTE PTR [rbp+0x0],ah
   14002c26e:	jb     0x14002c270
   14002c270:	jae    0x14002c272
   14002c272:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c278:	add    BYTE PTR [rax],al
   14002c27a:	add    BYTE PTR [rax],al
   14002c27c:	push   rax
   14002c27d:	add    BYTE PTR [rdi+0x0],cl
   14002c280:	add    BYTE PTR [rax],al
   14002c282:	add    BYTE PTR [rax],al
   14002c284:	add    BYTE PTR [r8+r8*1+0x0],dl
   14002c289:	add    BYTE PTR [rax],al
   14002c28b:	add    BYTE PTR [rbx+0x0],al
   14002c28e:	push   rbx
   14002c28f:	add    BYTE PTR [rax],al
   14002c291:	add    BYTE PTR [rax],al
   14002c293:	add    BYTE PTR [rbx+0x0],al
   14002c296:	pop    rdx
   14002c297:	add    BYTE PTR [rax],al
   14002c299:	add    BYTE PTR [rax],al
   14002c29b:	add    BYTE PTR [rax+rax*1+0x45],al
   14002c29f:	add    BYTE PTR [rax],al
   14002c2a1:	add    BYTE PTR [rax],al
   14002c2a3:	add    BYTE PTR [rbp+0x0],al
   14002c2a6:	rex.WRX add BYTE PTR [rax],r8b
   14002c2a9:	add    BYTE PTR [rax],al
   14002c2ab:	add    BYTE PTR [rbp+0x0],al
   14002c2ae:	push   rbx
   14002c2af:	add    BYTE PTR [rax],al
   14002c2b1:	add    BYTE PTR [rax],al
   14002c2b3:	add    BYTE PTR [rsi+0x0],al
   14002c2b6:	push   rdx
   14002c2b7:	add    BYTE PTR [rax],al
   14002c2b9:	add    BYTE PTR [rax],al
   14002c2bb:	add    BYTE PTR [rcx+0x0],cl
   14002c2be:	push   rsp
   14002c2bf:	add    BYTE PTR [rax],al
   14002c2c1:	add    BYTE PTR [rax],al
   14002c2c3:	add    BYTE PTR [rdx+0x0],cl
   14002c2c6:	push   rax
   14002c2c7:	add    BYTE PTR [rax],al
   14002c2c9:	add    BYTE PTR [rax],al
   14002c2cb:	add    BYTE PTR [rbx+0x0],cl
   14002c2ce:	push   rdx
   14002c2cf:	add    BYTE PTR [rax],al
   14002c2d1:	add    BYTE PTR [rax],al
   14002c2d3:	add    BYTE PTR [rbp+0x0],cl
   14002c2d6:	add    BYTE PTR [r8],al
   14002c2d9:	add    BYTE PTR [rax],al
   14002c2db:	add    BYTE PTR [rsi+0x0],cl
   14002c2de:	rex.WR add BYTE PTR [rax],r8b
   14002c2e1:	add    BYTE PTR [rax],al
   14002c2e3:	add    BYTE PTR [rsi+0x0],cl
   14002c2e6:	rex.WRXB add BYTE PTR [r8],r8b
   14002c2e9:	add    BYTE PTR [rax],al
   14002c2eb:	add    BYTE PTR [rax+0x0],dl
   14002c2ee:	rex.WR add BYTE PTR [rax],r8b
   14002c2f1:	add    BYTE PTR [rax],al
   14002c2f3:	add    BYTE PTR [rdx+0x0],dl
   14002c2f6:	push   rbp
   14002c2f7:	add    BYTE PTR [rax],al
   14002c2f9:	add    BYTE PTR [rax],al
   14002c2fb:	add    BYTE PTR [rbx+0x0],dl
   14002c2fe:	push   rbp
   14002c2ff:	add    BYTE PTR [rax],al
   14002c301:	add    BYTE PTR [rax],al
   14002c303:	add    BYTE PTR [rbx+0x0],dl
   14002c306:	push   rsi
   14002c307:	add    BYTE PTR [rax],al
   14002c309:	add    BYTE PTR [rax],al
   14002c30b:	add    BYTE PTR [rax+rax*1+0x41],al
   14002c30f:	add    BYTE PTR [rax],al
   14002c311:	add    BYTE PTR [rax],al
   14002c313:	add    BYTE PTR [rbx+0x0],dl
   14002c316:	rex.WXB add BYTE PTR [r8],al
   14002c319:	add    BYTE PTR [rax],al
   14002c31b:	add    BYTE PTR [rbx+0x0],dl
   14002c31e:	rex.WR add BYTE PTR [rax],r8b
   14002c321:	add    BYTE PTR [rax],al
   14002c323:	add    BYTE PTR [rcx+0x0],al
   14002c326:	push   rdx
   14002c327:	add    BYTE PTR [rax],al
   14002c329:	add    BYTE PTR [rax],al
   14002c32b:	add    BYTE PTR [rax+rax*1+0x52],dl
   14002c32f:	add    BYTE PTR [rax],al
   14002c331:	add    BYTE PTR [rax],al
   14002c333:	add    BYTE PTR [rax+0x0],cl
   14002c336:	add    BYTE PTR [r8],r8b
   14002c339:	add    BYTE PTR [rax],al
   14002c33b:	add    BYTE PTR [rax+rax*1+0x48],dl
   14002c33f:	add    BYTE PTR [rax],al
   14002c341:	add    BYTE PTR [rax],al
   14002c343:	add    BYTE PTR [rbp+0x0],al
   14002c346:	rex.WR add BYTE PTR [rax],r8b
   14002c349:	add    BYTE PTR [rax],al
   14002c34b:	add    BYTE PTR [rdx+0x0],dl
   14002c34e:	rex.WRXB add BYTE PTR [r8],r8b
   14002c351:	add    BYTE PTR [rax],al
   14002c353:	add    BYTE PTR [rax+0x0],cl
   14002c356:	push   rdx
   14002c357:	add    BYTE PTR [rax],al
   14002c359:	add    BYTE PTR [rax],al
   14002c35b:	add    BYTE PTR [rbp+0x0],al
   14002c35e:	rex.WRX add BYTE PTR [rax],r8b
   14002c361:	add    BYTE PTR [rax],al
   14002c363:	add    BYTE PTR [rbp+0x0],al
   14002c366:	rex.WRX add BYTE PTR [rax],r8b
   14002c369:	add    BYTE PTR [rax],al
   14002c36b:	add    BYTE PTR [rax],al
   14002c36d:	add    BYTE PTR [rax],al
   14002c36f:	add    BYTE PTR [rbx+0x0],dh
   14002c372:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   14002c377:	add    BYTE PTR [rbx+0x0],ah
   14002c37a:	je     0x14002c37c
   14002c37c:	and    BYTE PTR [rax],al
   14002c37e:	sub    al,BYTE PTR [rax]
   14002c380:	and    BYTE PTR [rax],al
   14002c382:	data16 add BYTE PTR [rdx+0x0],dh
   14002c386:	outs   dx,DWORD PTR ds:[rsi]
   14002c387:	add    BYTE PTR [rbp+0x0],ch
   14002c38a:	and    BYTE PTR [rax],al
   14002c38c:	add    BYTE PTR [rax],al
   14002c38e:	add    BYTE PTR [rax],al
   14002c390:	push   rdx
   14002c391:	add    BYTE PTR [rdi+0x0],cl
   14002c394:	rex.WRXB add BYTE PTR [r8+r8*1+0x5c],r10b
   14002c399:	add    BYTE PTR [rbx+0x0],al
   14002c39c:	rex.WB add BYTE PTR [r13+0x0],cl
   14002c3a0:	push   rsi
   14002c3a1:	add    BYTE PTR [rdx],dh
   14002c3a3:	add    BYTE PTR [rax],al
   14002c3a5:	add    BYTE PTR [rax],al
   14002c3a7:	add    BYTE PTR [rax+0x0],cl
   14002c3aa:	rex.RX add BYTE PTR [rsi+0x0],r9b
   14002c3ae:	rex.XB add BYTE PTR [r14+0x0],sil
   14002c3b2:	xor    al,BYTE PTR [rax]
   14002c3b4:	add    BYTE PTR [rax],al
   14002c3b6:	add    BYTE PTR [rax],al
   14002c3b8:	push   rbx
   14002c3b9:	add    BYTE PTR [rdi+0x0],ch
   14002c3bc:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14002c3c1:	add    BYTE PTR [rcx+0x0],ah
   14002c3c4:	jb     0x14002c3c6
   14002c3c6:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   14002c3cb:	add    BYTE PTR [rdi+0x0],ch
   14002c3ce:	jb     0x14002c3d0
   14002c3d0:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14002c3d5:	add    BYTE PTR [rax+0x0],dl
   14002c3d8:	rex.XB add BYTE PTR [r13+0x0],dl
   14002c3dc:	add    BYTE PTR [rax],al
   14002c3de:	add    BYTE PTR [rax],al
   14002c3e0:	jae    0x14002c3e2
   14002c3e2:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   14002c3e7:	add    BYTE PTR [rbx+0x0],ah
   14002c3ea:	je     0x14002c3ec
   14002c3ec:	and    BYTE PTR [rax],al
   14002c3ee:	sub    al,BYTE PTR [rax]
   14002c3f0:	and    BYTE PTR [rax],al
   14002c3f2:	data16 add BYTE PTR [rdx+0x0],dh
   14002c3f6:	outs   dx,DWORD PTR ds:[rsi]
   14002c3f7:	add    BYTE PTR [rbp+0x0],ch
   14002c3fa:	and    BYTE PTR [rax],al
   14002c3fc:	push   rdi
   14002c3fd:	add    BYTE PTR [rcx+0x0],ch
   14002c400:	outs   dx,BYTE PTR ds:[rsi]
   14002c401:	add    BYTE PTR [rbx],dh
   14002c403:	add    BYTE PTR [rdx],dh
   14002c405:	add    BYTE PTR [rdi+0x0],bl
   14002c408:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14002c40c:	je     0x14002c40e
   14002c40e:	ja     0x14002c410
   14002c410:	outs   dx,DWORD PTR ds:[rsi]
   14002c411:	add    BYTE PTR [rdx+0x0],dh
   14002c414:	imul   eax,DWORD PTR [rax],0x41
   14002c417:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002c41b:	add    BYTE PTR [rax+0x0],dh
   14002c41e:	je     0x14002c420
   14002c420:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c424:	and    BYTE PTR [rax],al
   14002c426:	ja     0x14002c428
   14002c428:	push   0x72006500
   14002c42d:	add    BYTE PTR [rbp+0x0],ah
   14002c430:	and    BYTE PTR [rax],al
   14002c432:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14002c436:	push   rsp
   14002c437:	add    BYTE PTR [rax],ah
   14002c439:	add    BYTE PTR [rax+0x0],dl
   14002c43c:	rex.WRX add BYTE PTR [rax+0x0],r10b
   14002c440:	add    BYTE PTR [rbp+0x0],r12b
   14002c444:	jbe    0x14002c446
   14002c446:	imul   eax,DWORD PTR [rax],0x650063
   14002c44c:	rex.WB add BYTE PTR [r8+rax*1+0x20],al
   14002c451:	add    BYTE PTR [rax+rax*1+0x49],cl
   14002c455:	add    BYTE PTR [rbx+0x0],cl
   14002c458:	add    BYTE PTR [r8],r12b
   14002c45b:	add    BYTE PTR [rdi],ah
   14002c45d:	add    BYTE PTR [rdx+0x0],dl
   14002c460:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14002c464:	push   rsp
   14002c465:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14002c469:	add    BYTE PTR [rip+0x20002700],ah        # 0x16002eb6f
   14002c46f:	add    BYTE PTR [rcx+0x0],al
   14002c472:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r8b
   14002c477:	add    BYTE PTR [rsi+0x0],cl
   14002c47a:	rex.WRXB add BYTE PTR [r8+r8*1+0x20],r10b
   14002c47f:	add    BYTE PTR [rax+0x0],dl
   14002c482:	rex.WRX add BYTE PTR [rax+0x0],r10b
   14002c486:	add    BYTE PTR [rbp+0x0],r12b
   14002c48a:	jbe    0x14002c48c
   14002c48c:	imul   eax,DWORD PTR [rax],0x650063
   14002c492:	rex.WB add BYTE PTR [r8+rax*1+0x20],al
   14002c497:	add    BYTE PTR [rax+rax*1+0x49],cl
   14002c49b:	add    BYTE PTR [rbx+0x0],cl
   14002c49e:	add    BYTE PTR [r8],r12b
   14002c4a1:	add    BYTE PTR [rdi],ah
   14002c4a3:	add    BYTE PTR [rbx+0x0],dl
   14002c4a6:	push   rdi
   14002c4a7:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14002c4ab:	add    BYTE PTR [rip+0x20002700],ah        # 0x16002ebb1
   14002c4b1:	add    BYTE PTR [rax],al
   14002c4b3:	add    BYTE PTR [rax],al
   14002c4b5:	add    BYTE PTR [rax],al
   14002c4b7:	add    BYTE PTR [rdx+0x0],dl
   14002c4ba:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14002c4be:	push   rsp
   14002c4bf:	add    BYTE PTR [rax+rax*1+0x43],bl
   14002c4c3:	add    BYTE PTR [rcx+0x0],cl
   14002c4c6:	rex.WRB add BYTE PTR [r14+0x0],r10b
   14002c4ca:	xor    al,BYTE PTR [rax]
   14002c4cc:	add    BYTE PTR [rax],al
   14002c4ce:	add    BYTE PTR [rax],al
   14002c4d0:	push   rsp
   14002c4d1:	add    BYTE PTR [rdi+0x0],ch
   14002c4d4:	je     0x14002c4d6
   14002c4d6:	(bad)  
   14002c4d7:	add    BYTE PTR [rax+rax*1+0x4c],ch
   14002c4db:	add    BYTE PTR [rcx+0x0],ah
   14002c4de:	jne    0x14002c4e0
   14002c4e0:	outs   dx,BYTE PTR ds:[rsi]
   14002c4e1:	add    BYTE PTR [rbx+0x0],ah
   14002c4e4:	push   0x6f004300
   14002c4e9:	add    BYTE PTR [rbp+0x0],dh
   14002c4ec:	outs   dx,BYTE PTR ds:[rsi]
   14002c4ed:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002c4f1:	add    BYTE PTR [rax],al
   14002c4f3:	add    BYTE PTR [rax],al
   14002c4f5:	add    BYTE PTR [rax],al
   14002c4f7:	add    BYTE PTR [rax+0x0],dl
   14002c4fa:	jb     0x14002c4fc
   14002c4fc:	outs   dx,DWORD PTR ds:[rsi]
   14002c4fd:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002c501:	add    BYTE PTR [rbx+0x0],ah
   14002c504:	je     0x14002c506
   14002c506:	push   rsp
   14002c507:	add    BYTE PTR [rcx+0x0],ch
   14002c50a:	je     0x14002c50c
   14002c50c:	ins    BYTE PTR es:[rdi],dx
   14002c50d:	add    BYTE PTR [rbp+0x0],ah
	...
   14002c518:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14002c51c:	ins    DWORD PTR es:[rdi],dx
   14002c51d:	add    BYTE PTR [rax+rax*1+0x61],al
   14002c521:	add    BYTE PTR [rcx+0x0],bh
   14002c524:	jae    0x14002c526
   14002c526:	add    BYTE PTR [rax],al
   14002c528:	push   rsp
   14002c529:	add    BYTE PTR [rdi+0x0],ch
   14002c52c:	je     0x14002c52e
   14002c52e:	(bad)  
   14002c52f:	add    BYTE PTR [rax+rax*1+0x44],ch
   14002c533:	add    BYTE PTR [rcx+0x0],ah
   14002c536:	jns    0x14002c538
   14002c538:	jae    0x14002c53a
   14002c53a:	add    BYTE PTR [rax],al
   14002c53c:	add    BYTE PTR [rax],al
   14002c53e:	add    BYTE PTR [rax],al
   14002c540:	push   rbx
   14002c541:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002c545:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002c549:	add    BYTE PTR [rbx+0x0],dh
   14002c54c:	add    BYTE PTR [rax],al
   14002c54e:	add    BYTE PTR [rax],al
   14002c550:	push   rbx
   14002c551:	add    BYTE PTR [rsi+0x0],cl
   14002c554:	add    BYTE PTR [rax],al
   14002c556:	add    BYTE PTR [rax],al
   14002c558:	push   rbx
   14002c559:	add    BYTE PTR [rsi+0x0],cl
   14002c55c:	rex.RX add BYTE PTR [rax],r8b
   14002c55f:	add    BYTE PTR [rcx+0x0],al
   14002c562:	movsxd eax,DWORD PTR [rax]
   14002c564:	je     0x14002c566
   14002c566:	imul   eax,DWORD PTR [rax],0x610076
   14002c56c:	je     0x14002c56e
   14002c56e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c574:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002c578:	add    BYTE PTR fs:[rbp+0x0],ah
   14002c57c:	add    BYTE PTR [rax],al
   14002c57e:	add    BYTE PTR [rax],al
   14002c580:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002c584:	jae    0x14002c586
   14002c586:	je     0x14002c588
   14002c588:	(bad)  
   14002c589:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002c58d:	add    BYTE PTR [rcx+0x0],ah
   14002c590:	je     0x14002c592
   14002c592:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c598:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002c59c:	add    BYTE PTR fs:[rbp+0x0],ah
   14002c5a0:	add    BYTE PTR [rax],al
   14002c5a2:	add    BYTE PTR [rax],al
   14002c5a4:	push   rbx
   14002c5a5:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002c5a9:	add    BYTE PTR [rax],al
   14002c5ab:	add    BYTE PTR [rax+rax*1+0x43],cl
	...
   14002c5b7:	add    BYTE PTR [rax+rax*1+0x69],cl
   14002c5bb:	add    BYTE PTR [rbx+0x0],ah
   14002c5be:	add    BYTE PTR gs:[rsi+0x0],ch
   14002c5c2:	jae    0x14002c5c4
   14002c5c4:	add    BYTE PTR gs:[rax],al
   14002c5c7:	add    BYTE PTR [rbx+0x0],dl
   14002c5ca:	push   rsi
   14002c5cb:	add    BYTE PTR [rdx+0x0],dl
   14002c5ce:	rex.XB add BYTE PTR [r11+0x0],cl
   14002c5d2:	push   rbx
   14002c5d3:	add    BYTE PTR [rax],al
   14002c5d5:	add    BYTE PTR [rax],al
   14002c5d7:	add    BYTE PTR [rax+0x0],dl
   14002c5da:	rex.XB add BYTE PTR [r9+0x0],cl
   14002c5de:	add    BYTE PTR [rax],r8b
   14002c5e1:	add    BYTE PTR [rax],al
   14002c5e3:	add    BYTE PTR [rax],al
   14002c5e5:	add    BYTE PTR [rax],al
   14002c5e7:	add    BYTE PTR [rax+0x0],dl
   14002c5ea:	rex.XB add BYTE PTR [r9+0x0],cl
   14002c5ee:	add    BYTE PTR [rsi+0x0],r8b
   14002c5f2:	add    BYTE PTR [rax],al
   14002c5f4:	add    BYTE PTR [rax],al
   14002c5f6:	add    BYTE PTR [rax],al
   14002c5f8:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002c5fc:	outs   dx,BYTE PTR ds:[rsi]
   14002c5fd:	add    BYTE PTR [rdi+0x0],ah
   14002c600:	push   rax
   14002c601:	add    BYTE PTR [rcx+0x0],ah
   14002c604:	je     0x14002c606
   14002c606:	push   0x0
   14002c60b:	add    BYTE PTR [rax],al
   14002c60d:	add    BYTE PTR [rax],al
   14002c60f:	add    BYTE PTR [rax+rax*1+0x61],cl
   14002c613:	add    BYTE PTR [rsi+0x0],ch
   14002c616:	add    BYTE PTR [ebx+0x0],al
   14002c61a:	outs   dx,DWORD PTR ds:[rsi]
   14002c61b:	add    BYTE PTR [rax+rax*1+0x65],ah
	...
   14002c627:	add    BYTE PTR [rdx+0x0],dl
   14002c62a:	add    BYTE PTR gs:[rdi+0x0],ah
   14002c62e:	push   rsp
   14002c62f:	add    BYTE PTR [rdx+0x0],dh
   14002c632:	imul   eax,DWORD PTR [rax],0x670067
   14002c638:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c63c:	add    BYTE PTR [rax],al
   14002c63e:	add    BYTE PTR [rax],al
   14002c640:	push   rdx
   14002c641:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002c645:	add    BYTE PTR [rax],al
   14002c647:	add    BYTE PTR [rbx+0x0],dl
   14002c64a:	outs   dx,DWORD PTR ds:[rsi]
   14002c64b:	add    BYTE PTR [rbp+0x0],dh
   14002c64e:	jb     0x14002c650
   14002c650:	movsxd eax,DWORD PTR [rax]
   14002c652:	add    BYTE PTR gs:[rcx+0x0],cl
   14002c656:	add    BYTE PTR [rax],r8b
   14002c659:	add    BYTE PTR [rax],al
   14002c65b:	add    BYTE PTR [rax],al
   14002c65d:	add    BYTE PTR [rax],al
   14002c65f:	add    BYTE PTR [rax+0x0],dl
   14002c662:	(bad)  
   14002c663:	add    BYTE PTR [rdx+0x0],dh
   14002c666:	add    BYTE PTR gs:[rsi+0x0],ch
   14002c66a:	je     0x14002c66c
   14002c66c:	push   rbx
   14002c66d:	add    BYTE PTR [rdi+0x0],ch
   14002c670:	jne    0x14002c672
   14002c672:	jb     0x14002c674
   14002c674:	movsxd eax,DWORD PTR [rax]
   14002c676:	add    BYTE PTR gs:[rcx+0x0],cl
   14002c67a:	add    BYTE PTR [rax],r8b
   14002c67d:	add    BYTE PTR [rax],al
   14002c67f:	add    BYTE PTR [rcx+0x0],cl
   14002c682:	jae    0x14002c684
   14002c684:	push   rax
   14002c685:	add    BYTE PTR [rdx+0x0],dh
   14002c688:	outs   dx,DWORD PTR ds:[rsi]
   14002c689:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002c68d:	add    BYTE PTR [rbx+0x0],ah
   14002c690:	je     0x14002c692
   14002c692:	add    BYTE PTR [rax],al
   14002c694:	add    BYTE PTR [rax],al
   14002c696:	add    BYTE PTR [rax],al
   14002c698:	rex.W add BYTE PTR [rdi+0x0],dl
   14002c69c:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002c6a1:	add    BYTE PTR [rax],al
   14002c6a3:	add    BYTE PTR [rax],al
   14002c6a5:	add    BYTE PTR [rax],al
   14002c6a7:	add    BYTE PTR [rcx+0x0],cl
   14002c6aa:	jae    0x14002c6ac
   14002c6ac:	push   rdx
   14002c6ad:	add    BYTE PTR [rbp+0x0],ah
   14002c6b0:	add    BYTE PTR [ecx+0x0],ch
   14002c6b4:	jae    0x14002c6b6
   14002c6b6:	je     0x14002c6b8
   14002c6b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c6bc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002c6c1:	add    BYTE PTR [rax],al
   14002c6c3:	add    BYTE PTR [rax],al
   14002c6c5:	add    BYTE PTR [rax],al
   14002c6c7:	add    BYTE PTR [rax+rax*1+0x45],al
   14002c6cb:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002c6cf:	add    BYTE PTR [rbx+0x0],al
   14002c6d2:	push   rbp
   14002c6d3:	add    BYTE PTR [rbx+0x0],dl
   14002c6d6:	push   rsp
   14002c6d7:	add    BYTE PTR [rcx+0x0],cl
   14002c6da:	add    BYTE PTR [rax],r8b
   14002c6dd:	add    BYTE PTR [rax],al
   14002c6df:	add    BYTE PTR [rax+rax*1+0x45],al
   14002c6e3:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002c6e7:	add    BYTE PTR [rax+0x0],dl
   14002c6ea:	push   rdx
   14002c6eb:	add    BYTE PTR [rdi+0x0],cl
   14002c6ee:	add    BYTE PTR [rbp+0x0],r10b
   14002c6f2:	add    BYTE PTR [r8+r8*1+0x0],dl
   14002c6f7:	add    BYTE PTR [rax+rax*1+0x45],al
   14002c6fb:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002c6ff:	add    BYTE PTR [rbx+0x0],dl
   14002c702:	add    BYTE PTR [r10+0x0],r10b
   14002c706:	push   rsi
   14002c707:	add    BYTE PTR [rcx+0x0],cl
   14002c70a:	rex.XB add BYTE PTR [r13+0x0],al
   14002c70e:	push   rsp
   14002c70f:	add    BYTE PTR [rcx+0x0],al
   14002c712:	rex.RXB add BYTE PTR [r8],r8b
   14002c715:	add    BYTE PTR [rax],al
   14002c717:	add    BYTE PTR [rsi+0x0],al
   14002c71a:	add    BYTE PTR gs:[rcx+0x0],ah
   14002c71e:	je     0x14002c720
   14002c720:	jne    0x14002c722
   14002c722:	jb     0x14002c724
   14002c724:	add    BYTE PTR gs:[rcx+0x0],cl
   14002c728:	add    BYTE PTR [rax],r8b
   14002c72b:	add    BYTE PTR [rax],al
   14002c72d:	add    BYTE PTR [rax],al
   14002c72f:	add    BYTE PTR [rsi+0x0],dl
   14002c732:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c736:	jae    0x14002c738
   14002c738:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c73e:	add    BYTE PTR [rax],al
   14002c740:	push   rdx
   14002c741:	add    BYTE PTR [rbp+0x0],ah
   14002c744:	add    BYTE PTR [eax+eax*1+0x79],dl
   14002c749:	add    BYTE PTR [rax+0x0],dh
   14002c74c:	add    BYTE PTR gs:[rax],al
   14002c74f:	add    BYTE PTR [rdx+0x0],dl
   14002c752:	add    BYTE PTR gs:[rdi+0x0],ah
   14002c756:	rex.WRXB add BYTE PTR [r14+0x0],r14b
   14002c75a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c75e:	add    BYTE PTR [rax],al
   14002c760:	add    BYTE PTR [r8+0x0],sil
   14002c764:	jo     0x14002c766
   14002c766:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002c76a:	outs   dx,BYTE PTR ds:[rsi]
   14002c76b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002c76f:	add    BYTE PTR [rax+0x0],bh
   14002c772:	je     0x14002c774
   14002c774:	add    BYTE PTR [rax],al
   14002c776:	add    BYTE PTR [rax],al
   14002c778:	rex.W add BYTE PTR [rax+rax*1+0x49],al
   14002c77d:	add    BYTE PTR [rax+rax*1+0x0],al
   14002c781:	add    BYTE PTR [rax],al
   14002c783:	add    BYTE PTR [rax],al
   14002c785:	add    BYTE PTR [rax],al
   14002c787:	add    BYTE PTR [rbp+0x0],al
   14002c78a:	js     0x14002c78c
   14002c78c:	je     0x14002c78e
   14002c78e:	add    BYTE PTR gs:[rsi+0x0],ch
   14002c792:	jae    0x14002c794
   14002c794:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c79a:	push   rax
   14002c79b:	add    BYTE PTR [rbp+0x0],ah
   14002c79e:	jb     0x14002c7a0
   14002c7a0:	imul   eax,DWORD PTR [rax],0x64006f
   14002c7a6:	add    BYTE PTR [rax],al
   14002c7a8:	push   rax
   14002c7a9:	add    BYTE PTR [rdx+0x0],dh
   14002c7ac:	outs   dx,DWORD PTR ds:[rsi]
   14002c7ad:	add    BYTE PTR [rsi+0x0],ah
   14002c7b0:	imul   eax,DWORD PTR [rax],0x65006c
   14002c7b6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002c7bb:	add    BYTE PTR [rax],al
   14002c7bd:	add    BYTE PTR [rax],al
   14002c7bf:	add    BYTE PTR [rbp+0x0],dl
   14002c7c2:	jae    0x14002c7c4
   14002c7c4:	add    BYTE PTR gs:[rdx+0x0],dh
   14002c7c8:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002c7cd:	add    BYTE PTR [rax],al
   14002c7cf:	add    BYTE PTR [rbx+0x0],dl
   14002c7d2:	jne    0x14002c7d4
   14002c7d4:	(bad)  
   14002c7d5:	add    BYTE PTR [rbx+0x0],dh
   14002c7d8:	movsxd eax,DWORD PTR [rax]
   14002c7da:	jb     0x14002c7dc
   14002c7dc:	imul   eax,DWORD PTR [rax],0x740070
   14002c7e2:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c7e8:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002c7ed:	add    BYTE PTR [rax],al
   14002c7ef:	add    BYTE PTR [rbx+0x0],dl
   14002c7f2:	jne    0x14002c7f4
   14002c7f4:	(bad)  
   14002c7f5:	add    BYTE PTR [rbx+0x0],dh
   14002c7f8:	movsxd eax,DWORD PTR [rax]
   14002c7fa:	jb     0x14002c7fc
   14002c7fc:	imul   eax,DWORD PTR [rax],0x740070
   14002c802:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c808:	push   rdx
   14002c809:	add    BYTE PTR [rbp+0x0],ah
   14002c80c:	ins    DWORD PTR es:[rdi],dx
   14002c80d:	add    BYTE PTR [rcx+0x0],ch
   14002c810:	outs   dx,BYTE PTR ds:[rsi]
   14002c811:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002c815:	add    BYTE PTR [rdx+0x0],dh
   14002c818:	add    BYTE PTR [rcx+0x0],r12b
   14002c81c:	jns    0x14002c81e
   14002c81e:	jae    0x14002c820
	...
   14002c828:	push   rbx
   14002c829:	add    BYTE PTR [rbp+0x0],dh
   14002c82c:	(bad)  
   14002c82d:	add    BYTE PTR [rbx+0x0],dh
   14002c830:	movsxd eax,DWORD PTR [rax]
   14002c832:	jb     0x14002c834
   14002c834:	imul   eax,DWORD PTR [rax],0x740070
   14002c83a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c840:	push   rdx
   14002c841:	add    BYTE PTR [rbp+0x0],ah
   14002c844:	ins    DWORD PTR es:[rdi],dx
   14002c845:	add    BYTE PTR [rcx+0x0],ch
   14002c848:	outs   dx,BYTE PTR ds:[rsi]
   14002c849:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002c84d:	add    BYTE PTR [rdx+0x0],dh
   14002c850:	push   rbx
   14002c851:	add    BYTE PTR [rax+0x0],ch
   14002c854:	outs   dx,DWORD PTR ds:[rsi]
   14002c855:	add    BYTE PTR [rdi+0x0],dh
	...
   14002c860:	push   rax
   14002c861:	add    BYTE PTR [rbx+0x0],dl
   14002c864:	rex.WRX add BYTE PTR [rax],r8b
   14002c867:	add    BYTE PTR [rax+0x0],dl
   14002c86a:	push   rbx
   14002c86b:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002c86f:	add    BYTE PTR [rdx+0x0],dl
   14002c872:	jne    0x14002c874
   14002c874:	outs   dx,BYTE PTR ds:[rsi]
   14002c875:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002c879:	add    BYTE PTR [rbp+0x0],ch
   14002c87c:	add    BYTE PTR gs:[rbp+0x0],al
   14002c880:	jbe    0x14002c882
   14002c882:	add    BYTE PTR gs:[rsi+0x0],ch
   14002c886:	je     0x14002c888
	...
   14002c890:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002c894:	movsxd eax,DWORD PTR [rax]
   14002c896:	push   0x6e006900
   14002c89b:	add    BYTE PTR [rbp+0x0],ah
   14002c89e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002c8a3:	add    BYTE PTR [rax],al
   14002c8a5:	add    BYTE PTR [rax],al
   14002c8a7:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002c8ab:	add    BYTE PTR [rcx+0x0],ch
   14002c8ae:	(bad)  
   14002c8af:	add    BYTE PTR [rax+rax*1+0x74],ch
   14002c8b3:	add    BYTE PTR [rdx+0x0],dh
   14002c8b6:	(bad)  
   14002c8b7:	add    BYTE PTR [rbx+0x0],ah
   14002c8ba:	imul   eax,DWORD PTR [rax],0x69
   14002c8bd:	add    BYTE PTR [rsi+0x0],ch
   14002c8c0:	add    BYTE PTR [ecx+0x0],ch
   14002c8c4:	add    BYTE PTR fs:[rax],al
   14002c8c7:	add    BYTE PTR [rcx+0x0],ch
   14002c8ca:	(bad)  
   14002c8cb:	add    BYTE PTR [rdx+0x0],dh
   14002c8ce:	je     0x14002c8d0
   14002c8d0:	jb     0x14002c8d2
   14002c8d2:	(bad)  
   14002c8d3:	add    BYTE PTR [rbx+0x0],ah
   14002c8d6:	imul   eax,DWORD PTR [rax],0x69
   14002c8d9:	add    BYTE PTR [rsi+0x0],ch
   14002c8dc:	add    BYTE PTR [ecx+0x0],ch
   14002c8e0:	add    BYTE PTR fs:[rax],al
   14002c8e3:	add    BYTE PTR [rax],al
   14002c8e5:	add    BYTE PTR [rax],al
   14002c8e7:	add    BYTE PTR [rbp+0x0],cl
   14002c8ea:	(bad)  
   14002c8eb:	add    BYTE PTR [rdx+0x0],ch
   14002c8ee:	outs   dx,DWORD PTR ds:[rsi]
   14002c8ef:	add    BYTE PTR [rdx+0x0],dh
   14002c8f2:	push   rsi
   14002c8f3:	add    BYTE PTR [rbp+0x0],ah
   14002c8f6:	jb     0x14002c8f8
   14002c8f8:	jae    0x14002c8fa
   14002c8fa:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002c908:	add    BYTE PTR [r13+0x0],r13b
   14002c90c:	(bad)  
   14002c90d:	add    BYTE PTR [rcx+0x0],ch
   14002c910:	ins    BYTE PTR es:[rdi],dx
   14002c911:	add    BYTE PTR [rbx+0x0],dl
   14002c914:	je     0x14002c916
   14002c916:	(bad)  
   14002c917:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002c91b:	add    BYTE PTR [rbx+0x0],dh
   14002c91e:	add    BYTE PTR [rax],al
   14002c920:	push   rbx
   14002c921:	add    BYTE PTR [rbp+0x0],dh
   14002c924:	(bad)  
   14002c925:	add    BYTE PTR [rbx+0x0],dh
   14002c928:	movsxd eax,DWORD PTR [rax]
   14002c92a:	jb     0x14002c92c
   14002c92c:	imul   eax,DWORD PTR [rax],0x740070
   14002c932:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c938:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14002c93d:	add    BYTE PTR [rbx+0x0],dh
   14002c940:	jae    0x14002c942
   14002c942:	imul   eax,DWORD PTR [rax],0x690066
   14002c948:	movsxd eax,DWORD PTR [rax]
   14002c94a:	(bad)  
   14002c94b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002c94f:	add    BYTE PTR [rdi+0x0],ch
   14002c952:	outs   dx,BYTE PTR ds:[rsi]
   14002c953:	add    BYTE PTR [rax],al
   14002c955:	add    BYTE PTR [rax],al
   14002c957:	add    BYTE PTR [rbx+0x0],dh
   14002c95a:	je     0x14002c95c
   14002c95c:	outs   dx,DWORD PTR ds:[rsi]
   14002c95d:	add    BYTE PTR [rdx+0x0],dh
   14002c960:	(bad)  
   14002c961:	add    BYTE PTR [rdi+0x0],ah
   14002c964:	add    BYTE PTR gs:[rax],al
   14002c967:	add    BYTE PTR [rbp+0x0],cl
   14002c96a:	(bad)  
   14002c96b:	add    BYTE PTR [rdx+0x0],ch
   14002c96e:	outs   dx,DWORD PTR ds:[rsi]
   14002c96f:	add    BYTE PTR [rdx+0x0],dh
   14002c972:	(bad)  
   14002c973:	add    BYTE PTR [rsi+0x0],ch
   14002c976:	add    BYTE PTR fs:[rbp+0x0],cl
   14002c97a:	imul   eax,DWORD PTR [rax],0x6f006e
   14002c980:	jb     0x14002c982
   14002c982:	push   rsi
   14002c983:	add    BYTE PTR [rbp+0x0],ah
   14002c986:	jb     0x14002c988
   14002c988:	jae    0x14002c98a
   14002c98a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002c998:	push   rbx
   14002c999:	add    BYTE PTR [rbp+0x0],dh
   14002c99c:	(bad)  
   14002c99d:	add    BYTE PTR [rbx+0x0],dh
   14002c9a0:	movsxd eax,DWORD PTR [rax]
   14002c9a2:	jb     0x14002c9a4
   14002c9a4:	imul   eax,DWORD PTR [rax],0x740070
   14002c9aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c9b0:	rex.XB add BYTE PTR [r13+0x0],sil
   14002c9b4:	jb     0x14002c9b6
   14002c9b6:	jb     0x14002c9b8
   14002c9b8:	add    BYTE PTR gs:[rsi+0x0],ch
   14002c9bc:	je     0x14002c9be
   14002c9be:	push   rsi
   14002c9bf:	add    BYTE PTR [rbp+0x0],ah
   14002c9c2:	jb     0x14002c9c4
   14002c9c4:	jae    0x14002c9c6
   14002c9c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c9cc:	add    BYTE PTR [rax],al
   14002c9ce:	add    BYTE PTR [rax],al
   14002c9d0:	push   rbx
   14002c9d1:	add    BYTE PTR [rbp+0x0],dh
   14002c9d4:	(bad)  
   14002c9d5:	add    BYTE PTR [rbx+0x0],dh
   14002c9d8:	movsxd eax,DWORD PTR [rax]
   14002c9da:	jb     0x14002c9dc
   14002c9dc:	imul   eax,DWORD PTR [rax],0x740070
   14002c9e2:	imul   eax,DWORD PTR [rax],0x6e006f
   14002c9e8:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002c9ec:	jae    0x14002c9ee
   14002c9ee:	je     0x14002c9f0
   14002c9f0:	push   rbp
   14002c9f1:	add    BYTE PTR [rbx+0x0],dh
   14002c9f4:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002c9f9:	add    BYTE PTR [rbp+0x0],ah
   14002c9fc:	jb     0x14002c9fe
   14002c9fe:	jae    0x14002ca00
   14002ca00:	imul   eax,DWORD PTR [rax],0x6e006f
   14002ca06:	add    BYTE PTR [rax],al
   14002ca08:	jae    0x14002ca0a
   14002ca0a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002ca0e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002ca14:	jae    0x14002ca16
   14002ca16:	add    BYTE PTR gs:[rcx+0x0],ah
   14002ca1a:	je     0x14002ca1c
   14002ca1c:	jae    0x14002ca1e
   14002ca1e:	add    BYTE PTR [rax],al
   14002ca20:	jae    0x14002ca22
   14002ca22:	jne    0x14002ca24
   14002ca24:	(bad)  
   14002ca25:	add    BYTE PTR [rbx+0x0],dh
   14002ca28:	movsxd eax,DWORD PTR [rax]
   14002ca2a:	jb     0x14002ca2c
   14002ca2c:	imul   eax,DWORD PTR [rax],0x740070
   14002ca32:	imul   eax,DWORD PTR [rax],0x6e006f
   14002ca38:	jae    0x14002ca3a
   14002ca3a:	add    BYTE PTR gs:[rcx+0x0],ah
   14002ca3e:	je     0x14002ca40
   14002ca40:	movsxd eax,DWORD PTR [rax]
   14002ca42:	outs   dx,DWORD PTR ds:[rsi]
   14002ca43:	add    BYTE PTR [rbp+0x0],dh
   14002ca46:	outs   dx,BYTE PTR ds:[rsi]
   14002ca47:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002ca4b:	add    BYTE PTR [rax],al
   14002ca4d:	add    BYTE PTR [rax],al
   14002ca4f:	add    BYTE PTR [rbx+0x0],dh
   14002ca52:	jne    0x14002ca54
   14002ca54:	(bad)  
   14002ca55:	add    BYTE PTR [rbx+0x0],dh
   14002ca58:	movsxd eax,DWORD PTR [rax]
   14002ca5a:	jb     0x14002ca5c
   14002ca5c:	imul   eax,DWORD PTR [rax],0x740070
   14002ca62:	imul   eax,DWORD PTR [rax],0x6e006f
   14002ca68:	outs   dx,DWORD PTR ds:[rsi]
   14002ca69:	add    BYTE PTR [rdx+0x0],dh
   14002ca6c:	imul   eax,DWORD PTR [rax],0x690067
   14002ca72:	outs   dx,BYTE PTR ds:[rsi]
   14002ca73:	add    BYTE PTR [rax],al
   14002ca75:	add    BYTE PTR [rax],al
   14002ca77:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002ca7b:	add    BYTE PTR [rbx+0x0],dl
   14002ca7e:	add    BYTE PTR [rcx+0x0],r12b
   14002ca82:	jns    0x14002ca84
   14002ca84:	jae    0x14002ca86
   14002ca86:	push   rdx
   14002ca87:	add    BYTE PTR [rbp+0x0],ah
   14002ca8a:	ins    DWORD PTR es:[rdi],dx
   14002ca8b:	add    BYTE PTR [rcx+0x0],ah
   14002ca8e:	imul   eax,DWORD PTR [rax],0x69006e
   14002ca94:	outs   dx,BYTE PTR ds:[rsi]
   14002ca95:	add    BYTE PTR [rdi+0x0],ah
	...
   14002caa0:	movsxd eax,DWORD PTR [rax]
   14002caa2:	outs   dx,DWORD PTR ds:[rsi]
   14002caa3:	add    BYTE PTR [rbp+0x0],ch
   14002caa6:	jo     0x14002caa8
   14002caa8:	(bad)  
   14002caa9:	add    BYTE PTR [rsi+0x0],ch
   14002caac:	jns    0x14002caae
   14002caae:	outs   dx,BYTE PTR ds:[rsi]
   14002caaf:	add    BYTE PTR [rcx+0x0],ah
   14002cab2:	ins    DWORD PTR es:[rdi],dx
   14002cab3:	add    BYTE PTR [rbp+0x0],ah
   14002cab6:	add    BYTE PTR [rax],al
   14002cab8:	jne    0x14002caba
   14002caba:	jae    0x14002cabc
   14002cabc:	add    BYTE PTR gs:[rdx+0x0],dh
   14002cac0:	outs   dx,BYTE PTR ds:[rsi]
   14002cac1:	add    BYTE PTR [rcx+0x0],ch
   14002cac4:	movsxd eax,DWORD PTR [rax]
   14002cac6:	imul   eax,DWORD PTR [rax],0x6e
   14002cac9:	add    BYTE PTR [rcx+0x0],ah
   14002cacc:	ins    DWORD PTR es:[rdi],dx
   14002cacd:	add    BYTE PTR [rbp+0x0],ah
	...
   14002cad8:	jne    0x14002cada
   14002cada:	jae    0x14002cadc
   14002cadc:	add    BYTE PTR gs:[rdx+0x0],dh
   14002cae0:	jae    0x14002cae2
   14002cae2:	movsxd eax,DWORD PTR [rax]
   14002cae4:	outs   dx,DWORD PTR ds:[rsi]
   14002cae5:	add    BYTE PTR [rdx+0x0],dh
   14002cae8:	add    BYTE PTR gs:[rax],al
   14002caeb:	add    BYTE PTR [rax],al
   14002caed:	add    BYTE PTR [rax],al
   14002caef:	add    BYTE PTR [rbx+0x0],al
   14002caf2:	outs   dx,DWORD PTR ds:[rsi]
   14002caf3:	add    BYTE PTR [rdx+0x0],dh
   14002caf6:	add    BYTE PTR gs:[rax+rax*1+0x43],ch
   14002cafb:	add    BYTE PTR [rdi+0x0],ch
   14002cafe:	ins    DWORD PTR es:[rdi],dx
   14002caff:	add    BYTE PTR [rbx+0x0],dl
   14002cb02:	add    BYTE PTR gs:[rdx+0x0],dh
   14002cb06:	jbe    0x14002cb08
   14002cb08:	add    BYTE PTR gs:[rdx+0x0],dh
   14002cb0c:	add    BYTE PTR [rax],al
   14002cb0e:	add    BYTE PTR [rax],al
   14002cb10:	movsxd eax,DWORD PTR [rax]
   14002cb12:	jb     0x14002cb14
   14002cb14:	add    BYTE PTR gs:[rcx+0x0],ah
   14002cb18:	je     0x14002cb1a
   14002cb1a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002cb1f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002cb23:	add    BYTE PTR [rsi+0x0],dh
   14002cb26:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14002cb2b:	add    BYTE PTR [rax],al
   14002cb2d:	add    BYTE PTR [rax],al
   14002cb2f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002cb33:	add    BYTE PTR [rbx+0x0],dh
   14002cb36:	(bad)  
   14002cb37:	add    BYTE PTR [rbx+0x0],ah
   14002cb3a:	movsxd eax,DWORD PTR [rax]
   14002cb3c:	add    BYTE PTR gs:[rax+0x0],dh
   14002cb40:	je     0x14002cb42
   14002cb42:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002cb47:	add    BYTE PTR [rbp+0x0],ah
   14002cb4a:	jb     0x14002cb4c
   14002cb4c:	jae    0x14002cb4e
   14002cb4e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002cb54:	add    BYTE PTR [rax],al
   14002cb56:	add    BYTE PTR [rax],al
   14002cb58:	je     0x14002cb5a
   14002cb5a:	outs   dx,DWORD PTR ds:[rsi]
   14002cb5b:	add    BYTE PTR [rbx+0x0],dh
   14002cb5e:	movsxd eax,DWORD PTR [rax]
   14002cb60:	jne    0x14002cb62
   14002cb62:	jb     0x14002cb64
   14002cb64:	jb     0x14002cb66
   14002cb66:	add    BYTE PTR gs:[rsi+0x0],ch
   14002cb6a:	je     0x14002cb6c
   14002cb6c:	push   rsi
   14002cb6d:	add    BYTE PTR [rbp+0x0],ah
   14002cb70:	jb     0x14002cb72
   14002cb72:	jae    0x14002cb74
   14002cb74:	imul   eax,DWORD PTR [rax],0x6e006f
   14002cb7a:	add    BYTE PTR [rax],al
   14002cb7c:	add    BYTE PTR [rax],al
   14002cb7e:	add    BYTE PTR [rax],al
   14002cb80:	push   rdi
   14002cb81:	add    BYTE PTR [rdi+0x0],ch
   14002cb84:	jb     0x14002cb86
   14002cb86:	imul   eax,DWORD PTR [rax],0x66
   14002cb89:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002cb8d:	add    BYTE PTR [rdi+0x0],dh
	...
   14002cb98:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002cb9c:	jae    0x14002cb9e
   14002cb9e:	jae    0x14002cba0
   14002cba0:	(bad)  
   14002cba1:	add    BYTE PTR [rdi+0x0],ah
   14002cba4:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14002cbb0:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e549
   14002cbb6:	add    BYTE PTR [rax],al
   14002cbb8:	cld    
   14002cbb9:	add    r8d,DWORD PTR [r8]
	...
   14002cbc4:	add    eax,DWORD PTR [rax]
   14002cbc6:	add    BYTE PTR [rax],al
   14002cbc8:	add    al,0x46
   14002cbca:	add    eax,DWORD PTR [rax]
   14002cbcc:	xor    BYTE PTR [rax],al
	...
   14002cbd6:	add    BYTE PTR [rax],al
   14002cbd8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e571
   14002cbde:	add    BYTE PTR [rax],al
   14002cbe0:	xor    al,0x46
   14002cbe2:	add    eax,DWORD PTR [rax]
	...
   14002cbec:	add    eax,DWORD PTR [rax]
   14002cbee:	add    BYTE PTR [rax],al
   14002cbf0:	cmp    al,0x46
   14002cbf2:	add    eax,DWORD PTR [rax]
   14002cbf4:	xor    BYTE PTR [rax],al
	...
   14002cbfe:	add    BYTE PTR [rax],al
   14002cc00:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e599
   14002cc06:	add    BYTE PTR [rax],al
   14002cc08:	mov    BYTE PTR [rsi+0x3],al
	...
   14002cc13:	add    BYTE PTR [rbx],al
   14002cc15:	add    BYTE PTR [rax],al
   14002cc17:	add    BYTE PTR [rax+0x50000346],dl
	...
   14002cc25:	add    BYTE PTR [rax],al
   14002cc27:	add    BYTE PTR [rdx],ah
   14002cc29:	add    eax,0x11993
   14002cc2e:	add    BYTE PTR [rax],al
   14002cc30:	enter  0x346,0x0
	...
   14002cc3c:	add    eax,DWORD PTR [rax]
   14002cc3e:	add    BYTE PTR [rax],al
   14002cc40:	rol    BYTE PTR [rsi+0x3],1
   14002cc43:	add    BYTE PTR [rax+0x0],dh
	...
   14002cc4e:	add    BYTE PTR [rax],al
   14002cc50:	and    al,BYTE PTR [rip+0x21993]        # 0x14004e5e9
   14002cc56:	add    BYTE PTR [rax],al
   14002cc58:	add    BYTE PTR [rdi+0x3],al
	...
   14002cc63:	add    BYTE PTR [rip+0x10000000],al        # 0x15002cc69
   14002cc69:	rex.RXB add r8d,DWORD PTR [r8]
   14002cc6c:	js     0x14002cc6e
	...
   14002cc76:	add    BYTE PTR [rax],al
   14002cc78:	and    al,BYTE PTR [rip+0x31993]        # 0x14005e611
   14002cc7e:	add    BYTE PTR [rax],al
   14002cc80:	pop    rax
   14002cc81:	rex.RXB add r8d,DWORD PTR [r8]
	...
   14002cc8c:	add    eax,0x70000000
   14002cc91:	rex.RXB add r8d,DWORD PTR [r8]
   14002cc94:	push   0x0
   14002cc99:	add    BYTE PTR [rax],al
   14002cc9b:	add    BYTE PTR [rax],al
   14002cc9d:	add    BYTE PTR [rax],al
   14002cc9f:	add    BYTE PTR [rdx],ah
   14002cca1:	add    eax,0x21993
   14002cca6:	add    BYTE PTR [rax],al
   14002cca8:	rol    BYTE PTR [rdi+0x3],1
	...
   14002ccb3:	add    BYTE PTR [rbx],al
   14002ccb5:	add    BYTE PTR [rax],al
   14002ccb7:	add    al,ah
   14002ccb9:	rex.RXB add r8d,DWORD PTR [r8]
   14002ccbc:	rex.W add BYTE PTR [rax],al
	...
   14002ccc7:	add    BYTE PTR [rdx],ah
   14002ccc9:	add    eax,0x41993
   14002ccce:	add    BYTE PTR [rax],al
   14002ccd0:	rex.W
   14002ccd1:	add    rax,QWORD PTR [rax]
	...
   14002ccdc:	or     DWORD PTR [rax],eax
   14002ccde:	add    BYTE PTR [rax],al
   14002cce0:	push   0xffffffffb8000348
	...
   14002cced:	add    BYTE PTR [rax],al
   14002ccef:	add    BYTE PTR [rdx],ah
   14002ccf1:	add    eax,0x11993
   14002ccf6:	add    BYTE PTR [rax],al
   14002ccf8:	in     al,0x48
   14002ccfa:	add    eax,DWORD PTR [rax]
	...
   14002cd04:	add    eax,DWORD PTR [rax]
   14002cd06:	add    BYTE PTR [rax],al
   14002cd08:	in     al,dx
   14002cd09:	add    rax,QWORD PTR [rax]
   14002cd0c:	nop
	...
   14002cd15:	add    BYTE PTR [rax],al
   14002cd17:	add    BYTE PTR [rdx],ah
   14002cd19:	add    eax,0x31993
   14002cd1e:	add    BYTE PTR [rax],al
   14002cd20:	and    BYTE PTR [rcx+0x3],cl
	...
   14002cd2b:	add    BYTE PTR [rip+0x38000000],al        # 0x17802cd31
   14002cd31:	add    rax,QWORD PTR [r8]
   14002cd34:	add    BYTE PTR [rax],al
	...
   14002cd3f:	add    BYTE PTR [rdx],ah
   14002cd41:	add    eax,0x11993
   14002cd46:	add    BYTE PTR [rax],al
   14002cd48:	mov    WORD PTR [rcx+0x3],cs
	...
   14002cd53:	add    BYTE PTR [rbx],al
   14002cd55:	add    BYTE PTR [rax],al
   14002cd57:	add    BYTE PTR [rcx+rcx*2+0x400003],dl
	...
   14002cd66:	add    BYTE PTR [rax],al
   14002cd68:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e701
   14002cd6e:	add    BYTE PTR [rax],al
   14002cd70:	enter  0x349,0x0
	...
   14002cd7c:	(bad)  
   14002cd7d:	add    BYTE PTR [rax],al
   14002cd7f:	add    al,dl
   14002cd81:	add    rax,QWORD PTR [r8]
   14002cd84:	js     0x14002cd86
	...
   14002cd8e:	add    BYTE PTR [rax],al
   14002cd90:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e729
   14002cd96:	add    BYTE PTR [rax],al
   14002cd98:	and    BYTE PTR [rdx+0x3],cl
	...
   14002cda3:	add    BYTE PTR [rbx],al
   14002cda5:	add    BYTE PTR [rax],al
   14002cda7:	add    BYTE PTR [rax],ch
   14002cda9:	rex.WX add rax,QWORD PTR [rax]
   14002cdac:	pop    rax
	...
   14002cdb5:	add    BYTE PTR [rax],al
   14002cdb7:	add    BYTE PTR [rdx],ah
   14002cdb9:	add    eax,0x11993
   14002cdbe:	add    BYTE PTR [rax],al
   14002cdc0:	pop    rax
   14002cdc1:	rex.WX add rax,QWORD PTR [rax]
	...
   14002cdcc:	add    eax,DWORD PTR [rax]
   14002cdce:	add    BYTE PTR [rax],al
   14002cdd0:	(bad)  
   14002cdd1:	rex.WX add rax,QWORD PTR [rax]
   14002cdd4:	movabs al,ds:0x0
   14002cddd:	add    BYTE PTR [rax],al
   14002cddf:	add    BYTE PTR [rdx],ah
   14002cde1:	add    eax,0x31993
   14002cde6:	add    BYTE PTR [rax],al
   14002cde8:	nop
   14002cde9:	rex.WX add rax,QWORD PTR [rax]
	...
   14002cdf4:	(bad)  
   14002cdf5:	add    BYTE PTR [rax],al
   14002cdf7:	add    BYTE PTR [rax+0x2000034a],ch
	...
   14002ce05:	add    BYTE PTR [rax],al
   14002ce07:	add    BYTE PTR [rdx],ah
   14002ce09:	add    eax,0x91993
   14002ce0e:	add    BYTE PTR [rax],al
   14002ce10:	or     al,0x4b
   14002ce12:	add    eax,DWORD PTR [rax]
	...
   14002ce1c:	adc    DWORD PTR [rax],eax
   14002ce1e:	add    BYTE PTR [rax],al
   14002ce20:	push   rsp
   14002ce21:	rex.WXB add rax,QWORD PTR [r8]
   14002ce24:	test   al,0x0
	...
   14002ce2e:	add    BYTE PTR [rax],al
   14002ce30:	and    al,BYTE PTR [rip+0x61993]        # 0x14008e7c9
   14002ce36:	add    BYTE PTR [rax],al
   14002ce38:	xor    al,0x4c
   14002ce3a:	add    eax,DWORD PTR [rax]
	...
   14002ce44:	or     eax,DWORD PTR [rax]
   14002ce46:	add    BYTE PTR [rax],al
   14002ce48:	add    r8,QWORD PTR fs:[rax]
   14002ce4c:	cwde   
	...
   14002ce55:	add    BYTE PTR [rax],al
   14002ce57:	add    BYTE PTR [rdx],ah
   14002ce59:	add    eax,0x11993
   14002ce5e:	add    BYTE PTR [rax],al
   14002ce60:	sub    BYTE PTR [rbp+0x3],cl
	...
   14002ce6b:	add    BYTE PTR [rbx],al
   14002ce6d:	add    BYTE PTR [rax],al
   14002ce6f:	add    BYTE PTR [rax],dh
   14002ce71:	add    r8,QWORD PTR [r8]
   14002ce74:	(bad)  
	...
   14002ce7d:	add    BYTE PTR [rax],al
   14002ce7f:	add    BYTE PTR [rdx],ah
   14002ce81:	add    eax,0xa1993
   14002ce86:	add    BYTE PTR [rax],al
   14002ce88:	(bad)  
   14002ce89:	add    r8,QWORD PTR [r8]
	...
   14002ce94:	sbb    eax,DWORD PTR [rax]
   14002ce96:	add    BYTE PTR [rax],al
   14002ce98:	mov    al,0x4d
   14002ce9a:	add    eax,DWORD PTR [rax]
   14002ce9c:	add    BYTE PTR [rcx],0x0
	...
   14002cea7:	add    BYTE PTR [rdx],ah
   14002cea9:	add    eax,0xc1993
   14002ceae:	add    BYTE PTR [rax],al
   14002ceb0:	lock rex.WRX add r8,QWORD PTR [rax]
	...
   14002cebc:	and    al,0x0
   14002cebe:	add    BYTE PTR [rax],al
   14002cec0:	push   rax
   14002cec1:	rex.WRXB add r8,QWORD PTR [r8]
   14002cec4:	and    BYTE PTR [rdx],al
	...
   14002cece:	add    BYTE PTR [rax],al
   14002ced0:	and    al,BYTE PTR [rip+0x71993]        # 0x14009e869
   14002ced6:	add    BYTE PTR [rax],al
   14002ced8:	call   0x14002d22d
   14002cedd:	add    BYTE PTR [rax],al
   14002cedf:	add    BYTE PTR [rax],al
   14002cee1:	add    BYTE PTR [rax],al
   14002cee3:	add    BYTE PTR [rdi],cl
   14002cee5:	add    BYTE PTR [rax],al
   14002cee7:	add    BYTE PTR [rax],ah
   14002cee9:	push   rcx
   14002ceea:	add    eax,DWORD PTR [rax]
   14002ceec:	nop
	...
   14002cef5:	add    BYTE PTR [rax],al
   14002cef7:	add    BYTE PTR [rdx],ah
   14002cef9:	add    eax,0x21993
   14002cefe:	add    BYTE PTR [rax],al
   14002cf00:	add    BYTE PTR [rdx+0x3],dl
	...
   14002cf0b:	add    BYTE PTR [rip+0x10000000],al        # 0x15002cf11
   14002cf11:	push   rdx
   14002cf12:	add    eax,DWORD PTR [rax]
   14002cf14:	mov    BYTE PTR [rax],al
	...
   14002cf1e:	add    BYTE PTR [rax],al
   14002cf20:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e8b9
   14002cf26:	add    BYTE PTR [rax],al
   14002cf28:	mov    BYTE PTR [rdx+0x3],dl
	...
   14002cf33:	add    BYTE PTR [rbx],al
   14002cf35:	add    BYTE PTR [rax],al
   14002cf37:	add    BYTE PTR [rax+0x52],ah
   14002cf3a:	add    eax,DWORD PTR [rax]
   14002cf3c:	cmp    BYTE PTR [rax],al
	...
   14002cf4e:	add    BYTE PTR [rax],al
   14002cf50:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e8e9
   14002cf56:	add    BYTE PTR [rax],al
   14002cf58:	mov    BYTE PTR [rdx+0x3],dl
	...
   14002cf63:	add    BYTE PTR [rbx],al
   14002cf65:	add    BYTE PTR [rax],al
   14002cf67:	add    BYTE PTR [rax+0x38000352],dl
	...
   14002cf7d:	add    BYTE PTR [rax],al
   14002cf7f:	add    BYTE PTR [rdx],ah
   14002cf81:	add    eax,0x21993
   14002cf86:	add    BYTE PTR [rax],al
   14002cf88:	mov    eax,0x352
   14002cf8d:	add    BYTE PTR [rax],al
   14002cf8f:	add    BYTE PTR [rax],al
   14002cf91:	add    BYTE PTR [rax],al
   14002cf93:	add    BYTE PTR [rbx],al
   14002cf95:	add    BYTE PTR [rax],al
   14002cf97:	add    al,cl
   14002cf99:	push   rdx
   14002cf9a:	add    eax,DWORD PTR [rax]
   14002cf9c:	sub    BYTE PTR [rax],al
	...
   14002cfae:	add    BYTE PTR [rax],al
   14002cfb0:	and    al,BYTE PTR [rip+0x21993]        # 0x14004e949
   14002cfb6:	add    BYTE PTR [rax],al
   14002cfb8:	int3   
   14002cfb9:	pop    rdx
   14002cfba:	add    eax,DWORD PTR [rax]
   14002cfbc:	add    DWORD PTR [rax],eax
   14002cfbe:	add    BYTE PTR [rax],al
   14002cfc0:	lock push rdx
   14002cfc2:	add    eax,DWORD PTR [rax]
   14002cfc4:	(bad)  
   14002cfc5:	add    BYTE PTR [rax],al
   14002cfc7:	add    BYTE PTR [rax],bl
   14002cfc9:	push   rbx
   14002cfca:	add    eax,DWORD PTR [rax]
   14002cfcc:	add    BYTE PTR [rax],al
	...
   14002cfdf:	add    BYTE PTR [rdx],ah
   14002cfe1:	add    eax,0x21993
   14002cfe6:	add    BYTE PTR [rax],al
   14002cfe8:	int3   
   14002cfe9:	pop    rdx
   14002cfea:	add    eax,DWORD PTR [rax]
   14002cfec:	add    DWORD PTR [rax],eax
   14002cfee:	add    BYTE PTR [rax],al
   14002cff0:	js     0x14002d045
   14002cff2:	add    eax,DWORD PTR [rax]
   14002cff4:	(bad)  
   14002cff5:	add    BYTE PTR [rax],al
   14002cff7:	add    BYTE PTR [rax+0x48000353],ah
	...
   14002d00d:	add    BYTE PTR [rax],al
   14002d00f:	add    BYTE PTR [rdx],ah
   14002d011:	add    eax,0x11993
   14002d016:	add    BYTE PTR [rax],al
   14002d018:	adc    BYTE PTR [rbx+rax*1+0x0],0x0
   14002d01d:	add    BYTE PTR [rax],al
   14002d01f:	add    BYTE PTR [rax],al
   14002d021:	add    BYTE PTR [rax],al
   14002d023:	add    BYTE PTR [rcx],al
   14002d025:	add    BYTE PTR [rax],al
   14002d027:	add    al,dh
   14002d029:	push   rbx
   14002d02a:	add    eax,DWORD PTR [rax]
   14002d02c:	and    BYTE PTR [rax],al
	...
   14002d03e:	add    BYTE PTR [rax],al
   14002d040:	and    al,BYTE PTR [rip+0x21993]        # 0x14004e9d9
   14002d046:	add    BYTE PTR [rax],al
   14002d048:	int3   
   14002d049:	pop    rdx
   14002d04a:	add    eax,DWORD PTR [rax]
   14002d04c:	add    DWORD PTR [rax],eax
   14002d04e:	add    BYTE PTR [rax],al
   14002d050:	or     BYTE PTR [rbx+rax*1+0x0],dl
   14002d054:	(bad)  
   14002d055:	add    BYTE PTR [rax],al
   14002d057:	add    BYTE PTR [rax],dh
   14002d059:	push   rsp
   14002d05a:	add    eax,DWORD PTR [rax]
   14002d05c:	rex.W add BYTE PTR [rax],al
	...
   14002d06f:	add    BYTE PTR [rdx],ah
   14002d071:	add    eax,0x11993
   14002d076:	add    BYTE PTR [rax],al
   14002d078:	adc    BYTE PTR [rbx+rax*1+0x0],0x0
   14002d07d:	add    BYTE PTR [rax],al
   14002d07f:	add    BYTE PTR [rax],al
   14002d081:	add    BYTE PTR [rax],al
   14002d083:	add    BYTE PTR [rcx],al
   14002d085:	add    BYTE PTR [rax],al
   14002d087:	add    BYTE PTR [rax+0x20000354],cl
	...
   14002d09d:	add    BYTE PTR [rax],al
   14002d09f:	add    BYTE PTR [rdx],ah
   14002d0a1:	add    eax,0x11993
   14002d0a6:	add    BYTE PTR [rax],al
   14002d0a8:	mov    eax,0x354
   14002d0ad:	add    BYTE PTR [rax],al
   14002d0af:	add    BYTE PTR [rax],al
   14002d0b1:	add    BYTE PTR [rax],al
   14002d0b3:	add    BYTE PTR [rcx],al
   14002d0b5:	add    BYTE PTR [rax],al
   14002d0b7:	add    BYTE PTR [rax+0x20000354],ah
	...
   14002d0cd:	add    BYTE PTR [rax],al
   14002d0cf:	add    BYTE PTR [rdx],ah
   14002d0d1:	add    eax,0x11993
   14002d0d6:	add    BYTE PTR [rax],al
   14002d0d8:	mov    eax,0x354
   14002d0dd:	add    BYTE PTR [rax],al
   14002d0df:	add    BYTE PTR [rax],al
   14002d0e1:	add    BYTE PTR [rax],al
   14002d0e3:	add    BYTE PTR [rcx],al
   14002d0e5:	add    BYTE PTR [rax],al
   14002d0e7:	add    al,al
   14002d0e9:	push   rsp
   14002d0ea:	add    eax,DWORD PTR [rax]
   14002d0ec:	and    BYTE PTR [rax],al
	...
   14002d0fe:	add    BYTE PTR [rax],al
   14002d100:	and    al,BYTE PTR [rip+0x11993]        # 0x14003ea99
   14002d106:	add    BYTE PTR [rax],al
   14002d108:	fcom   DWORD PTR [rbx+rax*1+0x0]
	...
   14002d114:	add    DWORD PTR [rax],eax
   14002d116:	add    BYTE PTR [rax],al
   14002d118:	loopne 0x14002d16e
   14002d11a:	add    eax,DWORD PTR [rax]
   14002d11c:	and    BYTE PTR [rax],al
	...
   14002d12e:	add    BYTE PTR [rax],al
   14002d130:	and    al,BYTE PTR [rip+0x11993]        # 0x14003eac9
   14002d136:	add    BYTE PTR [rax],al
   14002d138:	fcom   DWORD PTR [rbx+rax*1+0x0]
	...
   14002d144:	add    eax,DWORD PTR [rax]
   14002d146:	add    BYTE PTR [rax],al
   14002d148:	clc    
   14002d149:	push   rsp
   14002d14a:	add    eax,DWORD PTR [rax]
   14002d14c:	and    BYTE PTR [rax],al
	...
   14002d15e:	add    BYTE PTR [rax],al
   14002d160:	and    al,BYTE PTR [rip+0x11993]        # 0x14003eaf9
   14002d166:	add    BYTE PTR [rax],al
   14002d168:	rex push rbp
   14002d16a:	add    eax,DWORD PTR [rax]
	...
   14002d174:	add    DWORD PTR [rax],eax
   14002d176:	add    BYTE PTR [rax],al
   14002d178:	rex.W push rbp
   14002d17a:	add    eax,DWORD PTR [rax]
   14002d17c:	sub    BYTE PTR [rax],al
	...
   14002d18e:	add    BYTE PTR [rax],al
   14002d190:	and    al,BYTE PTR [rip+0x11993]        # 0x14003eb29
   14002d196:	add    BYTE PTR [rax],al
   14002d198:	rex push rbp
   14002d19a:	add    eax,DWORD PTR [rax]
	...
   14002d1a4:	add    DWORD PTR [rax],eax
   14002d1a6:	add    BYTE PTR [rax],al
   14002d1a8:	push   0x20000355
	...
   14002d1bd:	add    BYTE PTR [rax],al
   14002d1bf:	add    BYTE PTR [rdx],ah
   14002d1c1:	add    eax,0x11993
   14002d1c6:	add    BYTE PTR [rax],al
   14002d1c8:	adc    BYTE PTR [rbp+0x3],0x0
	...
   14002d1d4:	add    DWORD PTR [rax],eax
   14002d1d6:	add    BYTE PTR [rax],al
   14002d1d8:	mov    BYTE PTR [rbp+0x3],dl
   14002d1db:	add    BYTE PTR [rax],ah
	...
   14002d1ed:	add    BYTE PTR [rax],al
   14002d1ef:	add    BYTE PTR [rdx],ah
   14002d1f1:	add    eax,0x21993
   14002d1f6:	add    BYTE PTR [rax],al
   14002d1f8:	int3   
   14002d1f9:	pop    rdx
   14002d1fa:	add    eax,DWORD PTR [rax]
   14002d1fc:	add    DWORD PTR [rax],eax
   14002d1fe:	add    BYTE PTR [rax],al
   14002d200:	test   al,0x55
   14002d202:	add    eax,DWORD PTR [rax]
   14002d204:	(bad)  
   14002d205:	add    BYTE PTR [rax],al
   14002d207:	add    al,dl
   14002d209:	push   rbp
   14002d20a:	add    eax,DWORD PTR [rax]
   14002d20c:	add    BYTE PTR [rax],al
	...
   14002d21f:	add    BYTE PTR [rdx],ah
   14002d221:	add    eax,0x21993
   14002d226:	add    BYTE PTR [rax],al
   14002d228:	int3   
   14002d229:	pop    rdx
   14002d22a:	add    eax,DWORD PTR [rax]
   14002d22c:	add    DWORD PTR [rax],eax
   14002d22e:	add    BYTE PTR [rax],al
   14002d230:	and    BYTE PTR [rsi+0x3],dl
   14002d233:	add    BYTE PTR [rsi],al
   14002d235:	add    BYTE PTR [rax],al
   14002d237:	add    BYTE PTR [rax+0x56],cl
   14002d23a:	add    eax,DWORD PTR [rax]
   14002d23c:	(bad)  
	...
   14002d24d:	add    BYTE PTR [rax],al
   14002d24f:	add    BYTE PTR [rdx],ah
   14002d251:	add    eax,0x21993
   14002d256:	add    BYTE PTR [rax],al
   14002d258:	int3   
   14002d259:	pop    rdx
   14002d25a:	add    eax,DWORD PTR [rax]
   14002d25c:	add    DWORD PTR [rax],eax
   14002d25e:	add    BYTE PTR [rax],al
   14002d260:	cwde   
   14002d261:	push   rsi
   14002d262:	add    eax,DWORD PTR [rax]
   14002d264:	(bad)  
   14002d265:	add    BYTE PTR [rax],al
   14002d267:	add    al,al
   14002d269:	push   rsi
   14002d26a:	add    eax,DWORD PTR [rax]
   14002d26c:	add    BYTE PTR [rcx],0x0
	...
   14002d27f:	add    BYTE PTR [rdx],ah
   14002d281:	add    eax,0x21993
   14002d286:	add    BYTE PTR [rax],al
   14002d288:	int3   
   14002d289:	pop    rdx
   14002d28a:	add    eax,DWORD PTR [rax]
   14002d28c:	add    DWORD PTR [rax],eax
   14002d28e:	add    BYTE PTR [rax],al
   14002d290:	sbb    BYTE PTR [rdi+0x3],dl
   14002d293:	add    BYTE PTR [rax+rax*1],al
   14002d296:	add    BYTE PTR [rax],al
   14002d298:	rex push rdi
   14002d29a:	add    eax,DWORD PTR [rax]
   14002d29c:	nop
	...
   14002d2ad:	add    BYTE PTR [rax],al
   14002d2af:	add    BYTE PTR [rdx],ah
   14002d2b1:	add    eax,0x11993
   14002d2b6:	add    BYTE PTR [rax],al
   14002d2b8:	add    BYTE PTR [rax+0x3],bl
	...
   14002d2c3:	add    BYTE PTR [rbx],al
   14002d2c5:	add    BYTE PTR [rax],al
   14002d2c7:	add    BYTE PTR [rax+0x30000357],al
	...
   14002d2dd:	add    BYTE PTR [rax],al
   14002d2df:	add    BYTE PTR [rdx],ah
   14002d2e1:	add    eax,0x11993
   14002d2e6:	add    BYTE PTR [rax],al
   14002d2e8:	add    BYTE PTR [rax+0x3],bl
	...
   14002d2f3:	add    BYTE PTR [rbx],al
   14002d2f5:	add    BYTE PTR [rax],al
   14002d2f7:	add    BYTE PTR [rax+0x30000357],ch
	...
   14002d30d:	add    BYTE PTR [rax],al
   14002d30f:	add    BYTE PTR [rdx],ah
   14002d311:	add    eax,0x11993
   14002d316:	add    BYTE PTR [rax],al
   14002d318:	rcl    BYTE PTR [rdi+0x3],1
	...
   14002d323:	add    BYTE PTR [rbx],al
   14002d325:	add    BYTE PTR [rax],al
   14002d327:	add    al,bl
   14002d329:	push   rdi
   14002d32a:	add    eax,DWORD PTR [rax]
   14002d32c:	pop    rax
	...
   14002d33d:	add    BYTE PTR [rax],al
   14002d33f:	add    BYTE PTR [rdx],ah
   14002d341:	add    eax,0x11993
   14002d346:	add    BYTE PTR [rax],al
   14002d348:	add    BYTE PTR [rax+0x3],bl
	...
   14002d353:	add    BYTE PTR [rbx],al
   14002d355:	add    BYTE PTR [rax],al
   14002d357:	add    BYTE PTR [rax],cl
   14002d359:	pop    rax
   14002d35a:	add    eax,DWORD PTR [rax]
   14002d35c:	xor    BYTE PTR [rax],al
	...
   14002d36e:	add    BYTE PTR [rax],al
   14002d370:	and    al,BYTE PTR [rip+0x11993]        # 0x14003ed09
   14002d376:	add    BYTE PTR [rax],al
   14002d378:	xor    BYTE PTR [rax+0x3],bl
	...
   14002d383:	add    BYTE PTR [rcx],al
   14002d385:	add    BYTE PTR [rax],al
   14002d387:	add    BYTE PTR [rax],bh
   14002d389:	pop    rax
   14002d38a:	add    eax,DWORD PTR [rax]
   14002d38c:	cmp    BYTE PTR [rax],al
	...
   14002d39e:	add    BYTE PTR [rax],al
   14002d3a0:	and    al,BYTE PTR [rip+0x11993]        # 0x14003ed39
   14002d3a6:	add    BYTE PTR [rax],al
   14002d3a8:	adc    BYTE PTR [rbp+0x3],0x0
	...
   14002d3b4:	add    DWORD PTR [rax],eax
   14002d3b6:	add    BYTE PTR [rax],al
   14002d3b8:	push   rax
   14002d3b9:	pop    rax
   14002d3ba:	add    eax,DWORD PTR [rax]
   14002d3bc:	and    BYTE PTR [rax],al
	...
   14002d3c6:	add    BYTE PTR [rax],al
   14002d3c8:	ins    BYTE PTR es:[rdi],dx
   14002d3c9:	imul   esi,DWORD PTR [rbx+0x74],0x203e543c
   14002d3d0:	je     0x14002d441
   14002d3d2:	outs   dx,DWORD PTR ds:[rsi]
   14002d3d3:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002d3d7:	add    BYTE PTR [eax],al
   14002d3da:	add    BYTE PTR [rax],al
   14002d3dc:	add    BYTE PTR [rax],al
   14002d3de:	add    BYTE PTR [rax],al
   14002d3e0:	ins    DWORD PTR es:[rdi],dx
   14002d3e1:	(bad)  
   14002d3e2:	jo     0x14002d413
   14002d3e4:	jae    0x14002d44b
   14002d3e6:	je     0x14002d424
   14002d3e8:	push   rsp
   14002d3e9:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14002d3ee:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002d3f2:	add    BYTE PTR [eax],al
   14002d3f5:	add    BYTE PTR [rax],al
   14002d3f7:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14002d3fb:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002d3ff:	add    BYTE PTR [rax+rax*1+0x4c],ch
   14002d403:	add    BYTE PTR [rcx+0x0],ah
   14002d406:	jne    0x14002d408
   14002d408:	outs   dx,BYTE PTR ds:[rsi]
   14002d409:	add    BYTE PTR [rbx+0x0],ah
   14002d40c:	push   0x6f004300
   14002d411:	add    BYTE PTR [rbp+0x0],dh
   14002d414:	outs   dx,BYTE PTR ds:[rsi]
   14002d415:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002d419:	add    BYTE PTR [rax],al
   14002d41b:	add    BYTE PTR [rax],al
   14002d41d:	add    BYTE PTR [rax],al
   14002d41f:	add    BYTE PTR [rax+0x0],dl
   14002d422:	jb     0x14002d424
   14002d424:	outs   dx,DWORD PTR ds:[rsi]
   14002d425:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002d429:	add    BYTE PTR [rbx+0x0],ah
   14002d42c:	je     0x14002d42e
   14002d42e:	push   rsp
   14002d42f:	add    BYTE PTR [rcx+0x0],ch
   14002d432:	je     0x14002d434
   14002d434:	ins    BYTE PTR es:[rdi],dx
   14002d435:	add    BYTE PTR [rbp+0x0],ah
	...
   14002d440:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14002d444:	ins    DWORD PTR es:[rdi],dx
   14002d445:	add    BYTE PTR [rax+rax*1+0x61],al
   14002d449:	add    BYTE PTR [rcx+0x0],bh
   14002d44c:	jae    0x14002d44e
   14002d44e:	add    BYTE PTR [rax],al
   14002d450:	push   rsp
   14002d451:	add    BYTE PTR [rdi+0x0],ch
   14002d454:	je     0x14002d456
   14002d456:	(bad)  
   14002d457:	add    BYTE PTR [rax+rax*1+0x44],ch
   14002d45b:	add    BYTE PTR [rcx+0x0],ah
   14002d45e:	jns    0x14002d460
   14002d460:	jae    0x14002d462
   14002d462:	add    BYTE PTR [rax],al
   14002d464:	add    BYTE PTR [rax],al
   14002d466:	add    BYTE PTR [rax],al
   14002d468:	push   rbx
   14002d469:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002d46d:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002d471:	add    BYTE PTR [rbx+0x0],dh
   14002d474:	add    BYTE PTR [rax],al
   14002d476:	add    BYTE PTR [rax],al
   14002d478:	push   rbx
   14002d479:	add    BYTE PTR [rsi+0x0],cl
   14002d47c:	add    BYTE PTR [rax],al
   14002d47e:	add    BYTE PTR [rax],al
   14002d480:	push   rbx
   14002d481:	add    BYTE PTR [rsi+0x0],cl
   14002d484:	rex.RX add BYTE PTR [rax],r8b
   14002d487:	add    BYTE PTR [rcx+0x0],al
   14002d48a:	movsxd eax,DWORD PTR [rax]
   14002d48c:	je     0x14002d48e
   14002d48e:	imul   eax,DWORD PTR [rax],0x610076
   14002d494:	je     0x14002d496
   14002d496:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d49c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002d4a0:	add    BYTE PTR fs:[rbp+0x0],ah
   14002d4a4:	add    BYTE PTR [rax],al
   14002d4a6:	add    BYTE PTR [rax],al
   14002d4a8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002d4ac:	jae    0x14002d4ae
   14002d4ae:	je     0x14002d4b0
   14002d4b0:	(bad)  
   14002d4b1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002d4b5:	add    BYTE PTR [rcx+0x0],ah
   14002d4b8:	je     0x14002d4ba
   14002d4ba:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d4c0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002d4c4:	add    BYTE PTR fs:[rbp+0x0],ah
   14002d4c8:	add    BYTE PTR [rax],al
   14002d4ca:	add    BYTE PTR [rax],al
   14002d4cc:	push   rbx
   14002d4cd:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002d4d1:	add    BYTE PTR [rax],al
   14002d4d3:	add    BYTE PTR [rax+rax*1+0x43],cl
	...
   14002d4df:	add    BYTE PTR [rax+rax*1+0x69],cl
   14002d4e3:	add    BYTE PTR [rbx+0x0],ah
   14002d4e6:	add    BYTE PTR gs:[rsi+0x0],ch
   14002d4ea:	jae    0x14002d4ec
   14002d4ec:	add    BYTE PTR gs:[rax],al
   14002d4ef:	add    BYTE PTR [rbx+0x0],dl
   14002d4f2:	push   rsi
   14002d4f3:	add    BYTE PTR [rdx+0x0],dl
   14002d4f6:	rex.XB add BYTE PTR [r11+0x0],cl
   14002d4fa:	push   rbx
   14002d4fb:	add    BYTE PTR [rax],al
   14002d4fd:	add    BYTE PTR [rax],al
   14002d4ff:	add    BYTE PTR [rax+0x0],dl
   14002d502:	rex.XB add BYTE PTR [r9+0x0],cl
   14002d506:	add    BYTE PTR [rax],r8b
   14002d509:	add    BYTE PTR [rax],al
   14002d50b:	add    BYTE PTR [rax],al
   14002d50d:	add    BYTE PTR [rax],al
   14002d50f:	add    BYTE PTR [rax+0x0],dl
   14002d512:	rex.XB add BYTE PTR [r9+0x0],cl
   14002d516:	add    BYTE PTR [rsi+0x0],r8b
   14002d51a:	add    BYTE PTR [rax],al
   14002d51c:	add    BYTE PTR [rax],al
   14002d51e:	add    BYTE PTR [rax],al
   14002d520:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002d524:	outs   dx,BYTE PTR ds:[rsi]
   14002d525:	add    BYTE PTR [rdi+0x0],ah
   14002d528:	push   rax
   14002d529:	add    BYTE PTR [rcx+0x0],ah
   14002d52c:	je     0x14002d52e
   14002d52e:	push   0x0
   14002d533:	add    BYTE PTR [rax],al
   14002d535:	add    BYTE PTR [rax],al
   14002d537:	add    BYTE PTR [rax+rax*1+0x61],cl
   14002d53b:	add    BYTE PTR [rsi+0x0],ch
   14002d53e:	add    BYTE PTR [ebx+0x0],al
   14002d542:	outs   dx,DWORD PTR ds:[rsi]
   14002d543:	add    BYTE PTR [rax+rax*1+0x65],ah
	...
   14002d54f:	add    BYTE PTR [rdx+0x0],dl
   14002d552:	add    BYTE PTR gs:[rdi+0x0],ah
   14002d556:	push   rsp
   14002d557:	add    BYTE PTR [rdx+0x0],dh
   14002d55a:	imul   eax,DWORD PTR [rax],0x670067
   14002d560:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d564:	add    BYTE PTR [rax],al
   14002d566:	add    BYTE PTR [rax],al
   14002d568:	push   rdx
   14002d569:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002d56d:	add    BYTE PTR [rax],al
   14002d56f:	add    BYTE PTR [rbx+0x0],dl
   14002d572:	outs   dx,DWORD PTR ds:[rsi]
   14002d573:	add    BYTE PTR [rbp+0x0],dh
   14002d576:	jb     0x14002d578
   14002d578:	movsxd eax,DWORD PTR [rax]
   14002d57a:	add    BYTE PTR gs:[rcx+0x0],cl
   14002d57e:	add    BYTE PTR [rax],r8b
   14002d581:	add    BYTE PTR [rax],al
   14002d583:	add    BYTE PTR [rax],al
   14002d585:	add    BYTE PTR [rax],al
   14002d587:	add    BYTE PTR [rax+0x0],dl
   14002d58a:	(bad)  
   14002d58b:	add    BYTE PTR [rdx+0x0],dh
   14002d58e:	add    BYTE PTR gs:[rsi+0x0],ch
   14002d592:	je     0x14002d594
   14002d594:	push   rbx
   14002d595:	add    BYTE PTR [rdi+0x0],ch
   14002d598:	jne    0x14002d59a
   14002d59a:	jb     0x14002d59c
   14002d59c:	movsxd eax,DWORD PTR [rax]
   14002d59e:	add    BYTE PTR gs:[rcx+0x0],cl
   14002d5a2:	add    BYTE PTR [rax],r8b
   14002d5a5:	add    BYTE PTR [rax],al
   14002d5a7:	add    BYTE PTR [rcx+0x0],cl
   14002d5aa:	jae    0x14002d5ac
   14002d5ac:	push   rax
   14002d5ad:	add    BYTE PTR [rdx+0x0],dh
   14002d5b0:	outs   dx,DWORD PTR ds:[rsi]
   14002d5b1:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002d5b5:	add    BYTE PTR [rbx+0x0],ah
   14002d5b8:	je     0x14002d5ba
   14002d5ba:	add    BYTE PTR [rax],al
   14002d5bc:	add    BYTE PTR [rax],al
   14002d5be:	add    BYTE PTR [rax],al
   14002d5c0:	rex.W add BYTE PTR [rdi+0x0],dl
   14002d5c4:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002d5c9:	add    BYTE PTR [rax],al
   14002d5cb:	add    BYTE PTR [rax],al
   14002d5cd:	add    BYTE PTR [rax],al
   14002d5cf:	add    BYTE PTR [rcx+0x0],cl
   14002d5d2:	jae    0x14002d5d4
   14002d5d4:	push   rdx
   14002d5d5:	add    BYTE PTR [rbp+0x0],ah
   14002d5d8:	add    BYTE PTR [ecx+0x0],ch
   14002d5dc:	jae    0x14002d5de
   14002d5de:	je     0x14002d5e0
   14002d5e0:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d5e4:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002d5e9:	add    BYTE PTR [rax],al
   14002d5eb:	add    BYTE PTR [rax],al
   14002d5ed:	add    BYTE PTR [rax],al
   14002d5ef:	add    BYTE PTR [rax+rax*1+0x45],al
   14002d5f3:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002d5f7:	add    BYTE PTR [rbx+0x0],al
   14002d5fa:	push   rbp
   14002d5fb:	add    BYTE PTR [rbx+0x0],dl
   14002d5fe:	push   rsp
   14002d5ff:	add    BYTE PTR [rcx+0x0],cl
   14002d602:	add    BYTE PTR [rax],r8b
   14002d605:	add    BYTE PTR [rax],al
   14002d607:	add    BYTE PTR [rax+rax*1+0x45],al
   14002d60b:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002d60f:	add    BYTE PTR [rax+0x0],dl
   14002d612:	push   rdx
   14002d613:	add    BYTE PTR [rdi+0x0],cl
   14002d616:	add    BYTE PTR [rbp+0x0],r10b
   14002d61a:	add    BYTE PTR [r8+r8*1+0x0],dl
   14002d61f:	add    BYTE PTR [rax+rax*1+0x45],al
   14002d623:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002d627:	add    BYTE PTR [rbx+0x0],dl
   14002d62a:	add    BYTE PTR [r10+0x0],r10b
   14002d62e:	push   rsi
   14002d62f:	add    BYTE PTR [rcx+0x0],cl
   14002d632:	rex.XB add BYTE PTR [r13+0x0],al
   14002d636:	push   rsp
   14002d637:	add    BYTE PTR [rcx+0x0],al
   14002d63a:	rex.RXB add BYTE PTR [r8],r8b
   14002d63d:	add    BYTE PTR [rax],al
   14002d63f:	add    BYTE PTR [rsi+0x0],al
   14002d642:	add    BYTE PTR gs:[rcx+0x0],ah
   14002d646:	je     0x14002d648
   14002d648:	jne    0x14002d64a
   14002d64a:	jb     0x14002d64c
   14002d64c:	add    BYTE PTR gs:[rcx+0x0],cl
   14002d650:	add    BYTE PTR [rax],r8b
   14002d653:	add    BYTE PTR [rax],al
   14002d655:	add    BYTE PTR [rax],al
   14002d657:	add    BYTE PTR [rsi+0x0],dl
   14002d65a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d65e:	jae    0x14002d660
   14002d660:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d666:	add    BYTE PTR [rax],al
   14002d668:	push   rdx
   14002d669:	add    BYTE PTR [rbp+0x0],ah
   14002d66c:	add    BYTE PTR [eax+eax*1+0x79],dl
   14002d671:	add    BYTE PTR [rax+0x0],dh
   14002d674:	add    BYTE PTR gs:[rax],al
   14002d677:	add    BYTE PTR [rdx+0x0],dl
   14002d67a:	add    BYTE PTR gs:[rdi+0x0],ah
   14002d67e:	rex.WRXB add BYTE PTR [r14+0x0],r14b
   14002d682:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d686:	add    BYTE PTR [rax],al
   14002d688:	add    BYTE PTR [r8+0x0],sil
   14002d68c:	jo     0x14002d68e
   14002d68e:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002d692:	outs   dx,BYTE PTR ds:[rsi]
   14002d693:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002d697:	add    BYTE PTR [rax+0x0],bh
   14002d69a:	je     0x14002d69c
   14002d69c:	add    BYTE PTR [rax],al
   14002d69e:	add    BYTE PTR [rax],al
   14002d6a0:	rex.W add BYTE PTR [rax+rax*1+0x49],al
   14002d6a5:	add    BYTE PTR [rax+rax*1+0x0],al
   14002d6a9:	add    BYTE PTR [rax],al
   14002d6ab:	add    BYTE PTR [rax],al
   14002d6ad:	add    BYTE PTR [rax],al
   14002d6af:	add    BYTE PTR [rbp+0x0],al
   14002d6b2:	js     0x14002d6b4
   14002d6b4:	je     0x14002d6b6
   14002d6b6:	add    BYTE PTR gs:[rsi+0x0],ch
   14002d6ba:	jae    0x14002d6bc
   14002d6bc:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d6c2:	push   rax
   14002d6c3:	add    BYTE PTR [rbp+0x0],ah
   14002d6c6:	jb     0x14002d6c8
   14002d6c8:	imul   eax,DWORD PTR [rax],0x64006f
   14002d6ce:	add    BYTE PTR [rax],al
   14002d6d0:	push   rax
   14002d6d1:	add    BYTE PTR [rdx+0x0],dh
   14002d6d4:	outs   dx,DWORD PTR ds:[rsi]
   14002d6d5:	add    BYTE PTR [rsi+0x0],ah
   14002d6d8:	imul   eax,DWORD PTR [rax],0x65006c
   14002d6de:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002d6e3:	add    BYTE PTR [rax],al
   14002d6e5:	add    BYTE PTR [rax],al
   14002d6e7:	add    BYTE PTR [rbp+0x0],dl
   14002d6ea:	jae    0x14002d6ec
   14002d6ec:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d6f0:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002d6f5:	add    BYTE PTR [rax],al
   14002d6f7:	add    BYTE PTR [rbx+0x0],dl
   14002d6fa:	jne    0x14002d6fc
   14002d6fc:	(bad)  
   14002d6fd:	add    BYTE PTR [rbx+0x0],dh
   14002d700:	movsxd eax,DWORD PTR [rax]
   14002d702:	jb     0x14002d704
   14002d704:	imul   eax,DWORD PTR [rax],0x740070
   14002d70a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d710:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002d715:	add    BYTE PTR [rax],al
   14002d717:	add    BYTE PTR [rbx+0x0],dl
   14002d71a:	jne    0x14002d71c
   14002d71c:	(bad)  
   14002d71d:	add    BYTE PTR [rbx+0x0],dh
   14002d720:	movsxd eax,DWORD PTR [rax]
   14002d722:	jb     0x14002d724
   14002d724:	imul   eax,DWORD PTR [rax],0x740070
   14002d72a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d730:	push   rdx
   14002d731:	add    BYTE PTR [rbp+0x0],ah
   14002d734:	ins    DWORD PTR es:[rdi],dx
   14002d735:	add    BYTE PTR [rcx+0x0],ch
   14002d738:	outs   dx,BYTE PTR ds:[rsi]
   14002d739:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d73d:	add    BYTE PTR [rdx+0x0],dh
   14002d740:	add    BYTE PTR [rcx+0x0],r12b
   14002d744:	jns    0x14002d746
   14002d746:	jae    0x14002d748
	...
   14002d750:	push   rbx
   14002d751:	add    BYTE PTR [rbp+0x0],dh
   14002d754:	(bad)  
   14002d755:	add    BYTE PTR [rbx+0x0],dh
   14002d758:	movsxd eax,DWORD PTR [rax]
   14002d75a:	jb     0x14002d75c
   14002d75c:	imul   eax,DWORD PTR [rax],0x740070
   14002d762:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d768:	push   rdx
   14002d769:	add    BYTE PTR [rbp+0x0],ah
   14002d76c:	ins    DWORD PTR es:[rdi],dx
   14002d76d:	add    BYTE PTR [rcx+0x0],ch
   14002d770:	outs   dx,BYTE PTR ds:[rsi]
   14002d771:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d775:	add    BYTE PTR [rdx+0x0],dh
   14002d778:	push   rbx
   14002d779:	add    BYTE PTR [rax+0x0],ch
   14002d77c:	outs   dx,DWORD PTR ds:[rsi]
   14002d77d:	add    BYTE PTR [rdi+0x0],dh
	...
   14002d788:	push   rax
   14002d789:	add    BYTE PTR [rbx+0x0],dl
   14002d78c:	rex.WRX add BYTE PTR [rax],r8b
   14002d78f:	add    BYTE PTR [rax+0x0],dl
   14002d792:	push   rbx
   14002d793:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002d797:	add    BYTE PTR [rdx+0x0],dl
   14002d79a:	jne    0x14002d79c
   14002d79c:	outs   dx,BYTE PTR ds:[rsi]
   14002d79d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002d7a1:	add    BYTE PTR [rbp+0x0],ch
   14002d7a4:	add    BYTE PTR gs:[rbp+0x0],al
   14002d7a8:	jbe    0x14002d7aa
   14002d7aa:	add    BYTE PTR gs:[rsi+0x0],ch
   14002d7ae:	je     0x14002d7b0
	...
   14002d7b8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002d7bc:	movsxd eax,DWORD PTR [rax]
   14002d7be:	push   0x6e006900
   14002d7c3:	add    BYTE PTR [rbp+0x0],ah
   14002d7c6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002d7cb:	add    BYTE PTR [rax],al
   14002d7cd:	add    BYTE PTR [rax],al
   14002d7cf:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002d7d3:	add    BYTE PTR [rcx+0x0],ch
   14002d7d6:	(bad)  
   14002d7d7:	add    BYTE PTR [rax+rax*1+0x74],ch
   14002d7db:	add    BYTE PTR [rdx+0x0],dh
   14002d7de:	(bad)  
   14002d7df:	add    BYTE PTR [rbx+0x0],ah
   14002d7e2:	imul   eax,DWORD PTR [rax],0x69
   14002d7e5:	add    BYTE PTR [rsi+0x0],ch
   14002d7e8:	add    BYTE PTR [ecx+0x0],ch
   14002d7ec:	add    BYTE PTR fs:[rax],al
   14002d7ef:	add    BYTE PTR [rcx+0x0],ch
   14002d7f2:	(bad)  
   14002d7f3:	add    BYTE PTR [rdx+0x0],dh
   14002d7f6:	je     0x14002d7f8
   14002d7f8:	jb     0x14002d7fa
   14002d7fa:	(bad)  
   14002d7fb:	add    BYTE PTR [rbx+0x0],ah
   14002d7fe:	imul   eax,DWORD PTR [rax],0x69
   14002d801:	add    BYTE PTR [rsi+0x0],ch
   14002d804:	add    BYTE PTR [ecx+0x0],ch
   14002d808:	add    BYTE PTR fs:[rax],al
   14002d80b:	add    BYTE PTR [rax],al
   14002d80d:	add    BYTE PTR [rax],al
   14002d80f:	add    BYTE PTR [rbp+0x0],cl
   14002d812:	(bad)  
   14002d813:	add    BYTE PTR [rdx+0x0],ch
   14002d816:	outs   dx,DWORD PTR ds:[rsi]
   14002d817:	add    BYTE PTR [rdx+0x0],dh
   14002d81a:	push   rsi
   14002d81b:	add    BYTE PTR [rbp+0x0],ah
   14002d81e:	jb     0x14002d820
   14002d820:	jae    0x14002d822
   14002d822:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002d830:	add    BYTE PTR [r13+0x0],r13b
   14002d834:	(bad)  
   14002d835:	add    BYTE PTR [rcx+0x0],ch
   14002d838:	ins    BYTE PTR es:[rdi],dx
   14002d839:	add    BYTE PTR [rbx+0x0],dl
   14002d83c:	je     0x14002d83e
   14002d83e:	(bad)  
   14002d83f:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002d843:	add    BYTE PTR [rbx+0x0],dh
   14002d846:	add    BYTE PTR [rax],al
   14002d848:	push   rbx
   14002d849:	add    BYTE PTR [rbp+0x0],dh
   14002d84c:	(bad)  
   14002d84d:	add    BYTE PTR [rbx+0x0],dh
   14002d850:	movsxd eax,DWORD PTR [rax]
   14002d852:	jb     0x14002d854
   14002d854:	imul   eax,DWORD PTR [rax],0x740070
   14002d85a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d860:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14002d865:	add    BYTE PTR [rbx+0x0],dh
   14002d868:	jae    0x14002d86a
   14002d86a:	imul   eax,DWORD PTR [rax],0x690066
   14002d870:	movsxd eax,DWORD PTR [rax]
   14002d872:	(bad)  
   14002d873:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002d877:	add    BYTE PTR [rdi+0x0],ch
   14002d87a:	outs   dx,BYTE PTR ds:[rsi]
   14002d87b:	add    BYTE PTR [rax],al
   14002d87d:	add    BYTE PTR [rax],al
   14002d87f:	add    BYTE PTR [rbx+0x0],dh
   14002d882:	je     0x14002d884
   14002d884:	outs   dx,DWORD PTR ds:[rsi]
   14002d885:	add    BYTE PTR [rdx+0x0],dh
   14002d888:	(bad)  
   14002d889:	add    BYTE PTR [rdi+0x0],ah
   14002d88c:	add    BYTE PTR gs:[rax],al
   14002d88f:	add    BYTE PTR [rbp+0x0],cl
   14002d892:	(bad)  
   14002d893:	add    BYTE PTR [rdx+0x0],ch
   14002d896:	outs   dx,DWORD PTR ds:[rsi]
   14002d897:	add    BYTE PTR [rdx+0x0],dh
   14002d89a:	(bad)  
   14002d89b:	add    BYTE PTR [rsi+0x0],ch
   14002d89e:	add    BYTE PTR fs:[rbp+0x0],cl
   14002d8a2:	imul   eax,DWORD PTR [rax],0x6f006e
   14002d8a8:	jb     0x14002d8aa
   14002d8aa:	push   rsi
   14002d8ab:	add    BYTE PTR [rbp+0x0],ah
   14002d8ae:	jb     0x14002d8b0
   14002d8b0:	jae    0x14002d8b2
   14002d8b2:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002d8c0:	push   rbx
   14002d8c1:	add    BYTE PTR [rbp+0x0],dh
   14002d8c4:	(bad)  
   14002d8c5:	add    BYTE PTR [rbx+0x0],dh
   14002d8c8:	movsxd eax,DWORD PTR [rax]
   14002d8ca:	jb     0x14002d8cc
   14002d8cc:	imul   eax,DWORD PTR [rax],0x740070
   14002d8d2:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d8d8:	rex.XB add BYTE PTR [r13+0x0],sil
   14002d8dc:	jb     0x14002d8de
   14002d8de:	jb     0x14002d8e0
   14002d8e0:	add    BYTE PTR gs:[rsi+0x0],ch
   14002d8e4:	je     0x14002d8e6
   14002d8e6:	push   rsi
   14002d8e7:	add    BYTE PTR [rbp+0x0],ah
   14002d8ea:	jb     0x14002d8ec
   14002d8ec:	jae    0x14002d8ee
   14002d8ee:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d8f4:	add    BYTE PTR [rax],al
   14002d8f6:	add    BYTE PTR [rax],al
   14002d8f8:	push   rbx
   14002d8f9:	add    BYTE PTR [rbp+0x0],dh
   14002d8fc:	(bad)  
   14002d8fd:	add    BYTE PTR [rbx+0x0],dh
   14002d900:	movsxd eax,DWORD PTR [rax]
   14002d902:	jb     0x14002d904
   14002d904:	imul   eax,DWORD PTR [rax],0x740070
   14002d90a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d910:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002d914:	jae    0x14002d916
   14002d916:	je     0x14002d918
   14002d918:	push   rbp
   14002d919:	add    BYTE PTR [rbx+0x0],dh
   14002d91c:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002d921:	add    BYTE PTR [rbp+0x0],ah
   14002d924:	jb     0x14002d926
   14002d926:	jae    0x14002d928
   14002d928:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d92e:	add    BYTE PTR [rax],al
   14002d930:	jae    0x14002d932
   14002d932:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d936:	imul   eax,DWORD PTR [rax],0x6c0061
   14002d93c:	jae    0x14002d93e
   14002d93e:	add    BYTE PTR gs:[rcx+0x0],ah
   14002d942:	je     0x14002d944
   14002d944:	jae    0x14002d946
   14002d946:	add    BYTE PTR [rax],al
   14002d948:	jae    0x14002d94a
   14002d94a:	jne    0x14002d94c
   14002d94c:	(bad)  
   14002d94d:	add    BYTE PTR [rbx+0x0],dh
   14002d950:	movsxd eax,DWORD PTR [rax]
   14002d952:	jb     0x14002d954
   14002d954:	imul   eax,DWORD PTR [rax],0x740070
   14002d95a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d960:	jae    0x14002d962
   14002d962:	add    BYTE PTR gs:[rcx+0x0],ah
   14002d966:	je     0x14002d968
   14002d968:	movsxd eax,DWORD PTR [rax]
   14002d96a:	outs   dx,DWORD PTR ds:[rsi]
   14002d96b:	add    BYTE PTR [rbp+0x0],dh
   14002d96e:	outs   dx,BYTE PTR ds:[rsi]
   14002d96f:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002d973:	add    BYTE PTR [rax],al
   14002d975:	add    BYTE PTR [rax],al
   14002d977:	add    BYTE PTR [rbx+0x0],dh
   14002d97a:	jne    0x14002d97c
   14002d97c:	(bad)  
   14002d97d:	add    BYTE PTR [rbx+0x0],dh
   14002d980:	movsxd eax,DWORD PTR [rax]
   14002d982:	jb     0x14002d984
   14002d984:	imul   eax,DWORD PTR [rax],0x740070
   14002d98a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002d990:	outs   dx,DWORD PTR ds:[rsi]
   14002d991:	add    BYTE PTR [rdx+0x0],dh
   14002d994:	imul   eax,DWORD PTR [rax],0x690067
   14002d99a:	outs   dx,BYTE PTR ds:[rsi]
   14002d99b:	add    BYTE PTR [rax],al
   14002d99d:	add    BYTE PTR [rax],al
   14002d99f:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002d9a3:	add    BYTE PTR [rbx+0x0],dl
   14002d9a6:	add    BYTE PTR [rcx+0x0],r12b
   14002d9aa:	jns    0x14002d9ac
   14002d9ac:	jae    0x14002d9ae
   14002d9ae:	push   rdx
   14002d9af:	add    BYTE PTR [rbp+0x0],ah
   14002d9b2:	ins    DWORD PTR es:[rdi],dx
   14002d9b3:	add    BYTE PTR [rcx+0x0],ah
   14002d9b6:	imul   eax,DWORD PTR [rax],0x69006e
   14002d9bc:	outs   dx,BYTE PTR ds:[rsi]
   14002d9bd:	add    BYTE PTR [rdi+0x0],ah
	...
   14002d9c8:	movsxd eax,DWORD PTR [rax]
   14002d9ca:	outs   dx,DWORD PTR ds:[rsi]
   14002d9cb:	add    BYTE PTR [rbp+0x0],ch
   14002d9ce:	jo     0x14002d9d0
   14002d9d0:	(bad)  
   14002d9d1:	add    BYTE PTR [rsi+0x0],ch
   14002d9d4:	jns    0x14002d9d6
   14002d9d6:	outs   dx,BYTE PTR ds:[rsi]
   14002d9d7:	add    BYTE PTR [rcx+0x0],ah
   14002d9da:	ins    DWORD PTR es:[rdi],dx
   14002d9db:	add    BYTE PTR [rbp+0x0],ah
   14002d9de:	add    BYTE PTR [rax],al
   14002d9e0:	jne    0x14002d9e2
   14002d9e2:	jae    0x14002d9e4
   14002d9e4:	add    BYTE PTR gs:[rdx+0x0],dh
   14002d9e8:	outs   dx,BYTE PTR ds:[rsi]
   14002d9e9:	add    BYTE PTR [rcx+0x0],ch
   14002d9ec:	movsxd eax,DWORD PTR [rax]
   14002d9ee:	imul   eax,DWORD PTR [rax],0x6e
   14002d9f1:	add    BYTE PTR [rcx+0x0],ah
   14002d9f4:	ins    DWORD PTR es:[rdi],dx
   14002d9f5:	add    BYTE PTR [rbp+0x0],ah
	...
   14002da00:	jne    0x14002da02
   14002da02:	jae    0x14002da04
   14002da04:	add    BYTE PTR gs:[rdx+0x0],dh
   14002da08:	jae    0x14002da0a
   14002da0a:	movsxd eax,DWORD PTR [rax]
   14002da0c:	outs   dx,DWORD PTR ds:[rsi]
   14002da0d:	add    BYTE PTR [rdx+0x0],dh
   14002da10:	add    BYTE PTR gs:[rax],al
   14002da13:	add    BYTE PTR [rax],al
   14002da15:	add    BYTE PTR [rax],al
   14002da17:	add    BYTE PTR [rbx+0x0],al
   14002da1a:	outs   dx,DWORD PTR ds:[rsi]
   14002da1b:	add    BYTE PTR [rdx+0x0],dh
   14002da1e:	add    BYTE PTR gs:[rax+rax*1+0x43],ch
   14002da23:	add    BYTE PTR [rdi+0x0],ch
   14002da26:	ins    DWORD PTR es:[rdi],dx
   14002da27:	add    BYTE PTR [rbx+0x0],dl
   14002da2a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002da2e:	jbe    0x14002da30
   14002da30:	add    BYTE PTR gs:[rdx+0x0],dh
   14002da34:	add    BYTE PTR [rax],al
   14002da36:	add    BYTE PTR [rax],al
   14002da38:	movsxd eax,DWORD PTR [rax]
   14002da3a:	jb     0x14002da3c
   14002da3c:	add    BYTE PTR gs:[rcx+0x0],ah
   14002da40:	je     0x14002da42
   14002da42:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002da47:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002da4b:	add    BYTE PTR [rsi+0x0],dh
   14002da4e:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14002da53:	add    BYTE PTR [rax],al
   14002da55:	add    BYTE PTR [rax],al
   14002da57:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002da5b:	add    BYTE PTR [rbx+0x0],dh
   14002da5e:	(bad)  
   14002da5f:	add    BYTE PTR [rbx+0x0],ah
   14002da62:	movsxd eax,DWORD PTR [rax]
   14002da64:	add    BYTE PTR gs:[rax+0x0],dh
   14002da68:	je     0x14002da6a
   14002da6a:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002da6f:	add    BYTE PTR [rbp+0x0],ah
   14002da72:	jb     0x14002da74
   14002da74:	jae    0x14002da76
   14002da76:	imul   eax,DWORD PTR [rax],0x6e006f
   14002da7c:	add    BYTE PTR [rax],al
   14002da7e:	add    BYTE PTR [rax],al
   14002da80:	je     0x14002da82
   14002da82:	outs   dx,DWORD PTR ds:[rsi]
   14002da83:	add    BYTE PTR [rbx+0x0],dh
   14002da86:	movsxd eax,DWORD PTR [rax]
   14002da88:	jne    0x14002da8a
   14002da8a:	jb     0x14002da8c
   14002da8c:	jb     0x14002da8e
   14002da8e:	add    BYTE PTR gs:[rsi+0x0],ch
   14002da92:	je     0x14002da94
   14002da94:	push   rsi
   14002da95:	add    BYTE PTR [rbp+0x0],ah
   14002da98:	jb     0x14002da9a
   14002da9a:	jae    0x14002da9c
   14002da9c:	imul   eax,DWORD PTR [rax],0x6e006f
   14002daa2:	add    BYTE PTR [rax],al
   14002daa4:	add    BYTE PTR [rax],al
   14002daa6:	add    BYTE PTR [rax],al
   14002daa8:	push   rdi
   14002daa9:	add    BYTE PTR [rdi+0x0],ch
   14002daac:	jb     0x14002daae
   14002daae:	imul   eax,DWORD PTR [rax],0x66
   14002dab1:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002dab5:	add    BYTE PTR [rdi+0x0],dh
	...
   14002dac0:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002dac4:	jae    0x14002dac6
   14002dac6:	jae    0x14002dac8
   14002dac8:	(bad)  
   14002dac9:	add    BYTE PTR [rdi+0x0],ah
   14002dacc:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14002dad8:	mov    al,0x25
   14002dada:	add    eax,DWORD PTR [rax+0x1]
   14002dadd:	add    BYTE PTR [rax],al
   14002dadf:	add    BYTE PTR [rax+0x140014f],al
	...
   14002daed:	add    BYTE PTR [rax],al
   14002daef:	add    BYTE PTR [rax-0x2cdbc096],cl
   14002daf5:	or     BYTE PTR [rbx+0x198a2e85],ah
   14002dafb:	adc    eax,DWORD PTR [rbx+rsi*2+0x70]
   14002daff:	add    esp,DWORD PTR [rdx]
   14002db01:	cmp    BYTE PTR [rcx],cl
   14002db03:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002db04:	shl    BYTE PTR [rcx],1
   14002db06:	lahf   
   14002db07:	sub    DWORD PTR [rax-0x76f7d106],ebx
   14002db0d:	ins    BYTE PTR es:[rdi],dx
   14002db0e:	rex.WRX in al,dx
   14002db10:	out    0x21,al
   14002db12:	sub    BYTE PTR [rbp+0x77],al
   14002db15:	adc    edx,eax
   14002db17:	cmp    bh,cl
   14002db19:	push   sp
   14002db1b:	mov    esi,0x34e90c6c
   14002db20:	mov    bh,0x29
   14002db22:	lods   al,BYTE PTR ds:[rsi]
   14002db23:	rcr    ch,0x50
   14002db26:	jl     0x14002daf1
   14002db28:	mov    ch,0xd5
   14002db2a:	test   BYTE PTR [rdi],bh
   14002db2c:	(bad)  
   14002db2d:	or     DWORD PTR [rdi-0x4b],eax
   14002db30:	(bad)  
   14002db32:	(bad)  
   14002db33:	xchg   edx,eax
   14002db34:	sbb    edi,ebx
   14002db36:	jns    0x14002dac1
	...
   14002db40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002db41:	or     esi,DWORD PTR [rcx]
   14002db43:	shr    DWORD PTR [rbp+rsi*4+0x72db98df],1
   14002db4a:	std    
   14002db4b:	(bad)  
   14002db4c:	mov    bh,0xdf
   14002db4e:	sbb    dl,al
   14002db50:	in     eax,dx
   14002db51:	scas   eax,DWORD PTR es:[rdi]
   14002db52:	loope  0x14002db0c
   14002db54:	xchg   esi,eax
   14002db55:	jle    0x14002db7d
   14002db57:	push   0x45
   14002db59:	nop
   14002db5a:	jl     0x14002db16
   14002db5c:	cdq    
   14002db5d:	jg     0x14002db8b
   14002db5f:	icebp  
   14002db60:	rex.RXB cdq 
   14002db62:	movabs eax,ds:0x1f2e2b3916cf724
   14002db6b:	or     BYTE PTR [rsi],dl
   14002db6d:	cld    
   14002db6e:	mov    es,WORD PTR [rbp+0x636920d8]
   14002db74:	imul   ecx,DWORD PTR [rsi+0x57],0x58fea371
   14002db7b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002db7c:	jle    0x14002dbbb
   14002db7e:	xchg   ebx,eax
   14002db7f:	hlt    
   14002db80:	(bad)  
   14002db81:	je     0x14002db18
   14002db83:	or     eax,0x728eb658
   14002db88:	pop    rax
   14002db89:	int    0x8b
   14002db8b:	jno    0x14002db7b
   14002db8d:	rex.WX adc rax,0x54a41d82
   14002db93:	jnp    0x14002db4a
   14002db95:	pop    rcx
   14002db96:	pop    rdx
   14002db97:	ret    0xd539
   14002db9a:	xor    BYTE PTR [rbx+rdx*1+0x232af260],bl
   14002dba1:	mov    al,0xd1
   14002dba3:	(bad)
   14002dba6:	(bad)  
   14002dba7:	sub    BYTE PTR [rax],bl
   14002dba9:	jns    0x14002dbec
   14002dbab:	retf   0x38ef
   14002dbae:	fstp   TBYTE PTR [rax-0x71862350]
   14002dbb4:	(bad)  
   14002dbb5:	sbb    BYTE PTR [rdx],bh
   14002dbb7:	(bad)  
   14002dbb8:	mov    ecx,DWORD PTR [rsi]
   14002dbba:	sahf   
   14002dbbb:	ins    BYTE PTR es:[rdi],dx
   14002dbbc:	mov    bl,BYTE PTR ds:[rsi]
   14002dbbf:	mov    al,0xc1
   14002dbc1:	ja     0x14002dbd8
   14002dbc3:	xlat   BYTE PTR ds:[rbx]
   14002dbc4:	(bad)  
   14002dbc5:	rex.WXB xor QWORD PTR [r13+0x78af2fda],rdi
   14002dbcc:	(bad)  
   14002dbcd:	pop    rsp
   14002dbce:	(bad)  
   14002dbcf:	push   rbp
   14002dbd0:	repz and eax,0xab94e655
   14002dbd6:	push   rbp
   14002dbd7:	stos   BYTE PTR es:[rdi],al
   14002dbd8:	(bad)  
   14002dbd9:	cwde   
   14002dbda:	rex.W push rdi
   14002dbdc:	adc    al,0xe8
   14002dbdf:	movsxd ebp,DWORD PTR [rdx+0x39]
   14002dbe2:	retf   0xb655
   14002dbe5:	adc    BYTE PTR [rbx-0x33a3cbd6],ch
   14002dbeb:	mov    ah,0xce
   14002dbed:	call   0xc6b1ed33
   14002dbf2:	push   rsp
   14002dbf3:	movabs eax,ds:0xb3ee14117c72e993
   14002dbfc:	sub    bh,BYTE PTR [rdi+rbp*2-0x563aa29d]
   14002dc03:	sub    esi,esi
   14002dc05:	xor    DWORD PTR [rax],ebx
   14002dc07:	je     0x14002dc1f
   14002dc09:	ds pop rsp
   14002dc0b:	(bad)  
   14002dc0c:	(bad)  
   14002dc0d:	xchg   ebx,eax
   14002dc0e:	xchg   DWORD PTR [rbx-0x502945cd],ebx
   14002dc14:	pop    rsp
   14002dc15:	iret   
   14002dc16:	and    al,0x6c
   14002dc18:	adc    DWORD PTR [rbx+0x32],0x9586777a
   14002dc1f:	sub    BYTE PTR [rax-0x50c470b8],bl
   14002dc25:	mov    ecx,0xe81b6b4b
   14002dc2a:	mov    edi,0x282193c4
   14002dc2f:	data16 int3 
   14002dc31:	or     eax,ebx
   14002dc33:	(bad)  
   14002dc34:	xchg   ecx,eax
   14002dc35:	test   eax,0xac60fb21
   14002dc3a:	jl     0x14002dc84
   14002dc3c:	xor    al,BYTE PTR [rax+0x5d5d5dec]
   14002dc42:	test   bh,ch
   14002dc44:	mov    cl,0x75
   14002dc46:	test   ecx,ebp
   14002dc48:	add    ah,BYTE PTR [rbx]
   14002dc4a:	fmul   QWORD PTR es:[rax-0x7e149ae5]
   14002dc51:	mov    DWORD PTR ds:[rbx],esp
   14002dc54:	(bad)
   14002dc57:	shl    ebx,cl
   14002dc59:	outs   dx,DWORD PTR ds:[rsi]
   14002dc5a:	ins    DWORD PTR es:[rdi],dx
   14002dc5b:	(bad)  
   14002dc5d:	rex.X hlt 
   14002dc5f:	add    DWORD PTR [rdx+0x42e0b44],0x20
   14002dc66:	test   BYTE PTR [rdx+rcx*2+0x5e69c8f0],ah
   14002dc6d:	fwait
   14002dc6e:	(bad)  
   14002dc6f:	sahf   
   14002dc70:	rex.X push 0x6c9a21c6
   14002dc76:	jmp    0x14c9f3e71
   14002dc7b:	addr32 lock mov bl,dl
   14002dc7f:	stos   DWORD PTR es:[rdi],eax
   14002dc80:	shl    BYTE PTR [rax+0x2f686a51],cl
   14002dc86:	push   rsp
   14002dc87:	fsubr  DWORD PTR [rax]
   14002dc89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002dc8a:	setbe  BYTE PTR [rbx+0x6cab5133]
   14002dc91:	or     ebp,edi
   14002dc93:	outs   dx,BYTE PTR ds:[rsi]
   14002dc94:	in     al,0x3b
   14002dc96:	jp     0x14002dcab
   14002dc98:	push   rax
   14002dc99:	lock cmp edi,DWORD PTR [rdx+0x7efb2a98]
   14002dca0:	sbb    eax,0x76a1f165
   14002dca5:	add    DWORD PTR [rdi-0x35a6c1c7],ebp
   14002dcab:	data16 mov BYTE PTR [rsi],cl
   14002dcae:	rex.XB (bad) 
   14002dcb0:	sbb    DWORD PTR [rsi-0x604b7312],eax
   14002dcb6:	outs   dx,DWORD PTR ds:[rsi]
   14002dcb7:	rex.RB ret 
   14002dcb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002dcba:	test   BYTE PTR [rbp-0x42],bh
   14002dcbd:	pop    rsi
   14002dcbe:	mov    edi,DWORD PTR [rbx]
   14002dcc0:	fdiv   DWORD PTR [rbp+0x6f]
   14002dcc3:	loopne 0x14002dd38
   14002dcc5:	and    cl,al
   14002dcc7:	test   DWORD PTR [rdi-0x59bfe5bc],ebx
   14002dccd:	push   0xffffffffffffffc1
   14002dccf:	push   rsi
   14002dcd0:	(bad)  
   14002dcd1:	stos   BYTE PTR es:[rdi],al
   14002dcd2:	ror    DWORD PTR [rsi+0x6],cl
   14002dcd5:	ja     0x14002dd16
   14002dcd7:	ss jb  0x14002dcb9
   14002dcda:	(bad)  
   14002dcdb:	sbb    edi,DWORD PTR [rip+0x24429b02]        # 0x1644577e3
   14002dce1:	xlat   BYTE PTR ds:[rbx]
   14002dce2:	shl    BYTE PTR [rdi],1
   14002dce4:	rex.W adc cl,BYTE PTR [rdx]
   14002dce7:	rcl    bl,1
   14002dce9:	(bad)  
   14002dcea:	pand   mm3,QWORD PTR [rbx-0x36b60e40]
   14002dcf1:	jb     0x14002dd46
   14002dcf3:	(bad)  
   14002dcf4:	jnp    0x14002dd11
   14002dcf6:	cdq    
   14002dcf7:	sbb    al,0x79
   14002dcfa:	(bad)  
   14002dcfb:	and    eax,0xf6e8def7
   14002dd00:	sbb    dl,BYTE PTR [rax-0x2]
   14002dd03:	jrcxz  0x14002dd40
   14002dd05:	rex.WR jns 0x14002dcbe
   14002dd08:	mov    ebp,0xba976ce0
   14002dd0d:	(bad)  
   14002dd0e:	rol    BYTE PTR [rsi+rsi*4],0x4f
   14002dd12:	test   eax,0x9f60c4c1
   14002dd17:	rex ret 0x5c9e
   14002dd1b:	pop    rsi
   14002dd1c:	movsxd esp,DWORD PTR [rdx+rbp*2]
   14002dd1f:	sbb    DWORD PTR [rdi-0x4a970491],ebp
   14002dd25:	push   rbx
   14002dd26:	ins    BYTE PTR es:[rdi],dx
   14002dd27:	ds jmp 0x14002dcdc
   14002dd2a:	cmp    DWORD PTR [rbx],edx
   14002dd2c:	outs   dx,DWORD PTR ds:[rsi]
   14002dd2d:	in     al,dx
   14002dd2e:	push   rdx
   14002dd2f:	cmp    ebx,DWORD PTR [rdi]
   14002dd31:	push   rcx
   14002dd32:	cld    
   14002dd33:	ins    DWORD PTR es:[rdi],dx
   14002dd34:	sub    al,0x95
   14002dd36:	xor    BYTE PTR [rbx-0x337ebabc],bl
   14002dd3c:	or     DWORD PTR [rbp-0x2ffb50a2],edi
   14002dd42:	jrcxz  0x14002dd02
   14002dd44:	std    
   14002dd45:	rex.WX xor rbx,rsi
   14002dd48:	(bad)  
   14002dd49:	sub    BYTE PTR [rdi],cl
   14002dd4b:	data16 mov bl,0x4b
   14002dd4e:	sbb    DWORD PTR cs:[rdi-0x58],edx
   14002dd52:	retf   
   14002dd53:	ror    BYTE PTR [rdi],0x74
   14002dd56:	enter  0x3945,0x5f
   14002dd5a:	or     edx,edx
   14002dd5c:	(bad)  
   14002dd5e:	sar    DWORD PTR [rcx+0x5579c0bd],cl
   14002dd64:	or     dh,BYTE PTR [rdx]
   14002dd66:	(bad)  
   14002dd67:	sbb    al,dh
   14002dd69:	add    BYTE PTR [rcx+0x2c7279d6],ah
   14002dd6f:	rex (bad) 
   14002dd71:	and    eax,0xa3cc679f
   14002dd76:	(bad)  
   14002dd77:	sti    
   14002dd78:	clc    
   14002dd79:	jmp    0x162fb6c23
   14002dd7e:	xor    bl,bl
   14002dd80:	fist   WORD PTR [rsi]
   14002dd82:	jne    0x14002ddc0
   14002dd84:	adc    eax,0xc8fd616b
   14002dd89:	(bad)  
   14002dd8a:	push   rax
   14002dd8b:	(bad)  
   14002dd8c:	stos   DWORD PTR es:[rdi],eax
   14002dd8d:	push   rdx
   14002dd8e:	add    eax,0x3db5faad
   14002dd93:	xor    ah,BYTE PTR [rax-0x79]
   14002dd96:	and    edi,ebp
   14002dd98:	rex.W jnp 0x14002ddcc
   14002dd9b:	push   rbx
   14002dd9c:	(bad)  
   14002dd9d:	fild   WORD PTR [rax]
   14002dd9f:	ds mov ebx,0xa09e5c57
   14002dda5:	mov    WORD PTR [rdi-0x36],gs
   14002dda8:	cs push rsi
   14002ddaa:	xchg   DWORD PTR [rdx],ebx
   14002ddac:	fld    TBYTE PTR [rcx+0x17]
   14002ddaf:	fcomip st,st(6)
   14002ddb1:	test   al,0x42
   14002ddb3:	(bad)  
   14002ddb4:	ret    
   14002ddb5:	(bad)  
   14002ddb6:	jle    0x14002dde0
   14002ddb8:	(bad)  
   14002ddb9:	xor    ah,BYTE PTR [rdi-0x54]
   14002ddbc:	jae    0x14002de13
   14002ddbe:	rex.WRXB mov WORD PTR [r8-0x3796a4d9],?
   14002ddc5:	pop    rax
   14002ddc6:	retf   0x5dbb
   14002ddc9:	movabs ds:0x3d98b8f011a0e1ff,eax
   14002ddd2:	cli    
   14002ddd3:	adc    BYTE PTR [rax+0x6cfd2183],bh
   14002ddd9:	mov    ch,0xfc
   14002dddb:	rex.WX pop rbx
   14002dddd:	rcl    ecx,cl
   14002dddf:	sub    eax,0x9a53e479
   14002dde4:	gs rex.RB clc 
   14002dde7:	mov    dh,0xbc
   14002dde9:	mov    ss,r10
   14002ddec:	nop
   14002dded:	xchg   edi,eax
   14002ddee:	sti    
   14002ddef:	rex.WXB (bad) 
   14002ddf2:	fucom  st(1)
   14002ddf4:	xor    edi,DWORD PTR [rsi-0x35]
   14002ddf7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ddf8:	adc    edi,r11d
   14002ddfb:	(bad)  
   14002ddfc:	call   0x11ad1c2c7
   14002de01:	retf   0xef20
   14002de04:	add    DWORD PTR [rdi+rsi*2+0x36],ecx
   14002de08:	(bad)  
   14002de09:	sahf   
   14002de0a:	jle    0x14002dddc
   14002de0c:	mov    ah,0x1f
   14002de0e:	icebp  
   14002de0f:	sub    ecx,DWORD PTR [rbp-0x26]
   14002de12:	fist   DWORD PTR [rbp-0x516f6e68]
   14002de18:	jno    0x14002dda8
   14002de1a:	lods   eax,DWORD PTR ds:[rsi]
   14002de1b:	(bad)  
   14002de1c:	movabs al,ds:0xe0d08ed1d06b93d5
   14002de25:	and    eax,0x5b2fafc7
   14002de2a:	cmp    al,0x8e
   14002de2c:	mov    bh,0x94
   14002de2e:	jne    0x14002ddbe
   14002de30:	sti    
   14002de31:	loop   0x14002de29
   14002de33:	(bad)  
   14002de34:	sub    edx,DWORD PTR fs:[rdx]
   14002de37:	repnz adc bh,BYTE PTR [rax-0xfe37778]
   14002de3e:	or     eax,0xad5ea090
   14002de43:	rex.WRXB sbb al,0xc3
   14002de46:	(bad)
   14002de4a:	iret   
   14002de4b:	shr    DWORD PTR [rbp+0x18b3a8c1],1
   14002de51:	and    ch,BYTE PTR [rdi]
   14002de53:	(bad)  
   14002de54:	ja     0x14002de6d
   14002de56:	(bad)  
   14002de57:	mov    esi,0xea752dfe
   14002de5c:	movabs eax,ds:0xe8e5a0cc0f8b021f
   14002de65:	je     0x14002ded6
   14002de67:	mov    ch,0xd6
   14002de69:	rep lods al,BYTE PTR ds:[rsi]
   14002de6b:	sbb    BYTE PTR [rcx-0x1f31761e],bl
   14002de71:	rex.WRXB test al,0xb4
   14002de74:	mov    bh,0xe0
   14002de76:	adc    edi,ebp
   14002de78:	cmp    DWORD PTR [rbx],0xa8d97cc4
   14002de7e:	lods   eax,DWORD PTR ds:[rsi]
   14002de7f:	shl    BYTE PTR [rsi-0x5e],cl
   14002de82:	pop    rdi
   14002de83:	(bad)  
   14002de84:	add    eax,0x14809577
   14002de89:	jae    0x14002de57
   14002de8b:	xchg   ebx,eax
   14002de8c:	ja     0x14002dea2
   14002de8e:	sbb    ah,BYTE PTR [rcx]
   14002de90:	and    BYTE PTR gs:[rbp-0x4a05791a],ch
   14002de97:	ja     0x14002de8e
   14002de99:	rex.X push rsp
   14002de9b:	(bad)  
   14002de9c:	iret   
   14002de9d:	xor    eax,0xaf0cfb9d
   14002dea2:	int    0xeb
   14002dea4:	movabs al,ds:0x49d6411bd37b3e89
   14002dead:	jle    0x14002decd
   14002deaf:	scas   al,BYTE PTR es:[rdi]
   14002deb0:	sub    eax,0x5e00250e
   14002deb5:	mov    bl,0x71
   14002deb7:	and    BYTE PTR [rbx-0x50dd9800],bh
   14002debd:	loopne 0x14002de77
   14002debf:	push   rdi
   14002dec0:	fwait
   14002dec1:	ss fs and al,0x1e
   14002dec5:	mov    ecx,0x911df009
   14002deca:	movsxd edx,DWORD PTR [rbp-0x56]
   14002decd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002dece:	fistp  WORD PTR [rcx-0x77]
   14002ded1:	rex.XB sar DWORD PTR [r8+0x7f],0x53
   14002ded6:	pop    rdx
   14002ded7:	fldenv [rdx-0x3adf82a5]
   14002dedd:	mov    ecx,0x37602e5
   14002dee2:	sub    DWORD PTR es:[rcx+0x686295cf],0x19
   14002deea:	enter  0x4111,0x4a
   14002deee:	jae    0x14002df3e
   14002def0:	retf   0x472d
   14002def3:	mov    bl,0x4a
   14002def5:	test   eax,0x527b14
   14002defa:	push   rcx
   14002defb:	sbb    edx,DWORD PTR [rip+0x3f9a5329]        # 0x17f9d322a
   14002df01:	push   rdi
   14002df02:	(bad)  
   14002df04:	in     al,0xc6
   14002df06:	fwait
   14002df07:	mov    esp,0x2b60a476
   14002df0c:	add    BYTE PTR [rsi+riz*8-0x7f],dh
   14002df10:	mov    ch,0x6f
   14002df12:	mov    edx,0x1be91f08
   14002df17:	push   rdi
   14002df18:	imul   ebp,esp,0xffffff96
   14002df1b:	repnz adc eax,0x212a0dd9
   14002df21:	movsxd esi,DWORD PTR gs:[rsi-0x1846064a]
   14002df28:	cs add eax,0x5664ff34
   14002df2e:	test   ebp,eax
   14002df30:	pop    rbp
   14002df31:	sub    eax,0x8fa153b0
   14002df36:	lahf   
   14002df37:	test   eax,0x8ba4799
   14002df3c:	push   0x7
   14002df3e:	test   DWORD PTR [rsi-0x17],ebp
   14002df41:	jo     0x14002dfbd
   14002df43:	rex.WXB
   14002df44:	sub    DWORD PTR [rbx+0x75092eb5],r14d
   14002df4b:	(bad)  [rbx]
   14002df4d:	es sbb esp,eax
   14002df50:	mov    al,0xa6
   14002df52:	outs   dx,BYTE PTR ds:[rsi]
   14002df53:	lods   eax,DWORD PTR ds:[rsi]
   14002df54:	jge    0x14002df35
   14002df56:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002df57:	movabs r8,0x718fedb2669cee60
   14002df61:	mov    WORD PTR [rdx-0x65e80014],gs
   14002df67:	imul   ebp,DWORD PTR [rdx+rdx*2+0x64],0xb19ee156
   14002df6f:	ret    0x2a5
   14002df72:	sbb    DWORD PTR ss:[rcx],ebp
   14002df75:	or     QWORD PTR [rbp+0x40],r14
   14002df79:	adc    ebx,DWORD PTR [rcx-0x60]
   14002df7c:	cmp    bl,BYTE PTR ds:[rax]
   14002df7f:	in     al,0x9a
   14002df81:	cwde   
   14002df82:	push   rsp
   14002df83:	(bad)  
   14002df84:	gs popf 
   14002df86:	rex.X pop rbx
   14002df88:	(bad)  
   14002df89:	in     al,0x8f
   14002df8b:	imul   edx,esi,0x3f
   14002df8e:	neg    DWORD PTR [rcx-0x5e2d63f9]
   14002df94:	cmc    
   14002df95:	xor    al,ch
   14002df97:	out    dx,eax
   14002df98:	out    0x38,al
   14002df9a:	sub    eax,0x255dc14d
   14002df9f:	lock xchg BYTE PTR [rax],ah
   14002dfa2:	fisttp QWORD PTR [rsi+riz*1-0x15]
   14002dfa6:	jo     0x14002df2c
   14002dfa8:	(bad)  
   14002dfa9:	jmp    0x10c614330
   14002dfae:	(bad)  
   14002dfaf:	add    bh,BYTE PTR [rdi]
   14002dfb1:	imul   ebp,DWORD PTR [rax+0x9],0xffffffc9
   14002dfb5:	out    dx,eax
   14002dfb6:	mov    edx,0x9718143e
   14002dfbb:	cmp    al,0xa1
   14002dfbd:	jo     0x14002e029
   14002dfbf:	imul   eax,DWORD PTR [rbp+rsi*1-0x1d799781],0xffffffa0
   14002dfc7:	push   rdx
   14002dfc8:	add    eax,0x37b79c53
   14002dfcd:	(bad)  
   14002dfce:	push   rax
   14002dfcf:	stos   BYTE PTR es:[rdi],al
   14002dfd0:	sbb    al,0x84
   14002dfd2:	(bad)  
   14002dfd3:	ds pop rsp
   14002dfd5:	scas   al,BYTE PTR es:[rdi]
   14002dfd6:	fidivr WORD PTR [rdi-0x14]
   14002dfd9:	rex.R jge 0x14002df6a
   14002dfdc:	mov    eax,0x375716f2
   14002dfe1:	fidivr DWORD PTR [rdx]
   14002dfe3:	mov    al,0xd
   14002dfe5:	or     al,0x50
   14002dfe7:	lock add al,0x1f
   14002dfea:	sbb    al,0xf0
   14002dfec:	push   QWORD PTR [rbx-0xae5fe00]
   14002dff2:	or     al,0xae
   14002dff4:	mov    dl,0x74
   14002dff6:	mov    ch,0x3c
   14002dff8:	pop    rax
   14002dff9:	jp     0x14002df7e
   14002dffb:	and    eax,0xdc0921bd
   14002e000:	stc    
   14002e001:	adc    edx,DWORD PTR [rcx-0x56d0092f]
   14002e007:	jl     0x14002e07c
   14002e009:	xor    r10b,BYTE PTR [r9+r8*1-0x7edd0ab9]
   14002e011:	in     eax,0xe5
   14002e013:	cmp    bl,ah
   14002e015:	fcmovb st,st(2)
   14002e017:	(bad)  
   14002e018:	xor    al,0x76
   14002e01a:	mov    ch,0xc8
   14002e01c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e01d:	(bad)  
   14002e01f:	(bad)  
   14002e020:	rex.RX (bad) 
   14002e022:	rex.R test eax,0xfd0030e
   14002e028:	ds (bad) 
   14002e02a:	enter  0x41ec,0x1e
   14002e02e:	jne    0x14002dfd4
   14002e030:	cdq    
   14002e031:	int    0x38
   14002e033:	loop   0x14002e064
   14002e035:	(bad)  
   14002e036:	(bad)  
   14002e037:	cmp    esp,DWORD PTR [rcx+0x313280bb]
   14002e03d:	mov    bl,0x3e
   14002e03f:	sbb    BYTE PTR [rax],bh
   14002e041:	mov    edx,DWORD PTR [rsi+rcx*2+0x8]
   14002e045:	mov    ecx,0xd034f6d
   14002e04a:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002e04c:	mov    edi,0x90f60a04
   14002e051:	adc    bh,BYTE PTR [rax-0x688386d4]
   14002e057:	and    al,0x72
   14002e059:	mov    al,0x79
   14002e05b:	push   rsi
   14002e05c:	scas   eax,DWORD PTR es:[rdi]
   14002e05d:	mov    DWORD PTR [rdi-0x6588e044],ebp
   14002e063:	ficom  WORD PTR [rax]
   14002e065:	or     BYTE PTR [rbx-0x7451ed27],dl
   14002e06b:	mov    bl,0x2e
   14002e06d:	(bad)  
   14002e06e:	iret   
   14002e06f:	fcomp  QWORD PTR [rdi]
   14002e071:	jb     0x14002e085
   14002e073:	push   rbp
   14002e074:	and    al,0x71
   14002e076:	imul   ebp,DWORD PTR [rsi],0xffffffe6
   14002e079:	fstp   QWORD PTR [rdx]
   14002e07b:	push   rax
   14002e07c:	xchg   ebp,ecx
   14002e07e:	test   BYTE PTR [rdi+0x7a584718],bl
   14002e084:	(bad)  
   14002e085:	fimul  DWORD PTR [rax]
   14002e087:	je     0x14002e045
   14002e089:	(bad)  
   14002e08a:	lahf   
   14002e08b:	mov    esp,0xe94b7d8c
   14002e090:	cmp    ch,ah
   14002e092:	jp     0x14002e080
   14002e094:	cli    
   14002e095:	sbb    eax,0x4366db85
   14002e09a:	or     DWORD PTR [rbx-0x2e],esp
   14002e09d:	ret    
   14002e09e:	fs (bad) 
   14002e0a0:	sbb    BYTE PTR [r15+r13*8],r11b
   14002e0a4:	or     cl,bl
   14002e0a6:	adc    eax,0x433b3732
   14002e0ab:	fst    QWORD PTR [rsi]
   14002e0ad:	mov    edx,0x4d4324c2
   14002e0b2:	movabs eax,ds:0x9400022a65c45112
   14002e0bb:	push   rax
   14002e0bc:	fucom  st(4)
   14002e0be:	cmp    dl,BYTE PTR [rbx]
   14002e0c0:	sahf   
   14002e0c1:	clc    
   14002e0c2:	fbstp  TBYTE PTR [rcx+0x55]
   14002e0c5:	rex.WRX xor QWORD PTR [rax],r10
   14002e0c8:	(bad)  
   14002e0c9:	ja     0x14002e077
   14002e0cb:	sbb    DWORD PTR [rbx-0xea0eee7],0x6b043556
   14002e0d5:	(bad)  
   14002e0d6:	movabs ds:0x24a5093c11183bd7,eax
   14002e0df:	pop    rcx
   14002e0e0:	in     eax,dx
   14002e0e1:	out    0x8f,al
   14002e0e3:	repnz cli 
   14002e0e5:	sti    
   14002e0e6:	icebp  
   14002e0e7:	xchg   edi,eax
   14002e0e8:	sub    al,0xbf
   14002e0ea:	mov    edx,0x153c6e9e
   14002e0ef:	(bad)  
   14002e0f0:	jo     0x14002e137
   14002e0f2:	jrcxz  0x14002e07a
   14002e0f4:	mov    cl,0x6f
   14002e0f6:	jmp    0x14e60ebe5
   14002e0fb:	xchg   BYTE PTR [rbx+0x1c5a3e2a],dh
   14002e101:	out    0x1f,eax
   14002e103:	ja     0x14002e0ff
   14002e105:	(bad)  
   14002e106:	cmp    eax,0x65dcb94e
   14002e10b:	sub    DWORD PTR [rdi],ecx
   14002e10d:	sbb    eax,0x89d699e7
   14002e112:	and    BYTE PTR ds:[rip+0x785266c8],0xc9        # 0x1b85547e2
   14002e11a:	rex.WR
   14002e11b:	cs push 0xffffffffffffffb3
   14002e11e:	adc    BYTE PTR [rdx+rdi*4+0x78c6150e],bl
   14002e125:	(bad)  
   14002e126:	loop   0x14002e0bc
   14002e128:	push   rbx
   14002e129:	cmp    al,0xfc
   14002e12b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e12c:	hlt    
   14002e12d:	sub    eax,0x4ea71e0a
   14002e132:	div    edx
   14002e134:	cmp    eax,0xf361d2b
   14002e139:	cmp    DWORD PTR es:[rcx],ebx
   14002e13c:	(bad)  
   14002e13d:	jns    0x14002e101
   14002e13f:	sbb    DWORD PTR [rax],ecx
   14002e141:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e142:	and    edx,DWORD PTR [rdx-0x4a]
   14002e145:	adc    dl,BYTE PTR [rbx]
   14002e147:	imul   DWORD PTR [rsi-0x2]
   14002e14a:	lods   eax,DWORD PTR ds:[rsi]
   14002e14b:	jmp    0x14002e1b3
   14002e14d:	(bad)  
   14002e14e:	ret    
   14002e14f:	(bad)  
   14002e150:	xchg   ebp,eax
   14002e151:	rex.RB mov r12d,0x7bc883e3
   14002e157:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002e158:	shl    DWORD PTR [rdi],1
   14002e15a:	jg     0x14002e10d
   14002e15c:	sub    bh,bh
   14002e15e:	mov    WORD PTR [rcx],es
   14002e160:	out    dx,eax
   14002e161:	fnsave [rdx]
   14002e163:	ret    
   14002e164:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e165:	pop    rdx
   14002e166:	ins    BYTE PTR es:[rdi],dx
   14002e167:	mov    esi,0x65582185
   14002e16c:	add    bl,BYTE PTR [rax-0x5af09755]
   14002e172:	(bad)  
   14002e173:	out    dx,al
   14002e174:	cmp    edx,DWORD PTR [rbp+0x7daddb2f]
   14002e17a:	out    dx,eax
   14002e17b:	sub    al,BYTE PTR [rdi+rbp*1-0x49d7a492]
   14002e182:	and    DWORD PTR [rip+0x29076170],edx        # 0x1690a42f8
   14002e188:	jne    0x14002e1d1
   14002e18a:	fucomp st(4)
   14002e18c:	adc    BYTE PTR [rip+0xffffffffa830619f],dl        # 0xe8334331
   14002e192:	int3   
   14002e193:	adc    edx,DWORD PTR [rsi+0x1eeb61bd]
   14002e199:	(bad)  
   14002e19a:	xor    al,0x3
   14002e19c:	iret   
   14002e19d:	movsxd eax,DWORD PTR [rbx]
   14002e19f:	stos   BYTE PTR es:[rdi],al
   14002e1a0:	nop
   14002e1a1:	pop    rsp
   14002e1a2:	jae    0x14002e159
   14002e1a4:	cmp    DWORD PTR [rdx-0x61f4b390],esp
   14002e1aa:	sahf   
   14002e1ab:	(bad)  
   14002e1ac:	adc    al,0xde
   14002e1ae:	stos   BYTE PTR es:[rdi],al
   14002e1af:	retf   
   14002e1b0:	mov    esp,0xa7eecc86
   14002e1b5:	sub    al,0x62
   14002e1b7:	(bad)  
   14002e1b8:	stos   DWORD PTR es:[rdi],eax
   14002e1b9:	pop    rsp
   14002e1ba:	stos   DWORD PTR es:[rdi],eax
   14002e1bb:	pushf  
   14002e1bc:	outs   dx,BYTE PTR ds:[rsi]
   14002e1bd:	test   bl,dh
   14002e1bf:	mov    dl,0xaf
   14002e1c1:	(bad)  
   14002e1c2:	mov    esp,DWORD PTR [rdx+rcx*8-0x10]
   14002e1c6:	mov    ebp,0x2369b919
   14002e1cb:	movabs al,ds:0x40685a32655abb50
   14002e1d4:	mov    bl,0xb4
   14002e1d6:	sub    bh,BYTE PTR [rdx*8-0x8ce6117]
   14002e1dd:	mov    eax,0xb19c021
   14002e1e2:	push   rsp
   14002e1e3:	fwait
   14002e1e4:	cdq    
   14002e1e5:	movabs al,ds:0x7da895f7997e875f
   14002e1ee:	cmp    eax,0x37889a62
   14002e1f3:	clc    
   14002e1f4:	ja     0x14002e223
   14002e1f6:	jrcxz  0x14002e18f
   14002e1f8:	pop    rdi
   14002e1f9:	xchg   ebx,eax
   14002e1fa:	in     eax,dx
   14002e1fb:	adc    DWORD PTR [rcx+0x29166812],eax
   14002e201:	mov    BYTE PTR [rip+0xffffffffe61fd60e],dh        # 0x12622b815
   14002e207:	(bad)  
   14002e208:	movabs eax,ds:0xa57858ba9996dedf
   14002e211:	test   ch,dh
   14002e213:	push   rdi
   14002e214:	movsxd esi,DWORD PTR [rdx+0x22]
   14002e217:	sbb    edi,edi
   14002e219:	ret    
   14002e21a:	sbb    DWORD PTR [rbx+0x1ac24696],0xffffffeb
   14002e221:	or     dh,BYTE PTR [rbx+0x2e3054cd]
   14002e227:	push   rbx
   14002e228:	in     al,0x48
   14002e22a:	(bad)  [rdi+0x6dbc3128]
   14002e230:	out    dx,eax
   14002e231:	bnd jmp 0x14002e28c
   14002e234:	(bad)  
   14002e235:	inc    esi
   14002e237:	xor    al,0x61
   14002e239:	in     eax,dx
   14002e23a:	sub    dh,bh
   14002e23c:	jae    0x14002e27a
   14002e23e:	jl     0x14002e22e
   14002e240:	fst    DWORD PTR [rdx+rcx*2]
   14002e243:	pop    rbp
   14002e244:	jrcxz  0x14002e1fd
   14002e246:	fs call 0x182133f60
   14002e24c:	loopne 0x14002e261
   14002e24e:	and    BYTE PTR ds:[rsi-0x15ba111e],dh
   14002e255:	stos   DWORD PTR es:[rdi],eax
   14002e256:	stos   BYTE PTR es:[rdi],al
   14002e257:	movabs ds:0xfacb4fd0db6c4f15,eax
   14002e260:	rex.X hlt 
   14002e262:	rex.X (bad) 
   14002e264:	mov    ch,0xbb
   14002e266:	push   0xffffffffffffffef
   14002e268:	sbb    eax,0x5654f3b
   14002e26d:	and    ebp,ecx
   14002e26f:	rex.B sahf 
   14002e271:	jns    0x14002e291
   14002e273:	fadd   st,st(7)
   14002e275:	test   QWORD PTR [r14-0x1bb4b896],r8
   14002e27c:	push   rax
   14002e27d:	(bad)
   14002e282:	(bad)  
   14002e283:	iret   
   14002e284:	rex.RX
   14002e285:	lea    ebx,es:[rbx-0x60]
   14002e289:	or     DWORD PTR [rax-0x38495c04],0xffffffc1
   14002e290:	ret    
   14002e291:	and    al,0x15
   14002e293:	jg     0x14002e227
   14002e295:	je     0x14002e262
   14002e297:	imul   ecx,DWORD PTR [rbx],0x8547848a
   14002e29d:	mov    dl,0x92
   14002e29f:	push   rsi
   14002e2a0:	add    BYTE PTR [rdi+0x489d095b],bh
   14002e2a6:	sbb    DWORD PTR [rbp+0x1462b174],ebp
   14002e2ac:	add    BYTE PTR [rsi],cl
   14002e2ae:	(bad)  
   14002e2af:	and    ebp,DWORD PTR [rdx]
   14002e2b1:	lea    eax,[rdx+0x58]
   14002e2b4:	(bad)  
   14002e2b5:	cmc    
   14002e2b6:	push   rbp
   14002e2b7:	or     al,0x3e
   14002e2b9:	hlt    
   14002e2ba:	lods   eax,DWORD PTR ds:[rsi]
   14002e2bb:	sbb    eax,0x233f7061
   14002e2c0:	xchg   edx,eax
   14002e2c1:	lock jb 0x14002e2f7
   14002e2c4:	rex.B jle 0x14002e25a
   14002e2c7:	(bad)  
   14002e2c8:	icebp  
   14002e2c9:	in     al,dx
   14002e2ca:	pop    rdi
   14002e2cb:	(bad)  
   14002e2cc:	fstp   TBYTE PTR [rbx]
   14002e2ce:	and    ch,BYTE PTR [rcx+rbx*2+0x37]
   14002e2d2:	fidivr WORD PTR [rax+riz*2+0x74]
   14002e2d6:	out    dx,al
   14002e2d7:	retf   
   14002e2d8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e2d9:	repnz test DWORD PTR [rax+0x6e],eax
   14002e2dd:	xor    dh,BYTE PTR [rdi-0x32]
   14002e2e0:	test   BYTE PTR [rax+0x509ea607],al
   14002e2e6:	clc    
   14002e2e7:	sbb    DWORD PTR [rbp-0x28],edx
   14002e2ea:	out    dx,eax
   14002e2eb:	call   0x1a1dc7a25
   14002e2f0:	stos   BYTE PTR es:[rdi],al
   14002e2f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e2f2:	imul   ebp,DWORD PTR [rcx-0x3af3f93e],0x5a04abfc
   14002e2fc:	fmul   st(2),st
   14002e2fe:	or     eax,DWORD PTR [rax-0x61bb85d2]
   14002e304:	test   BYTE PTR [rax*2-0x2a98fa3d],dh
   14002e30b:	std    
   14002e30c:	leave  
   14002e30d:	sahf   
   14002e30e:	(bad)  
   14002e30f:	(bad)  
   14002e310:	rcr    ebx,cl
   14002e312:	jae    0x14002e2ef
   14002e314:	int    0x88
   14002e316:	push   rbp
   14002e317:	adc    BYTE PTR [rcx-0x26],bh
   14002e31a:	pop    rdi
   14002e31b:	addr32 rex
   14002e31d:	rex.XB
   14002e31e:	jecxz  0x14002e386
   14002e321:	xor    al,0xc4
   14002e323:	(bad)
   14002e326:	ds jno 0x14002e2c7
   14002e329:	clc    
   14002e32a:	sub    BYTE PTR [rip+0xfffffffff16dff20],bh        # 0x13170e250
   14002e330:	out    0x21,eax
   14002e332:	ds adc eax,0x8fb03d4a
   14002e338:	sub    ebx,DWORD PTR [rdi-0x5208191d]
   14002e33e:	sbb    ebx,0x68
   14002e341:	pop    rdx
   14002e342:	cmp    eax,0x8140f7e9
   14002e347:	xchg   esp,eax
   14002e348:	sbb    al,0x26
   14002e34a:	rex.WR div BYTE PTR [rcx+rbp*1]
   14002e34e:	imul   edx,DWORD PTR [rdi+rsi*8-0x8beeae0],0x2e7602d4
   14002e359:	imul   esi,esp,0xffffffbc
   14002e35c:	push   0x71d4a200
   14002e361:	and    al,0x8
   14002e363:	(bad)  
   14002e364:	push   0xfffffffffffffff4
   14002e366:	and    BYTE PTR [rbx],dh
   14002e368:	mov    bh,0xd4
   14002e36a:	mov    bh,0x43
   14002e36c:	scas   eax,DWORD PTR es:[rdi]
   14002e36d:	(bad)  
   14002e36e:	add    BYTE PTR [rax+0x2e],dl
   14002e371:	idiv   BYTE PTR [rcx]
   14002e373:	(bad)  
   14002e374:	rex.RX
   14002e375:	rex.RB and al,0x97
   14002e378:	je     0x14002e3c9
   14002e37a:	and    DWORD PTR [rax+rax*2],edx
   14002e37d:	mov    BYTE PTR [rbx-0x6a03e241],cl
   14002e383:	rex.WRB scas rax,QWORD PTR es:[rdi]
   14002e385:	xchg   ecx,eax
   14002e386:	mov    ch,0x96
   14002e388:	rcr    ebp,cl
   14002e38a:	hlt    
   14002e38b:	jo     0x14002e3d2
   14002e38d:	(bad)  
   14002e38e:	movabs al,ds:0xbd9785bfbc09ec66
   14002e397:	add    edx,eax
   14002e399:	ins    DWORD PTR es:[rdi],dx
   14002e39a:	lods   al,BYTE PTR ds:[rsi]
   14002e39b:	jg     0x14002e3a1
   14002e39d:	test   ebx,ecx
   14002e39f:	xor    DWORD PTR [rbx+0x4196eb27],esi
   14002e3a5:	cmp    ebp,edi
   14002e3a7:	push   rbp
   14002e3a8:	out    0x47,al
   14002e3aa:	and    eax,0xca0a9ada
   14002e3af:	stos   DWORD PTR es:[rdi],eax
   14002e3b0:	and    eax,0xf4285078
   14002e3b5:	sub    DWORD PTR [rbx+rdx*2],eax
   14002e3b8:	fiadd  DWORD PTR [rsi+0x6dfb0a2c]
   14002e3be:	mov    dh,0xe9
   14002e3c0:	(bad)  
   14002e3c1:	adc    al,0xdc
   14002e3c3:	push   0xffffffffd7486900
   14002e3c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e3c9:	ror    BYTE PTR [rsi],0x68
   14002e3cc:	out    dx,al
   14002e3cd:	lea    esp,[rcx+0x3ffea227]
   14002e3d3:	rex.WRXB mov WORD PTR [r13-0x1ff91779],gs
   14002e3da:	mov    WORD PTR [rbp+0x7af4d6b6],?
   14002e3e0:	jl     0x14002e400
   14002e3e2:	(bad)  
   14002e3e3:	stos   BYTE PTR es:[rdi],al
   14002e3e4:	in     al,dx
   14002e3e5:	pop    rdi
   14002e3e6:	(bad)  
   14002e3e7:	rcr    DWORD PTR [rcx+0x42ce78a3],cl
   14002e3ed:	sub    ch,BYTE PTR [rbx+0x40]
   14002e3f0:	xor    eax,0xb920fe9e
   14002e3f5:	test   ebx,esi
   14002e3f7:	fldcw  WORD PTR [rbx-0x7411c629]
   14002e3fd:	rex.WRX adc r15b,BYTE PTR [rbx]
   14002e400:	idiv   edx
   14002e402:	leave  
   14002e403:	sbb    eax,0x4b6d1856
   14002e408:	xor    DWORD PTR [rsi-0x5d],esp
   14002e40b:	es mov dl,0x97
   14002e40e:	jrcxz  0x14002e3fa
   14002e410:	je     0x14002e40c
   14002e412:	outs   dx,BYTE PTR ds:[rsi]
   14002e413:	cmp    dh,BYTE PTR [rdx]
   14002e415:	rex.XB pop r11
   14002e417:	(bad)  
   14002e419:	out    0x41,eax
   14002e41b:	push   0xffffffffca7820fb
   14002e420:	rex.WRX cmc 
   14002e422:	or     bh,bl
   14002e424:	xchg   edi,eax
   14002e425:	mov    bl,0xfe
   14002e427:	fsubr  DWORD PTR [rsi+rdx*2-0x6ad8bac0]
   14002e42e:	movabs rdx,0x20838d8755533a3a
   14002e438:	mov    bh,0xa9
   14002e43a:	imul   edi,esi,0x4b
   14002e43d:	xchg   ebp,eax
   14002e43e:	xchg   esi,eax
   14002e43f:	sar    BYTE PTR [rdi+riz*2-0x65a7aa58],1
   14002e446:	adc    eax,0xa92963a1
   14002e44b:	int3   
   14002e44c:	xor    ebx,ebx
   14002e44e:	loope  0x14002e3e9
   14002e450:	push   rsi
   14002e451:	rex.WX sub spl,BYTE PTR [rsi+0x3f3125f9]
   14002e458:	sbb    al,0x7e
   14002e45a:	hlt    
   14002e45b:	pop    rsi
   14002e45c:	jl     0x14002e48f
   14002e45e:	sub    DWORD PTR [rax-0x20717fe],edx
   14002e464:	jo     0x14002e495
   14002e466:	(bad)  
   14002e467:	add    al,0x5c
   14002e469:	adc    eax,0x2ce380bb
   14002e46e:	sub    BYTE PTR [rip+0xffffffff95c11548],al        # 0xd5c3f9bc
   14002e474:	and    ch,BYTE PTR [rbp-0x3a]
   14002e477:	in     al,0x3f
   14002e479:	adc    eax,ecx
   14002e47b:	rex.W fadd QWORD PTR [rsi-0x361138f1]
   14002e482:	stc    
   14002e483:	(bad)  
   14002e484:	nop    DWORD PTR [rcx+rax*2]
   14002e488:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e489:	jns    0x14002e4d2
   14002e48b:	rex (bad) 
   14002e48d:	outs   dx,BYTE PTR ds:[rsi]
   14002e48e:	mov    BYTE PTR [rbp-0x15],bl
   14002e491:	push   rcx
   14002e492:	pop    rdi
   14002e493:	xor    dl,cl
   14002e495:	rcr    BYTE PTR [rbx-0x433e702b],0xf2
   14002e49c:	fs xor eax,0x78344111
   14002e4a2:	jnp    0x14002e4c9
   14002e4a4:	(bad)  
   14002e4a5:	pushf  
   14002e4a6:	sub    ah,BYTE PTR [rax-0x5d]
   14002e4a9:	call   0x1ac1ec4a6
   14002e4ae:	movsxd ebx,DWORD PTR [rdi]
   14002e4b0:	ret    0x12b4
   14002e4b3:	(bad)  
   14002e4b4:	sahf   
   14002e4b5:	xor    ah,cl
   14002e4b7:	add    dl,cl
   14002e4b9:	rex.WRXB
   14002e4ba:	scas   ax,WORD PTR es:[rdi]
   14002e4bc:	adc    eax,0xe0cad181
   14002e4c1:	xchg   ebp,eax
   14002e4c2:	and    ebp,DWORD PTR [rbx-0x1f]
   14002e4c5:	xchg   edx,eax
   14002e4c6:	xor    esp,DWORD PTR ds:[rdx+0xb]
   14002e4ca:	and    al,0x3b
   14002e4cc:	and    bh,BYTE PTR [rcx-0x5df11142]
   14002e4d2:	mov    dl,0x85
   14002e4d4:	cdq    
   14002e4d5:	or     eax,0xc8ce6ba
   14002e4da:	jb     0x14002e4ba
   14002e4dc:	sub    bh,dh
   14002e4de:	movabs ds:0xb794fdd01278452d,al
   14002e4e7:	xchg   ebp,eax
   14002e4e8:	(bad)  
   14002e4e9:	or     BYTE PTR [rbp+0x64],bh
   14002e4ec:	lock cmc 
   14002e4ee:	int3   
   14002e4ef:	out    0x6f,eax
   14002e4f1:	movabs ds:0xfd27877d48fa5449,eax
   14002e4fa:	popf   
   14002e4fb:	ret    
   14002e4fc:	(bad)  
   14002e4fd:	lea    edi,[rsi]
   14002e4ff:	repz movsxd eax,DWORD PTR [r15+0xa]
   14002e504:	je     0x14002e505
   14002e506:	cs cdq 
   14002e508:	stos   DWORD PTR es:[rdi],eax
   14002e509:	outs   dx,BYTE PTR ds:[rsi]
   14002e50a:	outs   dx,DWORD PTR ds:[rsi]
   14002e50b:	cmp    dh,BYTE PTR [rdi]
   14002e50d:	std    
   14002e50e:	clc    
   14002e50f:	hlt    
   14002e510:	(bad)  
   14002e511:	fcom   QWORD PTR [rdx]
   14002e513:	test   al,0xf8
   14002e515:	fucomp st(3)
   14002e517:	movabs eax,ds:0xdb6e6b0d991be14c
   14002e520:	adc    BYTE PTR [rbp+0x7b],dl
   14002e523:	(bad)  
   14002e524:	(bad)  
   14002e525:	sub    al,0x67
   14002e527:	ins    DWORD PTR es:[rdi],dx
   14002e528:	cmp    edx,esp
   14002e52a:	gs (bad) 
   14002e52c:	add    al,0xe8
   14002e52e:	rcr    ah,1
   14002e530:	(bad)  
   14002e531:	or     eax,0xffa3f129
   14002e536:	add    ah,cl
   14002e538:	xchg   edx,eax
   14002e539:	(bad)  
   14002e53b:	mov    ch,0xb
   14002e53d:	in     eax,dx
   14002e53e:	punpckhwd mm7,mm3
   14002e541:	lahf   
   14002e542:	jnp    0x14002e5aa
   14002e544:	pushf  
   14002e545:	jge    0x14002e522
   14002e547:	(bad)  
   14002e548:	or     ecx,edi
   14002e54a:	xchg   ecx,eax
   14002e54b:	movabs al,ds:0xbb132f88d9155ea3
   14002e554:	and    al,0xad
   14002e556:	pop    rbx
   14002e557:	push   rcx
   14002e558:	mov    edi,0xeb7b9479
   14002e55d:	(bad)  
   14002e55e:	cmp    esi,DWORD PTR [rsi-0x4d]
   14002e561:	cmp    DWORD PTR cs:[rdi],esi
   14002e564:	jns    0x14002e5bf
   14002e566:	adc    esp,ecx
   14002e568:	xchg   edi,eax
   14002e569:	loop   0x14002e591
   14002e56b:	sub    BYTE PTR [rip+0xffffffffa7f42e31],0xad        # 0xe7f713a3
   14002e572:	rex.X push 0xffffffffc66a2b3b
   14002e578:	int3   
   14002e579:	rex.WR jne 0x14002e58e
   14002e57c:	sbb    al,0xf1
   14002e57e:	cs js  0x14002e5b8
   14002e581:	rex.X adc bpl,BYTE PTR [rdx-0x19]
   14002e585:	push   rcx
   14002e586:	xchg   edx,eax
   14002e587:	mov    bh,0xe6
   14002e589:	mov    ebx,0x635006a1
   14002e58e:	sti    
   14002e58f:	rex.WXB sbb BYTE PTR [r8],dl
   14002e592:	imul   ebx,DWORD PTR [rdx],0xfffffffa
   14002e595:	in     eax,dx
   14002e596:	retf   0xd811
   14002e599:	mov    ebp,0xc3c93d25
   14002e59e:	loope  0x14002e582
   14002e5a0:	pop    rcx
   14002e5a1:	(bad)  
   14002e5a2:	rex.X
   14002e5a3:	xchg   BYTE PTR [rbx],r10b
   14002e5a6:	adc    cl,BYTE PTR [rdx]
   14002e5a8:	outs   dx,BYTE PTR ds:[rsi]
   14002e5a9:	in     al,dx
   14002e5aa:	or     al,0xd9
   14002e5ac:	sub    ch,dl
   14002e5ae:	stos   DWORD PTR es:[rdi],eax
   14002e5af:	(bad)  
   14002e5b0:	rex.WRX
   14002e5b1:	scas   eax,DWORD PTR es:[edi]
   14002e5b3:	fs pop rdi
   14002e5b5:	test   al,0x86
   14002e5b7:	fimul  DWORD PTR [rax-0x1414017]
   14002e5bd:	ret    
   14002e5be:	in     al,0x64
   14002e5c0:	push   rdi
   14002e5c1:	cmp    BYTE PTR [rbp+rbx*4-0xf083f7a],0xf8
   14002e5c9:	jnp    0x14002e643
   14002e5cb:	(bad)  
   14002e5cc:	rex.WRB (bad) 
   14002e5ce:	add    esp,DWORD PTR [rax+0x46]
   14002e5d1:	cmp    ebp,0xffffffd1
   14002e5d4:	mov    al,0x1f
   14002e5d6:	cmp    dh,dh
   14002e5d8:	add    al,0xae
   14002e5da:	rex.RB ja 0x14002e5a9
   14002e5dd:	cld    
   14002e5de:	xlat   BYTE PTR ss:[rbx]
   14002e5e0:	xor    ebp,DWORD PTR [rbx+0x42]
   14002e5e3:	xor    DWORD PTR [rcx-0x55],0x1e
   14002e5e7:	lock xchg DWORD PTR [rcx-0x80],eax
   14002e5eb:	mov    al,0x5f
   14002e5ed:	pop    rsi
   14002e5ee:	add    BYTE PTR [rsi+rdi*4],bh
   14002e5f1:	push   rdi
   14002e5f2:	movabs al,ds:0x464299bde8ae2477
   14002e5fb:	push   rbp
   14002e5fc:	(bad)  
   14002e5fd:	cs pop rax
   14002e5ff:	mov    edi,0x4e58f48f
   14002e604:	movabs ds:0xc2f474ef38f2ddfd,al
   14002e60d:	mov    ebp,0xf9c38789
   14002e612:	push   bx
   14002e614:	je     0x14002e5a4
   14002e616:	mov    bl,0xc8
   14002e618:	push   rbp
   14002e619:	bnd jne 0x14002e5d0
   14002e61c:	mov    ecx,0x6146fcd9
   14002e621:	es jmp 0x14002e69e
   14002e624:	test   bh,bl
   14002e626:	sbb    eax,0x6a0e798b
   14002e62b:	test   dl,ah
   14002e62d:	xchg   ebp,eax
   14002e62e:	pop    rdi
   14002e62f:	xchg   ecx,eax
   14002e630:	mov    ds,WORD PTR [rcx+0x6e]
   14002e633:	rex.RX jo 0x14002e68d
   14002e636:	mov    ah,0x20
   14002e638:	xchg   ecx,eax
   14002e639:	push   rbp
   14002e63a:	(bad)  
   14002e63b:	mov    WORD PTR [rsi+rbx*8+0x2],cs
   14002e63f:	leave  
   14002e640:	loope  0x14002e5ee
   14002e642:	or     edi,DWORD PTR [rcx-0x447dfa30]
   14002e648:	rex.W (bad) 
   14002e64a:	test   al,0x11
   14002e64c:	sahf   
   14002e64d:	test   eax,0x19b67574
   14002e652:	jg     0x14002e60b
   14002e654:	or     esp,ebx
   14002e656:	test   eax,0x2d09a1e0
   14002e65b:	xor    ax,WORD PTR [rsi+0x32]
   14002e65f:	(bad)
   14002e663:	call   0x149f3a4f4
   14002e668:	and    eax,0x104a99a0
   14002e66d:	(bad)  
   14002e66e:	outs   dx,BYTE PTR ds:[rsi]
   14002e66f:	sbb    eax,0x1ab93d1d
   14002e674:	fbld   TBYTE PTR [rbp+riz*4-0x790df0f5]
   14002e67b:	movabs eax,ds:0xdcb7da832868f169
   14002e684:	inc    BYTE PTR [rsi]
   14002e686:	cmp    DWORD PTR [rdi-0x65],edx
   14002e689:	(bad)  
   14002e68a:	loop   0x14002e62d
   14002e68c:	push   rdx
   14002e68d:	jg     0x14002e65c
   14002e68f:	rex.WRXB add QWORD PTR [r14+0x11],r11
   14002e693:	push   rax
   14002e694:	cli    
   14002e695:	add    DWORD PTR [rsi],0xffffffa7
   14002e698:	(bad)  
   14002e699:	mov    ch,0x2
   14002e69b:	movabs al,ds:0x9af88c270de6d027
   14002e6a4:	xchg   BYTE PTR [r15],dil
   14002e6a7:	ja     0x14002e6af
   14002e6a9:	rex.WR (bad) 
   14002e6ab:	ret    
   14002e6ac:	mov    ch,0x6
   14002e6ae:	test   al,0x61
   14002e6b0:	sub    BYTE PTR [rdx+0x17],bh
   14002e6b3:	lock loopne 0x14002e63c
   14002e6b6:	cmc    
   14002e6b7:	shr    BYTE PTR [rdx+0x62006058],0x7d
   14002e6be:	fdiv   QWORD PTR [rax]
   14002e6c0:	xlat   BYTE PTR ds:[rbx]
   14002e6c1:	sahf   
   14002e6c2:	out    0x11,al
   14002e6c4:	movsxd ebp,edx
   14002e6c6:	cmp    BYTE PTR [rbx],ah
   14002e6c8:	xchg   esp,eax
   14002e6c9:	ffree  st(2)
   14002e6cb:	push   rbx
   14002e6cc:	xor    al,0x16
   14002e6ce:	ret    0x56c2
   14002e6d1:	out    dx,al
   14002e6d2:	retf   
   14002e6d3:	mov    ebx,0x90bcb6de
   14002e6d8:	movabs eax,ds:0x9ce591d76ebfc7d
   14002e6e1:	in     al,0x5
   14002e6e3:	outs   dx,DWORD PTR ds:[rsi]
   14002e6e4:	mov    BYTE PTR [rcx],al
   14002e6e6:	jl     0x14002e733
   14002e6e8:	cmp    eax,0x2439720a
   14002e6ed:	jl     0x14002e681
   14002e6ef:	jl     0x14002e750
   14002e6f1:	jb     0x14002e6d6
   14002e6f3:	xchg   BYTE PTR [rcx-0x4b8db263],bh
   14002e6f9:	pop    rbx
   14002e6fa:	rcr    DWORD PTR [rdx],0xfc
   14002e6fd:	mov    eax,0x5578d39e
   14002e702:	push   rsp
   14002e703:	in     eax,dx
   14002e704:	mov    ch,0xa5
   14002e706:	cld    
   14002e707:	or     bl,dl
   14002e709:	jl     0x14002e748
   14002e70b:	fadd   st,st(4)
   14002e70d:	shrd   DWORD PTR [rbp+0x5e],ecx,cl
   14002e711:	out    dx,eax
   14002e712:	push   rax
   14002e713:	(bad)  
   14002e714:	clc    
   14002e715:	out    0x61,al
   14002e717:	mov    cl,0xd9
   14002e719:	adc    al,0x85
   14002e71b:	movabs ds:0x6fd5c7e76c51133c,al
   14002e724:	(bad)  
   14002e725:	rex.WRX loope 0x14002e77e
   14002e728:	(bad)  
   14002e729:	mov    edi,0xc837362a
   14002e72e:	(bad)  
   14002e72f:	fnsave [rdx+rsi*1]
   14002e732:	(bad)  
   14002e733:	xlat   BYTE PTR ds:[rbx]
   14002e734:	adc    al,BYTE PTR [rdx-0x5716d9d]
   14002e73a:	(bad)  
   14002e73b:	addr32 loopne 0x14002e73e
   14002e73e:	(bad)  
   14002e73f:	rex (bad) 
   14002e741:	(bad)  
   14002e742:	cmp    DWORD PTR [rdx],edi
   14002e744:	iret   
   14002e745:	cmc    
   14002e746:	cli    
   14002e747:	shl    DWORD PTR [rdi],cl
   14002e749:	ja     0x14002e70d
   14002e74b:	stos   DWORD PTR es:[rdi],eax
   14002e74c:	sbb    ebp,DWORD PTR [rip+0x679e5ac5]        # 0x1a7a14217
   14002e752:	mov    al,0x5c
   14002e754:	rex.X (bad) 
   14002e756:	movabs ds:0xbc9bbed38227404f,eax
   14002e75f:	cdq    
   14002e760:	popf   
   14002e761:	mov    ss,WORD PTR [rcx]
   14002e763:	(bad)  
   14002e764:	adc    eax,0x7ebf0f73
   14002e769:	sbb    al,0x2d
   14002e76b:	(bad)  
   14002e76c:	jnp    0x14002e732
   14002e76e:	add    bh,al
   14002e770:	imul   ebx,DWORD PTR [rbx],0xffffff8c
   14002e773:	mov    bh,0x45
   14002e775:	nop
   14002e776:	movabs eax,ds:0x366eb4b26eb1be21
   14002e77f:	push   0x2f
   14002e781:	stos   DWORD PTR es:[rdi],eax
   14002e782:	rex.W push rdi
   14002e784:	jns    0x14002e7f4
   14002e786:	xchg   esp,eax
   14002e787:	mov    esp,0xc6a376d2
   14002e78c:	enter  0x49c2,0x65
   14002e790:	out    dx,al
   14002e791:	clc    
   14002e792:	rcpps  xmm7,XMMWORD PTR [rbp-0x22]
   14002e796:	lea    eax,[rsi+0x1d]
   14002e799:	or     dh,BYTE PTR [rbx-0x2b]
   14002e79c:	(bad)  
   14002e79d:	rex.WRB ror BYTE PTR [r11+rbx*8-0x45],1
   14002e7a2:	cmp    DWORD PTR [rcx],ebp
   14002e7a4:	push   rax
   14002e7a5:	rex.RX mov edx,0x9526e8a9
   14002e7ab:	lods   al,BYTE PTR ds:[rsi]
   14002e7ac:	add    al,0xe3
   14002e7ae:	pop    rsi
   14002e7af:	mov    esi,0xa1fad5f0
   14002e7b4:	(bad)  
   14002e7b5:	push   rcx
   14002e7b6:	sub    eax,0xef8ce26a
   14002e7bb:	movsxd esp,DWORD PTR [rdx]
   14002e7bd:	out    dx,al
   14002e7be:	xchg   BYTE PTR [rdx-0x3f763d48],bl
   14002e7c4:	imul   BYTE PTR [rsi]
   14002e7c6:	and    al,0x43
   14002e7c8:	stos   BYTE PTR es:[rdi],al
   14002e7c9:	add    ebx,DWORD PTR [rsi]
   14002e7cb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e7cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e7cd:	shl    dl,1
   14002e7cf:	pushf  
   14002e7d0:	mov    edx,0x4d83c061
   14002e7d5:	push   0xffffffffffffffe9
   14002e7d7:	fwait
   14002e7d8:	push   rax
   14002e7d9:	adc    eax,0x5bd68fe5
   14002e7de:	fs mov edx,0x2826a2f9
   14002e7e4:	loope  0x14002e820
   14002e7e6:	cmp    ah,BYTE PTR [rdi+0x4ba99586]
   14002e7ec:	jmp    0x113f23d53
   14002e7f1:	out    dx,eax
   14002e7f2:	(bad)  
   14002e7f3:	(bad)  
   14002e7f4:	(bad)  
   14002e7f6:	push   rdx
   14002e7f7:	imul   DWORD PTR [rcx+0x6f]
   14002e7fa:	add    al,0x3f
   14002e7fc:	pop    rcx
   14002e7fd:	or     bh,dl
   14002e7ff:	ja     0x14002e816
   14002e801:	test   eax,0x860180e4
   14002e806:	mov    al,0x87
   14002e808:	lods   eax,DWORD PTR ds:[rsi]
   14002e809:	out    0x9,al
   14002e80b:	fwait
   14002e80c:	xchg   ebx,eax
   14002e80d:	in     eax,0x3e
   14002e80f:	cmp    ebx,DWORD PTR [rdx-0x3]
   14002e812:	nop
   14002e813:	jmp    0xde37bfaf
   14002e818:	fnstenv [rdi-0x74aed310]
   14002e81e:	sub    eax,DWORD PTR [rdx]
   14002e820:	cmp    ch,BYTE PTR [rbp+rdx*8+0x7da67d96]
   14002e827:	add    esi,edx
   14002e829:	ds iret 
   14002e82b:	shr    DWORD PTR [rax],1
   14002e82d:	sub    eax,0x25cf7c7d
   14002e832:	lahf   
   14002e833:	(bad)  
   14002e834:	fwait
   14002e835:	mov    eax,0xb472adf2
   14002e83a:	(bad)  
   14002e83b:	pop    rdx
   14002e83c:	rex.WR cmc 
   14002e83e:	mov    BYTE PTR [rdx+0x71],bl
   14002e841:	lods   al,BYTE PTR ds:[rsi]
   14002e842:	sub    eax,esp
   14002e844:	out    0xa5,al
   14002e846:	sbb    eax,esp
   14002e848:	std    
   14002e849:	lods   al,BYTE PTR ds:[rsi]
   14002e84a:	mov    al,0x47
   14002e84c:	fwait
   14002e84d:	cli    
   14002e84e:	xchg   ebx,eax
   14002e84f:	in     eax,dx
   14002e850:	(bad)  
   14002e851:	(bad)  
   14002e852:	shr    eax,cl
   14002e854:	int3   
   14002e855:	push   rdi
   14002e856:	cmp    ebp,DWORD PTR [rax]
   14002e858:	sub    DWORD PTR [rsi-0x2b],esp
   14002e85b:	clc    
   14002e85c:	sub    BYTE PTR [rsi],ch
   14002e85e:	adc    edi,DWORD PTR [rcx-0x6f]
   14002e861:	add    DWORD PTR [rdi+0x78],ebx
   14002e864:	push   rbp
   14002e865:	(bad)  
   14002e866:	jne    0x14002e855
   14002e868:	rex.R (bad) 
   14002e86a:	xchg   esi,eax
   14002e86b:	test   DWORD PTR [rsi+rbx*2+0x6dd4e3d3],0x6dba1505
   14002e876:	hlt    
   14002e877:	mov    BYTE PTR [rip+0xffffffffbd03a161],ah        # 0xfd0689de
   14002e87d:	lock fs add eax,0xc3eb9e15
   14002e884:	movabs ds:0x2a97271aec3c9057,al
   14002e88d:	(bad)  
   14002e88e:	cmp    ch,BYTE PTR [rcx+0x1b3f6d9b]
   14002e894:	cmc    
   14002e895:	and    DWORD PTR [rbx+0x1e],esp
   14002e898:	sti    
   14002e899:	pushfw 
   14002e89b:	cmc    
   14002e89c:	sbb    ebx,esi
   14002e89e:	fsub   QWORD PTR [rsi]
   14002e8a0:	sub    cl,bl
   14002e8a2:	xor    esi,DWORD PTR [rbp-0xb]
   14002e8a5:	std    
   14002e8a6:	push   rbp
   14002e8a7:	mov    cl,0x82
   14002e8a9:	xor    al,0x56
   14002e8ab:	add    edi,DWORD PTR [rbx+0x118aba3c]
   14002e8b1:	ja     0x14002e904
   14002e8b3:	sub    al,bh
   14002e8b5:	(bad)  [rdx]
   14002e8b7:	ret    0x5167
   14002e8ba:	int3   
   14002e8bb:	stos   DWORD PTR es:[rdi],eax
   14002e8bc:	pop    rdi
   14002e8bd:	xchg   edx,eax
   14002e8be:	lods   eax,DWORD PTR ds:[rsi]
   14002e8bf:	int3   
   14002e8c0:	push   rcx
   14002e8c1:	(bad)  
   14002e8c2:	call   0x170df7714
   14002e8c7:	cmp    BYTE PTR [rdx+0x58],ah
   14002e8ca:	popf   
   14002e8cb:	(bad)  
   14002e8cc:	xchg   ecx,eax
   14002e8cd:	stc    
   14002e8ce:	and    BYTE PTR [rbx-0x15856f3e],dl
   14002e8d4:	(bad)  
   14002e8d5:	jnp    0x14002e915
   14002e8d7:	sti    
   14002e8d8:	fs (bad) 
   14002e8da:	and    DWORD PTR [rcx+0x32],edx
   14002e8dd:	mov    esi,0xe37e774f
   14002e8e2:	mov    dh,0xa8
   14002e8e4:	rex.RX cmp eax,0x5369c329
   14002e8ea:	fimul  WORD PTR [rax-0x80]
   14002e8ed:	out    0x13,al
   14002e8ef:	adc    BYTE PTR fs:[rax],cl
   14002e8f2:	scas   al,BYTE PTR es:[rdi]
   14002e8f3:	movabs ds:0x69852dfddd6db224,al
   14002e8fc:	and    WORD PTR [rdi],ax
   14002e8ff:	or     DWORD PTR [rdx],ecx
   14002e901:	rex.RX (bad) 
   14002e903:	mov    bl,0xdd
   14002e905:	rol    BYTE PTR [rbp+0x64],0xcf
   14002e909:	fisubr WORD PTR [rax+rbx*2-0x52]
   14002e90d:	enter  0x1c20,0xdd
   14002e911:	idiv   DWORD PTR [rsi+0x588d405b]
   14002e917:	sbb    edi,DWORD PTR [rdi+0x1]
   14002e91a:	ror    ah,cl
   14002e91c:	mov    ebx,0x7e6bb4e3
   14002e921:	push   0xffffffffffffffa2
   14002e923:	fld    QWORD PTR [rbp-0x1]
   14002e926:	pop    rcx
   14002e927:	cmp    al,BYTE PTR [rdx+rcx*1+0x35]
   14002e92b:	ds (bad) 
   14002e92d:	int    0xb4
   14002e92f:	mov    esp,0x72eacea8
   14002e934:	mov    ebx,0xaefa6484
   14002e939:	adc    ah,BYTE PTR [rsi-0x73]
   14002e93c:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14002e93e:	cmp    al,0xbf
   14002e940:	movsxd esp,esp
   14002e942:	fwait
   14002e943:	rcr    BYTE PTR [rsi+0x1b542f5d],cl
   14002e949:	ja     0x14002e90d
   14002e94b:	scas   al,BYTE PTR es:[rdi]
   14002e94c:	jo     0x14002e9b1
   14002e94e:	rex.WRX test BYTE PTR [rbp+0x57740e0d],0x13
   14002e956:	pop    rbx
   14002e957:	out    0x71,eax
   14002e959:	(bad)  
   14002e95a:	jb     0x14002e954
   14002e95c:	pop    rbp
   14002e95d:	jge    0x14002e9b2
   14002e95f:	scas   eax,DWORD PTR es:[rdi]
   14002e960:	or     bl,cl
   14002e962:	rex
   14002e963:	rex int3 
   14002e965:	loop   0x14002e91b
   14002e967:	rex.WRX push 0x46
   14002e96a:	shl    BYTE PTR [rsp+rax*4],cl
   14002e96d:	scas   eax,DWORD PTR es:[rdi]
   14002e96e:	adc    eax,0xb0042801
   14002e973:	loope  0x14002e992
   14002e975:	cmp    bl,BYTE PTR [rax-0x47604b6b]
   14002e97b:	(bad)  
   14002e97c:	rex.W movabs al,ds:0xab826f3f3b82ce6e
   14002e986:	and    BYTE PTR [rip+0x11a1d4b],dh        # 0x1411d06d7
   14002e98c:	clc    
   14002e98d:	(bad)  
   14002e98e:	jb     0x14002e9b7
   14002e990:	mov    cl,0x60
   14002e992:	adc    eax,0x933fdc61
   14002e997:	out    0x2b,eax
   14002e999:	jns    0x14002e9d5
   14002e99b:	mov    ebx,0x344525bd
   14002e9a0:	loope  0x14002e9db
   14002e9a2:	mov    BYTE PTR [rax+0x51ce794b],ah
   14002e9a8:	mov    bh,0xc9
   14002e9aa:	xor    ch,BYTE PTR [rdi]
   14002e9ac:	leave  
   14002e9ad:	mov    edx,0xc87ea01f
   14002e9b2:	sbb    al,0xe0
   14002e9b4:	not    cl
   14002e9b6:	(bad)  
   14002e9b7:	mov    esp,0xcf0111c3
   14002e9bc:	(bad)  
   14002e9bd:	stos   BYTE PTR es:[rdi],al
   14002e9be:	call   0xd08a3364
   14002e9c3:	sbb    bl,BYTE PTR [rdx-0x342bb043]
   14002e9c9:	(bad)  
   14002e9cb:	sar    BYTE PTR [rax],1
   14002e9cd:	fimul  DWORD PTR [rdx]
   14002e9cf:	(bad)  
   14002e9d0:	sub    al,bl
   14002e9d2:	cmp    DWORD PTR [rbx],eax
   14002e9d4:	addr32 ss xchg ecx,eax
   14002e9d7:	(bad)  
   14002e9d8:	jl     0x14002ea0b
   14002e9da:	stc    
   14002e9db:	lea    ecx,[rdi+0x2b]
   14002e9de:	mov    cl,0xe0
   14002e9e0:	mov    bh,0x59
   14002e9e2:	sahf   
   14002e9e3:	idiv   DWORD PTR [rdx]
   14002e9e5:	mov    ebx,0x19ff43f5
   14002e9ea:	(bad)  
   14002e9eb:	repnz pushf 
   14002e9ed:	rex.RB fldenv [r15]
   14002e9f0:	sub    al,0x22
   14002e9f2:	xchg   edi,eax
   14002e9f3:	mov    edi,0x15e6fc2a
   14002e9f8:	jno    0x14002e9f6
   14002e9fa:	xchg   ecx,eax
   14002e9fb:	(bad)  
   14002e9fd:	adc    eax,0x93619b94
   14002ea02:	in     eax,0xfa
   14002ea04:	jmp    0x14002e9a2
   14002ea06:	mov    dh,0xce
   14002ea08:	pop    rcx
   14002ea09:	fs test al,0xc2
   14002ea0c:	shr    DWORD PTR [rax+0x75e12ba],1
   14002ea12:	shl    DWORD PTR [rsi-0x1cfa95f4],0x65
   14002ea19:	push   rax
   14002ea1a:	rcl    BYTE PTR [rax],cl
   14002ea1c:	rex.X movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ea1e:	add    ecx,ebx
   14002ea20:	(bad)  
   14002ea21:	outs   dx,BYTE PTR ds:[rsi]
   14002ea22:	in     al,dx
   14002ea23:	loopne 0x14002ea60
   14002ea25:	fistp  DWORD PTR [rax-0x675f41ea]
   14002ea2b:	rex.WR
   14002ea2c:	fs jmp 0xd5351caa
   14002ea32:	(bad)  
   14002ea33:	lahf   
   14002ea34:	fist   WORD PTR [rdx+0x342be0d3]
   14002ea3a:	movabs al,ds:0xa74418971f21ed3
   14002ea43:	sbb    ecx,DWORD PTR [rsp+rsi*1+0x71204ba3]
   14002ea4a:	mov    esi,0x7632d8c5
   14002ea4f:	ret    
   14002ea50:	lea    ebx,[rdi+0x2f2edf35]
   14002ea56:	cdq    
   14002ea57:	fwait
   14002ea58:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14002ea5a:	or     esp,esi
   14002ea5c:	sbb    eax,0x540fe3f1
   14002ea61:	fimul  DWORD PTR [rbp+riz*8-0x6f]
   14002ea65:	fcomp  st(2)
   14002ea67:	(bad)  
   14002ea68:	iret   
   14002ea69:	jns    0x14002eacd
   14002ea6b:	(bad)  
   14002ea6c:	outs   dx,DWORD PTR ds:[rsi]
   14002ea6d:	jle    0x14002eaad
   14002ea6f:	int    0x66
   14002ea71:	mov    cl,0x18
   14002ea73:	(bad)  
   14002ea74:	add    eax,0xc5fd2c1d
   14002ea79:	ror    BYTE PTR [rdi-0x4dd667c],cl
   14002ea7f:	not    BYTE PTR [rdi-0xd]
   14002ea82:	and    esi,ebp
   14002ea84:	and    esi,DWORD PTR [rsi+0x32]
   14002ea87:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ea88:	xor    DWORD PTR [rip+0xffffffffcd0293a8],esi        # 0x10d057e36
   14002ea8e:	int3   
   14002ea8f:	push   rsi
   14002ea90:	(bad)  
   14002ea92:	lock lods al,BYTE PTR ds:[rsi]
   14002ea94:	mov    ch,0xeb
   14002ea96:	jne    0x14002eaf2
   14002ea98:	xchg   edi,eax
   14002ea99:	ss (bad) 
   14002ea9b:	outs   dx,BYTE PTR ds:[rsi]
   14002ea9c:	int3   
   14002ea9d:	jae    0x14002ea71
   14002ea9f:	mov    BYTE PTR [rdx-0x2f21699e],dl
   14002eaa5:	movabs r9,0xc656144c50901b81
   14002eaaf:	jno    0x14002ea6e
   14002eab1:	mov    esi,0x7a140ae6
   14002eab7:	xor    al,BYTE PTR [rsi]
   14002eab9:	shl    cl,1
   14002eabb:	rex.RB (bad) 
   14002eabd:	jnp    0x14002eab1
   14002eabf:	ret    
   14002eac0:	std    
   14002eac1:	push   rbx
   14002eac2:	stos   BYTE PTR es:[rdi],al
   14002eac3:	leave  
   14002eac4:	add    BYTE PTR [rdi],cl
   14002eac6:	test   al,0x62
   14002eac8:	loop   0x14002ea89
   14002eaca:	and    eax,0xbdd2f6bb
   14002eacf:	xor    eax,0x71126905
   14002ead4:	and    al,BYTE PTR [rdx]
   14002ead6:	add    al,0xb2
   14002ead8:	jl     0x14002eaa9
   14002eada:	retf   
   14002eadb:	mov    dh,0x2b
   14002eadd:	pushf  
   14002eade:	jbe    0x14002eaad
   14002eae0:	sar    BYTE PTR [rsi],0x11
   14002eae3:	push   rbx
   14002eae4:	shl    ebx,cl
   14002eae6:	rex (bad) 
   14002eae8:	(bad)  
   14002eae9:	mov    ebp,0xadf038ab
   14002eaee:	rex.RXB and eax,0xba38209c
   14002eaf4:	jbe    0x14002eac4
   14002eaf6:	rex.RX test ebp,0x6077afa1
   14002eafd:	(bad)  
   14002eafe:	jne    0x14002eb20
   14002eb00:	rex.WRX dec bl
   14002eb03:	test   eax,ebx
   14002eb05:	(bad)  
   14002eb06:	call   0xeafc9b95
   14002eb0b:	jp     0x14002eb8b
   14002eb0d:	stos   BYTE PTR es:[rdi],al
   14002eb0e:	stc    
   14002eb0f:	rex.WR pop rsp
   14002eb11:	ret    0x1948
   14002eb14:	mov    WORD PTR [rdx+0x6ae402fb],cs
   14002eb1a:	ret    
   14002eb1b:	add    ecx,edi
   14002eb1d:	loope  0x14002eb0a
   14002eb1f:	(bad)  
   14002eb20:	imul   edi,eax,0xdea090d4
   14002eb26:	pop    rsp
   14002eb27:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002eb28:	sub    eax,0x9f3f0925
   14002eb2d:	out    0x8,al
   14002eb2f:	ret    0x6132
   14002eb32:	rex.WRX mov dil,0x5b
   14002eb35:	loop   0x14002ebae
   14002eb37:	(bad)  
   14002eb38:	jrcxz  0x14002eb19
   14002eb3a:	(bad)  
   14002eb3b:	push   rdi
   14002eb3c:	out    0x72,al
   14002eb3e:	ret    
   14002eb3f:	cmp    cl,BYTE PTR [rdx]
   14002eb41:	add    BYTE PTR [rax],al
   14002eb43:	add    BYTE PTR [rax],al
   14002eb45:	add    BYTE PTR [rax],al
   14002eb47:	add    BYTE PTR [rax+rax*1+0x49],al
   14002eb4b:	add    BYTE PTR [rbp+0x0],cl
   14002eb4e:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14002eb52:	add    BYTE PTR [esi],ch
   14002eb55:	add    BYTE PTR [rax+rax*1+0x78],dh
   14002eb59:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002eb5d:	add    BYTE PTR [rax],al
   14002eb5f:	add    BYTE PTR [rdx],ah
   14002eb61:	add    eax,0x11993
   14002eb66:	add    BYTE PTR [rax],al
   14002eb68:	mov    al,0x59
   14002eb6a:	add    eax,DWORD PTR [rax]
	...
   14002eb74:	add    eax,DWORD PTR [rax]
   14002eb76:	add    BYTE PTR [rax],al
   14002eb78:	mov    eax,0x38000359
	...
   14002eb85:	add    BYTE PTR [rax],al
   14002eb87:	add    BYTE PTR [rdx],ah
   14002eb89:	add    eax,0x11993
   14002eb8e:	add    BYTE PTR [rax],al
   14002eb90:	lock pop rcx
   14002eb92:	add    eax,DWORD PTR [rax]
	...
   14002eb9c:	add    eax,DWORD PTR [rax]
   14002eb9e:	add    BYTE PTR [rax],al
   14002eba0:	clc    
   14002eba1:	pop    rcx
   14002eba2:	add    eax,DWORD PTR [rax]
   14002eba4:	sub    BYTE PTR [rax],al
	...
   14002ebae:	add    BYTE PTR [rax],al
   14002ebb0:	and    al,BYTE PTR [rip+0x11993]        # 0x140040549
   14002ebb6:	add    BYTE PTR [rax],al
   14002ebb8:	sbb    BYTE PTR [rcx+0x3],bl
	...
   14002ebc3:	add    BYTE PTR [rcx],al
   14002ebc5:	add    BYTE PTR [rax],al
   14002ebc7:	add    BYTE PTR [rax],ah
   14002ebc9:	pop    rcx
   14002ebca:	add    eax,DWORD PTR [rax]
   14002ebcc:	and    BYTE PTR [rax],al
	...
   14002ebd6:	add    BYTE PTR [rax],al
   14002ebd8:	and    al,BYTE PTR [rip+0x21993]        # 0x140050571
   14002ebde:	add    BYTE PTR [rax],al
   14002ebe0:	push   0x359
   14002ebe5:	add    BYTE PTR [rax],al
   14002ebe7:	add    BYTE PTR [rax],al
   14002ebe9:	add    BYTE PTR [rax],al
   14002ebeb:	add    BYTE PTR [rax+rax*1],al
   14002ebee:	add    BYTE PTR [rax],al
   14002ebf0:	cmp    BYTE PTR [rcx+0x3],bl
   14002ebf3:	add    BYTE PTR [rax],ah
	...
   14002ebfd:	add    BYTE PTR [rax],al
   14002ebff:	add    BYTE PTR [rdx],ah
   14002ec01:	add    eax,0x21993
   14002ec06:	add    BYTE PTR [rax],al
   14002ec08:	push   0x359
   14002ec0d:	add    BYTE PTR [rax],al
   14002ec0f:	add    BYTE PTR [rax],al
   14002ec11:	add    BYTE PTR [rax],al
   14002ec13:	add    BYTE PTR [rbx],al
   14002ec15:	add    BYTE PTR [rax],al
   14002ec17:	add    BYTE PTR [rax+0x59],bh
   14002ec1a:	add    eax,DWORD PTR [rax]
   14002ec1c:	and    BYTE PTR [rax],al
	...
   14002ec26:	add    BYTE PTR [rax],al
   14002ec28:	and    al,BYTE PTR [rip+0x11993]        # 0x1400405c1
   14002ec2e:	add    BYTE PTR [rax],al
   14002ec30:	sub    BYTE PTR [rdx+0x3],bl
	...
   14002ec3b:	add    BYTE PTR [rcx],al
   14002ec3d:	add    BYTE PTR [rax],al
   14002ec3f:	add    BYTE PTR [rax],dh
   14002ec41:	pop    rdx
   14002ec42:	add    eax,DWORD PTR [rax]
   14002ec44:	and    BYTE PTR [rax],al
	...
   14002ec4e:	add    BYTE PTR [rax],al
   14002ec50:	and    al,BYTE PTR [rip+0x11993]        # 0x1400405e9
   14002ec56:	add    BYTE PTR [rax],al
   14002ec58:	sub    BYTE PTR [rdx+0x3],bl
	...
   14002ec63:	add    BYTE PTR [rcx],al
   14002ec65:	add    BYTE PTR [rax],al
   14002ec67:	add    BYTE PTR [rax+0x5a],cl
   14002ec6a:	add    eax,DWORD PTR [rax]
   14002ec6c:	and    BYTE PTR [rax],al
	...
   14002ec76:	add    BYTE PTR [rax],al
   14002ec78:	add    BYTE PTR [rdi],ah
   14002ec7a:	add    eax,DWORD PTR [rax+0x1]
   14002ec7d:	add    BYTE PTR [rax],al
   14002ec7f:	add    BYTE PTR [rsi+0x1400210],bh
   14002ec85:	add    BYTE PTR [rax],al
   14002ec87:	add    BYTE PTR [rax+0x76],dh
   14002ec8a:	add    DWORD PTR [rax+0x1],eax
   14002ec8d:	add    BYTE PTR [rax],al
   14002ec8f:	add    BYTE PTR [rax+0x1400054],ah
   14002ec95:	add    BYTE PTR [rax],al
   14002ec97:	add    BYTE PTR [rax],dh
   14002ec99:	jbe    0x14002ec9c
   14002ec9b:	rex add DWORD PTR [rax],eax
   14002ec9e:	add    BYTE PTR [rax],al
   14002eca0:	movabs al,ds:0xb200000001400054
   14002eca9:	adc    BYTE PTR [rdx],al
   14002ecab:	rex add DWORD PTR [rax],eax
   14002ecae:	add    BYTE PTR [rax],al
   14002ecb0:	(bad)  
   14002ecb1:	adc    BYTE PTR [rdx],al
   14002ecb3:	rex add DWORD PTR [rax],eax
   14002ecb6:	add    BYTE PTR [rax],al
   14002ecb8:	mov    eax,0x1400210
   14002ecbd:	add    BYTE PTR [rax],al
   14002ecbf:	add    BYTE PTR [rdx],ah
   14002ecc1:	add    eax,0x21993
   14002ecc6:	add    BYTE PTR [rax],al
   14002ecc8:	and    BYTE PTR [rdi+0x3],bl
	...
   14002ecd3:	add    BYTE PTR [rbx],al
   14002ecd5:	add    BYTE PTR [rax],al
   14002ecd7:	add    BYTE PTR [rax+0x5a],ah
   14002ecda:	add    eax,DWORD PTR [rax]
   14002ecdc:	and    BYTE PTR [rax],al
	...
   14002ece6:	add    BYTE PTR [rax],al
   14002ece8:	and    al,BYTE PTR [rip+0x21993]        # 0x140050681
   14002ecee:	add    BYTE PTR [rax],al
   14002ecf0:	mov    WORD PTR [rdx+0x3],ds
	...
   14002ecfb:	add    BYTE PTR [rax+rax*1],al
   14002ecfe:	add    BYTE PTR [rax],al
   14002ed00:	pushf  
   14002ed01:	pop    rdx
   14002ed02:	add    eax,DWORD PTR [rax]
   14002ed04:	and    BYTE PTR [rax],al
	...
   14002ed0e:	add    BYTE PTR [rax],al
   14002ed10:	and    al,BYTE PTR [rip+0x21993]        # 0x1400506a9
   14002ed16:	add    BYTE PTR [rax],al
   14002ed18:	int3   
   14002ed19:	pop    rdx
   14002ed1a:	add    eax,DWORD PTR [rax]
   14002ed1c:	add    DWORD PTR [rax],eax
   14002ed1e:	add    BYTE PTR [rax],al
   14002ed20:	fcomp  QWORD PTR [rdx+0x3]
   14002ed23:	add    BYTE PTR [rsi],al
   14002ed25:	add    BYTE PTR [rax],al
   14002ed27:	add    BYTE PTR [rbx+rbx*2],al
   14002ed2a:	add    eax,DWORD PTR [rax]
   14002ed2c:	add    BYTE PTR [rax],al
	...
   14002ed37:	add    BYTE PTR [rdx],ah
   14002ed39:	add    eax,0x11993
   14002ed3e:	add    BYTE PTR [rax],al
   14002ed40:	adc    BYTE PTR [rax+0x3],ah
	...
   14002ed4b:	add    BYTE PTR [rcx],al
   14002ed4d:	add    BYTE PTR [rax],al
   14002ed4f:	add    BYTE PTR [rbx+rbx*2+0x3],dl
   14002ed53:	add    BYTE PTR [rax],ah
	...
   14002ed5d:	add    BYTE PTR [rax],al
   14002ed5f:	add    BYTE PTR [rdx],ah
   14002ed61:	add    eax,0x11993
   14002ed66:	add    BYTE PTR [rax],al
   14002ed68:	adc    BYTE PTR [rax+0x3],ah
	...
   14002ed73:	add    BYTE PTR [rcx],al
   14002ed75:	add    BYTE PTR [rax],al
   14002ed77:	add    BYTE PTR [rbx+rbx*2+0x3],ch
   14002ed7b:	add    BYTE PTR [rax],ah
	...
   14002ed85:	add    BYTE PTR [rax],al
   14002ed87:	add    BYTE PTR [rdx],ah
   14002ed89:	add    eax,0x11993
   14002ed8e:	add    BYTE PTR [rax],al
   14002ed90:	pushf  
   14002ed91:	pop    rbx
   14002ed92:	add    eax,DWORD PTR [rax]
	...
   14002ed9c:	add    DWORD PTR [rax],eax
   14002ed9e:	add    BYTE PTR [rax],al
   14002eda0:	test   BYTE PTR [rbx+0x3],bl
   14002eda3:	add    BYTE PTR [rax],ch
	...
   14002edad:	add    BYTE PTR [rax],al
   14002edaf:	add    BYTE PTR [rdx],ah
   14002edb1:	add    eax,0x11993
   14002edb6:	add    BYTE PTR [rax],al
   14002edb8:	pushf  
   14002edb9:	pop    rbx
   14002edba:	add    eax,DWORD PTR [rax]
	...
   14002edc4:	add    eax,DWORD PTR [rax]
   14002edc6:	add    BYTE PTR [rax],al
   14002edc8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002edc9:	pop    rbx
   14002edca:	add    eax,DWORD PTR [rax]
   14002edcc:	and    BYTE PTR [rax],al
	...
   14002edd6:	add    BYTE PTR [rax],al
   14002edd8:	and    al,BYTE PTR [rip+0x91993]        # 0x1400c0771
   14002edde:	add    BYTE PTR [rax],al
   14002ede0:	int3   
   14002ede1:	pop    rbx
   14002ede2:	add    eax,DWORD PTR [rax]
	...
   14002edec:	or     eax,DWORD PTR [rax]
   14002edee:	add    BYTE PTR [rax],al
   14002edf0:	adc    al,0x5c
   14002edf2:	add    eax,DWORD PTR [rax]
   14002edf4:	and    BYTE PTR [rax],al
	...
   14002edfe:	add    BYTE PTR [rax],al
   14002ee00:	and    al,BYTE PTR [rip+0x11993]        # 0x140040799
   14002ee06:	add    BYTE PTR [rax],al
   14002ee08:	enter  0x35c,0x0
	...
   14002ee14:	add    eax,DWORD PTR [rax]
   14002ee16:	add    BYTE PTR [rax],al
   14002ee18:	rcr    BYTE PTR [rbx+rax*1+0x0],1
   14002ee1c:	xor    BYTE PTR [rax],al
	...
   14002ee26:	add    BYTE PTR [rax],al
   14002ee28:	and    al,BYTE PTR [rip+0x11993]        # 0x1400407c1
   14002ee2e:	add    BYTE PTR [rax],al
   14002ee30:	add    BYTE PTR [rax+0x3],bl
	...
   14002ee3b:	add    BYTE PTR [rbx],al
   14002ee3d:	add    BYTE PTR [rax],al
   14002ee3f:	add    BYTE PTR [rax+0x3000035d],al
	...
   14002ee4d:	add    BYTE PTR [rax],al
   14002ee4f:	add    BYTE PTR [rcx],dh
   14002ee51:	add    BYTE PTR [rax],al
   14002ee53:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002ee57:	add    BYTE PTR [rdx+0x0],dh
   14002ee5a:	jne    0x14002ee5c
   14002ee5c:	outs   dx,BYTE PTR ds:[rsi]
   14002ee5d:	add    BYTE PTR [rdi+0x0],bl
   14002ee60:	outs   dx,DWORD PTR ds:[rsi]
   14002ee61:	add    BYTE PTR [rax+0x0],dh
   14002ee64:	je     0x14002ee66
   14002ee66:	imul   eax,DWORD PTR [rax],0x6e006f
   14002ee6c:	add    BYTE PTR [rax],al
   14002ee6e:	add    BYTE PTR [rax],al
   14002ee70:	imul   eax,DWORD PTR [rax],0x73006e
   14002ee76:	je     0x14002ee78
   14002ee78:	(bad)  
   14002ee79:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002ee7d:	add    BYTE PTR [rdi+0x0],bl
   14002ee80:	jne    0x14002ee82
   14002ee82:	imul   eax,DWORD PTR [rax],0x70005f
   14002ee88:	(bad)  
   14002ee89:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002ee8d:	add    BYTE PTR [rax],al
   14002ee8f:	add    BYTE PTR [rdi],ch
   14002ee91:	add    BYTE PTR [rdi],ch
   14002ee93:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002ee97:	add    BYTE PTR [rbp+0x0],ch
   14002ee9a:	pop    rdi
   14002ee9b:	add    BYTE PTR [rax+0x0],dh
   14002ee9e:	(bad)  
   14002ee9f:	add    BYTE PTR [rdx+0x0],dh
   14002eea2:	(bad)  
   14002eea3:	add    BYTE PTR [rbp+0x0],ch
   14002eea6:	jae    0x14002eea8
   14002eea8:	(bad)  
   14002eea9:	add    BYTE PTR [rdx+0x0],dh
   14002eeac:	jne    0x14002eeae
   14002eeae:	outs   dx,BYTE PTR ds:[rsi]
   14002eeaf:	add    BYTE PTR [rbx+0x0],ah
   14002eeb2:	outs   dx,DWORD PTR ds:[rsi]
   14002eeb3:	add    BYTE PTR [rbp+0x0],ch
   14002eeb6:	ins    DWORD PTR es:[rdi],dx
   14002eeb7:	add    BYTE PTR [rcx+0x0],ah
   14002eeba:	outs   dx,BYTE PTR ds:[rsi]
   14002eebb:	add    BYTE PTR [rax+rax*1+0x73],ah
   14002eebf:	add    BYTE PTR [rdi],ch
   14002eec1:	add    BYTE PTR [rdx+0x0],dh
   14002eec4:	jne    0x14002eec6
   14002eec6:	outs   dx,BYTE PTR ds:[rsi]
   14002eec7:	add    BYTE PTR [rbx+0x0],ah
   14002eeca:	outs   dx,DWORD PTR ds:[rsi]
   14002eecb:	add    BYTE PTR [rbp+0x0],ch
   14002eece:	ins    DWORD PTR es:[rdi],dx
   14002eecf:	add    BYTE PTR [rcx+0x0],ah
   14002eed2:	outs   dx,BYTE PTR ds:[rsi]
   14002eed3:	add    BYTE PTR [rax+rax*1+0x0],ah
   14002eed7:	add    BYTE PTR [rsi+0x0],ch
   14002eeda:	(bad)  
   14002eedb:	add    BYTE PTR [rbp+0x0],ch
   14002eede:	add    BYTE PTR gs:[rax],al
   14002eee1:	add    BYTE PTR [rax],al
   14002eee3:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002eee7:	add    BYTE PTR [rax+0x0],dh
   14002eeea:	(bad)  
   14002eeeb:	add    BYTE PTR [rdx+0x0],dh
   14002eeee:	(bad)  
   14002eeef:	add    BYTE PTR [rbp+0x0],ch
   14002eef2:	add    BYTE PTR [rax],al
   14002eef4:	xor    DWORD PTR [rax],eax
   14002eef6:	add    BYTE PTR [rax],al
   14002eef8:	push   rbx
   14002eef9:	add    BYTE PTR [rbp+0x0],dh
   14002eefc:	(bad)  
   14002eefd:	add    BYTE PTR [rdx+0x0],cl
   14002ef00:	outs   dx,DWORD PTR ds:[rsi]
   14002ef01:	add    BYTE PTR [rdx+0x0],ah
   14002ef04:	jae    0x14002ef06
   14002ef06:	add    BYTE PTR [rax],al
   14002ef08:	and    eax,0x6400
   14002ef0d:	add    BYTE PTR [rax],al
   14002ef0f:	add    BYTE PTR [rbx+0x0],dl
   14002ef12:	jne    0x14002ef14
   14002ef14:	(bad)  
   14002ef15:	add    BYTE PTR [rdx+0x0],cl
   14002ef18:	outs   dx,DWORD PTR ds:[rsi]
   14002ef19:	add    BYTE PTR [rdx+0x0],ah
   14002ef1c:	jae    0x14002ef1e
   14002ef1e:	add    BYTE PTR [rax],al
   14002ef20:	and    eax,0x6400
   14002ef25:	add    BYTE PTR [rax],al
   14002ef27:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002ef2b:	add    BYTE PTR [rdi+0x0],ah
   14002ef2e:	outs   dx,DWORD PTR ds:[rsi]
   14002ef2f:	add    BYTE PTR [rsi+0x0],ch
   14002ef32:	add    BYTE PTR [rax],al
   14002ef34:	xor    BYTE PTR [rax],al
   14002ef36:	add    BYTE PTR [rax],al
   14002ef38:	(bad)  
   14002ef39:	add    BYTE PTR [rax+0x0],dh
   14002ef3c:	jo     0x14002ef3e
   14002ef3e:	pop    rdi
   14002ef3f:	add    BYTE PTR [rax+rax*1+0x61],ch
   14002ef43:	add    BYTE PTR [rbp+0x0],dh
   14002ef46:	outs   dx,BYTE PTR ds:[rsi]
   14002ef47:	add    BYTE PTR [rbx+0x0],ah
   14002ef4a:	push   0x0
   14002ef4f:	add    BYTE PTR [rcx+0x0],ah
   14002ef52:	jo     0x14002ef54
   14002ef54:	jo     0x14002ef56
   14002ef56:	pop    rdi
   14002ef57:	add    BYTE PTR [rbp+0x0],ah
   14002ef5a:	js     0x14002ef5c
   14002ef5c:	imul   eax,DWORD PTR [rax],0x74
   14002ef62:	add    BYTE PTR [rax],al
   14002ef64:	xor    DWORD PTR [rax],eax
   14002ef66:	add    BYTE PTR [rax],al
   14002ef68:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14002ef6c:	je     0x14002ef6e
   14002ef6e:	push   rdx
   14002ef6f:	add    BYTE PTR [rbp+0x0],ah
   14002ef72:	jno    0x14002ef74
   14002ef74:	jne    0x14002ef76
   14002ef76:	imul   eax,DWORD PTR [rax],0x650072
   14002ef7c:	add    BYTE PTR fs:[rbx+0x0],dl
   14002ef80:	imul   eax,DWORD PTR [rax],0x65007a
   14002ef86:	rex.WRB add BYTE PTR [r11+0x0],r14b
   14002ef8a:	add    BYTE PTR [edx],bh
   14002ef8d:	add    BYTE PTR [rax],al
   14002ef8f:	add    BYTE PTR [rsi+0x0],ch
   14002ef92:	outs   dx,DWORD PTR ds:[rsi]
   14002ef93:	add    BYTE PTR [rdi+0x0],dh
   14002ef96:	add    BYTE PTR [rax],al
   14002ef98:	ins    BYTE PTR es:[rdi],dx
   14002ef99:	add    BYTE PTR [rdi+0x0],ch
   14002ef9c:	add    BYTE PTR [edi+0x0],ch
   14002efa0:	outs   dx,BYTE PTR ds:[rsi]
   14002efa1:	add    BYTE PTR [rax],al
   14002efa3:	add    BYTE PTR [rax],dh
   14002efa5:	add    BYTE PTR [rax],al
   14002efa7:	add    BYTE PTR [rcx+0x0],ah
   14002efaa:	jo     0x14002efac
   14002efac:	jo     0x14002efae
   14002efae:	pop    rdi
   14002efaf:	add    BYTE PTR [rax+rax*1+0x61],ch
   14002efb3:	add    BYTE PTR [rbp+0x0],dh
   14002efb6:	outs   dx,BYTE PTR ds:[rsi]
   14002efb7:	add    BYTE PTR [rbx+0x0],ah
   14002efba:	push   0x0
   14002efbf:	add    BYTE PTR [rbx+0x0],dl
   14002efc2:	imul   eax,DWORD PTR [rax],0x69
   14002efc5:	add    BYTE PTR [rax+0x0],dh
   14002efc8:	jo     0x14002efca
   14002efca:	imul   eax,DWORD PTR [rax],0x67006e
   14002efd0:	and    BYTE PTR [rax],al
   14002efd2:	imul   eax,DWORD PTR [rax],0x73006e
   14002efd8:	je     0x14002efda
   14002efda:	(bad)  
   14002efdb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002efdf:	add    BYTE PTR [rax],ah
   14002efe1:	add    BYTE PTR [rdx+0x0],ah
   14002efe4:	add    BYTE PTR gs:[rbx+0x0],ah
   14002efe8:	(bad)  
   14002efe9:	add    BYTE PTR [rbp+0x0],dh
   14002efec:	jae    0x14002efee
   14002efee:	add    BYTE PTR gs:[rax],ah
   14002eff1:	add    BYTE PTR [rax+rax*1+0x49],al
   14002eff5:	add    BYTE PTR [rbp+0x0],cl
   14002eff8:	and    BYTE PTR [rax],al
   14002effa:	ins    BYTE PTR es:[rdi],dx
   14002effb:	add    BYTE PTR [rcx+0x0],ah
   14002effe:	jne    0x14002f000
   14002f000:	outs   dx,BYTE PTR ds:[rsi]
   14002f001:	add    BYTE PTR [rbx+0x0],ah
   14002f004:	push   0x74002000
   14002f009:	add    BYTE PTR [rdx+0x0],dh
   14002f00c:	imul   eax,DWORD PTR [rax],0x670067
   14002f012:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f016:	and    BYTE PTR [rax],al
   14002f018:	imul   eax,DWORD PTR [rax],0x200073
   14002f01e:	and    eax,0x20006400
   14002f023:	add    BYTE PTR [rcx+0x0],ah
   14002f026:	outs   dx,BYTE PTR ds:[rsi]
   14002f027:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002f02b:	add    BYTE PTR [rdx+0x0],dh
   14002f02e:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f032:	jne    0x14002f034
   14002f034:	ins    DWORD PTR es:[rdi],dx
   14002f035:	add    BYTE PTR [rbp+0x0],ah
   14002f038:	and    BYTE PTR [rax],al
   14002f03a:	je     0x14002f03c
   14002f03c:	jb     0x14002f03e
   14002f03e:	imul   eax,DWORD PTR [rax],0x670067
   14002f044:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f048:	and    BYTE PTR [rax],al
   14002f04a:	imul   eax,DWORD PTR [rax],0x200073
   14002f050:	and    eax,0x6400
   14002f055:	add    BYTE PTR [rax],al
   14002f057:	add    BYTE PTR [rdi],ch
   14002f059:	add    BYTE PTR [rdi],ch
   14002f05b:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002f05f:	add    BYTE PTR [rbp+0x0],ch
   14002f062:	pop    rdi
   14002f063:	add    BYTE PTR [rax+0x0],dh
   14002f066:	(bad)  
   14002f067:	add    BYTE PTR [rdx+0x0],dh
   14002f06a:	(bad)  
   14002f06b:	add    BYTE PTR [rbp+0x0],ch
   14002f06e:	jae    0x14002f070
   14002f070:	(bad)  
   14002f071:	add    BYTE PTR [rdx+0x0],dh
   14002f074:	jne    0x14002f076
   14002f076:	outs   dx,BYTE PTR ds:[rsi]
   14002f077:	add    BYTE PTR [rbx+0x0],ah
   14002f07a:	outs   dx,DWORD PTR ds:[rsi]
   14002f07b:	add    BYTE PTR [rbp+0x0],ch
   14002f07e:	ins    DWORD PTR es:[rdi],dx
   14002f07f:	add    BYTE PTR [rcx+0x0],ah
   14002f082:	outs   dx,BYTE PTR ds:[rsi]
   14002f083:	add    BYTE PTR [rax+rax*1+0x73],ah
	...
   14002f08f:	add    BYTE PTR [rcx+0x0],cl
   14002f092:	outs   dx,BYTE PTR ds:[rsi]
   14002f093:	add    BYTE PTR [rbx+0x0],dh
   14002f096:	je     0x14002f098
   14002f098:	(bad)  
   14002f099:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f09d:	add    BYTE PTR [rcx+0x0],ch
   14002f0a0:	outs   dx,BYTE PTR ds:[rsi]
   14002f0a1:	add    BYTE PTR [rdi+0x0],ah
   14002f0a4:	and    BYTE PTR [rax],al
   14002f0a6:	push   0x0
   14002f0a8:	outs   dx,DWORD PTR ds:[rsi]
   14002f0a9:	add    BYTE PTR [rdx+0x0],ah
   14002f0ac:	and    BYTE PTR [rax],al
   14002f0ae:	(bad)  
   14002f0af:	add    BYTE PTR [rbp+0x0],ah
   14002f0b2:	movsxd eax,DWORD PTR [rax]
   14002f0b4:	(bad)  
   14002f0b5:	add    BYTE PTR [rbp+0x0],dh
   14002f0b8:	jae    0x14002f0ba
   14002f0ba:	add    BYTE PTR gs:[rax],ah
   14002f0bd:	add    BYTE PTR [rcx+0x0],ch
   14002f0c0:	je     0x14002f0c2
   14002f0c2:	and    BYTE PTR [rax],al
   14002f0c4:	imul   eax,DWORD PTR [rax],0x200073
   14002f0ca:	jne    0x14002f0cc
   14002f0cc:	jae    0x14002f0ce
   14002f0ce:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f0d2:	and    BYTE PTR [rax],al
   14002f0d4:	add    BYTE PTR gs:[rax+0x0],bh
   14002f0d8:	jo     0x14002f0da
   14002f0da:	ins    BYTE PTR es:[rdi],dx
   14002f0db:	add    BYTE PTR [rcx+0x0],ch
   14002f0de:	movsxd eax,DWORD PTR [rax]
   14002f0e0:	imul   eax,DWORD PTR [rax],0x200074
   14002f0e6:	sub    BYTE PTR [rax],al
   14002f0e8:	add    BYTE PTR [rcx+0x0],r9b
   14002f0ec:	rex.WRB add BYTE PTR [r8],r12b
   14002f0ef:	add    BYTE PTR [rax+rax*1+0x61],ch
   14002f0f3:	add    BYTE PTR [rbp+0x0],dh
   14002f0f6:	outs   dx,BYTE PTR ds:[rsi]
   14002f0f7:	add    BYTE PTR [rbx+0x0],ah
   14002f0fa:	push   0x74002000
   14002f0ff:	add    BYTE PTR [rdx+0x0],dh
   14002f102:	imul   eax,DWORD PTR [rax],0x670067
   14002f108:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f10c:	and    BYTE PTR [rax],al
   14002f10e:	and    eax,0x20006400
   14002f113:	add    BYTE PTR [rcx+0x0],ah
   14002f116:	outs   dx,BYTE PTR ds:[rsi]
   14002f117:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002f11b:	add    BYTE PTR [rdx+0x0],dh
   14002f11e:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f122:	jne    0x14002f124
   14002f124:	ins    DWORD PTR es:[rdi],dx
   14002f125:	add    BYTE PTR [rbp+0x0],ah
   14002f128:	and    BYTE PTR [rax],al
   14002f12a:	je     0x14002f12c
   14002f12c:	jb     0x14002f12e
   14002f12e:	imul   eax,DWORD PTR [rax],0x670067
   14002f134:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f138:	and    BYTE PTR [rax],al
   14002f13a:	and    eax,0x29006400
	...
   14002f147:	add    BYTE PTR [rcx+0x0],ch
   14002f14a:	outs   dx,BYTE PTR ds:[rsi]
   14002f14b:	add    BYTE PTR [rcx+0x0],ch
   14002f14e:	je     0x14002f150
   14002f150:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f156:	pop    rdi
   14002f157:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002f15b:	add    BYTE PTR [rcx+0x0],ch
   14002f15e:	add    BYTE PTR [edi+0x0],ah
   14002f162:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f166:	add    BYTE PTR [rax],al
   14002f168:	jb     0x14002f16a
   14002f16a:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f16e:	jne    0x14002f170
   14002f170:	ins    DWORD PTR es:[rdi],dx
   14002f171:	add    BYTE PTR [rax+0x0],dh
   14002f174:	je     0x14002f176
   14002f176:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f17c:	pop    rdi
   14002f17d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002f181:	add    BYTE PTR [rcx+0x0],ch
   14002f184:	add    BYTE PTR [edi+0x0],ah
   14002f188:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f18c:	add    BYTE PTR [rax],al
   14002f18e:	add    BYTE PTR [rax],al
   14002f190:	push   rbx
   14002f191:	add    BYTE PTR [rbx+0x0],ch
   14002f194:	imul   eax,DWORD PTR [rax],0x700070
   14002f19a:	imul   eax,DWORD PTR [rax],0x67006e
   14002f1a0:	and    BYTE PTR [rax],al
   14002f1a2:	imul   eax,DWORD PTR [rax],0x73006e
   14002f1a8:	je     0x14002f1aa
   14002f1aa:	(bad)  
   14002f1ab:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f1af:	add    BYTE PTR [rcx+0x0],ah
   14002f1b2:	je     0x14002f1b4
   14002f1b4:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f1ba:	and    BYTE PTR [rax],al
   14002f1bc:	(bad)  
   14002f1bd:	add    BYTE PTR [rbp+0x0],ah
   14002f1c0:	movsxd eax,DWORD PTR [rax]
   14002f1c2:	(bad)  
   14002f1c3:	add    BYTE PTR [rbp+0x0],dh
   14002f1c6:	jae    0x14002f1c8
   14002f1c8:	add    BYTE PTR gs:[rax],ah
   14002f1cb:	add    BYTE PTR [rax+rax*1+0x49],al
   14002f1cf:	add    BYTE PTR [rbp+0x0],cl
   14002f1d2:	and    BYTE PTR [rax],al
   14002f1d4:	push   0x0
   14002f1d6:	outs   dx,DWORD PTR ds:[rsi]
   14002f1d7:	add    BYTE PTR [rdx+0x0],ah
   14002f1da:	and    BYTE PTR [rax],al
   14002f1dc:	and    eax,0x20007300
   14002f1e1:	add    BYTE PTR [rcx+0x0],ch
   14002f1e4:	jae    0x14002f1e6
   14002f1e6:	and    BYTE PTR [rax],al
   14002f1e8:	(bad)  
   14002f1e9:	add    BYTE PTR [rax+rax*1+0x72],ch
   14002f1ed:	add    BYTE PTR [rbp+0x0],ah
   14002f1f0:	(bad)  
   14002f1f1:	add    BYTE PTR [rax+rax*1+0x79],ah
   14002f1f5:	add    BYTE PTR [rax],ah
   14002f1f7:	add    BYTE PTR [rcx+0x0],ch
   14002f1fa:	outs   dx,BYTE PTR ds:[rsi]
   14002f1fb:	add    BYTE PTR [rbx+0x0],dh
   14002f1fe:	je     0x14002f200
   14002f200:	(bad)  
   14002f201:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f205:	add    BYTE PTR [rbp+0x0],ah
   14002f208:	add    BYTE PTR fs:[rax],ah
   14002f20b:	add    BYTE PTR [rax],al
   14002f20d:	add    BYTE PTR [rax],al
   14002f20f:	add    BYTE PTR [rcx+0x0],cl
   14002f212:	outs   dx,BYTE PTR ds:[rsi]
   14002f213:	add    BYTE PTR [rbx+0x0],dh
   14002f216:	je     0x14002f218
   14002f218:	(bad)  
   14002f219:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f21d:	add    BYTE PTR [rcx+0x0],ch
   14002f220:	outs   dx,BYTE PTR ds:[rsi]
   14002f221:	add    BYTE PTR [rdi+0x0],ah
   14002f224:	and    BYTE PTR [rax],al
   14002f226:	push   0x0
   14002f228:	outs   dx,DWORD PTR ds:[rsi]
   14002f229:	add    BYTE PTR [rdx+0x0],ah
   14002f22c:	and    BYTE PTR [rax],al
   14002f22e:	(bad)  
   14002f22f:	add    BYTE PTR [rbp+0x0],ah
   14002f232:	movsxd eax,DWORD PTR [rax]
   14002f234:	(bad)  
   14002f235:	add    BYTE PTR [rbp+0x0],dh
   14002f238:	jae    0x14002f23a
   14002f23a:	add    BYTE PTR gs:[rax],ah
   14002f23d:	add    BYTE PTR [rax+rax*1+0x49],al
   14002f241:	add    BYTE PTR [rbp+0x0],cl
   14002f244:	and    BYTE PTR [rax],al
   14002f246:	ins    BYTE PTR es:[rdi],dx
   14002f247:	add    BYTE PTR [rcx+0x0],ah
   14002f24a:	jne    0x14002f24c
   14002f24c:	outs   dx,BYTE PTR ds:[rsi]
   14002f24d:	add    BYTE PTR [rbx+0x0],ah
   14002f250:	push   0x74002000
   14002f255:	add    BYTE PTR [rdx+0x0],dh
   14002f258:	imul   eax,DWORD PTR [rax],0x670067
   14002f25e:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f262:	and    BYTE PTR [rax],al
   14002f264:	and    eax,0x20006400
   14002f269:	add    BYTE PTR [rax],ah
   14002f26b:	add    BYTE PTR [rbp+0x0],ch
   14002f26e:	(bad)  
   14002f26f:	add    BYTE PTR [rax+rax*1+0x63],dh
   14002f273:	add    BYTE PTR [rax+0x0],ch
   14002f276:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f27a:	and    BYTE PTR [rax],al
   14002f27c:	je     0x14002f27e
   14002f27e:	push   0x20006500
   14002f283:	add    BYTE PTR [rdx+0x0],dh
   14002f286:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f28a:	jne    0x14002f28c
   14002f28c:	ins    DWORD PTR es:[rdi],dx
   14002f28d:	add    BYTE PTR [rbp+0x0],ah
   14002f290:	and    BYTE PTR [rax],al
   14002f292:	je     0x14002f294
   14002f294:	jb     0x14002f296
   14002f296:	imul   eax,DWORD PTR [rax],0x670067
   14002f29c:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f2a0:	and    BYTE PTR [rax],al
   14002f2a2:	and    eax,0x6400
   14002f2a7:	add    BYTE PTR [rdx+0x0],dh
   14002f2aa:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f2ae:	jne    0x14002f2b0
   14002f2b0:	ins    DWORD PTR es:[rdi],dx
   14002f2b1:	add    BYTE PTR [rax+0x0],dh
   14002f2b4:	je     0x14002f2b6
   14002f2b6:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f2bc:	pop    rdi
   14002f2bd:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002f2c1:	add    BYTE PTR [rcx+0x0],ch
   14002f2c4:	add    BYTE PTR [edi+0x0],ah
   14002f2c8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f2cc:	add    BYTE PTR [rax],al
   14002f2ce:	add    BYTE PTR [rax],al
   14002f2d0:	push   rbx
   14002f2d1:	add    BYTE PTR [rbx+0x0],ch
   14002f2d4:	imul   eax,DWORD PTR [rax],0x700070
   14002f2da:	imul   eax,DWORD PTR [rax],0x67006e
   14002f2e0:	and    BYTE PTR [rax],al
   14002f2e2:	imul   eax,DWORD PTR [rax],0x73006e
   14002f2e8:	je     0x14002f2ea
   14002f2ea:	(bad)  
   14002f2eb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f2ef:	add    BYTE PTR [rax],ah
   14002f2f1:	add    BYTE PTR [rdx+0x0],ah
   14002f2f4:	add    BYTE PTR gs:[rbx+0x0],ah
   14002f2f8:	(bad)  
   14002f2f9:	add    BYTE PTR [rbp+0x0],dh
   14002f2fc:	jae    0x14002f2fe
   14002f2fe:	add    BYTE PTR gs:[rax],ah
   14002f301:	add    BYTE PTR [rax+rax*1+0x49],al
   14002f305:	add    BYTE PTR [rbp+0x0],cl
   14002f308:	and    BYTE PTR [rax],al
   14002f30a:	ins    BYTE PTR es:[rdi],dx
   14002f30b:	add    BYTE PTR [rcx+0x0],ah
   14002f30e:	jne    0x14002f310
   14002f310:	outs   dx,BYTE PTR ds:[rsi]
   14002f311:	add    BYTE PTR [rbx+0x0],ah
   14002f314:	push   0x74002000
   14002f319:	add    BYTE PTR [rdx+0x0],dh
   14002f31c:	imul   eax,DWORD PTR [rax],0x670067
   14002f322:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f326:	and    BYTE PTR [rax],al
   14002f328:	imul   eax,DWORD PTR [rax],0x200073
   14002f32e:	and    eax,0x20006400
   14002f333:	add    BYTE PTR [rcx+0x0],ah
   14002f336:	outs   dx,BYTE PTR ds:[rsi]
   14002f337:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002f33b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002f33f:	add    BYTE PTR [rbp+0x0],ah
   14002f342:	and    BYTE PTR [rax],al
   14002f344:	je     0x14002f346
   14002f346:	jb     0x14002f348
   14002f348:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f34e:	and    BYTE PTR [rax],al
   14002f350:	jb     0x14002f352
   14002f352:	add    BYTE PTR gs:[rbp+0x0],ch
   14002f356:	imul   eax,DWORD PTR [rax],0x64006e
   14002f35c:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f360:	and    BYTE PTR [rax],al
   14002f362:	add    BYTE PTR fs:[rbp+0x0],ah
   14002f366:	ins    BYTE PTR es:[rdi],dx
   14002f367:	add    BYTE PTR [rcx+0x0],ah
   14002f36a:	jns    0x14002f36c
   14002f36c:	and    BYTE PTR [rax],al
   14002f36e:	imul   eax,DWORD PTR [rax],0x200073
   14002f374:	outs   dx,BYTE PTR ds:[rsi]
   14002f375:	add    BYTE PTR [rdi+0x0],ch
   14002f378:	je     0x14002f37a
   14002f37a:	and    BYTE PTR [rax],al
   14002f37c:	outs   dx,DWORD PTR ds:[rsi]
   14002f37d:	add    BYTE PTR [rsi+0x0],dh
   14002f380:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f384:	add    BYTE PTR [rax],al
   14002f386:	add    BYTE PTR [rax],al
   14002f388:	imul   eax,DWORD PTR [rax],0x69006e
   14002f38e:	je     0x14002f390
   14002f390:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f396:	pop    rdi
   14002f397:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002f39b:	add    BYTE PTR [rcx+0x0],ch
   14002f39e:	add    BYTE PTR [edi+0x0],ah
   14002f3a2:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14002f3ae:	add    BYTE PTR [rax],al
   14002f3b0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002f3b4:	imul   eax,DWORD PTR [rax],0x69
   14002f3b7:	add    BYTE PTR [rsi+0x0],ch
   14002f3ba:	add    BYTE PTR [eax],ah
   14002f3bd:	add    BYTE PTR [rbx+0x0],ah
   14002f3c0:	jne    0x14002f3c2
   14002f3c2:	jb     0x14002f3c4
   14002f3c4:	jb     0x14002f3c6
   14002f3c6:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f3ca:	je     0x14002f3cc
   14002f3cc:	and    BYTE PTR [rax],al
   14002f3ce:	imul   eax,DWORD PTR [rax],0x73006e
   14002f3d4:	je     0x14002f3d6
   14002f3d6:	(bad)  
   14002f3d7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f3db:	add    BYTE PTR [rax],ah
   14002f3dd:	add    BYTE PTR [rdx+0x0],ch
   14002f3e0:	outs   dx,DWORD PTR ds:[rsi]
   14002f3e1:	add    BYTE PTR [rdx+0x0],ah
   14002f3e4:	and    BYTE PTR [rax],al
   14002f3e6:	jb     0x14002f3e8
   14002f3e8:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f3ec:	jne    0x14002f3ee
   14002f3ee:	ins    DWORD PTR es:[rdi],dx
   14002f3ef:	add    BYTE PTR [rbp+0x0],ah
   14002f3f2:	and    BYTE PTR [rax],al
   14002f3f4:	(bad)  
   14002f3f5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f3f9:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002f3fd:	add    BYTE PTR [rdi+0x0],ah
   14002f400:	outs   dx,DWORD PTR ds:[rsi]
   14002f401:	add    BYTE PTR [rsi+0x0],ch
   14002f404:	add    BYTE PTR [rax],al
   14002f406:	add    BYTE PTR [rax],al
   14002f408:	ins    BYTE PTR es:[rdi],dx
   14002f409:	add    BYTE PTR [rdi+0x0],ch
   14002f40c:	add    BYTE PTR [edi+0x0],ch
   14002f410:	outs   dx,BYTE PTR ds:[rsi]
   14002f411:	add    BYTE PTR [rax],al
   14002f413:	add    BYTE PTR [rax],dh
   14002f415:	add    BYTE PTR [rax],al
   14002f417:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002f41b:	add    BYTE PTR [rdi+0x0],ah
   14002f41e:	outs   dx,DWORD PTR ds:[rsi]
   14002f41f:	add    BYTE PTR [rsi+0x0],ch
   14002f422:	add    BYTE PTR [rax],al
   14002f424:	add    BYTE PTR [rax],al
   14002f426:	add    BYTE PTR [rax],al
   14002f428:	ins    BYTE PTR es:[rdi],dx
   14002f429:	add    BYTE PTR [rdi+0x0],ch
   14002f42c:	add    BYTE PTR [edi+0x0],ch
   14002f430:	outs   dx,BYTE PTR ds:[rsi]
   14002f431:	add    BYTE PTR [rax],al
   14002f433:	add    BYTE PTR [rax],al
   14002f435:	add    BYTE PTR [rax],al
   14002f437:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002f43b:	add    BYTE PTR [rdi+0x0],ah
   14002f43e:	outs   dx,DWORD PTR ds:[rsi]
   14002f43f:	add    BYTE PTR [rsi+0x0],ch
   14002f442:	add    BYTE PTR [rax],al
   14002f444:	sub    al,0x0
   14002f446:	and    BYTE PTR [rax],al
	...
   14002f450:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002f454:	imul   eax,DWORD PTR [rax],0x69
   14002f457:	add    BYTE PTR [rsi+0x0],ch
   14002f45a:	add    BYTE PTR [eax],ah
   14002f45d:	add    BYTE PTR [rbx+0x0],ah
   14002f460:	jne    0x14002f462
   14002f462:	jb     0x14002f464
   14002f464:	jb     0x14002f466
   14002f466:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f46a:	je     0x14002f46c
   14002f46c:	and    BYTE PTR [rax],al
   14002f46e:	add    BYTE PTR fs:[rdi+0x0],ch
   14002f472:	ja     0x14002f474
   14002f474:	outs   dx,BYTE PTR ds:[rsi]
   14002f475:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002f479:	add    BYTE PTR [rcx+0x0],ah
   14002f47c:	add    BYTE PTR fs:[rax],ah
   14002f47f:	add    BYTE PTR [rdx+0x0],ch
   14002f482:	outs   dx,DWORD PTR ds:[rsi]
   14002f483:	add    BYTE PTR [rdx+0x0],ah
   14002f486:	and    BYTE PTR [rax],al
   14002f488:	outs   dx,BYTE PTR ds:[rsi]
   14002f489:	add    BYTE PTR [rdi+0x0],ch
   14002f48c:	outs   dx,BYTE PTR ds:[rsi]
   14002f48d:	add    BYTE PTR [rip+0x69007300],ch        # 0x1a9036793
   14002f493:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002f497:	add    BYTE PTR [rsi+0x0],ch
   14002f49a:	je     0x14002f49c
   14002f49c:	and    BYTE PTR [rax],al
   14002f49e:	data16 add BYTE PTR [rdi+0x0],ch
   14002f4a2:	jb     0x14002f4a4
   14002f4a4:	and    BYTE PTR [rax],al
   14002f4a6:	outs   dx,BYTE PTR ds:[rsi]
   14002f4a7:	add    BYTE PTR [rbp+0x0],ah
   14002f4aa:	js     0x14002f4ac
   14002f4ac:	je     0x14002f4ae
   14002f4ae:	and    BYTE PTR [rax],al
   14002f4b0:	ins    BYTE PTR es:[rdi],dx
   14002f4b1:	add    BYTE PTR [rcx+0x0],ah
   14002f4b4:	jne    0x14002f4b6
   14002f4b6:	outs   dx,BYTE PTR ds:[rsi]
   14002f4b7:	add    BYTE PTR [rbx+0x0],ah
   14002f4ba:	push   0x0
   14002f4bf:	add    BYTE PTR [rdi],ch
   14002f4c1:	add    BYTE PTR [rdi],ch
   14002f4c3:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002f4c7:	add    BYTE PTR [rbp+0x0],ch
   14002f4ca:	pop    rdi
   14002f4cb:	add    BYTE PTR [rax+0x0],dh
   14002f4ce:	(bad)  
   14002f4cf:	add    BYTE PTR [rdx+0x0],dh
   14002f4d2:	(bad)  
   14002f4d3:	add    BYTE PTR [rbp+0x0],ch
   14002f4d6:	jae    0x14002f4d8
   14002f4d8:	(bad)  
   14002f4d9:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002f4dd:	add    BYTE PTR [rdi+0x0],dh
   14002f4e0:	outs   dx,BYTE PTR ds:[rsi]
   14002f4e1:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002f4e5:	add    BYTE PTR [rcx+0x0],ah
   14002f4e8:	add    BYTE PTR fs:[rbx+0x0],dh
   14002f4ec:	add    BYTE PTR [rax],al
   14002f4ee:	add    BYTE PTR [rax],al
   14002f4f0:	jae    0x14002f4f2
   14002f4f2:	imul   eax,DWORD PTR [rax],0x65006c
   14002f4f8:	outs   dx,BYTE PTR ds:[rsi]
   14002f4f9:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002f4fd:	add    BYTE PTR [rax],al
   14002f4ff:	add    BYTE PTR [rbx+0x0],dh
   14002f502:	imul   eax,DWORD PTR [rax],0x65006c
   14002f508:	outs   dx,BYTE PTR ds:[rsi]
   14002f509:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002f50d:	add    BYTE PTR [rax],al
   14002f50f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14002f513:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002f517:	add    BYTE PTR [rax+rax*1+0x4c],ch
   14002f51b:	add    BYTE PTR [rcx+0x0],ah
   14002f51e:	jne    0x14002f520
   14002f520:	outs   dx,BYTE PTR ds:[rsi]
   14002f521:	add    BYTE PTR [rbx+0x0],ah
   14002f524:	push   0x6f004300
   14002f529:	add    BYTE PTR [rbp+0x0],dh
   14002f52c:	outs   dx,BYTE PTR ds:[rsi]
   14002f52d:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002f531:	add    BYTE PTR [rax],al
   14002f533:	add    BYTE PTR [rax],al
   14002f535:	add    BYTE PTR [rax],al
   14002f537:	add    BYTE PTR [rax+0x0],dl
   14002f53a:	jb     0x14002f53c
   14002f53c:	outs   dx,DWORD PTR ds:[rsi]
   14002f53d:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002f541:	add    BYTE PTR [rbx+0x0],ah
   14002f544:	je     0x14002f546
   14002f546:	push   rsp
   14002f547:	add    BYTE PTR [rcx+0x0],ch
   14002f54a:	je     0x14002f54c
   14002f54c:	ins    BYTE PTR es:[rdi],dx
   14002f54d:	add    BYTE PTR [rbp+0x0],ah
	...
   14002f558:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14002f55c:	ins    DWORD PTR es:[rdi],dx
   14002f55d:	add    BYTE PTR [rax+rax*1+0x61],al
   14002f561:	add    BYTE PTR [rcx+0x0],bh
   14002f564:	jae    0x14002f566
   14002f566:	add    BYTE PTR [rax],al
   14002f568:	push   rsp
   14002f569:	add    BYTE PTR [rdi+0x0],ch
   14002f56c:	je     0x14002f56e
   14002f56e:	(bad)  
   14002f56f:	add    BYTE PTR [rax+rax*1+0x44],ch
   14002f573:	add    BYTE PTR [rcx+0x0],ah
   14002f576:	jns    0x14002f578
   14002f578:	jae    0x14002f57a
   14002f57a:	add    BYTE PTR [rax],al
   14002f57c:	add    BYTE PTR [rax],al
   14002f57e:	add    BYTE PTR [rax],al
   14002f580:	push   rbx
   14002f581:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002f585:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002f589:	add    BYTE PTR [rbx+0x0],dh
   14002f58c:	add    BYTE PTR [rax],al
   14002f58e:	add    BYTE PTR [rax],al
   14002f590:	push   rbx
   14002f591:	add    BYTE PTR [rsi+0x0],cl
   14002f594:	add    BYTE PTR [rax],al
   14002f596:	add    BYTE PTR [rax],al
   14002f598:	push   rbx
   14002f599:	add    BYTE PTR [rsi+0x0],cl
   14002f59c:	rex.RX add BYTE PTR [rax],r8b
   14002f59f:	add    BYTE PTR [rcx+0x0],al
   14002f5a2:	movsxd eax,DWORD PTR [rax]
   14002f5a4:	je     0x14002f5a6
   14002f5a6:	imul   eax,DWORD PTR [rax],0x610076
   14002f5ac:	je     0x14002f5ae
   14002f5ae:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f5b4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002f5b8:	add    BYTE PTR fs:[rbp+0x0],ah
   14002f5bc:	add    BYTE PTR [rax],al
   14002f5be:	add    BYTE PTR [rax],al
   14002f5c0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14002f5c4:	jae    0x14002f5c6
   14002f5c6:	je     0x14002f5c8
   14002f5c8:	(bad)  
   14002f5c9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f5cd:	add    BYTE PTR [rcx+0x0],ah
   14002f5d0:	je     0x14002f5d2
   14002f5d2:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f5d8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002f5dc:	add    BYTE PTR fs:[rbp+0x0],ah
   14002f5e0:	add    BYTE PTR [rax],al
   14002f5e2:	add    BYTE PTR [rax],al
   14002f5e4:	push   rbx
   14002f5e5:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002f5e9:	add    BYTE PTR [rax],al
   14002f5eb:	add    BYTE PTR [rax+rax*1+0x43],cl
	...
   14002f5f7:	add    BYTE PTR [rax+rax*1+0x69],cl
   14002f5fb:	add    BYTE PTR [rbx+0x0],ah
   14002f5fe:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f602:	jae    0x14002f604
   14002f604:	add    BYTE PTR gs:[rax],al
   14002f607:	add    BYTE PTR [rbx+0x0],dl
   14002f60a:	push   rsi
   14002f60b:	add    BYTE PTR [rdx+0x0],dl
   14002f60e:	rex.XB add BYTE PTR [r11+0x0],cl
   14002f612:	push   rbx
   14002f613:	add    BYTE PTR [rax],al
   14002f615:	add    BYTE PTR [rax],al
   14002f617:	add    BYTE PTR [rax+0x0],dl
   14002f61a:	rex.XB add BYTE PTR [r9+0x0],cl
   14002f61e:	add    BYTE PTR [rax],r8b
   14002f621:	add    BYTE PTR [rax],al
   14002f623:	add    BYTE PTR [rax],al
   14002f625:	add    BYTE PTR [rax],al
   14002f627:	add    BYTE PTR [rax+0x0],dl
   14002f62a:	rex.XB add BYTE PTR [r9+0x0],cl
   14002f62e:	add    BYTE PTR [rsi+0x0],r8b
   14002f632:	add    BYTE PTR [rax],al
   14002f634:	add    BYTE PTR [rax],al
   14002f636:	add    BYTE PTR [rax],al
   14002f638:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002f63c:	outs   dx,BYTE PTR ds:[rsi]
   14002f63d:	add    BYTE PTR [rdi+0x0],ah
   14002f640:	push   rax
   14002f641:	add    BYTE PTR [rcx+0x0],ah
   14002f644:	je     0x14002f646
   14002f646:	push   0x0
   14002f64b:	add    BYTE PTR [rax],al
   14002f64d:	add    BYTE PTR [rax],al
   14002f64f:	add    BYTE PTR [rax+rax*1+0x61],cl
   14002f653:	add    BYTE PTR [rsi+0x0],ch
   14002f656:	add    BYTE PTR [ebx+0x0],al
   14002f65a:	outs   dx,DWORD PTR ds:[rsi]
   14002f65b:	add    BYTE PTR [rax+rax*1+0x65],ah
	...
   14002f667:	add    BYTE PTR [rdx+0x0],dl
   14002f66a:	add    BYTE PTR gs:[rdi+0x0],ah
   14002f66e:	push   rsp
   14002f66f:	add    BYTE PTR [rdx+0x0],dh
   14002f672:	imul   eax,DWORD PTR [rax],0x670067
   14002f678:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f67c:	add    BYTE PTR [rax],al
   14002f67e:	add    BYTE PTR [rax],al
   14002f680:	push   rdx
   14002f681:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002f685:	add    BYTE PTR [rax],al
   14002f687:	add    BYTE PTR [rbx+0x0],dl
   14002f68a:	outs   dx,DWORD PTR ds:[rsi]
   14002f68b:	add    BYTE PTR [rbp+0x0],dh
   14002f68e:	jb     0x14002f690
   14002f690:	movsxd eax,DWORD PTR [rax]
   14002f692:	add    BYTE PTR gs:[rcx+0x0],cl
   14002f696:	add    BYTE PTR [rax],r8b
   14002f699:	add    BYTE PTR [rax],al
   14002f69b:	add    BYTE PTR [rax],al
   14002f69d:	add    BYTE PTR [rax],al
   14002f69f:	add    BYTE PTR [rax+0x0],dl
   14002f6a2:	(bad)  
   14002f6a3:	add    BYTE PTR [rdx+0x0],dh
   14002f6a6:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f6aa:	je     0x14002f6ac
   14002f6ac:	push   rbx
   14002f6ad:	add    BYTE PTR [rdi+0x0],ch
   14002f6b0:	jne    0x14002f6b2
   14002f6b2:	jb     0x14002f6b4
   14002f6b4:	movsxd eax,DWORD PTR [rax]
   14002f6b6:	add    BYTE PTR gs:[rcx+0x0],cl
   14002f6ba:	add    BYTE PTR [rax],r8b
   14002f6bd:	add    BYTE PTR [rax],al
   14002f6bf:	add    BYTE PTR [rcx+0x0],cl
   14002f6c2:	jae    0x14002f6c4
   14002f6c4:	push   rax
   14002f6c5:	add    BYTE PTR [rdx+0x0],dh
   14002f6c8:	outs   dx,DWORD PTR ds:[rsi]
   14002f6c9:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002f6cd:	add    BYTE PTR [rbx+0x0],ah
   14002f6d0:	je     0x14002f6d2
   14002f6d2:	add    BYTE PTR [rax],al
   14002f6d4:	add    BYTE PTR [rax],al
   14002f6d6:	add    BYTE PTR [rax],al
   14002f6d8:	rex.W add BYTE PTR [rdi+0x0],dl
   14002f6dc:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002f6e1:	add    BYTE PTR [rax],al
   14002f6e3:	add    BYTE PTR [rax],al
   14002f6e5:	add    BYTE PTR [rax],al
   14002f6e7:	add    BYTE PTR [rcx+0x0],cl
   14002f6ea:	jae    0x14002f6ec
   14002f6ec:	push   rdx
   14002f6ed:	add    BYTE PTR [rbp+0x0],ah
   14002f6f0:	add    BYTE PTR [ecx+0x0],ch
   14002f6f4:	jae    0x14002f6f6
   14002f6f6:	je     0x14002f6f8
   14002f6f8:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f6fc:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002f701:	add    BYTE PTR [rax],al
   14002f703:	add    BYTE PTR [rax],al
   14002f705:	add    BYTE PTR [rax],al
   14002f707:	add    BYTE PTR [rax+rax*1+0x45],al
   14002f70b:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002f70f:	add    BYTE PTR [rbx+0x0],al
   14002f712:	push   rbp
   14002f713:	add    BYTE PTR [rbx+0x0],dl
   14002f716:	push   rsp
   14002f717:	add    BYTE PTR [rcx+0x0],cl
   14002f71a:	add    BYTE PTR [rax],r8b
   14002f71d:	add    BYTE PTR [rax],al
   14002f71f:	add    BYTE PTR [rax+rax*1+0x45],al
   14002f723:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002f727:	add    BYTE PTR [rax+0x0],dl
   14002f72a:	push   rdx
   14002f72b:	add    BYTE PTR [rdi+0x0],cl
   14002f72e:	add    BYTE PTR [rbp+0x0],r10b
   14002f732:	add    BYTE PTR [r8+r8*1+0x0],dl
   14002f737:	add    BYTE PTR [rax+rax*1+0x45],al
   14002f73b:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14002f73f:	add    BYTE PTR [rbx+0x0],dl
   14002f742:	add    BYTE PTR [r10+0x0],r10b
   14002f746:	push   rsi
   14002f747:	add    BYTE PTR [rcx+0x0],cl
   14002f74a:	rex.XB add BYTE PTR [r13+0x0],al
   14002f74e:	push   rsp
   14002f74f:	add    BYTE PTR [rcx+0x0],al
   14002f752:	rex.RXB add BYTE PTR [r8],r8b
   14002f755:	add    BYTE PTR [rax],al
   14002f757:	add    BYTE PTR [rsi+0x0],al
   14002f75a:	add    BYTE PTR gs:[rcx+0x0],ah
   14002f75e:	je     0x14002f760
   14002f760:	jne    0x14002f762
   14002f762:	jb     0x14002f764
   14002f764:	add    BYTE PTR gs:[rcx+0x0],cl
   14002f768:	add    BYTE PTR [rax],r8b
   14002f76b:	add    BYTE PTR [rax],al
   14002f76d:	add    BYTE PTR [rax],al
   14002f76f:	add    BYTE PTR [rsi+0x0],dl
   14002f772:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f776:	jae    0x14002f778
   14002f778:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f77e:	add    BYTE PTR [rax],al
   14002f780:	push   rdx
   14002f781:	add    BYTE PTR [rbp+0x0],ah
   14002f784:	add    BYTE PTR [eax+eax*1+0x79],dl
   14002f789:	add    BYTE PTR [rax+0x0],dh
   14002f78c:	add    BYTE PTR gs:[rax],al
   14002f78f:	add    BYTE PTR [rdx+0x0],dl
   14002f792:	add    BYTE PTR gs:[rdi+0x0],ah
   14002f796:	rex.WRXB add BYTE PTR [r14+0x0],r14b
   14002f79a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f79e:	add    BYTE PTR [rax],al
   14002f7a0:	add    BYTE PTR [r8+0x0],sil
   14002f7a4:	jo     0x14002f7a6
   14002f7a6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002f7aa:	outs   dx,BYTE PTR ds:[rsi]
   14002f7ab:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002f7af:	add    BYTE PTR [rax+0x0],bh
   14002f7b2:	je     0x14002f7b4
   14002f7b4:	add    BYTE PTR [rax],al
   14002f7b6:	add    BYTE PTR [rax],al
   14002f7b8:	rex.W add BYTE PTR [rax+rax*1+0x49],al
   14002f7bd:	add    BYTE PTR [rax+rax*1+0x0],al
   14002f7c1:	add    BYTE PTR [rax],al
   14002f7c3:	add    BYTE PTR [rax],al
   14002f7c5:	add    BYTE PTR [rax],al
   14002f7c7:	add    BYTE PTR [rbp+0x0],al
   14002f7ca:	js     0x14002f7cc
   14002f7cc:	je     0x14002f7ce
   14002f7ce:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f7d2:	jae    0x14002f7d4
   14002f7d4:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f7da:	push   rax
   14002f7db:	add    BYTE PTR [rbp+0x0],ah
   14002f7de:	jb     0x14002f7e0
   14002f7e0:	imul   eax,DWORD PTR [rax],0x64006f
   14002f7e6:	add    BYTE PTR [rax],al
   14002f7e8:	push   rax
   14002f7e9:	add    BYTE PTR [rdx+0x0],dh
   14002f7ec:	outs   dx,DWORD PTR ds:[rsi]
   14002f7ed:	add    BYTE PTR [rsi+0x0],ah
   14002f7f0:	imul   eax,DWORD PTR [rax],0x65006c
   14002f7f6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002f7fb:	add    BYTE PTR [rax],al
   14002f7fd:	add    BYTE PTR [rax],al
   14002f7ff:	add    BYTE PTR [rbp+0x0],dl
   14002f802:	jae    0x14002f804
   14002f804:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f808:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002f80d:	add    BYTE PTR [rax],al
   14002f80f:	add    BYTE PTR [rbx+0x0],dl
   14002f812:	jne    0x14002f814
   14002f814:	(bad)  
   14002f815:	add    BYTE PTR [rbx+0x0],dh
   14002f818:	movsxd eax,DWORD PTR [rax]
   14002f81a:	jb     0x14002f81c
   14002f81c:	imul   eax,DWORD PTR [rax],0x740070
   14002f822:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f828:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002f82d:	add    BYTE PTR [rax],al
   14002f82f:	add    BYTE PTR [rbx+0x0],dl
   14002f832:	jne    0x14002f834
   14002f834:	(bad)  
   14002f835:	add    BYTE PTR [rbx+0x0],dh
   14002f838:	movsxd eax,DWORD PTR [rax]
   14002f83a:	jb     0x14002f83c
   14002f83c:	imul   eax,DWORD PTR [rax],0x740070
   14002f842:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f848:	push   rdx
   14002f849:	add    BYTE PTR [rbp+0x0],ah
   14002f84c:	ins    DWORD PTR es:[rdi],dx
   14002f84d:	add    BYTE PTR [rcx+0x0],ch
   14002f850:	outs   dx,BYTE PTR ds:[rsi]
   14002f851:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002f855:	add    BYTE PTR [rdx+0x0],dh
   14002f858:	add    BYTE PTR [rcx+0x0],r12b
   14002f85c:	jns    0x14002f85e
   14002f85e:	jae    0x14002f860
	...
   14002f868:	push   rbx
   14002f869:	add    BYTE PTR [rbp+0x0],dh
   14002f86c:	(bad)  
   14002f86d:	add    BYTE PTR [rbx+0x0],dh
   14002f870:	movsxd eax,DWORD PTR [rax]
   14002f872:	jb     0x14002f874
   14002f874:	imul   eax,DWORD PTR [rax],0x740070
   14002f87a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f880:	push   rdx
   14002f881:	add    BYTE PTR [rbp+0x0],ah
   14002f884:	ins    DWORD PTR es:[rdi],dx
   14002f885:	add    BYTE PTR [rcx+0x0],ch
   14002f888:	outs   dx,BYTE PTR ds:[rsi]
   14002f889:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002f88d:	add    BYTE PTR [rdx+0x0],dh
   14002f890:	push   rbx
   14002f891:	add    BYTE PTR [rax+0x0],ch
   14002f894:	outs   dx,DWORD PTR ds:[rsi]
   14002f895:	add    BYTE PTR [rdi+0x0],dh
	...
   14002f8a0:	push   rax
   14002f8a1:	add    BYTE PTR [rbx+0x0],dl
   14002f8a4:	rex.WRX add BYTE PTR [rax],r8b
   14002f8a7:	add    BYTE PTR [rax+0x0],dl
   14002f8aa:	push   rbx
   14002f8ab:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002f8af:	add    BYTE PTR [rdx+0x0],dl
   14002f8b2:	jne    0x14002f8b4
   14002f8b4:	outs   dx,BYTE PTR ds:[rsi]
   14002f8b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f8b9:	add    BYTE PTR [rbp+0x0],ch
   14002f8bc:	add    BYTE PTR gs:[rbp+0x0],al
   14002f8c0:	jbe    0x14002f8c2
   14002f8c2:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f8c6:	je     0x14002f8c8
	...
   14002f8d0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002f8d4:	movsxd eax,DWORD PTR [rax]
   14002f8d6:	push   0x6e006900
   14002f8db:	add    BYTE PTR [rbp+0x0],ah
   14002f8de:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14002f8e3:	add    BYTE PTR [rax],al
   14002f8e5:	add    BYTE PTR [rax],al
   14002f8e7:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002f8eb:	add    BYTE PTR [rcx+0x0],ch
   14002f8ee:	(bad)  
   14002f8ef:	add    BYTE PTR [rax+rax*1+0x74],ch
   14002f8f3:	add    BYTE PTR [rdx+0x0],dh
   14002f8f6:	(bad)  
   14002f8f7:	add    BYTE PTR [rbx+0x0],ah
   14002f8fa:	imul   eax,DWORD PTR [rax],0x69
   14002f8fd:	add    BYTE PTR [rsi+0x0],ch
   14002f900:	add    BYTE PTR [ecx+0x0],ch
   14002f904:	add    BYTE PTR fs:[rax],al
   14002f907:	add    BYTE PTR [rcx+0x0],ch
   14002f90a:	(bad)  
   14002f90b:	add    BYTE PTR [rdx+0x0],dh
   14002f90e:	je     0x14002f910
   14002f910:	jb     0x14002f912
   14002f912:	(bad)  
   14002f913:	add    BYTE PTR [rbx+0x0],ah
   14002f916:	imul   eax,DWORD PTR [rax],0x69
   14002f919:	add    BYTE PTR [rsi+0x0],ch
   14002f91c:	add    BYTE PTR [ecx+0x0],ch
   14002f920:	add    BYTE PTR fs:[rax],al
   14002f923:	add    BYTE PTR [rax],al
   14002f925:	add    BYTE PTR [rax],al
   14002f927:	add    BYTE PTR [rbp+0x0],cl
   14002f92a:	(bad)  
   14002f92b:	add    BYTE PTR [rdx+0x0],ch
   14002f92e:	outs   dx,DWORD PTR ds:[rsi]
   14002f92f:	add    BYTE PTR [rdx+0x0],dh
   14002f932:	push   rsi
   14002f933:	add    BYTE PTR [rbp+0x0],ah
   14002f936:	jb     0x14002f938
   14002f938:	jae    0x14002f93a
   14002f93a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002f948:	add    BYTE PTR [r13+0x0],r13b
   14002f94c:	(bad)  
   14002f94d:	add    BYTE PTR [rcx+0x0],ch
   14002f950:	ins    BYTE PTR es:[rdi],dx
   14002f951:	add    BYTE PTR [rbx+0x0],dl
   14002f954:	je     0x14002f956
   14002f956:	(bad)  
   14002f957:	add    BYTE PTR [rax+rax*1+0x75],dh
   14002f95b:	add    BYTE PTR [rbx+0x0],dh
   14002f95e:	add    BYTE PTR [rax],al
   14002f960:	push   rbx
   14002f961:	add    BYTE PTR [rbp+0x0],dh
   14002f964:	(bad)  
   14002f965:	add    BYTE PTR [rbx+0x0],dh
   14002f968:	movsxd eax,DWORD PTR [rax]
   14002f96a:	jb     0x14002f96c
   14002f96c:	imul   eax,DWORD PTR [rax],0x740070
   14002f972:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f978:	add    BYTE PTR [r8+r8*1+0x61],bpl
   14002f97d:	add    BYTE PTR [rbx+0x0],dh
   14002f980:	jae    0x14002f982
   14002f982:	imul   eax,DWORD PTR [rax],0x690066
   14002f988:	movsxd eax,DWORD PTR [rax]
   14002f98a:	(bad)  
   14002f98b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f98f:	add    BYTE PTR [rdi+0x0],ch
   14002f992:	outs   dx,BYTE PTR ds:[rsi]
   14002f993:	add    BYTE PTR [rax],al
   14002f995:	add    BYTE PTR [rax],al
   14002f997:	add    BYTE PTR [rbx+0x0],dh
   14002f99a:	je     0x14002f99c
   14002f99c:	outs   dx,DWORD PTR ds:[rsi]
   14002f99d:	add    BYTE PTR [rdx+0x0],dh
   14002f9a0:	(bad)  
   14002f9a1:	add    BYTE PTR [rdi+0x0],ah
   14002f9a4:	add    BYTE PTR gs:[rax],al
   14002f9a7:	add    BYTE PTR [rbp+0x0],cl
   14002f9aa:	(bad)  
   14002f9ab:	add    BYTE PTR [rdx+0x0],ch
   14002f9ae:	outs   dx,DWORD PTR ds:[rsi]
   14002f9af:	add    BYTE PTR [rdx+0x0],dh
   14002f9b2:	(bad)  
   14002f9b3:	add    BYTE PTR [rsi+0x0],ch
   14002f9b6:	add    BYTE PTR fs:[rbp+0x0],cl
   14002f9ba:	imul   eax,DWORD PTR [rax],0x6f006e
   14002f9c0:	jb     0x14002f9c2
   14002f9c2:	push   rsi
   14002f9c3:	add    BYTE PTR [rbp+0x0],ah
   14002f9c6:	jb     0x14002f9c8
   14002f9c8:	jae    0x14002f9ca
   14002f9ca:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14002f9d8:	push   rbx
   14002f9d9:	add    BYTE PTR [rbp+0x0],dh
   14002f9dc:	(bad)  
   14002f9dd:	add    BYTE PTR [rbx+0x0],dh
   14002f9e0:	movsxd eax,DWORD PTR [rax]
   14002f9e2:	jb     0x14002f9e4
   14002f9e4:	imul   eax,DWORD PTR [rax],0x740070
   14002f9ea:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f9f0:	rex.XB add BYTE PTR [r13+0x0],sil
   14002f9f4:	jb     0x14002f9f6
   14002f9f6:	jb     0x14002f9f8
   14002f9f8:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f9fc:	je     0x14002f9fe
   14002f9fe:	push   rsi
   14002f9ff:	add    BYTE PTR [rbp+0x0],ah
   14002fa02:	jb     0x14002fa04
   14002fa04:	jae    0x14002fa06
   14002fa06:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fa0c:	add    BYTE PTR [rax],al
   14002fa0e:	add    BYTE PTR [rax],al
   14002fa10:	push   rbx
   14002fa11:	add    BYTE PTR [rbp+0x0],dh
   14002fa14:	(bad)  
   14002fa15:	add    BYTE PTR [rbx+0x0],dh
   14002fa18:	movsxd eax,DWORD PTR [rax]
   14002fa1a:	jb     0x14002fa1c
   14002fa1c:	imul   eax,DWORD PTR [rax],0x740070
   14002fa22:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fa28:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002fa2c:	jae    0x14002fa2e
   14002fa2e:	je     0x14002fa30
   14002fa30:	push   rbp
   14002fa31:	add    BYTE PTR [rbx+0x0],dh
   14002fa34:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002fa39:	add    BYTE PTR [rbp+0x0],ah
   14002fa3c:	jb     0x14002fa3e
   14002fa3e:	jae    0x14002fa40
   14002fa40:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fa46:	add    BYTE PTR [rax],al
   14002fa48:	jae    0x14002fa4a
   14002fa4a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fa4e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002fa54:	jae    0x14002fa56
   14002fa56:	add    BYTE PTR gs:[rcx+0x0],ah
   14002fa5a:	je     0x14002fa5c
   14002fa5c:	jae    0x14002fa5e
   14002fa5e:	add    BYTE PTR [rax],al
   14002fa60:	jae    0x14002fa62
   14002fa62:	jne    0x14002fa64
   14002fa64:	(bad)  
   14002fa65:	add    BYTE PTR [rbx+0x0],dh
   14002fa68:	movsxd eax,DWORD PTR [rax]
   14002fa6a:	jb     0x14002fa6c
   14002fa6c:	imul   eax,DWORD PTR [rax],0x740070
   14002fa72:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fa78:	jae    0x14002fa7a
   14002fa7a:	add    BYTE PTR gs:[rcx+0x0],ah
   14002fa7e:	je     0x14002fa80
   14002fa80:	movsxd eax,DWORD PTR [rax]
   14002fa82:	outs   dx,DWORD PTR ds:[rsi]
   14002fa83:	add    BYTE PTR [rbp+0x0],dh
   14002fa86:	outs   dx,BYTE PTR ds:[rsi]
   14002fa87:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002fa8b:	add    BYTE PTR [rax],al
   14002fa8d:	add    BYTE PTR [rax],al
   14002fa8f:	add    BYTE PTR [rbx+0x0],dh
   14002fa92:	jne    0x14002fa94
   14002fa94:	(bad)  
   14002fa95:	add    BYTE PTR [rbx+0x0],dh
   14002fa98:	movsxd eax,DWORD PTR [rax]
   14002fa9a:	jb     0x14002fa9c
   14002fa9c:	imul   eax,DWORD PTR [rax],0x740070
   14002faa2:	imul   eax,DWORD PTR [rax],0x6e006f
   14002faa8:	outs   dx,DWORD PTR ds:[rsi]
   14002faa9:	add    BYTE PTR [rdx+0x0],dh
   14002faac:	imul   eax,DWORD PTR [rax],0x690067
   14002fab2:	outs   dx,BYTE PTR ds:[rsi]
   14002fab3:	add    BYTE PTR [rax],al
   14002fab5:	add    BYTE PTR [rax],al
   14002fab7:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14002fabb:	add    BYTE PTR [rbx+0x0],dl
   14002fabe:	add    BYTE PTR [rcx+0x0],r12b
   14002fac2:	jns    0x14002fac4
   14002fac4:	jae    0x14002fac6
   14002fac6:	push   rdx
   14002fac7:	add    BYTE PTR [rbp+0x0],ah
   14002faca:	ins    DWORD PTR es:[rdi],dx
   14002facb:	add    BYTE PTR [rcx+0x0],ah
   14002face:	imul   eax,DWORD PTR [rax],0x69006e
   14002fad4:	outs   dx,BYTE PTR ds:[rsi]
   14002fad5:	add    BYTE PTR [rdi+0x0],ah
	...
   14002fae0:	movsxd eax,DWORD PTR [rax]
   14002fae2:	outs   dx,DWORD PTR ds:[rsi]
   14002fae3:	add    BYTE PTR [rbp+0x0],ch
   14002fae6:	jo     0x14002fae8
   14002fae8:	(bad)  
   14002fae9:	add    BYTE PTR [rsi+0x0],ch
   14002faec:	jns    0x14002faee
   14002faee:	outs   dx,BYTE PTR ds:[rsi]
   14002faef:	add    BYTE PTR [rcx+0x0],ah
   14002faf2:	ins    DWORD PTR es:[rdi],dx
   14002faf3:	add    BYTE PTR [rbp+0x0],ah
   14002faf6:	add    BYTE PTR [rax],al
   14002faf8:	jne    0x14002fafa
   14002fafa:	jae    0x14002fafc
   14002fafc:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fb00:	outs   dx,BYTE PTR ds:[rsi]
   14002fb01:	add    BYTE PTR [rcx+0x0],ch
   14002fb04:	movsxd eax,DWORD PTR [rax]
   14002fb06:	imul   eax,DWORD PTR [rax],0x6e
   14002fb09:	add    BYTE PTR [rcx+0x0],ah
   14002fb0c:	ins    DWORD PTR es:[rdi],dx
   14002fb0d:	add    BYTE PTR [rbp+0x0],ah
	...
   14002fb18:	jne    0x14002fb1a
   14002fb1a:	jae    0x14002fb1c
   14002fb1c:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fb20:	jae    0x14002fb22
   14002fb22:	movsxd eax,DWORD PTR [rax]
   14002fb24:	outs   dx,DWORD PTR ds:[rsi]
   14002fb25:	add    BYTE PTR [rdx+0x0],dh
   14002fb28:	add    BYTE PTR gs:[rax],al
   14002fb2b:	add    BYTE PTR [rax],al
   14002fb2d:	add    BYTE PTR [rax],al
   14002fb2f:	add    BYTE PTR [rbx+0x0],al
   14002fb32:	outs   dx,DWORD PTR ds:[rsi]
   14002fb33:	add    BYTE PTR [rdx+0x0],dh
   14002fb36:	add    BYTE PTR gs:[rax+rax*1+0x43],ch
   14002fb3b:	add    BYTE PTR [rdi+0x0],ch
   14002fb3e:	ins    DWORD PTR es:[rdi],dx
   14002fb3f:	add    BYTE PTR [rbx+0x0],dl
   14002fb42:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fb46:	jbe    0x14002fb48
   14002fb48:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fb4c:	add    BYTE PTR [rax],al
   14002fb4e:	add    BYTE PTR [rax],al
   14002fb50:	movsxd eax,DWORD PTR [rax]
   14002fb52:	jb     0x14002fb54
   14002fb54:	add    BYTE PTR gs:[rcx+0x0],ah
   14002fb58:	je     0x14002fb5a
   14002fb5a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002fb5f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002fb63:	add    BYTE PTR [rsi+0x0],dh
   14002fb66:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14002fb6b:	add    BYTE PTR [rax],al
   14002fb6d:	add    BYTE PTR [rax],al
   14002fb6f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002fb73:	add    BYTE PTR [rbx+0x0],dh
   14002fb76:	(bad)  
   14002fb77:	add    BYTE PTR [rbx+0x0],ah
   14002fb7a:	movsxd eax,DWORD PTR [rax]
   14002fb7c:	add    BYTE PTR gs:[rax+0x0],dh
   14002fb80:	je     0x14002fb82
   14002fb82:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14002fb87:	add    BYTE PTR [rbp+0x0],ah
   14002fb8a:	jb     0x14002fb8c
   14002fb8c:	jae    0x14002fb8e
   14002fb8e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fb94:	add    BYTE PTR [rax],al
   14002fb96:	add    BYTE PTR [rax],al
   14002fb98:	je     0x14002fb9a
   14002fb9a:	outs   dx,DWORD PTR ds:[rsi]
   14002fb9b:	add    BYTE PTR [rbx+0x0],dh
   14002fb9e:	movsxd eax,DWORD PTR [rax]
   14002fba0:	jne    0x14002fba2
   14002fba2:	jb     0x14002fba4
   14002fba4:	jb     0x14002fba6
   14002fba6:	add    BYTE PTR gs:[rsi+0x0],ch
   14002fbaa:	je     0x14002fbac
   14002fbac:	push   rsi
   14002fbad:	add    BYTE PTR [rbp+0x0],ah
   14002fbb0:	jb     0x14002fbb2
   14002fbb2:	jae    0x14002fbb4
   14002fbb4:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fbba:	add    BYTE PTR [rax],al
   14002fbbc:	add    BYTE PTR [rax],al
   14002fbbe:	add    BYTE PTR [rax],al
   14002fbc0:	push   rdi
   14002fbc1:	add    BYTE PTR [rdi+0x0],ch
   14002fbc4:	jb     0x14002fbc6
   14002fbc6:	imul   eax,DWORD PTR [rax],0x66
   14002fbc9:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fbcd:	add    BYTE PTR [rdi+0x0],dh
	...
   14002fbd8:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14002fbdc:	jae    0x14002fbde
   14002fbde:	jae    0x14002fbe0
   14002fbe0:	(bad)  
   14002fbe1:	add    BYTE PTR [rdi+0x0],ah
   14002fbe4:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14002fbf0:	(bad)  
   14002fbf1:	add    BYTE PTR [rdi],ch
   14002fbf3:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002fbf7:	add    BYTE PTR [rbp+0x0],ch
   14002fbfa:	pop    rdi
   14002fbfb:	add    BYTE PTR [rax+0x0],dh
   14002fbfe:	(bad)  
   14002fbff:	add    BYTE PTR [rdx+0x0],dh
   14002fc02:	(bad)  
   14002fc03:	add    BYTE PTR [rbp+0x0],ch
   14002fc06:	jae    0x14002fc08
	...
   14002fc10:	(bad)  
   14002fc11:	add    BYTE PTR [rcx+0x0],ah
   14002fc14:	jae    0x14002fc16
   14002fc16:	add    BYTE PTR gs:[rdi+0x0],bl
   14002fc1a:	jb     0x14002fc1c
   14002fc1c:	add    BYTE PTR gs:[rdi+0x0],ah
   14002fc20:	imul   eax,DWORD PTR [rax],0x65
   14002fc23:	add    BYTE PTR [rcx+0x0],bh
   14002fc26:	add    BYTE PTR [rax],al
   14002fc28:	imul   eax,DWORD PTR [rax],0x64
   14002fc2e:	add    BYTE PTR [rax],al
   14002fc30:	je     0x14002fc32
   14002fc32:	imul   eax,DWORD PTR [rax],0x6c0074
   14002fc38:	add    BYTE PTR gs:[rax],al
   14002fc3b:	add    BYTE PTR [rax],al
   14002fc3d:	add    BYTE PTR [rax],al
   14002fc3f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002fc43:	add    BYTE PTR [rdi+0x0],dh
   14002fc46:	outs   dx,BYTE PTR ds:[rsi]
   14002fc47:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fc4b:	add    BYTE PTR [rcx+0x0],ah
   14002fc4e:	add    BYTE PTR fs:[rdi+0x0],bl
   14002fc52:	jne    0x14002fc54
   14002fc54:	jb     0x14002fc56
   14002fc56:	ins    BYTE PTR es:[rdi],dx
	...
   14002fc5f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002fc63:	add    BYTE PTR [rdi+0x0],dh
   14002fc66:	outs   dx,BYTE PTR ds:[rsi]
   14002fc67:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fc6b:	add    BYTE PTR [rcx+0x0],ah
   14002fc6e:	add    BYTE PTR fs:[rdi+0x0],bl
   14002fc72:	add    BYTE PTR fs:[rcx+0x0],ch
   14002fc76:	jb     0x14002fc78
	...
   14002fc80:	(bad)  
   14002fc81:	add    BYTE PTR [rdi],ch
   14002fc83:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002fc87:	add    BYTE PTR [rbp+0x0],ch
   14002fc8a:	pop    rdi
   14002fc8b:	add    BYTE PTR [rax+0x0],dh
   14002fc8e:	(bad)  
   14002fc8f:	add    BYTE PTR [rdx+0x0],dh
   14002fc92:	(bad)  
   14002fc93:	add    BYTE PTR [rbp+0x0],ch
   14002fc96:	jae    0x14002fc98
   14002fc98:	(bad)  
   14002fc99:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002fc9d:	add    BYTE PTR [rdi+0x0],dh
   14002fca0:	outs   dx,BYTE PTR ds:[rsi]
   14002fca1:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fca5:	add    BYTE PTR [rcx+0x0],ah
   14002fca8:	add    BYTE PTR fs:[rbx+0x0],dh
   14002fcac:	add    BYTE PTR [rax],al
   14002fcae:	add    BYTE PTR [rax],al
   14002fcb0:	jae    0x14002fcb2
   14002fcb2:	imul   eax,DWORD PTR [rax],0x65006c
   14002fcb8:	outs   dx,BYTE PTR ds:[rsi]
   14002fcb9:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002fcbd:	add    BYTE PTR [rax],al
   14002fcbf:	add    BYTE PTR [rdx+0x0],dh
   14002fcc2:	add    BYTE PTR gs:[rbx+0x0],dh
   14002fcc6:	jne    0x14002fcc8
   14002fcc8:	ins    DWORD PTR es:[rdi],dx
   14002fcc9:	add    BYTE PTR [rax+0x0],dh
   14002fccc:	je     0x14002fcce
   14002fcce:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fcd4:	pop    rdi
   14002fcd5:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002fcd9:	add    BYTE PTR [rcx+0x0],ch
   14002fcdc:	add    BYTE PTR [edi+0x0],ah
   14002fce0:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fce4:	add    BYTE PTR [rax],al
   14002fce6:	add    BYTE PTR [rax],al
   14002fce8:	(bad)  
   14002fce9:	add    BYTE PTR [rcx+0x0],ch
   14002fcec:	je     0x14002fcee
   14002fcee:	jae    0x14002fcf0
   14002fcf0:	ins    BYTE PTR es:[rdi],dx
   14002fcf1:	add    BYTE PTR [rbp+0x0],ah
   14002fcf4:	(bad)  
   14002fcf5:	add    BYTE PTR [rdx+0x0],dh
   14002fcf8:	outs   dx,BYTE PTR ds:[rsi]
   14002fcf9:	add    BYTE PTR [rbp+0x0],ch
   14002fcfc:	outs   dx,DWORD PTR ds:[rsi]
   14002fcfd:	add    BYTE PTR [rdx+0x0],dh
   14002fd00:	add    BYTE PTR gs:[rdi+0x0],bl
   14002fd04:	jne    0x14002fd06
   14002fd06:	imul   eax,DWORD PTR [rax],0x70005f
   14002fd0c:	(bad)  
   14002fd0d:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002fd11:	add    BYTE PTR [rax],al
   14002fd13:	add    BYTE PTR [rax],al
   14002fd15:	add    BYTE PTR [rax],al
   14002fd17:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002fd1b:	add    BYTE PTR [rdi+0x0],dh
   14002fd1e:	outs   dx,BYTE PTR ds:[rsi]
   14002fd1f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fd23:	add    BYTE PTR [rcx+0x0],ah
   14002fd26:	add    BYTE PTR fs:[rdi+0x0],bl
   14002fd2a:	jne    0x14002fd2c
   14002fd2c:	imul   eax,DWORD PTR [rax],0x70005f
   14002fd32:	(bad)  
   14002fd33:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   14002fd3f:	add    BYTE PTR [rsi+0x0],ch
   14002fd42:	outs   dx,DWORD PTR ds:[rsi]
   14002fd43:	add    BYTE PTR [rbp+0x0],ah
   14002fd46:	outs   dx,BYTE PTR ds:[rsi]
   14002fd47:	add    BYTE PTR [rdi+0x0],ch
   14002fd4a:	jne    0x14002fd4c
   14002fd4c:	add    BYTE PTR [eax+0x0],ch
   14002fd50:	jae    0x14002fd52
   14002fd52:	jo     0x14002fd54
   14002fd54:	(bad)  
   14002fd55:	add    BYTE PTR [rbx+0x0],ah
   14002fd58:	add    BYTE PTR gs:[rdi+0x0],bl
   14002fd5c:	jne    0x14002fd5e
   14002fd5e:	imul   eax,DWORD PTR [rax],0x70005f
   14002fd64:	(bad)  
   14002fd65:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002fd69:	add    BYTE PTR [rax],al
   14002fd6b:	add    BYTE PTR [rax],al
   14002fd6d:	add    BYTE PTR [rax],al
   14002fd6f:	add    BYTE PTR [rbx+0x0],dh
   14002fd72:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fd76:	jbe    0x14002fd78
   14002fd78:	imul   eax,DWORD PTR [rax],0x650063
   14002fd7e:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fd82:	jb     0x14002fd84
   14002fd84:	pop    rdi
   14002fd85:	add    BYTE PTR [rbp+0x0],dh
   14002fd88:	imul   eax,DWORD PTR [rax],0x70005f
   14002fd8e:	(bad)  
   14002fd8f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002fd93:	add    BYTE PTR [rax],al
   14002fd95:	add    BYTE PTR [rax],al
   14002fd97:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fd9b:	add    BYTE PTR [rbx+0x0],ah
   14002fd9e:	(bad)  
   14002fd9f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002fda3:	add    BYTE PTR [rdx+0x0],dh
   14002fda6:	jb     0x14002fda8
   14002fda8:	pop    rdi
   14002fda9:	add    BYTE PTR [rbp+0x0],dh
   14002fdac:	imul   eax,DWORD PTR [rax],0x70005f
   14002fdb2:	(bad)  
   14002fdb3:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   14002fdbf:	add    BYTE PTR [rcx+0x0],ah
   14002fdc2:	movsxd eax,DWORD PTR [rax]
   14002fdc4:	movsxd eax,DWORD PTR [rax]
   14002fdc6:	add    BYTE PTR gs:[rbx+0x0],dh
   14002fdca:	jae    0x14002fdcc
   14002fdcc:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fdd0:	jb     0x14002fdd2
   14002fdd2:	pop    rdi
   14002fdd3:	add    BYTE PTR [rbp+0x0],dh
   14002fdd6:	imul   eax,DWORD PTR [rax],0x70005f
   14002fddc:	(bad)  
   14002fddd:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002fde1:	add    BYTE PTR [rax],al
   14002fde3:	add    BYTE PTR [rax],al
   14002fde5:	add    BYTE PTR [rax],al
   14002fde7:	add    BYTE PTR [rbx+0x0],ah
   14002fdea:	(bad)  
   14002fdeb:	add    BYTE PTR [rsi+0x0],ch
   14002fdee:	movsxd eax,DWORD PTR [rax]
   14002fdf0:	add    BYTE PTR gs:[rax+rax*1+0x63],ch
   14002fdf5:	add    BYTE PTR [rdi+0x0],ch
   14002fdf8:	outs   dx,BYTE PTR ds:[rsi]
   14002fdf9:	add    BYTE PTR [rsi+0x0],ah
   14002fdfc:	imul   eax,DWORD PTR [rax],0x6d0072
   14002fe02:	pop    rdi
   14002fe03:	add    BYTE PTR [rbp+0x0],dh
   14002fe06:	imul   eax,DWORD PTR [rax],0x70005f
   14002fe0c:	(bad)  
   14002fe0d:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   14002fe1d:	add    BYTE PTR [rax],al
   14002fe1f:	add    BYTE PTR [rdi],ch
   14002fe21:	add    BYTE PTR [rdi],ch
   14002fe23:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002fe27:	add    BYTE PTR [rbp+0x0],ch
   14002fe2a:	pop    rdi
   14002fe2b:	add    BYTE PTR [rax+0x0],dh
   14002fe2e:	(bad)  
   14002fe2f:	add    BYTE PTR [rdx+0x0],dh
   14002fe32:	(bad)  
   14002fe33:	add    BYTE PTR [rbp+0x0],ch
   14002fe36:	jae    0x14002fe38
   14002fe38:	(bad)  
   14002fe39:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002fe3d:	add    BYTE PTR [rdi+0x0],dh
   14002fe40:	outs   dx,BYTE PTR ds:[rsi]
   14002fe41:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fe45:	add    BYTE PTR [rcx+0x0],ah
   14002fe48:	add    BYTE PTR fs:[rbx+0x0],dh
   14002fe4c:	(bad)  
   14002fe4d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14002fe51:	add    BYTE PTR [rdi+0x0],dh
   14002fe54:	outs   dx,BYTE PTR ds:[rsi]
   14002fe55:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002fe59:	add    BYTE PTR [rcx+0x0],ah
   14002fe5c:	add    BYTE PTR fs:[rax],al
   14002fe5f:	add    BYTE PTR [rbp+0x0],dh
   14002fe62:	jb     0x14002fe64
   14002fe64:	ins    BYTE PTR es:[rdi],dx
   14002fe65:	add    BYTE PTR [rax],al
   14002fe67:	add    BYTE PTR [rbx+0x0],dh
   14002fe6a:	imul   eax,DWORD PTR [rax],0x65007a
	...
   14002fe78:	jae    0x14002fe7a
   14002fe7a:	(bad)  
   14002fe7b:	add    BYTE PTR [rsi+0x0],dh
   14002fe7e:	add    BYTE PTR gs:[rcx+0x0],ah
   14002fe82:	jae    0x14002fe84
   14002fe84:	add    BYTE PTR [rax],al
   14002fe86:	add    BYTE PTR [rax],al
   14002fe88:	(bad)  
   14002fe89:	add    BYTE PTR [rdi],ch
   14002fe8b:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002fe8f:	add    BYTE PTR [rbp+0x0],ch
   14002fe92:	pop    rdi
   14002fe93:	add    BYTE PTR [rax+0x0],dh
   14002fe96:	(bad)  
   14002fe97:	add    BYTE PTR [rdx+0x0],dh
   14002fe9a:	(bad)  
   14002fe9b:	add    BYTE PTR [rbp+0x0],ch
   14002fe9e:	jae    0x14002fea0
   14002fea0:	(bad)  
   14002fea1:	add    BYTE PTR [rdx+0x0],dh
   14002fea4:	jne    0x14002fea6
   14002fea6:	outs   dx,BYTE PTR ds:[rsi]
   14002fea7:	add    BYTE PTR [rbx+0x0],ah
   14002feaa:	outs   dx,DWORD PTR ds:[rsi]
   14002feab:	add    BYTE PTR [rbp+0x0],ch
   14002feae:	ins    DWORD PTR es:[rdi],dx
   14002feaf:	add    BYTE PTR [rcx+0x0],ah
   14002feb2:	outs   dx,BYTE PTR ds:[rsi]
   14002feb3:	add    BYTE PTR [rax+rax*1+0x73],ah
	...
   14002febf:	add    BYTE PTR [rcx+0x0],ch
   14002fec2:	outs   dx,BYTE PTR ds:[rsi]
   14002fec3:	add    BYTE PTR [rcx+0x0],ch
   14002fec6:	je     0x14002fec8
   14002fec8:	imul   eax,DWORD PTR [rax],0x6c0061
   14002fece:	pop    rdi
   14002fecf:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002fed3:	add    BYTE PTR [rcx+0x0],ch
   14002fed6:	add    BYTE PTR [edi+0x0],ah
   14002feda:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fede:	add    BYTE PTR [rax],al
   14002fee0:	(bad)  
   14002fee1:	add    BYTE PTR [rax+0x0],dh
   14002fee4:	jo     0x14002fee6
   14002fee6:	pop    rdi
   14002fee7:	add    BYTE PTR [rbp+0x0],ah
   14002feea:	js     0x14002feec
   14002feec:	imul   eax,DWORD PTR [rax],0x74
   14002fef2:	add    BYTE PTR [rax],al
   14002fef4:	add    BYTE PTR [rax],al
   14002fef6:	add    BYTE PTR [rax],al
   14002fef8:	jb     0x14002fefa
   14002fefa:	add    BYTE PTR gs:[rbx+0x0],dh
   14002fefe:	jne    0x14002ff00
   14002ff00:	ins    DWORD PTR es:[rdi],dx
   14002ff01:	add    BYTE PTR [rax+0x0],dh
   14002ff04:	je     0x14002ff06
   14002ff06:	imul   eax,DWORD PTR [rax],0x6e006f
   14002ff0c:	pop    rdi
   14002ff0d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002ff11:	add    BYTE PTR [rcx+0x0],ch
   14002ff14:	add    BYTE PTR [edi+0x0],ah
   14002ff18:	add    BYTE PTR gs:[rdx+0x0],dh
   14002ff1c:	add    BYTE PTR [rax],al
   14002ff1e:	add    BYTE PTR [rax],al
   14002ff20:	ins    BYTE PTR es:[rdi],dx
   14002ff21:	add    BYTE PTR [rdi+0x0],ch
   14002ff24:	add    BYTE PTR [edi+0x0],ch
   14002ff28:	outs   dx,BYTE PTR ds:[rsi]
   14002ff29:	add    BYTE PTR [rax],al
   14002ff2b:	add    BYTE PTR [rax],al
   14002ff2d:	add    BYTE PTR [rax],al
   14002ff2f:	add    BYTE PTR [rbx+0x0],dh
   14002ff32:	imul   eax,DWORD PTR [rax],0x65006c
   14002ff38:	outs   dx,BYTE PTR ds:[rsi]
   14002ff39:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002ff3d:	add    BYTE PTR [rax],al
   14002ff3f:	add    BYTE PTR [rdx],ah
   14002ff41:	add    eax,0x81993
   14002ff46:	add    BYTE PTR [rax],al
   14002ff48:	sub    BYTE PTR [rcx+0x3],ah
	...
   14002ff53:	add    BYTE PTR [rdx],cl
   14002ff55:	add    BYTE PTR [rax],al
   14002ff57:	add    BYTE PTR [rax+0x61],ch
   14002ff5a:	add    eax,DWORD PTR [rax]
   14002ff5c:	and    BYTE PTR [rax],al
	...
   14002ff66:	add    BYTE PTR [rax],al
   14002ff68:	and    al,BYTE PTR [rip+0x81993]        # 0x1400b1901
   14002ff6e:	add    BYTE PTR [rax],al
   14002ff70:	or     BYTE PTR [rdx+0x3],ah
	...
   14002ff7b:	add    BYTE PTR [rdx],cl
   14002ff7d:	add    BYTE PTR [rax],al
   14002ff7f:	add    BYTE PTR [rax+0x62],cl
   14002ff82:	add    eax,DWORD PTR [rax]
   14002ff84:	and    BYTE PTR [rax],al
	...
   14002ff8e:	add    BYTE PTR [rax],al
   14002ff90:	and    al,BYTE PTR [rip+0x7b1993]        # 0x1407e1929
   14002ff96:	add    BYTE PTR [rax],al
   14002ff98:	in     al,dx
   14002ff99:	(bad)  
	...
   14002ffa3:	add    ah,bl
   14002ffa5:	add    BYTE PTR [rax],al
   14002ffa7:	add    ah,al
   14002ffa9:	add    ax,WORD PTR [rax]
   14002ffac:	(bad)  
   14002ffad:	or     DWORD PTR [rax],eax
	...
   14002ffb7:	add    BYTE PTR [rdx],ah
   14002ffb9:	add    eax,0x41993
   14002ffbe:	add    BYTE PTR [rax],al
   14002ffc0:	pop    rsp
   14002ffc1:	jno    0x14002ffc6
	...
   14002ffcb:	add    BYTE PTR [rcx],cl
   14002ffcd:	add    BYTE PTR [rax],al
   14002ffcf:	add    BYTE PTR [rcx+rsi*2+0x3],bh
   14002ffd3:	add    BYTE PTR [rax+0x0],ch
	...
   14002ffde:	add    BYTE PTR [rax],al
   14002ffe0:	and    al,BYTE PTR [rip+0x51993]        # 0x140081979
   14002ffe6:	add    BYTE PTR [rax],al
   14002ffe8:	hlt    
   14002ffe9:	jno    0x14002ffee
	...
   14002fff3:	add    BYTE PTR [rbx],cl
   14002fff5:	add    BYTE PTR [rax],al
   14002fff7:	add    BYTE PTR [rdx+rsi*2],bl
   14002fffa:	add    eax,DWORD PTR [rax]
   14002fffc:	(bad)  
	...
   140030005:	add    BYTE PTR [rax],al
   140030007:	add    BYTE PTR [rdx],ah
   140030009:	add    eax,0x11993
   14003000e:	add    BYTE PTR [rax],al
   140030010:	mov    esp,0x372
   140030015:	add    BYTE PTR [rax],al
   140030017:	add    BYTE PTR [rax],al
   140030019:	add    BYTE PTR [rax],al
   14003001b:	add    BYTE PTR [rdx],al
   14003001d:	add    BYTE PTR [rax],al
   14003001f:	add    ah,al
   140030021:	jb     0x140030026
   140030023:	add    BYTE PTR [rax],ch
	...
   14003002d:	add    BYTE PTR [rax],al
   14003002f:	add    BYTE PTR [rdx],ah
   140030031:	add    eax,0x31993
   140030036:	add    BYTE PTR [rax],al
   140030038:	add    al,0x73
   14003003a:	add    eax,DWORD PTR [rax]
	...
   140030044:	add    eax,0x1c000000
   140030049:	jae    0x14003004e
   14003004b:	add    BYTE PTR [rax+0x0],cl
	...
   140030056:	add    BYTE PTR [rax],al
   140030058:	and    al,BYTE PTR [rip+0x11993]        # 0x1400419f1
   14003005e:	add    BYTE PTR [rax],al
   140030060:	ins    BYTE PTR es:[rdi],dx
   140030061:	jae    0x140030066
	...
   14003006b:	add    BYTE PTR [rbx],al
   14003006d:	add    BYTE PTR [rax],al
   14003006f:	add    BYTE PTR [rbx+rsi*2+0x3],dh
   140030073:	add    BYTE PTR [rax+0x0],al
	...
   14003007e:	add    BYTE PTR [rax],al
   140030080:	and    al,BYTE PTR [rip+0x11993]        # 0x140041a19
   140030086:	add    BYTE PTR [rax],al
   140030088:	(bad)  
   140030089:	jae    0x14003008e
	...
   140030093:	add    BYTE PTR [rcx],cl
   140030095:	add    BYTE PTR [rax],al
   140030097:	add    ah,cl
   140030099:	jae    0x14003009e
   14003009b:	add    BYTE PTR [rax],bh
	...
   1400300a5:	add    BYTE PTR [rax],al
   1400300a7:	add    BYTE PTR [rdx],ah
   1400300a9:	add    eax,0x31993
   1400300ae:	add    BYTE PTR [rax],al
   1400300b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400300b1:	je     0x1400300b6
	...
   1400300bb:	add    BYTE PTR [rip+0xffffffffbc000000],al        # 0xfc0300c1
   1400300c1:	je     0x1400300c6
   1400300c3:	add    BYTE PTR [rax],bh
	...
   1400300cd:	add    BYTE PTR [rax],al
   1400300cf:	add    BYTE PTR [rdx],ah
   1400300d1:	add    eax,0x21993
   1400300d6:	add    BYTE PTR [rax],al
   1400300d8:	or     al,0x75
   1400300da:	add    eax,DWORD PTR [rax]
	...
   1400300e4:	add    eax,DWORD PTR [rax]
   1400300e6:	add    BYTE PTR [rax],al
   1400300e8:	sbb    al,0x75
   1400300ea:	add    eax,DWORD PTR [rax]
   1400300ec:	add    BYTE PTR [rax],al
	...
   1400300f7:	add    BYTE PTR [rdx],ah
   1400300f9:	add    eax,0x21993
   1400300fe:	add    BYTE PTR [rax],al
   140030100:	push   rsp
   140030101:	jne    0x140030106
	...
   14003010b:	add    BYTE PTR [rbx],al
   14003010d:	add    BYTE PTR [rax],al
   14003010f:	add    BYTE PTR [rbp+rsi*2+0x3],ah
   140030113:	add    BYTE PTR [rax+0x0],al
	...
   14003011e:	add    BYTE PTR [rax],al
   140030120:	and    al,BYTE PTR [rip+0x61993]        # 0x140091ab9
   140030126:	add    BYTE PTR [rax],al
   140030128:	shl    BYTE PTR [rbp+0x3],1
	...
   140030133:	add    BYTE PTR [rip+0x0],cl        # 0x140030139
   140030139:	jbe    0x14003013e
   14003013b:	add    BYTE PTR [rax+0x0],dh
	...
   140030146:	add    BYTE PTR [rax],al
   140030148:	and    al,BYTE PTR [rip+0x131993]        # 0x140161ae1
   14003014e:	add    BYTE PTR [rax],al
   140030150:	test   al,0x76
   140030152:	add    eax,DWORD PTR [rax]
	...
   14003015c:	xor    DWORD PTR [rax],eax
   14003015e:	add    BYTE PTR [rax],al
   140030160:	rex ja 0x140030166
   140030163:	add    BYTE PTR [rax+0x1],al
   140030169:	add    BYTE PTR [rax],al
   14003016b:	add    BYTE PTR [rax],al
   14003016d:	add    BYTE PTR [rax],al
   14003016f:	add    BYTE PTR [rdx],ah
   140030171:	add    eax,0x111993
   140030176:	add    BYTE PTR [rax],al
   140030178:	js     0x1400301f3
   14003017a:	add    eax,DWORD PTR [rax]
	...
   140030184:	sub    al,BYTE PTR [rax]
   140030186:	add    BYTE PTR [rax],al
   140030188:	add    BYTE PTR [rdx+0x3],bh
   14003018b:	add    BYTE PTR [rax],ch
   14003018d:	add    DWORD PTR [rax],eax
	...
   140030197:	add    BYTE PTR [rdx],ah
   140030199:	add    eax,0x21993
   14003019e:	add    BYTE PTR [rax],al
   1400301a0:	loopne 0x14003021d
   1400301a2:	add    eax,DWORD PTR [rax]
   1400301a4:	add    DWORD PTR [rax],eax
   1400301a6:	add    BYTE PTR [rax],al
   1400301a8:	lock jnp 0x1400301ae
   1400301ab:	add    BYTE PTR [rsi],al
   1400301ad:	add    BYTE PTR [rax],al
   1400301af:	add    BYTE PTR [rax],bl
   1400301b1:	jl     0x1400301b6
   1400301b3:	add    BYTE PTR [rax],bh
	...
   1400301bd:	add    BYTE PTR [rax],al
   1400301bf:	add    BYTE PTR [rcx+0x362933bf],al
   1400301c5:	jnp    0x140030199
   1400301c7:	adc    DWORD PTR [rdx+0x4fc0000e],esi
   1400301cd:	cwde   
   1400301ce:	ds (bad) 
   1400301d0:	cmp    DWORD PTR [rdi+0x7b362933],0xffffffd2
   1400301d7:	adc    DWORD PTR [rdx+0x4fc0000e],esi
   1400301dd:	cwde   
   1400301de:	ds (bad) 
   1400301e0:	cmp    BYTE PTR [rdi+0x7b362933],0xd2
   1400301e7:	adc    DWORD PTR [rdx+0x4fc0000e],esi
   1400301ed:	cwde   
   1400301ee:	ds (bad) 
   1400301f0:	(bad)  
   1400301f1:	mov    edi,0x7b362933
   1400301f6:	rcl    BYTE PTR [rcx],cl
   1400301f8:	mov    dl,0xe
   1400301fa:	add    al,al
   1400301fc:	rex.WRXB cdqe 
   1400301fe:	ds (bad) 
   140030200:	adc    DWORD PTR [rdi],ecx
   140030202:	fdecstp 
   140030204:	jae    0x1400301a2
   140030206:	rcl    DWORD PTR [rcx],cl
   140030208:	mov    bl,0x2e
   14003020a:	add    al,al
   14003020c:	rex.WRXB cqo 
   14003020e:	or     esi,DWORD PTR [rbp+rdx*4+0x362933bf]
   140030215:	jnp    0x1400301e9
   140030217:	adc    DWORD PTR [rdx+0x4fc0000e],esi
   14003021d:	cwde   
   14003021e:	ds (bad) 
   140030220:	and    al,BYTE PTR [rip+0x21993]        # 0x140051bb9
   140030226:	add    BYTE PTR [rax],al
   140030228:	call   0x14003058a
   14003022d:	add    BYTE PTR [rax],al
   14003022f:	add    BYTE PTR [rax],al
   140030231:	add    BYTE PTR [rax],al
   140030233:	add    BYTE PTR [rbx],al
   140030235:	add    BYTE PTR [rax],al
   140030237:	add    al,bh
   140030239:	pop    rbp
   14003023a:	add    eax,DWORD PTR [rax]
   14003023c:	rex.W add BYTE PTR [rax],al
	...
   14003024f:	add    BYTE PTR [rdx],ah
   140030251:	add    eax,0x11993
   140030256:	add    BYTE PTR [rax],al
   140030258:	mov    BYTE PTR [rdx+0x3],dl
	...
   140030263:	add    BYTE PTR [rbx],al
   140030265:	add    BYTE PTR [rax],al
   140030267:	add    BYTE PTR [rax],ah
   140030269:	pop    rsi
   14003026a:	add    eax,DWORD PTR [rax]
   14003026c:	cmp    BYTE PTR [rax],al
	...
   14003027e:	add    BYTE PTR [rax],al
   140030280:	and    al,BYTE PTR [rip+0x91993]        # 0x1400c1c19
   140030286:	add    BYTE PTR [rax],al
   140030288:	push   rax
   140030289:	pop    rsi
   14003028a:	add    eax,DWORD PTR [rax]
	...
   140030294:	or     al,BYTE PTR [rax]
   140030296:	add    BYTE PTR [rax],al
   140030298:	cwde   
   140030299:	pop    rsi
   14003029a:	add    eax,DWORD PTR [rax]
   14003029c:	and    BYTE PTR [rax],al
	...
   1400302ae:	add    BYTE PTR [rax],al
   1400302b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140051c49
   1400302b6:	add    BYTE PTR [rax],al
   1400302b8:	and    BYTE PTR [rdi+0x3],bl
	...
   1400302c3:	add    BYTE PTR [rbx],al
   1400302c5:	add    BYTE PTR [rax],al
   1400302c7:	add    al,bh
   1400302c9:	pop    rsi
   1400302ca:	add    eax,DWORD PTR [rax]
   1400302cc:	and    BYTE PTR [rax],al
	...
   1400302de:	add    BYTE PTR [rax],al
   1400302e0:	and    al,BYTE PTR [rip+0x21993]        # 0x140051c79
   1400302e6:	add    BYTE PTR [rax],al
   1400302e8:	and    BYTE PTR [rdi+0x3],bl
	...
   1400302f3:	add    BYTE PTR [rbx],al
   1400302f5:	add    BYTE PTR [rax],al
   1400302f7:	add    BYTE PTR [rax],dh
   1400302f9:	pop    rdi
   1400302fa:	add    eax,DWORD PTR [rax]
   1400302fc:	and    BYTE PTR [rax],al
	...
   14003030e:	add    BYTE PTR [rax],al
   140030310:	and    al,BYTE PTR [rip+0x21993]        # 0x140051ca9
   140030316:	add    BYTE PTR [rax],al
   140030318:	and    BYTE PTR [rdi+0x3],bl
	...
   140030323:	add    BYTE PTR [rbx],al
   140030325:	add    BYTE PTR [rax],al
   140030327:	add    BYTE PTR [rax+0x5f],bl
   14003032a:	add    eax,DWORD PTR [rax]
   14003032c:	and    BYTE PTR [rax],al
	...
   14003033e:	add    BYTE PTR [rax],al
   140030340:	and    al,BYTE PTR [rip+0x21993]        # 0x140051cd9
   140030346:	add    BYTE PTR [rax],al
   140030348:	int3   
   140030349:	pop    rdx
   14003034a:	add    eax,DWORD PTR [rax]
   14003034c:	add    DWORD PTR [rax],eax
   14003034e:	add    BYTE PTR [rax],al
   140030350:	sbb    BYTE PTR [rdi+0x3],0x0
   140030354:	(bad)  
   140030355:	add    BYTE PTR [rax],al
   140030357:	add    BYTE PTR [rax+0x4000035f],ch
	...
   14003036d:	add    BYTE PTR [rax],al
   14003036f:	add    BYTE PTR [rdx],ah
   140030371:	add    eax,0x11993
   140030376:	add    BYTE PTR [rax],al
   140030378:	adc    BYTE PTR [rax+0x3],ah
	...
   140030383:	add    BYTE PTR [rcx],al
   140030385:	add    BYTE PTR [rax],al
   140030387:	add    al,bh
   140030389:	pop    rdi
   14003038a:	add    eax,DWORD PTR [rax]
   14003038c:	and    BYTE PTR [rax],al
	...
   14003039e:	add    BYTE PTR [rax],al
   1400303a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140041d39
   1400303a6:	add    BYTE PTR [rax],al
   1400303a8:	adc    BYTE PTR [rax+0x3],ah
	...
   1400303b3:	add    BYTE PTR [rcx],al
   1400303b5:	add    BYTE PTR [rax],al
   1400303b7:	add    BYTE PTR [rax],bl
   1400303b9:	(bad)  
   1400303ba:	add    eax,DWORD PTR [rax]
   1400303bc:	and    BYTE PTR [rax],al
	...
   1400303ce:	add    BYTE PTR [rax],al
   1400303d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140041d69
   1400303d6:	add    BYTE PTR [rax],al
   1400303d8:	xor    BYTE PTR [rax+0x3],ah
	...
   1400303e3:	add    BYTE PTR [rcx],al
   1400303e5:	add    BYTE PTR [rax],al
   1400303e7:	add    BYTE PTR [rax],bh
   1400303e9:	(bad)  
   1400303ea:	add    eax,DWORD PTR [rax]
   1400303ec:	sub    BYTE PTR [rax],al
	...
   1400303fe:	add    BYTE PTR [rax],al
   140030400:	and    al,BYTE PTR [rip+0x11993]        # 0x140041d99
   140030406:	add    BYTE PTR [rax],al
   140030408:	xor    BYTE PTR [rax+0x3],ah
	...
   140030413:	add    BYTE PTR [rbx],al
   140030415:	add    BYTE PTR [rax],al
   140030417:	add    BYTE PTR [rax+0x60],dl
   14003041a:	add    eax,DWORD PTR [rax]
   14003041c:	and    BYTE PTR [rax],al
	...
   14003042e:	add    BYTE PTR [rax],al
   140030430:	and    al,BYTE PTR [rip+0x51993]        # 0x140081dc9
   140030436:	add    BYTE PTR [rax],al
   140030438:	shl    BYTE PTR [rax+0x3],0x0
	...
   140030444:	(bad)  
   140030445:	add    BYTE PTR [rax],al
   140030447:	add    BYTE PTR [rax+0x60],bh
   14003044a:	add    eax,DWORD PTR [rax]
   14003044c:	and    BYTE PTR [rax],al
	...
   14003045e:	add    BYTE PTR [rax],al
   140030460:	and    al,BYTE PTR [rip+0x51993]        # 0x140081df9
   140030466:	add    BYTE PTR [rax],al
   140030468:	shl    BYTE PTR [rax+0x3],0x0
	...
   140030474:	(bad)  
   140030475:	add    BYTE PTR [rax],al
   140030477:	add    al,ch
   140030479:	(bad)  
   14003047a:	add    eax,DWORD PTR [rax]
   14003047c:	and    BYTE PTR [rax],al
	...
   14003048e:	add    BYTE PTR [rax],al
   140030490:	and    al,BYTE PTR [rip+0x11993]        # 0x140041e29
   140030496:	add    BYTE PTR [rax],al
   140030498:	push   0x37c
   14003049d:	add    BYTE PTR [rax],al
   14003049f:	add    BYTE PTR [rax],al
   1400304a1:	add    BYTE PTR [rax],al
   1400304a3:	add    BYTE PTR [rdx],al
   1400304a5:	add    BYTE PTR [rax],al
   1400304a7:	add    BYTE PTR [rax+0x7c],dh
   1400304aa:	add    eax,DWORD PTR [rax]
   1400304ac:	xor    BYTE PTR [rax],al
	...
   1400304be:	add    BYTE PTR [rax],al
   1400304c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140041e59
   1400304c6:	add    BYTE PTR [rax],al
   1400304c8:	nop
   1400304c9:	jl     0x1400304ce
	...
   1400304d3:	add    BYTE PTR [rdx],al
   1400304d5:	add    BYTE PTR [rax],al
   1400304d7:	add    BYTE PTR [rax+0x3000037c],bl
	...
   1400304ed:	add    BYTE PTR [rax],al
   1400304ef:	add    BYTE PTR [rdx],ah
   1400304f1:	add    eax,0x11993
   1400304f6:	add    BYTE PTR [rax],al
   1400304f8:	mov    eax,0x37c
   1400304fd:	add    BYTE PTR [rax],al
   1400304ff:	add    BYTE PTR [rax],al
   140030501:	add    BYTE PTR [rax],al
   140030503:	add    BYTE PTR [rbx],al
   140030505:	add    BYTE PTR [rax],al
   140030507:	add    al,al
   140030509:	jl     0x14003050e
   14003050b:	add    BYTE PTR [rax],dh
	...
   14003051d:	add    BYTE PTR [rax],al
   14003051f:	add    BYTE PTR [rdx],ah
   140030521:	add    eax,0x21993
   140030526:	add    BYTE PTR [rax],al
   140030528:	pop    rax
   140030529:	jge    0x14003052e
	...
   140030533:	add    BYTE PTR [rbx],al
   140030535:	add    BYTE PTR [rax],al
   140030537:	add    al,ch
   140030539:	jl     0x14003053e
   14003053b:	add    BYTE PTR [rax],bh
	...
   14003054d:	add    BYTE PTR [rax],al
   14003054f:	add    BYTE PTR [rdx],ah
   140030551:	add    eax,0x21993
   140030556:	add    BYTE PTR [rax],al
   140030558:	pop    rax
   140030559:	jge    0x14003055e
	...
   140030563:	add    BYTE PTR [rbx],al
   140030565:	add    BYTE PTR [rax],al
   140030567:	add    BYTE PTR [rax],dl
   140030569:	jge    0x14003056e
   14003056b:	add    BYTE PTR [rax],bh
	...
   14003057d:	add    BYTE PTR [rax],al
   14003057f:	add    BYTE PTR [rdx],ah
   140030581:	add    eax,0x11993
   140030586:	add    BYTE PTR [rax],al
   140030588:	push   0x37c
   14003058d:	add    BYTE PTR [rax],al
   14003058f:	add    BYTE PTR [rax],al
   140030591:	add    BYTE PTR [rax],al
   140030593:	add    BYTE PTR [rdx],al
   140030595:	add    BYTE PTR [rax],al
   140030597:	add    BYTE PTR [rax],bh
   140030599:	jge    0x14003059e
   14003059b:	add    BYTE PTR [rax],dh
	...
   1400305ad:	add    BYTE PTR [rax],al
   1400305af:	add    BYTE PTR [rdx],ah
   1400305b1:	add    eax,0x21993
   1400305b6:	add    BYTE PTR [rax],al
   1400305b8:	pop    rax
   1400305b9:	jge    0x1400305be
	...
   1400305c3:	add    BYTE PTR [rbx],al
   1400305c5:	add    BYTE PTR [rax],al
   1400305c7:	add    BYTE PTR [rax+0x7d],ch
   1400305ca:	add    eax,DWORD PTR [rax]
   1400305cc:	cmp    BYTE PTR [rax],al
	...
   1400305de:	add    BYTE PTR [rax],al
   1400305e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140041f79
   1400305e6:	add    BYTE PTR [rax],al
   1400305e8:	push   0x37c
   1400305ed:	add    BYTE PTR [rax],al
   1400305ef:	add    BYTE PTR [rax],al
   1400305f1:	add    BYTE PTR [rax],al
   1400305f3:	add    BYTE PTR [rdx],al
   1400305f5:	add    BYTE PTR [rax],al
   1400305f7:	add    BYTE PTR [rax+0x3000037d],dl
	...
   14003060d:	add    BYTE PTR [rax],al
   14003060f:	add    BYTE PTR [rdx],ah
   140030611:	add    eax,0x21993
   140030616:	add    BYTE PTR [rax],al
   140030618:	pop    rax
   140030619:	jge    0x14003061e
	...
   140030623:	add    BYTE PTR [rbx],al
   140030625:	add    BYTE PTR [rax],al
   140030627:	add    BYTE PTR [rax+0x3800037d],dh
	...
   14003063d:	add    BYTE PTR [rax],al
   14003063f:	add    BYTE PTR [rdx],ah
   140030641:	add    eax,0x11993
   140030646:	add    BYTE PTR [rax],al
   140030648:	or     al,0x7e
   14003064a:	add    eax,DWORD PTR [rax]
	...
   140030654:	add    DWORD PTR [rax],eax
   140030656:	add    BYTE PTR [rax],al
   140030658:	hlt    
   140030659:	jge    0x14003065e
   14003065b:	add    BYTE PTR [rax+0x0],al
	...
   14003066e:	add    BYTE PTR [rax],al
   140030670:	and    al,BYTE PTR [rip+0x11993]        # 0x140042009
   140030676:	add    BYTE PTR [rax],al
   140030678:	or     al,0x7e
   14003067a:	add    eax,DWORD PTR [rax]
	...
   140030684:	add    DWORD PTR [rax],eax
   140030686:	add    BYTE PTR [rax],al
   140030688:	adc    al,0x7e
   14003068a:	add    eax,DWORD PTR [rax]
   14003068c:	add    BYTE PTR [rax],al
	...
   14003069f:	add    BYTE PTR [rdx],ah
   1400306a1:	add    eax,0x11993
   1400306a6:	add    BYTE PTR [rax],al
   1400306a8:	xor    al,0x7e
   1400306aa:	add    eax,DWORD PTR [rax]
	...
   1400306b4:	add    eax,DWORD PTR [rax]
   1400306b6:	add    BYTE PTR [rax],al
   1400306b8:	cmp    al,0x7e
   1400306ba:	add    eax,DWORD PTR [rax]
   1400306bc:	rex.W add BYTE PTR [rax],al
	...
   1400306cf:	add    BYTE PTR [rdx],ah
   1400306d1:	add    eax,0x21993
   1400306d6:	add    BYTE PTR [rax],al
   1400306d8:	int3   
   1400306d9:	pop    rdx
   1400306da:	add    eax,DWORD PTR [rax]
   1400306dc:	add    DWORD PTR [rax],eax
   1400306de:	add    BYTE PTR [rax],al
   1400306e0:	fs jle 0x1400306e6
   1400306e3:	add    BYTE PTR [rsi],al
   1400306e5:	add    BYTE PTR [rax],al
   1400306e7:	add    BYTE PTR [rsi+rdi*2+0x400003],cl
	...
   1400306fe:	add    BYTE PTR [rax],al
   140030700:	and    al,BYTE PTR [rip+0x21993]        # 0x140052099
   140030706:	add    BYTE PTR [rax],al
   140030708:	int3   
   140030709:	pop    rdx
   14003070a:	add    eax,DWORD PTR [rax]
   14003070c:	add    DWORD PTR [rax],eax
   14003070e:	add    BYTE PTR [rax],al
   140030710:	fdivr  QWORD PTR [rsi+0x3]
   140030713:	add    BYTE PTR [rsi],al
   140030715:	add    BYTE PTR [rax],al
   140030717:	add    BYTE PTR [rdi+rdi*2],al
   14003071a:	add    eax,DWORD PTR [rax]
   14003071c:	add    BYTE PTR [rax],al
	...
   14003072f:	add    BYTE PTR [rdx],ah
   140030731:	add    eax,0x11993
   140030736:	add    BYTE PTR [rax],al
   140030738:	add    BYTE PTR [rax+0x3],bl
	...
   140030743:	add    BYTE PTR [rbx],al
   140030745:	add    BYTE PTR [rax],al
   140030747:	add    BYTE PTR [rdi+rdi*2+0x3],dl
   14003074b:	add    BYTE PTR [rax],dh
	...
   14003075d:	add    BYTE PTR [rax],al
   14003075f:	add    BYTE PTR [rdx],ah
   140030761:	add    eax,0x11993
   140030766:	add    BYTE PTR [rax],al
   140030768:	add    BYTE PTR [rax+0x3],bl
	...
   140030773:	add    BYTE PTR [rbx],al
   140030775:	add    BYTE PTR [rax],al
   140030777:	add    BYTE PTR [rdi+rdi*2+0x3],bh
   14003077b:	add    BYTE PTR [rax],dh
	...
   14003078d:	add    BYTE PTR [rax],al
   14003078f:	add    BYTE PTR [rdx],ah
   140030791:	add    eax,0x11993
   140030796:	add    BYTE PTR [rax],al
   140030798:	add    BYTE PTR [rax+0x3],bl
	...
   1400307a3:	add    BYTE PTR [rbx],al
   1400307a5:	add    BYTE PTR [rax],al
   1400307a7:	add    BYTE PTR [rdi+rdi*2+0x300003],ah
	...
   1400307be:	xor    BYTE PTR [rcx+0x0],al
   1400307c1:	add    BYTE PTR [rax],al
   1400307c3:	add    BYTE PTR [rax],al
   1400307c5:	add    BYTE PTR [rax],al
   1400307c7:	add    BYTE PTR [rdx],ah
   1400307c9:	add    eax,0x21993
   1400307ce:	add    BYTE PTR [rax],al
   1400307d0:	sar    BYTE PTR [rdi+0x3],1
	...
   1400307db:	add    BYTE PTR [rax+rax*1],al
   1400307de:	add    BYTE PTR [rax],al
   1400307e0:	loopne 0x140030861
   1400307e2:	add    eax,DWORD PTR [rax]
   1400307e4:	and    BYTE PTR [rax],al
	...
   1400307ee:	add    BYTE PTR [rax],al
   1400307f0:	and    al,BYTE PTR [rip+0x31993]        # 0x140062189
   1400307f6:	add    BYTE PTR [rax],al
   1400307f8:	sub    BYTE PTR [rax+0x3],al
   1400307fe:	add    BYTE PTR [rax],al
   140030800:	add    BYTE PTR [rax],al
   140030802:	add    BYTE PTR [rax],al
   140030804:	add    eax,0x40000000
   140030809:	add    BYTE PTR [rbx],0x0
   14003080c:	xor    BYTE PTR [rax],al
	...
   140030816:	add    BYTE PTR [rax],al
   140030818:	and    al,BYTE PTR [rip+0x11993]        # 0x1400421b1
   14003081e:	add    BYTE PTR [rax],al
   140030820:	movabs al,ds:0x380
   140030829:	add    BYTE PTR [rax],al
   14003082b:	add    BYTE PTR [rdx],al
   14003082d:	add    BYTE PTR [rax],al
   14003082f:	add    BYTE PTR [rax+0x28000380],ch
	...
   14003083d:	add    BYTE PTR [rax],al
   14003083f:	add    BYTE PTR [rdx],ah
   140030841:	add    eax,0x11993
   140030846:	add    BYTE PTR [rax],al
   140030848:	add    al,0x81
   14003084a:	add    eax,DWORD PTR [rax]
	...
   140030854:	add    eax,DWORD PTR [rax]
   140030856:	add    BYTE PTR [rax],al
   140030858:	or     al,0x81
   14003085a:	add    eax,DWORD PTR [rax]
   14003085c:	cmp    BYTE PTR [rax],al
	...
   140030866:	add    BYTE PTR [rax],al
   140030868:	and    al,BYTE PTR [rip+0x11993]        # 0x140042201
   14003086e:	add    BYTE PTR [rax],al
   140030870:	rex.R add DWORD PTR [rbx],0x0
   140030877:	add    BYTE PTR [rax],al
   140030879:	add    BYTE PTR [rax],al
   14003087b:	add    BYTE PTR [rdx],al
   14003087d:	add    BYTE PTR [rax],al
   14003087f:	add    BYTE PTR [rcx+rax*4+0x3],cl
   140030883:	add    BYTE PTR [rax],ch
	...
   14003088d:	add    BYTE PTR [rax],al
   14003088f:	add    BYTE PTR [rcx+0x0],ah
   140030892:	je     0x140030894
   140030894:	ins    BYTE PTR es:[rdi],dx
   140030895:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030899:	add    BYTE PTR [rcx+0x0],ah
   14003089c:	movsxd eax,DWORD PTR [rax]
   14003089e:	add    BYTE PTR gs:[rcx+0x0],dl
   1400308a2:	rex.WB add BYTE PTR [r8],al
   1400308a5:	add    BYTE PTR [rax],al
   1400308a7:	add    BYTE PTR [rcx+0x0],ah
   1400308aa:	je     0x1400308ac
   1400308ac:	ins    BYTE PTR es:[rdi],dx
   1400308ad:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400308b1:	add    BYTE PTR [rcx+0x0],ah
   1400308b4:	movsxd eax,DWORD PTR [rax]
   1400308b6:	add    BYTE PTR gs:[rdx+0x0],dl
   1400308ba:	add    BYTE PTR gs:[rdi+0x0],ah
   1400308be:	imul   eax,DWORD PTR [rax],0x740073
   1400308c4:	jb     0x1400308c6
   1400308c6:	(bad)  
   1400308c7:	add    BYTE PTR [rdx+0x0],dh
   1400308ca:	add    BYTE PTR [rax],al
   1400308cc:	push   rbx
   1400308cd:	add    BYTE PTR [rax],al
   1400308cf:	add    BYTE PTR [rcx+0x0],ah
   1400308d2:	je     0x1400308d4
   1400308d4:	ins    BYTE PTR es:[rdi],dx
   1400308d5:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400308d9:	add    BYTE PTR [rcx+0x0],ah
   1400308dc:	movsxd eax,DWORD PTR [rax]
   1400308de:	add    BYTE PTR gs:[rdx+0x0],dl
   1400308e2:	add    BYTE PTR gs:[rsi+0x0],ah
   1400308e6:	movsxd eax,DWORD PTR [rax]
   1400308e8:	outs   dx,DWORD PTR ds:[rsi]
   1400308e9:	add    BYTE PTR [rbp+0x0],dh
   1400308ec:	outs   dx,BYTE PTR ds:[rsi]
   1400308ed:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400308f1:	add    BYTE PTR [rax],al
   1400308f3:	add    BYTE PTR [rbp+0x0],cl
   1400308f6:	add    BYTE PTR [rax],al
   1400308f8:	(bad)  
   1400308f9:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400308fd:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030901:	add    BYTE PTR [rcx+0x0],ah
   140030904:	movsxd eax,DWORD PTR [rax]
   140030906:	add    BYTE PTR gs:[rdi+0x0],dl
   14003090a:	imul   eax,DWORD PTR [rax],0x64006e
   140030910:	outs   dx,DWORD PTR ds:[rsi]
   140030911:	add    BYTE PTR [rdi+0x0],dh
   140030914:	imul   eax,DWORD PTR [rax],0x67006e
   14003091a:	add    BYTE PTR [rax],al
   14003091c:	add    BYTE PTR [rax],r8b
   14003091f:	add    BYTE PTR [rcx+0x0],ah
   140030922:	je     0x140030924
   140030924:	ins    BYTE PTR es:[rdi],dx
   140030925:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030929:	add    BYTE PTR [rcx+0x0],ah
   14003092c:	movsxd eax,DWORD PTR [rax]
   14003092e:	add    BYTE PTR gs:[rbx+0x0],al
   140030932:	outs   dx,DWORD PTR ds:[rsi]
   140030933:	add    BYTE PTR [rsi+0x0],ch
   140030936:	je     0x140030938
   140030938:	jb     0x14003093a
   14003093a:	outs   dx,DWORD PTR ds:[rsi]
   14003093b:	add    BYTE PTR [rax+rax*1+0x73],ch
   14003093f:	add    BYTE PTR [rax],al
   140030941:	add    BYTE PTR [rax],al
   140030943:	add    BYTE PTR [rdx+0x0],al
   140030946:	add    BYTE PTR [rax],al
   140030948:	(bad)  
   140030949:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14003094d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030951:	add    BYTE PTR [rcx+0x0],ah
   140030954:	movsxd eax,DWORD PTR [rax]
   140030956:	add    BYTE PTR gs:[rax+0x0],cl
   14003095a:	outs   dx,DWORD PTR ds:[rsi]
   14003095b:	add    BYTE PTR [rbx+0x0],dh
   14003095e:	je     0x140030960
   140030960:	imul   eax,DWORD PTR [rax],0x67006e
   140030966:	add    BYTE PTR [rax],al
   140030968:	(bad)  
   140030969:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14003096d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030971:	add    BYTE PTR [rcx+0x0],ah
   140030974:	movsxd eax,DWORD PTR [rax]
   140030976:	add    BYTE PTR gs:[rax+rax*1+0x42],al
   14003097b:	add    BYTE PTR [rbx+0x0],al
   14003097e:	ins    BYTE PTR es:[rdi],dx
   14003097f:	add    BYTE PTR [rcx+0x0],ch
   140030982:	add    BYTE PTR gs:[rsi+0x0],ch
   140030986:	je     0x140030988
	...
   140030990:	(bad)  
   140030991:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030995:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030999:	add    BYTE PTR [rcx+0x0],ah
   14003099c:	movsxd eax,DWORD PTR [rax]
   14003099e:	add    BYTE PTR gs:[rax+rax*1+0x42],al
   1400309a3:	add    BYTE PTR [rax+0x0],dl
   1400309a6:	jb     0x1400309a8
   1400309a8:	outs   dx,DWORD PTR ds:[rsi]
   1400309a9:	add    BYTE PTR [rsi+0x0],dh
   1400309ac:	imul   eax,DWORD PTR [rax],0x650064
   1400309b2:	jb     0x1400309b4
   1400309b4:	add    BYTE PTR [rax],al
   1400309b6:	add    BYTE PTR [rax],al
   1400309b8:	(bad)  
   1400309b9:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400309bd:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400309c1:	add    BYTE PTR [rcx+0x0],ah
   1400309c4:	movsxd eax,DWORD PTR [rax]
   1400309c6:	add    BYTE PTR gs:[rbx+0x0],dl
   1400309ca:	outs   dx,BYTE PTR ds:[rsi]
   1400309cb:	add    BYTE PTR [rcx+0x0],ah
   1400309ce:	jo     0x1400309d0
   1400309d0:	imul   eax,DWORD PTR [rax],0x6e
   1400309d6:	add    BYTE PTR [rax],al
   1400309d8:	(bad)  
   1400309d9:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400309dd:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400309e1:	add    BYTE PTR [rcx+0x0],ah
   1400309e4:	movsxd eax,DWORD PTR [rax]
   1400309e6:	add    BYTE PTR gs:[rsi+0x0],cl
   1400309ea:	outs   dx,DWORD PTR ds:[rsi]
   1400309eb:	add    BYTE PTR [rax+rax*1+0x49],dh
   1400309ef:	add    BYTE PTR [rbp+0x0],ch
   1400309f2:	jo     0x1400309f4
   1400309f4:	ins    BYTE PTR es:[rdi],dx
   1400309f5:	add    BYTE PTR [rax],al
   1400309f7:	add    BYTE PTR [rcx+0x0],al
   1400309fa:	jo     0x1400309fc
   1400309fc:	jo     0x1400309fe
   1400309fe:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140030a03:	add    BYTE PTR [rax],al
   140030a05:	add    BYTE PTR [rax],al
   140030a07:	add    BYTE PTR [rbx+0x0],al
   140030a0a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140030a0e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140030a13:	add    BYTE PTR [rax],al
   140030a15:	add    BYTE PTR [rax],al
   140030a17:	add    BYTE PTR [rbx+0x0],al
   140030a1a:	outs   dx,DWORD PTR ds:[rsi]
   140030a1b:	add    BYTE PTR [rbp+0x0],ch
   140030a1e:	jo     0x140030a20
   140030a20:	outs   dx,DWORD PTR ds:[rsi]
   140030a21:	add    BYTE PTR [rsi+0x0],ch
   140030a24:	add    BYTE PTR gs:[rsi+0x0],ch
   140030a28:	je     0x140030a2a
   140030a2a:	and    BYTE PTR [rax],al
   140030a2c:	rex.XB add BYTE PTR [r9+0x0],spl
   140030a30:	je     0x140030a32
   140030a32:	add    BYTE PTR gs:[rdi+0x0],ah
   140030a36:	outs   dx,DWORD PTR ds:[rsi]
   140030a37:	add    BYTE PTR [rdx+0x0],dh
   140030a3a:	imul   eax,DWORD PTR [rax],0x730065
	...
   140030a48:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140030a4c:	ins    BYTE PTR es:[rdi],dx
   140030a4d:	add    BYTE PTR [rbp+0x0],ah
   140030a50:	push   rsp
   140030a51:	add    BYTE PTR [rcx+0x0],bh
   140030a54:	jo     0x140030a56
   140030a56:	add    BYTE PTR gs:[rax],al
   140030a59:	add    BYTE PTR [rax],al
   140030a5b:	add    BYTE PTR [rax],al
   140030a5d:	add    BYTE PTR [rax],al
   140030a5f:	add    BYTE PTR [rcx+0x0],cl
   140030a62:	outs   dx,BYTE PTR ds:[rsi]
   140030a63:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030a67:	add    BYTE PTR [rdx+0x0],dh
   140030a6a:	data16 add BYTE PTR [rcx+0x0],ah
   140030a6e:	movsxd eax,DWORD PTR [rax]
   140030a70:	add    BYTE PTR gs:[rax],al
   140030a73:	add    BYTE PTR [rax],al
   140030a75:	add    BYTE PTR [rax],al
   140030a77:	add    BYTE PTR [rax+0x0],cl
   140030a7a:	(bad)  
   140030a7b:	add    BYTE PTR [rdx+0x0],dh
   140030a7e:	add    BYTE PTR fs:[rdi+0x0],dh
   140030a82:	(bad)  
   140030a83:	add    BYTE PTR [rdx+0x0],dh
   140030a86:	add    BYTE PTR gs:[rax],al
   140030a89:	add    BYTE PTR [rax],al
   140030a8b:	add    BYTE PTR [rax],al
   140030a8d:	add    BYTE PTR [rax],al
   140030a8f:	add    BYTE PTR [rbp+0x0],cl
   140030a92:	imul   eax,DWORD PTR [rax],0x65006d
	...
   140030aa0:	push   rbx
   140030aa1:	add    BYTE PTR [rcx+0x0],al
   140030aa4:	rex.WRB add BYTE PTR [r8],r8b
   140030aa7:	add    BYTE PTR [rbx+0x0],dl
   140030aaa:	add    BYTE PTR [r11+0x0],r8b
   140030aae:	push   rbp
   140030aaf:	add    BYTE PTR [rdx+0x0],dl
   140030ab2:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   140030abf:	add    BYTE PTR [rbx+0x0],dl
   140030ac2:	pop    rcx
   140030ac3:	add    BYTE PTR [rbx+0x0],dl
   140030ac6:	push   rsp
   140030ac7:	add    BYTE PTR [rbp+0x0],al
   140030aca:	rex.WRB add BYTE PTR [r8],r8b
   140030acd:	add    BYTE PTR [rax],al
   140030acf:	add    BYTE PTR [rbx+0x0],dl
   140030ad2:	outs   dx,DWORD PTR ds:[rsi]
   140030ad3:	add    BYTE PTR [rsi+0x0],ah
   140030ad6:	je     0x140030ad8
   140030ad8:	ja     0x140030ada
   140030ada:	(bad)  
   140030adb:	add    BYTE PTR [rdx+0x0],dh
   140030ade:	add    BYTE PTR gs:[rax],al
   140030ae1:	add    BYTE PTR [rax],al
   140030ae3:	add    BYTE PTR [rax],al
   140030ae5:	add    BYTE PTR [rax],al
   140030ae7:	add    BYTE PTR [rax+rax*1+0x79],dl
   140030aeb:	add    BYTE PTR [rax+0x0],dh
   140030aee:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   140030af3:	add    BYTE PTR [rdx+0x0],ah
   140030af6:	add    BYTE PTR [rax],al
   140030af8:	(bad)  
   140030af9:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030afd:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030b01:	add    BYTE PTR [rcx+0x0],ah
   140030b04:	movsxd eax,DWORD PTR [rax]
   140030b06:	add    BYTE PTR gs:[rcx+0x0],al
   140030b0a:	ins    BYTE PTR es:[rdi],dx
   140030b0b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140030b0f:	add    BYTE PTR [rbx+0x0],ah
   140030b12:	(bad)  
   140030b13:	add    BYTE PTR [rax+rax*1+0x69],dh
   140030b17:	add    BYTE PTR [rdi+0x0],ch
   140030b1a:	outs   dx,BYTE PTR ds:[rsi]
   140030b1b:	add    BYTE PTR [rax],al
   140030b1d:	add    BYTE PTR [rax],al
   140030b1f:	add    BYTE PTR [rcx+0x0],ah
   140030b22:	je     0x140030b24
   140030b24:	ins    BYTE PTR es:[rdi],dx
   140030b25:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030b29:	add    BYTE PTR [rcx+0x0],ah
   140030b2c:	movsxd eax,DWORD PTR [rax]
   140030b2e:	add    BYTE PTR gs:[rbp+0x0],al
   140030b32:	js     0x140030b34
   140030b34:	movsxd eax,DWORD PTR [rax]
   140030b36:	add    BYTE PTR gs:[rax+0x0],dh
   140030b3a:	je     0x140030b3c
   140030b3c:	imul   eax,DWORD PTR [rax],0x6e006f
   140030b42:	add    BYTE PTR [rax],al
   140030b44:	add    BYTE PTR [rax],al
   140030b46:	add    BYTE PTR [rax],al
   140030b48:	(bad)  
   140030b49:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030b4d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030b51:	add    BYTE PTR [rcx+0x0],ah
   140030b54:	movsxd eax,DWORD PTR [rax]
   140030b56:	add    BYTE PTR gs:[rax+rax*1+0x69],dl
   140030b5b:	add    BYTE PTR [rbp+0x0],ch
   140030b5e:	add    BYTE PTR gs:[rax],al
   140030b61:	add    BYTE PTR [rax],al
   140030b63:	add    BYTE PTR [rax],al
   140030b65:	add    BYTE PTR [rax],al
   140030b67:	add    BYTE PTR [rcx+0x0],ah
   140030b6a:	je     0x140030b6c
   140030b6c:	ins    BYTE PTR es:[rdi],dx
   140030b6d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030b71:	add    BYTE PTR [rcx+0x0],ah
   140030b74:	movsxd eax,DWORD PTR [rax]
   140030b76:	add    BYTE PTR gs:[rbx+0x0],al
   140030b7a:	(bad)  
   140030b7b:	add    BYTE PTR [rbx+0x0],ah
   140030b7e:	push   0x6500
   140030b83:	add    BYTE PTR [rax],al
   140030b85:	add    BYTE PTR [rax],al
   140030b87:	add    BYTE PTR [rcx+0x0],cl
   140030b8a:	outs   dx,BYTE PTR ds:[rsi]
   140030b8b:	add    BYTE PTR [rsi+0x0],dh
   140030b8e:	(bad)  
   140030b8f:	add    BYTE PTR [rax+rax*1+0x69],ch
   140030b93:	add    BYTE PTR [rax+rax*1+0x20],ah
   140030b97:	add    BYTE PTR [rax+rax*1+0x61],al
   140030b9b:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030b9f:	add    BYTE PTR [rax+rax*1+0x69],dl
   140030ba3:	add    BYTE PTR [rbp+0x0],ch
   140030ba6:	add    BYTE PTR gs:[rax],al
   140030ba9:	add    BYTE PTR [rax],al
   140030bab:	add    BYTE PTR [rax],al
   140030bad:	add    BYTE PTR [rax],al
   140030baf:	add    BYTE PTR [rcx+0x0],cl
   140030bb2:	outs   dx,BYTE PTR ds:[rsi]
   140030bb3:	add    BYTE PTR [rsi+0x0],dh
   140030bb6:	(bad)  
   140030bb7:	add    BYTE PTR [rax+rax*1+0x69],ch
   140030bbb:	add    BYTE PTR [rax+rax*1+0x20],ah
   140030bbf:	add    BYTE PTR [rax+rax*1+0x61],al
   140030bc3:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030bc7:	add    BYTE PTR [rax+rax*1+0x69],dl
   140030bcb:	add    BYTE PTR [rbp+0x0],ch
   140030bce:	add    BYTE PTR gs:[rbx+0x0],dl
   140030bd2:	jo     0x140030bd4
   140030bd4:	(bad)  
   140030bd5:	add    BYTE PTR [rsi+0x0],ch
	...
   140030be0:	(bad)  
   140030be1:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030be5:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030be9:	add    BYTE PTR [rcx+0x0],ah
   140030bec:	movsxd eax,DWORD PTR [rax]
   140030bee:	add    BYTE PTR gs:[rbx+0x0],dl
   140030bf2:	je     0x140030bf4
   140030bf4:	add    BYTE PTR gs:[rsi+0x0],ch
   140030bf8:	movsxd eax,DWORD PTR [rax]
   140030bfa:	imul   eax,DWORD PTR [rax],0x6c
   140030c00:	(bad)  
   140030c01:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030c05:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030c09:	add    BYTE PTR [rcx+0x0],ah
   140030c0c:	movsxd eax,DWORD PTR [rax]
   140030c0e:	add    BYTE PTR gs:[rbx+0x0],dl
   140030c12:	je     0x140030c14
   140030c14:	jb     0x140030c16
   140030c16:	imul   eax,DWORD PTR [rax],0x67006e
   140030c1c:	add    BYTE PTR [rax],al
   140030c1e:	add    BYTE PTR [rax],al
   140030c20:	(bad)  
   140030c21:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030c25:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030c29:	add    BYTE PTR [rcx+0x0],ah
   140030c2c:	movsxd eax,DWORD PTR [rax]
   140030c2e:	add    BYTE PTR gs:[rbp+0x0],cl
   140030c32:	(bad)  
   140030c33:	add    BYTE PTR [rax+0x0],dh
   140030c36:	add    BYTE PTR [rax],al
   140030c38:	(bad)  
   140030c39:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030c3d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030c41:	add    BYTE PTR [rcx+0x0],ah
   140030c44:	movsxd eax,DWORD PTR [rax]
   140030c46:	add    BYTE PTR gs:[rbp+0x0],dl
   140030c4a:	je     0x140030c4c
   140030c4c:	imul   eax,DWORD PTR [rax],0x6c
   140030c52:	add    BYTE PTR [rax],al
   140030c54:	add    BYTE PTR [rax],al
   140030c56:	add    BYTE PTR [rax],al
   140030c58:	(bad)  
   140030c59:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030c5d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030c61:	add    BYTE PTR [rcx+0x0],ah
   140030c64:	movsxd eax,DWORD PTR [rax]
   140030c66:	add    BYTE PTR gs:[rbx+0x0],dl
   140030c6a:	add    BYTE PTR gs:[rbx+0x0],ah
   140030c6e:	jne    0x140030c70
   140030c70:	jb     0x140030c72
   140030c72:	imul   eax,DWORD PTR [rax],0x790074
	...
   140030c80:	push   rsi
   140030c81:	add    BYTE PTR [rcx+0x0],ah
   140030c84:	ins    BYTE PTR es:[rdi],dx
   140030c85:	add    BYTE PTR [rax],al
   140030c87:	add    BYTE PTR [rsi+0x0],al
   140030c8a:	outs   dx,DWORD PTR ds:[rsi]
   140030c8b:	add    BYTE PTR [rdx+0x0],dh
   140030c8e:	movsxd eax,DWORD PTR [rax]
   140030c90:	add    BYTE PTR gs:[rdx+0x0],dl
   140030c94:	add    BYTE PTR gs:[rbp+0x0],ch
   140030c98:	outs   dx,DWORD PTR ds:[rsi]
   140030c99:	add    BYTE PTR [rsi+0x0],dh
   140030c9c:	add    BYTE PTR gs:[rax],al
   140030c9f:	add    BYTE PTR [rsi+0x0],cl
   140030ca2:	outs   dx,DWORD PTR ds:[rsi]
   140030ca3:	add    BYTE PTR [rdx+0x0],dl
   140030ca6:	add    BYTE PTR gs:[rbp+0x0],ch
   140030caa:	outs   dx,DWORD PTR ds:[rsi]
   140030cab:	add    BYTE PTR [rsi+0x0],dh
   140030cae:	add    BYTE PTR gs:[rax],al
   140030cb1:	add    BYTE PTR [rax],al
   140030cb3:	add    BYTE PTR [rax],al
   140030cb5:	add    BYTE PTR [rax],al
   140030cb7:	add    BYTE PTR [rax+rax*1+0x65],al
   140030cbb:	add    BYTE PTR [rax+rax*1+0x65],ch
   140030cbf:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030cc3:	add    BYTE PTR [rax],al
   140030cc5:	add    BYTE PTR [rax],al
   140030cc7:	add    BYTE PTR [rcx+0x0],ah
   140030cca:	je     0x140030ccc
   140030ccc:	ins    BYTE PTR es:[rdi],dx
   140030ccd:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030cd1:	add    BYTE PTR [rcx+0x0],ah
   140030cd4:	movsxd eax,DWORD PTR [rax]
   140030cd6:	add    BYTE PTR gs:[rbx+0x0],dl
   140030cda:	jns    0x140030cdc
   140030cdc:	outs   dx,BYTE PTR ds:[rsi]
   140030cdd:	add    BYTE PTR [rbx+0x0],ah
	...
   140030ce8:	(bad)  
   140030ce9:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030ced:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030cf1:	add    BYTE PTR [rcx+0x0],ah
   140030cf4:	movsxd eax,DWORD PTR [rax]
   140030cf6:	add    BYTE PTR gs:[rcx+0x0],cl
   140030cfa:	push   rbx
   140030cfb:	add    BYTE PTR [rcx+0x0],al
   140030cfe:	push   rax
   140030cff:	add    BYTE PTR [rcx+0x0],cl
   140030d02:	add    BYTE PTR [rax],al
   140030d04:	add    BYTE PTR [rax],al
   140030d06:	add    BYTE PTR [rax],al
   140030d08:	(bad)  
   140030d09:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140030d0d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030d11:	add    BYTE PTR [rcx+0x0],ah
   140030d14:	movsxd eax,DWORD PTR [rax]
   140030d16:	add    BYTE PTR gs:[rdi+0x0],al
   140030d1a:	add    BYTE PTR gs:[rsi+0x0],ch
   140030d1e:	add    BYTE PTR gs:[rdx+0x0],dh
   140030d22:	(bad)  
   140030d23:	add    BYTE PTR [rax+rax*1+0x0],ch
   140030d27:	add    BYTE PTR [rcx+0x0],ah
   140030d2a:	je     0x140030d2c
   140030d2c:	ins    BYTE PTR es:[rdi],dx
   140030d2d:	add    BYTE PTR [rax+rax*1+0x72],dl
   140030d31:	add    BYTE PTR [rcx+0x0],ah
   140030d34:	movsxd eax,DWORD PTR [rax]
   140030d36:	add    BYTE PTR gs:[rbx+0x0],al
   140030d3a:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140030d3e:	add    BYTE PTR [rax],al
   140030d40:	add    BYTE PTR [rbp+0x0],r12b
   140030d44:	data16 add BYTE PTR [rcx+0x0],ah
   140030d48:	jne    0x140030d4a
   140030d4a:	ins    BYTE PTR es:[rdi],dx
   140030d4b:	add    BYTE PTR [rax+rax*1+0x4a],dh
   140030d4f:	add    BYTE PTR [rdi+0x0],ch
   140030d52:	(bad)  
   140030d53:	add    BYTE PTR [rax],al
   140030d55:	add    BYTE PTR [rax],al
   140030d57:	add    BYTE PTR [rbx+0x0],dh
   140030d5a:	je     0x140030d5c
   140030d5c:	(bad)  
   140030d5d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030d61:	add    BYTE PTR [rax],al
   140030d63:	add    BYTE PTR [rax+rax*1+0x0],bl
   140030d67:	add    BYTE PTR [rbx+0x0],dh
   140030d6a:	je     0x140030d6c
   140030d6c:	(bad)  
   140030d6d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030d71:	add    BYTE PTR [rax],al
   140030d73:	add    BYTE PTR [rax],al
   140030d75:	add    BYTE PTR [rax],al
   140030d77:	add    BYTE PTR [rax+rax*1+0x44],bl
   140030d7b:	add    BYTE PTR [rcx+0x0],cl
   140030d7e:	rex.WRB add BYTE PTR [r8+rax*1+0x50],r11b
   140030d83:	add    BYTE PTR [rbp+0x0],ah
   140030d86:	outs   dx,BYTE PTR ds:[rsi]
   140030d87:	add    BYTE PTR [rax+rax*1+0x69],ah
   140030d8b:	add    BYTE PTR [rsi+0x0],ch
   140030d8e:	add    BYTE PTR [edx+0x0],cl
   140030d92:	outs   dx,DWORD PTR ds:[rsi]
   140030d93:	add    BYTE PTR [rdx+0x0],ah
   140030d96:	jae    0x140030d98
	...
   140030da0:	pop    rsp
   140030da1:	add    BYTE PTR [rax+rax*1+0x49],al
   140030da5:	add    BYTE PTR [rbp+0x0],cl
   140030da8:	pop    rsp
   140030da9:	add    BYTE PTR [rbx+0x0],dl
   140030dac:	movsxd eax,DWORD PTR [rax]
   140030dae:	push   0x64006500
   140030db3:	add    BYTE PTR [rbp+0x0],dh
   140030db6:	ins    BYTE PTR es:[rdi],dx
   140030db7:	add    BYTE PTR [rbp+0x0],ah
   140030dba:	jae    0x140030dbc
   140030dbc:	pop    rsp
   140030dbd:	add    BYTE PTR [rax],al
   140030dbf:	add    BYTE PTR [rax+rax*1+0x44],bl
   140030dc3:	add    BYTE PTR [rcx+0x0],cl
   140030dc6:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   140030dcb:	add    BYTE PTR [rcx+0x0],ah
   140030dce:	outs   dx,BYTE PTR ds:[rsi]
   140030dcf:	add    BYTE PTR [rbx+0x0],ah
   140030dd2:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140030dd7:	add    BYTE PTR [rax+rax*1+0x5c],ah
   140030ddb:	add    BYTE PTR [rax],al
   140030ddd:	add    BYTE PTR [rax],al
   140030ddf:	add    BYTE PTR [rax+rax*1+0x61],al
   140030de3:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   140030def:	add    BYTE PTR [rax+rax*1+0x61],al
   140030df3:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   140030dff:	add    BYTE PTR [rcx+0x0],cl
   140030e02:	outs   dx,BYTE PTR ds:[rsi]
   140030e03:	add    BYTE PTR [rsi+0x0],dh
   140030e06:	(bad)  
   140030e07:	add    BYTE PTR [rax+rax*1+0x69],ch
   140030e0b:	add    BYTE PTR [rax+rax*1+0x20],ah
   140030e0f:	add    BYTE PTR [rax+rax*1+0x61],al
   140030e13:	add    BYTE PTR [rax+rax*1+0x65],dh
   140030e17:	add    BYTE PTR [rax+rax*1+0x69],dl
   140030e1b:	add    BYTE PTR [rbp+0x0],ch
   140030e1e:	add    BYTE PTR gs:[rax],al
   140030e21:	add    BYTE PTR [rax],al
   140030e23:	add    BYTE PTR [rax],al
   140030e25:	add    BYTE PTR [rax],al
   140030e27:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140030e2b:	add    BYTE PTR [rax+rax*1+0x61],dh
   140030e2f:	add    BYTE PTR [rax+rax*1+0x4c],ch
   140030e33:	add    BYTE PTR [rcx+0x0],ah
   140030e36:	jne    0x140030e38
   140030e38:	outs   dx,BYTE PTR ds:[rsi]
   140030e39:	add    BYTE PTR [rbx+0x0],ah
   140030e3c:	push   0x6f004300
   140030e41:	add    BYTE PTR [rbp+0x0],dh
   140030e44:	outs   dx,BYTE PTR ds:[rsi]
   140030e45:	add    BYTE PTR [rax+rax*1+0x0],dh
   140030e49:	add    BYTE PTR [rax],al
   140030e4b:	add    BYTE PTR [rax],al
   140030e4d:	add    BYTE PTR [rax],al
   140030e4f:	add    BYTE PTR [rax+0x0],dl
   140030e52:	jb     0x140030e54
   140030e54:	outs   dx,DWORD PTR ds:[rsi]
   140030e55:	add    BYTE PTR [rax+rax*1+0x75],ah
   140030e59:	add    BYTE PTR [rbx+0x0],ah
   140030e5c:	je     0x140030e5e
   140030e5e:	push   rsp
   140030e5f:	add    BYTE PTR [rcx+0x0],ch
   140030e62:	je     0x140030e64
   140030e64:	ins    BYTE PTR es:[rdi],dx
   140030e65:	add    BYTE PTR [rbp+0x0],ah
	...
   140030e70:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140030e74:	ins    DWORD PTR es:[rdi],dx
   140030e75:	add    BYTE PTR [rax+rax*1+0x61],al
   140030e79:	add    BYTE PTR [rcx+0x0],bh
   140030e7c:	jae    0x140030e7e
   140030e7e:	add    BYTE PTR [rax],al
   140030e80:	push   rsp
   140030e81:	add    BYTE PTR [rdi+0x0],ch
   140030e84:	je     0x140030e86
   140030e86:	(bad)  
   140030e87:	add    BYTE PTR [rax+rax*1+0x44],ch
   140030e8b:	add    BYTE PTR [rcx+0x0],ah
   140030e8e:	jns    0x140030e90
   140030e90:	jae    0x140030e92
   140030e92:	add    BYTE PTR [rax],al
   140030e94:	add    BYTE PTR [rax],al
   140030e96:	add    BYTE PTR [rax],al
   140030e98:	push   rbx
   140030e99:	add    BYTE PTR [rax+rax*1+0x61],dh
   140030e9d:	add    BYTE PTR [rax+rax*1+0x75],dh
   140030ea1:	add    BYTE PTR [rbx+0x0],dh
   140030ea4:	add    BYTE PTR [rax],al
   140030ea6:	add    BYTE PTR [rax],al
   140030ea8:	push   rbx
   140030ea9:	add    BYTE PTR [rsi+0x0],cl
   140030eac:	add    BYTE PTR [rax],al
   140030eae:	add    BYTE PTR [rax],al
   140030eb0:	push   rbx
   140030eb1:	add    BYTE PTR [rsi+0x0],cl
   140030eb4:	rex.RX add BYTE PTR [rax],r8b
   140030eb7:	add    BYTE PTR [rcx+0x0],al
   140030eba:	movsxd eax,DWORD PTR [rax]
   140030ebc:	je     0x140030ebe
   140030ebe:	imul   eax,DWORD PTR [rax],0x610076
   140030ec4:	je     0x140030ec6
   140030ec6:	imul   eax,DWORD PTR [rax],0x6e006f
   140030ecc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140030ed0:	add    BYTE PTR fs:[rbp+0x0],ah
   140030ed4:	add    BYTE PTR [rax],al
   140030ed6:	add    BYTE PTR [rax],al
   140030ed8:	rex.WB add BYTE PTR [r14+0x0],bpl
   140030edc:	jae    0x140030ede
   140030ede:	je     0x140030ee0
   140030ee0:	(bad)  
   140030ee1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140030ee5:	add    BYTE PTR [rcx+0x0],ah
   140030ee8:	je     0x140030eea
   140030eea:	imul   eax,DWORD PTR [rax],0x6e006f
   140030ef0:	rex.XB add BYTE PTR [r15+0x0],bpl
   140030ef4:	add    BYTE PTR fs:[rbp+0x0],ah
   140030ef8:	add    BYTE PTR [rax],al
   140030efa:	add    BYTE PTR [rax],al
   140030efc:	push   rbx
   140030efd:	add    BYTE PTR [rax+rax*1+0x0],dl
   140030f01:	add    BYTE PTR [rax],al
   140030f03:	add    BYTE PTR [rax+rax*1+0x43],cl
	...
   140030f0f:	add    BYTE PTR [rax+rax*1+0x69],cl
   140030f13:	add    BYTE PTR [rbx+0x0],ah
   140030f16:	add    BYTE PTR gs:[rsi+0x0],ch
   140030f1a:	jae    0x140030f1c
   140030f1c:	add    BYTE PTR gs:[rax],al
   140030f1f:	add    BYTE PTR [rbx+0x0],dl
   140030f22:	push   rsi
   140030f23:	add    BYTE PTR [rdx+0x0],dl
   140030f26:	rex.XB add BYTE PTR [r11+0x0],cl
   140030f2a:	push   rbx
   140030f2b:	add    BYTE PTR [rax],al
   140030f2d:	add    BYTE PTR [rax],al
   140030f2f:	add    BYTE PTR [rax+0x0],dl
   140030f32:	rex.XB add BYTE PTR [r9+0x0],cl
   140030f36:	add    BYTE PTR [rax],r8b
   140030f39:	add    BYTE PTR [rax],al
   140030f3b:	add    BYTE PTR [rax],al
   140030f3d:	add    BYTE PTR [rax],al
   140030f3f:	add    BYTE PTR [rax+0x0],dl
   140030f42:	rex.XB add BYTE PTR [r9+0x0],cl
   140030f46:	add    BYTE PTR [rsi+0x0],r8b
   140030f4a:	add    BYTE PTR [rax],al
   140030f4c:	add    BYTE PTR [rax],al
   140030f4e:	add    BYTE PTR [rax],al
   140030f50:	rex.WR add BYTE PTR [rcx+0x0],r12b
   140030f54:	outs   dx,BYTE PTR ds:[rsi]
   140030f55:	add    BYTE PTR [rdi+0x0],ah
   140030f58:	push   rax
   140030f59:	add    BYTE PTR [rcx+0x0],ah
   140030f5c:	je     0x140030f5e
   140030f5e:	push   0x0
   140030f63:	add    BYTE PTR [rax],al
   140030f65:	add    BYTE PTR [rax],al
   140030f67:	add    BYTE PTR [rax+rax*1+0x61],cl
   140030f6b:	add    BYTE PTR [rsi+0x0],ch
   140030f6e:	add    BYTE PTR [ebx+0x0],al
   140030f72:	outs   dx,DWORD PTR ds:[rsi]
   140030f73:	add    BYTE PTR [rax+rax*1+0x65],ah
	...
   140030f7f:	add    BYTE PTR [rdx+0x0],dl
   140030f82:	add    BYTE PTR gs:[rdi+0x0],ah
   140030f86:	push   rsp
   140030f87:	add    BYTE PTR [rdx+0x0],dh
   140030f8a:	imul   eax,DWORD PTR [rax],0x670067
   140030f90:	add    BYTE PTR gs:[rdx+0x0],dh
   140030f94:	add    BYTE PTR [rax],al
   140030f96:	add    BYTE PTR [rax],al
   140030f98:	push   rdx
   140030f99:	add    BYTE PTR [rax+rax*1+0x4f],dl
   140030f9d:	add    BYTE PTR [rax],al
   140030f9f:	add    BYTE PTR [rbx+0x0],dl
   140030fa2:	outs   dx,DWORD PTR ds:[rsi]
   140030fa3:	add    BYTE PTR [rbp+0x0],dh
   140030fa6:	jb     0x140030fa8
   140030fa8:	movsxd eax,DWORD PTR [rax]
   140030faa:	add    BYTE PTR gs:[rcx+0x0],cl
   140030fae:	add    BYTE PTR [rax],r8b
   140030fb1:	add    BYTE PTR [rax],al
   140030fb3:	add    BYTE PTR [rax],al
   140030fb5:	add    BYTE PTR [rax],al
   140030fb7:	add    BYTE PTR [rax+0x0],dl
   140030fba:	(bad)  
   140030fbb:	add    BYTE PTR [rdx+0x0],dh
   140030fbe:	add    BYTE PTR gs:[rsi+0x0],ch
   140030fc2:	je     0x140030fc4
   140030fc4:	push   rbx
   140030fc5:	add    BYTE PTR [rdi+0x0],ch
   140030fc8:	jne    0x140030fca
   140030fca:	jb     0x140030fcc
   140030fcc:	movsxd eax,DWORD PTR [rax]
   140030fce:	add    BYTE PTR gs:[rcx+0x0],cl
   140030fd2:	add    BYTE PTR [rax],r8b
   140030fd5:	add    BYTE PTR [rax],al
   140030fd7:	add    BYTE PTR [rcx+0x0],cl
   140030fda:	jae    0x140030fdc
   140030fdc:	push   rax
   140030fdd:	add    BYTE PTR [rdx+0x0],dh
   140030fe0:	outs   dx,DWORD PTR ds:[rsi]
   140030fe1:	add    BYTE PTR [rax+rax*1+0x75],ah
   140030fe5:	add    BYTE PTR [rbx+0x0],ah
   140030fe8:	je     0x140030fea
   140030fea:	add    BYTE PTR [rax],al
   140030fec:	add    BYTE PTR [rax],al
   140030fee:	add    BYTE PTR [rax],al
   140030ff0:	rex.W add BYTE PTR [rdi+0x0],dl
   140030ff4:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140030ff9:	add    BYTE PTR [rax],al
   140030ffb:	add    BYTE PTR [rax],al
   140030ffd:	add    BYTE PTR [rax],al
   140030fff:	add    BYTE PTR [rcx+0x0],cl
   140031002:	jae    0x140031004
   140031004:	push   rdx
   140031005:	add    BYTE PTR [rbp+0x0],ah
   140031008:	add    BYTE PTR [ecx+0x0],ch
   14003100c:	jae    0x14003100e
   14003100e:	je     0x140031010
   140031010:	add    BYTE PTR gs:[rdx+0x0],dh
   140031014:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140031019:	add    BYTE PTR [rax],al
   14003101b:	add    BYTE PTR [rax],al
   14003101d:	add    BYTE PTR [rax],al
   14003101f:	add    BYTE PTR [rax+rax*1+0x45],al
   140031023:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140031027:	add    BYTE PTR [rbx+0x0],al
   14003102a:	push   rbp
   14003102b:	add    BYTE PTR [rbx+0x0],dl
   14003102e:	push   rsp
   14003102f:	add    BYTE PTR [rcx+0x0],cl
   140031032:	add    BYTE PTR [rax],r8b
   140031035:	add    BYTE PTR [rax],al
   140031037:	add    BYTE PTR [rax+rax*1+0x45],al
   14003103b:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003103f:	add    BYTE PTR [rax+0x0],dl
   140031042:	push   rdx
   140031043:	add    BYTE PTR [rdi+0x0],cl
   140031046:	add    BYTE PTR [rbp+0x0],r10b
   14003104a:	add    BYTE PTR [r8+r8*1+0x0],dl
   14003104f:	add    BYTE PTR [rax+rax*1+0x45],al
   140031053:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140031057:	add    BYTE PTR [rbx+0x0],dl
   14003105a:	add    BYTE PTR [r10+0x0],r10b
   14003105e:	push   rsi
   14003105f:	add    BYTE PTR [rcx+0x0],cl
   140031062:	rex.XB add BYTE PTR [r13+0x0],al
   140031066:	push   rsp
   140031067:	add    BYTE PTR [rcx+0x0],al
   14003106a:	rex.RXB add BYTE PTR [r8],r8b
   14003106d:	add    BYTE PTR [rax],al
   14003106f:	add    BYTE PTR [rsi+0x0],al
   140031072:	add    BYTE PTR gs:[rcx+0x0],ah
   140031076:	je     0x140031078
   140031078:	jne    0x14003107a
   14003107a:	jb     0x14003107c
   14003107c:	add    BYTE PTR gs:[rcx+0x0],cl
   140031080:	add    BYTE PTR [rax],r8b
   140031083:	add    BYTE PTR [rax],al
   140031085:	add    BYTE PTR [rax],al
   140031087:	add    BYTE PTR [rsi+0x0],dl
   14003108a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003108e:	jae    0x140031090
   140031090:	imul   eax,DWORD PTR [rax],0x6e006f
   140031096:	add    BYTE PTR [rax],al
   140031098:	push   rdx
   140031099:	add    BYTE PTR [rbp+0x0],ah
   14003109c:	add    BYTE PTR [eax+eax*1+0x79],dl
   1400310a1:	add    BYTE PTR [rax+0x0],dh
   1400310a4:	add    BYTE PTR gs:[rax],al
   1400310a7:	add    BYTE PTR [rdx+0x0],dl
   1400310aa:	add    BYTE PTR gs:[rdi+0x0],ah
   1400310ae:	rex.WRXB add BYTE PTR [r14+0x0],r14b
   1400310b2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400310b6:	add    BYTE PTR [rax],al
   1400310b8:	add    BYTE PTR [r8+0x0],sil
   1400310bc:	jo     0x1400310be
   1400310be:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400310c2:	outs   dx,BYTE PTR ds:[rsi]
   1400310c3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400310c7:	add    BYTE PTR [rax+0x0],bh
   1400310ca:	je     0x1400310cc
   1400310cc:	add    BYTE PTR [rax],al
   1400310ce:	add    BYTE PTR [rax],al
   1400310d0:	rex.W add BYTE PTR [rax+rax*1+0x49],al
   1400310d5:	add    BYTE PTR [rax+rax*1+0x0],al
   1400310d9:	add    BYTE PTR [rax],al
   1400310db:	add    BYTE PTR [rax],al
   1400310dd:	add    BYTE PTR [rax],al
   1400310df:	add    BYTE PTR [rbp+0x0],al
   1400310e2:	js     0x1400310e4
   1400310e4:	je     0x1400310e6
   1400310e6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400310ea:	jae    0x1400310ec
   1400310ec:	imul   eax,DWORD PTR [rax],0x6e006f
   1400310f2:	push   rax
   1400310f3:	add    BYTE PTR [rbp+0x0],ah
   1400310f6:	jb     0x1400310f8
   1400310f8:	imul   eax,DWORD PTR [rax],0x64006f
   1400310fe:	add    BYTE PTR [rax],al
   140031100:	push   rax
   140031101:	add    BYTE PTR [rdx+0x0],dh
   140031104:	outs   dx,DWORD PTR ds:[rsi]
   140031105:	add    BYTE PTR [rsi+0x0],ah
   140031108:	imul   eax,DWORD PTR [rax],0x65006c
   14003110e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140031113:	add    BYTE PTR [rax],al
   140031115:	add    BYTE PTR [rax],al
   140031117:	add    BYTE PTR [rbp+0x0],dl
   14003111a:	jae    0x14003111c
   14003111c:	add    BYTE PTR gs:[rdx+0x0],dh
   140031120:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140031125:	add    BYTE PTR [rax],al
   140031127:	add    BYTE PTR [rbx+0x0],dl
   14003112a:	jne    0x14003112c
   14003112c:	(bad)  
   14003112d:	add    BYTE PTR [rbx+0x0],dh
   140031130:	movsxd eax,DWORD PTR [rax]
   140031132:	jb     0x140031134
   140031134:	imul   eax,DWORD PTR [rax],0x740070
   14003113a:	imul   eax,DWORD PTR [rax],0x6e006f
   140031140:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140031145:	add    BYTE PTR [rax],al
   140031147:	add    BYTE PTR [rbx+0x0],dl
   14003114a:	jne    0x14003114c
   14003114c:	(bad)  
   14003114d:	add    BYTE PTR [rbx+0x0],dh
   140031150:	movsxd eax,DWORD PTR [rax]
   140031152:	jb     0x140031154
   140031154:	imul   eax,DWORD PTR [rax],0x740070
   14003115a:	imul   eax,DWORD PTR [rax],0x6e006f
   140031160:	push   rdx
   140031161:	add    BYTE PTR [rbp+0x0],ah
   140031164:	ins    DWORD PTR es:[rdi],dx
   140031165:	add    BYTE PTR [rcx+0x0],ch
   140031168:	outs   dx,BYTE PTR ds:[rsi]
   140031169:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003116d:	add    BYTE PTR [rdx+0x0],dh
   140031170:	add    BYTE PTR [rcx+0x0],r12b
   140031174:	jns    0x140031176
   140031176:	jae    0x140031178
	...
   140031180:	push   rbx
   140031181:	add    BYTE PTR [rbp+0x0],dh
   140031184:	(bad)  
   140031185:	add    BYTE PTR [rbx+0x0],dh
   140031188:	movsxd eax,DWORD PTR [rax]
   14003118a:	jb     0x14003118c
   14003118c:	imul   eax,DWORD PTR [rax],0x740070
   140031192:	imul   eax,DWORD PTR [rax],0x6e006f
   140031198:	push   rdx
   140031199:	add    BYTE PTR [rbp+0x0],ah
   14003119c:	ins    DWORD PTR es:[rdi],dx
   14003119d:	add    BYTE PTR [rcx+0x0],ch
   1400311a0:	outs   dx,BYTE PTR ds:[rsi]
   1400311a1:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400311a5:	add    BYTE PTR [rdx+0x0],dh
   1400311a8:	push   rbx
   1400311a9:	add    BYTE PTR [rax+0x0],ch
   1400311ac:	outs   dx,DWORD PTR ds:[rsi]
   1400311ad:	add    BYTE PTR [rdi+0x0],dh
	...
   1400311b8:	push   rax
   1400311b9:	add    BYTE PTR [rbx+0x0],dl
   1400311bc:	rex.WRX add BYTE PTR [rax],r8b
   1400311bf:	add    BYTE PTR [rax+0x0],dl
   1400311c2:	push   rbx
   1400311c3:	add    BYTE PTR [rax+rax*1+0x0],dl
   1400311c7:	add    BYTE PTR [rdx+0x0],dl
   1400311ca:	jne    0x1400311cc
   1400311cc:	outs   dx,BYTE PTR ds:[rsi]
   1400311cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400311d1:	add    BYTE PTR [rbp+0x0],ch
   1400311d4:	add    BYTE PTR gs:[rbp+0x0],al
   1400311d8:	jbe    0x1400311da
   1400311da:	add    BYTE PTR gs:[rsi+0x0],ch
   1400311de:	je     0x1400311e0
	...
   1400311e8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400311ec:	movsxd eax,DWORD PTR [rax]
   1400311ee:	push   0x6e006900
   1400311f3:	add    BYTE PTR [rbp+0x0],ah
   1400311f6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400311fb:	add    BYTE PTR [rax],al
   1400311fd:	add    BYTE PTR [rax],al
   1400311ff:	add    BYTE PTR [rax+rax*1+0x72],dh
   140031203:	add    BYTE PTR [rcx+0x0],ch
   140031206:	(bad)  
   140031207:	add    BYTE PTR [rax+rax*1+0x74],ch
   14003120b:	add    BYTE PTR [rdx+0x0],dh
   14003120e:	(bad)  
   14003120f:	add    BYTE PTR [rbx+0x0],ah
   140031212:	imul   eax,DWORD PTR [rax],0x69
   140031215:	add    BYTE PTR [rsi+0x0],ch
   140031218:	add    BYTE PTR [ecx+0x0],ch
   14003121c:	add    BYTE PTR fs:[rax],al
   14003121f:	add    BYTE PTR [rcx+0x0],ch
   140031222:	(bad)  
   140031223:	add    BYTE PTR [rdx+0x0],dh
   140031226:	je     0x140031228
   140031228:	jb     0x14003122a
   14003122a:	(bad)  
   14003122b:	add    BYTE PTR [rbx+0x0],ah
   14003122e:	imul   eax,DWORD PTR [rax],0x69
   140031231:	add    BYTE PTR [rsi+0x0],ch
   140031234:	add    BYTE PTR [ecx+0x0],ch
   140031238:	add    BYTE PTR fs:[rax],al
   14003123b:	add    BYTE PTR [rax],al
   14003123d:	add    BYTE PTR [rax],al
   14003123f:	add    BYTE PTR [rbp+0x0],cl
   140031242:	(bad)  
   140031243:	add    BYTE PTR [rdx+0x0],ch
   140031246:	outs   dx,DWORD PTR ds:[rsi]
   140031247:	add    BYTE PTR [rdx+0x0],dh
   14003124a:	push   rsi
   14003124b:	add    BYTE PTR [rbp+0x0],ah
   14003124e:	jb     0x140031250
   140031250:	jae    0x140031252
   140031252:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140031260:	add    BYTE PTR [r13+0x0],r13b
   140031264:	(bad)  
   140031265:	add    BYTE PTR [rcx+0x0],ch
   140031268:	ins    BYTE PTR es:[rdi],dx
   140031269:	add    BYTE PTR [rbx+0x0],dl
   14003126c:	je     0x14003126e
   14003126e:	(bad)  
   14003126f:	add    BYTE PTR [rax+rax*1+0x75],dh
   140031273:	add    BYTE PTR [rbx+0x0],dh
   140031276:	add    BYTE PTR [rax],al
   140031278:	push   rbx
   140031279:	add    BYTE PTR [rbp+0x0],dh
   14003127c:	(bad)  
   14003127d:	add    BYTE PTR [rbx+0x0],dh
   140031280:	movsxd eax,DWORD PTR [rax]
   140031282:	jb     0x140031284
   140031284:	imul   eax,DWORD PTR [rax],0x740070
   14003128a:	imul   eax,DWORD PTR [rax],0x6e006f
   140031290:	add    BYTE PTR [r8+r8*1+0x61],bpl
   140031295:	add    BYTE PTR [rbx+0x0],dh
   140031298:	jae    0x14003129a
   14003129a:	imul   eax,DWORD PTR [rax],0x690066
   1400312a0:	movsxd eax,DWORD PTR [rax]
   1400312a2:	(bad)  
   1400312a3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400312a7:	add    BYTE PTR [rdi+0x0],ch
   1400312aa:	outs   dx,BYTE PTR ds:[rsi]
   1400312ab:	add    BYTE PTR [rax],al
   1400312ad:	add    BYTE PTR [rax],al
   1400312af:	add    BYTE PTR [rbx+0x0],dh
   1400312b2:	je     0x1400312b4
   1400312b4:	outs   dx,DWORD PTR ds:[rsi]
   1400312b5:	add    BYTE PTR [rdx+0x0],dh
   1400312b8:	(bad)  
   1400312b9:	add    BYTE PTR [rdi+0x0],ah
   1400312bc:	add    BYTE PTR gs:[rax],al
   1400312bf:	add    BYTE PTR [rbp+0x0],cl
   1400312c2:	(bad)  
   1400312c3:	add    BYTE PTR [rdx+0x0],ch
   1400312c6:	outs   dx,DWORD PTR ds:[rsi]
   1400312c7:	add    BYTE PTR [rdx+0x0],dh
   1400312ca:	(bad)  
   1400312cb:	add    BYTE PTR [rsi+0x0],ch
   1400312ce:	add    BYTE PTR fs:[rbp+0x0],cl
   1400312d2:	imul   eax,DWORD PTR [rax],0x6f006e
   1400312d8:	jb     0x1400312da
   1400312da:	push   rsi
   1400312db:	add    BYTE PTR [rbp+0x0],ah
   1400312de:	jb     0x1400312e0
   1400312e0:	jae    0x1400312e2
   1400312e2:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   1400312f0:	push   rbx
   1400312f1:	add    BYTE PTR [rbp+0x0],dh
   1400312f4:	(bad)  
   1400312f5:	add    BYTE PTR [rbx+0x0],dh
   1400312f8:	movsxd eax,DWORD PTR [rax]
   1400312fa:	jb     0x1400312fc
   1400312fc:	imul   eax,DWORD PTR [rax],0x740070
   140031302:	imul   eax,DWORD PTR [rax],0x6e006f
   140031308:	rex.XB add BYTE PTR [r13+0x0],sil
   14003130c:	jb     0x14003130e
   14003130e:	jb     0x140031310
   140031310:	add    BYTE PTR gs:[rsi+0x0],ch
   140031314:	je     0x140031316
   140031316:	push   rsi
   140031317:	add    BYTE PTR [rbp+0x0],ah
   14003131a:	jb     0x14003131c
   14003131c:	jae    0x14003131e
   14003131e:	imul   eax,DWORD PTR [rax],0x6e006f
   140031324:	add    BYTE PTR [rax],al
   140031326:	add    BYTE PTR [rax],al
   140031328:	push   rbx
   140031329:	add    BYTE PTR [rbp+0x0],dh
   14003132c:	(bad)  
   14003132d:	add    BYTE PTR [rbx+0x0],dh
   140031330:	movsxd eax,DWORD PTR [rax]
   140031332:	jb     0x140031334
   140031334:	imul   eax,DWORD PTR [rax],0x740070
   14003133a:	imul   eax,DWORD PTR [rax],0x6e006f
   140031340:	rex.WR add BYTE PTR [rcx+0x0],r12b
   140031344:	jae    0x140031346
   140031346:	je     0x140031348
   140031348:	push   rbp
   140031349:	add    BYTE PTR [rbx+0x0],dh
   14003134c:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   140031351:	add    BYTE PTR [rbp+0x0],ah
   140031354:	jb     0x140031356
   140031356:	jae    0x140031358
   140031358:	imul   eax,DWORD PTR [rax],0x6e006f
   14003135e:	add    BYTE PTR [rax],al
   140031360:	jae    0x140031362
   140031362:	add    BYTE PTR gs:[rdx+0x0],dh
   140031366:	imul   eax,DWORD PTR [rax],0x6c0061
   14003136c:	jae    0x14003136e
   14003136e:	add    BYTE PTR gs:[rcx+0x0],ah
   140031372:	je     0x140031374
   140031374:	jae    0x140031376
   140031376:	add    BYTE PTR [rax],al
   140031378:	jae    0x14003137a
   14003137a:	jne    0x14003137c
   14003137c:	(bad)  
   14003137d:	add    BYTE PTR [rbx+0x0],dh
   140031380:	movsxd eax,DWORD PTR [rax]
   140031382:	jb     0x140031384
   140031384:	imul   eax,DWORD PTR [rax],0x740070
   14003138a:	imul   eax,DWORD PTR [rax],0x6e006f
   140031390:	jae    0x140031392
   140031392:	add    BYTE PTR gs:[rcx+0x0],ah
   140031396:	je     0x140031398
   140031398:	movsxd eax,DWORD PTR [rax]
   14003139a:	outs   dx,DWORD PTR ds:[rsi]
   14003139b:	add    BYTE PTR [rbp+0x0],dh
   14003139e:	outs   dx,BYTE PTR ds:[rsi]
   14003139f:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400313a3:	add    BYTE PTR [rax],al
   1400313a5:	add    BYTE PTR [rax],al
   1400313a7:	add    BYTE PTR [rbx+0x0],dh
   1400313aa:	jne    0x1400313ac
   1400313ac:	(bad)  
   1400313ad:	add    BYTE PTR [rbx+0x0],dh
   1400313b0:	movsxd eax,DWORD PTR [rax]
   1400313b2:	jb     0x1400313b4
   1400313b4:	imul   eax,DWORD PTR [rax],0x740070
   1400313ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400313c0:	outs   dx,DWORD PTR ds:[rsi]
   1400313c1:	add    BYTE PTR [rdx+0x0],dh
   1400313c4:	imul   eax,DWORD PTR [rax],0x690067
   1400313ca:	outs   dx,BYTE PTR ds:[rsi]
   1400313cb:	add    BYTE PTR [rax],al
   1400313cd:	add    BYTE PTR [rax],al
   1400313cf:	add    BYTE PTR [rax+rax*1+0x4f],dl
   1400313d3:	add    BYTE PTR [rbx+0x0],dl
   1400313d6:	add    BYTE PTR [rcx+0x0],r12b
   1400313da:	jns    0x1400313dc
   1400313dc:	jae    0x1400313de
   1400313de:	push   rdx
   1400313df:	add    BYTE PTR [rbp+0x0],ah
   1400313e2:	ins    DWORD PTR es:[rdi],dx
   1400313e3:	add    BYTE PTR [rcx+0x0],ah
   1400313e6:	imul   eax,DWORD PTR [rax],0x69006e
   1400313ec:	outs   dx,BYTE PTR ds:[rsi]
   1400313ed:	add    BYTE PTR [rdi+0x0],ah
	...
   1400313f8:	movsxd eax,DWORD PTR [rax]
   1400313fa:	outs   dx,DWORD PTR ds:[rsi]
   1400313fb:	add    BYTE PTR [rbp+0x0],ch
   1400313fe:	jo     0x140031400
   140031400:	(bad)  
   140031401:	add    BYTE PTR [rsi+0x0],ch
   140031404:	jns    0x140031406
   140031406:	outs   dx,BYTE PTR ds:[rsi]
   140031407:	add    BYTE PTR [rcx+0x0],ah
   14003140a:	ins    DWORD PTR es:[rdi],dx
   14003140b:	add    BYTE PTR [rbp+0x0],ah
   14003140e:	add    BYTE PTR [rax],al
   140031410:	jne    0x140031412
   140031412:	jae    0x140031414
   140031414:	add    BYTE PTR gs:[rdx+0x0],dh
   140031418:	outs   dx,BYTE PTR ds:[rsi]
   140031419:	add    BYTE PTR [rcx+0x0],ch
   14003141c:	movsxd eax,DWORD PTR [rax]
   14003141e:	imul   eax,DWORD PTR [rax],0x6e
   140031421:	add    BYTE PTR [rcx+0x0],ah
   140031424:	ins    DWORD PTR es:[rdi],dx
   140031425:	add    BYTE PTR [rbp+0x0],ah
	...
   140031430:	jne    0x140031432
   140031432:	jae    0x140031434
   140031434:	add    BYTE PTR gs:[rdx+0x0],dh
   140031438:	jae    0x14003143a
   14003143a:	movsxd eax,DWORD PTR [rax]
   14003143c:	outs   dx,DWORD PTR ds:[rsi]
   14003143d:	add    BYTE PTR [rdx+0x0],dh
   140031440:	add    BYTE PTR gs:[rax],al
   140031443:	add    BYTE PTR [rax],al
   140031445:	add    BYTE PTR [rax],al
   140031447:	add    BYTE PTR [rbx+0x0],al
   14003144a:	outs   dx,DWORD PTR ds:[rsi]
   14003144b:	add    BYTE PTR [rdx+0x0],dh
   14003144e:	add    BYTE PTR gs:[rax+rax*1+0x43],ch
   140031453:	add    BYTE PTR [rdi+0x0],ch
   140031456:	ins    DWORD PTR es:[rdi],dx
   140031457:	add    BYTE PTR [rbx+0x0],dl
   14003145a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003145e:	jbe    0x140031460
   140031460:	add    BYTE PTR gs:[rdx+0x0],dh
   140031464:	add    BYTE PTR [rax],al
   140031466:	add    BYTE PTR [rax],al
   140031468:	movsxd eax,DWORD PTR [rax]
   14003146a:	jb     0x14003146c
   14003146c:	add    BYTE PTR gs:[rcx+0x0],ah
   140031470:	je     0x140031472
   140031472:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140031477:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003147b:	add    BYTE PTR [rsi+0x0],dh
   14003147e:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140031483:	add    BYTE PTR [rax],al
   140031485:	add    BYTE PTR [rax],al
   140031487:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003148b:	add    BYTE PTR [rbx+0x0],dh
   14003148e:	(bad)  
   14003148f:	add    BYTE PTR [rbx+0x0],ah
   140031492:	movsxd eax,DWORD PTR [rax]
   140031494:	add    BYTE PTR gs:[rax+0x0],dh
   140031498:	je     0x14003149a
   14003149a:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14003149f:	add    BYTE PTR [rbp+0x0],ah
   1400314a2:	jb     0x1400314a4
   1400314a4:	jae    0x1400314a6
   1400314a6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400314ac:	add    BYTE PTR [rax],al
   1400314ae:	add    BYTE PTR [rax],al
   1400314b0:	je     0x1400314b2
   1400314b2:	outs   dx,DWORD PTR ds:[rsi]
   1400314b3:	add    BYTE PTR [rbx+0x0],dh
   1400314b6:	movsxd eax,DWORD PTR [rax]
   1400314b8:	jne    0x1400314ba
   1400314ba:	jb     0x1400314bc
   1400314bc:	jb     0x1400314be
   1400314be:	add    BYTE PTR gs:[rsi+0x0],ch
   1400314c2:	je     0x1400314c4
   1400314c4:	push   rsi
   1400314c5:	add    BYTE PTR [rbp+0x0],ah
   1400314c8:	jb     0x1400314ca
   1400314ca:	jae    0x1400314cc
   1400314cc:	imul   eax,DWORD PTR [rax],0x6e006f
   1400314d2:	add    BYTE PTR [rax],al
   1400314d4:	add    BYTE PTR [rax],al
   1400314d6:	add    BYTE PTR [rax],al
   1400314d8:	push   rdi
   1400314d9:	add    BYTE PTR [rdi+0x0],ch
   1400314dc:	jb     0x1400314de
   1400314de:	imul   eax,DWORD PTR [rax],0x66
   1400314e1:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400314e5:	add    BYTE PTR [rdi+0x0],dh
	...
   1400314f0:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400314f4:	jae    0x1400314f6
   1400314f6:	jae    0x1400314f8
   1400314f8:	(bad)  
   1400314f9:	add    BYTE PTR [rdi+0x0],ah
   1400314fc:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   140031508:	and    al,BYTE PTR [rip+0x21993]        # 0x140052ea1
   14003150e:	add    BYTE PTR [rax],al
   140031510:	sbb    al,0x82
   140031512:	add    eax,DWORD PTR [rax]
	...
   14003151c:	add    eax,DWORD PTR [rax]
   14003151e:	add    BYTE PTR [rax],al
   140031520:	sub    al,0x82
   140031522:	add    eax,DWORD PTR [rax]
   140031524:	and    BYTE PTR [rax],al
	...
   14003152e:	add    BYTE PTR [rax],al
   140031530:	and    al,BYTE PTR [rip+0x21993]        # 0x140052ec9
   140031536:	add    BYTE PTR [rax],al
   140031538:	fs (bad) 
   14003153a:	add    eax,DWORD PTR [rax]
	...
   140031544:	add    eax,DWORD PTR [rax]
   140031546:	add    BYTE PTR [rax],al
   140031548:	je     0x1400314cc
   14003154a:	add    eax,DWORD PTR [rax]
   14003154c:	and    BYTE PTR [rax],al
	...
   140031556:	add    BYTE PTR [rax],al
   140031558:	and    al,BYTE PTR [rip+0x11993]        # 0x140042ef1
   14003155e:	add    BYTE PTR [rax],al
   140031560:	int3   
   140031561:	(bad)  
   140031562:	add    eax,DWORD PTR [rax]
	...
   14003156c:	add    eax,DWORD PTR [rax]
   14003156e:	add    BYTE PTR [rax],al
   140031570:	(bad)  
   140031571:	(bad)  
   140031572:	add    eax,DWORD PTR [rax]
   140031574:	sub    BYTE PTR [rax],al
	...
   14003157e:	add    BYTE PTR [rax],al
   140031580:	and    al,BYTE PTR [rip+0x11993]        # 0x140042f19
   140031586:	add    BYTE PTR [rax],al
   140031588:	add    al,0x83
   14003158a:	add    eax,DWORD PTR [rax]
	...
   140031594:	add    eax,DWORD PTR [rax]
   140031596:	add    BYTE PTR [rax],al
   140031598:	or     al,0x83
   14003159a:	add    eax,DWORD PTR [rax]
   14003159c:	cmp    BYTE PTR [rax],al
	...
   1400315a6:	add    BYTE PTR [rax],al
   1400315a8:	and    al,BYTE PTR [rip+0x11993]        # 0x140042f41
   1400315ae:	add    BYTE PTR [rax],al
   1400315b0:	cmp    al,0x83
   1400315b2:	add    eax,DWORD PTR [rax]
	...
   1400315bc:	add    eax,DWORD PTR [rax]
   1400315be:	add    BYTE PTR [rax],al
   1400315c0:	rex.R add DWORD PTR [rbx],0x0
   1400315c4:	cmp    BYTE PTR [rax],al
	...
   1400315ce:	add    BYTE PTR [rax],al
   1400315d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140052f69
   1400315d6:	add    BYTE PTR [rax],al
   1400315d8:	je     0x14003155d
   1400315da:	add    eax,DWORD PTR [rax]
	...
   1400315e4:	add    eax,DWORD PTR [rax]
   1400315e6:	add    BYTE PTR [rax],al
   1400315e8:	test   BYTE PTR [rbx+0x300003],al
	...
   1400315f6:	add    BYTE PTR [rax],al
   1400315f8:	and    al,BYTE PTR [rip+0x21993]        # 0x140052f91
   1400315fe:	add    BYTE PTR [rax],al
   140031600:	mov    esp,0x383
   140031605:	add    BYTE PTR [rax],al
   140031607:	add    BYTE PTR [rax],al
   140031609:	add    BYTE PTR [rax],al
   14003160b:	add    BYTE PTR [rbx],al
   14003160d:	add    BYTE PTR [rax],al
   14003160f:	add    ah,cl
   140031611:	add    DWORD PTR [rbx],0x0
   140031614:	xor    BYTE PTR [rax],al
	...
   14003161e:	add    BYTE PTR [rax],al
   140031620:	and    al,BYTE PTR [rip+0x21993]        # 0x140052fb9
   140031626:	add    BYTE PTR [rax],al
   140031628:	add    al,0x84
   14003162a:	add    eax,DWORD PTR [rax]
	...
   140031634:	add    eax,DWORD PTR [rax]
   140031636:	add    BYTE PTR [rax],al
   140031638:	adc    al,0x84
   14003163a:	add    eax,DWORD PTR [rax]
   14003163c:	xor    BYTE PTR [rax],al
	...
   140031646:	add    BYTE PTR [rax],al
   140031648:	and    al,BYTE PTR [rip+0x21993]        # 0x140052fe1
   14003164e:	add    BYTE PTR [rax],al
   140031650:	push   rax
   140031651:	test   BYTE PTR [rbx],al
	...
   14003165b:	add    BYTE PTR [rip+0x60000000],al        # 0x1a0031661
   140031661:	test   BYTE PTR [rbx],al
   140031663:	add    BYTE PTR [rax+0x0],cl
	...
   14003166e:	add    BYTE PTR [rax],al
   140031670:	and    al,BYTE PTR [rip+0x11993]        # 0x140043009
   140031676:	add    BYTE PTR [rax],al
   140031678:	test   al,0x84
   14003167a:	add    eax,DWORD PTR [rax]
	...
   140031684:	add    eax,DWORD PTR [rax]
   140031686:	add    BYTE PTR [rax],al
   140031688:	mov    al,0x84
   14003168a:	add    eax,DWORD PTR [rax]
   14003168c:	xor    BYTE PTR [rax],al
	...
   140031696:	add    BYTE PTR [rax],al
   140031698:	and    al,BYTE PTR [rip+0x11993]        # 0x140043031
   14003169e:	add    BYTE PTR [rax],al
   1400316a0:	loopne 0x140031626
   1400316a2:	add    eax,DWORD PTR [rax]
	...
   1400316ac:	add    eax,DWORD PTR [rax]
   1400316ae:	add    BYTE PTR [rax],al
   1400316b0:	call   0x170031a39
	...
   1400316bd:	add    BYTE PTR [rax],al
   1400316bf:	add    BYTE PTR [rdx],ah
   1400316c1:	add    eax,0x11993
   1400316c6:	add    BYTE PTR [rax],al
   1400316c8:	sbb    BYTE PTR [rbp+0x3],al
   1400316ce:	add    BYTE PTR [rax],al
   1400316d0:	add    BYTE PTR [rax],al
   1400316d2:	add    BYTE PTR [rax],al
   1400316d4:	add    eax,DWORD PTR [rax]
   1400316d6:	add    BYTE PTR [rax],al
   1400316d8:	and    BYTE PTR [rbp+0x300003],al
	...
   1400316e6:	add    BYTE PTR [rax],al
   1400316e8:	and    al,BYTE PTR [rip+0x11993]        # 0x140043081
   1400316ee:	add    BYTE PTR [rax],al
   1400316f0:	push   rax
   1400316f1:	test   DWORD PTR [rbx],eax
	...
   1400316fb:	add    BYTE PTR [rbx],al
   1400316fd:	add    BYTE PTR [rax],al
   1400316ff:	add    BYTE PTR [rax-0x7b],bl
   140031702:	add    eax,DWORD PTR [rax]
   140031704:	sub    BYTE PTR [rax],al
	...
   14003170e:	add    BYTE PTR [rax],al
   140031710:	and    al,BYTE PTR [rip+0x51993]        # 0x1400830a9
   140031716:	add    BYTE PTR [rax],al
   140031718:	mov    BYTE PTR [rbp+0x3],al
   14003171e:	add    BYTE PTR [rax],al
   140031720:	add    BYTE PTR [rax],al
   140031722:	add    BYTE PTR [rax],al
   140031724:	(bad)  
   140031725:	add    BYTE PTR [rax],al
   140031727:	add    BYTE PTR [rax+0x48000385],dh
	...
   140031735:	add    BYTE PTR [rax],al
   140031737:	add    BYTE PTR [rdx],ah
   140031739:	add    eax,0x11993
   14003173e:	add    BYTE PTR [rax],al
   140031740:	mov    ah,0x81
   140031742:	add    eax,DWORD PTR [rax]
	...
   14003174c:	or     DWORD PTR [rax],eax
   14003174e:	add    BYTE PTR [rax],al
   140031750:	mov    esp,0x50000381
	...
   14003175d:	add    BYTE PTR [rax],al
   14003175f:	add    BYTE PTR [rax+0x1400327],cl
   140031765:	add    BYTE PTR [rax],al
   140031767:	add    BYTE PTR [rax+0x5],ah
   14003176a:	add    al,BYTE PTR [rax+0x1]
	...
   140031775:	add    BYTE PTR [rax],bh
   140031777:	add    BYTE PTR [rax],al
   14003177a:	add    BYTE PTR [rax],al
   14003177c:	add    BYTE PTR [rax+0x4096],al
   140031782:	add    BYTE PTR [rax],al
   140031784:	add    BYTE PTR [rax],bl
   140031786:	cmc    
   140031787:	add    BYTE PTR [rax],al
   14003178a:	add    BYTE PTR [rax+0x414b964c],al
   140031790:	add    BYTE PTR [rax],al
   140031792:	add    BYTE PTR [rax-0x3eb469b4],al
	...
   1400317a4:	add    BYTE PTR [rax],al
   1400317a6:	add    BYTE PTR [rax+0x0],al
   1400317ac:	add    BYTE PTR [rax],al
   1400317ae:	add    BYTE PTR [rax+0x400210d8],al
   1400317b4:	add    DWORD PTR [rax],eax
   1400317b6:	add    BYTE PTR [rax],al
   1400317b8:	and    al,BYTE PTR [rip+0x11993]        # 0x140043151
   1400317be:	add    BYTE PTR [rax],al
   1400317c0:	xor    al,0x86
   1400317c2:	add    eax,DWORD PTR [rax]
	...
   1400317cc:	add    eax,DWORD PTR [rax]
   1400317ce:	add    BYTE PTR [rax],al
   1400317d0:	cmp    al,0x86
   1400317d2:	add    eax,DWORD PTR [rax]
   1400317d4:	and    BYTE PTR [rax],al
   1400317d6:	add    BYTE PTR [rax],al
   1400317d8:	add    BYTE PTR [rax],al
   1400317da:	add    BYTE PTR [rax],al
   1400317dc:	add    DWORD PTR [rax],eax
   1400317de:	add    BYTE PTR [rax],al
   1400317e0:	push   rax
   1400317e1:	sub    BYTE PTR [rbx],al
   1400317e3:	rex add DWORD PTR [rax],eax
   1400317e6:	add    BYTE PTR [rax],al
   1400317e8:	xor    al,0x11
   1400317ea:	add    al,BYTE PTR [rax+0x1]
   1400317ed:	add    BYTE PTR [rax],al
   1400317ef:	add    BYTE PTR [rax],dh
   1400317f1:	sub    DWORD PTR [rbx],eax
   1400317f3:	rex add DWORD PTR [rax],eax
   1400317f6:	add    BYTE PTR [rax],al
   1400317f8:	hlt    
   1400317f9:	(bad)  
   1400317fa:	add    al,BYTE PTR [rax+0x1]
   1400317fd:	add    BYTE PTR [rax],al
   1400317ff:	add    BYTE PTR [rax],dh
   140031801:	(bad)  
   140031802:	add    eax,DWORD PTR [rax+0x1]
   140031805:	add    BYTE PTR [rax],al
   140031807:	add    al,dl
   140031809:	(bad)  
   14003180a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003181d:	add    BYTE PTR [rax],al
   14003181f:	add    BYTE PTR [rax],ch
   140031821:	sub    BYTE PTR [rcx-0x2d],cl
   140031824:	cmp    BYTE PTR [rcx-0x2c],al
   140031827:	rex.WRXB mov r11b,0xec
   14003182a:	fistp  DWORD PTR [rcx-0x7951a1ed]
   140031830:	add    BYTE PTR [r10+0x0],r10b
   140031834:	push   rdx
   140031835:	add    BYTE PTR [rdi+0x0],cl
   140031838:	push   rdx
   140031839:	add    BYTE PTR [rax],ah
   14003183b:	add    BYTE PTR [rdx],bh
   14003183d:	add    BYTE PTR [rax],ah
   14003183f:	add    BYTE PTR [rbp+0x0],dl
   140031842:	outs   dx,BYTE PTR ds:[rsi]
   140031843:	add    BYTE PTR [rcx+0x0],ah
   140031846:	(bad)  
   140031847:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003184b:	add    BYTE PTR [rax],ah
   14003184d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140031851:	add    BYTE PTR [rax],ah
   140031853:	add    BYTE PTR [rcx+0x0],ch
   140031856:	outs   dx,BYTE PTR ds:[rsi]
   140031857:	add    BYTE PTR [rcx+0x0],ch
   14003185a:	je     0x14003185c
   14003185c:	imul   eax,DWORD PTR [rax],0x6c0061
   140031862:	imul   eax,DWORD PTR [rax],0x65007a
   140031868:	and    BYTE PTR [rax],al
   14003186a:	movsxd eax,DWORD PTR [rax]
   14003186c:	jb     0x14003186e
   14003186e:	imul   eax,DWORD PTR [rax],0x690074
   140031874:	movsxd eax,DWORD PTR [rax]
   140031876:	(bad)  
   140031877:	add    BYTE PTR [rax+rax*1+0x20],ch
   14003187b:	add    BYTE PTR [rbx+0x0],dh
   14003187e:	add    BYTE PTR gs:[rbx+0x0],ah
   140031882:	je     0x140031884
   140031884:	imul   eax,DWORD PTR [rax],0x6e006f
   14003188a:	and    BYTE PTR [rax],al
   14003188c:	imul   eax,DWORD PTR [rax],0x20006e
   140031892:	rex.XB add BYTE PTR [r9+0x0],al
   140031896:	je     0x140031898
   140031898:	ins    BYTE PTR es:[rdi],dx
   140031899:	add    BYTE PTR [rdx+0x0],al
   14003189c:	(bad)  
   14003189d:	add    BYTE PTR [rbx+0x0],dh
   1400318a0:	add    BYTE PTR gs:[rbp+0x0],cl
   1400318a4:	outs   dx,DWORD PTR ds:[rsi]
   1400318a5:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400318a9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400318ad:	add    BYTE PTR [rdx],cl
	...
   1400318b7:	add    BYTE PTR [rax+0x3d],ah
   1400318ba:	or     ebx,edi
   1400318bc:	(bad)  
   1400318bd:	push   rsp
   1400318be:	sbb    edx,DWORD PTR [rax]
   1400318c0:	mov    fs,WORD PTR [rbp+0x8]
   1400318c3:	add    BYTE PTR [rbx],ch
   1400318c5:	sub    edx,ecx
   1400318c7:	sbb    DWORD PTR [rax+0x21],edx
   1400318ca:	add    al,BYTE PTR [rax+0x1]
   1400318cd:	add    BYTE PTR [rax],al
   1400318cf:	add    BYTE PTR [rcx],dl
   1400318d1:	clc    
   1400318d2:	nop
   1400318d3:	cmp    r11b,BYTE PTR [rip+0x1f8911d0]        # 0x15f8c2aaa
   1400318da:	add    BYTE PTR [rdx+0x242e4b00],ch
   1400318e0:	xchg   DWORD PTR [rsi+0x737fdc12],esp
   1400318e6:	iret   
   1400318e7:	adc    DWORD PTR [rax+0xaa004d],ecx
   1400318ed:	rex.WXB
   1400318ee:	cs and al,0x70
	...
   140031945:	add    BYTE PTR [rax],al
   140031947:	add    BYTE PTR [rax-0x4e],dl
   14003194a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003195d:	add    BYTE PTR [rax],al
   14003195f:	add    BYTE PTR [rdx+0x53],dl
   140031962:	rex.R push rbx
   140031964:	jrcxz  0x140031981
   140031966:	loope  0x140031917
   140031968:	movnti DWORD PTR [rdx+0x6b179241],ecx
   14003196f:	xchg   esi,eax
   140031970:	push   0x3b
   140031972:	shl    BYTE PTR [rsi+0x3],cl
   140031978:	cmp    r11b,BYTE PTR [rdi+rdx*2+0x41]
   14003197d:	rex.WR
   14003197e:	rex.R
   14003197f:	rex.WRXB pop r12
   140031981:	rex.WB push r8
   140031983:	rex.WRB pop r12
   140031985:	rex.WB push r8
   140031987:	xor    QWORD PTR [r10],r14
   14003198a:	xor    BYTE PTR [rsi+0x31],bh
   14003198d:	xor    DWORD PTR cs:[rcx],esi
   140031990:	xor    DWORD PTR [rax+rdx*2+0x43],ebx
   140031994:	push   rbp
   140031995:	xor    DWORD PTR [rdx],esi
   140031997:	xor    BYTE PTR cs:[rax+rdx*2+0x72],bl
   14003199c:	outs   dx,DWORD PTR ds:[rsi]
   14003199d:	fs jne 0x140031a03
   1400319a0:	je     0x1400319fe
   1400319a2:	(bad)  
   1400319a3:	imul   ebp,DWORD PTR [rsi+0x5c],0x454c4552
   1400319aa:	push   r11
   1400319ac:	rex.RB push r13
   1400319ae:	xor    DWORD PTR [rdx],esi
   1400319b0:	js     0x1400319e8
   1400319b2:	xor    al,0x5c
   1400319b4:	rex.R
   1400319b5:	rex.WB
   1400319b6:	rex.WRB
   1400319b7:	rex.RB pop r8
   1400319b9:	rex.RB
   1400319ba:	cs push rax
   1400319bc:	rex.R
   1400319bd:	rex.X add BYTE PTR [rax],al
   1400319c0:	add    BYTE PTR [rax],al
   1400319c2:	add    BYTE PTR [rax],al
   1400319c4:	add    BYTE PTR [rax],al
   1400319c7:	add    BYTE PTR [rax+0x0],al
	...
   1400319e6:	add    BYTE PTR [rax],al
   1400319e8:	add    DWORD PTR [rax],eax
   1400319ea:	add    BYTE PTR [rax],al
   1400319ec:	clc    
   1400319ed:	sbb    DWORD PTR [rbx],eax
	...
   1400319f7:	add    BYTE PTR [rax],cl
   1400319f9:	sbb    al,BYTE PTR [rbx]
	...
   140031a07:	add    BYTE PTR [rax+0x3b2],dl
   140031a0d:	add    BYTE PTR [rax],al
   140031a0f:	add    BYTE PTR [rax],al
   140031a11:	add    BYTE PTR [rax],al
   140031a13:	add    bh,bh
   140031a15:	(bad)  
   140031a16:	(bad)  
   140031a17:	inc    DWORD PTR [rax]
   140031a19:	add    BYTE PTR [rax],al
   140031a1b:	add    BYTE PTR [rax+0x0],al
   140031a1e:	add    BYTE PTR [rax],al
   140031a20:	loopne 0x140031a3b
   140031a22:	add    eax,DWORD PTR [rax]
	...
   140031a30:	mov    al,0xb2
   140031a32:	add    eax,DWORD PTR [rax]
   140031a34:	add    DWORD PTR [rax],eax
   140031a36:	add    BYTE PTR [rax],al
   140031a38:	add    BYTE PTR [rax],al
   140031a3a:	add    BYTE PTR [rax],al
   140031a3c:	(bad)  
   140031a3d:	(bad)  
   140031a3e:	(bad)  
   140031a3f:	inc    DWORD PTR [rax]
   140031a41:	add    BYTE PTR [rax],al
   140031a43:	add    BYTE PTR [rax+0x0],al
   140031a46:	add    BYTE PTR [rax],al
   140031a48:	pop    rax
   140031a49:	sbb    al,BYTE PTR [rbx]
	...
   140031a5f:	add    BYTE PTR [rdx],al
   140031a61:	add    BYTE PTR [rax],al
   140031a63:	add    BYTE PTR [rax+0x1a],dh
   140031a66:	add    eax,DWORD PTR [rax]
	...
   140031a70:	xor    BYTE PTR [rdx],bl
   140031a72:	add    eax,DWORD PTR [rax]
   140031a74:	or     BYTE PTR [rdx],bl
   140031a76:	add    eax,DWORD PTR [rax]
	...
   140031a88:	add    DWORD PTR [rax],eax
	...
   140031a92:	add    BYTE PTR [rax],al
   140031a94:	fdiv   DWORD PTR [rdx+0x1ab00003]
   140031a9a:	add    eax,DWORD PTR [rax]
   140031a9c:	mov    BYTE PTR [rdx],bl
   140031a9e:	add    eax,DWORD PTR [rax]
	...
   140031ab8:	add    eax,0xc8000000
   140031abd:	sbb    al,BYTE PTR [rbx]
	...
   140031ac7:	add    al,bh
   140031ac9:	sbb    al,BYTE PTR [rbx]
   140031acb:	add    BYTE PTR [rax],ah
   140031acd:	sbb    eax,DWORD PTR [rbx]
   140031acf:	add    BYTE PTR [rax+0x3000031b],cl
   140031ad5:	sbb    al,BYTE PTR [rbx]
   140031ad7:	add    BYTE PTR [rax],cl
   140031ad9:	sbb    al,BYTE PTR [rbx]
	...
   140031af7:	add    al,bl
   140031af9:	mov    dl,0x3
   140031afb:	add    BYTE PTR [rax+rax*1],al
   140031afe:	add    BYTE PTR [rax],al
   140031b00:	add    BYTE PTR [rax],al
   140031b02:	add    BYTE PTR [rax],al
   140031b04:	(bad)  
   140031b05:	(bad)  
   140031b06:	(bad)  
   140031b07:	inc    DWORD PTR [rax]
   140031b09:	add    BYTE PTR [rax],al
   140031b0b:	add    BYTE PTR [rax+0x0],al
   140031b0e:	add    BYTE PTR [rax],al
   140031b10:	mov    al,0x1a
   140031b12:	add    eax,DWORD PTR [rax]
	...
   140031b20:	clc    
   140031b21:	mov    dl,0x3
   140031b23:	add    BYTE PTR [rbx],al
   140031b25:	add    BYTE PTR [rax],al
   140031b27:	add    BYTE PTR [rax],al
   140031b29:	add    BYTE PTR [rax],al
   140031b2b:	add    bh,bh
   140031b2d:	(bad)  
   140031b2e:	(bad)  
   140031b2f:	inc    DWORD PTR [rax]
   140031b31:	add    BYTE PTR [rax],al
   140031b33:	add    BYTE PTR [rax+0x0],al
   140031b36:	add    BYTE PTR [rax],al
   140031b38:	sbb    rax,QWORD PTR [rbx]
	...
   140031b4f:	add    BYTE PTR [rax+rax*1],al
   140031b52:	add    BYTE PTR [rax],al
   140031b54:	(bad)  
   140031b55:	sbb    eax,DWORD PTR [rbx]
	...
   140031b5f:	add    BYTE PTR [rax],ah
   140031b61:	sbb    eax,DWORD PTR [rbx]
   140031b63:	add    BYTE PTR [rax+0x3000031b],cl
   140031b69:	sbb    al,BYTE PTR [rbx]
   140031b6b:	add    BYTE PTR [rax],cl
   140031b6d:	sbb    al,BYTE PTR [rbx]
	...
   140031b87:	add    BYTE PTR [rax],bl
   140031b89:	mov    bl,0x3
   140031b8b:	add    BYTE PTR [rdx],al
   140031b8d:	add    BYTE PTR [rax],al
   140031b8f:	add    BYTE PTR [rax],al
   140031b91:	add    BYTE PTR [rax],al
   140031b93:	add    bh,bh
   140031b95:	(bad)  
   140031b96:	(bad)  
   140031b97:	inc    DWORD PTR [rax]
   140031b99:	add    BYTE PTR [rax],al
   140031b9b:	add    BYTE PTR [rax+0x0],al
   140031b9e:	add    BYTE PTR [rax],al
   140031ba0:	mov    al,0x1b
   140031ba2:	add    eax,DWORD PTR [rax]
	...
   140031bb8:	add    eax,DWORD PTR [rax]
   140031bba:	add    BYTE PTR [rax],al
   140031bbc:	enter  0x31b,0x0
	...
   140031bc8:	mov    BYTE PTR [rbx],bl
   140031bca:	add    eax,DWORD PTR [rax]
   140031bcc:	xor    BYTE PTR [rdx],bl
   140031bce:	add    eax,DWORD PTR [rax]
   140031bd0:	or     BYTE PTR [rdx],bl
   140031bd2:	add    eax,DWORD PTR [rax]
	...
   140031be8:	mov    bl,0x3
   140031beb:	add    BYTE PTR [rdx],al
   140031bed:	add    BYTE PTR [rax],al
   140031bef:	add    BYTE PTR [rax],al
   140031bf1:	add    BYTE PTR [rax],al
   140031bf3:	add    bh,bh
   140031bf5:	(bad)  
   140031bf6:	(bad)  
   140031bf7:	inc    DWORD PTR [rax]
   140031bf9:	add    BYTE PTR [rax],al
   140031bfb:	add    BYTE PTR [rax+0x0],al
   140031bfe:	add    BYTE PTR [rax],al
   140031c00:	adc    BYTE PTR [rbx+rax*1],bl
	...
   140031c17:	add    BYTE PTR [rbx],al
   140031c19:	add    BYTE PTR [rax],al
   140031c1b:	add    BYTE PTR [rax],ch
   140031c1d:	sbb    al,0x3
	...
   140031c27:	add    al,ch
   140031c29:	sbb    eax,DWORD PTR [rbx]
   140031c2b:	add    BYTE PTR [rax],dh
   140031c2d:	sbb    al,BYTE PTR [rbx]
   140031c2f:	add    BYTE PTR [rax],cl
   140031c31:	sbb    al,BYTE PTR [rbx]
	...
   140031c47:	add    BYTE PTR [rcx],al
	...
   140031c51:	add    BYTE PTR [rax],al
   140031c53:	add    BYTE PTR [rax-0x4d],ah
   140031c56:	add    eax,DWORD PTR [rax]
   140031c58:	jo     0x140031c76
   140031c5a:	add    eax,DWORD PTR [rax]
   140031c5c:	rex.W sbb al,0x3
	...
   140031c77:	add    BYTE PTR [rax+rax*1],al
   140031c7a:	add    BYTE PTR [rax],al
   140031c7c:	mov    BYTE PTR [rbx+rax*1],bl
	...
   140031c87:	add    BYTE PTR [rax-0x17fffce4],dh
   140031c8d:	sbb    eax,DWORD PTR [rbx]
   140031c8f:	add    BYTE PTR [rax],dh
   140031c91:	sbb    al,BYTE PTR [rbx]
   140031c93:	add    BYTE PTR [rax],cl
   140031c95:	sbb    al,BYTE PTR [rbx]
	...
   140031caf:	add    BYTE PTR [rax-0x4d],ah
   140031cb2:	add    eax,DWORD PTR [rax]
   140031cb4:	add    eax,DWORD PTR [rax]
   140031cb6:	add    BYTE PTR [rax],al
   140031cb8:	add    BYTE PTR [rax],al
   140031cba:	add    BYTE PTR [rax],al
   140031cbc:	(bad)  
   140031cbd:	(bad)  
   140031cbe:	(bad)  
   140031cbf:	inc    DWORD PTR [rax]
   140031cc1:	add    BYTE PTR [rax],al
   140031cc3:	add    BYTE PTR [rax+0x0],al
   140031cc6:	add    BYTE PTR [rax],al
   140031cc8:	jo     0x140031ce6
   140031cca:	add    eax,DWORD PTR [rax]
	...
   140031cd8:	add    DWORD PTR [rax],eax
	...
   140031ce2:	add    BYTE PTR [rax],al
   140031ce4:	mov    BYTE PTR [rbx+0x1d000003],dh
   140031cea:	add    eax,DWORD PTR [rax]
   140031cec:	fcomp  DWORD PTR [rbx+rax*1]
	...
   140031d07:	add    BYTE PTR [rbx],al
   140031d09:	add    BYTE PTR [rax],al
   140031d0b:	add    BYTE PTR [rax],bl
   140031d0d:	sbb    eax,0x3
   140031d12:	add    BYTE PTR [rax],al
   140031d14:	add    BYTE PTR [rax],al
   140031d16:	add    BYTE PTR [rax],al
   140031d18:	cmp    BYTE PTR [rip+0x1d600003],bl        # 0x15d631d21
   140031d1e:	add    eax,DWORD PTR [rax]
   140031d20:	or     BYTE PTR [rdx],bl
   140031d22:	add    eax,DWORD PTR [rax]
	...
   140031d38:	mov    BYTE PTR [rbx+0x20003],dh
   140031d3e:	add    BYTE PTR [rax],al
   140031d40:	add    BYTE PTR [rax],al
   140031d42:	add    BYTE PTR [rax],al
   140031d44:	(bad)  
   140031d45:	(bad)  
   140031d46:	(bad)  
   140031d47:	inc    DWORD PTR [rax]
   140031d49:	add    BYTE PTR [rax],al
   140031d4b:	add    BYTE PTR [rax+0x0],al
   140031d4e:	add    BYTE PTR [rax],al
   140031d50:	add    BYTE PTR [rip+0x3],bl        # 0x140031d59
	...
   140031d5e:	add    BYTE PTR [rax],al
   140031d60:	mov    eax,0x10003b3
   140031d65:	add    BYTE PTR [rax],al
   140031d67:	add    BYTE PTR [rax],al
   140031d69:	add    BYTE PTR [rax],al
   140031d6b:	add    bh,bh
   140031d6d:	(bad)  
   140031d6e:	(bad)  
   140031d6f:	inc    DWORD PTR [rax]
   140031d71:	add    BYTE PTR [rax],al
   140031d73:	add    BYTE PTR [rax+0x0],al
   140031d76:	add    BYTE PTR [rax],al
   140031d78:	mov    BYTE PTR [rip+0x3],bl        # 0x140031d81
	...
   140031d8e:	add    BYTE PTR [rax],al
   140031d90:	add    al,BYTE PTR [rax]
   140031d92:	add    BYTE PTR [rax],al
   140031d94:	movabs al,ds:0x31d
   140031d9d:	add    BYTE PTR [rax],al
   140031d9f:	add    BYTE PTR [rax+0x1d],ah
   140031da2:	add    eax,DWORD PTR [rax]
   140031da4:	or     BYTE PTR [rdx],bl
   140031da6:	add    eax,DWORD PTR [rax]
	...
   140031db8:	add    DWORD PTR [rax],eax
	...
   140031dc2:	add    BYTE PTR [rax],al
   140031dc4:	loopne 0x140031d79
   140031dc6:	add    eax,DWORD PTR [rax]
   140031dc8:	loopne 0x140031de7
   140031dca:	add    eax,DWORD PTR [rax]
   140031dcc:	mov    eax,0x31d
	...
   140031de5:	add    BYTE PTR [rax],al
   140031de7:	add    BYTE PTR [rbx],al
   140031de9:	add    BYTE PTR [rax],al
   140031deb:	add    al,bh
   140031ded:	sbb    eax,0x3
   140031df2:	add    BYTE PTR [rax],al
   140031df4:	add    BYTE PTR [rax],al
   140031df6:	add    BYTE PTR [rax],al
   140031df8:	sbb    BYTE PTR [rsi],bl
   140031dfa:	add    eax,DWORD PTR [rax]
   140031dfc:	xor    BYTE PTR [rdx],bl
   140031dfe:	add    eax,DWORD PTR [rax]
   140031e00:	or     BYTE PTR [rdx],bl
   140031e02:	add    eax,DWORD PTR [rax]
	...
   140031e18:	loopne 0x140031dcd
   140031e1a:	add    eax,DWORD PTR [rax]
   140031e1c:	add    al,BYTE PTR [rax]
   140031e1e:	add    BYTE PTR [rax],al
   140031e20:	add    BYTE PTR [rax],al
   140031e22:	add    BYTE PTR [rax],al
   140031e24:	(bad)  
   140031e25:	(bad)  
   140031e26:	(bad)  
   140031e27:	inc    DWORD PTR [rax]
   140031e29:	add    BYTE PTR [rax],al
   140031e2b:	add    BYTE PTR [rax+0x0],al
   140031e2e:	add    BYTE PTR [rax],al
   140031e30:	loopne 0x140031e4f
   140031e32:	add    eax,DWORD PTR [rax]
	...
   140031e40:	adc    BYTE PTR [rbx+rax*1+0x300],dh
   140031e47:	add    BYTE PTR [rax],al
   140031e49:	add    BYTE PTR [rax],al
   140031e4b:	add    bh,bh
   140031e4d:	(bad)  
   140031e4e:	(bad)  
   140031e4f:	inc    DWORD PTR [rax]
   140031e51:	add    BYTE PTR [rax],al
   140031e53:	add    BYTE PTR [rax+0x0],al
   140031e56:	add    BYTE PTR [rax],al
   140031e58:	push   0x31e
	...
   140031e6d:	add    BYTE PTR [rax],al
   140031e6f:	add    BYTE PTR [rax+rax*1],al
   140031e72:	add    BYTE PTR [rax],al
   140031e74:	sbb    BYTE PTR [rsi],0x3
	...
   140031e7f:	add    BYTE PTR [rax+0x1e],al
   140031e82:	add    eax,DWORD PTR [rax]
   140031e84:	call   0x1700321a4
   140031e89:	sbb    al,BYTE PTR [rbx]
   140031e8b:	add    BYTE PTR [rax],cl
   140031e8d:	sbb    al,BYTE PTR [rbx]
	...
   140031ea7:	add    BYTE PTR [rcx],al
	...
   140031eb1:	add    BYTE PTR [rax],al
   140031eb3:	add    BYTE PTR [rax],dh
   140031eb5:	mov    ah,0x3
   140031eb7:	add    al,dl
   140031eb9:	(bad)  
   140031eba:	add    eax,DWORD PTR [rax]
   140031ebc:	test   al,0x1e
   140031ebe:	add    eax,DWORD PTR [rax]
	...
   140031ed4:	add    DWORD PTR [rax],eax
   140031ed6:	add    BYTE PTR [rax],al
   140031ed8:	or     al,BYTE PTR [rax]
   140031eda:	add    BYTE PTR [rax],al
   140031edc:	lock (bad) 
   140031ede:	add    eax,DWORD PTR [rax]
	...
   140031ef0:	rex.W (bad) 
   140031ef2:	add    eax,DWORD PTR [rax]
   140031ef4:	jo     0x140031f15
   140031ef6:	add    eax,DWORD PTR [rax]
   140031ef8:	rex (bad) 
   140031efa:	add    eax,DWORD PTR [rax]
   140031efc:	call   0x17003221c
   140031f01:	sbb    al,BYTE PTR [rbx]
   140031f03:	add    BYTE PTR [rax],cl
   140031f05:	sbb    al,BYTE PTR [rbx]
   140031f07:	add    BYTE PTR [rax],al
   140031f09:	and    BYTE PTR [rbx],al
   140031f0b:	add    al,ah
   140031f0d:	and    DWORD PTR [rbx],eax
   140031f0f:	add    BYTE PTR [rax],cl
   140031f11:	and    al,BYTE PTR [rbx]
   140031f13:	add    BYTE PTR [rax],dh
   140031f15:	and    al,BYTE PTR [rbx]
	...
   140031f47:	add    BYTE PTR [rax],dh
   140031f49:	mov    ah,0x3
   140031f4b:	add    BYTE PTR [rcx],cl
   140031f4d:	add    BYTE PTR [rax],al
   140031f4f:	add    BYTE PTR [rax],al
   140031f51:	add    BYTE PTR [rax],al
   140031f53:	add    bh,bh
   140031f55:	(bad)  
   140031f56:	(bad)  
   140031f57:	inc    DWORD PTR [rax]
   140031f59:	add    BYTE PTR [rax],al
   140031f5b:	add    BYTE PTR [rax+0x0],al
   140031f5e:	add    BYTE PTR [rax],al
   140031f60:	rcr    BYTE PTR [rsi],1
   140031f62:	add    eax,DWORD PTR [rax]
	...
   140031f70:	pop    rax
   140031f71:	mov    ah,0x3
   140031f73:	add    BYTE PTR [rax],cl
   140031f75:	add    BYTE PTR [rax],al
   140031f77:	add    BYTE PTR [rax],al
   140031f79:	add    BYTE PTR [rax],al
   140031f7b:	add    bh,bh
   140031f7d:	(bad)  
   140031f7e:	(bad)  
   140031f7f:	inc    DWORD PTR [rax]
   140031f81:	add    BYTE PTR [rax],al
   140031f83:	add    BYTE PTR [rax+0x0],al
   140031f86:	add    BYTE PTR [rax],al
   140031f88:	cwde   
   140031f89:	(bad)  
   140031f8a:	add    eax,DWORD PTR [rax]
	...
   140031f9c:	add    DWORD PTR [rax],eax
   140031f9e:	add    BYTE PTR [rax],al
   140031fa0:	or     DWORD PTR [rax],eax
   140031fa2:	add    BYTE PTR [rax],al
   140031fa4:	mov    al,0x1f
   140031fa6:	add    eax,DWORD PTR [rax]
	...
   140031fb0:	jo     0x140031fd1
   140031fb2:	add    eax,DWORD PTR [rax]
   140031fb4:	rex (bad) 
   140031fb6:	add    eax,DWORD PTR [rax]
   140031fb8:	call   0x1700322d8
   140031fbd:	sbb    al,BYTE PTR [rbx]
   140031fbf:	add    BYTE PTR [rax],cl
   140031fc1:	sbb    al,BYTE PTR [rbx]
   140031fc3:	add    BYTE PTR [rax],al
   140031fc5:	and    BYTE PTR [rbx],al
   140031fc7:	add    al,ah
   140031fc9:	and    DWORD PTR [rbx],eax
   140031fcb:	add    BYTE PTR [rax],cl
   140031fcd:	and    al,BYTE PTR [rbx]
   140031fcf:	add    BYTE PTR [rax],dh
   140031fd1:	and    al,BYTE PTR [rbx]
	...
   140031fff:	add    BYTE PTR [rax+0x30003b4],al
   140032005:	add    BYTE PTR [rax],al
   140032007:	add    BYTE PTR [rax],ah
   140032009:	add    DWORD PTR [rax],eax
   14003200b:	add    bh,bh
   14003200d:	(bad)  
   14003200e:	(bad)  
   14003200f:	inc    DWORD PTR [rax]
   140032011:	add    BYTE PTR [rax],al
   140032013:	add    BYTE PTR [rax+0x0],al
   140032016:	add    BYTE PTR [rax],al
   140032018:	sub    BYTE PTR [rax],ah
   14003201a:	add    eax,DWORD PTR [rax]
	...
   14003202c:	add    DWORD PTR [rax],eax
   14003202e:	add    BYTE PTR [rax],al
   140032030:	add    al,0x0
   140032032:	add    BYTE PTR [rax],al
   140032034:	and    BYTE PTR [rbx],al
	...
   14003203f:	add    BYTE PTR [rax+0x20],ch
   140032042:	add    eax,DWORD PTR [rax]
   140032044:	nop
   140032045:	and    BYTE PTR [rbx],al
   140032047:	add    al,dh
   140032049:	and    BYTE PTR [rbx],al
   14003204b:	add    BYTE PTR [rax+0x21],ch
   14003204e:	add    eax,DWORD PTR [rax]
	...
   140032068:	xor    BYTE PTR [rbx+rax*1+0x300],0x0
   140032070:	add    BYTE PTR [rax],al
   140032072:	add    BYTE PTR [rax],al
   140032074:	(bad)  
   140032075:	(bad)  
   140032076:	(bad)  
   140032077:	inc    DWORD PTR [rax]
   140032079:	add    BYTE PTR [rax],al
   14003207b:	add    BYTE PTR [rax+0x0],al
   14003207e:	add    BYTE PTR [rax],al
   140032080:	sub    BYTE PTR [rax],ah
   140032082:	add    eax,DWORD PTR [rax]
	...
   140032090:	test   al,0xb4
   140032092:	add    eax,DWORD PTR [rax]
   140032094:	add    al,BYTE PTR [rax]
   140032096:	add    BYTE PTR [rax],al
   140032098:	add    BYTE PTR [rax],al
   14003209a:	add    BYTE PTR [rax],al
   14003209c:	(bad)  
   14003209d:	(bad)  
   14003209e:	(bad)  
   14003209f:	inc    DWORD PTR [rax]
   1400320a1:	add    BYTE PTR [rax],al
   1400320a3:	add    BYTE PTR [rax+0x0],al
   1400320a6:	add    BYTE PTR [rax],al
   1400320a8:	mov    eax,0x320
	...
   1400320b9:	add    BYTE PTR [rax],al
   1400320bb:	add    BYTE PTR [rcx],al
   1400320bd:	add    BYTE PTR [rax],al
   1400320bf:	add    BYTE PTR [rbx],al
   1400320c1:	add    BYTE PTR [rax],al
   1400320c3:	add    al,dl
   1400320c5:	and    BYTE PTR [rbx],al
	...
   1400320cf:	add    BYTE PTR [rax-0xffffce0],dl
   1400320d5:	and    BYTE PTR [rbx],al
   1400320d7:	add    BYTE PTR [rax+0x21],ch
   1400320da:	add    eax,DWORD PTR [rax]
	...
   1400320f0:	shl    BYTE PTR [rbx+rax*1+0x0],1
   1400320f7:	add    BYTE PTR [rax],cl
   1400320f9:	add    BYTE PTR [rax],al
   1400320fb:	add    bh,bh
   1400320fd:	(bad)  
   1400320fe:	(bad)  
   1400320ff:	inc    DWORD PTR [rax]
   140032101:	add    BYTE PTR [rax],al
   140032103:	add    BYTE PTR [rax+0x0],al
   140032106:	add    BYTE PTR [rax],al
   140032108:	sbb    BYTE PTR [rcx],ah
   14003210a:	add    eax,DWORD PTR [rax]
	...
   140032120:	add    DWORD PTR [rax],eax
   140032122:	add    BYTE PTR [rax],al
   140032124:	xor    BYTE PTR [rcx],ah
   140032126:	add    eax,DWORD PTR [rax]
	...
   140032130:	rex and DWORD PTR [rbx],eax
	...
   14003213f:	add    al,dl
   140032141:	mov    ah,0x3
	...
   14003214b:	add    bh,bh
   14003214d:	(bad)  
   14003214e:	(bad)  
   14003214f:	inc    DWORD PTR [rax]
   140032151:	add    BYTE PTR [rax],al
   140032153:	add    BYTE PTR [rax+0x0],al
   140032156:	add    BYTE PTR [rax],al
   140032158:	sbb    BYTE PTR [rcx],ah
   14003215a:	add    eax,DWORD PTR [rax]
	...
   140032168:	add    BYTE PTR [rbp+0x3],dh
   14003216e:	add    BYTE PTR [rax],al
   140032170:	or     DWORD PTR [rax],eax
   140032172:	add    BYTE PTR [rax],al
   140032174:	(bad)  
   140032175:	(bad)  
   140032176:	(bad)  
   140032177:	inc    DWORD PTR [rax]
   140032179:	add    BYTE PTR [rax],al
   14003217b:	add    BYTE PTR [rax+0x0],al
   14003217e:	add    BYTE PTR [rax],al
   140032180:	nop
   140032181:	and    DWORD PTR [rbx],eax
	...
   140032197:	add    BYTE PTR [rcx],al
   140032199:	add    BYTE PTR [rax],al
   14003219b:	add    BYTE PTR [rax+0x321],ch
   1400321a1:	add    BYTE PTR [rax],al
   1400321a3:	add    BYTE PTR [rax],al
   1400321a5:	add    BYTE PTR [rax],al
   1400321a7:	add    BYTE PTR [rax+0x321],bh
	...
   1400321b9:	mov    ch,0x3
	...
   1400321c3:	add    bh,bh
   1400321c5:	(bad)  
   1400321c6:	(bad)  
   1400321c7:	inc    DWORD PTR [rax]
   1400321c9:	add    BYTE PTR [rax],al
   1400321cb:	add    BYTE PTR [rax+0x0],al
   1400321ce:	add    BYTE PTR [rax],al
   1400321d0:	nop
   1400321d1:	and    DWORD PTR [rbx],eax
	...
   1400321df:	add    BYTE PTR [rax+0x20003b4],ch
   1400321e5:	add    BYTE PTR [rax],al
   1400321e7:	add    BYTE PTR [rax],ah
   1400321e9:	add    DWORD PTR [rax],eax
   1400321eb:	add    bh,bh
   1400321ed:	(bad)  
   1400321ee:	(bad)  
   1400321ef:	inc    DWORD PTR [rax]
   1400321f1:	add    BYTE PTR [rax],al
   1400321f3:	add    BYTE PTR [rax+0x0],al
   1400321f6:	add    BYTE PTR [rax],al
   1400321f8:	mov    eax,0x320
	...
   140032205:	add    BYTE PTR [rax],al
   140032207:	add    al,dl
   140032209:	mov    ah,0x3
   14003220b:	add    BYTE PTR [rax],al
   14003220d:	add    BYTE PTR [rax],al
   14003220f:	add    BYTE PTR [rax],ch
   140032211:	add    DWORD PTR [rax],eax
   140032213:	add    bh,bh
   140032215:	(bad)  
   140032216:	(bad)  
   140032217:	inc    DWORD PTR [rax]
   140032219:	add    BYTE PTR [rax],al
   14003221b:	add    BYTE PTR [rax+0x0],al
   14003221e:	add    BYTE PTR [rax],al
   140032220:	sbb    BYTE PTR [rcx],ah
   140032222:	add    eax,DWORD PTR [rax]
	...
   140032230:	add    BYTE PTR [rbp+0x3],dh
   140032236:	add    BYTE PTR [rax],al
   140032238:	sub    DWORD PTR [rcx],eax
   14003223a:	add    BYTE PTR [rax],al
   14003223c:	(bad)  
   14003223d:	(bad)  
   14003223e:	(bad)  
   14003223f:	inc    DWORD PTR [rax]
   140032241:	add    BYTE PTR [rax],al
   140032243:	add    BYTE PTR [rax+0x0],al
   140032246:	add    BYTE PTR [rax],al
   140032248:	nop
   140032249:	and    DWORD PTR [rbx],eax
	...
   140032257:	add    BYTE PTR [rcx],al
   140032259:	add    BYTE PTR [rax],al
   14003225b:	add    BYTE PTR [rax],ah
   14003225d:	add    DWORD PTR [rax],eax
   14003225f:	add    BYTE PTR [rax],al
   140032261:	add    BYTE PTR [rax],al
   140032263:	add    BYTE PTR [rax],dh
   140032265:	mov    ah,0x3
   140032267:	add    al,dl
   140032269:	(bad)  
   14003226a:	add    eax,DWORD PTR [rax]
   14003226c:	pop    rax
   14003226d:	and    al,BYTE PTR [rbx]
	...
   14003227f:	add    BYTE PTR [rcx],al
	...
   140032289:	add    BYTE PTR [rax],al
   14003228b:	add    BYTE PTR [rax],dh
   14003228d:	mov    ch,0x3
   14003228f:	add    BYTE PTR [rax-0x7ffffcde],ch
   140032295:	and    al,BYTE PTR [rbx]
	...
   1400322ab:	add    BYTE PTR [rcx],al
   1400322ad:	add    BYTE PTR [rax],al
   1400322af:	add    BYTE PTR [rbx],cl
   1400322b1:	add    BYTE PTR [rax],al
   1400322b3:	add    al,al
   1400322b5:	and    al,BYTE PTR [rbx]
	...
   1400322bf:	add    BYTE PTR [rax],ah
   1400322c1:	and    eax,DWORD PTR [rbx]
   1400322c3:	add    BYTE PTR [rax+0x1f],cl
   1400322c6:	add    eax,DWORD PTR [rax]
   1400322c8:	jo     0x1400322e9
   1400322ca:	add    eax,DWORD PTR [rax]
   1400322cc:	rex (bad) 
   1400322ce:	add    eax,DWORD PTR [rax]
   1400322d0:	call   0x1700325f0
   1400322d5:	sbb    al,BYTE PTR [rbx]
   1400322d7:	add    BYTE PTR [rax],cl
   1400322d9:	sbb    al,BYTE PTR [rbx]
   1400322db:	add    BYTE PTR [rax],al
   1400322dd:	and    BYTE PTR [rbx],al
   1400322df:	add    al,ah
   1400322e1:	and    DWORD PTR [rbx],eax
   1400322e3:	add    BYTE PTR [rax],cl
   1400322e5:	and    al,BYTE PTR [rbx]
   1400322e7:	add    BYTE PTR [rax],dh
   1400322e9:	and    al,BYTE PTR [rbx]
	...
   14003231f:	add    BYTE PTR [rax],dh
   140032321:	mov    ch,0x3
   140032323:	add    BYTE PTR [rdx],cl
   140032325:	add    BYTE PTR [rax],al
   140032327:	add    BYTE PTR [rax],al
   140032329:	add    BYTE PTR [rax],al
   14003232b:	add    bh,bh
   14003232d:	(bad)  
   14003232e:	(bad)  
   14003232f:	inc    DWORD PTR [rax]
   140032331:	add    BYTE PTR [rax],al
   140032333:	add    BYTE PTR [rax+0x0],al
   140032336:	add    BYTE PTR [rax],al
   140032338:	test   al,0x22
   14003233a:	add    eax,DWORD PTR [rax]
	...
   140032348:	add    DWORD PTR [rax],eax
   14003234a:	add    BYTE PTR [rax],al
   14003234c:	and    BYTE PTR [rcx],al
   14003234e:	add    BYTE PTR [rax],al
   140032350:	add    BYTE PTR [rax],al
   140032352:	add    BYTE PTR [rax],al
   140032354:	xor    BYTE PTR [rbp+0x22a80003],dh
   14003235a:	add    eax,DWORD PTR [rax]
   14003235c:	and    rax,QWORD PTR [rbx]
	...
   14003236f:	add    BYTE PTR [rcx],al
	...
   140032379:	add    BYTE PTR [rax],al
   14003237b:	add    BYTE PTR [rax-0x4b],bl
   14003237e:	add    eax,DWORD PTR [rax]
   140032380:	cwde   
   140032381:	and    eax,DWORD PTR [rbx]
   140032383:	add    BYTE PTR [rax+0x23],dh
   140032386:	add    eax,DWORD PTR [rax]
	...
   1400323a0:	add    DWORD PTR [rax],eax
   1400323a2:	add    BYTE PTR [rax],al
   1400323a4:	mov    al,0x23
   1400323a6:	add    eax,DWORD PTR [rax]
	...
   1400323b0:	shl    BYTE PTR [rbx],0x3
	...
   1400323bf:	add    BYTE PTR [rax-0x4b],bl
   1400323c2:	add    eax,DWORD PTR [rax]
	...
   1400323cc:	(bad)  
   1400323cd:	(bad)  
   1400323ce:	(bad)  
   1400323cf:	inc    DWORD PTR [rax]
   1400323d1:	add    BYTE PTR [rax],al
   1400323d3:	add    BYTE PTR [rax+0x0],al
   1400323d6:	add    BYTE PTR [rax],al
   1400323d8:	cwde   
   1400323d9:	and    eax,DWORD PTR [rbx]
	...
   1400323e7:	add    BYTE PTR [rcx],al
	...
   1400323f1:	add    BYTE PTR [rax],al
   1400323f3:	add    BYTE PTR [rax+0x100003b5],cl
   1400323f9:	and    al,0x3
   1400323fb:	add    al,ch
   1400323fd:	and    eax,DWORD PTR [rbx]
	...
   140032413:	add    BYTE PTR [rcx],al
   140032415:	add    BYTE PTR [rax],al
   140032417:	add    BYTE PTR [rax+rax*1],cl
   14003241a:	add    BYTE PTR [rax],al
   14003241c:	xor    BYTE PTR [rbx+rax*1],ah
	...
   14003242f:	add    BYTE PTR [rax+0x48000324],bl
   140032435:	(bad)  
   140032436:	add    eax,DWORD PTR [rax]
   140032438:	jo     0x140032459
   14003243a:	add    eax,DWORD PTR [rax]
   14003243c:	rex (bad) 
   14003243e:	add    eax,DWORD PTR [rax]
   140032440:	call   0x170032760
   140032445:	sbb    al,BYTE PTR [rbx]
   140032447:	add    BYTE PTR [rax],cl
   140032449:	sbb    al,BYTE PTR [rbx]
   14003244b:	add    BYTE PTR [rax],al
   14003244d:	and    BYTE PTR [rbx],al
   14003244f:	add    al,ah
   140032451:	and    DWORD PTR [rbx],eax
   140032453:	add    BYTE PTR [rax],cl
   140032455:	and    al,BYTE PTR [rbx]
   140032457:	add    BYTE PTR [rax],dh
   140032459:	and    al,BYTE PTR [rbx]
   14003245b:	add    al,al
   14003245d:	and    al,0x3
	...
   140032497:	add    BYTE PTR [rax+0xb0003b5],cl
   14003249d:	add    BYTE PTR [rax],al
   14003249f:	add    BYTE PTR [rax],al
   1400324a1:	add    BYTE PTR [rax],al
   1400324a3:	add    bh,bh
   1400324a5:	(bad)  
   1400324a6:	(bad)  
   1400324a7:	inc    DWORD PTR [rax]
   1400324a9:	add    BYTE PTR [rax],al
   1400324ab:	add    BYTE PTR [rax+0x0],al
   1400324ae:	add    BYTE PTR [rax],al
   1400324b0:	adc    BYTE PTR [rbx+rax*1],ah
	...
   1400324bf:	add    BYTE PTR [rax-0x4b],bl
   1400324c2:	add    eax,DWORD PTR [rax]
   1400324c4:	add    BYTE PTR [rax],al
   1400324c6:	add    BYTE PTR [rax],al
   1400324c8:	adc    BYTE PTR [rbx],al
   1400324ca:	add    BYTE PTR [rax],al
   1400324cc:	(bad)  
   1400324cd:	(bad)  
   1400324ce:	(bad)  
   1400324cf:	inc    DWORD PTR [rax]
   1400324d1:	add    BYTE PTR [rax],al
   1400324d3:	add    BYTE PTR [rax+0x0],al
   1400324d6:	add    BYTE PTR [rax],al
   1400324d8:	cwde   
   1400324d9:	and    eax,DWORD PTR [rbx]
	...
   1400324e7:	add    BYTE PTR [rcx],al
   1400324e9:	add    BYTE PTR [rax],al
   1400324eb:	add    BYTE PTR [rax],ah
   1400324ed:	add    DWORD PTR [rax],eax
   1400324ef:	add    BYTE PTR [rax],al
   1400324f1:	add    BYTE PTR [rax],al
   1400324f3:	add    BYTE PTR [rax+0x100003b5],cl
   1400324f9:	and    al,0x3
   1400324fb:	add    al,ch
   1400324fd:	and    al,0x3
	...
   14003250f:	add    BYTE PTR [rcx],al
   140032511:	add    BYTE PTR [rax],al
   140032513:	add    BYTE PTR [rax],dl
   140032515:	add    eax,DWORD PTR [rax]
   140032517:	add    BYTE PTR [rax],al
   140032519:	add    BYTE PTR [rax],al
   14003251b:	add    BYTE PTR [rax+0x100003b5],cl
   140032521:	and    al,0x3
   140032523:	add    BYTE PTR [rax],dl
   140032525:	and    eax,0x3
	...
   140032536:	add    BYTE PTR [rax],al
   140032538:	add    DWORD PTR [rax],eax
	...
   140032542:	add    BYTE PTR [rax],al
   140032544:	loopne 0x1400324fb
   140032546:	add    eax,DWORD PTR [rax]
   140032548:	(bad)  
   140032549:	and    eax,0x25380003
   14003254e:	add    eax,DWORD PTR [rax]
	...
   140032568:	add    DWORD PTR [rax],eax
   14003256a:	add    BYTE PTR [rax],al
   14003256c:	js     0x140032593
   14003256e:	add    eax,DWORD PTR [rax]
	...
   140032578:	mov    BYTE PTR [rip+0x3],ah        # 0x140032581
	...
   140032586:	add    BYTE PTR [rax],al
   140032588:	loopne 0x14003253f
   14003258a:	add    eax,DWORD PTR [rax]
	...
   140032594:	(bad)  
   140032595:	(bad)  
   140032596:	(bad)  
   140032597:	inc    DWORD PTR [rax]
   140032599:	add    BYTE PTR [rax],al
   14003259b:	add    BYTE PTR [rax+0x0],al
   14003259e:	add    BYTE PTR [rax],al
   1400325a0:	(bad)  
   1400325a1:	and    eax,0x3
	...
   1400325ae:	add    BYTE PTR [rax],al
   1400325b0:	add    DWORD PTR [rax],eax
	...
   1400325ba:	add    BYTE PTR [rax],al
   1400325bc:	add    BYTE PTR [rsi+0x25d80003],dh
   1400325c2:	add    eax,DWORD PTR [rax]
   1400325c4:	mov    al,0x25
   1400325c6:	add    eax,DWORD PTR [rax]
	...
   1400325e0:	add    al,BYTE PTR [rax]
   1400325e2:	add    BYTE PTR [rax],al
   1400325e4:	lock and eax,0x3
   1400325ea:	add    BYTE PTR [rax],al
   1400325ec:	add    BYTE PTR [rax],al
   1400325ee:	add    BYTE PTR [rax],al
   1400325f0:	or     BYTE PTR [rsi],ah
   1400325f2:	add    eax,DWORD PTR [rax]
   1400325f4:	xor    BYTE PTR [rsi],ah
   1400325f6:	add    eax,DWORD PTR [rax]
	...
   140032608:	add    BYTE PTR [rsi+0x10003],dh
   14003260e:	add    BYTE PTR [rax],al
   140032610:	add    BYTE PTR [rax],al
   140032612:	add    BYTE PTR [rax],al
   140032614:	(bad)  
   140032615:	(bad)  
   140032616:	(bad)  
   140032617:	inc    DWORD PTR [rax]
   140032619:	add    BYTE PTR [rax],al
   14003261b:	add    BYTE PTR [rax+0x0],al
   14003261e:	add    BYTE PTR [rax],al
   140032620:	fsub   DWORD PTR [rip+0x3]        # 0x140032629
	...
   14003262e:	add    BYTE PTR [rax],al
   140032630:	cmp    BYTE PTR [rsi+0x3],dh
   140032636:	add    BYTE PTR [rax],al
   140032638:	or     BYTE PTR [rax],al
   14003263a:	add    BYTE PTR [rax],al
   14003263c:	(bad)  
   14003263d:	(bad)  
   14003263e:	(bad)  
   14003263f:	inc    DWORD PTR [rax]
   140032641:	add    BYTE PTR [rax],al
   140032643:	add    BYTE PTR [rax+0x0],al
   140032646:	add    BYTE PTR [rax],al
   140032648:	pop    rax
   140032649:	add    eax,DWORD PTR es:[rax]
	...
   140032660:	add    DWORD PTR [rax],eax
   140032662:	add    BYTE PTR [rax],al
   140032664:	jo     0x14003268c
   140032666:	add    eax,DWORD PTR [rax]
	...
   140032670:	and    BYTE PTR [rsi],0x3
	...
   14003267f:	add    BYTE PTR [rax],bh
   140032681:	mov    dh,0x3
	...
   14003268b:	add    bh,bh
   14003268d:	(bad)  
   14003268e:	(bad)  
   14003268f:	inc    DWORD PTR [rax]
   140032691:	add    BYTE PTR [rax],al
   140032693:	add    BYTE PTR [rax+0x0],al
   140032696:	add    BYTE PTR [rax],al
   140032698:	pop    rax
   140032699:	add    eax,DWORD PTR es:[rax]
	...
   1400326b0:	add    al,BYTE PTR [rax]
   1400326b2:	add    BYTE PTR [rax],al
   1400326b4:	shl    BYTE PTR [rsi],0x3
	...
   1400326bf:	add    al,bl
   1400326c1:	add    eax,DWORD PTR es:[rax]
   1400326c4:	or     BYTE PTR [rdx],bl
   1400326c6:	add    eax,DWORD PTR [rax]
	...
   1400326d8:	push   0x10003b6
   1400326dd:	add    BYTE PTR [rax],al
   1400326df:	add    BYTE PTR [rax],al
   1400326e1:	add    BYTE PTR [rax],al
   1400326e3:	add    bh,bh
   1400326e5:	(bad)  
   1400326e6:	(bad)  
   1400326e7:	inc    DWORD PTR [rax]
   1400326e9:	add    BYTE PTR [rax],al
   1400326eb:	add    BYTE PTR [rax+0x0],al
   1400326ee:	add    BYTE PTR [rax],al
   1400326f0:	test   al,0x26
   1400326f2:	add    eax,DWORD PTR [rax]
	...
   140032700:	add    DWORD PTR [rax],eax
	...
   14003270a:	add    BYTE PTR [rax],al
   14003270c:	nop
   14003270d:	mov    dh,0x3
   14003270f:	add    BYTE PTR [rax],ch
   140032711:	(bad)  
   140032712:	add    eax,DWORD PTR [rax]
   140032714:	add    BYTE PTR [rdi],ah
   140032716:	add    eax,DWORD PTR [rax]
	...
   140032730:	add    eax,DWORD PTR [rax]
   140032732:	add    BYTE PTR [rax],al
   140032734:	rex (bad) 
   140032736:	add    eax,DWORD PTR [rax]
	...
   140032740:	(bad)  
   140032741:	(bad)  
   140032742:	add    eax,DWORD PTR [rax]
   140032744:	fsub   DWORD PTR [rsi]
   140032746:	add    eax,DWORD PTR [rax]
   140032748:	or     BYTE PTR [rdx],bl
   14003274a:	add    eax,DWORD PTR [rax]
	...
   140032760:	nop
   140032761:	mov    dh,0x3
   140032763:	add    BYTE PTR [rdx],al
   140032765:	add    BYTE PTR [rax],al
   140032767:	add    BYTE PTR [rax],al
   140032769:	add    BYTE PTR [rax],al
   14003276b:	add    bh,bh
   14003276d:	(bad)  
   14003276e:	(bad)  
   14003276f:	inc    DWORD PTR [rax]
   140032771:	add    BYTE PTR [rax],al
   140032773:	add    BYTE PTR [rax+0x0],al
   140032776:	add    BYTE PTR [rax],al
   140032778:	sub    BYTE PTR [rdi],ah
   14003277a:	add    eax,DWORD PTR [rax]
	...
   140032788:	add    DWORD PTR [rax],eax
	...
   140032792:	add    BYTE PTR [rax],al
   140032794:	mov    eax,0xb00003b6
   140032799:	(bad)  
   14003279a:	add    eax,DWORD PTR [rax]
   14003279c:	mov    BYTE PTR [rdi],ah
   14003279e:	add    eax,DWORD PTR [rax]
	...
   1400327b8:	add    DWORD PTR [rax],eax
   1400327ba:	add    BYTE PTR [rax],al
   1400327bc:	enter  0x327,0x0
	...
   1400327c8:	fsub   DWORD PTR [rdi]
   1400327ca:	add    eax,DWORD PTR [rax]
	...
   1400327d8:	mov    eax,0x3b6
   1400327dd:	add    BYTE PTR [rax],al
   1400327df:	add    BYTE PTR [rax],al
   1400327e1:	add    BYTE PTR [rax],al
   1400327e3:	add    bh,bh
   1400327e5:	(bad)  
   1400327e6:	(bad)  
   1400327e7:	inc    DWORD PTR [rax]
   1400327e9:	add    BYTE PTR [rax],al
   1400327eb:	add    BYTE PTR [rax+0x0],al
   1400327ee:	add    BYTE PTR [rax],al
   1400327f0:	mov    al,0x27
   1400327f2:	add    eax,DWORD PTR [rax]
	...
   140032808:	add    DWORD PTR [rax],eax
   14003280a:	add    BYTE PTR [rax],al
   14003280c:	sbb    BYTE PTR [rax],ch
   14003280e:	add    eax,DWORD PTR [rax]
	...
   140032818:	sub    BYTE PTR [rax],ch
   14003281a:	add    eax,DWORD PTR [rax]
	...
   140032828:	loopne 0x1400327e0
   14003282a:	add    eax,DWORD PTR [rax]
	...
   140032834:	(bad)  
   140032835:	(bad)  
   140032836:	(bad)  
   140032837:	inc    DWORD PTR [rax]
   140032839:	add    BYTE PTR [rax],al
   14003283b:	add    BYTE PTR [rax+0x0],al
   14003283e:	add    BYTE PTR [rax],al
   140032840:	add    BYTE PTR [rax],ch
   140032842:	add    eax,DWORD PTR [rax]
	...
   140032850:	add    DWORD PTR [rax],eax
	...
   14003285a:	add    BYTE PTR [rax],al
   14003285c:	or     BYTE PTR [rdi+0x28780003],dh
   140032862:	add    eax,DWORD PTR [rax]
   140032864:	push   rax
   140032865:	sub    BYTE PTR [rbx],al
	...
   14003287f:	add    BYTE PTR [rbx],al
   140032881:	add    BYTE PTR [rax],al
   140032883:	add    BYTE PTR [rax+0x328],dl
   140032889:	add    BYTE PTR [rax],al
   14003288b:	add    BYTE PTR [rax],al
   14003288d:	add    BYTE PTR [rax],al
   14003288f:	add    BYTE PTR [rax-0x27fffcd8],dh
   140032895:	sub    BYTE PTR [rbx],al
   140032897:	add    BYTE PTR [rax],ch
   140032899:	sub    BYTE PTR [rbx],al
	...
   1400328af:	add    BYTE PTR [rax],cl
   1400328b1:	mov    bh,0x3
   1400328b3:	add    BYTE PTR [rdx],al
   1400328b5:	add    BYTE PTR [rax],al
   1400328b7:	add    BYTE PTR [rax],al
   1400328b9:	add    BYTE PTR [rax],al
   1400328bb:	add    bh,bh
   1400328bd:	(bad)  
   1400328be:	(bad)  
   1400328bf:	inc    DWORD PTR [rax]
   1400328c1:	add    BYTE PTR [rax],al
   1400328c3:	add    BYTE PTR [rax+0x0],al
   1400328c6:	add    BYTE PTR [rax],al
   1400328c8:	js     0x1400328f2
   1400328ca:	add    eax,DWORD PTR [rax]
	...
   1400328d8:	cmp    BYTE PTR [rdi+0x10003],dh
   1400328de:	add    BYTE PTR [rax],al
   1400328e0:	add    BYTE PTR [rax],al
   1400328e2:	add    BYTE PTR [rax],al
   1400328e4:	(bad)  
   1400328e5:	(bad)  
   1400328e6:	(bad)  
   1400328e7:	inc    DWORD PTR [rax]
   1400328e9:	add    BYTE PTR [rax],al
   1400328eb:	add    BYTE PTR [rax+0x0],al
   1400328ee:	add    BYTE PTR [rax],al
   1400328f0:	add    BYTE PTR [rcx],ch
   1400328f2:	add    eax,DWORD PTR [rax]
	...
   140032908:	add    al,BYTE PTR [rax]
   14003290a:	add    BYTE PTR [rax],al
   14003290c:	sbb    BYTE PTR [rcx],ch
   14003290e:	add    eax,DWORD PTR [rax]
	...
   140032918:	fsubr  DWORD PTR [rax]
   14003291a:	add    eax,DWORD PTR [rax]
   14003291c:	sub    BYTE PTR [rax],ch
   14003291e:	add    eax,DWORD PTR [rax]
	...
   140032930:	add    DWORD PTR [rax],eax
	...
   14003293a:	add    BYTE PTR [rax],al
   14003293c:	(bad)  
   14003293d:	mov    bh,0x3
   14003293f:	add    BYTE PTR [rax+0x29],bl
   140032942:	add    eax,DWORD PTR [rax]
   140032944:	xor    BYTE PTR [rcx],ch
   140032946:	add    eax,DWORD PTR [rax]
	...
   140032960:	add    DWORD PTR [rax],eax
   140032962:	add    BYTE PTR [rax],al
   140032964:	jo     0x14003298f
   140032966:	add    eax,DWORD PTR [rax]
	...
   140032970:	sub    BYTE PTR [rcx],0x3
	...
   14003297f:	add    BYTE PTR [rax-0x49],ah
   140032982:	add    eax,DWORD PTR [rax]
	...
   14003298c:	(bad)  
   14003298d:	(bad)  
   14003298e:	(bad)  
   14003298f:	inc    DWORD PTR [rax]
   140032991:	add    BYTE PTR [rax],al
   140032993:	add    BYTE PTR [rax+0x0],al
   140032996:	add    BYTE PTR [rax],al
   140032998:	pop    rax
   140032999:	sub    DWORD PTR [rbx],eax
	...
   1400329c7:	add    BYTE PTR [rcx],al
   1400329c9:	adc    al,BYTE PTR [rcx]
   1400329cb:	add    BYTE PTR [rdx],dl
   1400329cd:	rex.X add BYTE PTR [rax],al
   1400329d0:	add    DWORD PTR [rax],ecx
   1400329d2:	add    DWORD PTR [rax],eax
   1400329d4:	or     BYTE PTR [rdx+0x0],al
   1400329d7:	add    BYTE PTR [rcx],bl
   1400329d9:	sbb    eax,0xa20e0001
   1400329de:	add    BYTE PTR [rax],al
   1400329e0:	(bad)  
   1400329e1:	(bad)  
   1400329e2:	add    al,BYTE PTR [rax]
   1400329e4:	rex.W add BYTE PTR [rax],al
   1400329e7:	add    BYTE PTR [rcx],dl
   1400329e9:	sbb    al,0x1
   1400329eb:	add    BYTE PTR [rbx],dl
   1400329ed:	movabs ds:0x7b50000216ec0000,al
   1400329f6:	add    al,BYTE PTR [rax]
   1400329f8:	(bad)  
   1400329f9:	(bad)  
   1400329fa:	(bad)  
   1400329fb:	(bad)  
   1400329fc:	stc    
   1400329fd:	add    al,BYTE PTR es:[rax]
   140032a00:	add    BYTE PTR [rax],al
   140032a02:	add    BYTE PTR [rax],al
   140032a04:	loopne 0x140032a2c
   140032a06:	add    al,BYTE PTR [rax]
   140032a08:	nop
   140032a09:	sub    al,0x0
   140032a0b:	add    bh,bh
   140032a0d:	(bad)  
   140032a0e:	(bad)  
   140032a0f:	dec    esi
   140032a11:	sub    al,0x0
   140032a13:	add    BYTE PTR [rcx],al
   140032a15:	add    BYTE PTR [rax],al
   140032a17:	add    BYTE PTR [rsi],dh
   140032a19:	sub    eax,0x0
   140032a1e:	add    BYTE PTR [rax],al
   140032a20:	sbb    DWORD PTR [rdi],ebx
   140032a22:	add    eax,DWORD PTR [rax]
   140032a24:	adc    dl,al
   140032a26:	or     al,0x70
   140032a28:	or     esp,DWORD PTR [rax+0x0]
   140032a2b:	add    BYTE PTR [rax+0x17],ah
   140032a2e:	add    al,BYTE PTR [rax]
   140032a30:	pop    rax
   140032a31:	add    BYTE PTR [rax],al
   140032a33:	add    BYTE PTR [rcx],bl
   140032a35:	sbb    eax,0xc20e0001
   140032a3a:	add    BYTE PTR [rax],al
   140032a3c:	(bad)  
   140032a3d:	(bad)  
   140032a3e:	add    al,BYTE PTR [rax]
   140032a40:	push   rax
   140032a41:	add    BYTE PTR [rax],al
   140032a43:	add    BYTE PTR [rcx],al
   140032a45:	(bad)  
   140032a46:	add    DWORD PTR [rax],eax
   140032a48:	(bad)  
   140032a49:	rex.X add BYTE PTR [rax],al
   140032a4c:	sbb    DWORD PTR [rip+0xffffffffa20e0001],ebx        # 0xe2112a53
   140032a52:	add    BYTE PTR [rax],al
   140032a54:	(bad)  
   140032a55:	(bad)  
   140032a56:	add    al,BYTE PTR [rax]
   140032a58:	add    BYTE PTR [rax],al
   140032a5b:	add    BYTE PTR [rcx],dl
   140032a5d:	and    DWORD PTR [rcx],eax
   140032a5f:	add    BYTE PTR [rax],bl
   140032a61:	movabs ds:0x7b80000216ec0000,al
   140032a6a:	add    al,BYTE PTR [rax]
   140032a6c:	(bad)  
   140032a6d:	(bad)  
   140032a6e:	(bad)  
   140032a6f:	jmp    QWORD PTR [rax]
   140032a71:	(bad)  
   140032a72:	add    al,BYTE PTR [rax]
   140032a74:	add    BYTE PTR [rax],al
   140032a76:	add    BYTE PTR [rax],al
   140032a78:	rex.RXB (bad) 
   140032a7a:	add    al,BYTE PTR [rax]
   140032a7c:	add    BYTE PTR [rax],al
   140032a7e:	add    BYTE PTR [rax],al
   140032a80:	(bad)  
   140032a81:	(bad)  
   140032a82:	add    al,BYTE PTR [rax]
   140032a84:	add    al,BYTE PTR [rax]
   140032a86:	add    BYTE PTR [rax],al
   140032a88:	js     0x140032ab1
   140032a8a:	add    al,BYTE PTR [rax]
   140032a8c:	add    al,BYTE PTR [rax]
   140032a8e:	add    BYTE PTR [rax],al
   140032a90:	xchg   ecx,eax
   140032a91:	(bad)  
   140032a92:	add    al,BYTE PTR [rax]
   140032a94:	push   rax
   140032a95:	(bad)  
   140032a96:	add    BYTE PTR [rax],al
   140032a98:	(bad)  
   140032a99:	(bad)  
   140032a9a:	(bad)  
   140032a9b:	call   FWORD PTR [rbx+0x2f]
   140032aa1:	add    BYTE PTR [rax],al
   140032aa3:	add    BYTE PTR [rax-0xffffd1],dh
   140032aa9:	(bad)  
   140032aaa:	(bad)  
   140032aab:	dec    edi
   140032aad:	(bad)  
   140032aae:	add    BYTE PTR [rax],al
   140032ab0:	add    DWORD PTR [rax],eax
   140032ab2:	add    BYTE PTR [rax],al
   140032ab4:	(bad)  
   140032ab5:	(bad)  
   140032ab6:	add    BYTE PTR [rax],al
   140032ab8:	add    BYTE PTR [rax],al
   140032aba:	add    BYTE PTR [rax],al
   140032abc:	adc    esi,DWORD PTR [rax]
   140032abe:	add    BYTE PTR [rax],al
   140032ac0:	add    DWORD PTR [rax],eax
   140032ac2:	add    BYTE PTR [rax],al
   140032ac4:	xor    BYTE PTR [rax],dh
   140032ac6:	add    BYTE PTR [rax],al
   140032ac8:	add    BYTE PTR [rax],al
   140032aca:	add    BYTE PTR [rax],al
   140032acc:	xor    BYTE PTR [r8],r8b
   140032acf:	add    bh,bh
   140032ad1:	(bad)  
   140032ad2:	(bad)  
   140032ad3:	call   QWORD PTR [rax+0x30]
   140032ad6:	add    BYTE PTR [rax],al
   140032ad8:	add    al,BYTE PTR [rax]
   140032ada:	add    BYTE PTR [rax],al
   140032adc:	mov    DWORD PTR [rax],esi
   140032ade:	add    BYTE PTR [rax],al
   140032ae0:	add    eax,DWORD PTR [rax]
   140032ae2:	add    BYTE PTR [rax],al
   140032ae4:	mov    eax,0x2000030
   140032ae9:	add    BYTE PTR [rax],al
   140032aeb:	add    ah,al
   140032aed:	xor    BYTE PTR [rax],al
   140032aef:	add    BYTE PTR [rax],al
   140032af1:	add    BYTE PTR [rax],al
   140032af3:	add    al,bl
   140032af5:	xor    BYTE PTR [rax],al
   140032af7:	add    BYTE PTR [rbx],al
   140032af9:	add    BYTE PTR [rax],al
   140032afb:	add    ch,dh
   140032afd:	xor    BYTE PTR [rax],al
   140032aff:	add    BYTE PTR [rdx],al
   140032b01:	add    BYTE PTR [rax],al
   140032b03:	add    BYTE PTR [rcx],al
   140032b05:	xor    DWORD PTR [rax],eax
   140032b07:	add    BYTE PTR [rax],al
   140032b09:	add    BYTE PTR [rax],al
   140032b0b:	add    BYTE PTR [rdx],dl
   140032b0d:	xor    DWORD PTR [rax],eax
   140032b0f:	add    BYTE PTR [rdx],al
   140032b11:	add    BYTE PTR [rax],al
   140032b13:	add    BYTE PTR [rbx],ch
   140032b15:	xor    DWORD PTR [rax],eax
   140032b17:	add    BYTE PTR [rax+rax*1],al
   140032b1a:	add    BYTE PTR [rax],al
   140032b1c:	rex.RX xor DWORD PTR [rax],r8d
   140032b1f:	add    BYTE PTR [rdx],al
   140032b21:	add    BYTE PTR [rax],al
   140032b23:	add    BYTE PTR [rdx+0x31],dl
   140032b26:	add    BYTE PTR [rax],al
   140032b28:	add    BYTE PTR [rax],al
   140032b2a:	add    BYTE PTR [rax],al
   140032b2c:	adc    DWORD PTR [rdx],edx
   140032b2e:	add    DWORD PTR [rax],eax
   140032b30:	or     DWORD PTR [rdx+0x0],esp
   140032b33:	add    ah,ch
   140032b35:	(bad)  
   140032b36:	add    al,BYTE PTR [rax]
   140032b38:	mov    al,0x7b
   140032b3a:	add    al,BYTE PTR [rax]
   140032b3c:	(bad)  
   140032b3d:	(bad)  
   140032b3e:	(bad)  
   140032b3f:	push   QWORD PTR [rax+0x26]
   140032b42:	add    al,BYTE PTR [rax]
   140032b44:	add    BYTE PTR [rax],al
   140032b46:	add    BYTE PTR [rax],al
   140032b48:	mov    BYTE PTR [rsi],ah
   140032b4a:	add    al,BYTE PTR [rax]
   140032b4c:	add    DWORD PTR [rax],eax
   140032b4e:	add    BYTE PTR [rax],al
   140032b50:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032b51:	add    al,BYTE PTR es:[rax]
   140032b54:	add    al,BYTE PTR [rax]
   140032b56:	add    BYTE PTR [rax],al
   140032b58:	ret    0x226
   140032b5b:	add    BYTE PTR [rax],ah
   140032b5d:	sub    eax,DWORD PTR [rax]
   140032b5f:	add    bh,bh
   140032b61:	(bad)  
   140032b62:	(bad)  
   140032b63:	push   QWORD PTR [rdx]
   140032b65:	sub    eax,DWORD PTR [rax]
   140032b67:	add    BYTE PTR [rdx],al
   140032b69:	add    BYTE PTR [rax],al
   140032b6b:	add    BYTE PTR [rbp+0x2b],al
   140032b6e:	add    BYTE PTR [rax],al
   140032b70:	add    DWORD PTR [rax],eax
   140032b72:	add    BYTE PTR [rax],al
   140032b74:	pop    rax
   140032b75:	sub    eax,DWORD PTR [rax]
   140032b77:	add    BYTE PTR [rax],al
   140032b79:	add    BYTE PTR [rax],al
   140032b7b:	add    BYTE PTR [rbx+0x2b],ch
   140032b7e:	add    BYTE PTR [rax],al
   140032b80:	(bad)  
   140032b81:	(bad)  
   140032b82:	(bad)  
   140032b83:	call   QWORD PTR [rcx]
   140032b85:	adc    al,BYTE PTR [rcx]
   140032b87:	add    BYTE PTR [rcx],cl
   140032b89:	movabs ds:0x7990000216ec0000,al
   140032b92:	add    al,BYTE PTR [rax]
   140032b94:	(bad)  
   140032b95:	(bad)  
   140032b96:	(bad)  
   140032b97:	jmp    QWORD PTR [rax+0x22]
   140032b9a:	add    al,BYTE PTR [rax]
   140032b9c:	add    BYTE PTR [rax],al
   140032b9e:	add    BYTE PTR [rax],al
   140032ba0:	js     0x140032bc4
   140032ba2:	add    al,BYTE PTR [rax]
   140032ba4:	add    DWORD PTR [rax],eax
   140032ba6:	add    BYTE PTR [rax],al
   140032ba8:	xchg   edi,eax
   140032ba9:	and    al,BYTE PTR [rdx]
   140032bab:	add    BYTE PTR [rdx],al
   140032bad:	add    BYTE PTR [rax],al
   140032baf:	add    BYTE PTR [rsi-0x6ffffdde],dh
   140032bb5:	adc    eax,DWORD PTR [rax]
   140032bb7:	add    bh,bh
   140032bb9:	(bad)  
   140032bba:	(bad)  
   140032bbb:	jmp    FWORD PTR [rdi+0x13]
   140032bc1:	add    BYTE PTR [rax],al
   140032bc3:	add    dl,dl
   140032bc5:	adc    eax,DWORD PTR [rax]
   140032bc7:	add    BYTE PTR [rcx],al
   140032bc9:	add    BYTE PTR [rax],al
   140032bcb:	add    dh,ah
   140032bcd:	adc    eax,DWORD PTR [rax]
   140032bcf:	add    BYTE PTR [rdx],al
   140032bd1:	add    BYTE PTR [rax],al
   140032bd3:	add    BYTE PTR [rip+0x3000014],ah        # 0x143032bed
   140032bd9:	add    BYTE PTR [rax],al
   140032bdb:	add    BYTE PTR [rbx],bh
   140032bdd:	adc    al,0x0
   140032bdf:	add    BYTE PTR [rdx],al
   140032be1:	add    BYTE PTR [rax],al
   140032be3:	add    BYTE PTR [rsi+0x14],dl
   140032be6:	add    BYTE PTR [rax],al
   140032be8:	(bad)  
   140032be9:	(bad)  
   140032bea:	(bad)  
   140032beb:	inc    DWORD PTR [rcx]
   140032bed:	(bad)  
   140032bee:	add    al,BYTE PTR [rax]
   140032bf0:	(bad)  
   140032bf1:	xor    al,BYTE PTR [rdx]
   140032bf3:	push   rax
   140032bf4:	add    DWORD PTR [rsi],eax
   140032bf6:	add    al,BYTE PTR [rax]
   140032bf8:	(bad)  
   140032bf9:	xor    al,BYTE PTR [rdx]
   140032bfb:	push   rax
   140032bfc:	add    DWORD PTR [rsi],eax
   140032bfe:	add    al,BYTE PTR [rax]
   140032c00:	(bad)  
   140032c01:	xor    al,BYTE PTR [rdx]
   140032c03:	push   rax
   140032c04:	add    DWORD PTR [rsi],eax
   140032c06:	add    al,BYTE PTR [rax]
   140032c08:	(bad)  
   140032c09:	xor    al,BYTE PTR [rdx]
   140032c0b:	push   rax
   140032c0c:	adc    DWORD PTR [rdx],edx
   140032c0e:	add    DWORD PTR [rax],eax
   140032c10:	or     DWORD PTR [rdx+0x16ec0000],eax
   140032c16:	add    al,BYTE PTR [rax]
   140032c18:	mov    eax,0xff000279
   140032c1d:	(bad)  
   140032c1e:	(bad)  
   140032c1f:	dec    edi
   140032c21:	and    al,BYTE PTR [rdx]
   140032c23:	add    BYTE PTR [rax],al
   140032c25:	add    BYTE PTR [rax],al
   140032c27:	add    bh,ah
   140032c29:	and    al,BYTE PTR [rdx]
   140032c2b:	add    BYTE PTR [rcx],al
   140032c2d:	add    BYTE PTR [rax],al
   140032c2f:	add    BYTE PTR [rsi],al
   140032c31:	and    eax,DWORD PTR [rdx]
   140032c33:	add    BYTE PTR [rax+0x14],dh
   140032c36:	add    BYTE PTR [rax],al
   140032c38:	(bad)  
   140032c39:	(bad)  
   140032c3a:	(bad)  
   140032c3b:	call   QWORD PTR [rcx+0x2000014]
   140032c41:	add    BYTE PTR [rax],al
   140032c43:	add    BYTE PTR [rip+0x1000015],al        # 0x141032c5e
   140032c49:	add    BYTE PTR [rax],al
   140032c4b:	add    BYTE PTR [rcx],bl
   140032c4d:	adc    eax,0x0
   140032c52:	add    BYTE PTR [rax],al
   140032c54:	sub    eax,0xff000015
   140032c59:	(bad)  
   140032c5a:	(bad)  
   140032c5b:	inc    DWORD PTR [rcx]
   140032c5d:	(bad)  
   140032c5e:	add    al,BYTE PTR [rax]
   140032c60:	(bad)  
   140032c61:	xor    al,BYTE PTR [rdx]
   140032c63:	push   rax
   140032c64:	add    DWORD PTR [rsi],eax
   140032c66:	add    al,BYTE PTR [rax]
   140032c68:	(bad)  
   140032c69:	xor    al,BYTE PTR [rdx]
   140032c6b:	push   rax
   140032c6c:	add    DWORD PTR [rsi],eax
   140032c6e:	add    al,BYTE PTR [rax]
   140032c70:	(bad)  
   140032c71:	xor    al,BYTE PTR [rdx]
   140032c73:	push   rax
   140032c74:	sbb    DWORD PTR [rax],ebx
   140032c76:	add    al,BYTE PTR [rax]
   140032c78:	or     al,0x1
   140032c7a:	sbb    eax,0x216ec00
   140032c7f:	add    al,ah
   140032c81:	jns    0x140032c85
   140032c83:	add    bh,bh
   140032c85:	(bad)  
   140032c86:	(bad)  
   140032c87:	jmp    QWORD PTR [rip+0x223]        # 0x140032eb0
   140032c8d:	add    BYTE PTR [rax],al
   140032c8f:	add    BYTE PTR [rax],al
   140032c91:	add    BYTE PTR [rax],al
   140032c93:	add    BYTE PTR [rcx],al
   140032c95:	add    BYTE PTR [rax],al
   140032c97:	add    BYTE PTR [rsi],bh
   140032c99:	and    eax,DWORD PTR [rdx]
   140032c9b:	add    BYTE PTR [rdx],al
   140032c9d:	add    BYTE PTR [rax],al
   140032c9f:	add    BYTE PTR [rsi+0x23],dl
   140032ca2:	add    al,BYTE PTR [rax]
   140032ca4:	add    DWORD PTR [rax],eax
   140032ca6:	add    BYTE PTR [rax],al
   140032ca8:	push   rsi
   140032ca9:	and    eax,DWORD PTR [rdx]
	...
   140032cb7:	add    BYTE PTR [rbx+0x6000223],bl
   140032cbd:	add    BYTE PTR [rax],al
   140032cbf:	add    BYTE PTR [rdi+0x223],dh
   140032cc5:	add    BYTE PTR [rax],al
   140032cc7:	add    BYTE PTR [rdi+0x223],dh
   140032ccd:	add    BYTE PTR [rax],al
   140032ccf:	add    BYTE PTR [rax],al
   140032cd1:	add    BYTE PTR [rax],al
   140032cd3:	add    BYTE PTR [rcx],cl
   140032cd5:	add    BYTE PTR [rax],al
   140032cd7:	add    dl,dl
   140032cd9:	and    eax,DWORD PTR [rdx]
	...
   140032ce3:	add    BYTE PTR [rcx],al
   140032ce5:	add    BYTE PTR [rax],al
   140032ce7:	add    BYTE PTR [rax+rax*1],al
   140032cea:	add    BYTE PTR [rax],al
   140032cec:	add    eax,0x1000000
   140032cf1:	add    BYTE PTR [rax],al
   140032cf3:	add    BYTE PTR [rbp*1+0x90003],cl
   140032cfa:	add    BYTE PTR [rax],al
   140032cfc:	or     al,BYTE PTR [rax]
   140032cfe:	add    BYTE PTR [rax],al
   140032d00:	or     eax,DWORD PTR [rax]
   140032d02:	add    BYTE PTR [rax],al
   140032d04:	add    DWORD PTR [rax],eax
   140032d06:	add    BYTE PTR [rax],al
   140032d08:	and    BYTE PTR [rip+0x3],ch        # 0x140032d11
	...
   140032d16:	add    BYTE PTR [rax],al
   140032d18:	and    BYTE PTR [rbx],0x2
   140032d1b:	add    BYTE PTR [rax+0x0],cl
	...
   140032d2a:	add    BYTE PTR [rax],al
   140032d2c:	in     eax,dx
   140032d2d:	and    eax,DWORD PTR [rdx]
   140032d2f:	add    BYTE PTR [rax+0x0],cl
   140032d32:	add    BYTE PTR [rax],al
   140032d34:	push   rax
   140032d35:	adc    eax,0xffff0000
   140032d3a:	(bad)  
   140032d3b:	push   QWORD PTR [rdi]
   140032d3d:	(bad)  
   140032d3e:	add    BYTE PTR [rax],al
   140032d40:	add    BYTE PTR [rax],al
   140032d42:	add    BYTE PTR [rax],al
   140032d44:	mov    esi,0xff000016
   140032d49:	(bad)  
   140032d4a:	(bad)  
   140032d4b:	call   rdx
   140032d4d:	(bad)  
   140032d4e:	add    BYTE PTR [rax],al
   140032d50:	add    BYTE PTR [rax],al
   140032d52:	add    BYTE PTR [rax],al
   140032d54:	call   QWORD PTR [rsi]
   140032d56:	add    BYTE PTR [rax],al
   140032d58:	add    DWORD PTR [rax],eax
   140032d5a:	add    BYTE PTR [rax],al
   140032d5c:	(bad)  
   140032d5d:	(bad)  
   140032d5e:	add    BYTE PTR [rax],al
   140032d60:	add    al,BYTE PTR [rax]
   140032d62:	add    BYTE PTR [rax],al
   140032d64:	rex.XB (bad) 
   140032d66:	add    BYTE PTR [rax],al
   140032d68:	add    eax,DWORD PTR [rax]
   140032d6a:	add    BYTE PTR [rax],al
   140032d6c:	test   BYTE PTR [rdi],dl
   140032d6e:	add    BYTE PTR [rax],al
   140032d70:	add    al,BYTE PTR [rax]
   140032d72:	add    BYTE PTR [rax],al
   140032d74:	lea    edx,[rdi]
   140032d76:	add    BYTE PTR [rax],al
   140032d78:	add    eax,DWORD PTR [rax]
   140032d7a:	add    BYTE PTR [rax],al
   140032d7c:	(bad)  
   140032d7d:	(bad)  
   140032d7e:	add    BYTE PTR [rax],al
   140032d80:	add    al,0x0
   140032d82:	add    BYTE PTR [rax],al
   140032d84:	mov    cl,0x17
   140032d86:	add    BYTE PTR [rax],al
   140032d88:	add    DWORD PTR [rax],eax
   140032d8a:	add    BYTE PTR [rax],al
   140032d8c:	rcl    BYTE PTR [rdi],1
   140032d8e:	add    BYTE PTR [rax],al
   140032d90:	add    BYTE PTR [rax],al
   140032d92:	add    BYTE PTR [rax],al
   140032d94:	sbb    BYTE PTR ss:[rax],al
   140032d97:	add    BYTE PTR [rsi],al
   140032d99:	add    BYTE PTR [rax],al
   140032d9b:	add    BYTE PTR [rax+0x18],ah
   140032d9e:	add    BYTE PTR [rax],al
   140032da0:	or     BYTE PTR [rax],al
   140032da2:	add    BYTE PTR [rax],al
   140032da4:	jl     0x140032dbe
   140032da6:	add    BYTE PTR [rax],al
   140032da8:	add    BYTE PTR [rax],al
   140032daa:	add    BYTE PTR [rax],al
   140032dac:	lahf   
   140032dad:	sbb    BYTE PTR [rax],al
   140032daf:	add    bh,bh
   140032db1:	(bad)  
   140032db2:	(bad)  
   140032db3:	push   QWORD PTR [rbp+0x9000018]
   140032db9:	add    BYTE PTR [rax],al
   140032dbb:	add    dh,ah
   140032dbd:	sbb    BYTE PTR [rax],al
   140032dbf:	add    BYTE PTR [rdx],cl
   140032dc1:	add    BYTE PTR [rax],al
   140032dc3:	add    BYTE PTR [rdi],cl
   140032dc5:	sbb    DWORD PTR [rax],eax
   140032dc7:	add    BYTE PTR [rcx],cl
   140032dc9:	add    BYTE PTR [rax],al
   140032dcb:	add    BYTE PTR [rip+0x19],bl        # 0x140032dea
   140032dd1:	add    BYTE PTR [rax],al
   140032dd3:	add    BYTE PTR [rdi],ah
   140032dd5:	sbb    DWORD PTR [rax],eax
   140032dd7:	add    bh,bh
   140032dd9:	(bad)  
   140032dda:	(bad)  
   140032ddb:	inc    DWORD PTR [rax+0x223]
   140032de1:	add    BYTE PTR [rax],al
   140032de3:	add    dl,bh
   140032de5:	and    eax,DWORD PTR [rdx]
   140032de7:	add    BYTE PTR [rbx],cl
   140032de9:	add    BYTE PTR [rax],al
   140032deb:	add    BYTE PTR [rdx],dl
   140032ded:	and    al,0x2
   140032def:	add    BYTE PTR [rax],al
   140032df1:	add    BYTE PTR [rax],al
   140032df3:	add    BYTE PTR [rcx],al
   140032df5:	(bad)  
   140032df6:	add    al,BYTE PTR [rax]
   140032df8:	(bad)  
   140032df9:	xor    al,BYTE PTR [rdx]
   140032dfb:	push   rax
   140032dfc:	add    DWORD PTR [rsi],eax
   140032dfe:	add    al,BYTE PTR [rax]
   140032e00:	(bad)  
   140032e01:	xor    al,BYTE PTR [rdx]
   140032e03:	push   rax
   140032e04:	add    DWORD PTR [rsi],eax
   140032e06:	add    al,BYTE PTR [rax]
   140032e08:	(bad)  
   140032e09:	xor    al,BYTE PTR [rdx]
   140032e0b:	push   rax
   140032e0c:	sbb    DWORD PTR [rdx],ecx
   140032e0e:	add    al,BYTE PTR [rax]
   140032e10:	or     dl,BYTE PTR [rdx+0x6]
   140032e13:	push   rax
   140032e14:	in     al,dx
   140032e15:	(bad)  
   140032e16:	add    al,BYTE PTR [rax]
   140032e18:	loopne 0x140032e93
   140032e1a:	add    al,BYTE PTR [rax]
   140032e1c:	add    DWORD PTR [rsi],eax
   140032e1e:	add    al,BYTE PTR [rax]
   140032e20:	(bad)  
   140032e21:	xor    al,BYTE PTR [rdx]
   140032e23:	push   rax
   140032e24:	add    DWORD PTR [rsi],eax
   140032e26:	add    al,BYTE PTR [rax]
   140032e28:	(bad)  
   140032e29:	xor    al,BYTE PTR [rdx]
   140032e2b:	push   rax
   140032e2c:	add    DWORD PTR [rsi],eax
   140032e2e:	add    al,BYTE PTR [rax]
   140032e30:	(bad)  
   140032e31:	xor    al,BYTE PTR [rdx]
   140032e33:	push   rax
   140032e34:	sbb    DWORD PTR [rdx],ecx
   140032e36:	add    al,BYTE PTR [rax]
   140032e38:	or     dl,BYTE PTR [rdx+0x6]
   140032e3b:	push   rax
   140032e3c:	in     al,dx
   140032e3d:	(bad)  
   140032e3e:	add    al,BYTE PTR [rax]
   140032e40:	loopne 0x140032ebb
   140032e42:	add    al,BYTE PTR [rax]
   140032e44:	add    DWORD PTR [rcx],ecx
   140032e46:	add    DWORD PTR [rax],eax
   140032e48:	or     DWORD PTR [rdx+0x0],eax
   140032e4b:	add    BYTE PTR [rcx],dl
   140032e4d:	adc    al,BYTE PTR [rcx]
   140032e4f:	add    BYTE PTR [rcx],cl
   140032e51:	ret    0x0
   140032e54:	in     al,dx
   140032e55:	(bad)  
   140032e56:	add    al,BYTE PTR [rax]
   140032e58:	or     BYTE PTR [rdx+0x2],bh
   140032e5b:	add    bh,bh
   140032e5d:	(bad)  
   140032e5e:	(bad)  
   140032e5f:	jmp    QWORD PTR [rax]
   140032e61:	and    al,0x2
   140032e63:	add    bh,bh
   140032e65:	(bad)  
   140032e66:	(bad)  
   140032e67:	(bad)  
   140032e68:	cmp    DWORD PTR [rdx+rax*1],esp
   140032e6b:	add    BYTE PTR [rax+0x19],dh
   140032e6e:	add    BYTE PTR [rax],al
   140032e70:	(bad)  
   140032e71:	(bad)  
   140032e72:	(bad)  
   140032e73:	push   QWORD PTR [rdi+0x19]
   140032e79:	add    BYTE PTR [rax],al
   140032e7b:	add    ch,cl
   140032e7d:	sbb    DWORD PTR [rax],eax
   140032e7f:	add    bh,bh
   140032e81:	(bad)  
   140032e82:	(bad)  
   140032e83:	call   FWORD PTR [rdx+rbx*1]
   140032e86:	add    BYTE PTR [rax],al
   140032e88:	add    DWORD PTR [rax],eax
   140032e8a:	add    BYTE PTR [rax],al
   140032e8c:	xor    bl,BYTE PTR [rdx]
   140032e8e:	add    BYTE PTR [rax],al
   140032e90:	(bad)  
   140032e91:	(bad)  
   140032e92:	(bad)  
   140032e93:	inc    DWORD PTR [rcx]
   140032e95:	(bad)  
   140032e96:	add    al,BYTE PTR [rax]
   140032e98:	(bad)  
   140032e99:	xor    al,BYTE PTR [rdx]
   140032e9b:	push   rax
   140032e9c:	add    DWORD PTR [rsi],eax
   140032e9e:	add    al,BYTE PTR [rax]
   140032ea0:	(bad)  
   140032ea1:	xor    al,BYTE PTR [rdx]
   140032ea3:	push   rax
   140032ea4:	sbb    DWORD PTR [rbx],ebp
   140032ea6:	add    eax,DWORD PTR [rax]
   140032ea8:	or     eax,0x6013e01
   140032ead:	jo     0x140032eaf
   140032eaf:	add    ah,ah
   140032eb1:	(bad)  
   140032eb2:	add    al,BYTE PTR [rax]
   140032eb4:	xor    BYTE PTR [rdx+0x2],bh
   140032eb7:	add    dl,ah
   140032eb9:	or     DWORD PTR [rax],eax
   140032ebb:	add    bh,bh
   140032ebd:	(bad)  
   140032ebe:	(bad)  
   140032ebf:	call   QWORD PTR [rdx+0x24]
   140032ec2:	add    al,BYTE PTR [rax]
   140032ec4:	add    BYTE PTR [rax],al
   140032ec6:	add    BYTE PTR [rax],al
   140032ec8:	imul   esp,DWORD PTR [rdx+rax*1],0x0
   140032ecc:	add    DWORD PTR [rax],eax
   140032ece:	add    BYTE PTR [rax],al
   140032ed0:	test   BYTE PTR [rdx+rax*1],ah
   140032ed3:	add    BYTE PTR [rax],al
   140032ed5:	add    BYTE PTR [rax],al
   140032ed7:	add    BYTE PTR [rdi+0x3000224],bl
   140032edd:	add    BYTE PTR [rax],al
   140032edf:	add    BYTE PTR [rdx+0x4000224],bh
   140032ee5:	add    BYTE PTR [rax],al
   140032ee7:	add    ch,dl
   140032ee9:	and    al,0x2
   140032eeb:	add    BYTE PTR [rip+0xffffffffee000000],al        # 0x12e032ef1
   140032ef1:	and    al,0x2
   140032ef3:	add    BYTE PTR [rax+rax*1],al
   140032ef6:	add    BYTE PTR [rax],al
   140032ef8:	out    dx,al
   140032ef9:	and    al,0x2
   140032efb:	add    BYTE PTR [rax-0xffffe6],dh
   140032f01:	(bad)  
   140032f02:	(bad)  
   140032f03:	jmp    FWORD PTR [rbp+0x1b]
   140032f06:	add    BYTE PTR [rax],al
   140032f08:	add    BYTE PTR [rax],al
   140032f0a:	add    BYTE PTR [rax],al
   140032f0c:	cli    
   140032f0d:	sbb    eax,DWORD PTR [rax]
   140032f0f:	add    BYTE PTR [rcx],al
   140032f11:	add    BYTE PTR [rax],al
   140032f13:	add    BYTE PTR [rbx+0x1c],dl
   140032f19:	add    BYTE PTR [rax],al
   140032f1b:	add    BYTE PTR [rdi-0xffffe4],bl
   140032f21:	(bad)  
   140032f22:	(bad)  
   140032f23:	push   QWORD PTR [rsp+rbx*1+0x10000]
   140032f2a:	add    BYTE PTR [rax],al
   140032f2c:	cmp    al,0x1d
   140032f2e:	add    BYTE PTR [rax],al
   140032f30:	add    al,BYTE PTR [rax]
   140032f32:	add    BYTE PTR [rax],al
   140032f34:	push   rsp
   140032f35:	sbb    eax,0x10000
   140032f3a:	add    BYTE PTR [rax],al
   140032f3c:	(bad)  
   140032f3d:	sbb    eax,0x0
   140032f42:	add    BYTE PTR [rax],al
   140032f44:	outs   dx,BYTE PTR ds:[rsi]
   140032f45:	sbb    eax,0xffff0000
   140032f4a:	(bad)  
   140032f4b:	inc    DWORD PTR [rbx+0x100001d]
   140032f51:	add    BYTE PTR [rax],al
   140032f53:	add    BYTE PTR [rcx+0x1d],dl
   140032f59:	add    BYTE PTR [rax],al
   140032f5b:	add    bh,bl
   140032f5d:	sbb    eax,0x30000
   140032f62:	add    BYTE PTR [rax],al
   140032f64:	in     eax,dx
   140032f65:	sbb    eax,0x40000
   140032f6a:	add    BYTE PTR [rax],al
   140032f6c:	rex.RXB (bad) 
   140032f6e:	add    BYTE PTR [rax],al
   140032f70:	add    eax,DWORD PTR [rax]
   140032f72:	add    BYTE PTR [rax],al
   140032f74:	push   rbp
   140032f75:	(bad)  
   140032f76:	add    BYTE PTR [rax],al
   140032f78:	add    BYTE PTR [rax],al
   140032f7a:	add    BYTE PTR [rax],al
   140032f7c:	movsxd ebx,DWORD PTR [rsi]
   140032f7e:	add    BYTE PTR [rax],al
   140032f80:	(bad)  
   140032f81:	(bad)  
   140032f82:	(bad)  
   140032f83:	(bad)  
   140032f84:	js     0x140032fa4
   140032f86:	add    BYTE PTR [rax],al
   140032f88:	add    al,0x0
   140032f8a:	add    BYTE PTR [rax],al
   140032f8c:	clc    
   140032f8d:	(bad)  
   140032f8e:	add    BYTE PTR [rax],al
   140032f90:	add    eax,0x22000000
   140032f95:	(bad)  
   140032f96:	add    BYTE PTR [rax],al
   140032f98:	(bad)  
   140032f99:	add    BYTE PTR [rax],al
   140032f9b:	add    BYTE PTR [rsi],dl
   140032f9d:	and    BYTE PTR [rax],al
   140032f9f:	add    BYTE PTR [rax+rax*1],al
   140032fa2:	add    BYTE PTR [rax],al
   140032fa4:	(bad)  
   140032fa5:	and    BYTE PTR [rax],al
   140032fa7:	add    BYTE PTR [rbx],al
   140032fa9:	add    BYTE PTR [rax],al
   140032fab:	add    BYTE PTR [rsi+0x20],ch
   140032fae:	add    BYTE PTR [rax],al
   140032fb0:	add    BYTE PTR [rax],al
   140032fb2:	add    BYTE PTR [rax],al
   140032fb4:	jl     0x140032fd6
   140032fb6:	add    BYTE PTR [rax],al
   140032fb8:	(bad)  
   140032fb9:	(bad)  
   140032fba:	(bad)  
   140032fbb:	call   QWORD PTR [rax+0x4000020]
   140032fc1:	add    BYTE PTR [rax],al
   140032fc3:	add    ch,dl
   140032fc5:	and    BYTE PTR [rax],al
   140032fc7:	add    BYTE PTR [rbx],al
   140032fc9:	add    BYTE PTR [rax],al
   140032fcb:	add    bl,ah
   140032fcd:	and    BYTE PTR [rax],al
   140032fcf:	add    BYTE PTR [rax],al
   140032fd1:	add    BYTE PTR [rax],al
   140032fd3:	add    cl,dh
   140032fd5:	and    BYTE PTR [rax],al
   140032fd7:	add    bh,bh
   140032fd9:	(bad)  
   140032fda:	(bad)  
   140032fdb:	inc    DWORD PTR [rcx]
   140032fdd:	(bad)  
   140032fde:	add    al,BYTE PTR [rax]
   140032fe0:	(bad)  
   140032fe1:	xor    al,BYTE PTR [rdx]
   140032fe3:	push   rax
   140032fe4:	add    DWORD PTR [rsi],eax
   140032fe6:	add    al,BYTE PTR [rax]
   140032fe8:	(bad)  
   140032fe9:	xor    al,BYTE PTR [rdx]
   140032feb:	push   rax
   140032fec:	add    DWORD PTR [rsi],eax
   140032fee:	add    al,BYTE PTR [rax]
   140032ff0:	(bad)  
   140032ff1:	xor    al,BYTE PTR [rdx]
   140032ff3:	push   rax
   140032ff4:	add    DWORD PTR [rsi],eax
   140032ff6:	add    al,BYTE PTR [rax]
   140032ff8:	(bad)  
   140032ff9:	xor    al,BYTE PTR [rdx]
   140032ffb:	push   rax
   140032ffc:	add    DWORD PTR [rsi],eax
   140032ffe:	add    al,BYTE PTR [rax]
   140033000:	(bad)  
   140033001:	xor    al,BYTE PTR [rdx]
   140033003:	push   rax
   140033004:	add    DWORD PTR [rsi],eax
   140033006:	add    al,BYTE PTR [rax]
   140033008:	(bad)  
   140033009:	xor    al,BYTE PTR [rdx]
   14003300b:	push   rax
   14003300c:	add    DWORD PTR [rsi],eax
   14003300e:	add    al,BYTE PTR [rax]
   140033010:	(bad)  
   140033011:	xor    al,BYTE PTR [rdx]
   140033013:	push   rax
   140033014:	adc    DWORD PTR [rip+0x10c0002],edx        # 0x1410f301c
   14003301a:	imul   eax,DWORD PTR [rax],0xffffffec
   14003301d:	(bad)  
   14003301e:	add    al,BYTE PTR [rax]
   140033020:	pop    rax
   140033021:	jp     0x140033025
   140033023:	add    bh,bh
   140033025:	(bad)  
   140033026:	(bad)  
   140033027:	dec    DWORD PTR [rcx]
   140033029:	and    eax,0x21200002
   14003302e:	add    BYTE PTR [rax],al
   140033030:	(bad)  
   140033031:	(bad)  
   140033032:	(bad)  
   140033033:	call   FWORD PTR [rip+0x22]        # 0x14003305b
   140033039:	add    BYTE PTR [rax],al
   14003303b:	add    BYTE PTR [rbx-0xffffdd],cl
   140033041:	(bad)  
   140033042:	(bad)  
   140033043:	inc    DWORD PTR [rcx]
   140033045:	(bad)  
   140033046:	add    al,BYTE PTR [rax]
   140033048:	(bad)  
   140033049:	xor    al,BYTE PTR [rdx]
   14003304b:	push   rax
   14003304c:	adc    DWORD PTR [rdx],edx
   14003304e:	add    DWORD PTR [rax],eax
   140033050:	or     DWORD PTR [rdx+0x16ec0000],eax
   140033056:	add    al,BYTE PTR [rax]
   140033058:	cmp    BYTE PTR [rdx+0x2],0x0
   14003305c:	(bad)  
   14003305d:	(bad)  
   14003305e:	(bad)  
   14003305f:	jmp    QWORD PTR [rcx]
   140033061:	and    eax,0x23b00002
   140033066:	add    BYTE PTR [rax],al
   140033068:	(bad)  
   140033069:	(bad)  
   14003306a:	(bad)  
   14003306b:	jmp    rax
   14003306d:	and    eax,DWORD PTR [rax]
   14003306f:	add    BYTE PTR [rax],al
   140033071:	add    BYTE PTR [rax],al
   140033073:	add    BYTE PTR [rdi+0x24],ah
   140033076:	add    BYTE PTR [rax],al
   140033078:	(bad)  
   140033079:	(bad)  
   14003307a:	(bad)  
   14003307b:	inc    DWORD PTR [rcx]
   14003307d:	(bad)  
   14003307e:	add    al,BYTE PTR [rax]
   140033080:	(bad)  
   140033081:	xor    al,BYTE PTR [rdx]
   140033083:	push   rax
   140033084:	sbb    DWORD PTR [rbx],ebp
   140033086:	add    eax,DWORD PTR [rax]
   140033088:	or     eax,0x6005801
   14003308d:	jo     0x14003308f
   14003308f:	add    ah,ah
   140033091:	(bad)  
   140033092:	add    al,BYTE PTR [rax]
   140033094:	test   al,0x7a
   140033096:	add    al,BYTE PTR [rax]
   140033098:	mov    dl,0x2
   14003309a:	add    BYTE PTR [rax],al
   14003309c:	(bad)  
   14003309d:	(bad)  
   14003309e:	(bad)  
   14003309f:	(bad)  
   1400330a0:	cmp    DWORD PTR [rip+0x2],esp        # 0x1400330a8
   1400330a6:	add    BYTE PTR [rax],al
   1400330a8:	push   rdx
   1400330a9:	and    eax,0x10002
   1400330ae:	add    BYTE PTR [rax],al
   1400330b0:	imul   esp,DWORD PTR [rip+0x2],0x0        # 0x1400330b9
   1400330b7:	add    BYTE PTR [rbx+0x25],ch
   1400330ba:	add    al,BYTE PTR [rax]
   1400330bc:	add    eax,DWORD PTR [rax]
   1400330be:	add    BYTE PTR [rax],al
   1400330c0:	test   BYTE PTR [rip+0x24900002],ah        # 0x1649330c8
   1400330c6:	add    BYTE PTR [rax],al
   1400330c8:	(bad)  
   1400330c9:	(bad)  
   1400330ca:	(bad)  
   1400330cb:	(bad)  
   1400330cc:	cmp    eax,0x25
   1400330d1:	add    BYTE PTR [rax],al
   1400330d3:	add    BYTE PTR [rsi+riz*1],dh
   1400330d6:	add    BYTE PTR [rax],al
   1400330d8:	add    DWORD PTR [rax],eax
   1400330da:	add    BYTE PTR [rax],al
   1400330dc:	pop    rbp
   1400330dd:	add    BYTE PTR es:[rax],al
   1400330e0:	add    eax,DWORD PTR [rax]
   1400330e2:	add    BYTE PTR [rax],al
   1400330e4:	xchg   ebx,eax
   1400330e5:	add    BYTE PTR es:[rax],al
   1400330e8:	add    al,0x0
   1400330ea:	add    BYTE PTR [rax],al
   1400330ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400330ed:	add    BYTE PTR es:[rax],al
   1400330f0:	add    eax,DWORD PTR [rax]
   1400330f2:	add    BYTE PTR [rax],al
   1400330f4:	(bad)  
   1400330f5:	(bad)  
   1400330f6:	add    BYTE PTR [rax],al
   1400330f8:	add    BYTE PTR [rax],al
   1400330fa:	add    BYTE PTR [rax],al
   1400330fc:	rex.WXB (bad) 
   1400330fe:	add    BYTE PTR [rax],al
   140033100:	(bad)  
   140033101:	(bad)  
   140033102:	(bad)  
   140033103:	inc    DWORD PTR [rcx]
   140033105:	(bad)  
   140033106:	add    al,BYTE PTR [rax]
   140033108:	(bad)  
   140033109:	xor    al,BYTE PTR [rdx]
   14003310b:	push   rax
   14003310c:	add    DWORD PTR [rsi],eax
   14003310e:	add    al,BYTE PTR [rax]
   140033110:	(bad)  
   140033111:	xor    al,BYTE PTR [rdx]
   140033113:	push   rax
   140033114:	add    DWORD PTR [rsi],eax
   140033116:	add    al,BYTE PTR [rax]
   140033118:	(bad)  
   140033119:	xor    al,BYTE PTR [rdx]
   14003311b:	push   rax
   14003311c:	add    DWORD PTR [rsi],eax
   14003311e:	add    al,BYTE PTR [rax]
   140033120:	(bad)  
   140033121:	xor    al,BYTE PTR [rdx]
   140033123:	push   rax
   140033124:	adc    DWORD PTR [rip+0x10c0002],edx        # 0x1410f312c
   14003312a:	adc    DWORD PTR [rax],eax
   14003312c:	in     al,dx
   14003312d:	(bad)  
   14003312e:	add    al,BYTE PTR [rax]
   140033130:	sar    BYTE PTR [rdx+0x2],1
   140033133:	add    bh,bh
   140033135:	(bad)  
   140033136:	(bad)  
   140033137:	call   FWORD PTR [rbp+0x225]
   14003313d:	add    BYTE PTR [rax],al
   14003313f:	add    BYTE PTR [rsi-0xfffddb],dh
   140033145:	(bad)  
   140033146:	(bad)  
   140033147:	push   QWORD PTR [rsi+0x2000225]
   14003314d:	add    BYTE PTR [rax],al
   14003314f:	add    bh,cl
   140033151:	and    eax,0x27800002
   140033156:	add    BYTE PTR [rax],al
   140033158:	(bad)  
   140033159:	(bad)  
   14003315a:	(bad)  
   14003315b:	(bad)  
   14003315c:	cli    
   14003315d:	(bad)  
   14003315e:	add    BYTE PTR [rax],al
   140033160:	add    BYTE PTR [rax],al
   140033162:	add    BYTE PTR [rax],al
   140033164:	and    ebp,DWORD PTR [rax]
   140033166:	add    BYTE PTR [rax],al
   140033168:	add    al,BYTE PTR [rax]
   14003316a:	add    BYTE PTR [rax],al
   14003316c:	push   rbx
   14003316d:	sub    BYTE PTR [rax],al
   14003316f:	add    BYTE PTR [rbx],al
   140033171:	add    BYTE PTR [rax],al
   140033173:	add    BYTE PTR [rax+rbp*1+0x0],ah
   140033177:	add    BYTE PTR [rdx],al
   140033179:	add    BYTE PTR [rax],al
   14003317b:	add    BYTE PTR [rdx-0xffffd8],ch
   140033181:	(bad)  
   140033182:	(bad)  
   140033183:	inc    DWORD PTR [rcx]
   140033185:	(bad)  
   140033186:	add    al,BYTE PTR [rax]
   140033188:	(bad)  
   140033189:	xor    al,BYTE PTR [rdx]
   14003318b:	push   rax
   14003318c:	add    DWORD PTR [rsi],eax
   14003318e:	add    al,BYTE PTR [rax]
   140033190:	(bad)  
   140033191:	xor    al,BYTE PTR [rdx]
   140033193:	push   rax
   140033194:	add    DWORD PTR [rsi],eax
   140033196:	add    al,BYTE PTR [rax]
   140033198:	(bad)  
   140033199:	xor    al,BYTE PTR [rdx]
   14003319b:	push   rax
   14003319c:	add    DWORD PTR [rsi],ecx
   14003319e:	add    DWORD PTR [rax],eax
   1400331a0:	(bad)  
   1400331a1:	rex.X add BYTE PTR [rax],al
   1400331a4:	adc    DWORD PTR [rdi],edx
   1400331a6:	add    DWORD PTR [rax],eax
   1400331a8:	(bad)  
   1400331a9:	movabs ds:0x7af8000216ec0000,al
   1400331b2:	add    al,BYTE PTR [rax]
   1400331b4:	(bad)  
   1400331b5:	(bad)  
   1400331b6:	(bad)  
   1400331b7:	inc    DWORD PTR [rcx]
   1400331b9:	add    al,BYTE PTR es:[rax]
   1400331bc:	add    BYTE PTR [rax],al
   1400331be:	add    BYTE PTR [rax],al
   1400331c0:	call   0x1700333ea
   1400331c5:	sub    DWORD PTR [rax],eax
   1400331c7:	add    bh,bh
   1400331c9:	(bad)  
   1400331ca:	(bad)  
   1400331cb:	push   QWORD PTR [rsi+0x29]
   1400331ce:	add    BYTE PTR [rax],al
   1400331d0:	add    DWORD PTR [rax],eax
   1400331d2:	add    BYTE PTR [rax],al
   1400331d4:	xchg   edi,eax
   1400331d5:	sub    DWORD PTR [rax],eax
   1400331d7:	add    BYTE PTR [rax],al
   1400331d9:	add    BYTE PTR [rax],al
   1400331db:	add    BYTE PTR [rcx],al
   1400331dd:	(bad)  
   1400331de:	add    al,BYTE PTR [rax]
   1400331e0:	(bad)  
   1400331e1:	xor    al,BYTE PTR [rdx]
   1400331e3:	push   rax
   1400331e4:	add    DWORD PTR [rsi],eax
   1400331e6:	add    al,BYTE PTR [rax]
   1400331e8:	(bad)  
   1400331e9:	xor    al,BYTE PTR [rdx]
   1400331eb:	push   rax
   1400331ec:	adc    DWORD PTR [rdi],edx
   1400331ee:	add    DWORD PTR [rax],eax
   1400331f0:	(bad)  
   1400331f1:	movabs ds:0x7b20000216ec0000,al
   1400331fa:	add    al,BYTE PTR [rax]
   1400331fc:	(bad)  
   1400331fd:	(bad)  
   1400331fe:	(bad)  
   1400331ff:	inc    DWORD PTR [rcx+0x26]
   140033202:	add    al,BYTE PTR [rax]
   140033204:	add    BYTE PTR [rax],al
   140033206:	add    BYTE PTR [rax],al
   140033208:	sub    BYTE PTR [rsi],ah
   14003320a:	add    al,BYTE PTR [rax]
   14003320c:	shr    BYTE PTR [rcx],0x0
   14003320f:	add    bh,bh
   140033211:	(bad)  
   140033212:	(bad)  
   140033213:	inc    DWORD PTR [rsi]
   140033215:	sub    al,BYTE PTR [rax]
   140033217:	add    BYTE PTR [rcx],al
   140033219:	add    BYTE PTR [rax],al
   14003321b:	add    BYTE PTR [rdi],ah
   14003321d:	sub    al,BYTE PTR [rax]
   14003321f:	add    BYTE PTR [rax],al
   140033221:	add    BYTE PTR [rax],al
   140033223:	add    BYTE PTR [rcx],al
   140033225:	(bad)  
   140033226:	add    al,BYTE PTR [rax]
   140033228:	(bad)  
   140033229:	xor    al,BYTE PTR [rdx]
   14003322b:	push   rax
   14003322c:	add    DWORD PTR [rsi],eax
   14003322e:	add    al,BYTE PTR [rax]
   140033230:	(bad)  
   140033231:	xor    al,BYTE PTR [rdx]
   140033233:	push   rax
   140033234:	add    DWORD PTR [rcx],ecx
   140033236:	add    DWORD PTR [rax],eax
   140033238:	or     DWORD PTR [rdx+0x0],eax
   14003323b:	add    BYTE PTR [rcx],al
   14003323d:	or     BYTE PTR [rcx],al
   14003323f:	add    BYTE PTR [rax],cl
   140033241:	(bad)  
   140033242:	add    BYTE PTR [rax],al
   140033244:	add    DWORD PTR [rax],ebx
   140033246:	add    DWORD PTR [rax],eax
   140033248:	sbb    BYTE PTR [rdx+0x0],al
   14003324b:	add    BYTE PTR [rcx],bl
   14003324d:	and    DWORD PTR [rcx],eax
   14003324f:	add    BYTE PTR [rcx],cl
   140033251:	loop   0x140033253
   140033253:	add    ah,ah
   140033255:	(bad)  
   140033256:	add    al,BYTE PTR [rax]
   140033258:	sbb    BYTE PTR [rbp+0x620002],al
   14003325e:	add    BYTE PTR [rax],al
   140033260:	(bad)  
   140033261:	(bad)  
   140033262:	(bad)  
   140033263:	push   QWORD PTR [rax-0x4ffffdd9]
   140033269:	xor    al,0x0
   14003326b:	add    bh,bh
   14003326d:	(bad)  
   14003326e:	(bad)  
   14003326f:	(bad)  
   140033270:	fbstp  TBYTE PTR [rax+rax*1]
   140033273:	add    BYTE PTR [rax],al
   140033275:	add    BYTE PTR [rax],al
   140033277:	add    BYTE PTR [rdx-0xffffcb],dl
   14003327d:	(bad)  
   14003327e:	(bad)  
   14003327f:	inc    DWORD PTR [rcx]
   140033281:	(bad)  
   140033282:	add    al,BYTE PTR [rax]
   140033284:	(bad)  
   140033285:	xor    al,BYTE PTR [rdx]
   140033287:	push   rax
   140033288:	adc    DWORD PTR [rdx],edx
   14003328a:	add    DWORD PTR [rax],eax
   14003328c:	or     DWORD PTR [rdx+0x0],esp
   14003328f:	add    ah,ch
   140033291:	(bad)  
   140033292:	add    al,BYTE PTR [rax]
   140033294:	rex test DWORD PTR [rdx],eax
   140033297:	add    bh,bh
   140033299:	(bad)  
   14003329a:	(bad)  
   14003329b:	dec    ebx
   14003329d:	(bad)  
   14003329e:	add    al,BYTE PTR [rax]
   1400332a0:	shl    BYTE PTR [rip+0xffffffffffff0000],0xff        # 0x1400232a7
   1400332a7:	jmp    rcx
   1400332a9:	xor    eax,0x0
   1400332ae:	add    BYTE PTR [rax],al
   1400332b0:	cs add BYTE PTR ss:[rax],al
   1400332b4:	(bad)  
   1400332b5:	(bad)  
   1400332b6:	(bad)  
   1400332b7:	inc    DWORD PTR [rcx]
   1400332b9:	(bad)  
   1400332ba:	add    al,BYTE PTR [rax]
   1400332bc:	(bad)  
   1400332bd:	xor    al,BYTE PTR [rdx]
   1400332bf:	push   rax
   1400332c0:	sbb    DWORD PTR [rdx],esi
   1400332c2:	add    eax,DWORD PTR [rax]
   1400332c4:	(bad)  
   1400332c5:	add    DWORD PTR [rax+0x0],edi
   1400332c8:	adc    BYTE PTR [rax+0x0],dh
   1400332cb:	add    ah,ah
   1400332cd:	(bad)  
   1400332ce:	add    al,BYTE PTR [rax]
   1400332d0:	push   0xffffffffba000285
   1400332d5:	add    eax,DWORD PTR [rax]
   1400332d7:	add    bh,bh
   1400332d9:	(bad)  
   1400332da:	(bad)  
   1400332db:	jmp    rbx
   1400332dd:	(bad)  
   1400332de:	add    al,BYTE PTR [rax]
   1400332e0:	(bad)  
   1400332e1:	(bad)  
   1400332e2:	(bad)  
   1400332e3:	(bad)  
   1400332e4:	(bad)  
   1400332e5:	(bad)  
   1400332e6:	add    al,BYTE PTR [rax]
   1400332e8:	(bad)  
   1400332e9:	(bad)  
   1400332ea:	(bad)  
   1400332eb:	call   QWORD PTR [rdi]
   1400332ed:	sub    BYTE PTR [rdx],al
   1400332ef:	add    BYTE PTR [rax+0x36],dl
   1400332f2:	add    BYTE PTR [rax],al
   1400332f4:	(bad)  
   1400332f5:	(bad)  
   1400332f6:	(bad)  
   1400332f7:	push   QWORD PTR [rsi+0x37]
   1400332fd:	add    BYTE PTR [rax],al
   1400332ff:	add    ah,al
   140033301:	(bad)  
   140033302:	add    BYTE PTR [rax],al
   140033304:	(bad)  
   140033305:	(bad)  
   140033306:	(bad)  
   140033307:	dec    edi
   140033309:	cmp    BYTE PTR [rax],al
   14003330b:	add    BYTE PTR [rcx],al
   14003330d:	add    BYTE PTR [rax],al
   14003330f:	add    ch,ah
   140033311:	cmp    BYTE PTR [rax],al
   140033313:	add    bh,bh
   140033315:	(bad)  
   140033316:	(bad)  
   140033317:	call   FWORD PTR [rdx+0x39]
   14003331a:	add    BYTE PTR [rax],al
   14003331c:	add    al,BYTE PTR [rax]
   14003331e:	add    BYTE PTR [rax],al
   140033320:	jo     0x14003335b
   140033322:	add    BYTE PTR [rax],al
   140033324:	(bad)  
   140033325:	(bad)  
   140033326:	(bad)  
   140033327:	inc    DWORD PTR [rcx]
   140033329:	(bad)  
   14003332a:	add    al,BYTE PTR [rax]
   14003332c:	(bad)  
   14003332d:	xor    al,BYTE PTR [rdx]
   14003332f:	push   rax
   140033330:	add    DWORD PTR [rsi],eax
   140033332:	add    al,BYTE PTR [rax]
   140033334:	(bad)  
   140033335:	xor    al,BYTE PTR [rdx]
   140033337:	push   rax
   140033338:	add    DWORD PTR [rsi],eax
   14003333a:	add    al,BYTE PTR [rax]
   14003333c:	(bad)  
   14003333d:	xor    al,BYTE PTR [rdx]
   14003333f:	push   rax
   140033340:	sbb    DWORD PTR [rbx],ebx
   140033342:	add    al,BYTE PTR [rax]
   140033344:	or     al,0x1
   140033346:	adc    DWORD PTR [rax],eax
   140033348:	(bad)  
   140033349:	(bad)  
   14003334a:	add    al,BYTE PTR [rax]
   14003334c:	jo     0x14003334e
   14003334e:	add    BYTE PTR [rax],al
   140033350:	sbb    DWORD PTR [rsi],ebx
   140033352:	add    al,BYTE PTR [rax]
   140033354:	or     al,0x1
   140033356:	adc    eax,DWORD PTR [rax]
   140033358:	(bad)  
   140033359:	(bad)  
   14003335a:	add    al,BYTE PTR [rax]
   14003335c:	mov    BYTE PTR [rax],al
   14003335e:	add    BYTE PTR [rax],al
   140033360:	add    DWORD PTR [rcx],ecx
   140033362:	add    DWORD PTR [rax],eax
   140033364:	or     DWORD PTR [rdx+0x0],esp
   140033367:	add    BYTE PTR [rcx],al
   140033369:	or     DWORD PTR [rcx],eax
   14003336b:	add    BYTE PTR [rcx],cl
   14003336d:	and    al,BYTE PTR [rax]
   14003336f:	add    BYTE PTR [rcx],al
   140033371:	(bad)  
   140033372:	add    DWORD PTR [rax],eax
   140033374:	(bad)  
   140033375:	rex.X add BYTE PTR [rax],al
   140033378:	sbb    DWORD PTR [rsi],ebx
   14003337a:	add    al,BYTE PTR [rax]
   14003337c:	or     al,0x1
   14003337e:	sbb    DWORD PTR [rax],eax
   140033380:	(bad)  
   140033381:	(bad)  
   140033382:	add    al,BYTE PTR [rax]
   140033384:	mov    al,0x0
   140033386:	add    BYTE PTR [rax],al
   140033388:	sbb    DWORD PTR [rdx],ebp
   14003338a:	add    al,BYTE PTR [rax]
   14003338c:	or     al,0x1
   14003338e:	and    eax,DWORD PTR [rax]
   140033390:	in     al,0x17
   140033392:	add    al,BYTE PTR [rax]
   140033394:	nop
   140033395:	test   DWORD PTR [rdx],eax
   140033397:	add    BYTE PTR [rdx],cl
   140033399:	add    DWORD PTR [rax],eax
   14003339b:	add    bh,bh
   14003339d:	(bad)  
   14003339e:	(bad)  
   14003339f:	push   QWORD PTR [rax]
   1400333a1:	sub    BYTE PTR [rdx],al
   1400333a3:	add    BYTE PTR [rax],al
   1400333a5:	add    BYTE PTR [rax],al
   1400333a7:	add    BYTE PTR [rcx+0x28],cl
   1400333aa:	add    al,BYTE PTR [rax]
   1400333ac:	add    BYTE PTR [rax],al
   1400333ae:	add    BYTE PTR [rax],al
   1400333b0:	sub    BYTE PTR gs:[rdx],al
   1400333b3:	add    BYTE PTR [rax],al
   1400333b5:	add    BYTE PTR [rax],al
   1400333b7:	add    BYTE PTR [rsi+0x28],bh
   1400333ba:	add    al,BYTE PTR [rax]
   1400333bc:	rol    BYTE PTR [rdx+0x0],0x0
   1400333c0:	(bad)  
   1400333c1:	(bad)  
   1400333c2:	(bad)  
   1400333c3:	push   QWORD PTR [rbx]
   1400333c5:	add    BYTE PTR [r8],r8b
   1400333c8:	add    BYTE PTR [rax],al
   1400333ca:	add    BYTE PTR [rax],al
   1400333cc:	(bad)  
   1400333cd:	add    BYTE PTR [r8],r8b
   1400333d0:	add    DWORD PTR [rax],eax
   1400333d2:	add    BYTE PTR [rax],al
   1400333d4:	fwait
   1400333d5:	add    BYTE PTR [r8],r8b
   1400333d8:	add    BYTE PTR [rax],al
   1400333da:	add    BYTE PTR [rax],al
   1400333dc:	jmp    0x140033423
   1400333de:	add    BYTE PTR [rax],al
   1400333e0:	add    al,BYTE PTR [rax]
   1400333e2:	add    BYTE PTR [rax],al
   1400333e4:	add    al,0x46
   1400333e6:	add    BYTE PTR [rax],al
   1400333e8:	add    BYTE PTR [rax],al
   1400333ea:	add    BYTE PTR [rax],al
   1400333ec:	rex.WB
   1400333ed:	rex.RX add BYTE PTR [rax],r8b
   1400333f0:	add    eax,DWORD PTR [rax]
   1400333f2:	add    BYTE PTR [rax],al
   1400333f4:	(bad)  
   1400333f5:	rex.RX add BYTE PTR [rax],r8b
   1400333f8:	add    BYTE PTR [rax],al
   1400333fa:	add    BYTE PTR [rax],al
   1400333fc:	xchg   ecx,eax
   1400333fd:	rex.RX add BYTE PTR [rax],r8b
   140033400:	(bad)  
   140033401:	(bad)  
   140033402:	(bad)  
   140033403:	inc    DWORD PTR [rcx]
   140033405:	(bad)  
   140033406:	add    al,BYTE PTR [rax]
   140033408:	(bad)  
   140033409:	xor    al,BYTE PTR [rdx]
   14003340b:	push   rax
   14003340c:	add    DWORD PTR [rsi],eax
   14003340e:	add    al,BYTE PTR [rax]
   140033410:	(bad)  
   140033411:	xor    al,BYTE PTR [rdx]
   140033413:	push   rax
   140033414:	add    DWORD PTR [rsi],eax
   140033416:	add    al,BYTE PTR [rax]
   140033418:	(bad)  
   140033419:	xor    al,BYTE PTR [rdx]
   14003341b:	push   rax
   14003341c:	add    DWORD PTR [rsi],eax
   14003341e:	add    al,BYTE PTR [rax]
   140033420:	(bad)  
   140033421:	xor    al,BYTE PTR [rdx]
   140033423:	push   rax
   140033424:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x18210342b
   14003342a:	add    BYTE PTR [rax],al
   14003342c:	sbb    DWORD PTR [rsi],ebx
   14003342e:	add    al,BYTE PTR [rax]
   140033430:	or     al,0x1
   140033432:	adc    eax,0x2176000
   140033437:	add    BYTE PTR [rax+0x19000000],bl
   14003343d:	xor    DWORD PTR [rax+rax*1],eax
   140033440:	adc    eax,DWORD PTR [rcx]
   140033442:	movsxd eax,DWORD PTR [rax]
   140033444:	or     al,0x70
   140033446:	or     esp,DWORD PTR [rax-0x1c]
   140033449:	(bad)  
   14003344a:	add    al,BYTE PTR [rax]
   14003344c:	mov    eax,0xa000285
   140033451:	add    eax,DWORD PTR [rax]
   140033453:	add    bh,bh
   140033455:	(bad)  
   140033456:	(bad)  
   140033457:	call   FWORD PTR [rdx+0x228]
   14003345d:	add    BYTE PTR [rax],al
   14003345f:	add    BYTE PTR [rbx+0x1000228],dh
   140033465:	add    BYTE PTR [rax],al
   140033467:	add    dh,cl
   140033469:	sub    BYTE PTR [rdx],al
   14003346b:	add    BYTE PTR [rax+0x49],dh
   14003346e:	add    BYTE PTR [rax],al
   140033470:	(bad)  
   140033471:	(bad)  
   140033472:	(bad)  
   140033473:	(bad)  
   140033474:	std    
   140033475:	rex.WB add BYTE PTR [r8],al
   140033478:	add    BYTE PTR [rax],al
   14003347a:	add    BYTE PTR [rax],al
   14003347c:	xchg   DWORD PTR [rbx+0x0],ecx
   14003347f:	add    BYTE PTR [rcx],al
   140033481:	add    BYTE PTR [rax],al
   140033483:	add    dl,al
   140033485:	rex.WXB add BYTE PTR [r8],al
   140033488:	add    al,BYTE PTR [rax]
   14003348a:	add    BYTE PTR [rax],al
   14003348c:	cmc    
   14003348d:	rex.WXB add BYTE PTR [r8],al
   140033490:	add    DWORD PTR [rax],eax
   140033492:	add    BYTE PTR [rax],al
   140033494:	add    ecx,DWORD PTR [rax+rax*1+0x0]
   140033498:	add    BYTE PTR [rax],al
   14003349a:	add    BYTE PTR [rax],al
   14003349c:	mov    esi,0xff00004c
   1400334a1:	(bad)  
   1400334a2:	(bad)  
   1400334a3:	inc    DWORD PTR [rcx]
   1400334a5:	(bad)  
   1400334a6:	add    al,BYTE PTR [rax]
   1400334a8:	(bad)  
   1400334a9:	xor    al,BYTE PTR [rdx]
   1400334ab:	push   rax
   1400334ac:	add    DWORD PTR [rsi],eax
   1400334ae:	add    al,BYTE PTR [rax]
   1400334b0:	(bad)  
   1400334b1:	xor    al,BYTE PTR [rdx]
   1400334b3:	push   rax
   1400334b4:	add    DWORD PTR [rsi],eax
   1400334b6:	add    al,BYTE PTR [rax]
   1400334b8:	(bad)  
   1400334b9:	xor    al,BYTE PTR [rdx]
   1400334bb:	push   rax
   1400334bc:	sbb    DWORD PTR [rsi],esp
   1400334be:	add    DWORD PTR [rax],eax
   1400334c0:	(bad)  
   1400334c1:	ret    0x0
   1400334c4:	in     al,0x17
   1400334c6:	add    al,BYTE PTR [rax]
   1400334c8:	loopne 0x14003344f
   1400334ca:	add    al,BYTE PTR [rax]
   1400334cc:	push   rdx
   1400334cd:	add    BYTE PTR [rax],al
   1400334cf:	add    bh,bh
   1400334d1:	(bad)  
   1400334d2:	(bad)  
   1400334d3:	(bad)  
   1400334d4:	jmp    0x130033701
   1400334d9:	rex.WR add BYTE PTR [rax],r8b
   1400334dc:	(bad)  
   1400334dd:	(bad)  
   1400334de:	(bad)  
   1400334df:	call   rbx
   1400334e1:	rex.WRB add BYTE PTR [r8],r8b
   1400334e4:	add    BYTE PTR [rax],al
   1400334e6:	add    BYTE PTR [rax],al
   1400334e8:	(bad)  
   1400334e9:	rex.WRX add BYTE PTR [rax],r8b
   1400334ec:	(bad)  
   1400334ed:	(bad)  
   1400334ee:	(bad)  
   1400334ef:	inc    DWORD PTR [rcx]
   1400334f1:	(bad)  
   1400334f2:	add    al,BYTE PTR [rax]
   1400334f4:	(bad)  
   1400334f5:	xor    al,BYTE PTR [rdx]
   1400334f7:	push   rax
   1400334f8:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x1821034ff
   1400334fe:	add    BYTE PTR [rax],al
   140033500:	add    DWORD PTR [rcx],ecx
   140033502:	add    DWORD PTR [rax],eax
   140033504:	or     DWORD PTR [rdx+0x0],eax
   140033507:	add    BYTE PTR [rcx],al
   140033509:	adc    eax,DWORD PTR [rcx]
   14003350b:	add    BYTE PTR [rbx],dl
   14003350d:	(bad)  
   14003350e:	add    BYTE PTR [rax],al
   140033510:	add    DWORD PTR [rdi],edx
   140033512:	add    DWORD PTR [rax],eax
   140033514:	(bad)  
   140033515:	(bad)  
   140033516:	add    BYTE PTR [rax],al
   140033518:	sbb    DWORD PTR [rax],ebp
   14003351a:	add    eax,DWORD PTR [rax]
   14003351c:	or     eax,0x6005401
   140033521:	jo     0x140033523
   140033523:	add    ah,ah
   140033525:	(bad)  
   140033526:	add    al,BYTE PTR [rax]
   140033528:	or     BYTE PTR [rdx+0x2920002],0x0
   14003352f:	add    bh,bh
   140033531:	(bad)  
   140033532:	(bad)  
   140033533:	call   QWORD PTR [rax]
   140033535:	sub    DWORD PTR [rdx],eax
   140033537:	add    BYTE PTR [rax],al
   140033539:	add    BYTE PTR [rax],al
   14003353b:	add    BYTE PTR [rcx],ch
   14003353d:	sub    DWORD PTR [rdx],eax
   14003353f:	add    BYTE PTR [rcx],al
   140033541:	add    BYTE PTR [rax],al
   140033543:	add    BYTE PTR [rdx+0x29],al
   140033546:	add    al,BYTE PTR [rax]
   140033548:	add    BYTE PTR [rsi+0x0],dl
   14003354b:	add    bh,bh
   14003354d:	(bad)  
   14003354e:	(bad)  
   14003354f:	(bad)  
   140033550:	ds push rdi
   140033552:	add    BYTE PTR [rax],al
   140033554:	add    BYTE PTR [rax],al
   140033556:	add    BYTE PTR [rax],al
   140033558:	push   rdi
   140033559:	push   rdi
   14003355a:	add    BYTE PTR [rax],al
   14003355c:	add    DWORD PTR [rax],eax
   14003355e:	add    BYTE PTR [rax],al
   140033560:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033561:	push   rdi
   140033562:	add    BYTE PTR [rax],al
   140033564:	add    al,BYTE PTR [rax]
   140033566:	add    BYTE PTR [rax],al
   140033568:	mov    eax,0x1000057
   14003356d:	add    BYTE PTR [rax],al
   14003356f:	add    bh,dh
   140033571:	push   rdi
   140033572:	add    BYTE PTR [rax],al
   140033574:	add    BYTE PTR [rax],al
   140033576:	add    BYTE PTR [rax],al
   140033578:	add    ebx,DWORD PTR [rax+0x0]
   14003357b:	add    bh,bh
   14003357d:	(bad)  
   14003357e:	(bad)  
   14003357f:	inc    DWORD PTR [rcx]
   140033581:	(bad)  
   140033582:	add    al,BYTE PTR [rax]
   140033584:	(bad)  
   140033585:	xor    al,BYTE PTR [rdx]
   140033587:	push   rax
   140033588:	add    DWORD PTR [rsi],eax
   14003358a:	add    al,BYTE PTR [rax]
   14003358c:	(bad)  
   14003358d:	xor    al,BYTE PTR [rdx]
   14003358f:	push   rax
   140033590:	add    DWORD PTR [rsi],eax
   140033592:	add    al,BYTE PTR [rax]
   140033594:	(bad)  
   140033595:	xor    al,BYTE PTR [rdx]
   140033597:	push   rax
   140033598:	adc    DWORD PTR [rip+0x1110002],ebx        # 0x1411435a0
   14003359e:	and    eax,DWORD PTR [rax]
   1400335a0:	in     al,dx
   1400335a1:	(bad)  
   1400335a2:	add    al,BYTE PTR [rax]
   1400335a4:	test   al,0x8a
   1400335a6:	add    al,BYTE PTR [rax]
   1400335a8:	(bad)  
   1400335a9:	(bad)  
   1400335aa:	(bad)  
   1400335ab:	call   FWORD PTR [rbx+0x29]
   1400335ae:	add    al,BYTE PTR [rax]
   1400335b0:	rex pop rax
   1400335b2:	add    BYTE PTR [rax],al
   1400335b4:	(bad)  
   1400335b5:	(bad)  
   1400335b6:	(bad)  
   1400335b7:	push   QWORD PTR [rcx]
   1400335b9:	pop    rcx
   1400335ba:	add    BYTE PTR [rax],al
   1400335bc:	add    BYTE PTR [rax],al
   1400335be:	add    BYTE PTR [rax],al
   1400335c0:	mov    eax,0xff000059
   1400335c5:	(bad)  
   1400335c6:	(bad)  
   1400335c7:	inc    DWORD PTR [rcx]
   1400335c9:	(bad)  
   1400335ca:	add    al,BYTE PTR [rax]
   1400335cc:	(bad)  
   1400335cd:	xor    al,BYTE PTR [rdx]
   1400335cf:	push   rax
   1400335d0:	add    DWORD PTR [rsi],ecx
   1400335d2:	add    DWORD PTR [rax],eax
   1400335d4:	(bad)  
   1400335d5:	and    al,BYTE PTR [rax]
   1400335d7:	add    BYTE PTR [rcx],dl
   1400335d9:	adc    al,BYTE PTR [rcx]
   1400335db:	add    BYTE PTR [rcx],cl
   1400335dd:	(bad)  
   1400335de:	add    BYTE PTR [rax],al
   1400335e0:	in     al,dx
   1400335e1:	(bad)  
   1400335e2:	add    al,BYTE PTR [rax]
   1400335e4:	and    BYTE PTR [rbx-0xfffe],cl
   1400335ea:	(bad)  
   1400335eb:	inc    DWORD PTR [rax+0x229]
   1400335f1:	add    BYTE PTR [rax],al
   1400335f3:	add    BYTE PTR [rax+0x1000229],bl
   1400335f9:	add    BYTE PTR [rax],al
   1400335fb:	add    BYTE PTR [rbp+0x2000229],dh
   140033601:	add    BYTE PTR [rax],al
   140033603:	add    dl,dl
   140033605:	sub    DWORD PTR [rdx],eax
   140033607:	add    al,ah
   140033609:	pop    rbx
   14003360a:	add    BYTE PTR [rax],al
   14003360c:	(bad)  
   14003360d:	(bad)  
   14003360e:	(bad)  
   14003360f:	(bad)  
   140033610:	std    
   140033611:	pop    rbx
   140033612:	add    BYTE PTR [rax],al
   140033614:	add    BYTE PTR [rax],al
   140033616:	add    BYTE PTR [rax],al
   140033618:	(bad)  
   140033619:	pop    rsp
   14003361a:	add    BYTE PTR [rax],al
   14003361c:	add    DWORD PTR [rax],eax
   14003361e:	add    BYTE PTR [rax],al
   140033620:	xor    bl,BYTE PTR [rax+rax*1+0x0]
   140033624:	add    al,BYTE PTR [rax]
   140033626:	add    BYTE PTR [rax],al
   140033628:	rex.RB pop r12
   14003362a:	add    BYTE PTR [rax],al
   14003362c:	add    eax,DWORD PTR [rax]
   14003362e:	add    BYTE PTR [rax],al
   140033630:	push   rcx
   140033631:	pop    rsp
   140033632:	add    BYTE PTR [rax],al
   140033634:	(bad)  
   140033635:	(bad)  
   140033636:	(bad)  
   140033637:	inc    DWORD PTR [rcx]
   140033639:	(bad)  
   14003363a:	add    al,BYTE PTR [rax]
   14003363c:	(bad)  
   14003363d:	xor    al,BYTE PTR [rdx]
   14003363f:	push   rax
   140033640:	add    DWORD PTR [rsi],eax
   140033642:	add    al,BYTE PTR [rax]
   140033644:	(bad)  
   140033645:	xor    al,BYTE PTR [rdx]
   140033647:	push   rax
   140033648:	add    DWORD PTR [rsi],eax
   14003364a:	add    al,BYTE PTR [rax]
   14003364c:	(bad)  
   14003364d:	xor    al,BYTE PTR [rdx]
   14003364f:	push   rax
   140033650:	add    DWORD PTR [rsi],eax
   140033652:	add    al,BYTE PTR [rax]
   140033654:	(bad)  
   140033655:	xor    al,BYTE PTR [rdx]
   140033657:	push   rax
   140033658:	adc    DWORD PTR [rcx],esp
   14003365a:	add    DWORD PTR [rax],eax
   14003365c:	sbb    BYTE PTR [rdx+0x16ec0000],ah
   140033662:	add    al,BYTE PTR [rax]
   140033664:	mov    rax,QWORD PTR [rdx]
   140033667:	add    bh,bh
   140033669:	(bad)  
   14003366a:	(bad)  
   14003366b:	(bad)  
   14003366c:	out    dx,eax
   14003366d:	sub    DWORD PTR [rdx],eax
   14003366f:	add    BYTE PTR [rax],al
   140033671:	add    BYTE PTR [rax],al
   140033673:	add    BYTE PTR [rax],cl
   140033675:	sub    al,BYTE PTR [rdx]
   140033677:	add    BYTE PTR [rcx],al
   140033679:	add    BYTE PTR [rax],al
   14003367b:	add    BYTE PTR [rcx],ah
   14003367d:	sub    al,BYTE PTR [rdx]
   14003367f:	add    BYTE PTR [rax+0x5c],dh
   140033682:	add    BYTE PTR [rax],al
   140033684:	(bad)  
   140033685:	(bad)  
   140033686:	(bad)  
   140033687:	inc    ebp
   140033689:	pop    rsp
   14003368a:	add    BYTE PTR [rax],al
   14003368c:	add    BYTE PTR [rax],al
   14003368e:	add    BYTE PTR [rax],al
   140033690:	or     bl,BYTE PTR [rbp+0x0]
   140033693:	add    BYTE PTR [rcx],al
   140033695:	add    BYTE PTR [rax],al
   140033697:	add    BYTE PTR [rsi],dh
   140033699:	pop    rbp
   14003369a:	add    BYTE PTR [rax],al
   14003369c:	add    al,BYTE PTR [rax]
   14003369e:	add    BYTE PTR [rax],al
   1400336a0:	add    DWORD PTR [rsi+0x0],ebx
   1400336a3:	add    BYTE PTR [rcx],al
   1400336a5:	add    BYTE PTR [rax],al
   1400336a7:	add    BYTE PTR [rip+0x5e],cl        # 0x14003370b
   1400336ad:	add    BYTE PTR [rax],al
   1400336af:	add    BYTE PTR [rcx],bl
   1400336b1:	pop    rsi
   1400336b2:	add    BYTE PTR [rax],al
   1400336b4:	(bad)  
   1400336b5:	(bad)  
   1400336b6:	(bad)  
   1400336b7:	inc    DWORD PTR [rcx]
   1400336b9:	(bad)  
   1400336ba:	add    al,BYTE PTR [rax]
   1400336bc:	(bad)  
   1400336bd:	xor    al,BYTE PTR [rdx]
   1400336bf:	push   rax
   1400336c0:	add    DWORD PTR [rsi],eax
   1400336c2:	add    al,BYTE PTR [rax]
   1400336c4:	(bad)  
   1400336c5:	xor    al,BYTE PTR [rdx]
   1400336c7:	push   rax
   1400336c8:	add    DWORD PTR [rsi],eax
   1400336ca:	add    al,BYTE PTR [rax]
   1400336cc:	(bad)  
   1400336cd:	xor    al,BYTE PTR [rdx]
   1400336cf:	push   rax
   1400336d0:	add    DWORD PTR [rcx],ecx
   1400336d2:	add    DWORD PTR [rax],eax
   1400336d4:	or     DWORD PTR [rdx+0x0],eax
   1400336d7:	add    BYTE PTR [rcx],al
   1400336d9:	or     DWORD PTR [rcx],eax
   1400336db:	add    BYTE PTR [rcx],cl
   1400336dd:	rex.X add BYTE PTR [rax],al
   1400336e0:	add    DWORD PTR [rcx],ecx
   1400336e2:	add    DWORD PTR [rax],eax
   1400336e4:	or     DWORD PTR [rdx+0x0],eax
   1400336e7:	add    BYTE PTR [rcx],dl
   1400336e9:	adc    al,BYTE PTR [rcx]
   1400336eb:	add    BYTE PTR [rcx],cl
   1400336ed:	(bad)  
   1400336ee:	add    BYTE PTR [rax],al
   1400336f0:	in     al,dx
   1400336f1:	(bad)  
   1400336f2:	add    al,BYTE PTR [rax]
   1400336f4:	nop
   1400336f5:	xchg   edx,eax
   1400336f6:	add    al,BYTE PTR [rax]
   1400336f8:	(bad)  
   1400336f9:	(bad)  
   1400336fa:	(bad)  
   1400336fb:	inc    DWORD PTR [rax+0x2a]
   1400336fe:	add    al,BYTE PTR [rax]
   140033700:	adc    BYTE PTR [rdi+0x0],bl
   140033703:	add    bh,bh
   140033705:	(bad)  
   140033706:	(bad)  
   140033707:	jmp    FWORD PTR [rip+0x5f]        # 0x14003376c
   14003370d:	add    BYTE PTR [rax],al
   14003370f:	add    BYTE PTR [rdi+rbx*2+0x0],dl
   140033713:	add    bh,bh
   140033715:	(bad)  
   140033716:	(bad)  
   140033717:	inc    DWORD PTR [rcx]
   140033719:	(bad)  
   14003371a:	add    al,BYTE PTR [rax]
   14003371c:	(bad)  
   14003371d:	xor    al,BYTE PTR [rdx]
   14003371f:	push   rax
   140033720:	adc    DWORD PTR [rdx],edx
   140033722:	add    DWORD PTR [rax],eax
   140033724:	or     DWORD PTR [rdx+0x0],esp
   140033727:	add    ah,ch
   140033729:	(bad)  
   14003372a:	add    al,BYTE PTR [rax]
   14003372c:	mov    eax,0xff000292
   140033731:	(bad)  
   140033732:	(bad)  
   140033733:	call   FWORD PTR [rax+0x2a]
   140033736:	add    al,BYTE PTR [rax]
   140033738:	jo     0x140033799
   14003373a:	add    BYTE PTR [rax],al
   14003373c:	(bad)  
   14003373d:	(bad)  
   14003373e:	(bad)  
   14003373f:	call   QWORD PTR [rcx+0x5f]
   140033745:	add    BYTE PTR [rax],al
   140033747:	add    BYTE PTR [rsi-0xffffa1],bl
   14003374d:	(bad)  
   14003374e:	(bad)  
   14003374f:	inc    DWORD PTR [rcx]
   140033751:	(bad)  
   140033752:	add    al,BYTE PTR [rax]
   140033754:	(bad)  
   140033755:	xor    al,BYTE PTR [rdx]
   140033757:	push   rax
   140033758:	add    DWORD PTR [rcx],ecx
   14003375a:	add    DWORD PTR [rax],eax
   14003375c:	or     DWORD PTR [rdx+0x0],eax
   14003375f:	add    BYTE PTR [rcx],al
   140033761:	(bad)  
   140033762:	add    DWORD PTR [rax],eax
   140033764:	(bad)  
   140033765:	(bad)  
   140033766:	add    BYTE PTR [rax],al
   140033768:	add    DWORD PTR [rip+0x620d0001],ecx        # 0x1a210376f
   14003376e:	add    BYTE PTR [rax],al
   140033770:	adc    DWORD PTR [rdx],edx
   140033772:	add    DWORD PTR [rax],eax
   140033774:	or     DWORD PTR [rdx+0x16ec0000],eax
   14003377a:	add    al,BYTE PTR [rax]
   14003377c:	loopne 0x140033710
   14003377e:	add    al,BYTE PTR [rax]
   140033780:	(bad)  
   140033781:	(bad)  
   140033782:	(bad)  
   140033783:	push   QWORD PTR [rax+0x2a]
   140033786:	add    al,BYTE PTR [rax]
   140033788:	mov    al,0x60
   14003378a:	add    BYTE PTR [rax],al
   14003378c:	(bad)  
   14003378d:	(bad)  
   14003378e:	(bad)  
   14003378f:	dec    esi
   140033791:	(bad)  
   140033792:	add    BYTE PTR [rax],al
   140033794:	add    BYTE PTR [rax],al
   140033796:	add    BYTE PTR [rax],al
   140033798:	(bad)  
   140033799:	(bad)  
   14003379a:	add    BYTE PTR [rax],al
   14003379c:	(bad)  
   14003379d:	(bad)  
   14003379e:	(bad)  
   14003379f:	inc    DWORD PTR [rcx]
   1400337a1:	(bad)  
   1400337a2:	add    al,BYTE PTR [rax]
   1400337a4:	(bad)  
   1400337a5:	xor    al,BYTE PTR [rdx]
   1400337a7:	push   rax
   1400337a8:	add    DWORD PTR [rcx],ecx
   1400337aa:	add    DWORD PTR [rax],eax
   1400337ac:	or     DWORD PTR [rdx+0x0],esp
   1400337af:	add    BYTE PTR [rcx],dl
   1400337b1:	adc    al,BYTE PTR [rcx]
   1400337b3:	add    BYTE PTR [rcx],cl
   1400337b5:	ret    0x0
   1400337b8:	in     al,dx
   1400337b9:	(bad)  
   1400337ba:	add    al,BYTE PTR [rax]
   1400337bc:	or     BYTE PTR [rbx-0xfffe],dl
   1400337c2:	(bad)  
   1400337c3:	dec    DWORD PTR [rcx+0x22a]
   1400337c9:	add    BYTE PTR [rax],al
   1400337cb:	add    BYTE PTR [rdx-0x5ffffdd6],ah
   1400337d1:	(bad)  
   1400337d2:	add    BYTE PTR [rax],al
   1400337d4:	(bad)  
   1400337d5:	(bad)  
   1400337d6:	(bad)  
   1400337d7:	(bad)  
   1400337d8:	mov    esi,0x61
   1400337dd:	add    BYTE PTR [rax],al
   1400337df:	add    ah,bh
   1400337e1:	(bad)  
   1400337e2:	add    BYTE PTR [rax],al
   1400337e4:	add    DWORD PTR [rax],eax
   1400337e6:	add    BYTE PTR [rax],al
   1400337e8:	or     eax,0x62
   1400337ed:	add    BYTE PTR [rax],al
   1400337ef:	add    BYTE PTR [rax],ch
   1400337f1:	(bad)  
   1400337f2:	add    BYTE PTR [rax],al
   1400337f4:	(bad)  
   1400337f5:	(bad)  
   1400337f6:	(bad)  
   1400337f7:	inc    DWORD PTR [rcx]
   1400337f9:	(bad)  
   1400337fa:	add    al,BYTE PTR [rax]
   1400337fc:	(bad)  
   1400337fd:	xor    al,BYTE PTR [rdx]
   1400337ff:	push   rax
   140033800:	add    DWORD PTR [rsi],eax
   140033802:	add    al,BYTE PTR [rax]
   140033804:	(bad)  
   140033805:	xor    al,BYTE PTR [rdx]
   140033807:	push   rax
   140033808:	add    DWORD PTR [rcx],ecx
   14003380a:	add    DWORD PTR [rax],eax
   14003380c:	or     DWORD PTR [rdx+0x0],eax
   14003380f:	add    BYTE PTR [rcx],dl
   140033811:	adc    al,BYTE PTR [rcx]
   140033813:	add    BYTE PTR [rcx],cl
   140033815:	(bad)  
   140033816:	add    BYTE PTR [rax],al
   140033818:	in     al,dx
   140033819:	(bad)  
   14003381a:	add    al,BYTE PTR [rax]
   14003381c:	xor    BYTE PTR [rbx-0xfffe],dl
   140033822:	(bad)  
   140033823:	(bad)  
   140033824:	mov    ebx,0x9000022a
   140033829:	(bad)  
   14003382a:	add    BYTE PTR [rax],al
   14003382c:	(bad)  
   14003382d:	(bad)  
   14003382e:	(bad)  
   14003382f:	jmp    FWORD PTR [rsi+0x62]
   140033835:	add    BYTE PTR [rax],al
   140033837:	add    BYTE PTR [rdi],cl
   140033839:	movsxd eax,DWORD PTR [rax]
   14003383b:	add    bh,bh
   14003383d:	(bad)  
   14003383e:	(bad)  
   14003383f:	inc    DWORD PTR [rcx]
   140033841:	(bad)  
   140033842:	add    al,BYTE PTR [rax]
   140033844:	(bad)  
   140033845:	xor    al,BYTE PTR [rdx]
   140033847:	push   rax
   140033848:	adc    DWORD PTR [rdx],edx
   14003384a:	add    DWORD PTR [rax],eax
   14003384c:	or     DWORD PTR [rdx+0x16ec0000],eax
   140033852:	add    al,BYTE PTR [rax]
   140033854:	pop    rax
   140033855:	xchg   ebx,eax
   140033856:	add    al,BYTE PTR [rax]
   140033858:	(bad)  
   140033859:	(bad)  
   14003385a:	(bad)  
   14003385b:	call   rsp
   14003385d:	sub    al,BYTE PTR [rdx]
   14003385f:	add    BYTE PTR [rax],dh
   140033861:	movsxd eax,DWORD PTR [rax]
   140033863:	add    bh,bh
   140033865:	(bad)  
   140033866:	(bad)  
   140033867:	dec    DWORD PTR [rsi+0x63]
   14003386a:	add    BYTE PTR [rax],al
   14003386c:	add    BYTE PTR [rax],al
   14003386e:	add    BYTE PTR [rax],al
   140033870:	scas   eax,DWORD PTR es:[rdi]
   140033871:	movsxd eax,DWORD PTR [rax]
   140033873:	add    bh,bh
   140033875:	(bad)  
   140033876:	(bad)  
   140033877:	inc    DWORD PTR [rcx]
   140033879:	(bad)  
   14003387a:	add    al,BYTE PTR [rax]
   14003387c:	(bad)  
   14003387d:	xor    al,BYTE PTR [rdx]
   14003387f:	push   rax
   140033880:	adc    DWORD PTR [rdi],edx
   140033882:	add    DWORD PTR [rax],eax
   140033884:	(bad)  
   140033885:	ret    0x0
   140033888:	in     al,dx
   140033889:	(bad)  
   14003388a:	add    al,BYTE PTR [rax]
   14003388c:	adc    BYTE PTR [rbx-0xfffe],0xff
   140033893:	(bad)  
   140033894:	in     eax,dx
   140033895:	sub    al,BYTE PTR [rdx]
   140033897:	add    BYTE PTR [rax],al
   140033899:	add    BYTE PTR [rax],al
   14003389b:	add    BYTE PTR [rsi],al
   14003389d:	sub    eax,DWORD PTR [rdx]
   14003389f:	add    al,dl
   1400338a1:	movsxd eax,DWORD PTR [rax]
   1400338a3:	add    bh,bh
   1400338a5:	(bad)  
   1400338a6:	(bad)  
   1400338a7:	push   rbx
   1400338a9:	movsxd eax,DWORD PTR [rax]
   1400338ab:	add    BYTE PTR [rax],al
   1400338ad:	add    BYTE PTR [rax],al
   1400338af:	add    BYTE PTR [rsi],dh
   1400338b1:	add    BYTE PTR fs:[rax],al
   1400338b4:	add    DWORD PTR [rax],eax
   1400338b6:	add    BYTE PTR [rax],al
   1400338b8:	rex.RXB
   1400338b9:	add    BYTE PTR fs:[rax],al
   1400338bc:	add    BYTE PTR [rax],al
   1400338be:	add    BYTE PTR [rax],al
   1400338c0:	(bad)  
   1400338c1:	add    BYTE PTR fs:[rax],al
   1400338c4:	(bad)  
   1400338c5:	(bad)  
   1400338c6:	(bad)  
   1400338c7:	inc    DWORD PTR [rcx]
   1400338c9:	(bad)  
   1400338ca:	add    al,BYTE PTR [rax]
   1400338cc:	(bad)  
   1400338cd:	xor    al,BYTE PTR [rdx]
   1400338cf:	push   rax
   1400338d0:	add    DWORD PTR [rsi],eax
   1400338d2:	add    al,BYTE PTR [rax]
   1400338d4:	(bad)  
   1400338d5:	xor    al,BYTE PTR [rdx]
   1400338d7:	push   rax
   1400338d8:	adc    DWORD PTR [rdi],edx
   1400338da:	add    DWORD PTR [rax],eax
   1400338dc:	(bad)  
   1400338dd:	ret    0x0
   1400338e0:	in     al,dx
   1400338e1:	(bad)  
   1400338e2:	add    al,BYTE PTR [rax]
   1400338e4:	test   al,0x93
   1400338e6:	add    al,BYTE PTR [rax]
   1400338e8:	(bad)  
   1400338e9:	(bad)  
   1400338ea:	(bad)  
   1400338eb:	call   FWORD PTR [rdi]
   1400338ed:	sub    eax,DWORD PTR [rdx]
   1400338ef:	add    BYTE PTR [rax],al
   1400338f1:	add    BYTE PTR [rax],al
   1400338f3:	add    BYTE PTR [rax],bh
   1400338f5:	sub    eax,DWORD PTR [rdx]
   1400338f7:	add    BYTE PTR [rax-0xffff9c],al
   1400338fd:	(bad)  
   1400338fe:	(bad)  
   1400338ff:	jmp    QWORD PTR [rbx+0x64]
   140033905:	add    BYTE PTR [rax],al
   140033907:	add    dh,ah
   140033909:	add    BYTE PTR fs:[rax],al
   14003390c:	add    DWORD PTR [rax],eax
   14003390e:	add    BYTE PTR [rax],al
   140033910:	mul    DWORD PTR [rax+rax*1+0x0]
   140033914:	add    BYTE PTR [rax],al
   140033916:	add    BYTE PTR [rax],al
   140033918:	adc    ah,BYTE PTR [rbp+0x0]
   14003391b:	add    bh,bh
   14003391d:	(bad)  
   14003391e:	(bad)  
   14003391f:	inc    DWORD PTR [rcx]
   140033921:	(bad)  
   140033922:	add    al,BYTE PTR [rax]
   140033924:	(bad)  
   140033925:	xor    al,BYTE PTR [rdx]
   140033927:	push   rax
   140033928:	add    DWORD PTR [rsi],eax
   14003392a:	add    al,BYTE PTR [rax]
   14003392c:	(bad)  
   14003392d:	xor    al,BYTE PTR [rdx]
   14003392f:	push   rax
   140033930:	adc    DWORD PTR [rdi],edx
   140033932:	add    DWORD PTR [rax],eax
   140033934:	(bad)  
   140033935:	ret    0x0
   140033938:	in     al,dx
   140033939:	(bad)  
   14003393a:	add    al,BYTE PTR [rax]
   14003393c:	rcl    BYTE PTR [rbx-0xfffe],1
   140033942:	(bad)  
   140033943:	call   QWORD PTR [rcx+0x2b]
   140033946:	add    al,BYTE PTR [rax]
   140033948:	add    BYTE PTR [rax],al
   14003394a:	add    BYTE PTR [rax],al
   14003394c:	push   0x2b
   14003394e:	add    al,BYTE PTR [rax]
   140033950:	xor    BYTE PTR [rbp+0x0],ah
   140033953:	add    bh,bh
   140033955:	(bad)  
   140033956:	(bad)  
   140033957:	call   QWORD PTR [rbx+0x65]
   14003395a:	add    BYTE PTR [rax],al
   14003395c:	add    BYTE PTR [rax],al
   14003395e:	add    BYTE PTR [rax],al
   140033960:	xchg   esi,eax
   140033961:	add    BYTE PTR gs:[rax],al
   140033964:	add    DWORD PTR [rax],eax
   140033966:	add    BYTE PTR [rax],al
   140033968:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033969:	add    BYTE PTR gs:[rax],al
   14003396c:	add    BYTE PTR [rax],al
   14003396e:	add    BYTE PTR [rax],al
   140033970:	ret    0x65
   140033973:	add    bh,bh
   140033975:	(bad)  
   140033976:	(bad)  
   140033977:	inc    DWORD PTR [rcx]
   140033979:	(bad)  
   14003397a:	add    al,BYTE PTR [rax]
   14003397c:	(bad)  
   14003397d:	xor    al,BYTE PTR [rdx]
   14003397f:	push   rax
   140033980:	add    DWORD PTR [rsi],eax
   140033982:	add    al,BYTE PTR [rax]
   140033984:	(bad)  
   140033985:	xor    al,BYTE PTR [rdx]
   140033987:	push   rax
   140033988:	add    DWORD PTR [rcx],ecx
   14003398a:	add    DWORD PTR [rax],eax
   14003398c:	or     DWORD PTR [rdx+0x0],esp
   14003398f:	add    BYTE PTR [rcx],al
   140033991:	or     DWORD PTR [rcx],eax
   140033993:	add    BYTE PTR [rcx],cl
   140033995:	rex.X add BYTE PTR [rax],al
   140033998:	add    DWORD PTR [rcx],ecx
   14003399a:	add    DWORD PTR [rax],eax
   14003399c:	or     DWORD PTR [rdx+0x0],eax
   14003399f:	add    BYTE PTR [rcx],al
   1400339a1:	or     eax,0x420d0001
   1400339a6:	add    BYTE PTR [rax],al
   1400339a8:	add    DWORD PTR [rcx],ecx
   1400339aa:	add    DWORD PTR [rax],eax
   1400339ac:	or     DWORD PTR [rdx+0x0],esp
   1400339af:	add    BYTE PTR [rcx],al
   1400339b1:	add    al,0x1
   1400339b3:	add    BYTE PTR [rdx+rax*2],al
   1400339b6:	add    BYTE PTR [rax],al
   1400339b8:	add    DWORD PTR [rip+0x620d0001],ecx        # 0x1a21039bf
   1400339be:	add    BYTE PTR [rax],al
   1400339c0:	adc    DWORD PTR [rdi],edx
   1400339c2:	add    DWORD PTR [rax],eax
   1400339c4:	(bad)  
   1400339c5:	(bad)  
   1400339c6:	add    BYTE PTR [rax],al
   1400339c8:	in     al,dx
   1400339c9:	(bad)  
   1400339ca:	add    al,BYTE PTR [rax]
   1400339cc:	mov    al,0xa0
   1400339ce:	add    al,BYTE PTR [rax]
   1400339d0:	lock ja 0x1400339d3
   1400339d3:	add    bh,bh
   1400339d5:	(bad)  
   1400339d6:	(bad)  
   1400339d7:	(bad)  
   1400339d8:	cmp    DWORD PTR [rax+0x0],edi
   1400339db:	add    BYTE PTR [rax],al
   1400339dd:	add    BYTE PTR [rax],al
   1400339df:	add    BYTE PTR [rdx+0x78],ch
   1400339e2:	add    BYTE PTR [rax],al
   1400339e4:	(bad)  
   1400339e5:	(bad)  
   1400339e6:	(bad)  
   1400339e7:	inc    DWORD PTR [rcx]
   1400339e9:	or     DWORD PTR [rcx],eax
   1400339eb:	add    BYTE PTR [rcx],cl
   1400339ed:	(bad)  
   1400339ee:	add    BYTE PTR [rax],al
   1400339f0:	adc    DWORD PTR [rdx],edx
   1400339f2:	add    DWORD PTR [rax],eax
   1400339f4:	or     DWORD PTR [rdx+0x0],esp
   1400339f7:	add    ah,ch
   1400339f9:	(bad)  
   1400339fa:	add    al,BYTE PTR [rax]
   1400339fc:	loopne 0x14003399e
   1400339fe:	add    al,BYTE PTR [rax]
   140033a00:	(bad)  
   140033a01:	(bad)  
   140033a02:	(bad)  
   140033a03:	push   QWORD PTR [rax-0x7ffffdd3]
   140033a09:	jbe    0x140033a0b
   140033a0b:	add    bh,bh
   140033a0d:	(bad)  
   140033a0e:	(bad)  
   140033a0f:	call   QWORD PTR [rcx]
   140033a11:	adc    al,BYTE PTR [rcx]
   140033a13:	add    BYTE PTR [rcx],cl
   140033a15:	(bad)  
   140033a16:	add    BYTE PTR [rax],al
   140033a18:	in     al,dx
   140033a19:	(bad)  
   140033a1a:	add    al,BYTE PTR [rax]
   140033a1c:	adc    BYTE PTR [rcx+0x77800002],ah
   140033a22:	add    BYTE PTR [rax],al
   140033a24:	(bad)  
   140033a25:	(bad)  
   140033a26:	(bad)  
   140033a27:	call   QWORD PTR [rcx]
   140033a29:	and    DWORD PTR [rcx],eax
   140033a2b:	add    BYTE PTR [rax],bl
   140033a2d:	(bad)  
   140033a2e:	add    BYTE PTR [rax],al
   140033a30:	in     al,dx
   140033a31:	(bad)  
   140033a32:	add    al,BYTE PTR [rax]
   140033a34:	mov    eax,0xff00029e
   140033a39:	(bad)  
   140033a3a:	(bad)  
   140033a3b:	call   QWORD PTR [rax+0x22b]
   140033a41:	add    BYTE PTR [rax],al
   140033a43:	add    BYTE PTR [rax+0x100022b],ch
   140033a49:	add    BYTE PTR [rax],al
   140033a4b:	add    al,cl
   140033a4d:	sub    eax,DWORD PTR [rdx]
   140033a4f:	add    BYTE PTR [rdx],al
   140033a51:	add    BYTE PTR [rax],al
   140033a53:	add    bh,ah
   140033a55:	sub    eax,DWORD PTR [rdx]
   140033a57:	add    BYTE PTR [rax+0x68],dl
   140033a5a:	add    BYTE PTR [rax],al
   140033a5c:	(bad)  
   140033a5d:	(bad)  
   140033a5e:	(bad)  
   140033a5f:	dec    DWORD PTR [rcx+0x68]
   140033a65:	add    BYTE PTR [rax],al
   140033a67:	add    bh,al
   140033a69:	push   0x10000
   140033a6e:	add    BYTE PTR [rax],al
   140033a70:	in     al,dx
   140033a71:	push   0x20000
   140033a76:	add    BYTE PTR [rax],al
   140033a78:	add    eax,0x3000069
   140033a7d:	add    BYTE PTR [rax],al
   140033a7f:	add    BYTE PTR [rbx+0x69],ah
   140033a82:	add    BYTE PTR [rax],al
   140033a84:	(bad)  
   140033a85:	(bad)  
   140033a86:	(bad)  
   140033a87:	inc    DWORD PTR [rcx]
   140033a89:	(bad)  
   140033a8a:	add    al,BYTE PTR [rax]
   140033a8c:	(bad)  
   140033a8d:	xor    al,BYTE PTR [rdx]
   140033a8f:	push   rax
   140033a90:	add    DWORD PTR [rsi],eax
   140033a92:	add    al,BYTE PTR [rax]
   140033a94:	(bad)  
   140033a95:	xor    al,BYTE PTR [rdx]
   140033a97:	push   rax
   140033a98:	add    DWORD PTR [rsi],eax
   140033a9a:	add    al,BYTE PTR [rax]
   140033a9c:	(bad)  
   140033a9d:	xor    al,BYTE PTR [rdx]
   140033a9f:	push   rax
   140033aa0:	add    DWORD PTR [rsi],eax
   140033aa2:	add    al,BYTE PTR [rax]
   140033aa4:	(bad)  
   140033aa5:	xor    al,BYTE PTR [rdx]
   140033aa7:	push   rax
   140033aa8:	adc    DWORD PTR [rdx],edx
   140033aaa:	add    DWORD PTR [rax],eax
   140033aac:	or     DWORD PTR [rdx+0x0],esp
   140033aaf:	add    ah,ch
   140033ab1:	(bad)  
   140033ab2:	add    al,BYTE PTR [rax]
   140033ab4:	loopne 0x140033a54
   140033ab6:	add    al,BYTE PTR [rax]
   140033ab8:	(bad)  
   140033ab9:	(bad)  
   140033aba:	(bad)  
   140033abb:	inc    DWORD PTR [rsi]
   140033abd:	sub    al,0x2
   140033abf:	add    BYTE PTR [rax],al
   140033ac1:	add    BYTE PTR [rax],al
   140033ac3:	add    BYTE PTR [rsi],bl
   140033ac5:	sub    al,0x2
   140033ac7:	add    BYTE PTR [rcx],al
   140033ac9:	add    BYTE PTR [rax],al
   140033acb:	add    BYTE PTR [rsi],bh
   140033acd:	sub    al,0x2
   140033acf:	add    BYTE PTR [rdx],al
   140033ad1:	add    BYTE PTR [rax],al
   140033ad3:	add    BYTE PTR [rbp+0x2c],bl
   140033ad6:	add    al,BYTE PTR [rax]
   140033ad8:	sub    BYTE PTR [rcx+0x0],0x0
   140033adc:	(bad)  
   140033add:	(bad)  
   140033ade:	(bad)  
   140033adf:	push   QWORD PTR [rcx+rbp*2+0x30000]
   140033ae6:	add    BYTE PTR [rax],al
   140033ae8:	in     al,0x69
   140033aea:	add    BYTE PTR [rax],al
   140033aec:	add    al,BYTE PTR [rax]
   140033aee:	add    BYTE PTR [rax],al
   140033af0:	clc    
   140033af1:	imul   eax,DWORD PTR [rax],0x100
   140033af7:	add    BYTE PTR [rdx+rbp*2],cl
   140033afa:	add    BYTE PTR [rax],al
   140033afc:	add    BYTE PTR [rax],al
   140033afe:	add    BYTE PTR [rax],al
   140033b00:	and    DWORD PTR [rdx+0x0],ebp
   140033b03:	add    bh,bh
   140033b05:	(bad)  
   140033b06:	(bad)  
   140033b07:	inc    DWORD PTR [rcx]
   140033b09:	(bad)  
   140033b0a:	add    al,BYTE PTR [rax]
   140033b0c:	(bad)  
   140033b0d:	xor    al,BYTE PTR [rdx]
   140033b0f:	push   rax
   140033b10:	add    DWORD PTR [rsi],eax
   140033b12:	add    al,BYTE PTR [rax]
   140033b14:	(bad)  
   140033b15:	xor    al,BYTE PTR [rdx]
   140033b17:	push   rax
   140033b18:	add    DWORD PTR [rsi],eax
   140033b1a:	add    al,BYTE PTR [rax]
   140033b1c:	(bad)  
   140033b1d:	xor    al,BYTE PTR [rdx]
   140033b1f:	push   rax
   140033b20:	add    DWORD PTR [rsi],eax
   140033b22:	add    al,BYTE PTR [rax]
   140033b24:	(bad)  
   140033b25:	xor    al,BYTE PTR [rdx]
   140033b27:	push   rax
   140033b28:	add    DWORD PTR [rcx],ecx
   140033b2a:	add    DWORD PTR [rax],eax
   140033b2c:	or     DWORD PTR [rdx+0x0],eax
   140033b2f:	add    BYTE PTR [rcx],bl
   140033b31:	sub    DWORD PTR [rax+rax*1],eax
   140033b34:	sbb    eax,0x16002301
   140033b39:	jo     0x140033b50
   140033b3b:	(bad)  
   140033b3c:	in     al,dx
   140033b3d:	(bad)  
   140033b3e:	add    al,BYTE PTR [rax]
   140033b40:	or     BYTE PTR [rdi-0xfffe],bl
   140033b46:	(bad)  
   140033b47:	inc    DWORD PTR [rax]
   140033b49:	add    BYTE PTR [rax],al
   140033b4b:	add    BYTE PTR [rax],al
   140033b4d:	add    BYTE PTR [rax],al
   140033b4f:	add    BYTE PTR [rsp+rbp*1+0x2],bh
   140033b53:	add    bh,bh
   140033b55:	(bad)  
   140033b56:	(bad)  
   140033b57:	inc    DWORD PTR [rax]
   140033b59:	add    BYTE PTR [rax],al
   140033b5b:	add    BYTE PTR [rax],al
   140033b5d:	add    BYTE PTR [rax],al
   140033b5f:	add    BYTE PTR [rcx],al
   140033b61:	add    BYTE PTR [rax],al
   140033b63:	add    BYTE PTR [rdx],al
   140033b65:	add    BYTE PTR [rax],al
   140033b67:	add    BYTE PTR [rcx],al
   140033b69:	add    BYTE PTR [rax],al
   140033b6b:	add    BYTE PTR [rax+0x3b],dh
   140033b6e:	add    eax,DWORD PTR [rax]
	...
   140033b7c:	xchg   edi,eax
   140033b7d:	sub    al,0x2
   140033b7f:	add    BYTE PTR [rax+0x0],ch
   140033b82:	add    BYTE PTR [rax],al
   140033b84:	lock push 0x0
   140033b87:	add    bh,bh
   140033b89:	(bad)  
   140033b8a:	(bad)  
   140033b8b:	jmp    QWORD PTR [rcx]
   140033b8d:	imul   eax,DWORD PTR [rax],0x0
   140033b90:	add    BYTE PTR [rax],al
   140033b92:	add    BYTE PTR [rax],al
   140033b94:	stos   BYTE PTR es:[rdi],al
   140033b95:	imul   eax,DWORD PTR [rax],0x0
   140033b98:	add    DWORD PTR [rax],eax
   140033b9a:	add    BYTE PTR [rax],al
   140033b9c:	pop    rbx
   140033b9d:	ins    DWORD PTR es:[rdi],dx
   140033b9e:	add    BYTE PTR [rax],al
   140033ba0:	add    BYTE PTR [rax],al
   140033ba2:	add    BYTE PTR [rax],al
   140033ba4:	imul   ebp,DWORD PTR [rbp+0x0],0xffffff00
   140033bab:	call   QWORD PTR [rdi+0x22c]
   140033bb1:	add    BYTE PTR [rax],al
   140033bb3:	add    BYTE PTR [rsp+rbp*1+0x20002],ah
   140033bba:	add    BYTE PTR [rax],al
   140033bbc:	fld    TBYTE PTR [rdx+rax*1]
   140033bbf:	add    BYTE PTR [rax],al
   140033bc1:	add    BYTE PTR [rax],al
   140033bc3:	add    BYTE PTR [rcx],al
   140033bc5:	(bad)  
   140033bc6:	add    al,BYTE PTR [rax]
   140033bc8:	(bad)  
   140033bc9:	xor    al,BYTE PTR [rdx]
   140033bcb:	push   rax
   140033bcc:	sbb    DWORD PTR [rdx],ecx
   140033bce:	add    al,BYTE PTR [rax]
   140033bd0:	or     dl,BYTE PTR [rdx+0x16ec5006]
   140033bd6:	add    al,BYTE PTR [rax]
   140033bd8:	or     BYTE PTR [rdi+0x9010002],bl
   140033bde:	add    DWORD PTR [rax],eax
   140033be0:	or     DWORD PTR [rdx+0x0],esp
   140033be3:	add    BYTE PTR [rcx],al
   140033be5:	(bad)  
   140033be6:	add    DWORD PTR [rax],eax
   140033be8:	(bad)  
   140033be9:	rex.X add BYTE PTR [rax],al
   140033bec:	add    DWORD PTR [rbx],edx
   140033bee:	add    DWORD PTR [rax],eax
   140033bf0:	adc    eax,DWORD PTR [rdx+0x0]
   140033bf3:	add    BYTE PTR [rcx],al
   140033bf5:	add    al,0x1
   140033bf7:	add    BYTE PTR [rdx+rax*2],al
   140033bfa:	add    BYTE PTR [rax],al
   140033bfc:	add    DWORD PTR [rcx],ecx
   140033bfe:	add    DWORD PTR [rax],eax
   140033c00:	or     DWORD PTR [rdx+0x0],eax
   140033c03:	add    BYTE PTR [rcx],dl
   140033c05:	adc    eax,DWORD PTR [rbx]
   140033c07:	add    BYTE PTR [rbx],cl
   140033c09:	rex.X (bad) 
   140033c0b:	jo     0x140033c13
   140033c0d:	(bad)  
   140033c0e:	add    BYTE PTR [rax],al
   140033c10:	in     al,dx
   140033c11:	(bad)  
   140033c12:	add    al,BYTE PTR [rax]
   140033c14:	xor    BYTE PTR [rdi-0xfffe],bl
   140033c1a:	(bad)  
   140033c1b:	(bad)  
   140033c1c:	jmp    0xc0033e4d
   140033c21:	outs   dx,DWORD PTR ds:[rsi]
   140033c22:	add    BYTE PTR [rax],al
   140033c24:	(bad)  
   140033c25:	(bad)  
   140033c26:	(bad)  
   140033c27:	jmp    FWORD PTR [rdi+0x6f]
   140033c2d:	add    BYTE PTR [rax],al
   140033c2f:	add    cl,bl
   140033c31:	outs   dx,DWORD PTR ds:[rsi]
   140033c32:	add    BYTE PTR [rax],al
   140033c34:	(bad)  
   140033c35:	(bad)  
   140033c36:	(bad)  
   140033c37:	inc    DWORD PTR [rcx]
   140033c39:	add    al,BYTE PTR [rcx]
   140033c3b:	add    BYTE PTR [rdx],al
   140033c3d:	push   rax
   140033c3e:	add    BYTE PTR [rax],al
   140033c40:	adc    DWORD PTR [rdi],edx
   140033c42:	add    DWORD PTR [rax],eax
   140033c44:	(bad)  
   140033c45:	movabs ds:0x9f58000216ec0000,al
   140033c4e:	add    al,BYTE PTR [rax]
   140033c50:	(bad)  
   140033c51:	(bad)  
   140033c52:	(bad)  
   140033c53:	(bad)  
   140033c54:	jmp    FWORD PTR [rdx+rax*1]
   140033c57:	add    BYTE PTR [rax],al
   140033c59:	add    BYTE PTR [rax],al
   140033c5b:	add    BYTE PTR [rax],bl
   140033c5d:	sub    eax,0x70200002
   140033c62:	add    BYTE PTR [rax],al
   140033c64:	(bad)  
   140033c65:	(bad)  
   140033c66:	(bad)  
   140033c67:	push   QWORD PTR [rbx+0x70]
   140033c6d:	add    BYTE PTR [rax],al
   140033c6f:	add    BYTE PTR [rbx+0x71],cl
   140033c72:	add    BYTE PTR [rax],al
   140033c74:	(bad)  
   140033c75:	(bad)  
   140033c76:	(bad)  
   140033c77:	call   FWORD PTR [rbx+0x71]
   140033c7a:	add    BYTE PTR [rax],al
   140033c7c:	add    BYTE PTR [rax],al
   140033c7e:	add    BYTE PTR [rax],al
   140033c80:	(bad)  
   140033c81:	jno    0x140033c83
   140033c83:	add    BYTE PTR [rcx],al
   140033c85:	add    BYTE PTR [rax],al
   140033c87:	add    bl,ah
   140033c89:	jno    0x140033c8b
   140033c8b:	add    BYTE PTR [rax],al
   140033c8d:	add    BYTE PTR [rax],al
   140033c8f:	add    bh,ch
   140033c91:	jno    0x140033c93
   140033c93:	add    bh,bh
   140033c95:	(bad)  
   140033c96:	(bad)  
   140033c97:	inc    DWORD PTR [rcx]
   140033c99:	(bad)  
   140033c9a:	add    al,BYTE PTR [rax]
   140033c9c:	(bad)  
   140033c9d:	xor    al,BYTE PTR [rdx]
   140033c9f:	push   rax
   140033ca0:	add    DWORD PTR [rsi],eax
   140033ca2:	add    al,BYTE PTR [rax]
   140033ca4:	(bad)  
   140033ca5:	xor    al,BYTE PTR [rdx]
   140033ca7:	push   rax
   140033ca8:	sbb    DWORD PTR [rdi],esp
   140033caa:	add    al,BYTE PTR [rax]
   140033cac:	or     al,0x1
   140033cae:	adc    eax,DWORD PTR [rax]
   140033cb0:	in     al,0x17
   140033cb2:	add    al,BYTE PTR [rax]
   140033cb4:	sbb    BYTE PTR [rdi+0x8a0002],0x0
   140033cbb:	add    bh,bh
   140033cbd:	(bad)  
   140033cbe:	(bad)  
   140033cbf:	push   QWORD PTR [rcx]
   140033cc1:	sub    eax,0x72100002
   140033cc6:	add    BYTE PTR [rax],al
   140033cc8:	(bad)  
   140033cc9:	(bad)  
   140033cca:	(bad)  
   140033ccb:	dec    DWORD PTR [rax+0x72]
   140033cce:	add    BYTE PTR [rax],al
   140033cd0:	add    BYTE PTR [rax],al
   140033cd2:	add    BYTE PTR [rax],al
   140033cd4:	mov    esi,0xff000073
   140033cd9:	(bad)  
   140033cda:	(bad)  
   140033cdb:	inc    DWORD PTR [rcx]
   140033cdd:	(bad)  
   140033cde:	add    al,BYTE PTR [rax]
   140033ce0:	(bad)  
   140033ce1:	xor    al,BYTE PTR [rdx]
   140033ce3:	push   rax
   140033ce4:	adc    DWORD PTR [rdx],edx
   140033ce6:	add    DWORD PTR [rax],eax
   140033ce8:	or     DWORD PTR [rdx+0x16ec0000],eax
   140033cee:	add    al,BYTE PTR [rax]
   140033cf0:	test   al,0x9f
   140033cf2:	add    al,BYTE PTR [rax]
   140033cf4:	(bad)  
   140033cf5:	(bad)  
   140033cf6:	(bad)  
   140033cf7:	dec    DWORD PTR [rdx+0x2d]
   140033cfa:	add    al,BYTE PTR [rax]
   140033cfc:	lock jae 0x140033cff
   140033cff:	add    bh,bh
   140033d01:	(bad)  
   140033d02:	(bad)  
   140033d03:	dec    DWORD PTR [rip+0x74]        # 0x140033d7d
   140033d09:	add    BYTE PTR [rax],al
   140033d0b:	add    BYTE PTR [rsi+0x74],dl
   140033d0e:	add    BYTE PTR [rax],al
   140033d10:	(bad)  
   140033d11:	(bad)  
   140033d12:	(bad)  
   140033d13:	inc    DWORD PTR [rcx]
   140033d15:	(bad)  
   140033d16:	add    al,BYTE PTR [rax]
   140033d18:	(bad)  
   140033d19:	xor    al,BYTE PTR [rdx]
   140033d1b:	push   rax
   140033d1c:	adc    DWORD PTR [rdx],edx
   140033d1e:	add    DWORD PTR [rax],eax
   140033d20:	or     edx,eax
   140033d22:	add    BYTE PTR [rax],al
   140033d24:	in     al,dx
   140033d25:	(bad)  
   140033d26:	add    al,BYTE PTR [rax]
   140033d28:	rcr    BYTE PTR [rdi-0xfffe],1
   140033d2e:	(bad)  
   140033d2f:	jmp    QWORD PTR [rdx+0x2d]
   140033d32:	add    al,BYTE PTR [rax]
   140033d34:	add    BYTE PTR [rax],al
   140033d36:	add    BYTE PTR [rax],al
   140033d38:	jp     0x140033d67
   140033d3a:	add    al,BYTE PTR [rax]
   140033d3c:	jo     0x140033db2
   140033d3e:	add    BYTE PTR [rax],al
   140033d40:	(bad)  
   140033d41:	(bad)  
   140033d42:	(bad)  
   140033d43:	call   QWORD PTR [rdx+0x74]
   140033d49:	add    BYTE PTR [rax],al
   140033d4b:	add    cl,dh
   140033d4d:	je     0x140033d4f
   140033d4f:	add    BYTE PTR [rcx],al
   140033d51:	add    BYTE PTR [rax],al
   140033d53:	add    BYTE PTR [rcx+0x75],bl
   140033d56:	add    BYTE PTR [rax],al
   140033d58:	add    BYTE PTR [rax],al
   140033d5a:	add    BYTE PTR [rax],al
   140033d5c:	ins    BYTE PTR es:[rdi],dx
   140033d5d:	jne    0x140033d5f
   140033d5f:	add    bh,bh
   140033d61:	(bad)  
   140033d62:	(bad)  
   140033d63:	inc    DWORD PTR [rcx]
   140033d65:	(bad)  
   140033d66:	add    al,BYTE PTR [rax]
   140033d68:	(bad)  
   140033d69:	xor    al,BYTE PTR [rdx]
   140033d6b:	push   rax
   140033d6c:	add    DWORD PTR [rsi],eax
   140033d6e:	add    al,BYTE PTR [rax]
   140033d70:	(bad)  
   140033d71:	xor    al,BYTE PTR [rdx]
   140033d73:	push   rax
   140033d74:	adc    DWORD PTR [rdi],edx
   140033d76:	add    DWORD PTR [rax],eax
   140033d78:	(bad)  
   140033d79:	(bad)  
   140033d7a:	add    BYTE PTR [rax],al
   140033d7c:	in     al,dx
   140033d7d:	(bad)  
   140033d7e:	add    al,BYTE PTR [rax]
   140033d80:	clc    
   140033d81:	lahf   
   140033d82:	add    al,BYTE PTR [rax]
   140033d84:	(bad)  
   140033d85:	(bad)  
   140033d86:	(bad)  
   140033d87:	call   QWORD PTR [rdx-0x6ffffdd3]
   140033d8d:	jne    0x140033d8f
   140033d8f:	add    bh,bh
   140033d91:	(bad)  
   140033d92:	(bad)  
   140033d93:	jmp    QWORD PTR [rsi+rsi*2]
   140033d96:	add    BYTE PTR [rax],al
   140033d98:	add    BYTE PTR [rax],al
   140033d9a:	add    BYTE PTR [rax],al
   140033d9c:	pop    rsp
   140033d9d:	jbe    0x140033d9f
   140033d9f:	add    bh,bh
   140033da1:	(bad)  
   140033da2:	(bad)  
   140033da3:	inc    DWORD PTR [rcx]
   140033da5:	(bad)  
   140033da6:	add    al,BYTE PTR [rax]
   140033da8:	(bad)  
   140033da9:	xor    al,BYTE PTR [rdx]
   140033dab:	push   rax
   140033dac:	adc    DWORD PTR [rcx],esp
   140033dae:	add    DWORD PTR [rax],eax
   140033db0:	sbb    BYTE PTR [rdx+0x0],ah
   140033db3:	add    ah,ch
   140033db5:	(bad)  
   140033db6:	add    al,BYTE PTR [rax]
   140033db8:	shl    BYTE PTR [rbp-0xfffe],0xff
   140033dbf:	call   rax
   140033dc1:	sub    eax,0x7ca00002
   140033dc6:	add    BYTE PTR [rax],al
   140033dc8:	(bad)  
   140033dc9:	(bad)  
   140033dca:	(bad)  
   140033dcb:	(bad)  
   140033dcc:	fstp   TBYTE PTR [rax+rax*1+0x0]
   140033dd0:	add    BYTE PTR [rax],al
   140033dd2:	add    BYTE PTR [rax],al
   140033dd4:	std    
   140033dd5:	jl     0x140033dd7
   140033dd7:	add    bh,bh
   140033dd9:	(bad)  
   140033dda:	(bad)  
   140033ddb:	inc    DWORD PTR [rcx]
   140033ddd:	(bad)  
   140033dde:	add    al,BYTE PTR [rax]
   140033de0:	(bad)  
   140033de1:	xor    al,BYTE PTR [rdx]
   140033de3:	push   rax
   140033de4:	adc    DWORD PTR [rdx],edx
   140033de6:	add    DWORD PTR [rax],eax
   140033de8:	or     DWORD PTR [rdx+0x0],esp
   140033deb:	add    ah,ch
   140033ded:	(bad)  
   140033dee:	add    al,BYTE PTR [rax]
   140033df0:	call   0x13f03409a
   140033df5:	(bad)  
   140033df6:	(bad)  
   140033df7:	(bad)  
   140033df8:	call   0x15003402a
   140033dfd:	jge    0x140033dff
   140033dff:	add    bh,bh
   140033e01:	(bad)  
   140033e02:	(bad)  
   140033e03:	inc    DWORD PTR [rcx]
   140033e05:	(bad)  
   140033e06:	add    al,BYTE PTR [rax]
   140033e08:	(bad)  
   140033e09:	xor    al,BYTE PTR [rdx]
   140033e0b:	push   rax
   140033e0c:	add    DWORD PTR [rcx],ecx
   140033e0e:	add    DWORD PTR [rax],eax
   140033e10:	or     DWORD PTR [rdx+0x0],esp
   140033e13:	add    BYTE PTR [rcx],al
   140033e15:	or     DWORD PTR [rcx],eax
   140033e17:	add    BYTE PTR [rcx],cl
   140033e19:	rex.X add BYTE PTR [rax],al
   140033e1c:	adc    DWORD PTR [rbx],edx
   140033e1e:	add    eax,DWORD PTR [rax]
   140033e20:	or     eax,DWORD PTR [rdx+0x7]
   140033e23:	jo     0x140033e2b
   140033e25:	(bad)  
   140033e26:	add    BYTE PTR [rax],al
   140033e28:	in     al,dx
   140033e29:	(bad)  
   140033e2a:	add    al,BYTE PTR [rax]
   140033e2c:	adc    BYTE PTR [rsi-0xfffe],ah
   140033e32:	(bad)  
   140033e33:	inc    DWORD PTR [rax]
   140033e35:	add    al,BYTE PTR cs:[rax]
   140033e38:	add    BYTE PTR [rsi+0x0],bh
   140033e3b:	add    bh,bh
   140033e3d:	(bad)  
   140033e3e:	(bad)  
   140033e3f:	jmp    FWORD PTR [rdi]
   140033e41:	jle    0x140033e43
   140033e43:	add    BYTE PTR [rax],al
   140033e45:	add    BYTE PTR [rax],al
   140033e47:	add    BYTE PTR [rcx+0x7e],bl
   140033e4a:	add    BYTE PTR [rax],al
   140033e4c:	(bad)  
   140033e4d:	(bad)  
   140033e4e:	(bad)  
   140033e4f:	inc    DWORD PTR [rcx]
   140033e51:	add    al,BYTE PTR [rcx]
   140033e53:	add    BYTE PTR [rdx],al
   140033e55:	push   rax
   140033e56:	add    BYTE PTR [rax],al
   140033e58:	adc    DWORD PTR [rcx],esp
   140033e5a:	add    DWORD PTR [rax],eax
   140033e5c:	sbb    BYTE PTR [rdx+0x0],ah
   140033e5f:	add    ah,ch
   140033e61:	(bad)  
   140033e62:	add    al,BYTE PTR [rax]
   140033e64:	push   rax
   140033e65:	stos   DWORD PTR es:[rdi],eax
   140033e66:	add    al,BYTE PTR [rax]
   140033e68:	(bad)  
   140033e69:	(bad)  
   140033e6a:	(bad)  
   140033e6b:	jmp    QWORD PTR [rax]
   140033e6d:	add    al,BYTE PTR cs:[rax]
   140033e70:	mov    al,0x7e
   140033e72:	add    BYTE PTR [rax],al
   140033e74:	(bad)  
   140033e75:	(bad)  
   140033e76:	(bad)  
   140033e77:	(bad)  
   140033e78:	jmp    0x140033ef8
   140033e7a:	add    BYTE PTR [rax],al
   140033e7c:	add    BYTE PTR [rax],al
   140033e7e:	add    BYTE PTR [rax],al
   140033e80:	xor    edi,DWORD PTR [rdi+0x0]
   140033e83:	add    bh,bh
   140033e85:	(bad)  
   140033e86:	(bad)  
   140033e87:	inc    DWORD PTR [rcx]
   140033e89:	(bad)  
   140033e8a:	add    al,BYTE PTR [rax]
   140033e8c:	(bad)  
   140033e8d:	xor    al,BYTE PTR [rdx]
   140033e8f:	push   rax
   140033e90:	adc    DWORD PTR [rdx],edx
   140033e92:	add    DWORD PTR [rax],eax
   140033e94:	or     DWORD PTR [rdx+0x0],esp
   140033e97:	add    ah,ch
   140033e99:	(bad)  
   140033e9a:	add    al,BYTE PTR [rax]
   140033e9c:	js     0x140033e49
   140033e9e:	add    al,BYTE PTR [rax]
   140033ea0:	(bad)  
   140033ea1:	(bad)  
   140033ea2:	(bad)  
   140033ea3:	(bad)  
   140033ea4:	cmp    BYTE PTR [rsi],ch
   140033ea6:	add    al,BYTE PTR [rax]
   140033ea8:	push   rax
   140033ea9:	jg     0x140033eab
   140033eab:	add    bh,bh
   140033ead:	(bad)  
   140033eae:	(bad)  
   140033eaf:	inc    DWORD PTR [rcx]
   140033eb1:	(bad)  
   140033eb2:	add    al,BYTE PTR [rax]
   140033eb4:	(bad)  
   140033eb5:	xor    al,BYTE PTR [rdx]
   140033eb7:	push   rax
   140033eb8:	adc    DWORD PTR [rip+0x10c0002],edx        # 0x1410f3ec0
   140033ebe:	ins    DWORD PTR es:[rdi],dx
   140033ebf:	add    ah,ch
   140033ec1:	(bad)  
   140033ec2:	add    al,BYTE PTR [rax]
   140033ec4:	movabs al,ds:0x50ffffffff0002ab
   140033ecd:	add    al,BYTE PTR cs:[rax]
   140033ed0:	add    BYTE PTR [rax],al
   140033ed2:	add    BYTE PTR [rax],al
   140033ed4:	imul   ebp,DWORD PTR [rsi],0x10002
   140033eda:	add    BYTE PTR [rax],al
   140033edc:	sub    DWORD PTR [rsi],0x7fb00002
   140033ee2:	add    BYTE PTR [rax],al
   140033ee4:	(bad)  
   140033ee5:	(bad)  
   140033ee6:	(bad)  
   140033ee7:	(bad)  
   140033ee8:	cld    
   140033ee9:	jg     0x140033eeb
   140033eeb:	add    BYTE PTR [rax],al
   140033eed:	add    BYTE PTR [rax],al
   140033eef:	add    BYTE PTR [rax+rax*4+0x0],dl
   140033ef3:	add    BYTE PTR [rcx],al
   140033ef5:	add    BYTE PTR [rax],al
   140033ef7:	add    BYTE PTR [rbp+0x2000080],al
   140033efd:	add    BYTE PTR [rax],al
   140033eff:	add    BYTE PTR [rsi+0x1000080],ch
   140033f05:	add    BYTE PTR [rax],al
   140033f07:	add    BYTE PTR [rcx+0x80],bh
   140033f0d:	add    BYTE PTR [rax],al
   140033f0f:	add    bl,dl
   140033f11:	add    BYTE PTR [rax],0x0
   140033f14:	(bad)  
   140033f15:	(bad)  
   140033f16:	(bad)  
   140033f17:	inc    DWORD PTR [rcx]
   140033f19:	(bad)  
   140033f1a:	add    al,BYTE PTR [rax]
   140033f1c:	(bad)  
   140033f1d:	xor    al,BYTE PTR [rdx]
   140033f1f:	push   rax
   140033f20:	add    DWORD PTR [rsi],eax
   140033f22:	add    al,BYTE PTR [rax]
   140033f24:	(bad)  
   140033f25:	xor    al,BYTE PTR [rdx]
   140033f27:	push   rax
   140033f28:	add    DWORD PTR [rsi],eax
   140033f2a:	add    al,BYTE PTR [rax]
   140033f2c:	(bad)  
   140033f2d:	xor    al,BYTE PTR [rdx]
   140033f2f:	push   rax
   140033f30:	adc    DWORD PTR [rdx],edx
   140033f32:	add    DWORD PTR [rax],eax
   140033f34:	or     DWORD PTR [rdx+0x16ec0000],eax
   140033f3a:	add    al,BYTE PTR [rax]
   140033f3c:	enter  0x2ab,0x0
   140033f40:	(bad)  
   140033f41:	(bad)  
   140033f42:	(bad)  
   140033f43:	call   FWORD PTR [rcx-0xffffdd2]
   140033f49:	add    BYTE PTR [rax],0x0
   140033f4c:	(bad)  
   140033f4d:	(bad)  
   140033f4e:	(bad)  
   140033f4f:	(bad)  
   140033f50:	add    DWORD PTR ds:[rax],0x0
   140033f57:	add    BYTE PTR [rcx-0xffff7f],ah
   140033f5d:	(bad)  
   140033f5e:	(bad)  
   140033f5f:	inc    DWORD PTR [rcx]
   140033f61:	(bad)  
   140033f62:	add    al,BYTE PTR [rax]
   140033f64:	(bad)  
   140033f65:	xor    al,BYTE PTR [rdx]
   140033f67:	push   rax
   140033f68:	add    DWORD PTR [rcx],ecx
   140033f6a:	add    DWORD PTR [rax],eax
   140033f6c:	or     DWORD PTR [rdx+0x0],eax
   140033f6f:	add    BYTE PTR [rcx],al
   140033f71:	or     DWORD PTR [rcx],eax
   140033f73:	add    BYTE PTR [rcx],cl
   140033f75:	(bad)  
   140033f76:	add    BYTE PTR [rax],al
   140033f78:	adc    DWORD PTR [rcx],ebx
   140033f7a:	add    al,BYTE PTR [rax]
   140033f7c:	adc    BYTE PTR [rcx],al
   140033f7e:	xor    DWORD PTR [rcx],eax
   140033f80:	in     al,dx
   140033f81:	(bad)  
   140033f82:	add    al,BYTE PTR [rax]
   140033f84:	lock stos DWORD PTR es:[rdi],eax
   140033f86:	add    al,BYTE PTR [rax]
   140033f88:	(bad)  
   140033f89:	(bad)  
   140033f8a:	(bad)  
   140033f8b:	push   QWORD PTR [rdx-0xfffdd2]
   140033f91:	(bad)  
   140033f92:	(bad)  
   140033f93:	dec    ebp
   140033f95:	add    al,BYTE PTR cs:[rax]
   140033f98:	(bad)  
   140033f99:	(bad)  
   140033f9a:	(bad)  
   140033f9b:	jmp    rbp
   140033f9d:	add    al,BYTE PTR cs:[rax]
   140033fa0:	nop
   140033fa1:	(bad)  
   140033fa2:	add    BYTE PTR [rax],al
   140033fa4:	(bad)  
   140033fa5:	(bad)  
   140033fa6:	(bad)  
   140033fa7:	call   QWORD PTR [rsi-0x7d]
   140033faa:	add    BYTE PTR [rax],al
   140033fac:	add    BYTE PTR [rax],al
   140033fae:	add    BYTE PTR [rax],al
   140033fb0:	add    DWORD PTR fs:[rax],0x0
   140033fb4:	(bad)  
   140033fb5:	(bad)  
   140033fb6:	(bad)  
   140033fb7:	(bad)  
   140033fb8:	mov    eax,0x1000083
   140033fbd:	add    BYTE PTR [rax],al
   140033fbf:	add    bl,al
   140033fc1:	add    DWORD PTR [rax],0x0
   140033fc4:	(bad)  
   140033fc5:	(bad)  
   140033fc6:	(bad)  
   140033fc7:	dec    DWORD PTR [rdx]
   140033fc9:	test   BYTE PTR [rax],al
   140033fcb:	add    BYTE PTR [rdx],al
   140033fcd:	add    BYTE PTR [rax],al
   140033fcf:	add    BYTE PTR [rax],bl
   140033fd1:	test   BYTE PTR [rax],al
   140033fd3:	add    bh,bh
   140033fd5:	(bad)  
   140033fd6:	(bad)  
   140033fd7:	inc    DWORD PTR [rcx]
   140033fd9:	(bad)  
   140033fda:	add    al,BYTE PTR [rax]
   140033fdc:	(bad)  
   140033fdd:	xor    al,BYTE PTR [rdx]
   140033fdf:	push   rax
   140033fe0:	add    DWORD PTR [rsi],eax
   140033fe2:	add    al,BYTE PTR [rax]
   140033fe4:	(bad)  
   140033fe5:	xor    al,BYTE PTR [rdx]
   140033fe7:	push   rax
   140033fe8:	add    DWORD PTR [rsi],eax
   140033fea:	add    al,BYTE PTR [rax]
   140033fec:	(bad)  
   140033fed:	xor    al,BYTE PTR [rdx]
   140033fef:	push   rax
   140033ff0:	add    DWORD PTR [rcx],ecx
   140033ff2:	add    DWORD PTR [rax],eax
   140033ff4:	or     DWORD PTR [rdx+0x0],eax
   140033ff7:	add    BYTE PTR [rcx],dl
   140033ff9:	adc    eax,DWORD PTR [rbx]
   140033ffb:	add    BYTE PTR [rbx],cl
   140033ffd:	rex.X (bad) 
   140033fff:	jo     0x140034007
   140034001:	(bad)  
   140034002:	add    BYTE PTR [rax],al
   140034004:	in     al,dx
   140034005:	(bad)  
   140034006:	add    al,BYTE PTR [rax]
   140034008:	sbb    BYTE PTR [rdx+rax*1-0x100],ch
   14003400f:	inc    DWORD PTR [rax]
   140034011:	(bad)  
   140034012:	add    al,BYTE PTR [rax]
   140034014:	add    BYTE PTR [rax+rax*1-0x100],0xff
   14003401c:	scas   eax,DWORD PTR es:[rdi]
   14003401d:	test   BYTE PTR [rax],al
   14003401f:	add    BYTE PTR [rax],al
   140034021:	add    BYTE PTR [rax],al
   140034023:	add    cl,bl
   140034025:	test   BYTE PTR [rax],al
   140034027:	add    bh,bh
   140034029:	(bad)  
   14003402a:	(bad)  
   14003402b:	inc    DWORD PTR [rcx]
   14003402d:	add    al,BYTE PTR [rcx]
   14003402f:	add    BYTE PTR [rdx],al
   140034031:	push   rax
   140034032:	add    BYTE PTR [rax],al
   140034034:	add    DWORD PTR [rax],ebx
   140034036:	add    DWORD PTR [rax],eax
   140034038:	sbb    BYTE PTR [rdx+0x9010000],ah
   14003403e:	add    DWORD PTR [rax],eax
   140034040:	or     DWORD PTR [rdx+0x12110000],esp
   140034046:	add    DWORD PTR [rax],eax
   140034048:	or     DWORD PTR [rdx+0x16ec0000],esp
   14003404e:	add    al,BYTE PTR [rax]
   140034050:	loopne 0x14003400a
   140034052:	add    al,BYTE PTR [rax]
   140034054:	(bad)  
   140034055:	(bad)  
   140034056:	(bad)  
   140034057:	jmp    QWORD PTR [rax]
   140034059:	(bad)  
   14003405a:	add    al,BYTE PTR [rax]
   14003405c:	xchg   BYTE PTR [rax],al
   14003405f:	add    bh,bh
   140034061:	(bad)  
   140034062:	(bad)  
   140034063:	jmp    QWORD PTR [rdi-0x7a]
   140034066:	add    BYTE PTR [rax],al
   140034068:	add    BYTE PTR [rax],al
   14003406a:	add    BYTE PTR [rax],al
   14003406c:	retf   
   14003406d:	xchg   BYTE PTR [rax],al
   14003406f:	add    bh,bh
   140034071:	(bad)  
   140034072:	(bad)  
   140034073:	inc    DWORD PTR [rcx]
   140034075:	(bad)  
   140034076:	add    al,BYTE PTR [rax]
   140034078:	(bad)  
   140034079:	xor    al,BYTE PTR [rdx]
   14003407b:	push   rax
   14003407c:	sbb    DWORD PTR [rdi],ebx
   14003407e:	add    eax,DWORD PTR [rax]
   140034080:	or     eax,0x6005001
   140034085:	jo     0x140034087
   140034087:	add    BYTE PTR [rax+0x17],ah
   14003408a:	add    al,BYTE PTR [rax]
   14003408c:	jo     0x140034090
   14003408e:	add    BYTE PTR [rax],al
   140034090:	add    DWORD PTR [rcx],ecx
   140034092:	add    DWORD PTR [rax],eax
   140034094:	or     DWORD PTR [rdx+0x0],esp
   140034097:	add    BYTE PTR [rcx],al
   140034099:	or     DWORD PTR [rcx],eax
   14003409b:	add    BYTE PTR [rcx],cl
   14003409d:	(bad)  
   14003409e:	add    BYTE PTR [rax],al
   1400340a0:	add    DWORD PTR [rcx],ecx
   1400340a2:	add    DWORD PTR [rax],eax
   1400340a4:	or     DWORD PTR [rdx+0x0],esp
   1400340a7:	add    BYTE PTR [rcx],bl
   1400340a9:	and    al,0x3
   1400340ab:	add    BYTE PTR [rdx],dl
   1400340ad:	add    DWORD PTR [rdx+0x700b00],edx
   1400340b3:	add    BYTE PTR [rax+0x17],ah
   1400340b6:	add    al,BYTE PTR [rax]
   1400340b8:	add    BYTE PTR [rax+rax*1],0x0
   1400340bc:	sbb    DWORD PTR [rdx],esp
   1400340be:	add    al,BYTE PTR [rax]
   1400340c0:	adc    BYTE PTR [rcx],al
   1400340c2:	xlat   BYTE PTR ds:[rbx]
   1400340c3:	add    BYTE PTR [rax+0x17],ah
   1400340c6:	add    al,BYTE PTR [rax]
   1400340c8:	movabs al,ds:0x2245053e19000006
   1400340d1:	rex.XB sbb eax,0x16003f01
   1400340d7:	jo     0x1400340ee
   1400340d9:	push   rax
   1400340da:	add    BYTE PTR [rax],al
   1400340dc:	in     al,0x17
   1400340de:	add    al,BYTE PTR [rax]
   1400340e0:	or     BYTE PTR [rcx+0x1e20002],bh
   1400340e6:	add    BYTE PTR [rax],al
   1400340e8:	(bad)  
   1400340e9:	(bad)  
   1400340ea:	(bad)  
   1400340eb:	(bad)  
   1400340ec:	cmp    BYTE PTR [rdi],ch
   1400340ee:	add    al,BYTE PTR [rax]
   1400340f0:	nop
   1400340f1:	lea    eax,[rax]
   1400340f3:	add    bh,bh
   1400340f5:	(bad)  
   1400340f6:	(bad)  
   1400340f7:	(bad)  
   1400340f8:	fmul   QWORD PTR [rbp+0x0]
   1400340fe:	add    BYTE PTR [rax],al
   140034100:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034101:	nop
   140034102:	add    BYTE PTR [rax],al
   140034104:	(bad)  
   140034105:	(bad)  
   140034106:	(bad)  
   140034107:	inc    DWORD PTR [rcx]
   140034109:	(bad)  
   14003410a:	add    al,BYTE PTR [rax]
   14003410c:	(bad)  
   14003410d:	xor    al,BYTE PTR [rdx]
   14003410f:	push   rax
   140034110:	add    DWORD PTR [rcx],ecx
   140034112:	add    DWORD PTR [rax],eax
   140034114:	or     DWORD PTR [rdx+0x0],esp
   140034117:	add    BYTE PTR [rcx],bl
   140034119:	ds add eax,0x1d432245
   14003411f:	add    DWORD PTR [rdi],edi
   140034121:	add    BYTE PTR [rsi],dl
   140034123:	jo     0x14003413a
   140034125:	push   rax
   140034126:	add    BYTE PTR [rax],al
   140034128:	in     al,0x17
   14003412a:	add    al,BYTE PTR [rax]
   14003412c:	xor    BYTE PTR [rcx+0x1e20002],bh
   140034132:	add    BYTE PTR [rax],al
   140034134:	(bad)  
   140034135:	(bad)  
   140034136:	(bad)  
   140034137:	call   QWORD PTR [rcx+0x2f]
   14003413a:	add    al,BYTE PTR [rax]
   14003413c:	and    BYTE PTR [rcx-0x10000],dl
   140034142:	(bad)  
   140034143:	push   QWORD PTR [rdx+rdx*4+0x0]
   14003414a:	add    BYTE PTR [rax],al
   14003414c:	mov    eax,0xff000093
   140034151:	(bad)  
   140034152:	(bad)  
   140034153:	inc    DWORD PTR [rcx]
   140034155:	(bad)  
   140034156:	add    al,BYTE PTR [rax]
   140034158:	(bad)  
   140034159:	xor    al,BYTE PTR [rdx]
   14003415b:	push   rax
   14003415c:	adc    DWORD PTR [rcx],esp
   14003415e:	add    DWORD PTR [rax],eax
   140034160:	sbb    BYTE PTR [rdx+0x16ec0000],ah
   140034166:	add    al,BYTE PTR [rax]
   140034168:	pop    rax
   140034169:	mov    ecx,0xffff0002
   14003416e:	(bad)  
   14003416f:	jmp    FWORD PTR [rdx+0x2f]
   140034172:	add    al,BYTE PTR [rax]
   140034174:	lock xchg ebx,eax
   140034176:	add    BYTE PTR [rax],al
   140034178:	(bad)  
   140034179:	(bad)  
   14003417a:	(bad)  
   14003417b:	jmp    QWORD PTR [rcx]
   14003417d:	xchg   esp,eax
   14003417e:	add    BYTE PTR [rax],al
   140034180:	add    BYTE PTR [rax],al
   140034182:	add    BYTE PTR [rax],al
   140034184:	fist   WORD PTR [rax+rax*1-0x100]
   14003418b:	inc    DWORD PTR [rcx]
   14003418d:	(bad)  
   14003418e:	add    al,BYTE PTR [rax]
   140034190:	(bad)  
   140034191:	xor    al,BYTE PTR [rdx]
   140034193:	push   rax
   140034194:	sbb    DWORD PTR [rsi],esi
   140034196:	add    eax,0x18231d25
   14003419b:	add    DWORD PTR [rdi],edx
   14003419d:	add    BYTE PTR [rcx],dl
   14003419f:	jo     0x1400341b1
   1400341a1:	push   rax
   1400341a2:	add    BYTE PTR [rax],al
   1400341a4:	in     al,0x17
   1400341a6:	add    al,BYTE PTR [rax]
   1400341a8:	cmp    BYTE PTR [rcx+0xaa0002],0x0
   1400341af:	add    bh,bh
   1400341b1:	(bad)  
   1400341b2:	(bad)  
   1400341b3:	inc    DWORD PTR [rdx+0x22f]
   1400341b9:	add    BYTE PTR [rax],al
   1400341bb:	add    BYTE PTR [rbx+0x22f],bl
   1400341c1:	xchg   ebp,eax
   1400341c2:	add    BYTE PTR [rax],al
   1400341c4:	(bad)  
   1400341c5:	(bad)  
   1400341c6:	(bad)  
   1400341c7:	dec    DWORD PTR [rbp+rdx*4+0x0]
   1400341cb:	add    BYTE PTR [rax],al
   1400341cd:	add    BYTE PTR [rax],al
   1400341cf:	add    BYTE PTR [rsi-0x6a],dh
   1400341d2:	add    BYTE PTR [rax],al
   1400341d4:	add    DWORD PTR [rax],eax
   1400341d6:	add    BYTE PTR [rax],al
   1400341d8:	test   BYTE PTR [rsi+0x0],dl
   1400341de:	add    BYTE PTR [rax],al
   1400341e0:	lock xchg esi,eax
   1400341e2:	add    BYTE PTR [rax],al
   1400341e4:	(bad)  
   1400341e5:	(bad)  
   1400341e6:	(bad)  
   1400341e7:	inc    DWORD PTR [rcx]
   1400341e9:	(bad)  
   1400341ea:	add    al,BYTE PTR [rax]
   1400341ec:	(bad)  
   1400341ed:	xor    al,BYTE PTR [rdx]
   1400341ef:	push   rax
   1400341f0:	add    DWORD PTR [rsi],eax
   1400341f2:	add    al,BYTE PTR [rax]
   1400341f4:	(bad)  
   1400341f5:	xor    al,BYTE PTR [rdx]
   1400341f7:	push   rax
   1400341f8:	add    DWORD PTR [rsi],ecx
   1400341fa:	add    DWORD PTR [rax],eax
   1400341fc:	(bad)  
   1400341fd:	(bad)  
   1400341fe:	add    BYTE PTR [rax],al
   140034200:	adc    DWORD PTR [rcx+rax*1],ebx
   140034203:	add    BYTE PTR [rbx],dl
   140034205:	movabs ds:0xb9a8000216ec0000,al
   14003420e:	add    al,BYTE PTR [rax]
   140034210:	(bad)  
   140034211:	(bad)  
   140034212:	(bad)  
   140034213:	push   QWORD PTR [rdi+rbp*1-0x688ffffe]
   14003421a:	add    BYTE PTR [rax],al
   14003421c:	(bad)  
   14003421d:	(bad)  
   14003421e:	(bad)  
   14003421f:	jmp    FWORD PTR [rdi+0x97]
   140034225:	add    BYTE PTR [rax],al
   140034227:	add    BYTE PTR [rbx],ah
   140034229:	cwde   
   14003422a:	add    BYTE PTR [rax],al
   14003422c:	(bad)  
   14003422d:	(bad)  
   14003422e:	(bad)  
   14003422f:	inc    DWORD PTR [rcx]
   140034231:	(bad)  
   140034232:	add    al,BYTE PTR [rax]
   140034234:	(bad)  
   140034235:	xor    al,BYTE PTR [rdx]
   140034237:	push   rax
   140034238:	add    DWORD PTR [rcx],ecx
   14003423a:	add    DWORD PTR [rax],eax
   14003423c:	or     DWORD PTR [rdx+0x0],esp
   14003423f:	add    BYTE PTR [rcx],bl
   140034241:	sub    eax,0x1120003
   140034246:	rex.WRX add BYTE PTR [rbx],r9b
   140034249:	jo     0x14003424b
   14003424b:	add    ah,ah
   14003424d:	(bad)  
   14003424e:	add    al,BYTE PTR [rax]
   140034250:	sar    BYTE PTR [rcx+0x2630002],1
   140034256:	add    BYTE PTR [rax],al
   140034258:	(bad)  
   140034259:	(bad)  
   14003425a:	(bad)  
   14003425b:	dec    esp
   14003425d:	(bad)  
   14003425e:	add    al,BYTE PTR [rax]
	...
   140034270:	add    DWORD PTR [rax],eax
   140034272:	add    BYTE PTR [rax],al
   140034274:	add    DWORD PTR [rax],eax
   140034276:	add    BYTE PTR [rax],al
   140034278:	add    al,BYTE PTR [rax]
   14003427a:	add    BYTE PTR [rax],al
   14003427c:	add    DWORD PTR [rax],eax
   14003427e:	add    BYTE PTR [rax],al
   140034280:	test   BYTE PTR [rdx+0x3],al
	...
   14003428f:	add    ah,ah
   140034291:	(bad)  
   140034292:	add    al,BYTE PTR [rax]
   140034294:	cmp    BYTE PTR [rax],al
   140034296:	add    BYTE PTR [rax],al
   140034298:	nop
   140034299:	cwde   
   14003429a:	add    BYTE PTR [rax],al
   14003429c:	(bad)  
   14003429d:	(bad)  
   14003429e:	(bad)  
   14003429f:	dec    ebp
   1400342a1:	cwde   
   1400342a2:	add    BYTE PTR [rax],al
   1400342a4:	add    DWORD PTR [rax],eax
   1400342a6:	add    BYTE PTR [rax],al
   1400342a8:	adc    BYTE PTR [rcx+0x0],bl
   1400342ae:	add    BYTE PTR [rax],al
   1400342b0:	mov    ah,0x99
   1400342b2:	add    BYTE PTR [rax],al
   1400342b4:	(bad)  
   1400342b5:	(bad)  
   1400342b6:	(bad)  
   1400342b7:	jmp    rsp
   1400342b9:	(bad)  
   1400342ba:	add    al,BYTE PTR [rax]
   1400342bc:	add    BYTE PTR [rax],al
   1400342be:	add    BYTE PTR [rax],al
   1400342c0:	add    DWORD PTR [rsi],eax
   1400342c2:	add    al,BYTE PTR [rax]
   1400342c4:	(bad)  
   1400342c5:	xor    al,BYTE PTR [rdx]
   1400342c7:	push   rax
   1400342c8:	sbb    DWORD PTR [rdx],ecx
   1400342ca:	add    al,BYTE PTR [rax]
   1400342cc:	or     dh,BYTE PTR [rdx]
   1400342ce:	(bad)  
   1400342cf:	push   rax
   1400342d0:	in     al,dx
   1400342d1:	(bad)  
   1400342d2:	add    al,BYTE PTR [rax]
   1400342d4:	sar    BYTE PTR [rcx+0x23190002],1
   1400342da:	add    al,BYTE PTR [rax]
   1400342dc:	adc    DWORD PTR [rcx],eax
   1400342de:	pop    rbx
   1400342df:	add    DWORD PTR [rax+0x17],esp
   1400342e2:	add    al,BYTE PTR [rax]
   1400342e4:	ror    BYTE PTR [rdx],0x0
   1400342e7:	add    BYTE PTR [rcx],al
   1400342e9:	adc    al,BYTE PTR [rcx]
   1400342eb:	add    BYTE PTR [rdx],dl
   1400342ed:	(bad)  
   1400342ee:	add    BYTE PTR [rax],al
   1400342f0:	add    DWORD PTR [rcx],ecx
   1400342f2:	add    DWORD PTR [rax],eax
   1400342f4:	or     DWORD PTR [rdx+0x0],eax
   1400342f7:	add    BYTE PTR [rcx],al
   1400342f9:	(bad)  
   1400342fa:	add    DWORD PTR [rax],eax
   1400342fc:	(bad)  
   1400342fd:	rex.X add BYTE PTR [rax],al
   140034300:	add    DWORD PTR [rsi],ecx
   140034302:	add    DWORD PTR [rax],eax
   140034304:	(bad)  
   140034305:	rex.X add BYTE PTR [rax],al
   140034308:	add    DWORD PTR [rbx],edx
   14003430a:	add    DWORD PTR [rax],eax
   14003430c:	adc    eax,DWORD PTR [rdx+0x0]
   14003430f:	add    BYTE PTR [rcx],al
   140034311:	adc    eax,DWORD PTR [rcx]
   140034313:	add    BYTE PTR [rbx],dl
   140034315:	(bad)  
   140034316:	add    BYTE PTR [rax],al
   140034318:	add    DWORD PTR [rdi],ecx
   14003431a:	add    al,BYTE PTR [rax]
   14003431c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003431f:	jo     0x140034322
   140034321:	(bad)  
   140034322:	add    DWORD PTR [rax],eax
   140034324:	(bad)  
   140034325:	rex.X add BYTE PTR [rax],al
   140034328:	add    DWORD PTR [rsi],ecx
   14003432a:	add    DWORD PTR [rax],eax
   14003432c:	(bad)  
   14003432d:	rex.X add BYTE PTR [rax],al
   140034330:	add    DWORD PTR [rsi],ecx
   140034332:	add    DWORD PTR [rax],eax
   140034334:	(bad)  
   140034335:	movabs ds:0xa20e00010e010000,al
   14003433e:	add    BYTE PTR [rax],al
   140034340:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x182104347
   140034346:	add    BYTE PTR [rax],al
   140034348:	add    DWORD PTR [rcx],ecx
   14003434a:	add    DWORD PTR [rax],eax
   14003434c:	or     DWORD PTR [rdx+0x0],eax
   14003434f:	add    BYTE PTR [rcx],al
   140034351:	or     eax,0x220d0001
   140034356:	add    BYTE PTR [rax],al
   140034358:	add    DWORD PTR [rbx],edx
   14003435a:	add    DWORD PTR [rax],eax
   14003435c:	adc    esp,DWORD PTR [rdx]
   14003435e:	add    BYTE PTR [rax],al
   140034360:	add    DWORD PTR [rip+0xffffffff820d0001],ecx        # 0xc2104367
   140034366:	add    BYTE PTR [rax],al
   140034368:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x18210436f
   14003436e:	add    BYTE PTR [rax],al
   140034370:	add    DWORD PTR [rcx],ecx
   140034372:	add    DWORD PTR [rax],eax
   140034374:	or     DWORD PTR [rdx+0x0],eax
   140034377:	add    BYTE PTR [rcx],al
   140034379:	or     DWORD PTR [rcx],eax
   14003437b:	add    BYTE PTR [rcx],cl
   14003437d:	rex.X add BYTE PTR [rax],al
   140034380:	add    DWORD PTR [rcx],ecx
   140034382:	add    DWORD PTR [rax],eax
   140034384:	or     DWORD PTR [rdx+0x0],eax
   140034387:	add    BYTE PTR [rcx],al
   140034389:	or     DWORD PTR [rcx],eax
   14003438b:	add    BYTE PTR [rcx],cl
   14003438d:	movabs ds:0x6209000109010000,al
   140034396:	add    BYTE PTR [rax],al
   140034398:	add    DWORD PTR [rcx],ecx
   14003439a:	add    DWORD PTR [rax],eax
   14003439c:	or     DWORD PTR [rdx+0x0],eax
   14003439f:	add    BYTE PTR [rcx],al
   1400343a1:	or     DWORD PTR [rcx],eax
   1400343a3:	add    BYTE PTR [rcx],cl
   1400343a5:	rex.X add BYTE PTR [rax],al
   1400343a8:	add    DWORD PTR [rcx],ecx
   1400343aa:	add    DWORD PTR [rax],eax
   1400343ac:	or     DWORD PTR [rdx+0x0],eax
   1400343af:	add    BYTE PTR [rcx],al
   1400343b1:	sbb    BYTE PTR [rcx],al
   1400343b3:	add    BYTE PTR [rax],bl
   1400343b5:	(bad)  
   1400343b6:	add    BYTE PTR [rax],al
   1400343b8:	add    DWORD PTR [rsi],ecx
   1400343ba:	add    DWORD PTR [rax],eax
   1400343bc:	(bad)  
   1400343bd:	(bad)  
   1400343be:	add    BYTE PTR [rax],al
   1400343c0:	add    DWORD PTR [rsi],ecx
   1400343c2:	add    DWORD PTR [rax],eax
   1400343c4:	(bad)  
   1400343c5:	(bad)  
   1400343c6:	add    BYTE PTR [rax],al
   1400343c8:	add    DWORD PTR [rbx],edx
   1400343ca:	add    DWORD PTR [rax],eax
   1400343cc:	adc    esp,DWORD PTR [rdx+0x0]
   1400343cf:	add    BYTE PTR [rcx],al
   1400343d1:	adc    eax,DWORD PTR [rcx]
   1400343d3:	add    BYTE PTR [rbx],dl
   1400343d5:	(bad)  
   1400343d6:	add    BYTE PTR [rax],al
   1400343d8:	add    DWORD PTR [rsi],ecx
   1400343da:	add    DWORD PTR [rax],eax
   1400343dc:	(bad)  
   1400343dd:	(bad)  
   1400343de:	add    BYTE PTR [rax],al
   1400343e0:	add    DWORD PTR [rsi],ecx
   1400343e2:	add    DWORD PTR [rax],eax
   1400343e4:	(bad)  
   1400343e5:	rex.X add BYTE PTR [rax],al
   1400343e8:	add    DWORD PTR [rcx],ecx
   1400343ea:	add    DWORD PTR [rax],eax
   1400343ec:	or     DWORD PTR [rdx+0x0],esp
   1400343ef:	add    BYTE PTR [rcx],al
   1400343f1:	(bad)  
   1400343f2:	add    DWORD PTR [rax],eax
   1400343f4:	(bad)  
   1400343f5:	rex.X add BYTE PTR [rax],al
   1400343f8:	adc    DWORD PTR [rdi],edx
   1400343fa:	add    DWORD PTR [rax],eax
   1400343fc:	(bad)  
   1400343fd:	ret    0x0
   140034400:	in     al,dx
   140034401:	(bad)  
   140034402:	add    al,BYTE PTR [rax]
   140034404:	adc    BYTE PTR [rbx-0xfffe],bh
   14003440a:	(bad)  
   14003440b:	inc    DWORD PTR [rax]
   14003440d:	xor    BYTE PTR [rdx],al
   14003440f:	add    BYTE PTR [rax],al
   140034411:	add    BYTE PTR [rax],al
   140034413:	add    BYTE PTR [rax],bl
   140034415:	xor    BYTE PTR [rdx],al
   140034417:	add    BYTE PTR [rax-0xffff53],ah
   14003441d:	(bad)  
   14003441e:	(bad)  
   14003441f:	inc    edi
   140034421:	lods   eax,DWORD PTR ds:[rsi]
   140034422:	add    BYTE PTR [rax],al
   140034424:	add    BYTE PTR [rax],al
   140034426:	add    BYTE PTR [rax],al
   140034428:	loope  0x1400343d7
   14003442a:	add    BYTE PTR [rax],al
   14003442c:	add    DWORD PTR [rax],eax
   14003442e:	add    BYTE PTR [rax],al
   140034430:	adc    ch,BYTE PTR [rsi+0x0]
   140034436:	add    BYTE PTR [rax],al
   140034438:	sbb    eax,0xff0000ae
   14003443d:	(bad)  
   14003443e:	(bad)  
   14003443f:	inc    DWORD PTR [rcx]
   140034441:	(bad)  
   140034442:	add    al,BYTE PTR [rax]
   140034444:	(bad)  
   140034445:	xor    al,BYTE PTR [rdx]
   140034447:	push   rax
   140034448:	add    DWORD PTR [rsi],eax
   14003444a:	add    al,BYTE PTR [rax]
   14003444c:	(bad)  
   14003444d:	xor    al,BYTE PTR [rdx]
   14003444f:	push   rax
   140034450:	adc    DWORD PTR [rcx+rax*1],ebx
   140034453:	add    BYTE PTR [rbx],dl
   140034455:	movabs ds:0xbb38000216ec0000,al
   14003445e:	add    al,BYTE PTR [rax]
   140034460:	(bad)  
   140034461:	(bad)  
   140034462:	(bad)  
   140034463:	dec    DWORD PTR [rax+0x30]
   140034466:	add    al,BYTE PTR [rax]
   140034468:	add    BYTE PTR [rax],al
   14003446a:	add    BYTE PTR [rax],al
   14003446c:	xor    BYTE PTR [rax],dh
   14003446e:	add    al,BYTE PTR [rax]
   140034470:	scas   al,BYTE PTR es:[rdi]
   140034472:	add    BYTE PTR [rax],al
   140034474:	(bad)  
   140034475:	(bad)  
   140034476:	(bad)  
   140034477:	push   QWORD PTR [rsi+0x10000ae]
   14003447d:	add    BYTE PTR [rax],al
   14003447f:	add    bl,bl
   140034481:	scas   al,BYTE PTR es:[rdi]
   140034482:	add    BYTE PTR [rax],al
   140034484:	add    BYTE PTR [rax],al
   140034486:	add    BYTE PTR [rax],al
   140034488:	add    DWORD PTR [rsi],eax
   14003448a:	add    al,BYTE PTR [rax]
   14003448c:	(bad)  
   14003448d:	xor    al,BYTE PTR [rdx]
   14003448f:	push   rax
   140034490:	add    DWORD PTR [rsi],eax
   140034492:	add    al,BYTE PTR [rax]
   140034494:	(bad)  
   140034495:	xor    al,BYTE PTR [rdx]
   140034497:	push   rax
   140034498:	add    DWORD PTR [rbx],edx
   14003449a:	add    DWORD PTR [rax],eax
   14003449c:	adc    esp,edx
   14003449e:	add    BYTE PTR [rax],al
   1400344a0:	adc    DWORD PTR [rcx+rax*1],ebx
   1400344a3:	add    BYTE PTR [rbx],dl
   1400344a5:	ret    0x0
   1400344a8:	in     al,dx
   1400344a9:	(bad)  
   1400344aa:	add    al,BYTE PTR [rax]
   1400344ac:	(bad)  
   1400344ad:	mov    ebx,0xffff0002
   1400344b2:	(bad)  
   1400344b3:	inc    DWORD PTR [rsi+0x230]
   1400344b9:	add    BYTE PTR [rax],al
   1400344bb:	add    BYTE PTR [rsi+0x30],ch
   1400344be:	add    al,BYTE PTR [rax]
   1400344c0:	(bad)  
   1400344c1:	mov    dl,0x0
   1400344c3:	add    bh,bh
   1400344c5:	(bad)  
   1400344c6:	(bad)  
   1400344c7:	dec    DWORD PTR [rdi+0x10000b2]
   1400344cd:	add    BYTE PTR [rax],al
   1400344cf:	add    BYTE PTR [rbx+rsi*4+0x0],bl
   1400344d3:	add    BYTE PTR [rax],al
   1400344d5:	add    BYTE PTR [rax],al
   1400344d7:	add    BYTE PTR [rcx],al
   1400344d9:	(bad)  
   1400344da:	add    al,BYTE PTR [rax]
   1400344dc:	(bad)  
   1400344dd:	xor    al,BYTE PTR [rdx]
   1400344df:	push   rax
   1400344e0:	add    DWORD PTR [rsi],eax
   1400344e2:	add    al,BYTE PTR [rax]
   1400344e4:	(bad)  
   1400344e5:	xor    al,BYTE PTR [rdx]
   1400344e7:	push   rax
   1400344e8:	adc    DWORD PTR [rcx+rax*1],ebx
   1400344eb:	add    BYTE PTR [rbx],dl
   1400344ed:	(bad)  
   1400344ee:	add    BYTE PTR [rax],al
   1400344f0:	in     al,dx
   1400344f1:	(bad)  
   1400344f2:	add    al,BYTE PTR [rax]
   1400344f4:	mov    BYTE PTR [rbx-0xfffe],bh
   1400344fa:	(bad)  
   1400344fb:	jmp    FWORD PTR [rax+rsi*1-0x4c7ffffe]
   140034502:	add    BYTE PTR [rax],al
   140034504:	(bad)  
   140034505:	(bad)  
   140034506:	(bad)  
   140034507:	dec    edx
   140034509:	mov    bl,0x0
   14003450b:	add    BYTE PTR [rax],al
   14003450d:	add    BYTE PTR [rax],al
   14003450f:	add    BYTE PTR [rcx],al
   140034511:	(bad)  
   140034512:	add    al,BYTE PTR [rax]
   140034514:	(bad)  
   140034515:	xor    al,BYTE PTR [rdx]
   140034517:	push   rax
   140034518:	adc    DWORD PTR [rcx],esp
   14003451a:	add    DWORD PTR [rax],eax
   14003451c:	sbb    BYTE PTR [rdx+0x16ec0000],ah
   140034522:	add    al,BYTE PTR [rax]
   140034524:	mov    al,0xbb
   140034526:	add    al,BYTE PTR [rax]
   140034528:	(bad)  
   140034529:	(bad)  
   14003452a:	(bad)  
   14003452b:	(bad)  
   14003452c:	(bad)  
   14003452d:	xor    BYTE PTR [rdx],al
   14003452f:	add    BYTE PTR [rax],al
   140034531:	add    BYTE PTR [rax],al
   140034533:	add    dl,dl
   140034535:	xor    BYTE PTR [rdx],al
   140034537:	add    al,dh
   140034539:	mov    bl,0x0
   14003453b:	add    bh,bh
   14003453d:	(bad)  
   14003453e:	(bad)  
   14003453f:	jmp    QWORD PTR [rsp+rsi*4]
   140034542:	add    BYTE PTR [rax],al
   140034544:	add    DWORD PTR [rax],eax
   140034546:	add    BYTE PTR [rax],al
   140034548:	repnz mov ah,0x0
   14003454b:	add    BYTE PTR [rax],al
   14003454d:	add    BYTE PTR [rax],al
   14003454f:	add    BYTE PTR [rcx],al
   140034551:	(bad)  
   140034552:	add    al,BYTE PTR [rax]
   140034554:	(bad)  
   140034555:	xor    al,BYTE PTR [rdx]
   140034557:	push   rax
   140034558:	add    DWORD PTR [rsi],eax
   14003455a:	add    al,BYTE PTR [rax]
   14003455c:	(bad)  
   14003455d:	xor    al,BYTE PTR [rdx]
   14003455f:	push   rax
   140034560:	add    DWORD PTR [rsi],ecx
   140034562:	add    DWORD PTR [rax],eax
   140034564:	(bad)  
   140034565:	(bad)  
   140034566:	add    BYTE PTR [rax],al
   140034568:	add    DWORD PTR [rdx],edx
   14003456a:	add    DWORD PTR [rax],eax
   14003456c:	adc    ah,BYTE PTR [rdx+0x13010000]
   140034572:	add    DWORD PTR [rax],eax
   140034574:	adc    esp,DWORD PTR [rdx+0x0]
   140034577:	add    BYTE PTR [rcx],al
   140034579:	or     eax,0x420d0001
   14003457e:	add    BYTE PTR [rax],al
   140034580:	add    DWORD PTR [rax],ebx
   140034582:	add    DWORD PTR [rax],eax
   140034584:	sbb    BYTE PTR [rdx+0x0],ah
   140034587:	add    BYTE PTR [rcx],al
   140034589:	sbb    BYTE PTR [rcx],al
   14003458b:	add    BYTE PTR [rax],bl
   14003458d:	(bad)  
   14003458e:	add    BYTE PTR [rax],al
   140034590:	sbb    DWORD PTR [rdx],ebp
   140034592:	add    al,0x0
   140034594:	sbb    BYTE PTR [rcx],al
   140034596:	sbb    DWORD PTR [rax],eax
   140034598:	adc    DWORD PTR [rax+0x10],esi
   14003459b:	(bad)  
   14003459c:	(bad)  
   14003459d:	(bad)  
   14003459e:	add    al,BYTE PTR [rax]
   1400345a0:	mov    al,0x0
   1400345a2:	add    BYTE PTR [rax],al
   1400345a4:	add    DWORD PTR [rsi],ecx
   1400345a6:	add    DWORD PTR [rax],eax
   1400345a8:	(bad)  
   1400345a9:	and    al,BYTE PTR [rax]
   1400345ab:	add    BYTE PTR [rcx],al
   1400345ad:	(bad)  
   1400345ae:	add    DWORD PTR [rax],eax
   1400345b0:	(bad)  
   1400345b1:	rex.X add BYTE PTR [rax],al
   1400345b4:	add    DWORD PTR [rbx],edx
   1400345b6:	add    DWORD PTR [rax],eax
   1400345b8:	adc    eax,DWORD PTR [rdx+0xe010000]
   1400345be:	add    DWORD PTR [rax],eax
   1400345c0:	(bad)  
   1400345c1:	rex.X add BYTE PTR [rax],al
   1400345c4:	add    DWORD PTR [rsi],ecx
   1400345c6:	add    DWORD PTR [rax],eax
   1400345c8:	(bad)  
   1400345c9:	rex.X add BYTE PTR [rax],al
   1400345cc:	add    DWORD PTR [rcx],ecx
   1400345ce:	add    DWORD PTR [rax],eax
   1400345d0:	or     DWORD PTR [rdx+0x0],eax
   1400345d3:	add    BYTE PTR [rcx],al
   1400345d5:	or     BYTE PTR [rcx],al
   1400345d7:	add    BYTE PTR [rax],cl
   1400345d9:	and    al,BYTE PTR [rax]
   1400345db:	add    BYTE PTR [rcx],bl
   1400345dd:	sbb    DWORD PTR [rdx],eax
   1400345df:	add    BYTE PTR [rdi],al
   1400345e1:	add    DWORD PTR [rip+0x2176000],ebp        # 0x1421aa5e7
   1400345e7:	add    BYTE PTR [rax+0x1],dl
   1400345ea:	add    BYTE PTR [rax],al
   1400345ec:	adc    DWORD PTR [rsi],edx
   1400345ee:	add    DWORD PTR [rax],eax
   1400345f0:	or     eax,0xec0000a2
   1400345f5:	(bad)  
   1400345f6:	add    al,BYTE PTR [rax]
   1400345f8:	mov    al,0xcb
   1400345fa:	add    al,BYTE PTR [rax]
   1400345fc:	(bad)  
   1400345fd:	(bad)  
   1400345fe:	(bad)  
   1400345ff:	call   QWORD PTR [rax]
   140034601:	xor    DWORD PTR [rdx],eax
   140034603:	add    BYTE PTR [rax-0x40],ah
   140034606:	add    BYTE PTR [rax],al
   140034608:	(bad)  
   140034609:	(bad)  
   14003460a:	(bad)  
   14003460b:	inc    DWORD PTR [rsi+0xc0]
   140034611:	add    BYTE PTR [rax],al
   140034613:	add    BYTE PTR [rsi],bl
   140034615:	rol    DWORD PTR [rax],0x0
   140034618:	(bad)  
   140034619:	(bad)  
   14003461a:	(bad)  
   14003461b:	inc    DWORD PTR [rcx]
   14003461d:	(bad)  
   14003461e:	add    al,BYTE PTR [rax]
   140034620:	(bad)  
   140034621:	xor    al,BYTE PTR [rdx]
   140034623:	push   rax
   140034624:	adc    DWORD PTR [rcx+rax*1],ebx
   140034627:	add    BYTE PTR [rbx],dl
   140034629:	movabs ds:0xcbd8000216ec0000,al
   140034632:	add    al,BYTE PTR [rax]
   140034634:	(bad)  
   140034635:	(bad)  
   140034636:	(bad)  
   140034637:	jmp    FWORD PTR [rax]
   140034639:	xor    DWORD PTR [rdx],eax
   14003463b:	add    BYTE PTR [rax-0x3f],al
   14003463e:	add    BYTE PTR [rax],al
   140034640:	(bad)  
   140034641:	(bad)  
   140034642:	(bad)  
   140034643:	jmp    FWORD PTR [rcx+rax*8+0x0]
   140034647:	add    BYTE PTR [rax],al
   140034649:	add    BYTE PTR [rax],al
   14003464b:	add    BYTE PTR [rbp-0xffff3f],ah
   140034651:	(bad)  
   140034652:	(bad)  
   140034653:	inc    DWORD PTR [rcx]
   140034655:	(bad)  
   140034656:	add    al,BYTE PTR [rax]
   140034658:	(bad)  
   140034659:	xor    al,BYTE PTR [rdx]
   14003465b:	push   rax
   14003465c:	sbb    DWORD PTR [rbx+rax*1],esp
   14003465f:	add    BYTE PTR [rdx],dl
   140034661:	add    DWORD PTR [rdx+0x700b00],ebx
   140034667:	add    BYTE PTR [rax+0x17],ah
   14003466a:	add    al,BYTE PTR [rax]
   14003466c:	rol    BYTE PTR [rax+rax*1],0x0
   140034670:	sbb    DWORD PTR [rax],ebp
   140034672:	add    eax,DWORD PTR [rax]
   140034674:	or     eax,0x6005201
   140034679:	jo     0x14003467b
   14003467b:	add    ah,ah
   14003467d:	(bad)  
   14003467e:	add    al,BYTE PTR [rax]
   140034680:	add    ah,cl
   140034682:	add    al,BYTE PTR [rax]
   140034684:	(bad)  
   140034685:	add    al,BYTE PTR [rax]
   140034687:	add    bh,bh
   140034689:	(bad)  
   14003468a:	(bad)  
   14003468b:	inc    DWORD PTR [rax+0x31]
   14003468e:	add    al,BYTE PTR [rax]
   140034690:	rex (bad) 
   140034692:	add    BYTE PTR [rax],al
   140034694:	(bad)  
   140034695:	(bad)  
   140034696:	(bad)  
   140034697:	call   QWORD PTR [rax+0xc4]
   14003469d:	add    BYTE PTR [rax],al
   14003469f:	add    BYTE PTR [rbp+rax*8+0x0],ah
   1400346a3:	add    bh,bh
   1400346a5:	(bad)  
   1400346a6:	(bad)  
   1400346a7:	inc    DWORD PTR [rcx]
   1400346a9:	(bad)  
   1400346aa:	add    al,BYTE PTR [rax]
   1400346ac:	(bad)  
   1400346ad:	xor    al,BYTE PTR [rdx]
   1400346af:	push   rax
   1400346b0:	sbb    DWORD PTR [rip+0x1120003],ebp        # 0x1411546b9
   1400346b6:	sbb    al,BYTE PTR [rcx]
   1400346b8:	or     esi,DWORD PTR [rax+0x0]
   1400346bb:	add    ah,ah
   1400346bd:	(bad)  
   1400346be:	add    al,BYTE PTR [rax]
   1400346c0:	sub    ah,cl
   1400346c2:	add    al,BYTE PTR [rax]
   1400346c4:	ret    0x8
   1400346c7:	add    bh,bh
   1400346c9:	(bad)  
   1400346ca:	(bad)  
   1400346cb:	call   FWORD PTR [rax+0x31]
   1400346ce:	add    al,BYTE PTR [rax]
   1400346d0:	movabs al,ds:0x10ffffffff0000c5
   1400346d9:	mov    BYTE PTR [rax],0x0
   1400346dc:	add    BYTE PTR [rax],al
   1400346de:	add    BYTE PTR [rax],al
   1400346e0:	and    al,0xc8
   1400346e2:	add    BYTE PTR [rax],al
   1400346e4:	(bad)  
   1400346e5:	(bad)  
   1400346e6:	(bad)  
   1400346e7:	inc    DWORD PTR [rcx]
   1400346e9:	(bad)  
   1400346ea:	add    al,BYTE PTR [rax]
   1400346ec:	(bad)  
   1400346ed:	xor    al,BYTE PTR [rdx]
   1400346ef:	push   rax
   1400346f0:	adc    DWORD PTR [rdx+rax*1],esp
   1400346f3:	add    BYTE PTR [rbx],bl
   1400346f5:	add    DWORD PTR [rip+0x216ec00],edx        # 0x1421a32fb
   1400346fb:	add    BYTE PTR [rax-0x34],dl
   1400346fe:	add    al,BYTE PTR [rax]
   140034700:	(bad)  
   140034701:	(bad)  
   140034702:	(bad)  
   140034703:	push   QWORD PTR [rax+0x31]
   140034706:	add    al,BYTE PTR [rax]
   140034708:	add    BYTE PTR [rax],al
   14003470a:	add    BYTE PTR [rax],al
   14003470c:	mov    BYTE PTR [rcx],dh
   14003470e:	add    al,BYTE PTR [rax]
   140034710:	(bad)  
   140034711:	enter  0x0,0xff
   140034715:	(bad)  
   140034716:	(bad)  
   140034717:	call   QWORD PTR [rdi+0xc8]
   14003471d:	add    BYTE PTR [rax],al
   14003471f:	add    BYTE PTR [rcx],al
   140034721:	leave  
   140034722:	add    BYTE PTR [rax],al
   140034724:	add    DWORD PTR [rax],eax
   140034726:	add    BYTE PTR [rax],al
   140034728:	adc    ecx,ecx
   14003472a:	add    BYTE PTR [rax],al
   14003472c:	add    BYTE PTR [rax],al
   14003472e:	add    BYTE PTR [rax],al
   140034730:	popf   
   140034731:	leave  
   140034732:	add    BYTE PTR [rax],al
   140034734:	(bad)  
   140034735:	(bad)  
   140034736:	(bad)  
   140034737:	inc    DWORD PTR [rcx]
   140034739:	(bad)  
   14003473a:	add    al,BYTE PTR [rax]
   14003473c:	(bad)  
   14003473d:	xor    al,BYTE PTR [rdx]
   14003473f:	push   rax
   140034740:	add    DWORD PTR [rsi],eax
   140034742:	add    al,BYTE PTR [rax]
   140034744:	(bad)  
   140034745:	xor    al,BYTE PTR [rdx]
   140034747:	push   rax
   140034748:	adc    DWORD PTR [rdx+rax*1],esp
   14003474b:	add    BYTE PTR [rbx],bl
   14003474d:	add    DWORD PTR [rbx],edx
   14003474f:	add    ah,ch
   140034751:	(bad)  
   140034752:	add    al,BYTE PTR [rax]
   140034754:	js     0x140034722
   140034756:	add    al,BYTE PTR [rax]
   140034758:	(bad)  
   140034759:	(bad)  
   14003475a:	(bad)  
   14003475b:	call   rbx
   14003475d:	xor    DWORD PTR [rdx],eax
   14003475f:	add    BYTE PTR [rax],al
   140034761:	add    BYTE PTR [rax],al
   140034763:	add    BYTE PTR [rbx+0x1000231],ah
   140034769:	add    BYTE PTR [rax],al
   14003476b:	add    BYTE PTR [rbx-0x3ffffdcf],bh
   140034771:	leave  
   140034772:	add    BYTE PTR [rax],al
   140034774:	(bad)  
   140034775:	(bad)  
   140034776:	(bad)  
   140034777:	push   rdi
   140034779:	leave  
   14003477a:	add    BYTE PTR [rax],al
   14003477c:	add    DWORD PTR [rax],eax
   14003477e:	add    BYTE PTR [rax],al
   140034780:	pop    rdx
   140034781:	retf   0x0
   140034784:	add    al,BYTE PTR [rax]
   140034786:	add    BYTE PTR [rax],al
   140034788:	push   0xffffffffffffffca
   14003478a:	add    BYTE PTR [rax],al
   14003478c:	add    DWORD PTR [rax],eax
   14003478e:	add    BYTE PTR [rax],al
   140034790:	pushf  
   140034791:	retf   0x0
   140034794:	add    BYTE PTR [rax],al
   140034796:	add    BYTE PTR [rax],al
   140034798:	add    DWORD PTR [rsi],eax
   14003479a:	add    al,BYTE PTR [rax]
   14003479c:	(bad)  
   14003479d:	xor    al,BYTE PTR [rdx]
   14003479f:	push   rax
   1400347a0:	add    DWORD PTR [rsi],eax
   1400347a2:	add    al,BYTE PTR [rax]
   1400347a4:	(bad)  
   1400347a5:	xor    al,BYTE PTR [rdx]
   1400347a7:	push   rax
   1400347a8:	add    DWORD PTR [rsi],eax
   1400347aa:	add    al,BYTE PTR [rax]
   1400347ac:	(bad)  
   1400347ad:	xor    al,BYTE PTR [rdx]
   1400347af:	push   rax
   1400347b0:	add    DWORD PTR [rax],ebx
   1400347b2:	add    DWORD PTR [rax],eax
   1400347b4:	sbb    dl,al
   1400347b6:	add    BYTE PTR [rax],al
   1400347b8:	add    DWORD PTR [rbx],edx
   1400347ba:	add    DWORD PTR [rax],eax
   1400347bc:	adc    eax,edx
   1400347be:	add    BYTE PTR [rax],al
   1400347c0:	adc    DWORD PTR [rcx+rax*1],ebx
   1400347c3:	add    BYTE PTR [rbx],dl
   1400347c5:	loop   0x1400347c7
   1400347c7:	add    ah,ch
   1400347c9:	(bad)  
   1400347ca:	add    al,BYTE PTR [rax]
   1400347cc:	movabs al,ds:0x14ffffffff0002cc
   1400347d5:	xor    al,BYTE PTR [rdx]
   1400347d7:	add    BYTE PTR [rax],al
   1400347d9:	add    BYTE PTR [rax],al
   1400347db:	add    ah,bh
   1400347dd:	xor    DWORD PTR [rdx],eax
   1400347df:	add    BYTE PTR [rax-0x34],dh
   1400347e2:	add    BYTE PTR [rax],al
   1400347e4:	(bad)  
   1400347e5:	(bad)  
   1400347e6:	(bad)  
   1400347e7:	call   FWORD PTR [rdi+0x10000cc]
   1400347ed:	add    BYTE PTR [rax],al
   1400347ef:	add    BYTE PTR [rdi-0x33],cl
   1400347f2:	add    BYTE PTR [rax],al
   1400347f4:	add    BYTE PTR [rax],al
   1400347f6:	add    BYTE PTR [rax],al
   1400347f8:	add    DWORD PTR [rsi],eax
   1400347fa:	add    al,BYTE PTR [rax]
   1400347fc:	(bad)  
   1400347fd:	xor    al,BYTE PTR [rdx]
   1400347ff:	push   rax
   140034800:	add    DWORD PTR [rsi],eax
   140034802:	add    al,BYTE PTR [rax]
   140034804:	(bad)  
   140034805:	xor    al,BYTE PTR [rdx]
   140034807:	push   rax
   140034808:	add    DWORD PTR [rax],ebx
   14003480a:	add    DWORD PTR [rax],eax
   14003480c:	sbb    BYTE PTR [rdx+0x18010000],al
   140034812:	add    DWORD PTR [rax],eax
   140034814:	sbb    dl,al
   140034816:	add    BYTE PTR [rax],al
   140034818:	add    DWORD PTR [rbx],edx
   14003481a:	add    DWORD PTR [rax],eax
   14003481c:	adc    eax,DWORD PTR [rdx+0x18010000]
   140034822:	add    DWORD PTR [rax],eax
   140034824:	sbb    BYTE PTR [rdx+0x18010000],al
   14003482a:	add    DWORD PTR [rax],eax
   14003482c:	sbb    dl,al
   14003482e:	add    BYTE PTR [rax],al
   140034830:	add    DWORD PTR [rbx],edx
   140034832:	add    DWORD PTR [rax],eax
   140034834:	adc    eax,DWORD PTR [rdx+0x22110000]
   14003483a:	add    al,BYTE PTR [rax]
   14003483c:	(bad)  
   14003483d:	add    DWORD PTR [rbx],esi
   14003483f:	add    ah,ch
   140034841:	(bad)  
   140034842:	add    al,BYTE PTR [rax]
   140034844:	enter  0x2cc,0x0
   140034848:	(bad)  
   140034849:	(bad)  
   14003484a:	(bad)  
   14003484b:	(bad)  
   14003484c:	cmp    eax,0x232
   140034851:	add    BYTE PTR [rax],al
   140034853:	add    BYTE PTR [rax+0x32],bl
   140034856:	add    al,BYTE PTR [rax]
   140034858:	add    BYTE PTR [rax],al
   14003485a:	add    BYTE PTR [rax],al
   14003485c:	jae    0x140034890
   14003485e:	add    al,BYTE PTR [rax]
   140034860:	add    al,BYTE PTR [rax]
   140034862:	add    BYTE PTR [rax],al
   140034864:	mov    esi,DWORD PTR [rdx]
   140034866:	add    al,BYTE PTR [rax]
   140034868:	jo     0x14003483b
   14003486a:	add    BYTE PTR [rax],al
   14003486c:	(bad)  
   14003486d:	(bad)  
   14003486e:	(bad)  
   14003486f:	(bad)  
   140034870:	mov    eax,0xd1
   140034875:	add    BYTE PTR [rax],al
   140034877:	add    ch,cl
   140034879:	rol    DWORD PTR [rax],1
   14003487b:	add    BYTE PTR [rcx],al
   14003487d:	add    BYTE PTR [rax],al
   14003487f:	add    bl,ah
   140034881:	rol    DWORD PTR [rax],1
   140034883:	add    BYTE PTR [rax],al
   140034885:	add    BYTE PTR [rax],al
   140034887:	add    BYTE PTR [rdx],al
   140034889:	rol    BYTE PTR [rax],cl
   14003488b:	add    BYTE PTR [rdx],al
   14003488d:	add    BYTE PTR [rax],al
   14003488f:	add    BYTE PTR [rax],bl
   140034891:	rol    BYTE PTR [rax],cl
   140034893:	add    BYTE PTR [rbx],al
   140034895:	add    BYTE PTR [rax],al
   140034897:	add    BYTE PTR [rbx],ch
   140034899:	rol    BYTE PTR [rax],cl
   14003489b:	add    BYTE PTR [rdx],al
   14003489d:	add    BYTE PTR [rax],al
   14003489f:	add    BYTE PTR [rsi+0xd3],dh
   1400348a5:	add    BYTE PTR [rax],al
   1400348a7:	add    cl,al
   1400348a9:	rol    DWORD PTR [rax],cl
   1400348ab:	add    bh,bh
   1400348ad:	(bad)  
   1400348ae:	(bad)  
   1400348af:	inc    DWORD PTR [rcx]
   1400348b1:	(bad)  
   1400348b2:	add    al,BYTE PTR [rax]
   1400348b4:	(bad)  
   1400348b5:	xor    al,BYTE PTR [rdx]
   1400348b7:	push   rax
   1400348b8:	add    DWORD PTR [rsi],eax
   1400348ba:	add    al,BYTE PTR [rax]
   1400348bc:	(bad)  
   1400348bd:	xor    al,BYTE PTR [rdx]
   1400348bf:	push   rax
   1400348c0:	add    DWORD PTR [rsi],eax
   1400348c2:	add    al,BYTE PTR [rax]
   1400348c4:	(bad)  
   1400348c5:	xor    al,BYTE PTR [rdx]
   1400348c7:	push   rax
   1400348c8:	add    DWORD PTR [rsi],eax
   1400348ca:	add    al,BYTE PTR [rax]
   1400348cc:	(bad)  
   1400348cd:	xor    al,BYTE PTR [rdx]
   1400348cf:	push   rax
   1400348d0:	adc    DWORD PTR [rdi],ebx
   1400348d2:	add    al,0x0
   1400348d4:	adc    eax,DWORD PTR [rcx]
   1400348d6:	(bad)  
   1400348d7:	add    BYTE PTR [rax+rsi*2],cl
   1400348da:	or     esi,DWORD PTR [rax]
   1400348dc:	in     al,dx
   1400348dd:	(bad)  
   1400348de:	add    al,BYTE PTR [rax]
   1400348e0:	lock int3 
   1400348e2:	add    al,BYTE PTR [rax]
   1400348e4:	(bad)  
   1400348e5:	(bad)  
   1400348e6:	(bad)  
   1400348e7:	jmp    QWORD PTR [rsi-0x1ffffdce]
   1400348ed:	rol    DWORD PTR [rax],cl
   1400348ef:	add    bh,bh
   1400348f1:	(bad)  
   1400348f2:	(bad)  
   1400348f3:	jmp    QWORD PTR [rdx]
   1400348f5:	(bad)  
   1400348f6:	add    BYTE PTR [rax],al
   1400348f8:	add    BYTE PTR [rax],al
   1400348fa:	add    BYTE PTR [rax],al
   1400348fc:	xor    al,0xd6
   1400348fe:	add    BYTE PTR [rax],al
   140034900:	(bad)  
   140034901:	(bad)  
   140034902:	(bad)  
   140034903:	inc    DWORD PTR [rcx]
   140034905:	(bad)  
   140034906:	add    al,BYTE PTR [rax]
   140034908:	(bad)  
   140034909:	xor    al,BYTE PTR [rdx]
   14003490b:	push   rax
   14003490c:	sbb    DWORD PTR [rdi],ebp
   14003490e:	add    al,BYTE PTR [rax]
   140034910:	(bad)  
   140034911:	repnz adc BYTE PTR [rax-0x1c],dh
   140034915:	(bad)  
   140034916:	add    al,BYTE PTR [rax]
   140034918:	sbb    ch,cl
   14003491a:	add    al,BYTE PTR [rax]
   14003491c:	jp     0x14003491e
   14003491e:	add    BYTE PTR [rax],al
   140034920:	(bad)  
   140034921:	(bad)  
   140034922:	(bad)  
   140034923:	push   rcx
   140034925:	xor    al,BYTE PTR [rdx]
   140034927:	add    BYTE PTR [rax],al
   140034929:	add    BYTE PTR [rax],al
   14003492b:	add    cl,al
   14003492d:	xor    al,BYTE PTR [rdx]
   14003492f:	add    BYTE PTR [rcx],al
   140034931:	add    BYTE PTR [rax],al
   140034933:	add    cl,bl
   140034935:	xor    al,BYTE PTR [rdx]
   140034937:	add    BYTE PTR [rax-0x2a],ah
   14003493a:	add    BYTE PTR [rax],al
   14003493c:	(bad)  
   14003493d:	(bad)  
   14003493e:	(bad)  
   14003493f:	jmp    QWORD PTR [rdx+0x10000d6]
   140034945:	add    BYTE PTR [rax],al
   140034947:	add    BYTE PTR [rsi],dl
   140034949:	xlat   BYTE PTR ds:[rbx]
   14003494a:	add    BYTE PTR [rax],al
   14003494c:	add    al,BYTE PTR [rax]
   14003494e:	add    BYTE PTR [rax],al
   140034950:	xlat   BYTE PTR es:[rbx]
   140034952:	add    BYTE PTR [rax],al
   140034954:	add    DWORD PTR [rax],eax
   140034956:	add    BYTE PTR [rax],al
   140034958:	rex.WRXB xlat BYTE PTR ds:[rbx]
   14003495a:	add    BYTE PTR [rax],al
   14003495c:	add    BYTE PTR [rax],al
   14003495e:	add    BYTE PTR [rax],al
   140034960:	add    DWORD PTR [rsi],eax
   140034962:	add    al,BYTE PTR [rax]
   140034964:	(bad)  
   140034965:	xor    al,BYTE PTR [rdx]
   140034967:	push   rax
   140034968:	add    DWORD PTR [rsi],eax
   14003496a:	add    al,BYTE PTR [rax]
   14003496c:	(bad)  
   14003496d:	xor    al,BYTE PTR [rdx]
   14003496f:	push   rax
   140034970:	add    DWORD PTR [rsi],eax
   140034972:	add    al,BYTE PTR [rax]
   140034974:	(bad)  
   140034975:	xor    al,BYTE PTR [rdx]
   140034977:	push   rax
   140034978:	sbb    DWORD PTR [rcx],esi
   14003497a:	add    al,BYTE PTR [rax]
   14003497c:	(bad)  
   14003497d:	add    DWORD PTR [rdi+0x217e400],ecx
   140034983:	add    BYTE PTR [rax-0x33],al
   140034986:	add    al,BYTE PTR [rax]
   140034988:	(bad)  
   140034989:	add    al,0x0
   14003498b:	add    bh,bh
   14003498d:	(bad)  
   14003498e:	(bad)  
   14003498f:	call   FWORD PTR [rdx]
   140034991:	xor    eax,DWORD PTR [rdx]
   140034993:	add    BYTE PTR [rax-0xffff29],al
   140034999:	(bad)  
   14003499a:	(bad)  
   14003499b:	dec    DWORD PTR [rdx-0x28]
   14003499e:	add    BYTE PTR [rax],al
   1400349a0:	add    BYTE PTR [rax],al
   1400349a2:	add    BYTE PTR [rax],al
   1400349a4:	pop    rbp
   1400349a5:	fadd   DWORD PTR [rax]
   1400349a7:	add    bh,bh
   1400349a9:	(bad)  
   1400349aa:	(bad)  
   1400349ab:	inc    DWORD PTR [rcx]
   1400349ad:	(bad)  
   1400349ae:	add    al,BYTE PTR [rax]
   1400349b0:	(bad)  
   1400349b1:	xor    al,BYTE PTR [rdx]
   1400349b3:	push   rax
   1400349b4:	sbb    DWORD PTR [rdi],esi
   1400349b6:	add    al,BYTE PTR [rax]
   1400349b8:	sbb    al,0x1
   1400349ba:	adc    eax,0x217e402
   1400349bf:	add    BYTE PTR [rax-0x33],ch
   1400349c2:	add    al,BYTE PTR [rax]
   1400349c4:	xchg   edx,eax
   1400349c5:	adc    BYTE PTR [rax],al
   1400349c7:	add    bh,bh
   1400349c9:	(bad)  
   1400349ca:	(bad)  
   1400349cb:	push   QWORD PTR [rdx]
   1400349cd:	xor    eax,DWORD PTR [rdx]
   1400349cf:	add    BYTE PTR [rax-0xffff28],ah
   1400349d5:	(bad)  
   1400349d6:	(bad)  
   1400349d7:	jmp    rdx
   1400349d9:	fadd   DWORD PTR [rax]
   1400349db:	add    BYTE PTR [rax],al
   1400349dd:	add    BYTE PTR [rax],al
   1400349df:	add    BYTE PTR [rcx+rbx*8],ah
   1400349e2:	add    BYTE PTR [rax],al
   1400349e4:	(bad)  
   1400349e5:	(bad)  
   1400349e6:	(bad)  
   1400349e7:	(bad)  
   1400349e8:	cmp    cl,bl
   1400349ea:	add    BYTE PTR [rax],al
   1400349ec:	add    BYTE PTR [rax],al
   1400349ee:	add    BYTE PTR [rax],al
   1400349f0:	retf   0xd9
   1400349f3:	add    bh,bh
   1400349f5:	(bad)  
   1400349f6:	(bad)  
   1400349f7:	(bad)  
   1400349f8:	fcmovnu st,st(1)
   1400349fa:	add    BYTE PTR [rax],al
   1400349fc:	add    BYTE PTR [rax],al
   1400349fe:	add    BYTE PTR [rax],al
   140034a00:	in     eax,dx
   140034a01:	fld    DWORD PTR [rax]
   140034a03:	add    bh,bh
   140034a05:	(bad)  
   140034a06:	(bad)  
   140034a07:	inc    DWORD PTR [rcx]
   140034a09:	(bad)  
   140034a0a:	add    al,BYTE PTR [rax]
   140034a0c:	(bad)  
   140034a0d:	xor    al,BYTE PTR [rdx]
   140034a0f:	push   rax
   140034a10:	adc    DWORD PTR [rcx+rax*1],ebx
   140034a13:	add    BYTE PTR [rbx],dl
   140034a15:	ret    0x0
   140034a18:	in     al,dx
   140034a19:	(bad)  
   140034a1a:	add    al,BYTE PTR [rax]
   140034a1c:	nop
   140034a1d:	int    0x2
   140034a1f:	add    bh,bh
   140034a21:	(bad)  
   140034a22:	(bad)  
   140034a23:	dec    DWORD PTR [rdx+0x33]
   140034a26:	add    al,BYTE PTR [rax]
   140034a28:	and    dl,bl
   140034a2a:	add    BYTE PTR [rax],al
   140034a2c:	(bad)  
   140034a2d:	(bad)  
   140034a2e:	(bad)  
   140034a2f:	call   QWORD PTR [rcx-0x26]
   140034a32:	add    BYTE PTR [rax],al
   140034a34:	add    BYTE PTR [rax],al
   140034a36:	add    BYTE PTR [rax],al
   140034a38:	pop    rax
   140034a39:	fild   DWORD PTR [rax]
   140034a3b:	add    bh,bh
   140034a3d:	(bad)  
   140034a3e:	(bad)  
   140034a3f:	inc    DWORD PTR [rcx]
   140034a41:	(bad)  
   140034a42:	add    al,BYTE PTR [rax]
   140034a44:	(bad)  
   140034a45:	xor    al,BYTE PTR [rdx]
   140034a47:	push   rax
   140034a48:	adc    DWORD PTR [rdi],esp
   140034a4a:	add    al,BYTE PTR [rax]
   140034a4c:	sbb    eax,DWORD PTR [rcx]
   140034a4e:	(bad)  
   140034a4f:	add    ah,ch
   140034a51:	(bad)  
   140034a52:	add    al,BYTE PTR [rax]
   140034a54:	mov    eax,0xff0002cd
   140034a59:	(bad)  
   140034a5a:	(bad)  
   140034a5b:	jmp    QWORD PTR [rdx+0x33]
   140034a5e:	add    al,BYTE PTR [rax]
   140034a60:	sbb    bl,0x0
   140034a63:	add    bh,bh
   140034a65:	(bad)  
   140034a66:	(bad)  
   140034a67:	push   QWORD PTR [rdi+0xdb]
   140034a6d:	add    BYTE PTR [rax],al
   140034a6f:	add    BYTE PTR [rip+0xffffffffff0000de],bl        # 0x13f034b53
   140034a75:	(bad)  
   140034a76:	(bad)  
   140034a77:	inc    DWORD PTR [rcx]
   140034a79:	(bad)  
   140034a7a:	add    al,BYTE PTR [rax]
   140034a7c:	(bad)  
   140034a7d:	xor    al,BYTE PTR [rdx]
   140034a7f:	push   rax
   140034a80:	adc    DWORD PTR [rcx+rax*1],ebx
   140034a83:	add    BYTE PTR [rbx],dl
   140034a85:	loop   0x140034a87
   140034a87:	add    ah,ch
   140034a89:	(bad)  
   140034a8a:	add    al,BYTE PTR [rax]
   140034a8c:	loopne 0x140034a5b
   140034a8e:	add    al,BYTE PTR [rax]
   140034a90:	(bad)  
   140034a91:	(bad)  
   140034a92:	(bad)  
   140034a93:	(bad)  
   140034a94:	jp     0x140034ac9
   140034a96:	add    al,BYTE PTR [rax]
   140034a98:	add    BYTE PTR [rax],al
   140034a9a:	add    BYTE PTR [rax],al
   140034a9c:	xchg   edx,eax
   140034a9d:	xor    eax,DWORD PTR [rdx]
   140034a9f:	add    BYTE PTR [rax],al
   140034aa1:	add    BYTE PTR [rax],al
   140034aa3:	add    BYTE PTR [rdx+0x40000233],ch
   140034aa9:	fiadd  WORD PTR [rax]
   140034aab:	add    bh,bh
   140034aad:	(bad)  
   140034aae:	(bad)  
   140034aaf:	call   rsi
   140034ab1:	fiadd  WORD PTR [rax]
   140034ab3:	add    BYTE PTR [rax],al
   140034ab5:	add    BYTE PTR [rax],al
   140034ab7:	add    al,ch
   140034ab9:	fiadd  WORD PTR [rax]
   140034abb:	add    BYTE PTR [rcx],al
   140034abd:	add    BYTE PTR [rax],al
   140034abf:	add    al,bh
   140034ac1:	fiadd  WORD PTR [rax]
   140034ac3:	add    BYTE PTR [rax],al
   140034ac5:	add    BYTE PTR [rax],al
   140034ac7:	add    BYTE PTR [rdi+rbx*8],dl
   140034aca:	add    BYTE PTR [rax],al
   140034acc:	add    al,BYTE PTR [rax]
   140034ace:	add    BYTE PTR [rax],al
   140034ad0:	and    al,0xdf
   140034ad2:	add    BYTE PTR [rax],al
   140034ad4:	add    BYTE PTR [rax],al
   140034ad6:	add    BYTE PTR [rax],al
   140034ad8:	mov    bl,bh
   140034ada:	add    BYTE PTR [rax],al
   140034adc:	(bad)  
   140034add:	(bad)  
   140034ade:	(bad)  
   140034adf:	inc    DWORD PTR [rcx]
   140034ae1:	(bad)  
   140034ae2:	add    al,BYTE PTR [rax]
   140034ae4:	(bad)  
   140034ae5:	xor    al,BYTE PTR [rdx]
   140034ae7:	push   rax
   140034ae8:	add    DWORD PTR [rsi],eax
   140034aea:	add    al,BYTE PTR [rax]
   140034aec:	(bad)  
   140034aed:	xor    al,BYTE PTR [rdx]
   140034aef:	push   rax
   140034af0:	add    DWORD PTR [rsi],eax
   140034af2:	add    al,BYTE PTR [rax]
   140034af4:	(bad)  
   140034af5:	xor    al,BYTE PTR [rdx]
   140034af7:	push   rax
   140034af8:	sbb    DWORD PTR [rip+0x1170002],esi        # 0x1411a4b00
   140034afe:	sub    eax,0x217e404
   140034b03:	add    BYTE PTR [rax],cl
   140034b05:	(bad)  
   140034b06:	add    al,BYTE PTR [rax]
   140034b08:	push   rdx
   140034b09:	and    DWORD PTR [rax],eax
   140034b0b:	add    bh,bh
   140034b0d:	(bad)  
   140034b0e:	(bad)  
   140034b0f:	call   QWORD PTR [rsp+rsi*1+0x2]
   140034b16:	add    BYTE PTR [rax],al
   140034b18:	ret    0x233
   140034b1b:	add    BYTE PTR [rcx],al
   140034b1d:	add    BYTE PTR [rax],al
   140034b1f:	add    dl,bl
   140034b21:	xor    eax,DWORD PTR [rdx]
   140034b23:	add    BYTE PTR [rdx],al
   140034b25:	add    BYTE PTR [rax],al
   140034b27:	add    dl,dh
   140034b29:	xor    eax,DWORD PTR [rdx]
   140034b2b:	add    BYTE PTR [rdx],al
   140034b2d:	add    BYTE PTR [rax],al
   140034b2f:	add    BYTE PTR [rip+0x2000234],cl        # 0x142034d69
   140034b35:	add    BYTE PTR [rax],al
   140034b37:	add    BYTE PTR [rax],ch
   140034b39:	xor    al,0x2
   140034b3b:	add    BYTE PTR [rdx],al
   140034b3d:	add    BYTE PTR [rax],al
   140034b3f:	add    BYTE PTR [rbx+0x34],al
   140034b42:	add    al,BYTE PTR [rax]
   140034b44:	add    al,BYTE PTR [rax]
   140034b46:	add    BYTE PTR [rax],al
   140034b48:	pop    rsi
   140034b49:	xor    al,0x2
   140034b4b:	add    BYTE PTR [rdx],al
   140034b4d:	add    BYTE PTR [rax],al
   140034b4f:	add    BYTE PTR [rcx+0x34],bh
   140034b52:	add    al,BYTE PTR [rax]
   140034b54:	movabs al,ds:0xe8ffffffff0000df
   140034b5d:	fild   WORD PTR [rax]
   140034b5f:	add    BYTE PTR [rcx],al
   140034b61:	add    BYTE PTR [rax],al
   140034b63:	add    BYTE PTR [rdi],ah
   140034b65:	loopne 0x140034b67
   140034b67:	add    BYTE PTR [rdx],al
   140034b69:	add    BYTE PTR [rax],al
   140034b6b:	add    BYTE PTR [rax+riz*8],bh
   140034b6e:	add    BYTE PTR [rax],al
   140034b70:	add    eax,DWORD PTR [rax]
   140034b72:	add    BYTE PTR [rax],al
   140034b74:	rex.WRXB loopne 0x140034b77
   140034b77:	add    BYTE PTR [rdx],al
   140034b79:	add    BYTE PTR [rax],al
   140034b7b:	add    BYTE PTR [rcx-0x20],dh
   140034b7e:	add    BYTE PTR [rax],al
   140034b80:	add    al,0x0
   140034b82:	add    BYTE PTR [rax],al
   140034b84:	test   al,ah
   140034b86:	add    BYTE PTR [rax],al
   140034b88:	add    al,BYTE PTR [rax]
   140034b8a:	add    BYTE PTR [rax],al
   140034b8c:	imul   esp,ecx,0x0
   140034b8f:	add    BYTE PTR [rip+0x7e000000],al        # 0x1be034b95
   140034b95:	loope  0x140034b97
   140034b97:	add    BYTE PTR [rdx],al
   140034b99:	add    BYTE PTR [rax],al
   140034b9b:	add    BYTE PTR [rcx+0x60000e1],ah
   140034ba1:	add    BYTE PTR [rax],al
   140034ba3:	add    BYTE PTR [rcx+riz*8+0x20000],dh
   140034baa:	add    BYTE PTR [rax],al
   140034bac:	(bad)  
   140034bad:	loope  0x140034baf
   140034baf:	add    BYTE PTR [rdi],al
   140034bb1:	add    BYTE PTR [rax],al
   140034bb3:	add    cl,ch
   140034bb5:	loope  0x140034bb7
   140034bb7:	add    BYTE PTR [rdx],al
   140034bb9:	add    BYTE PTR [rax],al
   140034bbb:	add    BYTE PTR [rdx+riz*8],cl
   140034bbe:	add    BYTE PTR [rax],al
   140034bc0:	or     BYTE PTR [rax],al
   140034bc2:	add    BYTE PTR [rax],al
   140034bc4:	(bad)  
   140034bc5:	loop   0x140034bc7
   140034bc7:	add    BYTE PTR [rdx],al
   140034bc9:	add    BYTE PTR [rax],al
   140034bcb:	add    BYTE PTR [rdi-0x1e],dl
   140034bce:	add    BYTE PTR [rax],al
   140034bd0:	add    DWORD PTR [rax],eax
   140034bd2:	add    BYTE PTR [rax],al
   140034bd4:	jle    0x140034bb8
   140034bd6:	add    BYTE PTR [rax],al
   140034bd8:	add    BYTE PTR [rax],al
   140034bda:	add    BYTE PTR [rax],al
   140034bdc:	add    DWORD PTR [rsi],eax
   140034bde:	add    al,BYTE PTR [rax]
   140034be0:	(bad)  
   140034be1:	xor    al,BYTE PTR [rdx]
   140034be3:	push   rax
   140034be4:	add    DWORD PTR [rsi],eax
   140034be6:	add    al,BYTE PTR [rax]
   140034be8:	(bad)  
   140034be9:	xor    al,BYTE PTR [rdx]
   140034beb:	push   rax
   140034bec:	add    DWORD PTR [rsi],eax
   140034bee:	add    al,BYTE PTR [rax]
   140034bf0:	(bad)  
   140034bf1:	xor    al,BYTE PTR [rdx]
   140034bf3:	push   rax
   140034bf4:	add    DWORD PTR [rsi],eax
   140034bf6:	add    al,BYTE PTR [rax]
   140034bf8:	(bad)  
   140034bf9:	xor    al,BYTE PTR [rdx]
   140034bfb:	push   rax
   140034bfc:	add    DWORD PTR [rsi],eax
   140034bfe:	add    al,BYTE PTR [rax]
   140034c00:	(bad)  
   140034c01:	xor    al,BYTE PTR [rdx]
   140034c03:	push   rax
   140034c04:	add    DWORD PTR [rsi],eax
   140034c06:	add    al,BYTE PTR [rax]
   140034c08:	(bad)  
   140034c09:	xor    al,BYTE PTR [rdx]
   140034c0b:	push   rax
   140034c0c:	add    DWORD PTR [rsi],eax
   140034c0e:	add    al,BYTE PTR [rax]
   140034c10:	(bad)  
   140034c11:	xor    al,BYTE PTR [rdx]
   140034c13:	push   rax
   140034c14:	add    DWORD PTR [rsi],eax
   140034c16:	add    al,BYTE PTR [rax]
   140034c18:	(bad)  
   140034c19:	xor    al,BYTE PTR [rdx]
   140034c1b:	push   rax
   140034c1c:	add    DWORD PTR [rsi],eax
   140034c1e:	add    al,BYTE PTR [rax]
   140034c20:	(bad)  
   140034c21:	xor    al,BYTE PTR [rdx]
   140034c23:	push   rax
   140034c24:	adc    DWORD PTR [rdx],esp
   140034c26:	add    al,BYTE PTR [rax]
   140034c28:	(bad)  
   140034c29:	add    DWORD PTR [rcx],ebx
   140034c2b:	add    ah,ch
   140034c2d:	(bad)  
   140034c2e:	add    al,BYTE PTR [rax]
   140034c30:	xor    dh,cl
   140034c32:	add    al,BYTE PTR [rax]
   140034c34:	(bad)  
   140034c35:	(bad)  
   140034c36:	(bad)  
   140034c37:	(bad)  
   140034c38:	cmp    esi,DWORD PTR [rip+0x2]        # 0x140034c40
   140034c3e:	add    BYTE PTR [rax],al
   140034c40:	mov    ebp,0x1000234
   140034c45:	add    BYTE PTR [rax],al
   140034c47:	add    ch,dl
   140034c49:	xor    al,0x2
   140034c4b:	add    BYTE PTR [rdx],al
   140034c4d:	add    BYTE PTR [rax],al
   140034c4f:	add    ch,ch
   140034c51:	xor    al,0x2
   140034c53:	add    BYTE PTR [rdx],al
   140034c55:	add    BYTE PTR [rax],al
   140034c57:	add    BYTE PTR [rip+0x2000235],al        # 0x142034e92
   140034c5d:	add    BYTE PTR [rax],al
   140034c5f:	add    BYTE PTR [rax],ah
   140034c61:	xor    eax,0xe2b00002
   140034c66:	add    BYTE PTR [rax],al
   140034c68:	(bad)  
   140034c69:	(bad)  
   140034c6a:	(bad)  
   140034c6b:	jmp    rbp
   140034c6d:	loop   0x140034c6f
   140034c6f:	add    BYTE PTR [rcx],al
   140034c71:	add    BYTE PTR [rax],al
   140034c73:	add    BYTE PTR [rbx+riz*8],ah
   140034c76:	add    BYTE PTR [rax],al
   140034c78:	add    al,BYTE PTR [rax]
   140034c7a:	add    BYTE PTR [rax],al
   140034c7c:	ss jrcxz 0x140034c7f
   140034c7f:	add    BYTE PTR [rbx],al
   140034c81:	add    BYTE PTR [rax],al
   140034c83:	add    BYTE PTR [rsi-0x1d],al
   140034c86:	add    BYTE PTR [rax],al
   140034c88:	add    al,BYTE PTR [rax]
   140034c8a:	add    BYTE PTR [rax],al
   140034c8c:	gs jrcxz 0x140034c8f
   140034c8f:	add    BYTE PTR [rax+rax*1],al
   140034c92:	add    BYTE PTR [rax],al
   140034c94:	js     0x140034c79
   140034c96:	add    BYTE PTR [rax],al
   140034c98:	add    al,BYTE PTR [rax]
   140034c9a:	add    BYTE PTR [rax],al
   140034c9c:	mov    ebp,0x50000e3
   140034ca1:	add    BYTE PTR [rax],al
   140034ca3:	add    ch,cl
   140034ca5:	jrcxz  0x140034ca7
   140034ca7:	add    BYTE PTR [rdx],al
   140034ca9:	add    BYTE PTR [rax],al
   140034cab:	add    bl,bl
   140034cad:	jrcxz  0x140034caf
   140034caf:	add    BYTE PTR [rcx],al
   140034cb1:	add    BYTE PTR [rax],al
   140034cb3:	add    BYTE PTR [rdx],al
   140034cb5:	in     al,0x0
   140034cb7:	add    BYTE PTR [rax],al
   140034cb9:	add    BYTE PTR [rax],al
   140034cbb:	add    BYTE PTR [rcx],al
   140034cbd:	(bad)  
   140034cbe:	add    al,BYTE PTR [rax]
   140034cc0:	(bad)  
   140034cc1:	xor    al,BYTE PTR [rdx]
   140034cc3:	push   rax
   140034cc4:	add    DWORD PTR [rsi],eax
   140034cc6:	add    al,BYTE PTR [rax]
   140034cc8:	(bad)  
   140034cc9:	xor    al,BYTE PTR [rdx]
   140034ccb:	push   rax
   140034ccc:	add    DWORD PTR [rsi],eax
   140034cce:	add    al,BYTE PTR [rax]
   140034cd0:	(bad)  
   140034cd1:	xor    al,BYTE PTR [rdx]
   140034cd3:	push   rax
   140034cd4:	add    DWORD PTR [rsi],eax
   140034cd6:	add    al,BYTE PTR [rax]
   140034cd8:	(bad)  
   140034cd9:	xor    al,BYTE PTR [rdx]
   140034cdb:	push   rax
   140034cdc:	add    DWORD PTR [rsi],eax
   140034cde:	add    al,BYTE PTR [rax]
   140034ce0:	(bad)  
   140034ce1:	xor    al,BYTE PTR [rdx]
   140034ce3:	push   rax
   140034ce4:	add    DWORD PTR [rsi],eax
   140034ce6:	add    al,BYTE PTR [rax]
   140034ce8:	(bad)  
   140034ce9:	xor    al,BYTE PTR [rdx]
   140034ceb:	push   rax
   140034cec:	add    DWORD PTR [rax],ebx
   140034cee:	add    DWORD PTR [rax],eax
   140034cf0:	sbb    BYTE PTR [rdx+0x0],ah
   140034cf3:	add    BYTE PTR [rcx],bl
   140034cf5:	and    eax,0xa2160001
   140034cfa:	add    BYTE PTR [rax],al
   140034cfc:	(bad)  
   140034cfd:	(bad)  
   140034cfe:	add    al,BYTE PTR [rax]
   140034d00:	rex.W add BYTE PTR [rax],al
   140034d03:	add    BYTE PTR [rcx],bl
   140034d05:	add    DWORD PTR es:[rax],eax
   140034d08:	(bad)  
   140034d09:	ret    0x0
   140034d0c:	(bad)  
   140034d0d:	(bad)  
   140034d0e:	add    al,BYTE PTR [rax]
   140034d10:	push   rax
   140034d11:	add    BYTE PTR [rax],al
   140034d13:	add    BYTE PTR [rcx],bl
   140034d15:	xor    DWORD PTR [rdx],eax
   140034d17:	add    BYTE PTR [rsi],dl
   140034d19:	add    DWORD PTR [rbp+0x0],edx
   140034d1c:	in     al,0x17
   140034d1e:	add    al,BYTE PTR [rax]
   140034d20:	pop    rax
   140034d21:	(bad)  
   140034d22:	add    al,BYTE PTR [rax]
   140034d24:	xchg   edx,eax
   140034d25:	add    al,BYTE PTR [rax]
   140034d27:	add    bh,bh
   140034d29:	(bad)  
   140034d2a:	(bad)  
   140034d2b:	jmp    QWORD PTR [rbp+rsi*1+0x2]
   140034d2f:	add    al,ah
   140034d31:	call   0x140024d36
   140034d36:	(bad)  
   140034d37:	push   QWORD PTR [rbx]
   140034d39:	jmp    0x140034d3e
   140034d3e:	add    BYTE PTR [rax],al
   140034d40:	(bad)  
   140034d41:	(bad)  
   140034d42:	add    BYTE PTR [rax],al
   140034d44:	(bad)  
   140034d45:	(bad)  
   140034d46:	(bad)  
   140034d47:	inc    DWORD PTR [rcx]
   140034d49:	(bad)  
   140034d4a:	add    al,BYTE PTR [rax]
   140034d4c:	(bad)  
   140034d4d:	xor    al,BYTE PTR [rdx]
   140034d4f:	push   rax
   140034d50:	adc    DWORD PTR [rdi],esp
   140034d52:	add    al,BYTE PTR [rax]
   140034d54:	sbb    eax,DWORD PTR [rcx]
   140034d56:	cmp    eax,DWORD PTR [rax]
   140034d58:	in     al,dx
   140034d59:	(bad)  
   140034d5a:	add    al,BYTE PTR [rax]
   140034d5c:	or     dh,0x2
   140034d5f:	add    bh,bh
   140034d61:	(bad)  
   140034d62:	(bad)  
   140034d63:	(bad)  
   140034d64:	jl     0x140034d9b
   140034d66:	add    al,BYTE PTR [rax]
   140034d68:	add    BYTE PTR [rax],al
   140034d6a:	add    BYTE PTR [rax],al
   140034d6c:	xchg   edi,eax
   140034d6d:	xor    eax,0x2
   140034d72:	add    BYTE PTR [rax],al
   140034d74:	mov    dl,0x35
   140034d76:	add    al,BYTE PTR [rax]
   140034d78:	add    BYTE PTR [rax],al
   140034d7a:	add    BYTE PTR [rax],al
   140034d7c:	int    0x35
   140034d7e:	add    al,BYTE PTR [rax]
   140034d80:	add    eax,DWORD PTR [rax]
   140034d82:	add    BYTE PTR [rax],al
   140034d84:	call   0x140034fbe
   140034d89:	add    BYTE PTR [rax],al
   140034d8b:	add    BYTE PTR [rbx],al
   140034d8d:	add    al,BYTE PTR ss:[rax]
   140034d90:	add    BYTE PTR [rax],al
   140034d92:	add    BYTE PTR [rax],al
   140034d94:	(bad)  
   140034d95:	add    al,BYTE PTR ss:[rax]
   140034d98:	(bad)  
   140034d99:	add    BYTE PTR [rax],al
   140034d9b:	add    BYTE PTR [rcx],bh
   140034d9d:	add    al,BYTE PTR ss:[rax]
   140034da0:	(bad)  
   140034da1:	add    BYTE PTR [rax],al
   140034da3:	add    BYTE PTR [rsi+rsi*1+0x2],dl
   140034da7:	add    BYTE PTR [rax],cl
   140034da9:	add    BYTE PTR [rax],al
   140034dab:	add    BYTE PTR [rdi+0x36],ch
   140034dae:	add    al,BYTE PTR [rax]
   140034db0:	add    bl,ch
   140034db2:	add    BYTE PTR [rax],al
   140034db4:	(bad)  
   140034db5:	(bad)  
   140034db6:	(bad)  
   140034db7:	dec    DWORD PTR [rbp-0x15]
   140034dba:	add    BYTE PTR [rax],al
   140034dbc:	add    BYTE PTR [rax],al
   140034dbe:	add    BYTE PTR [rax],al
   140034dc0:	movsxd ebp,ebx
   140034dc2:	add    BYTE PTR [rax],al
   140034dc4:	add    DWORD PTR [rax],eax
   140034dc6:	add    BYTE PTR [rax],al
   140034dc8:	jns    0x140034db5
   140034dca:	add    BYTE PTR [rax],al
   140034dcc:	add    BYTE PTR [rax],al
   140034dce:	add    BYTE PTR [rax],al
   140034dd0:	(bad)
   140034dd3:	add    bh,bh
   140034dd5:	(bad)  
   140034dd6:	(bad)  
   140034dd7:	(bad)  
   140034dd8:	fsub   st(3),st
   140034dda:	add    BYTE PTR [rax],al
   140034ddc:	add    BYTE PTR [rax],al
   140034dde:	add    BYTE PTR [rax],al
   140034de0:	adc    esp,ebp
   140034de2:	add    BYTE PTR [rax],al
   140034de4:	add    al,BYTE PTR [rax]
   140034de6:	add    BYTE PTR [rax],al
   140034de8:	js     0x140034dd6
   140034dea:	add    BYTE PTR [rax],al
   140034dec:	add    BYTE PTR [rax],al
   140034dee:	add    BYTE PTR [rax],al
   140034df0:	movabs eax,ds:0xb8ffffffff0000ec
   140034df9:	in     al,dx
   140034dfa:	add    BYTE PTR [rax],al
   140034dfc:	add    BYTE PTR [rax],al
   140034dfe:	add    BYTE PTR [rax],al
   140034e00:	(bad)  
   140034e01:	in     eax,dx
   140034e02:	add    BYTE PTR [rax],al
   140034e04:	(bad)  
   140034e05:	(bad)  
   140034e06:	(bad)  
   140034e07:	push   QWORD PTR [rsi]
   140034e09:	in     eax,dx
   140034e0a:	add    BYTE PTR [rax],al
   140034e0c:	add    BYTE PTR [rax],al
   140034e0e:	add    BYTE PTR [rax],al
   140034e10:	jge    0x140034dff
   140034e12:	add    BYTE PTR [rax],al
   140034e14:	add    eax,DWORD PTR [rax]
   140034e16:	add    BYTE PTR [rax],al
   140034e18:	mov    esi,0x40000ed
   140034e1d:	add    BYTE PTR [rax],al
   140034e1f:	add    BYTE PTR [rcx],bl
   140034e21:	out    dx,al
   140034e22:	add    BYTE PTR [rax],al
   140034e24:	add    eax,DWORD PTR [rax]
   140034e26:	add    BYTE PTR [rax],al
   140034e28:	(bad)  
   140034e29:	out    dx,al
   140034e2a:	add    BYTE PTR [rax],al
   140034e2c:	add    BYTE PTR [rax],al
   140034e2e:	add    BYTE PTR [rax],al
   140034e30:	retf   
   140034e31:	out    dx,al
   140034e32:	add    BYTE PTR [rax],al
   140034e34:	add    eax,0x20000000
   140034e39:	out    dx,eax
   140034e3a:	add    BYTE PTR [rax],al
   140034e3c:	add    BYTE PTR [rax],al
   140034e3e:	add    BYTE PTR [rax],al
   140034e40:	cmp    ebp,edi
   140034e42:	add    BYTE PTR [rax],al
   140034e44:	(bad)  
   140034e45:	add    BYTE PTR [rax],al
   140034e47:	add    ch,cl
   140034e49:	out    dx,eax
   140034e4a:	add    BYTE PTR [rax],al
   140034e4c:	(bad)  
   140034e4d:	add    BYTE PTR [rax],al
   140034e4f:	add    BYTE PTR [rdx],ah
   140034e51:	lock add BYTE PTR [rax],al
   140034e54:	(bad)  
   140034e55:	add    BYTE PTR [rax],al
   140034e57:	add    BYTE PTR [rbp-0x10],ah
   140034e5a:	add    BYTE PTR [rax],al
   140034e5c:	or     BYTE PTR [rax],al
   140034e5e:	add    BYTE PTR [rax],al
   140034e60:	jp     0x140034e52
   140034e62:	add    BYTE PTR [rax],al
   140034e64:	or     DWORD PTR [rax],eax
   140034e66:	add    BYTE PTR [rax],al
   140034e68:	nop
   140034e69:	lock add BYTE PTR [rax],al
   140034e6c:	or     BYTE PTR [rax],al
   140034e6e:	add    BYTE PTR [rax],al
   140034e70:	mov    bl,0xf0
   140034e72:	add    BYTE PTR [rax],al
   140034e74:	(bad)  
   140034e75:	add    BYTE PTR [rax],al
   140034e77:	add    BYTE PTR [rcx-0xf],bh
   140034e7a:	add    BYTE PTR [rax],al
   140034e7c:	add    BYTE PTR [rax],al
   140034e7e:	add    BYTE PTR [rax],al
   140034e80:	xlat   BYTE PTR ds:[rbx]
   140034e81:	icebp  
   140034e82:	add    BYTE PTR [rax],al
   140034e84:	(bad)  
   140034e85:	(bad)  
   140034e86:	(bad)  
   140034e87:	inc    DWORD PTR [rcx]
   140034e89:	(bad)  
   140034e8a:	add    al,BYTE PTR [rax]
   140034e8c:	(bad)  
   140034e8d:	xor    al,BYTE PTR [rdx]
   140034e8f:	push   rax
   140034e90:	add    DWORD PTR [rsi],eax
   140034e92:	add    al,BYTE PTR [rax]
   140034e94:	(bad)  
   140034e95:	xor    al,BYTE PTR [rdx]
   140034e97:	push   rax
   140034e98:	add    DWORD PTR [rsi],eax
   140034e9a:	add    al,BYTE PTR [rax]
   140034e9c:	(bad)  
   140034e9d:	xor    al,BYTE PTR [rdx]
   140034e9f:	push   rax
   140034ea0:	add    DWORD PTR [rsi],eax
   140034ea2:	add    al,BYTE PTR [rax]
   140034ea4:	(bad)  
   140034ea5:	xor    al,BYTE PTR [rdx]
   140034ea7:	push   rax
   140034ea8:	add    DWORD PTR [rsi],eax
   140034eaa:	add    al,BYTE PTR [rax]
   140034eac:	(bad)  
   140034ead:	xor    al,BYTE PTR [rdx]
   140034eaf:	push   rax
   140034eb0:	add    DWORD PTR [rsi],eax
   140034eb2:	add    al,BYTE PTR [rax]
   140034eb4:	(bad)  
   140034eb5:	xor    al,BYTE PTR [rdx]
   140034eb7:	push   rax
   140034eb8:	add    DWORD PTR [rsi],eax
   140034eba:	add    al,BYTE PTR [rax]
   140034ebc:	(bad)  
   140034ebd:	xor    al,BYTE PTR [rdx]
   140034ebf:	push   rax
   140034ec0:	add    DWORD PTR [rsi],eax
   140034ec2:	add    al,BYTE PTR [rax]
   140034ec4:	(bad)  
   140034ec5:	xor    al,BYTE PTR [rdx]
   140034ec7:	push   rax
   140034ec8:	add    DWORD PTR [rsi],eax
   140034eca:	add    al,BYTE PTR [rax]
   140034ecc:	(bad)  
   140034ecd:	xor    al,BYTE PTR [rdx]
   140034ecf:	push   rax
   140034ed0:	add    DWORD PTR [rsi],eax
   140034ed2:	add    al,BYTE PTR [rax]
   140034ed4:	(bad)  
   140034ed5:	xor    al,BYTE PTR [rdx]
   140034ed7:	push   rax
   140034ed8:	sbb    DWORD PTR [rax],esi
   140034eda:	add    eax,DWORD PTR [rax]
   140034edc:	adc    al,BYTE PTR [rcx]
   140034ede:	jb     0x140034ee0
   140034ee0:	or     esi,DWORD PTR [rax+0x0]
   140034ee3:	add    ah,ah
   140034ee5:	(bad)  
   140034ee6:	add    al,BYTE PTR [rax]
   140034ee8:	test   al,0xce
   140034eea:	add    al,BYTE PTR [rax]
   140034eec:	(bad)  
   140034eed:	add    eax,DWORD PTR [rax]
   140034eef:	add    bh,bh
   140034ef1:	(bad)  
   140034ef2:	(bad)  
   140034ef3:	dec    DWORD PTR [rdx+0x236]
   140034ef9:	add    BYTE PTR [rax],al
   140034efb:	add    BYTE PTR [rbp+0x1000236],ah
   140034f01:	add    BYTE PTR [rax],al
   140034f03:	add    al,al
   140034f05:	add    al,BYTE PTR ss:[rax]
   140034f08:	add    DWORD PTR [rax],eax
   140034f0a:	add    BYTE PTR [rax],al
   140034f0c:	(bad)  [rsi]
   140034f0e:	add    al,BYTE PTR [rax]
   140034f10:	add    eax,DWORD PTR [rax]
   140034f12:	add    BYTE PTR [rax],al
   140034f14:	div    BYTE PTR [rsi]
   140034f16:	add    al,BYTE PTR [rax]
   140034f18:	add    DWORD PTR [rax],eax
   140034f1a:	add    BYTE PTR [rax],al
   140034f1c:	adc    DWORD PTR [rdi],esi
   140034f1e:	add    al,BYTE PTR [rax]
   140034f20:	add    eax,0x2c000000
   140034f25:	(bad)  
   140034f26:	add    al,BYTE PTR [rax]
   140034f28:	(bad)  
   140034f29:	add    BYTE PTR [rax],al
   140034f2b:	add    BYTE PTR [rdi+0x37],al
   140034f2e:	add    al,BYTE PTR [rax]
   140034f30:	(bad)  
   140034f31:	add    BYTE PTR [rax],al
   140034f33:	add    BYTE PTR [rdx+0x37],ah
   140034f36:	add    al,BYTE PTR [rax]
   140034f38:	(bad)  
   140034f39:	add    BYTE PTR [rax],al
   140034f3b:	add    BYTE PTR [rbp+0x37],bh
   140034f3e:	add    al,BYTE PTR [rax]
   140034f40:	(bad)  
   140034f41:	add    BYTE PTR [rax],al
   140034f43:	add    BYTE PTR [rax+0xa000237],bl
   140034f49:	add    BYTE PTR [rax],al
   140034f4b:	add    BYTE PTR [rbx+0x237],dh
   140034f51:	repnz add BYTE PTR [rax],al
   140034f54:	(bad)  
   140034f55:	(bad)  
   140034f56:	(bad)  
   140034f57:	jmp    QWORD PTR [rdx+rsi*8+0x0]
   140034f5b:	add    BYTE PTR [rax],al
   140034f5d:	add    BYTE PTR [rax],al
   140034f5f:	add    BYTE PTR [rdi],al
   140034f61:	repz add BYTE PTR [rax],al
   140034f64:	(bad)  
   140034f65:	(bad)  
   140034f66:	(bad)  
   140034f67:	call   FWORD PTR [rsi]
   140034f69:	repz add BYTE PTR [rax],al
   140034f6c:	add    BYTE PTR [rax],al
   140034f6e:	add    BYTE PTR [rax],al
   140034f70:	xor    esi,ebx
   140034f72:	add    BYTE PTR [rax],al
   140034f74:	add    DWORD PTR [rax],eax
   140034f76:	add    BYTE PTR [rax],al
   140034f78:	jb     0x140034f6d
   140034f7a:	add    BYTE PTR [rax],al
   140034f7c:	add    BYTE PTR [rax],al
   140034f7e:	add    BYTE PTR [rax],al
   140034f80:	xor    bl,0x0
   140034f83:	add    bh,bh
   140034f85:	(bad)  
   140034f86:	(bad)  
   140034f87:	call   QWORD PTR [rdi+0x10000f3]
   140034f8d:	add    BYTE PTR [rax],al
   140034f8f:	add    ah,cl
   140034f91:	repz add BYTE PTR [rax],al
   140034f94:	add    al,BYTE PTR [rax]
   140034f96:	add    BYTE PTR [rax],al
   140034f98:	xor    esi,esp
   140034f9a:	add    BYTE PTR [rax],al
   140034f9c:	add    DWORD PTR [rax],eax
   140034f9e:	add    BYTE PTR [rax],al
   140034fa0:	pop    rsp
   140034fa1:	hlt    
   140034fa2:	add    BYTE PTR [rax],al
   140034fa4:	add    BYTE PTR [rax],al
   140034fa6:	add    BYTE PTR [rax],al
   140034fa8:	push   0xfffffffffffffff4
   140034faa:	add    BYTE PTR [rax],al
   140034fac:	(bad)  
   140034fad:	(bad)  
   140034fae:	(bad)  
   140034faf:	inc    DWORD PTR [rcx+0x10000f4]
   140034fb5:	add    BYTE PTR [rax],al
   140034fb7:	add    al,ch
   140034fb9:	hlt    
   140034fba:	add    BYTE PTR [rax],al
   140034fbc:	add    BYTE PTR [rax],al
   140034fbe:	add    BYTE PTR [rax],al
   140034fc0:	div    ah
   140034fc2:	add    BYTE PTR [rax],al
   140034fc4:	(bad)  
   140034fc5:	(bad)  
   140034fc6:	(bad)  
   140034fc7:	dec    DWORD PTR [rip+0x10000f5]        # 0x1410350c2
   140034fcd:	add    BYTE PTR [rax],al
   140034fcf:	add    BYTE PTR [rsi-0xb],cl
   140034fd2:	add    BYTE PTR [rax],al
   140034fd4:	add    eax,DWORD PTR [rax]
   140034fd6:	add    BYTE PTR [rax],al
   140034fd8:	(bad)  
   140034fd9:	cmc    
   140034fda:	add    BYTE PTR [rax],al
   140034fdc:	add    al,0x0
   140034fde:	add    BYTE PTR [rax],al
   140034fe0:	in     eax,dx
   140034fe1:	cmc    
   140034fe2:	add    BYTE PTR [rax],al
   140034fe4:	add    eax,DWORD PTR [rax]
   140034fe6:	add    BYTE PTR [rax],al
   140034fe8:	sti    
   140034fe9:	cmc    
   140034fea:	add    BYTE PTR [rax],al
   140034fec:	add    DWORD PTR [rax],eax
   140034fee:	add    BYTE PTR [rax],al
   140034ff0:	outs   dx,DWORD PTR ds:[rsi]
   140034ff1:	test   BYTE PTR [rax],0x0
   140034ff4:	add    eax,0x93000000
   140034ff9:	test   BYTE PTR [rax],0x0
   140034ffc:	(bad)  
   140034ffd:	add    BYTE PTR [rax],al
   140034fff:	add    BYTE PTR [rcx],dl
   140035001:	test   DWORD PTR [rax],0x700
   140035007:	add    BYTE PTR [rdi+rsi*8+0x0],ch
   14003500b:	add    BYTE PTR [rsi],al
   14003500d:	add    BYTE PTR [rax],al
   14003500f:	add    ch,bl
   140035011:	test   DWORD PTR [rax],0x800
   140035017:	add    BYTE PTR [rax],bh
   140035019:	clc    
   14003501a:	add    BYTE PTR [rax],al
   14003501c:	(bad)  
   14003501d:	add    BYTE PTR [rax],al
   14003501f:	add    BYTE PTR [rbp+0x90000f8],cl
   140035025:	add    BYTE PTR [rax],al
   140035027:	add    al,ch
   140035029:	clc    
   14003502a:	add    BYTE PTR [rax],al
   14003502c:	(bad)  
   14003502d:	add    BYTE PTR [rax],al
   14003502f:	add    BYTE PTR [rbx],al
   140035031:	stc    
   140035032:	add    BYTE PTR [rax],al
   140035034:	or     al,BYTE PTR [rax]
   140035036:	add    BYTE PTR [rax],al
   140035038:	(bad)  
   14003503b:	add    BYTE PTR [rbx],cl
   14003503d:	add    BYTE PTR [rax],al
   14003503f:	add    bl,bl
   140035041:	stc    
   140035042:	add    BYTE PTR [rax],al
   140035044:	or     al,BYTE PTR [rax]
   140035046:	add    BYTE PTR [rax],al
   140035048:	rex.W cli 
   14003504a:	add    BYTE PTR [rax],al
   14003504c:	(bad)  
   14003504d:	add    BYTE PTR [rax],al
   14003504f:	add    BYTE PTR [rdx+0x50000fc],bl
   140035055:	add    BYTE PTR [rax],al
   140035057:	add    BYTE PTR [rax+0x10000fc],ch
   14003505d:	add    BYTE PTR [rax],al
   14003505f:	add    BYTE PTR [rdi],cl
   140035061:	std    
   140035062:	add    BYTE PTR [rax],al
   140035064:	add    BYTE PTR [rax],al
   140035066:	add    BYTE PTR [rax],al
   140035068:	sbb    eax,0xff0000fd
   14003506d:	(bad)  
   14003506e:	(bad)  
   14003506f:	inc    DWORD PTR [rcx]
   140035071:	(bad)  
   140035072:	add    al,BYTE PTR [rax]
   140035074:	(bad)  
   140035075:	xor    al,BYTE PTR [rdx]
   140035077:	push   rax
   140035078:	add    DWORD PTR [rsi],eax
   14003507a:	add    al,BYTE PTR [rax]
   14003507c:	(bad)  
   14003507d:	xor    al,BYTE PTR [rdx]
   14003507f:	push   rax
   140035080:	add    DWORD PTR [rsi],eax
   140035082:	add    al,BYTE PTR [rax]
   140035084:	(bad)  
   140035085:	xor    al,BYTE PTR [rdx]
   140035087:	push   rax
   140035088:	add    DWORD PTR [rsi],eax
   14003508a:	add    al,BYTE PTR [rax]
   14003508c:	(bad)  
   14003508d:	xor    al,BYTE PTR [rdx]
   14003508f:	push   rax
   140035090:	add    DWORD PTR [rsi],eax
   140035092:	add    al,BYTE PTR [rax]
   140035094:	(bad)  
   140035095:	xor    al,BYTE PTR [rdx]
   140035097:	push   rax
   140035098:	add    DWORD PTR [rsi],eax
   14003509a:	add    al,BYTE PTR [rax]
   14003509c:	(bad)  
   14003509d:	xor    al,BYTE PTR [rdx]
   14003509f:	push   rax
   1400350a0:	add    DWORD PTR [rsi],eax
   1400350a2:	add    al,BYTE PTR [rax]
   1400350a4:	(bad)  
   1400350a5:	xor    al,BYTE PTR [rdx]
   1400350a7:	push   rax
   1400350a8:	add    DWORD PTR [rsi],eax
   1400350aa:	add    al,BYTE PTR [rax]
   1400350ac:	(bad)  
   1400350ad:	xor    al,BYTE PTR [rdx]
   1400350af:	push   rax
   1400350b0:	add    DWORD PTR [rsi],eax
   1400350b2:	add    al,BYTE PTR [rax]
   1400350b4:	(bad)  
   1400350b5:	xor    al,BYTE PTR [rdx]
   1400350b7:	push   rax
   1400350b8:	add    DWORD PTR [rsi],eax
   1400350ba:	add    al,BYTE PTR [rax]
   1400350bc:	(bad)  
   1400350bd:	xor    al,BYTE PTR [rdx]
   1400350bf:	push   rax
   1400350c0:	add    DWORD PTR [rsi],eax
   1400350c2:	add    al,BYTE PTR [rax]
   1400350c4:	(bad)  
   1400350c5:	xor    al,BYTE PTR [rdx]
   1400350c7:	push   rax
   1400350c8:	add    DWORD PTR [rsi],eax
   1400350ca:	add    al,BYTE PTR [rax]
   1400350cc:	(bad)  
   1400350cd:	xor    al,BYTE PTR [rdx]
   1400350cf:	push   rax
   1400350d0:	sbb    DWORD PTR [rax],esi
   1400350d2:	add    eax,DWORD PTR [rax]
   1400350d4:	adc    al,BYTE PTR [rcx]
   1400350d6:	add    BYTE PTR fs:[rbx],cl
   1400350d9:	jo     0x1400350db
   1400350db:	add    ah,ah
   1400350dd:	(bad)  
   1400350de:	add    al,BYTE PTR [rax]
   1400350e0:	ror    dh,1
   1400350e2:	add    al,BYTE PTR [rax]
   1400350e4:	adc    al,BYTE PTR [rbx]
   1400350e6:	add    BYTE PTR [rax],al
   1400350e8:	(bad)  
   1400350e9:	(bad)  
   1400350ea:	(bad)  
   1400350eb:	dec    esi
   1400350ed:	(bad)  
   1400350ee:	add    al,BYTE PTR [rax]
   1400350f0:	add    BYTE PTR [rax],al
   1400350f2:	add    BYTE PTR [rax],al
   1400350f4:	out    0x37,al
   1400350f6:	add    al,BYTE PTR [rax]
   1400350f8:	add    BYTE PTR [rax],al
   1400350fa:	add    BYTE PTR [rax],al
   1400350fc:	(bad)  
   1400350fd:	(bad)  
   1400350fe:	add    al,BYTE PTR [rax]
   140035100:	add    BYTE PTR [rax],al
   140035102:	add    BYTE PTR [rax],al
   140035104:	sbb    DWORD PTR [rax],edi
   140035106:	add    al,BYTE PTR [rax]
   140035108:	add    BYTE PTR [rax],al
   14003510a:	add    BYTE PTR [rax],al
   14003510c:	xor    al,0x38
   14003510e:	add    al,BYTE PTR [rax]
   140035110:	add    BYTE PTR [rax],al
   140035112:	add    BYTE PTR [rax],al
   140035114:	rex.WR cmp BYTE PTR [rdx],r8b
   140035117:	add    BYTE PTR [rax],al
   140035119:	add    BYTE PTR [rax],al
   14003511b:	add    BYTE PTR [rdi+0x38],ah
   14003511e:	add    al,BYTE PTR [rax]
   140035120:	push   rax
   140035121:	std    
   140035122:	add    BYTE PTR [rax],al
   140035124:	(bad)  
   140035125:	(bad)  
   140035126:	(bad)  
   140035127:	call   QWORD PTR [rax+0xfd]
   14003512d:	add    BYTE PTR [rax],al
   14003512f:	add    BYTE PTR [rbp-0x2],bl
   140035132:	add    BYTE PTR [rax],al
   140035134:	add    DWORD PTR [rax],eax
   140035136:	add    BYTE PTR [rax],al
   140035138:	ins    DWORD PTR es:[rdi],dx
   140035139:	inc    BYTE PTR [rax]
   14003513b:	add    BYTE PTR [rax],al
   14003513d:	add    BYTE PTR [rax],al
   14003513f:	add    BYTE PTR [rbp+0x20000fe],cl
   140035145:	add    BYTE PTR [rax],al
   140035147:	add    BYTE PTR [rax+0xfe],ah
   14003514d:	add    BYTE PTR [rax],al
   14003514f:	add    BYTE PTR [rdx],dl
   140035151:	inc    DWORD PTR [rax]
   140035153:	add    BYTE PTR [rbx],al
   140035155:	add    BYTE PTR [rax],al
   140035157:	add    BYTE PTR [rip+0xff],ah        # 0x14003525c
   14003515d:	add    BYTE PTR [rax],al
   14003515f:	add    BYTE PTR [rbp-0x1],al
   140035162:	add    BYTE PTR [rax],al
   140035164:	add    al,0x0
   140035166:	add    BYTE PTR [rax],al
   140035168:	push   rbp
   140035169:	inc    DWORD PTR [rax]
   14003516b:	add    BYTE PTR [rax],al
   14003516d:	add    BYTE PTR [rax],al
   14003516f:	add    BYTE PTR [rdx+0x50000ff],ch
   140035175:	add    BYTE PTR [rax],al
   140035177:	add    BYTE PTR [rbp+0xff],bh
   14003517d:	add    BYTE PTR [rax],al
   14003517f:	add    al,ah
   140035181:	inc    DWORD PTR [rax]
   140035183:	add    BYTE PTR [rsi],al
   140035185:	add    BYTE PTR [rax],al
   140035187:	add    bl,dh
   140035189:	inc    DWORD PTR [rax]
   14003518b:	add    BYTE PTR [rax],al
   14003518d:	add    BYTE PTR [rax],al
   14003518f:	add    BYTE PTR [rax+rax*1+0x1],bh
   140035193:	add    bh,bh
   140035195:	(bad)  
   140035196:	(bad)  
   140035197:	inc    DWORD PTR [rcx]
   140035199:	(bad)  
   14003519a:	add    al,BYTE PTR [rax]
   14003519c:	(bad)  
   14003519d:	xor    al,BYTE PTR [rdx]
   14003519f:	push   rax
   1400351a0:	add    DWORD PTR [rsi],eax
   1400351a2:	add    al,BYTE PTR [rax]
   1400351a4:	(bad)  
   1400351a5:	xor    al,BYTE PTR [rdx]
   1400351a7:	push   rax
   1400351a8:	add    DWORD PTR [rsi],eax
   1400351aa:	add    al,BYTE PTR [rax]
   1400351ac:	(bad)  
   1400351ad:	xor    al,BYTE PTR [rdx]
   1400351af:	push   rax
   1400351b0:	add    DWORD PTR [rsi],eax
   1400351b2:	add    al,BYTE PTR [rax]
   1400351b4:	(bad)  
   1400351b5:	xor    al,BYTE PTR [rdx]
   1400351b7:	push   rax
   1400351b8:	add    DWORD PTR [rsi],eax
   1400351ba:	add    al,BYTE PTR [rax]
   1400351bc:	(bad)  
   1400351bd:	xor    al,BYTE PTR [rdx]
   1400351bf:	push   rax
   1400351c0:	add    DWORD PTR [rsi],eax
   1400351c2:	add    al,BYTE PTR [rax]
   1400351c4:	(bad)  
   1400351c5:	xor    al,BYTE PTR [rdx]
   1400351c7:	push   rax
   1400351c8:	add    DWORD PTR [rsi],eax
   1400351ca:	add    al,BYTE PTR [rax]
   1400351cc:	(bad)  
   1400351cd:	xor    al,BYTE PTR [rdx]
   1400351cf:	push   rax
   1400351d0:	sbb    DWORD PTR [rbx+rax*1],esp
   1400351d3:	add    BYTE PTR [rdx],dl
   1400351d5:	add    DWORD PTR [rdx+0x0],ecx
   1400351d8:	or     esi,DWORD PTR [rax+0x0]
   1400351db:	add    BYTE PTR [rax+0x17],ah
   1400351de:	add    al,BYTE PTR [rax]
   1400351e0:	add    al,BYTE PTR [rax]
   1400351e3:	add    BYTE PTR [rcx],bl
   1400351e5:	sub    al,0x5
   1400351e7:	and    eax,0x10e2313
   1400351ec:	fwait
   1400351ed:	add    DWORD PTR [rdi],eax
   1400351ef:	jo     0x1400351f7
   1400351f1:	push   rax
   1400351f2:	add    BYTE PTR [rax],al
   1400351f4:	in     al,0x17
   1400351f6:	add    al,BYTE PTR [rax]
   1400351f8:	clc    
   1400351f9:	(bad)  
   1400351fa:	add    al,BYTE PTR [rax]
   1400351fc:	ret    0xc
   1400351ff:	add    bh,bh
   140035201:	(bad)  
   140035202:	(bad)  
   140035203:	inc    DWORD PTR [rdx+0x238]
   140035209:	add    BYTE PTR [rax],al
   14003520b:	add    BYTE PTR [rbx-0x7ffffdc8],bl
   140035211:	add    DWORD PTR [rcx],eax
   140035213:	add    bh,bh
   140035215:	(bad)  
   140035216:	(bad)  
   140035217:	call   QWORD PTR [rbx+rax*1]
   14003521a:	add    DWORD PTR [rax],eax
   14003521c:	add    BYTE PTR [rax],al
   14003521e:	add    BYTE PTR [rax],al
   140035220:	xor    al,0x3
   140035222:	add    DWORD PTR [rax],eax
   140035224:	add    DWORD PTR [rax],eax
   140035226:	add    BYTE PTR [rax],al
   140035228:	rex.X add eax,DWORD PTR [rcx]
   14003522b:	add    BYTE PTR [rax],al
   14003522d:	add    BYTE PTR [rax],al
   14003522f:	add    dl,al
   140035231:	add    eax,DWORD PTR [rcx]
   140035233:	add    bh,bh
   140035235:	(bad)  
   140035236:	(bad)  
   140035237:	inc    DWORD PTR [rcx]
   140035239:	(bad)  
   14003523a:	add    al,BYTE PTR [rax]
   14003523c:	(bad)  
   14003523d:	xor    al,BYTE PTR [rdx]
   14003523f:	push   rax
   140035240:	add    DWORD PTR [rsi],eax
   140035242:	add    al,BYTE PTR [rax]
   140035244:	(bad)  
   140035245:	xor    al,BYTE PTR [rdx]
   140035247:	push   rax
   140035248:	add    DWORD PTR [rax],ebx
   14003524a:	add    DWORD PTR [rax],eax
   14003524c:	sbb    BYTE PTR [rdx+0x17110000],al
   140035252:	add    DWORD PTR [rax],eax
   140035254:	(bad)  
   140035255:	(bad)  
   140035256:	add    BYTE PTR [rax],al
   140035258:	in     al,dx
   140035259:	(bad)  
   14003525a:	add    al,BYTE PTR [rax]
   14003525c:	and    bh,cl
   14003525e:	add    al,BYTE PTR [rax]
   140035260:	lock sub DWORD PTR [rcx],eax
   140035263:	add    bh,bh
   140035265:	(bad)  
   140035266:	(bad)  
   140035267:	call   QWORD PTR [rsi]
   140035269:	sub    al,BYTE PTR [rcx]
   14003526b:	add    BYTE PTR [rax],al
   14003526d:	add    BYTE PTR [rax],al
   14003526f:	add    BYTE PTR [rdi+0x2a],al
   140035272:	add    DWORD PTR [rax],eax
   140035274:	(bad)  
   140035275:	(bad)  
   140035276:	(bad)  
   140035277:	call   QWORD PTR [rcx]
   140035279:	(bad)  
   14003527a:	add    DWORD PTR [rax],eax
   14003527c:	(bad)  
   14003527d:	(bad)  
   14003527e:	add    BYTE PTR [rax],al
   140035280:	in     al,dx
   140035281:	(bad)  
   140035282:	add    al,BYTE PTR [rax]
   140035284:	push   rax
   140035285:	iret   
   140035286:	add    al,BYTE PTR [rax]
   140035288:	(bad)  
   140035289:	(bad)  
   14003528a:	(bad)  
   14003528b:	push   QWORD PTR [rax+0x3a]
   14003528e:	add    al,BYTE PTR [rax]
   140035290:	sub    BYTE PTR [rdx],0x1
   140035293:	add    bh,bh
   140035295:	(bad)  
   140035296:	(bad)  
   140035297:	jmp    QWORD PTR [rsi+0x12a]
   14003529d:	add    BYTE PTR [rax],al
   14003529f:	add    bh,dl
   1400352a1:	sub    al,BYTE PTR [rcx]
   1400352a3:	add    bh,bh
   1400352a5:	(bad)  
   1400352a6:	(bad)  
   1400352a7:	call   QWORD PTR [rcx]
   1400352a9:	sbb    al,0x1
   1400352ab:	add    BYTE PTR [rbx],dl
   1400352ad:	movabs ds:0xcf80000216ec0000,al
   1400352b6:	add    al,BYTE PTR [rax]
   1400352b8:	(bad)  
   1400352b9:	(bad)  
   1400352ba:	(bad)  
   1400352bb:	dec    DWORD PTR [rax]
   1400352bd:	cmp    eax,DWORD PTR [rdx]
   1400352bf:	add    BYTE PTR [rax],al
   1400352c1:	add    BYTE PTR [rax],al
   1400352c3:	add    al,dh
   1400352c5:	cmp    al,BYTE PTR [rdx]
   1400352c7:	add    BYTE PTR [rax+0x31],al
   1400352ca:	add    DWORD PTR [rax],eax
   1400352cc:	(bad)  
   1400352cd:	(bad)  
   1400352ce:	(bad)  
   1400352cf:	push   QWORD PTR [rcx+rsi*1+0x1]
   1400352d3:	add    BYTE PTR [rcx],al
   1400352d5:	add    BYTE PTR [rax],al
   1400352d7:	add    BYTE PTR [rbp+0x131],bl
   1400352dd:	add    BYTE PTR [rax],al
   1400352df:	add    BYTE PTR [rcx],bl
   1400352e1:	sbb    al,0x1
   1400352e3:	add    BYTE PTR [rbx],dl
   1400352e5:	movabs ds:0xcfb0000216ec0000,al
   1400352ee:	add    al,BYTE PTR [rax]
	...
   1400352f8:	add    DWORD PTR [rax],eax
   1400352fa:	add    BYTE PTR [rax],al
   1400352fc:	add    DWORD PTR [rax],eax
   1400352fe:	add    BYTE PTR [rax],al
   140035300:	add    al,0x53
   140035302:	add    eax,DWORD PTR [rax]
	...
   140035310:	cmp    BYTE PTR [rbx],0x2
   140035313:	add    BYTE PTR [rax],bh
   140035315:	add    BYTE PTR [rax],al
   140035317:	add    BYTE PTR [rax+0x33],dl
   14003531a:	add    DWORD PTR [rax],eax
   14003531c:	(bad)  
   14003531d:	(bad)  
   14003531e:	(bad)  
   14003531f:	jmp    FWORD PTR [rcx+0x133]
   140035325:	add    BYTE PTR [rax],al
   140035327:	add    BYTE PTR [rax],ah
   140035329:	xor    al,0x1
   14003532b:	add    bh,bh
   14003532d:	(bad)  
   14003532e:	(bad)  
   14003532f:	inc    DWORD PTR [rax+0x23b]
   140035335:	add    BYTE PTR [rax],al
   140035337:	add    BYTE PTR [rbp+0x100023b],cl
   14003533d:	add    BYTE PTR [rax],al
   14003533f:	add    BYTE PTR [rsi+0x23b],dh
   140035345:	add    BYTE PTR [rax],al
   140035347:	add    BYTE PTR [rcx],bl
   140035349:	or     al,BYTE PTR [rdx]
   14003534b:	add    BYTE PTR [rdx],cl
   14003534d:	xor    al,BYTE PTR [rsi]
   14003534f:	push   rax
   140035350:	in     al,dx
   140035351:	(bad)  
   140035352:	add    al,BYTE PTR [rax]
   140035354:	mov    al,0xcf
   140035356:	add    al,BYTE PTR [rax]
   140035358:	add    DWORD PTR [rbx],edx
   14003535a:	add    DWORD PTR [rax],eax
   14003535c:	adc    esp,DWORD PTR [rdx]
   14003535e:	add    BYTE PTR [rax],al
   140035360:	add    DWORD PTR [rcx],ecx
   140035362:	add    DWORD PTR [rax],eax
   140035364:	or     DWORD PTR [rdx+0x0],eax
   140035367:	add    BYTE PTR [rcx],bl
   140035369:	adc    al,BYTE PTR [rcx]
   14003536b:	add    BYTE PTR [rcx],cl
   14003536d:	movabs ds:0xcfe0000216ec0000,al
   140035376:	add    al,BYTE PTR [rax]
	...
   140035380:	add    DWORD PTR [rax],eax
   140035382:	add    BYTE PTR [rax],al
   140035384:	add    DWORD PTR [rax],eax
   140035386:	add    BYTE PTR [rax],al
   140035388:	mov    WORD PTR [rbx+0x3],ss
	...
   140035397:	add    BYTE PTR [rax],dh
   140035399:	cmp    eax,DWORD PTR [rdx]
   14003539b:	add    BYTE PTR [rax],bh
   14003539d:	add    BYTE PTR [rax],al
   14003539f:	add    BYTE PTR [rax+0x32],al
   1400353a2:	add    DWORD PTR [rax],eax
   1400353a4:	(bad)  
   1400353a5:	(bad)  
   1400353a6:	(bad)  
   1400353a7:	push   QWORD PTR [rbx+0x32]
   1400353aa:	add    DWORD PTR [rax],eax
   1400353ac:	add    BYTE PTR [rax],al
   1400353ae:	add    BYTE PTR [rax],al
   1400353b0:	and    eax,0xff000133
   1400353b5:	(bad)  
   1400353b6:	(bad)  
   1400353b7:	push   QWORD PTR [rax]
   1400353b9:	cmp    eax,DWORD PTR [rdx]
   1400353bb:	add    BYTE PTR [rax],al
   1400353bd:	add    BYTE PTR [rax],al
   1400353bf:	add    BYTE PTR [rip+0x100023b],bh        # 0x141035600
   1400353c5:	add    BYTE PTR [rax],al
   1400353c7:	add    BYTE PTR [rsi+0x3b],ah
   1400353ca:	add    al,BYTE PTR [rax]
   1400353cc:	add    BYTE PTR [rax],al
   1400353ce:	add    BYTE PTR [rax],al
   1400353d0:	sbb    DWORD PTR [rdx],ecx
   1400353d2:	add    al,BYTE PTR [rax]
   1400353d4:	or     dh,BYTE PTR [rdx]
   1400353d6:	(bad)  
   1400353d7:	push   rax
   1400353d8:	in     al,dx
   1400353d9:	(bad)  
   1400353da:	add    al,BYTE PTR [rax]
   1400353dc:	loopne 0x1400353ad
   1400353de:	add    al,BYTE PTR [rax]
   1400353e0:	adc    DWORD PTR [rdi],edx
   1400353e2:	add    DWORD PTR [rax],eax
   1400353e4:	(bad)  
   1400353e5:	(bad)  
   1400353e6:	add    BYTE PTR [rax],al
   1400353e8:	in     al,dx
   1400353e9:	(bad)  
   1400353ea:	add    al,BYTE PTR [rax]
   1400353ec:	adc    al,dl
   1400353ee:	add    al,BYTE PTR [rax]
   1400353f0:	movabs al,ds:0x19ffffffff000127
   1400353f9:	adc    al,BYTE PTR [rcx]
   1400353fb:	add    BYTE PTR [rcx],cl
   1400353fd:	movabs ds:0xd040000216ec0000,al
   140035406:	add    al,BYTE PTR [rax]
	...
   140035410:	add    DWORD PTR [rax],eax
   140035412:	add    BYTE PTR [rax],al
   140035414:	add    DWORD PTR [rax],eax
   140035416:	add    BYTE PTR [rax],al
   140035418:	sbb    al,0x54
   14003541a:	add    eax,DWORD PTR [rax]
	...
   140035428:	sar    BYTE PTR [rbx],1
   14003542a:	add    al,BYTE PTR [rax]
   14003542c:	cmp    BYTE PTR [rax],al
   14003542e:	add    BYTE PTR [rax],al
   140035430:	xor    BYTE PTR [rcx+rax*1],dh
   140035433:	add    bh,bh
   140035435:	(bad)  
   140035436:	(bad)  
   140035437:	jmp    QWORD PTR [rbx+0x34]
   14003543a:	add    DWORD PTR [rax],eax
   14003543c:	add    BYTE PTR [rax],al
   14003543e:	add    BYTE PTR [rax],al
   140035440:	adc    eax,0xff000135
   140035445:	(bad)  
   140035446:	(bad)  
   140035447:	call   rax
   140035449:	cmp    eax,DWORD PTR [rdx]
   14003544b:	add    BYTE PTR [rax],al
   14003544d:	add    BYTE PTR [rax],al
   14003544f:	add    ch,bl
   140035451:	cmp    eax,DWORD PTR [rdx]
   140035453:	add    BYTE PTR [rcx],al
   140035455:	add    BYTE PTR [rax],al
   140035457:	add    BYTE PTR [rsi],al
   140035459:	cmp    al,0x2
   14003545b:	add    BYTE PTR [rax],al
   14003545d:	add    BYTE PTR [rax],al
   14003545f:	add    BYTE PTR [rcx],bl
   140035461:	or     al,BYTE PTR [rdx]
   140035463:	add    BYTE PTR [rdx],cl
   140035465:	xor    al,BYTE PTR [rsi]
   140035467:	push   rax
   140035468:	in     al,dx
   140035469:	(bad)  
   14003546a:	add    al,BYTE PTR [rax]
   14003546c:	rex rol BYTE PTR [rdx],1
   14003546f:	add    BYTE PTR [rcx],dl
   140035471:	adc    al,BYTE PTR [rcx]
   140035473:	add    BYTE PTR [rcx],cl
   140035475:	(bad)  
   140035476:	add    BYTE PTR [rax],al
   140035478:	in     al,dx
   140035479:	(bad)  
   14003547a:	add    al,BYTE PTR [rax]
   14003547c:	jo     0x14003544e
   14003547e:	add    al,BYTE PTR [rax]
   140035480:	(bad)  
   140035481:	(bad)  
   140035482:	(bad)  
   140035483:	push   QWORD PTR [rax+0x6000023a]
   140035489:	sub    eax,DWORD PTR [rcx]
   14003548b:	add    bh,bh
   14003548d:	(bad)  
   14003548e:	(bad)  
   14003548f:	call   QWORD PTR [rcx]
   140035491:	sbb    al,0x1
   140035493:	add    BYTE PTR [rbx],dl
   140035495:	(bad)  
   140035496:	add    BYTE PTR [rax],al
   140035498:	in     al,dx
   140035499:	(bad)  
   14003549a:	add    al,BYTE PTR [rax]
   14003549c:	movabs al,ds:0xff000127e00002d0
   1400354a5:	(bad)  
   1400354a6:	(bad)  
   1400354a7:	call   QWORD PTR [rcx]
   1400354a9:	adc    al,BYTE PTR [rcx]
   1400354ab:	add    BYTE PTR [rcx],cl
   1400354ad:	(bad)  
   1400354ae:	add    BYTE PTR [rax],al
   1400354b0:	in     al,dx
   1400354b1:	(bad)  
   1400354b2:	add    al,BYTE PTR [rax]
   1400354b4:	rcl    al,1
   1400354b6:	add    al,BYTE PTR [rax]
   1400354b8:	(bad)  
   1400354b9:	(bad)  
   1400354ba:	(bad)  
   1400354bb:	call   QWORD PTR [rax+0x3a]
   1400354be:	add    al,BYTE PTR [rax]
   1400354c0:	nop
   1400354c1:	sub    eax,DWORD PTR [rcx]
   1400354c3:	add    bh,bh
   1400354c5:	(bad)  
   1400354c6:	(bad)  
   1400354c7:	call   QWORD PTR [rcx]
   1400354c9:	sbb    al,0x1
   1400354cb:	add    BYTE PTR [rbx],dl
   1400354cd:	(bad)  
   1400354ce:	add    BYTE PTR [rax],al
   1400354d0:	in     al,dx
   1400354d1:	(bad)  
   1400354d2:	add    al,BYTE PTR [rax]
   1400354d4:	add    cl,dl
   1400354d6:	add    al,BYTE PTR [rax]
   1400354d8:	(bad)  
   1400354d9:	(bad)  
   1400354da:	(bad)  
   1400354db:	call   QWORD PTR [rax+0x2000023a]
   1400354e1:	(bad)  
   1400354e2:	add    DWORD PTR [rax],eax
   1400354e4:	(bad)  
   1400354e5:	(bad)  
   1400354e6:	(bad)  
   1400354e7:	call   QWORD PTR [rcx]
   1400354e9:	adc    al,BYTE PTR [rcx]
   1400354eb:	add    BYTE PTR [rcx],cl
   1400354ed:	(bad)  
   1400354ee:	add    BYTE PTR [rax],al
   1400354f0:	in     al,dx
   1400354f1:	(bad)  
   1400354f2:	add    al,BYTE PTR [rax]
   1400354f4:	xor    cl,dl
   1400354f6:	add    al,BYTE PTR [rax]
   1400354f8:	adc    BYTE PTR [rbx],ch
   1400354fa:	add    DWORD PTR [rax],eax
   1400354fc:	(bad)  
   1400354fd:	(bad)  
   1400354fe:	(bad)  
   1400354ff:	jmp    QWORD PTR [rdx]
   140035501:	sub    eax,DWORD PTR [rcx]
   140035503:	add    BYTE PTR [rax],al
   140035505:	add    BYTE PTR [rax],al
   140035507:	add    BYTE PTR [rip+0xffffffffff00012b],ch        # 0x13f035638
   14003550d:	(bad)  
   14003550e:	(bad)  
   14003550f:	inc    DWORD PTR [rcx]
   140035511:	or     DWORD PTR [rcx],eax
   140035513:	add    BYTE PTR [rcx],cl
   140035515:	(bad)  
   140035516:	add    BYTE PTR [rax],al
   140035518:	add    DWORD PTR [rsi],edx
   14003551a:	add    al,BYTE PTR [rax]
   14003551c:	(bad)  
   14003551d:	add    DWORD PTR [rbx],edx
   14003551f:	add    BYTE PTR [rcx],al
   140035521:	(bad)  
   140035522:	add    DWORD PTR [rax],eax
   140035524:	(bad)  
   140035525:	(bad)  
   140035526:	add    BYTE PTR [rax],al
   140035528:	add    DWORD PTR [rcx],ecx
   14003552a:	add    DWORD PTR [rax],eax
   14003552c:	or     DWORD PTR [rdx+0x12110000],esp
   140035532:	add    DWORD PTR [rax],eax
   140035534:	or     DWORD PTR [rdx+0x0],esp
   140035537:	add    ah,ch
   140035539:	(bad)  
   14003553a:	add    al,BYTE PTR [rax]
   14003553c:	(bad)  
   14003553d:	rol    DWORD PTR [rdx],1
   14003553f:	add    bh,bh
   140035541:	(bad)  
   140035542:	(bad)  
   140035543:	call   rax
   140035545:	cmp    al,BYTE PTR [rdx]
   140035547:	add    BYTE PTR [rax],dl
   140035549:	sub    DWORD PTR [rcx],eax
   14003554b:	add    bh,bh
   14003554d:	(bad)  
   14003554e:	(bad)  
   14003554f:	inc    DWORD PTR [rcx]
   140035551:	(bad)  
   140035552:	add    DWORD PTR [rax],eax
   140035554:	(bad)  
   140035555:	loop   0x140035557
   140035557:	add    BYTE PTR [rcx],dl
   140035559:	adc    al,BYTE PTR [rcx]
   14003555b:	add    BYTE PTR [rcx],cl
   14003555d:	(bad)  
   14003555e:	add    BYTE PTR [rax],al
   140035560:	in     al,dx
   140035561:	(bad)  
   140035562:	add    al,BYTE PTR [rax]
   140035564:	nop
   140035565:	rol    DWORD PTR [rdx],1
   140035567:	add    al,al
   140035569:	sub    eax,DWORD PTR [rcx]
   14003556b:	add    bh,bh
   14003556d:	(bad)  
   14003556e:	(bad)  
   14003556f:	call   QWORD PTR [rcx]
   140035571:	adc    al,BYTE PTR [rcx]
   140035573:	add    BYTE PTR [rcx],cl
   140035575:	(bad)  
   140035576:	add    BYTE PTR [rax],al
   140035578:	in     al,dx
   140035579:	(bad)  
   14003557a:	add    al,BYTE PTR [rax]
   14003557c:	rcl    cl,0x2
   14003557f:	add    bh,bh
   140035581:	(bad)  
   140035582:	(bad)  
   140035583:	jmp    rax
   140035585:	cmp    BYTE PTR [rdx],al
   140035587:	add    al,dh
   140035589:	sub    eax,DWORD PTR [rcx]
   14003558b:	add    bh,bh
   14003558d:	(bad)  
   14003558e:	(bad)  
   14003558f:	inc    DWORD PTR [rcx]
   140035591:	adc    eax,DWORD PTR [rcx]
   140035593:	add    BYTE PTR [rbx],dl
   140035595:	rex.X add BYTE PTR [rax],al
   140035598:	sbb    DWORD PTR [rcx],esp
   14003559a:	add    DWORD PTR [rax],eax
   14003559c:	sbb    BYTE PTR [rdx+0x16ec0000],ah
   1400355a2:	add    al,BYTE PTR [rax]
   1400355a4:	lock rol DWORD PTR [rdx],1
	...
   1400355af:	add    BYTE PTR [rcx],al
   1400355b1:	add    BYTE PTR [rax],al
   1400355b3:	add    BYTE PTR [rcx],al
   1400355b5:	add    BYTE PTR [rax],al
   1400355b7:	add    BYTE PTR [rbp+rdx*2+0x3],bh
	...
   1400355c6:	add    BYTE PTR [rax],al
   1400355c8:	rex cmp DWORD PTR [rdx],eax
   1400355cb:	add    BYTE PTR [rax],bh
   1400355cd:	add    BYTE PTR [rax],al
   1400355cf:	add    BYTE PTR [rax],dl
   1400355d1:	or     BYTE PTR [rcx],al
   1400355d3:	add    bh,bh
   1400355d5:	(bad)  
   1400355d6:	(bad)  
   1400355d7:	dec    DWORD PTR [rdx+0x8]
   1400355da:	add    DWORD PTR [rax],eax
   1400355dc:	add    BYTE PTR [rax],al
   1400355de:	add    BYTE PTR [rax],al
   1400355e0:	cwde   
   1400355e1:	or     BYTE PTR [rcx],al
   1400355e3:	add    bh,bh
   1400355e5:	(bad)  
   1400355e6:	(bad)  
   1400355e7:	inc    DWORD PTR [rax+0x39]
   1400355ea:	add    al,BYTE PTR [rax]
   1400355ec:	add    BYTE PTR [rax],al
   1400355ee:	add    BYTE PTR [rax],al
   1400355f0:	cmp    QWORD PTR [r10],r8
   1400355f3:	add    BYTE PTR [rcx],al
   1400355f5:	add    BYTE PTR [rax],al
   1400355f7:	add    BYTE PTR [rsi+0x39],dh
   1400355fa:	add    al,BYTE PTR [rax]
   1400355fc:	add    BYTE PTR [rax],al
   1400355fe:	add    BYTE PTR [rax],al
   140035600:	sbb    DWORD PTR [rdx],ecx
   140035602:	add    al,BYTE PTR [rax]
   140035604:	or     dh,BYTE PTR [rdx]
   140035606:	(bad)  
   140035607:	push   rax
   140035608:	in     al,dx
   140035609:	(bad)  
   14003560a:	add    al,BYTE PTR [rax]
   14003560c:	lock rol DWORD PTR [rdx],1
   14003560f:	add    BYTE PTR [rcx],bl
   140035611:	and    DWORD PTR [rcx],eax
   140035613:	add    BYTE PTR [rax],bl
   140035615:	loop   0x140035617
   140035617:	add    ah,ch
   140035619:	(bad)  
   14003561a:	add    al,BYTE PTR [rax]
   14003561c:	and    dl,dl
   14003561e:	add    al,BYTE PTR [rax]
	...
   140035628:	add    DWORD PTR [rax],eax
   14003562a:	add    BYTE PTR [rax],al
   14003562c:	add    DWORD PTR [rax],eax
   14003562e:	add    BYTE PTR [rax],al
   140035630:	xor    al,0x56
   140035632:	add    eax,DWORD PTR [rax]
	...
   140035640:	add    BYTE PTR [rcx],bh
   140035642:	add    al,BYTE PTR [rax]
   140035644:	rex.W add BYTE PTR [rax],al
   140035647:	add    BYTE PTR [rax],ah
   140035649:	(bad)  
   14003564a:	add    DWORD PTR [rax],eax
   14003564c:	(bad)  
   14003564d:	(bad)  
   14003564e:	(bad)  
   14003564f:	jmp    FWORD PTR [rbp+0x7]
   140035652:	add    DWORD PTR [rax],eax
   140035654:	add    BYTE PTR [rax],al
   140035656:	add    BYTE PTR [rax],al
   140035658:	test   DWORD PTR [rdi],0xffff0001
   14003565e:	(bad)  
   14003565f:	inc    DWORD PTR [rax]
   140035661:	cmp    DWORD PTR [rdx],eax
   140035663:	add    BYTE PTR [rax],al
   140035665:	add    BYTE PTR [rax],al
   140035667:	add    BYTE PTR [rip+0x1000239],cl        # 0x1410358a6
   14003566d:	add    BYTE PTR [rax],al
   14003566f:	add    BYTE PTR [rdi],ah
   140035671:	cmp    DWORD PTR [rdx],eax
   140035673:	add    BYTE PTR [rax],al
   140035675:	add    BYTE PTR [rax],al
   140035677:	add    BYTE PTR [rcx],bl
   140035679:	or     al,BYTE PTR [rdx]
   14003567b:	add    BYTE PTR [rdx],cl
   14003567d:	push   rdx
   14003567e:	(bad)  
   14003567f:	push   rax
   140035680:	in     al,dx
   140035681:	(bad)  
   140035682:	add    al,BYTE PTR [rax]
   140035684:	and    dl,dl
   140035686:	add    al,BYTE PTR [rax]
   140035688:	sbb    DWORD PTR [rdi],esp
   14003568a:	add    al,BYTE PTR [rax]
   14003568c:	sbb    eax,DWORD PTR [rcx]
   14003568e:	cmp    eax,DWORD PTR [rax]
   140035690:	in     al,dx
   140035691:	(bad)  
   140035692:	add    al,BYTE PTR [rax]
   140035694:	push   rax
   140035695:	rol    BYTE PTR [rdx],cl
	...
   14003569f:	add    BYTE PTR [rcx],al
   1400356a1:	add    BYTE PTR [rax],al
   1400356a3:	add    BYTE PTR [rcx],al
   1400356a5:	add    BYTE PTR [rax],al
   1400356a7:	add    BYTE PTR [rsi+rdx*2+0x3],ch
	...
   1400356b6:	add    BYTE PTR [rax],al
   1400356b8:	nop
   1400356b9:	cmp    DWORD PTR [rdx],eax
   1400356bb:	add    BYTE PTR [rax+0x0],cl
   1400356be:	add    BYTE PTR [rax],al
   1400356c0:	movabs al,ds:0xd6ffffffff00010d
   1400356c9:	or     eax,0x1
   1400356ce:	add    BYTE PTR [rax],al
   1400356d0:	retf   0x11a
   1400356d3:	add    bh,bh
   1400356d5:	(bad)  
   1400356d6:	(bad)  
   1400356d7:	call   FWORD PTR [rdx]
   1400356d9:	sbb    eax,DWORD PTR [rcx]
   1400356db:	add    BYTE PTR [rax],al
   1400356dd:	add    BYTE PTR [rax],al
   1400356df:	add    BYTE PTR [rbp+0x1000239],bl
   1400356e5:	add    BYTE PTR [rax],al
   1400356e7:	add    BYTE PTR [rdx+0x239],bh
   1400356ed:	add    BYTE PTR [rax],al
   1400356ef:	add    BYTE PTR [rcx],bl
   1400356f1:	or     al,BYTE PTR [rdx]
   1400356f3:	add    BYTE PTR [rdx],cl
   1400356f5:	push   rdx
   1400356f6:	(bad)  
   1400356f7:	push   rax
   1400356f8:	in     al,dx
   1400356f9:	(bad)  
   1400356fa:	add    al,BYTE PTR [rax]
   1400356fc:	push   rax
   1400356fd:	rol    BYTE PTR [rdx],cl
   1400356ff:	add    BYTE PTR [rcx],al
   140035701:	sbb    BYTE PTR [rcx],al
   140035703:	add    BYTE PTR [rax],bl
   140035705:	(bad)  
   140035706:	add    BYTE PTR [rax],al
   140035708:	sbb    DWORD PTR [rdi],esp
   14003570a:	add    al,BYTE PTR [rax]
   14003570c:	sbb    eax,DWORD PTR [rcx]
   14003570e:	sbb    DWORD PTR [rax],eax
   140035710:	in     al,dx
   140035711:	(bad)  
   140035712:	add    al,BYTE PTR [rax]
   140035714:	adc    dl,0x2
	...
   14003571f:	add    BYTE PTR [rcx],al
   140035721:	add    BYTE PTR [rax],al
   140035723:	add    BYTE PTR [rcx],al
   140035725:	add    BYTE PTR [rax],al
   140035727:	add    BYTE PTR [rdi+rdx*2],ch
   14003572a:	add    eax,DWORD PTR [rax]
	...
   140035738:	sar    BYTE PTR [rcx],1
   14003573a:	add    al,BYTE PTR [rax]
   14003573c:	rex.W add BYTE PTR [rax],al
   14003573f:	add    BYTE PTR [rax],dh
   140035741:	sbb    eax,DWORD PTR [rcx]
   140035743:	add    bh,bh
   140035745:	(bad)  
   140035746:	(bad)  
   140035747:	call   QWORD PTR [rdi+0x1b]
   14003574a:	add    DWORD PTR [rax],eax
   14003574c:	add    BYTE PTR [rax],al
   14003574e:	add    BYTE PTR [rax],al
   140035750:	fnstsw WORD PTR [rcx]
   140035752:	add    al,BYTE PTR [rax]
   140035754:	add    DWORD PTR [rax],eax
   140035756:	add    BYTE PTR [rax],al
   140035758:	cli    
   140035759:	cmp    DWORD PTR [rdx],eax
   14003575b:	add    BYTE PTR [rax],al
   14003575d:	add    BYTE PTR [rax],al
   14003575f:	add    BYTE PTR [rcx],bl
   140035761:	or     al,BYTE PTR [rdx]
   140035763:	add    BYTE PTR [rdx],cl
   140035765:	push   rdx
   140035766:	(bad)  
   140035767:	push   rax
   140035768:	in     al,dx
   140035769:	(bad)  
   14003576a:	add    al,BYTE PTR [rax]
   14003576c:	adc    dl,0x2
   14003576f:	add    BYTE PTR [rcx],dl
   140035771:	sbb    al,0x1
   140035773:	add    BYTE PTR [rbx],dl
   140035775:	(bad)  
   140035776:	add    BYTE PTR [rax],al
   140035778:	in     al,dx
   140035779:	(bad)  
   14003577a:	add    al,BYTE PTR [rax]
   14003577c:	mov    al,0xd2
   14003577e:	add    al,BYTE PTR [rax]
   140035780:	(bad)  
   140035781:	and    BYTE PTR [rcx],al
   140035783:	add    bh,bh
   140035785:	(bad)  
   140035786:	(bad)  
   140035787:	call   QWORD PTR [rax+0x120]
   14003578d:	add    BYTE PTR [rax],al
   14003578f:	add    ah,cl
   140035791:	and    BYTE PTR [rcx],al
   140035793:	add    bh,bh
   140035795:	(bad)  
   140035796:	(bad)  
   140035797:	call   QWORD PTR [rcx]
   140035799:	sbb    al,0x1
   14003579b:	add    BYTE PTR [rbx],dl
   14003579d:	(bad)  
   14003579e:	add    BYTE PTR [rax],al
   1400357a0:	in     al,dx
   1400357a1:	(bad)  
   1400357a2:	add    al,BYTE PTR [rax]
   1400357a4:	loopne 0x140035778
   1400357a6:	add    al,BYTE PTR [rax]
   1400357a8:	and    BYTE PTR [rbx],ah
   1400357aa:	add    DWORD PTR [rax],eax
   1400357ac:	(bad)  
   1400357ad:	(bad)  
   1400357ae:	(bad)  
   1400357af:	call   QWORD PTR [rax+0x23]
   1400357b2:	add    DWORD PTR [rax],eax
   1400357b4:	add    BYTE PTR [rax],al
   1400357b6:	add    BYTE PTR [rax],al
   1400357b8:	mov    DWORD PTR [rbx],esp
   1400357ba:	add    DWORD PTR [rax],eax
   1400357bc:	(bad)  
   1400357bd:	(bad)  
   1400357be:	(bad)  
   1400357bf:	call   QWORD PTR [rcx]
   1400357c1:	and    DWORD PTR [rcx],eax
   1400357c3:	add    BYTE PTR [rax],bl
   1400357c5:	loop   0x1400357c7
   1400357c7:	add    ah,ch
   1400357c9:	(bad)  
   1400357ca:	add    al,BYTE PTR [rax]
   1400357cc:	adc    bl,dl
   1400357ce:	add    al,BYTE PTR [rax]
   1400357d0:	(bad)  
   1400357d1:	(bad)  
   1400357d2:	(bad)  
   1400357d3:	call   QWORD PTR [rax]
   1400357d5:	cmp    al,BYTE PTR [rdx]
   1400357d7:	add    BYTE PTR [rax-0xfffedf],dl
   1400357dd:	(bad)  
   1400357de:	(bad)  
   1400357df:	dec    eax
   1400357e1:	and    DWORD PTR [rcx],eax
   1400357e3:	add    BYTE PTR [rax],al
   1400357e5:	add    BYTE PTR [rax],al
   1400357e7:	add    BYTE PTR [rdx+0x22],ch
   1400357ea:	add    DWORD PTR [rax],eax
   1400357ec:	(bad)  
   1400357ed:	(bad)  
   1400357ee:	(bad)  
   1400357ef:	call   QWORD PTR [rcx]
   1400357f1:	sbb    al,0x1
   1400357f3:	add    BYTE PTR [rbx],dl
   1400357f5:	(bad)  
   1400357f6:	add    BYTE PTR [rax],al
   1400357f8:	in     al,dx
   1400357f9:	(bad)  
   1400357fa:	add    al,BYTE PTR [rax]
   1400357fc:	rol    DWORD PTR [rdx],cl
   1400357ff:	add    bh,bh
   140035801:	(bad)  
   140035802:	(bad)  
   140035803:	push   QWORD PTR [rax]
   140035805:	cmp    al,BYTE PTR [rdx]
   140035807:	add    BYTE PTR [rax+0x1f],ah
   14003580a:	add    DWORD PTR [rax],eax
   14003580c:	(bad)  
   14003580d:	(bad)  
   14003580e:	(bad)  
   14003580f:	call   QWORD PTR [rax+0x11f]
   140035815:	add    BYTE PTR [rax],al
   140035817:	add    ah,cl
   140035819:	(bad)  
   14003581a:	add    DWORD PTR [rax],eax
   14003581c:	(bad)  
   14003581d:	(bad)  
   14003581e:	(bad)  
   14003581f:	call   QWORD PTR [rcx]
   140035821:	and    DWORD PTR [rdx],eax
   140035823:	add    BYTE PTR [rax],bl
   140035825:	jb     0x14003583b
   140035827:	jo     0x140035815
   140035829:	(bad)  
   14003582a:	add    al,BYTE PTR [rax]
   14003582c:	jo     0x140035801
   14003582e:	add    al,BYTE PTR [rax]
   140035830:	(bad)  
   140035831:	(bad)  
   140035832:	(bad)  
   140035833:	inc    eax
   140035835:	cmp    BYTE PTR [rdx],al
   140035837:	add    BYTE PTR [rax-0xfffefc],ah
   14003583d:	(bad)  
   14003583e:	(bad)  
   14003583f:	call   QWORD PTR [rcx]
   140035841:	and    DWORD PTR [rcx],eax
   140035843:	add    BYTE PTR [rax],bl
   140035845:	(bad)  
   140035846:	add    BYTE PTR [rax],al
   140035848:	in     al,dx
   140035849:	(bad)  
   14003584a:	add    al,BYTE PTR [rax]
   14003584c:	movabs al,ds:0xff000106000002d3
   140035855:	(bad)  
   140035856:	(bad)  
   140035857:	call   FWORD PTR [rcx]
   140035859:	sub    BYTE PTR [rdx],al
   14003585b:	add    BYTE PTR [rsi],dl
   14003585d:	add    DWORD PTR [rbx],edx
   14003585f:	add    BYTE PTR [rax+0x17],ah
   140035862:	add    al,BYTE PTR [rax]
   140035864:	add    BYTE PTR [rax],0x0
   140035867:	add    BYTE PTR [rcx],bl
   140035869:	sub    al,BYTE PTR [rdx]
   14003586b:	add    BYTE PTR [rbx],bl
   14003586d:	add    DWORD PTR [rcx],edx
   14003586f:	add    BYTE PTR [rax+0x17],ah
   140035872:	add    al,BYTE PTR [rax]
   140035874:	js     0x140035876
   140035876:	add    BYTE PTR [rax],al
   140035878:	add    DWORD PTR [rsi],eax
   14003587a:	add    al,BYTE PTR [rax]
   14003587c:	(bad)  
   14003587d:	adc    al,BYTE PTR [rdx]
   14003587f:	jo     0x140035882
   140035881:	or     DWORD PTR [rcx],eax
   140035883:	add    BYTE PTR [rcx],cl
   140035885:	(bad)  
   140035886:	add    BYTE PTR [rax],al
   140035888:	add    DWORD PTR [rcx],ecx
   14003588a:	add    DWORD PTR [rax],eax
   14003588c:	or     DWORD PTR [rdx+0x0],esp
   14003588f:	add    BYTE PTR [rcx],al
   140035891:	or     DWORD PTR [rcx],eax
   140035893:	add    BYTE PTR [rcx],cl
   140035895:	(bad)  
   140035896:	add    BYTE PTR [rax],al
   140035898:	add    DWORD PTR [rcx],ecx
   14003589a:	add    DWORD PTR [rax],eax
   14003589c:	or     DWORD PTR [rdx+0x0],esp
   14003589f:	add    BYTE PTR [rcx],al
   1400358a1:	adc    eax,DWORD PTR [rcx]
   1400358a3:	add    BYTE PTR [rbx],dl
   1400358a5:	(bad)  
   1400358a6:	add    BYTE PTR [rax],al
   1400358a8:	add    DWORD PTR [rbx],edx
   1400358aa:	add    DWORD PTR [rax],eax
   1400358ac:	adc    esp,DWORD PTR [rdx+0x0]
   1400358af:	add    BYTE PTR [rcx],al
   1400358b1:	adc    eax,DWORD PTR [rcx]
   1400358b3:	add    BYTE PTR [rbx],dl
   1400358b5:	(bad)  
   1400358b6:	add    BYTE PTR [rax],al
   1400358b8:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x1821058bf
   1400358be:	add    BYTE PTR [rax],al
   1400358c0:	add    DWORD PTR [rbx],edx
   1400358c2:	add    DWORD PTR [rax],eax
   1400358c4:	adc    eax,DWORD PTR [rdx+0x1d190000]
   1400358ca:	add    DWORD PTR [rax],eax
   1400358cc:	(bad)  
   1400358cd:	(bad)  
   1400358ce:	add    BYTE PTR [rax],al
   1400358d0:	(bad)  
   1400358d1:	(bad)  
   1400358d2:	add    al,BYTE PTR [rax]
   1400358d4:	cmp    BYTE PTR [rax],al
   1400358d6:	add    BYTE PTR [rax],al
   1400358d8:	sbb    DWORD PTR [rax],esp
   1400358da:	add    al,BYTE PTR [rax]
   1400358dc:	adc    DWORD PTR [rcx],eax
   1400358de:	adc    DWORD PTR [rax],eax
   1400358e0:	(bad)  
   1400358e1:	(bad)  
   1400358e2:	add    al,BYTE PTR [rax]
   1400358e4:	jo     0x1400358e6
   1400358e6:	add    BYTE PTR [rax],al
   1400358e8:	add    DWORD PTR [rbx],edx
   1400358ea:	add    DWORD PTR [rax],eax
   1400358ec:	adc    esp,DWORD PTR [rdx]
   1400358ee:	add    BYTE PTR [rax],al
   1400358f0:	add    DWORD PTR [rbx],edx
   1400358f2:	add    DWORD PTR [rax],eax
   1400358f4:	adc    esp,DWORD PTR [rdx]
   1400358f6:	add    BYTE PTR [rax],al
   1400358f8:	add    DWORD PTR [rbx],edx
   1400358fa:	add    DWORD PTR [rax],eax
   1400358fc:	adc    esp,DWORD PTR [rdx]
   1400358fe:	add    BYTE PTR [rax],al
   140035900:	add    DWORD PTR [rdx],edx
   140035902:	add    DWORD PTR [rax],eax
   140035904:	adc    ah,BYTE PTR [rdx]
   140035906:	add    BYTE PTR [rax],al
   140035908:	adc    DWORD PTR [rdx],edx
   14003590a:	add    DWORD PTR [rax],eax
   14003590c:	or     DWORD PTR [rdx+0x0],esp
   14003590f:	add    ah,ch
   140035911:	(bad)  
   140035912:	add    al,BYTE PTR [rax]
   140035914:	mov    al,0xeb
   140035916:	add    al,BYTE PTR [rax]
   140035918:	(bad)  
   140035919:	(bad)  
   14003591a:	(bad)  
   14003591b:	push   QWORD PTR [rax+0x3c]
   14003591e:	add    al,BYTE PTR [rax]
   140035920:	mov    al,0x75
   140035922:	add    DWORD PTR [rax],eax
   140035924:	(bad)  
   140035925:	(bad)  
   140035926:	(bad)  
   140035927:	call   QWORD PTR [rcx]
   140035929:	and    BYTE PTR [rcx],al
   14003592b:	add    BYTE PTR [rdi],dl
   14003592d:	(bad)  
   14003592e:	add    BYTE PTR [rax],al
   140035930:	in     al,dx
   140035931:	(bad)  
   140035932:	add    al,BYTE PTR [rax]
   140035934:	fsubr  st,st(3)
   140035936:	add    al,BYTE PTR [rax]
   140035938:	lock je 0x14003593c
   14003593b:	add    bh,bh
   14003593d:	(bad)  
   14003593e:	(bad)  
   14003593f:	call   FWORD PTR [rbx]
   140035941:	jne    0x140035944
   140035943:	add    BYTE PTR [rax],al
   140035945:	add    BYTE PTR [rax],al
   140035947:	add    BYTE PTR [rip+0x1000175],bh        # 0x141035ac2
   14003594d:	add    BYTE PTR [rax],al
   14003594f:	add    BYTE PTR [rbp+0x75],ch
   140035952:	add    DWORD PTR [rax],eax
   140035954:	(bad)  
   140035955:	(bad)  
   140035956:	(bad)  
   140035957:	call   QWORD PTR [rcx]
   140035959:	adc    al,BYTE PTR [rcx]
   14003595b:	add    BYTE PTR [rcx],cl
   14003595d:	(bad)  
   14003595e:	add    BYTE PTR [rax],al
   140035960:	in     al,dx
   140035961:	(bad)  
   140035962:	add    al,BYTE PTR [rax]
   140035964:	add    ah,ch
   140035966:	add    al,BYTE PTR [rax]
   140035968:	(bad)  
   140035969:	(bad)  
   14003596a:	(bad)  
   14003596b:	call   QWORD PTR [rax+0x23c]
   140035971:	add    BYTE PTR [rax],al
   140035973:	add    BYTE PTR [rax-0x1ffffdc4],ch
   140035979:	jne    0x14003597c
   14003597b:	add    bh,bh
   14003597d:	(bad)  
   14003597e:	(bad)  
   14003597f:	inc    DWORD PTR [rcx]
   140035981:	jbe    0x140035984
   140035983:	add    BYTE PTR [rax],al
   140035985:	add    BYTE PTR [rax],al
   140035987:	add    BYTE PTR [rsi+rsi*2],dl
   14003598a:	add    DWORD PTR [rax],eax
   14003598c:	(bad)  
   14003598d:	(bad)  
   14003598e:	(bad)  
   14003598f:	inc    DWORD PTR [rcx]
   140035991:	or     eax,0x820d0001
   140035996:	add    BYTE PTR [rax],al
   140035998:	add    DWORD PTR [rcx+rax*1],eax
   14003599b:	add    BYTE PTR [rdx+rax*4],al
   14003599e:	add    BYTE PTR [rax],al
   1400359a0:	adc    DWORD PTR [rip+0xffffffff82040001],ecx        # 0xc20759a7
   1400359a6:	add    BYTE PTR [rax],al
   1400359a8:	in     al,dx
   1400359a9:	(bad)  
   1400359aa:	add    al,BYTE PTR [rax]
   1400359ac:	(bad)  
   1400359ad:	jmp    0x1400359b1
   1400359af:	add    bh,bh
   1400359b1:	(bad)  
   1400359b2:	(bad)  
   1400359b3:	jmp    QWORD PTR [rax]
   1400359b5:	cmp    al,0x2
   1400359b7:	add    BYTE PTR [rax+0x73],dh
   1400359ba:	add    DWORD PTR [rax],eax
   1400359bc:	(bad)  
   1400359bd:	(bad)  
   1400359be:	(bad)  
   1400359bf:	call   QWORD PTR [rsi+0x173]
   1400359c5:	add    BYTE PTR [rax],al
   1400359c7:	add    dl,al
   1400359c9:	jae    0x1400359cc
   1400359cb:	add    bh,bh
   1400359cd:	(bad)  
   1400359ce:	(bad)  
   1400359cf:	inc    DWORD PTR [rcx]
   1400359d1:	(bad)  
   1400359d2:	add    al,BYTE PTR [rax]
   1400359d4:	(bad)  
   1400359d5:	xor    al,BYTE PTR [rdx]
   1400359d7:	push   rax
   1400359d8:	sbb    DWORD PTR [rax],ebp
   1400359da:	add    eax,DWORD PTR [rax]
   1400359dc:	or     eax,0x6004e01
   1400359e1:	jo     0x1400359e3
   1400359e3:	add    ah,ah
   1400359e5:	(bad)  
   1400359e6:	add    al,BYTE PTR [rax]
   1400359e8:	mov    bl,ch
   1400359ea:	add    al,BYTE PTR [rax]
   1400359ec:	(bad)  
   1400359ee:	add    BYTE PTR [rax],al
   1400359f0:	(bad)  
   1400359f1:	(bad)  
   1400359f2:	(bad)  
   1400359f3:	(bad)  
   1400359f4:	cmp    BYTE PTR [rdx+rax*1],bh
   1400359f7:	add    al,dh
   1400359f9:	jae    0x1400359fc
   1400359fb:	add    bh,bh
   1400359fd:	(bad)  
   1400359fe:	(bad)  
   1400359ff:	jmp    FWORD PTR [rsp+rsi*2+0x1]
   140035a03:	add    BYTE PTR [rax],al
   140035a05:	add    BYTE PTR [rax],al
   140035a07:	add    BYTE PTR [rdi-0xfffe8c],bh
   140035a0d:	(bad)  
   140035a0e:	(bad)  
   140035a0f:	inc    DWORD PTR [rcx]
   140035a11:	(bad)  
   140035a12:	add    al,BYTE PTR [rax]
   140035a14:	(bad)  
   140035a15:	xor    al,BYTE PTR [rdx]
   140035a17:	push   rax
   140035a18:	adc    DWORD PTR [rdx],edx
   140035a1a:	add    DWORD PTR [rax],eax
   140035a1c:	or     DWORD PTR [rdx+0x0],esp
   140035a1f:	add    ah,ch
   140035a21:	(bad)  
   140035a22:	add    al,BYTE PTR [rax]
   140035a24:	sub    ah,ch
   140035a26:	add    al,BYTE PTR [rax]
   140035a28:	(bad)  
   140035a29:	(bad)  
   140035a2a:	(bad)  
   140035a2b:	call   QWORD PTR [rax+0x3c]
   140035a2e:	add    al,BYTE PTR [rax]
   140035a30:	xor    BYTE PTR [rbp+0x1],0x0
   140035a34:	(bad)  
   140035a35:	(bad)  
   140035a36:	(bad)  
   140035a37:	call   QWORD PTR [rcx]
   140035a39:	adc    al,BYTE PTR [rcx]
   140035a3b:	add    BYTE PTR [rcx],cl
   140035a3d:	(bad)  
   140035a3e:	add    BYTE PTR [rax],al
   140035a40:	in     al,dx
   140035a41:	(bad)  
   140035a42:	add    al,BYTE PTR [rax]
   140035a44:	push   rax
   140035a45:	in     al,dx
   140035a46:	add    al,BYTE PTR [rax]
   140035a48:	rex jbe 0x140035a4c
   140035a4b:	add    bh,bh
   140035a4d:	(bad)  
   140035a4e:	(bad)  
   140035a4f:	call   QWORD PTR [rcx]
   140035a51:	adc    al,BYTE PTR [rcx]
   140035a53:	add    BYTE PTR [rcx],cl
   140035a55:	(bad)  
   140035a56:	add    BYTE PTR [rax],al
   140035a58:	in     al,dx
   140035a59:	(bad)  
   140035a5a:	add    al,BYTE PTR [rax]
   140035a5c:	shr    ah,0x2
   140035a5f:	add    BYTE PTR [rax-0xfffe81],dh
   140035a65:	(bad)  
   140035a66:	(bad)  
   140035a67:	inc    edx
   140035a69:	jg     0x140035a6c
   140035a6b:	add    BYTE PTR [rax],al
   140035a6d:	add    BYTE PTR [rax],al
   140035a6f:	add    ch,dl
   140035a71:	jg     0x140035a74
   140035a73:	add    bh,bh
   140035a75:	(bad)  
   140035a76:	(bad)  
   140035a77:	call   QWORD PTR [rcx]
   140035a79:	sbb    DWORD PTR [rbx],eax
   140035a7b:	add    BYTE PTR [rax],dl
   140035a7d:	(bad)  
   140035a7e:	or     al,0x70
   140035a80:	or     esp,DWORD PTR [rax+0x0]
   140035a83:	add    ah,ch
   140035a85:	(bad)  
   140035a86:	add    al,BYTE PTR [rax]
   140035a88:	call   0x13f035d79
   140035a8d:	(bad)  
   140035a8e:	(bad)  
   140035a8f:	call   QWORD PTR [rax]
   140035a91:	add    al,BYTE PTR ds:[rax]
   140035a94:	add    BYTE PTR [rax],al
   140035a96:	add    BYTE PTR [rax],al
   140035a98:	sub    DWORD PTR [rsi],edi
   140035a9a:	add    al,BYTE PTR [rax]
   140035a9c:	sar    BYTE PTR [rsi+0x1],1
   140035a9f:	add    bh,bh
   140035aa1:	(bad)  
   140035aa2:	(bad)  
   140035aa3:	(bad)  
   140035aa4:	std    
   140035aa5:	jle    0x140035aa8
   140035aa7:	add    BYTE PTR [rax],al
   140035aa9:	add    BYTE PTR [rax],al
   140035aab:	add    BYTE PTR [rcx],bl
   140035aad:	jg     0x140035ab0
   140035aaf:	add    BYTE PTR [rcx],al
   140035ab1:	add    BYTE PTR [rax],al
   140035ab3:	add    BYTE PTR [rdi+rdi*2+0x1],al
   140035ab7:	add    bh,bh
   140035ab9:	(bad)  
   140035aba:	(bad)  
   140035abb:	call   FWORD PTR [rcx]
   140035abd:	sbb    al,0x1
   140035abf:	add    BYTE PTR [rbx],dl
   140035ac1:	movabs ds:0xed10000216ec0000,al
   140035aca:	add    al,BYTE PTR [rax]
   140035acc:	(bad)  
   140035acd:	(bad)  
   140035ace:	(bad)  
   140035acf:	inc    DWORD PTR [rax]
   140035ad1:	add    BYTE PTR [rax],al
   140035ad3:	add    bh,bh
   140035ad5:	(bad)  
   140035ad6:	(bad)  
   140035ad7:	inc    DWORD PTR [rax]
	...
   140035ae1:	add    BYTE PTR [rax],al
   140035ae3:	add    BYTE PTR [rcx],al
   140035ae5:	add    BYTE PTR [rax],al
   140035ae7:	add    BYTE PTR [rcx],al
   140035ae9:	add    BYTE PTR [rax],al
   140035aeb:	add    al,dh
   140035aed:	pop    rdx
   140035aee:	add    eax,DWORD PTR [rax]
	...
   140035afc:	push   rax
   140035afd:	add    al,BYTE PTR ds:[rax]
   140035b00:	cmp    BYTE PTR [rax],al
   140035b02:	add    BYTE PTR [rax],al
   140035b04:	push   rax
   140035b05:	add    BYTE PTR [rcx],0x0
   140035b08:	(bad)  
   140035b09:	(bad)  
   140035b0a:	(bad)  
   140035b0b:	jmp    FWORD PTR [rcx+0x180]
   140035b11:	add    BYTE PTR [rax],al
   140035b13:	add    BYTE PTR [rax],ah
   140035b15:	add    DWORD PTR [rcx],0xffffff00
   140035b1b:	call   QWORD PTR [rax+0x3e]
   140035b1e:	add    al,BYTE PTR [rax]
   140035b20:	add    BYTE PTR [rax],al
   140035b22:	add    BYTE PTR [rax],al
   140035b24:	pop    rbp
   140035b25:	add    al,BYTE PTR ds:[rax]
   140035b28:	add    DWORD PTR [rax],eax
   140035b2a:	add    BYTE PTR [rax],al
   140035b2c:	xchg   BYTE PTR [rsi],bh
   140035b2e:	add    al,BYTE PTR [rax]
   140035b30:	add    BYTE PTR [rax],al
   140035b32:	add    BYTE PTR [rax],al
   140035b34:	sbb    DWORD PTR [rdx],ecx
   140035b36:	add    al,BYTE PTR [rax]
   140035b38:	or     dh,BYTE PTR [rdx]
   140035b3a:	(bad)  
   140035b3b:	push   rax
   140035b3c:	in     al,dx
   140035b3d:	(bad)  
   140035b3e:	add    al,BYTE PTR [rax]
   140035b40:	adc    ch,ch
   140035b42:	add    al,BYTE PTR [rax]
   140035b44:	adc    DWORD PTR [rdi],edx
   140035b46:	add    DWORD PTR [rax],eax
   140035b48:	(bad)  
   140035b49:	(bad)  
   140035b4a:	add    BYTE PTR [rax],al
   140035b4c:	in     al,dx
   140035b4d:	(bad)  
   140035b4e:	add    al,BYTE PTR [rax]
   140035b50:	cmp    ch,ch
   140035b52:	add    al,BYTE PTR [rax]
   140035b54:	rex jle 0x140035b58
   140035b57:	add    bh,bh
   140035b59:	(bad)  
   140035b5a:	(bad)  
   140035b5b:	call   QWORD PTR [rcx]
   140035b5d:	adc    al,BYTE PTR [rcx]
   140035b5f:	add    BYTE PTR [rcx],cl
   140035b61:	(bad)  
   140035b62:	add    BYTE PTR [rax],al
   140035b64:	in     al,dx
   140035b65:	(bad)  
   140035b66:	add    al,BYTE PTR [rax]
   140035b68:	(bad)  
   140035b69:	in     eax,dx
   140035b6a:	add    al,BYTE PTR [rax]
   140035b6c:	push   rax
   140035b6d:	jg     0x140035b70
   140035b6f:	add    bh,bh
   140035b71:	(bad)  
   140035b72:	(bad)  
   140035b73:	call   QWORD PTR [rcx]
   140035b75:	adc    al,BYTE PTR [rcx]
   140035b77:	add    BYTE PTR [rcx],cl
   140035b79:	(bad)  
   140035b7a:	add    BYTE PTR [rax],al
   140035b7c:	in     al,dx
   140035b7d:	(bad)  
   140035b7e:	add    al,BYTE PTR [rax]
   140035b80:	mov    ch,ch
   140035b82:	add    al,BYTE PTR [rax]
   140035b84:	nop
   140035b85:	jle    0x140035b88
   140035b87:	add    bh,bh
   140035b89:	(bad)  
   140035b8a:	(bad)  
   140035b8b:	call   QWORD PTR [rcx]
   140035b8d:	adc    al,BYTE PTR [rcx]
   140035b8f:	add    BYTE PTR [rcx],cl
   140035b91:	(bad)  
   140035b92:	add    BYTE PTR [rax],al
   140035b94:	in     al,dx
   140035b95:	(bad)  
   140035b96:	add    al,BYTE PTR [rax]
   140035b98:	mov    al,0xed
   140035b9a:	add    al,BYTE PTR [rax]
   140035b9c:	(bad)  
   140035b9d:	(bad)  
   140035b9e:	(bad)  
   140035b9f:	push   rax
   140035ba1:	cmp    eax,0x7f800002
   140035ba6:	add    DWORD PTR [rax],eax
   140035ba8:	(bad)  
   140035ba9:	(bad)  
   140035baa:	(bad)  
   140035bab:	call   QWORD PTR [rdx+0x17f]
   140035bb1:	add    BYTE PTR [rax],al
   140035bb3:	add    BYTE PTR [rbp-0xfffe81],bl
   140035bb9:	(bad)  
   140035bba:	(bad)  
   140035bbb:	call   QWORD PTR [rcx]
   140035bbd:	(bad)  
   140035bbe:	add    DWORD PTR [rax],eax
   140035bc0:	or     eax,0xec000062
   140035bc5:	(bad)  
   140035bc6:	add    al,BYTE PTR [rax]
   140035bc8:	fsubr  st,st(5)
   140035bca:	add    al,BYTE PTR [rax]
   140035bcc:	(bad)  
   140035bcd:	(bad)  
   140035bce:	(bad)  
   140035bcf:	call   rax
   140035bd1:	cmp    al,0x2
   140035bd3:	add    BYTE PTR [rax],al
   140035bd5:	add    BYTE PTR [rax],al
   140035bd7:	add    al,ch
   140035bd9:	cmp    al,0x2
   140035bdb:	add    BYTE PTR [rcx],al
   140035bdd:	add    BYTE PTR [rax],al
   140035bdf:	add    BYTE PTR [rip+0x200023d],al        # 0x142035e22
   140035be5:	add    BYTE PTR [rax],al
   140035be7:	add    BYTE PTR [rdx],ah
   140035be9:	cmp    eax,0x30002
   140035bee:	add    BYTE PTR [rax],al
   140035bf0:	(bad)  
   140035bf1:	cmp    eax,0x40002
   140035bf6:	add    BYTE PTR [rax],al
   140035bf8:	pop    rsp
   140035bf9:	cmp    eax,0x50002
   140035bfe:	add    BYTE PTR [rax],al
   140035c00:	jns    0x140035c3f
   140035c02:	add    al,BYTE PTR [rax]
   140035c04:	(bad)  
   140035c05:	add    BYTE PTR [rax],al
   140035c07:	add    BYTE PTR [rsi+0x700023d],dl
   140035c0d:	add    BYTE PTR [rax],al
   140035c0f:	add    BYTE PTR [rbx+0x2000023d],dh
   140035c15:	ja     0x140035c18
   140035c17:	add    bh,bh
   140035c19:	(bad)  
   140035c1a:	(bad)  
   140035c1b:	inc    DWORD PTR [rcx+0x77]
   140035c1e:	add    DWORD PTR [rax],eax
   140035c20:	add    BYTE PTR [rax],al
   140035c22:	add    BYTE PTR [rax],al
   140035c24:	push   rsp
   140035c25:	ja     0x140035c28
   140035c27:	add    BYTE PTR [rcx],al
   140035c29:	add    BYTE PTR [rax],al
   140035c2b:	add    BYTE PTR [rdi+0x77],ah
   140035c2e:	add    DWORD PTR [rax],eax
   140035c30:	add    al,BYTE PTR [rax]
   140035c32:	add    BYTE PTR [rax],al
   140035c34:	jp     0x140035cad
   140035c36:	add    DWORD PTR [rax],eax
   140035c38:	add    eax,DWORD PTR [rax]
   140035c3a:	add    BYTE PTR [rax],al
   140035c3c:	lea    esi,[rdi+0x1]
   140035c3f:	add    BYTE PTR [rax+rax*1],al
   140035c42:	add    BYTE PTR [rax],al
   140035c44:	movabs al,ds:0xb300000005000177
   140035c4d:	ja     0x140035c50
   140035c4f:	add    BYTE PTR [rsi],al
   140035c51:	add    BYTE PTR [rax],al
   140035c53:	add    dh,al
   140035c55:	ja     0x140035c58
   140035c57:	add    BYTE PTR [rdi],al
   140035c59:	add    BYTE PTR [rax],al
   140035c5b:	add    cl,bl
   140035c5d:	ja     0x140035c60
   140035c5f:	add    BYTE PTR [rax],cl
   140035c61:	add    BYTE PTR [rax],al
   140035c63:	add    dh,ah
   140035c65:	ja     0x140035c68
   140035c67:	add    bh,bh
   140035c69:	(bad)  
   140035c6a:	(bad)  
   140035c6b:	inc    DWORD PTR [rcx]
   140035c6d:	(bad)  
   140035c6e:	add    al,BYTE PTR [rax]
   140035c70:	(bad)  
   140035c71:	xor    al,BYTE PTR [rdx]
   140035c73:	push   rax
   140035c74:	add    DWORD PTR [rsi],eax
   140035c76:	add    al,BYTE PTR [rax]
   140035c78:	(bad)  
   140035c79:	xor    al,BYTE PTR [rdx]
   140035c7b:	push   rax
   140035c7c:	add    DWORD PTR [rsi],eax
   140035c7e:	add    al,BYTE PTR [rax]
   140035c80:	(bad)  
   140035c81:	xor    al,BYTE PTR [rdx]
   140035c83:	push   rax
   140035c84:	add    DWORD PTR [rsi],eax
   140035c86:	add    al,BYTE PTR [rax]
   140035c88:	(bad)  
   140035c89:	xor    al,BYTE PTR [rdx]
   140035c8b:	push   rax
   140035c8c:	add    DWORD PTR [rsi],eax
   140035c8e:	add    al,BYTE PTR [rax]
   140035c90:	(bad)  
   140035c91:	xor    al,BYTE PTR [rdx]
   140035c93:	push   rax
   140035c94:	add    DWORD PTR [rsi],eax
   140035c96:	add    al,BYTE PTR [rax]
   140035c98:	(bad)  
   140035c99:	xor    al,BYTE PTR [rdx]
   140035c9b:	push   rax
   140035c9c:	add    DWORD PTR [rsi],eax
   140035c9e:	add    al,BYTE PTR [rax]
   140035ca0:	(bad)  
   140035ca1:	xor    al,BYTE PTR [rdx]
   140035ca3:	push   rax
   140035ca4:	add    DWORD PTR [rsi],eax
   140035ca6:	add    al,BYTE PTR [rax]
   140035ca8:	(bad)  
   140035ca9:	xor    al,BYTE PTR [rdx]
   140035cab:	push   rax
   140035cac:	add    DWORD PTR [rsi],eax
   140035cae:	add    al,BYTE PTR [rax]
   140035cb0:	(bad)  
   140035cb1:	xor    al,BYTE PTR [rdx]
   140035cb3:	push   rax
   140035cb4:	sbb    DWORD PTR [rdx+rax*1],esp
   140035cb7:	add    BYTE PTR [rcx+rax*1],cl
   140035cba:	adc    DWORD PTR [rax],eax
   140035cbc:	in     al,0x17
   140035cbe:	add    al,BYTE PTR [rax]
   140035cc0:	add    dh,ch
   140035cc2:	add    al,BYTE PTR [rax]
   140035cc4:	jb     0x140035cc6
   140035cc6:	add    BYTE PTR [rax],al
   140035cc8:	(bad)  
   140035cc9:	(bad)  
   140035cca:	(bad)  
   140035ccb:	call   rax
   140035ccd:	cmp    eax,0x78000002
   140035cd2:	add    DWORD PTR [rax],eax
   140035cd4:	(bad)  
   140035cd5:	(bad)  
   140035cd6:	(bad)  
   140035cd7:	call   QWORD PTR [rcx+0x178]
   140035cdd:	add    BYTE PTR [rax],al
   140035cdf:	add    BYTE PTR [rbx-0xfffe88],ch
   140035ce5:	(bad)  
   140035ce6:	(bad)  
   140035ce7:	inc    DWORD PTR [rcx]
   140035ce9:	(bad)  
   140035cea:	add    al,BYTE PTR [rax]
   140035cec:	(bad)  
   140035ced:	xor    al,BYTE PTR [rdx]
   140035cef:	push   rax
   140035cf0:	add    DWORD PTR [rsi],ecx
   140035cf2:	add    DWORD PTR [rax],eax
   140035cf4:	(bad)  
   140035cf5:	rex.X add BYTE PTR [rax],al
   140035cf8:	add    DWORD PTR [rcx],ecx
   140035cfa:	add    DWORD PTR [rax],eax
   140035cfc:	or     DWORD PTR [rdx+0x0],eax
   140035cff:	add    BYTE PTR [rcx],al
   140035d01:	or     DWORD PTR [rcx],eax
   140035d03:	add    BYTE PTR [rcx],cl
   140035d05:	rex.X add BYTE PTR [rax],al
   140035d08:	add    DWORD PTR [rsi],ecx
   140035d0a:	add    DWORD PTR [rax],eax
   140035d0c:	(bad)  
   140035d0d:	rex.X add BYTE PTR [rax],al
   140035d10:	add    DWORD PTR [rcx],ecx
   140035d12:	add    DWORD PTR [rax],eax
   140035d14:	or     DWORD PTR [rdx+0x0],eax
   140035d17:	add    BYTE PTR [rcx],al
   140035d19:	(bad)  
   140035d1a:	add    DWORD PTR [rax],eax
   140035d1c:	(bad)  
   140035d1d:	rex.X add BYTE PTR [rax],al
   140035d20:	add    DWORD PTR [rcx],ecx
   140035d22:	add    DWORD PTR [rax],eax
   140035d24:	or     DWORD PTR [rdx+0x0],eax
   140035d27:	add    BYTE PTR [rcx],al
   140035d29:	(bad)  
   140035d2a:	add    DWORD PTR [rax],eax
   140035d2c:	(bad)  
   140035d2d:	rex.X add BYTE PTR [rax],al
   140035d30:	add    DWORD PTR [rcx],ecx
   140035d32:	add    DWORD PTR [rax],eax
   140035d34:	or     DWORD PTR [rdx+0x0],eax
   140035d37:	add    BYTE PTR [rcx],al
   140035d39:	(bad)  
   140035d3a:	add    DWORD PTR [rax],eax
   140035d3c:	(bad)  
   140035d3d:	rex.X add BYTE PTR [rax],al
   140035d40:	add    DWORD PTR [rcx],ecx
   140035d42:	add    DWORD PTR [rax],eax
   140035d44:	or     DWORD PTR [rdx+0x0],eax
   140035d47:	add    BYTE PTR [rcx],al
   140035d49:	(bad)  
   140035d4a:	add    DWORD PTR [rax],eax
   140035d4c:	(bad)  
   140035d4d:	rex.X add BYTE PTR [rax],al
   140035d50:	add    DWORD PTR [rcx],ecx
   140035d52:	add    DWORD PTR [rax],eax
   140035d54:	or     DWORD PTR [rdx+0x0],eax
   140035d57:	add    BYTE PTR [rcx],al
   140035d59:	(bad)  
   140035d5a:	add    DWORD PTR [rax],eax
   140035d5c:	(bad)  
   140035d5d:	rex.X add BYTE PTR [rax],al
   140035d60:	add    DWORD PTR [rcx],ecx
   140035d62:	add    DWORD PTR [rax],eax
   140035d64:	or     DWORD PTR [rdx+0x0],eax
   140035d67:	add    BYTE PTR [rcx],al
   140035d69:	(bad)  
   140035d6a:	add    DWORD PTR [rax],eax
   140035d6c:	(bad)  
   140035d6d:	rex.X add BYTE PTR [rax],al
   140035d70:	adc    DWORD PTR [rcx+rax*1],ebx
   140035d73:	add    BYTE PTR [rbx],dl
   140035d75:	(bad)  
   140035d76:	add    BYTE PTR [rax],al
   140035d78:	in     al,dx
   140035d79:	(bad)  
   140035d7a:	add    al,BYTE PTR [rax]
   140035d7c:	sub    dh,ch
   140035d7e:	add    al,BYTE PTR [rax]
   140035d80:	sar    BYTE PTR [rcx+rax*1+0x0],0xff
   140035d85:	(bad)  
   140035d86:	(bad)  
   140035d87:	push   rax
   140035d89:	jl     0x140035d8c
   140035d8b:	add    BYTE PTR [rax],al
   140035d8d:	add    BYTE PTR [rax],al
   140035d8f:	add    BYTE PTR [rdi*2-0xffff],ch
   140035d96:	(bad)  
   140035d97:	inc    DWORD PTR [rcx]
   140035d99:	(bad)  
   140035d9a:	add    DWORD PTR [rax],eax
   140035d9c:	(bad)  
   140035d9d:	rex.X add BYTE PTR [rax],al
   140035da0:	add    DWORD PTR [rcx],ecx
   140035da2:	add    DWORD PTR [rax],eax
   140035da4:	or     DWORD PTR [rdx+0x0],eax
   140035da7:	add    BYTE PTR [rcx],al
   140035da9:	(bad)  
   140035daa:	add    DWORD PTR [rax],eax
   140035dac:	(bad)  
   140035dad:	rex.X add BYTE PTR [rax],al
   140035db0:	add    DWORD PTR [rcx],ecx
   140035db2:	add    DWORD PTR [rax],eax
   140035db4:	or     DWORD PTR [rdx+0x0],eax
   140035db7:	add    BYTE PTR [rcx],al
   140035db9:	(bad)  
   140035dba:	add    DWORD PTR [rax],eax
   140035dbc:	(bad)  
   140035dbd:	rex.X add BYTE PTR [rax],al
   140035dc0:	add    DWORD PTR [rcx],ecx
   140035dc2:	add    DWORD PTR [rax],eax
   140035dc4:	or     DWORD PTR [rdx+0x0],eax
   140035dc7:	add    BYTE PTR [rcx],al
   140035dc9:	or     DWORD PTR [rcx],eax
   140035dcb:	add    BYTE PTR [rcx],cl
   140035dcd:	rex.X add BYTE PTR [rax],al
   140035dd0:	add    DWORD PTR [rsi],ecx
   140035dd2:	add    DWORD PTR [rax],eax
   140035dd4:	(bad)  
   140035dd5:	rex.X add BYTE PTR [rax],al
   140035dd8:	adc    DWORD PTR [rcx+rax*1],ebx
   140035ddb:	add    BYTE PTR [rbx],dl
   140035ddd:	movabs ds:0x220000216ec0000,al
   140035de6:	add    eax,DWORD PTR [rax]
   140035de8:	(bad)  
   140035de9:	(bad)  
   140035dea:	(bad)  
   140035deb:	call   FWORD PTR [rcx+0x56]
   140035dee:	add    al,BYTE PTR [rax]
   140035df0:	add    BYTE PTR [rax],al
   140035df2:	add    BYTE PTR [rax],al
   140035df4:	rex push rsi
   140035df6:	add    al,BYTE PTR [rax]
   140035df8:	xor    cl,ah
   140035dfa:	add    DWORD PTR [rax],eax
   140035dfc:	(bad)  
   140035dfd:	(bad)  
   140035dfe:	(bad)  
   140035dff:	jmp    FWORD PTR [rsi-0x1f]
   140035e02:	add    DWORD PTR [rax],eax
   140035e04:	add    DWORD PTR [rax],eax
   140035e06:	add    BYTE PTR [rax],al
   140035e08:	(bad)  
   140035e09:	loope  0x140035e0c
   140035e0b:	add    BYTE PTR [rax],al
   140035e0d:	add    BYTE PTR [rax],al
   140035e0f:	add    BYTE PTR [rcx],dl
   140035e11:	sbb    al,0x1
   140035e13:	add    BYTE PTR [rbx],dl
   140035e15:	(bad)  
   140035e16:	add    BYTE PTR [rax],al
   140035e18:	in     al,dx
   140035e19:	(bad)  
   140035e1a:	add    al,BYTE PTR [rax]
   140035e1c:	push   rax
   140035e1d:	add    al,BYTE PTR [rbx]
   140035e1f:	add    BYTE PTR [rax],dh
   140035e21:	fld    QWORD PTR [rcx]
   140035e23:	add    bh,bh
   140035e25:	(bad)  
   140035e26:	(bad)  
   140035e27:	call   FWORD PTR [rbx-0x23]
   140035e2a:	add    DWORD PTR [rax],eax
   140035e2c:	add    BYTE PTR [rax],al
   140035e2e:	add    BYTE PTR [rax],al
   140035e30:	xchg   edx,eax
   140035e31:	fld    QWORD PTR [rcx]
   140035e33:	add    bh,bh
   140035e35:	(bad)  
   140035e36:	(bad)  
   140035e37:	inc    DWORD PTR [rcx]
   140035e39:	(bad)  
   140035e3a:	add    DWORD PTR [rax],eax
   140035e3c:	(bad)  
   140035e3d:	(bad)  
   140035e3e:	add    BYTE PTR [rax],al
   140035e40:	adc    DWORD PTR [rdx],edx
   140035e42:	add    DWORD PTR [rax],eax
   140035e44:	or     DWORD PTR [rdx+0x0],esp
   140035e47:	add    ah,ch
   140035e49:	(bad)  
   140035e4a:	add    al,BYTE PTR [rax]
   140035e4c:	add    BYTE PTR [rdx],0x3
   140035e4f:	add    bh,bh
   140035e51:	(bad)  
   140035e52:	(bad)  
   140035e53:	inc    DWORD PTR [rax+0x55]
   140035e56:	add    al,BYTE PTR [rax]
   140035e58:	add    BYTE PTR [rax],al
   140035e5a:	add    BYTE PTR [rax],al
   140035e5c:	pop    rax
   140035e5d:	push   rbp
   140035e5e:	add    al,BYTE PTR [rax]
   140035e60:	add    DWORD PTR [rax],eax
   140035e62:	add    BYTE PTR [rax],al
   140035e64:	jne    0x140035ebb
   140035e66:	add    al,BYTE PTR [rax]
   140035e68:	add    al,BYTE PTR [rax]
   140035e6a:	add    BYTE PTR [rax],al
   140035e6c:	xchg   edx,eax
   140035e6d:	push   rbp
   140035e6e:	add    al,BYTE PTR [rax]
   140035e70:	add    eax,DWORD PTR [rax]
   140035e72:	add    BYTE PTR [rax],al
   140035e74:	scas   eax,DWORD PTR es:[rdi]
   140035e75:	push   rbp
   140035e76:	add    al,BYTE PTR [rax]
   140035e78:	add    al,0x0
   140035e7a:	add    BYTE PTR [rax],al
   140035e7c:	int3   
   140035e7d:	push   rbp
   140035e7e:	add    al,BYTE PTR [rax]
   140035e80:	add    eax,0xe9000000
   140035e85:	push   rbp
   140035e86:	add    al,BYTE PTR [rax]
   140035e88:	(bad)  
   140035e89:	add    BYTE PTR [rax],al
   140035e8b:	add    BYTE PTR [rsi],al
   140035e8d:	push   rsi
   140035e8e:	add    al,BYTE PTR [rax]
   140035e90:	(bad)  
   140035e91:	add    BYTE PTR [rax],al
   140035e93:	add    BYTE PTR [rbx],ah
   140035e95:	push   rsi
   140035e96:	add    al,BYTE PTR [rax]
   140035e98:	(bad)  
   140035e99:	fiadd  WORD PTR [rcx]
   140035e9b:	add    bh,bh
   140035e9d:	(bad)  
   140035e9e:	(bad)  
   140035e9f:	push   QWORD PTR [rdx-0x22]
   140035ea2:	add    DWORD PTR [rax],eax
   140035ea4:	(bad)  
   140035ea5:	add    BYTE PTR [rax],al
   140035ea7:	add    BYTE PTR [rbp+0x60001de],al
   140035ead:	add    BYTE PTR [rax],al
   140035eaf:	add    BYTE PTR [rax+0x50001de],bl
   140035eb5:	add    BYTE PTR [rax],al
   140035eb7:	add    BYTE PTR [rbx+0x40001de],ch
   140035ebd:	add    BYTE PTR [rax],al
   140035ebf:	add    BYTE PTR [rsi+0x30001de],bh
   140035ec5:	add    BYTE PTR [rax],al
   140035ec7:	add    cl,dl
   140035ec9:	fiadd  WORD PTR [rcx]
   140035ecb:	add    BYTE PTR [rdx],al
   140035ecd:	add    BYTE PTR [rax],al
   140035ecf:	add    ah,ah
   140035ed1:	fiadd  WORD PTR [rcx]
   140035ed3:	add    BYTE PTR [rcx],al
   140035ed5:	add    BYTE PTR [rax],al
   140035ed7:	add    bh,dh
   140035ed9:	fiadd  WORD PTR [rcx]
   140035edb:	add    BYTE PTR [rax],al
   140035edd:	add    BYTE PTR [rax],al
   140035edf:	add    BYTE PTR [rdx],cl
   140035ee1:	fild   WORD PTR [rcx]
   140035ee3:	add    bh,bh
   140035ee5:	(bad)  
   140035ee6:	(bad)  
   140035ee7:	call   QWORD PTR [rcx]
   140035ee9:	adc    al,BYTE PTR [rcx]
   140035eeb:	add    BYTE PTR [rcx],cl
   140035eed:	(bad)  
   140035eee:	add    BYTE PTR [rax],al
   140035ef0:	in     al,dx
   140035ef1:	(bad)  
   140035ef2:	add    al,BYTE PTR [rax]
   140035ef4:	mov    al,0x2
   140035ef6:	add    eax,DWORD PTR [rax]
   140035ef8:	jo     0x140035ed6
   140035efa:	add    DWORD PTR [rax],eax
   140035efc:	(bad)  
   140035efd:	(bad)  
   140035efe:	(bad)  
   140035eff:	call   QWORD PTR [rcx+0x1dc]
   140035f05:	add    BYTE PTR [rax],al
   140035f07:	add    BYTE PTR [rsp+rbx*8-0xffff],ah
   140035f0e:	(bad)  
   140035f0f:	call   QWORD PTR [rcx]
   140035f11:	adc    al,BYTE PTR [rcx]
   140035f13:	add    BYTE PTR [rcx],cl
   140035f15:	(bad)  
   140035f16:	add    BYTE PTR [rax],al
   140035f18:	in     al,dx
   140035f19:	(bad)  
   140035f1a:	add    al,BYTE PTR [rax]
   140035f1c:	loopne 0x140035f20
   140035f1e:	add    eax,DWORD PTR [rax]
   140035f20:	(bad)  
   140035f21:	(bad)  
   140035f22:	(bad)  
   140035f23:	call   QWORD PTR [rax+0x54]
   140035f26:	add    al,BYTE PTR [rax]
   140035f28:	add    BYTE PTR [rax],al
   140035f2a:	add    BYTE PTR [rax],al
   140035f2c:	imul   edx,DWORD PTR [rdx+rax*1+0x0],0x1df20
   140035f34:	(bad)  
   140035f35:	(bad)  
   140035f36:	(bad)  
   140035f37:	push   QWORD PTR [rdx]
   140035f39:	fild   WORD PTR [rcx]
   140035f3b:	add    BYTE PTR [rax],al
   140035f3d:	add    BYTE PTR [rax],al
   140035f3f:	add    BYTE PTR [rbp-0x21],al
   140035f42:	add    DWORD PTR [rax],eax
   140035f44:	(bad)  
   140035f45:	(bad)  
   140035f46:	(bad)  
   140035f47:	call   QWORD PTR [rcx]
   140035f49:	(bad)  
   140035f4a:	add    DWORD PTR [rax],eax
   140035f4c:	(bad)  
   140035f4d:	(bad)  
   140035f4e:	add    BYTE PTR [rax],al
   140035f50:	in     al,dx
   140035f51:	(bad)  
   140035f52:	add    al,BYTE PTR [rax]
   140035f54:	adc    BYTE PTR [rbx],al
   140035f56:	add    eax,DWORD PTR [rax]
   140035f58:	adc    ah,bl
   140035f5a:	add    DWORD PTR [rax],eax
   140035f5c:	(bad)  
   140035f5d:	(bad)  
   140035f5e:	(bad)  
   140035f5f:	(bad)  
   140035f60:	cmp    ebx,esp
   140035f62:	add    DWORD PTR [rax],eax
   140035f64:	add    BYTE PTR [rax],al
   140035f66:	add    BYTE PTR [rax],al
   140035f68:	push   rdi
   140035f69:	fadd   QWORD PTR [rcx]
   140035f6b:	add    bh,bh
   140035f6d:	(bad)  
   140035f6e:	(bad)  
   140035f6f:	call   FWORD PTR [rcx]
   140035f71:	sbb    al,0x1
   140035f73:	add    BYTE PTR [rbx],dl
   140035f75:	movabs ds:0x340000216ec0000,al
   140035f7e:	add    eax,DWORD PTR [rax]
	...
   140035f88:	add    DWORD PTR [rax],eax
   140035f8a:	add    BYTE PTR [rax],al
   140035f8c:	add    DWORD PTR [rax],eax
   140035f8e:	add    BYTE PTR [rax],al
   140035f90:	xchg   esp,eax
   140035f91:	pop    rdi
   140035f92:	add    eax,DWORD PTR [rax]
	...
   140035fa0:	rcl    BYTE PTR [rsi+0x2],1
   140035fa3:	add    BYTE PTR [rax],bh
   140035fa5:	add    BYTE PTR [rax],al
   140035fa7:	add    BYTE PTR [rax-0xfffe1a],ah
   140035fad:	(bad)  
   140035fae:	(bad)  
   140035faf:	(bad)  
   140035fb0:	stc    
   140035fb1:	out    0x1,al
   140035fb3:	add    BYTE PTR [rax],al
   140035fb5:	add    BYTE PTR [rax],al
   140035fb7:	add    BYTE PTR [rax-0x19],dh
   140035fba:	add    DWORD PTR [rax],eax
   140035fbc:	(bad)  
   140035fbd:	(bad)  
   140035fbe:	(bad)  
   140035fbf:	call   rax
   140035fc1:	push   rsi
   140035fc2:	add    al,BYTE PTR [rax]
   140035fc4:	add    BYTE PTR [rax],al
   140035fc6:	add    BYTE PTR [rax],al
   140035fc8:	fst    QWORD PTR [rsi+0x2]
   140035fcb:	add    BYTE PTR [rcx],al
   140035fcd:	add    BYTE PTR [rax],al
   140035fcf:	add    BYTE PTR [rsi],al
   140035fd1:	push   rdi
   140035fd2:	add    al,BYTE PTR [rax]
   140035fd4:	add    BYTE PTR [rax],al
   140035fd6:	add    BYTE PTR [rax],al
   140035fd8:	sbb    DWORD PTR [rdx],ecx
   140035fda:	add    al,BYTE PTR [rax]
   140035fdc:	or     dh,BYTE PTR [rdx]
   140035fde:	(bad)  
   140035fdf:	push   rax
   140035fe0:	in     al,dx
   140035fe1:	(bad)  
   140035fe2:	add    al,BYTE PTR [rax]
   140035fe4:	rex add eax,DWORD PTR [rbx]
   140035fe7:	add    BYTE PTR [rcx],dl
   140035fe9:	(bad)  
   140035fea:	add    DWORD PTR [rax],eax
   140035fec:	(bad)  
   140035fed:	(bad)  
   140035fee:	add    BYTE PTR [rax],al
   140035ff0:	in     al,dx
   140035ff1:	(bad)  
   140035ff2:	add    al,BYTE PTR [rax]
   140035ff4:	jo     0x140035ff9
   140035ff6:	add    eax,DWORD PTR [rax]
   140035ff8:	lock fld DWORD PTR [rcx]
   140035ffb:	add    bh,bh
   140035ffd:	(bad)  
   140035ffe:	(bad)  
   140035fff:	call   QWORD PTR [rcx]
   140036001:	adc    al,BYTE PTR [rcx]
   140036003:	add    BYTE PTR [rcx],cl
   140036005:	(bad)  
   140036006:	add    BYTE PTR [rax],al
   140036008:	in     al,dx
   140036009:	(bad)  
   14003600a:	add    al,BYTE PTR [rax]
   14003600c:	movabs al,ds:0x20ffffffff000303
   140036015:	push   rbp
   140036016:	add    al,BYTE PTR [rax]
   140036018:	loopne 0x140035ff7
   14003601a:	add    DWORD PTR [rax],eax
   14003601c:	(bad)  
   14003601d:	(bad)  
   14003601e:	(bad)  
   14003601f:	call   QWORD PTR [rcx]
   140036021:	adc    al,BYTE PTR [rcx]
   140036023:	add    BYTE PTR [rcx],cl
   140036025:	(bad)  
   140036026:	add    BYTE PTR [rax],al
   140036028:	in     al,dx
   140036029:	(bad)  
   14003602a:	add    al,BYTE PTR [rax]
   14003602c:	rol    BYTE PTR [rbx],1
   14003602e:	add    eax,DWORD PTR [rax]
   140036030:	(bad)  
   140036031:	(bad)  
   140036032:	(bad)  
   140036033:	push   QWORD PTR [rax]
   140036035:	push   rsp
   140036036:	add    al,BYTE PTR [rax]
   140036038:	rex fild DWORD PTR [rcx]
   14003603b:	add    bh,bh
   14003603d:	(bad)  
   14003603e:	(bad)  
   14003603f:	call   QWORD PTR [rcx]
   140036041:	adc    al,BYTE PTR [rcx]
   140036043:	add    BYTE PTR [rcx],cl
   140036045:	(bad)  
   140036046:	add    BYTE PTR [rax],al
   140036048:	in     al,dx
   140036049:	(bad)  
   14003604a:	add    al,BYTE PTR [rax]
   14003604c:	add    BYTE PTR [rbx+rax*1],al
   14003604f:	add    BYTE PTR [rax],dh
   140036051:	fiadd  WORD PTR [rcx]
   140036053:	add    bh,bh
   140036055:	(bad)  
   140036056:	(bad)  
   140036057:	inc    DWORD PTR [rdx-0x22]
   14003605a:	add    DWORD PTR [rax],eax
   14003605c:	add    BYTE PTR [rax],al
   14003605e:	add    BYTE PTR [rax],al
   140036060:	rex.WRB fiadd WORD PTR [r9]
   140036063:	add    bh,bh
   140036065:	(bad)  
   140036066:	(bad)  
   140036067:	call   QWORD PTR [rcx]
   140036069:	adc    al,BYTE PTR [rcx]
   14003606b:	add    BYTE PTR [rcx],cl
   14003606d:	(bad)  
   14003606e:	add    BYTE PTR [rax],al
   140036070:	in     al,dx
   140036071:	(bad)  
   140036072:	add    al,BYTE PTR [rax]
   140036074:	xor    BYTE PTR [rbx+rax*1],al
   140036077:	add    BYTE PTR [rax-0xfffe24],dh
   14003607d:	(bad)  
   14003607e:	(bad)  
   14003607f:	dec    ebp
   140036081:	fadd   QWORD PTR [rcx]
   140036083:	add    BYTE PTR [rax],al
   140036085:	add    BYTE PTR [rax],al
   140036087:	add    al,ah
   140036089:	fadd   QWORD PTR [rcx]
   14003608b:	add    BYTE PTR [rcx],al
   14003608d:	add    BYTE PTR [rax],al
   14003608f:	add    bl,dh
   140036091:	fadd   QWORD PTR [rcx]
   140036093:	add    BYTE PTR [rdx],al
   140036095:	add    BYTE PTR [rax],al
   140036097:	add    BYTE PTR [rsi],al
   140036099:	fld    QWORD PTR [rcx]
   14003609b:	add    BYTE PTR [rbx],al
   14003609d:	add    BYTE PTR [rax],al
   14003609f:	add    BYTE PTR [rcx],bl
   1400360a1:	fld    QWORD PTR [rcx]
   1400360a3:	add    bh,bh
   1400360a5:	(bad)  
   1400360a6:	(bad)  
   1400360a7:	inc    DWORD PTR [rcx]
   1400360a9:	(bad)  
   1400360aa:	add    al,BYTE PTR [rax]
   1400360ac:	(bad)  
   1400360ad:	xor    al,BYTE PTR [rdx]
   1400360af:	push   rax
   1400360b0:	adc    DWORD PTR [rdx],edx
   1400360b2:	add    DWORD PTR [rax],eax
   1400360b4:	or     DWORD PTR [rdx+0x0],esp
   1400360b7:	add    ah,ch
   1400360b9:	(bad)  
   1400360ba:	add    al,BYTE PTR [rax]
   1400360bc:	(bad)  
   1400360bd:	add    al,0x3
   1400360bf:	add    bh,bh
   1400360c1:	(bad)  
   1400360c2:	(bad)  
   1400360c3:	call   QWORD PTR [rax+0x254]
   1400360c9:	add    BYTE PTR [rax],al
   1400360cb:	add    BYTE PTR [rax+0x1000254],ch
   1400360d1:	add    BYTE PTR [rax],al
   1400360d3:	add    ch,al
   1400360d5:	push   rsp
   1400360d6:	add    al,BYTE PTR [rax]
   1400360d8:	add    al,BYTE PTR [rax]
   1400360da:	add    BYTE PTR [rax],al
   1400360dc:	loop   0x140036132
   1400360de:	add    al,BYTE PTR [rax]
   1400360e0:	add    eax,DWORD PTR [rax]
   1400360e2:	add    BYTE PTR [rax],al
   1400360e4:	call   QWORD PTR [rdx+rax*1+0x0]
   1400360e8:	(bad)  
   1400360e9:	fild   WORD PTR [rcx]
   1400360eb:	add    bh,bh
   1400360ed:	(bad)  
   1400360ee:	(bad)  
   1400360ef:	push   QWORD PTR [rdx-0x21]
   1400360f2:	add    DWORD PTR [rax],eax
   1400360f4:	add    eax,DWORD PTR [rax]
   1400360f6:	add    BYTE PTR [rax],al
   1400360f8:	test   edi,ebx
   1400360fa:	add    DWORD PTR [rax],eax
   1400360fc:	add    al,BYTE PTR [rax]
   1400360fe:	add    BYTE PTR [rax],al
   140036100:	cwde   
   140036101:	fild   WORD PTR [rcx]
   140036103:	add    BYTE PTR [rcx],al
   140036105:	add    BYTE PTR [rax],al
   140036107:	add    BYTE PTR [rbx+0x1df],ch
   14003610d:	add    BYTE PTR [rax],al
   14003610f:	add    BYTE PTR [rsi-0xfffe21],bh
   140036115:	(bad)  
   140036116:	(bad)  
   140036117:	call   QWORD PTR [rcx]
   140036119:	adc    al,BYTE PTR [rcx]
   14003611b:	add    BYTE PTR [rcx],cl
   14003611d:	(bad)  
   14003611e:	add    BYTE PTR [rax],al
   140036120:	in     al,dx
   140036121:	(bad)  
   140036122:	add    al,BYTE PTR [rax]
   140036124:	rex inc DWORD PTR [rdx]
   140036127:	add    bh,bh
   140036129:	(bad)  
   14003612a:	(bad)  
   14003612b:	jmp    QWORD PTR [rax+0x23e]
   140036131:	add    BYTE PTR [rax],al
   140036133:	add    BYTE PTR [rax+0x100023e],bh
   140036139:	add    BYTE PTR [rax],al
   14003613b:	add    ah,dl
   14003613d:	add    al,BYTE PTR ds:[rax]
   140036140:	add    al,BYTE PTR [rax]
   140036142:	add    BYTE PTR [rax],al
   140036144:	hlt    
   140036145:	add    al,BYTE PTR ds:[rax]
   140036148:	add    eax,DWORD PTR [rax]
   14003614a:	add    BYTE PTR [rax],al
   14003614c:	adc    al,0x3f
   14003614e:	add    al,BYTE PTR [rax]
   140036150:	add    al,0x0
   140036152:	add    BYTE PTR [rax],al
   140036154:	xor    al,0x3f
   140036156:	add    al,BYTE PTR [rax]
   140036158:	add    eax,0x53000000
   14003615d:	(bad)  
   14003615e:	add    al,BYTE PTR [rax]
   140036160:	(bad)  
   140036161:	add    BYTE PTR [rax],al
   140036163:	add    BYTE PTR [rbx+0x3f],dh
   140036166:	add    al,BYTE PTR [rax]
   140036168:	lock test BYTE PTR [rcx],al
   14003616b:	add    bh,bh
   14003616d:	(bad)  
   14003616e:	(bad)  
   14003616f:	call   QWORD PTR [rdx]
   140036171:	test   DWORD PTR [rcx],eax
   140036173:	add    BYTE PTR [rax],al
   140036175:	add    BYTE PTR [rax],al
   140036177:	add    BYTE PTR [rax*4+0x10001],ah
   14003617e:	add    BYTE PTR [rax],al
   140036180:	cmp    DWORD PTR [rbp+0x20001],eax
   140036186:	add    BYTE PTR [rax],al
   140036188:	rex.WRX test QWORD PTR [rcx],r8
   14003618b:	add    BYTE PTR [rbx],al
   14003618d:	add    BYTE PTR [rax],al
   14003618f:	add    BYTE PTR [rbx-0x7b],ah
   140036192:	add    DWORD PTR [rax],eax
   140036194:	add    al,0x0
   140036196:	add    BYTE PTR [rax],al
   140036198:	ja     0x14003611f
   14003619a:	add    DWORD PTR [rax],eax
   14003619c:	add    eax,0x8c000000
   1400361a1:	test   DWORD PTR [rcx],eax
   1400361a3:	add    BYTE PTR [rsi],al
   1400361a5:	add    BYTE PTR [rax],al
   1400361a7:	add    BYTE PTR [rax+0x7000185],ah
   1400361ad:	add    BYTE PTR [rax],al
   1400361af:	add    cl,cl
   1400361b1:	test   DWORD PTR [rcx],eax
   1400361b3:	add    bh,bh
   1400361b5:	(bad)  
   1400361b6:	(bad)  
   1400361b7:	inc    DWORD PTR [rcx]
   1400361b9:	(bad)  
   1400361ba:	add    al,BYTE PTR [rax]
   1400361bc:	(bad)  
   1400361bd:	xor    al,BYTE PTR [rdx]
   1400361bf:	push   rax
   1400361c0:	add    DWORD PTR [rsi],eax
   1400361c2:	add    al,BYTE PTR [rax]
   1400361c4:	(bad)  
   1400361c5:	xor    al,BYTE PTR [rdx]
   1400361c7:	push   rax
   1400361c8:	add    DWORD PTR [rsi],eax
   1400361ca:	add    al,BYTE PTR [rax]
   1400361cc:	(bad)  
   1400361cd:	xor    al,BYTE PTR [rdx]
   1400361cf:	push   rax
   1400361d0:	add    DWORD PTR [rsi],eax
   1400361d2:	add    al,BYTE PTR [rax]
   1400361d4:	(bad)  
   1400361d5:	xor    al,BYTE PTR [rdx]
   1400361d7:	push   rax
   1400361d8:	add    DWORD PTR [rsi],eax
   1400361da:	add    al,BYTE PTR [rax]
   1400361dc:	(bad)  
   1400361dd:	xor    al,BYTE PTR [rdx]
   1400361df:	push   rax
   1400361e0:	add    DWORD PTR [rsi],eax
   1400361e2:	add    al,BYTE PTR [rax]
   1400361e4:	(bad)  
   1400361e5:	xor    al,BYTE PTR [rdx]
   1400361e7:	push   rax
   1400361e8:	add    DWORD PTR [rsi],eax
   1400361ea:	add    al,BYTE PTR [rax]
   1400361ec:	(bad)  
   1400361ed:	xor    al,BYTE PTR [rdx]
   1400361ef:	push   rax
   1400361f0:	add    DWORD PTR [rsi],eax
   1400361f2:	add    al,BYTE PTR [rax]
   1400361f4:	(bad)  
   1400361f5:	xor    al,BYTE PTR [rdx]
   1400361f7:	push   rax
   1400361f8:	adc    DWORD PTR [rdx],edx
   1400361fa:	add    DWORD PTR [rax],eax
   1400361fc:	or     DWORD PTR [rdx+0x0],esp
   1400361ff:	add    ah,ch
   140036201:	(bad)  
   140036202:	add    al,BYTE PTR [rax]
   140036204:	push   0xffffffffff0002ff
   140036209:	(bad)  
   14003620a:	(bad)  
   14003620b:	call   QWORD PTR [rdx+0x23f]
   140036211:	add    BYTE PTR [rax],al
   140036213:	add    BYTE PTR [rdx+0x100023f],ch
   140036219:	add    BYTE PTR [rax],al
   14003621b:	add    dh,al
   14003621d:	(bad)  
   14003621e:	add    al,BYTE PTR [rax]
   140036220:	add    al,BYTE PTR [rax]
   140036222:	add    BYTE PTR [rax],al
   140036224:	out    0x3f,al
   140036226:	add    al,BYTE PTR [rax]
   140036228:	add    eax,DWORD PTR [rax]
   14003622a:	add    BYTE PTR [rax],al
   14003622c:	(bad)  
   14003622d:	add    al,BYTE PTR [rax]
   140036230:	add    al,0x0
   140036232:	add    BYTE PTR [rax],al
   140036234:	add    al,BYTE PTR es:[rax]
   140036238:	add    eax,0x45000000
   14003623d:	add    al,BYTE PTR [rax]
   140036240:	(bad)  
   140036241:	add    BYTE PTR [rax],al
   140036243:	add    BYTE PTR [rbp+0x40],ah
   140036246:	add    al,BYTE PTR [rax]
   140036248:	loopne 0x1400361cf
   14003624a:	add    DWORD PTR [rax],eax
   14003624c:	(bad)  
   14003624d:	(bad)  
   14003624e:	(bad)  
   14003624f:	push   rdx
   140036251:	test   DWORD PTR [rcx],eax
   140036253:	add    BYTE PTR [rdi],al
   140036255:	add    BYTE PTR [rax],al
   140036257:	add    BYTE PTR [rcx],dl
   140036259:	xchg   BYTE PTR [rcx],al
   14003625b:	add    BYTE PTR [rsi],al
   14003625d:	add    BYTE PTR [rax],al
   14003625f:	add    BYTE PTR [rip+0x5000186],ah        # 0x1450363eb
   140036265:	add    BYTE PTR [rax],al
   140036267:	add    BYTE PTR [rdx],bh
   140036269:	xchg   BYTE PTR [rcx],al
   14003626b:	add    BYTE PTR [rax+rax*1],al
   14003626e:	add    BYTE PTR [rax],al
   140036270:	rex.WRX xchg BYTE PTR [rcx],r8b
   140036273:	add    BYTE PTR [rbx],al
   140036275:	add    BYTE PTR [rax],al
   140036277:	add    BYTE PTR [rbx-0x7a],ah
   14003627a:	add    DWORD PTR [rax],eax
   14003627c:	add    al,BYTE PTR [rax]
   14003627e:	add    BYTE PTR [rax],al
   140036280:	js     0x140036208
   140036282:	add    DWORD PTR [rax],eax
   140036284:	add    DWORD PTR [rax],eax
   140036286:	add    BYTE PTR [rax],al
   140036288:	lea    eax,[rsi+0x1]
   14003628e:	add    BYTE PTR [rax],al
   140036290:	lahf   
   140036291:	xchg   BYTE PTR [rcx],al
   140036293:	add    bh,bh
   140036295:	(bad)  
   140036296:	(bad)  
   140036297:	inc    DWORD PTR [rcx]
   140036299:	(bad)  
   14003629a:	add    al,BYTE PTR [rax]
   14003629c:	(bad)  
   14003629d:	xor    al,BYTE PTR [rdx]
   14003629f:	push   rax
   1400362a0:	add    DWORD PTR [rsi],eax
   1400362a2:	add    al,BYTE PTR [rax]
   1400362a4:	(bad)  
   1400362a5:	xor    al,BYTE PTR [rdx]
   1400362a7:	push   rax
   1400362a8:	add    DWORD PTR [rsi],eax
   1400362aa:	add    al,BYTE PTR [rax]
   1400362ac:	(bad)  
   1400362ad:	xor    al,BYTE PTR [rdx]
   1400362af:	push   rax
   1400362b0:	add    DWORD PTR [rsi],eax
   1400362b2:	add    al,BYTE PTR [rax]
   1400362b4:	(bad)  
   1400362b5:	xor    al,BYTE PTR [rdx]
   1400362b7:	push   rax
   1400362b8:	add    DWORD PTR [rsi],eax
   1400362ba:	add    al,BYTE PTR [rax]
   1400362bc:	(bad)  
   1400362bd:	xor    al,BYTE PTR [rdx]
   1400362bf:	push   rax
   1400362c0:	add    DWORD PTR [rsi],eax
   1400362c2:	add    al,BYTE PTR [rax]
   1400362c4:	(bad)  
   1400362c5:	xor    al,BYTE PTR [rdx]
   1400362c7:	push   rax
   1400362c8:	add    DWORD PTR [rsi],eax
   1400362ca:	add    al,BYTE PTR [rax]
   1400362cc:	(bad)  
   1400362cd:	xor    al,BYTE PTR [rdx]
   1400362cf:	push   rax
   1400362d0:	add    DWORD PTR [rsi],eax
   1400362d2:	add    al,BYTE PTR [rax]
   1400362d4:	(bad)  
   1400362d5:	xor    al,BYTE PTR [rdx]
   1400362d7:	push   rax
   1400362d8:	sbb    DWORD PTR [rcx],edi
   1400362da:	add    al,BYTE PTR [rax]
   1400362dc:	sbb    eax,DWORD PTR [rcx]
   1400362de:	push   rbp
   1400362df:	add    esp,esp
   1400362e1:	(bad)  
   1400362e2:	add    al,BYTE PTR [rax]
   1400362e4:	nop
   1400362e5:	inc    DWORD PTR [rdx]
   1400362e7:	add    BYTE PTR [rdx-0xfffff6],dl
   1400362ed:	(bad)  
   1400362ee:	(bad)  
   1400362ef:	inc    DWORD PTR [rax+rax*2+0x2]
   1400362f6:	add    BYTE PTR [rax],al
   1400362f8:	pushf  
   1400362f9:	add    al,BYTE PTR [rax]
   1400362fc:	add    BYTE PTR [rax],al
   1400362fe:	add    BYTE PTR [rax],al
   140036300:	mov    bh,0x40
   140036302:	add    al,BYTE PTR [rax]
   140036304:	add    al,BYTE PTR [rax]
   140036306:	add    BYTE PTR [rax],al
   140036308:	iret   
   140036309:	add    al,BYTE PTR [rax]
   14003630c:	add    eax,DWORD PTR [rax]
   14003630e:	add    BYTE PTR [rax],al
   140036310:	out    0x40,eax
   140036312:	add    al,BYTE PTR [rax]
   140036314:	add    eax,DWORD PTR [rax]
   140036316:	add    BYTE PTR [rax],al
   140036318:	add    al,BYTE PTR [rcx+0x2]
   14003631b:	add    BYTE PTR [rip+0x1a000000],al        # 0x15a036321
   140036321:	add    al,BYTE PTR [r8]
   140036324:	add    eax,0x35000000
   140036329:	add    al,BYTE PTR [r8]
   14003632c:	add    eax,0x50000000
   140036331:	add    al,BYTE PTR [r8]
   140036334:	add    eax,0x6b000000
   140036339:	add    al,BYTE PTR [r8]
   14003633c:	add    eax,0x86000000
   140036341:	add    al,BYTE PTR [r8]
   140036344:	add    eax,0xa1000000
   140036349:	add    al,BYTE PTR [r8]
   14003634c:	add    eax,0xbc000000
   140036351:	add    al,BYTE PTR [r8]
   140036354:	add    eax,0xd7000000
   140036359:	add    al,BYTE PTR [r8]
   14003635c:	add    eax,0xf2000000
   140036361:	add    al,BYTE PTR [r8]
   140036364:	add    eax,0xd000000
   140036369:	rex.X add al,BYTE PTR [rax]
   14003636c:	add    eax,0x28000000
   140036371:	rex.X add al,BYTE PTR [rax]
   140036374:	add    eax,0x43000000
   140036379:	rex.X add al,BYTE PTR [rax]
   14003637c:	add    eax,0x5e000000
   140036381:	rex.X add al,BYTE PTR [rax]
   140036384:	add    eax,0x79000000
   140036389:	rex.X add al,BYTE PTR [rax]
   14003638c:	add    eax,0x94000000
   140036391:	rex.X add al,BYTE PTR [rax]
   140036394:	add    eax,0xaf000000
   140036399:	rex.X add al,BYTE PTR [rax]
   14003639c:	add    eax,0xca000000
   1400363a1:	rex.X add al,BYTE PTR [rax]
   1400363a4:	add    eax,0xe5000000
   1400363a9:	rex.X add al,BYTE PTR [rax]
   1400363ac:	add    eax,0x0
   1400363b1:	rex.XB add al,BYTE PTR [r8]
   1400363b4:	add    eax,0x1b000000
   1400363b9:	rex.XB add al,BYTE PTR [r8]
   1400363bc:	add    eax,0x36000000
   1400363c1:	rex.XB add al,BYTE PTR [r8]
   1400363c4:	add    eax,0x51000000
   1400363c9:	rex.XB add al,BYTE PTR [r8]
   1400363cc:	sbb    eax,DWORD PTR [rax]
   1400363ce:	add    BYTE PTR [rax],al
   1400363d0:	ins    BYTE PTR es:[rdi],dx
   1400363d1:	rex.XB add al,BYTE PTR [r8]
   1400363d4:	add    eax,0x6c000000
   1400363d9:	rex.XB add al,BYTE PTR [r8]
   1400363dc:	add    eax,0x88000000
   1400363e1:	rex.XB add al,BYTE PTR [r8]
   1400363e4:	add    eax,0xa3000000
   1400363e9:	rex.XB add al,BYTE PTR [r8]
   1400363ec:	add    eax,0xbe000000
   1400363f1:	rex.XB add al,BYTE PTR [r8]
   1400363f4:	add    eax,0xd9000000
   1400363f9:	rex.XB add al,BYTE PTR [r8]
   1400363fc:	add    eax,0xf4000000
   140036401:	rex.XB add al,BYTE PTR [r8]
   140036404:	add    eax,0xf000000
   140036409:	add    r8b,BYTE PTR [rax]
   14003640c:	and    eax,DWORD PTR [rax]
   14003640e:	add    BYTE PTR [rax],al
   140036410:	sub    al,BYTE PTR [rdx+rax*1+0x0]
   140036414:	add    eax,0x2a000000
   140036419:	add    r8b,BYTE PTR [rax]
   14003641c:	and    eax,0x46000000
   140036421:	add    r8b,BYTE PTR [rax]
   140036424:	add    eax,0x62000000
   140036429:	add    r8b,BYTE PTR [rax]
   14003642c:	add    eax,0x7d000000
   140036431:	add    r8b,BYTE PTR [rax]
   140036434:	add    eax,0x98000000
   140036439:	add    r8b,BYTE PTR [rax]
   14003643c:	sub    DWORD PTR [rax],eax
   14003643e:	add    BYTE PTR [rax],al
   140036440:	mov    bl,0x44
   140036442:	add    al,BYTE PTR [rax]
   140036444:	add    eax,0xb3000000
   140036449:	add    r8b,BYTE PTR [rax]
   14003644c:	sub    eax,DWORD PTR [rax]
   14003644e:	add    BYTE PTR [rax],al
   140036450:	iret   
   140036451:	add    r8b,BYTE PTR [rax]
   140036454:	add    eax,0xe8000000
   140036459:	add    r8b,BYTE PTR [rax]
   14003645c:	add    eax,0x3000000
   140036461:	add    r8b,BYTE PTR [r8]
   140036464:	add    eax,0x1e000000
   140036469:	add    r8b,BYTE PTR [r8]
   14003646c:	(bad)  
   14003646d:	add    BYTE PTR [rax],al
   14003646f:	add    BYTE PTR [rcx],bh
   140036471:	add    r8b,BYTE PTR [r8]
   140036474:	add    eax,0x39000000
   140036479:	add    r8b,BYTE PTR [r8]
   14003647c:	xor    DWORD PTR [rax],eax
   14003647e:	add    BYTE PTR [rax],al
   140036480:	push   rbp
   140036481:	add    r8b,BYTE PTR [r8]
   140036484:	add    eax,0x71000000
   140036489:	add    r8b,BYTE PTR [r8]
   14003648c:	add    eax,0x8c000000
   140036491:	add    r8b,BYTE PTR [r8]
   140036494:	add    eax,0xa7000000
   140036499:	add    r8b,BYTE PTR [r8]
   14003649c:	xor    eax,0xc2000000
   1400364a1:	add    r8b,BYTE PTR [r8]
   1400364a4:	add    eax,0xc2000000
   1400364a9:	add    r8b,BYTE PTR [r8]
   1400364ac:	(bad)  
   1400364ad:	add    BYTE PTR [rax],al
   1400364af:	add    dh,bl
   1400364b1:	add    r8b,BYTE PTR [r8]
   1400364b4:	add    eax,0xfa000000
   1400364b9:	add    r8b,BYTE PTR [r8]
   1400364bc:	add    eax,0x15000000
   1400364c1:	rex.RX add r8b,BYTE PTR [rax]
   1400364c4:	add    eax,0x30000000
   1400364c9:	rex.RX add r8b,BYTE PTR [rax]
   1400364cc:	cmp    eax,DWORD PTR [rax]
   1400364ce:	add    BYTE PTR [rax],al
   1400364d0:	rex.WXB
   1400364d1:	rex.RX add r8b,BYTE PTR [rax]
   1400364d4:	add    eax,0x4b000000
   1400364d9:	rex.RX add r8b,BYTE PTR [rax]
   1400364dc:	cmp    eax,0x67000000
   1400364e1:	rex.RX add r8b,BYTE PTR [rax]
   1400364e4:	add    eax,0x80000000
   1400364e9:	rex.RX add r8b,BYTE PTR [rax]
   1400364ec:	add    eax,0x9b000000
   1400364f1:	rex.RX add r8b,BYTE PTR [rax]
   1400364f4:	add    eax,0xb6000000
   1400364f9:	rex.RX add r8b,BYTE PTR [rax]
   1400364fc:	add    BYTE PTR [r8],al
   1400364ff:	add    cl,dl
   140036501:	rex.RX add r8b,BYTE PTR [rax]
   140036504:	add    eax,0xd1000000
   140036509:	rex.RX add r8b,BYTE PTR [rax]
   14003650c:	rex.XB add BYTE PTR [r8],al
   14003650f:	add    ch,ch
   140036511:	rex.RX add r8b,BYTE PTR [rax]
   140036514:	add    eax,0x6000000
   140036519:	rex.RXB add r8b,BYTE PTR [r8]
   14003651c:	add    eax,0x21000000
   140036521:	rex.RXB add r8b,BYTE PTR [r8]
   140036524:	add    eax,0x3c000000
   140036529:	rex.RXB add r8b,BYTE PTR [r8]
   14003652c:	rex.RXB add BYTE PTR [r8],r8b
   14003652f:	add    BYTE PTR [rdi+0x47],dl
   140036532:	add    al,BYTE PTR [rax]
   140036534:	add    eax,0x57000000
   140036539:	rex.RXB add r8b,BYTE PTR [r8]
   14003653c:	rex.WB add BYTE PTR [r8],al
   14003653f:	add    BYTE PTR [rbx+0x47],dh
   140036542:	add    al,BYTE PTR [rax]
   140036544:	add    eax,0x8c000000
   140036549:	rex.RXB add r8b,BYTE PTR [r8]
   14003654c:	add    eax,0xa7000000
   140036551:	rex.RXB add r8b,BYTE PTR [r8]
   140036554:	rex.WR add BYTE PTR [rax],r8b
   140036557:	add    dl,al
   140036559:	rex.RXB add r8b,BYTE PTR [r8]
   14003655c:	rex.WRB add BYTE PTR [r8],r8b
   14003655f:	add    ch,bl
   140036561:	rex.RXB add r8b,BYTE PTR [r8]
   140036564:	rex.WRX add BYTE PTR [rax],r8b
   140036567:	add    cl,bh
   140036569:	rex.RXB add r8b,BYTE PTR [r8]
   14003656c:	rex.WRXB add BYTE PTR [r8],r8b
   14003656f:	add    BYTE PTR [rax+rcx*2],dl
   140036572:	add    al,BYTE PTR [rax]
   140036574:	rex.WRXB add BYTE PTR [r8],r8b
   140036577:	add    BYTE PTR [rdi],ch
   140036579:	rex.W add al,BYTE PTR [rax]
   14003657c:	rex.WRXB add BYTE PTR [r8],r8b
   14003657f:	add    BYTE PTR [rdx+0x48],cl
   140036582:	add    al,BYTE PTR [rax]
   140036584:	rex.WRXB add BYTE PTR [r8],r8b
   140036587:	add    BYTE PTR [rbp+0x48],ah
   14003658a:	add    al,BYTE PTR [rax]
   14003658c:	rex.WRXB add BYTE PTR [r8],r8b
   14003658f:	add    BYTE PTR [rax+0x4f000248],al
   140036595:	add    BYTE PTR [rax],al
   140036597:	add    BYTE PTR [rbx+0x4f000248],bl
   14003659d:	add    BYTE PTR [rax],al
   14003659f:	add    BYTE PTR [rsi+0x4f000248],dh
   1400365a5:	add    BYTE PTR [rax],al
   1400365a7:	add    cl,dl
   1400365a9:	rex.W add al,BYTE PTR [rax]
   1400365ac:	rex.WRXB add BYTE PTR [r8],r8b
   1400365af:	add    ah,ch
   1400365b1:	rex.W add al,BYTE PTR [rax]
   1400365b4:	rex.WRXB add BYTE PTR [r8],r8b
   1400365b7:	add    BYTE PTR [rdi],al
   1400365b9:	rex.WB add al,BYTE PTR [r8]
   1400365bc:	add    eax,0x22000000
   1400365c1:	rex.WB add al,BYTE PTR [r8]
   1400365c4:	add    eax,0x3d000000
   1400365c9:	rex.WB add al,BYTE PTR [r8]
   1400365cc:	add    eax,0x58000000
   1400365d1:	rex.WB add al,BYTE PTR [r8]
   1400365d4:	add    eax,0x73000000
   1400365d9:	rex.WB add al,BYTE PTR [r8]
   1400365dc:	add    eax,0x8e000000
   1400365e1:	rex.WB add al,BYTE PTR [r8]
   1400365e4:	add    eax,0xa9000000
   1400365e9:	rex.WB add al,BYTE PTR [r8]
   1400365ec:	add    eax,0xc4000000
   1400365f1:	rex.WB add al,BYTE PTR [r8]
   1400365f4:	add    eax,0xdf000000
   1400365f9:	rex.WB add al,BYTE PTR [r8]
   1400365fc:	add    eax,0xfa000000
   140036601:	rex.WB add al,BYTE PTR [r8]
   140036604:	add    eax,0x15000000
   140036609:	rex.WX add al,BYTE PTR [rax]
   14003660c:	add    eax,0x30000000
   140036611:	rex.WX add al,BYTE PTR [rax]
   140036614:	add    eax,0x4b000000
   140036619:	rex.WX add al,BYTE PTR [rax]
   14003661c:	add    BYTE PTR gs:[rax],al
   14003661f:	add    BYTE PTR [rsi+0x4a],ah
   140036622:	add    al,BYTE PTR [rax]
   140036624:	add    eax,0x66000000
   140036629:	rex.WX add al,BYTE PTR [rax]
   14003662c:	add    eax,0x82000000
   140036631:	rex.WX add al,BYTE PTR [rax]
   140036634:	add    eax,0x9d000000
   140036639:	rex.WX add al,BYTE PTR [rax]
   14003663c:	add    eax,0xb8000000
   140036641:	rex.WX add al,BYTE PTR [rax]
   140036644:	add    eax,0xd3000000
   140036649:	rex.WX add al,BYTE PTR [rax]
   14003664c:	add    eax,0xee000000
   140036651:	rex.WX add al,BYTE PTR [rax]
   140036654:	add    eax,0x9000000
   140036659:	rex.WXB add al,BYTE PTR [r8]
   14003665c:	ins    DWORD PTR es:[rdi],dx
   14003665d:	add    BYTE PTR [rax],al
   14003665f:	add    BYTE PTR [rip+0x500024b],ah        # 0x1450368b0
   140036665:	add    BYTE PTR [rax],al
   140036667:	add    BYTE PTR [rax+0x4b],al
   14003666a:	add    al,BYTE PTR [rax]
   14003666c:	add    eax,0x5b000000
   140036671:	rex.WXB add al,BYTE PTR [r8]
   140036674:	jo     0x140036676
   140036676:	add    BYTE PTR [rax],al
   140036678:	jbe    0x1400366c5
   14003667a:	add    al,BYTE PTR [rax]
   14003667c:	jno    0x14003667e
   14003667e:	add    BYTE PTR [rax],al
   140036680:	xchg   ecx,eax
   140036681:	rex.WXB add al,BYTE PTR [r8]
   140036684:	jb     0x140036686
   140036686:	add    BYTE PTR [rax],al
   140036688:	lods   eax,DWORD PTR ds:[rsi]
   140036689:	rex.WXB add al,BYTE PTR [r8]
   14003668c:	jae    0x14003668e
   14003668e:	add    BYTE PTR [rax],al
   140036690:	enter  0x24b,0x0
   140036694:	jae    0x140036696
   140036696:	add    BYTE PTR [rax],al
   140036698:	jrcxz  0x1400366e5
   14003669a:	add    al,BYTE PTR [rax]
   14003669c:	jae    0x14003669e
   14003669e:	add    BYTE PTR [rax],al
   1400366a0:	dec    BYTE PTR [rbx+0x2]
   1400366a3:	add    BYTE PTR [rbx+0x0],dh
   1400366a6:	add    BYTE PTR [rax],al
   1400366a8:	sbb    DWORD PTR [rdx+rax*1+0x0],ecx
   1400366ac:	jae    0x1400366ae
   1400366ae:	add    BYTE PTR [rax],al
   1400366b0:	xor    al,0x4c
   1400366b2:	add    al,BYTE PTR [rax]
   1400366b4:	jae    0x1400366b6
   1400366b6:	add    BYTE PTR [rax],al
   1400366b8:	rex.WRXB
   1400366b9:	rex.WR add r8b,BYTE PTR [rax]
   1400366bc:	jae    0x1400366be
   1400366be:	add    BYTE PTR [rax],al
   1400366c0:	push   0x4c
   1400366c2:	add    al,BYTE PTR [rax]
   1400366c4:	rol    BYTE PTR [rsi-0xffff],0xff
   1400366cb:	call   QWORD PTR [rbx]
   1400366cd:	xchg   DWORD PTR [rcx],eax
   1400366cf:	add    BYTE PTR [rax],al
   1400366d1:	add    BYTE PTR [rax],al
   1400366d3:	add    BYTE PTR [rax-0x79],bl
   1400366d6:	add    DWORD PTR [rax],eax
   1400366d8:	add    DWORD PTR [rax],eax
   1400366da:	add    BYTE PTR [rax],al
   1400366dc:	jae    0x140036665
   1400366de:	add    DWORD PTR [rax],eax
   1400366e0:	add    BYTE PTR [rax],al
   1400366e2:	add    BYTE PTR [rax],al
   1400366e4:	lea    eax,[rdi+0x20001]
   1400366ea:	add    BYTE PTR [rax],al
   1400366ec:	(bad)  
   1400366ed:	xchg   DWORD PTR [rcx],eax
   1400366ef:	add    BYTE PTR [rbx],al
   1400366f1:	add    BYTE PTR [rax],al
   1400366f3:	add    dh,dl
   1400366f5:	xchg   DWORD PTR [rcx],eax
   1400366f7:	add    BYTE PTR [rax+rax*1],al
   1400366fa:	add    BYTE PTR [rax],al
   1400366fc:	loope  0x140036685
   1400366fe:	add    DWORD PTR [rax],eax
   140036700:	add    eax,DWORD PTR [rax]
   140036702:	add    BYTE PTR [rax],al
   140036704:	test   DWORD PTR [rdi+0x50001],0x88400000
   14003670e:	add    DWORD PTR [rax],eax
   140036710:	(bad)  
   140036711:	add    BYTE PTR [rax],al
   140036713:	add    BYTE PTR [rbx-0x78],dl
   140036716:	add    DWORD PTR [rax],eax
   140036718:	add    eax,0xb3000000
   14003671d:	mov    BYTE PTR [rcx],al
   14003671f:	add    BYTE PTR [rdi],al
   140036721:	add    BYTE PTR [rax],al
   140036723:	add    BYTE PTR [rsi+0x5000188],bh
   140036729:	add    BYTE PTR [rax],al
   14003672b:	add    dh,ch
   14003672d:	mov    BYTE PTR [rcx],al
   14003672f:	add    BYTE PTR [rax],cl
   140036731:	add    BYTE PTR [rax],al
   140036733:	add    BYTE PTR [rcx],al
   140036735:	mov    DWORD PTR [rcx],eax
   140036737:	add    BYTE PTR [rip+0x53000000],al        # 0x19303673d
   14003673d:	mov    DWORD PTR [rcx],eax
   14003673f:	add    BYTE PTR [rcx],cl
   140036741:	add    BYTE PTR [rax],al
   140036743:	add    BYTE PTR [rax-0x77],bh
   140036746:	add    DWORD PTR [rax],eax
   140036748:	add    eax,0xc8000000
   14003674d:	mov    DWORD PTR [rcx],eax
   14003674f:	add    BYTE PTR [rdx],cl
   140036751:	add    BYTE PTR [rax],al
   140036753:	add    bl,dl
   140036755:	mov    DWORD PTR [rcx],eax
   140036757:	add    BYTE PTR [rip+0x3000000],al        # 0x14303675d
   14003675d:	mov    al,BYTE PTR [rcx]
   14003675f:	add    BYTE PTR [rbx],cl
   140036761:	add    BYTE PTR [rax],al
   140036763:	add    BYTE PTR [rsi],dl
   140036765:	mov    al,BYTE PTR [rcx]
   140036767:	add    BYTE PTR [rip+0x68000000],al        # 0x1a803676d
   14003676d:	mov    al,BYTE PTR [rcx]
   14003676f:	add    BYTE PTR [rax+rax*1],cl
   140036772:	add    BYTE PTR [rax],al
   140036774:	lea    ecx,[rdx+0x50001]
   14003677a:	add    BYTE PTR [rax],al
   14003677c:	fisttp QWORD PTR [rdx+0xd0001]
   140036782:	add    BYTE PTR [rax],al
   140036784:	call   0x145036913
   140036789:	add    BYTE PTR [rax],al
   14003678b:	add    BYTE PTR [rax],bl
   14003678d:	mov    eax,DWORD PTR [rcx]
   14003678f:	add    BYTE PTR [rsi],cl
   140036791:	add    BYTE PTR [rax],al
   140036793:	add    BYTE PTR [rbx],ch
   140036795:	mov    eax,DWORD PTR [rcx]
   140036797:	add    BYTE PTR [rip+0x7d000000],al        # 0x1bd03679d
   14003679d:	mov    eax,DWORD PTR [rcx]
   14003679f:	add    BYTE PTR [rdi],cl
   1400367a1:	add    BYTE PTR [rax],al
   1400367a3:	add    BYTE PTR [rbx+0x500018b],ah
   1400367a9:	add    BYTE PTR [rax],al
   1400367ab:	add    bl,dh
   1400367ad:	mov    eax,DWORD PTR [rcx]
   1400367af:	add    BYTE PTR [rax],dl
   1400367b1:	add    BYTE PTR [rax],al
   1400367b3:	add    dh,bh
   1400367b5:	mov    eax,DWORD PTR [rcx]
   1400367b7:	add    BYTE PTR [rip+0x2e000000],al        # 0x16e0367bd
   1400367bd:	mov    WORD PTR [rcx],es
   1400367bf:	add    BYTE PTR [rcx],dl
   1400367c1:	add    BYTE PTR [rax],al
   1400367c3:	add    BYTE PTR [rcx-0x74],al
   1400367c6:	add    DWORD PTR [rax],eax
   1400367c8:	add    eax,0x93000000
   1400367cd:	mov    WORD PTR [rcx],es
   1400367cf:	add    BYTE PTR [rdx],dl
   1400367d1:	add    BYTE PTR [rax],al
   1400367d3:	add    BYTE PTR [rcx+0x500018c],bh
   1400367d9:	add    BYTE PTR [rax],al
   1400367db:	add    BYTE PTR [rbx],ch
   1400367dd:	lea    eax,[rcx]
   1400367df:	add    BYTE PTR [rbx],dl
   1400367e1:	add    BYTE PTR [rax],al
   1400367e3:	add    BYTE PTR [rsi],dh
   1400367e5:	lea    eax,[rcx]
   1400367e7:	add    BYTE PTR [rip+0x66000000],al        # 0x1a60367ed
   1400367ed:	lea    eax,[rcx]
   1400367ef:	add    BYTE PTR [rax+rax*1],dl
   1400367f2:	add    BYTE PTR [rax],al
   1400367f4:	jns    0x140036783
   1400367f6:	add    DWORD PTR [rax],eax
   1400367f8:	add    eax,0xcb000000
   1400367fd:	lea    eax,[rcx]
   1400367ff:	add    BYTE PTR [rip+0xfffffffff1000000],dl        # 0x131036805
   140036805:	lea    eax,[rcx]
   140036807:	add    BYTE PTR [rip+0x7d000000],al        # 0x1bd03680d
   14003680d:	mov    es,WORD PTR [rcx]
   14003680f:	add    BYTE PTR [rsi],dl
   140036811:	add    BYTE PTR [rax],al
   140036813:	add    BYTE PTR [rax+0x500018e],cl
   140036819:	add    BYTE PTR [rax],al
   14003681b:	add    BYTE PTR [rax+0x1700018e],bh
   140036821:	add    BYTE PTR [rax],al
   140036823:	add    bl,cl
   140036825:	mov    es,WORD PTR [rcx]
   140036827:	add    BYTE PTR [rip+0x21000000],al        # 0x16103682d
   14003682d:	pop    QWORD PTR [rcx]
   14003682f:	add    BYTE PTR [rax],bl
   140036831:	add    BYTE PTR [rax],al
   140036833:	add    BYTE PTR [rdi+rcx*4],dh
   140036836:	add    DWORD PTR [rax],eax
   140036838:	add    eax,0xa6000000
   14003683d:	pop    QWORD PTR [rcx]
   14003683f:	add    BYTE PTR [rcx],bl
   140036841:	add    BYTE PTR [rax],al
   140036843:	add    BYTE PTR [rcx+0x500018f],dh
   140036849:	add    BYTE PTR [rax],al
   14003684b:	add    cl,ah
   14003684d:	pop    QWORD PTR [rcx]
   14003684f:	add    BYTE PTR [rdx],bl
   140036851:	add    BYTE PTR [rax],al
   140036853:	add    ah,dh
   140036855:	pop    QWORD PTR [rcx]
   140036857:	add    BYTE PTR [rip+0x4a000000],al        # 0x18a03685d
   14003685d:	nop
   14003685e:	add    DWORD PTR [rax],eax
   140036860:	sbb    eax,DWORD PTR [rax]
   140036862:	add    BYTE PTR [rax],al
   140036864:	imul   edx,DWORD PTR [rax+0x1d0001],0x909b0000
   14003686e:	add    DWORD PTR [rax],eax
   140036870:	add    eax,0xe5000000
   140036875:	nop
   140036876:	add    DWORD PTR [rax],eax
   140036878:	(bad)  
   140036879:	add    BYTE PTR [rax],al
   14003687b:	add    al,dh
   14003687d:	nop
   14003687e:	add    DWORD PTR [rax],eax
   140036880:	add    eax,0x20000000
   140036885:	xchg   ecx,eax
   140036886:	add    DWORD PTR [rax],eax
   140036888:	(bad)  
   140036889:	add    BYTE PTR [rax],al
   14003688b:	add    BYTE PTR [rbx],dh
   14003688d:	xchg   ecx,eax
   14003688e:	add    DWORD PTR [rax],eax
   140036890:	add    eax,0x85000000
   140036895:	xchg   ecx,eax
   140036896:	add    DWORD PTR [rax],eax
   140036898:	and    BYTE PTR [rax],al
   14003689a:	add    BYTE PTR [rax],al
   14003689c:	movabs ds:0xec00000005000191,eax
   1400368a5:	xchg   ecx,eax
   1400368a6:	add    DWORD PTR [rax],eax
   1400368a8:	and    DWORD PTR [rax],eax
   1400368aa:	add    BYTE PTR [rax],al
   1400368ac:	not    DWORD PTR [rcx+0x50001]
   1400368b2:	add    BYTE PTR [rax],al
   1400368b4:	(bad)  
   1400368b5:	xchg   edx,eax
   1400368b6:	add    DWORD PTR [rax],eax
   1400368b8:	and    al,BYTE PTR [rax]
   1400368ba:	add    BYTE PTR [rax],al
   1400368bc:	cmp    dl,BYTE PTR [rdx+0x50001]
   1400368c2:	add    BYTE PTR [rax],al
   1400368c4:	nop
   1400368c5:	xchg   edx,eax
   1400368c6:	add    DWORD PTR [rax],eax
   1400368c8:	and    eax,DWORD PTR [rax]
   1400368ca:	add    BYTE PTR [rax],al
   1400368cc:	scas   eax,DWORD PTR es:[rdi]
   1400368cd:	xchg   edx,eax
   1400368ce:	add    DWORD PTR [rax],eax
   1400368d0:	and    eax,0xec000000
   1400368d5:	xchg   edx,eax
   1400368d6:	add    DWORD PTR [rax],eax
   1400368d8:	add    BYTE PTR es:[rax],al
   1400368db:	add    BYTE PTR [rbx-0x6d],bl
   1400368de:	add    DWORD PTR [rax],eax
   1400368e0:	and    eax,0x6a000000
   1400368e5:	xchg   ebx,eax
   1400368e6:	add    DWORD PTR [rax],eax
   1400368e8:	add    eax,0xb4000000
   1400368ed:	xchg   ebx,eax
   1400368ee:	add    DWORD PTR [rax],eax
   1400368f0:	(bad)  
   1400368f1:	add    BYTE PTR [rax],al
   1400368f3:	add    BYTE PTR [rdi+0x5000193],bh
   1400368f9:	add    BYTE PTR [rax],al
   1400368fb:	add    bh,ch
   1400368fd:	xchg   ebx,eax
   1400368fe:	add    DWORD PTR [rax],eax
   140036900:	sub    BYTE PTR [rax],al
   140036902:	add    BYTE PTR [rax],al
   140036904:	add    dl,BYTE PTR [rcx+rax*1+0x500]
   14003690b:	add    BYTE PTR [rax-0x6c],bl
   14003690e:	add    DWORD PTR [rax],eax
   140036910:	sub    DWORD PTR [rax],eax
   140036912:	add    BYTE PTR [rax],al
   140036914:	ja     0x1400368aa
   140036916:	add    DWORD PTR [rax],eax
   140036918:	sub    eax,DWORD PTR [rax]
   14003691a:	add    BYTE PTR [rax],al
   14003691c:	mov    cl,0x94
   14003691e:	add    DWORD PTR [rax],eax
   140036920:	sub    al,0x0
   140036922:	add    BYTE PTR [rax],al
   140036924:	(bad)  
   140036925:	xchg   ebp,eax
   140036926:	add    DWORD PTR [rax],eax
   140036928:	sub    eax,DWORD PTR [rax]
   14003692a:	add    BYTE PTR [rax],al
   14003692c:	and    edx,DWORD PTR [rbp+0x50001]
   140036932:	add    BYTE PTR [rax],al
   140036934:	ins    DWORD PTR es:[rdi],dx
   140036935:	xchg   ebp,eax
   140036936:	add    DWORD PTR [rax],eax
   140036938:	sub    eax,0x78000000
   14003693d:	xchg   ebp,eax
   14003693e:	add    DWORD PTR [rax],eax
   140036940:	add    eax,0xa8000000
   140036945:	xchg   ebp,eax
   140036946:	add    DWORD PTR [rax],eax
   140036948:	add    BYTE PTR cs:[rax],al
   14003694b:	add    BYTE PTR [rbx+0x5000195],bh
   140036951:	add    BYTE PTR [rax],al
   140036953:	add    BYTE PTR [rcx],dl
   140036955:	xchg   esi,eax
   140036956:	add    DWORD PTR [rax],eax
   140036958:	(bad)  
   140036959:	add    BYTE PTR [rax],al
   14003695b:	add    BYTE PTR [rax],dh
   14003695d:	xchg   esi,eax
   14003695e:	add    DWORD PTR [rax],eax
   140036960:	xor    DWORD PTR [rax],eax
   140036962:	add    BYTE PTR [rax],al
   140036964:	ins    DWORD PTR es:[rdi],dx
   140036965:	xchg   esi,eax
   140036966:	add    DWORD PTR [rax],eax
   140036968:	xor    al,BYTE PTR [rax]
   14003696a:	add    BYTE PTR [rax],al
   14003696c:	fcom   QWORD PTR [rsi+0x310001]
   140036972:	add    BYTE PTR [rax],al
   140036974:	jmp    0x14003690c
   140036976:	add    DWORD PTR [rax],eax
   140036978:	add    eax,0x35000000
   14003697d:	xchg   edi,eax
   14003697e:	add    DWORD PTR [rax],eax
   140036980:	xor    eax,DWORD PTR [rax]
   140036982:	add    BYTE PTR [rax],al
   140036984:	rex xchg edi,eax
   140036986:	add    DWORD PTR [rax],eax
   140036988:	add    eax,0x70000000
   14003698d:	xchg   edi,eax
   14003698e:	add    DWORD PTR [rax],eax
   140036990:	xor    al,0x0
   140036992:	add    BYTE PTR [rax],al
   140036994:	adc    DWORD PTR [rdi+0x50001],0x0
   14003699b:	add    cl,bl
   14003699d:	xchg   edi,eax
   14003699e:	add    DWORD PTR [rax],eax
   1400369a0:	xor    eax,0xf8000000
   1400369a5:	xchg   edi,eax
   1400369a6:	add    DWORD PTR [rax],eax
   1400369a8:	(bad)  
   1400369a9:	add    BYTE PTR [rax],al
   1400369ab:	add    BYTE PTR [rip+0x38000198],dh        # 0x178036b49
   1400369b1:	add    BYTE PTR [rax],al
   1400369b3:	add    BYTE PTR [rax+rbx*4+0x370001],ah
   1400369ba:	add    BYTE PTR [rax],al
   1400369bc:	mov    bl,0x98
   1400369be:	add    DWORD PTR [rax],eax
   1400369c0:	add    eax,0xfd000000
   1400369c5:	cwde   
   1400369c6:	add    DWORD PTR [rax],eax
   1400369c8:	cmp    DWORD PTR [rax],eax
   1400369ca:	add    BYTE PTR [rax],al
   1400369cc:	or     BYTE PTR [rcx+0x50001],bl
   1400369d2:	add    BYTE PTR [rax],al
   1400369d4:	cmp    BYTE PTR [rcx+0x3a0001],bl
   1400369da:	add    BYTE PTR [rax],al
   1400369dc:	rex.WXB cqo 
   1400369de:	add    DWORD PTR [rax],eax
   1400369e0:	add    eax,0xa1000000
   1400369e5:	cdq    
   1400369e6:	add    DWORD PTR [rax],eax
   1400369e8:	cmp    eax,DWORD PTR [rax]
   1400369ea:	add    BYTE PTR [rax],al
   1400369ec:	rcr    BYTE PTR [rcx+0x3d0001],0x0
   1400369f3:	add    dl,bh
   1400369f5:	cdq    
   1400369f6:	add    DWORD PTR [rax],eax
   1400369f8:	add    BYTE PTR ds:[rax],al
   1400369fb:	add    BYTE PTR [rax-0x66],ah
   1400369fe:	add    DWORD PTR [rax],eax
   140036a00:	cmp    eax,0x6c000000
   140036a05:	(bad)  
   140036a06:	add    DWORD PTR [rax],eax
   140036a08:	add    eax,0xb6000000
   140036a0d:	(bad)  
   140036a0e:	add    DWORD PTR [rax],eax
   140036a10:	(bad)  
   140036a11:	add    BYTE PTR [rax],al
   140036a13:	add    cl,al
   140036a15:	(bad)  
   140036a16:	add    DWORD PTR [rax],eax
   140036a18:	add    eax,0xf1000000
   140036a1d:	(bad)  
   140036a1e:	add    DWORD PTR [rax],eax
   140036a20:	add    BYTE PTR [rax],al
   140036a23:	add    BYTE PTR [rbx+rbx*4],al
   140036a26:	add    DWORD PTR [rax],eax
   140036a28:	add    eax,0x5a000000
   140036a2d:	fwait
   140036a2e:	add    DWORD PTR [rax],eax
   140036a30:	add    BYTE PTR [r8],al
   140036a33:	add    BYTE PTR [rcx-0x65],bh
   140036a36:	add    DWORD PTR [rax],eax
   140036a38:	rex.XB add BYTE PTR [r8],al
   140036a3b:	add    BYTE PTR [rbx+0x4400019b],dh
   140036a41:	add    BYTE PTR [rax],al
   140036a43:	add    BYTE PTR [rcx],bl
   140036a45:	pushf  
   140036a46:	add    DWORD PTR [rax],eax
   140036a48:	rex.XB add BYTE PTR [r8],al
   140036a4b:	add    BYTE PTR [rip+0x500019c],ah        # 0x145036bed
   140036a51:	add    BYTE PTR [rax],al
   140036a53:	add    BYTE PTR [rdi-0x64],ch
   140036a56:	add    DWORD PTR [rax],eax
   140036a58:	add    BYTE PTR [r8],r8b
   140036a5b:	add    BYTE PTR [rdx-0x64],bh
   140036a5e:	add    DWORD PTR [rax],eax
   140036a60:	add    eax,0xaa000000
   140036a65:	pushf  
   140036a66:	add    DWORD PTR [rax],eax
   140036a68:	rex.RX add BYTE PTR [rax],r8b
   140036a6b:	add    BYTE PTR [rbp+0x500019c],bh
   140036a71:	add    BYTE PTR [rax],al
   140036a73:	add    BYTE PTR [rbx],dl
   140036a75:	popf   
   140036a76:	add    DWORD PTR [rax],eax
   140036a78:	rex.RXB add BYTE PTR [r8],r8b
   140036a7b:	add    BYTE PTR [rdx],dh
   140036a7d:	popf   
   140036a7e:	add    DWORD PTR [rax],eax
   140036a80:	rex.WB add BYTE PTR [r8],al
   140036a83:	add    BYTE PTR [rbp+rbx*4+0x1],ch
   140036a87:	add    BYTE PTR [rdx+0x0],cl
   140036a8a:	add    BYTE PTR [rax],al
   140036a8c:	rcr    BYTE PTR [rbp+0x490001],cl
   140036a92:	add    BYTE PTR [rax],al
   140036a94:	ficomp WORD PTR [rbp+0x50001]
   140036a9a:	add    BYTE PTR [rax],al
   140036a9c:	rex.XB sahf 
   140036a9e:	add    DWORD PTR [rax],eax
   140036aa0:	rex.WXB add BYTE PTR [r8],al
   140036aa3:	add    BYTE PTR [rsi-0x62],cl
   140036aa6:	add    DWORD PTR [rax],eax
   140036aa8:	add    eax,0x67000000
   140036aad:	sahf   
   140036aae:	add    DWORD PTR [rax],eax
   140036ab0:	rex.WR add BYTE PTR [rax],r8b
   140036ab3:	add    cl,dh
   140036ab5:	sahf   
   140036ab6:	add    DWORD PTR [rax],eax
   140036ab8:	rex.WRB add BYTE PTR [r8],r8b
   140036abb:	add    BYTE PTR [rax],al
   140036abd:	lahf   
   140036abe:	add    DWORD PTR [rax],eax
   140036ac0:	rex.WRX add BYTE PTR [rax],r8b
   140036ac3:	add    BYTE PTR [rbx],ah
   140036ac5:	lahf   
   140036ac6:	add    DWORD PTR [rax],eax
   140036ac8:	rex.WRXB add BYTE PTR [r8],r8b
   140036acb:	add    BYTE PTR [rdx-0x61],dh
   140036ace:	add    DWORD PTR [rax],eax
   140036ad0:	push   rax
   140036ad1:	add    BYTE PTR [rax],al
   140036ad3:	add    BYTE PTR [rbp+0x4f00019f],al
   140036ad9:	add    BYTE PTR [rax],al
   140036adb:	add    ch,ah
   140036add:	lahf   
   140036ade:	add    DWORD PTR [rax],eax
   140036ae0:	push   rcx
   140036ae1:	add    BYTE PTR [rax],al
   140036ae3:	add    al,dh
   140036ae5:	lahf   
   140036ae6:	add    DWORD PTR [rax],eax
   140036ae8:	rex.WRXB add BYTE PTR [r8],r8b
   140036aeb:	add    BYTE PTR [rax],ah
   140036aed:	movabs al,ds:0xa033000000520001
   140036af6:	add    DWORD PTR [rax],eax
   140036af8:	rex.WRXB add BYTE PTR [r8],r8b
   140036afb:	add    BYTE PTR [rbp+0x530001a0],al
   140036b01:	add    BYTE PTR [rax],al
   140036b03:	add    BYTE PTR [rbx+0x4f0001a0],ah
   140036b09:	add    BYTE PTR [rax],al
   140036b0b:	add    bl,dh
   140036b0d:	movabs al,ds:0xa0fe000000540001
   140036b16:	add    DWORD PTR [rax],eax
   140036b18:	rex.WRXB add BYTE PTR [r8],r8b
   140036b1b:	add    BYTE PTR [rsi],ch
   140036b1d:	movabs eax,ds:0xa141000000550001
   140036b26:	add    DWORD PTR [rax],eax
   140036b28:	rex.WRXB add BYTE PTR [r8],r8b
   140036b2b:	add    BYTE PTR [rdi+0x560001a1],dl
   140036b31:	add    BYTE PTR [rax],al
   140036b33:	add    BYTE PTR [rsi+0x4f0001a1],dh
   140036b39:	add    BYTE PTR [rax],al
   140036b3b:	add    BYTE PTR [rcx-0x5e],cl
   140036b3e:	add    DWORD PTR [rax],eax
   140036b40:	push   rdi
   140036b41:	add    BYTE PTR [rax],al
   140036b43:	add    BYTE PTR [rdx+riz*4+0x1],dl
   140036b47:	add    BYTE PTR [rdi+0x0],cl
   140036b4a:	add    BYTE PTR [rax],al
   140036b4c:	test   BYTE PTR [rdx+0x580001],ah
   140036b52:	add    BYTE PTR [rax],al
   140036b54:	xchg   edi,eax
   140036b55:	movabs ds:0xa2e90000004f0001,al
   140036b5e:	add    DWORD PTR [rax],eax
   140036b60:	pop    rcx
   140036b61:	add    BYTE PTR [rax],al
   140036b63:	add    BYTE PTR [rdi],al
   140036b65:	movabs ds:0xa3440000004f0001,eax
   140036b6e:	add    DWORD PTR [rax],eax
   140036b70:	rex.WRX add BYTE PTR [rax],r8b
   140036b73:	add    BYTE PTR [rdx-0x5d],dl
   140036b76:	add    DWORD PTR [rax],eax
   140036b78:	rex.WRB add BYTE PTR [r8],r8b
   140036b7b:	add    BYTE PTR [rcx-0x5d],ah
   140036b7e:	add    DWORD PTR [rax],eax
   140036b80:	rex.WR add BYTE PTR [rax],r8b
   140036b83:	add    BYTE PTR [rdx-0x5d],bh
   140036b86:	add    DWORD PTR [rax],eax
   140036b88:	add    eax,0xd0000000
   140036b8d:	movabs ds:0xa3db0000005a0001,eax
   140036b96:	add    DWORD PTR [rax],eax
   140036b98:	add    eax,0xb000000
   140036b9d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036b9e:	add    DWORD PTR [rax],eax
   140036ba0:	pop    rbx
   140036ba1:	add    BYTE PTR [rax],al
   140036ba3:	add    BYTE PTR [rsi],bl
   140036ba5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036ba6:	add    DWORD PTR [rax],eax
   140036ba8:	add    eax,0x74000000
   140036bad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036bae:	add    DWORD PTR [rax],eax
   140036bb0:	pop    rsp
   140036bb1:	add    BYTE PTR [rax],al
   140036bb3:	add    BYTE PTR [rdi+0x50001a4],al
   140036bb9:	add    BYTE PTR [rax],al
   140036bbb:	add    bh,ah
   140036bbd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036bbe:	add    DWORD PTR [rax],eax
   140036bc0:	pop    rbp
   140036bc1:	add    BYTE PTR [rax],al
   140036bc3:	add    dl,dh
   140036bc5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036bc6:	add    DWORD PTR [rax],eax
   140036bc8:	add    eax,0x22000000
   140036bcd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036bce:	add    DWORD PTR [rax],eax
   140036bd0:	pop    rsi
   140036bd1:	add    BYTE PTR [rax],al
   140036bd3:	add    BYTE PTR [rip+0x50001a5],dh        # 0x145036d7e
   140036bd9:	add    BYTE PTR [rax],al
   140036bdb:	add    BYTE PTR [rdi+0x5f0001a5],al
   140036be1:	add    BYTE PTR [rax],al
   140036be3:	add    BYTE PTR [rcx+0x50001a5],ch
   140036be9:	add    BYTE PTR [rax],al
   140036beb:	add    BYTE PTR [rdi],cl
   140036bed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036bee:	add    DWORD PTR [rax],eax
   140036bf0:	(bad)  
   140036bf1:	add    BYTE PTR [rax],al
   140036bf3:	add    BYTE PTR [rdx],bl
   140036bf5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036bf6:	add    DWORD PTR [rax],eax
   140036bf8:	add    eax,0x4a000000
   140036bfd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036bfe:	add    DWORD PTR [rax],eax
   140036c00:	(bad)  
   140036c01:	add    BYTE PTR [rax],al
   140036c03:	add    BYTE PTR [rbp-0x5a],bl
   140036c06:	add    DWORD PTR [rax],eax
   140036c08:	add    eax,0xaf000000
   140036c0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036c0e:	add    DWORD PTR [rax],eax
   140036c10:	(bad)  
   140036c11:	add    BYTE PTR [rax],al
   140036c13:	add    cl,dl
   140036c15:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036c16:	add    DWORD PTR [rax],eax
   140036c18:	add    eax,0x4d000000
   140036c1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036c1e:	add    DWORD PTR [rax],eax
   140036c20:	movsxd eax,DWORD PTR [rax]
   140036c22:	add    BYTE PTR [rax],al
   140036c24:	pop    rax
   140036c25:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036c26:	add    DWORD PTR [rax],eax
   140036c28:	add    eax,0x88000000
   140036c2d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036c2e:	add    DWORD PTR [rax],eax
   140036c30:	add    BYTE PTR fs:[rax],al
   140036c33:	add    BYTE PTR [rbx+0x50001a7],bl
   140036c39:	add    BYTE PTR [rax],al
   140036c3b:	add    cl,dh
   140036c3d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036c3e:	add    DWORD PTR [rax],eax
   140036c40:	add    BYTE PTR gs:[rax],al
   140036c43:	add    BYTE PTR [rax],dl
   140036c45:	test   al,0x1
   140036c47:	add    BYTE PTR [rdi+0x0],ah
   140036c4a:	add    BYTE PTR [rax],al
   140036c4c:	rex.WRXB test al,0x1
   140036c4f:	add    BYTE PTR [rip+0xffffffff99000000],al        # 0xd9036c55
   140036c55:	test   al,0x1
   140036c57:	add    BYTE PTR [rax+0x0],ch
   140036c5a:	add    BYTE PTR [rax],al
   140036c5c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036c5d:	test   al,0x1
   140036c5f:	add    BYTE PTR [rip+0xffffffffd4000000],al        # 0x114036c65
   140036c65:	test   al,0x1
   140036c67:	add    BYTE PTR [rcx+0x0],ch
   140036c6a:	add    BYTE PTR [rax],al
   140036c6c:	out    0xa8,eax
   140036c6e:	add    DWORD PTR [rax],eax
   140036c70:	add    eax,0x39000000
   140036c75:	test   eax,0x6a0001
   140036c7a:	add    BYTE PTR [rax],al
   140036c7c:	pop    rbx
   140036c7d:	test   eax,0x50001
   140036c82:	add    BYTE PTR [rax],al
   140036c84:	stos   DWORD PTR es:[rdi],eax
   140036c85:	test   eax,0x6b0001
   140036c8a:	add    BYTE PTR [rax],al
   140036c8c:	mov    dh,0xa9
   140036c8e:	add    DWORD PTR [rax],eax
   140036c90:	add    eax,0xe6000000
   140036c95:	test   eax,0x6c0001
   140036c9a:	add    BYTE PTR [rax],al
   140036c9c:	stc    
   140036c9d:	test   eax,0x50001
   140036ca2:	add    BYTE PTR [rax],al
   140036ca4:	xor    al,0xaa
   140036ca6:	add    DWORD PTR [rax],eax
   140036ca8:	ins    DWORD PTR es:[rdi],dx
   140036ca9:	add    BYTE PTR [rax],al
   140036cab:	add    BYTE PTR [rsi-0x56],ah
   140036cae:	add    DWORD PTR [rax],eax
   140036cb0:	outs   dx,BYTE PTR ds:[rsi]
   140036cb1:	add    BYTE PTR [rax],al
   140036cb3:	add    BYTE PTR [rbx+0x6d0001aa],ah
   140036cb9:	add    BYTE PTR [rax],al
   140036cbb:	add    dh,ah
   140036cbd:	stos   BYTE PTR es:[rdi],al
   140036cbe:	add    DWORD PTR [rax],eax
   140036cc0:	add    eax,0x5f000000
   140036cc5:	stos   DWORD PTR es:[rdi],eax
   140036cc6:	add    DWORD PTR [rax],eax
   140036cc8:	outs   dx,DWORD PTR ds:[rsi]
   140036cc9:	add    BYTE PTR [rax],al
   140036ccb:	add    BYTE PTR [rdx-0x55],ch
   140036cce:	add    DWORD PTR [rax],eax
   140036cd0:	add    eax,0x83000000
   140036cd5:	stos   DWORD PTR es:[rdi],eax
   140036cd6:	add    DWORD PTR [rax],eax
   140036cd8:	jo     0x140036cda
   140036cda:	add    BYTE PTR [rax],al
   140036cdc:	and    BYTE PTR [rcx+rax*1+0x7100],ch
   140036ce3:	add    BYTE PTR [rdi],ch
   140036ce5:	lods   al,BYTE PTR ds:[rsi]
   140036ce6:	add    DWORD PTR [rax],eax
   140036ce8:	jb     0x140036cea
   140036cea:	add    BYTE PTR [rax],al
   140036cec:	push   rdx
   140036ced:	lods   al,BYTE PTR ds:[rsi]
   140036cee:	add    DWORD PTR [rax],eax
   140036cf0:	jae    0x140036cf2
   140036cf2:	add    BYTE PTR [rax],al
   140036cf4:	movabs eax,ds:0xb4000000740001ac
   140036cfd:	lods   al,BYTE PTR ds:[rsi]
   140036cfe:	add    DWORD PTR [rax],eax
   140036d00:	jae    0x140036d02
   140036d02:	add    BYTE PTR [rax],al
   140036d04:	adc    al,0xad
   140036d06:	add    DWORD PTR [rax],eax
   140036d08:	jne    0x140036d0a
   140036d0a:	add    BYTE PTR [rax],al
   140036d0c:	(bad)  
   140036d0d:	lods   eax,DWORD PTR ds:[rsi]
   140036d0e:	add    DWORD PTR [rax],eax
   140036d10:	jae    0x140036d12
   140036d12:	add    BYTE PTR [rax],al
   140036d14:	rex.WRXB lods rax,QWORD PTR ds:[rsi]
   140036d16:	add    DWORD PTR [rax],eax
   140036d18:	jbe    0x140036d1a
   140036d1a:	add    BYTE PTR [rax],al
   140036d1c:	(bad)  
   140036d1d:	lods   eax,DWORD PTR ds:[rsi]
   140036d1e:	add    DWORD PTR [rax],eax
   140036d20:	jae    0x140036d22
   140036d22:	add    BYTE PTR [rax],al
   140036d24:	mov    ah,0xad
   140036d26:	add    DWORD PTR [rax],eax
   140036d28:	ja     0x140036d2a
   140036d2a:	add    BYTE PTR [rax],al
   140036d2c:	shr    BYTE PTR [rbp+0x730001],cl
   140036d32:	add    BYTE PTR [rax],al
   140036d34:	and    ch,BYTE PTR [rsi+0x780001]
   140036d3a:	add    BYTE PTR [rax],al
   140036d3c:	sub    eax,0x730001ae
   140036d41:	add    BYTE PTR [rax],al
   140036d43:	add    BYTE PTR [rbp-0x52],bl
   140036d46:	add    DWORD PTR [rax],eax
   140036d48:	jns    0x140036d4a
   140036d4a:	add    BYTE PTR [rax],al
   140036d4c:	jo     0x140036cfc
   140036d4e:	add    DWORD PTR [rax],eax
   140036d50:	jae    0x140036d52
   140036d52:	add    BYTE PTR [rax],al
   140036d54:	ret    0x1ae
   140036d57:	add    BYTE PTR [rdx+0x0],bh
   140036d5a:	add    BYTE PTR [rax],al
   140036d5c:	loopne 0x140036d0c
   140036d5e:	add    DWORD PTR [rax],eax
   140036d60:	jae    0x140036d62
   140036d62:	add    BYTE PTR [rax],al
   140036d64:	xor    DWORD PTR [rdi+0x720001],ebp
   140036d6a:	add    BYTE PTR [rax],al
   140036d6c:	(bad)  
   140036d6d:	scas   eax,DWORD PTR es:[rdi]
   140036d6e:	add    DWORD PTR [rax],eax
   140036d70:	jno    0x140036d72
   140036d72:	add    BYTE PTR [rax],al
   140036d74:	rex.WRX scas rax,QWORD PTR es:[rdi]
   140036d76:	add    DWORD PTR [rax],eax
   140036d78:	jo     0x140036d7a
   140036d7a:	add    BYTE PTR [rax],al
   140036d7c:	scas   eax,DWORD PTR es:[edi]
   140036d7e:	add    DWORD PTR [rax],eax
   140036d80:	add    eax,0xcd000000
   140036d85:	scas   eax,DWORD PTR es:[rdi]
   140036d86:	add    DWORD PTR [rax],eax
   140036d88:	add    eax,DWORD PTR [rax]
   140036d8a:	add    BYTE PTR [rax],al
   140036d8c:	fsubr  DWORD PTR [rdi+0x20001]
   140036d92:	add    BYTE PTR [rax],al
   140036d94:	jrcxz  0x140036d45
   140036d96:	add    DWORD PTR [rax],eax
   140036d98:	add    BYTE PTR [rax],al
   140036d9a:	add    BYTE PTR [rax],al
   140036d9c:	imul   BYTE PTR [rdi-0xffff]
   140036da2:	(bad)  
   140036da3:	inc    DWORD PTR [rcx]
   140036da5:	(bad)  
   140036da6:	add    al,BYTE PTR [rax]
   140036da8:	(bad)  
   140036da9:	xor    al,BYTE PTR [rdx]
   140036dab:	push   rax
   140036dac:	add    DWORD PTR [rsi],eax
   140036dae:	add    al,BYTE PTR [rax]
   140036db0:	(bad)  
   140036db1:	xor    al,BYTE PTR [rdx]
   140036db3:	push   rax
   140036db4:	add    DWORD PTR [rsi],eax
   140036db6:	add    al,BYTE PTR [rax]
   140036db8:	(bad)  
   140036db9:	xor    al,BYTE PTR [rdx]
   140036dbb:	push   rax
   140036dbc:	add    DWORD PTR [rsi],eax
   140036dbe:	add    al,BYTE PTR [rax]
   140036dc0:	(bad)  
   140036dc1:	xor    al,BYTE PTR [rdx]
   140036dc3:	push   rax
   140036dc4:	add    DWORD PTR [rsi],eax
   140036dc6:	add    al,BYTE PTR [rax]
   140036dc8:	(bad)  
   140036dc9:	xor    al,BYTE PTR [rdx]
   140036dcb:	push   rax
   140036dcc:	add    DWORD PTR [rsi],eax
   140036dce:	add    al,BYTE PTR [rax]
   140036dd0:	(bad)  
   140036dd1:	xor    al,BYTE PTR [rdx]
   140036dd3:	push   rax
   140036dd4:	add    DWORD PTR [rsi],eax
   140036dd6:	add    al,BYTE PTR [rax]
   140036dd8:	(bad)  
   140036dd9:	xor    al,BYTE PTR [rdx]
   140036ddb:	push   rax
   140036ddc:	add    DWORD PTR [rsi],eax
   140036dde:	add    al,BYTE PTR [rax]
   140036de0:	(bad)  
   140036de1:	xor    al,BYTE PTR [rdx]
   140036de3:	push   rax
   140036de4:	add    DWORD PTR [rsi],eax
   140036de6:	add    al,BYTE PTR [rax]
   140036de8:	(bad)  
   140036de9:	xor    al,BYTE PTR [rdx]
   140036deb:	push   rax
   140036dec:	add    DWORD PTR [rsi],eax
   140036dee:	add    al,BYTE PTR [rax]
   140036df0:	(bad)  
   140036df1:	xor    al,BYTE PTR [rdx]
   140036df3:	push   rax
   140036df4:	add    DWORD PTR [rsi],eax
   140036df6:	add    al,BYTE PTR [rax]
   140036df8:	(bad)  
   140036df9:	xor    al,BYTE PTR [rdx]
   140036dfb:	push   rax
   140036dfc:	add    DWORD PTR [rsi],eax
   140036dfe:	add    al,BYTE PTR [rax]
   140036e00:	(bad)  
   140036e01:	xor    al,BYTE PTR [rdx]
   140036e03:	push   rax
   140036e04:	add    DWORD PTR [rsi],eax
   140036e06:	add    al,BYTE PTR [rax]
   140036e08:	(bad)  
   140036e09:	xor    al,BYTE PTR [rdx]
   140036e0b:	push   rax
   140036e0c:	add    DWORD PTR [rsi],eax
   140036e0e:	add    al,BYTE PTR [rax]
   140036e10:	(bad)  
   140036e11:	xor    al,BYTE PTR [rdx]
   140036e13:	push   rax
   140036e14:	add    DWORD PTR [rsi],eax
   140036e16:	add    al,BYTE PTR [rax]
   140036e18:	(bad)  
   140036e19:	xor    al,BYTE PTR [rdx]
   140036e1b:	push   rax
   140036e1c:	add    DWORD PTR [rsi],eax
   140036e1e:	add    al,BYTE PTR [rax]
   140036e20:	(bad)  
   140036e21:	xor    al,BYTE PTR [rdx]
   140036e23:	push   rax
   140036e24:	add    DWORD PTR [rsi],eax
   140036e26:	add    al,BYTE PTR [rax]
   140036e28:	(bad)  
   140036e29:	xor    al,BYTE PTR [rdx]
   140036e2b:	push   rax
   140036e2c:	add    DWORD PTR [rsi],eax
   140036e2e:	add    al,BYTE PTR [rax]
   140036e30:	(bad)  
   140036e31:	xor    al,BYTE PTR [rdx]
   140036e33:	push   rax
   140036e34:	add    DWORD PTR [rsi],eax
   140036e36:	add    al,BYTE PTR [rax]
   140036e38:	(bad)  
   140036e39:	xor    al,BYTE PTR [rdx]
   140036e3b:	push   rax
   140036e3c:	add    DWORD PTR [rsi],eax
   140036e3e:	add    al,BYTE PTR [rax]
   140036e40:	(bad)  
   140036e41:	xor    al,BYTE PTR [rdx]
   140036e43:	push   rax
   140036e44:	add    DWORD PTR [rsi],eax
   140036e46:	add    al,BYTE PTR [rax]
   140036e48:	(bad)  
   140036e49:	xor    al,BYTE PTR [rdx]
   140036e4b:	push   rax
   140036e4c:	add    DWORD PTR [rsi],eax
   140036e4e:	add    al,BYTE PTR [rax]
   140036e50:	(bad)  
   140036e51:	xor    al,BYTE PTR [rdx]
   140036e53:	push   rax
   140036e54:	add    DWORD PTR [rsi],eax
   140036e56:	add    al,BYTE PTR [rax]
   140036e58:	(bad)  
   140036e59:	xor    al,BYTE PTR [rdx]
   140036e5b:	push   rax
   140036e5c:	add    DWORD PTR [rsi],eax
   140036e5e:	add    al,BYTE PTR [rax]
   140036e60:	(bad)  
   140036e61:	xor    al,BYTE PTR [rdx]
   140036e63:	push   rax
   140036e64:	add    DWORD PTR [rsi],eax
   140036e66:	add    al,BYTE PTR [rax]
   140036e68:	(bad)  
   140036e69:	xor    al,BYTE PTR [rdx]
   140036e6b:	push   rax
   140036e6c:	add    DWORD PTR [rsi],eax
   140036e6e:	add    al,BYTE PTR [rax]
   140036e70:	(bad)  
   140036e71:	xor    al,BYTE PTR [rdx]
   140036e73:	push   rax
   140036e74:	add    DWORD PTR [rsi],eax
   140036e76:	add    al,BYTE PTR [rax]
   140036e78:	(bad)  
   140036e79:	xor    al,BYTE PTR [rdx]
   140036e7b:	push   rax
   140036e7c:	add    DWORD PTR [rsi],eax
   140036e7e:	add    al,BYTE PTR [rax]
   140036e80:	(bad)  
   140036e81:	xor    al,BYTE PTR [rdx]
   140036e83:	push   rax
   140036e84:	add    DWORD PTR [rsi],eax
   140036e86:	add    al,BYTE PTR [rax]
   140036e88:	(bad)  
   140036e89:	xor    al,BYTE PTR [rdx]
   140036e8b:	push   rax
   140036e8c:	add    DWORD PTR [rsi],eax
   140036e8e:	add    al,BYTE PTR [rax]
   140036e90:	(bad)  
   140036e91:	xor    al,BYTE PTR [rdx]
   140036e93:	push   rax
   140036e94:	add    DWORD PTR [rsi],eax
   140036e96:	add    al,BYTE PTR [rax]
   140036e98:	(bad)  
   140036e99:	xor    al,BYTE PTR [rdx]
   140036e9b:	push   rax
   140036e9c:	add    DWORD PTR [rsi],eax
   140036e9e:	add    al,BYTE PTR [rax]
   140036ea0:	(bad)  
   140036ea1:	xor    al,BYTE PTR [rdx]
   140036ea3:	push   rax
   140036ea4:	add    DWORD PTR [rsi],eax
   140036ea6:	add    al,BYTE PTR [rax]
   140036ea8:	(bad)  
   140036ea9:	xor    al,BYTE PTR [rdx]
   140036eab:	push   rax
   140036eac:	add    DWORD PTR [rsi],eax
   140036eae:	add    al,BYTE PTR [rax]
   140036eb0:	(bad)  
   140036eb1:	xor    al,BYTE PTR [rdx]
   140036eb3:	push   rax
   140036eb4:	add    DWORD PTR [rsi],eax
   140036eb6:	add    al,BYTE PTR [rax]
   140036eb8:	(bad)  
   140036eb9:	xor    al,BYTE PTR [rdx]
   140036ebb:	push   rax
   140036ebc:	add    DWORD PTR [rsi],eax
   140036ebe:	add    al,BYTE PTR [rax]
   140036ec0:	(bad)  
   140036ec1:	xor    al,BYTE PTR [rdx]
   140036ec3:	push   rax
   140036ec4:	add    DWORD PTR [rsi],eax
   140036ec6:	add    al,BYTE PTR [rax]
   140036ec8:	(bad)  
   140036ec9:	xor    al,BYTE PTR [rdx]
   140036ecb:	push   rax
   140036ecc:	add    DWORD PTR [rsi],eax
   140036ece:	add    al,BYTE PTR [rax]
   140036ed0:	(bad)  
   140036ed1:	xor    al,BYTE PTR [rdx]
   140036ed3:	push   rax
   140036ed4:	add    DWORD PTR [rsi],eax
   140036ed6:	add    al,BYTE PTR [rax]
   140036ed8:	(bad)  
   140036ed9:	xor    al,BYTE PTR [rdx]
   140036edb:	push   rax
   140036edc:	add    DWORD PTR [rsi],eax
   140036ede:	add    al,BYTE PTR [rax]
   140036ee0:	(bad)  
   140036ee1:	xor    al,BYTE PTR [rdx]
   140036ee3:	push   rax
   140036ee4:	add    DWORD PTR [rsi],eax
   140036ee6:	add    al,BYTE PTR [rax]
   140036ee8:	(bad)  
   140036ee9:	xor    al,BYTE PTR [rdx]
   140036eeb:	push   rax
   140036eec:	add    DWORD PTR [rsi],eax
   140036eee:	add    al,BYTE PTR [rax]
   140036ef0:	(bad)  
   140036ef1:	xor    al,BYTE PTR [rdx]
   140036ef3:	push   rax
   140036ef4:	add    DWORD PTR [rsi],eax
   140036ef6:	add    al,BYTE PTR [rax]
   140036ef8:	(bad)  
   140036ef9:	xor    al,BYTE PTR [rdx]
   140036efb:	push   rax
   140036efc:	add    DWORD PTR [rsi],eax
   140036efe:	add    al,BYTE PTR [rax]
   140036f00:	(bad)  
   140036f01:	xor    al,BYTE PTR [rdx]
   140036f03:	push   rax
   140036f04:	add    DWORD PTR [rsi],eax
   140036f06:	add    al,BYTE PTR [rax]
   140036f08:	(bad)  
   140036f09:	xor    al,BYTE PTR [rdx]
   140036f0b:	push   rax
   140036f0c:	add    DWORD PTR [rsi],eax
   140036f0e:	add    al,BYTE PTR [rax]
   140036f10:	(bad)  
   140036f11:	xor    al,BYTE PTR [rdx]
   140036f13:	push   rax
   140036f14:	add    DWORD PTR [rsi],eax
   140036f16:	add    al,BYTE PTR [rax]
   140036f18:	(bad)  
   140036f19:	xor    al,BYTE PTR [rdx]
   140036f1b:	push   rax
   140036f1c:	add    DWORD PTR [rsi],eax
   140036f1e:	add    al,BYTE PTR [rax]
   140036f20:	(bad)  
   140036f21:	xor    al,BYTE PTR [rdx]
   140036f23:	push   rax
   140036f24:	add    DWORD PTR [rsi],eax
   140036f26:	add    al,BYTE PTR [rax]
   140036f28:	(bad)  
   140036f29:	xor    al,BYTE PTR [rdx]
   140036f2b:	push   rax
   140036f2c:	add    DWORD PTR [rsi],eax
   140036f2e:	add    al,BYTE PTR [rax]
   140036f30:	(bad)  
   140036f31:	xor    al,BYTE PTR [rdx]
   140036f33:	push   rax
   140036f34:	add    DWORD PTR [rsi],eax
   140036f36:	add    al,BYTE PTR [rax]
   140036f38:	(bad)  
   140036f39:	xor    al,BYTE PTR [rdx]
   140036f3b:	push   rax
   140036f3c:	add    DWORD PTR [rsi],eax
   140036f3e:	add    al,BYTE PTR [rax]
   140036f40:	(bad)  
   140036f41:	xor    al,BYTE PTR [rdx]
   140036f43:	push   rax
   140036f44:	add    DWORD PTR [rsi],eax
   140036f46:	add    al,BYTE PTR [rax]
   140036f48:	(bad)  
   140036f49:	xor    al,BYTE PTR [rdx]
   140036f4b:	push   rax
   140036f4c:	add    DWORD PTR [rsi],eax
   140036f4e:	add    al,BYTE PTR [rax]
   140036f50:	(bad)  
   140036f51:	xor    al,BYTE PTR [rdx]
   140036f53:	push   rax
   140036f54:	add    DWORD PTR [rsi],eax
   140036f56:	add    al,BYTE PTR [rax]
   140036f58:	(bad)  
   140036f59:	xor    al,BYTE PTR [rdx]
   140036f5b:	push   rax
   140036f5c:	add    DWORD PTR [rsi],eax
   140036f5e:	add    al,BYTE PTR [rax]
   140036f60:	(bad)  
   140036f61:	xor    al,BYTE PTR [rdx]
   140036f63:	push   rax
   140036f64:	add    DWORD PTR [rsi],eax
   140036f66:	add    al,BYTE PTR [rax]
   140036f68:	(bad)  
   140036f69:	xor    al,BYTE PTR [rdx]
   140036f6b:	push   rax
   140036f6c:	add    DWORD PTR [rsi],eax
   140036f6e:	add    al,BYTE PTR [rax]
   140036f70:	(bad)  
   140036f71:	xor    al,BYTE PTR [rdx]
   140036f73:	push   rax
   140036f74:	add    DWORD PTR [rsi],eax
   140036f76:	add    al,BYTE PTR [rax]
   140036f78:	(bad)  
   140036f79:	xor    al,BYTE PTR [rdx]
   140036f7b:	push   rax
   140036f7c:	add    DWORD PTR [rsi],eax
   140036f7e:	add    al,BYTE PTR [rax]
   140036f80:	(bad)  
   140036f81:	xor    al,BYTE PTR [rdx]
   140036f83:	push   rax
   140036f84:	add    DWORD PTR [rsi],eax
   140036f86:	add    al,BYTE PTR [rax]
   140036f88:	(bad)  
   140036f89:	xor    al,BYTE PTR [rdx]
   140036f8b:	push   rax
   140036f8c:	add    DWORD PTR [rsi],eax
   140036f8e:	add    al,BYTE PTR [rax]
   140036f90:	(bad)  
   140036f91:	xor    al,BYTE PTR [rdx]
   140036f93:	push   rax
   140036f94:	add    DWORD PTR [rsi],eax
   140036f96:	add    al,BYTE PTR [rax]
   140036f98:	(bad)  
   140036f99:	xor    al,BYTE PTR [rdx]
   140036f9b:	push   rax
   140036f9c:	add    DWORD PTR [rsi],eax
   140036f9e:	add    al,BYTE PTR [rax]
   140036fa0:	(bad)  
   140036fa1:	xor    al,BYTE PTR [rdx]
   140036fa3:	push   rax
   140036fa4:	add    DWORD PTR [rsi],eax
   140036fa6:	add    al,BYTE PTR [rax]
   140036fa8:	(bad)  
   140036fa9:	xor    al,BYTE PTR [rdx]
   140036fab:	push   rax
   140036fac:	add    DWORD PTR [rsi],eax
   140036fae:	add    al,BYTE PTR [rax]
   140036fb0:	(bad)  
   140036fb1:	xor    al,BYTE PTR [rdx]
   140036fb3:	push   rax
   140036fb4:	add    DWORD PTR [rsi],eax
   140036fb6:	add    al,BYTE PTR [rax]
   140036fb8:	(bad)  
   140036fb9:	xor    al,BYTE PTR [rdx]
   140036fbb:	push   rax
   140036fbc:	add    DWORD PTR [rsi],eax
   140036fbe:	add    al,BYTE PTR [rax]
   140036fc0:	(bad)  
   140036fc1:	xor    al,BYTE PTR [rdx]
   140036fc3:	push   rax
   140036fc4:	add    DWORD PTR [rsi],eax
   140036fc6:	add    al,BYTE PTR [rax]
   140036fc8:	(bad)  
   140036fc9:	xor    al,BYTE PTR [rdx]
   140036fcb:	push   rax
   140036fcc:	add    DWORD PTR [rsi],eax
   140036fce:	add    al,BYTE PTR [rax]
   140036fd0:	(bad)  
   140036fd1:	xor    al,BYTE PTR [rdx]
   140036fd3:	push   rax
   140036fd4:	add    DWORD PTR [rsi],eax
   140036fd6:	add    al,BYTE PTR [rax]
   140036fd8:	(bad)  
   140036fd9:	xor    al,BYTE PTR [rdx]
   140036fdb:	push   rax
   140036fdc:	add    DWORD PTR [rsi],eax
   140036fde:	add    al,BYTE PTR [rax]
   140036fe0:	(bad)  
   140036fe1:	xor    al,BYTE PTR [rdx]
   140036fe3:	push   rax
   140036fe4:	add    DWORD PTR [rsi],eax
   140036fe6:	add    al,BYTE PTR [rax]
   140036fe8:	(bad)  
   140036fe9:	xor    al,BYTE PTR [rdx]
   140036feb:	push   rax
   140036fec:	add    DWORD PTR [rsi],eax
   140036fee:	add    al,BYTE PTR [rax]
   140036ff0:	(bad)  
   140036ff1:	xor    al,BYTE PTR [rdx]
   140036ff3:	push   rax
   140036ff4:	add    DWORD PTR [rsi],eax
   140036ff6:	add    al,BYTE PTR [rax]
   140036ff8:	(bad)  
   140036ff9:	xor    al,BYTE PTR [rdx]
   140036ffb:	push   rax
   140036ffc:	add    DWORD PTR [rsi],eax
   140036ffe:	add    al,BYTE PTR [rax]
   140037000:	(bad)  
   140037001:	xor    al,BYTE PTR [rdx]
   140037003:	push   rax
   140037004:	add    DWORD PTR [rsi],eax
   140037006:	add    al,BYTE PTR [rax]
   140037008:	(bad)  
   140037009:	xor    al,BYTE PTR [rdx]
   14003700b:	push   rax
   14003700c:	add    DWORD PTR [rsi],eax
   14003700e:	add    al,BYTE PTR [rax]
   140037010:	(bad)  
   140037011:	xor    al,BYTE PTR [rdx]
   140037013:	push   rax
   140037014:	add    DWORD PTR [rsi],eax
   140037016:	add    al,BYTE PTR [rax]
   140037018:	(bad)  
   140037019:	xor    al,BYTE PTR [rdx]
   14003701b:	push   rax
   14003701c:	add    DWORD PTR [rsi],eax
   14003701e:	add    al,BYTE PTR [rax]
   140037020:	(bad)  
   140037021:	xor    al,BYTE PTR [rdx]
   140037023:	push   rax
   140037024:	add    DWORD PTR [rsi],eax
   140037026:	add    al,BYTE PTR [rax]
   140037028:	(bad)  
   140037029:	xor    al,BYTE PTR [rdx]
   14003702b:	push   rax
   14003702c:	add    DWORD PTR [rsi],eax
   14003702e:	add    al,BYTE PTR [rax]
   140037030:	(bad)  
   140037031:	xor    al,BYTE PTR [rdx]
   140037033:	push   rax
   140037034:	add    DWORD PTR [rsi],eax
   140037036:	add    al,BYTE PTR [rax]
   140037038:	(bad)  
   140037039:	xor    al,BYTE PTR [rdx]
   14003703b:	push   rax
   14003703c:	add    DWORD PTR [rsi],eax
   14003703e:	add    al,BYTE PTR [rax]
   140037040:	(bad)  
   140037041:	xor    al,BYTE PTR [rdx]
   140037043:	push   rax
   140037044:	add    DWORD PTR [rsi],eax
   140037046:	add    al,BYTE PTR [rax]
   140037048:	(bad)  
   140037049:	xor    al,BYTE PTR [rdx]
   14003704b:	push   rax
   14003704c:	add    DWORD PTR [rsi],eax
   14003704e:	add    al,BYTE PTR [rax]
   140037050:	(bad)  
   140037051:	xor    al,BYTE PTR [rdx]
   140037053:	push   rax
   140037054:	add    DWORD PTR [rsi],eax
   140037056:	add    al,BYTE PTR [rax]
   140037058:	(bad)  
   140037059:	xor    al,BYTE PTR [rdx]
   14003705b:	push   rax
   14003705c:	add    DWORD PTR [rsi],eax
   14003705e:	add    al,BYTE PTR [rax]
   140037060:	(bad)  
   140037061:	xor    al,BYTE PTR [rdx]
   140037063:	push   rax
   140037064:	add    DWORD PTR [rsi],eax
   140037066:	add    al,BYTE PTR [rax]
   140037068:	(bad)  
   140037069:	xor    al,BYTE PTR [rdx]
   14003706b:	push   rax
   14003706c:	add    DWORD PTR [rsi],eax
   14003706e:	add    al,BYTE PTR [rax]
   140037070:	(bad)  
   140037071:	xor    al,BYTE PTR [rdx]
   140037073:	push   rax
   140037074:	add    DWORD PTR [rsi],eax
   140037076:	add    al,BYTE PTR [rax]
   140037078:	(bad)  
   140037079:	xor    al,BYTE PTR [rdx]
   14003707b:	push   rax
   14003707c:	add    DWORD PTR [rsi],eax
   14003707e:	add    al,BYTE PTR [rax]
   140037080:	(bad)  
   140037081:	xor    al,BYTE PTR [rdx]
   140037083:	push   rax
   140037084:	add    DWORD PTR [rsi],eax
   140037086:	add    al,BYTE PTR [rax]
   140037088:	(bad)  
   140037089:	xor    al,BYTE PTR [rdx]
   14003708b:	push   rax
   14003708c:	add    DWORD PTR [rsi],eax
   14003708e:	add    al,BYTE PTR [rax]
   140037090:	(bad)  
   140037091:	xor    al,BYTE PTR [rdx]
   140037093:	push   rax
   140037094:	add    DWORD PTR [rsi],eax
   140037096:	add    al,BYTE PTR [rax]
   140037098:	(bad)  
   140037099:	xor    al,BYTE PTR [rdx]
   14003709b:	push   rax
   14003709c:	add    DWORD PTR [rsi],eax
   14003709e:	add    al,BYTE PTR [rax]
   1400370a0:	(bad)  
   1400370a1:	xor    al,BYTE PTR [rdx]
   1400370a3:	push   rax
   1400370a4:	add    DWORD PTR [rsi],eax
   1400370a6:	add    al,BYTE PTR [rax]
   1400370a8:	(bad)  
   1400370a9:	xor    al,BYTE PTR [rdx]
   1400370ab:	push   rax
   1400370ac:	add    DWORD PTR [rsi],eax
   1400370ae:	add    al,BYTE PTR [rax]
   1400370b0:	(bad)  
   1400370b1:	xor    al,BYTE PTR [rdx]
   1400370b3:	push   rax
   1400370b4:	add    DWORD PTR [rsi],eax
   1400370b6:	add    al,BYTE PTR [rax]
   1400370b8:	(bad)  
   1400370b9:	xor    al,BYTE PTR [rdx]
   1400370bb:	push   rax
   1400370bc:	add    DWORD PTR [rsi],eax
   1400370be:	add    al,BYTE PTR [rax]
   1400370c0:	(bad)  
   1400370c1:	xor    al,BYTE PTR [rdx]
   1400370c3:	push   rax
   1400370c4:	add    DWORD PTR [rsi],eax
   1400370c6:	add    al,BYTE PTR [rax]
   1400370c8:	(bad)  
   1400370c9:	xor    al,BYTE PTR [rdx]
   1400370cb:	push   rax
   1400370cc:	add    DWORD PTR [rsi],eax
   1400370ce:	add    al,BYTE PTR [rax]
   1400370d0:	(bad)  
   1400370d1:	xor    al,BYTE PTR [rdx]
   1400370d3:	push   rax
   1400370d4:	add    DWORD PTR [rsi],eax
   1400370d6:	add    al,BYTE PTR [rax]
   1400370d8:	(bad)  
   1400370d9:	xor    al,BYTE PTR [rdx]
   1400370db:	push   rax
   1400370dc:	add    DWORD PTR [rsi],eax
   1400370de:	add    al,BYTE PTR [rax]
   1400370e0:	(bad)  
   1400370e1:	xor    al,BYTE PTR [rdx]
   1400370e3:	push   rax
   1400370e4:	add    DWORD PTR [rsi],eax
   1400370e6:	add    al,BYTE PTR [rax]
   1400370e8:	(bad)  
   1400370e9:	xor    al,BYTE PTR [rdx]
   1400370eb:	push   rax
   1400370ec:	add    DWORD PTR [rsi],eax
   1400370ee:	add    al,BYTE PTR [rax]
   1400370f0:	(bad)  
   1400370f1:	xor    al,BYTE PTR [rdx]
   1400370f3:	push   rax
   1400370f4:	add    DWORD PTR [rsi],eax
   1400370f6:	add    al,BYTE PTR [rax]
   1400370f8:	(bad)  
   1400370f9:	xor    al,BYTE PTR [rdx]
   1400370fb:	push   rax
   1400370fc:	add    DWORD PTR [rsi],eax
   1400370fe:	add    al,BYTE PTR [rax]
   140037100:	(bad)  
   140037101:	xor    al,BYTE PTR [rdx]
   140037103:	push   rax
   140037104:	add    DWORD PTR [rsi],eax
   140037106:	add    al,BYTE PTR [rax]
   140037108:	(bad)  
   140037109:	xor    al,BYTE PTR [rdx]
   14003710b:	push   rax
   14003710c:	add    DWORD PTR [rsi],eax
   14003710e:	add    al,BYTE PTR [rax]
   140037110:	(bad)  
   140037111:	xor    al,BYTE PTR [rdx]
   140037113:	push   rax
   140037114:	add    DWORD PTR [rsi],eax
   140037116:	add    al,BYTE PTR [rax]
   140037118:	(bad)  
   140037119:	xor    al,BYTE PTR [rdx]
   14003711b:	push   rax
   14003711c:	add    DWORD PTR [rsi],eax
   14003711e:	add    al,BYTE PTR [rax]
   140037120:	(bad)  
   140037121:	xor    al,BYTE PTR [rdx]
   140037123:	push   rax
   140037124:	add    DWORD PTR [rsi],eax
   140037126:	add    al,BYTE PTR [rax]
   140037128:	(bad)  
   140037129:	xor    al,BYTE PTR [rdx]
   14003712b:	push   rax
   14003712c:	add    DWORD PTR [rsi],eax
   14003712e:	add    al,BYTE PTR [rax]
   140037130:	(bad)  
   140037131:	xor    al,BYTE PTR [rdx]
   140037133:	push   rax
   140037134:	add    DWORD PTR [rcx],ecx
   140037136:	add    DWORD PTR [rax],eax
   140037138:	or     DWORD PTR [rdx+0x0],eax
   14003713b:	add    BYTE PTR [rcx],al
   14003713d:	or     eax,0x420d0001
   140037142:	add    BYTE PTR [rax],al
   140037144:	add    DWORD PTR [rcx],ecx
   140037146:	add    DWORD PTR [rax],eax
   140037148:	or     DWORD PTR [rdx+0x0],eax
   14003714b:	add    BYTE PTR [rcx],dl
   14003714d:	adc    eax,0x10c0002
   140037152:	adc    DWORD PTR [rax],eax
   140037154:	in     al,dx
   140037155:	(bad)  
   140037156:	add    al,BYTE PTR [rax]
   140037158:	mov    eax,0xff0002ff
   14003715d:	(bad)  
   14003715e:	(bad)  
   14003715f:	inc    DWORD PTR [rbp+0x24c]
   140037165:	add    BYTE PTR [rax],al
   140037167:	add    BYTE PTR [rsi+0x100024c],bl
   14003716d:	add    BYTE PTR [rax],al
   14003716f:	add    BYTE PTR [rdi+0x200024c],dh
   140037175:	add    BYTE PTR [rax],al
   140037177:	add    al,dl
   140037179:	rex.WR add r8b,BYTE PTR [rax]
   14003717c:	shl    BYTE PTR [rax-0xffff],0xff
   140037183:	inc    DWORD PTR [rdi]
   140037185:	mov    cl,0x1
   140037187:	add    BYTE PTR [rax],al
   140037189:	add    BYTE PTR [rax],al
   14003718b:	add    BYTE PTR [rsi],bl
   14003718d:	mov    cl,0x1
   14003718f:	add    BYTE PTR [rcx],al
   140037191:	add    BYTE PTR [rax],al
   140037193:	add    BYTE PTR [rbx+0x20001b1],dh
   140037199:	add    BYTE PTR [rax],al
   14003719b:	add    dl,bl
   14003719d:	mov    cl,0x1
   14003719f:	add    BYTE PTR [rbx],al
   1400371a1:	add    BYTE PTR [rax],al
   1400371a3:	add    BYTE PTR [rip+0x20001b2],ah        # 0x14203735b
   1400371a9:	add    BYTE PTR [rax],al
   1400371ab:	add    BYTE PTR [rcx],dh
   1400371ad:	mov    dl,0x1
   1400371af:	add    BYTE PTR [rcx],al
   1400371b1:	add    BYTE PTR [rax],al
   1400371b3:	add    BYTE PTR [rcx-0x4e],al
   1400371b6:	add    DWORD PTR [rax],eax
   1400371b8:	add    BYTE PTR [rax],al
   1400371ba:	add    BYTE PTR [rax],al
   1400371bc:	rex.WRB mov r10b,0x1
   1400371bf:	add    bh,bh
   1400371c1:	(bad)  
   1400371c2:	(bad)  
   1400371c3:	inc    DWORD PTR [rcx]
   1400371c5:	(bad)  
   1400371c6:	add    al,BYTE PTR [rax]
   1400371c8:	(bad)  
   1400371c9:	xor    al,BYTE PTR [rdx]
   1400371cb:	push   rax
   1400371cc:	add    DWORD PTR [rsi],eax
   1400371ce:	add    al,BYTE PTR [rax]
   1400371d0:	(bad)  
   1400371d1:	xor    al,BYTE PTR [rdx]
   1400371d3:	push   rax
   1400371d4:	add    DWORD PTR [rsi],eax
   1400371d6:	add    al,BYTE PTR [rax]
   1400371d8:	(bad)  
   1400371d9:	xor    al,BYTE PTR [rdx]
   1400371db:	push   rax
   1400371dc:	add    DWORD PTR [rsi],eax
   1400371de:	add    al,BYTE PTR [rax]
   1400371e0:	(bad)  
   1400371e1:	xor    al,BYTE PTR [rdx]
   1400371e3:	push   rax
   1400371e4:	adc    DWORD PTR [rip+0x10c0002],edx        # 0x1410f71ec
   1400371ea:	adc    eax,DWORD PTR [rax]
   1400371ec:	in     al,dx
   1400371ed:	(bad)  
   1400371ee:	add    al,BYTE PTR [rax]
   1400371f0:	loopne 0x1400371f1
   1400371f2:	add    al,BYTE PTR [rax]
   1400371f4:	(bad)  
   1400371f5:	(bad)  
   1400371f6:	(bad)  
   1400371f7:	(bad)  
   1400371f8:	jmp    0x140037449
   1400371fd:	add    BYTE PTR [rax],al
   1400371ff:	add    BYTE PTR [rdx],al
   140037201:	rex.WRB add r8b,BYTE PTR [r8]
   140037204:	add    DWORD PTR [rax],eax
   140037206:	add    BYTE PTR [rax],al
   140037208:	sbb    ecx,DWORD PTR [rbp+0x2]
   14003720b:	add    BYTE PTR [rdx],al
   14003720d:	add    BYTE PTR [rax],al
   14003720f:	add    BYTE PTR [rcx*2+0x30002],dh
   140037216:	add    BYTE PTR [rax],al
   140037218:	rex.WR
   140037219:	rex.WRB add r8b,BYTE PTR [r8]
   14003721c:	jo     0x1400371d0
   14003721e:	add    DWORD PTR [rax],eax
   140037220:	(bad)  
   140037221:	(bad)  
   140037222:	(bad)  
   140037223:	push   QWORD PTR [rdi+0x1b2]
   140037229:	add    BYTE PTR [rax],al
   14003722b:	add    dh,cl
   14003722d:	mov    dl,0x1
   14003722f:	add    BYTE PTR [rcx],al
   140037231:	add    BYTE PTR [rax],al
   140037233:	add    BYTE PTR [rbx-0x4d],ah
   140037236:	add    DWORD PTR [rax],eax
   140037238:	add    al,BYTE PTR [rax]
   14003723a:	add    BYTE PTR [rax],al
   14003723c:	mov    dl,0xb3
   14003723e:	add    DWORD PTR [rax],eax
   140037240:	add    eax,DWORD PTR [rax]
   140037242:	add    BYTE PTR [rax],al
   140037244:	retf   
   140037245:	mov    bl,0x1
   140037247:	add    BYTE PTR [rax+rax*1],al
   14003724a:	add    BYTE PTR [rax],al
   14003724c:	div    BYTE PTR [rbx+0x30001]
   140037252:	add    BYTE PTR [rax],al
   140037254:	add    dh,BYTE PTR [rcx+rax*1+0x200]
   14003725b:	add    BYTE PTR [rip+0x10001b4],cl        # 0x141037415
   140037261:	add    BYTE PTR [rax],al
   140037263:	add    BYTE PTR [rip+0x1b4],bl        # 0x14003741d
   140037269:	add    BYTE PTR [rax],al
   14003726b:	add    BYTE PTR [rcx],ch
   14003726d:	mov    ah,0x1
   14003726f:	add    bh,bh
   140037271:	(bad)  
   140037272:	(bad)  
   140037273:	inc    DWORD PTR [rcx]
   140037275:	(bad)  
   140037276:	add    al,BYTE PTR [rax]
   140037278:	(bad)  
   140037279:	xor    al,BYTE PTR [rdx]
   14003727b:	push   rax
   14003727c:	add    DWORD PTR [rsi],eax
   14003727e:	add    al,BYTE PTR [rax]
   140037280:	(bad)  
   140037281:	xor    al,BYTE PTR [rdx]
   140037283:	push   rax
   140037284:	add    DWORD PTR [rsi],eax
   140037286:	add    al,BYTE PTR [rax]
   140037288:	(bad)  
   140037289:	xor    al,BYTE PTR [rdx]
   14003728b:	push   rax
   14003728c:	add    DWORD PTR [rsi],eax
   14003728e:	add    al,BYTE PTR [rax]
   140037290:	(bad)  
   140037291:	xor    al,BYTE PTR [rdx]
   140037293:	push   rax
   140037294:	add    DWORD PTR [rsi],eax
   140037296:	add    al,BYTE PTR [rax]
   140037298:	(bad)  
   140037299:	xor    al,BYTE PTR [rdx]
   14003729b:	push   rax
   14003729c:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x1821072a3
   1400372a2:	add    BYTE PTR [rax],al
   1400372a4:	add    DWORD PTR [rcx],ecx
   1400372a6:	add    DWORD PTR [rax],eax
   1400372a8:	or     DWORD PTR [rdx+0x0],eax
   1400372ab:	add    BYTE PTR [rcx],dl
   1400372ad:	(bad)  
   1400372ae:	add    DWORD PTR [rax],eax
   1400372b0:	(bad)  
   1400372b1:	(bad)  
   1400372b2:	add    BYTE PTR [rax],al
   1400372b4:	in     al,dx
   1400372b5:	(bad)  
   1400372b6:	add    al,BYTE PTR [rax]
   1400372b8:	or     BYTE PTR [rax],al
   1400372ba:	add    eax,DWORD PTR [rax]
   1400372bc:	(bad)  
   1400372bd:	(bad)  
   1400372be:	(bad)  
   1400372bf:	jmp    QWORD PTR [rbp+0x4d]
   1400372c2:	add    al,BYTE PTR [rax]
   1400372c4:	add    BYTE PTR [rbp-0xffff],dh
   1400372ca:	(bad)  
   1400372cb:	inc    DWORD PTR [rcx-0x4b]
   1400372ce:	add    DWORD PTR [rax],eax
   1400372d0:	add    BYTE PTR [rax],al
   1400372d2:	add    BYTE PTR [rax],al
   1400372d4:	add    DWORD PTR [rsi],eax
   1400372d6:	add    al,BYTE PTR [rax]
   1400372d8:	(bad)  
   1400372d9:	xor    al,BYTE PTR [rdx]
   1400372db:	push   rax
   1400372dc:	add    DWORD PTR [rcx],ecx
   1400372de:	add    DWORD PTR [rax],eax
   1400372e0:	or     DWORD PTR [rdx+0x0],eax
   1400372e3:	add    BYTE PTR [rcx],al
   1400372e5:	or     DWORD PTR [rcx],eax
   1400372e7:	add    BYTE PTR [rcx],cl
   1400372e9:	rex.X add BYTE PTR [rax],al
   1400372ec:	add    DWORD PTR [rcx],ecx
   1400372ee:	add    DWORD PTR [rax],eax
   1400372f0:	or     DWORD PTR [rdx+0x0],eax
   1400372f3:	add    BYTE PTR [rcx],dl
   1400372f5:	(bad)  
   1400372f6:	add    DWORD PTR [rax],eax
   1400372f8:	(bad)  
   1400372f9:	ret    0x0
   1400372fc:	in     al,dx
   1400372fd:	(bad)  
   1400372fe:	add    al,BYTE PTR [rax]
   140037300:	xor    BYTE PTR [rax],al
   140037302:	add    eax,DWORD PTR [rax]
   140037304:	(bad)  
   140037305:	(bad)  
   140037306:	(bad)  
   140037307:	(bad)  
   140037308:	mov    esi,0x24d
   14003730d:	add    BYTE PTR [rax],al
   14003730f:	add    BYTE PTR [rbp+rcx*2+0x10002],cl
   140037316:	add    BYTE PTR [rax],al
   140037318:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140037319:	rex.WRB add r8b,BYTE PTR [r8]
   14003731c:	lock mov ch,0x1
   14003731f:	add    bh,bh
   140037321:	(bad)  
   140037322:	(bad)  
   140037323:	call   FWORD PTR [rbx]
   140037325:	mov    dh,0x1
   140037327:	add    BYTE PTR [rcx],al
   140037329:	add    BYTE PTR [rax],al
   14003732b:	add    BYTE PTR [rbp+0x20001b6],cl
   140037331:	add    BYTE PTR [rax],al
   140037333:	add    dl,al
   140037335:	mov    dh,0x1
   140037337:	add    BYTE PTR [rcx],al
   140037339:	add    BYTE PTR [rax],al
   14003733b:	add    ch,ch
   14003733d:	mov    dh,0x1
   14003733f:	add    BYTE PTR [rax],al
   140037341:	add    BYTE PTR [rax],al
   140037343:	add    BYTE PTR [rcx],al
   140037345:	(bad)  
   140037346:	add    al,BYTE PTR [rax]
   140037348:	(bad)  
   140037349:	xor    al,BYTE PTR [rdx]
   14003734b:	push   rax
   14003734c:	add    DWORD PTR [rsi],eax
   14003734e:	add    al,BYTE PTR [rax]
   140037350:	(bad)  
   140037351:	xor    al,BYTE PTR [rdx]
   140037353:	push   rax
   140037354:	add    DWORD PTR [rsi],eax
   140037356:	add    al,BYTE PTR [rax]
   140037358:	(bad)  
   140037359:	xor    al,BYTE PTR [rdx]
   14003735b:	push   rax
   14003735c:	adc    DWORD PTR [rdx],edx
   14003735e:	add    DWORD PTR [rax],eax
   140037360:	or     edx,eax
   140037362:	add    BYTE PTR [rax],al
   140037364:	in     al,dx
   140037365:	(bad)  
   140037366:	add    al,BYTE PTR [rax]
   140037368:	pop    rax
   140037369:	add    BYTE PTR [rbx],al
   14003736b:	add    bh,bh
   14003736d:	(bad)  
   14003736e:	(bad)  
   14003736f:	jmp    rbp
   140037371:	rex.WRB add r8b,BYTE PTR [r8]
   140037374:	adc    BYTE PTR [rdi-0xffff],dh
   14003737a:	(bad)  
   14003737b:	call   FWORD PTR [rdi+0x1b7]
   140037381:	add    BYTE PTR [rax],al
   140037383:	add    BYTE PTR [rdi+rsi*4-0xffff],bh
   14003738a:	(bad)  
   14003738b:	inc    DWORD PTR [rcx]
   14003738d:	(bad)  
   14003738e:	add    al,BYTE PTR [rax]
   140037390:	(bad)  
   140037391:	xor    al,BYTE PTR [rdx]
   140037393:	push   rax
   140037394:	add    DWORD PTR [rcx],ecx
   140037396:	add    DWORD PTR [rax],eax
   140037398:	or     DWORD PTR [rdx+0x0],eax
   14003739b:	add    BYTE PTR [rcx],al
   14003739d:	or     DWORD PTR [rcx],eax
   14003739f:	add    BYTE PTR [rcx],cl
   1400373a1:	rex.X add BYTE PTR [rax],al
   1400373a4:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x1821073ab
   1400373aa:	add    BYTE PTR [rax],al
   1400373ac:	add    DWORD PTR [rcx],ecx
   1400373ae:	add    DWORD PTR [rax],eax
   1400373b0:	or     DWORD PTR [rdx+0x0],eax
   1400373b3:	add    BYTE PTR [rcx],dl
   1400373b5:	adc    al,BYTE PTR [rcx]
   1400373b7:	add    BYTE PTR [rcx],cl
   1400373b9:	(bad)  
   1400373ba:	add    BYTE PTR [rax],al
   1400373bc:	in     al,dx
   1400373bd:	(bad)  
   1400373be:	add    al,BYTE PTR [rax]
   1400373c0:	add    BYTE PTR [rax],0x3
   1400373c3:	add    bh,bh
   1400373c5:	(bad)  
   1400373c6:	(bad)  
   1400373c7:	(bad)  
   1400373c8:	dec    BYTE PTR [rbp+0x2]
   1400373cb:	add    BYTE PTR [rax],al
   1400373cd:	mov    ecx,0xffff0001
   1400373d2:	(bad)  
   1400373d3:	jmp    FWORD PTR [rbx]
   1400373d5:	mov    ecx,0x1
   1400373da:	add    BYTE PTR [rax],al
   1400373dc:	rex.WXB movabs r9,0xb95cffffffff0001
   1400373e6:	add    DWORD PTR [rax],eax
   1400373e8:	add    BYTE PTR [rax],al
   1400373ea:	add    BYTE PTR [rax],al
   1400373ec:	jl     0x1400373a7
   1400373ee:	add    DWORD PTR [rax],eax
   1400373f0:	(bad)  
   1400373f1:	(bad)  
   1400373f2:	(bad)  
   1400373f3:	dec    DWORD PTR [rbp+0x1b9]
   1400373f9:	add    BYTE PTR [rax],al
   1400373fb:	add    BYTE PTR [rbp-0xfffe47],ch
   140037401:	(bad)  
   140037402:	(bad)  
   140037403:	(bad)  
   140037404:	mov    esi,0x1b9
   140037409:	add    BYTE PTR [rax],al
   14003740b:	add    dh,al
   14003740d:	mov    ecx,0xffff0001
   140037412:	(bad)  
   140037413:	inc    DWORD PTR [rcx]
   140037415:	(bad)  
   140037416:	add    al,BYTE PTR [rax]
   140037418:	(bad)  
   140037419:	xor    al,BYTE PTR [rdx]
   14003741b:	push   rax
   14003741c:	add    DWORD PTR [rsi],ecx
   14003741e:	add    DWORD PTR [rax],eax
   140037420:	(bad)  
   140037421:	rex.X add BYTE PTR [rax],al
   140037424:	add    DWORD PTR [rcx],ecx
   140037426:	add    DWORD PTR [rax],eax
   140037428:	or     DWORD PTR [rdx+0x0],esp
   14003742b:	add    BYTE PTR [rcx],al
   14003742d:	or     DWORD PTR [rcx],eax
   14003742f:	add    BYTE PTR [rcx],cl
   140037431:	(bad)  
   140037432:	add    BYTE PTR [rax],al
   140037434:	add    DWORD PTR [rcx],ecx
   140037436:	add    DWORD PTR [rax],eax
   140037438:	or     DWORD PTR [rdx+0x0],esp
   14003743b:	add    BYTE PTR [rcx],al
   14003743d:	or     DWORD PTR [rcx],eax
   14003743f:	add    BYTE PTR [rcx],cl
   140037441:	rex.X add BYTE PTR [rax],al
   140037444:	add    DWORD PTR [rip+0x420d0001],ecx        # 0x18210744b
   14003744a:	add    BYTE PTR [rax],al
   14003744c:	add    DWORD PTR [rcx],ecx
   14003744e:	add    DWORD PTR [rax],eax
   140037450:	or     DWORD PTR [rdx+0x0],eax
   140037453:	add    BYTE PTR [rcx],al
   140037455:	or     DWORD PTR [rcx],eax
   140037457:	add    BYTE PTR [rcx],cl
   140037459:	rex.X add BYTE PTR [rax],al
   14003745c:	add    DWORD PTR [rcx],ecx
   14003745e:	add    DWORD PTR [rax],eax
   140037460:	or     DWORD PTR [rdx+0x0],eax
   140037463:	add    BYTE PTR [rcx],al
   140037465:	or     DWORD PTR [rcx],eax
   140037467:	add    BYTE PTR [rcx],cl
   140037469:	rex.X add BYTE PTR [rax],al
   14003746c:	add    DWORD PTR [rcx],ecx
   14003746e:	add    DWORD PTR [rax],eax
   140037470:	or     DWORD PTR [rdx+0x0],eax
   140037473:	add    BYTE PTR [rcx],al
   140037475:	or     DWORD PTR [rcx],eax
   140037477:	add    BYTE PTR [rcx],cl
   140037479:	rex.X add BYTE PTR [rax],al
   14003747c:	add    DWORD PTR [rcx],ecx
   14003747e:	add    DWORD PTR [rax],eax
   140037480:	or     DWORD PTR [rdx+0x0],eax
   140037483:	add    BYTE PTR [rcx],al
   140037485:	or     DWORD PTR [rcx],eax
   140037487:	add    BYTE PTR [rcx],cl
   140037489:	rex.X add BYTE PTR [rax],al
   14003748c:	add    DWORD PTR [rcx],ecx
   14003748e:	add    DWORD PTR [rax],eax
   140037490:	or     DWORD PTR [rdx+0x0],eax
   140037493:	add    BYTE PTR [rcx],dl
   140037495:	sbb    al,0x1
   140037497:	add    BYTE PTR [rbx],dl
   140037499:	(bad)  
   14003749a:	add    BYTE PTR [rax],al
   14003749c:	in     al,dx
   14003749d:	(bad)  
   14003749e:	add    al,BYTE PTR [rax]
   1400374a0:	test   al,0x0
   1400374a2:	add    eax,DWORD PTR [rax]
   1400374a4:	(bad)  
   1400374a5:	(bad)  
   1400374a6:	(bad)  
   1400374a7:	dec    DWORD PTR [rcx+0x4e]
   1400374aa:	add    al,BYTE PTR [rax]
   1400374ac:	add    BYTE PTR [rax],al
   1400374ae:	add    BYTE PTR [rax],al
   1400374b0:	(bad)  
   1400374b1:	rex.WRX add r8b,BYTE PTR [rax]
   1400374b4:	add    DWORD PTR [rax],eax
   1400374b6:	add    BYTE PTR [rax],al
   1400374b8:	xor    BYTE PTR [rsi+0x2],cl
   1400374bb:	add    BYTE PTR [rax-0x43],al
   1400374be:	add    DWORD PTR [rax],eax
   1400374c0:	(bad)  
   1400374c1:	(bad)  
   1400374c2:	(bad)  
   1400374c3:	inc    DWORD PTR [rdi+0x10001bd]
   1400374c9:	add    BYTE PTR [rax],al
   1400374cb:	add    BYTE PTR [rbx+0x20001bd],dl
   1400374d1:	add    BYTE PTR [rax],al
   1400374d3:	add    bl,al
   1400374d5:	mov    ebp,0x10001
   1400374da:	add    BYTE PTR [rax],al
   1400374dc:	iret   
   1400374dd:	mov    ebp,0x1
   1400374e2:	add    BYTE PTR [rax],al
   1400374e4:	add    DWORD PTR [rsi],eax
   1400374e6:	add    al,BYTE PTR [rax]
   1400374e8:	(bad)  
   1400374e9:	xor    al,BYTE PTR [rdx]
   1400374eb:	push   rax
   1400374ec:	add    DWORD PTR [rsi],eax
   1400374ee:	add    al,BYTE PTR [rax]
   1400374f0:	(bad)  
   1400374f1:	xor    al,BYTE PTR [rdx]
   1400374f3:	push   rax
   1400374f4:	add    DWORD PTR [rsi],eax
   1400374f6:	add    al,BYTE PTR [rax]
   1400374f8:	(bad)  
   1400374f9:	xor    al,BYTE PTR [rdx]
   1400374fb:	push   rax
   1400374fc:	adc    DWORD PTR [rcx+rax*1],ebx
   1400374ff:	add    BYTE PTR [rbx],dl
   140037501:	movabs ds:0xd0000216ec0000,al
   14003750a:	add    eax,DWORD PTR [rax]
   14003750c:	(bad)  
   14003750d:	(bad)  
   14003750e:	(bad)  
   14003750f:	dec    DWORD PTR [rcx+0x24e]
   140037515:	add    BYTE PTR [rax],al
   140037517:	add    BYTE PTR [rax+0x4e],dh
   14003751a:	add    al,BYTE PTR [rax]
   14003751c:	lock mov ebp,0xffff0001
   140037522:	(bad)  
   140037523:	inc    DWORD PTR [rsi+rdi*4+0x1]
   140037527:	add    BYTE PTR [rcx],al
   140037529:	add    BYTE PTR [rax],al
   14003752b:	add    BYTE PTR [rdx-0x42],bh
   14003752e:	add    DWORD PTR [rax],eax
   140037530:	add    BYTE PTR [rax],al
   140037532:	add    BYTE PTR [rax],al
   140037534:	add    DWORD PTR [rsi],eax
   140037536:	add    al,BYTE PTR [rax]
   140037538:	(bad)  
   140037539:	xor    al,BYTE PTR [rdx]
   14003753b:	push   rax
   14003753c:	add    DWORD PTR [rsi],eax
   14003753e:	add    al,BYTE PTR [rax]
   140037540:	(bad)  
   140037541:	xor    al,BYTE PTR [rdx]
   140037543:	push   rax
   140037544:	adc    DWORD PTR [rcx+rax*1],ebx
   140037547:	add    BYTE PTR [rbx],dl
   140037549:	movabs ds:0xf8000216ec0000,al
   140037552:	add    eax,DWORD PTR [rax]
   140037554:	(bad)  
   140037555:	(bad)  
   140037556:	(bad)  
   140037557:	dec    ecx
   140037559:	rex.WRX add r8b,BYTE PTR [rax]
   14003755c:	add    BYTE PTR [rax],al
   14003755e:	add    BYTE PTR [rax],al
   140037560:	mov    al,0x4e
   140037562:	add    al,BYTE PTR [rax]
   140037564:	movabs al,ds:0xf4ffffffff0001be
   14003756d:	mov    esi,0x10001
   140037572:	add    BYTE PTR [rax],al
   140037574:	pop    rcx
   140037575:	mov    edi,0x1
   14003757a:	add    BYTE PTR [rax],al
   14003757c:	add    DWORD PTR [rsi],eax
   14003757e:	add    al,BYTE PTR [rax]
   140037580:	(bad)  
   140037581:	xor    al,BYTE PTR [rdx]
   140037583:	push   rax
   140037584:	add    DWORD PTR [rsi],eax
   140037586:	add    al,BYTE PTR [rax]
   140037588:	(bad)  
   140037589:	xor    al,BYTE PTR [rdx]
   14003758b:	push   rax
   14003758c:	add    DWORD PTR [rcx],ecx
   14003758e:	add    DWORD PTR [rax],eax
   140037590:	or     DWORD PTR [rdx+0x9010000],eax
   140037596:	add    DWORD PTR [rax],eax
   140037598:	or     DWORD PTR [rdx+0x0],esp
   14003759b:	add    BYTE PTR [rcx],al
   14003759d:	sgdt   [rax]
   1400375a0:	cmovb  eax,DWORD PTR [rax]
   1400375a3:	add    BYTE PTR [rcx],al
   1400375a5:	or     DWORD PTR [rcx],eax
   1400375a7:	add    BYTE PTR [rcx],cl
   1400375a9:	rex.X add BYTE PTR [rax],al
   1400375ac:	sbb    DWORD PTR [rdi],ebx
   1400375ae:	add    eax,DWORD PTR [rax]
   1400375b0:	adc    dl,ah
   1400375b2:	or     al,0x70
   1400375b4:	or     esp,DWORD PTR [rax+0x0]
   1400375b7:	add    BYTE PTR [rax+0x17],ah
   1400375ba:	add    al,BYTE PTR [rax]
   1400375bc:	push   0x11000000
   1400375c1:	adc    eax,0x10c0002
   1400375c6:	adc    DWORD PTR [rax],eax
   1400375c8:	in     al,dx
   1400375c9:	(bad)  
   1400375ca:	add    al,BYTE PTR [rax]
   1400375cc:	and    BYTE PTR [rcx],al
   1400375ce:	add    eax,DWORD PTR [rax]
   1400375d0:	(bad)  
   1400375d1:	(bad)  
   1400375d2:	(bad)  
   1400375d3:	push   rax
   1400375d5:	rex.WRX add r8b,BYTE PTR [rax]
   1400375d8:	(bad)  
   1400375d9:	(bad)  
   1400375da:	(bad)  
   1400375db:	dec    DWORD PTR [rcx]
   1400375dd:	rex.WRXB add r8b,BYTE PTR [r8]
   1400375e0:	(bad)  
   1400375e1:	(bad)  
   1400375e2:	(bad)  
   1400375e3:	jmp    QWORD PTR [rdx]
   1400375e5:	rex.WRXB add r8b,BYTE PTR [r8]
   1400375e8:	add    al,BYTE PTR [rax]
   1400375ea:	add    BYTE PTR [rax],al
   1400375ec:	cmp    ecx,DWORD PTR [rdi+0x2]
   1400375ef:	add    bh,bh
   1400375f1:	(bad)  
   1400375f2:	(bad)  
   1400375f3:	call   QWORD PTR [rdi+rcx*2+0x2]
   1400375f7:	add    bh,bh
   1400375f9:	(bad)  
   1400375fa:	(bad)  
   1400375fb:	jmp    FWORD PTR [rbp+0x4f]
   1400375fe:	add    al,BYTE PTR [rax]
   140037600:	rol    cl,1
   140037602:	add    DWORD PTR [rax],eax
   140037604:	(bad)  
   140037605:	(bad)  
   140037606:	(bad)  
   140037607:	call   QWORD PTR [rdx+0x1c2]
   14003760d:	add    BYTE PTR [rax],al
   14003760f:	add    al,cl
   140037611:	ret    0x1
   140037614:	(bad)  
   140037615:	(bad)  
   140037616:	(bad)  
   140037617:	(bad)  
   140037618:	in     eax,dx
   140037619:	ret    0x1
   14003761c:	add    DWORD PTR [rax],eax
   14003761e:	add    BYTE PTR [rax],al
   140037620:	(bad)  
   140037621:	ret    
   140037622:	add    DWORD PTR [rax],eax
   140037624:	(bad)  
   140037625:	(bad)  
   140037626:	(bad)  
   140037627:	dec    DWORD PTR [rbp-0x3d]
   14003762a:	add    DWORD PTR [rax],eax
   14003762c:	add    al,BYTE PTR [rax]
   14003762e:	add    BYTE PTR [rax],al
   140037630:	outs   dx,BYTE PTR ds:[rsi]
   140037631:	ret    
   140037632:	add    DWORD PTR [rax],eax
   140037634:	add    eax,DWORD PTR [rax]
   140037636:	add    BYTE PTR [rax],al
   140037638:	mov    ebx,eax
   14003763a:	add    DWORD PTR [rax],eax
   14003763c:	add    al,BYTE PTR [rax]
   14003763e:	add    BYTE PTR [rax],al
   140037640:	scas   al,BYTE PTR es:[rdi]
   140037641:	ret    
   140037642:	add    DWORD PTR [rax],eax
   140037644:	(bad)  
   140037645:	(bad)  
   140037646:	(bad)  
   140037647:	inc    edi
   140037649:	ret    
   14003764a:	add    DWORD PTR [rax],eax
   14003764c:	add    al,0x0
   14003764e:	add    BYTE PTR [rax],al
   140037650:	stc    
   140037651:	ret    
   140037652:	add    DWORD PTR [rax],eax
   140037654:	(bad)  
   140037655:	(bad)  
   140037656:	(bad)  
   140037657:	call   QWORD PTR [rdx]
   140037659:	(bad)
   14003765d:	add    BYTE PTR [rax],al
   14003765f:	add    BYTE PTR [rax-0x3c],cl
   140037662:	add    DWORD PTR [rax],eax
   140037664:	(bad)  
   140037665:	(bad)  
   140037666:	(bad)  
   140037667:	inc    DWORD PTR [rcx]
   140037669:	(bad)  
   14003766a:	add    al,BYTE PTR [rax]
   14003766c:	(bad)  
   14003766d:	xor    al,BYTE PTR [rdx]
   14003766f:	push   rax
   140037670:	add    DWORD PTR [rsi],eax
   140037672:	add    al,BYTE PTR [rax]
   140037674:	(bad)  
   140037675:	xor    al,BYTE PTR [rdx]
   140037677:	push   rax
   140037678:	add    DWORD PTR [rsi],eax
   14003767a:	add    al,BYTE PTR [rax]
   14003767c:	(bad)  
   14003767d:	xor    al,BYTE PTR [rdx]
   14003767f:	push   rax
   140037680:	add    DWORD PTR [rsi],eax
   140037682:	add    al,BYTE PTR [rax]
   140037684:	(bad)  
   140037685:	xor    al,BYTE PTR [rdx]
   140037687:	push   rax
   140037688:	add    DWORD PTR [rsi],eax
   14003768a:	add    al,BYTE PTR [rax]
   14003768c:	(bad)  
   14003768d:	xor    al,BYTE PTR [rdx]
   14003768f:	push   rax
   140037690:	add    DWORD PTR [rsi],eax
   140037692:	add    al,BYTE PTR [rax]
   140037694:	(bad)  
   140037695:	xor    al,BYTE PTR [rdx]
   140037697:	push   rax
   140037698:	adc    DWORD PTR [rip+0x1110002],ebx        # 0x1411476a0
   14003769e:	add    r12b,bpl
   1400376a1:	(bad)  
   1400376a2:	add    al,BYTE PTR [rax]
   1400376a4:	add    QWORD PTR [rbx],rax
   1400376a7:	add    bh,bh
   1400376a9:	(bad)  
   1400376aa:	(bad)  
   1400376ab:	inc    DWORD PTR [rsi+0x24f]
   1400376b1:	add    BYTE PTR [rax],al
   1400376b3:	add    BYTE PTR [rsi+0x24f],bl
   1400376b9:	add    BYTE PTR [rax],al
   1400376bb:	add    BYTE PTR [rcx+0x24f],bh
   1400376c1:	add    BYTE PTR [rax],al
   1400376c3:	add    ah,dl
   1400376c5:	rex.WRXB add r8b,BYTE PTR [r8]
   1400376c8:	add    eax,DWORD PTR [rax]
   1400376ca:	add    BYTE PTR [rax],al
   1400376cc:	in     al,dx
   1400376cd:	rex.WRXB add r8b,BYTE PTR [r8]
   1400376d0:	add    al,0x0
   1400376d2:	add    BYTE PTR [rax],al
   1400376d4:	add    al,0x50
   1400376d6:	add    al,BYTE PTR [rax]
   1400376d8:	add    eax,0x1c000000
   1400376dd:	push   rax
   1400376de:	add    al,BYTE PTR [rax]
   1400376e0:	add    eax,0x37000000
   1400376e5:	push   rax
   1400376e6:	add    al,BYTE PTR [rax]
   1400376e8:	(bad)  
   1400376e9:	add    BYTE PTR [rax],al
   1400376eb:	add    BYTE PTR [rdi+0x50],cl
   1400376ee:	add    al,BYTE PTR [rax]
   1400376f0:	(bad)  
   1400376f1:	add    BYTE PTR [rax],al
   1400376f3:	add    BYTE PTR [rdx+0x50],ch
   1400376f6:	add    al,BYTE PTR [rax]
   1400376f8:	(bad)  
   1400376f9:	add    BYTE PTR [rax],al
   1400376fb:	add    BYTE PTR [rbp+0x7000250],al
   140037701:	add    BYTE PTR [rax],al
   140037703:	add    BYTE PTR [rax+0x7000250],ah
   140037709:	add    BYTE PTR [rax],al
   14003770b:	add    BYTE PTR [rbx+0x7000250],bh
   140037711:	add    BYTE PTR [rax],al
   140037713:	add    bl,dl
   140037715:	push   rax
   140037716:	add    al,BYTE PTR [rax]
   140037718:	or     eax,0xeb000000
   14003771d:	push   rax
   14003771e:	add    al,BYTE PTR [rax]
   140037720:	or     eax,0x6000000
   140037725:	push   rcx
   140037726:	add    al,BYTE PTR [rax]
   140037728:	or     eax,0x1e000000
   14003772d:	push   rcx
   14003772e:	add    al,BYTE PTR [rax]
   140037730:	or     eax,0x39000000
   140037735:	push   rcx
   140037736:	add    al,BYTE PTR [rax]
   140037738:	or     eax,0x54000000
   14003773d:	push   rcx
   14003773e:	add    al,BYTE PTR [rax]
   140037740:	jo     0x140037706
   140037742:	add    DWORD PTR [rax],eax
   140037744:	(bad)  
   140037745:	(bad)  
   140037746:	(bad)  
   140037747:	jmp    QWORD PTR [rsi+0x1c4]
   14003774d:	add    BYTE PTR [rax],al
   14003774f:	add    al,bl
   140037751:	(bad)
   140037755:	(bad)  
   140037756:	(bad)  
   140037757:	jmp    rdi
   140037759:	(bad)
   14003775d:	add    BYTE PTR [rax],al
   14003775f:	add    ch,bh
   140037761:	(bad)
   140037765:	add    BYTE PTR [rax],al
   140037767:	add    BYTE PTR [rax],bl
   140037769:	(bad)
   14003776c:	add    BYTE PTR [rax],al
   14003776e:	add    BYTE PTR [rax],al
   140037770:	pop    rsi
   140037771:	(bad)
   140037774:	add    al,BYTE PTR [rax]
   140037776:	add    BYTE PTR [rax],al
   140037778:	imul   eax,ebp,0x1
   14003777e:	add    BYTE PTR [rax],al
   140037780:	jl     0x140037747
   140037782:	add    DWORD PTR [rax],eax
   140037784:	add    eax,DWORD PTR [rax]
   140037786:	add    BYTE PTR [rax],al
   140037788:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140037789:	(bad)
   14003778c:	add    BYTE PTR [rax],al
   14003778e:	add    BYTE PTR [rax],al
   140037790:	mov    cl,0xc5
   140037792:	add    DWORD PTR [rax],eax
   140037794:	(bad)  
   140037795:	(bad)  
   140037796:	(bad)  
   140037797:	inc    eax
   140037799:	(bad)
   14003779c:	add    eax,DWORD PTR [rax]
   14003779e:	add    BYTE PTR [rax],al
   1400377a0:	fcmovnb st,st(5)
   1400377a2:	add    DWORD PTR [rax],eax
   1400377a4:	add    al,0x0
   1400377a6:	add    BYTE PTR [rax],al
   1400377a8:	(bad)
   1400377ac:	add    eax,0x6000000
   1400377b1:	mov    BYTE PTR [rcx],0x0
   1400377b4:	add    al,0x0
   1400377b6:	add    BYTE PTR [rax],al
   1400377b8:	adc    esi,eax
   1400377ba:	add    DWORD PTR [rax],eax
   1400377bc:	add    eax,DWORD PTR [rax]
   1400377be:	add    BYTE PTR [rax],al
   1400377c0:	sbb    al,0xc6
   1400377c2:	add    DWORD PTR [rax],eax
   1400377c4:	add    BYTE PTR [rax],al
   1400377c6:	add    BYTE PTR [rax],al
   1400377c8:	(bad)  
   1400377c9:	mov    BYTE PTR [rcx],0x0
   1400377cc:	(bad)  
   1400377cd:	(bad)  
   1400377ce:	(bad)  
   1400377cf:	push   QWORD PTR [rsi]
   1400377d1:	mov    BYTE PTR [rcx],0x0
   1400377d4:	add    eax,0x72000000
   1400377d9:	mov    BYTE PTR [rcx],0x0
   1400377dc:	(bad)  
   1400377dd:	add    BYTE PTR [rax],al
   1400377df:	add    BYTE PTR [rbp-0x3a],bh
   1400377e2:	add    DWORD PTR [rax],eax
   1400377e4:	add    eax,0x93000000
   1400377e9:	mov    BYTE PTR [rcx],0x0
   1400377ec:	(bad)  
   1400377ed:	add    BYTE PTR [rax],al
   1400377ef:	add    dl,ah
   1400377f1:	mov    BYTE PTR [rcx],0x0
   1400377f4:	or     BYTE PTR [rax],al
   1400377f6:	add    BYTE PTR [rax],al
   1400377f8:	in     eax,dx
   1400377f9:	mov    BYTE PTR [rcx],0x0
   1400377fc:	(bad)  
   1400377fd:	add    BYTE PTR [rax],al
   1400377ff:	add    BYTE PTR [rsi],bh
   140037801:	mov    DWORD PTR [rcx],0x900
   140037807:	add    BYTE PTR [rcx-0x39],cl
   14003780a:	add    DWORD PTR [rax],eax
   14003780c:	(bad)  
   14003780d:	add    BYTE PTR [rax],al
   14003780f:	add    BYTE PTR [rcx-0x39],bh
   140037812:	add    DWORD PTR [rax],eax
   140037814:	or     al,BYTE PTR [rax]
   140037816:	add    BYTE PTR [rax],al
   140037818:	mov    edi,es
   14003781a:	add    DWORD PTR [rax],eax
   14003781c:	(bad)  
   14003781d:	add    BYTE PTR [rax],al
   14003781f:	add    ah,ch
   140037821:	mov    DWORD PTR [rcx],0xb00
   140037827:	add    bh,dh
   140037829:	mov    DWORD PTR [rcx],0x700
   14003782f:	add    BYTE PTR [rcx+0xc0001c8],al
   140037835:	add    BYTE PTR [rax],al
   140037837:	add    BYTE PTR [rax+rcx*8+0x70001],cl
   14003783e:	add    BYTE PTR [rax],al
   140037840:	movabs ds:0xe80000000d0001c8,al
   140037849:	enter  0x1,0xe
   14003784d:	add    BYTE PTR [rax],al
   14003784f:	add    bl,dh
   140037851:	enter  0x1,0xd
   140037855:	add    BYTE PTR [rax],al
   140037857:	add    BYTE PTR [rbx],bh
   140037859:	leave  
   14003785a:	add    DWORD PTR [rax],eax
   14003785c:	sldt   WORD PTR [rax]
   14003785f:	add    BYTE PTR [rsi-0x37],al
   140037862:	add    DWORD PTR [rax],eax
   140037864:	or     eax,0x76000000
   140037869:	leave  
   14003786a:	add    DWORD PTR [rax],eax
   14003786c:	adc    BYTE PTR [rax],al
   14003786e:	add    BYTE PTR [rax],al
   140037870:	mov    ecx,ecx
   140037872:	add    DWORD PTR [rax],eax
   140037874:	or     eax,0xe9000000
   140037879:	leave  
   14003787a:	add    DWORD PTR [rax],eax
   14003787c:	adc    DWORD PTR [rax],eax
   14003787e:	add    BYTE PTR [rax],al
   140037880:	hlt    
   140037881:	leave  
   140037882:	add    DWORD PTR [rax],eax
   140037884:	or     eax,0x5e000000
   140037889:	retf   0x1
   14003788c:	adc    al,BYTE PTR [rax]
   14003788e:	add    BYTE PTR [rax],al
   140037890:	jns    0x14003785c
   140037892:	add    DWORD PTR [rax],eax
   140037894:	or     eax,0x87000000
   140037899:	retf   0x1
   14003789c:	(bad)  
   14003789d:	add    BYTE PTR [rax],al
   14003789f:	add    BYTE PTR [rdx+0x50001ca],dl
   1400378a5:	add    BYTE PTR [rax],al
   1400378a7:	add    BYTE PTR [rbp+0x40001ca],bl
   1400378ad:	add    BYTE PTR [rax],al
   1400378af:	add    BYTE PTR [rax+0x30001ca],ch
   1400378b5:	add    BYTE PTR [rax],al
   1400378b7:	add    BYTE PTR [rbx+0x1ca],dh
   1400378bd:	add    BYTE PTR [rax],al
   1400378bf:	add    BYTE PTR [rsi-0xfffe36],bh
   1400378c5:	(bad)  
   1400378c6:	(bad)  
   1400378c7:	inc    DWORD PTR [rcx]
   1400378c9:	(bad)  
   1400378ca:	add    al,BYTE PTR [rax]
   1400378cc:	(bad)  
   1400378cd:	xor    al,BYTE PTR [rdx]
   1400378cf:	push   rax
   1400378d0:	add    DWORD PTR [rsi],eax
   1400378d2:	add    al,BYTE PTR [rax]
   1400378d4:	(bad)  
   1400378d5:	xor    al,BYTE PTR [rdx]
   1400378d7:	push   rax
   1400378d8:	add    DWORD PTR [rsi],eax
   1400378da:	add    al,BYTE PTR [rax]
   1400378dc:	(bad)  
   1400378dd:	xor    al,BYTE PTR [rdx]
   1400378df:	push   rax
   1400378e0:	add    DWORD PTR [rsi],eax
   1400378e2:	add    al,BYTE PTR [rax]
   1400378e4:	(bad)  
   1400378e5:	xor    al,BYTE PTR [rdx]
   1400378e7:	push   rax
   1400378e8:	add    DWORD PTR [rsi],eax
   1400378ea:	add    al,BYTE PTR [rax]
   1400378ec:	(bad)  
   1400378ed:	xor    al,BYTE PTR [rdx]
   1400378ef:	push   rax
   1400378f0:	add    DWORD PTR [rsi],eax
   1400378f2:	add    al,BYTE PTR [rax]
   1400378f4:	(bad)  
   1400378f5:	xor    al,BYTE PTR [rdx]
   1400378f7:	push   rax
   1400378f8:	add    DWORD PTR [rsi],eax
   1400378fa:	add    al,BYTE PTR [rax]
   1400378fc:	(bad)  
   1400378fd:	xor    al,BYTE PTR [rdx]
   1400378ff:	push   rax
   140037900:	add    DWORD PTR [rsi],eax
   140037902:	add    al,BYTE PTR [rax]
   140037904:	(bad)  
   140037905:	xor    al,BYTE PTR [rdx]
   140037907:	push   rax
   140037908:	add    DWORD PTR [rsi],eax
   14003790a:	add    al,BYTE PTR [rax]
   14003790c:	(bad)  
   14003790d:	xor    al,BYTE PTR [rdx]
   14003790f:	push   rax
   140037910:	add    DWORD PTR [rsi],eax
   140037912:	add    al,BYTE PTR [rax]
   140037914:	(bad)  
   140037915:	xor    al,BYTE PTR [rdx]
   140037917:	push   rax
   140037918:	add    DWORD PTR [rsi],eax
   14003791a:	add    al,BYTE PTR [rax]
   14003791c:	(bad)  
   14003791d:	xor    al,BYTE PTR [rdx]
   14003791f:	push   rax
   140037920:	add    DWORD PTR [rsi],eax
   140037922:	add    al,BYTE PTR [rax]
   140037924:	(bad)  
   140037925:	xor    al,BYTE PTR [rdx]
   140037927:	push   rax
   140037928:	add    DWORD PTR [rsi],eax
   14003792a:	add    al,BYTE PTR [rax]
   14003792c:	(bad)  
   14003792d:	xor    al,BYTE PTR [rdx]
   14003792f:	push   rax
   140037930:	add    DWORD PTR [rsi],eax
   140037932:	add    al,BYTE PTR [rax]
   140037934:	(bad)  
   140037935:	xor    al,BYTE PTR [rdx]
   140037937:	push   rax
   140037938:	add    DWORD PTR [rsi],eax
   14003793a:	add    al,BYTE PTR [rax]
   14003793c:	(bad)  
   14003793d:	xor    al,BYTE PTR [rdx]
   14003793f:	push   rax
   140037940:	add    DWORD PTR [rsi],eax
   140037942:	add    al,BYTE PTR [rax]
   140037944:	(bad)  
   140037945:	xor    al,BYTE PTR [rdx]
   140037947:	push   rax
   140037948:	add    DWORD PTR [rsi],eax
   14003794a:	add    al,BYTE PTR [rax]
   14003794c:	(bad)  
   14003794d:	xor    al,BYTE PTR [rdx]
   14003794f:	push   rax
   140037950:	add    DWORD PTR [rsi],eax
   140037952:	add    al,BYTE PTR [rax]
   140037954:	(bad)  
   140037955:	xor    al,BYTE PTR [rdx]
   140037957:	push   rax
   140037958:	add    DWORD PTR [rsi],eax
   14003795a:	add    al,BYTE PTR [rax]
   14003795c:	(bad)  
   14003795d:	xor    al,BYTE PTR [rdx]
   14003795f:	push   rax
   140037960:	add    DWORD PTR [rsi],ecx
   140037962:	add    DWORD PTR [rax],eax
   140037964:	(bad)  
   140037965:	rex.X add BYTE PTR [rax],al
   140037968:	adc    DWORD PTR [rdx],esp
   14003796a:	add    al,BYTE PTR [rax]
   14003796c:	(bad)  
   14003796d:	add    DWORD PTR [rip+0x216ec00],esi        # 0x1421a6573
   140037973:	add    BYTE PTR [rax+0x1],dh
   140037976:	add    eax,DWORD PTR [rax]
   140037978:	(bad)  
   140037979:	(bad)  
   14003797a:	(bad)  
   14003797b:	jmp    FWORD PTR [rdi+0x51]
   14003797e:	add    al,BYTE PTR [rax]
   140037980:	add    BYTE PTR [rax],al
   140037982:	add    BYTE PTR [rax],al
   140037984:	xchg   DWORD PTR [rcx+0x2],edx
   140037987:	add    BYTE PTR [rax],al
   140037989:	add    BYTE PTR [rax],al
   14003798b:	add    BYTE PTR [rdx+0x251],ah
   140037991:	add    BYTE PTR [rax],al
   140037993:	add    BYTE PTR [rbp+0x3000251],bh
   140037999:	add    BYTE PTR [rax],al
   14003799b:	add    ch,dl
   14003799d:	push   rcx
   14003799e:	add    al,BYTE PTR [rax]
   1400379a0:	add    al,0x0
   1400379a2:	add    BYTE PTR [rax],al
   1400379a4:	in     eax,dx
   1400379a5:	push   rcx
   1400379a6:	add    al,BYTE PTR [rax]
   1400379a8:	add    eax,0x5000000
   1400379ad:	push   rdx
   1400379ae:	add    al,BYTE PTR [rax]
   1400379b0:	add    eax,0x1d000000
   1400379b5:	push   rdx
   1400379b6:	add    al,BYTE PTR [rax]
   1400379b8:	(bad)  
   1400379b9:	add    BYTE PTR [rax],al
   1400379bb:	add    BYTE PTR [rip+0x7000252],dh        # 0x147037c13
   1400379c1:	add    BYTE PTR [rax],al
   1400379c3:	add    BYTE PTR [rax+0x52],dl
   1400379c6:	add    al,BYTE PTR [rax]
   1400379c8:	(bad)  
   1400379c9:	add    BYTE PTR [rax],al
   1400379cb:	add    BYTE PTR [rbx+0x52],ch
   1400379ce:	add    al,BYTE PTR [rax]
   1400379d0:	(bad)  
   1400379d1:	add    BYTE PTR [rax],al
   1400379d3:	add    BYTE PTR [rsi+0xb000252],al
   1400379d9:	add    BYTE PTR [rax],al
   1400379db:	add    BYTE PTR [rcx+0x7000252],ah
   1400379e1:	add    BYTE PTR [rax],al
   1400379e3:	add    BYTE PTR [rcx+0xd000252],ah
   1400379e9:	add    BYTE PTR [rax],al
   1400379eb:	add    BYTE PTR [rcx+0xd000252],bh
   1400379f1:	add    BYTE PTR [rax],al
   1400379f3:	add    cl,dl
   1400379f5:	push   rdx
   1400379f6:	add    al,BYTE PTR [rax]
   1400379f8:	(bad)  
   1400379f9:	add    BYTE PTR [rax],al
   1400379fb:	add    ah,ch
   1400379fd:	push   rdx
   1400379fe:	add    al,BYTE PTR [rax]
   140037a00:	adc    bl,cl
   140037a02:	add    DWORD PTR [rax],eax
   140037a04:	(bad)  
   140037a05:	(bad)  
   140037a06:	(bad)  
   140037a07:	dec    DWORD PTR [rbx-0x35]
   140037a0a:	add    DWORD PTR [rax],eax
   140037a0c:	add    BYTE PTR [rax],al
   140037a0e:	add    BYTE PTR [rax],al
   140037a10:	jge    0x1400379dd
   140037a12:	add    DWORD PTR [rax],eax
   140037a14:	(bad)  
   140037a15:	(bad)  
   140037a16:	(bad)  
   140037a17:	dec    DWORD PTR [rbx+rcx*8+0x1]
   140037a1e:	add    BYTE PTR [rax],al
   140037a20:	movabs ds:0xbd000000010001cb,al
   140037a29:	retf   
   140037a2a:	add    DWORD PTR [rax],eax
   140037a2c:	add    BYTE PTR [rax],al
   140037a2e:	add    BYTE PTR [rax],al
   140037a30:	add    ah,cl
   140037a32:	add    DWORD PTR [rax],eax
   140037a34:	add    al,BYTE PTR [rax]
   140037a36:	add    BYTE PTR [rax],al
   140037a38:	or     ecx,esp
   140037a3a:	add    DWORD PTR [rax],eax
   140037a3c:	add    BYTE PTR [rax],al
   140037a3e:	add    BYTE PTR [rax],al
   140037a40:	and    esp,ecx
   140037a42:	add    DWORD PTR [rax],eax
   140037a44:	add    eax,DWORD PTR [rax]
   140037a46:	add    BYTE PTR [rax],al
   140037a48:	rex.WXB int3 
   140037a4a:	add    DWORD PTR [rax],eax
   140037a4c:	add    BYTE PTR [rax],al
   140037a4e:	add    BYTE PTR [rax],al
   140037a50:	push   rsi
   140037a51:	int3   
   140037a52:	add    DWORD PTR [rax],eax
   140037a54:	(bad)  
   140037a55:	(bad)  
   140037a56:	(bad)  
   140037a57:	jmp    QWORD PTR [rbp-0x34]
   140037a5a:	add    DWORD PTR [rax],eax
   140037a5c:	add    eax,DWORD PTR [rax]
   140037a5e:	add    BYTE PTR [rax],al
   140037a60:	or     ah,0x1
   140037a63:	add    BYTE PTR [rax+rax*1],al
   140037a66:	add    BYTE PTR [rax],al
   140037a68:	cwde   
   140037a69:	int3   
   140037a6a:	add    DWORD PTR [rax],eax
   140037a6c:	add    eax,0xab000000
   140037a71:	int3   
   140037a72:	add    DWORD PTR [rax],eax
   140037a74:	add    al,0x0
   140037a76:	add    BYTE PTR [rax],al
   140037a78:	mov    dh,0xcc
   140037a7a:	add    DWORD PTR [rax],eax
   140037a7c:	add    eax,DWORD PTR [rax]
   140037a7e:	add    BYTE PTR [rax],al
   140037a80:	ror    esp,0x1
   140037a83:	add    BYTE PTR [rax],al
   140037a85:	add    BYTE PTR [rax],al
   140037a87:	add    ah,cl
   140037a89:	int3   
   140037a8a:	add    DWORD PTR [rax],eax
   140037a8c:	(bad)  
   140037a8d:	(bad)  
   140037a8e:	(bad)  
   140037a8f:	(bad)  
   140037a90:	fcmovne st,st(4)
   140037a92:	add    DWORD PTR [rax],eax
   140037a94:	add    eax,0x11000000
   140037a99:	int    0x1
   140037a9b:	add    BYTE PTR [rsi],al
   140037a9d:	add    BYTE PTR [rax],al
   140037a9f:	add    BYTE PTR [rcx*8+0x50001],bl
   140037aa6:	add    BYTE PTR [rax],al
   140037aa8:	xor    cl,ch
   140037aaa:	add    DWORD PTR [rax],eax
   140037aac:	(bad)  
   140037aad:	add    BYTE PTR [rax],al
   140037aaf:	add    BYTE PTR [rcx+0x80001cd],dl
   140037ab5:	add    BYTE PTR [rax],al
   140037ab7:	add    BYTE PTR [rbp+rcx*8+0x70001],bl
   140037abe:	add    BYTE PTR [rax],al
   140037ac0:	(bad)  
   140037ac1:	int    0x1
   140037ac3:	add    BYTE PTR [rcx],cl
   140037ac5:	add    BYTE PTR [rax],al
   140037ac7:	add    ch,dh
   140037ac9:	int    0x1
   140037acb:	add    BYTE PTR [rdi],al
   140037acd:	add    BYTE PTR [rax],al
   140037acf:	add    BYTE PTR [rbx-0x32],al
   140037ad2:	add    DWORD PTR [rax],eax
   140037ad4:	or     al,BYTE PTR [rax]
   140037ad6:	add    BYTE PTR [rax],al
   140037ad8:	rex.WRX (bad) 
   140037ada:	add    DWORD PTR [rax],eax
   140037adc:	(bad)  
   140037add:	add    BYTE PTR [rax],al
   140037adf:	add    BYTE PTR [rbx-0x32],bh
   140037ae2:	add    DWORD PTR [rax],eax
   140037ae4:	or     eax,DWORD PTR [rax]
   140037ae6:	add    BYTE PTR [rax],al
   140037ae8:	mov    cs,esi
   140037aea:	add    DWORD PTR [rax],eax
   140037aec:	or     eax,0xee000000
   140037af1:	(bad)  
   140037af2:	add    DWORD PTR [rax],eax
   140037af4:	(bad)  
   140037af5:	add    BYTE PTR [rax],al
   140037af7:	add    cl,bh
   140037af9:	(bad)  
   140037afa:	add    DWORD PTR [rax],eax
   140037afc:	or     eax,0x47000000
   140037b01:	iret   
   140037b02:	add    DWORD PTR [rax],eax
   140037b04:	sldt   WORD PTR [rax]
   140037b07:	add    BYTE PTR [rdx-0x31],dl
   140037b0a:	add    DWORD PTR [rax],eax
   140037b0c:	or     eax,0xa7000000
   140037b11:	iret   
   140037b12:	add    DWORD PTR [rax],eax
   140037b14:	(bad)  
   140037b15:	add    BYTE PTR [rax],al
   140037b17:	add    bh,al
   140037b19:	iret   
   140037b1a:	add    DWORD PTR [rax],eax
   140037b1c:	adc    BYTE PTR [rax],al
   140037b1e:	add    BYTE PTR [rax],al
   140037b20:	loop   0x140037af1
   140037b22:	add    DWORD PTR [rax],eax
   140037b24:	(bad)  
   140037b25:	add    BYTE PTR [rax],al
   140037b27:	add    al,dh
   140037b29:	iret   
   140037b2a:	add    DWORD PTR [rax],eax
   140037b2c:	add    eax,0xfb000000
   140037b31:	iret   
   140037b32:	add    DWORD PTR [rax],eax
   140037b34:	add    al,0x0
   140037b36:	add    BYTE PTR [rax],al
   140037b38:	(bad)  
   140037b39:	rol    BYTE PTR [rcx],1
   140037b3b:	add    BYTE PTR [rbx],al
   140037b3d:	add    BYTE PTR [rax],al
   140037b3f:	add    BYTE PTR [rcx],dl
   140037b41:	rol    BYTE PTR [rcx],1
   140037b43:	add    BYTE PTR [rax],al
   140037b45:	add    BYTE PTR [rax],al
   140037b47:	add    BYTE PTR [rax+rdx*8],bl
   140037b4a:	add    DWORD PTR [rax],eax
   140037b4c:	(bad)  
   140037b4d:	(bad)  
   140037b4e:	(bad)  
   140037b4f:	inc    DWORD PTR [rcx]
   140037b51:	(bad)  
   140037b52:	add    al,BYTE PTR [rax]
   140037b54:	(bad)  
   140037b55:	xor    al,BYTE PTR [rdx]
   140037b57:	push   rax
   140037b58:	add    DWORD PTR [rsi],eax
   140037b5a:	add    al,BYTE PTR [rax]
   140037b5c:	(bad)  
   140037b5d:	xor    al,BYTE PTR [rdx]
   140037b5f:	push   rax
   140037b60:	add    DWORD PTR [rsi],eax
   140037b62:	add    al,BYTE PTR [rax]
   140037b64:	(bad)  
   140037b65:	xor    al,BYTE PTR [rdx]
   140037b67:	push   rax
   140037b68:	add    DWORD PTR [rsi],eax
   140037b6a:	add    al,BYTE PTR [rax]
   140037b6c:	(bad)  
   140037b6d:	xor    al,BYTE PTR [rdx]
   140037b6f:	push   rax
   140037b70:	add    DWORD PTR [rsi],eax
   140037b72:	add    al,BYTE PTR [rax]
   140037b74:	(bad)  
   140037b75:	xor    al,BYTE PTR [rdx]
   140037b77:	push   rax
   140037b78:	add    DWORD PTR [rsi],eax
   140037b7a:	add    al,BYTE PTR [rax]
   140037b7c:	(bad)  
   140037b7d:	xor    al,BYTE PTR [rdx]
   140037b7f:	push   rax
   140037b80:	add    DWORD PTR [rsi],eax
   140037b82:	add    al,BYTE PTR [rax]
   140037b84:	(bad)  
   140037b85:	xor    al,BYTE PTR [rdx]
   140037b87:	push   rax
   140037b88:	add    DWORD PTR [rsi],eax
   140037b8a:	add    al,BYTE PTR [rax]
   140037b8c:	(bad)  
   140037b8d:	xor    al,BYTE PTR [rdx]
   140037b8f:	push   rax
   140037b90:	add    DWORD PTR [rsi],eax
   140037b92:	add    al,BYTE PTR [rax]
   140037b94:	(bad)  
   140037b95:	xor    al,BYTE PTR [rdx]
   140037b97:	push   rax
   140037b98:	add    DWORD PTR [rsi],eax
   140037b9a:	add    al,BYTE PTR [rax]
   140037b9c:	(bad)  
   140037b9d:	xor    al,BYTE PTR [rdx]
   140037b9f:	push   rax
   140037ba0:	add    DWORD PTR [rsi],eax
   140037ba2:	add    al,BYTE PTR [rax]
   140037ba4:	(bad)  
   140037ba5:	xor    al,BYTE PTR [rdx]
   140037ba7:	push   rax
   140037ba8:	add    DWORD PTR [rsi],eax
   140037baa:	add    al,BYTE PTR [rax]
   140037bac:	(bad)  
   140037bad:	xor    al,BYTE PTR [rdx]
   140037baf:	push   rax
   140037bb0:	add    DWORD PTR [rsi],eax
   140037bb2:	add    al,BYTE PTR [rax]
   140037bb4:	(bad)  
   140037bb5:	xor    al,BYTE PTR [rdx]
   140037bb7:	push   rax
   140037bb8:	add    DWORD PTR [rsi],eax
   140037bba:	add    al,BYTE PTR [rax]
   140037bbc:	(bad)  
   140037bbd:	xor    al,BYTE PTR [rdx]
   140037bbf:	push   rax
   140037bc0:	add    DWORD PTR [rsi],eax
   140037bc2:	add    al,BYTE PTR [rax]
   140037bc4:	(bad)  
   140037bc5:	xor    al,BYTE PTR [rdx]
   140037bc7:	push   rax
   140037bc8:	add    DWORD PTR [rsi],eax
   140037bca:	add    al,BYTE PTR [rax]
   140037bcc:	(bad)  
   140037bcd:	xor    al,BYTE PTR [rdx]
   140037bcf:	push   rax
   140037bd0:	sbb    DWORD PTR [rdx],edx
   140037bd2:	add    DWORD PTR [rax],eax
   140037bd4:	or     DWORD PTR [rdx+0x16ec0000],eax
   140037bda:	add    al,BYTE PTR [rax]
   140037bdc:	cwde   
   140037bdd:	add    DWORD PTR [rbx],eax
   140037bdf:	add    bh,bh
   140037be1:	(bad)  
   140037be2:	(bad)  
   140037be3:	inc    DWORD PTR [rax]
   140037be5:	add    BYTE PTR [rax],al
   140037be7:	add    bh,bh
   140037be9:	(bad)  
   140037bea:	(bad)  
   140037beb:	inc    DWORD PTR [rax]
	...
   140037bf5:	add    BYTE PTR [rax],al
   140037bf7:	add    BYTE PTR [rcx],al
   140037bf9:	add    BYTE PTR [rax],al
   140037bfb:	add    BYTE PTR [rcx],al
   140037bfd:	add    BYTE PTR [rax],al
   140037bff:	add    BYTE PTR [rsp+rdi*2],al
   140037c02:	add    eax,DWORD PTR [rax]
	...
   140037c10:	(bad)  
   140037c11:	push   rbx
   140037c12:	add    al,BYTE PTR [rax]
   140037c14:	cmp    BYTE PTR [rax],al
   140037c16:	add    BYTE PTR [rax],al
   140037c18:	rex rol BYTE PTR [rcx],1
   140037c1b:	add    bh,bh
   140037c1d:	(bad)  
   140037c1e:	(bad)  
   140037c1f:	dec    DWORD PTR [rcx+0x1d0]
   140037c25:	add    BYTE PTR [rax],al
   140037c27:	add    BYTE PTR [rsi-0xfffe30],dh
   140037c2d:	(bad)  
   140037c2e:	(bad)  
   140037c2f:	inc    DWORD PTR [rdi]
   140037c31:	push   rbx
   140037c32:	add    al,BYTE PTR [rax]
   140037c34:	add    BYTE PTR [rax],al
   140037c36:	add    BYTE PTR [rax],al
   140037c38:	adc    al,0x53
   140037c3a:	add    al,BYTE PTR [rax]
   140037c3c:	add    DWORD PTR [rax],eax
   140037c3e:	add    BYTE PTR [rax],al
   140037c40:	(bad)  
   140037c41:	push   rbx
   140037c42:	add    al,BYTE PTR [rax]
   140037c44:	add    BYTE PTR [rax],al
   140037c46:	add    BYTE PTR [rax],al
   140037c48:	sbb    DWORD PTR [rdx],ecx
   140037c4a:	add    al,BYTE PTR [rax]
   140037c4c:	or     dh,BYTE PTR [rdx]
   140037c4e:	(bad)  
   140037c4f:	push   rax
   140037c50:	in     al,dx
   140037c51:	(bad)  
   140037c52:	add    al,BYTE PTR [rax]
   140037c54:	cwde   
   140037c55:	add    DWORD PTR [rbx],eax
   140037c57:	add    BYTE PTR [rcx],dl
   140037c59:	(bad)  
   140037c5a:	add    DWORD PTR [rax],eax
   140037c5c:	(bad)  
   140037c5d:	(bad)  
   140037c5e:	add    BYTE PTR [rax],al
   140037c60:	in     al,dx
   140037c61:	(bad)  
   140037c62:	add    al,BYTE PTR [rax]
   140037c64:	nop
   140037c65:	add    al,0x3
   140037c67:	add    bh,bh
   140037c69:	(bad)  
   140037c6a:	(bad)  
   140037c6b:	jmp    QWORD PTR [rax+0x57]
   140037c6e:	add    al,BYTE PTR [rax]
   140037c70:	shl    bl,1
   140037c72:	add    DWORD PTR [rax],eax
   140037c74:	(bad)  
   140037c75:	(bad)  
   140037c76:	(bad)  
   140037c77:	inc    DWORD PTR [rbx-0x1c]
   140037c7a:	add    DWORD PTR [rax],eax
   140037c7c:	add    BYTE PTR [rax],al
   140037c7e:	add    BYTE PTR [rax],al
   140037c80:	adc    DWORD PTR [rdi],edx
   140037c82:	add    DWORD PTR [rax],eax
   140037c84:	(bad)  
   140037c85:	(bad)  
   140037c86:	add    BYTE PTR [rax],al
   140037c88:	in     al,dx
   140037c89:	(bad)  
   140037c8a:	add    al,BYTE PTR [rax]
   140037c8c:	rol    BYTE PTR [rbx+rax*1],0x0
   140037c90:	(bad)  
   140037c91:	(bad)  
   140037c92:	(bad)  
   140037c93:	inc    DWORD PTR [rax+0x40000256]
   140037c99:	in     eax,0x1
   140037c9b:	add    bh,bh
   140037c9d:	(bad)  
   140037c9e:	(bad)  
   140037c9f:	push   QWORD PTR [rbx+0x1e5]
   140037ca5:	add    BYTE PTR [rax],al
   140037ca7:	add    BYTE PTR [rcx],dl
   140037ca9:	(bad)  
   140037caa:	add    DWORD PTR [rax],eax
   140037cac:	(bad)  
   140037cad:	(bad)  
   140037cae:	add    BYTE PTR [rax],al
   140037cb0:	in     al,dx
   140037cb1:	(bad)  
   140037cb2:	add    al,BYTE PTR [rax]
   140037cb4:	lock add al,0x3
   140037cb7:	add    bh,bh
   140037cb9:	(bad)  
   140037cba:	(bad)  
   140037cbb:	push   QWORD PTR [rax-0x2ffffdaa]
   140037cc1:	in     eax,0x1
   140037cc3:	add    bh,bh
   140037cc5:	(bad)  
   140037cc6:	(bad)  
   140037cc7:	jmp    rdi
   140037cc9:	in     eax,0x1
   140037ccb:	add    BYTE PTR [rax],al
   140037ccd:	add    BYTE PTR [rax],al
   140037ccf:	add    BYTE PTR [rdx],dh
   140037cd1:	out    0x1,al
   140037cd3:	add    bh,bh
   140037cd5:	(bad)  
   140037cd6:	(bad)  
   140037cd7:	call   QWORD PTR [rcx]
   140037cd9:	sbb    al,0x1
   140037cdb:	add    BYTE PTR [rbx],dl
   140037cdd:	(bad)  
   140037cde:	add    BYTE PTR [rax],al
   140037ce0:	in     al,dx
   140037ce1:	(bad)  
   140037ce2:	add    al,BYTE PTR [rax]
   140037ce4:	and    BYTE PTR [rip+0xffffffffefc00003],al        # 0x12fc37ced
   140037cea:	add    DWORD PTR [rax],eax
   140037cec:	(bad)  
   140037ced:	(bad)  
   140037cee:	(bad)  
   140037cef:	jmp    rsp
   140037cf1:	out    dx,eax
   140037cf2:	add    DWORD PTR [rax],eax
   140037cf4:	add    DWORD PTR [rax],eax
   140037cf6:	add    BYTE PTR [rax],al
   140037cf8:	pop    rcx
   140037cf9:	lock add DWORD PTR [rax],eax
   140037cfc:	add    BYTE PTR [rax],al
   140037cfe:	add    BYTE PTR [rax],al
   140037d00:	adc    DWORD PTR [rcx+rax*1],ebx
   140037d03:	add    BYTE PTR [rbx],dl
   140037d05:	(bad)  
   140037d06:	add    BYTE PTR [rax],al
   140037d08:	in     al,dx
   140037d09:	(bad)  
   140037d0a:	add    al,BYTE PTR [rax]
   140037d0c:	push   rax
   140037d0d:	add    eax,0xf0700003
   140037d12:	add    DWORD PTR [rax],eax
   140037d14:	(bad)  
   140037d15:	(bad)  
   140037d16:	(bad)  
   140037d17:	call   QWORD PTR [rax+rsi*8+0x10001]
   140037d1e:	add    BYTE PTR [rax],al
   140037d20:	or     ecx,esi
   140037d22:	add    DWORD PTR [rax],eax
   140037d24:	add    BYTE PTR [rax],al
   140037d26:	add    BYTE PTR [rax],al
   140037d28:	adc    DWORD PTR [rcx+rax*1],ebx
   140037d2b:	add    BYTE PTR [rbx],dl
   140037d2d:	(bad)  
   140037d2e:	add    BYTE PTR [rax],al
   140037d30:	in     al,dx
   140037d31:	(bad)  
   140037d32:	add    al,BYTE PTR [rax]
   140037d34:	add    BYTE PTR [rip+0xffffffffe4600003],0x1        # 0x124637d3e
   140037d3b:	add    bh,bh
   140037d3d:	(bad)  
   140037d3e:	(bad)  
   140037d3f:	(bad)  
   140037d40:	ftst   
   140037d42:	add    DWORD PTR [rax],eax
   140037d44:	add    BYTE PTR [rax],al
   140037d46:	add    BYTE PTR [rax],al
   140037d48:	adc    DWORD PTR [rcx+rax*1],ebx
   140037d4b:	add    BYTE PTR [rbx],dl
   140037d4d:	(bad)  
   140037d4e:	add    BYTE PTR [rax],al
   140037d50:	in     al,dx
   140037d51:	(bad)  
   140037d52:	add    al,BYTE PTR [rax]
   140037d54:	mov    al,0x5
   140037d56:	add    eax,DWORD PTR [rax]
   140037d58:	(bad)  
   140037d59:	(bad)  
   140037d5a:	(bad)  
   140037d5b:	(bad)  
   140037d5c:	cmp    BYTE PTR [rdi+0x2],dl
   140037d5f:	add    BYTE PTR [rax],al
   140037d61:	add    BYTE PTR [rax],al
   140037d63:	add    BYTE PTR [rax],ah
   140037d65:	push   rdi
   140037d66:	add    al,BYTE PTR [rax]
   140037d68:	(bad)  
   140037d69:	in     al,dx
   140037d6a:	add    DWORD PTR [rax],eax
   140037d6c:	(bad)  
   140037d6d:	(bad)  
   140037d6e:	(bad)  
   140037d6f:	inc    DWORD PTR [rsp+rbp*8+0x10001]
   140037d76:	add    BYTE PTR [rax],al
   140037d78:	imul   ah
   140037d7a:	add    DWORD PTR [rax],eax
   140037d7c:	add    BYTE PTR [rax],al
   140037d7e:	add    BYTE PTR [rax],al
   140037d80:	adc    DWORD PTR [rcx+rax*1],ebx
   140037d83:	add    BYTE PTR [rbx],dl
   140037d85:	(bad)  
   140037d86:	add    BYTE PTR [rax],al
   140037d88:	in     al,dx
   140037d89:	(bad)  
   140037d8a:	add    al,BYTE PTR [rax]
   140037d8c:	loopne 0x140037d93
   140037d8e:	add    eax,DWORD PTR [rax]
   140037d90:	and    cl,dh
   140037d92:	add    DWORD PTR [rax],eax
   140037d94:	(bad)  
   140037d95:	(bad)  
   140037d96:	(bad)  
   140037d97:	call   FWORD PTR [rdx+0x1f1]
   140037d9d:	add    BYTE PTR [rax],al
   140037d9f:	add    BYTE PTR [rcx],dl
   140037da1:	sbb    al,0x1
   140037da3:	add    BYTE PTR [rbx],dl
   140037da5:	(bad)  
   140037da6:	add    BYTE PTR [rax],al
   140037da8:	in     al,dx
   140037da9:	(bad)  
   140037daa:	add    al,BYTE PTR [rax]
   140037dac:	adc    BYTE PTR [rsi],al
   140037dae:	add    eax,DWORD PTR [rax]
   140037db0:	push   rax
   140037db1:	jmp    0x140037db4
   140037db3:	add    bh,bh
   140037db5:	(bad)  
   140037db6:	(bad)  
   140037db7:	push   QWORD PTR [rbx+rbp*8+0x1]
   140037dbb:	add    BYTE PTR [rcx],al
   140037dbd:	add    BYTE PTR [rax],al
   140037dbf:	add    cl,ch
   140037dc1:	jmp    0x140037dc4
   140037dc3:	add    BYTE PTR [rax],al
   140037dc5:	add    BYTE PTR [rax],al
   140037dc7:	add    BYTE PTR [rcx],al
   140037dc9:	adc    BYTE PTR [rbx],al
   140037dcb:	add    BYTE PTR [rax],dl
   140037dcd:	ret    0x700c
   140037dd0:	or     esp,DWORD PTR [rax+0x0]
   140037dd3:	add    BYTE PTR [rcx],al
   140037dd5:	add    al,0x1
   140037dd7:	add    BYTE PTR [rdx+rax*2],al
   140037dda:	add    BYTE PTR [rax],al
   140037ddc:	add    DWORD PTR [rax],ebx
   140037dde:	add    DWORD PTR [rax],eax
   140037de0:	sbb    dl,al
   140037de2:	add    BYTE PTR [rax],al
   140037de4:	adc    DWORD PTR [rdi],edx
   140037de6:	add    DWORD PTR [rax],eax
   140037de8:	(bad)  
   140037de9:	movabs ds:0x640000216ec0000,al
   140037df2:	add    eax,DWORD PTR [rax]
   140037df4:	rcl    cl,1
   140037df6:	add    DWORD PTR [rax],eax
   140037df8:	(bad)  
   140037df9:	(bad)  
   140037dfa:	(bad)  
   140037dfb:	call   QWORD PTR [rcx]
   140037dfd:	(bad)  
   140037dfe:	add    DWORD PTR [rax],eax
   140037e00:	(bad)  
   140037e01:	movabs ds:0x670000216ec0000,al
   140037e0a:	add    eax,DWORD PTR [rax]
   140037e0c:	(bad)  
   140037e0d:	(bad)  
   140037e0e:	(bad)  
   140037e0f:	call   QWORD PTR [rax+0x53]
   140037e12:	add    al,BYTE PTR [rax]
   140037e14:	rcl    al,1
   140037e16:	add    DWORD PTR [rax],eax
   140037e18:	(bad)  
   140037e19:	(bad)  
   140037e1a:	(bad)  
   140037e1b:	inc    DWORD PTR [rcx]
   140037e1d:	adc    eax,DWORD PTR [rcx]
   140037e1f:	add    BYTE PTR [rbx],dl
   140037e21:	(bad)  
   140037e22:	add    BYTE PTR [rax],al
   140037e24:	adc    DWORD PTR [rdi],edx
   140037e26:	add    DWORD PTR [rax],eax
   140037e28:	(bad)  
   140037e29:	movabs ds:0x6a0000216ec0000,al
   140037e32:	add    eax,DWORD PTR [rax]
   140037e34:	(bad)  
   140037e35:	(bad)  
   140037e36:	(bad)  
   140037e37:	call   QWORD PTR [rax]
   140037e39:	push   rsp
   140037e3a:	add    al,BYTE PTR [rax]
   140037e3c:	xor    ch,dl
   140037e3e:	add    DWORD PTR [rax],eax
   140037e40:	(bad)  
   140037e41:	(bad)  
   140037e42:	(bad)  
   140037e43:	inc    DWORD PTR [rdi-0x2b]
   140037e46:	add    DWORD PTR [rax],eax
   140037e48:	add    BYTE PTR [rax],al
   140037e4a:	add    BYTE PTR [rax],al
   140037e4c:	(bad)  
   140037e4e:	add    DWORD PTR [rax],eax
   140037e50:	(bad)  
   140037e51:	(bad)  
   140037e52:	(bad)  
   140037e53:	call   FWORD PTR [rcx]
   140037e55:	and    DWORD PTR [rcx],eax
   140037e57:	add    BYTE PTR [rax],bl
   140037e59:	movabs ds:0x6d0000216ec0000,al
   140037e62:	add    eax,DWORD PTR [rax]
	...
   140037e6c:	add    DWORD PTR [rax],eax
   140037e6e:	add    BYTE PTR [rax],al
   140037e70:	add    DWORD PTR [rax],eax
   140037e72:	add    BYTE PTR [rax],al
   140037e74:	js     0x140037ef4
   140037e76:	add    eax,DWORD PTR [rax]
	...
   140037e84:	jo     0x140037ed9
   140037e86:	add    al,BYTE PTR [rax]
   140037e88:	cmp    BYTE PTR [rax],al
   140037e8a:	add    BYTE PTR [rax],al
   140037e8c:	mov    al,0xd2
   140037e8e:	add    DWORD PTR [rax],eax
   140037e90:	(bad)  
   140037e91:	(bad)  
   140037e92:	(bad)  
   140037e93:	(bad)  
   140037e94:	(bad)  
   140037e95:	rol    BYTE PTR [rcx],cl
   140037e97:	add    BYTE PTR [rax],al
   140037e99:	add    BYTE PTR [rax],al
   140037e9b:	add    BYTE PTR [rax],bh
   140037e9d:	rol    DWORD PTR [rcx],cl
   140037e9f:	add    bh,bh
   140037ea1:	(bad)  
   140037ea2:	(bad)  
   140037ea3:	push   QWORD PTR [rax+0x53]
   140037ea6:	add    al,BYTE PTR [rax]
   140037ea8:	add    BYTE PTR [rax],al
   140037eaa:	add    BYTE PTR [rax],al
   140037eac:	jge    0x140037f01
   140037eae:	add    al,BYTE PTR [rax]
   140037eb0:	add    DWORD PTR [rax],eax
   140037eb2:	add    BYTE PTR [rax],al
   140037eb4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140037eb5:	push   rbx
   140037eb6:	add    al,BYTE PTR [rax]
   140037eb8:	add    BYTE PTR [rax],al
   140037eba:	add    BYTE PTR [rax],al
   140037ebc:	sbb    DWORD PTR [rdx],ecx
   140037ebe:	add    al,BYTE PTR [rax]
   140037ec0:	or     dh,BYTE PTR [rdx]
   140037ec2:	(bad)  
   140037ec3:	push   rax
   140037ec4:	in     al,dx
   140037ec5:	(bad)  
   140037ec6:	add    al,BYTE PTR [rax]
   140037ec8:	rol    BYTE PTR [rsi],1
   140037eca:	add    eax,DWORD PTR [rax]
   140037ecc:	sbb    DWORD PTR [rcx],esp
   140037ece:	add    DWORD PTR [rax],eax
   140037ed0:	sbb    BYTE PTR [rdx+0x16ec0000],ah
   140037ed6:	add    al,BYTE PTR [rax]
   140037ed8:	add    BYTE PTR [rdi],al
   140037eda:	add    eax,DWORD PTR [rax]
	...
   140037ee4:	add    DWORD PTR [rax],eax
   140037ee6:	add    BYTE PTR [rax],al
   140037ee8:	add    DWORD PTR [rax],eax
   140037eea:	add    BYTE PTR [rax],al
   140037eec:	lock jle 0x140037ef2
	...
   140037efb:	add    al,al
   140037efd:	push   rbx
   140037efe:	add    al,BYTE PTR [rax]
   140037f00:	cmp    BYTE PTR [rax],al
   140037f02:	add    BYTE PTR [rax],al
   140037f04:	push   rax
   140037f05:	rol    DWORD PTR [rcx],cl
   140037f07:	add    bh,bh
   140037f09:	(bad)  
   140037f0a:	(bad)  
   140037f0b:	dec    DWORD PTR [rdx+0x1d3]
   140037f11:	add    BYTE PTR [rax],al
   140037f13:	add    al,bl
   140037f15:	rol    DWORD PTR [rcx],cl
   140037f17:	add    bh,bh
   140037f19:	(bad)  
   140037f1a:	(bad)  
   140037f1b:	inc    eax
   140037f1d:	push   rbx
   140037f1e:	add    al,BYTE PTR [rax]
   140037f20:	add    BYTE PTR [rax],al
   140037f22:	add    BYTE PTR [rax],al
   140037f24:	int    0x53
   140037f26:	add    al,BYTE PTR [rax]
   140037f28:	add    DWORD PTR [rax],eax
   140037f2a:	add    BYTE PTR [rax],al
   140037f2c:	not    BYTE PTR [rbx+0x2]
   140037f2f:	add    BYTE PTR [rax],al
   140037f31:	add    BYTE PTR [rax],al
   140037f33:	add    BYTE PTR [rcx],bl
   140037f35:	or     al,BYTE PTR [rdx]
   140037f37:	add    BYTE PTR [rdx],cl
   140037f39:	xor    al,BYTE PTR [rsi]
   140037f3b:	push   rax
   140037f3c:	in     al,dx
   140037f3d:	(bad)  
   140037f3e:	add    al,BYTE PTR [rax]
   140037f40:	add    BYTE PTR [rdi],al
   140037f42:	add    eax,DWORD PTR [rax]
   140037f44:	adc    DWORD PTR [rcx+rax*1],ebx
   140037f47:	add    BYTE PTR [rbx],dl
   140037f49:	(bad)  
   140037f4a:	add    BYTE PTR [rax],al
   140037f4c:	in     al,dx
   140037f4d:	(bad)  
   140037f4e:	add    al,BYTE PTR [rax]
   140037f50:	xor    BYTE PTR [rdi],al
   140037f52:	add    eax,DWORD PTR [rax]
   140037f54:	xor    dh,dl
   140037f56:	add    DWORD PTR [rax],eax
   140037f58:	(bad)  
   140037f59:	(bad)  
   140037f5a:	(bad)  
   140037f5b:	jmp    QWORD PTR [rax-0x2a]
   140037f5e:	add    DWORD PTR [rax],eax
   140037f60:	add    BYTE PTR [rax],al
   140037f62:	add    BYTE PTR [rax],al
   140037f64:	pushf  
   140037f65:	(bad)  
   140037f66:	add    DWORD PTR [rax],eax
   140037f68:	(bad)  
   140037f69:	(bad)  
   140037f6a:	(bad)  
   140037f6b:	call   QWORD PTR [rcx]
   140037f6d:	sbb    al,0x1
   140037f6f:	add    BYTE PTR [rbx],dl
   140037f71:	(bad)  
   140037f72:	add    BYTE PTR [rax],al
   140037f74:	in     al,dx
   140037f75:	(bad)  
   140037f76:	add    al,BYTE PTR [rax]
   140037f78:	(bad)  
   140037f79:	(bad)  
   140037f7a:	add    eax,DWORD PTR [rax]
   140037f7c:	xor    bh,dl
   140037f7e:	add    DWORD PTR [rax],eax
   140037f80:	(bad)  
   140037f81:	(bad)  
   140037f82:	(bad)  
   140037f83:	jmp    QWORD PTR [rax-0x29]
   140037f86:	add    DWORD PTR [rax],eax
   140037f88:	add    BYTE PTR [rax],al
   140037f8a:	add    BYTE PTR [rax],al
   140037f8c:	cdq    
   140037f8d:	xlat   BYTE PTR ds:[rbx]
   140037f8e:	add    DWORD PTR [rax],eax
   140037f90:	(bad)  
   140037f91:	(bad)  
   140037f92:	(bad)  
   140037f93:	call   QWORD PTR [rcx]
   140037f95:	sbb    al,0x1
   140037f97:	add    BYTE PTR [rbx],dl
   140037f99:	(bad)  
   140037f9a:	add    BYTE PTR [rax],al
   140037f9c:	in     al,dx
   140037f9d:	(bad)  
   140037f9e:	add    al,BYTE PTR [rax]
   140037fa0:	nop
   140037fa1:	(bad)  
   140037fa2:	add    eax,DWORD PTR [rax]
   140037fa4:	and    al,bl
   140037fa6:	add    DWORD PTR [rax],eax
   140037fa8:	(bad)  
   140037fa9:	(bad)  
   140037faa:	(bad)  
   140037fab:	call   QWORD PTR [rax-0x28]
   140037fae:	add    DWORD PTR [rax],eax
   140037fb0:	add    BYTE PTR [rax],al
   140037fb2:	add    BYTE PTR [rax],al
   140037fb4:	mov    eax,ebx
   140037fb6:	add    DWORD PTR [rax],eax
   140037fb8:	(bad)  
   140037fb9:	(bad)  
   140037fba:	(bad)  
   140037fbb:	call   QWORD PTR [rcx]
   140037fbd:	adc    al,0x3
   140037fbf:	add    BYTE PTR [rbx],cl
   140037fc1:	(bad)  
   140037fc2:	(bad)  
   140037fc3:	jo     0x140037fcb
   140037fc5:	(bad)  
   140037fc6:	add    BYTE PTR [rax],al
   140037fc8:	in     al,dx
   140037fc9:	(bad)  
   140037fca:	add    al,BYTE PTR [rax]
   140037fcc:	enter  0x307,0x0
   140037fd0:	(bad)  
   140037fd1:	(bad)  
   140037fd2:	(bad)  
   140037fd3:	call   QWORD PTR [rax+0x257]
   140037fd9:	add    BYTE PTR [rax],al
   140037fdb:	add    BYTE PTR [rcx-0x4ffffda9],ch
   140037fe1:	icebp  
   140037fe2:	add    DWORD PTR [rax],eax
   140037fe4:	(bad)  
   140037fe5:	(bad)  
   140037fe6:	(bad)  
   140037fe7:	call   rbx
   140037fe9:	icebp  
   140037fea:	add    DWORD PTR [rax],eax
   140037fec:	add    BYTE PTR [rax],al
   140037fee:	add    BYTE PTR [rax],al
   140037ff0:	out    0xf1,al
   140037ff2:	add    DWORD PTR [rax],eax
   140037ff4:	add    DWORD PTR [rax],eax
   140037ff6:	add    BYTE PTR [rax],al
   140037ff8:	and    dh,dl
   140037ffa:	add    DWORD PTR [rax],eax
   140037ffc:	(bad)  
   140037ffd:	(bad)  
   140037ffe:	(bad)  
   140037fff:	inc    DWORD PTR [rcx]
   140038001:	(bad)  
   140038002:	add    al,BYTE PTR [rax]
   140038004:	(bad)  
   140038005:	xor    al,BYTE PTR [rdx]
   140038007:	push   rax
   140038008:	add    DWORD PTR [rsi],eax
   14003800a:	add    al,BYTE PTR [rax]
   14003800c:	(bad)  
   14003800d:	xor    al,BYTE PTR [rdx]
   14003800f:	push   rax
   140038010:	sbb    DWORD PTR [rax],edi
   140038012:	add    eax,DWORD PTR [rax]
   140038014:	sbb    eax,0x100d1401
   140038019:	jo     0x14003801b
   14003801b:	add    ah,ah
   14003801d:	(bad)  
   14003801e:	add    al,BYTE PTR [rax]
   140038020:	lock (bad) 
   140038022:	add    eax,DWORD PTR [rax]
   140038024:	xchg   edx,eax
   140038025:	push   0xffffffffffff0000
   14003802a:	(bad)  
   14003802b:	push   rdi
   14003802d:	push   rdi
   14003802e:	add    al,BYTE PTR [rax]
   140038030:	add    BYTE PTR [rax],al
   140038032:	add    BYTE PTR [rax],al
   140038034:	(bad)  
   140038035:	push   rdi
   140038036:	add    al,BYTE PTR [rax]
   140038038:	add    DWORD PTR [rax],eax
   14003803a:	add    BYTE PTR [rax],al
   14003803c:	fist   WORD PTR [rdi+0x2]
   14003803f:	add    BYTE PTR [rax-0xe],al
   140038042:	add    DWORD PTR [rax],eax
   140038044:	(bad)  
   140038045:	(bad)  
   140038046:	(bad)  
   140038047:	dec    DWORD PTR [rdx+rsi*8+0x10001]
   14003804e:	add    BYTE PTR [rax],al
   140038050:	xchg   edi,eax
   140038051:	repnz add DWORD PTR [rax],eax
   140038054:	add    al,BYTE PTR [rax]
   140038056:	add    BYTE PTR [rax],al
   140038058:	sbb    eax,0x10001f4
   14003805d:	add    BYTE PTR [rax],al
   14003805f:	add    BYTE PTR [rax],ch
   140038061:	hlt    
   140038062:	add    DWORD PTR [rax],eax
   140038064:	add    BYTE PTR [rax],al
   140038066:	add    BYTE PTR [rax],al
   140038068:	add    DWORD PTR [rsi],eax
   14003806a:	add    al,BYTE PTR [rax]
   14003806c:	(bad)  
   14003806d:	xor    al,BYTE PTR [rdx]
   14003806f:	push   rax
   140038070:	add    DWORD PTR [rsi],eax
   140038072:	add    al,BYTE PTR [rax]
   140038074:	(bad)  
   140038075:	xor    al,BYTE PTR [rdx]
   140038077:	push   rax
   140038078:	add    DWORD PTR [rsi],eax
   14003807a:	add    al,BYTE PTR [rax]
   14003807c:	(bad)  
   14003807d:	xor    al,BYTE PTR [rdx]
   14003807f:	push   rax
   140038080:	add    DWORD PTR [rdx+rax*1],ecx
   140038083:	add    BYTE PTR [rax+rsi*2],cl
   140038086:	or     esp,DWORD PTR [rax+0x1]
   140038089:	or     al,0x2
   14003808b:	add    BYTE PTR [rax+rsi*2],cl
   14003808e:	or     esp,DWORD PTR [rax+0x11]
   140038091:	(bad)  
   140038092:	add    DWORD PTR [rax],eax
   140038094:	(bad)  
   140038095:	(bad)  
   140038096:	add    BYTE PTR [rax],al
   140038098:	in     al,dx
   140038099:	(bad)  
   14003809a:	add    al,BYTE PTR [rax]
   14003809c:	sbb    BYTE PTR [rax],cl
   14003809e:	add    eax,DWORD PTR [rax]
   1400380a0:	(bad)  
   1400380a1:	(bad)  
   1400380a2:	(bad)  
   1400380a3:	jmp    QWORD PTR [rcx]
   1400380a5:	pop    rax
   1400380a6:	add    al,BYTE PTR [rax]
   1400380a8:	shl    ah,0x1
   1400380ab:	add    bh,bh
   1400380ad:	(bad)  
   1400380ae:	(bad)  
   1400380af:	push   rsi
   1400380b1:	hlt    
   1400380b2:	add    DWORD PTR [rax],eax
   1400380b4:	add    BYTE PTR [rax],al
   1400380b6:	add    BYTE PTR [rax],al
   1400380b8:	add    DWORD PTR [rsi],eax
   1400380ba:	add    al,BYTE PTR [rax]
   1400380bc:	(bad)  
   1400380bd:	xor    al,BYTE PTR [rdx]
   1400380bf:	push   rax
   1400380c0:	sbb    DWORD PTR [rdi],ebx
   1400380c2:	add    eax,DWORD PTR [rax]
   1400380c4:	adc    BYTE PTR [rdx+0x600b700c],ah
   1400380ca:	add    BYTE PTR [rax],al
   1400380cc:	(bad)  
   1400380cd:	(bad)  
   1400380ce:	add    al,BYTE PTR [rax]
   1400380d0:	add    BYTE PTR [rax],al
   1400380d3:	add    BYTE PTR [rcx],al
   1400380d5:	or     DWORD PTR [rcx],eax
   1400380d7:	add    BYTE PTR [rcx],cl
   1400380d9:	rex.X add BYTE PTR [rax],al
   1400380dc:	add    DWORD PTR [rsi],ecx
   1400380de:	add    DWORD PTR [rax],eax
   1400380e0:	(bad)  
   1400380e1:	rex.X add BYTE PTR [rax],al
   1400380e4:	add    DWORD PTR [rsi],ecx
   1400380e6:	add    DWORD PTR [rax],eax
   1400380e8:	(bad)  
   1400380e9:	rex.X add BYTE PTR [rax],al
   1400380ec:	sbb    DWORD PTR [rsi],ebp
   1400380ee:	add    al,0x0
   1400380f0:	adc    eax,DWORD PTR [rcx]
   1400380f2:	(bad)  
   1400380f3:	add    BYTE PTR [rax+rsi*2],cl
   1400380f6:	or     esp,DWORD PTR [rax-0x1c]
   1400380f9:	(bad)  
   1400380fa:	add    al,BYTE PTR [rax]
   1400380fc:	or     BYTE PTR [rbx],al
   1400380ff:	add    BYTE PTR [rdx+0x1],ah
   140038102:	add    BYTE PTR [rax],al
   140038104:	(bad)  
   140038105:	(bad)  
   140038106:	(bad)  
   140038107:	dec    DWORD PTR [rax+0x58]
   14003810a:	add    al,BYTE PTR [rax]
   14003810c:	jo     0x140038104
   14003810e:	add    DWORD PTR [rax],eax
   140038110:	(bad)  
   140038111:	(bad)  
   140038112:	(bad)  
   140038113:	(bad)  
   140038114:	fdiv   st,st(6)
   140038116:	add    DWORD PTR [rax],eax
   140038118:	add    BYTE PTR [rax],al
   14003811a:	add    BYTE PTR [rax],al
   14003811c:	hlt    
   14003811d:	test   BYTE PTR [rcx],0x0
   140038120:	(bad)  
   140038121:	(bad)  
   140038122:	(bad)  
   140038123:	inc    DWORD PTR [rcx]
   140038125:	(bad)  
   140038126:	add    al,BYTE PTR [rax]
   140038128:	(bad)  
   140038129:	xor    al,BYTE PTR [rdx]
   14003812b:	push   rax
   14003812c:	sbb    DWORD PTR [rip+0x1120003],ebp        # 0x141158135
   140038132:	adc    al,BYTE PTR [rax]
   140038134:	or     esi,DWORD PTR [rax+0x0]
   140038137:	add    ah,ah
   140038139:	(bad)  
   14003813a:	add    al,BYTE PTR [rax]
   14003813c:	push   0xffffffff82000308
   140038141:	add    BYTE PTR [rax],al
   140038143:	add    bh,bh
   140038145:	(bad)  
   140038146:	(bad)  
   140038147:	jmp    QWORD PTR [rax+0x58]
   14003814a:	add    al,BYTE PTR [rax]
   14003814c:	(bad)  
   14003814d:	test   DWORD PTR [rcx],0xffffff00
   140038153:	(bad)  
   140038154:	fdivrp st(7),st
   140038156:	add    DWORD PTR [rax],eax
   140038158:	add    BYTE PTR [rax],al
   14003815a:	add    BYTE PTR [rax],al
   14003815c:	add    DWORD PTR [rsi],eax
   14003815e:	add    al,BYTE PTR [rax]
   140038160:	(bad)  
   140038161:	xor    al,BYTE PTR [rdx]
   140038163:	push   rax
   140038164:	add    DWORD PTR [rcx],ecx
   140038166:	add    DWORD PTR [rax],eax
   140038168:	or     DWORD PTR [rdx+0x0],eax
   14003816b:	add    BYTE PTR [rcx],al
   14003816d:	(bad)  
   14003816e:	add    DWORD PTR [rax],eax
   140038170:	(bad)  
   140038171:	rex.X add BYTE PTR [rax],al
   140038174:	add    DWORD PTR [rcx],ecx
   140038176:	add    DWORD PTR [rax],eax
   140038178:	or     DWORD PTR [rdx+0x0],eax
   14003817b:	add    BYTE PTR [rcx],al
   14003817d:	(bad)  
   14003817e:	add    DWORD PTR [rax],eax
   140038180:	(bad)  
   140038181:	rex.X add BYTE PTR [rax],al
   140038184:	add    DWORD PTR [rdi],ecx
   140038186:	add    DWORD PTR [rax],eax
   140038188:	cmovb  eax,DWORD PTR [rax]
   14003818b:	add    BYTE PTR [rcx],al
   14003818d:	(bad)  
   14003818e:	add    DWORD PTR [rax],eax
   140038190:	(bad)  
   140038191:	(bad)  
   140038192:	add    BYTE PTR [rax],al
   140038194:	add    DWORD PTR [rcx],ecx
   140038196:	add    DWORD PTR [rax],eax
   140038198:	or     DWORD PTR [rdx],esp
   14003819a:	add    BYTE PTR [rax],al
   14003819c:	add    DWORD PTR [rdi],edx
   14003819e:	add    DWORD PTR [rax],eax
   1400381a0:	(bad)  
   1400381a1:	rex.X add BYTE PTR [rax],al
   1400381a4:	adc    DWORD PTR [rcx],esp
   1400381a6:	add    DWORD PTR [rax],eax
   1400381a8:	sbb    dl,al
   1400381aa:	add    BYTE PTR [rax],al
   1400381ac:	in     al,dx
   1400381ad:	(bad)  
   1400381ae:	add    al,BYTE PTR [rax]
   1400381b0:	cmp    BYTE PTR [rdi],dl
   1400381b2:	add    eax,DWORD PTR [rax]
   1400381b4:	(bad)  
   1400381b5:	(bad)  
   1400381b6:	(bad)  
   1400381b7:	jmp    QWORD PTR [rax]
   1400381b9:	pop    rbx
   1400381ba:	add    al,BYTE PTR [rax]
   1400381bc:	rex (bad) 
   1400381be:	add    al,BYTE PTR [rax]
   1400381c0:	(bad)  
   1400381c1:	(bad)  
   1400381c2:	(bad)  
   1400381c3:	push   QWORD PTR [rbp+0x7]
   1400381c6:	add    al,BYTE PTR [rax]
   1400381c8:	add    BYTE PTR [rax],al
   1400381ca:	add    BYTE PTR [rax],al
   1400381cc:	or     ecx,DWORD PTR [rax]
   1400381ce:	add    al,BYTE PTR [rax]
   1400381d0:	(bad)  
   1400381d1:	(bad)  
   1400381d2:	(bad)  
   1400381d3:	jmp    QWORD PTR [rcx]
   1400381d5:	or     BYTE PTR [rdx],al
   1400381d7:	add    BYTE PTR [rax],al
   1400381d9:	add    BYTE PTR [rax],al
   1400381db:	add    BYTE PTR [rbp+0x8],cl
   1400381de:	add    al,BYTE PTR [rax]
   1400381e0:	(bad)  
   1400381e1:	(bad)  
   1400381e2:	(bad)  
   1400381e3:	jmp    QWORD PTR [rax+0x8]
   1400381e6:	add    al,BYTE PTR [rax]
   1400381e8:	add    BYTE PTR [rax],al
   1400381ea:	add    BYTE PTR [rax],al
   1400381ec:	(bad)  
   1400381ed:	or     BYTE PTR [rdx],al
   1400381ef:	add    bh,bh
   1400381f1:	(bad)  
   1400381f2:	(bad)  
   1400381f3:	call   QWORD PTR [rbx+0x208]
   1400381f9:	add    BYTE PTR [rax],al
   1400381fb:	add    BYTE PTR [rax+rcx*1-0xfffe],ah
   140038202:	(bad)  
   140038203:	inc    DWORD PTR [rcx]
   140038205:	or     al,BYTE PTR [rcx]
   140038207:	add    BYTE PTR [rdx],cl
   140038209:	(bad)  
   14003820a:	add    BYTE PTR [rax],al
   14003820c:	adc    DWORD PTR [rdx],edx
   14003820e:	add    DWORD PTR [rax],eax
   140038210:	or     DWORD PTR [rdx+0x0],esp
   140038213:	add    ah,ch
   140038215:	(bad)  
   140038216:	add    al,BYTE PTR [rax]
   140038218:	or     BYTE PTR [rip+0xffffffffffff0003],dl        # 0x140028221
   14003821e:	(bad)  
   14003821f:	call   QWORD PTR [rax+0x258]
   140038225:	add    BYTE PTR [rax],al
   140038227:	add    BYTE PTR [rbp-0x2ffffda8],ch
   14003822d:	clc    
   14003822e:	add    DWORD PTR [rax],eax
   140038230:	(bad)  
   140038231:	(bad)  
   140038232:	(bad)  
   140038233:	inc    DWORD PTR [rcx+rdi*8]
   140038236:	add    DWORD PTR [rax],eax
   140038238:	add    BYTE PTR [rax],al
   14003823a:	add    BYTE PTR [rax],al
   14003823c:	(bad)  
   14003823d:	stc    
   14003823e:	add    DWORD PTR [rax],eax
   140038240:	(bad)  
   140038241:	(bad)  
   140038242:	(bad)  
   140038243:	inc    DWORD PTR [rcx]
   140038245:	(bad)  
   140038246:	add    al,BYTE PTR [rax]
   140038248:	(bad)  
   140038249:	xor    al,BYTE PTR [rdx]
   14003824b:	push   rax
   14003824c:	add    DWORD PTR [rsi],eax
   14003824e:	add    al,BYTE PTR [rax]
   140038250:	(bad)  
   140038251:	xor    al,BYTE PTR [rdx]
   140038253:	push   rax
   140038254:	adc    DWORD PTR [rdx],edx
   140038256:	add    DWORD PTR [rax],eax
   140038258:	or     DWORD PTR [rdx+0x0],esp
   14003825b:	add    ah,ch
   14003825d:	(bad)  
   14003825e:	add    al,BYTE PTR [rax]
   140038260:	xor    BYTE PTR [rip+0xffffffffffff0003],dl        # 0x140028269
   140038266:	(bad)  
   140038267:	dec    edx
   140038269:	pop    rax
   14003826a:	add    al,BYTE PTR [rax]
   14003826c:	add    BYTE PTR [rax],al
   14003826e:	add    BYTE PTR [rax],al
   140038270:	out    0x58,eax
   140038272:	add    al,BYTE PTR [rax]
   140038274:	xor    cl,bh
   140038276:	add    DWORD PTR [rax],eax
   140038278:	(bad)  
   140038279:	(bad)  
   14003827a:	(bad)  
   14003827b:	call   QWORD PTR [rcx-0x7]
   14003827e:	add    DWORD PTR [rax],eax
   140038280:	add    BYTE PTR [rax],al
   140038282:	add    BYTE PTR [rax],al
   140038284:	fs stc 
   140038286:	add    DWORD PTR [rax],eax
   140038288:	(bad)  
   140038289:	(bad)  
   14003828a:	(bad)  
   14003828b:	inc    DWORD PTR [rcx]
   14003828d:	(bad)  
   14003828e:	add    al,BYTE PTR [rax]
   140038290:	(bad)  
   140038291:	xor    al,BYTE PTR [rdx]
   140038293:	push   rax
   140038294:	add    DWORD PTR [rsi],eax
   140038296:	add    al,BYTE PTR [rax]
   140038298:	(bad)  
   140038299:	xor    al,BYTE PTR [rdx]
   14003829b:	push   rax
   14003829c:	add    DWORD PTR [rsi],ecx
   14003829e:	add    DWORD PTR [rax],eax
   1400382a0:	(bad)  
   1400382a1:	rex.X add BYTE PTR [rax],al
   1400382a4:	add    DWORD PTR [rcx],ecx
   1400382a6:	add    DWORD PTR [rax],eax
   1400382a8:	or     DWORD PTR [rdx+0x0],eax
   1400382ab:	add    BYTE PTR [rcx],al
   1400382ad:	(bad)  
   1400382ae:	add    DWORD PTR [rax],eax
   1400382b0:	(bad)  
   1400382b1:	rex.X add BYTE PTR [rax],al
   1400382b4:	add    DWORD PTR [rcx],ecx
   1400382b6:	add    DWORD PTR [rax],eax
   1400382b8:	or     DWORD PTR [rdx+0x0],eax
   1400382bb:	add    BYTE PTR [rcx],dl
   1400382bd:	adc    al,BYTE PTR [rcx]
   1400382bf:	add    BYTE PTR [rcx],cl
   1400382c1:	(bad)  
   1400382c2:	add    BYTE PTR [rax],al
   1400382c4:	in     al,dx
   1400382c5:	(bad)  
   1400382c6:	add    al,BYTE PTR [rax]
   1400382c8:	pop    rax
   1400382c9:	adc    eax,0xffff0003
   1400382ce:	(bad)  
   1400382cf:	inc    DWORD PTR [rcx+rbx*2]
   1400382d2:	add    al,BYTE PTR [rax]
   1400382d4:	jo     0x1400382d0
   1400382d6:	add    DWORD PTR [rax],eax
   1400382d8:	(bad)  
   1400382d9:	(bad)  
   1400382da:	(bad)  
   1400382db:	call   QWORD PTR [rdx+0x1fa]
   1400382e1:	add    BYTE PTR [rax],al
   1400382e3:	add    BYTE PTR [rsi-0xfffe06],ch
   1400382e9:	(bad)  
   1400382ea:	(bad)  
   1400382eb:	inc    DWORD PTR [rcx]
   1400382ed:	(bad)  
   1400382ee:	add    al,BYTE PTR [rax]
   1400382f0:	(bad)  
   1400382f1:	xor    al,BYTE PTR [rdx]
   1400382f3:	push   rax
   1400382f4:	adc    DWORD PTR [rsi],edx
   1400382f6:	add    DWORD PTR [rax],eax
   1400382f8:	or     eax,0xec000082
   1400382fd:	(bad)  
   1400382fe:	add    al,BYTE PTR [rax]
   140038300:	adc    BYTE PTR [rip+0xffffffffffff0003],0xff        # 0x14002830a
   140038307:	call   FWORD PTR [rip+0xffffffffd0000259]        # 0x110038566
   14003830d:	cli    
   14003830e:	add    DWORD PTR [rax],eax
   140038310:	(bad)  
   140038311:	(bad)  
   140038312:	(bad)  
   140038313:	dec    DWORD PTR [rdi]
   140038315:	sti    
   140038316:	add    DWORD PTR [rax],eax
   140038318:	add    BYTE PTR [rax],al
   14003831a:	add    BYTE PTR [rax],al
   14003831c:	rex.WRX sti 
   14003831e:	add    DWORD PTR [rax],eax
   140038320:	(bad)  
   140038321:	(bad)  
   140038322:	(bad)  
   140038323:	inc    DWORD PTR [rcx]
   140038325:	(bad)  
   140038326:	add    al,BYTE PTR [rax]
   140038328:	(bad)  
   140038329:	xor    al,BYTE PTR [rdx]
   14003832b:	push   rax
   14003832c:	adc    DWORD PTR [rdx],edx
   14003832e:	add    DWORD PTR [rax],eax
   140038330:	or     DWORD PTR [rdx+0x16ec0000],eax
   140038336:	add    al,BYTE PTR [rax]
   140038338:	test   al,0x15
   14003833a:	add    eax,DWORD PTR [rax]
   14003833c:	(bad)  
   14003833d:	(bad)  
   14003833e:	(bad)  
   14003833f:	push   QWORD PTR [rsi]
   140038341:	pop    rcx
   140038342:	add    al,BYTE PTR [rax]
   140038344:	jo     0x140038341
   140038346:	add    DWORD PTR [rax],eax
   140038348:	(bad)  
   140038349:	(bad)  
   14003834a:	(bad)  
   14003834b:	call   QWORD PTR [rdx+0x1fb]
   140038351:	add    BYTE PTR [rax],al
   140038353:	add    ah,dh
   140038355:	sti    
   140038356:	add    DWORD PTR [rax],eax
   140038358:	(bad)  
   140038359:	(bad)  
   14003835a:	(bad)  
   14003835b:	inc    DWORD PTR [rcx]
   14003835d:	(bad)  
   14003835e:	add    al,BYTE PTR [rax]
   140038360:	(bad)  
   140038361:	xor    al,BYTE PTR [rdx]
   140038363:	push   rax
   140038364:	adc    DWORD PTR [rdi],edx
   140038366:	add    DWORD PTR [rax],eax
   140038368:	(bad)  
   140038369:	(bad)  
   14003836a:	add    BYTE PTR [rax],al
   14003836c:	in     al,dx
   14003836d:	(bad)  
   14003836e:	add    al,BYTE PTR [rax]
   140038370:	rcl    BYTE PTR [rip+0xffffffffffff0003],1        # 0x140028379
   140038376:	(bad)  
   140038377:	jmp    FWORD PTR [rax+0x59]
   14003837a:	add    al,BYTE PTR [rax]
   14003837c:	add    BYTE PTR [rax],al
   14003837e:	add    BYTE PTR [rax],al
   140038380:	rex.WRXB pop r9
   140038382:	add    al,BYTE PTR [rax]
   140038384:	adc    ah,bh
   140038386:	add    DWORD PTR [rax],eax
   140038388:	(bad)  
   140038389:	(bad)  
   14003838a:	(bad)  
   14003838b:	dec    DWORD PTR [rax-0x4]
   14003838e:	add    DWORD PTR [rax],eax
   140038390:	add    DWORD PTR [rax],eax
   140038392:	add    BYTE PTR [rax],al
   140038394:	lahf   
   140038395:	cld    
   140038396:	add    DWORD PTR [rax],eax
   140038398:	add    BYTE PTR [rax],al
   14003839a:	add    BYTE PTR [rax],al
   14003839c:	add    DWORD PTR [rsi],eax
   14003839e:	add    al,BYTE PTR [rax]
   1400383a0:	(bad)  
   1400383a1:	xor    al,BYTE PTR [rdx]
   1400383a3:	push   rax
   1400383a4:	add    DWORD PTR [rsi],eax
   1400383a6:	add    al,BYTE PTR [rax]
   1400383a8:	(bad)  
   1400383a9:	xor    al,BYTE PTR [rdx]
   1400383ab:	push   rax
   1400383ac:	adc    DWORD PTR [rdi],edx
   1400383ae:	add    DWORD PTR [rax],eax
   1400383b0:	(bad)  
   1400383b1:	(bad)  
   1400383b2:	add    BYTE PTR [rax],al
   1400383b4:	in     al,dx
   1400383b5:	(bad)  
   1400383b6:	add    al,BYTE PTR [rax]
   1400383b8:	clc    
   1400383b9:	adc    eax,0xffff0003
   1400383be:	(bad)  
   1400383bf:	jmp    FWORD PTR [rax+0x259]
   1400383c5:	add    BYTE PTR [rax],al
   1400383c7:	add    BYTE PTR [rdi-0x3ffffda7],cl
   1400383cd:	cld    
   1400383ce:	add    DWORD PTR [rax],eax
   1400383d0:	(bad)  
   1400383d1:	(bad)  
   1400383d2:	(bad)  
   1400383d3:	(bad)  
   1400383d4:	clc    
   1400383d5:	cld    
   1400383d6:	add    DWORD PTR [rax],eax
   1400383d8:	add    DWORD PTR [rax],eax
   1400383da:	add    BYTE PTR [rax],al
   1400383dc:	cmp    eax,0x1fd
   1400383e1:	add    BYTE PTR [rax],al
   1400383e3:	add    BYTE PTR [rcx],al
   1400383e5:	(bad)  
   1400383e6:	add    al,BYTE PTR [rax]
   1400383e8:	(bad)  
   1400383e9:	xor    al,BYTE PTR [rdx]
   1400383eb:	push   rax
   1400383ec:	add    DWORD PTR [rsi],eax
   1400383ee:	add    al,BYTE PTR [rax]
   1400383f0:	(bad)  
   1400383f1:	xor    al,BYTE PTR [rdx]
   1400383f3:	push   rax
   1400383f4:	adc    DWORD PTR [rdi],edx
   1400383f6:	add    DWORD PTR [rax],eax
   1400383f8:	(bad)  
   1400383f9:	(bad)  
   1400383fa:	add    BYTE PTR [rax],al
   1400383fc:	in     al,dx
   1400383fd:	(bad)  
   1400383fe:	add    al,BYTE PTR [rax]
   140038400:	and    BYTE PTR [rsi],dl
   140038402:	add    eax,DWORD PTR [rax]
   140038404:	(bad)  
   140038405:	(bad)  
   140038406:	(bad)  
   140038407:	(bad)  
   140038408:	call   0x140038666
   14003840d:	add    BYTE PTR [rax],al
   14003840f:	add    bh,cl
   140038411:	pop    rcx
   140038412:	add    al,BYTE PTR [rax]
   140038414:	(bad)  
   140038415:	std    
   140038416:	add    DWORD PTR [rax],eax
   140038418:	(bad)  
   140038419:	(bad)  
   14003841a:	(bad)  
   14003841b:	call   FWORD PTR [rax+0x10001fd]
   140038421:	add    BYTE PTR [rax],al
   140038423:	add    ch,al
   140038425:	std    
   140038426:	add    DWORD PTR [rax],eax
   140038428:	add    BYTE PTR [rax],al
   14003842a:	add    BYTE PTR [rax],al
   14003842c:	add    DWORD PTR [rsi],eax
   14003842e:	add    al,BYTE PTR [rax]
   140038430:	(bad)  
   140038431:	xor    al,BYTE PTR [rdx]
   140038433:	push   rax
   140038434:	add    DWORD PTR [rsi],eax
   140038436:	add    al,BYTE PTR [rax]
   140038438:	(bad)  
   140038439:	xor    al,BYTE PTR [rdx]
   14003843b:	push   rax
   14003843c:	adc    DWORD PTR [rbx],ebx
   14003843e:	add    al,0x0
   140038440:	adc    al,BYTE PTR [rcx]
   140038442:	adc    eax,DWORD PTR [rax]
   140038444:	or     esi,DWORD PTR [rax+0xa]
   140038447:	(bad)  
   140038448:	in     al,dx
   140038449:	(bad)  
   14003844a:	add    al,BYTE PTR [rax]
   14003844c:	rex.W (bad) 
   14003844e:	add    eax,DWORD PTR [rax]
   140038450:	(bad)  
   140038451:	(bad)  
   140038452:	(bad)  
   140038453:	dec    DWORD PTR [rdi]
   140038455:	pop    rdx
   140038456:	add    al,BYTE PTR [rax]
   140038458:	add    BYTE PTR [rax],al
   14003845a:	add    BYTE PTR [rax],al
   14003845c:	sub    BYTE PTR [rdx+0x2],bl
   14003845f:	add    al,dh
   140038461:	std    
   140038462:	add    DWORD PTR [rax],eax
   140038464:	(bad)  
   140038465:	(bad)  
   140038466:	(bad)  
   140038467:	call   FWORD PTR [rsi]
   140038469:	inc    BYTE PTR [rcx]
   14003846b:	add    BYTE PTR [rax],al
   14003846d:	add    BYTE PTR [rax],al
   14003846f:	add    BYTE PTR [rax+0x10001fe],dh
   140038475:	add    BYTE PTR [rax],al
   140038477:	add    dl,ch
   140038479:	inc    BYTE PTR [rcx]
   14003847b:	add    BYTE PTR [rax],al
   14003847d:	add    BYTE PTR [rax],al
   14003847f:	add    dh,dh
   140038481:	inc    BYTE PTR [rcx]
   140038483:	add    bh,bh
   140038485:	(bad)  
   140038486:	(bad)  
   140038487:	inc    DWORD PTR [rcx]
   140038489:	(bad)  
   14003848a:	add    al,BYTE PTR [rax]
   14003848c:	(bad)  
   14003848d:	xor    al,BYTE PTR [rdx]
   14003848f:	push   rax
   140038490:	add    DWORD PTR [rsi],eax
   140038492:	add    al,BYTE PTR [rax]
   140038494:	(bad)  
   140038495:	xor    al,BYTE PTR [rdx]
   140038497:	push   rax
   140038498:	adc    DWORD PTR [rdx],edx
   14003849a:	add    DWORD PTR [rax],eax
   14003849c:	or     edx,eax
   14003849e:	add    BYTE PTR [rax],al
   1400384a0:	in     al,dx
   1400384a1:	(bad)  
   1400384a2:	add    al,BYTE PTR [rax]
   1400384a4:	jo     0x1400384bc
   1400384a6:	add    eax,DWORD PTR [rax]
   1400384a8:	(bad)  
   1400384a9:	(bad)  
   1400384aa:	(bad)  
   1400384ab:	inc    DWORD PTR [rcx+0x5a]
   1400384ae:	add    al,BYTE PTR [rax]
   1400384b0:	and    bh,bh
   1400384b2:	add    DWORD PTR [rax],eax
   1400384b4:	(bad)  
   1400384b5:	(bad)  
   1400384b6:	(bad)  
   1400384b7:	inc    DWORD PTR [rdi-0x1]
   1400384ba:	add    DWORD PTR [rax],eax
   1400384bc:	add    BYTE PTR [rax],al
   1400384be:	add    BYTE PTR [rax],al
   1400384c0:	(bad)  
   1400384c1:	inc    DWORD PTR [rcx]
   1400384c3:	add    bh,bh
   1400384c5:	(bad)  
   1400384c6:	(bad)  
   1400384c7:	inc    DWORD PTR [rcx]
   1400384c9:	(bad)  
   1400384ca:	add    al,BYTE PTR [rax]
   1400384cc:	(bad)  
   1400384cd:	xor    al,BYTE PTR [rdx]
   1400384cf:	push   rax
   1400384d0:	adc    DWORD PTR [rdx],edx
   1400384d2:	add    DWORD PTR [rax],eax
   1400384d4:	or     edx,esp
   1400384d6:	add    BYTE PTR [rax],al
   1400384d8:	in     al,dx
   1400384d9:	(bad)  
   1400384da:	add    al,BYTE PTR [rax]
   1400384dc:	cwde   
   1400384dd:	(bad)  
   1400384de:	add    eax,DWORD PTR [rax]
   1400384e0:	(bad)  
   1400384e1:	(bad)  
   1400384e2:	(bad)  
   1400384e3:	call   FWORD PTR [rdx+0x5a]
   1400384e6:	add    al,BYTE PTR [rax]
   1400384e8:	lock inc DWORD PTR [rcx]
   1400384eb:	add    bh,bh
   1400384ed:	(bad)  
   1400384ee:	(bad)  
   1400384ef:	call   FWORD PTR [rip+0x200]        # 0x1400386f5
   1400384f5:	add    BYTE PTR [rax],al
   1400384f7:	add    BYTE PTR [rbx-0xfffe00],dl
   1400384fd:	(bad)  
   1400384fe:	(bad)  
   1400384ff:	inc    DWORD PTR [rcx]
   140038501:	(bad)  
   140038502:	add    al,BYTE PTR [rax]
   140038504:	(bad)  
   140038505:	xor    al,BYTE PTR [rdx]
   140038507:	push   rax
   140038508:	adc    DWORD PTR [rdx],edx
   14003850a:	add    DWORD PTR [rax],eax
   14003850c:	or     DWORD PTR [rdx+0x16ec0000],eax
   140038512:	add    al,BYTE PTR [rax]
   140038514:	rcl    BYTE PTR [rsi],0x3
   140038517:	add    bh,bh
   140038519:	(bad)  
   14003851a:	(bad)  
   14003851b:	push   QWORD PTR [rbx+0x5a]
   14003851e:	add    al,BYTE PTR [rax]
   140038520:	mov    al,0x0
   140038522:	add    al,BYTE PTR [rax]
   140038524:	(bad)  
   140038525:	(bad)  
   140038526:	(bad)  
   140038527:	call   rdx
   140038529:	add    BYTE PTR [rdx],al
   14003852b:	add    BYTE PTR [rax],al
   14003852d:	add    BYTE PTR [rax],al
   14003852f:	add    BYTE PTR [rsi],bl
   140038531:	add    DWORD PTR [rdx],eax
   140038533:	add    bh,bh
   140038535:	(bad)  
   140038536:	(bad)  
   140038537:	inc    DWORD PTR [rcx]
   140038539:	(bad)  
   14003853a:	add    al,BYTE PTR [rax]
   14003853c:	(bad)  
   14003853d:	xor    al,BYTE PTR [rdx]
   14003853f:	push   rax
   140038540:	adc    DWORD PTR [rdx],edx
   140038542:	add    DWORD PTR [rax],eax
   140038544:	or     DWORD PTR [rdx+0x0],esp
   140038547:	add    ah,ch
   140038549:	(bad)  
   14003854a:	add    al,BYTE PTR [rax]
   14003854c:	call   0x13f038867
   140038551:	(bad)  
   140038552:	(bad)  
   140038553:	dec    DWORD PTR [rdx+rbx*2+0x1400002]
   14003855a:	add    al,BYTE PTR [rax]
   14003855c:	(bad)  
   14003855d:	(bad)  
   14003855e:	(bad)  
   14003855f:	jmp    QWORD PTR [rdx+0x1]
   140038562:	add    al,BYTE PTR [rax]
   140038564:	add    BYTE PTR [rax],al
   140038566:	add    BYTE PTR [rax],al
   140038568:	lea    eax,[rcx]
   14003856a:	add    al,BYTE PTR [rax]
   14003856c:	(bad)  
   14003856d:	(bad)  
   14003856e:	(bad)  
   14003856f:	inc    DWORD PTR [rcx]
   140038571:	(bad)  
   140038572:	add    al,BYTE PTR [rax]
   140038574:	(bad)  
   140038575:	xor    al,BYTE PTR [rdx]
   140038577:	push   rax
   140038578:	adc    DWORD PTR [rdi],edx
   14003857a:	add    DWORD PTR [rax],eax
   14003857c:	(bad)  
   14003857d:	loop   0x14003857f
   14003857f:	add    ah,ch
   140038581:	(bad)  
   140038582:	add    al,BYTE PTR [rax]
   140038584:	adc    BYTE PTR [rdi],dl
   140038586:	add    eax,DWORD PTR [rax]
   140038588:	(bad)  
   140038589:	(bad)  
   14003858a:	(bad)  
   14003858b:	(bad)  
   14003858c:	out    dx,eax
   14003858d:	pop    rdx
   14003858e:	add    al,BYTE PTR [rax]
   140038590:	add    BYTE PTR [rax],al
   140038592:	add    BYTE PTR [rax],al
   140038594:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140038595:	pop    rdx
   140038596:	add    al,BYTE PTR [rax]
   140038598:	add    DWORD PTR [rax],eax
   14003859a:	add    BYTE PTR [rax],al
   14003859c:	mov    esi,0x200025a
   1400385a1:	add    BYTE PTR [rax],al
   1400385a3:	add    dh,dl
   1400385a5:	pop    rdx
   1400385a6:	add    al,BYTE PTR [rax]
   1400385a8:	add    DWORD PTR [rax],eax
   1400385aa:	add    BYTE PTR [rax],al
   1400385ac:	(bad)  
   1400385ad:	pop    rdx
   1400385ae:	add    al,BYTE PTR [rax]
   1400385b0:	lock add DWORD PTR [rdx],eax
   1400385b3:	add    bh,bh
   1400385b5:	(bad)  
   1400385b6:	(bad)  
   1400385b7:	jmp    QWORD PTR [rdx]
   1400385b9:	add    al,BYTE PTR [rdx]
   1400385bb:	add    BYTE PTR [rcx],al
   1400385bd:	add    BYTE PTR [rax],al
   1400385bf:	add    BYTE PTR [rdi+0x2],dl
   1400385c2:	add    al,BYTE PTR [rax]
   1400385c4:	add    al,BYTE PTR [rax]
   1400385c6:	add    BYTE PTR [rax],al
   1400385c8:	jo     0x1400385cc
   1400385ca:	add    al,BYTE PTR [rax]
   1400385cc:	add    al,0x0
   1400385ce:	add    BYTE PTR [rax],al
   1400385d0:	cwde   
   1400385d1:	add    al,BYTE PTR [rdx]
   1400385d3:	add    BYTE PTR [rcx],al
   1400385d5:	add    BYTE PTR [rax],al
   1400385d7:	add    BYTE PTR [rdx+rax*1+0x2],ah
   1400385de:	add    BYTE PTR [rax],al
   1400385e0:	add    DWORD PTR [rsi],eax
   1400385e2:	add    al,BYTE PTR [rax]
   1400385e4:	(bad)  
   1400385e5:	xor    al,BYTE PTR [rdx]
   1400385e7:	push   rax
   1400385e8:	add    DWORD PTR [rsi],eax
   1400385ea:	add    al,BYTE PTR [rax]
   1400385ec:	(bad)  
   1400385ed:	xor    al,BYTE PTR [rdx]
   1400385ef:	push   rax
   1400385f0:	add    DWORD PTR [rsi],eax
   1400385f2:	add    al,BYTE PTR [rax]
   1400385f4:	(bad)  
   1400385f5:	xor    al,BYTE PTR [rdx]
   1400385f7:	push   rax
   1400385f8:	add    DWORD PTR [rsi],eax
   1400385fa:	add    al,BYTE PTR [rax]
   1400385fc:	(bad)  
   1400385fd:	xor    al,BYTE PTR [rdx]
   1400385ff:	push   rax
   140038600:	add    DWORD PTR [rdi],ecx
   140038602:	add    al,BYTE PTR [rax]
   140038604:	movlps xmm1,QWORD PTR [rbx]
   140038607:	jo     0x14003860a
   140038609:	or     DWORD PTR [rcx],eax
   14003860b:	add    BYTE PTR [rcx],cl
   14003860d:	rex.X add BYTE PTR [rax],al
   140038610:	add    DWORD PTR [rcx],ecx
   140038612:	add    DWORD PTR [rax],eax
   140038614:	or     DWORD PTR [rdx+0x0],eax
   140038617:	add    BYTE PTR [rcx],dl
   140038619:	sbb    al,0x8
   14003861b:	add    BYTE PTR [rsp+riz*2],bl
   14003861e:	or     al,0x0
   140038620:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140038624:	adc    al,0x34
   140038626:	or     al,BYTE PTR [rax]
   140038628:	or     BYTE PTR [rdx+0x4],dh
   14003862b:	jo     0x140038619
   14003862d:	(bad)  
   14003862e:	add    al,BYTE PTR [rax]
   140038630:	mov    eax,0xff000317
   140038635:	(bad)  
   140038636:	(bad)  
   140038637:	(bad)  
   140038638:	cmp    BYTE PTR [rbx+0x2],bl
   14003863b:	add    BYTE PTR [rcx+rdx*1+0x2],ah
   14003863f:	add    bh,bh
   140038641:	(bad)  
   140038642:	(bad)  
   140038643:	jmp    QWORD PTR [rdx+0x211]
   140038649:	add    BYTE PTR [rax],al
   14003864b:	add    BYTE PTR [rbp-0xfffdef],dh
   140038651:	(bad)  
   140038652:	(bad)  
   140038653:	inc    DWORD PTR [rcx]
   140038655:	add    al,0x1
   140038657:	add    BYTE PTR [rdx+riz*2],al
   14003865a:	add    BYTE PTR [rax],al
   14003865c:	or     DWORD PTR [rcx],ebx
   14003865e:	or     al,BYTE PTR [rax]
   140038660:	sbb    esp,esp
   140038662:	or     eax,DWORD PTR [rax]
   140038664:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140038668:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14003866c:	sbb    DWORD PTR [rax+rcx*1],esi
   14003866f:	add    BYTE PTR [rcx],bl
   140038671:	push   rdx
   140038672:	adc    eax,0x21940f0
   140038677:	add    BYTE PTR [rcx],al
   140038679:	add    BYTE PTR [rax],al
   14003867b:	add    BYTE PTR [rdx],bh
   14003867d:	adc    eax,DWORD PTR [rdx]
   14003867f:	add    BYTE PTR [rsi+0x44000214],bh
   140038685:	pop    rbx
   140038686:	add    al,BYTE PTR [rax]
   140038688:	mov    esi,0x11000214
   14003868d:	sbb    BYTE PTR [rip+0x14621800],al        # 0x154659e93
   140038693:	loopne 0x1400386a7
   140038695:	jo     0x1400386a8
   140038697:	(bad)  
   140038698:	adc    BYTE PTR [rax],dh
   14003869a:	add    BYTE PTR [rax],al
   14003869c:	rex sbb DWORD PTR [rdx],eax
   14003869f:	add    BYTE PTR [rcx],al
   1400386a1:	add    BYTE PTR [rax],al
   1400386a3:	add    BYTE PTR [rdi+0x15],cl
   1400386a6:	add    al,BYTE PTR [rax]
   1400386a8:	outs   dx,DWORD PTR ds:[rsi]
   1400386a9:	adc    eax,0x5b620002
   1400386ae:	add    al,BYTE PTR [rax]
   1400386b0:	add    BYTE PTR [rax],al
   1400386b2:	add    BYTE PTR [rax],al
   1400386b4:	or     DWORD PTR [rdi],edx
   1400386b6:	(bad)  
   1400386b7:	add    BYTE PTR [rdi],dl
   1400386b9:	xor    al,0xd
   1400386bb:	add    BYTE PTR [rdi],dl
   1400386bd:	jb     0x1400386d2
   1400386bf:	loopne 0x1400386d2
   1400386c1:	jo     0x1400386d3
   1400386c3:	(bad)  
   1400386c4:	rex sbb DWORD PTR [rdx],eax
   1400386c7:	add    BYTE PTR [rcx],al
   1400386c9:	add    BYTE PTR [rax],al
   1400386cb:	add    BYTE PTR [rdi-0x47fffdeb],bl
   1400386d1:	adc    eax,0x5b8e0002
   1400386d6:	add    al,BYTE PTR [rax]
   1400386d8:	mov    eax,0x11000215
   1400386dd:	(bad)  
   1400386de:	add    al,BYTE PTR [rax]
   1400386e0:	(bad)  
   1400386e1:	xor    al,BYTE PTR [rdx]
   1400386e3:	xor    BYTE PTR [rax+0x19],al
   1400386e6:	add    al,BYTE PTR [rax]
   1400386e8:	add    DWORD PTR [rax],eax
   1400386ea:	add    BYTE PTR [rax],al
   1400386ec:	rex.WRXB (bad) 
   1400386ee:	add    al,BYTE PTR [rax]
   1400386f0:	mov    ch,0x16
   1400386f2:	add    al,BYTE PTR [rax]
   1400386f4:	iret   
   1400386f5:	pop    rbx
   1400386f6:	add    al,BYTE PTR [rax]
   1400386f8:	add    BYTE PTR [rax],al
   1400386fa:	add    BYTE PTR [rax],al
   1400386fc:	add    DWORD PTR [rdi],ecx
   1400386fe:	(bad)  
   1400386ff:	add    BYTE PTR [rdi],cl
   140038701:	fs (bad) 
   140038703:	add    BYTE PTR [rdi],cl
   140038705:	xor    al,0x6
   140038707:	add    BYTE PTR [rdi],cl
   140038709:	xor    cl,BYTE PTR [rbx]
   14003870b:	jo     0x14003870e
   14003870d:	sbb    DWORD PTR [rdx],ecx
   14003870f:	add    BYTE PTR [rcx],bl
   140038711:	je     0x14003871c
   140038713:	add    BYTE PTR [rcx],bl
   140038715:	or     BYTE PTR fs:[rax],al
   140038718:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14003871c:	sbb    DWORD PTR [rsi+rax*1],esi
   14003871f:	add    BYTE PTR [rcx],bl
   140038721:	xor    dl,BYTE PTR [rip+0xe0]        # 0x140038807
   140038727:	add    BYTE PTR [rcx],al
   140038729:	add    BYTE PTR [rax],al
   14003872b:	add    BYTE PTR [rax],al
   14003872d:	add    BYTE PTR [rax],al
   14003872f:	add    BYTE PTR [rcx],al
   140038731:	add    al,0x1
   140038733:	add    BYTE PTR [rdx+rdx*1],al
   140038736:	add    BYTE PTR [rax],al
   140038738:	or     DWORD PTR [rdx],ecx
   14003873a:	add    al,0x0
   14003873c:	or     dh,BYTE PTR [rsi+rax*1]
   14003873f:	add    BYTE PTR [rdx],cl
   140038741:	xor    al,BYTE PTR [rsi]
   140038743:	jo     0x140038785
   140038745:	sbb    DWORD PTR [rdx],eax
   140038747:	add    BYTE PTR [rcx],al
   140038749:	add    BYTE PTR [rax],al
   14003874b:	add    BYTE PTR [rbp-0x2ffffde6],bl
   140038751:	sbb    al,BYTE PTR [rdx]
   140038753:	add    al,dh
   140038755:	pop    rbx
   140038756:	add    al,BYTE PTR [rax]
   140038758:	rcr    BYTE PTR [rdx],1
   14003875a:	add    al,BYTE PTR [rax]
   14003875c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x174108766
   140038762:	or     DWORD PTR [rax],eax
   140038764:	or     eax,0x1500632
   140038769:	clts   
   14003876b:	add    BYTE PTR [rdi],cl
   14003876d:	or     BYTE PTR fs:[rax],al
   140038770:	sysenter 
   140038772:	(bad)  
   140038773:	add    BYTE PTR [rdi],cl
   140038775:	xor    cl,BYTE PTR [rbx]
   140038777:	jo     0x140038792
   140038779:	sub    BYTE PTR [rcx],cl
   14003877b:	xor    eax,0x10641a
   140038780:	(bad)  
   140038781:	xor    al,0xf
   140038783:	add    BYTE PTR [rdx],dl
   140038785:	xor    ecx,DWORD PTR [rip+0x7e00992]        # 0x147e3911d
   14003878b:	jo     0x140038793
   14003878d:	push   rax
   14003878e:	add    BYTE PTR [rax],al
   140038790:	sbb    QWORD PTR [rdx],rax
   140038793:	add    BYTE PTR [rcx],al
   140038795:	add    BYTE PTR [rax],al
   140038797:	add    ah,al
   140038799:	(bad)  
   14003879a:	add    al,BYTE PTR [rax]
   14003879c:	mov    rdx,cr0
   14003879f:	add    BYTE PTR [rcx],al
   1400387a1:	add    BYTE PTR [rax],al
   1400387a3:	add    BYTE PTR [rdi],cl
   1400387a5:	and    BYTE PTR [rdx],al
   1400387a7:	add    BYTE PTR [rcx+0x0],al
   1400387aa:	add    BYTE PTR [rax],al
   1400387ac:	add    DWORD PTR [rcx+rax*1],eax
   1400387af:	add    BYTE PTR [rdx+rax*4],al
   1400387b2:	add    BYTE PTR [rax],al
   1400387b4:	add    DWORD PTR [rsi],eax
   1400387b6:	add    al,BYTE PTR [rax]
   1400387b8:	(bad)  
   1400387b9:	xor    al,BYTE PTR [rdx]
   1400387bb:	xor    BYTE PTR [rcx],al
   1400387bd:	or     al,BYTE PTR [rax+rax*1]
   1400387c0:	or     dh,BYTE PTR [rsi+rax*1]
   1400387c3:	add    BYTE PTR [rdx],cl
   1400387c5:	xor    al,BYTE PTR [rsi]
   1400387c7:	jo     0x1400387c9
	...
   1400387d1:	add    BYTE PTR [rax],al
   1400387d3:	add    al,ch
   1400387d5:	xchg   DWORD PTR [rbx],eax
	...
   1400387e7:	add    BYTE PTR [rdx],al
   1400387e9:	add    BYTE PTR [rax],al
   1400387eb:	add    BYTE PTR [rax],al
   1400387ed:	mov    BYTE PTR [rbx],al
   1400387ef:	add    BYTE PTR [rax],ch
   1400387f1:	mov    BYTE PTR [rbx],al
	...
   1400387ff:	add    BYTE PTR [rcx],al
   140038801:	add    BYTE PTR [rax],al
   140038803:	add    BYTE PTR [rax+0x3b5],dh
   140038809:	add    BYTE PTR [rax],al
   14003880b:	add    bh,bh
   14003880d:	(bad)  
   14003880e:	(bad)  
   14003880f:	inc    DWORD PTR [rax]
   140038811:	add    BYTE PTR [rax],al
   140038813:	add    BYTE PTR [rax],cl
	...
   140038825:	add    BYTE PTR [rax],al
   140038827:	add    BYTE PTR [rcx],al
   140038829:	add    BYTE PTR [rax],al
   14003882b:	add    al,cl
   14003882d:	mov    ch,0x3
   14003882f:	add    BYTE PTR [rax],al
   140038831:	add    BYTE PTR [rax],al
   140038833:	add    bh,bh
   140038835:	(bad)  
   140038836:	(bad)  
   140038837:	inc    DWORD PTR [rax]
   140038839:	add    BYTE PTR [rax],al
   14003883b:	add    BYTE PTR [rax],cl
	...
   140038851:	add    BYTE PTR [rax],al
   140038853:	add    BYTE PTR [rax],dl
   140038855:	and    DWORD PTR [rdx],eax
   140038857:	add    BYTE PTR [rax],al
   140038859:	add    BYTE PTR [rax],al
   14003885b:	add    BYTE PTR [rax-0x78],dh
   14003885e:	add    eax,DWORD PTR [rax]
	...
   140038870:	add    DWORD PTR [rax],eax
   140038872:	add    BYTE PTR [rax],al
   140038874:	or     BYTE PTR [rax+0x3],0x0
	...
   140038883:	add    BYTE PTR [rax+0x3b7],al
   140038889:	add    BYTE PTR [rax],al
   14003888b:	add    bh,bh
   14003888d:	(bad)  
   14003888e:	(bad)  
   14003888f:	inc    DWORD PTR [rax]
   140038891:	add    BYTE PTR [rax],al
   140038893:	add    BYTE PTR [rax],ah
   140038895:	add    BYTE PTR [rax],al
   140038897:	add    al,dl
   140038899:	and    BYTE PTR [rdx],al
	...
   1400388a7:	add    BYTE PTR [rax+0x38f],bh
   1400388ad:	add    BYTE PTR [rax],al
   1400388af:	add    BYTE PTR [rax],al
   1400388b1:	add    BYTE PTR [rax],al
   1400388b3:	add    BYTE PTR [rax-0x68],cl
   1400388b6:	add    eax,DWORD PTR [rax]
   1400388b8:	clc    
   1400388b9:	add    al,BYTE PTR gs:[rax]
   1400388bc:	adc    BYTE PTR [rbx+rax*1+0x0],cl
   1400388c3:	add    BYTE PTR [rax],al
   1400388c5:	add    BYTE PTR [rax],al
   1400388c7:	add    BYTE PTR [rsi+0x5000039b],bl
   1400388cd:	(bad)  
   1400388cf:	add    BYTE PTR [rax-0x76],cl
   1400388d2:	add    eax,DWORD PTR [rax]
	...
   1400388dc:	and    ah,BYTE PTR [rax+0x60880003]
   1400388e2:	add    al,BYTE PTR [rax]
   1400388e4:	sbb    BYTE PTR [rdi+0x3],cl
   1400388ea:	add    BYTE PTR [rax],al
   1400388ec:	add    BYTE PTR [rax],al
   1400388ee:	add    BYTE PTR [rax],al
   1400388f0:	cld    
   1400388f1:	movabs al,ds:0x89c0000265580003
   1400388fa:	add    eax,DWORD PTR [rax]
	...
   140038904:	sbb    al,0xa2
   140038906:	add    eax,DWORD PTR [rax]
   140038908:	add    BYTE PTR [rax+0x2],ah
   14003890b:	add    BYTE PTR [rax+0x38e],bh
   140038911:	add    BYTE PTR [rax],al
   140038913:	add    BYTE PTR [rax],al
   140038915:	add    BYTE PTR [rax],al
   140038917:	add    BYTE PTR [rsi-0x5e],cl
   14003891a:	add    eax,DWORD PTR [rax]
   14003891c:	clc    
   14003891d:	add    al,BYTE PTR fs:[rax]
   140038920:	cmp    BYTE PTR [rdx+0x3],cl
   140038926:	add    BYTE PTR [rax],al
   140038928:	add    BYTE PTR [rax],al
   14003892a:	add    BYTE PTR [rax],al
   14003892c:	pop    rdx
   14003892d:	movabs ds:0x8ed0000260780003,al
   140038936:	add    eax,DWORD PTR [rax]
	...
   140038940:	mul    BYTE PTR [rdx+0x65100003]
   140038946:	add    al,BYTE PTR [rax]
   140038948:	add    BYTE PTR [rax+0x3],bl
   14003894e:	add    BYTE PTR [rax],al
   140038950:	add    BYTE PTR [rax],al
   140038952:	add    BYTE PTR [rax],al
   140038954:	mov    WORD PTR [rbx+0x6e400003],fs
   14003895a:	add    al,BYTE PTR [rax]
   14003895c:	(bad)  
   14003895d:	mov    es,WORD PTR [rbx]
	...
   140038967:	add    BYTE PTR [rsi-0x5ffffc5d],dl
   14003896d:	add    al,BYTE PTR fs:[rax]
   140038970:	clc    
   140038971:	mov    eax,DWORD PTR [rbx]
	...
   14003897b:	add    al,ah
   14003897d:	movabs ds:0x8fa8000262380003,eax
   140038986:	add    eax,DWORD PTR [rax]
	...
   140038990:	add    ah,BYTE PTR [rbx+rax*1+0x265e800]
   140038997:	add    BYTE PTR [rax+0x38f],cl
   14003899d:	add    BYTE PTR [rax],al
   14003899f:	add    BYTE PTR [rax],al
   1400389a1:	add    BYTE PTR [rax],al
   1400389a3:	add    BYTE PTR [rax-0x5c],dl
   1400389a6:	add    eax,DWORD PTR [rax]
   1400389a8:	enter  0x265,0x0
	...
   1400389c0:	or     BYTE PTR [rcx+0x3],ah
   1400389c6:	add    BYTE PTR [rax],al
   1400389c8:	movabs eax,es:0xa138000000000003
   1400389d2:	add    eax,DWORD PTR [rax]
   1400389d4:	add    BYTE PTR [rax],al
   1400389d6:	add    BYTE PTR [rax],al
   1400389d8:	rex.RX movabs eax,ds:0xa158000000000003
   1400389e2:	add    eax,DWORD PTR [rax]
   1400389e4:	add    BYTE PTR [rax],al
   1400389e6:	add    BYTE PTR [rax],al
   1400389e8:	nop
   1400389e9:	movabs eax,ds:0xa1a0000000000003
   1400389f2:	add    eax,DWORD PTR [rax]
   1400389f4:	add    BYTE PTR [rax],al
   1400389f6:	add    BYTE PTR [rax],al
   1400389f8:	mov    dl,0xa1
   1400389fa:	add    eax,DWORD PTR [rax]
   1400389fc:	add    BYTE PTR [rax],al
   1400389fe:	add    BYTE PTR [rax],al
   140038a00:	shl    BYTE PTR [rcx+0x3],0x0
   140038a07:	add    al,dl
   140038a09:	movabs eax,ds:0xa1e0000000000003
   140038a12:	add    eax,DWORD PTR [rax]
   140038a14:	add    BYTE PTR [rax],al
   140038a16:	add    BYTE PTR [rax],al
   140038a18:	hlt    
   140038a19:	movabs eax,ds:0xa20a000000000003
   140038a22:	add    eax,DWORD PTR [rax]
   140038a24:	add    BYTE PTR [rax],al
   140038a26:	add    BYTE PTR [rax],al
   140038a28:	(bad)  
   140038a29:	movabs eax,ds:0x3
   140038a32:	add    BYTE PTR [rax],al
   140038a34:	add    BYTE PTR [rax],al
   140038a36:	add    BYTE PTR [rax],al
   140038a38:	adc    DWORD PTR [rax],eax
   140038a3a:	add    BYTE PTR [rax],al
   140038a3c:	add    BYTE PTR [rax],al
   140038a3e:	add    BYTE PTR [rax+0x0],al
   140038a44:	add    BYTE PTR [rax],al
   140038a46:	add    BYTE PTR [rax],al
   140038a48:	jb     0x1400389ee
   140038a4a:	add    eax,DWORD PTR [rax]
   140038a4c:	add    BYTE PTR [rax],al
   140038a4e:	add    BYTE PTR [rax],al
   140038a50:	jle    0x1400389f6
   140038a52:	add    eax,DWORD PTR [rax]
   140038a54:	add    BYTE PTR [rax],al
   140038a56:	add    BYTE PTR [rax],al
   140038a58:	sub    BYTE PTR [rbp+0x3],bl
   140038a5e:	add    BYTE PTR [rax],al
   140038a60:	cmp    bl,BYTE PTR [rbp+0x3]
   140038a66:	add    BYTE PTR [rax],al
   140038a68:	rex.WRX popf 
   140038a6a:	add    eax,DWORD PTR [rax]
   140038a6c:	add    BYTE PTR [rax],al
   140038a6e:	add    BYTE PTR [rax],al
   140038a70:	pop    rsp
   140038a71:	popf   
   140038a72:	add    eax,DWORD PTR [rax]
   140038a74:	add    BYTE PTR [rax],al
   140038a76:	add    BYTE PTR [rax],al
   140038a78:	push   0xffffffffffffff9d
   140038a7a:	add    eax,DWORD PTR [rax]
   140038a7c:	add    BYTE PTR [rax],al
   140038a7e:	add    BYTE PTR [rax],al
   140038a80:	pop    rsp
   140038a81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038a82:	add    eax,DWORD PTR [rax]
   140038a84:	add    BYTE PTR [rax],al
   140038a86:	add    BYTE PTR [rax],al
   140038a88:	add    al,0x9d
   140038a8a:	add    eax,DWORD PTR [rax]
   140038a8c:	add    BYTE PTR [rax],al
   140038a8e:	add    BYTE PTR [rax],al
   140038a90:	cwde   
   140038a91:	popf   
   140038a92:	add    eax,DWORD PTR [rax]
   140038a94:	add    BYTE PTR [rax],al
   140038a96:	add    BYTE PTR [rax],al
   140038a98:	scas   al,BYTE PTR es:[rdi]
   140038a99:	popf   
   140038a9a:	add    eax,DWORD PTR [rax]
   140038a9c:	add    BYTE PTR [rax],al
   140038a9e:	add    BYTE PTR [rax],al
   140038aa0:	mov    esp,0x39d
   140038aa5:	add    BYTE PTR [rax],al
   140038aa7:	add    al,cl
   140038aa9:	popf   
   140038aaa:	add    eax,DWORD PTR [rax]
   140038aac:	add    BYTE PTR [rax],al
   140038aae:	add    BYTE PTR [rax],al
   140038ab0:	fcomp  QWORD PTR [rbp+0x3]
   140038ab6:	add    BYTE PTR [rax],al
   140038ab8:	(bad)  
   140038ab9:	popf   
   140038aba:	add    eax,DWORD PTR [rax]
   140038abc:	add    BYTE PTR [rax],al
   140038abe:	add    BYTE PTR [rax],al
   140038ac0:	(bad)  
   140038ac1:	sahf   
   140038ac2:	add    eax,DWORD PTR [rax]
   140038ac4:	add    BYTE PTR [rax],al
   140038ac6:	add    BYTE PTR [rax],al
   140038ac8:	adc    bl,BYTE PTR [rbp+0x3]
   140038ace:	add    BYTE PTR [rax],al
   140038ad0:	jbe    0x140038a6f
   140038ad2:	add    eax,DWORD PTR [rax]
   140038ad4:	add    BYTE PTR [rax],al
   140038ad6:	add    BYTE PTR [rax],al
   140038ad8:	sbb    bl,BYTE PTR [rsi+0x3]
   140038ade:	add    BYTE PTR [rax],al
   140038ae0:	es sahf 
   140038ae2:	add    eax,DWORD PTR [rax]
   140038ae4:	add    BYTE PTR [rax],al
   140038ae6:	add    BYTE PTR [rax],al
   140038ae8:	cmp    al,0x9e
   140038aea:	add    eax,DWORD PTR [rax]
   140038aec:	add    BYTE PTR [rax],al
   140038aee:	add    BYTE PTR [rax],al
   140038af0:	out    dx,al
   140038af1:	pushf  
   140038af2:	add    eax,DWORD PTR [rax]
   140038af4:	add    BYTE PTR [rax],al
   140038af6:	add    BYTE PTR [rax],al
   140038af8:	fcomp  DWORD PTR [rbx+rax*1+0x0]
   140038aff:	add    ah,cl
   140038b01:	pushf  
   140038b02:	add    eax,DWORD PTR [rax]
   140038b04:	add    BYTE PTR [rax],al
   140038b06:	add    BYTE PTR [rax],al
   140038b08:	mov    ah,0x9c
   140038b0a:	add    eax,DWORD PTR [rax]
   140038b0c:	add    BYTE PTR [rax],al
   140038b0e:	add    BYTE PTR [rax],al
   140038b10:	mov    WORD PTR [rbx+rax*1+0x0],ds
   140038b17:	add    BYTE PTR [rsp+rbx*4+0x3],bh
   140038b1b:	add    BYTE PTR [rax],al
   140038b1d:	add    BYTE PTR [rax],al
   140038b1f:	add    BYTE PTR [rax+0x39d],cl
   140038b25:	add    BYTE PTR [rax],al
   140038b27:	add    dl,dh
   140038b29:	popf   
   140038b2a:	add    eax,DWORD PTR [rax]
   140038b2c:	add    BYTE PTR [rax],al
   140038b2e:	add    BYTE PTR [rax],al
   140038b30:	rex.WR sahf 
   140038b32:	add    eax,DWORD PTR [rax]
   140038b34:	add    BYTE PTR [rax],al
   140038b36:	add    BYTE PTR [rax],al
   140038b38:	pop    rsp
   140038b39:	sahf   
   140038b3a:	add    eax,DWORD PTR [rax]
   140038b3c:	add    BYTE PTR [rax],al
   140038b3e:	add    BYTE PTR [rax],al
   140038b40:	push   0xffffffffffffff9e
   140038b42:	add    eax,DWORD PTR [rax]
   140038b44:	add    BYTE PTR [rax],al
   140038b46:	add    BYTE PTR [rax],al
   140038b48:	jle    0x140038ae8
   140038b4a:	add    eax,DWORD PTR [rax]
   140038b4c:	add    BYTE PTR [rax],al
   140038b4e:	add    BYTE PTR [rax],al
   140038b50:	mov    ds,WORD PTR [rsi+0x3]
   140038b56:	add    BYTE PTR [rax],al
   140038b58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140038b59:	sahf   
   140038b5a:	add    eax,DWORD PTR [rax]
   140038b5c:	add    BYTE PTR [rax],al
   140038b5e:	add    BYTE PTR [rax],al
   140038b60:	mov    dh,0x9e
   140038b62:	add    eax,DWORD PTR [rax]
   140038b64:	add    BYTE PTR [rax],al
   140038b66:	add    BYTE PTR [rax],al
   140038b68:	(bad)  
   140038b69:	sahf   
   140038b6a:	add    eax,DWORD PTR [rax]
   140038b6c:	add    BYTE PTR [rax],al
   140038b6e:	add    BYTE PTR [rax],al
   140038b70:	(bad)  
   140038b71:	sahf   
   140038b72:	add    eax,DWORD PTR [rax]
   140038b74:	add    BYTE PTR [rax],al
   140038b76:	add    BYTE PTR [rax],al
   140038b78:	out    0x9e,al
   140038b7a:	add    eax,DWORD PTR [rax]
   140038b7c:	add    BYTE PTR [rax],al
   140038b7e:	add    BYTE PTR [rax],al
   140038b80:	cli    
   140038b81:	sahf   
   140038b82:	add    eax,DWORD PTR [rax]
   140038b84:	add    BYTE PTR [rax],al
   140038b86:	add    BYTE PTR [rax],al
   140038b88:	adc    bl,BYTE PTR [rdi+0x3]
   140038b8e:	add    BYTE PTR [rax],al
   140038b90:	cs lahf 
   140038b92:	add    eax,DWORD PTR [rax]
   140038b94:	add    BYTE PTR [rax],al
   140038b96:	add    BYTE PTR [rax],al
   140038b98:	ins    BYTE PTR es:[rdi],dx
   140038b99:	pushf  
   140038b9a:	add    eax,DWORD PTR [rax]
   140038b9c:	add    BYTE PTR [rax],al
   140038b9e:	add    BYTE PTR [rax],al
   140038ba0:	rex.RX lahf 
   140038ba2:	add    eax,DWORD PTR [rax]
   140038ba4:	add    BYTE PTR [rax],al
   140038ba6:	add    BYTE PTR [rax],al
   140038ba8:	(bad)  
   140038ba9:	movabs al,ds:0x9ff2000000000003
   140038bb2:	add    eax,DWORD PTR [rax]
   140038bb4:	add    BYTE PTR [rax],al
   140038bb6:	add    BYTE PTR [rax],al
   140038bb8:	fcomp  DWORD PTR [rdi+0x3]
   140038bbe:	add    BYTE PTR [rax],al
   140038bc0:	ret    0x39f
   140038bc3:	add    BYTE PTR [rax],al
   140038bc5:	add    BYTE PTR [rax],al
   140038bc7:	add    BYTE PTR [rdi+rbx*4+0x3],ch
   140038bce:	add    BYTE PTR [rax],al
   140038bd0:	xchg   edx,eax
   140038bd1:	lahf   
   140038bd2:	add    eax,DWORD PTR [rax]
   140038bd4:	add    BYTE PTR [rax],al
   140038bd6:	add    BYTE PTR [rax],al
   140038bd8:	(bad)  
   140038bd9:	lahf   
   140038bda:	add    eax,DWORD PTR [rax]
   140038bdc:	add    BYTE PTR [rax],al
   140038bde:	add    BYTE PTR [rax],al
   140038be0:	je     0x140038b81
   140038be2:	add    eax,DWORD PTR [rax]
   140038be4:	add    BYTE PTR [rax],al
   140038be6:	add    BYTE PTR [rax],al
   140038be8:	pop    rsi
   140038be9:	lahf   
   140038bea:	add    eax,DWORD PTR [rax]
	...
   140038bf8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038bf9:	movabs ds:0xa3be000000000003,eax
   140038c02:	add    eax,DWORD PTR [rax]
	...
   140038c10:	and    BYTE PTR [rdx+0x3],bl
   140038c16:	add    BYTE PTR [rax],al
   140038c18:	adc    bl,BYTE PTR [rdx+0x3]
   140038c1e:	add    BYTE PTR [rax],al
   140038c20:	(bad)  
   140038c21:	(bad)  
   140038c22:	add    eax,DWORD PTR [rax]
   140038c24:	add    BYTE PTR [rax],al
   140038c26:	add    BYTE PTR [rax],al
   140038c28:	cli    
   140038c29:	cdq    
   140038c2a:	add    eax,DWORD PTR [rax]
   140038c2c:	add    BYTE PTR [rax],al
   140038c2e:	add    BYTE PTR [rax],al
   140038c30:	in     al,0x99
   140038c32:	add    eax,DWORD PTR [rax]
   140038c34:	add    BYTE PTR [rax],al
   140038c36:	add    BYTE PTR [rax],al
   140038c38:	(bad)  
   140038c39:	cdq    
   140038c3a:	add    eax,DWORD PTR [rax]
   140038c3c:	add    BYTE PTR [rax],al
   140038c3e:	add    BYTE PTR [rax],al
   140038c40:	enter  0x399,0x0
   140038c44:	add    BYTE PTR [rax],al
   140038c46:	add    BYTE PTR [rax],al
   140038c48:	mov    esp,0x399
   140038c4d:	add    BYTE PTR [rax],al
   140038c4f:	add    BYTE PTR [rax+0x399],dh
   140038c55:	add    BYTE PTR [rax],al
   140038c57:	add    BYTE PTR [rsi+0x399],ah
   140038c5d:	add    BYTE PTR [rax],al
   140038c5f:	add    BYTE PTR [rax+0x399],bl
   140038c65:	add    BYTE PTR [rax],al
   140038c67:	add    BYTE PTR [rsi+0x399],cl
   140038c6d:	add    BYTE PTR [rax],al
   140038c6f:	add    BYTE PTR [rcx+rbx*4+0x3],al
   140038c76:	add    BYTE PTR [rax],al
   140038c78:	js     0x140038c13
   140038c7a:	add    eax,DWORD PTR [rax]
   140038c7c:	add    BYTE PTR [rax],al
   140038c7e:	add    BYTE PTR [rax],al
   140038c80:	outs   dx,BYTE PTR ds:[rsi]
   140038c81:	cdq    
   140038c82:	add    eax,DWORD PTR [rax]
   140038c84:	add    BYTE PTR [rax],al
   140038c86:	add    BYTE PTR [rax],al
   140038c88:	fs cdq 
   140038c8a:	add    eax,DWORD PTR [rax]
   140038c8c:	add    BYTE PTR [rax],al
   140038c8e:	add    BYTE PTR [rax],al
   140038c90:	push   rsp
   140038c91:	cwde   
   140038c92:	add    eax,DWORD PTR [rax]
   140038c94:	add    BYTE PTR [rax],al
   140038c96:	add    BYTE PTR [rax],al
   140038c98:	pop    rax
   140038c99:	cdq    
   140038c9a:	add    eax,DWORD PTR [rax]
   140038c9c:	add    BYTE PTR [rax],al
   140038c9e:	add    BYTE PTR [rax],al
   140038ca0:	rex.WRX cqo 
   140038ca2:	add    eax,DWORD PTR [rax]
   140038ca4:	add    BYTE PTR [rax],al
   140038ca6:	add    BYTE PTR [rax],al
   140038ca8:	xor    BYTE PTR [rdx+0x3],bl
   140038cae:	add    BYTE PTR [rax],al
   140038cb0:	cmp    bl,BYTE PTR [rcx+0x3]
   140038cb6:	add    BYTE PTR [rax],al
   140038cb8:	xor    BYTE PTR [rcx+0x3],bl
   140038cbe:	add    BYTE PTR [rax],al
   140038cc0:	es cdq 
   140038cc2:	add    eax,DWORD PTR [rax]
   140038cc4:	add    BYTE PTR [rax],al
   140038cc6:	add    BYTE PTR [rax],al
   140038cc8:	sbb    bl,BYTE PTR [rcx+0x3]
   140038cce:	add    BYTE PTR [rax],al
   140038cd0:	(bad)  
   140038cd1:	cdq    
   140038cd2:	add    eax,DWORD PTR [rax]
   140038cd4:	add    BYTE PTR [rax],al
   140038cd6:	add    BYTE PTR [rax],al
   140038cd8:	add    bl,BYTE PTR [rcx+0x3]
   140038cde:	add    BYTE PTR [rax],al
   140038ce0:	neg    BYTE PTR [rax+0x3]
   140038ce6:	add    BYTE PTR [rax],al
   140038ce8:	in     al,dx
   140038ce9:	cwde   
   140038cea:	add    eax,DWORD PTR [rax]
   140038cec:	add    BYTE PTR [rax],al
   140038cee:	add    BYTE PTR [rax],al
   140038cf0:	in     al,0x98
   140038cf2:	add    eax,DWORD PTR [rax]
   140038cf4:	add    BYTE PTR [rax],al
   140038cf6:	add    BYTE PTR [rax],al
   140038cf8:	fcomp  DWORD PTR [rax+0x3]
   140038cfe:	add    BYTE PTR [rax],al
   140038d00:	(bad)  
   140038d01:	cwde   
   140038d02:	add    eax,DWORD PTR [rax]
   140038d04:	add    BYTE PTR [rax],al
   140038d06:	add    BYTE PTR [rax],al
   140038d08:	(bad)  
   140038d09:	cwde   
   140038d0a:	add    eax,DWORD PTR [rax]
   140038d0c:	add    BYTE PTR [rax],al
   140038d0e:	add    BYTE PTR [rax],al
   140038d10:	mov    edx,0x398
   140038d15:	add    BYTE PTR [rax],al
   140038d17:	add    BYTE PTR [rsi+0x398],ch
   140038d1d:	add    BYTE PTR [rax],al
   140038d1f:	add    BYTE PTR [rax+rbx*4+0x3],ah
   140038d26:	add    BYTE PTR [rax],al
   140038d28:	(bad)  
   140038d29:	cwde   
   140038d2a:	add    eax,DWORD PTR [rax]
   140038d2c:	add    BYTE PTR [rax],al
   140038d2e:	add    BYTE PTR [rax],al
   140038d30:	mov    BYTE PTR [rax+0x3],bl
   140038d36:	add    BYTE PTR [rax],al
   140038d38:	jl     0x140038cd2
   140038d3a:	add    eax,DWORD PTR [rax]
   140038d3c:	add    BYTE PTR [rax],al
   140038d3e:	add    BYTE PTR [rax],al
   140038d40:	cbw    
   140038d42:	add    eax,DWORD PTR [rax]
   140038d44:	add    BYTE PTR [rax],al
   140038d46:	add    BYTE PTR [rax],al
   140038d48:	cmp    al,0x9a
   140038d4a:	add    eax,DWORD PTR [rax]
   140038d4c:	add    BYTE PTR [rax],al
   140038d4e:	add    BYTE PTR [rax],al
   140038d50:	rex.R cdq 
   140038d52:	add    eax,DWORD PTR [rax]
   140038d54:	add    BYTE PTR [rax],al
   140038d56:	add    BYTE PTR [rax],al
   140038d58:	push   rdx
   140038d59:	(bad)  
   140038d5a:	add    eax,DWORD PTR [rax]
   140038d5c:	add    BYTE PTR [rax],al
   140038d5e:	add    BYTE PTR [rax],al
   140038d60:	pop    rsi
   140038d61:	cwde   
   140038d62:	add    eax,DWORD PTR [rax]
   140038d64:	add    BYTE PTR [rax],al
   140038d66:	add    BYTE PTR [rax],al
   140038d68:	rex.W (bad) 
   140038d6a:	add    eax,DWORD PTR [rax]
   140038d6c:	add    BYTE PTR [rax],al
   140038d6e:	add    BYTE PTR [rax],al
   140038d70:	rex.WRX pushf 
   140038d72:	add    eax,DWORD PTR [rax]
   140038d74:	add    BYTE PTR [rax],al
   140038d76:	add    BYTE PTR [rax],al
   140038d78:	ss pushf 
   140038d7a:	add    eax,DWORD PTR [rax]
   140038d7c:	add    BYTE PTR [rax],al
   140038d7e:	add    BYTE PTR [rax],al
   140038d80:	sbb    al,0x9c
   140038d82:	add    eax,DWORD PTR [rax]
   140038d84:	add    BYTE PTR [rax],al
   140038d86:	add    BYTE PTR [rax],al
   140038d88:	(bad)  
   140038d89:	pushf  
   140038d8a:	add    eax,DWORD PTR [rax]
   140038d8c:	add    BYTE PTR [rax],al
   140038d8e:	add    BYTE PTR [rax],al
   140038d90:	rcr    BYTE PTR [rbx+0x3],1
   140038d96:	add    BYTE PTR [rax],al
   140038d98:	lods   al,BYTE PTR ds:[rsi]
   140038d99:	fwait
   140038d9a:	add    eax,DWORD PTR [rax]
   140038d9c:	add    BYTE PTR [rax],al
   140038d9e:	add    BYTE PTR [rax],al
   140038da0:	xchg   esp,eax
   140038da1:	fwait
   140038da2:	add    eax,DWORD PTR [rax]
   140038da4:	add    BYTE PTR [rax],al
   140038da6:	add    BYTE PTR [rax],al
   140038da8:	xchg   BYTE PTR [rbx+0x3],bl
   140038dae:	add    BYTE PTR [rax],al
   140038db0:	js     0x140038d4d
   140038db2:	add    eax,DWORD PTR [rax]
   140038db4:	add    BYTE PTR [rax],al
   140038db6:	add    BYTE PTR [rax],al
   140038db8:	outs   dx,BYTE PTR ds:[rsi]
   140038db9:	fwait
   140038dba:	add    eax,DWORD PTR [rax]
   140038dbc:	add    BYTE PTR [rax],al
   140038dbe:	add    BYTE PTR [rax],al
   140038dc0:	data16 fwait
   140038dc2:	add    eax,DWORD PTR [rax]
   140038dc4:	add    BYTE PTR [rax],al
   140038dc6:	add    BYTE PTR [rax],al
   140038dc8:	push   rdx
   140038dc9:	fwait
   140038dca:	add    eax,DWORD PTR [rax]
   140038dcc:	add    BYTE PTR [rax],al
   140038dce:	add    BYTE PTR [rax],al
   140038dd0:	rex.RX
   140038dd1:	fwait
   140038dd2:	add    eax,DWORD PTR [rax]
   140038dd4:	add    BYTE PTR [rax],al
   140038dd6:	add    BYTE PTR [rax],al
   140038dd8:	cmp    al,0x9b
   140038dda:	add    eax,DWORD PTR [rax]
   140038ddc:	add    BYTE PTR [rax],al
   140038dde:	add    BYTE PTR [rax],al
   140038de0:	xor    bl,BYTE PTR [rbx+0x3]
   140038de6:	add    BYTE PTR [rax],al
   140038de8:	es fwait
   140038dea:	add    eax,DWORD PTR [rax]
   140038dec:	add    BYTE PTR [rax],al
   140038dee:	add    BYTE PTR [rax],al
   140038df0:	sbb    BYTE PTR [rbx+0x3],bl
   140038df6:	add    BYTE PTR [rax],al
   140038df8:	add    al,0x9b
   140038dfa:	add    eax,DWORD PTR [rax]
   140038dfc:	add    BYTE PTR [rax],al
   140038dfe:	add    BYTE PTR [rax],al
   140038e00:	out    dx,al
   140038e01:	(bad)  
   140038e02:	add    eax,DWORD PTR [rax]
   140038e04:	add    BYTE PTR [rax],al
   140038e06:	add    BYTE PTR [rax],al
   140038e08:	in     al,0x9a
   140038e0a:	add    eax,DWORD PTR [rax]
   140038e0c:	add    BYTE PTR [rax],al
   140038e0e:	add    BYTE PTR [rax],al
   140038e10:	fcomp  QWORD PTR [rdx+0x3]
   140038e16:	add    BYTE PTR [rax],al
   140038e18:	(bad)  
   140038e19:	(bad)  
   140038e1a:	add    eax,DWORD PTR [rax]
   140038e1c:	add    BYTE PTR [rax],al
   140038e1e:	add    BYTE PTR [rax],al
   140038e20:	ret    0x39a
   140038e23:	add    BYTE PTR [rax],al
   140038e25:	add    BYTE PTR [rax],al
   140038e27:	add    BYTE PTR [rax+0x39a],dh
   140038e2d:	add    BYTE PTR [rax],al
   140038e2f:	add    BYTE PTR [rdx+0x39a],ah
   140038e35:	add    BYTE PTR [rax],al
   140038e37:	add    BYTE PTR [rax+0x39a],cl
   140038e3d:	add    BYTE PTR [rax],al
   140038e3f:	add    BYTE PTR [rdx-0x66],bh
   140038e42:	add    eax,DWORD PTR [rax]
   140038e44:	add    BYTE PTR [rax],al
   140038e46:	add    BYTE PTR [rax],al
   140038e48:	(bad)  
   140038e49:	(bad)  
   140038e4a:	add    eax,DWORD PTR [rax]
   140038e4c:	add    BYTE PTR [rax],al
   140038e4e:	add    BYTE PTR [rax],al
   140038e50:	pop    rdx
   140038e51:	(bad)  
   140038e52:	add    eax,DWORD PTR [rax]
	...
   140038e60:	pop    rsi
   140038e61:	add    BYTE PTR [rax],al
   140038e63:	add    BYTE PTR [rax],al
   140038e65:	add    BYTE PTR [rax],al
   140038e67:	adc    BYTE PTR [rsi+0x0],0x0
   140038e6e:	add    BYTE PTR [rax+0x95],al
   140038e74:	add    BYTE PTR [rax],al
   140038e76:	add    BYTE PTR [rax+0x9],al
   140038e7c:	add    BYTE PTR [rax],al
   140038e7e:	add    BYTE PTR [rax+0x2],al
   140038e84:	add    BYTE PTR [rax],al
   140038e86:	add    BYTE PTR [rax+0x72],al
   140038e8c:	add    BYTE PTR [rax],al
   140038e8e:	add    BYTE PTR [rax+0xb9],al
   140038e94:	add    BYTE PTR [rax],al
   140038e96:	add    BYTE PTR [rax+0xb8],al
   140038e9c:	add    BYTE PTR [rax],al
   140038e9e:	add    BYTE PTR [rax+0x6],al
   140038ea4:	add    BYTE PTR [rax],al
   140038ea6:	add    BYTE PTR [rax+0xc8],al
   140038eac:	add    BYTE PTR [rax],al
   140038eae:	add    BYTE PTR [rax+0x0],al
   140038eb4:	add    BYTE PTR [rax],al
   140038eb6:	add    BYTE PTR [rax],al
   140038eb8:	movabs ds:0xa22a000000000003,al
   140038ec2:	add    eax,DWORD PTR [rax]
	...
   140038ed0:	push   0x3a2
   140038ed5:	add    BYTE PTR [rax],al
   140038ed7:	add    BYTE PTR [rdx-0x5e],bh
   140038eda:	add    eax,DWORD PTR [rax]
   140038edc:	add    BYTE PTR [rax],al
   140038ede:	add    BYTE PTR [rax],al
   140038ee0:	mov    fs,WORD PTR [rdx+0x3]
   140038ee6:	add    BYTE PTR [rax],al
   140038ee8:	sahf   
   140038ee9:	movabs ds:0xa2c0000000000003,al
   140038ef2:	add    eax,DWORD PTR [rax]
   140038ef4:	add    BYTE PTR [rax],al
   140038ef6:	add    BYTE PTR [rax],al
   140038ef8:	(bad)  
   140038ef9:	movabs ds:0xa2e6000000000003,al
   140038f02:	add    eax,DWORD PTR [rax]
   140038f04:	add    BYTE PTR [rax],al
   140038f06:	add    BYTE PTR [rax],al
   140038f08:	mov    dl,0xa2
   140038f0a:	add    eax,DWORD PTR [rax]
	...
   140038f18:	in     al,dx
   140038f19:	movabs al,ds:0xa0d8000000000003
   140038f22:	add    eax,DWORD PTR [rax]
   140038f24:	add    BYTE PTR [rax],al
   140038f26:	add    BYTE PTR [rax],al
   140038f28:	(bad)  
   140038f29:	movabs al,ds:0xa0b8000000000003
   140038f32:	add    eax,DWORD PTR [rax]
   140038f34:	add    BYTE PTR [rax],al
   140038f36:	add    BYTE PTR [rax],al
   140038f38:	lods   al,BYTE PTR ds:[rsi]
   140038f39:	movabs al,ds:0xa09c000000000003
   140038f42:	add    eax,DWORD PTR [rax]
   140038f44:	add    BYTE PTR [rax],al
   140038f46:	add    BYTE PTR [rax],al
   140038f48:	mov    WORD PTR [rax+0x3],fs
   140038f4e:	add    BYTE PTR [rax],al
   140038f50:	jl     0x140038ef2
   140038f52:	add    eax,DWORD PTR [rax]
   140038f54:	add    BYTE PTR [rax],al
   140038f56:	add    BYTE PTR [rax],al
   140038f58:	ins    BYTE PTR es:[rdi],dx
   140038f59:	movabs al,ds:0xa058000000000003
   140038f62:	add    eax,DWORD PTR [rax]
   140038f64:	add    BYTE PTR [rax],al
   140038f66:	add    BYTE PTR [rax],al
   140038f68:	rex.W movabs al,ds:0xa03c000000000003
   140038f72:	add    eax,DWORD PTR [rax]
   140038f74:	add    BYTE PTR [rax],al
   140038f76:	add    BYTE PTR [rax],al
   140038f78:	xor    BYTE PTR [rax+0x3],ah
	...
   140038f86:	add    BYTE PTR [rax],al
   140038f88:	sub    BYTE PTR [rbx+rax*1+0x0],ah
   140038f8f:	add    BYTE PTR [rsi],cl
   140038f91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038f92:	add    eax,DWORD PTR [rax]
   140038f94:	add    BYTE PTR [rax],al
   140038f96:	add    BYTE PTR [rax],al
   140038f98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038f9a:	add    eax,DWORD PTR [rax]
	...
   140038fa8:	out    dx,al
   140038fa9:	movabs ds:0x3,eax
   140038fb2:	add    BYTE PTR [rax],al
   140038fb4:	add    BYTE PTR [rax],al
   140038fb6:	add    BYTE PTR [rax],al
   140038fb8:	rex.XB (bad) 
   140038fba:	add    BYTE PTR [rax],al
   140038fbc:	add    BYTE PTR [rax],al
   140038fbe:	add    BYTE PTR [rax+0x1cac],al
   140038fc4:	add    BYTE PTR [rax],al
   140038fc6:	add    BYTE PTR [rax+0x1ca4],al
   140038fcc:	add    BYTE PTR [rax],al
   140038fce:	add    BYTE PTR [rax+0x1530],al
   140038fd4:	add    BYTE PTR [rax],al
   140038fd6:	add    BYTE PTR [rax+0x1e1e],al
   140038fdc:	add    BYTE PTR [rax],al
   140038fde:	add    BYTE PTR [rax+0xedf],al
   140038fe4:	add    BYTE PTR [rax],al
   140038fe6:	add    BYTE PTR [rax+0x1ba],al
   140038fec:	add    BYTE PTR [rax],al
   140038fee:	add    BYTE PTR [rax+0x43d],al
   140038ff4:	add    BYTE PTR [rax],al
   140038ff6:	add    BYTE PTR [rax+0xc60],al
   140038ffc:	add    BYTE PTR [rax],al
   140038ffe:	add    BYTE PTR [rax+0x1404],al
   140039004:	add    BYTE PTR [rax],al
   140039006:	add    BYTE PTR [rax+0x217f],al
   14003900c:	add    BYTE PTR [rax],al
   14003900e:	add    BYTE PTR [rax+0x28b3],al
   140039014:	add    BYTE PTR [rax],al
   140039016:	add    BYTE PTR [rax+0x235e],al
   14003901c:	add    BYTE PTR [rax],al
   14003901e:	add    BYTE PTR [rax+0x273b],al
   140039024:	add    BYTE PTR [rax],al
   140039026:	add    BYTE PTR [rax+0x32f5],al
   14003902c:	add    BYTE PTR [rax],al
   14003902e:	add    BYTE PTR [rax+0x1e67],al
   140039034:	add    BYTE PTR [rax],al
   140039036:	add    BYTE PTR [rax+0x3564],al
   14003903c:	add    BYTE PTR [rax],al
   14003903e:	add    BYTE PTR [rax+0x1513],al
   140039044:	add    BYTE PTR [rax],al
   140039046:	add    BYTE PTR [rax+0x3597],al
   14003904c:	add    BYTE PTR [rax],al
   14003904e:	add    BYTE PTR [rax+0x1d42],al
   140039054:	add    BYTE PTR [rax],al
   140039056:	add    BYTE PTR [rax+0x36d4],al
   14003905c:	add    BYTE PTR [rax],al
   14003905e:	add    BYTE PTR [rax+0x861],al
   140039064:	add    BYTE PTR [rax],al
   140039066:	add    BYTE PTR [rax+0x2363],al
   14003906c:	add    BYTE PTR [rax],al
   14003906e:	add    BYTE PTR [rax+0x2677],al
   140039074:	add    BYTE PTR [rax],al
   140039076:	add    BYTE PTR [rax+0x306b],al
   14003907c:	add    BYTE PTR [rax],al
   14003907e:	add    BYTE PTR [rax+0x362a],al
   140039084:	add    BYTE PTR [rax],al
   140039086:	add    BYTE PTR [rax+0x1721],al
   14003908c:	add    BYTE PTR [rax],al
   14003908e:	add    BYTE PTR [rax+0x1446],al
   140039094:	add    BYTE PTR [rax],al
   140039096:	add    BYTE PTR [rax+0x1491],al
   14003909c:	add    BYTE PTR [rax],al
   14003909e:	add    BYTE PTR [rax+0x3638],al
   1400390a4:	add    BYTE PTR [rax],al
   1400390a6:	add    BYTE PTR [rax+0x116d],al
   1400390ac:	add    BYTE PTR [rax],al
   1400390ae:	add    BYTE PTR [rax+0x1460],al
   1400390b4:	add    BYTE PTR [rax],al
   1400390b6:	add    BYTE PTR [rax+0x1a55],al
   1400390bc:	add    BYTE PTR [rax],al
   1400390be:	add    BYTE PTR [rax+0x1bd0],al
   1400390c4:	add    BYTE PTR [rax],al
   1400390c6:	add    BYTE PTR [rax+0x36fe],al
   1400390cc:	add    BYTE PTR [rax],al
   1400390ce:	add    BYTE PTR [rax+0x10cb],al
   1400390d4:	add    BYTE PTR [rax],al
   1400390d6:	add    BYTE PTR [rax+0x1e2],al
   1400390dc:	add    BYTE PTR [rax],al
   1400390de:	add    BYTE PTR [rax+0x146e],al
   1400390e4:	add    BYTE PTR [rax],al
   1400390e6:	add    BYTE PTR [rax+0x302e],al
   1400390ec:	add    BYTE PTR [rax],al
   1400390ee:	add    BYTE PTR [rax+0x1843],al
   1400390f4:	add    BYTE PTR [rax],al
   1400390f6:	add    BYTE PTR [rax+0x1470],al
   1400390fc:	add    BYTE PTR [rax],al
   1400390fe:	add    BYTE PTR [rax+0x3be],al
   140039104:	add    BYTE PTR [rax],al
   140039106:	add    BYTE PTR [rax+0x58e],al
   14003910c:	add    BYTE PTR [rax],al
   14003910e:	add    BYTE PTR [rax+0x2da7],al
   140039114:	add    BYTE PTR [rax],al
   140039116:	add    BYTE PTR [rax+0x170e],al
   14003911c:	add    BYTE PTR [rax],al
   14003911e:	add    BYTE PTR [rax+0x33c8],al
   140039124:	add    BYTE PTR [rax],al
   140039126:	add    BYTE PTR [rax+0xa5f],al
   14003912c:	add    BYTE PTR [rax],al
   14003912e:	add    BYTE PTR [rax+0x224e],al
   140039134:	add    BYTE PTR [rax],al
   140039136:	add    BYTE PTR [rax+0x2dd0],al
   14003913c:	add    BYTE PTR [rax],al
   14003913e:	add    BYTE PTR [rax+0x21a4],al
   140039144:	add    BYTE PTR [rax],al
   140039146:	add    BYTE PTR [rax+0x2958],al
   14003914c:	add    BYTE PTR [rax],al
   14003914e:	add    BYTE PTR [rax+0x2ace],al
   140039154:	add    BYTE PTR [rax],al
   140039156:	add    BYTE PTR [rax+0xcc1],al
   14003915c:	add    BYTE PTR [rax],al
   14003915e:	add    BYTE PTR [rax+0xcc2],al
   140039164:	add    BYTE PTR [rax],al
   140039166:	add    BYTE PTR [rax+0xbd5],al
   14003916c:	add    BYTE PTR [rax],al
   14003916e:	add    BYTE PTR [rax+0xa54],al
   140039174:	add    BYTE PTR [rax],al
   140039176:	add    BYTE PTR [rax+0x3534],al
   14003917c:	add    BYTE PTR [rax],al
   14003917e:	add    BYTE PTR [rax+0x353a],al
   140039184:	add    BYTE PTR [rax],al
   140039186:	add    BYTE PTR [rax+0x152d],al
   14003918c:	add    BYTE PTR [rax],al
   14003918e:	add    BYTE PTR [rax+0x87a],al
   140039194:	add    BYTE PTR [rax],al
   140039196:	add    BYTE PTR [rax+0x489],al
   14003919c:	add    BYTE PTR [rax],al
   14003919e:	add    BYTE PTR [rax+0x2f76],al
   1400391a4:	add    BYTE PTR [rax],al
   1400391a6:	add    BYTE PTR [rax+0x660],al
   1400391ac:	add    BYTE PTR [rax],al
   1400391ae:	add    BYTE PTR [rax+0x1f98],al
   1400391b4:	add    BYTE PTR [rax],al
   1400391b6:	add    BYTE PTR [rax+0x21f],al
   1400391bc:	add    BYTE PTR [rax],al
   1400391be:	add    BYTE PTR [rax+0x3644],al
   1400391c4:	add    BYTE PTR [rax],al
   1400391c6:	add    BYTE PTR [rax+0x364a],al
   1400391cc:	add    BYTE PTR [rax],al
   1400391ce:	add    BYTE PTR [rax+0xb33],al
   1400391d4:	add    BYTE PTR [rax],al
   1400391d6:	add    BYTE PTR [rax+0x11f],al
   1400391dc:	add    BYTE PTR [rax],al
   1400391de:	add    BYTE PTR [rax+0x109],al
   1400391e4:	add    BYTE PTR [rax],al
   1400391e6:	add    BYTE PTR [rax+0x1ba9],al
   1400391ec:	add    BYTE PTR [rax],al
   1400391ee:	add    BYTE PTR [rax+0x1613],al
   1400391f4:	add    BYTE PTR [rax],al
   1400391f6:	add    BYTE PTR [rax+0x41d],al
   1400391fc:	add    BYTE PTR [rax],al
   1400391fe:	add    BYTE PTR [rax+0x104f],al
   140039204:	add    BYTE PTR [rax],al
   140039206:	add    BYTE PTR [rax+0x16a],al
   14003920c:	add    BYTE PTR [rax],al
   14003920e:	add    BYTE PTR [rax+0x1a39],al
   140039214:	add    BYTE PTR [rax],al
   140039216:	add    BYTE PTR [rax+0x932],al
   14003921c:	add    BYTE PTR [rax],al
   14003921e:	add    BYTE PTR [rax+0x1bac],al
   140039224:	add    BYTE PTR [rax],al
   140039226:	add    BYTE PTR [rax+0x1ba5],al
   14003922c:	add    BYTE PTR [rax],al
   14003922e:	add    BYTE PTR [rax+0x2d49],al
   140039234:	add    BYTE PTR [rax],al
   140039236:	add    BYTE PTR [rax+0x16d],al
   14003923c:	add    BYTE PTR [rax],al
   14003923e:	add    BYTE PTR [rax+0x1f04],al
   140039244:	add    BYTE PTR [rax],al
   140039246:	add    BYTE PTR [rax+0x208e],al
   14003924c:	add    BYTE PTR [rax],al
   14003924e:	add    BYTE PTR [rax+0x2063],al
   140039254:	add    BYTE PTR [rax],al
   140039256:	add    BYTE PTR [rax+0x1173],al
   14003925c:	add    BYTE PTR [rax],al
   14003925e:	add    BYTE PTR [rax+0x5da],al
   140039264:	add    BYTE PTR [rax],al
   140039266:	add    BYTE PTR [rax+0x1905],al
   14003926c:	add    BYTE PTR [rax],al
   14003926e:	add    BYTE PTR [rax+0x3019],al
   140039274:	add    BYTE PTR [rax],al
   140039276:	add    BYTE PTR [rax+0x67e],al
   14003927c:	add    BYTE PTR [rax],al
   14003927e:	add    BYTE PTR [rax+0x1e5f],al
   140039284:	add    BYTE PTR [rax],al
   140039286:	add    BYTE PTR [rax+0x1c72],al
   14003928c:	add    BYTE PTR [rax],al
   14003928e:	add    BYTE PTR [rax+0x1710],al
   140039294:	add    BYTE PTR [rax],al
   140039296:	add    BYTE PTR [rax+0x33cc],al
   14003929c:	add    BYTE PTR [rax],al
   14003929e:	add    BYTE PTR [rax+0xc62],al
   1400392a4:	add    BYTE PTR [rax],al
   1400392a6:	add    BYTE PTR [rax+0xc5f],al
   1400392ac:	add    BYTE PTR [rax],al
   1400392ae:	add    BYTE PTR [rax+0x2663],al
   1400392b4:	add    BYTE PTR [rax],al
   1400392b6:	add    BYTE PTR [rax+0x1e73],al
   1400392bc:	add    BYTE PTR [rax],al
   1400392be:	add    BYTE PTR [rax+0xa60],al
   1400392c4:	add    BYTE PTR [rax],al
   1400392c6:	add    BYTE PTR [rax+0x5a9],al
   1400392cc:	add    BYTE PTR [rax],al
   1400392ce:	add    BYTE PTR [rax+0x2681],al
   1400392d4:	add    BYTE PTR [rax],al
   1400392d6:	add    BYTE PTR [rax+0x2683],al
   1400392dc:	add    BYTE PTR [rax],al
   1400392de:	add    BYTE PTR [rax+0x2682],al
   1400392e4:	add    BYTE PTR [rax],al
   1400392e6:	add    BYTE PTR [rax+0x2680],al
   1400392ec:	add    BYTE PTR [rax],al
   1400392ee:	add    BYTE PTR [rax+0x2684],al
   1400392f4:	add    BYTE PTR [rax],al
   1400392f6:	add    BYTE PTR [rax+0x14eb],al
   1400392fc:	add    BYTE PTR [rax],al
   1400392fe:	add    BYTE PTR [rax+0x2c18],al
   140039304:	add    BYTE PTR [rax],al
   140039306:	add    BYTE PTR [rax+0x2c19],al
   14003930c:	add    BYTE PTR [rax],al
   14003930e:	add    BYTE PTR [rax+0x2207],al
   140039314:	add    BYTE PTR [rax],al
   140039316:	add    BYTE PTR [rax+0x2d7d],al
   14003931c:	add    BYTE PTR [rax],al
   14003931e:	add    BYTE PTR [rax+0xe5b],al
   140039324:	add    BYTE PTR [rax],al
   140039326:	add    BYTE PTR [rax+0x2ceb],al
   14003932c:	add    BYTE PTR [rax],al
   14003932e:	add    BYTE PTR [rax+0x36f3],al
   140039334:	add    BYTE PTR [rax],al
   140039336:	add    BYTE PTR [rax+0x2159],al
   14003933c:	add    BYTE PTR [rax],al
   14003933e:	add    BYTE PTR [rax+0x2e00],al
   140039344:	add    BYTE PTR [rax],al
   140039346:	add    BYTE PTR [rax+0x19e1],al
   14003934c:	add    BYTE PTR [rax],al
   14003934e:	add    BYTE PTR [rax+0x294b],al
   140039354:	add    BYTE PTR [rax],al
   140039356:	add    BYTE PTR [rax+0x227c],al
   14003935c:	add    BYTE PTR [rax],al
   14003935e:	add    BYTE PTR [rax+0xc3b],al
   140039364:	add    BYTE PTR [rax],al
   140039366:	add    BYTE PTR [rax+0x343c],al
   14003936c:	add    BYTE PTR [rax],al
   14003936e:	add    BYTE PTR [rax+0x2e27],al
   140039374:	add    BYTE PTR [rax],al
   140039376:	add    BYTE PTR [rax+0x2e25],al
   14003937c:	add    BYTE PTR [rax],al
   14003937e:	add    BYTE PTR [rax+0x699],al
   140039384:	add    BYTE PTR [rax],al
   140039386:	add    BYTE PTR [rax+0x6a5],al
   14003938c:	add    BYTE PTR [rax],al
   14003938e:	add    BYTE PTR [rax+0x6ad],al
   140039394:	add    BYTE PTR [rax],al
   140039396:	add    BYTE PTR [rax+0x777],al
   14003939c:	add    BYTE PTR [rax],al
   14003939e:	add    BYTE PTR [rax+0x6b2],al
   1400393a4:	add    BYTE PTR [rax],al
   1400393a6:	add    BYTE PTR [rax+0x126e],al
   1400393ac:	add    BYTE PTR [rax],al
   1400393ae:	add    BYTE PTR [rax+0x1297],al
   1400393b4:	add    BYTE PTR [rax],al
   1400393b6:	add    BYTE PTR [rax+0x1276],al
   1400393bc:	add    BYTE PTR [rax],al
   1400393be:	add    BYTE PTR [rax+0x1282],al
   1400393c4:	add    BYTE PTR [rax],al
   1400393c6:	add    BYTE PTR [rax+0x127e],al
   1400393cc:	add    BYTE PTR [rax],al
   1400393ce:	add    BYTE PTR [rax+0x127a],al
   1400393d4:	add    BYTE PTR [rax],al
   1400393d6:	add    BYTE PTR [rax+0x129f],al
   1400393dc:	add    BYTE PTR [rax],al
   1400393de:	add    BYTE PTR [rax+0x1293],al
   1400393e4:	add    BYTE PTR [rax],al
   1400393e6:	add    BYTE PTR [rax+0x1272],al
   1400393ec:	add    BYTE PTR [rax],al
   1400393ee:	add    BYTE PTR [rax+0x12a3],al
   1400393f4:	add    BYTE PTR [rax],al
   1400393f6:	add    BYTE PTR [rax+0x1288],al
   1400393fc:	add    BYTE PTR [rax],al
   1400393fe:	add    BYTE PTR [rax+0x1262],al
   140039404:	add    BYTE PTR [rax],al
   140039406:	add    BYTE PTR [rax+0x1269],al
   14003940c:	add    BYTE PTR [rax],al
   14003940e:	add    BYTE PTR [rax+0x128c],al
   140039414:	add    BYTE PTR [rax],al
   140039416:	add    BYTE PTR [rax+0x10dc],al
   14003941c:	add    BYTE PTR [rax],al
   14003941e:	add    BYTE PTR [rax+0x156c],al
   140039424:	add    BYTE PTR [rax],al
   140039426:	add    BYTE PTR [rax+0x2431],al
   14003942c:	add    BYTE PTR [rax],al
   14003942e:	add    BYTE PTR [rax+0x10d4],al
   140039434:	add    BYTE PTR [rax],al
   140039436:	add    BYTE PTR [rax+0xb6d],al
   14003943c:	add    BYTE PTR [rax],al
   14003943e:	add    BYTE PTR [rax+0x36f5],al
   140039444:	add    BYTE PTR [rax],al
   140039446:	add    BYTE PTR [rax+0x1d6f],al
   14003944c:	add    BYTE PTR [rax],al
   14003944e:	add    BYTE PTR [rax+0x36fb],al
   140039454:	add    BYTE PTR [rax],al
   140039456:	add    BYTE PTR [rax+0x197f],al
   14003945c:	add    BYTE PTR [rax],al
   14003945e:	add    BYTE PTR [rax+0x2c10],al
   140039464:	add    BYTE PTR [rax],al
   140039466:	add    BYTE PTR [rax+0x339d],al
   14003946c:	add    BYTE PTR [rax],al
   14003946e:	add    BYTE PTR [rax+0x15f9],al
   140039474:	add    BYTE PTR [rax],al
   140039476:	add    BYTE PTR [rax+0xa1b],al
   14003947c:	add    BYTE PTR [rax],al
   14003947e:	add    BYTE PTR [rax+0x2da0],al
   140039484:	add    BYTE PTR [rax],al
   140039486:	add    BYTE PTR [rax+0xeb9],al
   14003948c:	add    BYTE PTR [rax],al
   14003948e:	add    BYTE PTR [rax+0xca4],al
   140039494:	add    BYTE PTR [rax],al
   140039496:	add    BYTE PTR [rax+0xca5],al
   14003949c:	add    BYTE PTR [rax],al
   14003949e:	add    BYTE PTR [rax+0xc3a],al
   1400394a4:	add    BYTE PTR [rax],al
   1400394a6:	add    BYTE PTR [rax+0x2dcc],al
   1400394ac:	add    BYTE PTR [rax],al
   1400394ae:	add    BYTE PTR [rax+0x124a],al
   1400394b4:	add    BYTE PTR [rax],al
   1400394b6:	add    BYTE PTR [rax+0x3db],al
   1400394bc:	add    BYTE PTR [rax],al
   1400394be:	add    BYTE PTR [rax+0x1974],al
   1400394c4:	add    BYTE PTR [rax],al
   1400394c6:	add    BYTE PTR [rax+0x1204],al
   1400394cc:	add    BYTE PTR [rax],al
   1400394ce:	add    BYTE PTR [rax+0x8fe],al
   1400394d4:	add    BYTE PTR [rax],al
   1400394d6:	add    BYTE PTR [rax+0x366c],al
   1400394dc:	add    BYTE PTR [rax],al
   1400394de:	add    BYTE PTR [rax+0x3ab],al
   1400394e4:	add    BYTE PTR [rax],al
   1400394e6:	add    BYTE PTR [rax+0x45c],al
   1400394ec:	add    BYTE PTR [rax],al
   1400394ee:	add    BYTE PTR [rax+0x1e0],al
   1400394f4:	add    BYTE PTR [rax],al
   1400394f6:	add    BYTE PTR [rax+0x3a5],al
   1400394fc:	add    BYTE PTR [rax],al
   1400394fe:	add    BYTE PTR [rax+0x858],al
   140039504:	add    BYTE PTR [rax],al
   140039506:	add    BYTE PTR [rax+0x1f71],al
   14003950c:	add    BYTE PTR [rax],al
   14003950e:	add    BYTE PTR [rax+0x1c71],al
   140039514:	add    BYTE PTR [rax],al
   140039516:	add    BYTE PTR [rax+0x5a5],al
   14003951c:	add    BYTE PTR [rax],al
   14003951e:	add    BYTE PTR [rax+0x1f1e],al
   140039524:	add    BYTE PTR [rax],al
   140039526:	add    BYTE PTR [rax+0x2e1b],al
   14003952c:	add    BYTE PTR [rax],al
   14003952e:	add    BYTE PTR [rax+0x2715],al
   140039534:	add    BYTE PTR [rax],al
   140039536:	add    BYTE PTR [rax+0x30bc],al
   14003953c:	add    BYTE PTR [rax],al
   14003953e:	add    BYTE PTR [rax+0x307e],al
   140039544:	add    BYTE PTR [rax],al
   140039546:	add    BYTE PTR [rax+0x1131],al
   14003954c:	add    BYTE PTR [rax],al
   14003954e:	add    BYTE PTR [rax+0x1db0],al
   140039554:	add    BYTE PTR [rax],al
   140039556:	add    BYTE PTR [rax+0x1ee1],al
   14003955c:	add    BYTE PTR [rax],al
   14003955e:	add    BYTE PTR [rax+0x13df],al
   140039564:	add    BYTE PTR [rax],al
   140039566:	add    BYTE PTR [rax+0x95d],al
   14003956c:	add    BYTE PTR [rax],al
   14003956e:	add    BYTE PTR [rax+0x2f3d],al
   140039574:	add    BYTE PTR [rax],al
   140039576:	add    BYTE PTR [rax+0x2f3c],al
   14003957c:	add    BYTE PTR [rax],al
   14003957e:	add    BYTE PTR [rax+0x36f4],al
   140039584:	add    BYTE PTR [rax],al
   140039586:	add    BYTE PTR [rax+0x1d6e],al
   14003958c:	add    BYTE PTR [rax],al
   14003958e:	add    BYTE PTR [rax+0x36fa],al
   140039594:	add    BYTE PTR [rax],al
   140039596:	add    BYTE PTR [rax+0x230a],al
   14003959c:	add    BYTE PTR [rax],al
   14003959e:	add    BYTE PTR [rax+0xf80],al
   1400395a4:	add    BYTE PTR [rax],al
   1400395a6:	add    BYTE PTR [rax+0xf42],al
   1400395ac:	add    BYTE PTR [rax],al
   1400395ae:	add    BYTE PTR [rax+0x30cf],al
   1400395b4:	add    BYTE PTR [rax],al
   1400395b6:	add    BYTE PTR [rax+0x1d80],al
   1400395bc:	add    BYTE PTR [rax],al
   1400395be:	add    BYTE PTR [rax+0x2d3f],al
   1400395c4:	add    BYTE PTR [rax],al
   1400395c6:	add    BYTE PTR [rax+0x7b1],al
   1400395cc:	add    BYTE PTR [rax],al
   1400395ce:	add    BYTE PTR [rax+0x2d13],al
   1400395d4:	add    BYTE PTR [rax],al
   1400395d6:	add    BYTE PTR [rax+0x2d12],al
   1400395dc:	add    BYTE PTR [rax],al
   1400395de:	add    BYTE PTR [rax+0x367b],al
   1400395e4:	add    BYTE PTR [rax],al
   1400395e6:	add    BYTE PTR [rax+0x2f32],al
   1400395ec:	add    BYTE PTR [rax],al
   1400395ee:	add    BYTE PTR [rax+0x1db3],al
   1400395f4:	add    BYTE PTR [rax],al
   1400395f6:	add    BYTE PTR [rax+0x3742],al
   1400395fc:	add    BYTE PTR [rax],al
   1400395fe:	add    BYTE PTR [rax+0x1787],al
   140039604:	add    BYTE PTR [rax],al
   140039606:	add    BYTE PTR [rax+0x3744],al
   14003960c:	add    BYTE PTR [rax],al
   14003960e:	add    BYTE PTR [rax+0x1789],al
   140039614:	add    BYTE PTR [rax],al
   140039616:	add    BYTE PTR [rax+0x3743],al
   14003961c:	add    BYTE PTR [rax],al
   14003961e:	add    BYTE PTR [rax+0x1788],al
   140039624:	add    BYTE PTR [rax],al
   140039626:	add    BYTE PTR [rax+0x3d4],al
   14003962c:	add    BYTE PTR [rax],al
   14003962e:	add    BYTE PTR [rax+0x196f],al
   140039634:	add    BYTE PTR [rax],al
   140039636:	add    BYTE PTR [rax+0x420],al
   14003963c:	add    BYTE PTR [rax],al
   14003963e:	add    BYTE PTR [rax+0xe68],al
   140039644:	add    BYTE PTR [rax],al
   140039646:	add    BYTE PTR [rax+0x15e8],al
   14003964c:	add    BYTE PTR [rax],al
   14003964e:	add    BYTE PTR [rax+0x2e13],al
   140039654:	add    BYTE PTR [rax],al
   140039656:	add    BYTE PTR [rax+0x1e7a],al
   14003965c:	add    BYTE PTR [rax],al
   14003965e:	add    BYTE PTR [rax+0x2e1f],al
   140039664:	add    BYTE PTR [rax],al
   140039666:	add    BYTE PTR [rax+0x2dff],al
   14003966c:	add    BYTE PTR [rax],al
   14003966e:	add    BYTE PTR [rax+0xf44],al
   140039674:	add    BYTE PTR [rax],al
   140039676:	add    BYTE PTR [rax+0x137b],al
   14003967c:	add    BYTE PTR [rax],al
   14003967e:	add    BYTE PTR [rax+0x1493],al
   140039684:	add    BYTE PTR [rax],al
   140039686:	add    BYTE PTR [rax+0x154f],al
   14003968c:	add    BYTE PTR [rax],al
   14003968e:	add    BYTE PTR [rax+0x22da],al
   140039694:	add    BYTE PTR [rax],al
   140039696:	add    BYTE PTR [rax+0x147b],al
   14003969c:	add    BYTE PTR [rax],al
   14003969e:	add    BYTE PTR [rax+0x1552],al
   1400396a4:	add    BYTE PTR [rax],al
   1400396a6:	add    BYTE PTR [rax+0x137e],al
   1400396ac:	add    BYTE PTR [rax],al
   1400396ae:	add    BYTE PTR [rax+0x140d],al
   1400396b4:	add    BYTE PTR [rax],al
   1400396b6:	add    BYTE PTR [rax+0x136a],al
   1400396bc:	add    BYTE PTR [rax],al
   1400396be:	add    BYTE PTR [rax+0x1cb2],al
   1400396c4:	add    BYTE PTR [rax],al
   1400396c6:	add    BYTE PTR [rax+0x1cb3],al
   1400396cc:	add    BYTE PTR [rax],al
   1400396ce:	add    BYTE PTR [rax+0x1ca9],al
   1400396d4:	add    BYTE PTR [rax],al
   1400396d6:	add    BYTE PTR [rax+0x140b],al
   1400396dc:	add    BYTE PTR [rax],al
   1400396de:	add    BYTE PTR [rax+0x1e7c],al
   1400396e4:	add    BYTE PTR [rax],al
   1400396e6:	add    BYTE PTR [rax+0x265e],al
   1400396ec:	add    BYTE PTR [rax],al
   1400396ee:	add    BYTE PTR [rax+0x224d],al
   1400396f4:	add    BYTE PTR [rax],al
   1400396f6:	add    BYTE PTR [rax+0x1f6b],al
   1400396fc:	add    BYTE PTR [rax],al
   1400396fe:	add    BYTE PTR [rax+0xb2d],al
   140039704:	add    BYTE PTR [rax],al
   140039706:	add    BYTE PTR [rax+0x15eb],al
   14003970c:	add    BYTE PTR [rax],al
   14003970e:	add    BYTE PTR [rax+0x681],al
   140039714:	add    BYTE PTR [rax],al
   140039716:	add    BYTE PTR [rax+0x5d8],al
   14003971c:	add    BYTE PTR [rax],al
   14003971e:	add    BYTE PTR [rax+0x406],al
   140039724:	add    BYTE PTR [rax],al
   140039726:	add    BYTE PTR [rax+0x11e],al
   14003972c:	add    BYTE PTR [rax],al
   14003972e:	add    BYTE PTR [rax+0x118],al
   140039734:	add    BYTE PTR [rax],al
   140039736:	add    BYTE PTR [rax+0x11d],al
   14003973c:	add    BYTE PTR [rax],al
   14003973e:	add    BYTE PTR [rax+0x128],al
   140039744:	add    BYTE PTR [rax],al
   140039746:	add    BYTE PTR [rax+0xb3f],al
   14003974c:	add    BYTE PTR [rax],al
   14003974e:	add    BYTE PTR [rax+0x35f0],al
   140039754:	add    BYTE PTR [rax],al
   140039756:	add    BYTE PTR [rax+0x2f4e],al
   14003975c:	add    BYTE PTR [rax],al
   14003975e:	add    BYTE PTR [rax+0x15c8],al
   140039764:	add    BYTE PTR [rax],al
   140039766:	add    BYTE PTR [rax+0x12f7],al
   14003976c:	add    BYTE PTR [rax],al
   14003976e:	add    BYTE PTR [rax+0x664],al
   140039774:	add    BYTE PTR [rax],al
   140039776:	add    BYTE PTR [rax+0x904],al
   14003977c:	add    BYTE PTR [rax],al
   14003977e:	add    BYTE PTR [rax+0x900],al
   140039784:	add    BYTE PTR [rax],al
   140039786:	add    BYTE PTR [rax+0x6a9],al
   14003978c:	add    BYTE PTR [rax],al
   14003978e:	add    BYTE PTR [rax+0xa51],al
   140039794:	add    BYTE PTR [rax],al
   140039796:	add    BYTE PTR [rax+0x5cc],al
   14003979c:	add    BYTE PTR [rax],al
   14003979e:	add    BYTE PTR [rax+0x10a],al
   1400397a4:	add    BYTE PTR [rax],al
   1400397a6:	add    BYTE PTR [rax+0x1088],al
   1400397ac:	add    BYTE PTR [rax],al
   1400397ae:	add    BYTE PTR [rax+0x5ce],al
   1400397b4:	add    BYTE PTR [rax],al
   1400397b6:	add    BYTE PTR [rax+0x5cf],al
   1400397bc:	add    BYTE PTR [rax],al
   1400397be:	add    BYTE PTR [rax+0x144],al
   1400397c4:	add    BYTE PTR [rax],al
   1400397c6:	add    BYTE PTR [rax+0x40d],al
   1400397cc:	add    BYTE PTR [rax],al
   1400397ce:	add    BYTE PTR [rax+0x8ed],al
   1400397d4:	add    BYTE PTR [rax],al
   1400397d6:	add    BYTE PTR [rax+0x143],al
   1400397dc:	add    BYTE PTR [rax],al
   1400397de:	add    BYTE PTR [rax+0x40c],al
   1400397e4:	add    BYTE PTR [rax],al
   1400397e6:	add    BYTE PTR [rax+0x91a],al
   1400397ec:	add    BYTE PTR [rax],al
   1400397ee:	add    BYTE PTR [rax+0x918],al
   1400397f4:	add    BYTE PTR [rax],al
   1400397f6:	add    BYTE PTR [rax+0x0],al
   1400397fc:	add    BYTE PTR [rax],al
   1400397fe:	add    BYTE PTR [rax],al
   140039800:	jp     0x1400397a5
   140039802:	add    eax,DWORD PTR [rax]
   140039804:	add    BYTE PTR [rax],al
   140039806:	add    BYTE PTR [rax],al
   140039808:	push   0x3a3
   14003980d:	add    BYTE PTR [rax],al
   14003980f:	add    BYTE PTR [rsi-0x5d],bl
   140039812:	add    eax,DWORD PTR [rax]
   140039814:	add    BYTE PTR [rax],al
   140039816:	add    BYTE PTR [rax],al
   140039818:	rex.WRX movabs ds:0xa33a000000000003,rax
   140039822:	add    eax,DWORD PTR [rax]
   140039824:	add    BYTE PTR [rax],al
   140039826:	add    BYTE PTR [rax],al
   140039828:	sub    BYTE PTR [rbx+0x3],ah
   14003982e:	add    BYTE PTR [rax],al
   140039830:	adc    al,0xa3
   140039832:	add    eax,DWORD PTR [rax]
   140039834:	add    BYTE PTR [rax],al
   140039836:	add    BYTE PTR [rax],al
   140039838:	add    ah,BYTE PTR [rbx+0x3]
	...
   140039846:	add    BYTE PTR [rax],al
   140039848:	ins    DWORD PTR es:[rdi],dx
   140039849:	movsxd si,DWORD PTR [rcx]
   14003984c:	xor    dh,BYTE PTR [rax]
   14003984e:	jne    0x14003987e
   140039850:	fs ins BYTE PTR es:[rdi],dx
   140039852:	ins    BYTE PTR es:[rdi],dx
   140039853:	add    BYTE PTR [rcx+0x6d656d06],bh
   140039859:	jae    0x1400398c0
   14003985b:	je     0x14003985d
   14003985d:	add    BYTE PTR [rax+0x6],dl
   140039860:	data16 jb 0x1400398c8
   140039863:	add    BYTE PTR gs:[rax],al
   140039866:	(bad)
   14003986b:	js     0x1400398e5
   14003986d:	rex.RX jb 0x1400398d1
   140039870:	ins    DWORD PTR es:[rdi],dx
   140039871:	gs rex.W (bad) 
   140039874:	outs   dx,BYTE PTR ds:[rsi]
   140039875:	fs ins BYTE PTR es:[rdi],dx
   140039877:	gs jb  0x1400398ad
   14003987a:	add    BYTE PTR [rax],al
   14003987c:	pop    rsp
   14003987d:	(bad)  
   14003987e:	ja     0x1400398e3
   140039880:	jae    0x1400398e5
   140039882:	jo     0x1400398fd
   140039884:	pop    rdi
   140039885:	jae    0x140039887
   140039887:	add    BYTE PTR [rdx+0x3],bl
   14003988a:	pop    rdi
   14003988b:	ins    BYTE PTR es:[rdi],dx
   14003988c:	outs   dx,DWORD PTR ds:[rsi]
   14003988d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039890:	je     0x1400398fb
   140039892:	ins    DWORD PTR es:[rdi],dx
   140039893:	gs ss xor al,0x5f
   140039897:	jae    0x140039899
   140039899:	add    BYTE PTR [rbx+0x69745f04],ch
   14003989f:	ins    DWORD PTR es:[rdi],dx
   1400398a0:	gs ss xor al,0x0
   1400398a4:	mov    ah,0x6
   1400398a6:	ins    DWORD PTR es:[rdi],dx
   1400398a7:	gs ins DWORD PTR es:[rdi],dx
   1400398a9:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400398ac:	add    BYTE PTR [rax],al
   1400398ae:	mov    dh,0x6
   1400398b0:	ins    DWORD PTR es:[rdi],dx
   1400398b1:	gs ins DWORD PTR es:[rdi],dx
   1400398b3:	movsxd esi,DWORD PTR [rax+0x79]
   1400398b6:	pop    rdi
   1400398b7:	jae    0x1400398b9
   1400398b9:	add    BYTE PTR [rdi+0x7],bl
   1400398bc:	ja     0x140039921
   1400398be:	jae    0x14003992c
   1400398c0:	outs   dx,BYTE PTR gs:[rsi]
   1400398c2:	add    BYTE PTR [rax],al
   1400398c4:	imul   eax,DWORD PTR [rbx],0x6f746c5f
   1400398ca:	ja     0x14003992b
   1400398cc:	jae    0x1400398ce
   1400398ce:	vpacksswb ymm12,ymm15,YMMWORD PTR [rcx+0x6c]
   1400398d3:	ins    BYTE PTR es:[rdi],dx
   1400398d4:	outs   dx,DWORD PTR ds:[rsi]
   1400398d5:	movsxd eax,DWORD PTR [rax]
   1400398d7:	add    BYTE PTR [rdx],bl
   1400398d9:	add    al,0x5f
   1400398db:	jb     0x140039942
   1400398dd:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400398e0:	ins    BYTE PTR es:[rdi],dx
   1400398e1:	outs   dx,DWORD PTR ds:[rsi]
   1400398e2:	movsxd eax,DWORD PTR [rax]
   1400398e4:	xchg   ecx,eax
   1400398e5:	add    eax,0x6f74775f
   1400398ea:	imul   eax,DWORD PTR [rax],0x63770758
   1400398f0:	jae    0x140039955
   1400398f2:	push   0x26000072
   1400398f7:	(bad)  
   1400398f8:	jae    0x140039971
   1400398fa:	jae    0x14003995f
   1400398fc:	(bad)  
   1400398fd:	outs   dx,BYTE PTR ds:[rsi]
   1400398fe:	pop    di
   140039900:	jae    0x140039902
   140039902:	(bad)  
   140039903:	add    al,0x5f
   140039905:	jo     0x14003997c
   140039907:	jb     0x14003996e
   140039909:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003990c:	ins    BYTE PTR es:[rdi],dx
   14003990d:	add    BYTE PTR [rax],cl
   14003990f:	(bad)  
   140039910:	jae    0x140039986
   140039912:	jb     0x140039977
   140039914:	jo     0x14003998f
   140039916:	pop    rdi
   140039917:	jae    0x140039919
   140039919:	add    BYTE PTR [rbx],al
   14003991b:	(bad)  
   14003991c:	jae    0x140039992
   14003991e:	jb     0x140039983
   140039920:	(bad)  
   140039921:	je     0x140039982
   140039923:	jae    0x140039925
   140039925:	add    BYTE PTR [rip+0x72747307],cl        # 0x1b2780c32
   14003992b:	ins    BYTE PTR es:[rdi],dx
   14003992c:	outs   dx,BYTE PTR gs:[rsi]
   14003992e:	add    BYTE PTR [rax],al
   140039930:	stos   BYTE PTR es:[rdi],al
   140039931:	(bad)  
   140039932:	ins    DWORD PTR es:[rdi],dx
   140039933:	(bad)  
   140039934:	ins    BYTE PTR es:[rdi],dx
   140039935:	ins    BYTE PTR es:[rdi],dx
   140039936:	outs   dx,DWORD PTR ds:[rsi]
   140039937:	movsxd eax,DWORD PTR [rax]
   140039939:	add    BYTE PTR [rbp+0x6d656d06],dh
   14003993f:	movsxd esi,DWORD PTR [rax+0x79]
   140039942:	add    BYTE PTR [rax],al
   140039944:	mov    bh,0x6
   140039946:	ins    DWORD PTR es:[rdi],dx
   140039947:	gs ins DWORD PTR es:[rdi],dx
   140039949:	ins    DWORD PTR es:[rdi],dx
   14003994a:	outs   dx,DWORD PTR ds:[rsi]
   14003994b:	jbe    0x1400399b2
   14003994d:	add    BYTE PTR [rax],dl
   14003994f:	add    eax,0x7363775f
   140039954:	fs jne 0x1400399c7
   140039957:	add    BYTE PTR [rdi+0x7],dl
   14003995a:	ja     0x1400399bf
   14003995c:	jae    0x1400399c1
   14003995e:	(bad)  
   14003995f:	je     0x1400399c0
   140039961:	jae    0x140039963
   140039963:	add    BYTE PTR [rcx+0x7],bl
   140039966:	ja     0x1400399cb
   140039968:	jae    0x1400399cd
   14003996a:	ins    DWORD PTR es:[rdi],dx
   14003996b:	jo     0x14003996d
   14003996d:	add    BYTE PTR [rbp+0x7],bl
   140039970:	ja     0x1400399d5
   140039972:	jae    0x1400399d7
   140039974:	jae    0x1400399e6
   140039976:	outs   dx,BYTE PTR ds:[rsi]
   140039977:	add    BYTE PTR [rdi+rax*1+0x77],ah
   14003997b:	movsxd esi,DWORD PTR [rbx+0x6e]
   14003997e:	movsxd esi,DWORD PTR [rax+0x79]
   140039981:	pop    rdi
   140039982:	jae    0x140039984
   140039984:	addr32 (bad) 
   140039986:	ja     0x1400399eb
   140039988:	jae    0x1400399fc
   14003998a:	movsxd ebp,DWORD PTR [rax+0x72]
   14003998d:	add    BYTE PTR [rbx+0x7],ch
   140039990:	ja     0x1400399f5
   140039992:	jae    0x140039a07
   140039994:	je     0x140039a08
   140039996:	add    BYTE PTR [rax],al
   140039998:	and    eax,DWORD PTR [rip+0x7363775f]        # 0x1b36710fd
   14003999e:	outs   dx,BYTE PTR ds:[rsi]
   14003999f:	jae    0x140039a06
   1400399a1:	je     0x140039a02
   1400399a3:	jae    0x1400399a5
   1400399a5:	add    BYTE PTR [rax*1+0x7363775f],ah
   1400399ac:	jb     0x140039a13
   1400399ae:	jbe    0x1400399b0
   1400399b0:	sbb    al,BYTE PTR [rip+0x7363775f]        # 0x1b3671115
   1400399b6:	ins    BYTE PTR es:[rdi],dx
   1400399b7:	ja     0x140039a2b
   1400399b9:	pop    rdi
   1400399ba:	jae    0x1400399bc
   1400399bc:	cmp    BYTE PTR [rip+0x7363775f],al        # 0x1b3671121
   1400399c2:	jne    0x140039a34
   1400399c4:	jb     0x140039a25
   1400399c6:	jae    0x1400399c8
   1400399c8:	rex.WRB (bad) 
   1400399ca:	jbe    0x140039a3f
   1400399cc:	ja     0x140039a3e
   1400399ce:	jb     0x140039a39
   1400399d0:	outs   dx,BYTE PTR ds:[rsi]
   1400399d1:	je     0x140039a39
   1400399d3:	pop    rdi
   1400399d4:	jae    0x1400399d6
   1400399d6:	call   0x1b379f8df
   1400399db:	movsxd esi,DWORD PTR [rdi+0x70]
   1400399de:	jb     0x140039a49
   1400399e0:	outs   dx,BYTE PTR ds:[rsi]
   1400399e1:	je     0x140039a49
   1400399e3:	add    BYTE PTR [rbp+0x1],al
   1400399e6:	pop    rdi
   1400399e7:	rex.XB js 0x140039a62
   1400399ea:	push   rsp
   1400399eb:	push   0x45776f72
   1400399f0:	js     0x140039a55
   1400399f2:	gs jo  0x140039a69
   1400399f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x7120000
   1400399fc:	jae    0x140039a72
   1400399fe:	jb     0x140039a6e
   140039a00:	movsxd esi,DWORD PTR [rax+0x79]
   140039a03:	pop    rdi
   140039a04:	jae    0x140039a06
   140039a06:	adc    al,0x5
   140039a08:	pop    rdi
   140039a09:	ja     0x140039a6e
   140039a0b:	jae    0x140039a76
   140039a0d:	movsxd ebp,DWORD PTR [rbp+0x70]
   140039a10:	add    BYTE PTR [rax],al
   140039a12:	and    al,0x7
   140039a14:	jae    0x140039a8d
   140039a16:	jo     0x140039a8a
   140039a18:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   140039a1f:	add    BYTE PTR [rbp+0x65675f02],dh
   140039a25:	je     0x140039a86
   140039a27:	je     0x140039a92
   140039a29:	ins    DWORD PTR es:[rdi],dx
   140039a2a:	gs jp  0x140039a9c
   140039a2d:	outs   dx,BYTE PTR ds:[rsi]
   140039a2e:	gs add dh,bh
   140039a31:	add    ebx,DWORD PTR [rdi+0x6d]
   140039a34:	imul   esi,DWORD PTR [rcx+rbp*2+0x6d],0x65
   140039a39:	ss xor al,0x0
   140039a3c:	mov    eax,0x6d656d06
   140039a41:	ins    DWORD PTR es:[rdi],dx
   140039a42:	outs   dx,DWORD PTR ds:[rsi]
   140039a43:	jbe    0x140039aaa
   140039a45:	pop    rdi
   140039a46:	jae    0x140039a48
   140039a48:	xchg   edx,eax
   140039a49:	add    eax,0x6f74775f
   140039a4e:	imul   esi,DWORD PTR [rsi],0x5de0034
   140039a54:	movsxd esp,DWORD PTR [rbp+0x69]
   140039a57:	ins    BYTE PTR es:[rdi],dx
   140039a58:	add    BYTE PTR [rax],al
   140039a5a:	cmp    DWORD PTR [rsi],eax
   140039a5c:	data16 ins BYTE PTR es:[rdi],dx
   140039a5e:	outs   dx,DWORD PTR ds:[rsi]
   140039a5f:	outs   dx,DWORD PTR ds:[rsi]
   140039a60:	jb     0x140039a62
   140039a62:	pop    rsp
   140039a63:	add    DWORD PTR [rdi+0x5f],ebx
   140039a66:	rex.XB pop r15
   140039a68:	jae    0x140039ada
   140039a6a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140039a6e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140039a75:	ins    BYTE PTR es:[rdi],dx
   140039a76:	gs jb  0x140039a79
   140039a79:	add    BYTE PTR [rax+0x1],bl
   140039a7c:	pop    rdi
   140039a7d:	pop    rax
   140039a7e:	movsxd esi,DWORD PTR [rax+0x74]
   140039a81:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   140039a8a:	pop    rdi
   140039a8b:	pop    rdi
   140039a8c:	movsxd esi,DWORD PTR [rdx+0x74]
   140039a8f:	rex.RXB
   140039a90:	gs je  0x140039ae6
   140039a93:	push   0x6957776f
   140039a98:	outs   dx,BYTE PTR ds:[rsi]
   140039a99:	outs   dx,DWORD PTR fs:[rsi]
   140039a9b:	ja     0x140039aea
   140039a9d:	outs   dx,DWORD PTR ds:[rsi]
   140039a9e:	fs add BYTE PTR gs:[rax],al
   140039aa2:	repnz add DWORD PTR [rdi+0x61],ebx
   140039aa6:	ins    DWORD PTR es:[rdi],dx
   140039aa7:	jae    0x140039b10
   140039aa9:	pop    rdi
   140039aaa:	gs js  0x140039b16
   140039aad:	je     0x140039aaf
   140039aaf:	add    ah,ah
   140039ab1:	add    DWORD PTR [rdi+0x5f],ebx
   140039ab4:	ja     0x140039b1d
   140039ab6:	gs je  0x140039b26
   140039ab9:	(bad)  
   140039aba:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140039ac1:	add    dh,cl
   140039ac3:	add    DWORD PTR [rdi+0x5f],ebx
   140039ac6:	jae    0x140039b2d
   140039ac8:	je     0x140039b29
   140039aca:	(bad)  
   140039acb:	jo     0x140039b3d
   140039acd:	pop    rdi
   140039ace:	je     0x140039b49
   140039ad0:	jo     0x140039b37
   140039ad2:	add    BYTE PTR [rax],al
   140039ad4:	sbb    BYTE PTR [rsi],al
   140039ad6:	gs js  0x140039b42
   140039ad9:	je     0x140039adb
   140039adb:	add    BYTE PTR [rax+0x2],bl
   140039ade:	pop    rdi
   140039adf:	gs js  0x140039b4b
   140039ae2:	je     0x140039ae4
   140039ae4:	or     al,BYTE PTR [rdx]
   140039ae6:	pop    rdi
   140039ae7:	movsxd esp,DWORD PTR [rbp+0x78]
   140039aea:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   140039af2:	outs   dx,DWORD PTR ds:[rsi]
   140039af3:	outs   dx,BYTE PTR ds:[rsi]
   140039af4:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140039afa:	gs (bad) 
   140039afc:	fs ins BYTE PTR es:[rdi],dx
   140039afe:	outs   dx,DWORD PTR ds:[rsi]
   140039aff:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039b02:	gs add al,dl
   140039b05:	add    DWORD PTR [rdi+0x5f],ebx
   140039b08:	jae    0x140039b6f
   140039b0a:	je     0x140039b81
   140039b0c:	jae    0x140039b73
   140039b0e:	jb     0x140039b7d
   140039b10:	(bad)  
   140039b11:	je     0x140039b7b
   140039b13:	gs jb  0x140039b88
   140039b16:	add    BYTE PTR [rax],al
   140039b18:	loop   0x140039b1c
   140039b1a:	pop    rdi
   140039b1b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140039b22:	ins    DWORD PTR es:[rdi],dx
   140039b23:	pop    rdi
   140039b24:	gs add cl,ah
   140039b27:	add    bl,BYTE PTR [rdi+0x69]
   140039b2a:	outs   dx,BYTE PTR ds:[rsi]
   140039b2b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xc006d72
   140039b33:	add    eax,0x6d63775f
   140039b38:	fs ins BYTE PTR es:[rdi],dx
   140039b3a:	outs   dx,BYTE PTR ds:[rsi]
   140039b3b:	add    BYTE PTR [rax+0x2],bh
   140039b3e:	pop    rdi
   140039b3f:	ins    WORD PTR es:[rdi],dx
   140039b41:	outs   dx,DWORD PTR ds:[rsi]
   140039b42:	fs add BYTE PTR gs:[rax],al
   140039b46:	sbb    DWORD PTR [rdx],eax
   140039b48:	pop    rdi
   140039b49:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140039b4c:	ins    DWORD PTR es:[rdi],dx
   140039b4d:	outs   dx,DWORD PTR ds:[rsi]
   140039b4e:	fs add BYTE PTR gs:[rax],al
   140039b52:	xor    eax,DWORD PTR [rcx]
   140039b54:	(bad)  
   140039b55:	je     0x140039bbc
   140039b57:	jb     0x140039bc6
   140039b59:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140039b60:	pop    rcx
   140039b61:	pop    r8
   140039b63:	pop    rax
   140039b64:	pop    rdx
   140039b65:	add    BYTE PTR [rbx+0x3],bl
   140039b68:	pop    rdi
   140039b69:	ins    BYTE PTR es:[rdi],dx
   140039b6a:	outs   dx,DWORD PTR ds:[rsi]
   140039b6b:	movsxd ebp,DWORD PTR [rbx+0x0]
   140039b6e:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   140039b75:	movsxd ebp,DWORD PTR [rbx+0x0]
   140039b78:	or     DWORD PTR [rdx],eax
   140039b7a:	pop    rdi
   140039b7b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039b7e:	ins    BYTE PTR es:[rdi],dx
   140039b7f:	outs   dx,DWORD PTR ds:[rsi]
   140039b80:	movsxd ebx,DWORD PTR [rdi+0x63]
   140039b83:	jb     0x140039bf9
   140039b85:	add    BYTE PTR [rdi+0x645f5f01],bl
   140039b8b:	ins    BYTE PTR es:[rdi],dx
   140039b8c:	ins    BYTE PTR es:[rdi],dx
   140039b8d:	outs   dx,DWORD PTR ds:[rsi]
   140039b8e:	outs   dx,BYTE PTR ds:[rsi]
   140039b8f:	gs js  0x140039bfb
   140039b92:	je     0x140039b94
   140039b94:	add    al,BYTE PTR [rdi+rbx*2]
   140039b97:	outs   dx,DWORD PTR ds:[rsi]
   140039b98:	outs   dx,BYTE PTR ds:[rsi]
   140039b99:	gs js  0x140039c05
   140039b9c:	je     0x140039b9e
   140039b9e:	rex.WRB push r11
   140039ba0:	push   rsi
   140039ba1:	rex.XB push r10
   140039ba3:	xor    DWORD PTR [rdx],esi
   140039ba5:	xor    BYTE PTR [rsi],ch
   140039ba7:	fs ins BYTE PTR es:[rdi],dx
   140039ba9:	ins    BYTE PTR es:[rdi],dx
   140039baa:	add    BYTE PTR [rax],al
   140039bac:	cdq    
   140039bad:	add    DWORD PTR [rdi+0x5f],ebx
   140039bb0:	movsxd esi,DWORD PTR [rdx+0x74]
   140039bb3:	push   rbx
   140039bb4:	gs je  0x140039c0c
   140039bb7:	outs   dx,BYTE PTR ds:[rsi]
   140039bb8:	push   0x6c646e61
   140039bbd:	gs fs rex.RB js 0x140039c25
   140039bc2:	gs jo  0x140039c39
   140039bc5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140039bcc:	gs jb  0x140039bcf
   140039bcf:	add    BYTE PTR [rbx],bl
   140039bd1:	add    DWORD PTR [rdi],edi
   140039bd3:	pop    rdi
   140039bd4:	je     0x140039c4f
   140039bd6:	jo     0x140039c3d
   140039bd8:	pop    rdi
   140039bd9:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140039be0:	outs   dx,DWORD PTR ds:[rsi]
   140039be1:	jb     0x140039c42
   140039be3:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140039bea:	ins    BYTE PTR es:[rdi],dx
   140039beb:	pop    rdi
   140039bec:	ins    DWORD PTR es:[rdi],dx
   140039bed:	gs je  0x140039c58
   140039bf0:	outs   dx,DWORD PTR ds:[rsi]
   140039bf1:	fs rex je 0x140039c6e
   140039bf5:	jo     0x140039c5c
   140039bf7:	pop    rdi
   140039bf8:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140039bff:	rex.RB
   140039c00:	rex.B
   140039c01:	pop    r8
   140039c03:	pop    rax
   140039c04:	pop    rdx
   140039c05:	add    BYTE PTR [rbp+0x635f5f01],bl
   140039c0b:	jb     0x140039c81
   140039c0d:	pop    rdi
   140039c0e:	fs gs (bad) 
   140039c11:	jne    0x140039c7a
   140039c13:	addr32 gs jb 0x140039c76
   140039c17:	push   0x6b6f6f
   140039c1c:	pushf  
   140039c1d:	add    DWORD PTR [rdi+0x5f],ebx
   140039c20:	movsxd esi,DWORD PTR [rdx+0x74]
   140039c23:	push   rbp
   140039c24:	outs   dx,BYTE PTR ds:[rsi]
   140039c25:	push   0x6c646e61
   140039c2a:	gs fs rex.RB js 0x140039c92
   140039c2f:	gs jo  0x140039ca6
   140039c32:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f019b00
   140039c39:	pop    rdi
   140039c3a:	movsxd esi,DWORD PTR [rdx+0x74]
   140039c3d:	push   rsp
   140039c3e:	gs jb  0x140039cae
   140039c41:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140039c48:	outs   dx,DWORD PTR ds:[rsi]
   140039c49:	movsxd esp,DWORD PTR [rbp+0x73]
   140039c4c:	jae    0x140039c4e
   140039c4e:	jle    0x140039c51
   140039c50:	pop    rdi
   140039c51:	pop    rdi
   140039c52:	movsxd esi,DWORD PTR [rdx+0x74]
   140039c55:	rex.XB (bad) 
   140039c57:	jo     0x140039ccd
   140039c59:	jne    0x140039ccd
   140039c5b:	gs push rax
   140039c5d:	jb     0x140039cc4
   140039c5f:	jbe    0x140039cca
   140039c61:	outs   dx,DWORD PTR ds:[rsi]
   140039c62:	jne    0x140039cd7
   140039c64:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140039c66:	outs   dx,BYTE PTR ds:[rsi]
   140039c67:	je     0x140039cce
   140039c69:	js     0x140039cdf
   140039c6b:	add    bh,bh
   140039c6d:	add    BYTE PTR [rbp+riz*2+0x63],al
   140039c71:	outs   dx,DWORD PTR ds:[rsi]
   140039c72:	fs gs push rax
   140039c75:	outs   dx,DWORD PTR ds:[rsi]
   140039c76:	imul   ebp,DWORD PTR [rsi+0x74],0x56007265
   140039c7d:	add    al,BYTE PTR [rdi+0x65]
   140039c80:	je     0x140039cce
   140039c82:	(bad)  
   140039c83:	jae    0x140039cf9
   140039c85:	rex.RB jb 0x140039cfa
   140039c88:	outs   dx,DWORD PTR ds:[rsi]
   140039c89:	jb     0x140039c8b
   140039c8b:	add    BYTE PTR [rcx+0x3],dl
   140039c8e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140039c90:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140039c98:	rex.XB jb 0x140039d04
   140039c9b:	je     0x140039d06
   140039c9d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039ca0:	push   rbx
   140039ca1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140039ca6:	outs   dx,BYTE PTR ds:[rsi]
   140039ca7:	rex.B outs dx,BYTE PTR ds:[rsi]
   140039ca9:	fs push rbx
   140039cab:	jo     0x140039d16
   140039cad:	outs   dx,BYTE PTR ds:[rsi]
   140039cae:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140039cb0:	jne    0x140039d20
   140039cb2:	je     0x140039cb4
   140039cb4:	(bad)  
   140039cb5:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140039cb9:	gs je  0x140039d21
   140039cbc:	rex.XB jb 0x140039d28
   140039cbf:	je     0x140039d2a
   140039cc1:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039cc4:	push   rbx
   140039cc5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140039cca:	outs   dx,BYTE PTR ds:[rsi]
   140039ccb:	add    dh,bh
   140039ccd:	add    al,0x53
   140039ccf:	gs je  0x140039d17
   140039cd2:	jbe    0x140039d39
   140039cd4:	outs   dx,BYTE PTR ds:[rsi]
   140039cd5:	je     0x140039cd7
   140039cd7:	add    BYTE PTR [rcx+0x69615705],bh
   140039cdd:	je     0x140039d25
   140039cdf:	outs   dx,DWORD PTR ds:[rsi]
   140039ce0:	jb     0x140039d35
   140039ce2:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140039ce9:	push   0x65
   140039ceb:	movsxd esi,DWORD PTR [rax+rax*1+0x69]
   140039cef:	add    al,BYTE PTR [rdi+0x65]
   140039cf2:	je     0x140039d41
   140039cf4:	outs   dx,DWORD PTR ds:[rsi]
   140039cf5:	fs jne 0x140039d64
   140039cf8:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140039d02:	add    BYTE PTR [rax],al
   140039d04:	jg     0x140039d06
   140039d06:	rex.XB ins BYTE PTR es:[rdi],dx
   140039d08:	outs   dx,DWORD PTR ds:[rsi]
   140039d09:	jae    0x140039d70
   140039d0b:	rex.W (bad) 
   140039d0d:	outs   dx,BYTE PTR ds:[rsi]
   140039d0e:	fs ins BYTE PTR es:[rdi],dx
   140039d10:	add    BYTE PTR gs:[rbx],dh
   140039d13:	add    al,BYTE PTR [rdi+0x65]
   140039d16:	je     0x140039d5d
   140039d18:	js     0x140039d83
   140039d1a:	je     0x140039d5f
   140039d1c:	outs   dx,DWORD PTR ds:[rsi]
   140039d1d:	fs gs push rax
   140039d20:	jb     0x140039d91
   140039d22:	movsxd esp,DWORD PTR [rbp+0x73]
   140039d25:	jae    0x140039d27
   140039d27:	add    bl,bl
   140039d29:	add    BYTE PTR [rbx+0x72],al
   140039d2c:	gs (bad) 
   140039d2e:	je     0x140039d95
   140039d30:	push   rax
   140039d31:	jb     0x140039da2
   140039d33:	movsxd esp,DWORD PTR [rbp+0x73]
   140039d36:	jae    0x140039d8f
   140039d38:	add    BYTE PTR [rax],al
   140039d3a:	mov    dl,0x0
   140039d3c:	rex.XB jb 0x140039da4
   140039d3f:	(bad)  
   140039d40:	je     0x140039da7
   140039d42:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140039d4a:	jns    0x140039da3
   140039d4c:	add    BYTE PTR [rax],al
   140039d4e:	ret    0x4300
   140039d51:	jb     0x140039db8
   140039d53:	(bad)  
   140039d54:	je     0x140039dbb
   140039d56:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x44010b00
   140039d5f:	gs ins BYTE PTR es:[rdi],dx
   140039d61:	gs je  0x140039dc9
   140039d64:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46016e00
   140039d6d:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   140039d74:	add    BYTE PTR gs:[rcx+0x1],bh
   140039d78:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   140039d80:	je     0x140039dc8
   140039d82:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x1850000
   140039d8a:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x7478654e
   140039d92:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47023c00
   140039d9b:	gs je  0x140039de4
   140039d9e:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140039da6:	(bad)  
   140039da7:	jne    0x140039e1d
   140039da9:	gs jae 0x140039e03
   140039dac:	add    BYTE PTR [rax],al
   140039dae:	rex.X add al,BYTE PTR [rdi+0x65]
   140039db2:	je     0x140039dfa
   140039db4:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   140039dbc:	push   rbx
   140039dbd:	add    al,0x52
   140039dbf:	gs (bad) 
   140039dc1:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x52049800
   140039dcb:	gs ins DWORD PTR es:[rdi],dx
   140039dcd:	outs   dx,DWORD PTR ds:[rsi]
   140039dce:	jbe    0x140039e35
   140039dd0:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140039dd8:	jns    0x140039e31
   140039dda:	add    BYTE PTR [rax],al
   140039ddc:	add    eax,0x74655305
   140039de1:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x69727474
   140039dea:	(bad)  
   140039deb:	jne    0x140039e61
   140039ded:	gs jae 0x140039e47
   140039df0:	add    BYTE PTR [rax],al
   140039df2:	out    dx,eax
   140039df3:	add    eax,0x74697257
   140039df8:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x654702ea
   140039e02:	je     0x140039e58
   140039e04:	gs ins DWORD PTR es:[rdi],dx
   140039e06:	jo     0x140039e58
   140039e08:	(bad)  
   140039e09:	je     0x140039e73
   140039e0b:	push   rdi
   140039e0c:	add    BYTE PTR [rax],al
   140039e0e:	mov    ch,0x3
   140039e10:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140039e12:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039e15:	rex.RX jb 0x140039e7d
   140039e18:	add    BYTE PTR gs:[rbp+0x706f4300],ah
   140039e1f:	jns    0x140039e67
   140039e21:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x5705db00
   140039e29:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x54726168
   140039e31:	outs   dx,DWORD PTR ds:[rsi]
   140039e32:	rex.WRB jne 0x140039ea1
   140039e35:	je     0x140039ea0
   140039e37:	rex.X jns 0x140039eae
   140039e3a:	add    BYTE PTR gs:[rcx+0x3],ah
   140039e3e:	rex.WB jae 0x140039e83
   140039e41:	(bad)  
   140039e42:	fs push rdx
   140039e44:	gs (bad) 
   140039e46:	fs push rax
   140039e48:	je     0x140039ebc
   140039e4a:	add    BYTE PTR [rax],al
   140039e4c:	add    ecx,DWORD PTR fs:[rcx+0x73]
   140039e50:	rex.X (bad) 
   140039e52:	fs push rdi
   140039e54:	jb     0x140039ebf
   140039e56:	je     0x140039ebd
   140039e58:	push   rax
   140039e59:	je     0x140039ecd
   140039e5b:	add    BYTE PTR [rdx+rax*1+0x47],al
   140039e5f:	gs je  0x140039ea8
   140039e62:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x656d69
   140039e6a:	call   0x1b468e571
   140039e6f:	push   rsp
   140039e70:	gs ins DWORD PTR es:[rdi],dx
   140039e72:	jo     0x140039eba
   140039e74:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x57656d61
   140039e7c:	add    BYTE PTR [rax],al
   140039e7e:	sbb    BYTE PTR [rip+0x4c746553],al        # 0x18c7803d7
   140039e84:	(bad)  
   140039e85:	jae    0x140039efb
   140039e87:	rex.RB jb 0x140039efc
   140039e8a:	outs   dx,DWORD PTR ds:[rsi]
   140039e8b:	jb     0x140039e8d
   140039e8d:	add    BYTE PTR [rcx],bl
   140039e8f:	add    eax,DWORD PTR [rdi+0x65]
   140039e92:	je     0x140039eeb
   140039e94:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140039e9b:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140039ea2:	jns    0x140039efb
   140039ea4:	add    BYTE PTR [rax],al
   140039ea6:	(bad)  
   140039ea7:	add    eax,DWORD PTR [rdi+0x65]
   140039eaa:	je     0x140039f02
   140039eac:	gs jb  0x140039f22
   140039eaf:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140039eb6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140039eb7:	add    DWORD PTR [rsi+0x72],eax
   140039eba:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140039ec4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140039ec5:	add    al,BYTE PTR [rdi+0x65]
   140039ec8:	je     0x140039f1a
   140039eca:	jb     0x140039f3b
   140039ecc:	movsxd eax,DWORD PTR [rcx+0x64]
   140039ecf:	fs jb  0x140039f37
   140039ed2:	jae    0x140039f47
   140039ed4:	add    BYTE PTR [rax],al
   140039ed6:	stos   DWORD PTR es:[rdi],eax
   140039ed7:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140039edb:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140039ee4:	add    BYTE PTR [rax],al
   140039ee6:	xlat   BYTE PTR ds:[rbx]
   140039ee7:	add    DWORD PTR [rdi+0x65],eax
   140039eea:	je     0x140039f2f
   140039eec:	outs   dx,DWORD PTR ds:[rsi]
   140039eed:	ins    DWORD PTR es:[rdi],dx
   140039eee:	jo     0x140039f65
   140039ef0:	je     0x140039f57
   140039ef2:	jb     0x140039f42
   140039ef4:	(bad)  
   140039ef5:	ins    DWORD PTR es:[rdi],dx
   140039ef6:	gs push rdi
   140039ef8:	add    BYTE PTR [rax],al
   140039efa:	movsxd eax,DWORD PTR [rcx]
   140039efc:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140039f05:	outs   dx,DWORD PTR ds:[rsi]
   140039f06:	push   rbx
   140039f07:	jns    0x140039f7c
   140039f09:	je     0x140039f70
   140039f0b:	ins    DWORD PTR es:[rdi],dx
   140039f0c:	push   rsp
   140039f0d:	imul   ebp,DWORD PTR [rbp+0x65],0x3500000
   140039f14:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140039f16:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140039f1e:	rex.XB jb 0x140039f8a
   140039f21:	je     0x140039f8c
   140039f23:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039f26:	push   rbx
   140039f27:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140039f2c:	outs   dx,BYTE PTR ds:[rsi]
   140039f2d:	add    BYTE PTR [rcx],ch
   140039f2f:	add    DWORD PTR [rbp+0x6e],eax
   140039f32:	je     0x140039f99
   140039f34:	jb     0x140039f79
   140039f36:	jb     0x140039fa1
   140039f38:	je     0x140039fa3
   140039f3a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039f3d:	push   rbx
   140039f3e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140039f43:	outs   dx,BYTE PTR ds:[rsi]
   140039f44:	add    BYTE PTR [rax],al
   140039f46:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140039f47:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   140039f4b:	jbe    0x140039fb2
   140039f4d:	rex.XB jb 0x140039fb9
   140039f50:	je     0x140039fbb
   140039f52:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039f55:	push   rbx
   140039f56:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140039f5b:	outs   dx,BYTE PTR ds:[rsi]
   140039f5c:	add    BYTE PTR [rax],al
   140039f5e:	and    DWORD PTR [rdx],eax
   140039f60:	rex.RXB
   140039f61:	gs je  0x140039fa8
   140039f64:	imul   esi,DWORD PTR [rbx+0x6b],0x65657246
   140039f6b:	push   rbx
   140039f6c:	jo     0x140039fcf
   140039f6e:	movsxd esp,DWORD PTR [rbp+0x45]
   140039f71:	js     0x140039fca
   140039f73:	add    BYTE PTR [rcx+0x636f4c03],dh
   140039f79:	(bad)  
   140039f7a:	ins    BYTE PTR es:[rdi],dx
   140039f7b:	rex.B ins BYTE PTR es:[rdi],dx
   140039f7d:	ins    BYTE PTR es:[rdi],dx
   140039f7e:	outs   dx,DWORD PTR ds:[rsi]
   140039f7f:	movsxd eax,DWORD PTR [rax]
   140039f81:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a371e488
   140039f87:	outs   dx,DWORD PTR ds:[rsi]
   140039f88:	fs gs push rax
   140039f8b:	outs   dx,DWORD PTR ds:[rsi]
   140039f8c:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   140039f93:	add    al,0x51
   140039f95:	jne    0x140039ffc
   140039f97:	jb     0x14003a012
   140039f99:	push   rax
   140039f9a:	gs jb  0x14003a003
   140039f9d:	outs   dx,DWORD PTR ds:[rsi]
   140039f9e:	jb     0x14003a00d
   140039fa0:	(bad)  
   140039fa1:	outs   dx,BYTE PTR ds:[rsi]
   140039fa2:	movsxd esp,DWORD PTR [rbp+0x43]
   140039fa5:	outs   dx,DWORD PTR ds:[rsi]
   140039fa6:	jne    0x14003a016
   140039fa8:	je     0x14003a00f
   140039faa:	jb     0x140039fac
   140039fac:	adc    BYTE PTR [rdx],al
   140039fae:	rex.RXB
   140039faf:	gs je  0x140039ff5
   140039fb2:	jne    0x14003a026
   140039fb4:	jb     0x14003a01b
   140039fb6:	outs   dx,BYTE PTR ds:[rsi]
   140039fb7:	je     0x14003a009
   140039fb9:	jb     0x14003a02a
   140039fbb:	movsxd esp,DWORD PTR [rbp+0x73]
   140039fbe:	jae    0x14003a009
   140039fc0:	add    BYTE PTR fs:[rdx+rax*1],dl
   140039fc4:	rex.RXB
   140039fc5:	gs je  0x14003a00b
   140039fc8:	jne    0x14003a03c
   140039fca:	jb     0x14003a031
   140039fcc:	outs   dx,BYTE PTR ds:[rsi]
   140039fcd:	je     0x14003a023
   140039fcf:	push   0x64616572
   140039fd4:	rex.WB
   140039fd5:	add    BYTE PTR fs:[rax],al
   140039fd8:	fld    QWORD PTR [rdx]
   140039fda:	rex.RXB
   140039fdb:	gs je  0x14003a031
   140039fde:	jns    0x14003a053
   140039fe0:	je     0x14003a047
   140039fe2:	ins    DWORD PTR es:[rdi],dx
   140039fe3:	push   rsp
   140039fe4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140039feb:	ins    BYTE PTR es:[rdi],dx
   140039fec:	gs push rsp
   140039fee:	imul   ebp,DWORD PTR [rbp+0x65],0x49036a00
   140039ff5:	jae    0x14003a03b
   140039ff7:	gs (bad) 
   140039ff9:	jne    0x14003a062
   140039ffb:	addr32 gs jb 0x14003a04f
   140039fff:	jb     0x14003a066
   14003a001:	jae    0x14003a068
   14003a003:	outs   dx,BYTE PTR ds:[rsi]
   14003a004:	je     0x14003a006
   14003a006:	jo     0x14003a00b
   14003a008:	rex.WB jae 0x14003a05b
   14003a00b:	jb     0x14003a07c
   14003a00d:	movsxd esp,DWORD PTR [rbp+0x73]
   14003a010:	jae    0x14003a081
   14003a012:	jb     0x14003a05a
   14003a014:	gs (bad) 
   14003a016:	je     0x14003a08d
   14003a018:	jb     0x14003a07f
   14003a01a:	push   rax
   14003a01b:	jb     0x14003a082
   14003a01d:	jae    0x14003a084
   14003a01f:	outs   dx,BYTE PTR ds:[rsi]
   14003a020:	je     0x14003a022
   14003a022:	rex.WXB
   14003a023:	rex.RB push r10
   14003a025:	rex.WRX
   14003a026:	rex.RB
   14003a027:	xor    r14,QWORD PTR [rdx]
   14003a02a:	cs fs ins BYTE PTR es:[rdi],dx
   14003a02d:	ins    BYTE PTR es:[rdi],dx
   14003a02e:	add    BYTE PTR [rax],al
   14003a030:	(bad)  
   14003a031:	add    edx,DWORD PTR [rbx+0x65]
   14003a034:	je     0x14003a08a
   14003a036:	imul   ebp,DWORD PTR [rbp+0x65],0x1d000072
   14003a03d:	add    cl,BYTE PTR [rbx+0x69]
   14003a040:	ins    BYTE PTR es:[rdi],dx
   14003a041:	ins    BYTE PTR es:[rdi],dx
   14003a042:	push   rsp
   14003a043:	imul   ebp,DWORD PTR [rbp+0x65],0xe40072
   14003a04a:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003a04c:	(bad)  
   14003a04d:	(bad)  
   14003a04e:	ins    BYTE PTR es:[rdi],dx
   14003a04f:	gs push rdi
   14003a051:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14003a058:	cmp    DWORD PTR [rcx],eax
   14003a05a:	rex.RXB
   14003a05b:	gs je  0x14003a0a2
   14003a05e:	gs jae 0x14003a0cc
   14003a061:	je     0x14003a0d2
   14003a063:	jo     0x14003a0bc
   14003a065:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14003a06c:	je     0x14003a070
   14003a06e:	push   rax
   14003a06f:	outs   dx,DWORD PTR ds:[rsi]
   14003a070:	jae    0x14003a0e6
   14003a072:	rex.WRB
   14003a073:	gs jae 0x14003a0e9
   14003a076:	(bad)  
   14003a077:	addr32 gs push rdi
   14003a07a:	add    BYTE PTR [rax],al
   14003a07c:	rol    BYTE PTR [rdx],0x53
   14003a07f:	outs   dx,BYTE PTR gs:[rsi]
   14003a081:	fs rex.WRB
   14003a083:	gs jae 0x14003a0f9
   14003a086:	(bad)  
   14003a087:	addr32 gs push rdi
   14003a08a:	add    BYTE PTR [rax],al
   14003a08c:	(bad)  
   14003a08d:	add    DWORD PTR [rdi+0x65],eax
   14003a090:	je     0x14003a0d5
   14003a092:	ins    BYTE PTR es:[rdi],dx
   14003a093:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   14003a09a:	je     0x14003a09c
   14003a09c:	iret   
   14003a09d:	add    DWORD PTR [rdi+0x65],eax
   14003a0a0:	je     0x14003a0f9
   14003a0a2:	imul   ebp,DWORD PTR [rsi+0x64],0x6552776f
   14003a0a9:	movsxd esi,DWORD PTR [rax+rax*1+0x27]
   14003a0ad:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   14003a0b1:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   14003a0b6:	push   rdi
   14003a0b7:	add    BYTE PTR [rip+0x57734902],dl        # 0x19776e9bf
   14003a0bd:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14003a0c4:	add    r10d,DWORD PTR [r10+r14*2+0x61]
   14003a0c9:	outs   dx,BYTE PTR ds:[rsi]
   14003a0ca:	jae    0x14003a138
   14003a0cc:	(bad)  
   14003a0cd:	je     0x14003a134
   14003a0cf:	rex.WRB
   14003a0d0:	gs jae 0x14003a146
   14003a0d3:	(bad)  
   14003a0d4:	add    BYTE PTR gs:[eax],al
   14003a0d8:	mov    ch,0x0
   14003a0da:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14003a0e2:	rex.WRB
   14003a0e3:	gs jae 0x14003a159
   14003a0e6:	(bad)  
   14003a0e7:	addr32 gs push rdi
   14003a0ea:	add    BYTE PTR [rax],al
   14003a0ec:	jo     0x14003a0f0
   14003a0ee:	push   rax
   14003a0ef:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   14003a0f5:	jae    0x14003a158
   14003a0f7:	addr32 gs push rdi
   14003a0fa:	add    BYTE PTR [rax],al
   14003a0fc:	push   rbp
   14003a0fd:	push   rbx
   14003a0fe:	rex.RB push r10
   14003a100:	xor    esi,DWORD PTR [rdx]
   14003a102:	cs fs ins BYTE PTR es:[rdi],dx
   14003a105:	ins    BYTE PTR es:[rdi],dx
   14003a106:	add    BYTE PTR [rax],al
   14003a108:	push   rsp
   14003a109:	add    dl,BYTE PTR [rdx+0x65]
   14003a10c:	rex.XB ins BYTE PTR es:[edi],dx
   14003a10f:	outs   dx,DWORD PTR ds:[rsi]
   14003a110:	jae    0x14003a177
   14003a112:	rex.WXB
   14003a113:	gs jns 0x14003a116
   14003a116:	(bad)  
   14003a117:	add    dl,BYTE PTR [rdx+0x65]
   14003a11a:	addr32 rex.XB jb 0x14003a183
   14003a11e:	(bad)  
   14003a11f:	je     0x14003a186
   14003a121:	rex.WXB
   14003a122:	gs jns 0x14003a17c
   14003a125:	add    BYTE PTR [rdx+rax*1+0x52],ch
   14003a129:	gs addr32 rex.R
   14003a12c:	gs ins BYTE PTR es:[rdi],dx
   14003a12e:	gs je  0x14003a196
   14003a131:	push   rsi
   14003a132:	(bad)  
   14003a133:	ins    BYTE PTR es:[rdi],dx
   14003a134:	jne    0x14003a19b
   14003a136:	push   rdi
   14003a137:	add    BYTE PTR [rax+0x67655202],cl
   14003a13d:	rex.WRXB jo 0x14003a1a5
   14003a140:	outs   dx,BYTE PTR ds:[rsi]
   14003a141:	rex.WXB
   14003a142:	gs jns 0x14003a19c
   14003a145:	add    BYTE PTR [rdx+0x67655202],ah
   14003a14b:	push   rbx
   14003a14c:	gs je  0x14003a1a5
   14003a14f:	(bad)  
   14003a150:	ins    BYTE PTR es:[rdi],dx
   14003a151:	jne    0x14003a1b8
   14003a153:	rex.RB js 0x14003a1ad
   14003a156:	add    BYTE PTR [rax],al
   14003a158:	add    DWORD PTR [rax],0x766e6f43
   14003a15e:	gs jb  0x14003a1d5
   14003a161:	push   rbx
   14003a162:	je     0x14003a1d6
   14003a164:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   14003a16b:	jb     0x14003a1d6
   14003a16d:	je     0x14003a1e8
   14003a16f:	rex.R
   14003a170:	gs jae 0x14003a1d6
   14003a173:	jb     0x14003a1de
   14003a175:	jo     0x14003a1eb
   14003a177:	outs   dx,DWORD PTR ds:[rsi]
   14003a178:	jb     0x14003a1ce
   14003a17a:	outs   dx,DWORD PTR ds:[rsi]
   14003a17b:	push   rbx
   14003a17c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14003a180:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14003a188:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   14003a18f:	add    BYTE PTR [rdx+0x1],bh
   14003a192:	rex.RXB
   14003a193:	gs je  0x14003a1eb
   14003a196:	jae    0x14003a1fd
   14003a198:	jb     0x14003a1e8
   14003a19a:	(bad)  
   14003a19b:	ins    DWORD PTR es:[rdi],dx
   14003a19c:	gs push rdi
   14003a19e:	add    BYTE PTR [rax],al
   14003a1a0:	pop    rbp
   14003a1a1:	add    dl,BYTE PTR [rdx+0x65]
   14003a1a4:	addr32 rex.XB jb 0x14003a20d
   14003a1a8:	(bad)  
   14003a1a9:	je     0x14003a210
   14003a1ab:	rex.WXB
   14003a1ac:	gs jns 0x14003a1f4
   14003a1af:	js     0x14003a208
   14003a1b1:	add    BYTE PTR [rdx+rax*1+0x52],dh
   14003a1b5:	rex.RB outs dx,BYTE PTR gs:[esi]
   14003a1b9:	jne    0x14003a228
   14003a1bb:	rex.WXB
   14003a1bc:	gs jns 0x14003a216
   14003a1bf:	add    BYTE PTR [rsi+0x2],dh
   14003a1c2:	push   rdx
   14003a1c3:	rex.RB outs dx,BYTE PTR gs:[esi]
   14003a1c7:	jne    0x14003a236
   14003a1c9:	push   rsi
   14003a1ca:	(bad)  
   14003a1cb:	ins    BYTE PTR es:[rdi],dx
   14003a1cc:	jne    0x14003a233
   14003a1ce:	push   rdi
   14003a1cf:	add    BYTE PTR [rbp+0x67655202],al
   14003a1d5:	rex.WRXB jo 0x14003a23d
   14003a1d8:	outs   dx,BYTE PTR ds:[rsi]
   14003a1d9:	rex.WXB
   14003a1da:	gs jns 0x14003a222
   14003a1dd:	js     0x14003a236
   14003a1df:	add    BYTE PTR [rdx+0x67655202],dl
   14003a1e5:	push   rcx
   14003a1e6:	jne    0x14003a24d
   14003a1e8:	jb     0x14003a263
   14003a1ea:	push   rsi
   14003a1eb:	(bad)  
   14003a1ec:	ins    BYTE PTR es:[rdi],dx
   14003a1ed:	jne    0x14003a254
   14003a1ef:	rex.RB js 0x14003a249
   14003a1f2:	add    BYTE PTR [rax],al
   14003a1f4:	add    BYTE PTR gs:[rbx+0x6c],al
   14003a1f8:	outs   dx,DWORD PTR ds:[rsi]
   14003a1f9:	jae    0x14003a260
   14003a1fb:	push   rbx
   14003a1fc:	gs jb  0x14003a275
   14003a1ff:	imul   esp,DWORD PTR [rbx+0x65],0x646e6148
   14003a206:	ins    BYTE PTR es:[rdi],dx
   14003a207:	add    BYTE PTR gs:[rax],al
   14003a20a:	adc    al,0x2
   14003a20c:	rex.WRXB jo 0x14003a274
   14003a20f:	outs   dx,BYTE PTR ds:[rsi]
   14003a210:	push   rbx
   14003a211:	rex.XB
   14003a212:	rex.WRB (bad) 
   14003a214:	outs   dx,BYTE PTR ds:[rsi]
   14003a215:	(bad)  
   14003a216:	addr32 gs jb 0x14003a271
   14003a21a:	add    BYTE PTR [rax],al
   14003a21c:	rex.B
   14003a21d:	rex.R push rsi
   14003a21f:	push   r8
   14003a221:	xor    rsi,QWORD PTR [r10]
   14003a224:	cs fs ins BYTE PTR es:[rdi],dx
   14003a227:	ins    BYTE PTR es:[rdi],dx
   14003a228:	add    BYTE PTR [rax],al
   14003a22a:	mov    dh,0x0
   14003a22c:	push   rbx
   14003a22d:	rex.W
   14003a22e:	imul   r13d,DWORD PTR [rbp+r12*2+0x4f],0x61726570
   14003a237:	je     0x14003a2a2
   14003a239:	outs   dx,DWORD PTR ds:[rsi]
   14003a23a:	outs   dx,BYTE PTR ds:[rsi]
   14003a23b:	push   rdi
   14003a23c:	add    BYTE PTR [rax],al
   14003a23e:	(bad)  
   14003a23f:	add    DWORD PTR [rbx+0x68],edx
   14003a242:	gs ins BYTE PTR es:[rdi],dx
   14003a244:	ins    BYTE PTR es:[rdi],dx
   14003a245:	rex.RB js 0x14003a2ad
   14003a248:	movsxd esi,DWORD PTR [rbp+0x74]
   14003a24b:	gs push rdi
   14003a24d:	add    BYTE PTR [rbx+0x48],dl
   14003a250:	rex.RB
   14003a251:	rex.WR
   14003a252:	xor    r14,QWORD PTR [rdx]
   14003a255:	cs fs ins BYTE PTR es:[rdi],dx
   14003a258:	ins    BYTE PTR es:[rdi],dx
   14003a259:	add    BYTE PTR [rbx+0x4f],al
   14003a25c:	rex.WRB
   14003a25d:	rex.XB push r12
   14003a25f:	xor    r14,QWORD PTR [rdx]
   14003a262:	cs fs ins BYTE PTR es:[rdi],dx
   14003a265:	ins    BYTE PTR es:[rdi],dx
   14003a266:	add    BYTE PTR [rax],al
   14003a268:	rex.WB add BYTE PTR [r8+0x61],dl
   14003a26c:	je     0x14003a2d6
   14003a26e:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   14003a277:	jae    0x14003a2d0
   14003a279:	add    BYTE PTR [rdi+0x0],bl
   14003a27c:	push   rax
   14003a27d:	(bad)  
   14003a27e:	je     0x14003a2e8
   14003a280:	rex.WB jae 0x14003a2c7
   14003a283:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14003a28a:	jns    0x14003a2e3
   14003a28c:	add    BYTE PTR [rax],al
   14003a28e:	cmp    eax,0x74615000
   14003a293:	push   0x626d6f43
   14003a298:	imul   ebp,DWORD PTR [rsi+0x65],0x33000057
   14003a29f:	add    BYTE PTR [rax+0x61],dl
   14003a2a2:	je     0x14003a30c
   14003a2a4:	rex.B
   14003a2a5:	fs fs rex.X (bad) 
   14003a2a9:	movsxd ebp,DWORD PTR [rbx+0x73]
   14003a2ac:	ins    BYTE PTR es:[rdi],dx
   14003a2ad:	(bad)  
   14003a2ae:	jae    0x14003a318
   14003a2b0:	push   rdi
   14003a2b1:	add    BYTE PTR [rdi],dh
   14003a2b3:	add    BYTE PTR [rax+0x61],dl
   14003a2b6:	je     0x14003a320
   14003a2b8:	rex.B jo 0x14003a32b
   14003a2bb:	outs   dx,BYTE PTR gs:[rsi]
   14003a2bd:	fs push rdi
   14003a2bf:	add    BYTE PTR [rbp+0x0],cl
   14003a2c2:	push   rax
   14003a2c3:	(bad)  
   14003a2c4:	je     0x14003a32e
   14003a2c6:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x656c6946
   14003a2ce:	rex.WRX (bad) 
   14003a2d0:	ins    DWORD PTR es:[rdi],dx
   14003a2d1:	gs push rdi
   14003a2d3:	add    BYTE PTR [rcx+0x74615000],bl
   14003a2d9:	push   0x69727453
   14003a2de:	jo     0x14003a330
   14003a2e0:	(bad)  
   14003a2e1:	je     0x14003a34b
   14003a2e3:	push   rdi
   14003a2e4:	add    BYTE PTR [rax],al
   14003a2e6:	mov    eax,0x44485300
   14003a2eb:	gs ins BYTE PTR es:[rdi],dx
   14003a2ed:	gs je  0x14003a355
   14003a2f0:	rex.WXB
   14003a2f1:	gs jns 0x14003a34b
   14003a2f4:	add    BYTE PTR [rax],al
   14003a2f6:	push   rbx
   14003a2f7:	rex.W
   14003a2f8:	rex.WR push rdi
   14003a2fa:	push   r8
   14003a2fc:	rex.WB
   14003a2fd:	cs fs ins BYTE PTR es:[rdi],dx
   14003a300:	ins    BYTE PTR es:[rdi],dx
   14003a301:	add    BYTE PTR [rax+rax*1+0x43],dl
   14003a305:	outs   dx,DWORD PTR ds:[rsi]
   14003a306:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003a308:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14003a310:	rex.RB js 0x14003a313
   14003a313:	add    BYTE PTR [rsi],bl
   14003a315:	add    BYTE PTR [rbx+0x6f],al
   14003a318:	rex.XB jb 0x14003a380
   14003a31b:	(bad)  
   14003a31c:	je     0x14003a383
   14003a31e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003a320:	jae    0x14003a396
   14003a322:	(bad)  
   14003a323:	outs   dx,BYTE PTR ds:[rsi]
   14003a324:	movsxd esp,DWORD PTR [rbp+0x0]
   14003a327:	add    BYTE PTR [rbx+0x556f4300],al
   14003a32d:	outs   dx,BYTE PTR ds:[rsi]
   14003a32e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14003a335:	imul   edi,DWORD PTR [rdx+0x65],0x7a0000
   14003a33c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003a33e:	push   rbx
   14003a33f:	gs je  0x14003a392
   14003a342:	jb     0x14003a3b3
   14003a344:	js     0x14003a3bf
   14003a346:	rex.X ins BYTE PTR es:[rdi],dx
   14003a348:	(bad)  
   14003a349:	outs   dx,BYTE PTR ds:[rsi]
   14003a34a:	imul   esp,DWORD PTR [rbp+0x74],0x0
   14003a34e:	push   rbx
   14003a34f:	add    BYTE PTR [rbx+0x6f],al
   14003a352:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003a354:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14003a35c:	add    BYTE PTR [rax],al
   14003a35e:	mov    al,0x1
   14003a360:	rex.WRXB ins BYTE PTR es:[rdi],dx
   14003a362:	gs push rdx
   14003a364:	jne    0x14003a3d4
   14003a366:	add    BYTE PTR [rax],al
   14003a368:	adc    BYTE PTR [rax],al
   14003a36a:	rex.XB
   14003a36b:	rex.WR push rbx
   14003a36d:	rex.WB
   14003a36e:	rex.R
   14003a36f:	rex.RX jb 0x14003a3e1
   14003a372:	ins    DWORD PTR es:[rdi],dx
   14003a373:	push   rbx
   14003a374:	je     0x14003a3e8
   14003a376:	imul   ebp,DWORD PTR [rsi+0x67],0x5301fe00
   14003a37d:	je     0x14003a3f1
   14003a37f:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   14003a386:	rex.RXB push r13
   14003a388:	rex.WB
   14003a389:	xor    r8b,BYTE PTR [rax]
   14003a38c:	outs   dx,DWORD PTR ds:[rsi]
   14003a38d:	ins    BYTE PTR es:[rdi],dx
   14003a38e:	xor    esi,DWORD PTR gs:[rdx]
   14003a391:	cs fs ins BYTE PTR es:[rdi],dx
   14003a394:	ins    BYTE PTR es:[rdi],dx
   14003a395:	add    BYTE PTR [rdi+0x4c],cl
   14003a398:	rex.RB
   14003a399:	push   r13
   14003a39b:	push   rsp
   14003a39c:	xor    esi,DWORD PTR [rdx]
   14003a39e:	cs fs ins BYTE PTR es:[rdi],dx
   14003a3a1:	ins    BYTE PTR es:[rdi],dx
   14003a3a2:	add    BYTE PTR [rax],al
   14003a3a4:	leave  
   14003a3a5:	add    bh,BYTE PTR [rdi]
   14003a3a7:	pop    rdi
   14003a3a8:	pop    rax
   14003a3a9:	(bad)
   14003a3ae:	ins    BYTE PTR es:[rdi],dx
   14003a3af:	ins    BYTE PTR es:[rdi],dx
   14003a3b0:	outs   dx,DWORD PTR ds:[rsi]
   14003a3b1:	movsxd eax,DWORD PTR [rax+0x73]
   14003a3b4:	je     0x14003a41a
   14003a3b6:	rex
   14003a3b7:	rex pop rcx
   14003a3b9:	pop    r8
   14003a3bb:	pop    rax
   14003a3bc:	pop    rdx
   14003a3bd:	add    ah,cl
   14003a3bf:	add    bh,BYTE PTR [rdi]
   14003a3c1:	pop    rdi
   14003a3c2:	pop    rax
   14003a3c3:	ins    BYTE PTR es:[rdi],dx
   14003a3c4:	outs   dx,BYTE PTR gs:[rsi]
   14003a3c6:	addr32 je 0x14003a431
   14003a3c9:	pop    rdi
   14003a3ca:	gs jb  0x14003a43f
   14003a3cd:	outs   dx,DWORD PTR ds:[rsi]
   14003a3ce:	jb     0x14003a410
   14003a3d0:	jae    0x14003a446
   14003a3d2:	fs rex
   14003a3d4:	rex pop rcx
   14003a3d6:	pop    r8
   14003a3d8:	push   rax
   14003a3d9:	rex.RB
   14003a3da:	rex.X
   14003a3db:	rex.R
   14003a3dc:	rex pop rdx
   14003a3de:	add    BYTE PTR [rax],al
   14003a3e0:	rex.WRB push r11
   14003a3e2:	push   rsi
   14003a3e3:	rex.XB push r8
   14003a3e5:	xor    DWORD PTR [rdx],esi
   14003a3e7:	xor    BYTE PTR [rsi],ch
   14003a3e9:	fs ins BYTE PTR es:[rdi],dx
   14003a3eb:	ins    BYTE PTR es:[rdi],dx
   14003a3ec:	add    BYTE PTR [rax],al
   14003a3ee:	fwait
   14003a3ef:	add    BYTE PTR [rcx+0x6e],cl
   14003a3f2:	je     0x14003a459
   14003a3f4:	jb     0x14003a464
   14003a3f6:	gs je  0x14003a43c
   14003a3f9:	jb     0x14003a45c
   14003a3fb:	movsxd ebp,DWORD PTR [rbx+0x55]
   14003a3fe:	jb     0x14003a46c
   14003a400:	push   rdi
   14003a401:	add    BYTE PTR [rdi+0x49],dl
   14003a404:	rex.WRX
   14003a405:	rex.WB
   14003a406:	rex.WRX
   14003a407:	rex.RB push r12
   14003a409:	cs fs ins BYTE PTR es:[rdi],dx
   14003a40c:	ins    BYTE PTR es:[rdi],dx
   14003a40d:	add    BYTE PTR [rdi],al
   14003a40f:	add    BYTE PTR [rdi+0x65],al
   14003a412:	je     0x14003a45a
   14003a414:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14003a41c:	outs   dx,DWORD PTR ds:[rsi]
   14003a41d:	outs   dx,BYTE PTR ds:[rsi]
   14003a41e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003a420:	outs   dx,WORD PTR ds:[rsi]
   14003a422:	push   rbx
   14003a423:	imul   edi,DWORD PTR [rdx+0x65],0x80057
   14003a42a:	rex.RXB
   14003a42b:	gs je  0x14003a474
   14003a42e:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14003a436:	outs   dx,DWORD PTR ds:[rsi]
   14003a437:	outs   dx,BYTE PTR ds:[rsi]
   14003a438:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003a43a:	outs   dx,WORD PTR ds:[rsi]
   14003a43c:	push   rdi
   14003a43d:	add    BYTE PTR [rax],dl
   14003a43f:	add    BYTE PTR [rsi+0x65],dl
   14003a442:	jb     0x14003a495
   14003a444:	jne    0x14003a4ab
   14003a446:	jb     0x14003a4c1
   14003a448:	push   rsi
   14003a449:	(bad)  
   14003a44a:	ins    BYTE PTR es:[rdi],dx
   14003a44b:	jne    0x14003a4b2
   14003a44d:	push   rdi
   14003a44e:	add    BYTE PTR [rax],al
   14003a450:	push   rsi
   14003a451:	rex.RB push r10
   14003a453:	push   rbx
   14003a454:	rex.WB
   14003a455:	rex.WRXB
   14003a456:	rex.WRX
   14003a457:	cs fs ins BYTE PTR es:[rdi],dx
   14003a45a:	ins    BYTE PTR es:[rdi],dx
   14003a45b:	add    ch,bh
   14003a45d:	add    ecx,DWORD PTR [rdi+0x75]
   14003a460:	je     0x14003a4d2
   14003a462:	jne    0x14003a4d8
   14003a464:	rex.R
   14003a465:	gs (bad) 
   14003a467:	jne    0x14003a4d0
   14003a469:	push   rbx
   14003a46a:	je     0x14003a4de
   14003a46c:	imul   ebp,DWORD PTR [rsi+0x67],0x1c000057
   14003a473:	(bad)  
   14003a474:	ins    BYTE PTR es:[rdi],dx
   14003a475:	jae    0x14003a4eb
   14003a477:	jb     0x14003a4e5
   14003a479:	outs   dx,BYTE PTR gs:[rsi]
   14003a47b:	add    BYTE PTR [r8],al
   14003a47e:	(bad)  
   14003a47f:	add    ecx,DWORD PTR [rbp+0x75]
   14003a482:	ins    BYTE PTR es:[rdi],dx
   14003a483:	je     0x14003a4ee
   14003a485:	rex.X jns 0x14003a4fc
   14003a488:	gs push rsp
   14003a48a:	outs   dx,DWORD PTR ds:[rsi]
   14003a48b:	push   rdi
   14003a48c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168

Disassembly of section .data:

000000014003b000 <.data>:
   14003b000:	(bad)  
   14003b001:	(bad)  
   14003b002:	(bad)  
   14003b003:	(bad)  
   14003b004:	(bad)  
   14003b005:	(bad)  
   14003b006:	(bad)  
   14003b007:	inc    eax
   14003b009:	xchg   esp,eax
   14003b00a:	add    al,BYTE PTR [rax+0x1]
   14003b00d:	add    BYTE PTR [rax],al
   14003b00f:	add    BYTE PTR [rax],dl
   14003b011:	xchg   ebp,eax
   14003b012:	add    al,BYTE PTR [rax+0x1]
   14003b015:	add    BYTE PTR [rax],al
   14003b017:	add    BYTE PTR [rax+0x1400296],al
   14003b01d:	add    BYTE PTR [rax],al
   14003b01f:	add    BYTE PTR [rax+0x1400297],dh
   14003b025:	add    BYTE PTR [rax],al
   14003b027:	add    al,ch
   14003b029:	xchg   esp,eax
   14003b02a:	add    al,BYTE PTR [rax+0x1]
   14003b02d:	add    BYTE PTR [rax],al
   14003b02f:	add    BYTE PTR [rax],bh
   14003b031:	xchg   esi,eax
   14003b032:	add    al,BYTE PTR [rax+0x1]
   14003b035:	add    BYTE PTR [rax],al
   14003b037:	add    BYTE PTR [rax-0x67],ch
   14003b03a:	add    al,BYTE PTR [rax+0x1]
   14003b03d:	add    BYTE PTR [rax],al
   14003b03f:	add    BYTE PTR [rax-0x6a],cl
   14003b042:	add    al,BYTE PTR [rax+0x1]
   14003b045:	add    BYTE PTR [rax],al
   14003b047:	add    BYTE PTR [rax-0x67],bh
   14003b04a:	add    al,BYTE PTR [rax+0x1]
   14003b04d:	add    BYTE PTR [rax],al
   14003b04f:	add    al,dh
   14003b051:	cdq    
   14003b052:	add    al,BYTE PTR [rax+0x1]
   14003b055:	add    BYTE PTR [rax],al
   14003b057:	add    BYTE PTR [rax-0x69],bl
   14003b05a:	add    al,BYTE PTR [rax+0x1]
   14003b05d:	add    BYTE PTR [rax],al
   14003b05f:	add    BYTE PTR [rax+0x140029a],al
   14003b065:	add    BYTE PTR [rax],al
   14003b067:	add    BYTE PTR [rax-0x6a],bl
   14003b06a:	add    al,BYTE PTR [rax+0x1]
   14003b06d:	add    BYTE PTR [rax],al
   14003b06f:	add    al,dh
   14003b071:	(bad)  
   14003b072:	add    al,BYTE PTR [rax+0x1]
   14003b075:	add    BYTE PTR [rax],al
   14003b077:	add    BYTE PTR [rax+0x1400299],bh
   14003b07d:	add    BYTE PTR [rax],al
   14003b07f:	add    BYTE PTR [rax+0x1400297],bl
   14003b085:	add    BYTE PTR [rax],al
   14003b087:	add    BYTE PTR [rax+0x140029b],ah
   14003b08d:	add    BYTE PTR [rax],al
   14003b08f:	add    BYTE PTR [rax-0x65],cl
   14003b092:	add    al,BYTE PTR [rax+0x1]
   14003b095:	add    BYTE PTR [rax],al
   14003b097:	add    al,ah
   14003b099:	fwait
   14003b09a:	add    al,BYTE PTR [rax+0x1]
   14003b09d:	add    BYTE PTR [rax],al
   14003b09f:	add    al,cl
   14003b0a1:	cdq    
   14003b0a2:	add    al,BYTE PTR [rax+0x1]
   14003b0a5:	add    BYTE PTR [rax],al
   14003b0a7:	add    BYTE PTR [rax-0x66],bl
   14003b0aa:	add    al,BYTE PTR [rax+0x1]
   14003b0ad:	add    BYTE PTR [rax],al
   14003b0af:	add    BYTE PTR [rax],dl
   14003b0b1:	pushf  
   14003b0b2:	add    al,BYTE PTR [rax+0x1]
   14003b0b5:	add    BYTE PTR [rax],al
   14003b0b7:	add    BYTE PTR [rax],ah
   14003b0b9:	pushf  
   14003b0ba:	add    al,BYTE PTR [rax+0x1]
   14003b0bd:	add    BYTE PTR [rax],al
   14003b0bf:	add    BYTE PTR [rax],dh
   14003b0c1:	pushf  
   14003b0c2:	add    al,BYTE PTR [rax+0x1]
   14003b0c5:	add    BYTE PTR [rax],al
   14003b0c7:	add    BYTE PTR [rax-0x66],ch
   14003b0ca:	add    al,BYTE PTR [rax+0x1]
   14003b0cd:	add    BYTE PTR [rax],al
   14003b0cf:	add    BYTE PTR [rax+0x140029b],cl
   14003b0d5:	add    BYTE PTR [rax],al
   14003b0d7:	add    BYTE PTR [rax-0x64],al
   14003b0da:	add    al,BYTE PTR [rax+0x1]
   14003b0dd:	add    BYTE PTR [rax],al
   14003b0df:	add    BYTE PTR [rax-0x64],dl
   14003b0e2:	add    al,BYTE PTR [rax+0x1]
   14003b0e5:	add    BYTE PTR [rax],al
   14003b0e7:	add    BYTE PTR [rax-0x64],ch
   14003b0ea:	add    al,BYTE PTR [rax+0x1]
   14003b0ed:	add    BYTE PTR [rax],al
   14003b0ef:	add    BYTE PTR [rax-0x64],dh
   14003b0f2:	add    al,BYTE PTR [rax+0x1]
   14003b0f5:	add    BYTE PTR [rax],al
   14003b0f7:	add    BYTE PTR [rax+0x140029c],bl
   14003b0fd:	add    BYTE PTR [rax],al
   14003b0ff:	add    BYTE PTR [rax+0x140029c],dh
   14003b105:	add    BYTE PTR [rax],al
   14003b107:	add    al,cl
   14003b109:	pushf  
   14003b10a:	add    al,BYTE PTR [rax+0x1]
   14003b10d:	add    BYTE PTR [rax],al
   14003b10f:	add    al,ah
   14003b111:	pushf  
   14003b112:	add    al,BYTE PTR [rax+0x1]
   14003b115:	add    BYTE PTR [rax],al
   14003b117:	add    al,bh
   14003b119:	pushf  
   14003b11a:	add    al,BYTE PTR [rax+0x1]
   14003b11d:	add    BYTE PTR [rax],al
   14003b11f:	add    BYTE PTR [rax],dl
   14003b121:	popf   
   14003b122:	add    al,BYTE PTR [rax+0x1]
   14003b125:	add    BYTE PTR [rax],al
   14003b127:	add    BYTE PTR [rax],bl
   14003b129:	popf   
   14003b12a:	add    al,BYTE PTR [rax+0x1]
   14003b12d:	add    BYTE PTR [rax],al
   14003b12f:	add    BYTE PTR [rax],ch
   14003b131:	popf   
   14003b132:	add    al,BYTE PTR [rax+0x1]
   14003b135:	add    BYTE PTR [rax],al
   14003b137:	add    bh,bh
   14003b139:	(bad)  
   14003b13a:	(bad)  
   14003b13b:	inc    DWORD PTR [rax]
   14003b13d:	add    BYTE PTR [rax],al
   14003b13f:	add    BYTE PTR [rip+0x0],al        # 0x14003b145
	...
   14003b15d:	add    BYTE PTR [rax],al
   14003b15f:	add    BYTE PTR [rip+0x0],al        # 0x14003b165
	...
   14003b17d:	add    BYTE PTR [rax],al
   14003b17f:	add    BYTE PTR [rip+0x0],al        # 0x14003b185
	...
   14003b19d:	add    BYTE PTR [rax],al
   14003b19f:	add    BYTE PTR [rax+0x14002b8],dh
   14003b1a5:	add    BYTE PTR [rax],al
   14003b1a7:	add    al,cl
   14003b1a9:	mov    eax,0x14002
   14003b1ae:	add    BYTE PTR [rax],al
   14003b1b0:	sbb    al,0xba
   14003b1b2:	add    al,BYTE PTR [rax+0x1]
   14003b1b5:	add    BYTE PTR [rax],al
   14003b1b7:	add    BYTE PTR [rax+0x14002cb],al
   14003b1bd:	add    BYTE PTR [rax],al
   14003b1bf:	add    BYTE PTR [rax+0x14002cb],bl
   14003b1c5:	add    BYTE PTR [rax],al
   14003b1c7:	add    BYTE PTR [rcx],al
   14003b1c9:	add    BYTE PTR [rax],al
   14003b1cb:	add    BYTE PTR [rax],al
   14003b1cd:	add    BYTE PTR [rax],al
   14003b1cf:	add    BYTE PTR [rax+0x14002da],ch
   14003b1d5:	add    BYTE PTR [rax],al
   14003b1d7:	add    al,al
   14003b1d9:	fiadd  DWORD PTR [rdx]
   14003b1db:	rex add DWORD PTR [rax],eax
   14003b1de:	add    BYTE PTR [rax],al
   14003b1e0:	add    BYTE PTR [rax],0x0
	...
   14003b21f:	add    al,al
   14003b221:	sti    
   14003b222:	add    al,BYTE PTR [rax+0x1]
   14003b225:	add    BYTE PTR [rax],al
   14003b227:	add    al,bl
   14003b229:	sti    
   14003b22a:	add    al,BYTE PTR [rax+0x1]
   14003b22d:	add    BYTE PTR [rax],al
   14003b22f:	add    al,bl
   14003b231:	adc    al,0x3
   14003b233:	rex add DWORD PTR [rax],eax
   14003b236:	add    BYTE PTR [rax],al
   14003b238:	lock adc al,0x3
   14003b23b:	rex add DWORD PTR [rax],eax
   14003b23e:	add    BYTE PTR [rax],al
   14003b240:	jne    0x14003b1da
	...
   14003b24e:	add    BYTE PTR [rax],al
   14003b250:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14003b256:	add    BYTE PTR [rax],al
   14003b258:	int    0x5d
   14003b25a:	and    dl,dl
   14003b25c:	data16 (bad) 
   14003b25e:	(bad)  
   14003b25f:	inc    DWORD PTR [rcx]
   14003b261:	add    BYTE PTR [rax],al
   14003b263:	add    dh,bh
   14003b265:	(bad)  
   14003b266:	(bad)  
   14003b267:	(bad)  
   14003b268:	(bad)  
   14003b269:	(bad)  
   14003b26a:	(bad)  
   14003b26b:	inc    DWORD PTR [rax]
   14003b26d:	add    BYTE PTR [rax],al
   14003b26f:	add    BYTE PTR [rax+0x1400221],dh
   14003b275:	add    BYTE PTR [rax],al
   14003b277:	add    BYTE PTR [rdx],cl
   14003b279:	add    BYTE PTR [rax],al
   14003b27b:	add    BYTE PTR [rax],al
   14003b27d:	add    BYTE PTR [rax],al
   14003b27f:	add    BYTE PTR [rax+rax*1],al
   14003b282:	add    al,BYTE PTR [rax+0x0]
	...
   14003b290:	clc    
   14003b291:	(bad)  
   14003b292:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b29d:	add    BYTE PTR [rax],al
   14003b29f:	add    BYTE PTR [rsi],ch
   14003b2a1:	(bad)  
   14003b2a2:	push   r14
   14003b2a4:	rex.XB
   14003b2a5:	rex.WRXB (bad) 
   14003b2a7:	push   0x65
   14003b2a9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14003b2ad:	add    BYTE PTR [rax],al
   14003b2af:	add    al,bh
   14003b2b1:	(bad)  
   14003b2b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b2bd:	add    BYTE PTR [rax],al
   14003b2bf:	add    BYTE PTR [rsi],ch
   14003b2c1:	(bad)  
   14003b2c2:	push   r14
   14003b2c4:	rex.XB
   14003b2c5:	rex.XB ins DWORD PTR es:[rdi],dx
   14003b2c7:	fs push rsp
   14003b2c9:	(bad)  
   14003b2ca:	jb     0x14003b333
   14003b2cc:	gs je  0x14003b30f
   14003b2cf:	add    BYTE PTR [rax],al
   14003b2d2:	add    BYTE PTR [rax],al
   14003b2d4:	add    BYTE PTR [rax],al
   14003b2d6:	add    BYTE PTR [rax],al
   14003b2d8:	clc    
   14003b2d9:	(bad)  
   14003b2da:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b2e5:	add    BYTE PTR [rax],al
   14003b2e7:	add    BYTE PTR [rsi],ch
   14003b2e9:	(bad)  
   14003b2ea:	push   r14
   14003b2ec:	push   rdi
   14003b2ed:	rex.R
   14003b2ee:	rex.WB
   14003b2ef:	rex.WRB
   14003b2f0:	rex.B jo 0x14003b363
   14003b2f3:	rex
   14003b2f4:	add    BYTE PTR [rax],al
   14003b2f7:	add    al,bh
   14003b2f9:	(bad)  
   14003b2fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b305:	add    BYTE PTR [rax],al
   14003b307:	add    BYTE PTR [rsi],ch
   14003b309:	(bad)  
   14003b30a:	push   r14
   14003b30c:	rex.XB push r15
   14003b30e:	imul   ebp,DWORD PTR [rsi+0x41],0x40407070
   14003b315:	add    BYTE PTR [rax],al
   14003b317:	add    al,bh
   14003b319:	(bad)  
   14003b31a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b325:	add    BYTE PTR [rax],al
   14003b327:	add    BYTE PTR [rsi],ch
   14003b329:	(bad)  
   14003b32a:	push   r14
   14003b32c:	rex.XB push r15
   14003b32e:	imul   ebp,DWORD PTR [rsi+0x54],0x61657268
   14003b335:	fs rex
   14003b337:	add    BYTE PTR [rax],al
   14003b33a:	add    BYTE PTR [rax],al
   14003b33c:	add    BYTE PTR [rax],al
   14003b33e:	add    BYTE PTR [rax],al
   14003b340:	clc    
   14003b341:	(bad)  
   14003b342:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b34d:	add    BYTE PTR [rax],al
   14003b34f:	add    BYTE PTR [rsi],ch
   14003b351:	(bad)  
   14003b352:	push   r14
   14003b354:	rex.XB push r15
   14003b356:	outs   dx,BYTE PTR ds:[rsi]
   14003b357:	fs rex
   14003b359:	add    BYTE PTR [rax],al
   14003b35c:	add    BYTE PTR [rax],al
   14003b35e:	add    BYTE PTR [rax],al
   14003b360:	clc    
   14003b361:	(bad)  
   14003b362:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b36d:	add    BYTE PTR [rax],al
   14003b36f:	add    BYTE PTR [rsi],ch
   14003b371:	(bad)  
   14003b372:	push   r14
   14003b374:	push   rdi
   14003b375:	rex.R outs dx,DWORD PTR ds:[rsi]
   14003b377:	ja     0x14003b3e7
   14003b379:	ins    BYTE PTR es:[rdi],dx
   14003b37a:	outs   dx,DWORD PTR ds:[rsi]
   14003b37b:	(bad)  
   14003b37c:	fs rex.WRB (bad) 
   14003b37f:	outs   dx,BYTE PTR ds:[rsi]
   14003b380:	(bad)  
   14003b381:	addr32 gs jb 0x14003b3c5
   14003b385:	add    BYTE PTR [rax],al
   14003b388:	clc    
   14003b389:	(bad)  
   14003b38a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b395:	add    BYTE PTR [rax],al
   14003b397:	add    BYTE PTR [rsi],ch
   14003b399:	(bad)  
   14003b39a:	push   r14
   14003b39c:	push   rdi
   14003b39d:	rex.R
   14003b39e:	rex.WB
   14003b39f:	rex.WRB
   14003b3a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003b3a2:	ins    DWORD PTR es:[rdi],dx
   14003b3a3:	ins    DWORD PTR es:[rdi],dx
   14003b3a4:	(bad)  
   14003b3a5:	outs   dx,BYTE PTR ds:[rsi]
   14003b3a6:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6f666e49
   14003b3af:	rex
   14003b3b0:	add    BYTE PTR [rax],al
   14003b3b3:	add    BYTE PTR [rax],al
   14003b3b5:	add    BYTE PTR [rax],al
   14003b3b7:	add    al,bh
   14003b3b9:	(bad)  
   14003b3ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b3c5:	add    BYTE PTR [rax],al
   14003b3c7:	add    BYTE PTR [rsi],ch
   14003b3c9:	(bad)  
   14003b3ca:	push   r14
   14003b3cc:	rex.XB
   14003b3cd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003b3cf:	ins    DWORD PTR es:[rdi],dx
   14003b3d0:	ins    DWORD PTR es:[rdi],dx
   14003b3d1:	(bad)  
   14003b3d2:	outs   dx,BYTE PTR ds:[rsi]
   14003b3d3:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6f666e49
   14003b3dc:	rex
   14003b3dd:	add    BYTE PTR [rax],al
   14003b3e0:	clc    
   14003b3e1:	(bad)  
   14003b3e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b3ed:	add    BYTE PTR [rax],al
   14003b3ef:	add    BYTE PTR [rsi],ch
   14003b3f1:	(bad)  
   14003b3f2:	push   r14
   14003b3f4:	rex.XB
   14003b3f5:	imul   r13d,DWORD PTR [rbp+0x44],0x614a676c
   14003b3fd:	jbe    0x14003b460
   14003b3ff:	rex.RB js 0x14003b476
   14003b402:	outs   dx,BYTE PTR gs:[rsi]
   14003b404:	fs gs jb 0x14003b448
   14003b408:	add    BYTE PTR [rax],al
   14003b40b:	add    BYTE PTR [rax],al
   14003b40d:	add    BYTE PTR [rax],al
   14003b40f:	add    al,bh
   14003b411:	(bad)  
   14003b412:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b41d:	add    BYTE PTR [rax],al
   14003b41f:	add    BYTE PTR [rsi],ch
   14003b421:	(bad)  
   14003b422:	push   r14
   14003b424:	rex.XB
   14003b425:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003b42d:	add    BYTE PTR [rax],al
   14003b42f:	add    al,bh
   14003b431:	(bad)  
   14003b432:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b43d:	add    BYTE PTR [rax],al
   14003b43f:	add    BYTE PTR [rsi],ch
   14003b441:	(bad)  
   14003b442:	push   r14
   14003b444:	rex.XB
   14003b445:	imul   r13d,DWORD PTR [rbp+0x48],0x446c6d74
   14003b44d:	ins    BYTE PTR es:[rdi],dx
   14003b44e:	addr32 rex
   14003b450:	add    BYTE PTR [rax],al
   14003b453:	add    BYTE PTR [rax],al
   14003b455:	add    BYTE PTR [rax],al
   14003b457:	add    al,bh
   14003b459:	(bad)  
   14003b45a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b465:	add    BYTE PTR [rax],al
   14003b467:	add    BYTE PTR [rsi],ch
   14003b469:	(bad)  
   14003b46a:	push   r14
   14003b46c:	rex.XB
   14003b46d:	rex.R
   14003b46e:	rex.W je 0x14003b4de
   14003b471:	ins    BYTE PTR es:[rdi],dx
   14003b472:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003b47a:	add    BYTE PTR [rax],al
   14003b47c:	add    BYTE PTR [rax],al
   14003b47e:	add    BYTE PTR [rax],al
   14003b480:	clc    
   14003b481:	(bad)  
   14003b482:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b48d:	add    BYTE PTR [rax],al
   14003b48f:	add    BYTE PTR [rsi],ch
   14003b491:	(bad)  
   14003b492:	push   r14
   14003b494:	rex.XB
   14003b495:	rex.R
   14003b496:	rex.W je 0x14003b506
   14003b499:	ins    BYTE PTR es:[rdi],dx
   14003b49a:	rex.RB jbe 0x14003b502
   14003b49d:	outs   dx,BYTE PTR ds:[rsi]
   14003b49e:	je     0x14003b4f3
   14003b4a0:	imul   ebp,DWORD PTR [rsi+0x6b],0x4040
   14003b4a7:	add    al,bh
   14003b4a9:	(bad)  
   14003b4aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b4b5:	add    BYTE PTR [rax],al
   14003b4b7:	add    BYTE PTR [rsi],ch
   14003b4b9:	(bad)  
   14003b4ba:	push   r14
   14003b4bc:	rex.XB
   14003b4bd:	rex.R
   14003b4be:	rex.W je 0x14003b52e
   14003b4c1:	ins    BYTE PTR es:[rdi],dx
   14003b4c2:	push   rbx
   14003b4c3:	imul   ebp,DWORD PTR [rsi+0x6b],0x646e6148
   14003b4ca:	ins    BYTE PTR es:[rdi],dx
   14003b4cb:	gs jb  0x14003b50e
   14003b4ce:	add    al,dil
   14003b4d1:	(bad)  
   14003b4d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b4dd:	add    BYTE PTR [rax],al
   14003b4df:	add    BYTE PTR [rsi],ch
   14003b4e1:	(bad)  
   14003b4e2:	push   r14
   14003b4e4:	rex.XB
   14003b4e5:	rex.R
   14003b4e6:	rex.W je 0x14003b556
   14003b4e9:	ins    BYTE PTR es:[rdi],dx
   14003b4ea:	push   rbx
   14003b4eb:	imul   ebp,DWORD PTR [rsi+0x6b],0x646e6148
   14003b4f2:	ins    BYTE PTR es:[rdi],dx
   14003b4f3:	gs jb  0x14003b538
   14003b4f6:	(bad)  
   14003b4f7:	jae    0x14003b55e
   14003b4f9:	xor    DWORD PTR [rax+0x40],eax
   14003b4fc:	add    BYTE PTR [rax],al
   14003b4fe:	add    BYTE PTR [rax],al
   14003b500:	clc    
   14003b501:	(bad)  
   14003b502:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b50d:	add    BYTE PTR [rax],al
   14003b50f:	add    BYTE PTR [rsi],ch
   14003b511:	(bad)  
   14003b512:	push   r14
   14003b514:	rex.XB
   14003b515:	rex.R
   14003b516:	rex.W je 0x14003b586
   14003b519:	ins    BYTE PTR es:[rdi],dx
   14003b51a:	push   rbx
   14003b51b:	imul   ebp,DWORD PTR [rsi+0x6b],0x646e6148
   14003b522:	ins    BYTE PTR es:[rdi],dx
   14003b523:	gs jb  0x14003b568
   14003b526:	(bad)  
   14003b527:	jae    0x14003b58e
   14003b529:	xor    al,BYTE PTR [rax+0x40]
   14003b52c:	add    BYTE PTR [rax],al
   14003b52e:	add    BYTE PTR [rax],al
   14003b530:	clc    
   14003b531:	(bad)  
   14003b532:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b53d:	add    BYTE PTR [rax],al
   14003b53f:	add    BYTE PTR [rsi],ch
   14003b541:	(bad)  
   14003b542:	push   r14
   14003b544:	push   rdi
   14003b545:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003b547:	jae    0x14003b5bd
   14003b549:	(bad)  
   14003b54a:	ins    BYTE PTR es:[rdi],dx
   14003b54b:	ins    BYTE PTR es:[rdi],dx
   14003b54c:	rex.R ins BYTE PTR es:[rdi],dx
   14003b54e:	addr32 rex
   14003b550:	add    BYTE PTR [rax],al
   14003b553:	add    BYTE PTR [rax],al
   14003b555:	add    BYTE PTR [rax],al
   14003b557:	add    al,bh
   14003b559:	(bad)  
   14003b55a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b565:	add    BYTE PTR [rax],al
   14003b567:	add    BYTE PTR [rsi],ch
   14003b569:	(bad)  
   14003b56a:	push   r14
   14003b56c:	rex.WB
   14003b56d:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x736e6172
   14003b576:	data16 gs jb 0x14003b5ca
   14003b57a:	jb     0x14003b5eb
   14003b57c:	addr32 jb 0x14003b5e4
   14003b57f:	jae    0x14003b5f4
   14003b581:	rex
   14003b582:	add    BYTE PTR [rax],al
   14003b585:	add    BYTE PTR [rax],al
   14003b587:	add    al,bh
   14003b589:	(bad)  
   14003b58a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b595:	add    BYTE PTR [rax],al
   14003b597:	add    BYTE PTR [rsi],ch
   14003b599:	(bad)  
   14003b59a:	push   r14
   14003b59c:	push   rdi
   14003b59d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14003b59f:	ja     0x14003b60f
   14003b5a1:	ins    BYTE PTR es:[rdi],dx
   14003b5a2:	outs   dx,DWORD PTR ds:[rsi]
   14003b5a3:	(bad)  
   14003b5a4:	fs rex.R ins BYTE PTR es:[rdi],dx
   14003b5a7:	addr32 rex
   14003b5a9:	add    BYTE PTR [rax],al
   14003b5ac:	add    BYTE PTR [rax],al
   14003b5ae:	add    BYTE PTR [rax],al
   14003b5b0:	clc    
   14003b5b1:	(bad)  
   14003b5b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b5bd:	add    BYTE PTR [rax],al
   14003b5bf:	add    BYTE PTR [rsi],ch
   14003b5c1:	push   rax
   14003b5c2:	rex.RB
   14003b5c3:	pop    r15
   14003b5c5:	push   rdi
   14003b5c6:	add    BYTE PTR [rax],al
   14003b5c8:	clc    
   14003b5c9:	(bad)  
   14003b5ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b5d5:	add    BYTE PTR [rax],al
   14003b5d7:	add    BYTE PTR [rsi],ch
   14003b5d9:	push   rax
   14003b5da:	rex.RB
   14003b5db:	pop    r8
   14003b5dd:	add    BYTE PTR [rax],al
   14003b5df:	add    al,bh
   14003b5e1:	(bad)  
   14003b5e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b5ed:	add    BYTE PTR [rax],al
   14003b5ef:	add    BYTE PTR [rsi],ch
   14003b5f1:	(bad)  
   14003b5f2:	push   r14
   14003b5f4:	push   rdi
   14003b5f5:	push   rbx
   14003b5f6:	je     0x14003b66a
   14003b5f8:	imul   ebp,DWORD PTR [rsi+0x67],0x40407845
   14003b5ff:	add    al,bh
   14003b601:	(bad)  
   14003b602:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b60d:	add    BYTE PTR [rax],al
   14003b60f:	add    BYTE PTR [rsi],ch
   14003b611:	(bad)  
   14003b612:	push   r14
   14003b614:	rex.XB push r8
   14003b616:	rex.XB push r13
   14003b618:	rex.XB jb 0x14003b684
   14003b61b:	je     0x14003b686
   14003b61d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b620:	push   rbx
   14003b621:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003b626:	outs   dx,BYTE PTR ds:[rsi]
   14003b627:	rex
   14003b628:	rex.XB push r10
   14003b62a:	rex.WR push rax
   14003b62c:	rex.XB push r13
   14003b62e:	rex
   14003b62f:	add    BYTE PTR [rax],al
   14003b632:	add    BYTE PTR [rax],al
   14003b634:	add    BYTE PTR [rax],al
   14003b636:	add    BYTE PTR [rax],al
   14003b638:	clc    
   14003b639:	(bad)  
   14003b63a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b645:	add    BYTE PTR [rax],al
   14003b647:	add    BYTE PTR [rsi],ch
   14003b649:	(bad)  
   14003b64a:	push   r13
   14003b64c:	pop    rdi
   14003b64d:	push   rdx
   14003b64e:	push   rsp
   14003b64f:	rex.WR pop rdi
   14003b651:	rex.XB push r10
   14003b653:	rex.WB push r12
   14003b655:	rex.WB
   14003b656:	rex.XB
   14003b657:	rex.B
   14003b658:	rex.WR pop rdi
   14003b65a:	push   rbx
   14003b65b:	rex.RB
   14003b65c:	rex.XB push r12
   14003b65e:	rex.WB
   14003b65f:	rex.WRXB
   14003b660:	rex.WRX
   14003b661:	rex
   14003b662:	add    BYTE PTR [rax],al
   14003b665:	add    BYTE PTR [rax],al
   14003b667:	add    al,bh
   14003b669:	(bad)  
   14003b66a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b675:	add    BYTE PTR [rax],al
   14003b677:	add    BYTE PTR [rsi],ch
   14003b679:	(bad)  
   14003b67a:	push   r14
   14003b67c:	rex.XB
   14003b67d:	rex.RB js 0x14003b6e3
   14003b680:	gs jo  0x14003b6f7
   14003b683:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14003b68a:	add    BYTE PTR [rax],al
   14003b68c:	add    BYTE PTR [rax],al
   14003b68e:	add    BYTE PTR [rax],al
   14003b690:	clc    
   14003b691:	(bad)  
   14003b692:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b69d:	add    BYTE PTR [rax],al
   14003b69f:	add    BYTE PTR [rsi],ch
   14003b6a1:	(bad)  
   14003b6a2:	push   r14
   14003b6a4:	rex.XB
   14003b6a5:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x70656378
   14003b6ae:	je     0x14003b719
   14003b6b0:	outs   dx,DWORD PTR ds:[rsi]
   14003b6b1:	outs   dx,BYTE PTR ds:[rsi]
   14003b6b2:	rex
   14003b6b3:	add    BYTE PTR [rax],al
   14003b6b6:	add    BYTE PTR [rax],al
   14003b6b8:	clc    
   14003b6b9:	(bad)  
   14003b6ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b6c5:	add    BYTE PTR [rax],al
   14003b6c7:	add    BYTE PTR [rsi],ch
   14003b6c9:	(bad)  
   14003b6ca:	push   r14
   14003b6cc:	rex.XB
   14003b6cd:	imul   r13d,DWORD PTR [rbp+0x4a],0x6e49626f
   14003b6d5:	outs   dx,WORD PTR ds:[rsi]
   14003b6d7:	rex
   14003b6d8:	add    BYTE PTR [rax],al
   14003b6db:	add    BYTE PTR [rax],al
   14003b6dd:	add    BYTE PTR [rax],al
   14003b6df:	add    al,bh
   14003b6e1:	(bad)  
   14003b6e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b6ed:	add    BYTE PTR [rax],al
   14003b6ef:	add    BYTE PTR [rsi],ch
   14003b6f1:	(bad)  
   14003b6f2:	push   r14
   14003b6f4:	rex.XB
   14003b6f5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003b6f7:	push   rsp
   14003b6f8:	jb     0x14003b75b
   14003b6fa:	movsxd ebp,DWORD PTR [rbx+0x4f]
   14003b6fd:	(bad)  
   14003b6fe:	push   0x65
   14003b700:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14003b704:	add    BYTE PTR [rax],al
   14003b706:	add    BYTE PTR [rax],al
   14003b708:	clc    
   14003b709:	(bad)  
   14003b70a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b715:	add    BYTE PTR [rax],al
   14003b717:	add    BYTE PTR [rsi],ch
   14003b719:	(bad)  
   14003b71a:	push   r14
   14003b71c:	pop    rdi
   14003b71d:	rex.B
   14003b71e:	rex.RX pop rax
   14003b720:	pop    rdi
   14003b721:	rex.R
   14003b722:	rex.WR
   14003b723:	rex.WR pop rdi
   14003b725:	rex.WRB
   14003b726:	rex.WRXB
   14003b727:	rex.R push rbp
   14003b729:	rex.WR
   14003b72a:	rex.RB pop r15
   14003b72c:	push   rbx
   14003b72d:	push   rsp
   14003b72e:	push   r12
   14003b730:	rex.RB
   14003b731:	rex
   14003b732:	add    BYTE PTR [rax],al
   14003b735:	add    BYTE PTR [rax],al
   14003b737:	add    al,bh
   14003b739:	(bad)  
   14003b73a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b745:	add    BYTE PTR [rax],al
   14003b747:	add    BYTE PTR [rsi],ch
   14003b749:	(bad)  
   14003b74a:	push   r14
   14003b74c:	rex.B
   14003b74d:	rex.RX pop rax
   14003b74f:	pop    rdi
   14003b750:	rex.WRB
   14003b751:	rex.WRXB
   14003b752:	rex.R push rbp
   14003b754:	rex.WR
   14003b755:	rex.RB pop r15
   14003b757:	push   rbx
   14003b758:	push   rsp
   14003b759:	push   r12
   14003b75b:	rex.RB
   14003b75c:	rex
   14003b75d:	add    BYTE PTR [rax],al
   14003b760:	clc    
   14003b761:	(bad)  
   14003b762:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b76d:	add    BYTE PTR [rax],al
   14003b76f:	add    BYTE PTR [rsi],ch
   14003b771:	(bad)  
   14003b772:	push   r14
   14003b774:	je     0x14003b7ef
   14003b776:	jo     0x14003b7dd
   14003b778:	pop    rdi
   14003b779:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14003b780:	clc    
   14003b781:	(bad)  
   14003b782:	add    eax,DWORD PTR [rax+0x1]
	...
   14003b78d:	add    BYTE PTR [rax],al
   14003b78f:	add    BYTE PTR [rsi],ch
   14003b791:	(bad)  
   14003b792:	push   r14
   14003b794:	pop    rdi
   14003b795:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003b798:	pop    rdi
   14003b799:	gs jb  0x14003b80e
   14003b79c:	outs   dx,DWORD PTR ds:[rsi]
   14003b79d:	jb     0x14003b7df
   14003b79f:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014003e000 <.pdata>:
   14003e000:	add    BYTE PTR [rax],dl
   14003e002:	add    BYTE PTR [rax],al
   14003e004:	sbb    al,0x10
   14003e006:	add    BYTE PTR [rax],al
   14003e008:	js     0x14003e062
   14003e00a:	add    eax,DWORD PTR [rax]
   14003e00c:	and    BYTE PTR [rax],dl
   14003e00e:	add    BYTE PTR [rax],al
   14003e010:	cmp    al,0x10
   14003e012:	add    BYTE PTR [rax],al
   14003e014:	js     0x14003e06e
   14003e016:	add    eax,DWORD PTR [rax]
   14003e018:	adc    BYTE PTR [rax],al
   14003e01b:	add    BYTE PTR [rcx+0x10],ah
   14003e01e:	add    BYTE PTR [rax],al
   14003e020:	(bad)  
   14003e021:	jge    0x14003e026
   14003e023:	add    BYTE PTR [rax+0x10],dh
   14003e026:	add    BYTE PTR [rax],al
   14003e028:	mov    WORD PTR [rax],ss
   14003e02a:	add    BYTE PTR [rax],al
   14003e02c:	js     0x14003e086
   14003e02e:	add    eax,DWORD PTR [rax]
   14003e030:	nop
   14003e031:	adc    BYTE PTR [rax],al
   14003e033:	add    BYTE PTR [rax+rdx*1+0x58780000],ch
   14003e03a:	add    eax,DWORD PTR [rax]
   14003e03c:	mov    al,0x10
   14003e03e:	add    BYTE PTR [rax],al
   14003e040:	int3   
   14003e041:	adc    BYTE PTR [rax],al
   14003e043:	add    BYTE PTR [rax+0x58],bh
   14003e046:	add    eax,DWORD PTR [rax]
   14003e048:	rcl    BYTE PTR [rax],1
   14003e04a:	add    BYTE PTR [rax],al
   14003e04c:	in     al,dx
   14003e04d:	adc    BYTE PTR [rax],al
   14003e04f:	add    BYTE PTR [rax+0x58],bh
   14003e052:	add    eax,DWORD PTR [rax]
   14003e054:	lock adc BYTE PTR [rax],al
   14003e057:	add    BYTE PTR [rcx+rdx*1],cl
   14003e05a:	add    BYTE PTR [rax],al
   14003e05c:	js     0x14003e0b6
   14003e05e:	add    eax,DWORD PTR [rax]
   14003e060:	adc    BYTE PTR [rcx],dl
   14003e062:	add    BYTE PTR [rax],al
   14003e064:	sub    al,0x11
   14003e066:	add    BYTE PTR [rax],al
   14003e068:	js     0x14003e0c2
   14003e06a:	add    eax,DWORD PTR [rax]
   14003e06c:	xor    BYTE PTR [rcx],dl
   14003e06e:	add    BYTE PTR [rax],al
   14003e070:	adc    QWORD PTR [rax],r8
   14003e073:	add    BYTE PTR [rax+0x58],bh
   14003e076:	add    eax,DWORD PTR [rax]
   14003e078:	push   rax
   14003e079:	adc    DWORD PTR [rax],eax
   14003e07b:	add    BYTE PTR [rcx+rdx*1+0x0],ch
   14003e07f:	add    BYTE PTR [rax+0x58],bh
   14003e082:	add    eax,DWORD PTR [rax]
   14003e084:	jo     0x14003e097
   14003e086:	add    BYTE PTR [rax],al
   14003e088:	test   DWORD PTR [rcx],edx
   14003e08a:	add    BYTE PTR [rax],al
   14003e08c:	(bad)  
   14003e08d:	jge    0x14003e092
   14003e08f:	add    BYTE PTR [rax-0x53ffffef],dl
   14003e095:	adc    DWORD PTR [rax],eax
   14003e097:	add    BYTE PTR [rax+0x58],bh
   14003e09a:	add    eax,DWORD PTR [rax]
   14003e09c:	mov    al,0x11
   14003e09e:	add    BYTE PTR [rax],al
   14003e0a0:	int3   
   14003e0a1:	adc    DWORD PTR [rax],eax
   14003e0a3:	add    BYTE PTR [rax+0x58],bh
   14003e0a6:	add    eax,DWORD PTR [rax]
   14003e0a8:	rcl    BYTE PTR [rcx],1
   14003e0aa:	add    BYTE PTR [rax],al
   14003e0ac:	icebp  
   14003e0ad:	adc    DWORD PTR [rax],eax
   14003e0af:	add    ah,dl
   14003e0b1:	jge    0x14003e0b6
   14003e0b3:	add    BYTE PTR [rax],al
   14003e0b5:	adc    al,BYTE PTR [rax]
   14003e0b7:	add    BYTE PTR [rdx+rdx*1],bl
   14003e0ba:	add    BYTE PTR [rax],al
   14003e0bc:	js     0x14003e116
   14003e0be:	add    eax,DWORD PTR [rax]
   14003e0c0:	and    BYTE PTR [rdx],dl
   14003e0c2:	add    BYTE PTR [rax],al
   14003e0c4:	cmp    al,0x12
   14003e0c6:	add    BYTE PTR [rax],al
   14003e0c8:	js     0x14003e122
   14003e0ca:	add    eax,DWORD PTR [rax]
   14003e0cc:	adc    al,BYTE PTR [rax]
   14003e0cf:	add    BYTE PTR [rdx+rdx*1+0x0],bl
   14003e0d3:	add    BYTE PTR [rax+0x58],bh
   14003e0d6:	add    eax,DWORD PTR [rax]
   14003e0d8:	(bad)  
   14003e0d9:	adc    al,BYTE PTR [rax]
   14003e0db:	add    BYTE PTR [rdx+rdx*1+0x0],bh
   14003e0df:	add    BYTE PTR [rax+0x58],bh
   14003e0e2:	add    eax,DWORD PTR [rax]
   14003e0e4:	adc    BYTE PTR [rdx],0x0
   14003e0e7:	add    BYTE PTR [rdx+rdx*1+0x58780000],bl
   14003e0ee:	add    eax,DWORD PTR [rax]
   14003e0f0:	pushf  
   14003e0f1:	adc    al,BYTE PTR [rax]
   14003e0f3:	add    cl,ah
   14003e0f5:	adc    al,BYTE PTR [rax]
   14003e0f7:	add    BYTE PTR [rsi+rax*4+0x3],dl
   14003e0fb:	add    ah,ah
   14003e0fd:	adc    al,BYTE PTR [rax]
   14003e0ff:	add    BYTE PTR [rbx+rdx*1],al
   14003e102:	add    BYTE PTR [rax],al
   14003e104:	(bad)  
   14003e105:	jge    0x14003e10a
   14003e107:	add    BYTE PTR [rbx+rdx*1],bl
   14003e10a:	add    BYTE PTR [rax],al
   14003e10c:	(bad)  
   14003e10d:	adc    eax,DWORD PTR [rax]
   14003e10f:	add    ah,dl
   14003e111:	jge    0x14003e116
   14003e113:	add    BYTE PTR [rax+0x13],al
   14003e116:	add    BYTE PTR [rax],al
   14003e118:	pop    rsp
   14003e119:	adc    eax,DWORD PTR [rax]
   14003e11b:	add    BYTE PTR [rax+0x53],ah
   14003e11e:	add    eax,DWORD PTR [rax]
   14003e120:	(bad)  
   14003e121:	adc    eax,DWORD PTR [rax]
   14003e123:	add    BYTE PTR [rsi-0x37ffffed],al
   14003e129:	sub    DWORD PTR [rbx],eax
   14003e12b:	add    BYTE PTR [rax+0x60000013],dl
   14003e131:	adc    al,0x0
   14003e133:	add    BYTE PTR [rbx+rbp*1+0x14700003],al
   14003e13a:	add    BYTE PTR [rax],al
   14003e13c:	cmp    al,0x15
   14003e13e:	add    BYTE PTR [rax],al
   14003e140:	or     al,0x2c
   14003e142:	add    eax,DWORD PTR [rax]
   14003e144:	push   rax
   14003e145:	adc    eax,0x193e0000
   14003e14a:	add    BYTE PTR [rax],al
   14003e14c:	je     0x14003e17a
   14003e14e:	add    eax,DWORD PTR [rax]
   14003e150:	push   rax
   14003e151:	sbb    DWORD PTR [rax],eax
   14003e153:	add    BYTE PTR [rax+0x19],ch
   14003e156:	add    BYTE PTR [rax],al
   14003e158:	rex.R
   14003e159:	add    eax,DWORD PTR cs:[rax]
   14003e15c:	jo     0x14003e177
   14003e15e:	add    BYTE PTR [rax],al
   14003e160:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e161:	sbb    al,BYTE PTR [rax]
   14003e163:	add    BYTE PTR [rsi+rbp*1+0x3],cl
   14003e167:	add    BYTE PTR [rax+0x1a00001a],dh
   14003e16d:	and    DWORD PTR [rax],eax
   14003e16f:	add    BYTE PTR [rsi+rbp*1+0x21200003],ah
   14003e176:	add    BYTE PTR [rax],al
   14003e178:	movabs ds:0xb000033014000023,al
   14003e181:	and    eax,DWORD PTR [rax]
   14003e183:	add    BYTE PTR [rbx+0x24],bh
   14003e186:	add    BYTE PTR [rax],al
   14003e188:	rex.WR xor BYTE PTR [rbx],r8b
   14003e18b:	add    BYTE PTR [rax+0x6f000024],dl
   14003e191:	(bad)  
   14003e192:	add    BYTE PTR [rax],al
   14003e194:	test   BYTE PTR [rax],dh
   14003e196:	add    eax,DWORD PTR [rax]
   14003e198:	and    BYTE PTR [rdi],0x0
   14003e19b:	add    BYTE PTR [rbp+0x24000028],bh
   14003e1a1:	xor    DWORD PTR [rbx],eax
   14003e1a3:	add    al,dl
   14003e1a5:	sub    BYTE PTR [rax],al
   14003e1a7:	add    BYTE PTR [rcx],ch
   14003e1a9:	sub    DWORD PTR [rax],eax
   14003e1ab:	add    BYTE PTR [rcx+rsi*1+0x29300003],bl
   14003e1b2:	add    BYTE PTR [rax],al
   14003e1b4:	lods   eax,DWORD PTR ds:[rsi]
   14003e1b5:	sub    DWORD PTR [rax],eax
   14003e1b7:	add    BYTE PTR [rcx+rsi*1+0x29c00003],ah
   14003e1be:	add    BYTE PTR [rax],al
   14003e1c0:	cmp    eax,0xec00002a
   14003e1c5:	xor    DWORD PTR [rbx],eax
   14003e1c7:	add    BYTE PTR [rax+0x2a],ah
   14003e1ca:	add    BYTE PTR [rax],al
   14003e1cc:	jae    0x14003e1f8
   14003e1ce:	add    BYTE PTR [rax],al
   14003e1d0:	xor    al,0x32
   14003e1d2:	add    eax,DWORD PTR [rax]
   14003e1d4:	movabs al,ds:0x4400002adf00002a
   14003e1dd:	sub    al,BYTE PTR [rbx]
   14003e1df:	add    BYTE PTR [rax],al
   14003e1e1:	sub    eax,DWORD PTR [rax]
   14003e1e3:	add    BYTE PTR [rax],bl
   14003e1e5:	sub    eax,DWORD PTR [rax]
   14003e1e7:	add    BYTE PTR [rax+0x53],ah
   14003e1ea:	add    eax,DWORD PTR [rax]
   14003e1ec:	and    BYTE PTR [rbx],ch
   14003e1ee:	add    BYTE PTR [rax],al
   14003e1f0:	jp     0x14003e21d
   14003e1f2:	add    BYTE PTR [rax],al
   14003e1f4:	sub    al,0x2b
   14003e1f6:	add    eax,DWORD PTR [rax]
   14003e1f8:	sub    BYTE PTR [rbx],0x0
   14003e1fb:	add    BYTE PTR [rax+0x6000002b],bl
   14003e201:	push   rbx
   14003e202:	add    eax,DWORD PTR [rax]
   14003e204:	movabs al,ds:0x6000002bb800002b
   14003e20d:	push   rbx
   14003e20e:	add    eax,DWORD PTR [rax]
   14003e210:	shr    BYTE PTR [rbx],0x0
   14003e213:	add    BYTE PTR [rbp+0x2c],cl
   14003e216:	add    BYTE PTR [rax],al
   14003e218:	rex.WR sub r8b,BYTE PTR [rbx]
   14003e21b:	add    BYTE PTR [rax+0x2c],dl
   14003e21e:	add    BYTE PTR [rax],al
   14003e220:	mov    gs,WORD PTR [rax+rax*1]
   14003e223:	add    BYTE PTR [rax],bh
   14003e225:	pop    rsi
   14003e226:	add    eax,DWORD PTR [rax]
   14003e228:	nop
   14003e229:	sub    al,0x0
   14003e22b:	add    BYTE PTR [rbp+rbp*1+0x0],cl
   14003e22f:	add    al,ch
   14003e231:	sub    DWORD PTR [rbx],eax
   14003e233:	add    BYTE PTR [rax+0x2d],dl
   14003e236:	add    BYTE PTR [rax],al
   14003e238:	xchg   BYTE PTR [rip+0x45780000],ch        # 0x1857be23e
   14003e23e:	add    eax,DWORD PTR [rax]
   14003e240:	nop
   14003e241:	sub    eax,0x2eed0000
   14003e246:	add    BYTE PTR [rax],al
   14003e248:	fsubr  DWORD PTR [rcx]
   14003e24a:	add    eax,DWORD PTR [rax]
   14003e24c:	lock add BYTE PTR cs:[rax],al
   14003e250:	(bad)  
   14003e251:	(bad)  
   14003e252:	add    BYTE PTR [rax],al
   14003e254:	shr    BYTE PTR [rcx],1
   14003e256:	add    eax,DWORD PTR [rax]
   14003e258:	and    BYTE PTR [rdi],ch
   14003e25a:	add    BYTE PTR [rax],al
   14003e25c:	rex.RB (bad) 
   14003e25e:	add    BYTE PTR [rax],al
   14003e260:	sub    r8b,BYTE PTR [rbx]
   14003e263:	add    BYTE PTR [rax+0x2f],dl
   14003e266:	add    BYTE PTR [rax],al
   14003e268:	xor    DWORD PTR [eax],eax
   14003e26b:	add    BYTE PTR [rdx+rbp*1+0x3],bl
   14003e26f:	add    BYTE PTR [rax+0x70000031],dl
   14003e275:	xor    al,BYTE PTR [rax]
   14003e277:	add    BYTE PTR [rdx+rbp*1],dh
   14003e27a:	add    eax,DWORD PTR [rax]
   14003e27c:	jo     0x14003e2b0
   14003e27e:	add    BYTE PTR [rax],al
   14003e280:	cmp    BYTE PTR [rbx],dh
   14003e282:	add    BYTE PTR [rax],al
   14003e284:	and    BYTE PTR [rdx],ch
   14003e286:	add    eax,DWORD PTR [rax]
   14003e288:	push   rax
   14003e289:	xor    eax,DWORD PTR [rax]
   14003e28b:	add    BYTE PTR [rax+0x33],bh
   14003e28e:	add    BYTE PTR [rax],al
   14003e290:	(bad)  
   14003e291:	push   rbx
   14003e292:	add    eax,DWORD PTR [rax]
   14003e294:	shl    BYTE PTR [rbx],0x0
   14003e297:	add    ch,bl
   14003e299:	xor    eax,DWORD PTR [rax]
   14003e29b:	add    BYTE PTR [rax+0x53],ah
   14003e29e:	add    eax,DWORD PTR [rax]
   14003e2a0:	jo     0x14003e2d6
   14003e2a2:	add    BYTE PTR [rax],al
   14003e2a4:	mov    al,0x34
   14003e2a6:	add    BYTE PTR [rax],al
   14003e2a8:	cmp    BYTE PTR [rsi+0x3],bl
   14003e2ab:	add    BYTE PTR [rax-0x53ffffcc],dh
   14003e2b1:	xor    eax,0x324c0000
   14003e2b6:	add    eax,DWORD PTR [rax]
   14003e2b8:	shl    BYTE PTR [rip+0x363d0000],0x0        # 0x17640e2bf
   14003e2bf:	add    BYTE PTR [rax+0x50000332],cl
   14003e2c5:	add    BYTE PTR ss:[rax],al
   14003e2c8:	add    eax,0xc000003a
   14003e2cd:	xor    al,BYTE PTR [rbx]
   14003e2cf:	add    BYTE PTR [rax],dl
   14003e2d1:	cmp    al,BYTE PTR [rax]
   14003e2d3:	add    BYTE PTR [rsi+0x3c],cl
   14003e2d6:	add    BYTE PTR [rax],al
   14003e2d8:	rex xor eax,DWORD PTR [rbx]
   14003e2db:	add    BYTE PTR [rax+0x3c],ah
   14003e2de:	add    BYTE PTR [rax],al
   14003e2e0:	lods   eax,DWORD PTR ds:[rsi]
   14003e2e1:	add    BYTE PTR ds:[rax],al
   14003e2e4:	push   rax
   14003e2e5:	xor    eax,DWORD PTR [rbx]
   14003e2e7:	add    al,al
   14003e2e9:	add    BYTE PTR ds:[rax],al
   14003e2ec:	mov    edx,0x6000003f
   14003e2f1:	xor    eax,DWORD PTR [rbx]
   14003e2f3:	add    al,al
   14003e2f5:	(bad)  
   14003e2f6:	add    BYTE PTR [rax],al
   14003e2f8:	(bad)  
   14003e2f9:	(bad)  
   14003e2fa:	add    BYTE PTR [rax],al
   14003e2fc:	push   0xfffffffff0000333
   14003e301:	(bad)  
   14003e302:	add    BYTE PTR [rax],al
   14003e304:	or     eax,0x70000040
   14003e309:	xor    eax,DWORD PTR [rbx]
   14003e30b:	add    BYTE PTR [rax],ah
   14003e30d:	add    BYTE PTR [rax],al
   14003e310:	mov    bl,0x42
   14003e312:	add    BYTE PTR [rax],al
   14003e314:	js     0x14003e349
   14003e316:	add    eax,DWORD PTR [rax]
   14003e318:	rol    BYTE PTR [rdx+0x0],0x0
   14003e31c:	mov    ecx,0x88000046
   14003e321:	xor    eax,DWORD PTR [rbx]
   14003e323:	add    al,al
   14003e325:	rex.RX add BYTE PTR [rax],r8b
   14003e328:	adc    al,BYTE PTR [rdi+0x0]
   14003e32b:	add    BYTE PTR [rsp+rsi*1],ah
   14003e32e:	add    eax,DWORD PTR [rax]
   14003e330:	and    BYTE PTR [rdi+0x0],al
   14003e333:	add    BYTE PTR [rbx+0x49],bl
   14003e336:	add    BYTE PTR [rax],al
   14003e338:	sub    al,0x34
   14003e33a:	add    eax,DWORD PTR [rax]
   14003e33c:	jo     0x14003e387
   14003e33e:	add    BYTE PTR [rax],al
   14003e340:	call   0x17c03e391
   14003e345:	xor    al,0x3
   14003e347:	add    al,dh
   14003e349:	rex.WR add BYTE PTR [rax],r8b
   14003e34c:	push   rcx
   14003e34d:	rex.WRX add BYTE PTR [rax],r8b
   14003e350:	mov    esp,0x60000334
   14003e355:	rex.WRX add BYTE PTR [rax],r8b
   14003e358:	mov    bh,0x4e
   14003e35a:	add    BYTE PTR [rax],al
   14003e35c:	clc    
   14003e35d:	xor    al,0x3
   14003e35f:	add    al,dl
   14003e361:	rex.WRX add BYTE PTR [rax],r8b
   14003e364:	jrcxz  0x14003e3b4
   14003e366:	add    BYTE PTR [rax],al
   14003e368:	add    BYTE PTR [rip+0x4ef00003],dh        # 0x18ef3e371
   14003e36e:	add    BYTE PTR [rax],al
   14003e370:	sub    eax,0x3800004f
   14003e375:	pop    rsi
   14003e376:	add    eax,DWORD PTR [rax]
   14003e378:	xor    BYTE PTR [rdi+0x0],cl
   14003e37b:	add    cl,cl
   14003e37d:	push   rax
   14003e37e:	add    BYTE PTR [rax],al
   14003e380:	adc    BYTE PTR [rip+0x50d00003],dh        # 0x190d3e389
   14003e386:	add    BYTE PTR [rax],al
   14003e388:	call   QWORD PTR [rax+0x0]
   14003e38b:	add    BYTE PTR [rax+0x355],dl
   14003e391:	push   rcx
   14003e392:	add    BYTE PTR [rax],al
   14003e394:	cmp    BYTE PTR [rcx+0x0],dl
   14003e397:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003e39b:	add    BYTE PTR [rax+0x51],al
   14003e39e:	add    BYTE PTR [rax],al
   14003e3a0:	jno    0x14003e3f3
   14003e3a2:	add    BYTE PTR [rax],al
   14003e3a4:	nop
   14003e3a5:	push   rbp
   14003e3a6:	add    eax,DWORD PTR [rax]
   14003e3a8:	rcl    BYTE PTR [rcx+0x0],0x0
   14003e3ac:	in     eax,dx
   14003e3ad:	push   rcx
   14003e3ae:	add    BYTE PTR [rax],al
   14003e3b0:	(bad)  
   14003e3b1:	push   rbx
   14003e3b2:	add    eax,DWORD PTR [rax]
   14003e3b4:	lock push rcx
   14003e3b6:	add    BYTE PTR [rax],al
   14003e3b8:	or     BYTE PTR [rdx+0x0],dl
   14003e3bb:	add    BYTE PTR [rax+0x53],ah
   14003e3be:	add    eax,DWORD PTR [rax]
   14003e3c0:	adc    BYTE PTR [rdx+0x0],dl
   14003e3c3:	add    BYTE PTR [rcx+0x52],dl
   14003e3c6:	add    BYTE PTR [rax],al
   14003e3c8:	or     BYTE PTR [rip+0x52600003],dh        # 0x19263e3d1
   14003e3ce:	add    BYTE PTR [rax],al
   14003e3d0:	jge    0x14003e424
   14003e3d2:	add    BYTE PTR [rax],al
   14003e3d4:	(bad)  
   14003e3d5:	push   rbx
   14003e3d6:	add    eax,DWORD PTR [rax]
   14003e3d8:	adc    BYTE PTR [rdx+0x0],0x0
   14003e3dc:	mov    dh,0x52
   14003e3de:	add    BYTE PTR [rax],al
   14003e3e0:	js     0x14003e427
   14003e3e2:	add    eax,DWORD PTR [rax]
   14003e3e4:	rcl    BYTE PTR [rdx+0x0],0x0
   14003e3e8:	adc    edx,DWORD PTR [rbx+0x0]
   14003e3eb:	add    BYTE PTR [rdx+rsi*1],bh
   14003e3ee:	add    eax,DWORD PTR [rax]
   14003e3f0:	and    BYTE PTR [rbx+0x0],dl
   14003e3f3:	add    BYTE PTR [rdi],bh
   14003e3f5:	push   rbx
   14003e3f6:	add    BYTE PTR [rax],al
   14003e3f8:	(bad)  
   14003e3f9:	push   rbx
   14003e3fa:	add    eax,DWORD PTR [rax]
   14003e3fc:	rex push rbx
   14003e3fe:	add    BYTE PTR [rax],al
   14003e400:	(bad)  
   14003e402:	add    BYTE PTR [rax],al
   14003e404:	(bad)  
   14003e405:	push   rbx
   14003e406:	add    eax,DWORD PTR [rax]
   14003e408:	jo     0x14003e45d
   14003e40a:	add    BYTE PTR [rax],al
   14003e40c:	xchg   DWORD PTR [rbx+0x0],edx
   14003e40f:	add    ah,dl
   14003e411:	jge    0x14003e416
   14003e413:	add    BYTE PTR [rax-0x3effffad],dl
   14003e419:	push   rbx
   14003e41a:	add    BYTE PTR [rax],al
   14003e41c:	xchg   esp,eax
   14003e41d:	add    DWORD PTR [rbx],0x53d000
   14003e423:	add    BYTE PTR [rax+0x54],bl
   14003e426:	add    BYTE PTR [rax],al
   14003e428:	cmp    BYTE PTR [rsi+0x3],bl
   14003e42b:	add    BYTE PTR [rax+0x54],ah
   14003e42e:	add    BYTE PTR [rax],al
   14003e430:	fwait
   14003e431:	push   rsp
   14003e432:	add    BYTE PTR [rax],al
   14003e434:	xor    r8b,BYTE PTR [rbx]
   14003e437:	add    al,al
   14003e439:	push   rsp
   14003e43a:	add    BYTE PTR [rax],al
   14003e43c:	not    DWORD PTR [rax+rax*1+0x0]
   14003e440:	sub    r8b,BYTE PTR [rbx]
   14003e443:	add    BYTE PTR [rax],al
   14003e445:	push   rbp
   14003e446:	add    BYTE PTR [rax],al
   14003e448:	(bad)  
   14003e449:	push   rbp
   14003e44a:	add    BYTE PTR [rax],al
   14003e44c:	sub    r8b,BYTE PTR [rbx]
   14003e44f:	add    BYTE PTR [rax],dh
   14003e451:	push   rbp
   14003e452:	add    BYTE PTR [rax],al
   14003e454:	outs   dx,BYTE PTR ds:[rsi]
   14003e455:	push   rbp
   14003e456:	add    BYTE PTR [rax],al
   14003e458:	xor    r8b,BYTE PTR [rbx]
   14003e45b:	add    BYTE PTR [rax+0x55],dh
   14003e45e:	add    BYTE PTR [rax],al
   14003e460:	mov    dl,0x55
   14003e462:	add    BYTE PTR [rax],al
   14003e464:	cmp    BYTE PTR [rsi+0x3],bl
   14003e467:	add    BYTE PTR [rax],al
   14003e469:	push   rsi
   14003e46a:	add    BYTE PTR [rax],al
   14003e46c:	xor    DWORD PTR [rax+0x0],ebx
   14003e46f:	add    BYTE PTR [rax],bl
   14003e471:	xor    eax,0x58400003
   14003e476:	add    BYTE PTR [rax],al
   14003e478:	rcr    BYTE PTR [rcx+0x0],1
   14003e47b:	add    BYTE PTR [rax-0x2ffffccb],bl
   14003e481:	pop    rcx
   14003e482:	add    BYTE PTR [rax],al
   14003e484:	add    DWORD PTR [rdx+0x0],ebx
   14003e487:	add    BYTE PTR [rax+0x10000355],dl
   14003e48d:	pop    rdx
   14003e48e:	add    BYTE PTR [rax],al
   14003e490:	rex.WB pop r10
   14003e492:	add    BYTE PTR [rax],al
   14003e494:	nop
   14003e495:	push   rbp
   14003e496:	add    eax,DWORD PTR [rax]
   14003e498:	push   rax
   14003e499:	pop    rdx
   14003e49a:	add    BYTE PTR [rax],al
   14003e49c:	mov    DWORD PTR [rdx+0x0],ebx
   14003e49f:	add    al,dl
   14003e4a1:	xor    eax,0x5a900003
   14003e4a6:	add    BYTE PTR [rax],al
   14003e4a8:	rcr    BYTE PTR [rdx+0x0],1
   14003e4ab:	add    BYTE PTR [rax],bh
   14003e4ad:	pop    rsi
   14003e4ae:	add    eax,DWORD PTR [rax]
   14003e4b0:	rcr    BYTE PTR [rdx+0x0],1
   14003e4b3:	add    bl,ch
   14003e4b5:	pop    rdx
   14003e4b6:	add    BYTE PTR [rax],al
   14003e4b8:	(bad)  
   14003e4b9:	push   rbx
   14003e4ba:	add    eax,DWORD PTR [rax]
   14003e4bc:	lock pop rdx
   14003e4be:	add    BYTE PTR [rax],al
   14003e4c0:	xor    DWORD PTR [rbx+0x0],ebx
   14003e4c3:	add    BYTE PTR [rax],cl
   14003e4c5:	xor    eax,0x5b400003
   14003e4ca:	add    BYTE PTR [rax],al
   14003e4cc:	imul   ebx,DWORD PTR [rbx+0x0],0x0
   14003e4d0:	(bad)  
   14003e4d1:	push   rbx
   14003e4d2:	add    eax,DWORD PTR [rax]
   14003e4d4:	jo     0x14003e531
   14003e4d6:	add    BYTE PTR [rax],al
   14003e4d8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e4d9:	pop    rbx
   14003e4da:	add    BYTE PTR [rax],al
   14003e4dc:	sub    r8b,BYTE PTR [rbx]
   14003e4df:	add    BYTE PTR [rax-0x20ffffa5],dh
   14003e4e5:	pop    rbx
   14003e4e6:	add    BYTE PTR [rax],al
   14003e4e8:	sub    r8b,BYTE PTR [rbx]
   14003e4eb:	add    al,ah
   14003e4ed:	pop    rbx
   14003e4ee:	add    BYTE PTR [rax],al
   14003e4f0:	pop    rbx
   14003e4f1:	pop    rsp
   14003e4f2:	add    BYTE PTR [rax],al
   14003e4f4:	fdiv   DWORD PTR [rip+0x5c700003]        # 0x19c73e4fd
   14003e4fa:	add    BYTE PTR [rax],al
   14003e4fc:	sub    DWORD PTR [rsi+0x0],ebx
   14003e4ff:	add    BYTE PTR [rax+0x36],bl
   14003e502:	add    eax,DWORD PTR [rax]
   14003e504:	xor    BYTE PTR [rsi+0x0],bl
   14003e507:	add    BYTE PTR [rax+0x5e],dl
   14003e50a:	add    BYTE PTR [rax],al
   14003e50c:	shl    BYTE PTR [rsi],1
   14003e50e:	add    eax,DWORD PTR [rax]
   14003e510:	sbb    BYTE PTR [rsi+0x0],0x0
   14003e514:	movabs al,ds:0xb0000336d800005e
   14003e51d:	pop    rsi
   14003e51e:	add    BYTE PTR [rax],al
   14003e520:	rcr    BYTE PTR [rsi+0x0],1
   14003e523:	add    al,ah
   14003e525:	add    eax,DWORD PTR ss:[rax]
   14003e528:	rcr    BYTE PTR [rsi+0x0],1
   14003e52b:	add    BYTE PTR [rsi],al
   14003e52d:	pop    rdi
   14003e52e:	add    BYTE PTR [rax],al
   14003e530:	js     0x14003e577
   14003e532:	add    eax,DWORD PTR [rax]
   14003e534:	adc    BYTE PTR [rdi+0x0],bl
   14003e537:	add    BYTE PTR [rsi+0x5f],bl
   14003e53a:	add    BYTE PTR [rax],al
   14003e53c:	call   0x1b003e877
   14003e541:	pop    rdi
   14003e542:	add    BYTE PTR [rax],al
   14003e544:	lods   eax,DWORD PTR ds:[rsi]
   14003e545:	pop    rdi
   14003e546:	add    BYTE PTR [rax],al
   14003e548:	and    BYTE PTR [rdi],dh
   14003e54a:	add    eax,DWORD PTR [rax]
   14003e54c:	loopne 0x14003e5ad
   14003e54e:	add    BYTE PTR [rax],al
   14003e550:	clc    
   14003e551:	pop    rdi
   14003e552:	add    BYTE PTR [rax],al
   14003e554:	pop    rax
   14003e555:	(bad)  
   14003e556:	add    eax,DWORD PTR [rax]
   14003e558:	add    BYTE PTR [rax+0x0],ah
   14003e55b:	add    BYTE PTR [rcx+0x60],dl
   14003e55e:	add    BYTE PTR [rax],al
   14003e560:	(bad)  
   14003e561:	(bad)  
   14003e562:	add    eax,DWORD PTR [rax]
   14003e564:	(bad)  
   14003e565:	(bad)  
   14003e566:	add    BYTE PTR [rax],al
   14003e568:	movabs al,ds:0xb000033768000060
   14003e571:	(bad)  
   14003e572:	add    BYTE PTR [rax],al
   14003e574:	sub    esp,DWORD PTR [rcx+0x0]
   14003e577:	add    BYTE PTR [rax+0x37],dh
   14003e57a:	add    eax,DWORD PTR [rax]
   14003e57c:	rex (bad) 
   14003e57e:	add    BYTE PTR [rax],al
   14003e580:	mov    WORD PTR [rcx+0x0],fs
   14003e583:	add    BYTE PTR [rax-0x5ffffcc9],ch
   14003e589:	(bad)  
   14003e58a:	add    BYTE PTR [rax],al
   14003e58c:	cmp    eax,0xb0000062
   14003e591:	(bad)  
   14003e592:	add    eax,DWORD PTR [rax]
   14003e594:	push   rax
   14003e595:	(bad)  
   14003e596:	add    BYTE PTR [rax],al
   14003e598:	test   DWORD PTR [rdx+0x0],esp
   14003e59b:	add    BYTE PTR [rax],cl
   14003e59d:	cmp    BYTE PTR [rbx],al
   14003e59f:	add    BYTE PTR [rax+0x24000062],dl
   14003e5a5:	movsxd eax,DWORD PTR [rax]
   14003e5a7:	add    BYTE PTR [rax],dl
   14003e5a9:	cmp    BYTE PTR [rbx],al
   14003e5ab:	add    BYTE PTR [rax],dh
   14003e5ad:	movsxd eax,DWORD PTR [rax]
   14003e5af:	add    ah,al
   14003e5b1:	movsxd eax,DWORD PTR [rax]
   14003e5b3:	add    BYTE PTR [rax+0x38],cl
   14003e5b6:	add    eax,DWORD PTR [rax]
   14003e5b8:	shl    BYTE PTR [rbx+0x0],1
   14003e5bb:	add    BYTE PTR [rdi+0x64],dh
   14003e5be:	add    BYTE PTR [rax],al
   14003e5c0:	cmp    BYTE PTR [rax],0x3
   14003e5c3:	add    BYTE PTR [rax+0x27000064],al
   14003e5c9:	add    BYTE PTR gs:[rax],al
   14003e5cc:	fdivr  DWORD PTR [rax]
   14003e5ce:	add    eax,DWORD PTR [rax]
   14003e5d0:	xor    BYTE PTR [rbp+0x0],ah
   14003e5d3:	add    bh,dl
   14003e5d5:	add    BYTE PTR gs:[rax],al
   14003e5d8:	xor    BYTE PTR [rcx],bh
   14003e5da:	add    eax,DWORD PTR [rax]
   14003e5dc:	loopne 0x14003e643
   14003e5de:	add    BYTE PTR [rax],al
   14003e5e0:	sub    BYTE PTR [rsi+0x0],ah
   14003e5e3:	add    BYTE PTR [rax+0x30000339],cl
   14003e5e9:	data16 add BYTE PTR [rax],al
   14003e5ec:	rex.WRB
   14003e5ed:	data16 add BYTE PTR [rax],al
   14003e5f0:	nop
   14003e5f1:	cmp    DWORD PTR [rbx],eax
   14003e5f3:	add    BYTE PTR [rax+0x66],ah
   14003e5f6:	add    BYTE PTR [rax],al
   14003e5f8:	jge    0x14003e660
   14003e5fa:	add    BYTE PTR [rax],al
   14003e5fc:	cwde   
   14003e5fd:	cmp    DWORD PTR [rbx],eax
   14003e5ff:	add    BYTE PTR [rax-0x2affff9a],dl
   14003e605:	data16 add BYTE PTR [rax],al
   14003e608:	movabs al,ds:0x28000066e0000339
   14003e611:	add    BYTE PTR [eax],al
   14003e614:	test   al,0x39
   14003e616:	add    eax,DWORD PTR [rax]
   14003e618:	xor    BYTE PTR [rdi+0x0],ah
   14003e61b:	add    BYTE PTR [rsi],bh
   14003e61d:	add    BYTE PTR [eax],al
   14003e620:	mov    al,0x39
   14003e622:	add    eax,DWORD PTR [rax]
   14003e624:	shl    BYTE PTR [rdi+0x0],1
   14003e627:	add    BYTE PTR [rsi],al
   14003e629:	push   0x45780000
   14003e62e:	add    eax,DWORD PTR [rax]
   14003e630:	adc    BYTE PTR [rax+0x0],ch
   14003e633:	add    BYTE PTR [rcx+0x68],cl
   14003e636:	add    BYTE PTR [rax],al
   14003e638:	pushf  
   14003e639:	add    DWORD PTR [rbx],0x685000
   14003e63f:	add    BYTE PTR [rbp+0x69],ch
   14003e642:	add    BYTE PTR [rax],al
   14003e644:	sub    BYTE PTR [rdx],bh
   14003e646:	add    eax,DWORD PTR [rax]
   14003e648:	sub    BYTE PTR [rcx+0x0],0x0
   14003e64c:	xor    BYTE PTR [rdx+0x0],ch
   14003e64f:	add    BYTE PTR [rax+0x6000033a],ch
   14003e655:	push   0x0
   14003e657:	add    BYTE PTR [rbx+0x2800006a],bh
   14003e65d:	cmp    eax,DWORD PTR [rbx]
   14003e65f:	add    al,dh
   14003e661:	push   0x0
   14003e663:	add    BYTE PTR [rcx+0x6d],bh
   14003e666:	add    BYTE PTR [rax],al
   14003e668:	xor    BYTE PTR [rbx],bh
   14003e66a:	add    eax,DWORD PTR [rax]
   14003e66c:	sub    BYTE PTR [rbp+0x0],0x0
   14003e670:	std    
   14003e671:	ins    DWORD PTR es:[rdi],dx
   14003e672:	add    BYTE PTR [rax],al
   14003e674:	fdivr  QWORD PTR [rbx]
   14003e676:	add    eax,DWORD PTR [rax]
   14003e678:	adc    BYTE PTR [rsi+0x0],ch
   14003e67b:	add    BYTE PTR [rdx],dh
   14003e67d:	outs   dx,BYTE PTR ds:[rsi]
   14003e67e:	add    BYTE PTR [rax],al
   14003e680:	in     al,0x3b
   14003e682:	add    eax,DWORD PTR [rax]
   14003e684:	rex outs dx,BYTE PTR ds:[rsi]
   14003e686:	add    BYTE PTR [rax],al
   14003e688:	imul   DWORD PTR [rsi+0x0]
   14003e68b:	add    ah,ch
   14003e68d:	cmp    eax,DWORD PTR [rbx]
   14003e68f:	add    BYTE PTR [rax],al
   14003e691:	outs   dx,DWORD PTR ds:[rsi]
   14003e692:	add    BYTE PTR [rax],al
   14003e694:	(bad)  
   14003e695:	outs   dx,DWORD PTR ds:[rsi]
   14003e696:	add    BYTE PTR [rax],al
   14003e698:	hlt    
   14003e699:	cmp    eax,DWORD PTR [rbx]
   14003e69b:	add    BYTE PTR [rax+0x6f],ah
   14003e69e:	add    BYTE PTR [rax],al
   14003e6a0:	jae    0x14003e711
   14003e6a2:	add    BYTE PTR [rax],al
   14003e6a4:	cld    
   14003e6a5:	cmp    eax,DWORD PTR [rbx]
   14003e6a7:	add    BYTE PTR [rax-0x18ffff91],al
   14003e6ad:	outs   dx,DWORD PTR ds:[rsi]
   14003e6ae:	add    BYTE PTR [rax],al
   14003e6b0:	add    al,0x3c
   14003e6b2:	add    eax,DWORD PTR [rax]
   14003e6b4:	and    BYTE PTR [rax+0x0],dh
   14003e6b7:	add    BYTE PTR [rcx],cl
   14003e6b9:	jb     0x14003e6bb
   14003e6bb:	add    BYTE PTR [rax+0x3c],al
   14003e6be:	add    eax,DWORD PTR [rax]
   14003e6c0:	adc    BYTE PTR [rdx+0x0],dh
   14003e6c3:	add    dh,ah
   14003e6c5:	jae    0x14003e6c7
   14003e6c7:	add    BYTE PTR [rax-0xffffcc4],ch
   14003e6cd:	jae    0x14003e6cf
   14003e6cf:	add    BYTE PTR [rbp+0x74],ah
   14003e6d2:	add    BYTE PTR [rax],al
   14003e6d4:	in     al,0x3c
   14003e6d6:	add    eax,DWORD PTR [rax]
   14003e6d8:	jo     0x14003e74e
   14003e6da:	add    BYTE PTR [rax],al
   14003e6dc:	xor    BYTE PTR [rbp+0x0],0x0
   14003e6e0:	sbb    al,0x3d
   14003e6e2:	add    eax,DWORD PTR [rax]
   14003e6e4:	nop
   14003e6e5:	jne    0x14003e6e7
   14003e6e7:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14003e6eb:	add    BYTE PTR [rbp+rdi*1+0x3],dh
   14003e6ef:	add    BYTE PTR [rax-0x58ffff8a],al
   14003e6f5:	jbe    0x14003e6f7
   14003e6f7:	add    al,dh
   14003e6f9:	cmp    DWORD PTR [rbx],eax
   14003e6fb:	add    BYTE PTR [rax+0xc000076],dh
   14003e701:	ja     0x14003e703
   14003e703:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003e707:	add    BYTE PTR [rax],dl
   14003e709:	ja     0x14003e70b
   14003e70b:	add    BYTE PTR [rcx+0x77],dh
   14003e70e:	add    BYTE PTR [rax],al
   14003e710:	sub    r8b,BYTE PTR [rbx]
   14003e713:	add    BYTE PTR [rax-0x5effff89],al
   14003e719:	ja     0x14003e71b
   14003e71b:	add    BYTE PTR [rax],dl
   14003e71d:	cmp    al,BYTE PTR [rbx]
   14003e71f:	add    BYTE PTR [rax-0x37ffff89],dh
   14003e725:	ja     0x14003e727
   14003e727:	add    BYTE PTR [rax+0x53],ah
   14003e72a:	add    eax,DWORD PTR [rax]
   14003e72c:	shl    BYTE PTR [rdi+0x0],1
   14003e72f:	add    al,ch
   14003e731:	ja     0x14003e733
   14003e733:	add    BYTE PTR [rax+0x53],ah
   14003e736:	add    eax,DWORD PTR [rax]
   14003e738:	lock ja 0x14003e73b
   14003e73b:	add    BYTE PTR [rsi-0x3fffff88],dl
   14003e741:	cmp    DWORD PTR [rbx],eax
   14003e743:	add    BYTE PTR [rax-0x32ffff88],ah
   14003e749:	js     0x14003e74b
   14003e74b:	add    BYTE PTR [rcx+rax*4+0x78d00003],dl
   14003e752:	add    BYTE PTR [rax],al
   14003e754:	(bad)  
   14003e755:	jns    0x14003e757
   14003e757:	add    al,dl
   14003e759:	xor    eax,0x79100003
   14003e75e:	add    BYTE PTR [rax],al
   14003e760:	push   rax
   14003e761:	jns    0x14003e763
   14003e763:	add    BYTE PTR [rax],bh
   14003e765:	pop    rsi
   14003e766:	add    eax,DWORD PTR [rax]
   14003e768:	push   rax
   14003e769:	jns    0x14003e76b
   14003e76b:	add    BYTE PTR [rsi+0x10000079],cl
   14003e771:	push   rbp
   14003e772:	add    eax,DWORD PTR [rax]
   14003e774:	nop
   14003e775:	jns    0x14003e777
   14003e777:	add    dh,al
   14003e779:	jns    0x14003e77b
   14003e77b:	add    BYTE PTR [rax+0x45],bh
   14003e77e:	add    eax,DWORD PTR [rax]
   14003e780:	sar    BYTE PTR [rcx+0x0],1
   14003e783:	add    BYTE PTR [rsi],al
   14003e785:	jp     0x14003e787
   14003e787:	add    BYTE PTR [rax+0x45],bh
   14003e78a:	add    eax,DWORD PTR [rax]
   14003e78c:	adc    BYTE PTR [rdx+0x0],bh
   14003e78f:	add    BYTE PTR [rdx],ah
   14003e791:	jp     0x14003e793
   14003e793:	add    ah,dl
   14003e795:	jge    0x14003e79a
   14003e797:	add    BYTE PTR [rax],dh
   14003e799:	jp     0x14003e79b
   14003e79b:	add    BYTE PTR [rbp+0x7a],bl
   14003e79e:	add    BYTE PTR [rax],al
   14003e7a0:	enter  0x329,0x0
   14003e7a4:	(bad)  
   14003e7a5:	jp     0x14003e7a7
   14003e7a7:	add    BYTE PTR [rdi+0x4400007a],al
   14003e7ad:	sub    al,BYTE PTR [rbx]
   14003e7af:	add    BYTE PTR [rax-0x48ffff86],dl
   14003e7b5:	jp     0x14003e7b7
   14003e7b7:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003e7bb:	add    al,ah
   14003e7bd:	jp     0x14003e7bf
   14003e7bf:	add    BYTE PTR [rbx+rdi*2],bl
   14003e7c2:	add    BYTE PTR [rax],al
   14003e7c4:	mov    eax,0x20000339
   14003e7c9:	jnp    0x14003e7cb
   14003e7cb:	add    BYTE PTR [rsi-0x17ffff85],cl
   14003e7d1:	cmp    DWORD PTR [rbx],eax
   14003e7d3:	add    BYTE PTR [rax-0x36ffff85],dl
   14003e7d9:	jnp    0x14003e7db
   14003e7db:	add    BYTE PTR [rax-0xffffcab],dl
   14003e7e1:	jnp    0x14003e7e3
   14003e7e3:	add    BYTE PTR [rsp+rdi*2+0x0],dl
   14003e7e7:	add    BYTE PTR [rax],dl
   14003e7e9:	push   rbp
   14003e7ea:	add    eax,DWORD PTR [rax]
   14003e7ec:	(bad)  
   14003e7ed:	jl     0x14003e7ef
   14003e7ef:	add    BYTE PTR [rdx+0x6000007c],dl
   14003e7f5:	push   rbx
   14003e7f6:	add    eax,DWORD PTR [rax]
   14003e7f8:	movabs al,ds:0xac00007d0700007c
   14003e801:	cmp    eax,0x7d100003
   14003e806:	add    BYTE PTR [rax],al
   14003e808:	push   rbx
   14003e809:	jge    0x14003e80b
   14003e80b:	add    ah,ah
   14003e80d:	cmp    eax,0x7d600003
   14003e812:	add    BYTE PTR [rax],al
   14003e814:	mov    ebx,0xc00007d
   14003e819:	add    eax,DWORD PTR ds:[rax]
   14003e81c:	loopne 0x14003e89b
   14003e81e:	add    BYTE PTR [rax],al
   14003e820:	repz jge 0x14003e823
   14003e823:	add    BYTE PTR [rsi+rdi*1],dl
   14003e826:	add    eax,DWORD PTR [rax]
   14003e828:	add    BYTE PTR [rsi+0x0],bh
   14003e82b:	add    BYTE PTR [rdi+0x7e],ah
   14003e82e:	add    BYTE PTR [rax],al
   14003e830:	sbb    al,0x3e
   14003e832:	add    eax,DWORD PTR [rax]
   14003e834:	jo     0x14003e8b4
   14003e836:	add    BYTE PTR [rax],al
   14003e838:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e839:	jle    0x14003e83b
   14003e83b:	add    BYTE PTR [rax+0x45],bh
   14003e83e:	add    eax,DWORD PTR [rax]
   14003e840:	mov    al,0x7e
   14003e842:	add    BYTE PTR [rax],al
   14003e844:	cmp    eax,0x5800007f
   14003e849:	add    eax,DWORD PTR ds:[rax]
   14003e84c:	push   rax
   14003e84d:	jg     0x14003e84f
   14003e84f:	add    BYTE PTR [rsi-0x6fffff81],ah
   14003e855:	add    eax,DWORD PTR ds:[rax]
   14003e858:	mov    al,0x7f
   14003e85a:	add    BYTE PTR [rax],al
   14003e85c:	out    0x80,al
   14003e85e:	add    BYTE PTR [rax],al
   14003e860:	mov    eax,0xf000033e
   14003e865:	add    BYTE PTR [rax],0x0
   14003e868:	mov    cl,0x81
   14003e86a:	add    BYTE PTR [rax],al
   14003e86c:	xor    BYTE PTR [rdi],bh
   14003e86e:	add    eax,DWORD PTR [rax]
   14003e870:	rol    BYTE PTR [rcx-0x7e240000],0x0
   14003e877:	add    BYTE PTR [rax+0x3f],ch
   14003e87a:	add    eax,DWORD PTR [rax]
   14003e87c:	lock add DWORD PTR [rax],0x826400
   14003e883:	add    BYTE PTR [rax+0x3f],dh
   14003e886:	add    eax,DWORD PTR [rax]
   14003e888:	nop
   14003e889:	(bad)  
   14003e88a:	add    BYTE PTR [rax],al
   14003e88c:	rex.W test BYTE PTR [rax],al
   14003e88f:	add    BYTE PTR [rax+0x3f],bh
   14003e892:	add    eax,DWORD PTR [rax]
   14003e894:	(bad)  
   14003e895:	test   BYTE PTR [rax],al
   14003e897:	add    BYTE PTR [rbx-0x7c],dh
   14003e89a:	add    BYTE PTR [rax],al
   14003e89c:	lock (bad) 
   14003e89e:	add    eax,DWORD PTR [rax]
   14003e8a0:	add    BYTE PTR [rax+rax*1+0x84e700],0x0
   14003e8a8:	clc    
   14003e8a9:	(bad)  
   14003e8aa:	add    eax,DWORD PTR [rax]
   14003e8ac:	adc    BYTE PTR [rbp-0x7a990000],al
   14003e8b2:	add    BYTE PTR [rax],al
   14003e8b4:	sub    r8b,BYTE PTR [rbx]
   14003e8b7:	add    BYTE PTR [rax-0x7b],dh
   14003e8ba:	add    BYTE PTR [rax],al
   14003e8bc:	mov    DWORD PTR [rbp+0x53600000],eax
   14003e8c2:	add    eax,DWORD PTR [rax]
   14003e8c4:	nop
   14003e8c5:	test   DWORD PTR [rax],eax
   14003e8c7:	add    dh,al
   14003e8c9:	test   DWORD PTR [rax],eax
   14003e8cb:	add    BYTE PTR [rax+0x45],bh
   14003e8ce:	add    eax,DWORD PTR [rax]
   14003e8d0:	rol    BYTE PTR [rbp-0x79cc0000],1
   14003e8d6:	add    BYTE PTR [rax],al
   14003e8d8:	cmp    al,0x40
   14003e8da:	add    eax,DWORD PTR [rax]
   14003e8dc:	xchg   BYTE PTR [rax],al
   14003e8df:	add    bh,bl
   14003e8e1:	xchg   BYTE PTR [rax],al
   14003e8e3:	add    BYTE PTR [rax+rax*2+0x3],al
   14003e8e7:	add    al,dh
   14003e8e9:	xchg   BYTE PTR [rax],al
   14003e8eb:	add    BYTE PTR [rsi],dh
   14003e8ed:	mov    BYTE PTR [rax],al
   14003e8ef:	add    BYTE PTR [rax+rax*2+0x3],bh
   14003e8f3:	add    BYTE PTR [rax-0x78],al
   14003e8f6:	add    BYTE PTR [rax],al
   14003e8f8:	movabs ds:0xb000034090000088,eax
   14003e901:	mov    BYTE PTR [rax],al
   14003e903:	add    BYTE PTR [rdx],cl
   14003e905:	mov    DWORD PTR [rax],eax
   14003e907:	add    BYTE PTR [rax+0x10000340],bl
   14003e90d:	mov    DWORD PTR [rax],eax
   14003e90f:	add    BYTE PTR [rbx-0x77],cl
   14003e912:	add    BYTE PTR [rax],al
   14003e914:	movabs al,ds:0xb800008960000340
   14003e91d:	mov    al,BYTE PTR [rax]
   14003e91f:	add    BYTE PTR [rax-0x3ffffcc0],ch
   14003e925:	mov    al,BYTE PTR [rax]
   14003e927:	add    BYTE PTR [rax-0x43ffff73],al
   14003e92d:	rex add eax,DWORD PTR [rax]
   14003e930:	nop
   14003e931:	lea    eax,[rax]
   14003e933:	add    dl,cl
   14003e935:	nop
   14003e936:	add    BYTE PTR [rax],al
   14003e938:	int3   
   14003e939:	rex add eax,DWORD PTR [rax]
   14003e93c:	rcl    BYTE PTR [rax-0x6ef20000],1
   14003e942:	add    BYTE PTR [rax],al
   14003e944:	adc    BYTE PTR [rcx+0x3],al
   14003e947:	add    BYTE PTR [rax],ah
   14003e949:	xchg   ecx,eax
   14003e94a:	add    BYTE PTR [rax],al
   14003e94c:	ficom  WORD PTR [rbx+0x41180000]
   14003e952:	add    eax,DWORD PTR [rax]
   14003e954:	lock xchg ebx,eax
   14003e956:	add    BYTE PTR [rax],al
   14003e958:	repz xchg esp,eax
   14003e95a:	add    BYTE PTR [rax],al
   14003e95c:	pop    rsp
   14003e95d:	add    eax,DWORD PTR [r8]
   14003e960:	add    BYTE PTR [rbp-0x68ea0000],dl
   14003e966:	add    BYTE PTR [rax],al
   14003e968:	xchg   esp,eax
   14003e969:	add    eax,DWORD PTR [r8]
   14003e96c:	and    BYTE PTR [rdi-0x689b0000],dl
   14003e972:	add    BYTE PTR [rax],al
   14003e974:	clc    
   14003e975:	add    eax,DWORD PTR [r8]
   14003e978:	jo     0x14003e911
   14003e97a:	add    BYTE PTR [rax],al
   14003e97c:	(bad)  
   14003e97d:	cwde   
   14003e97e:	add    BYTE PTR [rax],al
   14003e980:	add    BYTE PTR [rdx+0x3],al
   14003e983:	add    BYTE PTR [rax-0x68],al
   14003e986:	add    BYTE PTR [rax],al
   14003e988:	(bad)  
   14003e989:	cwde   
   14003e98a:	add    BYTE PTR [rax],al
   14003e98c:	cmp    BYTE PTR [rdx+0x3],al
   14003e98f:	add    BYTE PTR [rax-0x23ffff68],dl
   14003e995:	cdq    
   14003e996:	add    BYTE PTR [rax],al
   14003e998:	rex
   14003e999:	rex.X add eax,DWORD PTR [rax]
   14003e99c:	lock cdq 
   14003e99e:	add    BYTE PTR [rax],al
   14003e9a0:	sbb    bl,BYTE PTR [rbp+0x42d80000]
   14003e9a6:	add    eax,DWORD PTR [rax]
   14003e9a8:	and    BYTE PTR [rbp-0x62580000],bl
   14003e9ae:	add    BYTE PTR [rax],al
   14003e9b0:	xor    al,0x40
   14003e9b2:	add    eax,DWORD PTR [rax]
   14003e9b4:	mov    al,0x9d
   14003e9b6:	add    BYTE PTR [rax],al
   14003e9b8:	(bad)  
   14003e9b9:	sahf   
   14003e9ba:	add    BYTE PTR [rax],al
   14003e9bc:	call   0x1a003ed03
   14003e9c1:	sahf   
   14003e9c2:	add    BYTE PTR [rax],al
   14003e9c4:	xchg   DWORD PTR [rsi+0x42f00000],ebx
   14003e9ca:	add    eax,DWORD PTR [rax]
   14003e9cc:	nop
   14003e9cd:	sahf   
   14003e9ce:	add    BYTE PTR [rax],al
   14003e9d0:	call   0x13803ea73
   14003e9d5:	rex.X add eax,DWORD PTR [rax]
   14003e9d8:	and    BYTE PTR [rdi-0x60660000],bl
   14003e9de:	add    BYTE PTR [rax],al
   14003e9e0:	add    BYTE PTR [rbx+0x3],al
   14003e9e3:	add    BYTE PTR [rax+0x4400009f],ah
   14003e9e9:	movabs al,ds:0xa050000343080000
   14003e9f2:	add    BYTE PTR [rax],al
   14003e9f4:	pop    rsp
   14003e9f5:	movabs eax,ds:0xa170000343100000
   14003e9fe:	add    BYTE PTR [rax],al
   14003ea00:	clc    
   14003ea01:	movabs eax,ds:0xa200000343180000
   14003ea0a:	add    BYTE PTR [rax],al
   14003ea0c:	push   rdi
   14003ea0d:	movabs ds:0xa260000343200000,al
   14003ea16:	add    BYTE PTR [rax],al
   14003ea18:	mov    bl,0xa2
   14003ea1a:	add    BYTE PTR [rax],al
   14003ea1c:	sub    BYTE PTR [rbx+0x3],al
   14003ea1f:	add    al,al
   14003ea21:	movabs ds:0x43300000a3d90000,al
   14003ea2a:	add    eax,DWORD PTR [rax]
   14003ea2c:	loopne 0x14003e9d1
   14003ea2e:	add    BYTE PTR [rax],al
   14003ea30:	in     eax,0xa4
   14003ea32:	add    BYTE PTR [rax],al
   14003ea34:	cmp    BYTE PTR [rbx+0x3],al
   14003ea37:	add    al,dh
   14003ea39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003ea3a:	add    BYTE PTR [rax],al
   14003ea3c:	adc    BYTE PTR [rbp+0x43400000],ah
   14003ea42:	add    eax,DWORD PTR [rax]
   14003ea44:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ea46:	add    BYTE PTR [rax],al
   14003ea48:	pop    rbp
   14003ea49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ea4a:	add    BYTE PTR [rax],al
   14003ea4c:	rex.W
   14003ea4d:	rex.XB add eax,DWORD PTR [r8]
   14003ea50:	jo     0x14003e9f7
   14003ea52:	add    BYTE PTR [rax],al
   14003ea54:	lahf   
   14003ea55:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ea56:	add    BYTE PTR [rax],al
   14003ea58:	push   rax
   14003ea59:	rex.XB add eax,DWORD PTR [r8]
   14003ea5c:	mov    al,0xa5
   14003ea5e:	add    BYTE PTR [rax],al
   14003ea60:	(bad)  
   14003ea61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ea62:	add    BYTE PTR [rax],al
   14003ea64:	pop    rax
   14003ea65:	rex.XB add eax,DWORD PTR [r8]
   14003ea68:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ea6a:	add    BYTE PTR [rax],al
   14003ea6c:	mov    esp,0x600000a6
   14003ea71:	rex.XB add eax,DWORD PTR [r8]
   14003ea74:	shl    BYTE PTR [rsi-0x58f50000],1
   14003ea7a:	add    BYTE PTR [rax],al
   14003ea7c:	push   0x20000343
   14003ea81:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003ea82:	add    BYTE PTR [rax],al
   14003ea84:	cmp    eax,0x700000a7
   14003ea89:	rex.XB add eax,DWORD PTR [r8]
   14003ea8c:	push   rax
   14003ea8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003ea8e:	add    BYTE PTR [rax],al
   14003ea90:	and    DWORD PTR [rdi+0x43780000],0x3
   14003ea97:	add    BYTE PTR [rax-0x3cffff59],dl
   14003ea9d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003ea9e:	add    BYTE PTR [rax],al
   14003eaa0:	add    BYTE PTR [rbx+0x3],0x0
   14003eaa4:	shl    BYTE PTR [rdi-0x572d0000],1
   14003eaaa:	add    BYTE PTR [rax],al
   14003eaac:	mov    BYTE PTR [rbx+0x3],al
   14003eaaf:	add    al,ah
   14003eab1:	test   al,0x0
   14003eab3:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14003eab7:	add    BYTE PTR [rax+0x70000343],dl
   14003eabd:	test   eax,0xa9920000
   14003eac2:	add    BYTE PTR [rax],al
   14003eac4:	cwde   
   14003eac5:	rex.XB add eax,DWORD PTR [r8]
   14003eac8:	movabs al,ds:0xa00000a9bd0000a9
   14003ead1:	rex.XB add eax,DWORD PTR [r8]
   14003ead4:	shr    BYTE PTR [rcx-0x55d90000],1
   14003eada:	add    BYTE PTR [rax],al
   14003eadc:	test   al,0x43
   14003eade:	add    eax,DWORD PTR [rax]
   14003eae0:	push   rax
   14003eae1:	stos   BYTE PTR es:[rdi],al
   14003eae2:	add    BYTE PTR [rax],al
   14003eae4:	xchg   esp,eax
   14003eae5:	stos   BYTE PTR es:[rdi],al
   14003eae6:	add    BYTE PTR [rax],al
   14003eae8:	mov    al,0x43
   14003eaea:	add    eax,DWORD PTR [rax]
   14003eaec:	movabs al,ds:0xb80000aafa0000aa
   14003eaf5:	rex.XB add eax,DWORD PTR [r8]
   14003eaf8:	add    BYTE PTR [rbx-0x54a40000],ch
   14003eafe:	add    BYTE PTR [rax],al
   14003eb00:	rol    BYTE PTR [rbx+0x3],0x0
   14003eb04:	jo     0x14003eab1
   14003eb06:	add    BYTE PTR [rax],al
   14003eb08:	jmp    0x14003eab5
   14003eb0a:	add    BYTE PTR [rax],al
   14003eb0c:	enter  0x343,0x0
   14003eb10:	add    BYTE PTR [rax+rax*1+0xac7b00],ch
   14003eb17:	add    al,dl
   14003eb19:	rex.XB add eax,DWORD PTR [r8]
   14003eb1c:	nop
   14003eb1d:	lods   al,BYTE PTR ds:[rsi]
   14003eb1e:	add    BYTE PTR [rax],al
   14003eb20:	(bad)  
   14003eb21:	lods   al,BYTE PTR ds:[rsi]
   14003eb22:	add    BYTE PTR [rax],al
   14003eb24:	fadd   DWORD PTR [rbx+0x3]
   14003eb27:	add    al,dh
   14003eb29:	lods   al,BYTE PTR ds:[rsi]
   14003eb2a:	add    BYTE PTR [rax],al
   14003eb2c:	(bad)  
   14003eb2d:	lods   eax,DWORD PTR ds:[rsi]
   14003eb2e:	add    BYTE PTR [rax],al
   14003eb30:	loopne 0x14003eb75
   14003eb32:	add    eax,DWORD PTR [rax]
   14003eb34:	and    BYTE PTR [rbp-0x52a20000],ch
   14003eb3a:	add    BYTE PTR [rax],al
   14003eb3c:	call   0x1b003ee84
   14003eb41:	lods   eax,DWORD PTR ds:[rsi]
   14003eb42:	add    BYTE PTR [rax],al
   14003eb44:	xchg   edi,eax
   14003eb45:	lods   eax,DWORD PTR ds:[rsi]
   14003eb46:	add    BYTE PTR [rax],al
   14003eb48:	lock rex.XB add eax,DWORD PTR [r8]
   14003eb4c:	movabs al,ds:0xf80000ae300000ad
   14003eb55:	rex.XB add eax,DWORD PTR [r8]
   14003eb58:	scas   al,BYTE PTR es:[rdi]
   14003eb5a:	add    BYTE PTR [rax],al
   14003eb5c:	lock scas al,BYTE PTR es:[rdi]
   14003eb5e:	add    BYTE PTR [rax],al
   14003eb60:	push   rax
   14003eb61:	add    r8d,DWORD PTR [rax]
   14003eb64:	add    BYTE PTR [rdi-0x4db50000],ch
   14003eb6a:	add    BYTE PTR [rax],al
   14003eb6c:	cwde   
   14003eb6d:	add    r8d,DWORD PTR [rax]
   14003eb70:	(bad)  
   14003eb71:	mov    dl,0x0
   14003eb73:	add    BYTE PTR [rcx-0x4d],dh
   14003eb76:	add    BYTE PTR [rax],al
   14003eb78:	movabs al,ds:0xe00000b380000344
   14003eb81:	mov    bl,0x0
   14003eb83:	add    al,ch
   14003eb85:	add    r8d,DWORD PTR [rax]
   14003eb88:	lock mov bl,0x0
   14003eb8b:	add    BYTE PTR [rdi],al
   14003eb8d:	mov    ch,0x0
   14003eb8f:	add    BYTE PTR [rax],bl
   14003eb91:	add    r8d,DWORD PTR [r8]
   14003eb94:	adc    BYTE PTR [rbp-0x4a330000],dh
   14003eb9a:	add    BYTE PTR [rax],al
   14003eb9c:	(bad)  
   14003eb9d:	add    r8d,DWORD PTR [r8]
   14003eba0:	loopne 0x14003eb57
   14003eba2:	add    BYTE PTR [rax],al
   14003eba4:	pop    rsp
   14003eba5:	mov    bh,0x0
   14003eba7:	add    BYTE PTR [rax+0x45],ch
   14003ebaa:	add    eax,DWORD PTR [rax]
   14003ebac:	jo     0x14003eb65
   14003ebae:	add    BYTE PTR [rax],al
   14003ebb0:	out    0xb7,al
   14003ebb2:	add    BYTE PTR [rax],al
   14003ebb4:	jo     0x14003ebfb
   14003ebb6:	add    eax,DWORD PTR [rax]
   14003ebb8:	lock mov bh,0x0
   14003ebbb:	add    BYTE PTR [rsi],ah
   14003ebbd:	mov    eax,0x45780000
   14003ebc2:	add    eax,DWORD PTR [rax]
   14003ebc4:	xor    BYTE PTR [rax-0x47ad0000],bh
   14003ebca:	add    BYTE PTR [rax],al
   14003ebcc:	sub    r8b,BYTE PTR [rbx]
   14003ebcf:	add    BYTE PTR [rax-0x48],ah
   14003ebd2:	add    BYTE PTR [rax],al
   14003ebd4:	cmp    DWORD PTR [rax+0x2a440000],0x3
   14003ebdb:	add    BYTE PTR [rax-0x4cffff48],dl
   14003ebe1:	mov    eax,0x2a440000
   14003ebe6:	add    eax,DWORD PTR [rax]
   14003ebe8:	sar    BYTE PTR [rax-0x46d70000],0x0
   14003ebef:	add    BYTE PTR [rax+0x30000345],al
   14003ebf5:	mov    ecx,0xb9990000
   14003ebfa:	add    BYTE PTR [rax],al
   14003ebfc:	mov    BYTE PTR [rbp+0x3],al
   14003ebff:	add    BYTE PTR [rax-0x3effff47],ah
   14003ec05:	mov    edx,0x45900000
   14003ec0a:	add    eax,DWORD PTR [rax]
   14003ec0c:	sar    BYTE PTR [rdx-0x44c40000],1
   14003ec12:	add    BYTE PTR [rax],al
   14003ec14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003ec15:	add    r8d,DWORD PTR [r8]
   14003ec18:	push   rax
   14003ec19:	mov    ebx,0xbba20000
   14003ec1e:	add    BYTE PTR [rax],al
   14003ec20:	lods   al,BYTE PTR ds:[rsi]
   14003ec21:	add    r8d,DWORD PTR [r8]
   14003ec24:	mov    al,0xbb
   14003ec26:	add    BYTE PTR [rax],al
   14003ec28:	jg     0x14003ebe6
   14003ec2a:	add    BYTE PTR [rax],al
   14003ec2c:	mov    ah,0x45
   14003ec2e:	add    eax,DWORD PTR [rax]
   14003ec30:	nop
   14003ec31:	mov    esp,0xbcd80000
   14003ec36:	add    BYTE PTR [rax],al
   14003ec38:	mov    esp,0xe0000345
   14003ec3d:	mov    esp,0xbd280000
   14003ec42:	add    BYTE PTR [rax],al
   14003ec44:	(bad)  
   14003ec45:	add    r8d,DWORD PTR [r8]
   14003ec48:	xor    BYTE PTR [rbp-0x42b70000],bh
   14003ec4e:	add    BYTE PTR [rax],al
   14003ec50:	int3   
   14003ec51:	add    r8d,DWORD PTR [r8]
   14003ec54:	push   rax
   14003ec55:	mov    ebp,0xbfa80000
   14003ec5a:	add    BYTE PTR [rax],al
   14003ec5c:	(bad)  
   14003ec5d:	add    r8d,DWORD PTR [r8]
   14003ec60:	mov    al,0xbf
   14003ec62:	add    BYTE PTR [rax],al
   14003ec64:	pop    rcx
   14003ec65:	rol    BYTE PTR [rax],0x0
   14003ec68:	fadd   QWORD PTR [rbp+0x3]
   14003ec6b:	add    BYTE PTR [rax-0x40],ah
   14003ec6e:	add    BYTE PTR [rax],al
   14003ec70:	sub    eax,0xec0000c1
   14003ec75:	add    r8d,DWORD PTR [r8]
   14003ec78:	rex rol DWORD PTR [rax],0x0
   14003ec7c:	mov    ah,0xc1
   14003ec7e:	add    BYTE PTR [rax],al
   14003ec80:	and    al,0x46
   14003ec82:	add    eax,DWORD PTR [rax]
   14003ec84:	rol    cl,0x0
   14003ec87:	add    BYTE PTR [rbx],dh
   14003ec89:	(bad)  
   14003ec8a:	add    BYTE PTR [rax],al
   14003ec8c:	pop    rsp
   14003ec8d:	rex.RX add r8d,DWORD PTR [rax]
   14003ec90:	rex (bad) 
   14003ec92:	add    BYTE PTR [rax],al
   14003ec94:	mov    eax,ebp
   14003ec96:	add    BYTE PTR [rax],al
   14003ec98:	jo     0x14003ece0
   14003ec9a:	add    eax,DWORD PTR [rax]
   14003ec9c:	movabs al,ds:0xb00000c84c0000c5
   14003eca5:	rex.RX add r8d,DWORD PTR [rax]
   14003eca8:	(bad)  
   14003eca9:	enter  0x0,0xb3
   14003ecad:	leave  
   14003ecae:	add    BYTE PTR [rax],al
   14003ecb0:	lock rex.RX add r8d,DWORD PTR [rax]
   14003ecb4:	ror    cl,0x0
   14003ecb7:	add    BYTE PTR [rdi+0x480000ca],dh
   14003ecbd:	rex.RXB add r8d,DWORD PTR [r8]
   14003ecc0:	ror    dl,0x0
   14003ecc3:	add    BYTE PTR [rbx-0x4fffff35],bl
   14003ecc9:	rex.RXB add r8d,DWORD PTR [r8]
   14003eccc:	mov    al,0xcb
   14003ecce:	add    BYTE PTR [rax],al
   14003ecd0:	pop    rbx
   14003ecd1:	int3   
   14003ecd2:	add    BYTE PTR [rax],al
   14003ecd4:	mov    eax,0x70000347
   14003ecd9:	int3   
   14003ecda:	add    BYTE PTR [rax],al
   14003ecdc:	addr32 int 0x0
   14003ecdf:	add    al,al
   14003ece1:	rex.RXB add r8d,DWORD PTR [r8]
   14003ece4:	jo     0x14003ecb3
   14003ece6:	add    BYTE PTR [rax],al
   14003ece8:	sti    
   14003ece9:	int    0x0
   14003eceb:	add    BYTE PTR [rax],cl
   14003eced:	add    rax,QWORD PTR [rax]
   14003ecf0:	adc    dh,cl
   14003ecf2:	add    BYTE PTR [rax],al
   14003ecf4:	xlat   BYTE PTR ds:[rbx]
   14003ecf5:	(bad)  
   14003ecf6:	add    BYTE PTR [rax],al
   14003ecf8:	adc    BYTE PTR [rax+0x3],cl
   14003ecfb:	add    al,ah
   14003ecfd:	(bad)  
   14003ecfe:	add    BYTE PTR [rax],al
   14003ed00:	(bad)  
   14003ed01:	iret   
   14003ed02:	add    BYTE PTR [rax],al
   14003ed04:	sbb    BYTE PTR [rax+0x3],cl
   14003ed07:	add    BYTE PTR [rax-0x31],dh
   14003ed0a:	add    BYTE PTR [rax],al
   14003ed0c:	clc    
   14003ed0d:	iret   
   14003ed0e:	add    BYTE PTR [rax],al
   14003ed10:	and    BYTE PTR [rax+0x3],cl
   14003ed13:	add    BYTE PTR [rax],al
   14003ed15:	rol    BYTE PTR [rax],1
   14003ed17:	add    al,bl
   14003ed19:	rol    BYTE PTR [rax],1
   14003ed1b:	add    BYTE PTR [rax],ch
   14003ed1d:	add    rax,QWORD PTR [rax]
   14003ed20:	loopne 0x14003ecf2
   14003ed22:	add    BYTE PTR [rax],al
   14003ed24:	(bad)  
   14003ed26:	add    BYTE PTR [rax],al
   14003ed28:	xor    BYTE PTR [rax+0x3],cl
   14003ed2b:	add    BYTE PTR [rax-0x2f],dh
   14003ed2e:	add    BYTE PTR [rax],al
   14003ed30:	fcmovbe st,st(3)
   14003ed32:	add    BYTE PTR [rax],al
   14003ed34:	cmp    BYTE PTR [rax+0x3],cl
   14003ed37:	add    al,ah
   14003ed39:	rol    DWORD PTR [rax],cl
   14003ed3b:	add    BYTE PTR [rax-0x2a],dl
   14003ed3e:	add    BYTE PTR [rax],al
   14003ed40:	ror    BYTE PTR [rax+0x3],1
   14003ed43:	add    BYTE PTR [rax-0x2a],ah
   14003ed46:	add    BYTE PTR [rax],al
   14003ed48:	js     0x14003ed21
   14003ed4a:	add    BYTE PTR [rax],al
   14003ed4c:	or     al,0x49
   14003ed4e:	add    eax,DWORD PTR [rax]
   14003ed50:	adc    bh,0x0
   14003ed53:	add    BYTE PTR [rax+0x780000d8],bl
   14003ed59:	add    rax,QWORD PTR [r8]
   14003ed5c:	movabs al,ds:0xb40000da140000d8
   14003ed65:	add    rax,QWORD PTR [r8]
   14003ed68:	and    dl,bl
   14003ed6a:	add    BYTE PTR [rax],al
   14003ed6c:	ins    BYTE PTR es:[rdi],dx
   14003ed6d:	fild   DWORD PTR [rax]
   14003ed6f:	add    BYTE PTR [rax],dl
   14003ed71:	rex.WX add rax,QWORD PTR [rax]
   14003ed74:	sbb    bl,0x0
   14003ed77:	add    BYTE PTR [rdi],ch
   14003ed79:	fiadd  WORD PTR [rax]
   14003ed7b:	add    BYTE PTR [rax+0x4a],cl
   14003ed7e:	add    eax,DWORD PTR [rax]
   14003ed80:	rex fiadd WORD PTR [rax]
   14003ed83:	add    BYTE PTR [rcx-0x7fffff21],bl
   14003ed89:	rex.WX add rax,QWORD PTR [rax]
   14003ed8c:	movabs al,ds:0xf80000e2a90000df
   14003ed95:	rex.WX add rax,QWORD PTR [rax]
   14003ed98:	mov    al,0xe2
   14003ed9a:	add    BYTE PTR [rax],al
   14003ed9c:	sbb    eax,0x240000e4
   14003eda1:	add    r8,QWORD PTR [rax]
   14003eda4:	xor    ah,ah
   14003eda6:	add    BYTE PTR [rax],al
   14003eda8:	sbb    eax,0xec0000e5
   14003edad:	add    r8,QWORD PTR [rax]
   14003edb0:	xor    ch,ah
   14003edb2:	add    BYTE PTR [rax],al
   14003edb4:	mul    ebp
   14003edb6:	add    BYTE PTR [rax],al
   14003edb8:	hlt    
   14003edb9:	add    r8,QWORD PTR [rax]
   14003edbc:	add    dh,ah
   14003edbe:	add    BYTE PTR [rax],al
   14003edc0:	xlat   BYTE PTR ds:[rbx]
   14003edc1:	call   0x18d07edc6
   14003edc6:	add    eax,DWORD PTR [rax]
   14003edc8:	loopne 0x14003edb2
   14003edca:	add    BYTE PTR [rax],al
   14003edcc:	jmp    0x14003edb8
   14003edce:	add    BYTE PTR [rax],al
   14003edd0:	adc    al,0x4d
   14003edd2:	add    eax,DWORD PTR [rax]
   14003edd4:	add    bl,ch
   14003edd6:	add    BYTE PTR [rax],al
   14003edd8:	icebp  
   14003edd9:	icebp  
   14003edda:	add    BYTE PTR [rax],al
   14003eddc:	push   rax
   14003eddd:	add    r8,QWORD PTR [r8]
   14003ede0:	add    dl,dh
   14003ede2:	add    BYTE PTR [rax],al
   14003ede4:	rex.W std 
   14003ede6:	add    BYTE PTR [rax],al
   14003ede8:	fmul   DWORD PTR [rsi+0x3]
   14003edeb:	add    BYTE PTR [rax-0x3],dl
   14003edee:	add    BYTE PTR [rax],al
   14003edf0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003edf1:	add    BYTE PTR [rcx],al
   14003edf3:	add    al,dl
   14003edf5:	push   rax
   14003edf6:	add    eax,DWORD PTR [rax]
   14003edf8:	mov    al,0x0
   14003edfa:	add    DWORD PTR [rax],eax
   14003edfc:	jns    0x14003edff
   14003edfe:	add    DWORD PTR [rax],eax
   14003ee00:	rcl    BYTE PTR [rcx+0x3],1
   14003ee03:	add    BYTE PTR [rax-0x18fffeff],al
   14003ee09:	add    eax,DWORD PTR [rcx]
   14003ee0b:	add    ah,ah
   14003ee0d:	push   rcx
   14003ee0e:	add    eax,DWORD PTR [rax]
   14003ee10:	add    BYTE PTR [rcx+rax*1],al
   14003ee13:	add    BYTE PTR [rsi+0x48000104],bl
   14003ee19:	push   rdx
   14003ee1a:	add    eax,DWORD PTR [rax]
   14003ee1c:	movabs al,ds:0x2000010512000104
   14003ee25:	pop    rax
   14003ee26:	add    eax,DWORD PTR [rax]
   14003ee28:	and    BYTE PTR [rip+0x54a0001],al        # 0x1454dee2f
   14003ee2e:	add    DWORD PTR [rax],eax
   14003ee30:	sub    r8b,BYTE PTR [rbx]
   14003ee33:	add    BYTE PTR [rax+0x5],dl
   14003ee36:	add    DWORD PTR [rax],eax
   14003ee38:	movabs eax,ds:0xb000032a44000105
   14003ee41:	add    eax,0x5f70001
   14003ee46:	add    DWORD PTR [rax],eax
   14003ee48:	nop
   14003ee49:	push   rbp
   14003ee4a:	add    eax,DWORD PTR [rax]
   14003ee4c:	add    BYTE PTR [rsi],al
   14003ee4e:	add    DWORD PTR [rax],eax
   14003ee50:	pop    rax
   14003ee51:	(bad)  
   14003ee52:	add    DWORD PTR [rax],eax
   14003ee54:	rex pop rax
   14003ee56:	add    eax,DWORD PTR [rax]
   14003ee58:	(bad)  
   14003ee59:	(bad)  
   14003ee5a:	add    DWORD PTR [rax],eax
   14003ee5c:	mov    ebp,0x38000106
   14003ee61:	pop    rsi
   14003ee62:	add    eax,DWORD PTR [rax]
   14003ee64:	rol    BYTE PTR [rsi],0x1
   14003ee67:	add    BYTE PTR [rip+0x38000107],bl        # 0x17803ef74
   14003ee6d:	pop    rsi
   14003ee6e:	add    eax,DWORD PTR [rax]
   14003ee70:	and    BYTE PTR [rdi],al
   14003ee72:	add    DWORD PTR [rax],eax
   14003ee74:	add    ecx,DWORD PTR [rax]
   14003ee76:	add    DWORD PTR [rax],eax
   14003ee78:	adc    BYTE PTR [rsi+0x3],dl
   14003ee7b:	add    BYTE PTR [rax],dl
   14003ee7d:	or     BYTE PTR [rcx],al
   14003ee7f:	add    BYTE PTR [rax+rcx*1+0x55980001],ah
   14003ee86:	add    eax,DWORD PTR [rax]
   14003ee88:	ror    BYTE PTR [rax],1
   14003ee8a:	add    DWORD PTR [rax],eax
   14003ee8c:	push   0x9
   14003ee8e:	add    DWORD PTR [rax],eax
   14003ee90:	sbb    al,0x7e
   14003ee92:	add    eax,DWORD PTR [rax]
   14003ee94:	jo     0x14003ee9f
   14003ee96:	add    DWORD PTR [rax],eax
   14003ee98:	sahf   
   14003ee99:	or     eax,0x57000001
   14003ee9e:	add    eax,DWORD PTR [rax]
   14003eea0:	movabs al,ds:0x8800011b2300010d
   14003eea9:	push   rsi
   14003eeaa:	add    eax,DWORD PTR [rax]
   14003eeac:	xor    BYTE PTR [rbx],bl
   14003eeae:	add    DWORD PTR [rax],eax
   14003eeb0:	sbb    ebx,DWORD PTR [rdi]
   14003eeb2:	add    DWORD PTR [rax],eax
   14003eeb4:	or     BYTE PTR [rdi+0x3],dl
   14003eeb7:	add    BYTE PTR [rax],ah
   14003eeb9:	(bad)  
   14003eeba:	add    DWORD PTR [rax],eax
   14003eebc:	push   rsp
   14003eebd:	(bad)  
   14003eebe:	add    DWORD PTR [rax],eax
   14003eec0:	nop
   14003eec1:	push   rbp
   14003eec2:	add    eax,DWORD PTR [rax]
   14003eec4:	(bad)  
   14003eec5:	(bad)  
   14003eec6:	add    DWORD PTR [rax],eax
   14003eec8:	rcr    DWORD PTR [rdi],1
   14003eeca:	add    DWORD PTR [rax],eax
   14003eecc:	lock push rdi
   14003eece:	add    eax,DWORD PTR [rax]
   14003eed0:	loopne 0x14003eef1
   14003eed2:	add    DWORD PTR [rax],eax
   14003eed4:	adc    al,0x20
   14003eed6:	add    DWORD PTR [rax],eax
   14003eed8:	nop
   14003eed9:	push   rbp
   14003eeda:	add    eax,DWORD PTR [rax]
   14003eedc:	and    BYTE PTR [rax],ah
   14003eede:	add    DWORD PTR [rax],eax
   14003eee0:	push   rsp
   14003eee1:	and    BYTE PTR [rcx],al
   14003eee3:	add    BYTE PTR [rax+0x60000355],dl
   14003eee9:	and    BYTE PTR [rcx],al
   14003eeeb:	add    cl,dl
   14003eeed:	and    BYTE PTR [rcx],al
   14003eeef:	add    BYTE PTR [rax+0x57],dh
   14003eef2:	add    eax,DWORD PTR [rax]
   14003eef4:	loopne 0x14003ef16
   14003eef6:	add    DWORD PTR [rax],eax
   14003eef8:	adc    al,0x21
   14003eefa:	add    DWORD PTR [rax],eax
   14003eefc:	nop
   14003eefd:	push   rbp
   14003eefe:	add    eax,DWORD PTR [rax]
   14003ef00:	and    BYTE PTR [rcx],ah
   14003ef02:	add    DWORD PTR [rax],eax
   14003ef04:	mov    DWORD PTR [rcx],esp
   14003ef06:	add    DWORD PTR [rax],eax
   14003ef08:	add    BYTE PTR [rdi+0x3],dl
   14003ef0b:	add    BYTE PTR [rax+0x6f000121],dl
   14003ef11:	and    al,BYTE PTR [rcx]
   14003ef13:	add    al,al
   14003ef15:	push   rdi
   14003ef16:	add    eax,DWORD PTR [rax]
   14003ef18:	jo     0x14003ef3c
   14003ef1a:	add    DWORD PTR [rax],eax
   14003ef1c:	fldenv [rdx]
   14003ef1e:	add    DWORD PTR [rax],eax
   14003ef20:	add    BYTE PTR [rdi+0x3],dl
   14003ef23:	add    al,ah
   14003ef25:	and    al,BYTE PTR [rcx]
   14003ef27:	add    BYTE PTR [rbx+riz*1],dl
   14003ef2a:	add    DWORD PTR [rax],eax
   14003ef2c:	nop
   14003ef2d:	push   rbp
   14003ef2e:	add    eax,DWORD PTR [rax]
   14003ef30:	and    BYTE PTR [rbx],ah
   14003ef32:	add    DWORD PTR [rax],eax
   14003ef34:	mov    fs,WORD PTR [rbx]
   14003ef36:	add    DWORD PTR [rax],eax
   14003ef38:	cwde   
   14003ef39:	push   rdi
   14003ef3a:	add    eax,DWORD PTR [rax]
   14003ef3c:	nop
   14003ef3d:	and    eax,DWORD PTR [rcx]
   14003ef3f:	add    ah,al
   14003ef41:	and    eax,DWORD PTR [rcx]
   14003ef43:	add    BYTE PTR [rax-0x1ffffcab],dl
   14003ef49:	and    eax,DWORD PTR [rcx]
   14003ef4b:	add    BYTE PTR [rdx],al
   14003ef4d:	and    al,0x1
   14003ef4f:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003ef53:	add    BYTE PTR [rax],dl
   14003ef55:	and    al,0x1
   14003ef57:	add    BYTE PTR [rdx],dh
   14003ef59:	and    al,0x1
   14003ef5b:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003ef5f:	add    BYTE PTR [rax+0x24],al
   14003ef62:	add    DWORD PTR [rax],eax
   14003ef64:	(bad)  
   14003ef65:	and    al,0x1
   14003ef67:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003ef6b:	add    BYTE PTR [rax+0x24],dh
   14003ef6e:	add    DWORD PTR [rax],eax
   14003ef70:	(bad)  
   14003ef71:	and    al,0x1
   14003ef73:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003ef77:	add    BYTE PTR [rax-0x4dfffedc],dl
   14003ef7d:	and    al,0x1
   14003ef7f:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003ef83:	add    al,al
   14003ef85:	and    al,0x1
   14003ef87:	add    dl,ah
   14003ef89:	and    al,0x1
   14003ef8b:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003ef8f:	add    al,dh
   14003ef91:	and    al,0x1
   14003ef93:	add    BYTE PTR ds:0x2a440001,dl
   14003ef9a:	add    eax,DWORD PTR [rax]
   14003ef9c:	and    BYTE PTR [rip+0x25420001],ah        # 0x16545efa3
   14003efa2:	add    DWORD PTR [rax],eax
   14003efa4:	sub    r8b,BYTE PTR [rbx]
   14003efa7:	add    BYTE PTR [rax+0x25],dl
   14003efaa:	add    DWORD PTR [rax],eax
   14003efac:	in     eax,dx
   14003efad:	and    eax,0x40340001
   14003efb2:	add    eax,DWORD PTR [rax]
   14003efb4:	lock and eax,0x261f0001
   14003efba:	add    DWORD PTR [rax],eax
   14003efbc:	sub    r8b,BYTE PTR [rbx]
   14003efbf:	add    BYTE PTR [rax],ah
   14003efc1:	add    DWORD PTR es:[rax],eax
   14003efc4:	cmp    esp,DWORD PTR [rsi]
   14003efc6:	add    DWORD PTR [rax],eax
   14003efc8:	(bad)  
   14003efc9:	push   rbx
   14003efca:	add    eax,DWORD PTR [rax]
   14003efcc:	push   rax
   14003efcd:	add    DWORD PTR es:[rax],eax
   14003efd0:	pushf  
   14003efd1:	add    DWORD PTR es:[rax],eax
   14003efd4:	cmp    BYTE PTR [rsi+0x3],bl
   14003efd7:	add    BYTE PTR [rax-0x26fffeda],ah
   14003efdd:	add    DWORD PTR es:[rax],eax
   14003efe0:	nop
   14003efe1:	push   rbp
   14003efe2:	add    eax,DWORD PTR [rax]
   14003efe4:	loopne 0x14003f00c
   14003efe6:	add    DWORD PTR [rax],eax
   14003efe8:	adc    DWORD PTR [rdi],esp
   14003efea:	add    DWORD PTR [rax],eax
   14003efec:	nop
   14003efed:	push   rbp
   14003efee:	add    eax,DWORD PTR [rax]
   14003eff0:	and    BYTE PTR [rdi],ah
   14003eff2:	add    DWORD PTR [rax],eax
   14003eff4:	pop    rbx
   14003eff5:	(bad)  
   14003eff6:	add    DWORD PTR [rax],eax
   14003eff8:	enter  0x354,0x0
   14003effc:	(bad)  
   14003effd:	(bad)  
   14003effe:	add    DWORD PTR [rax],eax
   14003f000:	xchg   esp,eax
   14003f001:	(bad)  
   14003f002:	add    DWORD PTR [rax],eax
   14003f004:	sub    r8b,BYTE PTR [rbx]
   14003f007:	add    BYTE PTR [rax-0x2efffed9],ah
   14003f00d:	(bad)  
   14003f00e:	add    DWORD PTR [rax],eax
   14003f010:	loopne 0x14003f065
   14003f012:	add    eax,DWORD PTR [rax]
   14003f014:	loopne 0x14003f03d
   14003f016:	add    DWORD PTR [rax],eax
   14003f018:	(bad)  
   14003f019:	sub    BYTE PTR [rcx],al
   14003f01b:	add    BYTE PTR [rax+0x20000354],dl
   14003f021:	sub    BYTE PTR [rcx],al
   14003f023:	add    BYTE PTR [rip+0x60000128],bh        # 0x1a003f151
   14003f029:	push   rbx
   14003f02a:	add    eax,DWORD PTR [rax]
   14003f02c:	sub    BYTE PTR [rcx],al
   14003f02f:	add    BYTE PTR [rcx+0x28],dh
   14003f032:	add    DWORD PTR [rax],eax
   14003f034:	nop
   14003f035:	push   rbp
   14003f036:	add    eax,DWORD PTR [rax]
   14003f038:	sub    BYTE PTR [rax],0x1
   14003f03b:	add    BYTE PTR [rbp+0x60000128],bl
   14003f041:	push   rbx
   14003f042:	add    eax,DWORD PTR [rax]
   14003f044:	lock sub BYTE PTR [rcx],al
   14003f047:	add    BYTE PTR [rip+0x60000129],cl        # 0x1a003f176
   14003f04d:	push   rbx
   14003f04e:	add    eax,DWORD PTR [rax]
   14003f050:	adc    BYTE PTR [rcx],ch
   14003f052:	add    DWORD PTR [rax],eax
   14003f054:	sub    QWORD PTR [r9],rax
   14003f057:	add    BYTE PTR [rax],dh
   14003f059:	push   rbp
   14003f05a:	add    eax,DWORD PTR [rax]
   14003f05c:	(bad)  
   14003f05d:	sub    DWORD PTR [rcx],eax
   14003f05f:	add    BYTE PTR [rcx+rbp*1+0x2a440001],dl
   14003f066:	add    eax,DWORD PTR [rax]
   14003f068:	movabs al,ds:0x44000129e3000129
   14003f071:	sub    al,BYTE PTR [rbx]
   14003f073:	add    al,dh
   14003f075:	sub    DWORD PTR [rcx],eax
   14003f077:	add    BYTE PTR [rbx+0x2a],dh
   14003f07a:	add    DWORD PTR [rax],eax
   14003f07c:	push   rax
   14003f07d:	push   rdx
   14003f07e:	add    eax,DWORD PTR [rax]
   14003f080:	sub    BYTE PTR [rdx],0x1
   14003f083:	add    BYTE PTR [rbx],al
   14003f085:	sub    eax,DWORD PTR [rcx]
   14003f087:	add    BYTE PTR [rax+0x52],bh
   14003f08a:	add    eax,DWORD PTR [rax]
   14003f08c:	adc    BYTE PTR [rbx],ch
   14003f08e:	add    DWORD PTR [rax],eax
   14003f090:	cmp    al,0x2b
   14003f092:	add    DWORD PTR [rax],eax
   14003f094:	call   0x18003f3ed
   14003f099:	sub    eax,DWORD PTR [rcx]
   14003f09b:	add    BYTE PTR [rax+0x2b],ah
   14003f09e:	add    DWORD PTR [rax],eax
   14003f0a0:	(bad)  
   14003f0a1:	push   rbx
   14003f0a2:	add    eax,DWORD PTR [rax]
   14003f0a4:	(bad)  
   14003f0a5:	sub    eax,DWORD PTR [rcx]
   14003f0a7:	add    BYTE PTR [rcx+0x7000012b],al
   14003f0ad:	push   rsp
   14003f0ae:	add    eax,DWORD PTR [rax]
   14003f0b0:	nop
   14003f0b1:	sub    eax,DWORD PTR [rcx]
   14003f0b3:	add    BYTE PTR [rcx-0x57fffed5],dh
   14003f0b9:	push   rsp
   14003f0ba:	add    eax,DWORD PTR [rax]
   14003f0bc:	shr    BYTE PTR [rbx],0x1
   14003f0bf:	add    cl,ah
   14003f0c1:	sub    eax,DWORD PTR [rcx]
   14003f0c3:	add    BYTE PTR [rax+0x55],bl
   14003f0c6:	add    eax,DWORD PTR [rax]
   14003f0c8:	lock sub eax,DWORD PTR [rcx]
   14003f0cb:	add    BYTE PTR [rax],bl
   14003f0cd:	sub    al,0x1
   14003f0cf:	add    BYTE PTR [rax+0x55],dh
   14003f0d2:	add    eax,DWORD PTR [rax]
   14003f0d4:	xor    BYTE PTR [rcx+rax*1],ch
   14003f0d7:	add    BYTE PTR [rcx+0x2c],ch
   14003f0da:	add    DWORD PTR [rax],eax
   14003f0dc:	shl    BYTE PTR [rip+0x2c700003],1        # 0x16c73f0e5
   14003f0e2:	add    DWORD PTR [rax],eax
   14003f0e4:	mov    al,0x2c
   14003f0e6:	add    DWORD PTR [rax],eax
   14003f0e8:	cmp    BYTE PTR [rsi+0x3],bl
   14003f0eb:	add    BYTE PTR [rax-0x3efffed4],dh
   14003f0f1:	sub    eax,0x55500001
   14003f0f6:	add    eax,DWORD PTR [rax]
   14003f0f8:	shr    BYTE PTR [rip+0x2e0e0001],1        # 0x16e11f0ff
   14003f0fe:	add    DWORD PTR [rax],eax
   14003f100:	adc    BYTE PTR [rbp+0x3],dl
   14003f103:	add    BYTE PTR [rax],dl
   14003f105:	add    DWORD PTR cs:[rax],eax
   14003f108:	xor    BYTE PTR [rsi],ch
   14003f10a:	add    DWORD PTR [rax],eax
   14003f10c:	(bad)  
   14003f10d:	push   rbx
   14003f10e:	add    eax,DWORD PTR [rax]
   14003f110:	xor    BYTE PTR [rsi],ch
   14003f112:	add    DWORD PTR [rax],eax
   14003f114:	rex.WXB
   14003f115:	add    DWORD PTR cs:[rax],eax
   14003f118:	(bad)  
   14003f119:	push   rbx
   14003f11a:	add    eax,DWORD PTR [rax]
   14003f11c:	push   rax
   14003f11d:	add    DWORD PTR cs:[rax],eax
   14003f120:	push   0x6000012e
   14003f125:	push   rbx
   14003f126:	add    eax,DWORD PTR [rax]
   14003f128:	jo     0x14003f158
   14003f12a:	add    DWORD PTR [rax],eax
   14003f12c:	mov    cl,0x2e
   14003f12e:	add    DWORD PTR [rax],eax
   14003f130:	or     BYTE PTR [rip+0x2ec00003],dh        # 0x16ec3f139
   14003f136:	add    DWORD PTR [rax],eax
   14003f138:	(bad)  [rsi]
   14003f13a:	add    DWORD PTR [rax],eax
   14003f13c:	(bad)  
   14003f13d:	push   rbx
   14003f13e:	add    eax,DWORD PTR [rax]
   14003f140:	loopne 0x14003f170
   14003f142:	add    DWORD PTR [rax],eax
   14003f144:	and    DWORD PTR [rdi],ebp
   14003f146:	add    DWORD PTR [rax],eax
   14003f148:	or     BYTE PTR [rip+0x2f300003],dh        # 0x16f33f151
   14003f14e:	add    DWORD PTR [rax],eax
   14003f150:	rex.WRB (bad) 
   14003f152:	add    DWORD PTR [rax],eax
   14003f154:	(bad)  
   14003f155:	push   rbx
   14003f156:	add    eax,DWORD PTR [rax]
   14003f158:	push   rax
   14003f159:	(bad)  
   14003f15a:	add    DWORD PTR [rax],eax
   14003f15c:	adc    BYTE PTR [rax],dh
   14003f15e:	add    DWORD PTR [rax],eax
   14003f160:	adc    BYTE PTR [rbp+0x3],dl
   14003f163:	add    BYTE PTR [rax],dl
   14003f165:	xor    BYTE PTR [rcx],al
   14003f167:	add    BYTE PTR [rip+0x60000130],ch        # 0x1a003f29d
   14003f16d:	push   rbx
   14003f16e:	add    eax,DWORD PTR [rax]
   14003f170:	xor    BYTE PTR [rax],dh
   14003f172:	add    DWORD PTR [rax],eax
   14003f174:	rex.WRB xor BYTE PTR [r9],r8b
   14003f177:	add    BYTE PTR [rax+0x53],ah
   14003f17a:	add    eax,DWORD PTR [rax]
   14003f17c:	push   rax
   14003f17d:	xor    BYTE PTR [rcx],al
   14003f17f:	add    BYTE PTR [rsi],bh
   14003f181:	xor    DWORD PTR [rcx],eax
   14003f183:	add    BYTE PTR [rax],dl
   14003f185:	push   rbp
   14003f186:	add    eax,DWORD PTR [rax]
   14003f188:	rex xor DWORD PTR [rcx],eax
   14003f18b:	add    BYTE PTR [rdx-0x57fffecf],dh
   14003f191:	push   rdx
   14003f192:	add    eax,DWORD PTR [rax]
   14003f194:	shl    BYTE PTR [rcx],0x1
   14003f197:	add    ah,bh
   14003f199:	xor    DWORD PTR [rcx],eax
   14003f19b:	add    BYTE PTR [rax+0x53],bl
   14003f19e:	add    eax,DWORD PTR [rax]
   14003f1a0:	add    BYTE PTR [rdx],dh
   14003f1a2:	add    DWORD PTR [rax],eax
   14003f1a4:	xor    al,BYTE PTR ss:[rcx]
   14003f1a7:	add    BYTE PTR [rax+0x45],bh
   14003f1aa:	add    eax,DWORD PTR [rax]
   14003f1ac:	xor    al,BYTE PTR [rcx]
   14003f1af:	add    BYTE PTR [rbx+0x33],cl
   14003f1b2:	add    DWORD PTR [rax],eax
   14003f1b4:	push   0x50000353
   14003f1b9:	xor    eax,DWORD PTR [rcx]
   14003f1bb:	add    BYTE PTR [rsp+rsi*1],ch
   14003f1be:	add    DWORD PTR [rax],eax
   14003f1c0:	loopne 0x14003f214
   14003f1c2:	add    eax,DWORD PTR [rax]
   14003f1c4:	xor    BYTE PTR [rcx+rax*1],dh
   14003f1c7:	add    BYTE PTR [rcx],ah
   14003f1c9:	xor    eax,0x53f80001
   14003f1ce:	add    eax,DWORD PTR [rax]
   14003f1d0:	rex xor eax,0x35ab0001
   14003f1d6:	add    DWORD PTR [rax],eax
   14003f1d8:	cmp    BYTE PTR [rsi+0x3],bl
   14003f1db:	add    BYTE PTR [rax+0x74000135],dh
   14003f1e1:	add    DWORD PTR ss:[rax],eax
   14003f1e4:	and    BYTE PTR [rbp+0x3],dl
   14003f1e7:	add    BYTE PTR [rax+0x57000136],al
   14003f1ed:	(bad)  
   14003f1ee:	add    DWORD PTR [rax],eax
   14003f1f0:	and    BYTE PTR [rbp+0x3],dl
   14003f1f3:	add    BYTE PTR [rax+0x37],ah
   14003f1f6:	add    DWORD PTR [rax],eax
   14003f1f8:	(bad)  
   14003f1f9:	cmp    BYTE PTR [rcx],al
   14003f1fb:	add    BYTE PTR [rax],ah
   14003f1fd:	push   rbp
   14003f1fe:	add    eax,DWORD PTR [rax]
   14003f200:	cmp    BYTE PTR [rcx],al
   14003f203:	add    BYTE PTR [rdx+0x38],ah
   14003f206:	add    DWORD PTR [rax],eax
   14003f208:	sub    r8b,BYTE PTR [rbx]
   14003f20b:	add    BYTE PTR [rax+0x38],dh
   14003f20e:	add    DWORD PTR [rax],eax
   14003f210:	(bad)  
   14003f211:	cmp    BYTE PTR [rcx],al
   14003f213:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003f217:	add    al,ah
   14003f219:	cmp    BYTE PTR [rcx],al
   14003f21b:	add    BYTE PTR [rdx],cl
   14003f21d:	cmp    DWORD PTR [rcx],eax
   14003f21f:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003f223:	add    BYTE PTR [rax],dl
   14003f225:	cmp    DWORD PTR [rcx],eax
   14003f227:	add    BYTE PTR [rip+0x44000139],ch        # 0x18403f366
   14003f22d:	sub    al,BYTE PTR [rbx]
   14003f22f:	add    BYTE PTR [rax],dh
   14003f231:	cmp    DWORD PTR [rcx],eax
   14003f233:	add    ah,ch
   14003f235:	cmp    DWORD PTR [rcx],eax
   14003f237:	add    BYTE PTR [rax],ah
   14003f239:	push   rbp
   14003f23a:	add    eax,DWORD PTR [rax]
   14003f23c:	lock cmp DWORD PTR [rcx],eax
   14003f23f:	add    BYTE PTR [rsi],ch
   14003f241:	cmp    eax,DWORD PTR [rcx]
   14003f243:	add    BYTE PTR [rax],ah
   14003f245:	push   rbp
   14003f246:	add    eax,DWORD PTR [rax]
   14003f248:	xor    BYTE PTR [rbx],bh
   14003f24a:	add    DWORD PTR [rax],eax
   14003f24c:	jo     0x14003f289
   14003f24e:	add    DWORD PTR [rax],eax
   14003f250:	(bad)  
   14003f251:	push   rbx
   14003f252:	add    eax,DWORD PTR [rax]
   14003f254:	jo     0x14003f291
   14003f256:	add    DWORD PTR [rax],eax
   14003f258:	mov    al,0x3b
   14003f25a:	add    DWORD PTR [rax],eax
   14003f25c:	(bad)  
   14003f25d:	push   rbx
   14003f25e:	add    eax,DWORD PTR [rax]
   14003f260:	lock cmp eax,DWORD PTR [rcx]
   14003f263:	add    BYTE PTR [rbx],cl
   14003f265:	cmp    al,0x1
   14003f267:	add    BYTE PTR [rax+0x53],ah
   14003f26a:	add    eax,DWORD PTR [rax]
   14003f26c:	adc    BYTE PTR [rcx+rax*1],bh
   14003f26f:	add    BYTE PTR [rbx],ch
   14003f271:	cmp    al,0x1
   14003f273:	add    BYTE PTR [rax+0x53],ah
   14003f276:	add    eax,DWORD PTR [rax]
   14003f278:	xor    BYTE PTR [rcx+rax*1],bh
   14003f27b:	add    BYTE PTR [rsi+0x3d],ch
   14003f27e:	add    DWORD PTR [rax],eax
   14003f280:	and    BYTE PTR [rbp+0x3],dl
   14003f283:	add    BYTE PTR [rax+0x3d],dh
   14003f286:	add    DWORD PTR [rax],eax
   14003f288:	(bad)
   14003f28b:	add    BYTE PTR [rax],ch
   14003f28d:	push   rbp
   14003f28e:	add    eax,DWORD PTR [rax]
   14003f290:	sar    BYTE PTR [rip+0x3dff0001],1        # 0x17e02f297
   14003f296:	add    DWORD PTR [rax],eax
   14003f298:	sub    r8b,BYTE PTR [rbx]
   14003f29b:	add    BYTE PTR [rax],al
   14003f29d:	add    DWORD PTR ds:[rax],eax
   14003f2a0:	and    bh,BYTE PTR [rsi]
   14003f2a2:	add    DWORD PTR [rax],eax
   14003f2a4:	sub    r8b,BYTE PTR [rbx]
   14003f2a7:	add    BYTE PTR [rax],dh
   14003f2a9:	add    DWORD PTR ds:[rax],eax
   14003f2ac:	push   rdx
   14003f2ad:	add    DWORD PTR ds:[rax],eax
   14003f2b0:	sub    r8b,BYTE PTR [rbx]
   14003f2b3:	add    BYTE PTR [rax+0x3e],ah
   14003f2b6:	add    DWORD PTR [rax],eax
   14003f2b8:	jg     0x14003f2f8
   14003f2ba:	add    DWORD PTR [rax],eax
   14003f2bc:	sub    r8b,BYTE PTR [rbx]
   14003f2bf:	add    BYTE PTR [rax-0x60fffec2],al
   14003f2c5:	add    DWORD PTR ds:[rax],eax
   14003f2c8:	sub    r8b,BYTE PTR [rbx]
   14003f2cb:	add    BYTE PTR [rax-0x2bfffec2],ah
   14003f2d1:	add    DWORD PTR ds:[rax],eax
   14003f2d4:	sub    r8b,BYTE PTR [rbx]
   14003f2d7:	add    al,ah
   14003f2d9:	add    DWORD PTR ds:[rax],eax
   14003f2dc:	push   rcx
   14003f2dd:	(bad)  
   14003f2de:	add    DWORD PTR [rax],eax
   14003f2e0:	(bad)  
   14003f2e1:	push   rbx
   14003f2e2:	add    eax,DWORD PTR [rax]
   14003f2e4:	(bad)  
   14003f2e5:	(bad)  
   14003f2e6:	add    DWORD PTR [rax],eax
   14003f2e8:	(bad)  
   14003f2e9:	(bad)  
   14003f2ea:	add    DWORD PTR [rax],eax
   14003f2ec:	adc    BYTE PTR [rbp+0x3],dl
   14003f2ef:	add    BYTE PTR [rax],al
   14003f2f1:	rex add DWORD PTR [rax],eax
   14003f2f4:	sub    al,0x40
   14003f2f6:	add    DWORD PTR [rax],eax
   14003f2f8:	nop
   14003f2f9:	push   rbp
   14003f2fa:	add    eax,DWORD PTR [rax]
   14003f2fc:	xor    BYTE PTR [rax+0x1],al
   14003f2ff:	add    BYTE PTR [rdx+0x40],dl
   14003f302:	add    DWORD PTR [rax],eax
   14003f304:	nop
   14003f305:	push   rbp
   14003f306:	add    eax,DWORD PTR [rax]
   14003f308:	(bad)  
   14003f309:	rex add DWORD PTR [rax],eax
   14003f30c:	pop    QWORD PTR [rax+0x1]
   14003f30f:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003f313:	add    BYTE PTR [rax+0x6a000140],dl
   14003f319:	add    DWORD PTR [r8],eax
   14003f31c:	add    BYTE PTR [rdi+0x3],dl
   14003f31f:	add    BYTE PTR [rax+0x41],dh
   14003f322:	add    DWORD PTR [rax],eax
   14003f324:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003f325:	add    QWORD PTR [r8],rax
   14003f328:	sbb    BYTE PTR [rbp+0x3],dl
   14003f32b:	add    BYTE PTR [rax-0x11fffeb7],dh
   14003f331:	add    QWORD PTR [r8],rax
   14003f334:	nop
   14003f335:	push   rbp
   14003f336:	add    eax,DWORD PTR [rax]
   14003f338:	lock add QWORD PTR [r8],rax
   14003f33c:	adc    eax,0x1000014a
   14003f341:	push   rbp
   14003f342:	add    eax,DWORD PTR [rax]
   14003f344:	and    BYTE PTR [rdx+0x1],cl
   14003f347:	add    BYTE PTR [rax],bh
   14003f349:	rex.WX add QWORD PTR [rax],rax
   14003f34c:	(bad)  
   14003f34d:	push   rbx
   14003f34e:	add    eax,DWORD PTR [rax]
   14003f350:	rex
   14003f351:	rex.WX add QWORD PTR [rax],rax
   14003f354:	pop    rax
   14003f355:	rex.WX add QWORD PTR [rax],rax
   14003f358:	(bad)  
   14003f359:	push   rbx
   14003f35a:	add    eax,DWORD PTR [rax]
   14003f35c:	or     BYTE PTR [rdx+0x1],0x0
   14003f360:	cwde   
   14003f361:	rex.WX add QWORD PTR [rax],rax
   14003f364:	(bad)  
   14003f365:	push   rbx
   14003f366:	add    eax,DWORD PTR [rax]
   14003f368:	movabs al,ds:0x6000014ab800014a
   14003f371:	push   rbx
   14003f372:	add    eax,DWORD PTR [rax]
   14003f374:	ror    BYTE PTR [rdx+0x1],0x0
   14003f378:	in     eax,0x4a
   14003f37a:	add    DWORD PTR [rax],eax
   14003f37c:	adc    BYTE PTR [rbp+0x3],dl
   14003f37f:	add    al,dh
   14003f381:	rex.WX add QWORD PTR [rax],rax
   14003f384:	or     BYTE PTR [rbx+0x1],cl
   14003f387:	add    BYTE PTR [rax+0x53],ah
   14003f38a:	add    eax,DWORD PTR [rax]
   14003f38c:	adc    BYTE PTR [rbx+0x1],cl
   14003f38f:	add    BYTE PTR [rsi+0x4b],dl
   14003f392:	add    DWORD PTR [rax],eax
   14003f394:	cmp    BYTE PTR [rsi+0x3],bl
   14003f397:	add    BYTE PTR [rax+0x4b],dh
   14003f39a:	add    DWORD PTR [rax],eax
   14003f39c:	out    0x4b,al
   14003f39e:	add    DWORD PTR [rax],eax
   14003f3a0:	pop    rax
   14003f3a1:	pop    rax
   14003f3a2:	add    eax,DWORD PTR [rax]
   14003f3a4:	lock rex.WXB add QWORD PTR [r8],rax
   14003f3a8:	rex.RB
   14003f3a9:	rex.WRX add QWORD PTR [rax],r8
   14003f3ac:	push   0x50000358
   14003f3b1:	rex.WRX add QWORD PTR [rax],r8
   14003f3b4:	sahf   
   14003f3b5:	rex.WRX add QWORD PTR [rax],r8
   14003f3b8:	sbb    BYTE PTR [rax+0x3],0x0
   14003f3bc:	mov    al,0x4e
   14003f3be:	add    DWORD PTR [rax],eax
   14003f3c0:	stc    
   14003f3c1:	rex.WRX add QWORD PTR [rax],r8
   14003f3c4:	mov    BYTE PTR [rax+0x3],bl
   14003f3c7:	add    BYTE PTR [rax],al
   14003f3c9:	rex.WRXB add QWORD PTR [r8],r8
   14003f3cc:	cmp    cl,BYTE PTR [rdi+0x1]
   14003f3cf:	add    BYTE PTR [rax+0x40000358],dl
   14003f3d5:	rex.WRXB add QWORD PTR [r8],r8
   14003f3d8:	jp     0x14003f429
   14003f3da:	add    DWORD PTR [rax],eax
   14003f3dc:	cwde   
   14003f3dd:	pop    rax
   14003f3de:	add    eax,DWORD PTR [rax]
   14003f3e0:	or     BYTE PTR [rdi+0x1],0x0
   14003f3e4:	mov    dh,0x4f
   14003f3e6:	add    DWORD PTR [rax],eax
   14003f3e8:	js     0x14003f42f
   14003f3ea:	add    eax,DWORD PTR [rax]
   14003f3ec:	ror    BYTE PTR [rdi+0x1],0x0
   14003f3f0:	(bad)  
   14003f3f1:	push   rdx
   14003f3f2:	add    DWORD PTR [rax],eax
   14003f3f4:	movabs al,ds:0x1000015210000358
   14003f3fd:	push   rbx
   14003f3fe:	add    DWORD PTR [rax],eax
   14003f400:	test   al,0x58
   14003f402:	add    eax,DWORD PTR [rax]
   14003f404:	and    BYTE PTR [rbx+0x1],dl
   14003f407:	add    BYTE PTR [rbx],ah
   14003f409:	push   rsp
   14003f40a:	add    DWORD PTR [rax],eax
   14003f40c:	mov    al,0x58
   14003f40e:	add    eax,DWORD PTR [rax]
   14003f410:	xor    BYTE PTR [rcx+rax*1+0x0],dl
   14003f414:	(bad)  
   14003f415:	push   rbp
   14003f416:	add    DWORD PTR [rax],eax
   14003f418:	mov    eax,0xc0000358
   14003f41d:	push   rbp
   14003f41e:	add    DWORD PTR [rax],eax
   14003f420:	ins    DWORD PTR es:[rdi],dx
   14003f421:	push   rdi
   14003f422:	add    DWORD PTR [rax],eax
   14003f424:	rcr    BYTE PTR [rax+0x3],0x0
   14003f428:	adc    BYTE PTR [rdi+0x1],0x0
   14003f42c:	addr32 pop rax
   14003f42e:	add    DWORD PTR [rax],eax
   14003f430:	enter  0x358,0x0
   14003f434:	jo     0x14003f48e
   14003f436:	add    DWORD PTR [rax],eax
   14003f438:	add    esi,DWORD PTR [rax+0x1]
   14003f43b:	add    al,bl
   14003f43d:	pop    rax
   14003f43e:	add    eax,DWORD PTR [rax]
   14003f440:	adc    BYTE PTR [rax+0x1],dh
   14003f443:	add    ch,ah
   14003f445:	jo     0x14003f448
   14003f447:	add    al,ch
   14003f449:	pop    rax
   14003f44a:	add    eax,DWORD PTR [rax]
   14003f44c:	lock jo 0x14003f450
   14003f44f:	add    BYTE PTR [rax-0xffffe8f],dl
   14003f455:	pop    rax
   14003f456:	add    eax,DWORD PTR [rax]
   14003f458:	movabs al,ds:0xf8000171ec000171
   14003f461:	pop    rax
   14003f462:	add    eax,DWORD PTR [rax]
   14003f464:	add    BYTE PTR [rdx+0x1],dh
   14003f467:	add    BYTE PTR [rbx+0x72],al
   14003f46a:	add    DWORD PTR [rax],eax
   14003f46c:	add    BYTE PTR [rcx+0x3],bl
   14003f46f:	add    BYTE PTR [rax+0x72],dl
   14003f472:	add    DWORD PTR [rax],eax
   14003f474:	add    DWORD PTR [rbx+0x1],esi
   14003f477:	add    BYTE PTR [rax+0x10000359],dl
   14003f47d:	jae    0x14003f480
   14003f47f:	add    BYTE PTR [rcx+0x73],ah
   14003f482:	add    DWORD PTR [rax],eax
   14003f484:	cwde   
   14003f485:	pop    rcx
   14003f486:	add    eax,DWORD PTR [rax]
   14003f488:	jo     0x14003f4fd
   14003f48a:	add    DWORD PTR [rax],eax
   14003f48c:	in     eax,0x73
   14003f48e:	add    DWORD PTR [rax],eax
   14003f490:	movabs al,ds:0xe2000173f0000359
   14003f499:	je     0x14003f49c
   14003f49b:	add    al,bl
   14003f49d:	pop    rcx
   14003f49e:	add    eax,DWORD PTR [rax]
   14003f4a0:	lock je 0x14003f4a4
   14003f4a3:	add    BYTE PTR [rdi+0x75],dh
   14003f4a6:	add    DWORD PTR [rax],eax
   14003f4a8:	sub    BYTE PTR [rcx+0x3],bl
   14003f4ab:	add    BYTE PTR [rax-0x55fffe8b],al
   14003f4b1:	jne    0x14003f4b4
   14003f4b3:	add    BYTE PTR [rax],bl
   14003f4b5:	pop    rdx
   14003f4b6:	add    eax,DWORD PTR [rax]
   14003f4b8:	mov    al,0x75
   14003f4ba:	add    DWORD PTR [rax],eax
   14003f4bc:	shl    DWORD PTR [rbp+0x1],1
   14003f4bf:	add    BYTE PTR [rax],cl
   14003f4c1:	pop    rcx
   14003f4c2:	add    eax,DWORD PTR [rax]
   14003f4c4:	loopne 0x14003f53b
   14003f4c6:	add    DWORD PTR [rax],eax
   14003f4c8:	and    esi,DWORD PTR [rsi+0x1]
   14003f4cb:	add    BYTE PTR [rax+0x59],bl
   14003f4ce:	add    eax,DWORD PTR [rax]
   14003f4d0:	rex jbe 0x14003f4d4
   14003f4d3:	add    BYTE PTR [rsi+rsi*2+0x1],ah
   14003f4d7:	add    BYTE PTR [rax],bh
   14003f4d9:	pop    rdx
   14003f4da:	add    eax,DWORD PTR [rax]
   14003f4dc:	jo     0x14003f554
   14003f4de:	add    DWORD PTR [rax],eax
   14003f4e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003f4e1:	jbe    0x14003f4e4
   14003f4e3:	add    BYTE PTR [rax+0x45],bh
   14003f4e6:	add    eax,DWORD PTR [rax]
   14003f4e8:	mov    al,0x76
   14003f4ea:	add    DWORD PTR [rax],eax
   14003f4ec:	out    0x76,al
   14003f4ee:	add    DWORD PTR [rax],eax
   14003f4f0:	js     0x14003f537
   14003f4f2:	add    eax,DWORD PTR [rax]
   14003f4f4:	lock jbe 0x14003f4f8
   14003f4f7:	add    BYTE PTR [rsi],dl
   14003f4f9:	ja     0x14003f4fc
   14003f4fb:	add    BYTE PTR [rax+0x53],ah
   14003f4fe:	add    eax,DWORD PTR [rax]
   14003f500:	and    BYTE PTR [rdi+0x1],dh
   14003f503:	add    al,dh
   14003f505:	ja     0x14003f508
   14003f507:	add    BYTE PTR [rbx+rbx*2+0x78000003],bh
   14003f50e:	add    DWORD PTR [rax],eax
   14003f510:	sar    DWORD PTR [rax+0x1],1
   14003f513:	add    BYTE PTR [rsp+rbx*2+0x79200003],dh
   14003f51a:	add    DWORD PTR [rax],eax
   14003f51c:	rex.WX jns 0x14003f520
   14003f51f:	add    al,dh
   14003f521:	pop    rsp
   14003f522:	add    eax,DWORD PTR [rax]
   14003f524:	push   rax
   14003f525:	jns    0x14003f528
   14003f527:	add    BYTE PTR [rax+0x79],dh
   14003f52a:	add    DWORD PTR [rax],eax
   14003f52c:	clc    
   14003f52d:	pop    rsp
   14003f52e:	add    eax,DWORD PTR [rax]
   14003f530:	cmp    BYTE PTR [rcx+0x1],0x0
   14003f534:	movabs al,ds:0xb000035d00000179
   14003f53d:	jns    0x14003f540
   14003f53f:	add    dl,bl
   14003f541:	jns    0x14003f544
   14003f543:	add    BYTE PTR [rax],cl
   14003f545:	pop    rbp
   14003f546:	add    eax,DWORD PTR [rax]
   14003f548:	loopne 0x14003f5c3
   14003f54a:	add    DWORD PTR [rax],eax
   14003f54c:	add    BYTE PTR [rdx+0x1],bh
   14003f54f:	add    BYTE PTR [rax],dl
   14003f551:	pop    rbp
   14003f552:	add    eax,DWORD PTR [rax]
   14003f554:	adc    BYTE PTR [rdx+0x1],bh
   14003f557:	add    BYTE PTR [rdx],bh
   14003f559:	jp     0x14003f55c
   14003f55b:	add    BYTE PTR [rax],bl
   14003f55d:	pop    rbp
   14003f55e:	add    eax,DWORD PTR [rax]
   14003f560:	rex jp 0x14003f564
   14003f563:	add    BYTE PTR [rax+0x7a],ah
   14003f566:	add    DWORD PTR [rax],eax
   14003f568:	and    BYTE PTR [rbp+0x3],bl
   14003f56b:	add    BYTE PTR [rax+0x7a],dh
   14003f56e:	add    DWORD PTR [rax],eax
   14003f570:	(bad)  
   14003f571:	jp     0x14003f574
   14003f573:	add    BYTE PTR [rax],ch
   14003f575:	pop    rbp
   14003f576:	add    eax,DWORD PTR [rax]
   14003f578:	movabs al,ds:0x3000017ac000017a
   14003f581:	pop    rbp
   14003f582:	add    eax,DWORD PTR [rax]
   14003f584:	sar    BYTE PTR [rdx+0x1],1
   14003f587:	add    dl,bh
   14003f589:	jp     0x14003f58c
   14003f58b:	add    BYTE PTR [rax],bh
   14003f58d:	pop    rbp
   14003f58e:	add    eax,DWORD PTR [rax]
   14003f590:	add    BYTE PTR [rbx+0x1],bh
   14003f593:	add    BYTE PTR [rax],ah
   14003f595:	jnp    0x14003f598
   14003f597:	add    BYTE PTR [rax+0x5d],al
   14003f59a:	add    eax,DWORD PTR [rax]
   14003f59c:	xor    BYTE PTR [rbx+0x1],bh
   14003f59f:	add    BYTE PTR [rdx+0x7b],bl
   14003f5a2:	add    DWORD PTR [rax],eax
   14003f5a4:	rex.W pop rbp
   14003f5a6:	add    eax,DWORD PTR [rax]
   14003f5a8:	(bad)  
   14003f5a9:	jnp    0x14003f5ac
   14003f5ab:	add    BYTE PTR [rax+0x5000017b],al
   14003f5b1:	pop    rbp
   14003f5b2:	add    eax,DWORD PTR [rax]
   14003f5b4:	nop
   14003f5b5:	jnp    0x14003f5b8
   14003f5b7:	add    BYTE PTR [rdx+0x5800017b],bh
   14003f5bd:	pop    rbp
   14003f5be:	add    eax,DWORD PTR [rax]
   14003f5c0:	sar    BYTE PTR [rbx+0x1],0x0
   14003f5c4:	loopne 0x14003f641
   14003f5c6:	add    DWORD PTR [rax],eax
   14003f5c8:	(bad)  
   14003f5c9:	pop    rbp
   14003f5ca:	add    eax,DWORD PTR [rax]
   14003f5cc:	lock jnp 0x14003f5d0
   14003f5cf:	add    BYTE PTR [rdx],bl
   14003f5d1:	jl     0x14003f5d4
   14003f5d3:	add    BYTE PTR [rax+0x5d],ch
   14003f5d6:	add    eax,DWORD PTR [rax]
   14003f5d8:	and    BYTE PTR [rcx+rax*1+0x0],bh
   14003f5dc:	jge    0x14003f65a
   14003f5de:	add    DWORD PTR [rax],eax
   14003f5e0:	cmp    BYTE PTR [rsi+0x3],bl
   14003f5e3:	add    BYTE PTR [rax-0x4bfffe84],al
   14003f5e9:	jl     0x14003f5ec
   14003f5eb:	add    BYTE PTR [rax-0x3ffffcab],dl
   14003f5f1:	jl     0x14003f5f4
   14003f5f3:	add    BYTE PTR [rcx],dh
   14003f5f5:	jge    0x14003f5f8
   14003f5f7:	add    BYTE PTR [rax+0x5d],dh
   14003f5fa:	add    eax,DWORD PTR [rax]
   14003f5fc:	rex jge 0x14003f600
   14003f5ff:	add    BYTE PTR [rbp+rdi*2+0x1],dh
   14003f603:	add    BYTE PTR [rax-0x7ffffcab],dl
   14003f609:	jge    0x14003f60c
   14003f60b:	add    BYTE PTR [rdx+0x4400017d],ah
   14003f611:	sub    al,BYTE PTR [rbx]
   14003f613:	add    BYTE PTR [rax-0x30fffe83],dh
   14003f619:	jge    0x14003f61c
   14003f61b:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003f61f:	add    al,dl
   14003f621:	jge    0x14003f624
   14003f623:	add    dl,dh
   14003f625:	jge    0x14003f628
   14003f627:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003f62b:	add    BYTE PTR [rax],al
   14003f62d:	jle    0x14003f630
   14003f62f:	add    BYTE PTR [rsi+rdi*2],dh
   14003f632:	add    DWORD PTR [rax],eax
   14003f634:	sub    r8b,BYTE PTR [rbx]
   14003f637:	add    BYTE PTR [rax+0x7e],al
   14003f63a:	add    DWORD PTR [rax],eax
   14003f63c:	jno    0x14003f6bc
   14003f63e:	add    DWORD PTR [rax],eax
   14003f640:	rex.R pop rbx
   14003f642:	add    eax,DWORD PTR [rax]
   14003f644:	nop
   14003f645:	jle    0x14003f648
   14003f647:	add    ah,al
   14003f649:	jle    0x14003f64c
   14003f64b:	add    BYTE PTR [rbx+rbx*2+0x3],dh
   14003f64f:	add    al,dl
   14003f651:	jle    0x14003f654
   14003f653:	add    BYTE PTR [rax+0x7f],dl
   14003f656:	add    DWORD PTR [rax],eax
   14003f658:	js     0x14003f6b4
   14003f65a:	add    eax,DWORD PTR [rax]
   14003f65c:	push   rax
   14003f65d:	jg     0x14003f660
   14003f65f:	add    BYTE PTR [rcx+0x7f],dh
   14003f662:	add    DWORD PTR [rax],eax
   14003f664:	pop    rsp
   14003f665:	pop    rbx
   14003f666:	add    eax,DWORD PTR [rax]
   14003f668:	cmp    BYTE PTR [rdi+0x1],0x0
   14003f66c:	lods   al,BYTE PTR ds:[rsi]
   14003f66d:	jg     0x14003f670
   14003f66f:	add    BYTE PTR [rbx+rbx*2+0x7fb00003],cl
   14003f676:	add    DWORD PTR [rax],eax
   14003f678:	call   0x19003f7fc
   14003f67d:	pop    rdx
   14003f67e:	add    eax,DWORD PTR [rax]
   14003f680:	lock jg 0x14003f684
   14003f683:	add    BYTE PTR [rsi],ah
   14003f685:	add    BYTE PTR [rcx],0x0
   14003f688:	js     0x14003f6cf
   14003f68a:	add    eax,DWORD PTR [rax]
   14003f68c:	xor    BYTE PTR [rax-0x7fb2ffff],al
   14003f692:	add    DWORD PTR [rax],eax
   14003f694:	(bad)  
   14003f695:	push   rbx
   14003f696:	add    eax,DWORD PTR [rax]
   14003f698:	push   rax
   14003f699:	add    BYTE PTR [rcx],0x0
   14003f69c:	sub    al,0x81
   14003f69e:	add    DWORD PTR [rax],eax
   14003f6a0:	mov    esp,0x3000035a
   14003f6a5:	add    DWORD PTR [rcx],0x1820700
   14003f6ab:	add    BYTE PTR [rax],ah
   14003f6ad:	push   rbp
   14003f6ae:	add    eax,DWORD PTR [rax]
   14003f6b0:	and    BYTE PTR [rdx-0x7dc7ffff],al
   14003f6b6:	add    DWORD PTR [rax],eax
   14003f6b8:	(bad)  
   14003f6b9:	push   rbx
   14003f6ba:	add    eax,DWORD PTR [rax]
   14003f6bc:	rex (bad) 
   14003f6be:	add    DWORD PTR [rax],eax
   14003f6c0:	(bad)  
   14003f6c2:	add    DWORD PTR [rax],eax
   14003f6c4:	sub    r8b,BYTE PTR [rbx]
   14003f6c7:	add    BYTE PTR [rax-0x7e],dh
   14003f6ca:	add    DWORD PTR [rax],eax
   14003f6cc:	pop    QWORD PTR [rdx+0x2a440001]
   14003f6d2:	add    eax,DWORD PTR [rax]
   14003f6d4:	nop
   14003f6d5:	(bad)  
   14003f6d6:	add    DWORD PTR [rax],eax
   14003f6d8:	add    DWORD PTR cs:[rcx],0x0
   14003f6dc:	adc    BYTE PTR [rbp+0x3],dl
   14003f6df:	add    BYTE PTR [rax-0x7d],dh
   14003f6e2:	add    DWORD PTR [rax],eax
   14003f6e4:	(bad)  
   14003f6e5:	add    DWORD PTR [rcx],0x0
   14003f6e8:	cwde   
   14003f6e9:	pop    rbp
   14003f6ea:	add    eax,DWORD PTR [rax]
   14003f6ec:	movabs al,ds:0xa0000183c0000183
   14003f6f5:	pop    rbp
   14003f6f6:	add    eax,DWORD PTR [rax]
   14003f6f8:	rol    BYTE PTR [rbx-0x7c05ffff],1
   14003f6fe:	add    DWORD PTR [rax],eax
   14003f700:	test   al,0x5d
   14003f702:	add    eax,DWORD PTR [rax]
   14003f704:	add    BYTE PTR [rcx+rax*1+0x1842000],al
   14003f70b:	add    BYTE PTR [rax+0x3000035d],dh
   14003f711:	test   BYTE PTR [rcx],al
   14003f713:	add    BYTE PTR [rdx-0x7c],bl
   14003f716:	add    DWORD PTR [rax],eax
   14003f718:	mov    eax,0x6000035d
   14003f71d:	test   BYTE PTR [rcx],al
   14003f71f:	add    BYTE PTR [rax-0x3ffffe7c],al
   14003f725:	pop    rbp
   14003f726:	add    eax,DWORD PTR [rax]
   14003f728:	nop
   14003f729:	test   BYTE PTR [rcx],al
   14003f72b:	add    BYTE PTR [rax-0x37fffe7c],dh
   14003f731:	pop    rbp
   14003f732:	add    eax,DWORD PTR [rax]
   14003f734:	rol    BYTE PTR [rcx+rax*1+0x184ea00],0x0
   14003f73c:	rcr    BYTE PTR [rbp+0x3],1
   14003f73f:	add    al,dh
   14003f741:	test   BYTE PTR [rcx],al
   14003f743:	add    bl,dl
   14003f745:	test   DWORD PTR [rcx],eax
   14003f747:	add    BYTE PTR [rax],bl
   14003f749:	(bad)  
   14003f74a:	add    eax,DWORD PTR [rax]
   14003f74c:	loopne 0x14003f6d3
   14003f74e:	add    DWORD PTR [rax],eax
   14003f750:	mov    cl,0x86
   14003f752:	add    DWORD PTR [rax],eax
   14003f754:	clc    
   14003f755:	(bad)  
   14003f756:	add    eax,DWORD PTR [rax]
   14003f758:	rol    BYTE PTR [rsi-0x4fe2ffff],0x1
   14003f75f:	add    al,bl
   14003f761:	(bad)  
   14003f763:	add    BYTE PTR [rax],dh
   14003f765:	mov    al,0x1
   14003f767:	add    BYTE PTR [rcx-0x50],dl
   14003f76a:	add    DWORD PTR [rax],eax
   14003f76c:	xor    al,0x71
   14003f76e:	add    eax,DWORD PTR [rax]
   14003f770:	(bad)  
   14003f771:	mov    al,0x1
   14003f773:	add    BYTE PTR [rdx+0x3c0001b0],cl
   14003f779:	jno    0x14003f77e
   14003f77b:	add    BYTE PTR [rax-0x4efffe50],dl
   14003f781:	mov    al,0x1
   14003f783:	add    BYTE PTR [rcx+rsi*2+0x3],al
   14003f787:	add    al,al
   14003f789:	mov    al,0x1
   14003f78b:	add    BYTE PTR [rax-0x4e],ah
   14003f78e:	add    DWORD PTR [rax],eax
   14003f790:	rex.WR jno 0x14003f796
   14003f793:	add    BYTE PTR [rax-0x4e],dh
   14003f796:	add    DWORD PTR [rax],eax
   14003f798:	cmp    al,0xb4
   14003f79a:	add    DWORD PTR [rax],eax
   14003f79c:	in     al,0x71
   14003f79e:	add    eax,DWORD PTR [rax]
   14003f7a0:	push   rax
   14003f7a1:	mov    ah,0x1
   14003f7a3:	add    BYTE PTR [rbx-0x63fffe4c],al
   14003f7a9:	jb     0x14003f7ae
   14003f7ab:	add    BYTE PTR [rax-0x4efffe4c],dl
   14003f7b1:	mov    ah,0x1
   14003f7b3:	add    BYTE PTR [rdx+rsi*2-0x4afffffd],ah
   14003f7ba:	add    DWORD PTR [rax],eax
   14003f7bc:	push   rdi
   14003f7bd:	mov    ch,0x1
   14003f7bf:	add    BYTE PTR [rdx+rsi*2-0x4a9ffffd],ch
   14003f7c6:	add    DWORD PTR [rax],eax
   14003f7c8:	(bad)  
   14003f7c9:	mov    ch,0x1
   14003f7cb:	add    ah,bl
   14003f7cd:	jb     0x14003f7d2
   14003f7cf:	add    BYTE PTR [rax-0x4dfffe4b],dl
   14003f7d5:	mov    ch,0x1
   14003f7d7:	add    ah,ah
   14003f7d9:	jb     0x14003f7de
   14003f7db:	add    al,al
   14003f7dd:	mov    ch,0x1
   14003f7df:	add    dl,ah
   14003f7e1:	mov    ch,0x1
   14003f7e3:	add    ah,ch
   14003f7e5:	jb     0x14003f7ea
   14003f7e7:	add    al,dh
   14003f7e9:	mov    ch,0x1
   14003f7eb:	add    BYTE PTR [rbx],al
   14003f7ed:	mov    bh,0x1
   14003f7ef:	add    ah,dh
   14003f7f1:	jb     0x14003f7f6
   14003f7f3:	add    BYTE PTR [rax],dl
   14003f7f5:	mov    bh,0x1
   14003f7f7:	add    dh,dl
   14003f7f9:	mov    bh,0x1
   14003f7fb:	add    BYTE PTR [rbx+rsi*2+0x3],bl
   14003f7ff:	add    BYTE PTR [rax],ah
   14003f801:	mov    eax,0xb83f0001
   14003f806:	add    DWORD PTR [rax],eax
   14003f808:	xchg   esp,eax
   14003f809:	jae    0x14003f80e
   14003f80b:	add    BYTE PTR [rax-0x48],dl
   14003f80e:	add    DWORD PTR [rax],eax
   14003f810:	imul   edi,DWORD PTR [rax+0x739c0001],0x3
   14003f817:	add    BYTE PTR [rax-0x5bfffe48],al
   14003f81d:	mov    eax,0x73a40001
   14003f822:	add    eax,DWORD PTR [rax]
   14003f824:	mov    al,0xb8
   14003f826:	add    DWORD PTR [rax],eax
   14003f828:	repz mov eax,0x73ac0001
   14003f82e:	add    eax,DWORD PTR [rax]
   14003f830:	add    BYTE PTR [rcx-0x4625ffff],bh
   14003f836:	add    DWORD PTR [rax],eax
   14003f838:	mov    ah,0x73
   14003f83a:	add    eax,DWORD PTR [rax]
   14003f83c:	add    BYTE PTR [rdx-0x45d3ffff],bh
   14003f842:	add    DWORD PTR [rax],eax
   14003f844:	sbb    al,0x74
   14003f846:	add    eax,DWORD PTR [rax]
   14003f848:	rex mov edx,0xba800001
   14003f84e:	add    DWORD PTR [rax],eax
   14003f850:	and    al,0x74
   14003f852:	add    eax,DWORD PTR [rax]
   14003f854:	nop
   14003f855:	mov    edx,0xbad00001
   14003f85a:	add    DWORD PTR [rax],eax
   14003f85c:	sub    al,0x74
   14003f85e:	add    eax,DWORD PTR [rax]
   14003f860:	loopne 0x14003f81c
   14003f862:	add    DWORD PTR [rax],eax
   14003f864:	and    BYTE PTR [rbx+0x74340001],bh
   14003f86a:	add    eax,DWORD PTR [rax]
   14003f86c:	xor    BYTE PTR [rbx-0x44aeffff],bh
   14003f872:	add    DWORD PTR [rax],eax
   14003f874:	cmp    al,0x74
   14003f876:	add    eax,DWORD PTR [rax]
   14003f878:	(bad)  
   14003f879:	mov    ebx,0xbb890001
   14003f87e:	add    DWORD PTR [rax],eax
   14003f880:	rex.R je 0x14003f886
   14003f883:	add    BYTE PTR [rax-0x4efffe45],dl
   14003f889:	mov    ebx,0x744c0001
   14003f88e:	add    eax,DWORD PTR [rax]
   14003f890:	sar    BYTE PTR [rbx-0x4424ffff],0x1
   14003f897:	add    BYTE PTR [rsp+rsi*2+0x3],dl
   14003f89b:	add    al,dh
   14003f89d:	mov    ebx,0xbc0b0001
   14003f8a2:	add    DWORD PTR [rax],eax
   14003f8a4:	pop    rsp
   14003f8a5:	je     0x14003f8aa
   14003f8a7:	add    BYTE PTR [rax],ah
   14003f8a9:	mov    esp,0xbc3b0001
   14003f8ae:	add    DWORD PTR [rax],eax
   14003f8b0:	fs je  0x14003f8b6
   14003f8b3:	add    BYTE PTR [rax-0x44],dl
   14003f8b6:	add    DWORD PTR [rax],eax
   14003f8b8:	imul   edi,DWORD PTR [rcx+rax*1+0x3746c00],0x0
   14003f8c0:	cmp    BYTE PTR [rcx+rax*1+0x1bc9b00],0x0
   14003f8c8:	je     0x14003f93e
   14003f8ca:	add    eax,DWORD PTR [rax]
   14003f8cc:	mov    al,0xbc
   14003f8ce:	add    DWORD PTR [rax],eax
   14003f8d0:	retf   
   14003f8d1:	mov    esp,0x747c0001
   14003f8d6:	add    eax,DWORD PTR [rax]
   14003f8d8:	loopne 0x14003f896
   14003f8da:	add    DWORD PTR [rax],eax
   14003f8dc:	(bad)  
   14003f8dd:	mov    esp,0x74840001
   14003f8e2:	add    eax,DWORD PTR [rax]
   14003f8e4:	adc    BYTE PTR [rbp-0x42d4ffff],bh
   14003f8ea:	add    DWORD PTR [rax],eax
   14003f8ec:	mov    WORD PTR [rbx+rax*1+0x0],?
   14003f8f0:	rex mov ebp,0xbde50001
   14003f8f6:	add    DWORD PTR [rax],eax
   14003f8f8:	xchg   esp,eax
   14003f8f9:	je     0x14003f8fe
   14003f8fb:	add    al,dh
   14003f8fd:	mov    ebp,0xbe900001
   14003f902:	add    DWORD PTR [rax],eax
   14003f904:	cld    
   14003f905:	je     0x14003f90a
   14003f907:	add    BYTE PTR [rax+0x6f0001be],ah
   14003f90d:	mov    edi,0x75440001
   14003f912:	add    eax,DWORD PTR [rax]
   14003f914:	cmp    BYTE PTR [rdi-0x4033ffff],0x1
   14003f91b:	add    BYTE PTR [rbp+rsi*2-0x401ffffd],cl
   14003f922:	add    DWORD PTR [rax],eax
   14003f924:	sub    eax,0x940001c0
   14003f929:	jne    0x14003f92e
   14003f92b:	add    BYTE PTR [rax-0x40],al
   14003f92e:	add    DWORD PTR [rax],eax
   14003f930:	(bad)  
   14003f931:	rol    BYTE PTR [rcx],0x0
   14003f934:	pushf  
   14003f935:	jne    0x14003f93a
   14003f937:	add    BYTE PTR [rax-0x44fffe40],ah
   14003f93d:	rol    BYTE PTR [rcx],0x0
   14003f940:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003f941:	jne    0x14003f946
   14003f943:	add    al,dl
   14003f945:	rol    BYTE PTR [rcx],0x0
   14003f948:	(bad)
   14003f94c:	lods   al,BYTE PTR ds:[rsi]
   14003f94d:	jne    0x14003f952
   14003f94f:	add    al,dl
   14003f951:	rol    DWORD PTR [rcx],0x0
   14003f954:	(bad)  
   14003f955:	(bad)
   14003f959:	jne    0x14003f95e
   14003f95b:	add    BYTE PTR [rax-0x3c],dh
   14003f95e:	add    DWORD PTR [rax],eax
   14003f960:	ror    dl,1
   14003f962:	add    DWORD PTR [rax],eax
   14003f964:	cwde   
   14003f965:	jbe    0x14003f96a
   14003f967:	add    al,ah
   14003f969:	retf   0x1
   14003f96c:	add    eax,0x600001cb
   14003f971:	jns    0x14003f976
   14003f973:	add    BYTE PTR [rax],dl
   14003f975:	retf   
   14003f976:	add    DWORD PTR [rax],eax
   14003f978:	rol    BYTE PTR cs:[rcx],1
   14003f97b:	add    BYTE PTR [rax+0x79],ch
   14003f97e:	add    eax,DWORD PTR [rax]
   14003f980:	rex rol BYTE PTR [rcx],1
   14003f983:	add    dl,al
   14003f985:	rol    BYTE PTR [rcx],1
   14003f987:	add    al,dl
   14003f989:	jnp    0x14003f98e
   14003f98b:	add    al,dl
   14003f98d:	rol    BYTE PTR [rcx],1
   14003f98f:	add    BYTE PTR [rdx-0x2f],dl
   14003f992:	add    DWORD PTR [rax],eax
   14003f994:	cld    
   14003f995:	jge    0x14003f99a
   14003f997:	add    BYTE PTR [rax-0x2f],ah
   14003f99a:	add    DWORD PTR [rax],eax
   14003f99c:	ret    
   14003f99d:	rol    DWORD PTR [rcx],1
   14003f99f:	add    BYTE PTR [rax],bh
   14003f9a1:	pop    rsi
   14003f9a2:	add    eax,DWORD PTR [rax]
   14003f9a4:	rcl    cl,1
   14003f9a6:	add    DWORD PTR [rax],eax
   14003f9a8:	rex.RX rol BYTE PTR [rcx],cl
   14003f9ab:	add    ah,ah
   14003f9ad:	jge    0x14003f9b2
   14003f9af:	add    BYTE PTR [rax-0x2e],dl
   14003f9b2:	add    DWORD PTR [rax],eax
   14003f9b4:	lods   eax,DWORD PTR ds:[rsi]
   14003f9b5:	rol    BYTE PTR [rcx],cl
   14003f9b7:	add    BYTE PTR [rax],bh
   14003f9b9:	pop    rsi
   14003f9ba:	add    eax,DWORD PTR [rax]
   14003f9bc:	mov    al,0xd2
   14003f9be:	add    DWORD PTR [rax],eax
   14003f9c0:	rex.R rol DWORD PTR [rcx],cl
   14003f9c3:	add    BYTE PTR [rsi+rdi*2+0x3],dl
   14003f9c7:	add    BYTE PTR [rax-0x2d],dl
   14003f9ca:	add    DWORD PTR [rax],eax
   14003f9cc:	in     al,0xd3
   14003f9ce:	add    DWORD PTR [rax],eax
   14003f9d0:	int3   
   14003f9d1:	jle    0x14003f9d6
   14003f9d3:	add    al,dh
   14003f9d5:	rol    DWORD PTR [rcx],cl
   14003f9d7:	add    BYTE PTR [rdx+0x1c0001d4],cl
   14003f9dd:	jle    0x14003f9e2
   14003f9df:	add    BYTE PTR [rax+0x2a0001d4],dl
   14003f9e5:	(bad)  
   14003f9e6:	add    DWORD PTR [rax],eax
   14003f9e8:	sbb    al,0x7e
   14003f9ea:	add    eax,DWORD PTR [rax]
   14003f9ec:	xor    ch,dl
   14003f9ee:	add    DWORD PTR [rax],eax
   14003f9f0:	out    dx,eax
   14003f9f1:	(bad)  
   14003f9f2:	add    DWORD PTR [rax],eax
   14003f9f4:	and    al,0x7e
   14003f9f6:	add    eax,DWORD PTR [rax]
   14003f9f8:	lock (bad) 
   14003f9fa:	add    DWORD PTR [rax],eax
   14003f9fc:	and    al,0xd6
   14003f9fe:	add    DWORD PTR [rax],eax
   14003fa00:	nop
   14003fa01:	push   rbp
   14003fa02:	add    eax,DWORD PTR [rax]
   14003fa04:	xor    dh,dl
   14003fa06:	add    DWORD PTR [rax],eax
   14003fa08:	movabs eax,ds:0xb000037f440001d6
   14003fa11:	(bad)  
   14003fa12:	add    DWORD PTR [rax],eax
   14003fa14:	in     al,0xd6
   14003fa16:	add    DWORD PTR [rax],eax
   14003fa18:	nop
   14003fa19:	push   rbp
   14003fa1a:	add    eax,DWORD PTR [rax]
   14003fa1c:	lock (bad) 
   14003fa1e:	add    DWORD PTR [rax],eax
   14003fa20:	and    al,0xd7
   14003fa22:	add    DWORD PTR [rax],eax
   14003fa24:	nop
   14003fa25:	push   rbp
   14003fa26:	add    eax,DWORD PTR [rax]
   14003fa28:	xor    bh,dl
   14003fa2a:	add    DWORD PTR [rax],eax
   14003fa2c:	sahf   
   14003fa2d:	xlat   BYTE PTR ds:[rbx]
   14003fa2e:	add    DWORD PTR [rax],eax
   14003fa30:	ins    BYTE PTR es:[rdi],dx
   14003fa31:	jg     0x14003fa36
   14003fa33:	add    BYTE PTR [rax-0x2bfffe29],ah
   14003fa39:	xlat   BYTE PTR ds:[rbx]
   14003fa3a:	add    DWORD PTR [rax],eax
   14003fa3c:	nop
   14003fa3d:	push   rbp
   14003fa3e:	add    eax,DWORD PTR [rax]
   14003fa40:	loopne 0x14003fa19
   14003fa42:	add    DWORD PTR [rax],eax
   14003fa44:	adc    al,0xd8
   14003fa46:	add    DWORD PTR [rax],eax
   14003fa48:	nop
   14003fa49:	push   rbp
   14003fa4a:	add    eax,DWORD PTR [rax]
   14003fa4c:	and    al,bl
   14003fa4e:	add    DWORD PTR [rax],eax
   14003fa50:	mov    ds,eax
   14003fa52:	add    DWORD PTR [rax],eax
   14003fa54:	xchg   esp,eax
   14003fa55:	jg     0x14003fa5a
   14003fa57:	add    BYTE PTR [rax-0x3bfffe28],dl
   14003fa5d:	fadd   DWORD PTR [rcx]
   14003fa5f:	add    BYTE PTR [rax-0x2ffffcab],dl
   14003fa65:	fadd   DWORD PTR [rcx]
   14003fa67:	add    dl,dh
   14003fa69:	fadd   DWORD PTR [rcx]
   14003fa6b:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003fa6f:	add    BYTE PTR [rax],al
   14003fa71:	fld    DWORD PTR [rcx]
   14003fa73:	add    BYTE PTR [rdx],ah
   14003fa75:	fld    DWORD PTR [rcx]
   14003fa77:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003fa7b:	add    BYTE PTR [rax],dh
   14003fa7d:	fld    DWORD PTR [rcx]
   14003fa7f:	add    BYTE PTR [rdx-0x27],dl
   14003fa82:	add    DWORD PTR [rax],eax
   14003fa84:	sub    r8b,BYTE PTR [rbx]
   14003fa87:	add    BYTE PTR [rax-0x27],ah
   14003fa8a:	add    DWORD PTR [rax],eax
   14003fa8c:	jg     0x14003fa67
   14003fa8e:	add    DWORD PTR [rax],eax
   14003fa90:	sub    r8b,BYTE PTR [rbx]
   14003fa93:	add    BYTE PTR [rax-0x5dfffe27],al
   14003fa99:	fld    DWORD PTR [rcx]
   14003fa9b:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003fa9f:	add    BYTE PTR [rax-0x1bfffe27],dh
   14003faa5:	fld    DWORD PTR [rcx]
   14003faa7:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003faab:	add    al,dh
   14003faad:	fld    DWORD PTR [rcx]
   14003faaf:	add    BYTE PTR [rcx],ah
   14003fab1:	fiadd  DWORD PTR [rcx]
   14003fab3:	add    al,ch
   14003fab5:	pop    rdi
   14003fab6:	add    eax,DWORD PTR [rax]
   14003fab8:	(bad)  
   14003fab9:	fiadd  DWORD PTR [rcx]
   14003fabb:	add    BYTE PTR [rbp-0x26],bh
   14003fabe:	add    DWORD PTR [rax],eax
   14003fac0:	(bad)  
   14003fac1:	push   rbx
   14003fac2:	add    eax,DWORD PTR [rax]
   14003fac4:	sbb    dl,0x1
   14003fac7:	add    BYTE PTR [rdx+0x440001da],dh
   14003facd:	sub    al,BYTE PTR [rbx]
   14003facf:	add    al,al
   14003fad1:	fiadd  DWORD PTR [rcx]
   14003fad3:	add    ch,bh
   14003fad5:	fiadd  DWORD PTR [rcx]
   14003fad7:	add    BYTE PTR [rax+0x355],dl
   14003fadd:	fild   DWORD PTR [rcx]
   14003fadf:	add    BYTE PTR [rbx+rbx*8],dh
   14003fae2:	add    DWORD PTR [rax],eax
   14003fae4:	js     0x14003fb2b
   14003fae6:	add    eax,DWORD PTR [rax]
   14003fae8:	rex fild DWORD PTR [rcx]
   14003faeb:	add    BYTE PTR [rbx+rbx*8+0x1],dh
   14003faef:	add    BYTE PTR [rax],ah
   14003faf1:	(bad)  
   14003faf2:	add    eax,DWORD PTR [rax]
   14003faf4:	sbb    bl,0x1
   14003faf7:	add    BYTE PTR [rbx],cl
   14003faf9:	fadd   QWORD PTR [rcx]
   14003fafb:	add    BYTE PTR [rax+0x10000355],dl
   14003fb01:	fadd   QWORD PTR [rcx]
   14003fb03:	add    BYTE PTR [rcx-0x24],ah
   14003fb06:	add    DWORD PTR [rax],eax
   14003fb08:	rex.W pop rdi
   14003fb0a:	add    eax,DWORD PTR [rax]
   14003fb0c:	jo     0x14003faea
   14003fb0e:	add    DWORD PTR [rax],eax
   14003fb10:	scas   al,BYTE PTR es:[rdi]
   14003fb11:	fadd   QWORD PTR [rcx]
   14003fb13:	add    al,ch
   14003fb15:	pop    rsi
   14003fb16:	add    eax,DWORD PTR [rax]
   14003fb18:	mov    al,0xdc
   14003fb1a:	add    DWORD PTR [rax],eax
   14003fb1c:	and    ebx,ebp
   14003fb1e:	add    DWORD PTR [rax],eax
   14003fb20:	push   0x30000360
   14003fb25:	fld    QWORD PTR [rcx]
   14003fb27:	add    BYTE PTR [rsi+0x100001dd],bh
   14003fb2d:	pop    rsi
   14003fb2e:	add    eax,DWORD PTR [rax]
   14003fb30:	rcr    ch,0x1
   14003fb33:	add    al,ah
   14003fb35:	fld    QWORD PTR [rcx]
   14003fb37:	add    BYTE PTR [rax+0x53],ah
   14003fb3a:	add    eax,DWORD PTR [rax]
   14003fb3c:	loopne 0x14003fb1b
   14003fb3e:	add    DWORD PTR [rax],eax
   14003fb40:	add    esi,ebx
   14003fb42:	add    DWORD PTR [rax],eax
   14003fb44:	add    BYTE PTR [rax+0x3],ah
   14003fb47:	add    BYTE PTR [rax],dl
   14003fb49:	fiadd  WORD PTR [rcx]
   14003fb4b:	add    BYTE PTR [rax],ch
   14003fb4d:	fiadd  WORD PTR [rcx]
   14003fb4f:	add    BYTE PTR [rax+0x53],ah
   14003fb52:	add    eax,DWORD PTR [rax]
   14003fb54:	xor    dh,bl
   14003fb56:	add    DWORD PTR [rax],eax
   14003fb58:	pop    rsp
   14003fb59:	fiadd  WORD PTR [rcx]
   14003fb5b:	add    BYTE PTR [rax+0x60],al
   14003fb5e:	add    eax,DWORD PTR [rax]
   14003fb60:	(bad)  
   14003fb61:	fiadd  WORD PTR [rcx]
   14003fb63:	add    BYTE PTR [rcx],bl
   14003fb65:	fild   WORD PTR [rcx]
   14003fb67:	add    BYTE PTR [rax+0x5e],al
   14003fb6a:	add    eax,DWORD PTR [rax]
   14003fb6c:	and    bh,bl
   14003fb6e:	add    DWORD PTR [rax],eax
   14003fb70:	pop    rax
   14003fb71:	fild   WORD PTR [rcx]
   14003fb73:	add    BYTE PTR [rax],dl
   14003fb75:	pop    rdi
   14003fb76:	add    eax,DWORD PTR [rax]
   14003fb78:	(bad)  
   14003fb79:	fild   WORD PTR [rcx]
   14003fb7b:	add    ch,cl
   14003fb7d:	fild   WORD PTR [rcx]
   14003fb7f:	add    BYTE PTR [rax-0x2ffffca0],dh
   14003fb85:	fild   WORD PTR [rcx]
   14003fb87:	add    bh,bh
   14003fb89:	fild   WORD PTR [rcx]
   14003fb8b:	add    BYTE PTR [rax+0x45],bh
   14003fb8e:	add    eax,DWORD PTR [rax]
   14003fb90:	add    al,ah
   14003fb92:	add    DWORD PTR [rax],eax
   14003fb94:	and    eax,0x440001e0
   14003fb99:	sub    al,BYTE PTR [rbx]
   14003fb9b:	add    BYTE PTR [rax],dh
   14003fb9d:	loopne 0x14003fba0
   14003fb9f:	add    BYTE PTR [rbp-0x20],dh
   14003fba2:	add    DWORD PTR [rax],eax
   14003fba4:	mov    eax,0x80000339
   14003fba9:	loopne 0x14003fbac
   14003fbab:	add    BYTE PTR [rsi-0x47fffe20],bh
   14003fbb1:	cmp    DWORD PTR [rbx],eax
   14003fbb3:	add    al,al
   14003fbb5:	loopne 0x14003fbb8
   14003fbb7:	add    dh,bh
   14003fbb9:	loopne 0x14003fbbc
   14003fbbb:	add    BYTE PTR [rax],bh
   14003fbbd:	pop    rsi
   14003fbbe:	add    eax,DWORD PTR [rax]
   14003fbc0:	add    cl,ah
   14003fbc2:	add    DWORD PTR [rax],eax
   14003fbc4:	sub    esp,ecx
   14003fbc6:	add    DWORD PTR [rax],eax
   14003fbc8:	(bad)  
   14003fbc9:	push   rbx
   14003fbca:	add    eax,DWORD PTR [rax]
   14003fbcc:	xor    cl,ah
   14003fbce:	add    DWORD PTR [rax],eax
   14003fbd0:	(bad)  
   14003fbd1:	loope  0x14003fbd4
   14003fbd3:	add    al,bl
   14003fbd5:	pop    rbp
   14003fbd6:	add    eax,DWORD PTR [rax]
   14003fbd8:	lock loope 0x14003fbdc
   14003fbdb:	add    BYTE PTR [rsi],ah
   14003fbdd:	loop   0x14003fbe0
   14003fbdf:	add    BYTE PTR [rax+0x45],bh
   14003fbe2:	add    eax,DWORD PTR [rax]
   14003fbe4:	xor    dl,ah
   14003fbe6:	add    DWORD PTR [rax],eax
   14003fbe8:	pop    rdx
   14003fbe9:	loop   0x14003fbec
   14003fbeb:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14003fbef:	add    BYTE PTR [rax-0x1e],ah
   14003fbf2:	add    DWORD PTR [rax],eax
   14003fbf4:	and    ebx,0x7ddc0001
   14003fbfa:	add    eax,DWORD PTR [rax]
   14003fbfc:	mov    al,0xe3
   14003fbfe:	add    DWORD PTR [rax],eax
   14003fc00:	mov    esi,0xd40001e3
   14003fc05:	jge    0x14003fc0a
   14003fc07:	add    al,al
   14003fc09:	jrcxz  0x14003fc0c
   14003fc0b:	add    dh,cl
   14003fc0d:	jrcxz  0x14003fc10
   14003fc0f:	add    ah,dl
   14003fc11:	jge    0x14003fc16
   14003fc13:	add    al,dl
   14003fc15:	jrcxz  0x14003fc18
   14003fc17:	add    BYTE PTR [rcx-0x1c],bl
   14003fc1a:	add    DWORD PTR [rax],eax
   14003fc1c:	pop    rax
   14003fc1d:	jl     0x14003fc22
   14003fc1f:	add    BYTE PTR [rax-0x1c],ah
   14003fc22:	add    DWORD PTR [rax],eax
   14003fc24:	out    dx,eax
   14003fc25:	in     al,0x1
   14003fc27:	add    BYTE PTR [rax],ch
   14003fc29:	jge    0x14003fc2e
   14003fc2b:	add    al,dh
   14003fc2d:	in     al,0x1
   14003fc2f:	add    BYTE PTR [rdi],bh
   14003fc31:	in     eax,0x1
   14003fc33:	add    BYTE PTR [rax],dl
   14003fc35:	push   rbp
   14003fc36:	add    eax,DWORD PTR [rax]
   14003fc38:	rex in eax,0x1
   14003fc3b:	add    cl,cl
   14003fc3d:	in     eax,0x1
   14003fc3f:	add    BYTE PTR [rax-0x2ffffc84],al
   14003fc45:	in     eax,0x1
   14003fc47:	add    BYTE PTR [rcx-0x1a],al
   14003fc4a:	add    DWORD PTR [rax],eax
   14003fc4c:	test   al,0x7c
   14003fc4e:	add    eax,DWORD PTR [rax]
   14003fc50:	push   rax
   14003fc51:	out    0x1,al
   14003fc53:	add    BYTE PTR [rdi-0x1a],bh
   14003fc56:	add    DWORD PTR [rax],eax
   14003fc58:	(bad)  
   14003fc59:	push   rbx
   14003fc5a:	add    eax,DWORD PTR [rax]
   14003fc5c:	and    dh,0x1
   14003fc5f:	add    BYTE PTR [rbp+0x600001e6],bl
   14003fc65:	push   rbx
   14003fc66:	add    eax,DWORD PTR [rax]
   14003fc68:	movabs al,ds:0x700001e77c0001e6
   14003fc71:	pop    rdi
   14003fc72:	add    eax,DWORD PTR [rax]
   14003fc74:	and    bh,0x1
   14003fc77:	add    BYTE PTR [rcx],ah
   14003fc79:	call   0x19523fc7f
   14003fc7e:	add    eax,DWORD PTR [rax]
   14003fc80:	xor    al,ch
   14003fc82:	add    DWORD PTR [rax],eax
   14003fc84:	(bad)  
   14003fc85:	jmp    0x19523fc8b
   14003fc8a:	add    eax,DWORD PTR [rax]
   14003fc8c:	adc    cl,ch
   14003fc8e:	add    DWORD PTR [rax],eax
   14003fc90:	xor    ch,cl
   14003fc92:	add    DWORD PTR [rax],eax
   14003fc94:	sub    r8b,BYTE PTR [rbx]
   14003fc97:	add    BYTE PTR [rax-0x17],al
   14003fc9a:	add    DWORD PTR [rax],eax
   14003fc9c:	xchg   esp,eax
   14003fc9d:	jmp    0x16a47fca3
   14003fca2:	add    eax,DWORD PTR [rax]
   14003fca4:	movabs al,ds:0x440001e9f40001e9
   14003fcad:	sub    al,BYTE PTR [rbx]
   14003fcaf:	add    BYTE PTR [rax],dl
   14003fcb1:	(bad)  
   14003fcb2:	add    DWORD PTR [rax],eax
   14003fcb4:	(bad)  
   14003fcb5:	(bad)  
   14003fcb6:	add    DWORD PTR [rax],eax
   14003fcb8:	(bad)  
   14003fcb9:	push   rbx
   14003fcba:	add    eax,DWORD PTR [rax]
   14003fcbc:	rex (bad) 
   14003fcbe:	add    DWORD PTR [rax],eax
   14003fcc0:	pop    rax
   14003fcc1:	(bad)  
   14003fcc2:	add    DWORD PTR [rax],eax
   14003fcc4:	(bad)  
   14003fcc5:	push   rbx
   14003fcc6:	add    eax,DWORD PTR [rax]
   14003fcc8:	(bad)  
   14003fcc9:	(bad)  
   14003fcca:	add    DWORD PTR [rax],eax
   14003fccc:	(bad)  
   14003fccd:	(bad)  
   14003fcce:	add    DWORD PTR [rax],eax
   14003fcd0:	sub    r8b,BYTE PTR [rbx]
   14003fcd3:	add    BYTE PTR [rax-0x50fffe16],dl
   14003fcd9:	(bad)  
   14003fcda:	add    DWORD PTR [rax],eax
   14003fcdc:	sub    r8b,BYTE PTR [rbx]
   14003fcdf:	add    BYTE PTR [rax+0x4e0001ea],dh
   14003fce5:	jmp    0x14003fce8
   14003fce7:	add    BYTE PTR [rax],dl
   14003fce9:	push   rbp
   14003fcea:	add    eax,DWORD PTR [rax]
   14003fcec:	push   rax
   14003fced:	jmp    0x14003fcf0
   14003fcef:	add    dh,bh
   14003fcf1:	jmp    0x14003fcf4
   14003fcf3:	add    BYTE PTR [rax+0x37d],ah
   14003fcf9:	in     al,dx
   14003fcfa:	add    DWORD PTR [rax],eax
   14003fcfc:	sub    al,0xec
   14003fcfe:	add    DWORD PTR [rax],eax
   14003fd00:	nop
   14003fd01:	push   rbp
   14003fd02:	add    eax,DWORD PTR [rax]
   14003fd04:	xor    ah,ch
   14003fd06:	add    DWORD PTR [rax],eax
   14003fd08:	push   rdx
   14003fd09:	in     al,dx
   14003fd0a:	add    DWORD PTR [rax],eax
   14003fd0c:	nop
   14003fd0d:	push   rbp
   14003fd0e:	add    eax,DWORD PTR [rax]
   14003fd10:	(bad)  
   14003fd11:	in     al,dx
   14003fd12:	add    DWORD PTR [rax],eax
   14003fd14:	or     ebp,ebp
   14003fd16:	add    DWORD PTR [rax],eax
   14003fd18:	rex.W jge 0x14003fd1e
   14003fd1b:	add    BYTE PTR [rax],dl
   14003fd1d:	in     eax,dx
   14003fd1e:	add    DWORD PTR [rax],eax
   14003fd20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003fd21:	in     eax,dx
   14003fd22:	add    DWORD PTR [rax],eax
   14003fd24:	enter  0x37d,0x0
   14003fd28:	mov    al,0xed
   14003fd2a:	add    DWORD PTR [rax],eax
   14003fd2c:	enter  0x1ed,0x0
   14003fd30:	(bad)  
   14003fd31:	push   rbx
   14003fd32:	add    eax,DWORD PTR [rax]
   14003fd34:	shr    ch,1
   14003fd36:	add    DWORD PTR [rax],eax
   14003fd38:	call   0x1a003ff2a
   14003fd3d:	push   rbx
   14003fd3e:	add    eax,DWORD PTR [rax]
   14003fd40:	adc    dh,ch
   14003fd42:	add    DWORD PTR [rax],eax
   14003fd44:	sub    dh,ch
   14003fd46:	add    DWORD PTR [rax],eax
   14003fd48:	(bad)  
   14003fd49:	push   rbx
   14003fd4a:	add    eax,DWORD PTR [rax]
   14003fd4c:	xor    dh,ch
   14003fd4e:	add    DWORD PTR [rax],eax
   14003fd50:	rex.W out dx,al
   14003fd52:	add    DWORD PTR [rax],eax
   14003fd54:	(bad)  
   14003fd55:	push   rbx
   14003fd56:	add    eax,DWORD PTR [rax]
   14003fd58:	push   rax
   14003fd59:	out    dx,al
   14003fd5a:	add    DWORD PTR [rax],eax
   14003fd5c:	jne    0x14003fd4c
   14003fd5e:	add    DWORD PTR [rax],eax
   14003fd60:	adc    BYTE PTR [rbp+0x3],dl
   14003fd63:	add    BYTE PTR [rax-0x5afffe12],al
   14003fd69:	out    dx,al
   14003fd6a:	add    DWORD PTR [rax],eax
   14003fd6c:	adc    BYTE PTR [rbp+0x3],dl
   14003fd6f:	add    BYTE PTR [rax-0x11fffe12],dh
   14003fd75:	out    dx,al
   14003fd76:	add    DWORD PTR [rax],eax
   14003fd78:	cmp    BYTE PTR [rsi+0x3],bl
   14003fd7b:	add    al,dh
   14003fd7d:	out    dx,al
   14003fd7e:	add    DWORD PTR [rax],eax
   14003fd80:	cs out dx,eax
   14003fd82:	add    DWORD PTR [rax],eax
   14003fd84:	cmp    BYTE PTR [rsi+0x3],bl
   14003fd87:	add    BYTE PTR [rax],dh
   14003fd89:	out    dx,eax
   14003fd8a:	add    DWORD PTR [rax],eax
   14003fd8c:	mov    edx,0xc80001ef
   14003fd91:	jge    0x14003fd96
   14003fd93:	add    al,al
   14003fd95:	out    dx,eax
   14003fd96:	add    DWORD PTR [rax],eax
   14003fd98:	outs   dx,BYTE PTR ds:[rsi]
   14003fd99:	lock add DWORD PTR [rax],eax
   14003fd9c:	fdivr  DWORD PTR [rbx+rax*1+0x0]
   14003fda0:	jo     0x14003fd92
   14003fda2:	add    DWORD PTR [rax],eax
   14003fda4:	(bad)  
   14003fda5:	icebp  
   14003fda6:	add    DWORD PTR [rax],eax
   14003fda8:	add    BYTE PTR [rbp+0x3],bh
   14003fdab:	add    BYTE PTR [rax],ah
   14003fdad:	icebp  
   14003fdae:	add    DWORD PTR [rax],eax
   14003fdb0:	mov    al,0xf1
   14003fdb2:	add    DWORD PTR [rax],eax
   14003fdb4:	cmp    BYTE PTR [rbp+0x3],0x0
   14003fdb8:	mov    al,0xf1
   14003fdba:	add    DWORD PTR [rax],eax
   14003fdbc:	repnz add DWORD PTR cs:[rax],eax
   14003fdc0:	mov    esp,0x4000037f
   14003fdc5:	repnz add DWORD PTR [rax],eax
   14003fdc8:	push   rbp
   14003fdc9:	hlt    
   14003fdca:	add    DWORD PTR [rax],eax
   14003fdcc:	adc    BYTE PTR [rax-0xb9ffffd],al
   14003fdd2:	add    DWORD PTR [rax],eax
   14003fdd4:	mov    esp,esi
   14003fdd6:	add    DWORD PTR [rax],eax
   14003fdd8:	add    BYTE PTR [rax-0xb6ffffd],0x1
   14003fddf:	add    BYTE PTR [rsp+rsi*8-0x7f77ffff],dh
   14003fde6:	add    eax,DWORD PTR [rax]
   14003fde8:	shl    ah,0x1
   14003fdeb:	add    BYTE PTR [rsi*8-0x7f6fffff],cl
   14003fdf2:	add    eax,DWORD PTR [rax]
   14003fdf4:	and    ch,dh
   14003fdf6:	add    DWORD PTR [rax],eax
   14003fdf8:	mov    ebp,?
   14003fdfa:	add    DWORD PTR [rax],eax
   14003fdfc:	rol    BYTE PTR [rax-0xa5ffffd],0x1
   14003fe03:	add    BYTE PTR [rbp+rsi*8-0x7f2bffff],bh
   14003fe0a:	add    eax,DWORD PTR [rax]
   14003fe0c:	shl    ch,1
   14003fe0e:	add    DWORD PTR [rax],eax
   14003fe10:	div    ch
   14003fe12:	add    DWORD PTR [rax],eax
   14003fe14:	fadd   QWORD PTR [rax-0x9fffffd]
   14003fe1a:	add    DWORD PTR [rax],eax
   14003fe1c:	sub    dh,dh
   14003fe1e:	add    DWORD PTR [rax],eax
   14003fe20:	in     al,0x80
   14003fe22:	add    eax,DWORD PTR [rax]
   14003fe24:	jo     0x14003fe1c
   14003fe26:	add    DWORD PTR [rax],eax
   14003fe28:	push   rdi
   14003fe29:	test   DWORD PTR [rcx],0x380ec00
   14003fe2f:	add    BYTE PTR [rax-0x9],ah
   14003fe32:	add    DWORD PTR [rax],eax
   14003fe34:	or     edi,eax
   14003fe36:	add    DWORD PTR [rax],eax
   14003fe38:	sub    al,0x81
   14003fe3a:	add    eax,DWORD PTR [rax]
   14003fe3c:	adc    al,bh
   14003fe3e:	add    DWORD PTR [rax],eax
   14003fe40:	sub    al,0xf8
   14003fe42:	add    DWORD PTR [rax],eax
   14003fe44:	add    DWORD PTR fs:[rbx],0x1f84000
   14003fe4b:	add    BYTE PTR [rsi-0x8],ah
   14003fe4e:	add    DWORD PTR [rax],eax
   14003fe50:	ins    BYTE PTR es:[rdi],dx
   14003fe51:	add    DWORD PTR [rbx],0x1f87000
   14003fe57:	add    BYTE PTR [rax+0x740001f8],dl
   14003fe5d:	add    DWORD PTR [rbx],0x1f8a000
   14003fe63:	add    dl,cl
   14003fe65:	clc    
   14003fe66:	add    DWORD PTR [rax],eax
   14003fe68:	jl     0x14003fdeb
   14003fe6a:	add    eax,DWORD PTR [rax]
   14003fe6c:	sar    al,1
   14003fe6e:	add    DWORD PTR [rax],eax
   14003fe70:	and    ecx,edi
   14003fe72:	add    DWORD PTR [rax],eax
   14003fe74:	or     al,0x82
   14003fe76:	add    eax,DWORD PTR [rax]
   14003fe78:	xor    cl,bh
   14003fe7a:	add    DWORD PTR [rax],eax
   14003fe7c:	jnp    0x14003fe77
   14003fe7e:	add    DWORD PTR [rax],eax
   14003fe80:	push   rsp
   14003fe81:	(bad)  
   14003fe82:	add    eax,DWORD PTR [rax]
   14003fe84:	nop
   14003fe85:	stc    
   14003fe86:	add    DWORD PTR [rax],eax
   14003fe88:	mov    edx,0x9c0001f9
   14003fe8d:	(bad)  
   14003fe8e:	add    eax,DWORD PTR [rax]
   14003fe90:	sar    cl,0x1
   14003fe93:	add    BYTE PTR [rdx+rdi*8],al
   14003fe96:	add    DWORD PTR [rax],eax
   14003fe98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003fe99:	(bad)  
   14003fe9a:	add    eax,DWORD PTR [rax]
   14003fe9c:	adc    dl,bh
   14003fe9e:	add    DWORD PTR [rax],eax
   14003fea0:	cmp    bh,dl
   14003fea2:	add    DWORD PTR [rax],eax
   14003fea4:	lods   al,BYTE PTR ds:[rsi]
   14003fea5:	(bad)  
   14003fea6:	add    eax,DWORD PTR [rax]
   14003fea8:	rex cli 
   14003feaa:	add    DWORD PTR [rax],eax
   14003feac:	(bad)  
   14003fead:	cli    
   14003feae:	add    DWORD PTR [rax],eax
   14003feb0:	mov    ah,0x82
   14003feb2:	add    eax,DWORD PTR [rax]
   14003feb4:	jo     0x14003feb0
   14003feb6:	add    DWORD PTR [rax],eax
   14003feb8:	mov    esi,0xbc0001fa
   14003febd:	(bad)  
   14003febe:	add    eax,DWORD PTR [rax]
   14003fec0:	sar    dl,1
   14003fec2:	add    DWORD PTR [rax],eax
   14003fec4:	pop    rsi
   14003fec5:	sti    
   14003fec6:	add    DWORD PTR [rax],eax
   14003fec8:	hlt    
   14003fec9:	(bad)  
   14003feca:	add    eax,DWORD PTR [rax]
   14003fecc:	jo     0x14003fec9
   14003fece:	add    DWORD PTR [rax],eax
   14003fed0:	or     esp,edi
   14003fed2:	add    DWORD PTR [rax],eax
   14003fed4:	sub    al,0x83
   14003fed6:	add    eax,DWORD PTR [rax]
   14003fed8:	adc    ah,bh
   14003feda:	add    DWORD PTR [rax],eax
   14003fedc:	mov    ch,0xfc
   14003fede:	add    DWORD PTR [rax],eax
   14003fee0:	add    DWORD PTR fs:[rbx],0x0
   14003fee4:	sar    ah,0x1
   14003fee7:	add    BYTE PTR [rbx-0x3],dl
   14003feea:	add    DWORD PTR [rax],eax
   14003feec:	lods   al,BYTE PTR ds:[rsi]
   14003feed:	add    DWORD PTR [rbx],0x0
   14003fef0:	(bad)  
   14003fef1:	std    
   14003fef2:	add    DWORD PTR [rax],eax
   14003fef4:	(bad)  
   14003fef6:	add    DWORD PTR [rax],eax
   14003fef8:	hlt    
   14003fef9:	add    DWORD PTR [rbx],0x0
   14003fefc:	lock std 
   14003fefe:	add    DWORD PTR [rax],eax
   14003ff00:	or     edi,edi
   14003ff02:	add    DWORD PTR [rax],eax
   14003ff04:	cmp    al,0x84
   14003ff06:	add    eax,DWORD PTR [rax]
   14003ff08:	and    bh,bh
   14003ff0a:	add    DWORD PTR [rax],eax
   14003ff0c:	fdiv   st(7),st
   14003ff0e:	add    DWORD PTR [rax],eax
   14003ff10:	cwde   
   14003ff11:	test   BYTE PTR [rbx],al
   14003ff13:	add    al,dh
   14003ff15:	inc    DWORD PTR [rcx]
   14003ff17:	add    BYTE PTR [rdi-0x2ffffe00],ah
   14003ff1d:	test   BYTE PTR [rbx],al
   14003ff1f:	add    BYTE PTR [rax+0x2e000200],dh
   14003ff25:	add    DWORD PTR [rdx],eax
   14003ff27:	add    BYTE PTR [rax],cl
   14003ff29:	test   DWORD PTR [rbx],eax
   14003ff2b:	add    BYTE PTR [rax+0x1],al
   14003ff2e:	add    al,BYTE PTR [rax]
   14003ff30:	popf   
   14003ff31:	add    DWORD PTR [rdx],eax
   14003ff33:	add    BYTE PTR [rax-0x7b],al
   14003ff36:	add    eax,DWORD PTR [rax]
   14003ff38:	lock add DWORD PTR [rdx],eax
   14003ff3b:	add    BYTE PTR [rbp+0x78000202],bh
   14003ff41:	test   DWORD PTR [rbx],eax
   14003ff43:	add    BYTE PTR [rax],ah
   14003ff45:	add    eax,DWORD PTR [rdx]
   14003ff47:	add    BYTE PTR [rcx+0x3],ah
   14003ff4a:	add    al,BYTE PTR [rax]
   14003ff4c:	mov    WORD PTR [rcx+0x3700003],es
   14003ff52:	add    al,BYTE PTR [rax]
   14003ff54:	scas   al,BYTE PTR es:[rdi]
   14003ff55:	add    eax,DWORD PTR [rdx]
   14003ff57:	add    BYTE PTR [rcx+rax*4+0x3b00003],al
   14003ff5e:	add    al,BYTE PTR [rax]
   14003ff60:	cmc    
   14003ff61:	add    eax,DWORD PTR [rdx]
   14003ff63:	add    BYTE PTR [rax],dl
   14003ff65:	push   rbp
   14003ff66:	add    eax,DWORD PTR [rax]
   14003ff68:	adc    BYTE PTR [rdx+rax*1],al
   14003ff6b:	add    BYTE PTR [rcx+0x4],ch
   14003ff6e:	add    al,BYTE PTR [rax]
   14003ff70:	or     BYTE PTR [rip+0x4700003],dh        # 0x14473ff79
   14003ff76:	add    al,BYTE PTR [rax]
   14003ff78:	retf   0x204
   14003ff7b:	add    BYTE PTR [rax],cl
   14003ff7d:	xor    eax,0x4d00003
   14003ff82:	add    al,BYTE PTR [rax]
   14003ff84:	pop    rdx
   14003ff85:	add    eax,0x5e380002
   14003ff8a:	add    eax,DWORD PTR [rax]
   14003ff8c:	(bad)  
   14003ff8d:	add    eax,0x5960002
   14003ff92:	add    al,BYTE PTR [rax]
   14003ff94:	js     0x14003ffdb
   14003ff96:	add    eax,DWORD PTR [rax]
   14003ff98:	loopne 0x14003ff9f
   14003ff9a:	add    al,BYTE PTR [rax]
   14003ff9c:	cmp    eax,0x4000206
   14003ffa1:	(bad)  
   14003ffa2:	add    eax,DWORD PTR [rax]
   14003ffa4:	rex (bad) 
   14003ffa6:	add    al,BYTE PTR [rax]
   14003ffa8:	popf   
   14003ffa9:	(bad)  
   14003ffaa:	add    al,BYTE PTR [rax]
   14003ffac:	add    al,0x82
   14003ffae:	add    eax,DWORD PTR [rax]
   14003ffb0:	movabs al,ds:0x60000206b9000206
   14003ffb9:	push   rbx
   14003ffba:	add    eax,DWORD PTR [rax]
   14003ffbc:	rol    BYTE PTR [rsi],0x2
   14003ffbf:	add    ah,bl
   14003ffc1:	(bad)  
   14003ffc2:	add    al,BYTE PTR [rax]
   14003ffc4:	(bad)  
   14003ffc5:	push   rbx
   14003ffc6:	add    eax,DWORD PTR [rax]
   14003ffc8:	loopne 0x14003ffd0
   14003ffca:	add    al,BYTE PTR [rax]
   14003ffcc:	(bad)  
   14003ffcd:	(bad)  
   14003ffce:	add    al,BYTE PTR [rax]
   14003ffd0:	xchg   esp,eax
   14003ffd1:	add    DWORD PTR [rbx],0x2074000
   14003ffd7:	add    BYTE PTR [rax-0x5bfffdf8],bh
   14003ffdd:	add    DWORD PTR [rbx],0x208c000
   14003ffe3:	add    BYTE PTR [rdi],dh
   14003ffe5:	or     DWORD PTR [rdx],eax
   14003ffe7:	add    BYTE PTR [rcx+rax*4+0x9500003],bl
   14003ffee:	add    al,BYTE PTR [rax]
   14003fff0:	mov    edx,0x800020a
   14003fff5:	xchg   BYTE PTR [rbx],al
   14003fff7:	add    al,al
   14003fff9:	or     al,BYTE PTR [rdx]
   14003fffb:	add    BYTE PTR [rbx+rcx*1+0x2],bl
   14003ffff:	add    BYTE PTR [rax],dl
   140040001:	xchg   BYTE PTR [rbx],al
   140040003:	add    BYTE PTR [rax+0xb],ah
   140040006:	add    al,BYTE PTR [rax]
   140040008:	nop
   140040009:	or     eax,DWORD PTR [rdx]
   14004000b:	add    BYTE PTR [rax],al
   14004000d:	xchg   BYTE PTR [rbx],al
   14004000f:	add    al,bl
   140040011:	adc    BYTE PTR [rdx],al
   140040013:	add    BYTE PTR [rbx],dh
   140040015:	adc    DWORD PTR [rdx],eax
   140040017:	add    ah,dl
   140040019:	jge    0x14004001e
   14004001b:	add    BYTE PTR [rcx+rdx*1],dh
   14004001e:	add    al,BYTE PTR [rax]
   140040020:	movsxd edx,DWORD PTR [rcx]
   140040022:	add    al,BYTE PTR [rax]
   140040024:	mov    esp,0x64000387
   140040029:	adc    DWORD PTR [rdx],eax
   14004002b:	add    bh,dl
   14004002d:	adc    DWORD PTR [rdx],eax
   14004002f:	add    BYTE PTR [rax],bl
   140040031:	xchg   BYTE PTR [rbx],al
   140040033:	add    al,bl
   140040035:	adc    DWORD PTR [rdx],eax
   140040037:	add    BYTE PTR [rsi-0x2bfffdee],ah
   14004003d:	jge    0x140040042
   14004003f:	add    BYTE PTR [rax+0xb000212],ch
   140040045:	adc    eax,DWORD PTR [rdx]
   140040047:	add    BYTE PTR [rsi+rax*4+0x3],dl
   14004004b:	add    BYTE PTR [rbx+rdx*1],cl
   14004004e:	add    al,BYTE PTR [rax]
   140040050:	(bad)  
   140040051:	adc    eax,0x865c0002
   140040056:	add    eax,DWORD PTR [rax]
   140040058:	or     BYTE PTR [rip+0x151a0002],dl        # 0x1551e0060
   14004005e:	add    al,BYTE PTR [rax]
   140040060:	(bad)  
   140040061:	jge    0x140040066
   140040063:	add    BYTE PTR [rdx*1+0x15790002],bl
   14004006a:	add    al,BYTE PTR [rax]
   14004006c:	mov    WORD PTR [rsi+0x157c0003],es
   140040072:	add    al,BYTE PTR [rax]
   140040074:	(bad)  
   140040075:	adc    eax,0x86b40002
   14004007a:	add    eax,DWORD PTR [rax]
   14004007c:	enter  0x215,0x0
   140040080:	(bad)  
   140040081:	(bad)  
   140040082:	add    al,BYTE PTR [rax]
   140040084:	mov    ah,0x87
   140040086:	add    eax,DWORD PTR [rax]
   140040088:	sbb    BYTE PTR [rsi],dl
   14004008a:	add    al,BYTE PTR [rax]
   14004008c:	enter  0x216,0x0
   140040090:	fadd   QWORD PTR [rsi+0x16c80003]
   140040096:	add    al,BYTE PTR [rax]
   140040098:	fist   WORD PTR [rsi]
   14004009a:	add    al,BYTE PTR [rax]
   14004009c:	(bad)  
   14004009d:	jge    0x1400400a2
   14004009f:	add    ah,dh
   1400400a1:	(bad)  
   1400400a2:	add    al,BYTE PTR [rax]
   1400400a4:	pop    rsi
   1400400a5:	(bad)  
   1400400a6:	add    al,BYTE PTR [rax]
   1400400a8:	cld    
   1400400a9:	xchg   BYTE PTR [rbx],al
   1400400ab:	add    BYTE PTR [rax+0x17],ah
   1400400ae:	add    al,BYTE PTR [rax]
   1400400b0:	jge    0x1400400c9
   1400400b2:	add    al,BYTE PTR [rax]
   1400400b4:	(bad)  
   1400400b5:	jge    0x1400400ba
   1400400b7:	add    BYTE PTR [rax-0x1cfffde9],al
   1400400bd:	(bad)  
   1400400be:	add    al,BYTE PTR [rax]
   1400400c0:	mov    ah,0x87
   1400400c2:	add    eax,DWORD PTR [rax]
   1400400c4:	in     al,0x17
   1400400c6:	add    al,BYTE PTR [rax]
   1400400c8:	jae    0x1400400e2
   1400400ca:	add    al,BYTE PTR [rax]
   1400400cc:	or     al,0x87
   1400400ce:	add    eax,DWORD PTR [rax]
   1400400d0:	nop
   1400400d1:	sbb    BYTE PTR [rdx],al
   1400400d3:	add    BYTE PTR [rdi+0x28000218],ch
   1400400d9:	xchg   DWORD PTR [rbx],eax
   1400400db:	add    al,ah
   1400400dd:	sbb    BYTE PTR [rdx],al
   1400400df:	add    BYTE PTR [rsi],ch
   1400400e1:	sbb    DWORD PTR [rdx],eax
   1400400e3:	add    BYTE PTR [rax],dh
   1400400e5:	xchg   DWORD PTR [rbx],eax
   1400400e7:	add    BYTE PTR [rax+0x19],cl
   1400400ea:	add    al,BYTE PTR [rax]
   1400400ec:	fstp   QWORD PTR [rcx]
   1400400ee:	add    al,BYTE PTR [rax]
   1400400f0:	or     al,0x87
   1400400f2:	add    eax,DWORD PTR [rax]
   1400400f4:	loopne 0x14004010f
   1400400f6:	add    al,BYTE PTR [rax]
   1400400f8:	sbb    BYTE PTR [rdx],bl
   1400400fa:	add    al,BYTE PTR [rax]
   1400400fc:	(bad)  
   1400400fd:	jge    0x140040102
   1400400ff:	add    BYTE PTR [rax],bl
   140040101:	sbb    al,BYTE PTR [rdx]
   140040103:	add    BYTE PTR [rdi],ch
   140040105:	sbb    al,BYTE PTR [rdx]
   140040107:	add    ah,dl
   140040109:	jge    0x14004010e
   14004010b:	add    BYTE PTR [rax-0x22fffde6],dl
   140040111:	sbb    al,BYTE PTR [rdx]
   140040113:	add    BYTE PTR [rax],bh
   140040115:	xchg   DWORD PTR [rbx],eax
   140040117:	add    BYTE PTR [rax],dl
   140040119:	sbb    eax,DWORD PTR [rdx]
   14004011b:	add    BYTE PTR [rbx+rbx*1-0x78a3fffe],bh
   140040122:	add    eax,DWORD PTR [rax]
   140040124:	(bad)  
   140040125:	sbb    eax,DWORD PTR [rdx]
   140040127:	add    ah,bh
   140040129:	sbb    eax,DWORD PTR [rdx]
   14004012b:	add    BYTE PTR [rdi+rax*4+0x1bfc0003],bh
   140040132:	add    al,BYTE PTR [rax]
   140040134:	xor    al,0x1c
   140040136:	add    al,BYTE PTR [rax]
   140040138:	mov    esp,0x58000387
   14004013d:	sbb    al,0x2
   14004013f:	add    BYTE PTR [rcx-0x4bfffde4],ah
   140040145:	xchg   DWORD PTR [rbx],eax
   140040147:	add    BYTE PTR [rsp+rbx*1+0x1d750002],ah
   14004014e:	add    al,BYTE PTR [rax]
   140040150:	adc    BYTE PTR [rbp+0x3],dl
   140040153:	add    BYTE PTR [rax+0x4d00021d],ch
   140040159:	(bad)  
   14004015a:	add    al,BYTE PTR [rax]
   14004015c:	mov    esp,0x50000387
   140040161:	(bad)  
   140040162:	add    al,BYTE PTR [rax]
   140040164:	test   BYTE PTR [rsi],bl
   140040166:	add    al,BYTE PTR [rax]
   140040168:	mov    ah,0x87
   14004016a:	add    eax,DWORD PTR [rax]
   14004016c:	movabs al,ds:0x6800021f3c00021e
   140040175:	xchg   DWORD PTR [rbx],eax
   140040177:	add    BYTE PTR [rax+0x1f],al
   14004017a:	add    al,BYTE PTR [rax]
   14004017c:	ret    
   14004017d:	and    BYTE PTR [rdx],al
   14004017f:	add    BYTE PTR [rax-0x79],bh
   140040182:	add    eax,DWORD PTR [rax]
   140040184:	shl    BYTE PTR [rax],1
   140040186:	add    al,BYTE PTR [rax]
   140040188:	adc    BYTE PTR [rcx],ah
   14004018a:	add    al,BYTE PTR [rax]
   14004018c:	mov    ah,0x87
   14004018e:	add    eax,DWORD PTR [rax]
   140040190:	adc    BYTE PTR [rcx],ah
   140040192:	add    al,BYTE PTR [rax]
   140040194:	and    QWORD PTR [r10],r8
   140040197:	add    BYTE PTR [rdi+rax*4+0x21500003],dh
   14004019e:	add    al,BYTE PTR [rax]
   1400401a0:	movabs ds:0xb0000387bc000221,eax
   1400401a9:	and    DWORD PTR [rdx],eax
   1400401ab:	add    ah,ah
   1400401ad:	and    DWORD PTR [rdx],eax
   1400401af:	add    BYTE PTR [rdi+rax*4+0x22200003],ch
   1400401b6:	add    al,BYTE PTR [rax]
   1400401b8:	rex.WB and al,BYTE PTR [r10]
   1400401bb:	add    BYTE PTR [rdi+rax*4+0x22600003],bh
   1400401c2:	add    al,BYTE PTR [rax]
   1400401c4:	js     0x1400401e8
   1400401c6:	add    al,BYTE PTR [rax]
   1400401c8:	in     al,dx
   1400401c9:	sub    eax,DWORD PTR [rbx]
   1400401cb:	add    BYTE PTR [rax+0x22],bh
   1400401ce:	add    al,BYTE PTR [rax]
   1400401d0:	xchg   edi,eax
   1400401d1:	and    al,BYTE PTR [rdx]
   1400401d3:	add    ah,dh
   1400401d5:	sub    eax,DWORD PTR [rbx]
   1400401d7:	add    BYTE PTR [rdi-0x49fffdde],dl
   1400401dd:	and    al,BYTE PTR [rdx]
   1400401df:	add    ah,bh
   1400401e1:	sub    eax,DWORD PTR [rbx]
   1400401e3:	add    BYTE PTR [rsi-0x30fffdde],dh
   1400401e9:	and    al,BYTE PTR [rdx]
   1400401eb:	add    BYTE PTR [rsp+rbp*1],al
   1400401ee:	add    eax,DWORD PTR [rax]
   1400401f0:	iret   
   1400401f1:	and    al,BYTE PTR [rdx]
   1400401f3:	add    bh,ah
   1400401f5:	and    al,BYTE PTR [rdx]
   1400401f7:	add    BYTE PTR [rsp+rbp*1+0x3],bl
   1400401fb:	add    bh,ah
   1400401fd:	and    al,BYTE PTR [rdx]
   1400401ff:	add    BYTE PTR [rsi],al
   140040201:	and    eax,DWORD PTR [rdx]
   140040203:	add    BYTE PTR [rsp+rbp*1+0x3],ah
   140040207:	add    BYTE PTR [rsi],al
   140040209:	and    eax,DWORD PTR [rdx]
   14004020b:	add    BYTE PTR [rip+0x6c000223],ah        # 0x1ac040434
   140040211:	sub    al,0x3
   140040213:	add    BYTE PTR [rip+0x3e000223],ah        # 0x17e04043c
   140040219:	and    eax,DWORD PTR [rdx]
   14004021b:	add    ah,dh
   14004021d:	sub    eax,0x233e0003
   140040222:	add    al,BYTE PTR [rax]
   140040224:	push   rsi
   140040225:	and    eax,DWORD PTR [rdx]
   140040227:	add    ah,bh
   140040229:	sub    eax,0x23560003
   14004022e:	add    al,BYTE PTR [rax]
   140040230:	and    BYTE PTR [rbx],0x2
   140040233:	add    BYTE PTR [rsi+rbp*1],al
   140040236:	add    eax,DWORD PTR [rax]
   140040238:	and    BYTE PTR [rbx],0x2
   14004023b:	add    BYTE PTR [rbx+0xc000223],bl
   140040241:	add    eax,DWORD PTR cs:[rax]
   140040244:	fwait
   140040245:	and    eax,DWORD PTR [rdx]
   140040247:	add    BYTE PTR [rdi+0x1c000223],dh
   14004024d:	add    eax,DWORD PTR cs:[rax]
   140040250:	mov    bh,0x23
   140040252:	add    al,BYTE PTR [rax]
   140040254:	shl    BYTE PTR [rbx],cl
   140040256:	add    al,BYTE PTR [rax]
   140040258:	and    al,0x2e
   14004025a:	add    eax,DWORD PTR [rax]
   14004025c:	shl    BYTE PTR [rbx],cl
   14004025e:	add    al,BYTE PTR [rax]
   140040260:	in     eax,dx
   140040261:	and    eax,DWORD PTR [rdx]
   140040263:	add    BYTE PTR [rsi+rbp*1],ch
   140040266:	add    eax,DWORD PTR [rax]
   140040268:	in     eax,dx
   140040269:	and    eax,DWORD PTR [rdx]
   14004026b:	add    BYTE PTR [rax],ah
   14004026d:	and    al,0x2
   14004026f:	add    BYTE PTR [rsi+rbp*1],dh
   140040272:	add    eax,DWORD PTR [rax]
   140040274:	and    BYTE PTR [rdx+rax*1],ah
   140040277:	add    BYTE PTR [rcx],bh
   140040279:	and    al,0x2
   14004027b:	add    BYTE PTR [rsi+rbp*1+0x24390003],dl
   140040282:	add    al,BYTE PTR [rax]
   140040284:	push   rdx
   140040285:	and    al,0x2
   140040287:	add    BYTE PTR [rsi+rbp*1+0x24520003],bl
   14004028e:	add    al,BYTE PTR [rax]
   140040290:	imul   esp,DWORD PTR [rdx+rax*1],0x0
   140040294:	fsubr  QWORD PTR [rdi]
   140040296:	add    eax,DWORD PTR [rax]
   140040298:	imul   esp,DWORD PTR [rdx+rax*1],0x0
   14004029c:	test   BYTE PTR [rdx+rax*1],ah
   14004029f:	add    ah,ah
   1400402a1:	(bad)  
   1400402a2:	add    eax,DWORD PTR [rax]
   1400402a4:	test   BYTE PTR [rdx+rax*1],ah
   1400402a7:	add    BYTE PTR [rdi-0x13fffddc],bl
   1400402ad:	(bad)  
   1400402ae:	add    eax,DWORD PTR [rax]
   1400402b0:	lahf   
   1400402b1:	and    al,0x2
   1400402b3:	add    BYTE PTR [rdx-0xbfffddc],bh
   1400402b9:	(bad)  
   1400402ba:	add    eax,DWORD PTR [rax]
   1400402bc:	mov    edx,0xd5000224
   1400402c1:	and    al,0x2
   1400402c3:	add    ah,bh
   1400402c5:	(bad)  
   1400402c6:	add    eax,DWORD PTR [rax]
   1400402c8:	(bad)  
   1400402c9:	and    al,0x2
   1400402cb:	add    dh,ch
   1400402cd:	and    al,0x2
   1400402cf:	add    BYTE PTR [rax+rsi*1],al
   1400402d2:	add    eax,DWORD PTR [rax]
   1400402d4:	out    dx,al
   1400402d5:	and    al,0x2
   1400402d7:	add    BYTE PTR [rcx],cl
   1400402d9:	and    eax,0x300c0002
   1400402de:	add    eax,DWORD PTR [rax]
   1400402e0:	or     DWORD PTR [rip+0x25210002],esp        # 0x1652502e8
   1400402e6:	add    al,BYTE PTR [rax]
   1400402e8:	xor    BYTE PTR [rbx],r8b
   1400402eb:	add    BYTE PTR [rcx],ah
   1400402ed:	and    eax,0x25390002
   1400402f2:	add    al,BYTE PTR [rax]
   1400402f4:	jl     0x140040326
   1400402f6:	add    eax,DWORD PTR [rax]
   1400402f8:	cmp    DWORD PTR [rip+0x25520002],esp        # 0x165560300
   1400402fe:	add    al,BYTE PTR [rax]
   140040300:	add    al,0x31
   140040302:	add    eax,DWORD PTR [rax]
   140040304:	push   rdx
   140040305:	and    eax,0x256b0002
   14004030a:	add    al,BYTE PTR [rax]
   14004030c:	or     al,0x31
   14004030e:	add    eax,DWORD PTR [rax]
   140040310:	imul   esp,DWORD PTR [rip+0x25840002],0x2        # 0x165880319
   140040317:	add    BYTE PTR [rcx+rsi*1],dl
   14004031a:	add    eax,DWORD PTR [rax]
   14004031c:	test   BYTE PTR [rip+0x259d0002],ah        # 0x165a10324
   140040322:	add    al,BYTE PTR [rax]
   140040324:	sbb    al,0x31
   140040326:	add    eax,DWORD PTR [rax]
   140040328:	popf   
   140040329:	and    eax,0x25b60002
   14004032e:	add    al,BYTE PTR [rax]
   140040330:	test   BYTE PTR [rcx],dh
   140040332:	add    eax,DWORD PTR [rax]
   140040334:	mov    dh,0x25
   140040336:	add    al,BYTE PTR [rax]
   140040338:	iret   
   140040339:	and    eax,0x318c0002
   14004033e:	add    eax,DWORD PTR [rax]
   140040340:	iret   
   140040341:	and    eax,0x25e80002
   140040346:	add    al,BYTE PTR [rax]
   140040348:	xchg   esp,eax
   140040349:	xor    DWORD PTR [rbx],eax
   14004034b:	add    al,ch
   14004034d:	and    eax,0x26010002
   140040352:	add    al,BYTE PTR [rax]
   140040354:	fdiv   QWORD PTR [rcx]
   140040356:	add    eax,DWORD PTR [rax]
   140040358:	add    DWORD PTR [rsi],esp
   14004035a:	add    al,BYTE PTR [rax]
   14004035c:	sub    BYTE PTR [rsi],ah
   14004035e:	add    al,BYTE PTR [rax]
   140040360:	in     al,0x31
   140040362:	add    eax,DWORD PTR [rax]
   140040364:	sub    BYTE PTR [rsi],ah
   140040366:	add    al,BYTE PTR [rax]
   140040368:	rex.B
   140040369:	add    al,BYTE PTR es:[rax]
   14004036c:	and    al,0x32
   14004036e:	add    eax,DWORD PTR [rax]
   140040370:	rex.B
   140040371:	add    al,BYTE PTR es:[rax]
   140040374:	push   0x2c000226
   140040379:	xor    al,BYTE PTR [rbx]
   14004037b:	add    BYTE PTR [rax+0x26],dh
   14004037e:	add    al,BYTE PTR [rax]
   140040380:	mov    BYTE PTR [rsi],ah
   140040382:	add    al,BYTE PTR [rax]
   140040384:	test   al,0x60
   140040386:	add    eax,DWORD PTR [rax]
   140040388:	mov    BYTE PTR [rsi],ah
   14004038a:	add    al,BYTE PTR [rax]
   14004038c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004038d:	add    al,BYTE PTR es:[rax]
   140040390:	test   al,0x60
   140040392:	add    eax,DWORD PTR [rax]
   140040394:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040395:	add    al,BYTE PTR es:[rax]
   140040398:	ret    0x226
   14004039b:	add    BYTE PTR [rax-0x3dfffca0],ch
   1400403a1:	add    al,BYTE PTR es:[rax]
   1400403a4:	fbld   TBYTE PTR [rsi]
   1400403a6:	add    al,BYTE PTR [rax]
   1400403a8:	test   al,0x60
   1400403aa:	add    eax,DWORD PTR [rax]
   1400403ac:	loopne 0x1400403d4
   1400403ae:	add    al,BYTE PTR [rax]
   1400403b0:	stc    
   1400403b1:	add    al,BYTE PTR es:[rax]
   1400403b4:	test   al,0x60
   1400403b6:	add    eax,DWORD PTR [rax]
   1400403b8:	stc    
   1400403b9:	add    al,BYTE PTR es:[rax]
   1400403bc:	and    BYTE PTR [rdi],ah
   1400403be:	add    al,BYTE PTR [rax]
   1400403c0:	test   al,0x60
   1400403c2:	add    eax,DWORD PTR [rax]
   1400403c4:	and    BYTE PTR [rdi],ah
   1400403c6:	add    al,BYTE PTR [rax]
   1400403c8:	rex.RXB (bad) 
   1400403ca:	add    al,BYTE PTR [rax]
   1400403cc:	test   al,0x60
   1400403ce:	add    eax,DWORD PTR [rax]
   1400403d0:	rex.RXB (bad) 
   1400403d2:	add    al,BYTE PTR [rax]
   1400403d4:	(bad)  
   1400403d5:	(bad)  
   1400403d6:	add    al,BYTE PTR [rax]
   1400403d8:	test   al,0x60
   1400403da:	add    eax,DWORD PTR [rax]
   1400403dc:	(bad)  
   1400403dd:	(bad)  
   1400403de:	add    al,BYTE PTR [rax]
   1400403e0:	js     0x140040409
   1400403e2:	add    al,BYTE PTR [rax]
   1400403e4:	test   al,0x60
   1400403e6:	add    eax,DWORD PTR [rax]
   1400403e8:	js     0x140040411
   1400403ea:	add    al,BYTE PTR [rax]
   1400403ec:	xchg   ecx,eax
   1400403ed:	(bad)  
   1400403ee:	add    al,BYTE PTR [rax]
   1400403f0:	test   al,0x60
   1400403f2:	add    eax,DWORD PTR [rax]
   1400403f4:	xchg   ecx,eax
   1400403f5:	(bad)  
   1400403f6:	add    al,BYTE PTR [rax]
   1400403f8:	stos   BYTE PTR es:[rdi],al
   1400403f9:	(bad)  
   1400403fa:	add    al,BYTE PTR [rax]
   1400403fc:	test   al,0x60
   1400403fe:	add    eax,DWORD PTR [rax]
   140040400:	mov    al,0x27
   140040402:	add    al,BYTE PTR [rax]
   140040404:	retf   
   140040405:	(bad)  
   140040406:	add    al,BYTE PTR [rax]
   140040408:	xor    BYTE PTR [rdx],0x3
   14004040b:	add    bl,cl
   14004040d:	(bad)  
   14004040e:	add    al,BYTE PTR [rax]
   140040410:	jrcxz  0x140040439
   140040412:	add    al,BYTE PTR [rax]
   140040414:	mov    eax,0xe3000332
   140040419:	(bad)  
   14004041a:	add    al,BYTE PTR [rax]
   14004041c:	(bad)  
   14004041d:	(bad)  
   14004041e:	add    al,BYTE PTR [rax]
   140040420:	sub    BYTE PTR [rbx],dh
   140040422:	add    eax,DWORD PTR [rax]
   140040424:	(bad)  
   140040425:	(bad)  
   140040426:	add    al,BYTE PTR [rax]
   140040428:	(bad)  
   140040429:	sub    BYTE PTR [rdx],al
   14004042b:	add    BYTE PTR [rax],dh
   14004042d:	xor    eax,DWORD PTR [rbx]
   14004042f:	add    BYTE PTR [rdi],dl
   140040431:	sub    BYTE PTR [rdx],al
   140040433:	add    BYTE PTR [rax],dh
   140040435:	sub    BYTE PTR [rdx],al
   140040437:	add    BYTE PTR [rax],bh
   140040439:	xor    eax,DWORD PTR [rbx]
   14004043b:	add    BYTE PTR [rax],dh
   14004043d:	sub    BYTE PTR [rdx],al
   14004043f:	add    BYTE PTR [rcx+0x28],cl
   140040442:	add    al,BYTE PTR [rax]
   140040444:	add    al,0x34
   140040446:	add    eax,DWORD PTR [rax]
   140040448:	rex.WB sub BYTE PTR [r10],al
   14004044b:	add    BYTE PTR [rbp+0x28],ah
   14004044e:	add    al,BYTE PTR [rax]
   140040450:	or     al,0x34
   140040452:	add    eax,DWORD PTR [rax]
   140040454:	sub    BYTE PTR gs:[rdx],al
   140040457:	add    BYTE PTR [rsi+0x28],bh
   14004045a:	add    al,BYTE PTR [rax]
   14004045c:	adc    al,0x34
   14004045e:	add    eax,DWORD PTR [rax]
   140040460:	jle    0x14004048a
   140040462:	add    al,BYTE PTR [rax]
   140040464:	(bad)  
   140040465:	sub    BYTE PTR [rdx],al
   140040467:	add    BYTE PTR [rsp+rsi*1],bl
   14004046a:	add    eax,DWORD PTR [rax]
   14004046c:	(bad)  
   14004046d:	sub    BYTE PTR [rdx],al
   14004046f:	add    BYTE PTR [rbx-0x5bfffdd8],dh
   140040475:	xor    al,0x3
   140040477:	add    BYTE PTR [rbx-0x31fffdd8],dh
   14004047d:	sub    BYTE PTR [rdx],al
   14004047f:	add    BYTE PTR [rsp+rsi*1+0x28ce0003],ch
   140040486:	add    al,BYTE PTR [rax]
   140040488:	jmp    0xf40406b5
   14004048d:	xor    al,0x3
   14004048f:	add    cl,ch
   140040491:	sub    BYTE PTR [rdx],al
   140040493:	add    BYTE PTR [rdx],al
   140040495:	sub    DWORD PTR [rdx],eax
   140040497:	add    al,dh
   140040499:	xor    al,0x3
   14004049b:	add    BYTE PTR [rax],dl
   14004049d:	sub    DWORD PTR [rdx],eax
   14004049f:	add    BYTE PTR [rcx],ch
   1400404a1:	sub    DWORD PTR [rdx],eax
   1400404a3:	add    BYTE PTR [rax+0x29000335],al
   1400404a9:	sub    DWORD PTR [rdx],eax
   1400404ab:	add    BYTE PTR [rdx+0x29],al
   1400404ae:	add    al,BYTE PTR [rax]
   1400404b0:	mov    BYTE PTR [rip+0x29420003],dh        # 0x1694604b9
   1400404b6:	add    al,BYTE PTR [rax]
   1400404b8:	pop    rbx
   1400404b9:	sub    DWORD PTR [rdx],eax
   1400404bb:	add    BYTE PTR [rax+0x5b000335],dl
   1400404c1:	sub    DWORD PTR [rdx],eax
   1400404c3:	add    BYTE PTR [rcx+rbp*1+0x2],dh
   1400404c7:	add    al,cl
   1400404c9:	xor    eax,0x29800003
   1400404ce:	add    al,BYTE PTR [rax]
   1400404d0:	cwde   
   1400404d1:	sub    DWORD PTR [rdx],eax
   1400404d3:	add    BYTE PTR [rax],bh
   1400404d5:	add    eax,DWORD PTR ss:[rax]
   1400404d8:	cwde   
   1400404d9:	sub    DWORD PTR [rdx],eax
   1400404db:	add    BYTE PTR [rbp+0x40000229],dh
   1400404e1:	add    eax,DWORD PTR ss:[rax]
   1400404e4:	mov    ch,0x29
   1400404e6:	add    al,BYTE PTR [rax]
   1400404e8:	shr    BYTE PTR [rcx],cl
   1400404ea:	add    al,BYTE PTR [rax]
   1400404ec:	rex.W
   1400404ed:	add    eax,DWORD PTR ss:[rax]
   1400404f0:	shr    BYTE PTR [rcx],cl
   1400404f2:	add    al,BYTE PTR [rax]
   1400404f4:	out    dx,eax
   1400404f5:	sub    DWORD PTR [rdx],eax
   1400404f7:	add    BYTE PTR [rax+0x36],dl
   1400404fa:	add    eax,DWORD PTR [rax]
   1400404fc:	out    dx,eax
   1400404fd:	sub    DWORD PTR [rdx],eax
   1400404ff:	add    BYTE PTR [rax],cl
   140040501:	sub    al,BYTE PTR [rdx]
   140040503:	add    BYTE PTR [rax+0x8000336],bh
   140040509:	sub    al,BYTE PTR [rdx]
   14004050b:	add    BYTE PTR [rcx],ah
   14004050d:	sub    al,BYTE PTR [rdx]
   14004050f:	add    al,al
   140040511:	add    eax,DWORD PTR ss:[rax]
   140040514:	and    DWORD PTR [rdx],ebp
   140040516:	add    al,BYTE PTR [rax]
   140040518:	cmp    ch,BYTE PTR [rdx]
   14004051a:	add    al,BYTE PTR [rax]
   14004051c:	enter  0x336,0x0
   140040520:	sub    al,BYTE PTR [rdx]
   140040523:	add    BYTE PTR [rax+0x2a],bl
   140040526:	add    al,BYTE PTR [rax]
   140040528:	sbb    BYTE PTR [rdi],dh
   14004052a:	add    eax,DWORD PTR [rax]
   14004052c:	pop    rax
   14004052d:	sub    al,BYTE PTR [rdx]
   14004052f:	add    BYTE PTR [rax+0x2a],dh
   140040532:	add    al,BYTE PTR [rax]
   140040534:	push   rax
   140040535:	(bad)  
   140040536:	add    eax,DWORD PTR [rax]
   140040538:	jo     0x140040564
   14004053a:	add    al,BYTE PTR [rax]
   14004053c:	mov    DWORD PTR [rdx],ebp
   14004053e:	add    al,BYTE PTR [rax]
   140040540:	movabs al,ds:0xa200022a89000337
   140040549:	sub    al,BYTE PTR [rdx]
   14004054b:	add    al,bh
   14004054d:	(bad)  
   14004054e:	add    eax,DWORD PTR [rax]
   140040550:	movabs ds:0x22abb00022a,al
   140040559:	cmp    BYTE PTR [rbx],al
   14004055b:	add    BYTE PTR [rbx-0x2bfffdd6],bh
   140040561:	sub    al,BYTE PTR [rdx]
   140040563:	add    BYTE PTR [rax+0x38],al
   140040566:	add    eax,DWORD PTR [rax]
   140040568:	(bad)  
   140040569:	sub    al,BYTE PTR [rdx]
   14004056b:	add    ch,ch
   14004056d:	sub    al,BYTE PTR [rdx]
   14004056f:	add    BYTE PTR [rax+0x38],bh
   140040572:	add    eax,DWORD PTR [rax]
   140040574:	in     eax,dx
   140040575:	sub    al,BYTE PTR [rdx]
   140040577:	add    BYTE PTR [rsi],al
   140040579:	sub    eax,DWORD PTR [rdx]
   14004057b:	add    al,cl
   14004057d:	cmp    BYTE PTR [rbx],al
   14004057f:	add    BYTE PTR [rsi],al
   140040581:	sub    eax,DWORD PTR [rdx]
   140040583:	add    BYTE PTR [rdi],bl
   140040585:	sub    eax,DWORD PTR [rdx]
   140040587:	add    al,dl
   140040589:	cmp    BYTE PTR [rbx],al
   14004058b:	add    BYTE PTR [rdi],bl
   14004058d:	sub    eax,DWORD PTR [rdx]
   14004058f:	add    BYTE PTR [rax],bh
   140040591:	sub    eax,DWORD PTR [rdx]
   140040593:	add    BYTE PTR [rax],ah
   140040595:	cmp    DWORD PTR [rbx],eax
   140040597:	add    BYTE PTR [rax],bh
   140040599:	sub    eax,DWORD PTR [rdx]
   14004059b:	add    BYTE PTR [rcx+0x2b],dl
   14004059e:	add    al,BYTE PTR [rax]
   1400405a0:	sub    BYTE PTR [rcx],bh
   1400405a2:	add    eax,DWORD PTR [rax]
   1400405a4:	push   rcx
   1400405a5:	sub    eax,DWORD PTR [rdx]
   1400405a7:	add    BYTE PTR [rdx+0x2b],ch
   1400405aa:	add    al,BYTE PTR [rax]
   1400405ac:	js     0x1400405e7
   1400405ae:	add    eax,DWORD PTR [rax]
   1400405b0:	push   0x2b
   1400405b2:	add    al,BYTE PTR [rax]
   1400405b4:	sub    DWORD PTR [rbx],0x2
   1400405b7:	add    BYTE PTR [rax-0x6ffffcc7],al
   1400405bd:	sub    eax,DWORD PTR [rdx]
   1400405bf:	add    BYTE PTR [rax-0x77fffdd5],ch
   1400405c5:	cmp    al,BYTE PTR [rbx]
   1400405c7:	add    BYTE PTR [rax-0x37fffdd5],ch
   1400405cd:	sub    eax,DWORD PTR [rdx]
   1400405cf:	add    BYTE PTR [rax-0x37fffcc6],dl
   1400405d5:	sub    eax,DWORD PTR [rdx]
   1400405d7:	add    bh,ah
   1400405d9:	sub    eax,DWORD PTR [rdx]
   1400405db:	add    BYTE PTR [rax-0x18fffcc6],bl
   1400405e1:	sub    eax,DWORD PTR [rdx]
   1400405e3:	add    BYTE PTR [rsi],al
   1400405e5:	sub    al,0x2
   1400405e7:	add    BYTE PTR [rax+0x600033a],ah
   1400405ed:	sub    al,0x2
   1400405ef:	add    BYTE PTR [rsi],bl
   1400405f1:	sub    al,0x2
   1400405f3:	add    BYTE PTR [rax],cl
   1400405f5:	cmp    eax,DWORD PTR [rbx]
   1400405f7:	add    BYTE PTR [rsi],bl
   1400405f9:	sub    al,0x2
   1400405fb:	add    BYTE PTR [rsi],bh
   1400405fd:	sub    al,0x2
   1400405ff:	add    BYTE PTR [rax],dl
   140040601:	cmp    eax,DWORD PTR [rbx]
   140040603:	add    BYTE PTR [rsi],bh
   140040605:	sub    al,0x2
   140040607:	add    BYTE PTR [rbp+0x2c],bl
   14004060a:	add    al,BYTE PTR [rax]
   14004060c:	sbb    BYTE PTR [rbx],bh
   14004060e:	add    eax,DWORD PTR [rax]
   140040610:	pop    rbp
   140040611:	sub    al,0x2
   140040613:	add    BYTE PTR [rsp+rbp*1+0x2],bh
   140040617:	add    BYTE PTR [rax],ah
   140040619:	cmp    eax,DWORD PTR [rbx]
   14004061b:	add    BYTE PTR [rsp+rbp*1+0x2],bh
   14004061f:	add    BYTE PTR [rdi-0x3bfffdd4],dl
   140040625:	cmp    eax,DWORD PTR [rbx]
   140040627:	add    BYTE PTR [rdi-0x16fffdd4],dl
   14004062d:	sub    al,0x2
   14004062f:	add    ah,cl
   140040631:	cmp    eax,DWORD PTR [rbx]
   140040633:	add    cl,ch
   140040635:	sub    al,0x2
   140040637:	add    bh,bh
   140040639:	sub    al,0x2
   14004063b:	add    BYTE PTR [rax],bh
   14004063d:	cmp    al,0x3
   14004063f:	add    bh,bh
   140040641:	sub    al,0x2
   140040643:	add    BYTE PTR [rax],bl
   140040645:	sub    eax,0x3c980002
   14004064a:	add    eax,DWORD PTR [rax]
   14004064c:	sbb    BYTE PTR [rip+0x2d310002],ch        # 0x16d350654
   140040652:	add    al,BYTE PTR [rax]
   140040654:	movabs al,ds:0x4a00022d3100033c
   14004065d:	sub    eax,0x3cdc0002
   140040662:	add    eax,DWORD PTR [rax]
   140040664:	rex.WX sub rax,0x2d620002
   14004066a:	add    al,BYTE PTR [rax]
   14004066c:	adc    al,0x3d
   14004066e:	add    eax,DWORD PTR [rax]
   140040670:	(bad)  
   140040671:	sub    eax,0x2d7a0002
   140040676:	add    al,BYTE PTR [rax]
   140040678:	fs cmp eax,0x2d7a0003
   14004067e:	add    al,BYTE PTR [rax]
   140040680:	xchg   edx,eax
   140040681:	sub    eax,0x3d6c0002
   140040686:	add    eax,DWORD PTR [rax]
   140040688:	xchg   edx,eax
   140040689:	sub    eax,0x2dab0002
   14004068e:	add    al,BYTE PTR [rax]
   140040690:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040691:	cmp    eax,0x2db00003
   140040696:	add    al,BYTE PTR [rax]
   140040698:	enter  0x22d,0x0
   14004069c:	test   al,0x60
   14004069e:	add    eax,DWORD PTR [rax]
   1400406a0:	shr    BYTE PTR [rip+0x2de80002],1        # 0x16dec06a8
   1400406a6:	add    al,BYTE PTR [rax]
   1400406a8:	fdivr  QWORD PTR [rip+0x2de80003]        # 0x16dec06b1
   1400406ae:	add    al,BYTE PTR [rax]
   1400406b0:	add    BYTE PTR [rsi],ch
   1400406b2:	add    al,BYTE PTR [rax]
   1400406b4:	add    al,0x3e
   1400406b6:	add    eax,DWORD PTR [rax]
   1400406b8:	add    BYTE PTR [rsi],ch
   1400406ba:	add    al,BYTE PTR [rax]
   1400406bc:	(bad)  
   1400406bd:	add    al,BYTE PTR cs:[rax]
   1400406c0:	push   rax
   1400406c1:	add    eax,DWORD PTR ds:[rax]
   1400406c4:	and    BYTE PTR [rsi],ch
   1400406c6:	add    al,BYTE PTR [rax]
   1400406c8:	cmp    BYTE PTR [rsi],ch
   1400406ca:	add    al,BYTE PTR [rax]
   1400406cc:	mov    BYTE PTR [rsi],bh
   1400406ce:	add    eax,DWORD PTR [rax]
   1400406d0:	cmp    BYTE PTR [rsi],ch
   1400406d2:	add    al,BYTE PTR [rax]
   1400406d4:	push   rax
   1400406d5:	add    al,BYTE PTR cs:[rax]
   1400406d8:	mov    al,0x3e
   1400406da:	add    eax,DWORD PTR [rax]
   1400406dc:	push   rax
   1400406dd:	add    al,BYTE PTR cs:[rax]
   1400406e0:	imul   ebp,DWORD PTR [rsi],0x3f180002
   1400406e6:	add    eax,DWORD PTR [rax]
   1400406e8:	imul   ebp,DWORD PTR [rsi],0x2e810002
   1400406ee:	add    al,BYTE PTR [rax]
   1400406f0:	and    BYTE PTR [rdi],bh
   1400406f2:	add    eax,DWORD PTR [rax]
   1400406f4:	sub    DWORD PTR [rsi],0x2e990002
   1400406fa:	add    al,BYTE PTR [rax]
   1400406fc:	sub    BYTE PTR [rdi],bh
   1400406fe:	add    eax,DWORD PTR [rax]
   140040700:	cdq    
   140040701:	add    al,BYTE PTR cs:[rax]
   140040704:	mov    dl,0x2e
   140040706:	add    al,BYTE PTR [rax]
   140040708:	(bad)  
   140040709:	(bad)  
   14004070a:	add    eax,DWORD PTR [rax]
   14004070c:	mov    dl,0x2e
   14004070e:	add    al,BYTE PTR [rax]
   140040710:	int    0x2e
   140040712:	add    al,BYTE PTR [rax]
   140040714:	fdivr  DWORD PTR [rdi]
   140040716:	add    eax,DWORD PTR [rax]
   140040718:	int    0x2e
   14004071a:	add    al,BYTE PTR [rax]
   14004071c:	in     eax,0x2e
   14004071e:	add    al,BYTE PTR [rax]
   140040720:	loopne 0x140040761
   140040722:	add    eax,DWORD PTR [rax]
   140040724:	in     eax,0x2e
   140040726:	add    al,BYTE PTR [rax]
   140040728:	add    BYTE PTR [rdi],ch
   14004072a:	add    al,BYTE PTR [rax]
   14004072c:	call   0x140040a70
   140040731:	(bad)  
   140040732:	add    al,BYTE PTR [rax]
   140040734:	(bad)  
   140040735:	(bad)  
   140040736:	add    al,BYTE PTR [rax]
   140040738:	sub    al,0x40
   14004073a:	add    eax,DWORD PTR [rax]
   14004073c:	and    BYTE PTR [rdi],ch
   14004073e:	add    al,BYTE PTR [rax]
   140040740:	cmp    BYTE PTR [rdi],ch
   140040742:	add    al,BYTE PTR [rax]
   140040744:	je     0x140040786
   140040746:	add    eax,DWORD PTR [rax]
   140040748:	cmp    BYTE PTR [rdi],ch
   14004074a:	add    al,BYTE PTR [rax]
   14004074c:	push   rcx
   14004074d:	(bad)  
   14004074e:	add    al,BYTE PTR [rax]
   140040750:	or     BYTE PTR [rcx+0x3],al
   140040753:	add    BYTE PTR [rcx+0x2f],dl
   140040756:	add    al,BYTE PTR [rax]
   140040758:	push   0x2f
   14004075a:	add    al,BYTE PTR [rax]
   14004075c:	push   rsp
   14004075d:	add    eax,DWORD PTR [r8]
   140040760:	push   0x2f
   140040762:	add    al,BYTE PTR [rax]
   140040764:	(bad)  
   140040765:	(bad)  
   140040766:	add    al,BYTE PTR [rax]
   140040768:	mov    WORD PTR [rcx+0x3],es
   14004076b:	add    BYTE PTR [rdx-0x64fffdd1],al
   140040771:	(bad)  
   140040772:	add    al,BYTE PTR [rax]
   140040774:	call   0xdb040aba
   140040779:	(bad)  
   14004077a:	add    al,BYTE PTR [rax]
   14004077c:	mov    ah,0x2f
   14004077e:	add    al,BYTE PTR [rax]
   140040780:	lock add eax,DWORD PTR [r8]
   140040784:	mov    ah,0x2f
   140040786:	add    al,BYTE PTR [rax]
   140040788:	int3   
   140040789:	(bad)  
   14004078a:	add    al,BYTE PTR [rax]
   14004078c:	xor    BYTE PTR [rdx+0x3],al
   14004078f:	add    ah,cl
   140040791:	(bad)  
   140040792:	add    al,BYTE PTR [rax]
   140040794:	in     al,0x2f
   140040796:	add    al,BYTE PTR [rax]
   140040798:	rol    BYTE PTR [rdx+0x3],0x0
   14004079c:	in     al,0x2f
   14004079e:	add    al,BYTE PTR [rax]
   1400407a0:	jmp    FWORD PTR [rdi]
   1400407a2:	add    al,BYTE PTR [rax]
   1400407a4:	enter  0x342,0x0
   1400407a8:	add    BYTE PTR [rax],dh
   1400407aa:	add    al,BYTE PTR [rax]
   1400407ac:	sbb    BYTE PTR [rax],dh
   1400407ae:	add    al,BYTE PTR [rax]
   1400407b0:	rex
   1400407b1:	add    r8d,DWORD PTR [rax]
   1400407b4:	sbb    BYTE PTR [rax],dh
   1400407b6:	add    al,BYTE PTR [rax]
   1400407b8:	xor    BYTE PTR [rax],dh
   1400407ba:	add    al,BYTE PTR [rax]
   1400407bc:	rex.W
   1400407bd:	add    r8d,DWORD PTR [rax]
   1400407c0:	xor    BYTE PTR [rax],dh
   1400407c2:	add    al,BYTE PTR [rax]
   1400407c4:	rex.W xor BYTE PTR [rdx],al
   1400407c7:	add    BYTE PTR [rax+0x48000344],cl
   1400407cd:	xor    BYTE PTR [rdx],al
   1400407cf:	add    BYTE PTR [rsi+0x30],ch
   1400407d2:	add    al,BYTE PTR [rax]
   1400407d4:	nop
   1400407d5:	add    r8d,DWORD PTR [rax]
   1400407d8:	outs   dx,BYTE PTR ds:[rsi]
   1400407d9:	xor    BYTE PTR [rdx],al
   1400407db:	add    BYTE PTR [rsi-0x27fffdd0],al
   1400407e1:	add    r8d,DWORD PTR [rax]
   1400407e4:	xchg   BYTE PTR [rax],dh
   1400407e6:	add    al,BYTE PTR [rax]
   1400407e8:	lods   al,BYTE PTR ds:[rsi]
   1400407e9:	xor    BYTE PTR [rdx],al
   1400407eb:	add    al,ah
   1400407ed:	add    r8d,DWORD PTR [rax]
   1400407f0:	lods   al,BYTE PTR ds:[rsi]
   1400407f1:	xor    BYTE PTR [rdx],al
   1400407f3:	add    dl,dl
   1400407f5:	xor    BYTE PTR [rdx],al
   1400407f7:	add    BYTE PTR [rax],dl
   1400407f9:	add    r8d,DWORD PTR [r8]
   1400407fc:	shl    BYTE PTR [rax],cl
   1400407fe:	add    al,BYTE PTR [rax]
   140040800:	(bad)  
   140040801:	xor    BYTE PTR [rdx],al
   140040803:	add    BYTE PTR [rax+0x45],dl
   140040806:	add    eax,DWORD PTR [rax]
   140040808:	(bad)  
   140040809:	xor    BYTE PTR [rdx],al
   14004080b:	add    BYTE PTR [rax],dl
   14004080d:	xor    DWORD PTR [rdx],eax
   14004080f:	add    BYTE PTR [rax+0x45],bl
   140040812:	add    eax,DWORD PTR [rax]
   140040814:	adc    BYTE PTR [rcx],dh
   140040816:	add    al,BYTE PTR [rax]
   140040818:	sub    BYTE PTR [rcx],dh
   14004081a:	add    al,BYTE PTR [rax]
   14004081c:	sbb    al,0x46
   14004081e:	add    eax,DWORD PTR [rax]
   140040820:	sub    BYTE PTR [rcx],dh
   140040822:	add    al,BYTE PTR [rax]
   140040824:	rex xor DWORD PTR [rdx],eax
   140040827:	add    BYTE PTR [rsi+rax*2+0x3],dl
   14004082b:	add    BYTE PTR [rax+0x31],al
   14004082e:	add    al,BYTE PTR [rax]
   140040830:	pop    rax
   140040831:	xor    DWORD PTR [rdx],eax
   140040833:	add    BYTE PTR [rax+0x58000346],ch
   140040839:	xor    DWORD PTR [rdx],eax
   14004083b:	add    BYTE PTR [rax+0x31],dh
   14004083e:	add    al,BYTE PTR [rax]
   140040840:	call   0x1b0040b8b
   140040845:	xor    DWORD PTR [rdx],eax
   140040847:	add    BYTE PTR [rax+0x38000231],cl
   14004084d:	rex.RXB add r8d,DWORD PTR [r8]
   140040850:	mov    BYTE PTR [rcx],dh
   140040852:	add    al,BYTE PTR [rax]
   140040854:	movabs ds:0xa300034740000231,eax
   14004085d:	xor    DWORD PTR [rdx],eax
   14004085f:	add    BYTE PTR [rbx-0x67fffdcf],bh
   140040865:	rex.RXB add r8d,DWORD PTR [r8]
   140040868:	mov    ebx,0xd3000231
   14004086d:	xor    DWORD PTR [rdx],eax
   14004086f:	add    BYTE PTR [rax-0x2cfffcb9],ah
   140040875:	xor    DWORD PTR [rdx],eax
   140040877:	add    ah,bh
   140040879:	xor    DWORD PTR [rdx],eax
   14004087b:	add    BYTE PTR [rax-0x3fffcb9],ch
   140040881:	xor    DWORD PTR [rdx],eax
   140040883:	add    BYTE PTR [rdx+rsi*1],dl
   140040886:	add    al,BYTE PTR [rax]
   140040888:	clc    
   140040889:	rex.RXB add r8d,DWORD PTR [r8]
   14004088c:	adc    al,0x32
   14004088e:	add    al,BYTE PTR [rax]
   140040890:	cmp    eax,0x232
   140040895:	add    rax,QWORD PTR [rax]
   140040898:	cmp    eax,0x58000232
   14004089d:	xor    al,BYTE PTR [rdx]
   14004089f:	add    BYTE PTR [rax+0x58000348],dh
   1400408a5:	xor    al,BYTE PTR [rdx]
   1400408a7:	add    BYTE PTR [rbx+0x32],dh
   1400408aa:	add    al,BYTE PTR [rax]
   1400408ac:	mov    eax,0x73000348
   1400408b1:	xor    al,BYTE PTR [rdx]
   1400408b3:	add    BYTE PTR [rbx-0x3ffffdce],cl
   1400408b9:	add    rax,QWORD PTR [rax]
   1400408bc:	mov    esi,DWORD PTR [rdx]
   1400408be:	add    al,BYTE PTR [rax]
   1400408c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400408c1:	xor    al,BYTE PTR [rdx]
   1400408c3:	add    al,cl
   1400408c5:	add    rax,QWORD PTR [rax]
   1400408c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400408c9:	xor    al,BYTE PTR [rdx]
   1400408cb:	add    cl,al
   1400408cd:	xor    al,BYTE PTR [rdx]
   1400408cf:	add    BYTE PTR [rcx+rcx*2],al
   1400408d2:	add    eax,DWORD PTR [rax]
   1400408d4:	shl    DWORD PTR [rdx],0x2
   1400408d7:	add    cl,bl
   1400408d9:	xor    al,BYTE PTR [rdx]
   1400408db:	add    BYTE PTR [rax+0x49],ah
   1400408de:	add    eax,DWORD PTR [rax]
   1400408e0:	fnstenv [rdx]
   1400408e2:	add    al,BYTE PTR [rax]
   1400408e4:	icebp  
   1400408e5:	xor    al,BYTE PTR [rdx]
   1400408e7:	add    BYTE PTR [rax+0x49],ch
   1400408ea:	add    eax,DWORD PTR [rax]
   1400408ec:	icebp  
   1400408ed:	xor    al,BYTE PTR [rdx]
   1400408ef:	add    BYTE PTR [rdx],bl
   1400408f1:	xor    eax,DWORD PTR [rdx]
   1400408f3:	add    BYTE PTR [rax+0x49],dh
   1400408f6:	add    eax,DWORD PTR [rax]
   1400408f8:	sbb    dh,BYTE PTR [rbx]
   1400408fa:	add    al,BYTE PTR [rax]
   1400408fc:	xor    dh,BYTE PTR [rbx]
   1400408fe:	add    al,BYTE PTR [rax]
   140040900:	lods   al,BYTE PTR ds:[rsi]
   140040901:	add    rax,QWORD PTR [r8]
   140040904:	xor    dh,BYTE PTR [rbx]
   140040906:	add    al,BYTE PTR [rax]
   140040908:	rex.WX xor rax,QWORD PTR [rdx]
   14004090b:	add    BYTE PTR [rax],cl
   14004090d:	rex.WX add rax,QWORD PTR [rax]
   140040910:	rex.WX xor rax,QWORD PTR [rdx]
   140040913:	add    BYTE PTR [rdx+0x33],ah
   140040916:	add    al,BYTE PTR [rax]
   140040918:	rex
   140040919:	rex.WX add rax,QWORD PTR [rax]
   14004091c:	(bad)  
   14004091e:	add    al,BYTE PTR [rax]
   140040920:	jp     0x140040955
   140040922:	add    al,BYTE PTR [rax]
   140040924:	js     0x140040970
   140040926:	add    eax,DWORD PTR [rax]
   140040928:	jp     0x14004095d
   14004092a:	add    al,BYTE PTR [rax]
   14004092c:	xchg   edx,eax
   14004092d:	xor    eax,DWORD PTR [rdx]
   14004092f:	add    al,ah
   140040931:	rex.WX add rax,QWORD PTR [rax]
   140040934:	xchg   edx,eax
   140040935:	xor    eax,DWORD PTR [rdx]
   140040937:	add    BYTE PTR [rdx-0x17fffdcd],ch
   14004093d:	rex.WX add rax,QWORD PTR [rax]
   140040940:	stos   BYTE PTR es:[rdi],al
   140040941:	xor    eax,DWORD PTR [rdx]
   140040943:	add    dl,al
   140040945:	xor    eax,DWORD PTR [rdx]
   140040947:	add    al,dh
   140040949:	rex.WX add rax,QWORD PTR [rax]
   14004094c:	ret    0x233
   14004094f:	add    dl,bl
   140040951:	xor    eax,DWORD PTR [rdx]
   140040953:	add    ah,bl
   140040955:	rex.WXB add rax,QWORD PTR [r8]
   140040958:	fidiv  DWORD PTR [rbx]
   14004095a:	add    al,BYTE PTR [rax]
   14004095c:	repnz xor eax,DWORD PTR [rdx]
   14004095f:	add    ah,ah
   140040961:	rex.WXB add rax,QWORD PTR [r8]
   140040964:	repnz xor eax,DWORD PTR [rdx]
   140040967:	add    BYTE PTR [rip+0xffffffffec000234],cl        # 0x12c040ba1
   14004096d:	rex.WXB add rax,QWORD PTR [r8]
   140040970:	or     eax,0x28000234
   140040975:	xor    al,0x2
   140040977:	add    ah,dh
   140040979:	rex.WXB add rax,QWORD PTR [r8]
   14004097c:	sub    BYTE PTR [rdx+rax*1],dh
   14004097f:	add    BYTE PTR [rbx+0x34],al
   140040982:	add    al,BYTE PTR [rax]
   140040984:	cld    
   140040985:	rex.WXB add rax,QWORD PTR [r8]
   140040988:	rex.XB xor al,0x2
   14004098b:	add    BYTE PTR [rsi+0x34],bl
   14004098e:	add    al,BYTE PTR [rax]
   140040990:	add    al,0x4c
   140040992:	add    eax,DWORD PTR [rax]
   140040994:	pop    rsi
   140040995:	xor    al,0x2
   140040997:	add    BYTE PTR [rcx+0x34],bh
   14004099a:	add    al,BYTE PTR [rax]
   14004099c:	or     al,0x4c
   14004099e:	add    eax,DWORD PTR [rax]
   1400409a0:	jns    0x1400409d6
   1400409a2:	add    al,BYTE PTR [rax]
   1400409a4:	xchg   esp,eax
   1400409a5:	xor    al,0x2
   1400409a7:	add    BYTE PTR [rsp+rcx*2],dl
   1400409aa:	add    eax,DWORD PTR [rax]
   1400409ac:	xchg   esp,eax
   1400409ad:	xor    al,0x2
   1400409af:	add    BYTE PTR [rbp+0x1c000234],bh
   1400409b5:	add    r8,QWORD PTR [rax]
   1400409b8:	mov    ebp,0xd5000234
   1400409bd:	xor    al,0x2
   1400409bf:	add    BYTE PTR [rsp+rcx*2+0x34d50003],bh
   1400409c6:	add    al,BYTE PTR [rax]
   1400409c8:	in     eax,dx
   1400409c9:	xor    al,0x2
   1400409cb:	add    ah,al
   1400409cd:	add    r8,QWORD PTR [rax]
   1400409d0:	in     eax,dx
   1400409d1:	xor    al,0x2
   1400409d3:	add    BYTE PTR [rip+0xffffffffcc000235],al        # 0x10c040c0e
   1400409d9:	add    r8,QWORD PTR [rax]
   1400409dc:	add    eax,0x20000235
   1400409e1:	xor    eax,0x4cd40002
   1400409e6:	add    eax,DWORD PTR [rax]
   1400409e8:	and    BYTE PTR [rip+0x353b0002],dh        # 0x1753f09f0
   1400409ee:	add    al,BYTE PTR [rax]
   1400409f0:	fmul   QWORD PTR [rbx+rax*1+0x0]
   1400409f4:	cmp    esi,DWORD PTR [rip+0x35640002]        # 0x1756809fc
   1400409fa:	add    al,BYTE PTR [rax]
   1400409fc:	in     al,0x4c
   1400409fe:	add    eax,DWORD PTR [rax]
   140040a00:	fs xor eax,0x357c0002
   140040a06:	add    al,BYTE PTR [rax]
   140040a08:	rex.W
   140040a09:	add    r8,QWORD PTR [r8]
   140040a0c:	jl     0x140040a43
   140040a0e:	add    al,BYTE PTR [rax]
   140040a10:	xchg   edi,eax
   140040a11:	xor    eax,0x4e880002
   140040a16:	add    eax,DWORD PTR [rax]
   140040a18:	xchg   edi,eax
   140040a19:	xor    eax,0x35b20002
   140040a1e:	add    al,BYTE PTR [rax]
   140040a20:	nop
   140040a21:	rex.WRX add r8,QWORD PTR [rax]
   140040a24:	mov    dl,0x35
   140040a26:	add    al,BYTE PTR [rax]
   140040a28:	int    0x35
   140040a2a:	add    al,BYTE PTR [rax]
   140040a2c:	cwde   
   140040a2d:	rex.WRX add r8,QWORD PTR [rax]
   140040a30:	int    0x35
   140040a32:	add    al,BYTE PTR [rax]
   140040a34:	call   0xe0040c6e
   140040a39:	rex.WRX add r8,QWORD PTR [rax]
   140040a3c:	call   0x143040c76
   140040a41:	add    al,BYTE PTR ss:[rax]
   140040a44:	test   al,0x4e
   140040a46:	add    eax,DWORD PTR [rax]
   140040a48:	add    esi,DWORD PTR [rsi]
   140040a4a:	add    al,BYTE PTR [rax]
   140040a4c:	(bad)  
   140040a4d:	add    al,BYTE PTR ss:[rax]
   140040a50:	mov    al,0x4e
   140040a52:	add    eax,DWORD PTR [rax]
   140040a54:	(bad)  
   140040a55:	add    al,BYTE PTR ss:[rax]
   140040a58:	cmp    DWORD PTR [rsi],esi
   140040a5a:	add    al,BYTE PTR [rax]
   140040a5c:	mov    eax,0x3900034e
   140040a61:	add    al,BYTE PTR ss:[rax]
   140040a64:	push   rsp
   140040a65:	add    al,BYTE PTR ss:[rax]
   140040a68:	ror    BYTE PTR [rsi+0x3],0x0
   140040a6c:	push   rsp
   140040a6d:	add    al,BYTE PTR ss:[rax]
   140040a70:	outs   dx,DWORD PTR ds:[rsi]
   140040a71:	add    al,BYTE PTR ss:[rax]
   140040a74:	enter  0x34e,0x0
   140040a78:	outs   dx,DWORD PTR ds:[rsi]
   140040a79:	add    al,BYTE PTR ss:[rax]
   140040a7c:	mov    dh,BYTE PTR [rsi]
   140040a7e:	add    al,BYTE PTR [rax]
   140040a80:	ror    BYTE PTR [rsi+0x3],1
   140040a83:	add    BYTE PTR [rdx-0x5afffdca],cl
   140040a89:	add    al,BYTE PTR ss:[rax]
   140040a8c:	jo     0x140040ade
   140040a8e:	add    eax,DWORD PTR [rax]
   140040a90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040a91:	add    al,BYTE PTR ss:[rax]
   140040a94:	shl    BYTE PTR [rsi],0x2
   140040a97:	add    BYTE PTR [rax+0x50],bh
   140040a9a:	add    eax,DWORD PTR [rax]
   140040a9c:	shl    BYTE PTR [rsi],0x2
   140040a9f:	add    bl,bl
   140040aa1:	add    al,BYTE PTR ss:[rax]
   140040aa4:	adc    BYTE PTR [rax+0x3],0x0
   140040aa8:	(bad)  [rsi]
   140040aaa:	add    al,BYTE PTR [rax]
   140040aac:	div    BYTE PTR [rsi]
   140040aae:	add    al,BYTE PTR [rax]
   140040ab0:	mov    BYTE PTR [rax+0x3],dl
   140040ab3:	add    dh,dh
   140040ab5:	add    al,BYTE PTR ss:[rax]
   140040ab8:	adc    DWORD PTR [rdi],esi
   140040aba:	add    al,BYTE PTR [rax]
   140040abc:	nop
   140040abd:	push   rax
   140040abe:	add    eax,DWORD PTR [rax]
   140040ac0:	adc    DWORD PTR [rdi],esi
   140040ac2:	add    al,BYTE PTR [rax]
   140040ac4:	sub    al,0x37
   140040ac6:	add    al,BYTE PTR [rax]
   140040ac8:	cwde   
   140040ac9:	push   rax
   140040aca:	add    eax,DWORD PTR [rax]
   140040acc:	sub    al,0x37
   140040ace:	add    al,BYTE PTR [rax]
   140040ad0:	rex.RXB (bad) 
   140040ad2:	add    al,BYTE PTR [rax]
   140040ad4:	movabs al,ds:0x6200023747000350
   140040add:	(bad)  
   140040ade:	add    al,BYTE PTR [rax]
   140040ae0:	test   al,0x50
   140040ae2:	add    eax,DWORD PTR [rax]
   140040ae4:	(bad)  
   140040ae5:	(bad)  
   140040ae6:	add    al,BYTE PTR [rax]
   140040ae8:	jge    0x140040b21
   140040aea:	add    al,BYTE PTR [rax]
   140040aec:	mov    al,0x50
   140040aee:	add    eax,DWORD PTR [rax]
   140040af0:	jge    0x140040b29
   140040af2:	add    al,BYTE PTR [rax]
   140040af4:	cwde   
   140040af5:	(bad)  
   140040af6:	add    al,BYTE PTR [rax]
   140040af8:	mov    eax,0x98000350
   140040afd:	(bad)  
   140040afe:	add    al,BYTE PTR [rax]
   140040b00:	mov    bl,0x37
   140040b02:	add    al,BYTE PTR [rax]
   140040b04:	rcl    BYTE PTR [rax+0x3],0x0
   140040b08:	mov    bl,0x37
   140040b0a:	add    al,BYTE PTR [rax]
   140040b0c:	(bad)  
   140040b0d:	(bad)  
   140040b0e:	add    al,BYTE PTR [rax]
   140040b10:	enter  0x350,0x0
   140040b14:	(bad)  
   140040b15:	(bad)  
   140040b16:	add    al,BYTE PTR [rax]
   140040b18:	out    0x37,al
   140040b1a:	add    al,BYTE PTR [rax]
   140040b1c:	cwde   
   140040b1d:	push   rcx
   140040b1e:	add    eax,DWORD PTR [rax]
   140040b20:	out    0x37,al
   140040b22:	add    al,BYTE PTR [rax]
   140040b24:	(bad)  
   140040b25:	(bad)  
   140040b26:	add    al,BYTE PTR [rax]
   140040b28:	movabs al,ds:0x19000237fe000351
   140040b31:	cmp    BYTE PTR [rdx],al
   140040b33:	add    BYTE PTR [rax+0x19000351],ch
   140040b39:	cmp    BYTE PTR [rdx],al
   140040b3b:	add    BYTE PTR [rax+rdi*1],dh
   140040b3e:	add    al,BYTE PTR [rax]
   140040b40:	mov    al,0x51
   140040b42:	add    eax,DWORD PTR [rax]
   140040b44:	xor    al,0x38
   140040b46:	add    al,BYTE PTR [rax]
   140040b48:	rex.WR cmp BYTE PTR [rdx],r8b
   140040b4b:	add    BYTE PTR [rax+0x4c000351],bh
   140040b51:	cmp    BYTE PTR [rdx],al
   140040b53:	add    BYTE PTR [rdi+0x38],ah
   140040b56:	add    al,BYTE PTR [rax]
   140040b58:	rcl    BYTE PTR [rcx+0x3],0x0
   140040b5c:	cmp    BYTE PTR [edx],al
   140040b5f:	add    BYTE PTR [rdx-0x37fffdc8],al
   140040b65:	push   rcx
   140040b66:	add    eax,DWORD PTR [rax]
   140040b68:	(bad)  
   140040b69:	cmp    BYTE PTR [rdx],al
   140040b6b:	add    BYTE PTR [rbx+0x38000238],bl
   140040b71:	push   rdx
   140040b72:	add    eax,DWORD PTR [rax]
   140040b74:	fwait
   140040b75:	cmp    BYTE PTR [rdx],al
   140040b77:	add    BYTE PTR [rax+rdi*1+0x52400002],dh
   140040b7e:	add    eax,DWORD PTR [rax]
   140040b80:	sar    BYTE PTR [rax],0x2
   140040b83:	add    al,bl
   140040b85:	cmp    BYTE PTR [rdx],al
   140040b87:	add    BYTE PTR [rax-0x1ffffca0],ch
   140040b8d:	cmp    BYTE PTR [rdx],al
   140040b8f:	add    ah,bh
   140040b91:	cmp    BYTE PTR [rdx],al
   140040b93:	add    BYTE PTR [rax+0x360],ch
   140040b99:	cmp    DWORD PTR [rdx],eax
   140040b9b:	add    BYTE PTR [rip+0x78000239],dh        # 0x1b8040dda
   140040ba1:	push   rsi
   140040ba2:	add    eax,DWORD PTR [rax]
   140040ba4:	rex cmp DWORD PTR [rdx],eax
   140040ba7:	add    BYTE PTR [rcx+rdi*1+0x56000002],al
   140040bae:	add    eax,DWORD PTR [rax]
   140040bb0:	nop
   140040bb1:	cmp    DWORD PTR [rdx],eax
   140040bb3:	add    al,cl
   140040bb5:	cmp    DWORD PTR [rdx],eax
   140040bb7:	add    al,dh
   140040bb9:	push   rsi
   140040bba:	add    eax,DWORD PTR [rax]
   140040bbc:	sar    BYTE PTR [rcx],1
   140040bbe:	add    al,BYTE PTR [rax]
   140040bc0:	or     BYTE PTR [rdx],bh
   140040bc2:	add    al,BYTE PTR [rax]
   140040bc4:	(bad)  
   140040bc5:	push   rdi
   140040bc6:	add    eax,DWORD PTR [rax]
   140040bc8:	adc    BYTE PTR [rdx],bh
   140040bca:	add    al,BYTE PTR [rax]
   140040bcc:	(bad)  
   140040bcd:	cmp    al,BYTE PTR [rdx]
   140040bcf:	add    BYTE PTR [rax+0x30000360],ch
   140040bd5:	cmp    al,BYTE PTR [rdx]
   140040bd7:	add    BYTE PTR [rdx+rdi*1+0x2],cl
   140040bdb:	add    BYTE PTR [rax+0x50000360],ch
   140040be1:	cmp    al,BYTE PTR [rdx]
   140040be3:	add    BYTE PTR [rax+0x3a],ch
   140040be6:	add    al,BYTE PTR [rax]
   140040be8:	test   al,0x60
   140040bea:	add    eax,DWORD PTR [rax]
   140040bec:	jo     0x140040c28
   140040bee:	add    al,BYTE PTR [rax]
   140040bf0:	mov    BYTE PTR [rdx],bh
   140040bf2:	add    al,BYTE PTR [rax]
   140040bf4:	test   al,0x60
   140040bf6:	add    eax,DWORD PTR [rax]
   140040bf8:	nop
   140040bf9:	cmp    al,BYTE PTR [rdx]
   140040bfb:	add    BYTE PTR [rax-0x57fffdc6],ch
   140040c01:	(bad)  
   140040c02:	add    eax,DWORD PTR [rax]
   140040c04:	mov    al,0x3a
   140040c06:	add    al,BYTE PTR [rax]
   140040c08:	enter  0x23a,0x0
   140040c0c:	test   al,0x60
   140040c0e:	add    eax,DWORD PTR [rax]
   140040c10:	sar    BYTE PTR [rdx],1
   140040c12:	add    al,BYTE PTR [rax]
   140040c14:	call   0xe8040e53
   140040c19:	(bad)  
   140040c1a:	add    eax,DWORD PTR [rax]
   140040c1c:	lock cmp al,BYTE PTR [rdx]
   140040c1f:	add    BYTE PTR [rax],cl
   140040c21:	cmp    eax,DWORD PTR [rdx]
   140040c23:	add    BYTE PTR [rax+0x8000360],ch
   140040c29:	cmp    eax,DWORD PTR [rdx]
   140040c2b:	add    BYTE PTR [rsi],ch
   140040c2d:	cmp    eax,DWORD PTR [rdx]
   140040c2f:	add    BYTE PTR [rax+0x30000360],ch
   140040c35:	cmp    eax,DWORD PTR [rdx]
   140040c37:	add    BYTE PTR [rbx+rdi*1+0x2],dh
   140040c3b:	add    al,dl
   140040c3d:	push   rbx
   140040c3e:	add    eax,DWORD PTR [rax]
   140040c40:	cmp    BYTE PTR [rbx],0x2
   140040c43:	add    ah,al
   140040c45:	cmp    eax,DWORD PTR [rdx]
   140040c47:	add    BYTE PTR [rax+0x53],cl
   140040c4a:	add    eax,DWORD PTR [rax]
   140040c4c:	sar    BYTE PTR [rbx],1
   140040c4e:	add    al,BYTE PTR [rax]
   140040c50:	adc    al,0x3c
   140040c52:	add    al,BYTE PTR [rax]
   140040c54:	(bad)  
   140040c55:	push   rsp
   140040c56:	add    eax,DWORD PTR [rax]
   140040c58:	and    BYTE PTR [rdx+rax*1],bh
   140040c5b:	add    BYTE PTR [rax],bh
   140040c5d:	cmp    al,0x2
   140040c5f:	add    al,dl
   140040c61:	pop    rcx
   140040c62:	add    eax,DWORD PTR [rax]
   140040c64:	cmp    BYTE PTR [rdx+rax*1],bh
   140040c67:	add    BYTE PTR [rax+0x3c],dl
   140040c6a:	add    al,BYTE PTR [rax]
   140040c6c:	adc    BYTE PTR [rdx+0x3],bl
   140040c6f:	add    BYTE PTR [rax+0x3c],dl
   140040c72:	add    al,BYTE PTR [rax]
   140040c74:	push   0xffffffffa800023c
   140040c79:	(bad)  
   140040c7a:	add    eax,DWORD PTR [rax]
   140040c7c:	jo     0x140040cba
   140040c7e:	add    al,BYTE PTR [rax]
   140040c80:	mov    BYTE PTR [rdx+rax*1],bh
   140040c83:	add    BYTE PTR [rax-0x6ffffca0],ch
   140040c89:	cmp    al,0x2
   140040c8b:	add    BYTE PTR [rax-0x57fffdc4],ch
   140040c91:	(bad)  
   140040c92:	add    eax,DWORD PTR [rax]
   140040c94:	test   al,0x3c
   140040c96:	add    al,BYTE PTR [rax]
   140040c98:	(bad)
   140040c9b:	add    BYTE PTR [rax-0x2ffffca0],ch
   140040ca1:	cmp    al,0x2
   140040ca3:	add    al,ch
   140040ca5:	cmp    al,0x2
   140040ca7:	add    BYTE PTR [rsp+rbx*2+0x3],ch
   140040cab:	add    al,ch
   140040cad:	cmp    al,0x2
   140040caf:	add    BYTE PTR [rip+0x7400023d],al        # 0x1b4040ef2
   140040cb5:	pop    rsp
   140040cb6:	add    eax,DWORD PTR [rax]
   140040cb8:	add    eax,0x2200023d
   140040cbd:	cmp    eax,0x5c7c0002
   140040cc2:	add    eax,DWORD PTR [rax]
   140040cc4:	and    bh,BYTE PTR [rip+0x3d3f0002]        # 0x17d430ccc
   140040cca:	add    al,BYTE PTR [rax]
   140040ccc:	test   BYTE PTR [rbx+rax*1+0x0],bl
   140040cd0:	(bad)  
   140040cd1:	cmp    eax,0x3d5c0002
   140040cd6:	add    al,BYTE PTR [rax]
   140040cd8:	mov    WORD PTR [rbx+rax*1+0x0],ds
   140040cdc:	pop    rsp
   140040cdd:	cmp    eax,0x3d790002
   140040ce2:	add    al,BYTE PTR [rax]
   140040ce4:	xchg   esp,eax
   140040ce5:	pop    rsp
   140040ce6:	add    eax,DWORD PTR [rax]
   140040ce8:	jns    0x140040d27
   140040cea:	add    al,BYTE PTR [rax]
   140040cec:	xchg   esi,eax
   140040ced:	cmp    eax,0x5c9c0002
   140040cf2:	add    eax,DWORD PTR [rax]
   140040cf4:	xchg   esi,eax
   140040cf5:	cmp    eax,0x3db30002
   140040cfa:	add    al,BYTE PTR [rax]
   140040cfc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040cfd:	pop    rsp
   140040cfe:	add    eax,DWORD PTR [rax]
   140040d00:	mov    bl,0x3d
   140040d02:	add    al,BYTE PTR [rax]
   140040d04:	sar    BYTE PTR [rip+0x5cac0002],1        # 0x19cb00d0c
   140040d0a:	add    eax,DWORD PTR [rax]
   140040d0c:	sar    BYTE PTR [rip+0x3de80002],1        # 0x17dec0d14
   140040d12:	add    al,BYTE PTR [rax]
   140040d14:	call   0x130041075
   140040d19:	cmp    eax,0x3e080002
   140040d1e:	add    al,BYTE PTR [rax]
   140040d20:	test   al,0x60
   140040d22:	add    eax,DWORD PTR [rax]
   140040d24:	adc    BYTE PTR [rsi],bh
   140040d26:	add    al,BYTE PTR [rax]
   140040d28:	sub    DWORD PTR [rsi],edi
   140040d2a:	add    al,BYTE PTR [rax]
   140040d2c:	test   al,0x60
   140040d2e:	add    eax,DWORD PTR [rax]
   140040d30:	sub    DWORD PTR [rsi],edi
   140040d32:	add    al,BYTE PTR [rax]
   140040d34:	rex.RX
   140040d35:	add    al,BYTE PTR ds:[rax]
   140040d38:	test   al,0x60
   140040d3a:	add    eax,DWORD PTR [rax]
   140040d3c:	push   rax
   140040d3d:	add    al,BYTE PTR ds:[rax]
   140040d40:	xchg   esp,eax
   140040d41:	add    al,BYTE PTR ds:[rax]
   140040d44:	xor    al,0x5b
   140040d46:	add    eax,DWORD PTR [rax]
   140040d48:	movabs al,ds:0xb800023eb800023e
   140040d51:	(bad)  
   140040d52:	add    eax,DWORD PTR [rax]
   140040d54:	mov    eax,0xd400023e
   140040d59:	add    al,BYTE PTR ds:[rax]
   140040d5c:	shl    BYTE PTR [rcx+0x3],0x0
   140040d60:	(bad)  
   140040d61:	add    al,BYTE PTR ds:[rax]
   140040d64:	hlt    
   140040d65:	add    al,BYTE PTR ds:[rax]
   140040d68:	enter  0x361,0x0
   140040d6c:	hlt    
   140040d6d:	add    al,BYTE PTR ds:[rax]
   140040d70:	adc    al,0x3f
   140040d72:	add    al,BYTE PTR [rax]
   140040d74:	shl    BYTE PTR [rcx+0x3],1
   140040d77:	add    BYTE PTR [rdi+rdi*1],dl
   140040d7a:	add    al,BYTE PTR [rax]
   140040d7c:	xor    al,0x3f
   140040d7e:	add    al,BYTE PTR [rax]
   140040d80:	fsub   DWORD PTR [rcx+0x3]
   140040d83:	add    BYTE PTR [rdi+rdi*1],dh
   140040d86:	add    al,BYTE PTR [rax]
   140040d88:	push   rbx
   140040d89:	(bad)  
   140040d8a:	add    al,BYTE PTR [rax]
   140040d8c:	loopne 0x140040def
   140040d8e:	add    eax,DWORD PTR [rax]
   140040d90:	push   rbx
   140040d91:	(bad)  
   140040d92:	add    al,BYTE PTR [rax]
   140040d94:	jae    0x140040dd5
   140040d96:	add    al,BYTE PTR [rax]
   140040d98:	call   0x1b30410fe
   140040d9d:	(bad)  
   140040d9e:	add    al,BYTE PTR [rax]
   140040da0:	xchg   edx,eax
   140040da1:	(bad)  
   140040da2:	add    al,BYTE PTR [rax]
   140040da4:	lock (bad) 
   140040da6:	add    eax,DWORD PTR [rax]
   140040da8:	xchg   edx,eax
   140040da9:	(bad)  
   140040daa:	add    al,BYTE PTR [rax]
   140040dac:	stos   BYTE PTR es:[rdi],al
   140040dad:	(bad)  
   140040dae:	add    al,BYTE PTR [rax]
   140040db0:	cwde   
   140040db1:	(bad)  
   140040db3:	add    BYTE PTR [rdx-0x39fffdc1],ch
   140040db9:	(bad)  
   140040dba:	add    al,BYTE PTR [rax]
   140040dbc:	movabs al,ds:0xe600023fc6000362
   140040dc5:	(bad)  
   140040dc6:	add    al,BYTE PTR [rax]
   140040dc8:	test   al,0x62
   140040dca:	add    eax,DWORD PTR [rax]
   140040dcc:	out    0x3f,al
   140040dce:	add    al,BYTE PTR [rax]
   140040dd0:	(bad)  
   140040dd1:	add    al,BYTE PTR [rax]
   140040dd4:	mov    al,0x62
   140040dd6:	add    eax,DWORD PTR [rax]
   140040dd8:	(bad)  
   140040dd9:	add    al,BYTE PTR [rax]
   140040ddc:	add    al,BYTE PTR es:[rax]
   140040de0:	mov    eax,0x26000362
   140040de5:	add    al,BYTE PTR [rax]
   140040de8:	rex.RB
   140040de9:	add    al,BYTE PTR [rax]
   140040dec:	shl    BYTE PTR [rdx+0x3],0x0
   140040df0:	rex.RB
   140040df1:	add    al,BYTE PTR [rax]
   140040df4:	add    al,BYTE PTR gs:[rax]
   140040df8:	enter  0x362,0x0
   140040dfc:	add    al,BYTE PTR gs:[rax]
   140040e00:	test   BYTE PTR [rax+0x2],al
   140040e03:	add    al,dl
   140040e05:	(bad)  
   140040e07:	add    BYTE PTR [rax+rax*2+0x409c0002],al
   140040e0e:	add    al,BYTE PTR [rax]
   140040e10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040e11:	ins    DWORD PTR es:[rdi],dx
   140040e12:	add    eax,DWORD PTR [rax]
   140040e14:	pushf  
   140040e15:	add    al,BYTE PTR [rax]
   140040e18:	mov    bh,0x40
   140040e1a:	add    al,BYTE PTR [rax]
   140040e1c:	lods   al,BYTE PTR ds:[rsi]
   140040e1d:	ins    DWORD PTR es:[rdi],dx
   140040e1e:	add    eax,DWORD PTR [rax]
   140040e20:	mov    bh,0x40
   140040e22:	add    al,BYTE PTR [rax]
   140040e24:	iret   
   140040e25:	add    al,BYTE PTR [rax]
   140040e28:	mov    ah,0x6d
   140040e2a:	add    eax,DWORD PTR [rax]
   140040e2c:	iret   
   140040e2d:	add    al,BYTE PTR [rax]
   140040e30:	out    0x40,eax
   140040e32:	add    al,BYTE PTR [rax]
   140040e34:	mov    esp,0xe700036d
   140040e39:	add    al,BYTE PTR [rax]
   140040e3c:	add    al,BYTE PTR [rcx+0x2]
   140040e3f:	add    ah,al
   140040e41:	ins    DWORD PTR es:[rdi],dx
   140040e42:	add    eax,DWORD PTR [rax]
   140040e44:	add    al,BYTE PTR [rcx+0x2]
   140040e47:	add    BYTE PTR [rdx],bl
   140040e49:	add    al,BYTE PTR [r8]
   140040e4c:	int3   
   140040e4d:	ins    DWORD PTR es:[rdi],dx
   140040e4e:	add    eax,DWORD PTR [rax]
   140040e50:	sbb    al,BYTE PTR [rcx+0x2]
   140040e53:	add    BYTE PTR [rip+0xffffffffd4000241],dh        # 0x11404109a
   140040e59:	ins    DWORD PTR es:[rdi],dx
   140040e5a:	add    eax,DWORD PTR [rax]
   140040e5c:	xor    eax,0x50000241
   140040e61:	add    al,BYTE PTR [r8]
   140040e64:	fsubr  QWORD PTR [rbp+0x3]
   140040e67:	add    BYTE PTR [rax+0x41],dl
   140040e6a:	add    al,BYTE PTR [rax]
   140040e6c:	imul   eax,DWORD PTR [rcx+0x2],0x0
   140040e70:	in     al,0x6d
   140040e72:	add    eax,DWORD PTR [rax]
   140040e74:	imul   eax,DWORD PTR [rcx+0x2],0x0
   140040e78:	xchg   BYTE PTR [rcx+0x2],al
   140040e7b:	add    ah,ch
   140040e7d:	ins    DWORD PTR es:[rdi],dx
   140040e7e:	add    eax,DWORD PTR [rax]
   140040e80:	xchg   BYTE PTR [rcx+0x2],al
   140040e83:	add    BYTE PTR [rcx-0xbfffdbf],ah
   140040e89:	ins    DWORD PTR es:[rdi],dx
   140040e8a:	add    eax,DWORD PTR [rax]
   140040e8c:	movabs eax,ds:0xfc000241bc000241
   140040e95:	ins    DWORD PTR es:[rdi],dx
   140040e96:	add    eax,DWORD PTR [rax]
   140040e98:	mov    esp,0xd7000241
   140040e9d:	add    al,BYTE PTR [r8]
   140040ea0:	add    al,0x6e
   140040ea2:	add    eax,DWORD PTR [rax]
   140040ea4:	xlat   BYTE PTR ds:[rbx]
   140040ea5:	add    al,BYTE PTR [r8]
   140040ea8:	repnz add al,BYTE PTR [r8]
   140040eac:	or     al,0x6e
   140040eae:	add    eax,DWORD PTR [rax]
   140040eb0:	repnz add al,BYTE PTR [r8]
   140040eb4:	or     eax,0x14000242
   140040eb9:	outs   dx,BYTE PTR ds:[rsi]
   140040eba:	add    eax,DWORD PTR [rax]
   140040ebc:	or     eax,0x28000242
   140040ec1:	rex.X add al,BYTE PTR [rax]
   140040ec4:	sbb    al,0x6e
   140040ec6:	add    eax,DWORD PTR [rax]
   140040ec8:	sub    BYTE PTR [rdx+0x2],al
   140040ecb:	add    BYTE PTR [rbx+0x42],al
   140040ece:	add    al,BYTE PTR [rax]
   140040ed0:	and    al,0x6e
   140040ed2:	add    eax,DWORD PTR [rax]
   140040ed4:	rex.XB
   140040ed5:	rex.X add al,BYTE PTR [rax]
   140040ed8:	pop    rsi
   140040ed9:	rex.X add al,BYTE PTR [rax]
   140040edc:	sub    al,0x6e
   140040ede:	add    eax,DWORD PTR [rax]
   140040ee0:	pop    rsi
   140040ee1:	rex.X add al,BYTE PTR [rax]
   140040ee4:	jns    0x140040f28
   140040ee6:	add    al,BYTE PTR [rax]
   140040ee8:	xor    al,0x6e
   140040eea:	add    eax,DWORD PTR [rax]
   140040eec:	jns    0x140040f30
   140040eee:	add    al,BYTE PTR [rax]
   140040ef0:	xchg   esp,eax
   140040ef1:	rex.X add al,BYTE PTR [rax]
   140040ef4:	cmp    al,0x6e
   140040ef6:	add    eax,DWORD PTR [rax]
   140040ef8:	xchg   esp,eax
   140040ef9:	rex.X add al,BYTE PTR [rax]
   140040efc:	scas   eax,DWORD PTR es:[rdi]
   140040efd:	rex.X add al,BYTE PTR [rax]
   140040f00:	rex.R outs dx,BYTE PTR ds:[rsi]
   140040f02:	add    eax,DWORD PTR [rax]
   140040f04:	scas   eax,DWORD PTR es:[rdi]
   140040f05:	rex.X add al,BYTE PTR [rax]
   140040f08:	retf   0x242
   140040f0b:	add    BYTE PTR [rsi+rbp*2+0x3],cl
   140040f0f:	add    dl,cl
   140040f11:	rex.X add al,BYTE PTR [rax]
   140040f14:	in     eax,0x42
   140040f16:	add    al,BYTE PTR [rax]
   140040f18:	push   rsp
   140040f19:	outs   dx,BYTE PTR ds:[rsi]
   140040f1a:	add    eax,DWORD PTR [rax]
   140040f1c:	in     eax,0x42
   140040f1e:	add    al,BYTE PTR [rax]
   140040f20:	add    BYTE PTR [rbx+0x2],al
   140040f23:	add    BYTE PTR [rsi+rbp*2+0x3],bl
   140040f27:	add    BYTE PTR [rax],al
   140040f29:	rex.XB add al,BYTE PTR [r8]
   140040f2c:	sbb    eax,DWORD PTR [rbx+0x2]
   140040f2f:	add    BYTE PTR [rsi+rbp*2+0x3],ah
   140040f33:	add    BYTE PTR [rbx],bl
   140040f35:	rex.XB add al,BYTE PTR [r8]
   140040f38:	rex.XB add al,BYTE PTR ss:[r8]
   140040f3c:	ins    BYTE PTR es:[rdi],dx
   140040f3d:	outs   dx,BYTE PTR ds:[rsi]
   140040f3e:	add    eax,DWORD PTR [rax]
   140040f40:	rex.XB add al,BYTE PTR ss:[r8]
   140040f44:	push   rcx
   140040f45:	rex.XB add al,BYTE PTR [r8]
   140040f48:	je     0x140040fb8
   140040f4a:	add    eax,DWORD PTR [rax]
   140040f4c:	push   rcx
   140040f4d:	rex.XB add al,BYTE PTR [r8]
   140040f50:	ins    BYTE PTR es:[rdi],dx
   140040f51:	rex.XB add al,BYTE PTR [r8]
   140040f54:	jl     0x140040fc4
   140040f56:	add    eax,DWORD PTR [rax]
   140040f58:	ins    BYTE PTR es:[rdi],dx
   140040f59:	rex.XB add al,BYTE PTR [r8]
   140040f5c:	mov    BYTE PTR [rbx+0x2],al
   140040f5f:	add    BYTE PTR [rsi+rbp*2+0x43880003],al
   140040f66:	add    al,BYTE PTR [rax]
   140040f68:	movabs ds:0xa300036e8c000243,eax
   140040f71:	rex.XB add al,BYTE PTR [r8]
   140040f74:	mov    esi,0x94000243
   140040f79:	outs   dx,BYTE PTR ds:[rsi]
   140040f7a:	add    eax,DWORD PTR [rax]
   140040f7c:	mov    esi,0xd9000243
   140040f81:	rex.XB add al,BYTE PTR [r8]
   140040f84:	pushf  
   140040f85:	outs   dx,BYTE PTR ds:[rsi]
   140040f86:	add    eax,DWORD PTR [rax]
   140040f88:	fld    DWORD PTR [rbx+0x2]
   140040f8b:	add    ah,dh
   140040f8d:	rex.XB add al,BYTE PTR [r8]
   140040f90:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040f91:	outs   dx,BYTE PTR ds:[rsi]
   140040f92:	add    eax,DWORD PTR [rax]
   140040f94:	hlt    
   140040f95:	rex.XB add al,BYTE PTR [r8]
   140040f98:	cmove  eax,DWORD PTR [rdx]
   140040f9b:	add    BYTE PTR [rsi+rbp*2+0x440f0003],ch
   140040fa2:	add    al,BYTE PTR [rax]
   140040fa4:	sub    al,BYTE PTR [rdx+rax*1+0x0]
   140040fa8:	mov    ah,0x6e
   140040faa:	add    eax,DWORD PTR [rax]
   140040fac:	sub    al,BYTE PTR [rdx+rax*1+0x0]
   140040fb0:	rex.RX
   140040fb1:	add    r8b,BYTE PTR [rax]
   140040fb4:	mov    esp,0x4600036e
   140040fb9:	add    r8b,BYTE PTR [rax]
   140040fbc:	(bad)  
   140040fbd:	add    r8b,BYTE PTR [rax]
   140040fc0:	(bad)  
   140040fc1:	outs   dx,BYTE PTR ds:[rsi]
   140040fc2:	add    eax,DWORD PTR [rax]
   140040fc4:	(bad)  
   140040fc5:	add    r8b,BYTE PTR [rax]
   140040fc8:	jge    0x14004100e
   140040fca:	add    al,BYTE PTR [rax]
   140040fcc:	int3   
   140040fcd:	outs   dx,BYTE PTR ds:[rsi]
   140040fce:	add    eax,DWORD PTR [rax]
   140040fd0:	jge    0x140041016
   140040fd2:	add    al,BYTE PTR [rax]
   140040fd4:	cwde   
   140040fd5:	add    r8b,BYTE PTR [rax]
   140040fd8:	(bad)  
   140040fd9:	outs   dx,BYTE PTR ds:[rsi]
   140040fda:	add    eax,DWORD PTR [rax]
   140040fdc:	cwde   
   140040fdd:	add    r8b,BYTE PTR [rax]
   140040fe0:	mov    bl,0x44
   140040fe2:	add    al,BYTE PTR [rax]
   140040fe4:	fsubr  QWORD PTR [rsi+0x3]
   140040fe7:	add    BYTE PTR [rbx-0x30fffdbc],dh
   140040fed:	add    r8b,BYTE PTR [rax]
   140040ff0:	in     al,0x6e
   140040ff2:	add    eax,DWORD PTR [rax]
   140040ff4:	iret   
   140040ff5:	add    r8b,BYTE PTR [rax]
   140040ff8:	call   0x12c041241
   140040ffd:	outs   dx,BYTE PTR ds:[rsi]
   140040ffe:	add    eax,DWORD PTR [rax]
   140041000:	call   0x143041249
   140041005:	add    r8b,BYTE PTR [r8]
   140041008:	hlt    
   140041009:	outs   dx,BYTE PTR ds:[rsi]
   14004100a:	add    eax,DWORD PTR [rax]
   14004100c:	add    eax,DWORD PTR [rbp+0x2]
   14004100f:	add    BYTE PTR [rsi],bl
   140041011:	add    r8b,BYTE PTR [r8]
   140041014:	cld    
   140041015:	outs   dx,BYTE PTR ds:[rsi]
   140041016:	add    eax,DWORD PTR [rax]
   140041018:	(bad)  
   140041019:	add    r8b,BYTE PTR [r8]
   14004101c:	cmp    DWORD PTR [rbp+0x2],eax
   14004101f:	add    BYTE PTR [rdi+rbp*2],al
   140041022:	add    eax,DWORD PTR [rax]
   140041024:	cmp    DWORD PTR [rbp+0x2],eax
   140041027:	add    BYTE PTR [rbp+0x45],dl
   14004102a:	add    al,BYTE PTR [rax]
   14004102c:	or     al,0x6f
   14004102e:	add    eax,DWORD PTR [rax]
   140041030:	push   rbp
   140041031:	add    r8b,BYTE PTR [r8]
   140041034:	jno    0x14004107b
   140041036:	add    al,BYTE PTR [rax]
   140041038:	adc    al,0x6f
   14004103a:	add    eax,DWORD PTR [rax]
   14004103c:	jno    0x140041083
   14004103e:	add    al,BYTE PTR [rax]
   140041040:	mov    WORD PTR [rbp+0x2],es
   140041043:	add    BYTE PTR [rdi+rbp*2],bl
   140041046:	add    eax,DWORD PTR [rax]
   140041048:	mov    WORD PTR [rbp+0x2],es
   14004104b:	add    BYTE PTR [rdi+0x24000245],ah
   140041051:	outs   dx,DWORD PTR ds:[rsi]
   140041052:	add    eax,DWORD PTR [rax]
   140041054:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041055:	add    r8b,BYTE PTR [r8]
   140041058:	ret    0x245
   14004105b:	add    BYTE PTR [rdi+rbp*2],ch
   14004105e:	add    eax,DWORD PTR [rax]
   140041060:	ret    0x245
   140041063:	add    dh,bl
   140041065:	add    r8b,BYTE PTR [r8]
   140041068:	xor    al,0x6f
   14004106a:	add    eax,DWORD PTR [rax]
   14004106c:	fiadd  WORD PTR [rbp+0x2]
   14004106f:	add    dl,bh
   140041071:	add    r8b,BYTE PTR [r8]
   140041074:	cmp    al,0x6f
   140041076:	add    eax,DWORD PTR [rax]
   140041078:	cli    
   140041079:	add    r8b,BYTE PTR [r8]
   14004107c:	adc    eax,0x44000246
   140041081:	outs   dx,DWORD PTR ds:[rsi]
   140041082:	add    eax,DWORD PTR [rax]
   140041084:	adc    eax,0x30000246
   140041089:	rex.RX add r8b,BYTE PTR [rax]
   14004108c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004108e:	add    eax,DWORD PTR [rax]
   140041090:	xor    BYTE PTR [rsi+0x2],al
   140041093:	add    BYTE PTR [rbx+0x46],cl
   140041096:	add    al,BYTE PTR [rax]
   140041098:	push   rsp
   140041099:	outs   dx,DWORD PTR ds:[rsi]
   14004109a:	add    eax,DWORD PTR [rax]
   14004109c:	rex.WXB
   14004109d:	rex.RX add r8b,BYTE PTR [rax]
   1400410a0:	rex.RX add r8b,BYTE PTR [eax]
   1400410a4:	pop    rsp
   1400410a5:	outs   dx,DWORD PTR ds:[rsi]
   1400410a6:	add    eax,DWORD PTR [rax]
   1400410a8:	rex.RX add r8b,BYTE PTR [eax]
   1400410ac:	add    BYTE PTR [rsi+0x2],0x0
   1400410b0:	outs   dx,DWORD PTR fs:[rsi]
   1400410b2:	add    eax,DWORD PTR [rax]
   1400410b4:	add    BYTE PTR [rsi+0x2],0x0
   1400410b8:	fwait
   1400410b9:	rex.RX add r8b,BYTE PTR [rax]
   1400410bc:	ins    BYTE PTR es:[rdi],dx
   1400410bd:	outs   dx,DWORD PTR ds:[rsi]
   1400410be:	add    eax,DWORD PTR [rax]
   1400410c0:	fwait
   1400410c1:	rex.RX add r8b,BYTE PTR [rax]
   1400410c4:	mov    dh,0x46
   1400410c6:	add    al,BYTE PTR [rax]
   1400410c8:	je     0x140041139
   1400410ca:	add    eax,DWORD PTR [rax]
   1400410cc:	mov    dh,0x46
   1400410ce:	add    al,BYTE PTR [rax]
   1400410d0:	rol    DWORD PTR [rsi+0x2],1
   1400410d3:	add    BYTE PTR [rdi+rbp*2+0x3],bh
   1400410d7:	add    cl,dl
   1400410d9:	rex.RX add r8b,BYTE PTR [rax]
   1400410dc:	in     eax,dx
   1400410dd:	rex.RX add r8b,BYTE PTR [rax]
   1400410e0:	test   BYTE PTR [rdi+0x3],ch
   1400410e3:	add    ch,ch
   1400410e5:	rex.RX add r8b,BYTE PTR [rax]
   1400410e8:	(bad)  
   1400410e9:	rex.RXB add r8b,BYTE PTR [r8]
   1400410ec:	mov    WORD PTR [rdi+0x3],gs
   1400410ef:	add    BYTE PTR [rsi],al
   1400410f1:	rex.RXB add r8b,BYTE PTR [r8]
   1400410f4:	and    DWORD PTR [rdi+0x2],eax
   1400410f7:	add    BYTE PTR [rdi+rbp*2+0x47210003],dl
   1400410fe:	add    al,BYTE PTR [rax]
   140041100:	cmp    al,0x47
   140041102:	add    al,BYTE PTR [rax]
   140041104:	pushf  
   140041105:	outs   dx,DWORD PTR ds:[rsi]
   140041106:	add    eax,DWORD PTR [rax]
   140041108:	cmp    al,0x47
   14004110a:	add    al,BYTE PTR [rax]
   14004110c:	push   rdi
   14004110d:	rex.RXB add r8b,BYTE PTR [r8]
   140041110:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041111:	outs   dx,DWORD PTR ds:[rsi]
   140041112:	add    eax,DWORD PTR [rax]
   140041114:	push   rdi
   140041115:	rex.RXB add r8b,BYTE PTR [r8]
   140041118:	jae    0x140041161
   14004111a:	add    al,BYTE PTR [rax]
   14004111c:	lods   al,BYTE PTR ds:[rsi]
   14004111d:	outs   dx,DWORD PTR ds:[rsi]
   14004111e:	add    eax,DWORD PTR [rax]
   140041120:	jae    0x140041169
   140041122:	add    al,BYTE PTR [rax]
   140041124:	mov    WORD PTR [rdi+0x2],es
   140041127:	add    BYTE PTR [rdi+rbp*2+0x478c0003],dh
   14004112e:	add    al,BYTE PTR [rax]
   140041130:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041131:	rex.RXB add r8b,BYTE PTR [r8]
   140041134:	mov    esp,0xa700036f
   140041139:	rex.RXB add r8b,BYTE PTR [r8]
   14004113c:	ret    0x247
   14004113f:	add    ah,al
   140041141:	outs   dx,DWORD PTR ds:[rsi]
   140041142:	add    eax,DWORD PTR [rax]
   140041144:	ret    0x247
   140041147:	add    ch,bl
   140041149:	rex.RXB add r8b,BYTE PTR [r8]
   14004114c:	int3   
   14004114d:	outs   dx,DWORD PTR ds:[rsi]
   14004114e:	add    eax,DWORD PTR [rax]
   140041150:	fld    QWORD PTR [rdi+0x2]
   140041153:	add    cl,bh
   140041155:	rex.RXB add r8b,BYTE PTR [r8]
   140041158:	(bad)  
   140041159:	outs   dx,DWORD PTR ds:[rsi]
   14004115a:	add    eax,DWORD PTR [rax]
   14004115c:	stc    
   14004115d:	rex.RXB add r8b,BYTE PTR [r8]
   140041160:	adc    al,0x48
   140041162:	add    al,BYTE PTR [rax]
   140041164:	fsubr  QWORD PTR [rdi+0x3]
   140041167:	add    BYTE PTR [rax+rcx*2],dl
   14004116a:	add    al,BYTE PTR [rax]
   14004116c:	(bad)  
   14004116d:	rex.W add al,BYTE PTR [rax]
   140041170:	in     al,0x6f
   140041172:	add    eax,DWORD PTR [rax]
   140041174:	(bad)  
   140041175:	rex.W add al,BYTE PTR [rax]
   140041178:	rex.WX
   140041179:	rex.W add al,BYTE PTR [rax]
   14004117c:	in     al,dx
   14004117d:	outs   dx,DWORD PTR ds:[rsi]
   14004117e:	add    eax,DWORD PTR [rax]
   140041180:	rex.WX
   140041181:	rex.W add al,BYTE PTR [rax]
   140041184:	rex.W add al,BYTE PTR gs:[rax]
   140041188:	hlt    
   140041189:	outs   dx,DWORD PTR ds:[rsi]
   14004118a:	add    eax,DWORD PTR [rax]
   14004118c:	rex.W add al,BYTE PTR gs:[rax]
   140041190:	or     BYTE PTR [rax+0x2],0x0
   140041194:	cld    
   140041195:	outs   dx,DWORD PTR ds:[rsi]
   140041196:	add    eax,DWORD PTR [rax]
   140041198:	or     BYTE PTR [rax+0x2],0x0
   14004119c:	fwait
   14004119d:	rex.W add al,BYTE PTR [rax]
   1400411a0:	add    al,0x70
   1400411a2:	add    eax,DWORD PTR [rax]
   1400411a4:	fwait
   1400411a5:	rex.W add al,BYTE PTR [rax]
   1400411a8:	mov    dh,0x48
   1400411aa:	add    al,BYTE PTR [rax]
   1400411ac:	or     al,0x70
   1400411ae:	add    eax,DWORD PTR [rax]
   1400411b0:	mov    dh,0x48
   1400411b2:	add    al,BYTE PTR [rax]
   1400411b4:	ror    DWORD PTR [rax+0x2],1
   1400411b7:	add    BYTE PTR [rax+rsi*2],dl
   1400411ba:	add    eax,DWORD PTR [rax]
   1400411bc:	ror    DWORD PTR [rax+0x2],1
   1400411bf:	add    ah,ch
   1400411c1:	rex.W add al,BYTE PTR [rax]
   1400411c4:	sbb    al,0x70
   1400411c6:	add    eax,DWORD PTR [rax]
   1400411c8:	in     al,dx
   1400411c9:	rex.W add al,BYTE PTR [rax]
   1400411cc:	(bad)  
   1400411cd:	rex.WB add al,BYTE PTR [r8]
   1400411d0:	and    al,0x70
   1400411d2:	add    eax,DWORD PTR [rax]
   1400411d4:	(bad)  
   1400411d5:	rex.WB add al,BYTE PTR [r8]
   1400411d8:	and    cl,BYTE PTR [rcx+0x2]
   1400411db:	add    BYTE PTR [rax+rsi*2],ch
   1400411de:	add    eax,DWORD PTR [rax]
   1400411e0:	and    cl,BYTE PTR [rcx+0x2]
   1400411e3:	add    BYTE PTR [rip+0x34000249],bh        # 0x174041432
   1400411e9:	jo     0x1400411ee
   1400411eb:	add    BYTE PTR [rip+0x58000249],bh        # 0x19804143a
   1400411f1:	rex.WB add al,BYTE PTR [r8]
   1400411f4:	cmp    al,0x70
   1400411f6:	add    eax,DWORD PTR [rax]
   1400411f8:	pop    rax
   1400411f9:	rex.WB add al,BYTE PTR [r8]
   1400411fc:	jae    0x140041247
   1400411fe:	add    al,BYTE PTR [rax]
   140041200:	rex.R jo 0x140041206
   140041203:	add    BYTE PTR [rbx+0x49],dh
   140041206:	add    al,BYTE PTR [rax]
   140041208:	mov    cs,WORD PTR [rcx+0x2]
   14004120b:	add    BYTE PTR [rax+rsi*2+0x3],cl
   14004120f:	add    BYTE PTR [rsi-0x56fffdb7],cl
   140041215:	rex.WB add al,BYTE PTR [r8]
   140041218:	push   rsp
   140041219:	jo     0x14004121e
   14004121b:	add    BYTE PTR [rcx-0x3bfffdb7],ch
   140041221:	rex.WB add al,BYTE PTR [r8]
   140041224:	pop    rsp
   140041225:	jo     0x14004122a
   140041227:	add    ah,al
   140041229:	rex.WB add al,BYTE PTR [r8]
   14004122c:	fisttp WORD PTR [rcx+0x2]
   14004122f:	add    BYTE PTR [rax+rsi*2+0x3],ah
   140041233:	add    bh,bl
   140041235:	rex.WB add al,BYTE PTR [r8]
   140041238:	cli    
   140041239:	rex.WB add al,BYTE PTR [r8]
   14004123c:	ins    BYTE PTR es:[rdi],dx
   14004123d:	jo     0x140041242
   14004123f:	add    dl,bh
   140041241:	rex.WB add al,BYTE PTR [r8]
   140041244:	adc    eax,0x7400024a
   140041249:	jo     0x14004124e
   14004124b:	add    BYTE PTR [rip+0x3000024a],dl        # 0x17004149b
   140041251:	rex.WX add al,BYTE PTR [rax]
   140041254:	jl     0x1400412c6
   140041256:	add    eax,DWORD PTR [rax]
   140041258:	xor    BYTE PTR [rdx+0x2],cl
   14004125b:	add    BYTE PTR [rbx+0x4a],cl
   14004125e:	add    al,BYTE PTR [rax]
   140041260:	test   BYTE PTR [rax+0x3],dh
   140041263:	add    BYTE PTR [rbx+0x4a],cl
   140041266:	add    al,BYTE PTR [rax]
   140041268:	data16 rex.WX add al,BYTE PTR [rax]
   14004126c:	mov    WORD PTR [rax+0x3],?
   14004126f:	add    BYTE PTR [rsi+0x4a],ah
   140041272:	add    al,BYTE PTR [rax]
   140041274:	(bad)  
   140041275:	rex.WX add al,BYTE PTR [rax]
   140041278:	xchg   esp,eax
   140041279:	jo     0x14004127e
   14004127b:	add    BYTE PTR [rdx-0x62fffdb6],al
   140041281:	rex.WX add al,BYTE PTR [rax]
   140041284:	pushf  
   140041285:	jo     0x14004128a
   140041287:	add    BYTE PTR [rbp-0x47fffdb6],bl
   14004128d:	rex.WX add al,BYTE PTR [rax]
   140041290:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041291:	jo     0x140041296
   140041293:	add    BYTE PTR [rax-0x2cfffdb6],bh
   140041299:	rex.WX add al,BYTE PTR [rax]
   14004129c:	lods   al,BYTE PTR ds:[rsi]
   14004129d:	jo     0x1400412a2
   14004129f:	add    bl,dl
   1400412a1:	rex.WX add al,BYTE PTR [rax]
   1400412a4:	out    dx,al
   1400412a5:	rex.WX add al,BYTE PTR [rax]
   1400412a8:	mov    ah,0x70
   1400412aa:	add    eax,DWORD PTR [rax]
   1400412ac:	out    dx,al
   1400412ad:	rex.WX add al,BYTE PTR [rax]
   1400412b0:	or     DWORD PTR [rbx+0x2],ecx
   1400412b3:	add    BYTE PTR [rax+rsi*2+0x4b090003],bh
   1400412ba:	add    al,BYTE PTR [rax]
   1400412bc:	and    eax,0xc400024b
   1400412c1:	jo     0x1400412c6
   1400412c3:	add    BYTE PTR [rip+0x4000024b],ah        # 0x180041514
   1400412c9:	rex.WXB add al,BYTE PTR [r8]
   1400412cc:	int3   
   1400412cd:	jo     0x1400412d2
   1400412cf:	add    BYTE PTR [rax+0x4b],al
   1400412d2:	add    al,BYTE PTR [rax]
   1400412d4:	pop    rbx
   1400412d5:	rex.WXB add al,BYTE PTR [r8]
   1400412d8:	(bad)  
   1400412d9:	jo     0x1400412de
   1400412db:	add    BYTE PTR [rbx+0x4b],bl
   1400412de:	add    al,BYTE PTR [rax]
   1400412e0:	jbe    0x14004132d
   1400412e2:	add    al,BYTE PTR [rax]
   1400412e4:	fdiv   QWORD PTR [rax+0x3]
   1400412e7:	add    BYTE PTR [rsi+0x4b],dh
   1400412ea:	add    al,BYTE PTR [rax]
   1400412ec:	xchg   ecx,eax
   1400412ed:	rex.WXB add al,BYTE PTR [r8]
   1400412f0:	in     al,0x70
   1400412f2:	add    eax,DWORD PTR [rax]
   1400412f4:	xchg   ecx,eax
   1400412f5:	rex.WXB add al,BYTE PTR [r8]
   1400412f8:	lods   eax,DWORD PTR ds:[rsi]
   1400412f9:	rex.WXB add al,BYTE PTR [r8]
   1400412fc:	in     al,dx
   1400412fd:	jo     0x140041302
   1400412ff:	add    BYTE PTR [rbp-0x37fffdb5],ch
   140041305:	rex.WXB add al,BYTE PTR [r8]
   140041308:	hlt    
   140041309:	jo     0x14004130e
   14004130b:	add    al,cl
   14004130d:	rex.WXB add al,BYTE PTR [r8]
   140041310:	jrcxz  0x14004135d
   140041312:	add    al,BYTE PTR [rax]
   140041314:	cld    
   140041315:	jo     0x14004131a
   140041317:	add    bl,ah
   140041319:	rex.WXB add al,BYTE PTR [r8]
   14004131c:	dec    BYTE PTR [rbx+0x2]
   14004131f:	add    BYTE PTR [rcx+rsi*2],al
   140041322:	add    eax,DWORD PTR [rax]
   140041324:	dec    BYTE PTR [rbx+0x2]
   140041327:	add    BYTE PTR [rcx],bl
   140041329:	rex.WR add r8b,BYTE PTR [rax]
   14004132c:	or     al,0x71
   14004132e:	add    eax,DWORD PTR [rax]
   140041330:	sbb    DWORD PTR [rdx+rax*1+0x0],ecx
   140041334:	xor    al,0x4c
   140041336:	add    al,BYTE PTR [rax]
   140041338:	adc    al,0x71
   14004133a:	add    eax,DWORD PTR [rax]
   14004133c:	xor    al,0x4c
   14004133e:	add    al,BYTE PTR [rax]
   140041340:	rex.WRXB
   140041341:	rex.WR add r8b,BYTE PTR [rax]
   140041344:	sbb    al,0x71
   140041346:	add    eax,DWORD PTR [rax]
   140041348:	rex.WRXB
   140041349:	rex.WR add r8b,BYTE PTR [rax]
   14004134c:	push   0x4c
   14004134e:	add    al,BYTE PTR [rax]
   140041350:	and    al,0x71
   140041352:	add    eax,DWORD PTR [rax]
   140041354:	push   0x4c
   140041356:	add    al,BYTE PTR [rax]
   140041358:	test   DWORD PTR [rdx+rax*1+0x0],ecx
   14004135c:	sub    al,0x71
   14004135e:	add    eax,DWORD PTR [rax]
   140041360:	test   DWORD PTR [rdx+rax*1+0x0],ecx
   140041364:	sahf   
   140041365:	rex.WR add r8b,BYTE PTR [rax]
   140041368:	(bad)  
   140041369:	jno    0x14004136e
   14004136b:	add    BYTE PTR [rsi-0x48fffdb4],bl
   140041371:	rex.WR add r8b,BYTE PTR [rax]
   140041374:	int3   
   140041375:	jno    0x14004137a
   140041377:	add    BYTE PTR [rdi-0x2ffffdb4],dh
   14004137d:	rex.WR add r8b,BYTE PTR [rax]
   140041380:	(bad)  
   140041381:	jno    0x140041386
   140041383:	add    al,dl
   140041385:	rex.WR add r8b,BYTE PTR [rax]
   140041388:	jmp    0x11c0415d9
   14004138d:	jno    0x140041392
   14004138f:	add    cl,ch
   140041391:	rex.WR add r8b,BYTE PTR [rax]
   140041394:	add    cl,BYTE PTR [rbp+0x2]
   140041397:	add    BYTE PTR [rdx+rsi*2+0x3],dh
   14004139b:	add    BYTE PTR [rdx],al
   14004139d:	rex.WRB add r8b,BYTE PTR [r8]
   1400413a0:	sbb    ecx,DWORD PTR [rbp+0x2]
   1400413a3:	add    BYTE PTR [rdx+rsi*2+0x3],bh
   1400413a7:	add    BYTE PTR [rbx],bl
   1400413a9:	rex.WRB add r8b,BYTE PTR [r8]
   1400413ac:	xor    al,0x4d
   1400413ae:	add    al,BYTE PTR [rax]
   1400413b0:	test   BYTE PTR [rdx+0x3],dh
   1400413b3:	add    BYTE PTR [rcx*2+0x4d4c0002],dh
   1400413ba:	add    al,BYTE PTR [rax]
   1400413bc:	mov    WORD PTR [rdx+0x3],?
   1400413bf:	add    BYTE PTR [rbp+rcx*2+0x2],cl
   1400413c3:	add    BYTE PTR [rbp+0x4d],ah
   1400413c6:	add    al,BYTE PTR [rax]
   1400413c8:	xchg   esp,eax
   1400413c9:	jb     0x1400413ce
   1400413cb:	add    BYTE PTR [rbp+0x4d],ah
   1400413ce:	add    al,BYTE PTR [rax]
   1400413d0:	mov    WORD PTR [rbp+0x2],cs
   1400413d3:	add    ah,dl
   1400413d5:	jb     0x1400413da
   1400413d7:	add    BYTE PTR [rbp+rcx*2+0x4da50002],cl
   1400413de:	add    al,BYTE PTR [rax]
   1400413e0:	rex.R jae 0x1400413e6
   1400413e3:	add    BYTE PTR [rbp-0x41fffdb3],ah
   1400413e9:	rex.WRB add r8b,BYTE PTR [r8]
   1400413ec:	rex.WR jae 0x1400413f2
   1400413ef:	add    BYTE PTR [rsi-0x1afffdb3],bh
   1400413f5:	rex.WRB add r8b,BYTE PTR [r8]
   1400413f8:	push   rsp
   1400413f9:	jae    0x1400413fe
   1400413fb:	add    ch,ah
   1400413fd:	rex.WRB add r8b,BYTE PTR [r8]
   140041400:	dec    BYTE PTR [rbp+0x2]
   140041403:	add    BYTE PTR [rbx+rsi*2+0x4dfe0003],cl
   14004140a:	add    al,BYTE PTR [rax]
   14004140c:	(bad)  
   14004140d:	rex.WRX add r8b,BYTE PTR [rax]
   140041410:	adc    al,0x74
   140041412:	add    eax,DWORD PTR [rax]
   140041414:	(bad)  
   140041415:	rex.WRX add r8b,BYTE PTR [rax]
   140041418:	xor    BYTE PTR [rsi+0x2],cl
   14004141b:	add    ah,ah
   14004141d:	je     0x140041422
   14004141f:	add    BYTE PTR [rax],dh
   140041421:	rex.WRX add r8b,BYTE PTR [rax]
   140041424:	rex.WB
   140041425:	rex.WRX add r8b,BYTE PTR [rax]
   140041428:	in     al,dx
   140041429:	je     0x14004142e
   14004142b:	add    BYTE PTR [rcx+0x4e],cl
   14004142e:	add    al,BYTE PTR [rax]
   140041430:	jo     0x140041480
   140041432:	add    al,BYTE PTR [rax]
   140041434:	hlt    
   140041435:	je     0x14004143a
   140041437:	add    BYTE PTR [rax+0x4e],dh
   14004143a:	add    al,BYTE PTR [rax]
   14004143c:	mov    DWORD PTR [rsi+0x2],ecx
   14004143f:	add    BYTE PTR [rsi*2+0x4e890003],dh
   140041446:	add    al,BYTE PTR [rax]
   140041448:	mov    al,0x4e
   14004144a:	add    al,BYTE PTR [rax]
   14004144c:	cmp    al,0x75
   14004144e:	add    eax,DWORD PTR [rax]
   140041450:	mov    al,0x4e
   140041452:	add    al,BYTE PTR [rax]
   140041454:	leave  
   140041455:	rex.WRX add r8b,BYTE PTR [rax]
   140041458:	jl     0x1400414cf
   14004145a:	add    eax,DWORD PTR [rax]
   14004145c:	leave  
   14004145d:	rex.WRX add r8b,BYTE PTR [rax]
   140041460:	lock rex.WRX add r8b,BYTE PTR [rax]
   140041464:	test   BYTE PTR [rbp+0x3],dh
   140041467:	add    al,dh
   140041469:	rex.WRX add r8b,BYTE PTR [rax]
   14004146c:	or     DWORD PTR [rdi+0x2],ecx
   14004146f:	add    BYTE PTR [rax+0x76],ch
   140041472:	add    eax,DWORD PTR [rax]
   140041474:	or     DWORD PTR [rdi+0x2],ecx
   140041477:	add    BYTE PTR [rdx],ah
   140041479:	rex.WRXB add r8b,BYTE PTR [r8]
   14004147c:	jo     0x1400414f4
   14004147e:	add    eax,DWORD PTR [rax]
   140041480:	and    cl,BYTE PTR [rdi+0x2]
   140041483:	add    BYTE PTR [rbx],bh
   140041485:	rex.WRXB add r8b,BYTE PTR [r8]
   140041488:	js     0x140041500
   14004148a:	add    eax,DWORD PTR [rax]
   14004148c:	cmp    ecx,DWORD PTR [rdi+0x2]
   14004148f:	add    BYTE PTR [rdi+rcx*2+0x2],dl
   140041493:	add    BYTE PTR [rax+0x54000376],al
   140041499:	rex.WRXB add r8b,BYTE PTR [r8]
   14004149c:	ins    DWORD PTR es:[rdi],dx
   14004149d:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414a0:	mov    BYTE PTR [rsi+0x3],dh
   1400414a3:	add    BYTE PTR [rbp+0x4f],ch
   1400414a6:	add    al,BYTE PTR [rax]
   1400414a8:	xchg   BYTE PTR [rdi+0x2],cl
   1400414ab:	add    BYTE PTR [rax-0x79fffc8a],dl
   1400414b1:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414b4:	sahf   
   1400414b5:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414b8:	enter  0x378,0x0
   1400414bc:	sahf   
   1400414bd:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414c0:	mov    ecx,0xd000024f
   1400414c5:	js     0x1400414ca
   1400414c7:	add    BYTE PTR [rcx-0x2bfffdb1],bh
   1400414cd:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414d0:	fdivr  DWORD PTR [rax+0x3]
   1400414d3:	add    ah,dl
   1400414d5:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414d8:	in     al,dx
   1400414d9:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414dc:	loopne 0x140041556
   1400414de:	add    eax,DWORD PTR [rax]
   1400414e0:	in     al,dx
   1400414e1:	rex.WRXB add r8b,BYTE PTR [r8]
   1400414e4:	add    al,0x50
   1400414e6:	add    al,BYTE PTR [rax]
   1400414e8:	call   0x144041865
   1400414ed:	push   rax
   1400414ee:	add    al,BYTE PTR [rax]
   1400414f0:	sbb    al,0x50
   1400414f2:	add    al,BYTE PTR [rax]
   1400414f4:	lock js 0x1400414fa
   1400414f7:	add    BYTE PTR [rax+rdx*2],bl
   1400414fa:	add    al,BYTE PTR [rax]
   1400414fc:	(bad)  
   1400414fd:	push   rax
   1400414fe:	add    al,BYTE PTR [rax]
   140041500:	clc    
   140041501:	js     0x140041506
   140041503:	add    BYTE PTR [rdi],dh
   140041505:	push   rax
   140041506:	add    al,BYTE PTR [rax]
   140041508:	rex.WRXB push r8
   14004150a:	add    al,BYTE PTR [rax]
   14004150c:	add    BYTE PTR [rcx+0x3],bh
   14004150f:	add    BYTE PTR [rdi+0x50],cl
   140041512:	add    al,BYTE PTR [rax]
   140041514:	push   0x50
   140041516:	add    al,BYTE PTR [rax]
   140041518:	or     BYTE PTR [rcx+0x3],bh
   14004151b:	add    BYTE PTR [rdx+0x50],ch
   14004151e:	add    al,BYTE PTR [rax]
   140041520:	test   DWORD PTR [rax+0x2],edx
   140041523:	add    BYTE PTR [rax],dl
   140041525:	jns    0x14004152a
   140041527:	add    BYTE PTR [rbp-0x5ffffdb0],al
   14004152d:	push   rax
   14004152e:	add    al,BYTE PTR [rax]
   140041530:	sbb    BYTE PTR [rcx+0x3],bh
   140041533:	add    BYTE PTR [rax-0x44fffdb0],ah
   140041539:	push   rax
   14004153a:	add    al,BYTE PTR [rax]
   14004153c:	and    BYTE PTR [rcx+0x3],bh
   14004153f:	add    BYTE PTR [rbx-0x2cfffdb0],bh
   140041545:	push   rax
   140041546:	add    al,BYTE PTR [rax]
   140041548:	sub    BYTE PTR [rcx+0x3],bh
   14004154b:	add    bl,dl
   14004154d:	push   rax
   14004154e:	add    al,BYTE PTR [rax]
   140041550:	jmp    0x1400415a2
   140041552:	add    al,BYTE PTR [rax]
   140041554:	xor    BYTE PTR [rcx+0x3],bh
   140041557:	add    bl,ch
   140041559:	push   rax
   14004155a:	add    al,BYTE PTR [rax]
   14004155c:	(bad)  
   14004155d:	push   rcx
   14004155e:	add    al,BYTE PTR [rax]
   140041560:	cmp    BYTE PTR [rcx+0x3],bh
   140041563:	add    BYTE PTR [rsi],al
   140041565:	push   rcx
   140041566:	add    al,BYTE PTR [rax]
   140041568:	(bad)  
   140041569:	push   rcx
   14004156a:	add    al,BYTE PTR [rax]
   14004156c:	rex jns 0x140041572
   14004156f:	add    BYTE PTR [rsi],bl
   140041571:	push   rcx
   140041572:	add    al,BYTE PTR [rax]
   140041574:	cmp    DWORD PTR [rcx+0x2],edx
   140041577:	add    BYTE PTR [rax+0x79],cl
   14004157a:	add    eax,DWORD PTR [rax]
   14004157c:	cmp    DWORD PTR [rcx+0x2],edx
   14004157f:	add    BYTE PTR [rcx+rdx*2+0x2],dl
   140041583:	add    BYTE PTR [rax+0x79],dl
   140041586:	add    eax,DWORD PTR [rax]
   140041588:	push   rsp
   140041589:	push   rcx
   14004158a:	add    al,BYTE PTR [rax]
   14004158c:	outs   dx,DWORD PTR ds:[rsi]
   14004158d:	push   rcx
   14004158e:	add    al,BYTE PTR [rax]
   140041590:	pop    rax
   140041591:	jns    0x140041596
   140041593:	add    BYTE PTR [rdi+0x51],ch
   140041596:	add    al,BYTE PTR [rax]
   140041598:	xchg   DWORD PTR [rcx+0x2],edx
   14004159b:	add    BYTE PTR [rax+0x7b],dl
   14004159e:	add    eax,DWORD PTR [rax]
   1400415a0:	xchg   DWORD PTR [rcx+0x2],edx
   1400415a3:	add    BYTE PTR [rdx+0x58000251],ah
   1400415a9:	jnp    0x1400415ae
   1400415ab:	add    BYTE PTR [rdx-0x42fffdaf],ah
   1400415b1:	push   rcx
   1400415b2:	add    al,BYTE PTR [rax]
   1400415b4:	(bad)  
   1400415b5:	jnp    0x1400415ba
   1400415b7:	add    BYTE PTR [rbp-0x2afffdaf],bh
   1400415bd:	push   rcx
   1400415be:	add    al,BYTE PTR [rax]
   1400415c0:	push   0xffffffffd500037b
   1400415c5:	push   rcx
   1400415c6:	add    al,BYTE PTR [rax]
   1400415c8:	in     eax,dx
   1400415c9:	push   rcx
   1400415ca:	add    al,BYTE PTR [rax]
   1400415cc:	jo     0x140041649
   1400415ce:	add    eax,DWORD PTR [rax]
   1400415d0:	in     eax,dx
   1400415d1:	push   rcx
   1400415d2:	add    al,BYTE PTR [rax]
   1400415d4:	add    eax,0x78000252
   1400415d9:	jnp    0x1400415de
   1400415db:	add    BYTE PTR [rip+0x1d000252],al        # 0x15d041833
   1400415e1:	push   rdx
   1400415e2:	add    al,BYTE PTR [rax]
   1400415e4:	cmp    BYTE PTR [rbx+0x3],0x0
   1400415e8:	sbb    eax,0x35000252
   1400415ed:	push   rdx
   1400415ee:	add    al,BYTE PTR [rax]
   1400415f0:	mov    BYTE PTR [rbx+0x3],bh
   1400415f3:	add    BYTE PTR [rip+0x50000252],dh        # 0x19004184b
   1400415f9:	push   rdx
   1400415fa:	add    al,BYTE PTR [rax]
   1400415fc:	nop
   1400415fd:	jnp    0x140041602
   1400415ff:	add    BYTE PTR [rax+0x52],dl
   140041602:	add    al,BYTE PTR [rax]
   140041604:	imul   edx,DWORD PTR [rdx+0x2],0x0
   140041608:	cwde   
   140041609:	jnp    0x14004160e
   14004160b:	add    BYTE PTR [rbx+0x52],ch
   14004160e:	add    al,BYTE PTR [rax]
   140041610:	xchg   BYTE PTR [rdx+0x2],dl
   140041613:	add    BYTE PTR [rax-0x79fffc85],ah
   140041619:	push   rdx
   14004161a:	add    al,BYTE PTR [rax]
   14004161c:	movabs eax,ds:0xa100037ba8000252
   140041625:	push   rdx
   140041626:	add    al,BYTE PTR [rax]
   140041628:	mov    ecx,0xb0000252
   14004162d:	jnp    0x140041632
   14004162f:	add    BYTE PTR [rcx-0x2efffdae],bh
   140041635:	push   rdx
   140041636:	add    al,BYTE PTR [rax]
   140041638:	mov    eax,0xd100037b
   14004163d:	push   rdx
   14004163e:	add    al,BYTE PTR [rax]
   140041640:	in     al,dx
   140041641:	push   rdx
   140041642:	add    al,BYTE PTR [rax]
   140041644:	sar    BYTE PTR [rbx+0x3],0x0
   140041648:	in     al,dx
   140041649:	push   rdx
   14004164a:	add    al,BYTE PTR [rax]
   14004164c:	(bad)  
   14004164d:	push   rbx
   14004164e:	add    al,BYTE PTR [rax]
   140041650:	enter  0x37b,0x0
   140041654:	(bad)  
   140041655:	push   rbx
   140041656:	add    al,BYTE PTR [rax]
   140041658:	rex.RB push r11
   14004165a:	add    al,BYTE PTR [rax]
   14004165c:	rex.W jl 0x140041662
   14004165f:	add    BYTE PTR [rax+0x53],dl
   140041662:	add    al,BYTE PTR [rax]
   140041664:	push   0xffffffffa8000253
   140041669:	(bad)  
   14004166a:	add    eax,DWORD PTR [rax]
   14004166c:	jo     0x1400416c1
   14004166e:	add    al,BYTE PTR [rax]
   140041670:	mov    ah,0x53
   140041672:	add    al,BYTE PTR [rax]
   140041674:	mov    esp,0xc000037e
   140041679:	push   rbx
   14004167a:	add    al,BYTE PTR [rax]
   14004167c:	add    al,0x54
   14004167e:	add    al,BYTE PTR [rax]
   140041680:	xor    al,0x7f
   140041682:	add    eax,DWORD PTR [rax]
   140041684:	adc    BYTE PTR [rdx+rax*1+0x0],dl
   140041688:	sub    BYTE PTR [rdx+rax*1+0x0],dl
   14004168c:	test   al,0x60
   14004168e:	add    eax,DWORD PTR [rax]
   140041690:	xor    BYTE PTR [rdx+rax*1+0x0],dl
   140041694:	rex.W push rsp
   140041696:	add    al,BYTE PTR [rax]
   140041698:	test   al,0x60
   14004169a:	add    eax,DWORD PTR [rax]
   14004169c:	push   rax
   14004169d:	push   rsp
   14004169e:	add    al,BYTE PTR [rax]
   1400416a0:	imul   edx,DWORD PTR [rdx+rax*1+0x0],0x360a8
   1400416a8:	imul   edx,DWORD PTR [rdx+rax*1+0x0],0x25486
   1400416b0:	test   al,0x60
   1400416b2:	add    eax,DWORD PTR [rax]
   1400416b4:	nop
   1400416b5:	push   rsp
   1400416b6:	add    al,BYTE PTR [rax]
   1400416b8:	test   al,0x54
   1400416ba:	add    al,BYTE PTR [rax]
   1400416bc:	test   al,0x60
   1400416be:	add    eax,DWORD PTR [rax]
   1400416c0:	test   al,0x54
   1400416c2:	add    al,BYTE PTR [rax]
   1400416c4:	(bad)
   1400416c7:	add    BYTE PTR [rax-0x3afffca0],ch
   1400416cd:	push   rsp
   1400416ce:	add    al,BYTE PTR [rax]
   1400416d0:	loop   0x140041726
   1400416d2:	add    al,BYTE PTR [rax]
   1400416d4:	test   al,0x60
   1400416d6:	add    eax,DWORD PTR [rax]
   1400416d8:	loop   0x14004172e
   1400416da:	add    al,BYTE PTR [rax]
   1400416dc:	call   QWORD PTR [rdx+rax*1+0x0]
   1400416e0:	test   al,0x60
   1400416e2:	add    eax,DWORD PTR [rax]
   1400416e4:	call   QWORD PTR [rdx+rax*1+0x0]
   1400416e8:	sbb    al,0x55
   1400416ea:	add    al,BYTE PTR [rax]
   1400416ec:	test   al,0x60
   1400416ee:	add    eax,DWORD PTR [rax]
   1400416f0:	and    BYTE PTR [rbp+0x2],dl
   1400416f3:	add    BYTE PTR [rax],bh
   1400416f5:	push   rbp
   1400416f6:	add    al,BYTE PTR [rax]
   1400416f8:	test   al,0x60
   1400416fa:	add    eax,DWORD PTR [rax]
   1400416fc:	rex push rbp
   1400416fe:	add    al,BYTE PTR [rax]
   140041700:	pop    rax
   140041701:	push   rbp
   140041702:	add    al,BYTE PTR [rax]
   140041704:	test   al,0x60
   140041706:	add    eax,DWORD PTR [rax]
   140041708:	pop    rax
   140041709:	push   rbp
   14004170a:	add    al,BYTE PTR [rax]
   14004170c:	jne    0x140041763
   14004170e:	add    al,BYTE PTR [rax]
   140041710:	test   al,0x60
   140041712:	add    eax,DWORD PTR [rax]
   140041714:	jne    0x14004176b
   140041716:	add    al,BYTE PTR [rax]
   140041718:	xchg   edx,eax
   140041719:	push   rbp
   14004171a:	add    al,BYTE PTR [rax]
   14004171c:	test   al,0x60
   14004171e:	add    eax,DWORD PTR [rax]
   140041720:	xchg   edx,eax
   140041721:	push   rbp
   140041722:	add    al,BYTE PTR [rax]
   140041724:	scas   eax,DWORD PTR es:[rdi]
   140041725:	push   rbp
   140041726:	add    al,BYTE PTR [rax]
   140041728:	test   al,0x60
   14004172a:	add    eax,DWORD PTR [rax]
   14004172c:	scas   eax,DWORD PTR es:[rdi]
   14004172d:	push   rbp
   14004172e:	add    al,BYTE PTR [rax]
   140041730:	int3   
   140041731:	push   rbp
   140041732:	add    al,BYTE PTR [rax]
   140041734:	test   al,0x60
   140041736:	add    eax,DWORD PTR [rax]
   140041738:	int3   
   140041739:	push   rbp
   14004173a:	add    al,BYTE PTR [rax]
   14004173c:	jmp    0xe8041996
   140041741:	(bad)  
   140041742:	add    eax,DWORD PTR [rax]
   140041744:	jmp    0x14604199e
   140041749:	push   rsi
   14004174a:	add    al,BYTE PTR [rax]
   14004174c:	test   al,0x60
   14004174e:	add    eax,DWORD PTR [rax]
   140041750:	(bad)  
   140041751:	push   rsi
   140041752:	add    al,BYTE PTR [rax]
   140041754:	and    edx,DWORD PTR [rsi+0x2]
   140041757:	add    BYTE PTR [rax+0x23000360],ch
   14004175d:	push   rsi
   14004175e:	add    al,BYTE PTR [rax]
   140041760:	rex push rsi
   140041762:	add    al,BYTE PTR [rax]
   140041764:	test   al,0x60
   140041766:	add    eax,DWORD PTR [rax]
   140041768:	rex push rsi
   14004176a:	add    al,BYTE PTR [rax]
   14004176c:	pop    rcx
   14004176d:	push   rsi
   14004176e:	add    al,BYTE PTR [rax]
   140041770:	test   al,0x60
   140041772:	add    eax,DWORD PTR [rax]
   140041774:	pop    rcx
   140041775:	push   rsi
   140041776:	add    al,BYTE PTR [rax]
   140041778:	adc    BYTE PTR [rsi+0x2],0x0
   14004177c:	test   al,0x60
   14004177e:	add    eax,DWORD PTR [rax]
   140041780:	adc    BYTE PTR [rsi+0x2],0x0
   140041784:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041785:	push   rsi
   140041786:	add    al,BYTE PTR [rax]
   140041788:	test   al,0x60
   14004178a:	add    eax,DWORD PTR [rax]
   14004178c:	mov    al,0x56
   14004178e:	add    al,BYTE PTR [rax]
   140041790:	enter  0x256,0x0
   140041794:	test   al,0x60
   140041796:	add    eax,DWORD PTR [rax]
   140041798:	rcl    BYTE PTR [rsi+0x2],1
   14004179b:	add    BYTE PTR [rdi+rdx*2],dl
   14004179e:	add    al,BYTE PTR [rax]
   1400417a0:	fcomp  DWORD PTR [rdi+0x3]
   1400417a3:	add    BYTE PTR [rax],ah
   1400417a5:	push   rdi
   1400417a6:	add    al,BYTE PTR [rax]
   1400417a8:	cmp    BYTE PTR [rdi+0x2],dl
   1400417ab:	add    BYTE PTR [rax+0x38000360],ch
   1400417b1:	push   rdi
   1400417b2:	add    al,BYTE PTR [rax]
   1400417b4:	pop    rsi
   1400417b5:	push   rdi
   1400417b6:	add    al,BYTE PTR [rax]
   1400417b8:	test   al,0x60
   1400417ba:	add    eax,DWORD PTR [rax]
   1400417bc:	(bad)  
   1400417bd:	push   rdi
   1400417be:	add    al,BYTE PTR [rax]
   1400417c0:	xchg   BYTE PTR [rdi+0x2],dl
   1400417c3:	add    BYTE PTR [rax-0x6ffffca0],ch
   1400417c9:	push   rdi
   1400417ca:	add    al,BYTE PTR [rax]
   1400417cc:	test   eax,0x257
   1400417d1:	add    BYTE PTR [rbx],0x0
   1400417d4:	test   eax,0xc6000257
   1400417d9:	push   rdi
   1400417da:	add    al,BYTE PTR [rax]
   1400417dc:	or     BYTE PTR [rax+0x57c60003],al
   1400417e2:	add    al,BYTE PTR [rax]
   1400417e4:	fist   WORD PTR [rdi+0x2]
   1400417e7:	add    BYTE PTR [rax-0x80],ch
   1400417ea:	add    eax,DWORD PTR [rax]
   1400417ec:	fist   WORD PTR [rdi+0x2]
   1400417ef:	add    bh,dh
   1400417f1:	push   rdi
   1400417f2:	add    al,BYTE PTR [rax]
   1400417f4:	jo     0x140041776
   1400417f6:	add    eax,DWORD PTR [rax]
   1400417f8:	not    DWORD PTR [rdi+0x2]
   1400417fb:	add    BYTE PTR [rcx],ah
   1400417fd:	pop    rax
   1400417fe:	add    al,BYTE PTR [rax]
   140041800:	js     0x140041782
   140041802:	add    eax,DWORD PTR [rax]
   140041804:	and    DWORD PTR [rax+0x2],ebx
   140041807:	add    BYTE PTR [rax+0x58],cl
   14004180a:	add    al,BYTE PTR [rax]
   14004180c:	mov    eax,0x48000380
   140041811:	pop    rax
   140041812:	add    al,BYTE PTR [rax]
   140041814:	(bad)  
   140041815:	pop    rax
   140041816:	add    al,BYTE PTR [rax]
   140041818:	and    al,0x81
   14004181a:	add    eax,DWORD PTR [rax]
   14004181c:	(bad)  
   14004181d:	pop    rax
   14004181e:	add    al,BYTE PTR [rax]
   140041820:	mov    bl,BYTE PTR [rax+0x2]
   140041823:	add    BYTE PTR [rcx+rax*4+0x3],bl
   140041827:	add    BYTE PTR [rax-0x52fffda8],dl
   14004182d:	pop    rax
   14004182e:	add    al,BYTE PTR [rax]
   140041830:	rex.R (bad) 
   140041832:	add    eax,DWORD PTR [rax]
   140041834:	lods   eax,DWORD PTR ds:[rsi]
   140041835:	pop    rax
   140041836:	add    al,BYTE PTR [rax]
   140041838:	retf   0x258
   14004183b:	add    BYTE PTR [rdx+rax*4+0x3],cl
   14004183f:	add    dl,cl
   140041841:	pop    rax
   140041842:	add    al,BYTE PTR [rax]
   140041844:	out    0x58,eax
   140041846:	add    al,BYTE PTR [rax]
   140041848:	mov    WORD PTR [rdx+0x58e70003],es
   14004184e:	add    al,BYTE PTR [rax]
   140041850:	add    al,0x59
   140041852:	add    al,BYTE PTR [rax]
   140041854:	xchg   esp,eax
   140041855:	(bad)  
   140041856:	add    eax,DWORD PTR [rax]
   140041858:	add    al,0x59
   14004185a:	add    al,BYTE PTR [rax]
   14004185c:	sbb    eax,0xec000259
   140041861:	(bad)  
   140041862:	add    eax,DWORD PTR [rax]
   140041864:	sbb    eax,0x36000259
   140041869:	pop    rcx
   14004186a:	add    al,BYTE PTR [rax]
   14004186c:	and    al,0x83
   14004186e:	add    eax,DWORD PTR [rax]
   140041870:	ss pop rcx
   140041872:	add    al,BYTE PTR [rax]
   140041874:	rex.WRXB pop r9
   140041876:	add    al,BYTE PTR [rax]
   140041878:	pop    rsp
   140041879:	add    DWORD PTR [rbx],0x0
   14004187c:	rex.WRXB pop r9
   14004187e:	add    al,BYTE PTR [rax]
   140041880:	push   0xffffffff9c000259
   140041885:	add    DWORD PTR [rbx],0x0
   140041888:	push   0xffffffff8f000259
   14004188d:	pop    rcx
   14004188e:	add    al,BYTE PTR [rax]
   140041890:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041891:	add    DWORD PTR [rbx],0x0
   140041894:	(bad)  
   140041895:	pop    rcx
   140041896:	add    al,BYTE PTR [rax]
   140041898:	test   al,0x59
   14004189a:	add    al,BYTE PTR [rax]
   14004189c:	in     al,0x83
   14004189e:	add    eax,DWORD PTR [rax]
   1400418a0:	test   al,0x59
   1400418a2:	add    al,BYTE PTR [rax]
   1400418a4:	iret   
   1400418a5:	pop    rcx
   1400418a6:	add    al,BYTE PTR [rax]
   1400418a8:	in     al,dx
   1400418a9:	add    DWORD PTR [rbx],0x0
   1400418ac:	iret   
   1400418ad:	pop    rcx
   1400418ae:	add    al,BYTE PTR [rax]
   1400418b0:	call   0x16c041b0e
   1400418b5:	test   BYTE PTR [rbx],al
   1400418b7:	add    al,ch
   1400418b9:	pop    rcx
   1400418ba:	add    al,BYTE PTR [rax]
   1400418bc:	cvtps2pd xmm0,QWORD PTR [rdx]
   1400418bf:	add    BYTE PTR [rsp+rax*4],dh
   1400418c2:	add    eax,DWORD PTR [rax]
   1400418c4:	cvtps2pd xmm0,QWORD PTR [rdx]
   1400418c7:	add    BYTE PTR [rax],ch
   1400418c9:	pop    rdx
   1400418ca:	add    al,BYTE PTR [rax]
   1400418cc:	mov    BYTE PTR [rbx+rax*1+0x25a2800],al
   1400418d3:	add    BYTE PTR [rcx+0x5a],al
   1400418d6:	add    al,BYTE PTR [rax]
   1400418d8:	nop
   1400418d9:	test   BYTE PTR [rbx],al
   1400418db:	add    BYTE PTR [rcx+0x5a],al
   1400418de:	add    al,BYTE PTR [rax]
   1400418e0:	pop    rdx
   1400418e1:	pop    rdx
   1400418e2:	add    al,BYTE PTR [rax]
   1400418e4:	enter  0x384,0x0
   1400418e8:	pop    rdx
   1400418e9:	pop    rdx
   1400418ea:	add    al,BYTE PTR [rax]
   1400418ec:	jae    0x140041948
   1400418ee:	add    al,BYTE PTR [rax]
   1400418f0:	add    BYTE PTR [rbp+0x5a730003],al
   1400418f6:	add    al,BYTE PTR [rax]
   1400418f8:	mov    WORD PTR [rdx+0x2],ds
   1400418fb:	add    BYTE PTR [rax],bh
   1400418fd:	test   DWORD PTR [rbx],eax
   1400418ff:	add    BYTE PTR [rdx+rbx*2+0x5aa50002],cl
   140041906:	add    al,BYTE PTR [rax]
   140041908:	jo     0x14004188f
   14004190a:	add    eax,DWORD PTR [rax]
   14004190c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004190d:	pop    rdx
   14004190e:	add    al,BYTE PTR [rax]
   140041910:	mov    esi,0xe000025a
   140041915:	test   DWORD PTR [rbx],eax
   140041917:	add    BYTE PTR [rsi-0x29fffda6],bh
   14004191d:	pop    rdx
   14004191e:	add    al,BYTE PTR [rax]
   140041920:	call   0x116041caa
   140041925:	pop    rdx
   140041926:	add    al,BYTE PTR [rax]
   140041928:	out    dx,eax
   140041929:	pop    rdx
   14004192a:	add    al,BYTE PTR [rax]
   14004192c:	lock test DWORD PTR [rbx],eax
   14004192f:	add    bh,ch
   140041931:	pop    rdx
   140041932:	add    al,BYTE PTR [rax]
   140041934:	sbb    DWORD PTR [rbx+0x2],ebx
   140041937:	add    al,bh
   140041939:	test   DWORD PTR [rbx],eax
   14004193b:	add    BYTE PTR [rax],ah
   14004193d:	pop    rbx
   14004193e:	add    al,BYTE PTR [rax]
   140041940:	cmp    BYTE PTR [rbx+0x2],bl
   140041943:	add    BYTE PTR [rax+0x44000360],ch
   140041949:	pop    rbx
   14004194a:	add    al,BYTE PTR [rax]
   14004194c:	(bad)  
   14004194d:	pop    rbx
   14004194e:	add    al,BYTE PTR [rax]
   140041950:	test   al,0x60
   140041952:	add    eax,DWORD PTR [rax]
   140041954:	(bad)  
   140041955:	pop    rbx
   140041956:	add    al,BYTE PTR [rax]
   140041958:	mov    ds,WORD PTR [rbx+0x2]
   14004195b:	add    BYTE PTR [rax-0x71fffca0],ch
   140041961:	pop    rbx
   140041962:	add    al,BYTE PTR [rax]
   140041964:	iret   
   140041965:	pop    rbx
   140041966:	add    al,BYTE PTR [rax]
   140041968:	test   al,0x60
   14004196a:	add    eax,DWORD PTR [rax]
   14004196c:	iret   
   14004196d:	pop    rbx
   14004196e:	add    al,BYTE PTR [rax]
   140041970:	(bad)  
   140041971:	pop    rbx
   140041972:	add    al,BYTE PTR [rax]
   140041974:	test   al,0x60
   140041976:	add    eax,DWORD PTR [rax]
   140041978:	lock pop rbx
   14004197a:	add    al,BYTE PTR [rax]
   14004197c:	adc    BYTE PTR [rdx+rax*1+0x0],bl
   140041980:	test   al,0x60
   140041982:	add    eax,DWORD PTR [rax]
   140041984:	adc    BYTE PTR [rdx+rax*1+0x0],bl
   140041988:	and    eax,0xd400025c
   14004198d:	jge    0x140041992
   14004198f:	add    BYTE PTR [rax],dh
   140041991:	pop    rsp
   140041992:	add    al,BYTE PTR [rax]
   140041994:	rex.RB pop r12
   140041996:	add    al,BYTE PTR [rax]
   140041998:	(bad)  
   140041999:	jge    0x14004199e
	...

Disassembly of section .data_1:

0000000140042000 <.data_1>:
   140042000:	(bad)  
	...
   14004200d:	add    BYTE PTR [rax],al
   14004200f:	add    BYTE PTR [rcx+0x62],dh
   140042012:	ins    BYTE PTR es:[rdi],dx
   140042013:	je     0x14004203b
   140042015:	and    DWORD PTR [rdx],edi
   140042017:	cmp    eax,0x78706168
   14004201c:	ins    DWORD PTR es:[rdi],dx
   14004201d:	ja     0x14004205e
   14004201f:	sub    eax,DWORD PTR [rax]

Disassembly of section .rsrc:

0000000140043000 <.rsrc>:
	...
   140043008:	add    al,0x0
   14004300a:	add    BYTE PTR [rax],al
   14004300c:	add    BYTE PTR [rax],al
   14004300e:	add    eax,0x300
   140043013:	add    BYTE PTR [rax],bh
   140043015:	add    BYTE PTR [rax],al
   140043017:	add    BYTE PTR [rip+0x78000000],0x0        # 0x1b804301e
   14004301e:	add    BYTE PTR [rax+0xe],al
   140043024:	nop
   140043025:	add    BYTE PTR [rax],al
   140043027:	adc    BYTE PTR [rax],0x0
   14004302a:	add    BYTE PTR [rax],al
   14004302c:	mov    al,0x0
   14004302e:	add    BYTE PTR [rax+0x18],al
   140043034:	enter  0x0,0x80
	...
   140043040:	add    al,0x0
   140043042:	add    BYTE PTR [rax],al
   140043044:	add    BYTE PTR [rax],al
   140043046:	(bad)  
   140043047:	add    BYTE PTR [rcx],al
   140043049:	add    BYTE PTR [rax],al
   14004304b:	add    al,ah
   14004304d:	add    BYTE PTR [rax],al
   14004304f:	add    BYTE PTR [rdx],0x0
   140043052:	add    BYTE PTR [rax],al
   140043054:	clc    
   140043055:	add    BYTE PTR [rax],al
   140043057:	add    BYTE PTR [rbx],0x0
   14004305a:	add    BYTE PTR [rax],al
   14004305c:	adc    BYTE PTR [rcx],al
   14004305e:	add    BYTE PTR [rax+0x4],al
   140043064:	sub    BYTE PTR [rcx],al
   140043066:	add    BYTE PTR [rax+0x5],al
   14004306c:	rex add DWORD PTR [rax],eax
   14004306f:	add    BYTE PTR [rsi],0x0
   140043072:	add    BYTE PTR [rax],al
   140043074:	pop    rax
   140043075:	add    DWORD PTR [rax],eax
   140043077:	add    BYTE PTR [rax],0x0
   14004307a:	add    BYTE PTR [rax],al
   14004307c:	add    BYTE PTR [rax],al
   14004307e:	add    BYTE PTR [rax],al
   140043080:	add    al,0x0
   140043082:	add    BYTE PTR [rax],al
   140043084:	add    BYTE PTR [rax],al
   140043086:	add    DWORD PTR [rax],eax
   140043088:	data16 add BYTE PTR [rax],al
   14004308b:	add    BYTE PTR [rax+0x1],dh
   14004308e:	add    BYTE PTR [rax+0x0],al
   140043094:	add    BYTE PTR [rax],al
   140043096:	add    BYTE PTR [rax],al
   140043098:	add    al,0x0
   14004309a:	add    BYTE PTR [rax],al
   14004309c:	add    BYTE PTR [rax],al
   14004309e:	add    al,BYTE PTR [rax]
   1400430a0:	add    BYTE PTR fs:[rax],al
   1400430a3:	add    BYTE PTR [rax+0x65800001],cl
   1400430a9:	add    BYTE PTR [rax],al
   1400430ab:	add    BYTE PTR [rax+0x800001],ah
   1400430b1:	add    BYTE PTR [rax],al
   1400430b3:	add    BYTE PTR [rax],al
   1400430b5:	add    BYTE PTR [rax],al
   1400430b7:	add    BYTE PTR [rax+rax*1],al
   1400430ba:	add    BYTE PTR [rax],al
   1400430bc:	add    BYTE PTR [rax],al
   1400430be:	add    DWORD PTR [rax],eax
   1400430c0:	add    DWORD PTR [rax],eax
   1400430c2:	add    BYTE PTR [rax],al
   1400430c4:	mov    eax,0x800001
   1400430c9:	add    BYTE PTR [rax],al
   1400430cb:	add    BYTE PTR [rax],al
   1400430cd:	add    BYTE PTR [rax],al
   1400430cf:	add    BYTE PTR [rax+rax*1],al
   1400430d2:	add    BYTE PTR [rax],al
   1400430d4:	add    BYTE PTR [rax],al
   1400430d6:	add    DWORD PTR [rax],eax
   1400430d8:	add    DWORD PTR [rax],eax
   1400430da:	add    BYTE PTR [rax],al
   1400430dc:	rol    BYTE PTR [rcx],1
   1400430de:	add    BYTE PTR [rax+0x0],al
   1400430e4:	add    BYTE PTR [rax],al
   1400430e6:	add    BYTE PTR [rax],al
   1400430e8:	add    al,0x0
   1400430ea:	add    BYTE PTR [rax],al
   1400430ec:	add    BYTE PTR [rax],al
   1400430ee:	add    DWORD PTR [rax],eax
   1400430f0:	or     DWORD PTR [rax+rax*1],eax
   1400430f3:	add    al,ch
   1400430f5:	add    DWORD PTR [rax],eax
	...
   1400430ff:	add    BYTE PTR [rax+rax*1],al
   140043102:	add    BYTE PTR [rax],al
   140043104:	add    BYTE PTR [rax],al
   140043106:	add    DWORD PTR [rax],eax
   140043108:	or     DWORD PTR [rax+rax*1],eax
   14004310b:	add    al,bh
   14004310d:	add    DWORD PTR [rax],eax
	...
   140043117:	add    BYTE PTR [rax+rax*1],al
   14004311a:	add    BYTE PTR [rax],al
   14004311c:	add    BYTE PTR [rax],al
   14004311e:	add    DWORD PTR [rax],eax
   140043120:	or     DWORD PTR [rax+rax*1],eax
   140043123:	add    BYTE PTR [rax],cl
   140043125:	add    al,BYTE PTR [rax]
	...
   14004312f:	add    BYTE PTR [rax+rax*1],al
   140043132:	add    BYTE PTR [rax],al
   140043134:	add    BYTE PTR [rax],al
   140043136:	add    DWORD PTR [rax],eax
   140043138:	or     DWORD PTR [rax+rax*1],eax
   14004313b:	add    BYTE PTR [rax],bl
   14004313d:	add    al,BYTE PTR [rax]
	...
   140043147:	add    BYTE PTR [rax+rax*1],al
   14004314a:	add    BYTE PTR [rax],al
   14004314c:	add    BYTE PTR [rax],al
   14004314e:	add    DWORD PTR [rax],eax
   140043150:	or     DWORD PTR [rax+rax*1],eax
   140043153:	add    BYTE PTR [rax],ch
   140043155:	add    al,BYTE PTR [rax]
	...
   14004315f:	add    BYTE PTR [rax+rax*1],al
   140043162:	add    BYTE PTR [rax],al
   140043164:	add    BYTE PTR [rax],al
   140043166:	add    DWORD PTR [rax],eax
   140043168:	or     DWORD PTR [rax+rax*1],eax
   14004316b:	add    BYTE PTR [rax],bh
   14004316d:	add    al,BYTE PTR [rax]
	...
   140043177:	add    BYTE PTR [rax+rax*1],al
   14004317a:	add    BYTE PTR [rax],al
   14004317c:	add    BYTE PTR [rax],al
   14004317e:	add    DWORD PTR [rax],eax
   140043180:	or     DWORD PTR [rax+rax*1],eax
   140043183:	add    BYTE PTR [rax+0x2],cl
	...
   14004318e:	add    BYTE PTR [rax],al
   140043190:	add    al,0x0
   140043192:	add    BYTE PTR [rax],al
   140043194:	add    BYTE PTR [rax],al
   140043196:	add    DWORD PTR [rax],eax
   140043198:	or     DWORD PTR [rax+rax*1],eax
   14004319b:	add    BYTE PTR [rax+0x2],bl
	...
   1400431a6:	add    BYTE PTR [rax],al
   1400431a8:	add    al,0x0
   1400431aa:	add    BYTE PTR [rax],al
   1400431ac:	add    BYTE PTR [rax],al
   1400431ae:	add    DWORD PTR [rax],eax
   1400431b0:	or     DWORD PTR [rax+rax*1],eax
   1400431b3:	add    BYTE PTR [rax+0x2],ch
	...
   1400431be:	add    BYTE PTR [rax],al
   1400431c0:	add    al,0x0
   1400431c2:	add    BYTE PTR [rax],al
   1400431c4:	add    BYTE PTR [rax],al
   1400431c6:	add    DWORD PTR [rax],eax
   1400431c8:	or     DWORD PTR [rax+rax*1],eax
   1400431cb:	add    BYTE PTR [rax+0x2],bh
	...
   1400431d6:	add    BYTE PTR [rax],al
   1400431d8:	add    al,0x0
   1400431da:	add    BYTE PTR [rax],al
   1400431dc:	add    BYTE PTR [rax],al
   1400431de:	add    DWORD PTR [rax],eax
   1400431e0:	or     DWORD PTR [rax+rax*1],eax
   1400431e3:	add    BYTE PTR [rax-0x67fffffe],cl
   1400431e9:	xor    al,BYTE PTR [rax+rax*1]
   1400431ec:	push   0xffffffffe4000005
   1400431f1:	add    al,0x0
   1400431f3:	add    BYTE PTR [rax],al
   1400431f5:	add    BYTE PTR [rax],al
   1400431f7:	add    BYTE PTR [rax],al
   1400431f9:	cmp    BYTE PTR [rax+rax*1],al
   1400431fc:	test   al,0x8
   1400431fe:	add    BYTE PTR [rax],al
   140043200:	in     al,0x4
   140043202:	add    BYTE PTR [rax],al
   140043204:	add    BYTE PTR [rax],al
   140043206:	add    BYTE PTR [rax],al
   140043208:	test   al,0x40
   14004320a:	add    al,0x0
   14004320c:	sub    BYTE PTR [rcx],al
   14004320e:	add    BYTE PTR [rax],al
   140043210:	in     al,0x4
   140043212:	add    BYTE PTR [rax],al
   140043214:	add    BYTE PTR [rax],al
   140043216:	add    BYTE PTR [rax],al
   140043218:	rol    BYTE PTR [rcx+0x4],1
   14004321b:	add    BYTE PTR [rax+0x5],ch
   14004321e:	add    BYTE PTR [rax],al
   140043220:	in     al,0x4
   140043222:	add    BYTE PTR [rax],al
   140043224:	add    BYTE PTR [rax],al
   140043226:	add    BYTE PTR [rax],al
   140043228:	cmp    BYTE PTR [rdi+0x4],al
   14004322b:	add    al,ch
   14004322d:	add    al,BYTE PTR [rax]
   14004322f:	add    ah,ah
   140043231:	add    al,0x0
   140043233:	add    BYTE PTR [rax],al
   140043235:	add    BYTE PTR [rax],al
   140043237:	add    BYTE PTR [rax],ah
   140043239:	rex.WX add al,0x0
   14004323c:	test   al,0x8
   14004323e:	add    BYTE PTR [rax],al
   140043240:	in     al,0x4
   140043242:	add    BYTE PTR [rax],al
   140043244:	add    BYTE PTR [rax],al
   140043246:	add    BYTE PTR [rax],al
   140043248:	enter  0x452,0x0
   14004324c:	push   rsp
   14004324d:	add    BYTE PTR [rax],al
   14004324f:	add    ah,ah
   140043251:	add    al,0x0
   140043253:	add    BYTE PTR [rax],al
   140043255:	add    BYTE PTR [rax],al
   140043257:	add    BYTE PTR [rbx+rdx*2],bl
   14004325a:	add    al,0x0
   14004325c:	and    al,BYTE PTR [rax]
   14004325e:	add    BYTE PTR [rax],al
   140043260:	in     al,0x4
   140043262:	add    BYTE PTR [rax],al
   140043264:	add    BYTE PTR [rax],al
   140043266:	add    BYTE PTR [rax],al
   140043268:	rex push rbx
   14004326a:	add    al,0x0
   14004326c:	add    BYTE PTR ds:[rax],al
   14004326f:	add    ah,ah
   140043271:	add    al,0x0
   140043273:	add    BYTE PTR [rax],al
   140043275:	add    BYTE PTR [rax],al
   140043277:	add    BYTE PTR [rax+0x453],al
   14004327d:	add    al,0x0
   14004327f:	add    ah,ah
   140043281:	add    al,0x0
   140043283:	add    BYTE PTR [rax],al
   140043285:	add    BYTE PTR [rax],al
   140043287:	add    BYTE PTR [rax+0x63000457],al
   14004328d:	add    eax,DWORD PTR [rax]
   14004328f:	add    ah,ah
   140043291:	add    al,0x0
   140043293:	add    BYTE PTR [rax],al
   140043295:	add    BYTE PTR [rax],al
   140043297:	add    BYTE PTR [rax],ch
   140043299:	add    BYTE PTR [rax],al
   14004329b:	add    BYTE PTR [rax],dl
   14004329d:	add    BYTE PTR [rax],al
   14004329f:	add    BYTE PTR [rax],ah
   1400432a1:	add    BYTE PTR [rax],al
   1400432a3:	add    BYTE PTR [rcx],al
   1400432a5:	add    BYTE PTR [rax],cl
   1400432a7:	add    BYTE PTR [rax],al
   1400432a9:	add    BYTE PTR [rax],al
   1400432ab:	add    BYTE PTR [rax+0x1],al
	...
   1400432c2:	add    BYTE PTR [rax],al
   1400432c4:	(bad)  
   1400432c5:	(bad)  
   1400432c6:	inc    DWORD PTR [rax]
   1400432c8:	add    bl,cl
   1400432ca:	inc    DWORD PTR [rax]
   1400432cc:	test   bh,dh
   1400432ce:	inc    DWORD PTR [rax]
   1400432d0:	xor    DWORD PTR [rsi-0x18b5ff53],ecx
   1400432d6:	inc    DWORD PTR [rax]
   1400432d8:	sub    DWORD PTR [rdx-0x84aff2a],esi
   1400432de:	inc    DWORD PTR [rax]
   1400432e0:	sub    ebx,ebx
   1400432e2:	inc    DWORD PTR [rax]
   1400432e4:	sub    DWORD PTR [rdx-0x61ceff3a],esp
   1400432ea:	mov    ebp,0x0
	...
   1400436bf:	add    BYTE PTR [rcx],al
   1400436c1:	add    DWORD PTR [rcx],eax
   1400436c3:	add    DWORD PTR [rcx],eax
   1400436c5:	add    DWORD PTR [rcx],eax
   1400436c7:	add    DWORD PTR [rcx],eax
   1400436c9:	add    DWORD PTR [rcx],eax
   1400436cb:	add    DWORD PTR [rcx],eax
   1400436cd:	add    DWORD PTR [rcx],eax
   1400436cf:	add    DWORD PTR [rcx],eax
   1400436d1:	add    DWORD PTR [rcx],eax
   1400436d3:	add    DWORD PTR [rcx],eax
   1400436d5:	add    DWORD PTR [rcx],eax
   1400436d7:	add    al,0x4
   1400436d9:	add    DWORD PTR [rcx],eax
   1400436db:	add    DWORD PTR [rcx],eax
   1400436dd:	add    DWORD PTR [rcx],eax
   1400436df:	add    DWORD PTR [rcx],eax
   1400436e1:	add    DWORD PTR [rcx],eax
   1400436e3:	add    DWORD PTR [rcx],eax
   1400436e5:	add    DWORD PTR [rbx+rax*1],eax
   1400436e8:	add    eax,DWORD PTR [rcx+rax*1]
   1400436eb:	add    DWORD PTR [rcx],eax
   1400436ed:	add    DWORD PTR [rcx],eax
   1400436ef:	add    DWORD PTR [rcx],eax
   1400436f1:	add    DWORD PTR [rcx],eax
   1400436f3:	add    DWORD PTR [rcx],eax
   1400436f5:	add    al,0x3
   1400436f7:	or     BYTE PTR [rbx],al
   1400436f9:	add    eax,DWORD PTR [rcx+rax*1]
   1400436fc:	add    DWORD PTR [rcx],eax
   1400436fe:	add    DWORD PTR [rcx],eax
   140043700:	add    DWORD PTR [rcx],eax
   140043702:	add    DWORD PTR [rcx],eax
   140043704:	add    al,0x2
   140043706:	or     BYTE PTR [rax],cl
   140043708:	or     BYTE PTR [rbx],al
   14004370a:	add    eax,DWORD PTR [rcx+rax*1]
   14004370d:	add    DWORD PTR [rcx],eax
   14004370f:	add    DWORD PTR [rcx],eax
   140043711:	add    DWORD PTR [rcx],eax
   140043713:	add    al,0x2
   140043715:	add    al,BYTE PTR [rdx]
   140043717:	add    cl,BYTE PTR [rax]
   140043719:	or     BYTE PTR [rbx],al
   14004371b:	add    eax,DWORD PTR [rcx+rax*1]
   14004371e:	add    DWORD PTR [rcx],eax
   140043720:	add    DWORD PTR [rcx],eax
   140043722:	add    al,0x5
   140043724:	add    al,BYTE PTR [rdx]
   140043726:	add    al,BYTE PTR [rdx]
   140043728:	or     BYTE PTR [rax],cl
   14004372a:	or     BYTE PTR [rbx],al
   14004372c:	add    eax,DWORD PTR [rcx+rax*1]
   14004372f:	add    DWORD PTR [rcx],eax
   140043731:	add    al,0x4
   140043733:	add    al,0x4
   140043735:	add    al,BYTE PTR [rdx]
   140043737:	add    al,BYTE PTR [rdx]
   140043739:	or     BYTE PTR [rax],cl
   14004373b:	add    al,0x4
   14004373d:	add    al,0x4
   14004373f:	add    DWORD PTR [rcx],eax
   140043741:	add    DWORD PTR [rcx],eax
   140043743:	add    DWORD PTR [rcx],eax
   140043745:	or     al,BYTE PTR [rip+0xa020202]        # 0x14a06394d
   14004374b:	add    DWORD PTR [rcx],eax
   14004374d:	add    DWORD PTR [rcx],eax
   14004374f:	add    DWORD PTR [rcx],eax
   140043751:	add    DWORD PTR [rcx],eax
   140043753:	add    DWORD PTR [rcx],eax
   140043755:	or     al,BYTE PTR [rip+0xa020202]        # 0x14a06395d
   14004375b:	add    DWORD PTR [rcx],eax
   14004375d:	add    DWORD PTR [rcx],eax
   14004375f:	add    DWORD PTR [rcx],eax
   140043761:	add    DWORD PTR [rcx],eax
   140043763:	add    DWORD PTR [rcx],eax
   140043765:	or     DWORD PTR [rdi],eax
   140043767:	add    eax,0x1090202
   14004376c:	add    DWORD PTR [rcx],eax
   14004376e:	add    DWORD PTR [rcx],eax
   140043770:	add    DWORD PTR [rcx],eax
   140043772:	add    DWORD PTR [rcx],eax
   140043774:	add    DWORD PTR [rcx],ecx
   140043776:	(bad)  
   140043777:	add    eax,0x1090205
   14004377c:	add    DWORD PTR [rcx],eax
   14004377e:	add    DWORD PTR [rcx],eax
   140043780:	add    DWORD PTR [rcx],eax
   140043782:	add    DWORD PTR [rcx],eax
   140043784:	add    DWORD PTR [rcx],ecx
   140043786:	(bad)  
   140043787:	(bad)  
   140043788:	add    eax,0x1010905
   14004378d:	add    DWORD PTR [rcx],eax
   14004378f:	add    DWORD PTR [rcx],eax
   140043791:	add    DWORD PTR [rcx],eax
   140043793:	add    DWORD PTR [rcx],eax
   140043795:	(bad)  
   140043796:	(bad)  
   140043797:	(bad)  
   140043798:	(bad)  
   140043799:	(bad)  
   14004379a:	(bad)  
   14004379b:	add    DWORD PTR [rcx],eax
   14004379d:	add    DWORD PTR [rcx],eax
   14004379f:	add    DWORD PTR [rcx],eax
   1400437a1:	add    DWORD PTR [rcx],eax
   1400437a3:	add    DWORD PTR [rcx],eax
   1400437a5:	add    DWORD PTR [rcx],eax
   1400437a7:	add    DWORD PTR [rcx],eax
   1400437a9:	add    DWORD PTR [rcx],eax
   1400437ab:	add    DWORD PTR [rcx],eax
   1400437ad:	add    DWORD PTR [rcx],eax
   1400437af:	add    DWORD PTR [rcx],eax
   1400437b1:	add    DWORD PTR [rcx],eax
   1400437b3:	add    DWORD PTR [rcx],eax
   1400437b5:	add    DWORD PTR [rcx],eax
   1400437b7:	add    DWORD PTR [rcx],eax
   1400437b9:	add    DWORD PTR [rcx],eax
   1400437bb:	add    DWORD PTR [rcx],eax
   1400437bd:	add    DWORD PTR [rcx],eax
   1400437bf:	add    DWORD PTR [rax],eax
	...
   1400437fd:	add    BYTE PTR [rax],al
   1400437ff:	add    BYTE PTR [rax],ch
   140043801:	add    BYTE PTR [rax],al
   140043803:	add    BYTE PTR [rax],ah
   140043805:	add    BYTE PTR [rax],al
   140043807:	add    BYTE PTR [rax+0x0],al
   14004380a:	add    BYTE PTR [rax],al
   14004380c:	add    DWORD PTR [rax],eax
   14004380e:	or     BYTE PTR [rax],al
   140043810:	add    BYTE PTR [rax],al
   140043812:	add    BYTE PTR [rax],al
   140043814:	add    BYTE PTR [rax+rax*1],al
	...
   14004381f:	add    BYTE PTR [rax],al
   140043821:	add    DWORD PTR [rax],eax
   140043823:	add    BYTE PTR [rax],al
   140043825:	add    DWORD PTR [rax],eax
   140043827:	add    BYTE PTR [rax],al
   140043829:	add    BYTE PTR [rax],al
   14004382b:	add    bh,bh
   14004382d:	(bad)  
   14004382e:	inc    DWORD PTR [rax]
   140043830:	add    bl,cl
   140043832:	inc    DWORD PTR [rax]
   140043834:	test   BYTE PTR [rdx-0xcadff32],bh
   14004383a:	inc    DWORD PTR [rax]
   14004383c:	cmp    DWORD PTR [rsi-0x85aff4b],edx
   140043842:	inc    DWORD PTR [rax]
   140043844:	rex.X mov esi,0xdfd600e7
   14004384a:	out    0x0,eax
   14004384c:	jnp    0x140043829
   14004384e:	test   DWORD PTR [rax],0xffdf29
   140043854:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043855:	iret   
   140043856:	fiadd  WORD PTR [rax]
   140043858:	sbb    BYTE PTR [rdx-0x84ff19],dh
   14004385e:	inc    DWORD PTR [rax]
   140043860:	push   rdx
   140043861:	stos   BYTE PTR es:[rdi],al
   140043862:	mov    BYTE PTR [rax],0x31
   140043865:	scas   al,BYTE PTR es:[rdi]
   140043866:	(bad)  
   140043867:	add    BYTE PTR [rbx-0x35],ah
   14004386a:	out    0x0,eax
   14004386c:	out    0xef,eax
   14004386e:	test   DWORD PTR [rax],0xefdb94
   140043874:	sbb    bh,al
   140043876:	test   DWORD PTR [rax],0xd6ba6b
   14004387c:	rex.X (bad) 
   14004387f:	add    BYTE PTR [rbp-0x73ff0001],bh
   140043885:	retf   
   140043886:	fiadd  WORD PTR [rax]
   140043888:	pushf  
   140043889:	mov    esi,0xefce00ce
   14004388e:	test   DWORD PTR [rax],0xffef6b
   140043894:	rex.WX iretq 
   140043896:	out    dx,eax
   140043897:	add    BYTE PTR [rbx+rbp*8-0x61bdff01],al
   14004389e:	mov    BYTE PTR [rax],0x63
   1400438a1:	xlat   BYTE PTR ds:[rbx]
   1400438a2:	test   DWORD PTR [rax],0xdeba31
   1400438a8:	rex.WX mov dl,0xd6
   1400438ab:	add    dh,al
   1400438ad:	fucomip st,st(7)
   1400438af:	add    BYTE PTR [rax],bl
   1400438b1:	xlat   BYTE PTR ds:[rbx]
   1400438b2:	inc    DWORD PTR [rax]
   1400438b4:	sub    ebx,ecx
   1400438b6:	test   DWORD PTR [rax],0xfffb94
   1400438bc:	jae    0x140043885
   1400438be:	fiadd  WORD PTR [rax]
   1400438c0:	rex.WX xchg rsi,rax
   1400438c2:	mov    ch,0x0
   1400438c4:	pop    rdx
   1400438c5:	jrcxz  0x1400438c6
   1400438c7:	add    bh,ch
   1400438c9:	sti    
   1400438ca:	inc    DWORD PTR [rax]
   1400438cc:	pop    rdx
   1400438cd:	mov    dh,0xd6
   1400438cf:	add    BYTE PTR [rdx-0x15],al
   1400438d2:	inc    DWORD PTR [rax]
   1400438d4:	pop    rdx
   1400438d5:	movabs ds:0xe39c00f7c30800bd,al
   1400438de:	test   DWORD PTR [rax],0xceaa42
   1400438e4:	push   rdx
   1400438e5:	(bad)  
   1400438e6:	out    0x0,eax
   1400438e8:	and    DWORD PTR [rsi-0x3cceff22],ebp
   1400438ee:	out    0x0,eax
   1400438f0:	rex.WX movabs ds:0xcf9400f7d73900bd,al
   1400438fa:	out    0x0,eax
   1400438fc:	pop    rdx
   1400438fd:	shr    edi,cl
   1400438ff:	add    BYTE PTR [rbx+rax*8-0x41e7ff2a],dl
   140043906:	out    dx,eax
   140043907:	add    BYTE PTR [rcx],ah
   140043909:	mov    edx,0xa63900e7
   14004390e:	mov    BYTE PTR [rax],0x4a
   140043911:	mov    esi,0xc75a00de
   140043916:	fiadd  WORD PTR [rax]
   140043918:	div    edi
   14004391a:	test   DWORD PTR [rax],0xffd700
   140043920:	adc    bl,cl
   140043922:	inc    DWORD PTR [rax]
   140043924:	test   bh,dh
   140043926:	inc    DWORD PTR [rax]
   140043928:	pushf  
   140043929:	(bad)  
   14004392a:	fiadd  WORD PTR [rax]
   14004392c:	jae    0x14004390d
   14004392e:	inc    DWORD PTR [rax]
   140043930:	jnp    0x1400438f5
   140043932:	(bad)  
   140043933:	add    BYTE PTR [rdx-0x6a],al
   140043936:	mov    ebp,0xf7d32100
   14004393b:	add    BYTE PTR [rbx-0x9],ah
   14004393e:	inc    DWORD PTR [rax]
   140043940:	mov    ebx,ss
   140043942:	out    dx,eax
   140043943:	add    BYTE PTR [rdx-0x1d],cl
   140043946:	inc    DWORD PTR [rax]
   140043948:	rex.X (bad) 
   14004394a:	out    dx,eax
   14004394b:	add    BYTE PTR [rbx-0x2d],ch
   14004394e:	out    0x0,eax
   140043950:	fsubp  st(3),st
   140043952:	test   DWORD PTR [rax],0xf7c321
   140043958:	cmp    edi,esp
   14004395a:	inc    DWORD PTR [rax]
   14004395c:	jnp    0x140043951
   14004395e:	inc    DWORD PTR [rax]
   140043960:	jnp    0x140043949
   140043962:	inc    DWORD PTR [rax]
   140043964:	test   bh,bl
   140043966:	test   DWORD PTR [rax],0xd6be8c
   14004396c:	fsubrp st(3),st
   14004396e:	out    0x0,eax
   140043970:	(bad)  
   140043971:	jrcxz  0x140043962
   140043973:	add    BYTE PTR [rax],cl
   140043975:	sar    edi,cl
   140043977:	add    BYTE PTR [rbp+0x3900fffb],dh
   14004397d:	(bad)  
   14004397e:	mov    ebp,0xffe32100
   140043983:	add    BYTE PTR [rcx],ah
   140043985:	xlat   BYTE PTR ds:[rbx]
   140043986:	inc    DWORD PTR [rax]
   140043988:	pushf  
   140043989:	idiv   edi
   14004398b:	add    BYTE PTR [rcx],bh
   14004398d:	movabs ds:0xb23100ffff8c00ce,al
   140043996:	(bad)  
   140043997:	add    BYTE PTR [rcx],dh
   140043999:	jrcxz  0x14004399a
   14004399b:	add    BYTE PTR [rdx-0x5a],cl
   14004399e:	mov    BYTE PTR [rax],0x9c
   1400439a1:	fucomip st,st(7)
   1400439a3:	add    BYTE PTR [rdx+rdi*4-0x206bff32],dl
   1400439aa:	test   DWORD PTR [rax],0xceae4a
   1400439b0:	xchg   esp,eax
   1400439b1:	iret   
   1400439b2:	fiadd  WORD PTR [rax]
   1400439b4:	cmp    edi,eax
   1400439b6:	out    0x0,eax
   1400439b8:	jae    0x1400439a5
   1400439ba:	inc    DWORD PTR [rax]
   1400439bc:	movsxd ebp,ebx
   1400439be:	inc    DWORD PTR [rax]
   1400439c0:	push   rdx
   1400439c1:	(bad)  
   1400439c3:	add    BYTE PTR [rbx-0x1d],dh
   1400439c6:	test   DWORD PTR [rax],0xdec36b
   1400439cc:	pop    rdx
   1400439cd:	retf   
   1400439ce:	out    0x0,eax
   1400439d0:	movsxd edx,ebx
   1400439d2:	out    dx,eax
   1400439d3:	add    bh,dh
   1400439d5:	(bad)  
   1400439d6:	inc    DWORD PTR [rax]
   1400439d8:	div    edi
   1400439da:	inc    DWORD PTR [rax]
   1400439dc:	out    dx,eax
   1400439dd:	div    edi
   1400439df:	add    dh,cl
   1400439e1:	jrcxz  0x1400439d2
   1400439e3:	add    dh,cl
   1400439e5:	(bad)  
   1400439e7:	add    BYTE PTR [rax],cl
   1400439e9:	retf   
   1400439ea:	inc    DWORD PTR [rax]
   1400439ec:	(bad)  
   1400439ed:	(bad)  
   1400439ef:	add    BYTE PTR [rax],dl
   1400439f1:	sar    edi,cl
   1400439f3:	add    BYTE PTR [rax],dl
   1400439f5:	ret    
   1400439f6:	test   DWORD PTR [rax],0xb59642
   1400439fc:	lods   eax,DWORD PTR ds:[rsi]
   1400439fd:	idiv   edi
   1400439ff:	add    BYTE PTR [rcx],ah
   140043a01:	mov    dh,0xde
   140043a03:	add    BYTE PTR [rdx-0x5e],al
   140043a06:	mov    ebp,0xc6a64200
   140043a0b:	add    BYTE PTR [rcx],bh
   140043a0d:	stos   BYTE PTR es:[rdi],al
   140043a0e:	(bad)  
   140043a0f:	add    BYTE PTR [rcx],ch
   140043a11:	shl    edi,cl
   140043a13:	add    BYTE PTR [rdi+rdi*8-0x873ff01],al
   140043a1a:	inc    DWORD PTR [rax]
   140043a1c:	pushf  
   140043a1d:	mov    esi,0xc79c00d6
   140043a22:	(bad)  
   140043a23:	add    BYTE PTR [rcx],bh
   140043a25:	(bad)  
   140043a27:	add    BYTE PTR [rcx],bh
   140043a29:	xlat   BYTE PTR ds:[rbx]
   140043a2a:	inc    DWORD PTR [rax]
   140043a2c:	pushf  
   140043a2d:	iret   
   140043a2e:	fiadd  WORD PTR [rax]
   140043a30:	cmp    DWORD PTR [rdx-0x1cbdff22],edi
   140043a36:	inc    DWORD PTR [rax]
   140043a38:	xchg   esp,eax
   140043a39:	(bad)  
   140043a3a:	fiadd  WORD PTR [rax]
   140043a3c:	rex.X mov esi,0xeb5200de
   140043a42:	inc    DWORD PTR [rax]
   140043a44:	push   rdx
   140043a45:	mov    dl,0xd6
   140043a47:	add    BYTE PTR [rdx-0x15],bl
   140043a4a:	inc    DWORD PTR [rax]
   140043a4c:	rex.X iret 
   140043a4e:	out    dx,eax
   140043a4f:	add    BYTE PTR [rdi+rcx*8-0x459cff19],cl
   140043a56:	(bad)  
   140043a57:	add    BYTE PTR [rbx-0x2d],ah
   140043a5a:	out    0x0,eax
   140043a5c:	sbb    bl,al
   140043a5e:	out    dx,eax
   140043a5f:	add    BYTE PTR [rcx],dh
   140043a61:	mov    esi,0xbe9400e7
   140043a66:	(bad)  
   140043a67:	add    BYTE PTR [rdx-0x3d],al
   140043a6a:	out    0x0,eax
   140043a6c:	(bad)  
   140043a6d:	sti    
   140043a6e:	inc    DWORD PTR [rax]
   140043a70:	idiv   ebx
   140043a72:	inc    DWORD PTR [rax]
   140043a74:	out    dx,eax
   140043a75:	idiv   edi
   140043a77:	add    bh,ah
   140043a79:	repz test DWORD PTR [rax],0xffd300
   140043a80:	add    bh,cl
   140043a82:	inc    DWORD PTR [rax]
   140043a84:	or     bh,cl
   140043a86:	inc    DWORD PTR [rax]
   140043a88:	or     bh,al
   140043a8a:	test   DWORD PTR [rax],0xffffb5
   140043a90:	adc    bh,cl
   140043a92:	inc    DWORD PTR [rax]
   140043a94:	cmp    DWORD PTR [rsi-0x49e7ff43],edx
   140043a9a:	out    0x0,eax
   140043a9c:	sbb    bl,bl
   140043a9e:	inc    DWORD PTR [rax]
   140043aa0:	sbb    bl,dl
   140043aa2:	inc    DWORD PTR [rax]
   140043aa4:	sbb    bl,al
   140043aa6:	test   DWORD PTR [rax],0xbd9a42
   140043aac:	and    edi,ebx
   140043aae:	inc    DWORD PTR [rax]
   140043ab0:	cmp    DWORD PTR [rdx-0x49deff3a],esp
   140043ab6:	out    0x0,eax
   140043ab8:	and    ebx,ebx
   140043aba:	inc    DWORD PTR [rax]
   140043abc:	rex.WX sahf 
   140043abe:	mov    ebp,0xfff79400
   140043ac3:	add    BYTE PTR [rbp+0x4200decb],ah
   140043ac9:	movabs ds:0xa63900ffe32900c6,al
   140043ad2:	(bad)  
   140043ad3:	add    BYTE PTR [rbx+rdi*8-0x24d6ff01],cl
   140043ada:	inc    DWORD PTR [rax]
   140043adc:	xor    DWORD PTR [rsi-0x3c63ff2a],ebp
   140043ae2:	(bad)  
   140043ae3:	add    BYTE PTR [rcx],bh
   140043ae5:	scas   al,BYTE PTR es:[rdi]
   140043ae6:	(bad)  
   140043ae7:	add    BYTE PTR [rbx+rbx*8-0x3463ff11],bl
   140043aee:	fiadd  WORD PTR [rax]
   140043af0:	xor    edi,ebx
   140043af2:	inc    DWORD PTR [rax]
   140043af4:	push   rdx
   140043af5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140043af6:	mov    BYTE PTR [rax],0x7b
   140043af9:	sti    
   140043afa:	inc    DWORD PTR [rax]
   140043afc:	rex.X scas al,BYTE PTR es:[rdi]
   140043afe:	(bad)  
   140043aff:	add    BYTE PTR [rdi+rax*8-0x884ff2a],dl
   140043b06:	inc    DWORD PTR [rax]
   140043b08:	xchg   esp,eax
   140043b09:	retf   
   140043b0a:	fiadd  WORD PTR [rax]
   140043b0c:	xchg   esp,eax
   140043b0d:	xlat   BYTE PTR ds:[rbx]
   140043b0e:	out    dx,eax
   140043b0f:	add    BYTE PTR [rbx+rcx*8-0x18bdff19],dl
   140043b16:	inc    DWORD PTR [rax]
   140043b18:	jnp    0x140043b09
   140043b1a:	inc    DWORD PTR [rax]
   140043b1c:	rex.X (bad) 
   140043b1f:	add    BYTE PTR [rdi+rax*8-0x18b5ff22],cl
   140043b26:	inc    DWORD PTR [rax]
   140043b28:	mov    edi,ss
   140043b2a:	out    dx,eax
   140043b2b:	add    BYTE PTR [rbx-0x11],ah
   140043b2e:	inc    DWORD PTR [rax]
   140043b30:	jae    0x140043b19
   140043b32:	inc    DWORD PTR [rax]
   140043b34:	rex.X retf 
   140043b36:	out    dx,eax
   140043b37:	add    BYTE PTR [rbx-0x21],bh
   140043b3a:	test   DWORD PTR [rax],0xefd34a
   140043b40:	jae    0x140043b05
   140043b42:	fiadd  WORD PTR [rax]
   140043b44:	pop    rdx
   140043b45:	iret   
   140043b46:	out    0x0,eax
   140043b48:	movsxd ecx,edi
   140043b4a:	out    0x0,eax
	...
   140043c74:	add    BYTE PTR [rax],al
   140043c76:	(bad)  
   140043c77:	mov    edx,0x8f
	...
   140043c94:	add    BYTE PTR [rcx-0x4e5adfce],dh
	...
   140043cb2:	add    BYTE PTR [rax],al
   140043cb4:	ss (bad) 
   140043cb6:	adc    BYTE PTR [rdi+0x69],ah
   140043cb9:	push   0x36
	...
   140043cd2:	add    BYTE PTR [rsi-0x54b2964d],ch
   140043cd8:	rex.WRB mov WORD PTR [r11+0x36],?
	...
   140043cef:	add    BYTE PTR [rax],al
   140043cf1:	add    BYTE PTR [rsi+0x45651042],ch
   140043cf7:	mov    ah,0xab
   140043cf9:	(bad)  
   140043cfa:	imul   edx,DWORD PTR [rdi+rcx*4],0x0
	...
   140043d11:	ss pop rbp
   140043d13:	adc    BYTE PTR [rdx],bl
   140043d15:	add    al,0x83
   140043d17:	xchg   BYTE PTR [rbx+rbp*4+0x36b3104d],dh
	...
   140043d2e:	add    BYTE PTR [rax],al
   140043d30:	scas   al,BYTE PTR es:[rdi]
   140043d31:	xchg   DWORD PTR [rbx-0x53d5fb7d],esp
   140043d37:	mov    dl,0x86
   140043d39:	mov    ah,0xab
   140043d3b:	(bad)  
   140043d3c:	imul   edx,DWORD PTR [rdi+rcx*4],0x0
	...
   140043d4f:	scas   al,BYTE PTR es:[rdi]
   140043d50:	js     0x140043d5e
   140043d52:	ds popf 
   140043d54:	lods   al,BYTE PTR ds:[rsi]
   140043d55:	lods   al,BYTE PTR ds:[rsi]
   140043d56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043d57:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043d58:	mov    dl,0x88
   140043d5a:	mov    ah,0xab
   140043d5c:	rex.WRB adc BYTE PTR [r11+0x36],r14b
	...
   140043d6b:	add    BYTE PTR [rax],al
   140043d6d:	add    BYTE PTR [rsi],dh
   140043d6f:	xchg   DWORD PTR [rsi+rdi*1],ecx
   140043d72:	push   rbx
   140043d73:	push   rbx
   140043d74:	push   rbx
   140043d75:	jb     0x140043d15
   140043d77:	sahf   
   140043d78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043d79:	jg     0x140043d03
   140043d7b:	mov    ah,0xab
   140043d7d:	(bad)  
   140043d7e:	imul   edx,DWORD PTR [rdi+rcx*4],0x0
	...
   140043d8d:	scas   al,BYTE PTR es:[rdi]
   140043d8e:	pop    rbp
   140043d8f:	cmp    BYTE PTR [rsi],bh
   140043d91:	push   rbx
   140043d92:	add    al,BYTE PTR [rdx]
   140043d94:	add    al,BYTE PTR [rdx]
   140043d96:	ds sahf 
   140043d98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043d99:	lods   al,BYTE PTR ds:[rsi]
   140043d9a:	mov    dl,0x88
   140043d9c:	mov    ah,0xab
   140043d9e:	rex.WRB mov WORD PTR [r14],cs
   140043da1:	add    BYTE PTR ss:[rax],al
	...
   140043dac:	mov    cl,0x68
   140043dae:	movsxd esp,DWORD PTR [rbx+rdx*2+0x2020253]
   140043db5:	add    al,BYTE PTR [rdx]
   140043db7:	sahf   
   140043db8:	lods   al,BYTE PTR ds:[rsi]
   140043db9:	lods   al,BYTE PTR ds:[rsi]
   140043dba:	lods   al,BYTE PTR ds:[rsi]
   140043dbb:	jg     0x140043d45
   140043dbd:	mov    ah,0xab
   140043dbf:	jnp    0x140043d4d
   140043dc1:	mov    BYTE PTR [rax+0x0],0x0
   140043dc5:	add    BYTE PTR [rax],al
   140043dc7:	add    BYTE PTR [rax],al
   140043dc9:	add    BYTE PTR [rax],al
   140043dcb:	(bad)  
   140043dcc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043dcd:	test   DWORD PTR [rip+0x20253ac],edx        # 0x14206917f
   140043dd3:	add    al,BYTE PTR [rdx]
   140043dd5:	add    al,BYTE PTR [rdx]
   140043dd7:	jb     0x140043d7d
   140043dd9:	lods   al,BYTE PTR ds:[rsi]
   140043dda:	lods   al,BYTE PTR ds:[rsi]
   140043ddb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043ddc:	pop    rsp
   140043ddd:	mov    BYTE PTR [rbp-0x55],cl
   140043de0:	mov    esp,0x50a53b
   140043de5:	add    BYTE PTR [rax],al
   140043de7:	add    BYTE PTR [rax],al
   140043de9:	add    BYTE PTR [rbx],al
   140043deb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043dec:	pop    rcx
   140043ded:	(bad)  
   140043dee:	ret    
   140043def:	xor    DWORD PTR [rax],edi
   140043df1:	sub    al,0x2
   140043df3:	add    al,BYTE PTR [rdx]
   140043df5:	add    al,BYTE PTR [rdx]
   140043df7:	ds sahf 
   140043df9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043dfa:	lods   al,BYTE PTR ds:[rsi]
   140043dfb:	push   rsi
   140043dfc:	lods   al,BYTE PTR ds:[rsi]
   140043dfd:	xor    esi,DWORD PTR [rip+0x592f6a49]        # 0x19933a84c
   140043e03:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043e04:	add    eax,DWORD PTR [rax]
   140043e06:	add    BYTE PTR [rax],al
   140043e08:	add    BYTE PTR [rdi+0x439b1d2b],ah
   140043e0e:	movabs al,ds:0x23e3e532c305574
   140043e17:	add    bh,BYTE PTR [rsi]
   140043e19:	sahf   
   140043e1a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043e1b:	test   eax,0x26771f7a
   140043e20:	movabs al,ds:0xa72b1d05a0
   140043e29:	jno    0x140043e61
   140043e2b:	mov    eax,0x187dae40
   140043e30:	(bad)
   140043e34:	push   rdi
   140043e35:	sahf   
   140043e36:	add    al,BYTE PTR ds:[rdx]
   140043e39:	push   rbx
   140043e3a:	sahf   
   140043e3b:	rex.R mov cs,WORD PTR [rbx+0x368f5f50]
   140043e42:	rex mov eax,0x2136
	...
   140043e50:	add    BYTE PTR [rsi-0x5bea3c87],bh
   140043e56:	add    al,BYTE PTR ds:[rdx]
   140043e59:	add    bh,BYTE PTR [rsi]
   140043e5b:	rex.WXB jns 0x140043de2
	...
   140043e6e:	add    BYTE PTR [rax],al
   140043e70:	add    BYTE PTR [rdi-0x5b7ce488],ah
   140043e76:	add    al,BYTE PTR [rdx]
   140043e78:	add    al,BYTE PTR [rdx]
   140043e7a:	ds (bad) 
   140043e7c:	cmp    DWORD PTR [rdi+0x0],esp
	...
   140043e8e:	add    BYTE PTR [rax],al
   140043e90:	add    BYTE PTR [rax+0x5c47c578],bh
   140043e96:	jb     0x140043e9a
   140043e98:	add    al,BYTE PTR [rdx]
   140043e9a:	lea    edi,ds:[rcx]
   140043e9d:	mov    cl,0x0
	...
   140043eaf:	add    BYTE PTR [rax],al
   140043eb1:	mov    eax,0x88641e2e
   140043eb6:	lods   al,BYTE PTR ds:[rsi]
   140043eb7:	add    al,BYTE PTR ds:[rdx]
   140043eba:	ds lahf 
   140043ebc:	jns    0x140043e6f
	...
   140043ece:	add    BYTE PTR [rax],al
   140043ed0:	add    BYTE PTR [rdi],dl
   140043ed2:	(bad)  
   140043ed3:	or     DWORD PTR [rax+0x7c],ebx
   140043ed6:	rex.RXB push r15
   140043ed8:	add    al,BYTE PTR ds:[rdx]
   140043edb:	lahf   
   140043edc:	jns    0x140043e8f
	...
   140043eee:	add    BYTE PTR [rax],al
   140043ef0:	add    BYTE PTR [rdi],dl
   140043ef2:	and    BYTE PTR [rdi+0x75],cl
   140043ef5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140043ef6:	xchg   BYTE PTR [rdx+0x730272a4],dh
   140043efc:	cmpxchg DWORD PTR [rax],eax
	...
   140043f0f:	add    BYTE PTR [rax],al
   140043f11:	(bad)  
   140043f12:	(bad)  
   140043f13:	or     DWORD PTR [rbp+0x24],esi
   140043f16:	rex.RXB and DWORD PTR gs:[r10+r14*2+0xb1799f],0x0
	...
   140043f30:	add    BYTE PTR [rdi],dl
   140043f32:	(bad)  
   140043f33:	or     DWORD PTR [rsp+rdx*2-0x5a],edx
   140043f37:	sbb    al,BYTE PTR [rsi+0x7923ac4c]
   140043f3d:	mov    eax,0x0
	...
   140043f4e:	add    BYTE PTR [rax],al
   140043f50:	add    BYTE PTR [rdi],dl
   140043f52:	cs rex.B (bad) 
   140043f55:	(bad)  
   140043f56:	(bad)  
   140043f57:	mov    esp,0x80832a86
   140043f5c:	jns    0x140043f18
	...
   140043f6e:	add    BYTE PTR [rax],al
   140043f70:	add    BYTE PTR [rdx+0x1cc266ad],cl
   140043f76:	rex.WRX (bad) 
   140043f78:	adc    eax,0x5b151515
   140043f7d:	mov    al,BYTE PTR [rax]
	...
   140043f8f:	add    BYTE PTR [rax],al
   140043f91:	mov    al,0x3a
   140043f93:	rex.W nop
   140043f95:	test   DWORD PTR [rbp-0x6f7d7d7b],eax
   140043f9b:	rex.W cmp sil,BYTE PTR [rax+0x0]
	...
   140043fae:	add    BYTE PTR [rax],al
   140043fb0:	add    BYTE PTR [rcx],bl
   140043fb2:	mov    al,0x60
   140043fb4:	rex.RX
   140043fb5:	rex.RX
   140043fb6:	rex.RX mov ecx,0x2d12b9b9
   140043fbc:	mov    al,0x19
	...
   140044026:	add    BYTE PTR [rax],al
   140044028:	(bad)  
   140044029:	(bad)  
   14004402a:	(bad)  
   14004402b:	(bad)  
   14004402c:	(bad)  
   14004402d:	(bad)  
   14004402e:	(bad)  
   14004402f:	(bad)  
   140044030:	(bad)  
   140044031:	cld    
   140044032:	jg     0x140044033
   140044034:	(bad)  
   140044035:	clc    
   140044036:	(bad)  
   140044037:	(bad)  
   140044038:	push   rax
   14004403a:	(bad)  
   14004403b:	(bad)  
   14004403c:	jmp    rax
   14004403e:	ud0    edi,edi
   140044041:	rol    BYTE PTR [rdi],0xff
   140044044:	inc    DWORD PTR [rax+0xffff03]
   14004404a:	add    edi,edi
   14004404c:	inc    BYTE PTR [rax]
   14004404e:	add    bh,bh
   140044050:	cld    
   140044051:	add    BYTE PTR [rax],al
   140044053:	jg     0x14004404d
   140044055:	add    BYTE PTR [rax],al
   140044057:	(bad)  
   140044058:	lock add BYTE PTR [rax],al
   14004405b:	(bad)  
   14004405c:	loopne 0x14004405e
   14004405e:	add    BYTE PTR [rdi],cl
   140044060:	rol    BYTE PTR [rax],0x0
   140044063:	(bad)  
   140044064:	add    BYTE PTR [rax],0x0
   140044067:	add    eax,DWORD PTR [rax-0xfd0000]
   14004406d:	add    BYTE PTR [rbx],0xff
   140044070:	inc    DWORD PTR [rax-0x7f0000fd]
   140044076:	add    edi,edi
   140044078:	inc    DWORD PTR [rax-0x7f0000fd]
   14004407e:	add    edi,edi
   140044080:	inc    DWORD PTR [rax-0x7f0000fd]
   140044086:	add    edi,edi
   140044088:	inc    DWORD PTR [rax-0x7f0000fd]
   14004408e:	add    edi,edi
   140044090:	inc    DWORD PTR [rax-0x7f0000fd]
   140044096:	add    edi,edi
   140044098:	inc    DWORD PTR [rax-0xfd]
   14004409e:	(bad)  
   14004409f:	(bad)  
   1400440a0:	(bad)  
   1400440a1:	(bad)  
   1400440a2:	(bad)  
   1400440a3:	(bad)  
   1400440a4:	(bad)  
   1400440a5:	(bad)  
   1400440a6:	(bad)  
   1400440a7:	jmp    FWORD PTR [rax]
   1400440a9:	add    BYTE PTR [rax],al
   1400440ab:	add    BYTE PTR [rax],dl
   1400440ad:	add    BYTE PTR [rax],al
   1400440af:	add    BYTE PTR [rax],ah
   1400440b1:	add    BYTE PTR [rax],al
   1400440b3:	add    BYTE PTR [rcx],al
   1400440b5:	add    BYTE PTR [rax+rax*1],al
   1400440b8:	add    BYTE PTR [rax],al
   1400440ba:	add    BYTE PTR [rax],al
   1400440bc:	rol    BYTE PTR [rax],0x0
	...
   1400440d3:	add    BYTE PTR [rax],al
   1400440d5:	add    BYTE PTR [rax],0x0
   1400440d8:	add    BYTE PTR [rax],0x0
   1400440db:	add    BYTE PTR [rax+0x80],al
   1400440e1:	add    BYTE PTR [rax-0x7f800000],al
   1400440e7:	add    BYTE PTR [rax-0x7fff8000],al
   1400440ed:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400440f4:	add    bh,bh
   1400440f6:	add    BYTE PTR [rax],al
   1400440f8:	inc    DWORD PTR [rax]
   1400440fa:	add    BYTE PTR [rax],al
   1400440fc:	(bad)  
   1400440fd:	inc    DWORD PTR [rax]
   1400440ff:	add    BYTE PTR [rax],al
   140044101:	add    bh,bh
   140044103:	add    BYTE PTR [rax],al
   140044105:	(bad)  
   140044106:	inc    DWORD PTR [rax]
   140044108:	inc    DWORD PTR [rax]
   14004410a:	inc    DWORD PTR [rax]
   14004410c:	(bad)  
   14004410d:	(bad)  
   14004410e:	inc    DWORD PTR [rax]
   140044110:	add    BYTE PTR [rax],al
   140044112:	add    BYTE PTR [rdi],al
   140044114:	jo     0x140044116
   140044116:	add    BYTE PTR [rax],al
   140044118:	(bad)  
   140044119:	add    BYTE PTR [rax],0xff
   14004411c:	lea    edx,[rax-0x7ff90000]
   140044122:	ja     0x1400440b3
   140044124:	mov    DWORD PTR [rax-0x7ff90000],ecx
   14004412a:	js     0x1400440b4
   14004412c:	or     DWORD PTR [rbx-0x7ff90000],edi
   140044132:	js     0x1400440bf
   140044134:	add    BYTE PTR [rax-0xff90000],cl
   14004413a:	jnp    0x1400440c7
   14004413c:	fisttp WORD PTR [rax-0xff90000]
   140044142:	xchg   DWORD PTR [rbx-0x7f770721],edi
   140044148:	(bad)  
   140044149:	lock mov BYTE PTR [rbp-0x28],bh
   14004414d:	(bad)  
   14004414e:	ja     0x1400440d0
   140044150:	(bad)  
   140044151:	jo     0x1400440db
   140044153:	ja     0x1400441cc
   140044155:	ja     0x1400441ce
   140044157:	cmp    BYTE PTR [rdi-0x9],0x88
   14004415b:	js     0x1400440e5
   14004415d:	mov    BYTE PTR [rax+0x78770770],cl
   140044163:	jb     0x140044187
   140044165:	and    ch,BYTE PTR [rdi]
   140044167:	jo     0x140044169
   140044169:	(bad)  
   14004416a:	push   QWORD PTR [rdx+0x22]
   14004416d:	and    ch,BYTE PTR [rdi]
   14004416f:	jo     0x140044171
   140044171:	add    BYTE PTR [rdi+0x72],dh
   140044174:	and    ah,BYTE PTR [rdx]
   140044176:	(bad)  
   140044177:	jo     0x140044179
   140044179:	add    BYTE PTR [rax],al
   14004417b:	jb     0x14004411f
   14004417d:	and    ch,BYTE PTR [rdi]
   14004417f:	jo     0x140044181
   140044181:	add    BYTE PTR [rax],al
   140044183:	jb     0x14004412f
   140044185:	stos   BYTE PTR es:[rdi],al
   140044186:	scas   eax,DWORD PTR es:[rdi]
   140044187:	jo     0x140044189
   140044189:	add    BYTE PTR [rax],al
   14004418b:	jg     0x14004418c
   14004418d:	(bad)  
   14004418e:	push   QWORD PTR [rax-0x74]
   140044191:	(bad)  
   140044192:	add    BYTE PTR [rax],al
   140044194:	or     BYTE PTR [rdi],0x0
   140044197:	add    BYTE PTR [rax-0x7ffffff9],al
   14004419d:	(bad)  
   14004419e:	add    BYTE PTR [rax],al
   1400441a0:	add    BYTE PTR [rdi],0x0
   1400441a3:	add    BYTE PTR [rax-0x7fffffff],al
   1400441a9:	add    BYTE PTR [rax],al
   1400441ab:	add    BYTE PTR [rax-0x80000000],al
   1400441b1:	add    BYTE PTR [rax],al
   1400441b3:	add    BYTE PTR [rax],al
   1400441b5:	add    BYTE PTR [rax],al
   1400441b7:	add    BYTE PTR [rax-0x20000000],al
   1400441bd:	add    BYTE PTR [rax],al
   1400441bf:	add    al,dh
   1400441c1:	add    BYTE PTR [rax],al
   1400441c3:	add    ah,bh
   1400441c5:	add    BYTE PTR [rax],al
   1400441c7:	add    ah,bh
   1400441c9:	add    BYTE PTR [rax],al
   1400441cb:	add    ah,bh
   1400441cd:	add    BYTE PTR [rax],al
   1400441cf:	add    BYTE PTR [rax],ch
   1400441d1:	add    BYTE PTR [rax],al
   1400441d3:	add    BYTE PTR [rax],dl
   1400441d5:	add    BYTE PTR [rax],al
   1400441d7:	add    BYTE PTR [rax],ah
   1400441d9:	add    BYTE PTR [rax],al
   1400441db:	add    BYTE PTR [rcx],al
   1400441dd:	add    BYTE PTR [rax],cl
   1400441df:	add    BYTE PTR [rax],al
   1400441e1:	add    BYTE PTR [rax],al
   1400441e3:	add    BYTE PTR [rax+0x1],al
	...
   1400441fa:	add    BYTE PTR [rax],al
   1400441fc:	add    BYTE PTR [rax],0x0
   1400441ff:	add    BYTE PTR [rax],al
   140044201:	add    BYTE PTR [rax],0x0
   140044204:	add    BYTE PTR [rax+0x0],0x80
   14004420b:	add    BYTE PTR [rax+0x8000],al
   140044211:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140044218:	rcr    ah,0xc0
   14004421b:	add    BYTE PTR [rsi+0x400f0ca],ah
   140044221:	add    al,0x4
   140044223:	add    BYTE PTR [rax],cl
   140044225:	or     BYTE PTR [rax],cl
   140044227:	add    BYTE PTR [rsp+rcx*1],cl
   14004422a:	or     al,0x0
   14004422c:	adc    DWORD PTR [rcx],edx
   14004422e:	adc    DWORD PTR [rax],eax
   140044230:	(bad)  
   140044231:	(bad)  
   140044232:	(bad)  
   140044233:	add    BYTE PTR [rsp+rbx*1],bl
   140044236:	sbb    al,0x0
   140044238:	and    ah,BYTE PTR [rdx]
   14004423a:	and    al,BYTE PTR [rax]
   14004423c:	sub    DWORD PTR [rcx],ebp
   14004423e:	sub    DWORD PTR [rax],eax
   140044240:	push   rbp
   140044241:	push   rbp
   140044242:	push   rbp
   140044243:	add    BYTE PTR [rbp+0x4d],cl
   140044246:	rex.WRB add BYTE PTR [r10+0x42],r8b
   14004424a:	rex.X add BYTE PTR [rcx],dil
   14004424d:	cmp    DWORD PTR [rcx],edi
   14004424f:	add    bh,bh
   140044251:	jl     0x1400441d3
   140044253:	add    bh,bh
   140044255:	push   rax
   140044256:	push   rax
   140044257:	add    dh,dl
   140044259:	add    BYTE PTR [rbx-0x133400],dl
   14004425f:	add    bh,ch
   140044261:	(bad)  
   140044262:	mov    BYTE PTR [rax],0xe7
   140044265:	out    0xd6,eax
   140044267:	add    BYTE PTR [rbp+0x330090a9],ch
   14004426d:	add    BYTE PTR [rax],al
   14004426f:	add    BYTE PTR [rsi+0x0],ah
   140044272:	add    BYTE PTR [rax],al
   140044274:	cdq    
   140044275:	add    BYTE PTR [rax],al
   140044277:	add    ah,cl
   140044279:	add    BYTE PTR [rax],al
   14004427b:	add    BYTE PTR [rax],al
   14004427d:	xor    eax,DWORD PTR [rax]
   14004427f:	add    BYTE PTR [rbx],dh
   140044281:	xor    eax,DWORD PTR [rax]
   140044283:	add    BYTE PTR [rsi+0x33],ah
   140044286:	add    BYTE PTR [rax],al
   140044288:	cdq    
   140044289:	xor    eax,DWORD PTR [rax]
   14004428b:	add    ah,cl
   14004428d:	xor    eax,DWORD PTR [rax]
   14004428f:	add    bh,bh
   140044291:	xor    eax,DWORD PTR [rax]
   140044293:	add    BYTE PTR [rax],al
   140044295:	data16 add BYTE PTR [rax],al
   140044298:	xor    esp,DWORD PTR [rsi+0x0]
   14004429b:	add    BYTE PTR [rsi+0x66],ah
   14004429e:	add    BYTE PTR [rax],al
   1400442a0:	cdq    
   1400442a1:	data16 add BYTE PTR [rax],al
   1400442a4:	int3   
   1400442a5:	data16 add BYTE PTR [rax],al
   1400442a8:	jmp    QWORD PTR [rsi+0x0]
   1400442ab:	add    BYTE PTR [rax],al
   1400442ad:	cdq    
   1400442ae:	add    BYTE PTR [rax],al
   1400442b0:	xor    ebx,DWORD PTR [rcx-0x669a0000]
   1400442b6:	add    BYTE PTR [rax],al
   1400442b8:	cdq    
   1400442b9:	cdq    
   1400442ba:	add    BYTE PTR [rax],al
   1400442bc:	int3   
   1400442bd:	cdq    
   1400442be:	add    BYTE PTR [rax],al
   1400442c0:	call   FWORD PTR [rcx-0x34000000]
   1400442c6:	add    BYTE PTR [rax],al
   1400442c8:	xor    ecx,esp
   1400442ca:	add    BYTE PTR [rax],al
   1400442cc:	data16 int3 
   1400442ce:	add    BYTE PTR [rax],al
   1400442d0:	cdq    
   1400442d1:	int3   
   1400442d2:	add    BYTE PTR [rax],al
   1400442d4:	int3   
   1400442d5:	int3   
   1400442d6:	add    BYTE PTR [rax],al
   1400442d8:	dec    esp
   1400442da:	add    BYTE PTR [rax],al
   1400442dc:	inc    WORD PTR [rax]
   1400442df:	add    BYTE PTR [rcx-0x33ffff01],bl
   1400442e5:	inc    DWORD PTR [rax]
   1400442e7:	add    BYTE PTR [rax],al
   1400442e9:	add    BYTE PTR [rbx],dh
   1400442eb:	add    BYTE PTR [rbx],dh
   1400442ed:	add    BYTE PTR [rbx],dh
   1400442ef:	add    BYTE PTR [rsi+0x0],ah
   1400442f2:	xor    eax,DWORD PTR [rax]
   1400442f4:	cdq    
   1400442f5:	add    BYTE PTR [rbx],dh
   1400442f7:	add    ah,cl
   1400442f9:	add    BYTE PTR [rbx],dh
   1400442fb:	add    bh,bh
   1400442fd:	add    BYTE PTR [rbx],dh
   1400442ff:	add    BYTE PTR [rax],al
   140044301:	xor    esi,DWORD PTR [rbx]
   140044303:	add    BYTE PTR [rbx],dh
   140044305:	xor    esi,DWORD PTR [rbx]
   140044307:	add    BYTE PTR [rsi+0x33],ah
   14004430a:	xor    eax,DWORD PTR [rax]
   14004430c:	cdq    
   14004430d:	xor    esi,DWORD PTR [rbx]
   14004430f:	add    ah,cl
   140044311:	xor    esi,DWORD PTR [rbx]
   140044313:	add    bh,bh
   140044315:	xor    esi,DWORD PTR [rbx]
   140044317:	add    BYTE PTR [rax],al
   140044319:	xor    ax,WORD PTR [rax]
   14004431c:	xor    esp,DWORD PTR [rsi+0x33]
   14004431f:	add    BYTE PTR [rsi+0x66],ah
   140044322:	xor    eax,DWORD PTR [rax]
   140044324:	cdq    
   140044325:	xor    ax,WORD PTR [rax]
   140044328:	int3   
   140044329:	xor    ax,WORD PTR [rax]
   14004432c:	jmp    QWORD PTR [rsi+0x33]
   14004432f:	add    BYTE PTR [rax],al
   140044331:	cdq    
   140044332:	xor    eax,DWORD PTR [rax]
   140044334:	xor    ebx,DWORD PTR [rcx-0x6699ffcd]
   14004433a:	xor    eax,DWORD PTR [rax]
   14004433c:	cdq    
   14004433d:	cdq    
   14004433e:	xor    eax,DWORD PTR [rax]
   140044340:	int3   
   140044341:	cdq    
   140044342:	xor    eax,DWORD PTR [rax]
   140044344:	call   FWORD PTR [rcx-0x33ffffcd]
   14004434a:	xor    eax,DWORD PTR [rax]
   14004434c:	xor    ecx,esp
   14004434e:	xor    eax,DWORD PTR [rax]
   140044350:	data16 int3 
   140044352:	xor    eax,DWORD PTR [rax]
   140044354:	cdq    
   140044355:	int3   
   140044356:	xor    eax,DWORD PTR [rax]
   140044358:	int3   
   140044359:	int3   
   14004435a:	xor    eax,DWORD PTR [rax]
   14004435c:	dec    esp
   14004435e:	xor    eax,DWORD PTR [rax]
   140044360:	xor    edi,edi
   140044362:	xor    eax,DWORD PTR [rax]
   140044364:	push   WORD PTR [rbx]
   140044367:	add    BYTE PTR [rcx-0x33ffcc01],bl
   14004436d:	push   QWORD PTR [rbx]
   14004436f:	add    bh,bh
   140044371:	push   QWORD PTR [rbx]
   140044373:	add    BYTE PTR [rax],al
   140044375:	add    BYTE PTR [rsi+0x0],ah
   140044378:	xor    eax,DWORD PTR [rax]
   14004437a:	data16 add BYTE PTR [rsi+0x0],ah
   14004437e:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   140044385:	add    BYTE PTR [rsi+0x0],ah
   140044388:	inc    DWORD PTR [rax]
   14004438a:	data16 add BYTE PTR [rax],al
   14004438d:	xor    esp,DWORD PTR [rsi+0x0]
   140044390:	xor    esi,DWORD PTR [rbx]
   140044392:	data16 add BYTE PTR [rsi+0x33],ah
   140044396:	data16 add BYTE PTR [rcx-0x33ff99cd],bl
   14004439d:	xor    esp,DWORD PTR [rsi+0x0]
   1400443a0:	push   QWORD PTR [rbx]
   1400443a2:	data16 add BYTE PTR [rax],al
   1400443a5:	data16 data16 add BYTE PTR [rbx],dh
   1400443a9:	data16 data16 add BYTE PTR [rsi+0x66],ah
   1400443ae:	data16 add BYTE PTR [rcx-0x33ff999a],bl
   1400443b5:	data16 data16 add BYTE PTR [rax],al
   1400443b9:	cdq    
   1400443ba:	data16 add BYTE PTR [rbx],dh
   1400443bd:	cdq    
   1400443be:	data16 add BYTE PTR [rsi-0x67],ah
   1400443c2:	data16 add BYTE PTR [rcx-0x33ff9967],bl
   1400443c9:	cdq    
   1400443ca:	data16 add bh,bh
   1400443cd:	cdq    
   1400443ce:	data16 add BYTE PTR [rax],al
   1400443d1:	int3   
   1400443d2:	data16 add BYTE PTR [rbx],dh
   1400443d5:	int3   
   1400443d6:	data16 add BYTE PTR [rcx-0x33ff9934],bl
   1400443dd:	int3   
   1400443de:	data16 add bh,bh
   1400443e1:	int3   
   1400443e2:	data16 add BYTE PTR [rax],al
   1400443e5:	jmp    QWORD PTR [rsi+0x0]
   1400443e8:	xor    edi,edi
   1400443ea:	data16 add BYTE PTR [rcx-0x33ff9901],bl
   1400443f1:	jmp    QWORD PTR [rsi+0x0]
   1400443f4:	inc    DWORD PTR [rax]
   1400443f6:	int3   
   1400443f7:	add    ah,cl
   1400443f9:	add    bh,bh
   1400443fb:	add    BYTE PTR [rax],al
   1400443fd:	cdq    
   1400443fe:	cdq    
   1400443ff:	add    BYTE PTR [rcx-0x66ff66cd],bl
   140044405:	add    BYTE PTR [rcx-0x66ff3400],bl
   14004440b:	add    BYTE PTR [rax],al
   14004440d:	add    BYTE PTR [rcx-0x66cccd00],bl
   140044413:	add    BYTE PTR [rsi+0x0],ah
   140044416:	cdq    
   140044417:	add    ah,cl
   140044419:	xor    ebx,DWORD PTR [rcx-0x66ff0100]
   14004441f:	add    BYTE PTR [rax],al
   140044421:	cwd    
   140044423:	add    BYTE PTR [rbx],dh
   140044425:	cwd    
   140044427:	add    BYTE PTR [rsi+0x33],ah
   14004442a:	cdq    
   14004442b:	add    BYTE PTR [rcx-0x33ff669a],bl
   140044431:	cwd    
   140044433:	add    bh,bh
   140044435:	xor    ebx,DWORD PTR [rcx-0x6666cd00]
   14004443b:	add    BYTE PTR [rsi-0x67],ah
   14004443e:	cdq    
   14004443f:	add    BYTE PTR [rcx-0x33ff6667],bl
   140044445:	cdq    
   140044446:	cdq    
   140044447:	add    bh,bh
   140044449:	cdq    
   14004444a:	cdq    
   14004444b:	add    BYTE PTR [rax],al
   14004444d:	int3   
   14004444e:	cdq    
   14004444f:	add    BYTE PTR [rbx],dh
   140044451:	int3   
   140044452:	cdq    
   140044453:	add    BYTE PTR [rsi-0x34],ah
   140044456:	data16 add BYTE PTR [rcx-0x33ff6634],bl
   14004445d:	int3   
   14004445e:	cdq    
   14004445f:	add    bh,bh
   140044461:	int3   
   140044462:	cdq    
   140044463:	add    BYTE PTR [rax],al
   140044465:	call   FWORD PTR [rcx-0x6600cd00]
   14004446b:	add    BYTE PTR [rsi-0x34],ah
   14004446e:	cdq    
   14004446f:	add    BYTE PTR [rcx-0x33ff6601],bl
   140044475:	call   FWORD PTR [rcx-0x66000100]
   14004447b:	add    BYTE PTR [rax],al
   14004447d:	add    ah,cl
   14004447f:	add    BYTE PTR [rbx],dh
   140044481:	add    BYTE PTR [rcx-0x33ff9a00],bl
   140044487:	add    BYTE PTR [rcx-0x33ff3400],bl
   14004448d:	add    ah,cl
   14004448f:	add    BYTE PTR [rax],al
   140044491:	xor    ebx,DWORD PTR [rcx-0x33cccd00]
   140044497:	add    BYTE PTR [rsi+0x33],ah
   14004449a:	int3   
   14004449b:	add    BYTE PTR [rcx-0x33ff33cd],bl
   1400444a1:	xor    ecx,esp
   1400444a3:	add    bh,bh
   1400444a5:	xor    ecx,esp
   1400444a7:	add    BYTE PTR [rax],al
   1400444a9:	data16 int3 
   1400444ab:	add    BYTE PTR [rbx],dh
   1400444ad:	data16 int3 
   1400444af:	add    BYTE PTR [rsi+0x66],ah
   1400444b2:	cdq    
   1400444b3:	add    BYTE PTR [rcx-0x33ff339a],bl
   1400444b9:	data16 int3 
   1400444bb:	add    bh,bh
   1400444bd:	cwd    
   1400444bf:	add    BYTE PTR [rax],al
   1400444c1:	cdq    
   1400444c2:	int3   
   1400444c3:	add    BYTE PTR [rbx],dh
   1400444c5:	cdq    
   1400444c6:	int3   
   1400444c7:	add    BYTE PTR [rsi-0x67],ah
   1400444ca:	int3   
   1400444cb:	add    BYTE PTR [rcx-0x33ff3367],bl
   1400444d1:	cdq    
   1400444d2:	int3   
   1400444d3:	add    bh,bh
   1400444d5:	cdq    
   1400444d6:	int3   
   1400444d7:	add    BYTE PTR [rax],al
   1400444d9:	int3   
   1400444da:	int3   
   1400444db:	add    BYTE PTR [rbx],dh
   1400444dd:	int3   
   1400444de:	int3   
   1400444df:	add    BYTE PTR [rsi-0x34],ah
   1400444e2:	int3   
   1400444e3:	add    BYTE PTR [rcx-0x33ff3334],bl
   1400444e9:	int3   
   1400444ea:	int3   
   1400444eb:	add    bh,bh
   1400444ed:	int3   
   1400444ee:	int3   
   1400444ef:	add    BYTE PTR [rax],al
   1400444f1:	dec    esp
   1400444f3:	add    BYTE PTR [rbx],dh
   1400444f5:	dec    esp
   1400444f7:	add    BYTE PTR [rsi-0x1],ah
   1400444fa:	cdq    
   1400444fb:	add    BYTE PTR [rcx-0x33ff3301],bl
   140044501:	dec    esp
   140044503:	add    bh,bh
   140044505:	dec    esp
   140044507:	add    BYTE PTR [rbx],dh
   140044509:	add    ah,cl
   14004450b:	add    BYTE PTR [rsi+0x0],ah
   14004450e:	inc    DWORD PTR [rax]
   140044510:	cdq    
   140044511:	add    bh,bh
   140044513:	add    BYTE PTR [rax],al
   140044515:	xor    ecx,esp
   140044517:	add    BYTE PTR [rbx],dh
   140044519:	xor    edi,edi
   14004451b:	add    BYTE PTR [rsi+0x33],ah
   14004451e:	inc    DWORD PTR [rax]
   140044520:	cdq    
   140044521:	xor    edi,edi
   140044523:	add    ah,cl
   140044525:	xor    edi,edi
   140044527:	add    bh,bh
   140044529:	xor    edi,edi
   14004452b:	add    BYTE PTR [rax],al
   14004452d:	inc    WORD PTR [rax]
   140044530:	xor    esp,DWORD PTR [rsi-0x1]
   140044533:	add    BYTE PTR [rsi+0x66],ah
   140044536:	int3   
   140044537:	add    BYTE PTR [rcx-0x33ff009a],bl
   14004453d:	inc    WORD PTR [rax]
   140044540:	jmp    QWORD PTR [rsi-0x34]
   140044543:	add    BYTE PTR [rax],al
   140044545:	cdq    
   140044546:	inc    DWORD PTR [rax]
   140044548:	xor    ebx,DWORD PTR [rcx-0x6699ff01]
   14004454e:	inc    DWORD PTR [rax]
   140044550:	cdq    
   140044551:	cdq    
   140044552:	inc    DWORD PTR [rax]
   140044554:	int3   
   140044555:	cdq    
   140044556:	inc    DWORD PTR [rax]
   140044558:	call   FWORD PTR [rcx-0x33ffff01]
   14004455e:	inc    DWORD PTR [rax]
   140044560:	xor    ecx,esp
   140044562:	inc    DWORD PTR [rax]
   140044564:	data16 int3 
   140044566:	inc    DWORD PTR [rax]
   140044568:	cdq    
   140044569:	int3   
   14004456a:	inc    DWORD PTR [rax]
   14004456c:	int3   
   14004456d:	int3   
   14004456e:	inc    DWORD PTR [rax]
   140044570:	dec    esp
   140044572:	inc    DWORD PTR [rax]
   140044574:	xor    edi,edi
   140044576:	inc    DWORD PTR [rax]
   140044578:	dec    sp
   14004457b:	add    BYTE PTR [rcx-0x33ff0001],bl
   140044581:	(bad)  
   140044582:	inc    DWORD PTR [rax]
   140044584:	jmp    QWORD PTR [rsi+0x66]
   140044587:	add    BYTE PTR [rsi-0x1],ah
   14004458a:	data16 add bh,bh
   14004458d:	jmp    QWORD PTR [rsi+0x0]
   140044590:	data16 inc WORD PTR [rax]
   140044594:	jmp    QWORD PTR [rsi-0x1]
   140044597:	add    BYTE PTR [rsi-0x1],ah
   14004459a:	inc    DWORD PTR [rax]
   14004459c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004459d:	add    BYTE PTR [rcx],ah
   14004459f:	add    BYTE PTR [rdi+0x5f],bl
   1400445a2:	pop    rdi
   1400445a3:	add    BYTE PTR [rdi+0x77],dh
   1400445a6:	ja     0x1400445a8
   1400445a8:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   1400445ae:	xchg   esi,eax
   1400445af:	add    bl,cl
   1400445b1:	retf   
   1400445b2:	retf   
   1400445b3:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   1400445b9:	xlat   BYTE PTR ds:[rbx]
   1400445ba:	xlat   BYTE PTR ds:[rbx]
   1400445bb:	add    ch,bl
   1400445bd:	fstp   st(5)
   1400445bf:	add    bl,ah
   1400445c1:	jrcxz  0x1400445a6
   1400445c3:	add    dl,ch
   1400445c5:	(bad)  
   1400445c6:	(bad)  
   1400445c7:	add    cl,dh
   1400445c9:	icebp  
   1400445ca:	icebp  
   1400445cb:	add    al,bh
   1400445cd:	clc    
   1400445ce:	clc    
   1400445cf:	add    bh,bh
   1400445d1:	sti    
   1400445d2:	lock add BYTE PTR [rax-0x7fff5b60],ah
   1400445d9:	add    BYTE PTR [rax+0xff00],0x0
   1400445e0:	add    bh,bh
   1400445e2:	add    BYTE PTR [rax],al
   1400445e4:	(bad)  
   1400445e5:	inc    DWORD PTR [rax]
   1400445e7:	add    BYTE PTR [rax],al
   1400445e9:	add    bh,bh
   1400445eb:	add    bh,bh
   1400445ed:	add    bh,bh
   1400445ef:	add    BYTE PTR [rax],al
   1400445f1:	(bad)  
   1400445f2:	inc    DWORD PTR [rax]
   1400445f4:	(bad)  
   1400445f5:	(bad)  
   1400445f6:	inc    DWORD PTR [rax]
	...
   140044608:	add    ah,ch
   14004460a:	(bad)  
   14004460b:	add    BYTE PTR [rax],al
   14004460d:	in     al,dx
   14004460e:	(bad)  
   14004460f:	inc    DWORD PTR [rdi]
   140044611:	(bad)  
   140044612:	cli    
   140044613:	add    BYTE PTR [rax],al
   140044615:	add    BYTE PTR [rax],al
   140044617:	add    BYTE PTR [rax],al
   140044619:	in     al,dx
   14004461a:	(bad)  
   14004461b:	add    ah,ch
   14004461d:	(bad)  
   14004461e:	(bad)  
   14004461f:	inc    DWORD PTR [rdi]
   140044621:	cli    
   140044622:	(bad)  
   140044623:	(bad)  
   140044624:	add    BYTE PTR [rax],al
   140044626:	add    BYTE PTR [rax],al
   140044628:	add    ah,ch
   14004462a:	(bad)  
   14004462b:	add    ah,ch
   14004462d:	(bad)  
   14004462e:	(bad)  
   14004462f:	(bad)  
   140044630:	add    dl,bh
   140044632:	sti    
   140044633:	sti    
   140044634:	add    BYTE PTR [rax],al
   140044636:	add    BYTE PTR [rax],al
   140044638:	add    ah,ch
   14004463a:	(bad)  
   14004463b:	add    ah,ch
   14004463d:	(bad)  
   14004463e:	(bad)  
   14004463f:	sti    
   140044640:	add    BYTE PTR [rax],al
   140044642:	(bad)  
   140044643:	(bad)  
   140044644:	add    BYTE PTR [rax],al
   140044646:	add    BYTE PTR [rax],al
   140044648:	add    ah,ch
   14004464a:	inc    DWORD PTR [rax]
   14004464c:	in     al,dx
   14004464d:	sti    
   14004464e:	(bad)  
   14004464f:	sti    
   140044650:	(bad)  
   140044651:	inc    DWORD PTR [rdi]
   140044653:	(bad)  
   140044654:	add    BYTE PTR [rax],al
   140044656:	add    BYTE PTR [rax],al
   140044658:	add    ah,ch
   14004465a:	inc    DWORD PTR [rax]
   14004465c:	(bad)  
   14004465d:	in     al,dx
   14004465e:	sti    
   14004465f:	sti    
   140044660:	(bad)  
   140044661:	(bad)  
   140044662:	inc    DWORD PTR [rax]
   140044664:	(bad)  
   140044665:	(bad)  
   140044666:	(bad)  
   140044667:	add    BYTE PTR [rax],al
   140044669:	in     al,dx
   14004466a:	inc    DWORD PTR [rax]
   14004466c:	(bad)  
   14004466d:	(bad)  
   14004466e:	add    BYTE PTR [rax],al
   140044670:	add    BYTE PTR [rax],al
   140044672:	add    ah,ch
   140044674:	in     al,dx
   140044675:	in     al,dx
   140044676:	(bad)  
   140044677:	add    BYTE PTR [rax],al
   140044679:	in     al,dx
   14004467a:	in     al,dx
   14004467b:	add    BYTE PTR [rdi],al
   14004467d:	(bad)  
   14004467e:	in     al,dx
   14004467f:	in     al,dx
   140044680:	in     al,dx
   140044681:	in     al,dx
   140044682:	in     al,dx
   140044683:	in     al,dx
   140044684:	in     al,dx
   140044685:	in     al,dx
   140044686:	(bad)  
   140044687:	add    ah,ch
   140044689:	(bad)  
   14004468a:	(bad)  
   14004468b:	in     al,dx
   14004468c:	(bad)  
   14004468d:	(bad)  
   14004468e:	in     al,dx
   14004468f:	(bad)  
   140044690:	(bad)  
   140044691:	(bad)  
   140044692:	(bad)  
   140044693:	(bad)  
   140044694:	(bad)  
   140044695:	(bad)  
   140044696:	in     al,dx
   140044697:	add    BYTE PTR [rax],al
   140044699:	in     al,dx
   14004469a:	in     al,dx
   14004469b:	in     al,dx
   14004469c:	in     al,dx
   14004469d:	(bad)  
   14004469e:	in     al,dx
   14004469f:	outs   dx,DWORD PTR ds:[rsi]
   1400446a0:	jp     0x1400446f4
   1400446a2:	xor    DWORD PTR [rbp+0x4c],ecx
   1400446a5:	(bad)  
   1400446a6:	in     al,dx
   1400446a7:	add    BYTE PTR [rax],al
   1400446a9:	add    BYTE PTR [rax],al
   1400446ab:	in     al,dx
   1400446ac:	(bad)  
   1400446ad:	(bad)  
   1400446ae:	in     al,dx
   1400446af:	outs   dx,DWORD PTR ds:[rsi]
   1400446b0:	in     eax,0x7a
   1400446b2:	push   rdx
   1400446b3:	xor    DWORD PTR [rbp-0x1],ecx
   1400446b6:	in     al,dx
   1400446b7:	add    BYTE PTR [rax],al
   1400446b9:	add    BYTE PTR [rax],al
   1400446bb:	add    ah,ch
   1400446bd:	in     al,dx
   1400446be:	in     al,dx
   1400446bf:	outs   dx,DWORD PTR ds:[rsi]
   1400446c0:	in     eax,0xe5
   1400446c2:	jp     0x140044716
   1400446c4:	xor    edi,edi
   1400446c6:	in     al,dx
   1400446c7:	add    BYTE PTR [rax],al
   1400446c9:	add    BYTE PTR [rax],al
   1400446cb:	add    BYTE PTR [rax],al
   1400446cd:	add    ah,ch
   1400446cf:	outs   dx,DWORD PTR ds:[rsi]
   1400446d0:	jp     0x1400446b7
   1400446d2:	in     eax,0x7a
   1400446d4:	push   rdx
   1400446d5:	(bad)  
   1400446d6:	in     al,dx
   1400446d7:	add    BYTE PTR [rax],al
   1400446d9:	add    BYTE PTR [rax],al
   1400446db:	add    BYTE PTR [rax],al
   1400446dd:	add    ah,ch
   1400446df:	outs   dx,DWORD PTR ds:[rsi]
   1400446e0:	rex.WR
   1400446e1:	rex.WR
   1400446e2:	rex.WR
   1400446e3:	rex.WR
   1400446e4:	rex.WR (bad) 
   1400446e6:	in     al,dx
   1400446e7:	add    BYTE PTR [rax],al
   1400446e9:	add    BYTE PTR [rax],al
   1400446eb:	add    BYTE PTR [rax],al
   1400446ed:	add    ah,ch
   1400446ef:	lock lock lock lock lock lock lock in al,dx
   1400446f7:	add    BYTE PTR [rdi+rbx*1+0xf800000],cl
   1400446fe:	add    BYTE PTR [rax],al
   140044700:	add    BYTE PTR [rdi],0x0
   140044703:	add    BYTE PTR [rax-0x7ffffff9],al
   140044709:	(bad)  
   14004470a:	add    BYTE PTR [rax],al
   14004470c:	add    BYTE PTR [rcx],0x0
   14004470f:	add    BYTE PTR [rax-0x80000000],al
   140044715:	add    BYTE PTR [rax],al
   140044717:	add    BYTE PTR [rax+0x0],al
   14004471d:	add    BYTE PTR [rax],al
   14004471f:	add    BYTE PTR [rax-0x20000000],al
   140044725:	add    BYTE PTR [rax],al
   140044727:	add    al,dh
   140044729:	add    BYTE PTR [rax],al
   14004472b:	add    ah,bh
   14004472d:	add    BYTE PTR [rax],al
   14004472f:	add    ah,bh
   140044731:	add    BYTE PTR [rax],al
   140044733:	add    ah,bh
   140044735:	add    BYTE PTR [rax],al
   140044737:	add    BYTE PTR [rax],ch
   140044739:	add    BYTE PTR [rax],al
   14004473b:	add    BYTE PTR [rax],ah
   14004473d:	add    BYTE PTR [rax],al
   14004473f:	add    BYTE PTR [rax+0x0],al
   140044742:	add    BYTE PTR [rax],al
   140044744:	add    DWORD PTR [rax],eax
   140044746:	add    al,0x0
   140044748:	add    BYTE PTR [rax],al
   14004474a:	add    BYTE PTR [rax],al
   14004474c:	add    BYTE PTR [rdx],0x0
	...
   140044763:	add    BYTE PTR [rax],al
   140044765:	add    BYTE PTR [rax],0x0
   140044768:	add    BYTE PTR [rax],0x0
   14004476b:	add    BYTE PTR [rax+0x80],al
   140044771:	add    BYTE PTR [rax-0x7f800000],al
   140044777:	add    BYTE PTR [rax-0x7fff8000],al
   14004477d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140044784:	add    bh,bh
   140044786:	add    BYTE PTR [rax],al
   140044788:	inc    DWORD PTR [rax]
   14004478a:	add    BYTE PTR [rax],al
   14004478c:	(bad)  
   14004478d:	inc    DWORD PTR [rax]
   14004478f:	add    BYTE PTR [rax],al
   140044791:	add    bh,bh
   140044793:	add    BYTE PTR [rax],al
   140044795:	(bad)  
   140044796:	inc    DWORD PTR [rax]
   140044798:	inc    DWORD PTR [rax]
   14004479a:	inc    DWORD PTR [rax]
   14004479c:	(bad)  
   14004479d:	(bad)  
   14004479e:	inc    DWORD PTR [rax]
   1400447a0:	add    BYTE PTR [rax],al
   1400447a2:	add    BYTE PTR [rax],al
   1400447a4:	add    BYTE PTR [rax],al
   1400447a6:	add    BYTE PTR [rdi],al
   1400447a8:	ja     0x1400447aa
	...
   1400447b6:	(bad)  
   1400447b7:	js     0x140044746
   1400447b9:	fst    QWORD PTR [rax+0x0]
   1400447bf:	add    BYTE PTR [rax],al
   1400447c1:	js     0x1400447bb
   1400447c3:	lock add BYTE PTR [rax],al
   1400447c6:	jg     0x140044757
   1400447c8:	mov    ch,bl
   1400447ca:	cdq    
   1400447cb:	nop
   1400447cc:	add    BYTE PTR [rax],al
   1400447ce:	add    BYTE PTR [rax],al
   1400447d0:	add    BYTE PTR [rdi-0x71],bh
   1400447d3:	xor    BYTE PTR [rax+0x7],0x87
   1400447d7:	clc    
   1400447d8:	std    
   1400447d9:	fstp   DWORD PTR [rcx+0x88]
   1400447df:	add    BYTE PTR [rax],al
   1400447e1:	js     0x1400447db
   1400447e3:	lock xchg DWORD PTR [rdi],eax
   1400447e6:	js     0x140044867
   1400447e8:	mov    cl,bl
   1400447ea:	cwde   
   1400447eb:	mov    BYTE PTR [rax],al
   1400447ed:	add    BYTE PTR [rax],al
   1400447ef:	add    BYTE PTR [rax],al
   1400447f1:	jg     0x140044782
   1400447f3:	cmp    BYTE PTR [rax+0x77],0x87
   1400447f7:	xchg   eax,edi
   1400447f9:	(bad)  [rax+0xb08b]
   1400447ff:	add    BYTE PTR [rax],al
   140044801:	js     0x1400447fb
   140044803:	lock xchg DWORD PTR [rax+0x78],edi
   140044807:	js     0x140044879
   140044809:	or     DWORD PTR [rbx+0xb0bb],ecx
   14004480f:	add    BYTE PTR [rax],al
   140044811:	jg     0x1400447a2
   140044813:	cmp    BYTE PTR [rax+0x77],0x87
   140044817:	xchg   DWORD PTR [rax],eax
   140044819:	add    BYTE PTR [rbx+0x80b8],bh
   14004481f:	add    BYTE PTR [rax],al
   140044821:	js     0x14004481b
   140044823:	lock xchg DWORD PTR [rax-0x78],edi
   140044827:	mov    ebx,0x78780000
   14004482c:	jo     0x14004482e
   14004482e:	add    BYTE PTR [rax],al
   140044830:	add    BYTE PTR [rdi-0x71],bh
   140044833:	cmp    BYTE PTR [rax+0x78],0xbb
   140044837:	mov    DWORD PTR [rax-0x7f7878f9],esi
   14004483d:	add    BYTE PTR [rax],al
   14004483f:	add    BYTE PTR [rax],al
   140044841:	jg     0x140044842
   140044843:	lock xchg DWORD PTR [rbx-0x48],edi
   140044847:	fwait
   140044848:	mov    ebp,0x707878ff
   14004484d:	add    BYTE PTR [rax],al
   14004484f:	add    BYTE PTR [rax],al
   140044851:	jg     0x140044852
   140044853:	lock js 0x1400448cd
   140044856:	mov    DWORD PTR [rbx-0x78080743],edi
   14004485c:	add    BYTE PTR [rax],al
   14004485e:	add    BYTE PTR [rax],al
   140044860:	add    BYTE PTR [rdi-0x1],bh
   140044863:	lock xchg DWORD PTR [rdi-0x70224465],eax
   14004486a:	(bad)  
   14004486b:	js     0x140044875
   14004486d:	mov    BYTE PTR [rax-0x810000],cl
   140044873:	lock mov BYTE PTR [rax-0x77224285],cl
   14004487a:	clc    
   14004487b:	lock add BYTE PTR [rax],al
   14004487e:	mov    BYTE PTR [rax+0x0],dh
   140044881:	jg     0x140044882
   140044883:	lock mov BYTE PTR [rax-0x772282f9],cl
   14004488a:	add    BYTE PTR [rdi],0x77
   14004488d:	ja     0x140044817
   14004488f:	jo     0x140044891
   140044891:	jg     0x140044892
   140044893:	lock mov BYTE PTR [rax+0x7777f70f],cl
   14004489a:	jg     0x14004489b
   14004489c:	(bad)  
   14004489d:	(bad)  
   14004489e:	push   QWORD PTR [rax+0x0]
   1400448a1:	ja     0x14004491a
   1400448a3:	jo     0x14004482d
   1400448a5:	mov    BYTE PTR [rdi],al
   1400448a7:	ja     0x140044920
   1400448a9:	ja     0x140044922
   1400448ab:	ja     0x140044924
   1400448ad:	ja     0x140044927
   1400448af:	jo     0x1400448b1
   1400448b1:	ja     0x14004492a
   1400448b3:	jo     0x14004483d
   1400448b5:	mov    BYTE PTR [rax],al
	...
   1400448bf:	add    BYTE PTR [rdi],0xff
   1400448c2:	push   rdi
   1400448c4:	or     BYTE PTR [rax-0x777777f9],cl
   1400448ca:	mov    BYTE PTR [rax+0x878888],cl
   1400448d0:	ja     0x140044949
   1400448d2:	ja     0x14004494b
   1400448d4:	jo     0x14004485e
   1400448d6:	(bad)  
   1400448d7:	(bad)  
   1400448d8:	(bad)  
   1400448d9:	(bad)  
   1400448da:	(bad)  
   1400448db:	(bad)  
   1400448dc:	(bad)  
   1400448dd:	inc    DWORD PTR [rdi+0x7000000]
   1400448e3:	ja     0x14004495c
   1400448e5:	or     BYTE PTR [rdi],al
   1400448e7:	repnz and ah,BYTE PTR [rdx]
   1400448ea:	and    ah,BYTE PTR [rdx]
   1400448ec:	and    ch,BYTE PTR [rdi]
   1400448ee:	xchg   DWORD PTR [rax],eax
   1400448f0:	add    BYTE PTR [rax],al
   1400448f2:	add    BYTE PTR [rdi+0x77],dh
   1400448f5:	jo     0x1400448fe
   1400448f7:	repnz mov eax,0xaa3a3383
   1400448fd:	(bad)  
   1400448fe:	xchg   DWORD PTR [rax],eax
   140044900:	add    BYTE PTR [rax],al
   140044902:	add    BYTE PTR [rdi],al
   140044904:	(bad)  
   140044905:	inc    DWORD PTR [rdi]
   140044907:	repnz sti 
   140044909:	mov    BYTE PTR [rbx],dh
   14004490b:	xor    ebp,DWORD PTR [rdx+0x872f]
   140044911:	add    BYTE PTR [rax],al
   140044913:	add    BYTE PTR [rdi+0x77],dh
   140044916:	jo     0x14004490a
   140044918:	mov    edi,0x3a3383b8
   14004491d:	(bad)  
   14004491e:	xchg   DWORD PTR [rax],eax
   140044920:	add    BYTE PTR [rax],al
   140044922:	add    BYTE PTR [rax],al
   140044924:	add    BYTE PTR [rax],al
   140044926:	(bad)  
   140044927:	repnz sti 
   140044929:	sti    
   14004492a:	mov    BYTE PTR [rbx],dh
   14004492c:	xor    ebp,DWORD PTR [rdi]
   14004492e:	xchg   DWORD PTR [rax],eax
   140044930:	add    BYTE PTR [rax],al
   140044932:	add    BYTE PTR [rax],al
   140044934:	add    BYTE PTR [rax],al
   140044936:	(bad)  
   140044937:	repnz mov edi,0x3383b8bf
   14004493d:	(bad)  
   14004493e:	xchg   DWORD PTR [rax],eax
   140044940:	add    BYTE PTR [rax],al
   140044942:	add    BYTE PTR [rax],al
   140044944:	add    BYTE PTR [rax],al
   140044946:	(bad)  
   140044947:	repnz mov edi,ebx
   14004494a:	sti    
   14004494b:	mov    BYTE PTR [rbx],dh
   14004494d:	(bad)  
   14004494e:	xchg   DWORD PTR [rax],eax
   140044950:	add    BYTE PTR [rax],al
   140044952:	add    BYTE PTR [rax],al
   140044954:	add    BYTE PTR [rax],al
   140044956:	(bad)  
   140044957:	repnz mov BYTE PTR [rdi+0x2f83b8bf],bh
   14004495e:	xchg   DWORD PTR [rax],eax
   140044960:	add    BYTE PTR [rax],al
   140044962:	add    BYTE PTR [rax],al
   140044964:	add    BYTE PTR [rax],al
   140044966:	(bad)  
   140044967:	repnz mov BYTE PTR [rbx+0x2f88fbfb],cl
   14004496e:	xchg   DWORD PTR [rax],eax
   140044970:	add    BYTE PTR [rax],al
   140044972:	add    BYTE PTR [rax],al
   140044974:	add    BYTE PTR [rax],al
   140044976:	(bad)  
   140044977:	repnz and ah,BYTE PTR [rdx]
   14004497a:	and    ah,BYTE PTR [rdx]
   14004497c:	and    ch,BYTE PTR [rdi]
   14004497e:	xchg   DWORD PTR [rax],eax
   140044980:	add    BYTE PTR [rax],al
   140044982:	add    BYTE PTR [rax],al
   140044984:	add    BYTE PTR [rax],al
   140044986:	(bad)  
   140044987:	(bad)  
   140044988:	(bad)  
   140044989:	(bad)  
   14004498a:	(bad)  
   14004498b:	(bad)  
   14004498c:	(bad)  
   14004498d:	inc    DWORD PTR [rdi+0x0]
   140044993:	add    BYTE PTR [rax],al
   140044995:	add    BYTE PTR [rax],al
   140044997:	ja     0x140044a10
   140044999:	ja     0x140044a12
   14004499b:	ja     0x140044a14
   14004499d:	ja     0x140044a16
   14004499f:	add    bh,bh
   1400449a1:	inc    BYTE PTR [rdi]
   1400449a3:	inc    eax
   1400449a5:	clc    
   1400449a6:	add    edi,edi
   1400449a8:	shl    BYTE PTR [rax+0x0],0xff
   1400449ac:	shl    BYTE PTR [rax],0x0
   1400449af:	jg     0x140044971
   1400449b1:	add    BYTE PTR [rax],al
   1400449b3:	jg     0x140044975
   1400449b5:	add    BYTE PTR [rax],al
   1400449b7:	(bad)  
   1400449b8:	rol    BYTE PTR [rax],0x0
   1400449bb:	(bad)  
   1400449bc:	rol    BYTE PTR [rax],0x60
   1400449bf:	(bad)  
   1400449c0:	rol    BYTE PTR [rax],0x60
   1400449c3:	(bad)  
   1400449c4:	rol    BYTE PTR [rax],0x0
   1400449c7:	(bad)  
   1400449c8:	rol    BYTE PTR [rax],0x0
   1400449cb:	(bad)  
   1400449cc:	rol    BYTE PTR [rax],0x0
   1400449cf:	add    eax,eax
   1400449d1:	add    BYTE PTR [rax],al
   1400449d3:	add    eax,eax
   1400449d5:	add    BYTE PTR [rax],al
   1400449d7:	add    al,al
   1400449d9:	add    BYTE PTR [rax],al
   1400449db:	add    al,al
   1400449dd:	add    BYTE PTR [rax],al
   1400449df:	add    al,al
   1400449e1:	add    BYTE PTR [rax],al
   1400449e3:	add    al,al
   1400449e5:	add    BYTE PTR [rax],al
   1400449e7:	add    BYTE PTR [rax+0x10000],al
   1400449ed:	add    BYTE PTR [rax],al
   1400449ef:	add    eax,edi
   1400449f1:	add    BYTE PTR [rax],al
   1400449f3:	add    esp,edi
   1400449f5:	add    BYTE PTR [rax],al
   1400449f7:	add    esi,edi
   1400449f9:	add    BYTE PTR [rax],al
   1400449fb:	add    edi,edi
   1400449fd:	add    BYTE PTR [rax],al
   1400449ff:	add    edi,edi
   140044a01:	clc    
   140044a02:	add    BYTE PTR [rcx],al
   140044a04:	(bad)  
   140044a05:	clc    
   140044a06:	add    BYTE PTR [rcx],al
   140044a08:	(bad)  
   140044a09:	clc    
   140044a0a:	add    BYTE PTR [rcx],al
   140044a0c:	(bad)  
   140044a0d:	clc    
   140044a0e:	add    BYTE PTR [rcx],al
   140044a10:	(bad)  
   140044a11:	clc    
   140044a12:	add    BYTE PTR [rcx],al
   140044a14:	(bad)  
   140044a15:	clc    
   140044a16:	add    BYTE PTR [rcx],al
   140044a18:	(bad)  
   140044a19:	clc    
   140044a1a:	add    BYTE PTR [rcx],al
   140044a1c:	(bad)  
   140044a1d:	cld    
   140044a1e:	add    BYTE PTR [rbx],al
   140044a20:	sub    BYTE PTR [rax],al
   140044a22:	add    BYTE PTR [rax],al
   140044a24:	and    BYTE PTR [rax],al
   140044a26:	add    BYTE PTR [rax],al
   140044a28:	add    BYTE PTR [rax],al
   140044a2b:	add    BYTE PTR [rcx],al
   140044a2d:	add    BYTE PTR [rax],cl
   140044a2f:	add    BYTE PTR [rax],al
   140044a31:	add    BYTE PTR [rax],al
   140044a33:	add    BYTE PTR [rax+0x4],al
	...
   140044a49:	add    BYTE PTR [rax],al
   140044a4b:	add    BYTE PTR [rax+0x0],al
   140044a51:	add    BYTE PTR [rax],0x0
   140044a54:	add    BYTE PTR [rax+0x0],0x80
   140044a5b:	add    BYTE PTR [rax+0x8000],al
   140044a61:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140044a68:	rcr    ah,0xc0
   140044a6b:	add    BYTE PTR [rsi+0x400f0ca],ah
   140044a71:	add    al,0x4
   140044a73:	add    BYTE PTR [rax],cl
   140044a75:	or     BYTE PTR [rax],cl
   140044a77:	add    BYTE PTR [rsp+rcx*1],cl
   140044a7a:	or     al,0x0
   140044a7c:	adc    DWORD PTR [rcx],edx
   140044a7e:	adc    DWORD PTR [rax],eax
   140044a80:	(bad)  
   140044a81:	(bad)  
   140044a82:	(bad)  
   140044a83:	add    BYTE PTR [rsp+rbx*1],bl
   140044a86:	sbb    al,0x0
   140044a88:	and    ah,BYTE PTR [rdx]
   140044a8a:	and    al,BYTE PTR [rax]
   140044a8c:	sub    DWORD PTR [rcx],ebp
   140044a8e:	sub    DWORD PTR [rax],eax
   140044a90:	push   rbp
   140044a91:	push   rbp
   140044a92:	push   rbp
   140044a93:	add    BYTE PTR [rbp+0x4d],cl
   140044a96:	rex.WRB add BYTE PTR [r10+0x42],r8b
   140044a9a:	rex.X add BYTE PTR [rcx],dil
   140044a9d:	cmp    DWORD PTR [rcx],edi
   140044a9f:	add    bh,bh
   140044aa1:	jl     0x140044a23
   140044aa3:	add    bh,bh
   140044aa5:	push   rax
   140044aa6:	push   rax
   140044aa7:	add    dh,dl
   140044aa9:	add    BYTE PTR [rbx-0x133400],dl
   140044aaf:	add    bh,ch
   140044ab1:	(bad)  
   140044ab2:	mov    BYTE PTR [rax],0xe7
   140044ab5:	out    0xd6,eax
   140044ab7:	add    BYTE PTR [rbp+0x330090a9],ch
   140044abd:	add    BYTE PTR [rax],al
   140044abf:	add    BYTE PTR [rsi+0x0],ah
   140044ac2:	add    BYTE PTR [rax],al
   140044ac4:	cdq    
   140044ac5:	add    BYTE PTR [rax],al
   140044ac7:	add    ah,cl
   140044ac9:	add    BYTE PTR [rax],al
   140044acb:	add    BYTE PTR [rax],al
   140044acd:	xor    eax,DWORD PTR [rax]
   140044acf:	add    BYTE PTR [rbx],dh
   140044ad1:	xor    eax,DWORD PTR [rax]
   140044ad3:	add    BYTE PTR [rsi+0x33],ah
   140044ad6:	add    BYTE PTR [rax],al
   140044ad8:	cdq    
   140044ad9:	xor    eax,DWORD PTR [rax]
   140044adb:	add    ah,cl
   140044add:	xor    eax,DWORD PTR [rax]
   140044adf:	add    bh,bh
   140044ae1:	xor    eax,DWORD PTR [rax]
   140044ae3:	add    BYTE PTR [rax],al
   140044ae5:	data16 add BYTE PTR [rax],al
   140044ae8:	xor    esp,DWORD PTR [rsi+0x0]
   140044aeb:	add    BYTE PTR [rsi+0x66],ah
   140044aee:	add    BYTE PTR [rax],al
   140044af0:	cdq    
   140044af1:	data16 add BYTE PTR [rax],al
   140044af4:	int3   
   140044af5:	data16 add BYTE PTR [rax],al
   140044af8:	jmp    QWORD PTR [rsi+0x0]
   140044afb:	add    BYTE PTR [rax],al
   140044afd:	cdq    
   140044afe:	add    BYTE PTR [rax],al
   140044b00:	xor    ebx,DWORD PTR [rcx-0x669a0000]
   140044b06:	add    BYTE PTR [rax],al
   140044b08:	cdq    
   140044b09:	cdq    
   140044b0a:	add    BYTE PTR [rax],al
   140044b0c:	int3   
   140044b0d:	cdq    
   140044b0e:	add    BYTE PTR [rax],al
   140044b10:	call   FWORD PTR [rcx-0x34000000]
   140044b16:	add    BYTE PTR [rax],al
   140044b18:	xor    ecx,esp
   140044b1a:	add    BYTE PTR [rax],al
   140044b1c:	data16 int3 
   140044b1e:	add    BYTE PTR [rax],al
   140044b20:	cdq    
   140044b21:	int3   
   140044b22:	add    BYTE PTR [rax],al
   140044b24:	int3   
   140044b25:	int3   
   140044b26:	add    BYTE PTR [rax],al
   140044b28:	dec    esp
   140044b2a:	add    BYTE PTR [rax],al
   140044b2c:	inc    WORD PTR [rax]
   140044b2f:	add    BYTE PTR [rcx-0x33ffff01],bl
   140044b35:	inc    DWORD PTR [rax]
   140044b37:	add    BYTE PTR [rax],al
   140044b39:	add    BYTE PTR [rbx],dh
   140044b3b:	add    BYTE PTR [rbx],dh
   140044b3d:	add    BYTE PTR [rbx],dh
   140044b3f:	add    BYTE PTR [rsi+0x0],ah
   140044b42:	xor    eax,DWORD PTR [rax]
   140044b44:	cdq    
   140044b45:	add    BYTE PTR [rbx],dh
   140044b47:	add    ah,cl
   140044b49:	add    BYTE PTR [rbx],dh
   140044b4b:	add    bh,bh
   140044b4d:	add    BYTE PTR [rbx],dh
   140044b4f:	add    BYTE PTR [rax],al
   140044b51:	xor    esi,DWORD PTR [rbx]
   140044b53:	add    BYTE PTR [rbx],dh
   140044b55:	xor    esi,DWORD PTR [rbx]
   140044b57:	add    BYTE PTR [rsi+0x33],ah
   140044b5a:	xor    eax,DWORD PTR [rax]
   140044b5c:	cdq    
   140044b5d:	xor    esi,DWORD PTR [rbx]
   140044b5f:	add    ah,cl
   140044b61:	xor    esi,DWORD PTR [rbx]
   140044b63:	add    bh,bh
   140044b65:	xor    esi,DWORD PTR [rbx]
   140044b67:	add    BYTE PTR [rax],al
   140044b69:	xor    ax,WORD PTR [rax]
   140044b6c:	xor    esp,DWORD PTR [rsi+0x33]
   140044b6f:	add    BYTE PTR [rsi+0x66],ah
   140044b72:	xor    eax,DWORD PTR [rax]
   140044b74:	cdq    
   140044b75:	xor    ax,WORD PTR [rax]
   140044b78:	int3   
   140044b79:	xor    ax,WORD PTR [rax]
   140044b7c:	jmp    QWORD PTR [rsi+0x33]
   140044b7f:	add    BYTE PTR [rax],al
   140044b81:	cdq    
   140044b82:	xor    eax,DWORD PTR [rax]
   140044b84:	xor    ebx,DWORD PTR [rcx-0x6699ffcd]
   140044b8a:	xor    eax,DWORD PTR [rax]
   140044b8c:	cdq    
   140044b8d:	cdq    
   140044b8e:	xor    eax,DWORD PTR [rax]
   140044b90:	int3   
   140044b91:	cdq    
   140044b92:	xor    eax,DWORD PTR [rax]
   140044b94:	call   FWORD PTR [rcx-0x33ffffcd]
   140044b9a:	xor    eax,DWORD PTR [rax]
   140044b9c:	xor    ecx,esp
   140044b9e:	xor    eax,DWORD PTR [rax]
   140044ba0:	data16 int3 
   140044ba2:	xor    eax,DWORD PTR [rax]
   140044ba4:	cdq    
   140044ba5:	int3   
   140044ba6:	xor    eax,DWORD PTR [rax]
   140044ba8:	int3   
   140044ba9:	int3   
   140044baa:	xor    eax,DWORD PTR [rax]
   140044bac:	dec    esp
   140044bae:	xor    eax,DWORD PTR [rax]
   140044bb0:	xor    edi,edi
   140044bb2:	xor    eax,DWORD PTR [rax]
   140044bb4:	push   WORD PTR [rbx]
   140044bb7:	add    BYTE PTR [rcx-0x33ffcc01],bl
   140044bbd:	push   QWORD PTR [rbx]
   140044bbf:	add    bh,bh
   140044bc1:	push   QWORD PTR [rbx]
   140044bc3:	add    BYTE PTR [rax],al
   140044bc5:	add    BYTE PTR [rsi+0x0],ah
   140044bc8:	xor    eax,DWORD PTR [rax]
   140044bca:	data16 add BYTE PTR [rsi+0x0],ah
   140044bce:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   140044bd5:	add    BYTE PTR [rsi+0x0],ah
   140044bd8:	inc    DWORD PTR [rax]
   140044bda:	data16 add BYTE PTR [rax],al
   140044bdd:	xor    esp,DWORD PTR [rsi+0x0]
   140044be0:	xor    esi,DWORD PTR [rbx]
   140044be2:	data16 add BYTE PTR [rsi+0x33],ah
   140044be6:	data16 add BYTE PTR [rcx-0x33ff99cd],bl
   140044bed:	xor    esp,DWORD PTR [rsi+0x0]
   140044bf0:	push   QWORD PTR [rbx]
   140044bf2:	data16 add BYTE PTR [rax],al
   140044bf5:	data16 data16 add BYTE PTR [rbx],dh
   140044bf9:	data16 data16 add BYTE PTR [rsi+0x66],ah
   140044bfe:	data16 add BYTE PTR [rcx-0x33ff999a],bl
   140044c05:	data16 data16 add BYTE PTR [rax],al
   140044c09:	cdq    
   140044c0a:	data16 add BYTE PTR [rbx],dh
   140044c0d:	cdq    
   140044c0e:	data16 add BYTE PTR [rsi-0x67],ah
   140044c12:	data16 add BYTE PTR [rcx-0x33ff9967],bl
   140044c19:	cdq    
   140044c1a:	data16 add bh,bh
   140044c1d:	cdq    
   140044c1e:	data16 add BYTE PTR [rax],al
   140044c21:	int3   
   140044c22:	data16 add BYTE PTR [rbx],dh
   140044c25:	int3   
   140044c26:	data16 add BYTE PTR [rcx-0x33ff9934],bl
   140044c2d:	int3   
   140044c2e:	data16 add bh,bh
   140044c31:	int3   
   140044c32:	data16 add BYTE PTR [rax],al
   140044c35:	jmp    QWORD PTR [rsi+0x0]
   140044c38:	xor    edi,edi
   140044c3a:	data16 add BYTE PTR [rcx-0x33ff9901],bl
   140044c41:	jmp    QWORD PTR [rsi+0x0]
   140044c44:	inc    DWORD PTR [rax]
   140044c46:	int3   
   140044c47:	add    ah,cl
   140044c49:	add    bh,bh
   140044c4b:	add    BYTE PTR [rax],al
   140044c4d:	cdq    
   140044c4e:	cdq    
   140044c4f:	add    BYTE PTR [rcx-0x66ff66cd],bl
   140044c55:	add    BYTE PTR [rcx-0x66ff3400],bl
   140044c5b:	add    BYTE PTR [rax],al
   140044c5d:	add    BYTE PTR [rcx-0x66cccd00],bl
   140044c63:	add    BYTE PTR [rsi+0x0],ah
   140044c66:	cdq    
   140044c67:	add    ah,cl
   140044c69:	xor    ebx,DWORD PTR [rcx-0x66ff0100]
   140044c6f:	add    BYTE PTR [rax],al
   140044c71:	cwd    
   140044c73:	add    BYTE PTR [rbx],dh
   140044c75:	cwd    
   140044c77:	add    BYTE PTR [rsi+0x33],ah
   140044c7a:	cdq    
   140044c7b:	add    BYTE PTR [rcx-0x33ff669a],bl
   140044c81:	cwd    
   140044c83:	add    bh,bh
   140044c85:	xor    ebx,DWORD PTR [rcx-0x6666cd00]
   140044c8b:	add    BYTE PTR [rsi-0x67],ah
   140044c8e:	cdq    
   140044c8f:	add    BYTE PTR [rcx-0x33ff6667],bl
   140044c95:	cdq    
   140044c96:	cdq    
   140044c97:	add    bh,bh
   140044c99:	cdq    
   140044c9a:	cdq    
   140044c9b:	add    BYTE PTR [rax],al
   140044c9d:	int3   
   140044c9e:	cdq    
   140044c9f:	add    BYTE PTR [rbx],dh
   140044ca1:	int3   
   140044ca2:	cdq    
   140044ca3:	add    BYTE PTR [rsi-0x34],ah
   140044ca6:	data16 add BYTE PTR [rcx-0x33ff6634],bl
   140044cad:	int3   
   140044cae:	cdq    
   140044caf:	add    bh,bh
   140044cb1:	int3   
   140044cb2:	cdq    
   140044cb3:	add    BYTE PTR [rax],al
   140044cb5:	call   FWORD PTR [rcx-0x6600cd00]
   140044cbb:	add    BYTE PTR [rsi-0x34],ah
   140044cbe:	cdq    
   140044cbf:	add    BYTE PTR [rcx-0x33ff6601],bl
   140044cc5:	call   FWORD PTR [rcx-0x66000100]
   140044ccb:	add    BYTE PTR [rax],al
   140044ccd:	add    ah,cl
   140044ccf:	add    BYTE PTR [rbx],dh
   140044cd1:	add    BYTE PTR [rcx-0x33ff9a00],bl
   140044cd7:	add    BYTE PTR [rcx-0x33ff3400],bl
   140044cdd:	add    ah,cl
   140044cdf:	add    BYTE PTR [rax],al
   140044ce1:	xor    ebx,DWORD PTR [rcx-0x33cccd00]
   140044ce7:	add    BYTE PTR [rsi+0x33],ah
   140044cea:	int3   
   140044ceb:	add    BYTE PTR [rcx-0x33ff33cd],bl
   140044cf1:	xor    ecx,esp
   140044cf3:	add    bh,bh
   140044cf5:	xor    ecx,esp
   140044cf7:	add    BYTE PTR [rax],al
   140044cf9:	data16 int3 
   140044cfb:	add    BYTE PTR [rbx],dh
   140044cfd:	data16 int3 
   140044cff:	add    BYTE PTR [rsi+0x66],ah
   140044d02:	cdq    
   140044d03:	add    BYTE PTR [rcx-0x33ff339a],bl
   140044d09:	data16 int3 
   140044d0b:	add    bh,bh
   140044d0d:	cwd    
   140044d0f:	add    BYTE PTR [rax],al
   140044d11:	cdq    
   140044d12:	int3   
   140044d13:	add    BYTE PTR [rbx],dh
   140044d15:	cdq    
   140044d16:	int3   
   140044d17:	add    BYTE PTR [rsi-0x67],ah
   140044d1a:	int3   
   140044d1b:	add    BYTE PTR [rcx-0x33ff3367],bl
   140044d21:	cdq    
   140044d22:	int3   
   140044d23:	add    bh,bh
   140044d25:	cdq    
   140044d26:	int3   
   140044d27:	add    BYTE PTR [rax],al
   140044d29:	int3   
   140044d2a:	int3   
   140044d2b:	add    BYTE PTR [rbx],dh
   140044d2d:	int3   
   140044d2e:	int3   
   140044d2f:	add    BYTE PTR [rsi-0x34],ah
   140044d32:	int3   
   140044d33:	add    BYTE PTR [rcx-0x33ff3334],bl
   140044d39:	int3   
   140044d3a:	int3   
   140044d3b:	add    bh,bh
   140044d3d:	int3   
   140044d3e:	int3   
   140044d3f:	add    BYTE PTR [rax],al
   140044d41:	dec    esp
   140044d43:	add    BYTE PTR [rbx],dh
   140044d45:	dec    esp
   140044d47:	add    BYTE PTR [rsi-0x1],ah
   140044d4a:	cdq    
   140044d4b:	add    BYTE PTR [rcx-0x33ff3301],bl
   140044d51:	dec    esp
   140044d53:	add    bh,bh
   140044d55:	dec    esp
   140044d57:	add    BYTE PTR [rbx],dh
   140044d59:	add    ah,cl
   140044d5b:	add    BYTE PTR [rsi+0x0],ah
   140044d5e:	inc    DWORD PTR [rax]
   140044d60:	cdq    
   140044d61:	add    bh,bh
   140044d63:	add    BYTE PTR [rax],al
   140044d65:	xor    ecx,esp
   140044d67:	add    BYTE PTR [rbx],dh
   140044d69:	xor    edi,edi
   140044d6b:	add    BYTE PTR [rsi+0x33],ah
   140044d6e:	inc    DWORD PTR [rax]
   140044d70:	cdq    
   140044d71:	xor    edi,edi
   140044d73:	add    ah,cl
   140044d75:	xor    edi,edi
   140044d77:	add    bh,bh
   140044d79:	xor    edi,edi
   140044d7b:	add    BYTE PTR [rax],al
   140044d7d:	inc    WORD PTR [rax]
   140044d80:	xor    esp,DWORD PTR [rsi-0x1]
   140044d83:	add    BYTE PTR [rsi+0x66],ah
   140044d86:	int3   
   140044d87:	add    BYTE PTR [rcx-0x33ff009a],bl
   140044d8d:	inc    WORD PTR [rax]
   140044d90:	jmp    QWORD PTR [rsi-0x34]
   140044d93:	add    BYTE PTR [rax],al
   140044d95:	cdq    
   140044d96:	inc    DWORD PTR [rax]
   140044d98:	xor    ebx,DWORD PTR [rcx-0x6699ff01]
   140044d9e:	inc    DWORD PTR [rax]
   140044da0:	cdq    
   140044da1:	cdq    
   140044da2:	inc    DWORD PTR [rax]
   140044da4:	int3   
   140044da5:	cdq    
   140044da6:	inc    DWORD PTR [rax]
   140044da8:	call   FWORD PTR [rcx-0x33ffff01]
   140044dae:	inc    DWORD PTR [rax]
   140044db0:	xor    ecx,esp
   140044db2:	inc    DWORD PTR [rax]
   140044db4:	data16 int3 
   140044db6:	inc    DWORD PTR [rax]
   140044db8:	cdq    
   140044db9:	int3   
   140044dba:	inc    DWORD PTR [rax]
   140044dbc:	int3   
   140044dbd:	int3   
   140044dbe:	inc    DWORD PTR [rax]
   140044dc0:	dec    esp
   140044dc2:	inc    DWORD PTR [rax]
   140044dc4:	xor    edi,edi
   140044dc6:	inc    DWORD PTR [rax]
   140044dc8:	dec    sp
   140044dcb:	add    BYTE PTR [rcx-0x33ff0001],bl
   140044dd1:	(bad)  
   140044dd2:	inc    DWORD PTR [rax]
   140044dd4:	jmp    QWORD PTR [rsi+0x66]
   140044dd7:	add    BYTE PTR [rsi-0x1],ah
   140044dda:	data16 add bh,bh
   140044ddd:	jmp    QWORD PTR [rsi+0x0]
   140044de0:	data16 inc WORD PTR [rax]
   140044de4:	jmp    QWORD PTR [rsi-0x1]
   140044de7:	add    BYTE PTR [rsi-0x1],ah
   140044dea:	inc    DWORD PTR [rax]
   140044dec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044ded:	add    BYTE PTR [rcx],ah
   140044def:	add    BYTE PTR [rdi+0x5f],bl
   140044df2:	pop    rdi
   140044df3:	add    BYTE PTR [rdi+0x77],dh
   140044df6:	ja     0x140044df8
   140044df8:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   140044dfe:	xchg   esi,eax
   140044dff:	add    bl,cl
   140044e01:	retf   
   140044e02:	retf   
   140044e03:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   140044e09:	xlat   BYTE PTR ds:[rbx]
   140044e0a:	xlat   BYTE PTR ds:[rbx]
   140044e0b:	add    ch,bl
   140044e0d:	fstp   st(5)
   140044e0f:	add    bl,ah
   140044e11:	jrcxz  0x140044df6
   140044e13:	add    dl,ch
   140044e15:	(bad)  
   140044e16:	(bad)  
   140044e17:	add    cl,dh
   140044e19:	icebp  
   140044e1a:	icebp  
   140044e1b:	add    al,bh
   140044e1d:	clc    
   140044e1e:	clc    
   140044e1f:	add    bh,bh
   140044e21:	sti    
   140044e22:	lock add BYTE PTR [rax-0x7fff5b60],ah
   140044e29:	add    BYTE PTR [rax+0xff00],0x0
   140044e30:	add    bh,bh
   140044e32:	add    BYTE PTR [rax],al
   140044e34:	(bad)  
   140044e35:	inc    DWORD PTR [rax]
   140044e37:	add    BYTE PTR [rax],al
   140044e39:	add    bh,bh
   140044e3b:	add    bh,bh
   140044e3d:	add    bh,bh
   140044e3f:	add    BYTE PTR [rax],al
   140044e41:	(bad)  
   140044e42:	inc    DWORD PTR [rax]
   140044e44:	(bad)  
   140044e45:	(bad)  
   140044e46:	inc    DWORD PTR [rax]
	...
   140044e54:	add    BYTE PTR [rax],al
   140044e56:	add    dl,ch
   140044e58:	(bad)  
   140044e59:	(bad)  
   140044e5a:	rex.XB
   140044e5b:	rex.XB
   140044e5c:	rex.XB add BYTE PTR [r8],al
	...
   140044e73:	add    BYTE PTR [rax],al
   140044e75:	(bad)  
   140044e76:	(bad)  
   140044e77:	mov    ebx,0x58c2e1bb
   140044e7c:	xor    DWORD PTR [rbx+0x43],eax
	...
   140044e87:	add    BYTE PTR [rax],al
   140044e89:	add    ah,ch
   140044e8b:	mov    esp,0xffbcff
   140044e90:	add    BYTE PTR [rax],al
   140044e92:	add    BYTE PTR [rax],al
   140044e94:	(bad)  
   140044e95:	(bad)  
   140044e96:	(bad)  
   140044e97:	mov    ebx,0x58c2e1bb
   140044e9c:	xor    DWORD PTR [rax],esi
   140044e9e:	lahf   
   140044e9f:	rex.XB add BYTE PTR [r8],al
	...
   140044eaa:	in     al,dx
   140044eab:	(bad)  
   140044eac:	mov    esp,0xec00bcff
   140044eb1:	add    BYTE PTR [rax],al
   140044eb3:	(bad)  
   140044eb4:	out    dx,eax
   140044eb5:	(bad)  
   140044eb6:	(bad)  
   140044eb7:	(bad)  
   140044eb8:	mov    ebx,0x303158e1
   140044ebd:	lahf   
   140044ebe:	lahf   
   140044ebf:	lahf   
   140044ec0:	rex.XB add BYTE PTR [r8],al
   140044ec3:	add    BYTE PTR [rax],al
   140044ec5:	add    BYTE PTR [rax],al
   140044ec7:	add    BYTE PTR [rax],al
   140044ec9:	add    ah,ch
   140044ecb:	mov    esp,0xffbcff
   140044ed0:	imul   esp
   140044ed2:	add    bl,ch
   140044ed4:	out    dx,eax
   140044ed5:	out    dx,eax
   140044ed6:	(bad)  
   140044ed7:	(bad)  
   140044ed8:	mov    ebx,0x9f3031e1
   140044edd:	lahf   
   140044ede:	repnz repnz rex.XB add BYTE PTR [r8],al
   140044ee3:	add    BYTE PTR [rax],al
   140044ee5:	add    BYTE PTR [rax],al
   140044ee7:	add    BYTE PTR [rax],al
   140044ee9:	add    ah,ch
   140044eeb:	(bad)  
   140044eec:	mov    esp,0xec00bcff
   140044ef1:	imul   edx
   140044ef3:	out    dx,eax
   140044ef4:	out    dx,eax
   140044ef5:	out    dx,eax
   140044ef6:	out    dx,eax
   140044ef7:	(bad)  
   140044ef8:	mov    ebx,0xf29f30bb
   140044efd:	repnz repnz repnz repnz rex.XB add BYTE PTR [r8],al
   140044f04:	add    BYTE PTR [rax],al
   140044f06:	add    BYTE PTR [rax],al
   140044f08:	add    BYTE PTR [rax],al
   140044f0a:	in     al,dx
   140044f0b:	mov    esp,0xffbcff
   140044f10:	imul   esp
   140044f12:	(bad)  
   140044f13:	mov    esp,0xefefefef
   140044f18:	(bad)  
   140044f19:	add    BYTE PTR [rax],al
   140044f1b:	repnz repnz repnz out dx,eax
   140044f1f:	out    dx,eax
   140044f20:	out    dx,eax
   140044f21:	rex.XB add BYTE PTR [r8],al
   140044f24:	add    BYTE PTR [rax],al
   140044f26:	add    BYTE PTR [rax],al
   140044f28:	add    BYTE PTR [rax],al
   140044f2a:	in     al,dx
   140044f2b:	(bad)  
   140044f2c:	mov    esp,0xec00bcff
   140044f31:	imul   edx
   140044f33:	mov    esp,0xefefbcbc
   140044f38:	add    BYTE PTR [rax],al
   140044f3a:	add    BYTE PTR [rax],al
   140044f3c:	in     al,dx
   140044f3d:	in     al,dx
   140044f3e:	in     al,dx
   140044f3f:	out    dx,eax
   140044f40:	out    dx,eax
   140044f41:	rex.XB add BYTE PTR [r8],al
   140044f44:	add    BYTE PTR [rax],al
   140044f46:	add    BYTE PTR [rax],al
   140044f48:	add    BYTE PTR [rax],al
   140044f4a:	in     al,dx
   140044f4b:	mov    esp,0xffbcff
   140044f50:	imul   esp
   140044f52:	(bad)  
   140044f53:	xchg   edx,eax
   140044f54:	xchg   edx,eax
   140044f55:	xchg   edx,eax
   140044f56:	xchg   edx,eax
   140044f57:	xchg   edx,eax
   140044f58:	add    BYTE PTR [rax],al
   140044f5a:	add    BYTE PTR [rax],al
   140044f5c:	lock lock in al,dx
   140044f5f:	in     al,dx
   140044f60:	in     al,dx
   140044f61:	rex.XB add BYTE PTR [r8],al
   140044f64:	add    BYTE PTR [rax],al
   140044f66:	add    BYTE PTR [rax],al
   140044f68:	add    BYTE PTR [rax],al
   140044f6a:	in     al,dx
   140044f6b:	(bad)  
   140044f6c:	mov    esp,0xec00bcff
   140044f71:	imul   edx
   140044f73:	repnz repnz lahf 
   140044f76:	lahf   
   140044f77:	pop    rax
   140044f78:	pop    rax
   140044f79:	add    BYTE PTR [rax],al
   140044f7b:	out    dx,eax
   140044f7c:	idiv   edi
   140044f7e:	lock out dx,eax
   140044f80:	out    dx,eax
   140044f81:	rex.XB add BYTE PTR [r8],al
   140044f84:	add    BYTE PTR [rax],al
   140044f86:	add    BYTE PTR [rax],al
   140044f88:	add    BYTE PTR [rax],al
   140044f8a:	in     al,dx
   140044f8b:	(bad)  
   140044f8c:	(bad)  
   140044f8d:	(bad)  
   140044f8e:	inc    DWORD PTR [rax]
   140044f90:	imul   esp
   140044f92:	(bad)  
   140044f93:	repnz lahf 
   140044f95:	pop    rax
   140044f96:	pop    rax
   140044f97:	push   rdx
   140044f98:	jae    0x14004500d
   140044f9a:	mov    edx,0xff07f7ef
   140044f9f:	lock lock rex.XB add BYTE PTR [r8],al
   140044fa4:	add    BYTE PTR [rax],al
   140044fa6:	add    BYTE PTR [rax],al
   140044fa8:	add    BYTE PTR [rax],al
   140044faa:	in     al,dx
   140044fab:	(bad)  
   140044fac:	(bad)  
   140044fad:	(bad)  
   140044fae:	inc    DWORD PTR [rax]
   140044fb0:	in     al,dx
   140044fb1:	imul   esp
   140044fb3:	(bad)  
   140044fb4:	pop    rax
   140044fb5:	pop    rax
   140044fb6:	push   rdx
   140044fb7:	jae    0x140045031
   140044fb9:	loope  0x140044f75
   140044fbb:	out    dx,eax
   140044fbc:	out    dx,eax
   140044fbd:	test   DWORD PTR [rdi],0x43ff
   140044fc3:	add    BYTE PTR [rax],al
   140044fc5:	add    BYTE PTR [rax],al
   140044fc7:	add    BYTE PTR [rax],al
   140044fc9:	add    ah,ch
   140044fcb:	(bad)  
   140044fcc:	(bad)  
   140044fcd:	(bad)  
   140044fce:	inc    DWORD PTR [rax]
   140044fd0:	imul   esp
   140044fd2:	imul   edx
   140044fd4:	pop    rax
   140044fd5:	push   rdx
   140044fd6:	push   rdx
   140044fd7:	jae    0x140044fba
   140044fd9:	loope  0x140044f95
   140044fdb:	mov    edx,0x7f7f7ef
   140044fe0:	rex.XB (bad) 
   140044fe2:	(bad)  
   140044fe3:	(bad)  
   140044fe4:	(bad)  
   140044fe5:	(bad)  
   140044fe6:	add    BYTE PTR [rax],al
   140044fe8:	add    BYTE PTR [rax],al
   140044fea:	in     al,dx
   140044feb:	(bad)  
   140044fec:	(bad)  
   140044fed:	(bad)  
   140044fee:	inc    DWORD PTR [rax]
   140044ff0:	div    edi
   140044ff2:	div    edi
   140044ff4:	(bad)  
   140044ff5:	push   rdx
   140044ff6:	jae    0x140045070
   140044ff8:	loope  0x140044fb4
   140044ffa:	mov    edx,0xf7efefba
   140044fff:	rex.XB add BYTE PTR [r8],al
   140045002:	add    BYTE PTR [rax],al
   140045004:	(bad)  
   140045005:	out    dx,eax
   140045006:	in     al,dx
   140045007:	add    BYTE PTR [rax],al
   140045009:	add    ah,ch
   14004500b:	(bad)  
   14004500c:	(bad)  
   14004500d:	(bad)  
   14004500e:	inc    DWORD PTR [rax]
   140045010:	div    edi
   140045012:	div    edi
   140045014:	add    bl,ch
   140045016:	jmp    0x140045090
   140045018:	loope  0x140044fd4
   14004501a:	mov    edx,0x4343efba
   14004501f:	in     al,dx
   140045020:	in     al,dx
   140045021:	in     al,dx
   140045022:	in     al,dx
   140045023:	in     al,dx
   140045024:	(bad)  
   140045025:	(bad)  
   140045026:	in     al,dx
   140045027:	add    BYTE PTR [rax],al
   140045029:	add    ah,ch
   14004502b:	(bad)  
   14004502c:	(bad)  
   14004502d:	(bad)  
   14004502e:	inc    DWORD PTR [rax]
   140045030:	div    edi
   140045032:	div    edi
   140045034:	add    bh,bh
   140045036:	(bad)  
   140045037:	in     eax,dx
   140045038:	in     eax,dx
   140045039:	in     eax,dx
   14004503a:	in     eax,dx
   14004503b:	jmp    0x140045028
   14004503d:	(bad)  
   14004503e:	(bad)  
   14004503f:	(bad)  
   140045040:	(bad)  
   140045041:	(bad)  
   140045042:	(bad)  
   140045043:	(bad)  
   140045044:	(bad)  
   140045045:	(bad)  
   140045046:	in     al,dx
   140045047:	add    BYTE PTR [rax],al
   140045049:	add    ah,ch
   14004504b:	in     al,dx
   14004504c:	in     al,dx
   14004504d:	in     al,dx
   14004504e:	in     al,dx
   14004504f:	add    bh,dh
   140045051:	div    edi
   140045053:	test   DWORD PTR [rax],0xecececec
   140045059:	in     al,dx
   14004505a:	in     al,dx
   14004505b:	in     al,dx
   14004505c:	in     al,dx
   14004505d:	in     al,dx
   14004505e:	in     al,dx
   14004505f:	in     al,dx
   140045060:	in     al,dx
   140045061:	in     al,dx
   140045062:	in     al,dx
   140045063:	in     al,dx
   140045064:	in     al,dx
   140045065:	out    dx,eax
   140045066:	in     al,dx
   140045067:	add    BYTE PTR [rax],al
   140045069:	add    dl,ch
   14004506b:	(bad)  
   14004506c:	(bad)  
   14004506d:	(bad)  
   14004506e:	(bad)  
   14004506f:	add    bh,dh
   140045071:	div    edi
   140045073:	test   DWORD PTR [rax],0x0
	...
   140045085:	add    bh,ch
   140045087:	or     eax,DWORD PTR [rax]
   140045089:	in     al,dx
   14004508a:	(bad)  
   14004508b:	(bad)  
   14004508c:	(bad)  
   14004508d:	(bad)  
   14004508e:	(bad)  
   14004508f:	(bad)  
   140045090:	add    bh,dh
   140045092:	div    edi
   140045094:	add    ah,ch
   140045096:	(bad)  
   140045097:	(bad)  
   140045098:	(bad)  
   140045099:	(bad)  
   14004509a:	(bad)  
   14004509b:	(bad)  
   14004509c:	(bad)  
   14004509d:	(bad)  
   14004509e:	(bad)  
   14004509f:	(bad)  
   1400450a0:	(bad)  
   1400450a1:	(bad)  
   1400450a2:	(bad)  
   1400450a3:	(bad)  
   1400450a4:	(bad)  
   1400450a5:	in     al,dx
   1400450a6:	add    BYTE PTR [rax],al
   1400450a8:	in     al,dx
   1400450a9:	in     al,dx
   1400450aa:	in     al,dx
   1400450ab:	in     al,dx
   1400450ac:	in     al,dx
   1400450ad:	in     al,dx
   1400450ae:	in     al,dx
   1400450af:	(bad)  
   1400450b0:	(bad)  
   1400450b1:	add    bh,dh
   1400450b3:	test   DWORD PTR [rax],0xffffffec
   1400450b9:	(bad)  
   1400450ba:	(bad)  
   1400450bb:	(bad)  
   1400450bc:	(bad)  
   1400450bd:	(bad)  
   1400450be:	(bad)  
   1400450bf:	(bad)  
   1400450c0:	(bad)  
   1400450c1:	(bad)  
   1400450c2:	(bad)  
   1400450c3:	inc    DWORD PTR [rdi]
   1400450c5:	in     al,dx
   1400450c6:	add    BYTE PTR [rax],al
   1400450c8:	add    BYTE PTR [rax],al
   1400450ca:	add    BYTE PTR [rax],al
   1400450cc:	add    ah,ch
   1400450ce:	(bad)  
   1400450cf:	(bad)  
   1400450d0:	(bad)  
   1400450d1:	(bad)  
   1400450d2:	add    bh,dh
   1400450d4:	add    ah,ch
   1400450d6:	inc    DWORD PTR [rcx]
   1400450d8:	add    DWORD PTR [rcx],eax
   1400450da:	add    DWORD PTR [rcx],eax
   1400450dc:	add    DWORD PTR [rcx],eax
   1400450de:	add    DWORD PTR [rcx],eax
   1400450e0:	add    DWORD PTR [rcx],eax
   1400450e2:	add    edi,edi
   1400450e4:	(bad)  
   1400450e5:	in     al,dx
	...
   1400450ee:	in     al,dx
   1400450ef:	(bad)  
   1400450f0:	(bad)  
   1400450f1:	(bad)  
   1400450f2:	(bad)  
   1400450f3:	add    BYTE PTR [rax],al
   1400450f5:	in     al,dx
   1400450f6:	inc    DWORD PTR [rcx]
   1400450f8:	sti    
   1400450f9:	jp     0x140045175
   1400450fb:	xor    DWORD PTR [rcx],esi
   1400450fd:	xor    DWORD PTR [rcx],esi
   1400450ff:	rex.WRB
   140045100:	rex.WRB
   140045101:	add    r15,r15
   140045104:	(bad)  
   140045105:	in     al,dx
	...
   14004510e:	add    ah,ch
   140045110:	(bad)  
   140045111:	(bad)  
   140045112:	(bad)  
   140045113:	inc    DWORD PTR [rax]
   140045115:	in     al,dx
   140045116:	inc    DWORD PTR [rcx]
   140045118:	ret    
   140045119:	pop    rsi
   14004511a:	jp     0x140045196
   14004511c:	xor    DWORD PTR [rcx],esi
   14004511e:	xor    DWORD PTR [rcx],esi
   140045120:	rex.WRB
   140045121:	add    r15,r15
   140045124:	(bad)  
   140045125:	in     al,dx
	...
   14004512e:	add    BYTE PTR [rax],al
   140045130:	in     al,dx
   140045131:	in     al,dx
   140045132:	in     al,dx
   140045133:	in     al,dx
   140045134:	in     al,dx
   140045135:	add    bh,bh
   140045137:	add    DWORD PTR [rsi-0x3d],ebx
   14004513a:	pop    rsi
   14004513b:	jp     0x1400451b7
   14004513d:	xor    DWORD PTR [rcx],esi
   14004513f:	xor    DWORD PTR [rcx],esi
   140045141:	add    r15,r15
   140045144:	(bad)  
   140045145:	in     al,dx
	...
   140045152:	add    BYTE PTR [rax],al
   140045154:	add    ah,ch
   140045156:	inc    DWORD PTR [rcx]
   140045158:	ret    
   140045159:	pop    rsi
   14004515a:	ret    
   14004515b:	pop    rsi
   14004515c:	jp     0x1400451d8
   14004515e:	xor    DWORD PTR [rcx],esi
   140045160:	xor    DWORD PTR [rcx],esi
   140045162:	add    edi,edi
   140045164:	(bad)  
   140045165:	in     al,dx
	...
   140045172:	add    BYTE PTR [rax],al
   140045174:	add    ah,ch
   140045176:	inc    DWORD PTR [rcx]
   140045178:	pop    rsi
   140045179:	ret    
   14004517a:	pop    rsi
   14004517b:	ret    
   14004517c:	pop    rsi
   14004517d:	jp     0x1400451f9
   14004517f:	xor    DWORD PTR [rcx],esi
   140045181:	xor    DWORD PTR [rcx],eax
   140045183:	inc    DWORD PTR [rdi]
   140045185:	in     al,dx
	...
   140045192:	add    BYTE PTR [rax],al
   140045194:	add    ah,ch
   140045196:	inc    DWORD PTR [rcx]
   140045198:	jp     0x1400451f8
   14004519a:	ret    
   14004519b:	pop    rsi
   14004519c:	ret    
   14004519d:	pop    rsi
   14004519e:	jp     0x14004521a
   1400451a0:	xor    DWORD PTR [rcx],esi
   1400451a2:	add    edi,edi
   1400451a4:	(bad)  
   1400451a5:	in     al,dx
	...
   1400451b2:	add    BYTE PTR [rax],al
   1400451b4:	add    ah,ch
   1400451b6:	inc    DWORD PTR [rcx]
   1400451b8:	jp     0x140045234
   1400451ba:	pop    rsi
   1400451bb:	ret    
   1400451bc:	pop    rsi
   1400451bd:	ret    
   1400451be:	pop    rsi
   1400451bf:	jp     0x14004523b
   1400451c1:	xor    DWORD PTR [rcx],eax
   1400451c3:	inc    DWORD PTR [rdi]
   1400451c5:	in     al,dx
	...
   1400451d2:	add    BYTE PTR [rax],al
   1400451d4:	add    ah,ch
   1400451d6:	inc    DWORD PTR [rcx]
   1400451d8:	jp     0x140045254
   1400451da:	jp     0x14004523a
   1400451dc:	ret    
   1400451dd:	pop    rsi
   1400451de:	ret    
   1400451df:	sti    
   1400451e0:	jp     0x14004525c
   1400451e2:	add    edi,edi
   1400451e4:	(bad)  
   1400451e5:	in     al,dx
	...
   1400451f2:	add    BYTE PTR [rax],al
   1400451f4:	add    ah,ch
   1400451f6:	inc    DWORD PTR [rcx]
   1400451f8:	add    DWORD PTR [rcx],eax
   1400451fa:	add    DWORD PTR [rcx],eax
   1400451fc:	add    DWORD PTR [rcx],eax
   1400451fe:	add    DWORD PTR [rcx],eax
   140045200:	add    DWORD PTR [rcx],eax
   140045202:	add    edi,edi
   140045204:	(bad)  
   140045205:	in     al,dx
	...
   140045212:	add    BYTE PTR [rax],al
   140045214:	add    ah,ch
   140045216:	(bad)  
   140045217:	(bad)  
   140045218:	(bad)  
   140045219:	(bad)  
   14004521a:	(bad)  
   14004521b:	(bad)  
   14004521c:	(bad)  
   14004521d:	(bad)  
   14004521e:	(bad)  
   14004521f:	(bad)  
   140045220:	(bad)  
   140045221:	(bad)  
   140045222:	(bad)  
   140045223:	inc    DWORD PTR [rdi]
   140045225:	in     al,dx
	...
   140045236:	jmp    0x140045223
   140045238:	jmp    0x140045225
   14004523a:	jmp    0x140045227
   14004523c:	jmp    0x140045229
   14004523e:	jmp    0x14004522b
   140045240:	jmp    0x14004522d
   140045242:	jmp    0x14004522f
   140045244:	jmp    0x140045231
   140045246:	add    BYTE PTR [rax],al
   140045248:	(bad)  
   140045249:	inc    BYTE PTR [rdi]
   14004524b:	inc    eax
   14004524d:	clc    
   14004524e:	add    edi,edi
   140045250:	shl    BYTE PTR [rax+0x0],0xff
   140045254:	shl    BYTE PTR [rax],0x0
   140045257:	jg     0x140045219
   140045259:	add    BYTE PTR [rax],al
   14004525b:	jg     0x14004521d
   14004525d:	add    BYTE PTR [rax],al
   14004525f:	(bad)  
   140045260:	rol    BYTE PTR [rax],0x0
   140045263:	(bad)  
   140045264:	rol    BYTE PTR [rax],0x60
   140045267:	(bad)  
   140045268:	rol    BYTE PTR [rax],0x60
   14004526b:	(bad)  
   14004526c:	rol    BYTE PTR [rax],0x0
   14004526f:	(bad)  
   140045270:	rol    BYTE PTR [rax],0x0
   140045273:	(bad)  
   140045274:	rol    BYTE PTR [rax],0x0
   140045277:	add    eax,eax
   140045279:	add    BYTE PTR [rax],al
   14004527b:	add    eax,eax
   14004527d:	add    BYTE PTR [rax],al
   14004527f:	add    al,al
   140045281:	add    BYTE PTR [rax],al
   140045283:	add    al,al
   140045285:	add    BYTE PTR [rax],al
   140045287:	add    al,al
   140045289:	add    BYTE PTR [rax],al
   14004528b:	add    al,al
   14004528d:	add    BYTE PTR [rax],al
   14004528f:	add    BYTE PTR [rax+0x10000],al
   140045295:	add    BYTE PTR [rax],al
   140045297:	add    eax,edi
   140045299:	add    BYTE PTR [rax],al
   14004529b:	add    esp,edi
   14004529d:	add    BYTE PTR [rax],al
   14004529f:	add    esi,edi
   1400452a1:	add    BYTE PTR [rax],al
   1400452a3:	add    edi,edi
   1400452a5:	add    BYTE PTR [rax],al
   1400452a7:	add    edi,edi
   1400452a9:	clc    
   1400452aa:	add    BYTE PTR [rcx],al
   1400452ac:	(bad)  
   1400452ad:	clc    
   1400452ae:	add    BYTE PTR [rcx],al
   1400452b0:	(bad)  
   1400452b1:	clc    
   1400452b2:	add    BYTE PTR [rcx],al
   1400452b4:	(bad)  
   1400452b5:	clc    
   1400452b6:	add    BYTE PTR [rcx],al
   1400452b8:	(bad)  
   1400452b9:	clc    
   1400452ba:	add    BYTE PTR [rcx],al
   1400452bc:	(bad)  
   1400452bd:	clc    
   1400452be:	add    BYTE PTR [rcx],al
   1400452c0:	(bad)  
   1400452c1:	clc    
   1400452c2:	add    BYTE PTR [rcx],al
   1400452c4:	(bad)  
   1400452c5:	cld    
   1400452c6:	add    BYTE PTR [rbx],al
   1400452c8:	add    DWORD PTR [rax],eax
   1400452ca:	(bad)  
   1400452cb:	inc    DWORD PTR [rax]
   1400452cd:	add    BYTE PTR [rax],al
   1400452cf:	add    BYTE PTR [rax],al
   1400452d1:	add    BYTE PTR [rax],al
   1400452d3:	add    al,al
   1400452d5:	add    dl,cl
   1400452d7:	add    BYTE PTR [rax],0x0
   1400452da:	add    BYTE PTR [rax],al
   1400452dc:	add    BYTE PTR [rax],al
   1400452de:	scas   al,BYTE PTR es:[rdi]
   1400452df:	add    DWORD PTR [rcx+rax*1],eax
   1400452e2:	add    BYTE PTR [rax],al
   1400452e4:	add    BYTE PTR [rax],al
   1400452e6:	add    BYTE PTR [rcx+0x0],r9b
   1400452ea:	rex.WRB add BYTE PTR [r8],r12b
   1400452ed:	add    BYTE PTR [rax+rax*1+0x69],al
   1400452f1:	add    BYTE PTR [rcx+0x0],ah
   1400452f4:	ins    BYTE PTR es:[rdi],dx
   1400452f5:	add    BYTE PTR [rdi+0x0],ch
   1400452f8:	add    BYTE PTR [eax],al
   1400452fb:	add    BYTE PTR [rax],cl
   1400452fd:	add    BYTE PTR [rax+0x4d000001],dl
   140045303:	add    BYTE PTR [rbx+0x0],dl
   140045306:	and    BYTE PTR [rax],al
   140045308:	push   rbx
   140045309:	add    BYTE PTR [rax+0x0],ch
   14004530c:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140045311:	add    BYTE PTR [rax],ah
   140045313:	add    BYTE PTR [rax+rax*1+0x6c],al
   140045317:	add    BYTE PTR [rdi+0x0],ah
   14004531a:	add    BYTE PTR [rax],al
   14004531c:	add    BYTE PTR [rax],al
   14004531e:	add    DWORD PTR [rax],eax
   140045320:	add    al,BYTE PTR [rax]
   140045322:	adc    BYTE PTR [rax],dl
   140045324:	add    BYTE PTR [rax],al
   140045326:	add    DWORD PTR [rax],eax
   140045328:	or     BYTE PTR [rax],al
   14004532a:	push   0x1000005
   14004532f:	add    BYTE PTR [rax],ah
   140045331:	and    BYTE PTR [rax],al
   140045333:	add    BYTE PTR [rcx],al
   140045335:	add    BYTE PTR [rax],cl
   140045337:	add    BYTE PTR [rax+0x2000008],ch
   14004533d:	add    BYTE PTR [rax+0x41],dl
   140045340:	add    BYTE PTR [rax],al
   140045342:	add    DWORD PTR [rax],eax
   140045344:	add    al,0x0
   140045346:	adc    BYTE PTR [rax],dl
   140045348:	adc    BYTE PTR [rax],al
   14004534a:	add    DWORD PTR [rax],eax
   14004534c:	add    al,0x0
   14004534e:	sub    BYTE PTR [rcx],al
   140045350:	add    BYTE PTR [rax],al
   140045352:	add    eax,DWORD PTR [rax]
   140045354:	adc    BYTE PTR [rax],dl
   140045356:	add    BYTE PTR [rax],al
   140045358:	add    DWORD PTR [rax],eax
   14004535a:	or     BYTE PTR [rax],al
   14004535c:	push   0x4000005
   140045361:	add    BYTE PTR [rax],ah
   140045363:	and    BYTE PTR [rax],dl
   140045365:	add    BYTE PTR [rcx],al
   140045367:	add    BYTE PTR [rax+rax*1],al
   14004536a:	call   0x145045371
   14004536f:	add    BYTE PTR [rax],ah
   140045371:	and    BYTE PTR [rax],al
   140045373:	add    BYTE PTR [rcx],al
   140045375:	add    BYTE PTR [rax],cl
   140045377:	add    BYTE PTR [rax+0x6000008],ch
   14004537d:	add    BYTE PTR [rax+0x41],dl
   140045380:	add    BYTE PTR [rsp+rsi*1],al
   140045383:	add    BYTE PTR [rax],al
   140045385:	add    BYTE PTR [rsi+0x0],dl
   140045388:	push   rbx
   140045389:	add    BYTE PTR [rdi+0x0],bl
   14004538c:	push   rsi
   14004538d:	add    BYTE PTR [rbp+0x0],al
   140045390:	push   rdx
   140045391:	add    BYTE PTR [rbx+0x0],dl
   140045394:	rex.WB add BYTE PTR [r15+0x0],cl
   140045398:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14004539c:	rex.WB add BYTE PTR [r14+0x0],cl
   1400453a0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400453a4:	add    BYTE PTR [rax],al
   1400453a6:	add    BYTE PTR [rax],al
   1400453a8:	mov    ebp,0xfeef04
   1400453ad:	add    BYTE PTR [rcx],al
   1400453af:	add    BYTE PTR [rax],al
   1400453b1:	add    BYTE PTR [rax+rax*1],cl
   1400453b4:	add    BYTE PTR [eax],al
   1400453b7:	add    BYTE PTR [rax],al
   1400453b9:	add    BYTE PTR [rax+rax*1],cl
   1400453bc:	add    BYTE PTR [eax],al
   1400453bf:	add    BYTE PTR [rdi],bh
   1400453c1:	add    BYTE PTR [rax],al
   1400453c3:	add    BYTE PTR [rax],al
   1400453c5:	add    BYTE PTR [rax],al
   1400453c7:	add    BYTE PTR [rax+rax*1],al
   1400453ca:	add    BYTE PTR [rax],al
   1400453cc:	add    DWORD PTR [rax],eax
	...
   1400453da:	add    BYTE PTR [rax],al
   1400453dc:	add    BYTE PTR [rax],r8b
   1400453df:	add    BYTE PTR [rcx],al
   1400453e1:	add    BYTE PTR [rsi+0x0],dl
   1400453e4:	(bad)  
   1400453e5:	add    BYTE PTR [rdx+0x0],dh
   1400453e8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400453ec:	ins    BYTE PTR es:[rdi],dx
   1400453ed:	add    BYTE PTR [rbp+0x0],ah
   1400453f0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400453f4:	data16 add BYTE PTR [rdi+0x0],ch
   1400453f8:	add    BYTE PTR [rax],al
   1400453fa:	add    BYTE PTR [rax],al
   1400453fc:	and    al,0x0
   1400453fe:	add    al,0x0
   140045400:	add    BYTE PTR [rax],al
   140045402:	push   rsp
   140045403:	add    BYTE PTR [rdx+0x0],dh
   140045406:	(bad)  
   140045407:	add    BYTE PTR [rsi+0x0],ch
   14004540a:	jae    0x14004540c
   14004540c:	ins    BYTE PTR es:[rdi],dx
   14004540d:	add    BYTE PTR [rcx+0x0],ah
   140045410:	je     0x140045412
   140045412:	imul   eax,DWORD PTR [rax],0x6e006f
   140045418:	add    BYTE PTR [rax],al
   14004541a:	add    BYTE PTR [rax],al
   14004541c:	or     DWORD PTR [rsp+riz*8],eax
   14004541f:	add    al,0x60
   140045421:	add    eax,DWORD PTR [rax]
   140045423:	add    BYTE PTR [rcx],al
   140045425:	add    BYTE PTR [rbx+0x0],dl
   140045428:	je     0x14004542a
   14004542a:	jb     0x14004542c
   14004542c:	imul   eax,DWORD PTR [rax],0x67006e
   140045432:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140045436:	ins    BYTE PTR es:[rdi],dx
   140045437:	add    BYTE PTR [rbp+0x0],ah
   14004543a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14004543e:	data16 add BYTE PTR [rdi+0x0],ch
   140045442:	add    BYTE PTR [rax],al
   140045444:	cmp    al,0x3
   140045446:	add    BYTE PTR [rax],al
   140045448:	add    DWORD PTR [rax],eax
   14004544a:	xor    BYTE PTR [rax],al
   14004544c:	xor    al,0x0
   14004544e:	xor    BYTE PTR [rax],al
   140045450:	cmp    DWORD PTR [rax],eax
   140045452:	xor    BYTE PTR [rax],al
   140045454:	xor    al,0x0
   140045456:	add    BYTE PTR [r8+rax*1],r14b
   14004545a:	add    BYTE PTR [rax],al
   14004545c:	rex.WRX add BYTE PTR [rbx],r11b
   14004545f:	add    BYTE PTR [rcx],al
   140045461:	add    BYTE PTR [rdx+0x0],al
   140045464:	jne    0x140045466
   140045466:	imul   eax,DWORD PTR [rax],0x74006c
   14004546c:	and    BYTE PTR [rax],al
   14004546e:	outs   dx,DWORD PTR ds:[rsi]
   14004546f:	add    BYTE PTR [rsi+0x0],ch
   140045472:	add    BYTE PTR [rax],al
   140045474:	push   rsp
   140045475:	add    BYTE PTR [rax+0x0],ch
   140045478:	jne    0x14004547a
   14004547a:	and    BYTE PTR [rax],al
   14004547c:	xor    BYTE PTR [rax],al
   14004547e:	xor    eax,DWORD PTR [rax]
   140045480:	(bad)  
   140045481:	add    BYTE PTR [rax],dh
   140045483:	add    BYTE PTR [rsi],dh
   140045485:	add    BYTE PTR [rdi],ch
   140045487:	add    BYTE PTR [rdx],dh
   140045489:	add    BYTE PTR [rax],dh
   14004548b:	add    BYTE PTR [rcx],dh
   14004548d:	add    BYTE PTR [rax+rax*1],dh
   140045490:	and    BYTE PTR [rax],al
   140045492:	xor    DWORD PTR [rax],eax
   140045494:	xor    DWORD PTR [rax],eax
   140045496:	cmp    al,BYTE PTR [rax]
   140045498:	xor    al,0x0
   14004549a:	xor    BYTE PTR [rax],al
   14004549c:	cmp    al,BYTE PTR [rax]
   14004549e:	xor    al,0x0
   1400454a0:	xor    DWORD PTR [rax],eax
   1400454a2:	add    BYTE PTR cs:[rax],bh
   1400454a5:	add    BYTE PTR [rdi],dh
   1400454a7:	add    BYTE PTR [rax],al
   1400454a9:	add    BYTE PTR [rax],al
   1400454ab:	add    BYTE PTR [rax],ch
   1400454ad:	add    BYTE PTR [rax],cl
   1400454af:	add    BYTE PTR [rcx],al
   1400454b1:	add    BYTE PTR [rdx+0x0],al
   1400454b4:	jne    0x1400454b6
   1400454b6:	imul   eax,DWORD PTR [rax],0x74006c
   1400454bc:	and    BYTE PTR [rax],al
   1400454be:	(bad)  
   1400454bf:	add    BYTE PTR [rbx+0x0],dh
   1400454c2:	add    BYTE PTR [rax],al
   1400454c4:	push   rbp
   1400454c5:	add    BYTE PTR [rsi+0x0],cl
   1400454c8:	rex.WB add BYTE PTR [r11+0x0],al
   1400454cc:	rex.WRXB add BYTE PTR [r8+r8*1+0x45],r8b
   1400454d1:	add    BYTE PTR [rax],al
   1400454d3:	add    BYTE PTR [rax+rax*1+0x12],al
   1400454d7:	add    BYTE PTR [rcx],al
   1400454d9:	add    BYTE PTR [rbx+0x0],al
   1400454dc:	outs   dx,DWORD PTR ds:[rsi]
   1400454dd:	add    BYTE PTR [rbp+0x0],ch
   1400454e0:	jo     0x1400454e2
   1400454e2:	(bad)  
   1400454e3:	add    BYTE PTR [rsi+0x0],ch
   1400454e6:	jns    0x1400454e8
   1400454e8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400454ec:	ins    DWORD PTR es:[rdi],dx
   1400454ed:	add    BYTE PTR [rbp+0x0],ah
   1400454f0:	add    BYTE PTR [rax],al
   1400454f2:	add    BYTE PTR [rax],al
   1400454f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400454f8:	jb     0x1400454fa
   1400454fa:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   1400454ff:	add    BYTE PTR [rbx+0x0],al
   140045502:	outs   dx,DWORD PTR ds:[rsi]
   140045503:	add    BYTE PTR [rdx+0x0],dh
   140045506:	jo     0x140045508
   140045508:	outs   dx,DWORD PTR ds:[rsi]
   140045509:	add    BYTE PTR [rdx+0x0],dh
   14004550c:	(bad)  
   14004550d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140045511:	add    BYTE PTR [rdi+0x0],ch
   140045514:	outs   dx,BYTE PTR ds:[rsi]
   140045515:	add    BYTE PTR [rax],al
   140045517:	add    BYTE PTR [rax],bh
   140045519:	add    BYTE PTR [rax],cl
   14004551b:	add    BYTE PTR [rcx],al
   14004551d:	add    BYTE PTR [rsi+0x0],al
   140045520:	imul   eax,DWORD PTR [rax],0x65006c
   140045526:	add    BYTE PTR [rbp+0x0],r12b
   14004552a:	jae    0x14004552c
   14004552c:	movsxd eax,DWORD PTR [rax]
   14004552e:	jb     0x140045530
   140045530:	imul   eax,DWORD PTR [rax],0x740070
   140045536:	imul   eax,DWORD PTR [rax],0x6e006f
   14004553c:	add    BYTE PTR [rax],al
   14004553e:	add    BYTE PTR [rax],al
   140045540:	add    BYTE PTR [rcx+0x0],r9b
   140045544:	rex.WRB add BYTE PTR [r8],r12b
   140045547:	add    BYTE PTR [rax+0x0],bh
   14004554a:	add    BYTE PTR ss:[rax+rax*1],dh
   14004554e:	add    BYTE PTR [rax],al
   140045550:	add    BYTE PTR ss:[rbx],cl
   140045553:	add    BYTE PTR [rcx],al
   140045555:	add    BYTE PTR [rsi+0x0],al
   140045558:	imul   eax,DWORD PTR [rax],0x65006c
   14004555e:	push   rsi
   14004555f:	add    BYTE PTR [rbp+0x0],ah
   140045562:	jb     0x140045564
   140045564:	jae    0x140045566
   140045566:	imul   eax,DWORD PTR [rax],0x6e006f
   14004556c:	add    BYTE PTR [rax],al
   14004556e:	add    BYTE PTR [rax],al
   140045570:	xor    DWORD PTR [rax],eax
   140045572:	xor    al,BYTE PTR [rax]
   140045574:	add    BYTE PTR cs:[rax],dh
   140045577:	add    BYTE PTR [rsi],ch
   140045579:	add    BYTE PTR [rax],dh
   14004557b:	add    BYTE PTR [rsi],ch
   14004557d:	add    BYTE PTR [rcx],dh
   14004557f:	add    BYTE PTR [rax],dh
   140045581:	add    BYTE PTR [rbx],dh
   140045583:	add    BYTE PTR [rax],al
   140045585:	add    BYTE PTR [rax],al
   140045587:	add    BYTE PTR [rax],ch
   140045589:	add    BYTE PTR [rax+rax*1],al
   14004558c:	add    DWORD PTR [rax],eax
   14004558e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140045592:	je     0x140045594
   140045594:	add    BYTE PTR gs:[rdx+0x0],dh
   140045598:	outs   dx,BYTE PTR ds:[rsi]
   140045599:	add    BYTE PTR [rcx+0x0],ah
   14004559c:	ins    BYTE PTR es:[rdi],dx
   14004559d:	add    BYTE PTR [rsi+0x0],cl
   1400455a0:	(bad)  
   1400455a1:	add    BYTE PTR [rbp+0x0],ch
   1400455a4:	add    BYTE PTR gs:[rax],al
   1400455a7:	add    BYTE PTR [rax+rax*1+0x49],al
   1400455ab:	add    BYTE PTR [rbp+0x0],cl
   1400455ae:	add    BYTE PTR [rax],al
   1400455b0:	ins    BYTE PTR es:[rdi],dx
   1400455b1:	add    BYTE PTR [rax+rax*1],ah
   1400455b4:	add    DWORD PTR [rax],eax
   1400455b6:	rex.WR add BYTE PTR [rbp+0x0],r12b
   1400455ba:	add    BYTE PTR [ecx+0x0],ah
   1400455be:	ins    BYTE PTR es:[rdi],dx
   1400455bf:	add    BYTE PTR [rbx+0x0],al
   1400455c2:	outs   dx,DWORD PTR ds:[rsi]
   1400455c3:	add    BYTE PTR [rax+0x0],dh
   1400455c6:	jns    0x1400455c8
   1400455c8:	jb     0x1400455ca
   1400455ca:	imul   eax,DWORD PTR [rax],0x680067
   1400455d0:	je     0x1400455d2
   1400455d2:	add    BYTE PTR [rax],al
   1400455d4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400455d8:	jo     0x1400455da
   1400455da:	jns    0x1400455dc
   1400455dc:	jb     0x1400455de
   1400455de:	imul   eax,DWORD PTR [rax],0x680067
   1400455e4:	je     0x1400455e6
   1400455e6:	sub    BYTE PTR [rax],al
   1400455e8:	movsxd eax,DWORD PTR [rax]
   1400455ea:	sub    DWORD PTR [rax],eax
   1400455ec:	and    BYTE PTR [rax],al
   1400455ee:	xor    al,BYTE PTR [rax]
   1400455f0:	xor    BYTE PTR [rax],al
   1400455f2:	xor    DWORD PTR [rax],eax
   1400455f4:	xor    eax,DWORD PTR [rax]
   1400455f6:	and    BYTE PTR [rax],al
   1400455f8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400455fc:	jb     0x1400455fe
   1400455fe:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140045603:	add    BYTE PTR [rbx+0x0],al
   140045606:	outs   dx,DWORD PTR ds:[rsi]
   140045607:	add    BYTE PTR [rdx+0x0],dh
   14004560a:	jo     0x14004560c
   14004560c:	outs   dx,DWORD PTR ds:[rsi]
   14004560d:	add    BYTE PTR [rdx+0x0],dh
   140045610:	(bad)  
   140045611:	add    BYTE PTR [rax+rax*1+0x69],dh
   140045615:	add    BYTE PTR [rdi+0x0],ch
   140045618:	outs   dx,BYTE PTR ds:[rsi]
   140045619:	add    BYTE PTR [rax],al
   14004561b:	add    BYTE PTR [rax+0x0],dh
   14004561e:	and    al,0x0
   140045620:	add    DWORD PTR [rax],eax
   140045622:	rex.WR add BYTE PTR [rbp+0x0],r12b
   140045626:	add    BYTE PTR [ecx+0x0],ah
   14004562a:	ins    BYTE PTR es:[rdi],dx
   14004562b:	add    BYTE PTR [rax+rax*1+0x72],dl
   14004562f:	add    BYTE PTR [rcx+0x0],ah
   140045632:	add    BYTE PTR fs:[rbp+0x0],ah
   140045636:	ins    DWORD PTR es:[rdi],dx
   140045637:	add    BYTE PTR [rcx+0x0],ah
   14004563a:	jb     0x14004563c
   14004563c:	imul   eax,DWORD PTR [rax],0x73
   14004563f:	add    BYTE PTR [rax],al
   140045641:	add    BYTE PTR [rax],al
   140045643:	add    BYTE PTR [rbx+0x0],al
   140045646:	outs   dx,DWORD PTR ds:[rsi]
   140045647:	add    BYTE PTR [rax+0x0],dh
   14004564a:	jns    0x14004564c
   14004564c:	jb     0x14004564e
   14004564e:	imul   eax,DWORD PTR [rax],0x680067
   140045654:	je     0x140045656
   140045656:	sub    BYTE PTR [rax],al
   140045658:	movsxd eax,DWORD PTR [rax]
   14004565a:	sub    DWORD PTR [rax],eax
   14004565c:	and    BYTE PTR [rax],al
   14004565e:	xor    al,BYTE PTR [rax]
   140045660:	xor    BYTE PTR [rax],al
   140045662:	xor    DWORD PTR [rax],eax
   140045664:	xor    eax,DWORD PTR [rax]
   140045666:	and    BYTE PTR [rax],al
   140045668:	rex.XB add BYTE PTR [r15+0x0],bpl
   14004566c:	jb     0x14004566e
   14004566e:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140045673:	add    BYTE PTR [rbx+0x0],al
   140045676:	outs   dx,DWORD PTR ds:[rsi]
   140045677:	add    BYTE PTR [rdx+0x0],dh
   14004567a:	jo     0x14004567c
   14004567c:	outs   dx,DWORD PTR ds:[rsi]
   14004567d:	add    BYTE PTR [rdx+0x0],dh
   140045680:	(bad)  
   140045681:	add    BYTE PTR [rax+rax*1+0x69],dh
   140045685:	add    BYTE PTR [rdi+0x0],ch
   140045688:	outs   dx,BYTE PTR ds:[rsi]
   140045689:	add    BYTE PTR [rax],al
   14004568b:	add    BYTE PTR [rax],bh
   14004568d:	add    BYTE PTR [rax],cl
   14004568f:	add    BYTE PTR [rcx],al
   140045691:	add    BYTE PTR [rdi+0x0],cl
   140045694:	jb     0x140045696
   140045696:	imul   eax,DWORD PTR [rax],0x690067
   14004569c:	outs   dx,BYTE PTR ds:[rsi]
   14004569d:	add    BYTE PTR [rcx+0x0],ah
   1400456a0:	ins    BYTE PTR es:[rdi],dx
   1400456a1:	add    BYTE PTR [rsi+0x0],al
   1400456a4:	imul   eax,DWORD PTR [rax],0x65006c
   1400456aa:	outs   dx,BYTE PTR ds:[rsi]
   1400456ab:	add    BYTE PTR [rcx+0x0],ah
   1400456ae:	ins    DWORD PTR es:[rdi],dx
   1400456af:	add    BYTE PTR [rbp+0x0],ah
   1400456b2:	add    BYTE PTR [rax],al
   1400456b4:	add    BYTE PTR [rcx+0x0],r9b
   1400456b8:	rex.WRB add BYTE PTR [r14],r13b
   1400456bb:	add    BYTE PTR [rbp+0x0],ah
   1400456be:	js     0x1400456c0
   1400456c0:	add    BYTE PTR gs:[rax],al
   1400456c3:	add    BYTE PTR [rsi+0x0],cl
   1400456c6:	(bad)  
   1400456c7:	add    BYTE PTR [rcx],al
   1400456c9:	add    BYTE PTR [rax+0x0],dl
   1400456cc:	jb     0x1400456ce
   1400456ce:	outs   dx,DWORD PTR ds:[rsi]
   1400456cf:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400456d3:	add    BYTE PTR [rbx+0x0],ah
   1400456d6:	je     0x1400456d8
   1400456d8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400456dc:	ins    DWORD PTR es:[rdi],dx
   1400456dd:	add    BYTE PTR [rbp+0x0],ah
   1400456e0:	add    BYTE PTR [rax],al
   1400456e2:	add    BYTE PTR [rax],al
   1400456e4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400456e8:	jb     0x1400456ea
   1400456ea:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   1400456ef:	add    BYTE PTR [rbx+0x0],al
   1400456f2:	outs   dx,DWORD PTR ds:[rsi]
   1400456f3:	add    BYTE PTR [rbp+0x0],ch
   1400456f6:	ins    DWORD PTR es:[rdi],dx
   1400456f7:	add    BYTE PTR [rdi+0x0],ch
   1400456fa:	outs   dx,BYTE PTR ds:[rsi]
   1400456fb:	add    BYTE PTR [rax],ah
   1400456fd:	add    BYTE PTR [rsi+0x0],al
   140045700:	jb     0x140045702
   140045702:	(bad)  
   140045703:	add    BYTE PTR [rbp+0x0],ch
   140045706:	add    BYTE PTR gs:[rdi+0x0],dh
   14004570a:	outs   dx,DWORD PTR ds:[rsi]
   14004570b:	add    BYTE PTR [rdx+0x0],dh
   14004570e:	imul   eax,DWORD PTR [rax],0x0
   140045711:	add    BYTE PTR [rax],al
   140045713:	add    BYTE PTR [rdx],bh
   140045715:	add    BYTE PTR [rbx],cl
   140045717:	add    BYTE PTR [rcx],al
   140045719:	add    BYTE PTR [rax+0x0],dl
   14004571c:	jb     0x14004571e
   14004571e:	outs   dx,DWORD PTR ds:[rsi]
   14004571f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140045723:	add    BYTE PTR [rbx+0x0],ah
   140045726:	je     0x140045728
   140045728:	push   rsi
   140045729:	add    BYTE PTR [rbp+0x0],ah
   14004572c:	jb     0x14004572e
   14004572e:	jae    0x140045730
   140045730:	imul   eax,DWORD PTR [rax],0x6e006f
   140045736:	add    BYTE PTR [rax],al
   140045738:	xor    DWORD PTR [rax],eax
   14004573a:	xor    al,BYTE PTR [rax]
   14004573c:	add    BYTE PTR cs:[rax],dh
   14004573f:	add    BYTE PTR [rsi],ch
   140045741:	add    BYTE PTR [rax],dh
   140045743:	add    BYTE PTR [rsi],ch
   140045745:	add    BYTE PTR [rcx],dh
   140045747:	add    BYTE PTR [rax],dh
   140045749:	add    BYTE PTR [rbx],dh
   14004574b:	add    BYTE PTR [rax],al
   14004574d:	add    BYTE PTR [rax],al
   14004574f:	add    BYTE PTR [rax],dh
   140045751:	add    BYTE PTR [rdx],al
   140045753:	add    BYTE PTR [rcx],al
   140045755:	add    BYTE PTR [rax+rax*1+0x61],cl
   140045759:	add    BYTE PTR [rsi+0x0],ch
   14004575c:	add    BYTE PTR [ebp+0x0],dh
   140045760:	(bad)  
   140045761:	add    BYTE PTR [rdi+0x0],ah
   140045764:	add    BYTE PTR gs:[rax],ah
   140045767:	add    BYTE PTR [rdx+0x0],al
   14004576a:	jne    0x14004576c
   14004576c:	imul   eax,DWORD PTR [rax],0x64006c
   140045772:	and    BYTE PTR [rax],al
   140045774:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140045779:	add    BYTE PTR [rax],al
   14004577b:	add    BYTE PTR [rax],dh
   14004577d:	add    BYTE PTR [rax],al
   14004577f:	add    BYTE PTR [rcx+riz*2],bh
   140045782:	jae    0x1400457f7
   140045784:	gs ins DWORD PTR es:[rdi],dx
   140045786:	(bad)  
   140045787:	ins    BYTE PTR es:[rdi],dx
   140045788:	jns    0x1400457aa
   14004578a:	js     0x1400457f9
   14004578c:	ins    BYTE PTR es:[rdi],dx
   14004578d:	outs   dx,BYTE PTR ds:[rsi]
   14004578e:	jae    0x1400457cd
   140045790:	and    dh,BYTE PTR [rbp+0x72]
   140045793:	outs   dx,BYTE PTR ds:[rsi]
   140045794:	cmp    dh,BYTE PTR [rbx+0x63]
   140045797:	push   0x73616d65
   14004579c:	sub    eax,0x7263696d
   1400457a1:	outs   dx,DWORD PTR ds:[rsi]
   1400457a2:	jae    0x140045813
   1400457a4:	data16 je 0x1400457d4
   1400457a7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400457aa:	cmp    ah,BYTE PTR [rcx+0x73]
   1400457ad:	ins    DWORD PTR es:[rdi],dx
   1400457ae:	cs jbe 0x1400457e2
   1400457b1:	and    ah,BYTE PTR [rax]
   1400457b3:	ins    DWORD PTR es:[rdi],dx
   1400457b4:	(bad)  
   1400457b5:	outs   dx,BYTE PTR ds:[rsi]
   1400457b6:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400457bd:	jb     0x140045832
   1400457bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400457c6:	xor    BYTE PTR [rdx],ah
   1400457c8:	and    BYTE PTR [rax+0x6d],bh
   1400457cb:	ins    BYTE PTR es:[rdi],dx
   1400457cc:	outs   dx,BYTE PTR ds:[rsi]
   1400457cd:	jae    0x140045809
   1400457cf:	(bad)  
   1400457d0:	jae    0x14004583f
   1400457d2:	jbe    0x140045806
   1400457d4:	cmp    eax,0x6e727522
   1400457d9:	cmp    dh,BYTE PTR [rbx+0x63]
   1400457dc:	push   0x73616d65
   1400457e1:	sub    eax,0x7263696d
   1400457e6:	outs   dx,DWORD PTR ds:[rsi]
   1400457e7:	jae    0x140045858
   1400457e9:	data16 je 0x140045819
   1400457ec:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400457ef:	cmp    ah,BYTE PTR [rcx+0x73]
   1400457f2:	ins    DWORD PTR es:[rdi],dx
   1400457f3:	cs jbe 0x140045828
   1400457f6:	and    bh,BYTE PTR [rsi]
   1400457f8:	cmp    al,0x61
   1400457fa:	jae    0x14004586f
   1400457fc:	gs ins DWORD PTR es:[rdi],dx
   1400457fe:	(bad)  
   1400457ff:	ins    BYTE PTR es:[rdi],dx
   140045800:	jns    0x14004584b
   140045802:	fs outs dx,BYTE PTR gs:[rsi]
   140045805:	je     0x140045870
   140045807:	je     0x140045882
   140045809:	and    BYTE PTR [rsi+0x61],ch
   14004580c:	ins    DWORD PTR es:[rdi],dx
   14004580d:	gs cmp eax,0x4d494422
   140045813:	and    ah,BYTE PTR [rax]
   140045815:	jbe    0x14004587c
   140045817:	jb     0x14004588c
   140045819:	imul   ebp,DWORD PTR [rdi+0x6e],0x3231223d
   140045820:	xor    BYTE PTR cs:[rsi],ch
   140045823:	xor    BYTE PTR [rsi],ch
   140045825:	xor    DWORD PTR [rax],esi
   140045827:	xor    esp,DWORD PTR [rdx]
   140045829:	and    BYTE PTR [rax+0x72],dh
   14004582c:	outs   dx,DWORD PTR ds:[rsi]
   14004582d:	movsxd esp,DWORD PTR [rbp+0x73]
   140045830:	jae    0x1400458a1
   140045832:	jb     0x140045875
   140045834:	jb     0x140045899
   140045836:	push   0x63657469
   14004583b:	je     0x1400458b2
   14004583d:	jb     0x1400458a4
   14004583f:	cmp    eax,0x646d6122
   140045844:	ss xor al,0x22
   140045847:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14004584b:	gs cmp eax,0x6e697722
   140045851:	xor    esi,DWORD PTR [rdx]
   140045853:	and    bh,BYTE PTR [rsi]
   140045855:	cmp    al,0x2f
   140045857:	(bad)  
   140045858:	jae    0x1400458cd
   14004585a:	gs ins DWORD PTR es:[rdi],dx
   14004585c:	(bad)  
   14004585d:	ins    BYTE PTR es:[rdi],dx
   14004585e:	jns    0x1400458a9
   140045860:	fs outs dx,BYTE PTR gs:[rsi]
   140045863:	je     0x1400458ce
   140045865:	je     0x1400458e0
   140045867:	ds cmp al,0x64
   14004586a:	gs jae 0x1400458d0
   14004586d:	jb     0x1400458d8
   14004586f:	jo     0x1400458e5
   140045871:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d736120
   140045878:	jbe    0x1400458ac
   14004587a:	cmp    dh,BYTE PTR [rax+0x75]
   14004587d:	(bad)  
   14004587e:	ins    BYTE PTR es:[rdi],dx
   14004587f:	imul   esi,DWORD PTR [rbx+0x68],0x223d7265
   140045886:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140045888:	jb     0x1400458ef
   14004588a:	ins    BYTE PTR es:[rdi],dx
   14004588b:	and    BYTE PTR [rbx+0x6f],al
   14004588e:	jb     0x140045900
   140045890:	outs   dx,DWORD PTR ds:[rsi]
   140045891:	jb     0x1400458f4
   140045893:	je     0x1400458fe
   140045895:	outs   dx,DWORD PTR ds:[rsi]
   140045896:	outs   dx,BYTE PTR ds:[rsi]
   140045897:	and    ah,BYTE PTR [rax]
   140045899:	(bad)  
   14004589a:	jae    0x140045909
   14004589c:	jbe    0x1400458d0
   14004589e:	cmp    dh,BYTE PTR [rax+0x72]
   1400458a1:	outs   dx,DWORD PTR ds:[rsi]
   1400458a2:	fs jne 0x140045908
   1400458a5:	je     0x1400458e4
   1400458a7:	and    cl,BYTE PTR [rcx+0x50]
   1400458aa:	rex.WRB and BYTE PTR [r8+0x43],r10b
   1400458ae:	push   rbp
   1400458af:	and    BYTE PTR [rcx],dh
   1400458b1:	xor    ch,BYTE PTR [rsi]
   1400458b3:	xor    BYTE PTR [rdx],ah
   1400458b5:	ds cmp al,0x2f
   1400458b8:	fs gs jae 0x14004591f
   1400458bc:	jb     0x140045927
   1400458be:	jo     0x140045934
   1400458c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x65643c3e
   1400458c7:	jo     0x14004592e
   1400458c9:	outs   dx,BYTE PTR ds:[rsi]
   1400458ca:	fs outs dx,BYTE PTR gs:[rsi]
   1400458cd:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400458d0:	cmp    al,0x64
   1400458d2:	gs jo  0x14004593a
   1400458d5:	outs   dx,BYTE PTR ds:[rsi]
   1400458d6:	fs outs dx,BYTE PTR gs:[rsi]
   1400458d9:	je     0x14004591c
   1400458db:	jae    0x140045950
   1400458dd:	gs ins DWORD PTR es:[rdi],dx
   1400458df:	(bad)  
   1400458e0:	ins    BYTE PTR es:[rdi],dx
   1400458e1:	jns    0x140045921
   1400458e3:	cmp    al,0x61
   1400458e5:	jae    0x14004595a
   1400458e7:	gs ins DWORD PTR es:[rdi],dx
   1400458e9:	(bad)  
   1400458ea:	ins    BYTE PTR es:[rdi],dx
   1400458eb:	jns    0x140045936
   1400458ed:	fs outs dx,BYTE PTR gs:[rsi]
   1400458f0:	je     0x14004595b
   1400458f2:	je     0x14004596d
   1400458f4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400458f8:	gs cmp eax,0x6e697722
   1400458fe:	xor    esi,DWORD PTR [rdx]
   140045900:	and    ah,BYTE PTR [rax]
   140045902:	outs   dx,BYTE PTR ds:[rsi]
   140045903:	(bad)  
   140045904:	ins    DWORD PTR es:[rdi],dx
   140045905:	gs cmp eax,0x63694d22
   14004590b:	jb     0x14004597c
   14004590d:	jae    0x14004597e
   14004590f:	data16 je 0x140045940
   140045912:	push   rdi
   140045913:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14004591a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004591c:	ins    DWORD PTR es:[rdi],dx
   14004591d:	ins    DWORD PTR es:[rdi],dx
   14004591e:	outs   dx,DWORD PTR ds:[rsi]
   14004591f:	outs   dx,BYTE PTR ds:[rsi]
   140045920:	sub    eax,0x746e6f43
   140045925:	jb     0x140045996
   140045927:	ins    BYTE PTR es:[rdi],dx
   140045928:	jae    0x14004594c
   14004592a:	and    BYTE PTR [rsi+0x65],dh
   14004592d:	jb     0x1400459a2
   14004592f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140045936:	xor    BYTE PTR [rsi],ch
   140045938:	xor    BYTE PTR [rsi],ch
   14004593a:	xor    BYTE PTR [rdx],ah
   14004593c:	and    BYTE PTR [rax+0x72],dh
   14004593f:	outs   dx,DWORD PTR ds:[rsi]
   140045940:	movsxd esp,DWORD PTR [rbp+0x73]
   140045943:	jae    0x1400459b4
   140045945:	jb     0x140045988
   140045947:	jb     0x1400459ac
   140045949:	push   0x63657469
   14004594e:	je     0x1400459c5
   140045950:	jb     0x1400459b7
   140045952:	cmp    eax,0x646d6122
   140045957:	ss xor al,0x22
   14004595a:	and    BYTE PTR [rax+0x75],dh
   14004595d:	(bad)  
   14004595e:	ins    BYTE PTR es:[rdi],dx
   14004595f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140045966:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14004596a:	and    dh,BYTE PTR [rsi]
   14004596c:	xor    eax,0x36623539
   140045971:	xor    al,0x31
   140045973:	xor    al,0x34
   140045975:	movsxd esp,DWORD PTR [rbx+0x66]
   140045978:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14004597c:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140045980:	addr32 jne 0x1400459e4
   140045983:	addr32 gs cmp eax,0x3e222a22
   14004598a:	cmp    al,0x2f
   14004598c:	(bad)  
   14004598d:	jae    0x140045a02
   14004598f:	gs ins DWORD PTR es:[rdi],dx
   140045991:	(bad)  
   140045992:	ins    BYTE PTR es:[rdi],dx
   140045993:	jns    0x1400459de
   140045995:	fs outs dx,BYTE PTR gs:[rsi]
   140045998:	je     0x140045a03
   14004599a:	je     0x140045a15
   14004599c:	ds cmp al,0x2f
   14004599f:	fs gs jo 0x140045a08
   1400459a3:	outs   dx,BYTE PTR ds:[rsi]
   1400459a4:	fs outs dx,BYTE PTR gs:[rsi]
   1400459a7:	je     0x1400459ea
   1400459a9:	jae    0x140045a1e
   1400459ab:	gs ins DWORD PTR es:[rdi],dx
   1400459ad:	(bad)  
   1400459ae:	ins    BYTE PTR es:[rdi],dx
   1400459af:	jns    0x1400459ef
   1400459b1:	cmp    al,0x2f
   1400459b3:	fs gs jo 0x140045a1c
   1400459b7:	outs   dx,BYTE PTR ds:[rsi]
   1400459b8:	fs outs dx,BYTE PTR gs:[rsi]
   1400459bb:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400459be:	cmp    al,0x74
   1400459c0:	imul   edi,DWORD PTR [rdx],0x73757274
   1400459c6:	je     0x140045a11
   1400459c8:	outs   dx,BYTE PTR ds:[rsi]
   1400459c9:	outs   dx,WORD PTR ds:[rsi]
   1400459cb:	and    BYTE PTR [rax+0x6d],bh
   1400459ce:	ins    BYTE PTR es:[rdi],dx
   1400459cf:	outs   dx,BYTE PTR ds:[rsi]
   1400459d0:	jae    0x140045a0c
   1400459d2:	je     0x140045a3d
   1400459d4:	cmp    eax,0x6e727522
   1400459d9:	cmp    dh,BYTE PTR [rbx+0x63]
   1400459dc:	push   0x73616d65
   1400459e1:	sub    eax,0x7263696d
   1400459e6:	outs   dx,DWORD PTR ds:[rsi]
   1400459e7:	jae    0x140045a58
   1400459e9:	data16 je 0x140045a19
   1400459ec:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400459ef:	cmp    ah,BYTE PTR [rcx+0x73]
   1400459f2:	ins    DWORD PTR es:[rdi],dx
   1400459f3:	cs jbe 0x140045a28
   1400459f6:	and    ah,BYTE PTR [rax]
   1400459f8:	js     0x140045a67
   1400459fa:	ins    BYTE PTR es:[rdi],dx
   1400459fb:	outs   dx,BYTE PTR ds:[rsi]
   1400459fc:	jae    0x140045a3b
   1400459fe:	and    dh,BYTE PTR [rbp+0x72]
   140045a01:	outs   dx,BYTE PTR ds:[rsi]
   140045a02:	cmp    dh,BYTE PTR [rbx+0x63]
   140045a05:	push   0x73616d65
   140045a0a:	sub    eax,0x7263696d
   140045a0f:	outs   dx,DWORD PTR ds:[rsi]
   140045a10:	jae    0x140045a81
   140045a12:	data16 je 0x140045a42
   140045a15:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140045a18:	cmp    ah,BYTE PTR [rcx+0x73]
   140045a1b:	ins    DWORD PTR es:[rdi],dx
   140045a1c:	cs jbe 0x140045a52
   140045a1f:	and    bh,BYTE PTR [rsi]
   140045a21:	cmp    al,0x74
   140045a23:	imul   edi,DWORD PTR [rdx],0x75636573
   140045a29:	jb     0x140045a94
   140045a2b:	je     0x140045aa6
   140045a2d:	ds cmp al,0x74
   140045a30:	imul   edi,DWORD PTR [rdx],0x75716572
   140045a36:	gs jae 0x140045aad
   140045a39:	gs fs push rax
   140045a3c:	jb     0x140045aa7
   140045a3e:	jbe    0x140045aa9
   140045a40:	ins    BYTE PTR es:[rdi],dx
   140045a41:	gs addr32 gs jae 0x140045a84
   140045a46:	cmp    al,0x74
   140045a48:	imul   edi,DWORD PTR [rdx],0x75716572
   140045a4e:	gs jae 0x140045ac5
   140045a51:	gs fs rex.RB js 0x140045abb
   140045a56:	movsxd esi,DWORD PTR [rbp+0x74]
   140045a59:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140045a60:	ins    BYTE PTR es:[rdi],dx
   140045a61:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140045a65:	gs ins BYTE PTR es:[rdi],dx
   140045a67:	cmp    eax,0x49736122
   140045a6c:	outs   dx,BYTE PTR ds:[rsi]
   140045a6d:	jbe    0x140045ade
   140045a6f:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140045a73:	and    BYTE PTR [rbp+0x69],dh
   140045a76:	movsxd esp,DWORD PTR [r11+0x65]
   140045a7a:	jae    0x140045aef
   140045a7c:	cmp    eax,0x6c616622
   140045a81:	jae    0x140045ae8
   140045a83:	and    bh,BYTE PTR [rsi]
   140045a85:	cmp    al,0x2f
   140045a87:	je     0x140045af2
   140045a89:	cmp    dh,BYTE PTR [rdx+0x65]
   140045a8c:	jno    0x140045b03
   140045a8e:	gs jae 0x140045b05
   140045a91:	gs fs rex.RB js 0x140045afb
   140045a96:	movsxd esi,DWORD PTR [rbp+0x74]
   140045a99:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140045aa0:	ins    BYTE PTR es:[rdi],dx
   140045aa1:	ds cmp al,0x2f
   140045aa4:	je     0x140045b0f
   140045aa6:	cmp    dh,BYTE PTR [rdx+0x65]
   140045aa9:	jno    0x140045b20
   140045aab:	gs jae 0x140045b22
   140045aae:	gs fs push rax
   140045ab1:	jb     0x140045b1c
   140045ab3:	jbe    0x140045b1e
   140045ab5:	ins    BYTE PTR es:[rdi],dx
   140045ab6:	gs addr32 gs jae 0x140045af9
   140045abb:	cmp    al,0x2f
   140045abd:	je     0x140045b28
   140045abf:	cmp    dh,BYTE PTR [rbx+0x65]
   140045ac2:	movsxd esi,DWORD PTR [rbp+0x72]
   140045ac5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x69742f3c
   140045acd:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   140045ad1:	jae    0x140045b47
   140045ad3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140045ad5:	outs   dx,WORD PTR ds:[rsi]
   140045ad7:	ds cmp al,0x2f
   140045ada:	(bad)  
   140045adb:	jae    0x140045b50
   140045add:	gs ins DWORD PTR es:[rdi],dx
   140045adf:	(bad)  
   140045ae0:	ins    BYTE PTR es:[rdi],dx
   140045ae1:	jns    0x140045b21
   140045ae3:	push   rax

Disassembly of section .reloc:

0000000140046000 <.reloc>:
   140046000:	add    BYTE PTR [rax+0x2],ah
   140046003:	add    BYTE PTR [rax+0x0],al
   140046006:	add    BYTE PTR [rax],al
   140046008:	nop
   140046009:	scas   al,BYTE PTR es:[rdi]
   14004600a:	cwde   
   14004600b:	scas   al,BYTE PTR es:[rdi]
   14004600c:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140046015:	scas   al,BYTE PTR es:[rdi]
   140046016:	enter  0xd0ae,0xae
   14004601a:	fsubr  DWORD PTR [rsi-0x51175120]
   140046020:	lock scas al,BYTE PTR es:[rdi]
   140046022:	clc    
   140046023:	scas   al,BYTE PTR es:[rdi]
   140046024:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14004602a:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140046030:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   140046036:	scas   rax,QWORD PTR es:[rdi]
   140046038:	push   rax
   140046039:	scas   eax,DWORD PTR es:[rdi]
   14004603a:	push   0x78af70af
   14004603f:	scas   eax,DWORD PTR es:[rdi]
   140046040:	add    BYTE PTR [rax+0x2],dh
   140046043:	add    BYTE PTR [rax+rax*1-0x5b780000],bl
   14004604a:	loopne 0x140045ff7
   14004604c:	call   0x138b050fc
   140046051:	stos   DWORD PTR es:[rdi],eax
   140046052:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   140046059:	lods   al,BYTE PTR ds:[rsi]
   14004605a:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   140046061:	lods   al,BYTE PTR ds:[rsi]
   140046062:	lods   al,BYTE PTR ds:[rsi]
   140046064:	rex.W lods al,BYTE PTR ds:[rsi]
   140046066:	push   rax
   140046067:	lods   al,BYTE PTR ds:[rsi]
   140046068:	pop    rax
   140046069:	lods   al,BYTE PTR ds:[rsi]
   14004606a:	(bad)  
   14004606b:	lods   al,BYTE PTR ds:[rsi]
   14004606c:	push   0x78ac70ac
   140046071:	lods   al,BYTE PTR ds:[rsi]
   140046072:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14004607a:	movabs al,ds:0xc0acb8acb0aca8ac
   140046083:	lods   al,BYTE PTR ds:[rsi]
   140046084:	enter  0xd0ac,0xac
   140046088:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14004608f:	lods   al,BYTE PTR ds:[rsi]
   140046090:	clc    
   140046091:	lods   al,BYTE PTR ds:[rsi]
   140046092:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140046098:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14004609e:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400460a4:	lods   rax,QWORD PTR ds:[rsi]
   1400460a6:	push   rax
   1400460a7:	lods   eax,DWORD PTR ds:[rsi]
   1400460a8:	pop    rax
   1400460a9:	lods   eax,DWORD PTR ds:[rsi]
   1400460aa:	(bad)  
   1400460ab:	lods   eax,DWORD PTR ds:[rsi]
   1400460ac:	push   0x78ad70ad
   1400460b1:	lods   eax,DWORD PTR ds:[rsi]
   1400460b2:	sub    BYTE PTR [rbp-0x526f5278],0x98
   1400460b9:	lods   eax,DWORD PTR ds:[rsi]
   1400460ba:	movabs al,ds:0xc0adb8adb0ada8ad
   1400460c3:	lods   eax,DWORD PTR ds:[rsi]
   1400460c4:	enter  0xd0ad,0xad
   1400460c8:	fsubr  DWORD PTR [rbp-0x52175220]
   1400460ce:	lock lods eax,DWORD PTR ds:[rsi]
   1400460d0:	clc    
   1400460d1:	lods   eax,DWORD PTR ds:[rsi]
   1400460d2:	add    BYTE PTR [rsi-0x51ef51f8],ch
   1400460d8:	cmp    BYTE PTR [rsi-0x7fff51c0],ch
   1400460de:	add    al,BYTE PTR [rax]
   1400460e0:	sub    BYTE PTR [rcx],al
   1400460e2:	add    BYTE PTR [rax],al
   1400460e4:	sub    BYTE PTR [rsi-0x59c759d0],ah
   1400460ea:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400460ec:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400460ee:	push   rax
   1400460ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400460f0:	pop    rax
   1400460f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400460f2:	(bad)  
   1400460f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400460f4:	push   0x78a670a6
   1400460f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400460fa:	and    BYTE PTR [rsi-0x596f5978],0x98
   140046101:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046102:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14004610b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004610c:	enter  0xd0a6,0xa6
   140046110:	fsub   DWORD PTR [rsi-0x59175920]
   140046116:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046118:	clc    
   140046119:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004611a:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140046120:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140046126:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14004612c:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004612e:	push   rax
   14004612f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046130:	pop    rax
   140046131:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046132:	(bad)  
   140046133:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046134:	push   0x78a770a7
   140046139:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004613a:	and    BYTE PTR [rdi-0x586f5878],0x98
   140046141:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046142:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14004614b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004614c:	enter  0xd0a7,0xa7
   140046150:	fsub   DWORD PTR [rdi-0x58175820]
   140046156:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046158:	clc    
   140046159:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004615a:	add    BYTE PTR [rax-0x57ef57f8],ch
   140046160:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140046166:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14004616c:	rex.W test al,0x50
   14004616f:	test   al,0x58
   140046171:	test   al,0x60
   140046173:	test   al,0x68
   140046175:	test   al,0x70
   140046177:	test   al,0x78
   140046179:	test   al,0x80
   14004617b:	test   al,0x88
   14004617d:	test   al,0x90
   14004617f:	test   al,0x98
   140046181:	test   al,0xa0
   140046183:	test   al,0xa8
   140046185:	test   al,0xb0
   140046187:	test   al,0xb8
   140046189:	test   al,0xc0
   14004618b:	test   al,0xc8
   14004618d:	test   al,0xd0
   14004618f:	test   al,0xd8
   140046191:	test   al,0xe0
   140046193:	test   al,0xe8
   140046195:	test   al,0xf0
   140046197:	test   al,0xf8
   140046199:	test   al,0x18
   14004619b:	test   eax,0xa948a940
   1400461a0:	jo     0x14004614d
   1400461a2:	js     0x14004614f
   1400461a4:	sub    BYTE PTR [rbx-0x546f5478],0x98
   1400461ab:	stos   DWORD PTR es:[rdi],eax
   1400461ac:	movabs al,ds:0xe0abc8abb0aba8ab
   1400461b5:	stos   DWORD PTR es:[rdi],eax
   1400461b6:	lock stos DWORD PTR es:[rdi],eax
   1400461b8:	add    BYTE PTR [rax+riz*1+0x40ac30ac],ch
   1400461bf:	lods   al,BYTE PTR ds:[rsi]
   1400461c0:	(bad)  
   1400461c1:	lods   al,BYTE PTR ds:[rsi]
   1400461c2:	sub    BYTE PTR [rax+riz*4-0x1f533f54],0xac
   1400461ca:	add    BYTE PTR [rbp-0x52bf52e0],ch
   1400461d0:	(bad)  
   1400461d1:	lods   eax,DWORD PTR ds:[rsi]
   1400461d2:	sub    BYTE PTR [rbp-0x523f5260],0xe0
   1400461d9:	lods   eax,DWORD PTR ds:[rsi]
   1400461da:	lock lods eax,DWORD PTR ds:[rsi]
   1400461dc:	add    BYTE PTR [rsi-0x51cf51e0],ch
   1400461e2:	scas   al,BYTE PTR es:[rdi]
   1400461e4:	(bad)  
   1400461e5:	scas   al,BYTE PTR es:[rdi]
   1400461e6:	jo     0x140046196
   1400461e8:	sub    BYTE PTR [rsi-0x513f5160],0xe0
   1400461ef:	scas   al,BYTE PTR es:[rdi]
   1400461f0:	add    BYTE PTR [rdi-0x50bf50e0],ch
   1400461f6:	(bad)  
   1400461f7:	scas   eax,DWORD PTR es:[rdi]
   1400461f8:	jo     0x1400461a9
   1400461fa:	sub    BYTE PTR [rdi-0x50175020],0xf0
   140046201:	scas   eax,DWORD PTR es:[rdi]
   140046202:	clc    
   140046203:	scas   eax,DWORD PTR es:[rdi]
   140046204:	add    BYTE PTR [rax+0x400002],dl
   14004620a:	add    BYTE PTR [rax],al
   14004620c:	add    BYTE PTR [rax-0x5fd75fe0],ah
   140046212:	clc    
   140046213:	movabs ds:0xa418a410a408a400,eax
   14004621c:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   140046223:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046224:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046226:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046228:	push   rax
   140046229:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004622a:	pop    rax
   14004622b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004622c:	(bad)  
   14004622d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004622e:	push   0x78a470a4
   140046233:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046234:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14004623c:	movabs al,ds:0xa4b8a4b0a4a8a4
   140046245:	movabs al,ds:0xa020000003380002
   14004624e:	cmp    BYTE PTR [rax-0x5f5f5f68],ah
   140046254:	test   al,0xa0
   140046256:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   14004625c:	push   rax
   14004625d:	movabs eax,ds:0xa170a168a160a158
   140046266:	js     0x140046209
   140046268:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14004626f:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140046278:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14004627f:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140046288:	add    BYTE PTR [rdx-0x5def5df8],ah
   14004628e:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140046294:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14004629a:	rex.W movabs ds:0xa268a260a258a250,al
   1400462a4:	jo     0x140046248
   1400462a6:	js     0x14004624a
   1400462a8:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   1400462af:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   1400462b8:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   1400462bf:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   1400462c8:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   1400462ce:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   1400462d4:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   1400462da:	movabs ds:0xa368a360a358a350,rax
   1400462e4:	jo     0x140046289
   1400462e6:	js     0x14004628b
   1400462e8:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   1400462ef:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   1400462f8:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   1400462ff:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   140046308:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   14004630f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046310:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   140046317:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046318:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004631a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004631c:	push   rax
   14004631d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004631e:	pop    rax
   14004631f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046320:	(bad)  
   140046321:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046322:	push   0x78a470a4
   140046327:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046328:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140046330:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   140046339:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004633a:	enter  0xd0a4,0xa4
   14004633e:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   140046345:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046346:	clc    
   140046347:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046348:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14004634e:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140046354:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14004635a:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004635c:	push   rax
   14004635d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004635e:	pop    rax
   14004635f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046360:	(bad)  
   140046361:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046362:	push   0x78a570a5
   140046367:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046368:	and    BYTE PTR [rbp-0x5a4f5a78],0xb8
   14004636f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046370:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140046376:	push   rax
   140046377:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046378:	pop    rax
   140046379:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004637a:	(bad)  
   14004637b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004637c:	push   0x78a670a6
   140046381:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046382:	and    BYTE PTR [rsi-0x596f5978],0x98
   140046389:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004638a:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140046393:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046394:	enter  0xd0a6,0xa6
   140046398:	fsub   DWORD PTR [rsi-0x59175920]
   14004639e:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400463a0:	clc    
   1400463a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400463a2:	add    BYTE PTR [rdi-0x58ef58f8],ah
   1400463a8:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   1400463ae:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   1400463b4:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400463b6:	push   rax
   1400463b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463b8:	pop    rax
   1400463b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463ba:	(bad)  
   1400463bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463bc:	push   0x78a770a7
   1400463c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463c2:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400463c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463ca:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   1400463d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463d4:	enter  0xd0a7,0xa7
   1400463d8:	fsub   DWORD PTR [rdi-0x58175820]
   1400463de:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463e0:	clc    
   1400463e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400463e2:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400463e8:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400463ee:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400463f4:	rex.W test al,0x50
   1400463f7:	test   al,0x58
   1400463f9:	test   al,0x60
   1400463fb:	test   al,0x68
   1400463fd:	test   al,0x70
   1400463ff:	test   al,0x78
   140046401:	test   al,0x80
   140046403:	test   al,0x88
   140046405:	test   al,0x90
   140046407:	test   al,0x98
   140046409:	test   al,0xa0
   14004640b:	test   al,0xa8
   14004640d:	test   al,0xb0
   14004640f:	test   al,0xb8
   140046411:	test   al,0xc0
   140046413:	test   al,0xc8
   140046415:	test   al,0xd0
   140046417:	test   al,0xd8
   140046419:	test   al,0xe0
   14004641b:	test   al,0xe8
   14004641d:	test   al,0xf0
   14004641f:	test   al,0xf8
   140046421:	test   al,0x0
   140046423:	test   eax,0xa910a908
   140046428:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14004642e:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140046434:	test   rax,0xffffffffa958a950
   14004643a:	(bad)  
   14004643b:	test   eax,0xa970a968
   140046440:	js     0x1400463eb
   140046442:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140046449:	test   eax,0xa9a8a9a0
   14004644e:	mov    al,0xa9
   140046450:	mov    eax,0xc8a9c0a9
   140046455:	test   eax,0xa9d8a9d0
   14004645a:	loopne 0x140046405
   14004645c:	call   0x138ae550a
   140046461:	test   eax,0xaa08aa00
   140046466:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14004646c:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140046472:	stos   BYTE PTR es:[rdi],al
   140046474:	rex.W stos BYTE PTR es:[rdi],al
   140046476:	push   rax
   140046477:	stos   BYTE PTR es:[rdi],al
   140046478:	pop    rax
   140046479:	stos   BYTE PTR es:[rdi],al
   14004647a:	(bad)  
   14004647b:	stos   BYTE PTR es:[rdi],al
   14004647c:	push   0x78aa70aa
   140046481:	stos   BYTE PTR es:[rdi],al
   140046482:	sub    BYTE PTR [rdx-0x554f5578],0xb8
   140046489:	stos   BYTE PTR es:[rdi],al
   14004648a:	lods   al,BYTE PTR ds:[rsi]
   14004648c:	rex.W lods al,BYTE PTR ds:[rsi]
   14004648e:	push   rax
   14004648f:	lods   al,BYTE PTR ds:[rsi]
   140046490:	pop    rax
   140046491:	lods   al,BYTE PTR ds:[rsi]
   140046492:	(bad)  
   140046493:	lods   al,BYTE PTR ds:[rsi]
   140046494:	push   0x78ac70ac
   140046499:	lods   al,BYTE PTR ds:[rsi]
   14004649a:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400464a2:	movabs al,ds:0xc0acb8acb0aca8ac
   1400464ab:	lods   al,BYTE PTR ds:[rsi]
   1400464ac:	enter  0xd0ac,0xac
   1400464b0:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400464b7:	lods   al,BYTE PTR ds:[rsi]
   1400464b8:	clc    
   1400464b9:	lods   al,BYTE PTR ds:[rsi]
   1400464ba:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400464c0:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400464c6:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400464cc:	lods   rax,QWORD PTR ds:[rsi]
   1400464ce:	push   rax
   1400464cf:	lods   eax,DWORD PTR ds:[rsi]
   1400464d0:	pop    rax
   1400464d1:	lods   eax,DWORD PTR ds:[rsi]
   1400464d2:	(bad)  
   1400464d3:	lods   eax,DWORD PTR ds:[rsi]
   1400464d4:	push   0x78ad70ad
   1400464d9:	lods   eax,DWORD PTR ds:[rsi]
   1400464da:	sub    BYTE PTR [rbp-0x526f5278],0x98
   1400464e1:	lods   eax,DWORD PTR ds:[rsi]
   1400464e2:	movabs al,ds:0xc0adb8adb0ada8ad
   1400464eb:	lods   eax,DWORD PTR ds:[rsi]
   1400464ec:	enter  0xd0ad,0xad
   1400464f0:	fsubr  DWORD PTR [rbp-0x52175220]
   1400464f6:	lock lods eax,DWORD PTR ds:[rsi]
   1400464f8:	clc    
   1400464f9:	lods   eax,DWORD PTR ds:[rsi]
   1400464fa:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140046500:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140046506:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14004650c:	rex.W scas al,BYTE PTR es:[rdi]
   14004650e:	push   rax
   14004650f:	scas   al,BYTE PTR es:[rdi]
   140046510:	pop    rax
   140046511:	scas   al,BYTE PTR es:[rdi]
   140046512:	(bad)  
   140046513:	scas   al,BYTE PTR es:[rdi]
   140046514:	push   0x78ae70ae
   140046519:	scas   al,BYTE PTR es:[rdi]
   14004651a:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140046521:	scas   al,BYTE PTR es:[rdi]
   140046522:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14004652b:	scas   al,BYTE PTR es:[rdi]
   14004652c:	enter  0xd0ae,0xae
   140046530:	fsubr  DWORD PTR [rsi-0x51175120]
   140046536:	lock scas al,BYTE PTR es:[rdi]
   140046538:	clc    
   140046539:	scas   al,BYTE PTR es:[rdi]
   14004653a:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140046540:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140046546:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14004654c:	scas   rax,QWORD PTR es:[rdi]
   14004654e:	push   rax
   14004654f:	scas   eax,DWORD PTR es:[rdi]
   140046550:	pop    rax
   140046551:	scas   eax,DWORD PTR es:[rdi]
   140046552:	(bad)  
   140046553:	scas   eax,DWORD PTR es:[rdi]
   140046554:	push   0x78af70af
   140046559:	scas   eax,DWORD PTR es:[rdi]
   14004655a:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140046561:	scas   eax,DWORD PTR es:[rdi]
   140046562:	movabs al,ds:0xc0afb8afb0afa8af
   14004656b:	scas   eax,DWORD PTR es:[rdi]
   14004656c:	enter  0xd0af,0xaf
   140046570:	fsubr  DWORD PTR [rdi-0x50175020]
   140046576:	lock scas eax,DWORD PTR es:[rdi]
   140046578:	clc    
   140046579:	scas   eax,DWORD PTR es:[rdi]
   14004657a:	add    BYTE PTR [rax],al
   14004657c:	add    BYTE PTR [rax+0x4c0002],dh
   140046582:	add    BYTE PTR [rax],al
   140046584:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14004658a:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   140046590:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   140046596:	rex.W movabs al,ds:0xa068a060a058a050
   1400465a0:	jo     0x140046542
   1400465a2:	js     0x140046544
   1400465a4:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   1400465ab:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   1400465b4:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   1400465bb:	movabs al,ds:0xabd8a110a108a0e0
   1400465c4:	loopne 0x140046571
   1400465c6:	add    BYTE PTR [rax],al
   1400465c8:	add    al,dl
   1400465ca:	add    al,BYTE PTR [rax]
   1400465cc:	or     al,0x0
   1400465ce:	add    BYTE PTR [rax],al
   1400465d0:	fsubr  DWORD PTR [rdx-0x1fff5520]
   1400465d6:	add    al,BYTE PTR [rax]
   1400465d8:	sbb    al,0x0
   1400465da:	add    BYTE PTR [rax],al
   1400465dc:	js     0x14004658a
   1400465de:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400465e6:	movabs al,ds:0xacb8acb0aca8ac
   1400465ef:	add    BYTE PTR [rax],al
   1400465f1:	adc    BYTE PTR [rbx],al
   1400465f3:	add    BYTE PTR [rax],ah
   1400465f5:	add    BYTE PTR [rax],al
   1400465f7:	add    BYTE PTR [rax-0x59],ah
   1400465fa:	push   0xffffffffe0a7b0a7
   1400465ff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046600:	call   0x138ac56ac
   140046605:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046606:	add    BYTE PTR [rax-0x573757f8],ch
   14004660c:	test   rax,0xffffffffb0000000
   140046612:	add    eax,DWORD PTR [rax]
   140046614:	mov    al,0x0
   140046616:	add    BYTE PTR [rax],al
   140046618:	or     BYTE PTR [rax-0x5fe75ff0],ah
   14004661e:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   140046624:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   14004662a:	push   rax
   14004662b:	movabs al,ds:0xa070a068a060a058
   140046634:	js     0x1400465d6
   140046636:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14004663d:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   140046646:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   14004664d:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   140046656:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   14004665c:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   140046662:	xor    BYTE PTR [rcx-0x5e575e60],ah
   140046668:	mov    al,0xa1
   14004666a:	mov    eax,0xd0a1c0a1
   14004666f:	movabs eax,ds:0xa230a228a220a1d8
   140046678:	cmp    BYTE PTR [rdx-0x5d6f5d90],ah
   14004667e:	mov    al,0xa2
   140046680:	fsub   DWORD PTR [rdx-0x5ce75d08]
   140046686:	rex movabs ds:0xa3e0a3b8a388a360,eax
   140046690:	adc    BYTE PTR [rax+rsi*1-0x7f5ba75c],ah
   140046697:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046698:	test   al,0xa4
   14004669a:	shl    BYTE PTR [rax+rax*1+0x58a530a5],1
   1400466a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400466a2:	mov    BYTE PTR [rbp-0x5a375a50],ah
   1400466a8:	loopne 0x14004664f
   1400466aa:	add    BYTE PTR [rsi-0x599759c8],ah
   1400466b0:	nop
   1400466b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400466b2:	mov    eax,0x8a6e0a6
   1400466b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400466b8:	cmp    BYTE PTR [rdi-0x587f58a0],ah
	...
