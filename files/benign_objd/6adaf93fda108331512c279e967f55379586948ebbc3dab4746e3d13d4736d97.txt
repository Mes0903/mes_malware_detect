
6adaf93fda108331512c279e967f55379586948ebbc3dab4746e3d13d4736d97.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x30749]        # 0x140031750
   140001007:	jmp    0x14002de94
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x30719]        # 0x140031730
   140001017:	jmp    0x14002de94
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x306e9]        # 0x140031710
   140001027:	jmp    0x14002de94
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	xor    r8d,r8d
   140001037:	xor    edx,edx
   140001039:	xor    ecx,ecx
   14000103b:	call   QWORD PTR [rip+0x31257]        # 0x140032298
   140001041:	mov    QWORD PTR [rip+0x4f090],rax        # 0x1400500d8
   140001048:	test   rax,rax
   14000104b:	je     0x14000106d
   14000104d:	mov    r9d,0x4
   140001053:	mov    DWORD PTR [rsp+0x30],0x2
   14000105b:	lea    r8,[rsp+0x30]
   140001060:	xor    edx,edx
   140001062:	mov    rcx,rax
   140001065:	call   QWORD PTR [rip+0x31225]        # 0x140032290
   14000106b:	jmp    0x1400010ab
   14000106d:	mov    rax,QWORD PTR [rip+0x4a004]        # 0x14004b078
   140001074:	lea    rcx,[rip+0x49ffd]        # 0x14004b078
   14000107b:	cmp    rax,rcx
   14000107e:	je     0x1400010ab
   140001080:	test   BYTE PTR [rax+0x1c],0x1
   140001084:	je     0x1400010ab
   140001086:	call   QWORD PTR [rip+0x311fc]        # 0x140032288
   14000108c:	mov    rcx,QWORD PTR [rip+0x49fe5]        # 0x14004b078
   140001093:	lea    r8,[rip+0x33dae]        # 0x140034e48
   14000109a:	mov    r9d,eax
   14000109d:	mov    edx,0xa
   1400010a2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400010a6:	call   0x140001f70
   1400010ab:	lea    rcx,[rip+0x306be]        # 0x140031770
   1400010b2:	add    rsp,0x28
   1400010b6:	jmp    0x14002de94
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	lea    rcx,[rip+0x306d9]        # 0x1400317a0
   1400010c7:	jmp    0x14002de94
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	lea    rax,[rip+0x33519]        # 0x1400345f0
   1400010d7:	lea    rcx,[rip+0x30722]        # 0x140031800
   1400010de:	mov    QWORD PTR [rip+0x4d50b],rax        # 0x14004e5f0
   1400010e5:	jmp    0x14002de94
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rdi
   1400010f2:	sub    rsp,0x20
   1400010f6:	xor    edx,edx
   1400010f8:	lea    rcx,[rip+0x4eff9]        # 0x1400500f8
   1400010ff:	lea    r8d,[rdx+0x28]
   140001103:	call   0x14002e2ce
   140001108:	and    DWORD PTR [rip+0x4efd9],0x0        # 0x1400500e8
   14000110f:	lea    rax,[rip+0x33412]        # 0x140034528
   140001116:	and    QWORD PTR [rip+0x4efd2],0x0        # 0x1400500f0
   14000111e:	lea    rdi,[rip+0x4efbb]        # 0x1400500e0
   140001125:	and    DWORD PTR [rip+0x4efc0],0x0        # 0x1400500ec
   14000112c:	lea    rcx,[rip+0x4efc5]        # 0x1400500f8
   140001133:	and    QWORD PTR [rip+0x4efe5],0x0        # 0x140050120
   14000113b:	mov    QWORD PTR [rip+0x4ef9e],rax        # 0x1400500e0
   140001142:	mov    QWORD PTR [rip+0x4ee8f],rdi        # 0x14004ffd8
   140001149:	call   0x140004ee4
   14000114e:	test   eax,eax
   140001150:	jns    0x14000115b
   140001152:	mov    BYTE PTR [rip+0x4ee77],0x1        # 0x14004ffd0
   140001159:	jmp    0x140001165
   14000115b:	mov    DWORD PTR [rip+0x4ef83],0x38        # 0x1400500e8
   140001165:	lea    rax,[rip+0x3342c]        # 0x140034598
   14000116c:	mov    QWORD PTR [rip+0x4ee6d],rdi        # 0x14004ffe0
   140001173:	lea    rcx,[rip+0x306d6]        # 0x140031850
   14000117a:	mov    QWORD PTR [rip+0x4ef5f],rax        # 0x1400500e0
   140001181:	add    rsp,0x20
   140001185:	pop    rdi
   140001186:	jmp    0x14002de94
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	rex push rbx
   140001192:	sub    rsp,0x20
   140001196:	xor    edx,edx
   140001198:	lea    rcx,[rip+0x4efb9]        # 0x140050158
   14000119f:	lea    r8d,[rdx+0x28]
   1400011a3:	call   0x14002e2ce
   1400011a8:	and    QWORD PTR [rip+0x4efd0],0x0        # 0x140050180
   1400011b0:	lea    rax,[rip+0xffffffffffffee49]        # 0x140000000
   1400011b7:	and    DWORD PTR [rip+0x4efca],0x0        # 0x140050188
   1400011be:	lea    rcx,[rip+0x4ef93]        # 0x140050158
   1400011c5:	and    DWORD PTR [rip+0x4efc0],0x0        # 0x14005018c
   1400011cc:	mov    ebx,0x1
   1400011d1:	mov    QWORD PTR [rip+0x4ef68],rax        # 0x140050140
   1400011d8:	mov    QWORD PTR [rip+0x4ef59],rax        # 0x140050138
   1400011df:	lea    rax,[rip+0x3762a]        # 0x140038810
   1400011e6:	mov    QWORD PTR [rip+0x4ef63],rax        # 0x140050150
   1400011ed:	mov    DWORD PTR [rip+0x4ef39],0x60        # 0x140050130
   1400011f7:	mov    BYTE PTR [rip+0x4ef4b],bl        # 0x140050148
   1400011fd:	mov    DWORD PTR [rip+0x4ef45],0x800        # 0x14005014c
   140001207:	call   0x140004ee4
   14000120c:	movzx  ecx,BYTE PTR [rip+0x4edbd]        # 0x14004ffd0
   140001213:	test   eax,eax
   140001215:	cmovs  ecx,ebx
   140001218:	mov    BYTE PTR [rip+0x4edb2],cl        # 0x14004ffd0
   14000121e:	lea    rcx,[rip+0x306fb]        # 0x140031920
   140001225:	add    rsp,0x20
   140001229:	pop    rbx
   14000122a:	jmp    0x14002de94
   14000122f:	int3   
   140001230:	sub    rsp,0x28
   140001234:	xor    edx,edx
   140001236:	lea    rcx,[rip+0x4ef5b]        # 0x140050198
   14000123d:	lea    r8d,[rdx+0x28]
   140001241:	call   0x14002e2ce
   140001246:	and    QWORD PTR [rip+0x4ef7a],0x0        # 0x1400501c8
   14000124e:	lea    rcx,[rip+0x4ef43]        # 0x140050198
   140001255:	and    DWORD PTR [rip+0x4ef74],0x0        # 0x1400501d0
   14000125c:	and    DWORD PTR [rip+0x4ef71],0x0        # 0x1400501d4
   140001263:	and    QWORD PTR [rip+0x4ef55],0x0        # 0x1400501c0
   14000126b:	mov    DWORD PTR [rip+0x4ef1b],0x48        # 0x140050190
   140001275:	call   0x140004ee4
   14000127a:	test   eax,eax
   14000127c:	jns    0x14000128c
   14000127e:	and    DWORD PTR [rip+0x4ef0b],0x0        # 0x140050190
   140001285:	mov    BYTE PTR [rip+0x4ed44],0x1        # 0x14004ffd0
   14000128c:	lea    rcx,[rip+0x306dd]        # 0x140031970
   140001293:	add    rsp,0x28
   140001297:	jmp    0x14002de94
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	xor    eax,eax
   1400012a2:	mov    WORD PTR [rip+0x4d3e5],0x201        # 0x14004e690
   1400012ab:	and    QWORD PTR [rip+0x4d3be],rax        # 0x14004e670
   1400012b2:	mov    QWORD PTR [rip+0x4d3a9],rax        # 0x14004e662
   1400012b9:	mov    DWORD PTR [rip+0x4d3ab],eax        # 0x14004e66a
   1400012bf:	mov    WORD PTR [rip+0x4d3a8],ax        # 0x14004e66e
   1400012c6:	lea    rax,[rip+0x37b03]        # 0x140038dd0
   1400012cd:	mov    QWORD PTR [rip+0x4d3a4],rax        # 0x14004e678
   1400012d4:	lea    rax,[rip+0x366cd]        # 0x1400379a8
   1400012db:	mov    QWORD PTR [rip+0x4d39e],rax        # 0x14004e680
   1400012e2:	lea    rax,[rip+0x37a57]        # 0x140038d40
   1400012e9:	mov    QWORD PTR [rip+0x4d398],rax        # 0x14004e688
   1400012f0:	xor    eax,eax
   1400012f2:	mov    QWORD PTR [rip+0x4d399],rax        # 0x14004e692
   1400012f9:	mov    DWORD PTR [rip+0x4d39b],eax        # 0x14004e69a
   1400012ff:	mov    WORD PTR [rip+0x4d398],ax        # 0x14004e69e
   140001306:	ret    
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	lea    rcx,[rip+0x30749]        # 0x140031a60
   140001317:	jmp    0x14002de94
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    rcx,[rip+0x30749]        # 0x140031a70
   140001327:	jmp    0x14002de94
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	sub    rsp,0x28
   140001334:	lea    rcx,[rip+0x4e5e5]        # 0x14004f920
   14000133b:	call   0x14002d850
   140001340:	lea    rcx,[rip+0x30739]        # 0x140031a80
   140001347:	add    rsp,0x28
   14000134b:	jmp    0x14002de94
   140001350:	int3   
   140001351:	int3   
   140001352:	int3   
   140001353:	int3   
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	ret    0x0
   140001363:	int3   
   140001364:	int3   
   140001365:	int3   
   140001366:	int3   
   140001367:	int3   
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	mov    rcx,QWORD PTR [rcx]
   14000136f:	rex.W jmp QWORD PTR [rip+0x30fda]        # 0x140032350
   140001376:	int3   
   140001377:	int3   
   140001378:	int3   
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	rex push rbx
   140001382:	sub    rsp,0x20
   140001386:	lea    rax,[rip+0x32ed3]        # 0x140034260
   14000138d:	mov    rbx,rcx
   140001390:	mov    QWORD PTR [rcx],rax
   140001393:	test   dl,0x1
   140001396:	je     0x14000139e
   140001398:	call   QWORD PTR [rip+0x3122a]        # 0x1400325c8
   14000139e:	mov    rax,rbx
   1400013a1:	add    rsp,0x20
   1400013a5:	pop    rbx
   1400013a6:	ret    
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	mov    DWORD PTR [rdx],r8d
   1400013b3:	mov    rax,rdx
   1400013b6:	mov    QWORD PTR [rdx+0x8],rcx
   1400013ba:	ret    
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	int3   
   1400013c1:	int3   
   1400013c2:	int3   
   1400013c3:	int3   
   1400013c4:	int3   
   1400013c5:	int3   
   1400013c6:	int3   
   1400013c7:	int3   
   1400013c8:	int3   
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400013da:	mov    QWORD PTR [rsp+0x18],rdi
   1400013df:	push   r14
   1400013e1:	sub    rsp,0x30
   1400013e5:	mov    rax,QWORD PTR [rcx]
   1400013e8:	mov    rsi,rcx
   1400013eb:	mov    r14,r8
   1400013ee:	mov    edi,edx
   1400013f0:	mov    rbx,QWORD PTR [rax+0x18]
   1400013f4:	mov    rcx,rbx
   1400013f7:	call   QWORD PTR [rip+0x312ab]        # 0x1400326a8
   1400013fd:	mov    r8d,edi
   140001400:	lea    rdx,[rsp+0x20]
   140001405:	mov    rcx,rsi
   140001408:	call   rbx
   14000140a:	mov    rcx,QWORD PTR [r14+0x8]
   14000140e:	cmp    QWORD PTR [rax+0x8],rcx
   140001412:	jne    0x140001422
   140001414:	mov    ecx,DWORD PTR [r14]
   140001417:	cmp    DWORD PTR [rax],ecx
   140001419:	jne    0x140001422
   14000141b:	mov    eax,0x1
   140001420:	jmp    0x140001424
   140001422:	xor    eax,eax
   140001424:	mov    rbx,QWORD PTR [rsp+0x40]
   140001429:	mov    rsi,QWORD PTR [rsp+0x48]
   14000142e:	mov    rdi,QWORD PTR [rsp+0x50]
   140001433:	add    rsp,0x30
   140001437:	pop    r14
   140001439:	ret    
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001444:	jne    0x140001451
   140001446:	cmp    DWORD PTR [rdx],r8d
   140001449:	jne    0x140001451
   14000144b:	mov    eax,0x1
   140001450:	ret    
   140001451:	xor    eax,eax
   140001453:	ret    
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	lea    rax,[rip+0x32c29]        # 0x140034090
   140001467:	ret    
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    QWORD PTR [rsp+0x8],rbx
   140001475:	push   rdi
   140001476:	sub    rsp,0x30
   14000147a:	xor    ebx,ebx
   14000147c:	mov    ecx,r8d
   14000147f:	mov    DWORD PTR [rsp+0x20],ebx
   140001483:	mov    rdi,rdx
   140001486:	call   0x14002d6ec
   14000148b:	test   rax,rax
   14000148e:	mov    QWORD PTR [rdi+0x18],0xf
   140001496:	mov    QWORD PTR [rdi+0x10],rbx
   14000149a:	lea    rdx,[rip+0x32bf7]        # 0x140034098
   1400014a1:	cmovne rdx,rax
   1400014a5:	mov    BYTE PTR [rdi],bl
   1400014a7:	cmp    BYTE PTR [rdx],bl
   1400014a9:	je     0x1400014ba
   1400014ab:	or     rax,0xffffffffffffffff
   1400014af:	inc    rax
   1400014b2:	cmp    BYTE PTR [rdx+rax*1],bl
   1400014b5:	jne    0x1400014af
   1400014b7:	mov    rbx,rax
   1400014ba:	mov    r8,rbx
   1400014bd:	mov    rcx,rdi
   1400014c0:	call   0x140001b1c
   1400014c5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400014ca:	mov    rax,rdi
   1400014cd:	add    rsp,0x30
   1400014d1:	pop    rdi
   1400014d2:	ret    
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	lea    rax,[rip+0x32bc1]        # 0x1400340a8
   1400014e7:	ret    
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	rex push rbx
   1400014f2:	sub    rsp,0x30
   1400014f6:	xor    eax,eax
   1400014f8:	mov    rbx,rdx
   1400014fb:	mov    DWORD PTR [rsp+0x20],eax
   1400014ff:	cmp    r8d,0x1
   140001503:	jne    0x140001528
   140001505:	mov    QWORD PTR [rdx+0x18],0xf
   14000150d:	lea    r8d,[rax+0x15]
   140001511:	mov    QWORD PTR [rdx+0x10],rax
   140001515:	mov    rcx,rbx
   140001518:	mov    BYTE PTR [rdx],al
   14000151a:	lea    rdx,[rip+0x32b97]        # 0x1400340b8
   140001521:	call   0x140001b1c
   140001526:	jmp    0x14000152d
   140001528:	call   0x140001470
   14000152d:	mov    rax,rbx
   140001530:	add    rsp,0x30
   140001534:	pop    rbx
   140001535:	ret    
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	lea    rax,[rip+0x32b89]        # 0x1400340d0
   140001547:	ret    
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    QWORD PTR [rsp+0x8],rbx
   140001555:	push   rdi
   140001556:	sub    rsp,0x30
   14000155a:	xor    ebx,ebx
   14000155c:	mov    ecx,r8d
   14000155f:	mov    DWORD PTR [rsp+0x20],ebx
   140001563:	mov    rdi,rdx
   140001566:	call   0x14002d71c
   14000156b:	test   rax,rax
   14000156e:	mov    QWORD PTR [rdi+0x18],0xf
   140001576:	mov    QWORD PTR [rdi+0x10],rbx
   14000157a:	lea    rdx,[rip+0x32b17]        # 0x140034098
   140001581:	cmovne rdx,rax
   140001585:	mov    BYTE PTR [rdi],bl
   140001587:	cmp    BYTE PTR [rdx],bl
   140001589:	je     0x14000159a
   14000158b:	or     rax,0xffffffffffffffff
   14000158f:	inc    rax
   140001592:	cmp    BYTE PTR [rdx+rax*1],bl
   140001595:	jne    0x14000158f
   140001597:	mov    rbx,rax
   14000159a:	mov    r8,rbx
   14000159d:	mov    rcx,rdi
   1400015a0:	call   0x140001b1c
   1400015a5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015aa:	mov    rax,rdi
   1400015ad:	add    rsp,0x30
   1400015b1:	pop    rdi
   1400015b2:	ret    
   1400015b3:	int3   
   1400015b4:	int3   
   1400015b5:	int3   
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015c5:	push   rdi
   1400015c6:	sub    rsp,0x20
   1400015ca:	mov    ecx,r8d
   1400015cd:	mov    edi,r8d
   1400015d0:	mov    rbx,rdx
   1400015d3:	call   0x14002d6ec
   1400015d8:	test   rax,rax
   1400015db:	mov    DWORD PTR [rbx],edi
   1400015dd:	lea    rax,[rip+0x4cffc]        # 0x14004e5e0
   1400015e4:	jne    0x1400015ed
   1400015e6:	lea    rax,[rip+0x4cfe3]        # 0x14004e5d0
   1400015ed:	mov    QWORD PTR [rbx+0x8],rax
   1400015f1:	mov    rax,rbx
   1400015f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015f9:	add    rsp,0x20
   1400015fd:	pop    rdi
   1400015fe:	ret    
   1400015ff:	int3   
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    QWORD PTR [rsp+0x8],rbx
   140001615:	mov    QWORD PTR [rsp+0x10],rbp
   14000161a:	mov    QWORD PTR [rsp+0x18],rsi
   14000161f:	push   rdi
   140001620:	push   r14
   140001622:	push   r15
   140001624:	sub    rsp,0x20
   140001628:	xor    r15d,r15d
   14000162b:	mov    rbx,rdx
   14000162e:	mov    DWORD PTR [r8],r15d
   140001631:	mov    r14d,r15d
   140001634:	sub    ecx,0x4
   140001637:	je     0x14000167c
   140001639:	cmp    ecx,0x1
   14000163c:	je     0x140001647
   14000163e:	lea    eax,[r15+0x57]
   140001642:	jmp    0x14000171d
   140001647:	mov    rsi,r15
   14000164a:	mov    edi,r15d
   14000164d:	mov    bpl,r15b
   140001650:	cmp    WORD PTR [rdx+0x2a],r15w
   140001655:	jbe    0x1400016ad
   140001657:	movzx  eax,WORD PTR [rdx+0x2a]
   14000165b:	mov    rcx,QWORD PTR [rbx+0x30]
   14000165f:	dec    eax
   140001661:	cdq    
   140001662:	and    edx,0x1f
   140001665:	add    eax,edx
   140001667:	xor    edx,edx
   140001669:	sar    eax,0x5
   14000166c:	inc    eax
   14000166e:	movsxd r8,eax
   140001671:	shl    r8,0x2
   140001675:	call   0x14002e2ce
   14000167a:	jmp    0x1400016ad
   14000167c:	mov    rcx,r9
   14000167f:	call   QWORD PTR [rip+0x30983]        # 0x140032008
   140001685:	mov    rcx,rax
   140001688:	mov    rsi,rax
   14000168b:	call   QWORD PTR [rip+0x3097f]        # 0x140032010
   140001691:	mov    rcx,rsi
   140001694:	mov    bpl,al
   140001697:	call   QWORD PTR [rip+0x30963]        # 0x140032000
   14000169d:	mov    edi,eax
   14000169f:	mov    r14d,0x1
   1400016a5:	or     eax,0xffffffff
   1400016a8:	test   edi,edi
   1400016aa:	cmove  edi,eax
   1400016ad:	mov    r9d,r15d
   1400016b0:	mov    QWORD PTR [rbx+0x8],rsi
   1400016b4:	mov    BYTE PTR [rbx+0x28],bpl
   1400016b8:	mov    DWORD PTR [rbx+0x20],edi
   1400016bb:	mov    DWORD PTR [rbx+0x24],r14d
   1400016bf:	cmp    r15w,WORD PTR [rbx+0x2a]
   1400016c4:	jae    0x14000171b
   1400016c6:	cmp    BYTE PTR [rip+0x4e8c3],r15b        # 0x14004ff90
   1400016cd:	mov    rax,QWORD PTR [rbx+0x38]
   1400016d1:	mov    r10d,r9d
   1400016d4:	mov    rcx,QWORD PTR [rax+r10*8]
   1400016d8:	mov    rax,QWORD PTR [rbx+0x40]
   1400016dc:	mov    dl,BYTE PTR [r10+rax*1]
   1400016e0:	mov    al,BYTE PTR [rbx+0x28]
   1400016e3:	je     0x140001736
   1400016e5:	cmp    dl,al
   1400016e7:	jbe    0x1400016ed
   1400016e9:	test   al,al
   1400016eb:	jne    0x140001756
   1400016ed:	test   ecx,ecx
   1400016ef:	je     0x1400016f6
   1400016f1:	test   DWORD PTR [rbx+0x20],ecx
   1400016f4:	je     0x140001756
   1400016f6:	mov    r8,QWORD PTR [rbx+0x30]
   1400016fa:	mov    ecx,r9d
   1400016fd:	and    ecx,0x1f
   140001700:	shr    r10,0x5
   140001704:	mov    edx,0x1
   140001709:	shl    edx,cl
   14000170b:	or     DWORD PTR [r8+r10*4],edx
   14000170f:	movzx  eax,WORD PTR [rbx+0x2a]
   140001713:	inc    r9d
   140001716:	cmp    r9d,eax
   140001719:	jb     0x1400016c6
   14000171b:	xor    eax,eax
   14000171d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001722:	mov    rbp,QWORD PTR [rsp+0x48]
   140001727:	mov    rsi,QWORD PTR [rsp+0x50]
   14000172c:	add    rsp,0x20
   140001730:	pop    r15
   140001732:	pop    r14
   140001734:	pop    rdi
   140001735:	ret    
   140001736:	cmp    dl,al
   140001738:	jbe    0x14000173e
   14000173a:	test   al,al
   14000173c:	jne    0x140001756
   14000173e:	test   rcx,rcx
   140001741:	je     0x1400016f6
   140001743:	test   QWORD PTR [rbx+0x10],rcx
   140001747:	je     0x140001756
   140001749:	mov    rax,QWORD PTR [rbx+0x18]
   14000174d:	and    rax,rcx
   140001750:	cmp    rax,QWORD PTR [rbx+0x18]
   140001754:	je     0x1400016f6
   140001756:	mov    r8,QWORD PTR [rbx+0x30]
   14000175a:	mov    ecx,r9d
   14000175d:	and    ecx,0x1f
   140001760:	shr    r10,0x5
   140001764:	mov    edx,0x1
   140001769:	shl    edx,cl
   14000176b:	not    edx
   14000176d:	and    DWORD PTR [r8+r10*4],edx
   140001771:	jmp    0x14000170f
   140001773:	int3   
   140001774:	int3   
   140001775:	int3   
   140001776:	int3   
   140001777:	int3   
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    QWORD PTR [rsp+0x8],rbx
   140001785:	push   rdi
   140001786:	sub    rsp,0x20
   14000178a:	mov    r10,QWORD PTR [rsp+0x60]
   14000178f:	xor    edi,edi
   140001791:	test   r10,r10
   140001794:	je     0x1400018a7
   14000179a:	test   edx,edx
   14000179c:	je     0x140001864
   1400017a2:	sub    edx,0x1
   1400017a5:	jne    0x1400018a7
   1400017ab:	mov    r11d,edi
   1400017ae:	mov    rax,QWORD PTR [rsp+0x50]
   1400017b3:	mov    QWORD PTR [r10+0x10],r9
   1400017b7:	lea    r9d,[rdi+0x1]
   1400017bb:	mov    DWORD PTR [r10+0x24],r9d
   1400017bf:	mov    BYTE PTR [r10+0x28],r8b
   1400017c3:	mov    QWORD PTR [r10+0x18],rax
   1400017c7:	cmp    di,WORD PTR [r10+0x2a]
   1400017cc:	jae    0x1400018a7
   1400017d2:	cmp    BYTE PTR [rip+0x4e7b7],dil        # 0x14004ff90
   1400017d9:	mov    rax,QWORD PTR [r10+0x38]
   1400017dd:	mov    ebx,r11d
   1400017e0:	mov    rcx,QWORD PTR [rax+rbx*8]
   1400017e4:	mov    rax,QWORD PTR [r10+0x40]
   1400017e8:	mov    dl,BYTE PTR [rbx+rax*1]
   1400017eb:	mov    al,BYTE PTR [r10+0x28]
   1400017ef:	je     0x140001829
   1400017f1:	cmp    dl,al
   1400017f3:	jbe    0x1400017f9
   1400017f5:	test   al,al
   1400017f7:	jne    0x140001849
   1400017f9:	test   ecx,ecx
   1400017fb:	je     0x140001803
   1400017fd:	test   DWORD PTR [r10+0x20],ecx
   140001801:	je     0x140001849
   140001803:	mov    r8,QWORD PTR [r10+0x30]
   140001807:	mov    ecx,r11d
   14000180a:	and    ecx,0x1f
   14000180d:	shr    rbx,0x5
   140001811:	mov    edx,r9d
   140001814:	shl    edx,cl
   140001816:	or     DWORD PTR [r8+rbx*4],edx
   14000181a:	movzx  eax,WORD PTR [r10+0x2a]
   14000181f:	add    r11d,r9d
   140001822:	cmp    r11d,eax
   140001825:	jb     0x1400017d2
   140001827:	jmp    0x1400018a7
   140001829:	cmp    dl,al
   14000182b:	jbe    0x140001831
   14000182d:	test   al,al
   14000182f:	jne    0x140001849
   140001831:	test   rcx,rcx
   140001834:	je     0x140001803
   140001836:	test   QWORD PTR [r10+0x10],rcx
   14000183a:	je     0x140001849
   14000183c:	mov    rax,QWORD PTR [r10+0x18]
   140001840:	and    rax,rcx
   140001843:	cmp    rax,QWORD PTR [r10+0x18]
   140001847:	je     0x140001803
   140001849:	mov    r8,QWORD PTR [r10+0x30]
   14000184d:	mov    ecx,r11d
   140001850:	and    ecx,0x1f
   140001853:	shr    rbx,0x5
   140001857:	mov    edx,r9d
   14000185a:	shl    edx,cl
   14000185c:	not    edx
   14000185e:	and    DWORD PTR [r8+rbx*4],edx
   140001862:	jmp    0x14000181a
   140001864:	mov    DWORD PTR [r10+0x24],edi
   140001868:	mov    BYTE PTR [r10+0x28],dil
   14000186c:	mov    QWORD PTR [r10+0x10],rdi
   140001870:	mov    QWORD PTR [r10+0x18],rdi
   140001874:	cmp    WORD PTR [r10+0x2a],di
   140001879:	jbe    0x1400018a7
   14000187b:	movzx  eax,WORD PTR [r10+0x2a]
   140001880:	mov    r9d,0x1
   140001886:	mov    rcx,QWORD PTR [r10+0x30]
   14000188a:	sub    eax,r9d
   14000188d:	cdq    
   14000188e:	and    edx,0x1f
   140001891:	add    eax,edx
   140001893:	xor    edx,edx
   140001895:	sar    eax,0x5
   140001898:	add    eax,r9d
   14000189b:	movsxd r8,eax
   14000189e:	shl    r8,0x2
   1400018a2:	call   0x14002e2ce
   1400018a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ac:	add    rsp,0x20
   1400018b0:	pop    rdi
   1400018b1:	ret    
   1400018b2:	int3   
   1400018b3:	int3   
   1400018b4:	int3   
   1400018b5:	int3   
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	rex push rbx
   1400018c2:	push   rbp
   1400018c3:	push   rsi
   1400018c4:	push   rdi
   1400018c5:	push   r12
   1400018c7:	push   r14
   1400018c9:	push   r15
   1400018cb:	sub    rsp,0x180
   1400018d2:	mov    rax,QWORD PTR [rip+0x49747]        # 0x14004b020
   1400018d9:	xor    rax,rsp
   1400018dc:	mov    QWORD PTR [rsp+0x170],rax
   1400018e4:	xor    ebx,ebx
   1400018e6:	mov    r15,r9
   1400018e9:	mov    r14,r8
   1400018ec:	mov    rbp,rdx
   1400018ef:	mov    r12,rcx
   1400018f2:	test   r9,r9
   1400018f5:	jne    0x1400018ff
   1400018f7:	lea    eax,[rbx+0x57]
   1400018fa:	jmp    0x140001a91
   1400018ff:	cmp    QWORD PTR [r9],rbx
   140001902:	jne    0x140001a8f
   140001908:	cmp    BYTE PTR [rip+0x4e676],bl        # 0x14004ff84
   14000190e:	mov    esi,ebx
   140001910:	jne    0x140001a01
   140001916:	lea    rcx,[rsp+0x50]
   14000191b:	mov    DWORD PTR [rsp+0x50],0x114
   140001923:	call   QWORD PTR [rip+0x3097f]        # 0x1400322a8
   140001929:	test   eax,eax
   14000192b:	je     0x140001958
   14000192d:	mov    ecx,DWORD PTR [rsp+0x54]
   140001931:	cmp    ecx,0x6
   140001934:	setb   al
   140001937:	mov    BYTE PTR [rip+0x4e653],al        # 0x14004ff90
   14000193d:	cmp    ecx,0x6
   140001940:	ja     0x14000194b
   140001942:	jne    0x140001950
   140001944:	cmp    DWORD PTR [rsp+0x58],0x1
   140001949:	jbe    0x140001950
   14000194b:	mov    esi,0x1
   140001950:	test   al,al
   140001952:	jne    0x1400019f8
   140001958:	lea    rcx,[rip+0x325b9]        # 0x140033f18
   14000195f:	call   QWORD PTR [rip+0x3094b]        # 0x1400322b0
   140001965:	mov    rdi,rax
   140001968:	test   rax,rax
   14000196b:	jne    0x140001986
   14000196d:	test   esi,esi
   14000196f:	je     0x1400019cc
   140001971:	lea    rcx,[rip+0x32768]        # 0x1400340e0
   140001978:	call   QWORD PTR [rip+0x30932]        # 0x1400322b0
   14000197e:	mov    rdi,rax
   140001981:	test   rax,rax
   140001984:	je     0x1400019cc
   140001986:	lea    rdx,[rip+0x327a3]        # 0x140034130
   14000198d:	mov    rcx,rdi
   140001990:	call   QWORD PTR [rip+0x3090a]        # 0x1400322a0
   140001996:	mov    QWORD PTR [rip+0x4e5eb],rax        # 0x14004ff88
   14000199d:	test   rax,rax
   1400019a0:	je     0x1400019cc
   1400019a2:	lea    rdx,[rip+0x32797]        # 0x140034140
   1400019a9:	mov    rcx,rdi
   1400019ac:	call   QWORD PTR [rip+0x308ee]        # 0x1400322a0
   1400019b2:	mov    QWORD PTR [rip+0x496c7],rax        # 0x14004b080
   1400019b9:	test   rax,rax
   1400019bc:	jne    0x1400019d6
   1400019be:	lea    rax,[rip+0xfffffffffffffefb]        # 0x1400018c0
   1400019c5:	mov    QWORD PTR [rip+0x496b4],rax        # 0x14004b080
   1400019cc:	mov    al,0x1
   1400019ce:	mov    BYTE PTR [rip+0x4e5bc],al        # 0x14004ff90
   1400019d4:	jmp    0x1400019f8
   1400019d6:	lea    rdx,[rip+0x32773]        # 0x140034150
   1400019dd:	mov    rcx,rdi
   1400019e0:	call   QWORD PTR [rip+0x308ba]        # 0x1400322a0
   1400019e6:	mov    QWORD PTR [rip+0x4e5fb],rax        # 0x14004ffe8
   1400019ed:	test   rax,rax
   1400019f0:	je     0x1400019be
   1400019f2:	mov    al,BYTE PTR [rip+0x4e598]        # 0x14004ff90
   1400019f8:	mov    BYTE PTR [rip+0x4e585],0x1        # 0x14004ff84
   1400019ff:	jmp    0x140001a07
   140001a01:	mov    al,BYTE PTR [rip+0x4e589]        # 0x14004ff90
   140001a07:	test   al,al
   140001a09:	jne    0x140001a39
   140001a0b:	mov    rbx,QWORD PTR [rip+0x4966e]        # 0x14004b080
   140001a12:	lea    rax,[rip+0xfffffffffffffd67]        # 0x140001780
   140001a19:	test   rbp,rbp
   140001a1c:	mov    rcx,rbx
   140001a1f:	cmove  rbp,rax
   140001a23:	call   QWORD PTR [rip+0x30c7f]        # 0x1400326a8
   140001a29:	mov    r9,r15
   140001a2c:	mov    r8,r14
   140001a2f:	mov    rdx,rbp
   140001a32:	mov    rcx,r12
   140001a35:	call   rbx
   140001a37:	jmp    0x140001a8d
   140001a39:	test   r14,r14
   140001a3c:	jne    0x140001a44
   140001a3e:	lea    ebx,[r14+0x57]
   140001a42:	jmp    0x140001a8f
   140001a44:	mov    QWORD PTR [rsp+0x38],r14
   140001a49:	lea    rax,[rip+0xfffffffffffffbc0]        # 0x140001610
   140001a50:	test   rbp,rbp
   140001a53:	mov    QWORD PTR [rsp+0x30],rbx
   140001a58:	mov    QWORD PTR [rsp+0x28],rbx
   140001a5d:	mov    r9d,0x1
   140001a63:	cmove  rbp,rax
   140001a67:	mov    QWORD PTR [r15],r14
   140001a6a:	lea    rax,[rsp+0x40]
   140001a6f:	mov    QWORD PTR [rsp+0x40],r12
   140001a74:	mov    rcx,rbp
   140001a77:	mov    QWORD PTR [rsp+0x20],rax
   140001a7c:	mov    r8,r12
   140001a7f:	mov    QWORD PTR [rsp+0x48],rbx
   140001a84:	mov    rdx,r14
   140001a87:	call   QWORD PTR [rip+0x3058b]        # 0x140032018
   140001a8d:	mov    ebx,eax
   140001a8f:	mov    eax,ebx
   140001a91:	mov    rcx,QWORD PTR [rsp+0x170]
   140001a99:	xor    rcx,rsp
   140001a9c:	call   0x14002dd00
   140001aa1:	add    rsp,0x180
   140001aa8:	pop    r15
   140001aaa:	pop    r14
   140001aac:	pop    r12
   140001aae:	pop    rdi
   140001aaf:	pop    rsi
   140001ab0:	pop    rbp
   140001ab1:	pop    rbx
   140001ab2:	ret    
   140001ab3:	int3   
   140001ab4:	int3   
   140001ab5:	int3   
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	mov    QWORD PTR [rsp+0x8],rbx
   140001ac1:	mov    QWORD PTR [rsp+0x10],rsi
   140001ac6:	push   rdi
   140001ac7:	sub    rsp,0x20
   140001acb:	mov    rdi,r8
   140001ace:	mov    rbx,rcx
   140001ad1:	test   dl,dl
   140001ad3:	je     0x140001af5
   140001ad5:	cmp    QWORD PTR [rcx+0x18],0x10
   140001ada:	jb     0x140001af5
   140001adc:	mov    rsi,QWORD PTR [rcx]
   140001adf:	test   r8,r8
   140001ae2:	je     0x140001aec
   140001ae4:	mov    rdx,rsi
   140001ae7:	call   0x14002e2f2
   140001aec:	mov    rcx,rsi
   140001aef:	call   QWORD PTR [rip+0x30ad3]        # 0x1400325c8
   140001af5:	mov    rsi,QWORD PTR [rsp+0x38]
   140001afa:	mov    QWORD PTR [rbx+0x18],0xf
   140001b02:	mov    QWORD PTR [rbx+0x10],rdi
   140001b06:	mov    BYTE PTR [rdi+rbx*1],0x0
   140001b0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b0f:	add    rsp,0x20
   140001b13:	pop    rdi
   140001b14:	ret    
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	mov    QWORD PTR [rsp+0x8],rbx
   140001b21:	mov    QWORD PTR [rsp+0x10],rsi
   140001b26:	push   rdi
   140001b27:	sub    rsp,0x20
   140001b2b:	mov    rdi,r8
   140001b2e:	mov    rsi,rdx
   140001b31:	mov    rbx,rcx
   140001b34:	test   rdx,rdx
   140001b37:	je     0x140001b85
   140001b39:	cmp    QWORD PTR [rcx+0x18],0x10
   140001b3e:	jb     0x140001b45
   140001b40:	mov    rax,QWORD PTR [rcx]
   140001b43:	jmp    0x140001b48
   140001b45:	mov    rax,rcx
   140001b48:	cmp    rdx,rax
   140001b4b:	jb     0x140001b85
   140001b4d:	cmp    QWORD PTR [rcx+0x18],0x10
   140001b52:	jb     0x140001b57
   140001b54:	mov    rcx,QWORD PTR [rcx]
   140001b57:	add    rcx,QWORD PTR [rbx+0x10]
   140001b5b:	cmp    rcx,rdx
   140001b5e:	jbe    0x140001b85
   140001b60:	cmp    QWORD PTR [rbx+0x18],0x10
   140001b65:	jb     0x140001b6c
   140001b67:	mov    rax,QWORD PTR [rbx]
   140001b6a:	jmp    0x140001b6f
   140001b6c:	mov    rax,rbx
   140001b6f:	sub    rsi,rax
   140001b72:	mov    r9,r8
   140001b75:	mov    r8,rsi
   140001b78:	mov    rdx,rbx
   140001b7b:	mov    rcx,rbx
   140001b7e:	call   0x140001c38
   140001b83:	jmp    0x140001bff
   140001b85:	cmp    r8,0xfffffffffffffffe
   140001b89:	ja     0x140001c0f
   140001b8f:	cmp    QWORD PTR [rbx+0x18],r8
   140001b93:	jae    0x140001ba6
   140001b95:	mov    r8,QWORD PTR [rbx+0x10]
   140001b99:	mov    rdx,rdi
   140001b9c:	mov    rcx,rbx
   140001b9f:	call   0x140001e00
   140001ba4:	jmp    0x140001bc1
   140001ba6:	test   r8,r8
   140001ba9:	jne    0x140001bc1
   140001bab:	and    QWORD PTR [rbx+0x10],r8
   140001baf:	cmp    QWORD PTR [rbx+0x18],0x10
   140001bb4:	jb     0x140001bbb
   140001bb6:	mov    rax,QWORD PTR [rbx]
   140001bb9:	jmp    0x140001bbe
   140001bbb:	mov    rax,rbx
   140001bbe:	mov    BYTE PTR [rax],0x0
   140001bc1:	test   rdi,rdi
   140001bc4:	je     0x140001bfc
   140001bc6:	cmp    QWORD PTR [rbx+0x18],0x10
   140001bcb:	jb     0x140001bd2
   140001bcd:	mov    rcx,QWORD PTR [rbx]
   140001bd0:	jmp    0x140001bd5
   140001bd2:	mov    rcx,rbx
   140001bd5:	test   rdi,rdi
   140001bd8:	je     0x140001be5
   140001bda:	mov    r8,rdi
   140001bdd:	mov    rdx,rsi
   140001be0:	call   0x14002e2f2
   140001be5:	cmp    QWORD PTR [rbx+0x18],0x10
   140001bea:	mov    QWORD PTR [rbx+0x10],rdi
   140001bee:	jb     0x140001bf5
   140001bf0:	mov    rax,QWORD PTR [rbx]
   140001bf3:	jmp    0x140001bf8
   140001bf5:	mov    rax,rbx
   140001bf8:	mov    BYTE PTR [rax+rdi*1],0x0
   140001bfc:	mov    rax,rbx
   140001bff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c04:	mov    rsi,QWORD PTR [rsp+0x38]
   140001c09:	add    rsp,0x20
   140001c0d:	pop    rdi
   140001c0e:	ret    
   140001c0f:	mov    rcx,rbx
   140001c12:	call   0x140001d4c
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	sub    rsp,0x28
   140001c24:	lea    rcx,[rip+0x32535]        # 0x140034160
   140001c2b:	call   0x14002d824
   140001c30:	int3   
   140001c31:	int3   
   140001c32:	int3   
   140001c33:	int3   
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	mov    QWORD PTR [rsp+0x8],rbx
   140001c3d:	mov    QWORD PTR [rsp+0x10],rbp
   140001c42:	mov    QWORD PTR [rsp+0x18],rsi
   140001c47:	push   rdi
   140001c48:	sub    rsp,0x20
   140001c4c:	mov    rdi,QWORD PTR [rdx+0x10]
   140001c50:	mov    rbp,r8
   140001c53:	mov    rsi,rdx
   140001c56:	mov    rbx,rcx
   140001c59:	cmp    rdi,r8
   140001c5c:	jb     0x140001d34
   140001c62:	sub    rdi,r8
   140001c65:	cmp    r9,rdi
   140001c68:	cmovb  rdi,r9
   140001c6c:	cmp    rcx,rdx
   140001c6f:	jne    0x140001c9d
   140001c71:	lea    rax,[rdi+r8*1]
   140001c75:	cmp    QWORD PTR [rcx+0x10],rax
   140001c79:	jb     0x140001d3a
   140001c7f:	cmp    QWORD PTR [rcx+0x18],0x10
   140001c84:	mov    QWORD PTR [rcx+0x10],rax
   140001c88:	jb     0x140001c8d
   140001c8a:	mov    rcx,QWORD PTR [rcx]
   140001c8d:	mov    BYTE PTR [rcx+rax*1],0x0
   140001c91:	xor    edx,edx
   140001c93:	mov    rcx,rbx
   140001c96:	call   0x140001d64
   140001c9b:	jmp    0x140001d1c
   140001c9d:	cmp    rdi,0xfffffffffffffffe
   140001ca1:	ja     0x140001d40
   140001ca7:	cmp    QWORD PTR [rcx+0x18],rdi
   140001cab:	jae    0x140001cbb
   140001cad:	mov    r8,QWORD PTR [rcx+0x10]
   140001cb1:	mov    rdx,rdi
   140001cb4:	call   0x140001e00
   140001cb9:	jmp    0x140001cd6
   140001cbb:	test   rdi,rdi
   140001cbe:	jne    0x140001cdb
   140001cc0:	and    QWORD PTR [rcx+0x10],rdi
   140001cc4:	cmp    QWORD PTR [rcx+0x18],0x10
   140001cc9:	jb     0x140001cd0
   140001ccb:	mov    rax,QWORD PTR [rcx]
   140001cce:	jmp    0x140001cd3
   140001cd0:	mov    rax,rcx
   140001cd3:	mov    BYTE PTR [rax],0x0
   140001cd6:	test   rdi,rdi
   140001cd9:	je     0x140001d1c
   140001cdb:	cmp    QWORD PTR [rsi+0x18],0x10
   140001ce0:	jb     0x140001ce5
   140001ce2:	mov    rsi,QWORD PTR [rsi]
   140001ce5:	cmp    QWORD PTR [rbx+0x18],0x10
   140001cea:	jb     0x140001cf1
   140001cec:	mov    rcx,QWORD PTR [rbx]
   140001cef:	jmp    0x140001cf4
   140001cf1:	mov    rcx,rbx
   140001cf4:	test   rdi,rdi
   140001cf7:	je     0x140001d05
   140001cf9:	lea    rdx,[rsi+rbp*1]
   140001cfd:	mov    r8,rdi
   140001d00:	call   0x14002e2f2
   140001d05:	cmp    QWORD PTR [rbx+0x18],0x10
   140001d0a:	mov    QWORD PTR [rbx+0x10],rdi
   140001d0e:	jb     0x140001d15
   140001d10:	mov    rax,QWORD PTR [rbx]
   140001d13:	jmp    0x140001d18
   140001d15:	mov    rax,rbx
   140001d18:	mov    BYTE PTR [rax+rdi*1],0x0
   140001d1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d21:	mov    rax,rbx
   140001d24:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d29:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d2e:	add    rsp,0x20
   140001d32:	pop    rdi
   140001d33:	ret    
   140001d34:	call   0x140001c20
   140001d39:	int3   
   140001d3a:	call   0x140001c20
   140001d3f:	int3   
   140001d40:	call   0x140001d4c
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	sub    rsp,0x28
   140001d50:	lea    rcx,[rip+0x32421]        # 0x140034178
   140001d57:	call   0x14002d7f8
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	int3   
   140001d61:	int3   
   140001d62:	int3   
   140001d63:	int3   
   140001d64:	mov    QWORD PTR [rsp+0x8],rbx
   140001d69:	push   rdi
   140001d6a:	sub    rsp,0x20
   140001d6e:	mov    rdi,QWORD PTR [rcx+0x10]
   140001d72:	mov    rbx,rcx
   140001d75:	cmp    rdi,rdx
   140001d78:	jb     0x140001df3
   140001d7a:	mov    rax,rdi
   140001d7d:	sub    rax,rdx
   140001d80:	cmp    rax,r8
   140001d83:	ja     0x140001d9e
   140001d85:	cmp    QWORD PTR [rcx+0x18],0x10
   140001d8a:	mov    QWORD PTR [rcx+0x10],rdx
   140001d8e:	jb     0x140001d95
   140001d90:	mov    rax,QWORD PTR [rcx]
   140001d93:	jmp    0x140001d98
   140001d95:	mov    rax,rcx
   140001d98:	mov    BYTE PTR [rax+rdx*1],0x0
   140001d9c:	jmp    0x140001de5
   140001d9e:	test   r8,r8
   140001da1:	je     0x140001de5
   140001da3:	cmp    QWORD PTR [rcx+0x18],0x10
   140001da8:	jb     0x140001daf
   140001daa:	mov    rax,QWORD PTR [rcx]
   140001dad:	jmp    0x140001db2
   140001daf:	mov    rax,rcx
   140001db2:	sub    rdi,r8
   140001db5:	lea    rcx,[rax+rdx*1]
   140001db9:	mov    rax,rdi
   140001dbc:	sub    rax,rdx
   140001dbf:	je     0x140001dce
   140001dc1:	lea    rdx,[rcx+r8*1]
   140001dc5:	mov    r8,rax
   140001dc8:	call   QWORD PTR [rip+0x306d2]        # 0x1400324a0
   140001dce:	cmp    QWORD PTR [rbx+0x18],0x10
   140001dd3:	mov    QWORD PTR [rbx+0x10],rdi
   140001dd7:	jb     0x140001dde
   140001dd9:	mov    rax,QWORD PTR [rbx]
   140001ddc:	jmp    0x140001de1
   140001dde:	mov    rax,rbx
   140001de1:	mov    BYTE PTR [rax+rdi*1],0x0
   140001de5:	mov    rax,rbx
   140001de8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ded:	add    rsp,0x20
   140001df1:	pop    rdi
   140001df2:	ret    
   140001df3:	call   0x140001c20
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    rax,rsp
   140001e03:	mov    QWORD PTR [rax+0x18],r8
   140001e07:	mov    QWORD PTR [rax+0x10],rdx
   140001e0b:	mov    QWORD PTR [rax+0x8],rcx
   140001e0f:	push   rbx
   140001e10:	push   rsi
   140001e11:	push   rdi
   140001e12:	push   r14
   140001e14:	sub    rsp,0x38
   140001e18:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140001e20:	mov    rsi,r8
   140001e23:	mov    rbx,rcx
   140001e26:	mov    rdi,rdx
   140001e29:	or     rdi,0xf
   140001e2d:	mov    r9,0xfffffffffffffffe
   140001e34:	cmp    rdi,r9
   140001e37:	jbe    0x140001e3e
   140001e39:	mov    rdi,rdx
   140001e3c:	jmp    0x140001e6f
   140001e3e:	mov    r8,QWORD PTR [rcx+0x18]
   140001e42:	mov    rcx,r8
   140001e45:	shr    rcx,1
   140001e48:	movabs rax,0xaaaaaaaaaaaaaaab
   140001e52:	mul    rdi
   140001e55:	shr    rdx,1
   140001e58:	cmp    rcx,rdx
   140001e5b:	jbe    0x140001e6f
   140001e5d:	mov    rax,r9
   140001e60:	sub    rax,rcx
   140001e63:	cmp    r8,rax
   140001e66:	lea    rdi,[rcx+r8*1]
   140001e6a:	jbe    0x140001e6f
   140001e6c:	mov    rdi,r9
   140001e6f:	lea    rcx,[rdi+0x1]
   140001e73:	xor    r14d,r14d
   140001e76:	test   rcx,rcx
   140001e79:	je     0x140001e91
   140001e7b:	cmp    rcx,0xffffffffffffffff
   140001e7f:	ja     0x140001e8b
   140001e81:	call   0x140023f10
   140001e86:	mov    r14,rax
   140001e89:	jmp    0x140001e91
   140001e8b:	call   0x14000203c
   140001e90:	nop
   140001e91:	jmp    0x140001ea7
   140001e93:	mov    rbx,QWORD PTR [rsp+0x60]
   140001e98:	mov    rsi,QWORD PTR [rsp+0x70]
   140001e9d:	mov    rdi,QWORD PTR [rsp+0x68]
   140001ea2:	mov    r14,QWORD PTR [rsp+0x78]
   140001ea7:	test   rsi,rsi
   140001eaa:	je     0x140001ecb
   140001eac:	cmp    QWORD PTR [rbx+0x18],0x10
   140001eb1:	jb     0x140001eb8
   140001eb3:	mov    rdx,QWORD PTR [rbx]
   140001eb6:	jmp    0x140001ebb
   140001eb8:	mov    rdx,rbx
   140001ebb:	test   rsi,rsi
   140001ebe:	je     0x140001ecb
   140001ec0:	mov    r8,rsi
   140001ec3:	mov    rcx,r14
   140001ec6:	call   0x14002e2f2
   140001ecb:	cmp    QWORD PTR [rbx+0x18],0x10
   140001ed0:	jb     0x140001edb
   140001ed2:	mov    rcx,QWORD PTR [rbx]
   140001ed5:	call   QWORD PTR [rip+0x306ed]        # 0x1400325c8
   140001edb:	mov    BYTE PTR [rbx],0x0
   140001ede:	mov    QWORD PTR [rbx],r14
   140001ee1:	mov    QWORD PTR [rbx+0x18],rdi
   140001ee5:	mov    QWORD PTR [rbx+0x10],rsi
   140001ee9:	cmp    rdi,0x10
   140001eed:	jb     0x140001ef2
   140001eef:	mov    rbx,r14
   140001ef2:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001ef6:	add    rsp,0x38
   140001efa:	pop    r14
   140001efc:	pop    rdi
   140001efd:	pop    rsi
   140001efe:	pop    rbx
   140001eff:	ret    
   140001f00:	int3   
   140001f01:	int3   
   140001f02:	int3   
   140001f03:	int3   
   140001f04:	int3   
   140001f05:	int3   
   140001f06:	int3   
   140001f07:	int3   
   140001f08:	sub    rsp,0x38
   140001f0c:	and    QWORD PTR [rsp+0x20],0x0
   140001f12:	movzx  r9d,dx
   140001f16:	mov    edx,0x2b
   140001f1b:	call   QWORD PTR [rip+0x300ff]        # 0x140032020
   140001f21:	add    rsp,0x38
   140001f25:	ret    
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	mov    r11,rsp
   140001f2f:	mov    QWORD PTR [r11+0x20],r9
   140001f33:	sub    rsp,0x48
   140001f37:	and    QWORD PTR [r11-0x18],0x0
   140001f3c:	lea    rax,[r11+0x20]
   140001f40:	movzx  r9d,dx
   140001f44:	lea    r8,[rip+0x35a4d]        # 0x140037998
   140001f4b:	mov    QWORD PTR [r11-0x20],0x8
   140001f53:	mov    edx,0x2b
   140001f58:	mov    QWORD PTR [r11-0x28],rax
   140001f5c:	call   QWORD PTR [rip+0x300be]        # 0x140032020
   140001f62:	add    rsp,0x48
   140001f66:	ret    
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    r11,rsp
   140001f73:	mov    DWORD PTR [r11+0x20],r9d
   140001f77:	sub    rsp,0x48
   140001f7b:	and    QWORD PTR [r11-0x18],0x0
   140001f80:	lea    rax,[r11+0x20]
   140001f84:	movzx  r9d,dx
   140001f88:	mov    edx,0x2b
   140001f8d:	mov    QWORD PTR [r11-0x20],0x4
   140001f95:	mov    QWORD PTR [r11-0x28],rax
   140001f99:	call   QWORD PTR [rip+0x30081]        # 0x140032020
   140001f9f:	add    rsp,0x48
   140001fa3:	ret    
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	rex push rbx
   140001fae:	sub    rsp,0x20
   140001fb2:	mov    rbx,rcx
   140001fb5:	call   QWORD PTR [rip+0x3050d]        # 0x1400324c8
   140001fbb:	lea    rax,[rip+0x3247e]        # 0x140034440
   140001fc2:	mov    QWORD PTR [rbx],rax
   140001fc5:	mov    rax,rbx
   140001fc8:	add    rsp,0x20
   140001fcc:	pop    rbx
   140001fcd:	ret    
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	int3   
   140001fd1:	int3   
   140001fd2:	int3   
   140001fd3:	int3   
   140001fd4:	rex push rbx
   140001fd6:	sub    rsp,0x30
   140001fda:	and    DWORD PTR [rsp+0x20],0x0
   140001fdf:	lea    r9,[rip+0x4c822]        # 0x14004e808
   140001fe6:	lea    r8,[rip+0x4c863]        # 0x14004e850
   140001fed:	xor    edx,edx
   140001fef:	mov    rbx,rcx
   140001ff2:	call   0x14002e862
   140001ff7:	test   rax,rax
   140001ffa:	je     0x140002001
   140001ffc:	mov    eax,DWORD PTR [rax+0x18]
   140001fff:	jmp    0x14000202d
   140002001:	and    DWORD PTR [rsp+0x20],0x0
   140002006:	lea    r9,[rip+0x4c81b]        # 0x14004e828
   14000200d:	lea    r8,[rip+0x4c83c]        # 0x14004e850
   140002014:	xor    edx,edx
   140002016:	mov    rcx,rbx
   140002019:	call   0x14002e862
   14000201e:	neg    rax
   140002021:	sbb    eax,eax
   140002023:	and    eax,0x6c009
   140002028:	add    eax,0x80004005
   14000202d:	add    rsp,0x30
   140002031:	pop    rbx
   140002032:	ret    
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	sub    rsp,0x48
   140002040:	lea    rcx,[rsp+0x20]
   140002045:	call   0x1400022d4
   14000204a:	lea    rdx,[rip+0x471bf]        # 0x140049210
   140002051:	lea    rcx,[rsp+0x20]
   140002056:	call   0x14002e2da
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	int3   
   140002061:	int3   
   140002062:	int3   
   140002063:	int3   
   140002064:	mov    QWORD PTR [rsp+0x8],rbx
   140002069:	push   rdi
   14000206a:	sub    rsp,0x20
   14000206e:	mov    edi,edx
   140002070:	mov    rbx,rcx
   140002073:	call   QWORD PTR [rip+0x3056f]        # 0x1400325e8
   140002079:	lea    rax,[rip+0x323a8]        # 0x140034428
   140002080:	mov    DWORD PTR [rbx+0x18],edi
   140002083:	mov    QWORD PTR [rbx],rax
   140002086:	mov    BYTE PTR [rbx+0x1c],0x0
   14000208a:	mov    rcx,QWORD PTR [rip+0x48fe7]        # 0x14004b078
   140002091:	lea    rax,[rip+0x48fe0]        # 0x14004b078
   140002098:	cmp    rcx,rax
   14000209b:	je     0x1400020bb
   14000209d:	test   BYTE PTR [rcx+0x1c],0x1
   1400020a1:	je     0x1400020bb
   1400020a3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020a7:	lea    r8,[rip+0x32d9a]        # 0x140034e48
   1400020ae:	mov    edx,0xf
   1400020b3:	mov    r9d,edi
   1400020b6:	call   0x140001f70
   1400020bb:	mov    rax,rbx
   1400020be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020c3:	add    rsp,0x20
   1400020c7:	pop    rdi
   1400020c8:	ret    
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d5:	push   rdi
   1400020d6:	sub    rsp,0x20
   1400020da:	mov    ebx,edx
   1400020dc:	mov    rdi,rcx
   1400020df:	call   QWORD PTR [rip+0x303d3]        # 0x1400324b8
   1400020e5:	test   bl,0x1
   1400020e8:	je     0x1400020f3
   1400020ea:	mov    rcx,rdi
   1400020ed:	call   QWORD PTR [rip+0x304d5]        # 0x1400325c8
   1400020f3:	mov    rax,rdi
   1400020f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020fb:	add    rsp,0x20
   1400020ff:	pop    rdi
   140002100:	ret    
   140002101:	int3   
   140002102:	int3   
   140002103:	int3   
   140002104:	int3   
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	mov    QWORD PTR [rsp+0x8],rbx
   14000210d:	push   rdi
   14000210e:	sub    rsp,0x20
   140002112:	mov    rbx,rdx
   140002115:	mov    rdi,rcx
   140002118:	call   QWORD PTR [rip+0x304ca]        # 0x1400325e8
   14000211e:	lea    rax,[rip+0x32303]        # 0x140034428
   140002125:	mov    QWORD PTR [rdi],rax
   140002128:	mov    eax,DWORD PTR [rbx+0x18]
   14000212b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002130:	mov    DWORD PTR [rdi+0x18],eax
   140002133:	mov    rax,rdi
   140002136:	mov    BYTE PTR [rdi+0x1c],0x0
   14000213a:	add    rsp,0x20
   14000213e:	pop    rdi
   14000213f:	ret    
   140002140:	int3   
   140002141:	int3   
   140002142:	int3   
   140002143:	int3   
   140002144:	int3   
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	rex push rbx
   140002152:	sub    rsp,0x20
   140002156:	cmp    BYTE PTR [rcx+0x1c],0x0
   14000215a:	mov    rbx,rcx
   14000215d:	jne    0x14000217c
   14000215f:	mov    r9d,DWORD PTR [rbx+0x18]
   140002163:	lea    r8,[rip+0x32cc6]        # 0x140034e30
   14000216a:	add    rcx,0x1d
   14000216e:	mov    edx,0xb
   140002173:	call   0x1400021ec
   140002178:	mov    BYTE PTR [rbx+0x1c],0x1
   14000217c:	lea    rax,[rbx+0x1d]
   140002180:	add    rsp,0x20
   140002184:	pop    rbx
   140002185:	ret    
   140002186:	int3   
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	sub    rsp,0x58
   140002190:	test   ecx,ecx
   140002192:	js     0x1400021c7
   140002194:	mov    rcx,QWORD PTR [rip+0x48edd]        # 0x14004b078
   14000219b:	lea    rax,[rip+0x48ed6]        # 0x14004b078
   1400021a2:	cmp    rcx,rax
   1400021a5:	je     0x1400021c2
   1400021a7:	test   BYTE PTR [rcx+0x1c],0x1
   1400021ab:	je     0x1400021c2
   1400021ad:	mov    rcx,QWORD PTR [rcx+0x10]
   1400021b1:	lea    r8,[rip+0x32c90]        # 0x140034e48
   1400021b8:	mov    edx,0x10
   1400021bd:	call   0x140001f08
   1400021c2:	mov    ecx,0x8000ffff
   1400021c7:	mov    edx,ecx
   1400021c9:	lea    rcx,[rsp+0x20]
   1400021ce:	call   0x140002064
   1400021d3:	lea    rdx,[rip+0x46fae]        # 0x140049188
   1400021da:	lea    rcx,[rsp+0x20]
   1400021df:	call   0x14002e2da
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	mov    QWORD PTR [rsp+0x18],r8
   1400021f1:	mov    QWORD PTR [rsp+0x20],r9
   1400021f6:	push   rbx
   1400021f7:	push   rsi
   1400021f8:	push   rdi
   1400021f9:	sub    rsp,0x20
   1400021fd:	xor    edi,edi
   1400021ff:	lea    rax,[rdx-0x1]
   140002203:	cmp    rax,0x7ffffffe
   140002209:	mov    rsi,rcx
   14000220c:	mov    ecx,0x80070057
   140002211:	cmova  edi,ecx
   140002214:	test   edi,edi
   140002216:	js     0x14000224d
   140002218:	lea    rbx,[rdx-0x1]
   14000221c:	mov    rcx,rsi
   14000221f:	mov    rdx,rbx
   140002222:	lea    r9,[rsp+0x58]
   140002227:	xor    edi,edi
   140002229:	call   QWORD PTR [rip+0x303b1]        # 0x1400325e0
   14000222f:	test   eax,eax
   140002231:	js     0x140002242
   140002233:	cdqe   
   140002235:	cmp    rax,rbx
   140002238:	ja     0x140002242
   14000223a:	jne    0x140002255
   14000223c:	mov    BYTE PTR [rbx+rsi*1],dil
   140002240:	jmp    0x140002255
   140002242:	mov    BYTE PTR [rbx+rsi*1],dil
   140002246:	mov    edi,0x8007007a
   14000224b:	jmp    0x140002255
   14000224d:	test   rdx,rdx
   140002250:	je     0x140002255
   140002252:	mov    BYTE PTR [rsi],0x0
   140002255:	mov    eax,edi
   140002257:	add    rsp,0x20
   14000225b:	pop    rdi
   14000225c:	pop    rsi
   14000225d:	pop    rbx
   14000225e:	ret    
   14000225f:	int3   
   140002260:	int3   
   140002261:	int3   
   140002262:	int3   
   140002263:	int3   
   140002264:	int3   
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	rex.W jmp QWORD PTR [rip+0x30249]        # 0x1400324b8
   14000226f:	int3   
   140002270:	int3   
   140002271:	int3   
   140002272:	int3   
   140002273:	int3   
   140002274:	int3   
   140002275:	int3   
   140002276:	int3   
   140002277:	int3   
   140002278:	lea    rax,[rip+0x321c1]        # 0x140034440
   14000227f:	mov    QWORD PTR [rcx],rax
   140002282:	rex.W jmp QWORD PTR [rip+0x3022f]        # 0x1400324b8
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    QWORD PTR [rsp+0x8],rbx
   140002295:	push   rdi
   140002296:	sub    rsp,0x20
   14000229a:	lea    rax,[rip+0x3219f]        # 0x140034440
   1400022a1:	mov    ebx,edx
   1400022a3:	mov    QWORD PTR [rcx],rax
   1400022a6:	mov    rdi,rcx
   1400022a9:	call   QWORD PTR [rip+0x30209]        # 0x1400324b8
   1400022af:	test   bl,0x1
   1400022b2:	je     0x1400022bd
   1400022b4:	mov    rcx,rdi
   1400022b7:	call   QWORD PTR [rip+0x3030b]        # 0x1400325c8
   1400022bd:	mov    rax,rdi
   1400022c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022c5:	add    rsp,0x20
   1400022c9:	pop    rdi
   1400022ca:	ret    
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	int3   
   1400022d1:	int3   
   1400022d2:	int3   
   1400022d3:	int3   
   1400022d4:	rex push rbx
   1400022d6:	sub    rsp,0x20
   1400022da:	lea    rax,[rip+0x32b57]        # 0x140034e38
   1400022e1:	mov    r8d,0x1
   1400022e7:	lea    rdx,[rsp+0x30]
   1400022ec:	mov    QWORD PTR [rsp+0x30],rax
   1400022f1:	mov    rbx,rcx
   1400022f4:	call   QWORD PTR [rip+0x301c6]        # 0x1400324c0
   1400022fa:	lea    rax,[rip+0x3213f]        # 0x140034440
   140002301:	mov    QWORD PTR [rbx],rax
   140002304:	mov    rax,rbx
   140002307:	add    rsp,0x20
   14000230b:	pop    rbx
   14000230c:	ret    
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	int3   
   140002311:	int3   
   140002312:	int3   
   140002313:	int3   
   140002314:	mov    DWORD PTR [rsp+0x20],r9d
   140002319:	sub    rsp,0x68
   14000231d:	mov    rax,QWORD PTR [rsp+0x98]
   140002325:	xor    r8d,r8d
   140002328:	mov    r10,rcx
   14000232b:	test   rax,rax
   14000232e:	je     0x140002354
   140002330:	cmp    WORD PTR [rax],r8w
   140002334:	jne    0x14000233c
   140002336:	lea    ecx,[r8+0xe]
   14000233a:	jmp    0x140002359
   14000233c:	or     rcx,0xffffffffffffffff
   140002340:	inc    rcx
   140002343:	cmp    WORD PTR [rax+rcx*2],r8w
   140002348:	jne    0x140002340
   14000234a:	lea    rcx,[rcx*2+0x2]
   140002352:	jmp    0x140002359
   140002354:	mov    ecx,0xa
   140002359:	test   rax,rax
   14000235c:	je     0x14000236f
   14000235e:	cmp    WORD PTR [rax],r8w
   140002362:	lea    rdx,[rip+0x32aef]        # 0x140034e58
   140002369:	cmove  rax,rdx
   14000236d:	jmp    0x140002376
   14000236f:	lea    rax,[rip+0x3312a]        # 0x1400354a0
   140002376:	mov    QWORD PTR [rsp+0x50],r8
   14000237b:	mov    edx,0x13
   140002380:	mov    QWORD PTR [rsp+0x48],rcx
   140002385:	lea    r8,[rip+0x33124]        # 0x1400354b0
   14000238c:	mov    QWORD PTR [rsp+0x40],rax
   140002391:	lea    rax,[rsp+0x90]
   140002399:	movzx  r9d,dx
   14000239d:	lea    ecx,[rdx-0xf]
   1400023a0:	mov    QWORD PTR [rsp+0x38],rcx
   1400023a5:	lea    edx,[rcx+0x27]
   1400023a8:	mov    QWORD PTR [rsp+0x30],rax
   1400023ad:	lea    rax,[rsp+0x88]
   1400023b5:	mov    QWORD PTR [rsp+0x28],rcx
   1400023ba:	mov    rcx,r10
   1400023bd:	mov    QWORD PTR [rsp+0x20],rax
   1400023c2:	call   QWORD PTR [rip+0x2fc58]        # 0x140032020
   1400023c8:	add    rsp,0x68
   1400023cc:	ret    
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	int3   
   1400023d1:	int3   
   1400023d2:	int3   
   1400023d3:	int3   
   1400023d4:	int3   
   1400023d5:	int3   
   1400023d6:	int3   
   1400023d7:	int3   
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023e5:	push   rdi
   1400023e6:	sub    rsp,0x20
   1400023ea:	mov    ebx,edx
   1400023ec:	mov    rdi,rcx
   1400023ef:	call   0x140002418
   1400023f4:	test   bl,0x1
   1400023f7:	je     0x140002402
   1400023f9:	mov    rcx,rdi
   1400023fc:	call   QWORD PTR [rip+0x301c6]        # 0x1400325c8
   140002402:	mov    rax,rdi
   140002405:	mov    rbx,QWORD PTR [rsp+0x30]
   14000240a:	add    rsp,0x20
   14000240e:	pop    rdi
   14000240f:	ret    
   140002410:	int3   
   140002411:	int3   
   140002412:	int3   
   140002413:	int3   
   140002414:	int3   
   140002415:	int3   
   140002416:	int3   
   140002417:	int3   
   140002418:	mov    QWORD PTR [rsp+0x8],rbx
   14000241d:	mov    QWORD PTR [rsp+0x10],rsi
   140002422:	mov    QWORD PTR [rsp+0x18],rdi
   140002427:	push   r14
   140002429:	sub    rsp,0x20
   14000242d:	lea    rax,[rip+0x32024]        # 0x140034458
   140002434:	mov    rdi,rcx
   140002437:	mov    QWORD PTR [rcx],rax
   14000243a:	lea    rsi,[rcx+0x98]
   140002441:	mov    rcx,rsi
   140002444:	call   0x140029ab0
   140002449:	mov    ebx,eax
   14000244b:	test   eax,eax
   14000244d:	js     0x14000249a
   14000244f:	or     ecx,0xffffffff
   140002452:	lock xadd DWORD PTR [rsi+0x8],ecx
   140002457:	dec    ecx
   140002459:	cmp    ecx,0x80000000
   14000245f:	jne    0x140002469
   140002461:	mov    rcx,rsi
   140002464:	call   0x140029c90
   140002469:	mov    rcx,QWORD PTR [rip+0x48c08]        # 0x14004b078
   140002470:	lea    rax,[rip+0x48c01]        # 0x14004b078
   140002477:	cmp    rcx,rax
   14000247a:	je     0x14000249a
   14000247c:	test   BYTE PTR [rcx+0x1c],0x1
   140002480:	je     0x14000249a
   140002482:	mov    rcx,QWORD PTR [rcx+0x10]
   140002486:	lea    r8,[rip+0x33023]        # 0x1400354b0
   14000248d:	mov    edx,0xa
   140002492:	mov    r9d,ebx
   140002495:	call   0x140001f70
   14000249a:	mov    rcx,rsi
   14000249d:	call   0x140029b84
   1400024a2:	mov    r14,QWORD PTR [rdi+0xd0]
   1400024a9:	test   r14,r14
   1400024ac:	je     0x1400024c3
   1400024ae:	mov    rax,QWORD PTR [r14]
   1400024b1:	mov    rbx,QWORD PTR [rax+0x8]
   1400024b5:	mov    rcx,rbx
   1400024b8:	call   QWORD PTR [rip+0x301ea]        # 0x1400326a8
   1400024be:	mov    rcx,r14
   1400024c1:	call   rbx
   1400024c3:	lea    rcx,[rdi+0xc0]
   1400024ca:	call   0x1400246d8
   1400024cf:	mov    rcx,rsi
   1400024d2:	call   0x140029b48
   1400024d7:	lea    rcx,[rdi+0x78]
   1400024db:	call   0x140029b48
   1400024e0:	lea    rcx,[rdi+0x50]
   1400024e4:	call   QWORD PTR [rip+0x2fd8e]        # 0x140032278
   1400024ea:	mov    rsi,QWORD PTR [rdi+0x48]
   1400024ee:	test   rsi,rsi
   1400024f1:	je     0x140002508
   1400024f3:	mov    rax,QWORD PTR [rsi]
   1400024f6:	mov    rbx,QWORD PTR [rax+0x8]
   1400024fa:	mov    rcx,rbx
   1400024fd:	call   QWORD PTR [rip+0x301a5]        # 0x1400326a8
   140002503:	mov    rcx,rsi
   140002506:	call   rbx
   140002508:	mov    rsi,QWORD PTR [rdi+0x40]
   14000250c:	test   rsi,rsi
   14000250f:	je     0x140002526
   140002511:	mov    rax,QWORD PTR [rsi]
   140002514:	mov    rbx,QWORD PTR [rax+0x8]
   140002518:	mov    rcx,rbx
   14000251b:	call   QWORD PTR [rip+0x30187]        # 0x1400326a8
   140002521:	mov    rcx,rsi
   140002524:	call   rbx
   140002526:	lea    rcx,[rdi+0x10]
   14000252a:	cmp    BYTE PTR [rcx+0x28],0x0
   14000252e:	je     0x14000253a
   140002530:	mov    BYTE PTR [rcx+0x28],0x0
   140002534:	call   QWORD PTR [rip+0x2fd3e]        # 0x140032278
   14000253a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000253f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002544:	mov    rdi,QWORD PTR [rsp+0x40]
   140002549:	add    rsp,0x20
   14000254d:	pop    r14
   14000254f:	ret    
   140002550:	int3   
   140002551:	int3   
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	mov    r11,rsp
   14000255b:	push   rdi
   14000255c:	push   r14
   14000255e:	push   r15
   140002560:	sub    rsp,0xb0
   140002567:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14000256f:	mov    QWORD PTR [r11+0x18],rbx
   140002573:	mov    QWORD PTR [r11+0x20],rsi
   140002577:	mov    rax,QWORD PTR [rip+0x48aa2]        # 0x14004b020
   14000257e:	xor    rax,rsp
   140002581:	mov    QWORD PTR [rsp+0xa0],rax
   140002589:	mov    r15b,dl
   14000258c:	mov    r14,rcx
   14000258f:	mov    QWORD PTR [rsp+0x50],rcx
   140002594:	xor    esi,esi
   140002596:	mov    QWORD PTR [r11-0x80],rsi
   14000259a:	mov    rdi,QWORD PTR [rcx+0x48]
   14000259e:	test   rdi,rdi
   1400025a1:	je     0x1400025bc
   1400025a3:	mov    rax,QWORD PTR [rdi]
   1400025a6:	mov    rbx,QWORD PTR [rax+0x8]
   1400025aa:	mov    rcx,rbx
   1400025ad:	call   QWORD PTR [rip+0x300f5]        # 0x1400326a8
   1400025b3:	mov    rcx,rdi
   1400025b6:	call   rbx
   1400025b8:	mov    QWORD PTR [r14+0x48],rsi
   1400025bc:	test   r14,r14
   1400025bf:	je     0x140002930
   1400025c5:	mov    QWORD PTR [r14+0x48],rsi
   1400025c9:	mov    QWORD PTR [rsp+0x38],rsi
   1400025ce:	lea    rcx,[rsp+0x38]
   1400025d3:	call   0x14000d490
   1400025d8:	test   eax,eax
   1400025da:	jns    0x1400025e4
   1400025dc:	mov    ecx,eax
   1400025de:	call   0x140029d64
   1400025e3:	int3   
   1400025e4:	mov    rdi,QWORD PTR [rsp+0x38]
   1400025e9:	test   rdi,rdi
   1400025ec:	je     0x140002602
   1400025ee:	mov    rax,QWORD PTR [rdi]
   1400025f1:	mov    rbx,QWORD PTR [rax]
   1400025f4:	mov    rcx,rbx
   1400025f7:	call   QWORD PTR [rip+0x300ab]        # 0x1400326a8
   1400025fd:	mov    rcx,rdi
   140002600:	call   rbx
   140002602:	mov    QWORD PTR [rsp+0x70],rdi
   140002607:	mov    QWORD PTR [rdi+0x88],r14
   14000260e:	call   0x140017164
   140002613:	mov    edx,eax
   140002615:	lea    rcx,[rdi+0x190]
   14000261c:	call   0x140015338
   140002621:	mov    QWORD PTR [rsp+0x58],rsi
   140002626:	mov    QWORD PTR [rsp+0x38],rsi
   14000262b:	lea    rdx,[rsp+0x38]
   140002630:	lea    rcx,[rip+0x35371]        # 0x1400379a8
   140002637:	call   QWORD PTR [rip+0x2fdf3]        # 0x140032430
   14000263d:	test   eax,eax
   14000263f:	jns    0x140002649
   140002641:	mov    ecx,eax
   140002643:	call   0x140029d64
   140002648:	int3   
   140002649:	mov    DWORD PTR [rsp+0x40],esi
   14000264d:	mov    DWORD PTR [rsp+0x34],esi
   140002651:	mov    DWORD PTR [rsp+0x30],0x4
   140002659:	mov    QWORD PTR [rsp+0x28],rsi
   14000265e:	lea    rax,[rsp+0x34]
   140002663:	mov    QWORD PTR [rsp+0x20],rax
   140002668:	lea    r9,[rsp+0x30]
   14000266d:	lea    r8,[rsp+0x40]
   140002672:	lea    rdx,[rip+0x35747]        # 0x140037dc0
   140002679:	mov    rcx,QWORD PTR [rsp+0x38]
   14000267e:	call   QWORD PTR [rip+0x2fda4]        # 0x140032428
   140002684:	test   eax,eax
   140002686:	js     0x140002928
   14000268c:	cmp    DWORD PTR [rsp+0x40],0x1
   140002691:	jbe    0x14000269d
   140002693:	mov    eax,0x8007065d
   140002698:	jmp    0x140002928
   14000269d:	cmp    DWORD PTR [rsp+0x30],esi
   1400026a1:	jne    0x1400026ab
   1400026a3:	mov    ebx,esi
   1400026a5:	mov    DWORD PTR [rsp+0x34],ebx
   1400026a9:	jmp    0x1400026af
   1400026ab:	mov    ebx,DWORD PTR [rsp+0x34]
   1400026af:	mov    rcx,QWORD PTR [rsp+0x38]
   1400026b4:	test   rcx,rcx
   1400026b7:	je     0x1400026bf
   1400026b9:	call   QWORD PTR [rip+0x2fd31]        # 0x1400323f0
   1400026bf:	mov    DWORD PTR [rdi+0x160],ebx
   1400026c5:	mov    QWORD PTR [rdi+0x158],rsi
   1400026cc:	mov    QWORD PTR [rdi+0xf8],rsi
   1400026d3:	mov    BYTE PTR [rdi+0x100],sil
   1400026da:	mov    BYTE PTR [rdi+0xf0],sil
   1400026e1:	mov    QWORD PTR [r14+0x48],rdi
   1400026e5:	mov    edi,esi
   1400026e7:	mov    rdx,r14
   1400026ea:	lea    rcx,[rsp+0x48]
   1400026ef:	call   0x140021680
   1400026f4:	test   eax,eax
   1400026f6:	jns    0x140002700
   1400026f8:	mov    ecx,eax
   1400026fa:	call   0x140029d64
   1400026ff:	nop
   140002700:	call   0x140025df8
   140002705:	test   al,al
   140002707:	jne    0x140002750
   140002709:	call   QWORD PTR [rip+0x2fc11]        # 0x140032320
   14000270f:	mov    edi,eax
   140002711:	test   eax,eax
   140002713:	jns    0x140002748
   140002715:	lea    rbx,[rip+0x4895c]        # 0x14004b078
   14000271c:	mov    rcx,QWORD PTR [rip+0x48955]        # 0x14004b078
   140002723:	cmp    rcx,rbx
   140002726:	je     0x140002757
   140002728:	test   BYTE PTR [rcx+0x1c],0x2
   14000272c:	je     0x140002757
   14000272e:	mov    edx,0xb
   140002733:	mov    r9d,eax
   140002736:	lea    r8,[rip+0x32d73]        # 0x1400354b0
   14000273d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002741:	call   0x140001f70
   140002746:	jmp    0x140002757
   140002748:	mov    BYTE PTR [r14+0xda],0x1
   140002750:	lea    rbx,[rip+0x48921]        # 0x14004b078
   140002757:	call   QWORD PTR [rip+0x2fbcb]        # 0x140032328
   14000275d:	mov    rcx,QWORD PTR [rip+0x48914]        # 0x14004b078
   140002764:	cmp    rcx,rbx
   140002767:	je     0x140002799
   140002769:	test   BYTE PTR [rcx+0x1c],0x4
   14000276d:	je     0x140002799
   14000276f:	lea    rax,[rip+0x326f2]        # 0x140034e68
   140002776:	lea    r9,[rip+0x326fb]        # 0x140034e78
   14000277d:	test   r15b,r15b
   140002780:	cmovne r9,rax
   140002784:	mov    edx,0xc
   140002789:	lea    r8,[rip+0x32d20]        # 0x1400354b0
   140002790:	mov    rcx,QWORD PTR [rcx+0x10]
   140002794:	call   0x1400038e0
   140002799:	lea    rax,[rip+0x32700]        # 0x140034ea0
   1400027a0:	lea    rdx,[rip+0x32719]        # 0x140034ec0
   1400027a7:	test   r15b,r15b
   1400027aa:	cmovne rdx,rax
   1400027ae:	lea    rcx,[rip+0x32753]        # 0x140034f08
   1400027b5:	call   QWORD PTR [rip+0x2fb75]        # 0x140032330
   1400027bb:	call   0x140023548
   1400027c0:	call   0x140025df8
   1400027c5:	test   al,al
   1400027c7:	jne    0x14000287d
   1400027cd:	call   QWORD PTR [rip+0x2fcad]        # 0x140032480
   1400027d3:	mov    edi,eax
   1400027d5:	test   eax,eax
   1400027d7:	jns    0x140002820
   1400027d9:	mov    rcx,QWORD PTR [rip+0x48898]        # 0x14004b078
   1400027e0:	cmp    rcx,rbx
   1400027e3:	je     0x140002803
   1400027e5:	test   BYTE PTR [rcx+0x1c],0x1
   1400027e9:	je     0x140002803
   1400027eb:	mov    edx,0xd
   1400027f0:	mov    r9d,eax
   1400027f3:	lea    r8,[rip+0x32cb6]        # 0x1400354b0
   1400027fa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400027fe:	call   0x140001f70
   140002803:	mov    edx,edi
   140002805:	lea    rcx,[rsp+0x78]
   14000280a:	call   0x140002064
   14000280f:	lea    rdx,[rip+0x46972]        # 0x140049188
   140002816:	lea    rcx,[rsp+0x78]
   14000281b:	call   0x14002e2da
   140002820:	mov    BYTE PTR [r14+0xd8],0x1
   140002828:	mov    ecx,0x12f
   14000282d:	call   QWORD PTR [rip+0x2fc3d]        # 0x140032470
   140002833:	mov    edi,eax
   140002835:	test   eax,eax
   140002837:	jns    0x140002865
   140002839:	mov    rcx,QWORD PTR [rip+0x48838]        # 0x14004b078
   140002840:	cmp    rcx,rbx
   140002843:	je     0x14000287d
   140002845:	test   BYTE PTR [rcx+0x1c],0x2
   140002849:	je     0x14000287d
   14000284b:	mov    edx,0xe
   140002850:	mov    r9d,eax
   140002853:	lea    r8,[rip+0x32c56]        # 0x1400354b0
   14000285a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000285e:	call   0x140001f70
   140002863:	jmp    0x14000287d
   140002865:	mov    BYTE PTR [r14+0xd9],0x1
   14000286d:	mov    edx,0x1
   140002872:	mov    ecx,0x13d
   140002877:	call   QWORD PTR [rip+0x2fbeb]        # 0x140032468
   14000287d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002882:	mov    rdx,rbx
   140002885:	mov    rcx,QWORD PTR [r14+0x48]
   140002889:	call   0x140007ecc
   14000288e:	lea    rcx,[r14+0xc0]
   140002895:	call   0x140024774
   14000289a:	test   eax,eax
   14000289c:	jns    0x1400028a5
   14000289e:	mov    ecx,eax
   1400028a0:	call   0x140029d64
   1400028a5:	lea    rcx,[r14+0x98]
   1400028ac:	call   0x140029ab0
   1400028b1:	test   eax,eax
   1400028b3:	jns    0x1400028bc
   1400028b5:	mov    ecx,eax
   1400028b7:	call   0x140029d64
   1400028bc:	lea    rcx,[rip+0x3266d]        # 0x140034f30
   1400028c3:	call   QWORD PTR [rip+0x2fa6f]        # 0x140032338
   1400028c9:	nop
   1400028ca:	jmp    0x1400028dc
   1400028cc:	xor    esi,esi
   1400028ce:	mov    rbx,QWORD PTR [rsp+0x48]
   1400028d3:	mov    edi,DWORD PTR [rsp+0x30]
   1400028d7:	mov    r14,QWORD PTR [rsp+0x50]
   1400028dc:	test   edi,edi
   1400028de:	jns    0x1400028f7
   1400028e0:	mov    edx,edi
   1400028e2:	lea    rcx,[rip+0x32667]        # 0x140034f50
   1400028e9:	call   QWORD PTR [rip+0x2fa41]        # 0x140032330
   1400028ef:	mov    ecx,edi
   1400028f1:	call   0x14000218c
   1400028f6:	int3   
   1400028f7:	mov    r15,QWORD PTR [r14+0xd0]
   1400028fe:	test   r15,r15
   140002901:	je     0x14000291f
   140002903:	mov    rax,QWORD PTR [r15]
   140002906:	mov    rdi,QWORD PTR [rax+0x8]
   14000290a:	mov    rcx,rdi
   14000290d:	call   QWORD PTR [rip+0x2fd95]        # 0x1400326a8
   140002913:	mov    rcx,r15
   140002916:	call   rdi
   140002918:	mov    QWORD PTR [r14+0xd0],rsi
   14000291f:	mov    QWORD PTR [r14+0xd0],rbx
   140002926:	jmp    0x140002970
   140002928:	mov    ecx,eax
   14000292a:	call   0x140029d64
   14000292f:	nop
   140002930:	lea    rbx,[rip+0x48741]        # 0x14004b078
   140002937:	mov    rcx,QWORD PTR [rip+0x4873a]        # 0x14004b078
   14000293e:	cmp    rcx,rbx
   140002941:	je     0x140002965
   140002943:	test   BYTE PTR [rcx+0x1c],0x1
   140002947:	je     0x140002965
   140002949:	mov    edx,0xa
   14000294e:	lea    r9,[rip+0x32fdb]        # 0x140035930
   140002955:	lea    r8,[rip+0x31a74]        # 0x1400343d0
   14000295c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002960:	call   0x1400038e0
   140002965:	mov    ecx,0x80070057
   14000296a:	call   0x140029d64
   14000296f:	nop
   140002970:	mov    rcx,QWORD PTR [rsp+0xa0]
   140002978:	xor    rcx,rsp
   14000297b:	call   0x14002dd00
   140002980:	lea    r11,[rsp+0xb0]
   140002988:	mov    rbx,QWORD PTR [r11+0x30]
   14000298c:	mov    rsi,QWORD PTR [r11+0x38]
   140002990:	mov    rsp,r11
   140002993:	pop    r15
   140002995:	pop    r14
   140002997:	pop    rdi
   140002998:	ret    
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	mov    rax,rsp
   1400029a3:	mov    QWORD PTR [rax+0x8],rcx
   1400029a7:	push   r14
   1400029a9:	sub    rsp,0x30
   1400029ad:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400029b5:	mov    QWORD PTR [rax+0x18],rbx
   1400029b9:	mov    QWORD PTR [rax+0x20],rdi
   1400029bd:	mov    r14,rcx
   1400029c0:	add    rcx,0x78
   1400029c4:	call   0x140029b84
   1400029c9:	nop
   1400029ca:	lea    rcx,[rip+0x325c7]        # 0x140034f98
   1400029d1:	call   QWORD PTR [rip+0x2f961]        # 0x140032338
   1400029d7:	mov    rcx,QWORD PTR [r14+0xb8]
   1400029de:	test   rcx,rcx
   1400029e1:	je     0x1400029f0
   1400029e3:	call   0x140025eb8
   1400029e8:	and    QWORD PTR [r14+0xb8],0x0
   1400029f0:	mov    rdi,QWORD PTR [r14+0xd0]
   1400029f7:	test   rdi,rdi
   1400029fa:	je     0x140002a3a
   1400029fc:	mov    rax,QWORD PTR [rdi]
   1400029ff:	mov    rbx,QWORD PTR [rax+0x30]
   140002a03:	mov    rcx,rbx
   140002a06:	call   QWORD PTR [rip+0x2fc9c]        # 0x1400326a8
   140002a0c:	mov    rcx,rdi
   140002a0f:	call   rbx
   140002a11:	mov    rdi,QWORD PTR [r14+0xd0]
   140002a18:	test   rdi,rdi
   140002a1b:	je     0x140002a3a
   140002a1d:	mov    rax,QWORD PTR [rdi]
   140002a20:	mov    rbx,QWORD PTR [rax+0x8]
   140002a24:	mov    rcx,rbx
   140002a27:	call   QWORD PTR [rip+0x2fc7b]        # 0x1400326a8
   140002a2d:	mov    rcx,rdi
   140002a30:	call   rbx
   140002a32:	and    QWORD PTR [r14+0xd0],0x0
   140002a3a:	mov    rcx,QWORD PTR [r14+0x48]
   140002a3e:	test   rcx,rcx
   140002a41:	je     0x140002a73
   140002a43:	add    rcx,0x90
   140002a4a:	jmp    0x140002a60
   140002a4c:	lea    edx,[r8-0x80000000]
   140002a53:	mov    eax,r8d
   140002a56:	lock cmpxchg DWORD PTR [rcx+0x8],edx
   140002a5b:	cmp    r8d,eax
   140002a5e:	je     0x140002a69
   140002a60:	mov    r8d,DWORD PTR [rcx+0x8]
   140002a64:	test   r8d,r8d
   140002a67:	jns    0x140002a4c
   140002a69:	test   r8d,r8d
   140002a6c:	jne    0x140002a73
   140002a6e:	call   0x140029c90
   140002a73:	cmp    QWORD PTR [r14+0x40],0x0
   140002a78:	je     0x140002ac3
   140002a7a:	lea    rcx,[rip+0x3253f]        # 0x140034fc0
   140002a81:	call   QWORD PTR [rip+0x2f8a9]        # 0x140032330
   140002a87:	mov    rdi,QWORD PTR [r14+0x40]
   140002a8b:	mov    rax,QWORD PTR [rdi]
   140002a8e:	mov    rbx,QWORD PTR [rax+0x10]
   140002a92:	mov    rcx,rbx
   140002a95:	call   QWORD PTR [rip+0x2fc0d]        # 0x1400326a8
   140002a9b:	mov    rcx,rdi
   140002a9e:	call   rbx
   140002aa0:	mov    rdi,QWORD PTR [r14+0x40]
   140002aa4:	test   rdi,rdi
   140002aa7:	je     0x140002ac3
   140002aa9:	mov    rax,QWORD PTR [rdi]
   140002aac:	mov    rbx,QWORD PTR [rax+0x8]
   140002ab0:	mov    rcx,rbx
   140002ab3:	call   QWORD PTR [rip+0x2fbef]        # 0x1400326a8
   140002ab9:	mov    rcx,rdi
   140002abc:	call   rbx
   140002abe:	and    QWORD PTR [r14+0x40],0x0
   140002ac3:	mov    rcx,QWORD PTR [r14+0x48]
   140002ac7:	test   rcx,rcx
   140002aca:	je     0x140002af4
   140002acc:	call   0x14000ae50
   140002ad1:	mov    rdi,QWORD PTR [r14+0x48]
   140002ad5:	test   rdi,rdi
   140002ad8:	je     0x140002af4
   140002ada:	mov    rax,QWORD PTR [rdi]
   140002add:	mov    rbx,QWORD PTR [rax+0x8]
   140002ae1:	mov    rcx,rbx
   140002ae4:	call   QWORD PTR [rip+0x2fbbe]        # 0x1400326a8
   140002aea:	mov    rcx,rdi
   140002aed:	call   rbx
   140002aef:	and    QWORD PTR [r14+0x48],0x0
   140002af4:	jmp    0x140002b4a
   140002af6:	mov    edi,DWORD PTR [rsp+0x48]
   140002afa:	test   edi,edi
   140002afc:	jns    0x140002b45
   140002afe:	mov    edx,edi
   140002b00:	lea    rcx,[rip+0x324e9]        # 0x140034ff0
   140002b07:	call   QWORD PTR [rip+0x2f823]        # 0x140032330
   140002b0d:	lea    rbx,[rip+0x48564]        # 0x14004b078
   140002b14:	mov    rcx,QWORD PTR [rip+0x4855d]        # 0x14004b078
   140002b1b:	cmp    rcx,rbx
   140002b1e:	je     0x140002b3e
   140002b20:	test   BYTE PTR [rcx+0x1c],0x1
   140002b24:	je     0x140002b3e
   140002b26:	mov    edx,0xf
   140002b2b:	mov    r9d,edi
   140002b2e:	lea    r8,[rip+0x3297b]        # 0x1400354b0
   140002b35:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b39:	call   0x140001f70
   140002b3e:	mov    r14,QWORD PTR [rsp+0x40]
   140002b43:	jmp    0x140002b51
   140002b45:	mov    r14,QWORD PTR [rsp+0x40]
   140002b4a:	lea    rbx,[rip+0x48527]        # 0x14004b078
   140002b51:	cmp    BYTE PTR [r14+0xd9],0x0
   140002b59:	je     0x140002b97
   140002b5b:	call   QWORD PTR [rip+0x2f8ff]        # 0x140032460
   140002b61:	test   eax,eax
   140002b63:	jns    0x140002b97
   140002b65:	mov    rcx,QWORD PTR [rip+0x4850c]        # 0x14004b078
   140002b6c:	cmp    rcx,rbx
   140002b6f:	je     0x140002b8f
   140002b71:	test   BYTE PTR [rcx+0x1c],0x2
   140002b75:	je     0x140002b8f
   140002b77:	mov    edx,0x10
   140002b7c:	mov    r9d,eax
   140002b7f:	lea    r8,[rip+0x3292a]        # 0x1400354b0
   140002b86:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b8a:	call   0x140001f70
   140002b8f:	mov    BYTE PTR [r14+0xd9],0x0
   140002b97:	cmp    BYTE PTR [r14+0xd8],0x0
   140002b9f:	je     0x140002baf
   140002ba1:	call   QWORD PTR [rip+0x2f8b1]        # 0x140032458
   140002ba7:	mov    BYTE PTR [r14+0xd8],0x0
   140002baf:	lea    rcx,[rip+0x3248a]        # 0x140035040
   140002bb6:	call   QWORD PTR [rip+0x2f77c]        # 0x140032338
   140002bbc:	cmp    BYTE PTR [r14+0xda],0x0
   140002bc4:	je     0x140002bd4
   140002bc6:	call   QWORD PTR [rip+0x2f774]        # 0x140032340
   140002bcc:	mov    BYTE PTR [r14+0xda],0x0
   140002bd4:	add    r14,0x98
   140002bdb:	jmp    0x140002bef
   140002bdd:	lea    ecx,[rdx-0x80000000]
   140002be3:	mov    eax,edx
   140002be5:	lock cmpxchg DWORD PTR [r14+0x8],ecx
   140002beb:	cmp    edx,eax
   140002bed:	je     0x140002bf7
   140002bef:	mov    edx,DWORD PTR [r14+0x8]
   140002bf3:	test   edx,edx
   140002bf5:	jns    0x140002bdd
   140002bf7:	test   edx,edx
   140002bf9:	jne    0x140002c03
   140002bfb:	mov    rcx,r14
   140002bfe:	call   0x140029c90
   140002c03:	or     eax,0xffffffff
   140002c06:	lock xadd DWORD PTR [r14+0x8],eax
   140002c0c:	dec    eax
   140002c0e:	cmp    eax,0x80000000
   140002c13:	jne    0x140002c1d
   140002c15:	mov    rcx,r14
   140002c18:	call   0x140029c90
   140002c1d:	mov    rbx,QWORD PTR [rsp+0x50]
   140002c22:	mov    rdi,QWORD PTR [rsp+0x58]
   140002c27:	add    rsp,0x30
   140002c2b:	pop    r14
   140002c2d:	ret    
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	int3   
   140002c31:	int3   
   140002c32:	int3   
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x18],rbx
   140002c45:	mov    QWORD PTR [rsp+0x20],rbp
   140002c4a:	push   rsi
   140002c4b:	push   rdi
   140002c4c:	push   r14
   140002c4e:	sub    rsp,0x50
   140002c52:	and    QWORD PTR [rsp+0x78],0x0
   140002c58:	or     rbp,0xffffffffffffffff
   140002c5c:	mov    QWORD PTR [r8],rbp
   140002c5f:	mov    r14,r8
   140002c62:	mov    rbx,QWORD PTR [rcx+0xc8]
   140002c69:	mov    rdi,rdx
   140002c6c:	call   QWORD PTR [rip+0x2f466]        # 0x1400320d8
   140002c72:	and    DWORD PTR [rsp+0x30],0x0
   140002c77:	lea    r9,[rsp+0x78]
   140002c7c:	and    DWORD PTR [rsp+0x28],0x0
   140002c81:	mov    rcx,rax
   140002c84:	mov    r8,rdi
   140002c87:	mov    DWORD PTR [rsp+0x20],0x4
   140002c8f:	mov    rdx,rbx
   140002c92:	call   QWORD PTR [rip+0x2f640]        # 0x1400322d8
   140002c98:	test   eax,eax
   140002c9a:	jne    0x140002d35
   140002ca0:	call   QWORD PTR [rip+0x2f5e2]        # 0x140032288
   140002ca6:	mov    esi,eax
   140002ca8:	test   BYTE PTR [rip+0x4b9dd],0x1        # 0x14004e68c
   140002caf:	je     0x140002d01
   140002cb1:	and    QWORD PTR [rsp+0x40],0x0
   140002cb7:	lea    ecx,[rbp+0xe]
   140002cba:	mov    DWORD PTR [rsp+0x70],eax
   140002cbe:	lea    r8,[rip+0x360fb]        # 0x140038dc0
   140002cc5:	mov    QWORD PTR [rsp+0x38],0x4
   140002cce:	lea    rax,[rsp+0x70]
   140002cd3:	mov    QWORD PTR [rsp+0x30],rax
   140002cd8:	lea    edx,[rbp+0x2c]
   140002cdb:	lea    rax,[rip+0x360da]        # 0x140038dbc
   140002ce2:	movzx  r9d,cx
   140002ce6:	mov    rcx,QWORD PTR [rip+0x4b993]        # 0x14004e680
   140002ced:	mov    QWORD PTR [rsp+0x28],0x4
   140002cf6:	mov    QWORD PTR [rsp+0x20],rax
   140002cfb:	call   QWORD PTR [rip+0x2f31f]        # 0x140032020
   140002d01:	mov    rcx,QWORD PTR [rsp+0x78]
   140002d06:	movzx  ebx,si
   140002d09:	or     ebx,0x80070000
   140002d0f:	test   esi,esi
   140002d11:	cmovle ebx,esi
   140002d14:	test   rcx,rcx
   140002d17:	je     0x140002d25
   140002d19:	call   QWORD PTR [rip+0x2f439]        # 0x140032158
   140002d1f:	and    QWORD PTR [rsp+0x78],0x0
   140002d25:	test   rdi,rdi
   140002d28:	je     0x140002d50
   140002d2a:	mov    rcx,rdi
   140002d2d:	call   QWORD PTR [rip+0x2f425]        # 0x140032158
   140002d33:	jmp    0x140002d50
   140002d35:	mov    rbp,QWORD PTR [rsp+0x78]
   140002d3a:	and    QWORD PTR [rsp+0x78],0x0
   140002d40:	test   rdi,rdi
   140002d43:	je     0x140002d4e
   140002d45:	mov    rcx,rdi
   140002d48:	call   QWORD PTR [rip+0x2f40a]        # 0x140032158
   140002d4e:	xor    ebx,ebx
   140002d50:	test   ebx,ebx
   140002d52:	jns    0x140002d87
   140002d54:	mov    rcx,QWORD PTR [rip+0x4831d]        # 0x14004b078
   140002d5b:	lea    rax,[rip+0x48316]        # 0x14004b078
   140002d62:	cmp    rcx,rax
   140002d65:	je     0x140002d8a
   140002d67:	test   BYTE PTR [rcx+0x1c],0x1
   140002d6b:	je     0x140002d8a
   140002d6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d71:	lea    r8,[rip+0x32738]        # 0x1400354b0
   140002d78:	mov    edx,0x11
   140002d7d:	mov    r9d,ebx
   140002d80:	call   0x140001f70
   140002d85:	jmp    0x140002d8a
   140002d87:	mov    QWORD PTR [r14],rbp
   140002d8a:	lea    r11,[rsp+0x50]
   140002d8f:	mov    eax,ebx
   140002d91:	mov    rbx,QWORD PTR [r11+0x30]
   140002d95:	mov    rbp,QWORD PTR [r11+0x38]
   140002d99:	mov    rsp,r11
   140002d9c:	pop    r14
   140002d9e:	pop    rdi
   140002d9f:	pop    rsi
   140002da0:	ret    
   140002da1:	int3   
   140002da2:	int3   
   140002da3:	int3   
   140002da4:	int3   
   140002da5:	int3   
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	rex push rbx
   140002db2:	sub    rsp,0x20
   140002db6:	and    DWORD PTR [rdx],0x0
   140002db9:	mov    rbx,rdx
   140002dbc:	call   QWORD PTR [rip+0x2f316]        # 0x1400320d8
   140002dc2:	mov    rcx,rax
   140002dc5:	call   QWORD PTR [rip+0x2f425]        # 0x1400321f0
   140002dcb:	test   eax,eax
   140002dcd:	jne    0x140002e17
   140002dcf:	call   QWORD PTR [rip+0x2f4b3]        # 0x140032288
   140002dd5:	mov    ebx,eax
   140002dd7:	mov    rcx,QWORD PTR [rip+0x4829a]        # 0x14004b078
   140002dde:	lea    rax,[rip+0x48293]        # 0x14004b078
   140002de5:	cmp    rcx,rax
   140002de8:	je     0x140002e08
   140002dea:	test   BYTE PTR [rcx+0x1c],0x1
   140002dee:	je     0x140002e08
   140002df0:	mov    rcx,QWORD PTR [rcx+0x10]
   140002df4:	lea    r8,[rip+0x326b5]        # 0x1400354b0
   140002dfb:	mov    edx,0x12
   140002e00:	mov    r9d,ebx
   140002e03:	call   0x140001f70
   140002e08:	movzx  eax,bx
   140002e0b:	or     eax,0x80070000
   140002e10:	test   ebx,ebx
   140002e12:	cmovle eax,ebx
   140002e15:	jmp    0x140002e1b
   140002e17:	mov    DWORD PTR [rbx],eax
   140002e19:	xor    eax,eax
   140002e1b:	add    rsp,0x20
   140002e1f:	pop    rbx
   140002e20:	ret    
   140002e21:	int3   
   140002e22:	int3   
   140002e23:	int3   
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    rax,QWORD PTR [rcx+0x48]
   140002e34:	ret    
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    rax,rsp
   140002e43:	push   rdi
   140002e44:	sub    rsp,0x30
   140002e48:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140002e50:	mov    QWORD PTR [rax+0x10],rbx
   140002e54:	mov    QWORD PTR [rax+0x18],rsi
   140002e58:	mov    rsi,rcx
   140002e5b:	xor    ebx,ebx
   140002e5d:	mov    QWORD PTR [rax+0x8],rbx
   140002e61:	add    rcx,0x78
   140002e65:	call   0x140029ab0
   140002e6a:	test   eax,eax
   140002e6c:	js     0x140002e7c
   140002e6e:	mov    rbx,rcx
   140002e71:	mov    QWORD PTR [rsp+0x40],rcx
   140002e76:	xor    eax,eax
   140002e78:	test   eax,eax
   140002e7a:	jns    0x140002e84
   140002e7c:	mov    ecx,eax
   140002e7e:	call   0x140029d64
   140002e83:	int3   
   140002e84:	mov    rsi,QWORD PTR [rsi+0x40]
   140002e88:	test   rsi,rsi
   140002e8b:	je     0x140002ea3
   140002e8d:	mov    rax,QWORD PTR [rsi]
   140002e90:	mov    rdi,QWORD PTR [rax+0x28]
   140002e94:	mov    rcx,rdi
   140002e97:	call   QWORD PTR [rip+0x2f80b]        # 0x1400326a8
   140002e9d:	mov    rcx,rsi
   140002ea0:	call   rdi
   140002ea2:	nop
   140002ea3:	test   rbx,rbx
   140002ea6:	je     0x140002ec3
   140002ea8:	or     eax,0xffffffff
   140002eab:	lock xadd DWORD PTR [rbx+0x8],eax
   140002eb0:	dec    eax
   140002eb2:	cmp    eax,0x80000000
   140002eb7:	jne    0x140002ec3
   140002eb9:	mov    rcx,QWORD PTR [rsp+0x40]
   140002ebe:	call   0x140029c90
   140002ec3:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ec8:	mov    rsi,QWORD PTR [rsp+0x50]
   140002ecd:	add    rsp,0x30
   140002ed1:	pop    rdi
   140002ed2:	ret    
   140002ed3:	int3   
   140002ed4:	int3   
   140002ed5:	int3   
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	int3   
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	mov    rax,rsp
   140002ee3:	push   rsi
   140002ee4:	push   rdi
   140002ee5:	push   r12
   140002ee7:	push   r13
   140002ee9:	push   r14
   140002eeb:	sub    rsp,0x180
   140002ef2:	mov    QWORD PTR [rax-0x98],0xfffffffffffffffe
   140002efd:	mov    QWORD PTR [rax+0x18],rbx
   140002f01:	mov    rax,QWORD PTR [rip+0x48118]        # 0x14004b020
   140002f08:	xor    rax,rsp
   140002f0b:	mov    QWORD PTR [rsp+0x170],rax
   140002f13:	mov    r13,rdx
   140002f16:	mov    rax,rcx
   140002f19:	mov    QWORD PTR [rsp+0x80],rcx
   140002f21:	mov    r8,QWORD PTR [rsp+0x1e0]
   140002f29:	mov    QWORD PTR [rsp+0xa8],r8
   140002f31:	mov    r9,QWORD PTR [rsp+0x1e8]
   140002f39:	mov    QWORD PTR [rsp+0xb0],r9
   140002f41:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140002f49:	mov    QWORD PTR [rsp+0xf0],rcx
   140002f51:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140002f59:	mov    QWORD PTR [rsp+0xe8],rdx
   140002f61:	test   r13,r13
   140002f64:	je     0x1400035fc
   140002f6a:	test   r8,r8
   140002f6d:	je     0x1400035fc
   140002f73:	test   r9,r9
   140002f76:	je     0x1400035fc
   140002f7c:	test   rcx,rcx
   140002f7f:	je     0x1400035fc
   140002f85:	test   rdx,rdx
   140002f88:	je     0x1400035fc
   140002f8e:	xor    ebx,ebx
   140002f90:	mov    QWORD PTR [rsp+0x78],rbx
   140002f95:	lea    rcx,[rax+0x78]
   140002f99:	call   0x140029ab0
   140002f9e:	mov    edi,eax
   140002fa0:	test   eax,eax
   140002fa2:	js     0x140002fae
   140002fa4:	mov    rbx,rcx
   140002fa7:	mov    QWORD PTR [rsp+0x78],rcx
   140002fac:	xor    edi,edi
   140002fae:	test   edi,edi
   140002fb0:	jns    0x140002fda
   140002fb2:	test   rbx,rbx
   140002fb5:	je     0x140002fd3
   140002fb7:	or     ecx,0xffffffff
   140002fba:	lock xadd DWORD PTR [rbx+0x8],ecx
   140002fbf:	dec    ecx
   140002fc1:	cmp    ecx,0x80000000
   140002fc7:	jne    0x140002fd3
   140002fc9:	mov    rcx,QWORD PTR [rsp+0x78]
   140002fce:	call   0x140029c90
   140002fd3:	mov    eax,edi
   140002fd5:	jmp    0x140003601
   140002fda:	lea    r12,[rip+0x48097]        # 0x14004b078
   140002fe1:	mov    rcx,QWORD PTR [rip+0x48090]        # 0x14004b078
   140002fe8:	cmp    rcx,r12
   140002feb:	je     0x14000301c
   140002fed:	test   BYTE PTR [rcx+0x1c],0x2
   140002ff1:	je     0x14000301c
   140002ff3:	movzx  r14d,BYTE PTR [rsp+0x1d8]
   140002ffc:	movzx  esi,BYTE PTR [rsp+0x1d0]
   140003004:	mov    r9d,esi
   140003007:	mov    QWORD PTR [rsp+0x28],r13
   14000300c:	mov    DWORD PTR [rsp+0x20],r14d
   140003011:	mov    rcx,QWORD PTR [rcx+0x10]
   140003015:	call   0x140002314
   14000301a:	jmp    0x14000302c
   14000301c:	mov    sil,BYTE PTR [rsp+0x1d0]
   140003024:	mov    r14b,BYTE PTR [rsp+0x1d8]
   14000302c:	movzx  r8d,r14b
   140003030:	movzx  edx,sil
   140003034:	mov    r9,r13
   140003037:	lea    rcx,[rip+0x32022]        # 0x140035060
   14000303e:	call   QWORD PTR [rip+0x2f2ec]        # 0x140032330
   140003044:	and    DWORD PTR [rsp+0x88],0x0
   14000304c:	call   QWORD PTR [rip+0x2f3fe]        # 0x140032450
   140003052:	mov    rdi,QWORD PTR [rax+0xa0]
   140003059:	mov    rcx,rdi
   14000305c:	call   QWORD PTR [rip+0x2f646]        # 0x1400326a8
   140003062:	lea    r8,[rsp+0x88]
   14000306a:	xor    edx,edx
   14000306c:	lea    rcx,[rip+0x32075]        # 0x1400350e8
   140003073:	call   rdi
   140003075:	cmp    DWORD PTR [rsp+0x88],0x0
   14000307d:	jne    0x1400030b8
   14000307f:	mov    rcx,QWORD PTR [rip+0x47ff2]        # 0x14004b078
   140003086:	cmp    rcx,r12
   140003089:	je     0x1400030a6
   14000308b:	test   BYTE PTR [rcx+0x1c],0x2
   14000308f:	je     0x1400030a6
   140003091:	mov    edx,0x14
   140003096:	lea    r8,[rip+0x32413]        # 0x1400354b0
   14000309d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030a1:	call   0x140001f08
   1400030a6:	lea    rcx,[rip+0x32053]        # 0x140035100
   1400030ad:	call   QWORD PTR [rip+0x2f27d]        # 0x140032330
   1400030b3:	xor    sil,sil
   1400030b6:	jmp    0x1400030ec
   1400030b8:	mov    rcx,QWORD PTR [rip+0x47fb9]        # 0x14004b078
   1400030bf:	cmp    rcx,r12
   1400030c2:	je     0x1400030df
   1400030c4:	test   BYTE PTR [rcx+0x1c],0x2
   1400030c8:	je     0x1400030df
   1400030ca:	mov    edx,0x16
   1400030cf:	lea    r8,[rip+0x323da]        # 0x1400354b0
   1400030d6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030da:	call   0x140001f08
   1400030df:	lea    rcx,[rip+0x3207a]        # 0x140035160
   1400030e6:	call   QWORD PTR [rip+0x2f244]        # 0x140032330
   1400030ec:	mov    BYTE PTR [rsp+0x71],0x0
   1400030f1:	mov    BYTE PTR [rsp+0x70],0x0
   1400030f6:	xorps  xmm0,xmm0
   1400030f9:	movdqu XMMWORD PTR [rsp+0xb8],xmm0
   140003102:	and    QWORD PTR [rsp+0xc8],0x0
   14000310b:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   140003114:	and    QWORD PTR [rsp+0xa0],0x0
   14000311d:	movdqu XMMWORD PTR [rsp+0xd0],xmm0
   140003126:	and    QWORD PTR [rsp+0xe0],0x0
   14000312f:	and    DWORD PTR [rsp+0x120],0x0
   140003137:	xor    edx,edx
   140003139:	lea    r8d,[rdx+0x40]
   14000313d:	lea    rcx,[rsp+0x124]
   140003145:	call   0x14002e2ce
   14000314a:	nop
   14000314b:	test   sil,sil
   14000314e:	jne    0x140003167
   140003150:	mov    r8b,r14b
   140003153:	mov    rdx,r13
   140003156:	mov    rcx,QWORD PTR [rsp+0x80]
   14000315e:	mov    rcx,QWORD PTR [rcx+0x48]
   140003162:	call   0x140007b44
   140003167:	lea    rax,[rsp+0xd0]
   14000316f:	mov    QWORD PTR [rsp+0x58],rax
   140003174:	lea    rax,[rsp+0x90]
   14000317c:	mov    QWORD PTR [rsp+0x50],rax
   140003181:	lea    rax,[rsp+0xb8]
   140003189:	mov    QWORD PTR [rsp+0x48],rax
   14000318e:	lea    rax,[rsp+0x120]
   140003196:	mov    QWORD PTR [rsp+0x40],rax
   14000319b:	lea    rax,[rsp+0x70]
   1400031a0:	mov    QWORD PTR [rsp+0x38],rax
   1400031a5:	lea    rax,[rsp+0x71]
   1400031aa:	mov    QWORD PTR [rsp+0x30],rax
   1400031af:	mov    rax,QWORD PTR [rsp+0xb0]
   1400031b7:	mov    QWORD PTR [rsp+0x28],rax
   1400031bc:	mov    rax,QWORD PTR [rsp+0xa8]
   1400031c4:	mov    QWORD PTR [rsp+0x20],rax
   1400031c9:	mov    r9b,r14b
   1400031cc:	mov    r8b,sil
   1400031cf:	mov    rdx,r13
   1400031d2:	mov    rsi,QWORD PTR [rsp+0x80]
   1400031da:	mov    rcx,QWORD PTR [rsi+0x48]
   1400031de:	call   0x14000869c
   1400031e3:	nop
   1400031e4:	movzx  edi,BYTE PTR [rsp+0x70]
   1400031e9:	mov    r8d,edi
   1400031ec:	movzx  r13d,BYTE PTR [rsp+0x71]
   1400031f2:	mov    edx,r13d
   1400031f5:	lea    rcx,[rip+0x32034]        # 0x140035230
   1400031fc:	call   QWORD PTR [rip+0x2f12e]        # 0x140032330
   140003202:	xor    eax,eax
   140003204:	test   r13b,r13b
   140003207:	setne  al
   14000320a:	mov    rcx,QWORD PTR [rsp+0xf0]
   140003212:	mov    QWORD PTR [rcx],rax
   140003215:	xor    eax,eax
   140003217:	test   dil,dil
   14000321a:	setne  al
   14000321d:	mov    rcx,QWORD PTR [rsp+0xe8]
   140003225:	mov    QWORD PTR [rcx],rax
   140003228:	test   r13b,r13b
   14000322b:	jne    0x140003236
   14000322d:	test   dil,dil
   140003230:	je     0x1400034ab
   140003236:	mov    rcx,QWORD PTR [rip+0x47e3b]        # 0x14004b078
   14000323d:	cmp    rcx,r12
   140003240:	je     0x14000325d
   140003242:	test   BYTE PTR [rcx+0x1c],0x4
   140003246:	je     0x14000325d
   140003248:	mov    edx,0x18
   14000324d:	lea    r8,[rip+0x3225c]        # 0x1400354b0
   140003254:	mov    rcx,QWORD PTR [rcx+0x10]
   140003258:	call   0x140001f08
   14000325d:	lea    rcx,[rip+0x3207c]        # 0x1400352e0
   140003264:	call   QWORD PTR [rip+0x2f0c6]        # 0x140032330
   14000326a:	lea    r13,[rsi+0x40]
   14000326e:	cmp    QWORD PTR [r13+0x0],0x0
   140003273:	jne    0x140003372
   140003279:	mov    rcx,QWORD PTR [rip+0x47df8]        # 0x14004b078
   140003280:	cmp    rcx,r12
   140003283:	je     0x1400032a0
   140003285:	test   BYTE PTR [rcx+0x1c],0x4
   140003289:	je     0x1400032a0
   14000328b:	mov    edx,0x19
   140003290:	lea    r8,[rip+0x32219]        # 0x1400354b0
   140003297:	mov    rcx,QWORD PTR [rcx+0x10]
   14000329b:	call   0x140001f08
   1400032a0:	lea    rcx,[rip+0x32081]        # 0x140035328
   1400032a7:	call   QWORD PTR [rip+0x2f083]        # 0x140032330
   1400032ad:	mov    rax,QWORD PTR [rsi+0x48]
   1400032b1:	test   rax,rax
   1400032b4:	je     0x1400032bc
   1400032b6:	lea    r14,[rax+0x8]
   1400032ba:	jmp    0x1400032bf
   1400032bc:	xor    r14d,r14d
   1400032bf:	mov    rsi,QWORD PTR [r13+0x0]
   1400032c3:	test   rsi,rsi
   1400032c6:	je     0x1400032e2
   1400032c8:	mov    rax,QWORD PTR [rsi]
   1400032cb:	mov    rdi,QWORD PTR [rax+0x8]
   1400032cf:	mov    rcx,rdi
   1400032d2:	call   QWORD PTR [rip+0x2f3d0]        # 0x1400326a8
   1400032d8:	mov    rcx,rsi
   1400032db:	call   rdi
   1400032dd:	and    QWORD PTR [r13+0x0],0x0
   1400032e2:	mov    rdx,r13
   1400032e5:	mov    rcx,r14
   1400032e8:	call   0x14001ae38
   1400032ed:	mov    edi,eax
   1400032ef:	test   eax,eax
   1400032f1:	jns    0x140003354
   1400032f3:	lea    rcx,[rsp+0xd0]
   1400032fb:	call   0x1400036e0
   140003300:	nop
   140003301:	mov    rcx,QWORD PTR [rsp+0x90]
   140003309:	test   rcx,rcx
   14000330c:	je     0x140003329
   14000330e:	call   QWORD PTR [rip+0x2f2b4]        # 0x1400325c8
   140003314:	xorps  xmm0,xmm0
   140003317:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   140003320:	and    QWORD PTR [rsp+0xa0],0x0
   140003329:	lea    rcx,[rsp+0xb8]
   140003331:	call   0x1400036e0
   140003336:	nop
   140003337:	test   rbx,rbx
   14000333a:	je     0x140002fd3
   140003340:	or     eax,0xffffffff
   140003343:	lock xadd DWORD PTR [rbx+0x8],eax
   140003348:	dec    eax
   14000334a:	cmp    eax,0x80000000
   14000334f:	jmp    0x140002fc7
   140003354:	test   BYTE PTR [rip+0x4cc65],0x1        # 0x14004ffc0
   14000335b:	je     0x1400033a7
   14000335d:	lea    r8,[rip+0x30e54]        # 0x1400341b8
   140003364:	lea    rdx,[rip+0x30b8d]        # 0x140033ef8
   14000336b:	call   0x140003818
   140003370:	jmp    0x1400033a7
   140003372:	mov    rcx,QWORD PTR [rip+0x47cff]        # 0x14004b078
   140003379:	cmp    rcx,r12
   14000337c:	je     0x140003399
   14000337e:	test   BYTE PTR [rcx+0x1c],0x4
   140003382:	je     0x140003399
   140003384:	mov    edx,0x1a
   140003389:	lea    r8,[rip+0x32120]        # 0x1400354b0
   140003390:	mov    rcx,QWORD PTR [rcx+0x10]
   140003394:	call   0x140001f08
   140003399:	lea    rcx,[rip+0x31fc0]        # 0x140035360
   1400033a0:	call   QWORD PTR [rip+0x2ef8a]        # 0x140032330
   1400033a6:	nop
   1400033a7:	mov    rsi,QWORD PTR [r13+0x0]
   1400033ab:	mov    rax,QWORD PTR [rsi]
   1400033ae:	mov    rdi,QWORD PTR [rax+0x18]
   1400033b2:	mov    rcx,rdi
   1400033b5:	call   QWORD PTR [rip+0x2f2ed]        # 0x1400326a8
   1400033bb:	mov    eax,DWORD PTR [rsp+0x158]
   1400033c2:	mov    DWORD PTR [rsp+0x68],eax
   1400033c6:	mov    eax,DWORD PTR [rsp+0x154]
   1400033cd:	mov    DWORD PTR [rsp+0x60],eax
   1400033d1:	mov    eax,DWORD PTR [rsp+0x150]
   1400033d8:	mov    DWORD PTR [rsp+0x58],eax
   1400033dc:	mov    eax,DWORD PTR [rsp+0x130]
   1400033e3:	mov    DWORD PTR [rsp+0x50],eax
   1400033e7:	mov    eax,DWORD PTR [rsp+0x14c]
   1400033ee:	mov    DWORD PTR [rsp+0x48],eax
   1400033f2:	mov    eax,DWORD PTR [rsp+0x148]
   1400033f9:	mov    DWORD PTR [rsp+0x40],eax
   1400033fd:	mov    eax,DWORD PTR [rsp+0x134]
   140003404:	mov    DWORD PTR [rsp+0x38],eax
   140003408:	mov    eax,DWORD PTR [rsp+0x144]
   14000340f:	mov    DWORD PTR [rsp+0x30],eax
   140003413:	mov    eax,DWORD PTR [rsp+0x140]
   14000341a:	mov    DWORD PTR [rsp+0x28],eax
   14000341e:	mov    eax,DWORD PTR [rsp+0x13c]
   140003425:	mov    DWORD PTR [rsp+0x20],eax
   140003429:	mov    r9d,DWORD PTR [rsp+0x138]
   140003431:	mov    r8b,BYTE PTR [rsp+0x70]
   140003436:	mov    dl,BYTE PTR [rsp+0x71]
   14000343a:	mov    rcx,rsi
   14000343d:	call   rdi
   14000343f:	mov    r14,QWORD PTR [r13+0x0]
   140003443:	mov    rax,QWORD PTR [r14]
   140003446:	movzx  edi,BYTE PTR [rsp+0x160]
   14000344e:	mov    rsi,QWORD PTR [rax+0x20]
   140003452:	mov    rcx,rsi
   140003455:	call   QWORD PTR [rip+0x2f24d]        # 0x1400326a8
   14000345b:	mov    r9d,DWORD PTR [rsp+0x128]
   140003463:	mov    r8d,DWORD PTR [rsp+0x12c]
   14000346b:	mov    edx,edi
   14000346d:	mov    rcx,r14
   140003470:	call   rsi
   140003472:	mov    rsi,QWORD PTR [r13+0x0]
   140003476:	mov    rax,QWORD PTR [rsi]
   140003479:	mov    rdi,QWORD PTR [rax+0x30]
   14000347d:	mov    rcx,rdi
   140003480:	call   QWORD PTR [rip+0x2f222]        # 0x1400326a8
   140003486:	lea    r9,[rsp+0xd0]
   14000348e:	lea    r8,[rsp+0x90]
   140003496:	lea    rdx,[rsp+0xb8]
   14000349e:	mov    rcx,rsi
   1400034a1:	call   rdi
   1400034a3:	mov    rsi,QWORD PTR [rsp+0x80]
   1400034ab:	mov    rsi,QWORD PTR [rsi+0xd0]
   1400034b2:	mov    rax,QWORD PTR [rsi]
   1400034b5:	mov    rdi,QWORD PTR [rax+0x20]
   1400034b9:	mov    rcx,rdi
   1400034bc:	call   QWORD PTR [rip+0x2f1e6]        # 0x1400326a8
   1400034c2:	mov    rax,QWORD PTR [rsp+0xb0]
   1400034ca:	mov    r8,QWORD PTR [rax]
   1400034cd:	mov    rax,QWORD PTR [rsp+0xa8]
   1400034d5:	mov    rdx,QWORD PTR [rax]
   1400034d8:	mov    rcx,rsi
   1400034db:	call   rdi
   1400034dd:	nop
   1400034de:	jmp    0x1400034ec
   1400034e0:	lea    r12,[rip+0x47b91]        # 0x14004b078
   1400034e7:	mov    rbx,QWORD PTR [rsp+0x78]
   1400034ec:	mov    rcx,QWORD PTR [rip+0x47b85]        # 0x14004b078
   1400034f3:	cmp    rcx,r12
   1400034f6:	je     0x140003513
   1400034f8:	test   BYTE PTR [rcx+0x1c],0x4
   1400034fc:	je     0x140003513
   1400034fe:	mov    edx,0x1d
   140003503:	lea    r8,[rip+0x31fa6]        # 0x1400354b0
   14000350a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000350e:	call   0x140001f08
   140003513:	lea    rcx,[rip+0x31f26]        # 0x140035440
   14000351a:	call   QWORD PTR [rip+0x2ee18]        # 0x140032338
   140003520:	nop
   140003521:	lea    rcx,[rsp+0xd0]
   140003529:	call   0x1400036e0
   14000352e:	nop
   14000352f:	mov    rcx,QWORD PTR [rsp+0x90]
   140003537:	test   rcx,rcx
   14000353a:	je     0x140003557
   14000353c:	call   QWORD PTR [rip+0x2f086]        # 0x1400325c8
   140003542:	xorps  xmm0,xmm0
   140003545:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   14000354e:	and    QWORD PTR [rsp+0xa0],0x0
   140003557:	lea    rcx,[rsp+0xb8]
   14000355f:	call   0x1400036e0
   140003564:	nop
   140003565:	test   rbx,rbx
   140003568:	je     0x140003585
   14000356a:	or     eax,0xffffffff
   14000356d:	lock xadd DWORD PTR [rbx+0x8],eax
   140003572:	dec    eax
   140003574:	cmp    eax,0x80000000
   140003579:	jne    0x140003585
   14000357b:	mov    rcx,QWORD PTR [rsp+0x78]
   140003580:	call   0x140029c90
   140003585:	xor    eax,eax
   140003587:	jmp    0x140003601
   140003589:	lea    rcx,[rsp+0xd0]
   140003591:	call   0x1400036e0
   140003596:	nop
   140003597:	mov    rcx,QWORD PTR [rsp+0x90]
   14000359f:	test   rcx,rcx
   1400035a2:	je     0x1400035bf
   1400035a4:	call   QWORD PTR [rip+0x2f01e]        # 0x1400325c8
   1400035aa:	xorps  xmm0,xmm0
   1400035ad:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   1400035b6:	and    QWORD PTR [rsp+0xa0],0x0
   1400035bf:	lea    rcx,[rsp+0xb8]
   1400035c7:	call   0x1400036e0
   1400035cc:	nop
   1400035cd:	mov    rax,QWORD PTR [rsp+0x78]
   1400035d2:	test   rax,rax
   1400035d5:	je     0x1400035f3
   1400035d7:	or     ecx,0xffffffff
   1400035da:	lock xadd DWORD PTR [rax+0x8],ecx
   1400035df:	dec    ecx
   1400035e1:	cmp    ecx,0x80000000
   1400035e7:	jne    0x1400035f3
   1400035e9:	mov    rcx,QWORD PTR [rsp+0x78]
   1400035ee:	call   0x140029c90
   1400035f3:	mov    eax,DWORD PTR [rsp+0x80]
   1400035fa:	jmp    0x140003601
   1400035fc:	mov    eax,0x80070057
   140003601:	mov    rcx,QWORD PTR [rsp+0x170]
   140003609:	xor    rcx,rsp
   14000360c:	call   0x14002dd00
   140003611:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140003619:	add    rsp,0x180
   140003620:	pop    r14
   140003622:	pop    r13
   140003624:	pop    r12
   140003626:	pop    rdi
   140003627:	pop    rsi
   140003628:	ret    
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	sub    rsp,0x28
   140003634:	mov    rcx,QWORD PTR [rip+0x47a3d]        # 0x14004b078
   14000363b:	lea    rax,[rip+0x47a36]        # 0x14004b078
   140003642:	cmp    rcx,rax
   140003645:	je     0x140003666
   140003647:	test   BYTE PTR [rcx+0x1c],0x2
   14000364b:	je     0x140003666
   14000364d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003651:	lea    r8,[rip+0x31e58]        # 0x1400354b0
   140003658:	movzx  r9d,dl
   14000365c:	mov    edx,0x1e
   140003661:	call   0x140001f70
   140003666:	add    rsp,0x28
   14000366a:	ret    
   14000366b:	int3   
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	int3   
   140003671:	int3   
   140003672:	int3   
   140003673:	int3   
   140003674:	rex push rbx
   140003676:	sub    rsp,0x20
   14000367a:	mov    rbx,rcx
   14000367d:	mov    rcx,QWORD PTR [rcx]
   140003680:	test   rcx,rcx
   140003683:	je     0x140003699
   140003685:	call   QWORD PTR [rip+0x2ef3d]        # 0x1400325c8
   14000368b:	and    QWORD PTR [rbx],0x0
   14000368f:	and    QWORD PTR [rbx+0x8],0x0
   140003694:	and    QWORD PTR [rbx+0x10],0x0
   140003699:	add    rsp,0x20
   14000369d:	pop    rbx
   14000369e:	ret    
   14000369f:	int3   
   1400036a0:	int3   
   1400036a1:	int3   
   1400036a2:	int3   
   1400036a3:	int3   
   1400036a4:	int3   
   1400036a5:	int3   
   1400036a6:	int3   
   1400036a7:	int3   
   1400036a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400036ad:	push   rdi
   1400036ae:	sub    rsp,0x20
   1400036b2:	mov    rdi,QWORD PTR [rcx]
   1400036b5:	test   rdi,rdi
   1400036b8:	je     0x1400036cf
   1400036ba:	mov    rax,QWORD PTR [rdi]
   1400036bd:	mov    rbx,QWORD PTR [rax+0x8]
   1400036c1:	mov    rcx,rbx
   1400036c4:	call   QWORD PTR [rip+0x2efde]        # 0x1400326a8
   1400036ca:	mov    rcx,rdi
   1400036cd:	call   rbx
   1400036cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036d4:	add    rsp,0x20
   1400036d8:	pop    rdi
   1400036d9:	ret    
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400036e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400036ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400036ef:	push   rdi
   1400036f0:	sub    rsp,0x20
   1400036f4:	mov    rbx,QWORD PTR [rcx]
   1400036f7:	xor    ebp,ebp
   1400036f9:	mov    rdi,rcx
   1400036fc:	test   rbx,rbx
   1400036ff:	je     0x140003743
   140003701:	mov    rsi,QWORD PTR [rcx+0x8]
   140003705:	jmp    0x14000372a
   140003707:	cmp    QWORD PTR [rbx+0x18],0x8
   14000370c:	jb     0x140003717
   14000370e:	mov    rcx,QWORD PTR [rbx]
   140003711:	call   QWORD PTR [rip+0x2eeb1]        # 0x1400325c8
   140003717:	mov    QWORD PTR [rbx+0x18],0x7
   14000371f:	mov    QWORD PTR [rbx+0x10],rbp
   140003723:	mov    WORD PTR [rbx],bp
   140003726:	add    rbx,0x20
   14000372a:	cmp    rbx,rsi
   14000372d:	jne    0x140003707
   14000372f:	mov    rcx,QWORD PTR [rdi]
   140003732:	call   QWORD PTR [rip+0x2ee90]        # 0x1400325c8
   140003738:	mov    QWORD PTR [rdi],rbp
   14000373b:	mov    QWORD PTR [rdi+0x8],rbp
   14000373f:	mov    QWORD PTR [rdi+0x10],rbp
   140003743:	mov    rbx,QWORD PTR [rsp+0x30]
   140003748:	mov    rbp,QWORD PTR [rsp+0x38]
   14000374d:	mov    rsi,QWORD PTR [rsp+0x40]
   140003752:	add    rsp,0x20
   140003756:	pop    rdi
   140003757:	ret    
   140003758:	int3   
   140003759:	int3   
   14000375a:	int3   
   14000375b:	int3   
   14000375c:	int3   
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	mov    rcx,rdx
   140003763:	rex.W jmp QWORD PTR [rip+0x2ee5e]        # 0x1400325c8
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	int3   
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	mov    QWORD PTR [rsp+0x8],rbx
   140003775:	mov    QWORD PTR [rsp+0x10],rbp
   14000377a:	mov    QWORD PTR [rsp+0x18],rsi
   14000377f:	push   rdi
   140003780:	sub    rsp,0x20
   140003784:	xor    ebp,ebp
   140003786:	mov    rdi,r8
   140003789:	mov    rbx,rcx
   14000378c:	test   dl,dl
   14000378e:	je     0x1400037b3
   140003790:	cmp    QWORD PTR [rcx+0x18],0x8
   140003795:	jb     0x1400037b3
   140003797:	mov    rsi,QWORD PTR [rcx]
   14000379a:	test   r8,r8
   14000379d:	je     0x1400037aa
   14000379f:	add    r8,r8
   1400037a2:	mov    rdx,rsi
   1400037a5:	call   0x14002e2f2
   1400037aa:	mov    rcx,rsi
   1400037ad:	call   QWORD PTR [rip+0x2ee15]        # 0x1400325c8
   1400037b3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037b8:	mov    QWORD PTR [rbx+0x18],0x7
   1400037c0:	mov    QWORD PTR [rbx+0x10],rdi
   1400037c4:	mov    WORD PTR [rbx+rdi*2],bp
   1400037c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037cd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037d2:	add    rsp,0x20
   1400037d6:	pop    rdi
   1400037d7:	ret    
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	rex push rbx
   1400037e2:	sub    rsp,0x20
   1400037e6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400037eb:	mov    rbx,rcx
   1400037ee:	jb     0x1400037f9
   1400037f0:	mov    rcx,QWORD PTR [rcx]
   1400037f3:	call   QWORD PTR [rip+0x2edcf]        # 0x1400325c8
   1400037f9:	xor    eax,eax
   1400037fb:	mov    QWORD PTR [rbx+0x18],0x7
   140003803:	mov    QWORD PTR [rbx+0x10],rax
   140003807:	mov    WORD PTR [rbx],ax
   14000380a:	add    rsp,0x20
   14000380e:	pop    rbx
   14000380f:	ret    
   140003810:	int3   
   140003811:	int3   
   140003812:	int3   
   140003813:	int3   
   140003814:	int3   
   140003815:	int3   
   140003816:	int3   
   140003817:	int3   
   140003818:	mov    QWORD PTR [rsp+0x8],rbx
   14000381d:	mov    QWORD PTR [rsp+0x10],rsi
   140003822:	push   rdi
   140003823:	sub    rsp,0x50
   140003827:	cmp    BYTE PTR [rip+0x4c762],0x0        # 0x14004ff90
   14000382e:	mov    rdi,rdx
   140003831:	mov    rsi,QWORD PTR [rip+0x4c790]        # 0x14004ffc8
   140003838:	jne    0x14000385a
   14000383a:	mov    rbx,QWORD PTR [rip+0x4c747]        # 0x14004ff88
   140003841:	mov    rcx,rbx
   140003844:	call   QWORD PTR [rip+0x2ee5e]        # 0x1400326a8
   14000384a:	xor    r9d,r9d
   14000384d:	xor    r8d,r8d
   140003850:	mov    rdx,rdi
   140003853:	mov    rcx,rsi
   140003856:	call   rbx
   140003858:	jmp    0x140003897
   14000385a:	movzx  eax,BYTE PTR [rdx+0x2]
   14000385e:	mov    rcx,QWORD PTR [rsi+0x8]
   140003862:	mov    WORD PTR [rsp+0x26],ax
   140003867:	mov    al,BYTE PTR [rdx+0x4]
   14000386a:	mov    BYTE PTR [rsp+0x25],al
   14000386e:	mov    al,BYTE PTR [rdx+0x5]
   140003871:	lea    rdx,[rsp+0x20]
   140003876:	mov    BYTE PTR [rsp+0x24],al
   14000387a:	mov    eax,0x30
   14000387f:	mov    WORD PTR [rsp+0x20],ax
   140003884:	mov    QWORD PTR [rsp+0x38],r8
   140003889:	mov    DWORD PTR [rsp+0x4c],0x1a0000
   140003891:	call   QWORD PTR [rip+0x2e791]        # 0x140032028
   140003897:	mov    rbx,QWORD PTR [rsp+0x60]
   14000389c:	mov    rsi,QWORD PTR [rsp+0x68]
   1400038a1:	add    rsp,0x50
   1400038a5:	pop    rdi
   1400038a6:	ret    
   1400038a7:	int3   
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	sub    rsp,0x28
   1400038b4:	mov    rcx,QWORD PTR [rcx]
   1400038b7:	test   rcx,rcx
   1400038ba:	je     0x1400038d2
   1400038bc:	or     eax,0xffffffff
   1400038bf:	lock xadd DWORD PTR [rcx+0x8],eax
   1400038c4:	dec    eax
   1400038c6:	cmp    eax,0x80000000
   1400038cb:	jne    0x1400038d2
   1400038cd:	call   0x140029c90
   1400038d2:	add    rsp,0x28
   1400038d6:	ret    
   1400038d7:	int3   
   1400038d8:	int3   
   1400038d9:	int3   
   1400038da:	int3   
   1400038db:	int3   
   1400038dc:	int3   
   1400038dd:	int3   
   1400038de:	int3   
   1400038df:	int3   
   1400038e0:	sub    rsp,0x48
   1400038e4:	test   r9,r9
   1400038e7:	je     0x1400038fc
   1400038e9:	or     r10,0xffffffffffffffff
   1400038ed:	inc    r10
   1400038f0:	cmp    BYTE PTR [r9+r10*1],0x0
   1400038f5:	jne    0x1400038ed
   1400038f7:	inc    r10
   1400038fa:	jmp    0x140003902
   1400038fc:	mov    r10d,0x5
   140003902:	test   r9,r9
   140003905:	lea    rax,[rip+0x31b88]        # 0x140035494
   14000390c:	cmovne rax,r9
   140003910:	and    QWORD PTR [rsp+0x30],0x0
   140003916:	movzx  r9d,dx
   14000391a:	mov    edx,0x2b
   14000391f:	mov    QWORD PTR [rsp+0x28],r10
   140003924:	mov    QWORD PTR [rsp+0x20],rax
   140003929:	call   QWORD PTR [rip+0x2e6f1]        # 0x140032020
   14000392f:	add    rsp,0x48
   140003933:	ret    
   140003934:	int3   
   140003935:	int3   
   140003936:	int3   
   140003937:	int3   
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	rex.W jmp QWORD PTR [rip+0x2e931]        # 0x140032278
   140003947:	int3   
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	rex push rbx
   140003952:	sub    rsp,0x50
   140003956:	mov    rax,QWORD PTR [rip+0x476c3]        # 0x14004b020
   14000395d:	xor    rax,rsp
   140003960:	mov    QWORD PTR [rsp+0x48],rax
   140003965:	xor    edx,edx
   140003967:	mov    rbx,rcx
   14000396a:	call   QWORD PTR [rip+0x2e900]        # 0x140032270
   140003970:	test   eax,eax
   140003972:	je     0x14000398a
   140003974:	mov    rax,rbx
   140003977:	mov    rcx,QWORD PTR [rsp+0x48]
   14000397c:	xor    rcx,rsp
   14000397f:	call   0x14002dd00
   140003984:	add    rsp,0x50
   140003988:	pop    rbx
   140003989:	ret    
   14000398a:	call   QWORD PTR [rip+0x2e8f8]        # 0x140032288
   140003990:	movzx  edx,ax
   140003993:	lea    rcx,[rsp+0x20]
   140003998:	or     edx,0x80070000
   14000399e:	test   eax,eax
   1400039a0:	cmovle edx,eax
   1400039a3:	call   0x140002064
   1400039a8:	lea    rdx,[rip+0x457d9]        # 0x140049188
   1400039af:	lea    rcx,[rsp+0x20]
   1400039b4:	call   0x14002e2da
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	sub    rsp,0x28
   1400039c4:	add    rcx,0x8
   1400039c8:	cmp    BYTE PTR [rcx+0x28],0x0
   1400039cc:	je     0x1400039d8
   1400039ce:	mov    BYTE PTR [rcx+0x28],0x0
   1400039d2:	call   QWORD PTR [rip+0x2e8a0]        # 0x140032278
   1400039d8:	add    rsp,0x28
   1400039dc:	ret    
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	int3   
   1400039e1:	int3   
   1400039e2:	int3   
   1400039e3:	int3   
   1400039e4:	int3   
   1400039e5:	int3   
   1400039e6:	int3   
   1400039e7:	int3   
   1400039e8:	int3   
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400039f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400039fa:	push   rdi
   1400039fb:	sub    rsp,0x20
   1400039ff:	and    DWORD PTR [r8],0x0
   140003a03:	mov    rbx,rdx
   140003a06:	sub    ecx,0x4
   140003a09:	je     0x140003a20
   140003a0b:	cmp    ecx,0x1
   140003a0e:	je     0x140003a17
   140003a10:	mov    eax,0x57
   140003a15:	jmp    0x140003a5f
   140003a17:	xor    edi,edi
   140003a19:	xor    eax,eax
   140003a1b:	xor    sil,sil
   140003a1e:	jmp    0x140003a41
   140003a20:	mov    rcx,r9
   140003a23:	call   QWORD PTR [rip+0x2e5df]        # 0x140032008
   140003a29:	mov    rcx,rax
   140003a2c:	mov    rdi,rax
   140003a2f:	call   QWORD PTR [rip+0x2e5db]        # 0x140032010
   140003a35:	mov    rcx,rdi
   140003a38:	mov    sil,al
   140003a3b:	call   QWORD PTR [rip+0x2e5bf]        # 0x140032000
   140003a41:	test   BYTE PTR [rbx+0x1a],0x2
   140003a45:	je     0x140003a52
   140003a47:	mov    rcx,QWORD PTR [rbx+0x10]
   140003a4b:	test   rcx,rcx
   140003a4e:	cmovne rbx,rcx
   140003a52:	mov    QWORD PTR [rbx+0x10],rdi
   140003a56:	mov    BYTE PTR [rbx+0x19],sil
   140003a5a:	mov    DWORD PTR [rbx+0x1c],eax
   140003a5d:	xor    eax,eax
   140003a5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a64:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a69:	add    rsp,0x20
   140003a6d:	pop    rdi
   140003a6e:	ret    
   140003a6f:	int3   
   140003a70:	int3   
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	mov    QWORD PTR [rsp+0x8],rbx
   140003a85:	mov    QWORD PTR [rsp+0x10],rbp
   140003a8a:	mov    QWORD PTR [rsp+0x18],rsi
   140003a8f:	push   rdi
   140003a90:	sub    rsp,0x20
   140003a94:	mov    rsi,QWORD PTR [rcx+0x48]
   140003a98:	mov    ebp,edx
   140003a9a:	mov    rdi,rcx
   140003a9d:	test   rsi,rsi
   140003aa0:	je     0x140003ab7
   140003aa2:	mov    rax,QWORD PTR [rsi]
   140003aa5:	mov    rbx,QWORD PTR [rax+0x8]
   140003aa9:	mov    rcx,rbx
   140003aac:	call   QWORD PTR [rip+0x2ebf6]        # 0x1400326a8
   140003ab2:	mov    rcx,rsi
   140003ab5:	call   rbx
   140003ab7:	lea    rax,[rip+0x30b6a]        # 0x140034628
   140003abe:	mov    QWORD PTR [rdi],rax
   140003ac1:	test   bpl,0x1
   140003ac5:	je     0x140003ad0
   140003ac7:	mov    rcx,rdi
   140003aca:	call   QWORD PTR [rip+0x2eaf8]        # 0x1400325c8
   140003ad0:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ad5:	mov    rax,rdi
   140003ad8:	mov    rbp,QWORD PTR [rsp+0x38]
   140003add:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ae2:	add    rsp,0x20
   140003ae6:	pop    rdi
   140003ae7:	ret    
   140003ae8:	int3   
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	mov    rax,rsp
   140003af3:	mov    QWORD PTR [rax+0x8],rbx
   140003af7:	mov    QWORD PTR [rax+0x18],rbp
   140003afb:	mov    QWORD PTR [rax+0x20],rsi
   140003aff:	mov    QWORD PTR [rax+0x10],rdx
   140003b03:	push   rdi
   140003b04:	push   r12
   140003b06:	push   r13
   140003b08:	push   r14
   140003b0a:	push   r15
   140003b0c:	sub    rsp,0x70
   140003b10:	xor    r9d,r9d
   140003b13:	xor    r8d,r8d
   140003b16:	xor    ecx,ecx
   140003b18:	lea    r14d,[r9+0x1]
   140003b1c:	mov    edx,r14d
   140003b1f:	call   QWORD PTR [rip+0x2e76b]        # 0x140032290
   140003b25:	xor    r13d,r13d
   140003b28:	mov    sil,r13b
   140003b2b:	lea    rax,[rip+0x3076e]        # 0x1400342a0
   140003b32:	mov    QWORD PTR [rip+0x4c527],r13        # 0x140050060
   140003b39:	lea    rbx,[rip+0x4c510]        # 0x140050050
   140003b40:	mov    QWORD PTR [rip+0x4c531],rax        # 0x140050078
   140003b47:	mov    QWORD PTR [rip+0x4752a],rbx        # 0x14004b078
   140003b4e:	lea    rdi,[rip+0x4c523]        # 0x140050078
   140003b55:	mov    QWORD PTR [rip+0x4c4f4],r13        # 0x140050050
   140003b5c:	mov    QWORD PTR [rip+0x4c505],r14        # 0x140050068
   140003b63:	mov    r8,QWORD PTR [rdi]
   140003b66:	lea    rax,[rbx+0x8]
   140003b6a:	mov    QWORD PTR [rsp+0x38],rax
   140003b6f:	lea    rcx,[rip+0xfffffffffffffe7a]        # 0x1400039f0
   140003b76:	mov    QWORD PTR [rsp+0x30],r13
   140003b7b:	lea    rax,[rsp+0x40]
   140003b80:	mov    QWORD PTR [rsp+0x40],r8
   140003b85:	lea    rdi,[rdi+0x8]
   140003b89:	mov    QWORD PTR [rsp+0x48],r13
   140003b8e:	mov    r9d,r14d
   140003b91:	mov    QWORD PTR [rsp+0x28],r13
   140003b96:	mov    rdx,rbx
   140003b99:	mov    QWORD PTR [rsp+0x20],rax
   140003b9e:	mov    QWORD PTR [rbx+0x20],r8
   140003ba2:	call   QWORD PTR [rip+0x2e470]        # 0x140032018
   140003ba8:	mov    rbx,QWORD PTR [rbx]
   140003bab:	test   rbx,rbx
   140003bae:	jne    0x140003b63
   140003bb0:	xor    ecx,ecx
   140003bb2:	call   QWORD PTR [rip+0x2e6f8]        # 0x1400322b0
   140003bb8:	mov    rbx,rax
   140003bbb:	test   rax,rax
   140003bbe:	jne    0x140003bcb
   140003bc0:	xor    ecx,ecx
   140003bc2:	call   0x14002a520
   140003bc7:	mov    ebp,eax
   140003bc9:	jmp    0x140003bce
   140003bcb:	mov    ebp,r13d
   140003bce:	lea    r15,[rip+0x474a3]        # 0x14004b078
   140003bd5:	lea    r12,[rip+0x31c7c]        # 0x140035858
   140003bdc:	test   ebp,ebp
   140003bde:	jns    0x140003c09
   140003be0:	mov    r14,QWORD PTR [rip+0x47491]        # 0x14004b078
   140003be7:	cmp    r14,r15
   140003bea:	je     0x140003c67
   140003bec:	test   BYTE PTR [r14+0x1c],0x1
   140003bf1:	je     0x140003c67
   140003bf3:	mov    rcx,QWORD PTR [r14+0x10]
   140003bf7:	mov    edx,0xa
   140003bfc:	mov    r9d,ebp
   140003bff:	mov    r8,r12
   140003c02:	call   0x140001f70
   140003c07:	jmp    0x140003c60
   140003c09:	mov    rcx,rbx
   140003c0c:	call   0x140024d8c
   140003c11:	test   eax,eax
   140003c13:	jne    0x140003c5a
   140003c15:	mov    r14,QWORD PTR [rip+0x4745c]        # 0x14004b078
   140003c1c:	lea    r15,[rip+0x47455]        # 0x14004b078
   140003c23:	lea    r12,[rip+0x31c2e]        # 0x140035858
   140003c2a:	mov    ebp,0x80004005
   140003c2f:	cmp    r14,r15
   140003c32:	je     0x140003e3d
   140003c38:	test   BYTE PTR [r14+0x1c],0x1
   140003c3d:	je     0x140003c6b
   140003c3f:	mov    rcx,QWORD PTR [r14+0x10]
   140003c43:	lea    edx,[rax+0xb]
   140003c46:	mov    r9d,ebp
   140003c49:	mov    r8,r12
   140003c4c:	call   0x140001f70
   140003c51:	mov    r14,QWORD PTR [rip+0x47420]        # 0x14004b078
   140003c58:	jmp    0x140003c6b
   140003c5a:	mov    sil,r14b
   140003c5d:	mov    ebp,r13d
   140003c60:	mov    r14,QWORD PTR [rip+0x47411]        # 0x14004b078
   140003c67:	test   ebp,ebp
   140003c69:	jns    0x140003c98
   140003c6b:	cmp    r14,r15
   140003c6e:	je     0x140003e3d
   140003c74:	test   BYTE PTR [r14+0x1c],0x1
   140003c79:	je     0x140003e3d
   140003c7f:	mov    rcx,QWORD PTR [r14+0x10]
   140003c83:	mov    edx,0xd
   140003c88:	mov    r9d,ebp
   140003c8b:	mov    r8,r12
   140003c8e:	call   0x140001f70
   140003c93:	jmp    0x140003e36
   140003c98:	lea    rcx,[rsp+0xa8]
   140003ca0:	mov    QWORD PTR [rsp+0xa8],r13
   140003ca8:	call   0x14002ae7c
   140003cad:	mov    ebp,eax
   140003caf:	test   eax,eax
   140003cb1:	jns    0x140003ce7
   140003cb3:	mov    r14,QWORD PTR [rip+0x473be]        # 0x14004b078
   140003cba:	cmp    r14,r15
   140003cbd:	je     0x140003e26
   140003cc3:	test   BYTE PTR [r14+0x1c],0x1
   140003cc8:	je     0x140003e26
   140003cce:	mov    rcx,QWORD PTR [r14+0x10]
   140003cd2:	mov    edx,0xe
   140003cd7:	mov    r9d,eax
   140003cda:	mov    r8,r12
   140003cdd:	call   0x140001f70
   140003ce2:	jmp    0x140003e1f
   140003ce7:	mov    rdi,r13
   140003cea:	call   QWORD PTR [rip+0x2e760]        # 0x140032450
   140003cf0:	mov    rbx,QWORD PTR [rax+0x58]
   140003cf4:	mov    rcx,rbx
   140003cf7:	call   QWORD PTR [rip+0x2e9ab]        # 0x1400326a8
   140003cfd:	call   rbx
   140003cff:	mov    ebp,eax
   140003d01:	mov    r14d,0x12345678
   140003d07:	test   eax,eax
   140003d09:	js     0x140003d11
   140003d0b:	mov    edi,r14d
   140003d0e:	mov    ebp,r13d
   140003d11:	test   ebp,ebp
   140003d13:	jns    0x140003d49
   140003d15:	mov    r14,QWORD PTR [rip+0x4735c]        # 0x14004b078
   140003d1c:	cmp    r14,r15
   140003d1f:	je     0x140003e05
   140003d25:	test   BYTE PTR [r14+0x1c],0x1
   140003d2a:	je     0x140003e05
   140003d30:	mov    rcx,QWORD PTR [r14+0x10]
   140003d34:	mov    edx,0xf
   140003d39:	mov    r9d,ebp
   140003d3c:	mov    r8,r12
   140003d3f:	call   0x140001f70
   140003d44:	jmp    0x140003dfe
   140003d49:	mov    rbx,r13
   140003d4c:	call   0x140025df8
   140003d51:	test   al,al
   140003d53:	jne    0x140003d94
   140003d55:	call   QWORD PTR [rip+0x2e725]        # 0x140032480
   140003d5b:	mov    ebp,eax
   140003d5d:	test   eax,eax
   140003d5f:	js     0x140003d67
   140003d61:	mov    rbx,r14
   140003d64:	mov    ebp,r13d
   140003d67:	test   ebp,ebp
   140003d69:	jns    0x140003d94
   140003d6b:	mov    r14,QWORD PTR [rip+0x47306]        # 0x14004b078
   140003d72:	cmp    r14,r15
   140003d75:	je     0x140003df3
   140003d77:	test   BYTE PTR [r14+0x1c],0x1
   140003d7c:	je     0x140003df3
   140003d7e:	mov    edx,0x10
   140003d83:	mov    r9d,ebp
   140003d86:	mov    rcx,QWORD PTR [r14+0x10]
   140003d8a:	mov    r8,r12
   140003d8d:	call   0x140001f70
   140003d92:	jmp    0x140003dec
   140003d94:	lea    rax,[rip+0x3179d]        # 0x140035538
   140003d9b:	mov    QWORD PTR [rsp+0x60],r13
   140003da0:	mov    QWORD PTR [rsp+0x50],rax
   140003da5:	lea    rcx,[rsp+0x50]
   140003daa:	lea    rax,[rip+0x11f]        # 0x140003ed0
   140003db1:	mov    QWORD PTR [rsp+0x68],r13
   140003db6:	mov    QWORD PTR [rsp+0x58],rax
   140003dbb:	call   QWORD PTR [rip+0x2e2af]        # 0x140032070
   140003dc1:	test   eax,eax
   140003dc3:	jne    0x140003de9
   140003dc5:	call   0x14002b128
   140003dca:	mov    ebp,eax
   140003dcc:	mov    r14,QWORD PTR [rip+0x472a5]        # 0x14004b078
   140003dd3:	cmp    r14,r15
   140003dd6:	je     0x140003df3
   140003dd8:	test   BYTE PTR [r14+0x1c],0x1
   140003ddd:	je     0x140003df3
   140003ddf:	mov    edx,0x11
   140003de4:	mov    r9d,eax
   140003de7:	jmp    0x140003d86
   140003de9:	mov    ebp,r13d
   140003dec:	mov    r14,QWORD PTR [rip+0x47285]        # 0x14004b078
   140003df3:	test   rbx,rbx
   140003df6:	je     0x140003e05
   140003df8:	call   QWORD PTR [rip+0x2e65a]        # 0x140032458
   140003dfe:	mov    r14,QWORD PTR [rip+0x47273]        # 0x14004b078
   140003e05:	test   rdi,rdi
   140003e08:	je     0x140003e26
   140003e0a:	call   QWORD PTR [rip+0x2e640]        # 0x140032450
   140003e10:	mov    rbx,QWORD PTR [rax+0x60]
   140003e14:	mov    rcx,rbx
   140003e17:	call   QWORD PTR [rip+0x2e88b]        # 0x1400326a8
   140003e1d:	call   rbx
   140003e1f:	mov    r14,QWORD PTR [rip+0x47252]        # 0x14004b078
   140003e26:	cmp    QWORD PTR [rsp+0xa8],r13
   140003e2e:	je     0x140003e3d
   140003e30:	call   QWORD PTR [rip+0x2e852]        # 0x140032688
   140003e36:	mov    r14,QWORD PTR [rip+0x4723b]        # 0x14004b078
   140003e3d:	test   sil,sil
   140003e40:	je     0x140003e4e
   140003e42:	call   0x140024f50
   140003e47:	mov    r14,QWORD PTR [rip+0x4722a]        # 0x14004b078
   140003e4e:	cmp    r14,r15
   140003e51:	je     0x140003e77
   140003e53:	jmp    0x140003e6b
   140003e55:	mov    rcx,QWORD PTR [r14+0x8]
   140003e59:	test   rcx,rcx
   140003e5c:	je     0x140003e68
   140003e5e:	call   QWORD PTR [rip+0x2e1cc]        # 0x140032030
   140003e64:	mov    QWORD PTR [r14+0x8],r13
   140003e68:	mov    r14,QWORD PTR [r14]
   140003e6b:	test   r14,r14
   140003e6e:	jne    0x140003e55
   140003e70:	mov    QWORD PTR [rip+0x47201],r15        # 0x14004b078
   140003e77:	lea    r11,[rsp+0x70]
   140003e7c:	mov    eax,ebp
   140003e7e:	mov    rbx,QWORD PTR [r11+0x30]
   140003e82:	mov    rbp,QWORD PTR [r11+0x40]
   140003e86:	mov    rsi,QWORD PTR [r11+0x48]
   140003e8a:	mov    rsp,r11
   140003e8d:	pop    r15
   140003e8f:	pop    r14
   140003e91:	pop    r13
   140003e93:	pop    r12
   140003e95:	pop    rdi
   140003e96:	ret    
   140003e97:	int3   
   140003e98:	int3   
   140003e99:	int3   
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	sub    rsp,0x28
   140003ea4:	mov    edx,ecx
   140003ea6:	call   0x1400254fc
   140003eab:	test   eax,eax
   140003ead:	jne    0x140003eba
   140003eaf:	add    rsp,0x28
   140003eb3:	rex.W jmp QWORD PTR [rip+0x2e3ce]        # 0x140032288
   140003eba:	xor    eax,eax
   140003ebc:	add    rsp,0x28
   140003ec0:	ret    
   140003ec1:	int3   
   140003ec2:	int3   
   140003ec3:	int3   
   140003ec4:	int3   
   140003ec5:	int3   
   140003ec6:	int3   
   140003ec7:	int3   
   140003ec8:	int3   
   140003ec9:	int3   
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	rex push rbx
   140003ed2:	sub    rsp,0x50
   140003ed6:	mov    rax,rdx
   140003ed9:	test   rdx,rdx
   140003edc:	je     0x140003f21
   140003ede:	cmp    ecx,0x2
   140003ee1:	jne    0x140003f21
   140003ee3:	mov    rcx,QWORD PTR [rax+0x8]
   140003ee7:	lea    rdx,[rip+0x315d2]        # 0x1400354c0
   140003eee:	call   0x14002e882
   140003ef3:	test   eax,eax
   140003ef5:	jne    0x140003f21
   140003ef7:	mov    DWORD PTR [rip+0x4c13f],0x1        # 0x140050040
   140003f01:	mov    rcx,QWORD PTR [rip+0x47170]        # 0x14004b078
   140003f08:	lea    rax,[rip+0x47169]        # 0x14004b078
   140003f0f:	cmp    rcx,rax
   140003f12:	je     0x140003f56
   140003f14:	test   BYTE PTR [rcx+0x1c],0x4
   140003f18:	je     0x140003f56
   140003f1a:	mov    edx,0x12
   140003f1f:	jmp    0x140003f46
   140003f21:	and    DWORD PTR [rip+0x4c118],0x0        # 0x140050040
   140003f28:	mov    rcx,QWORD PTR [rip+0x47149]        # 0x14004b078
   140003f2f:	lea    rax,[rip+0x47142]        # 0x14004b078
   140003f36:	cmp    rcx,rax
   140003f39:	je     0x140003f56
   140003f3b:	test   BYTE PTR [rcx+0x1c],0x4
   140003f3f:	je     0x140003f56
   140003f41:	mov    edx,0x13
   140003f46:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f4a:	lea    r8,[rip+0x31907]        # 0x140035858
   140003f51:	call   0x140001f08
   140003f56:	and    DWORD PTR [rsp+0x68],0x0
   140003f5b:	call   QWORD PTR [rip+0x2e4ef]        # 0x140032450
   140003f61:	mov    rbx,QWORD PTR [rax+0x30]
   140003f65:	mov    rcx,rbx
   140003f68:	call   QWORD PTR [rip+0x2e73a]        # 0x1400326a8
   140003f6e:	lea    rcx,[rsp+0x68]
   140003f73:	call   rbx
   140003f75:	test   eax,eax
   140003f77:	jns    0x140003fdd
   140003f79:	test   BYTE PTR [rip+0x4a70c],0x1        # 0x14004e68c
   140003f80:	je     0x140003fd4
   140003f82:	and    QWORD PTR [rsp+0x40],0x0
   140003f88:	lea    r8,[rip+0x38fe1]        # 0x14003cf70
   140003f8f:	mov    ecx,0xa
   140003f94:	mov    DWORD PTR [rsp+0x70],eax
   140003f98:	mov    QWORD PTR [rsp+0x38],0x4
   140003fa1:	lea    rax,[rsp+0x70]
   140003fa6:	mov    QWORD PTR [rsp+0x30],rax
   140003fab:	lea    rax,[rip+0x34e0a]        # 0x140038dbc
   140003fb2:	movzx  r9d,cx
   140003fb6:	lea    edx,[rcx+0x21]
   140003fb9:	mov    QWORD PTR [rsp+0x28],0x4
   140003fc2:	mov    rcx,QWORD PTR [rip+0x4a6b7]        # 0x14004e680
   140003fc9:	mov    QWORD PTR [rsp+0x20],rax
   140003fce:	call   QWORD PTR [rip+0x2e04c]        # 0x140032020
   140003fd4:	lea    rdx,[rip+0x38e85]        # 0x14003ce60
   140003fdb:	jmp    0x140003ff8
   140003fdd:	mov    eax,DWORD PTR [rsp+0x68]
   140003fe1:	lea    rdx,[rip+0x38e78]        # 0x14003ce60
   140003fe8:	dec    eax
   140003fea:	lea    rcx,[rip+0x38e7f]        # 0x14003ce70
   140003ff1:	cmp    eax,0x1
   140003ff4:	cmovbe rdx,rcx
   140003ff8:	call   0x140025abc
   140003ffd:	add    rsp,0x50
   140004001:	pop    rbx
   140004002:	ret    
   140004003:	int3   
   140004004:	int3   
   140004005:	int3   
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	mov    rax,rsp
   140004013:	push   r14
   140004015:	sub    rsp,0x190
   14000401c:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140004025:	mov    QWORD PTR [rax+0x10],rbx
   140004029:	mov    QWORD PTR [rax+0x18],rsi
   14000402d:	mov    QWORD PTR [rax+0x20],rdi
   140004031:	mov    rax,QWORD PTR [rip+0x46fe8]        # 0x14004b020
   140004038:	xor    rax,rsp
   14000403b:	mov    QWORD PTR [rsp+0x180],rax
   140004043:	mov    rsi,rcx
   140004046:	cmp    DWORD PTR [rip+0x4bff3],0x0        # 0x140050040
   14000404d:	jne    0x1400040e2
   140004053:	call   0x140027f78
   140004058:	mov    r9d,eax
   14000405b:	mov    edi,0x1
   140004060:	cmp    eax,edi
   140004062:	jne    0x1400040a3
   140004064:	lea    rax,[rip+0x4700d]        # 0x14004b078
   14000406b:	mov    rcx,QWORD PTR [rip+0x47006]        # 0x14004b078
   140004072:	cmp    rcx,rax
   140004075:	je     0x140004090
   140004077:	test   BYTE PTR [rcx+0x1c],dil
   14000407b:	je     0x140004090
   14000407d:	lea    edx,[rdi+0x13]
   140004080:	lea    r8,[rip+0x317d1]        # 0x140035858
   140004087:	mov    rcx,QWORD PTR [rcx+0x10]
   14000408b:	call   0x140001f08
   140004090:	mov    DWORD PTR [rsi+0x24],0x42a
   140004097:	mov    DWORD PTR [rsi+0x28],0x42c
   14000409e:	jmp    0x140004303
   1400040a3:	test   eax,eax
   1400040a5:	jns    0x1400040e7
   1400040a7:	lea    rax,[rip+0x46fca]        # 0x14004b078
   1400040ae:	mov    rcx,QWORD PTR [rip+0x46fc3]        # 0x14004b078
   1400040b5:	cmp    rcx,rax
   1400040b8:	je     0x140004303
   1400040be:	test   BYTE PTR [rcx+0x1c],dil
   1400040c2:	je     0x140004303
   1400040c8:	mov    edx,0x15
   1400040cd:	lea    r8,[rip+0x31784]        # 0x140035858
   1400040d4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040d8:	call   0x140001f70
   1400040dd:	jmp    0x140004303
   1400040e2:	mov    edi,0x1
   1400040e7:	cmp    QWORD PTR [rip+0x4bed9],0x0        # 0x14004ffc8
   1400040ef:	jne    0x140004277
   1400040f5:	xor    r14d,r14d
   1400040f8:	cmp    BYTE PTR [rip+0x4be85],r14b        # 0x14004ff84
   1400040ff:	jne    0x1400041ef
   140004105:	mov    DWORD PTR [rsp+0x60],0x114
   14000410d:	lea    rcx,[rsp+0x60]
   140004112:	call   QWORD PTR [rip+0x2e190]        # 0x1400322a8
   140004118:	test   eax,eax
   14000411a:	je     0x140004144
   14000411c:	mov    ecx,DWORD PTR [rsp+0x64]
   140004120:	cmp    ecx,0x6
   140004123:	setb   al
   140004126:	mov    BYTE PTR [rip+0x4be64],al        # 0x14004ff90
   14000412c:	cmp    ecx,0x6
   14000412f:	ja     0x140004139
   140004131:	jne    0x14000413c
   140004133:	cmp    DWORD PTR [rsp+0x68],edi
   140004137:	jbe    0x14000413c
   140004139:	mov    r14d,edi
   14000413c:	test   al,al
   14000413e:	jne    0x1400041e6
   140004144:	lea    rcx,[rip+0x2fdcd]        # 0x140033f18
   14000414b:	call   QWORD PTR [rip+0x2e15f]        # 0x1400322b0
   140004151:	mov    rbx,rax
   140004154:	test   rax,rax
   140004157:	jne    0x140004173
   140004159:	test   r14d,r14d
   14000415c:	je     0x1400041b9
   14000415e:	lea    rcx,[rip+0x2ff7b]        # 0x1400340e0
   140004165:	call   QWORD PTR [rip+0x2e145]        # 0x1400322b0
   14000416b:	mov    rbx,rax
   14000416e:	test   rax,rax
   140004171:	je     0x1400041b9
   140004173:	lea    rdx,[rip+0x2ffb6]        # 0x140034130
   14000417a:	mov    rcx,rbx
   14000417d:	call   QWORD PTR [rip+0x2e11d]        # 0x1400322a0
   140004183:	mov    QWORD PTR [rip+0x4bdfe],rax        # 0x14004ff88
   14000418a:	test   rax,rax
   14000418d:	je     0x1400041b9
   14000418f:	lea    rdx,[rip+0x2ffaa]        # 0x140034140
   140004196:	mov    rcx,rbx
   140004199:	call   QWORD PTR [rip+0x2e101]        # 0x1400322a0
   14000419f:	mov    QWORD PTR [rip+0x46eda],rax        # 0x14004b080
   1400041a6:	test   rax,rax
   1400041a9:	jne    0x1400041c4
   1400041ab:	lea    rax,[rip+0xffffffffffffd70e]        # 0x1400018c0
   1400041b2:	mov    QWORD PTR [rip+0x46ec7],rax        # 0x14004b080
   1400041b9:	mov    al,dil
   1400041bc:	mov    BYTE PTR [rip+0x4bdce],al        # 0x14004ff90
   1400041c2:	jmp    0x1400041e6
   1400041c4:	lea    rdx,[rip+0x2ff85]        # 0x140034150
   1400041cb:	mov    rcx,rbx
   1400041ce:	call   QWORD PTR [rip+0x2e0cc]        # 0x1400322a0
   1400041d4:	mov    QWORD PTR [rip+0x4be0d],rax        # 0x14004ffe8
   1400041db:	test   rax,rax
   1400041de:	je     0x1400041ab
   1400041e0:	mov    al,BYTE PTR [rip+0x4bdaa]        # 0x14004ff90
   1400041e6:	mov    BYTE PTR [rip+0x4bd97],dil        # 0x14004ff84
   1400041ed:	jmp    0x1400041f5
   1400041ef:	mov    al,BYTE PTR [rip+0x4bd9b]        # 0x14004ff90
   1400041f5:	test   al,al
   1400041f7:	jne    0x140004229
   1400041f9:	mov    rbx,QWORD PTR [rip+0x46e80]        # 0x14004b080
   140004200:	mov    rcx,rbx
   140004203:	call   QWORD PTR [rip+0x2e49f]        # 0x1400326a8
   140004209:	lea    r9,[rip+0x4bdb8]        # 0x14004ffc8
   140004210:	lea    r8,[rip+0x46e19]        # 0x14004b030
   140004217:	lea    rdx,[rip+0xffffffffffffd562]        # 0x140001780
   14000421e:	lea    rcx,[rip+0x2fcb3]        # 0x140033ed8
   140004225:	call   rbx
   140004227:	jmp    0x140004277
   140004229:	lea    rdx,[rip+0x46e00]        # 0x14004b030
   140004230:	mov    QWORD PTR [rip+0x4bd91],rdx        # 0x14004ffc8
   140004237:	lea    rax,[rip+0x2fc9a]        # 0x140033ed8
   14000423e:	mov    QWORD PTR [rsp+0x40],rax
   140004243:	and    QWORD PTR [rsp+0x48],0x0
   140004249:	mov    QWORD PTR [rsp+0x38],rdx
   14000424e:	and    QWORD PTR [rsp+0x30],0x0
   140004254:	and    QWORD PTR [rsp+0x28],0x0
   14000425a:	lea    rcx,[rsp+0x40]
   14000425f:	mov    QWORD PTR [rsp+0x20],rcx
   140004264:	mov    r9d,edi
   140004267:	mov    r8,rax
   14000426a:	lea    rcx,[rip+0xffffffffffffd39f]        # 0x140001610
   140004271:	call   QWORD PTR [rip+0x2dda1]        # 0x140032018
   140004277:	test   BYTE PTR [rip+0x4bd42],dil        # 0x14004ffc0
   14000427e:	je     0x140004293
   140004280:	lea    r8,[rip+0x2fc61]        # 0x140033ee8
   140004287:	lea    rdx,[rip+0x2fc7a]        # 0x140033f08
   14000428e:	call   0x140003818
   140004293:	mov    ecx,0xe0
   140004298:	call   0x140023f10
   14000429d:	mov    QWORD PTR [rsp+0x40],rax
   1400042a2:	mov    rcx,rax
   1400042a5:	call   0x140004460
   1400042aa:	mov    rdi,rax
   1400042ad:	test   rax,rax
   1400042b0:	je     0x1400042c6
   1400042b2:	mov    rcx,QWORD PTR [rax]
   1400042b5:	mov    rbx,QWORD PTR [rcx]
   1400042b8:	mov    rcx,rbx
   1400042bb:	call   QWORD PTR [rip+0x2e3e7]        # 0x1400326a8
   1400042c1:	mov    rcx,rdi
   1400042c4:	call   rbx
   1400042c6:	mov    r14,QWORD PTR [rsi+0x48]
   1400042ca:	mov    QWORD PTR [rsi+0x48],rdi
   1400042ce:	test   r14,r14
   1400042d1:	je     0x1400042e8
   1400042d3:	mov    rax,QWORD PTR [r14]
   1400042d6:	mov    rbx,QWORD PTR [rax+0x8]
   1400042da:	mov    rcx,rbx
   1400042dd:	call   QWORD PTR [rip+0x2e3c5]        # 0x1400326a8
   1400042e3:	mov    rcx,r14
   1400042e6:	call   rbx
   1400042e8:	cmp    DWORD PTR [rip+0x4bd51],0x0        # 0x140050040
   1400042ef:	setne  dl
   1400042f2:	mov    rcx,QWORD PTR [rsi+0x48]
   1400042f6:	call   0x140002558
   1400042fb:	nop
   1400042fc:	mov    eax,0x1
   140004301:	jmp    0x140004305
   140004303:	xor    eax,eax
   140004305:	mov    rcx,QWORD PTR [rsp+0x180]
   14000430d:	xor    rcx,rsp
   140004310:	call   0x14002dd00
   140004315:	lea    r11,[rsp+0x190]
   14000431d:	mov    rbx,QWORD PTR [r11+0x18]
   140004321:	mov    rsi,QWORD PTR [r11+0x20]
   140004325:	mov    rdi,QWORD PTR [r11+0x28]
   140004329:	mov    rsp,r11
   14000432c:	pop    r14
   14000432e:	ret    
   14000432f:	int3   
   140004330:	int3   
   140004331:	int3   
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	int3   
   140004339:	int3   
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	rex push rdi
   140004342:	sub    rsp,0x30
   140004346:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000434f:	mov    QWORD PTR [rsp+0x40],rbx
   140004354:	mov    QWORD PTR [rsp+0x48],rsi
   140004359:	mov    rcx,QWORD PTR [rcx+0x48]
   14000435d:	xor    esi,esi
   14000435f:	test   rcx,rcx
   140004362:	je     0x140004405
   140004368:	call   0x1400029a0
   14000436d:	test   BYTE PTR [rip+0x4bc4c],0x1        # 0x14004ffc0
   140004374:	je     0x140004389
   140004376:	lea    r8,[rip+0x2fb6b]        # 0x140033ee8
   14000437d:	lea    rdx,[rip+0x2fb0c]        # 0x140033e90
   140004384:	call   0x140003818
   140004389:	cmp    BYTE PTR [rip+0x4bbf4],sil        # 0x14004ff84
   140004390:	je     0x140004405
   140004392:	mov    rdi,QWORD PTR [rip+0x4bc2f]        # 0x14004ffc8
   140004399:	test   rdi,rdi
   14000439c:	je     0x140004405
   14000439e:	cmp    BYTE PTR [rip+0x4bbeb],sil        # 0x14004ff90
   1400043a5:	jne    0x1400043be
   1400043a7:	mov    rbx,QWORD PTR [rip+0x4bc3a]        # 0x14004ffe8
   1400043ae:	mov    rcx,rbx
   1400043b1:	call   QWORD PTR [rip+0x2e2f1]        # 0x1400326a8
   1400043b7:	mov    rcx,rdi
   1400043ba:	call   rbx
   1400043bc:	jmp    0x1400043fe
   1400043be:	mov    rcx,QWORD PTR [rdi]
   1400043c1:	call   QWORD PTR [rip+0x2dc69]        # 0x140032030
   1400043c7:	mov    DWORD PTR [rdi+0x20],esi
   1400043ca:	mov    BYTE PTR [rdi+0x28],sil
   1400043ce:	mov    QWORD PTR [rdi+0x8],rsi
   1400043d2:	cmp    WORD PTR [rdi+0x2a],si
   1400043d6:	jbe    0x1400043fb
   1400043d8:	movzx  eax,WORD PTR [rdi+0x2a]
   1400043dc:	dec    eax
   1400043de:	cdq    
   1400043df:	and    edx,0x1f
   1400043e2:	add    eax,edx
   1400043e4:	sar    eax,0x5
   1400043e7:	inc    eax
   1400043e9:	movsxd r8,eax
   1400043ec:	shl    r8,0x2
   1400043f0:	xor    edx,edx
   1400043f2:	mov    rcx,QWORD PTR [rdi+0x30]
   1400043f6:	call   0x14002e2ce
   1400043fb:	mov    QWORD PTR [rdi],rsi
   1400043fe:	mov    QWORD PTR [rip+0x4bbc3],rsi        # 0x14004ffc8
   140004405:	mov    eax,0x493e0
   14000440a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000440f:	mov    rsi,QWORD PTR [rsp+0x48]
   140004414:	add    rsp,0x30
   140004418:	pop    rdi
   140004419:	ret    
   14000441a:	int3   
   14000441b:	int3   
   14000441c:	int3   
   14000441d:	int3   
   14000441e:	int3   
   14000441f:	int3   
   140004420:	mov    QWORD PTR [rsp+0x8],rbx
   140004425:	push   rdi
   140004426:	sub    rsp,0x20
   14000442a:	mov    rdi,QWORD PTR [rcx+0x48]
   14000442e:	and    QWORD PTR [rcx+0x48],0x0
   140004433:	test   rdi,rdi
   140004436:	je     0x14000444d
   140004438:	mov    rax,QWORD PTR [rdi]
   14000443b:	mov    rbx,QWORD PTR [rax+0x8]
   14000443f:	mov    rcx,rbx
   140004442:	call   QWORD PTR [rip+0x2e260]        # 0x1400326a8
   140004448:	mov    rcx,rdi
   14000444b:	call   rbx
   14000444d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004452:	add    rsp,0x20
   140004456:	pop    rdi
   140004457:	ret    
   140004458:	int3   
   140004459:	int3   
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	mov    rax,rsp
   140004463:	mov    QWORD PTR [rax+0x8],rcx
   140004467:	push   rdi
   140004468:	sub    rsp,0x30
   14000446c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004474:	mov    QWORD PTR [rax+0x10],rbx
   140004478:	mov    QWORD PTR [rax+0x18],rsi
   14000447c:	mov    rdi,rcx
   14000447f:	xor    esi,esi
   140004481:	mov    DWORD PTR [rcx+0x8],esi
   140004484:	xor    edx,edx
   140004486:	lea    r8d,[rsi+0x28]
   14000448a:	add    rcx,0x10
   14000448e:	call   0x14002e2ce
   140004493:	mov    BYTE PTR [rdi+0x38],sil
   140004497:	lea    rax,[rip+0x2ffba]        # 0x140034458
   14000449e:	mov    QWORD PTR [rdi],rax
   1400044a1:	mov    QWORD PTR [rdi+0x40],rsi
   1400044a5:	mov    QWORD PTR [rdi+0x48],rsi
   1400044a9:	lea    rcx,[rdi+0x50]
   1400044ad:	call   0x140003950
   1400044b2:	mov    DWORD PTR [rdi+0x80],esi
   1400044b8:	lea    rax,[rip+0x30861]        # 0x140034d20
   1400044bf:	mov    QWORD PTR [rdi+0x78],rax
   1400044c3:	mov    QWORD PTR [rdi+0x88],rsi
   1400044ca:	mov    BYTE PTR [rdi+0x90],sil
   1400044d1:	mov    BYTE PTR [rdi+0x91],sil
   1400044d8:	mov    DWORD PTR [rdi+0xa0],esi
   1400044de:	mov    QWORD PTR [rdi+0x98],rax
   1400044e5:	mov    QWORD PTR [rdi+0xa8],rsi
   1400044ec:	mov    BYTE PTR [rdi+0xb0],sil
   1400044f3:	mov    BYTE PTR [rdi+0xb1],sil
   1400044fa:	mov    QWORD PTR [rdi+0xb8],rsi
   140004501:	mov    QWORD PTR [rdi+0xc0],rsi
   140004508:	mov    QWORD PTR [rdi+0xc8],rsi
   14000450f:	mov    QWORD PTR [rdi+0xd0],rsi
   140004516:	mov    DWORD PTR [rdi+0xd8],esi
   14000451c:	mov    WORD PTR [rdi+0xdc],si
   140004523:	lea    rax,[rip+0x2ff96]        # 0x1400344c0
   14000452a:	mov    QWORD PTR [rdi],rax
   14000452d:	mov    rax,QWORD PTR [rip+0x4baa4]        # 0x14004ffd8
   140004534:	lock inc DWORD PTR [rax+0xc]
   140004538:	mov    rax,rdi
   14000453b:	mov    rbx,QWORD PTR [rsp+0x48]
   140004540:	mov    rsi,QWORD PTR [rsp+0x50]
   140004545:	add    rsp,0x30
   140004549:	pop    rdi
   14000454a:	ret    
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	int3   
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    eax,0x1
   140004565:	lock xadd DWORD PTR [rcx+0x8],eax
   14000456a:	inc    eax
   14000456c:	ret    
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	int3   
   140004571:	int3   
   140004572:	int3   
   140004573:	int3   
   140004574:	int3   
   140004575:	int3   
   140004576:	int3   
   140004577:	int3   
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    QWORD PTR [rsp+0x8],rbx
   140004585:	mov    QWORD PTR [rsp+0x10],rsi
   14000458a:	push   rdi
   14000458b:	sub    rsp,0x20
   14000458f:	mov    rsi,rcx
   140004592:	or     edi,0xffffffff
   140004595:	lock xadd DWORD PTR [rcx+0x8],edi
   14000459a:	sub    edi,0x1
   14000459d:	jne    0x1400045d2
   14000459f:	mov    rax,QWORD PTR [rip+0x4ba32]        # 0x14004ffd8
   1400045a6:	lock inc DWORD PTR [rax+0xc]
   1400045aa:	test   rcx,rcx
   1400045ad:	je     0x1400045c7
   1400045af:	mov    rcx,QWORD PTR [rcx]
   1400045b2:	mov    rbx,QWORD PTR [rcx+0x38]
   1400045b6:	mov    rcx,rbx
   1400045b9:	call   QWORD PTR [rip+0x2e0e9]        # 0x1400326a8
   1400045bf:	lea    edx,[rdi+0x1]
   1400045c2:	mov    rcx,rsi
   1400045c5:	call   rbx
   1400045c7:	mov    rcx,QWORD PTR [rip+0x4ba0a]        # 0x14004ffd8
   1400045ce:	lock dec DWORD PTR [rcx+0xc]
   1400045d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045d7:	mov    eax,edi
   1400045d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400045de:	add    rsp,0x20
   1400045e2:	pop    rdi
   1400045e3:	ret    
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    r9,r8
   1400045f3:	mov    r8,rdx
   1400045f6:	lea    rdx,[rip+0x30f13]        # 0x140035510
   1400045fd:	jmp    0x140004664
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	mov    QWORD PTR [rsp+0x8],rbx
   140004615:	push   rdi
   140004616:	sub    rsp,0x20
   14000461a:	lea    rax,[rip+0x2fe9f]        # 0x1400344c0
   140004621:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140004628:	mov    QWORD PTR [rcx],rax
   14000462b:	mov    ebx,edx
   14000462d:	mov    rax,QWORD PTR [rip+0x4b9a4]        # 0x14004ffd8
   140004634:	mov    rdi,rcx
   140004637:	lock dec DWORD PTR [rax+0xc]
   14000463b:	call   0x140002418
   140004640:	test   bl,0x1
   140004643:	je     0x14000464e
   140004645:	mov    rcx,rdi
   140004648:	call   QWORD PTR [rip+0x2df7a]        # 0x1400325c8
   14000464e:	mov    rax,rdi
   140004651:	mov    rbx,QWORD PTR [rsp+0x30]
   140004656:	add    rsp,0x20
   14000465a:	pop    rdi
   14000465b:	ret    
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	int3   
   140004661:	int3   
   140004662:	int3   
   140004663:	int3   
   140004664:	mov    rax,rsp
   140004667:	mov    QWORD PTR [rax+0x8],rbx
   14000466b:	mov    QWORD PTR [rax+0x10],rbp
   14000466f:	mov    QWORD PTR [rax+0x18],rsi
   140004673:	mov    QWORD PTR [rax+0x20],rdi
   140004677:	push   r12
   140004679:	push   r14
   14000467b:	push   r15
   14000467d:	sub    rsp,0x20
   140004681:	xor    esi,esi
   140004683:	mov    r14,r9
   140004686:	mov    rdi,r8
   140004689:	mov    rbx,rdx
   14000468c:	mov    r12,rcx
   14000468f:	test   rcx,rcx
   140004692:	je     0x14000477a
   140004698:	test   rdx,rdx
   14000469b:	je     0x14000477a
   1400046a1:	test   r9,r9
   1400046a4:	jne    0x1400046b0
   1400046a6:	mov    esi,0x80004003
   1400046ab:	jmp    0x14000477f
   1400046b0:	mov    QWORD PTR [r9],rsi
   1400046b3:	cmp    DWORD PTR [r8],esi
   1400046b6:	jne    0x1400046f6
   1400046b8:	cmp    DWORD PTR [r8+0x4],esi
   1400046bc:	jne    0x1400046f6
   1400046be:	cmp    DWORD PTR [r8+0x8],0xc0
   1400046c6:	jne    0x1400046f6
   1400046c8:	cmp    DWORD PTR [r8+0xc],0x46000000
   1400046d0:	jne    0x1400046f6
   1400046d2:	mov    rdi,QWORD PTR [rdx+0x8]
   1400046d6:	add    rdi,rcx
   1400046d9:	mov    rax,QWORD PTR [rdi]
   1400046dc:	mov    rbx,QWORD PTR [rax+0x8]
   1400046e0:	mov    rcx,rbx
   1400046e3:	call   QWORD PTR [rip+0x2dfbf]        # 0x1400326a8
   1400046e9:	mov    rcx,rdi
   1400046ec:	call   rbx
   1400046ee:	mov    QWORD PTR [r14],rdi
   1400046f1:	jmp    0x14000477f
   1400046f6:	cmp    QWORD PTR [rdx+0x10],rsi
   1400046fa:	je     0x140004763
   1400046fc:	mov    rcx,QWORD PTR [rbx]
   1400046ff:	mov    ebp,esi
   140004701:	test   rcx,rcx
   140004704:	sete   bpl
   140004708:	test   ebp,ebp
   14000470a:	jne    0x14000472a
   14000470c:	mov    eax,DWORD PTR [rdi]
   14000470e:	cmp    DWORD PTR [rcx],eax
   140004710:	jne    0x140004759
   140004712:	mov    eax,DWORD PTR [rdi+0x4]
   140004715:	cmp    DWORD PTR [rcx+0x4],eax
   140004718:	jne    0x140004759
   14000471a:	mov    eax,DWORD PTR [rdi+0x8]
   14000471d:	cmp    DWORD PTR [rcx+0x8],eax
   140004720:	jne    0x140004759
   140004722:	mov    eax,DWORD PTR [rdi+0xc]
   140004725:	cmp    DWORD PTR [rcx+0xc],eax
   140004728:	jne    0x140004759
   14000472a:	mov    r15,QWORD PTR [rbx+0x10]
   14000472e:	cmp    r15,0x1
   140004732:	je     0x14000476e
   140004734:	mov    rcx,r15
   140004737:	call   QWORD PTR [rip+0x2df6b]        # 0x1400326a8
   14000473d:	mov    r9,QWORD PTR [rbx+0x8]
   140004741:	mov    r8,r14
   140004744:	mov    rdx,rdi
   140004747:	mov    rcx,r12
   14000474a:	call   r15
   14000474d:	test   eax,eax
   14000474f:	je     0x14000476a
   140004751:	test   ebp,ebp
   140004753:	jne    0x140004759
   140004755:	test   eax,eax
   140004757:	js     0x14000476a
   140004759:	add    rbx,0x18
   14000475d:	cmp    QWORD PTR [rbx+0x10],rsi
   140004761:	jne    0x1400046fc
   140004763:	mov    esi,0x80004002
   140004768:	jmp    0x14000477f
   14000476a:	mov    esi,eax
   14000476c:	jmp    0x14000477f
   14000476e:	mov    rdi,QWORD PTR [rbx+0x8]
   140004772:	add    rdi,r12
   140004775:	jmp    0x1400046d9
   14000477a:	mov    esi,0x80070057
   14000477f:	mov    rbx,QWORD PTR [rsp+0x40]
   140004784:	mov    eax,esi
   140004786:	mov    rsi,QWORD PTR [rsp+0x50]
   14000478b:	mov    rbp,QWORD PTR [rsp+0x48]
   140004790:	mov    rdi,QWORD PTR [rsp+0x58]
   140004795:	add    rsp,0x20
   140004799:	pop    r15
   14000479b:	pop    r14
   14000479d:	pop    r12
   14000479f:	ret    
   1400047a0:	int3   
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047b5:	push   rdi
   1400047b6:	sub    rsp,0x20
   1400047ba:	mov    ebx,edx
   1400047bc:	mov    rdi,rcx
   1400047bf:	call   0x1400047e8
   1400047c4:	test   bl,0x1
   1400047c7:	je     0x1400047d2
   1400047c9:	mov    rcx,rdi
   1400047cc:	call   QWORD PTR [rip+0x2ddf6]        # 0x1400325c8
   1400047d2:	mov    rax,rdi
   1400047d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047da:	add    rsp,0x20
   1400047de:	pop    rdi
   1400047df:	ret    
   1400047e0:	int3   
   1400047e1:	int3   
   1400047e2:	int3   
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400047ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400047f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400047f7:	push   r14
   1400047f9:	sub    rsp,0x20
   1400047fd:	lea    rsi,[rcx+0x8]
   140004801:	mov    rdi,rcx
   140004804:	cmp    DWORD PTR [rsi],0x0
   140004807:	lea    rax,[rip+0x2fd1a]        # 0x140034528
   14000480e:	mov    QWORD PTR [rcx],rax
   140004811:	je     0x140004884
   140004813:	cmp    QWORD PTR [rcx+0x10],0x0
   140004818:	je     0x140004859
   14000481a:	test   rsi,rsi
   14000481d:	je     0x14000489a
   14000481f:	mov    r14,QWORD PTR [rsi+0x8]
   140004823:	test   r14,r14
   140004826:	je     0x14000484f
   140004828:	mov    rbx,QWORD PTR [r14]
   14000482b:	mov    rcx,rbx
   14000482e:	call   QWORD PTR [rip+0x2de74]        # 0x1400326a8
   140004834:	mov    rcx,QWORD PTR [r14+0x8]
   140004838:	call   rbx
   14000483a:	mov    rbx,QWORD PTR [r14+0x10]
   14000483e:	mov    rcx,r14
   140004841:	call   QWORD PTR [rip+0x2dd81]        # 0x1400325c8
   140004847:	mov    r14,rbx
   14000484a:	test   rbx,rbx
   14000484d:	jne    0x140004828
   14000484f:	and    QWORD PTR [rsi+0x8],0x0
   140004854:	and    QWORD PTR [rdi+0x10],0x0
   140004859:	mov    r14,QWORD PTR [rdi+0x40]
   14000485d:	test   r14,r14
   140004860:	je     0x140004877
   140004862:	mov    rax,QWORD PTR [r14]
   140004865:	mov    rbx,QWORD PTR [rax+0x10]
   140004869:	mov    rcx,rbx
   14000486c:	call   QWORD PTR [rip+0x2de36]        # 0x1400326a8
   140004872:	mov    rcx,r14
   140004875:	call   rbx
   140004877:	lea    rcx,[rdi+0x18]
   14000487b:	call   QWORD PTR [rip+0x2d9f7]        # 0x140032278
   140004881:	and    DWORD PTR [rsi],0x0
   140004884:	mov    rbx,QWORD PTR [rsp+0x30]
   140004889:	mov    rsi,QWORD PTR [rsp+0x38]
   14000488e:	mov    rdi,QWORD PTR [rsp+0x40]
   140004893:	add    rsp,0x20
   140004897:	pop    r14
   140004899:	ret    
   14000489a:	mov    ecx,0xc0000005
   14000489f:	call   0x1400052f4
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048b5:	push   rdi
   1400048b6:	sub    rsp,0x20
   1400048ba:	lea    rax,[rip+0x2fcd7]        # 0x140034598
   1400048c1:	mov    ebx,edx
   1400048c3:	mov    QWORD PTR [rcx],rax
   1400048c6:	mov    rdi,rcx
   1400048c9:	call   0x1400047e8
   1400048ce:	test   bl,0x1
   1400048d1:	je     0x1400048dc
   1400048d3:	mov    rcx,rdi
   1400048d6:	call   QWORD PTR [rip+0x2dcec]        # 0x1400325c8
   1400048dc:	mov    rax,rdi
   1400048df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048e4:	add    rsp,0x20
   1400048e8:	pop    rdi
   1400048e9:	ret    
   1400048ea:	int3   
   1400048eb:	int3   
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	mov    eax,0x1
   1400048f5:	lock xadd DWORD PTR [rcx+0xc],eax
   1400048fa:	inc    eax
   1400048fc:	ret    
   1400048fd:	int3   
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	int3   
   140004901:	int3   
   140004902:	int3   
   140004903:	int3   
   140004904:	int3   
   140004905:	int3   
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	or     eax,0xffffffff
   140004913:	lock xadd DWORD PTR [rcx+0xc],eax
   140004918:	dec    eax
   14000491a:	ret    
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	int3   
   140004921:	int3   
   140004922:	int3   
   140004923:	int3   
   140004924:	int3   
   140004925:	int3   
   140004926:	int3   
   140004927:	int3   
   140004928:	int3   
   140004929:	int3   
   14000492a:	int3   
   14000492b:	int3   
   14000492c:	int3   
   14000492d:	int3   
   14000492e:	int3   
   14000492f:	int3   
   140004930:	mov    eax,DWORD PTR [rcx+0xc]
   140004933:	ret    
   140004934:	int3   
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    QWORD PTR [rsp+0x8],rbx
   140004945:	mov    QWORD PTR [rsp+0x10],rsi
   14000494a:	push   rdi
   14000494b:	sub    rsp,0x30
   14000494f:	mov    rbx,rdx
   140004952:	test   rdx,rdx
   140004955:	jne    0x14000495e
   140004957:	mov    eax,0x80004003
   14000495c:	jmp    0x1400049ae
   14000495e:	xor    esi,esi
   140004960:	lea    rdi,[rcx+0x40]
   140004964:	cmp    QWORD PTR [rdi],rsi
   140004967:	jne    0x14000498e
   140004969:	lea    r9,[rip+0x30bb8]        # 0x140035528
   140004970:	mov    QWORD PTR [rsp+0x20],rdi
   140004975:	xor    edx,edx
   140004977:	lea    r8d,[rsi+0x1]
   14000497b:	lea    rcx,[rip+0x2f956]        # 0x1400342d8
   140004982:	call   QWORD PTR [rip+0x2dcf8]        # 0x140032680
   140004988:	mov    esi,eax
   14000498a:	test   eax,eax
   14000498c:	js     0x1400049ac
   14000498e:	mov    rcx,QWORD PTR [rdi]
   140004991:	mov    QWORD PTR [rbx],rcx
   140004994:	mov    rdi,QWORD PTR [rdi]
   140004997:	mov    rdx,QWORD PTR [rdi]
   14000499a:	mov    rbx,QWORD PTR [rdx+0x8]
   14000499e:	mov    rcx,rbx
   1400049a1:	call   QWORD PTR [rip+0x2dd01]        # 0x1400326a8
   1400049a7:	mov    rcx,rdi
   1400049aa:	call   rbx
   1400049ac:	mov    eax,esi
   1400049ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400049b3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400049b8:	add    rsp,0x30
   1400049bc:	pop    rdi
   1400049bd:	ret    
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	int3   
   1400049c1:	int3   
   1400049c2:	int3   
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049d5:	push   rdi
   1400049d6:	sub    rsp,0x20
   1400049da:	mov    rax,QWORD PTR [rdx]
   1400049dd:	mov    rdi,rdx
   1400049e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400049e4:	mov    rcx,rbx
   1400049e7:	call   QWORD PTR [rip+0x2dcbb]        # 0x1400326a8
   1400049ed:	lea    r8,[rip+0x30b44]        # 0x140035538
   1400049f4:	mov    rcx,rdi
   1400049f7:	lea    rdx,[rip+0x30b42]        # 0x140035540
   1400049fe:	mov    rax,rbx
   140004a01:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a06:	add    rsp,0x20
   140004a0a:	pop    rdi
   140004a0b:	rex.W jmp rax
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	int3   
   140004a11:	int3   
   140004a12:	int3   
   140004a13:	int3   
   140004a14:	int3   
   140004a15:	int3   
   140004a16:	int3   
   140004a17:	int3   
   140004a18:	int3   
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	mov    eax,0x80004005
   140004a25:	ret    
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	mov    QWORD PTR [rsp+0x8],rbx
   140004a31:	push   rbp
   140004a32:	push   rsi
   140004a33:	push   rdi
   140004a34:	push   r14
   140004a36:	push   r15
   140004a38:	lea    rbp,[rsp-0x9d0]
   140004a40:	sub    rsp,0xad0
   140004a47:	mov    rax,QWORD PTR [rip+0x465d2]        # 0x14004b020
   140004a4e:	xor    rax,rsp
   140004a51:	mov    QWORD PTR [rbp+0x9c0],rax
   140004a58:	xor    r14d,r14d
   140004a5b:	mov    edi,edx
   140004a5d:	mov    esi,r8d
   140004a60:	mov    QWORD PTR [rsp+0x38],r14
   140004a65:	lea    rax,[rip+0x2faf4]        # 0x140034560
   140004a6c:	mov    QWORD PTR [rsp+0x40],r14
   140004a71:	xor    edx,edx
   140004a73:	mov    QWORD PTR [rsp+0x30],rax
   140004a78:	lea    r8d,[r14+0x28]
   140004a7c:	mov    DWORD PTR [rsp+0x48],r14d
   140004a81:	lea    rcx,[rsp+0x50]
   140004a86:	mov    rbx,r9
   140004a89:	call   0x14002e2ce
   140004a8e:	lea    rcx,[rsp+0x50]
   140004a93:	mov    BYTE PTR [rsp+0x78],r14b
   140004a98:	call   0x140004ee4
   140004a9d:	test   eax,eax
   140004a9f:	js     0x140004b1d
   140004aa1:	mov    BYTE PTR [rsp+0x78],0x1
   140004aa6:	test   rbx,rbx
   140004aa9:	je     0x140004aca
   140004aab:	jmp    0x140004ac2
   140004aad:	mov    r8,QWORD PTR [rbx+0x8]
   140004ab1:	lea    rcx,[rsp+0x30]
   140004ab6:	mov    rdx,rax
   140004ab9:	call   0x1400051d0
   140004abe:	lea    rbx,[rbx+0x10]
   140004ac2:	mov    rax,QWORD PTR [rbx]
   140004ac5:	test   rax,rax
   140004ac8:	jne    0x140004aad
   140004aca:	mov    rax,QWORD PTR [rsp+0x30]
   140004acf:	mov    rbx,QWORD PTR [rax+0x18]
   140004ad3:	mov    rcx,rbx
   140004ad6:	call   QWORD PTR [rip+0x2dbcc]        # 0x1400326a8
   140004adc:	lea    r8,[rip+0x30a55]        # 0x140035538
   140004ae3:	lea    rdx,[rip+0x30a56]        # 0x140035540
   140004aea:	lea    rcx,[rsp+0x30]
   140004aef:	call   rbx
   140004af1:	mov    ebx,eax
   140004af3:	test   eax,eax
   140004af5:	js     0x140004b1f
   140004af7:	mov    rbx,QWORD PTR [rip+0x4b63a]        # 0x140050138
   140004afe:	lea    rdx,[rbp-0x80]
   140004b02:	mov    r15d,0x104
   140004b08:	mov    rcx,rbx
   140004b0b:	mov    r8d,r15d
   140004b0e:	call   QWORD PTR [rip+0x2d61c]        # 0x140032130
   140004b14:	test   eax,eax
   140004b16:	jne    0x140004b51
   140004b18:	call   0x1400052bc
   140004b1d:	mov    ebx,eax
   140004b1f:	lea    rcx,[rsp+0x30]
   140004b24:	call   0x140004e54
   140004b29:	mov    eax,ebx
   140004b2b:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140004b32:	xor    rcx,rsp
   140004b35:	call   0x14002dd00
   140004b3a:	mov    rbx,QWORD PTR [rsp+0xb00]
   140004b42:	add    rsp,0xad0
   140004b49:	pop    r15
   140004b4b:	pop    r14
   140004b4d:	pop    rdi
   140004b4e:	pop    rsi
   140004b4f:	pop    rbp
   140004b50:	ret    
   140004b51:	cmp    eax,r15d
   140004b54:	jne    0x140004b5d
   140004b56:	mov    ebx,0x8007007a
   140004b5b:	jmp    0x140004b1f
   140004b5d:	lea    rdx,[rbp-0x80]
   140004b61:	mov    ecx,r14d
   140004b64:	mov    r9d,0x27
   140004b6a:	movzx  r8d,WORD PTR [rdx]
   140004b6e:	test   r8w,r8w
   140004b72:	je     0x140004ba6
   140004b74:	mov    eax,ecx
   140004b76:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   140004b7f:	cmp    r8w,r9w
   140004b83:	jne    0x140004b98
   140004b85:	cmp    ecx,0x206
   140004b8b:	jae    0x140004b98
   140004b8d:	inc    ecx
   140004b8f:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140004b98:	add    rdx,0x2
   140004b9c:	inc    ecx
   140004b9e:	cmp    ecx,0x207
   140004ba4:	jb     0x140004b6a
   140004ba6:	mov    eax,ecx
   140004ba8:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140004bb1:	test   rbx,rbx
   140004bb4:	je     0x140004bcf
   140004bb6:	xor    ecx,ecx
   140004bb8:	call   QWORD PTR [rip+0x2d6f2]        # 0x1400322b0
   140004bbe:	cmp    rbx,rax
   140004bc1:	je     0x140004bcf
   140004bc3:	lea    r8,[rbp+0x190]
   140004bca:	jmp    0x140004c61
   140004bcf:	mov    r15d,0x22
   140004bd5:	lea    rcx,[rbp+0x190]
   140004bdc:	or     rbx,0xffffffffffffffff
   140004be0:	mov    WORD PTR [rbp+0x5a0],r15w
   140004be8:	mov    rax,rbx
   140004beb:	inc    rax
   140004bee:	cmp    WORD PTR [rcx+rax*2],r14w
   140004bf3:	jne    0x140004beb
   140004bf5:	inc    eax
   140004bf7:	lea    r8,[rbp+0x190]
   140004bfe:	movsxd r9,eax
   140004c01:	lea    rcx,[rbp+0x5a2]
   140004c08:	add    r9,r9
   140004c0b:	mov    edx,0x416
   140004c10:	call   QWORD PTR [rip+0x2d9aa]        # 0x1400325c0
   140004c16:	test   eax,eax
   140004c18:	je     0x140004c24
   140004c1a:	mov    ebx,0x80004005
   140004c1f:	jmp    0x140004b1f
   140004c24:	lea    rax,[rbp+0x5a0]
   140004c2b:	inc    rbx
   140004c2e:	cmp    WORD PTR [rax+rbx*2],r14w
   140004c33:	jne    0x140004c2b
   140004c35:	movsxd rax,ebx
   140004c38:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   140004c41:	lea    rax,[rax*2+0x2]
   140004c49:	cmp    rax,0x418
   140004c4f:	jae    0x140004ccb
   140004c51:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140004c5a:	lea    r8,[rbp+0x5a0]
   140004c61:	lea    rdx,[rip+0x308e8]        # 0x140035550
   140004c68:	lea    rcx,[rsp+0x30]
   140004c6d:	call   0x1400051d0
   140004c72:	test   eax,eax
   140004c74:	js     0x140004b1d
   140004c7a:	lea    r8,[rbp+0x190]
   140004c81:	lea    rdx,[rip+0x308d8]        # 0x140035560
   140004c88:	lea    rcx,[rsp+0x30]
   140004c8d:	call   0x1400051d0
   140004c92:	test   eax,eax
   140004c94:	js     0x140004b1d
   140004c9a:	movzx  r8d,di
   140004c9e:	lea    r9,[rip+0x308d3]        # 0x140035578
   140004ca5:	lea    rdx,[rbp-0x80]
   140004ca9:	lea    rcx,[rsp+0x30]
   140004cae:	test   esi,esi
   140004cb0:	je     0x140004cbc
   140004cb2:	mov    DWORD PTR [rsp+0x20],0x1
   140004cba:	jmp    0x140004cc1
   140004cbc:	mov    DWORD PTR [rsp+0x20],r14d
   140004cc1:	call   0x140006ba8
   140004cc6:	jmp    0x140004b1d
   140004ccb:	call   0x14002e158
   140004cd0:	int3   
   140004cd1:	int3   
   140004cd2:	int3   
   140004cd3:	int3   
   140004cd4:	int3   
   140004cd5:	int3   
   140004cd6:	int3   
   140004cd7:	int3   
   140004cd8:	int3   
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	int3   
   140004cdd:	int3   
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	jmp    0x140004a2c
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	test   r8,r8
   140004cf3:	je     0x140004cf9
   140004cf5:	and    QWORD PTR [r8],0x0
   140004cf9:	mov    eax,0x80004001
   140004cfe:	ret    
   140004cff:	int3   
   140004d00:	int3   
   140004d01:	int3   
   140004d02:	int3   
   140004d03:	int3   
   140004d04:	int3   
   140004d05:	int3   
   140004d06:	int3   
   140004d07:	int3   
   140004d08:	int3   
   140004d09:	int3   
   140004d0a:	int3   
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	mov    eax,0x1
   140004d15:	ret    
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	int3   
   140004d19:	int3   
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	int3   
   140004d1d:	int3   
   140004d1e:	int3   
   140004d1f:	int3   
   140004d20:	xor    eax,eax
   140004d22:	ret    
   140004d23:	int3   
   140004d24:	int3   
   140004d25:	int3   
   140004d26:	int3   
   140004d27:	int3   
   140004d28:	int3   
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	mov    QWORD PTR [rsp+0x8],rbx
   140004d35:	push   rdi
   140004d36:	sub    rsp,0x20
   140004d3a:	mov    ebx,edx
   140004d3c:	mov    rdi,rcx
   140004d3f:	call   0x140004e54
   140004d44:	test   bl,0x1
   140004d47:	je     0x140004d52
   140004d49:	mov    rcx,rdi
   140004d4c:	call   QWORD PTR [rip+0x2d876]        # 0x1400325c8
   140004d52:	mov    rax,rdi
   140004d55:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d5a:	add    rsp,0x20
   140004d5e:	pop    rdi
   140004d5f:	ret    
   140004d60:	int3   
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	int3   
   140004d65:	int3   
   140004d66:	int3   
   140004d67:	int3   
   140004d68:	mov    QWORD PTR [rsp+0x8],rbx
   140004d6d:	mov    QWORD PTR [rsp+0x10],rsi
   140004d72:	push   rdi
   140004d73:	sub    rsp,0x20
   140004d77:	xor    esi,esi
   140004d79:	mov    rbx,rcx
   140004d7c:	cmp    DWORD PTR [rcx+0x10],esi
   140004d7f:	jle    0x140004db8
   140004d81:	xor    edi,edi
   140004d83:	test   rdi,rdi
   140004d86:	js     0x140004dff
   140004d88:	cmp    esi,DWORD PTR [rbx+0x10]
   140004d8b:	jge    0x140004dff
   140004d8d:	mov    rcx,QWORD PTR [rbx]
   140004d90:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140004d94:	call   QWORD PTR [rip+0x2d82e]        # 0x1400325c8
   140004d9a:	cmp    esi,DWORD PTR [rbx+0x10]
   140004d9d:	jge    0x140004df4
   140004d9f:	mov    rcx,QWORD PTR [rbx+0x8]
   140004da3:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140004da7:	call   QWORD PTR [rip+0x2d81b]        # 0x1400325c8
   140004dad:	inc    esi
   140004daf:	add    rdi,0x8
   140004db3:	cmp    esi,DWORD PTR [rbx+0x10]
   140004db6:	jl     0x140004d83
   140004db8:	mov    rcx,QWORD PTR [rbx]
   140004dbb:	test   rcx,rcx
   140004dbe:	je     0x140004dca
   140004dc0:	call   QWORD PTR [rip+0x2d802]        # 0x1400325c8
   140004dc6:	and    QWORD PTR [rbx],0x0
   140004dca:	mov    rcx,QWORD PTR [rbx+0x8]
   140004dce:	test   rcx,rcx
   140004dd1:	je     0x140004dde
   140004dd3:	call   QWORD PTR [rip+0x2d7ef]        # 0x1400325c8
   140004dd9:	and    QWORD PTR [rbx+0x8],0x0
   140004dde:	and    DWORD PTR [rbx+0x10],0x0
   140004de2:	mov    rbx,QWORD PTR [rsp+0x30]
   140004de7:	xor    eax,eax
   140004de9:	mov    rsi,QWORD PTR [rsp+0x38]
   140004dee:	add    rsp,0x20
   140004df2:	pop    rdi
   140004df3:	ret    
   140004df4:	mov    ecx,0xc000008c
   140004df9:	call   0x1400052f4
   140004dfe:	int3   
   140004dff:	mov    ecx,0xc000008c
   140004e04:	call   0x1400052f4
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    QWORD PTR [rsp+0x8],rbx
   140004e15:	push   rdi
   140004e16:	sub    rsp,0x20
   140004e1a:	lea    rdi,[rcx+0x20]
   140004e1e:	mov    rbx,rcx
   140004e21:	mov    rcx,rdi
   140004e24:	call   QWORD PTR [rip+0x2d2de]        # 0x140032108
   140004e2a:	lea    rcx,[rbx+0x8]
   140004e2e:	call   0x140004d68
   140004e33:	mov    rcx,rdi
   140004e36:	mov    ebx,eax
   140004e38:	call   QWORD PTR [rip+0x2d2ba]        # 0x1400320f8
   140004e3e:	mov    eax,ebx
   140004e40:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e45:	add    rsp,0x20
   140004e49:	pop    rdi
   140004e4a:	ret    
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	int3   
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	mov    QWORD PTR [rsp+0x8],rbx
   140004e59:	push   rdi
   140004e5a:	sub    rsp,0x20
   140004e5e:	lea    rax,[rip+0x2f6fb]        # 0x140034560
   140004e65:	mov    rbx,rcx
   140004e68:	lea    rdi,[rcx+0x20]
   140004e6c:	mov    QWORD PTR [rcx],rax
   140004e6f:	mov    rcx,rdi
   140004e72:	call   QWORD PTR [rip+0x2d290]        # 0x140032108
   140004e78:	lea    rcx,[rbx+0x8]
   140004e7c:	call   0x140004d68
   140004e81:	mov    rcx,rdi
   140004e84:	call   QWORD PTR [rip+0x2d26e]        # 0x1400320f8
   140004e8a:	cmp    BYTE PTR [rdi+0x28],0x0
   140004e8e:	je     0x140004e9d
   140004e90:	mov    rcx,rdi
   140004e93:	mov    BYTE PTR [rdi+0x28],0x0
   140004e97:	call   QWORD PTR [rip+0x2d3db]        # 0x140032278
   140004e9d:	lea    rcx,[rbx+0x8]
   140004ea1:	call   0x140004d68
   140004ea6:	mov    rcx,QWORD PTR [rbx+0x8]
   140004eaa:	test   rcx,rcx
   140004ead:	je     0x140004eba
   140004eaf:	call   QWORD PTR [rip+0x2d713]        # 0x1400325c8
   140004eb5:	and    QWORD PTR [rbx+0x8],0x0
   140004eba:	mov    rcx,QWORD PTR [rbx+0x10]
   140004ebe:	test   rcx,rcx
   140004ec1:	je     0x140004ece
   140004ec3:	call   QWORD PTR [rip+0x2d6ff]        # 0x1400325c8
   140004ec9:	and    QWORD PTR [rbx+0x10],0x0
   140004ece:	and    DWORD PTR [rbx+0x18],0x0
   140004ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ed7:	add    rsp,0x20
   140004edb:	pop    rdi
   140004edc:	ret    
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	sub    rsp,0x38
   140004ee8:	call   QWORD PTR [rip+0x2d24a]        # 0x140032138
   140004eee:	xor    eax,eax
   140004ef0:	mov    DWORD PTR [rsp+0x20],eax
   140004ef4:	jmp    0x140004eff
   140004ef6:	mov    eax,0x8007000e
   140004efb:	mov    DWORD PTR [rsp+0x20],eax
   140004eff:	add    rsp,0x38
   140004f03:	ret    
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	rex push rbx
   140004f0e:	sub    rsp,0x20
   140004f12:	mov    rbx,rcx
   140004f15:	mov    rcx,QWORD PTR [rcx]
   140004f18:	call   QWORD PTR [rip+0x2d6aa]        # 0x1400325c8
   140004f1e:	and    QWORD PTR [rbx],0x0
   140004f22:	add    rsp,0x20
   140004f26:	pop    rbx
   140004f27:	ret    
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	mov    rax,rsp
   140004f33:	mov    QWORD PTR [rax+0x18],r8
   140004f37:	mov    QWORD PTR [rax+0x10],rdx
   140004f3b:	mov    QWORD PTR [rax+0x8],rcx
   140004f3f:	push   rbx
   140004f40:	push   rsi
   140004f41:	push   rdi
   140004f42:	push   r12
   140004f44:	push   r13
   140004f46:	push   r14
   140004f48:	push   r15
   140004f4a:	sub    rsp,0x60
   140004f4e:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140004f56:	mov    r13,r8
   140004f59:	mov    r12,rdx
   140004f5c:	mov    r15,rcx
   140004f5f:	xor    esi,esi
   140004f61:	test   rdx,rdx
   140004f64:	je     0x1400051ad
   140004f6a:	test   r8,r8
   140004f6d:	je     0x1400051ad
   140004f73:	mov    r14d,esi
   140004f76:	or     rbx,0xffffffffffffffff
   140004f7a:	mov    rax,rbx
   140004f7d:	inc    rax
   140004f80:	cmp    WORD PTR [rdx+rax*2],si
   140004f84:	jne    0x140004f7d
   140004f86:	lea    rcx,[rax*2+0x2]
   140004f8e:	mov    QWORD PTR [rsp+0x48],rcx
   140004f93:	mov    QWORD PTR [rsp+0x28],rsi
   140004f98:	mov    eax,0x2
   140004f9d:	mul    rcx
   140004fa0:	cmovo  rax,rbx
   140004fa4:	mov    rcx,rax
   140004fa7:	call   0x140023f10
   140004fac:	mov    QWORD PTR [rsp+0x20],rax
   140004fb1:	mov    QWORD PTR [rsp+0x28],rax
   140004fb6:	jmp    0x140004fe3
   140004fb8:	xor    esi,esi
   140004fba:	or     rbx,0xffffffffffffffff
   140004fbe:	mov    r15,QWORD PTR [rsp+0xa0]
   140004fc6:	mov    r13,QWORD PTR [rsp+0xb0]
   140004fce:	mov    r12,QWORD PTR [rsp+0xa8]
   140004fd6:	mov    r14d,esi
   140004fd9:	mov    rax,QWORD PTR [rsp+0x28]
   140004fde:	mov    QWORD PTR [rsp+0x20],rax
   140004fe3:	mov    rdi,rax
   140004fe6:	mov    QWORD PTR [rsp+0x40],rax
   140004feb:	mov    rax,rbx
   140004fee:	inc    rax
   140004ff1:	cmp    WORD PTR [r13+rax*2+0x0],si
   140004ff7:	jne    0x140004fee
   140004ff9:	inc    eax
   140004ffb:	movsxd rcx,eax
   140004ffe:	add    rcx,rcx
   140005001:	mov    QWORD PTR [rsp+0x38],rcx
   140005006:	mov    QWORD PTR [rsp+0x30],rsi
   14000500b:	mov    eax,0x2
   140005010:	mul    rcx
   140005013:	cmovo  rax,rbx
   140005017:	mov    rcx,rax
   14000501a:	call   0x140023f10
   14000501f:	mov    rbx,rax
   140005022:	mov    QWORD PTR [rsp+0x30],rax
   140005027:	mov    rax,QWORD PTR [rsp+0x20]
   14000502c:	jmp    0x14000505f
   14000502e:	xor    esi,esi
   140005030:	mov    r15,QWORD PTR [rsp+0xa0]
   140005038:	mov    r13,QWORD PTR [rsp+0xb0]
   140005040:	mov    r12,QWORD PTR [rsp+0xa8]
   140005048:	mov    r14d,esi
   14000504b:	mov    rax,QWORD PTR [rsp+0x28]
   140005050:	mov    QWORD PTR [rsp+0x20],rax
   140005055:	mov    rdi,QWORD PTR [rsp+0x40]
   14000505a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000505f:	mov    QWORD PTR [rsp+0xa8],rbx
   140005067:	test   rax,rax
   14000506a:	je     0x140005189
   140005070:	test   rbx,rbx
   140005073:	je     0x140005189
   140005079:	mov    rdx,QWORD PTR [rsp+0x48]
   14000507e:	mov    r9,rdx
   140005081:	mov    r8,r12
   140005084:	mov    rcx,rax
   140005087:	call   QWORD PTR [rip+0x2d533]        # 0x1400325c0
   14000508d:	test   eax,eax
   14000508f:	je     0x1400050c6
   140005091:	cmp    eax,0xc
   140005094:	je     0x1400050bb
   140005096:	cmp    eax,0x16
   140005099:	je     0x1400050b0
   14000509b:	cmp    eax,0x22
   14000509e:	je     0x1400050b0
   1400050a0:	cmp    eax,0x50
   1400050a3:	je     0x1400050c6
   1400050a5:	mov    ecx,0x80004005
   1400050aa:	call   0x140005d50
   1400050af:	int3   
   1400050b0:	mov    ecx,0x80070057
   1400050b5:	call   0x140005d50
   1400050ba:	int3   
   1400050bb:	mov    ecx,0x8007000e
   1400050c0:	call   0x140005d50
   1400050c5:	int3   
   1400050c6:	mov    r9,QWORD PTR [rsp+0x38]
   1400050cb:	mov    r8,r13
   1400050ce:	mov    rdx,r9
   1400050d1:	mov    rcx,rbx
   1400050d4:	call   QWORD PTR [rip+0x2d4e6]        # 0x1400325c0
   1400050da:	test   eax,eax
   1400050dc:	je     0x140005113
   1400050de:	cmp    eax,0xc
   1400050e1:	je     0x140005108
   1400050e3:	cmp    eax,0x16
   1400050e6:	je     0x1400050fd
   1400050e8:	cmp    eax,0x22
   1400050eb:	je     0x1400050fd
   1400050ed:	cmp    eax,0x50
   1400050f0:	je     0x140005113
   1400050f2:	mov    ecx,0x80004005
   1400050f7:	call   0x140005d50
   1400050fc:	int3   
   1400050fd:	mov    ecx,0x80070057
   140005102:	call   0x140005d50
   140005107:	int3   
   140005108:	mov    ecx,0x8007000e
   14000510d:	call   0x140005d50
   140005112:	int3   
   140005113:	mov    eax,DWORD PTR [r15+0x10]
   140005117:	inc    eax
   140005119:	movsxd rdx,eax
   14000511c:	mov    r12d,0x8
   140005122:	mov    r8d,r12d
   140005125:	mov    rcx,QWORD PTR [r15]
   140005128:	call   QWORD PTR [rip+0x45ee2]        # 0x14004b010
   14000512e:	test   rax,rax
   140005131:	je     0x140005189
   140005133:	mov    QWORD PTR [r15],rax
   140005136:	mov    eax,DWORD PTR [r15+0x10]
   14000513a:	inc    eax
   14000513c:	movsxd rdx,eax
   14000513f:	mov    r8d,r12d
   140005142:	mov    rcx,QWORD PTR [r15+0x8]
   140005146:	call   QWORD PTR [rip+0x45ec4]        # 0x14004b010
   14000514c:	test   rax,rax
   14000514f:	je     0x140005189
   140005151:	mov    QWORD PTR [r15+0x8],rax
   140005155:	movsxd rdx,DWORD PTR [r15+0x10]
   140005159:	mov    rax,QWORD PTR [r15]
   14000515c:	lea    rcx,[rax+rdx*8]
   140005160:	test   rcx,rcx
   140005163:	je     0x14000516d
   140005165:	mov    rax,QWORD PTR [rsp+0x20]
   14000516a:	mov    QWORD PTR [rcx],rax
   14000516d:	mov    rax,QWORD PTR [r15+0x8]
   140005171:	lea    rcx,[rax+rdx*8]
   140005175:	test   rcx,rcx
   140005178:	je     0x14000517d
   14000517a:	mov    QWORD PTR [rcx],rbx
   14000517d:	inc    DWORD PTR [r15+0x10]
   140005181:	mov    rdi,rsi
   140005184:	mov    rbx,rsi
   140005187:	jmp    0x14000518f
   140005189:	mov    r14d,0x8007000e
   14000518f:	test   r14d,r14d
   140005192:	setns  sil
   140005196:	mov    rcx,rbx
   140005199:	call   QWORD PTR [rip+0x2d429]        # 0x1400325c8
   14000519f:	nop
   1400051a0:	mov    rcx,rdi
   1400051a3:	call   QWORD PTR [rip+0x2d41f]        # 0x1400325c8
   1400051a9:	mov    eax,esi
   1400051ab:	jmp    0x1400051af
   1400051ad:	xor    eax,eax
   1400051af:	add    rsp,0x60
   1400051b3:	pop    r15
   1400051b5:	pop    r14
   1400051b7:	pop    r13
   1400051b9:	pop    r12
   1400051bb:	pop    rdi
   1400051bc:	pop    rsi
   1400051bd:	pop    rbx
   1400051be:	ret    
   1400051bf:	int3   
   1400051c0:	int3   
   1400051c1:	int3   
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	int3   
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    rax,rsp
   1400051d3:	push   rdi
   1400051d4:	sub    rsp,0x30
   1400051d8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400051e0:	mov    QWORD PTR [rax+0x8],rbx
   1400051e4:	mov    QWORD PTR [rax+0x18],rbp
   1400051e8:	mov    QWORD PTR [rax+0x20],rsi
   1400051ec:	mov    rbx,r8
   1400051ef:	mov    rsi,rdx
   1400051f2:	mov    rbp,rcx
   1400051f5:	test   rdx,rdx
   1400051f8:	je     0x140005237
   1400051fa:	test   rbx,rbx
   1400051fd:	je     0x140005237
   1400051ff:	add    rcx,0x20
   140005203:	call   QWORD PTR [rip+0x2ceff]        # 0x140032108
   140005209:	and    QWORD PTR [rsp+0x48],0x0
   14000520f:	lea    rcx,[rbp+0x8]
   140005213:	mov    r8,rbx
   140005216:	mov    rdx,rsi
   140005219:	call   0x140004f30
   14000521e:	mov    ebx,eax
   140005220:	lea    rcx,[rbp+0x20]
   140005224:	call   QWORD PTR [rip+0x2cece]        # 0x1400320f8
   14000522a:	neg    ebx
   14000522c:	sbb    eax,eax
   14000522e:	not    eax
   140005230:	and    eax,0x8007000e
   140005235:	jmp    0x14000523c
   140005237:	mov    eax,0x80070057
   14000523c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005241:	mov    rbp,QWORD PTR [rsp+0x50]
   140005246:	mov    rsi,QWORD PTR [rsp+0x58]
   14000524b:	add    rsp,0x30
   14000524f:	pop    rdi
   140005250:	ret    
   140005251:	int3   
   140005252:	int3   
   140005253:	int3   
   140005254:	int3   
   140005255:	int3   
   140005256:	int3   
   140005257:	int3   
   140005258:	mov    rcx,QWORD PTR [rcx]
   14000525b:	rex.W jmp QWORD PTR [rip+0x2d366]        # 0x1400325c8
   140005262:	int3   
   140005263:	int3   
   140005264:	int3   
   140005265:	int3   
   140005266:	int3   
   140005267:	int3   
   140005268:	sub    rsp,0x28
   14000526c:	lea    rax,[rcx+0x8]
   140005270:	cmp    QWORD PTR [rcx],rax
   140005273:	je     0x14000527a
   140005275:	call   0x140005258
   14000527a:	add    rsp,0x28
   14000527e:	ret    
   14000527f:	int3   
   140005280:	int3   
   140005281:	int3   
   140005282:	int3   
   140005283:	int3   
   140005284:	int3   
   140005285:	int3   
   140005286:	int3   
   140005287:	int3   
   140005288:	rex push rbx
   14000528a:	sub    rsp,0x20
   14000528e:	mov    rbx,rcx
   140005291:	mov    rcx,rdx
   140005294:	call   QWORD PTR [rip+0x2d336]        # 0x1400325d0
   14000529a:	test   rax,rax
   14000529d:	je     0x1400052a8
   14000529f:	mov    QWORD PTR [rbx],rax
   1400052a2:	add    rsp,0x20
   1400052a6:	pop    rbx
   1400052a7:	ret    
   1400052a8:	mov    ecx,0x8007000e
   1400052ad:	call   0x140005d50
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	sub    rsp,0x28
   1400052c0:	call   QWORD PTR [rip+0x2cfc2]        # 0x140032288
   1400052c6:	mov    ecx,eax
   1400052c8:	movzx  eax,ax
   1400052cb:	or     eax,0x80070000
   1400052d0:	test   ecx,ecx
   1400052d2:	cmovle eax,ecx
   1400052d5:	add    rsp,0x28
   1400052d9:	ret    
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400052e4:	rex.W jmp QWORD PTR [rip+0x2d375]        # 0x140032660
   1400052eb:	int3   
   1400052ec:	int3   
   1400052ed:	int3   
   1400052ee:	int3   
   1400052ef:	int3   
   1400052f0:	int3   
   1400052f1:	int3   
   1400052f2:	int3   
   1400052f3:	int3   
   1400052f4:	xor    r9d,r9d
   1400052f7:	xor    r8d,r8d
   1400052fa:	lea    edx,[r9+0x1]
   1400052fe:	rex.W jmp QWORD PTR [rip+0x2cdfb]        # 0x140032100
   140005305:	int3   
   140005306:	int3   
   140005307:	int3   
   140005308:	int3   
   140005309:	int3   
   14000530a:	int3   
   14000530b:	int3   
   14000530c:	mov    rax,rsp
   14000530f:	mov    QWORD PTR [rax+0x8],rbx
   140005313:	mov    QWORD PTR [rax+0x10],rbp
   140005317:	mov    QWORD PTR [rax+0x18],rsi
   14000531b:	mov    QWORD PTR [rax+0x20],rdi
   14000531f:	push   r14
   140005321:	sub    rsp,0x20
   140005325:	mov    rbx,rcx
   140005328:	mov    esi,r8d
   14000532b:	lea    ecx,[r8+0x1]
   14000532f:	mov    rbp,rdx
   140005332:	add    ecx,DWORD PTR [rbx]
   140005334:	cmp    ecx,DWORD PTR [rbx]
   140005336:	jle    0x1400053e9
   14000533c:	cmp    ecx,r8d
   14000533f:	jle    0x1400053e9
   140005345:	mov    edi,DWORD PTR [rbx+0x4]
   140005348:	xor    r14d,r14d
   14000534b:	cmp    ecx,edi
   14000534d:	jl     0x140005388
   14000534f:	cmp    edi,0x3fffffff
   140005355:	jg     0x1400053e9
   14000535b:	add    edi,edi
   14000535d:	cmp    ecx,edi
   14000535f:	jge    0x14000534f
   140005361:	mov    eax,edi
   140005363:	mov    ecx,0xffffffff
   140005368:	add    rax,rax
   14000536b:	cmp    rax,rcx
   14000536e:	ja     0x1400053e9
   140005370:	mov    rcx,QWORD PTR [rbx+0x8]
   140005374:	mov    edx,eax
   140005376:	call   QWORD PTR [rip+0x2d2ec]        # 0x140032668
   14000537c:	test   rax,rax
   14000537f:	je     0x1400053e9
   140005381:	mov    QWORD PTR [rbx+0x8],rax
   140005385:	mov    DWORD PTR [rbx+0x4],edi
   140005388:	cmp    DWORD PTR [rbx],r14d
   14000538b:	jl     0x1400053e9
   14000538d:	mov    ecx,DWORD PTR [rbx+0x4]
   140005390:	cmp    DWORD PTR [rbx],ecx
   140005392:	jge    0x1400053e9
   140005394:	mov    eax,ecx
   140005396:	sub    eax,DWORD PTR [rbx]
   140005398:	cmp    eax,ecx
   14000539a:	jg     0x1400053e9
   14000539c:	movsxd rcx,DWORD PTR [rbx]
   14000539f:	mov    r8,rbp
   1400053a2:	movsxd rdx,eax
   1400053a5:	mov    rax,QWORD PTR [rbx+0x8]
   1400053a9:	add    rdx,rdx
   1400053ac:	lea    rcx,[rax+rcx*2]
   1400053b0:	lea    eax,[rsi+rsi*1]
   1400053b3:	movsxd r9,eax
   1400053b6:	call   QWORD PTR [rip+0x2d204]        # 0x1400325c0
   1400053bc:	test   eax,eax
   1400053be:	je     0x1400053d4
   1400053c0:	cmp    eax,0xc
   1400053c3:	je     0x14000541c
   1400053c5:	cmp    eax,0x16
   1400053c8:	je     0x140005411
   1400053ca:	cmp    eax,0x22
   1400053cd:	je     0x140005411
   1400053cf:	cmp    eax,0x50
   1400053d2:	jne    0x140005406
   1400053d4:	add    DWORD PTR [rbx],esi
   1400053d6:	mov    rax,QWORD PTR [rbx+0x8]
   1400053da:	movsxd rcx,DWORD PTR [rbx]
   1400053dd:	mov    WORD PTR [rax+rcx*2],r14w
   1400053e2:	mov    eax,0x1
   1400053e7:	jmp    0x1400053eb
   1400053e9:	xor    eax,eax
   1400053eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053f0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400053f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400053fa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400053ff:	add    rsp,0x20
   140005403:	pop    r14
   140005405:	ret    
   140005406:	mov    ecx,0x80004005
   14000540b:	call   0x140005d50
   140005410:	int3   
   140005411:	mov    ecx,0x80070057
   140005416:	call   0x140005d50
   14000541b:	int3   
   14000541c:	mov    ecx,0x8007000e
   140005421:	call   0x140005d50
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	mov    rax,rsp
   140005433:	push   rbp
   140005434:	push   rsi
   140005435:	push   rdi
   140005436:	push   r12
   140005438:	push   r13
   14000543a:	push   r14
   14000543c:	push   r15
   14000543e:	lea    rbp,[rax-0x5f]
   140005442:	sub    rsp,0xa0
   140005449:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140005451:	mov    QWORD PTR [rax+0x10],rbx
   140005455:	mov    rax,QWORD PTR [rip+0x45bc4]        # 0x14004b020
   14000545c:	xor    rax,rsp
   14000545f:	mov    QWORD PTR [rbp+0x17],rax
   140005463:	mov    QWORD PTR [rbp-0x49],r8
   140005467:	mov    rdi,rdx
   14000546a:	mov    rsi,rcx
   14000546d:	xor    ebx,ebx
   14000546f:	test   r8,r8
   140005472:	jne    0x14000547e
   140005474:	mov    eax,0x80004003
   140005479:	jmp    0x1400056d0
   14000547e:	mov    QWORD PTR [r8],rbx
   140005481:	or     rax,0xffffffffffffffff
   140005485:	inc    rax
   140005488:	cmp    WORD PTR [rdx+rax*2],bx
   14000548c:	jne    0x140005485
   14000548e:	add    eax,eax
   140005490:	mov    ecx,0x3e8
   140005495:	cmp    eax,0x64
   140005498:	cmovl  eax,ecx
   14000549b:	mov    DWORD PTR [rbp-0x59],ebx
   14000549e:	mov    DWORD PTR [rbp-0x55],eax
   1400054a1:	mov    ecx,eax
   1400054a3:	add    rcx,rcx
   1400054a6:	mov    eax,0xffffffff
   1400054ab:	cmp    rcx,rax
   1400054ae:	jbe    0x1400054b9
   1400054b0:	mov    rax,rbx
   1400054b3:	mov    QWORD PTR [rbp-0x51],rbx
   1400054b7:	jmp    0x1400054cd
   1400054b9:	mov    ecx,ecx
   1400054bb:	call   QWORD PTR [rip+0x2d1af]        # 0x140032670
   1400054c1:	mov    QWORD PTR [rbp-0x51],rax
   1400054c5:	test   rax,rax
   1400054c8:	je     0x1400054cd
   1400054ca:	mov    WORD PTR [rax],bx
   1400054cd:	test   rax,rax
   1400054d0:	jne    0x1400054dc
   1400054d2:	mov    ebx,0x8007000e
   1400054d7:	jmp    0x1400056c4
   1400054dc:	mov    QWORD PTR [rsi],rdi
   1400054df:	cmp    WORD PTR [rdi],bx
   1400054e2:	je     0x1400056b5
   1400054e8:	mov    rdx,QWORD PTR [rsi]
   1400054eb:	cmp    WORD PTR [rdx],0x25
   1400054ef:	jne    0x140005650
   1400054f5:	mov    rcx,rdx
   1400054f8:	call   QWORD PTR [rip+0x2ce9a]        # 0x140032398
   1400054fe:	mov    rdi,rax
   140005501:	mov    QWORD PTR [rsi],rax
   140005504:	cmp    WORD PTR [rax],0x25
   140005508:	jne    0x140005512
   14000550a:	mov    rdx,rax
   14000550d:	jmp    0x140005650
   140005512:	test   rax,rax
   140005515:	je     0x1400056ae
   14000551b:	movzx  eax,WORD PTR [rax]
   14000551e:	test   ax,ax
   140005521:	je     0x1400056ae
   140005527:	cmp    ax,0x25
   14000552b:	je     0x14000553b
   14000552d:	mov    rcx,rdi
   140005530:	call   QWORD PTR [rip+0x2ce62]        # 0x140032398
   140005536:	mov    rdi,rax
   140005539:	jmp    0x14000551b
   14000553b:	test   rdi,rdi
   14000553e:	je     0x1400056ae
   140005544:	mov    rax,rdi
   140005547:	sub    rax,QWORD PTR [rsi]
   14000554a:	sar    rax,1
   14000554d:	cmp    rax,0x1f
   140005551:	jg     0x1400056a7
   140005557:	movsxd r9,eax
   14000555a:	mov    r8,QWORD PTR [rsi]
   14000555d:	mov    edx,0x20
   140005562:	lea    rcx,[rbp-0x29]
   140005566:	call   QWORD PTR [rip+0x2d06c]        # 0x1400325d8
   14000556c:	test   eax,eax
   14000556e:	je     0x140005594
   140005570:	cmp    eax,0xc
   140005573:	je     0x140005691
   140005579:	cmp    eax,0x16
   14000557c:	je     0x140005686
   140005582:	cmp    eax,0x22
   140005585:	je     0x140005686
   14000558b:	cmp    eax,0x50
   14000558e:	jne    0x14000567b
   140005594:	mov    r13,QWORD PTR [rsi+0x8]
   140005598:	lea    rcx,[r13+0x20]
   14000559c:	call   QWORD PTR [rip+0x2cb66]        # 0x140032108
   1400055a2:	mov    r15d,ebx
   1400055a5:	mov    r14,rbx
   1400055a8:	cmp    DWORD PTR [r13+0x18],ebx
   1400055ac:	jle    0x1400055d0
   1400055ae:	mov    rax,QWORD PTR [r13+0x8]
   1400055b2:	lea    rdx,[rbp-0x29]
   1400055b6:	mov    rcx,QWORD PTR [rax+r14*8]
   1400055ba:	call   QWORD PTR [rip+0x2cb30]        # 0x1400320f0
   1400055c0:	test   eax,eax
   1400055c2:	je     0x1400055d8
   1400055c4:	inc    r15d
   1400055c7:	inc    r14
   1400055ca:	cmp    r15d,DWORD PTR [r13+0x18]
   1400055ce:	jl     0x1400055ae
   1400055d0:	or     r15d,0xffffffff
   1400055d4:	or     r14,0xffffffffffffffff
   1400055d8:	cmp    r14,0xffffffffffffffff
   1400055dc:	jne    0x1400055e3
   1400055de:	mov    r14,rbx
   1400055e1:	jmp    0x1400055fe
   1400055e3:	test   r14,r14
   1400055e6:	js     0x14000569c
   1400055ec:	cmp    r15d,DWORD PTR [r13+0x18]
   1400055f0:	jge    0x14000569c
   1400055f6:	mov    rax,QWORD PTR [r13+0x10]
   1400055fa:	mov    r14,QWORD PTR [rax+r14*8]
   1400055fe:	lea    rcx,[r13+0x20]
   140005602:	call   QWORD PTR [rip+0x2caf0]        # 0x1400320f8
   140005608:	test   r14,r14
   14000560b:	je     0x1400056ae
   140005611:	mov    QWORD PTR [rbp-0x41],rbx
   140005615:	or     r8,0xffffffffffffffff
   140005619:	inc    r8
   14000561c:	cmp    WORD PTR [r14+r8*2],bx
   140005621:	jne    0x140005619
   140005623:	mov    rdx,r14
   140005626:	lea    rcx,[rbp-0x59]
   14000562a:	call   0x14000530c
   14000562f:	nop
   140005630:	test   eax,eax
   140005632:	je     0x1400054d2
   140005638:	cmp    QWORD PTR [rsi],rdi
   14000563b:	je     0x140005667
   14000563d:	mov    rcx,QWORD PTR [rsi]
   140005640:	call   QWORD PTR [rip+0x2cd52]        # 0x140032398
   140005646:	mov    QWORD PTR [rsi],rax
   140005649:	cmp    rax,rdi
   14000564c:	jne    0x14000563d
   14000564e:	jmp    0x140005667
   140005650:	mov    r8d,0x1
   140005656:	lea    rcx,[rbp-0x59]
   14000565a:	call   0x14000530c
   14000565f:	test   eax,eax
   140005661:	je     0x1400054d2
   140005667:	mov    rcx,QWORD PTR [rsi]
   14000566a:	call   QWORD PTR [rip+0x2cd28]        # 0x140032398
   140005670:	mov    QWORD PTR [rsi],rax
   140005673:	cmp    WORD PTR [rax],bx
   140005676:	jmp    0x1400054e2
   14000567b:	mov    ecx,0x80004005
   140005680:	call   0x140005d50
   140005685:	int3   
   140005686:	mov    ecx,0x80070057
   14000568b:	call   0x140005d50
   140005690:	int3   
   140005691:	mov    ecx,0x8007000e
   140005696:	call   0x140005d50
   14000569b:	int3   
   14000569c:	mov    ecx,0xc000008c
   1400056a1:	call   0x1400052f4
   1400056a6:	int3   
   1400056a7:	mov    ebx,0x80004005
   1400056ac:	jmp    0x1400056c4
   1400056ae:	mov    ebx,0x80020009
   1400056b3:	jmp    0x1400056c4
   1400056b5:	mov    rcx,QWORD PTR [rbp-0x51]
   1400056b9:	mov    QWORD PTR [rbp-0x51],rbx
   1400056bd:	mov    rax,QWORD PTR [rbp-0x49]
   1400056c1:	mov    QWORD PTR [rax],rcx
   1400056c4:	mov    rcx,QWORD PTR [rbp-0x51]
   1400056c8:	call   QWORD PTR [rip+0x2cf92]        # 0x140032660
   1400056ce:	mov    eax,ebx
   1400056d0:	mov    rcx,QWORD PTR [rbp+0x17]
   1400056d4:	xor    rcx,rsp
   1400056d7:	call   0x14002dd00
   1400056dc:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400056e4:	add    rsp,0xa0
   1400056eb:	pop    r15
   1400056ed:	pop    r14
   1400056ef:	pop    r13
   1400056f1:	pop    r12
   1400056f3:	pop    rdi
   1400056f4:	pop    rsi
   1400056f5:	pop    rbp
   1400056f6:	ret    
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    rax,rsp
   140005703:	mov    QWORD PTR [rax+0x8],rbx
   140005707:	mov    QWORD PTR [rax+0x10],rbp
   14000570b:	mov    QWORD PTR [rax+0x18],rsi
   14000570f:	mov    QWORD PTR [rax+0x20],rdi
   140005713:	push   r15
   140005715:	sub    rsp,0x20
   140005719:	mov    eax,DWORD PTR [rip+0x4a8d5]        # 0x14004fff4
   14000571f:	mov    rsi,rdx
   140005722:	mov    rbp,rcx
   140005725:	test   al,0x1
   140005727:	jne    0x14000579a
   140005729:	or     eax,0x1
   14000572c:	mov    DWORD PTR [rip+0x4a8c2],eax        # 0x14004fff4
   140005732:	lea    rax,[rip+0x2e81b]        # 0x140033f54
   140005739:	mov    QWORD PTR [rip+0x4a8c0],rax        # 0x140050000
   140005740:	mov    eax,0x8
   140005745:	mov    WORD PTR [rip+0x4a8bc],ax        # 0x140050008
   14000574c:	lea    rax,[rip+0x2e805]        # 0x140033f58
   140005753:	mov    QWORD PTR [rip+0x4a8b6],rax        # 0x140050010
   14000575a:	mov    eax,0x4008
   14000575f:	mov    WORD PTR [rip+0x4a8b2],ax        # 0x140050018
   140005766:	lea    rax,[rip+0x2e7ef]        # 0x140033f5c
   14000576d:	mov    QWORD PTR [rip+0x4a8ac],rax        # 0x140050020
   140005774:	mov    eax,0x13
   140005779:	mov    WORD PTR [rip+0x4a8a8],ax        # 0x140050028
   140005780:	lea    rax,[rip+0x2e7d9]        # 0x140033f60
   140005787:	mov    QWORD PTR [rip+0x4a8a2],rax        # 0x140050030
   14000578e:	mov    eax,0x11
   140005793:	mov    WORD PTR [rip+0x4a89e],ax        # 0x140050038
   14000579a:	lea    r15,[rip+0x4a85f]        # 0x140050000
   1400057a1:	xor    ebx,ebx
   1400057a3:	mov    rdi,r15
   1400057a6:	mov    rdx,QWORD PTR [rdi]
   1400057a9:	mov    rcx,rbp
   1400057ac:	call   QWORD PTR [rip+0x2c93e]        # 0x1400320f0
   1400057b2:	test   eax,eax
   1400057b4:	je     0x1400057c9
   1400057b6:	inc    ebx
   1400057b8:	add    rdi,0x10
   1400057bc:	movsxd rax,ebx
   1400057bf:	cmp    rax,0x4
   1400057c3:	jb     0x1400057a6
   1400057c5:	xor    eax,eax
   1400057c7:	jmp    0x1400057dd
   1400057c9:	movsxd rcx,ebx
   1400057cc:	mov    eax,0x1
   1400057d1:	add    rcx,rcx
   1400057d4:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   1400057da:	mov    WORD PTR [rsi],cx
   1400057dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057e2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400057e7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400057ec:	mov    rdi,QWORD PTR [rsp+0x48]
   1400057f1:	add    rsp,0x20
   1400057f5:	pop    r15
   1400057f7:	ret    
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	rex push rbx
   140005802:	sub    rsp,0x20
   140005806:	cmp    QWORD PTR [rcx],0x0
   14000580a:	mov    rbx,rcx
   14000580d:	je     0x140005824
   14000580f:	mov    rcx,QWORD PTR [rbx]
   140005812:	mov    rax,QWORD PTR [rcx]
   140005815:	mov    QWORD PTR [rbx],rax
   140005818:	call   QWORD PTR [rip+0x2cdaa]        # 0x1400325c8
   14000581e:	cmp    QWORD PTR [rbx],0x0
   140005822:	jne    0x14000580f
   140005824:	add    rsp,0x20
   140005828:	pop    rbx
   140005829:	ret    
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	rex push rbx
   140005832:	push   rsi
   140005833:	push   rdi
   140005834:	push   r12
   140005836:	push   r13
   140005838:	push   r14
   14000583a:	push   r15
   14000583c:	mov    eax,0x21a0
   140005841:	call   0x14002e8c0
   140005846:	sub    rsp,rax
   140005849:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140005852:	mov    rax,QWORD PTR [rip+0x457c7]        # 0x14004b020
   140005859:	xor    rax,rsp
   14000585c:	mov    QWORD PTR [rsp+0x2190],rax
   140005864:	mov    r15,r8
   140005867:	mov    QWORD PTR [rsp+0x40],r8
   14000586c:	mov    r13,rdx
   14000586f:	mov    r12,rcx
   140005872:	mov    QWORD PTR [rsp+0x50],rcx
   140005877:	mov    QWORD PTR [rsp+0x48],rdx
   14000587c:	mov    QWORD PTR [rsp+0x60],r8
   140005881:	mov    QWORD PTR [rsp+0x70],r9
   140005886:	xor    ebx,ebx
   140005888:	mov    WORD PTR [rsp+0x30],bx
   14000588d:	lea    rdx,[rsp+0x190]
   140005895:	call   0x140006078
   14000589a:	test   eax,eax
   14000589c:	js     0x140005d1b
   1400058a2:	lea    rdx,[rsp+0x30]
   1400058a7:	lea    rcx,[rsp+0x190]
   1400058af:	call   0x140005700
   1400058b4:	test   eax,eax
   1400058b6:	jne    0x1400058c2
   1400058b8:	mov    eax,0x80020009
   1400058bd:	jmp    0x140005d1b
   1400058c2:	mov    rcx,QWORD PTR [r12]
   1400058c6:	movzx  eax,WORD PTR [rcx]
   1400058c9:	cmp    eax,0x20
   1400058cc:	ja     0x1400058ea
   1400058ce:	movabs rdx,0x100002600
   1400058d8:	bt     rdx,rax
   1400058dc:	jae    0x1400058ea
   1400058de:	call   QWORD PTR [rip+0x2cab4]        # 0x140032398
   1400058e4:	mov    QWORD PTR [r12],rax
   1400058e8:	jmp    0x1400058c2
   1400058ea:	lea    rdx,[rsp+0x190]
   1400058f2:	mov    rcx,r12
   1400058f5:	call   0x140006078
   1400058fa:	test   eax,eax
   1400058fc:	js     0x140005d1b
   140005902:	movzx  eax,WORD PTR [rsp+0x30]
   140005907:	cmp    eax,0x8
   14000590a:	je     0x140005cb5
   140005910:	cmp    eax,0x11
   140005913:	je     0x140005afa
   140005919:	cmp    eax,0x13
   14000591c:	je     0x140005ac2
   140005922:	cmp    eax,0x4008
   140005927:	jne    0x140005d07
   14000592d:	lea    rcx,[rsp+0x190]
   140005935:	or     rsi,0xffffffffffffffff
   140005939:	mov    rax,rsi
   14000593c:	inc    rax
   14000593f:	cmp    WORD PTR [rcx+rax*2],bx
   140005943:	jne    0x14000593c
   140005945:	add    eax,0x2
   140005948:	mov    QWORD PTR [rsp+0x80],rbx
   140005950:	movsxd rcx,eax
   140005953:	test   eax,eax
   140005955:	je     0x140005993
   140005957:	xor    edx,edx
   140005959:	mov    rax,rsi
   14000595c:	div    rcx
   14000595f:	cmp    rax,0x2
   140005963:	jb     0x140005989
   140005965:	lea    rdx,[rcx+rcx*1]
   140005969:	cmp    rdx,0x100
   140005970:	jbe    0x140005993
   140005972:	lea    rcx,[rsp+0x80]
   14000597a:	call   0x140005288
   14000597f:	mov    rdi,QWORD PTR [rsp+0x80]
   140005987:	jmp    0x1400059a3
   140005989:	mov    ecx,0x80070057
   14000598e:	call   0x140005d50
   140005993:	lea    rdi,[rsp+0x88]
   14000599b:	mov    QWORD PTR [rsp+0x80],rdi
   1400059a3:	jmp    0x1400059c7
   1400059a5:	xor    ebx,ebx
   1400059a7:	or     rsi,0xffffffffffffffff
   1400059ab:	mov    rdi,QWORD PTR [rsp+0x80]
   1400059b3:	mov    r12,QWORD PTR [rsp+0x50]
   1400059b8:	mov    r13,QWORD PTR [rsp+0x48]
   1400059bd:	mov    rax,QWORD PTR [rsp+0x60]
   1400059c2:	mov    QWORD PTR [rsp+0x40],rax
   1400059c7:	test   rdi,rdi
   1400059ca:	je     0x140005a9a
   1400059d0:	lea    r14,[rsp+0x190]
   1400059d8:	cmp    WORD PTR [rsp+0x190],bx
   1400059e0:	je     0x140005a27
   1400059e2:	mov    r15d,0x30
   1400059e8:	mov    rcx,r14
   1400059eb:	call   QWORD PTR [rip+0x2c9a7]        # 0x140032398
   1400059f1:	movzx  ecx,WORD PTR [r14]
   1400059f5:	cmp    cx,0x5c
   1400059f9:	jne    0x140005a16
   1400059fb:	cmp    WORD PTR [rax],r15w
   1400059ff:	jne    0x140005a16
   140005a01:	mov    WORD PTR [rdi],bx
   140005a04:	add    rdi,0x2
   140005a08:	mov    rcx,rax
   140005a0b:	call   QWORD PTR [rip+0x2c987]        # 0x140032398
   140005a11:	mov    r14,rax
   140005a14:	jmp    0x140005a21
   140005a16:	mov    WORD PTR [rdi],cx
   140005a19:	add    rdi,0x2
   140005a1d:	add    r14,0x2
   140005a21:	cmp    WORD PTR [r14],bx
   140005a25:	jne    0x1400059e8
   140005a27:	mov    DWORD PTR [rdi],0x0
   140005a2d:	mov    eax,ebx
   140005a2f:	mov    rdx,QWORD PTR [rsp+0x80]
   140005a37:	test   rdx,rdx
   140005a3a:	setne  al
   140005a3d:	test   eax,eax
   140005a3f:	jne    0x140005a4c
   140005a41:	mov    ecx,0x80004005
   140005a46:	call   0x140005d50
   140005a4b:	int3   
   140005a4c:	mov    r9d,ebx
   140005a4f:	mov    r8,rdx
   140005a52:	mov    rcx,rsi
   140005a55:	inc    rcx
   140005a58:	cmp    WORD PTR [r8+rcx*2],bx
   140005a5d:	jne    0x140005a55
   140005a5f:	inc    ecx
   140005a61:	lea    r8,[r8+rcx*2]
   140005a65:	lea    r9d,[r9+rcx*2]
   140005a69:	cmp    ecx,0x1
   140005a6c:	jne    0x140005a52
   140005a6e:	mov    DWORD PTR [rsp+0x28],r9d
   140005a73:	mov    QWORD PTR [rsp+0x20],rdx
   140005a78:	lea    r9d,[rcx+0x6]
   140005a7c:	xor    r8d,r8d
   140005a7f:	mov    rdx,QWORD PTR [rsp+0x40]
   140005a84:	mov    rcx,QWORD PTR [r13+0x0]
   140005a88:	call   QWORD PTR [rip+0x2c5ca]        # 0x140032058
   140005a8e:	mov    esi,eax
   140005a90:	mov    rdi,QWORD PTR [rsp+0x80]
   140005a98:	jmp    0x140005a9f
   140005a9a:	mov    esi,0xe
   140005a9f:	lea    rax,[rsp+0x88]
   140005aa7:	cmp    rdi,rax
   140005aaa:	je     0x140005cfa
   140005ab0:	lea    rcx,[rsp+0x80]
   140005ab8:	call   0x140005258
   140005abd:	jmp    0x140005cfa
   140005ac2:	lea    r9,[rsp+0x30]
   140005ac7:	xor    r8d,r8d
   140005aca:	xor    edx,edx
   140005acc:	lea    rcx,[rsp+0x190]
   140005ad4:	call   QWORD PTR [rip+0x2c87e]        # 0x140032358
   140005ada:	mov    eax,DWORD PTR [rsp+0x30]
   140005ade:	mov    DWORD PTR [rsp+0x38],eax
   140005ae2:	mov    DWORD PTR [rsp+0x28],0x4
   140005aea:	lea    rax,[rsp+0x38]
   140005aef:	mov    r9d,0x4
   140005af5:	jmp    0x140005ce3
   140005afa:	lea    rax,[rsp+0x190]
   140005b02:	or     rsi,0xffffffffffffffff
   140005b06:	mov    rdi,rsi
   140005b09:	inc    rdi
   140005b0c:	cmp    WORD PTR [rax+rdi*2],bx
   140005b10:	jne    0x140005b09
   140005b12:	mov    DWORD PTR [rsp+0x38],edi
   140005b16:	test   dil,0x1
   140005b1a:	je     0x140005b26
   140005b1c:	mov    eax,0x80004005
   140005b21:	jmp    0x140005d1b
   140005b26:	mov    eax,edi
   140005b28:	cdq    
   140005b29:	sub    eax,edx
   140005b2b:	sar    eax,1
   140005b2d:	movsxd r14,eax
   140005b30:	mov    DWORD PTR [rsp+0x30],r14d
   140005b35:	mov    QWORD PTR [rsp+0x80],rbx
   140005b3d:	mov    rcx,r14
   140005b40:	test   eax,eax
   140005b42:	je     0x140005b7f
   140005b44:	xor    edx,edx
   140005b46:	mov    rax,rsi
   140005b49:	div    rcx
   140005b4c:	cmp    rax,0x1
   140005b50:	jae    0x140005b5c
   140005b52:	mov    ecx,0x80070057
   140005b57:	call   0x140005d50
   140005b5c:	cmp    rcx,0x100
   140005b63:	jbe    0x140005b7f
   140005b65:	mov    rdx,rcx
   140005b68:	lea    rcx,[rsp+0x80]
   140005b70:	call   0x140005288
   140005b75:	mov    rcx,QWORD PTR [rsp+0x80]
   140005b7d:	jmp    0x140005b8f
   140005b7f:	lea    rcx,[rsp+0x88]
   140005b87:	mov    QWORD PTR [rsp+0x80],rcx
   140005b8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140005b94:	jmp    0x140005bb8
   140005b96:	xor    ebx,ebx
   140005b98:	mov    edi,DWORD PTR [rsp+0x38]
   140005b9c:	mov    r14d,DWORD PTR [rsp+0x30]
   140005ba1:	mov    rcx,QWORD PTR [rsp+0x80]
   140005ba9:	mov    r12,QWORD PTR [rsp+0x50]
   140005bae:	mov    r13,QWORD PTR [rsp+0x48]
   140005bb3:	mov    rsi,QWORD PTR [rsp+0x60]
   140005bb8:	test   rcx,rcx
   140005bbb:	jne    0x140005be0
   140005bbd:	lea    rax,[rsp+0x88]
   140005bc5:	test   rax,rax
   140005bc8:	je     0x140005b1c
   140005bce:	lea    rcx,[rsp+0x80]
   140005bd6:	call   0x140005258
   140005bdb:	jmp    0x140005b1c
   140005be0:	movsxd r8,r14d
   140005be3:	xor    edx,edx
   140005be5:	call   0x14002e2ce
   140005bea:	mov    r8d,ebx
   140005bed:	mov    r9,rbx
   140005bf0:	movsxd r11,edi
   140005bf3:	test   edi,edi
   140005bf5:	jle    0x140005c6a
   140005bf7:	mov    r15d,0x30
   140005bfd:	mov    eax,r8d
   140005c00:	cdq    
   140005c01:	sub    eax,edx
   140005c03:	sar    eax,1
   140005c05:	movsxd r10,eax
   140005c08:	add    r10,QWORD PTR [rsp+0x80]
   140005c10:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   140005c19:	mov    eax,edx
   140005c1b:	cmp    edx,r15d
   140005c1e:	jl     0x140005c46
   140005c20:	cmp    eax,0x39
   140005c23:	jle    0x140005c41
   140005c25:	cmp    eax,0x40
   140005c28:	jle    0x140005c46
   140005c2a:	cmp    eax,0x46
   140005c2d:	jle    0x140005c3c
   140005c2f:	add    eax,0xffffff9f
   140005c32:	cmp    eax,0x5
   140005c35:	ja     0x140005c46
   140005c37:	sub    dl,0x57
   140005c3a:	jmp    0x140005c48
   140005c3c:	sub    dl,0x37
   140005c3f:	jmp    0x140005c48
   140005c41:	sub    dl,r15b
   140005c44:	jmp    0x140005c48
   140005c46:	mov    dl,bl
   140005c48:	mov    ecx,r8d
   140005c4b:	and    ecx,0x1
   140005c4e:	shl    ecx,0x2
   140005c51:	mov    eax,0x4
   140005c56:	sub    eax,ecx
   140005c58:	mov    cl,al
   140005c5a:	shl    dl,cl
   140005c5c:	or     BYTE PTR [r10],dl
   140005c5f:	inc    r8d
   140005c62:	inc    r9
   140005c65:	cmp    r9,r11
   140005c68:	jl     0x140005bfd
   140005c6a:	mov    DWORD PTR [rsp+0x28],r14d
   140005c6f:	mov    rax,QWORD PTR [rsp+0x80]
   140005c77:	mov    QWORD PTR [rsp+0x20],rax
   140005c7c:	mov    r9d,0x3
   140005c82:	xor    r8d,r8d
   140005c85:	mov    rdx,rsi
   140005c88:	mov    rcx,QWORD PTR [r13+0x0]
   140005c8c:	call   QWORD PTR [rip+0x2c3c6]        # 0x140032058
   140005c92:	mov    esi,eax
   140005c94:	lea    rax,[rsp+0x88]
   140005c9c:	cmp    QWORD PTR [rsp+0x80],rax
   140005ca4:	je     0x140005cfa
   140005ca6:	lea    rcx,[rsp+0x80]
   140005cae:	call   0x140005258
   140005cb3:	jmp    0x140005cfa
   140005cb5:	lea    rax,[rsp+0x190]
   140005cbd:	or     rsi,0xffffffffffffffff
   140005cc1:	inc    rsi
   140005cc4:	cmp    WORD PTR [rax+rsi*2],bx
   140005cc8:	jne    0x140005cc1
   140005cca:	lea    eax,[rsi*2+0x2]
   140005cd1:	mov    DWORD PTR [rsp+0x28],eax
   140005cd5:	lea    rax,[rsp+0x190]
   140005cdd:	mov    r9d,0x1
   140005ce3:	mov    QWORD PTR [rsp+0x20],rax
   140005ce8:	xor    r8d,r8d
   140005ceb:	mov    rdx,r15
   140005cee:	mov    rcx,QWORD PTR [r13+0x0]
   140005cf2:	call   QWORD PTR [rip+0x2c360]        # 0x140032058
   140005cf8:	mov    esi,eax
   140005cfa:	test   esi,esi
   140005cfc:	je     0x140005d07
   140005cfe:	mov    ecx,esi
   140005d00:	call   0x140006064
   140005d05:	jmp    0x140005d1b
   140005d07:	mov    rdx,QWORD PTR [rsp+0x70]
   140005d0c:	mov    rcx,r12
   140005d0f:	call   0x140006078
   140005d14:	test   eax,eax
   140005d16:	cmovs  ebx,eax
   140005d19:	mov    eax,ebx
   140005d1b:	mov    rcx,QWORD PTR [rsp+0x2190]
   140005d23:	xor    rcx,rsp
   140005d26:	call   0x14002dd00
   140005d2b:	add    rsp,0x21a0
   140005d32:	pop    r15
   140005d34:	pop    r14
   140005d36:	pop    r13
   140005d38:	pop    r12
   140005d3a:	pop    rdi
   140005d3b:	pop    rsi
   140005d3c:	pop    rbx
   140005d3d:	ret    
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	int3   
   140005d41:	int3   
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	mov    DWORD PTR [rcx],edx
   140005d46:	mov    rax,rcx
   140005d49:	ret    
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	sub    rsp,0x28
   140005d54:	mov    edx,ecx
   140005d56:	lea    rcx,[rsp+0x40]
   140005d5b:	call   0x140005d44
   140005d60:	lea    rdx,[rip+0x43501]        # 0x140049268
   140005d67:	mov    ecx,DWORD PTR [rax]
   140005d69:	mov    DWORD PTR [rsp+0x38],ecx
   140005d6d:	lea    rcx,[rsp+0x38]
   140005d72:	call   0x14002e2da
   140005d77:	int3   
   140005d78:	int3   
   140005d79:	int3   
   140005d7a:	int3   
   140005d7b:	int3   
   140005d7c:	int3   
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	mov    QWORD PTR [rsp+0x18],rbx
   140005d85:	push   rdi
   140005d86:	mov    eax,0x2030
   140005d8b:	call   0x14002e8c0
   140005d90:	sub    rsp,rax
   140005d93:	mov    rax,QWORD PTR [rip+0x45286]        # 0x14004b020
   140005d9a:	xor    rax,rsp
   140005d9d:	mov    QWORD PTR [rsp+0x2020],rax
   140005da5:	cmp    WORD PTR [rdx],0x3d
   140005da9:	mov    rdi,rdx
   140005dac:	mov    rbx,rcx
   140005daf:	jne    0x140005e00
   140005db1:	call   0x140006078
   140005db6:	test   eax,eax
   140005db8:	js     0x140005e02
   140005dba:	mov    rcx,QWORD PTR [rbx]
   140005dbd:	movzx  eax,WORD PTR [rcx]
   140005dc0:	cmp    eax,0x20
   140005dc3:	ja     0x140005de0
   140005dc5:	movabs rdx,0x100002600
   140005dcf:	bt     rdx,rax
   140005dd3:	jae    0x140005de0
   140005dd5:	call   QWORD PTR [rip+0x2c5bd]        # 0x140032398
   140005ddb:	mov    QWORD PTR [rbx],rax
   140005dde:	jmp    0x140005dba
   140005de0:	lea    rdx,[rsp+0x20]
   140005de5:	mov    rcx,rbx
   140005de8:	call   0x140006078
   140005ded:	test   eax,eax
   140005def:	js     0x140005e02
   140005df1:	mov    rdx,rdi
   140005df4:	mov    rcx,rbx
   140005df7:	call   0x140006078
   140005dfc:	test   eax,eax
   140005dfe:	js     0x140005e02
   140005e00:	xor    eax,eax
   140005e02:	mov    rcx,QWORD PTR [rsp+0x2020]
   140005e0a:	xor    rcx,rsp
   140005e0d:	call   0x14002dd00
   140005e12:	mov    rbx,QWORD PTR [rsp+0x2050]
   140005e1a:	add    rsp,0x2030
   140005e21:	pop    rdi
   140005e22:	ret    
   140005e23:	int3   
   140005e24:	int3   
   140005e25:	int3   
   140005e26:	int3   
   140005e27:	int3   
   140005e28:	int3   
   140005e29:	int3   
   140005e2a:	int3   
   140005e2b:	int3   
   140005e2c:	mov    QWORD PTR [rsp+0x18],rbx
   140005e31:	push   rbp
   140005e32:	push   rsi
   140005e33:	push   rdi
   140005e34:	lea    rbp,[rsp-0x180]
   140005e3c:	sub    rsp,0x280
   140005e43:	mov    rax,QWORD PTR [rip+0x451d6]        # 0x14004b020
   140005e4a:	xor    rax,rsp
   140005e4d:	mov    QWORD PTR [rbp+0x170],rax
   140005e54:	xor    eax,eax
   140005e56:	mov    rdi,rcx
   140005e59:	mov    rcx,QWORD PTR [rcx]
   140005e5c:	mov    r9d,0x2001f
   140005e62:	mov    QWORD PTR [rsp+0x48],rax
   140005e67:	xor    r8d,r8d
   140005e6a:	mov    QWORD PTR [rsp+0x50],rax
   140005e6f:	mov    rsi,rdx
   140005e72:	mov    QWORD PTR [rsp+0x58],rax
   140005e77:	mov    QWORD PTR [rsp+0x60],rax
   140005e7c:	lea    rax,[rsp+0x60]
   140005e81:	mov    QWORD PTR [rsp+0x20],rax
   140005e86:	call   QWORD PTR [rip+0x2c1c4]        # 0x140032050
   140005e8c:	mov    ebx,eax
   140005e8e:	test   eax,eax
   140005e90:	jne    0x140005f2f
   140005e96:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e9b:	test   rcx,rcx
   140005e9e:	je     0x140005ea8
   140005ea0:	call   QWORD PTR [rip+0x2c192]        # 0x140032038
   140005ea6:	mov    ebx,eax
   140005ea8:	mov    rcx,QWORD PTR [rsp+0x60]
   140005ead:	mov    QWORD PTR [rsp+0x48],rcx
   140005eb2:	test   ebx,ebx
   140005eb4:	jne    0x140005f2f
   140005eb6:	jmp    0x140005ed2
   140005eb8:	lea    rdx,[rsp+0x70]
   140005ebd:	lea    rcx,[rsp+0x48]
   140005ec2:	call   0x140005e2c
   140005ec7:	mov    ebx,eax
   140005ec9:	test   eax,eax
   140005ecb:	jne    0x140005f2f
   140005ecd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005ed2:	lea    rax,[rsp+0x68]
   140005ed7:	mov    DWORD PTR [rsp+0x40],0x100
   140005edf:	mov    QWORD PTR [rsp+0x38],rax
   140005ee4:	lea    r9,[rsp+0x40]
   140005ee9:	and    QWORD PTR [rsp+0x30],0x0
   140005eef:	lea    r8,[rsp+0x70]
   140005ef4:	and    QWORD PTR [rsp+0x28],0x0
   140005efa:	xor    edx,edx
   140005efc:	and    QWORD PTR [rsp+0x20],0x0
   140005f02:	call   QWORD PTR [rip+0x2c140]        # 0x140032048
   140005f08:	test   eax,eax
   140005f0a:	je     0x140005eb8
   140005f0c:	mov    rcx,QWORD PTR [rsp+0x48]
   140005f11:	test   rcx,rcx
   140005f14:	je     0x140005f22
   140005f16:	call   QWORD PTR [rip+0x2c11c]        # 0x140032038
   140005f1c:	and    QWORD PTR [rsp+0x48],0x0
   140005f22:	mov    rdx,rsi
   140005f25:	mov    rcx,rdi
   140005f28:	call   0x140005f94
   140005f2d:	mov    ebx,eax
   140005f2f:	mov    rcx,QWORD PTR [rsp+0x48]
   140005f34:	test   rcx,rcx
   140005f37:	je     0x140005f3f
   140005f39:	call   QWORD PTR [rip+0x2c0f9]        # 0x140032038
   140005f3f:	mov    eax,ebx
   140005f41:	mov    rcx,QWORD PTR [rbp+0x170]
   140005f48:	xor    rcx,rsp
   140005f4b:	call   0x14002dd00
   140005f50:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140005f58:	add    rsp,0x280
   140005f5f:	pop    rdi
   140005f60:	pop    rsi
   140005f61:	pop    rbp
   140005f62:	ret    
   140005f63:	int3   
   140005f64:	int3   
   140005f65:	int3   
   140005f66:	int3   
   140005f67:	int3   
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	rex push rbx
   140005f6e:	sub    rsp,0x20
   140005f72:	mov    rbx,rcx
   140005f75:	mov    rcx,QWORD PTR [rcx]
   140005f78:	test   rcx,rcx
   140005f7b:	je     0x140005f87
   140005f7d:	call   QWORD PTR [rip+0x2c0b5]        # 0x140032038
   140005f83:	and    QWORD PTR [rbx],0x0
   140005f87:	add    rsp,0x20
   140005f8b:	pop    rbx
   140005f8c:	ret    
   140005f8d:	int3   
   140005f8e:	int3   
   140005f8f:	int3   
   140005f90:	int3   
   140005f91:	int3   
   140005f92:	int3   
   140005f93:	int3   
   140005f94:	mov    QWORD PTR [rsp+0x8],rbx
   140005f99:	mov    QWORD PTR [rsp+0x10],rsi
   140005f9e:	push   rdi
   140005f9f:	sub    rsp,0x20
   140005fa3:	cmp    QWORD PTR [rcx+0x8],0x0
   140005fa8:	mov    rsi,rdx
   140005fab:	mov    rbx,rcx
   140005fae:	jne    0x14000600a
   140005fb0:	cmp    QWORD PTR [rcx+0x10],0x0
   140005fb5:	jne    0x14000600a
   140005fb7:	lea    rcx,[rip+0x2f822]        # 0x1400357e0
   140005fbe:	call   QWORD PTR [rip+0x2c2ec]        # 0x1400322b0
   140005fc4:	test   rax,rax
   140005fc7:	je     0x140005fdf
   140005fc9:	lea    rdx,[rip+0x2f868]        # 0x140035838
   140005fd0:	mov    rcx,rax
   140005fd3:	call   QWORD PTR [rip+0x2c2c7]        # 0x1400322a0
   140005fd9:	mov    QWORD PTR [rbx+0x8],rax
   140005fdd:	jmp    0x14000600a
   140005fdf:	xor    r8d,r8d
   140005fe2:	lea    rcx,[rip+0x2df2f]        # 0x140033f18
   140005fe9:	xor    edx,edx
   140005feb:	call   QWORD PTR [rip+0x2c0f7]        # 0x1400320e8
   140005ff1:	test   rax,rax
   140005ff4:	je     0x14000600a
   140005ff6:	lea    rdx,[rip+0x2f84b]        # 0x140035848
   140005ffd:	mov    rcx,rax
   140006000:	call   QWORD PTR [rip+0x2c29a]        # 0x1400322a0
   140006006:	mov    QWORD PTR [rbx+0x10],rax
   14000600a:	mov    rdi,QWORD PTR [rbx+0x8]
   14000600e:	test   rdi,rdi
   140006011:	je     0x14000602c
   140006013:	mov    rcx,rdi
   140006016:	call   QWORD PTR [rip+0x2c68c]        # 0x1400326a8
   14000601c:	mov    rcx,QWORD PTR [rbx]
   14000601f:	xor    r9d,r9d
   140006022:	xor    r8d,r8d
   140006025:	mov    rdx,rsi
   140006028:	call   rdi
   14000602a:	jmp    0x14000604e
   14000602c:	mov    rdi,QWORD PTR [rbx+0x10]
   140006030:	test   rdi,rdi
   140006033:	je     0x140006048
   140006035:	mov    rcx,rdi
   140006038:	call   QWORD PTR [rip+0x2c66a]        # 0x1400326a8
   14000603e:	mov    rcx,QWORD PTR [rbx]
   140006041:	mov    rdx,rsi
   140006044:	call   rdi
   140006046:	jmp    0x14000604e
   140006048:	call   QWORD PTR [rip+0x2c23a]        # 0x140032288
   14000604e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006053:	mov    rsi,QWORD PTR [rsp+0x38]
   140006058:	add    rsp,0x20
   14000605c:	pop    rdi
   14000605d:	ret    
   14000605e:	int3   
   14000605f:	int3   
   140006060:	int3   
   140006061:	int3   
   140006062:	int3   
   140006063:	int3   
   140006064:	movzx  eax,cx
   140006067:	or     eax,0x80070000
   14000606c:	test   ecx,ecx
   14000606e:	cmovle eax,ecx
   140006071:	ret    
   140006072:	int3   
   140006073:	int3   
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	mov    rax,rsp
   14000607b:	mov    QWORD PTR [rax+0x8],rbx
   14000607f:	mov    QWORD PTR [rax+0x10],rbp
   140006083:	mov    QWORD PTR [rax+0x18],rsi
   140006087:	mov    QWORD PTR [rax+0x20],rdi
   14000608b:	push   r12
   14000608d:	push   r14
   14000608f:	push   r15
   140006091:	sub    rsp,0x20
   140006095:	mov    rbx,rdx
   140006098:	mov    rdi,rcx
   14000609b:	movabs r12,0x100002600
   1400060a5:	mov    rcx,QWORD PTR [rdi]
   1400060a8:	movzx  eax,WORD PTR [rcx]
   1400060ab:	cmp    eax,0x20
   1400060ae:	ja     0x1400060c1
   1400060b0:	bt     r12,rax
   1400060b4:	jae    0x1400060c1
   1400060b6:	call   QWORD PTR [rip+0x2c2dc]        # 0x140032398
   1400060bc:	mov    QWORD PTR [rdi],rax
   1400060bf:	jmp    0x1400060a5
   1400060c1:	xor    r14d,r14d
   1400060c4:	cmp    r14w,WORD PTR [rcx]
   1400060c8:	je     0x1400061de
   1400060ce:	lea    r15d,[r14+0x27]
   1400060d2:	lea    rbp,[rbx+0x2000]
   1400060d9:	cmp    r15w,WORD PTR [rcx]
   1400060dd:	jne    0x14000617e
   1400060e3:	call   QWORD PTR [rip+0x2c2af]        # 0x140032398
   1400060e9:	mov    QWORD PTR [rdi],rax
   1400060ec:	cmp    r14w,WORD PTR [rax]
   1400060f0:	je     0x14000615e
   1400060f2:	mov    rcx,QWORD PTR [rdi]
   1400060f5:	cmp    r15w,WORD PTR [rcx]
   1400060f9:	jne    0x140006107
   1400060fb:	call   QWORD PTR [rip+0x2c297]        # 0x140032398
   140006101:	cmp    r15w,WORD PTR [rax]
   140006105:	jne    0x14000615e
   140006107:	mov    rcx,QWORD PTR [rdi]
   14000610a:	cmp    r15w,WORD PTR [rcx]
   14000610e:	jne    0x140006119
   140006110:	call   QWORD PTR [rip+0x2c282]        # 0x140032398
   140006116:	mov    QWORD PTR [rdi],rax
   140006119:	mov    rsi,QWORD PTR [rdi]
   14000611c:	mov    rcx,rsi
   14000611f:	call   QWORD PTR [rip+0x2c273]        # 0x140032398
   140006125:	mov    QWORD PTR [rdi],rax
   140006128:	sub    rax,rsi
   14000612b:	sar    rax,1
   14000612e:	lea    rcx,[rax+0x1]
   140006132:	lea    rcx,[rbx+rcx*2]
   140006136:	cmp    rcx,rbp
   140006139:	jae    0x1400061de
   14000613f:	test   eax,eax
   140006141:	jle    0x140006159
   140006143:	sub    rsi,rbx
   140006146:	mov    ecx,eax
   140006148:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000614c:	mov    WORD PTR [rbx],ax
   14000614f:	add    rbx,0x2
   140006153:	sub    rcx,0x1
   140006157:	jne    0x140006148
   140006159:	mov    rax,QWORD PTR [rdi]
   14000615c:	jmp    0x1400060ec
   14000615e:	mov    rax,QWORD PTR [rdi]
   140006161:	cmp    r14w,WORD PTR [rax]
   140006165:	je     0x1400061de
   140006167:	cmp    rbx,rbp
   14000616a:	jae    0x1400061de
   14000616c:	mov    WORD PTR [rbx],r14w
   140006170:	mov    rcx,QWORD PTR [rdi]
   140006173:	call   QWORD PTR [rip+0x2c21f]        # 0x140032398
   140006179:	mov    QWORD PTR [rdi],rax
   14000617c:	jmp    0x1400061da
   14000617e:	mov    rsi,QWORD PTR [rdi]
   140006181:	movzx  eax,WORD PTR [rsi]
   140006184:	cmp    eax,0x20
   140006187:	ja     0x14000618f
   140006189:	bt     r12,rax
   14000618d:	jb     0x1400061d1
   14000618f:	mov    rcx,rsi
   140006192:	call   QWORD PTR [rip+0x2c200]        # 0x140032398
   140006198:	mov    QWORD PTR [rdi],rax
   14000619b:	sub    rax,rsi
   14000619e:	sar    rax,1
   1400061a1:	lea    rcx,[rax+0x1]
   1400061a5:	lea    rcx,[rbx+rcx*2]
   1400061a9:	cmp    rcx,rbp
   1400061ac:	jae    0x1400061de
   1400061ae:	test   eax,eax
   1400061b0:	jle    0x1400061c8
   1400061b2:	sub    rsi,rbx
   1400061b5:	mov    ecx,eax
   1400061b7:	movzx  eax,WORD PTR [rsi+rbx*1]
   1400061bb:	mov    WORD PTR [rbx],ax
   1400061be:	add    rbx,0x2
   1400061c2:	sub    rcx,0x1
   1400061c6:	jne    0x1400061b7
   1400061c8:	mov    rax,QWORD PTR [rdi]
   1400061cb:	cmp    r14w,WORD PTR [rax]
   1400061cf:	jne    0x14000617e
   1400061d1:	cmp    rbx,rbp
   1400061d4:	jae    0x1400061de
   1400061d6:	mov    WORD PTR [rbx],r14w
   1400061da:	xor    eax,eax
   1400061dc:	jmp    0x1400061e3
   1400061de:	mov    eax,0x80020009
   1400061e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400061e8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400061ed:	mov    rsi,QWORD PTR [rsp+0x50]
   1400061f2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400061f7:	add    rsp,0x20
   1400061fb:	pop    r15
   1400061fd:	pop    r14
   1400061ff:	pop    r12
   140006201:	ret    
   140006202:	int3   
   140006203:	int3   
   140006204:	int3   
   140006205:	int3   
   140006206:	int3   
   140006207:	int3   
   140006208:	rex push rbp
   14000620a:	push   rbx
   14000620b:	push   rsi
   14000620c:	push   rdi
   14000620d:	lea    rbp,[rsp-0x21f8]
   140006215:	mov    eax,0x22f8
   14000621a:	call   0x14002e8c0
   14000621f:	sub    rsp,rax
   140006222:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000622a:	mov    rax,QWORD PTR [rip+0x44def]        # 0x14004b020
   140006231:	xor    rax,rsp
   140006234:	mov    QWORD PTR [rbp+0x21e0],rax
   14000623b:	mov    DWORD PTR [rsp+0x78],r9d
   140006240:	mov    QWORD PTR [rbp-0x78],r8
   140006244:	mov    rdi,rdx
   140006247:	mov    rax,rcx
   14000624a:	mov    QWORD PTR [rsp+0x70],rcx
   14000624f:	xor    ecx,ecx
   140006251:	mov    esi,ecx
   140006253:	mov    QWORD PTR [rbp-0x70],rcx
   140006257:	mov    QWORD PTR [rbp-0x68],rcx
   14000625b:	mov    QWORD PTR [rbp-0x60],rcx
   14000625f:	mov    ecx,DWORD PTR [rbp+0x2240]
   140006265:	mov    DWORD PTR [rbp-0x40],ecx
   140006268:	mov    rcx,rax
   14000626b:	call   0x140006078
   140006270:	test   eax,eax
   140006272:	mov    ebx,eax
   140006274:	js     0x1400069b4
   14000627a:	cmp    WORD PTR [rdi],0x7d
   14000627e:	je     0x1400069b4
   140006284:	mov    eax,0x1
   140006289:	mov    DWORD PTR [rsp+0x68],eax
   14000628d:	lea    rdx,[rip+0x2dd0c]        # 0x140033fa0
   140006294:	mov    rcx,rdi
   140006297:	call   QWORD PTR [rip+0x2be53]        # 0x1400320f0
   14000629d:	xor    ecx,ecx
   14000629f:	mov    ebx,ecx
   1400062a1:	test   eax,eax
   1400062a3:	sete   bl
   1400062a6:	mov    DWORD PTR [rsp+0x60],ebx
   1400062aa:	lea    rdx,[rip+0x2dcbf]        # 0x140033f70
   1400062b1:	mov    rcx,rdi
   1400062b4:	call   QWORD PTR [rip+0x2be36]        # 0x1400320f0
   1400062ba:	test   eax,eax
   1400062bc:	je     0x1400062c6
   1400062be:	test   ebx,ebx
   1400062c0:	je     0x14000638b
   1400062c6:	mov    rdx,rdi
   1400062c9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400062ce:	call   0x140006078
   1400062d3:	mov    ebx,eax
   1400062d5:	xor    edx,edx
   1400062d7:	test   eax,eax
   1400062d9:	js     0x1400069b4
   1400062df:	cmp    DWORD PTR [rsp+0x78],edx
   1400062e3:	je     0x14000638b
   1400062e9:	mov    QWORD PTR [rbp-0x58],rdx
   1400062ed:	mov    QWORD PTR [rbp-0x50],rdx
   1400062f1:	mov    QWORD PTR [rbp-0x48],rdx
   1400062f5:	mov    rcx,rdi
   1400062f8:	movzx  eax,WORD PTR [rdi]
   1400062fb:	jmp    0x14000630f
   1400062fd:	cmp    ax,0x5c
   140006301:	je     0x140006316
   140006303:	call   QWORD PTR [rip+0x2c08f]        # 0x140032398
   140006309:	mov    rcx,rax
   14000630c:	movzx  eax,WORD PTR [rax]
   14000630f:	test   ax,ax
   140006312:	jne    0x1400062fd
   140006314:	jmp    0x14000631f
   140006316:	test   rcx,rcx
   140006319:	jne    0x140006983
   14000631f:	lea    rbx,[rip+0x2dffa]        # 0x140034320
   140006326:	mov    rdx,QWORD PTR [rbx]
   140006329:	mov    rcx,rdi
   14000632c:	call   QWORD PTR [rip+0x2bdbe]        # 0x1400320f0
   140006332:	test   eax,eax
   140006334:	je     0x14000635a
   140006336:	add    rbx,0x8
   14000633a:	lea    rax,[rip+0x2e03f]        # 0x140034380
   140006341:	cmp    rbx,rax
   140006344:	jl     0x140006326
   140006346:	mov    rax,QWORD PTR [rbp-0x78]
   14000634a:	mov    QWORD PTR [rbp-0x58],rax
   14000634e:	mov    rdx,rdi
   140006351:	lea    rcx,[rbp-0x58]
   140006355:	call   0x140005e2c
   14000635a:	xor    eax,eax
   14000635c:	cmp    DWORD PTR [rsp+0x60],eax
   140006360:	je     0x14000638b
   140006362:	mov    rdx,rdi
   140006365:	mov    rcx,QWORD PTR [rsp+0x70]
   14000636a:	call   0x140006078
   14000636f:	mov    ebx,eax
   140006371:	test   eax,eax
   140006373:	js     0x1400069b4
   140006379:	mov    rdx,rdi
   14000637c:	mov    rcx,QWORD PTR [rsp+0x70]
   140006381:	call   0x140005d80
   140006386:	jmp    0x140006634
   14000638b:	lea    rdx,[rip+0x2dbf6]        # 0x140033f88
   140006392:	mov    rcx,rdi
   140006395:	call   QWORD PTR [rip+0x2bd55]        # 0x1400320f0
   14000639b:	xor    ecx,ecx
   14000639d:	test   eax,eax
   14000639f:	jne    0x1400063bc
   1400063a1:	mov    DWORD PTR [rsp+0x68],ecx
   1400063a5:	mov    rdx,rdi
   1400063a8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400063ad:	call   0x140006078
   1400063b2:	mov    ebx,eax
   1400063b4:	test   eax,eax
   1400063b6:	js     0x1400069b4
   1400063bc:	lea    rdx,[rip+0x2dba5]        # 0x140033f68
   1400063c3:	mov    rcx,rdi
   1400063c6:	call   QWORD PTR [rip+0x2bd24]        # 0x1400320f0
   1400063cc:	xor    edx,edx
   1400063ce:	test   eax,eax
   1400063d0:	jne    0x1400064c7
   1400063d6:	lea    rdx,[rbp+0x1e0]
   1400063dd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400063e2:	call   0x140006078
   1400063e7:	mov    ebx,eax
   1400063e9:	test   eax,eax
   1400063eb:	js     0x1400069b4
   1400063f1:	mov    rdx,rdi
   1400063f4:	mov    rcx,QWORD PTR [rsp+0x70]
   1400063f9:	call   0x140006078
   1400063fe:	mov    ebx,eax
   140006400:	xor    edx,edx
   140006402:	test   eax,eax
   140006404:	js     0x1400069b4
   14000640a:	cmp    WORD PTR [rdi],0x3d
   14000640e:	jne    0x140006983
   140006414:	cmp    DWORD PTR [rsp+0x78],edx
   140006418:	je     0x14000644b
   14000641a:	mov    QWORD PTR [rbp-0x50],rdx
   14000641e:	mov    QWORD PTR [rbp-0x48],rdx
   140006422:	mov    rax,QWORD PTR [rbp-0x78]
   140006426:	mov    QWORD PTR [rbp-0x58],rax
   14000642a:	mov    r9,rdi
   14000642d:	lea    r8,[rbp+0x1e0]
   140006434:	lea    rdx,[rbp-0x58]
   140006438:	mov    rcx,QWORD PTR [rsp+0x70]
   14000643d:	call   0x140005830
   140006442:	mov    ebx,eax
   140006444:	xor    edx,edx
   140006446:	jmp    0x140006638
   14000644b:	cmp    DWORD PTR [rbp+0x2240],edx
   140006451:	jne    0x1400064b5
   140006453:	cmp    DWORD PTR [rsp+0x68],edx
   140006457:	je     0x1400064b5
   140006459:	mov    QWORD PTR [rsp+0x68],rdx
   14000645e:	lea    rax,[rsp+0x68]
   140006463:	mov    QWORD PTR [rsp+0x20],rax
   140006468:	mov    r9d,0x20006
   14000646e:	xor    r8d,r8d
   140006471:	mov    rcx,QWORD PTR [rbp-0x78]
   140006475:	call   QWORD PTR [rip+0x2bbd5]        # 0x140032050
   14000647b:	test   eax,eax
   14000647d:	jne    0x1400069ab
   140006483:	mov    rbx,QWORD PTR [rsp+0x68]
   140006488:	mov    QWORD PTR [rbp-0x80],rbx
   14000648c:	lea    rdx,[rbp+0x1e0]
   140006493:	mov    rcx,rbx
   140006496:	call   QWORD PTR [rip+0x2bbcc]        # 0x140032068
   14000649c:	test   eax,0xfffffffd
   1400064a1:	jne    0x140006969
   1400064a7:	test   rbx,rbx
   1400064aa:	je     0x1400064b5
   1400064ac:	mov    rcx,rbx
   1400064af:	call   QWORD PTR [rip+0x2bb83]        # 0x140032038
   1400064b5:	mov    rdx,rdi
   1400064b8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400064bd:	call   0x140005d80
   1400064c2:	jmp    0x140006270
   1400064c7:	mov    rcx,rdi
   1400064ca:	movzx  eax,WORD PTR [rdi]
   1400064cd:	jmp    0x1400064e3
   1400064cf:	cmp    ax,0x5c
   1400064d3:	je     0x1400064ea
   1400064d5:	call   QWORD PTR [rip+0x2bebd]        # 0x140032398
   1400064db:	mov    rcx,rax
   1400064de:	movzx  eax,WORD PTR [rax]
   1400064e1:	xor    edx,edx
   1400064e3:	test   ax,ax
   1400064e6:	jne    0x1400064cf
   1400064e8:	jmp    0x1400064f3
   1400064ea:	test   rcx,rcx
   1400064ed:	jne    0x140006983
   1400064f3:	cmp    DWORD PTR [rsp+0x78],edx
   1400064f7:	je     0x140006695
   1400064fd:	mov    QWORD PTR [rsp+0x68],rdx
   140006502:	lea    rax,[rsp+0x68]
   140006507:	mov    QWORD PTR [rsp+0x20],rax
   14000650c:	mov    r9d,0x2001f
   140006512:	xor    r8d,r8d
   140006515:	mov    rdx,rdi
   140006518:	mov    rbx,QWORD PTR [rbp-0x78]
   14000651c:	mov    rcx,rbx
   14000651f:	call   QWORD PTR [rip+0x2bb2b]        # 0x140032050
   140006525:	xor    ecx,ecx
   140006527:	test   eax,eax
   140006529:	jne    0x14000654e
   14000652b:	mov    eax,ecx
   14000652d:	test   rsi,rsi
   140006530:	je     0x14000653d
   140006532:	mov    rcx,rsi
   140006535:	call   QWORD PTR [rip+0x2bafd]        # 0x140032038
   14000653b:	xor    ecx,ecx
   14000653d:	mov    rsi,QWORD PTR [rsp+0x68]
   140006542:	mov    QWORD PTR [rbp-0x70],rsi
   140006546:	test   eax,eax
   140006548:	je     0x1400065fd
   14000654e:	mov    QWORD PTR [rsp+0x68],rcx
   140006553:	lea    rax,[rsp+0x68]
   140006558:	mov    QWORD PTR [rsp+0x20],rax
   14000655d:	mov    r9d,0x20019
   140006563:	xor    r8d,r8d
   140006566:	mov    rdx,rdi
   140006569:	mov    rcx,rbx
   14000656c:	call   QWORD PTR [rip+0x2bade]        # 0x140032050
   140006572:	xor    ecx,ecx
   140006574:	test   eax,eax
   140006576:	jne    0x140006597
   140006578:	mov    eax,ecx
   14000657a:	test   rsi,rsi
   14000657d:	je     0x14000658a
   14000657f:	mov    rcx,rsi
   140006582:	call   QWORD PTR [rip+0x2bab0]        # 0x140032038
   140006588:	xor    ecx,ecx
   14000658a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000658f:	mov    QWORD PTR [rbp-0x70],rsi
   140006593:	test   eax,eax
   140006595:	je     0x1400065fd
   140006597:	mov    QWORD PTR [rsp+0x68],rcx
   14000659c:	lea    rax,[rbp-0x3c]
   1400065a0:	mov    QWORD PTR [rsp+0x40],rax
   1400065a5:	lea    rax,[rsp+0x68]
   1400065aa:	mov    QWORD PTR [rsp+0x38],rax
   1400065af:	mov    QWORD PTR [rsp+0x30],rcx
   1400065b4:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400065bc:	mov    DWORD PTR [rsp+0x20],ecx
   1400065c0:	xor    r9d,r9d
   1400065c3:	xor    r8d,r8d
   1400065c6:	mov    rdx,rdi
   1400065c9:	mov    rcx,rbx
   1400065cc:	call   QWORD PTR [rip+0x2ba8e]        # 0x140032060
   1400065d2:	xor    edx,edx
   1400065d4:	test   eax,eax
   1400065d6:	jne    0x1400069ab
   1400065dc:	mov    eax,edx
   1400065de:	test   rsi,rsi
   1400065e1:	je     0x1400065ec
   1400065e3:	mov    rcx,rsi
   1400065e6:	call   QWORD PTR [rip+0x2ba4c]        # 0x140032038
   1400065ec:	mov    rsi,QWORD PTR [rsp+0x68]
   1400065f1:	mov    QWORD PTR [rbp-0x70],rsi
   1400065f5:	test   eax,eax
   1400065f7:	jne    0x1400069ab
   1400065fd:	mov    rdx,rdi
   140006600:	mov    rcx,QWORD PTR [rsp+0x70]
   140006605:	call   0x140006078
   14000660a:	mov    ebx,eax
   14000660c:	xor    edx,edx
   14000660e:	test   eax,eax
   140006610:	js     0x1400069b4
   140006616:	cmp    WORD PTR [rdi],0x3d
   14000661a:	jne    0x140006640
   14000661c:	mov    r9,rdi
   14000661f:	xor    r8d,r8d
   140006622:	lea    rdx,[rbp-0x70]
   140006626:	mov    rcx,QWORD PTR [rsp+0x70]
   14000662b:	call   0x140005830
   140006630:	mov    rsi,QWORD PTR [rbp-0x70]
   140006634:	xor    edx,edx
   140006636:	mov    ebx,eax
   140006638:	test   eax,eax
   14000663a:	js     0x1400069b4
   140006640:	cmp    WORD PTR [rdi],0x7b
   140006644:	jne    0x14000627a
   14000664a:	or     rax,0xffffffffffffffff
   14000664e:	inc    rax
   140006651:	cmp    WORD PTR [rdi+rax*2],dx
   140006655:	jne    0x14000664e
   140006657:	mov    ecx,0x1
   14000665c:	cmp    rax,rcx
   14000665f:	jne    0x14000627a
   140006665:	mov    DWORD PTR [rsp+0x20],edx
   140006669:	mov    r9d,DWORD PTR [rsp+0x78]
   14000666e:	mov    r8,rsi
   140006671:	mov    rdx,rdi
   140006674:	mov    rcx,QWORD PTR [rsp+0x70]
   140006679:	call   0x140006208
   14000667e:	mov    ebx,eax
   140006680:	test   eax,eax
   140006682:	js     0x1400069b4
   140006688:	mov    rdx,rdi
   14000668b:	mov    rcx,QWORD PTR [rsp+0x70]
   140006690:	jmp    0x14000626b
   140006695:	mov    ebx,DWORD PTR [rbp+0x2240]
   14000669b:	test   ebx,ebx
   14000669d:	jne    0x1400066ee
   14000669f:	mov    QWORD PTR [rbp-0x80],rdx
   1400066a3:	lea    rax,[rbp-0x80]
   1400066a7:	mov    QWORD PTR [rsp+0x20],rax
   1400066ac:	mov    r9d,0x20019
   1400066b2:	xor    r8d,r8d
   1400066b5:	mov    rdx,rdi
   1400066b8:	mov    rcx,QWORD PTR [rbp-0x78]
   1400066bc:	call   QWORD PTR [rip+0x2b98e]        # 0x140032050
   1400066c2:	mov    DWORD PTR [rsp+0x60],eax
   1400066c6:	xor    edx,edx
   1400066c8:	test   eax,eax
   1400066ca:	jne    0x1400066f9
   1400066cc:	mov    eax,edx
   1400066ce:	mov    DWORD PTR [rsp+0x60],edx
   1400066d2:	test   rsi,rsi
   1400066d5:	je     0x1400066e4
   1400066d7:	mov    rcx,rsi
   1400066da:	call   QWORD PTR [rip+0x2b958]        # 0x140032038
   1400066e0:	mov    DWORD PTR [rsp+0x60],eax
   1400066e4:	mov    rsi,QWORD PTR [rbp-0x80]
   1400066e8:	mov    QWORD PTR [rbp-0x70],rsi
   1400066ec:	jmp    0x1400066f7
   1400066ee:	mov    eax,0x2
   1400066f3:	mov    DWORD PTR [rsp+0x60],eax
   1400066f7:	test   eax,eax
   1400066f9:	mov    eax,0x1
   1400066fe:	cmovne ebx,eax
   140006701:	mov    DWORD PTR [rbp+0x2240],ebx
   140006707:	or     r9,0xffffffffffffffff
   14000670b:	mov    r8,rdi
   14000670e:	mov    edx,0x104
   140006713:	lea    rcx,[rbp-0x30]
   140006717:	call   QWORD PTR [rip+0x2bebb]        # 0x1400325d8
   14000671d:	test   eax,eax
   14000671f:	je     0x140006745
   140006721:	cmp    eax,0xc
   140006724:	je     0x1400069a0
   14000672a:	cmp    eax,0x16
   14000672d:	je     0x140006995
   140006733:	cmp    eax,0x22
   140006736:	je     0x140006995
   14000673c:	cmp    eax,0x50
   14000673f:	jne    0x14000698a
   140006745:	mov    rdx,rdi
   140006748:	mov    rcx,QWORD PTR [rsp+0x70]
   14000674d:	call   0x140006078
   140006752:	mov    ebx,eax
   140006754:	test   eax,eax
   140006756:	js     0x1400069b4
   14000675c:	mov    rdx,rdi
   14000675f:	mov    rcx,QWORD PTR [rsp+0x70]
   140006764:	call   0x140005d80
   140006769:	mov    ebx,eax
   14000676b:	xor    edx,edx
   14000676d:	test   eax,eax
   14000676f:	js     0x1400069b4
   140006775:	cmp    WORD PTR [rdi],0x7b
   140006779:	jne    0x1400067dc
   14000677b:	or     rax,0xffffffffffffffff
   14000677f:	inc    rax
   140006782:	cmp    WORD PTR [rdi+rax*2],dx
   140006786:	jne    0x14000677f
   140006788:	mov    ecx,0x1
   14000678d:	cmp    rax,rcx
   140006790:	jne    0x1400067dc
   140006792:	mov    eax,DWORD PTR [rbp+0x2240]
   140006798:	mov    DWORD PTR [rsp+0x20],eax
   14000679c:	xor    r9d,r9d
   14000679f:	mov    r8,rsi
   1400067a2:	mov    rdx,rdi
   1400067a5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400067aa:	call   0x140006208
   1400067af:	mov    ebx,eax
   1400067b1:	xor    edx,edx
   1400067b3:	test   eax,eax
   1400067b5:	jns    0x1400067c3
   1400067b7:	cmp    DWORD PTR [rbp+0x2240],edx
   1400067bd:	je     0x1400069b4
   1400067c3:	mov    rdx,rdi
   1400067c6:	mov    rcx,QWORD PTR [rsp+0x70]
   1400067cb:	call   0x140006078
   1400067d0:	mov    ebx,eax
   1400067d2:	xor    edx,edx
   1400067d4:	test   eax,eax
   1400067d6:	js     0x1400069b4
   1400067dc:	mov    eax,DWORD PTR [rbp-0x40]
   1400067df:	mov    DWORD PTR [rbp+0x2240],eax
   1400067e5:	mov    ecx,DWORD PTR [rsp+0x60]
   1400067e9:	cmp    ecx,0x2
   1400067ec:	je     0x14000627a
   1400067f2:	test   ecx,ecx
   1400067f4:	je     0x140006803
   1400067f6:	test   eax,eax
   1400067f8:	je     0x1400069ad
   1400067fe:	jmp    0x14000627a
   140006803:	test   eax,eax
   140006805:	je     0x1400068ba
   14000680b:	mov    DWORD PTR [rsp+0x60],edx
   14000680f:	mov    QWORD PTR [rsp+0x58],rdx
   140006814:	mov    QWORD PTR [rsp+0x50],rdx
   140006819:	mov    QWORD PTR [rsp+0x48],rdx
   14000681e:	mov    QWORD PTR [rsp+0x40],rdx
   140006823:	mov    QWORD PTR [rsp+0x38],rdx
   140006828:	mov    QWORD PTR [rsp+0x30],rdx
   14000682d:	mov    QWORD PTR [rsp+0x28],rdx
   140006832:	lea    rax,[rsp+0x60]
   140006837:	mov    QWORD PTR [rsp+0x20],rax
   14000683c:	xor    r9d,r9d
   14000683f:	xor    r8d,r8d
   140006842:	xor    edx,edx
   140006844:	mov    rcx,rsi
   140006847:	call   QWORD PTR [rip+0x2b7f3]        # 0x140032040
   14000684d:	xor    edx,edx
   14000684f:	test   eax,eax
   140006851:	jne    0x1400068ba
   140006853:	mov    eax,edx
   140006855:	cmp    DWORD PTR [rsp+0x60],edx
   140006859:	seta   al
   14000685c:	test   eax,eax
   14000685e:	je     0x1400068ba
   140006860:	lea    rax,[rip+0x2dab9]        # 0x140034320
   140006867:	mov    QWORD PTR [rbp-0x80],rax
   14000686b:	mov    rdx,QWORD PTR [rax]
   14000686e:	lea    rcx,[rbp-0x30]
   140006872:	call   QWORD PTR [rip+0x2b878]        # 0x1400320f0
   140006878:	xor    edx,edx
   14000687a:	test   eax,eax
   14000687c:	je     0x14000627a
   140006882:	mov    rax,QWORD PTR [rbp-0x80]
   140006886:	add    rax,0x8
   14000688a:	mov    QWORD PTR [rbp-0x80],rax
   14000688e:	lea    rcx,[rip+0x2daeb]        # 0x140034380
   140006895:	cmp    rax,rcx
   140006898:	jl     0x14000686b
   14000689a:	cmp    DWORD PTR [rsp+0x68],edx
   14000689e:	je     0x14000627a
   1400068a4:	lea    rdx,[rbp-0x30]
   1400068a8:	lea    rcx,[rbp-0x70]
   1400068ac:	call   0x140005e2c
   1400068b1:	mov    rsi,QWORD PTR [rbp-0x70]
   1400068b5:	jmp    0x14000627a
   1400068ba:	mov    DWORD PTR [rsp+0x60],edx
   1400068be:	mov    QWORD PTR [rsp+0x58],rdx
   1400068c3:	mov    QWORD PTR [rsp+0x50],rdx
   1400068c8:	mov    QWORD PTR [rsp+0x48],rdx
   1400068cd:	mov    QWORD PTR [rsp+0x40],rdx
   1400068d2:	mov    QWORD PTR [rsp+0x38],rdx
   1400068d7:	mov    QWORD PTR [rsp+0x30],rdx
   1400068dc:	mov    QWORD PTR [rsp+0x28],rdx
   1400068e1:	lea    rax,[rsp+0x60]
   1400068e6:	mov    QWORD PTR [rsp+0x20],rax
   1400068eb:	xor    r9d,r9d
   1400068ee:	xor    r8d,r8d
   1400068f1:	xor    edx,edx
   1400068f3:	mov    rcx,rsi
   1400068f6:	call   QWORD PTR [rip+0x2b744]        # 0x140032040
   1400068fc:	xor    edx,edx
   1400068fe:	test   eax,eax
   140006900:	je     0x140006908
   140006902:	mov    DWORD PTR [rsp+0x60],edx
   140006906:	jmp    0x140006915
   140006908:	mov    eax,edx
   14000690a:	cmp    DWORD PTR [rsp+0x60],edx
   14000690e:	seta   al
   140006911:	mov    DWORD PTR [rsp+0x60],eax
   140006915:	test   rsi,rsi
   140006918:	je     0x14000692f
   14000691a:	mov    rcx,rsi
   14000691d:	call   QWORD PTR [rip+0x2b715]        # 0x140032038
   140006923:	xor    edx,edx
   140006925:	mov    esi,edx
   140006927:	mov    QWORD PTR [rbp-0x70],rdx
   14000692b:	test   eax,eax
   14000692d:	jne    0x1400069ab
   14000692f:	cmp    DWORD PTR [rsp+0x68],edx
   140006933:	je     0x14000627a
   140006939:	cmp    DWORD PTR [rsp+0x60],edx
   14000693d:	jne    0x14000627a
   140006943:	mov    QWORD PTR [rbp-0x50],rdx
   140006947:	mov    QWORD PTR [rbp-0x48],rdx
   14000694b:	mov    rax,QWORD PTR [rbp-0x78]
   14000694f:	mov    QWORD PTR [rbp-0x58],rax
   140006953:	lea    rdx,[rbp-0x30]
   140006957:	lea    rcx,[rbp-0x58]
   14000695b:	call   0x140005f94
   140006960:	test   eax,eax
   140006962:	jne    0x1400069ab
   140006964:	jmp    0x14000627a
   140006969:	mov    ecx,eax
   14000696b:	call   0x140006064
   140006970:	mov    ebx,eax
   140006972:	mov    rcx,QWORD PTR [rbp-0x80]
   140006976:	test   rcx,rcx
   140006979:	je     0x1400069b4
   14000697b:	call   QWORD PTR [rip+0x2b6b7]        # 0x140032038
   140006981:	jmp    0x1400069b4
   140006983:	mov    ebx,0x80020009
   140006988:	jmp    0x1400069b4
   14000698a:	mov    ecx,0x80004005
   14000698f:	call   0x140005d50
   140006994:	int3   
   140006995:	mov    ecx,0x80070057
   14000699a:	call   0x140005d50
   14000699f:	int3   
   1400069a0:	mov    ecx,0x8007000e
   1400069a5:	call   0x140005d50
   1400069aa:	int3   
   1400069ab:	mov    ecx,eax
   1400069ad:	call   0x140006064
   1400069b2:	mov    ebx,eax
   1400069b4:	test   rsi,rsi
   1400069b7:	je     0x1400069c2
   1400069b9:	mov    rcx,rsi
   1400069bc:	call   QWORD PTR [rip+0x2b676]        # 0x140032038
   1400069c2:	mov    eax,ebx
   1400069c4:	mov    rcx,QWORD PTR [rbp+0x21e0]
   1400069cb:	xor    rcx,rsp
   1400069ce:	call   0x14002dd00
   1400069d3:	add    rsp,0x22f8
   1400069da:	pop    rdi
   1400069db:	pop    rsi
   1400069dc:	pop    rbx
   1400069dd:	pop    rbp
   1400069de:	ret    
   1400069df:	int3   
   1400069e0:	int3   
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	mov    QWORD PTR [rsp+0x20],rbx
   1400069ed:	push   rbp
   1400069ee:	push   rsi
   1400069ef:	push   rdi
   1400069f0:	push   r12
   1400069f2:	push   r13
   1400069f4:	push   r14
   1400069f6:	push   r15
   1400069f8:	mov    eax,0x2050
   1400069fd:	call   0x14002e8c0
   140006a02:	sub    rsp,rax
   140006a05:	mov    rax,QWORD PTR [rip+0x44614]        # 0x14004b020
   140006a0c:	xor    rax,rsp
   140006a0f:	mov    QWORD PTR [rsp+0x2040],rax
   140006a17:	xor    r12d,r12d
   140006a1a:	mov    r15d,r8d
   140006a1d:	mov    QWORD PTR [rsp+0x30],r12
   140006a22:	mov    rdi,rcx
   140006a25:	mov    ebp,r12d
   140006a28:	test   rdx,rdx
   140006a2b:	je     0x140006a40
   140006a2d:	lea    r8,[rsp+0x30]
   140006a32:	call   0x140005430
   140006a37:	mov    rbp,QWORD PTR [rsp+0x30]
   140006a3c:	mov    ebx,eax
   140006a3e:	jmp    0x140006a45
   140006a40:	mov    ebx,0x80004003
   140006a45:	test   ebx,ebx
   140006a47:	js     0x140006b73
   140006a4d:	mov    QWORD PTR [rdi],rbp
   140006a50:	cmp    r12w,WORD PTR [rbp+0x0]
   140006a55:	je     0x140006b6a
   140006a5b:	lea    r13,[rip+0x2ec9e]        # 0x140035700
   140006a62:	lea    rdx,[rsp+0x40]
   140006a67:	mov    rcx,rdi
   140006a6a:	call   0x140006078
   140006a6f:	mov    ebx,eax
   140006a71:	test   eax,eax
   140006a73:	js     0x140006b6a
   140006a79:	mov    esi,r12d
   140006a7c:	mov    rbx,r12
   140006a7f:	mov    r14,r13
   140006a82:	mov    rdx,QWORD PTR [r14]
   140006a85:	lea    rcx,[rsp+0x40]
   140006a8a:	call   QWORD PTR [rip+0x2b660]        # 0x1400320f0
   140006a90:	test   eax,eax
   140006a92:	je     0x140006aab
   140006a94:	inc    esi
   140006a96:	inc    rbx
   140006a99:	movsxd rax,esi
   140006a9c:	add    r14,0x10
   140006aa0:	cmp    rax,0xe
   140006aa4:	jb     0x140006a82
   140006aa6:	mov    rsi,r12
   140006aa9:	jmp    0x140006ab3
   140006aab:	add    rbx,rbx
   140006aae:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   140006ab3:	test   rsi,rsi
   140006ab6:	je     0x140006b65
   140006abc:	lea    rdx,[rsp+0x40]
   140006ac1:	mov    rcx,rdi
   140006ac4:	call   0x140006078
   140006ac9:	mov    ebx,eax
   140006acb:	test   eax,eax
   140006acd:	js     0x140006b6a
   140006ad3:	mov    eax,0x7b
   140006ad8:	cmp    ax,WORD PTR [rsp+0x40]
   140006add:	jne    0x140006b65
   140006ae3:	mov    DWORD PTR [rsp+0x20],r12d
   140006ae8:	mov    r8,rsi
   140006aeb:	lea    rdx,[rsp+0x40]
   140006af0:	mov    rcx,rdi
   140006af3:	test   r15d,r15d
   140006af6:	je     0x140006b26
   140006af8:	mov    r14,QWORD PTR [rdi]
   140006afb:	mov    r9d,r15d
   140006afe:	call   0x140006208
   140006b03:	mov    ebx,eax
   140006b05:	test   eax,eax
   140006b07:	jns    0x140006b34
   140006b09:	xor    r9d,r9d
   140006b0c:	mov    QWORD PTR [rdi],r14
   140006b0f:	mov    r8,rsi
   140006b12:	mov    DWORD PTR [rsp+0x20],r12d
   140006b17:	lea    rdx,[rsp+0x40]
   140006b1c:	mov    rcx,rdi
   140006b1f:	call   0x140006208
   140006b24:	jmp    0x140006b6a
   140006b26:	xor    r9d,r9d
   140006b29:	call   0x140006208
   140006b2e:	mov    ebx,eax
   140006b30:	test   eax,eax
   140006b32:	js     0x140006b6a
   140006b34:	mov    rcx,QWORD PTR [rdi]
   140006b37:	movzx  eax,WORD PTR [rcx]
   140006b3a:	cmp    eax,0x20
   140006b3d:	ja     0x140006b5a
   140006b3f:	movabs rdx,0x100002600
   140006b49:	bt     rdx,rax
   140006b4d:	jae    0x140006b5a
   140006b4f:	call   QWORD PTR [rip+0x2b843]        # 0x140032398
   140006b55:	mov    QWORD PTR [rdi],rax
   140006b58:	jmp    0x140006b34
   140006b5a:	cmp    r12w,WORD PTR [rcx]
   140006b5e:	je     0x140006b6a
   140006b60:	jmp    0x140006a62
   140006b65:	mov    ebx,0x80020009
   140006b6a:	mov    rcx,rbp
   140006b6d:	call   QWORD PTR [rip+0x2baed]        # 0x140032660
   140006b73:	mov    eax,ebx
   140006b75:	mov    rcx,QWORD PTR [rsp+0x2040]
   140006b7d:	xor    rcx,rsp
   140006b80:	call   0x14002dd00
   140006b85:	mov    rbx,QWORD PTR [rsp+0x20a8]
   140006b8d:	add    rsp,0x2050
   140006b94:	pop    r15
   140006b96:	pop    r14
   140006b98:	pop    r13
   140006b9a:	pop    r12
   140006b9c:	pop    rdi
   140006b9d:	pop    rsi
   140006b9e:	pop    rbp
   140006b9f:	ret    
   140006ba0:	int3   
   140006ba1:	int3   
   140006ba2:	int3   
   140006ba3:	int3   
   140006ba4:	int3   
   140006ba5:	int3   
   140006ba6:	int3   
   140006ba7:	int3   
   140006ba8:	mov    rax,rsp
   140006bab:	push   rsi
   140006bac:	push   rdi
   140006bad:	push   r14
   140006baf:	sub    rsp,0x490
   140006bb6:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140006bbf:	mov    QWORD PTR [rax+0x8],rbx
   140006bc3:	mov    rax,QWORD PTR [rip+0x44456]        # 0x14004b020
   140006bca:	xor    rax,rsp
   140006bcd:	mov    QWORD PTR [rsp+0x480],rax
   140006bd5:	mov    r14,r9
   140006bd8:	mov    rdi,r8
   140006bdb:	mov    rax,rdx
   140006bde:	xor    ebx,ebx
   140006be0:	mov    QWORD PTR [rsp+0x60],rbx
   140006be5:	mov    QWORD PTR [rsp+0x50],rcx
   140006bea:	mov    QWORD PTR [rsp+0x48],rbx
   140006bef:	mov    QWORD PTR [rsp+0x70],rbx
   140006bf4:	xor    edx,edx
   140006bf6:	lea    r8d,[rbx+0x2]
   140006bfa:	mov    rcx,rax
   140006bfd:	call   QWORD PTR [rip+0x2b4e5]        # 0x1400320e8
   140006c03:	mov    rsi,rax
   140006c06:	mov    QWORD PTR [rsp+0x38],rax
   140006c0b:	test   rax,rax
   140006c0e:	jne    0x140006c1c
   140006c10:	call   0x1400052bc
   140006c15:	mov    ebx,eax
   140006c17:	jmp    0x140006d4c
   140006c1c:	xor    r9d,r9d
   140006c1f:	mov    r8,rdi
   140006c22:	mov    rdx,r14
   140006c25:	mov    rcx,rax
   140006c28:	call   QWORD PTR [rip+0x2b4fa]        # 0x140032128
   140006c2e:	mov    rdi,rax
   140006c31:	test   rax,rax
   140006c34:	jne    0x140006c40
   140006c36:	call   0x1400052bc
   140006c3b:	jmp    0x140006d40
   140006c40:	mov    rdx,rax
   140006c43:	mov    rcx,rsi
   140006c46:	call   QWORD PTR [rip+0x2b4d4]        # 0x140032120
   140006c4c:	mov    r14,rax
   140006c4f:	mov    QWORD PTR [rsp+0x40],rax
   140006c54:	test   rax,rax
   140006c57:	je     0x140006c36
   140006c59:	mov    rdx,rdi
   140006c5c:	mov    rcx,rsi
   140006c5f:	call   QWORD PTR [rip+0x2b4b3]        # 0x140032118
   140006c65:	mov    edi,eax
   140006c67:	mov    DWORD PTR [rsp+0x30],eax
   140006c6b:	inc    eax
   140006c6d:	cmp    eax,edi
   140006c6f:	jae    0x140006c92
   140006c71:	lea    rax,[rsp+0x78]
   140006c76:	cmp    QWORD PTR [rsp+0x70],rax
   140006c7b:	je     0x140006c88
   140006c7d:	lea    rcx,[rsp+0x70]
   140006c82:	call   0x140005258
   140006c87:	nop
   140006c88:	mov    eax,0x8007000e
   140006c8d:	jmp    0x140006d65
   140006c92:	mov    ecx,eax
   140006c94:	test   eax,eax
   140006c96:	je     0x140006ccf
   140006c98:	xor    edx,edx
   140006c9a:	or     rax,0xffffffffffffffff
   140006c9e:	div    rcx
   140006ca1:	cmp    rax,0x2
   140006ca5:	jb     0x140006cc5
   140006ca7:	lea    rdx,[rcx+rcx*1]
   140006cab:	cmp    rdx,0x400
   140006cb2:	jbe    0x140006ccf
   140006cb4:	lea    rcx,[rsp+0x70]
   140006cb9:	call   0x140005288
   140006cbe:	mov    rax,QWORD PTR [rsp+0x70]
   140006cc3:	jmp    0x140006cd9
   140006cc5:	mov    ecx,0x80070057
   140006cca:	call   0x140005d50
   140006ccf:	lea    rax,[rsp+0x78]
   140006cd4:	mov    QWORD PTR [rsp+0x70],rax
   140006cd9:	jmp    0x140006cf0
   140006cdb:	xor    ebx,ebx
   140006cdd:	mov    rax,QWORD PTR [rsp+0x70]
   140006ce2:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ce7:	mov    r14,QWORD PTR [rsp+0x40]
   140006cec:	mov    edi,DWORD PTR [rsp+0x30]
   140006cf0:	test   rax,rax
   140006cf3:	jne    0x140006cfc
   140006cf5:	mov    ebx,0x8007000e
   140006cfa:	jmp    0x140006d42
   140006cfc:	mov    DWORD PTR [rsp+0x28],edi
   140006d00:	mov    QWORD PTR [rsp+0x20],rax
   140006d05:	mov    r9d,edi
   140006d08:	mov    r8,r14
   140006d0b:	xor    edx,edx
   140006d0d:	lea    ecx,[rdx+0x3]
   140006d10:	call   QWORD PTR [rip+0x2b3fa]        # 0x140032110
   140006d16:	test   eax,eax
   140006d18:	je     0x140006c36
   140006d1e:	mov    ecx,eax
   140006d20:	mov    rax,QWORD PTR [rsp+0x70]
   140006d25:	mov    WORD PTR [rax+rcx*2],bx
   140006d29:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140006d31:	mov    rdx,QWORD PTR [rsp+0x70]
   140006d36:	lea    rcx,[rsp+0x48]
   140006d3b:	call   0x1400069e8
   140006d40:	mov    ebx,eax
   140006d42:	mov    rcx,rsi
   140006d45:	call   QWORD PTR [rip+0x2b395]        # 0x1400320e0
   140006d4b:	nop
   140006d4c:	lea    rax,[rsp+0x78]
   140006d51:	cmp    QWORD PTR [rsp+0x70],rax
   140006d56:	je     0x140006d63
   140006d58:	lea    rcx,[rsp+0x70]
   140006d5d:	call   0x140005258
   140006d62:	nop
   140006d63:	mov    eax,ebx
   140006d65:	mov    rcx,QWORD PTR [rsp+0x480]
   140006d6d:	xor    rcx,rsp
   140006d70:	call   0x14002dd00
   140006d75:	mov    rbx,QWORD PTR [rsp+0x4b0]
   140006d7d:	add    rsp,0x490
   140006d84:	pop    r14
   140006d86:	pop    rdi
   140006d87:	pop    rsi
   140006d88:	ret    
   140006d89:	int3   
   140006d8a:	int3   
   140006d8b:	int3   
   140006d8c:	int3   
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	mov    QWORD PTR [rsp+0x8],rbx
   140006d95:	push   rbp
   140006d96:	push   rsi
   140006d97:	push   rdi
   140006d98:	push   r14
   140006d9a:	push   r15
   140006d9c:	lea    rbp,[rsp-0x9d0]
   140006da4:	sub    rsp,0xad0
   140006dab:	mov    rax,QWORD PTR [rip+0x4426e]        # 0x14004b020
   140006db2:	xor    rax,rsp
   140006db5:	mov    QWORD PTR [rbp+0x9c0],rax
   140006dbc:	xor    r14d,r14d
   140006dbf:	lea    rax,[rip+0x2d79a]        # 0x140034560
   140006dc6:	mov    esi,r8d
   140006dc9:	mov    QWORD PTR [rsp+0x30],rax
   140006dce:	mov    rdi,rdx
   140006dd1:	mov    QWORD PTR [rsp+0x38],r14
   140006dd6:	xor    edx,edx
   140006dd8:	mov    QWORD PTR [rsp+0x40],r14
   140006ddd:	lea    r8d,[r14+0x28]
   140006de1:	mov    DWORD PTR [rsp+0x48],r14d
   140006de6:	lea    rcx,[rsp+0x50]
   140006deb:	mov    rbx,r9
   140006dee:	call   0x14002e2ce
   140006df3:	lea    rcx,[rsp+0x50]
   140006df8:	mov    BYTE PTR [rsp+0x78],r14b
   140006dfd:	call   0x140004ee4
   140006e02:	test   eax,eax
   140006e04:	js     0x140006e82
   140006e06:	mov    BYTE PTR [rsp+0x78],0x1
   140006e0b:	test   rbx,rbx
   140006e0e:	je     0x140006e2f
   140006e10:	jmp    0x140006e27
   140006e12:	mov    r8,QWORD PTR [rbx+0x8]
   140006e16:	lea    rcx,[rsp+0x30]
   140006e1b:	mov    rdx,rax
   140006e1e:	call   0x1400051d0
   140006e23:	lea    rbx,[rbx+0x10]
   140006e27:	mov    rax,QWORD PTR [rbx]
   140006e2a:	test   rax,rax
   140006e2d:	jne    0x140006e12
   140006e2f:	mov    rax,QWORD PTR [rsp+0x30]
   140006e34:	mov    rbx,QWORD PTR [rax+0x18]
   140006e38:	mov    rcx,rbx
   140006e3b:	call   QWORD PTR [rip+0x2b867]        # 0x1400326a8
   140006e41:	lea    r8,[rip+0x2e6f0]        # 0x140035538
   140006e48:	lea    rdx,[rip+0x2e6f1]        # 0x140035540
   140006e4f:	lea    rcx,[rsp+0x30]
   140006e54:	call   rbx
   140006e56:	mov    ebx,eax
   140006e58:	test   eax,eax
   140006e5a:	js     0x140006e84
   140006e5c:	mov    rbx,QWORD PTR [rip+0x492d5]        # 0x140050138
   140006e63:	lea    rdx,[rbp-0x80]
   140006e67:	mov    r15d,0x104
   140006e6d:	mov    rcx,rbx
   140006e70:	mov    r8d,r15d
   140006e73:	call   QWORD PTR [rip+0x2b2b7]        # 0x140032130
   140006e79:	test   eax,eax
   140006e7b:	jne    0x140006eb6
   140006e7d:	call   0x1400052bc
   140006e82:	mov    ebx,eax
   140006e84:	lea    rcx,[rsp+0x30]
   140006e89:	call   0x140004e54
   140006e8e:	mov    eax,ebx
   140006e90:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140006e97:	xor    rcx,rsp
   140006e9a:	call   0x14002dd00
   140006e9f:	mov    rbx,QWORD PTR [rsp+0xb00]
   140006ea7:	add    rsp,0xad0
   140006eae:	pop    r15
   140006eb0:	pop    r14
   140006eb2:	pop    rdi
   140006eb3:	pop    rsi
   140006eb4:	pop    rbp
   140006eb5:	ret    
   140006eb6:	cmp    eax,r15d
   140006eb9:	jne    0x140006ec2
   140006ebb:	mov    ebx,0x8007007a
   140006ec0:	jmp    0x140006e84
   140006ec2:	lea    rdx,[rbp-0x80]
   140006ec6:	mov    ecx,r14d
   140006ec9:	mov    r9d,0x27
   140006ecf:	movzx  r8d,WORD PTR [rdx]
   140006ed3:	test   r8w,r8w
   140006ed7:	je     0x140006f0b
   140006ed9:	mov    eax,ecx
   140006edb:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   140006ee4:	cmp    r8w,r9w
   140006ee8:	jne    0x140006efd
   140006eea:	cmp    ecx,0x206
   140006ef0:	jae    0x140006efd
   140006ef2:	inc    ecx
   140006ef4:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140006efd:	add    rdx,0x2
   140006f01:	inc    ecx
   140006f03:	cmp    ecx,0x207
   140006f09:	jb     0x140006ecf
   140006f0b:	mov    eax,ecx
   140006f0d:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140006f16:	test   rbx,rbx
   140006f19:	je     0x140006f34
   140006f1b:	xor    ecx,ecx
   140006f1d:	call   QWORD PTR [rip+0x2b38d]        # 0x1400322b0
   140006f23:	cmp    rbx,rax
   140006f26:	je     0x140006f34
   140006f28:	lea    r8,[rbp+0x190]
   140006f2f:	jmp    0x140006fca
   140006f34:	mov    r15d,0x22
   140006f3a:	lea    rcx,[rbp+0x190]
   140006f41:	or     rbx,0xffffffffffffffff
   140006f45:	mov    WORD PTR [rbp+0x5a0],r15w
   140006f4d:	mov    rax,rbx
   140006f50:	inc    rax
   140006f53:	cmp    WORD PTR [rcx+rax*2],r14w
   140006f58:	jne    0x140006f50
   140006f5a:	inc    eax
   140006f5c:	lea    r8,[rbp+0x190]
   140006f63:	movsxd r9,eax
   140006f66:	lea    rcx,[rbp+0x5a2]
   140006f6d:	add    r9,r9
   140006f70:	mov    edx,0x414
   140006f75:	call   QWORD PTR [rip+0x2b645]        # 0x1400325c0
   140006f7b:	test   eax,eax
   140006f7d:	je     0x140006f89
   140006f7f:	mov    ebx,0x80004005
   140006f84:	jmp    0x140006e84
   140006f89:	lea    rax,[rbp+0x5a0]
   140006f90:	inc    rbx
   140006f93:	cmp    WORD PTR [rax+rbx*2],r14w
   140006f98:	jne    0x140006f90
   140006f9a:	movsxd rax,ebx
   140006f9d:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   140006fa6:	lea    rax,[rax*2+0x2]
   140006fae:	cmp    rax,0x418
   140006fb4:	jae    0x140007047
   140006fba:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140006fc3:	lea    r8,[rbp+0x5a0]
   140006fca:	lea    rdx,[rip+0x2e57f]        # 0x140035550
   140006fd1:	lea    rcx,[rsp+0x30]
   140006fd6:	call   0x1400051d0
   140006fdb:	test   eax,eax
   140006fdd:	js     0x140006e82
   140006fe3:	lea    r8,[rbp+0x190]
   140006fea:	lea    rdx,[rip+0x2e56f]        # 0x140035560
   140006ff1:	lea    rcx,[rsp+0x30]
   140006ff6:	call   0x1400051d0
   140006ffb:	test   eax,eax
   140006ffd:	js     0x140006e82
   140007003:	test   esi,esi
   140007005:	je     0x140007016
   140007007:	test   rdi,rdi
   14000700a:	je     0x14000703d
   14000700c:	mov    DWORD PTR [rsp+0x20],0x1
   140007014:	jmp    0x140007020
   140007016:	test   rdi,rdi
   140007019:	je     0x14000703d
   14000701b:	mov    DWORD PTR [rsp+0x20],r14d
   140007020:	lea    r9,[rip+0x2e551]        # 0x140035578
   140007027:	mov    r8,rdi
   14000702a:	lea    rdx,[rbp-0x80]
   14000702e:	lea    rcx,[rsp+0x30]
   140007033:	call   0x140006ba8
   140007038:	jmp    0x140006e82
   14000703d:	mov    ebx,0x80070057
   140007042:	jmp    0x140006e84
   140007047:	call   0x14002e158
   14000704c:	int3   
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	int3   
   140007051:	int3   
   140007052:	int3   
   140007053:	int3   
   140007054:	int3   
   140007055:	int3   
   140007056:	int3   
   140007057:	int3   
   140007058:	int3   
   140007059:	int3   
   14000705a:	int3   
   14000705b:	int3   
   14000705c:	int3   
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	jmp    0x140006d90
   140007065:	int3   
   140007066:	int3   
   140007067:	int3   
   140007068:	int3   
   140007069:	int3   
   14000706a:	int3   
   14000706b:	int3   
   14000706c:	int3   
   14000706d:	int3   
   14000706e:	int3   
   14000706f:	int3   
   140007070:	mov    eax,0x493e0
   140007075:	ret    
   140007076:	int3   
   140007077:	int3   
   140007078:	int3   
   140007079:	int3   
   14000707a:	int3   
   14000707b:	int3   
   14000707c:	int3   
   14000707d:	int3   
   14000707e:	int3   
   14000707f:	int3   
   140007080:	rex push rbx
   140007082:	sub    rsp,0x20
   140007086:	lea    rax,[rip+0x2d59b]        # 0x140034628
   14000708d:	mov    rbx,rcx
   140007090:	mov    QWORD PTR [rcx],rax
   140007093:	test   dl,0x1
   140007096:	je     0x14000709e
   140007098:	call   QWORD PTR [rip+0x2b52a]        # 0x1400325c8
   14000709e:	mov    rax,rbx
   1400070a1:	add    rsp,0x20
   1400070a5:	pop    rbx
   1400070a6:	ret    
   1400070a7:	int3   
   1400070a8:	int3   
   1400070a9:	int3   
   1400070aa:	int3   
   1400070ab:	int3   
   1400070ac:	int3   
   1400070ad:	int3   
   1400070ae:	int3   
   1400070af:	int3   
   1400070b0:	mov    r11,rsp
   1400070b3:	mov    DWORD PTR [r11+0x20],r9d
   1400070b7:	sub    rsp,0xb8
   1400070be:	and    QWORD PTR [r11-0x18],0x0
   1400070c3:	lea    rax,[r11+0x58]
   1400070c7:	mov    r8d,0x4
   1400070cd:	movzx  r9d,dx
   1400070d1:	mov    QWORD PTR [r11-0x20],r8
   1400070d5:	mov    edx,0x2b
   1400070da:	mov    QWORD PTR [r11-0x28],rax
   1400070de:	lea    rax,[r11+0x50]
   1400070e2:	mov    QWORD PTR [r11-0x30],r8
   1400070e6:	mov    QWORD PTR [r11-0x38],rax
   1400070ea:	lea    rax,[r11+0x48]
   1400070ee:	mov    QWORD PTR [r11-0x40],r8
   1400070f2:	mov    QWORD PTR [r11-0x48],rax
   1400070f6:	lea    rax,[r11+0x40]
   1400070fa:	mov    QWORD PTR [r11-0x50],r8
   1400070fe:	mov    QWORD PTR [r11-0x58],rax
   140007102:	lea    rax,[r11+0x38]
   140007106:	mov    QWORD PTR [r11-0x60],r8
   14000710a:	mov    QWORD PTR [r11-0x68],rax
   14000710e:	lea    rax,[r11+0x30]
   140007112:	mov    QWORD PTR [r11-0x70],r8
   140007116:	mov    QWORD PTR [r11-0x78],rax
   14000711a:	lea    rax,[r11+0x28]
   14000711e:	mov    QWORD PTR [r11-0x80],r8
   140007122:	mov    QWORD PTR [rsp+0x30],rax
   140007127:	lea    rax,[r11+0x20]
   14000712b:	mov    QWORD PTR [rsp+0x28],r8
   140007130:	lea    r8,[rip+0x2f9b1]        # 0x140036ae8
   140007137:	mov    QWORD PTR [rsp+0x20],rax
   14000713c:	call   QWORD PTR [rip+0x2aede]        # 0x140032020
   140007142:	add    rsp,0xb8
   140007149:	ret    
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	mov    r11,rsp
   140007153:	mov    DWORD PTR [r11+0x20],r9d
   140007157:	sub    rsp,0xa8
   14000715e:	and    QWORD PTR [r11-0x18],0x0
   140007163:	lea    rax,[r11+0x50]
   140007167:	mov    r8d,0x14
   14000716d:	movzx  r9d,r8w
   140007171:	lea    edx,[r8-0x10]
   140007175:	mov    QWORD PTR [r11-0x20],rdx
   140007179:	lea    r8,[rip+0x2f968]        # 0x140036ae8
   140007180:	mov    QWORD PTR [r11-0x28],rax
   140007184:	lea    rax,[r11+0x48]
   140007188:	mov    QWORD PTR [r11-0x30],rdx
   14000718c:	mov    QWORD PTR [r11-0x38],rax
   140007190:	lea    rax,[r11+0x40]
   140007194:	mov    QWORD PTR [r11-0x40],rdx
   140007198:	mov    QWORD PTR [r11-0x48],rax
   14000719c:	lea    rax,[r11+0x38]
   1400071a0:	mov    QWORD PTR [r11-0x50],rdx
   1400071a4:	mov    QWORD PTR [r11-0x58],rax
   1400071a8:	lea    rax,[r11+0x30]
   1400071ac:	mov    QWORD PTR [r11-0x60],rdx
   1400071b0:	mov    QWORD PTR [r11-0x68],rax
   1400071b4:	lea    rax,[r11+0x28]
   1400071b8:	mov    QWORD PTR [r11-0x70],rdx
   1400071bc:	mov    QWORD PTR [r11-0x78],rax
   1400071c0:	lea    rax,[r11+0x20]
   1400071c4:	mov    QWORD PTR [r11-0x80],rdx
   1400071c8:	mov    edx,0x2b
   1400071cd:	mov    QWORD PTR [rsp+0x20],rax
   1400071d2:	call   QWORD PTR [rip+0x2ae48]        # 0x140032020
   1400071d8:	add    rsp,0xa8
   1400071df:	ret    
   1400071e0:	int3   
   1400071e1:	int3   
   1400071e2:	int3   
   1400071e3:	int3   
   1400071e4:	int3   
   1400071e5:	int3   
   1400071e6:	int3   
   1400071e7:	int3   
   1400071e8:	sub    rsp,0x48
   1400071ec:	xor    r11d,r11d
   1400071ef:	test   r9,r9
   1400071f2:	je     0x140007218
   1400071f4:	cmp    WORD PTR [r9],r11w
   1400071f8:	jne    0x140007200
   1400071fa:	lea    eax,[r11+0xe]
   1400071fe:	jmp    0x14000721d
   140007200:	or     rax,0xffffffffffffffff
   140007204:	inc    rax
   140007207:	cmp    WORD PTR [r9+rax*2],r11w
   14000720c:	jne    0x140007204
   14000720e:	lea    rax,[rax*2+0x2]
   140007216:	jmp    0x14000721d
   140007218:	mov    eax,0xa
   14000721d:	test   r9,r9
   140007220:	je     0x140007233
   140007222:	cmp    WORD PTR [r9],r11w
   140007226:	lea    r10,[rip+0x2dc2b]        # 0x140034e58
   14000722d:	cmove  r9,r10
   140007231:	jmp    0x14000723a
   140007233:	lea    r9,[rip+0x2e266]        # 0x1400354a0
   14000723a:	mov    QWORD PTR [rsp+0x30],r11
   14000723f:	mov    QWORD PTR [rsp+0x28],rax
   140007244:	mov    QWORD PTR [rsp+0x20],r9
   140007249:	movzx  r9d,dx
   14000724d:	mov    edx,0x2b
   140007252:	call   QWORD PTR [rip+0x2adc8]        # 0x140032020
   140007258:	add    rsp,0x48
   14000725c:	ret    
   14000725d:	int3   
   14000725e:	int3   
   14000725f:	int3   
   140007260:	int3   
   140007261:	int3   
   140007262:	int3   
   140007263:	int3   
   140007264:	sub    rsp,0x58
   140007268:	xor    r11d,r11d
   14000726b:	test   r9,r9
   14000726e:	je     0x140007294
   140007270:	cmp    WORD PTR [r9],r11w
   140007274:	jne    0x14000727c
   140007276:	lea    eax,[r11+0xe]
   14000727a:	jmp    0x140007299
   14000727c:	or     rax,0xffffffffffffffff
   140007280:	inc    rax
   140007283:	cmp    WORD PTR [r9+rax*2],r11w
   140007288:	jne    0x140007280
   14000728a:	lea    rax,[rax*2+0x2]
   140007292:	jmp    0x140007299
   140007294:	mov    eax,0xa
   140007299:	test   r9,r9
   14000729c:	je     0x1400072af
   14000729e:	cmp    WORD PTR [r9],r11w
   1400072a2:	lea    r10,[rip+0x2dbaf]        # 0x140034e58
   1400072a9:	cmove  r9,r10
   1400072ad:	jmp    0x1400072b6
   1400072af:	lea    r9,[rip+0x2e1ea]        # 0x1400354a0
   1400072b6:	mov    QWORD PTR [rsp+0x40],r11
   1400072bb:	lea    r10,[rsp+0x80]
   1400072c3:	mov    QWORD PTR [rsp+0x38],0x4
   1400072cc:	mov    QWORD PTR [rsp+0x30],r10
   1400072d1:	mov    QWORD PTR [rsp+0x28],rax
   1400072d6:	mov    QWORD PTR [rsp+0x20],r9
   1400072db:	movzx  r9d,dx
   1400072df:	mov    edx,0x2b
   1400072e4:	call   QWORD PTR [rip+0x2ad36]        # 0x140032020
   1400072ea:	add    rsp,0x58
   1400072ee:	ret    
   1400072ef:	int3   
   1400072f0:	int3   
   1400072f1:	int3   
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	int3   
   1400072f5:	int3   
   1400072f6:	int3   
   1400072f7:	int3   
   1400072f8:	sub    rsp,0x88
   1400072ff:	xor    r8d,r8d
   140007302:	test   r9,r9
   140007305:	je     0x14000732b
   140007307:	cmp    WORD PTR [r9],r8w
   14000730b:	jne    0x140007313
   14000730d:	lea    eax,[r8+0xe]
   140007311:	jmp    0x140007330
   140007313:	or     rax,0xffffffffffffffff
   140007317:	inc    rax
   14000731a:	cmp    WORD PTR [r9+rax*2],r8w
   14000731f:	jne    0x140007317
   140007321:	lea    rax,[rax*2+0x2]
   140007329:	jmp    0x140007330
   14000732b:	mov    eax,0xa
   140007330:	test   r9,r9
   140007333:	je     0x140007346
   140007335:	cmp    WORD PTR [r9],r8w
   140007339:	lea    rdx,[rip+0x2db18]        # 0x140034e58
   140007340:	cmove  r9,rdx
   140007344:	jmp    0x14000734d
   140007346:	lea    r9,[rip+0x2e153]        # 0x1400354a0
   14000734d:	mov    QWORD PTR [rsp+0x70],r8
   140007352:	lea    rdx,[rsp+0xc8]
   14000735a:	mov    r10d,0x3d
   140007360:	lea    r8d,[r10-0x39]
   140007364:	mov    QWORD PTR [rsp+0x68],r8
   140007369:	mov    QWORD PTR [rsp+0x60],rdx
   14000736e:	lea    rdx,[rsp+0xc0]
   140007376:	mov    QWORD PTR [rsp+0x58],r8
   14000737b:	mov    QWORD PTR [rsp+0x50],rdx
   140007380:	lea    rdx,[rsp+0xb8]
   140007388:	mov    QWORD PTR [rsp+0x48],r8
   14000738d:	mov    QWORD PTR [rsp+0x40],rdx
   140007392:	lea    rdx,[rsp+0xb0]
   14000739a:	mov    QWORD PTR [rsp+0x38],r8
   14000739f:	lea    r8,[rip+0x2f742]        # 0x140036ae8
   1400073a6:	mov    QWORD PTR [rsp+0x30],rdx
   1400073ab:	lea    edx,[r10-0x12]
   1400073af:	mov    QWORD PTR [rsp+0x28],rax
   1400073b4:	mov    QWORD PTR [rsp+0x20],r9
   1400073b9:	movzx  r9d,r10w
   1400073bd:	call   QWORD PTR [rip+0x2ac5d]        # 0x140032020
   1400073c3:	add    rsp,0x88
   1400073ca:	ret    
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	int3   
   1400073d1:	int3   
   1400073d2:	int3   
   1400073d3:	int3   
   1400073d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400073d9:	push   rsi
   1400073da:	sub    rsp,0x50
   1400073de:	mov    rax,QWORD PTR [rsp+0x80]
   1400073e6:	or     r8,0xffffffffffffffff
   1400073ea:	xor    ebx,ebx
   1400073ec:	mov    r11,rcx
   1400073ef:	mov    r10d,0xe
   1400073f5:	test   rax,rax
   1400073f8:	je     0x14000741a
   1400073fa:	cmp    WORD PTR [rax],bx
   1400073fd:	jne    0x140007404
   1400073ff:	mov    ecx,r10d
   140007402:	jmp    0x14000741f
   140007404:	mov    rcx,r8
   140007407:	inc    rcx
   14000740a:	cmp    WORD PTR [rax+rcx*2],bx
   14000740e:	jne    0x140007407
   140007410:	lea    rcx,[rcx*2+0x2]
   140007418:	jmp    0x14000741f
   14000741a:	mov    ecx,0xa
   14000741f:	lea    rsi,[rip+0x2da32]        # 0x140034e58
   140007426:	test   rax,rax
   140007429:	je     0x140007434
   14000742b:	cmp    WORD PTR [rax],bx
   14000742e:	cmove  rax,rsi
   140007432:	jmp    0x14000743b
   140007434:	lea    rax,[rip+0x2e065]        # 0x1400354a0
   14000743b:	test   r9,r9
   14000743e:	je     0x14000745a
   140007440:	cmp    WORD PTR [r9],bx
   140007444:	je     0x140007460
   140007446:	inc    r8
   140007449:	cmp    WORD PTR [r9+r8*2],bx
   14000744e:	jne    0x140007446
   140007450:	lea    r10,[r8*2+0x2]
   140007458:	jmp    0x140007460
   14000745a:	mov    r10d,0xa
   140007460:	test   r9,r9
   140007463:	je     0x14000746f
   140007465:	cmp    WORD PTR [r9],bx
   140007469:	cmove  r9,rsi
   14000746d:	jmp    0x140007476
   14000746f:	lea    r9,[rip+0x2e02a]        # 0x1400354a0
   140007476:	mov    QWORD PTR [rsp+0x40],rbx
   14000747b:	lea    r8,[rip+0x2f666]        # 0x140036ae8
   140007482:	mov    QWORD PTR [rsp+0x38],rcx
   140007487:	mov    rcx,r11
   14000748a:	mov    QWORD PTR [rsp+0x30],rax
   14000748f:	mov    QWORD PTR [rsp+0x28],r10
   140007494:	mov    QWORD PTR [rsp+0x20],r9
   140007499:	movzx  r9d,dx
   14000749d:	mov    edx,0x2b
   1400074a2:	call   QWORD PTR [rip+0x2ab78]        # 0x140032020
   1400074a8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400074ad:	add    rsp,0x50
   1400074b1:	pop    rsi
   1400074b2:	ret    
   1400074b3:	int3   
   1400074b4:	int3   
   1400074b5:	int3   
   1400074b6:	int3   
   1400074b7:	int3   
   1400074b8:	int3   
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	sub    rsp,0x68
   1400074c0:	xor    r10d,r10d
   1400074c3:	test   r9,r9
   1400074c6:	je     0x1400074ec
   1400074c8:	cmp    WORD PTR [r9],r10w
   1400074cc:	jne    0x1400074d4
   1400074ce:	lea    eax,[r10+0xe]
   1400074d2:	jmp    0x1400074f1
   1400074d4:	or     rax,0xffffffffffffffff
   1400074d8:	inc    rax
   1400074db:	cmp    WORD PTR [r9+rax*2],r10w
   1400074e0:	jne    0x1400074d8
   1400074e2:	lea    rax,[rax*2+0x2]
   1400074ea:	jmp    0x1400074f1
   1400074ec:	mov    eax,0xa
   1400074f1:	test   r9,r9
   1400074f4:	je     0x140007507
   1400074f6:	cmp    WORD PTR [r9],r10w
   1400074fa:	lea    r8,[rip+0x2d957]        # 0x140034e58
   140007501:	cmove  r9,r8
   140007505:	jmp    0x14000750e
   140007507:	lea    r9,[rip+0x2df92]        # 0x1400354a0
   14000750e:	mov    QWORD PTR [rsp+0x50],r10
   140007513:	lea    r8,[rsp+0x98]
   14000751b:	mov    QWORD PTR [rsp+0x48],0x8
   140007524:	mov    QWORD PTR [rsp+0x40],r8
   140007529:	lea    r8,[rsp+0x90]
   140007531:	mov    QWORD PTR [rsp+0x38],0x4
   14000753a:	mov    QWORD PTR [rsp+0x30],r8
   14000753f:	lea    r8,[rip+0x2f5a2]        # 0x140036ae8
   140007546:	mov    QWORD PTR [rsp+0x28],rax
   14000754b:	mov    QWORD PTR [rsp+0x20],r9
   140007550:	movzx  r9d,dx
   140007554:	mov    edx,0x2b
   140007559:	call   QWORD PTR [rip+0x2aac1]        # 0x140032020
   14000755f:	add    rsp,0x68
   140007563:	ret    
   140007564:	int3   
   140007565:	int3   
   140007566:	int3   
   140007567:	int3   
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	sub    rsp,0x48
   140007570:	and    QWORD PTR [rsp+0x30],0x0
   140007576:	mov    QWORD PTR [rsp+0x28],0x10
   14000757f:	mov    QWORD PTR [rsp+0x20],r9
   140007584:	movzx  r9d,dx
   140007588:	mov    edx,0x2b
   14000758d:	call   QWORD PTR [rip+0x2aa8d]        # 0x140032020
   140007593:	add    rsp,0x48
   140007597:	ret    
   140007598:	int3   
   140007599:	int3   
   14000759a:	int3   
   14000759b:	int3   
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	mov    r11,rsp
   1400075a3:	mov    DWORD PTR [r11+0x20],r9d
   1400075a7:	push   rbp
   1400075a8:	lea    rbp,[r11-0xf]
   1400075ac:	sub    rsp,0x100
   1400075b3:	and    QWORD PTR [r11-0x18],0x0
   1400075b8:	lea    rax,[rbp+0x8f]
   1400075bf:	mov    r8d,0x13
   1400075c5:	movzx  r9d,r8w
   1400075c9:	lea    edx,[r8-0xf]
   1400075cd:	mov    QWORD PTR [r11-0x20],rdx
   1400075d1:	lea    r8,[rip+0x2f510]        # 0x140036ae8
   1400075d8:	mov    QWORD PTR [r11-0x28],rax
   1400075dc:	lea    rax,[rbp+0x87]
   1400075e3:	mov    QWORD PTR [r11-0x30],rdx
   1400075e7:	mov    QWORD PTR [r11-0x38],rax
   1400075eb:	lea    rax,[rbp+0x7f]
   1400075ef:	mov    QWORD PTR [r11-0x40],rdx
   1400075f3:	mov    QWORD PTR [r11-0x48],rax
   1400075f7:	lea    rax,[rbp+0x77]
   1400075fb:	mov    QWORD PTR [r11-0x50],rdx
   1400075ff:	mov    QWORD PTR [r11-0x58],rax
   140007603:	lea    rax,[rbp+0x6f]
   140007607:	mov    QWORD PTR [r11-0x60],rdx
   14000760b:	mov    QWORD PTR [r11-0x68],rax
   14000760f:	lea    rax,[rbp+0x67]
   140007613:	mov    QWORD PTR [r11-0x70],rdx
   140007617:	mov    QWORD PTR [r11-0x78],rax
   14000761b:	lea    rax,[rbp+0x5f]
   14000761f:	mov    QWORD PTR [r11-0x80],rdx
   140007623:	mov    QWORD PTR [r11-0x88],rax
   14000762a:	lea    rax,[rbp+0x57]
   14000762e:	mov    QWORD PTR [rsp+0x78],rdx
   140007633:	mov    QWORD PTR [rsp+0x70],rax
   140007638:	lea    rax,[rbp+0x4f]
   14000763c:	mov    QWORD PTR [rsp+0x68],rdx
   140007641:	mov    QWORD PTR [rsp+0x60],rax
   140007646:	lea    rax,[rbp+0x47]
   14000764a:	mov    QWORD PTR [rsp+0x58],rdx
   14000764f:	mov    QWORD PTR [rsp+0x50],rax
   140007654:	lea    rax,[rbp+0x3f]
   140007658:	mov    QWORD PTR [rsp+0x48],rdx
   14000765d:	mov    QWORD PTR [rsp+0x40],rax
   140007662:	lea    rax,[rbp+0x37]
   140007666:	mov    QWORD PTR [rsp+0x38],rdx
   14000766b:	mov    QWORD PTR [rsp+0x30],rax
   140007670:	lea    rax,[rbp+0x2f]
   140007674:	mov    QWORD PTR [rsp+0x28],rdx
   140007679:	mov    edx,0x2b
   14000767e:	mov    QWORD PTR [rsp+0x20],rax
   140007683:	call   QWORD PTR [rip+0x2a997]        # 0x140032020
   140007689:	add    rsp,0x100
   140007690:	pop    rbp
   140007691:	ret    
   140007692:	int3   
   140007693:	int3   
   140007694:	int3   
   140007695:	int3   
   140007696:	int3   
   140007697:	int3   
   140007698:	mov    QWORD PTR [rsp+0x18],rbx
   14000769d:	mov    QWORD PTR [rsp+0x20],rbp
   1400076a2:	push   rdi
   1400076a3:	sub    rsp,0x30
   1400076a7:	xor    ebp,ebp
   1400076a9:	mov    rdi,rcx
   1400076ac:	mov    DWORD PTR [rcx+0x18],ebp
   1400076af:	xor    edx,edx
   1400076b1:	add    rcx,0x20
   1400076b5:	lea    r8d,[rbp+0x28]
   1400076b9:	call   0x14002e2ce
   1400076be:	mov    BYTE PTR [rdi+0x48],bpl
   1400076c2:	lea    rax,[rip+0x2d06f]        # 0x140034738
   1400076c9:	mov    QWORD PTR [rdi],rax
   1400076cc:	lea    rcx,[rdi+0x60]
   1400076d0:	lea    rax,[rip+0x2d041]        # 0x140034718
   1400076d7:	mov    QWORD PTR [rdi+0x8],rax
   1400076db:	lea    rax,[rip+0x2cffe]        # 0x1400346e0
   1400076e2:	mov    QWORD PTR [rdi+0x10],rax
   1400076e6:	mov    QWORD PTR [rdi+0x50],rbp
   1400076ea:	mov    DWORD PTR [rdi+0x58],ebp
   1400076ed:	call   0x140003950
   1400076f2:	mov    DWORD PTR [rdi+0x98],ebp
   1400076f8:	lea    rax,[rip+0x2d621]        # 0x140034d20
   1400076ff:	mov    QWORD PTR [rdi+0x90],rax
   140007706:	lea    rcx,[rdi+0x108]
   14000770d:	mov    QWORD PTR [rdi+0xa0],rbp
   140007714:	mov    BYTE PTR [rdi+0xa8],bpl
   14000771b:	mov    BYTE PTR [rdi+0xa9],bpl
   140007722:	mov    DWORD PTR [rdi+0xb8],ebp
   140007728:	mov    QWORD PTR [rdi+0xb0],rax
   14000772f:	lea    rax,[rdi+0xd0]
   140007736:	mov    QWORD PTR [rdi+0xc0],rbp
   14000773d:	mov    BYTE PTR [rdi+0xc8],bpl
   140007744:	mov    BYTE PTR [rdi+0xc9],bpl
   14000774b:	mov    QWORD PTR [rax+0x10],rbp
   14000774f:	mov    QWORD PTR [rax+0x8],rax
   140007753:	mov    QWORD PTR [rax],rax
   140007756:	call   0x140003950
   14000775b:	lea    rcx,[rdi+0x130]
   140007762:	call   0x140003950
   140007767:	lea    rcx,[rdi+0x168]
   14000776e:	call   0x140003950
   140007773:	xor    r8d,r8d
   140007776:	mov    QWORD PTR [rdi+0x190],rbp
   14000777d:	xor    edx,edx
   14000777f:	mov    QWORD PTR [rdi+0x198],rbp
   140007786:	call   0x14000ded0
   14000778b:	mov    QWORD PTR [rdi+0x190],rax
   140007792:	lea    r10,[rdi+0x1a0]
   140007799:	mov    QWORD PTR [r10],rbp
   14000779c:	mov    QWORD PTR [r10+0x8],rbp
   1400077a0:	mov    QWORD PTR [r10+0x10],rbp
   1400077a4:	mov    rax,QWORD PTR [rdi+0x190]
   1400077ab:	mov    DWORD PTR [rdi+0x1c8],0x40800000
   1400077b5:	mov    r8,QWORD PTR [r10]
   1400077b8:	mov    rcx,QWORD PTR [r10+0x8]
   1400077bc:	mov    QWORD PTR [rsp+0x40],rax
   1400077c1:	cmp    r8,r8
   1400077c4:	jne    0x1400077cb
   1400077c6:	cmp    rcx,rcx
   1400077c9:	je     0x140007803
   1400077cb:	cmp    r8,rcx
   1400077ce:	je     0x140007807
   1400077d0:	mov    rdx,rcx
   1400077d3:	mov    r9,rbp
   1400077d6:	sub    rdx,rcx
   1400077d9:	add    rdx,0x7
   1400077dd:	shr    rdx,0x3
   1400077e1:	cmp    rcx,rcx
   1400077e4:	cmova  rdx,rbp
   1400077e8:	test   rdx,rdx
   1400077eb:	je     0x140007803
   1400077ed:	sub    rcx,r8
   1400077f0:	mov    rax,QWORD PTR [rcx+r8*1]
   1400077f4:	inc    r9
   1400077f7:	mov    QWORD PTR [r8],rax
   1400077fa:	add    r8,0x8
   1400077fe:	cmp    r9,rdx
   140007801:	jne    0x1400077f0
   140007803:	mov    QWORD PTR [r10+0x8],r8
   140007807:	mov    r8,QWORD PTR [r10]
   14000780a:	lea    rax,[rsp+0x40]
   14000780f:	mov    r9d,0x10
   140007815:	mov    QWORD PTR [rsp+0x20],rax
   14000781a:	lea    rdx,[rsp+0x48]
   14000781f:	mov    rcx,r10
   140007822:	call   0x14000dfb4
   140007827:	lea    rcx,[rdi+0x1d0]
   14000782e:	mov    QWORD PTR [rdi+0x1b8],0x7
   140007839:	mov    QWORD PTR [rdi+0x1c0],0x8
   140007844:	call   0x140003950
   140007849:	mov    DWORD PTR [rdi+0x1f8],0x1
   140007853:	lea    rbx,[rdi+0x200]
   14000785a:	mov    ecx,0x10
   14000785f:	mov    QWORD PTR [rbx],rbp
   140007862:	mov    QWORD PTR [rbx+0x8],rbp
   140007866:	mov    QWORD PTR [rbx+0x10],rbp
   14000786a:	mov    QWORD PTR [rbx+0x18],rbp
   14000786e:	mov    QWORD PTR [rbx+0x20],rbp
   140007872:	call   0x140023f10
   140007877:	mov    QWORD PTR [rbx],rax
   14000787a:	xorps  xmm0,xmm0
   14000787d:	movdqu XMMWORD PTR [rax],xmm0
   140007881:	mov    rax,QWORD PTR [rbx]
   140007884:	mov    QWORD PTR [rax],rbx
   140007887:	mov    rax,rdi
   14000788a:	mov    DWORD PTR [rbx+0x34],0xf12192e
   140007891:	mov    QWORD PTR [rbx+0x50],rbp
   140007895:	mov    QWORD PTR [rbx+0x58],rbp
   140007899:	mov    WORD PTR [rbx+0x60],bp
   14000789d:	mov    QWORD PTR [rbx+0x70],rbp
   1400078a1:	mov    DWORD PTR [rbx+0x64],0xfa
   1400078a8:	mov    QWORD PTR [rbx+0x78],rbp
   1400078ac:	mov    rbx,QWORD PTR [rsp+0x50]
   1400078b1:	mov    QWORD PTR [rdi+0x280],rbp
   1400078b8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400078bd:	add    rsp,0x30
   1400078c1:	pop    rdi
   1400078c2:	ret    
   1400078c3:	int3   
   1400078c4:	int3   
   1400078c5:	int3   
   1400078c6:	int3   
   1400078c7:	int3   
   1400078c8:	int3   
   1400078c9:	int3   
   1400078ca:	int3   
   1400078cb:	int3   
   1400078cc:	int3   
   1400078cd:	int3   
   1400078ce:	int3   
   1400078cf:	int3   
   1400078d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078d5:	push   rdi
   1400078d6:	sub    rsp,0x20
   1400078da:	mov    ebx,edx
   1400078dc:	mov    rdi,rcx
   1400078df:	call   0x140007908
   1400078e4:	test   bl,0x1
   1400078e7:	je     0x1400078f2
   1400078e9:	mov    rcx,rdi
   1400078ec:	call   QWORD PTR [rip+0x2acd6]        # 0x1400325c8
   1400078f2:	mov    rax,rdi
   1400078f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078fa:	add    rsp,0x20
   1400078fe:	pop    rdi
   1400078ff:	ret    
   140007900:	int3   
   140007901:	int3   
   140007902:	int3   
   140007903:	int3   
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	mov    QWORD PTR [rsp+0x8],rbx
   14000790d:	mov    QWORD PTR [rsp+0x10],rsi
   140007912:	push   rdi
   140007913:	sub    rsp,0x20
   140007917:	lea    rax,[rip+0x2ce1a]        # 0x140034738
   14000791e:	mov    rdi,rcx
   140007921:	mov    QWORD PTR [rcx],rax
   140007924:	lea    rax,[rip+0x2cded]        # 0x140034718
   14000792b:	mov    QWORD PTR [rcx+0x8],rax
   14000792f:	lea    rax,[rip+0x2cdaa]        # 0x1400346e0
   140007936:	mov    QWORD PTR [rcx+0x10],rax
   14000793a:	mov    rsi,QWORD PTR [rcx+0x280]
   140007941:	test   rsi,rsi
   140007944:	je     0x14000795b
   140007946:	mov    rax,QWORD PTR [rsi]
   140007949:	mov    rbx,QWORD PTR [rax+0x8]
   14000794d:	mov    rcx,rbx
   140007950:	call   QWORD PTR [rip+0x2ad52]        # 0x1400326a8
   140007956:	mov    rcx,rsi
   140007959:	call   rbx
   14000795b:	lea    rcx,[rdi+0x200]
   140007962:	call   0x140015eec
   140007967:	lea    rbx,[rdi+0x190]
   14000796e:	lea    rcx,[rbx+0x40]
   140007972:	call   QWORD PTR [rip+0x2a900]        # 0x140032278
   140007978:	mov    rcx,rbx
   14000797b:	call   0x14000e280
   140007980:	lea    rcx,[rdi+0x168]
   140007987:	call   QWORD PTR [rip+0x2a8eb]        # 0x140032278
   14000798d:	lea    rcx,[rdi+0x130]
   140007994:	call   QWORD PTR [rip+0x2a8de]        # 0x140032278
   14000799a:	lea    rcx,[rdi+0x108]
   1400079a1:	call   QWORD PTR [rip+0x2a8d1]        # 0x140032278
   1400079a7:	lea    rsi,[rdi+0xd0]
   1400079ae:	cmp    QWORD PTR [rsi+0x10],0x0
   1400079b3:	je     0x1400079dd
   1400079b5:	mov    rbx,QWORD PTR [rsi]
   1400079b8:	jmp    0x1400079d8
   1400079ba:	mov    rcx,rbx
   1400079bd:	mov    rbx,QWORD PTR [rbx]
   1400079c0:	mov    rax,QWORD PTR [rcx+0x8]
   1400079c4:	mov    rdx,QWORD PTR [rcx]
   1400079c7:	mov    QWORD PTR [rax],rdx
   1400079ca:	mov    QWORD PTR [rdx+0x8],rax
   1400079ce:	call   QWORD PTR [rip+0x2abf4]        # 0x1400325c8
   1400079d4:	dec    QWORD PTR [rsi+0x10]
   1400079d8:	cmp    rbx,rsi
   1400079db:	jne    0x1400079ba
   1400079dd:	lea    rcx,[rdi+0xb0]
   1400079e4:	call   0x140029b48
   1400079e9:	lea    rcx,[rdi+0x90]
   1400079f0:	call   0x140029b48
   1400079f5:	lea    rcx,[rdi+0x60]
   1400079f9:	call   QWORD PTR [rip+0x2a879]        # 0x140032278
   1400079ff:	mov    rsi,QWORD PTR [rdi+0x50]
   140007a03:	test   rsi,rsi
   140007a06:	je     0x140007a44
   140007a08:	mov    eax,DWORD PTR [rsi+0x8]
   140007a0b:	cmp    eax,0x1
   140007a0e:	jne    0x140007a19
   140007a10:	mov    DWORD PTR [rsi+0x8],0x0
   140007a17:	jmp    0x140007a26
   140007a19:	or     eax,0xffffffff
   140007a1c:	lock xadd DWORD PTR [rsi+0x8],eax
   140007a21:	sub    eax,0x1
   140007a24:	jg     0x140007a44
   140007a26:	test   rsi,rsi
   140007a29:	je     0x140007a44
   140007a2b:	mov    rax,QWORD PTR [rsi]
   140007a2e:	mov    rbx,QWORD PTR [rax]
   140007a31:	mov    rcx,rbx
   140007a34:	call   QWORD PTR [rip+0x2ac6e]        # 0x1400326a8
   140007a3a:	mov    edx,0x1
   140007a3f:	mov    rcx,rsi
   140007a42:	call   rbx
   140007a44:	lea    rcx,[rdi+0x20]
   140007a48:	cmp    BYTE PTR [rcx+0x28],0x0
   140007a4c:	je     0x140007a58
   140007a4e:	mov    BYTE PTR [rcx+0x28],0x0
   140007a52:	call   QWORD PTR [rip+0x2a820]        # 0x140032278
   140007a58:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a5d:	mov    rsi,QWORD PTR [rsp+0x38]
   140007a62:	add    rsp,0x20
   140007a66:	pop    rdi
   140007a67:	ret    
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	int3   
   140007a6b:	int3   
   140007a6c:	int3   
   140007a6d:	int3   
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	mov    QWORD PTR [rsp+0x10],rbx
   140007a75:	mov    QWORD PTR [rsp+0x18],rsi
   140007a7a:	push   rdi
   140007a7b:	sub    rsp,0x50
   140007a7f:	mov    rax,QWORD PTR [rip+0x4359a]        # 0x14004b020
   140007a86:	xor    rax,rsp
   140007a89:	mov    QWORD PTR [rsp+0x48],rax
   140007a8e:	lea    rdi,[rcx+0x168]
   140007a95:	mov    rsi,rcx
   140007a98:	mov    rcx,rdi
   140007a9b:	call   QWORD PTR [rip+0x2a667]        # 0x140032108
   140007aa1:	mov    rbx,QWORD PTR [rsi+0xf8]
   140007aa8:	mov    rcx,rdi
   140007aab:	and    QWORD PTR [rsi+0x158],0x0
   140007ab3:	mov    BYTE PTR [rsi+0xf0],0x0
   140007aba:	call   QWORD PTR [rip+0x2a638]        # 0x1400320f8
   140007ac0:	test   rbx,rbx
   140007ac3:	jne    0x140007ae0
   140007ac5:	mov    rcx,QWORD PTR [rip+0x435ac]        # 0x14004b078
   140007acc:	lea    rax,[rip+0x435a5]        # 0x14004b078
   140007ad3:	cmp    rcx,rax
   140007ad6:	je     0x140007b1c
   140007ad8:	test   BYTE PTR [rcx+0x1c],0x1
   140007adc:	je     0x140007b1c
   140007ade:	jmp    0x140007b07
   140007ae0:	xor    edx,edx
   140007ae2:	mov    rcx,rsi
   140007ae5:	call   0x14000b71c
   140007aea:	mov    rcx,QWORD PTR [rsp+0x48]
   140007aef:	xor    rcx,rsp
   140007af2:	call   0x14002dd00
   140007af7:	mov    rbx,QWORD PTR [rsp+0x68]
   140007afc:	mov    rsi,QWORD PTR [rsp+0x70]
   140007b01:	add    rsp,0x50
   140007b05:	pop    rdi
   140007b06:	ret    
   140007b07:	mov    rcx,QWORD PTR [rcx+0x10]
   140007b0b:	lea    r8,[rip+0x2efd6]        # 0x140036ae8
   140007b12:	mov    edx,0xa
   140007b17:	call   0x140001f08
   140007b1c:	mov    edx,0x8000ffff
   140007b21:	lea    rcx,[rsp+0x20]
   140007b26:	call   0x140002064
   140007b2b:	lea    rdx,[rip+0x41656]        # 0x140049188
   140007b32:	lea    rcx,[rsp+0x20]
   140007b37:	call   0x14002e2da
   140007b3c:	int3   
   140007b3d:	int3   
   140007b3e:	int3   
   140007b3f:	int3   
   140007b40:	int3   
   140007b41:	int3   
   140007b42:	int3   
   140007b43:	int3   
   140007b44:	mov    QWORD PTR [rsp+0x8],rbx
   140007b49:	mov    QWORD PTR [rsp+0x10],rbp
   140007b4e:	mov    QWORD PTR [rsp+0x18],rsi
   140007b53:	push   rdi
   140007b54:	sub    rsp,0x20
   140007b58:	cmp    DWORD PTR [rcx+0x160],0x0
   140007b5f:	mov    bpl,r8b
   140007b62:	mov    rbx,rcx
   140007b65:	jne    0x140007b6e
   140007b67:	mov    eax,0x1
   140007b6c:	jmp    0x140007be9
   140007b6e:	mov    rcx,rdx
   140007b71:	call   QWORD PTR [rip+0x2a7e9]        # 0x140032360
   140007b77:	mov    rsi,rax
   140007b7a:	test   rax,rax
   140007b7d:	jne    0x140007baf
   140007b7f:	mov    rcx,QWORD PTR [rip+0x434f2]        # 0x14004b078
   140007b86:	lea    rax,[rip+0x434eb]        # 0x14004b078
   140007b8d:	cmp    rcx,rax
   140007b90:	je     0x140007bab
   140007b92:	test   BYTE PTR [rcx+0x1c],0x1
   140007b96:	je     0x140007bab
   140007b98:	mov    rcx,QWORD PTR [rcx+0x10]
   140007b9c:	lea    edx,[rsi+0xb]
   140007b9f:	lea    r8,[rip+0x2ef42]        # 0x140036ae8
   140007ba6:	call   0x140001f08
   140007bab:	xor    eax,eax
   140007bad:	jmp    0x140007be9
   140007baf:	lea    rdi,[rbx+0x168]
   140007bb6:	mov    rcx,rdi
   140007bb9:	call   QWORD PTR [rip+0x2a549]        # 0x140032108
   140007bbf:	mov    rcx,rbx
   140007bc2:	mov    BYTE PTR [rbx+0x100],bpl
   140007bc9:	mov    QWORD PTR [rbx+0xf8],rsi
   140007bd0:	mov    BYTE PTR [rbx+0xf0],0x1
   140007bd7:	call   0x140007c2c
   140007bdc:	mov    rcx,rdi
   140007bdf:	mov    ebx,eax
   140007be1:	call   QWORD PTR [rip+0x2a511]        # 0x1400320f8
   140007be7:	mov    eax,ebx
   140007be9:	mov    rbx,QWORD PTR [rsp+0x30]
   140007bee:	mov    rbp,QWORD PTR [rsp+0x38]
   140007bf3:	mov    rsi,QWORD PTR [rsp+0x40]
   140007bf8:	add    rsp,0x20
   140007bfc:	pop    rdi
   140007bfd:	ret    
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	int3   
   140007c01:	int3   
   140007c02:	int3   
   140007c03:	int3   
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	sub    rsp,0x28
   140007c14:	test   rcx,rcx
   140007c17:	je     0x140007c1e
   140007c19:	call   0x140007a70
   140007c1e:	add    rsp,0x28
   140007c22:	ret    
   140007c23:	int3   
   140007c24:	int3   
   140007c25:	int3   
   140007c26:	int3   
   140007c27:	int3   
   140007c28:	int3   
   140007c29:	int3   
   140007c2a:	int3   
   140007c2b:	int3   
   140007c2c:	mov    QWORD PTR [rsp+0x8],rbx
   140007c31:	mov    QWORD PTR [rsp+0x10],rsi
   140007c36:	push   rdi
   140007c37:	sub    rsp,0x40
   140007c3b:	lea    rbx,[rcx+0x158]
   140007c42:	mov    rsi,rcx
   140007c45:	cmp    QWORD PTR [rbx],0x0
   140007c49:	je     0x140007c8a
   140007c4b:	mov    edi,0xa
   140007c50:	mov    rdx,QWORD PTR [rbx]
   140007c53:	xor    r8d,r8d
   140007c56:	xor    ecx,ecx
   140007c58:	call   QWORD PTR [rip+0x2a4e2]        # 0x140032140
   140007c5e:	test   eax,eax
   140007c60:	jne    0x140007c73
   140007c62:	call   QWORD PTR [rip+0x2a620]        # 0x140032288
   140007c68:	cmp    eax,0x3e5
   140007c6d:	je     0x140007c73
   140007c6f:	xor    eax,eax
   140007c71:	jmp    0x140007c78
   140007c73:	mov    eax,0x1
   140007c78:	dec    edi
   140007c7a:	test   eax,eax
   140007c7c:	jne    0x140007c82
   140007c7e:	test   edi,edi
   140007c80:	jg     0x140007c50
   140007c82:	and    QWORD PTR [rbx],0x0
   140007c86:	test   eax,eax
   140007c88:	je     0x140007cb6
   140007c8a:	mov    eax,DWORD PTR [rsi+0x160]
   140007c90:	lea    r8,[rip+0xffffffffffffff79]        # 0x140007c10
   140007c97:	mov    DWORD PTR [rsp+0x30],0x8
   140007c9f:	mov    r9,rsi
   140007ca2:	and    DWORD PTR [rsp+0x28],0x0
   140007ca7:	xor    edx,edx
   140007ca9:	mov    rcx,rbx
   140007cac:	mov    DWORD PTR [rsp+0x20],eax
   140007cb0:	call   QWORD PTR [rip+0x2a492]        # 0x140032148
   140007cb6:	mov    rbx,QWORD PTR [rsp+0x50]
   140007cbb:	mov    rsi,QWORD PTR [rsp+0x58]
   140007cc0:	add    rsp,0x40
   140007cc4:	pop    rdi
   140007cc5:	ret    
   140007cc6:	int3   
   140007cc7:	int3   
   140007cc8:	int3   
   140007cc9:	int3   
   140007cca:	int3   
   140007ccb:	int3   
   140007ccc:	mov    rax,rsp
   140007ccf:	push   rsi
   140007cd0:	push   rdi
   140007cd1:	push   r14
   140007cd3:	sub    rsp,0x150
   140007cda:	mov    QWORD PTR [rax-0x88],0xfffffffffffffffe
   140007ce5:	mov    QWORD PTR [rax+0x18],rbx
   140007ce9:	mov    rax,QWORD PTR [rip+0x43330]        # 0x14004b020
   140007cf0:	xor    rax,rsp
   140007cf3:	mov    QWORD PTR [rsp+0x140],rax
   140007cfb:	mov    r14,rdx
   140007cfe:	mov    rdi,rcx
   140007d01:	mov    QWORD PTR [rsp+0x68],rcx
   140007d06:	xor    ebx,ebx
   140007d08:	test   rdx,rdx
   140007d0b:	je     0x140007d0f
   140007d0d:	mov    BYTE PTR [rdx],bl
   140007d0f:	cmp    DWORD PTR [rcx+0x160],ebx
   140007d15:	je     0x140007e9f
   140007d1b:	lea    rsi,[rcx+0x168]
   140007d22:	mov    QWORD PTR [rsp+0x78],rsi
   140007d27:	mov    QWORD PTR [rsp+0xc8],rsi
   140007d2f:	mov    rcx,rsi
   140007d32:	call   QWORD PTR [rip+0x2a3d0]        # 0x140032108
   140007d38:	nop
   140007d39:	cmp    BYTE PTR [rdi+0xf0],bl
   140007d3f:	jne    0x140007e84
   140007d45:	cmp    QWORD PTR [rdi+0xf8],rbx
   140007d4c:	je     0x140007e96
   140007d52:	mov    BYTE PTR [rsp+0x61],bl
   140007d56:	mov    BYTE PTR [rsp+0x60],bl
   140007d5a:	xorps  xmm0,xmm0
   140007d5d:	movdqu XMMWORD PTR [rsp+0x80],xmm0
   140007d66:	mov    QWORD PTR [rsp+0x90],rbx
   140007d6e:	movdqu XMMWORD PTR [rsp+0xb0],xmm0
   140007d77:	mov    QWORD PTR [rsp+0xc0],rbx
   140007d7f:	movdqu XMMWORD PTR [rsp+0x98],xmm0
   140007d88:	mov    QWORD PTR [rsp+0xa8],rbx
   140007d90:	mov    DWORD PTR [rsp+0xf0],ebx
   140007d97:	xor    edx,edx
   140007d99:	lea    r8d,[rdx+0x40]
   140007d9d:	lea    rcx,[rsp+0xf4]
   140007da5:	call   0x14002e2ce
   140007daa:	nop
   140007dab:	lea    rax,[rsp+0x98]
   140007db3:	mov    QWORD PTR [rsp+0x58],rax
   140007db8:	lea    rax,[rsp+0xb0]
   140007dc0:	mov    QWORD PTR [rsp+0x50],rax
   140007dc5:	lea    rax,[rsp+0x80]
   140007dcd:	mov    QWORD PTR [rsp+0x48],rax
   140007dd2:	lea    rax,[rsp+0xf0]
   140007dda:	mov    QWORD PTR [rsp+0x40],rax
   140007ddf:	lea    rax,[rsp+0x60]
   140007de4:	mov    QWORD PTR [rsp+0x38],rax
   140007de9:	lea    rax,[rsp+0x61]
   140007dee:	mov    QWORD PTR [rsp+0x30],rax
   140007df3:	lea    rax,[rsp+0xd0]
   140007dfb:	mov    QWORD PTR [rsp+0x28],rax
   140007e00:	lea    rax,[rsp+0xd8]
   140007e08:	mov    QWORD PTR [rsp+0x20],rax
   140007e0d:	mov    r9b,BYTE PTR [rdi+0x100]
   140007e14:	xor    r8d,r8d
   140007e17:	mov    rdx,QWORD PTR [rdi+0xf8]
   140007e1e:	mov    rcx,rdi
   140007e21:	call   0x14000869c
   140007e26:	mov    BYTE PTR [rdi+0xf0],0x1
   140007e2d:	test   r14,r14
   140007e30:	je     0x140007e36
   140007e32:	mov    BYTE PTR [r14],0x1
   140007e36:	mov    edx,0x1
   140007e3b:	mov    ecx,0x13c
   140007e40:	call   QWORD PTR [rip+0x2a622]        # 0x140032468
   140007e46:	nop
   140007e47:	jmp    0x140007e55
   140007e49:	xor    ebx,ebx
   140007e4b:	mov    rdi,QWORD PTR [rsp+0x68]
   140007e50:	mov    rsi,QWORD PTR [rsp+0x78]
   140007e55:	lea    rcx,[rsp+0x98]
   140007e5d:	call   0x1400036e0
   140007e62:	nop
   140007e63:	mov    rcx,QWORD PTR [rsp+0xb0]
   140007e6b:	test   rcx,rcx
   140007e6e:	je     0x140007e77
   140007e70:	call   QWORD PTR [rip+0x2a752]        # 0x1400325c8
   140007e76:	nop
   140007e77:	lea    rcx,[rsp+0x80]
   140007e7f:	call   0x1400036e0
   140007e84:	cmp    QWORD PTR [rdi+0xf8],rbx
   140007e8b:	je     0x140007e96
   140007e8d:	mov    rcx,rdi
   140007e90:	call   0x140007c2c
   140007e95:	nop
   140007e96:	mov    rcx,rsi
   140007e99:	call   QWORD PTR [rip+0x2a259]        # 0x1400320f8
   140007e9f:	mov    rcx,QWORD PTR [rsp+0x140]
   140007ea7:	xor    rcx,rsp
   140007eaa:	call   0x14002dd00
   140007eaf:	mov    rbx,QWORD PTR [rsp+0x180]
   140007eb7:	add    rsp,0x150
   140007ebe:	pop    r14
   140007ec0:	pop    rdi
   140007ec1:	pop    rsi
   140007ec2:	ret    
   140007ec3:	int3   
   140007ec4:	int3   
   140007ec5:	int3   
   140007ec6:	int3   
   140007ec7:	int3   
   140007ec8:	int3   
   140007ec9:	int3   
   140007eca:	int3   
   140007ecb:	int3   
   140007ecc:	mov    QWORD PTR [rsp+0x18],rbx
   140007ed1:	push   rsi
   140007ed2:	push   rdi
   140007ed3:	push   r14
   140007ed5:	sub    rsp,0x50
   140007ed9:	mov    rax,QWORD PTR [rip+0x43140]        # 0x14004b020
   140007ee0:	xor    rax,rsp
   140007ee3:	mov    QWORD PTR [rsp+0x48],rax
   140007ee8:	mov    rsi,rdx
   140007eeb:	mov    rdi,rcx
   140007eee:	test   rdx,rdx
   140007ef1:	jne    0x140007f19
   140007ef3:	mov    rcx,QWORD PTR [rip+0x4317e]        # 0x14004b078
   140007efa:	lea    rax,[rip+0x43177]        # 0x14004b078
   140007f01:	cmp    rcx,rax
   140007f04:	je     0x140007ffd
   140007f0a:	test   BYTE PTR [rcx+0x1c],0x1
   140007f0e:	je     0x140007ffd
   140007f14:	jmp    0x140007fe1
   140007f19:	mov    rax,QWORD PTR [rdx]
   140007f1c:	mov    rbx,QWORD PTR [rax]
   140007f1f:	mov    rcx,rbx
   140007f22:	call   QWORD PTR [rip+0x2a780]        # 0x1400326a8
   140007f28:	mov    rcx,rsi
   140007f2b:	call   rbx
   140007f2d:	mov    r14,QWORD PTR [rdi+0x280]
   140007f34:	mov    QWORD PTR [rdi+0x280],rsi
   140007f3b:	test   r14,r14
   140007f3e:	je     0x140007f55
   140007f40:	mov    rax,QWORD PTR [r14]
   140007f43:	mov    rbx,QWORD PTR [rax+0x8]
   140007f47:	mov    rcx,rbx
   140007f4a:	call   QWORD PTR [rip+0x2a758]        # 0x1400326a8
   140007f50:	mov    rcx,r14
   140007f53:	call   rbx
   140007f55:	add    rdi,0x200
   140007f5c:	cmp    BYTE PTR [rdi+0x60],0x0
   140007f60:	jne    0x140008008
   140007f66:	mov    rax,QWORD PTR [rsi]
   140007f69:	mov    rbx,QWORD PTR [rax]
   140007f6c:	mov    rcx,rbx
   140007f6f:	call   QWORD PTR [rip+0x2a733]        # 0x1400326a8
   140007f75:	mov    rcx,rsi
   140007f78:	call   rbx
   140007f7a:	mov    r14,QWORD PTR [rdi+0x78]
   140007f7e:	mov    QWORD PTR [rdi+0x78],rsi
   140007f82:	test   r14,r14
   140007f85:	je     0x140007f9c
   140007f87:	mov    rax,QWORD PTR [r14]
   140007f8a:	mov    rbx,QWORD PTR [rax+0x8]
   140007f8e:	mov    rcx,rbx
   140007f91:	call   QWORD PTR [rip+0x2a711]        # 0x1400326a8
   140007f97:	mov    rcx,r14
   140007f9a:	call   rbx
   140007f9c:	lea    rcx,[rdi+0x28]
   140007fa0:	xor    edx,edx
   140007fa2:	and    DWORD PTR [rcx+0xc],0x0
   140007fa6:	call   QWORD PTR [rip+0x2a2c4]        # 0x140032270
   140007fac:	mov    edx,0x64
   140007fb1:	mov    BYTE PTR [rdi+0x60],0x1
   140007fb5:	mov    r8d,0x1388
   140007fbb:	mov    rcx,rdi
   140007fbe:	call   0x140015c4c
   140007fc3:	mov    rcx,QWORD PTR [rsp+0x48]
   140007fc8:	xor    rcx,rsp
   140007fcb:	call   0x14002dd00
   140007fd0:	mov    rbx,QWORD PTR [rsp+0x80]
   140007fd8:	add    rsp,0x50
   140007fdc:	pop    r14
   140007fde:	pop    rdi
   140007fdf:	pop    rsi
   140007fe0:	ret    
   140007fe1:	mov    rcx,QWORD PTR [rcx+0x10]
   140007fe5:	lea    r9,[rip+0x2d90c]        # 0x1400358f8
   140007fec:	mov    edx,0xa
   140007ff1:	lea    r8,[rip+0x2c3d8]        # 0x1400343d0
   140007ff8:	call   0x1400038e0
   140007ffd:	mov    ecx,0x80070057
   140008002:	call   0x140029d64
   140008007:	int3   
   140008008:	mov    edx,0x80070057
   14000800d:	lea    rcx,[rsp+0x20]
   140008012:	call   0x140002064
   140008017:	lea    rdx,[rip+0x4116a]        # 0x140049188
   14000801e:	lea    rcx,[rsp+0x20]
   140008023:	call   0x14002e2da
   140008028:	int3   
   140008029:	int3   
   14000802a:	int3   
   14000802b:	int3   
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	rex push rbx
   140008032:	sub    rsp,0x20
   140008036:	mov    r10,QWORD PTR [rsp+0x50]
   14000803b:	test   r10,r10
   14000803e:	jne    0x14000807b
   140008040:	mov    rcx,QWORD PTR [rip+0x43031]        # 0x14004b078
   140008047:	lea    rax,[rip+0x4302a]        # 0x14004b078
   14000804e:	cmp    rcx,rax
   140008051:	je     0x140008074
   140008053:	test   BYTE PTR [rcx+0x1c],0x1
   140008057:	je     0x140008074
   140008059:	mov    rcx,QWORD PTR [rcx+0x10]
   14000805d:	lea    edx,[r10+0xa]
   140008061:	lea    r9,[rip+0x2d910]        # 0x140035978
   140008068:	lea    r8,[rip+0x2c361]        # 0x1400343d0
   14000806f:	call   0x1400038e0
   140008074:	mov    eax,0x80070057
   140008079:	jmp    0x1400080c0
   14000807b:	sub    rcx,0xffffffffffffff80
   14000807f:	xor    r9d,r9d
   140008082:	call   0x140029ab0
   140008087:	mov    ebx,eax
   140008089:	test   eax,eax
   14000808b:	js     0x140008092
   14000808d:	mov    r9,rcx
   140008090:	xor    ebx,ebx
   140008092:	or     eax,0xffffffff
   140008095:	test   ebx,ebx
   140008097:	js     0x14000809f
   140008099:	mov    WORD PTR [r10],ax
   14000809d:	xor    ebx,ebx
   14000809f:	test   r9,r9
   1400080a2:	je     0x1400080be
   1400080a4:	mov    ecx,eax
   1400080a6:	lock xadd DWORD PTR [r9+0x8],ecx
   1400080ac:	add    ecx,eax
   1400080ae:	cmp    ecx,0x80000000
   1400080b4:	jne    0x1400080be
   1400080b6:	mov    rcx,r9
   1400080b9:	call   0x140029c90
   1400080be:	mov    eax,ebx
   1400080c0:	add    rsp,0x20
   1400080c4:	pop    rbx
   1400080c5:	ret    
   1400080c6:	int3   
   1400080c7:	int3   
   1400080c8:	int3   
   1400080c9:	int3   
   1400080ca:	int3   
   1400080cb:	int3   
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	int3   
   1400080d0:	mov    rax,rsp
   1400080d3:	mov    QWORD PTR [rax+0x8],rbx
   1400080d7:	mov    QWORD PTR [rax+0x10],rbp
   1400080db:	mov    QWORD PTR [rax+0x18],rsi
   1400080df:	mov    QWORD PTR [rax+0x20],rdi
   1400080e3:	push   r14
   1400080e5:	sub    rsp,0x20
   1400080e9:	xor    ebp,ebp
   1400080eb:	sub    rcx,0xffffffffffffff80
   1400080ef:	mov    ebx,ebp
   1400080f1:	mov    rsi,r8
   1400080f4:	mov    r14,rdx
   1400080f7:	call   0x140029ab0
   1400080fc:	mov    edi,eax
   1400080fe:	test   eax,eax
   140008100:	js     0x140008107
   140008102:	mov    rbx,rcx
   140008105:	mov    edi,ebp
   140008107:	test   edi,edi
   140008109:	js     0x140008189
   14000810b:	test   r14,r14
   14000810e:	je     0x14000814f
   140008110:	test   rsi,rsi
   140008113:	je     0x14000814f
   140008115:	test   r9,r9
   140008118:	je     0x14000814f
   14000811a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000811f:	test   rdi,rdi
   140008122:	je     0x14000814f
   140008124:	movups xmm0,XMMWORD PTR [rip+0x2e94d]        # 0x140036a78
   14000812b:	movdqu XMMWORD PTR [r9],xmm0
   140008130:	call   0x140016e54
   140008135:	mov    DWORD PTR [r14],eax
   140008138:	mov    DWORD PTR [rsi],0x2
   14000813e:	mov    DWORD PTR [rdi],0x80004
   140008144:	mov    DWORD PTR [rdi+0x4],0x2800
   14000814b:	mov    edi,ebp
   14000814d:	jmp    0x140008189
   14000814f:	mov    rcx,QWORD PTR [rip+0x42f22]        # 0x14004b078
   140008156:	lea    rax,[rip+0x42f1b]        # 0x14004b078
   14000815d:	cmp    rcx,rax
   140008160:	je     0x140008184
   140008162:	test   BYTE PTR [rcx+0x1c],0x1
   140008166:	je     0x140008184
   140008168:	mov    rcx,QWORD PTR [rcx+0x10]
   14000816c:	lea    r9,[rip+0x2d84d]        # 0x1400359c0
   140008173:	mov    edx,0xa
   140008178:	lea    r8,[rip+0x2c251]        # 0x1400343d0
   14000817f:	call   0x1400038e0
   140008184:	mov    edi,0x80070057
   140008189:	test   rbx,rbx
   14000818c:	je     0x1400081a8
   14000818e:	or     ecx,0xffffffff
   140008191:	lock xadd DWORD PTR [rbx+0x8],ecx
   140008196:	dec    ecx
   140008198:	cmp    ecx,0x80000000
   14000819e:	jne    0x1400081a8
   1400081a0:	mov    rcx,rbx
   1400081a3:	call   0x140029c90
   1400081a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081ad:	mov    eax,edi
   1400081af:	mov    rdi,QWORD PTR [rsp+0x48]
   1400081b4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400081b9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400081be:	add    rsp,0x20
   1400081c2:	pop    r14
   1400081c4:	ret    
   1400081c5:	int3   
   1400081c6:	int3   
   1400081c7:	int3   
   1400081c8:	int3   
   1400081c9:	int3   
   1400081ca:	int3   
   1400081cb:	int3   
   1400081cc:	int3   
   1400081cd:	int3   
   1400081ce:	int3   
   1400081cf:	int3   
   1400081d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400081d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400081da:	push   rdi
   1400081db:	sub    rsp,0x20
   1400081df:	mov    r9,rcx
   1400081e2:	mov    rsi,r8
   1400081e5:	sub    rcx,0xffffffffffffff80
   1400081e9:	mov    r10,rdx
   1400081ec:	xor    ebx,ebx
   1400081ee:	call   0x140029ab0
   1400081f3:	mov    edi,eax
   1400081f5:	test   eax,eax
   1400081f7:	js     0x1400081fe
   1400081f9:	mov    rbx,rcx
   1400081fc:	xor    edi,edi
   1400081fe:	test   edi,edi
   140008200:	js     0x140008278
   140008202:	test   rsi,rsi
   140008205:	jne    0x140008241
   140008207:	mov    rcx,QWORD PTR [rip+0x42e6a]        # 0x14004b078
   14000820e:	lea    rax,[rip+0x42e63]        # 0x14004b078
   140008215:	cmp    rcx,rax
   140008218:	je     0x14000823a
   14000821a:	test   BYTE PTR [rcx+0x1c],0x1
   14000821e:	je     0x14000823a
   140008220:	mov    rcx,QWORD PTR [rcx+0x10]
   140008224:	lea    edx,[rsi+0xa]
   140008227:	lea    r9,[rip+0x2d802]        # 0x140035a30
   14000822e:	lea    r8,[rip+0x2c19b]        # 0x1400343d0
   140008235:	call   0x1400038e0
   14000823a:	mov    edi,0x80070057
   14000823f:	jmp    0x140008278
   140008241:	mov    rdi,QWORD PTR [r9+0x40]
   140008245:	test   rdi,rdi
   140008248:	jne    0x140008251
   14000824a:	mov    edi,0x80004005
   14000824f:	jmp    0x140008278
   140008251:	mov    r8,r10
   140008254:	lea    rdx,[rsp+0x30]
   140008259:	lea    rcx,[rdi+0x20]
   14000825d:	call   0x140014aa4
   140008262:	mov    rax,QWORD PTR [rdi+0x20]
   140008266:	cmp    QWORD PTR [rsp+0x30],rax
   14000826b:	setne  al
   14000826e:	neg    al
   140008270:	sbb    ax,ax
   140008273:	mov    WORD PTR [rsi],ax
   140008276:	xor    edi,edi
   140008278:	test   rbx,rbx
   14000827b:	je     0x140008297
   14000827d:	or     ecx,0xffffffff
   140008280:	lock xadd DWORD PTR [rbx+0x8],ecx
   140008285:	dec    ecx
   140008287:	cmp    ecx,0x80000000
   14000828d:	jne    0x140008297
   14000828f:	mov    rcx,rbx
   140008292:	call   0x140029c90
   140008297:	mov    rbx,QWORD PTR [rsp+0x38]
   14000829c:	mov    eax,edi
   14000829e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400082a3:	add    rsp,0x20
   1400082a7:	pop    rdi
   1400082a8:	ret    
   1400082a9:	int3   
   1400082aa:	int3   
   1400082ab:	int3   
   1400082ac:	int3   
   1400082ad:	int3   
   1400082ae:	int3   
   1400082af:	int3   
   1400082b0:	mov    rax,rsp
   1400082b3:	push   rsi
   1400082b4:	push   rdi
   1400082b5:	push   r12
   1400082b7:	push   r14
   1400082b9:	push   r15
   1400082bb:	sub    rsp,0x60
   1400082bf:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   1400082c7:	mov    QWORD PTR [rax+0x10],rbx
   1400082cb:	mov    r14,r8
   1400082ce:	mov    r15,rdx
   1400082d1:	mov    r12,rcx
   1400082d4:	xor    ebx,ebx
   1400082d6:	mov    QWORD PTR [rax-0x58],rbx
   1400082da:	add    rcx,0x88
   1400082e1:	call   0x140029ab0
   1400082e6:	mov    edi,eax
   1400082e8:	test   eax,eax
   1400082ea:	js     0x1400082f6
   1400082ec:	mov    rbx,rcx
   1400082ef:	mov    QWORD PTR [rsp+0x30],rcx
   1400082f4:	xor    edi,edi
   1400082f6:	test   edi,edi
   1400082f8:	jns    0x140008322
   1400082fa:	test   rbx,rbx
   1400082fd:	je     0x14000831b
   1400082ff:	or     ecx,0xffffffff
   140008302:	lock xadd DWORD PTR [rbx+0x8],ecx
   140008307:	dec    ecx
   140008309:	cmp    ecx,0x80000000
   14000830f:	jne    0x14000831b
   140008311:	mov    rcx,QWORD PTR [rsp+0x30]
   140008316:	call   0x140029c90
   14000831b:	mov    eax,edi
   14000831d:	jmp    0x1400084eb
   140008322:	test   r15,r15
   140008325:	je     0x140008490
   14000832b:	test   r14,r14
   14000832e:	je     0x140008490
   140008334:	and    QWORD PTR [r14],0x0
   140008338:	and    QWORD PTR [rsp+0x38],0x0
   14000833e:	mov    rax,QWORD PTR [r15]
   140008341:	mov    rdi,QWORD PTR [rax+0x40]
   140008345:	mov    rcx,rdi
   140008348:	call   QWORD PTR [rip+0x2a35a]        # 0x1400326a8
   14000834e:	lea    rdx,[rsp+0x38]
   140008353:	mov    rcx,r15
   140008356:	call   rdi
   140008358:	test   eax,eax
   14000835a:	jns    0x140008363
   14000835c:	mov    ecx,eax
   14000835e:	call   0x140029d64
   140008363:	lea    r8,[rsp+0x90]
   14000836b:	mov    rdx,QWORD PTR [rsp+0x38]
   140008370:	lea    rcx,[r12-0x8]
   140008375:	call   0x140008508
   14000837a:	nop
   14000837b:	mov    rdi,QWORD PTR [rsp+0x38]
   140008380:	cmp    BYTE PTR [rsp+0x90],0x11
   140008388:	jne    0x1400083cc
   14000838a:	test   rdi,rdi
   14000838d:	je     0x1400083a5
   14000838f:	mov    rax,QWORD PTR [rdi]
   140008392:	mov    rsi,QWORD PTR [rax+0x8]
   140008396:	mov    rcx,rsi
   140008399:	call   QWORD PTR [rip+0x2a309]        # 0x1400326a8
   14000839f:	mov    rcx,rdi
   1400083a2:	call   rsi
   1400083a4:	nop
   1400083a5:	test   rbx,rbx
   1400083a8:	je     0x1400083c5
   1400083aa:	or     eax,0xffffffff
   1400083ad:	lock xadd DWORD PTR [rbx+0x8],eax
   1400083b2:	dec    eax
   1400083b4:	cmp    eax,0x80000000
   1400083b9:	jne    0x1400083c5
   1400083bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400083c0:	call   0x140029c90
   1400083c5:	xor    eax,eax
   1400083c7:	jmp    0x1400084eb
   1400083cc:	test   rdi,rdi
   1400083cf:	je     0x1400083e6
   1400083d1:	mov    rax,QWORD PTR [rdi]
   1400083d4:	mov    rsi,QWORD PTR [rax+0x8]
   1400083d8:	mov    rcx,rsi
   1400083db:	call   QWORD PTR [rip+0x2a2c7]        # 0x1400326a8
   1400083e1:	mov    rcx,rdi
   1400083e4:	call   rsi
   1400083e6:	and    QWORD PTR [rsp+0x40],0x0
   1400083ec:	lea    rax,[rsp+0x40]
   1400083f1:	mov    QWORD PTR [rsp+0x20],rax
   1400083f6:	mov    rdx,r15
   1400083f9:	lea    rcx,[r12-0x8]
   1400083fe:	call   0x1400209a0
   140008403:	mov    rax,QWORD PTR [rsp+0x40]
   140008408:	test   rax,rax
   14000840b:	jne    0x140008437
   14000840d:	test   rbx,rbx
   140008410:	je     0x14000842d
   140008412:	or     eax,0xffffffff
   140008415:	lock xadd DWORD PTR [rbx+0x8],eax
   14000841a:	dec    eax
   14000841c:	cmp    eax,0x80000000
   140008421:	jne    0x14000842d
   140008423:	mov    rcx,QWORD PTR [rsp+0x30]
   140008428:	call   0x140029c90
   14000842d:	mov    eax,0x1
   140008432:	jmp    0x1400084eb
   140008437:	mov    QWORD PTR [r14],rax
   14000843a:	test   rbx,rbx
   14000843d:	je     0x14000845a
   14000843f:	or     eax,0xffffffff
   140008442:	lock xadd DWORD PTR [rbx+0x8],eax
   140008447:	dec    eax
   140008449:	cmp    eax,0x80000000
   14000844e:	jne    0x14000845a
   140008450:	mov    rcx,QWORD PTR [rsp+0x30]
   140008455:	call   0x140029c90
   14000845a:	xor    eax,eax
   14000845c:	jmp    0x1400084eb
   140008461:	mov    rax,QWORD PTR [rsp+0x30]
   140008466:	test   rax,rax
   140008469:	je     0x140008487
   14000846b:	or     ecx,0xffffffff
   14000846e:	lock xadd DWORD PTR [rax+0x8],ecx
   140008473:	dec    ecx
   140008475:	cmp    ecx,0x80000000
   14000847b:	jne    0x140008487
   14000847d:	mov    rcx,QWORD PTR [rsp+0x30]
   140008482:	call   0x140029c90
   140008487:	mov    eax,DWORD PTR [rsp+0xa8]
   14000848e:	jmp    0x1400084eb
   140008490:	lea    rax,[rip+0x42be1]        # 0x14004b078
   140008497:	mov    rcx,QWORD PTR [rip+0x42bda]        # 0x14004b078
   14000849e:	cmp    rcx,rax
   1400084a1:	je     0x1400084c6
   1400084a3:	test   BYTE PTR [rcx+0x1c],0x1
   1400084a7:	je     0x1400084c6
   1400084a9:	mov    edx,0xa
   1400084ae:	lea    r9,[rip+0x2d5bb]        # 0x140035a70
   1400084b5:	lea    r8,[rip+0x2bf14]        # 0x1400343d0
   1400084bc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400084c0:	call   0x1400038e0
   1400084c5:	nop
   1400084c6:	test   rbx,rbx
   1400084c9:	je     0x1400084e6
   1400084cb:	or     eax,0xffffffff
   1400084ce:	lock xadd DWORD PTR [rbx+0x8],eax
   1400084d3:	dec    eax
   1400084d5:	cmp    eax,0x80000000
   1400084da:	jne    0x1400084e6
   1400084dc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400084e1:	call   0x140029c90
   1400084e6:	mov    eax,0x80070057
   1400084eb:	mov    rbx,QWORD PTR [rsp+0x98]
   1400084f3:	add    rsp,0x60
   1400084f7:	pop    r15
   1400084f9:	pop    r14
   1400084fb:	pop    r12
   1400084fd:	pop    rdi
   1400084fe:	pop    rsi
   1400084ff:	ret    
   140008500:	int3   
   140008501:	int3   
   140008502:	int3   
   140008503:	int3   
   140008504:	int3   
   140008505:	int3   
   140008506:	int3   
   140008507:	int3   
   140008508:	rex push rbp
   14000850a:	push   rbx
   14000850b:	push   rsi
   14000850c:	push   rdi
   14000850d:	push   r14
   14000850f:	mov    rbp,rsp
   140008512:	sub    rsp,0x80
   140008519:	mov    rax,QWORD PTR [rip+0x42b00]        # 0x14004b020
   140008520:	xor    rax,rsp
   140008523:	mov    QWORD PTR [rbp-0x10],rax
   140008527:	mov    rsi,r8
   14000852a:	mov    rdi,rdx
   14000852d:	mov    r14,rcx
   140008530:	test   r8,r8
   140008533:	je     0x140008539
   140008535:	mov    BYTE PTR [r8],0x6
   140008539:	mov    DWORD PTR [rbp-0x48],0x2d02
   140008540:	call   0x14002b158
   140008545:	mov    QWORD PTR [rbp-0x44],rax
   140008549:	mov    rax,QWORD PTR [rdi]
   14000854c:	mov    rbx,QWORD PTR [rax+0x38]
   140008550:	mov    rcx,rbx
   140008553:	call   QWORD PTR [rip+0x2a14f]        # 0x1400326a8
   140008559:	mov    r8d,0x10
   14000855f:	lea    rdx,[rbp-0x3c]
   140008563:	mov    rcx,rdi
   140008566:	call   rbx
   140008568:	test   eax,eax
   14000856a:	js     0x14000865d
   140008570:	mov    rax,QWORD PTR [rdi]
   140008573:	mov    rbx,QWORD PTR [rax+0x20]
   140008577:	mov    rcx,rbx
   14000857a:	call   QWORD PTR [rip+0x2a128]        # 0x1400326a8
   140008580:	mov    r8d,0x10
   140008586:	lea    rdx,[rbp-0x2c]
   14000858a:	mov    rcx,rdi
   14000858d:	call   rbx
   14000858f:	test   eax,eax
   140008591:	js     0x140008665
   140008597:	mov    rax,QWORD PTR [rdi]
   14000859a:	mov    rbx,QWORD PTR [rax+0x50]
   14000859e:	mov    rcx,rbx
   1400085a1:	call   QWORD PTR [rip+0x2a101]        # 0x1400326a8
   1400085a7:	lea    rdx,[rbp-0x18]
   1400085ab:	mov    rcx,rdi
   1400085ae:	call   rbx
   1400085b0:	test   eax,eax
   1400085b2:	js     0x14000866d
   1400085b8:	mov    rax,QWORD PTR [rdi]
   1400085bb:	mov    rbx,QWORD PTR [rax+0x40]
   1400085bf:	mov    rcx,rbx
   1400085c2:	call   QWORD PTR [rip+0x2a0e0]        # 0x1400326a8
   1400085c8:	lea    rdx,[rbp-0x1c]
   1400085cc:	mov    rcx,rdi
   1400085cf:	call   rbx
   1400085d1:	test   eax,eax
   1400085d3:	js     0x140008675
   1400085d9:	mov    rax,QWORD PTR [rdi]
   1400085dc:	mov    rbx,QWORD PTR [rax+0x28]
   1400085e0:	mov    rcx,rbx
   1400085e3:	call   QWORD PTR [rip+0x2a0bf]        # 0x1400326a8
   1400085e9:	lea    rdx,[rbp-0x1a]
   1400085ed:	mov    rcx,rdi
   1400085f0:	call   rbx
   1400085f2:	test   eax,eax
   1400085f4:	js     0x14000867d
   1400085fa:	test   rsi,rsi
   1400085fd:	je     0x140008604
   1400085ff:	mov    al,BYTE PTR [rbp-0x18]
   140008602:	mov    BYTE PTR [rsi],al
   140008604:	mov    rax,QWORD PTR [rdi]
   140008607:	and    DWORD PTR [rbp-0x50],0x0
   14000860b:	mov    rbx,QWORD PTR [rax+0x60]
   14000860f:	mov    rcx,rbx
   140008612:	call   QWORD PTR [rip+0x2a090]        # 0x1400326a8
   140008618:	lea    rdx,[rbp-0x50]
   14000861c:	mov    rcx,rdi
   14000861f:	call   rbx
   140008621:	test   eax,eax
   140008623:	js     0x140008685
   140008625:	mov    r8d,DWORD PTR [rbp-0x50]
   140008629:	lea    r9,[rbp-0x48]
   14000862d:	xor    edx,edx
   14000862f:	mov    DWORD PTR [rsp+0x20],0x31
   140008637:	mov    rcx,r14
   14000863a:	call   0x14000bf60
   14000863f:	test   eax,eax
   140008641:	js     0x14000868d
   140008643:	mov    rcx,QWORD PTR [rbp-0x10]
   140008647:	xor    rcx,rsp
   14000864a:	call   0x14002dd00
   14000864f:	add    rsp,0x80
   140008656:	pop    r14
   140008658:	pop    rdi
   140008659:	pop    rsi
   14000865a:	pop    rbx
   14000865b:	pop    rbp
   14000865c:	ret    
   14000865d:	mov    ecx,eax
   14000865f:	call   0x140029d64
   140008664:	int3   
   140008665:	mov    ecx,eax
   140008667:	call   0x140029d64
   14000866c:	int3   
   14000866d:	mov    ecx,eax
   14000866f:	call   0x140029d64
   140008674:	int3   
   140008675:	mov    ecx,eax
   140008677:	call   0x140029d64
   14000867c:	int3   
   14000867d:	mov    ecx,eax
   14000867f:	call   0x140029d64
   140008684:	int3   
   140008685:	mov    ecx,eax
   140008687:	call   0x140029d64
   14000868c:	int3   
   14000868d:	mov    ecx,eax
   14000868f:	call   0x140029d64
   140008694:	int3   
   140008695:	int3   
   140008696:	int3   
   140008697:	int3   
   140008698:	int3   
   140008699:	int3   
   14000869a:	int3   
   14000869b:	int3   
   14000869c:	rex push rbx
   14000869e:	push   rsi
   14000869f:	push   rdi
   1400086a0:	push   r13
   1400086a2:	push   r14
   1400086a4:	push   r15
   1400086a6:	sub    rsp,0x1b8
   1400086ad:	mov    QWORD PTR [rsp+0x128],0xfffffffffffffffe
   1400086b9:	mov    rax,QWORD PTR [rip+0x42960]        # 0x14004b020
   1400086c0:	xor    rax,rsp
   1400086c3:	mov    QWORD PTR [rsp+0x1a0],rax
   1400086cb:	mov    BYTE PTR [rsp+0x60],r9b
   1400086d0:	mov    BYTE PTR [rsp+0x61],r8b
   1400086d5:	mov    rbx,rdx
   1400086d8:	mov    rsi,rcx
   1400086db:	mov    QWORD PTR [rsp+0xb8],rcx
   1400086e3:	mov    r15,QWORD PTR [rsp+0x210]
   1400086eb:	mov    QWORD PTR [rsp+0xf8],r15
   1400086f3:	mov    r13,QWORD PTR [rsp+0x218]
   1400086fb:	mov    QWORD PTR [rsp+0xe8],r13
   140008703:	mov    r10,QWORD PTR [rsp+0x220]
   14000870b:	mov    QWORD PTR [rsp+0xc8],r10
   140008713:	mov    r9,QWORD PTR [rsp+0x228]
   14000871b:	mov    QWORD PTR [rsp+0xe0],r9
   140008723:	mov    rax,QWORD PTR [rsp+0x230]
   14000872b:	mov    QWORD PTR [rsp+0xd8],rax
   140008733:	mov    rax,QWORD PTR [rsp+0x238]
   14000873b:	mov    QWORD PTR [rsp+0x100],rax
   140008743:	mov    rax,QWORD PTR [rsp+0x240]
   14000874b:	mov    QWORD PTR [rsp+0x108],rax
   140008753:	mov    rax,QWORD PTR [rsp+0x248]
   14000875b:	mov    QWORD PTR [rsp+0xf0],rax
   140008763:	add    rcx,0x90
   14000876a:	mov    QWORD PTR [rsp+0x90],rcx
   140008772:	call   0x140029ab0
   140008777:	xor    r14d,r14d
   14000877a:	test   eax,eax
   14000877c:	jns    0x140008786
   14000877e:	mov    ecx,eax
   140008780:	call   0x140029d64
   140008785:	nop
   140008786:	test   rbx,rbx
   140008789:	je     0x140008e56
   14000878f:	test   r15,r15
   140008792:	je     0x140008e56
   140008798:	test   r13,r13
   14000879b:	je     0x140008e56
   1400087a1:	test   r10,r10
   1400087a4:	je     0x140008e56
   1400087aa:	test   r9,r9
   1400087ad:	je     0x140008e56
   1400087b3:	mov    QWORD PTR [r13+0x0],r14
   1400087b7:	mov    QWORD PTR [r15],r14
   1400087ba:	lea    rax,[rsi+0x130]
   1400087c1:	mov    QWORD PTR [rsp+0xc0],rax
   1400087c9:	mov    QWORD PTR [rsp+0x140],rax
   1400087d1:	mov    rcx,rax
   1400087d4:	call   QWORD PTR [rip+0x2992e]        # 0x140032108
   1400087da:	nop
   1400087db:	test   BYTE PTR [rip+0x477de],0x1        # 0x14004ffc0
   1400087e2:	je     0x1400087f7
   1400087e4:	lea    r8,[rip+0x2b9dd]        # 0x1400341c8
   1400087eb:	lea    rdx,[rip+0x2bb9e]        # 0x140034390
   1400087f2:	call   0x140003818
   1400087f7:	cmp    r14w,WORD PTR [rbx]
   1400087fb:	jne    0x140008852
   1400087fd:	lea    r13,[rip+0x42874]        # 0x14004b078
   140008804:	mov    rcx,QWORD PTR [rip+0x4286d]        # 0x14004b078
   14000880b:	cmp    rcx,r13
   14000880e:	je     0x14000882b
   140008810:	test   BYTE PTR [rcx+0x1c],0x1
   140008814:	je     0x14000882b
   140008816:	mov    edx,0xe
   14000881b:	lea    r8,[rip+0x2e2c6]        # 0x140036ae8
   140008822:	mov    rcx,QWORD PTR [rcx+0x10]
   140008826:	call   0x140001f08
   14000882b:	mov    edx,0x80070057
   140008830:	lea    rcx,[rsp+0x150]
   140008838:	call   0x140002064
   14000883d:	lea    rdx,[rip+0x40944]        # 0x140049188
   140008844:	lea    rcx,[rsp+0x150]
   14000884c:	call   0x14002e2da
   140008851:	int3   
   140008852:	mov    ecx,0x18
   140008857:	call   0x140023f10
   14000885c:	mov    rdi,rax
   14000885f:	mov    QWORD PTR [rsp+0xd0],rax
   140008867:	mov    QWORD PTR [rax+0x8],r14
   14000886b:	mov    DWORD PTR [rax+0x10],0x1
   140008872:	mov    rcx,rbx
   140008875:	call   QWORD PTR [rip+0x29ae5]        # 0x140032360
   14000887b:	mov    QWORD PTR [rdi],rax
   14000887e:	test   rax,rax
   140008881:	jne    0x140008889
   140008883:	call   0x14000203c
   140008888:	nop
   140008889:	mov    QWORD PTR [rsp+0x68],rdi
   14000888e:	call   0x140025df8
   140008893:	test   al,al
   140008895:	jne    0x140008979
   14000889b:	mov    QWORD PTR [rsp+0xd0],r14
   1400088a3:	lea    rax,[rsp+0xd0]
   1400088ab:	mov    QWORD PTR [rsp+0x110],rax
   1400088b3:	mov    QWORD PTR [rsp+0xa0],r14
   1400088bb:	lea    rdx,[rsp+0xa0]
   1400088c3:	lea    rcx,[rip+0x2d27e]        # 0x140035b48
   1400088ca:	call   0x140029890
   1400088cf:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400088d7:	test   eax,eax
   1400088d9:	js     0x14000896b
   1400088df:	test   rbx,rbx
   1400088e2:	je     0x14000896b
   1400088e8:	or     eax,0xffffffff
   1400088eb:	lock xadd DWORD PTR [rdi+0x10],eax
   1400088f0:	cmp    eax,0x1
   1400088f3:	jne    0x140008922
   1400088f5:	mov    rcx,QWORD PTR [rdi]
   1400088f8:	test   rcx,rcx
   1400088fb:	je     0x140008906
   1400088fd:	call   QWORD PTR [rip+0x29a4d]        # 0x140032350
   140008903:	mov    QWORD PTR [rdi],r14
   140008906:	mov    rcx,QWORD PTR [rdi+0x8]
   14000890a:	test   rcx,rcx
   14000890d:	je     0x140008919
   14000890f:	call   QWORD PTR [rip+0x29cb3]        # 0x1400325c8
   140008915:	mov    QWORD PTR [rdi+0x8],r14
   140008919:	mov    rcx,rdi
   14000891c:	call   QWORD PTR [rip+0x29ca6]        # 0x1400325c8
   140008922:	mov    QWORD PTR [rsp+0x68],r14
   140008927:	mov    ecx,0x18
   14000892c:	call   0x140023f10
   140008931:	mov    rdi,rax
   140008934:	mov    QWORD PTR [rsp+0x80],rax
   14000893c:	mov    QWORD PTR [rax+0x8],r14
   140008940:	mov    DWORD PTR [rax+0x10],0x1
   140008947:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000894f:	mov    rcx,rbx
   140008952:	call   QWORD PTR [rip+0x29a08]        # 0x140032360
   140008958:	mov    QWORD PTR [rdi],rax
   14000895b:	test   rax,rax
   14000895e:	jne    0x140008966
   140008960:	call   0x14000203c
   140008965:	nop
   140008966:	mov    QWORD PTR [rsp+0x68],rdi
   14000896b:	test   rbx,rbx
   14000896e:	je     0x140008979
   140008970:	mov    rcx,rbx
   140008973:	call   QWORD PTR [rip+0x29acf]        # 0x140032448
   140008979:	lea    rdx,[rsp+0x68]
   14000897e:	lea    rcx,[rsp+0x98]
   140008986:	call   0x14000bb34
   14000898b:	nop
   14000898c:	lea    rdx,[rsp+0x68]
   140008991:	lea    rcx,[rsp+0x70]
   140008996:	call   0x14000bbdc
   14000899b:	nop
   14000899c:	mov    QWORD PTR [rsp+0x78],r14
   1400089a1:	mov    QWORD PTR [rsp+0x80],r14
   1400089a9:	lea    rax,[rsp+0x80]
   1400089b1:	mov    QWORD PTR [rsp+0x20],rax
   1400089b6:	lea    r9,[rsp+0x78]
   1400089bb:	lea    r8,[rsp+0x70]
   1400089c0:	lea    rdx,[rsp+0x98]
   1400089c8:	mov    rcx,rsi
   1400089cb:	call   0x14000b39c
   1400089d0:	nop
   1400089d1:	or     QWORD PTR [rsp+0xa8],0xffffffffffffffff
   1400089da:	mov    rax,QWORD PTR [rsp+0x70]
   1400089df:	test   rax,rax
   1400089e2:	je     0x1400089e9
   1400089e4:	mov    rcx,QWORD PTR [rax]
   1400089e7:	jmp    0x1400089ec
   1400089e9:	mov    rcx,r14
   1400089ec:	lea    rdx,[rsp+0xa8]
   1400089f4:	call   0x140026154
   1400089f9:	mov    ebx,eax
   1400089fb:	test   eax,eax
   1400089fd:	jns    0x140008a63
   1400089ff:	lea    r13,[rip+0x42672]        # 0x14004b078
   140008a06:	mov    r10,QWORD PTR [rip+0x4266b]        # 0x14004b078
   140008a0d:	cmp    r10,r13
   140008a10:	je     0x140008a3f
   140008a12:	test   BYTE PTR [r10+0x1c],0x1
   140008a17:	je     0x140008a3f
   140008a19:	lea    rcx,[rsp+0x70]
   140008a1e:	call   0x14000de18
   140008a23:	mov    r9,rax
   140008a26:	mov    edx,0x10
   140008a2b:	mov    DWORD PTR [rsp+0x20],ebx
   140008a2f:	lea    r8,[rip+0x2e0b2]        # 0x140036ae8
   140008a36:	mov    rcx,QWORD PTR [r10+0x10]
   140008a3a:	call   0x140007264
   140008a3f:	mov    edx,ebx
   140008a41:	lea    rcx,[rsp+0x178]
   140008a49:	call   0x140002064
   140008a4e:	lea    rdx,[rip+0x40733]        # 0x140049188
   140008a55:	lea    rcx,[rsp+0x178]
   140008a5d:	call   0x14002e2da
   140008a62:	int3   
   140008a63:	mov    QWORD PTR [rsp+0x88],r14
   140008a6b:	mov    rax,QWORD PTR [rsp+0x98]
   140008a73:	test   rax,rax
   140008a76:	je     0x140008a7d
   140008a78:	mov    rdx,QWORD PTR [rax]
   140008a7b:	jmp    0x140008a80
   140008a7d:	mov    rdx,r14
   140008a80:	lea    r8,[rsp+0x88]
   140008a88:	mov    rcx,rsi
   140008a8b:	call   0x14000aa74
   140008a90:	mov    r14,QWORD PTR [rsp+0xa8]
   140008a98:	or     QWORD PTR [rsp+0xa8],0xffffffffffffffff
   140008aa1:	mov    rbx,QWORD PTR [rsp+0x88]
   140008aa9:	mov    rcx,QWORD PTR [rbx+0x118]
   140008ab0:	cmp    rcx,0xffffffffffffffff
   140008ab4:	je     0x140008ac4
   140008ab6:	call   QWORD PTR [rip+0x2969c]        # 0x140032158
   140008abc:	or     QWORD PTR [rbx+0x118],0xffffffffffffffff
   140008ac4:	mov    QWORD PTR [rbx+0x118],r14
   140008acb:	and    QWORD PTR [rsp+0xb0],0x0
   140008ad4:	test   rdi,rdi
   140008ad7:	je     0x140008ade
   140008ad9:	mov    r8,QWORD PTR [rdi]
   140008adc:	jmp    0x140008ae1
   140008ade:	xor    r8d,r8d
   140008ae1:	lea    r9,[rsp+0xb0]
   140008ae9:	mov    rdx,QWORD PTR [rbx+0x18]
   140008aed:	mov    rcx,rsi
   140008af0:	call   0x14000a83c
   140008af5:	mov    rax,QWORD PTR [rsp+0xf0]
   140008afd:	mov    QWORD PTR [rsp+0x50],rax
   140008b02:	mov    rax,QWORD PTR [rsp+0x108]
   140008b0a:	mov    QWORD PTR [rsp+0x48],rax
   140008b0f:	mov    rax,QWORD PTR [rsp+0x100]
   140008b17:	mov    QWORD PTR [rsp+0x40],rax
   140008b1c:	mov    rax,QWORD PTR [rsp+0xd8]
   140008b24:	mov    QWORD PTR [rsp+0x38],rax
   140008b29:	mov    rax,QWORD PTR [rsp+0xe0]
   140008b31:	mov    QWORD PTR [rsp+0x30],rax
   140008b36:	mov    rax,QWORD PTR [rsp+0xc8]
   140008b3e:	mov    QWORD PTR [rsp+0x28],rax
   140008b43:	mov    QWORD PTR [rsp+0x20],rbx
   140008b48:	mov    r9b,BYTE PTR [rsp+0x60]
   140008b4d:	mov    r8b,BYTE PTR [rsp+0x61]
   140008b52:	mov    rdi,QWORD PTR [rsp+0xb0]
   140008b5a:	mov    rdx,rdi
   140008b5d:	mov    rcx,rsi
   140008b60:	call   0x140009720
   140008b65:	mov    r8,QWORD PTR [rsp+0x78]
   140008b6a:	mov    QWORD PTR [r15],r8
   140008b6d:	mov    r14,QWORD PTR [rsp+0x80]
   140008b75:	mov    QWORD PTR [r13+0x0],r14
   140008b79:	lea    r13,[rip+0x424f8]        # 0x14004b078
   140008b80:	mov    rcx,QWORD PTR [rip+0x424f1]        # 0x14004b078
   140008b87:	cmp    rcx,r13
   140008b8a:	je     0x140008c09
   140008b8c:	test   BYTE PTR [rcx+0x1c],0x4
   140008b90:	je     0x140008c09
   140008b92:	mov    r15,r14
   140008b95:	shr    r15,0x20
   140008b99:	mov    r9,r8
   140008b9c:	shr    r9,0x20
   140008ba0:	movzx  esi,r14w
   140008ba4:	shr    r14d,0x10
   140008ba8:	movzx  r11d,r15w
   140008bac:	shr    r15d,0x10
   140008bb0:	movzx  r8d,r8w
   140008bb4:	mov    r10,QWORD PTR [rsp+0x78]
   140008bb9:	shr    r10d,0x10
   140008bbd:	movzx  eax,r9w
   140008bc1:	shr    r9d,0x10
   140008bc5:	mov    edx,0x11
   140008bca:	mov    DWORD PTR [rsp+0x50],esi
   140008bce:	mov    DWORD PTR [rsp+0x48],r14d
   140008bd3:	mov    DWORD PTR [rsp+0x40],r11d
   140008bd8:	mov    DWORD PTR [rsp+0x38],r15d
   140008bdd:	mov    DWORD PTR [rsp+0x30],r8d
   140008be2:	mov    DWORD PTR [rsp+0x28],r10d
   140008be7:	mov    DWORD PTR [rsp+0x20],eax
   140008beb:	mov    rcx,QWORD PTR [rcx+0x10]
   140008bef:	call   0x1400070b0
   140008bf4:	mov    rsi,QWORD PTR [rsp+0xb8]
   140008bfc:	mov    r8,QWORD PTR [rsp+0x78]
   140008c01:	mov    r14,QWORD PTR [rsp+0x80]
   140008c09:	mov    r10,r14
   140008c0c:	shr    r10,0x20
   140008c10:	mov    r11,r8
   140008c13:	shr    r11,0x20
   140008c17:	movzx  edx,r14w
   140008c1b:	shr    r14d,0x10
   140008c1f:	movzx  ecx,r10w
   140008c23:	shr    r10d,0x10
   140008c27:	movzx  eax,r8w
   140008c2b:	shr    r8d,0x10
   140008c2f:	mov    QWORD PTR [rsp+0xb8],r8
   140008c37:	movzx  r8d,r11w
   140008c3b:	shr    r11d,0x10
   140008c3f:	mov    DWORD PTR [rsp+0x40],edx
   140008c43:	mov    DWORD PTR [rsp+0x38],r14d
   140008c48:	mov    DWORD PTR [rsp+0x30],ecx
   140008c4c:	mov    DWORD PTR [rsp+0x28],r10d
   140008c51:	mov    DWORD PTR [rsp+0x20],eax
   140008c55:	mov    r9,QWORD PTR [rsp+0xb8]
   140008c5d:	mov    edx,r11d
   140008c60:	lea    rcx,[rip+0x2cfa9]        # 0x140035c10
   140008c67:	call   QWORD PTR [rip+0x296c3]        # 0x140032330
   140008c6d:	mov    rax,QWORD PTR [rsp+0xc8]
   140008c75:	cmp    BYTE PTR [rax],0x0
   140008c78:	jne    0x140008c8b
   140008c7a:	mov    rax,QWORD PTR [rsp+0xe0]
   140008c82:	cmp    BYTE PTR [rax],0x0
   140008c85:	je     0x140008d31
   140008c8b:	lea    r14,[rsi+0x60]
   140008c8f:	mov    QWORD PTR [rsp+0x148],r14
   140008c97:	mov    rcx,r14
   140008c9a:	call   QWORD PTR [rip+0x29468]        # 0x140032108
   140008ca0:	nop
   140008ca1:	lea    r15,[rsi+0x108]
   140008ca8:	mov    QWORD PTR [rsp+0x118],r15
   140008cb0:	mov    rcx,r15
   140008cb3:	call   QWORD PTR [rip+0x2944f]        # 0x140032108
   140008cb9:	nop
   140008cba:	lea    rdi,[rsi+0xd0]
   140008cc1:	lea    rax,[rdi+0x18]
   140008cc5:	mov    QWORD PTR [rsp+0x130],rax
   140008ccd:	mov    ecx,0x18
   140008cd2:	call   0x140023f10
   140008cd7:	mov    QWORD PTR [rax+0x10],rbx
   140008cdb:	and    QWORD PTR [rsp+0x138],0x0
   140008ce4:	mov    rcx,QWORD PTR [rdi+0x8]
   140008ce8:	mov    QWORD PTR [rax],rdi
   140008ceb:	mov    QWORD PTR [rax+0x8],rcx
   140008cef:	mov    QWORD PTR [rcx],rax
   140008cf2:	mov    QWORD PTR [rdi+0x8],rax
   140008cf6:	inc    QWORD PTR [rdi+0x10]
   140008cfa:	mov    eax,DWORD PTR [rbx+0x8]
   140008cfd:	test   eax,eax
   140008cff:	jne    0x140008d0a
   140008d01:	mov    DWORD PTR [rbx+0x8],0x1
   140008d08:	jmp    0x140008d0e
   140008d0a:	lock inc DWORD PTR [rbx+0x8]
   140008d0e:	mov    rcx,r15
   140008d11:	call   QWORD PTR [rip+0x293e1]        # 0x1400320f8
   140008d17:	nop
   140008d18:	mov    rcx,r14
   140008d1b:	call   QWORD PTR [rip+0x293d7]        # 0x1400320f8
   140008d21:	mov    rbx,QWORD PTR [rsp+0x88]
   140008d29:	mov    rdi,QWORD PTR [rsp+0xb0]
   140008d31:	lea    rcx,[rsi+0x200]
   140008d38:	mov    rax,QWORD PTR [rsp+0xd8]
   140008d40:	mov    r8d,DWORD PTR [rax]
   140008d43:	mov    edx,DWORD PTR [rax+0x4]
   140008d46:	call   0x140015c4c
   140008d4b:	call   0x140017164
   140008d50:	mov    edx,eax
   140008d52:	lea    rcx,[rsi+0x190]
   140008d59:	call   0x140015338
   140008d5e:	call   0x140016d98
   140008d63:	mov    rdx,rax
   140008d66:	mov    rcx,rsi
   140008d69:	call   0x14000b71c
   140008d6e:	mov    rcx,QWORD PTR [rip+0x42303]        # 0x14004b078
   140008d75:	cmp    rcx,r13
   140008d78:	je     0x140008d9d
   140008d7a:	test   BYTE PTR [rcx+0x1c],0x4
   140008d7e:	je     0x140008d9d
   140008d80:	mov    edx,0x12
   140008d85:	mov    r9d,DWORD PTR [rsi+0xe0]
   140008d8c:	lea    r8,[rip+0x2dd55]        # 0x140036ae8
   140008d93:	mov    rcx,QWORD PTR [rcx+0x10]
   140008d97:	call   0x140001f70
   140008d9c:	nop
   140008d9d:	test   rdi,rdi
   140008da0:	je     0x140008db8
   140008da2:	mov    rax,QWORD PTR [rdi]
   140008da5:	mov    rsi,QWORD PTR [rax+0x10]
   140008da9:	mov    rcx,rsi
   140008dac:	call   QWORD PTR [rip+0x298f6]        # 0x1400326a8
   140008db2:	mov    rcx,rdi
   140008db5:	call   rsi
   140008db7:	nop
   140008db8:	mov    eax,DWORD PTR [rbx+0x8]
   140008dbb:	cmp    eax,0x1
   140008dbe:	jne    0x140008dc9
   140008dc0:	mov    DWORD PTR [rbx+0x8],0x0
   140008dc7:	jmp    0x140008dd6
   140008dc9:	or     eax,0xffffffff
   140008dcc:	lock xadd DWORD PTR [rbx+0x8],eax
   140008dd1:	sub    eax,0x1
   140008dd4:	jg     0x140008df8
   140008dd6:	mov    rbx,QWORD PTR [rsp+0x88]
   140008dde:	mov    rax,QWORD PTR [rbx]
   140008de1:	mov    rdi,QWORD PTR [rax]
   140008de4:	mov    rcx,rdi
   140008de7:	call   QWORD PTR [rip+0x298bb]        # 0x1400326a8
   140008ded:	mov    edx,0x1
   140008df2:	mov    rcx,rbx
   140008df5:	call   rdi
   140008df7:	nop
   140008df8:	jmp    0x140008dfa
   140008dfa:	lea    rcx,[rsp+0x70]
   140008dff:	call   0x14000de2c
   140008e04:	nop
   140008e05:	lea    rcx,[rsp+0x98]
   140008e0d:	call   0x14000de2c
   140008e12:	nop
   140008e13:	lea    rcx,[rsp+0x68]
   140008e18:	call   0x14000de2c
   140008e1d:	nop
   140008e1e:	mov    rcx,QWORD PTR [rsp+0xc0]
   140008e26:	call   QWORD PTR [rip+0x292cc]        # 0x1400320f8
   140008e2c:	nop
   140008e2d:	mov    rax,QWORD PTR [rsp+0x90]
   140008e35:	or     ecx,0xffffffff
   140008e38:	lock xadd DWORD PTR [rax+0x8],ecx
   140008e3d:	dec    ecx
   140008e3f:	cmp    ecx,0x80000000
   140008e45:	jne    0x140008e96
   140008e47:	mov    rcx,QWORD PTR [rsp+0x90]
   140008e4f:	call   0x140029c90
   140008e54:	jmp    0x140008e96
   140008e56:	lea    r13,[rip+0x4221b]        # 0x14004b078
   140008e5d:	mov    rcx,QWORD PTR [rip+0x42214]        # 0x14004b078
   140008e64:	cmp    rcx,r13
   140008e67:	je     0x140008e8b
   140008e69:	test   BYTE PTR [rcx+0x1c],0x1
   140008e6d:	je     0x140008e8b
   140008e6f:	mov    edx,0xa
   140008e74:	lea    r9,[rip+0x2cc55]        # 0x140035ad0
   140008e7b:	lea    r8,[rip+0x2b54e]        # 0x1400343d0
   140008e82:	mov    rcx,QWORD PTR [rcx+0x10]
   140008e86:	call   0x1400038e0
   140008e8b:	mov    ecx,0x80070057
   140008e90:	call   0x140029d64
   140008e95:	nop
   140008e96:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140008e9e:	xor    rcx,rsp
   140008ea1:	call   0x14002dd00
   140008ea6:	add    rsp,0x1b8
   140008ead:	pop    r15
   140008eaf:	pop    r14
   140008eb1:	pop    r13
   140008eb3:	pop    rdi
   140008eb4:	pop    rsi
   140008eb5:	pop    rbx
   140008eb6:	ret    
   140008eb7:	int3   
   140008eb8:	int3   
   140008eb9:	int3   
   140008eba:	int3   
   140008ebb:	int3   
   140008ebc:	int3   
   140008ebd:	int3   
   140008ebe:	int3   
   140008ebf:	int3   
   140008ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ec5:	push   rdi
   140008ec6:	sub    rsp,0x80
   140008ecd:	mov    rbx,rdx
   140008ed0:	mov    rcx,QWORD PTR [rip+0x421a1]        # 0x14004b078
   140008ed7:	lea    rdi,[rip+0x4219a]        # 0x14004b078
   140008ede:	cmp    rcx,rdi
   140008ee1:	je     0x140008fa1
   140008ee7:	test   BYTE PTR [rcx+0x1c],0x2
   140008eeb:	je     0x140008f5f
   140008eed:	mov    eax,DWORD PTR [rbx+0x24]
   140008ef0:	movzx  edx,BYTE PTR [rdx+0x3f]
   140008ef4:	movzx  r8d,BYTE PTR [rbx+0x40]
   140008ef9:	movzx  r10d,BYTE PTR [rbx+0x3e]
   140008efe:	movzx  r11d,BYTE PTR [rbx+0x3d]
   140008f03:	movzx  r9d,BYTE PTR [rbx+0x3c]
   140008f08:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f0c:	mov    DWORD PTR [rsp+0x78],eax
   140008f10:	mov    eax,DWORD PTR [rbx+0x20]
   140008f13:	mov    DWORD PTR [rsp+0x70],eax
   140008f17:	mov    eax,DWORD PTR [rbx+0x1c]
   140008f1a:	mov    DWORD PTR [rsp+0x68],eax
   140008f1e:	mov    eax,DWORD PTR [rbx+0x18]
   140008f21:	mov    DWORD PTR [rsp+0x60],eax
   140008f25:	mov    eax,DWORD PTR [rbx+0xc]
   140008f28:	mov    DWORD PTR [rsp+0x58],edx
   140008f2c:	mov    DWORD PTR [rsp+0x50],eax
   140008f30:	mov    eax,DWORD PTR [rbx+0x8]
   140008f33:	mov    DWORD PTR [rsp+0x48],eax
   140008f37:	mov    eax,DWORD PTR [rbx+0x4]
   140008f3a:	mov    DWORD PTR [rsp+0x40],r8d
   140008f3f:	mov    DWORD PTR [rsp+0x38],eax
   140008f43:	mov    eax,DWORD PTR [rbx]
   140008f45:	mov    DWORD PTR [rsp+0x30],eax
   140008f49:	mov    DWORD PTR [rsp+0x28],r10d
   140008f4e:	mov    DWORD PTR [rsp+0x20],r11d
   140008f53:	call   0x1400075a0
   140008f58:	mov    rcx,QWORD PTR [rip+0x42119]        # 0x14004b078
   140008f5f:	cmp    rcx,rdi
   140008f62:	je     0x140008fa1
   140008f64:	test   BYTE PTR [rcx+0x1c],0x2
   140008f68:	je     0x140008fa1
   140008f6a:	mov    eax,DWORD PTR [rbx+0x38]
   140008f6d:	mov    r9d,DWORD PTR [rbx+0x10]
   140008f71:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f75:	mov    DWORD PTR [rsp+0x48],eax
   140008f79:	mov    eax,DWORD PTR [rbx+0x34]
   140008f7c:	mov    DWORD PTR [rsp+0x40],eax
   140008f80:	mov    eax,DWORD PTR [rbx+0x30]
   140008f83:	mov    DWORD PTR [rsp+0x38],eax
   140008f87:	mov    eax,DWORD PTR [rbx+0x2c]
   140008f8a:	mov    DWORD PTR [rsp+0x30],eax
   140008f8e:	mov    eax,DWORD PTR [rbx+0x28]
   140008f91:	mov    DWORD PTR [rsp+0x28],eax
   140008f95:	mov    eax,DWORD PTR [rbx+0x14]
   140008f98:	mov    DWORD PTR [rsp+0x20],eax
   140008f9c:	call   0x140007150
   140008fa1:	mov    rbx,QWORD PTR [rsp+0x90]
   140008fa9:	add    rsp,0x80
   140008fb0:	pop    rdi
   140008fb1:	ret    
   140008fb2:	int3   
   140008fb3:	int3   
   140008fb4:	int3   
   140008fb5:	int3   
   140008fb6:	int3   
   140008fb7:	int3   
   140008fb8:	mov    QWORD PTR [rsp+0x10],rbx
   140008fbd:	mov    QWORD PTR [rsp+0x8],rcx
   140008fc2:	push   rbp
   140008fc3:	push   rsi
   140008fc4:	push   rdi
   140008fc5:	push   r12
   140008fc7:	push   r13
   140008fc9:	push   r14
   140008fcb:	push   r15
   140008fcd:	mov    rbp,rsp
   140008fd0:	sub    rsp,0x20
   140008fd4:	xor    esi,esi
   140008fd6:	mov    rdi,rdx
   140008fd9:	mov    DWORD PTR [rbp+0x40],esi
   140008fdc:	mov    DWORD PTR [rbp+0x50],esi
   140008fdf:	call   QWORD PTR [rip+0x2946b]        # 0x140032450
   140008fe5:	mov    rbx,QWORD PTR [rax+0xa0]
   140008fec:	mov    rcx,rbx
   140008fef:	call   QWORD PTR [rip+0x296b3]        # 0x1400326a8
   140008ff5:	lea    r8,[rbp+0x50]
   140008ff9:	xor    edx,edx
   140008ffb:	lea    rcx,[rip+0x2cc9e]        # 0x140035ca0
   140009002:	call   rbx
   140009004:	cmp    DWORD PTR [rbp+0x50],esi
   140009007:	lea    r12,[rip+0x4206a]        # 0x14004b078
   14000900e:	mov    ebx,esi
   140009010:	lea    r13,[rip+0x2dad1]        # 0x140036ae8
   140009017:	setne  bl
   14000901a:	lea    r14d,[rsi+0x1]
   14000901e:	mov    r15b,0x2
   140009021:	test   eax,eax
   140009023:	js     0x140009054
   140009025:	cmp    eax,r14d
   140009028:	je     0x140009054
   14000902a:	mov    rcx,QWORD PTR [rip+0x42047]        # 0x14004b078
   140009031:	cmp    rcx,r12
   140009034:	je     0x14000904b
   140009036:	test   BYTE PTR [rcx+0x1c],r15b
   14000903a:	je     0x14000904b
   14000903c:	mov    rcx,QWORD PTR [rcx+0x10]
   140009040:	lea    edx,[rsi+0x15]
   140009043:	mov    r8,r13
   140009046:	call   0x140001f08
   14000904b:	cmp    ebx,r14d
   14000904e:	sete   al
   140009051:	mov    BYTE PTR [rdi+0x3c],al
   140009054:	mov    DWORD PTR [rbp+0x50],esi
   140009057:	call   QWORD PTR [rip+0x293f3]        # 0x140032450
   14000905d:	mov    rbx,QWORD PTR [rax+0xa0]
   140009064:	mov    rcx,rbx
   140009067:	call   QWORD PTR [rip+0x2963b]        # 0x1400326a8
   14000906d:	lea    r8,[rbp+0x50]
   140009071:	xor    edx,edx
   140009073:	lea    rcx,[rip+0x2cc76]        # 0x140035cf0
   14000907a:	call   rbx
   14000907c:	cmp    DWORD PTR [rbp+0x50],esi
   14000907f:	mov    ebx,esi
   140009081:	setne  bl
   140009084:	test   eax,eax
   140009086:	js     0x1400090b9
   140009088:	cmp    eax,r14d
   14000908b:	je     0x1400090b9
   14000908d:	mov    rcx,QWORD PTR [rip+0x41fe4]        # 0x14004b078
   140009094:	cmp    rcx,r12
   140009097:	je     0x1400090b0
   140009099:	test   BYTE PTR [rcx+0x1c],r15b
   14000909d:	je     0x1400090b0
   14000909f:	mov    rcx,QWORD PTR [rcx+0x10]
   1400090a3:	mov    edx,0x16
   1400090a8:	mov    r8,r13
   1400090ab:	call   0x140001f08
   1400090b0:	cmp    ebx,r14d
   1400090b3:	sete   al
   1400090b6:	mov    BYTE PTR [rdi+0x3d],al
   1400090b9:	mov    DWORD PTR [rbp+0x50],esi
   1400090bc:	call   QWORD PTR [rip+0x2938e]        # 0x140032450
   1400090c2:	mov    rbx,QWORD PTR [rax+0xa0]
   1400090c9:	mov    rcx,rbx
   1400090cc:	call   QWORD PTR [rip+0x295d6]        # 0x1400326a8
   1400090d2:	lea    r8,[rbp+0x50]
   1400090d6:	xor    edx,edx
   1400090d8:	lea    rcx,[rip+0x2cc81]        # 0x140035d60
   1400090df:	call   rbx
   1400090e1:	cmp    DWORD PTR [rbp+0x50],esi
   1400090e4:	mov    ebx,esi
   1400090e6:	setne  bl
   1400090e9:	test   eax,eax
   1400090eb:	js     0x14000911e
   1400090ed:	cmp    eax,r14d
   1400090f0:	je     0x14000911e
   1400090f2:	mov    rcx,QWORD PTR [rip+0x41f7f]        # 0x14004b078
   1400090f9:	cmp    rcx,r12
   1400090fc:	je     0x140009115
   1400090fe:	test   BYTE PTR [rcx+0x1c],r15b
   140009102:	je     0x140009115
   140009104:	mov    rcx,QWORD PTR [rcx+0x10]
   140009108:	mov    edx,0x17
   14000910d:	mov    r8,r13
   140009110:	call   0x140001f08
   140009115:	cmp    ebx,r14d
   140009118:	sete   al
   14000911b:	mov    BYTE PTR [rdi+0x3e],al
   14000911e:	call   QWORD PTR [rip+0x2932c]        # 0x140032450
   140009124:	mov    rbx,QWORD PTR [rax+0xa0]
   14000912b:	mov    rcx,rbx
   14000912e:	call   QWORD PTR [rip+0x29574]        # 0x1400326a8
   140009134:	lea    r8,[rbp+0x40]
   140009138:	xor    edx,edx
   14000913a:	lea    rcx,[rip+0x2cc9f]        # 0x140035de0
   140009141:	call   rbx
   140009143:	test   eax,eax
   140009145:	js     0x140009174
   140009147:	cmp    eax,r14d
   14000914a:	je     0x140009174
   14000914c:	mov    rcx,QWORD PTR [rip+0x41f25]        # 0x14004b078
   140009153:	cmp    rcx,r12
   140009156:	je     0x14000916f
   140009158:	test   BYTE PTR [rcx+0x1c],r15b
   14000915c:	je     0x14000916f
   14000915e:	mov    rcx,QWORD PTR [rcx+0x10]
   140009162:	mov    edx,0x18
   140009167:	mov    r8,r13
   14000916a:	call   0x140001f08
   14000916f:	mov    eax,DWORD PTR [rbp+0x40]
   140009172:	mov    DWORD PTR [rdi],eax
   140009174:	call   QWORD PTR [rip+0x292d6]        # 0x140032450
   14000917a:	mov    rbx,QWORD PTR [rax+0xa0]
   140009181:	mov    rcx,rbx
   140009184:	call   QWORD PTR [rip+0x2951e]        # 0x1400326a8
   14000918a:	lea    r8,[rbp+0x40]
   14000918e:	xor    edx,edx
   140009190:	lea    rcx,[rip+0x2ccb9]        # 0x140035e50
   140009197:	call   rbx
   140009199:	test   eax,eax
   14000919b:	js     0x1400091cb
   14000919d:	cmp    eax,r14d
   1400091a0:	je     0x1400091cb
   1400091a2:	mov    rcx,QWORD PTR [rip+0x41ecf]        # 0x14004b078
   1400091a9:	cmp    rcx,r12
   1400091ac:	je     0x1400091c5
   1400091ae:	test   BYTE PTR [rcx+0x1c],r15b
   1400091b2:	je     0x1400091c5
   1400091b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400091b8:	mov    edx,0x19
   1400091bd:	mov    r8,r13
   1400091c0:	call   0x140001f08
   1400091c5:	mov    eax,DWORD PTR [rbp+0x40]
   1400091c8:	mov    DWORD PTR [rdi+0x4],eax
   1400091cb:	call   QWORD PTR [rip+0x2927f]        # 0x140032450
   1400091d1:	mov    rbx,QWORD PTR [rax+0xa0]
   1400091d8:	mov    rcx,rbx
   1400091db:	call   QWORD PTR [rip+0x294c7]        # 0x1400326a8
   1400091e1:	lea    r8,[rbp+0x40]
   1400091e5:	xor    edx,edx
   1400091e7:	lea    rcx,[rip+0x2ccc2]        # 0x140035eb0
   1400091ee:	call   rbx
   1400091f0:	test   eax,eax
   1400091f2:	js     0x140009222
   1400091f4:	cmp    eax,r14d
   1400091f7:	je     0x140009222
   1400091f9:	mov    rcx,QWORD PTR [rip+0x41e78]        # 0x14004b078
   140009200:	cmp    rcx,r12
   140009203:	je     0x14000921c
   140009205:	test   BYTE PTR [rcx+0x1c],r15b
   140009209:	je     0x14000921c
   14000920b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000920f:	mov    edx,0x1a
   140009214:	mov    r8,r13
   140009217:	call   0x140001f08
   14000921c:	mov    eax,DWORD PTR [rbp+0x40]
   14000921f:	mov    DWORD PTR [rdi+0x8],eax
   140009222:	call   QWORD PTR [rip+0x29228]        # 0x140032450
   140009228:	mov    rbx,QWORD PTR [rax+0xa0]
   14000922f:	mov    rcx,rbx
   140009232:	call   QWORD PTR [rip+0x29470]        # 0x1400326a8
   140009238:	lea    r8,[rbp+0x40]
   14000923c:	xor    edx,edx
   14000923e:	lea    rcx,[rip+0x2cccb]        # 0x140035f10
   140009245:	call   rbx
   140009247:	test   eax,eax
   140009249:	js     0x140009279
   14000924b:	cmp    eax,r14d
   14000924e:	je     0x140009279
   140009250:	mov    rcx,QWORD PTR [rip+0x41e21]        # 0x14004b078
   140009257:	cmp    rcx,r12
   14000925a:	je     0x140009273
   14000925c:	test   BYTE PTR [rcx+0x1c],r15b
   140009260:	je     0x140009273
   140009262:	mov    rcx,QWORD PTR [rcx+0x10]
   140009266:	mov    edx,0x1b
   14000926b:	mov    r8,r13
   14000926e:	call   0x140001f08
   140009273:	mov    eax,DWORD PTR [rbp+0x40]
   140009276:	mov    DWORD PTR [rdi+0xc],eax
   140009279:	mov    DWORD PTR [rbp+0x50],esi
   14000927c:	call   QWORD PTR [rip+0x291ce]        # 0x140032450
   140009282:	mov    rbx,QWORD PTR [rax+0xa0]
   140009289:	mov    rcx,rbx
   14000928c:	call   QWORD PTR [rip+0x29416]        # 0x1400326a8
   140009292:	lea    r8,[rbp+0x50]
   140009296:	xor    edx,edx
   140009298:	lea    rcx,[rip+0x2ccd1]        # 0x140035f70
   14000929f:	call   rbx
   1400092a1:	cmp    DWORD PTR [rbp+0x50],esi
   1400092a4:	mov    ebx,esi
   1400092a6:	setne  bl
   1400092a9:	test   eax,eax
   1400092ab:	js     0x1400092de
   1400092ad:	cmp    eax,r14d
   1400092b0:	je     0x1400092de
   1400092b2:	mov    rcx,QWORD PTR [rip+0x41dbf]        # 0x14004b078
   1400092b9:	cmp    rcx,r12
   1400092bc:	je     0x1400092d5
   1400092be:	test   BYTE PTR [rcx+0x1c],r15b
   1400092c2:	je     0x1400092d5
   1400092c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400092c8:	mov    edx,0x1c
   1400092cd:	mov    r8,r13
   1400092d0:	call   0x140001f08
   1400092d5:	cmp    ebx,r14d
   1400092d8:	sete   al
   1400092db:	mov    BYTE PTR [rdi+0x40],al
   1400092de:	mov    DWORD PTR [rbp+0x50],esi
   1400092e1:	call   QWORD PTR [rip+0x29169]        # 0x140032450
   1400092e7:	mov    rbx,QWORD PTR [rax+0xa0]
   1400092ee:	mov    rcx,rbx
   1400092f1:	call   QWORD PTR [rip+0x293b1]        # 0x1400326a8
   1400092f7:	lea    r8,[rbp+0x50]
   1400092fb:	xor    edx,edx
   1400092fd:	lea    rcx,[rip+0x2ccdc]        # 0x140035fe0
   140009304:	call   rbx
   140009306:	cmp    DWORD PTR [rbp+0x50],esi
   140009309:	setne  sil
   14000930d:	test   eax,eax
   14000930f:	js     0x140009342
   140009311:	cmp    eax,r14d
   140009314:	je     0x140009342
   140009316:	mov    rcx,QWORD PTR [rip+0x41d5b]        # 0x14004b078
   14000931d:	cmp    rcx,r12
   140009320:	je     0x140009339
   140009322:	test   BYTE PTR [rcx+0x1c],r15b
   140009326:	je     0x140009339
   140009328:	mov    rcx,QWORD PTR [rcx+0x10]
   14000932c:	mov    edx,0x1d
   140009331:	mov    r8,r13
   140009334:	call   0x140001f08
   140009339:	cmp    esi,r14d
   14000933c:	sete   al
   14000933f:	mov    BYTE PTR [rdi+0x3f],al
   140009342:	call   QWORD PTR [rip+0x29108]        # 0x140032450
   140009348:	mov    rbx,QWORD PTR [rax+0xa0]
   14000934f:	mov    rcx,rbx
   140009352:	call   QWORD PTR [rip+0x29350]        # 0x1400326a8
   140009358:	lea    r8,[rbp+0x40]
   14000935c:	xor    edx,edx
   14000935e:	lea    rcx,[rip+0x2cceb]        # 0x140036050
   140009365:	call   rbx
   140009367:	mov    esi,0x80000000
   14000936c:	test   esi,eax
   14000936e:	jne    0x14000939e
   140009370:	cmp    eax,r14d
   140009373:	je     0x14000939e
   140009375:	mov    rcx,QWORD PTR [rip+0x41cfc]        # 0x14004b078
   14000937c:	cmp    rcx,r12
   14000937f:	je     0x140009398
   140009381:	test   BYTE PTR [rcx+0x1c],r15b
   140009385:	je     0x140009398
   140009387:	mov    rcx,QWORD PTR [rcx+0x10]
   14000938b:	mov    edx,0x1e
   140009390:	mov    r8,r13
   140009393:	call   0x140001f08
   140009398:	mov    eax,DWORD PTR [rbp+0x40]
   14000939b:	mov    DWORD PTR [rdi+0x10],eax
   14000939e:	call   QWORD PTR [rip+0x290ac]        # 0x140032450
   1400093a4:	mov    rbx,QWORD PTR [rax+0xa0]
   1400093ab:	mov    rcx,rbx
   1400093ae:	call   QWORD PTR [rip+0x292f4]        # 0x1400326a8
   1400093b4:	lea    r8,[rbp+0x40]
   1400093b8:	xor    edx,edx
   1400093ba:	lea    rcx,[rip+0x2ccef]        # 0x1400360b0
   1400093c1:	call   rbx
   1400093c3:	test   esi,eax
   1400093c5:	jne    0x1400093f5
   1400093c7:	cmp    eax,r14d
   1400093ca:	je     0x1400093f5
   1400093cc:	mov    rcx,QWORD PTR [rip+0x41ca5]        # 0x14004b078
   1400093d3:	cmp    rcx,r12
   1400093d6:	je     0x1400093ef
   1400093d8:	test   BYTE PTR [rcx+0x1c],r15b
   1400093dc:	je     0x1400093ef
   1400093de:	mov    rcx,QWORD PTR [rcx+0x10]
   1400093e2:	mov    edx,0x1f
   1400093e7:	mov    r8,r13
   1400093ea:	call   0x140001f08
   1400093ef:	mov    eax,DWORD PTR [rbp+0x40]
   1400093f2:	mov    DWORD PTR [rdi+0x18],eax
   1400093f5:	call   QWORD PTR [rip+0x29055]        # 0x140032450
   1400093fb:	mov    rbx,QWORD PTR [rax+0xa0]
   140009402:	mov    rcx,rbx
   140009405:	call   QWORD PTR [rip+0x2929d]        # 0x1400326a8
   14000940b:	lea    r8,[rbp+0x40]
   14000940f:	xor    edx,edx
   140009411:	lea    rcx,[rip+0x2cce8]        # 0x140036100
   140009418:	call   rbx
   14000941a:	test   esi,eax
   14000941c:	jne    0x14000944c
   14000941e:	cmp    eax,r14d
   140009421:	je     0x14000944c
   140009423:	mov    rcx,QWORD PTR [rip+0x41c4e]        # 0x14004b078
   14000942a:	cmp    rcx,r12
   14000942d:	je     0x140009446
   14000942f:	test   BYTE PTR [rcx+0x1c],r15b
   140009433:	je     0x140009446
   140009435:	mov    rcx,QWORD PTR [rcx+0x10]
   140009439:	mov    edx,0x20
   14000943e:	mov    r8,r13
   140009441:	call   0x140001f08
   140009446:	mov    eax,DWORD PTR [rbp+0x40]
   140009449:	mov    DWORD PTR [rdi+0x1c],eax
   14000944c:	call   QWORD PTR [rip+0x28ffe]        # 0x140032450
   140009452:	mov    rbx,QWORD PTR [rax+0xa0]
   140009459:	mov    rcx,rbx
   14000945c:	call   QWORD PTR [rip+0x29246]        # 0x1400326a8
   140009462:	lea    r8,[rbp+0x40]
   140009466:	xor    edx,edx
   140009468:	lea    rcx,[rip+0x2cce1]        # 0x140036150
   14000946f:	call   rbx
   140009471:	test   esi,eax
   140009473:	jne    0x1400094a3
   140009475:	cmp    eax,r14d
   140009478:	je     0x1400094a3
   14000947a:	mov    rcx,QWORD PTR [rip+0x41bf7]        # 0x14004b078
   140009481:	cmp    rcx,r12
   140009484:	je     0x14000949d
   140009486:	test   BYTE PTR [rcx+0x1c],r15b
   14000948a:	je     0x14000949d
   14000948c:	mov    rcx,QWORD PTR [rcx+0x10]
   140009490:	mov    edx,0x21
   140009495:	mov    r8,r13
   140009498:	call   0x140001f08
   14000949d:	mov    eax,DWORD PTR [rbp+0x40]
   1400094a0:	mov    DWORD PTR [rdi+0x20],eax
   1400094a3:	call   QWORD PTR [rip+0x28fa7]        # 0x140032450
   1400094a9:	mov    rbx,QWORD PTR [rax+0xa0]
   1400094b0:	mov    rcx,rbx
   1400094b3:	call   QWORD PTR [rip+0x291ef]        # 0x1400326a8
   1400094b9:	lea    r8,[rbp+0x40]
   1400094bd:	xor    edx,edx
   1400094bf:	lea    rcx,[rip+0x2ccda]        # 0x1400361a0
   1400094c6:	call   rbx
   1400094c8:	test   esi,eax
   1400094ca:	jne    0x1400094fa
   1400094cc:	cmp    eax,r14d
   1400094cf:	je     0x1400094fa
   1400094d1:	mov    rcx,QWORD PTR [rip+0x41ba0]        # 0x14004b078
   1400094d8:	cmp    rcx,r12
   1400094db:	je     0x1400094f4
   1400094dd:	test   BYTE PTR [rcx+0x1c],r15b
   1400094e1:	je     0x1400094f4
   1400094e3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400094e7:	mov    edx,0x22
   1400094ec:	mov    r8,r13
   1400094ef:	call   0x140001f08
   1400094f4:	mov    eax,DWORD PTR [rbp+0x40]
   1400094f7:	mov    DWORD PTR [rdi+0x24],eax
   1400094fa:	call   QWORD PTR [rip+0x28f50]        # 0x140032450
   140009500:	mov    rbx,QWORD PTR [rax+0xa0]
   140009507:	mov    rcx,rbx
   14000950a:	call   QWORD PTR [rip+0x29198]        # 0x1400326a8
   140009510:	lea    r8,[rbp+0x40]
   140009514:	xor    edx,edx
   140009516:	lea    rcx,[rip+0x2ccd3]        # 0x1400361f0
   14000951d:	call   rbx
   14000951f:	test   esi,eax
   140009521:	jne    0x140009551
   140009523:	cmp    eax,r14d
   140009526:	je     0x140009551
   140009528:	mov    rcx,QWORD PTR [rip+0x41b49]        # 0x14004b078
   14000952f:	cmp    rcx,r12
   140009532:	je     0x14000954b
   140009534:	test   BYTE PTR [rcx+0x1c],r15b
   140009538:	je     0x14000954b
   14000953a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000953e:	mov    edx,0x23
   140009543:	mov    r8,r13
   140009546:	call   0x140001f08
   14000954b:	mov    eax,DWORD PTR [rbp+0x40]
   14000954e:	mov    DWORD PTR [rdi+0x14],eax
   140009551:	call   QWORD PTR [rip+0x28ef9]        # 0x140032450
   140009557:	mov    rbx,QWORD PTR [rax+0xa0]
   14000955e:	mov    rcx,rbx
   140009561:	call   QWORD PTR [rip+0x29141]        # 0x1400326a8
   140009567:	lea    r8,[rbp+0x40]
   14000956b:	xor    edx,edx
   14000956d:	lea    rcx,[rip+0x2ccdc]        # 0x140036250
   140009574:	call   rbx
   140009576:	test   esi,eax
   140009578:	jne    0x1400095a8
   14000957a:	cmp    eax,r14d
   14000957d:	je     0x1400095a8
   14000957f:	mov    rcx,QWORD PTR [rip+0x41af2]        # 0x14004b078
   140009586:	cmp    rcx,r12
   140009589:	je     0x1400095a2
   14000958b:	test   BYTE PTR [rcx+0x1c],r15b
   14000958f:	je     0x1400095a2
   140009591:	mov    rcx,QWORD PTR [rcx+0x10]
   140009595:	mov    edx,0x24
   14000959a:	mov    r8,r13
   14000959d:	call   0x140001f08
   1400095a2:	mov    eax,DWORD PTR [rbp+0x40]
   1400095a5:	mov    DWORD PTR [rdi+0x28],eax
   1400095a8:	call   QWORD PTR [rip+0x28ea2]        # 0x140032450
   1400095ae:	mov    rbx,QWORD PTR [rax+0xa0]
   1400095b5:	mov    rcx,rbx
   1400095b8:	call   QWORD PTR [rip+0x290ea]        # 0x1400326a8
   1400095be:	lea    r8,[rbp+0x40]
   1400095c2:	xor    edx,edx
   1400095c4:	lea    rcx,[rip+0x2cce5]        # 0x1400362b0
   1400095cb:	call   rbx
   1400095cd:	test   esi,eax
   1400095cf:	jne    0x1400095ff
   1400095d1:	cmp    eax,r14d
   1400095d4:	je     0x1400095ff
   1400095d6:	mov    rcx,QWORD PTR [rip+0x41a9b]        # 0x14004b078
   1400095dd:	cmp    rcx,r12
   1400095e0:	je     0x1400095f9
   1400095e2:	test   BYTE PTR [rcx+0x1c],r15b
   1400095e6:	je     0x1400095f9
   1400095e8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400095ec:	mov    edx,0x25
   1400095f1:	mov    r8,r13
   1400095f4:	call   0x140001f08
   1400095f9:	mov    eax,DWORD PTR [rbp+0x40]
   1400095fc:	mov    DWORD PTR [rdi+0x2c],eax
   1400095ff:	call   QWORD PTR [rip+0x28e4b]        # 0x140032450
   140009605:	mov    rbx,QWORD PTR [rax+0xa0]
   14000960c:	mov    rcx,rbx
   14000960f:	call   QWORD PTR [rip+0x29093]        # 0x1400326a8
   140009615:	lea    r8,[rbp+0x40]
   140009619:	xor    edx,edx
   14000961b:	lea    rcx,[rip+0x2ccfe]        # 0x140036320
   140009622:	call   rbx
   140009624:	test   esi,eax
   140009626:	jne    0x140009656
   140009628:	cmp    eax,r14d
   14000962b:	je     0x140009656
   14000962d:	mov    rcx,QWORD PTR [rip+0x41a44]        # 0x14004b078
   140009634:	cmp    rcx,r12
   140009637:	je     0x140009650
   140009639:	test   BYTE PTR [rcx+0x1c],r15b
   14000963d:	je     0x140009650
   14000963f:	mov    rcx,QWORD PTR [rcx+0x10]
   140009643:	mov    edx,0x26
   140009648:	mov    r8,r13
   14000964b:	call   0x140001f08
   140009650:	mov    eax,DWORD PTR [rbp+0x40]
   140009653:	mov    DWORD PTR [rdi+0x30],eax
   140009656:	call   QWORD PTR [rip+0x28df4]        # 0x140032450
   14000965c:	mov    rbx,QWORD PTR [rax+0xa0]
   140009663:	mov    rcx,rbx
   140009666:	call   QWORD PTR [rip+0x2903c]        # 0x1400326a8
   14000966c:	lea    r8,[rbp+0x40]
   140009670:	xor    edx,edx
   140009672:	lea    rcx,[rip+0x2cd27]        # 0x1400363a0
   140009679:	call   rbx
   14000967b:	test   esi,eax
   14000967d:	jne    0x1400096ad
   14000967f:	cmp    eax,r14d
   140009682:	je     0x1400096ad
   140009684:	mov    rcx,QWORD PTR [rip+0x419ed]        # 0x14004b078
   14000968b:	cmp    rcx,r12
   14000968e:	je     0x1400096a7
   140009690:	test   BYTE PTR [rcx+0x1c],r15b
   140009694:	je     0x1400096a7
   140009696:	mov    rcx,QWORD PTR [rcx+0x10]
   14000969a:	mov    edx,0x27
   14000969f:	mov    r8,r13
   1400096a2:	call   0x140001f08
   1400096a7:	mov    eax,DWORD PTR [rbp+0x40]
   1400096aa:	mov    DWORD PTR [rdi+0x34],eax
   1400096ad:	call   QWORD PTR [rip+0x28d9d]        # 0x140032450
   1400096b3:	mov    rbx,QWORD PTR [rax+0xa0]
   1400096ba:	mov    rcx,rbx
   1400096bd:	call   QWORD PTR [rip+0x28fe5]        # 0x1400326a8
   1400096c3:	lea    r8,[rbp+0x40]
   1400096c7:	xor    edx,edx
   1400096c9:	lea    rcx,[rip+0x2cd50]        # 0x140036420
   1400096d0:	call   rbx
   1400096d2:	test   esi,eax
   1400096d4:	jne    0x140009704
   1400096d6:	cmp    eax,r14d
   1400096d9:	je     0x140009704
   1400096db:	mov    rcx,QWORD PTR [rip+0x41996]        # 0x14004b078
   1400096e2:	cmp    rcx,r12
   1400096e5:	je     0x1400096fe
   1400096e7:	test   BYTE PTR [rcx+0x1c],r15b
   1400096eb:	je     0x1400096fe
   1400096ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400096f1:	mov    edx,0x28
   1400096f6:	mov    r8,r13
   1400096f9:	call   0x140001f08
   1400096fe:	mov    eax,DWORD PTR [rbp+0x40]
   140009701:	mov    DWORD PTR [rdi+0x38],eax
   140009704:	mov    rbx,QWORD PTR [rsp+0x68]
   140009709:	add    rsp,0x20
   14000970d:	pop    r15
   14000970f:	pop    r14
   140009711:	pop    r13
   140009713:	pop    r12
   140009715:	pop    rdi
   140009716:	pop    rsi
   140009717:	pop    rbp
   140009718:	ret    
   140009719:	int3   
   14000971a:	int3   
   14000971b:	int3   
   14000971c:	int3   
   14000971d:	int3   
   14000971e:	int3   
   14000971f:	int3   
   140009720:	rex push rbx
   140009722:	push   rsi
   140009723:	push   rdi
   140009724:	push   r12
   140009726:	push   r13
   140009728:	push   r14
   14000972a:	push   r15
   14000972c:	sub    rsp,0x2c0
   140009733:	mov    QWORD PTR [rsp+0x1b0],0xfffffffffffffffe
   14000973f:	mov    rax,QWORD PTR [rip+0x418da]        # 0x14004b020
   140009746:	xor    rax,rsp
   140009749:	mov    QWORD PTR [rsp+0x2b8],rax
   140009751:	mov    BYTE PTR [rsp+0x38],r9b
   140009756:	mov    sil,r8b
   140009759:	mov    BYTE PTR [rsp+0x34],r8b
   14000975e:	mov    rdi,rdx
   140009761:	mov    QWORD PTR [rsp+0xf8],rdx
   140009769:	mov    rax,rcx
   14000976c:	mov    QWORD PTR [rsp+0x108],rcx
   140009774:	mov    QWORD PTR [rsp+0x168],rcx
   14000977c:	mov    r12,QWORD PTR [rsp+0x320]
   140009784:	mov    QWORD PTR [rsp+0x170],r12
   14000978c:	mov    r9,QWORD PTR [rsp+0x328]
   140009794:	mov    QWORD PTR [rsp+0x150],r9
   14000979c:	mov    r10,QWORD PTR [rsp+0x330]
   1400097a4:	mov    QWORD PTR [rsp+0x198],r10
   1400097ac:	mov    r13,QWORD PTR [rsp+0x338]
   1400097b4:	mov    QWORD PTR [rsp+0x130],r13
   1400097bc:	mov    rcx,QWORD PTR [rsp+0x340]
   1400097c4:	mov    QWORD PTR [rsp+0x178],rcx
   1400097cc:	mov    QWORD PTR [rsp+0x140],rcx
   1400097d4:	mov    rcx,QWORD PTR [rsp+0x348]
   1400097dc:	mov    QWORD PTR [rsp+0x120],rcx
   1400097e4:	mov    QWORD PTR [rsp+0x100],rcx
   1400097ec:	mov    rcx,QWORD PTR [rsp+0x350]
   1400097f4:	mov    QWORD PTR [rsp+0x188],rcx
   1400097fc:	mov    QWORD PTR [rsp+0x98],rcx
   140009804:	lea    rcx,[rax+0x90]
   14000980b:	mov    QWORD PTR [rsp+0xd0],rcx
   140009813:	call   0x140029ab0
   140009818:	xor    r15d,r15d
   14000981b:	test   eax,eax
   14000981d:	jns    0x140009827
   14000981f:	mov    ecx,eax
   140009821:	call   0x140029d64
   140009826:	nop
   140009827:	test   r12,r12
   14000982a:	je     0x14000a7cc
   140009830:	test   r9,r9
   140009833:	je     0x14000a7cc
   140009839:	test   r10,r10
   14000983c:	je     0x14000a7cc
   140009842:	movaps xmm0,XMMWORD PTR [rip+0x2d257]        # 0x140036aa0
   140009849:	movaps XMMWORD PTR [r13+0x0],xmm0
   14000984e:	movaps xmm1,XMMWORD PTR [rip+0x2d25b]        # 0x140036ab0
   140009855:	movaps XMMWORD PTR [r13+0x10],xmm1
   14000985a:	movaps xmm0,XMMWORD PTR [rip+0x2d25f]        # 0x140036ac0
   140009861:	movaps XMMWORD PTR [r13+0x20],xmm0
   140009866:	movaps xmm1,XMMWORD PTR [rip+0x2d263]        # 0x140036ad0
   14000986d:	movaps XMMWORD PTR [r13+0x30],xmm1
   140009872:	mov    eax,DWORD PTR [rip+0x2d268]        # 0x140036ae0
   140009878:	mov    DWORD PTR [r13+0x40],eax
   14000987c:	mov    QWORD PTR [rsp+0x88],r15
   140009884:	mov    rax,QWORD PTR [rdi]
   140009887:	mov    rbx,QWORD PTR [rax+0x20]
   14000988b:	mov    rcx,rbx
   14000988e:	call   QWORD PTR [rip+0x28e14]        # 0x1400326a8
   140009894:	lea    rdx,[rsp+0x88]
   14000989c:	mov    rcx,rdi
   14000989f:	call   rbx
   1400098a1:	test   eax,eax
   1400098a3:	jns    0x1400098ad
   1400098a5:	mov    ecx,eax
   1400098a7:	call   0x140029d64
   1400098ac:	int3   
   1400098ad:	mov    QWORD PTR [rsp+0x40],r15
   1400098b2:	mov    rax,QWORD PTR [rdi]
   1400098b5:	mov    rbx,QWORD PTR [rax+0x28]
   1400098b9:	mov    rcx,rbx
   1400098bc:	call   QWORD PTR [rip+0x28de6]        # 0x1400326a8
   1400098c2:	lea    rdx,[rsp+0x40]
   1400098c7:	mov    rcx,rdi
   1400098ca:	call   rbx
   1400098cc:	test   eax,eax
   1400098ce:	jns    0x1400098d8
   1400098d0:	mov    ecx,eax
   1400098d2:	call   0x140029d64
   1400098d7:	int3   
   1400098d8:	mov    QWORD PTR [rsp+0xa8],r15
   1400098e0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400098e5:	mov    rax,QWORD PTR [rbx]
   1400098e8:	mov    rdi,QWORD PTR [rax]
   1400098eb:	mov    rcx,rdi
   1400098ee:	call   QWORD PTR [rip+0x28db4]        # 0x1400326a8
   1400098f4:	lea    r8,[rsp+0xa8]
   1400098fc:	lea    rdx,[rip+0x2d165]        # 0x140036a68
   140009903:	mov    rcx,rbx
   140009906:	call   rdi
   140009908:	test   eax,eax
   14000990a:	jns    0x140009914
   14000990c:	mov    ecx,eax
   14000990e:	call   0x140029d64
   140009913:	int3   
   140009914:	call   0x140025df8
   140009919:	test   al,al
   14000991b:	jne    0x1400099cf
   140009921:	mov    DWORD PTR [rsp+0xb4],r15d
   140009929:	call   QWORD PTR [rip+0x28b21]        # 0x140032450
   14000992f:	mov    rbx,QWORD PTR [rax+0xa0]
   140009936:	mov    rcx,rbx
   140009939:	call   QWORD PTR [rip+0x28d69]        # 0x1400326a8
   14000993f:	lea    r8,[rsp+0xb4]
   140009947:	xor    edx,edx
   140009949:	lea    rcx,[rip+0x2cb90]        # 0x1400364e0
   140009950:	call   rbx
   140009952:	cmp    DWORD PTR [rsp+0xb4],r15d
   14000995a:	je     0x1400099cf
   14000995c:	lea    rbx,[rip+0x41715]        # 0x14004b078
   140009963:	mov    rcx,QWORD PTR [rip+0x4170e]        # 0x14004b078
   14000996a:	cmp    rcx,rbx
   14000996d:	je     0x14000998a
   14000996f:	test   BYTE PTR [rcx+0x1c],0x2
   140009973:	je     0x14000998a
   140009975:	mov    edx,0x29
   14000997a:	lea    r8,[rip+0x2d167]        # 0x140036ae8
   140009981:	mov    rcx,QWORD PTR [rcx+0x10]
   140009985:	call   0x140001f08
   14000998a:	movaps xmm0,XMMWORD PTR [rip+0x2d10f]        # 0x140036aa0
   140009991:	movaps XMMWORD PTR [r13+0x0],xmm0
   140009996:	movaps xmm1,XMMWORD PTR [rip+0x2d113]        # 0x140036ab0
   14000999d:	movaps XMMWORD PTR [r13+0x10],xmm1
   1400099a2:	movaps xmm0,XMMWORD PTR [rip+0x2d117]        # 0x140036ac0
   1400099a9:	movaps XMMWORD PTR [r13+0x20],xmm0
   1400099ae:	movaps xmm1,XMMWORD PTR [rip+0x2d11b]        # 0x140036ad0
   1400099b5:	movaps XMMWORD PTR [r13+0x30],xmm1
   1400099ba:	mov    eax,DWORD PTR [rip+0x2d120]        # 0x140036ae0
   1400099c0:	mov    DWORD PTR [r13+0x40],eax
   1400099c4:	mov    r14d,0x1
   1400099ca:	jmp    0x140009c41
   1400099cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400099d4:	mov    rax,QWORD PTR [rbx]
   1400099d7:	mov    rdi,QWORD PTR [rax+0x18]
   1400099db:	mov    rcx,rdi
   1400099de:	call   QWORD PTR [rip+0x28cc4]        # 0x1400326a8
   1400099e4:	lea    rdx,[rsp+0x30]
   1400099e9:	mov    rcx,rbx
   1400099ec:	call   rdi
   1400099ee:	test   eax,eax
   1400099f0:	jns    0x1400099fa
   1400099f2:	mov    ecx,eax
   1400099f4:	call   0x140029d64
   1400099f9:	int3   
   1400099fa:	cmp    WORD PTR [rsp+0x30],r15w
   140009a00:	setne  al
   140009a03:	mov    BYTE PTR [r13+0x3c],al
   140009a07:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a0c:	mov    rax,QWORD PTR [rbx]
   140009a0f:	mov    rdi,QWORD PTR [rax+0x28]
   140009a13:	mov    rcx,rdi
   140009a16:	call   QWORD PTR [rip+0x28c8c]        # 0x1400326a8
   140009a1c:	lea    rdx,[rsp+0x30]
   140009a21:	mov    rcx,rbx
   140009a24:	call   rdi
   140009a26:	test   eax,eax
   140009a28:	jns    0x140009a32
   140009a2a:	mov    ecx,eax
   140009a2c:	call   0x140029d64
   140009a31:	int3   
   140009a32:	cmp    WORD PTR [rsp+0x30],r15w
   140009a38:	sete   al
   140009a3b:	mov    BYTE PTR [r13+0x3d],al
   140009a3f:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a44:	mov    rax,QWORD PTR [rbx]
   140009a47:	mov    rdi,QWORD PTR [rax+0x20]
   140009a4b:	mov    rcx,rdi
   140009a4e:	call   QWORD PTR [rip+0x28c54]        # 0x1400326a8
   140009a54:	lea    rdx,[rsp+0x30]
   140009a59:	mov    rcx,rbx
   140009a5c:	call   rdi
   140009a5e:	test   eax,eax
   140009a60:	jns    0x140009a6a
   140009a62:	mov    ecx,eax
   140009a64:	call   0x140029d64
   140009a69:	int3   
   140009a6a:	cmp    WORD PTR [rsp+0x30],r15w
   140009a70:	setne  al
   140009a73:	mov    BYTE PTR [r13+0x3e],al
   140009a77:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a7c:	mov    rax,QWORD PTR [rbx]
   140009a7f:	mov    rdi,QWORD PTR [rax+0x30]
   140009a83:	mov    rcx,rdi
   140009a86:	call   QWORD PTR [rip+0x28c1c]        # 0x1400326a8
   140009a8c:	mov    rdx,r13
   140009a8f:	mov    rcx,rbx
   140009a92:	call   rdi
   140009a94:	test   eax,eax
   140009a96:	jns    0x140009aa0
   140009a98:	mov    ecx,eax
   140009a9a:	call   0x140029d64
   140009a9f:	int3   
   140009aa0:	mov    rbx,QWORD PTR [rsp+0x40]
   140009aa5:	mov    rax,QWORD PTR [rbx]
   140009aa8:	mov    rsi,QWORD PTR [rax+0x38]
   140009aac:	mov    rcx,rsi
   140009aaf:	call   QWORD PTR [rip+0x28bf3]        # 0x1400326a8
   140009ab5:	lea    rdx,[r13+0x4]
   140009ab9:	mov    rcx,rbx
   140009abc:	call   rsi
   140009abe:	test   eax,eax
   140009ac0:	jns    0x140009aca
   140009ac2:	mov    ecx,eax
   140009ac4:	call   0x140029d64
   140009ac9:	int3   
   140009aca:	mov    rbx,QWORD PTR [rsp+0x40]
   140009acf:	mov    rax,QWORD PTR [rbx]
   140009ad2:	mov    r14,QWORD PTR [rax+0x40]
   140009ad6:	mov    rcx,r14
   140009ad9:	call   QWORD PTR [rip+0x28bc9]        # 0x1400326a8
   140009adf:	lea    r9,[r13+0xc]
   140009ae3:	lea    r8,[r13+0x8]
   140009ae7:	lea    rdx,[rsp+0x30]
   140009aec:	mov    rcx,rbx
   140009aef:	call   r14
   140009af2:	test   eax,eax
   140009af4:	jns    0x140009afe
   140009af6:	mov    ecx,eax
   140009af8:	call   0x140029d64
   140009afd:	int3   
   140009afe:	cmp    WORD PTR [rsp+0x30],r15w
   140009b04:	setne  al
   140009b07:	mov    BYTE PTR [r13+0x40],al
   140009b0b:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b10:	mov    rax,QWORD PTR [rbx]
   140009b13:	mov    rdi,QWORD PTR [rax+0x48]
   140009b17:	mov    rcx,rdi
   140009b1a:	call   QWORD PTR [rip+0x28b88]        # 0x1400326a8
   140009b20:	lea    rdx,[rsp+0x30]
   140009b25:	mov    rcx,rbx
   140009b28:	call   rdi
   140009b2a:	test   eax,eax
   140009b2c:	jns    0x140009b36
   140009b2e:	mov    ecx,eax
   140009b30:	call   0x140029d64
   140009b35:	int3   
   140009b36:	cmp    WORD PTR [rsp+0x30],r15w
   140009b3c:	setne  al
   140009b3f:	mov    BYTE PTR [r13+0x3f],al
   140009b43:	mov    DWORD PTR [rsp+0x6c],r15d
   140009b48:	mov    DWORD PTR [rsp+0xf0],r15d
   140009b50:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b55:	mov    rax,QWORD PTR [rbx]
   140009b58:	mov    rdi,QWORD PTR [rax+0x50]
   140009b5c:	mov    rcx,rdi
   140009b5f:	call   QWORD PTR [rip+0x28b43]        # 0x1400326a8
   140009b65:	lea    r8,[rsp+0xf0]
   140009b6d:	lea    rdx,[rsp+0x6c]
   140009b72:	mov    rcx,rbx
   140009b75:	call   rdi
   140009b77:	test   eax,eax
   140009b79:	jns    0x140009b83
   140009b7b:	mov    ecx,eax
   140009b7d:	call   0x140029d64
   140009b82:	int3   
   140009b83:	mov    eax,0x5dc
   140009b88:	cmp    DWORD PTR [rsp+0x6c],0x7fffffff
   140009b90:	cmovb  eax,DWORD PTR [rsp+0x6c]
   140009b95:	mov    DWORD PTR [r13+0x10],eax
   140009b99:	mov    edi,r15d
   140009b9c:	mov    DWORD PTR [rsp+0x48],r15d
   140009ba1:	mov    r14d,0x1
   140009ba7:	movsxd rcx,edi
   140009baa:	mov    QWORD PTR [rsp+0xc0],rcx
   140009bb2:	mov    rbx,QWORD PTR [rsp+0xa8]
   140009bba:	mov    rax,QWORD PTR [rbx]
   140009bbd:	lea    rdi,[rcx*4+0x0]
   140009bc5:	mov    rsi,QWORD PTR [rax+0x28]
   140009bc9:	mov    rcx,rsi
   140009bcc:	call   QWORD PTR [rip+0x28ad6]        # 0x1400326a8
   140009bd2:	lea    r8,[r13+0x18]
   140009bd6:	add    r8,rdi
   140009bd9:	mov    edx,DWORD PTR [rsp+0x48]
   140009bdd:	mov    rcx,rbx
   140009be0:	call   rsi
   140009be2:	test   eax,eax
   140009be4:	js     0x14000a7c4
   140009bea:	mov    rbx,QWORD PTR [rsp+0xa8]
   140009bf2:	mov    rax,QWORD PTR [rbx]
   140009bf5:	mov    rcx,QWORD PTR [rsp+0xc0]
   140009bfd:	lea    rdi,[rcx*4+0x0]
   140009c05:	mov    rsi,QWORD PTR [rax+0x30]
   140009c09:	mov    rcx,rsi
   140009c0c:	call   QWORD PTR [rip+0x28a96]        # 0x1400326a8
   140009c12:	lea    r8,[r13+0x20]
   140009c16:	add    r8,rdi
   140009c19:	mov    edi,DWORD PTR [rsp+0x48]
   140009c1d:	mov    edx,edi
   140009c1f:	mov    rcx,rbx
   140009c22:	call   rsi
   140009c24:	test   eax,eax
   140009c26:	js     0x14000a7bc
   140009c2c:	add    edi,r14d
   140009c2f:	mov    DWORD PTR [rsp+0x48],edi
   140009c33:	cmp    edi,0x2
   140009c36:	jl     0x140009ba7
   140009c3c:	mov    sil,BYTE PTR [rsp+0x34]
   140009c41:	mov    rdx,r13
   140009c44:	call   0x140008ec0
   140009c49:	mov    rdx,r13
   140009c4c:	call   0x140008fb8
   140009c51:	mov    rdx,r13
   140009c54:	call   0x140008ec0
   140009c59:	nop
   140009c5a:	mov    rbx,r15
   140009c5d:	mov    QWORD PTR [rsp+0x60],rbx
   140009c62:	mov    QWORD PTR [rsp+0x78],r15
   140009c67:	lea    rcx,[rsp+0x78]
   140009c6c:	call   0x14000d608
   140009c71:	mov    ecx,eax
   140009c73:	mov    DWORD PTR [rsp+0x48],eax
   140009c77:	test   eax,eax
   140009c79:	jns    0x140009cd1
   140009c7b:	mov    rax,QWORD PTR [rsp+0x78]
   140009c80:	test   rax,rax
   140009c83:	je     0x140009db8
   140009c89:	mov    ecx,DWORD PTR [rax+0x8]
   140009c8c:	or     esi,0xffffffff
   140009c8f:	cmp    ecx,r14d
   140009c92:	jne    0x140009c9a
   140009c94:	mov    DWORD PTR [rax+0x8],r15d
   140009c98:	jmp    0x140009ca7
   140009c9a:	mov    ecx,esi
   140009c9c:	lock xadd DWORD PTR [rax+0x8],ecx
   140009ca1:	add    ecx,esi
   140009ca3:	test   ecx,ecx
   140009ca5:	jg     0x140009cc3
   140009ca7:	mov    rbx,QWORD PTR [rsp+0x78]
   140009cac:	mov    rax,QWORD PTR [rbx]
   140009caf:	mov    rdi,QWORD PTR [rax]
   140009cb2:	mov    rcx,rdi
   140009cb5:	call   QWORD PTR [rip+0x289ed]        # 0x1400326a8
   140009cbb:	mov    edx,r14d
   140009cbe:	mov    rcx,rbx
   140009cc1:	call   rdi
   140009cc3:	mov    rbx,QWORD PTR [rsp+0x60]
   140009cc8:	mov    ecx,DWORD PTR [rsp+0x48]
   140009ccc:	jmp    0x140009dbb
   140009cd1:	movups xmm0,XMMWORD PTR [r12+0x28]
   140009cd7:	movdqu XMMWORD PTR [rsp+0x1c0],xmm0
   140009ce0:	movups xmm0,XMMWORD PTR [r13+0x0]
   140009ce5:	movaps XMMWORD PTR [rsp+0x1f0],xmm0
   140009ced:	movups xmm1,XMMWORD PTR [r13+0x10]
   140009cf2:	movaps XMMWORD PTR [rsp+0x200],xmm1
   140009cfa:	movups xmm0,XMMWORD PTR [r13+0x20]
   140009cff:	movaps XMMWORD PTR [rsp+0x210],xmm0
   140009d07:	movups xmm1,XMMWORD PTR [r13+0x30]
   140009d0c:	movaps XMMWORD PTR [rsp+0x220],xmm1
   140009d14:	mov    eax,DWORD PTR [r13+0x40]
   140009d18:	mov    DWORD PTR [rsp+0x230],eax
   140009d1f:	lea    rax,[rsp+0x1c0]
   140009d27:	mov    QWORD PTR [rsp+0x28],rax
   140009d2c:	mov    al,BYTE PTR [rsp+0x38]
   140009d30:	mov    BYTE PTR [rsp+0x20],al
   140009d34:	mov    r9b,sil
   140009d37:	lea    r8,[rsp+0x1f0]
   140009d3f:	mov    rdx,QWORD PTR [rsp+0x88]
   140009d47:	mov    rdi,QWORD PTR [rsp+0x78]
   140009d4c:	mov    rcx,rdi
   140009d4f:	call   0x1400129e4
   140009d54:	mov    ecx,eax
   140009d56:	mov    DWORD PTR [rsp+0x48],eax
   140009d5a:	test   eax,eax
   140009d5c:	jns    0x140009da8
   140009d5e:	test   rdi,rdi
   140009d61:	je     0x140009db8
   140009d63:	mov    eax,DWORD PTR [rdi+0x8]
   140009d66:	or     esi,0xffffffff
   140009d69:	cmp    eax,r14d
   140009d6c:	jne    0x140009d74
   140009d6e:	mov    DWORD PTR [rdi+0x8],r15d
   140009d72:	jmp    0x140009d81
   140009d74:	mov    eax,esi
   140009d76:	lock xadd DWORD PTR [rdi+0x8],eax
   140009d7b:	add    eax,esi
   140009d7d:	test   eax,eax
   140009d7f:	jg     0x140009da1
   140009d81:	mov    rbx,QWORD PTR [rsp+0x78]
   140009d86:	mov    rax,QWORD PTR [rbx]
   140009d89:	mov    rdi,QWORD PTR [rax]
   140009d8c:	mov    rcx,rdi
   140009d8f:	call   QWORD PTR [rip+0x28913]        # 0x1400326a8
   140009d95:	mov    edx,r14d
   140009d98:	mov    rcx,rbx
   140009d9b:	call   rdi
   140009d9d:	mov    ecx,DWORD PTR [rsp+0x48]
   140009da1:	mov    rbx,QWORD PTR [rsp+0x60]
   140009da6:	jmp    0x140009dbb
   140009da8:	mov    rbx,rdi
   140009dab:	mov    QWORD PTR [rsp+0x78],r15
   140009db0:	mov    QWORD PTR [rsp+0x60],rbx
   140009db5:	mov    ecx,r15d
   140009db8:	or     esi,0xffffffff
   140009dbb:	test   ecx,ecx
   140009dbd:	jns    0x140009dc4
   140009dbf:	call   0x140029d64
   140009dc4:	cmp    QWORD PTR [rbx+0xc0],r15
   140009dcb:	seta   al
   140009dce:	mov    rcx,QWORD PTR [rsp+0x150]
   140009dd6:	mov    BYTE PTR [rcx],al
   140009dd8:	mov    rax,QWORD PTR [rbx+0xd0]
   140009ddf:	add    rax,QWORD PTR [rbx+0xc8]
   140009de6:	add    rax,QWORD PTR [rbx+0xb8]
   140009ded:	setne  al
   140009df0:	mov    rdx,QWORD PTR [rsp+0x198]
   140009df8:	mov    BYTE PTR [rdx],al
   140009dfa:	mov    al,BYTE PTR [rcx]
   140009dfc:	and    BYTE PTR [r13+0x3f],al
   140009e00:	cmp    BYTE PTR [rcx],r15b
   140009e03:	jne    0x140009f17
   140009e09:	cmp    BYTE PTR [rdx],r15b
   140009e0c:	jne    0x140009f17
   140009e12:	mov    rcx,QWORD PTR [rip+0x4125f]        # 0x14004b078
   140009e19:	lea    rax,[rip+0x41258]        # 0x14004b078
   140009e20:	cmp    rcx,rax
   140009e23:	je     0x140009e40
   140009e25:	test   BYTE PTR [rcx+0x1c],0x4
   140009e29:	je     0x140009e40
   140009e2b:	mov    edx,0x2a
   140009e30:	lea    r8,[rip+0x2ccb1]        # 0x140036ae8
   140009e37:	mov    rcx,QWORD PTR [rcx+0x10]
   140009e3b:	call   0x140001f08
   140009e40:	lea    rcx,[rip+0x2c6e9]        # 0x140036530
   140009e47:	call   QWORD PTR [rip+0x284e3]        # 0x140032330
   140009e4d:	nop
   140009e4e:	mov    eax,DWORD PTR [rbx+0x8]
   140009e51:	cmp    eax,r14d
   140009e54:	jne    0x140009e5c
   140009e56:	mov    DWORD PTR [rbx+0x8],r15d
   140009e5a:	jmp    0x140009e69
   140009e5c:	mov    eax,esi
   140009e5e:	lock xadd DWORD PTR [rbx+0x8],eax
   140009e63:	add    eax,esi
   140009e65:	test   eax,eax
   140009e67:	jg     0x140009e86
   140009e69:	mov    rbx,QWORD PTR [rsp+0x60]
   140009e6e:	mov    rax,QWORD PTR [rbx]
   140009e71:	mov    rdi,QWORD PTR [rax]
   140009e74:	mov    rcx,rdi
   140009e77:	call   QWORD PTR [rip+0x2882b]        # 0x1400326a8
   140009e7d:	mov    edx,r14d
   140009e80:	mov    rcx,rbx
   140009e83:	call   rdi
   140009e85:	nop
   140009e86:	mov    rbx,QWORD PTR [rsp+0xa8]
   140009e8e:	test   rbx,rbx
   140009e91:	je     0x140009ea9
   140009e93:	mov    rax,QWORD PTR [rbx]
   140009e96:	mov    rdi,QWORD PTR [rax+0x10]
   140009e9a:	mov    rcx,rdi
   140009e9d:	call   QWORD PTR [rip+0x28805]        # 0x1400326a8
   140009ea3:	mov    rcx,rbx
   140009ea6:	call   rdi
   140009ea8:	nop
   140009ea9:	mov    rbx,QWORD PTR [rsp+0x40]
   140009eae:	test   rbx,rbx
   140009eb1:	je     0x140009ec9
   140009eb3:	mov    rax,QWORD PTR [rbx]
   140009eb6:	mov    rdi,QWORD PTR [rax+0x10]
   140009eba:	mov    rcx,rdi
   140009ebd:	call   QWORD PTR [rip+0x287e5]        # 0x1400326a8
   140009ec3:	mov    rcx,rbx
   140009ec6:	call   rdi
   140009ec8:	nop
   140009ec9:	mov    rbx,QWORD PTR [rsp+0x88]
   140009ed1:	test   rbx,rbx
   140009ed4:	je     0x140009eec
   140009ed6:	mov    rax,QWORD PTR [rbx]
   140009ed9:	mov    rdi,QWORD PTR [rax+0x10]
   140009edd:	mov    rcx,rdi
   140009ee0:	call   QWORD PTR [rip+0x287c2]        # 0x1400326a8
   140009ee6:	mov    rcx,rbx
   140009ee9:	call   rdi
   140009eeb:	nop
   140009eec:	mov    rax,QWORD PTR [rsp+0xd0]
   140009ef4:	mov    ecx,esi
   140009ef6:	lock xadd DWORD PTR [rax+0x8],ecx
   140009efb:	add    ecx,esi
   140009efd:	cmp    ecx,0x80000000
   140009f03:	jne    0x140009f12
   140009f05:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009f0d:	call   0x140029c90
   140009f12:	jmp    0x14000a811
   140009f17:	mov    QWORD PTR [rsp+0x80],r15
   140009f1f:	mov    rax,QWORD PTR [rsp+0x108]
   140009f27:	mov    rdi,QWORD PTR [rax+0x50]
   140009f2b:	mov    QWORD PTR [rsp+0x48],rdi
   140009f30:	mov    QWORD PTR [rax+0x50],rbx
   140009f34:	mov    QWORD PTR [rsp+0x60],rdi
   140009f39:	mov    rax,QWORD PTR [rsp+0xf8]
   140009f41:	mov    rax,QWORD PTR [rax]
   140009f44:	mov    rbx,QWORD PTR [rax+0x18]
   140009f48:	mov    rcx,rbx
   140009f4b:	call   QWORD PTR [rip+0x28757]        # 0x1400326a8
   140009f51:	lea    rdx,[rsp+0x80]
   140009f59:	mov    rcx,QWORD PTR [rsp+0xf8]
   140009f61:	call   rbx
   140009f63:	test   eax,eax
   140009f65:	jns    0x140009f6e
   140009f67:	mov    ecx,eax
   140009f69:	call   0x140029d64
   140009f6e:	mov    QWORD PTR [rsp+0x160],r15
   140009f76:	lea    rax,[rsp+0x160]
   140009f7e:	mov    QWORD PTR [rsp+0x1d8],rax
   140009f86:	mov    QWORD PTR [rsp+0x110],r15
   140009f8e:	lea    rdx,[rsp+0x110]
   140009f96:	lea    rcx,[rip+0x2da0b]        # 0x1400379a8
   140009f9d:	call   QWORD PTR [rip+0x2848d]        # 0x140032430
   140009fa3:	test   eax,eax
   140009fa5:	jns    0x140009fae
   140009fa7:	mov    ecx,eax
   140009fa9:	call   0x140029d64
   140009fae:	mov    DWORD PTR [rsp+0xa4],r15d
   140009fb6:	mov    DWORD PTR [rsp+0x70],r15d
   140009fbb:	mov    DWORD PTR [rsp+0xb8],0x4
   140009fc6:	mov    QWORD PTR [rsp+0x28],r15
   140009fcb:	lea    rax,[rsp+0x70]
   140009fd0:	mov    QWORD PTR [rsp+0x20],rax
   140009fd5:	lea    r9,[rsp+0xb8]
   140009fdd:	lea    r8,[rsp+0xa4]
   140009fe5:	lea    rdx,[rip+0x2d9fc]        # 0x1400379e8
   140009fec:	mov    rcx,QWORD PTR [rsp+0x110]
   140009ff4:	call   QWORD PTR [rip+0x2842e]        # 0x140032428
   140009ffa:	test   eax,eax
   140009ffc:	js     0x14000a7b4
   14000a002:	cmp    DWORD PTR [rsp+0xa4],r14d
   14000a00a:	jbe    0x14000a016
   14000a00c:	mov    eax,0x8007065d
   14000a011:	jmp    0x14000a7b4
   14000a016:	mov    eax,DWORD PTR [rsp+0xb8]
   14000a01d:	neg    eax
   14000a01f:	sbb    ecx,ecx
   14000a021:	and    ecx,DWORD PTR [rsp+0x70]
   14000a025:	mov    DWORD PTR [rsp+0x70],ecx
   14000a029:	mov    DWORD PTR [rsp+0x14c],ecx
   14000a030:	mov    eax,r15d
   14000a033:	setne  al
   14000a036:	mov    DWORD PTR [rsp+0x190],eax
   14000a03d:	test   eax,eax
   14000a03f:	sete   bl
   14000a042:	mov    rcx,QWORD PTR [rsp+0x110]
   14000a04a:	test   rcx,rcx
   14000a04d:	je     0x14000a055
   14000a04f:	call   QWORD PTR [rip+0x2839b]        # 0x1400323f0
   14000a055:	mov    BYTE PTR [r12+0x142],bl
   14000a05d:	mov    QWORD PTR [rsp+0x1a8],r15
   14000a065:	lea    rax,[rsp+0x1a8]
   14000a06d:	mov    QWORD PTR [rsp+0x1d0],rax
   14000a075:	mov    QWORD PTR [rsp+0xd8],r15
   14000a07d:	lea    rdx,[rsp+0xd8]
   14000a085:	lea    rcx,[rip+0x2d91c]        # 0x1400379a8
   14000a08c:	call   QWORD PTR [rip+0x2839e]        # 0x140032430
   14000a092:	test   eax,eax
   14000a094:	jns    0x14000a09d
   14000a096:	mov    ecx,eax
   14000a098:	call   0x140029d64
   14000a09d:	mov    DWORD PTR [rsp+0xb0],r15d
   14000a0a5:	mov    DWORD PTR [rsp+0x50],r15d
   14000a0aa:	mov    DWORD PTR [rsp+0x90],0x4
   14000a0b5:	mov    QWORD PTR [rsp+0x28],r15
   14000a0ba:	lea    rax,[rsp+0x50]
   14000a0bf:	mov    QWORD PTR [rsp+0x20],rax
   14000a0c4:	lea    r9,[rsp+0x90]
   14000a0cc:	lea    r8,[rsp+0xb0]
   14000a0d4:	lea    rdx,[rip+0x2d92d]        # 0x140037a08
   14000a0db:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a0e3:	call   QWORD PTR [rip+0x2833f]        # 0x140032428
   14000a0e9:	test   eax,eax
   14000a0eb:	js     0x14000a7ac
   14000a0f1:	cmp    DWORD PTR [rsp+0xb0],r14d
   14000a0f9:	jbe    0x14000a105
   14000a0fb:	mov    eax,0x8007065d
   14000a100:	jmp    0x14000a7ac
   14000a105:	mov    eax,DWORD PTR [rsp+0x90]
   14000a10c:	neg    eax
   14000a10e:	sbb    ecx,ecx
   14000a110:	and    ecx,DWORD PTR [rsp+0x50]
   14000a114:	mov    DWORD PTR [rsp+0x50],ecx
   14000a118:	mov    DWORD PTR [rsp+0x158],ecx
   14000a11f:	mov    eax,r15d
   14000a122:	setne  al
   14000a125:	mov    DWORD PTR [rsp+0x194],eax
   14000a12c:	test   eax,eax
   14000a12e:	setne  bl
   14000a131:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a139:	test   rcx,rcx
   14000a13c:	je     0x14000a144
   14000a13e:	call   QWORD PTR [rip+0x282ac]        # 0x1400323f0
   14000a144:	mov    BYTE PTR [r12+0x140],bl
   14000a14c:	mov    QWORD PTR [rsp+0x1a0],r15
   14000a154:	lea    rax,[rsp+0x1a0]
   14000a15c:	mov    QWORD PTR [rsp+0x1e0],rax
   14000a164:	mov    QWORD PTR [rsp+0xe0],r15
   14000a16c:	lea    rdx,[rsp+0xe0]
   14000a174:	lea    rcx,[rip+0x2d82d]        # 0x1400379a8
   14000a17b:	call   QWORD PTR [rip+0x282af]        # 0x140032430
   14000a181:	test   eax,eax
   14000a183:	jns    0x14000a18c
   14000a185:	mov    ecx,eax
   14000a187:	call   0x140029d64
   14000a18c:	mov    DWORD PTR [rsp+0xa0],r15d
   14000a194:	mov    DWORD PTR [rsp+0x68],r15d
   14000a199:	mov    DWORD PTR [rsp+0xc8],0x4
   14000a1a4:	mov    QWORD PTR [rsp+0x28],r15
   14000a1a9:	lea    rax,[rsp+0x68]
   14000a1ae:	mov    QWORD PTR [rsp+0x20],rax
   14000a1b3:	lea    r9,[rsp+0xc8]
   14000a1bb:	lea    r8,[rsp+0xa0]
   14000a1c3:	lea    rdx,[rip+0x2d7e6]        # 0x1400379b0
   14000a1ca:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000a1d2:	call   QWORD PTR [rip+0x28250]        # 0x140032428
   14000a1d8:	test   eax,eax
   14000a1da:	js     0x14000a7a4
   14000a1e0:	cmp    DWORD PTR [rsp+0xa0],r14d
   14000a1e8:	jbe    0x14000a1f4
   14000a1ea:	mov    eax,0x8007065d
   14000a1ef:	jmp    0x14000a7a4
   14000a1f4:	mov    eax,DWORD PTR [rsp+0xc8]
   14000a1fb:	neg    eax
   14000a1fd:	sbb    ecx,ecx
   14000a1ff:	and    ecx,DWORD PTR [rsp+0x68]
   14000a203:	mov    DWORD PTR [rsp+0x68],ecx
   14000a207:	mov    DWORD PTR [rsp+0x180],ecx
   14000a20e:	mov    eax,r15d
   14000a211:	setne  al
   14000a214:	mov    DWORD PTR [rsp+0x148],eax
   14000a21b:	test   eax,eax
   14000a21d:	sete   bl
   14000a220:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000a228:	test   rcx,rcx
   14000a22b:	je     0x14000a233
   14000a22d:	call   QWORD PTR [rip+0x281bd]        # 0x1400323f0
   14000a233:	mov    BYTE PTR [r12+0x141],bl
   14000a23b:	test   bl,bl
   14000a23d:	je     0x14000a2d4
   14000a243:	mov    QWORD PTR [rsp+0xe8],r15
   14000a24b:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a253:	mov    rax,QWORD PTR [rbx]
   14000a256:	mov    rdi,QWORD PTR [rax]
   14000a259:	mov    rcx,rdi
   14000a25c:	call   QWORD PTR [rip+0x28446]        # 0x1400326a8
   14000a262:	lea    r8,[rsp+0xe8]
   14000a26a:	lea    rdx,[rip+0x2c7e7]        # 0x140036a58
   14000a271:	mov    rcx,rbx
   14000a274:	call   rdi
   14000a276:	test   eax,eax
   14000a278:	jns    0x14000a281
   14000a27a:	mov    ecx,eax
   14000a27c:	call   0x140029d64
   14000a281:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000a289:	mov    rax,QWORD PTR [rbx]
   14000a28c:	mov    rdi,QWORD PTR [rax+0x18]
   14000a290:	mov    rcx,rdi
   14000a293:	call   QWORD PTR [rip+0x2840f]        # 0x1400326a8
   14000a299:	movzx  edx,si
   14000a29c:	mov    rcx,rbx
   14000a29f:	call   rdi
   14000a2a1:	test   eax,eax
   14000a2a3:	jns    0x14000a2ad
   14000a2a5:	mov    ecx,eax
   14000a2a7:	call   0x140029d64
   14000a2ac:	nop
   14000a2ad:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000a2b5:	test   rbx,rbx
   14000a2b8:	je     0x14000a2cf
   14000a2ba:	mov    rax,QWORD PTR [rbx]
   14000a2bd:	mov    rdi,QWORD PTR [rax+0x10]
   14000a2c1:	mov    rcx,rdi
   14000a2c4:	call   QWORD PTR [rip+0x283de]        # 0x1400326a8
   14000a2ca:	mov    rcx,rbx
   14000a2cd:	call   rdi
   14000a2cf:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a2d4:	mov    QWORD PTR [rsp+0xc0],r15
   14000a2dc:	lea    r8,[rsp+0xc0]
   14000a2e4:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000a2ec:	mov    rcx,QWORD PTR [rsp+0x108]
   14000a2f4:	call   0x14000b1d0
   14000a2f9:	nop
   14000a2fa:	mov    rcx,QWORD PTR [rsp+0x108]
   14000a302:	mov    r9,QWORD PTR [rsp+0x178]
   14000a30a:	mov    rdx,QWORD PTR [rsp+0x120]
   14000a312:	mov    r8,QWORD PTR [rsp+0x188]
   14000a31a:	jmp    0x14000a35b
   14000a31c:	xor    r15d,r15d
   14000a31f:	lea    r14d,[r15+0x1]
   14000a323:	or     esi,0xffffffff
   14000a326:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a32b:	mov    rcx,QWORD PTR [rsp+0x168]
   14000a333:	mov    r12,QWORD PTR [rsp+0x170]
   14000a33b:	mov    r13,QWORD PTR [rsp+0x130]
   14000a343:	mov    r9,QWORD PTR [rsp+0x140]
   14000a34b:	mov    rdx,QWORD PTR [rsp+0x100]
   14000a353:	mov    r8,QWORD PTR [rsp+0x98]
   14000a35b:	mov    rax,QWORD PTR [rcx+0x50]
   14000a35f:	mov    QWORD PTR [rsp+0x100],rax
   14000a367:	mov    QWORD PTR [rcx+0x50],rdi
   14000a36b:	mov    QWORD PTR [rsp+0x60],rax
   14000a370:	mov    QWORD PTR [rsp+0x28],r8
   14000a375:	mov    QWORD PTR [rsp+0x20],rdx
   14000a37a:	mov    r8,rax
   14000a37d:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a382:	mov    rcx,QWORD PTR [rsp+0x88]
   14000a38a:	call   0x14000c05c
   14000a38f:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a397:	mov    rax,rbx
   14000a39a:	mov    QWORD PTR [rsp+0x98],rbx
   14000a3a2:	test   rbx,rbx
   14000a3a5:	je     0x14000a3cc
   14000a3a7:	mov    rax,QWORD PTR [rbx]
   14000a3aa:	mov    rdi,QWORD PTR [rax+0x8]
   14000a3ae:	mov    rcx,rdi
   14000a3b1:	call   QWORD PTR [rip+0x282f1]        # 0x1400326a8
   14000a3b7:	mov    rcx,rbx
   14000a3ba:	call   rdi
   14000a3bc:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a3c4:	mov    rax,QWORD PTR [rsp+0x98]
   14000a3cc:	mov    rdi,QWORD PTR [r12+0x98]
   14000a3d4:	mov    QWORD PTR [r12+0x98],rax
   14000a3dc:	test   rdi,rdi
   14000a3df:	je     0x14000a3fe
   14000a3e1:	mov    rax,QWORD PTR [rdi]
   14000a3e4:	mov    rbx,QWORD PTR [rax+0x10]
   14000a3e8:	mov    rcx,rbx
   14000a3eb:	call   QWORD PTR [rip+0x282b7]        # 0x1400326a8
   14000a3f1:	mov    rcx,rdi
   14000a3f4:	call   rbx
   14000a3f6:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a3fe:	mov    QWORD PTR [rsp+0x118],r15
   14000a406:	mov    rax,QWORD PTR [rbx]
   14000a409:	mov    rdi,QWORD PTR [rax]
   14000a40c:	mov    rcx,rdi
   14000a40f:	call   QWORD PTR [rip+0x28293]        # 0x1400326a8
   14000a415:	lea    r8,[rsp+0x118]
   14000a41d:	lea    rdx,[rip+0x2c634]        # 0x140036a58
   14000a424:	mov    rcx,rbx
   14000a427:	call   rdi
   14000a429:	test   eax,eax
   14000a42b:	jns    0x14000a481
   14000a42d:	mov    rcx,QWORD PTR [rip+0x40c44]        # 0x14004b078
   14000a434:	lea    rax,[rip+0x40c3d]        # 0x14004b078
   14000a43b:	cmp    rcx,rax
   14000a43e:	je     0x14000a45b
   14000a440:	test   BYTE PTR [rcx+0x1c],r14b
   14000a444:	je     0x14000a45b
   14000a446:	mov    edx,0x3e
   14000a44b:	lea    r8,[rip+0x2c696]        # 0x140036ae8
   14000a452:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a456:	call   0x140001f08
   14000a45b:	mov    edx,0x80004002
   14000a460:	lea    rcx,[rsp+0x240]
   14000a468:	call   0x140002064
   14000a46d:	lea    rdx,[rip+0x3ed14]        # 0x140049188
   14000a474:	lea    rcx,[rsp+0x240]
   14000a47c:	call   0x14002e2da
   14000a481:	mov    WORD PTR [rsp+0x58],r15w
   14000a487:	xor    eax,eax
   14000a489:	mov    DWORD PTR [rsp+0x5a],eax
   14000a48d:	mov    WORD PTR [rsp+0x5e],ax
   14000a492:	mov    rbx,QWORD PTR [rsp+0x118]
   14000a49a:	mov    rax,QWORD PTR [rbx]
   14000a49d:	mov    rdi,QWORD PTR [rax+0x20]
   14000a4a1:	mov    rcx,rdi
   14000a4a4:	call   QWORD PTR [rip+0x281fe]        # 0x1400326a8
   14000a4aa:	lea    rdx,[rsp+0x58]
   14000a4af:	mov    rcx,rbx
   14000a4b2:	call   rdi
   14000a4b4:	mov    ebx,eax
   14000a4b6:	test   eax,eax
   14000a4b8:	jns    0x14000a50e
   14000a4ba:	mov    rcx,QWORD PTR [rip+0x40bb7]        # 0x14004b078
   14000a4c1:	lea    rax,[rip+0x40bb0]        # 0x14004b078
   14000a4c8:	cmp    rcx,rax
   14000a4cb:	je     0x14000a4eb
   14000a4cd:	test   BYTE PTR [rcx+0x1c],0x2
   14000a4d1:	je     0x14000a4eb
   14000a4d3:	mov    edx,0x3f
   14000a4d8:	mov    r9d,ebx
   14000a4db:	lea    r8,[rip+0x2c606]        # 0x140036ae8
   14000a4e2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a4e6:	call   0x140001f70
   14000a4eb:	mov    edx,ebx
   14000a4ed:	lea    rcx,[rsp+0x290]
   14000a4f5:	call   0x140002064
   14000a4fa:	lea    rdx,[rip+0x3ec87]        # 0x140049188
   14000a501:	lea    rcx,[rsp+0x290]
   14000a509:	call   0x14002e2da
   14000a50e:	movzx  ecx,WORD PTR [rsp+0x58]
   14000a513:	shl    rcx,0x10
   14000a517:	movzx  eax,WORD PTR [rsp+0x5a]
   14000a51c:	add    rcx,rax
   14000a51f:	shl    rcx,0x10
   14000a523:	movzx  eax,WORD PTR [rsp+0x5c]
   14000a528:	add    rcx,rax
   14000a52b:	shl    rcx,0x10
   14000a52f:	movzx  eax,WORD PTR [rsp+0x5e]
   14000a534:	add    rax,rcx
   14000a537:	mov    QWORD PTR [rsp+0x98],rax
   14000a53f:	mov    rbx,QWORD PTR [rsp+0x118]
   14000a547:	test   rbx,rbx
   14000a54a:	je     0x14000a569
   14000a54c:	mov    rax,QWORD PTR [rbx]
   14000a54f:	mov    rdi,QWORD PTR [rax+0x10]
   14000a553:	mov    rcx,rdi
   14000a556:	call   QWORD PTR [rip+0x2814c]        # 0x1400326a8
   14000a55c:	mov    rcx,rbx
   14000a55f:	call   rdi
   14000a561:	mov    rax,QWORD PTR [rsp+0x98]
   14000a569:	mov    QWORD PTR [r12+0x38],rax
   14000a56e:	mov    WORD PTR [rsp+0x38],r15w
   14000a574:	mov    WORD PTR [rsp+0x34],r15w
   14000a57a:	mov    rbx,QWORD PTR [rsp+0x88]
   14000a582:	mov    rax,QWORD PTR [rbx]
   14000a585:	mov    rdi,QWORD PTR [rax+0x20]
   14000a589:	mov    rcx,rdi
   14000a58c:	call   QWORD PTR [rip+0x28116]        # 0x1400326a8
   14000a592:	lea    r8,[rsp+0x34]
   14000a597:	lea    rdx,[rsp+0x38]
   14000a59c:	mov    rcx,rbx
   14000a59f:	call   rdi
   14000a5a1:	mov    ebx,eax
   14000a5a3:	test   eax,eax
   14000a5a5:	jns    0x14000a5fb
   14000a5a7:	mov    rcx,QWORD PTR [rip+0x40aca]        # 0x14004b078
   14000a5ae:	lea    rax,[rip+0x40ac3]        # 0x14004b078
   14000a5b5:	cmp    rcx,rax
   14000a5b8:	je     0x14000a5d8
   14000a5ba:	test   BYTE PTR [rcx+0x1c],0x2
   14000a5be:	je     0x14000a5d8
   14000a5c0:	mov    edx,0x40
   14000a5c5:	mov    r9d,ebx
   14000a5c8:	lea    r8,[rip+0x2c519]        # 0x140036ae8
   14000a5cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a5d3:	call   0x140001f70
   14000a5d8:	mov    edx,ebx
   14000a5da:	lea    rcx,[rsp+0x268]
   14000a5e2:	call   0x140002064
   14000a5e7:	lea    rdx,[rip+0x3eb9a]        # 0x140049188
   14000a5ee:	lea    rcx,[rsp+0x268]
   14000a5f6:	call   0x14002e2da
   14000a5fb:	movzx  ecx,WORD PTR [rsp+0x38]
   14000a600:	shl    rcx,0x10
   14000a604:	movzx  eax,WORD PTR [rsp+0x34]
   14000a609:	add    rcx,rax
   14000a60c:	shl    rcx,0x20
   14000a610:	mov    QWORD PTR [r12+0x40],rcx
   14000a615:	mov    rdi,QWORD PTR [r12+0xa0]
   14000a61d:	test   rdi,rdi
   14000a620:	je     0x14000a63f
   14000a622:	mov    rax,QWORD PTR [rdi]
   14000a625:	mov    rbx,QWORD PTR [rax+0x8]
   14000a629:	mov    rcx,rbx
   14000a62c:	call   QWORD PTR [rip+0x28076]        # 0x1400326a8
   14000a632:	mov    rcx,rdi
   14000a635:	call   rbx
   14000a637:	mov    QWORD PTR [r12+0xa0],r15
   14000a63f:	mov    rax,QWORD PTR [rsp+0xc0]
   14000a647:	mov    QWORD PTR [rsp+0xc0],r15
   14000a64f:	mov    QWORD PTR [r12+0xa0],rax
   14000a657:	mov    rdi,QWORD PTR [r12+0xa8]
   14000a65f:	test   rdi,rdi
   14000a662:	je     0x14000a6a3
   14000a664:	mov    eax,DWORD PTR [rdi+0x8]
   14000a667:	cmp    eax,r14d
   14000a66a:	jne    0x14000a672
   14000a66c:	mov    DWORD PTR [rdi+0x8],r15d
   14000a670:	jmp    0x14000a67f
   14000a672:	mov    eax,esi
   14000a674:	lock xadd DWORD PTR [rdi+0x8],eax
   14000a679:	add    eax,esi
   14000a67b:	test   eax,eax
   14000a67d:	jg     0x14000a69b
   14000a67f:	test   rdi,rdi
   14000a682:	je     0x14000a69b
   14000a684:	mov    rax,QWORD PTR [rdi]
   14000a687:	mov    rbx,QWORD PTR [rax]
   14000a68a:	mov    rcx,rbx
   14000a68d:	call   QWORD PTR [rip+0x28015]        # 0x1400326a8
   14000a693:	mov    edx,r14d
   14000a696:	mov    rcx,rdi
   14000a699:	call   rbx
   14000a69b:	mov    QWORD PTR [r12+0xa8],r15
   14000a6a3:	mov    QWORD PTR [rsp+0x60],r15
   14000a6a8:	mov    rax,QWORD PTR [rsp+0x100]
   14000a6b0:	mov    QWORD PTR [r12+0xa8],rax
   14000a6b8:	movaps xmm0,XMMWORD PTR [r13+0x0]
   14000a6bd:	movups XMMWORD PTR [r12+0x50],xmm0
   14000a6c3:	movaps xmm1,XMMWORD PTR [r13+0x10]
   14000a6c8:	movups XMMWORD PTR [r12+0x60],xmm1
   14000a6ce:	movaps xmm0,XMMWORD PTR [r13+0x20]
   14000a6d3:	movups XMMWORD PTR [r12+0x70],xmm0
   14000a6d9:	movaps xmm1,XMMWORD PTR [r13+0x30]
   14000a6de:	movups XMMWORD PTR [r12+0x80],xmm1
   14000a6e7:	mov    eax,DWORD PTR [r13+0x40]
   14000a6eb:	mov    DWORD PTR [r12+0x90],eax
   14000a6f3:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a6fb:	test   rbx,rbx
   14000a6fe:	je     0x14000a716
   14000a700:	mov    rax,QWORD PTR [rbx]
   14000a703:	mov    rdi,QWORD PTR [rax+0x10]
   14000a707:	mov    rcx,rdi
   14000a70a:	call   QWORD PTR [rip+0x27f98]        # 0x1400326a8
   14000a710:	mov    rcx,rbx
   14000a713:	call   rdi
   14000a715:	nop
   14000a716:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000a71e:	test   rbx,rbx
   14000a721:	je     0x14000a739
   14000a723:	mov    rax,QWORD PTR [rbx]
   14000a726:	mov    rdi,QWORD PTR [rax+0x10]
   14000a72a:	mov    rcx,rdi
   14000a72d:	call   QWORD PTR [rip+0x27f75]        # 0x1400326a8
   14000a733:	mov    rcx,rbx
   14000a736:	call   rdi
   14000a738:	nop
   14000a739:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a73e:	test   rbx,rbx
   14000a741:	je     0x14000a759
   14000a743:	mov    rax,QWORD PTR [rbx]
   14000a746:	mov    rdi,QWORD PTR [rax+0x10]
   14000a74a:	mov    rcx,rdi
   14000a74d:	call   QWORD PTR [rip+0x27f55]        # 0x1400326a8
   14000a753:	mov    rcx,rbx
   14000a756:	call   rdi
   14000a758:	nop
   14000a759:	mov    rbx,QWORD PTR [rsp+0x88]
   14000a761:	test   rbx,rbx
   14000a764:	je     0x14000a77c
   14000a766:	mov    rax,QWORD PTR [rbx]
   14000a769:	mov    rdi,QWORD PTR [rax+0x10]
   14000a76d:	mov    rcx,rdi
   14000a770:	call   QWORD PTR [rip+0x27f32]        # 0x1400326a8
   14000a776:	mov    rcx,rbx
   14000a779:	call   rdi
   14000a77b:	nop
   14000a77c:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a784:	mov    ecx,esi
   14000a786:	lock xadd DWORD PTR [rax+0x8],ecx
   14000a78b:	add    ecx,esi
   14000a78d:	cmp    ecx,0x80000000
   14000a793:	jne    0x14000a811
   14000a795:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a79d:	call   0x140029c90
   14000a7a2:	jmp    0x14000a811
   14000a7a4:	mov    ecx,eax
   14000a7a6:	call   0x140029d64
   14000a7ab:	nop
   14000a7ac:	mov    ecx,eax
   14000a7ae:	call   0x140029d64
   14000a7b3:	nop
   14000a7b4:	mov    ecx,eax
   14000a7b6:	call   0x140029d64
   14000a7bb:	nop
   14000a7bc:	mov    ecx,eax
   14000a7be:	call   0x140029d64
   14000a7c3:	int3   
   14000a7c4:	mov    ecx,eax
   14000a7c6:	call   0x140029d64
   14000a7cb:	nop
   14000a7cc:	lea    rax,[rip+0x408a5]        # 0x14004b078
   14000a7d3:	mov    rcx,QWORD PTR [rip+0x4089e]        # 0x14004b078
   14000a7da:	cmp    rcx,rax
   14000a7dd:	je     0x14000a806
   14000a7df:	mov    r14d,0x1
   14000a7e5:	test   BYTE PTR [rcx+0x1c],r14b
   14000a7e9:	je     0x14000a806
   14000a7eb:	lea    edx,[r14+0x9]
   14000a7ef:	lea    r9,[rip+0x2bc8a]        # 0x140036480
   14000a7f6:	lea    r8,[rip+0x29bd3]        # 0x1400343d0
   14000a7fd:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a801:	call   0x1400038e0
   14000a806:	mov    ecx,0x80070057
   14000a80b:	call   0x140029d64
   14000a810:	nop
   14000a811:	mov    rcx,QWORD PTR [rsp+0x2b8]
   14000a819:	xor    rcx,rsp
   14000a81c:	call   0x14002dd00
   14000a821:	add    rsp,0x2c0
   14000a828:	pop    r15
   14000a82a:	pop    r14
   14000a82c:	pop    r13
   14000a82e:	pop    r12
   14000a830:	pop    rdi
   14000a831:	pop    rsi
   14000a832:	pop    rbx
   14000a833:	ret    
   14000a834:	int3   
   14000a835:	int3   
   14000a836:	int3   
   14000a837:	int3   
   14000a838:	int3   
   14000a839:	int3   
   14000a83a:	int3   
   14000a83b:	int3   
   14000a83c:	rex push rbp
   14000a83e:	push   rbx
   14000a83f:	push   rsi
   14000a840:	push   rdi
   14000a841:	push   r12
   14000a843:	push   r13
   14000a845:	push   r14
   14000a847:	push   r15
   14000a849:	lea    rbp,[rsp-0x1f]
   14000a84e:	sub    rsp,0xb8
   14000a855:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14000a85d:	mov    rax,QWORD PTR [rip+0x407bc]        # 0x14004b020
   14000a864:	xor    rax,rsp
   14000a867:	mov    QWORD PTR [rbp+0xf],rax
   14000a86b:	mov    r15,r9
   14000a86e:	mov    r13,r8
   14000a871:	mov    r12,rdx
   14000a874:	mov    rsi,rcx
   14000a877:	lea    rdi,[rcx+0x90]
   14000a87e:	mov    QWORD PTR [rbp-0x59],rdi
   14000a882:	mov    rcx,rdi
   14000a885:	call   0x140029ab0
   14000a88a:	xor    r14d,r14d
   14000a88d:	test   eax,eax
   14000a88f:	jns    0x14000a899
   14000a891:	mov    ecx,eax
   14000a893:	call   0x140029d64
   14000a898:	nop
   14000a899:	test   r9,r9
   14000a89c:	jne    0x14000a8dd
   14000a89e:	lea    r14,[rip+0x407d3]        # 0x14004b078
   14000a8a5:	mov    rcx,QWORD PTR [rip+0x407cc]        # 0x14004b078
   14000a8ac:	cmp    rcx,r14
   14000a8af:	je     0x14000a8d2
   14000a8b1:	test   BYTE PTR [rcx+0x1c],0x1
   14000a8b5:	je     0x14000a8d2
   14000a8b7:	lea    edx,[r9+0xa]
   14000a8bb:	lea    r9,[rip+0x2bd2e]        # 0x1400365f0
   14000a8c2:	lea    r8,[rip+0x29b07]        # 0x1400343d0
   14000a8c9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a8cd:	call   0x1400038e0
   14000a8d2:	mov    ecx,0x80070057
   14000a8d7:	call   0x140029d64
   14000a8dc:	int3   
   14000a8dd:	mov    QWORD PTR [r9],r14
   14000a8e0:	mov    QWORD PTR [rbp-0x61],r14
   14000a8e4:	mov    ebx,r14d
   14000a8e7:	call   0x140025df8
   14000a8ec:	test   al,al
   14000a8ee:	jne    0x14000a91c
   14000a8f0:	mov    DWORD PTR [rbp-0x69],r14d
   14000a8f4:	call   QWORD PTR [rip+0x27b56]        # 0x140032450
   14000a8fa:	mov    rbx,QWORD PTR [rax+0xa0]
   14000a901:	mov    rcx,rbx
   14000a904:	call   QWORD PTR [rip+0x27d9e]        # 0x1400326a8
   14000a90a:	lea    r8,[rbp-0x69]
   14000a90e:	xor    edx,edx
   14000a910:	lea    rcx,[rip+0x2bd21]        # 0x140036638
   14000a917:	call   rbx
   14000a919:	mov    ebx,DWORD PTR [rbp-0x69]
   14000a91c:	mov    r14d,0x30
   14000a922:	mov    r8d,r14d
   14000a925:	xor    edx,edx
   14000a927:	lea    rcx,[rbp-0x49]
   14000a92b:	call   0x14002e2ce
   14000a930:	mov    DWORD PTR [rbp-0x49],r14d
   14000a934:	mov    DWORD PTR [rbp-0x45],ebx
   14000a937:	mov    QWORD PTR [rbp-0x41],r13
   14000a93b:	mov    rax,QWORD PTR [rsi+0x10]
   14000a93f:	mov    rbx,QWORD PTR [rax+0x28]
   14000a943:	mov    rcx,rbx
   14000a946:	call   QWORD PTR [rip+0x27d5c]        # 0x1400326a8
   14000a94c:	lea    rax,[rbp-0x39]
   14000a950:	mov    QWORD PTR [rsp+0x20],rax
   14000a955:	lea    r9,[rbp-0x31]
   14000a959:	lea    r8,[rbp-0x1d]
   14000a95d:	lea    rdx,[rbp-0x21]
   14000a961:	lea    rcx,[rsi+0x10]
   14000a965:	call   rbx
   14000a967:	test   eax,eax
   14000a969:	jns    0x14000a973
   14000a96b:	mov    ecx,eax
   14000a96d:	call   0x140029d64
   14000a972:	int3   
   14000a973:	lea    r14,[rip+0x406fe]        # 0x14004b078
   14000a97a:	mov    rcx,QWORD PTR [rip+0x406f7]        # 0x14004b078
   14000a981:	cmp    rcx,r14
   14000a984:	je     0x14000a9a4
   14000a986:	test   BYTE PTR [rcx+0x1c],0x4
   14000a98a:	je     0x14000a9a4
   14000a98c:	mov    edx,0x2d
   14000a991:	mov    r9,r13
   14000a994:	lea    r8,[rip+0x2c14d]        # 0x140036ae8
   14000a99b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a99f:	call   0x1400071e8
   14000a9a4:	mov    rbx,QWORD PTR [rbp-0x61]
   14000a9a8:	test   rbx,rbx
   14000a9ab:	je     0x14000a9c7
   14000a9ad:	mov    rax,QWORD PTR [rbx]
   14000a9b0:	mov    rsi,QWORD PTR [rax+0x10]
   14000a9b4:	mov    rcx,rsi
   14000a9b7:	call   QWORD PTR [rip+0x27ceb]        # 0x1400326a8
   14000a9bd:	mov    rcx,rbx
   14000a9c0:	call   rsi
   14000a9c2:	and    QWORD PTR [rbp-0x61],0x0
   14000a9c7:	mov    rcx,r12
   14000a9ca:	call   QWORD PTR [rip+0x27cd8]        # 0x1400326a8
   14000a9d0:	lea    rdx,[rbp-0x61]
   14000a9d4:	lea    rcx,[rbp-0x49]
   14000a9d8:	call   r12
   14000a9db:	mov    ebx,eax
   14000a9dd:	test   eax,eax
   14000a9df:	jns    0x14000aa27
   14000a9e1:	mov    rcx,QWORD PTR [rip+0x40690]        # 0x14004b078
   14000a9e8:	cmp    rcx,r14
   14000a9eb:	je     0x14000aa0b
   14000a9ed:	test   BYTE PTR [rcx+0x1c],0x1
   14000a9f1:	je     0x14000aa0b
   14000a9f3:	mov    edx,0x2e
   14000a9f8:	mov    r9d,eax
   14000a9fb:	lea    r8,[rip+0x2c0e6]        # 0x140036ae8
   14000aa02:	mov    rcx,QWORD PTR [rcx+0x10]
   14000aa06:	call   0x140001f70
   14000aa0b:	mov    edx,ebx
   14000aa0d:	lea    rcx,[rbp-0x19]
   14000aa11:	call   0x140002064
   14000aa16:	lea    rdx,[rip+0x3e76b]        # 0x140049188
   14000aa1d:	lea    rcx,[rbp-0x19]
   14000aa21:	call   0x14002e2da
   14000aa26:	int3   
   14000aa27:	mov    rax,QWORD PTR [rbp-0x61]
   14000aa2b:	and    QWORD PTR [rbp-0x61],0x0
   14000aa30:	mov    QWORD PTR [r15],rax
   14000aa33:	or     eax,0xffffffff
   14000aa36:	lock xadd DWORD PTR [rdi+0x8],eax
   14000aa3b:	dec    eax
   14000aa3d:	cmp    eax,0x80000000
   14000aa42:	jne    0x14000aa4d
   14000aa44:	mov    rcx,QWORD PTR [rbp-0x59]
   14000aa48:	call   0x140029c90
   14000aa4d:	mov    rcx,QWORD PTR [rbp+0xf]
   14000aa51:	xor    rcx,rsp
   14000aa54:	call   0x14002dd00
   14000aa59:	add    rsp,0xb8
   14000aa60:	pop    r15
   14000aa62:	pop    r14
   14000aa64:	pop    r13
   14000aa66:	pop    r12
   14000aa68:	pop    rdi
   14000aa69:	pop    rsi
   14000aa6a:	pop    rbx
   14000aa6b:	pop    rbp
   14000aa6c:	ret    
   14000aa6d:	int3   
   14000aa6e:	int3   
   14000aa6f:	int3   
   14000aa70:	int3   
   14000aa71:	int3   
   14000aa72:	int3   
   14000aa73:	int3   
   14000aa74:	mov    rax,rsp
   14000aa77:	push   rbp
   14000aa78:	push   rsi
   14000aa79:	push   rdi
   14000aa7a:	push   r12
   14000aa7c:	push   r13
   14000aa7e:	push   r14
   14000aa80:	push   r15
   14000aa82:	sub    rsp,0x40
   14000aa86:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000aa8e:	mov    QWORD PTR [rax+0x10],rbx
   14000aa92:	mov    r13,r8
   14000aa95:	mov    r14,rdx
   14000aa98:	lea    rbx,[rcx+0x90]
   14000aa9f:	mov    QWORD PTR [rax+0x20],rbx
   14000aaa3:	mov    rcx,rbx
   14000aaa6:	call   0x140029ab0
   14000aaab:	test   eax,eax
   14000aaad:	jns    0x14000aab7
   14000aaaf:	mov    ecx,eax
   14000aab1:	call   0x140029d64
   14000aab6:	nop
   14000aab7:	test   r14,r14
   14000aaba:	je     0x14000adef
   14000aac0:	test   r13,r13
   14000aac3:	je     0x14000adef
   14000aac9:	and    QWORD PTR [r13+0x0],0x0
   14000aace:	mov    ecx,0x148
   14000aad3:	call   0x140023f10
   14000aad8:	mov    QWORD PTR [rsp+0x80],rax
   14000aae0:	mov    rcx,rax
   14000aae3:	call   0x140011538
   14000aae8:	mov    rdi,rax
   14000aaeb:	test   rax,rax
   14000aaee:	je     0x14000ab0c
   14000aaf0:	mov    ecx,DWORD PTR [rax+0x8]
   14000aaf3:	test   ecx,ecx
   14000aaf5:	jne    0x14000ab00
   14000aaf7:	mov    DWORD PTR [rax+0x8],0x1
   14000aafe:	jmp    0x14000ab04
   14000ab00:	lock inc DWORD PTR [rax+0x8]
   14000ab04:	mov    rbx,QWORD PTR [rsp+0x98]
   14000ab0c:	mov    QWORD PTR [rsp+0x38],rax
   14000ab11:	lea    rbp,[rip+0x40560]        # 0x14004b078
   14000ab18:	mov    r15b,0x4
   14000ab1b:	mov    rcx,QWORD PTR [rip+0x40556]        # 0x14004b078
   14000ab22:	cmp    rcx,rbp
   14000ab25:	je     0x14000ab4c
   14000ab27:	test   BYTE PTR [rcx+0x1c],r15b
   14000ab2b:	je     0x14000ab4c
   14000ab2d:	mov    edx,0x2f
   14000ab32:	mov    r9,r14
   14000ab35:	lea    r8,[rip+0x2bfac]        # 0x140036ae8
   14000ab3c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ab40:	call   0x1400071e8
   14000ab45:	mov    rcx,QWORD PTR [rip+0x4052c]        # 0x14004b078
   14000ab4c:	lea    r12,[rdi+0x10]
   14000ab50:	test   r12,r12
   14000ab53:	je     0x14000ac4c
   14000ab59:	and    QWORD PTR [r12],0x0
   14000ab5e:	or     QWORD PTR [rsp+0x80],0xffffffffffffffff
   14000ab67:	lea    rdx,[rsp+0x80]
   14000ab6f:	mov    rcx,r14
   14000ab72:	call   0x140026154
   14000ab77:	mov    esi,eax
   14000ab79:	test   eax,eax
   14000ab7b:	jns    0x14000abc0
   14000ab7d:	test   BYTE PTR [rip+0x43b08],0x1        # 0x14004e68c
   14000ab84:	je     0x14000aba0
   14000ab86:	mov    edx,0xe
   14000ab8b:	mov    DWORD PTR [rsp+0x28],eax
   14000ab8f:	mov    QWORD PTR [rsp+0x20],r14
   14000ab94:	mov    rcx,QWORD PTR [rip+0x43ae5]        # 0x14004e680
   14000ab9b:	call   0x140026098
   14000aba0:	mov    rcx,QWORD PTR [rsp+0x80]
   14000aba8:	cmp    rcx,0xffffffffffffffff
   14000abac:	je     0x14000abb4
   14000abae:	call   QWORD PTR [rip+0x275a4]        # 0x140032158
   14000abb4:	mov    rcx,QWORD PTR [rip+0x404bd]        # 0x14004b078
   14000abbb:	jmp    0x14000ac51
   14000abc0:	mov    rcx,r14
   14000abc3:	call   QWORD PTR [rip+0x27697]        # 0x140032260
   14000abc9:	test   rax,rax
   14000abcc:	jne    0x14000ac2b
   14000abce:	call   QWORD PTR [rip+0x276b4]        # 0x140032288
   14000abd4:	mov    r15d,eax
   14000abd7:	test   BYTE PTR [rip+0x43aae],0x1        # 0x14004e68c
   14000abde:	je     0x14000abfa
   14000abe0:	mov    edx,0xf
   14000abe5:	mov    DWORD PTR [rsp+0x28],eax
   14000abe9:	mov    QWORD PTR [rsp+0x20],r14
   14000abee:	mov    rcx,QWORD PTR [rip+0x43a8b]        # 0x14004e680
   14000abf5:	call   0x140026098
   14000abfa:	movzx  esi,r15w
   14000abfe:	or     esi,0x80070000
   14000ac04:	test   r15d,r15d
   14000ac07:	cmovle esi,r15d
   14000ac0b:	mov    rcx,QWORD PTR [rsp+0x80]
   14000ac13:	cmp    rcx,0xffffffffffffffff
   14000ac17:	je     0x14000ac1f
   14000ac19:	call   QWORD PTR [rip+0x27539]        # 0x140032158
   14000ac1f:	mov    rcx,QWORD PTR [rip+0x40452]        # 0x14004b078
   14000ac26:	mov    r15b,0x4
   14000ac29:	jmp    0x14000ac51
   14000ac2b:	mov    QWORD PTR [r12],rax
   14000ac2f:	mov    rcx,QWORD PTR [rsp+0x80]
   14000ac37:	cmp    rcx,0xffffffffffffffff
   14000ac3b:	je     0x14000ac43
   14000ac3d:	call   QWORD PTR [rip+0x27515]        # 0x140032158
   14000ac43:	mov    rcx,QWORD PTR [rip+0x4042e]        # 0x14004b078
   14000ac4a:	jmp    0x14000ac5d
   14000ac4c:	mov    esi,0x80004003
   14000ac51:	test   esi,esi
   14000ac53:	jns    0x14000ac5d
   14000ac55:	mov    ecx,esi
   14000ac57:	call   0x140029d64
   14000ac5c:	int3   
   14000ac5d:	cmp    rcx,rbp
   14000ac60:	je     0x14000ac7d
   14000ac62:	test   BYTE PTR [rcx+0x1c],r15b
   14000ac66:	je     0x14000ac7d
   14000ac68:	mov    edx,0x30
   14000ac6d:	lea    r8,[rip+0x2be74]        # 0x140036ae8
   14000ac74:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ac78:	call   0x140001f08
   14000ac7d:	lea    rdx,[rip+0x2ba3c]        # 0x1400366c0
   14000ac84:	mov    rcx,QWORD PTR [r12]
   14000ac88:	call   QWORD PTR [rip+0x27612]        # 0x1400322a0
   14000ac8e:	mov    QWORD PTR [rdi+0x18],rax
   14000ac92:	test   rax,rax
   14000ac95:	jne    0x14000aca9
   14000ac97:	call   QWORD PTR [rip+0x275eb]        # 0x140032288
   14000ac9d:	test   eax,eax
   14000ac9f:	je     0x14000aca9
   14000aca1:	mov    ecx,eax
   14000aca3:	call   0x140029e64
   14000aca8:	int3   
   14000aca9:	mov    rcx,QWORD PTR [rip+0x403c8]        # 0x14004b078
   14000acb0:	cmp    rcx,rbp
   14000acb3:	je     0x14000acd0
   14000acb5:	test   BYTE PTR [rcx+0x1c],r15b
   14000acb9:	je     0x14000acd0
   14000acbb:	mov    edx,0x31
   14000acc0:	lea    r8,[rip+0x2be21]        # 0x140036ae8
   14000acc7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000accb:	call   0x140001f08
   14000acd0:	lea    rdx,[rip+0x2ba09]        # 0x1400366e0
   14000acd7:	mov    rcx,QWORD PTR [r12]
   14000acdb:	call   QWORD PTR [rip+0x275bf]        # 0x1400322a0
   14000ace1:	mov    QWORD PTR [rdi+0x20],rax
   14000ace5:	test   rax,rax
   14000ace8:	jne    0x14000acfc
   14000acea:	call   QWORD PTR [rip+0x27598]        # 0x140032288
   14000acf0:	test   eax,eax
   14000acf2:	je     0x14000acfc
   14000acf4:	mov    ecx,eax
   14000acf6:	call   0x140029e64
   14000acfb:	int3   
   14000acfc:	mov    rcx,QWORD PTR [rip+0x40375]        # 0x14004b078
   14000ad03:	cmp    rcx,rbp
   14000ad06:	je     0x14000ad23
   14000ad08:	test   BYTE PTR [rcx+0x1c],r15b
   14000ad0c:	je     0x14000ad23
   14000ad0e:	mov    edx,0x32
   14000ad13:	lea    r8,[rip+0x2bdce]        # 0x140036ae8
   14000ad1a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ad1e:	call   0x140001f08
   14000ad23:	lea    rdx,[rip+0x2b9ce]        # 0x1400366f8
   14000ad2a:	mov    rcx,QWORD PTR [r12]
   14000ad2e:	call   QWORD PTR [rip+0x2756c]        # 0x1400322a0
   14000ad34:	mov    r14,rax
   14000ad37:	test   rax,rax
   14000ad3a:	jne    0x14000ad4e
   14000ad3c:	call   QWORD PTR [rip+0x27546]        # 0x140032288
   14000ad42:	test   eax,eax
   14000ad44:	je     0x14000ad4e
   14000ad46:	mov    ecx,eax
   14000ad48:	call   0x140029e64
   14000ad4d:	int3   
   14000ad4e:	mov    rcx,QWORD PTR [rip+0x40323]        # 0x14004b078
   14000ad55:	cmp    rcx,rbp
   14000ad58:	je     0x14000ad75
   14000ad5a:	test   BYTE PTR [rcx+0x1c],r15b
   14000ad5e:	je     0x14000ad75
   14000ad60:	mov    edx,0x33
   14000ad65:	lea    r8,[rip+0x2bd7c]        # 0x140036ae8
   14000ad6c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ad70:	call   0x140001f08
   14000ad75:	mov    rcx,r14
   14000ad78:	call   QWORD PTR [rip+0x2792a]        # 0x1400326a8
   14000ad7e:	lea    rcx,[rdi+0x28]
   14000ad82:	call   r14
   14000ad85:	cmp    eax,0x80070032
   14000ad8a:	jne    0x14000adbf
   14000ad8c:	mov    rcx,QWORD PTR [rip+0x402e5]        # 0x14004b078
   14000ad93:	cmp    rcx,rbp
   14000ad96:	je     0x14000adb3
   14000ad98:	test   BYTE PTR [rcx+0x1c],0x2
   14000ad9c:	je     0x14000adb3
   14000ad9e:	mov    edx,0x34
   14000ada3:	lea    r8,[rip+0x2bd3e]        # 0x140036ae8
   14000adaa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000adae:	call   0x140001f08
   14000adb3:	xor    eax,eax
   14000adb5:	mov    QWORD PTR [rdi+0x28],rax
   14000adb9:	mov    QWORD PTR [rdi+0x30],rax
   14000adbd:	jmp    0x14000adcb
   14000adbf:	test   eax,eax
   14000adc1:	jns    0x14000adcb
   14000adc3:	mov    ecx,eax
   14000adc5:	call   0x140029d64
   14000adca:	int3   
   14000adcb:	mov    QWORD PTR [r13+0x0],rdi
   14000adcf:	or     eax,0xffffffff
   14000add2:	lock xadd DWORD PTR [rbx+0x8],eax
   14000add7:	dec    eax
   14000add9:	cmp    eax,0x80000000
   14000adde:	jne    0x14000ae2f
   14000ade0:	mov    rcx,QWORD PTR [rsp+0x98]
   14000ade8:	call   0x140029c90
   14000aded:	jmp    0x14000ae2f
   14000adef:	lea    rbp,[rip+0x40282]        # 0x14004b078
   14000adf6:	mov    rcx,QWORD PTR [rip+0x4027b]        # 0x14004b078
   14000adfd:	cmp    rcx,rbp
   14000ae00:	je     0x14000ae24
   14000ae02:	test   BYTE PTR [rcx+0x1c],0x1
   14000ae06:	je     0x14000ae24
   14000ae08:	mov    edx,0xa
   14000ae0d:	lea    r9,[rip+0x2b85c]        # 0x140036670
   14000ae14:	lea    r8,[rip+0x295b5]        # 0x1400343d0
   14000ae1b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ae1f:	call   0x1400038e0
   14000ae24:	mov    ecx,0x80070057
   14000ae29:	call   0x140029d64
   14000ae2e:	nop
   14000ae2f:	mov    rbx,QWORD PTR [rsp+0x88]
   14000ae37:	add    rsp,0x40
   14000ae3b:	pop    r15
   14000ae3d:	pop    r14
   14000ae3f:	pop    r13
   14000ae41:	pop    r12
   14000ae43:	pop    rdi
   14000ae44:	pop    rsi
   14000ae45:	pop    rbp
   14000ae46:	ret    
   14000ae47:	int3   
   14000ae48:	int3   
   14000ae49:	int3   
   14000ae4a:	int3   
   14000ae4b:	int3   
   14000ae4c:	int3   
   14000ae4d:	int3   
   14000ae4e:	int3   
   14000ae4f:	int3   
   14000ae50:	mov    rax,rsp
   14000ae53:	mov    QWORD PTR [rax+0x8],rbx
   14000ae57:	mov    QWORD PTR [rax+0x10],rbp
   14000ae5b:	mov    QWORD PTR [rax+0x18],rsi
   14000ae5f:	mov    QWORD PTR [rax+0x20],rdi
   14000ae63:	push   r14
   14000ae65:	sub    rsp,0x20
   14000ae69:	mov    rdx,QWORD PTR [rcx+0x158]
   14000ae70:	mov    rdi,rcx
   14000ae73:	test   rdx,rdx
   14000ae76:	je     0x14000aeb5
   14000ae78:	xor    r8d,r8d
   14000ae7b:	xor    ecx,ecx
   14000ae7d:	call   QWORD PTR [rip+0x272bd]        # 0x140032140
   14000ae83:	test   eax,eax
   14000ae85:	jne    0x14000aeb5
   14000ae87:	mov    rcx,QWORD PTR [rip+0x401ea]        # 0x14004b078
   14000ae8e:	lea    rax,[rip+0x401e3]        # 0x14004b078
   14000ae95:	cmp    rcx,rax
   14000ae98:	je     0x14000aeb5
   14000ae9a:	test   BYTE PTR [rcx+0x1c],0x1
   14000ae9e:	je     0x14000aeb5
   14000aea0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000aea4:	lea    r8,[rip+0x2bc3d]        # 0x140036ae8
   14000aeab:	mov    edx,0x35
   14000aeb0:	call   0x140001f08
   14000aeb5:	lea    rcx,[rdi+0x90]
   14000aebc:	call   0x140029b84
   14000aec1:	xor    edx,edx
   14000aec3:	mov    rcx,rdi
   14000aec6:	call   0x14000b71c
   14000aecb:	lea    rbp,[rdi+0x108]
   14000aed2:	mov    rcx,rbp
   14000aed5:	call   QWORD PTR [rip+0x2722d]        # 0x140032108
   14000aedb:	cmp    QWORD PTR [rdi+0xe0],0x0
   14000aee3:	jbe    0x14000af6d
   14000aee9:	lea    r14,[rdi+0xd0]
   14000aef0:	mov    rax,QWORD PTR [r14]
   14000aef3:	mov    rsi,QWORD PTR [rax+0x10]
   14000aef7:	test   rsi,rsi
   14000aefa:	je     0x14000af10
   14000aefc:	mov    eax,DWORD PTR [rsi+0x8]
   14000aeff:	test   eax,eax
   14000af01:	jne    0x14000af0c
   14000af03:	mov    DWORD PTR [rsi+0x8],0x1
   14000af0a:	jmp    0x14000af10
   14000af0c:	lock inc DWORD PTR [rsi+0x8]
   14000af10:	mov    rcx,QWORD PTR [r14]
   14000af13:	mov    rax,QWORD PTR [rcx]
   14000af16:	mov    QWORD PTR [r14],rax
   14000af19:	mov    QWORD PTR [rax+0x8],r14
   14000af1d:	dec    QWORD PTR [r14+0x10]
   14000af21:	call   QWORD PTR [rip+0x276a1]        # 0x1400325c8
   14000af27:	test   rsi,rsi
   14000af2a:	je     0x14000af63
   14000af2c:	mov    eax,DWORD PTR [rsi+0x8]
   14000af2f:	cmp    eax,0x1
   14000af32:	jne    0x14000af3d
   14000af34:	mov    DWORD PTR [rsi+0x8],0x0
   14000af3b:	jmp    0x14000af4a
   14000af3d:	or     eax,0xffffffff
   14000af40:	lock xadd DWORD PTR [rsi+0x8],eax
   14000af45:	sub    eax,0x1
   14000af48:	jg     0x14000af63
   14000af4a:	mov    rax,QWORD PTR [rsi]
   14000af4d:	mov    rbx,QWORD PTR [rax]
   14000af50:	mov    rcx,rbx
   14000af53:	call   QWORD PTR [rip+0x2774f]        # 0x1400326a8
   14000af59:	mov    edx,0x1
   14000af5e:	mov    rcx,rsi
   14000af61:	call   rbx
   14000af63:	cmp    QWORD PTR [rdi+0xe0],0x0
   14000af6b:	ja     0x14000aef0
   14000af6d:	mov    rcx,rbp
   14000af70:	call   QWORD PTR [rip+0x27182]        # 0x1400320f8
   14000af76:	lea    rbx,[rdi+0x168]
   14000af7d:	mov    rcx,rbx
   14000af80:	call   QWORD PTR [rip+0x27182]        # 0x140032108
   14000af86:	mov    rcx,QWORD PTR [rdi+0xf8]
   14000af8d:	test   rcx,rcx
   14000af90:	je     0x14000afa7
   14000af92:	call   QWORD PTR [rip+0x273b8]        # 0x140032350
   14000af98:	and    QWORD PTR [rdi+0xf8],0x0
   14000afa0:	mov    BYTE PTR [rdi+0xf0],0x0
   14000afa7:	mov    rcx,rbx
   14000afaa:	call   QWORD PTR [rip+0x27148]        # 0x1400320f8
   14000afb0:	lea    rcx,[rdi+0x200]
   14000afb7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000afbc:	mov    rbp,QWORD PTR [rsp+0x38]
   14000afc1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000afc6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000afcb:	add    rsp,0x20
   14000afcf:	pop    r14
   14000afd1:	jmp    0x140015e54
   14000afd6:	int3   
   14000afd7:	int3   
   14000afd8:	int3   
   14000afd9:	int3   
   14000afda:	int3   
   14000afdb:	int3   
   14000afdc:	int3   
   14000afdd:	int3   
   14000afde:	int3   
   14000afdf:	int3   
   14000afe0:	mov    rax,rsp
   14000afe3:	push   rbp
   14000afe4:	push   rdi
   14000afe5:	push   r12
   14000afe7:	push   r14
   14000afe9:	push   r15
   14000afeb:	mov    rbp,rsp
   14000afee:	sub    rsp,0x50
   14000aff2:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   14000affa:	mov    QWORD PTR [rax+0x10],rbx
   14000affe:	mov    QWORD PTR [rax+0x18],rsi
   14000b002:	mov    r12b,r8b
   14000b005:	mov    rsi,rdx
   14000b008:	mov    rdi,rcx
   14000b00b:	add    rcx,0x90
   14000b012:	mov    QWORD PTR [rbp-0x18],rcx
   14000b016:	call   0x140029ab0
   14000b01b:	test   eax,eax
   14000b01d:	jns    0x14000b027
   14000b01f:	mov    ecx,eax
   14000b021:	call   0x140029d64
   14000b026:	nop
   14000b027:	test   rsi,rsi
   14000b02a:	jne    0x14000b06a
   14000b02c:	lea    rax,[rip+0x40045]        # 0x14004b078
   14000b033:	mov    rcx,QWORD PTR [rip+0x4003e]        # 0x14004b078
   14000b03a:	cmp    rcx,rax
   14000b03d:	je     0x14000b05f
   14000b03f:	test   BYTE PTR [rcx+0x1c],0x1
   14000b043:	je     0x14000b05f
   14000b045:	lea    edx,[rsi+0xa]
   14000b048:	lea    r9,[rip+0x2b6c9]        # 0x140036718
   14000b04f:	lea    r8,[rip+0x2937a]        # 0x1400343d0
   14000b056:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b05a:	call   0x1400038e0
   14000b05f:	mov    ecx,0x80070057
   14000b064:	call   0x140029d64
   14000b069:	int3   
   14000b06a:	mov    BYTE PTR [rbp+0x30],0x0
   14000b06e:	lea    rdx,[rbp+0x30]
   14000b072:	mov    rcx,rdi
   14000b075:	call   0x140007ccc
   14000b07a:	nop
   14000b07b:	lea    rcx,[rdi+0x60]
   14000b07f:	call   QWORD PTR [rip+0x27083]        # 0x140032108
   14000b085:	xor    ebx,ebx
   14000b087:	mov    QWORD PTR [rbp+0x48],rbx
   14000b08b:	lea    r15,[rdi+0x108]
   14000b092:	mov    rcx,r15
   14000b095:	call   QWORD PTR [rip+0x2706d]        # 0x140032108
   14000b09b:	cmp    QWORD PTR [rdi+0xe0],rbx
   14000b0a2:	je     0x14000b0cb
   14000b0a4:	mov    rax,QWORD PTR [rdi+0xd8]
   14000b0ab:	mov    rax,QWORD PTR [rax+0x10]
   14000b0af:	mov    QWORD PTR [rbp+0x48],rax
   14000b0b3:	mov    ecx,DWORD PTR [rax+0x8]
   14000b0b6:	test   ecx,ecx
   14000b0b8:	jne    0x14000b0c3
   14000b0ba:	mov    DWORD PTR [rax+0x8],0x1
   14000b0c1:	jmp    0x14000b0c7
   14000b0c3:	lock inc DWORD PTR [rax+0x8]
   14000b0c7:	mov    rbx,QWORD PTR [rbp+0x48]
   14000b0cb:	mov    rcx,r15
   14000b0ce:	call   QWORD PTR [rip+0x27024]        # 0x1400320f8
   14000b0d4:	lea    rcx,[rdi+0x60]
   14000b0d8:	call   QWORD PTR [rip+0x2701a]        # 0x1400320f8
   14000b0de:	test   rbx,rbx
   14000b0e1:	jne    0x14000b119
   14000b0e3:	lea    rax,[rip+0x3ff8e]        # 0x14004b078
   14000b0ea:	mov    rcx,QWORD PTR [rip+0x3ff87]        # 0x14004b078
   14000b0f1:	cmp    rcx,rax
   14000b0f4:	je     0x14000b115
   14000b0f6:	test   BYTE PTR [rcx+0x1c],0x1
   14000b0fa:	je     0x14000b115
   14000b0fc:	lea    edx,[rbx+0x36]
   14000b0ff:	mov    r9d,0x8000ffff
   14000b105:	lea    r8,[rip+0x2b9dc]        # 0x140036ae8
   14000b10c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b110:	call   0x140001f70
   14000b115:	xor    esi,esi
   14000b117:	jmp    0x14000b145
   14000b119:	and    QWORD PTR [rbp-0x20],0x0
   14000b11e:	mov    al,BYTE PTR [rbp+0x30]
   14000b121:	mov    BYTE PTR [rsp+0x28],al
   14000b125:	mov    BYTE PTR [rsp+0x20],r12b
   14000b12a:	mov    r9,rbx
   14000b12d:	mov    r8,rsi
   14000b130:	mov    rdx,rdi
   14000b133:	lea    rcx,[rbp-0x20]
   14000b137:	call   0x14000eadc
   14000b13c:	mov    rsi,QWORD PTR [rbp-0x20]
   14000b140:	and    QWORD PTR [rbp-0x20],0x0
   14000b145:	or     r14d,0xffffffff
   14000b149:	test   rbx,rbx
   14000b14c:	je     0x14000b18c
   14000b14e:	mov    eax,DWORD PTR [rbx+0x8]
   14000b151:	cmp    eax,0x1
   14000b154:	jne    0x14000b15f
   14000b156:	mov    DWORD PTR [rbx+0x8],0x0
   14000b15d:	jmp    0x14000b16e
   14000b15f:	mov    eax,r14d
   14000b162:	lock xadd DWORD PTR [rbx+0x8],eax
   14000b167:	add    eax,r14d
   14000b16a:	test   eax,eax
   14000b16c:	jg     0x14000b18c
   14000b16e:	mov    rbx,QWORD PTR [rbp+0x48]
   14000b172:	mov    rax,QWORD PTR [rbx]
   14000b175:	mov    rdi,QWORD PTR [rax]
   14000b178:	mov    rcx,rdi
   14000b17b:	call   QWORD PTR [rip+0x27527]        # 0x1400326a8
   14000b181:	mov    edx,0x1
   14000b186:	mov    rcx,rbx
   14000b189:	call   rdi
   14000b18b:	nop
   14000b18c:	mov    rcx,QWORD PTR [rbp-0x18]
   14000b190:	mov    edx,r14d
   14000b193:	lock xadd DWORD PTR [rcx+0x8],edx
   14000b198:	add    edx,r14d
   14000b19b:	cmp    edx,0x80000000
   14000b1a1:	jne    0x14000b1ac
   14000b1a3:	mov    rcx,QWORD PTR [rbp-0x18]
   14000b1a7:	call   0x140029c90
   14000b1ac:	mov    rax,rsi
   14000b1af:	lea    r11,[rsp+0x50]
   14000b1b4:	mov    rbx,QWORD PTR [r11+0x38]
   14000b1b8:	mov    rsi,QWORD PTR [r11+0x40]
   14000b1bc:	mov    rsp,r11
   14000b1bf:	pop    r15
   14000b1c1:	pop    r14
   14000b1c3:	pop    r12
   14000b1c5:	pop    rdi
   14000b1c6:	pop    rbp
   14000b1c7:	ret    
   14000b1c8:	int3   
   14000b1c9:	int3   
   14000b1ca:	int3   
   14000b1cb:	int3   
   14000b1cc:	int3   
   14000b1cd:	int3   
   14000b1ce:	int3   
   14000b1cf:	int3   
   14000b1d0:	rex push rbp
   14000b1d2:	push   rbx
   14000b1d3:	push   rsi
   14000b1d4:	push   rdi
   14000b1d5:	push   r12
   14000b1d7:	push   r14
   14000b1d9:	push   r15
   14000b1db:	lea    rbp,[rsp-0x27]
   14000b1e0:	sub    rsp,0xc0
   14000b1e7:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   14000b1ef:	mov    rax,QWORD PTR [rip+0x3fe2a]        # 0x14004b020
   14000b1f6:	xor    rax,rsp
   14000b1f9:	mov    QWORD PTR [rbp+0x17],rax
   14000b1fd:	mov    r15,r8
   14000b200:	mov    r14,rdx
   14000b203:	mov    rsi,rcx
   14000b206:	lea    rbx,[rcx+0x90]
   14000b20d:	mov    QWORD PTR [rbp-0x51],rbx
   14000b211:	mov    rcx,rbx
   14000b214:	call   0x140029ab0
   14000b219:	xor    r12d,r12d
   14000b21c:	test   eax,eax
   14000b21e:	jns    0x14000b228
   14000b220:	mov    ecx,eax
   14000b222:	call   0x140029d64
   14000b227:	nop
   14000b228:	test   r14,r14
   14000b22b:	je     0x14000b337
   14000b231:	test   r15,r15
   14000b234:	je     0x14000b337
   14000b23a:	mov    rax,QWORD PTR [rsi+0x10]
   14000b23e:	mov    rdi,QWORD PTR [rax+0x28]
   14000b242:	mov    rcx,rdi
   14000b245:	call   QWORD PTR [rip+0x2745d]        # 0x1400326a8
   14000b24b:	lea    rax,[rbp-0x41]
   14000b24f:	mov    QWORD PTR [rsp+0x20],rax
   14000b254:	lea    r9,[rbp+0x7]
   14000b258:	lea    r8,[rbp-0x59]
   14000b25c:	lea    rdx,[rbp-0x69]
   14000b260:	lea    rcx,[rsi+0x10]
   14000b264:	call   rdi
   14000b266:	test   eax,eax
   14000b268:	jns    0x14000b272
   14000b26a:	mov    ecx,eax
   14000b26c:	call   0x140029d64
   14000b271:	int3   
   14000b272:	mov    QWORD PTR [rbp-0x61],r12
   14000b276:	lea    rcx,[rbp-0x19]
   14000b27a:	call   0x140016f0c
   14000b27f:	mov    rdi,rax
   14000b282:	mov    esi,0x7
   14000b287:	mov    QWORD PTR [rbp-0x21],rsi
   14000b28b:	mov    QWORD PTR [rbp-0x29],r12
   14000b28f:	mov    WORD PTR [rbp-0x39],r12w
   14000b294:	lea    rax,[rbp-0x39]
   14000b298:	cmp    rax,rdi
   14000b29b:	je     0x14000b2c9
   14000b29d:	mov    rdx,rdi
   14000b2a0:	lea    rcx,[rbp-0x39]
   14000b2a4:	call   0x14000db60
   14000b2a9:	mov    rcx,QWORD PTR [rbp-0x29]
   14000b2ad:	mov    rax,QWORD PTR [rdi+0x10]
   14000b2b1:	mov    QWORD PTR [rbp-0x29],rax
   14000b2b5:	mov    QWORD PTR [rdi+0x10],rcx
   14000b2b9:	mov    rcx,QWORD PTR [rbp-0x21]
   14000b2bd:	mov    rax,QWORD PTR [rdi+0x18]
   14000b2c1:	mov    QWORD PTR [rbp-0x21],rax
   14000b2c5:	mov    QWORD PTR [rdi+0x18],rcx
   14000b2c9:	cmp    QWORD PTR [rbp-0x1],0x8
   14000b2ce:	jb     0x14000b2da
   14000b2d0:	mov    rcx,QWORD PTR [rbp-0x19]
   14000b2d4:	call   QWORD PTR [rip+0x272ee]        # 0x1400325c8
   14000b2da:	mov    QWORD PTR [rbp-0x1],rsi
   14000b2de:	mov    QWORD PTR [rbp-0x9],r12
   14000b2e2:	mov    WORD PTR [rbp-0x19],r12w
   14000b2e7:	lea    r9,[rbp-0x61]
   14000b2eb:	mov    r8,r14
   14000b2ee:	mov    ecx,DWORD PTR [rbp-0x69]
   14000b2f1:	call   0x140026300
   14000b2f6:	mov    rax,QWORD PTR [rbp-0x61]
   14000b2fa:	mov    QWORD PTR [r15],rax
   14000b2fd:	cmp    QWORD PTR [rbp-0x21],0x8
   14000b302:	jb     0x14000b30e
   14000b304:	mov    rcx,QWORD PTR [rbp-0x39]
   14000b308:	call   QWORD PTR [rip+0x272ba]        # 0x1400325c8
   14000b30e:	mov    QWORD PTR [rbp-0x21],rsi
   14000b312:	mov    QWORD PTR [rbp-0x29],r12
   14000b316:	mov    WORD PTR [rbp-0x39],r12w
   14000b31b:	or     eax,0xffffffff
   14000b31e:	lock xadd DWORD PTR [rbx+0x8],eax
   14000b323:	dec    eax
   14000b325:	cmp    eax,0x80000000
   14000b32a:	jne    0x14000b377
   14000b32c:	mov    rcx,QWORD PTR [rbp-0x51]
   14000b330:	call   0x140029c90
   14000b335:	jmp    0x14000b377
   14000b337:	lea    rax,[rip+0x3fd3a]        # 0x14004b078
   14000b33e:	mov    rcx,QWORD PTR [rip+0x3fd33]        # 0x14004b078
   14000b345:	cmp    rcx,rax
   14000b348:	je     0x14000b36c
   14000b34a:	test   BYTE PTR [rcx+0x1c],0x1
   14000b34e:	je     0x14000b36c
   14000b350:	mov    edx,0xa
   14000b355:	lea    r9,[rip+0x2b404]        # 0x140036760
   14000b35c:	lea    r8,[rip+0x2906d]        # 0x1400343d0
   14000b363:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b367:	call   0x1400038e0
   14000b36c:	mov    ecx,0x80070057
   14000b371:	call   0x140029d64
   14000b376:	nop
   14000b377:	mov    rcx,QWORD PTR [rbp+0x17]
   14000b37b:	xor    rcx,rsp
   14000b37e:	call   0x14002dd00
   14000b383:	add    rsp,0xc0
   14000b38a:	pop    r15
   14000b38c:	pop    r14
   14000b38e:	pop    r12
   14000b390:	pop    rdi
   14000b391:	pop    rsi
   14000b392:	pop    rbx
   14000b393:	pop    rbp
   14000b394:	ret    
   14000b395:	int3   
   14000b396:	int3   
   14000b397:	int3   
   14000b398:	int3   
   14000b399:	int3   
   14000b39a:	int3   
   14000b39b:	int3   
   14000b39c:	mov    rax,rsp
   14000b39f:	push   rbp
   14000b3a0:	push   rsi
   14000b3a1:	push   rdi
   14000b3a2:	push   r12
   14000b3a4:	push   r13
   14000b3a6:	push   r14
   14000b3a8:	push   r15
   14000b3aa:	sub    rsp,0xb0
   14000b3b1:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   14000b3b9:	mov    QWORD PTR [rax+0x8],rbx
   14000b3bd:	mov    rax,QWORD PTR [rip+0x3fc5c]        # 0x14004b020
   14000b3c4:	xor    rax,rsp
   14000b3c7:	mov    QWORD PTR [rsp+0xa8],rax
   14000b3cf:	mov    rdi,r9
   14000b3d2:	mov    r14,r8
   14000b3d5:	mov    r9,rdx
   14000b3d8:	mov    rsi,QWORD PTR [rsp+0x110]
   14000b3e0:	lea    rbx,[rcx+0x90]
   14000b3e7:	mov    QWORD PTR [rsp+0x70],rbx
   14000b3ec:	mov    rcx,rbx
   14000b3ef:	call   0x140029ab0
   14000b3f4:	test   eax,eax
   14000b3f6:	jns    0x14000b400
   14000b3f8:	mov    ecx,eax
   14000b3fa:	call   0x140029d64
   14000b3ff:	nop
   14000b400:	test   rdi,rdi
   14000b403:	je     0x14000b6a6
   14000b409:	test   rsi,rsi
   14000b40c:	je     0x14000b6a6
   14000b412:	mov    rax,QWORD PTR [r9]
   14000b415:	test   rax,rax
   14000b418:	je     0x14000b41f
   14000b41a:	mov    rcx,QWORD PTR [rax]
   14000b41d:	jmp    0x14000b421
   14000b41f:	xor    ecx,ecx
   14000b421:	call   0x14000b91c
   14000b426:	mov    rbp,rax
   14000b429:	mov    QWORD PTR [rdi],rax
   14000b42c:	mov    rax,QWORD PTR [r14]
   14000b42f:	test   rax,rax
   14000b432:	je     0x14000b439
   14000b434:	mov    rcx,QWORD PTR [rax]
   14000b437:	jmp    0x14000b43b
   14000b439:	xor    ecx,ecx
   14000b43b:	call   0x14000b91c
   14000b440:	mov    rdi,rax
   14000b443:	mov    QWORD PTR [rsi],rax
   14000b446:	movzx  r13d,ax
   14000b44a:	mov    r15d,eax
   14000b44d:	shr    r15d,0x10
   14000b451:	shr    rdi,0x20
   14000b455:	movzx  eax,di
   14000b458:	mov    DWORD PTR [rsp+0x60],eax
   14000b45c:	shr    edi,0x10
   14000b45f:	movzx  ecx,bp
   14000b462:	mov    DWORD PTR [rsp+0x68],ecx
   14000b466:	mov    r12d,ebp
   14000b469:	shr    r12d,0x10
   14000b46d:	mov    r14,rbp
   14000b470:	shr    r14,0x20
   14000b474:	movzx  edx,r14w
   14000b478:	mov    DWORD PTR [rsp+0x64],edx
   14000b47c:	shr    r14d,0x10
   14000b480:	mov    DWORD PTR [rsp+0x40],r13d
   14000b485:	mov    DWORD PTR [rsp+0x38],r15d
   14000b48a:	mov    DWORD PTR [rsp+0x30],eax
   14000b48e:	mov    DWORD PTR [rsp+0x28],edi
   14000b492:	mov    DWORD PTR [rsp+0x20],ecx
   14000b496:	mov    r9d,r12d
   14000b499:	mov    r8d,edx
   14000b49c:	mov    edx,r14d
   14000b49f:	lea    rcx,[rip+0x2b36a]        # 0x140036810
   14000b4a6:	call   QWORD PTR [rip+0x26e84]        # 0x140032330
   14000b4ac:	lea    rsi,[rip+0x3fbc5]        # 0x14004b078
   14000b4b3:	mov    rcx,QWORD PTR [rip+0x3fbbe]        # 0x14004b078
   14000b4ba:	cmp    rcx,rsi
   14000b4bd:	je     0x14000b501
   14000b4bf:	test   BYTE PTR [rcx+0x1c],0x2
   14000b4c3:	je     0x14000b501
   14000b4c5:	mov    edx,0x37
   14000b4ca:	mov    DWORD PTR [rsp+0x50],r13d
   14000b4cf:	mov    DWORD PTR [rsp+0x48],r15d
   14000b4d4:	mov    eax,DWORD PTR [rsp+0x60]
   14000b4d8:	mov    DWORD PTR [rsp+0x40],eax
   14000b4dc:	mov    DWORD PTR [rsp+0x38],edi
   14000b4e0:	mov    eax,DWORD PTR [rsp+0x68]
   14000b4e4:	mov    DWORD PTR [rsp+0x30],eax
   14000b4e8:	mov    DWORD PTR [rsp+0x28],r12d
   14000b4ed:	mov    eax,DWORD PTR [rsp+0x64]
   14000b4f1:	mov    DWORD PTR [rsp+0x20],eax
   14000b4f5:	mov    r9d,r14d
   14000b4f8:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b4fc:	call   0x1400070b0
   14000b501:	call   0x140025df8
   14000b506:	xor    r15d,r15d
   14000b509:	test   al,al
   14000b50b:	jne    0x14000b58a
   14000b50d:	mov    DWORD PTR [rsp+0x60],r15d
   14000b512:	call   QWORD PTR [rip+0x26f38]        # 0x140032450
   14000b518:	mov    rdi,QWORD PTR [rax+0xa0]
   14000b51f:	mov    rcx,rdi
   14000b522:	call   QWORD PTR [rip+0x27180]        # 0x1400326a8
   14000b528:	lea    r8,[rsp+0x60]
   14000b52d:	xor    edx,edx
   14000b52f:	lea    rcx,[rip+0x2b39a]        # 0x1400368d0
   14000b536:	call   rdi
   14000b538:	cmp    DWORD PTR [rsp+0x60],r15d
   14000b53d:	je     0x14000b58a
   14000b53f:	mov    rcx,QWORD PTR [rip+0x3fb32]        # 0x14004b078
   14000b546:	cmp    rcx,rsi
   14000b549:	je     0x14000b566
   14000b54b:	test   BYTE PTR [rcx+0x1c],0x2
   14000b54f:	je     0x14000b566
   14000b551:	lea    edx,[r15+0x38]
   14000b555:	lea    r8,[rip+0x2b58c]        # 0x140036ae8
   14000b55c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b560:	call   0x140001f08
   14000b565:	nop
   14000b566:	or     eax,0xffffffff
   14000b569:	lock xadd DWORD PTR [rbx+0x8],eax
   14000b56e:	dec    eax
   14000b570:	cmp    eax,0x80000000
   14000b575:	jne    0x14000b6e9
   14000b57b:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b580:	call   0x140029c90
   14000b585:	jmp    0x14000b6e9
   14000b58a:	movabs rax,0x2000120f70000
   14000b594:	cmp    rbp,rax
   14000b597:	jae    0x14000b566
   14000b599:	mov    edi,0x1
   14000b59e:	mov    r12d,0x20f7
   14000b5a4:	mov    r14,QWORD PTR [rip+0x3facd]        # 0x14004b078
   14000b5ab:	cmp    r14,rsi
   14000b5ae:	je     0x14000b620
   14000b5b0:	test   BYTE PTR [r14+0x1c],dil
   14000b5b4:	je     0x14000b620
   14000b5b6:	mov    rcx,rbp
   14000b5b9:	call   0x14000de00
   14000b5be:	mov    edx,eax
   14000b5c0:	call   0x14000dde0
   14000b5c5:	mov    r8d,eax
   14000b5c8:	mov    ecx,edx
   14000b5ca:	call   0x14000de0c
   14000b5cf:	movzx  ebx,ax
   14000b5d2:	call   0x14000ddf0
   14000b5d7:	movzx  r11d,ax
   14000b5db:	mov    ecx,r8d
   14000b5de:	call   0x14000de0c
   14000b5e3:	movzx  r10d,ax
   14000b5e7:	call   0x14000ddf0
   14000b5ec:	movzx  r9d,ax
   14000b5f0:	lea    edx,[rdi+0x38]
   14000b5f3:	mov    DWORD PTR [rsp+0x50],r15d
   14000b5f8:	mov    DWORD PTR [rsp+0x48],r12d
   14000b5fd:	mov    DWORD PTR [rsp+0x40],edi
   14000b601:	mov    DWORD PTR [rsp+0x38],0x2
   14000b609:	mov    DWORD PTR [rsp+0x30],ebx
   14000b60d:	mov    DWORD PTR [rsp+0x28],r11d
   14000b612:	mov    DWORD PTR [rsp+0x20],r10d
   14000b617:	mov    rcx,QWORD PTR [r14+0x10]
   14000b61b:	call   0x1400070b0
   14000b620:	mov    rcx,rbp
   14000b623:	call   0x14000de00
   14000b628:	mov    edx,eax
   14000b62a:	call   0x14000dde0
   14000b62f:	mov    r10d,eax
   14000b632:	mov    ecx,edx
   14000b634:	call   0x14000de0c
   14000b639:	movzx  r11d,ax
   14000b63d:	call   0x14000ddf0
   14000b642:	movzx  r9d,ax
   14000b646:	mov    ecx,r10d
   14000b649:	call   0x14000de0c
   14000b64e:	movzx  r8d,ax
   14000b652:	call   0x14000ddf0
   14000b657:	movzx  edx,ax
   14000b65a:	mov    DWORD PTR [rsp+0x40],r15d
   14000b65f:	mov    DWORD PTR [rsp+0x38],r12d
   14000b664:	mov    DWORD PTR [rsp+0x30],edi
   14000b668:	mov    DWORD PTR [rsp+0x28],0x2
   14000b670:	mov    DWORD PTR [rsp+0x20],r11d
   14000b675:	lea    rcx,[rip+0x2b2b4]        # 0x140036930
   14000b67c:	call   QWORD PTR [rip+0x26cae]        # 0x140032330
   14000b682:	mov    edx,edi
   14000b684:	lea    rcx,[rsp+0x80]
   14000b68c:	call   0x140002064
   14000b691:	lea    rdx,[rip+0x3daf0]        # 0x140049188
   14000b698:	lea    rcx,[rsp+0x80]
   14000b6a0:	call   0x14002e2da
   14000b6a5:	int3   
   14000b6a6:	lea    rsi,[rip+0x3f9cb]        # 0x14004b078
   14000b6ad:	mov    rcx,QWORD PTR [rip+0x3f9c4]        # 0x14004b078
   14000b6b4:	cmp    rcx,rsi
   14000b6b7:	je     0x14000b6de
   14000b6b9:	mov    edi,0x1
   14000b6be:	test   BYTE PTR [rcx+0x1c],dil
   14000b6c2:	je     0x14000b6de
   14000b6c4:	lea    edx,[rdi+0x9]
   14000b6c7:	lea    r9,[rip+0x2b0f2]        # 0x1400367c0
   14000b6ce:	lea    r8,[rip+0x28cfb]        # 0x1400343d0
   14000b6d5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b6d9:	call   0x1400038e0
   14000b6de:	mov    ecx,0x80070057
   14000b6e3:	call   0x140029d64
   14000b6e8:	nop
   14000b6e9:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000b6f1:	xor    rcx,rsp
   14000b6f4:	call   0x14002dd00
   14000b6f9:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000b701:	add    rsp,0xb0
   14000b708:	pop    r15
   14000b70a:	pop    r14
   14000b70c:	pop    r13
   14000b70e:	pop    r12
   14000b710:	pop    rdi
   14000b711:	pop    rsi
   14000b712:	pop    rbp
   14000b713:	ret    
   14000b714:	int3   
   14000b715:	int3   
   14000b716:	int3   
   14000b717:	int3   
   14000b718:	int3   
   14000b719:	int3   
   14000b71a:	int3   
   14000b71b:	int3   
   14000b71c:	mov    rax,rsp
   14000b71f:	push   rbp
   14000b720:	push   r12
   14000b722:	push   r14
   14000b724:	mov    rbp,rsp
   14000b727:	sub    rsp,0x60
   14000b72b:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   14000b733:	mov    QWORD PTR [rax+0x10],rbx
   14000b737:	mov    QWORD PTR [rax+0x18],rsi
   14000b73b:	mov    QWORD PTR [rax+0x20],rdi
   14000b73f:	mov    r14,rdx
   14000b742:	mov    rdi,rcx
   14000b745:	and    QWORD PTR [rbp-0x18],0x0
   14000b74a:	lea    rax,[rbp-0x28]
   14000b74e:	mov    QWORD PTR [rbp-0x20],rax
   14000b752:	lea    rax,[rbp-0x28]
   14000b756:	mov    QWORD PTR [rbp-0x28],rax
   14000b75a:	lea    rbx,[rcx+0x108]
   14000b761:	mov    QWORD PTR [rbp+0x20],rbx
   14000b765:	mov    rcx,rbx
   14000b768:	call   QWORD PTR [rip+0x2699a]        # 0x140032108
   14000b76e:	nop
   14000b76f:	or     r12,0xffffffffffffffff
   14000b773:	cmp    QWORD PTR [rdi+0xe0],r14
   14000b77a:	jbe    0x14000b800
   14000b780:	lea    rax,[rbp-0x10]
   14000b784:	mov    QWORD PTR [rbp-0x38],rax
   14000b788:	and    QWORD PTR [rbp-0x30],0x0
   14000b78d:	xor    esi,esi
   14000b78f:	mov    rcx,rbx
   14000b792:	call   QWORD PTR [rip+0x26970]        # 0x140032108
   14000b798:	cmp    QWORD PTR [rdi+0xe0],rsi
   14000b79f:	je     0x14000b7c6
   14000b7a1:	lea    rdx,[rdi+0xd0]
   14000b7a8:	mov    rax,QWORD PTR [rdx]
   14000b7ab:	mov    rsi,QWORD PTR [rax+0x10]
   14000b7af:	mov    rcx,rax
   14000b7b2:	mov    rax,QWORD PTR [rax]
   14000b7b5:	mov    QWORD PTR [rdx],rax
   14000b7b8:	mov    QWORD PTR [rax+0x8],rdx
   14000b7bc:	add    QWORD PTR [rdx+0x10],r12
   14000b7c0:	call   QWORD PTR [rip+0x26e02]        # 0x1400325c8
   14000b7c6:	mov    rcx,rbx
   14000b7c9:	call   QWORD PTR [rip+0x26929]        # 0x1400320f8
   14000b7cf:	mov    ecx,0x18
   14000b7d4:	call   0x140023f10
   14000b7d9:	mov    QWORD PTR [rax+0x10],rsi
   14000b7dd:	mov    rdx,QWORD PTR [rbp-0x20]
   14000b7e1:	lea    rcx,[rbp-0x28]
   14000b7e5:	mov    QWORD PTR [rax],rcx
   14000b7e8:	mov    QWORD PTR [rax+0x8],rdx
   14000b7ec:	mov    QWORD PTR [rdx],rax
   14000b7ef:	mov    QWORD PTR [rbp-0x20],rax
   14000b7f3:	inc    QWORD PTR [rbp-0x18]
   14000b7f7:	cmp    QWORD PTR [rdi+0xe0],r14
   14000b7fe:	ja     0x14000b78d
   14000b800:	mov    rcx,rbx
   14000b803:	call   QWORD PTR [rip+0x268ef]        # 0x1400320f8
   14000b809:	jmp    0x14000b8a4
   14000b80e:	mov    rcx,QWORD PTR [rbp-0x28]
   14000b812:	mov    rdi,QWORD PTR [rcx+0x10]
   14000b816:	mov    rax,QWORD PTR [rcx]
   14000b819:	mov    QWORD PTR [rbp-0x28],rax
   14000b81d:	lea    rdx,[rbp-0x28]
   14000b821:	mov    QWORD PTR [rax+0x8],rdx
   14000b825:	dec    QWORD PTR [rbp-0x18]
   14000b829:	call   QWORD PTR [rip+0x26d99]        # 0x1400325c8
   14000b82f:	test   rdi,rdi
   14000b832:	je     0x14000b8a4
   14000b834:	lea    r8,[rdi+0x120]
   14000b83b:	jmp    0x14000b84f
   14000b83d:	lea    ecx,[rdx-0x80000000]
   14000b843:	mov    eax,edx
   14000b845:	lock cmpxchg DWORD PTR [r8+0x8],ecx
   14000b84b:	cmp    edx,eax
   14000b84d:	je     0x14000b857
   14000b84f:	mov    edx,DWORD PTR [r8+0x8]
   14000b853:	test   edx,edx
   14000b855:	jns    0x14000b83d
   14000b857:	test   edx,edx
   14000b859:	jne    0x14000b863
   14000b85b:	mov    rcx,r8
   14000b85e:	call   0x140029c90
   14000b863:	mov    rcx,rdi
   14000b866:	call   0x140011ea8
   14000b86b:	mov    eax,DWORD PTR [rdi+0x8]
   14000b86e:	cmp    eax,0x1
   14000b871:	jne    0x14000b87c
   14000b873:	mov    DWORD PTR [rdi+0x8],0x0
   14000b87a:	jmp    0x14000b88b
   14000b87c:	mov    eax,r12d
   14000b87f:	lock xadd DWORD PTR [rdi+0x8],eax
   14000b884:	add    eax,r12d
   14000b887:	test   eax,eax
   14000b889:	jg     0x14000b8a4
   14000b88b:	mov    rax,QWORD PTR [rdi]
   14000b88e:	mov    rbx,QWORD PTR [rax]
   14000b891:	mov    rcx,rbx
   14000b894:	call   QWORD PTR [rip+0x26e0e]        # 0x1400326a8
   14000b89a:	mov    edx,0x1
   14000b89f:	mov    rcx,rdi
   14000b8a2:	call   rbx
   14000b8a4:	cmp    QWORD PTR [rbp-0x18],0x0
   14000b8a9:	ja     0x14000b80e
   14000b8af:	call   QWORD PTR [rip+0x26823]        # 0x1400320d8
   14000b8b5:	mov    rcx,rax
   14000b8b8:	mov    r8,r12
   14000b8bb:	mov    rdx,r12
   14000b8be:	call   QWORD PTR [rip+0x2688c]        # 0x140032150
   14000b8c4:	nop
   14000b8c5:	cmp    QWORD PTR [rbp-0x18],0x0
   14000b8ca:	je     0x14000b8f9
   14000b8cc:	mov    rbx,QWORD PTR [rbp-0x28]
   14000b8d0:	jmp    0x14000b8f0
   14000b8d2:	mov    rcx,rbx
   14000b8d5:	mov    rbx,QWORD PTR [rbx]
   14000b8d8:	mov    rdx,QWORD PTR [rcx]
   14000b8db:	mov    rax,QWORD PTR [rcx+0x8]
   14000b8df:	mov    QWORD PTR [rax],rdx
   14000b8e2:	mov    QWORD PTR [rdx+0x8],rax
   14000b8e6:	call   QWORD PTR [rip+0x26cdc]        # 0x1400325c8
   14000b8ec:	dec    QWORD PTR [rbp-0x18]
   14000b8f0:	lea    rax,[rbp-0x28]
   14000b8f4:	cmp    rbx,rax
   14000b8f7:	jne    0x14000b8d2
   14000b8f9:	lea    r11,[rsp+0x60]
   14000b8fe:	mov    rbx,QWORD PTR [r11+0x28]
   14000b902:	mov    rsi,QWORD PTR [r11+0x30]
   14000b906:	mov    rdi,QWORD PTR [r11+0x38]
   14000b90a:	mov    rsp,r11
   14000b90d:	pop    r14
   14000b90f:	pop    r12
   14000b911:	pop    rbp
   14000b912:	ret    
   14000b913:	int3   
   14000b914:	int3   
   14000b915:	int3   
   14000b916:	int3   
   14000b917:	int3   
   14000b918:	int3   
   14000b919:	int3   
   14000b91a:	int3   
   14000b91b:	int3   
   14000b91c:	mov    rax,rsp
   14000b91f:	push   rbp
   14000b920:	lea    rbp,[rax-0x5f]
   14000b924:	sub    rsp,0xa0
   14000b92b:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000b933:	mov    QWORD PTR [rax+0x10],rbx
   14000b937:	mov    QWORD PTR [rax+0x18],rsi
   14000b93b:	mov    QWORD PTR [rax+0x20],rdi
   14000b93f:	mov    rax,QWORD PTR [rip+0x3f6da]        # 0x14004b020
   14000b946:	xor    rax,rsp
   14000b949:	mov    QWORD PTR [rbp+0x47],rax
   14000b94d:	mov    rdi,rcx
   14000b950:	mov    DWORD PTR [rbp-0x5],0x1
   14000b957:	and    DWORD PTR [rbp-0x9],0x0
   14000b95b:	lea    r9,[rbp-0x9]
   14000b95f:	lea    r8,[rbp-0x5]
   14000b963:	mov    rdx,rcx
   14000b966:	call   0x14002abf8
   14000b96b:	mov    ebx,eax
   14000b96d:	test   eax,eax
   14000b96f:	jns    0x14000b9c2
   14000b971:	lea    rdx,[rip+0x3f700]        # 0x14004b078
   14000b978:	mov    rcx,QWORD PTR [rip+0x3f6f9]        # 0x14004b078
   14000b97f:	cmp    rcx,rdx
   14000b982:	je     0x14000b9a6
   14000b984:	test   BYTE PTR [rcx+0x1c],0x1
   14000b988:	je     0x14000b9a6
   14000b98a:	mov    edx,0x3a
   14000b98f:	mov    DWORD PTR [rsp+0x20],eax
   14000b993:	mov    r9,rdi
   14000b996:	lea    r8,[rip+0x2b14b]        # 0x140036ae8
   14000b99d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b9a1:	call   0x140007264
   14000b9a6:	mov    edx,ebx
   14000b9a8:	lea    rcx,[rbp+0xf]
   14000b9ac:	call   0x140002064
   14000b9b1:	lea    rdx,[rip+0x3d7d0]        # 0x140049188
   14000b9b8:	lea    rcx,[rbp+0xf]
   14000b9bc:	call   0x14002e2da
   14000b9c1:	int3   
   14000b9c2:	mov    ecx,DWORD PTR [rbp-0x9]
   14000b9c5:	call   0x140023f10
   14000b9ca:	mov    rsi,rax
   14000b9cd:	mov    QWORD PTR [rbp+0x7],rax
   14000b9d1:	mov    QWORD PTR [rsp+0x20],rax
   14000b9d6:	mov    r9d,DWORD PTR [rbp-0x9]
   14000b9da:	mov    rdx,rdi
   14000b9dd:	call   0x14002ad08
   14000b9e2:	mov    ebx,eax
   14000b9e4:	test   eax,eax
   14000b9e6:	jns    0x14000ba39
   14000b9e8:	lea    rdx,[rip+0x3f689]        # 0x14004b078
   14000b9ef:	mov    rcx,QWORD PTR [rip+0x3f682]        # 0x14004b078
   14000b9f6:	cmp    rcx,rdx
   14000b9f9:	je     0x14000ba1d
   14000b9fb:	test   BYTE PTR [rcx+0x1c],0x1
   14000b9ff:	je     0x14000ba1d
   14000ba01:	mov    edx,0x3b
   14000ba06:	mov    DWORD PTR [rsp+0x20],eax
   14000ba0a:	mov    r9,rdi
   14000ba0d:	lea    r8,[rip+0x2b0d4]        # 0x140036ae8
   14000ba14:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ba18:	call   0x140007264
   14000ba1d:	mov    edx,ebx
   14000ba1f:	lea    rcx,[rbp+0xf]
   14000ba23:	call   0x140002064
   14000ba28:	lea    rdx,[rip+0x3d759]        # 0x140049188
   14000ba2f:	lea    rcx,[rbp+0xf]
   14000ba33:	call   0x14002e2da
   14000ba38:	int3   
   14000ba39:	mov    rdx,rsi
   14000ba3c:	lea    rcx,[rbp+0xf]
   14000ba40:	call   0x14002b1c4
   14000ba45:	mov    ebx,eax
   14000ba47:	test   eax,eax
   14000ba49:	jns    0x14000ba9c
   14000ba4b:	lea    rdx,[rip+0x3f626]        # 0x14004b078
   14000ba52:	mov    rcx,QWORD PTR [rip+0x3f61f]        # 0x14004b078
   14000ba59:	cmp    rcx,rdx
   14000ba5c:	je     0x14000ba80
   14000ba5e:	test   BYTE PTR [rcx+0x1c],0x1
   14000ba62:	je     0x14000ba80
   14000ba64:	mov    edx,0x3c
   14000ba69:	mov    DWORD PTR [rsp+0x20],eax
   14000ba6d:	mov    r9,rdi
   14000ba70:	lea    r8,[rip+0x2b071]        # 0x140036ae8
   14000ba77:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ba7b:	call   0x140007264
   14000ba80:	mov    edx,ebx
   14000ba82:	lea    rcx,[rbp+0xf]
   14000ba86:	call   0x140002064
   14000ba8b:	lea    rdx,[rip+0x3d6f6]        # 0x140049188
   14000ba92:	lea    rcx,[rbp+0xf]
   14000ba96:	call   0x14002e2da
   14000ba9b:	int3   
   14000ba9c:	mov    eax,DWORD PTR [rbp+0x17]
   14000ba9f:	shl    rax,0x20
   14000baa3:	mov    ebx,DWORD PTR [rbp+0x1b]
   14000baa6:	add    rbx,rax
   14000baa9:	lea    rdx,[rip+0x3f5c8]        # 0x14004b078
   14000bab0:	mov    rcx,QWORD PTR [rip+0x3f5c1]        # 0x14004b078
   14000bab7:	cmp    rcx,rdx
   14000baba:	je     0x14000bafc
   14000babc:	test   BYTE PTR [rcx+0x1c],0x4
   14000bac0:	je     0x14000bafc
   14000bac2:	mov    r10,rbx
   14000bac5:	shr    r10,0x20
   14000bac9:	movzx  r8d,bx
   14000bacd:	mov    r9d,ebx
   14000bad0:	shr    r9d,0x10
   14000bad4:	movzx  edx,r10w
   14000bad8:	shr    r10d,0x10
   14000badc:	mov    DWORD PTR [rsp+0x38],r8d
   14000bae1:	mov    DWORD PTR [rsp+0x30],r9d
   14000bae6:	mov    DWORD PTR [rsp+0x28],edx
   14000baea:	mov    DWORD PTR [rsp+0x20],r10d
   14000baef:	mov    r9,rdi
   14000baf2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000baf6:	call   0x1400072f8
   14000bafb:	nop
   14000bafc:	mov    rcx,rsi
   14000baff:	call   QWORD PTR [rip+0x26ac3]        # 0x1400325c8
   14000bb05:	mov    rax,rbx
   14000bb08:	mov    rcx,QWORD PTR [rbp+0x47]
   14000bb0c:	xor    rcx,rsp
   14000bb0f:	call   0x14002dd00
   14000bb14:	lea    r11,[rsp+0xa0]
   14000bb1c:	mov    rbx,QWORD PTR [r11+0x18]
   14000bb20:	mov    rsi,QWORD PTR [r11+0x20]
   14000bb24:	mov    rdi,QWORD PTR [r11+0x28]
   14000bb28:	mov    rsp,r11
   14000bb2b:	pop    rbp
   14000bb2c:	ret    
   14000bb2d:	int3   
   14000bb2e:	int3   
   14000bb2f:	int3   
   14000bb30:	int3   
   14000bb31:	int3   
   14000bb32:	int3   
   14000bb33:	int3   
   14000bb34:	mov    rax,rsp
   14000bb37:	mov    QWORD PTR [rax+0x8],rcx
   14000bb3b:	push   rdi
   14000bb3c:	sub    rsp,0x30
   14000bb40:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000bb48:	mov    QWORD PTR [rax+0x18],rbx
   14000bb4c:	mov    rbx,rcx
   14000bb4f:	and    DWORD PTR [rax-0x18],0x0
   14000bb53:	mov    rax,QWORD PTR [rdx]
   14000bb56:	mov    QWORD PTR [rcx],rax
   14000bb59:	test   rax,rax
   14000bb5c:	je     0x14000bb62
   14000bb5e:	lock inc DWORD PTR [rax+0x10]
   14000bb62:	mov    DWORD PTR [rsp+0x20],0x1
   14000bb6a:	call   0x14000bc84
   14000bb6f:	mov    ecx,0x18
   14000bb74:	call   0x140023f10
   14000bb79:	mov    rdi,rax
   14000bb7c:	mov    QWORD PTR [rsp+0x48],rax
   14000bb81:	and    QWORD PTR [rax+0x8],0x0
   14000bb86:	mov    DWORD PTR [rax+0x10],0x1
   14000bb8d:	lea    rcx,[rip+0x29cd4]        # 0x140035868
   14000bb94:	call   QWORD PTR [rip+0x267c6]        # 0x140032360
   14000bb9a:	mov    QWORD PTR [rdi],rax
   14000bb9d:	test   rax,rax
   14000bba0:	jne    0x14000bba8
   14000bba2:	call   0x14000203c
   14000bba7:	nop
   14000bba8:	mov    QWORD PTR [rsp+0x48],rdi
   14000bbad:	lea    rdx,[rsp+0x48]
   14000bbb2:	mov    rcx,rbx
   14000bbb5:	call   0x14000dd38
   14000bbba:	nop
   14000bbbb:	lea    rcx,[rsp+0x48]
   14000bbc0:	call   0x14000de2c
   14000bbc5:	mov    rax,rbx
   14000bbc8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bbcd:	add    rsp,0x30
   14000bbd1:	pop    rdi
   14000bbd2:	ret    
   14000bbd3:	int3   
   14000bbd4:	int3   
   14000bbd5:	int3   
   14000bbd6:	int3   
   14000bbd7:	int3   
   14000bbd8:	int3   
   14000bbd9:	int3   
   14000bbda:	int3   
   14000bbdb:	int3   
   14000bbdc:	mov    rax,rsp
   14000bbdf:	mov    QWORD PTR [rax+0x8],rcx
   14000bbe3:	push   rdi
   14000bbe4:	sub    rsp,0x30
   14000bbe8:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000bbf0:	mov    QWORD PTR [rax+0x18],rbx
   14000bbf4:	mov    rbx,rcx
   14000bbf7:	and    DWORD PTR [rax-0x18],0x0
   14000bbfb:	mov    rax,QWORD PTR [rdx]
   14000bbfe:	mov    QWORD PTR [rcx],rax
   14000bc01:	test   rax,rax
   14000bc04:	je     0x14000bc0a
   14000bc06:	lock inc DWORD PTR [rax+0x10]
   14000bc0a:	mov    DWORD PTR [rsp+0x20],0x1
   14000bc12:	call   0x14000bc84
   14000bc17:	mov    ecx,0x18
   14000bc1c:	call   0x140023f10
   14000bc21:	mov    rdi,rax
   14000bc24:	mov    QWORD PTR [rsp+0x48],rax
   14000bc29:	and    QWORD PTR [rax+0x8],0x0
   14000bc2e:	mov    DWORD PTR [rax+0x10],0x1
   14000bc35:	lea    rcx,[rip+0x29c4c]        # 0x140035888
   14000bc3c:	call   QWORD PTR [rip+0x2671e]        # 0x140032360
   14000bc42:	mov    QWORD PTR [rdi],rax
   14000bc45:	test   rax,rax
   14000bc48:	jne    0x14000bc50
   14000bc4a:	call   0x14000203c
   14000bc4f:	nop
   14000bc50:	mov    QWORD PTR [rsp+0x48],rdi
   14000bc55:	lea    rdx,[rsp+0x48]
   14000bc5a:	mov    rcx,rbx
   14000bc5d:	call   0x14000dd38
   14000bc62:	nop
   14000bc63:	lea    rcx,[rsp+0x48]
   14000bc68:	call   0x14000de2c
   14000bc6d:	mov    rax,rbx
   14000bc70:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bc75:	add    rsp,0x30
   14000bc79:	pop    rdi
   14000bc7a:	ret    
   14000bc7b:	int3   
   14000bc7c:	int3   
   14000bc7d:	int3   
   14000bc7e:	int3   
   14000bc7f:	int3   
   14000bc80:	int3   
   14000bc81:	int3   
   14000bc82:	int3   
   14000bc83:	int3   
   14000bc84:	rex push rdi
   14000bc86:	sub    rsp,0x30
   14000bc8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000bc93:	mov    QWORD PTR [rsp+0x48],rbx
   14000bc98:	mov    rdi,rcx
   14000bc9b:	mov    rax,QWORD PTR [rcx]
   14000bc9e:	test   rax,rax
   14000bca1:	je     0x14000bcb3
   14000bca3:	mov    rcx,QWORD PTR [rax]
   14000bca6:	test   rcx,rcx
   14000bca9:	je     0x14000bcb3
   14000bcab:	call   QWORD PTR [rip+0x266bf]        # 0x140032370
   14000bcb1:	jmp    0x14000bcb5
   14000bcb3:	xor    eax,eax
   14000bcb5:	test   eax,eax
   14000bcb7:	je     0x14000bd42
   14000bcbd:	mov    rax,QWORD PTR [rdi]
   14000bcc0:	test   rax,rax
   14000bcc3:	je     0x14000bcca
   14000bcc5:	mov    rbx,QWORD PTR [rax]
   14000bcc8:	jmp    0x14000bccc
   14000bcca:	xor    ebx,ebx
   14000bccc:	test   rax,rax
   14000bccf:	je     0x14000bce1
   14000bcd1:	mov    rcx,QWORD PTR [rax]
   14000bcd4:	test   rcx,rcx
   14000bcd7:	je     0x14000bce1
   14000bcd9:	call   QWORD PTR [rip+0x26691]        # 0x140032370
   14000bcdf:	jmp    0x14000bce3
   14000bce1:	xor    eax,eax
   14000bce3:	dec    eax
   14000bce5:	cmp    WORD PTR [rbx+rax*2],0x5c
   14000bcea:	je     0x14000bd42
   14000bcec:	mov    ecx,0x18
   14000bcf1:	call   0x140023f10
   14000bcf6:	mov    rbx,rax
   14000bcf9:	mov    QWORD PTR [rsp+0x40],rax
   14000bcfe:	and    QWORD PTR [rax+0x8],0x0
   14000bd03:	mov    DWORD PTR [rax+0x10],0x1
   14000bd0a:	lea    rcx,[rip+0x2acc3]        # 0x1400369d4
   14000bd11:	call   QWORD PTR [rip+0x26649]        # 0x140032360
   14000bd17:	mov    QWORD PTR [rbx],rax
   14000bd1a:	test   rax,rax
   14000bd1d:	jne    0x14000bd25
   14000bd1f:	call   0x14000203c
   14000bd24:	nop
   14000bd25:	mov    QWORD PTR [rsp+0x40],rbx
   14000bd2a:	lea    rdx,[rsp+0x40]
   14000bd2f:	mov    rcx,rdi
   14000bd32:	call   0x14000dd38
   14000bd37:	nop
   14000bd38:	lea    rcx,[rsp+0x40]
   14000bd3d:	call   0x14000de2c
   14000bd42:	mov    rbx,QWORD PTR [rsp+0x48]
   14000bd47:	add    rsp,0x30
   14000bd4b:	pop    rdi
   14000bd4c:	ret    
   14000bd4d:	int3   
   14000bd4e:	int3   
   14000bd4f:	int3   
   14000bd50:	int3   
   14000bd51:	int3   
   14000bd52:	int3   
   14000bd53:	int3   
   14000bd54:	mov    rax,rsp
   14000bd57:	push   r12
   14000bd59:	push   r14
   14000bd5b:	push   r15
   14000bd5d:	sub    rsp,0xc0
   14000bd64:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14000bd6c:	mov    QWORD PTR [rax+0x10],rbx
   14000bd70:	mov    QWORD PTR [rax+0x18],rsi
   14000bd74:	mov    QWORD PTR [rax+0x20],rdi
   14000bd78:	mov    r14d,r9d
   14000bd7b:	mov    r15,r8
   14000bd7e:	mov    r12d,edx
   14000bd81:	mov    rsi,rcx
   14000bd84:	xor    ebx,ebx
   14000bd86:	mov    QWORD PTR [rax-0x38],rbx
   14000bd8a:	add    rcx,0x90
   14000bd91:	call   0x140029ab0
   14000bd96:	mov    edi,eax
   14000bd98:	test   eax,eax
   14000bd9a:	js     0x14000bda9
   14000bd9c:	mov    rbx,rcx
   14000bd9f:	mov    QWORD PTR [rsp+0xa0],rcx
   14000bda7:	xor    edi,edi
   14000bda9:	test   edi,edi
   14000bdab:	jns    0x14000bdd8
   14000bdad:	test   rbx,rbx
   14000bdb0:	je     0x14000bdd1
   14000bdb2:	or     ecx,0xffffffff
   14000bdb5:	lock xadd DWORD PTR [rbx+0x8],ecx
   14000bdba:	dec    ecx
   14000bdbc:	cmp    ecx,0x80000000
   14000bdc2:	jne    0x14000bdd1
   14000bdc4:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bdcc:	call   0x140029c90
   14000bdd1:	mov    eax,edi
   14000bdd3:	jmp    0x14000bf3a
   14000bdd8:	mov    rsi,QWORD PTR [rsi+0x280]
   14000bddf:	mov    rax,QWORD PTR [rsi]
   14000bde2:	mov    rdi,QWORD PTR [rax+0x10]
   14000bde6:	mov    rcx,rdi
   14000bde9:	call   QWORD PTR [rip+0x268b9]        # 0x1400326a8
   14000bdef:	mov    eax,DWORD PTR [rsp+0x178]
   14000bdf6:	mov    DWORD PTR [rsp+0x98],eax
   14000bdfd:	mov    eax,DWORD PTR [rsp+0x170]
   14000be04:	mov    DWORD PTR [rsp+0x90],eax
   14000be0b:	mov    rax,QWORD PTR [rsp+0x168]
   14000be13:	mov    QWORD PTR [rsp+0x88],rax
   14000be1b:	mov    rax,QWORD PTR [rsp+0x160]
   14000be23:	mov    QWORD PTR [rsp+0x80],rax
   14000be2b:	mov    rax,QWORD PTR [rsp+0x158]
   14000be33:	mov    QWORD PTR [rsp+0x78],rax
   14000be38:	mov    eax,DWORD PTR [rsp+0x150]
   14000be3f:	mov    DWORD PTR [rsp+0x70],eax
   14000be43:	mov    rax,QWORD PTR [rsp+0x148]
   14000be4b:	mov    QWORD PTR [rsp+0x68],rax
   14000be50:	mov    rax,QWORD PTR [rsp+0x140]
   14000be58:	mov    QWORD PTR [rsp+0x60],rax
   14000be5d:	mov    eax,DWORD PTR [rsp+0x138]
   14000be64:	mov    DWORD PTR [rsp+0x58],eax
   14000be68:	mov    rax,QWORD PTR [rsp+0x130]
   14000be70:	mov    QWORD PTR [rsp+0x50],rax
   14000be75:	mov    rax,QWORD PTR [rsp+0x128]
   14000be7d:	mov    QWORD PTR [rsp+0x48],rax
   14000be82:	movzx  eax,WORD PTR [rsp+0x120]
   14000be8a:	mov    WORD PTR [rsp+0x40],ax
   14000be8f:	mov    rax,QWORD PTR [rsp+0x118]
   14000be97:	mov    QWORD PTR [rsp+0x38],rax
   14000be9c:	movzx  eax,WORD PTR [rsp+0x110]
   14000bea4:	mov    WORD PTR [rsp+0x30],ax
   14000bea9:	mov    rax,QWORD PTR [rsp+0x108]
   14000beb1:	mov    QWORD PTR [rsp+0x28],rax
   14000beb6:	mov    eax,DWORD PTR [rsp+0x100]
   14000bebd:	mov    DWORD PTR [rsp+0x20],eax
   14000bec1:	mov    r9d,r14d
   14000bec4:	mov    r8,r15
   14000bec7:	mov    edx,r12d
   14000beca:	mov    rcx,rsi
   14000becd:	call   rdi
   14000becf:	nop
   14000bed0:	jmp    0x14000bf15
   14000bed2:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000bed9:	test   ebx,ebx
   14000bedb:	jns    0x14000bf0d
   14000bedd:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bee5:	test   rcx,rcx
   14000bee8:	je     0x14000bf09
   14000beea:	or     edx,0xffffffff
   14000beed:	lock xadd DWORD PTR [rcx+0x8],edx
   14000bef2:	dec    edx
   14000bef4:	cmp    edx,0x80000000
   14000befa:	jne    0x14000bf09
   14000befc:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bf04:	call   0x140029c90
   14000bf09:	mov    eax,ebx
   14000bf0b:	jmp    0x14000bf3a
   14000bf0d:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000bf15:	test   rbx,rbx
   14000bf18:	je     0x14000bf38
   14000bf1a:	or     eax,0xffffffff
   14000bf1d:	lock xadd DWORD PTR [rbx+0x8],eax
   14000bf22:	dec    eax
   14000bf24:	cmp    eax,0x80000000
   14000bf29:	jne    0x14000bf38
   14000bf2b:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bf33:	call   0x140029c90
   14000bf38:	xor    eax,eax
   14000bf3a:	lea    r11,[rsp+0xc0]
   14000bf42:	mov    rbx,QWORD PTR [r11+0x28]
   14000bf46:	mov    rsi,QWORD PTR [r11+0x30]
   14000bf4a:	mov    rdi,QWORD PTR [r11+0x38]
   14000bf4e:	mov    rsp,r11
   14000bf51:	pop    r15
   14000bf53:	pop    r14
   14000bf55:	pop    r12
   14000bf57:	ret    
   14000bf58:	int3   
   14000bf59:	int3   
   14000bf5a:	int3   
   14000bf5b:	int3   
   14000bf5c:	int3   
   14000bf5d:	int3   
   14000bf5e:	int3   
   14000bf5f:	int3   
   14000bf60:	mov    rax,rsp
   14000bf63:	push   rdi
   14000bf64:	sub    rsp,0x50
   14000bf68:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14000bf70:	mov    QWORD PTR [rax+0x10],rbx
   14000bf74:	mov    QWORD PTR [rax+0x18],rsi
   14000bf78:	mov    r11d,r8d
   14000bf7b:	mov    esi,edx
   14000bf7d:	mov    r10,rcx
   14000bf80:	xor    ebx,ebx
   14000bf82:	mov    QWORD PTR [rax-0x28],rbx
   14000bf86:	add    rcx,0x90
   14000bf8d:	call   0x140029ab0
   14000bf92:	mov    edi,eax
   14000bf94:	test   eax,eax
   14000bf96:	js     0x14000bfa2
   14000bf98:	mov    rbx,rcx
   14000bf9b:	mov    QWORD PTR [rsp+0x30],rcx
   14000bfa0:	xor    edi,edi
   14000bfa2:	test   edi,edi
   14000bfa4:	jns    0x14000bfcb
   14000bfa6:	test   rbx,rbx
   14000bfa9:	je     0x14000bfc7
   14000bfab:	or     ecx,0xffffffff
   14000bfae:	lock xadd DWORD PTR [rbx+0x8],ecx
   14000bfb3:	dec    ecx
   14000bfb5:	cmp    ecx,0x80000000
   14000bfbb:	jne    0x14000bfc7
   14000bfbd:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bfc2:	call   0x140029c90
   14000bfc7:	mov    eax,edi
   14000bfc9:	jmp    0x14000c043
   14000bfcb:	lea    rcx,[r10+0x200]
   14000bfd2:	mov    eax,DWORD PTR [rsp+0x80]
   14000bfd9:	mov    DWORD PTR [rsp+0x20],eax
   14000bfdd:	mov    r8d,r11d
   14000bfe0:	mov    edx,esi
   14000bfe2:	call   0x140015f84
   14000bfe7:	nop
   14000bfe8:	jmp    0x14000c021
   14000bfea:	mov    ebx,DWORD PTR [rsp+0x60]
   14000bfee:	test   ebx,ebx
   14000bff0:	jns    0x14000c01c
   14000bff2:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bff7:	test   rcx,rcx
   14000bffa:	je     0x14000c018
   14000bffc:	or     edx,0xffffffff
   14000bfff:	lock xadd DWORD PTR [rcx+0x8],edx
   14000c004:	dec    edx
   14000c006:	cmp    edx,0x80000000
   14000c00c:	jne    0x14000c018
   14000c00e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c013:	call   0x140029c90
   14000c018:	mov    eax,ebx
   14000c01a:	jmp    0x14000c043
   14000c01c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c021:	test   rbx,rbx
   14000c024:	je     0x14000c041
   14000c026:	or     eax,0xffffffff
   14000c029:	lock xadd DWORD PTR [rbx+0x8],eax
   14000c02e:	dec    eax
   14000c030:	cmp    eax,0x80000000
   14000c035:	jne    0x14000c041
   14000c037:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c03c:	call   0x140029c90
   14000c041:	xor    eax,eax
   14000c043:	mov    rbx,QWORD PTR [rsp+0x68]
   14000c048:	mov    rsi,QWORD PTR [rsp+0x70]
   14000c04d:	add    rsp,0x50
   14000c051:	pop    rdi
   14000c052:	ret    
   14000c053:	int3   
   14000c054:	int3   
   14000c055:	int3   
   14000c056:	int3   
   14000c057:	int3   
   14000c058:	int3   
   14000c059:	int3   
   14000c05a:	int3   
   14000c05b:	int3   
   14000c05c:	rex push rbp
   14000c05e:	push   rbx
   14000c05f:	push   rsi
   14000c060:	push   rdi
   14000c061:	push   r12
   14000c063:	push   r13
   14000c065:	push   r14
   14000c067:	push   r15
   14000c069:	lea    rbp,[rsp-0xf]
   14000c06e:	sub    rsp,0x88
   14000c075:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14000c07d:	mov    rax,QWORD PTR [rip+0x3ef9c]        # 0x14004b020
   14000c084:	xor    rax,rsp
   14000c087:	mov    QWORD PTR [rbp-0x1],rax
   14000c08b:	mov    r12,r9
   14000c08e:	mov    QWORD PTR [rbp-0x29],r8
   14000c092:	mov    QWORD PTR [rbp-0x31],rdx
   14000c096:	mov    rsi,rcx
   14000c099:	mov    r14,QWORD PTR [rbp+0x77]
   14000c09d:	mov    QWORD PTR [rbp-0x21],r14
   14000c0a1:	mov    r13,QWORD PTR [rbp+0x7f]
   14000c0a5:	mov    rdi,QWORD PTR [r9+0x8]
   14000c0a9:	mov    rbx,QWORD PTR [r9]
   14000c0ac:	xor    r15d,r15d
   14000c0af:	jmp    0x14000c0d5
   14000c0b1:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c0b6:	jb     0x14000c0c1
   14000c0b8:	mov    rcx,QWORD PTR [rbx]
   14000c0bb:	call   QWORD PTR [rip+0x26507]        # 0x1400325c8
   14000c0c1:	mov    QWORD PTR [rbx+0x18],0x7
   14000c0c9:	mov    QWORD PTR [rbx+0x10],r15
   14000c0cd:	mov    WORD PTR [rbx],r15w
   14000c0d1:	add    rbx,0x20
   14000c0d5:	cmp    rbx,rdi
   14000c0d8:	jne    0x14000c0b1
   14000c0da:	mov    rax,QWORD PTR [r12]
   14000c0de:	mov    QWORD PTR [r12+0x8],rax
   14000c0e3:	mov    rax,QWORD PTR [r14]
   14000c0e6:	mov    QWORD PTR [r14+0x8],rax
   14000c0ea:	mov    rdi,QWORD PTR [r13+0x8]
   14000c0ee:	mov    rbx,QWORD PTR [r13+0x0]
   14000c0f2:	jmp    0x14000c118
   14000c0f4:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c0f9:	jb     0x14000c104
   14000c0fb:	mov    rcx,QWORD PTR [rbx]
   14000c0fe:	call   QWORD PTR [rip+0x264c4]        # 0x1400325c8
   14000c104:	mov    QWORD PTR [rbx+0x18],0x7
   14000c10c:	mov    QWORD PTR [rbx+0x10],r15
   14000c110:	mov    WORD PTR [rbx],r15w
   14000c114:	add    rbx,0x20
   14000c118:	cmp    rbx,rdi
   14000c11b:	jne    0x14000c0f4
   14000c11d:	mov    rax,QWORD PTR [r13+0x0]
   14000c121:	mov    QWORD PTR [r13+0x8],rax
   14000c125:	mov    QWORD PTR [rbp-0x39],r15
   14000c129:	mov    rax,QWORD PTR [rsi]
   14000c12c:	mov    rbx,QWORD PTR [rax+0x18]
   14000c130:	mov    rcx,rbx
   14000c133:	call   QWORD PTR [rip+0x2656f]        # 0x1400326a8
   14000c139:	lea    rdx,[rbp-0x39]
   14000c13d:	mov    rcx,rsi
   14000c140:	call   rbx
   14000c142:	test   eax,eax
   14000c144:	jns    0x14000c14e
   14000c146:	mov    ecx,eax
   14000c148:	call   0x140029d64
   14000c14d:	int3   
   14000c14e:	mov    r14b,r15b
   14000c151:	and    DWORD PTR [rbp-0x59],0x0
   14000c155:	mov    rbx,QWORD PTR [rbp-0x39]
   14000c159:	mov    rax,QWORD PTR [rbx]
   14000c15c:	mov    rdi,QWORD PTR [rax+0x18]
   14000c160:	mov    rcx,rdi
   14000c163:	call   QWORD PTR [rip+0x2653f]        # 0x1400326a8
   14000c169:	lea    rdx,[rbp-0x59]
   14000c16d:	mov    rcx,rbx
   14000c170:	call   rdi
   14000c172:	xor    edi,edi
   14000c174:	test   eax,eax
   14000c176:	jns    0x14000c180
   14000c178:	mov    ecx,eax
   14000c17a:	call   0x140029d64
   14000c17f:	int3   
   14000c180:	mov    esi,edi
   14000c182:	cmp    DWORD PTR [rbp-0x59],edi
   14000c185:	jbe    0x14000c468
   14000c18b:	mov    QWORD PTR [rbp-0x49],rdi
   14000c18f:	mov    rbx,QWORD PTR [rbp-0x39]
   14000c193:	mov    rax,QWORD PTR [rbx]
   14000c196:	mov    rdi,QWORD PTR [rax+0x20]
   14000c19a:	mov    rcx,rdi
   14000c19d:	call   QWORD PTR [rip+0x26505]        # 0x1400326a8
   14000c1a3:	lea    r8,[rbp-0x49]
   14000c1a7:	mov    edx,esi
   14000c1a9:	mov    rcx,rbx
   14000c1ac:	call   rdi
   14000c1ae:	test   eax,eax
   14000c1b0:	js     0x14000c460
   14000c1b6:	and    DWORD PTR [rbp-0x11],0x0
   14000c1ba:	xor    eax,eax
   14000c1bc:	mov    QWORD PTR [rbp-0xd],rax
   14000c1c0:	mov    DWORD PTR [rbp-0x5],eax
   14000c1c3:	mov    DWORD PTR [rbp-0x41],0x4
   14000c1ca:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c1ce:	mov    rax,QWORD PTR [rbx]
   14000c1d1:	mov    rdi,QWORD PTR [rax+0x18]
   14000c1d5:	mov    rcx,rdi
   14000c1d8:	call   QWORD PTR [rip+0x264ca]        # 0x1400326a8
   14000c1de:	lea    rdx,[rbp-0x11]
   14000c1e2:	mov    rcx,rbx
   14000c1e5:	call   rdi
   14000c1e7:	xor    edi,edi
   14000c1e9:	test   eax,eax
   14000c1eb:	js     0x14000c458
   14000c1f1:	lea    r8,[rbp-0x41]
   14000c1f5:	lea    rdx,[rbp-0x11]
   14000c1f9:	mov    rcx,QWORD PTR [rbp-0x29]
   14000c1fd:	call   0x1400144a8
   14000c202:	test   al,al
   14000c204:	je     0x14000c37c
   14000c20a:	cmp    DWORD PTR [rbp-0x41],0x1
   14000c20e:	ja     0x14000c37c
   14000c214:	mov    rcx,QWORD PTR [rip+0x3ee5d]        # 0x14004b078
   14000c21b:	lea    rax,[rip+0x3ee56]        # 0x14004b078
   14000c222:	cmp    rcx,rax
   14000c225:	je     0x14000c244
   14000c227:	test   BYTE PTR [rcx+0x1c],0x4
   14000c22b:	je     0x14000c244
   14000c22d:	lea    edx,[rdi+0x42]
   14000c230:	lea    r9,[rbp-0x11]
   14000c234:	lea    r8,[rip+0x2a8ad]        # 0x140036ae8
   14000c23b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c23f:	call   0x14000756c
   14000c244:	mov    QWORD PTR [rbp-0x51],rdi
   14000c248:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c24c:	mov    rax,QWORD PTR [rbx]
   14000c24f:	mov    rdi,QWORD PTR [rax]
   14000c252:	mov    rcx,rdi
   14000c255:	call   QWORD PTR [rip+0x2644d]        # 0x1400326a8
   14000c25b:	lea    r8,[rbp-0x51]
   14000c25f:	lea    rdx,[rip+0x2a7e2]        # 0x140036a48
   14000c266:	mov    rcx,rbx
   14000c269:	call   rdi
   14000c26b:	xor    edi,edi
   14000c26d:	test   eax,eax
   14000c26f:	js     0x14000c450
   14000c275:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c279:	test   rbx,rbx
   14000c27c:	je     0x14000c445
   14000c282:	test   r14b,r14b
   14000c285:	jne    0x14000c2e1
   14000c287:	mov    rdx,r12
   14000c28a:	mov    rcx,rbx
   14000c28d:	call   0x14000c4bc
   14000c292:	mov    rax,QWORD PTR [r12+0x8]
   14000c297:	cmp    QWORD PTR [r12],rax
   14000c29b:	jne    0x14000c2dd
   14000c29d:	mov    rcx,QWORD PTR [rip+0x3edd4]        # 0x14004b078
   14000c2a4:	lea    rax,[rip+0x3edcd]        # 0x14004b078
   14000c2ab:	cmp    rcx,rax
   14000c2ae:	je     0x14000c2d4
   14000c2b0:	test   BYTE PTR [rcx+0x1c],0x4
   14000c2b4:	je     0x14000c2d4
   14000c2b6:	lea    edx,[rdi+0x43]
   14000c2b9:	lea    r9,[rbp-0x11]
   14000c2bd:	lea    r8,[rip+0x2a824]        # 0x140036ae8
   14000c2c4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c2c8:	call   0x14000756c
   14000c2cd:	mov    rcx,QWORD PTR [rip+0x3eda4]        # 0x14004b078
   14000c2d4:	mov    r14b,0x1
   14000c2d7:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c2db:	jmp    0x14000c2e8
   14000c2dd:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c2e1:	mov    rcx,QWORD PTR [rip+0x3ed90]        # 0x14004b078
   14000c2e8:	test   r15b,r15b
   14000c2eb:	jne    0x14000c350
   14000c2ed:	mov    rdi,QWORD PTR [rbp-0x21]
   14000c2f1:	mov    rdx,rdi
   14000c2f4:	mov    rcx,rbx
   14000c2f7:	call   0x14000c848
   14000c2fc:	mov    rax,QWORD PTR [rdi+0x8]
   14000c300:	cmp    QWORD PTR [rdi],rax
   14000c303:	jne    0x14000c343
   14000c305:	mov    rcx,QWORD PTR [rip+0x3ed6c]        # 0x14004b078
   14000c30c:	lea    rax,[rip+0x3ed65]        # 0x14004b078
   14000c313:	cmp    rcx,rax
   14000c316:	je     0x14000c33e
   14000c318:	test   BYTE PTR [rcx+0x1c],0x4
   14000c31c:	je     0x14000c33e
   14000c31e:	mov    edx,0x44
   14000c323:	lea    r9,[rbp-0x11]
   14000c327:	lea    r8,[rip+0x2a7ba]        # 0x140036ae8
   14000c32e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c332:	call   0x14000756c
   14000c337:	mov    rcx,QWORD PTR [rip+0x3ed3a]        # 0x14004b078
   14000c33e:	mov    r15b,0x1
   14000c341:	jmp    0x14000c34a
   14000c343:	mov    rcx,QWORD PTR [rip+0x3ed2e]        # 0x14004b078
   14000c34a:	xor    edi,edi
   14000c34c:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c350:	test   r14b,r14b
   14000c353:	je     0x14000c35e
   14000c355:	test   r15b,r15b
   14000c358:	jne    0x14000c3df
   14000c35e:	test   rbx,rbx
   14000c361:	je     0x14000c3af
   14000c363:	mov    rax,QWORD PTR [rbx]
   14000c366:	mov    rdi,QWORD PTR [rax+0x10]
   14000c36a:	mov    rcx,rdi
   14000c36d:	call   QWORD PTR [rip+0x26335]        # 0x1400326a8
   14000c373:	mov    rcx,rbx
   14000c376:	call   rdi
   14000c378:	xor    edi,edi
   14000c37a:	jmp    0x14000c3af
   14000c37c:	mov    rcx,QWORD PTR [rip+0x3ecf5]        # 0x14004b078
   14000c383:	lea    rax,[rip+0x3ecee]        # 0x14004b078
   14000c38a:	cmp    rcx,rax
   14000c38d:	je     0x14000c3af
   14000c38f:	test   BYTE PTR [rcx+0x1c],0x4
   14000c393:	je     0x14000c3af
   14000c395:	mov    edx,0x41
   14000c39a:	lea    r9,[rbp-0x11]
   14000c39e:	lea    r8,[rip+0x2a743]        # 0x140036ae8
   14000c3a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c3a9:	call   0x14000756c
   14000c3ae:	nop
   14000c3af:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c3b3:	test   rbx,rbx
   14000c3b6:	je     0x14000c3cf
   14000c3b8:	mov    rax,QWORD PTR [rbx]
   14000c3bb:	mov    rdi,QWORD PTR [rax+0x10]
   14000c3bf:	mov    rcx,rdi
   14000c3c2:	call   QWORD PTR [rip+0x262e0]        # 0x1400326a8
   14000c3c8:	mov    rcx,rbx
   14000c3cb:	call   rdi
   14000c3cd:	xor    edi,edi
   14000c3cf:	inc    esi
   14000c3d1:	cmp    esi,DWORD PTR [rbp-0x59]
   14000c3d4:	jae    0x14000c468
   14000c3da:	jmp    0x14000c18b
   14000c3df:	lea    rax,[rip+0x3ec92]        # 0x14004b078
   14000c3e6:	cmp    rcx,rax
   14000c3e9:	je     0x14000c40a
   14000c3eb:	test   BYTE PTR [rcx+0x1c],0x4
   14000c3ef:	je     0x14000c40a
   14000c3f1:	mov    edx,0x45
   14000c3f6:	lea    r8,[rip+0x2a6eb]        # 0x140036ae8
   14000c3fd:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c401:	call   0x140001f08
   14000c406:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c40a:	test   rbx,rbx
   14000c40d:	je     0x14000c425
   14000c40f:	mov    rax,QWORD PTR [rbx]
   14000c412:	mov    rdi,QWORD PTR [rax+0x10]
   14000c416:	mov    rcx,rdi
   14000c419:	call   QWORD PTR [rip+0x26289]        # 0x1400326a8
   14000c41f:	mov    rcx,rbx
   14000c422:	call   rdi
   14000c424:	nop
   14000c425:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c429:	test   rbx,rbx
   14000c42c:	je     0x14000c468
   14000c42e:	mov    rax,QWORD PTR [rbx]
   14000c431:	mov    rdi,QWORD PTR [rax+0x10]
   14000c435:	mov    rcx,rdi
   14000c438:	call   QWORD PTR [rip+0x2626a]        # 0x1400326a8
   14000c43e:	mov    rcx,rbx
   14000c441:	call   rdi
   14000c443:	jmp    0x14000c468
   14000c445:	mov    ecx,0x80004002
   14000c44a:	call   0x140029d64
   14000c44f:	int3   
   14000c450:	mov    ecx,eax
   14000c452:	call   0x140029d64
   14000c457:	nop
   14000c458:	mov    ecx,eax
   14000c45a:	call   0x140029d64
   14000c45f:	int3   
   14000c460:	mov    ecx,eax
   14000c462:	call   0x140029d64
   14000c467:	nop
   14000c468:	mov    rdx,r13
   14000c46b:	mov    rcx,QWORD PTR [rbp-0x31]
   14000c46f:	call   0x14000c958
   14000c474:	nop
   14000c475:	mov    rbx,QWORD PTR [rbp-0x39]
   14000c479:	test   rbx,rbx
   14000c47c:	je     0x14000c493
   14000c47e:	mov    rax,QWORD PTR [rbx]
   14000c481:	mov    rdi,QWORD PTR [rax+0x10]
   14000c485:	mov    rcx,rdi
   14000c488:	call   QWORD PTR [rip+0x2621a]        # 0x1400326a8
   14000c48e:	mov    rcx,rbx
   14000c491:	call   rdi
   14000c493:	mov    rcx,QWORD PTR [rbp-0x1]
   14000c497:	xor    rcx,rsp
   14000c49a:	call   0x14002dd00
   14000c49f:	add    rsp,0x88
   14000c4a6:	pop    r15
   14000c4a8:	pop    r14
   14000c4aa:	pop    r13
   14000c4ac:	pop    r12
   14000c4ae:	pop    rdi
   14000c4af:	pop    rsi
   14000c4b0:	pop    rbx
   14000c4b1:	pop    rbp
   14000c4b2:	ret    
   14000c4b3:	int3   
   14000c4b4:	int3   
   14000c4b5:	int3   
   14000c4b6:	int3   
   14000c4b7:	int3   
   14000c4b8:	int3   
   14000c4b9:	int3   
   14000c4ba:	int3   
   14000c4bb:	int3   
   14000c4bc:	mov    rax,rsp
   14000c4bf:	push   rbp
   14000c4c0:	push   rdi
   14000c4c1:	push   r12
   14000c4c3:	push   r14
   14000c4c5:	push   r15
   14000c4c7:	lea    rbp,[rax-0x5f]
   14000c4cb:	sub    rsp,0xb0
   14000c4d2:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000c4da:	mov    QWORD PTR [rax+0x18],rbx
   14000c4de:	mov    QWORD PTR [rax+0x20],rsi
   14000c4e2:	mov    rax,QWORD PTR [rip+0x3eb37]        # 0x14004b020
   14000c4e9:	xor    rax,rsp
   14000c4ec:	mov    QWORD PTR [rbp+0x27],rax
   14000c4f0:	mov    rdi,rdx
   14000c4f3:	mov    rsi,rcx
   14000c4f6:	xor    r15d,r15d
   14000c4f9:	test   rcx,rcx
   14000c4fc:	jne    0x14000c509
   14000c4fe:	mov    ecx,0x80004003
   14000c503:	call   0x140029d64
   14000c508:	int3   
   14000c509:	mov    DWORD PTR [rbp-0x49],r15d
   14000c50d:	mov    rax,QWORD PTR [rcx]
   14000c510:	mov    rbx,QWORD PTR [rax+0x28]
   14000c514:	mov    rcx,rbx
   14000c517:	call   QWORD PTR [rip+0x2618b]        # 0x1400326a8
   14000c51d:	lea    rdx,[rbp-0x49]
   14000c521:	mov    rcx,rsi
   14000c524:	call   rbx
   14000c526:	test   eax,eax
   14000c528:	jns    0x14000c532
   14000c52a:	mov    ecx,eax
   14000c52c:	call   0x140029d64
   14000c531:	int3   
   14000c532:	lea    r12,[rip+0x3eb3f]        # 0x14004b078
   14000c539:	mov    rcx,QWORD PTR [rip+0x3eb38]        # 0x14004b078
   14000c540:	cmp    rcx,r12
   14000c543:	je     0x14000c564
   14000c545:	test   BYTE PTR [rcx+0x1c],0x4
   14000c549:	je     0x14000c564
   14000c54b:	mov    edx,0x46
   14000c550:	mov    r9d,DWORD PTR [rbp-0x49]
   14000c554:	lea    r8,[rip+0x2a58d]        # 0x140036ae8
   14000c55b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c55f:	call   0x140001f70
   14000c564:	cmp    DWORD PTR [rbp-0x49],r15d
   14000c568:	jne    0x14000c5a8
   14000c56a:	mov    rsi,QWORD PTR [rdi+0x8]
   14000c56e:	mov    rbx,QWORD PTR [rdi]
   14000c571:	jmp    0x14000c597
   14000c573:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c578:	jb     0x14000c583
   14000c57a:	mov    rcx,QWORD PTR [rbx]
   14000c57d:	call   QWORD PTR [rip+0x26045]        # 0x1400325c8
   14000c583:	mov    QWORD PTR [rbx+0x18],0x7
   14000c58b:	mov    QWORD PTR [rbx+0x10],r15
   14000c58f:	mov    WORD PTR [rbx],r15w
   14000c593:	add    rbx,0x20
   14000c597:	cmp    rbx,rsi
   14000c59a:	jne    0x14000c573
   14000c59c:	mov    rax,QWORD PTR [rdi]
   14000c59f:	mov    QWORD PTR [rdi+0x8],rax
   14000c5a3:	jmp    0x14000c7f7
   14000c5a8:	xorps  xmm0,xmm0
   14000c5ab:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14000c5b0:	mov    QWORD PTR [rbp-0x29],r15
   14000c5b4:	mov    ebx,0x104
   14000c5b9:	mov    edx,ebx
   14000c5bb:	lea    rcx,[rbp-0x39]
   14000c5bf:	call   0x14000d198
   14000c5c4:	nop
   14000c5c5:	xorps  xmm0,xmm0
   14000c5c8:	movdqu XMMWORD PTR [rbp-0x21],xmm0
   14000c5cd:	mov    QWORD PTR [rbp-0x11],r15
   14000c5d1:	mov    edx,ebx
   14000c5d3:	lea    rcx,[rbp-0x21]
   14000c5d7:	call   0x14000d198
   14000c5dc:	nop
   14000c5dd:	mov    r14d,r15d
   14000c5e0:	cmp    DWORD PTR [rbp-0x49],r15d
   14000c5e4:	jbe    0x14000c7cd
   14000c5ea:	mov    QWORD PTR [rbp-0x9],r15
   14000c5ee:	mov    QWORD PTR [rbp-0x41],r15
   14000c5f2:	mov    rax,QWORD PTR [rsi]
   14000c5f5:	mov    rbx,QWORD PTR [rax+0x30]
   14000c5f9:	mov    rcx,rbx
   14000c5fc:	call   QWORD PTR [rip+0x260a6]        # 0x1400326a8
   14000c602:	lea    r8,[rbp-0x41]
   14000c606:	mov    edx,r14d
   14000c609:	mov    rcx,rsi
   14000c60c:	call   rbx
   14000c60e:	test   eax,eax
   14000c610:	js     0x14000c7c5
   14000c616:	lea    rdx,[rbp-0x39]
   14000c61a:	mov    rcx,QWORD PTR [rbp-0x41]
   14000c61e:	call   0x140023124
   14000c623:	test   eax,eax
   14000c625:	jns    0x14000c66c
   14000c627:	mov    rcx,QWORD PTR [rip+0x3ea4a]        # 0x14004b078
   14000c62e:	cmp    rcx,r12
   14000c631:	je     0x14000c7a7
   14000c637:	test   BYTE PTR [rcx+0x1c],0x1
   14000c63b:	je     0x14000c7a7
   14000c641:	mov    r8,QWORD PTR [rbp-0x31]
   14000c645:	sub    r8,QWORD PTR [rbp-0x39]
   14000c649:	sar    r8,1
   14000c64c:	mov    edx,0x47
   14000c651:	mov    QWORD PTR [rsp+0x28],r8
   14000c656:	mov    DWORD PTR [rsp+0x20],eax
   14000c65a:	mov    r9,QWORD PTR [rbp-0x41]
   14000c65e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c662:	call   0x1400074bc
   14000c667:	jmp    0x14000c7a7
   14000c66c:	mov    rcx,QWORD PTR [rip+0x3ea05]        # 0x14004b078
   14000c673:	cmp    rcx,r12
   14000c676:	je     0x14000c6a5
   14000c678:	test   BYTE PTR [rcx+0x1c],0x4
   14000c67c:	je     0x14000c6a5
   14000c67e:	lea    r8,[rbp-0x39]
   14000c682:	mov    rax,QWORD PTR [rbp-0x39]
   14000c686:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c68a:	cmovne r8,rax
   14000c68e:	mov    edx,0x48
   14000c693:	mov    QWORD PTR [rsp+0x20],r8
   14000c698:	mov    r9,QWORD PTR [rbp-0x41]
   14000c69c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c6a0:	call   0x1400073d4
   14000c6a5:	mov    rdx,QWORD PTR [rbp-0x31]
   14000c6a9:	mov    rax,QWORD PTR [rbp-0x39]
   14000c6ad:	sub    rdx,rax
   14000c6b0:	sar    rdx,1
   14000c6b3:	lea    rcx,[rbp-0x39]
   14000c6b7:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c6bb:	cmovne rcx,rax
   14000c6bf:	lea    r8,[rbp-0x21]
   14000c6c3:	call   0x1400231bc
   14000c6c8:	mov    r8d,eax
   14000c6cb:	test   eax,eax
   14000c6cd:	jns    0x14000c718
   14000c6cf:	mov    rcx,QWORD PTR [rip+0x3e9a2]        # 0x14004b078
   14000c6d6:	cmp    rcx,r12
   14000c6d9:	je     0x14000c7a7
   14000c6df:	test   BYTE PTR [rcx+0x1c],0x1
   14000c6e3:	je     0x14000c7a7
   14000c6e9:	lea    r9,[rbp-0x39]
   14000c6ed:	mov    rax,QWORD PTR [rbp-0x39]
   14000c6f1:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c6f5:	cmovne r9,rax
   14000c6f9:	mov    rax,QWORD PTR [rbp-0x19]
   14000c6fd:	sub    rax,QWORD PTR [rbp-0x21]
   14000c701:	sar    rax,1
   14000c704:	mov    edx,0x49
   14000c709:	mov    QWORD PTR [rsp+0x28],rax
   14000c70e:	mov    DWORD PTR [rsp+0x20],r8d
   14000c713:	jmp    0x14000c65e
   14000c718:	mov    rcx,QWORD PTR [rip+0x3e959]        # 0x14004b078
   14000c71f:	cmp    rcx,r12
   14000c722:	je     0x14000c75d
   14000c724:	test   BYTE PTR [rcx+0x1c],0x4
   14000c728:	je     0x14000c75d
   14000c72a:	lea    r8,[rbp-0x21]
   14000c72e:	mov    rax,QWORD PTR [rbp-0x21]
   14000c732:	cmp    rax,QWORD PTR [rbp-0x19]
   14000c736:	cmovne r8,rax
   14000c73a:	lea    r9,[rbp-0x39]
   14000c73e:	mov    rax,QWORD PTR [rbp-0x39]
   14000c742:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c746:	cmovne r9,rax
   14000c74a:	mov    edx,0x4a
   14000c74f:	mov    QWORD PTR [rsp+0x20],r8
   14000c754:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c758:	call   0x1400073d4
   14000c75d:	lea    rdx,[rbp-0x21]
   14000c761:	mov    rax,QWORD PTR [rbp-0x21]
   14000c765:	cmp    rax,QWORD PTR [rbp-0x19]
   14000c769:	cmovne rdx,rax
   14000c76d:	mov    QWORD PTR [rbp+0x1f],0x7
   14000c775:	mov    QWORD PTR [rbp+0x17],r15
   14000c779:	mov    WORD PTR [rbp+0x7],r15w
   14000c77e:	lea    rcx,[rbp+0x7]
   14000c782:	call   0x14000da34
   14000c787:	nop
   14000c788:	lea    rdx,[rbp+0x7]
   14000c78c:	mov    rcx,rdi
   14000c78f:	call   0x14000cee8
   14000c794:	nop
   14000c795:	cmp    QWORD PTR [rbp+0x1f],0x8
   14000c79a:	jb     0x14000c7a7
   14000c79c:	mov    rcx,QWORD PTR [rbp+0x7]
   14000c7a0:	call   QWORD PTR [rip+0x25e22]        # 0x1400325c8
   14000c7a6:	nop
   14000c7a7:	mov    rcx,QWORD PTR [rbp-0x41]
   14000c7ab:	test   rcx,rcx
   14000c7ae:	je     0x14000c7b6
   14000c7b0:	call   QWORD PTR [rip+0x25b9a]        # 0x140032350
   14000c7b6:	inc    r14d
   14000c7b9:	cmp    r14d,DWORD PTR [rbp-0x49]
   14000c7bd:	jb     0x14000c5ee
   14000c7c3:	jmp    0x14000c7cd
   14000c7c5:	mov    ecx,eax
   14000c7c7:	call   0x140029d64
   14000c7cc:	nop
   14000c7cd:	mov    rcx,QWORD PTR [rbp-0x21]
   14000c7d1:	test   rcx,rcx
   14000c7d4:	je     0x14000c7e8
   14000c7d6:	call   QWORD PTR [rip+0x25dec]        # 0x1400325c8
   14000c7dc:	xorps  xmm0,xmm0
   14000c7df:	movdqu XMMWORD PTR [rbp-0x21],xmm0
   14000c7e4:	mov    QWORD PTR [rbp-0x11],r15
   14000c7e8:	mov    rcx,QWORD PTR [rbp-0x39]
   14000c7ec:	test   rcx,rcx
   14000c7ef:	je     0x14000c7f7
   14000c7f1:	call   QWORD PTR [rip+0x25dd1]        # 0x1400325c8
   14000c7f7:	mov    rcx,QWORD PTR [rbp+0x27]
   14000c7fb:	xor    rcx,rsp
   14000c7fe:	call   0x14002dd00
   14000c803:	lea    r11,[rsp+0xb0]
   14000c80b:	mov    rbx,QWORD PTR [r11+0x40]
   14000c80f:	mov    rsi,QWORD PTR [r11+0x48]
   14000c813:	mov    rsp,r11
   14000c816:	pop    r15
   14000c818:	pop    r14
   14000c81a:	pop    r12
   14000c81c:	pop    rdi
   14000c81d:	pop    rbp
   14000c81e:	ret    
   14000c81f:	int3   
   14000c820:	int3   
   14000c821:	int3   
   14000c822:	int3   
   14000c823:	int3   
   14000c824:	int3   
   14000c825:	int3   
   14000c826:	int3   
   14000c827:	int3   
   14000c828:	sub    rsp,0x28
   14000c82c:	mov    rcx,QWORD PTR [rcx]
   14000c82f:	test   rcx,rcx
   14000c832:	je     0x14000c83a
   14000c834:	call   QWORD PTR [rip+0x25b16]        # 0x140032350
   14000c83a:	add    rsp,0x28
   14000c83e:	ret    
   14000c83f:	int3   
   14000c840:	int3   
   14000c841:	int3   
   14000c842:	int3   
   14000c843:	int3   
   14000c844:	int3   
   14000c845:	int3   
   14000c846:	int3   
   14000c847:	int3   
   14000c848:	rex push rbx
   14000c84a:	push   rbp
   14000c84b:	push   rsi
   14000c84c:	push   rdi
   14000c84d:	push   r14
   14000c84f:	sub    rsp,0x20
   14000c853:	xor    ebp,ebp
   14000c855:	mov    rdi,rdx
   14000c858:	mov    r14,rcx
   14000c85b:	test   rcx,rcx
   14000c85e:	je     0x14000c937
   14000c864:	mov    rax,QWORD PTR [rcx]
   14000c867:	mov    WORD PTR [rsp+0x50],bp
   14000c86c:	mov    rbx,QWORD PTR [rax+0x18]
   14000c870:	mov    rcx,rbx
   14000c873:	call   QWORD PTR [rip+0x25e2f]        # 0x1400326a8
   14000c879:	lea    rdx,[rsp+0x50]
   14000c87e:	mov    rcx,r14
   14000c881:	call   rbx
   14000c883:	test   eax,eax
   14000c885:	js     0x14000c942
   14000c88b:	mov    rcx,QWORD PTR [rip+0x3e7e6]        # 0x14004b078
   14000c892:	lea    rax,[rip+0x3e7df]        # 0x14004b078
   14000c899:	cmp    rcx,rax
   14000c89c:	je     0x14000c8bd
   14000c89e:	test   BYTE PTR [rcx+0x1c],0x4
   14000c8a2:	je     0x14000c8bd
   14000c8a4:	movzx  r9d,WORD PTR [rsp+0x50]
   14000c8aa:	lea    edx,[rbp+0x4b]
   14000c8ad:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c8b1:	lea    r8,[rip+0x2a230]        # 0x140036ae8
   14000c8b8:	call   0x140001f70
   14000c8bd:	movzx  eax,WORD PTR [rsp+0x50]
   14000c8c2:	cmp    bp,ax
   14000c8c5:	jne    0x14000c8d9
   14000c8c7:	mov    rax,QWORD PTR [rdi]
   14000c8ca:	mov    QWORD PTR [rdi+0x8],rax
   14000c8ce:	add    rsp,0x20
   14000c8d2:	pop    r14
   14000c8d4:	pop    rdi
   14000c8d5:	pop    rsi
   14000c8d6:	pop    rbp
   14000c8d7:	pop    rbx
   14000c8d8:	ret    
   14000c8d9:	movzx  esi,bp
   14000c8dc:	cmp    bp,ax
   14000c8df:	jae    0x14000c8ce
   14000c8e1:	mov    rax,QWORD PTR [r14]
   14000c8e4:	mov    WORD PTR [rsp+0x60],bp
   14000c8e9:	mov    WORD PTR [rsp+0x68],bp
   14000c8ee:	mov    rbx,QWORD PTR [rax+0x20]
   14000c8f2:	mov    rcx,rbx
   14000c8f5:	call   QWORD PTR [rip+0x25dad]        # 0x1400326a8
   14000c8fb:	lea    r9,[rsp+0x68]
   14000c900:	movzx  edx,si
   14000c903:	lea    r8,[rsp+0x60]
   14000c908:	mov    rcx,r14
   14000c90b:	call   rbx
   14000c90d:	test   eax,eax
   14000c90f:	js     0x14000c94a
   14000c911:	lea    rdx,[rsp+0x60]
   14000c916:	mov    rcx,rdi
   14000c919:	call   0x14000cca0
   14000c91e:	lea    rdx,[rsp+0x68]
   14000c923:	mov    rcx,rdi
   14000c926:	call   0x14000cca0
   14000c92b:	inc    si
   14000c92e:	cmp    si,WORD PTR [rsp+0x50]
   14000c933:	jb     0x14000c8e1
   14000c935:	jmp    0x14000c8ce
   14000c937:	mov    ecx,0x80004003
   14000c93c:	call   0x140029d64
   14000c941:	int3   
   14000c942:	mov    ecx,eax
   14000c944:	call   0x140029d64
   14000c949:	int3   
   14000c94a:	mov    ecx,eax
   14000c94c:	call   0x140029d64
   14000c951:	int3   
   14000c952:	int3   
   14000c953:	int3   
   14000c954:	int3   
   14000c955:	int3   
   14000c956:	int3   
   14000c957:	int3   
   14000c958:	mov    rax,rsp
   14000c95b:	push   rbp
   14000c95c:	push   rdi
   14000c95d:	push   r12
   14000c95f:	push   r14
   14000c961:	push   r15
   14000c963:	lea    rbp,[rax-0x5f]
   14000c967:	sub    rsp,0xb0
   14000c96e:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000c976:	mov    QWORD PTR [rax+0x18],rbx
   14000c97a:	mov    QWORD PTR [rax+0x20],rsi
   14000c97e:	mov    rax,QWORD PTR [rip+0x3e69b]        # 0x14004b020
   14000c985:	xor    rax,rsp
   14000c988:	mov    QWORD PTR [rbp+0x2f],rax
   14000c98c:	mov    r14,rdx
   14000c98f:	mov    rdi,rcx
   14000c992:	xor    r15d,r15d
   14000c995:	mov    QWORD PTR [rbp-0x21],r15
   14000c999:	mov    rax,QWORD PTR [rcx]
   14000c99c:	mov    rbx,QWORD PTR [rax]
   14000c99f:	mov    rcx,rbx
   14000c9a2:	call   QWORD PTR [rip+0x25d00]        # 0x1400326a8
   14000c9a8:	lea    r8,[rbp-0x21]
   14000c9ac:	lea    rdx,[rip+0x2a0b5]        # 0x140036a68
   14000c9b3:	mov    rcx,rdi
   14000c9b6:	call   rbx
   14000c9b8:	test   eax,eax
   14000c9ba:	jns    0x14000c9c4
   14000c9bc:	mov    ecx,eax
   14000c9be:	call   0x140029d64
   14000c9c3:	int3   
   14000c9c4:	mov    DWORD PTR [rbp-0x41],r15d
   14000c9c8:	mov    rbx,QWORD PTR [rbp-0x21]
   14000c9cc:	mov    rax,QWORD PTR [rbx]
   14000c9cf:	mov    rdi,QWORD PTR [rax+0x18]
   14000c9d3:	mov    rcx,rdi
   14000c9d6:	call   QWORD PTR [rip+0x25ccc]        # 0x1400326a8
   14000c9dc:	lea    rdx,[rbp-0x41]
   14000c9e0:	mov    rcx,rbx
   14000c9e3:	call   rdi
   14000c9e5:	test   eax,eax
   14000c9e7:	jns    0x14000c9f1
   14000c9e9:	mov    ecx,eax
   14000c9eb:	call   0x140029d64
   14000c9f0:	int3   
   14000c9f1:	xorps  xmm0,xmm0
   14000c9f4:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14000c9f9:	mov    QWORD PTR [rbp-0x29],r15
   14000c9fd:	mov    ebx,0x104
   14000ca02:	mov    edx,ebx
   14000ca04:	lea    rcx,[rbp-0x39]
   14000ca08:	call   0x14000d198
   14000ca0d:	nop
   14000ca0e:	xorps  xmm0,xmm0
   14000ca11:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   14000ca16:	mov    QWORD PTR [rbp-0x9],r15
   14000ca1a:	mov    edx,ebx
   14000ca1c:	lea    rcx,[rbp-0x19]
   14000ca20:	call   0x14000d198
   14000ca25:	nop
   14000ca26:	mov    esi,r15d
   14000ca29:	cmp    DWORD PTR [rbp-0x41],r15d
   14000ca2d:	jbe    0x14000cc1e
   14000ca33:	mov    QWORD PTR [rbp+0x7],r15
   14000ca37:	lea    r12,[rip+0x3e63a]        # 0x14004b078
   14000ca3e:	mov    QWORD PTR [rbp-0x49],r15
   14000ca42:	mov    rbx,QWORD PTR [rbp-0x21]
   14000ca46:	mov    rax,QWORD PTR [rbx]
   14000ca49:	mov    rdi,QWORD PTR [rax+0x20]
   14000ca4d:	mov    rcx,rdi
   14000ca50:	call   QWORD PTR [rip+0x25c52]        # 0x1400326a8
   14000ca56:	lea    r8,[rbp-0x49]
   14000ca5a:	mov    edx,esi
   14000ca5c:	mov    rcx,rbx
   14000ca5f:	call   rdi
   14000ca61:	test   eax,eax
   14000ca63:	js     0x14000cc16
   14000ca69:	lea    rdx,[rbp-0x39]
   14000ca6d:	mov    rcx,QWORD PTR [rbp-0x49]
   14000ca71:	call   0x140023124
   14000ca76:	test   eax,eax
   14000ca78:	jns    0x14000cabf
   14000ca7a:	mov    rcx,QWORD PTR [rip+0x3e5f7]        # 0x14004b078
   14000ca81:	cmp    rcx,r12
   14000ca84:	je     0x14000cbfa
   14000ca8a:	test   BYTE PTR [rcx+0x1c],0x1
   14000ca8e:	je     0x14000cbfa
   14000ca94:	mov    r8,QWORD PTR [rbp-0x31]
   14000ca98:	sub    r8,QWORD PTR [rbp-0x39]
   14000ca9c:	sar    r8,1
   14000ca9f:	mov    edx,0x4c
   14000caa4:	mov    QWORD PTR [rsp+0x28],r8
   14000caa9:	mov    DWORD PTR [rsp+0x20],eax
   14000caad:	mov    r9,QWORD PTR [rbp-0x49]
   14000cab1:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cab5:	call   0x1400074bc
   14000caba:	jmp    0x14000cbfa
   14000cabf:	mov    rcx,QWORD PTR [rip+0x3e5b2]        # 0x14004b078
   14000cac6:	cmp    rcx,r12
   14000cac9:	je     0x14000caf8
   14000cacb:	test   BYTE PTR [rcx+0x1c],0x4
   14000cacf:	je     0x14000caf8
   14000cad1:	lea    r8,[rbp-0x39]
   14000cad5:	mov    rax,QWORD PTR [rbp-0x39]
   14000cad9:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cadd:	cmovne r8,rax
   14000cae1:	mov    edx,0x4d
   14000cae6:	mov    QWORD PTR [rsp+0x20],r8
   14000caeb:	mov    r9,QWORD PTR [rbp-0x49]
   14000caef:	mov    rcx,QWORD PTR [rcx+0x10]
   14000caf3:	call   0x1400073d4
   14000caf8:	mov    rdx,QWORD PTR [rbp-0x31]
   14000cafc:	mov    rax,QWORD PTR [rbp-0x39]
   14000cb00:	sub    rdx,rax
   14000cb03:	sar    rdx,1
   14000cb06:	lea    rcx,[rbp-0x39]
   14000cb0a:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cb0e:	cmovne rcx,rax
   14000cb12:	lea    r8,[rbp-0x19]
   14000cb16:	call   0x1400231bc
   14000cb1b:	mov    r8d,eax
   14000cb1e:	test   eax,eax
   14000cb20:	jns    0x14000cb6b
   14000cb22:	mov    rcx,QWORD PTR [rip+0x3e54f]        # 0x14004b078
   14000cb29:	cmp    rcx,r12
   14000cb2c:	je     0x14000cbfa
   14000cb32:	test   BYTE PTR [rcx+0x1c],0x1
   14000cb36:	je     0x14000cbfa
   14000cb3c:	lea    r9,[rbp-0x39]
   14000cb40:	mov    rax,QWORD PTR [rbp-0x39]
   14000cb44:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cb48:	cmovne r9,rax
   14000cb4c:	mov    rax,QWORD PTR [rbp-0x11]
   14000cb50:	sub    rax,QWORD PTR [rbp-0x19]
   14000cb54:	sar    rax,1
   14000cb57:	mov    edx,0x4e
   14000cb5c:	mov    QWORD PTR [rsp+0x28],rax
   14000cb61:	mov    DWORD PTR [rsp+0x20],r8d
   14000cb66:	jmp    0x14000cab1
   14000cb6b:	mov    rcx,QWORD PTR [rip+0x3e506]        # 0x14004b078
   14000cb72:	cmp    rcx,r12
   14000cb75:	je     0x14000cbb0
   14000cb77:	test   BYTE PTR [rcx+0x1c],0x4
   14000cb7b:	je     0x14000cbb0
   14000cb7d:	lea    r8,[rbp-0x19]
   14000cb81:	mov    rax,QWORD PTR [rbp-0x19]
   14000cb85:	cmp    rax,QWORD PTR [rbp-0x11]
   14000cb89:	cmovne r8,rax
   14000cb8d:	lea    r9,[rbp-0x39]
   14000cb91:	mov    rax,QWORD PTR [rbp-0x39]
   14000cb95:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cb99:	cmovne r9,rax
   14000cb9d:	mov    edx,0x4f
   14000cba2:	mov    QWORD PTR [rsp+0x20],r8
   14000cba7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cbab:	call   0x1400073d4
   14000cbb0:	lea    rdx,[rbp-0x19]
   14000cbb4:	mov    rax,QWORD PTR [rbp-0x19]
   14000cbb8:	cmp    rax,QWORD PTR [rbp-0x11]
   14000cbbc:	cmovne rdx,rax
   14000cbc0:	mov    QWORD PTR [rbp+0x27],0x7
   14000cbc8:	mov    QWORD PTR [rbp+0x1f],r15
   14000cbcc:	mov    WORD PTR [rbp+0xf],r15w
   14000cbd1:	lea    rcx,[rbp+0xf]
   14000cbd5:	call   0x14000da34
   14000cbda:	nop
   14000cbdb:	lea    rdx,[rbp+0xf]
   14000cbdf:	mov    rcx,r14
   14000cbe2:	call   0x14000cee8
   14000cbe7:	nop
   14000cbe8:	cmp    QWORD PTR [rbp+0x27],0x8
   14000cbed:	jb     0x14000cbfa
   14000cbef:	mov    rcx,QWORD PTR [rbp+0xf]
   14000cbf3:	call   QWORD PTR [rip+0x259cf]        # 0x1400325c8
   14000cbf9:	nop
   14000cbfa:	mov    rcx,QWORD PTR [rbp-0x49]
   14000cbfe:	test   rcx,rcx
   14000cc01:	je     0x14000cc09
   14000cc03:	call   QWORD PTR [rip+0x25747]        # 0x140032350
   14000cc09:	inc    esi
   14000cc0b:	cmp    esi,DWORD PTR [rbp-0x41]
   14000cc0e:	jb     0x14000ca3e
   14000cc14:	jmp    0x14000cc1e
   14000cc16:	mov    ecx,eax
   14000cc18:	call   0x140029d64
   14000cc1d:	nop
   14000cc1e:	mov    rcx,QWORD PTR [rbp-0x19]
   14000cc22:	test   rcx,rcx
   14000cc25:	je     0x14000cc39
   14000cc27:	call   QWORD PTR [rip+0x2599b]        # 0x1400325c8
   14000cc2d:	xorps  xmm0,xmm0
   14000cc30:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   14000cc35:	mov    QWORD PTR [rbp-0x9],r15
   14000cc39:	mov    rcx,QWORD PTR [rbp-0x39]
   14000cc3d:	test   rcx,rcx
   14000cc40:	je     0x14000cc54
   14000cc42:	call   QWORD PTR [rip+0x25980]        # 0x1400325c8
   14000cc48:	xorps  xmm0,xmm0
   14000cc4b:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14000cc50:	mov    QWORD PTR [rbp-0x29],r15
   14000cc54:	mov    rbx,QWORD PTR [rbp-0x21]
   14000cc58:	test   rbx,rbx
   14000cc5b:	je     0x14000cc72
   14000cc5d:	mov    rax,QWORD PTR [rbx]
   14000cc60:	mov    rdi,QWORD PTR [rax+0x10]
   14000cc64:	mov    rcx,rdi
   14000cc67:	call   QWORD PTR [rip+0x25a3b]        # 0x1400326a8
   14000cc6d:	mov    rcx,rbx
   14000cc70:	call   rdi
   14000cc72:	mov    rcx,QWORD PTR [rbp+0x2f]
   14000cc76:	xor    rcx,rsp
   14000cc79:	call   0x14002dd00
   14000cc7e:	lea    r11,[rsp+0xb0]
   14000cc86:	mov    rbx,QWORD PTR [r11+0x40]
   14000cc8a:	mov    rsi,QWORD PTR [r11+0x48]
   14000cc8e:	mov    rsp,r11
   14000cc91:	pop    r15
   14000cc93:	pop    r14
   14000cc95:	pop    r12
   14000cc97:	pop    rdi
   14000cc98:	pop    rbp
   14000cc99:	ret    
   14000cc9a:	int3   
   14000cc9b:	int3   
   14000cc9c:	int3   
   14000cc9d:	int3   
   14000cc9e:	int3   
   14000cc9f:	int3   
   14000cca0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cca5:	push   rdi
   14000cca6:	sub    rsp,0x20
   14000ccaa:	mov    rbx,rcx
   14000ccad:	mov    rdi,rdx
   14000ccb0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ccb4:	cmp    rdx,rcx
   14000ccb7:	jae    0x14000cd46
   14000ccbd:	cmp    QWORD PTR [rbx],rdx
   14000ccc0:	ja     0x14000cd46
   14000ccc6:	sub    rdi,QWORD PTR [rbx]
   14000ccc9:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cccd:	sar    rdi,1
   14000ccd0:	cmp    rcx,rdx
   14000ccd3:	jne    0x14000cd31
   14000ccd5:	mov    rax,rdx
   14000ccd8:	sub    rax,rcx
   14000ccdb:	sar    rax,1
   14000ccde:	cmp    rax,0x1
   14000cce2:	jae    0x14000cd31
   14000cce4:	sub    rcx,QWORD PTR [rbx]
   14000cce7:	movabs r8,0x7fffffffffffffff
   14000ccf1:	sar    rcx,1
   14000ccf4:	mov    rax,r8
   14000ccf7:	sub    rax,rcx
   14000ccfa:	cmp    rax,0x1
   14000ccfe:	jb     0x14000cdc6
   14000cd04:	sub    rdx,QWORD PTR [rbx]
   14000cd07:	inc    rcx
   14000cd0a:	sar    rdx,1
   14000cd0d:	mov    rax,rdx
   14000cd10:	shr    rax,1
   14000cd13:	sub    r8,rax
   14000cd16:	cmp    r8,rdx
   14000cd19:	jae    0x14000cd1f
   14000cd1b:	xor    edx,edx
   14000cd1d:	jmp    0x14000cd22
   14000cd1f:	add    rdx,rax
   14000cd22:	cmp    rdx,rcx
   14000cd25:	cmovb  rdx,rcx
   14000cd29:	mov    rcx,rbx
   14000cd2c:	call   0x14000d2d0
   14000cd31:	mov    rdx,QWORD PTR [rbx+0x8]
   14000cd35:	test   rdx,rdx
   14000cd38:	je     0x14000cdb6
   14000cd3a:	mov    rax,QWORD PTR [rbx]
   14000cd3d:	movzx  ecx,WORD PTR [rax+rdi*2]
   14000cd41:	mov    WORD PTR [rdx],cx
   14000cd44:	jmp    0x14000cdb6
   14000cd46:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cd4a:	cmp    rcx,rdx
   14000cd4d:	jne    0x14000cda7
   14000cd4f:	mov    rax,rdx
   14000cd52:	sub    rax,rcx
   14000cd55:	sar    rax,1
   14000cd58:	cmp    rax,0x1
   14000cd5c:	jae    0x14000cda7
   14000cd5e:	sub    rcx,QWORD PTR [rbx]
   14000cd61:	movabs r8,0x7fffffffffffffff
   14000cd6b:	sar    rcx,1
   14000cd6e:	mov    rax,r8
   14000cd71:	sub    rax,rcx
   14000cd74:	cmp    rax,0x1
   14000cd78:	jb     0x14000cdcc
   14000cd7a:	sub    rdx,QWORD PTR [rbx]
   14000cd7d:	inc    rcx
   14000cd80:	sar    rdx,1
   14000cd83:	mov    rax,rdx
   14000cd86:	shr    rax,1
   14000cd89:	sub    r8,rax
   14000cd8c:	cmp    r8,rdx
   14000cd8f:	jae    0x14000cd95
   14000cd91:	xor    edx,edx
   14000cd93:	jmp    0x14000cd98
   14000cd95:	add    rdx,rax
   14000cd98:	cmp    rdx,rcx
   14000cd9b:	cmovb  rdx,rcx
   14000cd9f:	mov    rcx,rbx
   14000cda2:	call   0x14000d2d0
   14000cda7:	mov    rcx,QWORD PTR [rbx+0x8]
   14000cdab:	test   rcx,rcx
   14000cdae:	je     0x14000cdb6
   14000cdb0:	movzx  eax,WORD PTR [rdi]
   14000cdb3:	mov    WORD PTR [rcx],ax
   14000cdb6:	add    QWORD PTR [rbx+0x8],0x2
   14000cdbb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cdc0:	add    rsp,0x20
   14000cdc4:	pop    rdi
   14000cdc5:	ret    
   14000cdc6:	call   0x14000d388
   14000cdcb:	int3   
   14000cdcc:	call   0x14000d388
   14000cdd1:	int3   
   14000cdd2:	int3   
   14000cdd3:	int3   
   14000cdd4:	int3   
   14000cdd5:	int3   
   14000cdd6:	int3   
   14000cdd7:	int3   
   14000cdd8:	mov    QWORD PTR [rsp+0x8],rbx
   14000cddd:	push   rdi
   14000cdde:	sub    rsp,0x20
   14000cde2:	mov    rdi,QWORD PTR [rcx]
   14000cde5:	test   rdi,rdi
   14000cde8:	je     0x14000ce26
   14000cdea:	mov    eax,DWORD PTR [rdi+0x8]
   14000cded:	cmp    eax,0x1
   14000cdf0:	jne    0x14000cdfb
   14000cdf2:	mov    DWORD PTR [rdi+0x8],0x0
   14000cdf9:	jmp    0x14000ce08
   14000cdfb:	or     eax,0xffffffff
   14000cdfe:	lock xadd DWORD PTR [rdi+0x8],eax
   14000ce03:	sub    eax,0x1
   14000ce06:	jg     0x14000ce26
   14000ce08:	test   rdi,rdi
   14000ce0b:	je     0x14000ce26
   14000ce0d:	mov    rax,QWORD PTR [rdi]
   14000ce10:	mov    rbx,QWORD PTR [rax]
   14000ce13:	mov    rcx,rbx
   14000ce16:	call   QWORD PTR [rip+0x2588c]        # 0x1400326a8
   14000ce1c:	mov    edx,0x1
   14000ce21:	mov    rcx,rdi
   14000ce24:	call   rbx
   14000ce26:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce2b:	add    rsp,0x20
   14000ce2f:	pop    rdi
   14000ce30:	ret    
   14000ce31:	int3   
   14000ce32:	int3   
   14000ce33:	int3   
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce3d:	push   rdi
   14000ce3e:	sub    rsp,0x20
   14000ce42:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ce47:	mov    rdi,rcx
   14000ce4a:	je     0x14000ce77
   14000ce4c:	mov    rbx,QWORD PTR [rcx]
   14000ce4f:	cmp    rbx,rcx
   14000ce52:	je     0x14000ce77
   14000ce54:	mov    rcx,rbx
   14000ce57:	mov    rbx,QWORD PTR [rbx]
   14000ce5a:	mov    rax,QWORD PTR [rcx+0x8]
   14000ce5e:	mov    rdx,QWORD PTR [rcx]
   14000ce61:	mov    QWORD PTR [rax],rdx
   14000ce64:	mov    QWORD PTR [rdx+0x8],rax
   14000ce68:	call   QWORD PTR [rip+0x2575a]        # 0x1400325c8
   14000ce6e:	dec    QWORD PTR [rdi+0x10]
   14000ce72:	cmp    rbx,rdi
   14000ce75:	jne    0x14000ce54
   14000ce77:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce7c:	add    rsp,0x20
   14000ce80:	pop    rdi
   14000ce81:	ret    
   14000ce82:	int3   
   14000ce83:	int3   
   14000ce84:	int3   
   14000ce85:	int3   
   14000ce86:	int3   
   14000ce87:	int3   
   14000ce88:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce8d:	push   rdi
   14000ce8e:	sub    rsp,0x20
   14000ce92:	mov    rdi,QWORD PTR [rcx]
   14000ce95:	test   rdi,rdi
   14000ce98:	je     0x14000ceaf
   14000ce9a:	mov    rax,QWORD PTR [rdi]
   14000ce9d:	mov    rbx,QWORD PTR [rax+0x10]
   14000cea1:	mov    rcx,rbx
   14000cea4:	call   QWORD PTR [rip+0x257fe]        # 0x1400326a8
   14000ceaa:	mov    rcx,rdi
   14000cead:	call   rbx
   14000ceaf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ceb4:	add    rsp,0x20
   14000ceb8:	pop    rdi
   14000ceb9:	ret    
   14000ceba:	int3   
   14000cebb:	int3   
   14000cebc:	int3   
   14000cebd:	int3   
   14000cebe:	int3   
   14000cebf:	int3   
   14000cec0:	rex push rbx
   14000cec2:	sub    rsp,0x20
   14000cec6:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000ceca:	mov    rbx,rcx
   14000cecd:	je     0x14000cedc
   14000cecf:	mov    rcx,QWORD PTR [rcx]
   14000ced2:	call   QWORD PTR [rip+0x25280]        # 0x140032158
   14000ced8:	or     QWORD PTR [rbx],0xffffffffffffffff
   14000cedc:	add    rsp,0x20
   14000cee0:	pop    rbx
   14000cee1:	ret    
   14000cee2:	int3   
   14000cee3:	int3   
   14000cee4:	int3   
   14000cee5:	int3   
   14000cee6:	int3   
   14000cee7:	int3   
   14000cee8:	mov    QWORD PTR [rsp+0x8],rbx
   14000ceed:	push   rdi
   14000ceee:	sub    rsp,0x20
   14000cef2:	mov    rbx,rcx
   14000cef5:	mov    rdi,rdx
   14000cef8:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cefc:	cmp    rdx,rcx
   14000ceff:	jae    0x14000cf7a
   14000cf01:	cmp    QWORD PTR [rbx],rdx
   14000cf04:	ja     0x14000cf7a
   14000cf06:	sub    rdi,QWORD PTR [rbx]
   14000cf09:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cf0d:	cmp    rcx,rdx
   14000cf10:	jne    0x14000cf71
   14000cf12:	mov    rax,rdx
   14000cf15:	sub    rax,rcx
   14000cf18:	sar    rax,0x5
   14000cf1c:	cmp    rax,0x1
   14000cf20:	jae    0x14000cf71
   14000cf22:	sub    rcx,QWORD PTR [rbx]
   14000cf25:	movabs r8,0x7ffffffffffffff
   14000cf2f:	sar    rcx,0x5
   14000cf33:	mov    rax,r8
   14000cf36:	sub    rax,rcx
   14000cf39:	cmp    rax,0x1
   14000cf3d:	jb     0x14000cffa
   14000cf43:	sub    rdx,QWORD PTR [rbx]
   14000cf46:	inc    rcx
   14000cf49:	sar    rdx,0x5
   14000cf4d:	mov    rax,rdx
   14000cf50:	shr    rax,1
   14000cf53:	sub    r8,rax
   14000cf56:	cmp    r8,rdx
   14000cf59:	jae    0x14000cf5f
   14000cf5b:	xor    edx,edx
   14000cf5d:	jmp    0x14000cf62
   14000cf5f:	add    rdx,rax
   14000cf62:	cmp    rdx,rcx
   14000cf65:	cmovb  rdx,rcx
   14000cf69:	mov    rcx,rbx
   14000cf6c:	call   0x14000d3a0
   14000cf71:	and    rdi,0xffffffffffffffe0
   14000cf75:	add    rdi,QWORD PTR [rbx]
   14000cf78:	jmp    0x14000cfde
   14000cf7a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cf7e:	cmp    rcx,rdx
   14000cf81:	jne    0x14000cfde
   14000cf83:	mov    rax,rdx
   14000cf86:	sub    rax,rcx
   14000cf89:	sar    rax,0x5
   14000cf8d:	cmp    rax,0x1
   14000cf91:	jae    0x14000cfde
   14000cf93:	sub    rcx,QWORD PTR [rbx]
   14000cf96:	movabs r8,0x7ffffffffffffff
   14000cfa0:	sar    rcx,0x5
   14000cfa4:	mov    rax,r8
   14000cfa7:	sub    rax,rcx
   14000cfaa:	cmp    rax,0x1
   14000cfae:	jb     0x14000d000
   14000cfb0:	sub    rdx,QWORD PTR [rbx]
   14000cfb3:	inc    rcx
   14000cfb6:	sar    rdx,0x5
   14000cfba:	mov    rax,rdx
   14000cfbd:	shr    rax,1
   14000cfc0:	sub    r8,rax
   14000cfc3:	cmp    r8,rdx
   14000cfc6:	jae    0x14000cfcc
   14000cfc8:	xor    edx,edx
   14000cfca:	jmp    0x14000cfcf
   14000cfcc:	add    rdx,rax
   14000cfcf:	cmp    rdx,rcx
   14000cfd2:	cmovb  rdx,rcx
   14000cfd6:	mov    rcx,rbx
   14000cfd9:	call   0x14000d3a0
   14000cfde:	mov    rdx,QWORD PTR [rbx+0x8]
   14000cfe2:	mov    r8,rdi
   14000cfe5:	call   0x14000d57c
   14000cfea:	add    QWORD PTR [rbx+0x8],0x20
   14000cfef:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cff4:	add    rsp,0x20
   14000cff8:	pop    rdi
   14000cff9:	ret    
   14000cffa:	call   0x14000d388
   14000cfff:	int3   
   14000d000:	call   0x14000d388
   14000d005:	int3   
   14000d006:	int3   
   14000d007:	int3   
   14000d008:	int3   
   14000d009:	int3   
   14000d00a:	int3   
   14000d00b:	int3   
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	mov    eax,0x1
   14000d015:	lock xadd DWORD PTR [rcx+0x18],eax
   14000d01a:	inc    eax
   14000d01c:	ret    
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	int3   
   14000d021:	int3   
   14000d022:	int3   
   14000d023:	int3   
   14000d024:	int3   
   14000d025:	int3   
   14000d026:	int3   
   14000d027:	int3   
   14000d028:	int3   
   14000d029:	int3   
   14000d02a:	int3   
   14000d02b:	int3   
   14000d02c:	int3   
   14000d02d:	int3   
   14000d02e:	int3   
   14000d02f:	int3   
   14000d030:	mov    QWORD PTR [rsp+0x8],rbx
   14000d035:	mov    QWORD PTR [rsp+0x10],rsi
   14000d03a:	push   rdi
   14000d03b:	sub    rsp,0x20
   14000d03f:	mov    rsi,rcx
   14000d042:	or     edi,0xffffffff
   14000d045:	lock xadd DWORD PTR [rcx+0x18],edi
   14000d04a:	sub    edi,0x1
   14000d04d:	jne    0x14000d082
   14000d04f:	mov    rax,QWORD PTR [rip+0x42f82]        # 0x14004ffd8
   14000d056:	lock inc DWORD PTR [rax+0xc]
   14000d05a:	test   rcx,rcx
   14000d05d:	je     0x14000d077
   14000d05f:	mov    rcx,QWORD PTR [rcx]
   14000d062:	mov    rbx,QWORD PTR [rcx+0x18]
   14000d066:	mov    rcx,rbx
   14000d069:	call   QWORD PTR [rip+0x25639]        # 0x1400326a8
   14000d06f:	lea    edx,[rdi+0x1]
   14000d072:	mov    rcx,rsi
   14000d075:	call   rbx
   14000d077:	mov    rcx,QWORD PTR [rip+0x42f5a]        # 0x14004ffd8
   14000d07e:	lock dec DWORD PTR [rcx+0xc]
   14000d082:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d087:	mov    eax,edi
   14000d089:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d08e:	add    rsp,0x20
   14000d092:	pop    rdi
   14000d093:	ret    
   14000d094:	int3   
   14000d095:	int3   
   14000d096:	int3   
   14000d097:	int3   
   14000d098:	int3   
   14000d099:	int3   
   14000d09a:	int3   
   14000d09b:	int3   
   14000d09c:	int3   
   14000d09d:	int3   
   14000d09e:	int3   
   14000d09f:	int3   
   14000d0a0:	mov    r9,r8
   14000d0a3:	add    rcx,0xfffffffffffffff0
   14000d0a7:	mov    r8,rdx
   14000d0aa:	lea    rdx,[rip+0x2994f]        # 0x140036a00
   14000d0b1:	jmp    0x140004664
   14000d0b6:	int3   
   14000d0b7:	int3   
   14000d0b8:	int3   
   14000d0b9:	int3   
   14000d0ba:	int3   
   14000d0bb:	int3   
   14000d0bc:	mov    QWORD PTR [rsp+0x10],rbx
   14000d0c1:	push   rdi
   14000d0c2:	sub    rsp,0x20
   14000d0c6:	mov    rdi,QWORD PTR [rcx]
   14000d0c9:	test   rdi,rdi
   14000d0cc:	je     0x14000d0fa
   14000d0ce:	or     eax,0xffffffff
   14000d0d1:	lock xadd DWORD PTR [rdi+0x10],eax
   14000d0d6:	cmp    eax,0x1
   14000d0d9:	jne    0x14000d0fa
   14000d0db:	test   rdi,rdi
   14000d0de:	je     0x14000d0fa
   14000d0e0:	mov    rax,QWORD PTR [rdi]
   14000d0e3:	mov    rbx,QWORD PTR [rax+0x28]
   14000d0e7:	mov    rcx,rbx
   14000d0ea:	call   QWORD PTR [rip+0x255b8]        # 0x1400326a8
   14000d0f0:	mov    edx,0x1
   14000d0f5:	mov    rcx,rdi
   14000d0f8:	call   rbx
   14000d0fa:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d0ff:	add    rsp,0x20
   14000d103:	pop    rdi
   14000d104:	ret    
   14000d105:	int3   
   14000d106:	int3   
   14000d107:	int3   
   14000d108:	int3   
   14000d109:	int3   
   14000d10a:	int3   
   14000d10b:	int3   
   14000d10c:	sub    rsp,0x28
   14000d110:	mov    rcx,QWORD PTR [rcx]
   14000d113:	test   rcx,rcx
   14000d116:	je     0x14000d11e
   14000d118:	call   QWORD PTR [rip+0x2532a]        # 0x140032448
   14000d11e:	add    rsp,0x28
   14000d122:	ret    
   14000d123:	int3   
   14000d124:	int3   
   14000d125:	int3   
   14000d126:	int3   
   14000d127:	int3   
   14000d128:	int3   
   14000d129:	int3   
   14000d12a:	int3   
   14000d12b:	int3   
   14000d12c:	int3   
   14000d12d:	int3   
   14000d12e:	int3   
   14000d12f:	int3   
   14000d130:	mov    QWORD PTR [rsp+0x8],rbx
   14000d135:	push   rdi
   14000d136:	sub    rsp,0x20
   14000d13a:	lea    rax,[rip+0x27577]        # 0x1400346b8
   14000d141:	mov    DWORD PTR [rcx+0x18],0xc0000001
   14000d148:	mov    QWORD PTR [rcx],rax
   14000d14b:	mov    ebx,edx
   14000d14d:	lea    rax,[rip+0x27544]        # 0x140034698
   14000d154:	mov    rdi,rcx
   14000d157:	mov    QWORD PTR [rcx+0x8],rax
   14000d15b:	lea    rax,[rip+0x274fe]        # 0x140034660
   14000d162:	mov    QWORD PTR [rcx+0x10],rax
   14000d166:	mov    rax,QWORD PTR [rip+0x42e6b]        # 0x14004ffd8
   14000d16d:	lock dec DWORD PTR [rax+0xc]
   14000d171:	call   0x140007908
   14000d176:	test   bl,0x1
   14000d179:	je     0x14000d184
   14000d17b:	mov    rcx,rdi
   14000d17e:	call   QWORD PTR [rip+0x25444]        # 0x1400325c8
   14000d184:	mov    rax,rdi
   14000d187:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d18c:	add    rsp,0x20
   14000d190:	pop    rdi
   14000d191:	ret    
   14000d192:	int3   
   14000d193:	int3   
   14000d194:	int3   
   14000d195:	int3   
   14000d196:	int3   
   14000d197:	int3   
   14000d198:	mov    rax,rsp
   14000d19b:	mov    QWORD PTR [rax+0x8],rcx
   14000d19f:	push   rdi
   14000d1a0:	sub    rsp,0x30
   14000d1a4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d1ac:	mov    QWORD PTR [rax+0x10],rbx
   14000d1b0:	mov    QWORD PTR [rax+0x18],rsi
   14000d1b4:	mov    rbx,rdx
   14000d1b7:	mov    rsi,rcx
   14000d1ba:	mov    rax,QWORD PTR [rcx+0x8]
   14000d1be:	mov    r8,QWORD PTR [rcx]
   14000d1c1:	mov    rdi,rax
   14000d1c4:	sub    rdi,r8
   14000d1c7:	sar    rdi,1
   14000d1ca:	cmp    rdi,rdx
   14000d1cd:	jbe    0x14000d213
   14000d1cf:	lea    rdi,[r8+rdx*2]
   14000d1d3:	cmp    rdi,r8
   14000d1d6:	jne    0x14000d1e1
   14000d1d8:	mov    QWORD PTR [rcx+0x8],r8
   14000d1dc:	jmp    0x14000d2b7
   14000d1e1:	cmp    rdi,rax
   14000d1e4:	je     0x14000d2b7
   14000d1ea:	mov    rcx,rax
   14000d1ed:	sub    rcx,rax
   14000d1f0:	sar    rcx,1
   14000d1f3:	lea    rbx,[rcx+rcx*1]
   14000d1f7:	mov    r8,rbx
   14000d1fa:	mov    rdx,rax
   14000d1fd:	mov    rcx,rdi
   14000d200:	call   QWORD PTR [rip+0x2529a]        # 0x1400324a0
   14000d206:	lea    rax,[rbx+rdi*1]
   14000d20a:	mov    QWORD PTR [rsi+0x8],rax
   14000d20e:	jmp    0x14000d2b7
   14000d213:	jae    0x14000d2b7
   14000d219:	mov    r9,rdx
   14000d21c:	sub    r9,rdi
   14000d21f:	mov    rdx,QWORD PTR [rcx+0x10]
   14000d223:	mov    rcx,rdx
   14000d226:	sub    rcx,rax
   14000d229:	sar    rcx,1
   14000d22c:	cmp    rcx,r9
   14000d22f:	jae    0x14000d280
   14000d231:	movabs rcx,0x7fffffffffffffff
   14000d23b:	mov    rax,rcx
   14000d23e:	sub    rax,rdi
   14000d241:	cmp    rax,r9
   14000d244:	jae    0x14000d24c
   14000d246:	call   0x14000d388
   14000d24b:	int3   
   14000d24c:	lea    r10,[rdi+r9*1]
   14000d250:	sub    rdx,r8
   14000d253:	sar    rdx,1
   14000d256:	mov    rax,rdx
   14000d259:	shr    rax,1
   14000d25c:	sub    rcx,rax
   14000d25f:	cmp    rcx,rdx
   14000d262:	jae    0x14000d26a
   14000d264:	xor    edi,edi
   14000d266:	mov    edx,edi
   14000d268:	jmp    0x14000d26f
   14000d26a:	add    rdx,rax
   14000d26d:	xor    edi,edi
   14000d26f:	cmp    rdx,r10
   14000d272:	cmovb  rdx,r10
   14000d276:	mov    rcx,rsi
   14000d279:	call   0x14000d2d0
   14000d27e:	jmp    0x14000d282
   14000d280:	xor    edi,edi
   14000d282:	mov    rax,QWORD PTR [rsi+0x8]
   14000d286:	sub    rax,QWORD PTR [rsi]
   14000d289:	sar    rax,1
   14000d28c:	mov    rcx,rbx
   14000d28f:	sub    rcx,rax
   14000d292:	je     0x14000d29e
   14000d294:	movzx  eax,di
   14000d297:	mov    rdi,QWORD PTR [rsi+0x8]
   14000d29b:	rep stos WORD PTR es:[rdi],ax
   14000d29e:	mov    rcx,QWORD PTR [rsi+0x8]
   14000d2a2:	mov    rax,rcx
   14000d2a5:	sub    rax,QWORD PTR [rsi]
   14000d2a8:	sar    rax,1
   14000d2ab:	sub    rbx,rax
   14000d2ae:	lea    rax,[rcx+rbx*2]
   14000d2b2:	jmp    0x14000d20a
   14000d2b7:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d2bc:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d2c1:	add    rsp,0x30
   14000d2c5:	pop    rdi
   14000d2c6:	ret    
   14000d2c7:	int3   
   14000d2c8:	int3   
   14000d2c9:	int3   
   14000d2ca:	int3   
   14000d2cb:	int3   
   14000d2cc:	int3   
   14000d2cd:	int3   
   14000d2ce:	int3   
   14000d2cf:	int3   
   14000d2d0:	mov    rax,rsp
   14000d2d3:	push   r14
   14000d2d5:	sub    rsp,0x30
   14000d2d9:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d2e1:	mov    QWORD PTR [rax+0x8],rbx
   14000d2e5:	mov    QWORD PTR [rax+0x18],rsi
   14000d2e9:	mov    QWORD PTR [rax+0x20],rdi
   14000d2ed:	mov    rsi,rdx
   14000d2f0:	mov    rdi,rcx
   14000d2f3:	xor    ebx,ebx
   14000d2f5:	mov    QWORD PTR [rsp+0x48],rbx
   14000d2fa:	test   rdx,rdx
   14000d2fd:	je     0x14000d327
   14000d2ff:	movabs rax,0x7fffffffffffffff
   14000d309:	cmp    rdx,rax
   14000d30c:	ja     0x14000d321
   14000d30e:	lea    rcx,[rdx+rdx*1]
   14000d312:	call   0x140023f10
   14000d317:	mov    rbx,rax
   14000d31a:	mov    QWORD PTR [rsp+0x48],rax
   14000d31f:	jmp    0x14000d327
   14000d321:	call   0x14000203c
   14000d326:	nop
   14000d327:	mov    r8,QWORD PTR [rdi+0x8]
   14000d32b:	sub    r8,QWORD PTR [rdi]
   14000d32e:	sar    r8,1
   14000d331:	add    r8,r8
   14000d334:	mov    rdx,QWORD PTR [rdi]
   14000d337:	mov    rcx,rbx
   14000d33a:	call   QWORD PTR [rip+0x25160]        # 0x1400324a0
   14000d340:	nop
   14000d341:	mov    rcx,QWORD PTR [rdi]
   14000d344:	mov    r14,QWORD PTR [rdi+0x8]
   14000d348:	sub    r14,rcx
   14000d34b:	sar    r14,1
   14000d34e:	test   rcx,rcx
   14000d351:	je     0x14000d359
   14000d353:	call   QWORD PTR [rip+0x2526f]        # 0x1400325c8
   14000d359:	lea    rax,[rbx+rsi*2]
   14000d35d:	mov    QWORD PTR [rdi+0x10],rax
   14000d361:	lea    rax,[rbx+r14*2]
   14000d365:	mov    QWORD PTR [rdi+0x8],rax
   14000d369:	mov    QWORD PTR [rdi],rbx
   14000d36c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d371:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d376:	mov    rdi,QWORD PTR [rsp+0x58]
   14000d37b:	add    rsp,0x30
   14000d37f:	pop    r14
   14000d381:	ret    
   14000d382:	int3   
   14000d383:	int3   
   14000d384:	int3   
   14000d385:	int3   
   14000d386:	int3   
   14000d387:	int3   
   14000d388:	sub    rsp,0x28
   14000d38c:	lea    rcx,[rip+0x296f5]        # 0x140036a88
   14000d393:	call   0x14002d7f8
   14000d398:	int3   
   14000d399:	int3   
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	int3   
   14000d39d:	int3   
   14000d39e:	int3   
   14000d39f:	int3   
   14000d3a0:	mov    rax,rsp
   14000d3a3:	push   rdi
   14000d3a4:	push   r12
   14000d3a6:	push   r13
   14000d3a8:	push   r14
   14000d3aa:	push   r15
   14000d3ac:	sub    rsp,0x40
   14000d3b0:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000d3b8:	mov    QWORD PTR [rax+0x8],rbx
   14000d3bc:	mov    QWORD PTR [rax+0x18],rsi
   14000d3c0:	mov    rdi,rdx
   14000d3c3:	mov    r14,rcx
   14000d3c6:	xor    r13d,r13d
   14000d3c9:	mov    esi,r13d
   14000d3cc:	mov    QWORD PTR [rsp+0x78],r13
   14000d3d1:	test   rdx,rdx
   14000d3d4:	je     0x14000d401
   14000d3d6:	movabs rax,0x7ffffffffffffff
   14000d3e0:	cmp    rdx,rax
   14000d3e3:	ja     0x14000d3fb
   14000d3e5:	mov    rcx,rdx
   14000d3e8:	shl    rcx,0x5
   14000d3ec:	call   0x140023f10
   14000d3f1:	mov    rsi,rax
   14000d3f4:	mov    QWORD PTR [rsp+0x78],rax
   14000d3f9:	jmp    0x14000d401
   14000d3fb:	call   0x14000203c
   14000d400:	nop
   14000d401:	mov    r8,rsi
   14000d404:	mov    rdx,QWORD PTR [r14+0x8]
   14000d408:	mov    rcx,QWORD PTR [r14]
   14000d40b:	call   0x14000d6f4
   14000d410:	nop
   14000d411:	mov    r12,QWORD PTR [r14+0x8]
   14000d415:	mov    rbx,QWORD PTR [r14]
   14000d418:	mov    r15,r12
   14000d41b:	sub    r15,rbx
   14000d41e:	test   rbx,rbx
   14000d421:	je     0x14000d457
   14000d423:	jmp    0x14000d449
   14000d425:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d42a:	jb     0x14000d435
   14000d42c:	mov    rcx,QWORD PTR [rbx]
   14000d42f:	call   QWORD PTR [rip+0x25193]        # 0x1400325c8
   14000d435:	mov    QWORD PTR [rbx+0x18],0x7
   14000d43d:	mov    QWORD PTR [rbx+0x10],r13
   14000d441:	mov    WORD PTR [rbx],r13w
   14000d445:	add    rbx,0x20
   14000d449:	cmp    rbx,r12
   14000d44c:	jne    0x14000d425
   14000d44e:	mov    rcx,QWORD PTR [r14]
   14000d451:	call   QWORD PTR [rip+0x25171]        # 0x1400325c8
   14000d457:	shl    rdi,0x5
   14000d45b:	add    rdi,rsi
   14000d45e:	mov    QWORD PTR [r14+0x10],rdi
   14000d462:	and    r15,0xffffffffffffffe0
   14000d466:	add    r15,rsi
   14000d469:	mov    QWORD PTR [r14+0x8],r15
   14000d46d:	mov    QWORD PTR [r14],rsi
   14000d470:	lea    r11,[rsp+0x40]
   14000d475:	mov    rbx,QWORD PTR [r11+0x30]
   14000d479:	mov    rsi,QWORD PTR [r11+0x40]
   14000d47d:	mov    rsp,r11
   14000d480:	pop    r15
   14000d482:	pop    r14
   14000d484:	pop    r13
   14000d486:	pop    r12
   14000d488:	pop    rdi
   14000d489:	ret    
   14000d48a:	int3   
   14000d48b:	int3   
   14000d48c:	int3   
   14000d48d:	int3   
   14000d48e:	int3   
   14000d48f:	int3   
   14000d490:	mov    QWORD PTR [rsp+0x8],rcx
   14000d495:	push   rbx
   14000d496:	push   rsi
   14000d497:	push   rdi
   14000d498:	push   r14
   14000d49a:	push   r15
   14000d49c:	sub    rsp,0x30
   14000d4a0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d4a9:	mov    r15,rcx
   14000d4ac:	xor    edi,edi
   14000d4ae:	test   rcx,rcx
   14000d4b1:	jne    0x14000d4bd
   14000d4b3:	mov    eax,0x80004003
   14000d4b8:	jmp    0x14000d567
   14000d4bd:	mov    QWORD PTR [rcx],rdi
   14000d4c0:	mov    esi,0x8007000e
   14000d4c5:	mov    DWORD PTR [rsp+0x68],esi
   14000d4c9:	mov    QWORD PTR [rsp+0x70],rdi
   14000d4ce:	mov    ecx,0x288
   14000d4d3:	call   0x140023f10
   14000d4d8:	mov    r14,rax
   14000d4db:	mov    rcx,rax
   14000d4de:	call   0x140007698
   14000d4e3:	lea    rax,[rip+0x271ce]        # 0x1400346b8
   14000d4ea:	mov    QWORD PTR [r14],rax
   14000d4ed:	lea    rax,[rip+0x271a4]        # 0x140034698
   14000d4f4:	mov    QWORD PTR [r14+0x8],rax
   14000d4f8:	lea    rax,[rip+0x27161]        # 0x140034660
   14000d4ff:	mov    QWORD PTR [r14+0x10],rax
   14000d503:	mov    rax,QWORD PTR [rip+0x42ace]        # 0x14004ffd8
   14000d50a:	lock inc DWORD PTR [rax+0xc]
   14000d50e:	mov    QWORD PTR [rsp+0x70],r14
   14000d513:	jmp    0x14000d525
   14000d515:	xor    edi,edi
   14000d517:	mov    r15,QWORD PTR [rsp+0x60]
   14000d51c:	mov    esi,DWORD PTR [rsp+0x68]
   14000d520:	mov    r14,QWORD PTR [rsp+0x70]
   14000d525:	test   r14,r14
   14000d528:	je     0x14000d562
   14000d52a:	lea    rcx,[r14+0x20]
   14000d52e:	call   0x140004ee4
   14000d533:	mov    esi,eax
   14000d535:	test   eax,eax
   14000d537:	js     0x14000d53e
   14000d539:	mov    BYTE PTR [r14+0x48],0x1
   14000d53e:	cmovns esi,edi
   14000d541:	test   esi,esi
   14000d543:	je     0x14000d562
   14000d545:	mov    r8,QWORD PTR [r14]
   14000d548:	mov    rbx,QWORD PTR [r8+0x18]
   14000d54c:	mov    rcx,rbx
   14000d54f:	call   QWORD PTR [rip+0x25153]        # 0x1400326a8
   14000d555:	mov    edx,0x1
   14000d55a:	mov    rcx,r14
   14000d55d:	call   rbx
   14000d55f:	mov    r14,rdi
   14000d562:	mov    QWORD PTR [r15],r14
   14000d565:	mov    eax,esi
   14000d567:	add    rsp,0x30
   14000d56b:	pop    r15
   14000d56d:	pop    r14
   14000d56f:	pop    rdi
   14000d570:	pop    rsi
   14000d571:	pop    rbx
   14000d572:	ret    
   14000d573:	int3   
   14000d574:	int3   
   14000d575:	int3   
   14000d576:	int3   
   14000d577:	int3   
   14000d578:	int3   
   14000d579:	int3   
   14000d57a:	int3   
   14000d57b:	int3   
   14000d57c:	test   rdx,rdx
   14000d57f:	je     0x14000d600
   14000d581:	mov    QWORD PTR [rsp+0x8],rbx
   14000d586:	mov    QWORD PTR [rsp+0x10],rsi
   14000d58b:	push   rdi
   14000d58c:	sub    rsp,0x20
   14000d590:	xor    esi,esi
   14000d592:	mov    QWORD PTR [rdx+0x18],0x7
   14000d59a:	mov    QWORD PTR [rdx+0x10],rsi
   14000d59e:	mov    rbx,r8
   14000d5a1:	mov    WORD PTR [rdx],si
   14000d5a4:	mov    rdi,rdx
   14000d5a7:	cmp    QWORD PTR [r8+0x18],0x8
   14000d5ac:	jae    0x14000d5c9
   14000d5ae:	mov    r8,QWORD PTR [r8+0x10]
   14000d5b2:	add    r8,0x1
   14000d5b6:	je     0x14000d5d2
   14000d5b8:	add    r8,r8
   14000d5bb:	mov    rdx,rbx
   14000d5be:	mov    rcx,rdi
   14000d5c1:	call   QWORD PTR [rip+0x24ed9]        # 0x1400324a0
   14000d5c7:	jmp    0x14000d5d2
   14000d5c9:	mov    rax,QWORD PTR [r8]
   14000d5cc:	mov    QWORD PTR [rdx],rax
   14000d5cf:	mov    QWORD PTR [r8],rsi
   14000d5d2:	mov    rax,QWORD PTR [rbx+0x10]
   14000d5d6:	mov    QWORD PTR [rdi+0x10],rax
   14000d5da:	mov    rax,QWORD PTR [rbx+0x18]
   14000d5de:	mov    QWORD PTR [rdi+0x18],rax
   14000d5e2:	mov    QWORD PTR [rbx+0x10],rsi
   14000d5e6:	mov    QWORD PTR [rbx+0x18],0x7
   14000d5ee:	mov    WORD PTR [rbx],si
   14000d5f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5f6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d5fb:	add    rsp,0x20
   14000d5ff:	pop    rdi
   14000d600:	ret    
   14000d601:	int3   
   14000d602:	int3   
   14000d603:	int3   
   14000d604:	int3   
   14000d605:	int3   
   14000d606:	int3   
   14000d607:	int3   
   14000d608:	rex push rsi
   14000d60a:	sub    rsp,0x30
   14000d60e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d617:	mov    QWORD PTR [rsp+0x40],rbx
   14000d61c:	mov    rsi,rcx
   14000d61f:	mov    ecx,0xd8
   14000d624:	call   QWORD PTR [rip+0x24fa6]        # 0x1400325d0
   14000d62a:	mov    rbx,rax
   14000d62d:	mov    QWORD PTR [rsp+0x48],rax
   14000d632:	test   rax,rax
   14000d635:	je     0x14000d6af
   14000d637:	and    DWORD PTR [rax+0x8],0x0
   14000d63b:	lea    rax,[rip+0x27286]        # 0x1400348c8
   14000d642:	mov    QWORD PTR [rbx],rax
   14000d645:	lea    rcx,[rbx+0x20]
   14000d649:	call   0x1400149c4
   14000d64e:	and    QWORD PTR [rbx+0x60],0x0
   14000d653:	and    QWORD PTR [rbx+0x68],0x0
   14000d658:	and    QWORD PTR [rbx+0x70],0x0
   14000d65d:	and    QWORD PTR [rbx+0x78],0x0
   14000d662:	mov    DWORD PTR [rbx+0x90],0x0
   14000d66c:	or     DWORD PTR [rbx+0x9c],0xffffffff
   14000d673:	mov    BYTE PTR [rbx+0xa0],0x0
   14000d67a:	and    QWORD PTR [rbx+0xa8],0x0
   14000d682:	and    QWORD PTR [rbx+0xb0],0x0
   14000d68a:	xor    eax,eax
   14000d68c:	mov    QWORD PTR [rbx+0x80],rax
   14000d693:	mov    QWORD PTR [rbx+0x88],rax
   14000d69a:	lea    rcx,[rbx+0xb8]
   14000d6a1:	xor    edx,edx
   14000d6a3:	lea    r8d,[rax+0x20]
   14000d6a7:	call   0x14002e2ce
   14000d6ac:	nop
   14000d6ad:	jmp    0x14000d6b1
   14000d6af:	xor    ebx,ebx
   14000d6b1:	test   rbx,rbx
   14000d6b4:	je     0x14000d6cf
   14000d6b6:	mov    eax,DWORD PTR [rbx+0x8]
   14000d6b9:	test   eax,eax
   14000d6bb:	jne    0x14000d6c6
   14000d6bd:	mov    DWORD PTR [rbx+0x8],0x1
   14000d6c4:	jmp    0x14000d6ca
   14000d6c6:	lock inc DWORD PTR [rbx+0x8]
   14000d6ca:	mov    QWORD PTR [rsi],rbx
   14000d6cd:	jmp    0x14000d6de
   14000d6cf:	mov    eax,0x8007000e
   14000d6d4:	jmp    0x14000d6e0
   14000d6d6:	mov    eax,DWORD PTR [rsp+0x48]
   14000d6da:	test   eax,eax
   14000d6dc:	js     0x14000d6e0
   14000d6de:	xor    eax,eax
   14000d6e0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d6e5:	add    rsp,0x30
   14000d6e9:	pop    rsi
   14000d6ea:	ret    
   14000d6eb:	int3   
   14000d6ec:	int3   
   14000d6ed:	int3   
   14000d6ee:	int3   
   14000d6ef:	int3   
   14000d6f0:	int3   
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	mov    rax,rsp
   14000d6f7:	mov    QWORD PTR [rax+0x20],r9
   14000d6fb:	mov    QWORD PTR [rax+0x18],r8
   14000d6ff:	push   rdi
   14000d700:	sub    rsp,0x30
   14000d704:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d70c:	mov    QWORD PTR [rax+0x8],rbx
   14000d710:	mov    QWORD PTR [rax+0x10],rsi
   14000d714:	mov    rbx,r8
   14000d717:	mov    rsi,rdx
   14000d71a:	mov    rdi,rcx
   14000d71d:	mov    QWORD PTR [rsp+0x58],rbx
   14000d722:	cmp    rcx,rdx
   14000d725:	je     0x14000d744
   14000d727:	mov    r8,rdi
   14000d72a:	mov    rdx,rbx
   14000d72d:	call   0x14000d57c
   14000d732:	add    rbx,0x20
   14000d736:	mov    QWORD PTR [rsp+0x50],rbx
   14000d73b:	add    rdi,0x20
   14000d73f:	cmp    rdi,rsi
   14000d742:	jne    0x14000d727
   14000d744:	mov    rax,rbx
   14000d747:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d74c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d751:	add    rsp,0x30
   14000d755:	pop    rdi
   14000d756:	ret    
   14000d757:	int3   
   14000d758:	int3   
   14000d759:	int3   
   14000d75a:	int3   
   14000d75b:	int3   
   14000d75c:	int3   
   14000d75d:	int3   
   14000d75e:	int3   
   14000d75f:	int3   
   14000d760:	sub    rcx,0x8
   14000d764:	jmp    0x14000d030
   14000d769:	int3   
   14000d76a:	int3   
   14000d76b:	int3   
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	sub    rcx,0x10
   14000d774:	jmp    0x14000d030
   14000d779:	int3   
   14000d77a:	int3   
   14000d77b:	int3   
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	sub    rcx,0x8
   14000d784:	jmp    0x14000d010
   14000d789:	int3   
   14000d78a:	int3   
   14000d78b:	int3   
   14000d78c:	int3   
   14000d78d:	int3   
   14000d78e:	int3   
   14000d78f:	int3   
   14000d790:	sub    rcx,0x10
   14000d794:	jmp    0x14000d010
   14000d799:	int3   
   14000d79a:	int3   
   14000d79b:	int3   
   14000d79c:	int3   
   14000d79d:	int3   
   14000d79e:	int3   
   14000d79f:	int3   
   14000d7a0:	mov    rax,rsp
   14000d7a3:	mov    QWORD PTR [rax+0x8],rbx
   14000d7a7:	mov    QWORD PTR [rax+0x10],rbp
   14000d7ab:	mov    QWORD PTR [rax+0x18],rsi
   14000d7af:	mov    QWORD PTR [rax+0x20],rdi
   14000d7b3:	push   r14
   14000d7b5:	sub    rsp,0x20
   14000d7b9:	mov    rdi,QWORD PTR [rdx+0x10]
   14000d7bd:	mov    rbp,r8
   14000d7c0:	mov    r14,rdx
   14000d7c3:	mov    rbx,rcx
   14000d7c6:	cmp    rdi,r8
   14000d7c9:	jb     0x14000d8fe
   14000d7cf:	sub    rdi,r8
   14000d7d2:	cmp    r9,rdi
   14000d7d5:	cmovb  rdi,r9
   14000d7d9:	cmp    rcx,rdx
   14000d7dc:	jne    0x14000d855
   14000d7de:	lea    rax,[rdi+r8*1]
   14000d7e2:	cmp    QWORD PTR [rcx+0x10],rax
   14000d7e6:	jb     0x14000d904
   14000d7ec:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d7f1:	mov    QWORD PTR [rcx+0x10],rax
   14000d7f5:	jb     0x14000d7fa
   14000d7f7:	mov    rcx,QWORD PTR [rcx]
   14000d7fa:	xor    esi,esi
   14000d7fc:	mov    WORD PTR [rcx+rax*2],si
   14000d800:	mov    rdi,QWORD PTR [rbx+0x10]
   14000d804:	cmp    rdi,r8
   14000d807:	ja     0x14000d824
   14000d809:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d80e:	mov    QWORD PTR [rbx+0x10],rsi
   14000d812:	jb     0x14000d819
   14000d814:	mov    rax,QWORD PTR [rbx]
   14000d817:	jmp    0x14000d81c
   14000d819:	mov    rax,rbx
   14000d81c:	mov    WORD PTR [rax],si
   14000d81f:	jmp    0x14000d8e0
   14000d824:	test   r8,r8
   14000d827:	je     0x14000d8e0
   14000d82d:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d832:	jb     0x14000d839
   14000d834:	mov    rcx,QWORD PTR [rbx]
   14000d837:	jmp    0x14000d83c
   14000d839:	mov    rcx,rbx
   14000d83c:	sub    rdi,r8
   14000d83f:	je     0x14000d8c9
   14000d845:	lea    r8,[rdi+rdi*1]
   14000d849:	lea    rdx,[rcx+rbp*2]
   14000d84d:	call   QWORD PTR [rip+0x24c4d]        # 0x1400324a0
   14000d853:	jmp    0x14000d8c9
   14000d855:	movabs rax,0x7ffffffffffffffe
   14000d85f:	cmp    rdi,rax
   14000d862:	ja     0x14000d90a
   14000d868:	xor    esi,esi
   14000d86a:	cmp    QWORD PTR [rcx+0x18],rdi
   14000d86e:	jae    0x14000d87e
   14000d870:	mov    r8,QWORD PTR [rcx+0x10]
   14000d874:	mov    rdx,rdi
   14000d877:	call   0x14000d918
   14000d87c:	jmp    0x14000d899
   14000d87e:	test   rdi,rdi
   14000d881:	jne    0x14000d89e
   14000d883:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d888:	mov    QWORD PTR [rcx+0x10],rsi
   14000d88c:	jb     0x14000d893
   14000d88e:	mov    rax,QWORD PTR [rcx]
   14000d891:	jmp    0x14000d896
   14000d893:	mov    rax,rcx
   14000d896:	mov    WORD PTR [rax],si
   14000d899:	test   rdi,rdi
   14000d89c:	je     0x14000d8e0
   14000d89e:	cmp    QWORD PTR [r14+0x18],0x8
   14000d8a3:	jb     0x14000d8a8
   14000d8a5:	mov    r14,QWORD PTR [r14]
   14000d8a8:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d8ad:	jb     0x14000d8b4
   14000d8af:	mov    rcx,QWORD PTR [rbx]
   14000d8b2:	jmp    0x14000d8b7
   14000d8b4:	mov    rcx,rbx
   14000d8b7:	test   rdi,rdi
   14000d8ba:	je     0x14000d8c9
   14000d8bc:	lea    r8,[rdi+rdi*1]
   14000d8c0:	lea    rdx,[r14+rbp*2]
   14000d8c4:	call   0x14002e2f2
   14000d8c9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d8ce:	mov    QWORD PTR [rbx+0x10],rdi
   14000d8d2:	jb     0x14000d8d9
   14000d8d4:	mov    rax,QWORD PTR [rbx]
   14000d8d7:	jmp    0x14000d8dc
   14000d8d9:	mov    rax,rbx
   14000d8dc:	mov    WORD PTR [rax+rdi*2],si
   14000d8e0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d8e5:	mov    rax,rbx
   14000d8e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d8ed:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8f2:	mov    rdi,QWORD PTR [rsp+0x48]
   14000d8f7:	add    rsp,0x20
   14000d8fb:	pop    r14
   14000d8fd:	ret    
   14000d8fe:	call   0x140001c20
   14000d903:	int3   
   14000d904:	call   0x140001c20
   14000d909:	int3   
   14000d90a:	call   0x140001d4c
   14000d90f:	int3   
   14000d910:	int3   
   14000d911:	int3   
   14000d912:	int3   
   14000d913:	int3   
   14000d914:	int3   
   14000d915:	int3   
   14000d916:	int3   
   14000d917:	int3   
   14000d918:	mov    rax,rsp
   14000d91b:	mov    QWORD PTR [rax+0x18],r8
   14000d91f:	mov    QWORD PTR [rax+0x10],rdx
   14000d923:	mov    QWORD PTR [rax+0x8],rcx
   14000d927:	push   rbx
   14000d928:	push   rsi
   14000d929:	push   rdi
   14000d92a:	push   r14
   14000d92c:	push   r15
   14000d92e:	sub    rsp,0x30
   14000d932:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000d93a:	mov    r14,r8
   14000d93d:	mov    rbx,rcx
   14000d940:	mov    rdi,rdx
   14000d943:	or     rdi,0x7
   14000d947:	movabs r9,0x7ffffffffffffffe
   14000d951:	cmp    rdi,r9
   14000d954:	jbe    0x14000d95b
   14000d956:	mov    rdi,rdx
   14000d959:	jmp    0x14000d98c
   14000d95b:	mov    r8,QWORD PTR [rcx+0x18]
   14000d95f:	mov    rcx,r8
   14000d962:	shr    rcx,1
   14000d965:	movabs rax,0xaaaaaaaaaaaaaaab
   14000d96f:	mul    rdi
   14000d972:	shr    rdx,1
   14000d975:	cmp    rcx,rdx
   14000d978:	jbe    0x14000d98c
   14000d97a:	mov    rax,r9
   14000d97d:	sub    rax,rcx
   14000d980:	cmp    r8,rax
   14000d983:	lea    rdi,[rcx+r8*1]
   14000d987:	jbe    0x14000d98c
   14000d989:	mov    rdi,r9
   14000d98c:	lea    rcx,[rdi+0x1]
   14000d990:	xor    esi,esi
   14000d992:	mov    r15d,esi
   14000d995:	test   rcx,rcx
   14000d998:	je     0x14000d9bc
   14000d99a:	movabs rax,0x7fffffffffffffff
   14000d9a4:	cmp    rcx,rax
   14000d9a7:	ja     0x14000d9b6
   14000d9a9:	add    rcx,rcx
   14000d9ac:	call   0x140023f10
   14000d9b1:	mov    r15,rax
   14000d9b4:	jmp    0x14000d9bc
   14000d9b6:	call   0x14000203c
   14000d9bb:	nop
   14000d9bc:	jmp    0x14000d9d4
   14000d9be:	xor    esi,esi
   14000d9c0:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d9c5:	mov    r14,QWORD PTR [rsp+0x70]
   14000d9ca:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d9cf:	mov    r15,QWORD PTR [rsp+0x78]
   14000d9d4:	test   r14,r14
   14000d9d7:	je     0x14000d9f9
   14000d9d9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d9de:	jb     0x14000d9e5
   14000d9e0:	mov    rdx,QWORD PTR [rbx]
   14000d9e3:	jmp    0x14000d9e8
   14000d9e5:	mov    rdx,rbx
   14000d9e8:	test   r14,r14
   14000d9eb:	je     0x14000d9f9
   14000d9ed:	lea    r8,[r14+r14*1]
   14000d9f1:	mov    rcx,r15
   14000d9f4:	call   0x14002e2f2
   14000d9f9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d9fe:	jb     0x14000da09
   14000da00:	mov    rcx,QWORD PTR [rbx]
   14000da03:	call   QWORD PTR [rip+0x24bbf]        # 0x1400325c8
   14000da09:	mov    QWORD PTR [rbx],r15
   14000da0c:	mov    QWORD PTR [rbx+0x18],rdi
   14000da10:	mov    QWORD PTR [rbx+0x10],r14
   14000da14:	cmp    rdi,0x8
   14000da18:	jb     0x14000da1d
   14000da1a:	mov    rbx,r15
   14000da1d:	mov    WORD PTR [rbx+r14*2],si
   14000da22:	add    rsp,0x30
   14000da26:	pop    r15
   14000da28:	pop    r14
   14000da2a:	pop    rdi
   14000da2b:	pop    rsi
   14000da2c:	pop    rbx
   14000da2d:	ret    
   14000da2e:	int3   
   14000da2f:	int3   
   14000da30:	int3   
   14000da31:	int3   
   14000da32:	int3   
   14000da33:	int3   
   14000da34:	mov    QWORD PTR [rsp+0x8],rbx
   14000da39:	mov    QWORD PTR [rsp+0x10],rbp
   14000da3e:	mov    QWORD PTR [rsp+0x18],rsi
   14000da43:	push   rdi
   14000da44:	sub    rsp,0x20
   14000da48:	xor    ebp,ebp
   14000da4a:	mov    rsi,rdx
   14000da4d:	mov    rbx,rcx
   14000da50:	cmp    WORD PTR [rdx],bp
   14000da53:	jne    0x14000da59
   14000da55:	mov    edi,ebp
   14000da57:	jmp    0x14000da66
   14000da59:	or     rdi,0xffffffffffffffff
   14000da5d:	inc    rdi
   14000da60:	cmp    WORD PTR [rdx+rdi*2],bp
   14000da64:	jne    0x14000da5d
   14000da66:	mov    rdx,QWORD PTR [rcx+0x18]
   14000da6a:	cmp    rdx,0x8
   14000da6e:	jb     0x14000da75
   14000da70:	mov    rax,QWORD PTR [rcx]
   14000da73:	jmp    0x14000da78
   14000da75:	mov    rax,rcx
   14000da78:	cmp    rsi,rax
   14000da7b:	jb     0x14000dabd
   14000da7d:	cmp    rdx,0x8
   14000da81:	jb     0x14000da86
   14000da83:	mov    rcx,QWORD PTR [rcx]
   14000da86:	mov    rax,QWORD PTR [rbx+0x10]
   14000da8a:	lea    rcx,[rcx+rax*2]
   14000da8e:	cmp    rcx,rsi
   14000da91:	jbe    0x14000dabd
   14000da93:	cmp    rdx,0x8
   14000da97:	jb     0x14000da9e
   14000da99:	mov    rax,QWORD PTR [rbx]
   14000da9c:	jmp    0x14000daa1
   14000da9e:	mov    rax,rbx
   14000daa1:	sub    rsi,rax
   14000daa4:	mov    r9,rdi
   14000daa7:	sar    rsi,1
   14000daaa:	mov    rdx,rbx
   14000daad:	mov    r8,rsi
   14000dab0:	mov    rcx,rbx
   14000dab3:	call   0x14000d7a0
   14000dab8:	mov    rbx,rax
   14000dabb:	jmp    0x14000db3c
   14000dabd:	movabs rax,0x7ffffffffffffffe
   14000dac7:	cmp    rdi,rax
   14000daca:	ja     0x14000db54
   14000dad0:	cmp    rdx,rdi
   14000dad3:	jae    0x14000dae6
   14000dad5:	mov    r8,QWORD PTR [rbx+0x10]
   14000dad9:	mov    rdx,rdi
   14000dadc:	mov    rcx,rbx
   14000dadf:	call   0x14000d918
   14000dae4:	jmp    0x14000db00
   14000dae6:	test   rdi,rdi
   14000dae9:	jne    0x14000db05
   14000daeb:	mov    QWORD PTR [rbx+0x10],rbp
   14000daef:	cmp    rdx,0x8
   14000daf3:	jb     0x14000dafa
   14000daf5:	mov    rax,QWORD PTR [rbx]
   14000daf8:	jmp    0x14000dafd
   14000dafa:	mov    rax,rbx
   14000dafd:	mov    WORD PTR [rax],bp
   14000db00:	test   rdi,rdi
   14000db03:	je     0x14000db3c
   14000db05:	cmp    QWORD PTR [rbx+0x18],0x8
   14000db0a:	jb     0x14000db11
   14000db0c:	mov    rcx,QWORD PTR [rbx]
   14000db0f:	jmp    0x14000db14
   14000db11:	mov    rcx,rbx
   14000db14:	test   rdi,rdi
   14000db17:	je     0x14000db25
   14000db19:	lea    r8,[rdi+rdi*1]
   14000db1d:	mov    rdx,rsi
   14000db20:	call   0x14002e2f2
   14000db25:	cmp    QWORD PTR [rbx+0x18],0x8
   14000db2a:	mov    QWORD PTR [rbx+0x10],rdi
   14000db2e:	jb     0x14000db35
   14000db30:	mov    rax,QWORD PTR [rbx]
   14000db33:	jmp    0x14000db38
   14000db35:	mov    rax,rbx
   14000db38:	mov    WORD PTR [rax+rdi*2],bp
   14000db3c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000db41:	mov    rax,rbx
   14000db44:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db49:	mov    rsi,QWORD PTR [rsp+0x40]
   14000db4e:	add    rsp,0x20
   14000db52:	pop    rdi
   14000db53:	ret    
   14000db54:	call   0x140001d4c
   14000db59:	int3   
   14000db5a:	int3   
   14000db5b:	int3   
   14000db5c:	int3   
   14000db5d:	int3   
   14000db5e:	int3   
   14000db5f:	int3   
   14000db60:	mov    QWORD PTR [rsp+0x8],rbx
   14000db65:	mov    QWORD PTR [rsp+0x10],rsi
   14000db6a:	push   rdi
   14000db6b:	sub    rsp,0x20
   14000db6f:	cmp    QWORD PTR [rcx+0x18],0x8
   14000db74:	mov    rdi,rdx
   14000db77:	mov    rbx,rcx
   14000db7a:	jb     0x14000dbae
   14000db7c:	cmp    QWORD PTR [rdx+0x18],0x8
   14000db81:	jb     0x14000db94
   14000db83:	mov    rax,QWORD PTR [rdx]
   14000db86:	mov    r8,QWORD PTR [rcx]
   14000db89:	mov    QWORD PTR [rcx],rax
   14000db8c:	mov    QWORD PTR [rdx],r8
   14000db8f:	jmp    0x14000dc16
   14000db94:	mov    r8,QWORD PTR [rdx+0x10]
   14000db98:	mov    rsi,QWORD PTR [rcx]
   14000db9b:	add    r8,0x1
   14000db9f:	je     0x14000dba9
   14000dba1:	add    r8,r8
   14000dba4:	call   0x14002e2f2
   14000dba9:	mov    QWORD PTR [rdi],rsi
   14000dbac:	jmp    0x14000dc16
   14000dbae:	cmp    QWORD PTR [rdx+0x18],0x8
   14000dbb3:	jae    0x14000dbf8
   14000dbb5:	cmp    rcx,rdx
   14000dbb8:	je     0x14000dc16
   14000dbba:	xor    r8d,r8d
   14000dbbd:	lea    rax,[rcx+0x10]
   14000dbc1:	mov    rdx,rax
   14000dbc4:	sub    rdx,rcx
   14000dbc7:	inc    rdx
   14000dbca:	shr    rdx,1
   14000dbcd:	cmp    rcx,rax
   14000dbd0:	cmova  rdx,r8
   14000dbd4:	test   rdx,rdx
   14000dbd7:	je     0x14000dc16
   14000dbd9:	sub    rdi,rcx
   14000dbdc:	movzx  eax,WORD PTR [rdi+rbx*1]
   14000dbe0:	inc    r8
   14000dbe3:	movzx  ecx,WORD PTR [rbx]
   14000dbe6:	mov    WORD PTR [rbx],ax
   14000dbe9:	mov    WORD PTR [rdi+rbx*1],cx
   14000dbed:	lea    rbx,[rbx+0x2]
   14000dbf1:	cmp    r8,rdx
   14000dbf4:	jne    0x14000dbdc
   14000dbf6:	jmp    0x14000dc16
   14000dbf8:	mov    r8,QWORD PTR [rcx+0x10]
   14000dbfc:	mov    rsi,QWORD PTR [rdx]
   14000dbff:	add    r8,0x1
   14000dc03:	je     0x14000dc13
   14000dc05:	mov    rdx,rcx
   14000dc08:	add    r8,r8
   14000dc0b:	mov    rcx,rdi
   14000dc0e:	call   0x14002e2f2
   14000dc13:	mov    QWORD PTR [rbx],rsi
   14000dc16:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc1b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dc20:	add    rsp,0x20
   14000dc24:	pop    rdi
   14000dc25:	ret    
   14000dc26:	int3   
   14000dc27:	int3   
   14000dc28:	int3   
   14000dc29:	int3   
   14000dc2a:	int3   
   14000dc2b:	int3   
   14000dc2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dc31:	mov    QWORD PTR [rsp+0x10],rbp
   14000dc36:	mov    QWORD PTR [rsp+0x18],rsi
   14000dc3b:	push   rdi
   14000dc3c:	push   r14
   14000dc3e:	push   r15
   14000dc40:	sub    rsp,0x20
   14000dc44:	and    QWORD PTR [rcx+0x8],0x0
   14000dc49:	mov    r14,rcx
   14000dc4c:	mov    DWORD PTR [rcx+0x10],0x1
   14000dc53:	mov    rbp,r8
   14000dc56:	mov    rcx,QWORD PTR [rdx]
   14000dc59:	mov    r15,rdx
   14000dc5c:	test   rcx,rcx
   14000dc5f:	je     0x14000dc73
   14000dc61:	mov    rcx,QWORD PTR [rcx]
   14000dc64:	test   rcx,rcx
   14000dc67:	je     0x14000dc73
   14000dc69:	call   QWORD PTR [rip+0x24701]        # 0x140032370
   14000dc6f:	mov    ebx,eax
   14000dc71:	jmp    0x14000dc75
   14000dc73:	xor    ebx,ebx
   14000dc75:	mov    rax,QWORD PTR [rbp+0x0]
   14000dc79:	test   rax,rax
   14000dc7c:	je     0x14000dc90
   14000dc7e:	mov    rcx,QWORD PTR [rax]
   14000dc81:	test   rcx,rcx
   14000dc84:	je     0x14000dc90
   14000dc86:	call   QWORD PTR [rip+0x246e4]        # 0x140032370
   14000dc8c:	mov    esi,eax
   14000dc8e:	jmp    0x14000dc92
   14000dc90:	xor    esi,esi
   14000dc92:	lea    edi,[rsi+rbx*1]
   14000dc95:	cmp    edi,ebx
   14000dc97:	jb     0x14000dd2b
   14000dc9d:	mov    eax,edi
   14000dc9f:	mov    ecx,0xffffffff
   14000dca4:	add    rax,rax
   14000dca7:	cmp    rax,rcx
   14000dcaa:	ja     0x14000dd2b
   14000dcac:	mov    edx,eax
   14000dcae:	xor    ecx,ecx
   14000dcb0:	call   QWORD PTR [rip+0x246b2]        # 0x140032368
   14000dcb6:	mov    QWORD PTR [r14],rax
   14000dcb9:	mov    rcx,rax
   14000dcbc:	test   rax,rax
   14000dcbf:	jne    0x14000dcc7
   14000dcc1:	test   edi,edi
   14000dcc3:	je     0x14000dd09
   14000dcc5:	jmp    0x14000dd25
   14000dcc7:	mov    rdx,QWORD PTR [r15]
   14000dcca:	test   rdx,rdx
   14000dccd:	je     0x14000dcd2
   14000dccf:	mov    rdx,QWORD PTR [rdx]
   14000dcd2:	test   rdx,rdx
   14000dcd5:	je     0x14000dce3
   14000dcd7:	lea    r8d,[rbx+0x1]
   14000dcdb:	add    r8,r8
   14000dcde:	call   0x14002e2f2
   14000dce3:	mov    rdx,QWORD PTR [rbp+0x0]
   14000dce7:	test   rdx,rdx
   14000dcea:	je     0x14000dcef
   14000dcec:	mov    rdx,QWORD PTR [rdx]
   14000dcef:	test   rdx,rdx
   14000dcf2:	je     0x14000dd09
   14000dcf4:	mov    rax,QWORD PTR [r14]
   14000dcf7:	lea    r8d,[rsi+0x1]
   14000dcfb:	mov    ecx,ebx
   14000dcfd:	add    r8,r8
   14000dd00:	lea    rcx,[rax+rcx*2]
   14000dd04:	call   0x14002e2f2
   14000dd09:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dd0e:	mov    rax,r14
   14000dd11:	mov    rbp,QWORD PTR [rsp+0x48]
   14000dd16:	mov    rsi,QWORD PTR [rsp+0x50]
   14000dd1b:	add    rsp,0x20
   14000dd1f:	pop    r15
   14000dd21:	pop    r14
   14000dd23:	pop    rdi
   14000dd24:	ret    
   14000dd25:	call   0x14000203c
   14000dd2a:	int3   
   14000dd2b:	call   0x14000203c
   14000dd30:	int3   
   14000dd31:	int3   
   14000dd32:	int3   
   14000dd33:	int3   
   14000dd34:	int3   
   14000dd35:	int3   
   14000dd36:	int3   
   14000dd37:	int3   
   14000dd38:	rex push rdi
   14000dd3a:	sub    rsp,0x30
   14000dd3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dd47:	mov    QWORD PTR [rsp+0x48],rbx
   14000dd4c:	mov    QWORD PTR [rsp+0x50],rsi
   14000dd51:	mov    rbx,rdx
   14000dd54:	mov    rdi,rcx
   14000dd57:	mov    ecx,0x18
   14000dd5c:	call   0x140023f10
   14000dd61:	mov    QWORD PTR [rsp+0x40],rax
   14000dd66:	mov    r8,rbx
   14000dd69:	mov    rdx,rdi
   14000dd6c:	mov    rcx,rax
   14000dd6f:	call   0x14000dc2c
   14000dd74:	mov    rsi,rax
   14000dd77:	mov    rbx,QWORD PTR [rdi]
   14000dd7a:	test   rbx,rbx
   14000dd7d:	je     0x14000ddc4
   14000dd7f:	or     ecx,0xffffffff
   14000dd82:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000dd87:	cmp    ecx,0x1
   14000dd8a:	jne    0x14000ddc0
   14000dd8c:	test   rbx,rbx
   14000dd8f:	je     0x14000ddc0
   14000dd91:	mov    rcx,QWORD PTR [rbx]
   14000dd94:	test   rcx,rcx
   14000dd97:	je     0x14000dda3
   14000dd99:	call   QWORD PTR [rip+0x245b1]        # 0x140032350
   14000dd9f:	and    QWORD PTR [rbx],0x0
   14000dda3:	mov    rcx,QWORD PTR [rbx+0x8]
   14000dda7:	test   rcx,rcx
   14000ddaa:	je     0x14000ddb7
   14000ddac:	call   QWORD PTR [rip+0x24816]        # 0x1400325c8
   14000ddb2:	and    QWORD PTR [rbx+0x8],0x0
   14000ddb7:	mov    rcx,rbx
   14000ddba:	call   QWORD PTR [rip+0x24808]        # 0x1400325c8
   14000ddc0:	and    QWORD PTR [rdi],0x0
   14000ddc4:	mov    QWORD PTR [rdi],rsi
   14000ddc7:	mov    rax,rdi
   14000ddca:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ddcf:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ddd4:	add    rsp,0x30
   14000ddd8:	pop    rdi
   14000ddd9:	ret    
   14000ddda:	int3   
   14000dddb:	int3   
   14000dddc:	int3   
   14000dddd:	int3   
   14000ddde:	int3   
   14000dddf:	int3   
   14000dde0:	shr    rcx,0x20
   14000dde4:	mov    eax,ecx
   14000dde6:	ret    
   14000dde7:	int3   
   14000dde8:	int3   
   14000dde9:	int3   
   14000ddea:	int3   
   14000ddeb:	int3   
   14000ddec:	int3   
   14000dded:	int3   
   14000ddee:	int3   
   14000ddef:	int3   
   14000ddf0:	shr    ecx,0x10
   14000ddf3:	movzx  eax,cx
   14000ddf6:	ret    
   14000ddf7:	int3   
   14000ddf8:	int3   
   14000ddf9:	int3   
   14000ddfa:	int3   
   14000ddfb:	int3   
   14000ddfc:	int3   
   14000ddfd:	int3   
   14000ddfe:	int3   
   14000ddff:	int3   
   14000de00:	mov    eax,ecx
   14000de02:	ret    
   14000de03:	int3   
   14000de04:	int3   
   14000de05:	int3   
   14000de06:	int3   
   14000de07:	int3   
   14000de08:	int3   
   14000de09:	int3   
   14000de0a:	int3   
   14000de0b:	int3   
   14000de0c:	movzx  eax,cx
   14000de0f:	ret    
   14000de10:	int3   
   14000de11:	int3   
   14000de12:	int3   
   14000de13:	int3   
   14000de14:	int3   
   14000de15:	int3   
   14000de16:	int3   
   14000de17:	int3   
   14000de18:	mov    rdx,QWORD PTR [rcx]
   14000de1b:	xor    eax,eax
   14000de1d:	test   rdx,rdx
   14000de20:	je     0x14000de25
   14000de22:	mov    rax,QWORD PTR [rdx]
   14000de25:	ret    
   14000de26:	int3   
   14000de27:	int3   
   14000de28:	int3   
   14000de29:	int3   
   14000de2a:	int3   
   14000de2b:	int3   
   14000de2c:	mov    QWORD PTR [rsp+0x10],rbx
   14000de31:	push   rdi
   14000de32:	sub    rsp,0x20
   14000de36:	mov    rbx,QWORD PTR [rcx]
   14000de39:	mov    rdi,rcx
   14000de3c:	test   rbx,rbx
   14000de3f:	je     0x14000de86
   14000de41:	or     eax,0xffffffff
   14000de44:	lock xadd DWORD PTR [rbx+0x10],eax
   14000de49:	cmp    eax,0x1
   14000de4c:	jne    0x14000de82
   14000de4e:	test   rbx,rbx
   14000de51:	je     0x14000de82
   14000de53:	mov    rcx,QWORD PTR [rbx]
   14000de56:	test   rcx,rcx
   14000de59:	je     0x14000de65
   14000de5b:	call   QWORD PTR [rip+0x244ef]        # 0x140032350
   14000de61:	and    QWORD PTR [rbx],0x0
   14000de65:	mov    rcx,QWORD PTR [rbx+0x8]
   14000de69:	test   rcx,rcx
   14000de6c:	je     0x14000de79
   14000de6e:	call   QWORD PTR [rip+0x24754]        # 0x1400325c8
   14000de74:	and    QWORD PTR [rbx+0x8],0x0
   14000de79:	mov    rcx,rbx
   14000de7c:	call   QWORD PTR [rip+0x24746]        # 0x1400325c8
   14000de82:	and    QWORD PTR [rdi],0x0
   14000de86:	mov    rbx,QWORD PTR [rsp+0x38]
   14000de8b:	add    rsp,0x20
   14000de8f:	pop    rdi
   14000de90:	ret    
   14000de91:	int3   
   14000de92:	int3   
   14000de93:	int3   
   14000de94:	int3   
   14000de95:	int3   
   14000de96:	int3   
   14000de97:	int3   
   14000de98:	sub    rsp,0x28
   14000de9c:	mov    rcx,QWORD PTR [rcx]
   14000de9f:	or     eax,0xffffffff
   14000dea2:	lock xadd DWORD PTR [rcx+0x8],eax
   14000dea7:	dec    eax
   14000dea9:	cmp    eax,0x80000000
   14000deae:	jne    0x14000deb5
   14000deb0:	call   0x140029c90
   14000deb5:	add    rsp,0x28
   14000deb9:	ret    
   14000deba:	int3   
   14000debb:	int3   
   14000debc:	int3   
   14000debd:	int3   
   14000debe:	int3   
   14000debf:	int3   
   14000dec0:	mov    rcx,QWORD PTR [rcx]
   14000dec3:	rex.W jmp QWORD PTR [rip+0x2422e]        # 0x1400320f8
   14000deca:	int3   
   14000decb:	int3   
   14000decc:	int3   
   14000decd:	int3   
   14000dece:	int3   
   14000decf:	int3   
   14000ded0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ded5:	push   rdi
   14000ded6:	sub    rsp,0x30
   14000deda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dee3:	mov    QWORD PTR [rsp+0x48],rbx
   14000dee8:	mov    rdi,r8
   14000deeb:	mov    rbx,rdx
   14000deee:	mov    ecx,0x28
   14000def3:	call   0x140023f10
   14000def8:	mov    QWORD PTR [rsp+0x40],rax
   14000defd:	test   rbx,rbx
   14000df00:	jne    0x14000df08
   14000df02:	mov    rbx,rax
   14000df05:	mov    rdi,rax
   14000df08:	mov    QWORD PTR [rax],rbx
   14000df0b:	lea    rcx,[rax+0x8]
   14000df0f:	test   rcx,rcx
   14000df12:	je     0x14000df17
   14000df14:	mov    QWORD PTR [rcx],rdi
   14000df17:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df1c:	add    rsp,0x30
   14000df20:	pop    rdi
   14000df21:	ret    
   14000df22:	int3   
   14000df23:	int3   
   14000df24:	int3   
   14000df25:	int3   
   14000df26:	int3   
   14000df27:	int3   
   14000df28:	sub    rsp,0x38
   14000df2c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000df35:	test   rdx,rdx
   14000df38:	je     0x14000df4f
   14000df3a:	test   rcx,rcx
   14000df3d:	je     0x14000df45
   14000df3f:	mov    rax,QWORD PTR [r8]
   14000df42:	mov    QWORD PTR [rcx],rax
   14000df45:	add    rcx,0x8
   14000df49:	sub    rdx,0x1
   14000df4d:	jne    0x14000df3a
   14000df4f:	add    rsp,0x38
   14000df53:	ret    
   14000df54:	int3   
   14000df55:	int3   
   14000df56:	int3   
   14000df57:	int3   
   14000df58:	int3   
   14000df59:	int3   
   14000df5a:	int3   
   14000df5b:	int3   
   14000df5c:	sub    rsp,0x38
   14000df60:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000df69:	xor    r11d,r11d
   14000df6c:	mov    r10d,r11d
   14000df6f:	mov    r9,rdx
   14000df72:	sub    r9,rcx
   14000df75:	add    r9,0x7
   14000df79:	shr    r9,0x3
   14000df7d:	cmp    rcx,rdx
   14000df80:	cmova  r9,r11
   14000df84:	test   r9,r9
   14000df87:	je     0x14000dfa4
   14000df89:	sub    rcx,r8
   14000df8c:	test   r8,r8
   14000df8f:	je     0x14000df98
   14000df91:	mov    rax,QWORD PTR [rcx+r8*1]
   14000df95:	mov    QWORD PTR [r8],rax
   14000df98:	add    r8,0x8
   14000df9c:	inc    r10
   14000df9f:	cmp    r10,r9
   14000dfa2:	jne    0x14000df8c
   14000dfa4:	mov    rax,r8
   14000dfa7:	add    rsp,0x38
   14000dfab:	ret    
   14000dfac:	int3   
   14000dfad:	int3   
   14000dfae:	int3   
   14000dfaf:	int3   
   14000dfb0:	int3   
   14000dfb1:	int3   
   14000dfb2:	int3   
   14000dfb3:	int3   
   14000dfb4:	mov    QWORD PTR [rsp+0x18],r8
   14000dfb9:	mov    QWORD PTR [rsp+0x10],rdx
   14000dfbe:	push   rbx
   14000dfbf:	push   rsi
   14000dfc0:	push   rdi
   14000dfc1:	push   r12
   14000dfc3:	push   r13
   14000dfc5:	push   r14
   14000dfc7:	push   r15
   14000dfc9:	sub    rsp,0x40
   14000dfcd:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000dfd6:	mov    r14,r9
   14000dfd9:	mov    r15,r8
   14000dfdc:	mov    rdi,rcx
   14000dfdf:	mov    r13,r8
   14000dfe2:	sub    r13,QWORD PTR [rcx]
   14000dfe5:	sar    r13,0x3
   14000dfe9:	xor    r12d,r12d
   14000dfec:	test   r9,r9
   14000dfef:	je     0x14000e22a
   14000dff5:	mov    rbx,QWORD PTR [rcx+0x10]
   14000dff9:	mov    rsi,QWORD PTR [rcx+0x8]
   14000dffd:	mov    rax,rbx
   14000e000:	sub    rax,rsi
   14000e003:	sar    rax,0x3
   14000e007:	cmp    rax,r9
   14000e00a:	jae    0x14000e115
   14000e010:	sub    rsi,QWORD PTR [rcx]
   14000e013:	sar    rsi,0x3
   14000e017:	movabs r8,0x1fffffffffffffff
   14000e021:	mov    rax,r8
   14000e024:	sub    rax,rsi
   14000e027:	cmp    rax,r9
   14000e02a:	jae    0x14000e032
   14000e02c:	call   0x14000d388
   14000e031:	int3   
   14000e032:	lea    rdx,[rsi+r9*1]
   14000e036:	sub    rbx,QWORD PTR [rcx]
   14000e039:	sar    rbx,0x3
   14000e03d:	mov    rcx,rbx
   14000e040:	shr    rcx,1
   14000e043:	mov    rax,r8
   14000e046:	sub    rax,rcx
   14000e049:	cmp    rax,rbx
   14000e04c:	jae    0x14000e053
   14000e04e:	mov    rbx,r12
   14000e051:	jmp    0x14000e056
   14000e053:	add    rbx,rcx
   14000e056:	cmp    rbx,rdx
   14000e059:	cmovb  rbx,rdx
   14000e05d:	mov    rsi,r12
   14000e060:	mov    QWORD PTR [rsp+0x80],r12
   14000e068:	test   rbx,rbx
   14000e06b:	je     0x14000e099
   14000e06d:	cmp    rbx,r8
   14000e070:	ja     0x14000e093
   14000e072:	mov    rcx,rbx
   14000e075:	shl    rcx,0x3
   14000e079:	call   0x140023f10
   14000e07e:	mov    rsi,rax
   14000e081:	mov    QWORD PTR [rsp+0x80],rax
   14000e089:	mov    r15,QWORD PTR [rsp+0x90]
   14000e091:	jmp    0x14000e099
   14000e093:	call   0x14000203c
   14000e098:	int3   
   14000e099:	sub    r15,QWORD PTR [rdi]
   14000e09c:	sar    r15,0x3
   14000e0a0:	lea    rcx,[rsi+r15*8]
   14000e0a4:	mov    r8,QWORD PTR [rsp+0xa0]
   14000e0ac:	mov    rdx,r14
   14000e0af:	call   0x14000df28
   14000e0b4:	mov    r8,rsi
   14000e0b7:	mov    rdx,QWORD PTR [rsp+0x90]
   14000e0bf:	mov    rcx,QWORD PTR [rdi]
   14000e0c2:	call   0x14000df5c
   14000e0c7:	lea    rax,[r15+r14*1]
   14000e0cb:	lea    r8,[rsi+rax*8]
   14000e0cf:	mov    rdx,QWORD PTR [rdi+0x8]
   14000e0d3:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e0db:	call   0x14000df5c
   14000e0e0:	nop
   14000e0e1:	mov    rax,QWORD PTR [rdi+0x8]
   14000e0e5:	sub    rax,QWORD PTR [rdi]
   14000e0e8:	sar    rax,0x3
   14000e0ec:	add    r14,rax
   14000e0ef:	cmp    QWORD PTR [rdi],r12
   14000e0f2:	je     0x14000e0fd
   14000e0f4:	mov    rcx,QWORD PTR [rdi]
   14000e0f7:	call   QWORD PTR [rip+0x244cb]        # 0x1400325c8
   14000e0fd:	lea    rax,[rsi+rbx*8]
   14000e101:	mov    QWORD PTR [rdi+0x10],rax
   14000e105:	lea    rax,[rsi+r14*8]
   14000e109:	mov    QWORD PTR [rdi+0x8],rax
   14000e10d:	mov    QWORD PTR [rdi],rsi
   14000e110:	jmp    0x14000e22a
   14000e115:	mov    rax,rsi
   14000e118:	sub    rax,r8
   14000e11b:	sar    rax,0x3
   14000e11f:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000e127:	mov    rdx,rsi
   14000e12a:	mov    rbx,QWORD PTR [rbx]
   14000e12d:	cmp    rax,r9
   14000e130:	jae    0x14000e1c6
   14000e136:	mov    QWORD PTR [rsp+0x80],rbx
   14000e13e:	mov    rax,r9
   14000e141:	shl    rax,0x3
   14000e145:	mov    QWORD PTR [rsp+0x98],rax
   14000e14d:	add    r8,rax
   14000e150:	mov    rcx,r15
   14000e153:	call   0x14000df5c
   14000e158:	nop
   14000e159:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e15d:	mov    rax,rcx
   14000e160:	sub    rax,QWORD PTR [rsp+0x90]
   14000e168:	sar    rax,0x3
   14000e16c:	sub    r14,rax
   14000e16f:	lea    r8,[rsp+0x80]
   14000e177:	mov    rdx,r14
   14000e17a:	call   0x14000df28
   14000e17f:	nop
   14000e180:	mov    rcx,QWORD PTR [rsp+0x98]
   14000e188:	add    QWORD PTR [rdi+0x8],rcx
   14000e18c:	mov    rax,QWORD PTR [rdi+0x8]
   14000e190:	sub    rax,rcx
   14000e193:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e19b:	mov    rdx,rax
   14000e19e:	sub    rdx,rcx
   14000e1a1:	add    rdx,0x7
   14000e1a5:	shr    rdx,0x3
   14000e1a9:	cmp    rcx,rax
   14000e1ac:	cmova  rdx,r12
   14000e1b0:	test   rdx,rdx
   14000e1b3:	je     0x14000e22a
   14000e1b5:	mov    QWORD PTR [rcx],rbx
   14000e1b8:	lea    rcx,[rcx+0x8]
   14000e1bc:	inc    r12
   14000e1bf:	cmp    r12,rdx
   14000e1c2:	jne    0x14000e1b5
   14000e1c4:	jmp    0x14000e22a
   14000e1c6:	mov    r15,r9
   14000e1c9:	shl    r15,0x3
   14000e1cd:	mov    r14,rsi
   14000e1d0:	sub    r14,r15
   14000e1d3:	mov    r8,rsi
   14000e1d6:	mov    rcx,r14
   14000e1d9:	call   0x14000df5c
   14000e1de:	mov    QWORD PTR [rdi+0x8],rax
   14000e1e2:	mov    rdx,QWORD PTR [rsp+0x90]
   14000e1ea:	cmp    rdx,r14
   14000e1ed:	je     0x14000e20a
   14000e1ef:	sub    rsi,r14
   14000e1f2:	sub    r14,0x8
   14000e1f6:	mov    rax,QWORD PTR [r14]
   14000e1f9:	mov    QWORD PTR [r14+rsi*1],rax
   14000e1fd:	mov    rdx,QWORD PTR [rsp+0x90]
   14000e205:	cmp    rdx,r14
   14000e208:	jne    0x14000e1f2
   14000e20a:	lea    rax,[r15+rdx*1]
   14000e20e:	cmp    rdx,rax
   14000e211:	je     0x14000e22a
   14000e213:	mov    QWORD PTR [rdx],rbx
   14000e216:	add    rdx,0x8
   14000e21a:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e222:	add    rcx,r15
   14000e225:	cmp    rdx,rcx
   14000e228:	jne    0x14000e213
   14000e22a:	mov    rax,QWORD PTR [rdi]
   14000e22d:	lea    rcx,[rax+r13*8]
   14000e231:	mov    rax,QWORD PTR [rsp+0x88]
   14000e239:	mov    QWORD PTR [rax],rcx
   14000e23c:	add    rsp,0x40
   14000e240:	pop    r15
   14000e242:	pop    r14
   14000e244:	pop    r13
   14000e246:	pop    r12
   14000e248:	pop    rdi
   14000e249:	pop    rsi
   14000e24a:	pop    rbx
   14000e24b:	ret    
   14000e24c:	int3   
   14000e24d:	int3   
   14000e24e:	int3   
   14000e24f:	int3   
   14000e250:	int3   
   14000e251:	int3   
   14000e252:	int3   
   14000e253:	int3   
   14000e254:	sub    rsp,0x28
   14000e258:	mov    rcx,QWORD PTR [rcx]
   14000e25b:	test   rcx,rcx
   14000e25e:	je     0x14000e272
   14000e260:	or     eax,0xffffffff
   14000e263:	lock xadd DWORD PTR [rcx],eax
   14000e267:	cmp    eax,0x1
   14000e26a:	jne    0x14000e272
   14000e26c:	call   QWORD PTR [rip+0x24356]        # 0x1400325c8
   14000e272:	add    rsp,0x28
   14000e276:	ret    
   14000e277:	int3   
   14000e278:	int3   
   14000e279:	int3   
   14000e27a:	int3   
   14000e27b:	int3   
   14000e27c:	int3   
   14000e27d:	int3   
   14000e27e:	int3   
   14000e27f:	int3   
   14000e280:	mov    QWORD PTR [rsp+0x10],rbx
   14000e285:	mov    QWORD PTR [rsp+0x18],rsi
   14000e28a:	push   rdi
   14000e28b:	sub    rsp,0x20
   14000e28f:	mov    rbx,rcx
   14000e292:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e296:	test   rcx,rcx
   14000e299:	je     0x14000e2b0
   14000e29b:	call   QWORD PTR [rip+0x24327]        # 0x1400325c8
   14000e2a1:	and    QWORD PTR [rbx+0x10],0x0
   14000e2a6:	and    QWORD PTR [rbx+0x18],0x0
   14000e2ab:	and    QWORD PTR [rbx+0x20],0x0
   14000e2b0:	mov    rax,QWORD PTR [rbx]
   14000e2b3:	mov    rdi,QWORD PTR [rax]
   14000e2b6:	mov    QWORD PTR [rax],rax
   14000e2b9:	mov    rax,QWORD PTR [rbx]
   14000e2bc:	mov    QWORD PTR [rax+0x8],rax
   14000e2c0:	and    QWORD PTR [rbx+0x8],0x0
   14000e2c5:	cmp    rdi,QWORD PTR [rbx]
   14000e2c8:	je     0x14000e2f9
   14000e2ca:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e2ce:	mov    rsi,QWORD PTR [rdi]
   14000e2d1:	test   rcx,rcx
   14000e2d4:	je     0x14000e2e8
   14000e2d6:	or     eax,0xffffffff
   14000e2d9:	lock xadd DWORD PTR [rcx],eax
   14000e2dd:	cmp    eax,0x1
   14000e2e0:	jne    0x14000e2e8
   14000e2e2:	call   QWORD PTR [rip+0x242e0]        # 0x1400325c8
   14000e2e8:	mov    rcx,rdi
   14000e2eb:	call   QWORD PTR [rip+0x242d7]        # 0x1400325c8
   14000e2f1:	mov    rdi,rsi
   14000e2f4:	cmp    rsi,QWORD PTR [rbx]
   14000e2f7:	jne    0x14000e2ca
   14000e2f9:	mov    rcx,QWORD PTR [rbx]
   14000e2fc:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e301:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e306:	add    rsp,0x20
   14000e30a:	pop    rdi
   14000e30b:	rex.W jmp QWORD PTR [rip+0x242b6]        # 0x1400325c8
   14000e312:	int3   
   14000e313:	int3   
   14000e314:	int3   
   14000e315:	int3   
   14000e316:	int3   
   14000e317:	int3   
   14000e318:	mov    r11,rsp
   14000e31b:	mov    QWORD PTR [r11+0x20],r9
   14000e31f:	sub    rsp,0x58
   14000e323:	and    QWORD PTR [r11-0x18],0x0
   14000e328:	lea    rax,[r11+0x28]
   14000e32c:	mov    QWORD PTR [r11-0x20],0x4
   14000e334:	lea    r8,[rip+0x28ddd]        # 0x140037118
   14000e33b:	mov    QWORD PTR [r11-0x28],rax
   14000e33f:	mov    edx,0xe
   14000e344:	lea    rax,[r11+0x20]
   14000e348:	movzx  r9d,dx
   14000e34c:	mov    QWORD PTR [r11-0x30],0x8
   14000e354:	mov    edx,0x2b
   14000e359:	mov    QWORD PTR [r11-0x38],rax
   14000e35d:	call   QWORD PTR [rip+0x23cbd]        # 0x140032020
   14000e363:	add    rsp,0x58
   14000e367:	ret    
   14000e368:	int3   
   14000e369:	int3   
   14000e36a:	int3   
   14000e36b:	int3   
   14000e36c:	int3   
   14000e36d:	int3   
   14000e36e:	int3   
   14000e36f:	int3   
   14000e370:	sub    rsp,0x58
   14000e374:	xor    r10d,r10d
   14000e377:	test   r9,r9
   14000e37a:	je     0x14000e3a0
   14000e37c:	cmp    WORD PTR [r9],r10w
   14000e380:	jne    0x14000e388
   14000e382:	lea    edx,[r10+0xe]
   14000e386:	jmp    0x14000e3a5
   14000e388:	or     rax,0xffffffffffffffff
   14000e38c:	inc    rax
   14000e38f:	cmp    WORD PTR [r9+rax*2],r10w
   14000e394:	jne    0x14000e38c
   14000e396:	lea    rdx,[rax*2+0x2]
   14000e39e:	jmp    0x14000e3a5
   14000e3a0:	mov    edx,0xa
   14000e3a5:	test   r9,r9
   14000e3a8:	je     0x14000e3bb
   14000e3aa:	cmp    WORD PTR [r9],r10w
   14000e3ae:	lea    rax,[rip+0x26aa3]        # 0x140034e58
   14000e3b5:	cmove  r9,rax
   14000e3b9:	jmp    0x14000e3c2
   14000e3bb:	lea    r9,[rip+0x270de]        # 0x1400354a0
   14000e3c2:	mov    rax,QWORD PTR [rsp+0x80]
   14000e3ca:	mov    r8d,0x1d
   14000e3d0:	mov    QWORD PTR [rsp+0x40],r10
   14000e3d5:	mov    QWORD PTR [rsp+0x38],0x10
   14000e3de:	mov    QWORD PTR [rsp+0x30],rax
   14000e3e3:	mov    QWORD PTR [rsp+0x28],rdx
   14000e3e8:	mov    edx,0x2b
   14000e3ed:	mov    QWORD PTR [rsp+0x20],r9
   14000e3f2:	movzx  r9d,r8w
   14000e3f6:	lea    r8,[rip+0x28d1b]        # 0x140037118
   14000e3fd:	call   QWORD PTR [rip+0x23c1d]        # 0x140032020
   14000e403:	add    rsp,0x58
   14000e407:	ret    
   14000e408:	int3   
   14000e409:	int3   
   14000e40a:	int3   
   14000e40b:	int3   
   14000e40c:	int3   
   14000e40d:	int3   
   14000e40e:	int3   
   14000e40f:	int3   
   14000e410:	mov    QWORD PTR [rsp+0x8],rbx
   14000e415:	mov    DWORD PTR [rsp+0x20],r9d
   14000e41a:	push   rsi
   14000e41b:	sub    rsp,0x80
   14000e422:	mov    r8,QWORD PTR [rsp+0xc0]
   14000e42a:	or     r9,0xffffffffffffffff
   14000e42e:	xor    ebx,ebx
   14000e430:	mov    r10d,0xe
   14000e436:	test   r8,r8
   14000e439:	je     0x14000e45d
   14000e43b:	cmp    WORD PTR [r8],bx
   14000e43f:	jne    0x14000e446
   14000e441:	mov    r11d,r10d
   14000e444:	jmp    0x14000e463
   14000e446:	mov    rax,r9
   14000e449:	inc    rax
   14000e44c:	cmp    WORD PTR [r8+rax*2],bx
   14000e451:	jne    0x14000e449
   14000e453:	lea    r11,[rax*2+0x2]
   14000e45b:	jmp    0x14000e463
   14000e45d:	mov    r11d,0xa
   14000e463:	lea    rsi,[rip+0x269ee]        # 0x140034e58
   14000e46a:	test   r8,r8
   14000e46d:	je     0x14000e479
   14000e46f:	cmp    WORD PTR [r8],bx
   14000e473:	cmove  r8,rsi
   14000e477:	jmp    0x14000e480
   14000e479:	lea    r8,[rip+0x27020]        # 0x1400354a0
   14000e480:	mov    rax,QWORD PTR [rsp+0xb0]
   14000e488:	test   rax,rax
   14000e48b:	je     0x14000e4a6
   14000e48d:	cmp    WORD PTR [rax],bx
   14000e490:	je     0x14000e4ac
   14000e492:	inc    r9
   14000e495:	cmp    WORD PTR [rax+r9*2],bx
   14000e49a:	jne    0x14000e492
   14000e49c:	lea    r10,[r9*2+0x2]
   14000e4a4:	jmp    0x14000e4ac
   14000e4a6:	mov    r10d,0xa
   14000e4ac:	test   rax,rax
   14000e4af:	je     0x14000e4ba
   14000e4b1:	cmp    WORD PTR [rax],bx
   14000e4b4:	cmove  rax,rsi
   14000e4b8:	jmp    0x14000e4c1
   14000e4ba:	lea    rax,[rip+0x26fdf]        # 0x1400354a0
   14000e4c1:	mov    QWORD PTR [rsp+0x70],rbx
   14000e4c6:	lea    r9,[rsp+0xc8]
   14000e4ce:	mov    ebx,0x4
   14000e4d3:	mov    QWORD PTR [rsp+0x68],rbx
   14000e4d8:	mov    QWORD PTR [rsp+0x60],r9
   14000e4dd:	mov    QWORD PTR [rsp+0x58],r11
   14000e4e2:	mov    QWORD PTR [rsp+0x50],r8
   14000e4e7:	lea    r8,[rsp+0xb8]
   14000e4ef:	mov    QWORD PTR [rsp+0x48],rbx
   14000e4f4:	mov    QWORD PTR [rsp+0x40],r8
   14000e4f9:	lea    r8,[rip+0x28c18]        # 0x140037118
   14000e500:	mov    QWORD PTR [rsp+0x38],r10
   14000e505:	mov    QWORD PTR [rsp+0x30],rax
   14000e50a:	lea    rax,[rsp+0xa8]
   14000e512:	movzx  r9d,dx
   14000e516:	lea    edx,[rbx+0x27]
   14000e519:	mov    QWORD PTR [rsp+0x28],rbx
   14000e51e:	mov    QWORD PTR [rsp+0x20],rax
   14000e523:	call   QWORD PTR [rip+0x23af7]        # 0x140032020
   14000e529:	mov    rbx,QWORD PTR [rsp+0x90]
   14000e531:	add    rsp,0x80
   14000e538:	pop    rsi
   14000e539:	ret    
   14000e53a:	int3   
   14000e53b:	int3   
   14000e53c:	int3   
   14000e53d:	int3   
   14000e53e:	int3   
   14000e53f:	int3   
   14000e540:	mov    QWORD PTR [rsp+0x8],rbx
   14000e545:	mov    DWORD PTR [rsp+0x20],r9d
   14000e54a:	push   rdi
   14000e54b:	sub    rsp,0xc0
   14000e552:	mov    rdx,QWORD PTR [rsp+0x100]
   14000e55a:	mov    ebx,0xa
   14000e55f:	or     r8,0xffffffffffffffff
   14000e563:	xor    r11d,r11d
   14000e566:	lea    r9d,[rbx+0x4]
   14000e56a:	test   rdx,rdx
   14000e56d:	je     0x14000e591
   14000e56f:	cmp    WORD PTR [rdx],r11w
   14000e573:	jne    0x14000e57a
   14000e575:	mov    r10d,r9d
   14000e578:	jmp    0x14000e594
   14000e57a:	mov    rax,r8
   14000e57d:	inc    rax
   14000e580:	cmp    WORD PTR [rdx+rax*2],r11w
   14000e585:	jne    0x14000e57d
   14000e587:	lea    r10,[rax*2+0x2]
   14000e58f:	jmp    0x14000e594
   14000e591:	mov    r10,rbx
   14000e594:	lea    rdi,[rip+0x268bd]        # 0x140034e58
   14000e59b:	test   rdx,rdx
   14000e59e:	je     0x14000e5aa
   14000e5a0:	cmp    WORD PTR [rdx],r11w
   14000e5a4:	cmove  rdx,rdi
   14000e5a8:	jmp    0x14000e5b1
   14000e5aa:	lea    rdx,[rip+0x26eef]        # 0x1400354a0
   14000e5b1:	mov    rax,QWORD PTR [rsp+0xf0]
   14000e5b9:	test   rax,rax
   14000e5bc:	je     0x14000e5d8
   14000e5be:	cmp    WORD PTR [rax],r11w
   14000e5c2:	je     0x14000e5db
   14000e5c4:	inc    r8
   14000e5c7:	cmp    WORD PTR [rax+r8*2],r11w
   14000e5cc:	jne    0x14000e5c4
   14000e5ce:	lea    r9,[r8*2+0x2]
   14000e5d6:	jmp    0x14000e5db
   14000e5d8:	mov    r9,rbx
   14000e5db:	test   rax,rax
   14000e5de:	je     0x14000e5ea
   14000e5e0:	cmp    WORD PTR [rax],r11w
   14000e5e4:	cmove  rax,rdi
   14000e5e8:	jmp    0x14000e5f1
   14000e5ea:	lea    rax,[rip+0x26eaf]        # 0x1400354a0
   14000e5f1:	mov    QWORD PTR [rsp+0xb0],r11
   14000e5f9:	lea    r8,[rsp+0x128]
   14000e601:	mov    edi,0x10
   14000e606:	lea    ebx,[rdi-0xc]
   14000e609:	lea    r11d,[rdi-0x8]
   14000e60d:	mov    QWORD PTR [rsp+0xa8],r11
   14000e615:	mov    QWORD PTR [rsp+0xa0],r8
   14000e61d:	lea    r8,[rsp+0x120]
   14000e625:	mov    QWORD PTR [rsp+0x98],rbx
   14000e62d:	mov    QWORD PTR [rsp+0x90],r8
   14000e635:	lea    r8,[rsp+0x118]
   14000e63d:	mov    QWORD PTR [rsp+0x88],r11
   14000e645:	mov    QWORD PTR [rsp+0x80],r8
   14000e64d:	lea    r8,[rsp+0x110]
   14000e655:	mov    QWORD PTR [rsp+0x78],rbx
   14000e65a:	mov    QWORD PTR [rsp+0x70],r8
   14000e65f:	lea    r8,[rsp+0x108]
   14000e667:	mov    QWORD PTR [rsp+0x68],rbx
   14000e66c:	mov    QWORD PTR [rsp+0x60],r8
   14000e671:	lea    r8,[rip+0x28aa0]        # 0x140037118
   14000e678:	mov    QWORD PTR [rsp+0x58],r10
   14000e67d:	mov    QWORD PTR [rsp+0x50],rdx
   14000e682:	lea    rdx,[rsp+0xf8]
   14000e68a:	mov    QWORD PTR [rsp+0x48],rbx
   14000e68f:	mov    QWORD PTR [rsp+0x40],rdx
   14000e694:	lea    edx,[rdi+0x1b]
   14000e697:	mov    QWORD PTR [rsp+0x38],r9
   14000e69c:	mov    QWORD PTR [rsp+0x30],rax
   14000e6a1:	lea    rax,[rsp+0xe8]
   14000e6a9:	mov    QWORD PTR [rsp+0x28],rbx
   14000e6ae:	movzx  r9d,di
   14000e6b2:	mov    QWORD PTR [rsp+0x20],rax
   14000e6b7:	call   QWORD PTR [rip+0x23963]        # 0x140032020
   14000e6bd:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000e6c5:	add    rsp,0xc0
   14000e6cc:	pop    rdi
   14000e6cd:	ret    
   14000e6ce:	int3   
   14000e6cf:	int3   
   14000e6d0:	int3   
   14000e6d1:	int3   
   14000e6d2:	int3   
   14000e6d3:	int3   
   14000e6d4:	mov    r11,rsp
   14000e6d7:	mov    DWORD PTR [r11+0x20],r9d
   14000e6db:	sub    rsp,0x68
   14000e6df:	and    QWORD PTR [r11-0x18],0x0
   14000e6e4:	lea    rax,[r11+0x30]
   14000e6e8:	mov    r8d,0xa
   14000e6ee:	movzx  r9d,r8w
   14000e6f2:	lea    edx,[r8-0x6]
   14000e6f6:	mov    QWORD PTR [r11-0x20],rdx
   14000e6fa:	lea    r8,[rip+0x28a17]        # 0x140037118
   14000e701:	mov    QWORD PTR [r11-0x28],rax
   14000e705:	lea    rax,[r11+0x28]
   14000e709:	mov    QWORD PTR [r11-0x30],rdx
   14000e70d:	mov    QWORD PTR [r11-0x38],rax
   14000e711:	lea    rax,[r11+0x20]
   14000e715:	mov    QWORD PTR [r11-0x40],rdx
   14000e719:	mov    edx,0x2b
   14000e71e:	mov    QWORD PTR [r11-0x48],rax
   14000e722:	call   QWORD PTR [rip+0x238f8]        # 0x140032020
   14000e728:	add    rsp,0x68
   14000e72c:	ret    
   14000e72d:	int3   
   14000e72e:	int3   
   14000e72f:	int3   
   14000e730:	int3   
   14000e731:	int3   
   14000e732:	int3   
   14000e733:	int3   
   14000e734:	mov    QWORD PTR [rsp+0x8],rbx
   14000e739:	mov    QWORD PTR [rsp+0x20],r9
   14000e73e:	push   rdi
   14000e73f:	sub    rsp,0xc0
   14000e746:	mov    rdx,QWORD PTR [rsp+0x120]
   14000e74e:	mov    ebx,0xa
   14000e753:	or     r8,0xffffffffffffffff
   14000e757:	xor    r11d,r11d
   14000e75a:	lea    r9d,[rbx+0x4]
   14000e75e:	test   rdx,rdx
   14000e761:	je     0x14000e785
   14000e763:	cmp    WORD PTR [rdx],r11w
   14000e767:	jne    0x14000e76e
   14000e769:	mov    r10d,r9d
   14000e76c:	jmp    0x14000e788
   14000e76e:	mov    rax,r8
   14000e771:	inc    rax
   14000e774:	cmp    WORD PTR [rdx+rax*2],r11w
   14000e779:	jne    0x14000e771
   14000e77b:	lea    r10,[rax*2+0x2]
   14000e783:	jmp    0x14000e788
   14000e785:	mov    r10,rbx
   14000e788:	lea    rdi,[rip+0x266c9]        # 0x140034e58
   14000e78f:	test   rdx,rdx
   14000e792:	je     0x14000e79e
   14000e794:	cmp    WORD PTR [rdx],r11w
   14000e798:	cmove  rdx,rdi
   14000e79c:	jmp    0x14000e7a5
   14000e79e:	lea    rdx,[rip+0x26cfb]        # 0x1400354a0
   14000e7a5:	mov    rax,QWORD PTR [rsp+0x110]
   14000e7ad:	test   rax,rax
   14000e7b0:	je     0x14000e7cc
   14000e7b2:	cmp    WORD PTR [rax],r11w
   14000e7b6:	je     0x14000e7cf
   14000e7b8:	inc    r8
   14000e7bb:	cmp    WORD PTR [rax+r8*2],r11w
   14000e7c0:	jne    0x14000e7b8
   14000e7c2:	lea    r9,[r8*2+0x2]
   14000e7ca:	jmp    0x14000e7cf
   14000e7cc:	mov    r9,rbx
   14000e7cf:	test   rax,rax
   14000e7d2:	je     0x14000e7de
   14000e7d4:	cmp    WORD PTR [rax],r11w
   14000e7d8:	cmove  rax,rdi
   14000e7dc:	jmp    0x14000e7e5
   14000e7de:	lea    rax,[rip+0x26cbb]        # 0x1400354a0
   14000e7e5:	mov    QWORD PTR [rsp+0xb0],r11
   14000e7ed:	lea    r8,[rsp+0x128]
   14000e7f5:	mov    ebx,0x11
   14000e7fa:	lea    r11d,[rbx-0xd]
   14000e7fe:	mov    QWORD PTR [rsp+0xa8],r11
   14000e806:	mov    QWORD PTR [rsp+0xa0],r8
   14000e80e:	lea    r8,[rip+0x28903]        # 0x140037118
   14000e815:	mov    QWORD PTR [rsp+0x98],r10
   14000e81d:	mov    QWORD PTR [rsp+0x90],rdx
   14000e825:	lea    rdx,[rsp+0x118]
   14000e82d:	mov    QWORD PTR [rsp+0x88],r11
   14000e835:	mov    QWORD PTR [rsp+0x80],rdx
   14000e83d:	lea    edx,[rbx-0x9]
   14000e840:	mov    QWORD PTR [rsp+0x78],r9
   14000e845:	mov    QWORD PTR [rsp+0x70],rax
   14000e84a:	lea    rax,[rsp+0x108]
   14000e852:	mov    QWORD PTR [rsp+0x68],r11
   14000e857:	mov    QWORD PTR [rsp+0x60],rax
   14000e85c:	lea    rax,[rsp+0x100]
   14000e864:	mov    QWORD PTR [rsp+0x58],r11
   14000e869:	mov    QWORD PTR [rsp+0x50],rax
   14000e86e:	lea    rax,[rsp+0xf8]
   14000e876:	mov    QWORD PTR [rsp+0x48],rdx
   14000e87b:	mov    QWORD PTR [rsp+0x40],rax
   14000e880:	lea    rax,[rsp+0xf0]
   14000e888:	mov    QWORD PTR [rsp+0x38],r11
   14000e88d:	mov    QWORD PTR [rsp+0x30],rax
   14000e892:	lea    rax,[rsp+0xe8]
   14000e89a:	mov    QWORD PTR [rsp+0x28],rdx
   14000e89f:	lea    edx,[rbx+0x1a]
   14000e8a2:	movzx  r9d,bx
   14000e8a6:	mov    QWORD PTR [rsp+0x20],rax
   14000e8ab:	call   QWORD PTR [rip+0x2376f]        # 0x140032020
   14000e8b1:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000e8b9:	add    rsp,0xc0
   14000e8c0:	pop    rdi
   14000e8c1:	ret    
   14000e8c2:	int3   
   14000e8c3:	int3   
   14000e8c4:	int3   
   14000e8c5:	int3   
   14000e8c6:	int3   
   14000e8c7:	int3   
   14000e8c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000e8cd:	mov    QWORD PTR [rsp+0x10],rbp
   14000e8d2:	mov    QWORD PTR [rsp+0x18],rsi
   14000e8d7:	push   rdi
   14000e8d8:	push   r12
   14000e8da:	push   r13
   14000e8dc:	push   r14
   14000e8de:	push   r15
   14000e8e0:	sub    rsp,0xe0
   14000e8e7:	mov    rsi,QWORD PTR [rsp+0x150]
   14000e8ef:	mov    ebp,0xe
   14000e8f4:	or     rdi,0xffffffffffffffff
   14000e8f8:	xor    r13d,r13d
   14000e8fb:	mov    r12,rcx
   14000e8fe:	mov    r15,r9
   14000e901:	lea    ecx,[rbp-0x4]
   14000e904:	test   rsi,rsi
   14000e907:	je     0x14000e92b
   14000e909:	cmp    WORD PTR [rsi],r13w
   14000e90d:	jne    0x14000e914
   14000e90f:	mov    r14d,ebp
   14000e912:	jmp    0x14000e92e
   14000e914:	mov    rax,rdi
   14000e917:	inc    rax
   14000e91a:	cmp    WORD PTR [rsi+rax*2],r13w
   14000e91f:	jne    0x14000e917
   14000e921:	lea    r14,[rax*2+0x2]
   14000e929:	jmp    0x14000e92e
   14000e92b:	mov    r14,rcx
   14000e92e:	lea    rdx,[rip+0x26523]        # 0x140034e58
   14000e935:	test   rsi,rsi
   14000e938:	je     0x14000e944
   14000e93a:	cmp    WORD PTR [rsi],r13w
   14000e93e:	cmove  rsi,rdx
   14000e942:	jmp    0x14000e94b
   14000e944:	lea    rsi,[rip+0x26b55]        # 0x1400354a0
   14000e94b:	mov    rbx,QWORD PTR [rsp+0x140]
   14000e953:	test   rbx,rbx
   14000e956:	je     0x14000e975
   14000e958:	cmp    WORD PTR [rbx],r13w
   14000e95c:	je     0x14000e978
   14000e95e:	mov    rax,rdi
   14000e961:	inc    rax
   14000e964:	cmp    WORD PTR [rbx+rax*2],r13w
   14000e969:	jne    0x14000e961
   14000e96b:	lea    rbp,[rax*2+0x2]
   14000e973:	jmp    0x14000e978
   14000e975:	mov    rbp,rcx
   14000e978:	test   rbx,rbx
   14000e97b:	je     0x14000e987
   14000e97d:	cmp    WORD PTR [rbx],r13w
   14000e981:	cmove  rbx,rdx
   14000e985:	jmp    0x14000e98e
   14000e987:	lea    rbx,[rip+0x26b12]        # 0x1400354a0
   14000e98e:	test   r9,r9
   14000e991:	je     0x14000e9a1
   14000e993:	inc    rdi
   14000e996:	cmp    BYTE PTR [r9+rdi*1],r13b
   14000e99a:	jne    0x14000e993
   14000e99c:	inc    rdi
   14000e99f:	jmp    0x14000e9a6
   14000e9a1:	mov    edi,0x5
   14000e9a6:	mov    rcx,QWORD PTR [rsp+0x168]
   14000e9ae:	lea    r11,[rip+0x26adf]        # 0x140035494
   14000e9b5:	mov    r9,QWORD PTR [rsp+0x160]
   14000e9bd:	test   r15,r15
   14000e9c0:	mov    QWORD PTR [rsp+0xd0],r13
   14000e9c8:	cmovne r11,r15
   14000e9cc:	mov    r15d,0x13
   14000e9d2:	lea    r8,[rcx+0x8]
   14000e9d6:	movzx  eax,WORD PTR [r8]
   14000e9da:	lea    r10,[r9+0x8]
   14000e9de:	movzx  edx,WORD PTR [r10]
   14000e9e2:	mov    QWORD PTR [rsp+0xc8],rax
   14000e9ea:	mov    rax,QWORD PTR [rcx]
   14000e9ed:	lea    ecx,[r15-0x11]
   14000e9f1:	mov    QWORD PTR [rsp+0xc0],rax
   14000e9f9:	mov    rax,QWORD PTR [r9]
   14000e9fc:	mov    QWORD PTR [rsp+0xb8],rcx
   14000ea04:	mov    QWORD PTR [rsp+0xb0],r8
   14000ea0c:	lea    r8,[rip+0x28705]        # 0x140037118
   14000ea13:	mov    QWORD PTR [rsp+0xa8],rdx
   14000ea1b:	mov    QWORD PTR [rsp+0xa0],rax
   14000ea23:	lea    rax,[rsp+0x158]
   14000ea2b:	mov    QWORD PTR [rsp+0x98],rcx
   14000ea33:	lea    ecx,[r15-0xf]
   14000ea37:	mov    QWORD PTR [rsp+0x90],r10
   14000ea3f:	lea    edx,[rcx+0x27]
   14000ea42:	mov    QWORD PTR [rsp+0x88],rcx
   14000ea4a:	mov    QWORD PTR [rsp+0x80],rax
   14000ea52:	lea    rax,[rsp+0x148]
   14000ea5a:	mov    QWORD PTR [rsp+0x78],r14
   14000ea5f:	mov    QWORD PTR [rsp+0x70],rsi
   14000ea64:	mov    QWORD PTR [rsp+0x68],rcx
   14000ea69:	mov    QWORD PTR [rsp+0x60],rax
   14000ea6e:	lea    rax,[rsp+0x138]
   14000ea76:	mov    QWORD PTR [rsp+0x58],rbp
   14000ea7b:	mov    QWORD PTR [rsp+0x50],rbx
   14000ea80:	mov    QWORD PTR [rsp+0x48],rcx
   14000ea85:	mov    QWORD PTR [rsp+0x40],rax
   14000ea8a:	lea    rax,[rsp+0x130]
   14000ea92:	mov    QWORD PTR [rsp+0x38],rcx
   14000ea97:	mov    rcx,r12
   14000ea9a:	mov    QWORD PTR [rsp+0x30],rax
   14000ea9f:	mov    QWORD PTR [rsp+0x28],rdi
   14000eaa4:	movzx  r9d,r15w
   14000eaa8:	mov    QWORD PTR [rsp+0x20],r11
   14000eaad:	call   QWORD PTR [rip+0x2356d]        # 0x140032020
   14000eab3:	lea    r11,[rsp+0xe0]
   14000eabb:	mov    rbx,QWORD PTR [r11+0x30]
   14000eabf:	mov    rbp,QWORD PTR [r11+0x38]
   14000eac3:	mov    rsi,QWORD PTR [r11+0x40]
   14000eac7:	mov    rsp,r11
   14000eaca:	pop    r15
   14000eacc:	pop    r14
   14000eace:	pop    r13
   14000ead0:	pop    r12
   14000ead2:	pop    rdi
   14000ead3:	ret    
   14000ead4:	int3   
   14000ead5:	int3   
   14000ead6:	int3   
   14000ead7:	int3   
   14000ead8:	int3   
   14000ead9:	int3   
   14000eada:	int3   
   14000eadb:	int3   
   14000eadc:	mov    rax,rsp
   14000eadf:	push   rbp
   14000eae0:	push   rdi
   14000eae1:	push   r12
   14000eae3:	push   r14
   14000eae5:	push   r15
   14000eae7:	lea    rbp,[rax-0x4f]
   14000eaeb:	sub    rsp,0x90
   14000eaf2:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14000eafa:	mov    QWORD PTR [rax+0x10],rbx
   14000eafe:	mov    QWORD PTR [rax+0x18],rsi
   14000eb02:	mov    r15,r9
   14000eb05:	mov    rsi,r8
   14000eb08:	mov    r14,rdx
   14000eb0b:	mov    r12,rcx
   14000eb0e:	test   rcx,rcx
   14000eb11:	jne    0x14000eb53
   14000eb13:	lea    rax,[rip+0x3c55e]        # 0x14004b078
   14000eb1a:	mov    rcx,QWORD PTR [rip+0x3c557]        # 0x14004b078
   14000eb21:	cmp    rcx,rax
   14000eb24:	je     0x14000eb48
   14000eb26:	test   BYTE PTR [rcx+0x1c],0x1
   14000eb2a:	je     0x14000eb48
   14000eb2c:	lea    edx,[r12+0xa]
   14000eb31:	lea    r9,[rip+0x27fc0]        # 0x140036af8
   14000eb38:	lea    r8,[rip+0x25891]        # 0x1400343d0
   14000eb3f:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb43:	call   0x1400038e0
   14000eb48:	mov    ecx,0x80070057
   14000eb4d:	call   0x140029d64
   14000eb52:	int3   
   14000eb53:	and    QWORD PTR [rcx],0x0
   14000eb57:	xor    ebx,ebx
   14000eb59:	mov    QWORD PTR [rbp+0x57],rbx
   14000eb5d:	lea    rcx,[rbp-0x39]
   14000eb61:	call   0x14001121c
   14000eb66:	test   eax,eax
   14000eb68:	js     0x14000eb8c
   14000eb6a:	mov    rbx,QWORD PTR [rbp-0x39]
   14000eb6e:	mov    rax,QWORD PTR [rbx]
   14000eb71:	mov    rdi,QWORD PTR [rax]
   14000eb74:	mov    rcx,rdi
   14000eb77:	call   QWORD PTR [rip+0x23b2b]        # 0x1400326a8
   14000eb7d:	mov    rcx,rbx
   14000eb80:	call   rdi
   14000eb82:	mov    QWORD PTR [rbp+0x57],rbx
   14000eb86:	xor    eax,eax
   14000eb88:	test   eax,eax
   14000eb8a:	jns    0x14000eb94
   14000eb8c:	mov    ecx,eax
   14000eb8e:	call   0x140029d64
   14000eb93:	int3   
   14000eb94:	mov    al,BYTE PTR [rbp+0x7f]
   14000eb97:	mov    BYTE PTR [rsp+0x28],al
   14000eb9b:	mov    al,BYTE PTR [rbp+0x77]
   14000eb9e:	mov    BYTE PTR [rsp+0x20],al
   14000eba2:	mov    r9,r15
   14000eba5:	mov    r8,rsi
   14000eba8:	mov    rdx,r14
   14000ebab:	mov    rcx,rbx
   14000ebae:	call   0x14000ecd4
   14000ebb3:	lea    rdi,[r15+0x120]
   14000ebba:	mov    QWORD PTR [rbp-0x31],rdi
   14000ebbe:	mov    rcx,rdi
   14000ebc1:	call   0x140029ab0
   14000ebc6:	test   eax,eax
   14000ebc8:	jns    0x14000ebd2
   14000ebca:	mov    ecx,eax
   14000ebcc:	call   0x140029d64
   14000ebd1:	nop
   14000ebd2:	lea    r14,[r15+0xf0]
   14000ebd9:	mov    QWORD PTR [rbp+0x7],r14
   14000ebdd:	mov    rcx,r14
   14000ebe0:	call   QWORD PTR [rip+0x23522]        # 0x140032108
   14000ebe6:	mov    BYTE PTR [rbp+0xf],0x1
   14000ebea:	mov    BYTE PTR [rbp+0x17],0x1
   14000ebee:	mov    QWORD PTR [rbp-0x21],rbx
   14000ebf2:	test   rbx,rbx
   14000ebf5:	je     0x14000ec0c
   14000ebf7:	mov    rax,QWORD PTR [rbx]
   14000ebfa:	mov    rsi,QWORD PTR [rax]
   14000ebfd:	mov    rcx,rsi
   14000ec00:	call   QWORD PTR [rip+0x23aa2]        # 0x1400326a8
   14000ec06:	mov    rcx,rbx
   14000ec09:	call   rsi
   14000ec0b:	nop
   14000ec0c:	mov    QWORD PTR [rbp-0x19],rbx
   14000ec10:	test   rbx,rbx
   14000ec13:	je     0x14000ec29
   14000ec15:	mov    rax,QWORD PTR [rbx]
   14000ec18:	mov    rsi,QWORD PTR [rax]
   14000ec1b:	mov    rcx,rsi
   14000ec1e:	call   QWORD PTR [rip+0x23a84]        # 0x1400326a8
   14000ec24:	mov    rcx,rbx
   14000ec27:	call   rsi
   14000ec29:	mov    QWORD PTR [rbp-0x11],rbx
   14000ec2d:	lea    rcx,[r15+0xb0]
   14000ec34:	mov    r9b,BYTE PTR [rip+0x415c4]        # 0x1400501ff
   14000ec3b:	lea    r8,[rbp-0x19]
   14000ec3f:	lea    rdx,[rbp-0x9]
   14000ec43:	call   0x1400122ec
   14000ec48:	nop
   14000ec49:	mov    r15,QWORD PTR [rbp-0x11]
   14000ec4d:	test   r15,r15
   14000ec50:	je     0x14000ec68
   14000ec52:	mov    rax,QWORD PTR [r15]
   14000ec55:	mov    rsi,QWORD PTR [rax+0x8]
   14000ec59:	mov    rcx,rsi
   14000ec5c:	call   QWORD PTR [rip+0x23a46]        # 0x1400326a8
   14000ec62:	mov    rcx,r15
   14000ec65:	call   rsi
   14000ec67:	nop
   14000ec68:	test   rbx,rbx
   14000ec6b:	je     0x14000ec83
   14000ec6d:	mov    rax,QWORD PTR [rbx]
   14000ec70:	mov    rsi,QWORD PTR [rax+0x8]
   14000ec74:	mov    rcx,rsi
   14000ec77:	call   QWORD PTR [rip+0x23a2b]        # 0x1400326a8
   14000ec7d:	mov    rcx,rbx
   14000ec80:	call   rsi
   14000ec82:	nop
   14000ec83:	mov    rcx,r14
   14000ec86:	call   QWORD PTR [rip+0x2346c]        # 0x1400320f8
   14000ec8c:	nop
   14000ec8d:	or     eax,0xffffffff
   14000ec90:	lock xadd DWORD PTR [rdi+0x8],eax
   14000ec95:	dec    eax
   14000ec97:	cmp    eax,0x80000000
   14000ec9c:	jne    0x14000eca7
   14000ec9e:	mov    rcx,QWORD PTR [rbp-0x31]
   14000eca2:	call   0x140029c90
   14000eca7:	mov    rax,QWORD PTR [rbp+0x57]
   14000ecab:	mov    QWORD PTR [r12],rax
   14000ecaf:	lea    r11,[rsp+0x90]
   14000ecb7:	mov    rbx,QWORD PTR [r11+0x38]
   14000ecbb:	mov    rsi,QWORD PTR [r11+0x40]
   14000ecbf:	mov    rsp,r11
   14000ecc2:	pop    r15
   14000ecc4:	pop    r14
   14000ecc6:	pop    r12
   14000ecc8:	pop    rdi
   14000ecc9:	pop    rbp
   14000ecca:	ret    
   14000eccb:	int3   
   14000eccc:	int3   
   14000eccd:	int3   
   14000ecce:	int3   
   14000eccf:	int3   
   14000ecd0:	int3   
   14000ecd1:	int3   
   14000ecd2:	int3   
   14000ecd3:	int3   
   14000ecd4:	mov    rax,rsp
   14000ecd7:	push   rbp
   14000ecd8:	push   r14
   14000ecda:	push   r15
   14000ecdc:	mov    rbp,rsp
   14000ecdf:	sub    rsp,0x50
   14000ece3:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14000eceb:	mov    QWORD PTR [rax+0x8],rbx
   14000ecef:	mov    QWORD PTR [rax+0x18],rsi
   14000ecf3:	mov    QWORD PTR [rax+0x20],rdi
   14000ecf7:	mov    r14,r9
   14000ecfa:	mov    r15,r8
   14000ecfd:	mov    rbx,rdx
   14000ed00:	mov    rsi,rcx
   14000ed03:	test   rdx,rdx
   14000ed06:	je     0x14000ef97
   14000ed0c:	test   r8,r8
   14000ed0f:	je     0x14000ef97
   14000ed15:	test   r9,r9
   14000ed18:	je     0x14000ef97
   14000ed1e:	add    rcx,0x110
   14000ed25:	and    DWORD PTR [rcx+0xc],0x0
   14000ed29:	xor    edx,edx
   14000ed2b:	call   QWORD PTR [rip+0x2353f]        # 0x140032270
   14000ed31:	mov    al,BYTE PTR [r14+0x140]
   14000ed38:	mov    BYTE PTR [rsi+0x13d],al
   14000ed3e:	mov    al,BYTE PTR [r14+0x141]
   14000ed45:	mov    BYTE PTR [rsi+0x13e],al
   14000ed4b:	mov    al,BYTE PTR [r14+0x142]
   14000ed52:	mov    BYTE PTR [rsi+0x13c],al
   14000ed58:	mov    QWORD PTR [rsi+0x48],rbx
   14000ed5c:	mov    rax,QWORD PTR [r15]
   14000ed5f:	mov    rbx,QWORD PTR [rax]
   14000ed62:	mov    rcx,rbx
   14000ed65:	call   QWORD PTR [rip+0x2393d]        # 0x1400326a8
   14000ed6b:	mov    rcx,r15
   14000ed6e:	call   rbx
   14000ed70:	mov    rdi,QWORD PTR [rsi+0x50]
   14000ed74:	mov    QWORD PTR [rsi+0x50],r15
   14000ed78:	test   rdi,rdi
   14000ed7b:	je     0x14000ed92
   14000ed7d:	mov    rax,QWORD PTR [rdi]
   14000ed80:	mov    rbx,QWORD PTR [rax+0x8]
   14000ed84:	mov    rcx,rbx
   14000ed87:	call   QWORD PTR [rip+0x2391b]        # 0x1400326a8
   14000ed8d:	mov    rcx,rdi
   14000ed90:	call   rbx
   14000ed92:	and    QWORD PTR [rbp-0x18],0x0
   14000ed97:	mov    rax,QWORD PTR [r15]
   14000ed9a:	mov    rbx,QWORD PTR [rax+0x18]
   14000ed9e:	mov    rcx,rbx
   14000eda1:	call   QWORD PTR [rip+0x23901]        # 0x1400326a8
   14000eda7:	lea    rdx,[rbp-0x18]
   14000edab:	mov    rcx,r15
   14000edae:	call   rbx
   14000edb0:	test   eax,eax
   14000edb2:	jns    0x14000edbc
   14000edb4:	mov    ecx,eax
   14000edb6:	call   0x140029d64
   14000edbb:	int3   
   14000edbc:	mov    rbx,QWORD PTR [rbp-0x18]
   14000edc0:	mov    QWORD PTR [rsi+0x58],rbx
   14000edc4:	cmp    BYTE PTR [rbp+0x48],0x0
   14000edc8:	je     0x14000edff
   14000edca:	and    QWORD PTR [rbp-0x10],0x0
   14000edcf:	mov    rax,QWORD PTR [rbx]
   14000edd2:	mov    rdi,QWORD PTR [rax+0x58]
   14000edd6:	mov    rcx,rdi
   14000edd9:	call   QWORD PTR [rip+0x238c9]        # 0x1400326a8
   14000eddf:	mov    r8b,0x1
   14000ede2:	lea    rdx,[rbp-0x10]
   14000ede6:	mov    rcx,rbx
   14000ede9:	call   rdi
   14000edeb:	mov    rdx,QWORD PTR [rbp-0x10]
   14000edef:	test   rdx,rdx
   14000edf2:	je     0x14000edff
   14000edf4:	mov    ecx,0x13e
   14000edf9:	call   QWORD PTR [rip+0x23641]        # 0x140032440
   14000edff:	lea    rax,[r14+0x70]
   14000ee03:	mov    rcx,rsi
   14000ee06:	sub    rcx,r14
   14000ee09:	mov    r8d,0x2
   14000ee0f:	cmp    BYTE PTR [rbp+0x40],0x0
   14000ee13:	je     0x14000ee1a
   14000ee15:	mov    edx,DWORD PTR [rax-0x8]
   14000ee18:	jmp    0x14000ee1c
   14000ee1a:	mov    edx,DWORD PTR [rax]
   14000ee1c:	mov    DWORD PTR [rcx+rax*1+0x70],edx
   14000ee20:	add    rax,0x4
   14000ee24:	sub    r8,0x1
   14000ee28:	jne    0x14000ee0f
   14000ee2a:	mov    r8,r15
   14000ee2d:	mov    rdx,r14
   14000ee30:	mov    rcx,rsi
   14000ee33:	call   0x14000eff8
   14000ee38:	mov    eax,DWORD PTR [r14+0x8]
   14000ee3c:	test   eax,eax
   14000ee3e:	jne    0x14000ee4a
   14000ee40:	mov    DWORD PTR [r14+0x8],0x1
   14000ee48:	jmp    0x14000ee4f
   14000ee4a:	lock inc DWORD PTR [r14+0x8]
   14000ee4f:	mov    rdi,QWORD PTR [rsi+0xe8]
   14000ee56:	mov    QWORD PTR [rsi+0xe8],r14
   14000ee5d:	test   rdi,rdi
   14000ee60:	je     0x14000ee99
   14000ee62:	mov    eax,DWORD PTR [rdi+0x8]
   14000ee65:	cmp    eax,0x1
   14000ee68:	jne    0x14000ee73
   14000ee6a:	mov    DWORD PTR [rdi+0x8],0x0
   14000ee71:	jmp    0x14000ee80
   14000ee73:	or     eax,0xffffffff
   14000ee76:	lock xadd DWORD PTR [rdi+0x8],eax
   14000ee7b:	sub    eax,0x1
   14000ee7e:	jg     0x14000ee99
   14000ee80:	mov    rax,QWORD PTR [rdi]
   14000ee83:	mov    rbx,QWORD PTR [rax]
   14000ee86:	mov    rcx,rbx
   14000ee89:	call   QWORD PTR [rip+0x23819]        # 0x1400326a8
   14000ee8f:	mov    edx,0x1
   14000ee94:	mov    rcx,rdi
   14000ee97:	call   rbx
   14000ee99:	and    DWORD PTR [rbp+0x28],0x0
   14000ee9d:	call   QWORD PTR [rip+0x235ad]        # 0x140032450
   14000eea3:	mov    rbx,QWORD PTR [rax+0xa0]
   14000eeaa:	mov    rcx,rbx
   14000eead:	call   QWORD PTR [rip+0x237f5]        # 0x1400326a8
   14000eeb3:	lea    r8,[rbp+0x28]
   14000eeb7:	xor    edx,edx
   14000eeb9:	lea    rcx,[rip+0x27ce0]        # 0x140036ba0
   14000eec0:	call   rbx
   14000eec2:	mov    eax,DWORD PTR [rbp+0x28]
   14000eec5:	mov    DWORD PTR [rsi+0x138],eax
   14000eecb:	test   eax,eax
   14000eecd:	je     0x14000ef77
   14000eed3:	and    DWORD PTR [rbp-0x20],0x0
   14000eed7:	call   QWORD PTR [rip+0x23573]        # 0x140032450
   14000eedd:	mov    rbx,QWORD PTR [rax+0xa0]
   14000eee4:	mov    rcx,rbx
   14000eee7:	call   QWORD PTR [rip+0x237bb]        # 0x1400326a8
   14000eeed:	lea    r8,[rbp-0x20]
   14000eef1:	xor    edx,edx
   14000eef3:	lea    rcx,[rip+0x27ce6]        # 0x140036be0
   14000eefa:	call   rbx
   14000eefc:	and    DWORD PTR [rbp-0x1c],0x0
   14000ef00:	call   QWORD PTR [rip+0x2354a]        # 0x140032450
   14000ef06:	mov    rbx,QWORD PTR [rax+0xa0]
   14000ef0d:	mov    rcx,rbx
   14000ef10:	call   QWORD PTR [rip+0x23792]        # 0x1400326a8
   14000ef16:	lea    r8,[rbp-0x1c]
   14000ef1a:	xor    edx,edx
   14000ef1c:	lea    rcx,[rip+0x27cfd]        # 0x140036c20
   14000ef23:	call   rbx
   14000ef25:	movzx  eax,WORD PTR [rsi+0x88]
   14000ef2c:	mov    r8d,DWORD PTR [rbp-0x20]
   14000ef30:	cmp    eax,r8d
   14000ef33:	jb     0x14000ef70
   14000ef35:	mov    edx,DWORD PTR [rbp-0x1c]
   14000ef38:	cmp    eax,edx
   14000ef3a:	ja     0x14000ef70
   14000ef3c:	lea    rax,[rip+0x3c135]        # 0x14004b078
   14000ef43:	mov    rcx,QWORD PTR [rip+0x3c12e]        # 0x14004b078
   14000ef4a:	cmp    rcx,rax
   14000ef4d:	je     0x14000ef77
   14000ef4f:	test   BYTE PTR [rcx+0x1c],0x2
   14000ef53:	je     0x14000ef77
   14000ef55:	mov    DWORD PTR [rsp+0x28],edx
   14000ef59:	mov    DWORD PTR [rsp+0x20],r8d
   14000ef5e:	mov    r9d,DWORD PTR [rsi+0x138]
   14000ef65:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef69:	call   0x14000e6d4
   14000ef6e:	jmp    0x14000ef77
   14000ef70:	and    DWORD PTR [rsi+0x138],0x0
   14000ef77:	mov    rbx,QWORD PTR [rbp-0x18]
   14000ef7b:	test   rbx,rbx
   14000ef7e:	je     0x14000efd7
   14000ef80:	mov    rax,QWORD PTR [rbx]
   14000ef83:	mov    rdi,QWORD PTR [rax+0x8]
   14000ef87:	mov    rcx,rdi
   14000ef8a:	call   QWORD PTR [rip+0x23718]        # 0x1400326a8
   14000ef90:	mov    rcx,rbx
   14000ef93:	call   rdi
   14000ef95:	jmp    0x14000efd7
   14000ef97:	lea    rax,[rip+0x3c0da]        # 0x14004b078
   14000ef9e:	mov    rcx,QWORD PTR [rip+0x3c0d3]        # 0x14004b078
   14000efa5:	cmp    rcx,rax
   14000efa8:	je     0x14000efcc
   14000efaa:	test   BYTE PTR [rcx+0x1c],0x1
   14000efae:	je     0x14000efcc
   14000efb0:	mov    edx,0xa
   14000efb5:	lea    r9,[rip+0x27b84]        # 0x140036b40
   14000efbc:	lea    r8,[rip+0x2540d]        # 0x1400343d0
   14000efc3:	mov    rcx,QWORD PTR [rcx+0x10]
   14000efc7:	call   0x1400038e0
   14000efcc:	mov    ecx,0x80070057
   14000efd1:	call   0x140029d64
   14000efd6:	int3   
   14000efd7:	lea    r11,[rsp+0x50]
   14000efdc:	mov    rbx,QWORD PTR [r11+0x20]
   14000efe0:	mov    rsi,QWORD PTR [r11+0x30]
   14000efe4:	mov    rdi,QWORD PTR [r11+0x38]
   14000efe8:	mov    rsp,r11
   14000efeb:	pop    r15
   14000efed:	pop    r14
   14000efef:	pop    rbp
   14000eff0:	ret    
   14000eff1:	int3   
   14000eff2:	int3   
   14000eff3:	int3   
   14000eff4:	int3   
   14000eff5:	int3   
   14000eff6:	int3   
   14000eff7:	int3   
   14000eff8:	mov    r11,rsp
   14000effb:	push   rbp
   14000effc:	push   rsi
   14000effd:	push   rdi
   14000effe:	push   r12
   14000f000:	push   r13
   14000f002:	push   r14
   14000f004:	push   r15
   14000f006:	sub    rsp,0x90
   14000f00d:	mov    QWORD PTR [r11-0x80],0xfffffffffffffffe
   14000f015:	mov    QWORD PTR [r11+0x18],rbx
   14000f019:	mov    rax,QWORD PTR [rip+0x3c000]        # 0x14004b020
   14000f020:	xor    rax,rsp
   14000f023:	mov    QWORD PTR [rsp+0x80],rax
   14000f02b:	mov    r13,rdx
   14000f02e:	mov    rbp,rcx
   14000f031:	test   rdx,rdx
   14000f034:	je     0x14000f3a8
   14000f03a:	test   r8,r8
   14000f03d:	je     0x14000f3a8
   14000f043:	xor    edx,edx
   14000f045:	lea    r8d,[rdx+0x2c]
   14000f049:	lea    rcx,[r11-0x78]
   14000f04d:	call   0x14002e2ce
   14000f052:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f056:	mov    rax,QWORD PTR [rdi]
   14000f059:	mov    rbx,QWORD PTR [rax+0x30]
   14000f05d:	mov    rcx,rbx
   14000f060:	call   QWORD PTR [rip+0x23642]        # 0x1400326a8
   14000f066:	lea    rdx,[rbp+0x70]
   14000f06a:	mov    rcx,rdi
   14000f06d:	call   rbx
   14000f06f:	test   eax,eax
   14000f071:	jns    0x14000f07b
   14000f073:	mov    ecx,eax
   14000f075:	call   0x140029d64
   14000f07a:	int3   
   14000f07b:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f07f:	lea    r12,[rbp+0x78]
   14000f083:	mov    rax,QWORD PTR [rdi]
   14000f086:	mov    rbx,QWORD PTR [rax+0x40]
   14000f08a:	mov    rcx,rbx
   14000f08d:	call   QWORD PTR [rip+0x23615]        # 0x1400326a8
   14000f093:	mov    rdx,r12
   14000f096:	mov    rcx,rdi
   14000f099:	call   rbx
   14000f09b:	test   eax,eax
   14000f09d:	jns    0x14000f0a7
   14000f09f:	mov    ecx,eax
   14000f0a1:	call   0x140029d64
   14000f0a6:	int3   
   14000f0a7:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f0ab:	mov    rax,QWORD PTR [rdi]
   14000f0ae:	mov    rbx,QWORD PTR [rax+0x18]
   14000f0b2:	mov    rcx,rbx
   14000f0b5:	call   QWORD PTR [rip+0x235ed]        # 0x1400326a8
   14000f0bb:	lea    rdx,[rbp+0x80]
   14000f0c2:	mov    rcx,rdi
   14000f0c5:	call   rbx
   14000f0c7:	test   eax,eax
   14000f0c9:	jns    0x14000f0d3
   14000f0cb:	mov    ecx,eax
   14000f0cd:	call   0x140029d64
   14000f0d2:	int3   
   14000f0d3:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f0d7:	lea    rsi,[rbp+0x88]
   14000f0de:	mov    rax,QWORD PTR [rdi]
   14000f0e1:	mov    rbx,QWORD PTR [rax+0x28]
   14000f0e5:	mov    rcx,rbx
   14000f0e8:	call   QWORD PTR [rip+0x235ba]        # 0x1400326a8
   14000f0ee:	mov    rdx,rsi
   14000f0f1:	mov    rcx,rdi
   14000f0f4:	call   rbx
   14000f0f6:	test   eax,eax
   14000f0f8:	jns    0x14000f102
   14000f0fa:	mov    ecx,eax
   14000f0fc:	call   0x140029d64
   14000f101:	int3   
   14000f102:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f106:	lea    r14,[rbp+0x68]
   14000f10a:	mov    rax,QWORD PTR [rdi]
   14000f10d:	mov    rbx,QWORD PTR [rax+0x50]
   14000f111:	mov    rcx,rbx
   14000f114:	call   QWORD PTR [rip+0x2358e]        # 0x1400326a8
   14000f11a:	mov    rdx,r14
   14000f11d:	mov    rcx,rdi
   14000f120:	call   rbx
   14000f122:	test   eax,eax
   14000f124:	jns    0x14000f12e
   14000f126:	mov    ecx,eax
   14000f128:	call   0x140029d64
   14000f12d:	int3   
   14000f12e:	and    DWORD PTR [rsp+0x50],0x0
   14000f133:	mov    al,BYTE PTR [r14]
   14000f136:	mov    BYTE PTR [rsp+0x78],al
   14000f13a:	movzx  eax,WORD PTR [r12]
   14000f13f:	mov    WORD PTR [rsp+0x76],ax
   14000f144:	movzx  eax,WORD PTR [rsi]
   14000f147:	mov    WORD PTR [rsp+0x74],ax
   14000f14c:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f150:	mov    rax,QWORD PTR [rdi]
   14000f153:	mov    rbx,QWORD PTR [rax+0x38]
   14000f157:	mov    rcx,rbx
   14000f15a:	call   QWORD PTR [rip+0x23548]        # 0x1400326a8
   14000f160:	mov    r15d,0x10
   14000f166:	mov    r8d,r15d
   14000f169:	lea    rdx,[rsp+0x64]
   14000f16e:	mov    rcx,rdi
   14000f171:	call   rbx
   14000f173:	test   eax,eax
   14000f175:	jns    0x14000f17f
   14000f177:	mov    ecx,eax
   14000f179:	call   0x140029d64
   14000f17e:	int3   
   14000f17f:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f183:	mov    rax,QWORD PTR [rdi]
   14000f186:	mov    rbx,QWORD PTR [rax+0x20]
   14000f18a:	mov    rcx,rbx
   14000f18d:	call   QWORD PTR [rip+0x23515]        # 0x1400326a8
   14000f193:	mov    r8d,r15d
   14000f196:	lea    rdx,[rsp+0x54]
   14000f19b:	mov    rcx,rdi
   14000f19e:	call   rbx
   14000f1a0:	test   eax,eax
   14000f1a2:	jns    0x14000f1ac
   14000f1a4:	mov    ecx,eax
   14000f1a6:	call   0x140029d64
   14000f1ab:	int3   
   14000f1ac:	lea    r15,[rip+0x3bec5]        # 0x14004b078
   14000f1b3:	mov    rcx,QWORD PTR [rip+0x3bebe]        # 0x14004b078
   14000f1ba:	cmp    rcx,r15
   14000f1bd:	je     0x14000f1fe
   14000f1bf:	test   BYTE PTR [rcx+0x1c],0x4
   14000f1c3:	je     0x14000f1fe
   14000f1c5:	mov    r10,QWORD PTR [rbp+0x70]
   14000f1c9:	mov    r11,QWORD PTR [rbp+0x80]
   14000f1d0:	movzx  eax,WORD PTR [r12]
   14000f1d5:	movzx  r8d,WORD PTR [rsi]
   14000f1d9:	movzx  r9d,BYTE PTR [r14]
   14000f1dd:	mov    edx,0xb
   14000f1e2:	mov    DWORD PTR [rsp+0x38],eax
   14000f1e6:	mov    QWORD PTR [rsp+0x30],r10
   14000f1eb:	mov    DWORD PTR [rsp+0x28],r8d
   14000f1f0:	mov    QWORD PTR [rsp+0x20],r11
   14000f1f5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f1f9:	call   0x14000e410
   14000f1fe:	lea    r12,[rbp+0x60]
   14000f202:	mov    rdi,QWORD PTR [r12]
   14000f206:	test   rdi,rdi
   14000f209:	je     0x14000f225
   14000f20b:	mov    rax,QWORD PTR [rdi]
   14000f20e:	mov    rbx,QWORD PTR [rax+0x10]
   14000f212:	mov    rcx,rbx
   14000f215:	call   QWORD PTR [rip+0x2348d]        # 0x1400326a8
   14000f21b:	mov    rcx,rdi
   14000f21e:	call   rbx
   14000f220:	and    QWORD PTR [r12],0x0
   14000f225:	lea    rbx,[r13+0x120]
   14000f22c:	mov    QWORD PTR [rsp+0x40],rbx
   14000f231:	mov    rcx,rbx
   14000f234:	call   0x140029ab0
   14000f239:	test   eax,eax
   14000f23b:	jns    0x14000f245
   14000f23d:	mov    ecx,eax
   14000f23f:	call   0x140029d64
   14000f244:	nop
   14000f245:	mov    rcx,rbx
   14000f248:	call   0x140029ab0
   14000f24d:	test   eax,eax
   14000f24f:	jns    0x14000f259
   14000f251:	mov    ecx,eax
   14000f253:	call   0x140029d64
   14000f258:	int3   
   14000f259:	mov    rsi,QWORD PTR [r13+0x98]
   14000f260:	mov    rax,QWORD PTR [rsi]
   14000f263:	mov    rdi,QWORD PTR [rax+0x28]
   14000f267:	mov    rcx,rdi
   14000f26a:	call   QWORD PTR [rip+0x23438]        # 0x1400326a8
   14000f270:	mov    r9,r12
   14000f273:	lea    r8,[rbp+0x8]
   14000f277:	lea    rdx,[rsp+0x50]
   14000f27c:	mov    rcx,rsi
   14000f27f:	call   rdi
   14000f281:	mov    edi,eax
   14000f283:	test   eax,eax
   14000f285:	jns    0x14000f297
   14000f287:	mov    rcx,rbx
   14000f28a:	call   0x140029ae8
   14000f28f:	mov    ecx,edi
   14000f291:	call   0x140029d64
   14000f296:	nop
   14000f297:	or     eax,0xffffffff
   14000f29a:	lock xadd DWORD PTR [rbx+0x8],eax
   14000f29f:	dec    eax
   14000f2a1:	cmp    eax,0x80000000
   14000f2a6:	jne    0x14000f2b2
   14000f2a8:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f2ad:	call   0x140029c90
   14000f2b2:	cmp    BYTE PTR [rbp+0x13d],0x0
   14000f2b9:	je     0x14000f2d7
   14000f2bb:	mov    BYTE PTR [rbp+0x140],0x1
   14000f2c2:	call   0x140023548
   14000f2c7:	mov    rcx,rax
   14000f2ca:	mov    dl,BYTE PTR [r14]
   14000f2cd:	call   0x140023694
   14000f2d2:	jmp    0x14000f3e8
   14000f2d7:	cmp    BYTE PTR [rbp+0x13e],0x0
   14000f2de:	jne    0x14000f3e8
   14000f2e4:	mov    rdx,QWORD PTR [r12]
   14000f2e8:	mov    rcx,r13
   14000f2eb:	call   0x140011a5c
   14000f2f0:	test   al,al
   14000f2f2:	jne    0x14000f38f
   14000f2f8:	mov    rcx,QWORD PTR [rip+0x3bd79]        # 0x14004b078
   14000f2ff:	cmp    rcx,r15
   14000f302:	je     0x14000f346
   14000f304:	test   BYTE PTR [rcx+0x1c],0x4
   14000f308:	je     0x14000f346
   14000f30a:	movzx  eax,WORD PTR [rbp+0x78]
   14000f30e:	movzx  r8d,WORD PTR [rbp+0x88]
   14000f316:	movzx  r9d,BYTE PTR [r14]
   14000f31a:	mov    edx,0xc
   14000f31f:	mov    DWORD PTR [rsp+0x38],eax
   14000f323:	mov    rax,QWORD PTR [rbp+0x70]
   14000f327:	mov    QWORD PTR [rsp+0x30],rax
   14000f32c:	mov    DWORD PTR [rsp+0x28],r8d
   14000f331:	mov    rax,QWORD PTR [rbp+0x80]
   14000f338:	mov    QWORD PTR [rsp+0x20],rax
   14000f33d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f341:	call   0x14000e410
   14000f346:	mov    bl,BYTE PTR [r14]
   14000f349:	call   0x140023548
   14000f34e:	mov    dl,bl
   14000f350:	mov    rcx,rax
   14000f353:	call   0x1400235c0
   14000f358:	mov    edx,0x1
   14000f35d:	mov    ecx,0xbe
   14000f362:	call   QWORD PTR [rip+0x23100]        # 0x140032468
   14000f368:	xor    edx,edx
   14000f36a:	mov    ecx,0x107
   14000f36f:	call   QWORD PTR [rip+0x23063]        # 0x1400323d8
   14000f375:	mov    edx,0x64
   14000f37a:	mov    ecx,0x105
   14000f37f:	call   QWORD PTR [rip+0x23053]        # 0x1400323d8
   14000f385:	mov    rcx,rbp
   14000f388:	call   0x14000f41c
   14000f38d:	jmp    0x14000f39f
   14000f38f:	call   0x140023548
   14000f394:	mov    rcx,rax
   14000f397:	mov    dl,BYTE PTR [r14]
   14000f39a:	call   0x140023694
   14000f39f:	mov    BYTE PTR [rbp+0x140],0x1
   14000f3a6:	jmp    0x14000f3e8
   14000f3a8:	lea    r15,[rip+0x3bcc9]        # 0x14004b078
   14000f3af:	mov    rcx,QWORD PTR [rip+0x3bcc2]        # 0x14004b078
   14000f3b6:	cmp    rcx,r15
   14000f3b9:	je     0x14000f3dd
   14000f3bb:	test   BYTE PTR [rcx+0x1c],0x1
   14000f3bf:	je     0x14000f3dd
   14000f3c1:	mov    edx,0xa
   14000f3c6:	lea    r9,[rip+0x27893]        # 0x140036c60
   14000f3cd:	lea    r8,[rip+0x24ffc]        # 0x1400343d0
   14000f3d4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f3d8:	call   0x1400038e0
   14000f3dd:	mov    ecx,0x80070057
   14000f3e2:	call   0x140029d64
   14000f3e7:	int3   
   14000f3e8:	mov    rcx,QWORD PTR [rsp+0x80]
   14000f3f0:	xor    rcx,rsp
   14000f3f3:	call   0x14002dd00
   14000f3f8:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000f400:	add    rsp,0x90
   14000f407:	pop    r15
   14000f409:	pop    r14
   14000f40b:	pop    r13
   14000f40d:	pop    r12
   14000f40f:	pop    rdi
   14000f410:	pop    rsi
   14000f411:	pop    rbp
   14000f412:	ret    
   14000f413:	int3   
   14000f414:	int3   
   14000f415:	int3   
   14000f416:	int3   
   14000f417:	int3   
   14000f418:	int3   
   14000f419:	int3   
   14000f41a:	int3   
   14000f41b:	int3   
   14000f41c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f421:	mov    QWORD PTR [rsp+0x10],rsi
   14000f426:	push   rdi
   14000f427:	sub    rsp,0x20
   14000f42b:	mov    rsi,rcx
   14000f42e:	xor    ebx,ebx
   14000f430:	add    rcx,0xf0
   14000f437:	call   0x140029ab0
   14000f43c:	test   eax,eax
   14000f43e:	js     0x14000f49c
   14000f440:	xor    eax,eax
   14000f442:	mov    rbx,rcx
   14000f445:	test   eax,eax
   14000f447:	js     0x14000f49c
   14000f449:	mov    rsi,QWORD PTR [rsi+0x50]
   14000f44d:	test   rsi,rsi
   14000f450:	je     0x14000f49c
   14000f452:	mov    rax,QWORD PTR [rsi]
   14000f455:	mov    rdi,QWORD PTR [rax+0x20]
   14000f459:	mov    rcx,rdi
   14000f45c:	call   QWORD PTR [rip+0x23246]        # 0x1400326a8
   14000f462:	mov    rcx,rsi
   14000f465:	call   rdi
   14000f467:	test   eax,eax
   14000f469:	jns    0x14000f49c
   14000f46b:	mov    rcx,QWORD PTR [rip+0x3bc06]        # 0x14004b078
   14000f472:	lea    rdx,[rip+0x3bbff]        # 0x14004b078
   14000f479:	cmp    rcx,rdx
   14000f47c:	je     0x14000f49c
   14000f47e:	test   BYTE PTR [rcx+0x1c],0x2
   14000f482:	je     0x14000f49c
   14000f484:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f488:	lea    r8,[rip+0x27c89]        # 0x140037118
   14000f48f:	mov    edx,0xd
   14000f494:	mov    r9d,eax
   14000f497:	call   0x140001f70
   14000f49c:	test   rbx,rbx
   14000f49f:	je     0x14000f4ba
   14000f4a1:	or     eax,0xffffffff
   14000f4a4:	lock xadd DWORD PTR [rbx+0x8],eax
   14000f4a9:	dec    eax
   14000f4ab:	cmp    eax,0x80000000
   14000f4b0:	jne    0x14000f4ba
   14000f4b2:	mov    rcx,rbx
   14000f4b5:	call   0x140029c90
   14000f4ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4bf:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f4c4:	add    rsp,0x20
   14000f4c8:	pop    rdi
   14000f4c9:	ret    
   14000f4ca:	int3   
   14000f4cb:	int3   
   14000f4cc:	int3   
   14000f4cd:	int3   
   14000f4ce:	int3   
   14000f4cf:	int3   
   14000f4d0:	mov    rax,rsp
   14000f4d3:	mov    QWORD PTR [rax+0x18],r8
   14000f4d7:	push   rbp
   14000f4d8:	push   rsi
   14000f4d9:	push   rdi
   14000f4da:	push   r12
   14000f4dc:	push   r13
   14000f4de:	push   r14
   14000f4e0:	push   r15
   14000f4e2:	lea    rbp,[rax-0x5f]
   14000f4e6:	sub    rsp,0xb0
   14000f4ed:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000f4f5:	mov    QWORD PTR [rax+0x10],rbx
   14000f4f9:	mov    r15d,r9d
   14000f4fc:	movsxd r12,edx
   14000f4ff:	mov    r14,rcx
   14000f502:	add    rcx,0xf0
   14000f509:	mov    QWORD PTR [rbp-0x21],rcx
   14000f50d:	call   0x140029ab0
   14000f512:	xor    edi,edi
   14000f514:	test   eax,eax
   14000f516:	jns    0x14000f520
   14000f518:	mov    ecx,eax
   14000f51a:	call   0x140029d64
   14000f51f:	nop
   14000f520:	mov    eax,DWORD PTR [r14+0x138]
   14000f527:	mov    r13d,0x1
   14000f52d:	lea    rsi,[rip+0x3bb44]        # 0x14004b078
   14000f534:	test   eax,eax
   14000f536:	je     0x14000f5cc
   14000f53c:	mov    ecx,eax
   14000f53e:	mov    rax,r15
   14000f541:	mul    rcx
   14000f544:	mov    QWORD PTR [rbp+0x7],rdx
   14000f548:	mov    rbx,rdi
   14000f54b:	test   rdx,rdx
   14000f54e:	cmove  rbx,rax
   14000f552:	movabs rax,0x624dd2f1a9fbe77
   14000f55c:	mul    rbx
   14000f55f:	sub    rbx,rdx
   14000f562:	shr    rbx,1
   14000f565:	add    rbx,rdx
   14000f568:	shr    rbx,0x9
   14000f56c:	cmp    rbx,r13
   14000f56f:	cmovb  rbx,r13
   14000f573:	mov    rcx,QWORD PTR [rip+0x3bafe]        # 0x14004b078
   14000f57a:	cmp    rcx,rsi
   14000f57d:	je     0x14000f59d
   14000f57f:	test   BYTE PTR [rcx+0x1c],0x2
   14000f583:	je     0x14000f59d
   14000f585:	movzx  eax,WORD PTR [r14+0x88]
   14000f58d:	mov    DWORD PTR [rsp+0x20],eax
   14000f591:	mov    r9,rbx
   14000f594:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f598:	call   0x14000e318
   14000f59d:	mov    ecx,0xffffffff
   14000f5a2:	cmp    rbx,rcx
   14000f5a5:	jae    0x14000f5b1
   14000f5a7:	mov    ecx,ebx
   14000f5a9:	call   QWORD PTR [rip+0x22bb1]        # 0x140032160
   14000f5af:	jmp    0x14000f5cc
   14000f5b1:	xor    edx,edx
   14000f5b3:	mov    rax,rbx
   14000f5b6:	div    rcx
   14000f5b9:	mov    rbx,rax
   14000f5bc:	mov    ecx,0xfffffffe
   14000f5c1:	call   QWORD PTR [rip+0x22b99]        # 0x140032160
   14000f5c7:	sub    rbx,r13
   14000f5ca:	jne    0x14000f5bc
   14000f5cc:	cmp    BYTE PTR [r14+0x13f],dil
   14000f5d3:	je     0x14000f632
   14000f5d5:	mov    rcx,QWORD PTR [rip+0x3ba9c]        # 0x14004b078
   14000f5dc:	cmp    rcx,rsi
   14000f5df:	je     0x14000fb09
   14000f5e5:	test   BYTE PTR [rcx+0x1c],0x4
   14000f5e9:	je     0x14000fb09
   14000f5ef:	mov    r10,QWORD PTR [r14+0x70]
   14000f5f3:	mov    r11,QWORD PTR [r14+0x80]
   14000f5fa:	movzx  eax,WORD PTR [r14+0x78]
   14000f5ff:	movzx  r8d,WORD PTR [r14+0x88]
   14000f607:	movzx  r9d,BYTE PTR [r14+0x68]
   14000f60c:	mov    edx,0xf
   14000f611:	mov    DWORD PTR [rsp+0x38],eax
   14000f615:	mov    QWORD PTR [rsp+0x30],r10
   14000f61a:	mov    DWORD PTR [rsp+0x28],r8d
   14000f61f:	mov    QWORD PTR [rsp+0x20],r11
   14000f624:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f628:	call   0x14000e410
   14000f62d:	jmp    0x14000fb09
   14000f632:	mov    rcx,QWORD PTR [rip+0x3ba3f]        # 0x14004b078
   14000f639:	cmp    rcx,rsi
   14000f63c:	je     0x14000f6a2
   14000f63e:	test   BYTE PTR [rcx+0x1c],0x10
   14000f642:	je     0x14000f6a2
   14000f644:	mov    r11,QWORD PTR [r14+0x70]
   14000f648:	mov    rbx,QWORD PTR [r14+0x80]
   14000f64f:	mov    eax,DWORD PTR [r14+r12*4+0xe0]
   14000f657:	movzx  r8d,WORD PTR [r14+0x78]
   14000f65c:	movzx  r10d,WORD PTR [r14+0x88]
   14000f664:	movzx  r9d,BYTE PTR [r14+0x68]
   14000f669:	mov    QWORD PTR [rsp+0x58],rax
   14000f66e:	mov    DWORD PTR [rsp+0x50],r15d
   14000f673:	mov    rax,QWORD PTR [r14+r12*8+0x90]
   14000f67b:	mov    QWORD PTR [rsp+0x48],rax
   14000f680:	mov    DWORD PTR [rsp+0x40],r12d
   14000f685:	mov    DWORD PTR [rsp+0x38],r8d
   14000f68a:	mov    QWORD PTR [rsp+0x30],r11
   14000f68f:	mov    DWORD PTR [rsp+0x28],r10d
   14000f694:	mov    QWORD PTR [rsp+0x20],rbx
   14000f699:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f69d:	call   0x14000e540
   14000f6a2:	mov    DWORD PTR [rbp-0x29],edi
   14000f6a5:	call   QWORD PTR [rip+0x22da5]        # 0x140032450
   14000f6ab:	mov    rbx,QWORD PTR [rax+0xa0]
   14000f6b2:	mov    rcx,rbx
   14000f6b5:	call   QWORD PTR [rip+0x22fed]        # 0x1400326a8
   14000f6bb:	lea    r8,[rbp-0x29]
   14000f6bf:	xor    edx,edx
   14000f6c1:	lea    rcx,[rip+0x275e8]        # 0x140036cb0
   14000f6c8:	call   rbx
   14000f6ca:	cmp    DWORD PTR [rbp-0x29],edi
   14000f6cd:	setne  bl
   14000f6d0:	mov    BYTE PTR [rbp+0x67],bl
   14000f6d3:	mov    eax,DWORD PTR [r14+r12*4+0xe0]
   14000f6db:	test   eax,eax
   14000f6dd:	je     0x14000f7d7
   14000f6e3:	mov    ecx,eax
   14000f6e5:	sub    rcx,QWORD PTR [r14+r12*8+0x90]
   14000f6ed:	cmp    r15,rcx
   14000f6f0:	jb     0x14000f7d7
   14000f6f6:	mov    BYTE PTR [r14+0x13f],r13b
   14000f6fd:	mov    rcx,QWORD PTR [rip+0x3b974]        # 0x14004b078
   14000f704:	cmp    rcx,rsi
   14000f707:	je     0x14000f76b
   14000f709:	test   BYTE PTR [rcx+0x1c],0x4
   14000f70d:	je     0x14000f76b
   14000f70f:	mov    r9,QWORD PTR [r14+0x70]
   14000f713:	mov    r11,QWORD PTR [r14+0x80]
   14000f71a:	movzx  eax,WORD PTR [r14+0x78]
   14000f71f:	movzx  edx,WORD PTR [r14+0x88]
   14000f727:	movzx  r8d,BYTE PTR [r14+0x68]
   14000f72c:	mov    r10d,DWORD PTR [r14+r12*4+0xe0]
   14000f734:	mov    DWORD PTR [rsp+0x58],eax
   14000f738:	mov    QWORD PTR [rsp+0x50],r9
   14000f73d:	mov    DWORD PTR [rsp+0x48],edx
   14000f741:	mov    QWORD PTR [rsp+0x40],r11
   14000f746:	mov    DWORD PTR [rsp+0x38],r8d
   14000f74b:	mov    DWORD PTR [rsp+0x30],r12d
   14000f750:	mov    QWORD PTR [rsp+0x28],r10
   14000f755:	mov    DWORD PTR [rsp+0x20],r15d
   14000f75a:	mov    r9,QWORD PTR [r14+r12*8+0x90]
   14000f762:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f766:	call   0x14000e734
   14000f76b:	test   bl,bl
   14000f76d:	je     0x14000f7c7
   14000f76f:	movzx  eax,WORD PTR [r14+0x78]
   14000f774:	movzx  ecx,WORD PTR [r14+0x88]
   14000f77c:	movzx  edx,BYTE PTR [r14+0x68]
   14000f781:	mov    DWORD PTR [rsp+0x48],eax
   14000f785:	mov    rax,QWORD PTR [r14+0x70]
   14000f789:	mov    QWORD PTR [rsp+0x40],rax
   14000f78e:	mov    DWORD PTR [rsp+0x38],ecx
   14000f792:	mov    rax,QWORD PTR [r14+0x80]
   14000f799:	mov    QWORD PTR [rsp+0x30],rax
   14000f79e:	mov    DWORD PTR [rsp+0x28],edx
   14000f7a2:	mov    DWORD PTR [rsp+0x20],r12d
   14000f7a7:	mov    r9d,DWORD PTR [r14+r12*4+0xe0]
   14000f7af:	mov    r8d,r15d
   14000f7b2:	mov    rdx,QWORD PTR [r14+r12*8+0x90]
   14000f7ba:	lea    rcx,[rip+0x2751f]        # 0x140036ce0
   14000f7c1:	call   QWORD PTR [rip+0x22b69]        # 0x140032330
   14000f7c7:	mov    r15d,DWORD PTR [r14+r12*4+0xe0]
   14000f7cf:	sub    r15d,DWORD PTR [r14+r12*8+0x90]
   14000f7d7:	mov    r9,QWORD PTR [r14+0x60]
   14000f7db:	mov    QWORD PTR [rbp-0x19],r9
   14000f7df:	mov    rbx,QWORD PTR [r14+0xe8]
   14000f7e6:	add    rbx,0x120
   14000f7ed:	mov    QWORD PTR [rbp-0x9],rbx
   14000f7f1:	mov    rcx,rbx
   14000f7f4:	call   0x140029ab0
   14000f7f9:	test   eax,eax
   14000f7fb:	jns    0x14000f805
   14000f7fd:	mov    ecx,eax
   14000f7ff:	call   0x140029d64
   14000f804:	nop
   14000f805:	mov    rax,QWORD PTR [r9]
   14000f808:	mov    esi,edi
   14000f80a:	cmp    r12d,0x1
   14000f80e:	sete   sil
   14000f812:	mov    rdi,QWORD PTR [rax+0x28]
   14000f816:	mov    rcx,rdi
   14000f819:	call   QWORD PTR [rip+0x22e89]        # 0x1400326a8
   14000f81f:	mov    r9d,r15d
   14000f822:	mov    r8,QWORD PTR [rbp+0x77]
   14000f826:	mov    edx,esi
   14000f828:	mov    rcx,QWORD PTR [rbp-0x19]
   14000f82c:	call   rdi
   14000f82e:	xor    esi,esi
   14000f830:	test   eax,eax
   14000f832:	jns    0x14000f83c
   14000f834:	mov    ecx,eax
   14000f836:	call   0x140029d64
   14000f83b:	nop
   14000f83c:	or     eax,0xffffffff
   14000f83f:	lock xadd DWORD PTR [rbx+0x8],eax
   14000f844:	dec    eax
   14000f846:	cmp    eax,0x80000000
   14000f84b:	jne    0x14000f856
   14000f84d:	mov    rcx,QWORD PTR [rbp-0x9]
   14000f851:	call   0x140029c90
   14000f856:	mov    eax,r15d
   14000f859:	add    QWORD PTR [r14+r12*8+0x90],rax
   14000f861:	cmp    BYTE PTR [r14+0x13f],sil
   14000f868:	je     0x14000f90b
   14000f86e:	mov    rcx,QWORD PTR [rip+0x3b803]        # 0x14004b078
   14000f875:	lea    rax,[rip+0x3b7fc]        # 0x14004b078
   14000f87c:	cmp    rcx,rax
   14000f87f:	je     0x14000f8c5
   14000f881:	test   BYTE PTR [rcx+0x1c],0x4
   14000f885:	je     0x14000f8c5
   14000f887:	mov    r10,QWORD PTR [r14+0x70]
   14000f88b:	mov    r11,QWORD PTR [r14+0x80]
   14000f892:	movzx  eax,WORD PTR [r14+0x78]
   14000f897:	movzx  r8d,WORD PTR [r14+0x88]
   14000f89f:	movzx  r9d,BYTE PTR [r14+0x68]
   14000f8a4:	mov    edx,0x12
   14000f8a9:	mov    DWORD PTR [rsp+0x38],eax
   14000f8ad:	mov    QWORD PTR [rsp+0x30],r10
   14000f8b2:	mov    DWORD PTR [rsp+0x28],r8d
   14000f8b7:	mov    QWORD PTR [rsp+0x20],r11
   14000f8bc:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f8c0:	call   0x14000e410
   14000f8c5:	cmp    BYTE PTR [rbp+0x67],sil
   14000f8c9:	je     0x14000f8fe
   14000f8cb:	movzx  eax,WORD PTR [r14+0x78]
   14000f8d0:	movzx  r9d,WORD PTR [r14+0x88]
   14000f8d8:	movzx  edx,BYTE PTR [r14+0x68]
   14000f8dd:	mov    DWORD PTR [rsp+0x28],eax
   14000f8e1:	mov    rax,QWORD PTR [r14+0x70]
   14000f8e5:	mov    QWORD PTR [rsp+0x20],rax
   14000f8ea:	mov    r8,QWORD PTR [r14+0x80]
   14000f8f1:	lea    rcx,[rip+0x274b8]        # 0x140036db0
   14000f8f8:	call   QWORD PTR [rip+0x22a32]        # 0x140032330
   14000f8fe:	mov    rcx,r14
   14000f901:	call   0x14000f41c
   14000f906:	jmp    0x14000fb09
   14000f90b:	cmp    BYTE PTR [r14+0x140],sil
   14000f912:	jne    0x14000fb09
   14000f918:	movzx  r9d,WORD PTR [r14+r12*8+0x90]
   14000f921:	sub    r9w,r15w
   14000f925:	mov    edi,0x20
   14000f92a:	cmp    r9w,di
   14000f92e:	jae    0x14000f969
   14000f930:	movzx  eax,r9w
   14000f934:	mov    edx,edi
   14000f936:	sub    edx,eax
   14000f938:	movzx  eax,r15w
   14000f93c:	mov    ecx,edi
   14000f93e:	sub    cx,r9w
   14000f942:	cmp    edx,eax
   14000f944:	cmovl  r15w,cx
   14000f949:	movzx  r8d,r15w
   14000f94d:	lea    rax,[r12+0x5]
   14000f952:	shl    rax,0x5
   14000f956:	movzx  ecx,r9w
   14000f95a:	add    rax,r14
   14000f95d:	add    rcx,rax
   14000f960:	mov    rdx,QWORD PTR [rbp+0x77]
   14000f964:	call   0x14002e2f2
   14000f969:	cmp    QWORD PTR [r14+0x90],rdi
   14000f970:	jae    0x14000f97f
   14000f972:	cmp    QWORD PTR [r14+0x98],rdi
   14000f979:	jb     0x14000fb09
   14000f97f:	mov    rdx,QWORD PTR [r14+0x60]
   14000f983:	mov    rcx,QWORD PTR [r14+0xe8]
   14000f98a:	call   0x140011a5c
   14000f98f:	test   al,al
   14000f991:	jne    0x14000f9eb
   14000f993:	lea    r15,[rip+0x274ce]        # 0x140036e68
   14000f99a:	lea    rsi,[rip+0x274df]        # 0x140036e80
   14000f9a1:	mov    bl,BYTE PTR [r14+0x68]
   14000f9a5:	call   0x140023548
   14000f9aa:	mov    dl,bl
   14000f9ac:	mov    rcx,rax
   14000f9af:	call   0x1400235c0
   14000f9b4:	mov    edx,0x1
   14000f9b9:	mov    ecx,0xbe
   14000f9be:	call   QWORD PTR [rip+0x22aa4]        # 0x140032468
   14000f9c4:	xor    edx,edx
   14000f9c6:	mov    ecx,0x107
   14000f9cb:	call   QWORD PTR [rip+0x22a07]        # 0x1400323d8
   14000f9d1:	mov    edx,0x64
   14000f9d6:	mov    ecx,0x105
   14000f9db:	call   QWORD PTR [rip+0x229f7]        # 0x1400323d8
   14000f9e1:	mov    rcx,r14
   14000f9e4:	call   0x14000f41c
   14000f9e9:	jmp    0x14000fa0a
   14000f9eb:	lea    r15,[rip+0x274de]        # 0x140036ed0
   14000f9f2:	lea    rsi,[rip+0x274e7]        # 0x140036ee0
   14000f9f9:	call   0x140023548
   14000f9fe:	mov    rcx,rax
   14000fa01:	mov    dl,BYTE PTR [r14+0x68]
   14000fa05:	call   0x140023694
   14000fa0a:	mov    BYTE PTR [r14+0x140],0x1
   14000fa12:	mov    rbx,QWORD PTR [rip+0x3b65f]        # 0x14004b078
   14000fa19:	lea    rax,[rip+0x3b658]        # 0x14004b078
   14000fa20:	cmp    rbx,rax
   14000fa23:	je     0x14000fac8
   14000fa29:	test   BYTE PTR [rbx+0x1c],0x10
   14000fa2d:	je     0x14000fac8
   14000fa33:	movzx  ecx,WORD PTR [r14+0x98]
   14000fa3b:	cmp    di,cx
   14000fa3e:	jae    0x14000fa43
   14000fa40:	movzx  ecx,di
   14000fa43:	movzx  eax,WORD PTR [r14+0x90]
   14000fa4b:	cmp    di,ax
   14000fa4e:	jb     0x14000fa53
   14000fa50:	movzx  edi,ax
   14000fa53:	lea    rax,[r14+0xc0]
   14000fa5a:	mov    QWORD PTR [rbp-0x19],rax
   14000fa5e:	mov    WORD PTR [rbp-0x11],cx
   14000fa62:	lea    rax,[r14+0xa0]
   14000fa69:	mov    QWORD PTR [rbp+0xf],rax
   14000fa6d:	mov    WORD PTR [rbp+0x17],di
   14000fa71:	mov    r10,QWORD PTR [r14+0x70]
   14000fa75:	mov    r11,QWORD PTR [r14+0x80]
   14000fa7c:	movzx  eax,WORD PTR [r14+0x78]
   14000fa81:	movzx  edx,WORD PTR [r14+0x88]
   14000fa89:	movzx  r8d,BYTE PTR [r14+0x68]
   14000fa8e:	lea    rcx,[rbp-0x19]
   14000fa92:	mov    QWORD PTR [rsp+0x58],rcx
   14000fa97:	lea    rcx,[rbp+0xf]
   14000fa9b:	mov    QWORD PTR [rsp+0x50],rcx
   14000faa0:	mov    DWORD PTR [rsp+0x48],eax
   14000faa4:	mov    QWORD PTR [rsp+0x40],r10
   14000faa9:	mov    DWORD PTR [rsp+0x38],edx
   14000faad:	mov    QWORD PTR [rsp+0x30],r11
   14000fab2:	mov    DWORD PTR [rsp+0x28],r8d
   14000fab7:	mov    DWORD PTR [rsp+0x20],r12d
   14000fabc:	mov    r9,r15
   14000fabf:	mov    rcx,QWORD PTR [rbx+0x10]
   14000fac3:	call   0x14000e8c8
   14000fac8:	cmp    BYTE PTR [rbp+0x67],0x0
   14000facc:	je     0x14000fb09
   14000face:	movzx  eax,WORD PTR [r14+0x78]
   14000fad3:	movzx  ecx,WORD PTR [r14+0x88]
   14000fadb:	movzx  r8d,BYTE PTR [r14+0x68]
   14000fae0:	mov    DWORD PTR [rsp+0x30],eax
   14000fae4:	mov    rax,QWORD PTR [r14+0x70]
   14000fae8:	mov    QWORD PTR [rsp+0x28],rax
   14000faed:	mov    DWORD PTR [rsp+0x20],ecx
   14000faf1:	mov    r9,QWORD PTR [r14+0x80]
   14000faf8:	mov    rdx,rsi
   14000fafb:	lea    rcx,[rip+0x2743e]        # 0x140036f40
   14000fb02:	call   QWORD PTR [rip+0x22828]        # 0x140032330
   14000fb08:	nop
   14000fb09:	mov    rax,QWORD PTR [rbp-0x21]
   14000fb0d:	or     ecx,0xffffffff
   14000fb10:	lock xadd DWORD PTR [rax+0x8],ecx
   14000fb15:	dec    ecx
   14000fb17:	cmp    ecx,0x80000000
   14000fb1d:	jne    0x14000fb28
   14000fb1f:	mov    rcx,QWORD PTR [rbp-0x21]
   14000fb23:	call   0x140029c90
   14000fb28:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000fb30:	add    rsp,0xb0
   14000fb37:	pop    r15
   14000fb39:	pop    r14
   14000fb3b:	pop    r13
   14000fb3d:	pop    r12
   14000fb3f:	pop    rdi
   14000fb40:	pop    rsi
   14000fb41:	pop    rbp
   14000fb42:	ret    
   14000fb43:	int3   
   14000fb44:	int3   
   14000fb45:	int3   
   14000fb46:	int3   
   14000fb47:	int3   
   14000fb48:	int3   
   14000fb49:	int3   
   14000fb4a:	int3   
   14000fb4b:	int3   
   14000fb4c:	int3   
   14000fb4d:	int3   
   14000fb4e:	int3   
   14000fb4f:	int3   
   14000fb50:	rex push rdi
   14000fb52:	sub    rsp,0x30
   14000fb56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fb5f:	mov    QWORD PTR [rsp+0x48],rbx
   14000fb64:	mov    r10d,edx
   14000fb67:	mov    r9,rcx
   14000fb6a:	lea    rbx,[rcx+0xf0]
   14000fb71:	mov    QWORD PTR [rsp+0x40],rbx
   14000fb76:	mov    rcx,rbx
   14000fb79:	call   0x140029ab0
   14000fb7e:	xor    edi,edi
   14000fb80:	test   eax,eax
   14000fb82:	jns    0x14000fb8c
   14000fb84:	mov    ecx,eax
   14000fb86:	call   0x140029d64
   14000fb8b:	nop
   14000fb8c:	cmp    BYTE PTR [r9+0x13c],dil
   14000fb93:	je     0x14000fbb2
   14000fb95:	cmp    r10d,0x1
   14000fb99:	sete   dil
   14000fb9d:	mov    r8d,edi
   14000fba0:	mov    rdx,QWORD PTR [r9+0x60]
   14000fba4:	mov    rcx,QWORD PTR [r9+0xe8]
   14000fbab:	call   0x140011b00
   14000fbb0:	mov    edi,eax
   14000fbb2:	or     eax,0xffffffff
   14000fbb5:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fbba:	dec    eax
   14000fbbc:	cmp    eax,0x80000000
   14000fbc1:	jne    0x14000fbcd
   14000fbc3:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fbc8:	call   0x140029c90
   14000fbcd:	mov    eax,edi
   14000fbcf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fbd4:	add    rsp,0x30
   14000fbd8:	pop    rdi
   14000fbd9:	ret    
   14000fbda:	int3   
   14000fbdb:	int3   
   14000fbdc:	int3   
   14000fbdd:	int3   
   14000fbde:	int3   
   14000fbdf:	int3   
   14000fbe0:	rex push rbx
   14000fbe2:	sub    rsp,0x30
   14000fbe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fbef:	mov    r9d,r8d
   14000fbf2:	mov    r11d,edx
   14000fbf5:	mov    r10,rcx
   14000fbf8:	lea    rbx,[rcx+0xf0]
   14000fbff:	mov    QWORD PTR [rsp+0x40],rbx
   14000fc04:	mov    rcx,rbx
   14000fc07:	call   0x140029ab0
   14000fc0c:	xor    r8d,r8d
   14000fc0f:	test   eax,eax
   14000fc11:	jns    0x14000fc1b
   14000fc13:	mov    ecx,eax
   14000fc15:	call   0x140029d64
   14000fc1a:	nop
   14000fc1b:	test   r9d,r9d
   14000fc1e:	je     0x14000fc39
   14000fc20:	cmp    r11d,0x1
   14000fc24:	sete   r8b
   14000fc28:	mov    rdx,QWORD PTR [r10+0x60]
   14000fc2c:	mov    rcx,QWORD PTR [r10+0xe8]
   14000fc33:	call   0x140011c18
   14000fc38:	nop
   14000fc39:	or     eax,0xffffffff
   14000fc3c:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fc41:	dec    eax
   14000fc43:	cmp    eax,0x80000000
   14000fc48:	jne    0x14000fc54
   14000fc4a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fc4f:	call   0x140029c90
   14000fc54:	add    rsp,0x30
   14000fc58:	pop    rbx
   14000fc59:	ret    
   14000fc5a:	int3   
   14000fc5b:	int3   
   14000fc5c:	int3   
   14000fc5d:	int3   
   14000fc5e:	int3   
   14000fc5f:	int3   
   14000fc60:	mov    rax,rsp
   14000fc63:	push   rdi
   14000fc64:	sub    rsp,0x30
   14000fc68:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000fc70:	mov    QWORD PTR [rax+0x18],rbx
   14000fc74:	mov    QWORD PTR [rax+0x20],rsi
   14000fc78:	mov    rbx,rcx
   14000fc7b:	add    rcx,0xf0
   14000fc82:	mov    QWORD PTR [rax+0x8],rcx
   14000fc86:	call   0x140029ab0
   14000fc8b:	test   eax,eax
   14000fc8d:	jns    0x14000fc97
   14000fc8f:	mov    ecx,eax
   14000fc91:	call   0x140029d64
   14000fc96:	nop
   14000fc97:	mov    rdx,QWORD PTR [rbx+0x60]
   14000fc9b:	test   rdx,rdx
   14000fc9e:	je     0x14000fd1e
   14000fca0:	cmp    BYTE PTR [rbx+0x68],0x6
   14000fca4:	jne    0x14000fcb2
   14000fca6:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000fcad:	call   0x140011d30
   14000fcb2:	mov    rsi,QWORD PTR [rbx+0x60]
   14000fcb6:	mov    rbx,QWORD PTR [rbx+0xe8]
   14000fcbd:	add    rbx,0x120
   14000fcc4:	mov    QWORD PTR [rsp+0x48],rbx
   14000fcc9:	mov    rcx,rbx
   14000fccc:	call   0x140029ab0
   14000fcd1:	test   eax,eax
   14000fcd3:	jns    0x14000fcdd
   14000fcd5:	mov    ecx,eax
   14000fcd7:	call   0x140029d64
   14000fcdc:	nop
   14000fcdd:	mov    rax,QWORD PTR [rsi]
   14000fce0:	mov    rdi,QWORD PTR [rax+0x38]
   14000fce4:	mov    rcx,rdi
   14000fce7:	call   QWORD PTR [rip+0x229bb]        # 0x1400326a8
   14000fced:	mov    rcx,rsi
   14000fcf0:	call   rdi
   14000fcf2:	test   eax,eax
   14000fcf4:	jns    0x14000fcfe
   14000fcf6:	mov    ecx,eax
   14000fcf8:	call   0x140029d64
   14000fcfd:	nop
   14000fcfe:	or     eax,0xffffffff
   14000fd01:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fd06:	dec    eax
   14000fd08:	cmp    eax,0x80000000
   14000fd0d:	jne    0x14000fd19
   14000fd0f:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fd14:	call   0x140029c90
   14000fd19:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fd1e:	or     eax,0xffffffff
   14000fd21:	lock xadd DWORD PTR [rcx+0x8],eax
   14000fd26:	dec    eax
   14000fd28:	cmp    eax,0x80000000
   14000fd2d:	jne    0x14000fd39
   14000fd2f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fd34:	call   0x140029c90
   14000fd39:	mov    rbx,QWORD PTR [rsp+0x50]
   14000fd3e:	mov    rsi,QWORD PTR [rsp+0x58]
   14000fd43:	add    rsp,0x30
   14000fd47:	pop    rdi
   14000fd48:	ret    
   14000fd49:	int3   
   14000fd4a:	int3   
   14000fd4b:	int3   
   14000fd4c:	int3   
   14000fd4d:	int3   
   14000fd4e:	int3   
   14000fd4f:	int3   
   14000fd50:	mov    rax,rsp
   14000fd53:	mov    QWORD PTR [rax+0x8],rbx
   14000fd57:	mov    QWORD PTR [rax+0x10],rbp
   14000fd5b:	mov    QWORD PTR [rax+0x18],rsi
   14000fd5f:	mov    QWORD PTR [rax+0x20],rdi
   14000fd63:	push   r14
   14000fd65:	sub    rsp,0x30
   14000fd69:	mov    rax,QWORD PTR [rcx]
   14000fd6c:	mov    r14,rcx
   14000fd6f:	mov    rbx,r9
   14000fd72:	mov    rsi,r8
   14000fd75:	mov    rbp,rdx
   14000fd78:	mov    rdi,QWORD PTR [rax+0x40]
   14000fd7c:	mov    rcx,rdi
   14000fd7f:	call   QWORD PTR [rip+0x22923]        # 0x1400326a8
   14000fd85:	mov    QWORD PTR [rsp+0x28],rbx
   14000fd8a:	xor    r9d,r9d
   14000fd8d:	and    DWORD PTR [rsp+0x20],0x0
   14000fd92:	mov    r8,rsi
   14000fd95:	mov    rdx,rbp
   14000fd98:	mov    rcx,r14
   14000fd9b:	call   rdi
   14000fd9d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fda2:	mov    rbp,QWORD PTR [rsp+0x48]
   14000fda7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000fdac:	mov    rdi,QWORD PTR [rsp+0x58]
   14000fdb1:	add    rsp,0x30
   14000fdb5:	pop    r14
   14000fdb7:	ret    
   14000fdb8:	int3   
   14000fdb9:	int3   
   14000fdba:	int3   
   14000fdbb:	int3   
   14000fdbc:	int3   
   14000fdbd:	int3   
   14000fdbe:	int3   
   14000fdbf:	int3   
   14000fdc0:	mov    rax,rsp
   14000fdc3:	mov    QWORD PTR [rax+0x20],r9
   14000fdc7:	mov    QWORD PTR [rax+0x18],r8
   14000fdcb:	mov    QWORD PTR [rax+0x10],rdx
   14000fdcf:	mov    QWORD PTR [rax+0x8],rcx
   14000fdd3:	push   rbx
   14000fdd4:	push   rsi
   14000fdd5:	push   rdi
   14000fdd6:	push   r12
   14000fdd8:	push   r13
   14000fdda:	push   r14
   14000fddc:	push   r15
   14000fdde:	sub    rsp,0x60
   14000fde2:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000fdea:	mov    r15,r8
   14000fded:	mov    r14,rdx
   14000fdf0:	mov    rdi,rcx
   14000fdf3:	xor    esi,esi
   14000fdf5:	mov    QWORD PTR [rax-0x70],rsi
   14000fdf9:	add    rcx,0xe8
   14000fe00:	call   0x140029ab0
   14000fe05:	mov    ebx,eax
   14000fe07:	test   eax,eax
   14000fe09:	js     0x14000fe12
   14000fe0b:	mov    QWORD PTR [rsp+0x28],rcx
   14000fe10:	mov    ebx,esi
   14000fe12:	test   ebx,ebx
   14000fe14:	jns    0x14000fe48
   14000fe16:	mov    rcx,QWORD PTR [rsp+0x28]
   14000fe1b:	test   rcx,rcx
   14000fe1e:	je     0x14000fe41
   14000fe20:	or     r14d,0xffffffff
   14000fe24:	mov    edx,r14d
   14000fe27:	lock xadd DWORD PTR [rcx+0x8],edx
   14000fe2c:	add    edx,r14d
   14000fe2f:	cmp    edx,0x80000000
   14000fe35:	jne    0x14000fe41
   14000fe37:	mov    rcx,QWORD PTR [rsp+0x28]
   14000fe3c:	call   0x140029c90
   14000fe41:	mov    eax,ebx
   14000fe43:	jmp    0x140010237
   14000fe48:	call   0x140025df8
   14000fe4d:	test   al,al
   14000fe4f:	jne    0x14000feda
   14000fe55:	mov    DWORD PTR [rsp+0x20],esi
   14000fe59:	call   QWORD PTR [rip+0x225f1]        # 0x140032450
   14000fe5f:	mov    rbx,QWORD PTR [rax+0xa0]
   14000fe66:	mov    rcx,rbx
   14000fe69:	call   QWORD PTR [rip+0x22839]        # 0x1400326a8
   14000fe6f:	lea    r8,[rsp+0x20]
   14000fe74:	xor    edx,edx
   14000fe76:	lea    rcx,[rip+0x270fb]        # 0x140036f78
   14000fe7d:	call   rbx
   14000fe7f:	cmp    DWORD PTR [rsp+0x20],esi
   14000fe83:	je     0x14000feda
   14000fe85:	lea    r13,[rip+0x3b1ec]        # 0x14004b078
   14000fe8c:	mov    rcx,QWORD PTR [rip+0x3b1e5]        # 0x14004b078
   14000fe93:	cmp    rcx,r13
   14000fe96:	je     0x14000feb3
   14000fe98:	test   BYTE PTR [rcx+0x1c],0x2
   14000fe9c:	je     0x14000feb3
   14000fe9e:	mov    edx,0x14
   14000fea3:	lea    r8,[rip+0x2726e]        # 0x140037118
   14000feaa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000feae:	call   0x140001f08
   14000feb3:	mov    rax,QWORD PTR [rdi]
   14000feb6:	mov    rbx,QWORD PTR [rax+0x30]
   14000feba:	mov    rcx,rbx
   14000febd:	call   QWORD PTR [rip+0x227e5]        # 0x1400326a8
   14000fec3:	mov    r8,QWORD PTR [rsp+0xc8]
   14000fecb:	mov    rdx,r15
   14000fece:	mov    rcx,rdi
   14000fed1:	call   rbx
   14000fed3:	mov    ebx,eax
   14000fed5:	jmp    0x14000fe16
   14000feda:	mov    r15d,0x1
   14000fee0:	test   BYTE PTR [rip+0x400d9],r15b        # 0x14004ffc0
   14000fee7:	je     0x14000fefc
   14000fee9:	lea    r8,[rip+0x24320]        # 0x140034210
   14000fef0:	lea    rdx,[rip+0x24401]        # 0x1400342f8
   14000fef7:	call   0x140003818
   14000fefc:	lea    r13,[rip+0x3b175]        # 0x14004b078
   14000ff03:	mov    rcx,QWORD PTR [rip+0x3b16e]        # 0x14004b078
   14000ff0a:	cmp    rcx,r13
   14000ff0d:	je     0x14000ff2d
   14000ff0f:	test   BYTE PTR [rcx+0x1c],0x4
   14000ff13:	je     0x14000ff2d
   14000ff15:	mov    edx,0x15
   14000ff1a:	mov    r9,r14
   14000ff1d:	lea    r8,[rip+0x271f4]        # 0x140037118
   14000ff24:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ff28:	call   0x14000756c
   14000ff2d:	mov    rbx,rsi
   14000ff30:	mov    QWORD PTR [rsp+0x30],rbx
   14000ff35:	mov    r10,QWORD PTR [rdi+0xe0]
   14000ff3c:	mov    r9,rsi
   14000ff3f:	lea    rcx,[r10+0x120]
   14000ff46:	call   0x140029ab0
   14000ff4b:	mov    r12d,eax
   14000ff4e:	test   eax,eax
   14000ff50:	js     0x14000ff58
   14000ff52:	mov    r9,rcx
   14000ff55:	mov    r12d,esi
   14000ff58:	test   r12d,r12d
   14000ff5b:	jns    0x14000ff88
   14000ff5d:	or     r14d,0xffffffff
   14000ff61:	test   r9,r9
   14000ff64:	je     0x14000ffd7
   14000ff66:	mov    eax,r14d
   14000ff69:	lock xadd DWORD PTR [r9+0x8],eax
   14000ff6f:	add    eax,r14d
   14000ff72:	cmp    eax,0x80000000
   14000ff77:	jne    0x14000ff81
   14000ff79:	mov    rcx,r9
   14000ff7c:	call   0x140029c90
   14000ff81:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ff86:	jmp    0x14000ffd7
   14000ff88:	mov    rbx,QWORD PTR [r10+0xa8]
   14000ff8f:	test   rbx,rbx
   14000ff92:	je     0x14000ffa6
   14000ff94:	mov    eax,DWORD PTR [rbx+0x8]
   14000ff97:	test   eax,eax
   14000ff99:	jne    0x14000ffa1
   14000ff9b:	mov    DWORD PTR [rbx+0x8],r15d
   14000ff9f:	jmp    0x14000ffa6
   14000ffa1:	lock add DWORD PTR [rbx+0x8],r15d
   14000ffa6:	mov    QWORD PTR [rsp+0x30],rbx
   14000ffab:	or     r14d,0xffffffff
   14000ffaf:	test   r9,r9
   14000ffb2:	je     0x14000ffd4
   14000ffb4:	mov    eax,r14d
   14000ffb7:	lock xadd DWORD PTR [r9+0x8],eax
   14000ffbd:	add    eax,r14d
   14000ffc0:	cmp    eax,0x80000000
   14000ffc5:	jne    0x14000ffcf
   14000ffc7:	mov    rcx,r9
   14000ffca:	call   0x140029c90
   14000ffcf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ffd4:	mov    r12d,esi
   14000ffd7:	test   r12d,r12d
   14000ffda:	jns    0x140010049
   14000ffdc:	test   rbx,rbx
   14000ffdf:	je     0x14001001a
   14000ffe1:	mov    eax,DWORD PTR [rbx+0x8]
   14000ffe4:	cmp    eax,r15d
   14000ffe7:	jne    0x14000ffee
   14000ffe9:	mov    DWORD PTR [rbx+0x8],esi
   14000ffec:	jmp    0x14000fffd
   14000ffee:	mov    eax,r14d
   14000fff1:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fff6:	add    eax,r14d
   14000fff9:	test   eax,eax
   14000fffb:	jg     0x14001001a
   14000fffd:	mov    rbx,QWORD PTR [rsp+0x30]
   140010002:	mov    rax,QWORD PTR [rbx]
   140010005:	mov    rdi,QWORD PTR [rax]
   140010008:	mov    rcx,rdi
   14001000b:	call   QWORD PTR [rip+0x22697]        # 0x1400326a8
   140010011:	mov    edx,r15d
   140010014:	mov    rcx,rbx
   140010017:	call   rdi
   140010019:	nop
   14001001a:	mov    rcx,QWORD PTR [rsp+0x28]
   14001001f:	test   rcx,rcx
   140010022:	je     0x140010041
   140010024:	mov    edx,r14d
   140010027:	lock xadd DWORD PTR [rcx+0x8],edx
   14001002c:	add    edx,r14d
   14001002f:	cmp    edx,0x80000000
   140010035:	jne    0x140010041
   140010037:	mov    rcx,QWORD PTR [rsp+0x28]
   14001003c:	call   0x140029c90
   140010041:	mov    eax,r12d
   140010044:	jmp    0x140010237
   140010049:	mov    QWORD PTR [rsp+0x40],rsi
   14001004e:	mov    r12,QWORD PTR [rsp+0xa8]
   140010056:	mov    r8,r12
   140010059:	lea    rdx,[rsp+0x38]
   14001005e:	lea    rcx,[rbx+0x20]
   140010062:	call   0x140014aa4
   140010067:	mov    rax,QWORD PTR [rsp+0x38]
   14001006c:	cmp    QWORD PTR [rbx+0x20],rax
   140010070:	je     0x14001019f
   140010076:	mov    rdi,QWORD PTR [rax+0x20]
   14001007a:	mov    QWORD PTR [rsp+0x48],rdi
   14001007f:	test   rdi,rdi
   140010082:	je     0x14001008e
   140010084:	lock add DWORD PTR [rdi+0x8],r15d
   140010089:	mov    rbx,QWORD PTR [rsp+0x30]
   14001008e:	mov    QWORD PTR [rsp+0x40],rdi
   140010093:	cmp    DWORD PTR [rdi+0x68],0x2
   140010097:	jne    0x140010113
   140010099:	mov    al,BYTE PTR [rbx+0x93]
   14001009f:	neg    al
   1400100a1:	sbb    cx,cx
   1400100a4:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400100ac:	mov    WORD PTR [rbx],cx
   1400100af:	cmp    si,cx
   1400100b2:	jne    0x1400100e8
   1400100b4:	cmp    DWORD PTR [rdi+0x40],r15d
   1400100b8:	jne    0x1400100e8
   1400100ba:	mov    rcx,QWORD PTR [rip+0x3afb7]        # 0x14004b078
   1400100c1:	cmp    rcx,r13
   1400100c4:	je     0x1400100e4
   1400100c6:	test   BYTE PTR [rcx+0x1c],0x4
   1400100ca:	je     0x1400100e4
   1400100cc:	mov    edx,0x17
   1400100d1:	mov    r9,r12
   1400100d4:	lea    r8,[rip+0x2703d]        # 0x140037118
   1400100db:	mov    rcx,QWORD PTR [rcx+0x10]
   1400100df:	call   0x14000756c
   1400100e4:	mov    WORD PTR [rbx],r14w
   1400100e8:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400100f0:	add    rcx,0xfffffffffffffff8
   1400100f4:	mov    r9d,DWORD PTR [rsp+0xc0]
   1400100fc:	mov    r8,QWORD PTR [rsp+0xb8]
   140010104:	mov    rdx,rdi
   140010107:	call   0x140010498
   14001010c:	mov    ecx,0x111
   140010111:	jmp    0x140010154
   140010113:	mov    rax,QWORD PTR [rsp+0xc8]
   14001011b:	mov    WORD PTR [rax],si
   14001011e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140010126:	add    rcx,0xfffffffffffffff8
   14001012a:	mov    r9,QWORD PTR [rsp+0xb0]
   140010132:	mov    r8,rdi
   140010135:	mov    rdx,r12
   140010138:	call   0x1400105ec
   14001013d:	nop
   14001013e:	jmp    0x14001014f
   140010140:	xor    esi,esi
   140010142:	or     r14d,0xffffffff
   140010146:	lea    r15d,[rsi+0x1]
   14001014a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001014f:	mov    ecx,0x112
   140010154:	mov    edx,r15d
   140010157:	call   QWORD PTR [rip+0x2230b]        # 0x140032468
   14001015d:	nop
   14001015e:	mov    eax,r14d
   140010161:	lock xadd DWORD PTR [rdi+0x8],eax
   140010166:	add    eax,r14d
   140010169:	jne    0x140010183
   14001016b:	mov    rax,QWORD PTR [rdi]
   14001016e:	mov    rbx,QWORD PTR [rax]
   140010171:	mov    rcx,rbx
   140010174:	call   QWORD PTR [rip+0x2252e]        # 0x1400326a8
   14001017a:	mov    edx,r15d
   14001017d:	mov    rcx,rdi
   140010180:	call   rbx
   140010182:	nop
   140010183:	mov    rcx,QWORD PTR [rsp+0x30]
   140010188:	mov    eax,DWORD PTR [rcx+0x8]
   14001018b:	cmp    eax,r15d
   14001018e:	jne    0x140010195
   140010190:	mov    DWORD PTR [rcx+0x8],esi
   140010193:	jmp    0x1400101f1
   140010195:	mov    eax,r14d
   140010198:	lock xadd DWORD PTR [rcx+0x8],eax
   14001019d:	jmp    0x1400101ea
   14001019f:	mov    rcx,QWORD PTR [rip+0x3aed2]        # 0x14004b078
   1400101a6:	cmp    rcx,r13
   1400101a9:	je     0x1400101c9
   1400101ab:	test   BYTE PTR [rcx+0x1c],0x2
   1400101af:	je     0x1400101c9
   1400101b1:	mov    edx,0x16
   1400101b6:	mov    r9,r12
   1400101b9:	lea    r8,[rip+0x26f58]        # 0x140037118
   1400101c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400101c4:	call   0x14000756c
   1400101c9:	mov    rax,QWORD PTR [rsp+0xc8]
   1400101d1:	mov    WORD PTR [rax],r14w
   1400101d5:	mov    eax,DWORD PTR [rbx+0x8]
   1400101d8:	cmp    eax,r15d
   1400101db:	jne    0x1400101e2
   1400101dd:	mov    DWORD PTR [rbx+0x8],esi
   1400101e0:	jmp    0x1400101f1
   1400101e2:	mov    eax,r14d
   1400101e5:	lock xadd DWORD PTR [rbx+0x8],eax
   1400101ea:	add    eax,r14d
   1400101ed:	test   eax,eax
   1400101ef:	jg     0x14001020e
   1400101f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101f6:	mov    rax,QWORD PTR [rbx]
   1400101f9:	mov    rdi,QWORD PTR [rax]
   1400101fc:	mov    rcx,rdi
   1400101ff:	call   QWORD PTR [rip+0x224a3]        # 0x1400326a8
   140010205:	mov    edx,r15d
   140010208:	mov    rcx,rbx
   14001020b:	call   rdi
   14001020d:	nop
   14001020e:	mov    rax,QWORD PTR [rsp+0x28]
   140010213:	test   rax,rax
   140010216:	je     0x140010235
   140010218:	mov    ecx,r14d
   14001021b:	lock xadd DWORD PTR [rax+0x8],ecx
   140010220:	add    ecx,r14d
   140010223:	cmp    ecx,0x80000000
   140010229:	jne    0x140010235
   14001022b:	mov    rcx,QWORD PTR [rsp+0x28]
   140010230:	call   0x140029c90
   140010235:	xor    eax,eax
   140010237:	add    rsp,0x60
   14001023b:	pop    r15
   14001023d:	pop    r14
   14001023f:	pop    r13
   140010241:	pop    r12
   140010243:	pop    rdi
   140010244:	pop    rsi
   140010245:	pop    rbx
   140010246:	ret    
   140010247:	int3   
   140010248:	int3   
   140010249:	int3   
   14001024a:	int3   
   14001024b:	int3   
   14001024c:	int3   
   14001024d:	int3   
   14001024e:	int3   
   14001024f:	int3   
   140010250:	mov    rax,rsp
   140010253:	mov    QWORD PTR [rax+0x8],rcx
   140010257:	push   rdi
   140010258:	push   r12
   14001025a:	push   r13
   14001025c:	push   r14
   14001025e:	push   r15
   140010260:	sub    rsp,0x50
   140010264:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14001026c:	mov    QWORD PTR [rax+0x10],rbx
   140010270:	mov    QWORD PTR [rax+0x18],rsi
   140010274:	mov    rsi,r8
   140010277:	mov    r12,rdx
   14001027a:	mov    r15,rcx
   14001027d:	xor    r14d,r14d
   140010280:	mov    ebx,r14d
   140010283:	mov    QWORD PTR [rax+0x20],rbx
   140010287:	add    rcx,0xe8
   14001028e:	call   0x140029ab0
   140010293:	mov    edi,eax
   140010295:	test   eax,eax
   140010297:	js     0x1400102a7
   140010299:	mov    rbx,rcx
   14001029c:	mov    QWORD PTR [rsp+0x98],rcx
   1400102a4:	mov    edi,r14d
   1400102a7:	test   edi,edi
   1400102a9:	jns    0x1400102d6
   1400102ab:	test   rbx,rbx
   1400102ae:	je     0x1400102cf
   1400102b0:	or     ecx,0xffffffff
   1400102b3:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400102b8:	dec    ecx
   1400102ba:	cmp    ecx,0x80000000
   1400102c0:	jne    0x1400102cf
   1400102c2:	mov    rcx,QWORD PTR [rsp+0x98]
   1400102ca:	call   0x140029c90
   1400102cf:	mov    eax,edi
   1400102d1:	jmp    0x14001041e
   1400102d6:	mov    WORD PTR [rsi],r14w
   1400102da:	lea    r13,[rip+0x3ad97]        # 0x14004b078
   1400102e1:	mov    rcx,QWORD PTR [rip+0x3ad90]        # 0x14004b078
   1400102e8:	cmp    rcx,r13
   1400102eb:	je     0x140010308
   1400102ed:	test   BYTE PTR [rcx+0x1c],0x2
   1400102f1:	je     0x140010308
   1400102f3:	mov    edx,0x19
   1400102f8:	lea    r8,[rip+0x26e19]        # 0x140037118
   1400102ff:	mov    rcx,QWORD PTR [rcx+0x10]
   140010303:	call   0x140001f08
   140010308:	movsx  edx,WORD PTR [rsi]
   14001030b:	xor    ecx,ecx
   14001030d:	call   QWORD PTR [rip+0x22005]        # 0x140032318
   140010313:	mov    rsi,QWORD PTR [r15+0x48]
   140010317:	mov    rax,QWORD PTR [rsi]
   14001031a:	mov    rdi,QWORD PTR [rax+0x28]
   14001031e:	mov    rcx,rdi
   140010321:	call   QWORD PTR [rip+0x22381]        # 0x1400326a8
   140010327:	mov    rcx,rsi
   14001032a:	call   rdi
   14001032c:	mov    rsi,QWORD PTR [r15+0x48]
   140010330:	mov    rax,QWORD PTR [rsi]
   140010333:	mov    rdi,QWORD PTR [rax+0x20]
   140010337:	mov    rcx,rdi
   14001033a:	call   QWORD PTR [rip+0x22368]        # 0x1400326a8
   140010340:	mov    rcx,rsi
   140010343:	call   rdi
   140010345:	test   eax,eax
   140010347:	jns    0x140010374
   140010349:	mov    rcx,QWORD PTR [rip+0x3ad28]        # 0x14004b078
   140010350:	cmp    rcx,r13
   140010353:	je     0x140010374
   140010355:	test   BYTE PTR [rcx+0x1c],0x1
   140010359:	je     0x140010374
   14001035b:	mov    edx,0x1a
   140010360:	mov    r9d,eax
   140010363:	lea    r8,[rip+0x26dae]        # 0x140037118
   14001036a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001036e:	call   0x140001f70
   140010373:	nop
   140010374:	call   0x140016e54
   140010379:	test   eax,eax
   14001037b:	je     0x140010391
   14001037d:	mov    r8,QWORD PTR [r15+0x48]
   140010381:	mov    rdx,r12
   140010384:	mov    rcx,QWORD PTR [r15+0xe0]
   14001038b:	call   0x140011de4
   140010390:	nop
   140010391:	jmp    0x1400103a3
   140010393:	mov    r15,QWORD PTR [rsp+0x80]
   14001039b:	mov    rbx,QWORD PTR [rsp+0x98]
   1400103a3:	mov    al,BYTE PTR [r15+0x60]
   1400103a7:	mov    BYTE PTR [rsp+0x80],al
   1400103ae:	call   0x140023548
   1400103b3:	mov    rdi,rax
   1400103b6:	lea    rsi,[rax+0x10]
   1400103ba:	mov    QWORD PTR [rsp+0x30],rsi
   1400103bf:	mov    rcx,rsi
   1400103c2:	call   QWORD PTR [rip+0x21d40]        # 0x140032108
   1400103c8:	mov    BYTE PTR [rsp+0x38],0x1
   1400103cd:	mov    BYTE PTR [rsp+0x40],0x1
   1400103d2:	lea    rdx,[rsp+0x80]
   1400103da:	mov    rcx,rdi
   1400103dd:	call   0x1400236d8
   1400103e2:	inc    QWORD PTR [rax+0x8]
   1400103e6:	mov    r8,rax
   1400103e9:	call   0x140023628
   1400103ee:	nop
   1400103ef:	mov    rcx,rsi
   1400103f2:	call   QWORD PTR [rip+0x21d00]        # 0x1400320f8
   1400103f8:	nop
   1400103f9:	test   rbx,rbx
   1400103fc:	je     0x14001041c
   1400103fe:	or     eax,0xffffffff
   140010401:	lock xadd DWORD PTR [rbx+0x8],eax
   140010406:	dec    eax
   140010408:	cmp    eax,0x80000000
   14001040d:	jne    0x14001041c
   14001040f:	mov    rcx,QWORD PTR [rsp+0x98]
   140010417:	call   0x140029c90
   14001041c:	xor    eax,eax
   14001041e:	lea    r11,[rsp+0x50]
   140010423:	mov    rbx,QWORD PTR [r11+0x38]
   140010427:	mov    rsi,QWORD PTR [r11+0x40]
   14001042b:	mov    rsp,r11
   14001042e:	pop    r15
   140010430:	pop    r14
   140010432:	pop    r13
   140010434:	pop    r12
   140010436:	pop    rdi
   140010437:	ret    
   140010438:	int3   
   140010439:	int3   
   14001043a:	int3   
   14001043b:	int3   
   14001043c:	int3   
   14001043d:	int3   
   14001043e:	int3   
   14001043f:	int3   
   140010440:	sub    rsp,0x28
   140010444:	xor    eax,eax
   140010446:	test   rdx,rdx
   140010449:	jne    0x140010487
   14001044b:	mov    rcx,QWORD PTR [rip+0x3ac26]        # 0x14004b078
   140010452:	lea    rax,[rip+0x3ac1f]        # 0x14004b078
   140010459:	cmp    rcx,rax
   14001045c:	je     0x140010480
   14001045e:	test   BYTE PTR [rcx+0x1c],0x1
   140010462:	je     0x140010480
   140010464:	mov    rcx,QWORD PTR [rcx+0x10]
   140010468:	lea    r9,[rip+0x26b49]        # 0x140036fb8
   14001046f:	mov    edx,0xa
   140010474:	lea    r8,[rip+0x23f55]        # 0x1400343d0
   14001047b:	call   0x1400038e0
   140010480:	mov    eax,0x80070057
   140010485:	jmp    0x14001048a
   140010487:	mov    WORD PTR [rdx],ax
   14001048a:	add    rsp,0x28
   14001048e:	ret    
   14001048f:	int3   
   140010490:	int3   
   140010491:	int3   
   140010492:	int3   
   140010493:	int3   
   140010494:	int3   
   140010495:	int3   
   140010496:	int3   
   140010497:	int3   
   140010498:	mov    rax,rsp
   14001049b:	push   rsi
   14001049c:	push   rdi
   14001049d:	push   r12
   14001049f:	push   r14
   1400104a1:	push   r15
   1400104a3:	sub    rsp,0x40
   1400104a7:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400104af:	mov    QWORD PTR [rax+0x8],rbx
   1400104b3:	mov    QWORD PTR [rax+0x18],rbp
   1400104b7:	mov    r15d,r9d
   1400104ba:	mov    r12,r8
   1400104bd:	mov    r14,rdx
   1400104c0:	mov    rbp,rcx
   1400104c3:	test   rdx,rdx
   1400104c6:	jne    0x140010507
   1400104c8:	lea    rax,[rip+0x3aba9]        # 0x14004b078
   1400104cf:	mov    rcx,QWORD PTR [rip+0x3aba2]        # 0x14004b078
   1400104d6:	cmp    rcx,rax
   1400104d9:	je     0x1400104fc
   1400104db:	test   BYTE PTR [rcx+0x1c],0x1
   1400104df:	je     0x1400104fc
   1400104e1:	lea    edx,[r14+0xa]
   1400104e5:	lea    r9,[rip+0x26b04]        # 0x140036ff0
   1400104ec:	lea    r8,[rip+0x23edd]        # 0x1400343d0
   1400104f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400104f7:	call   0x1400038e0
   1400104fc:	mov    ecx,0x80070057
   140010501:	call   0x140029d64
   140010506:	int3   
   140010507:	lea    rbx,[rcx+0xf0]
   14001050e:	mov    QWORD PTR [rsp+0x30],rbx
   140010513:	mov    rcx,rbx
   140010516:	call   0x140029ab0
   14001051b:	test   eax,eax
   14001051d:	jns    0x140010527
   14001051f:	mov    ecx,eax
   140010521:	call   0x140029d64
   140010526:	nop
   140010527:	and    DWORD PTR [rsp+0x78],0x0
   14001052c:	mov    rsi,QWORD PTR [rbp+0x58]
   140010530:	mov    rax,QWORD PTR [rsi]
   140010533:	mov    rdi,QWORD PTR [rax+0x60]
   140010537:	mov    rcx,rdi
   14001053a:	call   QWORD PTR [rip+0x22168]        # 0x1400326a8
   140010540:	lea    rdx,[rsp+0x78]
   140010545:	mov    rcx,rsi
   140010548:	call   rdi
   14001054a:	mov    r9d,eax
   14001054d:	test   eax,eax
   14001054f:	jns    0x140010589
   140010551:	lea    rax,[rip+0x3ab20]        # 0x14004b078
   140010558:	mov    rcx,QWORD PTR [rip+0x3ab19]        # 0x14004b078
   14001055f:	cmp    rcx,rax
   140010562:	je     0x14001057f
   140010564:	test   BYTE PTR [rcx+0x1c],0x2
   140010568:	je     0x14001057f
   14001056a:	mov    edx,0x1c
   14001056f:	lea    r8,[rip+0x26ba2]        # 0x140037118
   140010576:	mov    rcx,QWORD PTR [rcx+0x10]
   14001057a:	call   0x140001f70
   14001057f:	xor    r8d,r8d
   140010582:	mov    DWORD PTR [rsp+0x78],r8d
   140010587:	jmp    0x14001058e
   140010589:	mov    r8d,DWORD PTR [rsp+0x78]
   14001058e:	mov    DWORD PTR [rsp+0x20],r15d
   140010593:	mov    r9,r12
   140010596:	mov    edx,DWORD PTR [r14+0x44]
   14001059a:	mov    rcx,QWORD PTR [rbp+0x48]
   14001059e:	call   0x14000bf60
   1400105a3:	test   eax,eax
   1400105a5:	jns    0x1400105af
   1400105a7:	mov    ecx,eax
   1400105a9:	call   0x140029d64
   1400105ae:	nop
   1400105af:	or     eax,0xffffffff
   1400105b2:	lock xadd DWORD PTR [rbx+0x8],eax
   1400105b7:	dec    eax
   1400105b9:	cmp    eax,0x80000000
   1400105be:	jne    0x1400105ca
   1400105c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400105c5:	call   0x140029c90
   1400105ca:	lea    r11,[rsp+0x40]
   1400105cf:	mov    rbx,QWORD PTR [r11+0x30]
   1400105d3:	mov    rbp,QWORD PTR [r11+0x40]
   1400105d7:	mov    rsp,r11
   1400105da:	pop    r15
   1400105dc:	pop    r14
   1400105de:	pop    r12
   1400105e0:	pop    rdi
   1400105e1:	pop    rsi
   1400105e2:	ret    
   1400105e3:	int3   
   1400105e4:	int3   
   1400105e5:	int3   
   1400105e6:	int3   
   1400105e7:	int3   
   1400105e8:	int3   
   1400105e9:	int3   
   1400105ea:	int3   
   1400105eb:	int3   
   1400105ec:	rex push rbx
   1400105ee:	push   rsi
   1400105ef:	push   rdi
   1400105f0:	push   r12
   1400105f2:	push   r13
   1400105f4:	push   r14
   1400105f6:	push   r15
   1400105f8:	sub    rsp,0xc0
   1400105ff:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140010608:	mov    rax,QWORD PTR [rip+0x3aa11]        # 0x14004b020
   14001060f:	xor    rax,rsp
   140010612:	mov    QWORD PTR [rsp+0xb8],rax
   14001061a:	mov    r12,r9
   14001061d:	mov    r9,r8
   140010620:	mov    QWORD PTR [rsp+0x50],r8
   140010625:	mov    rdi,rdx
   140010628:	mov    QWORD PTR [rsp+0x38],rdx
   14001062d:	mov    r15,rcx
   140010630:	mov    QWORD PTR [rsp+0x58],rcx
   140010635:	mov    QWORD PTR [rsp+0x68],r12
   14001063a:	xor    esi,esi
   14001063c:	test   r8,r8
   14001063f:	je     0x1400108d1
   140010645:	test   r12,r12
   140010648:	je     0x1400108d1
   14001064e:	add    rcx,0xf0
   140010655:	mov    QWORD PTR [rsp+0x48],rcx
   14001065a:	call   0x140029ab0
   14001065f:	test   eax,eax
   140010661:	jns    0x14001066b
   140010663:	mov    ecx,eax
   140010665:	call   0x140029d64
   14001066a:	nop
   14001066b:	mov    ebx,DWORD PTR [r9+0x40]
   14001066f:	mov    DWORD PTR [rsp+0x40],ebx
   140010673:	mov    QWORD PTR [rsp+0xa0],0x7
   14001067f:	mov    QWORD PTR [rsp+0x98],rsi
   140010687:	mov    WORD PTR [rsp+0x88],si
   14001068f:	lea    rdx,[r9+0x20]
   140010693:	or     r9,0xffffffffffffffff
   140010697:	xor    r8d,r8d
   14001069a:	lea    rcx,[rsp+0x88]
   1400106a2:	call   0x14000d7a0
   1400106a7:	nop
   1400106a8:	lea    r14,[rip+0x3a9c9]        # 0x14004b078
   1400106af:	mov    rcx,QWORD PTR [rip+0x3a9c2]        # 0x14004b078
   1400106b6:	cmp    rcx,r14
   1400106b9:	je     0x1400106f0
   1400106bb:	test   BYTE PTR [rcx+0x1c],0x1
   1400106bf:	je     0x1400106f0
   1400106c1:	lea    r9,[rsp+0x88]
   1400106c9:	cmp    QWORD PTR [rsp+0xa0],0x8
   1400106d2:	cmovae r9,QWORD PTR [rsp+0x88]
   1400106db:	mov    QWORD PTR [rsp+0x20],rdi
   1400106e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400106e4:	call   0x14000e370
   1400106e9:	mov    rcx,QWORD PTR [rip+0x3a988]        # 0x14004b078
   1400106f0:	mov    r13d,esi
   1400106f3:	test   ebx,ebx
   1400106f5:	jne    0x140010769
   1400106f7:	cmp    rcx,r14
   1400106fa:	je     0x140010715
   1400106fc:	test   BYTE PTR [rcx+0x1c],0x2
   140010700:	je     0x140010715
   140010702:	lea    edx,[rbx+0x1e]
   140010705:	lea    r8,[rip+0x26a0c]        # 0x140037118
   14001070c:	mov    rcx,QWORD PTR [rcx+0x10]
   140010710:	call   0x140001f08
   140010715:	mov    rdi,QWORD PTR [r15+0x50]
   140010719:	mov    rax,QWORD PTR [rdi]
   14001071c:	mov    rbx,QWORD PTR [rax+0x10]
   140010720:	mov    rcx,rbx
   140010723:	call   QWORD PTR [rip+0x21f7f]        # 0x1400326a8
   140010729:	mov    edx,0x1
   14001072e:	mov    rcx,rdi
   140010731:	call   rbx
   140010733:	mov    r13d,eax
   140010736:	test   eax,eax
   140010738:	jns    0x140010764
   14001073a:	mov    rcx,QWORD PTR [rip+0x3a937]        # 0x14004b078
   140010741:	cmp    rcx,r14
   140010744:	je     0x140010764
   140010746:	test   BYTE PTR [rcx+0x1c],0x1
   14001074a:	je     0x140010764
   14001074c:	mov    edx,0x1f
   140010751:	mov    r9d,eax
   140010754:	lea    r8,[rip+0x269bd]        # 0x140037118
   14001075b:	mov    rcx,QWORD PTR [rcx+0x10]
   14001075f:	call   0x140001f70
   140010764:	mov    rdi,QWORD PTR [rsp+0x38]
   140010769:	mov    r9,QWORD PTR [r15+0x48]
   14001076d:	lea    rbx,[r9+0x90]
   140010774:	mov    QWORD PTR [rsp+0x60],rbx
   140010779:	mov    rcx,rbx
   14001077c:	call   0x140029ab0
   140010781:	test   eax,eax
   140010783:	jns    0x14001078d
   140010785:	mov    ecx,eax
   140010787:	call   0x140029d64
   14001078c:	nop
   14001078d:	movups xmm0,XMMWORD PTR [rdi]
   140010790:	movdqu XMMWORD PTR [rsp+0xa8],xmm0
   140010799:	lea    rcx,[r9+0x190]
   1400107a0:	lea    rdx,[rsp+0xa8]
   1400107a8:	call   0x1400153d0
   1400107ad:	mov    dil,al
   1400107b0:	or     ecx,0xffffffff
   1400107b3:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400107b8:	dec    ecx
   1400107ba:	cmp    ecx,0x80000000
   1400107c0:	jne    0x1400107cc
   1400107c2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400107c7:	call   0x140029c90
   1400107cc:	test   dil,dil
   1400107cf:	sete   dil
   1400107d3:	mov    BYTE PTR [rsp+0x30],dil
   1400107d8:	mov    DWORD PTR [rsp+0x34],esi
   1400107dc:	call   QWORD PTR [rip+0x21c6e]        # 0x140032450
   1400107e2:	mov    rbx,QWORD PTR [rax+0xa0]
   1400107e9:	mov    rcx,rbx
   1400107ec:	call   QWORD PTR [rip+0x21eb6]        # 0x1400326a8
   1400107f2:	lea    r8,[rsp+0x34]
   1400107f7:	xor    edx,edx
   1400107f9:	lea    rcx,[rip+0x26880]        # 0x140037080
   140010800:	call   rbx
   140010802:	cmp    DWORD PTR [rsp+0x34],esi
   140010806:	setne  bl
   140010809:	mov    BYTE PTR [rsp+0x31],bl
   14001080d:	mov    r9d,DWORD PTR [rsp+0x40]
   140010812:	test   dil,dil
   140010815:	je     0x14001081c
   140010817:	test   r9d,r9d
   14001081a:	je     0x140010820
   14001081c:	test   bl,bl
   14001081e:	je     0x14001084f
   140010820:	mov    DWORD PTR [rsp+0x20],r13d
   140010825:	mov    r8,QWORD PTR [rsp+0x50]
   14001082a:	mov    rdx,QWORD PTR [rsp+0x38]
   14001082f:	mov    rcx,r15
   140010832:	call   0x14001093c
   140010837:	nop
   140010838:	jmp    0x14001084f
   14001083a:	xor    esi,esi
   14001083c:	mov    dil,BYTE PTR [rsp+0x30]
   140010841:	mov    bl,BYTE PTR [rsp+0x31]
   140010845:	mov    r15,QWORD PTR [rsp+0x58]
   14001084a:	mov    r12,QWORD PTR [rsp+0x68]
   14001084f:	test   dil,dil
   140010852:	jne    0x140010858
   140010854:	test   bl,bl
   140010856:	je     0x140010879
   140010858:	call   0x140016e54
   14001085d:	test   eax,eax
   14001085f:	je     0x140010879
   140010861:	mov    r8,QWORD PTR [r15+0x50]
   140010865:	mov    rdx,r12
   140010868:	mov    rcx,QWORD PTR [r15+0xe8]
   14001086f:	call   0x140011de4
   140010874:	nop
   140010875:	jmp    0x140010879
   140010877:	xor    esi,esi
   140010879:	cmp    QWORD PTR [rsp+0xa0],0x8
   140010882:	jb     0x140010892
   140010884:	mov    rcx,QWORD PTR [rsp+0x88]
   14001088c:	call   QWORD PTR [rip+0x21d36]        # 0x1400325c8
   140010892:	mov    QWORD PTR [rsp+0xa0],0x7
   14001089e:	mov    QWORD PTR [rsp+0x98],rsi
   1400108a6:	mov    WORD PTR [rsp+0x88],si
   1400108ae:	mov    rax,QWORD PTR [rsp+0x48]
   1400108b3:	or     ecx,0xffffffff
   1400108b6:	lock xadd DWORD PTR [rax+0x8],ecx
   1400108bb:	dec    ecx
   1400108bd:	cmp    ecx,0x80000000
   1400108c3:	jne    0x140010911
   1400108c5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400108ca:	call   0x140029c90
   1400108cf:	jmp    0x140010911
   1400108d1:	lea    r14,[rip+0x3a7a0]        # 0x14004b078
   1400108d8:	mov    rcx,QWORD PTR [rip+0x3a799]        # 0x14004b078
   1400108df:	cmp    rcx,r14
   1400108e2:	je     0x140010906
   1400108e4:	test   BYTE PTR [rcx+0x1c],0x1
   1400108e8:	je     0x140010906
   1400108ea:	mov    edx,0xa
   1400108ef:	lea    r9,[rip+0x2673a]        # 0x140037030
   1400108f6:	lea    r8,[rip+0x23ad3]        # 0x1400343d0
   1400108fd:	mov    rcx,QWORD PTR [rcx+0x10]
   140010901:	call   0x1400038e0
   140010906:	mov    ecx,0x80070057
   14001090b:	call   0x140029d64
   140010910:	int3   
   140010911:	mov    rcx,QWORD PTR [rsp+0xb8]
   140010919:	xor    rcx,rsp
   14001091c:	call   0x14002dd00
   140010921:	add    rsp,0xc0
   140010928:	pop    r15
   14001092a:	pop    r14
   14001092c:	pop    r13
   14001092e:	pop    r12
   140010930:	pop    rdi
   140010931:	pop    rsi
   140010932:	pop    rbx
   140010933:	ret    
   140010934:	int3   
   140010935:	int3   
   140010936:	int3   
   140010937:	int3   
   140010938:	int3   
   140010939:	int3   
   14001093a:	int3   
   14001093b:	int3   
   14001093c:	mov    rax,rsp
   14001093f:	push   rbp
   140010940:	push   r12
   140010942:	push   r13
   140010944:	push   r14
   140010946:	push   r15
   140010948:	lea    rbp,[rax-0x57]
   14001094c:	sub    rsp,0x100
   140010953:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   14001095b:	mov    QWORD PTR [rax+0x8],rbx
   14001095f:	mov    QWORD PTR [rax+0x10],rsi
   140010963:	mov    QWORD PTR [rax+0x20],rdi
   140010967:	mov    r12d,r9d
   14001096a:	mov    r15,r8
   14001096d:	mov    r13,rdx
   140010970:	mov    r14,rcx
   140010973:	xor    r9d,r9d
   140010976:	test   r8,r8
   140010979:	jne    0x1400109ba
   14001097b:	lea    rax,[rip+0x3a6f6]        # 0x14004b078
   140010982:	mov    rcx,QWORD PTR [rip+0x3a6ef]        # 0x14004b078
   140010989:	cmp    rcx,rax
   14001098c:	je     0x1400109af
   14001098e:	test   BYTE PTR [rcx+0x1c],0x1
   140010992:	je     0x1400109af
   140010994:	lea    edx,[r8+0xa]
   140010998:	lea    r9,[rip+0x26651]        # 0x140036ff0
   14001099f:	lea    r8,[rip+0x23a2a]        # 0x1400343d0
   1400109a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400109aa:	call   0x1400038e0
   1400109af:	mov    ecx,0x80070057
   1400109b4:	call   0x140029d64
   1400109b9:	int3   
   1400109ba:	lea    rbx,[rcx+0xf0]
   1400109c1:	mov    QWORD PTR [rbp+0x1f],rbx
   1400109c5:	mov    rcx,rbx
   1400109c8:	call   0x140029ab0
   1400109cd:	test   eax,eax
   1400109cf:	jns    0x1400109d9
   1400109d1:	mov    ecx,eax
   1400109d3:	call   0x140029d64
   1400109d8:	nop
   1400109d9:	mov    QWORD PTR [rbp-0x9],r9
   1400109dd:	mov    rsi,QWORD PTR [r14+0x58]
   1400109e1:	mov    rax,QWORD PTR [rsi]
   1400109e4:	mov    rdi,QWORD PTR [rax+0x18]
   1400109e8:	mov    rcx,rdi
   1400109eb:	call   QWORD PTR [rip+0x21cb7]        # 0x1400326a8
   1400109f1:	lea    rdx,[rbp-0x9]
   1400109f5:	mov    rcx,rsi
   1400109f8:	call   rdi
   1400109fa:	xor    edi,edi
   1400109fc:	test   eax,eax
   1400109fe:	jns    0x140010a08
   140010a00:	mov    ecx,eax
   140010a02:	call   0x140029d64
   140010a07:	int3   
   140010a08:	mov    WORD PTR [rbp-0x31],di
   140010a0c:	mov    rsi,QWORD PTR [r14+0x58]
   140010a10:	mov    rax,QWORD PTR [rsi]
   140010a13:	mov    rdi,QWORD PTR [rax+0x28]
   140010a17:	mov    rcx,rdi
   140010a1a:	call   QWORD PTR [rip+0x21c88]        # 0x1400326a8
   140010a20:	lea    rdx,[rbp-0x31]
   140010a24:	mov    rcx,rsi
   140010a27:	call   rdi
   140010a29:	xor    ecx,ecx
   140010a2b:	test   eax,eax
   140010a2d:	jns    0x140010a37
   140010a2f:	mov    ecx,eax
   140010a31:	call   0x140029d64
   140010a36:	int3   
   140010a37:	mov    QWORD PTR [rbp-0x1],rcx
   140010a3b:	mov    rsi,QWORD PTR [r14+0x58]
   140010a3f:	mov    rax,QWORD PTR [rsi]
   140010a42:	mov    rdi,QWORD PTR [rax+0x30]
   140010a46:	mov    rcx,rdi
   140010a49:	call   QWORD PTR [rip+0x21c59]        # 0x1400326a8
   140010a4f:	lea    rdx,[rbp-0x1]
   140010a53:	mov    rcx,rsi
   140010a56:	call   rdi
   140010a58:	xor    ecx,ecx
   140010a5a:	test   eax,eax
   140010a5c:	jns    0x140010a66
   140010a5e:	mov    ecx,eax
   140010a60:	call   0x140029d64
   140010a65:	int3   
   140010a66:	mov    WORD PTR [rbp+0x6f],cx
   140010a6a:	mov    rsi,QWORD PTR [r14+0x58]
   140010a6e:	mov    rax,QWORD PTR [rsi]
   140010a71:	mov    rdi,QWORD PTR [rax+0x40]
   140010a75:	mov    rcx,rdi
   140010a78:	call   QWORD PTR [rip+0x21c2a]        # 0x1400326a8
   140010a7e:	lea    rdx,[rbp+0x6f]
   140010a82:	mov    rcx,rsi
   140010a85:	call   rdi
   140010a87:	test   eax,eax
   140010a89:	jns    0x140010a93
   140010a8b:	mov    ecx,eax
   140010a8d:	call   0x140029d64
   140010a92:	int3   
   140010a93:	mov    rsi,QWORD PTR [r14+0x58]
   140010a97:	mov    rax,QWORD PTR [rsi]
   140010a9a:	mov    rdi,QWORD PTR [rax+0x48]
   140010a9e:	mov    rcx,rdi
   140010aa1:	call   QWORD PTR [rip+0x21c01]        # 0x1400326a8
   140010aa7:	lea    rdx,[rbp+0xf]
   140010aab:	mov    rcx,rsi
   140010aae:	call   rdi
   140010ab0:	xor    ecx,ecx
   140010ab2:	test   eax,eax
   140010ab4:	jns    0x140010abe
   140010ab6:	mov    ecx,eax
   140010ab8:	call   0x140029d64
   140010abd:	int3   
   140010abe:	mov    QWORD PTR [rbp+0x7],rcx
   140010ac2:	mov    rsi,QWORD PTR [r14+0x58]
   140010ac6:	mov    rax,QWORD PTR [rsi]
   140010ac9:	mov    rdi,QWORD PTR [rax+0x68]
   140010acd:	mov    rcx,rdi
   140010ad0:	call   QWORD PTR [rip+0x21bd2]        # 0x1400326a8
   140010ad6:	lea    rdx,[rbp+0x7]
   140010ada:	mov    rcx,rsi
   140010add:	call   rdi
   140010adf:	xor    ecx,ecx
   140010ae1:	test   eax,eax
   140010ae3:	jns    0x140010aed
   140010ae5:	mov    ecx,eax
   140010ae7:	call   0x140029d64
   140010aec:	int3   
   140010aed:	mov    QWORD PTR [rbp-0x29],rcx
   140010af1:	mov    QWORD PTR [rbp-0x19],rcx
   140010af5:	mov    rsi,QWORD PTR [r14+0x58]
   140010af9:	mov    rax,QWORD PTR [rsi]
   140010afc:	mov    rdi,QWORD PTR [rax+0x70]
   140010b00:	mov    rcx,rdi
   140010b03:	call   QWORD PTR [rip+0x21b9f]        # 0x1400326a8
   140010b09:	lea    r8,[rbp-0x19]
   140010b0d:	lea    rdx,[rbp-0x29]
   140010b11:	mov    rcx,rsi
   140010b14:	call   rdi
   140010b16:	mov    r9d,eax
   140010b19:	xor    esi,esi
   140010b1b:	test   eax,eax
   140010b1d:	jns    0x140010bae
   140010b23:	lea    rax,[rip+0x3a54e]        # 0x14004b078
   140010b2a:	mov    rcx,QWORD PTR [rip+0x3a547]        # 0x14004b078
   140010b31:	cmp    rcx,rax
   140010b34:	je     0x140010b4f
   140010b36:	test   BYTE PTR [rcx+0x1c],0x2
   140010b3a:	je     0x140010b4f
   140010b3c:	lea    edx,[rsi+0x22]
   140010b3f:	lea    r8,[rip+0x265d2]        # 0x140037118
   140010b46:	mov    rcx,QWORD PTR [rcx+0x10]
   140010b4a:	call   0x140001f70
   140010b4f:	lea    rdi,[rip+0x249e2]        # 0x140035538
   140010b56:	mov    rcx,QWORD PTR [rbp-0x29]
   140010b5a:	cmp    rdi,rcx
   140010b5d:	je     0x140010b82
   140010b5f:	call   QWORD PTR [rip+0x217eb]        # 0x140032350
   140010b65:	mov    rcx,rdi
   140010b68:	call   QWORD PTR [rip+0x217f2]        # 0x140032360
   140010b6e:	mov    QWORD PTR [rbp-0x29],rax
   140010b72:	test   rax,rax
   140010b75:	jne    0x140010b82
   140010b77:	mov    ecx,0x8007000e
   140010b7c:	call   0x140005d50
   140010b81:	int3   
   140010b82:	mov    rcx,QWORD PTR [rbp-0x19]
   140010b86:	cmp    rdi,rcx
   140010b89:	je     0x140010bae
   140010b8b:	call   QWORD PTR [rip+0x217bf]        # 0x140032350
   140010b91:	mov    rcx,rdi
   140010b94:	call   QWORD PTR [rip+0x217c6]        # 0x140032360
   140010b9a:	mov    QWORD PTR [rbp-0x19],rax
   140010b9e:	test   rax,rax
   140010ba1:	jne    0x140010bae
   140010ba3:	mov    ecx,0x8007000e
   140010ba8:	call   0x140005d50
   140010bad:	int3   
   140010bae:	lea    rdx,[rip+0x25e1f]        # 0x1400369d4
   140010bb5:	lea    rcx,[rbp-0x29]
   140010bb9:	call   0x1400113d0
   140010bbe:	test   eax,eax
   140010bc0:	jns    0x140010bca
   140010bc2:	mov    ecx,eax
   140010bc4:	call   0x140029d64
   140010bc9:	int3   
   140010bca:	mov    rdi,QWORD PTR [rbp-0x19]
   140010bce:	mov    rcx,rdi
   140010bd1:	call   QWORD PTR [rip+0x21799]        # 0x140032370
   140010bd7:	test   eax,eax
   140010bd9:	je     0x140010c10
   140010bdb:	mov    QWORD PTR [rbp+0x17],rsi
   140010bdf:	lea    r8,[rbp+0x17]
   140010be3:	mov    rdx,rdi
   140010be6:	mov    rcx,QWORD PTR [rbp-0x29]
   140010bea:	call   QWORD PTR [rip+0x21790]        # 0x140032380
   140010bf0:	test   eax,eax
   140010bf2:	js     0x140010c08
   140010bf4:	mov    rcx,QWORD PTR [rbp-0x29]
   140010bf8:	call   QWORD PTR [rip+0x21752]        # 0x140032350
   140010bfe:	mov    rax,QWORD PTR [rbp+0x17]
   140010c02:	mov    QWORD PTR [rbp-0x29],rax
   140010c06:	jmp    0x140010c10
   140010c08:	mov    ecx,eax
   140010c0a:	call   0x140029d64
   140010c0f:	int3   
   140010c10:	mov    DWORD PTR [rbp-0x21],esi
   140010c13:	mov    rsi,QWORD PTR [r14+0x58]
   140010c17:	mov    rax,QWORD PTR [rsi]
   140010c1a:	mov    rdi,QWORD PTR [rax+0x60]
   140010c1e:	mov    rcx,rdi
   140010c21:	call   QWORD PTR [rip+0x21a81]        # 0x1400326a8
   140010c27:	lea    rdx,[rbp-0x21]
   140010c2b:	mov    rcx,rsi
   140010c2e:	call   rdi
   140010c30:	xor    ecx,ecx
   140010c32:	test   eax,eax
   140010c34:	jns    0x140010c3e
   140010c36:	mov    ecx,eax
   140010c38:	call   0x140029d64
   140010c3d:	int3   
   140010c3e:	mov    QWORD PTR [rbp-0x11],rcx
   140010c42:	mov    rsi,QWORD PTR [r14+0x58]
   140010c46:	mov    rax,QWORD PTR [rsi]
   140010c49:	mov    rdi,QWORD PTR [rax+0x58]
   140010c4d:	mov    rcx,rdi
   140010c50:	call   QWORD PTR [rip+0x21a52]        # 0x1400326a8
   140010c56:	xor    r8d,r8d
   140010c59:	lea    rdx,[rbp-0x11]
   140010c5d:	mov    rcx,rsi
   140010c60:	call   rdi
   140010c62:	test   eax,eax
   140010c64:	jns    0x140010c6e
   140010c66:	mov    ecx,eax
   140010c68:	call   0x140029d64
   140010c6d:	int3   
   140010c6e:	mov    rcx,QWORD PTR [r15+0x58]
   140010c72:	mov    DWORD PTR [rsp+0x50],r12d
   140010c77:	mov    rax,QWORD PTR [rbp-0x11]
   140010c7b:	mov    QWORD PTR [rsp+0x48],rax
   140010c80:	mov    eax,DWORD PTR [rbp-0x21]
   140010c83:	mov    DWORD PTR [rsp+0x40],eax
   140010c87:	mov    rax,QWORD PTR [rbp-0x29]
   140010c8b:	mov    QWORD PTR [rsp+0x38],rax
   140010c90:	mov    QWORD PTR [rsp+0x30],rcx
   140010c95:	movzx  eax,WORD PTR [rbp+0x6f]
   140010c99:	mov    WORD PTR [rsp+0x28],ax
   140010c9e:	mov    rax,QWORD PTR [rbp-0x1]
   140010ca2:	mov    QWORD PTR [rsp+0x20],rax
   140010ca7:	movzx  r9d,WORD PTR [rbp-0x31]
   140010cac:	mov    r8,QWORD PTR [rbp-0x9]
   140010cb0:	mov    rdx,QWORD PTR [r15+0x48]
   140010cb4:	mov    rcx,r13
   140010cb7:	call   QWORD PTR [rip+0x21653]        # 0x140032310
   140010cbd:	mov    rcx,QWORD PTR [r14+0xe8]
   140010cc4:	mov    rdx,QWORD PTR [r15+0x60]
   140010cc8:	mov    r9,QWORD PTR [r15+0x58]
   140010ccc:	mov    eax,DWORD PTR [rbp+0x7f]
   140010ccf:	mov    DWORD PTR [rsp+0x98],eax
   140010cd6:	mov    DWORD PTR [rsp+0x90],r12d
   140010cde:	mov    rax,QWORD PTR [rcx+0x38]
   140010ce2:	mov    QWORD PTR [rsp+0x88],rax
   140010cea:	mov    rax,QWORD PTR [rcx+0x40]
   140010cee:	mov    QWORD PTR [rsp+0x80],rax
   140010cf6:	mov    rax,QWORD PTR [rbp-0x11]
   140010cfa:	mov    QWORD PTR [rsp+0x78],rax
   140010cff:	mov    eax,DWORD PTR [rbp-0x21]
   140010d02:	mov    DWORD PTR [rsp+0x70],eax
   140010d06:	mov    rax,QWORD PTR [rbp-0x29]
   140010d0a:	mov    QWORD PTR [rsp+0x68],rax
   140010d0f:	mov    rax,QWORD PTR [rbp+0x7]
   140010d13:	mov    QWORD PTR [rsp+0x60],rax
   140010d18:	mov    eax,DWORD PTR [rbp+0xf]
   140010d1b:	mov    DWORD PTR [rsp+0x58],eax
   140010d1f:	mov    QWORD PTR [rsp+0x50],rdx
   140010d24:	mov    QWORD PTR [rsp+0x48],r9
   140010d29:	movzx  eax,WORD PTR [rbp+0x6f]
   140010d2d:	mov    WORD PTR [rsp+0x40],ax
   140010d32:	mov    rax,QWORD PTR [rbp-0x1]
   140010d36:	mov    QWORD PTR [rsp+0x38],rax
   140010d3b:	movzx  eax,WORD PTR [rbp-0x31]
   140010d3f:	mov    WORD PTR [rsp+0x30],ax
   140010d44:	mov    rax,QWORD PTR [rbp-0x9]
   140010d48:	mov    QWORD PTR [rsp+0x28],rax
   140010d4d:	mov    eax,DWORD PTR [r15+0x54]
   140010d51:	mov    DWORD PTR [rsp+0x20],eax
   140010d55:	mov    r9d,DWORD PTR [r15+0x50]
   140010d59:	mov    r8,QWORD PTR [r15+0x48]
   140010d5d:	mov    edx,DWORD PTR [r15+0x44]
   140010d61:	mov    rcx,QWORD PTR [r14+0x48]
   140010d65:	call   0x14000bd54
   140010d6a:	test   eax,eax
   140010d6c:	jns    0x140010d76
   140010d6e:	mov    ecx,eax
   140010d70:	call   0x140029d64
   140010d75:	nop
   140010d76:	mov    rcx,QWORD PTR [rbp-0x11]
   140010d7a:	call   QWORD PTR [rip+0x215d0]        # 0x140032350
   140010d80:	nop
   140010d81:	mov    rcx,QWORD PTR [rbp-0x19]
   140010d85:	call   QWORD PTR [rip+0x215c5]        # 0x140032350
   140010d8b:	nop
   140010d8c:	mov    rcx,QWORD PTR [rbp-0x29]
   140010d90:	call   QWORD PTR [rip+0x215ba]        # 0x140032350
   140010d96:	nop
   140010d97:	mov    rcx,QWORD PTR [rbp+0x7]
   140010d9b:	call   QWORD PTR [rip+0x215af]        # 0x140032350
   140010da1:	nop
   140010da2:	mov    rcx,QWORD PTR [rbp-0x1]
   140010da6:	call   QWORD PTR [rip+0x215a4]        # 0x140032350
   140010dac:	nop
   140010dad:	mov    rcx,QWORD PTR [rbp-0x9]
   140010db1:	call   QWORD PTR [rip+0x21599]        # 0x140032350
   140010db7:	nop
   140010db8:	or     eax,0xffffffff
   140010dbb:	lock xadd DWORD PTR [rbx+0x8],eax
   140010dc0:	dec    eax
   140010dc2:	cmp    eax,0x80000000
   140010dc7:	jne    0x140010dd2
   140010dc9:	mov    rcx,QWORD PTR [rbp+0x1f]
   140010dcd:	call   0x140029c90
   140010dd2:	lea    r11,[rsp+0x100]
   140010dda:	mov    rbx,QWORD PTR [r11+0x30]
   140010dde:	mov    rsi,QWORD PTR [r11+0x38]
   140010de2:	mov    rdi,QWORD PTR [r11+0x48]
   140010de6:	mov    rsp,r11
   140010de9:	pop    r15
   140010deb:	pop    r14
   140010ded:	pop    r13
   140010def:	pop    r12
   140010df1:	pop    rbp
   140010df2:	ret    
   140010df3:	int3   
   140010df4:	int3   
   140010df5:	int3   
   140010df6:	int3   
   140010df7:	int3   
   140010df8:	int3   
   140010df9:	int3   
   140010dfa:	int3   
   140010dfb:	int3   
   140010dfc:	int3   
   140010dfd:	int3   
   140010dfe:	int3   
   140010dff:	int3   
   140010e00:	rex push rbx
   140010e02:	sub    rsp,0x20
   140010e06:	mov    rbx,rcx
   140010e09:	call   0x14000f41c
   140010e0e:	jmp    0x140010e24
   140010e10:	lea    ecx,[rdx-0x80000000]
   140010e16:	mov    eax,edx
   140010e18:	lock cmpxchg DWORD PTR [rbx+0xf8],ecx
   140010e20:	cmp    edx,eax
   140010e22:	je     0x140010e2e
   140010e24:	mov    edx,DWORD PTR [rbx+0xf8]
   140010e2a:	test   edx,edx
   140010e2c:	jns    0x140010e10
   140010e2e:	test   edx,edx
   140010e30:	jne    0x140010e3e
   140010e32:	lea    rcx,[rbx+0xf0]
   140010e39:	call   0x140029c90
   140010e3e:	add    rsp,0x20
   140010e42:	pop    rbx
   140010e43:	ret    
   140010e44:	int3   
   140010e45:	int3   
   140010e46:	int3   
   140010e47:	int3   
   140010e48:	int3   
   140010e49:	int3   
   140010e4a:	int3   
   140010e4b:	int3   
   140010e4c:	int3   
   140010e4d:	int3   
   140010e4e:	int3   
   140010e4f:	int3   
   140010e50:	mov    rax,rsp
   140010e53:	mov    QWORD PTR [rax+0x8],rbx
   140010e57:	mov    QWORD PTR [rax+0x10],rbp
   140010e5b:	mov    QWORD PTR [rax+0x18],rsi
   140010e5f:	mov    QWORD PTR [rax+0x20],rdi
   140010e63:	push   r14
   140010e65:	sub    rsp,0x40
   140010e69:	mov    rdi,rcx
   140010e6c:	add    rcx,0xf0
   140010e73:	call   0x140029b84
   140010e78:	lea    rsi,[rdi+0x110]
   140010e7f:	mov    rcx,rsi
   140010e82:	mov    QWORD PTR [rsp+0x20],rsi
   140010e87:	call   QWORD PTR [rip+0x2127b]        # 0x140032108
   140010e8d:	mov    r14,QWORD PTR [rdi+0x50]
   140010e91:	mov    BYTE PTR [rsp+0x28],0x1
   140010e96:	mov    BYTE PTR [rsp+0x30],0x1
   140010e9b:	test   r14,r14
   140010e9e:	je     0x140010eba
   140010ea0:	mov    rax,QWORD PTR [r14]
   140010ea3:	mov    rbx,QWORD PTR [rax+0x8]
   140010ea7:	mov    rcx,rbx
   140010eaa:	call   QWORD PTR [rip+0x217f8]        # 0x1400326a8
   140010eb0:	mov    rcx,r14
   140010eb3:	call   rbx
   140010eb5:	and    QWORD PTR [rdi+0x50],0x0
   140010eba:	mov    rbp,QWORD PTR [rdi+0xe8]
   140010ec1:	test   rbp,rbp
   140010ec4:	je     0x140010f70
   140010eca:	mov    rsi,QWORD PTR [rdi+0x60]
   140010ece:	test   rsi,rsi
   140010ed1:	je     0x140010eed
   140010ed3:	mov    rax,QWORD PTR [rsi]
   140010ed6:	mov    rbx,QWORD PTR [rax+0x10]
   140010eda:	mov    rcx,rbx
   140010edd:	call   QWORD PTR [rip+0x217c5]        # 0x1400326a8
   140010ee3:	mov    rcx,rsi
   140010ee6:	call   rbx
   140010ee8:	and    QWORD PTR [rdi+0x60],0x0
   140010eed:	or     ebx,0xffffffff
   140010ef0:	lea    rcx,[rbp+0x120]
   140010ef7:	mov    eax,ebx
   140010ef9:	lock xadd DWORD PTR [rcx+0x8],eax
   140010efe:	add    eax,ebx
   140010f00:	cmp    eax,0x80000000
   140010f05:	jne    0x140010f0c
   140010f07:	call   0x140029c90
   140010f0c:	mov    rcx,QWORD PTR [rdi+0xe8]
   140010f13:	mov    rdx,rdi
   140010f16:	call   0x14001186c
   140010f1b:	mov    rsi,QWORD PTR [rdi+0xe8]
   140010f22:	test   rsi,rsi
   140010f25:	je     0x140010f6b
   140010f27:	mov    eax,DWORD PTR [rsi+0x8]
   140010f2a:	cmp    eax,0x1
   140010f2d:	jne    0x140010f38
   140010f2f:	mov    DWORD PTR [rsi+0x8],0x0
   140010f36:	jmp    0x140010f45
   140010f38:	mov    eax,ebx
   140010f3a:	lock xadd DWORD PTR [rsi+0x8],eax
   140010f3f:	add    eax,ebx
   140010f41:	test   eax,eax
   140010f43:	jg     0x140010f63
   140010f45:	test   rsi,rsi
   140010f48:	je     0x140010f63
   140010f4a:	mov    rax,QWORD PTR [rsi]
   140010f4d:	mov    rbx,QWORD PTR [rax]
   140010f50:	mov    rcx,rbx
   140010f53:	call   QWORD PTR [rip+0x2174f]        # 0x1400326a8
   140010f59:	mov    edx,0x1
   140010f5e:	mov    rcx,rsi
   140010f61:	call   rbx
   140010f63:	and    QWORD PTR [rdi+0xe8],0x0
   140010f6b:	mov    rsi,QWORD PTR [rsp+0x20]
   140010f70:	mov    rcx,rsi
   140010f73:	mov    rbx,QWORD PTR [rsp+0x50]
   140010f78:	mov    rbp,QWORD PTR [rsp+0x58]
   140010f7d:	mov    rsi,QWORD PTR [rsp+0x60]
   140010f82:	mov    rdi,QWORD PTR [rsp+0x68]
   140010f87:	add    rsp,0x40
   140010f8b:	pop    r14
   140010f8d:	rex.W jmp QWORD PTR [rip+0x21164]        # 0x1400320f8
   140010f94:	int3   
   140010f95:	int3   
   140010f96:	int3   
   140010f97:	int3   
   140010f98:	int3   
   140010f99:	int3   
   140010f9a:	int3   
   140010f9b:	int3   
   140010f9c:	sub    rsp,0x28
   140010fa0:	cmp    BYTE PTR [rcx+0x8],0x0
   140010fa4:	je     0x140010faf
   140010fa6:	mov    rcx,QWORD PTR [rcx]
   140010fa9:	call   QWORD PTR [rip+0x21149]        # 0x1400320f8
   140010faf:	add    rsp,0x28
   140010fb3:	ret    
   140010fb4:	int3   
   140010fb5:	int3   
   140010fb6:	int3   
   140010fb7:	int3   
   140010fb8:	int3   
   140010fb9:	int3   
   140010fba:	int3   
   140010fbb:	int3   
   140010fbc:	mov    QWORD PTR [rsp+0x10],rbx
   140010fc1:	push   rdi
   140010fc2:	sub    rsp,0x20
   140010fc6:	mov    rdi,QWORD PTR [rcx]
   140010fc9:	test   rdi,rdi
   140010fcc:	je     0x140010ff9
   140010fce:	or     eax,0xffffffff
   140010fd1:	lock xadd DWORD PTR [rdi+0x8],eax
   140010fd6:	cmp    eax,0x1
   140010fd9:	jne    0x140010ff9
   140010fdb:	test   rdi,rdi
   140010fde:	je     0x140010ff9
   140010fe0:	mov    rax,QWORD PTR [rdi]
   140010fe3:	mov    rbx,QWORD PTR [rax]
   140010fe6:	mov    rcx,rbx
   140010fe9:	call   QWORD PTR [rip+0x216b9]        # 0x1400326a8
   140010fef:	mov    edx,0x1
   140010ff4:	mov    rcx,rdi
   140010ff7:	call   rbx
   140010ff9:	mov    rbx,QWORD PTR [rsp+0x38]
   140010ffe:	add    rsp,0x20
   140011002:	pop    rdi
   140011003:	ret    
   140011004:	int3   
   140011005:	int3   
   140011006:	int3   
   140011007:	int3   
   140011008:	int3   
   140011009:	int3   
   14001100a:	int3   
   14001100b:	int3   
   14001100c:	int3   
   14001100d:	int3   
   14001100e:	int3   
   14001100f:	int3   
   140011010:	mov    eax,0x1
   140011015:	lock xadd DWORD PTR [rcx+0x10],eax
   14001101a:	inc    eax
   14001101c:	ret    
   14001101d:	int3   
   14001101e:	int3   
   14001101f:	int3   
   140011020:	int3   
   140011021:	int3   
   140011022:	int3   
   140011023:	int3   
   140011024:	int3   
   140011025:	int3   
   140011026:	int3   
   140011027:	int3   
   140011028:	int3   
   140011029:	int3   
   14001102a:	int3   
   14001102b:	int3   
   14001102c:	int3   
   14001102d:	int3   
   14001102e:	int3   
   14001102f:	int3   
   140011030:	mov    QWORD PTR [rsp+0x8],rbx
   140011035:	mov    QWORD PTR [rsp+0x10],rsi
   14001103a:	push   rdi
   14001103b:	sub    rsp,0x20
   14001103f:	mov    rsi,rcx
   140011042:	or     edi,0xffffffff
   140011045:	lock xadd DWORD PTR [rcx+0x10],edi
   14001104a:	sub    edi,0x1
   14001104d:	jne    0x140011082
   14001104f:	mov    rax,QWORD PTR [rip+0x3ef82]        # 0x14004ffd8
   140011056:	lock inc DWORD PTR [rax+0xc]
   14001105a:	test   rcx,rcx
   14001105d:	je     0x140011077
   14001105f:	mov    rcx,QWORD PTR [rcx]
   140011062:	mov    rbx,QWORD PTR [rcx+0x40]
   140011066:	mov    rcx,rbx
   140011069:	call   QWORD PTR [rip+0x21639]        # 0x1400326a8
   14001106f:	lea    edx,[rdi+0x1]
   140011072:	mov    rcx,rsi
   140011075:	call   rbx
   140011077:	mov    rcx,QWORD PTR [rip+0x3ef5a]        # 0x14004ffd8
   14001107e:	lock dec DWORD PTR [rcx+0xc]
   140011082:	mov    rbx,QWORD PTR [rsp+0x30]
   140011087:	mov    eax,edi
   140011089:	mov    rsi,QWORD PTR [rsp+0x38]
   14001108e:	add    rsp,0x20
   140011092:	pop    rdi
   140011093:	ret    
   140011094:	int3   
   140011095:	int3   
   140011096:	int3   
   140011097:	int3   
   140011098:	int3   
   140011099:	int3   
   14001109a:	int3   
   14001109b:	int3   
   14001109c:	int3   
   14001109d:	int3   
   14001109e:	int3   
   14001109f:	int3   
   1400110a0:	mov    r9,r8
   1400110a3:	add    rcx,0xfffffffffffffff8
   1400110a7:	mov    r8,rdx
   1400110aa:	lea    rdx,[rip+0x2601f]        # 0x1400370d0
   1400110b1:	jmp    0x140004664
   1400110b6:	int3   
   1400110b7:	int3   
   1400110b8:	int3   
   1400110b9:	int3   
   1400110ba:	int3   
   1400110bb:	int3   
   1400110bc:	int3   
   1400110bd:	int3   
   1400110be:	int3   
   1400110bf:	int3   
   1400110c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400110c5:	push   rdi
   1400110c6:	sub    rsp,0x20
   1400110ca:	lea    rax,[rip+0x236df]        # 0x1400347b0
   1400110d1:	mov    DWORD PTR [rcx+0x10],0xc0000001
   1400110d8:	mov    QWORD PTR [rcx],rax
   1400110db:	mov    ebx,edx
   1400110dd:	lea    rax,[rip+0x2367c]        # 0x140034760
   1400110e4:	mov    rdi,rcx
   1400110e7:	mov    QWORD PTR [rcx+0x8],rax
   1400110eb:	mov    rax,QWORD PTR [rip+0x3eee6]        # 0x14004ffd8
   1400110f2:	lock dec DWORD PTR [rax+0xc]
   1400110f6:	call   0x140011120
   1400110fb:	test   bl,0x1
   1400110fe:	je     0x140011109
   140011100:	mov    rcx,rdi
   140011103:	call   QWORD PTR [rip+0x214bf]        # 0x1400325c8
   140011109:	mov    rax,rdi
   14001110c:	mov    rbx,QWORD PTR [rsp+0x30]
   140011111:	add    rsp,0x20
   140011115:	pop    rdi
   140011116:	ret    
   140011117:	int3   
   140011118:	int3   
   140011119:	int3   
   14001111a:	int3   
   14001111b:	int3   
   14001111c:	int3   
   14001111d:	int3   
   14001111e:	int3   
   14001111f:	int3   
   140011120:	mov    QWORD PTR [rsp+0x8],rbx
   140011125:	mov    QWORD PTR [rsp+0x10],rsi
   14001112a:	push   rdi
   14001112b:	sub    rsp,0x20
   14001112f:	mov    rdi,rcx
   140011132:	add    rcx,0x110
   140011139:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140011140:	je     0x140011148
   140011142:	call   QWORD PTR [rip+0x21130]        # 0x140032278
   140011148:	lea    rcx,[rdi+0xf0]
   14001114f:	call   0x140029b48
   140011154:	mov    rsi,QWORD PTR [rdi+0xe8]
   14001115b:	test   rsi,rsi
   14001115e:	je     0x14001119c
   140011160:	mov    eax,DWORD PTR [rsi+0x8]
   140011163:	cmp    eax,0x1
   140011166:	jne    0x140011171
   140011168:	mov    DWORD PTR [rsi+0x8],0x0
   14001116f:	jmp    0x14001117e
   140011171:	or     eax,0xffffffff
   140011174:	lock xadd DWORD PTR [rsi+0x8],eax
   140011179:	sub    eax,0x1
   14001117c:	jg     0x14001119c
   14001117e:	test   rsi,rsi
   140011181:	je     0x14001119c
   140011183:	mov    rax,QWORD PTR [rsi]
   140011186:	mov    rbx,QWORD PTR [rax]
   140011189:	mov    rcx,rbx
   14001118c:	call   QWORD PTR [rip+0x21516]        # 0x1400326a8
   140011192:	mov    edx,0x1
   140011197:	mov    rcx,rsi
   14001119a:	call   rbx
   14001119c:	mov    rcx,QWORD PTR [rdi+0x80]
   1400111a3:	call   QWORD PTR [rip+0x211a7]        # 0x140032350
   1400111a9:	mov    rcx,QWORD PTR [rdi+0x70]
   1400111ad:	call   QWORD PTR [rip+0x2119d]        # 0x140032350
   1400111b3:	mov    rsi,QWORD PTR [rdi+0x60]
   1400111b7:	test   rsi,rsi
   1400111ba:	je     0x1400111d1
   1400111bc:	mov    rax,QWORD PTR [rsi]
   1400111bf:	mov    rbx,QWORD PTR [rax+0x10]
   1400111c3:	mov    rcx,rbx
   1400111c6:	call   QWORD PTR [rip+0x214dc]        # 0x1400326a8
   1400111cc:	mov    rcx,rsi
   1400111cf:	call   rbx
   1400111d1:	mov    rsi,QWORD PTR [rdi+0x50]
   1400111d5:	test   rsi,rsi
   1400111d8:	je     0x1400111ef
   1400111da:	mov    rax,QWORD PTR [rsi]
   1400111dd:	mov    rbx,QWORD PTR [rax+0x8]
   1400111e1:	mov    rcx,rbx
   1400111e4:	call   QWORD PTR [rip+0x214be]        # 0x1400326a8
   1400111ea:	mov    rcx,rsi
   1400111ed:	call   rbx
   1400111ef:	lea    rcx,[rdi+0x18]
   1400111f3:	cmp    BYTE PTR [rcx+0x28],0x0
   1400111f7:	je     0x140011203
   1400111f9:	mov    BYTE PTR [rcx+0x28],0x0
   1400111fd:	call   QWORD PTR [rip+0x21075]        # 0x140032278
   140011203:	mov    rbx,QWORD PTR [rsp+0x30]
   140011208:	mov    rsi,QWORD PTR [rsp+0x38]
   14001120d:	add    rsp,0x20
   140011211:	pop    rdi
   140011212:	ret    
   140011213:	int3   
   140011214:	int3   
   140011215:	int3   
   140011216:	int3   
   140011217:	int3   
   140011218:	int3   
   140011219:	int3   
   14001121a:	int3   
   14001121b:	int3   
   14001121c:	mov    QWORD PTR [rsp+0x8],rcx
   140011221:	push   rbx
   140011222:	push   rsi
   140011223:	push   rdi
   140011224:	push   r14
   140011226:	push   r15
   140011228:	sub    rsp,0x30
   14001122c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011235:	mov    r15,rcx
   140011238:	xor    edi,edi
   14001123a:	test   rcx,rcx
   14001123d:	jne    0x140011249
   14001123f:	mov    eax,0x80004003
   140011244:	jmp    0x14001139c
   140011249:	mov    QWORD PTR [rcx],rdi
   14001124c:	mov    r14d,0x8007000e
   140011252:	mov    DWORD PTR [rsp+0x68],r14d
   140011257:	mov    QWORD PTR [rsp+0x70],rdi
   14001125c:	mov    ecx,0x148
   140011261:	call   0x140023f10
   140011266:	mov    rsi,rax
   140011269:	mov    DWORD PTR [rax+0x10],edi
   14001126c:	xor    edx,edx
   14001126e:	lea    r8d,[rdx+0x28]
   140011272:	lea    rcx,[rax+0x18]
   140011276:	call   0x14002e2ce
   14001127b:	mov    BYTE PTR [rsi+0x40],dil
   14001127f:	lea    rax,[rip+0x235ca]        # 0x140034850
   140011286:	mov    QWORD PTR [rsi],rax
   140011289:	lea    rax,[rip+0x23570]        # 0x140034800
   140011290:	mov    QWORD PTR [rsi+0x8],rax
   140011294:	mov    QWORD PTR [rsi+0x48],rdi
   140011298:	mov    QWORD PTR [rsi+0x50],rdi
   14001129c:	mov    QWORD PTR [rsi+0x60],rdi
   1400112a0:	mov    BYTE PTR [rsi+0x68],dil
   1400112a4:	mov    QWORD PTR [rsi+0x70],rdi
   1400112a8:	mov    QWORD PTR [rsi+0x80],rdi
   1400112af:	mov    QWORD PTR [rsi+0xe8],rdi
   1400112b6:	mov    DWORD PTR [rsi+0xf8],edi
   1400112bc:	lea    rax,[rip+0x23a5d]        # 0x140034d20
   1400112c3:	mov    QWORD PTR [rsi+0xf0],rax
   1400112ca:	mov    QWORD PTR [rsi+0x100],rdi
   1400112d1:	mov    BYTE PTR [rsi+0x108],dil
   1400112d8:	mov    BYTE PTR [rsi+0x109],dil
   1400112df:	mov    DWORD PTR [rsi+0x11c],0xf12192e
   1400112e9:	mov    DWORD PTR [rsi+0x138],edi
   1400112ef:	mov    WORD PTR [rsi+0x13f],di
   1400112f6:	xor    eax,eax
   1400112f8:	mov    QWORD PTR [rsi+0x90],rax
   1400112ff:	mov    QWORD PTR [rsi+0x98],rax
   140011306:	mov    QWORD PTR [rsi+0xe0],rax
   14001130d:	lea    rcx,[rsi+0xa0]
   140011314:	xor    edx,edx
   140011316:	lea    r8d,[rax+0x40]
   14001131a:	call   0x14002e2ce
   14001131f:	lea    rax,[rip+0x2348a]        # 0x1400347b0
   140011326:	mov    QWORD PTR [rsi],rax
   140011329:	lea    rax,[rip+0x23430]        # 0x140034760
   140011330:	mov    QWORD PTR [rsi+0x8],rax
   140011334:	mov    rax,QWORD PTR [rip+0x3ec9d]        # 0x14004ffd8
   14001133b:	lock inc DWORD PTR [rax+0xc]
   14001133f:	mov    QWORD PTR [rsp+0x70],rsi
   140011344:	jmp    0x140011357
   140011346:	xor    edi,edi
   140011348:	mov    r15,QWORD PTR [rsp+0x60]
   14001134d:	mov    r14d,DWORD PTR [rsp+0x68]
   140011352:	mov    rsi,QWORD PTR [rsp+0x70]
   140011357:	test   rsi,rsi
   14001135a:	je     0x140011396
   14001135c:	lea    rcx,[rsi+0x18]
   140011360:	call   0x140004ee4
   140011365:	mov    r14d,eax
   140011368:	test   eax,eax
   14001136a:	js     0x140011370
   14001136c:	mov    BYTE PTR [rsi+0x40],0x1
   140011370:	cmovns r14d,edi
   140011374:	test   r14d,r14d
   140011377:	je     0x140011396
   140011379:	mov    r8,QWORD PTR [rsi]
   14001137c:	mov    rbx,QWORD PTR [r8+0x40]
   140011380:	mov    rcx,rbx
   140011383:	call   QWORD PTR [rip+0x2131f]        # 0x1400326a8
   140011389:	mov    edx,0x1
   14001138e:	mov    rcx,rsi
   140011391:	call   rbx
   140011393:	mov    rsi,rdi
   140011396:	mov    QWORD PTR [r15],rsi
   140011399:	mov    eax,r14d
   14001139c:	add    rsp,0x30
   1400113a0:	pop    r15
   1400113a2:	pop    r14
   1400113a4:	pop    rdi
   1400113a5:	pop    rsi
   1400113a6:	pop    rbx
   1400113a7:	ret    
   1400113a8:	int3   
   1400113a9:	int3   
   1400113aa:	int3   
   1400113ab:	int3   
   1400113ac:	int3   
   1400113ad:	int3   
   1400113ae:	int3   
   1400113af:	int3   
   1400113b0:	sub    rcx,0x8
   1400113b4:	jmp    0x140011030
   1400113b9:	int3   
   1400113ba:	int3   
   1400113bb:	int3   
   1400113bc:	int3   
   1400113bd:	int3   
   1400113be:	int3   
   1400113bf:	int3   
   1400113c0:	sub    rcx,0x8
   1400113c4:	jmp    0x140011010
   1400113c9:	int3   
   1400113ca:	int3   
   1400113cb:	int3   
   1400113cc:	int3   
   1400113cd:	int3   
   1400113ce:	int3   
   1400113cf:	int3   
   1400113d0:	mov    rax,rsp
   1400113d3:	mov    QWORD PTR [rax+0x8],rbx
   1400113d7:	mov    QWORD PTR [rax+0x10],rbp
   1400113db:	mov    QWORD PTR [rax+0x18],rsi
   1400113df:	mov    QWORD PTR [rax+0x20],rdi
   1400113e3:	push   r12
   1400113e5:	push   r14
   1400113e7:	push   r15
   1400113e9:	sub    rsp,0x20
   1400113ed:	xor    ebx,ebx
   1400113ef:	mov    r12,rdx
   1400113f2:	mov    rsi,rcx
   1400113f5:	test   rdx,rdx
   1400113f8:	je     0x1400114ce
   1400113fe:	or     rdi,0xffffffffffffffff
   140011402:	inc    rdi
   140011405:	cmp    WORD PTR [rdx+rdi*2],bx
   140011409:	jne    0x140011402
   14001140b:	cmp    QWORD PTR [rcx],rbx
   14001140e:	je     0x140011418
   140011410:	test   edi,edi
   140011412:	je     0x1400114ce
   140011418:	mov    rcx,QWORD PTR [rcx]
   14001141b:	call   QWORD PTR [rip+0x20f4f]        # 0x140032370
   140011421:	movsxd r15,eax
   140011424:	lea    ebp,[r15+rdi*1]
   140011428:	cmp    ebp,r15d
   14001142b:	jge    0x140011437
   14001142d:	mov    ebx,0x8007000e
   140011432:	jmp    0x1400114ce
   140011437:	mov    edx,ebp
   140011439:	xor    ecx,ecx
   14001143b:	call   QWORD PTR [rip+0x20f37]        # 0x140032378
   140011441:	mov    r14,rax
   140011444:	test   rax,rax
   140011447:	je     0x14001142d
   140011449:	mov    rcx,QWORD PTR [rsi]
   14001144c:	call   QWORD PTR [rip+0x20f1e]        # 0x140032370
   140011452:	test   eax,eax
   140011454:	je     0x14001148a
   140011456:	mov    r8,QWORD PTR [rsi]
   140011459:	mov    r9,r15
   14001145c:	movsxd rdx,ebp
   14001145f:	add    r9,r9
   140011462:	add    rdx,rdx
   140011465:	mov    rcx,r14
   140011468:	call   QWORD PTR [rip+0x21152]        # 0x1400325c0
   14001146e:	test   eax,eax
   140011470:	je     0x14001148a
   140011472:	cmp    eax,0xc
   140011475:	je     0x140011505
   14001147b:	cmp    eax,0x16
   14001147e:	je     0x1400114fa
   140011480:	cmp    eax,0x22
   140011483:	je     0x1400114fa
   140011485:	cmp    eax,0x50
   140011488:	jne    0x1400114ef
   14001148a:	movsxd rdi,edi
   14001148d:	lea    rcx,[r14+r15*2]
   140011491:	mov    r8,r12
   140011494:	lea    rdx,[rdi+rdi*1]
   140011498:	mov    r9,rdx
   14001149b:	call   QWORD PTR [rip+0x2111f]        # 0x1400325c0
   1400114a1:	test   eax,eax
   1400114a3:	je     0x1400114b9
   1400114a5:	cmp    eax,0xc
   1400114a8:	je     0x140011526
   1400114aa:	cmp    eax,0x16
   1400114ad:	je     0x14001151b
   1400114af:	cmp    eax,0x22
   1400114b2:	je     0x14001151b
   1400114b4:	cmp    eax,0x50
   1400114b7:	jne    0x140011510
   1400114b9:	lea    rax,[rdi+r15*1]
   1400114bd:	mov    WORD PTR [r14+rax*2],bx
   1400114c2:	mov    rcx,QWORD PTR [rsi]
   1400114c5:	call   QWORD PTR [rip+0x20e85]        # 0x140032350
   1400114cb:	mov    QWORD PTR [rsi],r14
   1400114ce:	mov    rbp,QWORD PTR [rsp+0x48]
   1400114d3:	mov    eax,ebx
   1400114d5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400114da:	mov    rsi,QWORD PTR [rsp+0x50]
   1400114df:	mov    rdi,QWORD PTR [rsp+0x58]
   1400114e4:	add    rsp,0x20
   1400114e8:	pop    r15
   1400114ea:	pop    r14
   1400114ec:	pop    r12
   1400114ee:	ret    
   1400114ef:	mov    ecx,0x80004005
   1400114f4:	call   0x140005d50
   1400114f9:	int3   
   1400114fa:	mov    ecx,0x80070057
   1400114ff:	call   0x140005d50
   140011504:	int3   
   140011505:	mov    ecx,0x8007000e
   14001150a:	call   0x140005d50
   14001150f:	int3   
   140011510:	mov    ecx,0x80004005
   140011515:	call   0x140005d50
   14001151a:	int3   
   14001151b:	mov    ecx,0x80070057
   140011520:	call   0x140005d50
   140011525:	int3   
   140011526:	mov    ecx,0x8007000e
   14001152b:	call   0x140005d50
   140011530:	int3   
   140011531:	int3   
   140011532:	int3   
   140011533:	int3   
   140011534:	int3   
   140011535:	int3   
   140011536:	int3   
   140011537:	int3   
   140011538:	mov    QWORD PTR [rsp+0x8],rcx
   14001153d:	push   rbx
   14001153e:	push   rsi
   14001153f:	push   rdi
   140011540:	sub    rsp,0x40
   140011544:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001154d:	mov    rdi,rcx
   140011550:	xor    esi,esi
   140011552:	mov    DWORD PTR [rcx+0x8],esi
   140011555:	lea    rax,[rip+0x2333c]        # 0x140034898
   14001155c:	mov    QWORD PTR [rcx],rax
   14001155f:	mov    QWORD PTR [rcx+0x10],rsi
   140011563:	mov    QWORD PTR [rcx+0x18],rsi
   140011567:	mov    QWORD PTR [rcx+0x20],rsi
   14001156b:	mov    QWORD PTR [rcx+0x98],rsi
   140011572:	mov    QWORD PTR [rcx+0xa0],rsi
   140011579:	mov    QWORD PTR [rcx+0xa8],rsi
   140011580:	lea    rbx,[rcx+0xb0]
   140011587:	mov    QWORD PTR [rsp+0x78],rbx
   14001158c:	xor    eax,eax
   14001158e:	mov    BYTE PTR [rsp+0x68],al
   140011592:	mov    QWORD PTR [rbx],rsi
   140011595:	mov    QWORD PTR [rbx+0x8],rsi
   140011599:	xor    r8d,r8d
   14001159c:	xor    edx,edx
   14001159e:	call   0x140012294
   1400115a3:	mov    QWORD PTR [rbx],rax
   1400115a6:	lea    r10,[rbx+0x10]
   1400115aa:	mov    QWORD PTR [r10],rsi
   1400115ad:	mov    QWORD PTR [r10+0x8],rsi
   1400115b1:	mov    QWORD PTR [r10+0x10],rsi
   1400115b5:	mov    DWORD PTR [rbx+0x38],0x3f800000
   1400115bc:	mov    rax,QWORD PTR [rbx]
   1400115bf:	mov    QWORD PTR [rsp+0x70],rax
   1400115c4:	mov    rdx,QWORD PTR [r10+0x8]
   1400115c8:	mov    rcx,QWORD PTR [r10]
   1400115cb:	cmp    rcx,rcx
   1400115ce:	jne    0x1400115d5
   1400115d0:	cmp    rdx,rdx
   1400115d3:	je     0x14001160d
   1400115d5:	cmp    rcx,rdx
   1400115d8:	je     0x140011611
   1400115da:	mov    r9,rsi
   1400115dd:	mov    r8,rdx
   1400115e0:	sub    r8,rdx
   1400115e3:	add    r8,0x7
   1400115e7:	shr    r8,0x3
   1400115eb:	cmp    rdx,rdx
   1400115ee:	cmova  r8,rsi
   1400115f2:	test   r8,r8
   1400115f5:	je     0x14001160d
   1400115f7:	sub    rdx,rcx
   1400115fa:	mov    rax,QWORD PTR [rcx+rdx*1]
   1400115fe:	mov    QWORD PTR [rcx],rax
   140011601:	add    rcx,0x8
   140011605:	inc    r9
   140011608:	cmp    r9,r8
   14001160b:	jne    0x1400115fa
   14001160d:	mov    QWORD PTR [r10+0x8],rcx
   140011611:	lea    rax,[rsp+0x70]
   140011616:	mov    QWORD PTR [rsp+0x20],rax
   14001161b:	mov    r9d,0x10
   140011621:	mov    r8,QWORD PTR [r10]
   140011624:	lea    rdx,[rsp+0x38]
   140011629:	mov    rcx,r10
   14001162c:	call   0x14000dfb4
   140011631:	mov    QWORD PTR [rbx+0x28],0x7
   140011639:	mov    QWORD PTR [rbx+0x30],0x8
   140011641:	lea    rbx,[rdi+0xf0]
   140011648:	mov    DWORD PTR [rbx+0xc],0xf12192e
   14001164f:	or     QWORD PTR [rdi+0x118],0xffffffffffffffff
   140011657:	mov    DWORD PTR [rdi+0x128],esi
   14001165d:	lea    rax,[rip+0x236bc]        # 0x140034d20
   140011664:	mov    QWORD PTR [rdi+0x120],rax
   14001166b:	mov    QWORD PTR [rdi+0x130],rsi
   140011672:	mov    BYTE PTR [rdi+0x138],sil
   140011679:	mov    BYTE PTR [rdi+0x139],sil
   140011680:	mov    WORD PTR [rdi+0x140],0x100
   140011689:	mov    BYTE PTR [rdi+0x142],0x1
   140011690:	xor    eax,eax
   140011692:	mov    QWORD PTR [rdi+0x28],rax
   140011696:	mov    QWORD PTR [rdi+0x30],rax
   14001169a:	mov    QWORD PTR [rdi+0x38],rax
   14001169e:	mov    QWORD PTR [rdi+0x40],rax
   1400116a2:	mov    QWORD PTR [rdi+0x48],rax
   1400116a6:	lea    rcx,[rdi+0x50]
   1400116aa:	xor    edx,edx
   1400116ac:	lea    r8d,[rax+0x44]
   1400116b0:	call   0x14002e2ce
   1400116b5:	mov    DWORD PTR [rbx+0xc],esi
   1400116b8:	xor    edx,edx
   1400116ba:	mov    rcx,rbx
   1400116bd:	call   QWORD PTR [rip+0x20bad]        # 0x140032270
   1400116c3:	nop
   1400116c4:	mov    rax,rdi
   1400116c7:	add    rsp,0x40
   1400116cb:	pop    rdi
   1400116cc:	pop    rsi
   1400116cd:	pop    rbx
   1400116ce:	ret    
   1400116cf:	int3   
   1400116d0:	int3   
   1400116d1:	int3   
   1400116d2:	int3   
   1400116d3:	int3   
   1400116d4:	int3   
   1400116d5:	int3   
   1400116d6:	int3   
   1400116d7:	int3   
   1400116d8:	int3   
   1400116d9:	int3   
   1400116da:	int3   
   1400116db:	int3   
   1400116dc:	int3   
   1400116dd:	int3   
   1400116de:	int3   
   1400116df:	int3   
   1400116e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400116e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400116ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400116ef:	push   rdi
   1400116f0:	sub    rsp,0x20
   1400116f4:	lea    rax,[rip+0x2319d]        # 0x140034898
   1400116fb:	mov    rdi,rcx
   1400116fe:	mov    QWORD PTR [rcx],rax
   140011701:	mov    ebp,edx
   140011703:	add    rcx,0x120
   14001170a:	call   0x140029b48
   14001170f:	mov    rcx,QWORD PTR [rdi+0x118]
   140011716:	cmp    rcx,0xffffffffffffffff
   14001171a:	je     0x14001172a
   14001171c:	call   QWORD PTR [rip+0x20a36]        # 0x140032158
   140011722:	or     QWORD PTR [rdi+0x118],0xffffffffffffffff
   14001172a:	lea    rcx,[rdi+0xf0]
   140011731:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140011738:	je     0x140011740
   14001173a:	call   QWORD PTR [rip+0x20b38]        # 0x140032278
   140011740:	lea    rbx,[rdi+0xb0]
   140011747:	mov    rcx,QWORD PTR [rbx+0x10]
   14001174b:	test   rcx,rcx
   14001174e:	je     0x140011765
   140011750:	call   QWORD PTR [rip+0x20e72]        # 0x1400325c8
   140011756:	and    QWORD PTR [rbx+0x10],0x0
   14001175b:	and    QWORD PTR [rbx+0x18],0x0
   140011760:	and    QWORD PTR [rbx+0x20],0x0
   140011765:	mov    rcx,rbx
   140011768:	call   0x140012200
   14001176d:	mov    rsi,QWORD PTR [rdi+0xa8]
   140011774:	test   rsi,rsi
   140011777:	je     0x1400117b5
   140011779:	mov    eax,DWORD PTR [rsi+0x8]
   14001177c:	cmp    eax,0x1
   14001177f:	jne    0x14001178a
   140011781:	mov    DWORD PTR [rsi+0x8],0x0
   140011788:	jmp    0x140011797
   14001178a:	or     eax,0xffffffff
   14001178d:	lock xadd DWORD PTR [rsi+0x8],eax
   140011792:	sub    eax,0x1
   140011795:	jg     0x1400117b5
   140011797:	test   rsi,rsi
   14001179a:	je     0x1400117b5
   14001179c:	mov    rax,QWORD PTR [rsi]
   14001179f:	mov    rbx,QWORD PTR [rax]
   1400117a2:	mov    rcx,rbx
   1400117a5:	call   QWORD PTR [rip+0x20efd]        # 0x1400326a8
   1400117ab:	mov    edx,0x1
   1400117b0:	mov    rcx,rsi
   1400117b3:	call   rbx
   1400117b5:	mov    rsi,QWORD PTR [rdi+0xa0]
   1400117bc:	test   rsi,rsi
   1400117bf:	je     0x1400117d6
   1400117c1:	mov    rax,QWORD PTR [rsi]
   1400117c4:	mov    rbx,QWORD PTR [rax+0x8]
   1400117c8:	mov    rcx,rbx
   1400117cb:	call   QWORD PTR [rip+0x20ed7]        # 0x1400326a8
   1400117d1:	mov    rcx,rsi
   1400117d4:	call   rbx
   1400117d6:	mov    rsi,QWORD PTR [rdi+0x98]
   1400117dd:	test   rsi,rsi
   1400117e0:	je     0x1400117f7
   1400117e2:	mov    rax,QWORD PTR [rsi]
   1400117e5:	mov    rbx,QWORD PTR [rax+0x10]
   1400117e9:	mov    rcx,rbx
   1400117ec:	call   QWORD PTR [rip+0x20eb6]        # 0x1400326a8
   1400117f2:	mov    rcx,rsi
   1400117f5:	call   rbx
   1400117f7:	lea    rax,[rip+0x230aa]        # 0x1400348a8
   1400117fe:	mov    QWORD PTR [rdi],rax
   140011801:	test   bpl,0x1
   140011805:	je     0x140011810
   140011807:	mov    rcx,rdi
   14001180a:	call   QWORD PTR [rip+0x20db8]        # 0x1400325c8
   140011810:	mov    rbx,QWORD PTR [rsp+0x30]
   140011815:	mov    rax,rdi
   140011818:	mov    rbp,QWORD PTR [rsp+0x38]
   14001181d:	mov    rsi,QWORD PTR [rsp+0x40]
   140011822:	add    rsp,0x20
   140011826:	pop    rdi
   140011827:	ret    
   140011828:	int3   
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	int3   
   14001182d:	int3   
   14001182e:	int3   
   14001182f:	int3   
   140011830:	rex push rbx
   140011832:	sub    rsp,0x20
   140011836:	mov    rbx,rcx
   140011839:	mov    rcx,QWORD PTR [rcx+0x10]
   14001183d:	test   rcx,rcx
   140011840:	je     0x140011857
   140011842:	call   QWORD PTR [rip+0x20d80]        # 0x1400325c8
   140011848:	and    QWORD PTR [rbx+0x10],0x0
   14001184d:	and    QWORD PTR [rbx+0x18],0x0
   140011852:	and    QWORD PTR [rbx+0x20],0x0
   140011857:	mov    rcx,rbx
   14001185a:	add    rsp,0x20
   14001185e:	pop    rbx
   14001185f:	jmp    0x140012200
   140011864:	int3   
   140011865:	int3   
   140011866:	int3   
   140011867:	int3   
   140011868:	int3   
   140011869:	int3   
   14001186a:	int3   
   14001186b:	int3   
   14001186c:	mov    QWORD PTR [rsp+0x10],rbx
   140011871:	push   rbp
   140011872:	push   rsi
   140011873:	push   rdi
   140011874:	push   r12
   140011876:	push   r13
   140011878:	push   r14
   14001187a:	push   r15
   14001187c:	mov    rbp,rsp
   14001187f:	sub    rsp,0x40
   140011883:	lea    r13,[rcx+0xf0]
   14001188a:	mov    rsi,rcx
   14001188d:	mov    rcx,r13
   140011890:	mov    r14,rdx
   140011893:	call   QWORD PTR [rip+0x2086f]        # 0x140032108
   140011899:	mov    ecx,r14d
   14001189c:	mov    ebx,0x7fffffff
   1400118a1:	xor    ecx,0xdeadbeef
   1400118a7:	mov    edx,0x1f31d
   1400118ac:	and    ecx,ebx
   1400118ae:	add    rsi,0xb0
   1400118b5:	call   QWORD PTR [rip+0x20cfd]        # 0x1400325b8
   1400118bb:	mov    QWORD PTR [rbp+0x40],rax
   1400118bf:	shr    rax,0x20
   1400118c3:	imul   ecx,eax,0x41a7
   1400118c9:	imul   eax,DWORD PTR [rbp+0x40],0xb14
   1400118d0:	sub    ecx,eax
   1400118d2:	jns    0x1400118d6
   1400118d4:	add    ecx,ebx
   1400118d6:	mov    rdx,QWORD PTR [rsi+0x28]
   1400118da:	movsxd rcx,ecx
   1400118dd:	and    rcx,rdx
   1400118e0:	cmp    QWORD PTR [rsi+0x30],rcx
   1400118e4:	ja     0x1400118f3
   1400118e6:	shr    rdx,1
   1400118e9:	or     rax,0xffffffffffffffff
   1400118ed:	sub    rax,rdx
   1400118f0:	add    rcx,rax
   1400118f3:	mov    rbx,rcx
   1400118f6:	lea    r12,[rsi+0x10]
   1400118fa:	mov    rdx,QWORD PTR [r12]
   1400118fe:	lea    r8,[rcx+rcx*1]
   140011902:	mov    rcx,QWORD PTR [rsi]
   140011905:	add    rbx,rbx
   140011908:	mov    rbx,QWORD PTR [rdx+rbx*8]
   14001190c:	cmp    QWORD PTR [rdx+r8*8],rcx
   140011910:	jne    0x140011917
   140011912:	mov    rax,rcx
   140011915:	jmp    0x14001191f
   140011917:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001191c:	mov    rax,QWORD PTR [rax]
   14001191f:	cmp    rbx,rax
   140011922:	je     0x14001195a
   140011924:	cmp    QWORD PTR [rbx+0x10],r14
   140011928:	jae    0x14001192f
   14001192a:	mov    rbx,QWORD PTR [rbx]
   14001192d:	jmp    0x14001190c
   14001192f:	mov    rdi,rbx
   140011932:	cmp    QWORD PTR [rdx+r8*8],rcx
   140011936:	jne    0x14001193d
   140011938:	mov    rax,rcx
   14001193b:	jmp    0x140011945
   14001193d:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   140011942:	mov    rax,QWORD PTR [rax]
   140011945:	cmp    rbx,rax
   140011948:	je     0x140011955
   14001194a:	cmp    r14,QWORD PTR [rbx+0x10]
   14001194e:	jb     0x140011955
   140011950:	mov    rbx,QWORD PTR [rbx]
   140011953:	jmp    0x140011932
   140011955:	cmp    rdi,rbx
   140011958:	jne    0x140011973
   14001195a:	mov    QWORD PTR [rbp-0x10],rcx
   14001195e:	mov    QWORD PTR [rbp-0x8],rcx
   140011962:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140011966:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001196b:	mov    rbx,QWORD PTR [rbp-0x8]
   14001196f:	mov    rdi,QWORD PTR [rbp-0x10]
   140011973:	mov    rax,rdi
   140011976:	cmp    rdi,rbx
   140011979:	je     0x140011983
   14001197b:	mov    rax,QWORD PTR [rax]
   14001197e:	cmp    rax,rbx
   140011981:	jne    0x14001197b
   140011983:	mov    r14,QWORD PTR [rcx]
   140011986:	cmp    rdi,r14
   140011989:	jne    0x140011a2d
   14001198f:	cmp    rbx,rcx
   140011992:	jne    0x140011a2d
   140011998:	mov    QWORD PTR [rcx],rcx
   14001199b:	mov    rax,QWORD PTR [rsi]
   14001199e:	mov    QWORD PTR [rax+0x8],rax
   1400119a2:	and    QWORD PTR [rsi+0x8],0x0
   1400119a7:	cmp    r14,QWORD PTR [rsi]
   1400119aa:	je     0x1400119de
   1400119ac:	mov    rdi,QWORD PTR [r14+0x18]
   1400119b0:	mov    r15,QWORD PTR [r14]
   1400119b3:	test   rdi,rdi
   1400119b6:	je     0x1400119cd
   1400119b8:	mov    rax,QWORD PTR [rdi]
   1400119bb:	mov    rbx,QWORD PTR [rax+0x8]
   1400119bf:	mov    rcx,rbx
   1400119c2:	call   QWORD PTR [rip+0x20ce0]        # 0x1400326a8
   1400119c8:	mov    rcx,rdi
   1400119cb:	call   rbx
   1400119cd:	mov    rcx,r14
   1400119d0:	call   QWORD PTR [rip+0x20bf2]        # 0x1400325c8
   1400119d6:	mov    r14,r15
   1400119d9:	cmp    r15,QWORD PTR [rsi]
   1400119dc:	jne    0x1400119ac
   1400119de:	mov    rax,QWORD PTR [rsi]
   1400119e1:	lea    rdx,[rbp+0x50]
   1400119e5:	mov    r8,QWORD PTR [r12]
   1400119e9:	mov    r9d,0x10
   1400119ef:	mov    QWORD PTR [rbp+0x40],rax
   1400119f3:	mov    rcx,r12
   1400119f6:	lea    rax,[rbp+0x40]
   1400119fa:	mov    QWORD PTR [r12+0x8],r8
   1400119ff:	mov    QWORD PTR [rsp+0x20],rax
   140011a04:	call   0x14000dfb4
   140011a09:	mov    QWORD PTR [rsi+0x28],0x7
   140011a11:	mov    QWORD PTR [rsi+0x30],0x8
   140011a19:	jmp    0x140011a32
   140011a1b:	mov    r8,rdi
   140011a1e:	lea    rdx,[rbp+0x40]
   140011a22:	mov    rdi,QWORD PTR [rdi]
   140011a25:	mov    rcx,rsi
   140011a28:	call   0x1400120a8
   140011a2d:	cmp    rdi,rbx
   140011a30:	jne    0x140011a1b
   140011a32:	mov    rcx,r13
   140011a35:	mov    rbx,QWORD PTR [rsp+0x88]
   140011a3d:	add    rsp,0x40
   140011a41:	pop    r15
   140011a43:	pop    r14
   140011a45:	pop    r13
   140011a47:	pop    r12
   140011a49:	pop    rdi
   140011a4a:	pop    rsi
   140011a4b:	pop    rbp
   140011a4c:	rex.W jmp QWORD PTR [rip+0x206a5]        # 0x1400320f8
   140011a53:	int3   
   140011a54:	int3   
   140011a55:	int3   
   140011a56:	int3   
   140011a57:	int3   
   140011a58:	int3   
   140011a59:	int3   
   140011a5a:	int3   
   140011a5b:	int3   
   140011a5c:	rex push rbp
   140011a5e:	push   rsi
   140011a5f:	push   rdi
   140011a60:	sub    rsp,0x30
   140011a64:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011a6d:	mov    QWORD PTR [rsp+0x58],rbx
   140011a72:	mov    rsi,rdx
   140011a75:	lea    rbx,[rcx+0x120]
   140011a7c:	mov    QWORD PTR [rsp+0x60],rbx
   140011a81:	mov    rcx,rbx
   140011a84:	call   0x140029ab0
   140011a89:	xor    ebp,ebp
   140011a8b:	test   eax,eax
   140011a8d:	jns    0x140011a97
   140011a8f:	mov    ecx,eax
   140011a91:	call   0x140029d64
   140011a96:	nop
   140011a97:	mov    WORD PTR [rsp+0x50],bp
   140011a9c:	mov    rax,QWORD PTR [rsi]
   140011a9f:	mov    rdi,QWORD PTR [rax+0x18]
   140011aa3:	mov    rcx,rdi
   140011aa6:	call   QWORD PTR [rip+0x20bfc]        # 0x1400326a8
   140011aac:	lea    rdx,[rsp+0x50]
   140011ab1:	mov    rcx,rsi
   140011ab4:	call   rdi
   140011ab6:	test   eax,eax
   140011ab8:	jns    0x140011ac2
   140011aba:	mov    ecx,eax
   140011abc:	call   0x140029d64
   140011ac1:	int3   
   140011ac2:	cmp    WORD PTR [rsp+0x50],bp
   140011ac7:	sete   dil
   140011acb:	or     ecx,0xffffffff
   140011ace:	lock xadd DWORD PTR [rbx+0x8],ecx
   140011ad3:	dec    ecx
   140011ad5:	cmp    ecx,0x80000000
   140011adb:	jne    0x140011ae7
   140011add:	mov    rcx,QWORD PTR [rsp+0x60]
   140011ae2:	call   0x140029c90
   140011ae7:	mov    al,dil
   140011aea:	mov    rbx,QWORD PTR [rsp+0x58]
   140011aef:	add    rsp,0x30
   140011af3:	pop    rdi
   140011af4:	pop    rsi
   140011af5:	pop    rbp
   140011af6:	ret    
   140011af7:	int3   
   140011af8:	int3   
   140011af9:	int3   
   140011afa:	int3   
   140011afb:	int3   
   140011afc:	int3   
   140011afd:	int3   
   140011afe:	int3   
   140011aff:	int3   
   140011b00:	rex push rbp
   140011b02:	push   rsi
   140011b03:	push   rdi
   140011b04:	sub    rsp,0x30
   140011b08:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140011b11:	mov    QWORD PTR [rsp+0x58],rbx
   140011b16:	mov    ebp,r8d
   140011b19:	mov    rsi,rdx
   140011b1c:	lea    rdi,[rcx+0x120]
   140011b23:	mov    QWORD PTR [rsp+0x20],rdi
   140011b28:	mov    rcx,rdi
   140011b2b:	call   0x140029ab0
   140011b30:	test   eax,eax
   140011b32:	jns    0x140011b3c
   140011b34:	mov    ecx,eax
   140011b36:	call   0x140029d64
   140011b3b:	nop
   140011b3c:	and    QWORD PTR [rsp+0x68],0x0
   140011b42:	mov    rax,QWORD PTR [rsi]
   140011b45:	mov    rbx,QWORD PTR [rax]
   140011b48:	mov    rcx,rbx
   140011b4b:	call   QWORD PTR [rip+0x20b57]        # 0x1400326a8
   140011b51:	lea    r8,[rsp+0x68]
   140011b56:	lea    rdx,[rip+0x2563b]        # 0x140037198
   140011b5d:	mov    rcx,rsi
   140011b60:	call   rbx
   140011b62:	test   eax,eax
   140011b64:	jns    0x140011b6e
   140011b66:	mov    ecx,eax
   140011b68:	call   0x140029d64
   140011b6d:	int3   
   140011b6e:	and    DWORD PTR [rsp+0x50],0x0
   140011b73:	mov    rbx,QWORD PTR [rsp+0x68]
   140011b78:	mov    rax,QWORD PTR [rbx]
   140011b7b:	mov    rsi,QWORD PTR [rax+0x18]
   140011b7f:	mov    rcx,rsi
   140011b82:	call   QWORD PTR [rip+0x20b20]        # 0x1400326a8
   140011b88:	lea    r8,[rsp+0x50]
   140011b8d:	mov    edx,ebp
   140011b8f:	mov    rcx,rbx
   140011b92:	call   rsi
   140011b94:	mov    ebp,eax
   140011b96:	mov    rbx,QWORD PTR [rsp+0x68]
   140011b9b:	test   rbx,rbx
   140011b9e:	je     0x140011bbc
   140011ba0:	mov    rcx,QWORD PTR [rbx]
   140011ba3:	mov    rsi,QWORD PTR [rcx+0x10]
   140011ba7:	mov    rcx,rsi
   140011baa:	call   QWORD PTR [rip+0x20af8]        # 0x1400326a8
   140011bb0:	mov    rcx,rbx
   140011bb3:	call   rsi
   140011bb5:	xor    ebx,ebx
   140011bb7:	mov    QWORD PTR [rsp+0x68],rbx
   140011bbc:	test   ebp,ebp
   140011bbe:	jns    0x140011bc8
   140011bc0:	mov    ecx,ebp
   140011bc2:	call   0x140029d64
   140011bc7:	int3   
   140011bc8:	mov    ebp,DWORD PTR [rsp+0x50]
   140011bcc:	test   rbx,rbx
   140011bcf:	je     0x140011be7
   140011bd1:	mov    rax,QWORD PTR [rbx]
   140011bd4:	mov    rsi,QWORD PTR [rax+0x10]
   140011bd8:	mov    rcx,rsi
   140011bdb:	call   QWORD PTR [rip+0x20ac7]        # 0x1400326a8
   140011be1:	mov    rcx,rbx
   140011be4:	call   rsi
   140011be6:	nop
   140011be7:	or     ecx,0xffffffff
   140011bea:	lock xadd DWORD PTR [rdi+0x8],ecx
   140011bef:	dec    ecx
   140011bf1:	cmp    ecx,0x80000000
   140011bf7:	jne    0x140011c03
   140011bf9:	mov    rcx,QWORD PTR [rsp+0x20]
   140011bfe:	call   0x140029c90
   140011c03:	mov    eax,ebp
   140011c05:	mov    rbx,QWORD PTR [rsp+0x58]
   140011c0a:	add    rsp,0x30
   140011c0e:	pop    rdi
   140011c0f:	pop    rsi
   140011c10:	pop    rbp
   140011c11:	ret    
   140011c12:	int3   
   140011c13:	int3   
   140011c14:	int3   
   140011c15:	int3   
   140011c16:	int3   
   140011c17:	int3   
   140011c18:	mov    rax,rsp
   140011c1b:	push   rsi
   140011c1c:	push   rdi
   140011c1d:	push   r14
   140011c1f:	sub    rsp,0x30
   140011c23:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140011c2b:	mov    QWORD PTR [rax+0x10],rbx
   140011c2f:	mov    QWORD PTR [rax+0x18],rbp
   140011c33:	mov    ebp,r9d
   140011c36:	mov    r14d,r8d
   140011c39:	mov    rsi,rdx
   140011c3c:	lea    rdi,[rcx+0x120]
   140011c43:	mov    QWORD PTR [rax-0x28],rdi
   140011c47:	mov    rcx,rdi
   140011c4a:	call   0x140029ab0
   140011c4f:	test   eax,eax
   140011c51:	jns    0x140011c5b
   140011c53:	mov    ecx,eax
   140011c55:	call   0x140029d64
   140011c5a:	nop
   140011c5b:	and    QWORD PTR [rsp+0x50],0x0
   140011c61:	mov    rax,QWORD PTR [rsi]
   140011c64:	mov    rbx,QWORD PTR [rax]
   140011c67:	mov    rcx,rbx
   140011c6a:	call   QWORD PTR [rip+0x20a38]        # 0x1400326a8
   140011c70:	lea    r8,[rsp+0x50]
   140011c75:	lea    rdx,[rip+0x2551c]        # 0x140037198
   140011c7c:	mov    rcx,rsi
   140011c7f:	call   rbx
   140011c81:	test   eax,eax
   140011c83:	jns    0x140011c8d
   140011c85:	mov    ecx,eax
   140011c87:	call   0x140029d64
   140011c8c:	int3   
   140011c8d:	mov    rbx,QWORD PTR [rsp+0x50]
   140011c92:	mov    rax,QWORD PTR [rbx]
   140011c95:	mov    rsi,QWORD PTR [rax+0x20]
   140011c99:	mov    rcx,rsi
   140011c9c:	call   QWORD PTR [rip+0x20a06]        # 0x1400326a8
   140011ca2:	mov    r8d,ebp
   140011ca5:	mov    edx,r14d
   140011ca8:	mov    rcx,rbx
   140011cab:	call   rsi
   140011cad:	mov    ebp,eax
   140011caf:	mov    rbx,QWORD PTR [rsp+0x50]
   140011cb4:	test   rbx,rbx
   140011cb7:	je     0x140011cd5
   140011cb9:	mov    rcx,QWORD PTR [rbx]
   140011cbc:	mov    rsi,QWORD PTR [rcx+0x10]
   140011cc0:	mov    rcx,rsi
   140011cc3:	call   QWORD PTR [rip+0x209df]        # 0x1400326a8
   140011cc9:	mov    rcx,rbx
   140011ccc:	call   rsi
   140011cce:	xor    ebx,ebx
   140011cd0:	mov    QWORD PTR [rsp+0x50],rbx
   140011cd5:	test   ebp,ebp
   140011cd7:	jns    0x140011ce1
   140011cd9:	mov    ecx,ebp
   140011cdb:	call   0x140029d64
   140011ce0:	nop
   140011ce1:	test   rbx,rbx
   140011ce4:	je     0x140011cfc
   140011ce6:	mov    rax,QWORD PTR [rbx]
   140011ce9:	mov    rsi,QWORD PTR [rax+0x10]
   140011ced:	mov    rcx,rsi
   140011cf0:	call   QWORD PTR [rip+0x209b2]        # 0x1400326a8
   140011cf6:	mov    rcx,rbx
   140011cf9:	call   rsi
   140011cfb:	nop
   140011cfc:	or     eax,0xffffffff
   140011cff:	lock xadd DWORD PTR [rdi+0x8],eax
   140011d04:	dec    eax
   140011d06:	cmp    eax,0x80000000
   140011d0b:	jne    0x140011d17
   140011d0d:	mov    rcx,QWORD PTR [rsp+0x20]
   140011d12:	call   0x140029c90
   140011d17:	mov    rbx,QWORD PTR [rsp+0x58]
   140011d1c:	mov    rbp,QWORD PTR [rsp+0x60]
   140011d21:	add    rsp,0x30
   140011d25:	pop    r14
   140011d27:	pop    rdi
   140011d28:	pop    rsi
   140011d29:	ret    
   140011d2a:	int3   
   140011d2b:	int3   
   140011d2c:	int3   
   140011d2d:	int3   
   140011d2e:	int3   
   140011d2f:	int3   
   140011d30:	mov    rax,rsp
   140011d33:	push   rdi
   140011d34:	sub    rsp,0x30
   140011d38:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140011d40:	mov    QWORD PTR [rax+0x10],rbx
   140011d44:	mov    QWORD PTR [rax+0x18],rsi
   140011d48:	mov    rsi,rdx
   140011d4b:	lea    rbx,[rcx+0x120]
   140011d52:	mov    QWORD PTR [rax+0x8],rbx
   140011d56:	mov    rcx,rbx
   140011d59:	call   0x140029ab0
   140011d5e:	test   eax,eax
   140011d60:	jns    0x140011d6a
   140011d62:	mov    ecx,eax
   140011d64:	call   0x140029d64
   140011d69:	nop
   140011d6a:	mov    rax,QWORD PTR [rsi]
   140011d6d:	mov    rdi,QWORD PTR [rax+0x30]
   140011d71:	mov    rcx,rdi
   140011d74:	call   QWORD PTR [rip+0x2092e]        # 0x1400326a8
   140011d7a:	xor    edx,edx
   140011d7c:	mov    rcx,rsi
   140011d7f:	call   rdi
   140011d81:	test   eax,eax
   140011d83:	jns    0x140011d8d
   140011d85:	mov    ecx,eax
   140011d87:	call   0x140029d64
   140011d8c:	int3   
   140011d8d:	mov    rax,QWORD PTR [rsi]
   140011d90:	mov    rdi,QWORD PTR [rax+0x30]
   140011d94:	mov    rcx,rdi
   140011d97:	call   QWORD PTR [rip+0x2090b]        # 0x1400326a8
   140011d9d:	mov    edx,0x1
   140011da2:	mov    rcx,rsi
   140011da5:	call   rdi
   140011da7:	test   eax,eax
   140011da9:	jns    0x140011db3
   140011dab:	mov    ecx,eax
   140011dad:	call   0x140029d64
   140011db2:	nop
   140011db3:	or     eax,0xffffffff
   140011db6:	lock xadd DWORD PTR [rbx+0x8],eax
   140011dbb:	dec    eax
   140011dbd:	cmp    eax,0x80000000
   140011dc2:	jne    0x140011dce
   140011dc4:	mov    rcx,QWORD PTR [rsp+0x40]
   140011dc9:	call   0x140029c90
   140011dce:	mov    rbx,QWORD PTR [rsp+0x48]
   140011dd3:	mov    rsi,QWORD PTR [rsp+0x50]
   140011dd8:	add    rsp,0x30
   140011ddc:	pop    rdi
   140011ddd:	ret    
   140011dde:	int3   
   140011ddf:	int3   
   140011de0:	int3   
   140011de1:	int3   
   140011de2:	int3   
   140011de3:	int3   
   140011de4:	rex push rbx
   140011de6:	sub    rsp,0x30
   140011dea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011df3:	mov    r9,r8
   140011df6:	mov    r10,rdx
   140011df9:	mov    r11,rcx
   140011dfc:	lea    rbx,[rcx+0x120]
   140011e03:	mov    QWORD PTR [rsp+0x40],rbx
   140011e08:	mov    rcx,rbx
   140011e0b:	call   0x140029ab0
   140011e10:	test   eax,eax
   140011e12:	jns    0x140011e1c
   140011e14:	mov    ecx,eax
   140011e16:	call   0x140029d64
   140011e1b:	nop
   140011e1c:	test   r10,r10
   140011e1f:	je     0x140011e5b
   140011e21:	test   r9,r9
   140011e24:	je     0x140011e5b
   140011e26:	mov    rcx,QWORD PTR [r11+0xa0]
   140011e2d:	test   rcx,rcx
   140011e30:	je     0x140011e3e
   140011e32:	mov    r8,r9
   140011e35:	mov    rdx,r10
   140011e38:	call   0x140026624
   140011e3d:	nop
   140011e3e:	or     eax,0xffffffff
   140011e41:	lock xadd DWORD PTR [rbx+0x8],eax
   140011e46:	dec    eax
   140011e48:	cmp    eax,0x80000000
   140011e4d:	jne    0x140011e9b
   140011e4f:	mov    rcx,QWORD PTR [rsp+0x40]
   140011e54:	call   0x140029c90
   140011e59:	jmp    0x140011e9b
   140011e5b:	lea    rax,[rip+0x39216]        # 0x14004b078
   140011e62:	mov    rcx,QWORD PTR [rip+0x3920f]        # 0x14004b078
   140011e69:	cmp    rcx,rax
   140011e6c:	je     0x140011e90
   140011e6e:	test   BYTE PTR [rcx+0x1c],0x1
   140011e72:	je     0x140011e90
   140011e74:	mov    edx,0xa
   140011e79:	lea    r9,[rip+0x252b0]        # 0x140037130
   140011e80:	lea    r8,[rip+0x22549]        # 0x1400343d0
   140011e87:	mov    rcx,QWORD PTR [rcx+0x10]
   140011e8b:	call   0x1400038e0
   140011e90:	mov    ecx,0x80070057
   140011e95:	call   0x140029d64
   140011e9a:	nop
   140011e9b:	add    rsp,0x30
   140011e9f:	pop    rbx
   140011ea0:	ret    
   140011ea1:	int3   
   140011ea2:	int3   
   140011ea3:	int3   
   140011ea4:	int3   
   140011ea5:	int3   
   140011ea6:	int3   
   140011ea7:	int3   
   140011ea8:	mov    QWORD PTR [rsp+0x10],rbx
   140011ead:	mov    QWORD PTR [rsp+0x18],rbp
   140011eb2:	mov    QWORD PTR [rsp+0x20],rsi
   140011eb7:	push   rdi
   140011eb8:	push   r14
   140011eba:	push   r15
   140011ebc:	sub    rsp,0x20
   140011ec0:	mov    rsi,rcx
   140011ec3:	lea    rbp,[rcx+0xf0]
   140011eca:	mov    rcx,rbp
   140011ecd:	call   QWORD PTR [rip+0x20235]        # 0x140032108
   140011ed3:	cmp    QWORD PTR [rsi+0xb8],0x0
   140011edb:	je     0x140011f6d
   140011ee1:	lea    r15,[rsi+0xb0]
   140011ee8:	mov    rbx,QWORD PTR [r15]
   140011eeb:	mov    rbx,QWORD PTR [rbx]
   140011eee:	mov    r14,QWORD PTR [rbx+0x18]
   140011ef2:	test   r14,r14
   140011ef5:	je     0x140011f0b
   140011ef7:	mov    rax,QWORD PTR [r14]
   140011efa:	mov    rdi,QWORD PTR [rax]
   140011efd:	mov    rcx,rdi
   140011f00:	call   QWORD PTR [rip+0x207a2]        # 0x1400326a8
   140011f06:	mov    rcx,r14
   140011f09:	call   rdi
   140011f0b:	mov    r8,rbx
   140011f0e:	lea    rdx,[rsp+0x40]
   140011f13:	mov    rcx,r15
   140011f16:	call   0x1400120a8
   140011f1b:	mov    rcx,rbp
   140011f1e:	call   QWORD PTR [rip+0x201d4]        # 0x1400320f8
   140011f24:	test   r14,r14
   140011f27:	je     0x140011eca
   140011f29:	mov    rax,QWORD PTR [r14]
   140011f2c:	mov    rbx,QWORD PTR [rax+0x30]
   140011f30:	mov    rcx,rbx
   140011f33:	call   QWORD PTR [rip+0x2076f]        # 0x1400326a8
   140011f39:	mov    rcx,r14
   140011f3c:	call   rbx
   140011f3e:	mov    rax,QWORD PTR [r14]
   140011f41:	mov    rbx,QWORD PTR [rax+0x38]
   140011f45:	mov    rcx,rbx
   140011f48:	call   QWORD PTR [rip+0x2075a]        # 0x1400326a8
   140011f4e:	mov    rcx,r14
   140011f51:	call   rbx
   140011f53:	mov    rax,QWORD PTR [r14]
   140011f56:	mov    rbx,QWORD PTR [rax+0x8]
   140011f5a:	mov    rcx,rbx
   140011f5d:	call   QWORD PTR [rip+0x20745]        # 0x1400326a8
   140011f63:	mov    rcx,r14
   140011f66:	call   rbx
   140011f68:	jmp    0x140011eca
   140011f6d:	mov    rcx,rbp
   140011f70:	call   QWORD PTR [rip+0x20182]        # 0x1400320f8
   140011f76:	lea    rcx,[rsi+0x120]
   140011f7d:	call   0x140029b84
   140011f82:	mov    rdi,QWORD PTR [rsi+0xa0]
   140011f89:	test   rdi,rdi
   140011f8c:	je     0x140011fab
   140011f8e:	mov    rax,QWORD PTR [rdi]
   140011f91:	mov    rbx,QWORD PTR [rax+0x8]
   140011f95:	mov    rcx,rbx
   140011f98:	call   QWORD PTR [rip+0x2070a]        # 0x1400326a8
   140011f9e:	mov    rcx,rdi
   140011fa1:	call   rbx
   140011fa3:	and    QWORD PTR [rsi+0xa0],0x0
   140011fab:	mov    rdi,QWORD PTR [rsi+0x98]
   140011fb2:	test   rdi,rdi
   140011fb5:	je     0x140011fd4
   140011fb7:	mov    rax,QWORD PTR [rdi]
   140011fba:	mov    rbx,QWORD PTR [rax+0x10]
   140011fbe:	mov    rcx,rbx
   140011fc1:	call   QWORD PTR [rip+0x206e1]        # 0x1400326a8
   140011fc7:	mov    rcx,rdi
   140011fca:	call   rbx
   140011fcc:	and    QWORD PTR [rsi+0x98],0x0
   140011fd4:	test   BYTE PTR [rip+0x3dfe5],0x1        # 0x14004ffc0
   140011fdb:	je     0x140011ff0
   140011fdd:	lea    r8,[rip+0x223fc]        # 0x1400343e0
   140011fe4:	lea    rdx,[rip+0x221bd]        # 0x1400341a8
   140011feb:	call   0x140003818
   140011ff0:	cmp    QWORD PTR [rsi+0x10],0x0
   140011ff5:	je     0x140012087
   140011ffb:	mov    rbx,QWORD PTR [rsi+0x20]
   140011fff:	lea    rdi,[rip+0x39072]        # 0x14004b078
   140012006:	test   rbx,rbx
   140012009:	je     0x140012044
   14001200b:	mov    rcx,rbx
   14001200e:	call   QWORD PTR [rip+0x20694]        # 0x1400326a8
   140012014:	call   rbx
   140012016:	test   eax,eax
   140012018:	jns    0x140012044
   14001201a:	mov    rcx,QWORD PTR [rip+0x39057]        # 0x14004b078
   140012021:	cmp    rcx,rdi
   140012024:	je     0x140012044
   140012026:	test   BYTE PTR [rcx+0x1c],0x2
   14001202a:	je     0x140012044
   14001202c:	mov    rcx,QWORD PTR [rcx+0x10]
   140012030:	lea    r8,[rip+0x25171]        # 0x1400371a8
   140012037:	mov    edx,0xa
   14001203c:	mov    r9d,eax
   14001203f:	call   0x140001f70
   140012044:	mov    rcx,QWORD PTR [rsi+0x10]
   140012048:	call   QWORD PTR [rip+0x20092]        # 0x1400320e0
   14001204e:	test   eax,eax
   140012050:	jne    0x140012082
   140012052:	call   QWORD PTR [rip+0x20230]        # 0x140032288
   140012058:	mov    rcx,QWORD PTR [rip+0x39019]        # 0x14004b078
   14001205f:	cmp    rcx,rdi
   140012062:	je     0x140012082
   140012064:	test   BYTE PTR [rcx+0x1c],0x2
   140012068:	je     0x140012082
   14001206a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001206e:	lea    r8,[rip+0x25133]        # 0x1400371a8
   140012075:	mov    edx,0xb
   14001207a:	mov    r9d,eax
   14001207d:	call   0x140001f70
   140012082:	and    QWORD PTR [rsi+0x10],0x0
   140012087:	mov    rbx,QWORD PTR [rsp+0x48]
   14001208c:	mov    rbp,QWORD PTR [rsp+0x50]
   140012091:	mov    rsi,QWORD PTR [rsp+0x58]
   140012096:	add    rsp,0x20
   14001209a:	pop    r15
   14001209c:	pop    r14
   14001209e:	pop    rdi
   14001209f:	ret    
   1400120a0:	int3   
   1400120a1:	int3   
   1400120a2:	int3   
   1400120a3:	int3   
   1400120a4:	int3   
   1400120a5:	int3   
   1400120a6:	int3   
   1400120a7:	int3   
   1400120a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400120ad:	mov    QWORD PTR [rsp+0x18],r8
   1400120b2:	push   rbp
   1400120b3:	push   rsi
   1400120b4:	push   rdi
   1400120b5:	push   r14
   1400120b7:	push   r15
   1400120b9:	sub    rsp,0x20
   1400120bd:	mov    r14,rcx
   1400120c0:	mov    rbp,rdx
   1400120c3:	mov    ecx,DWORD PTR [r8+0x10]
   1400120c7:	mov    ebx,0x7fffffff
   1400120cc:	xor    ecx,0xdeadbeef
   1400120d2:	mov    edx,0x1f31d
   1400120d7:	and    ecx,ebx
   1400120d9:	call   QWORD PTR [rip+0x204d9]        # 0x1400325b8
   1400120df:	mov    QWORD PTR [rsp+0x50],rax
   1400120e4:	shr    rax,0x20
   1400120e8:	imul   edx,eax,0x41a7
   1400120ee:	imul   eax,DWORD PTR [rsp+0x50],0xb14
   1400120f6:	sub    edx,eax
   1400120f8:	jns    0x1400120fc
   1400120fa:	add    edx,ebx
   1400120fc:	mov    rcx,QWORD PTR [r14+0x28]
   140012100:	movsxd rdx,edx
   140012103:	and    rdx,rcx
   140012106:	cmp    QWORD PTR [r14+0x30],rdx
   14001210a:	ja     0x140012119
   14001210c:	shr    rcx,1
   14001210f:	or     rax,0xffffffffffffffff
   140012113:	sub    rax,rcx
   140012116:	add    rdx,rax
   140012119:	mov    rcx,QWORD PTR [r14+0x10]
   14001211d:	add    rdx,rdx
   140012120:	mov    rsi,QWORD PTR [rsp+0x60]
   140012125:	cmp    QWORD PTR [rcx+rdx*8+0x8],rsi
   14001212a:	jne    0x14001214d
   14001212c:	cmp    QWORD PTR [rcx+rdx*8],rsi
   140012130:	jne    0x140012147
   140012132:	mov    rax,QWORD PTR [r14]
   140012135:	mov    QWORD PTR [rcx+rdx*8],rax
   140012139:	mov    rcx,QWORD PTR [r14+0x10]
   14001213d:	mov    rax,QWORD PTR [r14]
   140012140:	mov    QWORD PTR [rcx+rdx*8+0x8],rax
   140012145:	jmp    0x14001215a
   140012147:	mov    rax,QWORD PTR [rsi+0x8]
   14001214b:	jmp    0x140012140
   14001214d:	cmp    QWORD PTR [rcx+rdx*8],rsi
   140012151:	jne    0x14001215f
   140012153:	mov    rax,QWORD PTR [rsi]
   140012156:	mov    QWORD PTR [rcx+rdx*8],rax
   14001215a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001215f:	mov    rbx,QWORD PTR [rsi]
   140012162:	cmp    rsi,QWORD PTR [r14]
   140012165:	je     0x1400121a4
   140012167:	mov    rax,QWORD PTR [rsi+0x8]
   14001216b:	mov    QWORD PTR [rax],rbx
   14001216e:	mov    rcx,QWORD PTR [rsi]
   140012171:	mov    rax,QWORD PTR [rsi+0x8]
   140012175:	mov    QWORD PTR [rcx+0x8],rax
   140012179:	mov    r15,QWORD PTR [rsi+0x18]
   14001217d:	test   r15,r15
   140012180:	je     0x140012197
   140012182:	mov    rax,QWORD PTR [r15]
   140012185:	mov    rdi,QWORD PTR [rax+0x8]
   140012189:	mov    rcx,rdi
   14001218c:	call   QWORD PTR [rip+0x20516]        # 0x1400326a8
   140012192:	mov    rcx,r15
   140012195:	call   rdi
   140012197:	mov    rcx,rsi
   14001219a:	call   QWORD PTR [rip+0x20428]        # 0x1400325c8
   1400121a0:	dec    QWORD PTR [r14+0x8]
   1400121a4:	mov    QWORD PTR [rbp+0x0],rbx
   1400121a8:	mov    rax,rbp
   1400121ab:	mov    rbx,QWORD PTR [rsp+0x58]
   1400121b0:	add    rsp,0x20
   1400121b4:	pop    r15
   1400121b6:	pop    r14
   1400121b8:	pop    rdi
   1400121b9:	pop    rsi
   1400121ba:	pop    rbp
   1400121bb:	ret    
   1400121bc:	int3   
   1400121bd:	int3   
   1400121be:	int3   
   1400121bf:	int3   
   1400121c0:	int3   
   1400121c1:	int3   
   1400121c2:	int3   
   1400121c3:	int3   
   1400121c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400121c9:	push   rdi
   1400121ca:	sub    rsp,0x20
   1400121ce:	mov    rdi,QWORD PTR [rcx+0x8]
   1400121d2:	test   rdi,rdi
   1400121d5:	je     0x1400121ec
   1400121d7:	mov    rax,QWORD PTR [rdi]
   1400121da:	mov    rbx,QWORD PTR [rax+0x8]
   1400121de:	mov    rcx,rbx
   1400121e1:	call   QWORD PTR [rip+0x204c1]        # 0x1400326a8
   1400121e7:	mov    rcx,rdi
   1400121ea:	call   rbx
   1400121ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400121f1:	add    rsp,0x20
   1400121f5:	pop    rdi
   1400121f6:	ret    
   1400121f7:	int3   
   1400121f8:	int3   
   1400121f9:	int3   
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	int3   
   1400121fd:	int3   
   1400121fe:	int3   
   1400121ff:	int3   
   140012200:	mov    rax,rsp
   140012203:	mov    QWORD PTR [rax+0x8],rbx
   140012207:	mov    QWORD PTR [rax+0x10],rbp
   14001220b:	mov    QWORD PTR [rax+0x18],rsi
   14001220f:	mov    QWORD PTR [rax+0x20],rdi
   140012213:	push   r14
   140012215:	sub    rsp,0x20
   140012219:	mov    rax,QWORD PTR [rcx]
   14001221c:	mov    rdi,rcx
   14001221f:	mov    rsi,QWORD PTR [rax]
   140012222:	mov    QWORD PTR [rax],rax
   140012225:	mov    rax,QWORD PTR [rcx]
   140012228:	mov    QWORD PTR [rax+0x8],rax
   14001222c:	and    QWORD PTR [rcx+0x8],0x0
   140012231:	cmp    rsi,QWORD PTR [rcx]
   140012234:	je     0x140012268
   140012236:	mov    r14,QWORD PTR [rsi+0x18]
   14001223a:	mov    rbp,QWORD PTR [rsi]
   14001223d:	test   r14,r14
   140012240:	je     0x140012257
   140012242:	mov    rax,QWORD PTR [r14]
   140012245:	mov    rbx,QWORD PTR [rax+0x8]
   140012249:	mov    rcx,rbx
   14001224c:	call   QWORD PTR [rip+0x20456]        # 0x1400326a8
   140012252:	mov    rcx,r14
   140012255:	call   rbx
   140012257:	mov    rcx,rsi
   14001225a:	call   QWORD PTR [rip+0x20368]        # 0x1400325c8
   140012260:	mov    rsi,rbp
   140012263:	cmp    rbp,QWORD PTR [rdi]
   140012266:	jne    0x140012236
   140012268:	mov    rcx,QWORD PTR [rdi]
   14001226b:	mov    rbx,QWORD PTR [rsp+0x30]
   140012270:	mov    rbp,QWORD PTR [rsp+0x38]
   140012275:	mov    rsi,QWORD PTR [rsp+0x40]
   14001227a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001227f:	add    rsp,0x20
   140012283:	pop    r14
   140012285:	rex.W jmp QWORD PTR [rip+0x2033c]        # 0x1400325c8
   14001228c:	int3   
   14001228d:	int3   
   14001228e:	int3   
   14001228f:	int3   
   140012290:	int3   
   140012291:	int3   
   140012292:	int3   
   140012293:	int3   
   140012294:	mov    QWORD PTR [rsp+0x8],rcx
   140012299:	push   rdi
   14001229a:	sub    rsp,0x30
   14001229e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400122a7:	mov    QWORD PTR [rsp+0x48],rbx
   1400122ac:	mov    rdi,r8
   1400122af:	mov    rbx,rdx
   1400122b2:	mov    ecx,0x20
   1400122b7:	call   0x140023f10
   1400122bc:	mov    QWORD PTR [rsp+0x40],rax
   1400122c1:	test   rbx,rbx
   1400122c4:	jne    0x1400122cc
   1400122c6:	mov    rbx,rax
   1400122c9:	mov    rdi,rax
   1400122cc:	mov    QWORD PTR [rax],rbx
   1400122cf:	lea    rcx,[rax+0x8]
   1400122d3:	test   rcx,rcx
   1400122d6:	je     0x1400122db
   1400122d8:	mov    QWORD PTR [rcx],rdi
   1400122db:	mov    rbx,QWORD PTR [rsp+0x48]
   1400122e0:	add    rsp,0x30
   1400122e4:	pop    rdi
   1400122e5:	ret    
   1400122e6:	int3   
   1400122e7:	int3   
   1400122e8:	int3   
   1400122e9:	int3   
   1400122ea:	int3   
   1400122eb:	int3   
   1400122ec:	mov    rax,rsp
   1400122ef:	push   r13
   1400122f1:	push   r14
   1400122f3:	push   r15
   1400122f5:	sub    rsp,0x30
   1400122f9:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140012301:	mov    QWORD PTR [rax+0x10],rbx
   140012305:	mov    QWORD PTR [rax+0x18],rsi
   140012309:	mov    QWORD PTR [rax+0x20],rdi
   14001230d:	mov    rdi,r8
   140012310:	mov    r15,rdx
   140012313:	mov    r14,rcx
   140012316:	mov    ecx,DWORD PTR [r8]
   140012319:	xor    ecx,0xdeadbeef
   14001231f:	mov    ebx,0x7fffffff
   140012324:	and    ecx,ebx
   140012326:	mov    edx,0x1f31d
   14001232b:	call   QWORD PTR [rip+0x20287]        # 0x1400325b8
   140012331:	mov    QWORD PTR [rsp+0x50],rax
   140012336:	shr    rax,0x20
   14001233a:	imul   ecx,eax,0x41a7
   140012340:	imul   eax,DWORD PTR [rsp+0x50],0xb14
   140012348:	sub    ecx,eax
   14001234a:	jns    0x14001234e
   14001234c:	add    ecx,ebx
   14001234e:	mov    rdx,QWORD PTR [r14+0x28]
   140012352:	movsxd rcx,ecx
   140012355:	and    rcx,rdx
   140012358:	cmp    QWORD PTR [r14+0x30],rcx
   14001235c:	ja     0x14001236b
   14001235e:	shr    rdx,1
   140012361:	or     rax,0xffffffffffffffff
   140012365:	sub    rax,rdx
   140012368:	add    rcx,rax
   14001236b:	mov    rax,QWORD PTR [r14]
   14001236e:	mov    rsi,rcx
   140012371:	add    rsi,rsi
   140012374:	mov    rdx,QWORD PTR [r14+0x10]
   140012378:	cmp    QWORD PTR [rdx+rsi*8],rax
   14001237c:	jne    0x140012383
   14001237e:	mov    rbx,rax
   140012381:	jmp    0x14001238b
   140012383:	mov    rbx,QWORD PTR [rdx+rsi*8+0x8]
   140012388:	mov    rbx,QWORD PTR [rbx]
   14001238b:	cmp    rbx,QWORD PTR [rdx+rsi*8]
   14001238f:	je     0x1400123c0
   140012391:	mov    r8,QWORD PTR [rdi]
   140012394:	add    rcx,rcx
   140012397:	mov    rbx,QWORD PTR [rbx+0x8]
   14001239b:	cmp    QWORD PTR [rbx+0x10],r8
   14001239f:	jbe    0x1400123a9
   1400123a1:	cmp    rbx,QWORD PTR [rdx+rcx*8]
   1400123a5:	jne    0x140012397
   1400123a7:	jmp    0x1400123c0
   1400123a9:	jae    0x1400123b0
   1400123ab:	mov    rbx,QWORD PTR [rbx]
   1400123ae:	jmp    0x1400123c0
   1400123b0:	mov    QWORD PTR [r15],rbx
   1400123b3:	mov    BYTE PTR [r15+0x8],0x0
   1400123b8:	mov    rax,r15
   1400123bb:	jmp    0x1400124a4
   1400123c0:	mov    r13,QWORD PTR [rax]
   1400123c3:	mov    r9,rdi
   1400123c6:	mov    r8,QWORD PTR [r13+0x8]
   1400123ca:	mov    rdx,r13
   1400123cd:	call   0x140012804
   1400123d2:	mov    rdx,rax
   1400123d5:	mov    rax,QWORD PTR [r14+0x8]
   1400123d9:	movabs rcx,0x7fffffffffffffe
   1400123e3:	sub    rcx,rax
   1400123e6:	cmp    rcx,0x1
   1400123ea:	jae    0x1400123f9
   1400123ec:	lea    rcx,[rip+0x24d8d]        # 0x140037180
   1400123f3:	call   0x14002d7f8
   1400123f8:	int3   
   1400123f9:	inc    rax
   1400123fc:	mov    QWORD PTR [r14+0x8],rax
   140012400:	mov    QWORD PTR [r13+0x8],rdx
   140012404:	mov    rax,QWORD PTR [rdx+0x8]
   140012408:	mov    QWORD PTR [rax],rdx
   14001240b:	mov    rdi,QWORD PTR [r14]
   14001240e:	mov    rdi,QWORD PTR [rdi]
   140012411:	mov    rax,QWORD PTR [rdi]
   140012414:	cmp    rbx,rax
   140012417:	je     0x140012446
   140012419:	mov    rcx,QWORD PTR [rdi+0x8]
   14001241d:	mov    QWORD PTR [rcx],rax
   140012420:	mov    rcx,QWORD PTR [rax+0x8]
   140012424:	mov    QWORD PTR [rcx],rbx
   140012427:	mov    rcx,QWORD PTR [rbx+0x8]
   14001242b:	mov    QWORD PTR [rcx],rdi
   14001242e:	mov    rdx,QWORD PTR [rbx+0x8]
   140012432:	mov    rcx,QWORD PTR [rax+0x8]
   140012436:	mov    QWORD PTR [rbx+0x8],rcx
   14001243a:	mov    rcx,QWORD PTR [rdi+0x8]
   14001243e:	mov    QWORD PTR [rax+0x8],rcx
   140012442:	mov    QWORD PTR [rdi+0x8],rdx
   140012446:	mov    rdx,QWORD PTR [r14+0x10]
   14001244a:	mov    rax,QWORD PTR [rdx+rsi*8]
   14001244e:	cmp    rax,QWORD PTR [r14]
   140012451:	jne    0x140012462
   140012453:	mov    QWORD PTR [rdx+rsi*8],rdi
   140012457:	mov    rax,QWORD PTR [r14+0x10]
   14001245b:	mov    QWORD PTR [rax+rsi*8+0x8],rdi
   140012460:	jmp    0x140012491
   140012462:	cmp    rax,rbx
   140012465:	jne    0x14001246d
   140012467:	mov    QWORD PTR [rdx+rsi*8],rdi
   14001246b:	jmp    0x140012491
   14001246d:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   140012472:	mov    rcx,QWORD PTR [rax]
   140012475:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14001247a:	cmp    rcx,rdi
   14001247d:	je     0x140012491
   14001247f:	mov    rdx,QWORD PTR [r14+0x10]
   140012483:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   140012488:	mov    rcx,QWORD PTR [rax+0x8]
   14001248c:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   140012491:	mov    rcx,r14
   140012494:	call   0x1400124c8
   140012499:	mov    QWORD PTR [r15],rdi
   14001249c:	mov    BYTE PTR [r15+0x8],0x1
   1400124a1:	mov    rax,r15
   1400124a4:	mov    rbx,QWORD PTR [rsp+0x58]
   1400124a9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400124ae:	mov    rdi,QWORD PTR [rsp+0x68]
   1400124b3:	add    rsp,0x30
   1400124b7:	pop    r15
   1400124b9:	pop    r14
   1400124bb:	pop    r13
   1400124bd:	ret    
   1400124be:	int3   
   1400124bf:	int3   
   1400124c0:	int3   
   1400124c1:	int3   
   1400124c2:	int3   
   1400124c3:	int3   
   1400124c4:	int3   
   1400124c5:	int3   
   1400124c6:	int3   
   1400124c7:	int3   
   1400124c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400124cd:	mov    QWORD PTR [rsp+0x20],rsi
   1400124d2:	push   rdi
   1400124d3:	sub    rsp,0x40
   1400124d7:	mov    rax,QWORD PTR [rcx+0x8]
   1400124db:	xorps  xmm0,xmm0
   1400124de:	mov    rbx,QWORD PTR [rcx+0x30]
   1400124e2:	mov    rsi,rcx
   1400124e5:	movss  xmm2,DWORD PTR [rip+0x2afab]        # 0x14003d498
   1400124ed:	cvtsi2ss xmm0,rax
   1400124f2:	test   rax,rax
   1400124f5:	jns    0x1400124fb
   1400124f7:	addss  xmm0,xmm2
   1400124fb:	xorps  xmm1,xmm1
   1400124fe:	cvtsi2ss xmm1,rbx
   140012503:	test   rbx,rbx
   140012506:	jns    0x14001250c
   140012508:	addss  xmm1,xmm2
   14001250c:	divss  xmm0,xmm1
   140012510:	comiss xmm0,DWORD PTR [rcx+0x38]
   140012514:	jbe    0x14001259d
   14001251a:	cmp    rbx,0x200
   140012521:	jae    0x140012529
   140012523:	shl    rbx,0x3
   140012527:	jmp    0x14001253b
   140012529:	movabs rax,0xfffffffffffffff
   140012533:	cmp    rbx,rax
   140012536:	jae    0x14001253b
   140012538:	add    rbx,rbx
   14001253b:	mov    rax,QWORD PTR [rsi]
   14001253e:	lea    r9,[rbx+rbx*1]
   140012542:	add    rcx,0x10
   140012546:	mov    QWORD PTR [rsp+0x50],rax
   14001254b:	lea    rax,[rsp+0x50]
   140012550:	lea    rdx,[rsp+0x58]
   140012555:	mov    QWORD PTR [rsp+0x20],rax
   14001255a:	mov    r8,QWORD PTR [rcx]
   14001255d:	mov    QWORD PTR [rcx+0x8],r8
   140012561:	call   0x14000dfb4
   140012566:	lea    rax,[rbx-0x1]
   14001256a:	mov    QWORD PTR [rsi+0x30],rbx
   14001256e:	mov    QWORD PTR [rsi+0x28],rax
   140012572:	mov    rax,QWORD PTR [rsi]
   140012575:	cmp    QWORD PTR [rax],rax
   140012578:	je     0x14001259d
   14001257a:	mov    rdi,QWORD PTR [rax+0x8]
   14001257e:	mov    rbx,QWORD PTR [rsi]
   140012581:	lea    rdx,[rsp+0x30]
   140012586:	mov    rcx,rsi
   140012589:	mov    rbx,QWORD PTR [rbx]
   14001258c:	mov    r9,rbx
   14001258f:	lea    r8,[rbx+0x10]
   140012593:	call   0x1400125b4
   140012598:	cmp    rbx,rdi
   14001259b:	jne    0x14001257e
   14001259d:	mov    rbx,QWORD PTR [rsp+0x60]
   1400125a2:	mov    rsi,QWORD PTR [rsp+0x68]
   1400125a7:	add    rsp,0x40
   1400125ab:	pop    rdi
   1400125ac:	ret    
   1400125ad:	int3   
   1400125ae:	int3   
   1400125af:	int3   
   1400125b0:	int3   
   1400125b1:	int3   
   1400125b2:	int3   
   1400125b3:	int3   
   1400125b4:	mov    rax,rsp
   1400125b7:	mov    QWORD PTR [rax+0x20],r9
   1400125bb:	mov    QWORD PTR [rax+0x8],rcx
   1400125bf:	push   rsi
   1400125c0:	push   rdi
   1400125c1:	push   r12
   1400125c3:	push   r14
   1400125c5:	push   r15
   1400125c7:	sub    rsp,0x30
   1400125cb:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400125d3:	mov    QWORD PTR [rax+0x10],rbx
   1400125d7:	mov    rdi,r8
   1400125da:	mov    r14,rdx
   1400125dd:	mov    rsi,rcx
   1400125e0:	mov    ecx,DWORD PTR [r8]
   1400125e3:	xor    ecx,0xdeadbeef
   1400125e9:	mov    ebx,0x7fffffff
   1400125ee:	and    ecx,ebx
   1400125f0:	mov    edx,0x1f31d
   1400125f5:	call   QWORD PTR [rip+0x1ffbd]        # 0x1400325b8
   1400125fb:	mov    QWORD PTR [rsp+0x70],rax
   140012600:	shr    rax,0x20
   140012604:	imul   ecx,eax,0x41a7
   14001260a:	imul   eax,DWORD PTR [rsp+0x70],0xb14
   140012612:	sub    ecx,eax
   140012614:	jns    0x140012618
   140012616:	add    ecx,ebx
   140012618:	mov    rdx,QWORD PTR [rsi+0x28]
   14001261c:	movsxd rcx,ecx
   14001261f:	and    rcx,rdx
   140012622:	cmp    QWORD PTR [rsi+0x30],rcx
   140012626:	ja     0x140012635
   140012628:	shr    rdx,1
   14001262b:	or     rax,0xffffffffffffffff
   14001262f:	sub    rax,rdx
   140012632:	add    rcx,rax
   140012635:	mov    r8,rcx
   140012638:	add    r8,r8
   14001263b:	mov    rdx,QWORD PTR [rsi+0x10]
   14001263f:	mov    rax,QWORD PTR [rdx+r8*8]
   140012643:	cmp    rax,QWORD PTR [rsi]
   140012646:	jne    0x14001264d
   140012648:	mov    rbx,QWORD PTR [rsi]
   14001264b:	jmp    0x140012655
   14001264d:	mov    rbx,QWORD PTR [rdx+r8*8+0x8]
   140012652:	mov    rbx,QWORD PTR [rbx]
   140012655:	cmp    rbx,rax
   140012658:	je     0x1400126d4
   14001265a:	mov    rax,QWORD PTR [rdi]
   14001265d:	add    rcx,rcx
   140012660:	mov    rbx,QWORD PTR [rbx+0x8]
   140012664:	cmp    QWORD PTR [rbx+0x10],rax
   140012668:	jbe    0x140012672
   14001266a:	cmp    rbx,QWORD PTR [rdx+rcx*8]
   14001266e:	jne    0x140012660
   140012670:	jmp    0x1400126d4
   140012672:	jae    0x140012679
   140012674:	mov    rbx,QWORD PTR [rbx]
   140012677:	jmp    0x1400126d4
   140012679:	mov    r15,QWORD PTR [rsp+0x78]
   14001267e:	cmp    r15,QWORD PTR [rsi]
   140012681:	je     0x1400126c4
   140012683:	mov    rcx,QWORD PTR [r15+0x8]
   140012687:	mov    rax,QWORD PTR [r15]
   14001268a:	mov    QWORD PTR [rcx],rax
   14001268d:	mov    rcx,QWORD PTR [r15]
   140012690:	mov    rax,QWORD PTR [r15+0x8]
   140012694:	mov    QWORD PTR [rcx+0x8],rax
   140012698:	mov    r12,QWORD PTR [r15+0x18]
   14001269c:	test   r12,r12
   14001269f:	je     0x1400126b7
   1400126a1:	mov    rax,QWORD PTR [r12]
   1400126a5:	mov    rdi,QWORD PTR [rax+0x8]
   1400126a9:	mov    rcx,rdi
   1400126ac:	call   QWORD PTR [rip+0x1fff6]        # 0x1400326a8
   1400126b2:	mov    rcx,r12
   1400126b5:	call   rdi
   1400126b7:	mov    rcx,r15
   1400126ba:	call   QWORD PTR [rip+0x1ff08]        # 0x1400325c8
   1400126c0:	dec    QWORD PTR [rsi+0x8]
   1400126c4:	mov    QWORD PTR [r14],rbx
   1400126c7:	mov    BYTE PTR [r14+0x8],0x0
   1400126cc:	mov    rax,r14
   1400126cf:	jmp    0x14001276c
   1400126d4:	mov    rdi,QWORD PTR [rsp+0x78]
   1400126d9:	mov    rax,QWORD PTR [rdi]
   1400126dc:	cmp    rbx,rax
   1400126df:	je     0x14001270e
   1400126e1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400126e5:	mov    QWORD PTR [rcx],rax
   1400126e8:	mov    rcx,QWORD PTR [rax+0x8]
   1400126ec:	mov    QWORD PTR [rcx],rbx
   1400126ef:	mov    rcx,QWORD PTR [rbx+0x8]
   1400126f3:	mov    QWORD PTR [rcx],rdi
   1400126f6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400126fa:	mov    rcx,QWORD PTR [rax+0x8]
   1400126fe:	mov    QWORD PTR [rbx+0x8],rcx
   140012702:	mov    rcx,QWORD PTR [rdi+0x8]
   140012706:	mov    QWORD PTR [rax+0x8],rcx
   14001270a:	mov    QWORD PTR [rdi+0x8],rdx
   14001270e:	mov    rdx,QWORD PTR [rsi+0x10]
   140012712:	mov    rax,QWORD PTR [rdx+r8*8]
   140012716:	cmp    rax,QWORD PTR [rsi]
   140012719:	jne    0x14001272a
   14001271b:	mov    QWORD PTR [rdx+r8*8],rdi
   14001271f:	mov    rax,QWORD PTR [rsi+0x10]
   140012723:	mov    QWORD PTR [rax+r8*8+0x8],rdi
   140012728:	jmp    0x140012759
   14001272a:	cmp    rax,rbx
   14001272d:	jne    0x140012735
   14001272f:	mov    QWORD PTR [rdx+r8*8],rdi
   140012733:	jmp    0x140012759
   140012735:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001273a:	mov    rcx,QWORD PTR [rax]
   14001273d:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   140012742:	cmp    rcx,rdi
   140012745:	je     0x140012759
   140012747:	mov    rdx,QWORD PTR [rsi+0x10]
   14001274b:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   140012750:	mov    rcx,QWORD PTR [rax+0x8]
   140012754:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   140012759:	mov    rcx,rsi
   14001275c:	call   0x1400124c8
   140012761:	mov    QWORD PTR [r14],rdi
   140012764:	mov    BYTE PTR [r14+0x8],0x1
   140012769:	mov    rax,r14
   14001276c:	mov    rbx,QWORD PTR [rsp+0x68]
   140012771:	add    rsp,0x30
   140012775:	pop    r15
   140012777:	pop    r14
   140012779:	pop    r12
   14001277b:	pop    rdi
   14001277c:	pop    rsi
   14001277d:	ret    
   14001277e:	int3   
   14001277f:	int3   
   140012780:	int3   
   140012781:	int3   
   140012782:	int3   
   140012783:	int3   
   140012784:	int3   
   140012785:	int3   
   140012786:	int3   
   140012787:	int3   
   140012788:	mov    QWORD PTR [rsp+0x8],rbx
   14001278d:	mov    QWORD PTR [rsp+0x10],rsi
   140012792:	mov    QWORD PTR [rsp+0x18],rdi
   140012797:	push   r14
   140012799:	sub    rsp,0x20
   14001279d:	mov    rdi,rdx
   1400127a0:	mov    rsi,rcx
   1400127a3:	cmp    rdx,QWORD PTR [rcx]
   1400127a6:	je     0x1400127e8
   1400127a8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400127ac:	mov    rax,QWORD PTR [rdi]
   1400127af:	mov    QWORD PTR [rdx],rax
   1400127b2:	mov    rdx,QWORD PTR [rdi]
   1400127b5:	mov    rax,QWORD PTR [rdi+0x8]
   1400127b9:	mov    QWORD PTR [rdx+0x8],rax
   1400127bd:	mov    r14,QWORD PTR [rdi+0x18]
   1400127c1:	test   r14,r14
   1400127c4:	je     0x1400127db
   1400127c6:	mov    rax,QWORD PTR [r14]
   1400127c9:	mov    rbx,QWORD PTR [rax+0x8]
   1400127cd:	mov    rcx,rbx
   1400127d0:	call   QWORD PTR [rip+0x1fed2]        # 0x1400326a8
   1400127d6:	mov    rcx,r14
   1400127d9:	call   rbx
   1400127db:	mov    rcx,rdi
   1400127de:	call   QWORD PTR [rip+0x1fde4]        # 0x1400325c8
   1400127e4:	dec    QWORD PTR [rsi+0x8]
   1400127e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400127ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400127f2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400127f7:	add    rsp,0x20
   1400127fb:	pop    r14
   1400127fd:	ret    
   1400127fe:	int3   
   1400127ff:	int3   
   140012800:	int3   
   140012801:	int3   
   140012802:	int3   
   140012803:	int3   
   140012804:	mov    QWORD PTR [rsp+0x8],rcx
   140012809:	push   rbx
   14001280a:	sub    rsp,0x30
   14001280e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012817:	mov    rbx,r9
   14001281a:	call   0x140012294
   14001281f:	mov    QWORD PTR [rsp+0x40],rax
   140012824:	lea    rdx,[rax+0x10]
   140012828:	test   rdx,rdx
   14001282b:	je     0x140012840
   14001282d:	mov    rcx,QWORD PTR [rbx]
   140012830:	mov    QWORD PTR [rdx],rcx
   140012833:	mov    rcx,QWORD PTR [rbx+0x8]
   140012837:	and    QWORD PTR [rbx+0x8],0x0
   14001283c:	mov    QWORD PTR [rdx+0x8],rcx
   140012840:	add    rsp,0x30
   140012844:	pop    rbx
   140012845:	ret    
   140012846:	int3   
   140012847:	int3   
   140012848:	int3   
   140012849:	int3   
   14001284a:	int3   
   14001284b:	int3   
   14001284c:	int3   
   14001284d:	int3   
   14001284e:	int3   
   14001284f:	int3   
   140012850:	rex push rbx
   140012852:	sub    rsp,0x20
   140012856:	lea    rax,[rip+0x2204b]        # 0x1400348a8
   14001285d:	mov    rbx,rcx
   140012860:	mov    QWORD PTR [rcx],rax
   140012863:	test   dl,0x1
   140012866:	je     0x14001286e
   140012868:	call   QWORD PTR [rip+0x1fd5a]        # 0x1400325c8
   14001286e:	mov    rax,rbx
   140012871:	add    rsp,0x20
   140012875:	pop    rbx
   140012876:	ret    
   140012877:	int3   
   140012878:	int3   
   140012879:	int3   
   14001287a:	int3   
   14001287b:	int3   
   14001287c:	int3   
   14001287d:	int3   
   14001287e:	int3   
   14001287f:	int3   
   140012880:	lea    rax,[rip+0x22021]        # 0x1400348a8
   140012887:	mov    QWORD PTR [rcx],rax
   14001288a:	ret    
   14001288b:	int3   
   14001288c:	int3   
   14001288d:	int3   
   14001288e:	int3   
   14001288f:	int3   
   140012890:	int3   
   140012891:	int3   
   140012892:	int3   
   140012893:	int3   
   140012894:	sub    rsp,0x58
   140012898:	mov    rax,QWORD PTR [rsp+0x80]
   1400128a0:	xor    r11d,r11d
   1400128a3:	mov    r10,rcx
   1400128a6:	test   rax,rax
   1400128a9:	je     0x1400128cf
   1400128ab:	cmp    WORD PTR [rax],r11w
   1400128af:	jne    0x1400128b7
   1400128b1:	lea    ecx,[r11+0xe]
   1400128b5:	jmp    0x1400128d4
   1400128b7:	or     rcx,0xffffffffffffffff
   1400128bb:	inc    rcx
   1400128be:	cmp    WORD PTR [rax+rcx*2],r11w
   1400128c3:	jne    0x1400128bb
   1400128c5:	lea    rcx,[rcx*2+0x2]
   1400128cd:	jmp    0x1400128d4
   1400128cf:	mov    ecx,0xa
   1400128d4:	test   rax,rax
   1400128d7:	je     0x1400128ea
   1400128d9:	cmp    WORD PTR [rax],r11w
   1400128dd:	lea    r8,[rip+0x22574]        # 0x140034e58
   1400128e4:	cmove  rax,r8
   1400128e8:	jmp    0x1400128f1
   1400128ea:	lea    rax,[rip+0x22baf]        # 0x1400354a0
   1400128f1:	mov    QWORD PTR [rsp+0x40],r11
   1400128f6:	lea    r8,[rip+0x24fe3]        # 0x1400378e0
   1400128fd:	mov    QWORD PTR [rsp+0x38],rcx
   140012902:	mov    rcx,r10
   140012905:	mov    QWORD PTR [rsp+0x30],rax
   14001290a:	mov    QWORD PTR [rsp+0x28],0x10
   140012913:	mov    QWORD PTR [rsp+0x20],r9
   140012918:	movzx  r9d,dx
   14001291c:	mov    edx,0x2b
   140012921:	call   QWORD PTR [rip+0x1f6f9]        # 0x140032020
   140012927:	add    rsp,0x58
   14001292b:	ret    
   14001292c:	int3   
   14001292d:	int3   
   14001292e:	int3   
   14001292f:	int3   
   140012930:	int3   
   140012931:	int3   
   140012932:	int3   
   140012933:	int3   
   140012934:	sub    rsp,0x68
   140012938:	mov    rdx,QWORD PTR [rsp+0x90]
   140012940:	xor    r10d,r10d
   140012943:	test   rdx,rdx
   140012946:	je     0x14001296c
   140012948:	cmp    WORD PTR [rdx],r10w
   14001294c:	jne    0x140012954
   14001294e:	lea    r8d,[r10+0xe]
   140012952:	jmp    0x140012972
   140012954:	or     rax,0xffffffffffffffff
   140012958:	inc    rax
   14001295b:	cmp    WORD PTR [rdx+rax*2],r10w
   140012960:	jne    0x140012958
   140012962:	lea    r8,[rax*2+0x2]
   14001296a:	jmp    0x140012972
   14001296c:	mov    r8d,0xa
   140012972:	test   rdx,rdx
   140012975:	je     0x140012988
   140012977:	cmp    WORD PTR [rdx],r10w
   14001297b:	lea    rax,[rip+0x224d6]        # 0x140034e58
   140012982:	cmove  rdx,rax
   140012986:	jmp    0x14001298f
   140012988:	lea    rdx,[rip+0x22b11]        # 0x1400354a0
   14001298f:	mov    rax,QWORD PTR [rsp+0x98]
   140012997:	mov    r11d,0x22
   14001299d:	mov    QWORD PTR [rsp+0x50],r10
   1400129a2:	lea    r10d,[r11-0x12]
   1400129a6:	mov    QWORD PTR [rsp+0x48],r10
   1400129ab:	mov    QWORD PTR [rsp+0x40],rax
   1400129b0:	mov    QWORD PTR [rsp+0x38],r8
   1400129b5:	lea    r8,[rip+0x24f24]        # 0x1400378e0
   1400129bc:	mov    QWORD PTR [rsp+0x30],rdx
   1400129c1:	lea    edx,[r11+0x9]
   1400129c5:	mov    QWORD PTR [rsp+0x28],r10
   1400129ca:	mov    QWORD PTR [rsp+0x20],r9
   1400129cf:	movzx  r9d,r11w
   1400129d3:	call   QWORD PTR [rip+0x1f647]        # 0x140032020
   1400129d9:	add    rsp,0x68
   1400129dd:	ret    
   1400129de:	int3   
   1400129df:	int3   
   1400129e0:	int3   
   1400129e1:	int3   
   1400129e2:	int3   
   1400129e3:	int3   
   1400129e4:	mov    rax,rsp
   1400129e7:	push   rsi
   1400129e8:	push   rdi
   1400129e9:	push   r12
   1400129eb:	push   r14
   1400129ed:	push   r15
   1400129ef:	sub    rsp,0x70
   1400129f3:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   1400129fb:	mov    QWORD PTR [rax+0x18],rbx
   1400129ff:	mov    rax,QWORD PTR [rip+0x3861a]        # 0x14004b020
   140012a06:	xor    rax,rsp
   140012a09:	mov    QWORD PTR [rsp+0x60],rax
   140012a0e:	mov    r12,rdx
   140012a11:	mov    rdi,rcx
   140012a14:	mov    BYTE PTR [rcx+0xa0],r9b
   140012a1b:	xor    esi,esi
   140012a1d:	cmp    BYTE PTR [r8+0x3c],sil
   140012a21:	je     0x140012a30
   140012a23:	cmp    BYTE PTR [rsp+0xc0],sil
   140012a2b:	lea    eax,[rsi+0x1]
   140012a2e:	jne    0x140012a32
   140012a30:	mov    eax,esi
   140012a32:	mov    BYTE PTR [rcx+0x91],al
   140012a38:	mov    al,BYTE PTR [r8+0x3d]
   140012a3c:	mov    BYTE PTR [rcx+0x92],al
   140012a42:	mov    al,BYTE PTR [r8+0x3e]
   140012a46:	mov    BYTE PTR [rcx+0x93],al
   140012a4c:	mov    rax,QWORD PTR [rsp+0xc8]
   140012a54:	movaps xmm0,XMMWORD PTR [rax]
   140012a57:	movdqu XMMWORD PTR [rcx+0x80],xmm0
   140012a5f:	mov    r14d,esi
   140012a62:	mov    rbx,rsi
   140012a65:	cmp    rbx,0x4
   140012a69:	jae    0x140012aef
   140012a6f:	mov    rdx,rbx
   140012a72:	shl    rdx,0x4
   140012a76:	lea    rax,[rip+0x3d603]        # 0x140050080
   140012a7d:	add    rdx,rax
   140012a80:	lea    rcx,[rip+0x24e39]        # 0x1400378c0
   140012a87:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140012a8b:	call   QWORD PTR [rip+0x1fbff]        # 0x140032690
   140012a91:	mov    r15d,eax
   140012a94:	test   eax,eax
   140012a96:	jns    0x140012ae7
   140012a98:	lea    rax,[rip+0x385d9]        # 0x14004b078
   140012a9f:	mov    rcx,QWORD PTR [rip+0x385d2]        # 0x14004b078
   140012aa6:	cmp    rcx,rax
   140012aa9:	je     0x140012ac9
   140012aab:	test   BYTE PTR [rcx+0x1c],0x1
   140012aaf:	je     0x140012ac9
   140012ab1:	mov    edx,0xa
   140012ab6:	mov    r9d,r15d
   140012ab9:	lea    r8,[rip+0x24e20]        # 0x1400378e0
   140012ac0:	mov    rcx,QWORD PTR [rcx+0x10]
   140012ac4:	call   0x140001f70
   140012ac9:	mov    edx,r15d
   140012acc:	lea    rcx,[rsp+0x38]
   140012ad1:	call   0x140002064
   140012ad6:	lea    rdx,[rip+0x366ab]        # 0x140049188
   140012add:	lea    rcx,[rsp+0x38]
   140012ae2:	call   0x14002e2da
   140012ae7:	inc    rbx
   140012aea:	jmp    0x140012a65
   140012aef:	mov    rcx,rdi
   140012af2:	call   0x140012c58
   140012af7:	mov    rcx,rdi
   140012afa:	call   0x140012ee8
   140012aff:	mov    QWORD PTR [rsp+0x20],rsi
   140012b04:	mov    rax,QWORD PTR [r12]
   140012b08:	mov    rbx,QWORD PTR [rax+0x18]
   140012b0c:	mov    rcx,rbx
   140012b0f:	call   QWORD PTR [rip+0x1fb93]        # 0x1400326a8
   140012b15:	lea    rdx,[rsp+0x20]
   140012b1a:	mov    rcx,r12
   140012b1d:	call   rbx
   140012b1f:	test   eax,eax
   140012b21:	jns    0x140012b2a
   140012b23:	mov    ecx,eax
   140012b25:	call   0x140029d64
   140012b2a:	mov    rdx,QWORD PTR [rsp+0x20]
   140012b2f:	mov    rcx,rdi
   140012b32:	call   0x1400130e4
   140012b37:	nop
   140012b38:	mov    rbx,QWORD PTR [rsp+0x20]
   140012b3d:	test   rbx,rbx
   140012b40:	je     0x140012b58
   140012b42:	mov    rax,QWORD PTR [rbx]
   140012b45:	mov    rdi,QWORD PTR [rax+0x10]
   140012b49:	mov    rcx,rdi
   140012b4c:	call   QWORD PTR [rip+0x1fb56]        # 0x1400326a8
   140012b52:	mov    rcx,rbx
   140012b55:	call   rdi
   140012b57:	nop
   140012b58:	jmp    0x140012b61
   140012b5a:	xor    esi,esi
   140012b5c:	mov    r14d,DWORD PTR [rsp+0x20]
   140012b61:	test   r14d,r14d
   140012b64:	cmovs  esi,r14d
   140012b68:	mov    eax,esi
   140012b6a:	mov    rcx,QWORD PTR [rsp+0x60]
   140012b6f:	xor    rcx,rsp
   140012b72:	call   0x14002dd00
   140012b77:	mov    rbx,QWORD PTR [rsp+0xb0]
   140012b7f:	add    rsp,0x70
   140012b83:	pop    r15
   140012b85:	pop    r14
   140012b87:	pop    r12
   140012b89:	pop    rdi
   140012b8a:	pop    rsi
   140012b8b:	ret    
   140012b8c:	int3   
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	int3   
   140012b91:	int3   
   140012b92:	int3   
   140012b93:	int3   
   140012b94:	mov    QWORD PTR [rsp+0x8],rbx
   140012b99:	push   rdi
   140012b9a:	sub    rsp,0x20
   140012b9e:	lea    rax,[rip+0x21d23]        # 0x1400348c8
   140012ba5:	mov    rbx,rcx
   140012ba8:	mov    QWORD PTR [rcx],rax
   140012bab:	mov    rcx,QWORD PTR [rcx+0x68]
   140012baf:	test   rcx,rcx
   140012bb2:	je     0x140012bc9
   140012bb4:	call   QWORD PTR [rip+0x1fa0e]        # 0x1400325c8
   140012bba:	and    QWORD PTR [rbx+0x68],0x0
   140012bbf:	and    QWORD PTR [rbx+0x70],0x0
   140012bc4:	and    QWORD PTR [rbx+0x78],0x0
   140012bc9:	lea    rcx,[rbx+0x60]
   140012bcd:	call   0x140014b88
   140012bd2:	mov    rcx,QWORD PTR [rbx+0x30]
   140012bd6:	test   rcx,rcx
   140012bd9:	je     0x140012bf0
   140012bdb:	call   QWORD PTR [rip+0x1f9e7]        # 0x1400325c8
   140012be1:	and    QWORD PTR [rbx+0x30],0x0
   140012be6:	and    QWORD PTR [rbx+0x38],0x0
   140012beb:	and    QWORD PTR [rbx+0x40],0x0
   140012bf0:	lea    rcx,[rbx+0x20]
   140012bf4:	call   0x140014ccc
   140012bf9:	lea    rax,[rip+0x21ca8]        # 0x1400348a8
   140012c00:	mov    QWORD PTR [rbx],rax
   140012c03:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c08:	add    rsp,0x20
   140012c0c:	pop    rdi
   140012c0d:	ret    
   140012c0e:	int3   
   140012c0f:	int3   
   140012c10:	int3   
   140012c11:	int3   
   140012c12:	int3   
   140012c13:	int3   
   140012c14:	int3   
   140012c15:	int3   
   140012c16:	int3   
   140012c17:	int3   
   140012c18:	int3   
   140012c19:	int3   
   140012c1a:	int3   
   140012c1b:	int3   
   140012c1c:	int3   
   140012c1d:	int3   
   140012c1e:	int3   
   140012c1f:	int3   
   140012c20:	mov    QWORD PTR [rsp+0x8],rbx
   140012c25:	push   rdi
   140012c26:	sub    rsp,0x20
   140012c2a:	mov    ebx,edx
   140012c2c:	mov    rdi,rcx
   140012c2f:	call   0x140012b94
   140012c34:	test   bl,0x1
   140012c37:	je     0x140012c42
   140012c39:	mov    rcx,rdi
   140012c3c:	call   QWORD PTR [rip+0x1f986]        # 0x1400325c8
   140012c42:	mov    rax,rdi
   140012c45:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c4a:	add    rsp,0x20
   140012c4e:	pop    rdi
   140012c4f:	ret    
   140012c50:	int3   
   140012c51:	int3   
   140012c52:	int3   
   140012c53:	int3   
   140012c54:	int3   
   140012c55:	int3   
   140012c56:	int3   
   140012c57:	int3   
   140012c58:	rex push rbp
   140012c5a:	push   rbx
   140012c5b:	push   rsi
   140012c5c:	push   rdi
   140012c5d:	push   r13
   140012c5f:	push   r14
   140012c61:	push   r15
   140012c63:	mov    rbp,rsp
   140012c66:	sub    rsp,0x40
   140012c6a:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140012c72:	mov    r15,rcx
   140012c75:	and    QWORD PTR [rbp-0x18],0x0
   140012c7a:	and    QWORD PTR [rbp-0x8],0x0
   140012c7f:	and    QWORD PTR [rbp-0x10],0x0
   140012c84:	lea    rdx,[rip+0x24ea5]        # 0x140037b30
   140012c8b:	lea    rcx,[rbp-0x18]
   140012c8f:	call   0x14001721c
   140012c94:	mov    ecx,0x20
   140012c99:	call   0x140023f10
   140012c9e:	and    DWORD PTR [rax],0x0
   140012ca1:	and    QWORD PTR [rax+0x8],0x0
   140012ca6:	and    QWORD PTR [rax+0x10],0x0
   140012cab:	and    QWORD PTR [rax+0x18],0x0
   140012cb0:	lock inc DWORD PTR [rax]
   140012cb3:	mov    rcx,QWORD PTR [r15+0x60]
   140012cb7:	mov    QWORD PTR [r15+0x60],rax
   140012cbb:	mov    QWORD PTR [rbp+0x50],rcx
   140012cbf:	lea    rcx,[rbp+0x50]
   140012cc3:	call   0x140014b88
   140012cc8:	mov    rbx,QWORD PTR [rbp-0x18]
   140012ccc:	mov    rsi,QWORD PTR [rbp-0x10]
   140012cd0:	cmp    rbx,rsi
   140012cd3:	je     0x140012eab
   140012cd9:	movabs r13,0x1fffffffffffffff
   140012ce3:	mov    ecx,0x14
   140012ce8:	call   0x140023f10
   140012ced:	mov    rsi,rax
   140012cf0:	and    DWORD PTR [rax],0x0
   140012cf3:	lock inc DWORD PTR [rax]
   140012cf6:	mov    QWORD PTR [rbp+0x48],rax
   140012cfa:	lea    rdx,[rax+0x4]
   140012cfe:	mov    rcx,QWORD PTR [rbx]
   140012d01:	call   QWORD PTR [rip+0x1f989]        # 0x140032690
   140012d07:	test   eax,eax
   140012d09:	jns    0x140012d49
   140012d0b:	lea    rdx,[rip+0x38366]        # 0x14004b078
   140012d12:	mov    rcx,QWORD PTR [rip+0x3835f]        # 0x14004b078
   140012d19:	cmp    rcx,rdx
   140012d1c:	je     0x140012e74
   140012d22:	test   BYTE PTR [rcx+0x1c],0x2
   140012d26:	je     0x140012e74
   140012d2c:	mov    edx,0xb
   140012d31:	mov    r9d,eax
   140012d34:	lea    r8,[rip+0x24ba5]        # 0x1400378e0
   140012d3b:	mov    rcx,QWORD PTR [rcx+0x10]
   140012d3f:	call   0x140001f70
   140012d44:	jmp    0x140012e74
   140012d49:	mov    rdi,QWORD PTR [r15+0x60]
   140012d4d:	mov    rcx,QWORD PTR [rdi+0x10]
   140012d51:	lea    rax,[rbp+0x48]
   140012d55:	cmp    rax,rcx
   140012d58:	jae    0x140012dff
   140012d5e:	lea    rax,[rbp+0x48]
   140012d62:	cmp    QWORD PTR [rdi+0x8],rax
   140012d66:	ja     0x140012dff
   140012d6c:	lea    r14,[rbp+0x48]
   140012d70:	sub    r14,QWORD PTR [rdi+0x8]
   140012d74:	sar    r14,0x3
   140012d78:	mov    rdx,QWORD PTR [rdi+0x18]
   140012d7c:	cmp    rcx,rdx
   140012d7f:	jne    0x140012ddd
   140012d81:	mov    rax,rdx
   140012d84:	sub    rax,rcx
   140012d87:	sar    rax,0x3
   140012d8b:	cmp    rax,0x1
   140012d8f:	jae    0x140012ddd
   140012d91:	sub    rcx,QWORD PTR [rdi+0x8]
   140012d95:	sar    rcx,0x3
   140012d99:	mov    rax,r13
   140012d9c:	sub    rax,rcx
   140012d9f:	cmp    rax,0x1
   140012da3:	jb     0x140012e9b
   140012da9:	lea    r8,[rcx+0x1]
   140012dad:	sub    rdx,QWORD PTR [rdi+0x8]
   140012db1:	sar    rdx,0x3
   140012db5:	mov    rcx,rdx
   140012db8:	shr    rcx,1
   140012dbb:	mov    rax,r13
   140012dbe:	sub    rax,rcx
   140012dc1:	cmp    rax,rdx
   140012dc4:	jae    0x140012dca
   140012dc6:	xor    edx,edx
   140012dc8:	jmp    0x140012dcd
   140012dca:	add    rdx,rcx
   140012dcd:	cmp    rdx,r8
   140012dd0:	cmovb  rdx,r8
   140012dd4:	lea    rcx,[rdi+0x8]
   140012dd8:	call   0x140014d68
   140012ddd:	mov    rax,QWORD PTR [rdi+0x8]
   140012de1:	mov    rcx,QWORD PTR [rdi+0x10]
   140012de5:	test   rcx,rcx
   140012de8:	je     0x140012e6f
   140012dee:	mov    rax,QWORD PTR [rax+r14*8]
   140012df2:	test   rax,rax
   140012df5:	je     0x140012dfa
   140012df7:	lock inc DWORD PTR [rax]
   140012dfa:	mov    QWORD PTR [rcx],rax
   140012dfd:	jmp    0x140012e6f
   140012dff:	mov    rdx,QWORD PTR [rdi+0x18]
   140012e03:	cmp    rcx,rdx
   140012e06:	jne    0x140012e60
   140012e08:	mov    rax,rdx
   140012e0b:	sub    rax,rcx
   140012e0e:	sar    rax,0x3
   140012e12:	cmp    rax,0x1
   140012e16:	jae    0x140012e60
   140012e18:	sub    rcx,QWORD PTR [rdi+0x8]
   140012e1c:	sar    rcx,0x3
   140012e20:	mov    rax,r13
   140012e23:	sub    rax,rcx
   140012e26:	cmp    rax,0x1
   140012e2a:	jb     0x140012ea1
   140012e2c:	lea    r8,[rcx+0x1]
   140012e30:	sub    rdx,QWORD PTR [rdi+0x8]
   140012e34:	sar    rdx,0x3
   140012e38:	mov    rcx,rdx
   140012e3b:	shr    rcx,1
   140012e3e:	mov    rax,r13
   140012e41:	sub    rax,rcx
   140012e44:	cmp    rax,rdx
   140012e47:	jae    0x140012e4d
   140012e49:	xor    edx,edx
   140012e4b:	jmp    0x140012e50
   140012e4d:	add    rdx,rcx
   140012e50:	cmp    rdx,r8
   140012e53:	cmovb  rdx,r8
   140012e57:	lea    rcx,[rdi+0x8]
   140012e5b:	call   0x140014d68
   140012e60:	mov    rax,QWORD PTR [rdi+0x10]
   140012e64:	test   rax,rax
   140012e67:	je     0x140012e6f
   140012e69:	lock inc DWORD PTR [rsi]
   140012e6c:	mov    QWORD PTR [rax],rsi
   140012e6f:	add    QWORD PTR [rdi+0x10],0x8
   140012e74:	or     eax,0xffffffff
   140012e77:	lock xadd DWORD PTR [rsi],eax
   140012e7b:	cmp    eax,0x1
   140012e7e:	jne    0x140012e89
   140012e80:	mov    rcx,rsi
   140012e83:	call   QWORD PTR [rip+0x1f73f]        # 0x1400325c8
   140012e89:	add    rbx,0x8
   140012e8d:	mov    rsi,QWORD PTR [rbp-0x10]
   140012e91:	cmp    rbx,rsi
   140012e94:	je     0x140012ea7
   140012e96:	jmp    0x140012ce3
   140012e9b:	call   0x14000d388
   140012ea0:	int3   
   140012ea1:	call   0x14000d388
   140012ea6:	nop
   140012ea7:	mov    rbx,QWORD PTR [rbp-0x18]
   140012eab:	test   rbx,rbx
   140012eae:	je     0x140012ed3
   140012eb0:	mov    rdi,rbx
   140012eb3:	cmp    rbx,rsi
   140012eb6:	je     0x140012eca
   140012eb8:	mov    rcx,QWORD PTR [rdi]
   140012ebb:	call   QWORD PTR [rip+0x1f48f]        # 0x140032350
   140012ec1:	add    rdi,0x8
   140012ec5:	cmp    rdi,rsi
   140012ec8:	jne    0x140012eb8
   140012eca:	mov    rcx,rbx
   140012ecd:	call   QWORD PTR [rip+0x1f6f5]        # 0x1400325c8
   140012ed3:	add    rsp,0x40
   140012ed7:	pop    r15
   140012ed9:	pop    r14
   140012edb:	pop    r13
   140012edd:	pop    rdi
   140012ede:	pop    rsi
   140012edf:	pop    rbx
   140012ee0:	pop    rbp
   140012ee1:	ret    
   140012ee2:	int3   
   140012ee3:	int3   
   140012ee4:	int3   
   140012ee5:	int3   
   140012ee6:	int3   
   140012ee7:	int3   
   140012ee8:	mov    rax,rsp
   140012eeb:	push   rdi
   140012eec:	push   r12
   140012eee:	push   r14
   140012ef0:	sub    rsp,0x40
   140012ef4:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140012efc:	mov    QWORD PTR [rax+0x10],rbx
   140012f00:	mov    QWORD PTR [rax+0x18],rbp
   140012f04:	mov    rdi,rcx
   140012f07:	and    QWORD PTR [rax-0x30],0x0
   140012f0c:	and    QWORD PTR [rax-0x20],0x0
   140012f11:	and    QWORD PTR [rax-0x28],0x0
   140012f16:	lea    rdx,[rip+0x24cb3]        # 0x140037bd0
   140012f1d:	lea    rcx,[rax-0x30]
   140012f21:	call   0x14001721c
   140012f26:	mov    rax,QWORD PTR [rdi+0x68]
   140012f2a:	mov    QWORD PTR [rdi+0x70],rax
   140012f2e:	mov    rbx,QWORD PTR [rsp+0x28]
   140012f33:	mov    r14,QWORD PTR [rsp+0x30]
   140012f38:	cmp    rbx,r14
   140012f3b:	je     0x14001309a
   140012f41:	movabs r12,0x3fffffffffffffff
   140012f4b:	xor    edx,edx
   140012f4d:	lea    r8d,[rdx+0xa]
   140012f51:	mov    rcx,QWORD PTR [rbx]
   140012f54:	call   QWORD PTR [rip+0x1f656]        # 0x1400325b0
   140012f5a:	mov    ebp,eax
   140012f5c:	mov    DWORD PTR [rsp+0x60],eax
   140012f60:	test   eax,eax
   140012f62:	je     0x140013080
   140012f68:	mov    rcx,QWORD PTR [rdi+0x70]
   140012f6c:	lea    rax,[rsp+0x60]
   140012f71:	cmp    rax,rcx
   140012f74:	jae    0x14001300f
   140012f7a:	lea    rax,[rsp+0x60]
   140012f7f:	cmp    QWORD PTR [rdi+0x68],rax
   140012f83:	ja     0x14001300f
   140012f89:	lea    rbp,[rsp+0x60]
   140012f8e:	sub    rbp,QWORD PTR [rdi+0x68]
   140012f92:	sar    rbp,0x2
   140012f96:	mov    rdx,QWORD PTR [rdi+0x78]
   140012f9a:	cmp    rcx,rdx
   140012f9d:	jne    0x140012ffb
   140012f9f:	mov    rax,rdx
   140012fa2:	sub    rax,rcx
   140012fa5:	sar    rax,0x2
   140012fa9:	cmp    rax,0x1
   140012fad:	jae    0x140012ffb
   140012faf:	sub    rcx,QWORD PTR [rdi+0x68]
   140012fb3:	sar    rcx,0x2
   140012fb7:	mov    rax,r12
   140012fba:	sub    rax,rcx
   140012fbd:	cmp    rax,0x1
   140012fc1:	jb     0x14001308e
   140012fc7:	lea    r8,[rcx+0x1]
   140012fcb:	sub    rdx,QWORD PTR [rdi+0x68]
   140012fcf:	sar    rdx,0x2
   140012fd3:	mov    rcx,rdx
   140012fd6:	shr    rcx,1
   140012fd9:	mov    rax,r12
   140012fdc:	sub    rax,rcx
   140012fdf:	cmp    rax,rdx
   140012fe2:	jae    0x140012fe8
   140012fe4:	xor    edx,edx
   140012fe6:	jmp    0x140012feb
   140012fe8:	add    rdx,rcx
   140012feb:	cmp    rdx,r8
   140012fee:	cmovb  rdx,r8
   140012ff2:	lea    rcx,[rdi+0x68]
   140012ff6:	call   0x140014e50
   140012ffb:	mov    rax,QWORD PTR [rdi+0x68]
   140012fff:	mov    rcx,QWORD PTR [rdi+0x70]
   140013003:	test   rcx,rcx
   140013006:	je     0x14001307b
   140013008:	mov    eax,DWORD PTR [rax+rbp*4]
   14001300b:	mov    DWORD PTR [rcx],eax
   14001300d:	jmp    0x14001307b
   14001300f:	mov    rdx,QWORD PTR [rdi+0x78]
   140013013:	cmp    rcx,rdx
   140013016:	jne    0x140013070
   140013018:	mov    rax,rdx
   14001301b:	sub    rax,rcx
   14001301e:	sar    rax,0x2
   140013022:	cmp    rax,0x1
   140013026:	jae    0x140013070
   140013028:	sub    rcx,QWORD PTR [rdi+0x68]
   14001302c:	sar    rcx,0x2
   140013030:	mov    rax,r12
   140013033:	sub    rax,rcx
   140013036:	cmp    rax,0x1
   14001303a:	jb     0x140013094
   14001303c:	lea    r8,[rcx+0x1]
   140013040:	sub    rdx,QWORD PTR [rdi+0x68]
   140013044:	sar    rdx,0x2
   140013048:	mov    rcx,rdx
   14001304b:	shr    rcx,1
   14001304e:	mov    rax,r12
   140013051:	sub    rax,rcx
   140013054:	cmp    rax,rdx
   140013057:	jae    0x14001305d
   140013059:	xor    edx,edx
   14001305b:	jmp    0x140013060
   14001305d:	add    rdx,rcx
   140013060:	cmp    rdx,r8
   140013063:	cmovb  rdx,r8
   140013067:	lea    rcx,[rdi+0x68]
   14001306b:	call   0x140014e50
   140013070:	mov    rax,QWORD PTR [rdi+0x70]
   140013074:	test   rax,rax
   140013077:	je     0x14001307b
   140013079:	mov    DWORD PTR [rax],ebp
   14001307b:	add    QWORD PTR [rdi+0x70],0x4
   140013080:	add    rbx,0x8
   140013084:	cmp    rbx,r14
   140013087:	je     0x14001309a
   140013089:	jmp    0x140012f4b
   14001308e:	call   0x14000d388
   140013093:	int3   
   140013094:	call   0x14000d388
   140013099:	nop
   14001309a:	cmp    QWORD PTR [rsp+0x28],0x0
   1400130a0:	je     0x1400130c9
   1400130a2:	mov    rbx,QWORD PTR [rsp+0x28]
   1400130a7:	cmp    rbx,r14
   1400130aa:	je     0x1400130be
   1400130ac:	mov    rcx,QWORD PTR [rbx]
   1400130af:	call   QWORD PTR [rip+0x1f29b]        # 0x140032350
   1400130b5:	add    rbx,0x8
   1400130b9:	cmp    rbx,r14
   1400130bc:	jne    0x1400130ac
   1400130be:	mov    rcx,QWORD PTR [rsp+0x28]
   1400130c3:	call   QWORD PTR [rip+0x1f4ff]        # 0x1400325c8
   1400130c9:	mov    rbx,QWORD PTR [rsp+0x68]
   1400130ce:	mov    rbp,QWORD PTR [rsp+0x70]
   1400130d3:	add    rsp,0x40
   1400130d7:	pop    r14
   1400130d9:	pop    r12
   1400130db:	pop    rdi
   1400130dc:	ret    
   1400130dd:	int3   
   1400130de:	int3   
   1400130df:	int3   
   1400130e0:	int3   
   1400130e1:	int3   
   1400130e2:	int3   
   1400130e3:	int3   
   1400130e4:	mov    rax,rsp
   1400130e7:	push   rbp
   1400130e8:	push   rsi
   1400130e9:	push   rdi
   1400130ea:	push   r12
   1400130ec:	push   r13
   1400130ee:	push   r14
   1400130f0:	push   r15
   1400130f2:	lea    rbp,[rax-0x5f]
   1400130f6:	sub    rsp,0xe0
   1400130fd:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   140013105:	mov    QWORD PTR [rax+0x18],rbx
   140013109:	mov    rax,QWORD PTR [rip+0x37f10]        # 0x14004b020
   140013110:	xor    rax,rsp
   140013113:	mov    QWORD PTR [rbp+0x17],rax
   140013117:	mov    rdi,rdx
   14001311a:	mov    QWORD PTR [rbp-0x41],rdx
   14001311e:	mov    rsi,rcx
   140013121:	xor    r13d,r13d
   140013124:	mov    DWORD PTR [rbp-0x79],r13d
   140013128:	mov    r14b,r13b
   14001312b:	lea    rcx,[rip+0x241ce]        # 0x140037300
   140013132:	call   QWORD PTR [rip+0x1f200]        # 0x140032338
   140013138:	mov    rax,QWORD PTR [rdi]
   14001313b:	mov    rbx,QWORD PTR [rax+0x18]
   14001313f:	mov    rcx,rbx
   140013142:	call   QWORD PTR [rip+0x1f560]        # 0x1400326a8
   140013148:	lea    rdx,[rbp-0x79]
   14001314c:	mov    rcx,rdi
   14001314f:	call   rbx
   140013151:	test   eax,eax
   140013153:	jns    0x14001315d
   140013155:	mov    ecx,eax
   140013157:	call   0x140029d64
   14001315c:	int3   
   14001315d:	mov    r15d,r13d
   140013160:	mov    eax,DWORD PTR [rbp-0x79]
   140013163:	mov    ecx,0x1
   140013168:	mov    r12d,r13d
   14001316b:	test   eax,eax
   14001316d:	je     0x1400134ab
   140013173:	mov    QWORD PTR [rbp-0x71],r13
   140013177:	mov    rax,QWORD PTR [rdi]
   14001317a:	mov    rbx,QWORD PTR [rax+0x20]
   14001317e:	mov    rcx,rbx
   140013181:	call   QWORD PTR [rip+0x1f521]        # 0x1400326a8
   140013187:	lea    r8,[rbp-0x71]
   14001318b:	mov    edx,r12d
   14001318e:	mov    rcx,rdi
   140013191:	call   rbx
   140013193:	test   eax,eax
   140013195:	js     0x14001351d
   14001319b:	mov    QWORD PTR [rbp-0x61],r13
   14001319f:	mov    rbx,QWORD PTR [rbp-0x71]
   1400131a3:	mov    rax,QWORD PTR [rbx]
   1400131a6:	mov    rdi,QWORD PTR [rax]
   1400131a9:	mov    rcx,rdi
   1400131ac:	call   QWORD PTR [rip+0x1f4f6]        # 0x1400326a8
   1400131b2:	lea    r8,[rbp-0x61]
   1400131b6:	lea    rdx,[rip+0x246f3]        # 0x1400378b0
   1400131bd:	mov    rcx,rbx
   1400131c0:	call   rdi
   1400131c2:	test   eax,eax
   1400131c4:	js     0x140013515
   1400131ca:	mov    rbx,QWORD PTR [rbp-0x71]
   1400131ce:	mov    rax,QWORD PTR [rbx]
   1400131d1:	mov    rdi,QWORD PTR [rax+0x18]
   1400131d5:	mov    rcx,rdi
   1400131d8:	call   QWORD PTR [rip+0x1f4ca]        # 0x1400326a8
   1400131de:	lea    rdx,[rbp+0x7]
   1400131e2:	mov    rcx,rbx
   1400131e5:	call   rdi
   1400131e7:	test   eax,eax
   1400131e9:	js     0x14001350d
   1400131ef:	mov    QWORD PTR [rbp-0x59],r13
   1400131f3:	mov    rbx,QWORD PTR [rbp-0x71]
   1400131f7:	mov    rax,QWORD PTR [rbx]
   1400131fa:	mov    rdi,QWORD PTR [rax+0x20]
   1400131fe:	mov    rcx,rdi
   140013201:	call   QWORD PTR [rip+0x1f4a1]        # 0x1400326a8
   140013207:	lea    rdx,[rbp-0x59]
   14001320b:	mov    rcx,rbx
   14001320e:	call   rdi
   140013210:	test   eax,eax
   140013212:	js     0x140013505
   140013218:	mov    r8,QWORD PTR [rbp-0x61]
   14001321c:	mov    rdx,QWORD PTR [rbp-0x59]
   140013220:	lea    rcx,[rbp+0x7]
   140013224:	call   0x140013d58
   140013229:	movsxd rbx,eax
   14001322c:	cmp    ebx,r15d
   14001322f:	je     0x140013282
   140013231:	mov    rcx,QWORD PTR [rbp-0x59]
   140013235:	call   QWORD PTR [rip+0x1f115]        # 0x140032350
   14001323b:	nop
   14001323c:	mov    rbx,QWORD PTR [rbp-0x61]
   140013240:	test   rbx,rbx
   140013243:	je     0x14001325b
   140013245:	mov    rax,QWORD PTR [rbx]
   140013248:	mov    rdi,QWORD PTR [rax+0x10]
   14001324c:	mov    rcx,rdi
   14001324f:	call   QWORD PTR [rip+0x1f453]        # 0x1400326a8
   140013255:	mov    rcx,rbx
   140013258:	call   rdi
   14001325a:	nop
   14001325b:	mov    rbx,QWORD PTR [rbp-0x71]
   14001325f:	test   rbx,rbx
   140013262:	je     0x140013493
   140013268:	mov    rax,QWORD PTR [rbx]
   14001326b:	mov    rdi,QWORD PTR [rax+0x10]
   14001326f:	mov    rcx,rdi
   140013272:	call   QWORD PTR [rip+0x1f430]        # 0x1400326a8
   140013278:	mov    rcx,rbx
   14001327b:	call   rdi
   14001327d:	jmp    0x140013493
   140013282:	mov    QWORD PTR [rbp-0x69],r13
   140013286:	lea    rax,[rbp-0x69]
   14001328a:	mov    QWORD PTR [rsp+0x38],rax
   14001328f:	mov    BYTE PTR [rsp+0x30],r14b
   140013294:	mov    DWORD PTR [rsp+0x28],ebx
   140013298:	mov    rax,QWORD PTR [rbp-0x61]
   14001329c:	mov    QWORD PTR [rsp+0x20],rax
   1400132a1:	mov    r9,QWORD PTR [rbp-0x71]
   1400132a5:	lea    r8,[rbp-0x59]
   1400132a9:	lea    rdx,[rbp+0x7]
   1400132ad:	mov    rcx,rsi
   1400132b0:	call   0x1400135e8
   1400132b5:	mov    rdi,QWORD PTR [rbp-0x69]
   1400132b9:	test   rdi,rdi
   1400132bc:	jne    0x1400132c3
   1400132be:	jmp    0x140013231
   1400132c3:	cmp    ebx,0x3
   1400132c6:	ja     0x1400132d6
   1400132c8:	mov    r8d,0x1
   1400132ce:	add    QWORD PTR [rsi+rbx*8+0xb8],r8
   1400132d6:	movzx  r14d,r14b
   1400132da:	mov    eax,0x1
   1400132df:	cmp    ebx,eax
   1400132e1:	cmovbe r14d,eax
   1400132e5:	mov    DWORD PTR [rbp-0x4d],r14d
   1400132e9:	lea    r14,[rsi+0x20]
   1400132ed:	mov    rbx,QWORD PTR [r14]
   1400132f0:	lea    r13,[rdi+0xc]
   1400132f4:	mov    r8,r13
   1400132f7:	lea    rdx,[rbp-0x39]
   1400132fb:	mov    rcx,r14
   1400132fe:	call   0x140014aa4
   140013303:	cmp    QWORD PTR [rbp-0x39],rbx
   140013307:	jne    0x1400134c6
   14001330d:	mov    r8,r13
   140013310:	lea    rdx,[rbp-0x49]
   140013314:	mov    rcx,r14
   140013317:	call   0x140014aa4
   14001331c:	cmp    QWORD PTR [rbp-0x49],rbx
   140013320:	jne    0x1400133d3
   140013326:	movups xmm0,XMMWORD PTR [r13+0x0]
   14001332b:	movdqu XMMWORD PTR [rbp-0x31],xmm0
   140013330:	xor    r13d,r13d
   140013333:	mov    QWORD PTR [rbp-0x21],r13
   140013337:	mov    QWORD PTR [rbp-0x19],r13
   14001333b:	mov    rbx,QWORD PTR [rbx]
   14001333e:	lea    r9,[rbp-0x31]
   140013342:	mov    r8,QWORD PTR [rbx+0x8]
   140013346:	mov    rdx,rbx
   140013349:	call   0x1400152cc
   14001334e:	mov    rdx,QWORD PTR [r14+0x8]
   140013352:	movabs rcx,0x666666666666665
   14001335c:	sub    rcx,rdx
   14001335f:	lea    r8d,[r13+0x1]
   140013363:	cmp    rcx,r8
   140013366:	jb     0x1400134b9
   14001336c:	inc    rdx
   14001336f:	mov    QWORD PTR [r14+0x8],rdx
   140013373:	mov    QWORD PTR [rbx+0x8],rax
   140013377:	mov    rdx,QWORD PTR [rax+0x8]
   14001337b:	mov    QWORD PTR [rdx],rax
   14001337e:	mov    r9,QWORD PTR [r14]
   140013381:	mov    r9,QWORD PTR [r9]
   140013384:	lea    r8,[r9+0x10]
   140013388:	lea    rdx,[rbp-0x9]
   14001338c:	mov    rcx,r14
   14001338f:	call   0x140014f0c
   140013394:	mov    rcx,QWORD PTR [rax]
   140013397:	mov    QWORD PTR [rbp-0x49],rcx
   14001339b:	mov    rcx,QWORD PTR [rbp-0x21]
   14001339f:	test   rcx,rcx
   1400133a2:	je     0x1400133d1
   1400133a4:	or     eax,0xffffffff
   1400133a7:	lock xadd DWORD PTR [rcx+0x8],eax
   1400133ac:	cmp    eax,0x1
   1400133af:	jne    0x1400133cd
   1400133b1:	mov    rdi,QWORD PTR [rbp-0x21]
   1400133b5:	mov    rax,QWORD PTR [rdi]
   1400133b8:	mov    rbx,QWORD PTR [rax]
   1400133bb:	mov    rcx,rbx
   1400133be:	call   QWORD PTR [rip+0x1f2e4]        # 0x1400326a8
   1400133c4:	lea    edx,[r13+0x1]
   1400133c8:	mov    rcx,rdi
   1400133cb:	call   rbx
   1400133cd:	mov    rdi,QWORD PTR [rbp-0x69]
   1400133d1:	jmp    0x1400133d6
   1400133d3:	xor    r13d,r13d
   1400133d6:	mov    rcx,QWORD PTR [rbp-0x49]
   1400133da:	mov    eax,0x1
   1400133df:	lock add DWORD PTR [rdi+0x8],eax
   1400133e3:	mov    r14,QWORD PTR [rcx+0x20]
   1400133e7:	mov    rax,QWORD PTR [rbp-0x69]
   1400133eb:	mov    QWORD PTR [rcx+0x20],rax
   1400133ef:	test   r14,r14
   1400133f2:	je     0x14001341c
   1400133f4:	or     eax,0xffffffff
   1400133f7:	lock xadd DWORD PTR [r14+0x8],eax
   1400133fd:	cmp    eax,0x1
   140013400:	jne    0x14001341c
   140013402:	mov    rax,QWORD PTR [r14]
   140013405:	mov    rbx,QWORD PTR [rax]
   140013408:	mov    rcx,rbx
   14001340b:	call   QWORD PTR [rip+0x1f297]        # 0x1400326a8
   140013411:	mov    edx,0x1
   140013416:	mov    rcx,r14
   140013419:	call   rbx
   14001341b:	nop
   14001341c:	or     eax,0xffffffff
   14001341f:	lock xadd DWORD PTR [rdi+0x8],eax
   140013424:	cmp    eax,0x1
   140013427:	jne    0x140013447
   140013429:	mov    rbx,QWORD PTR [rbp-0x69]
   14001342d:	mov    rax,QWORD PTR [rbx]
   140013430:	mov    rdi,QWORD PTR [rax]
   140013433:	mov    rcx,rdi
   140013436:	call   QWORD PTR [rip+0x1f26c]        # 0x1400326a8
   14001343c:	mov    edx,0x1
   140013441:	mov    rcx,rbx
   140013444:	call   rdi
   140013446:	nop
   140013447:	mov    rcx,QWORD PTR [rbp-0x59]
   14001344b:	call   QWORD PTR [rip+0x1eeff]        # 0x140032350
   140013451:	nop
   140013452:	mov    rbx,QWORD PTR [rbp-0x61]
   140013456:	test   rbx,rbx
   140013459:	je     0x140013471
   14001345b:	mov    rax,QWORD PTR [rbx]
   14001345e:	mov    rdi,QWORD PTR [rax+0x10]
   140013462:	mov    rcx,rdi
   140013465:	call   QWORD PTR [rip+0x1f23d]        # 0x1400326a8
   14001346b:	mov    rcx,rbx
   14001346e:	call   rdi
   140013470:	nop
   140013471:	mov    rbx,QWORD PTR [rbp-0x71]
   140013475:	test   rbx,rbx
   140013478:	je     0x14001348f
   14001347a:	mov    rax,QWORD PTR [rbx]
   14001347d:	mov    rdi,QWORD PTR [rax+0x10]
   140013481:	mov    rcx,rdi
   140013484:	call   QWORD PTR [rip+0x1f21e]        # 0x1400326a8
   14001348a:	mov    rcx,rbx
   14001348d:	call   rdi
   14001348f:	mov    r14d,DWORD PTR [rbp-0x4d]
   140013493:	inc    r12d
   140013496:	mov    eax,DWORD PTR [rbp-0x79]
   140013499:	cmp    r12d,eax
   14001349c:	mov    rdi,QWORD PTR [rbp-0x41]
   1400134a0:	jb     0x140013173
   1400134a6:	mov    ecx,0x1
   1400134ab:	add    r15d,ecx
   1400134ae:	cmp    r15d,0x4
   1400134b2:	jg     0x140013525
   1400134b4:	jmp    0x140013168
   1400134b9:	lea    rcx,[rip+0x23cc0]        # 0x140037180
   1400134c0:	call   0x14002d7f8
   1400134c5:	nop
   1400134c6:	lea    rax,[rip+0x37bab]        # 0x14004b078
   1400134cd:	mov    rcx,QWORD PTR [rip+0x37ba4]        # 0x14004b078
   1400134d4:	cmp    rcx,rax
   1400134d7:	je     0x1400134fa
   1400134d9:	mov    eax,0x1
   1400134de:	test   BYTE PTR [rcx+0x1c],al
   1400134e1:	je     0x1400134fa
   1400134e3:	lea    r9,[rdi+0xc]
   1400134e7:	lea    edx,[rax+0xd]
   1400134ea:	lea    r8,[rip+0x243ef]        # 0x1400378e0
   1400134f1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400134f5:	call   0x14000756c
   1400134fa:	mov    ecx,0x8000ffff
   1400134ff:	call   0x140029d64
   140013504:	nop
   140013505:	mov    ecx,eax
   140013507:	call   0x140029d64
   14001350c:	nop
   14001350d:	mov    ecx,eax
   14001350f:	call   0x140029d64
   140013514:	int3   
   140013515:	mov    ecx,eax
   140013517:	call   0x140029d64
   14001351c:	nop
   14001351d:	mov    ecx,eax
   14001351f:	call   0x140029d64
   140013524:	nop
   140013525:	lea    rcx,[rip+0x23e0c]        # 0x140037338
   14001352c:	call   QWORD PTR [rip+0x1ee06]        # 0x140032338
   140013532:	mov    r8,QWORD PTR [rsi+0x28]
   140013536:	mov    edx,DWORD PTR [rbp-0x79]
   140013539:	lea    rcx,[rip+0x23e30]        # 0x140037370
   140013540:	call   QWORD PTR [rip+0x1edea]        # 0x140032330
   140013546:	mov    rax,QWORD PTR [rsi+0xd0]
   14001354d:	mov    QWORD PTR [rsp+0x20],rax
   140013552:	mov    r9,QWORD PTR [rsi+0xb8]
   140013559:	mov    r8,QWORD PTR [rsi+0xc0]
   140013560:	mov    rdx,QWORD PTR [rsi+0xc8]
   140013567:	lea    rcx,[rip+0x23e52]        # 0x1400373c0
   14001356e:	call   QWORD PTR [rip+0x1edbc]        # 0x140032330
   140013574:	mov    edx,DWORD PTR [rsi+0xb8]
   14001357a:	mov    ecx,0xc5
   14001357f:	call   QWORD PTR [rip+0x1eeb3]        # 0x140032438
   140013585:	mov    edx,DWORD PTR [rsi+0xc0]
   14001358b:	mov    ecx,0xc6
   140013590:	call   QWORD PTR [rip+0x1eea2]        # 0x140032438
   140013596:	mov    edx,DWORD PTR [rsi+0xc8]
   14001359c:	mov    ecx,0xc7
   1400135a1:	call   QWORD PTR [rip+0x1ee91]        # 0x140032438
   1400135a7:	mov    edx,DWORD PTR [rsi+0xd0]
   1400135ad:	mov    ecx,0xc8
   1400135b2:	call   QWORD PTR [rip+0x1ee80]        # 0x140032438
   1400135b8:	mov    rcx,QWORD PTR [rbp+0x17]
   1400135bc:	xor    rcx,rsp
   1400135bf:	call   0x14002dd00
   1400135c4:	mov    rbx,QWORD PTR [rsp+0x130]
   1400135cc:	add    rsp,0xe0
   1400135d3:	pop    r15
   1400135d5:	pop    r14
   1400135d7:	pop    r13
   1400135d9:	pop    r12
   1400135db:	pop    rdi
   1400135dc:	pop    rsi
   1400135dd:	pop    rbp
   1400135de:	ret    
   1400135df:	int3   
   1400135e0:	int3   
   1400135e1:	int3   
   1400135e2:	int3   
   1400135e3:	int3   
   1400135e4:	int3   
   1400135e5:	int3   
   1400135e6:	int3   
   1400135e7:	int3   
   1400135e8:	rex push rbp
   1400135ea:	push   rbx
   1400135eb:	push   rsi
   1400135ec:	push   rdi
   1400135ed:	push   r12
   1400135ef:	push   r13
   1400135f1:	push   r14
   1400135f3:	push   r15
   1400135f5:	lea    rbp,[rsp-0x7]
   1400135fa:	sub    rsp,0x98
   140013601:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   140013609:	mov    QWORD PTR [rbp-0x29],r9
   14001360d:	mov    r15,r8
   140013610:	mov    r12,rdx
   140013613:	mov    rdi,rcx
   140013616:	mov    rax,QWORD PTR [rbp+0x6f]
   14001361a:	mov    QWORD PTR [rbp-0x41],rax
   14001361e:	mov    rax,QWORD PTR [rbp+0x87]
   140013625:	mov    QWORD PTR [rbp-0x21],rax
   140013629:	mov    esi,0x1
   14001362e:	mov    DWORD PTR [rbp-0x4d],esi
   140013631:	xor    edx,edx
   140013633:	mov    r14d,edx
   140013636:	mov    QWORD PTR [rbp-0x31],rdx
   14001363a:	mov    QWORD PTR [rbp-0x11],rdx
   14001363e:	mov    QWORD PTR [rax],rdx
   140013641:	mov    DWORD PTR [rbp-0x49],esi
   140013644:	mov    r13d,DWORD PTR [rbp+0x77]
   140013648:	mov    ecx,r13d
   14001364b:	test   r13d,r13d
   14001364e:	je     0x14001368f
   140013650:	sub    ecx,esi
   140013652:	je     0x14001368a
   140013654:	sub    ecx,esi
   140013656:	je     0x140013661
   140013658:	cmp    ecx,esi
   14001365a:	je     0x14001368f
   14001365c:	mov    DWORD PTR [rbp-0x49],edx
   14001365f:	jmp    0x140013692
   140013661:	mov    rax,QWORD PTR [r9]
   140013664:	mov    rbx,QWORD PTR [rax+0xb0]
   14001366b:	mov    rcx,rbx
   14001366e:	call   QWORD PTR [rip+0x1f034]        # 0x1400326a8
   140013674:	lea    rdx,[rbp-0x4d]
   140013678:	mov    rcx,QWORD PTR [rbp-0x29]
   14001367c:	call   rbx
   14001367e:	test   eax,eax
   140013680:	jns    0x140013692
   140013682:	mov    ecx,eax
   140013684:	call   0x140029d64
   140013689:	int3   
   14001368a:	mov    DWORD PTR [rbp-0x4d],edx
   14001368d:	jmp    0x140013692
   14001368f:	mov    DWORD PTR [rbp-0x4d],esi
   140013692:	or     DWORD PTR [rbp-0x39],0xffffffff
   140013696:	call   QWORD PTR [rip+0x1edb4]        # 0x140032450
   14001369c:	mov    rbx,QWORD PTR [rax+0xa0]
   1400136a3:	mov    rcx,rbx
   1400136a6:	call   QWORD PTR [rip+0x1effc]        # 0x1400326a8
   1400136ac:	lea    r8,[rbp-0x39]
   1400136b0:	or     edx,0xffffffff
   1400136b3:	lea    rcx,[rip+0x23dde]        # 0x140037498
   1400136ba:	call   rbx
   1400136bc:	mov    r9d,DWORD PTR [rbp-0x39]
   1400136c0:	mov    DWORD PTR [rdi+0x9c],r9d
   1400136c7:	lea    rax,[rip+0x379aa]        # 0x14004b078
   1400136ce:	mov    rcx,QWORD PTR [rip+0x379a3]        # 0x14004b078
   1400136d5:	cmp    rcx,rax
   1400136d8:	je     0x1400136fc
   1400136da:	test   BYTE PTR [rcx+0x1c],0x4
   1400136de:	je     0x1400136fc
   1400136e0:	mov    edx,0xf
   1400136e5:	lea    r8,[rip+0x241f4]        # 0x1400378e0
   1400136ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400136f0:	call   0x140001f70
   1400136f5:	mov    rcx,QWORD PTR [rip+0x3797c]        # 0x14004b078
   1400136fc:	xor    ebx,ebx
   1400136fe:	mov    QWORD PTR [rbp-0x31],rbx
   140013702:	mov    BYTE PTR [rbp-0x51],sil
   140013706:	mov    eax,DWORD PTR [rdi+0x9c]
   14001370c:	and    eax,0x20
   14001370f:	test   al,al
   140013711:	je     0x140013753
   140013713:	lea    rax,[rbp-0x31]
   140013717:	mov    QWORD PTR [rsp+0x20],rax
   14001371c:	lea    r9,[rbp-0x51]
   140013720:	mov    r8,QWORD PTR [rbp-0x41]
   140013724:	mov    rdx,QWORD PTR [r15]
   140013727:	mov    rcx,r12
   14001372a:	call   0x1400140c4
   14001372f:	test   al,al
   140013731:	je     0x140013748
   140013733:	xor    esi,esi
   140013735:	cmp    BYTE PTR [rbp-0x51],bl
   140013738:	setne  sil
   14001373c:	mov    rbx,QWORD PTR [rbp-0x31]
   140013740:	mov    r14,rbx
   140013743:	jmp    0x140013a0f
   140013748:	mov    rbx,QWORD PTR [rbp-0x31]
   14001374c:	mov    rcx,QWORD PTR [rip+0x37925]        # 0x14004b078
   140013753:	cmp    DWORD PTR [rbp-0x49],0x0
   140013757:	jne    0x14001379b
   140013759:	test   BYTE PTR [rdi+0x9c],sil
   140013760:	je     0x14001379b
   140013762:	lea    rax,[rip+0x3790f]        # 0x14004b078
   140013769:	cmp    rcx,rax
   14001376c:	je     0x14001378d
   14001376e:	test   BYTE PTR [rcx+0x1c],0x4
   140013772:	je     0x14001378d
   140013774:	mov    edx,0x10
   140013779:	mov    rax,QWORD PTR [r15]
   14001377c:	mov    QWORD PTR [rsp+0x20],rax
   140013781:	mov    r9,r12
   140013784:	mov    rcx,QWORD PTR [rcx+0x10]
   140013788:	call   0x140012894
   14001378d:	lea    r14,[rip+0x23d3c]        # 0x1400374d0
   140013794:	xor    esi,esi
   140013796:	jmp    0x140013a13
   14001379b:	test   r13d,0xfffffffc
   1400137a2:	jne    0x1400137f3
   1400137a4:	cmp    r13d,0x2
   1400137a8:	je     0x1400137f9
   1400137aa:	cmp    BYTE PTR [rdi+0xa0],0x0
   1400137b1:	jne    0x1400137f3
   1400137b3:	test   DWORD PTR [rdi+0x9c],0x200
   1400137bd:	je     0x1400137f3
   1400137bf:	lea    rax,[rip+0x378b2]        # 0x14004b078
   1400137c6:	cmp    rcx,rax
   1400137c9:	je     0x1400137ea
   1400137cb:	test   BYTE PTR [rcx+0x1c],0x4
   1400137cf:	je     0x1400137ea
   1400137d1:	mov    edx,0x11
   1400137d6:	mov    rax,QWORD PTR [r15]
   1400137d9:	mov    QWORD PTR [rsp+0x20],rax
   1400137de:	mov    r9,r12
   1400137e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400137e5:	call   0x140012894
   1400137ea:	lea    r14,[rip+0x23d0f]        # 0x140037500
   1400137f1:	jmp    0x140013794
   1400137f3:	cmp    r13d,0x2
   1400137f7:	jne    0x140013842
   1400137f9:	cmp    BYTE PTR [rdi+0x91],0x0
   140013800:	jne    0x140013848
   140013802:	test   BYTE PTR [rdi+0x9c],0x80
   140013809:	je     0x140013848
   14001380b:	lea    rax,[rip+0x37866]        # 0x14004b078
   140013812:	cmp    rcx,rax
   140013815:	je     0x140013836
   140013817:	test   BYTE PTR [rcx+0x1c],0x4
   14001381b:	je     0x140013836
   14001381d:	mov    edx,0x12
   140013822:	mov    rax,QWORD PTR [r15]
   140013825:	mov    QWORD PTR [rsp+0x20],rax
   14001382a:	mov    r9,r12
   14001382d:	mov    rcx,QWORD PTR [rcx+0x10]
   140013831:	call   0x140012894
   140013836:	lea    r14,[rip+0x23d23]        # 0x140037560
   14001383d:	jmp    0x140013794
   140013842:	cmp    r13d,0x3
   140013846:	jne    0x14001389a
   140013848:	cmp    BYTE PTR [rbp+0x7f],0x0
   14001384c:	je     0x14001389a
   14001384e:	cmp    BYTE PTR [rdi+0x92],0x0
   140013855:	je     0x14001389a
   140013857:	test   DWORD PTR [rdi+0x9c],0x100
   140013861:	je     0x14001389a
   140013863:	lea    rax,[rip+0x3780e]        # 0x14004b078
   14001386a:	cmp    rcx,rax
   14001386d:	je     0x14001388e
   14001386f:	test   BYTE PTR [rcx+0x1c],0x4
   140013873:	je     0x14001388e
   140013875:	mov    edx,0x13
   14001387a:	mov    rax,QWORD PTR [r15]
   14001387d:	mov    QWORD PTR [rsp+0x20],rax
   140013882:	mov    r9,r12
   140013885:	mov    rcx,QWORD PTR [rcx+0x10]
   140013889:	call   0x140012894
   14001388e:	lea    r14,[rip+0x23d2b]        # 0x1400375c0
   140013895:	jmp    0x140013794
   14001389a:	test   r13d,r13d
   14001389d:	je     0x1400138a5
   14001389f:	cmp    r13d,0x3
   1400138a3:	jne    0x1400138f5
   1400138a5:	call   0x14001706c
   1400138aa:	test   eax,eax
   1400138ac:	jne    0x1400138f5
   1400138ae:	test   BYTE PTR [rdi+0x9c],0x2
   1400138b5:	je     0x1400138f5
   1400138b7:	mov    rcx,QWORD PTR [rip+0x377ba]        # 0x14004b078
   1400138be:	lea    rax,[rip+0x377b3]        # 0x14004b078
   1400138c5:	cmp    rcx,rax
   1400138c8:	je     0x1400138e9
   1400138ca:	test   BYTE PTR [rcx+0x1c],0x4
   1400138ce:	je     0x1400138e9
   1400138d0:	mov    edx,0x14
   1400138d5:	mov    rax,QWORD PTR [r15]
   1400138d8:	mov    QWORD PTR [rsp+0x20],rax
   1400138dd:	mov    r9,r12
   1400138e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400138e4:	call   0x140012894
   1400138e9:	lea    r14,[rip+0x23d40]        # 0x140037630
   1400138f0:	jmp    0x140013794
   1400138f5:	mov    r9,QWORD PTR [rbp-0x41]
   1400138f9:	mov    r8,QWORD PTR [r15]
   1400138fc:	mov    rdx,r12
   1400138ff:	mov    rcx,rdi
   140013902:	call   0x140014380
   140013907:	test   al,al
   140013909:	je     0x140013952
   14001390b:	test   BYTE PTR [rdi+0x9c],0x10
   140013912:	je     0x140013952
   140013914:	mov    rcx,QWORD PTR [rip+0x3775d]        # 0x14004b078
   14001391b:	lea    rax,[rip+0x37756]        # 0x14004b078
   140013922:	cmp    rcx,rax
   140013925:	je     0x140013946
   140013927:	test   BYTE PTR [rcx+0x1c],0x4
   14001392b:	je     0x140013946
   14001392d:	mov    edx,0x15
   140013932:	mov    rax,QWORD PTR [r15]
   140013935:	mov    QWORD PTR [rsp+0x20],rax
   14001393a:	mov    r9,r12
   14001393d:	mov    rcx,QWORD PTR [rcx+0x10]
   140013941:	call   0x140012894
   140013946:	lea    r14,[rip+0x23d4b]        # 0x140037698
   14001394d:	jmp    0x140013794
   140013952:	mov    rax,QWORD PTR [rdi+0x60]
   140013956:	mov    QWORD PTR [rsp+0x20],rax
   14001395b:	mov    r9,QWORD PTR [rbp-0x41]
   14001395f:	mov    r8,QWORD PTR [r15]
   140013962:	mov    rdx,r12
   140013965:	call   0x140013f7c
   14001396a:	test   al,al
   14001396c:	jne    0x1400139b5
   14001396e:	test   BYTE PTR [rdi+0x9c],0x4
   140013975:	je     0x1400139b5
   140013977:	mov    rcx,QWORD PTR [rip+0x376fa]        # 0x14004b078
   14001397e:	lea    rax,[rip+0x376f3]        # 0x14004b078
   140013985:	cmp    rcx,rax
   140013988:	je     0x1400139a9
   14001398a:	test   BYTE PTR [rcx+0x1c],0x4
   14001398e:	je     0x1400139a9
   140013990:	mov    edx,0x16
   140013995:	mov    rax,QWORD PTR [r15]
   140013998:	mov    QWORD PTR [rsp+0x20],rax
   14001399d:	mov    r9,r12
   1400139a0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400139a4:	call   0x140012894
   1400139a9:	lea    r14,[rip+0x23d00]        # 0x1400376b0
   1400139b0:	jmp    0x140013794
   1400139b5:	mov    r9,QWORD PTR [rbp-0x41]
   1400139b9:	mov    r8,QWORD PTR [r15]
   1400139bc:	mov    rdx,r12
   1400139bf:	mov    rcx,rdi
   1400139c2:	call   0x140013ac0
   1400139c7:	test   al,al
   1400139c9:	jne    0x140013a42
   1400139cb:	test   BYTE PTR [rdi+0x9c],0x8
   1400139d2:	je     0x140013a42
   1400139d4:	mov    rcx,QWORD PTR [rip+0x3769d]        # 0x14004b078
   1400139db:	lea    rax,[rip+0x37696]        # 0x14004b078
   1400139e2:	cmp    rcx,rax
   1400139e5:	je     0x140013a06
   1400139e7:	test   BYTE PTR [rcx+0x1c],0x4
   1400139eb:	je     0x140013a06
   1400139ed:	mov    edx,0x17
   1400139f2:	mov    rax,QWORD PTR [r15]
   1400139f5:	mov    QWORD PTR [rsp+0x20],rax
   1400139fa:	mov    r9,r12
   1400139fd:	mov    rcx,QWORD PTR [rcx+0x10]
   140013a01:	call   0x140012894
   140013a06:	lea    r14,[rip+0x23ccb]        # 0x1400376d8
   140013a0d:	xor    esi,esi
   140013a0f:	test   esi,esi
   140013a11:	jne    0x140013a42
   140013a13:	and    DWORD PTR [rbp-0x49],0x0
   140013a17:	call   QWORD PTR [rip+0x1ea33]        # 0x140032450
   140013a1d:	mov    rdi,QWORD PTR [rax+0xa0]
   140013a24:	mov    rcx,rdi
   140013a27:	call   QWORD PTR [rip+0x1ec7b]        # 0x1400326a8
   140013a2d:	lea    r8,[rbp-0x49]
   140013a31:	xor    edx,edx
   140013a33:	lea    rcx,[rip+0x23cde]        # 0x140037718
   140013a3a:	call   rdi
   140013a3c:	cmp    DWORD PTR [rbp-0x49],0x0
   140013a40:	je     0x140013a94
   140013a42:	mov    r9,r14
   140013a45:	mov    r8,QWORD PTR [r15]
   140013a48:	mov    edx,esi
   140013a4a:	mov    rcx,r12
   140013a4d:	call   QWORD PTR [rip+0x1e8b5]        # 0x140032308
   140013a53:	test   esi,esi
   140013a55:	je     0x140013a94
   140013a57:	and    QWORD PTR [rbp-0x49],0x0
   140013a5c:	lea    rax,[rbp-0x49]
   140013a60:	mov    QWORD PTR [rsp+0x30],rax
   140013a65:	mov    rax,QWORD PTR [rbp-0x41]
   140013a69:	mov    QWORD PTR [rsp+0x28],rax
   140013a6e:	mov    rax,QWORD PTR [rbp-0x29]
   140013a72:	mov    QWORD PTR [rsp+0x20],rax
   140013a77:	mov    r9d,DWORD PTR [rbp-0x4d]
   140013a7b:	mov    r8d,r13d
   140013a7e:	mov    rdx,QWORD PTR [r15]
   140013a81:	mov    rcx,r12
   140013a84:	call   0x140014504
   140013a89:	mov    rax,QWORD PTR [rbp-0x49]
   140013a8d:	mov    rcx,QWORD PTR [rbp-0x21]
   140013a91:	mov    QWORD PTR [rcx],rax
   140013a94:	xor    ecx,ecx
   140013a96:	call   QWORD PTR [rip+0x1e8b4]        # 0x140032350
   140013a9c:	nop
   140013a9d:	mov    rcx,rbx
   140013aa0:	call   QWORD PTR [rip+0x1e8aa]        # 0x140032350
   140013aa6:	add    rsp,0x98
   140013aad:	pop    r15
   140013aaf:	pop    r14
   140013ab1:	pop    r13
   140013ab3:	pop    r12
   140013ab5:	pop    rdi
   140013ab6:	pop    rsi
   140013ab7:	pop    rbx
   140013ab8:	pop    rbp
   140013ab9:	ret    
   140013aba:	int3   
   140013abb:	int3   
   140013abc:	int3   
   140013abd:	int3   
   140013abe:	int3   
   140013abf:	int3   
   140013ac0:	rex push rbp
   140013ac2:	push   rbx
   140013ac3:	push   rsi
   140013ac4:	push   rdi
   140013ac5:	push   r12
   140013ac7:	push   r14
   140013ac9:	push   r15
   140013acb:	lea    rbp,[rsp-0x27]
   140013ad0:	sub    rsp,0x90
   140013ad7:	mov    rax,QWORD PTR [rip+0x37542]        # 0x14004b020
   140013ade:	xor    rax,rsp
   140013ae1:	mov    QWORD PTR [rbp+0x17],rax
   140013ae5:	mov    rsi,rdx
   140013ae8:	mov    rdi,rcx
   140013aeb:	lea    rdx,[rbp+0x7]
   140013aef:	mov    r15,r9
   140013af2:	lea    rcx,[rip+0x23c57]        # 0x140037750
   140013af9:	mov    r14,r8
   140013afc:	call   QWORD PTR [rip+0x1eb8e]        # 0x140032690
   140013b02:	xor    r12d,r12d
   140013b05:	mov    ebx,eax
   140013b07:	test   eax,eax
   140013b09:	jns    0x140013b31
   140013b0b:	mov    rcx,QWORD PTR [rip+0x37566]        # 0x14004b078
   140013b12:	lea    rdx,[rip+0x3755f]        # 0x14004b078
   140013b19:	cmp    rcx,rdx
   140013b1c:	je     0x140013ccc
   140013b22:	test   BYTE PTR [rcx+0x1c],0x1
   140013b26:	je     0x140013ccc
   140013b2c:	jmp    0x140013cb4
   140013b31:	mov    rax,QWORD PTR [r15]
   140013b34:	mov    WORD PTR [rbp-0x39],r12w
   140013b39:	mov    rbx,QWORD PTR [rax+0x20]
   140013b3d:	mov    rcx,rbx
   140013b40:	call   QWORD PTR [rip+0x1eb62]        # 0x1400326a8
   140013b46:	lea    r8,[rbp-0x39]
   140013b4a:	mov    rcx,r15
   140013b4d:	lea    rdx,[rbp+0x7]
   140013b51:	call   rbx
   140013b53:	mov    ebx,eax
   140013b55:	test   eax,eax
   140013b57:	jns    0x140013b7f
   140013b59:	mov    rcx,QWORD PTR [rip+0x37518]        # 0x14004b078
   140013b60:	lea    rdx,[rip+0x37511]        # 0x14004b078
   140013b67:	cmp    rcx,rdx
   140013b6a:	je     0x140013d00
   140013b70:	test   BYTE PTR [rcx+0x1c],0x1
   140013b74:	je     0x140013d00
   140013b7a:	jmp    0x140013ce8
   140013b7f:	cmp    WORD PTR [rbp-0x39],r12w
   140013b84:	jne    0x140013bbc
   140013b86:	mov    rcx,QWORD PTR [rip+0x374eb]        # 0x14004b078
   140013b8d:	lea    rdx,[rip+0x374e4]        # 0x14004b078
   140013b94:	cmp    rcx,rdx
   140013b97:	je     0x140013bb5
   140013b99:	test   BYTE PTR [rcx+0x1c],0x4
   140013b9d:	je     0x140013bb5
   140013b9f:	mov    edx,0x1a
   140013ba4:	mov    rcx,QWORD PTR [rcx+0x10]
   140013ba8:	mov    r9,rsi
   140013bab:	mov    QWORD PTR [rsp+0x20],r14
   140013bb0:	call   0x140012894
   140013bb5:	mov    al,0x1
   140013bb7:	jmp    0x140013c96
   140013bbc:	xor    eax,eax
   140013bbe:	mov    DWORD PTR [rbp-0x31],r12d
   140013bc2:	mov    QWORD PTR [rbp-0x2d],rax
   140013bc6:	mov    DWORD PTR [rbp-0x25],eax
   140013bc9:	mov    rax,QWORD PTR [rdi+0x80]
   140013bd0:	cmp    rax,QWORD PTR [rbp-0x31]
   140013bd4:	jne    0x140013be7
   140013bd6:	mov    rax,QWORD PTR [rdi+0x88]
   140013bdd:	cmp    rax,QWORD PTR [rbp-0x29]
   140013be1:	je     0x140013c94
   140013be7:	mov    rax,QWORD PTR [r15]
   140013bea:	mov    rbx,QWORD PTR [rax+0x20]
   140013bee:	mov    rcx,rbx
   140013bf1:	call   QWORD PTR [rip+0x1eab1]        # 0x1400326a8
   140013bf7:	lea    r8,[rbp-0x39]
   140013bfb:	mov    rcx,r15
   140013bfe:	lea    rdx,[rdi+0x80]
   140013c05:	call   rbx
   140013c07:	mov    ebx,eax
   140013c09:	test   eax,eax
   140013c0b:	jns    0x140013c33
   140013c0d:	mov    rcx,QWORD PTR [rip+0x37464]        # 0x14004b078
   140013c14:	lea    rdx,[rip+0x3745d]        # 0x14004b078
   140013c1b:	cmp    rcx,rdx
   140013c1e:	je     0x140013d34
   140013c24:	test   BYTE PTR [rcx+0x1c],0x1
   140013c28:	je     0x140013d34
   140013c2e:	jmp    0x140013d1c
   140013c33:	cmp    WORD PTR [rbp-0x39],r12w
   140013c38:	je     0x140013c65
   140013c3a:	mov    rcx,QWORD PTR [rip+0x37437]        # 0x14004b078
   140013c41:	lea    rdx,[rip+0x37430]        # 0x14004b078
   140013c48:	cmp    rcx,rdx
   140013c4b:	je     0x140013bb5
   140013c51:	test   BYTE PTR [rcx+0x1c],0x4
   140013c55:	je     0x140013bb5
   140013c5b:	mov    edx,0x1c
   140013c60:	jmp    0x140013ba4
   140013c65:	mov    rcx,QWORD PTR [rip+0x3740c]        # 0x14004b078
   140013c6c:	lea    rdx,[rip+0x37405]        # 0x14004b078
   140013c73:	cmp    rcx,rdx
   140013c76:	je     0x140013c94
   140013c78:	test   BYTE PTR [rcx+0x1c],0x4
   140013c7c:	je     0x140013c94
   140013c7e:	mov    rcx,QWORD PTR [rcx+0x10]
   140013c82:	mov    edx,0x1d
   140013c87:	mov    r9,rsi
   140013c8a:	mov    QWORD PTR [rsp+0x20],r14
   140013c8f:	call   0x140012894
   140013c94:	xor    al,al
   140013c96:	mov    rcx,QWORD PTR [rbp+0x17]
   140013c9a:	xor    rcx,rsp
   140013c9d:	call   0x14002dd00
   140013ca2:	add    rsp,0x90
   140013ca9:	pop    r15
   140013cab:	pop    r14
   140013cad:	pop    r12
   140013caf:	pop    rdi
   140013cb0:	pop    rsi
   140013cb1:	pop    rbx
   140013cb2:	pop    rbp
   140013cb3:	ret    
   140013cb4:	mov    rcx,QWORD PTR [rcx+0x10]
   140013cb8:	lea    r8,[rip+0x23c21]        # 0x1400378e0
   140013cbf:	mov    edx,0x18
   140013cc4:	mov    r9d,eax
   140013cc7:	call   0x140001f70
   140013ccc:	mov    edx,ebx
   140013cce:	lea    rcx,[rbp-0x21]
   140013cd2:	call   0x140002064
   140013cd7:	lea    rdx,[rip+0x354aa]        # 0x140049188
   140013cde:	lea    rcx,[rbp-0x21]
   140013ce2:	call   0x14002e2da
   140013ce7:	int3   
   140013ce8:	mov    rcx,QWORD PTR [rcx+0x10]
   140013cec:	lea    r8,[rip+0x23bed]        # 0x1400378e0
   140013cf3:	mov    edx,0x19
   140013cf8:	mov    r9d,eax
   140013cfb:	call   0x140001f70
   140013d00:	mov    edx,ebx
   140013d02:	lea    rcx,[rbp-0x21]
   140013d06:	call   0x140002064
   140013d0b:	lea    rdx,[rip+0x35476]        # 0x140049188
   140013d12:	lea    rcx,[rbp-0x21]
   140013d16:	call   0x14002e2da
   140013d1b:	int3   
   140013d1c:	mov    rcx,QWORD PTR [rcx+0x10]
   140013d20:	lea    r8,[rip+0x23bb9]        # 0x1400378e0
   140013d27:	mov    edx,0x1b
   140013d2c:	mov    r9d,eax
   140013d2f:	call   0x140001f70
   140013d34:	mov    edx,ebx
   140013d36:	lea    rcx,[rbp-0x21]
   140013d3a:	call   0x140002064
   140013d3f:	lea    rdx,[rip+0x35442]        # 0x140049188
   140013d46:	lea    rcx,[rbp-0x21]
   140013d4a:	call   0x14002e2da
   140013d4f:	int3   
   140013d50:	int3   
   140013d51:	int3   
   140013d52:	int3   
   140013d53:	int3   
   140013d54:	int3   
   140013d55:	int3   
   140013d56:	int3   
   140013d57:	int3   
   140013d58:	mov    QWORD PTR [rsp+0x20],rbx
   140013d5d:	push   rbp
   140013d5e:	push   rsi
   140013d5f:	push   rdi
   140013d60:	push   r12
   140013d62:	push   r13
   140013d64:	push   r14
   140013d66:	push   r15
   140013d68:	mov    rbp,rsp
   140013d6b:	sub    rsp,0x70
   140013d6f:	mov    rax,QWORD PTR [rip+0x372aa]        # 0x14004b020
   140013d76:	xor    rax,rsp
   140013d79:	mov    QWORD PTR [rbp-0x10],rax
   140013d7d:	or     edi,0xffffffff
   140013d80:	mov    r14,r8
   140013d83:	mov    DWORD PTR [rbp-0x40],edi
   140013d86:	mov    r12,rdx
   140013d89:	mov    r15,rcx
   140013d8c:	call   QWORD PTR [rip+0x1e6be]        # 0x140032450
   140013d92:	mov    rbx,QWORD PTR [rax+0xa0]
   140013d99:	mov    rcx,rbx
   140013d9c:	call   QWORD PTR [rip+0x1e906]        # 0x1400326a8
   140013da2:	lea    r8,[rbp-0x40]
   140013da6:	mov    edx,edi
   140013da8:	lea    rcx,[rip+0x239f1]        # 0x1400377a0
   140013daf:	call   rbx
   140013db1:	mov    eax,DWORD PTR [rbp-0x40]
   140013db4:	xor    r13d,r13d
   140013db7:	test   eax,eax
   140013db9:	je     0x140013f19
   140013dbf:	sub    eax,0x1
   140013dc2:	je     0x140013f12
   140013dc8:	sub    eax,0x1
   140013dcb:	je     0x140013e67
   140013dd1:	sub    eax,0x1
   140013dd4:	je     0x140013f0b
   140013dda:	cmp    eax,0x1
   140013ddd:	je     0x140013ee5
   140013de3:	mov    DWORD PTR [rbp-0x40],r13d
   140013de7:	call   QWORD PTR [rip+0x1e663]        # 0x140032450
   140013ded:	mov    rbx,QWORD PTR [rax+0xa0]
   140013df4:	mov    rcx,rbx
   140013df7:	call   QWORD PTR [rip+0x1e8ab]        # 0x1400326a8
   140013dfd:	lea    r8,[rbp-0x40]
   140013e01:	xor    edx,edx
   140013e03:	lea    rcx,[rip+0x239c6]        # 0x1400377d0
   140013e0a:	call   rbx
   140013e0c:	mov    edi,DWORD PTR [rbp-0x40]
   140013e0f:	test   edi,edi
   140013e11:	je     0x140013e71
   140013e13:	mov    rax,QWORD PTR [r14]
   140013e16:	mov    DWORD PTR [rbp-0x40],r13d
   140013e1a:	mov    rbx,QWORD PTR [rax+0x28]
   140013e1e:	mov    rcx,rbx
   140013e21:	call   QWORD PTR [rip+0x1e881]        # 0x1400326a8
   140013e27:	lea    rdx,[rbp-0x40]
   140013e2b:	mov    rcx,r14
   140013e2e:	call   rbx
   140013e30:	test   eax,eax
   140013e32:	js     0x140013e71
   140013e34:	cmp    edi,DWORD PTR [rbp-0x40]
   140013e37:	jne    0x140013e71
   140013e39:	mov    rcx,QWORD PTR [rip+0x37238]        # 0x14004b078
   140013e40:	lea    rax,[rip+0x37231]        # 0x14004b078
   140013e47:	cmp    rcx,rax
   140013e4a:	je     0x140013e67
   140013e4c:	test   BYTE PTR [rcx+0x1c],0x4
   140013e50:	je     0x140013e67
   140013e52:	mov    rcx,QWORD PTR [rcx+0x10]
   140013e56:	lea    edx,[r13+0x1e]
   140013e5a:	mov    r9,r15
   140013e5d:	mov    QWORD PTR [rsp+0x20],r12
   140013e62:	call   0x140012894
   140013e67:	mov    eax,0x2
   140013e6c:	jmp    0x140013f1b
   140013e71:	mov    rdi,r13
   140013e74:	lea    rsi,[rip+0x3c205]        # 0x140050080
   140013e7b:	mov    rax,QWORD PTR [r14]
   140013e7e:	mov    WORD PTR [rbp-0x40],r13w
   140013e83:	mov    rbx,QWORD PTR [rax+0x20]
   140013e87:	mov    rcx,rbx
   140013e8a:	call   QWORD PTR [rip+0x1e818]        # 0x1400326a8
   140013e90:	lea    r8,[rbp-0x40]
   140013e94:	mov    rdx,rsi
   140013e97:	mov    rcx,r14
   140013e9a:	call   rbx
   140013e9c:	mov    ebx,eax
   140013e9e:	test   eax,eax
   140013ea0:	js     0x140013ef0
   140013ea2:	cmp    WORD PTR [rbp-0x40],r13w
   140013ea7:	jne    0x140013eec
   140013ea9:	inc    rdi
   140013eac:	add    rsi,0x10
   140013eb0:	cmp    rdi,0x4
   140013eb4:	jb     0x140013e7b
   140013eb6:	mov    rcx,QWORD PTR [rip+0x371bb]        # 0x14004b078
   140013ebd:	lea    rax,[rip+0x371b4]        # 0x14004b078
   140013ec4:	cmp    rcx,rax
   140013ec7:	je     0x140013ee5
   140013ec9:	test   BYTE PTR [rcx+0x1c],0x4
   140013ecd:	je     0x140013ee5
   140013ecf:	mov    rcx,QWORD PTR [rcx+0x10]
   140013ed3:	mov    edx,0x20
   140013ed8:	mov    r9,r15
   140013edb:	mov    QWORD PTR [rsp+0x20],r12
   140013ee0:	call   0x140012894
   140013ee5:	mov    eax,0x4
   140013eea:	jmp    0x140013f1b
   140013eec:	mov    eax,edi
   140013eee:	jmp    0x140013f1b
   140013ef0:	mov    rcx,QWORD PTR [rip+0x37181]        # 0x14004b078
   140013ef7:	lea    rax,[rip+0x3717a]        # 0x14004b078
   140013efe:	cmp    rcx,rax
   140013f01:	je     0x140013f57
   140013f03:	test   BYTE PTR [rcx+0x1c],0x1
   140013f07:	je     0x140013f57
   140013f09:	jmp    0x140013f3f
   140013f0b:	mov    eax,0x3
   140013f10:	jmp    0x140013f1b
   140013f12:	mov    eax,0x1
   140013f17:	jmp    0x140013f1b
   140013f19:	xor    eax,eax
   140013f1b:	mov    rcx,QWORD PTR [rbp-0x10]
   140013f1f:	xor    rcx,rsp
   140013f22:	call   0x14002dd00
   140013f27:	mov    rbx,QWORD PTR [rsp+0xc8]
   140013f2f:	add    rsp,0x70
   140013f33:	pop    r15
   140013f35:	pop    r14
   140013f37:	pop    r13
   140013f39:	pop    r12
   140013f3b:	pop    rdi
   140013f3c:	pop    rsi
   140013f3d:	pop    rbp
   140013f3e:	ret    
   140013f3f:	mov    rcx,QWORD PTR [rcx+0x10]
   140013f43:	lea    r8,[rip+0x23996]        # 0x1400378e0
   140013f4a:	mov    edx,0x1f
   140013f4f:	mov    r9d,ebx
   140013f52:	call   0x140001f70
   140013f57:	mov    edx,ebx
   140013f59:	lea    rcx,[rbp-0x38]
   140013f5d:	call   0x140002064
   140013f62:	lea    rdx,[rip+0x3521f]        # 0x140049188
   140013f69:	lea    rcx,[rbp-0x38]
   140013f6d:	call   0x14002e2da
   140013f72:	int3   
   140013f73:	int3   
   140013f74:	int3   
   140013f75:	int3   
   140013f76:	int3   
   140013f77:	int3   
   140013f78:	int3   
   140013f79:	int3   
   140013f7a:	int3   
   140013f7b:	int3   
   140013f7c:	mov    QWORD PTR [rsp+0x8],rbx
   140013f81:	push   rbp
   140013f82:	push   rsi
   140013f83:	push   rdi
   140013f84:	push   r12
   140013f86:	push   r13
   140013f88:	push   r14
   140013f8a:	push   r15
   140013f8c:	sub    rsp,0x70
   140013f90:	mov    rax,QWORD PTR [rip+0x37089]        # 0x14004b020
   140013f97:	xor    rax,rsp
   140013f9a:	mov    QWORD PTR [rsp+0x60],rax
   140013f9f:	mov    rbp,QWORD PTR [rsp+0xd0]
   140013fa7:	xor    r13d,r13d
   140013faa:	mov    r12,r9
   140013fad:	mov    r15,r8
   140013fb0:	mov    r14,rdx
   140013fb3:	test   rbp,rbp
   140013fb6:	jne    0x140013fbc
   140013fb8:	mov    al,0x1
   140013fba:	jmp    0x140014004
   140013fbc:	mov    rbx,QWORD PTR [rbp+0x8]
   140013fc0:	jmp    0x140013ffc
   140013fc2:	mov    rcx,QWORD PTR [r12]
   140013fc6:	mov    rdi,QWORD PTR [rbx]
   140013fc9:	mov    WORD PTR [rsp+0x30],r13w
   140013fcf:	mov    rsi,QWORD PTR [rcx+0x20]
   140013fd3:	mov    rcx,rsi
   140013fd6:	call   QWORD PTR [rip+0x1e6cc]        # 0x1400326a8
   140013fdc:	lea    r8,[rsp+0x30]
   140013fe1:	mov    rcx,r12
   140013fe4:	lea    rdx,[rdi+0x4]
   140013fe8:	call   rsi
   140013fea:	mov    edi,eax
   140013fec:	test   eax,eax
   140013fee:	js     0x14001406c
   140013ff0:	cmp    WORD PTR [rsp+0x30],r13w
   140013ff6:	jne    0x140014029
   140013ff8:	add    rbx,0x8
   140013ffc:	cmp    rbx,QWORD PTR [rbp+0x10]
   140014000:	jne    0x140013fc2
   140014002:	xor    al,al
   140014004:	mov    rcx,QWORD PTR [rsp+0x60]
   140014009:	xor    rcx,rsp
   14001400c:	call   0x14002dd00
   140014011:	mov    rbx,QWORD PTR [rsp+0xb0]
   140014019:	add    rsp,0x70
   14001401d:	pop    r15
   14001401f:	pop    r14
   140014021:	pop    r13
   140014023:	pop    r12
   140014025:	pop    rdi
   140014026:	pop    rsi
   140014027:	pop    rbp
   140014028:	ret    
   140014029:	mov    rcx,QWORD PTR [rip+0x37048]        # 0x14004b078
   140014030:	lea    rax,[rip+0x37041]        # 0x14004b078
   140014037:	cmp    rcx,rax
   14001403a:	je     0x140013fb8
   140014040:	test   BYTE PTR [rcx+0x1c],0x4
   140014044:	je     0x140013fb8
   14001404a:	mov    rax,QWORD PTR [rbx]
   14001404d:	mov    r9,r14
   140014050:	mov    rcx,QWORD PTR [rcx+0x10]
   140014054:	add    rax,0x4
   140014058:	mov    QWORD PTR [rsp+0x28],rax
   14001405d:	mov    QWORD PTR [rsp+0x20],r15
   140014062:	call   0x140012934
   140014067:	jmp    0x140013fb8
   14001406c:	mov    rcx,QWORD PTR [rip+0x37005]        # 0x14004b078
   140014073:	lea    rax,[rip+0x36ffe]        # 0x14004b078
   14001407a:	cmp    rcx,rax
   14001407d:	je     0x14001409d
   14001407f:	test   BYTE PTR [rcx+0x1c],0x1
   140014083:	je     0x14001409d
   140014085:	mov    rcx,QWORD PTR [rcx+0x10]
   140014089:	lea    r8,[rip+0x23850]        # 0x1400378e0
   140014090:	mov    edx,0x21
   140014095:	mov    r9d,edi
   140014098:	call   0x140001f70
   14001409d:	mov    edx,edi
   14001409f:	lea    rcx,[rsp+0x38]
   1400140a4:	call   0x140002064
   1400140a9:	lea    rdx,[rip+0x350d8]        # 0x140049188
   1400140b0:	lea    rcx,[rsp+0x38]
   1400140b5:	call   0x14002e2da
   1400140ba:	int3   
   1400140bb:	int3   
   1400140bc:	int3   
   1400140bd:	int3   
   1400140be:	int3   
   1400140bf:	int3   
   1400140c0:	int3   
   1400140c1:	int3   
   1400140c2:	int3   
   1400140c3:	int3   
   1400140c4:	rex push rbp
   1400140c6:	push   rbx
   1400140c7:	push   rsi
   1400140c8:	push   rdi
   1400140c9:	push   r12
   1400140cb:	push   r13
   1400140cd:	push   r14
   1400140cf:	push   r15
   1400140d1:	lea    rbp,[rsp-0x17]
   1400140d6:	sub    rsp,0x88
   1400140dd:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   1400140e5:	mov    rax,QWORD PTR [rip+0x36f34]        # 0x14004b020
   1400140ec:	xor    rax,rsp
   1400140ef:	mov    QWORD PTR [rbp+0x7],rax
   1400140f3:	mov    r12,r9
   1400140f6:	mov    rdi,r8
   1400140f9:	mov    r15,rdx
   1400140fc:	mov    r14,rcx
   1400140ff:	mov    r13,QWORD PTR [rbp+0x7f]
   140014103:	mov    DWORD PTR [rbp-0x3d],0x2
   14001410a:	xor    esi,esi
   14001410c:	mov    DWORD PTR [rbp-0x41],esi
   14001410f:	mov    rax,QWORD PTR [r8]
   140014112:	mov    rbx,QWORD PTR [rax+0x40]
   140014116:	mov    rcx,rbx
   140014119:	call   QWORD PTR [rip+0x1e589]        # 0x1400326a8
   14001411f:	lea    r8,[rbp-0x41]
   140014123:	lea    rdx,[rbp-0x3d]
   140014127:	mov    rcx,rdi
   14001412a:	call   rbx
   14001412c:	mov    edi,eax
   14001412e:	test   eax,eax
   140014130:	jns    0x140014168
   140014132:	lea    rbx,[rip+0x36f3f]        # 0x14004b078
   140014139:	mov    rcx,QWORD PTR [rip+0x36f38]        # 0x14004b078
   140014140:	cmp    rcx,rbx
   140014143:	je     0x140014161
   140014145:	test   BYTE PTR [rcx+0x1c],0x1
   140014149:	je     0x140014161
   14001414b:	lea    edx,[rsi+0x23]
   14001414e:	mov    r9d,eax
   140014151:	lea    r8,[rip+0x23788]        # 0x1400378e0
   140014158:	mov    rcx,QWORD PTR [rcx+0x10]
   14001415c:	call   0x140001f70
   140014161:	xor    al,al
   140014163:	jmp    0x140014357
   140014168:	mov    QWORD PTR [rbp-0x29],rsi
   14001416c:	mov    QWORD PTR [rbp-0x31],rsi
   140014170:	mov    ecx,DWORD PTR [rbp-0x3d]
   140014173:	test   ecx,ecx
   140014175:	je     0x1400142ba
   14001417b:	sub    ecx,0x1
   14001417e:	je     0x140014213
   140014184:	cmp    ecx,0x1
   140014187:	je     0x1400141d7
   140014189:	lea    rbx,[rip+0x36ee8]        # 0x14004b078
   140014190:	mov    rcx,QWORD PTR [rip+0x36ee1]        # 0x14004b078
   140014197:	cmp    rcx,rbx
   14001419a:	je     0x1400141bb
   14001419c:	test   BYTE PTR [rcx+0x1c],0x1
   1400141a0:	je     0x1400141bb
   1400141a2:	mov    edx,0x29
   1400141a7:	mov    r9d,DWORD PTR [rbp-0x41]
   1400141ab:	lea    r8,[rip+0x2372e]        # 0x1400378e0
   1400141b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400141b6:	call   0x140001f70
   1400141bb:	mov    edx,edi
   1400141bd:	lea    rcx,[rbp-0x21]
   1400141c1:	call   0x140002064
   1400141c6:	lea    rdx,[rip+0x34fbb]        # 0x140049188
   1400141cd:	lea    rcx,[rbp-0x21]
   1400141d1:	call   0x14002e2da
   1400141d6:	int3   
   1400141d7:	lea    rbx,[rip+0x36e9a]        # 0x14004b078
   1400141de:	mov    rcx,QWORD PTR [rip+0x36e93]        # 0x14004b078
   1400141e5:	cmp    rcx,rbx
   1400141e8:	je     0x1400142a9
   1400141ee:	test   BYTE PTR [rcx+0x1c],0x4
   1400141f2:	je     0x1400142a9
   1400141f8:	mov    edx,0x24
   1400141fd:	mov    QWORD PTR [rsp+0x20],r15
   140014202:	mov    r9,r14
   140014205:	mov    rcx,QWORD PTR [rcx+0x10]
   140014209:	call   0x140012894
   14001420e:	jmp    0x1400142a9
   140014213:	lea    rbx,[rip+0x36e5e]        # 0x14004b078
   14001421a:	mov    rcx,QWORD PTR [rip+0x36e57]        # 0x14004b078
   140014221:	cmp    rcx,rbx
   140014224:	je     0x140014242
   140014226:	test   BYTE PTR [rcx+0x1c],0x4
   14001422a:	je     0x140014242
   14001422c:	mov    edx,0x27
   140014231:	mov    QWORD PTR [rsp+0x20],r15
   140014236:	mov    r9,r14
   140014239:	mov    rcx,QWORD PTR [rcx+0x10]
   14001423d:	call   0x140012894
   140014242:	mov    r8d,DWORD PTR [rbp-0x41]
   140014246:	lea    rdx,[rip+0x23603]        # 0x140037850
   14001424d:	mov    rcx,r13
   140014250:	call   0x14002aef4
   140014255:	mov    edi,eax
   140014257:	test   eax,eax
   140014259:	jns    0x1400142a1
   14001425b:	mov    rcx,QWORD PTR [rip+0x36e16]        # 0x14004b078
   140014262:	cmp    rcx,rbx
   140014265:	je     0x140014285
   140014267:	test   BYTE PTR [rcx+0x1c],0x1
   14001426b:	je     0x140014285
   14001426d:	mov    edx,0x28
   140014272:	mov    r9d,eax
   140014275:	lea    r8,[rip+0x23664]        # 0x1400378e0
   14001427c:	mov    rcx,QWORD PTR [rcx+0x10]
   140014280:	call   0x140001f70
   140014285:	mov    edx,edi
   140014287:	lea    rcx,[rbp-0x21]
   14001428b:	call   0x140002064
   140014290:	lea    rdx,[rip+0x34ef1]        # 0x140049188
   140014297:	lea    rcx,[rbp-0x21]
   14001429b:	call   0x14002e2da
   1400142a0:	int3   
   1400142a1:	mov    BYTE PTR [r12],0x1
   1400142a6:	mov    sil,0x1
   1400142a9:	xor    ecx,ecx
   1400142ab:	call   QWORD PTR [rip+0x1e09f]        # 0x140032350
   1400142b1:	nop
   1400142b2:	mov    al,sil
   1400142b5:	jmp    0x140014357
   1400142ba:	lea    rbx,[rip+0x36db7]        # 0x14004b078
   1400142c1:	mov    rcx,QWORD PTR [rip+0x36db0]        # 0x14004b078
   1400142c8:	cmp    rcx,rbx
   1400142cb:	je     0x1400142e9
   1400142cd:	test   BYTE PTR [rcx+0x1c],0x4
   1400142d1:	je     0x1400142e9
   1400142d3:	mov    edx,0x25
   1400142d8:	mov    QWORD PTR [rsp+0x20],r15
   1400142dd:	mov    r9,r14
   1400142e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400142e4:	call   0x140012894
   1400142e9:	mov    r8d,DWORD PTR [rbp-0x41]
   1400142ed:	lea    rdx,[rip+0x234fc]        # 0x1400377f0
   1400142f4:	mov    rcx,r13
   1400142f7:	call   0x14002aef4
   1400142fc:	mov    edi,eax
   1400142fe:	test   eax,eax
   140014300:	jns    0x140014348
   140014302:	mov    rcx,QWORD PTR [rip+0x36d6f]        # 0x14004b078
   140014309:	cmp    rcx,rbx
   14001430c:	je     0x14001432c
   14001430e:	test   BYTE PTR [rcx+0x1c],0x1
   140014312:	je     0x14001432c
   140014314:	mov    edx,0x26
   140014319:	mov    r9d,eax
   14001431c:	lea    r8,[rip+0x235bd]        # 0x1400378e0
   140014323:	mov    rcx,QWORD PTR [rcx+0x10]
   140014327:	call   0x140001f70
   14001432c:	mov    edx,edi
   14001432e:	lea    rcx,[rbp-0x21]
   140014332:	call   0x140002064
   140014337:	lea    rdx,[rip+0x34e4a]        # 0x140049188
   14001433e:	lea    rcx,[rbp-0x21]
   140014342:	call   0x14002e2da
   140014347:	int3   
   140014348:	mov    BYTE PTR [r12],sil
   14001434c:	xor    ecx,ecx
   14001434e:	call   QWORD PTR [rip+0x1dffc]        # 0x140032350
   140014354:	nop
   140014355:	mov    al,0x1
   140014357:	mov    rcx,QWORD PTR [rbp+0x7]
   14001435b:	xor    rcx,rsp
   14001435e:	call   0x14002dd00
   140014363:	add    rsp,0x88
   14001436a:	pop    r15
   14001436c:	pop    r14
   14001436e:	pop    r13
   140014370:	pop    r12
   140014372:	pop    rdi
   140014373:	pop    rsi
   140014374:	pop    rbx
   140014375:	pop    rbp
   140014376:	ret    
   140014377:	int3   
   140014378:	int3   
   140014379:	int3   
   14001437a:	int3   
   14001437b:	int3   
   14001437c:	int3   
   14001437d:	int3   
   14001437e:	int3   
   14001437f:	int3   
   140014380:	mov    QWORD PTR [rsp+0x8],rbx
   140014385:	push   rbp
   140014386:	push   rsi
   140014387:	push   rdi
   140014388:	push   r14
   14001438a:	push   r15
   14001438c:	sub    rsp,0x70
   140014390:	mov    rax,QWORD PTR [rip+0x36c89]        # 0x14004b020
   140014397:	xor    rax,rsp
   14001439a:	mov    QWORD PTR [rsp+0x60],rax
   14001439f:	mov    rax,QWORD PTR [r9]
   1400143a2:	mov    rbp,rcx
   1400143a5:	xor    esi,esi
   1400143a7:	mov    rdi,r9
   1400143aa:	mov    r15,r8
   1400143ad:	mov    DWORD PTR [rsp+0x30],esi
   1400143b1:	mov    r14,rdx
   1400143b4:	mov    rbx,QWORD PTR [rax+0x28]
   1400143b8:	mov    rcx,rbx
   1400143bb:	call   QWORD PTR [rip+0x1e2e7]        # 0x1400326a8
   1400143c1:	lea    rdx,[rsp+0x30]
   1400143c6:	mov    rcx,rdi
   1400143c9:	call   rbx
   1400143cb:	mov    ebx,eax
   1400143cd:	test   eax,eax
   1400143cf:	jns    0x1400143f4
   1400143d1:	mov    rcx,QWORD PTR [rip+0x36ca0]        # 0x14004b078
   1400143d8:	lea    rdx,[rip+0x36c99]        # 0x14004b078
   1400143df:	cmp    rcx,rdx
   1400143e2:	je     0x140014481
   1400143e8:	test   BYTE PTR [rcx+0x1c],0x1
   1400143ec:	je     0x140014481
   1400143f2:	jmp    0x140014469
   1400143f4:	mov    eax,DWORD PTR [rsp+0x30]
   1400143f8:	test   eax,eax
   1400143fa:	jne    0x14001442d
   1400143fc:	mov    rcx,QWORD PTR [rip+0x36c75]        # 0x14004b078
   140014403:	lea    rdx,[rip+0x36c6e]        # 0x14004b078
   14001440a:	cmp    rcx,rdx
   14001440d:	je     0x140014429
   14001440f:	test   BYTE PTR [rcx+0x1c],0x4
   140014413:	je     0x140014429
   140014415:	mov    rcx,QWORD PTR [rcx+0x10]
   140014419:	lea    edx,[rax+0x2b]
   14001441c:	mov    r9,r14
   14001441f:	mov    QWORD PTR [rsp+0x20],r15
   140014424:	call   0x140012894
   140014429:	xor    al,al
   14001442b:	jmp    0x140014448
   14001442d:	mov    rcx,QWORD PTR [rbp+0x68]
   140014431:	jmp    0x14001443b
   140014433:	cmp    DWORD PTR [rcx],eax
   140014435:	je     0x140014441
   140014437:	add    rcx,0x4
   14001443b:	cmp    rcx,QWORD PTR [rbp+0x70]
   14001443f:	jne    0x140014433
   140014441:	cmp    rcx,QWORD PTR [rbp+0x70]
   140014445:	setne  al
   140014448:	mov    rcx,QWORD PTR [rsp+0x60]
   14001444d:	xor    rcx,rsp
   140014450:	call   0x14002dd00
   140014455:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001445d:	add    rsp,0x70
   140014461:	pop    r15
   140014463:	pop    r14
   140014465:	pop    rdi
   140014466:	pop    rsi
   140014467:	pop    rbp
   140014468:	ret    
   140014469:	mov    rcx,QWORD PTR [rcx+0x10]
   14001446d:	lea    r8,[rip+0x2346c]        # 0x1400378e0
   140014474:	mov    edx,0x2a
   140014479:	mov    r9d,eax
   14001447c:	call   0x140001f70
   140014481:	mov    edx,ebx
   140014483:	lea    rcx,[rsp+0x38]
   140014488:	call   0x140002064
   14001448d:	lea    rdx,[rip+0x34cf4]        # 0x140049188
   140014494:	lea    rcx,[rsp+0x38]
   140014499:	call   0x14002e2da
   14001449e:	int3   
   14001449f:	int3   
   1400144a0:	int3   
   1400144a1:	int3   
   1400144a2:	int3   
   1400144a3:	int3   
   1400144a4:	int3   
   1400144a5:	int3   
   1400144a6:	int3   
   1400144a7:	int3   
   1400144a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400144ad:	push   rdi
   1400144ae:	sub    rsp,0x20
   1400144b2:	mov    rdi,r8
   1400144b5:	lea    rbx,[rcx+0x20]
   1400144b9:	mov    r8,rdx
   1400144bc:	mov    rcx,rbx
   1400144bf:	lea    rdx,[rsp+0x30]
   1400144c4:	call   0x140014aa4
   1400144c9:	mov    rax,QWORD PTR [rsp+0x30]
   1400144ce:	cmp    rax,QWORD PTR [rbx]
   1400144d1:	je     0x1400144e5
   1400144d3:	test   rdi,rdi
   1400144d6:	je     0x1400144e1
   1400144d8:	mov    rcx,QWORD PTR [rax+0x20]
   1400144dc:	mov    eax,DWORD PTR [rcx+0x68]
   1400144df:	mov    DWORD PTR [rdi],eax
   1400144e1:	mov    al,0x1
   1400144e3:	jmp    0x1400144f2
   1400144e5:	test   rdi,rdi
   1400144e8:	je     0x1400144f0
   1400144ea:	mov    DWORD PTR [rdi],0x4
   1400144f0:	xor    al,al
   1400144f2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400144f7:	add    rsp,0x20
   1400144fb:	pop    rdi
   1400144fc:	ret    
   1400144fd:	int3   
   1400144fe:	int3   
   1400144ff:	int3   
   140014500:	int3   
   140014501:	int3   
   140014502:	int3   
   140014503:	int3   
   140014504:	mov    rax,rsp
   140014507:	push   r14
   140014509:	sub    rsp,0x50
   14001450d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140014515:	mov    QWORD PTR [rax+0x8],rbx
   140014519:	mov    QWORD PTR [rax+0x10],rbp
   14001451d:	mov    QWORD PTR [rax+0x18],rsi
   140014521:	mov    QWORD PTR [rax+0x20],rdi
   140014525:	mov    ebx,r9d
   140014528:	mov    edi,r8d
   14001452b:	mov    rsi,rdx
   14001452e:	mov    rbp,rcx
   140014531:	mov    ecx,0x70
   140014536:	call   0x140023f10
   14001453b:	mov    r14,rax
   14001453e:	lea    rax,[rip+0x20373]        # 0x1400348b8
   140014545:	mov    QWORD PTR [r14],rax
   140014548:	xor    eax,eax
   14001454a:	mov    DWORD PTR [r14+0x8],eax
   14001454e:	mov    QWORD PTR [r14+0x38],0x7
   140014556:	mov    QWORD PTR [r14+0x30],rax
   14001455a:	mov    WORD PTR [r14+0x20],ax
   14001455f:	mov    QWORD PTR [r14+0x48],rax
   140014563:	mov    QWORD PTR [r14+0x58],rax
   140014567:	mov    QWORD PTR [r14+0x60],rax
   14001456b:	mov    BYTE PTR [r14+0x6c],al
   14001456f:	lock inc DWORD PTR [r14+0x8]
   140014574:	mov    QWORD PTR [rsp+0x48],r14
   140014579:	mov    rax,QWORD PTR [rsp+0x88]
   140014581:	mov    QWORD PTR [rsp+0x30],rax
   140014586:	mov    rax,QWORD PTR [rsp+0x80]
   14001458e:	mov    QWORD PTR [rsp+0x28],rax
   140014593:	mov    DWORD PTR [rsp+0x20],ebx
   140014597:	mov    r9d,edi
   14001459a:	mov    r8,rsi
   14001459d:	mov    rdx,rbp
   1400145a0:	mov    rcx,r14
   1400145a3:	call   0x140014678
   1400145a8:	mov    rax,QWORD PTR [rsp+0x90]
   1400145b0:	mov    QWORD PTR [rax],r14
   1400145b3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400145b8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400145bd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400145c2:	mov    rdi,QWORD PTR [rsp+0x78]
   1400145c7:	add    rsp,0x50
   1400145cb:	pop    r14
   1400145cd:	ret    
   1400145ce:	int3   
   1400145cf:	int3   
   1400145d0:	int3   
   1400145d1:	int3   
   1400145d2:	int3   
   1400145d3:	int3   
   1400145d4:	rex push rbx
   1400145d6:	sub    rsp,0x20
   1400145da:	lea    rax,[rip+0x202d7]        # 0x1400348b8
   1400145e1:	mov    rbx,rcx
   1400145e4:	mov    QWORD PTR [rcx],rax
   1400145e7:	mov    rcx,QWORD PTR [rcx+0x60]
   1400145eb:	call   QWORD PTR [rip+0x1dd5f]        # 0x140032350
   1400145f1:	mov    rcx,QWORD PTR [rbx+0x58]
   1400145f5:	call   QWORD PTR [rip+0x1dd55]        # 0x140032350
   1400145fb:	mov    rcx,QWORD PTR [rbx+0x48]
   1400145ff:	call   QWORD PTR [rip+0x1dd4b]        # 0x140032350
   140014605:	cmp    QWORD PTR [rbx+0x38],0x8
   14001460a:	jb     0x140014616
   14001460c:	mov    rcx,QWORD PTR [rbx+0x20]
   140014610:	call   QWORD PTR [rip+0x1dfb2]        # 0x1400325c8
   140014616:	xor    eax,eax
   140014618:	mov    QWORD PTR [rbx+0x38],0x7
   140014620:	mov    QWORD PTR [rbx+0x30],rax
   140014624:	mov    WORD PTR [rbx+0x20],ax
   140014628:	add    rsp,0x20
   14001462c:	pop    rbx
   14001462d:	ret    
   14001462e:	int3   
   14001462f:	int3   
   140014630:	int3   
   140014631:	int3   
   140014632:	int3   
   140014633:	int3   
   140014634:	int3   
   140014635:	int3   
   140014636:	int3   
   140014637:	int3   
   140014638:	int3   
   140014639:	int3   
   14001463a:	int3   
   14001463b:	int3   
   14001463c:	int3   
   14001463d:	int3   
   14001463e:	int3   
   14001463f:	int3   
   140014640:	mov    QWORD PTR [rsp+0x8],rbx
   140014645:	push   rdi
   140014646:	sub    rsp,0x20
   14001464a:	mov    ebx,edx
   14001464c:	mov    rdi,rcx
   14001464f:	call   0x1400145d4
   140014654:	test   bl,0x1
   140014657:	je     0x140014662
   140014659:	mov    rcx,rdi
   14001465c:	call   QWORD PTR [rip+0x1df66]        # 0x1400325c8
   140014662:	mov    rax,rdi
   140014665:	mov    rbx,QWORD PTR [rsp+0x30]
   14001466a:	add    rsp,0x20
   14001466e:	pop    rdi
   14001466f:	ret    
   140014670:	int3   
   140014671:	int3   
   140014672:	int3   
   140014673:	int3   
   140014674:	int3   
   140014675:	int3   
   140014676:	int3   
   140014677:	int3   
   140014678:	mov    QWORD PTR [rsp+0x10],rbx
   14001467d:	push   rbp
   14001467e:	push   rsi
   14001467f:	push   rdi
   140014680:	push   r14
   140014682:	push   r15
   140014684:	mov    rbp,rsp
   140014687:	sub    rsp,0x50
   14001468b:	mov    rax,QWORD PTR [rip+0x3698e]        # 0x14004b020
   140014692:	xor    rax,rsp
   140014695:	mov    QWORD PTR [rbp-0x8],rax
   140014699:	movups xmm0,XMMWORD PTR [rdx]
   14001469c:	mov    r14,QWORD PTR [rbp+0x58]
   1400146a0:	mov    r15,rcx
   1400146a3:	mov    rsi,QWORD PTR [rbp+0x60]
   1400146a7:	mov    rdx,r8
   1400146aa:	movdqu XMMWORD PTR [rcx+0xc],xmm0
   1400146af:	add    rcx,0x20
   1400146b3:	mov    ebx,r9d
   1400146b6:	call   0x14000da34
   1400146bb:	mov    eax,DWORD PTR [rbp+0x50]
   1400146be:	mov    DWORD PTR [r15+0x40],eax
   1400146c2:	mov    DWORD PTR [r15+0x68],ebx
   1400146c6:	mov    rax,QWORD PTR [rsi]
   1400146c9:	mov    rdi,QWORD PTR [rax+0x28]
   1400146cd:	mov    rcx,rdi
   1400146d0:	call   QWORD PTR [rip+0x1dfd2]        # 0x1400326a8
   1400146d6:	lea    rdx,[r15+0x44]
   1400146da:	mov    rcx,rsi
   1400146dd:	call   rdi
   1400146df:	mov    ebx,eax
   1400146e1:	test   eax,eax
   1400146e3:	jns    0x14001470b
   1400146e5:	mov    rcx,QWORD PTR [rip+0x3698c]        # 0x14004b078
   1400146ec:	lea    rdx,[rip+0x36985]        # 0x14004b078
   1400146f3:	cmp    rcx,rdx
   1400146f6:	je     0x14001489c
   1400146fc:	test   BYTE PTR [rcx+0x1c],0x1
   140014700:	je     0x14001489c
   140014706:	jmp    0x140014884
   14001470b:	mov    rax,QWORD PTR [r14]
   14001470e:	mov    rdi,QWORD PTR [rax+0x20]
   140014712:	mov    rcx,rdi
   140014715:	call   QWORD PTR [rip+0x1df8d]        # 0x1400326a8
   14001471b:	lea    rdx,[r15+0x48]
   14001471f:	mov    rcx,r14
   140014722:	call   rdi
   140014724:	mov    ebx,eax
   140014726:	test   eax,eax
   140014728:	jns    0x140014750
   14001472a:	mov    rcx,QWORD PTR [rip+0x36947]        # 0x14004b078
   140014731:	lea    rdx,[rip+0x36940]        # 0x14004b078
   140014738:	cmp    rcx,rdx
   14001473b:	je     0x1400148d0
   140014741:	test   BYTE PTR [rcx+0x1c],0x1
   140014745:	je     0x1400148d0
   14001474b:	jmp    0x1400148b8
   140014750:	mov    rax,QWORD PTR [r14]
   140014753:	mov    rdi,QWORD PTR [rax+0x48]
   140014757:	mov    rcx,rdi
   14001475a:	call   QWORD PTR [rip+0x1df48]        # 0x1400326a8
   140014760:	lea    rdx,[r15+0x50]
   140014764:	mov    rcx,r14
   140014767:	call   rdi
   140014769:	mov    ebx,eax
   14001476b:	test   eax,eax
   14001476d:	jns    0x140014795
   14001476f:	mov    rcx,QWORD PTR [rip+0x36902]        # 0x14004b078
   140014776:	lea    rdx,[rip+0x368fb]        # 0x14004b078
   14001477d:	cmp    rcx,rdx
   140014780:	je     0x140014904
   140014786:	test   BYTE PTR [rcx+0x1c],0x1
   14001478a:	je     0x140014904
   140014790:	jmp    0x1400148ec
   140014795:	mov    rax,QWORD PTR [r14]
   140014798:	mov    rdi,QWORD PTR [rax+0x40]
   14001479c:	mov    rcx,rdi
   14001479f:	call   QWORD PTR [rip+0x1df03]        # 0x1400326a8
   1400147a5:	lea    rdx,[r15+0x54]
   1400147a9:	mov    rcx,r14
   1400147ac:	call   rdi
   1400147ae:	mov    ebx,eax
   1400147b0:	test   eax,eax
   1400147b2:	jns    0x1400147da
   1400147b4:	mov    rcx,QWORD PTR [rip+0x368bd]        # 0x14004b078
   1400147bb:	lea    rdx,[rip+0x368b6]        # 0x14004b078
   1400147c2:	cmp    rcx,rdx
   1400147c5:	je     0x140014938
   1400147cb:	test   BYTE PTR [rcx+0x1c],0x1
   1400147cf:	je     0x140014938
   1400147d5:	jmp    0x140014920
   1400147da:	mov    rax,QWORD PTR [r14]
   1400147dd:	mov    rdi,QWORD PTR [rax+0x78]
   1400147e1:	mov    rcx,rdi
   1400147e4:	call   QWORD PTR [rip+0x1debe]        # 0x1400326a8
   1400147ea:	lea    rdx,[r15+0x58]
   1400147ee:	mov    rcx,r14
   1400147f1:	call   rdi
   1400147f3:	mov    ebx,eax
   1400147f5:	test   eax,eax
   1400147f7:	jns    0x14001481f
   1400147f9:	mov    rcx,QWORD PTR [rip+0x36878]        # 0x14004b078
   140014800:	lea    rdx,[rip+0x36871]        # 0x14004b078
   140014807:	cmp    rcx,rdx
   14001480a:	je     0x14001496c
   140014810:	test   BYTE PTR [rcx+0x1c],0x1
   140014814:	je     0x14001496c
   14001481a:	jmp    0x140014954
   14001481f:	mov    rax,QWORD PTR [r14]
   140014822:	mov    rdi,QWORD PTR [rax+0x28]
   140014826:	mov    rcx,rdi
   140014829:	call   QWORD PTR [rip+0x1de79]        # 0x1400326a8
   14001482f:	lea    rdx,[r15+0x60]
   140014833:	mov    rcx,r14
   140014836:	call   rdi
   140014838:	mov    ebx,eax
   14001483a:	test   eax,eax
   14001483c:	jns    0x140014864
   14001483e:	mov    rcx,QWORD PTR [rip+0x36833]        # 0x14004b078
   140014845:	lea    rdx,[rip+0x3682c]        # 0x14004b078
   14001484c:	cmp    rcx,rdx
   14001484f:	je     0x1400149a0
   140014855:	test   BYTE PTR [rcx+0x1c],0x1
   140014859:	je     0x1400149a0
   14001485f:	jmp    0x140014988
   140014864:	mov    rcx,QWORD PTR [rbp-0x8]
   140014868:	xor    rcx,rsp
   14001486b:	call   0x14002dd00
   140014870:	mov    rbx,QWORD PTR [rsp+0x88]
   140014878:	add    rsp,0x50
   14001487c:	pop    r15
   14001487e:	pop    r14
   140014880:	pop    rdi
   140014881:	pop    rsi
   140014882:	pop    rbp
   140014883:	ret    
   140014884:	mov    rcx,QWORD PTR [rcx+0x10]
   140014888:	lea    r8,[rip+0x23051]        # 0x1400378e0
   14001488f:	mov    edx,0x35
   140014894:	mov    r9d,eax
   140014897:	call   0x140001f70
   14001489c:	mov    edx,ebx
   14001489e:	lea    rcx,[rbp-0x30]
   1400148a2:	call   0x140002064
   1400148a7:	lea    rdx,[rip+0x348da]        # 0x140049188
   1400148ae:	lea    rcx,[rbp-0x30]
   1400148b2:	call   0x14002e2da
   1400148b7:	int3   
   1400148b8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400148bc:	lea    r8,[rip+0x2301d]        # 0x1400378e0
   1400148c3:	mov    edx,0x36
   1400148c8:	mov    r9d,eax
   1400148cb:	call   0x140001f70
   1400148d0:	mov    edx,ebx
   1400148d2:	lea    rcx,[rbp-0x30]
   1400148d6:	call   0x140002064
   1400148db:	lea    rdx,[rip+0x348a6]        # 0x140049188
   1400148e2:	lea    rcx,[rbp-0x30]
   1400148e6:	call   0x14002e2da
   1400148eb:	int3   
   1400148ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400148f0:	lea    r8,[rip+0x22fe9]        # 0x1400378e0
   1400148f7:	mov    edx,0x37
   1400148fc:	mov    r9d,eax
   1400148ff:	call   0x140001f70
   140014904:	mov    edx,ebx
   140014906:	lea    rcx,[rbp-0x30]
   14001490a:	call   0x140002064
   14001490f:	lea    rdx,[rip+0x34872]        # 0x140049188
   140014916:	lea    rcx,[rbp-0x30]
   14001491a:	call   0x14002e2da
   14001491f:	int3   
   140014920:	mov    rcx,QWORD PTR [rcx+0x10]
   140014924:	lea    r8,[rip+0x22fb5]        # 0x1400378e0
   14001492b:	mov    edx,0x38
   140014930:	mov    r9d,eax
   140014933:	call   0x140001f70
   140014938:	mov    edx,ebx
   14001493a:	lea    rcx,[rbp-0x30]
   14001493e:	call   0x140002064
   140014943:	lea    rdx,[rip+0x3483e]        # 0x140049188
   14001494a:	lea    rcx,[rbp-0x30]
   14001494e:	call   0x14002e2da
   140014953:	int3   
   140014954:	mov    rcx,QWORD PTR [rcx+0x10]
   140014958:	lea    r8,[rip+0x22f81]        # 0x1400378e0
   14001495f:	mov    edx,0x39
   140014964:	mov    r9d,eax
   140014967:	call   0x140001f70
   14001496c:	mov    edx,ebx
   14001496e:	lea    rcx,[rbp-0x30]
   140014972:	call   0x140002064
   140014977:	lea    rdx,[rip+0x3480a]        # 0x140049188
   14001497e:	lea    rcx,[rbp-0x30]
   140014982:	call   0x14002e2da
   140014987:	int3   
   140014988:	mov    rcx,QWORD PTR [rcx+0x10]
   14001498c:	lea    r8,[rip+0x22f4d]        # 0x1400378e0
   140014993:	mov    edx,0x3a
   140014998:	mov    r9d,eax
   14001499b:	call   0x140001f70
   1400149a0:	mov    edx,ebx
   1400149a2:	lea    rcx,[rbp-0x30]
   1400149a6:	call   0x140002064
   1400149ab:	lea    rdx,[rip+0x347d6]        # 0x140049188
   1400149b2:	lea    rcx,[rbp-0x30]
   1400149b6:	call   0x14002e2da
   1400149bb:	int3   
   1400149bc:	int3   
   1400149bd:	int3   
   1400149be:	int3   
   1400149bf:	int3   
   1400149c0:	int3   
   1400149c1:	int3   
   1400149c2:	int3   
   1400149c3:	int3   
   1400149c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400149c9:	push   rdi
   1400149ca:	sub    rsp,0x40
   1400149ce:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400149d7:	mov    QWORD PTR [rsp+0x68],rbx
   1400149dc:	mov    rbx,rcx
   1400149df:	xor    edi,edi
   1400149e1:	mov    QWORD PTR [rcx],rdi
   1400149e4:	mov    QWORD PTR [rcx+0x8],rdi
   1400149e8:	xor    r8d,r8d
   1400149eb:	xor    edx,edx
   1400149ed:	call   0x14000ded0
   1400149f2:	mov    QWORD PTR [rbx],rax
   1400149f5:	lea    r10,[rbx+0x10]
   1400149f9:	mov    QWORD PTR [r10],rdi
   1400149fc:	mov    QWORD PTR [r10+0x8],rdi
   140014a00:	mov    QWORD PTR [r10+0x10],rdi
   140014a04:	mov    DWORD PTR [rbx+0x38],0x40800000
   140014a0b:	mov    rax,QWORD PTR [rbx]
   140014a0e:	mov    QWORD PTR [rsp+0x58],rax
   140014a13:	mov    rdx,QWORD PTR [r10+0x8]
   140014a17:	mov    rcx,QWORD PTR [r10]
   140014a1a:	cmp    rcx,rcx
   140014a1d:	jne    0x140014a24
   140014a1f:	cmp    rdx,rdx
   140014a22:	je     0x140014a59
   140014a24:	cmp    rcx,rdx
   140014a27:	je     0x140014a5d
   140014a29:	mov    r8,rdx
   140014a2c:	sub    r8,rdx
   140014a2f:	add    r8,0x7
   140014a33:	shr    r8,0x3
   140014a37:	cmp    rdx,rdx
   140014a3a:	cmova  r8,rdi
   140014a3e:	test   r8,r8
   140014a41:	je     0x140014a59
   140014a43:	sub    rdx,rcx
   140014a46:	mov    rax,QWORD PTR [rdx+rcx*1]
   140014a4a:	mov    QWORD PTR [rcx],rax
   140014a4d:	add    rcx,0x8
   140014a51:	inc    rdi
   140014a54:	cmp    rdi,r8
   140014a57:	jne    0x140014a46
   140014a59:	mov    QWORD PTR [r10+0x8],rcx
   140014a5d:	lea    rax,[rsp+0x58]
   140014a62:	mov    QWORD PTR [rsp+0x20],rax
   140014a67:	mov    r9d,0x10
   140014a6d:	mov    r8,QWORD PTR [r10]
   140014a70:	lea    rdx,[rsp+0x60]
   140014a75:	mov    rcx,r10
   140014a78:	call   0x14000dfb4
   140014a7d:	mov    QWORD PTR [rbx+0x28],0x7
   140014a85:	mov    QWORD PTR [rbx+0x30],0x8
   140014a8d:	mov    rax,rbx
   140014a90:	mov    rbx,QWORD PTR [rsp+0x68]
   140014a95:	add    rsp,0x40
   140014a99:	pop    rdi
   140014a9a:	ret    
   140014a9b:	int3   
   140014a9c:	int3   
   140014a9d:	int3   
   140014a9e:	int3   
   140014a9f:	int3   
   140014aa0:	int3   
   140014aa1:	int3   
   140014aa2:	int3   
   140014aa3:	int3   
   140014aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140014aa9:	mov    QWORD PTR [rsp+0x10],rbp
   140014aae:	mov    QWORD PTR [rsp+0x18],rsi
   140014ab3:	push   rdi
   140014ab4:	push   r14
   140014ab6:	push   r15
   140014ab8:	sub    rsp,0x20
   140014abc:	mov    eax,DWORD PTR [r8+0xc]
   140014ac0:	mov    rsi,rdx
   140014ac3:	add    eax,DWORD PTR [r8+0x8]
   140014ac7:	mov    rbp,r8
   140014aca:	add    eax,DWORD PTR [r8+0x4]
   140014ace:	add    eax,DWORD PTR [r8]
   140014ad1:	mov    r10,QWORD PTR [rcx+0x28]
   140014ad5:	imul   r9d,eax,0x62531966
   140014adc:	mov    edx,r9d
   140014adf:	rol    edx,0x15
   140014ae2:	add    edx,r9d
   140014ae5:	and    rdx,r10
   140014ae8:	cmp    QWORD PTR [rcx+0x30],rdx
   140014aec:	ja     0x140014afb
   140014aee:	shr    r10,1
   140014af1:	or     rax,0xffffffffffffffff
   140014af5:	sub    rax,r10
   140014af8:	add    rdx,rax
   140014afb:	mov    r14,QWORD PTR [rcx+0x10]
   140014aff:	lea    r15,[rdx+rdx*1]
   140014b03:	mov    rdi,QWORD PTR [rcx]
   140014b06:	mov    rax,rdx
   140014b09:	add    rax,rax
   140014b0c:	mov    rbx,QWORD PTR [r14+rax*8]
   140014b10:	cmp    QWORD PTR [r14+r15*8],rdi
   140014b14:	jne    0x140014b1b
   140014b16:	mov    rax,rdi
   140014b19:	jmp    0x140014b23
   140014b1b:	mov    rax,QWORD PTR [r14+r15*8+0x8]
   140014b20:	mov    rax,QWORD PTR [rax]
   140014b23:	cmp    rbx,rax
   140014b26:	je     0x140014b60
   140014b28:	lea    rcx,[rbx+0x10]
   140014b2c:	mov    r8d,0x10
   140014b32:	mov    rdx,rbp
   140014b35:	call   0x14002e876
   140014b3a:	test   eax,eax
   140014b3c:	jns    0x140014b43
   140014b3e:	mov    rbx,QWORD PTR [rbx]
   140014b41:	jmp    0x140014b10
   140014b43:	lea    rdx,[rbx+0x10]
   140014b47:	mov    r8d,0x10
   140014b4d:	mov    rcx,rbp
   140014b50:	call   0x14002e876
   140014b55:	test   eax,eax
   140014b57:	cmovs  rbx,rdi
   140014b5b:	mov    QWORD PTR [rsi],rbx
   140014b5e:	jmp    0x140014b63
   140014b60:	mov    QWORD PTR [rsi],rdi
   140014b63:	mov    rbx,QWORD PTR [rsp+0x40]
   140014b68:	mov    rax,rsi
   140014b6b:	mov    rsi,QWORD PTR [rsp+0x50]
   140014b70:	mov    rbp,QWORD PTR [rsp+0x48]
   140014b75:	add    rsp,0x20
   140014b79:	pop    r15
   140014b7b:	pop    r14
   140014b7d:	pop    rdi
   140014b7e:	ret    
   140014b7f:	int3   
   140014b80:	int3   
   140014b81:	int3   
   140014b82:	int3   
   140014b83:	int3   
   140014b84:	int3   
   140014b85:	int3   
   140014b86:	int3   
   140014b87:	int3   
   140014b88:	mov    QWORD PTR [rsp+0x10],rbx
   140014b8d:	mov    QWORD PTR [rsp+0x18],rsi
   140014b92:	push   rdi
   140014b93:	sub    rsp,0x20
   140014b97:	mov    rbx,QWORD PTR [rcx]
   140014b9a:	test   rbx,rbx
   140014b9d:	je     0x140014c04
   140014b9f:	or     eax,0xffffffff
   140014ba2:	lock xadd DWORD PTR [rbx],eax
   140014ba6:	cmp    eax,0x1
   140014ba9:	jne    0x140014c04
   140014bab:	test   rbx,rbx
   140014bae:	je     0x140014c04
   140014bb0:	mov    rdi,QWORD PTR [rbx+0x8]
   140014bb4:	test   rdi,rdi
   140014bb7:	je     0x140014bfb
   140014bb9:	mov    rsi,QWORD PTR [rbx+0x10]
   140014bbd:	jmp    0x140014bdd
   140014bbf:	mov    rcx,QWORD PTR [rdi]
   140014bc2:	test   rcx,rcx
   140014bc5:	je     0x140014bd9
   140014bc7:	or     eax,0xffffffff
   140014bca:	lock xadd DWORD PTR [rcx],eax
   140014bce:	cmp    eax,0x1
   140014bd1:	jne    0x140014bd9
   140014bd3:	call   QWORD PTR [rip+0x1d9ef]        # 0x1400325c8
   140014bd9:	add    rdi,0x8
   140014bdd:	cmp    rdi,rsi
   140014be0:	jne    0x140014bbf
   140014be2:	mov    rcx,QWORD PTR [rbx+0x8]
   140014be6:	call   QWORD PTR [rip+0x1d9dc]        # 0x1400325c8
   140014bec:	and    QWORD PTR [rbx+0x8],0x0
   140014bf1:	and    QWORD PTR [rbx+0x10],0x0
   140014bf6:	and    QWORD PTR [rbx+0x18],0x0
   140014bfb:	mov    rcx,rbx
   140014bfe:	call   QWORD PTR [rip+0x1d9c4]        # 0x1400325c8
   140014c04:	mov    rbx,QWORD PTR [rsp+0x38]
   140014c09:	mov    rsi,QWORD PTR [rsp+0x40]
   140014c0e:	add    rsp,0x20
   140014c12:	pop    rdi
   140014c13:	ret    
   140014c14:	int3   
   140014c15:	int3   
   140014c16:	int3   
   140014c17:	int3   
   140014c18:	int3   
   140014c19:	int3   
   140014c1a:	int3   
   140014c1b:	int3   
   140014c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140014c21:	mov    QWORD PTR [rsp+0x10],rsi
   140014c26:	push   rdi
   140014c27:	sub    rsp,0x20
   140014c2b:	mov    rdi,QWORD PTR [rcx]
   140014c2e:	mov    rbx,rcx
   140014c31:	test   rdi,rdi
   140014c34:	je     0x140014c65
   140014c36:	mov    rsi,QWORD PTR [rcx+0x8]
   140014c3a:	jmp    0x140014c49
   140014c3c:	mov    rcx,QWORD PTR [rdi]
   140014c3f:	call   QWORD PTR [rip+0x1d70b]        # 0x140032350
   140014c45:	add    rdi,0x8
   140014c49:	cmp    rdi,rsi
   140014c4c:	jne    0x140014c3c
   140014c4e:	mov    rcx,QWORD PTR [rbx]
   140014c51:	call   QWORD PTR [rip+0x1d971]        # 0x1400325c8
   140014c57:	and    QWORD PTR [rbx],0x0
   140014c5b:	and    QWORD PTR [rbx+0x8],0x0
   140014c60:	and    QWORD PTR [rbx+0x10],0x0
   140014c65:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c6a:	mov    rsi,QWORD PTR [rsp+0x38]
   140014c6f:	add    rsp,0x20
   140014c73:	pop    rdi
   140014c74:	ret    
   140014c75:	int3   
   140014c76:	int3   
   140014c77:	int3   
   140014c78:	int3   
   140014c79:	int3   
   140014c7a:	int3   
   140014c7b:	int3   
   140014c7c:	mov    QWORD PTR [rsp+0x10],rbx
   140014c81:	push   rdi
   140014c82:	sub    rsp,0x20
   140014c86:	mov    rdi,QWORD PTR [rcx+0x10]
   140014c8a:	test   rdi,rdi
   140014c8d:	je     0x140014cba
   140014c8f:	or     eax,0xffffffff
   140014c92:	lock xadd DWORD PTR [rdi+0x8],eax
   140014c97:	cmp    eax,0x1
   140014c9a:	jne    0x140014cba
   140014c9c:	test   rdi,rdi
   140014c9f:	je     0x140014cba
   140014ca1:	mov    rax,QWORD PTR [rdi]
   140014ca4:	mov    rbx,QWORD PTR [rax]
   140014ca7:	mov    rcx,rbx
   140014caa:	call   QWORD PTR [rip+0x1d9f8]        # 0x1400326a8
   140014cb0:	mov    edx,0x1
   140014cb5:	mov    rcx,rdi
   140014cb8:	call   rbx
   140014cba:	mov    rbx,QWORD PTR [rsp+0x38]
   140014cbf:	add    rsp,0x20
   140014cc3:	pop    rdi
   140014cc4:	ret    
   140014cc5:	int3   
   140014cc6:	int3   
   140014cc7:	int3   
   140014cc8:	int3   
   140014cc9:	int3   
   140014cca:	int3   
   140014ccb:	int3   
   140014ccc:	mov    QWORD PTR [rsp+0x10],rbx
   140014cd1:	mov    QWORD PTR [rsp+0x18],rbp
   140014cd6:	push   rsi
   140014cd7:	push   rdi
   140014cd8:	push   r14
   140014cda:	sub    rsp,0x20
   140014cde:	mov    rax,QWORD PTR [rcx]
   140014ce1:	mov    rdi,rcx
   140014ce4:	mov    rsi,QWORD PTR [rax]
   140014ce7:	mov    QWORD PTR [rax],rax
   140014cea:	mov    rax,QWORD PTR [rcx]
   140014ced:	mov    QWORD PTR [rax+0x8],rax
   140014cf1:	and    QWORD PTR [rcx+0x8],0x0
   140014cf6:	cmp    rsi,QWORD PTR [rcx]
   140014cf9:	je     0x140014d44
   140014cfb:	mov    r14,QWORD PTR [rsi+0x20]
   140014cff:	mov    rbp,QWORD PTR [rsi]
   140014d02:	test   r14,r14
   140014d05:	je     0x140014d33
   140014d07:	or     eax,0xffffffff
   140014d0a:	lock xadd DWORD PTR [r14+0x8],eax
   140014d10:	cmp    eax,0x1
   140014d13:	jne    0x140014d33
   140014d15:	test   r14,r14
   140014d18:	je     0x140014d33
   140014d1a:	mov    rax,QWORD PTR [r14]
   140014d1d:	mov    rbx,QWORD PTR [rax]
   140014d20:	mov    rcx,rbx
   140014d23:	call   QWORD PTR [rip+0x1d97f]        # 0x1400326a8
   140014d29:	mov    edx,0x1
   140014d2e:	mov    rcx,r14
   140014d31:	call   rbx
   140014d33:	mov    rcx,rsi
   140014d36:	call   QWORD PTR [rip+0x1d88c]        # 0x1400325c8
   140014d3c:	mov    rsi,rbp
   140014d3f:	cmp    rbp,QWORD PTR [rdi]
   140014d42:	jne    0x140014cfb
   140014d44:	mov    rcx,QWORD PTR [rdi]
   140014d47:	mov    rbx,QWORD PTR [rsp+0x48]
   140014d4c:	mov    rbp,QWORD PTR [rsp+0x50]
   140014d51:	add    rsp,0x20
   140014d55:	pop    r14
   140014d57:	pop    rdi
   140014d58:	pop    rsi
   140014d59:	rex.W jmp QWORD PTR [rip+0x1d868]        # 0x1400325c8
   140014d60:	int3   
   140014d61:	int3   
   140014d62:	int3   
   140014d63:	int3   
   140014d64:	int3   
   140014d65:	int3   
   140014d66:	int3   
   140014d67:	int3   
   140014d68:	mov    rax,rsp
   140014d6b:	push   r12
   140014d6d:	push   r14
   140014d6f:	push   r15
   140014d71:	sub    rsp,0x40
   140014d75:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140014d7d:	mov    QWORD PTR [rax+0x8],rbx
   140014d81:	mov    QWORD PTR [rax+0x18],rsi
   140014d85:	mov    QWORD PTR [rax+0x20],rdi
   140014d89:	mov    r14,rdx
   140014d8c:	mov    rdi,rcx
   140014d8f:	xor    ebx,ebx
   140014d91:	mov    QWORD PTR [rsp+0x68],rbx
   140014d96:	test   rdx,rdx
   140014d99:	je     0x140014dc6
   140014d9b:	movabs rax,0x1fffffffffffffff
   140014da5:	cmp    rdx,rax
   140014da8:	ja     0x140014dc0
   140014daa:	mov    rcx,rdx
   140014dad:	shl    rcx,0x3
   140014db1:	call   0x140023f10
   140014db6:	mov    rbx,rax
   140014db9:	mov    QWORD PTR [rsp+0x68],rax
   140014dbe:	jmp    0x140014dc6
   140014dc0:	call   0x14000203c
   140014dc5:	nop
   140014dc6:	mov    r8,rbx
   140014dc9:	mov    rdx,QWORD PTR [rdi+0x8]
   140014dcd:	mov    rcx,QWORD PTR [rdi]
   140014dd0:	call   0x14001527c
   140014dd5:	nop
   140014dd6:	mov    r12,QWORD PTR [rdi+0x8]
   140014dda:	mov    rsi,QWORD PTR [rdi]
   140014ddd:	mov    r15,r12
   140014de0:	sub    r15,rsi
   140014de3:	sar    r15,0x3
   140014de7:	test   rsi,rsi
   140014dea:	je     0x140014e1a
   140014dec:	jmp    0x140014e0c
   140014dee:	mov    rcx,QWORD PTR [rsi]
   140014df1:	test   rcx,rcx
   140014df4:	je     0x140014e08
   140014df6:	or     eax,0xffffffff
   140014df9:	lock xadd DWORD PTR [rcx],eax
   140014dfd:	cmp    eax,0x1
   140014e00:	jne    0x140014e08
   140014e02:	call   QWORD PTR [rip+0x1d7c0]        # 0x1400325c8
   140014e08:	add    rsi,0x8
   140014e0c:	cmp    rsi,r12
   140014e0f:	jne    0x140014dee
   140014e11:	mov    rcx,QWORD PTR [rdi]
   140014e14:	call   QWORD PTR [rip+0x1d7ae]        # 0x1400325c8
   140014e1a:	lea    rax,[rbx+r14*8]
   140014e1e:	mov    QWORD PTR [rdi+0x10],rax
   140014e22:	lea    rax,[rbx+r15*8]
   140014e26:	mov    QWORD PTR [rdi+0x8],rax
   140014e2a:	mov    QWORD PTR [rdi],rbx
   140014e2d:	mov    rbx,QWORD PTR [rsp+0x60]
   140014e32:	mov    rsi,QWORD PTR [rsp+0x70]
   140014e37:	mov    rdi,QWORD PTR [rsp+0x78]
   140014e3c:	add    rsp,0x40
   140014e40:	pop    r15
   140014e42:	pop    r14
   140014e44:	pop    r12
   140014e46:	ret    
   140014e47:	int3   
   140014e48:	int3   
   140014e49:	int3   
   140014e4a:	int3   
   140014e4b:	int3   
   140014e4c:	int3   
   140014e4d:	int3   
   140014e4e:	int3   
   140014e4f:	int3   
   140014e50:	mov    rax,rsp
   140014e53:	push   r14
   140014e55:	sub    rsp,0x30
   140014e59:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140014e61:	mov    QWORD PTR [rax+0x8],rbx
   140014e65:	mov    QWORD PTR [rax+0x18],rsi
   140014e69:	mov    QWORD PTR [rax+0x20],rdi
   140014e6d:	mov    rsi,rdx
   140014e70:	mov    rdi,rcx
   140014e73:	xor    ebx,ebx
   140014e75:	mov    QWORD PTR [rsp+0x48],rbx
   140014e7a:	test   rdx,rdx
   140014e7d:	je     0x140014eaa
   140014e7f:	movabs rax,0x3fffffffffffffff
   140014e89:	cmp    rdx,rax
   140014e8c:	ja     0x140014ea4
   140014e8e:	mov    rcx,rdx
   140014e91:	shl    rcx,0x2
   140014e95:	call   0x140023f10
   140014e9a:	mov    rbx,rax
   140014e9d:	mov    QWORD PTR [rsp+0x48],rax
   140014ea2:	jmp    0x140014eaa
   140014ea4:	call   0x14000203c
   140014ea9:	nop
   140014eaa:	mov    r8,QWORD PTR [rdi+0x8]
   140014eae:	sub    r8,QWORD PTR [rdi]
   140014eb1:	and    r8,0xfffffffffffffffc
   140014eb5:	mov    rdx,QWORD PTR [rdi]
   140014eb8:	mov    rcx,rbx
   140014ebb:	call   QWORD PTR [rip+0x1d5df]        # 0x1400324a0
   140014ec1:	nop
   140014ec2:	mov    rcx,QWORD PTR [rdi]
   140014ec5:	mov    r14,QWORD PTR [rdi+0x8]
   140014ec9:	sub    r14,rcx
   140014ecc:	sar    r14,0x2
   140014ed0:	test   rcx,rcx
   140014ed3:	je     0x140014edb
   140014ed5:	call   QWORD PTR [rip+0x1d6ed]        # 0x1400325c8
   140014edb:	lea    rax,[rbx+rsi*4]
   140014edf:	mov    QWORD PTR [rdi+0x10],rax
   140014ee3:	lea    rax,[rbx+r14*4]
   140014ee7:	mov    QWORD PTR [rdi+0x8],rax
   140014eeb:	mov    QWORD PTR [rdi],rbx
   140014eee:	mov    rbx,QWORD PTR [rsp+0x40]
   140014ef3:	mov    rsi,QWORD PTR [rsp+0x50]
   140014ef8:	mov    rdi,QWORD PTR [rsp+0x58]
   140014efd:	add    rsp,0x30
   140014f01:	pop    r14
   140014f03:	ret    
   140014f04:	int3   
   140014f05:	int3   
   140014f06:	int3   
   140014f07:	int3   
   140014f08:	int3   
   140014f09:	int3   
   140014f0a:	int3   
   140014f0b:	int3   
   140014f0c:	mov    QWORD PTR [rsp+0x20],r9
   140014f11:	mov    QWORD PTR [rsp+0x8],rcx
   140014f16:	push   rbx
   140014f17:	push   rsi
   140014f18:	push   rdi
   140014f19:	push   r12
   140014f1b:	push   r13
   140014f1d:	push   r14
   140014f1f:	push   r15
   140014f21:	sub    rsp,0x30
   140014f25:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014f2e:	mov    rbx,r9
   140014f31:	mov    r13,r8
   140014f34:	mov    r12,rdx
   140014f37:	mov    r14,rcx
   140014f3a:	mov    eax,DWORD PTR [r8+0xc]
   140014f3e:	add    eax,DWORD PTR [r8+0x8]
   140014f42:	add    eax,DWORD PTR [r8+0x4]
   140014f46:	add    eax,DWORD PTR [r8]
   140014f49:	imul   r9d,eax,0x62531966
   140014f50:	mov    r15d,r9d
   140014f53:	rol    r15d,0x15
   140014f57:	add    r15d,r9d
   140014f5a:	mov    rcx,QWORD PTR [rcx+0x28]
   140014f5e:	and    r15,rcx
   140014f61:	cmp    QWORD PTR [r14+0x30],r15
   140014f65:	ja     0x140014f74
   140014f67:	shr    rcx,1
   140014f6a:	or     rax,0xffffffffffffffff
   140014f6e:	sub    rax,rcx
   140014f71:	add    r15,rax
   140014f74:	mov    rsi,r15
   140014f77:	add    rsi,rsi
   140014f7a:	mov    rcx,QWORD PTR [r14+0x10]
   140014f7e:	mov    rax,QWORD PTR [rcx+rsi*8]
   140014f82:	cmp    rax,QWORD PTR [r14]
   140014f85:	jne    0x140014f8c
   140014f87:	mov    rdi,QWORD PTR [r14]
   140014f8a:	jmp    0x140014f94
   140014f8c:	mov    rdi,QWORD PTR [rcx+rsi*8+0x8]
   140014f91:	mov    rdi,QWORD PTR [rdi]
   140014f94:	cmp    rdi,rax
   140014f97:	je     0x140015052
   140014f9d:	add    r15,r15
   140014fa0:	mov    rdi,QWORD PTR [rdi+0x8]
   140014fa4:	lea    rdx,[rdi+0x10]
   140014fa8:	mov    r8d,0x10
   140014fae:	mov    rcx,r13
   140014fb1:	call   0x14002e876
   140014fb6:	test   eax,eax
   140014fb8:	jns    0x140014fc9
   140014fba:	mov    rax,QWORD PTR [r14+0x10]
   140014fbe:	cmp    rdi,QWORD PTR [rax+r15*8]
   140014fc2:	jne    0x140014fa0
   140014fc4:	jmp    0x140015052
   140014fc9:	lea    rcx,[rdi+0x10]
   140014fcd:	mov    r8d,0x10
   140014fd3:	mov    rdx,r13
   140014fd6:	call   0x14002e876
   140014fdb:	test   eax,eax
   140014fdd:	jns    0x140014fe4
   140014fdf:	mov    rdi,QWORD PTR [rdi]
   140014fe2:	jmp    0x140015052
   140014fe4:	cmp    rbx,QWORD PTR [r14]
   140014fe7:	je     0x140015040
   140014fe9:	mov    rcx,QWORD PTR [rbx+0x8]
   140014fed:	mov    rax,QWORD PTR [rbx]
   140014ff0:	mov    QWORD PTR [rcx],rax
   140014ff3:	mov    rcx,QWORD PTR [rbx]
   140014ff6:	mov    rax,QWORD PTR [rbx+0x8]
   140014ffa:	mov    QWORD PTR [rcx+0x8],rax
   140014ffe:	mov    r15,QWORD PTR [rbx+0x20]
   140015002:	test   r15,r15
   140015005:	je     0x140015033
   140015007:	or     eax,0xffffffff
   14001500a:	lock xadd DWORD PTR [r15+0x8],eax
   140015010:	cmp    eax,0x1
   140015013:	jne    0x140015033
   140015015:	test   r15,r15
   140015018:	je     0x140015033
   14001501a:	mov    rax,QWORD PTR [r15]
   14001501d:	mov    rsi,QWORD PTR [rax]
   140015020:	mov    rcx,rsi
   140015023:	call   QWORD PTR [rip+0x1d67f]        # 0x1400326a8
   140015029:	mov    edx,0x1
   14001502e:	mov    rcx,r15
   140015031:	call   rsi
   140015033:	mov    rcx,rbx
   140015036:	call   QWORD PTR [rip+0x1d58c]        # 0x1400325c8
   14001503c:	dec    QWORD PTR [r14+0x8]
   140015040:	mov    QWORD PTR [r12],rdi
   140015044:	mov    BYTE PTR [r12+0x8],0x0
   14001504a:	mov    rax,r12
   14001504d:	jmp    0x1400150e7
   140015052:	mov    rax,QWORD PTR [rbx]
   140015055:	cmp    rdi,rax
   140015058:	je     0x140015087
   14001505a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001505e:	mov    QWORD PTR [rcx],rax
   140015061:	mov    rcx,QWORD PTR [rax+0x8]
   140015065:	mov    QWORD PTR [rcx],rdi
   140015068:	mov    rcx,QWORD PTR [rdi+0x8]
   14001506c:	mov    QWORD PTR [rcx],rbx
   14001506f:	mov    rdx,QWORD PTR [rdi+0x8]
   140015073:	mov    rcx,QWORD PTR [rax+0x8]
   140015077:	mov    QWORD PTR [rdi+0x8],rcx
   14001507b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001507f:	mov    QWORD PTR [rax+0x8],rcx
   140015083:	mov    QWORD PTR [rbx+0x8],rdx
   140015087:	mov    rdx,QWORD PTR [r14+0x10]
   14001508b:	mov    rax,QWORD PTR [rdx+rsi*8]
   14001508f:	cmp    rax,QWORD PTR [r14]
   140015092:	jne    0x1400150a3
   140015094:	mov    QWORD PTR [rdx+rsi*8],rbx
   140015098:	mov    rax,QWORD PTR [r14+0x10]
   14001509c:	mov    QWORD PTR [rax+rsi*8+0x8],rbx
   1400150a1:	jmp    0x1400150d2
   1400150a3:	cmp    rax,rdi
   1400150a6:	jne    0x1400150ae
   1400150a8:	mov    QWORD PTR [rdx+rsi*8],rbx
   1400150ac:	jmp    0x1400150d2
   1400150ae:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   1400150b3:	mov    rcx,QWORD PTR [rax]
   1400150b6:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   1400150bb:	cmp    rcx,rbx
   1400150be:	je     0x1400150d2
   1400150c0:	mov    rdx,QWORD PTR [r14+0x10]
   1400150c4:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   1400150c9:	mov    rcx,QWORD PTR [rax+0x8]
   1400150cd:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   1400150d2:	mov    rcx,r14
   1400150d5:	call   0x140015190
   1400150da:	mov    QWORD PTR [r12],rbx
   1400150de:	mov    BYTE PTR [r12+0x8],0x1
   1400150e4:	mov    rax,r12
   1400150e7:	add    rsp,0x30
   1400150eb:	pop    r15
   1400150ed:	pop    r14
   1400150ef:	pop    r13
   1400150f1:	pop    r12
   1400150f3:	pop    rdi
   1400150f4:	pop    rsi
   1400150f5:	pop    rbx
   1400150f6:	ret    
   1400150f7:	int3   
   1400150f8:	int3   
   1400150f9:	int3   
   1400150fa:	int3   
   1400150fb:	int3   
   1400150fc:	int3   
   1400150fd:	int3   
   1400150fe:	int3   
   1400150ff:	int3   
   140015100:	mov    QWORD PTR [rsp+0x10],rbx
   140015105:	mov    QWORD PTR [rsp+0x18],rbp
   14001510a:	mov    QWORD PTR [rsp+0x20],rsi
   14001510f:	push   rdi
   140015110:	sub    rsp,0x20
   140015114:	mov    rdi,rdx
   140015117:	mov    rbp,rcx
   14001511a:	cmp    rdx,QWORD PTR [rcx]
   14001511d:	je     0x140015175
   14001511f:	mov    rdx,QWORD PTR [rdx+0x8]
   140015123:	mov    rax,QWORD PTR [rdi]
   140015126:	mov    QWORD PTR [rdx],rax
   140015129:	mov    rdx,QWORD PTR [rdi]
   14001512c:	mov    rax,QWORD PTR [rdi+0x8]
   140015130:	mov    QWORD PTR [rdx+0x8],rax
   140015134:	mov    rsi,QWORD PTR [rdi+0x20]
   140015138:	test   rsi,rsi
   14001513b:	je     0x140015168
   14001513d:	or     eax,0xffffffff
   140015140:	lock xadd DWORD PTR [rsi+0x8],eax
   140015145:	cmp    eax,0x1
   140015148:	jne    0x140015168
   14001514a:	test   rsi,rsi
   14001514d:	je     0x140015168
   14001514f:	mov    rax,QWORD PTR [rsi]
   140015152:	mov    rbx,QWORD PTR [rax]
   140015155:	mov    rcx,rbx
   140015158:	call   QWORD PTR [rip+0x1d54a]        # 0x1400326a8
   14001515e:	mov    edx,0x1
   140015163:	mov    rcx,rsi
   140015166:	call   rbx
   140015168:	mov    rcx,rdi
   14001516b:	call   QWORD PTR [rip+0x1d457]        # 0x1400325c8
   140015171:	dec    QWORD PTR [rbp+0x8]
   140015175:	mov    rbx,QWORD PTR [rsp+0x38]
   14001517a:	mov    rbp,QWORD PTR [rsp+0x40]
   14001517f:	mov    rsi,QWORD PTR [rsp+0x48]
   140015184:	add    rsp,0x20
   140015188:	pop    rdi
   140015189:	ret    
   14001518a:	int3   
   14001518b:	int3   
   14001518c:	int3   
   14001518d:	int3   
   14001518e:	int3   
   14001518f:	int3   
   140015190:	mov    QWORD PTR [rsp+0x18],rbx
   140015195:	mov    QWORD PTR [rsp+0x20],rsi
   14001519a:	push   rdi
   14001519b:	sub    rsp,0x40
   14001519f:	mov    rax,QWORD PTR [rcx+0x8]
   1400151a3:	xorps  xmm0,xmm0
   1400151a6:	mov    rbx,QWORD PTR [rcx+0x30]
   1400151aa:	mov    rsi,rcx
   1400151ad:	movss  xmm2,DWORD PTR [rip+0x282e3]        # 0x14003d498
   1400151b5:	cvtsi2ss xmm0,rax
   1400151ba:	test   rax,rax
   1400151bd:	jns    0x1400151c3
   1400151bf:	addss  xmm0,xmm2
   1400151c3:	xorps  xmm1,xmm1
   1400151c6:	cvtsi2ss xmm1,rbx
   1400151cb:	test   rbx,rbx
   1400151ce:	jns    0x1400151d4
   1400151d0:	addss  xmm1,xmm2
   1400151d4:	divss  xmm0,xmm1
   1400151d8:	comiss xmm0,DWORD PTR [rcx+0x38]
   1400151dc:	jbe    0x140015265
   1400151e2:	cmp    rbx,0x200
   1400151e9:	jae    0x1400151f1
   1400151eb:	shl    rbx,0x3
   1400151ef:	jmp    0x140015203
   1400151f1:	movabs rax,0xfffffffffffffff
   1400151fb:	cmp    rbx,rax
   1400151fe:	jae    0x140015203
   140015200:	add    rbx,rbx
   140015203:	mov    rax,QWORD PTR [rsi]
   140015206:	lea    r9,[rbx+rbx*1]
   14001520a:	add    rcx,0x10
   14001520e:	mov    QWORD PTR [rsp+0x50],rax
   140015213:	lea    rax,[rsp+0x50]
   140015218:	lea    rdx,[rsp+0x58]
   14001521d:	mov    QWORD PTR [rsp+0x20],rax
   140015222:	mov    r8,QWORD PTR [rcx]
   140015225:	mov    QWORD PTR [rcx+0x8],r8
   140015229:	call   0x14000dfb4
   14001522e:	lea    rax,[rbx-0x1]
   140015232:	mov    QWORD PTR [rsi+0x30],rbx
   140015236:	mov    QWORD PTR [rsi+0x28],rax
   14001523a:	mov    rax,QWORD PTR [rsi]
   14001523d:	cmp    QWORD PTR [rax],rax
   140015240:	je     0x140015265
   140015242:	mov    rdi,QWORD PTR [rax+0x8]
   140015246:	mov    rbx,QWORD PTR [rsi]
   140015249:	lea    rdx,[rsp+0x30]
   14001524e:	mov    rcx,rsi
   140015251:	mov    rbx,QWORD PTR [rbx]
   140015254:	mov    r9,rbx
   140015257:	lea    r8,[rbx+0x10]
   14001525b:	call   0x140014f0c
   140015260:	cmp    rbx,rdi
   140015263:	jne    0x140015246
   140015265:	mov    rbx,QWORD PTR [rsp+0x60]
   14001526a:	mov    rsi,QWORD PTR [rsp+0x68]
   14001526f:	add    rsp,0x40
   140015273:	pop    rdi
   140015274:	ret    
   140015275:	int3   
   140015276:	int3   
   140015277:	int3   
   140015278:	int3   
   140015279:	int3   
   14001527a:	int3   
   14001527b:	int3   
   14001527c:	mov    QWORD PTR [rsp+0x20],r9
   140015281:	mov    QWORD PTR [rsp+0x18],r8
   140015286:	sub    rsp,0x38
   14001528a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015293:	mov    QWORD PTR [rsp+0x58],r8
   140015298:	jmp    0x1400152b6
   14001529a:	test   r8,r8
   14001529d:	je     0x1400152a9
   14001529f:	mov    rax,QWORD PTR [rcx]
   1400152a2:	mov    QWORD PTR [r8],rax
   1400152a5:	and    QWORD PTR [rcx],0x0
   1400152a9:	add    r8,0x8
   1400152ad:	mov    QWORD PTR [rsp+0x50],r8
   1400152b2:	add    rcx,0x8
   1400152b6:	cmp    rcx,rdx
   1400152b9:	jne    0x14001529a
   1400152bb:	mov    rax,r8
   1400152be:	add    rsp,0x38
   1400152c2:	ret    
   1400152c3:	int3   
   1400152c4:	int3   
   1400152c5:	int3   
   1400152c6:	int3   
   1400152c7:	int3   
   1400152c8:	int3   
   1400152c9:	int3   
   1400152ca:	int3   
   1400152cb:	int3   
   1400152cc:	mov    QWORD PTR [rsp+0x8],rcx
   1400152d1:	push   rbx
   1400152d2:	sub    rsp,0x30
   1400152d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400152df:	mov    rbx,r9
   1400152e2:	call   0x14000ded0
   1400152e7:	mov    QWORD PTR [rsp+0x40],rax
   1400152ec:	lea    rdx,[rax+0x10]
   1400152f0:	test   rdx,rdx
   1400152f3:	je     0x140015309
   1400152f5:	movups xmm0,XMMWORD PTR [rbx]
   1400152f8:	movdqu XMMWORD PTR [rdx],xmm0
   1400152fc:	mov    rcx,QWORD PTR [rbx+0x10]
   140015300:	mov    QWORD PTR [rdx+0x10],rcx
   140015304:	and    QWORD PTR [rbx+0x10],0x0
   140015309:	add    rsp,0x30
   14001530d:	pop    rbx
   14001530e:	ret    
   14001530f:	int3   
   140015310:	int3   
   140015311:	int3   
   140015312:	int3   
   140015313:	int3   
   140015314:	int3   
   140015315:	int3   
   140015316:	int3   
   140015317:	int3   
   140015318:	sub    rsp,0x28
   14001531c:	mov    rcx,QWORD PTR [rcx]
   14001531f:	test   rcx,rcx
   140015322:	je     0x14001532a
   140015324:	call   QWORD PTR [rip+0x1d29e]        # 0x1400325c8
   14001532a:	add    rsp,0x28
   14001532e:	ret    
   14001532f:	int3   
   140015330:	int3   
   140015331:	int3   
   140015332:	int3   
   140015333:	int3   
   140015334:	int3   
   140015335:	int3   
   140015336:	int3   
   140015337:	int3   
   140015338:	mov    QWORD PTR [rsp+0x8],rbx
   14001533d:	mov    QWORD PTR [rsp+0x18],rsi
   140015342:	push   rdi
   140015343:	sub    rsp,0x20
   140015347:	mov    ebx,edx
   140015349:	mov    rdi,rcx
   14001534c:	cmp    DWORD PTR [rcx+0x68],edx
   14001534f:	je     0x1400153b7
   140015351:	add    rcx,0x40
   140015355:	call   QWORD PTR [rip+0x1cdad]        # 0x140032108
   14001535b:	mov    rax,QWORD PTR [rdi]
   14001535e:	mov    DWORD PTR [rdi+0x68],ebx
   140015361:	mov    rbx,QWORD PTR [rax]
   140015364:	cmp    rbx,rax
   140015367:	je     0x1400153ad
   140015369:	mov    rcx,QWORD PTR [rbx+0x20]
   14001536d:	test   rcx,rcx
   140015370:	je     0x140015375
   140015372:	lock inc DWORD PTR [rcx]
   140015375:	mov    eax,DWORD PTR [rdi+0x68]
   140015378:	imul   edx,eax,0x3c
   14001537b:	mov    DWORD PTR [rcx+0x4],0x1
   140015382:	imul   rax,rdx,0x989680
   140015389:	shr    rax,0x10
   14001538d:	mov    DWORD PTR [rcx+0x8],eax
   140015390:	mov    DWORD PTR [rcx+0xc],eax
   140015393:	or     eax,0xffffffff
   140015396:	lock xadd DWORD PTR [rcx],eax
   14001539a:	cmp    eax,0x1
   14001539d:	jne    0x1400153a5
   14001539f:	call   QWORD PTR [rip+0x1d223]        # 0x1400325c8
   1400153a5:	mov    rbx,QWORD PTR [rbx]
   1400153a8:	cmp    rbx,QWORD PTR [rdi]
   1400153ab:	jne    0x140015369
   1400153ad:	lea    rcx,[rdi+0x40]
   1400153b1:	call   QWORD PTR [rip+0x1cd41]        # 0x1400320f8
   1400153b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400153bc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400153c1:	add    rsp,0x20
   1400153c5:	pop    rdi
   1400153c6:	ret    
   1400153c7:	int3   
   1400153c8:	int3   
   1400153c9:	int3   
   1400153ca:	int3   
   1400153cb:	int3   
   1400153cc:	int3   
   1400153cd:	int3   
   1400153ce:	int3   
   1400153cf:	int3   
   1400153d0:	rex push rbp
   1400153d2:	push   rbx
   1400153d3:	push   rsi
   1400153d4:	push   rdi
   1400153d5:	push   r12
   1400153d7:	push   r14
   1400153d9:	push   r15
   1400153db:	mov    rbp,rsp
   1400153de:	sub    rsp,0x40
   1400153e2:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400153ea:	mov    r12,rdx
   1400153ed:	mov    r14,rcx
   1400153f0:	lea    r15,[rcx+0x40]
   1400153f4:	mov    QWORD PTR [rbp-0x8],r15
   1400153f8:	mov    rcx,r15
   1400153fb:	call   QWORD PTR [rip+0x1cd07]        # 0x140032108
   140015401:	nop
   140015402:	and    QWORD PTR [rbp+0x50],0x0
   140015407:	mov    r8,r12
   14001540a:	lea    rdx,[rbp-0x18]
   14001540e:	mov    rcx,r14
   140015411:	call   0x1400156d4
   140015416:	mov    rbx,QWORD PTR [rbp-0x18]
   14001541a:	cmp    rbx,QWORD PTR [r14]
   14001541d:	je     0x140015439
   14001541f:	mov    rbx,QWORD PTR [rbx+0x20]
   140015423:	mov    esi,0x1
   140015428:	test   rbx,rbx
   14001542b:	je     0x140015430
   14001542d:	lock add DWORD PTR [rbx],esi
   140015430:	mov    QWORD PTR [rbp+0x50],rbx
   140015434:	jmp    0x1400154ce
   140015439:	mov    ecx,0x18
   14001543e:	call   0x140023f10
   140015443:	mov    rdi,rax
   140015446:	mov    ebx,DWORD PTR [r14+0x68]
   14001544a:	and    DWORD PTR [rax],0x0
   14001544d:	and    DWORD PTR [rbp+0x58],0x0
   140015451:	and    DWORD PTR [rbp+0x5c],0x0
   140015455:	lea    rcx,[rbp+0x58]
   140015459:	call   QWORD PTR [rip+0x1cd09]        # 0x140032168
   14001545f:	mov    ecx,DWORD PTR [rbp+0x58]
   140015462:	mov    DWORD PTR [rbp+0x40],ecx
   140015465:	mov    ecx,DWORD PTR [rbp+0x5c]
   140015468:	mov    DWORD PTR [rbp+0x44],ecx
   14001546b:	mov    rcx,QWORD PTR [rbp+0x40]
   14001546f:	sar    rcx,0x10
   140015473:	mov    DWORD PTR [rdi+0x10],ecx
   140015476:	mov    DWORD PTR [rdi+0x14],0x0
   14001547d:	mov    esi,0x1
   140015482:	mov    DWORD PTR [rdi+0x4],esi
   140015485:	imul   ecx,ebx,0x3c
   140015488:	imul   rax,rcx,0x989680
   14001548f:	shr    rax,0x10
   140015493:	mov    DWORD PTR [rdi+0x8],eax
   140015496:	mov    DWORD PTR [rdi+0xc],eax
   140015499:	lock add DWORD PTR [rdi],esi
   14001549c:	mov    QWORD PTR [rbp+0x50],rdi
   1400154a0:	mov    rdx,r12
   1400154a3:	mov    rcx,r14
   1400154a6:	call   0x140015598
   1400154ab:	lock add DWORD PTR [rdi],esi
   1400154ae:	mov    rcx,QWORD PTR [rax]
   1400154b1:	mov    QWORD PTR [rax],rdi
   1400154b4:	test   rcx,rcx
   1400154b7:	je     0x1400154ca
   1400154b9:	or     eax,0xffffffff
   1400154bc:	lock xadd DWORD PTR [rcx],eax
   1400154c0:	cmp    eax,esi
   1400154c2:	jne    0x1400154ca
   1400154c4:	call   QWORD PTR [rip+0x1d0fe]        # 0x1400325c8
   1400154ca:	mov    rbx,QWORD PTR [rbp+0x50]
   1400154ce:	mov    edi,DWORD PTR [rbx+0x10]
   1400154d1:	and    DWORD PTR [rbp-0x20],0x0
   1400154d5:	and    DWORD PTR [rbp-0x1c],0x0
   1400154d9:	lea    rcx,[rbp-0x20]
   1400154dd:	call   QWORD PTR [rip+0x1cc85]        # 0x140032168
   1400154e3:	mov    eax,DWORD PTR [rbp-0x20]
   1400154e6:	mov    DWORD PTR [rbp+0x40],eax
   1400154e9:	mov    eax,DWORD PTR [rbp-0x1c]
   1400154ec:	mov    DWORD PTR [rbp+0x44],eax
   1400154ef:	mov    r8,QWORD PTR [rbp+0x40]
   1400154f3:	sar    r8,0x10
   1400154f7:	mov    edx,r8d
   1400154fa:	sub    edx,edi
   1400154fc:	mov    ecx,esi
   1400154fe:	lock xadd DWORD PTR [rbx+0x14],ecx
   140015503:	add    ecx,esi
   140015505:	mov    eax,DWORD PTR [rbx+0x4]
   140015508:	cmp    ecx,eax
   14001550a:	ja     0x140015513
   14001550c:	cmp    edx,DWORD PTR [rbx+0x8]
   14001550f:	ja     0x140015531
   140015511:	jmp    0x14001554f
   140015513:	inc    eax
   140015515:	cmp    ecx,eax
   140015517:	jne    0x140015525
   140015519:	cmp    edx,DWORD PTR [rbx+0x8]
   14001551c:	ja     0x140015531
   14001551e:	mov    esi,0x3
   140015523:	jmp    0x14001554f
   140015525:	cmp    edx,DWORD PTR [rbx+0xc]
   140015528:	ja     0x140015531
   14001552a:	mov    esi,0x2
   14001552f:	jmp    0x14001554f
   140015531:	mov    eax,edi
   140015533:	lock cmpxchg DWORD PTR [rbx+0x10],r8d
   140015539:	cmp    edi,eax
   14001553b:	jne    0x14001554f
   14001553d:	xor    esi,esi
   14001553f:	cmp    ecx,DWORD PTR [rbx+0x4]
   140015542:	setbe  sil
   140015546:	dec    ecx
   140015548:	neg    ecx
   14001554a:	lock xadd DWORD PTR [rbx+0x14],ecx
   14001554f:	cmp    esi,0x2
   140015552:	setge  bl
   140015555:	mov    rdx,QWORD PTR [rbp+0x50]
   140015559:	test   rdx,rdx
   14001555c:	je     0x140015578
   14001555e:	or     r8d,0xffffffff
   140015562:	lock xadd DWORD PTR [rdx],r8d
   140015567:	cmp    r8d,0x1
   14001556b:	jne    0x140015578
   14001556d:	mov    rcx,QWORD PTR [rbp+0x50]
   140015571:	call   QWORD PTR [rip+0x1d051]        # 0x1400325c8
   140015577:	nop
   140015578:	mov    rcx,r15
   14001557b:	call   QWORD PTR [rip+0x1cb77]        # 0x1400320f8
   140015581:	mov    al,bl
   140015583:	add    rsp,0x40
   140015587:	pop    r15
   140015589:	pop    r14
   14001558b:	pop    r12
   14001558d:	pop    rdi
   14001558e:	pop    rsi
   14001558f:	pop    rbx
   140015590:	pop    rbp
   140015591:	ret    
   140015592:	int3   
   140015593:	int3   
   140015594:	int3   
   140015595:	int3   
   140015596:	int3   
   140015597:	int3   
   140015598:	mov    r11,rsp
   14001559b:	push   rdi
   14001559c:	sub    rsp,0x70
   1400155a0:	mov    QWORD PTR [r11-0x48],0xfffffffffffffffe
   1400155a8:	mov    QWORD PTR [r11+0x18],rbx
   1400155ac:	mov    rax,QWORD PTR [rip+0x35a6d]        # 0x14004b020
   1400155b3:	xor    rax,rsp
   1400155b6:	mov    QWORD PTR [rsp+0x60],rax
   1400155bb:	mov    rdi,rdx
   1400155be:	mov    rbx,rcx
   1400155c1:	mov    r8,rdx
   1400155c4:	lea    rdx,[r11-0x58]
   1400155c8:	call   0x1400156d4
   1400155cd:	mov    rax,QWORD PTR [rbx]
   1400155d0:	cmp    QWORD PTR [rsp+0x20],rax
   1400155d5:	jne    0x14001567e
   1400155db:	movups xmm0,XMMWORD PTR [rdi]
   1400155de:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   1400155e4:	and    QWORD PTR [rsp+0x58],0x0
   1400155ea:	and    QWORD PTR [rsp+0x28],0x0
   1400155f0:	mov    rdi,QWORD PTR [rax]
   1400155f3:	lea    r9,[rsp+0x48]
   1400155f8:	mov    r8,QWORD PTR [rdi+0x8]
   1400155fc:	mov    rdx,rdi
   1400155ff:	call   0x1400152cc
   140015604:	mov    rdx,rax
   140015607:	mov    rax,QWORD PTR [rbx+0x8]
   14001560b:	movabs rcx,0x666666666666665
   140015615:	sub    rcx,rax
   140015618:	cmp    rcx,0x1
   14001561c:	jae    0x14001562b
   14001561e:	lea    rcx,[rip+0x21b5b]        # 0x140037180
   140015625:	call   0x14002d7f8
   14001562a:	int3   
   14001562b:	inc    rax
   14001562e:	mov    QWORD PTR [rbx+0x8],rax
   140015632:	mov    QWORD PTR [rdi+0x8],rdx
   140015636:	mov    rax,QWORD PTR [rdx+0x8]
   14001563a:	mov    QWORD PTR [rax],rdx
   14001563d:	mov    r9,QWORD PTR [rbx]
   140015640:	mov    r9,QWORD PTR [r9]
   140015643:	lea    r8,[r9+0x10]
   140015647:	lea    rdx,[rsp+0x38]
   14001564c:	mov    rcx,rbx
   14001564f:	call   0x1400157f4
   140015654:	mov    rcx,QWORD PTR [rax]
   140015657:	mov    QWORD PTR [rsp+0x20],rcx
   14001565c:	mov    rcx,QWORD PTR [rsp+0x58]
   140015661:	test   rcx,rcx
   140015664:	je     0x14001567e
   140015666:	or     eax,0xffffffff
   140015669:	lock xadd DWORD PTR [rcx],eax
   14001566d:	cmp    eax,0x1
   140015670:	jne    0x14001567e
   140015672:	mov    rcx,QWORD PTR [rsp+0x58]
   140015677:	call   QWORD PTR [rip+0x1cf4b]        # 0x1400325c8
   14001567d:	nop
   14001567e:	mov    rax,QWORD PTR [rsp+0x20]
   140015683:	add    rax,0x20
   140015687:	mov    rcx,QWORD PTR [rsp+0x60]
   14001568c:	xor    rcx,rsp
   14001568f:	call   0x14002dd00
   140015694:	mov    rbx,QWORD PTR [rsp+0x90]
   14001569c:	add    rsp,0x70
   1400156a0:	pop    rdi
   1400156a1:	ret    
   1400156a2:	int3   
   1400156a3:	int3   
   1400156a4:	int3   
   1400156a5:	int3   
   1400156a6:	int3   
   1400156a7:	int3   
   1400156a8:	sub    rsp,0x28
   1400156ac:	mov    rcx,QWORD PTR [rcx+0x10]
   1400156b0:	test   rcx,rcx
   1400156b3:	je     0x1400156c7
   1400156b5:	or     eax,0xffffffff
   1400156b8:	lock xadd DWORD PTR [rcx],eax
   1400156bc:	cmp    eax,0x1
   1400156bf:	jne    0x1400156c7
   1400156c1:	call   QWORD PTR [rip+0x1cf01]        # 0x1400325c8
   1400156c7:	add    rsp,0x28
   1400156cb:	ret    
   1400156cc:	int3   
   1400156cd:	int3   
   1400156ce:	int3   
   1400156cf:	int3   
   1400156d0:	int3   
   1400156d1:	int3   
   1400156d2:	int3   
   1400156d3:	int3   
   1400156d4:	mov    rax,rsp
   1400156d7:	mov    QWORD PTR [rax+0x8],rbx
   1400156db:	mov    QWORD PTR [rax+0x10],rbp
   1400156df:	mov    QWORD PTR [rax+0x18],rsi
   1400156e3:	mov    QWORD PTR [rax+0x20],rdi
   1400156e7:	push   r12
   1400156e9:	push   r14
   1400156eb:	push   r15
   1400156ed:	mov    r15d,DWORD PTR [r8+0x4]
   1400156f1:	mov    r10,rcx
   1400156f4:	mov    r12d,DWORD PTR [r8]
   1400156f7:	mov    r11,rdx
   1400156fa:	mov    r14d,DWORD PTR [r8+0x8]
   1400156fe:	mov    ebp,DWORD PTR [r8+0xc]
   140015702:	mov    r8,QWORD PTR [rcx+0x28]
   140015706:	lea    eax,[r12+r15*1]
   14001570a:	add    eax,r14d
   14001570d:	add    eax,ebp
   14001570f:	imul   edi,eax,0x62531966
   140015715:	mov    ecx,edi
   140015717:	rol    ecx,0x15
   14001571a:	add    ecx,edi
   14001571c:	and    rcx,r8
   14001571f:	cmp    QWORD PTR [r10+0x30],rcx
   140015723:	ja     0x140015732
   140015725:	shr    r8,1
   140015728:	or     rax,0xffffffffffffffff
   14001572c:	sub    rax,r8
   14001572f:	add    rcx,rax
   140015732:	mov    rbx,QWORD PTR [r10+0x10]
   140015736:	lea    rsi,[rcx+rcx*1]
   14001573a:	mov    r10,QWORD PTR [r10]
   14001573d:	mov    rax,rcx
   140015740:	add    rax,rax
   140015743:	mov    r9,QWORD PTR [rbx+rax*8]
   140015747:	cmp    QWORD PTR [rbx+rsi*8],r10
   14001574b:	jne    0x140015752
   14001574d:	mov    rax,r10
   140015750:	jmp    0x14001575a
   140015752:	mov    rax,QWORD PTR [rbx+rsi*8+0x8]
   140015757:	mov    rax,QWORD PTR [rax]
   14001575a:	cmp    r9,rax
   14001575d:	je     0x1400157cd
   14001575f:	mov    eax,DWORD PTR [r9+0x1c]
   140015763:	add    eax,DWORD PTR [r9+0x18]
   140015767:	add    eax,DWORD PTR [r9+0x14]
   14001576b:	add    eax,DWORD PTR [r9+0x10]
   14001576f:	imul   r8d,eax,0x62531966
   140015776:	lea    eax,[r12+r15*1]
   14001577a:	add    eax,r14d
   14001577d:	add    eax,ebp
   14001577f:	imul   ecx,eax,0x62531966
   140015785:	mov    eax,r8d
   140015788:	rol    eax,0x15
   14001578b:	add    eax,r8d
   14001578e:	mov    edx,ecx
   140015790:	rol    edx,0x15
   140015793:	add    edx,ecx
   140015795:	cmp    eax,edx
   140015797:	jae    0x14001579e
   140015799:	mov    r9,QWORD PTR [r9]
   14001579c:	jmp    0x140015747
   14001579e:	mov    eax,DWORD PTR [r9+0x1c]
   1400157a2:	add    eax,DWORD PTR [r9+0x18]
   1400157a6:	add    eax,DWORD PTR [r9+0x14]
   1400157aa:	add    eax,DWORD PTR [r9+0x10]
   1400157ae:	imul   eax,eax,0x62531966
   1400157b4:	mov    ecx,eax
   1400157b6:	rol    ecx,0x15
   1400157b9:	add    ecx,eax
   1400157bb:	mov    eax,edi
   1400157bd:	rol    eax,0x15
   1400157c0:	add    eax,edi
   1400157c2:	cmp    eax,ecx
   1400157c4:	cmovb  r9,r10
   1400157c8:	mov    QWORD PTR [r11],r9
   1400157cb:	jmp    0x1400157d0
   1400157cd:	mov    QWORD PTR [r11],r10
   1400157d0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400157d5:	mov    rax,r11
   1400157d8:	mov    rbp,QWORD PTR [rsp+0x28]
   1400157dd:	mov    rsi,QWORD PTR [rsp+0x30]
   1400157e2:	mov    rdi,QWORD PTR [rsp+0x38]
   1400157e7:	pop    r15
   1400157e9:	pop    r14
   1400157eb:	pop    r12
   1400157ed:	ret    
   1400157ee:	int3   
   1400157ef:	int3   
   1400157f0:	int3   
   1400157f1:	int3   
   1400157f2:	int3   
   1400157f3:	int3   
   1400157f4:	mov    rax,rsp
   1400157f7:	mov    QWORD PTR [rax+0x20],r9
   1400157fb:	mov    QWORD PTR [rax+0x8],rcx
   1400157ff:	push   rsi
   140015800:	push   rdi
   140015801:	push   r14
   140015803:	sub    rsp,0x30
   140015807:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001580f:	mov    QWORD PTR [rax+0x10],rbx
   140015813:	mov    rbx,r9
   140015816:	mov    r14,rdx
   140015819:	mov    rsi,rcx
   14001581c:	mov    eax,DWORD PTR [r8+0xc]
   140015820:	add    eax,DWORD PTR [r8+0x8]
   140015824:	add    eax,DWORD PTR [r8+0x4]
   140015828:	add    eax,DWORD PTR [r8]
   14001582b:	imul   r10d,eax,0x62531966
   140015832:	mov    r9d,r10d
   140015835:	rol    r9d,0x15
   140015839:	add    r9d,r10d
   14001583c:	mov    rcx,QWORD PTR [rcx+0x28]
   140015840:	and    r9,rcx
   140015843:	cmp    QWORD PTR [rsi+0x30],r9
   140015847:	ja     0x140015856
   140015849:	shr    rcx,1
   14001584c:	or     rax,0xffffffffffffffff
   140015850:	sub    rax,rcx
   140015853:	add    r9,rax
   140015856:	mov    r8,r9
   140015859:	add    r8,r8
   14001585c:	mov    r11,QWORD PTR [rsi+0x10]
   140015860:	mov    rax,QWORD PTR [r11+r8*8]
   140015864:	cmp    rax,QWORD PTR [rsi]
   140015867:	jne    0x14001586e
   140015869:	mov    rdi,QWORD PTR [rsi]
   14001586c:	jmp    0x140015876
   14001586e:	mov    rdi,QWORD PTR [r11+r8*8+0x8]
   140015873:	mov    rdi,QWORD PTR [rdi]
   140015876:	cmp    rdi,rax
   140015879:	je     0x140015932
   14001587f:	add    r9,r9
   140015882:	mov    rdi,QWORD PTR [rdi+0x8]
   140015886:	mov    edx,r10d
   140015889:	rol    edx,0x15
   14001588c:	add    edx,r10d
   14001588f:	mov    eax,DWORD PTR [rdi+0x1c]
   140015892:	add    eax,DWORD PTR [rdi+0x18]
   140015895:	add    eax,DWORD PTR [rdi+0x14]
   140015898:	add    eax,DWORD PTR [rdi+0x10]
   14001589b:	imul   ecx,eax,0x62531966
   1400158a1:	mov    eax,ecx
   1400158a3:	rol    eax,0x15
   1400158a6:	add    ecx,eax
   1400158a8:	cmp    edx,ecx
   1400158aa:	jae    0x1400158b4
   1400158ac:	cmp    rdi,QWORD PTR [r11+r9*8]
   1400158b0:	jne    0x140015882
   1400158b2:	jmp    0x140015932
   1400158b4:	mov    eax,DWORD PTR [rdi+0x1c]
   1400158b7:	add    eax,DWORD PTR [rdi+0x18]
   1400158ba:	add    eax,DWORD PTR [rdi+0x14]
   1400158bd:	add    eax,DWORD PTR [rdi+0x10]
   1400158c0:	imul   ecx,eax,0x62531966
   1400158c6:	mov    eax,ecx
   1400158c8:	rol    eax,0x15
   1400158cb:	add    ecx,eax
   1400158cd:	mov    eax,r10d
   1400158d0:	rol    eax,0x15
   1400158d3:	add    r10d,eax
   1400158d6:	cmp    ecx,r10d
   1400158d9:	jae    0x1400158e0
   1400158db:	mov    rdi,QWORD PTR [rdi]
   1400158de:	jmp    0x140015932
   1400158e0:	cmp    rbx,QWORD PTR [rsi]
   1400158e3:	je     0x140015922
   1400158e5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400158e9:	mov    rax,QWORD PTR [rbx]
   1400158ec:	mov    QWORD PTR [rcx],rax
   1400158ef:	mov    rcx,QWORD PTR [rbx]
   1400158f2:	mov    rax,QWORD PTR [rbx+0x8]
   1400158f6:	mov    QWORD PTR [rcx+0x8],rax
   1400158fa:	mov    rcx,QWORD PTR [rbx+0x20]
   1400158fe:	test   rcx,rcx
   140015901:	je     0x140015915
   140015903:	or     eax,0xffffffff
   140015906:	lock xadd DWORD PTR [rcx],eax
   14001590a:	cmp    eax,0x1
   14001590d:	jne    0x140015915
   14001590f:	call   QWORD PTR [rip+0x1ccb3]        # 0x1400325c8
   140015915:	mov    rcx,rbx
   140015918:	call   QWORD PTR [rip+0x1ccaa]        # 0x1400325c8
   14001591e:	dec    QWORD PTR [rsi+0x8]
   140015922:	mov    QWORD PTR [r14],rdi
   140015925:	mov    BYTE PTR [r14+0x8],0x0
   14001592a:	mov    rax,r14
   14001592d:	jmp    0x1400159c5
   140015932:	mov    rax,QWORD PTR [rbx]
   140015935:	cmp    rdi,rax
   140015938:	je     0x140015967
   14001593a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001593e:	mov    QWORD PTR [rcx],rax
   140015941:	mov    rcx,QWORD PTR [rax+0x8]
   140015945:	mov    QWORD PTR [rcx],rdi
   140015948:	mov    rcx,QWORD PTR [rdi+0x8]
   14001594c:	mov    QWORD PTR [rcx],rbx
   14001594f:	mov    rdx,QWORD PTR [rdi+0x8]
   140015953:	mov    rcx,QWORD PTR [rax+0x8]
   140015957:	mov    QWORD PTR [rdi+0x8],rcx
   14001595b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001595f:	mov    QWORD PTR [rax+0x8],rcx
   140015963:	mov    QWORD PTR [rbx+0x8],rdx
   140015967:	mov    rdx,QWORD PTR [rsi+0x10]
   14001596b:	mov    rax,QWORD PTR [rdx+r8*8]
   14001596f:	cmp    rax,QWORD PTR [rsi]
   140015972:	jne    0x140015983
   140015974:	mov    QWORD PTR [rdx+r8*8],rbx
   140015978:	mov    rax,QWORD PTR [rsi+0x10]
   14001597c:	mov    QWORD PTR [rax+r8*8+0x8],rbx
   140015981:	jmp    0x1400159b2
   140015983:	cmp    rax,rdi
   140015986:	jne    0x14001598e
   140015988:	mov    QWORD PTR [rdx+r8*8],rbx
   14001598c:	jmp    0x1400159b2
   14001598e:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   140015993:	mov    rcx,QWORD PTR [rax]
   140015996:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   14001599b:	cmp    rcx,rbx
   14001599e:	je     0x1400159b2
   1400159a0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400159a4:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   1400159a9:	mov    rcx,QWORD PTR [rax+0x8]
   1400159ad:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   1400159b2:	mov    rcx,rsi
   1400159b5:	call   0x140015a40
   1400159ba:	mov    QWORD PTR [r14],rbx
   1400159bd:	mov    BYTE PTR [r14+0x8],0x1
   1400159c2:	mov    rax,r14
   1400159c5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400159ca:	add    rsp,0x30
   1400159ce:	pop    r14
   1400159d0:	pop    rdi
   1400159d1:	pop    rsi
   1400159d2:	ret    
   1400159d3:	int3   
   1400159d4:	int3   
   1400159d5:	int3   
   1400159d6:	int3   
   1400159d7:	int3   
   1400159d8:	int3   
   1400159d9:	int3   
   1400159da:	int3   
   1400159db:	int3   
   1400159dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400159e1:	push   rdi
   1400159e2:	sub    rsp,0x20
   1400159e6:	mov    rbx,rdx
   1400159e9:	mov    rdi,rcx
   1400159ec:	cmp    rdx,QWORD PTR [rcx]
   1400159ef:	je     0x140015a2e
   1400159f1:	mov    rdx,QWORD PTR [rdx+0x8]
   1400159f5:	mov    rax,QWORD PTR [rbx]
   1400159f8:	mov    QWORD PTR [rdx],rax
   1400159fb:	mov    rdx,QWORD PTR [rbx]
   1400159fe:	mov    rax,QWORD PTR [rbx+0x8]
   140015a02:	mov    QWORD PTR [rdx+0x8],rax
   140015a06:	mov    rcx,QWORD PTR [rbx+0x20]
   140015a0a:	test   rcx,rcx
   140015a0d:	je     0x140015a21
   140015a0f:	or     eax,0xffffffff
   140015a12:	lock xadd DWORD PTR [rcx],eax
   140015a16:	cmp    eax,0x1
   140015a19:	jne    0x140015a21
   140015a1b:	call   QWORD PTR [rip+0x1cba7]        # 0x1400325c8
   140015a21:	mov    rcx,rbx
   140015a24:	call   QWORD PTR [rip+0x1cb9e]        # 0x1400325c8
   140015a2a:	dec    QWORD PTR [rdi+0x8]
   140015a2e:	mov    rbx,QWORD PTR [rsp+0x38]
   140015a33:	add    rsp,0x20
   140015a37:	pop    rdi
   140015a38:	ret    
   140015a39:	int3   
   140015a3a:	int3   
   140015a3b:	int3   
   140015a3c:	int3   
   140015a3d:	int3   
   140015a3e:	int3   
   140015a3f:	int3   
   140015a40:	mov    QWORD PTR [rsp+0x18],rbx
   140015a45:	mov    QWORD PTR [rsp+0x20],rsi
   140015a4a:	push   rdi
   140015a4b:	sub    rsp,0x40
   140015a4f:	mov    rax,QWORD PTR [rcx+0x8]
   140015a53:	xorps  xmm0,xmm0
   140015a56:	mov    rbx,QWORD PTR [rcx+0x30]
   140015a5a:	mov    rsi,rcx
   140015a5d:	movss  xmm2,DWORD PTR [rip+0x27a33]        # 0x14003d498
   140015a65:	cvtsi2ss xmm0,rax
   140015a6a:	test   rax,rax
   140015a6d:	jns    0x140015a73
   140015a6f:	addss  xmm0,xmm2
   140015a73:	xorps  xmm1,xmm1
   140015a76:	cvtsi2ss xmm1,rbx
   140015a7b:	test   rbx,rbx
   140015a7e:	jns    0x140015a84
   140015a80:	addss  xmm1,xmm2
   140015a84:	divss  xmm0,xmm1
   140015a88:	comiss xmm0,DWORD PTR [rcx+0x38]
   140015a8c:	jbe    0x140015b15
   140015a92:	cmp    rbx,0x200
   140015a99:	jae    0x140015aa1
   140015a9b:	shl    rbx,0x3
   140015a9f:	jmp    0x140015ab3
   140015aa1:	movabs rax,0xfffffffffffffff
   140015aab:	cmp    rbx,rax
   140015aae:	jae    0x140015ab3
   140015ab0:	add    rbx,rbx
   140015ab3:	mov    rax,QWORD PTR [rsi]
   140015ab6:	lea    r9,[rbx+rbx*1]
   140015aba:	add    rcx,0x10
   140015abe:	mov    QWORD PTR [rsp+0x50],rax
   140015ac3:	lea    rax,[rsp+0x50]
   140015ac8:	lea    rdx,[rsp+0x58]
   140015acd:	mov    QWORD PTR [rsp+0x20],rax
   140015ad2:	mov    r8,QWORD PTR [rcx]
   140015ad5:	mov    QWORD PTR [rcx+0x8],r8
   140015ad9:	call   0x14000dfb4
   140015ade:	lea    rax,[rbx-0x1]
   140015ae2:	mov    QWORD PTR [rsi+0x30],rbx
   140015ae6:	mov    QWORD PTR [rsi+0x28],rax
   140015aea:	mov    rax,QWORD PTR [rsi]
   140015aed:	cmp    QWORD PTR [rax],rax
   140015af0:	je     0x140015b15
   140015af2:	mov    rdi,QWORD PTR [rax+0x8]
   140015af6:	mov    rbx,QWORD PTR [rsi]
   140015af9:	lea    rdx,[rsp+0x30]
   140015afe:	mov    rcx,rsi
   140015b01:	mov    rbx,QWORD PTR [rbx]
   140015b04:	mov    r9,rbx
   140015b07:	lea    r8,[rbx+0x10]
   140015b0b:	call   0x1400157f4
   140015b10:	cmp    rbx,rdi
   140015b13:	jne    0x140015af6
   140015b15:	mov    rbx,QWORD PTR [rsp+0x60]
   140015b1a:	mov    rsi,QWORD PTR [rsp+0x68]
   140015b1f:	add    rsp,0x40
   140015b23:	pop    rdi
   140015b24:	ret    
   140015b25:	int3   
   140015b26:	int3   
   140015b27:	int3   
   140015b28:	int3   
   140015b29:	int3   
   140015b2a:	int3   
   140015b2b:	int3   
   140015b2c:	mov    r11,rsp
   140015b2f:	mov    DWORD PTR [r11+0x20],r9d
   140015b33:	sub    rsp,0x58
   140015b37:	and    QWORD PTR [r11-0x18],0x0
   140015b3c:	lea    rax,[r11+0x28]
   140015b40:	mov    r9d,0x4
   140015b46:	mov    QWORD PTR [r11-0x20],r9
   140015b4a:	mov    QWORD PTR [r11-0x28],rax
   140015b4e:	lea    rax,[r11+0x20]
   140015b52:	mov    QWORD PTR [r11-0x30],r9
   140015b56:	movzx  r9d,dx
   140015b5a:	mov    edx,0x2b
   140015b5f:	mov    QWORD PTR [r11-0x38],rax
   140015b63:	call   QWORD PTR [rip+0x1c4b7]        # 0x140032020
   140015b69:	add    rsp,0x58
   140015b6d:	ret    
   140015b6e:	int3   
   140015b6f:	int3   
   140015b70:	int3   
   140015b71:	int3   
   140015b72:	int3   
   140015b73:	int3   
   140015b74:	mov    rax,rsp
   140015b77:	mov    QWORD PTR [rax+0x8],rcx
   140015b7b:	push   rsi
   140015b7c:	push   rdi
   140015b7d:	push   r12
   140015b7f:	push   r14
   140015b81:	push   r15
   140015b83:	sub    rsp,0x30
   140015b87:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140015b8f:	mov    QWORD PTR [rax+0x10],rbx
   140015b93:	mov    QWORD PTR [rax+0x18],rbp
   140015b97:	mov    rbp,r9
   140015b9a:	mov    r15d,r8d
   140015b9d:	mov    r12d,edx
   140015ba0:	mov    rdi,rcx
   140015ba3:	lea    rbx,[rcx+0x8]
   140015ba7:	and    QWORD PTR [rbx],0x0
   140015bab:	and    QWORD PTR [rbx+0x8],0x0
   140015bb0:	and    QWORD PTR [rbx+0x10],0x0
   140015bb5:	mov    esi,DWORD PTR [rsp+0x80]
   140015bbc:	lea    rdx,[rsi+0x20]
   140015bc0:	mov    rcx,rbx
   140015bc3:	call   0x140016770
   140015bc8:	mov    rcx,QWORD PTR [rbx]
   140015bcb:	cmp    rcx,QWORD PTR [rbx+0x8]
   140015bcf:	cmove  rcx,rbx
   140015bd3:	mov    QWORD PTR [rdi],rcx
   140015bd6:	test   rbp,rbp
   140015bd9:	je     0x140015bfd
   140015bdb:	lea    rax,[rcx+0x20]
   140015bdf:	mov    QWORD PTR [rcx+0x10],rax
   140015be3:	mov    rax,QWORD PTR [rdi]
   140015be6:	mov    DWORD PTR [rax+0x18],esi
   140015be9:	mov    rax,QWORD PTR [rdi]
   140015bec:	mov    r8d,esi
   140015bef:	mov    rdx,rbp
   140015bf2:	mov    rcx,QWORD PTR [rax+0x10]
   140015bf6:	call   0x14002e2f2
   140015bfb:	jmp    0x140015c01
   140015bfd:	and    DWORD PTR [rcx+0x18],0x0
   140015c01:	mov    rax,QWORD PTR [rdi]
   140015c04:	mov    QWORD PTR [rax],r12
   140015c07:	mov    rax,QWORD PTR [rdi]
   140015c0a:	mov    DWORD PTR [rax+0x8],r15d
   140015c0e:	mov    rax,QWORD PTR [rdi]
   140015c11:	and    DWORD PTR [rax+0xc],0x0
   140015c15:	lea    ecx,[rsi+0x20]
   140015c18:	mov    rax,QWORD PTR [rdi]
   140015c1b:	mov    DWORD PTR [rax+0x1c],ecx
   140015c1e:	mov    rax,rdi
   140015c21:	mov    rbx,QWORD PTR [rsp+0x68]
   140015c26:	mov    rbp,QWORD PTR [rsp+0x70]
   140015c2b:	add    rsp,0x30
   140015c2f:	pop    r15
   140015c31:	pop    r14
   140015c33:	pop    r12
   140015c35:	pop    rdi
   140015c36:	pop    rsi
   140015c37:	ret    
   140015c38:	int3   
   140015c39:	int3   
   140015c3a:	int3   
   140015c3b:	int3   
   140015c3c:	int3   
   140015c3d:	int3   
   140015c3e:	int3   
   140015c3f:	int3   
   140015c40:	jmp    0x14001686c
   140015c45:	int3   
   140015c46:	int3   
   140015c47:	int3   
   140015c48:	int3   
   140015c49:	int3   
   140015c4a:	int3   
   140015c4b:	int3   
   140015c4c:	mov    QWORD PTR [rsp+0x20],rbx
   140015c51:	push   rbp
   140015c52:	push   rsi
   140015c53:	push   rdi
   140015c54:	push   r13
   140015c56:	push   r14
   140015c58:	sub    rsp,0x70
   140015c5c:	mov    rax,QWORD PTR [rip+0x353bd]        # 0x14004b020
   140015c63:	xor    rax,rsp
   140015c66:	mov    QWORD PTR [rsp+0x60],rax
   140015c6b:	mov    ebp,r8d
   140015c6e:	mov    edi,edx
   140015c70:	mov    rsi,rcx
   140015c73:	mov    rcx,QWORD PTR [rip+0x353fe]        # 0x14004b078
   140015c7a:	lea    r14,[rip+0x353f7]        # 0x14004b078
   140015c81:	lea    r13,[rip+0x21d10]        # 0x140037998
   140015c88:	cmp    rcx,r14
   140015c8b:	je     0x140015cac
   140015c8d:	test   BYTE PTR [rcx+0x1c],0x4
   140015c91:	je     0x140015cac
   140015c93:	mov    rcx,QWORD PTR [rcx+0x10]
   140015c97:	mov    edx,0xa
   140015c9c:	mov    DWORD PTR [rsp+0x20],r8d
   140015ca1:	mov    r9d,edi
   140015ca4:	mov    r8,r13
   140015ca7:	call   0x140015b2c
   140015cac:	cmp    BYTE PTR [rsi+0x60],0x0
   140015cb0:	je     0x140015e2d
   140015cb6:	and    DWORD PTR [rsp+0x30],0x0
   140015cbb:	call   QWORD PTR [rip+0x1c78f]        # 0x140032450
   140015cc1:	mov    rbx,QWORD PTR [rax+0xa0]
   140015cc8:	mov    rcx,rbx
   140015ccb:	call   QWORD PTR [rip+0x1c9d7]        # 0x1400326a8
   140015cd1:	lea    r8,[rsp+0x30]
   140015cd6:	xor    edx,edx
   140015cd8:	lea    rcx,[rip+0x21c11]        # 0x1400378f0
   140015cdf:	call   rbx
   140015ce1:	mov    ebx,DWORD PTR [rsp+0x30]
   140015ce5:	test   ebx,ebx
   140015ce7:	je     0x140015d11
   140015ce9:	mov    rcx,QWORD PTR [rip+0x35388]        # 0x14004b078
   140015cf0:	cmp    rcx,r14
   140015cf3:	je     0x140015d0f
   140015cf5:	test   BYTE PTR [rcx+0x1c],0x4
   140015cf9:	je     0x140015d0f
   140015cfb:	mov    rcx,QWORD PTR [rcx+0x10]
   140015cff:	mov    edx,0xb
   140015d04:	mov    r9d,ebx
   140015d07:	mov    r8,r13
   140015d0a:	call   0x140001f70
   140015d0f:	mov    edi,ebx
   140015d11:	and    DWORD PTR [rsp+0x30],0x0
   140015d16:	call   QWORD PTR [rip+0x1c734]        # 0x140032450
   140015d1c:	mov    rbx,QWORD PTR [rax+0xa0]
   140015d23:	mov    rcx,rbx
   140015d26:	call   QWORD PTR [rip+0x1c97c]        # 0x1400326a8
   140015d2c:	lea    r8,[rsp+0x30]
   140015d31:	xor    edx,edx
   140015d33:	lea    rcx,[rip+0x21bf6]        # 0x140037930
   140015d3a:	call   rbx
   140015d3c:	mov    ebx,DWORD PTR [rsp+0x30]
   140015d40:	test   ebx,ebx
   140015d42:	je     0x140015d6c
   140015d44:	mov    rcx,QWORD PTR [rip+0x3532d]        # 0x14004b078
   140015d4b:	cmp    rcx,r14
   140015d4e:	je     0x140015d6a
   140015d50:	test   BYTE PTR [rcx+0x1c],0x4
   140015d54:	je     0x140015d6a
   140015d56:	mov    rcx,QWORD PTR [rcx+0x10]
   140015d5a:	mov    edx,0xc
   140015d5f:	mov    r9d,ebx
   140015d62:	mov    r8,r13
   140015d65:	call   0x140001f70
   140015d6a:	mov    ebp,ebx
   140015d6c:	lea    rcx,[rsi+0x28]
   140015d70:	call   QWORD PTR [rip+0x1c392]        # 0x140032108
   140015d76:	cmp    edi,0xfa
   140015d7c:	ja     0x140015da9
   140015d7e:	mov    rcx,QWORD PTR [rip+0x352f3]        # 0x14004b078
   140015d85:	cmp    rcx,r14
   140015d88:	je     0x140015da4
   140015d8a:	test   BYTE PTR [rcx+0x1c],0x4
   140015d8e:	je     0x140015da4
   140015d90:	mov    rcx,QWORD PTR [rcx+0x10]
   140015d94:	mov    edx,0xd
   140015d99:	mov    r9d,edi
   140015d9c:	mov    r8,r13
   140015d9f:	call   0x140001f70
   140015da4:	mov    DWORD PTR [rsi+0x64],edi
   140015da7:	jmp    0x140015dd9
   140015da9:	mov    rcx,QWORD PTR [rip+0x352c8]        # 0x14004b078
   140015db0:	cmp    rcx,r14
   140015db3:	je     0x140015dd2
   140015db5:	test   BYTE PTR [rcx+0x1c],0x2
   140015db9:	je     0x140015dd2
   140015dbb:	mov    rcx,QWORD PTR [rcx+0x10]
   140015dbf:	mov    edx,0xe
   140015dc4:	mov    r9d,0xfa
   140015dca:	mov    r8,r13
   140015dcd:	call   0x140001f70
   140015dd2:	mov    DWORD PTR [rsi+0x64],0xfa
   140015dd9:	mov    rcx,QWORD PTR [rip+0x35298]        # 0x14004b078
   140015de0:	cmp    rcx,r14
   140015de3:	je     0x140015dff
   140015de5:	test   BYTE PTR [rcx+0x1c],0x4
   140015de9:	je     0x140015dff
   140015deb:	mov    rcx,QWORD PTR [rcx+0x10]
   140015def:	mov    edx,0xf
   140015df4:	mov    r9d,ebp
   140015df7:	mov    r8,r13
   140015dfa:	call   0x140001f70
   140015dff:	lea    rcx,[rsi+0x28]
   140015e03:	mov    DWORD PTR [rsi+0x68],ebp
   140015e06:	call   QWORD PTR [rip+0x1c2ec]        # 0x1400320f8
   140015e0c:	mov    rcx,QWORD PTR [rsp+0x60]
   140015e11:	xor    rcx,rsp
   140015e14:	call   0x14002dd00
   140015e19:	mov    rbx,QWORD PTR [rsp+0xb8]
   140015e21:	add    rsp,0x70
   140015e25:	pop    r14
   140015e27:	pop    r13
   140015e29:	pop    rdi
   140015e2a:	pop    rsi
   140015e2b:	pop    rbp
   140015e2c:	ret    
   140015e2d:	mov    edx,0x80070057
   140015e32:	lea    rcx,[rsp+0x38]
   140015e37:	call   0x140002064
   140015e3c:	lea    rdx,[rip+0x33345]        # 0x140049188
   140015e43:	lea    rcx,[rsp+0x38]
   140015e48:	call   0x14002e2da
   140015e4d:	int3   
   140015e4e:	int3   
   140015e4f:	int3   
   140015e50:	int3   
   140015e51:	int3   
   140015e52:	int3   
   140015e53:	int3   
   140015e54:	mov    QWORD PTR [rsp+0x18],rbx
   140015e59:	push   rbp
   140015e5a:	push   rsi
   140015e5b:	push   rdi
   140015e5c:	sub    rsp,0x20
   140015e60:	cmp    BYTE PTR [rcx+0x60],0x0
   140015e64:	mov    rbx,rcx
   140015e67:	je     0x140015ed9
   140015e69:	and    QWORD PTR [rsp+0x40],0x0
   140015e6f:	lea    rdi,[rcx+0x28]
   140015e73:	and    QWORD PTR [rsp+0x48],0x0
   140015e79:	mov    rcx,rdi
   140015e7c:	call   QWORD PTR [rip+0x1c286]        # 0x140032108
   140015e82:	cmp    BYTE PTR [rbx+0x61],0x0
   140015e86:	mov    rcx,rdi
   140015e89:	jne    0x140015ed3
   140015e8b:	mov    BYTE PTR [rbx+0x61],0x1
   140015e8f:	mov    rsi,QWORD PTR [rbx+0x50]
   140015e93:	and    QWORD PTR [rbx+0x50],0x0
   140015e98:	mov    rbp,QWORD PTR [rbx+0x58]
   140015e9c:	and    QWORD PTR [rbx+0x58],0x0
   140015ea1:	call   QWORD PTR [rip+0x1c251]        # 0x1400320f8
   140015ea7:	or     rbx,0xffffffffffffffff
   140015eab:	test   rbp,rbp
   140015eae:	je     0x140015ebe
   140015eb0:	mov    r8,rbx
   140015eb3:	mov    rdx,rbp
   140015eb6:	xor    ecx,ecx
   140015eb8:	call   QWORD PTR [rip+0x1c282]        # 0x140032140
   140015ebe:	test   rsi,rsi
   140015ec1:	je     0x140015ed9
   140015ec3:	mov    r8,rbx
   140015ec6:	mov    rdx,rsi
   140015ec9:	xor    ecx,ecx
   140015ecb:	call   QWORD PTR [rip+0x1c26f]        # 0x140032140
   140015ed1:	jmp    0x140015ed9
   140015ed3:	call   QWORD PTR [rip+0x1c21f]        # 0x1400320f8
   140015ed9:	mov    rbx,QWORD PTR [rsp+0x50]
   140015ede:	add    rsp,0x20
   140015ee2:	pop    rdi
   140015ee3:	pop    rsi
   140015ee4:	pop    rbp
   140015ee5:	ret    
   140015ee6:	int3   
   140015ee7:	int3   
   140015ee8:	int3   
   140015ee9:	int3   
   140015eea:	int3   
   140015eeb:	int3   
   140015eec:	mov    QWORD PTR [rsp+0x8],rbx
   140015ef1:	mov    QWORD PTR [rsp+0x10],rsi
   140015ef6:	push   rdi
   140015ef7:	sub    rsp,0x20
   140015efb:	cmp    BYTE PTR [rcx+0x61],0x0
   140015eff:	mov    rdi,rcx
   140015f02:	jne    0x140015f09
   140015f04:	call   0x140015e54
   140015f09:	mov    rsi,QWORD PTR [rdi+0x78]
   140015f0d:	test   rsi,rsi
   140015f10:	je     0x140015f27
   140015f12:	mov    rax,QWORD PTR [rsi]
   140015f15:	mov    rbx,QWORD PTR [rax+0x8]
   140015f19:	mov    rcx,rbx
   140015f1c:	call   QWORD PTR [rip+0x1c786]        # 0x1400326a8
   140015f22:	mov    rcx,rsi
   140015f25:	call   rbx
   140015f27:	mov    rdx,QWORD PTR [rdi+0x58]
   140015f2b:	or     rbx,0xffffffffffffffff
   140015f2f:	test   rdx,rdx
   140015f32:	je     0x140015f3f
   140015f34:	mov    r8,rbx
   140015f37:	xor    ecx,ecx
   140015f39:	call   QWORD PTR [rip+0x1c201]        # 0x140032140
   140015f3f:	mov    rdx,QWORD PTR [rdi+0x50]
   140015f43:	test   rdx,rdx
   140015f46:	je     0x140015f53
   140015f48:	mov    r8,rbx
   140015f4b:	xor    ecx,ecx
   140015f4d:	call   QWORD PTR [rip+0x1c1ed]        # 0x140032140
   140015f53:	lea    rcx,[rdi+0x28]
   140015f57:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140015f5e:	je     0x140015f66
   140015f60:	call   QWORD PTR [rip+0x1c312]        # 0x140032278
   140015f66:	mov    rcx,rdi
   140015f69:	mov    rbx,QWORD PTR [rsp+0x30]
   140015f6e:	mov    rsi,QWORD PTR [rsp+0x38]
   140015f73:	add    rsp,0x20
   140015f77:	pop    rdi
   140015f78:	jmp    0x14001686c
   140015f7d:	int3   
   140015f7e:	int3   
   140015f7f:	int3   
   140015f80:	int3   
   140015f81:	int3   
   140015f82:	int3   
   140015f83:	int3   
   140015f84:	mov    r11,rsp
   140015f87:	push   rdi
   140015f88:	push   r14
   140015f8a:	push   r15
   140015f8c:	sub    rsp,0xa0
   140015f93:	mov    QWORD PTR [r11-0x78],0xfffffffffffffffe
   140015f9b:	mov    QWORD PTR [r11+0x10],rbx
   140015f9f:	mov    QWORD PTR [r11+0x18],rbp
   140015fa3:	mov    rax,QWORD PTR [rip+0x35076]        # 0x14004b020
   140015faa:	xor    rax,rsp
   140015fad:	mov    QWORD PTR [rsp+0x98],rax
   140015fb5:	mov    r14,r9
   140015fb8:	mov    edi,r8d
   140015fbb:	mov    ebp,edx
   140015fbd:	mov    rbx,rcx
   140015fc0:	cmp    BYTE PTR [rcx+0x60],0x0
   140015fc4:	jne    0x140015fe6
   140015fc6:	mov    edx,0x80070057
   140015fcb:	lea    rcx,[r11-0x70]
   140015fcf:	call   0x140002064
   140015fd4:	lea    rdx,[rip+0x331ad]        # 0x140049188
   140015fdb:	lea    rcx,[rsp+0x48]
   140015fe0:	call   0x14002e2da
   140015fe5:	int3   
   140015fe6:	lea    r15,[rcx+0x28]
   140015fea:	mov    QWORD PTR [rsp+0x48],r15
   140015fef:	mov    rcx,r15
   140015ff2:	call   QWORD PTR [rip+0x1c110]        # 0x140032108
   140015ff8:	mov    BYTE PTR [rsp+0x50],0x1
   140015ffd:	mov    BYTE PTR [rsp+0x58],0x1
   140016002:	cmp    BYTE PTR [rbx+0x61],0x0
   140016006:	jne    0x140016233
   14001600c:	mov    eax,DWORD PTR [rbx+0x64]
   14001600f:	cmp    QWORD PTR [rbx+0x20],rax
   140016013:	jb     0x140016053
   140016015:	lea    rdi,[rip+0x3505c]        # 0x14004b078
   14001601c:	mov    rcx,QWORD PTR [rip+0x35055]        # 0x14004b078
   140016023:	cmp    rcx,rdi
   140016026:	je     0x14001613c
   14001602c:	test   BYTE PTR [rcx+0x1c],0x2
   140016030:	je     0x14001613c
   140016036:	mov    edx,0x11
   14001603b:	mov    r9d,eax
   14001603e:	lea    r8,[rip+0x21953]        # 0x140037998
   140016045:	mov    rcx,QWORD PTR [rcx+0x10]
   140016049:	call   0x140001f70
   14001604e:	jmp    0x140016135
   140016053:	mov    ecx,0x20
   140016058:	call   0x140023f10
   14001605d:	mov    QWORD PTR [rsp+0x30],rax
   140016062:	mov    ecx,DWORD PTR [rsp+0xe0]
   140016069:	mov    DWORD PTR [rsp+0x20],ecx
   14001606d:	mov    r9,r14
   140016070:	mov    r8d,edi
   140016073:	mov    edx,ebp
   140016075:	mov    rcx,rax
   140016078:	call   0x140015b74
   14001607d:	mov    r14,rax
   140016080:	mov    QWORD PTR [rsp+0x30],rax
   140016085:	mov    QWORD PTR [rsp+0x38],rax
   14001608a:	mov    rdx,QWORD PTR [rbx+0x20]
   14001608e:	mov    cl,BYTE PTR [rbx+0x18]
   140016091:	add    cl,dl
   140016093:	test   cl,0x1
   140016096:	jne    0x1400160ad
   140016098:	lea    rcx,[rdx+0x2]
   14001609c:	shr    rcx,1
   14001609f:	cmp    QWORD PTR [rbx+0x10],rcx
   1400160a3:	ja     0x1400160ad
   1400160a5:	mov    rcx,rbx
   1400160a8:	call   0x140016be8
   1400160ad:	mov    rdx,QWORD PTR [rbx+0x10]
   1400160b1:	lea    rax,[rdx*2-0x1]
   1400160b9:	and    QWORD PTR [rbx+0x18],rax
   1400160bd:	mov    rbp,QWORD PTR [rbx+0x18]
   1400160c1:	add    rbp,QWORD PTR [rbx+0x20]
   1400160c5:	mov    rdi,rbp
   1400160c8:	shr    rdi,1
   1400160cb:	lea    rax,[rdx-0x1]
   1400160cf:	and    rdi,rax
   1400160d2:	mov    rax,QWORD PTR [rbx+0x8]
   1400160d6:	cmp    QWORD PTR [rax+rdi*8],0x0
   1400160db:	jne    0x1400160ef
   1400160dd:	mov    ecx,0x10
   1400160e2:	call   0x140023f10
   1400160e7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400160eb:	mov    QWORD PTR [rcx+rdi*8],rax
   1400160ef:	mov    rax,QWORD PTR [rbx+0x8]
   1400160f3:	and    ebp,0x1
   1400160f6:	mov    rax,QWORD PTR [rax+rdi*8]
   1400160fa:	lea    rcx,[rax+rbp*8]
   1400160fe:	test   rcx,rcx
   140016101:	je     0x140016106
   140016103:	mov    QWORD PTR [rcx],r14
   140016106:	inc    QWORD PTR [rbx+0x20]
   14001610a:	lea    rdi,[rip+0x34f67]        # 0x14004b078
   140016111:	mov    rcx,QWORD PTR [rip+0x34f60]        # 0x14004b078
   140016118:	cmp    rcx,rdi
   14001611b:	je     0x14001613c
   14001611d:	test   BYTE PTR [rcx+0x1c],0x4
   140016121:	je     0x14001613c
   140016123:	mov    edx,0x12
   140016128:	mov    r9,QWORD PTR [rbx+0x20]
   14001612c:	mov    rcx,QWORD PTR [rcx+0x10]
   140016130:	call   0x140001f2c
   140016135:	mov    rcx,QWORD PTR [rip+0x34f3c]        # 0x14004b078
   14001613c:	lea    r14,[rbx+0x50]
   140016140:	cmp    QWORD PTR [r14],0x0
   140016144:	je     0x140016163
   140016146:	cmp    rcx,rdi
   140016149:	je     0x140016262
   14001614f:	test   BYTE PTR [rcx+0x1c],0x4
   140016153:	je     0x140016262
   140016159:	mov    edx,0x13
   14001615e:	jmp    0x140016251
   140016163:	xor    ebp,ebp
   140016165:	cmp    QWORD PTR [rbx+0x70],rbp
   140016169:	je     0x14001619b
   14001616b:	call   0x14002b158
   140016170:	mov    rcx,rax
   140016173:	sub    rcx,QWORD PTR [rbx+0x70]
   140016177:	movabs rax,0x346dc5d63886594b
   140016181:	mul    rcx
   140016184:	shr    rdx,0xb
   140016188:	mov    eax,DWORD PTR [rbx+0x68]
   14001618b:	mov    rcx,QWORD PTR [rip+0x34ee6]        # 0x14004b078
   140016192:	cmp    rdx,rax
   140016195:	jae    0x14001619b
   140016197:	mov    ebp,eax
   140016199:	sub    ebp,edx
   14001619b:	cmp    rcx,rdi
   14001619e:	je     0x1400161be
   1400161a0:	test   BYTE PTR [rcx+0x1c],0x4
   1400161a4:	je     0x1400161be
   1400161a6:	mov    edx,0x14
   1400161ab:	mov    r9d,ebp
   1400161ae:	lea    r8,[rip+0x217e3]        # 0x140037998
   1400161b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400161b9:	call   0x140001f70
   1400161be:	mov    rdx,QWORD PTR [r14]
   1400161c1:	test   rdx,rdx
   1400161c4:	je     0x1400161d6
   1400161c6:	or     r8,0xffffffffffffffff
   1400161ca:	xor    ecx,ecx
   1400161cc:	call   QWORD PTR [rip+0x1bf6e]        # 0x140032140
   1400161d2:	and    QWORD PTR [r14],0x0
   1400161d6:	mov    QWORD PTR [rsp+0x20],rbx
   1400161db:	mov    edx,ebp
   1400161dd:	mov    rcx,r14
   1400161e0:	call   0x14002a700
   1400161e5:	mov    ebx,eax
   1400161e7:	test   eax,eax
   1400161e9:	jns    0x140016262
   1400161eb:	mov    rcx,QWORD PTR [rip+0x34e86]        # 0x14004b078
   1400161f2:	cmp    rcx,rdi
   1400161f5:	je     0x140016215
   1400161f7:	test   BYTE PTR [rcx+0x1c],0x1
   1400161fb:	je     0x140016215
   1400161fd:	mov    edx,0x15
   140016202:	mov    r9d,eax
   140016205:	lea    r8,[rip+0x2178c]        # 0x140037998
   14001620c:	mov    rcx,QWORD PTR [rcx+0x10]
   140016210:	call   0x140001f70
   140016215:	mov    edx,ebx
   140016217:	lea    rcx,[rsp+0x70]
   14001621c:	call   0x140002064
   140016221:	lea    rdx,[rip+0x32f60]        # 0x140049188
   140016228:	lea    rcx,[rsp+0x70]
   14001622d:	call   0x14002e2da
   140016232:	int3   
   140016233:	lea    rdi,[rip+0x34e3e]        # 0x14004b078
   14001623a:	mov    rcx,QWORD PTR [rip+0x34e37]        # 0x14004b078
   140016241:	cmp    rcx,rdi
   140016244:	je     0x140016262
   140016246:	test   BYTE PTR [rcx+0x1c],0x2
   14001624a:	je     0x140016262
   14001624c:	mov    edx,0x10
   140016251:	lea    r8,[rip+0x21740]        # 0x140037998
   140016258:	mov    rcx,QWORD PTR [rcx+0x10]
   14001625c:	call   0x140001f08
   140016261:	nop
   140016262:	mov    rcx,r15
   140016265:	call   QWORD PTR [rip+0x1be8d]        # 0x1400320f8
   14001626b:	mov    rcx,QWORD PTR [rsp+0x98]
   140016273:	xor    rcx,rsp
   140016276:	call   0x14002dd00
   14001627b:	lea    r11,[rsp+0xa0]
   140016283:	mov    rbx,QWORD PTR [r11+0x28]
   140016287:	mov    rbp,QWORD PTR [r11+0x30]
   14001628b:	mov    rsp,r11
   14001628e:	pop    r15
   140016290:	pop    r14
   140016292:	pop    rdi
   140016293:	ret    
   140016294:	int3   
   140016295:	int3   
   140016296:	int3   
   140016297:	int3   
   140016298:	int3   
   140016299:	int3   
   14001629a:	int3   
   14001629b:	int3   
   14001629c:	int3   
   14001629d:	int3   
   14001629e:	int3   
   14001629f:	int3   
   1400162a0:	rex push rbx
   1400162a2:	sub    rsp,0x30
   1400162a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400162af:	mov    rbx,rcx
   1400162b2:	lea    rax,[rip+0x34dbf]        # 0x14004b078
   1400162b9:	mov    rcx,QWORD PTR [rip+0x34db8]        # 0x14004b078
   1400162c0:	cmp    rcx,rax
   1400162c3:	je     0x1400162e1
   1400162c5:	test   BYTE PTR [rcx+0x1c],0x4
   1400162c9:	je     0x1400162e1
   1400162cb:	mov    edx,0x16
   1400162d0:	lea    r8,[rip+0x216c1]        # 0x140037998
   1400162d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400162db:	call   0x140001f08
   1400162e0:	nop
   1400162e1:	mov    rcx,rbx
   1400162e4:	call   0x140016330
   1400162e9:	nop
   1400162ea:	jmp    0x140016324
   1400162ec:	mov    r9d,DWORD PTR [rsp+0x40]
   1400162f1:	test   r9d,r9d
   1400162f4:	jns    0x140016324
   1400162f6:	lea    rax,[rip+0x34d7b]        # 0x14004b078
   1400162fd:	mov    rcx,QWORD PTR [rip+0x34d74]        # 0x14004b078
   140016304:	cmp    rcx,rax
   140016307:	je     0x140016324
   140016309:	test   BYTE PTR [rcx+0x1c],0x1
   14001630d:	je     0x140016324
   14001630f:	mov    edx,0x17
   140016314:	lea    r8,[rip+0x2167d]        # 0x140037998
   14001631b:	mov    rcx,QWORD PTR [rcx+0x10]
   14001631f:	call   0x140001f70
   140016324:	add    rsp,0x30
   140016328:	pop    rbx
   140016329:	ret    
   14001632a:	int3   
   14001632b:	int3   
   14001632c:	int3   
   14001632d:	int3   
   14001632e:	int3   
   14001632f:	int3   
   140016330:	mov    rax,rsp
   140016333:	mov    QWORD PTR [rax+0x8],rcx
   140016337:	push   rdi
   140016338:	push   r12
   14001633a:	push   r13
   14001633c:	push   r14
   14001633e:	push   r15
   140016340:	sub    rsp,0x880
   140016347:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140016350:	mov    QWORD PTR [rax+0x18],rbx
   140016354:	mov    r14,rcx
   140016357:	xorps  xmm0,xmm0
   14001635a:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016360:	and    QWORD PTR [rsp+0x40],0x0
   140016366:	and    QWORD PTR [rsp+0x48],0x0
   14001636c:	and    QWORD PTR [rsp+0x50],0x0
   140016372:	mov    ecx,0x10
   140016377:	call   0x140023f10
   14001637c:	mov    QWORD PTR [rsp+0x30],rax
   140016381:	xorps  xmm0,xmm0
   140016384:	movdqu XMMWORD PTR [rax],xmm0
   140016388:	lea    rcx,[rsp+0x30]
   14001638d:	mov    rax,QWORD PTR [rsp+0x30]
   140016392:	mov    QWORD PTR [rax],rcx
   140016395:	xor    r13d,r13d
   140016398:	lea    rbx,[r14+0x28]
   14001639c:	mov    rcx,rbx
   14001639f:	call   QWORD PTR [rip+0x1bd63]        # 0x140032108
   1400163a5:	lea    r12d,[r13+0x1]
   1400163a9:	mov    al,r12b
   1400163ac:	mov    rdx,QWORD PTR [rsp+0x30]
   1400163b1:	test   al,al
   1400163b3:	je     0x140016495
   1400163b9:	cmp    BYTE PTR [r14+0x61],0x0
   1400163be:	je     0x14001640c
   1400163c0:	lea    r15,[rip+0x34cb1]        # 0x14004b078
   1400163c7:	mov    rcx,QWORD PTR [rip+0x34caa]        # 0x14004b078
   1400163ce:	cmp    rcx,r15
   1400163d1:	je     0x1400163ee
   1400163d3:	test   BYTE PTR [rcx+0x1c],0x2
   1400163d7:	je     0x1400163ee
   1400163d9:	mov    edx,0x18
   1400163de:	lea    r8,[rip+0x215b3]        # 0x140037998
   1400163e5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400163e9:	call   0x140001f08
   1400163ee:	test   r12b,r12b
   1400163f1:	je     0x1400163fd
   1400163f3:	mov    rcx,rbx
   1400163f6:	call   QWORD PTR [rip+0x1bcfc]        # 0x1400320f8
   1400163fc:	nop
   1400163fd:	lea    rcx,[rsp+0x30]
   140016402:	call   0x14001686c
   140016407:	jmp    0x140016751
   14001640c:	lea    rax,[rsp+0x30]
   140016411:	cmp    rax,r14
   140016414:	je     0x14001648e
   140016416:	mov    rax,rdx
   140016419:	mov    rdx,QWORD PTR [r14]
   14001641c:	mov    QWORD PTR [rsp+0x30],rdx
   140016421:	mov    QWORD PTR [r14],rax
   140016424:	test   rdx,rdx
   140016427:	je     0x140016436
   140016429:	lea    rax,[rsp+0x30]
   14001642e:	mov    QWORD PTR [rdx],rax
   140016431:	mov    rdx,QWORD PTR [rsp+0x30]
   140016436:	mov    rax,QWORD PTR [r14]
   140016439:	test   rax,rax
   14001643c:	je     0x140016446
   14001643e:	mov    QWORD PTR [rax],r14
   140016441:	mov    rdx,QWORD PTR [rsp+0x30]
   140016446:	mov    rcx,QWORD PTR [rsp+0x38]
   14001644b:	mov    rax,QWORD PTR [r14+0x8]
   14001644f:	mov    QWORD PTR [rsp+0x38],rax
   140016454:	mov    QWORD PTR [r14+0x8],rcx
   140016458:	mov    rcx,QWORD PTR [rsp+0x40]
   14001645d:	mov    rax,QWORD PTR [r14+0x10]
   140016461:	mov    QWORD PTR [rsp+0x40],rax
   140016466:	mov    QWORD PTR [r14+0x10],rcx
   14001646a:	mov    rcx,QWORD PTR [rsp+0x48]
   14001646f:	mov    rax,QWORD PTR [r14+0x18]
   140016473:	mov    QWORD PTR [rsp+0x48],rax
   140016478:	mov    QWORD PTR [r14+0x18],rcx
   14001647c:	mov    rcx,QWORD PTR [rsp+0x50]
   140016481:	mov    rax,QWORD PTR [r14+0x20]
   140016485:	mov    QWORD PTR [rsp+0x50],rax
   14001648a:	mov    QWORD PTR [r14+0x20],rcx
   14001648e:	xor    al,al
   140016490:	jmp    0x1400163b1
   140016495:	test   r12b,r12b
   140016498:	je     0x1400164a3
   14001649a:	mov    rcx,rbx
   14001649d:	call   QWORD PTR [rip+0x1bc55]        # 0x1400320f8
   1400164a3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400164a8:	mov    eax,0xfa
   1400164ad:	cmp    rbx,rax
   1400164b0:	cmova  rbx,rax
   1400164b4:	and    QWORD PTR [rsp+0xa0],0x0
   1400164bd:	xor    edx,edx
   1400164bf:	mov    r8d,0x7c8
   1400164c5:	lea    rcx,[rsp+0xa8]
   1400164cd:	call   0x14002e2ce
   1400164d2:	and    QWORD PTR [rsp+0x870],0x0
   1400164db:	xor    edi,edi
   1400164dd:	test   rbx,rbx
   1400164e0:	je     0x140016545
   1400164e2:	lea    rdx,[rsp+0x68]
   1400164e7:	lea    rcx,[rsp+0x30]
   1400164ec:	call   0x140016af8
   1400164f1:	mov    rcx,rax
   1400164f4:	mov    r8,rdi
   1400164f7:	lea    rdx,[rsp+0x80]
   1400164ff:	call   0x140016b3c
   140016504:	mov    r8,QWORD PTR [rax]
   140016507:	test   r8,r8
   14001650a:	je     0x14001650f
   14001650c:	mov    r8,QWORD PTR [r8]
   14001650f:	mov    rdx,QWORD PTR [rax+0x10]
   140016513:	mov    rcx,QWORD PTR [r8+0x10]
   140016517:	sub    rcx,r12
   14001651a:	mov    rax,rdx
   14001651d:	shr    rax,1
   140016520:	and    rcx,rax
   140016523:	and    rdx,r12
   140016526:	mov    rax,QWORD PTR [r8+0x8]
   14001652a:	mov    rax,QWORD PTR [rax+rcx*8]
   14001652e:	mov    rax,QWORD PTR [rax+rdx*8]
   140016532:	mov    rcx,QWORD PTR [rax]
   140016535:	mov    QWORD PTR [rsp+rdi*8+0xa0],rcx
   14001653d:	add    rdi,r12
   140016540:	cmp    rdi,rbx
   140016543:	jb     0x1400164e2
   140016545:	mov    QWORD PTR [rsp+0x870],rbx
   14001654d:	cmp    BYTE PTR [r14+0x61],0x0
   140016552:	je     0x140016584
   140016554:	lea    r15,[rip+0x34b1d]        # 0x14004b078
   14001655b:	mov    rcx,QWORD PTR [rip+0x34b16]        # 0x14004b078
   140016562:	cmp    rcx,r15
   140016565:	je     0x1400165d6
   140016567:	test   BYTE PTR [rcx+0x1c],0x2
   14001656b:	je     0x1400165d6
   14001656d:	mov    edx,0x1d
   140016572:	lea    r8,[rip+0x2141f]        # 0x140037998
   140016579:	mov    rcx,QWORD PTR [rcx+0x10]
   14001657d:	call   0x140001f08
   140016582:	jmp    0x1400165cf
   140016584:	lea    r15,[rip+0x34aed]        # 0x14004b078
   14001658b:	mov    rcx,QWORD PTR [rip+0x34ae6]        # 0x14004b078
   140016592:	cmp    rcx,r15
   140016595:	je     0x1400165ae
   140016597:	test   BYTE PTR [rcx+0x1c],0x4
   14001659b:	je     0x1400165ae
   14001659d:	mov    edx,0x1e
   1400165a2:	mov    r9,rbx
   1400165a5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400165a9:	call   0x140001f2c
   1400165ae:	mov    rdi,QWORD PTR [r14+0x78]
   1400165b2:	mov    rax,QWORD PTR [rdi]
   1400165b5:	mov    rbx,QWORD PTR [rax+0x18]
   1400165b9:	mov    rcx,rbx
   1400165bc:	call   QWORD PTR [rip+0x1c0e6]        # 0x1400326a8
   1400165c2:	lea    rdx,[rsp+0xa0]
   1400165ca:	mov    rcx,rdi
   1400165cd:	call   rbx
   1400165cf:	mov    rcx,QWORD PTR [rip+0x34aa2]        # 0x14004b078
   1400165d6:	jmp    0x1400165fc
   1400165d8:	mov    r12d,0x1
   1400165de:	lea    r15,[rip+0x34a93]        # 0x14004b078
   1400165e5:	mov    r14,QWORD PTR [rsp+0x8b0]
   1400165ed:	mov    r13d,DWORD PTR [rsp+0x8b8]
   1400165f5:	mov    rcx,QWORD PTR [rip+0x34a7c]        # 0x14004b078
   1400165fc:	test   r13d,r13d
   1400165ff:	jns    0x140016624
   140016601:	cmp    rcx,r15
   140016604:	je     0x140016624
   140016606:	test   BYTE PTR [rcx+0x1c],r12b
   14001660a:	je     0x140016624
   14001660c:	mov    edx,0x19
   140016611:	mov    r9d,r13d
   140016614:	lea    r8,[rip+0x2137d]        # 0x140037998
   14001661b:	mov    rcx,QWORD PTR [rcx+0x10]
   14001661f:	call   0x140001f70
   140016624:	and    QWORD PTR [rsp+0x8b8],0x0
   14001662d:	lea    rdi,[r14+0x28]
   140016631:	mov    rcx,rdi
   140016634:	call   QWORD PTR [rip+0x1bace]        # 0x140032108
   14001663a:	cmp    BYTE PTR [r14+0x61],0x0
   14001663f:	jne    0x140016716
   140016645:	mov    r12,QWORD PTR [r14+0x58]
   140016649:	and    QWORD PTR [r14+0x58],0x0
   14001664e:	lea    rbx,[r14+0x50]
   140016652:	mov    rcx,QWORD PTR [rbx]
   140016655:	mov    rax,QWORD PTR [r14+0x58]
   140016659:	mov    QWORD PTR [rbx],rax
   14001665c:	mov    QWORD PTR [r14+0x58],rcx
   140016660:	cmp    QWORD PTR [r14+0x20],0x0
   140016665:	je     0x1400166ee
   14001666b:	mov    rcx,QWORD PTR [rip+0x34a06]        # 0x14004b078
   140016672:	cmp    rcx,r15
   140016675:	je     0x140016696
   140016677:	test   BYTE PTR [rcx+0x1c],0x4
   14001667b:	je     0x140016696
   14001667d:	mov    edx,0x1b
   140016682:	mov    r9d,DWORD PTR [r14+0x68]
   140016686:	lea    r8,[rip+0x2130b]        # 0x140037998
   14001668d:	mov    rcx,QWORD PTR [rcx+0x10]
   140016691:	call   0x140001f70
   140016696:	cmp    QWORD PTR [rbx],0x0
   14001669a:	je     0x1400166af
   14001669c:	or     r8,0xffffffffffffffff
   1400166a0:	mov    rdx,QWORD PTR [rbx]
   1400166a3:	xor    ecx,ecx
   1400166a5:	call   QWORD PTR [rip+0x1ba95]        # 0x140032140
   1400166ab:	and    QWORD PTR [rbx],0x0
   1400166af:	mov    QWORD PTR [rsp+0x20],r14
   1400166b4:	mov    edx,DWORD PTR [r14+0x68]
   1400166b8:	mov    rcx,rbx
   1400166bb:	call   0x14002a700
   1400166c0:	test   eax,eax
   1400166c2:	jns    0x1400166ee
   1400166c4:	mov    rcx,QWORD PTR [rip+0x349ad]        # 0x14004b078
   1400166cb:	cmp    rcx,r15
   1400166ce:	je     0x1400166ee
   1400166d0:	test   BYTE PTR [rcx+0x1c],0x2
   1400166d4:	je     0x1400166ee
   1400166d6:	mov    edx,0x1c
   1400166db:	mov    r9d,eax
   1400166de:	lea    r8,[rip+0x212b3]        # 0x140037998
   1400166e5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400166e9:	call   0x140001f70
   1400166ee:	call   0x14002b158
   1400166f3:	mov    QWORD PTR [r14+0x70],rax
   1400166f7:	mov    rcx,rdi
   1400166fa:	call   QWORD PTR [rip+0x1b9f8]        # 0x1400320f8
   140016700:	test   r12,r12
   140016703:	je     0x140016747
   140016705:	or     r8,0xffffffffffffffff
   140016709:	mov    rdx,r12
   14001670c:	xor    ecx,ecx
   14001670e:	call   QWORD PTR [rip+0x1ba2c]        # 0x140032140
   140016714:	jmp    0x140016747
   140016716:	mov    rcx,QWORD PTR [rip+0x3495b]        # 0x14004b078
   14001671d:	cmp    rcx,r15
   140016720:	je     0x14001673d
   140016722:	test   BYTE PTR [rcx+0x1c],0x2
   140016726:	je     0x14001673d
   140016728:	mov    edx,0x1a
   14001672d:	lea    r8,[rip+0x21264]        # 0x140037998
   140016734:	mov    rcx,QWORD PTR [rcx+0x10]
   140016738:	call   0x140001f08
   14001673d:	mov    rcx,rdi
   140016740:	call   QWORD PTR [rip+0x1b9b2]        # 0x1400320f8
   140016746:	nop
   140016747:	lea    rcx,[rsp+0x30]
   14001674c:	call   0x14001686c
   140016751:	mov    rbx,QWORD PTR [rsp+0x8c0]
   140016759:	add    rsp,0x880
   140016760:	pop    r15
   140016762:	pop    r14
   140016764:	pop    r13
   140016766:	pop    r12
   140016768:	pop    rdi
   140016769:	ret    
   14001676a:	int3   
   14001676b:	int3   
   14001676c:	int3   
   14001676d:	int3   
   14001676e:	int3   
   14001676f:	int3   
   140016770:	mov    rax,rsp
   140016773:	mov    QWORD PTR [rax+0x8],rcx
   140016777:	push   rdi
   140016778:	sub    rsp,0x30
   14001677c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140016784:	mov    QWORD PTR [rax+0x10],rbx
   140016788:	mov    QWORD PTR [rax+0x18],rsi
   14001678c:	mov    rbx,rdx
   14001678f:	mov    rsi,rcx
   140016792:	mov    rax,QWORD PTR [rcx+0x8]
   140016796:	mov    r8,QWORD PTR [rcx]
   140016799:	mov    r9,rax
   14001679c:	sub    r9,r8
   14001679f:	cmp    r9,rdx
   1400167a2:	jbe    0x1400167dd
   1400167a4:	add    rbx,r8
   1400167a7:	cmp    rbx,r8
   1400167aa:	jne    0x1400167b5
   1400167ac:	mov    QWORD PTR [rcx+0x8],r8
   1400167b0:	jmp    0x140016856
   1400167b5:	cmp    rbx,rax
   1400167b8:	je     0x140016856
   1400167be:	mov    rdi,rax
   1400167c1:	sub    rdi,rax
   1400167c4:	mov    r8,rdi
   1400167c7:	mov    rdx,rax
   1400167ca:	mov    rcx,rbx
   1400167cd:	call   QWORD PTR [rip+0x1bccd]        # 0x1400324a0
   1400167d3:	lea    rax,[rdi+rbx*1]
   1400167d7:	mov    QWORD PTR [rsi+0x8],rax
   1400167db:	jmp    0x140016856
   1400167dd:	jae    0x140016856
   1400167df:	mov    r10,r8
   1400167e2:	sub    r10,rax
   1400167e5:	lea    r11,[r10+rdx*1]
   1400167e9:	mov    rdx,QWORD PTR [rcx+0x10]
   1400167ed:	mov    rcx,rdx
   1400167f0:	sub    rcx,rax
   1400167f3:	cmp    rcx,r11
   1400167f6:	jae    0x140016837
   1400167f8:	lea    rax,[r10-0x1]
   1400167fc:	cmp    rax,r11
   1400167ff:	jae    0x140016807
   140016801:	call   0x14000d388
   140016806:	int3   
   140016807:	lea    r10,[r9+r11*1]
   14001680b:	sub    rdx,r8
   14001680e:	mov    rcx,rdx
   140016811:	shr    rcx,1
   140016814:	or     rax,0xffffffffffffffff
   140016818:	sub    rax,rcx
   14001681b:	cmp    rax,rdx
   14001681e:	jae    0x140016824
   140016820:	xor    edx,edx
   140016822:	jmp    0x140016827
   140016824:	add    rdx,rcx
   140016827:	cmp    rdx,r10
   14001682a:	cmovb  rdx,r10
   14001682e:	mov    rcx,rsi
   140016831:	call   0x1400169cc
   140016836:	nop
   140016837:	mov    rcx,QWORD PTR [rsi+0x8]
   14001683b:	mov    r8,QWORD PTR [rsi]
   14001683e:	sub    r8,rcx
   140016841:	add    r8,rbx
   140016844:	xor    edx,edx
   140016846:	call   0x14002e2ce
   14001684b:	nop
   14001684c:	mov    rcx,QWORD PTR [rsi]
   14001684f:	add    rcx,rbx
   140016852:	mov    QWORD PTR [rsi+0x8],rcx
   140016856:	mov    rbx,QWORD PTR [rsp+0x48]
   14001685b:	mov    rsi,QWORD PTR [rsp+0x50]
   140016860:	add    rsp,0x30
   140016864:	pop    rdi
   140016865:	ret    
   140016866:	int3   
   140016867:	int3   
   140016868:	int3   
   140016869:	int3   
   14001686a:	int3   
   14001686b:	int3   
   14001686c:	mov    rax,rsp
   14001686f:	mov    QWORD PTR [rax+0x8],rbx
   140016873:	mov    QWORD PTR [rax+0x10],rsi
   140016877:	mov    QWORD PTR [rax+0x18],rdi
   14001687b:	push   r14
   14001687d:	sub    rsp,0x50
   140016881:	lea    rdx,[rax-0x38]
   140016885:	mov    rbx,rcx
   140016888:	call   0x140016af8
   14001688d:	lea    rdx,[rsp+0x38]
   140016892:	call   0x140016b18
   140016897:	mov    rdi,QWORD PTR [rsp+0x30]
   14001689c:	cmp    rdi,QWORD PTR [rsp+0x48]
   1400168a1:	je     0x14001690c
   1400168a3:	mov    r14,QWORD PTR [rsp+0x20]
   1400168a8:	test   r14,r14
   1400168ab:	jne    0x1400168b1
   1400168ad:	xor    ecx,ecx
   1400168af:	jmp    0x1400168b4
   1400168b1:	mov    rcx,QWORD PTR [r14]
   1400168b4:	mov    rdx,QWORD PTR [rcx+0x10]
   1400168b8:	mov    rax,rdi
   1400168bb:	shr    rax,1
   1400168be:	dec    rdx
   1400168c1:	and    rdx,rax
   1400168c4:	mov    rax,QWORD PTR [rcx+0x8]
   1400168c8:	mov    rcx,rdi
   1400168cb:	and    ecx,0x1
   1400168ce:	mov    rax,QWORD PTR [rax+rdx*8]
   1400168d2:	mov    rsi,QWORD PTR [rax+rcx*8]
   1400168d6:	test   rsi,rsi
   1400168d9:	je     0x140016902
   1400168db:	mov    rcx,QWORD PTR [rsi+0x8]
   1400168df:	test   rcx,rcx
   1400168e2:	je     0x1400168f9
   1400168e4:	call   QWORD PTR [rip+0x1bcde]        # 0x1400325c8
   1400168ea:	and    QWORD PTR [rsi+0x8],0x0
   1400168ef:	and    QWORD PTR [rsi+0x10],0x0
   1400168f4:	and    QWORD PTR [rsi+0x18],0x0
   1400168f9:	mov    rcx,rsi
   1400168fc:	call   QWORD PTR [rip+0x1bcc6]        # 0x1400325c8
   140016902:	inc    rdi
   140016905:	cmp    rdi,QWORD PTR [rsp+0x48]
   14001690a:	jne    0x1400168a8
   14001690c:	mov    rax,QWORD PTR [rbx+0x20]
   140016910:	test   rax,rax
   140016913:	je     0x14001692a
   140016915:	test   rax,rax
   140016918:	je     0x140016926
   14001691a:	sub    rax,0x1
   14001691e:	jne    0x140016915
   140016920:	and    QWORD PTR [rbx+0x18],rax
   140016924:	jmp    0x140016915
   140016926:	mov    QWORD PTR [rbx+0x20],rax
   14001692a:	mov    rdi,QWORD PTR [rbx+0x10]
   14001692e:	jmp    0x140016946
   140016930:	mov    rax,QWORD PTR [rbx+0x8]
   140016934:	dec    rdi
   140016937:	mov    rcx,QWORD PTR [rax+rdi*8]
   14001693b:	test   rcx,rcx
   14001693e:	je     0x140016946
   140016940:	call   QWORD PTR [rip+0x1bc82]        # 0x1400325c8
   140016946:	test   rdi,rdi
   140016949:	jne    0x140016930
   14001694b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001694f:	test   rcx,rcx
   140016952:	je     0x14001695a
   140016954:	call   QWORD PTR [rip+0x1bc6e]        # 0x1400325c8
   14001695a:	and    QWORD PTR [rbx+0x10],0x0
   14001695f:	mov    rcx,rbx
   140016962:	and    QWORD PTR [rbx+0x8],0x0
   140016967:	mov    rbx,QWORD PTR [rsp+0x60]
   14001696c:	mov    rsi,QWORD PTR [rsp+0x68]
   140016971:	mov    rdi,QWORD PTR [rsp+0x70]
   140016976:	add    rsp,0x50
   14001697a:	pop    r14
   14001697c:	jmp    0x140016a74
   140016981:	int3   
   140016982:	int3   
   140016983:	int3   
   140016984:	int3   
   140016985:	int3   
   140016986:	int3   
   140016987:	int3   
   140016988:	rex push rbx
   14001698a:	sub    rsp,0x20
   14001698e:	mov    rbx,QWORD PTR [rcx]
   140016991:	test   rbx,rbx
   140016994:	je     0x1400169bd
   140016996:	mov    rcx,QWORD PTR [rbx+0x8]
   14001699a:	test   rcx,rcx
   14001699d:	je     0x1400169b4
   14001699f:	call   QWORD PTR [rip+0x1bc23]        # 0x1400325c8
   1400169a5:	and    QWORD PTR [rbx+0x8],0x0
   1400169aa:	and    QWORD PTR [rbx+0x10],0x0
   1400169af:	and    QWORD PTR [rbx+0x18],0x0
   1400169b4:	mov    rcx,rbx
   1400169b7:	call   QWORD PTR [rip+0x1bc0b]        # 0x1400325c8
   1400169bd:	add    rsp,0x20
   1400169c1:	pop    rbx
   1400169c2:	ret    
   1400169c3:	int3   
   1400169c4:	int3   
   1400169c5:	int3   
   1400169c6:	int3   
   1400169c7:	int3   
   1400169c8:	int3   
   1400169c9:	int3   
   1400169ca:	int3   
   1400169cb:	int3   
   1400169cc:	mov    rax,rsp
   1400169cf:	push   r14
   1400169d1:	sub    rsp,0x30
   1400169d5:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400169dd:	mov    QWORD PTR [rax+0x8],rbx
   1400169e1:	mov    QWORD PTR [rax+0x18],rsi
   1400169e5:	mov    QWORD PTR [rax+0x20],rdi
   1400169e9:	mov    rsi,rdx
   1400169ec:	mov    rdi,rcx
   1400169ef:	xor    ebx,ebx
   1400169f1:	mov    QWORD PTR [rsp+0x48],rbx
   1400169f6:	test   rdx,rdx
   1400169f9:	je     0x140016a19
   1400169fb:	cmp    rdx,0xffffffffffffffff
   1400169ff:	ja     0x140016a13
   140016a01:	mov    rcx,rdx
   140016a04:	call   0x140023f10
   140016a09:	mov    rbx,rax
   140016a0c:	mov    QWORD PTR [rsp+0x48],rax
   140016a11:	jmp    0x140016a19
   140016a13:	call   0x14000203c
   140016a18:	nop
   140016a19:	mov    r8,QWORD PTR [rdi+0x8]
   140016a1d:	sub    r8,QWORD PTR [rdi]
   140016a20:	mov    rdx,QWORD PTR [rdi]
   140016a23:	mov    rcx,rbx
   140016a26:	call   QWORD PTR [rip+0x1ba74]        # 0x1400324a0
   140016a2c:	nop
   140016a2d:	mov    rcx,QWORD PTR [rdi]
   140016a30:	mov    r14,QWORD PTR [rdi+0x8]
   140016a34:	sub    r14,rcx
   140016a37:	test   rcx,rcx
   140016a3a:	je     0x140016a42
   140016a3c:	call   QWORD PTR [rip+0x1bb86]        # 0x1400325c8
   140016a42:	lea    rax,[rbx+rsi*1]
   140016a46:	mov    QWORD PTR [rdi+0x10],rax
   140016a4a:	lea    rax,[rbx+r14*1]
   140016a4e:	mov    QWORD PTR [rdi+0x8],rax
   140016a52:	mov    QWORD PTR [rdi],rbx
   140016a55:	mov    rbx,QWORD PTR [rsp+0x40]
   140016a5a:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a5f:	mov    rdi,QWORD PTR [rsp+0x58]
   140016a64:	add    rsp,0x30
   140016a68:	pop    r14
   140016a6a:	ret    
   140016a6b:	int3   
   140016a6c:	int3   
   140016a6d:	int3   
   140016a6e:	int3   
   140016a6f:	int3   
   140016a70:	int3   
   140016a71:	int3   
   140016a72:	int3   
   140016a73:	int3   
   140016a74:	mov    QWORD PTR [rsp+0x8],rbx
   140016a79:	push   rdi
   140016a7a:	sub    rsp,0x20
   140016a7e:	mov    rax,QWORD PTR [rcx+0x20]
   140016a82:	mov    rbx,rcx
   140016a85:	test   rax,rax
   140016a88:	je     0x140016a9f
   140016a8a:	test   rax,rax
   140016a8d:	je     0x140016a9b
   140016a8f:	sub    rax,0x1
   140016a93:	jne    0x140016a8a
   140016a95:	and    QWORD PTR [rcx+0x18],rax
   140016a99:	jmp    0x140016a8a
   140016a9b:	mov    QWORD PTR [rcx+0x20],rax
   140016a9f:	mov    rdi,QWORD PTR [rcx+0x10]
   140016aa3:	jmp    0x140016abb
   140016aa5:	mov    rax,QWORD PTR [rbx+0x8]
   140016aa9:	dec    rdi
   140016aac:	mov    rcx,QWORD PTR [rax+rdi*8]
   140016ab0:	test   rcx,rcx
   140016ab3:	je     0x140016abb
   140016ab5:	call   QWORD PTR [rip+0x1bb0d]        # 0x1400325c8
   140016abb:	test   rdi,rdi
   140016abe:	jne    0x140016aa5
   140016ac0:	mov    rcx,QWORD PTR [rbx+0x8]
   140016ac4:	test   rcx,rcx
   140016ac7:	je     0x140016acf
   140016ac9:	call   QWORD PTR [rip+0x1baf9]        # 0x1400325c8
   140016acf:	mov    rcx,QWORD PTR [rbx]
   140016ad2:	and    QWORD PTR [rbx+0x10],0x0
   140016ad7:	and    QWORD PTR [rbx+0x8],0x0
   140016adc:	call   QWORD PTR [rip+0x1bae6]        # 0x1400325c8
   140016ae2:	and    QWORD PTR [rbx],0x0
   140016ae6:	mov    rbx,QWORD PTR [rsp+0x30]
   140016aeb:	add    rsp,0x20
   140016aef:	pop    rdi
   140016af0:	ret    
   140016af1:	int3   
   140016af2:	int3   
   140016af3:	int3   
   140016af4:	int3   
   140016af5:	int3   
   140016af6:	int3   
   140016af7:	int3   
   140016af8:	mov    rax,QWORD PTR [rcx]
   140016afb:	mov    r8,QWORD PTR [rcx+0x18]
   140016aff:	and    QWORD PTR [rdx+0x8],0x0
   140016b04:	mov    QWORD PTR [rdx],rax
   140016b07:	mov    rax,rdx
   140016b0a:	mov    QWORD PTR [rdx+0x10],r8
   140016b0e:	ret    
   140016b0f:	int3   
   140016b10:	int3   
   140016b11:	int3   
   140016b12:	int3   
   140016b13:	int3   
   140016b14:	int3   
   140016b15:	int3   
   140016b16:	int3   
   140016b17:	int3   
   140016b18:	mov    rax,QWORD PTR [rcx]
   140016b1b:	mov    r8,QWORD PTR [rcx+0x20]
   140016b1f:	add    r8,QWORD PTR [rcx+0x18]
   140016b23:	and    QWORD PTR [rdx+0x8],0x0
   140016b28:	mov    QWORD PTR [rdx],rax
   140016b2b:	mov    rax,rdx
   140016b2e:	mov    QWORD PTR [rdx+0x10],r8
   140016b32:	ret    
   140016b33:	int3   
   140016b34:	int3   
   140016b35:	int3   
   140016b36:	int3   
   140016b37:	int3   
   140016b38:	int3   
   140016b39:	int3   
   140016b3a:	int3   
   140016b3b:	int3   
   140016b3c:	mov    r11,rsp
   140016b3f:	mov    QWORD PTR [r11+0x10],rbx
   140016b43:	mov    QWORD PTR [r11+0x18],rsi
   140016b47:	mov    QWORD PTR [r11+0x20],rdi
   140016b4b:	push   r14
   140016b4d:	sub    rsp,0x20
   140016b51:	mov    rax,QWORD PTR [rcx]
   140016b54:	xor    edi,edi
   140016b56:	mov    r14,r8
   140016b59:	mov    rbx,rdx
   140016b5c:	mov    rsi,rcx
   140016b5f:	test   rax,rax
   140016b62:	je     0x140016b87
   140016b64:	mov    rax,QWORD PTR [rax]
   140016b67:	test   rax,rax
   140016b6a:	jne    0x140016b84
   140016b6c:	lea    edx,[rdi+0x3]
   140016b6f:	lea    rcx,[r11+0x8]
   140016b73:	call   0x14002d8a4
   140016b78:	lea    rcx,[rsp+0x30]
   140016b7d:	call   0x14002d934
   140016b82:	jmp    0x140016b87
   140016b84:	mov    rdi,QWORD PTR [rax]
   140016b87:	mov    rsi,QWORD PTR [rsi+0x10]
   140016b8b:	and    QWORD PTR [rbx],0x0
   140016b8f:	add    rsi,r14
   140016b92:	and    QWORD PTR [rbx+0x8],0x0
   140016b97:	test   rdi,rdi
   140016b9a:	je     0x140016bc3
   140016b9c:	mov    rax,QWORD PTR [rdi]
   140016b9f:	test   rax,rax
   140016ba2:	jne    0x140016bbd
   140016ba4:	lea    edx,[rax+0x3]
   140016ba7:	lea    rcx,[rsp+0x30]
   140016bac:	call   0x14002d8a4
   140016bb1:	lea    rcx,[rsp+0x30]
   140016bb6:	call   0x14002d934
   140016bbb:	jmp    0x140016bc3
   140016bbd:	mov    rax,QWORD PTR [rax]
   140016bc0:	mov    QWORD PTR [rbx],rax
   140016bc3:	mov    rdi,QWORD PTR [rsp+0x48]
   140016bc8:	mov    rax,rbx
   140016bcb:	mov    QWORD PTR [rbx+0x10],rsi
   140016bcf:	mov    rbx,QWORD PTR [rsp+0x38]
   140016bd4:	mov    rsi,QWORD PTR [rsp+0x40]
   140016bd9:	add    rsp,0x20
   140016bdd:	pop    r14
   140016bdf:	ret    
   140016be0:	int3   
   140016be1:	int3   
   140016be2:	int3   
   140016be3:	int3   
   140016be4:	int3   
   140016be5:	int3   
   140016be6:	int3   
   140016be7:	int3   
   140016be8:	mov    QWORD PTR [rsp+0x8],rbx
   140016bed:	mov    QWORD PTR [rsp+0x10],rbp
   140016bf2:	mov    QWORD PTR [rsp+0x18],rsi
   140016bf7:	push   rdi
   140016bf8:	push   r14
   140016bfa:	push   r15
   140016bfc:	sub    rsp,0x20
   140016c00:	mov    rbp,rcx
   140016c03:	mov    esi,0x1
   140016c08:	mov    rcx,QWORD PTR [rcx+0x10]
   140016c0c:	test   rcx,rcx
   140016c0f:	cmovne rsi,rcx
   140016c13:	mov    rax,rsi
   140016c16:	sub    rax,rcx
   140016c19:	cmp    rax,0x1
   140016c1d:	jb     0x140016c25
   140016c1f:	cmp    rsi,0x8
   140016c23:	jae    0x140016c40
   140016c25:	movabs rax,0xfffffffffffffff
   140016c2f:	sub    rax,rsi
   140016c32:	cmp    rax,rsi
   140016c35:	jb     0x140016d72
   140016c3b:	add    rsi,rsi
   140016c3e:	jmp    0x140016c13
   140016c40:	mov    rdi,QWORD PTR [rbp+0x18]
   140016c44:	sub    rsi,rcx
   140016c47:	shr    rdi,1
   140016c4a:	xor    r14d,r14d
   140016c4d:	add    rcx,rsi
   140016c50:	je     0x140016c71
   140016c52:	movabs rax,0x1fffffffffffffff
   140016c5c:	cmp    rcx,rax
   140016c5f:	ja     0x140016d6c
   140016c65:	shl    rcx,0x3
   140016c69:	call   0x140023f10
   140016c6e:	mov    r14,rax
   140016c71:	mov    rax,QWORD PTR [rbp+0x8]
   140016c75:	mov    r15,rdi
   140016c78:	mov    rbx,QWORD PTR [rbp+0x10]
   140016c7c:	shl    rbx,0x3
   140016c80:	shl    r15,0x3
   140016c84:	lea    rdx,[rax+r15*1]
   140016c88:	sub    rbx,rdx
   140016c8b:	lea    rcx,[r15+r14*1]
   140016c8f:	add    rbx,rax
   140016c92:	and    rbx,0xfffffffffffffff8
   140016c96:	mov    r8,rbx
   140016c99:	call   QWORD PTR [rip+0x1b801]        # 0x1400324a0
   140016c9f:	mov    rdx,QWORD PTR [rbp+0x8]
   140016ca3:	add    rax,rbx
   140016ca6:	mov    rcx,rax
   140016ca9:	cmp    rdi,rsi
   140016cac:	ja     0x140016cf1
   140016cae:	mov    rbx,rdx
   140016cb1:	sub    rbx,rdx
   140016cb4:	add    rbx,r15
   140016cb7:	mov    r15,rsi
   140016cba:	and    rbx,0xfffffffffffffff8
   140016cbe:	mov    r8,rbx
   140016cc1:	call   QWORD PTR [rip+0x1b7d9]        # 0x1400324a0
   140016cc7:	add    rax,rbx
   140016cca:	sub    r15,rdi
   140016ccd:	je     0x140016ce0
   140016ccf:	shl    r15,0x3
   140016cd3:	xor    edx,edx
   140016cd5:	mov    r8,r15
   140016cd8:	mov    rcx,rax
   140016cdb:	call   0x14002e2ce
   140016ce0:	test   rdi,rdi
   140016ce3:	je     0x140016d3c
   140016ce5:	shl    rdi,0x3
   140016ce9:	mov    rcx,r14
   140016cec:	mov    r8,rdi
   140016cef:	jmp    0x140016d35
   140016cf1:	mov    rdi,rsi
   140016cf4:	shl    rdi,0x3
   140016cf8:	mov    r8,rdi
   140016cfb:	and    r8,0xfffffffffffffff8
   140016cff:	call   QWORD PTR [rip+0x1b79b]        # 0x1400324a0
   140016d05:	mov    rbx,QWORD PTR [rbp+0x8]
   140016d09:	mov    rcx,r14
   140016d0c:	lea    rdx,[rdi+rbx*1]
   140016d10:	sub    rbx,rdx
   140016d13:	add    rbx,r15
   140016d16:	and    rbx,0xfffffffffffffff8
   140016d1a:	mov    r8,rbx
   140016d1d:	call   QWORD PTR [rip+0x1b77d]        # 0x1400324a0
   140016d23:	add    rax,rbx
   140016d26:	test   rsi,rsi
   140016d29:	je     0x140016d3c
   140016d2b:	mov    r8,rsi
   140016d2e:	mov    rcx,rax
   140016d31:	shl    r8,0x3
   140016d35:	xor    edx,edx
   140016d37:	call   0x14002e2ce
   140016d3c:	mov    rcx,QWORD PTR [rbp+0x8]
   140016d40:	test   rcx,rcx
   140016d43:	je     0x140016d4b
   140016d45:	call   QWORD PTR [rip+0x1b87d]        # 0x1400325c8
   140016d4b:	add    QWORD PTR [rbp+0x10],rsi
   140016d4f:	mov    rsi,QWORD PTR [rsp+0x50]
   140016d54:	mov    rbx,QWORD PTR [rsp+0x40]
   140016d59:	mov    QWORD PTR [rbp+0x8],r14
   140016d5d:	mov    rbp,QWORD PTR [rsp+0x48]
   140016d62:	add    rsp,0x20
   140016d66:	pop    r15
   140016d68:	pop    r14
   140016d6a:	pop    rdi
   140016d6b:	ret    
   140016d6c:	call   0x14000203c
   140016d71:	int3   
   140016d72:	call   0x140016d80
   140016d77:	int3   
   140016d78:	int3   
   140016d79:	int3   
   140016d7a:	int3   
   140016d7b:	int3   
   140016d7c:	int3   
   140016d7d:	int3   
   140016d7e:	int3   
   140016d7f:	int3   
   140016d80:	sub    rsp,0x28
   140016d84:	lea    rcx,[rip+0x20bf5]        # 0x140037980
   140016d8b:	call   0x14002d7f8
   140016d90:	int3   
   140016d91:	int3   
   140016d92:	int3   
   140016d93:	int3   
   140016d94:	int3   
   140016d95:	int3   
   140016d96:	int3   
   140016d97:	int3   
   140016d98:	rex push rbp
   140016d9a:	push   rbx
   140016d9b:	mov    rbp,rsp
   140016d9e:	sub    rsp,0x48
   140016da2:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140016daa:	and    QWORD PTR [rbp-0x10],0x0
   140016daf:	and    QWORD PTR [rbp+0x30],0x0
   140016db4:	lea    rdx,[rbp+0x30]
   140016db8:	lea    rcx,[rip+0x20c89]        # 0x140037a48
   140016dbf:	call   QWORD PTR [rip+0x1b66b]        # 0x140032430
   140016dc5:	test   eax,eax
   140016dc7:	jns    0x140016dd1
   140016dc9:	mov    ecx,eax
   140016dcb:	call   0x140029d64
   140016dd0:	int3   
   140016dd1:	and    DWORD PTR [rbp+0x18],0x0
   140016dd5:	and    DWORD PTR [rbp+0x28],0x0
   140016dd9:	mov    DWORD PTR [rbp+0x20],0x4
   140016de0:	and    QWORD PTR [rsp+0x28],0x0
   140016de6:	lea    rax,[rbp+0x28]
   140016dea:	mov    QWORD PTR [rsp+0x20],rax
   140016def:	lea    r9,[rbp+0x20]
   140016df3:	lea    r8,[rbp+0x18]
   140016df7:	lea    rdx,[rip+0x20c72]        # 0x140037a70
   140016dfe:	mov    rcx,QWORD PTR [rbp+0x30]
   140016e02:	call   QWORD PTR [rip+0x1b620]        # 0x140032428
   140016e08:	test   eax,eax
   140016e0a:	js     0x140016e3c
   140016e0c:	cmp    DWORD PTR [rbp+0x18],0x1
   140016e10:	jbe    0x140016e19
   140016e12:	mov    eax,0x8007065d
   140016e17:	jmp    0x140016e3c
   140016e19:	cmp    DWORD PTR [rbp+0x20],0x0
   140016e1d:	jne    0x140016e23
   140016e1f:	xor    eax,eax
   140016e21:	jmp    0x140016e26
   140016e23:	mov    eax,DWORD PTR [rbp+0x28]
   140016e26:	mov    ebx,eax
   140016e28:	mov    rcx,QWORD PTR [rbp+0x30]
   140016e2c:	test   rcx,rcx
   140016e2f:	je     0x140016e37
   140016e31:	call   QWORD PTR [rip+0x1b5b9]        # 0x1400323f0
   140016e37:	mov    rax,rbx
   140016e3a:	jmp    0x140016e44
   140016e3c:	mov    ecx,eax
   140016e3e:	call   0x140029d64
   140016e43:	nop
   140016e44:	add    rsp,0x48
   140016e48:	pop    rbx
   140016e49:	pop    rbp
   140016e4a:	ret    
   140016e4b:	int3   
   140016e4c:	int3   
   140016e4d:	int3   
   140016e4e:	int3   
   140016e4f:	int3   
   140016e50:	int3   
   140016e51:	int3   
   140016e52:	int3   
   140016e53:	int3   
   140016e54:	rex push rbp
   140016e56:	push   rbx
   140016e57:	mov    rbp,rsp
   140016e5a:	sub    rsp,0x48
   140016e5e:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140016e66:	and    QWORD PTR [rbp-0x10],0x0
   140016e6b:	and    QWORD PTR [rbp+0x30],0x0
   140016e70:	lea    rdx,[rbp+0x30]
   140016e74:	lea    rcx,[rip+0x20c15]        # 0x140037a90
   140016e7b:	call   QWORD PTR [rip+0x1b5af]        # 0x140032430
   140016e81:	test   eax,eax
   140016e83:	jns    0x140016e8d
   140016e85:	mov    ecx,eax
   140016e87:	call   0x140029d64
   140016e8c:	int3   
   140016e8d:	and    DWORD PTR [rbp+0x18],0x0
   140016e91:	and    DWORD PTR [rbp+0x28],0x0
   140016e95:	mov    DWORD PTR [rbp+0x20],0x4
   140016e9c:	and    QWORD PTR [rsp+0x28],0x0
   140016ea2:	lea    rax,[rbp+0x28]
   140016ea6:	mov    QWORD PTR [rsp+0x20],rax
   140016eab:	lea    r9,[rbp+0x20]
   140016eaf:	lea    r8,[rbp+0x18]
   140016eb3:	lea    rdx,[rip+0x20be6]        # 0x140037aa0
   140016eba:	mov    rcx,QWORD PTR [rbp+0x30]
   140016ebe:	call   QWORD PTR [rip+0x1b564]        # 0x140032428
   140016ec4:	test   eax,eax
   140016ec6:	js     0x140016ef5
   140016ec8:	cmp    DWORD PTR [rbp+0x18],0x1
   140016ecc:	jbe    0x140016ed5
   140016ece:	mov    eax,0x8007065d
   140016ed3:	jmp    0x140016ef5
   140016ed5:	cmp    DWORD PTR [rbp+0x20],0x0
   140016ed9:	jne    0x140016edf
   140016edb:	xor    ebx,ebx
   140016edd:	jmp    0x140016ee2
   140016edf:	mov    ebx,DWORD PTR [rbp+0x28]
   140016ee2:	mov    rcx,QWORD PTR [rbp+0x30]
   140016ee6:	test   rcx,rcx
   140016ee9:	je     0x140016ef1
   140016eeb:	call   QWORD PTR [rip+0x1b4ff]        # 0x1400323f0
   140016ef1:	mov    eax,ebx
   140016ef3:	jmp    0x140016efd
   140016ef5:	mov    ecx,eax
   140016ef7:	call   0x140029d64
   140016efc:	nop
   140016efd:	add    rsp,0x48
   140016f01:	pop    rbx
   140016f02:	pop    rbp
   140016f03:	ret    
   140016f04:	int3   
   140016f05:	int3   
   140016f06:	int3   
   140016f07:	int3   
   140016f08:	int3   
   140016f09:	int3   
   140016f0a:	int3   
   140016f0b:	int3   
   140016f0c:	mov    rax,rsp
   140016f0f:	push   rbp
   140016f10:	lea    rbp,[rax-0x5f]
   140016f14:	sub    rsp,0xa0
   140016f1b:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   140016f23:	mov    QWORD PTR [rax+0x10],rbx
   140016f27:	mov    QWORD PTR [rax+0x18],rsi
   140016f2b:	mov    QWORD PTR [rax+0x20],rdi
   140016f2f:	mov    rax,QWORD PTR [rip+0x340ea]        # 0x14004b020
   140016f36:	xor    rax,rsp
   140016f39:	mov    QWORD PTR [rbp+0x47],rax
   140016f3d:	mov    rbx,rcx
   140016f40:	xor    esi,esi
   140016f42:	mov    DWORD PTR [rbp+0x7],esi
   140016f45:	mov    QWORD PTR [rbp-0x1],rsi
   140016f49:	mov    QWORD PTR [rbp-0x11],rsi
   140016f4d:	lea    rdx,[rbp-0x11]
   140016f51:	lea    rcx,[rip+0x20b38]        # 0x140037a90
   140016f58:	call   QWORD PTR [rip+0x1b4d2]        # 0x140032430
   140016f5e:	test   eax,eax
   140016f60:	jns    0x140016f6a
   140016f62:	mov    ecx,eax
   140016f64:	call   0x140029d64
   140016f69:	int3   
   140016f6a:	mov    QWORD PTR [rbp+0x17],rsi
   140016f6e:	mov    QWORD PTR [rbp-0x19],rsi
   140016f72:	mov    DWORD PTR [rbp-0x1],0x3
   140016f79:	mov    DWORD PTR [rbp-0x9],esi
   140016f7c:	mov    QWORD PTR [rsp+0x28],rsi
   140016f81:	lea    rax,[rbp-0x19]
   140016f85:	mov    QWORD PTR [rsp+0x20],rax
   140016f8a:	lea    r9,[rbp-0x9]
   140016f8e:	lea    r8,[rbp-0x1]
   140016f92:	lea    rdx,[rip+0x20b27]        # 0x140037ac0
   140016f99:	mov    rcx,QWORD PTR [rbp-0x11]
   140016f9d:	call   QWORD PTR [rip+0x1b47d]        # 0x140032420
   140016fa3:	test   eax,eax
   140016fa5:	jns    0x140016faf
   140016fa7:	mov    ecx,eax
   140016fa9:	call   0x140029d64
   140016fae:	int3   
   140016faf:	mov    rdx,QWORD PTR [rbp-0x19]
   140016fb3:	lea    rcx,[rbp+0x1f]
   140016fb7:	call   0x14001781c
   140016fbc:	mov    rdi,rax
   140016fbf:	mov    QWORD PTR [rbx+0x18],0x7
   140016fc7:	mov    QWORD PTR [rbx+0x10],rsi
   140016fcb:	mov    WORD PTR [rbx],si
   140016fce:	cmp    rbx,rax
   140016fd1:	je     0x140016ffe
   140016fd3:	mov    rdx,rax
   140016fd6:	mov    rcx,rbx
   140016fd9:	call   0x14000db60
   140016fde:	mov    rcx,QWORD PTR [rbx+0x10]
   140016fe2:	mov    rax,QWORD PTR [rdi+0x10]
   140016fe6:	mov    QWORD PTR [rbx+0x10],rax
   140016fea:	mov    QWORD PTR [rdi+0x10],rcx
   140016fee:	mov    rcx,QWORD PTR [rbx+0x18]
   140016ff2:	mov    rax,QWORD PTR [rdi+0x18]
   140016ff6:	mov    QWORD PTR [rbx+0x18],rax
   140016ffa:	mov    QWORD PTR [rdi+0x18],rcx
   140016ffe:	cmp    QWORD PTR [rbp+0x37],0x8
   140017003:	jb     0x14001700f
   140017005:	mov    rcx,QWORD PTR [rbp+0x1f]
   140017009:	call   QWORD PTR [rip+0x1b5b9]        # 0x1400325c8
   14001700f:	mov    QWORD PTR [rbp+0x37],0x7
   140017017:	mov    QWORD PTR [rbp+0x2f],rsi
   14001701b:	mov    WORD PTR [rbp+0x1f],si
   14001701f:	mov    rcx,QWORD PTR [rbp-0x19]
   140017023:	test   rcx,rcx
   140017026:	je     0x14001702f
   140017028:	call   QWORD PTR [rip+0x1b41a]        # 0x140032448
   14001702e:	nop
   14001702f:	mov    rcx,QWORD PTR [rbp-0x11]
   140017033:	test   rcx,rcx
   140017036:	je     0x14001703e
   140017038:	call   QWORD PTR [rip+0x1b3b2]        # 0x1400323f0
   14001703e:	mov    rax,rbx
   140017041:	mov    rcx,QWORD PTR [rbp+0x47]
   140017045:	xor    rcx,rsp
   140017048:	call   0x14002dd00
   14001704d:	lea    r11,[rsp+0xa0]
   140017055:	mov    rbx,QWORD PTR [r11+0x18]
   140017059:	mov    rsi,QWORD PTR [r11+0x20]
   14001705d:	mov    rdi,QWORD PTR [r11+0x28]
   140017061:	mov    rsp,r11
   140017064:	pop    rbp
   140017065:	ret    
   140017066:	int3   
   140017067:	int3   
   140017068:	int3   
   140017069:	int3   
   14001706a:	int3   
   14001706b:	int3   
   14001706c:	rex push rbp
   14001706e:	push   rbx
   14001706f:	push   rdi
   140017070:	mov    rbp,rsp
   140017073:	sub    rsp,0x40
   140017077:	xor    ebx,ebx
   140017079:	lea    rdx,[rbp+0x38]
   14001707d:	and    QWORD PTR [rbp-0x10],rbx
   140017081:	lea    rcx,[rip+0x20a08]        # 0x140037a90
   140017088:	and    QWORD PTR [rbp+0x38],rbx
   14001708c:	call   QWORD PTR [rip+0x1b39e]        # 0x140032430
   140017092:	mov    rcx,QWORD PTR [rbp+0x38]
   140017096:	mov    edi,eax
   140017098:	test   eax,eax
   14001709a:	js     0x1400170e1
   14001709c:	and    QWORD PTR [rsp+0x28],rbx
   1400170a1:	lea    rax,[rbp+0x20]
   1400170a5:	and    DWORD PTR [rbp+0x28],ebx
   1400170a8:	lea    r9,[rbp+0x30]
   1400170ac:	and    DWORD PTR [rbp+0x20],ebx
   1400170af:	lea    r8,[rbp+0x28]
   1400170b3:	lea    rdx,[rip+0x209e6]        # 0x140037aa0
   1400170ba:	mov    QWORD PTR [rsp+0x20],rax
   1400170bf:	mov    DWORD PTR [rbp+0x30],0x4
   1400170c6:	call   QWORD PTR [rip+0x1b35c]        # 0x140032428
   1400170cc:	mov    edi,eax
   1400170ce:	test   eax,eax
   1400170d0:	js     0x1400170dd
   1400170d2:	cmp    DWORD PTR [rbp+0x28],0x1
   1400170d6:	jbe    0x1400170f2
   1400170d8:	mov    edi,0x8007065d
   1400170dd:	mov    rcx,QWORD PTR [rbp+0x38]
   1400170e1:	test   rcx,rcx
   1400170e4:	je     0x1400170ec
   1400170e6:	call   QWORD PTR [rip+0x1b304]        # 0x1400323f0
   1400170ec:	test   edi,edi
   1400170ee:	jns    0x14001714a
   1400170f0:	jmp    0x140017154
   1400170f2:	mov    eax,DWORD PTR [rbp+0x30]
   1400170f5:	neg    eax
   1400170f7:	sbb    ebx,ebx
   1400170f9:	and    ebx,DWORD PTR [rbp+0x20]
   1400170fc:	mov    DWORD PTR [rbp+0x20],ebx
   1400170ff:	cmp    ebx,0x3
   140017102:	jb     0x140017137
   140017104:	mov    rcx,QWORD PTR [rip+0x33f6d]        # 0x14004b078
   14001710b:	lea    rax,[rip+0x33f66]        # 0x14004b078
   140017112:	cmp    rcx,rax
   140017115:	je     0x140017135
   140017117:	test   BYTE PTR [rcx+0x1c],0x1
   14001711b:	je     0x140017135
   14001711d:	mov    rcx,QWORD PTR [rcx+0x10]
   140017121:	lea    r8,[rip+0x261b8]        # 0x14003d2e0
   140017128:	mov    edx,0xc
   14001712d:	mov    r9d,ebx
   140017130:	call   0x140001f70
   140017135:	xor    ebx,ebx
   140017137:	mov    rcx,QWORD PTR [rbp+0x38]
   14001713b:	test   rcx,rcx
   14001713e:	je     0x140017146
   140017140:	call   QWORD PTR [rip+0x1b2aa]        # 0x1400323f0
   140017146:	xor    edi,edi
   140017148:	jmp    0x1400170ec
   14001714a:	mov    eax,ebx
   14001714c:	add    rsp,0x40
   140017150:	pop    rdi
   140017151:	pop    rbx
   140017152:	pop    rbp
   140017153:	ret    
   140017154:	mov    ecx,edi
   140017156:	call   0x140029d64
   14001715b:	int3   
   14001715c:	int3   
   14001715d:	int3   
   14001715e:	int3   
   14001715f:	int3   
   140017160:	int3   
   140017161:	int3   
   140017162:	int3   
   140017163:	int3   
   140017164:	rex push rbp
   140017166:	push   rbx
   140017167:	mov    rbp,rsp
   14001716a:	sub    rsp,0x48
   14001716e:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140017176:	and    QWORD PTR [rbp-0x10],0x0
   14001717b:	and    QWORD PTR [rbp+0x30],0x0
   140017180:	lea    rdx,[rbp+0x30]
   140017184:	lea    rcx,[rip+0x208bd]        # 0x140037a48
   14001718b:	call   QWORD PTR [rip+0x1b29f]        # 0x140032430
   140017191:	test   eax,eax
   140017193:	jns    0x14001719d
   140017195:	mov    ecx,eax
   140017197:	call   0x140029d64
   14001719c:	int3   
   14001719d:	and    DWORD PTR [rbp+0x18],0x0
   1400171a1:	and    DWORD PTR [rbp+0x28],0x0
   1400171a5:	mov    DWORD PTR [rbp+0x20],0x4
   1400171ac:	and    QWORD PTR [rsp+0x28],0x0
   1400171b2:	lea    rax,[rbp+0x28]
   1400171b6:	mov    QWORD PTR [rsp+0x20],rax
   1400171bb:	lea    r9,[rbp+0x20]
   1400171bf:	lea    r8,[rbp+0x18]
   1400171c3:	lea    rdx,[rip+0x20926]        # 0x140037af0
   1400171ca:	mov    rcx,QWORD PTR [rbp+0x30]
   1400171ce:	call   QWORD PTR [rip+0x1b254]        # 0x140032428
   1400171d4:	test   eax,eax
   1400171d6:	js     0x140017205
   1400171d8:	cmp    DWORD PTR [rbp+0x18],0x1
   1400171dc:	jbe    0x1400171e5
   1400171de:	mov    eax,0x8007065d
   1400171e3:	jmp    0x140017205
   1400171e5:	cmp    DWORD PTR [rbp+0x20],0x0
   1400171e9:	jne    0x1400171ef
   1400171eb:	xor    ebx,ebx
   1400171ed:	jmp    0x1400171f2
   1400171ef:	mov    ebx,DWORD PTR [rbp+0x28]
   1400171f2:	mov    rcx,QWORD PTR [rbp+0x30]
   1400171f6:	test   rcx,rcx
   1400171f9:	je     0x140017201
   1400171fb:	call   QWORD PTR [rip+0x1b1ef]        # 0x1400323f0
   140017201:	mov    eax,ebx
   140017203:	jmp    0x14001720d
   140017205:	mov    ecx,eax
   140017207:	call   0x140029d64
   14001720c:	nop
   14001720d:	add    rsp,0x48
   140017211:	pop    rbx
   140017212:	pop    rbp
   140017213:	ret    
   140017214:	int3   
   140017215:	int3   
   140017216:	int3   
   140017217:	int3   
   140017218:	int3   
   140017219:	int3   
   14001721a:	int3   
   14001721b:	int3   
   14001721c:	mov    rax,rsp
   14001721f:	push   rsi
   140017220:	push   r12
   140017222:	push   r13
   140017224:	push   r14
   140017226:	push   r15
   140017228:	sub    rsp,0x110
   14001722f:	mov    QWORD PTR [rax-0xb0],0xfffffffffffffffe
   14001723a:	mov    QWORD PTR [rax+0x18],rbx
   14001723e:	mov    rax,QWORD PTR [rip+0x33ddb]        # 0x14004b020
   140017245:	xor    rax,rsp
   140017248:	mov    QWORD PTR [rsp+0x108],rax
   140017250:	mov    r14,rdx
   140017253:	mov    rsi,rcx
   140017256:	mov    QWORD PTR [rsp+0x58],rcx
   14001725b:	and    QWORD PTR [rsp+0x38],0x0
   140017261:	and    QWORD PTR [rsp+0x50],0x0
   140017267:	lea    rdx,[rsp+0x50]
   14001726c:	mov    rcx,r14
   14001726f:	call   QWORD PTR [rip+0x1b1bb]        # 0x140032430
   140017275:	mov    ebx,eax
   140017277:	test   eax,eax
   140017279:	jns    0x1400172d4
   14001727b:	lea    rdx,[rip+0x33df6]        # 0x14004b078
   140017282:	mov    rcx,QWORD PTR [rip+0x33def]        # 0x14004b078
   140017289:	cmp    rcx,rdx
   14001728c:	je     0x1400172b0
   14001728e:	test   BYTE PTR [rcx+0x1c],0x1
   140017292:	je     0x1400172b0
   140017294:	mov    edx,0xc
   140017299:	mov    DWORD PTR [rsp+0x20],eax
   14001729d:	mov    r9,r14
   1400172a0:	lea    r8,[rip+0x20b31]        # 0x140037dd8
   1400172a7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400172ab:	call   0x140007264
   1400172b0:	mov    edx,ebx
   1400172b2:	lea    rcx,[rsp+0x90]
   1400172ba:	call   0x140002064
   1400172bf:	lea    rdx,[rip+0x31ec2]        # 0x140049188
   1400172c6:	lea    rcx,[rsp+0x90]
   1400172ce:	call   0x14002e2da
   1400172d3:	int3   
   1400172d4:	and    QWORD PTR [rsp+0x38],0x0
   1400172da:	and    QWORD PTR [rsp+0x40],0x0
   1400172e0:	lea    r9,[rsp+0x40]
   1400172e5:	xor    r8d,r8d
   1400172e8:	lea    edx,[r8+0x1]
   1400172ec:	mov    rcx,QWORD PTR [rsp+0x50]
   1400172f1:	call   QWORD PTR [rip+0x1b121]        # 0x140032418
   1400172f7:	mov    ebx,eax
   1400172f9:	test   eax,eax
   1400172fb:	jns    0x140017352
   1400172fd:	lea    rdx,[rip+0x33d74]        # 0x14004b078
   140017304:	mov    rcx,QWORD PTR [rip+0x33d6d]        # 0x14004b078
   14001730b:	cmp    rcx,rdx
   14001730e:	je     0x14001732e
   140017310:	test   BYTE PTR [rcx+0x1c],0x1
   140017314:	je     0x14001732e
   140017316:	mov    edx,0xd
   14001731b:	mov    r9d,eax
   14001731e:	lea    r8,[rip+0x20ab3]        # 0x140037dd8
   140017325:	mov    rcx,QWORD PTR [rcx+0x10]
   140017329:	call   0x140001f70
   14001732e:	mov    edx,ebx
   140017330:	lea    rcx,[rsp+0xb8]
   140017338:	call   0x140002064
   14001733d:	lea    rdx,[rip+0x31e44]        # 0x140049188
   140017344:	lea    rcx,[rsp+0xb8]
   14001734c:	call   0x14002e2da
   140017351:	int3   
   140017352:	movabs r12,0x1fffffffffffffff
   14001735c:	and    QWORD PTR [rsp+0x70],0x0
   140017362:	and    QWORD PTR [rsp+0x38],0x0
   140017368:	and    DWORD PTR [rsp+0x48],0x0
   14001736d:	and    QWORD PTR [rsp+0x28],0x0
   140017373:	and    QWORD PTR [rsp+0x20],0x0
   140017379:	xor    r9d,r9d
   14001737c:	lea    r8,[rsp+0x48]
   140017381:	lea    rdx,[rsp+0x38]
   140017386:	mov    rcx,QWORD PTR [rsp+0x40]
   14001738b:	call   QWORD PTR [rip+0x1b067]        # 0x1400323f8
   140017391:	mov    r14d,eax
   140017394:	cmp    eax,0x80070103
   140017399:	jne    0x1400173d6
   14001739b:	mov    rcx,QWORD PTR [rsp+0x38]
   1400173a0:	test   rcx,rcx
   1400173a3:	je     0x1400173ac
   1400173a5:	call   QWORD PTR [rip+0x1b09d]        # 0x140032448
   1400173ab:	nop
   1400173ac:	mov    rcx,QWORD PTR [rsp+0x40]
   1400173b1:	test   rcx,rcx
   1400173b4:	je     0x1400173bd
   1400173b6:	call   QWORD PTR [rip+0x1b02c]        # 0x1400323e8
   1400173bc:	nop
   1400173bd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400173c2:	test   rcx,rcx
   1400173c5:	je     0x140017649
   1400173cb:	call   QWORD PTR [rip+0x1b01f]        # 0x1400323f0
   1400173d1:	jmp    0x140017649
   1400173d6:	test   eax,eax
   1400173d8:	jns    0x140017430
   1400173da:	lea    rdx,[rip+0x33c97]        # 0x14004b078
   1400173e1:	mov    rcx,QWORD PTR [rip+0x33c90]        # 0x14004b078
   1400173e8:	cmp    rcx,rdx
   1400173eb:	je     0x14001740b
   1400173ed:	test   BYTE PTR [rcx+0x1c],0x1
   1400173f1:	je     0x14001740b
   1400173f3:	mov    edx,0xe
   1400173f8:	mov    r9d,eax
   1400173fb:	lea    r8,[rip+0x209d6]        # 0x140037dd8
   140017402:	mov    rcx,QWORD PTR [rcx+0x10]
   140017406:	call   0x140001f70
   14001740b:	mov    edx,r14d
   14001740e:	lea    rcx,[rsp+0xe0]
   140017416:	call   0x140002064
   14001741b:	lea    rdx,[rip+0x31d66]        # 0x140049188
   140017422:	lea    rcx,[rsp+0xe0]
   14001742a:	call   0x14002e2da
   14001742f:	nop
   140017430:	mov    rcx,QWORD PTR [rsp+0x38]
   140017435:	test   rcx,rcx
   140017438:	jne    0x140017443
   14001743a:	xor    ebx,ebx
   14001743c:	mov    QWORD PTR [rsp+0x30],rbx
   140017441:	jmp    0x140017461
   140017443:	call   QWORD PTR [rip+0x1af17]        # 0x140032360
   140017449:	mov    rbx,rax
   14001744c:	mov    QWORD PTR [rsp+0x30],rax
   140017451:	test   rax,rax
   140017454:	jne    0x140017461
   140017456:	mov    ecx,0x8007000e
   14001745b:	call   0x140005d50
   140017460:	nop
   140017461:	mov    rcx,QWORD PTR [rsi+0x8]
   140017465:	lea    rax,[rsp+0x30]
   14001746a:	cmp    rax,rcx
   14001746d:	jae    0x140017552
   140017473:	lea    rax,[rsp+0x30]
   140017478:	cmp    QWORD PTR [rsi],rax
   14001747b:	ja     0x140017552
   140017481:	lea    r15,[rsp+0x30]
   140017486:	sub    r15,QWORD PTR [rsi]
   140017489:	sar    r15,0x3
   14001748d:	mov    rdx,QWORD PTR [rsi+0x10]
   140017491:	cmp    rcx,rdx
   140017494:	jne    0x1400174f0
   140017496:	mov    rax,rdx
   140017499:	sub    rax,rcx
   14001749c:	sar    rax,0x3
   1400174a0:	cmp    rax,0x1
   1400174a4:	jae    0x1400174f0
   1400174a6:	sub    rcx,QWORD PTR [rsi]
   1400174a9:	sar    rcx,0x3
   1400174ad:	mov    rax,r12
   1400174b0:	sub    rax,rcx
   1400174b3:	cmp    rax,0x1
   1400174b7:	jae    0x1400174be
   1400174b9:	call   0x14000d388
   1400174be:	lea    r8,[rcx+0x1]
   1400174c2:	sub    rdx,QWORD PTR [rsi]
   1400174c5:	sar    rdx,0x3
   1400174c9:	mov    rcx,rdx
   1400174cc:	shr    rcx,1
   1400174cf:	mov    rax,r12
   1400174d2:	sub    rax,rcx
   1400174d5:	cmp    rax,rdx
   1400174d8:	jae    0x1400174de
   1400174da:	xor    edx,edx
   1400174dc:	jmp    0x1400174e1
   1400174de:	add    rdx,rcx
   1400174e1:	cmp    rdx,r8
   1400174e4:	cmovb  rdx,r8
   1400174e8:	mov    rcx,rsi
   1400174eb:	call   0x1400176b8
   1400174f0:	mov    r13,QWORD PTR [rsi]
   1400174f3:	mov    r12,QWORD PTR [rsi+0x8]
   1400174f7:	mov    QWORD PTR [rsp+0x68],r12
   1400174fc:	mov    QWORD PTR [rsp+0x60],r12
   140017501:	test   r12,r12
   140017504:	je     0x140017543
   140017506:	mov    rcx,QWORD PTR [r13+r15*8+0x0]
   14001750b:	test   rcx,rcx
   14001750e:	jne    0x140017514
   140017510:	xor    eax,eax
   140017512:	jmp    0x140017527
   140017514:	call   QWORD PTR [rip+0x1ae6e]        # 0x140032388
   14001751a:	mov    edx,eax
   14001751c:	mov    rcx,QWORD PTR [r13+r15*8+0x0]
   140017521:	call   QWORD PTR [rip+0x1ae41]        # 0x140032368
   140017527:	mov    QWORD PTR [r12],rax
   14001752b:	cmp    QWORD PTR [r13+r15*8+0x0],0x0
   140017531:	je     0x140017543
   140017533:	test   rax,rax
   140017536:	jne    0x140017543
   140017538:	mov    ecx,0x8007000e
   14001753d:	call   0x140005d50
   140017542:	nop
   140017543:	movabs r12,0x1fffffffffffffff
   14001754d:	jmp    0x1400175fd
   140017552:	mov    rdx,QWORD PTR [rsi+0x10]
   140017556:	cmp    rcx,rdx
   140017559:	jne    0x1400175b5
   14001755b:	mov    rax,rdx
   14001755e:	sub    rax,rcx
   140017561:	sar    rax,0x3
   140017565:	cmp    rax,0x1
   140017569:	jae    0x1400175b5
   14001756b:	sub    rcx,QWORD PTR [rsi]
   14001756e:	sar    rcx,0x3
   140017572:	mov    rax,r12
   140017575:	sub    rax,rcx
   140017578:	cmp    rax,0x1
   14001757c:	jae    0x140017583
   14001757e:	call   0x14000d388
   140017583:	lea    r8,[rcx+0x1]
   140017587:	sub    rdx,QWORD PTR [rsi]
   14001758a:	sar    rdx,0x3
   14001758e:	mov    rcx,rdx
   140017591:	shr    rcx,1
   140017594:	mov    rax,r12
   140017597:	sub    rax,rcx
   14001759a:	cmp    rax,rdx
   14001759d:	jae    0x1400175a3
   14001759f:	xor    edx,edx
   1400175a1:	jmp    0x1400175a6
   1400175a3:	add    rdx,rcx
   1400175a6:	cmp    rdx,r8
   1400175a9:	cmovb  rdx,r8
   1400175ad:	mov    rcx,rsi
   1400175b0:	call   0x1400176b8
   1400175b5:	mov    r15,QWORD PTR [rsi+0x8]
   1400175b9:	mov    QWORD PTR [rsp+0x60],r15
   1400175be:	mov    QWORD PTR [rsp+0x68],r15
   1400175c3:	test   r15,r15
   1400175c6:	je     0x1400175fd
   1400175c8:	test   rbx,rbx
   1400175cb:	jne    0x1400175d1
   1400175cd:	xor    eax,eax
   1400175cf:	jmp    0x1400175e5
   1400175d1:	mov    rcx,rbx
   1400175d4:	call   QWORD PTR [rip+0x1adae]        # 0x140032388
   1400175da:	mov    edx,eax
   1400175dc:	mov    rcx,rbx
   1400175df:	call   QWORD PTR [rip+0x1ad83]        # 0x140032368
   1400175e5:	mov    QWORD PTR [r15],rax
   1400175e8:	test   rbx,rbx
   1400175eb:	je     0x1400175fd
   1400175ed:	test   rax,rax
   1400175f0:	jne    0x1400175fd
   1400175f2:	mov    ecx,0x8007000e
   1400175f7:	call   0x140005d50
   1400175fc:	nop
   1400175fd:	add    QWORD PTR [rsi+0x8],0x8
   140017602:	mov    rcx,rbx
   140017605:	call   QWORD PTR [rip+0x1ad45]        # 0x140032350
   14001760b:	nop
   14001760c:	jmp    0x140017622
   14001760e:	mov    rsi,QWORD PTR [rsp+0x58]
   140017613:	mov    r14d,DWORD PTR [rsp+0x30]
   140017618:	movabs r12,0x1fffffffffffffff
   140017622:	test   r14d,r14d
   140017625:	jns    0x140017630
   140017627:	mov    ecx,r14d
   14001762a:	call   0x14000218c
   14001762f:	nop
   140017630:	mov    rcx,QWORD PTR [rsp+0x38]
   140017635:	test   rcx,rcx
   140017638:	je     0x14001735c
   14001763e:	call   QWORD PTR [rip+0x1ae04]        # 0x140032448
   140017644:	jmp    0x14001735c
   140017649:	mov    rcx,QWORD PTR [rsp+0x108]
   140017651:	xor    rcx,rsp
   140017654:	call   0x14002dd00
   140017659:	mov    rbx,QWORD PTR [rsp+0x150]
   140017661:	add    rsp,0x110
   140017668:	pop    r15
   14001766a:	pop    r14
   14001766c:	pop    r13
   14001766e:	pop    r12
   140017670:	pop    rsi
   140017671:	ret    
   140017672:	int3   
   140017673:	int3   
   140017674:	int3   
   140017675:	int3   
   140017676:	int3   
   140017677:	int3   
   140017678:	sub    rsp,0x28
   14001767c:	mov    rcx,QWORD PTR [rcx]
   14001767f:	test   rcx,rcx
   140017682:	je     0x14001768a
   140017684:	call   QWORD PTR [rip+0x1ad66]        # 0x1400323f0
   14001768a:	add    rsp,0x28
   14001768e:	ret    
   14001768f:	int3   
   140017690:	int3   
   140017691:	int3   
   140017692:	int3   
   140017693:	int3   
   140017694:	int3   
   140017695:	int3   
   140017696:	int3   
   140017697:	int3   
   140017698:	sub    rsp,0x28
   14001769c:	mov    rcx,QWORD PTR [rcx]
   14001769f:	test   rcx,rcx
   1400176a2:	je     0x1400176aa
   1400176a4:	call   QWORD PTR [rip+0x1ad3e]        # 0x1400323e8
   1400176aa:	add    rsp,0x28
   1400176ae:	ret    
   1400176af:	int3   
   1400176b0:	int3   
   1400176b1:	int3   
   1400176b2:	int3   
   1400176b3:	int3   
   1400176b4:	int3   
   1400176b5:	int3   
   1400176b6:	int3   
   1400176b7:	int3   
   1400176b8:	mov    rax,rsp
   1400176bb:	push   r12
   1400176bd:	push   r14
   1400176bf:	push   r15
   1400176c1:	sub    rsp,0x40
   1400176c5:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400176cd:	mov    QWORD PTR [rax+0x8],rbx
   1400176d1:	mov    QWORD PTR [rax+0x18],rsi
   1400176d5:	mov    QWORD PTR [rax+0x20],rdi
   1400176d9:	mov    r14,rdx
   1400176dc:	mov    rdi,rcx
   1400176df:	xor    ebx,ebx
   1400176e1:	mov    QWORD PTR [rsp+0x68],rbx
   1400176e6:	test   rdx,rdx
   1400176e9:	je     0x140017716
   1400176eb:	movabs rax,0x1fffffffffffffff
   1400176f5:	cmp    rdx,rax
   1400176f8:	ja     0x140017710
   1400176fa:	mov    rcx,rdx
   1400176fd:	shl    rcx,0x3
   140017701:	call   0x140023f10
   140017706:	mov    rbx,rax
   140017709:	mov    QWORD PTR [rsp+0x68],rax
   14001770e:	jmp    0x140017716
   140017710:	call   0x14000203c
   140017715:	nop
   140017716:	mov    r8,rbx
   140017719:	mov    rdx,QWORD PTR [rdi+0x8]
   14001771d:	mov    rcx,QWORD PTR [rdi]
   140017720:	call   0x14001778c
   140017725:	nop
   140017726:	mov    r12,QWORD PTR [rdi+0x8]
   14001772a:	mov    rsi,QWORD PTR [rdi]
   14001772d:	mov    r15,r12
   140017730:	sub    r15,rsi
   140017733:	sar    r15,0x3
   140017737:	test   rsi,rsi
   14001773a:	je     0x140017759
   14001773c:	jmp    0x14001774b
   14001773e:	mov    rcx,QWORD PTR [rsi]
   140017741:	call   QWORD PTR [rip+0x1ac09]        # 0x140032350
   140017747:	add    rsi,0x8
   14001774b:	cmp    rsi,r12
   14001774e:	jne    0x14001773e
   140017750:	mov    rcx,QWORD PTR [rdi]
   140017753:	call   QWORD PTR [rip+0x1ae6f]        # 0x1400325c8
   140017759:	lea    rax,[rbx+r14*8]
   14001775d:	mov    QWORD PTR [rdi+0x10],rax
   140017761:	lea    rax,[rbx+r15*8]
   140017765:	mov    QWORD PTR [rdi+0x8],rax
   140017769:	mov    QWORD PTR [rdi],rbx
   14001776c:	mov    rbx,QWORD PTR [rsp+0x60]
   140017771:	mov    rsi,QWORD PTR [rsp+0x70]
   140017776:	mov    rdi,QWORD PTR [rsp+0x78]
   14001777b:	add    rsp,0x40
   14001777f:	pop    r15
   140017781:	pop    r14
   140017783:	pop    r12
   140017785:	ret    
   140017786:	int3   
   140017787:	int3   
   140017788:	int3   
   140017789:	int3   
   14001778a:	int3   
   14001778b:	int3   
   14001778c:	mov    QWORD PTR [rsp+0x20],r9
   140017791:	mov    QWORD PTR [rsp+0x18],r8
   140017796:	push   rbx
   140017797:	push   rsi
   140017798:	push   rdi
   140017799:	sub    rsp,0x30
   14001779d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400177a6:	mov    rbx,r8
   1400177a9:	mov    rsi,rdx
   1400177ac:	mov    rdi,rcx
   1400177af:	mov    QWORD PTR [rsp+0x68],rbx
   1400177b4:	cmp    rdi,rsi
   1400177b7:	je     0x140017808
   1400177b9:	mov    QWORD PTR [rsp+0x50],rbx
   1400177be:	test   rbx,rbx
   1400177c1:	je     0x1400177f9
   1400177c3:	mov    rcx,QWORD PTR [rdi]
   1400177c6:	test   rcx,rcx
   1400177c9:	jne    0x1400177cf
   1400177cb:	xor    eax,eax
   1400177cd:	jmp    0x1400177e0
   1400177cf:	call   QWORD PTR [rip+0x1abb3]        # 0x140032388
   1400177d5:	mov    edx,eax
   1400177d7:	mov    rcx,QWORD PTR [rdi]
   1400177da:	call   QWORD PTR [rip+0x1ab88]        # 0x140032368
   1400177e0:	mov    QWORD PTR [rbx],rax
   1400177e3:	cmp    QWORD PTR [rdi],0x0
   1400177e7:	je     0x1400177f9
   1400177e9:	test   rax,rax
   1400177ec:	jne    0x1400177f9
   1400177ee:	mov    ecx,0x8007000e
   1400177f3:	call   0x140005d50
   1400177f8:	nop
   1400177f9:	add    rbx,0x8
   1400177fd:	mov    QWORD PTR [rsp+0x60],rbx
   140017802:	add    rdi,0x8
   140017806:	jmp    0x1400177b4
   140017808:	mov    rax,rbx
   14001780b:	add    rsp,0x30
   14001780f:	pop    rdi
   140017810:	pop    rsi
   140017811:	pop    rbx
   140017812:	ret    
   140017813:	int3   
   140017814:	int3   
   140017815:	int3   
   140017816:	int3   
   140017817:	int3   
   140017818:	int3   
   140017819:	int3   
   14001781a:	int3   
   14001781b:	int3   
   14001781c:	mov    QWORD PTR [rsp+0x8],rbx
   140017821:	mov    QWORD PTR [rsp+0x10],rbp
   140017826:	mov    QWORD PTR [rsp+0x18],rsi
   14001782b:	push   rdi
   14001782c:	sub    rsp,0x20
   140017830:	xor    ebp,ebp
   140017832:	mov    QWORD PTR [rcx+0x18],0x7
   14001783a:	mov    QWORD PTR [rcx+0x10],rbp
   14001783e:	mov    rsi,rdx
   140017841:	mov    WORD PTR [rcx],bp
   140017844:	mov    rbx,rcx
   140017847:	cmp    WORD PTR [rdx],bp
   14001784a:	jne    0x140017850
   14001784c:	mov    edi,ebp
   14001784e:	jmp    0x14001785d
   140017850:	or     rdi,0xffffffffffffffff
   140017854:	inc    rdi
   140017857:	cmp    WORD PTR [rdx+rdi*2],bp
   14001785b:	jne    0x140017854
   14001785d:	mov    rdx,QWORD PTR [rcx+0x18]
   140017861:	cmp    rdx,0x8
   140017865:	jb     0x14001786c
   140017867:	mov    rax,QWORD PTR [rcx]
   14001786a:	jmp    0x14001786f
   14001786c:	mov    rax,rcx
   14001786f:	cmp    rsi,rax
   140017872:	jb     0x1400178ad
   140017874:	cmp    rdx,0x8
   140017878:	jb     0x14001787d
   14001787a:	mov    rcx,QWORD PTR [rcx]
   14001787d:	lea    rcx,[rcx+rbp*2]
   140017881:	cmp    rcx,rsi
   140017884:	jbe    0x1400178ad
   140017886:	cmp    rdx,0x8
   14001788a:	jb     0x140017891
   14001788c:	mov    rax,QWORD PTR [rbx]
   14001788f:	jmp    0x140017894
   140017891:	mov    rax,rbx
   140017894:	sub    rsi,rax
   140017897:	mov    r9,rdi
   14001789a:	sar    rsi,1
   14001789d:	mov    rdx,rbx
   1400178a0:	mov    r8,rsi
   1400178a3:	mov    rcx,rbx
   1400178a6:	call   0x14000d7a0
   1400178ab:	jmp    0x14001792b
   1400178ad:	movabs rax,0x7ffffffffffffffe
   1400178b7:	cmp    rdi,rax
   1400178ba:	ja     0x140017943
   1400178c0:	cmp    rdx,rdi
   1400178c3:	jae    0x1400178d5
   1400178c5:	mov    r8,rbp
   1400178c8:	mov    rdx,rdi
   1400178cb:	mov    rcx,rbx
   1400178ce:	call   0x14000d918
   1400178d3:	jmp    0x1400178ef
   1400178d5:	test   rdi,rdi
   1400178d8:	jne    0x1400178f4
   1400178da:	mov    QWORD PTR [rbx+0x10],rbp
   1400178de:	cmp    rdx,0x8
   1400178e2:	jb     0x1400178e9
   1400178e4:	mov    rax,QWORD PTR [rbx]
   1400178e7:	jmp    0x1400178ec
   1400178e9:	mov    rax,rbx
   1400178ec:	mov    WORD PTR [rax],bp
   1400178ef:	test   rdi,rdi
   1400178f2:	je     0x14001792b
   1400178f4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400178f9:	jb     0x140017900
   1400178fb:	mov    rcx,QWORD PTR [rbx]
   1400178fe:	jmp    0x140017903
   140017900:	mov    rcx,rbx
   140017903:	test   rdi,rdi
   140017906:	je     0x140017914
   140017908:	lea    r8,[rdi+rdi*1]
   14001790c:	mov    rdx,rsi
   14001790f:	call   0x14002e2f2
   140017914:	cmp    QWORD PTR [rbx+0x18],0x8
   140017919:	mov    QWORD PTR [rbx+0x10],rdi
   14001791d:	jb     0x140017924
   14001791f:	mov    rax,QWORD PTR [rbx]
   140017922:	jmp    0x140017927
   140017924:	mov    rax,rbx
   140017927:	mov    WORD PTR [rax+rdi*2],bp
   14001792b:	mov    rbp,QWORD PTR [rsp+0x38]
   140017930:	mov    rax,rbx
   140017933:	mov    rbx,QWORD PTR [rsp+0x30]
   140017938:	mov    rsi,QWORD PTR [rsp+0x40]
   14001793d:	add    rsp,0x20
   140017941:	pop    rdi
   140017942:	ret    
   140017943:	call   0x140001d4c
   140017948:	int3   
   140017949:	int3   
   14001794a:	int3   
   14001794b:	int3   
   14001794c:	int3   
   14001794d:	int3   
   14001794e:	int3   
   14001794f:	int3   
   140017950:	lea    rax,[rip+0x204a1]        # 0x140037df8
   140017957:	ret    
   140017958:	int3   
   140017959:	int3   
   14001795a:	int3   
   14001795b:	int3   
   14001795c:	int3   
   14001795d:	int3   
   14001795e:	int3   
   14001795f:	int3   
   140017960:	mov    r11,rsp
   140017963:	mov    DWORD PTR [r11+0x20],r9d
   140017967:	sub    rsp,0x78
   14001796b:	and    QWORD PTR [r11-0x18],0x0
   140017970:	lea    rax,[r11+0x38]
   140017974:	mov    r8d,0xa
   14001797a:	movzx  r9d,r8w
   14001797e:	lea    edx,[r8-0x6]
   140017982:	mov    QWORD PTR [r11-0x20],rdx
   140017986:	lea    r8,[rip+0x2045b]        # 0x140037de8
   14001798d:	mov    QWORD PTR [r11-0x28],rax
   140017991:	lea    rax,[r11+0x30]
   140017995:	mov    QWORD PTR [r11-0x30],rdx
   140017999:	mov    QWORD PTR [r11-0x38],rax
   14001799d:	lea    rax,[r11+0x28]
   1400179a1:	mov    QWORD PTR [r11-0x40],rdx
   1400179a5:	mov    QWORD PTR [r11-0x48],rax
   1400179a9:	lea    rax,[r11+0x20]
   1400179ad:	mov    QWORD PTR [r11-0x50],rdx
   1400179b1:	mov    edx,0x2b
   1400179b6:	mov    QWORD PTR [r11-0x58],rax
   1400179ba:	call   QWORD PTR [rip+0x1a660]        # 0x140032020
   1400179c0:	add    rsp,0x78
   1400179c4:	ret    
   1400179c5:	int3   
   1400179c6:	int3   
   1400179c7:	int3   
   1400179c8:	int3   
   1400179c9:	int3   
   1400179ca:	int3   
   1400179cb:	int3   
   1400179cc:	mov    r11,rsp
   1400179cf:	mov    DWORD PTR [r11+0x20],r9d
   1400179d3:	sub    rsp,0xb8
   1400179da:	and    QWORD PTR [r11-0x18],0x0
   1400179df:	lea    rax,[r11+0x58]
   1400179e3:	mov    r8d,0x2f
   1400179e9:	movzx  r9d,r8w
   1400179ed:	lea    edx,[r8-0x2b]
   1400179f1:	mov    QWORD PTR [r11-0x20],rdx
   1400179f5:	lea    r8,[rip+0x203ec]        # 0x140037de8
   1400179fc:	mov    QWORD PTR [r11-0x28],rax
   140017a00:	lea    rax,[r11+0x50]
   140017a04:	mov    QWORD PTR [r11-0x30],rdx
   140017a08:	mov    QWORD PTR [r11-0x38],rax
   140017a0c:	lea    rax,[r11+0x48]
   140017a10:	mov    QWORD PTR [r11-0x40],rdx
   140017a14:	mov    QWORD PTR [r11-0x48],rax
   140017a18:	lea    rax,[r11+0x40]
   140017a1c:	mov    QWORD PTR [r11-0x50],rdx
   140017a20:	mov    QWORD PTR [r11-0x58],rax
   140017a24:	lea    rax,[r11+0x38]
   140017a28:	mov    QWORD PTR [r11-0x60],rdx
   140017a2c:	mov    QWORD PTR [r11-0x68],rax
   140017a30:	lea    rax,[r11+0x30]
   140017a34:	mov    QWORD PTR [r11-0x70],rdx
   140017a38:	mov    QWORD PTR [r11-0x78],rax
   140017a3c:	lea    rax,[r11+0x28]
   140017a40:	mov    QWORD PTR [r11-0x80],rdx
   140017a44:	mov    QWORD PTR [rsp+0x30],rax
   140017a49:	lea    rax,[r11+0x20]
   140017a4d:	mov    QWORD PTR [rsp+0x28],rdx
   140017a52:	mov    edx,0x2b
   140017a57:	mov    QWORD PTR [rsp+0x20],rax
   140017a5c:	call   QWORD PTR [rip+0x1a5be]        # 0x140032020
   140017a62:	add    rsp,0xb8
   140017a69:	ret    
   140017a6a:	int3   
   140017a6b:	int3   
   140017a6c:	int3   
   140017a6d:	int3   
   140017a6e:	int3   
   140017a6f:	int3   
   140017a70:	mov    r11,rsp
   140017a73:	mov    DWORD PTR [r11+0x20],r9d
   140017a77:	sub    rsp,0x48
   140017a7b:	and    QWORD PTR [r11-0x18],0x0
   140017a80:	lea    rax,[r11+0x20]
   140017a84:	movzx  r9d,dx
   140017a88:	lea    r8,[rip+0x20359]        # 0x140037de8
   140017a8f:	mov    QWORD PTR [r11-0x20],0x4
   140017a97:	mov    edx,0x2b
   140017a9c:	mov    QWORD PTR [r11-0x28],rax
   140017aa0:	call   QWORD PTR [rip+0x1a57a]        # 0x140032020
   140017aa6:	add    rsp,0x48
   140017aaa:	ret    
   140017aab:	int3   
   140017aac:	int3   
   140017aad:	int3   
   140017aae:	int3   
   140017aaf:	int3   
   140017ab0:	int3   
   140017ab1:	int3   
   140017ab2:	int3   
   140017ab3:	int3   
   140017ab4:	mov    r11,rsp
   140017ab7:	mov    DWORD PTR [r11+0x20],r9d
   140017abb:	sub    rsp,0x68
   140017abf:	and    QWORD PTR [r11-0x28],0x0
   140017ac4:	lea    rax,[r11-0x18]
   140017ac8:	mov    r8d,0x2a
   140017ace:	mov    DWORD PTR [rsp+0x50],0x1f40
   140017ad6:	movzx  r9d,r8w
   140017ada:	lea    edx,[r8-0x26]
   140017ade:	mov    QWORD PTR [r11-0x30],rdx
   140017ae2:	lea    r8,[rip+0x202ff]        # 0x140037de8
   140017ae9:	mov    QWORD PTR [r11-0x38],rax
   140017aed:	lea    rax,[r11+0x20]
   140017af1:	mov    QWORD PTR [r11-0x40],rdx
   140017af5:	mov    edx,0x2b
   140017afa:	mov    QWORD PTR [r11-0x48],rax
   140017afe:	call   QWORD PTR [rip+0x1a51c]        # 0x140032020
   140017b04:	add    rsp,0x68
   140017b08:	ret    
   140017b09:	int3   
   140017b0a:	int3   
   140017b0b:	int3   
   140017b0c:	int3   
   140017b0d:	int3   
   140017b0e:	int3   
   140017b0f:	int3   
   140017b10:	mov    r11,rsp
   140017b13:	mov    DWORD PTR [r11+0x20],r9d
   140017b17:	sub    rsp,0x68
   140017b1b:	and    QWORD PTR [r11-0x18],0x0
   140017b20:	lea    rax,[r11+0x30]
   140017b24:	mov    r8d,0x19
   140017b2a:	movzx  r9d,r8w
   140017b2e:	lea    edx,[r8-0x15]
   140017b32:	mov    QWORD PTR [r11-0x20],rdx
   140017b36:	lea    r8,[rip+0x202ab]        # 0x140037de8
   140017b3d:	mov    QWORD PTR [r11-0x28],rax
   140017b41:	lea    rax,[r11+0x28]
   140017b45:	mov    QWORD PTR [r11-0x30],rdx
   140017b49:	mov    QWORD PTR [r11-0x38],rax
   140017b4d:	lea    rax,[r11+0x20]
   140017b51:	mov    QWORD PTR [r11-0x40],rdx
   140017b55:	mov    edx,0x2b
   140017b5a:	mov    QWORD PTR [r11-0x48],rax
   140017b5e:	call   QWORD PTR [rip+0x1a4bc]        # 0x140032020
   140017b64:	add    rsp,0x68
   140017b68:	ret    
   140017b69:	int3   
   140017b6a:	int3   
   140017b6b:	int3   
   140017b6c:	int3   
   140017b6d:	int3   
   140017b6e:	int3   
   140017b6f:	int3   
   140017b70:	mov    r11,rsp
   140017b73:	mov    DWORD PTR [r11+0x20],r9d
   140017b77:	sub    rsp,0x58
   140017b7b:	and    QWORD PTR [r11-0x18],0x0
   140017b80:	lea    rax,[r11+0x28]
   140017b84:	mov    r8d,0x4
   140017b8a:	movzx  r9d,dx
   140017b8e:	mov    QWORD PTR [r11-0x20],r8
   140017b92:	mov    edx,0x2b
   140017b97:	mov    QWORD PTR [r11-0x28],rax
   140017b9b:	lea    rax,[r11+0x20]
   140017b9f:	mov    QWORD PTR [r11-0x30],r8
   140017ba3:	lea    r8,[rip+0x2023e]        # 0x140037de8
   140017baa:	mov    QWORD PTR [r11-0x38],rax
   140017bae:	call   QWORD PTR [rip+0x1a46c]        # 0x140032020
   140017bb4:	add    rsp,0x58
   140017bb8:	ret    
   140017bb9:	int3   
   140017bba:	int3   
   140017bbb:	int3   
   140017bbc:	int3   
   140017bbd:	int3   
   140017bbe:	int3   
   140017bbf:	int3   
   140017bc0:	mov    r11,rsp
   140017bc3:	mov    DWORD PTR [r11+0x20],r9d
   140017bc7:	sub    rsp,0x68
   140017bcb:	and    QWORD PTR [r11-0x18],0x0
   140017bd0:	lea    rax,[r11+0x30]
   140017bd4:	mov    r8d,0x4
   140017bda:	movzx  r9d,dx
   140017bde:	mov    QWORD PTR [r11-0x20],r8
   140017be2:	mov    edx,0x2b
   140017be7:	mov    QWORD PTR [r11-0x28],rax
   140017beb:	lea    rax,[r11+0x28]
   140017bef:	mov    QWORD PTR [r11-0x30],r8
   140017bf3:	mov    QWORD PTR [r11-0x38],rax
   140017bf7:	lea    rax,[r11+0x20]
   140017bfb:	mov    QWORD PTR [r11-0x40],r8
   140017bff:	lea    r8,[rip+0x201e2]        # 0x140037de8
   140017c06:	mov    QWORD PTR [r11-0x48],rax
   140017c0a:	call   QWORD PTR [rip+0x1a410]        # 0x140032020
   140017c10:	add    rsp,0x68
   140017c14:	ret    
   140017c15:	int3   
   140017c16:	int3   
   140017c17:	int3   
   140017c18:	int3   
   140017c19:	int3   
   140017c1a:	int3   
   140017c1b:	int3   
   140017c1c:	mov    r11,rsp
   140017c1f:	mov    DWORD PTR [r11+0x20],r9d
   140017c23:	sub    rsp,0xb8
   140017c2a:	and    QWORD PTR [r11-0x18],0x0
   140017c2f:	lea    rax,[r11+0x58]
   140017c33:	mov    edx,0x2b
   140017c38:	movzx  r9d,dx
   140017c3c:	lea    r8d,[rdx-0x27]
   140017c40:	mov    QWORD PTR [r11-0x20],r8
   140017c44:	mov    QWORD PTR [r11-0x28],rax
   140017c48:	lea    rax,[r11+0x50]
   140017c4c:	mov    QWORD PTR [r11-0x30],r8
   140017c50:	mov    QWORD PTR [r11-0x38],rax
   140017c54:	lea    rax,[r11+0x48]
   140017c58:	mov    QWORD PTR [r11-0x40],r8
   140017c5c:	mov    QWORD PTR [r11-0x48],rax
   140017c60:	lea    rax,[r11+0x40]
   140017c64:	mov    QWORD PTR [r11-0x50],r8
   140017c68:	mov    QWORD PTR [r11-0x58],rax
   140017c6c:	lea    rax,[r11+0x38]
   140017c70:	mov    QWORD PTR [r11-0x60],r8
   140017c74:	mov    QWORD PTR [r11-0x68],rax
   140017c78:	lea    rax,[r11+0x30]
   140017c7c:	mov    QWORD PTR [r11-0x70],r8
   140017c80:	mov    QWORD PTR [r11-0x78],rax
   140017c84:	lea    rax,[r11+0x28]
   140017c88:	mov    QWORD PTR [r11-0x80],r8
   140017c8c:	mov    QWORD PTR [rsp+0x30],rax
   140017c91:	lea    rax,[r11+0x20]
   140017c95:	mov    QWORD PTR [rsp+0x28],r8
   140017c9a:	lea    r8,[rip+0x20147]        # 0x140037de8
   140017ca1:	mov    QWORD PTR [rsp+0x20],rax
   140017ca6:	call   QWORD PTR [rip+0x1a374]        # 0x140032020
   140017cac:	add    rsp,0xb8
   140017cb3:	ret    
   140017cb4:	int3   
   140017cb5:	int3   
   140017cb6:	int3   
   140017cb7:	int3   
   140017cb8:	int3   
   140017cb9:	int3   
   140017cba:	int3   
   140017cbb:	int3   
   140017cbc:	int3   
   140017cbd:	int3   
   140017cbe:	int3   
   140017cbf:	int3   
   140017cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140017cc5:	push   rdi
   140017cc6:	sub    rsp,0x20
   140017cca:	mov    rbx,rcx
   140017ccd:	mov    edi,edx
   140017ccf:	mov    rcx,QWORD PTR [rcx+0x50]
   140017cd3:	test   rcx,rcx
   140017cd6:	je     0x140017cde
   140017cd8:	call   QWORD PTR [rip+0x1a8ea]        # 0x1400325c8
   140017cde:	lea    rax,[rip+0x1cbc3]        # 0x1400348a8
   140017ce5:	mov    QWORD PTR [rbx],rax
   140017ce8:	test   dil,0x1
   140017cec:	je     0x140017cf7
   140017cee:	mov    rcx,rbx
   140017cf1:	call   QWORD PTR [rip+0x1a8d1]        # 0x1400325c8
   140017cf7:	mov    rax,rbx
   140017cfa:	mov    rbx,QWORD PTR [rsp+0x30]
   140017cff:	add    rsp,0x20
   140017d03:	pop    rdi
   140017d04:	ret    
   140017d05:	int3   
   140017d06:	int3   
   140017d07:	int3   
   140017d08:	int3   
   140017d09:	int3   
   140017d0a:	int3   
   140017d0b:	int3   
   140017d0c:	int3   
   140017d0d:	int3   
   140017d0e:	int3   
   140017d0f:	int3   
   140017d10:	mov    rax,rsp
   140017d13:	mov    QWORD PTR [rax+0x8],rbx
   140017d17:	mov    QWORD PTR [rax+0x10],rbp
   140017d1b:	mov    QWORD PTR [rax+0x18],rsi
   140017d1f:	mov    QWORD PTR [rax+0x20],rdi
   140017d23:	push   r12
   140017d25:	push   r14
   140017d27:	push   r15
   140017d29:	sub    rsp,0x40
   140017d2d:	mov    rbx,rcx
   140017d30:	mov    edi,r9d
   140017d33:	mov    rcx,QWORD PTR [rcx+0x48]
   140017d37:	mov    esi,edx
   140017d39:	add    rcx,0xa8
   140017d40:	or     eax,0xffffffff
   140017d43:	lock xadd DWORD PTR [rcx+0x8],eax
   140017d48:	dec    eax
   140017d4a:	cmp    eax,0x80000000
   140017d4f:	jne    0x140017d56
   140017d51:	call   0x140029c90
   140017d56:	mov    rax,QWORD PTR [rbx+0x48]
   140017d5a:	mov    ebp,DWORD PTR [rax+0xec]
   140017d60:	mov    rax,QWORD PTR [rbx+0x48]
   140017d64:	mov    r14d,DWORD PTR [rax+0xe8]
   140017d6b:	mov    rcx,QWORD PTR [rip+0x33306]        # 0x14004b078
   140017d72:	lea    r15,[rip+0x332ff]        # 0x14004b078
   140017d79:	cmp    rcx,r15
   140017d7c:	je     0x140017da4
   140017d7e:	test   BYTE PTR [rcx+0x1c],0x10
   140017d82:	je     0x140017da4
   140017d84:	mov    rcx,QWORD PTR [rcx+0x10]
   140017d88:	mov    r9d,esi
   140017d8b:	mov    DWORD PTR [rsp+0x30],r14d
   140017d90:	mov    DWORD PTR [rsp+0x28],ebp
   140017d94:	mov    DWORD PTR [rsp+0x20],edi
   140017d98:	call   0x140017960
   140017d9d:	mov    rcx,QWORD PTR [rip+0x332d4]        # 0x14004b078
   140017da4:	xor    esi,esi
   140017da6:	test   edi,edi
   140017da8:	js     0x140017efd
   140017dae:	mov    rax,QWORD PTR [rbx+0x50]
   140017db2:	lea    r12,[rip+0x2002f]        # 0x140037de8
   140017db9:	mov    r8d,DWORD PTR [rax+0x68]
   140017dbd:	cmp    r8d,0x1f40
   140017dc4:	jbe    0x140017de5
   140017dc6:	cmp    rcx,r15
   140017dc9:	je     0x140017df1
   140017dcb:	test   BYTE PTR [rcx+0x1c],0x1
   140017dcf:	je     0x140017df1
   140017dd1:	mov    rcx,QWORD PTR [rcx+0x10]
   140017dd5:	lea    edx,[rsi+0xb]
   140017dd8:	mov    r9d,r8d
   140017ddb:	mov    r8,r12
   140017dde:	call   0x140001f70
   140017de3:	jmp    0x140017df1
   140017de5:	mov    rcx,QWORD PTR [rbx+0x48]
   140017de9:	mov    edx,r8d
   140017dec:	call   0x140018e1c
   140017df1:	mov    r8,QWORD PTR [rbx+0x58]
   140017df5:	mov    rdx,QWORD PTR [rbx+0x50]
   140017df9:	mov    rcx,QWORD PTR [rbx+0x48]
   140017dfd:	call   0x140018bec
   140017e02:	mov    dil,0x2
   140017e05:	test   eax,eax
   140017e07:	jns    0x140017e70
   140017e09:	cmp    eax,0x80004004
   140017e0e:	jne    0x140017e35
   140017e10:	mov    rcx,QWORD PTR [rip+0x33261]        # 0x14004b078
   140017e17:	cmp    rcx,r15
   140017e1a:	je     0x140017e77
   140017e1c:	test   BYTE PTR [rcx+0x1c],dil
   140017e20:	je     0x140017e77
   140017e22:	mov    rcx,QWORD PTR [rcx+0x10]
   140017e26:	mov    edx,0xc
   140017e2b:	mov    r8,r12
   140017e2e:	call   0x140001f08
   140017e33:	jmp    0x140017e70
   140017e35:	mov    rcx,QWORD PTR [rip+0x3323c]        # 0x14004b078
   140017e3c:	cmp    rcx,r15
   140017e3f:	je     0x140017e5b
   140017e41:	test   BYTE PTR [rcx+0x1c],0x1
   140017e45:	je     0x140017e5b
   140017e47:	mov    rcx,QWORD PTR [rcx+0x10]
   140017e4b:	mov    edx,0xd
   140017e50:	mov    r9d,eax
   140017e53:	mov    r8,r12
   140017e56:	call   0x140001f70
   140017e5b:	mov    rcx,QWORD PTR [rbx+0x48]
   140017e5f:	mov    r8,QWORD PTR [rbx+0x58]
   140017e63:	mov    rdx,QWORD PTR [rbx+0x50]
   140017e67:	mov    rcx,QWORD PTR [rcx+0x8]
   140017e6b:	call   0x14001b390
   140017e70:	mov    rcx,QWORD PTR [rip+0x33201]        # 0x14004b078
   140017e77:	cmp    ebp,r14d
   140017e7a:	jle    0x140017e9f
   140017e7c:	cmp    rcx,r15
   140017e7f:	je     0x140017efd
   140017e81:	test   BYTE PTR [rcx+0x1c],dil
   140017e85:	je     0x140017efd
   140017e87:	mov    rcx,QWORD PTR [rcx+0x10]
   140017e8b:	mov    edx,0xe
   140017e90:	mov    r9d,ebp
   140017e93:	mov    DWORD PTR [rsp+0x20],r14d
   140017e98:	call   0x140017b70
   140017e9d:	jmp    0x140017efd
   140017e9f:	mov    rcx,rbx
   140017ea2:	call   0x140017f40
   140017ea7:	test   eax,eax
   140017ea9:	jns    0x140017f18
   140017eab:	cmp    eax,0x80004004
   140017eb0:	jne    0x140017ed7
   140017eb2:	mov    rcx,QWORD PTR [rip+0x331bf]        # 0x14004b078
   140017eb9:	cmp    rcx,r15
   140017ebc:	je     0x140017efd
   140017ebe:	test   BYTE PTR [rcx+0x1c],dil
   140017ec2:	je     0x140017efd
   140017ec4:	mov    rcx,QWORD PTR [rcx+0x10]
   140017ec8:	mov    edx,0xf
   140017ecd:	mov    r8,r12
   140017ed0:	call   0x140001f08
   140017ed5:	jmp    0x140017efd
   140017ed7:	mov    rcx,QWORD PTR [rip+0x3319a]        # 0x14004b078
   140017ede:	cmp    rcx,r15
   140017ee1:	je     0x140017efd
   140017ee3:	test   BYTE PTR [rcx+0x1c],dil
   140017ee7:	je     0x140017efd
   140017ee9:	mov    rcx,QWORD PTR [rcx+0x10]
   140017eed:	mov    edx,0x10
   140017ef2:	mov    r9d,eax
   140017ef5:	mov    r8,r12
   140017ef8:	call   0x140001f70
   140017efd:	mov    rax,QWORD PTR [rbx+0x48]
   140017f01:	mov    rdx,rbx
   140017f04:	mov    BYTE PTR [rbx+0x60],sil
   140017f08:	lock dec DWORD PTR [rax+0xec]
   140017f0f:	mov    rcx,QWORD PTR [rbx+0x48]
   140017f13:	call   0x14001a254
   140017f18:	mov    rbx,QWORD PTR [rsp+0x60]
   140017f1d:	mov    rbp,QWORD PTR [rsp+0x68]
   140017f22:	mov    rsi,QWORD PTR [rsp+0x70]
   140017f27:	mov    rdi,QWORD PTR [rsp+0x78]
   140017f2c:	add    rsp,0x40
   140017f30:	pop    r15
   140017f32:	pop    r14
   140017f34:	pop    r12
   140017f36:	ret    
   140017f37:	int3   
   140017f38:	int3   
   140017f39:	int3   
   140017f3a:	int3   
   140017f3b:	int3   
   140017f3c:	int3   
   140017f3d:	int3   
   140017f3e:	int3   
   140017f3f:	int3   
   140017f40:	mov    QWORD PTR [rsp+0x8],rbx
   140017f45:	mov    QWORD PTR [rsp+0x10],rsi
   140017f4a:	push   rdi
   140017f4b:	sub    rsp,0x40
   140017f4f:	mov    rdi,rcx
   140017f52:	mov    rcx,QWORD PTR [rcx+0x48]
   140017f56:	add    rcx,0xa8
   140017f5d:	call   0x140029ab0
   140017f62:	test   eax,eax
   140017f64:	js     0x140018100
   140017f6a:	xor    edx,edx
   140017f6c:	lea    rbx,[rdi+0x20]
   140017f70:	mov    rcx,rbx
   140017f73:	lea    r8d,[rdx+0x20]
   140017f77:	call   0x14002e2ce
   140017f7c:	mov    rax,QWORD PTR [rdi+0x58]
   140017f80:	xor    r9d,r9d
   140017f83:	mov    rcx,QWORD PTR [rdi+0x48]
   140017f87:	xor    r8d,r8d
   140017f8a:	mov    QWORD PTR [rsp+0x30],rbx
   140017f8f:	mov    edx,0x1280ce
   140017f94:	mov    QWORD PTR [rsp+0x28],rax
   140017f99:	mov    rax,QWORD PTR [rdi+0x50]
   140017f9d:	mov    QWORD PTR [rsp+0x20],rax
   140017fa2:	call   0x140018118
   140017fa7:	mov    esi,eax
   140017fa9:	cmp    eax,0x800703e5
   140017fae:	jne    0x14001800d
   140017fb0:	cmp    BYTE PTR [rdi+0x60],0x0
   140017fb4:	jne    0x140018006
   140017fb6:	mov    rax,QWORD PTR [rdi+0x48]
   140017fba:	mov    rsi,QWORD PTR [rax+0xa0]
   140017fc1:	mov    eax,DWORD PTR [rdi+0x8]
   140017fc4:	test   eax,eax
   140017fc6:	jne    0x140017fd1
   140017fc8:	mov    DWORD PTR [rdi+0x8],0x1
   140017fcf:	jmp    0x140017fd5
   140017fd1:	lock inc DWORD PTR [rdi+0x8]
   140017fd5:	lea    rcx,[rsi+0x10]
   140017fd9:	call   QWORD PTR [rip+0x1a129]        # 0x140032108
   140017fdf:	lea    r8,[rdi+0x10]
   140017fe3:	lea    rdx,[rsi+0x38]
   140017fe7:	mov    rax,QWORD PTR [rdx]
   140017fea:	lea    rcx,[rsi+0x10]
   140017fee:	mov    QWORD PTR [r8],rax
   140017ff1:	mov    QWORD PTR [r8+0x8],rdx
   140017ff5:	mov    QWORD PTR [rax+0x8],r8
   140017ff9:	mov    QWORD PTR [rdx],r8
   140017ffc:	call   QWORD PTR [rip+0x1a0f6]        # 0x1400320f8
   140018002:	mov    BYTE PTR [rdi+0x60],0x1
   140018006:	xor    eax,eax
   140018008:	jmp    0x140018100
   14001800d:	mov    rcx,QWORD PTR [rdi+0x48]
   140018011:	add    rcx,0xa8
   140018018:	or     eax,0xffffffff
   14001801b:	lock xadd DWORD PTR [rcx+0x8],eax
   140018020:	dec    eax
   140018022:	cmp    eax,0x80000000
   140018027:	jne    0x14001802e
   140018029:	call   0x140029c90
   14001802e:	lea    rdi,[rip+0x1fdb3]        # 0x140037de8
   140018035:	test   esi,esi
   140018037:	js     0x140018071
   140018039:	mov    rcx,QWORD PTR [rip+0x33038]        # 0x14004b078
   140018040:	lea    rbx,[rip+0x33031]        # 0x14004b078
   140018047:	cmp    rcx,rbx
   14001804a:	je     0x14001806a
   14001804c:	test   BYTE PTR [rcx+0x1c],0x1
   140018050:	je     0x14001806a
   140018052:	mov    rcx,QWORD PTR [rcx+0x10]
   140018056:	mov    edx,0x11
   14001805b:	mov    r8,rdi
   14001805e:	call   0x140001f08
   140018063:	mov    rcx,QWORD PTR [rip+0x3300e]        # 0x14004b078
   14001806a:	mov    esi,0x8000ffff
   14001806f:	jmp    0x1400180a5
   140018071:	mov    rcx,QWORD PTR [rip+0x33000]        # 0x14004b078
   140018078:	lea    rbx,[rip+0x32ff9]        # 0x14004b078
   14001807f:	cmp    rcx,rbx
   140018082:	je     0x1400180a5
   140018084:	test   BYTE PTR [rcx+0x1c],0x1
   140018088:	je     0x1400180a5
   14001808a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001808e:	mov    edx,0x12
   140018093:	mov    r9d,esi
   140018096:	mov    r8,rdi
   140018099:	call   0x140001f70
   14001809e:	mov    rcx,QWORD PTR [rip+0x32fd3]        # 0x14004b078
   1400180a5:	test   BYTE PTR [rip+0x37f14],0x4        # 0x14004ffc0
   1400180ac:	je     0x1400180ca
   1400180ae:	lea    r8,[rip+0x1c2cb]        # 0x140034380
   1400180b5:	lea    rdx,[rip+0x1c344]        # 0x140034400
   1400180bc:	call   0x140003818
   1400180c1:	mov    rcx,QWORD PTR [rip+0x32fb0]        # 0x14004b078
   1400180c8:	jmp    0x1400180cc
   1400180ca:	xor    eax,eax
   1400180cc:	movzx  r9d,ax
   1400180d0:	or     r9d,0x80070000
   1400180d7:	test   eax,eax
   1400180d9:	cmovle r9d,eax
   1400180dd:	test   r9d,r9d
   1400180e0:	jns    0x1400180fe
   1400180e2:	cmp    rcx,rbx
   1400180e5:	je     0x1400180fe
   1400180e7:	test   BYTE PTR [rcx+0x1c],0x2
   1400180eb:	je     0x1400180fe
   1400180ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400180f1:	mov    edx,0x13
   1400180f6:	mov    r8,rdi
   1400180f9:	call   0x140001f70
   1400180fe:	mov    eax,esi
   140018100:	mov    rbx,QWORD PTR [rsp+0x50]
   140018105:	mov    rsi,QWORD PTR [rsp+0x58]
   14001810a:	add    rsp,0x40
   14001810e:	pop    rdi
   14001810f:	ret    
   140018110:	int3   
   140018111:	int3   
   140018112:	int3   
   140018113:	int3   
   140018114:	int3   
   140018115:	int3   
   140018116:	int3   
   140018117:	int3   
   140018118:	mov    QWORD PTR [rsp+0x10],rbx
   14001811d:	mov    QWORD PTR [rsp+0x18],rsi
   140018122:	push   rdi
   140018123:	sub    rsp,0x40
   140018127:	mov    r10,rcx
   14001812a:	mov    r11,r8
   14001812d:	add    rcx,0xc8
   140018134:	mov    esi,edx
   140018136:	xor    ebx,ebx
   140018138:	call   0x140029ab0
   14001813d:	mov    edi,eax
   14001813f:	test   eax,eax
   140018141:	js     0x140018148
   140018143:	mov    rbx,rcx
   140018146:	xor    edi,edi
   140018148:	test   edi,edi
   14001814a:	js     0x1400181a8
   14001814c:	mov    rax,QWORD PTR [rsp+0x80]
   140018154:	mov    r8,r11
   140018157:	mov    rcx,QWORD PTR [r10+0x98]
   14001815e:	mov    edx,esi
   140018160:	and    DWORD PTR [rsp+0x50],0x0
   140018165:	mov    QWORD PTR [rsp+0x38],rax
   14001816a:	lea    rax,[rsp+0x50]
   14001816f:	mov    QWORD PTR [rsp+0x30],rax
   140018174:	mov    eax,DWORD PTR [rsp+0x78]
   140018178:	mov    DWORD PTR [rsp+0x28],eax
   14001817c:	mov    rax,QWORD PTR [rsp+0x70]
   140018181:	mov    QWORD PTR [rsp+0x20],rax
   140018186:	call   QWORD PTR [rip+0x19fe4]        # 0x140032170
   14001818c:	test   eax,eax
   14001818e:	je     0x140018194
   140018190:	xor    edi,edi
   140018192:	jmp    0x1400181a8
   140018194:	call   QWORD PTR [rip+0x1a0ee]        # 0x140032288
   14001819a:	movzx  edi,ax
   14001819d:	or     edi,0x80070000
   1400181a3:	test   eax,eax
   1400181a5:	cmovle edi,eax
   1400181a8:	test   rbx,rbx
   1400181ab:	je     0x1400181c7
   1400181ad:	or     ecx,0xffffffff
   1400181b0:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400181b5:	dec    ecx
   1400181b7:	cmp    ecx,0x80000000
   1400181bd:	jne    0x1400181c7
   1400181bf:	mov    rcx,rbx
   1400181c2:	call   0x140029c90
   1400181c7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400181cc:	mov    eax,edi
   1400181ce:	mov    rsi,QWORD PTR [rsp+0x60]
   1400181d3:	add    rsp,0x40
   1400181d7:	pop    rdi
   1400181d8:	ret    
   1400181d9:	int3   
   1400181da:	int3   
   1400181db:	int3   
   1400181dc:	int3   
   1400181dd:	int3   
   1400181de:	int3   
   1400181df:	int3   
   1400181e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400181e5:	push   rbp
   1400181e6:	push   rbx
   1400181e7:	push   rsi
   1400181e8:	push   rdi
   1400181e9:	push   r12
   1400181eb:	push   r14
   1400181ed:	push   r15
   1400181ef:	mov    rbp,rsp
   1400181f2:	sub    rsp,0x50
   1400181f6:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400181fe:	mov    rsi,rcx
   140018201:	lea    rax,[rip+0x1c700]        # 0x140034908
   140018208:	mov    QWORD PTR [rcx],rax
   14001820b:	xor    r15d,r15d
   14001820e:	mov    QWORD PTR [rcx+0x10],r15
   140018212:	mov    QWORD PTR [rcx+0x78],r15
   140018216:	mov    QWORD PTR [rbp+0x58],r15
   14001821a:	lea    rax,[rbp+0x58]
   14001821e:	mov    QWORD PTR [rbp-0x18],rax
   140018222:	mov    QWORD PTR [rcx+0x80],r15
   140018229:	mov    QWORD PTR [rbp-0x30],r15
   14001822d:	lea    rax,[rbp-0x30]
   140018231:	mov    QWORD PTR [rbp-0x10],rax
   140018235:	mov    QWORD PTR [rcx+0x88],r15
   14001823c:	mov    QWORD PTR [rcx+0x90],r15
   140018243:	or     r12,0xffffffffffffffff
   140018247:	mov    QWORD PTR [rbp-0x28],r12
   14001824b:	lea    rax,[rbp-0x28]
   14001824f:	mov    QWORD PTR [rbp-0x8],rax
   140018253:	mov    QWORD PTR [rcx+0x98],r12
   14001825a:	mov    QWORD PTR [rcx+0xa0],r15
   140018261:	mov    DWORD PTR [rcx+0xb0],r15d
   140018268:	lea    rax,[rip+0x1cab1]        # 0x140034d20
   14001826f:	mov    QWORD PTR [rcx+0xa8],rax
   140018276:	mov    QWORD PTR [rcx+0xb8],r15
   14001827d:	mov    BYTE PTR [rcx+0xc0],r15b
   140018284:	mov    BYTE PTR [rcx+0xc1],r15b
   14001828b:	mov    DWORD PTR [rcx+0xd0],r15d
   140018292:	mov    QWORD PTR [rcx+0xc8],rax
   140018299:	mov    QWORD PTR [rcx+0xd8],r15
   1400182a0:	mov    BYTE PTR [rcx+0xe0],r15b
   1400182a7:	mov    BYTE PTR [rcx+0xe1],r15b
   1400182ae:	mov    DWORD PTR [rcx+0xe8],r15d
   1400182b5:	mov    DWORD PTR [rcx+0xec],r15d
   1400182bc:	mov    DWORD PTR [rcx+0xf0],r15d
   1400182c3:	mov    DWORD PTR [rcx+0xf4],r15d
   1400182ca:	mov    BYTE PTR [rcx+0xf8],r15b
   1400182d1:	mov    BYTE PTR [rcx+0xf9],r15b
   1400182d8:	mov    BYTE PTR [rcx+0xfa],r15b
   1400182df:	mov    QWORD PTR [rcx+0x8],rdx
   1400182e3:	add    rcx,0x54
   1400182e7:	xor    edx,edx
   1400182e9:	lea    r8d,[r15+0x24]
   1400182ed:	call   0x14002e2ce
   1400182f2:	mov    rdi,QWORD PTR [rsi+0xa0]
   1400182f9:	test   rdi,rdi
   1400182fc:	je     0x140018341
   1400182fe:	mov    eax,DWORD PTR [rdi+0x8]
   140018301:	cmp    eax,0x1
   140018304:	jne    0x14001830c
   140018306:	mov    DWORD PTR [rdi+0x8],r15d
   14001830a:	jmp    0x14001831b
   14001830c:	mov    eax,r12d
   14001830f:	lock xadd DWORD PTR [rdi+0x8],eax
   140018314:	add    eax,r12d
   140018317:	test   eax,eax
   140018319:	jg     0x14001833a
   14001831b:	test   rdi,rdi
   14001831e:	je     0x14001833a
   140018320:	mov    rax,QWORD PTR [rdi]
   140018323:	mov    rbx,QWORD PTR [rax+0x10]
   140018327:	mov    rcx,rbx
   14001832a:	call   QWORD PTR [rip+0x1a378]        # 0x1400326a8
   140018330:	mov    edx,0x1
   140018335:	mov    rcx,rdi
   140018338:	call   rbx
   14001833a:	mov    QWORD PTR [rsi+0xa0],r15
   140018341:	mov    QWORD PTR [rsi+0xa0],r15
   140018348:	mov    rbx,r15
   14001834b:	mov    QWORD PTR [rbp+0x50],rbx
   14001834f:	mov    QWORD PTR [rbp+0x48],r15
   140018353:	lea    rcx,[rbp+0x48]
   140018357:	call   0x14002b960
   14001835c:	mov    r14d,eax
   14001835f:	test   eax,eax
   140018361:	jns    0x1400183ad
   140018363:	mov    rax,QWORD PTR [rbp+0x48]
   140018367:	test   rax,rax
   14001836a:	je     0x1400183d0
   14001836c:	mov    ecx,DWORD PTR [rax+0x8]
   14001836f:	cmp    ecx,0x1
   140018372:	jne    0x14001837a
   140018374:	mov    DWORD PTR [rax+0x8],r15d
   140018378:	jmp    0x140018389
   14001837a:	mov    ecx,r12d
   14001837d:	lock xadd DWORD PTR [rax+0x8],ecx
   140018382:	add    ecx,r12d
   140018385:	test   ecx,ecx
   140018387:	jg     0x1400183a7
   140018389:	mov    rbx,QWORD PTR [rbp+0x48]
   14001838d:	mov    rax,QWORD PTR [rbx]
   140018390:	mov    rdi,QWORD PTR [rax+0x10]
   140018394:	mov    rcx,rdi
   140018397:	call   QWORD PTR [rip+0x1a30b]        # 0x1400326a8
   14001839d:	mov    edx,0x1
   1400183a2:	mov    rcx,rbx
   1400183a5:	call   rdi
   1400183a7:	mov    rbx,QWORD PTR [rbp+0x50]
   1400183ab:	jmp    0x1400183d0
   1400183ad:	mov    rbx,QWORD PTR [rbp+0x48]
   1400183b1:	lea    rcx,[rbx+0x10]
   1400183b5:	mov    DWORD PTR [rcx+0xc],r15d
   1400183b9:	xor    edx,edx
   1400183bb:	call   QWORD PTR [rip+0x19eaf]        # 0x140032270
   1400183c1:	mov    BYTE PTR [rbx+0x48],r15b
   1400183c5:	mov    QWORD PTR [rbp+0x48],r15
   1400183c9:	mov    QWORD PTR [rbp+0x50],rbx
   1400183cd:	mov    r14d,r15d
   1400183d0:	test   r14d,r14d
   1400183d3:	jns    0x140018417
   1400183d5:	test   rbx,rbx
   1400183d8:	je     0x140018421
   1400183da:	mov    eax,DWORD PTR [rbx+0x8]
   1400183dd:	cmp    eax,0x1
   1400183e0:	jne    0x1400183e8
   1400183e2:	mov    DWORD PTR [rbx+0x8],r15d
   1400183e6:	jmp    0x1400183f7
   1400183e8:	mov    eax,r12d
   1400183eb:	lock xadd DWORD PTR [rbx+0x8],eax
   1400183f0:	add    eax,r12d
   1400183f3:	test   eax,eax
   1400183f5:	jg     0x140018421
   1400183f7:	mov    rbx,QWORD PTR [rbp+0x50]
   1400183fb:	mov    rax,QWORD PTR [rbx]
   1400183fe:	mov    rdi,QWORD PTR [rax+0x10]
   140018402:	mov    rcx,rdi
   140018405:	call   QWORD PTR [rip+0x1a29d]        # 0x1400326a8
   14001840b:	mov    edx,0x1
   140018410:	mov    rcx,rbx
   140018413:	call   rdi
   140018415:	jmp    0x140018421
   140018417:	mov    QWORD PTR [rsi+0xa0],rbx
   14001841e:	mov    r14d,r15d
   140018421:	test   r14d,r14d
   140018424:	jns    0x14001842f
   140018426:	mov    ecx,r14d
   140018429:	call   0x140029d64
   14001842e:	int3   
   14001842f:	mov    rcx,rsi
   140018432:	call   0x14001956c
   140018437:	nop
   140018438:	mov    rax,rsi
   14001843b:	add    rsp,0x50
   14001843f:	pop    r15
   140018441:	pop    r14
   140018443:	pop    r12
   140018445:	pop    rdi
   140018446:	pop    rsi
   140018447:	pop    rbx
   140018448:	pop    rbp
   140018449:	ret    
   14001844a:	int3   
   14001844b:	int3   
   14001844c:	int3   
   14001844d:	int3   
   14001844e:	int3   
   14001844f:	int3   
   140018450:	mov    QWORD PTR [rsp+0x8],rbx
   140018455:	push   rdi
   140018456:	sub    rsp,0x20
   14001845a:	mov    ebx,edx
   14001845c:	mov    rdi,rcx
   14001845f:	call   0x1400184a8
   140018464:	test   bl,0x1
   140018467:	je     0x140018472
   140018469:	mov    rcx,rdi
   14001846c:	call   QWORD PTR [rip+0x1a156]        # 0x1400325c8
   140018472:	mov    rax,rdi
   140018475:	mov    rbx,QWORD PTR [rsp+0x30]
   14001847a:	add    rsp,0x20
   14001847e:	pop    rdi
   14001847f:	ret    
   140018480:	int3   
   140018481:	int3   
   140018482:	int3   
   140018483:	int3   
   140018484:	int3   
   140018485:	int3   
   140018486:	int3   
   140018487:	int3   
   140018488:	sub    rsp,0x28
   14001848c:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140018490:	je     0x14001849b
   140018492:	mov    rcx,QWORD PTR [rcx]
   140018495:	call   QWORD PTR [rip+0x19cbd]        # 0x140032158
   14001849b:	add    rsp,0x28
   14001849f:	ret    
   1400184a0:	int3   
   1400184a1:	int3   
   1400184a2:	int3   
   1400184a3:	int3   
   1400184a4:	int3   
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400184ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400184b2:	push   rdi
   1400184b3:	sub    rsp,0x20
   1400184b7:	lea    rax,[rip+0x1c44a]        # 0x140034908
   1400184be:	mov    rdi,rcx
   1400184c1:	mov    QWORD PTR [rcx],rax
   1400184c4:	add    rcx,0xc8
   1400184cb:	call   0x140029b48
   1400184d0:	lea    rcx,[rdi+0xa8]
   1400184d7:	call   0x140029b48
   1400184dc:	mov    rsi,QWORD PTR [rdi+0xa0]
   1400184e3:	test   rsi,rsi
   1400184e6:	je     0x140018525
   1400184e8:	mov    eax,DWORD PTR [rsi+0x8]
   1400184eb:	cmp    eax,0x1
   1400184ee:	jne    0x1400184f9
   1400184f0:	mov    DWORD PTR [rsi+0x8],0x0
   1400184f7:	jmp    0x140018506
   1400184f9:	or     eax,0xffffffff
   1400184fc:	lock xadd DWORD PTR [rsi+0x8],eax
   140018501:	sub    eax,0x1
   140018504:	jg     0x140018525
   140018506:	test   rsi,rsi
   140018509:	je     0x140018525
   14001850b:	mov    rax,QWORD PTR [rsi]
   14001850e:	mov    rbx,QWORD PTR [rax+0x10]
   140018512:	mov    rcx,rbx
   140018515:	call   QWORD PTR [rip+0x1a18d]        # 0x1400326a8
   14001851b:	mov    edx,0x1
   140018520:	mov    rcx,rsi
   140018523:	call   rbx
   140018525:	mov    rcx,QWORD PTR [rdi+0x98]
   14001852c:	cmp    rcx,0xffffffffffffffff
   140018530:	je     0x140018538
   140018532:	call   QWORD PTR [rip+0x19c20]        # 0x140032158
   140018538:	mov    rsi,QWORD PTR [rdi+0x90]
   14001853f:	test   rsi,rsi
   140018542:	je     0x140018580
   140018544:	mov    eax,DWORD PTR [rsi+0x8]
   140018547:	cmp    eax,0x1
   14001854a:	jne    0x140018555
   14001854c:	mov    DWORD PTR [rsi+0x8],0x0
   140018553:	jmp    0x140018562
   140018555:	or     eax,0xffffffff
   140018558:	lock xadd DWORD PTR [rsi+0x8],eax
   14001855d:	sub    eax,0x1
   140018560:	jg     0x140018580
   140018562:	test   rsi,rsi
   140018565:	je     0x140018580
   140018567:	mov    rax,QWORD PTR [rsi]
   14001856a:	mov    rbx,QWORD PTR [rax]
   14001856d:	mov    rcx,rbx
   140018570:	call   QWORD PTR [rip+0x1a132]        # 0x1400326a8
   140018576:	mov    edx,0x1
   14001857b:	mov    rcx,rsi
   14001857e:	call   rbx
   140018580:	mov    rsi,QWORD PTR [rdi+0x88]
   140018587:	test   rsi,rsi
   14001858a:	je     0x1400185a1
   14001858c:	mov    rax,QWORD PTR [rsi]
   14001858f:	mov    rbx,QWORD PTR [rax+0x8]
   140018593:	mov    rcx,rbx
   140018596:	call   QWORD PTR [rip+0x1a10c]        # 0x1400326a8
   14001859c:	mov    rcx,rsi
   14001859f:	call   rbx
   1400185a1:	mov    rsi,QWORD PTR [rdi+0x80]
   1400185a8:	test   rsi,rsi
   1400185ab:	je     0x1400185d7
   1400185ad:	mov    rax,QWORD PTR [rsi]
   1400185b0:	mov    rbx,QWORD PTR [rax+0x38]
   1400185b4:	mov    rcx,rbx
   1400185b7:	call   QWORD PTR [rip+0x1a0eb]        # 0x1400326a8
   1400185bd:	mov    rcx,rsi
   1400185c0:	call   rbx
   1400185c2:	mov    rax,QWORD PTR [rsi]
   1400185c5:	mov    rbx,QWORD PTR [rax+0x8]
   1400185c9:	mov    rcx,rbx
   1400185cc:	call   QWORD PTR [rip+0x1a0d6]        # 0x1400326a8
   1400185d2:	mov    rcx,rsi
   1400185d5:	call   rbx
   1400185d7:	mov    rcx,QWORD PTR [rdi+0x10]
   1400185db:	test   rcx,rcx
   1400185de:	je     0x1400185eb
   1400185e0:	call   QWORD PTR [rip+0x19b72]        # 0x140032158
   1400185e6:	and    QWORD PTR [rdi+0x10],0x0
   1400185eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400185f0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400185f5:	add    rsp,0x20
   1400185f9:	pop    rdi
   1400185fa:	ret    
   1400185fb:	int3   
   1400185fc:	int3   
   1400185fd:	int3   
   1400185fe:	int3   
   1400185ff:	int3   
   140018600:	int3   
   140018601:	int3   
   140018602:	int3   
   140018603:	int3   
   140018604:	rex push rbp
   140018606:	push   rbx
   140018607:	push   rsi
   140018608:	push   rdi
   140018609:	push   r12
   14001860b:	push   r13
   14001860d:	push   r14
   14001860f:	push   r15
   140018611:	lea    rbp,[rsp-0x1f]
   140018616:	sub    rsp,0xd8
   14001861d:	xor    r15d,r15d
   140018620:	lea    rax,[rbp-0x71]
   140018624:	mov    r13,rcx
   140018627:	mov    QWORD PTR [rbp-0x71],r15
   14001862b:	xor    edx,edx
   14001862d:	mov    QWORD PTR [rbp-0x61],rax
   140018631:	lea    rcx,[rbp-0x4d]
   140018635:	mov    QWORD PTR [rbp+0x77],r15
   140018639:	lea    r14d,[r15+0x2c]
   14001863d:	mov    DWORD PTR [rbp+0x67],r15d
   140018641:	mov    r8d,r14d
   140018644:	mov    DWORD PTR [rbp-0x51],r15d
   140018648:	call   0x14002e2ce
   14001864d:	lea    rcx,[rbp-0x51]
   140018651:	call   QWORD PTR [rip+0x19bc1]        # 0x140032218
   140018657:	mov    eax,DWORD PTR [rbp-0x31]
   14001865a:	lea    esi,[r15+0x1]
   14001865e:	mov    edi,esi
   140018660:	test   eax,eax
   140018662:	je     0x140018666
   140018664:	mov    edi,eax
   140018666:	call   0x140025fe8
   14001866b:	mov    r8,rax
   14001866e:	lea    rcx,[rbp+0x77]
   140018672:	call   0x14002b2ac
   140018677:	mov    rbx,QWORD PTR [rbp+0x77]
   14001867b:	test   eax,eax
   14001867d:	js     0x1400186ef
   14001867f:	lea    r8,[rbp+0x67]
   140018683:	mov    rcx,rbx
   140018686:	lea    rdx,[rip+0x1f6bb]        # 0x140037d48
   14001868d:	call   0x14002b5f0
   140018692:	test   eax,eax
   140018694:	js     0x1400186a5
   140018696:	mov    ecx,DWORD PTR [rbp+0x67]
   140018699:	lea    eax,[rcx-0x1]
   14001869c:	cmp    eax,0x1c
   14001869f:	ja     0x1400186a5
   1400186a1:	mov    edi,ecx
   1400186a3:	jmp    0x140018705
   1400186a5:	lea    r8,[rbp+0x67]
   1400186a9:	mov    rcx,rbx
   1400186ac:	lea    rdx,[rip+0x1f6cd]        # 0x140037d80
   1400186b3:	call   0x14002b5f0
   1400186b8:	test   eax,eax
   1400186ba:	js     0x1400186ef
   1400186bc:	mov    ecx,DWORD PTR [rbp+0x67]
   1400186bf:	lea    eax,[rcx-0x1]
   1400186c2:	cmp    eax,0xe
   1400186c5:	ja     0x1400186ef
   1400186c7:	mov    r8d,ecx
   1400186ca:	cmp    rdi,rcx
   1400186cd:	ja     0x1400186e2
   1400186cf:	test   rbx,rbx
   1400186d2:	je     0x1400186dd
   1400186d4:	mov    rcx,rbx
   1400186d7:	call   QWORD PTR [rip+0x1995b]        # 0x140032038
   1400186dd:	mov    rdi,rsi
   1400186e0:	jmp    0x140018713
   1400186e2:	mov    rax,rdi
   1400186e5:	xor    edx,edx
   1400186e7:	div    r8
   1400186ea:	mov    rdi,rax
   1400186ed:	jmp    0x1400186f9
   1400186ef:	cmp    rdi,0x4
   1400186f3:	jbe    0x1400186cf
   1400186f5:	shr    rdi,0x2
   1400186f9:	mov    eax,0x2
   1400186fe:	cmp    rdi,rax
   140018701:	cmova  rdi,rax
   140018705:	test   rbx,rbx
   140018708:	je     0x140018713
   14001870a:	mov    rcx,rbx
   14001870d:	call   QWORD PTR [rip+0x19925]        # 0x140032038
   140018713:	lea    rax,[rbp-0x79]
   140018717:	mov    QWORD PTR [rbp-0x69],rdi
   14001871b:	mov    r8,r14
   14001871e:	mov    QWORD PTR [rbp-0x59],rax
   140018722:	xor    edx,edx
   140018724:	mov    QWORD PTR [rbp-0x79],r15
   140018728:	lea    rcx,[rbp-0x1d]
   14001872c:	mov    QWORD PTR [rbp+0x7f],r15
   140018730:	mov    DWORD PTR [rbp+0x6f],r15d
   140018734:	mov    DWORD PTR [rbp-0x21],r15d
   140018738:	call   0x14002e2ce
   14001873d:	lea    rcx,[rbp-0x21]
   140018741:	call   QWORD PTR [rip+0x19ad1]        # 0x140032218
   140018747:	mov    eax,DWORD PTR [rbp-0x1]
   14001874a:	test   eax,eax
   14001874c:	je     0x140018750
   14001874e:	mov    esi,eax
   140018750:	call   0x140025fe8
   140018755:	mov    r8,rax
   140018758:	lea    rcx,[rbp+0x7f]
   14001875c:	call   0x14002b2ac
   140018761:	mov    rbx,QWORD PTR [rbp+0x7f]
   140018765:	test   eax,eax
   140018767:	js     0x1400187bb
   140018769:	lea    r8,[rbp+0x6f]
   14001876d:	mov    rcx,rbx
   140018770:	lea    rdx,[rip+0x1f549]        # 0x140037cc0
   140018777:	call   0x14002b5f0
   14001877c:	test   eax,eax
   14001877e:	js     0x140018790
   140018780:	mov    ecx,DWORD PTR [rbp+0x6f]
   140018783:	lea    eax,[rcx-0x1]
   140018786:	cmp    eax,0x1c
   140018789:	ja     0x140018790
   14001878b:	mov    r14d,ecx
   14001878e:	jmp    0x1400187bf
   140018790:	lea    r8,[rbp+0x6f]
   140018794:	mov    rcx,rbx
   140018797:	lea    rdx,[rip+0x1f562]        # 0x140037d00
   14001879e:	call   0x14002b5f0
   1400187a3:	test   eax,eax
   1400187a5:	js     0x1400187bb
   1400187a7:	mov    ecx,DWORD PTR [rbp+0x6f]
   1400187aa:	lea    eax,[rcx-0x1]
   1400187ad:	cmp    eax,0x4
   1400187b0:	ja     0x1400187bb
   1400187b2:	mov    r14d,ecx
   1400187b5:	imul   r14,rsi
   1400187b9:	jmp    0x1400187bf
   1400187bb:	lea    r14,[rsi+rsi*2]
   1400187bf:	test   rbx,rbx
   1400187c2:	je     0x1400187cd
   1400187c4:	mov    rcx,rbx
   1400187c7:	call   QWORD PTR [rip+0x1986b]        # 0x140032038
   1400187cd:	mov    r8d,r14d
   1400187d0:	lea    rcx,[rip+0x1f639]        # 0x140037e10
   1400187d7:	mov    edx,edi
   1400187d9:	call   QWORD PTR [rip+0x19b51]        # 0x140032330
   1400187df:	lea    rsi,[r13+0x98]
   1400187e6:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   1400187ea:	je     0x1400187f9
   1400187ec:	mov    rcx,QWORD PTR [rsi]
   1400187ef:	call   QWORD PTR [rip+0x19963]        # 0x140032158
   1400187f5:	or     QWORD PTR [rsi],0xffffffffffffffff
   1400187f9:	xor    r9d,r9d
   1400187fc:	mov    DWORD PTR [rsp+0x28],0x40000000
   140018804:	mov    r8d,0xc0000000
   14001880a:	lea    rdx,[rip+0x1f5e7]        # 0x140037df8
   140018811:	mov    rcx,rsi
   140018814:	call   0x14002a57c
   140018819:	test   eax,eax
   14001881b:	js     0x140018960
   140018821:	lea    r15,[r13+0x88]
   140018828:	mov    r12,QWORD PTR [r15]
   14001882b:	test   r12,r12
   14001882e:	je     0x14001884a
   140018830:	mov    rax,QWORD PTR [r12]
   140018834:	mov    rbx,QWORD PTR [rax+0x8]
   140018838:	mov    rcx,rbx
   14001883b:	call   QWORD PTR [rip+0x19e67]        # 0x1400326a8
   140018841:	mov    rcx,r12
   140018844:	call   rbx
   140018846:	and    QWORD PTR [r15],0x0
   14001884a:	call   QWORD PTR [rip+0x19bb8]        # 0x140032408
   140018850:	mov    rbx,QWORD PTR [rax+0x98]
   140018857:	mov    rcx,rbx
   14001885a:	call   QWORD PTR [rip+0x19e48]        # 0x1400326a8
   140018860:	xor    r9d,r9d
   140018863:	xor    r8d,r8d
   140018866:	mov    edx,edi
   140018868:	mov    rcx,r15
   14001886b:	call   rbx
   14001886d:	test   eax,eax
   14001886f:	js     0x140018968
   140018875:	mov    rdi,QWORD PTR [rsi]
   140018878:	mov    rsi,QWORD PTR [r15]
   14001887b:	mov    rax,QWORD PTR [rsi]
   14001887e:	mov    rbx,QWORD PTR [rax+0x18]
   140018882:	mov    rcx,rbx
   140018885:	call   QWORD PTR [rip+0x19e1d]        # 0x1400326a8
   14001888b:	xor    r8d,r8d
   14001888e:	mov    rdx,rdi
   140018891:	mov    rcx,rsi
   140018894:	call   rbx
   140018896:	test   eax,eax
   140018898:	js     0x140018970
   14001889e:	lea    rsi,[r13+0x90]
   1400188a5:	mov    rdi,QWORD PTR [rsi]
   1400188a8:	test   rdi,rdi
   1400188ab:	je     0x1400188ed
   1400188ad:	mov    eax,DWORD PTR [rdi+0x8]
   1400188b0:	cmp    eax,0x1
   1400188b3:	jne    0x1400188be
   1400188b5:	mov    DWORD PTR [rdi+0x8],0x0
   1400188bc:	jmp    0x1400188cb
   1400188be:	or     eax,0xffffffff
   1400188c1:	lock xadd DWORD PTR [rdi+0x8],eax
   1400188c6:	sub    eax,0x1
   1400188c9:	jg     0x1400188e9
   1400188cb:	test   rdi,rdi
   1400188ce:	je     0x1400188e9
   1400188d0:	mov    rax,QWORD PTR [rdi]
   1400188d3:	mov    rbx,QWORD PTR [rax]
   1400188d6:	mov    rcx,rbx
   1400188d9:	call   QWORD PTR [rip+0x19dc9]        # 0x1400326a8
   1400188df:	mov    edx,0x1
   1400188e4:	mov    rcx,rdi
   1400188e7:	call   rbx
   1400188e9:	and    QWORD PTR [rsi],0x0
   1400188ed:	lea    r8,[rbp-0x69]
   1400188f1:	mov    rdx,r15
   1400188f4:	mov    rcx,rsi
   1400188f7:	call   0x14001a3b0
   1400188fc:	test   eax,eax
   1400188fe:	js     0x140018978
   140018900:	lea    rsi,[r13+0x80]
   140018907:	mov    rdi,QWORD PTR [rsi]
   14001890a:	test   rdi,rdi
   14001890d:	je     0x14001893d
   14001890f:	mov    rax,QWORD PTR [rdi]
   140018912:	mov    rbx,QWORD PTR [rax+0x38]
   140018916:	mov    rcx,rbx
   140018919:	call   QWORD PTR [rip+0x19d89]        # 0x1400326a8
   14001891f:	mov    rcx,rdi
   140018922:	call   rbx
   140018924:	mov    rax,QWORD PTR [rdi]
   140018927:	mov    rbx,QWORD PTR [rax+0x8]
   14001892b:	mov    rcx,rbx
   14001892e:	call   QWORD PTR [rip+0x19d74]        # 0x1400326a8
   140018934:	mov    rcx,rdi
   140018937:	call   rbx
   140018939:	and    QWORD PTR [rsi],0x0
   14001893d:	mov    rdx,r14
   140018940:	mov    rcx,rsi
   140018943:	call   0x14002d474
   140018948:	test   eax,eax
   14001894a:	js     0x140018980
   14001894c:	add    rsp,0xd8
   140018953:	pop    r15
   140018955:	pop    r14
   140018957:	pop    r13
   140018959:	pop    r12
   14001895b:	pop    rdi
   14001895c:	pop    rsi
   14001895d:	pop    rbx
   14001895e:	pop    rbp
   14001895f:	ret    
   140018960:	mov    ecx,eax
   140018962:	call   0x140029d64
   140018967:	int3   
   140018968:	mov    ecx,eax
   14001896a:	call   0x140029d64
   14001896f:	int3   
   140018970:	mov    ecx,eax
   140018972:	call   0x140029d64
   140018977:	int3   
   140018978:	mov    ecx,eax
   14001897a:	call   0x140029d64
   14001897f:	int3   
   140018980:	mov    ecx,eax
   140018982:	call   0x140029d64
   140018987:	int3   
   140018988:	int3   
   140018989:	int3   
   14001898a:	int3   
   14001898b:	int3   
   14001898c:	int3   
   14001898d:	int3   
   14001898e:	int3   
   14001898f:	int3   
   140018990:	mov    QWORD PTR [rsp+0x8],rcx
   140018995:	push   rbx
   140018996:	sub    rsp,0x50
   14001899a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400189a3:	mov    rbx,rcx
   1400189a6:	call   0x140019738
   1400189ab:	mov    rcx,rbx
   1400189ae:	call   0x14001916c
   1400189b3:	test   eax,eax
   1400189b5:	jns    0x1400189be
   1400189b7:	mov    ecx,eax
   1400189b9:	call   0x140029d64
   1400189be:	and    QWORD PTR [rsp+0x30],0x0
   1400189c4:	and    QWORD PTR [rsp+0x28],0x0
   1400189ca:	and    QWORD PTR [rsp+0x20],0x0
   1400189d0:	xor    r9d,r9d
   1400189d3:	xor    r8d,r8d
   1400189d6:	mov    edx,0x1240d7
   1400189db:	mov    rcx,rbx
   1400189de:	call   0x140018118
   1400189e3:	test   eax,eax
   1400189e5:	jns    0x1400189ef
   1400189e7:	mov    ecx,eax
   1400189e9:	call   0x140029d64
   1400189ee:	nop
   1400189ef:	add    rsp,0x50
   1400189f3:	pop    rbx
   1400189f4:	ret    
   1400189f5:	int3   
   1400189f6:	int3   
   1400189f7:	int3   
   1400189f8:	int3   
   1400189f9:	int3   
   1400189fa:	int3   
   1400189fb:	int3   
   1400189fc:	mov    QWORD PTR [rsp+0x8],rbx
   140018a01:	mov    QWORD PTR [rsp+0x10],rsi
   140018a06:	push   rdi
   140018a07:	sub    rsp,0x20
   140018a0b:	mov    al,BYTE PTR [rcx+0xf8]
   140018a11:	mov    rdi,rcx
   140018a14:	test   al,al
   140018a16:	jne    0x140018acb
   140018a1c:	mov    BYTE PTR [rcx+0xf8],0x1
   140018a23:	add    rcx,0xc8
   140018a2a:	call   0x140029b84
   140018a2f:	mov    rcx,QWORD PTR [rdi+0x98]
   140018a36:	or     rbx,0xffffffffffffffff
   140018a3a:	cmp    rcx,rbx
   140018a3d:	je     0x140018a4c
   140018a3f:	call   QWORD PTR [rip+0x19713]        # 0x140032158
   140018a45:	mov    QWORD PTR [rdi+0x98],rbx
   140018a4c:	lea    rcx,[rdi+0xa8]
   140018a53:	call   0x140029b84
   140018a58:	mov    rsi,QWORD PTR [rdi+0x90]
   140018a5f:	test   rsi,rsi
   140018a62:	je     0x140018aa8
   140018a64:	mov    eax,DWORD PTR [rsi+0x8]
   140018a67:	cmp    eax,0x1
   140018a6a:	jne    0x140018a75
   140018a6c:	mov    DWORD PTR [rsi+0x8],0x0
   140018a73:	jmp    0x140018a82
   140018a75:	mov    eax,ebx
   140018a77:	lock xadd DWORD PTR [rsi+0x8],eax
   140018a7c:	add    eax,ebx
   140018a7e:	test   eax,eax
   140018a80:	jg     0x140018aa0
   140018a82:	test   rsi,rsi
   140018a85:	je     0x140018aa0
   140018a87:	mov    rax,QWORD PTR [rsi]
   140018a8a:	mov    rbx,QWORD PTR [rax]
   140018a8d:	mov    rcx,rbx
   140018a90:	call   QWORD PTR [rip+0x19c12]        # 0x1400326a8
   140018a96:	mov    edx,0x1
   140018a9b:	mov    rcx,rsi
   140018a9e:	call   rbx
   140018aa0:	and    QWORD PTR [rdi+0x90],0x0
   140018aa8:	mov    rdi,QWORD PTR [rdi+0x80]
   140018aaf:	test   rdi,rdi
   140018ab2:	je     0x140018acb
   140018ab4:	mov    rax,QWORD PTR [rdi]
   140018ab7:	mov    rbx,QWORD PTR [rax+0x30]
   140018abb:	mov    rcx,rbx
   140018abe:	call   QWORD PTR [rip+0x19be4]        # 0x1400326a8
   140018ac4:	xor    edx,edx
   140018ac6:	mov    rcx,rdi
   140018ac9:	call   rbx
   140018acb:	mov    rbx,QWORD PTR [rsp+0x30]
   140018ad0:	mov    rsi,QWORD PTR [rsp+0x38]
   140018ad5:	add    rsp,0x20
   140018ad9:	pop    rdi
   140018ada:	ret    
   140018adb:	int3   
   140018adc:	int3   
   140018add:	int3   
   140018ade:	int3   
   140018adf:	int3   
   140018ae0:	int3   
   140018ae1:	int3   
   140018ae2:	int3   
   140018ae3:	int3   
   140018ae4:	int3   
   140018ae5:	int3   
   140018ae6:	int3   
   140018ae7:	int3   
   140018ae8:	int3   
   140018ae9:	int3   
   140018aea:	int3   
   140018aeb:	int3   
   140018aec:	int3   
   140018aed:	int3   
   140018aee:	int3   
   140018aef:	int3   
   140018af0:	mov    QWORD PTR [rsp+0x8],rbx
   140018af5:	push   rdi
   140018af6:	sub    rsp,0x20
   140018afa:	mov    ebx,edx
   140018afc:	mov    rdi,rcx
   140018aff:	call   0x140018b28
   140018b04:	test   bl,0x1
   140018b07:	je     0x140018b12
   140018b09:	mov    rcx,rdi
   140018b0c:	call   QWORD PTR [rip+0x19ab6]        # 0x1400325c8
   140018b12:	mov    rax,rdi
   140018b15:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b1a:	add    rsp,0x20
   140018b1e:	pop    rdi
   140018b1f:	ret    
   140018b20:	int3   
   140018b21:	int3   
   140018b22:	int3   
   140018b23:	int3   
   140018b24:	int3   
   140018b25:	int3   
   140018b26:	int3   
   140018b27:	int3   
   140018b28:	rex push rbx
   140018b2a:	sub    rsp,0x20
   140018b2e:	lea    rax,[rip+0x1bdb3]        # 0x1400348e8
   140018b35:	mov    rbx,rcx
   140018b38:	mov    QWORD PTR [rcx],rax
   140018b3b:	mov    rcx,QWORD PTR [rip+0x32536]        # 0x14004b078
   140018b42:	lea    rax,[rip+0x3252f]        # 0x14004b078
   140018b49:	cmp    rcx,rax
   140018b4c:	je     0x140018b69
   140018b4e:	test   BYTE PTR [rcx+0x1c],0x10
   140018b52:	je     0x140018b69
   140018b54:	mov    rcx,QWORD PTR [rcx+0x10]
   140018b58:	lea    r8,[rip+0x1f289]        # 0x140037de8
   140018b5f:	mov    edx,0x14
   140018b64:	call   0x140001f08
   140018b69:	mov    rcx,QWORD PTR [rbx+0x38]
   140018b6d:	test   rcx,rcx
   140018b70:	je     0x140018b78
   140018b72:	call   QWORD PTR [rip+0x19a50]        # 0x1400325c8
   140018b78:	lea    rax,[rip+0x1bd29]        # 0x1400348a8
   140018b7f:	mov    QWORD PTR [rbx],rax
   140018b82:	add    rsp,0x20
   140018b86:	pop    rbx
   140018b87:	ret    
   140018b88:	int3   
   140018b89:	int3   
   140018b8a:	int3   
   140018b8b:	int3   
   140018b8c:	int3   
   140018b8d:	int3   
   140018b8e:	int3   
   140018b8f:	int3   
   140018b90:	rex push rbx
   140018b92:	sub    rsp,0x20
   140018b96:	mov    rbx,QWORD PTR [rcx+0x30]
   140018b9a:	test   rbx,rbx
   140018b9d:	je     0x140018be0
   140018b9f:	mov    al,BYTE PTR [rbx+0xf8]
   140018ba5:	mov    rdx,QWORD PTR [rcx+0x38]
   140018ba9:	mov    r8d,DWORD PTR [rcx+0x40]
   140018bad:	test   al,al
   140018baf:	jne    0x140018be0
   140018bb1:	mov    rcx,QWORD PTR [rbx+0x8]
   140018bb5:	call   0x14001b670
   140018bba:	mov    eax,DWORD PTR [rbx+0xe8]
   140018bc0:	cmp    eax,0xa
   140018bc3:	jle    0x140018be0
   140018bc5:	mov    edx,DWORD PTR [rbx+0xe8]
   140018bcb:	mov    eax,DWORD PTR [rbx+0xec]
   140018bd1:	add    edx,0xfffffff6
   140018bd4:	cmp    eax,edx
   140018bd6:	jge    0x140018be0
   140018bd8:	mov    rcx,rbx
   140018bdb:	call   0x14001916c
   140018be0:	add    rsp,0x20
   140018be4:	pop    rbx
   140018be5:	ret    
   140018be6:	int3   
   140018be7:	int3   
   140018be8:	int3   
   140018be9:	int3   
   140018bea:	int3   
   140018beb:	int3   
   140018bec:	mov    QWORD PTR [rsp+0x10],rdx
   140018bf1:	push   rbp
   140018bf2:	push   rbx
   140018bf3:	push   rsi
   140018bf4:	push   rdi
   140018bf5:	push   r12
   140018bf7:	push   r14
   140018bf9:	push   r15
   140018bfb:	mov    rbp,rsp
   140018bfe:	sub    rsp,0x30
   140018c02:	mov    rbx,rcx
   140018c05:	mov    r9,r8
   140018c08:	add    rcx,0xc8
   140018c0f:	xor    edi,edi
   140018c11:	call   0x140029ab0
   140018c16:	mov    r15d,eax
   140018c19:	test   eax,eax
   140018c1b:	js     0x140018c23
   140018c1d:	mov    rdi,rcx
   140018c20:	xor    r15d,r15d
   140018c23:	test   r15d,r15d
   140018c26:	js     0x140018cdf
   140018c2c:	and    QWORD PTR [rbp+0x58],0x0
   140018c31:	lea    r8,[rbp+0x48]
   140018c35:	mov    DWORD PTR [rbp+0x40],r9d
   140018c39:	lea    rdx,[rbp-0x10]
   140018c3d:	lea    r9,[rbp+0x40]
   140018c41:	mov    QWORD PTR [rbp-0x10],rbx
   140018c45:	lea    rcx,[rbp+0x58]
   140018c49:	call   0x14001a5b4
   140018c4e:	mov    r15d,eax
   140018c51:	test   eax,eax
   140018c53:	js     0x140018c9b
   140018c55:	mov    rcx,QWORD PTR [rbp+0x58]
   140018c59:	mov    r12,QWORD PTR [rbx+0x80]
   140018c60:	mov    eax,DWORD PTR [rcx+0x8]
   140018c63:	test   eax,eax
   140018c65:	jne    0x140018c70
   140018c67:	mov    DWORD PTR [rcx+0x8],0x1
   140018c6e:	jmp    0x140018c74
   140018c70:	lock inc DWORD PTR [rcx+0x8]
   140018c74:	mov    rax,QWORD PTR [r12]
   140018c78:	mov    rbx,QWORD PTR [rbp+0x58]
   140018c7c:	mov    r14,QWORD PTR [rax+0x18]
   140018c80:	mov    rcx,r14
   140018c83:	call   QWORD PTR [rip+0x19a1f]        # 0x1400326a8
   140018c89:	mov    r8d,0x5
   140018c8f:	lea    rdx,[rbx+0x10]
   140018c93:	mov    rcx,r12
   140018c96:	call   r14
   140018c99:	jmp    0x140018c9f
   140018c9b:	mov    rbx,QWORD PTR [rbp+0x58]
   140018c9f:	test   rbx,rbx
   140018ca2:	je     0x140018cdf
   140018ca4:	mov    eax,DWORD PTR [rbx+0x8]
   140018ca7:	cmp    eax,0x1
   140018caa:	jne    0x140018cb5
   140018cac:	mov    DWORD PTR [rbx+0x8],0x0
   140018cb3:	jmp    0x140018cc2
   140018cb5:	or     eax,0xffffffff
   140018cb8:	lock xadd DWORD PTR [rbx+0x8],eax
   140018cbd:	sub    eax,0x1
   140018cc0:	jg     0x140018cdf
   140018cc2:	mov    rbx,QWORD PTR [rbp+0x58]
   140018cc6:	mov    rax,QWORD PTR [rbx]
   140018cc9:	mov    rsi,QWORD PTR [rax]
   140018ccc:	mov    rcx,rsi
   140018ccf:	call   QWORD PTR [rip+0x199d3]        # 0x1400326a8
   140018cd5:	mov    edx,0x1
   140018cda:	mov    rcx,rbx
   140018cdd:	call   rsi
   140018cdf:	test   rdi,rdi
   140018ce2:	je     0x140018cfe
   140018ce4:	or     ecx,0xffffffff
   140018ce7:	lock xadd DWORD PTR [rdi+0x8],ecx
   140018cec:	dec    ecx
   140018cee:	cmp    ecx,0x80000000
   140018cf4:	jne    0x140018cfe
   140018cf6:	mov    rcx,rdi
   140018cf9:	call   0x140029c90
   140018cfe:	mov    eax,r15d
   140018d01:	add    rsp,0x30
   140018d05:	pop    r15
   140018d07:	pop    r14
   140018d09:	pop    r12
   140018d0b:	pop    rdi
   140018d0c:	pop    rsi
   140018d0d:	pop    rbx
   140018d0e:	pop    rbp
   140018d0f:	ret    
   140018d10:	int3   
   140018d11:	int3   
   140018d12:	int3   
   140018d13:	int3   
   140018d14:	int3   
   140018d15:	int3   
   140018d16:	int3   
   140018d17:	int3   
   140018d18:	int3   
   140018d19:	int3   
   140018d1a:	int3   
   140018d1b:	int3   
   140018d1c:	int3   
   140018d1d:	int3   
   140018d1e:	int3   
   140018d1f:	int3   
   140018d20:	mov    QWORD PTR [rsp+0x8],rbx
   140018d25:	mov    QWORD PTR [rsp+0x10],rbp
   140018d2a:	mov    QWORD PTR [rsp+0x18],rsi
   140018d2f:	push   rdi
   140018d30:	sub    rsp,0x20
   140018d34:	mov    rdi,QWORD PTR [rcx+0x10]
   140018d38:	lea    rax,[rip+0x1bb99]        # 0x1400348d8
   140018d3f:	mov    QWORD PTR [rcx],rax
   140018d42:	mov    rsi,rcx
   140018d45:	mov    ebp,edx
   140018d47:	mov    rax,QWORD PTR [rdi]
   140018d4a:	mov    rbx,QWORD PTR [rax+0x40]
   140018d4e:	mov    rcx,rbx
   140018d51:	call   QWORD PTR [rip+0x19951]        # 0x1400326a8
   140018d57:	mov    rcx,rdi
   140018d5a:	call   rbx
   140018d5c:	xor    edi,edi
   140018d5e:	cmp    QWORD PTR [rsi+0x20],rdi
   140018d62:	jbe    0x140018d8e
   140018d64:	mov    rbx,QWORD PTR [rsi+0x18]
   140018d68:	or     edx,0xffffffff
   140018d6b:	mov    rbx,QWORD PTR [rbx+rdi*8]
   140018d6f:	mov    rcx,rbx
   140018d72:	call   0x14002a178
   140018d77:	test   rbx,rbx
   140018d7a:	je     0x140018d85
   140018d7c:	mov    rcx,rbx
   140018d7f:	call   QWORD PTR [rip+0x193d3]        # 0x140032158
   140018d85:	inc    rdi
   140018d88:	cmp    rdi,QWORD PTR [rsi+0x20]
   140018d8c:	jb     0x140018d64
   140018d8e:	mov    rcx,QWORD PTR [rsi+0x18]
   140018d92:	test   rcx,rcx
   140018d95:	je     0x140018d9d
   140018d97:	call   QWORD PTR [rip+0x1982b]        # 0x1400325c8
   140018d9d:	lea    rax,[rip+0x1bb04]        # 0x1400348a8
   140018da4:	mov    QWORD PTR [rsi],rax
   140018da7:	test   bpl,0x1
   140018dab:	je     0x140018db6
   140018dad:	mov    rcx,rsi
   140018db0:	call   QWORD PTR [rip+0x19812]        # 0x1400325c8
   140018db6:	mov    rbx,QWORD PTR [rsp+0x30]
   140018dbb:	mov    rax,rsi
   140018dbe:	mov    rsi,QWORD PTR [rsp+0x40]
   140018dc3:	mov    rbp,QWORD PTR [rsp+0x38]
   140018dc8:	add    rsp,0x20
   140018dcc:	pop    rdi
   140018dcd:	ret    
   140018dce:	int3   
   140018dcf:	int3   
   140018dd0:	int3   
   140018dd1:	int3   
   140018dd2:	int3   
   140018dd3:	int3   
   140018dd4:	int3   
   140018dd5:	int3   
   140018dd6:	int3   
   140018dd7:	int3   
   140018dd8:	int3   
   140018dd9:	int3   
   140018dda:	int3   
   140018ddb:	int3   
   140018ddc:	int3   
   140018ddd:	int3   
   140018dde:	int3   
   140018ddf:	int3   
   140018de0:	mov    QWORD PTR [rsp+0x8],rbx
   140018de5:	push   rdi
   140018de6:	sub    rsp,0x20
   140018dea:	mov    rdi,QWORD PTR [rcx+0x10]
   140018dee:	mov    rax,QWORD PTR [rdi]
   140018df1:	mov    rbx,QWORD PTR [rax+0x38]
   140018df5:	mov    rcx,rbx
   140018df8:	call   QWORD PTR [rip+0x198aa]        # 0x1400326a8
   140018dfe:	or     r8d,0xffffffff
   140018e02:	xor    edx,edx
   140018e04:	mov    rcx,rdi
   140018e07:	call   rbx
   140018e09:	mov    rbx,QWORD PTR [rsp+0x30]
   140018e0e:	xor    eax,eax
   140018e10:	add    rsp,0x20
   140018e14:	pop    rdi
   140018e15:	ret    
   140018e16:	int3   
   140018e17:	int3   
   140018e18:	int3   
   140018e19:	int3   
   140018e1a:	int3   
   140018e1b:	int3   
   140018e1c:	mov    QWORD PTR [rsp+0x8],rbx
   140018e21:	mov    QWORD PTR [rsp+0x10],rbp
   140018e26:	mov    QWORD PTR [rsp+0x18],rsi
   140018e2b:	push   rdi
   140018e2c:	push   r14
   140018e2e:	push   r15
   140018e30:	sub    rsp,0x30
   140018e34:	xor    esi,esi
   140018e36:	mov    r14d,edx
   140018e39:	mov    rdi,rcx
   140018e3c:	cmp    BYTE PTR [rcx+0x74],sil
   140018e40:	jne    0x140018e7b
   140018e42:	mov    rcx,QWORD PTR [rip+0x3222f]        # 0x14004b078
   140018e49:	lea    rbp,[rip+0x32228]        # 0x14004b078
   140018e50:	cmp    rcx,rbp
   140018e53:	je     0x14001914d
   140018e59:	test   BYTE PTR [rcx+0x1c],0x10
   140018e5d:	je     0x14001914d
   140018e63:	lea    edx,[rsi+0x16]
   140018e66:	mov    rcx,QWORD PTR [rcx+0x10]
   140018e6a:	lea    r8,[rip+0x1ef77]        # 0x140037de8
   140018e71:	call   0x140001f08
   140018e76:	jmp    0x14001914d
   140018e7b:	mov    ebx,DWORD PTR [rcx+0xec]
   140018e81:	mov    edx,ebx
   140018e83:	mov    ecx,0x11f
   140018e88:	call   QWORD PTR [rip+0x19552]        # 0x1400323e0
   140018e8e:	mov    eax,ebx
   140018e90:	mov    edx,esi
   140018e92:	sub    eax,r14d
   140018e95:	mov    ecx,0x11e
   140018e9a:	cmp    ebx,r14d
   140018e9d:	cmovge edx,eax
   140018ea0:	call   QWORD PTR [rip+0x1953a]        # 0x1400323e0
   140018ea6:	mov    al,BYTE PTR [rdi+0xf9]
   140018eac:	lea    rbp,[rip+0x321c5]        # 0x14004b078
   140018eb3:	or     ebx,0xffffffff
   140018eb6:	mov    r15d,0x1
   140018ebc:	test   al,al
   140018ebe:	jne    0x140018efa
   140018ec0:	mov    eax,ebx
   140018ec2:	lock xadd DWORD PTR [rdi+0xf0],eax
   140018eca:	add    eax,ebx
   140018ecc:	jne    0x140018efa
   140018ece:	mov    rcx,QWORD PTR [rip+0x321a3]        # 0x14004b078
   140018ed5:	cmp    rcx,rbp
   140018ed8:	je     0x140018ef3
   140018eda:	test   BYTE PTR [rcx+0x1c],0x2
   140018ede:	je     0x140018ef3
   140018ee0:	mov    rcx,QWORD PTR [rcx+0x10]
   140018ee4:	lea    edx,[rbx+0x18]
   140018ee7:	lea    r8,[rip+0x1eefa]        # 0x140037de8
   140018eee:	call   0x140001f08
   140018ef3:	mov    BYTE PTR [rdi+0xf9],r15b
   140018efa:	mov    al,BYTE PTR [rdi+0xfa]
   140018f00:	test   al,al
   140018f02:	jne    0x140018f3e
   140018f04:	mov    eax,ebx
   140018f06:	lock xadd DWORD PTR [rdi+0xf4],eax
   140018f0e:	add    eax,ebx
   140018f10:	jne    0x140018f3e
   140018f12:	mov    rcx,QWORD PTR [rip+0x3215f]        # 0x14004b078
   140018f19:	cmp    rcx,rbp
   140018f1c:	je     0x140018f37
   140018f1e:	test   BYTE PTR [rcx+0x1c],0x2
   140018f22:	je     0x140018f37
   140018f24:	mov    rcx,QWORD PTR [rcx+0x10]
   140018f28:	lea    edx,[rax+0x18]
   140018f2b:	lea    r8,[rip+0x1eeb6]        # 0x140037de8
   140018f32:	call   0x140001f08
   140018f37:	mov    BYTE PTR [rdi+0xfa],r15b
   140018f3e:	mov    rax,QWORD PTR [rip+0x32133]        # 0x14004b078
   140018f45:	cmp    rax,rbp
   140018f48:	je     0x140018f79
   140018f4a:	test   BYTE PTR [rax+0x1c],0x10
   140018f4e:	je     0x140018f79
   140018f50:	movzx  edx,BYTE PTR [rdi+0xfa]
   140018f57:	mov    r9d,r14d
   140018f5a:	movzx  eax,BYTE PTR [rdi+0xf9]
   140018f61:	mov    rcx,QWORD PTR [rip+0x32110]        # 0x14004b078
   140018f68:	mov    DWORD PTR [rsp+0x28],edx
   140018f6c:	mov    DWORD PTR [rsp+0x20],eax
   140018f70:	mov    rcx,QWORD PTR [rcx+0x10]
   140018f74:	call   0x140017b10
   140018f79:	mov    al,BYTE PTR [rdi+0xf9]
   140018f7f:	test   al,al
   140018f81:	jne    0x140018f91
   140018f83:	mov    al,BYTE PTR [rdi+0xfa]
   140018f89:	test   al,al
   140018f8b:	je     0x14001914d
   140018f91:	xor    eax,eax
   140018f93:	lock cmpxchg DWORD PTR [rip+0x37278],r15d        # 0x140050214
   140018f9c:	cmp    eax,r15d
   140018f9f:	jne    0x140018fc5
   140018fa1:	mov    rcx,QWORD PTR [rip+0x320d0]        # 0x14004b078
   140018fa8:	cmp    rcx,rbp
   140018fab:	je     0x14001914d
   140018fb1:	test   BYTE PTR [rcx+0x1c],0x2
   140018fb5:	je     0x14001914d
   140018fbb:	mov    edx,0x1a
   140018fc0:	jmp    0x140018e66
   140018fc5:	mov    ebx,DWORD PTR [rdi+0xe8]
   140018fcb:	mov    eax,0x51eb851f
   140018fd0:	mov    ecx,DWORD PTR [rdi+0x5c]
   140018fd3:	mov    r15d,ebx
   140018fd6:	imul   ecx,ebx
   140018fd9:	imul   ecx
   140018fdb:	mov    ecx,edx
   140018fdd:	sar    ecx,0x5
   140018fe0:	mov    eax,ecx
   140018fe2:	shr    eax,0x1f
   140018fe5:	add    ecx,eax
   140018fe7:	cmp    r14d,DWORD PTR [rdi+0x58]
   140018feb:	jge    0x140019093
   140018ff1:	cmp    ebx,DWORD PTR [rdi+0x60]
   140018ff4:	jge    0x140019093
   140018ffa:	mov    al,BYTE PTR [rdi+0xf9]
   140019000:	test   al,al
   140019002:	je     0x140019067
   140019004:	mov    ecx,DWORD PTR [rdi+0x6c]
   140019007:	mov    eax,0x66666667
   14001900c:	imul   ecx,ebx
   14001900f:	imul   ecx
   140019011:	mov    ebx,edx
   140019013:	sar    ebx,0x2
   140019016:	mov    eax,ebx
   140019018:	shr    eax,0x1f
   14001901b:	add    ebx,eax
   14001901d:	cmp    DWORD PTR [rdi+0x60],ebx
   140019020:	cmovl  ebx,DWORD PTR [rdi+0x60]
   140019024:	mov    rcx,QWORD PTR [rip+0x3204d]        # 0x14004b078
   14001902b:	cmp    rcx,rbp
   14001902e:	je     0x140019052
   140019030:	test   BYTE PTR [rcx+0x1c],0x2
   140019034:	je     0x140019052
   140019036:	mov    eax,DWORD PTR [rdi+0x58]
   140019039:	mov    edx,0x1b
   14001903e:	mov    rcx,QWORD PTR [rcx+0x10]
   140019042:	mov    r9d,r14d
   140019045:	mov    DWORD PTR [rsp+0x28],ebx
   140019049:	mov    DWORD PTR [rsp+0x20],eax
   14001904d:	call   0x140017bc0
   140019052:	mov    eax,DWORD PTR [rdi+0x64]
   140019055:	mov    BYTE PTR [rdi+0xf9],sil
   14001905c:	xchg   DWORD PTR [rdi+0xf0],eax
   140019062:	jmp    0x140019114
   140019067:	mov    rcx,QWORD PTR [rip+0x3200a]        # 0x14004b078
   14001906e:	cmp    rcx,rbp
   140019071:	je     0x140019147
   140019077:	test   BYTE PTR [rcx+0x1c],0x4
   14001907b:	je     0x140019147
   140019081:	mov    eax,DWORD PTR [rdi+0x58]
   140019084:	mov    edx,0x1c
   140019089:	mov    rcx,QWORD PTR [rcx+0x10]
   14001908d:	mov    DWORD PTR [rsp+0x20],eax
   140019091:	jmp    0x14001910c
   140019093:	cmp    r14d,ecx
   140019096:	jle    0x140019147
   14001909c:	mov    al,BYTE PTR [rdi+0xfa]
   1400190a2:	test   al,al
   1400190a4:	je     0x1400190ed
   1400190a6:	sub    ebx,DWORD PTR [rdi+0x70]
   1400190a9:	cmp    DWORD PTR [rdi+0x54],ebx
   1400190ac:	cmovg  ebx,DWORD PTR [rdi+0x54]
   1400190b0:	mov    rax,QWORD PTR [rip+0x31fc1]        # 0x14004b078
   1400190b7:	cmp    rax,rbp
   1400190ba:	je     0x1400190db
   1400190bc:	test   BYTE PTR [rax+0x1c],0x2
   1400190c0:	je     0x1400190db
   1400190c2:	mov    DWORD PTR [rsp+0x28],ebx
   1400190c6:	mov    edx,0x1d
   1400190cb:	mov    DWORD PTR [rsp+0x20],ecx
   1400190cf:	mov    r9d,r14d
   1400190d2:	mov    rcx,QWORD PTR [rax+0x10]
   1400190d6:	call   0x140017bc0
   1400190db:	mov    eax,DWORD PTR [rdi+0x68]
   1400190de:	mov    BYTE PTR [rdi+0xfa],sil
   1400190e5:	xchg   DWORD PTR [rdi+0xf4],eax
   1400190eb:	jmp    0x140019114
   1400190ed:	mov    rax,QWORD PTR [rip+0x31f84]        # 0x14004b078
   1400190f4:	cmp    rax,rbp
   1400190f7:	je     0x140019147
   1400190f9:	test   BYTE PTR [rax+0x1c],0x4
   1400190fd:	je     0x140019147
   1400190ff:	mov    DWORD PTR [rsp+0x20],ecx
   140019103:	mov    edx,0x1e
   140019108:	mov    rcx,QWORD PTR [rax+0x10]
   14001910c:	mov    r9d,r14d
   14001910f:	call   0x140017b70
   140019114:	cmp    ebx,r15d
   140019117:	je     0x140019147
   140019119:	cmp    ebx,DWORD PTR [rdi+0x54]
   14001911c:	mov    rcx,rdi
   14001911f:	cmovl  ebx,DWORD PTR [rdi+0x54]
   140019123:	cmp    ebx,DWORD PTR [rdi+0x60]
   140019126:	cmovg  ebx,DWORD PTR [rdi+0x60]
   14001912a:	mov    DWORD PTR [rdi+0x1c],ebx
   14001912d:	call   0x140019738
   140019132:	mov    eax,ebx
   140019134:	xchg   DWORD PTR [rdi+0xe8],eax
   14001913a:	cmp    ebx,r15d
   14001913d:	jle    0x140019147
   14001913f:	mov    rcx,rdi
   140019142:	call   0x14001916c
   140019147:	xchg   DWORD PTR [rip+0x370c7],esi        # 0x140050214
   14001914d:	mov    rbx,QWORD PTR [rsp+0x50]
   140019152:	mov    rbp,QWORD PTR [rsp+0x58]
   140019157:	mov    rsi,QWORD PTR [rsp+0x60]
   14001915c:	add    rsp,0x30
   140019160:	pop    r15
   140019162:	pop    r14
   140019164:	pop    rdi
   140019165:	ret    
   140019166:	int3   
   140019167:	int3   
   140019168:	int3   
   140019169:	int3   
   14001916a:	int3   
   14001916b:	int3   
   14001916c:	mov    QWORD PTR [rsp+0x8],rbx
   140019171:	push   rbp
   140019172:	push   rsi
   140019173:	push   rdi
   140019174:	push   r12
   140019176:	push   r13
   140019178:	push   r14
   14001917a:	push   r15
   14001917c:	mov    rbp,rsp
   14001917f:	sub    rsp,0x40
   140019183:	xor    esi,esi
   140019185:	mov    r13,rcx
   140019188:	mov    r12d,esi
   14001918b:	xor    eax,eax
   14001918d:	lea    edi,[rsi+0x1]
   140019190:	lock cmpxchg DWORD PTR [rip+0x37078],edi        # 0x140050210
   140019198:	cmp    eax,edi
   14001919a:	jne    0x1400191cf
   14001919c:	mov    rcx,QWORD PTR [rip+0x31ed5]        # 0x14004b078
   1400191a3:	lea    r14,[rip+0x31ece]        # 0x14004b078
   1400191aa:	cmp    rcx,r14
   1400191ad:	je     0x1400191c8
   1400191af:	test   BYTE PTR [rcx+0x1c],0x2
   1400191b3:	je     0x1400191c8
   1400191b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400191b9:	lea    edx,[rsi+0x1f]
   1400191bc:	lea    r8,[rip+0x1ec25]        # 0x140037de8
   1400191c3:	call   0x140001f08
   1400191c8:	xor    eax,eax
   1400191ca:	jmp    0x1400194de
   1400191cf:	mov    eax,DWORD PTR [rcx+0xec]
   1400191d5:	mov    r15d,DWORD PTR [rcx+0xe8]
   1400191dc:	cmp    eax,r15d
   1400191df:	jl     0x14001921d
   1400191e1:	mov    rcx,QWORD PTR [rip+0x31e90]        # 0x14004b078
   1400191e8:	lea    r14,[rip+0x31e89]        # 0x14004b078
   1400191ef:	cmp    rcx,r14
   1400191f2:	je     0x1400194d5
   1400191f8:	test   BYTE PTR [rcx+0x1c],0x2
   1400191fc:	je     0x1400194d5
   140019202:	mov    rcx,QWORD PTR [rcx+0x10]
   140019206:	mov    edx,0x20
   14001920b:	mov    r9d,eax
   14001920e:	mov    DWORD PTR [rsp+0x20],r15d
   140019213:	call   0x140017b70
   140019218:	jmp    0x1400194d5
   14001921d:	sub    r15d,eax
   140019220:	mov    DWORD PTR [rbp+0x50],esi
   140019223:	mov    eax,r15d
   140019226:	mov    DWORD PTR [rbp+0x48],esi
   140019229:	cdq    
   14001922a:	sub    eax,edx
   14001922c:	sar    eax,1
   14001922e:	mov    DWORD PTR [rbp+0x58],eax
   140019231:	mov    rcx,QWORD PTR [rip+0x31e40]        # 0x14004b078
   140019238:	lea    r14,[rip+0x31e39]        # 0x14004b078
   14001923f:	cmp    rcx,r14
   140019242:	je     0x140019262
   140019244:	test   BYTE PTR [rcx+0x1c],0x2
   140019248:	je     0x140019262
   14001924a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001924e:	mov    edx,0x21
   140019253:	mov    r9d,r15d
   140019256:	call   0x140017a70
   14001925b:	mov    rcx,QWORD PTR [rip+0x31e16]        # 0x14004b078
   140019262:	test   r15d,r15d
   140019265:	jle    0x1400194b5
   14001926b:	mov    rbx,rsi
   14001926e:	mov    QWORD PTR [rbp-0x8],rsi
   140019272:	lea    rcx,[rbp-0x8]
   140019276:	mov    QWORD PTR [rbp-0x10],rbx
   14001927a:	call   0x14001a7e8
   14001927f:	mov    r12d,eax
   140019282:	test   eax,eax
   140019284:	jns    0x1400192cf
   140019286:	mov    rax,QWORD PTR [rbp-0x8]
   14001928a:	test   rax,rax
   14001928d:	je     0x140019316
   140019293:	mov    ecx,DWORD PTR [rax+0x8]
   140019296:	cmp    ecx,edi
   140019298:	jne    0x14001929f
   14001929a:	mov    DWORD PTR [rax+0x8],esi
   14001929d:	jmp    0x1400192ac
   14001929f:	or     ecx,0xffffffff
   1400192a2:	lock xadd DWORD PTR [rax+0x8],ecx
   1400192a7:	sub    ecx,0x1
   1400192aa:	jg     0x1400192c9
   1400192ac:	mov    rbx,QWORD PTR [rbp-0x8]
   1400192b0:	mov    rax,QWORD PTR [rbx]
   1400192b3:	mov    rdi,QWORD PTR [rax]
   1400192b6:	mov    rcx,rdi
   1400192b9:	call   QWORD PTR [rip+0x193e9]        # 0x1400326a8
   1400192bf:	mov    edx,0x1
   1400192c4:	mov    rcx,rbx
   1400192c7:	call   rdi
   1400192c9:	mov    rbx,QWORD PTR [rbp-0x10]
   1400192cd:	jmp    0x140019316
   1400192cf:	mov    rdi,QWORD PTR [rbp-0x8]
   1400192d3:	mov    r12d,DWORD PTR [r13+0x18]
   1400192d7:	mov    rcx,QWORD PTR [rdi+0x50]
   1400192db:	test   rcx,rcx
   1400192de:	je     0x1400192ea
   1400192e0:	call   QWORD PTR [rip+0x192e2]        # 0x1400325c8
   1400192e6:	mov    QWORD PTR [rdi+0x50],rsi
   1400192ea:	mov    rcx,r12
   1400192ed:	call   QWORD PTR [rip+0x192dd]        # 0x1400325d0
   1400192f3:	mov    QWORD PTR [rdi+0x50],rax
   1400192f7:	test   rax,rax
   1400192fa:	je     0x140019393
   140019300:	mov    rbx,rdi
   140019303:	mov    QWORD PTR [rdi+0x58],r12
   140019307:	mov    QWORD PTR [rbp-0x10],rbx
   14001930b:	mov    r12d,esi
   14001930e:	mov    QWORD PTR [rdi+0x48],r13
   140019312:	mov    QWORD PTR [rbp-0x8],rsi
   140019316:	test   r12d,r12d
   140019319:	js     0x1400193d9
   14001931f:	mov    rcx,rbx
   140019322:	call   0x140017f40
   140019327:	mov    r12d,eax
   14001932a:	test   eax,eax
   14001932c:	jns    0x140019355
   14001932e:	mov    rcx,QWORD PTR [rip+0x31d43]        # 0x14004b078
   140019335:	cmp    rcx,r14
   140019338:	je     0x14001940a
   14001933e:	test   BYTE PTR [rcx+0x1c],0x1
   140019342:	je     0x14001940a
   140019348:	mov    edx,0x23
   14001934d:	mov    r9d,eax
   140019350:	jmp    0x1400193f3
   140019355:	mov    edi,0x1
   14001935a:	lock add DWORD PTR [r13+0xec],edi
   140019362:	mov    rax,QWORD PTR [rbp-0x10]
   140019366:	sub    r15d,edi
   140019369:	mov    DWORD PTR [rbp+0x48],esi
   14001936c:	test   rax,rax
   14001936f:	je     0x1400194a5
   140019375:	mov    ecx,DWORD PTR [rax+0x8]
   140019378:	cmp    ecx,edi
   14001937a:	jne    0x140019384
   14001937c:	mov    DWORD PTR [rax+0x8],esi
   14001937f:	jmp    0x140019483
   140019384:	or     ecx,0xffffffff
   140019387:	lock xadd DWORD PTR [rax+0x8],ecx
   14001938c:	sub    ecx,edi
   14001938e:	jmp    0x140019481
   140019393:	test   rdi,rdi
   140019396:	je     0x1400193d3
   140019398:	mov    eax,DWORD PTR [rdi+0x8]
   14001939b:	cmp    eax,0x1
   14001939e:	jne    0x1400193a5
   1400193a0:	mov    DWORD PTR [rdi+0x8],esi
   1400193a3:	jmp    0x1400193b2
   1400193a5:	or     eax,0xffffffff
   1400193a8:	lock xadd DWORD PTR [rdi+0x8],eax
   1400193ad:	sub    eax,0x1
   1400193b0:	jg     0x1400193cf
   1400193b2:	mov    rbx,QWORD PTR [rbp-0x8]
   1400193b6:	mov    rax,QWORD PTR [rbx]
   1400193b9:	mov    rdi,QWORD PTR [rax]
   1400193bc:	mov    rcx,rdi
   1400193bf:	call   QWORD PTR [rip+0x192e3]        # 0x1400326a8
   1400193c5:	mov    edx,0x1
   1400193ca:	mov    rcx,rbx
   1400193cd:	call   rdi
   1400193cf:	mov    rbx,QWORD PTR [rbp-0x10]
   1400193d3:	mov    r12d,0x8007000e
   1400193d9:	mov    rcx,QWORD PTR [rip+0x31c98]        # 0x14004b078
   1400193e0:	cmp    rcx,r14
   1400193e3:	je     0x14001940a
   1400193e5:	test   BYTE PTR [rcx+0x1c],0x1
   1400193e9:	je     0x14001940a
   1400193eb:	mov    edx,0x22
   1400193f0:	mov    r9d,r12d
   1400193f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400193f7:	lea    r8,[rip+0x1e9ea]        # 0x140037de8
   1400193fe:	call   0x140001f70
   140019403:	mov    rcx,QWORD PTR [rip+0x31c6e]        # 0x14004b078
   14001940a:	mov    edi,DWORD PTR [rbp+0x48]
   14001940d:	mov    eax,DWORD PTR [rbp+0x50]
   140019410:	inc    edi
   140019412:	inc    eax
   140019414:	mov    DWORD PTR [rbp+0x48],edi
   140019417:	mov    DWORD PTR [rbp+0x50],eax
   14001941a:	cmp    rcx,r14
   14001941d:	je     0x140019444
   14001941f:	test   BYTE PTR [rcx+0x1c],0x1
   140019423:	je     0x140019444
   140019425:	mov    rcx,QWORD PTR [rcx+0x10]
   140019429:	mov    edx,0x24
   14001942e:	mov    r9d,eax
   140019431:	mov    DWORD PTR [rsp+0x20],edi
   140019435:	call   0x140017b70
   14001943a:	mov    rcx,QWORD PTR [rip+0x31c37]        # 0x14004b078
   140019441:	mov    eax,DWORD PTR [rbp+0x50]
   140019444:	cmp    edi,0xa
   140019447:	jg     0x140019508
   14001944d:	cmp    eax,DWORD PTR [rbp+0x58]
   140019450:	jge    0x1400194f6
   140019456:	mov    ecx,0xa
   14001945b:	call   QWORD PTR [rip+0x18cff]        # 0x140032160
   140019461:	test   rbx,rbx
   140019464:	je     0x1400194a0
   140019466:	mov    eax,DWORD PTR [rbx+0x8]
   140019469:	mov    edi,0x1
   14001946e:	cmp    eax,edi
   140019470:	jne    0x140019477
   140019472:	mov    DWORD PTR [rbx+0x8],esi
   140019475:	jmp    0x140019483
   140019477:	or     eax,0xffffffff
   14001947a:	lock xadd DWORD PTR [rbx+0x8],eax
   14001947f:	sub    eax,edi
   140019481:	jg     0x1400194a5
   140019483:	mov    rbx,QWORD PTR [rbp-0x10]
   140019487:	mov    rax,QWORD PTR [rbx]
   14001948a:	mov    rdi,QWORD PTR [rax]
   14001948d:	mov    rcx,rdi
   140019490:	call   QWORD PTR [rip+0x19212]        # 0x1400326a8
   140019496:	mov    edx,0x1
   14001949b:	mov    rcx,rbx
   14001949e:	call   rdi
   1400194a0:	mov    edi,0x1
   1400194a5:	test   r15d,r15d
   1400194a8:	jg     0x14001926b
   1400194ae:	mov    rcx,QWORD PTR [rip+0x31bc3]        # 0x14004b078
   1400194b5:	cmp    rcx,r14
   1400194b8:	je     0x1400194d5
   1400194ba:	test   BYTE PTR [rcx+0x1c],0x2
   1400194be:	je     0x1400194d5
   1400194c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400194c4:	lea    r8,[rip+0x1e91d]        # 0x140037de8
   1400194cb:	mov    edx,0x27
   1400194d0:	call   0x140001f08
   1400194d5:	xchg   DWORD PTR [rip+0x36d35],esi        # 0x140050210
   1400194db:	mov    eax,r12d
   1400194de:	mov    rbx,QWORD PTR [rsp+0x80]
   1400194e6:	add    rsp,0x40
   1400194ea:	pop    r15
   1400194ec:	pop    r14
   1400194ee:	pop    r13
   1400194f0:	pop    r12
   1400194f2:	pop    rdi
   1400194f3:	pop    rsi
   1400194f4:	pop    rbp
   1400194f5:	ret    
   1400194f6:	cmp    rcx,r14
   1400194f9:	je     0x140019524
   1400194fb:	test   BYTE PTR [rcx+0x1c],0x1
   1400194ff:	je     0x140019524
   140019501:	mov    edx,0x26
   140019506:	jmp    0x140019518
   140019508:	cmp    rcx,r14
   14001950b:	je     0x140019524
   14001950d:	test   BYTE PTR [rcx+0x1c],0x1
   140019511:	je     0x140019524
   140019513:	mov    edx,0x25
   140019518:	mov    rcx,QWORD PTR [rcx+0x10]
   14001951c:	mov    r9d,r15d
   14001951f:	call   0x140017a70
   140019524:	test   rbx,rbx
   140019527:	je     0x1400194d5
   140019529:	mov    eax,DWORD PTR [rbx+0x8]
   14001952c:	cmp    eax,0x1
   14001952f:	jne    0x140019536
   140019531:	mov    DWORD PTR [rbx+0x8],esi
   140019534:	jmp    0x140019543
   140019536:	or     eax,0xffffffff
   140019539:	lock xadd DWORD PTR [rbx+0x8],eax
   14001953e:	sub    eax,0x1
   140019541:	jg     0x1400194d5
   140019543:	mov    rbx,QWORD PTR [rbp-0x10]
   140019547:	mov    rax,QWORD PTR [rbx]
   14001954a:	mov    rdi,QWORD PTR [rax]
   14001954d:	mov    rcx,rdi
   140019550:	call   QWORD PTR [rip+0x19152]        # 0x1400326a8
   140019556:	mov    edx,0x1
   14001955b:	mov    rcx,rbx
   14001955e:	call   rdi
   140019560:	jmp    0x1400194d5
   140019565:	int3   
   140019566:	int3   
   140019567:	int3   
   140019568:	int3   
   140019569:	int3   
   14001956a:	int3   
   14001956b:	int3   
   14001956c:	rex push rbp
   14001956e:	push   rbx
   14001956f:	push   rsi
   140019570:	push   rdi
   140019571:	push   r14
   140019573:	mov    rbp,rsp
   140019576:	sub    rsp,0x20
   14001957a:	xor    edx,edx
   14001957c:	lea    rdi,[rcx+0x18]
   140019580:	mov    rsi,rcx
   140019583:	mov    rcx,rdi
   140019586:	lea    r8d,[rdx+0x3c]
   14001958a:	call   0x14002e2ce
   14001958f:	xor    r14d,r14d
   140019592:	mov    DWORD PTR [rsi+0x2c],0xc350
   140019599:	mov    eax,0x80
   14001959e:	mov    DWORD PTR [rsi+0x40],r14d
   1400195a2:	mov    QWORD PTR [rsi+0x20],rax
   1400195a6:	mov    DWORD PTR [rsi+0x7c],eax
   1400195a9:	mov    QWORD PTR [rsi+0x30],0x2710
   1400195b1:	mov    DWORD PTR [rdi],0x800
   1400195b7:	mov    DWORD PTR [rsi+0x1c],r14d
   1400195bb:	mov    DWORD PTR [rsi+0x78],r14d
   1400195bf:	mov    DWORD PTR [rsi+0x28],r14d
   1400195c3:	mov    QWORD PTR [rbp+0x40],r14
   1400195c7:	mov    DWORD PTR [rbp+0x30],r14d
   1400195cb:	call   0x140025fe8
   1400195d0:	mov    r8,rax
   1400195d3:	lea    rcx,[rbp+0x40]
   1400195d7:	call   0x14002b2ac
   1400195dc:	mov    rbx,QWORD PTR [rbp+0x40]
   1400195e0:	test   eax,eax
   1400195e2:	jns    0x140019621
   1400195e4:	mov    rcx,QWORD PTR [rip+0x31a8d]        # 0x14004b078
   1400195eb:	lea    rdx,[rip+0x31a86]        # 0x14004b078
   1400195f2:	cmp    rcx,rdx
   1400195f5:	je     0x140019717
   1400195fb:	test   BYTE PTR [rcx+0x1c],0x2
   1400195ff:	je     0x140019717
   140019605:	mov    rcx,QWORD PTR [rcx+0x10]
   140019609:	lea    edx,[r14+0x28]
   14001960d:	mov    r9d,eax
   140019610:	lea    r8,[rip+0x1e7d1]        # 0x140037de8
   140019617:	call   0x140001f70
   14001961c:	jmp    0x140019717
   140019621:	lea    r8,[rbp+0x30]
   140019625:	mov    rcx,rbx
   140019628:	lea    rdx,[rip+0x1e869]        # 0x140037e98
   14001962f:	call   0x14002b5f0
   140019634:	test   eax,eax
   140019636:	js     0x140019641
   140019638:	mov    eax,DWORD PTR [rbp+0x30]
   14001963b:	test   eax,eax
   14001963d:	je     0x140019641
   14001963f:	mov    DWORD PTR [rdi],eax
   140019641:	lea    r8,[rbp+0x30]
   140019645:	mov    rcx,rbx
   140019648:	lea    rdx,[rip+0x1e859]        # 0x140037ea8
   14001964f:	call   0x14002b5f0
   140019654:	test   eax,eax
   140019656:	js     0x140019665
   140019658:	mov    eax,DWORD PTR [rbp+0x30]
   14001965b:	test   eax,eax
   14001965d:	je     0x140019665
   14001965f:	mov    DWORD PTR [rsi+0x1c],eax
   140019662:	mov    DWORD PTR [rsi+0x78],eax
   140019665:	lea    r8,[rbp+0x30]
   140019669:	mov    rcx,rbx
   14001966c:	lea    rdx,[rip+0x1e84d]        # 0x140037ec0
   140019673:	call   0x14002b5f0
   140019678:	mov    ecx,DWORD PTR [rbp+0x30]
   14001967b:	test   eax,eax
   14001967d:	jns    0x140019683
   14001967f:	test   ecx,ecx
   140019681:	je     0x140019689
   140019683:	mov    DWORD PTR [rsi+0x20],ecx
   140019686:	mov    DWORD PTR [rsi+0x7c],ecx
   140019689:	mov    DWORD PTR [rbp+0x38],r14d
   14001968d:	call   QWORD PTR [rip+0x18dbd]        # 0x140032450
   140019693:	mov    rdi,QWORD PTR [rax+0x98]
   14001969a:	mov    rcx,rdi
   14001969d:	call   QWORD PTR [rip+0x19005]        # 0x1400326a8
   1400196a3:	lea    rcx,[rbp+0x38]
   1400196a7:	call   rdi
   1400196a9:	test   eax,eax
   1400196ab:	js     0x1400196b3
   1400196ad:	mov    eax,DWORD PTR [rbp+0x38]
   1400196b0:	mov    DWORD PTR [rsi+0x40],eax
   1400196b3:	lea    r8,[rbp+0x40]
   1400196b7:	mov    DWORD PTR [rbp+0x40],r14d
   1400196bb:	lea    rdx,[rip+0x1e816]        # 0x140037ed8
   1400196c2:	mov    rcx,rbx
   1400196c5:	mov    edi,r14d
   1400196c8:	call   0x14002b5f0
   1400196cd:	test   eax,eax
   1400196cf:	js     0x1400196de
   1400196d1:	cmp    DWORD PTR [rbp+0x40],r14d
   1400196d5:	mov    eax,r14d
   1400196d8:	setne  dil
   1400196dc:	test   eax,eax
   1400196de:	cmovs  edi,r14d
   1400196e2:	mov    DWORD PTR [rbp+0x40],r14d
   1400196e6:	mov    DWORD PTR [rsi+0x24],edi
   1400196e9:	lea    r8,[rbp+0x40]
   1400196ed:	lea    rdx,[rip+0x1e804]        # 0x140037ef8
   1400196f4:	mov    rcx,rbx
   1400196f7:	mov    edi,r14d
   1400196fa:	call   0x14002b5f0
   1400196ff:	test   eax,eax
   140019701:	js     0x140019710
   140019703:	cmp    DWORD PTR [rbp+0x40],r14d
   140019707:	mov    eax,r14d
   14001970a:	setne  dil
   14001970e:	test   eax,eax
   140019710:	cmovs  edi,r14d
   140019714:	mov    DWORD PTR [rsi+0x28],edi
   140019717:	test   rbx,rbx
   14001971a:	je     0x140019725
   14001971c:	mov    rcx,rbx
   14001971f:	call   QWORD PTR [rip+0x18913]        # 0x140032038
   140019725:	add    rsp,0x20
   140019729:	pop    r14
   14001972b:	pop    rdi
   14001972c:	pop    rsi
   14001972d:	pop    rbx
   14001972e:	pop    rbp
   14001972f:	ret    
   140019730:	int3   
   140019731:	int3   
   140019732:	int3   
   140019733:	int3   
   140019734:	int3   
   140019735:	int3   
   140019736:	int3   
   140019737:	int3   
   140019738:	sub    rsp,0x48
   14001973c:	and    QWORD PTR [rsp+0x30],0x0
   140019742:	lea    r8,[rcx+0x18]
   140019746:	and    QWORD PTR [rsp+0x28],0x0
   14001974c:	mov    edx,0x1280d3
   140019751:	and    QWORD PTR [rsp+0x20],0x0
   140019757:	mov    r9d,0x3c
   14001975d:	call   0x140018118
   140019762:	test   eax,eax
   140019764:	jns    0x140019797
   140019766:	mov    rcx,QWORD PTR [rip+0x3190b]        # 0x14004b078
   14001976d:	lea    rdx,[rip+0x31904]        # 0x14004b078
   140019774:	cmp    rcx,rdx
   140019777:	je     0x140019797
   140019779:	test   BYTE PTR [rcx+0x1c],0x1
   14001977d:	je     0x140019797
   14001977f:	mov    rcx,QWORD PTR [rcx+0x10]
   140019783:	lea    r8,[rip+0x1e65e]        # 0x140037de8
   14001978a:	mov    edx,0x29
   14001978f:	mov    r9d,eax
   140019792:	call   0x140001f70
   140019797:	add    rsp,0x48
   14001979b:	ret    
   14001979c:	int3   
   14001979d:	int3   
   14001979e:	int3   
   14001979f:	int3   
   1400197a0:	int3   
   1400197a1:	int3   
   1400197a2:	int3   
   1400197a3:	int3   
   1400197a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400197a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400197ae:	mov    QWORD PTR [rsp+0x18],rsi
   1400197b3:	push   rdi
   1400197b4:	push   r12
   1400197b6:	push   r13
   1400197b8:	push   r14
   1400197ba:	push   r15
   1400197bc:	sub    rsp,0x60
   1400197c0:	mov    eax,DWORD PTR [rsp+0xb0]
   1400197c7:	lea    r15,[rip+0x318aa]        # 0x14004b078
   1400197ce:	mov    edi,DWORD PTR [rsp+0xe0]
   1400197d5:	mov    esi,0x1f40
   1400197da:	mov    DWORD PTR [rcx+0x48],eax
   1400197dd:	mov    rbx,rcx
   1400197e0:	mov    eax,DWORD PTR [rsp+0xb8]
   1400197e7:	mov    bpl,0x2
   1400197ea:	mov    DWORD PTR [rcx+0x4c],eax
   1400197ed:	mov    eax,DWORD PTR [rsp+0xc0]
   1400197f4:	movzx  r12d,dl
   1400197f8:	movzx  r13d,r8b
   1400197fc:	mov    DWORD PTR [rcx+0x50],eax
   1400197ff:	mov    DWORD PTR [rcx+0x38],r12d
   140019803:	mov    DWORD PTR [rcx+0x3c],r13d
   140019807:	mov    DWORD PTR [rcx+0x44],r9d
   14001980b:	cmp    edi,esi
   14001980d:	jle    0x14001982f
   14001980f:	mov    rcx,QWORD PTR [rip+0x31862]        # 0x14004b078
   140019816:	cmp    rcx,r15
   140019819:	je     0x14001982d
   14001981b:	test   BYTE PTR [rcx+0x1c],bpl
   14001981f:	je     0x14001982d
   140019821:	mov    rcx,QWORD PTR [rcx+0x10]
   140019825:	mov    r9d,edi
   140019828:	call   0x140017ab4
   14001982d:	mov    edi,esi
   14001982f:	xor    edx,edx
   140019831:	lea    r14,[rbx+0x54]
   140019835:	mov    rcx,r14
   140019838:	lea    r8d,[rdx+0x24]
   14001983c:	call   0x14002e2ce
   140019841:	mov    esi,DWORD PTR [rsp+0xc8]
   140019848:	test   esi,esi
   14001984a:	setg   al
   14001984d:	mov    BYTE PTR [rbx+0x74],al
   140019850:	test   al,al
   140019852:	je     0x14001990e
   140019858:	mov    eax,DWORD PTR [rsp+0xd0]
   14001985f:	lea    r9d,[rsi+rsi*2]
   140019863:	mov    edx,DWORD PTR [rsp+0xd8]
   14001986a:	mov    ebp,DWORD PTR [rsp+0xe8]
   140019871:	mov    r15d,DWORD PTR [rsp+0xf0]
   140019879:	mov    r8d,DWORD PTR [rsp+0xf8]
   140019881:	mov    DWORD PTR [r14],r9d
   140019884:	mov    DWORD PTR [rbx+0x58],eax
   140019887:	mov    DWORD PTR [rbx+0x5c],edx
   14001988a:	mov    DWORD PTR [rbx+0x60],edi
   14001988d:	mov    DWORD PTR [rbx+0x64],ebp
   140019890:	mov    DWORD PTR [rbx+0x68],r15d
   140019894:	mov    DWORD PTR [rbx+0x6c],r8d
   140019898:	mov    DWORD PTR [rbx+0x70],esi
   14001989b:	mov    rcx,QWORD PTR [rip+0x317d6]        # 0x14004b078
   1400198a2:	lea    r10,[rip+0x317cf]        # 0x14004b078
   1400198a9:	cmp    rcx,r10
   1400198ac:	je     0x1400198db
   1400198ae:	test   BYTE PTR [rcx+0x1c],0x2
   1400198b2:	je     0x1400198db
   1400198b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400198b8:	mov    DWORD PTR [rsp+0x50],esi
   1400198bc:	mov    DWORD PTR [rsp+0x48],r8d
   1400198c1:	mov    DWORD PTR [rsp+0x40],r15d
   1400198c6:	mov    DWORD PTR [rsp+0x38],ebp
   1400198ca:	mov    DWORD PTR [rsp+0x30],edi
   1400198ce:	mov    DWORD PTR [rsp+0x28],edx
   1400198d2:	mov    DWORD PTR [rsp+0x20],eax
   1400198d6:	call   0x140017c1c
   1400198db:	xchg   DWORD PTR [rbx+0xf0],ebp
   1400198e1:	xchg   DWORD PTR [rbx+0xf4],r15d
   1400198e8:	xor    eax,eax
   1400198ea:	lock xadd DWORD PTR [rbx+0xe8],eax
   1400198f2:	mov    ecx,DWORD PTR [r14]
   1400198f5:	lea    r15,[rip+0x3177c]        # 0x14004b078
   1400198fc:	cmp    eax,ecx
   1400198fe:	mov    DWORD PTR [rbx+0x20],esi
   140019901:	mov    bpl,0x2
   140019904:	cmovg  ecx,eax
   140019907:	cmp    ecx,edi
   140019909:	cmovl  edi,ecx
   14001990c:	jmp    0x14001993e
   14001990e:	mov    rcx,QWORD PTR [rip+0x31763]        # 0x14004b078
   140019915:	cmp    rcx,r15
   140019918:	je     0x140019935
   14001991a:	test   BYTE PTR [rcx+0x1c],bpl
   14001991e:	je     0x140019935
   140019920:	mov    rcx,QWORD PTR [rcx+0x10]
   140019924:	lea    r8,[rip+0x1e4bd]        # 0x140037de8
   14001992b:	mov    edx,0x2c
   140019930:	call   0x140001f08
   140019935:	mov    eax,DWORD PTR [rbx+0x7c]
   140019938:	mov    DWORD PTR [rbx+0x20],eax
   14001993b:	mov    DWORD PTR [rbx+0x60],edi
   14001993e:	mov    DWORD PTR [rbx+0x1c],edi
   140019941:	test   edi,edi
   140019943:	je     0x14001994d
   140019945:	cmp    edi,0x800000
   14001994b:	jle    0x140019985
   14001994d:	mov    rcx,QWORD PTR [rip+0x31724]        # 0x14004b078
   140019954:	mov    esi,0x2000
   140019959:	cmp    rcx,r15
   14001995c:	je     0x140019980
   14001995e:	test   BYTE PTR [rcx+0x1c],bpl
   140019962:	je     0x140019980
   140019964:	mov    rcx,QWORD PTR [rcx+0x10]
   140019968:	lea    r8,[rip+0x1e479]        # 0x140037de8
   14001996f:	mov    edx,0x2d
   140019974:	mov    DWORD PTR [rsp+0x20],esi
   140019978:	mov    r9d,edi
   14001997b:	call   0x140015b2c
   140019980:	mov    edi,esi
   140019982:	mov    DWORD PTR [rbx+0x60],esi
   140019985:	mov    rcx,QWORD PTR [rip+0x316ec]        # 0x14004b078
   14001998c:	cmp    rcx,r15
   14001998f:	je     0x1400199a8
   140019991:	test   BYTE PTR [rcx+0x1c],bpl
   140019995:	je     0x1400199a8
   140019997:	mov    rcx,QWORD PTR [rcx+0x10]
   14001999b:	mov    edx,0x2e
   1400199a0:	mov    r9d,edi
   1400199a3:	call   0x140017a70
   1400199a8:	xchg   DWORD PTR [rbx+0xe8],edi
   1400199ae:	cmp    QWORD PTR [rbx+0x98],0xffffffffffffffff
   1400199b6:	mov    rcx,rbx
   1400199b9:	je     0x1400199ca
   1400199bb:	call   0x14001916c
   1400199c0:	mov    rcx,rbx
   1400199c3:	call   0x140019738
   1400199c8:	jmp    0x1400199d7
   1400199ca:	call   0x140018604
   1400199cf:	mov    rcx,rbx
   1400199d2:	call   0x140018990
   1400199d7:	mov    rcx,QWORD PTR [rip+0x3169a]        # 0x14004b078
   1400199de:	cmp    rcx,r15
   1400199e1:	je     0x140019a24
   1400199e3:	test   BYTE PTR [rcx+0x1c],bpl
   1400199e7:	je     0x140019a24
   1400199e9:	mov    eax,DWORD PTR [rbx+0x20]
   1400199ec:	mov    r9d,r12d
   1400199ef:	mov    rcx,QWORD PTR [rcx+0x10]
   1400199f3:	mov    DWORD PTR [rsp+0x50],eax
   1400199f7:	mov    eax,DWORD PTR [rbx+0x1c]
   1400199fa:	mov    DWORD PTR [rsp+0x48],eax
   1400199fe:	mov    eax,DWORD PTR [rbx+0x50]
   140019a01:	mov    DWORD PTR [rsp+0x40],eax
   140019a05:	mov    eax,DWORD PTR [rbx+0x4c]
   140019a08:	mov    DWORD PTR [rsp+0x38],eax
   140019a0c:	mov    eax,DWORD PTR [rbx+0x48]
   140019a0f:	mov    DWORD PTR [rsp+0x30],eax
   140019a13:	mov    eax,DWORD PTR [rbx+0x44]
   140019a16:	mov    DWORD PTR [rsp+0x28],eax
   140019a1a:	mov    DWORD PTR [rsp+0x20],r13d
   140019a1f:	call   0x1400179cc
   140019a24:	lea    r11,[rsp+0x60]
   140019a29:	mov    rbx,QWORD PTR [r11+0x30]
   140019a2d:	mov    rbp,QWORD PTR [r11+0x38]
   140019a31:	mov    rsi,QWORD PTR [r11+0x40]
   140019a35:	mov    rsp,r11
   140019a38:	pop    r15
   140019a3a:	pop    r14
   140019a3c:	pop    r13
   140019a3e:	pop    r12
   140019a40:	pop    rdi
   140019a41:	ret    
   140019a42:	int3   
   140019a43:	int3   
   140019a44:	int3   
   140019a45:	int3   
   140019a46:	int3   
   140019a47:	int3   
   140019a48:	mov    rax,rsp
   140019a4b:	push   rsi
   140019a4c:	push   rdi
   140019a4d:	push   r13
   140019a4f:	push   r14
   140019a51:	push   r15
   140019a53:	sub    rsp,0x50
   140019a57:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140019a5f:	mov    QWORD PTR [rax+0x8],rbx
   140019a63:	mov    QWORD PTR [rax+0x10],rbp
   140019a67:	mov    r15,r9
   140019a6a:	mov    rsi,r8
   140019a6d:	mov    rbp,rdx
   140019a70:	mov    r14,rcx
   140019a73:	and    QWORD PTR [rax-0x30],0x0
   140019a78:	and    QWORD PTR [rax+0x18],0x0
   140019a7d:	mov    r10,QWORD PTR [r8+0x8]
   140019a81:	sub    r10,QWORD PTR [r8]
   140019a84:	sar    r10,1
   140019a87:	mov    eax,0x4
   140019a8c:	mul    r10
   140019a8f:	test   rdx,rdx
   140019a92:	je     0x140019a9f
   140019a94:	mov    ecx,0x80070216
   140019a99:	call   0x140029d64
   140019a9e:	int3   
   140019a9f:	lea    rdi,[rax+0x14]
   140019aa3:	cmp    rdi,rax
   140019aa6:	jb     0x140019cee
   140019aac:	mov    rcx,rdi
   140019aaf:	call   QWORD PTR [rip+0x18b1b]        # 0x1400325d0
   140019ab5:	mov    rbx,rax
   140019ab8:	mov    QWORD PTR [rsp+0x90],rax
   140019ac0:	test   rax,rax
   140019ac3:	jne    0x140019ad0
   140019ac5:	mov    ecx,0x8007000e
   140019aca:	call   0x140029d64
   140019acf:	int3   
   140019ad0:	lea    r13,[rip+0x315a1]        # 0x14004b078
   140019ad7:	mov    rcx,QWORD PTR [rip+0x3159a]        # 0x14004b078
   140019ade:	cmp    rcx,r13
   140019ae1:	je     0x140019afe
   140019ae3:	test   BYTE PTR [rcx+0x1c],0x4
   140019ae7:	je     0x140019afe
   140019ae9:	mov    edx,0x30
   140019aee:	lea    r8,[rip+0x1e2f3]        # 0x140037de8
   140019af5:	mov    rcx,QWORD PTR [rcx+0x10]
   140019af9:	call   0x140001f08
   140019afe:	mov    r9,rdi
   140019b01:	mov    r8,rbx
   140019b04:	mov    rdx,rsi
   140019b07:	call   0x140019d18
   140019b0c:	and    QWORD PTR [rsp+0x30],0x0
   140019b12:	and    QWORD PTR [rsp+0x28],0x0
   140019b18:	and    QWORD PTR [rsp+0x20],0x0
   140019b1e:	mov    r9,rdi
   140019b21:	mov    r8,rbx
   140019b24:	mov    edx,0x1280df
   140019b29:	mov    rcx,r14
   140019b2c:	call   0x140018118
   140019b31:	mov    sil,0x1
   140019b34:	test   eax,eax
   140019b36:	jns    0x140019b62
   140019b38:	mov    rcx,QWORD PTR [rip+0x31539]        # 0x14004b078
   140019b3f:	cmp    rcx,r13
   140019b42:	je     0x140019b62
   140019b44:	test   BYTE PTR [rcx+0x1c],sil
   140019b48:	je     0x140019b62
   140019b4a:	mov    edx,0x31
   140019b4f:	mov    r9d,eax
   140019b52:	lea    r8,[rip+0x1e28f]        # 0x140037de8
   140019b59:	mov    rcx,QWORD PTR [rcx+0x10]
   140019b5d:	call   0x140001f70
   140019b62:	mov    rdx,rbp
   140019b65:	call   0x140019f0c
   140019b6a:	mov    rdi,rax
   140019b6d:	mov    rcx,rbx
   140019b70:	call   QWORD PTR [rip+0x18a52]        # 0x1400325c8
   140019b76:	mov    rcx,rdi
   140019b79:	call   QWORD PTR [rip+0x18a51]        # 0x1400325d0
   140019b7f:	mov    rbx,rax
   140019b82:	mov    QWORD PTR [rsp+0x90],rax
   140019b8a:	test   rax,rax
   140019b8d:	jne    0x140019b9a
   140019b8f:	mov    ecx,0x8007000e
   140019b94:	call   0x140029d64
   140019b99:	int3   
   140019b9a:	mov    rcx,QWORD PTR [rip+0x314d7]        # 0x14004b078
   140019ba1:	cmp    rcx,r13
   140019ba4:	je     0x140019bc1
   140019ba6:	test   BYTE PTR [rcx+0x1c],0x4
   140019baa:	je     0x140019bc1
   140019bac:	mov    edx,0x32
   140019bb1:	lea    r8,[rip+0x1e230]        # 0x140037de8
   140019bb8:	mov    rcx,QWORD PTR [rcx+0x10]
   140019bbc:	call   0x140001f08
   140019bc1:	mov    r9,rdi
   140019bc4:	mov    r8,rbx
   140019bc7:	mov    rdx,rbp
   140019bca:	call   0x140019f80
   140019bcf:	and    QWORD PTR [rsp+0x30],0x0
   140019bd5:	and    QWORD PTR [rsp+0x28],0x0
   140019bdb:	and    QWORD PTR [rsp+0x20],0x0
   140019be1:	mov    r9,rdi
   140019be4:	mov    r8,rbx
   140019be7:	mov    edx,0x1280e3
   140019bec:	mov    rcx,r14
   140019bef:	call   0x140018118
   140019bf4:	test   eax,eax
   140019bf6:	jns    0x140019c22
   140019bf8:	mov    rcx,QWORD PTR [rip+0x31479]        # 0x14004b078
   140019bff:	cmp    rcx,r13
   140019c02:	je     0x140019c22
   140019c04:	test   BYTE PTR [rcx+0x1c],sil
   140019c08:	je     0x140019c22
   140019c0a:	mov    edx,0x33
   140019c0f:	mov    r9d,eax
   140019c12:	lea    r8,[rip+0x1e1cf]        # 0x140037de8
   140019c19:	mov    rcx,QWORD PTR [rcx+0x10]
   140019c1d:	call   0x140001f70
   140019c22:	mov    rdx,r15
   140019c25:	call   0x140019f0c
   140019c2a:	mov    rdi,rax
   140019c2d:	mov    rcx,rbx
   140019c30:	call   QWORD PTR [rip+0x18992]        # 0x1400325c8
   140019c36:	mov    rcx,rdi
   140019c39:	call   QWORD PTR [rip+0x18991]        # 0x1400325d0
   140019c3f:	mov    rbx,rax
   140019c42:	mov    QWORD PTR [rsp+0x90],rax
   140019c4a:	test   rax,rax
   140019c4d:	jne    0x140019c5a
   140019c4f:	mov    ecx,0x8007000e
   140019c54:	call   0x140029d64
   140019c59:	int3   
   140019c5a:	mov    rcx,QWORD PTR [rip+0x31417]        # 0x14004b078
   140019c61:	cmp    rcx,r13
   140019c64:	je     0x140019c81
   140019c66:	test   BYTE PTR [rcx+0x1c],0x4
   140019c6a:	je     0x140019c81
   140019c6c:	mov    edx,0x34
   140019c71:	lea    r8,[rip+0x1e170]        # 0x140037de8
   140019c78:	mov    rcx,QWORD PTR [rcx+0x10]
   140019c7c:	call   0x140001f08
   140019c81:	mov    r9,rdi
   140019c84:	mov    r8,rbx
   140019c87:	mov    rdx,r15
   140019c8a:	call   0x140019f80
   140019c8f:	and    QWORD PTR [rsp+0x30],0x0
   140019c95:	and    QWORD PTR [rsp+0x28],0x0
   140019c9b:	and    QWORD PTR [rsp+0x20],0x0
   140019ca1:	mov    r9,rdi
   140019ca4:	mov    r8,rbx
   140019ca7:	mov    edx,0x1280e7
   140019cac:	mov    rcx,r14
   140019caf:	call   0x140018118
   140019cb4:	test   eax,eax
   140019cb6:	jns    0x140019ce3
   140019cb8:	mov    rcx,QWORD PTR [rip+0x313b9]        # 0x14004b078
   140019cbf:	cmp    rcx,r13
   140019cc2:	je     0x140019ce3
   140019cc4:	test   BYTE PTR [rcx+0x1c],sil
   140019cc8:	je     0x140019ce3
   140019cca:	mov    edx,0x35
   140019ccf:	mov    r9d,eax
   140019cd2:	lea    r8,[rip+0x1e10f]        # 0x140037de8
   140019cd9:	mov    rcx,QWORD PTR [rcx+0x10]
   140019cdd:	call   0x140001f70
   140019ce2:	nop
   140019ce3:	mov    rcx,rbx
   140019ce6:	call   QWORD PTR [rip+0x188dc]        # 0x1400325c8
   140019cec:	jmp    0x140019cf9
   140019cee:	mov    ecx,0x80070216
   140019cf3:	call   0x140029d64
   140019cf8:	nop
   140019cf9:	lea    r11,[rsp+0x50]
   140019cfe:	mov    rbx,QWORD PTR [r11+0x30]
   140019d02:	mov    rbp,QWORD PTR [r11+0x38]
   140019d06:	mov    rsp,r11
   140019d09:	pop    r15
   140019d0b:	pop    r14
   140019d0d:	pop    r13
   140019d0f:	pop    rdi
   140019d10:	pop    rsi
   140019d11:	ret    
   140019d12:	int3   
   140019d13:	int3   
   140019d14:	int3   
   140019d15:	int3   
   140019d16:	int3   
   140019d17:	int3   
   140019d18:	mov    rax,rsp
   140019d1b:	mov    QWORD PTR [rax+0x8],rbx
   140019d1f:	mov    QWORD PTR [rax+0x10],rbp
   140019d23:	mov    QWORD PTR [rax+0x18],rsi
   140019d27:	mov    QWORD PTR [rax+0x20],rdi
   140019d2b:	push   r14
   140019d2d:	sub    rsp,0x30
   140019d31:	xor    ebp,ebp
   140019d33:	mov    rbx,r9
   140019d36:	mov    r14,r8
   140019d39:	mov    rsi,rdx
   140019d3c:	test   r8,r8
   140019d3f:	je     0x140019e60
   140019d45:	mov    al,BYTE PTR [rdx+0x8]
   140019d48:	sub    al,BYTE PTR [rdx]
   140019d4a:	test   al,0x2
   140019d4c:	jne    0x140019e60
   140019d52:	mov    r8,rbx
   140019d55:	xor    edx,edx
   140019d57:	mov    rcx,r14
   140019d5a:	call   0x14002e2ce
   140019d5f:	mov    rcx,QWORD PTR [rsi+0x8]
   140019d63:	lea    eax,[rbp+0x4]
   140019d66:	sub    rcx,QWORD PTR [rsi]
   140019d69:	sar    rcx,1
   140019d6c:	shr    rcx,1
   140019d6f:	mul    rcx
   140019d72:	mov    QWORD PTR [r14+0x8],rcx
   140019d76:	mov    rcx,rax
   140019d79:	test   rdx,rdx
   140019d7c:	jne    0x140019ecd
   140019d82:	mov    QWORD PTR [r14],rax
   140019d85:	cmp    rbx,0x14
   140019d89:	jae    0x140019db1
   140019d8b:	mov    rcx,QWORD PTR [rip+0x312e6]        # 0x14004b078
   140019d92:	lea    rdi,[rip+0x312df]        # 0x14004b078
   140019d99:	cmp    rcx,rdi
   140019d9c:	je     0x140019e9b
   140019da2:	test   BYTE PTR [rcx+0x1c],0x1
   140019da6:	je     0x140019e9b
   140019dac:	jmp    0x140019e7f
   140019db1:	lea    rax,[rbx-0x14]
   140019db5:	cmp    rax,rcx
   140019db8:	jae    0x140019de0
   140019dba:	mov    rcx,QWORD PTR [rip+0x312b7]        # 0x14004b078
   140019dc1:	lea    rdi,[rip+0x312b0]        # 0x14004b078
   140019dc8:	cmp    rcx,rdi
   140019dcb:	je     0x140019ec2
   140019dd1:	test   BYTE PTR [rcx+0x1c],0x1
   140019dd5:	je     0x140019ec2
   140019ddb:	jmp    0x140019ea6
   140019de0:	mov    rbx,QWORD PTR [rsi]
   140019de3:	cmp    rbx,QWORD PTR [rsi+0x8]
   140019de7:	je     0x140019e45
   140019de9:	lea    rdi,[rip+0x31288]        # 0x14004b078
   140019df0:	movzx  edx,WORD PTR [rbx]
   140019df3:	mov    eax,ebp
   140019df5:	mov    WORD PTR [r14+rax*4+0x10],dx
   140019dfb:	movzx  r8d,WORD PTR [rbx+0x2]
   140019e00:	mov    WORD PTR [r14+rax*4+0x12],r8w
   140019e06:	mov    rcx,QWORD PTR [rip+0x3126b]        # 0x14004b078
   140019e0d:	cmp    rcx,rdi
   140019e10:	je     0x140019e39
   140019e12:	test   BYTE PTR [rcx+0x1c],0x4
   140019e16:	je     0x140019e39
   140019e18:	mov    rcx,QWORD PTR [rcx+0x10]
   140019e1c:	movzx  eax,r8w
   140019e20:	lea    r8,[rip+0x1dfc1]        # 0x140037de8
   140019e27:	movzx  r9d,dx
   140019e2b:	mov    edx,0x36
   140019e30:	mov    DWORD PTR [rsp+0x20],eax
   140019e34:	call   0x140015b2c
   140019e39:	add    rbx,0x4
   140019e3d:	inc    ebp
   140019e3f:	cmp    rbx,QWORD PTR [rsi+0x8]
   140019e43:	jne    0x140019df0
   140019e45:	mov    rbx,QWORD PTR [rsp+0x40]
   140019e4a:	mov    rbp,QWORD PTR [rsp+0x48]
   140019e4f:	mov    rsi,QWORD PTR [rsp+0x50]
   140019e54:	mov    rdi,QWORD PTR [rsp+0x58]
   140019e59:	add    rsp,0x30
   140019e5d:	pop    r14
   140019e5f:	ret    
   140019e60:	mov    rcx,QWORD PTR [rip+0x31211]        # 0x14004b078
   140019e67:	lea    rdi,[rip+0x3120a]        # 0x14004b078
   140019e6e:	cmp    rcx,rdi
   140019e71:	je     0x140019ef8
   140019e77:	test   BYTE PTR [rcx+0x1c],0x1
   140019e7b:	je     0x140019ef8
   140019e7d:	jmp    0x140019edc
   140019e7f:	mov    rcx,QWORD PTR [rcx+0x10]
   140019e83:	lea    r9,[rip+0x1e0e6]        # 0x140037f70
   140019e8a:	mov    edx,0xa
   140019e8f:	lea    r8,[rip+0x1a53a]        # 0x1400343d0
   140019e96:	call   0x1400038e0
   140019e9b:	mov    ecx,0x80070057
   140019ea0:	call   0x140029d64
   140019ea5:	int3   
   140019ea6:	mov    rcx,QWORD PTR [rcx+0x10]
   140019eaa:	lea    r9,[rip+0x1e11f]        # 0x140037fd0
   140019eb1:	mov    edx,0xa
   140019eb6:	lea    r8,[rip+0x1a513]        # 0x1400343d0
   140019ebd:	call   0x1400038e0
   140019ec2:	mov    ecx,0x80070057
   140019ec7:	call   0x140029d64
   140019ecc:	int3   
   140019ecd:	or     QWORD PTR [r14],0xffffffffffffffff
   140019ed1:	mov    ecx,0x80070216
   140019ed6:	call   0x140029d64
   140019edb:	int3   
   140019edc:	mov    rcx,QWORD PTR [rcx+0x10]
   140019ee0:	lea    r9,[rip+0x1e039]        # 0x140037f20
   140019ee7:	mov    edx,0xa
   140019eec:	lea    r8,[rip+0x1a4dd]        # 0x1400343d0
   140019ef3:	call   0x1400038e0
   140019ef8:	mov    ecx,0x80070057
   140019efd:	call   0x140029d64
   140019f02:	int3   
   140019f03:	int3   
   140019f04:	int3   
   140019f05:	int3   
   140019f06:	int3   
   140019f07:	int3   
   140019f08:	int3   
   140019f09:	int3   
   140019f0a:	int3   
   140019f0b:	int3   
   140019f0c:	sub    rsp,0x28
   140019f10:	mov    r9,QWORD PTR [rdx+0x8]
   140019f14:	mov    rax,QWORD PTR [rdx]
   140019f17:	mov    rdx,r9
   140019f1a:	sub    rdx,rax
   140019f1d:	sar    rdx,0x5
   140019f21:	cmp    rax,r9
   140019f24:	je     0x140019f3b
   140019f26:	mov    r8,QWORD PTR [rax+0x10]
   140019f2a:	add    r8,rdx
   140019f2d:	cmp    r8,rdx
   140019f30:	jb     0x140019f59
   140019f32:	mov    rdx,r8
   140019f35:	add    rax,0x20
   140019f39:	jmp    0x140019f21
   140019f3b:	mov    eax,0x2
   140019f40:	mul    rdx
   140019f43:	mov    rcx,rax
   140019f46:	test   rdx,rdx
   140019f49:	jne    0x140019f64
   140019f4b:	add    rax,0x10
   140019f4f:	cmp    rax,rcx
   140019f52:	jb     0x140019f6f
   140019f54:	add    rsp,0x28
   140019f58:	ret    
   140019f59:	mov    ecx,0x80070216
   140019f5e:	call   0x140029d64
   140019f63:	int3   
   140019f64:	mov    ecx,0x80070216
   140019f69:	call   0x140029d64
   140019f6e:	int3   
   140019f6f:	mov    ecx,0x80070216
   140019f74:	call   0x140029d64
   140019f79:	int3   
   140019f7a:	int3   
   140019f7b:	int3   
   140019f7c:	int3   
   140019f7d:	int3   
   140019f7e:	int3   
   140019f7f:	int3   
   140019f80:	mov    QWORD PTR [rsp+0x10],rbx
   140019f85:	mov    QWORD PTR [rsp+0x8],rcx
   140019f8a:	push   rbp
   140019f8b:	push   rsi
   140019f8c:	push   rdi
   140019f8d:	push   r12
   140019f8f:	push   r13
   140019f91:	push   r14
   140019f93:	push   r15
   140019f95:	sub    rsp,0x20
   140019f99:	xor    edi,edi
   140019f9b:	mov    rbx,r9
   140019f9e:	mov    rsi,r8
   140019fa1:	mov    r14,rdx
   140019fa4:	test   r8,r8
   140019fa7:	je     0x14001a11e
   140019fad:	cmp    rbx,0x10
   140019fb1:	jb     0x14001a11e
   140019fb7:	mov    r8,rbx
   140019fba:	xor    edx,edx
   140019fbc:	mov    rcx,rsi
   140019fbf:	call   0x14002e2ce
   140019fc4:	lea    r8,[rbx-0x10]
   140019fc8:	mov    ebp,edi
   140019fca:	mov    rbx,QWORD PTR [r14]
   140019fcd:	lea    r10,[rsi+0x10]
   140019fd1:	mov    r13,r8
   140019fd4:	mov    QWORD PTR [rsp+0x70],r8
   140019fd9:	mov    QWORD PTR [rsp+0x60],r10
   140019fde:	cmp    rbx,QWORD PTR [r14+0x8]
   140019fe2:	je     0x14001a0f7
   140019fe8:	mov    rcx,QWORD PTR [rip+0x31089]        # 0x14004b078
   140019fef:	lea    rdi,[rip+0x31082]        # 0x14004b078
   140019ff6:	mov    r15,QWORD PTR [rbx+0x10]
   140019ffa:	lea    rdx,[r15+0x1]
   140019ffe:	cmp    rdx,r15
   14001a001:	jb     0x14001a1a5
   14001a007:	mov    eax,0x2
   14001a00c:	mul    rdx
   14001a00f:	mov    r12,rax
   14001a012:	test   rdx,rdx
   14001a015:	jne    0x14001a19a
   14001a01b:	cmp    r13,rax
   14001a01e:	jb     0x14001a0e2
   14001a024:	lea    rdx,[rax+rbp*1]
   14001a028:	cmp    rdx,rbp
   14001a02b:	jb     0x14001a168
   14001a031:	mov    rbp,rdx
   14001a034:	cmp    rdx,r8
   14001a037:	ja     0x14001a0d1
   14001a03d:	cmp    QWORD PTR [rbx+0x18],0x8
   14001a042:	jb     0x14001a049
   14001a044:	mov    r8,QWORD PTR [rbx]
   14001a047:	jmp    0x14001a04c
   14001a049:	mov    r8,rbx
   14001a04c:	test   r15,r15
   14001a04f:	je     0x14001a066
   14001a051:	lea    rdx,[r15+r15*1]
   14001a055:	mov    rcx,r10
   14001a058:	mov    r9,rdx
   14001a05b:	call   QWORD PTR [rip+0x1855f]        # 0x1400325c0
   14001a061:	mov    r10,QWORD PTR [rsp+0x60]
   14001a066:	lea    rax,[r10+r15*2]
   14001a06a:	xor    ecx,ecx
   14001a06c:	lea    r10,[rax+0x2]
   14001a070:	mov    WORD PTR [rax],cx
   14001a073:	mov    QWORD PTR [rsp+0x60],r10
   14001a078:	sub    r13,r12
   14001a07b:	mov    rcx,QWORD PTR [rip+0x30ff6]        # 0x14004b078
   14001a082:	cmp    rcx,rdi
   14001a085:	je     0x14001a0bd
   14001a087:	test   BYTE PTR [rcx+0x1c],0x4
   14001a08b:	je     0x14001a0bd
   14001a08d:	cmp    QWORD PTR [rbx+0x18],0x8
   14001a092:	jb     0x14001a099
   14001a094:	mov    r9,QWORD PTR [rbx]
   14001a097:	jmp    0x14001a09c
   14001a099:	mov    r9,rbx
   14001a09c:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a0a0:	lea    r8,[rip+0x1dd41]        # 0x140037de8
   14001a0a7:	mov    edx,0x37
   14001a0ac:	call   0x1400071e8
   14001a0b1:	mov    rcx,QWORD PTR [rip+0x30fc0]        # 0x14004b078
   14001a0b8:	mov    r10,QWORD PTR [rsp+0x60]
   14001a0bd:	add    rbx,0x20
   14001a0c1:	cmp    rbx,QWORD PTR [r14+0x8]
   14001a0c5:	je     0x14001a0f7
   14001a0c7:	mov    r8,QWORD PTR [rsp+0x70]
   14001a0cc:	jmp    0x140019ff6
   14001a0d1:	cmp    rcx,rdi
   14001a0d4:	je     0x14001a15d
   14001a0da:	test   BYTE PTR [rcx+0x1c],0x1
   14001a0de:	je     0x14001a15d
   14001a0e0:	jmp    0x14001a141
   14001a0e2:	cmp    rcx,rdi
   14001a0e5:	je     0x14001a18f
   14001a0eb:	test   BYTE PTR [rcx+0x1c],0x1
   14001a0ef:	je     0x14001a18f
   14001a0f5:	jmp    0x14001a173
   14001a0f7:	mov    rbx,QWORD PTR [rsp+0x68]
   14001a0fc:	mov    QWORD PTR [rsi],rbp
   14001a0ff:	mov    rax,QWORD PTR [r14+0x8]
   14001a103:	sub    rax,QWORD PTR [r14]
   14001a106:	sar    rax,0x5
   14001a10a:	mov    QWORD PTR [rsi+0x8],rax
   14001a10e:	add    rsp,0x20
   14001a112:	pop    r15
   14001a114:	pop    r14
   14001a116:	pop    r13
   14001a118:	pop    r12
   14001a11a:	pop    rdi
   14001a11b:	pop    rsi
   14001a11c:	pop    rbp
   14001a11d:	ret    
   14001a11e:	mov    rcx,QWORD PTR [rip+0x30f53]        # 0x14004b078
   14001a125:	lea    rdi,[rip+0x30f4c]        # 0x14004b078
   14001a12c:	cmp    rcx,rdi
   14001a12f:	je     0x14001a1cc
   14001a135:	test   BYTE PTR [rcx+0x1c],0x1
   14001a139:	je     0x14001a1cc
   14001a13f:	jmp    0x14001a1b0
   14001a141:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a145:	lea    r9,[rip+0x1dfb4]        # 0x140038100
   14001a14c:	mov    edx,0xa
   14001a151:	lea    r8,[rip+0x1a278]        # 0x1400343d0
   14001a158:	call   0x1400038e0
   14001a15d:	mov    ecx,0x80070057
   14001a162:	call   0x140029d64
   14001a167:	int3   
   14001a168:	mov    ecx,0x80070216
   14001a16d:	call   0x140029d64
   14001a172:	int3   
   14001a173:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a177:	lea    r9,[rip+0x1df32]        # 0x1400380b0
   14001a17e:	mov    edx,0xa
   14001a183:	lea    r8,[rip+0x1a246]        # 0x1400343d0
   14001a18a:	call   0x1400038e0
   14001a18f:	mov    ecx,0x80070057
   14001a194:	call   0x140029d64
   14001a199:	int3   
   14001a19a:	mov    ecx,0x80070216
   14001a19f:	call   0x140029d64
   14001a1a4:	int3   
   14001a1a5:	mov    ecx,0x80070216
   14001a1aa:	call   0x140029d64
   14001a1af:	int3   
   14001a1b0:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a1b4:	lea    r9,[rip+0x1de85]        # 0x140038040
   14001a1bb:	mov    edx,0xa
   14001a1c0:	lea    r8,[rip+0x1a209]        # 0x1400343d0
   14001a1c7:	call   0x1400038e0
   14001a1cc:	mov    ecx,0x80070057
   14001a1d1:	call   0x140029d64
   14001a1d6:	int3   
   14001a1d7:	int3   
   14001a1d8:	int3   
   14001a1d9:	int3   
   14001a1da:	int3   
   14001a1db:	int3   
   14001a1dc:	int3   
   14001a1dd:	int3   
   14001a1de:	int3   
   14001a1df:	int3   
   14001a1e0:	rex push rbx
   14001a1e2:	sub    rsp,0x40
   14001a1e6:	and    QWORD PTR [rsp+0x30],0x0
   14001a1ec:	mov    r8,rdx
   14001a1ef:	and    QWORD PTR [rsp+0x28],0x0
   14001a1f5:	mov    edx,0x1240cb
   14001a1fa:	and    QWORD PTR [rsp+0x20],0x0
   14001a200:	mov    r9d,0x6c
   14001a206:	call   0x140018118
   14001a20b:	mov    ebx,eax
   14001a20d:	test   eax,eax
   14001a20f:	jns    0x14001a246
   14001a211:	mov    rcx,QWORD PTR [rip+0x30e60]        # 0x14004b078
   14001a218:	lea    rax,[rip+0x30e59]        # 0x14004b078
   14001a21f:	cmp    rcx,rax
   14001a222:	je     0x14001a242
   14001a224:	test   BYTE PTR [rcx+0x1c],0x1
   14001a228:	je     0x14001a242
   14001a22a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a22e:	lea    r8,[rip+0x1dbb3]        # 0x140037de8
   14001a235:	mov    edx,0x38
   14001a23a:	mov    r9d,ebx
   14001a23d:	call   0x140001f70
   14001a242:	mov    eax,ebx
   14001a244:	jmp    0x14001a248
   14001a246:	xor    eax,eax
   14001a248:	add    rsp,0x40
   14001a24c:	pop    rbx
   14001a24d:	ret    
   14001a24e:	int3   
   14001a24f:	int3   
   14001a250:	int3   
   14001a251:	int3   
   14001a252:	int3   
   14001a253:	int3   
   14001a254:	mov    QWORD PTR [rsp+0x8],rbx
   14001a259:	push   rdi
   14001a25a:	sub    rsp,0x20
   14001a25e:	mov    rbx,QWORD PTR [rcx+0xa0]
   14001a265:	mov    rdi,rdx
   14001a268:	lea    rcx,[rbx+0x10]
   14001a26c:	call   QWORD PTR [rip+0x17e96]        # 0x140032108
   14001a272:	mov    rax,QWORD PTR [rdi+0x18]
   14001a276:	lea    rcx,[rbx+0x10]
   14001a27a:	mov    r8,QWORD PTR [rdi+0x10]
   14001a27e:	mov    QWORD PTR [rax],r8
   14001a281:	mov    QWORD PTR [r8+0x8],rax
   14001a285:	call   QWORD PTR [rip+0x17e6d]        # 0x1400320f8
   14001a28b:	mov    eax,DWORD PTR [rdi+0x8]
   14001a28e:	cmp    eax,0x1
   14001a291:	jne    0x14001a29c
   14001a293:	mov    DWORD PTR [rdi+0x8],0x0
   14001a29a:	jmp    0x14001a2a9
   14001a29c:	or     eax,0xffffffff
   14001a29f:	lock xadd DWORD PTR [rdi+0x8],eax
   14001a2a4:	sub    eax,0x1
   14001a2a7:	jg     0x14001a2c7
   14001a2a9:	test   rdi,rdi
   14001a2ac:	je     0x14001a2c7
   14001a2ae:	mov    rax,QWORD PTR [rdi]
   14001a2b1:	mov    rbx,QWORD PTR [rax]
   14001a2b4:	mov    rcx,rbx
   14001a2b7:	call   QWORD PTR [rip+0x183eb]        # 0x1400326a8
   14001a2bd:	mov    edx,0x1
   14001a2c2:	mov    rcx,rdi
   14001a2c5:	call   rbx
   14001a2c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a2cc:	add    rsp,0x20
   14001a2d0:	pop    rdi
   14001a2d1:	ret    
   14001a2d2:	int3   
   14001a2d3:	int3   
   14001a2d4:	int3   
   14001a2d5:	int3   
   14001a2d6:	int3   
   14001a2d7:	int3   
   14001a2d8:	rex push rbx
   14001a2da:	sub    rsp,0x20
   14001a2de:	mov    rbx,rcx
   14001a2e1:	mov    rcx,QWORD PTR [rcx]
   14001a2e4:	test   rcx,rcx
   14001a2e7:	je     0x14001a2f3
   14001a2e9:	call   QWORD PTR [rip+0x17e69]        # 0x140032158
   14001a2ef:	and    QWORD PTR [rbx],0x0
   14001a2f3:	add    rsp,0x20
   14001a2f7:	pop    rbx
   14001a2f8:	ret    
   14001a2f9:	int3   
   14001a2fa:	int3   
   14001a2fb:	int3   
   14001a2fc:	int3   
   14001a2fd:	int3   
   14001a2fe:	int3   
   14001a2ff:	int3   
   14001a300:	mov    QWORD PTR [rsp+0x8],rbx
   14001a305:	push   rdi
   14001a306:	sub    rsp,0x20
   14001a30a:	mov    rdi,QWORD PTR [rcx]
   14001a30d:	test   rdi,rdi
   14001a310:	je     0x14001a33c
   14001a312:	mov    rax,QWORD PTR [rdi]
   14001a315:	mov    rbx,QWORD PTR [rax+0x38]
   14001a319:	mov    rcx,rbx
   14001a31c:	call   QWORD PTR [rip+0x18386]        # 0x1400326a8
   14001a322:	mov    rcx,rdi
   14001a325:	call   rbx
   14001a327:	mov    rax,QWORD PTR [rdi]
   14001a32a:	mov    rbx,QWORD PTR [rax+0x8]
   14001a32e:	mov    rcx,rbx
   14001a331:	call   QWORD PTR [rip+0x18371]        # 0x1400326a8
   14001a337:	mov    rcx,rdi
   14001a33a:	call   rbx
   14001a33c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a341:	add    rsp,0x20
   14001a345:	pop    rdi
   14001a346:	ret    
   14001a347:	int3   
   14001a348:	int3   
   14001a349:	int3   
   14001a34a:	int3   
   14001a34b:	int3   
   14001a34c:	int3   
   14001a34d:	int3   
   14001a34e:	int3   
   14001a34f:	int3   
   14001a350:	mov    QWORD PTR [rsp+0x8],rbx
   14001a355:	push   rdi
   14001a356:	sub    rsp,0x20
   14001a35a:	mov    rdi,QWORD PTR [rcx]
   14001a35d:	test   rdi,rdi
   14001a360:	je     0x14001a39f
   14001a362:	mov    eax,DWORD PTR [rdi+0x8]
   14001a365:	cmp    eax,0x1
   14001a368:	jne    0x14001a373
   14001a36a:	mov    DWORD PTR [rdi+0x8],0x0
   14001a371:	jmp    0x14001a380
   14001a373:	or     eax,0xffffffff
   14001a376:	lock xadd DWORD PTR [rdi+0x8],eax
   14001a37b:	sub    eax,0x1
   14001a37e:	jg     0x14001a39f
   14001a380:	test   rdi,rdi
   14001a383:	je     0x14001a39f
   14001a385:	mov    rax,QWORD PTR [rdi]
   14001a388:	mov    rbx,QWORD PTR [rax+0x10]
   14001a38c:	mov    rcx,rbx
   14001a38f:	call   QWORD PTR [rip+0x18313]        # 0x1400326a8
   14001a395:	mov    edx,0x1
   14001a39a:	mov    rcx,rdi
   14001a39d:	call   rbx
   14001a39f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a3a4:	add    rsp,0x20
   14001a3a8:	pop    rdi
   14001a3a9:	ret    
   14001a3aa:	int3   
   14001a3ab:	int3   
   14001a3ac:	int3   
   14001a3ad:	int3   
   14001a3ae:	int3   
   14001a3af:	int3   
   14001a3b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a3b5:	push   rbp
   14001a3b6:	push   rsi
   14001a3b7:	push   rdi
   14001a3b8:	push   r14
   14001a3ba:	push   r15
   14001a3bc:	sub    rsp,0x30
   14001a3c0:	and    QWORD PTR [rcx],0x0
   14001a3c4:	mov    r15,rcx
   14001a3c7:	and    QWORD PTR [rsp+0x78],0x0
   14001a3cd:	lea    rcx,[rsp+0x78]
   14001a3d2:	mov    rbp,r8
   14001a3d5:	mov    rdi,rdx
   14001a3d8:	call   0x14001a6a4
   14001a3dd:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a3e2:	mov    esi,eax
   14001a3e4:	test   eax,eax
   14001a3e6:	js     0x14001a558
   14001a3ec:	mov    rax,QWORD PTR [rdi]
   14001a3ef:	and    QWORD PTR [rbx+0x20],0x0
   14001a3f4:	mov    rbp,QWORD PTR [rbp+0x0]
   14001a3f8:	mov    QWORD PTR [rbx+0x10],rax
   14001a3fc:	mov    rcx,QWORD PTR [rbx+0x18]
   14001a400:	test   rcx,rcx
   14001a403:	je     0x14001a410
   14001a405:	call   QWORD PTR [rip+0x181bd]        # 0x1400325c8
   14001a40b:	and    QWORD PTR [rbx+0x18],0x0
   14001a410:	mov    rcx,rbp
   14001a413:	shl    rcx,0x3
   14001a417:	mov    rax,rcx
   14001a41a:	shr    rax,0x3
   14001a41e:	cmp    rax,rbp
   14001a421:	je     0x14001a42d
   14001a423:	mov    esi,0x80070057
   14001a428:	jmp    0x14001a545
   14001a42d:	call   QWORD PTR [rip+0x1819d]        # 0x1400325d0
   14001a433:	mov    QWORD PTR [rbx+0x18],rax
   14001a437:	neg    rax
   14001a43a:	sbb    esi,esi
   14001a43c:	not    esi
   14001a43e:	and    esi,0x8007000e
   14001a444:	jl     0x14001a545
   14001a44a:	xor    r14d,r14d
   14001a44d:	test   rbp,rbp
   14001a450:	je     0x14001a543
   14001a456:	lea    rsi,[rip+0x30c1b]        # 0x14004b078
   14001a45d:	mov    rdi,QWORD PTR [rbx+0x18]
   14001a461:	lea    rax,[rsp+0x60]
   14001a466:	and    DWORD PTR [rsp+0x60],0x0
   14001a46b:	lea    r8,[rip+0xffffffffffffe96e]        # 0x140018de0
   14001a472:	mov    QWORD PTR [rsp+0x28],rax
   14001a477:	mov    r9,rbx
   14001a47a:	and    DWORD PTR [rsp+0x20],0x0
   14001a47f:	xor    edx,edx
   14001a481:	xor    ecx,ecx
   14001a483:	call   QWORD PTR [rip+0x18187]        # 0x140032610
   14001a489:	mov    QWORD PTR [rdi+r14*8],rax
   14001a48d:	test   rax,rax
   14001a490:	je     0x14001a4c3
   14001a492:	mov    rcx,QWORD PTR [rip+0x30bdf]        # 0x14004b078
   14001a499:	cmp    rcx,rsi
   14001a49c:	je     0x14001a533
   14001a4a2:	test   BYTE PTR [rcx+0x1c],0x4
   14001a4a6:	je     0x14001a533
   14001a4ac:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a4b0:	lea    r8,[rip+0x22f09]        # 0x14003d3c0
   14001a4b7:	mov    edx,0x2d
   14001a4bc:	call   0x140001f08
   14001a4c1:	jmp    0x14001a533
   14001a4c3:	mov    edi,0x80004005
   14001a4c8:	call   QWORD PTR [rip+0x18012]        # 0x1400324e0
   14001a4ce:	mov    edx,DWORD PTR [rax]
   14001a4d0:	sub    edx,0xb
   14001a4d3:	je     0x14001a4f2
   14001a4d5:	sub    edx,0x1
   14001a4d8:	je     0x14001a4e4
   14001a4da:	sub    edx,0x1
   14001a4dd:	je     0x14001a4eb
   14001a4df:	cmp    edx,0x9
   14001a4e2:	jne    0x14001a4f7
   14001a4e4:	mov    edi,0x8007000e
   14001a4e9:	jmp    0x14001a4f7
   14001a4eb:	mov    edi,0x80070005
   14001a4f0:	jmp    0x14001a4f7
   14001a4f2:	mov    edi,0x8007009b
   14001a4f7:	mov    rcx,QWORD PTR [rip+0x30b7a]        # 0x14004b078
   14001a4fe:	cmp    rcx,rsi
   14001a501:	je     0x14001a521
   14001a503:	test   BYTE PTR [rcx+0x1c],0x1
   14001a507:	je     0x14001a521
   14001a509:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a50d:	lea    r8,[rip+0x22eac]        # 0x14003d3c0
   14001a514:	mov    edx,0x2e
   14001a519:	mov    r9d,edi
   14001a51c:	call   0x140001f70
   14001a521:	xor    esi,esi
   14001a523:	test   edi,edi
   14001a525:	cmovs  esi,edi
   14001a528:	test   esi,esi
   14001a52a:	js     0x14001a558
   14001a52c:	lea    rsi,[rip+0x30b45]        # 0x14004b078
   14001a533:	inc    QWORD PTR [rbx+0x20]
   14001a537:	inc    r14
   14001a53a:	cmp    r14,rbp
   14001a53d:	jb     0x14001a45d
   14001a543:	xor    esi,esi
   14001a545:	test   esi,esi
   14001a547:	js     0x14001a558
   14001a549:	mov    rax,rbx
   14001a54c:	xor    ebx,ebx
   14001a54e:	mov    QWORD PTR [rsp+0x78],rbx
   14001a553:	xor    esi,esi
   14001a555:	mov    QWORD PTR [r15],rax
   14001a558:	test   rbx,rbx
   14001a55b:	je     0x14001a599
   14001a55d:	mov    eax,DWORD PTR [rbx+0x8]
   14001a560:	cmp    eax,0x1
   14001a563:	jne    0x14001a56e
   14001a565:	mov    DWORD PTR [rbx+0x8],0x0
   14001a56c:	jmp    0x14001a57b
   14001a56e:	or     eax,0xffffffff
   14001a571:	lock xadd DWORD PTR [rbx+0x8],eax
   14001a576:	sub    eax,0x1
   14001a579:	jg     0x14001a599
   14001a57b:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a580:	mov    rcx,QWORD PTR [rbx]
   14001a583:	mov    rdi,QWORD PTR [rcx]
   14001a586:	mov    rcx,rdi
   14001a589:	call   QWORD PTR [rip+0x18119]        # 0x1400326a8
   14001a58f:	mov    edx,0x1
   14001a594:	mov    rcx,rbx
   14001a597:	call   rdi
   14001a599:	mov    eax,esi
   14001a59b:	mov    rbx,QWORD PTR [rsp+0x68]
   14001a5a0:	add    rsp,0x30
   14001a5a4:	pop    r15
   14001a5a6:	pop    r14
   14001a5a8:	pop    rdi
   14001a5a9:	pop    rsi
   14001a5aa:	pop    rbp
   14001a5ab:	ret    
   14001a5ac:	int3   
   14001a5ad:	int3   
   14001a5ae:	int3   
   14001a5af:	int3   
   14001a5b0:	int3   
   14001a5b1:	int3   
   14001a5b2:	int3   
   14001a5b3:	int3   
   14001a5b4:	mov    rax,rsp
   14001a5b7:	mov    QWORD PTR [rax+0x10],rbx
   14001a5bb:	mov    QWORD PTR [rax+0x18],rbp
   14001a5bf:	push   rsi
   14001a5c0:	push   rdi
   14001a5c1:	push   r12
   14001a5c3:	push   r14
   14001a5c5:	push   r15
   14001a5c7:	sub    rsp,0x20
   14001a5cb:	and    QWORD PTR [rcx],0x0
   14001a5cf:	mov    r15,rcx
   14001a5d2:	and    QWORD PTR [rax+0x8],0x0
   14001a5d7:	lea    rcx,[rax+0x8]
   14001a5db:	mov    rdi,r9
   14001a5de:	mov    r14,r8
   14001a5e1:	mov    r12,rdx
   14001a5e4:	call   0x14001a738
   14001a5e9:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a5ee:	mov    esi,eax
   14001a5f0:	test   eax,eax
   14001a5f2:	js     0x14001a643
   14001a5f4:	mov    ebp,DWORD PTR [rdi]
   14001a5f6:	lea    rdi,[rbx+0x38]
   14001a5fa:	mov    rcx,QWORD PTR [rdi]
   14001a5fd:	mov    rsi,QWORD PTR [r14]
   14001a600:	mov    r14,QWORD PTR [r12]
   14001a604:	test   rcx,rcx
   14001a607:	je     0x14001a613
   14001a609:	call   QWORD PTR [rip+0x17fb9]        # 0x1400325c8
   14001a60f:	and    QWORD PTR [rdi],0x0
   14001a613:	mov    rdx,rbp
   14001a616:	mov    r8,rsi
   14001a619:	mov    rcx,rdi
   14001a61c:	call   0x14002b9ec
   14001a621:	mov    esi,eax
   14001a623:	test   eax,eax
   14001a625:	js     0x14001a630
   14001a627:	mov    QWORD PTR [rbx+0x30],r14
   14001a62b:	xor    esi,esi
   14001a62d:	mov    DWORD PTR [rbx+0x40],ebp
   14001a630:	test   esi,esi
   14001a632:	js     0x14001a643
   14001a634:	mov    rax,rbx
   14001a637:	xor    ebx,ebx
   14001a639:	mov    QWORD PTR [rsp+0x50],rbx
   14001a63e:	xor    esi,esi
   14001a640:	mov    QWORD PTR [r15],rax
   14001a643:	test   rbx,rbx
   14001a646:	je     0x14001a684
   14001a648:	mov    eax,DWORD PTR [rbx+0x8]
   14001a64b:	cmp    eax,0x1
   14001a64e:	jne    0x14001a659
   14001a650:	mov    DWORD PTR [rbx+0x8],0x0
   14001a657:	jmp    0x14001a666
   14001a659:	or     eax,0xffffffff
   14001a65c:	lock xadd DWORD PTR [rbx+0x8],eax
   14001a661:	sub    eax,0x1
   14001a664:	jg     0x14001a684
   14001a666:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a66b:	mov    rcx,QWORD PTR [rbx]
   14001a66e:	mov    rdi,QWORD PTR [rcx]
   14001a671:	mov    rcx,rdi
   14001a674:	call   QWORD PTR [rip+0x1802e]        # 0x1400326a8
   14001a67a:	mov    edx,0x1
   14001a67f:	mov    rcx,rbx
   14001a682:	call   rdi
   14001a684:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a689:	mov    eax,esi
   14001a68b:	mov    rbp,QWORD PTR [rsp+0x60]
   14001a690:	add    rsp,0x20
   14001a694:	pop    r15
   14001a696:	pop    r14
   14001a698:	pop    r12
   14001a69a:	pop    rdi
   14001a69b:	pop    rsi
   14001a69c:	ret    
   14001a69d:	int3   
   14001a69e:	int3   
   14001a69f:	int3   
   14001a6a0:	int3   
   14001a6a1:	int3   
   14001a6a2:	int3   
   14001a6a3:	int3   
   14001a6a4:	rex push rbx
   14001a6a6:	sub    rsp,0x30
   14001a6aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a6b3:	mov    rbx,rcx
   14001a6b6:	mov    ecx,0x28
   14001a6bb:	call   QWORD PTR [rip+0x17f0f]        # 0x1400325d0
   14001a6c1:	mov    rdx,rax
   14001a6c4:	xor    r8d,r8d
   14001a6c7:	test   rax,rax
   14001a6ca:	je     0x14001a6f7
   14001a6cc:	mov    DWORD PTR [rax+0x8],r8d
   14001a6d0:	lea    rax,[rip+0x1a201]        # 0x1400348d8
   14001a6d7:	mov    QWORD PTR [rdx],rax
   14001a6da:	mov    QWORD PTR [rdx+0x10],r8
   14001a6de:	mov    QWORD PTR [rsp+0x48],r8
   14001a6e3:	lea    rax,[rsp+0x48]
   14001a6e8:	mov    QWORD PTR [rsp+0x50],rax
   14001a6ed:	mov    QWORD PTR [rdx+0x18],r8
   14001a6f1:	mov    QWORD PTR [rdx+0x20],r8
   14001a6f5:	jmp    0x14001a6fa
   14001a6f7:	mov    rdx,r8
   14001a6fa:	test   rdx,rdx
   14001a6fd:	je     0x14001a718
   14001a6ff:	mov    eax,DWORD PTR [rdx+0x8]
   14001a702:	test   eax,eax
   14001a704:	jne    0x14001a70f
   14001a706:	mov    DWORD PTR [rdx+0x8],0x1
   14001a70d:	jmp    0x14001a713
   14001a70f:	lock inc DWORD PTR [rdx+0x8]
   14001a713:	mov    QWORD PTR [rbx],rdx
   14001a716:	jmp    0x14001a727
   14001a718:	mov    eax,0x8007000e
   14001a71d:	jmp    0x14001a729
   14001a71f:	mov    eax,DWORD PTR [rsp+0x48]
   14001a723:	test   eax,eax
   14001a725:	js     0x14001a729
   14001a727:	xor    eax,eax
   14001a729:	add    rsp,0x30
   14001a72d:	pop    rbx
   14001a72e:	ret    
   14001a72f:	int3   
   14001a730:	int3   
   14001a731:	int3   
   14001a732:	int3   
   14001a733:	int3   
   14001a734:	int3   
   14001a735:	int3   
   14001a736:	int3   
   14001a737:	int3   
   14001a738:	rex push rbx
   14001a73a:	sub    rsp,0x30
   14001a73e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a747:	mov    rbx,rcx
   14001a74a:	mov    ecx,0x48
   14001a74f:	call   QWORD PTR [rip+0x17e7b]        # 0x1400325d0
   14001a755:	mov    r8,rax
   14001a758:	test   rax,rax
   14001a75b:	je     0x14001a7a3
   14001a75d:	and    DWORD PTR [rax+0x8],0x0
   14001a761:	lea    rdx,[rax+0x10]
   14001a765:	mov    QWORD PTR [rdx+0x8],rdx
   14001a769:	mov    QWORD PTR [rdx],rdx
   14001a76c:	lea    rax,[rip+0x13d]        # 0x14001a8b0
   14001a773:	mov    QWORD PTR [r8+0x20],rax
   14001a777:	lea    rax,[rip+0x142]        # 0x14001a8c0
   14001a77e:	mov    QWORD PTR [r8+0x28],rax
   14001a782:	lea    rax,[rip+0x1a15f]        # 0x1400348e8
   14001a789:	mov    QWORD PTR [r8],rax
   14001a78c:	and    QWORD PTR [rsp+0x48],0x0
   14001a792:	lea    rax,[rsp+0x48]
   14001a797:	mov    QWORD PTR [rsp+0x50],rax
   14001a79c:	and    QWORD PTR [r8+0x38],0x0
   14001a7a1:	jmp    0x14001a7a6
   14001a7a3:	xor    r8d,r8d
   14001a7a6:	test   r8,r8
   14001a7a9:	je     0x14001a7c7
   14001a7ab:	mov    eax,DWORD PTR [r8+0x8]
   14001a7af:	test   eax,eax
   14001a7b1:	jne    0x14001a7bd
   14001a7b3:	mov    DWORD PTR [r8+0x8],0x1
   14001a7bb:	jmp    0x14001a7c2
   14001a7bd:	lock inc DWORD PTR [r8+0x8]
   14001a7c2:	mov    QWORD PTR [rbx],r8
   14001a7c5:	jmp    0x14001a7d6
   14001a7c7:	mov    eax,0x8007000e
   14001a7cc:	jmp    0x14001a7d8
   14001a7ce:	mov    eax,DWORD PTR [rsp+0x48]
   14001a7d2:	test   eax,eax
   14001a7d4:	js     0x14001a7d8
   14001a7d6:	xor    eax,eax
   14001a7d8:	add    rsp,0x30
   14001a7dc:	pop    rbx
   14001a7dd:	ret    
   14001a7de:	int3   
   14001a7df:	int3   
   14001a7e0:	int3   
   14001a7e1:	int3   
   14001a7e2:	int3   
   14001a7e3:	int3   
   14001a7e4:	int3   
   14001a7e5:	int3   
   14001a7e6:	int3   
   14001a7e7:	int3   
   14001a7e8:	rex push rdi
   14001a7ea:	sub    rsp,0x30
   14001a7ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a7f7:	mov    QWORD PTR [rsp+0x40],rbx
   14001a7fc:	mov    rdi,rcx
   14001a7ff:	mov    ecx,0x68
   14001a804:	call   QWORD PTR [rip+0x17dc6]        # 0x1400325d0
   14001a80a:	mov    rbx,rax
   14001a80d:	test   rax,rax
   14001a810:	je     0x14001a860
   14001a812:	and    DWORD PTR [rax+0x8],0x0
   14001a816:	lea    rdx,[rax+0x10]
   14001a81a:	mov    QWORD PTR [rdx+0x8],rdx
   14001a81e:	mov    QWORD PTR [rdx],rdx
   14001a821:	lea    rcx,[rax+0x20]
   14001a825:	xor    edx,edx
   14001a827:	lea    r8d,[rdx+0x28]
   14001a82b:	call   0x14002e2ce
   14001a830:	lea    rax,[rip+0xe9]        # 0x14001a920
   14001a837:	mov    QWORD PTR [rbx+0x40],rax
   14001a83b:	lea    rax,[rip+0x1a0de]        # 0x140034920
   14001a842:	mov    QWORD PTR [rbx],rax
   14001a845:	and    QWORD PTR [rsp+0x48],0x0
   14001a84b:	lea    rax,[rsp+0x48]
   14001a850:	mov    QWORD PTR [rsp+0x50],rax
   14001a855:	and    QWORD PTR [rbx+0x50],0x0
   14001a85a:	mov    BYTE PTR [rbx+0x60],0x0
   14001a85e:	jmp    0x14001a862
   14001a860:	xor    ebx,ebx
   14001a862:	test   rbx,rbx
   14001a865:	je     0x14001a880
   14001a867:	mov    eax,DWORD PTR [rbx+0x8]
   14001a86a:	test   eax,eax
   14001a86c:	jne    0x14001a877
   14001a86e:	mov    DWORD PTR [rbx+0x8],0x1
   14001a875:	jmp    0x14001a87b
   14001a877:	lock inc DWORD PTR [rbx+0x8]
   14001a87b:	mov    QWORD PTR [rdi],rbx
   14001a87e:	jmp    0x14001a88f
   14001a880:	mov    eax,0x8007000e
   14001a885:	jmp    0x14001a891
   14001a887:	mov    eax,DWORD PTR [rsp+0x48]
   14001a88b:	test   eax,eax
   14001a88d:	js     0x14001a891
   14001a88f:	xor    eax,eax
   14001a891:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a896:	add    rsp,0x30
   14001a89a:	pop    rdi
   14001a89b:	ret    
   14001a89c:	int3   
   14001a89d:	int3   
   14001a89e:	int3   
   14001a89f:	int3   
   14001a8a0:	int3   
   14001a8a1:	int3   
   14001a8a2:	int3   
   14001a8a3:	int3   
   14001a8a4:	int3   
   14001a8a5:	int3   
   14001a8a6:	int3   
   14001a8a7:	int3   
   14001a8a8:	int3   
   14001a8a9:	int3   
   14001a8aa:	int3   
   14001a8ab:	int3   
   14001a8ac:	int3   
   14001a8ad:	int3   
   14001a8ae:	int3   
   14001a8af:	int3   
   14001a8b0:	add    rcx,0xfffffffffffffff0
   14001a8b4:	jmp    0x140018b90
   14001a8b9:	int3   
   14001a8ba:	int3   
   14001a8bb:	int3   
   14001a8bc:	int3   
   14001a8bd:	int3   
   14001a8be:	int3   
   14001a8bf:	int3   
   14001a8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a8c5:	push   rdi
   14001a8c6:	sub    rsp,0x20
   14001a8ca:	lea    rdi,[rcx-0x10]
   14001a8ce:	mov    eax,DWORD PTR [rdi+0x8]
   14001a8d1:	cmp    eax,0x1
   14001a8d4:	jne    0x14001a8df
   14001a8d6:	mov    DWORD PTR [rdi+0x8],0x0
   14001a8dd:	jmp    0x14001a8ec
   14001a8df:	or     eax,0xffffffff
   14001a8e2:	lock xadd DWORD PTR [rdi+0x8],eax
   14001a8e7:	sub    eax,0x1
   14001a8ea:	jg     0x14001a90a
   14001a8ec:	test   rdi,rdi
   14001a8ef:	je     0x14001a90a
   14001a8f1:	mov    rax,QWORD PTR [rdi]
   14001a8f4:	mov    rbx,QWORD PTR [rax]
   14001a8f7:	mov    rcx,rbx
   14001a8fa:	call   QWORD PTR [rip+0x17da8]        # 0x1400326a8
   14001a900:	mov    edx,0x1
   14001a905:	mov    rcx,rdi
   14001a908:	call   rbx
   14001a90a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a90f:	add    rsp,0x20
   14001a913:	pop    rdi
   14001a914:	ret    
   14001a915:	int3   
   14001a916:	int3   
   14001a917:	int3   
   14001a918:	int3   
   14001a919:	int3   
   14001a91a:	int3   
   14001a91b:	int3   
   14001a91c:	int3   
   14001a91d:	int3   
   14001a91e:	int3   
   14001a91f:	int3   
   14001a920:	add    rcx,0xffffffffffffffe0
   14001a924:	jmp    0x140017d10
   14001a929:	int3   
   14001a92a:	int3   
   14001a92b:	int3   
   14001a92c:	int3   
   14001a92d:	int3   
   14001a92e:	int3   
   14001a92f:	int3   
   14001a930:	lea    rax,[rip+0x1a069]        # 0x1400349a0
   14001a937:	mov    QWORD PTR [rcx],rax
   14001a93a:	ret    
   14001a93b:	int3   
   14001a93c:	int3   
   14001a93d:	int3   
   14001a93e:	int3   
   14001a93f:	int3   
   14001a940:	int3   
   14001a941:	int3   
   14001a942:	int3   
   14001a943:	int3   
   14001a944:	int3   
   14001a945:	int3   
   14001a946:	int3   
   14001a947:	int3   
   14001a948:	int3   
   14001a949:	int3   
   14001a94a:	int3   
   14001a94b:	int3   
   14001a94c:	int3   
   14001a94d:	int3   
   14001a94e:	int3   
   14001a94f:	int3   
   14001a950:	rex push rbx
   14001a952:	sub    rsp,0x20
   14001a956:	lea    rax,[rip+0x1a043]        # 0x1400349a0
   14001a95d:	mov    rbx,rcx
   14001a960:	mov    QWORD PTR [rcx],rax
   14001a963:	test   dl,0x1
   14001a966:	je     0x14001a96e
   14001a968:	call   QWORD PTR [rip+0x17c5a]        # 0x1400325c8
   14001a96e:	mov    rax,rbx
   14001a971:	add    rsp,0x20
   14001a975:	pop    rbx
   14001a976:	ret    
   14001a977:	int3   
   14001a978:	int3   
   14001a979:	int3   
   14001a97a:	int3   
   14001a97b:	int3   
   14001a97c:	int3   
   14001a97d:	int3   
   14001a97e:	int3   
   14001a97f:	int3   
   14001a980:	mov    QWORD PTR [rsp+0x8],rbx
   14001a985:	mov    QWORD PTR [rsp+0x10],rsi
   14001a98a:	push   rdi
   14001a98b:	sub    rsp,0x20
   14001a98f:	or     esi,0xffffffff
   14001a992:	lock xadd DWORD PTR [rcx+0x10],esi
   14001a997:	sub    esi,0x1
   14001a99a:	jne    0x14001a9bd
   14001a99c:	test   rcx,rcx
   14001a99f:	je     0x14001a9bd
   14001a9a1:	lea    rdi,[rcx+0x8]
   14001a9a5:	mov    rdx,QWORD PTR [rdi]
   14001a9a8:	mov    rbx,QWORD PTR [rdx+0x10]
   14001a9ac:	mov    rcx,rbx
   14001a9af:	call   QWORD PTR [rip+0x17cf3]        # 0x1400326a8
   14001a9b5:	lea    edx,[rsi+0x1]
   14001a9b8:	mov    rcx,rdi
   14001a9bb:	call   rbx
   14001a9bd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a9c2:	mov    eax,esi
   14001a9c4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a9c9:	add    rsp,0x20
   14001a9cd:	pop    rdi
   14001a9ce:	ret    
   14001a9cf:	int3   
   14001a9d0:	int3   
   14001a9d1:	int3   
   14001a9d2:	int3   
   14001a9d3:	int3   
   14001a9d4:	int3   
   14001a9d5:	int3   
   14001a9d6:	int3   
   14001a9d7:	int3   
   14001a9d8:	mov    r11,rsp
   14001a9db:	mov    DWORD PTR [r11+0x20],r9d
   14001a9df:	push   rbp
   14001a9e0:	lea    rbp,[r11+0x78]
   14001a9e4:	sub    rsp,0x150
   14001a9eb:	and    QWORD PTR [r11-0x18],0x0
   14001a9f0:	lea    rax,[rbp+0x30]
   14001a9f4:	mov    r8d,0x14
   14001a9fa:	movzx  r9d,r8w
   14001a9fe:	lea    edx,[r8-0x10]
   14001aa02:	mov    QWORD PTR [r11-0x20],rdx
   14001aa06:	lea    r8,[rip+0x1dc73]        # 0x140038680
   14001aa0d:	mov    QWORD PTR [r11-0x28],rax
   14001aa11:	lea    rax,[rbp+0x28]
   14001aa15:	mov    QWORD PTR [r11-0x30],rdx
   14001aa19:	mov    QWORD PTR [r11-0x38],rax
   14001aa1d:	lea    rax,[rbp+0x20]
   14001aa21:	mov    QWORD PTR [r11-0x40],rdx
   14001aa25:	mov    QWORD PTR [r11-0x48],rax
   14001aa29:	lea    rax,[rbp+0x18]
   14001aa2d:	mov    QWORD PTR [r11-0x50],rdx
   14001aa31:	mov    QWORD PTR [r11-0x58],rax
   14001aa35:	lea    rax,[rbp+0x10]
   14001aa39:	mov    QWORD PTR [r11-0x60],rdx
   14001aa3d:	mov    QWORD PTR [r11-0x68],rax
   14001aa41:	lea    rax,[rbp+0x8]
   14001aa45:	mov    QWORD PTR [r11-0x70],rdx
   14001aa49:	mov    QWORD PTR [r11-0x78],rax
   14001aa4d:	lea    rax,[rbp+0x0]
   14001aa51:	mov    QWORD PTR [r11-0x80],rdx
   14001aa55:	mov    QWORD PTR [r11-0x88],rax
   14001aa5c:	lea    rax,[rbp-0x8]
   14001aa60:	mov    QWORD PTR [r11-0x90],rdx
   14001aa67:	mov    QWORD PTR [r11-0x98],rax
   14001aa6e:	lea    rax,[rbp-0x10]
   14001aa72:	mov    QWORD PTR [r11-0xa0],rdx
   14001aa79:	mov    QWORD PTR [r11-0xa8],rax
   14001aa80:	lea    rax,[rbp-0x18]
   14001aa84:	mov    QWORD PTR [r11-0xb0],rdx
   14001aa8b:	mov    QWORD PTR [r11-0xb8],rax
   14001aa92:	lea    rax,[rbp-0x20]
   14001aa96:	mov    QWORD PTR [r11-0xc0],rdx
   14001aa9d:	mov    QWORD PTR [r11-0xc8],rax
   14001aaa4:	lea    rax,[rbp-0x28]
   14001aaa8:	mov    QWORD PTR [r11-0xd0],rdx
   14001aaaf:	mov    QWORD PTR [r11-0xd8],rax
   14001aab6:	lea    rax,[rbp-0x30]
   14001aaba:	mov    QWORD PTR [rsp+0x78],rdx
   14001aabf:	mov    QWORD PTR [rsp+0x70],rax
   14001aac4:	lea    rax,[rbp-0x38]
   14001aac8:	mov    QWORD PTR [rsp+0x68],rdx
   14001aacd:	mov    QWORD PTR [rsp+0x60],rax
   14001aad2:	lea    rax,[rbp-0x40]
   14001aad6:	mov    QWORD PTR [rsp+0x58],rdx
   14001aadb:	mov    QWORD PTR [rsp+0x50],rax
   14001aae0:	lea    rax,[rbp-0x48]
   14001aae4:	mov    QWORD PTR [rsp+0x48],rdx
   14001aae9:	mov    QWORD PTR [rsp+0x40],rax
   14001aaee:	lea    rax,[rbp-0x50]
   14001aaf2:	mov    QWORD PTR [rsp+0x38],rdx
   14001aaf7:	mov    QWORD PTR [rsp+0x30],rax
   14001aafc:	lea    rax,[rbp-0x58]
   14001ab00:	mov    QWORD PTR [rsp+0x28],rdx
   14001ab05:	mov    edx,0x2b
   14001ab0a:	mov    QWORD PTR [rsp+0x20],rax
   14001ab0f:	call   QWORD PTR [rip+0x1750b]        # 0x140032020
   14001ab15:	add    rsp,0x150
   14001ab1c:	pop    rbp
   14001ab1d:	ret    
   14001ab1e:	int3   
   14001ab1f:	int3   
   14001ab20:	int3   
   14001ab21:	int3   
   14001ab22:	int3   
   14001ab23:	int3   
   14001ab24:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab29:	mov    QWORD PTR [rsp+0x10],rsi
   14001ab2e:	mov    QWORD PTR [rsp+0x18],rdi
   14001ab33:	push   r14
   14001ab35:	sub    rsp,0x90
   14001ab3c:	mov    rdx,QWORD PTR [rsp+0xe0]
   14001ab44:	mov    edi,0xa
   14001ab49:	or     r8,0xffffffffffffffff
   14001ab4d:	xor    esi,esi
   14001ab4f:	mov    rbx,rcx
   14001ab52:	lea    r10d,[rdi+0x4]
   14001ab56:	test   rdx,rdx
   14001ab59:	je     0x14001ab7b
   14001ab5b:	cmp    WORD PTR [rdx],si
   14001ab5e:	jne    0x14001ab65
   14001ab60:	mov    r11d,r10d
   14001ab63:	jmp    0x14001ab7e
   14001ab65:	mov    rax,r8
   14001ab68:	inc    rax
   14001ab6b:	cmp    WORD PTR [rdx+rax*2],si
   14001ab6f:	jne    0x14001ab68
   14001ab71:	lea    r11,[rax*2+0x2]
   14001ab79:	jmp    0x14001ab7e
   14001ab7b:	mov    r11,rdi
   14001ab7e:	lea    r14,[rip+0x1a2d3]        # 0x140034e58
   14001ab85:	test   rdx,rdx
   14001ab88:	je     0x14001ab93
   14001ab8a:	cmp    WORD PTR [rdx],si
   14001ab8d:	cmove  rdx,r14
   14001ab91:	jmp    0x14001ab9a
   14001ab93:	lea    rdx,[rip+0x1a906]        # 0x1400354a0
   14001ab9a:	mov    rax,QWORD PTR [rsp+0xc8]
   14001aba2:	test   rax,rax
   14001aba5:	je     0x14001abc7
   14001aba7:	cmp    WORD PTR [rax],si
   14001abaa:	jne    0x14001abb1
   14001abac:	mov    rcx,r10
   14001abaf:	jmp    0x14001abca
   14001abb1:	mov    rcx,r8
   14001abb4:	inc    rcx
   14001abb7:	cmp    WORD PTR [rax+rcx*2],si
   14001abbb:	jne    0x14001abb4
   14001abbd:	lea    rcx,[rcx*2+0x2]
   14001abc5:	jmp    0x14001abca
   14001abc7:	mov    rcx,rdi
   14001abca:	test   rax,rax
   14001abcd:	je     0x14001abd8
   14001abcf:	cmp    WORD PTR [rax],si
   14001abd2:	cmove  rax,r14
   14001abd6:	jmp    0x14001abdf
   14001abd8:	lea    rax,[rip+0x1a8c1]        # 0x1400354a0
   14001abdf:	test   r9,r9
   14001abe2:	je     0x14001abfe
   14001abe4:	cmp    WORD PTR [r9],si
   14001abe8:	je     0x14001ac01
   14001abea:	inc    r8
   14001abed:	cmp    WORD PTR [r9+r8*2],si
   14001abf2:	jne    0x14001abea
   14001abf4:	lea    r10,[r8*2+0x2]
   14001abfc:	jmp    0x14001ac01
   14001abfe:	mov    r10,rdi
   14001ac01:	test   r9,r9
   14001ac04:	je     0x14001ac10
   14001ac06:	cmp    WORD PTR [r9],si
   14001ac0a:	cmove  r9,r14
   14001ac0e:	jmp    0x14001ac17
   14001ac10:	lea    r9,[rip+0x1a889]        # 0x1400354a0
   14001ac17:	mov    QWORD PTR [rsp+0x80],rsi
   14001ac1f:	mov    edi,0x27
   14001ac24:	mov    QWORD PTR [rsp+0x78],r11
   14001ac29:	mov    QWORD PTR [rsp+0x70],rdx
   14001ac2e:	lea    rdx,[rsp+0xd8]
   14001ac36:	lea    r8d,[rdi-0x23]
   14001ac3a:	mov    QWORD PTR [rsp+0x68],r8
   14001ac3f:	mov    QWORD PTR [rsp+0x60],rdx
   14001ac44:	lea    rdx,[rsp+0xd0]
   14001ac4c:	mov    QWORD PTR [rsp+0x58],r8
   14001ac51:	mov    QWORD PTR [rsp+0x50],rdx
   14001ac56:	lea    edx,[rdi+0x4]
   14001ac59:	mov    QWORD PTR [rsp+0x48],rcx
   14001ac5e:	mov    rcx,rbx
   14001ac61:	mov    QWORD PTR [rsp+0x40],rax
   14001ac66:	lea    rax,[rsp+0xc0]
   14001ac6e:	mov    QWORD PTR [rsp+0x38],r8
   14001ac73:	lea    r8,[rip+0x1da06]        # 0x140038680
   14001ac7a:	mov    QWORD PTR [rsp+0x30],rax
   14001ac7f:	mov    QWORD PTR [rsp+0x28],r10
   14001ac84:	mov    QWORD PTR [rsp+0x20],r9
   14001ac89:	movzx  r9d,di
   14001ac8d:	call   QWORD PTR [rip+0x1738d]        # 0x140032020
   14001ac93:	lea    r11,[rsp+0x90]
   14001ac9b:	mov    rbx,QWORD PTR [r11+0x10]
   14001ac9f:	mov    rsi,QWORD PTR [r11+0x18]
   14001aca3:	mov    rdi,QWORD PTR [r11+0x20]
   14001aca7:	mov    rsp,r11
   14001acaa:	pop    r14
   14001acac:	ret    
   14001acad:	int3   
   14001acae:	int3   
   14001acaf:	int3   
   14001acb0:	int3   
   14001acb1:	int3   
   14001acb2:	int3   
   14001acb3:	int3   
   14001acb4:	mov    r11,rsp
   14001acb7:	mov    DWORD PTR [r11+0x20],r9d
   14001acbb:	sub    rsp,0x78
   14001acbf:	and    QWORD PTR [r11-0x18],0x0
   14001acc4:	lea    rax,[r11+0x38]
   14001acc8:	mov    r8d,0x22
   14001acce:	movzx  r9d,r8w
   14001acd2:	lea    edx,[r8-0x1e]
   14001acd6:	mov    QWORD PTR [r11-0x20],rdx
   14001acda:	lea    r8,[rip+0x1d99f]        # 0x140038680
   14001ace1:	mov    QWORD PTR [r11-0x28],rax
   14001ace5:	lea    rax,[r11+0x30]
   14001ace9:	mov    QWORD PTR [r11-0x30],rdx
   14001aced:	mov    QWORD PTR [r11-0x38],rax
   14001acf1:	lea    rax,[r11+0x28]
   14001acf5:	mov    QWORD PTR [r11-0x40],rdx
   14001acf9:	mov    QWORD PTR [r11-0x48],rax
   14001acfd:	lea    rax,[r11+0x20]
   14001ad01:	mov    QWORD PTR [r11-0x50],rdx
   14001ad05:	mov    edx,0x2b
   14001ad0a:	mov    QWORD PTR [r11-0x58],rax
   14001ad0e:	call   QWORD PTR [rip+0x1730c]        # 0x140032020
   14001ad14:	add    rsp,0x78
   14001ad18:	ret    
   14001ad19:	int3   
   14001ad1a:	int3   
   14001ad1b:	int3   
   14001ad1c:	int3   
   14001ad1d:	int3   
   14001ad1e:	int3   
   14001ad1f:	int3   
   14001ad20:	mov    r11,rsp
   14001ad23:	mov    QWORD PTR [r11+0x20],r9
   14001ad27:	sub    rsp,0x48
   14001ad2b:	and    QWORD PTR [r11-0x18],0x0
   14001ad30:	lea    rax,[r11+0x20]
   14001ad34:	movzx  r9d,dx
   14001ad38:	mov    edx,0x2b
   14001ad3d:	mov    QWORD PTR [r11-0x20],0x8
   14001ad45:	mov    QWORD PTR [r11-0x28],rax
   14001ad49:	call   QWORD PTR [rip+0x172d1]        # 0x140032020
   14001ad4f:	add    rsp,0x48
   14001ad53:	ret    
   14001ad54:	int3   
   14001ad55:	int3   
   14001ad56:	int3   
   14001ad57:	int3   
   14001ad58:	int3   
   14001ad59:	int3   
   14001ad5a:	int3   
   14001ad5b:	int3   
   14001ad5c:	mov    r11,rsp
   14001ad5f:	mov    QWORD PTR [r11+0x20],r9
   14001ad63:	sub    rsp,0x58
   14001ad67:	and    QWORD PTR [r11-0x18],0x0
   14001ad6c:	lea    rax,[r11+0x28]
   14001ad70:	mov    QWORD PTR [r11-0x20],0x4
   14001ad78:	lea    r8,[rip+0x1d901]        # 0x140038680
   14001ad7f:	mov    QWORD PTR [r11-0x28],rax
   14001ad83:	lea    rax,[r11+0x20]
   14001ad87:	movzx  r9d,dx
   14001ad8b:	mov    edx,0x2b
   14001ad90:	mov    QWORD PTR [r11-0x30],0x8
   14001ad98:	mov    QWORD PTR [r11-0x38],rax
   14001ad9c:	call   QWORD PTR [rip+0x1727e]        # 0x140032020
   14001ada2:	add    rsp,0x58
   14001ada6:	ret    
   14001ada7:	int3   
   14001ada8:	int3   
   14001ada9:	int3   
   14001adaa:	int3   
   14001adab:	int3   
   14001adac:	int3   
   14001adad:	int3   
   14001adae:	int3   
   14001adaf:	int3   
   14001adb0:	mov    QWORD PTR [rsp+0x20],r9
   14001adb5:	sub    rsp,0x58
   14001adb9:	mov    r8,QWORD PTR [rsp+0x80]
   14001adc1:	test   r8,r8
   14001adc4:	je     0x14001add9
   14001adc6:	or     rdx,0xffffffffffffffff
   14001adca:	inc    rdx
   14001adcd:	cmp    BYTE PTR [r8+rdx*1],0x0
   14001add2:	jne    0x14001adca
   14001add4:	inc    rdx
   14001add7:	jmp    0x14001adde
   14001add9:	mov    edx,0x5
   14001adde:	test   r8,r8
   14001ade1:	lea    rax,[rip+0x1a6ac]        # 0x140035494
   14001ade8:	cmovne rax,r8
   14001adec:	and    QWORD PTR [rsp+0x40],0x0
   14001adf2:	mov    QWORD PTR [rsp+0x38],rdx
   14001adf7:	mov    r8d,0xe
   14001adfd:	mov    QWORD PTR [rsp+0x30],rax
   14001ae02:	mov    edx,0x2b
   14001ae07:	lea    rax,[rsp+0x78]
   14001ae0c:	movzx  r9d,r8w
   14001ae10:	mov    QWORD PTR [rsp+0x28],0x8
   14001ae19:	lea    r8,[rip+0x1d860]        # 0x140038680
   14001ae20:	mov    QWORD PTR [rsp+0x20],rax
   14001ae25:	call   QWORD PTR [rip+0x171f5]        # 0x140032020
   14001ae2b:	add    rsp,0x58
   14001ae2f:	ret    
   14001ae30:	int3   
   14001ae31:	int3   
   14001ae32:	int3   
   14001ae33:	int3   
   14001ae34:	int3   
   14001ae35:	int3   
   14001ae36:	int3   
   14001ae37:	int3   
   14001ae38:	rex push rdi
   14001ae3a:	sub    rsp,0x30
   14001ae3e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001ae47:	mov    QWORD PTR [rsp+0x48],rbx
   14001ae4c:	mov    rbx,rdx
   14001ae4f:	mov    rdi,rcx
   14001ae52:	test   rcx,rcx
   14001ae55:	je     0x14001ae9e
   14001ae57:	test   rdx,rdx
   14001ae5a:	je     0x14001ae9e
   14001ae5c:	and    QWORD PTR [rdx],0x0
   14001ae60:	mov    ecx,0x120
   14001ae65:	call   0x140023f10
   14001ae6a:	mov    QWORD PTR [rsp+0x40],rax
   14001ae6f:	mov    rdx,rdi
   14001ae72:	mov    rcx,rax
   14001ae75:	call   0x14001aeb8
   14001ae7a:	mov    rdi,rax
   14001ae7d:	mov    QWORD PTR [rbx],rax
   14001ae80:	mov    rcx,QWORD PTR [rax]
   14001ae83:	mov    rbx,QWORD PTR [rcx]
   14001ae86:	mov    rcx,rbx
   14001ae89:	call   QWORD PTR [rip+0x17819]        # 0x1400326a8
   14001ae8f:	mov    rcx,rdi
   14001ae92:	call   rbx
   14001ae94:	xor    eax,eax
   14001ae96:	jmp    0x14001aea3
   14001ae98:	mov    eax,DWORD PTR [rsp+0x40]
   14001ae9c:	jmp    0x14001aea3
   14001ae9e:	mov    eax,0x80004003
   14001aea3:	mov    rbx,QWORD PTR [rsp+0x48]
   14001aea8:	add    rsp,0x30
   14001aeac:	pop    rdi
   14001aead:	ret    
   14001aeae:	int3   
   14001aeaf:	int3   
   14001aeb0:	int3   
   14001aeb1:	int3   
   14001aeb2:	int3   
   14001aeb3:	int3   
   14001aeb4:	int3   
   14001aeb5:	int3   
   14001aeb6:	int3   
   14001aeb7:	int3   
   14001aeb8:	mov    rax,rsp
   14001aebb:	push   rbp
   14001aebc:	push   rsi
   14001aebd:	push   rdi
   14001aebe:	push   r14
   14001aec0:	push   r15
   14001aec2:	lea    rbp,[rax-0x5f]
   14001aec6:	sub    rsp,0xd0
   14001aecd:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14001aed5:	mov    QWORD PTR [rax+0x18],rbx
   14001aed9:	mov    rax,QWORD PTR [rip+0x30140]        # 0x14004b020
   14001aee0:	xor    rax,rsp
   14001aee3:	mov    QWORD PTR [rbp+0x27],rax
   14001aee7:	mov    rsi,rdx
   14001aeea:	mov    rdi,rcx
   14001aeed:	mov    QWORD PTR [rbp-0x49],rcx
   14001aef1:	lea    r14,[rcx+0x8]
   14001aef5:	lea    rax,[rip+0x19a64]        # 0x140034960
   14001aefc:	mov    QWORD PTR [rcx],rax
   14001aeff:	lea    rax,[rip+0x19a3a]        # 0x140034940
   14001af06:	mov    QWORD PTR [r14],rax
   14001af09:	xor    r15d,r15d
   14001af0c:	mov    DWORD PTR [rcx+0x10],r15d
   14001af10:	test   rdx,rdx
   14001af13:	je     0x14001af29
   14001af15:	mov    rax,QWORD PTR [rdx]
   14001af18:	mov    rbx,QWORD PTR [rax]
   14001af1b:	mov    rcx,rbx
   14001af1e:	call   QWORD PTR [rip+0x17784]        # 0x1400326a8
   14001af24:	mov    rcx,rsi
   14001af27:	call   rbx
   14001af29:	mov    QWORD PTR [rdi+0x18],rsi
   14001af2d:	mov    QWORD PTR [rdi+0x20],r15
   14001af31:	lea    rbx,[rdi+0x28]
   14001af35:	mov    QWORD PTR [rbp-0x61],rbx
   14001af39:	mov    QWORD PTR [rbx],r15
   14001af3c:	mov    QWORD PTR [rbx+0x8],r15
   14001af40:	xor    r8d,r8d
   14001af43:	xor    edx,edx
   14001af45:	call   0x140012294
   14001af4a:	mov    QWORD PTR [rbx],rax
   14001af4d:	lea    r10,[rbx+0x10]
   14001af51:	mov    QWORD PTR [r10],r15
   14001af54:	mov    QWORD PTR [r10+0x8],r15
   14001af58:	mov    QWORD PTR [r10+0x10],r15
   14001af5c:	mov    DWORD PTR [rbx+0x38],0x3f800000
   14001af63:	mov    rax,QWORD PTR [rbx]
   14001af66:	mov    QWORD PTR [rbp-0x69],rax
   14001af6a:	mov    rdx,QWORD PTR [r10+0x8]
   14001af6e:	mov    rcx,QWORD PTR [r10]
   14001af71:	cmp    rcx,rcx
   14001af74:	jne    0x14001af7b
   14001af76:	cmp    rdx,rdx
   14001af79:	je     0x14001afb3
   14001af7b:	cmp    rcx,rdx
   14001af7e:	je     0x14001afb7
   14001af80:	mov    r9,r15
   14001af83:	mov    r8,rdx
   14001af86:	sub    r8,rdx
   14001af89:	add    r8,0x7
   14001af8d:	shr    r8,0x3
   14001af91:	cmp    rdx,rdx
   14001af94:	cmova  r8,r15
   14001af98:	test   r8,r8
   14001af9b:	je     0x14001afb3
   14001af9d:	sub    rdx,rcx
   14001afa0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14001afa4:	mov    QWORD PTR [rcx],rax
   14001afa7:	add    rcx,0x8
   14001afab:	inc    r9
   14001afae:	cmp    r9,r8
   14001afb1:	jne    0x14001afa0
   14001afb3:	mov    QWORD PTR [r10+0x8],rcx
   14001afb7:	lea    rax,[rbp-0x69]
   14001afbb:	mov    QWORD PTR [rsp+0x20],rax
   14001afc0:	mov    r9d,0x10
   14001afc6:	mov    r8,QWORD PTR [r10]
   14001afc9:	lea    rdx,[rbp-0x59]
   14001afcd:	mov    rcx,r10
   14001afd0:	call   0x14000dfb4
   14001afd5:	mov    QWORD PTR [rbx+0x28],0x7
   14001afdd:	mov    QWORD PTR [rbx+0x30],0x8
   14001afe5:	mov    esi,0x80000000
   14001afea:	mov    DWORD PTR [rdi+0x68],esi
   14001afed:	mov    QWORD PTR [rdi+0x70],r15
   14001aff1:	mov    DWORD PTR [rdi+0x80],r15d
   14001aff8:	lea    rax,[rip+0x19d21]        # 0x140034d20
   14001afff:	mov    QWORD PTR [rdi+0x78],rax
   14001b003:	mov    QWORD PTR [rdi+0x88],r15
   14001b00a:	mov    BYTE PTR [rdi+0x90],r15b
   14001b011:	mov    BYTE PTR [rdi+0x91],r15b
   14001b018:	lea    rbx,[rdi+0x98]
   14001b01f:	mov    QWORD PTR [rbp-0x61],rbx
   14001b023:	mov    rcx,rbx
   14001b026:	call   0x140003950
   14001b02b:	nop
   14001b02c:	xor    r9d,r9d
   14001b02f:	xor    edx,edx
   14001b031:	xor    ecx,ecx
   14001b033:	mov    r8d,0x40000000
   14001b039:	call   QWORD PTR [rip+0x17139]        # 0x140032178
   14001b03f:	mov    QWORD PTR [rbx+0x28],rax
   14001b043:	test   rax,rax
   14001b046:	jne    0x14001b076
   14001b048:	call   QWORD PTR [rip+0x1723a]        # 0x140032288
   14001b04e:	movzx  edx,ax
   14001b051:	or     edx,0x80070000
   14001b057:	test   eax,eax
   14001b059:	cmovle edx,eax
   14001b05c:	lea    rcx,[rbp-0x29]
   14001b060:	call   0x140002064
   14001b065:	lea    rdx,[rip+0x2e11c]        # 0x140049188
   14001b06c:	lea    rcx,[rbp-0x29]
   14001b070:	call   0x14002e2da
   14001b075:	int3   
   14001b076:	xor    r9d,r9d
   14001b079:	xor    edx,edx
   14001b07b:	xor    ecx,ecx
   14001b07d:	mov    r8d,0x40000000
   14001b083:	call   QWORD PTR [rip+0x170ef]        # 0x140032178
   14001b089:	mov    QWORD PTR [rbx+0x30],rax
   14001b08d:	test   rax,rax
   14001b090:	jne    0x14001b0c0
   14001b092:	call   QWORD PTR [rip+0x171f0]        # 0x140032288
   14001b098:	movzx  edx,ax
   14001b09b:	or     edx,0x80070000
   14001b0a1:	test   eax,eax
   14001b0a3:	cmovle edx,eax
   14001b0a6:	lea    rcx,[rbp-0x1]
   14001b0aa:	call   0x140002064
   14001b0af:	lea    rdx,[rip+0x2e0d2]        # 0x140049188
   14001b0b6:	lea    rcx,[rbp-0x1]
   14001b0ba:	call   0x14002e2da
   14001b0bf:	int3   
   14001b0c0:	mov    DWORD PTR [rbx+0x3c],0xc0000000
   14001b0c7:	mov    DWORD PTR [rdi+0x114],r15d
   14001b0ce:	mov    DWORD PTR [rdi+0x118],r15d
   14001b0d5:	mov    DWORD PTR [rdi+0x11c],r15d
   14001b0dc:	cmp    QWORD PTR [rdi+0x70],r15
   14001b0e0:	jne    0x14001b103
   14001b0e2:	xor    r9d,r9d
   14001b0e5:	xor    r8d,r8d
   14001b0e8:	lea    edx,[r9+0x1]
   14001b0ec:	xor    ecx,ecx
   14001b0ee:	call   QWORD PTR [rip+0x170a4]        # 0x140032198
   14001b0f4:	mov    QWORD PTR [rdi+0x70],rax
   14001b0f8:	mov    ecx,r15d
   14001b0fb:	test   rax,rax
   14001b0fe:	setne  cl
   14001b101:	jmp    0x14001b11a
   14001b103:	xchg   DWORD PTR [rdi+0x68],esi
   14001b106:	mov    rcx,QWORD PTR [rdi+0x70]
   14001b10a:	test   rcx,rcx
   14001b10d:	je     0x14001b115
   14001b10f:	call   QWORD PTR [rip+0x1708b]        # 0x1400321a0
   14001b115:	mov    ecx,0x1
   14001b11a:	test   ecx,ecx
   14001b11c:	jne    0x14001b167
   14001b11e:	lea    rax,[rip+0x2ff53]        # 0x14004b078
   14001b125:	mov    rcx,QWORD PTR [rip+0x2ff4c]        # 0x14004b078
   14001b12c:	cmp    rcx,rax
   14001b12f:	je     0x14001b14c
   14001b131:	test   BYTE PTR [rcx+0x1c],0x1
   14001b135:	je     0x14001b14c
   14001b137:	mov    edx,0xb
   14001b13c:	lea    r8,[rip+0x1d53d]        # 0x140038680
   14001b143:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b147:	call   0x140001f08
   14001b14c:	lea    rcx,[rbp-0x41]
   14001b150:	call   QWORD PTR [rip+0x17492]        # 0x1400325e8
   14001b156:	lea    rdx,[rip+0x2e13b]        # 0x140049298
   14001b15d:	lea    rcx,[rbp-0x41]
   14001b161:	call   0x14002e2da
   14001b166:	int3   
   14001b167:	lea    rcx,[rdi+0xd8]
   14001b16e:	xor    edx,edx
   14001b170:	lea    r8d,[rdx+0x3c]
   14001b174:	call   0x14002e2ce
   14001b179:	mov    ecx,0x100
   14001b17e:	call   0x140023f10
   14001b183:	mov    QWORD PTR [rbp-0x59],rax
   14001b187:	mov    rdx,r14
   14001b18a:	mov    rcx,rax
   14001b18d:	call   0x1400181e0
   14001b192:	mov    r14,rax
   14001b195:	mov    rsi,QWORD PTR [rdi+0x20]
   14001b199:	test   rsi,rsi
   14001b19c:	je     0x14001b1b7
   14001b19e:	mov    r8,QWORD PTR [rsi]
   14001b1a1:	mov    rbx,QWORD PTR [r8]
   14001b1a4:	mov    rcx,rbx
   14001b1a7:	call   QWORD PTR [rip+0x174fb]        # 0x1400326a8
   14001b1ad:	mov    edx,0x1
   14001b1b2:	mov    rcx,rsi
   14001b1b5:	call   rbx
   14001b1b7:	mov    QWORD PTR [rdi+0x20],r14
   14001b1bb:	mov    rax,rdi
   14001b1be:	mov    rcx,QWORD PTR [rbp+0x27]
   14001b1c2:	xor    rcx,rsp
   14001b1c5:	call   0x14002dd00
   14001b1ca:	mov    rbx,QWORD PTR [rsp+0x110]
   14001b1d2:	add    rsp,0xd0
   14001b1d9:	pop    r15
   14001b1db:	pop    r14
   14001b1dd:	pop    rdi
   14001b1de:	pop    rsi
   14001b1df:	pop    rbp
   14001b1e0:	ret    
   14001b1e1:	int3   
   14001b1e2:	int3   
   14001b1e3:	int3   
   14001b1e4:	int3   
   14001b1e5:	int3   
   14001b1e6:	int3   
   14001b1e7:	int3   
   14001b1e8:	mov    QWORD PTR [rsp+0x8],rbx
   14001b1ed:	push   rdi
   14001b1ee:	sub    rsp,0x20
   14001b1f2:	mov    ebx,edx
   14001b1f4:	mov    rdi,rcx
   14001b1f7:	call   0x14001b284
   14001b1fc:	test   bl,0x1
   14001b1ff:	je     0x14001b20a
   14001b201:	mov    rcx,rdi
   14001b204:	call   QWORD PTR [rip+0x173be]        # 0x1400325c8
   14001b20a:	mov    rax,rdi
   14001b20d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b212:	add    rsp,0x20
   14001b216:	pop    rdi
   14001b217:	ret    
   14001b218:	int3   
   14001b219:	int3   
   14001b21a:	int3   
   14001b21b:	int3   
   14001b21c:	int3   
   14001b21d:	int3   
   14001b21e:	int3   
   14001b21f:	int3   
   14001b220:	rex push rbx
   14001b222:	sub    rsp,0x20
   14001b226:	mov    rbx,rcx
   14001b229:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b22d:	test   rcx,rcx
   14001b230:	je     0x14001b247
   14001b232:	call   QWORD PTR [rip+0x17390]        # 0x1400325c8
   14001b238:	and    QWORD PTR [rbx+0x10],0x0
   14001b23d:	and    QWORD PTR [rbx+0x18],0x0
   14001b242:	and    QWORD PTR [rbx+0x20],0x0
   14001b247:	mov    rcx,rbx
   14001b24a:	call   0x14001d324
   14001b24f:	mov    rcx,QWORD PTR [rbx]
   14001b252:	add    rsp,0x20
   14001b256:	pop    rbx
   14001b257:	rex.W jmp QWORD PTR [rip+0x1736a]        # 0x1400325c8
   14001b25e:	int3   
   14001b25f:	int3   
   14001b260:	int3   
   14001b261:	int3   
   14001b262:	int3   
   14001b263:	int3   
   14001b264:	sub    rsp,0x28
   14001b268:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b26c:	test   rcx,rcx
   14001b26f:	je     0x14001b277
   14001b271:	call   QWORD PTR [rip+0x16ee1]        # 0x140032158
   14001b277:	add    rsp,0x28
   14001b27b:	ret    
   14001b27c:	int3   
   14001b27d:	int3   
   14001b27e:	int3   
   14001b27f:	int3   
   14001b280:	int3   
   14001b281:	int3   
   14001b282:	int3   
   14001b283:	int3   
   14001b284:	mov    rax,rsp
   14001b287:	mov    QWORD PTR [rax+0x8],rcx
   14001b28b:	push   rdi
   14001b28c:	sub    rsp,0x30
   14001b290:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001b298:	mov    QWORD PTR [rax+0x10],rbx
   14001b29c:	mov    QWORD PTR [rax+0x18],rsi
   14001b2a0:	mov    rdi,rcx
   14001b2a3:	lea    rax,[rip+0x196b6]        # 0x140034960
   14001b2aa:	mov    QWORD PTR [rcx],rax
   14001b2ad:	lea    rax,[rip+0x1968c]        # 0x140034940
   14001b2b4:	mov    QWORD PTR [rcx+0x8],rax
   14001b2b8:	lea    rbx,[rcx+0x98]
   14001b2bf:	mov    rcx,QWORD PTR [rbx+0x30]
   14001b2c3:	call   QWORD PTR [rip+0x16e8f]        # 0x140032158
   14001b2c9:	mov    rcx,QWORD PTR [rbx+0x28]
   14001b2cd:	call   QWORD PTR [rip+0x16e85]        # 0x140032158
   14001b2d3:	mov    rcx,rbx
   14001b2d6:	call   QWORD PTR [rip+0x16f9c]        # 0x140032278
   14001b2dc:	lea    rcx,[rdi+0x78]
   14001b2e0:	call   0x140029b48
   14001b2e5:	mov    rcx,QWORD PTR [rdi+0x70]
   14001b2e9:	test   rcx,rcx
   14001b2ec:	je     0x14001b2f4
   14001b2ee:	call   QWORD PTR [rip+0x16e64]        # 0x140032158
   14001b2f4:	mov    rcx,QWORD PTR [rdi+0x38]
   14001b2f8:	test   rcx,rcx
   14001b2fb:	je     0x14001b312
   14001b2fd:	call   QWORD PTR [rip+0x172c5]        # 0x1400325c8
   14001b303:	and    QWORD PTR [rdi+0x38],0x0
   14001b308:	and    QWORD PTR [rdi+0x40],0x0
   14001b30d:	and    QWORD PTR [rdi+0x48],0x0
   14001b312:	lea    rcx,[rdi+0x28]
   14001b316:	call   0x14001d324
   14001b31b:	mov    rcx,QWORD PTR [rdi+0x28]
   14001b31f:	call   QWORD PTR [rip+0x172a3]        # 0x1400325c8
   14001b325:	mov    rsi,QWORD PTR [rdi+0x20]
   14001b329:	test   rsi,rsi
   14001b32c:	je     0x14001b348
   14001b32e:	mov    rax,QWORD PTR [rsi]
   14001b331:	mov    rbx,QWORD PTR [rax]
   14001b334:	mov    rcx,rbx
   14001b337:	call   QWORD PTR [rip+0x1736b]        # 0x1400326a8
   14001b33d:	mov    edx,0x1
   14001b342:	mov    rcx,rsi
   14001b345:	call   rbx
   14001b347:	nop
   14001b348:	mov    rsi,QWORD PTR [rdi+0x18]
   14001b34c:	test   rsi,rsi
   14001b34f:	je     0x14001b367
   14001b351:	mov    rax,QWORD PTR [rsi]
   14001b354:	mov    rbx,QWORD PTR [rax+0x8]
   14001b358:	mov    rcx,rbx
   14001b35b:	call   QWORD PTR [rip+0x17347]        # 0x1400326a8
   14001b361:	mov    rcx,rsi
   14001b364:	call   rbx
   14001b366:	nop
   14001b367:	lea    rax,[rip+0x19632]        # 0x1400349a0
   14001b36e:	mov    QWORD PTR [rdi+0x8],rax
   14001b372:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b377:	mov    rsi,QWORD PTR [rsp+0x50]
   14001b37c:	add    rsp,0x30
   14001b380:	pop    rdi
   14001b381:	ret    
   14001b382:	int3   
   14001b383:	int3   
   14001b384:	int3   
   14001b385:	int3   
   14001b386:	int3   
   14001b387:	int3   
   14001b388:	int3   
   14001b389:	int3   
   14001b38a:	int3   
   14001b38b:	int3   
   14001b38c:	int3   
   14001b38d:	int3   
   14001b38e:	int3   
   14001b38f:	int3   
   14001b390:	mov    rax,rsp
   14001b393:	mov    QWORD PTR [rax+0x8],rcx
   14001b397:	push   rsi
   14001b398:	push   r14
   14001b39a:	push   r15
   14001b39c:	sub    rsp,0x50
   14001b3a0:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001b3a8:	mov    QWORD PTR [rax+0x18],rbx
   14001b3ac:	mov    r10,rdx
   14001b3af:	test   rdx,rdx
   14001b3b2:	je     0x14001b61d
   14001b3b8:	cmp    r8,0x6c
   14001b3bc:	jne    0x14001b61d
   14001b3c2:	and    QWORD PTR [rax-0x38],0x0
   14001b3c7:	add    rcx,0x70
   14001b3cb:	call   0x140029ab0
   14001b3d0:	test   eax,eax
   14001b3d2:	js     0x14001b3df
   14001b3d4:	mov    QWORD PTR [rsp+0x30],rcx
   14001b3d9:	xor    eax,eax
   14001b3db:	test   eax,eax
   14001b3dd:	jns    0x14001b41a
   14001b3df:	lea    rsi,[rip+0x2fc92]        # 0x14004b078
   14001b3e6:	mov    rcx,QWORD PTR [rip+0x2fc8b]        # 0x14004b078
   14001b3ed:	cmp    rcx,rsi
   14001b3f0:	je     0x14001b5f5
   14001b3f6:	test   BYTE PTR [rcx+0x1c],0x2
   14001b3fa:	je     0x14001b5f5
   14001b400:	mov    edx,0xc
   14001b405:	lea    r8,[rip+0x1d274]        # 0x140038680
   14001b40c:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b410:	call   0x140001f08
   14001b415:	jmp    0x14001b5f5
   14001b41a:	mov    r14,QWORD PTR [r10]
   14001b41d:	mov    QWORD PTR [rsp+0x38],r14
   14001b422:	and    QWORD PTR [rsp+0x88],0x0
   14001b42b:	mov    rcx,QWORD PTR [rsp+0x70]
   14001b430:	add    rcx,0xfffffffffffffff8
   14001b434:	mov    BYTE PTR [rsp+0x20],0x0
   14001b439:	lea    r9,[rsp+0x88]
   14001b441:	mov    r8,r14
   14001b444:	mov    edx,DWORD PTR [r10+0x10]
   14001b448:	call   0x14001c14c
   14001b44d:	nop
   14001b44e:	jmp    0x14001b4ef
   14001b453:	mov    eax,DWORD PTR [rsp+0x78]
   14001b457:	test   eax,eax
   14001b459:	jns    0x14001b4ea
   14001b45f:	lea    rsi,[rip+0x2fc12]        # 0x14004b078
   14001b466:	mov    rcx,QWORD PTR [rip+0x2fc0b]        # 0x14004b078
   14001b46d:	mov    r14,QWORD PTR [rsp+0x38]
   14001b472:	cmp    rcx,rsi
   14001b475:	je     0x14001b492
   14001b477:	test   BYTE PTR [rcx+0x1c],0x2
   14001b47b:	je     0x14001b492
   14001b47d:	mov    edx,0xd
   14001b482:	mov    DWORD PTR [rsp+0x20],eax
   14001b486:	mov    r9,r14
   14001b489:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b48d:	call   0x14001ad5c
   14001b492:	mov    r15,QWORD PTR [rsp+0x88]
   14001b49a:	xor    ebx,ebx
   14001b49c:	mov    QWORD PTR [rsp+0x88],rbx
   14001b4a4:	test   r15,r15
   14001b4a7:	je     0x14001b4fe
   14001b4a9:	add    r15,0x10
   14001b4ad:	mov    eax,DWORD PTR [r15+0x8]
   14001b4b1:	cmp    eax,0x1
   14001b4b4:	jne    0x14001b4bc
   14001b4b6:	mov    DWORD PTR [r15+0x8],ebx
   14001b4ba:	jmp    0x14001b4ca
   14001b4bc:	or     eax,0xffffffff
   14001b4bf:	lock xadd DWORD PTR [r15+0x8],eax
   14001b4c5:	sub    eax,0x1
   14001b4c8:	jg     0x14001b4f6
   14001b4ca:	test   r15,r15
   14001b4cd:	je     0x14001b4f6
   14001b4cf:	mov    rax,QWORD PTR [r15]
   14001b4d2:	mov    rbx,QWORD PTR [rax]
   14001b4d5:	mov    rcx,rbx
   14001b4d8:	call   QWORD PTR [rip+0x171ca]        # 0x1400326a8
   14001b4de:	mov    edx,0x1
   14001b4e3:	mov    rcx,r15
   14001b4e6:	call   rbx
   14001b4e8:	jmp    0x14001b4f6
   14001b4ea:	mov    r14,QWORD PTR [rsp+0x38]
   14001b4ef:	lea    rsi,[rip+0x2fb82]        # 0x14004b078
   14001b4f6:	mov    rbx,QWORD PTR [rsp+0x88]
   14001b4fe:	mov    rcx,QWORD PTR [rip+0x2fb73]        # 0x14004b078
   14001b505:	cmp    rcx,rsi
   14001b508:	je     0x14001b536
   14001b50a:	test   BYTE PTR [rcx+0x1c],0x2
   14001b50e:	je     0x14001b536
   14001b510:	lea    rdx,[rip+0x1d161]        # 0x140038678
   14001b517:	lea    rax,[rip+0x1cca6]        # 0x1400381c4
   14001b51e:	test   rbx,rbx
   14001b521:	cmovne rax,rdx
   14001b525:	mov    QWORD PTR [rsp+0x20],rax
   14001b52a:	mov    r9,r14
   14001b52d:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b531:	call   0x14001adb0
   14001b536:	test   rbx,rbx
   14001b539:	je     0x14001b572
   14001b53b:	mov    DWORD PTR [rbx+0xc8],0x1
   14001b545:	mov    rdx,QWORD PTR [rbx+0x20]
   14001b549:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001b550:	call   0x14001ef40
   14001b555:	test   eax,eax
   14001b557:	jns    0x14001b5af
   14001b559:	mov    rcx,QWORD PTR [rip+0x2fb18]        # 0x14004b078
   14001b560:	cmp    rcx,rsi
   14001b563:	je     0x14001b5af
   14001b565:	test   BYTE PTR [rcx+0x1c],0x2
   14001b569:	je     0x14001b5af
   14001b56b:	mov    edx,0xf
   14001b570:	jmp    0x14001b59e
   14001b572:	mov    rax,QWORD PTR [rsp+0x70]
   14001b577:	mov    rdx,r14
   14001b57a:	mov    rcx,QWORD PTR [rax+0x18]
   14001b57e:	call   0x14001ef40
   14001b583:	test   eax,eax
   14001b585:	jns    0x14001b5af
   14001b587:	mov    rcx,QWORD PTR [rip+0x2faea]        # 0x14004b078
   14001b58e:	cmp    rcx,rsi
   14001b591:	je     0x14001b5af
   14001b593:	test   BYTE PTR [rcx+0x1c],0x2
   14001b597:	je     0x14001b5af
   14001b599:	mov    edx,0x10
   14001b59e:	mov    DWORD PTR [rsp+0x20],eax
   14001b5a2:	mov    r9,r14
   14001b5a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b5a9:	call   0x14001ad5c
   14001b5ae:	nop
   14001b5af:	test   rbx,rbx
   14001b5b2:	je     0x14001b5f5
   14001b5b4:	lea    rsi,[rbx+0x10]
   14001b5b8:	mov    eax,DWORD PTR [rsi+0x8]
   14001b5bb:	cmp    eax,0x1
   14001b5be:	jne    0x14001b5c9
   14001b5c0:	mov    DWORD PTR [rsi+0x8],0x0
   14001b5c7:	jmp    0x14001b5d6
   14001b5c9:	or     eax,0xffffffff
   14001b5cc:	lock xadd DWORD PTR [rsi+0x8],eax
   14001b5d1:	sub    eax,0x1
   14001b5d4:	jg     0x14001b5f5
   14001b5d6:	test   rsi,rsi
   14001b5d9:	je     0x14001b5f5
   14001b5db:	mov    rax,QWORD PTR [rsi]
   14001b5de:	mov    rbx,QWORD PTR [rax]
   14001b5e1:	mov    rcx,rbx
   14001b5e4:	call   QWORD PTR [rip+0x170be]        # 0x1400326a8
   14001b5ea:	mov    edx,0x1
   14001b5ef:	mov    rcx,rsi
   14001b5f2:	call   rbx
   14001b5f4:	nop
   14001b5f5:	mov    rax,QWORD PTR [rsp+0x30]
   14001b5fa:	test   rax,rax
   14001b5fd:	je     0x14001b652
   14001b5ff:	or     ecx,0xffffffff
   14001b602:	lock xadd DWORD PTR [rax+0x8],ecx
   14001b607:	dec    ecx
   14001b609:	cmp    ecx,0x80000000
   14001b60f:	jne    0x14001b652
   14001b611:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b616:	call   0x140029c90
   14001b61b:	jmp    0x14001b652
   14001b61d:	lea    rsi,[rip+0x2fa54]        # 0x14004b078
   14001b624:	mov    rcx,QWORD PTR [rip+0x2fa4d]        # 0x14004b078
   14001b62b:	cmp    rcx,rsi
   14001b62e:	je     0x14001b652
   14001b630:	test   BYTE PTR [rcx+0x1c],0x1
   14001b634:	je     0x14001b652
   14001b636:	mov    edx,0xa
   14001b63b:	lea    r9,[rip+0x1cb2e]        # 0x140038170
   14001b642:	lea    r8,[rip+0x18d87]        # 0x1400343d0
   14001b649:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b64d:	call   0x1400038e0
   14001b652:	mov    rbx,QWORD PTR [rsp+0x80]
   14001b65a:	add    rsp,0x50
   14001b65e:	pop    r15
   14001b660:	pop    r14
   14001b662:	pop    rsi
   14001b663:	ret    
   14001b664:	int3   
   14001b665:	int3   
   14001b666:	int3   
   14001b667:	int3   
   14001b668:	int3   
   14001b669:	int3   
   14001b66a:	int3   
   14001b66b:	int3   
   14001b66c:	int3   
   14001b66d:	int3   
   14001b66e:	int3   
   14001b66f:	int3   
   14001b670:	mov    rax,rsp
   14001b673:	mov    QWORD PTR [rax+0x8],rcx
   14001b677:	push   rdi
   14001b678:	push   r12
   14001b67a:	push   r13
   14001b67c:	push   r14
   14001b67e:	push   r15
   14001b680:	sub    rsp,0x60
   14001b684:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14001b68c:	mov    QWORD PTR [rax+0x10],rbx
   14001b690:	mov    QWORD PTR [rax+0x18],rsi
   14001b694:	mov    r9d,r8d
   14001b697:	mov    r15,rdx
   14001b69a:	mov    r13,rcx
   14001b69d:	xor    esi,esi
   14001b69f:	mov    r12d,esi
   14001b6a2:	mov    QWORD PTR [rsp+0x40],rsi
   14001b6a7:	mov    edi,esi
   14001b6a9:	mov    QWORD PTR [rax-0x58],rsi
   14001b6ad:	mov    r14d,esi
   14001b6b0:	mov    ebx,esi
   14001b6b2:	mov    QWORD PTR [rax-0x50],rbx
   14001b6b6:	add    rcx,0x70
   14001b6ba:	call   0x140029ab0
   14001b6bf:	test   eax,eax
   14001b6c1:	js     0x14001b6d1
   14001b6c3:	mov    rbx,rcx
   14001b6c6:	mov    QWORD PTR [rsp+0x38],rcx
   14001b6cb:	mov    eax,esi
   14001b6cd:	test   eax,eax
   14001b6cf:	jns    0x14001b726
   14001b6d1:	lea    r15,[rip+0x2f9a0]        # 0x14004b078
   14001b6d8:	mov    rcx,QWORD PTR [rip+0x2f999]        # 0x14004b078
   14001b6df:	cmp    rcx,r15
   14001b6e2:	je     0x14001b700
   14001b6e4:	test   BYTE PTR [rcx+0x1c],0x2
   14001b6e8:	je     0x14001b700
   14001b6ea:	mov    edx,0x11
   14001b6ef:	lea    r8,[rip+0x1cf8a]        # 0x140038680
   14001b6f6:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b6fa:	call   0x140001f08
   14001b6ff:	nop
   14001b700:	test   rbx,rbx
   14001b703:	je     0x14001b721
   14001b705:	or     eax,0xffffffff
   14001b708:	lock xadd DWORD PTR [rbx+0x8],eax
   14001b70d:	dec    eax
   14001b70f:	cmp    eax,0x80000000
   14001b714:	jne    0x14001b721
   14001b716:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b71b:	call   0x140029c90
   14001b720:	nop
   14001b721:	jmp    0x14001b92f
   14001b726:	mov    edx,DWORD PTR [r15+0x10]
   14001b72a:	mov    ecx,edx
   14001b72c:	sub    ecx,0xc
   14001b72f:	je     0x14001b801
   14001b735:	cmp    ecx,0x1
   14001b738:	je     0x14001b79b
   14001b73a:	mov    r12,QWORD PTR [r15]
   14001b73d:	mov    QWORD PTR [rsp+0x40],r12
   14001b742:	test   BYTE PTR [rip+0x34877],0x1        # 0x14004ffc0
   14001b749:	je     0x14001b763
   14001b74b:	mov    DWORD PTR [rsp+0x28],edx
   14001b74f:	lea    rax,[rip+0x1ca7a]        # 0x1400381d0
   14001b756:	mov    QWORD PTR [rsp+0x20],rax
   14001b75b:	mov    r9,r12
   14001b75e:	call   0x14001d970
   14001b763:	lea    rcx,[r13-0x8]
   14001b767:	mov    BYTE PTR [rsp+0x20],0x1
   14001b76c:	lea    r9,[rsp+0x30]
   14001b771:	mov    r8,r12
   14001b774:	mov    edx,DWORD PTR [r15+0x10]
   14001b778:	call   0x14001c14c
   14001b77d:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b782:	test   rdi,rdi
   14001b785:	je     0x14001b824
   14001b78b:	mov    rdx,r15
   14001b78e:	mov    rcx,rdi
   14001b791:	call   0x14001e1a8
   14001b796:	jmp    0x14001b824
   14001b79b:	mov    rcx,rsi
   14001b79e:	lea    rax,[r9-0x6c]
   14001b7a2:	add    r15,0x6c
   14001b7a6:	je     0x14001b7dd
   14001b7a8:	cmp    rax,0x7fffffff
   14001b7ae:	ja     0x14001b7dd
   14001b7b0:	mov    rdx,rax
   14001b7b3:	mov    rcx,r15
   14001b7b6:	mov    r14d,esi
   14001b7b9:	test   rax,rax
   14001b7bc:	je     0x14001b7da
   14001b7be:	cmp    WORD PTR [rcx],si
   14001b7c1:	je     0x14001b7cd
   14001b7c3:	add    rcx,0x2
   14001b7c7:	sub    rdx,0x1
   14001b7cb:	jne    0x14001b7be
   14001b7cd:	test   rdx,rdx
   14001b7d0:	je     0x14001b7da
   14001b7d2:	mov    rcx,rax
   14001b7d5:	sub    rcx,rdx
   14001b7d8:	jmp    0x14001b7e3
   14001b7da:	mov    rcx,rsi
   14001b7dd:	mov    r14d,0x80070057
   14001b7e3:	test   r14d,r14d
   14001b7e6:	cmovs  rcx,rsi
   14001b7ea:	mov    QWORD PTR [rsp+0x50],rcx
   14001b7ef:	js     0x14001b824
   14001b7f1:	mov    rdx,r15
   14001b7f4:	mov    ecx,0x12f
   14001b7f9:	call   QWORD PTR [rip+0x16c41]        # 0x140032440
   14001b7ff:	jmp    0x14001b824
   14001b801:	lea    r8,[r15+0x2c]
   14001b805:	lea    rcx,[r13+0xd0]
   14001b80c:	mov    edx,0x3c
   14001b811:	mov    r9d,edx
   14001b814:	call   QWORD PTR [rip+0x16da6]        # 0x1400325c0
   14001b81a:	lea    rcx,[r13-0x8]
   14001b81e:	call   0x14001b950
   14001b823:	nop
   14001b824:	jmp    0x14001b847
   14001b826:	xor    esi,esi
   14001b828:	mov    r13,QWORD PTR [rsp+0x90]
   14001b830:	mov    r12,QWORD PTR [rsp+0x40]
   14001b835:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b83a:	mov    r14d,DWORD PTR [rsp+0xa8]
   14001b842:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b847:	mov    ecx,0x80000000
   14001b84c:	lea    eax,[r14+rcx*1]
   14001b850:	test   ecx,eax
   14001b852:	jne    0x14001b8c9
   14001b854:	cmp    r14d,0x8007045b
   14001b85b:	je     0x14001b8c9
   14001b85d:	lea    r15,[rip+0x2f814]        # 0x14004b078
   14001b864:	mov    rcx,QWORD PTR [rip+0x2f80d]        # 0x14004b078
   14001b86b:	cmp    rcx,r15
   14001b86e:	je     0x14001b88e
   14001b870:	test   BYTE PTR [rcx+0x1c],0x1
   14001b874:	je     0x14001b88e
   14001b876:	mov    edx,0x12
   14001b87b:	mov    r9d,r14d
   14001b87e:	lea    r8,[rip+0x1cdfb]        # 0x140038680
   14001b885:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b889:	call   0x140001f70
   14001b88e:	mov    rdx,r12
   14001b891:	mov    rcx,QWORD PTR [r13+0x18]
   14001b895:	call   0x14001edfc
   14001b89a:	test   eax,eax
   14001b89c:	jns    0x14001b8c9
   14001b89e:	mov    rcx,QWORD PTR [rip+0x2f7d3]        # 0x14004b078
   14001b8a5:	cmp    rcx,r15
   14001b8a8:	je     0x14001b8c9
   14001b8aa:	test   BYTE PTR [rcx+0x1c],0x2
   14001b8ae:	je     0x14001b8c9
   14001b8b0:	mov    edx,0x13
   14001b8b5:	mov    r9d,eax
   14001b8b8:	lea    r8,[rip+0x1cdc1]        # 0x140038680
   14001b8bf:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b8c3:	call   0x140001f70
   14001b8c8:	nop
   14001b8c9:	test   rbx,rbx
   14001b8cc:	je     0x14001b8ee
   14001b8ce:	or     eax,0xffffffff
   14001b8d1:	lock xadd DWORD PTR [rbx+0x8],eax
   14001b8d6:	dec    eax
   14001b8d8:	cmp    eax,0x80000000
   14001b8dd:	jne    0x14001b8e9
   14001b8df:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b8e4:	call   0x140029c90
   14001b8e9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b8ee:	test   rdi,rdi
   14001b8f1:	je     0x14001b92f
   14001b8f3:	add    rdi,0x10
   14001b8f7:	mov    eax,DWORD PTR [rdi+0x8]
   14001b8fa:	cmp    eax,0x1
   14001b8fd:	jne    0x14001b904
   14001b8ff:	mov    DWORD PTR [rdi+0x8],esi
   14001b902:	jmp    0x14001b911
   14001b904:	or     eax,0xffffffff
   14001b907:	lock xadd DWORD PTR [rdi+0x8],eax
   14001b90c:	sub    eax,0x1
   14001b90f:	jg     0x14001b92f
   14001b911:	test   rdi,rdi
   14001b914:	je     0x14001b92f
   14001b916:	mov    rax,QWORD PTR [rdi]
   14001b919:	mov    rbx,QWORD PTR [rax]
   14001b91c:	mov    rcx,rbx
   14001b91f:	call   QWORD PTR [rip+0x16d83]        # 0x1400326a8
   14001b925:	mov    edx,0x1
   14001b92a:	mov    rcx,rdi
   14001b92d:	call   rbx
   14001b92f:	lea    r11,[rsp+0x60]
   14001b934:	mov    rbx,QWORD PTR [r11+0x38]
   14001b938:	mov    rsi,QWORD PTR [r11+0x40]
   14001b93c:	mov    rsp,r11
   14001b93f:	pop    r15
   14001b941:	pop    r14
   14001b943:	pop    r13
   14001b945:	pop    r12
   14001b947:	pop    rdi
   14001b948:	ret    
   14001b949:	int3   
   14001b94a:	int3   
   14001b94b:	int3   
   14001b94c:	int3   
   14001b94d:	int3   
   14001b94e:	int3   
   14001b94f:	int3   
   14001b950:	mov    QWORD PTR [rsp+0x20],rbx
   14001b955:	push   rbp
   14001b956:	push   rsi
   14001b957:	push   rdi
   14001b958:	push   r12
   14001b95a:	push   r13
   14001b95c:	push   r14
   14001b95e:	push   r15
   14001b960:	sub    rsp,0xb0
   14001b967:	xor    ebx,ebx
   14001b969:	mov    rdi,rcx
   14001b96c:	mov    esi,ebx
   14001b96e:	lock xadd DWORD PTR [rcx+0x114],esi
   14001b976:	cmp    DWORD PTR [rcx+0xe8],ebx
   14001b97c:	mov    edx,ebx
   14001b97e:	mov    ecx,0xc3
   14001b983:	setne  dl
   14001b986:	call   QWORD PTR [rip+0x16aac]        # 0x140032438
   14001b98c:	mov    edx,DWORD PTR [rdi+0xe4]
   14001b992:	mov    ecx,0xc4
   14001b997:	add    edx,DWORD PTR [rdi+0xf4]
   14001b99d:	call   QWORD PTR [rip+0x16a95]        # 0x140032438
   14001b9a3:	mov    edx,esi
   14001b9a5:	mov    ecx,0xbf
   14001b9aa:	call   QWORD PTR [rip+0x16a88]        # 0x140032438
   14001b9b0:	mov    rax,QWORD PTR [rdi+0x20]
   14001b9b4:	cmp    DWORD PTR [rax+0x2c],ebx
   14001b9b7:	je     0x14001b9f1
   14001b9b9:	cmp    DWORD PTR [rax+0x30],ebx
   14001b9bc:	je     0x14001b9f1
   14001b9be:	mov    edx,DWORD PTR [rdi+0xe0]
   14001b9c4:	mov    ecx,0xc0
   14001b9c9:	call   QWORD PTR [rip+0x16a69]        # 0x140032438
   14001b9cf:	mov    edx,DWORD PTR [rdi+0xd8]
   14001b9d5:	mov    ecx,0xc1
   14001b9da:	call   QWORD PTR [rip+0x16a58]        # 0x140032438
   14001b9e0:	mov    edx,DWORD PTR [rdi+0xdc]
   14001b9e6:	mov    ecx,0xc2
   14001b9eb:	call   QWORD PTR [rip+0x16a47]        # 0x140032438
   14001b9f1:	mov    edx,DWORD PTR [rdi+0x104]
   14001b9f7:	mov    ecx,DWORD PTR [rdi+0x100]
   14001b9fd:	call   0x14001d3d8
   14001ba02:	mov    edx,eax
   14001ba04:	mov    ecx,0x110
   14001ba09:	mov    r14d,eax
   14001ba0c:	call   QWORD PTR [rip+0x169c6]        # 0x1400323d8
   14001ba12:	mov    ecx,DWORD PTR [rdi+0xf8]
   14001ba18:	add    ecx,DWORD PTR [rdi+0xfc]
   14001ba1e:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba24:	call   0x14001d3d8
   14001ba29:	mov    edx,eax
   14001ba2b:	mov    ecx,0x103
   14001ba30:	mov    r15d,eax
   14001ba33:	call   QWORD PTR [rip+0x1699f]        # 0x1400323d8
   14001ba39:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba3f:	mov    ecx,DWORD PTR [rdi+0xfc]
   14001ba45:	call   0x14001d3d8
   14001ba4a:	mov    edx,eax
   14001ba4c:	mov    ecx,0x104
   14001ba51:	mov    r12d,eax
   14001ba54:	call   QWORD PTR [rip+0x1697e]        # 0x1400323d8
   14001ba5a:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba60:	mov    ecx,DWORD PTR [rdi+0xf8]
   14001ba66:	call   0x14001d3d8
   14001ba6b:	mov    edx,eax
   14001ba6d:	mov    ecx,0x106
   14001ba72:	mov    r13d,eax
   14001ba75:	call   QWORD PTR [rip+0x1695d]        # 0x1400323d8
   14001ba7b:	mov    ecx,DWORD PTR [rdi+0xe4]
   14001ba81:	add    ecx,DWORD PTR [rdi+0xf4]
   14001ba87:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba8d:	call   0x14001d3d8
   14001ba92:	mov    edx,eax
   14001ba94:	mov    DWORD PTR [rsp+0xf8],eax
   14001ba9b:	mov    ecx,0x10f
   14001baa0:	call   QWORD PTR [rip+0x16932]        # 0x1400323d8
   14001baa6:	mov    rcx,QWORD PTR [rdi+0x20]
   14001baaa:	mov    edx,DWORD PTR [rcx+0x1c]
   14001baad:	mov    ecx,DWORD PTR [rdi+0xec]
   14001bab3:	call   0x14001d3d8
   14001bab8:	mov    edx,eax
   14001baba:	mov    DWORD PTR [rsp+0x100],eax
   14001bac1:	mov    ecx,0x10b
   14001bac6:	call   QWORD PTR [rip+0x16914]        # 0x1400323e0
   14001bacc:	mov    eax,DWORD PTR [rdi+0x110]
   14001bad2:	mov    rbp,rbx
   14001bad5:	test   eax,eax
   14001bad7:	je     0x14001baea
   14001bad9:	mov    ecx,eax
   14001badb:	mov    rax,QWORD PTR [rdi+0x108]
   14001bae2:	cqo    
   14001bae4:	idiv   rcx
   14001bae7:	mov    rbp,rax
   14001baea:	mov    edx,ebp
   14001baec:	mov    ecx,0x10a
   14001baf1:	call   QWORD PTR [rip+0x168e1]        # 0x1400323d8
   14001baf7:	mov    DWORD PTR [rsp+0xf0],ebx
   14001bafe:	call   QWORD PTR [rip+0x1694c]        # 0x140032450
   14001bb04:	mov    rbx,QWORD PTR [rax+0xa0]
   14001bb0b:	mov    rcx,rbx
   14001bb0e:	call   QWORD PTR [rip+0x16b94]        # 0x1400326a8
   14001bb14:	lea    r8,[rsp+0xf0]
   14001bb1c:	xor    edx,edx
   14001bb1e:	lea    rcx,[rip+0x1b18b]        # 0x140036cb0
   14001bb25:	call   rbx
   14001bb27:	cmp    DWORD PTR [rsp+0xf0],0x0
   14001bb2f:	mov    ebx,DWORD PTR [rsp+0xf8]
   14001bb36:	je     0x14001bbd9
   14001bb3c:	mov    eax,DWORD PTR [rsp+0x100]
   14001bb43:	lea    rcx,[rip+0x1c696]        # 0x1400381e0
   14001bb4a:	mov    r9d,DWORD PTR [rdi+0xf4]
   14001bb51:	mov    edx,esi
   14001bb53:	mov    r8d,DWORD PTR [rdi+0xe4]
   14001bb5a:	mov    DWORD PTR [rsp+0x90],ebp
   14001bb61:	mov    DWORD PTR [rsp+0x88],eax
   14001bb68:	mov    eax,DWORD PTR [rdi+0xfc]
   14001bb6e:	mov    DWORD PTR [rsp+0x80],ebx
   14001bb75:	mov    DWORD PTR [rsp+0x78],r13d
   14001bb7a:	mov    DWORD PTR [rsp+0x70],r12d
   14001bb7f:	mov    DWORD PTR [rsp+0x68],r15d
   14001bb84:	mov    DWORD PTR [rsp+0x60],r14d
   14001bb89:	mov    DWORD PTR [rsp+0x58],eax
   14001bb8d:	mov    eax,DWORD PTR [rdi+0xf8]
   14001bb93:	mov    DWORD PTR [rsp+0x50],eax
   14001bb97:	mov    eax,DWORD PTR [rdi+0x100]
   14001bb9d:	mov    DWORD PTR [rsp+0x48],eax
   14001bba1:	mov    eax,DWORD PTR [rdi+0xf0]
   14001bba7:	mov    DWORD PTR [rsp+0x40],eax
   14001bbab:	mov    eax,DWORD PTR [rdi+0xec]
   14001bbb1:	mov    DWORD PTR [rsp+0x38],eax
   14001bbb5:	mov    eax,DWORD PTR [rdi+0xd8]
   14001bbbb:	mov    DWORD PTR [rsp+0x30],eax
   14001bbbf:	mov    eax,DWORD PTR [rdi+0xdc]
   14001bbc5:	mov    DWORD PTR [rsp+0x28],eax
   14001bbc9:	mov    eax,DWORD PTR [rdi+0xe0]
   14001bbcf:	mov    DWORD PTR [rsp+0x20],eax
   14001bbd3:	call   QWORD PTR [rip+0x16757]        # 0x140032330
   14001bbd9:	mov    rcx,QWORD PTR [rip+0x2f498]        # 0x14004b078
   14001bbe0:	lea    rax,[rip+0x2f491]        # 0x14004b078
   14001bbe7:	cmp    rcx,rax
   14001bbea:	je     0x14001bc9f
   14001bbf0:	test   BYTE PTR [rcx+0x1c],0x4
   14001bbf4:	je     0x14001bc9f
   14001bbfa:	mov    eax,DWORD PTR [rsp+0x100]
   14001bc01:	mov    r9d,r14d
   14001bc04:	mov    rcx,QWORD PTR [rcx+0x10]
   14001bc08:	mov    DWORD PTR [rsp+0xa0],ebp
   14001bc0f:	mov    DWORD PTR [rsp+0x98],eax
   14001bc16:	mov    eax,DWORD PTR [rdi+0xfc]
   14001bc1c:	mov    DWORD PTR [rsp+0x90],ebx
   14001bc23:	mov    DWORD PTR [rsp+0x88],r13d
   14001bc2b:	mov    DWORD PTR [rsp+0x80],r12d
   14001bc33:	mov    DWORD PTR [rsp+0x78],r15d
   14001bc38:	mov    DWORD PTR [rsp+0x70],eax
   14001bc3c:	mov    eax,DWORD PTR [rdi+0xf8]
   14001bc42:	mov    DWORD PTR [rsp+0x68],eax
   14001bc46:	mov    eax,DWORD PTR [rdi+0x100]
   14001bc4c:	mov    DWORD PTR [rsp+0x60],eax
   14001bc50:	mov    eax,DWORD PTR [rdi+0xf0]
   14001bc56:	mov    DWORD PTR [rsp+0x58],eax
   14001bc5a:	mov    eax,DWORD PTR [rdi+0xec]
   14001bc60:	mov    DWORD PTR [rsp+0x50],eax
   14001bc64:	mov    eax,DWORD PTR [rdi+0xd8]
   14001bc6a:	mov    DWORD PTR [rsp+0x48],eax
   14001bc6e:	mov    eax,DWORD PTR [rdi+0xdc]
   14001bc74:	mov    DWORD PTR [rsp+0x40],eax
   14001bc78:	mov    eax,DWORD PTR [rdi+0xe0]
   14001bc7e:	mov    DWORD PTR [rsp+0x38],eax
   14001bc82:	mov    eax,DWORD PTR [rdi+0xf4]
   14001bc88:	mov    DWORD PTR [rsp+0x30],eax
   14001bc8c:	mov    eax,DWORD PTR [rdi+0xe4]
   14001bc92:	mov    DWORD PTR [rsp+0x28],eax
   14001bc96:	mov    DWORD PTR [rsp+0x20],esi
   14001bc9a:	call   0x14001a9d8
   14001bc9f:	mov    rbx,QWORD PTR [rsp+0x108]
   14001bca7:	add    rsp,0xb0
   14001bcae:	pop    r15
   14001bcb0:	pop    r14
   14001bcb2:	pop    r13
   14001bcb4:	pop    r12
   14001bcb6:	pop    rdi
   14001bcb7:	pop    rsi
   14001bcb8:	pop    rbp
   14001bcb9:	ret    
   14001bcba:	int3   
   14001bcbb:	int3   
   14001bcbc:	int3   
   14001bcbd:	int3   
   14001bcbe:	int3   
   14001bcbf:	int3   
   14001bcc0:	mov    rax,rsp
   14001bcc3:	push   rsi
   14001bcc4:	push   rdi
   14001bcc5:	push   r12
   14001bcc7:	push   r14
   14001bcc9:	push   r15
   14001bccb:	sub    rsp,0x80
   14001bcd2:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14001bcda:	mov    QWORD PTR [rax+0x10],rbx
   14001bcde:	mov    QWORD PTR [rax+0x18],rbp
   14001bce2:	mov    r14d,r9d
   14001bce5:	mov    r15b,r8b
   14001bce8:	mov    r12b,dl
   14001bceb:	mov    rbp,rcx
   14001bcee:	and    QWORD PTR [rax+0x8],0x0
   14001bcf3:	add    rcx,0x78
   14001bcf7:	call   0x140029ab0
   14001bcfc:	test   eax,eax
   14001bcfe:	js     0x14001bd0e
   14001bd00:	mov    QWORD PTR [rsp+0xb0],rcx
   14001bd08:	xor    eax,eax
   14001bd0a:	test   eax,eax
   14001bd0c:	jns    0x14001bd16
   14001bd0e:	mov    ecx,eax
   14001bd10:	call   0x140029d64
   14001bd15:	int3   
   14001bd16:	lea    rbx,[rbp+0x98]
   14001bd1d:	mov    QWORD PTR [rsp+0x70],rbx
   14001bd22:	mov    rcx,rbx
   14001bd25:	call   QWORD PTR [rip+0x163dd]        # 0x140032108
   14001bd2b:	mov    eax,0x40000000
   14001bd30:	xchg   DWORD PTR [rbx+0x3c],eax
   14001bd33:	add    eax,0x40000000
   14001bd38:	mov    rdi,QWORD PTR [rsp+0x70]
   14001bd3d:	mov    DWORD PTR [rdi+0x38],eax
   14001bd40:	xor    esi,esi
   14001bd42:	test   eax,eax
   14001bd44:	jle    0x14001bd5a
   14001bd46:	or     edx,0xffffffff
   14001bd49:	mov    rcx,QWORD PTR [rdi+0x28]
   14001bd4d:	call   QWORD PTR [rip+0x1642d]        # 0x140032180
   14001bd53:	inc    esi
   14001bd55:	cmp    esi,DWORD PTR [rdi+0x38]
   14001bd58:	jl     0x14001bd46
   14001bd5a:	mov    eax,DWORD PTR [rsp+0x118]
   14001bd61:	mov    DWORD PTR [rsp+0x68],eax
   14001bd65:	mov    eax,DWORD PTR [rsp+0x110]
   14001bd6c:	mov    DWORD PTR [rsp+0x60],eax
   14001bd70:	mov    eax,DWORD PTR [rsp+0x108]
   14001bd77:	mov    DWORD PTR [rsp+0x58],eax
   14001bd7b:	mov    eax,DWORD PTR [rsp+0x100]
   14001bd82:	mov    DWORD PTR [rsp+0x50],eax
   14001bd86:	mov    eax,DWORD PTR [rsp+0xf8]
   14001bd8d:	mov    DWORD PTR [rsp+0x48],eax
   14001bd91:	mov    eax,DWORD PTR [rsp+0xf0]
   14001bd98:	mov    DWORD PTR [rsp+0x40],eax
   14001bd9c:	mov    eax,DWORD PTR [rsp+0xe8]
   14001bda3:	mov    DWORD PTR [rsp+0x38],eax
   14001bda7:	mov    eax,DWORD PTR [rsp+0xe0]
   14001bdae:	mov    DWORD PTR [rsp+0x30],eax
   14001bdb2:	mov    eax,DWORD PTR [rsp+0xd8]
   14001bdb9:	mov    DWORD PTR [rsp+0x28],eax
   14001bdbd:	mov    eax,DWORD PTR [rsp+0xd0]
   14001bdc4:	mov    DWORD PTR [rsp+0x20],eax
   14001bdc8:	mov    r9d,r14d
   14001bdcb:	mov    r8b,r15b
   14001bdce:	mov    dl,r12b
   14001bdd1:	mov    rcx,QWORD PTR [rbp+0x20]
   14001bdd5:	call   0x1400197a4
   14001bdda:	nop
   14001bddb:	mov    ecx,0xc0000000
   14001bde0:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001bde3:	mov    edx,DWORD PTR [rdi+0x38]
   14001bde6:	add    edx,0xc0000000
   14001bdec:	add    edx,ecx
   14001bdee:	mov    rbx,QWORD PTR [rsp+0x70]
   14001bdf3:	test   edx,edx
   14001bdf5:	jle    0x14001be04
   14001bdf7:	xor    r8d,r8d
   14001bdfa:	mov    rcx,QWORD PTR [rbx+0x30]
   14001bdfe:	call   QWORD PTR [rip+0x16384]        # 0x140032188
   14001be04:	mov    rcx,rbx
   14001be07:	call   QWORD PTR [rip+0x162eb]        # 0x1400320f8
   14001be0d:	nop
   14001be0e:	mov    rax,QWORD PTR [rsp+0xb0]
   14001be16:	test   rax,rax
   14001be19:	je     0x14001be3a
   14001be1b:	or     ecx,0xffffffff
   14001be1e:	lock xadd DWORD PTR [rax+0x8],ecx
   14001be23:	dec    ecx
   14001be25:	cmp    ecx,0x80000000
   14001be2b:	jne    0x14001be3a
   14001be2d:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001be35:	call   0x140029c90
   14001be3a:	lea    r11,[rsp+0x80]
   14001be42:	mov    rbx,QWORD PTR [r11+0x38]
   14001be46:	mov    rbp,QWORD PTR [r11+0x40]
   14001be4a:	mov    rsp,r11
   14001be4d:	pop    r15
   14001be4f:	pop    r14
   14001be51:	pop    r12
   14001be53:	pop    rdi
   14001be54:	pop    rsi
   14001be55:	ret    
   14001be56:	int3   
   14001be57:	int3   
   14001be58:	int3   
   14001be59:	int3   
   14001be5a:	int3   
   14001be5b:	int3   
   14001be5c:	int3   
   14001be5d:	int3   
   14001be5e:	int3   
   14001be5f:	int3   
   14001be60:	mov    QWORD PTR [rsp+0x10],rbx
   14001be65:	mov    QWORD PTR [rsp+0x18],rsi
   14001be6a:	mov    QWORD PTR [rsp+0x20],rdi
   14001be6f:	push   r12
   14001be71:	push   r14
   14001be73:	push   r15
   14001be75:	sub    rsp,0xc0
   14001be7c:	mov    rax,QWORD PTR [rip+0x2f19d]        # 0x14004b020
   14001be83:	xor    rax,rsp
   14001be86:	mov    QWORD PTR [rsp+0xb0],rax
   14001be8e:	and    QWORD PTR [rsp+0x40],0x0
   14001be94:	xor    edx,edx
   14001be96:	mov    rsi,rcx
   14001be99:	lea    rcx,[rsp+0x48]
   14001be9e:	lea    r8d,[rdx+0x64]
   14001bea2:	call   0x14002e2ce
   14001bea7:	mov    rcx,QWORD PTR [rsi+0x20]
   14001beab:	lea    rdx,[rsp+0x40]
   14001beb0:	mov    DWORD PTR [rsp+0x50],0x7
   14001beb8:	call   0x14001a1e0
   14001bebd:	lea    r15,[rip+0x2f1b4]        # 0x14004b078
   14001bec4:	test   eax,eax
   14001bec6:	jns    0x14001bef2
   14001bec8:	mov    rcx,QWORD PTR [rip+0x2f1a9]        # 0x14004b078
   14001becf:	cmp    rcx,r15
   14001bed2:	je     0x14001bef2
   14001bed4:	test   BYTE PTR [rcx+0x1c],0x2
   14001bed8:	je     0x14001bef2
   14001beda:	mov    rcx,QWORD PTR [rcx+0x10]
   14001bede:	lea    r8,[rip+0x1c79b]        # 0x140038680
   14001bee5:	mov    edx,0x15
   14001beea:	mov    r9d,eax
   14001beed:	call   0x140001f70
   14001bef2:	lea    rcx,[rsi+0x78]
   14001bef6:	call   0x140029b84
   14001befb:	lea    rbx,[rsi+0x98]
   14001bf02:	mov    rcx,rbx
   14001bf05:	call   QWORD PTR [rip+0x161fd]        # 0x140032108
   14001bf0b:	mov    r12d,0x40000000
   14001bf11:	xor    edi,edi
   14001bf13:	mov    eax,r12d
   14001bf16:	xchg   DWORD PTR [rbx+0x3c],eax
   14001bf19:	add    eax,r12d
   14001bf1c:	mov    DWORD PTR [rbx+0x38],eax
   14001bf1f:	test   eax,eax
   14001bf21:	jle    0x14001bf37
   14001bf23:	mov    rcx,QWORD PTR [rbx+0x28]
   14001bf27:	or     edx,0xffffffff
   14001bf2a:	call   QWORD PTR [rip+0x16250]        # 0x140032180
   14001bf30:	inc    edi
   14001bf32:	cmp    edi,DWORD PTR [rbx+0x38]
   14001bf35:	jl     0x14001bf23
   14001bf37:	lea    r14,[rsi+0x28]
   14001bf3b:	mov    rax,QWORD PTR [r14]
   14001bf3e:	mov    rdi,QWORD PTR [rax]
   14001bf41:	cmp    rdi,rax
   14001bf44:	je     0x14001bfac
   14001bf46:	mov    rcx,QWORD PTR [rdi+0x18]
   14001bf4a:	test   rcx,rcx
   14001bf4d:	je     0x14001bf69
   14001bf4f:	mov    rdx,QWORD PTR [rcx+0x20]
   14001bf53:	mov    DWORD PTR [rcx+0xc8],0x1
   14001bf5d:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001bf64:	call   0x14001ef40
   14001bf69:	or     eax,0xffffffff
   14001bf6c:	lock xadd DWORD PTR [rsi+0x68],eax
   14001bf71:	cmp    eax,0x1
   14001bf74:	jne    0x14001bf9d
   14001bf76:	prefetchw BYTE PTR [rsi+0x68]
   14001bf7a:	mov    eax,DWORD PTR [rsi+0x68]
   14001bf7d:	mov    ecx,eax
   14001bf7f:	or     ecx,r12d
   14001bf82:	lock cmpxchg DWORD PTR [rsi+0x68],ecx
   14001bf87:	jne    0x14001bf7a
   14001bf89:	test   r12d,eax
   14001bf8c:	jne    0x14001bf9d
   14001bf8e:	mov    rcx,QWORD PTR [rsi+0x70]
   14001bf92:	test   rcx,rcx
   14001bf95:	je     0x14001bf9d
   14001bf97:	call   QWORD PTR [rip+0x161f3]        # 0x140032190
   14001bf9d:	lock dec DWORD PTR [rsi+0x118]
   14001bfa4:	mov    rdi,QWORD PTR [rdi]
   14001bfa7:	cmp    rdi,QWORD PTR [r14]
   14001bfaa:	jne    0x14001bf46
   14001bfac:	mov    rcx,r14
   14001bfaf:	call   0x14001d324
   14001bfb4:	mov    rax,QWORD PTR [r14]
   14001bfb7:	lea    rcx,[r14+0x10]
   14001bfbb:	mov    r8,QWORD PTR [rcx]
   14001bfbe:	lea    rdx,[rsp+0x38]
   14001bfc3:	mov    QWORD PTR [rsp+0x30],rax
   14001bfc8:	mov    r9d,0x10
   14001bfce:	lea    rax,[rsp+0x30]
   14001bfd3:	mov    QWORD PTR [rcx+0x8],r8
   14001bfd7:	mov    QWORD PTR [rsp+0x20],rax
   14001bfdc:	call   0x14000dfb4
   14001bfe1:	mov    QWORD PTR [r14+0x28],0x7
   14001bfe9:	mov    ecx,0xc0000000
   14001bfee:	mov    QWORD PTR [r14+0x30],0x8
   14001bff6:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001bff9:	mov    edx,DWORD PTR [rbx+0x38]
   14001bffc:	add    edx,0xc0000000
   14001c002:	add    edx,ecx
   14001c004:	test   edx,edx
   14001c006:	jle    0x14001c015
   14001c008:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c00c:	xor    r8d,r8d
   14001c00f:	call   QWORD PTR [rip+0x16173]        # 0x140032188
   14001c015:	mov    rcx,rbx
   14001c018:	call   QWORD PTR [rip+0x160da]        # 0x1400320f8
   14001c01e:	mov    rcx,QWORD PTR [rip+0x2f053]        # 0x14004b078
   14001c025:	cmp    rcx,r15
   14001c028:	je     0x14001c045
   14001c02a:	test   BYTE PTR [rcx+0x1c],0x2
   14001c02e:	je     0x14001c045
   14001c030:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c034:	lea    r8,[rip+0x1c645]        # 0x140038680
   14001c03b:	mov    edx,0x16
   14001c040:	call   0x140001f08
   14001c045:	prefetchw BYTE PTR [rsi+0x68]
   14001c049:	mov    eax,DWORD PTR [rsi+0x68]
   14001c04c:	mov    ecx,eax
   14001c04e:	btr    ecx,0x1f
   14001c052:	lock cmpxchg DWORD PTR [rsi+0x68],ecx
   14001c057:	jne    0x14001c049
   14001c059:	test   eax,eax
   14001c05b:	jns    0x14001c076
   14001c05d:	xor    eax,eax
   14001c05f:	lock cmpxchg DWORD PTR [rsi+0x68],r12d
   14001c065:	jne    0x14001c076
   14001c067:	mov    rcx,QWORD PTR [rsi+0x70]
   14001c06b:	test   rcx,rcx
   14001c06e:	je     0x14001c076
   14001c070:	call   QWORD PTR [rip+0x1611a]        # 0x140032190
   14001c076:	mov    rcx,QWORD PTR [rsi+0x70]
   14001c07a:	test   rcx,rcx
   14001c07d:	je     0x14001c088
   14001c07f:	or     edx,0xffffffff
   14001c082:	call   QWORD PTR [rip+0x160f8]        # 0x140032180
   14001c088:	mov    rcx,QWORD PTR [rip+0x2efe9]        # 0x14004b078
   14001c08f:	cmp    rcx,r15
   14001c092:	je     0x14001c0af
   14001c094:	test   BYTE PTR [rcx+0x1c],0x2
   14001c098:	je     0x14001c0af
   14001c09a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c09e:	lea    r8,[rip+0x1c5db]        # 0x140038680
   14001c0a5:	mov    edx,0x17
   14001c0aa:	call   0x140001f08
   14001c0af:	mov    rcx,QWORD PTR [rsi+0x20]
   14001c0b3:	call   0x1400189fc
   14001c0b8:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001c0c0:	xor    rcx,rsp
   14001c0c3:	call   0x14002dd00
   14001c0c8:	lea    r11,[rsp+0xc0]
   14001c0d0:	mov    rbx,QWORD PTR [r11+0x28]
   14001c0d4:	mov    rsi,QWORD PTR [r11+0x30]
   14001c0d8:	mov    rdi,QWORD PTR [r11+0x38]
   14001c0dc:	mov    rsp,r11
   14001c0df:	pop    r15
   14001c0e1:	pop    r14
   14001c0e3:	pop    r12
   14001c0e5:	ret    
   14001c0e6:	int3   
   14001c0e7:	int3   
   14001c0e8:	int3   
   14001c0e9:	int3   
   14001c0ea:	int3   
   14001c0eb:	int3   
   14001c0ec:	int3   
   14001c0ed:	int3   
   14001c0ee:	int3   
   14001c0ef:	int3   
   14001c0f0:	sub    rsp,0x38
   14001c0f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c0fd:	mov    rcx,QWORD PTR [rcx+0x20]
   14001c101:	mov    DWORD PTR [rcx+0x34],edx
   14001c104:	mov    DWORD PTR [rcx+0x2c],r8d
   14001c108:	mov    DWORD PTR [rcx+0x30],r9d
   14001c10c:	call   0x140019738
   14001c111:	nop
   14001c112:	add    rsp,0x38
   14001c116:	ret    
   14001c117:	int3   
   14001c118:	int3   
   14001c119:	int3   
   14001c11a:	int3   
   14001c11b:	int3   
   14001c11c:	int3   
   14001c11d:	int3   
   14001c11e:	int3   
   14001c11f:	int3   
   14001c120:	sub    rsp,0x38
   14001c124:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c12d:	cmp    QWORD PTR [rcx+0x20],0x0
   14001c132:	je     0x14001c13e
   14001c134:	mov    rcx,QWORD PTR [rcx+0x20]
   14001c138:	call   0x140019a48
   14001c13d:	nop
   14001c13e:	add    rsp,0x38
   14001c142:	ret    
   14001c143:	int3   
   14001c144:	int3   
   14001c145:	int3   
   14001c146:	int3   
   14001c147:	int3   
   14001c148:	int3   
   14001c149:	int3   
   14001c14a:	int3   
   14001c14b:	int3   
   14001c14c:	mov    rax,rsp
   14001c14f:	push   rbp
   14001c150:	push   rsi
   14001c151:	push   rdi
   14001c152:	push   r12
   14001c154:	push   r13
   14001c156:	push   r14
   14001c158:	push   r15
   14001c15a:	lea    rbp,[rax-0x57]
   14001c15e:	sub    rsp,0xd0
   14001c165:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   14001c16d:	mov    QWORD PTR [rax+0x10],rbx
   14001c171:	mov    rax,QWORD PTR [rip+0x2eea8]        # 0x14004b020
   14001c178:	xor    rax,rsp
   14001c17b:	mov    QWORD PTR [rbp+0x17],rax
   14001c17f:	mov    rax,r9
   14001c182:	mov    QWORD PTR [rbp-0x49],rax
   14001c186:	mov    esi,edx
   14001c188:	mov    r14,rcx
   14001c18b:	mov    QWORD PTR [rsp+0x30],r8
   14001c190:	xor    r12d,r12d
   14001c193:	test   r8,r8
   14001c196:	je     0x14001c6ab
   14001c19c:	test   rax,rax
   14001c19f:	je     0x14001c6ab
   14001c1a5:	mov    QWORD PTR [r9],r12
   14001c1a8:	mov    QWORD PTR [rbp-0x79],r12
   14001c1ac:	lea    rbx,[rcx+0x98]
   14001c1b3:	lea    r15d,[r12+0x1]
   14001c1b8:	jmp    0x14001c1c7
   14001c1ba:	or     edx,0xffffffff
   14001c1bd:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c1c1:	call   QWORD PTR [rip+0x15fb9]        # 0x140032180
   14001c1c7:	mov    eax,r15d
   14001c1ca:	lock xadd DWORD PTR [rbx+0x3c],eax
   14001c1cf:	add    eax,r15d
   14001c1d2:	test   eax,eax
   14001c1d4:	jg     0x14001c1ba
   14001c1d6:	lea    rdi,[r14+0x28]
   14001c1da:	lea    r8,[rsp+0x30]
   14001c1df:	lea    rdx,[rbp-0x71]
   14001c1e3:	mov    rcx,rdi
   14001c1e6:	call   0x14001cff8
   14001c1eb:	mov    rdx,QWORD PTR [rbp-0x71]
   14001c1ef:	cmp    rdx,QWORD PTR [rdi]
   14001c1f2:	je     0x14001c22d
   14001c1f4:	add    rdx,0x18
   14001c1f8:	lea    rcx,[rbp-0x79]
   14001c1fc:	call   0x14001d1ac
   14001c201:	or     r13d,0xffffffff
   14001c205:	mov    eax,r13d
   14001c208:	lock xadd DWORD PTR [rbx+0x3c],eax
   14001c20d:	add    eax,r13d
   14001c210:	test   eax,eax
   14001c212:	jle    0x14001c69e
   14001c218:	xor    r8d,r8d
   14001c21b:	mov    edx,r15d
   14001c21e:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c222:	call   QWORD PTR [rip+0x15f60]        # 0x140032188
   14001c228:	jmp    0x14001c69e
   14001c22d:	or     r13d,0xffffffff
   14001c231:	mov    eax,r13d
   14001c234:	lock xadd DWORD PTR [rbx+0x3c],eax
   14001c239:	add    eax,r13d
   14001c23c:	test   eax,eax
   14001c23e:	jle    0x14001c250
   14001c240:	xor    r8d,r8d
   14001c243:	mov    edx,r15d
   14001c246:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c24a:	call   QWORD PTR [rip+0x15f38]        # 0x140032188
   14001c250:	cmp    BYTE PTR [rbp+0x7f],r12b
   14001c254:	jne    0x14001c296
   14001c256:	lea    r12,[rip+0x2ee1b]        # 0x14004b078
   14001c25d:	mov    rcx,QWORD PTR [rip+0x2ee14]        # 0x14004b078
   14001c264:	cmp    rcx,r12
   14001c267:	je     0x14001c6a9
   14001c26d:	test   BYTE PTR [rcx+0x1c],0x2
   14001c271:	je     0x14001c6a9
   14001c277:	mov    edx,0x1a
   14001c27c:	mov    r9,QWORD PTR [rsp+0x30]
   14001c281:	lea    r8,[rip+0x1c3f8]        # 0x140038680
   14001c288:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c28c:	call   0x14001ad20
   14001c291:	jmp    0x14001c6a9
   14001c296:	mov    eax,DWORD PTR [r14+0x118]
   14001c29d:	cmp    eax,0x100000
   14001c2a2:	ja     0x14001c6a9
   14001c2a8:	lea    r12,[rip+0x2edc9]        # 0x14004b078
   14001c2af:	mov    rcx,QWORD PTR [rip+0x2edc2]        # 0x14004b078
   14001c2b6:	cmp    rcx,r12
   14001c2b9:	je     0x14001c2d8
   14001c2bb:	test   BYTE PTR [rcx+0x1c],0x4
   14001c2bf:	je     0x14001c2d8
   14001c2c1:	mov    edx,0x1b
   14001c2c6:	mov    DWORD PTR [rsp+0x20],esi
   14001c2ca:	mov    r9,QWORD PTR [rsp+0x30]
   14001c2cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c2d3:	call   0x14001ad5c
   14001c2d8:	lea    rax,[r14+0x78]
   14001c2dc:	mov    QWORD PTR [rbp-0x39],rax
   14001c2e0:	mov    QWORD PTR [rbp-0x41],r14
   14001c2e4:	lea    rax,[r14+0x18]
   14001c2e8:	lea    rdx,[r14+0x20]
   14001c2ec:	lea    rcx,[rsp+0x30]
   14001c2f1:	mov    QWORD PTR [rsp+0x28],rcx
   14001c2f6:	mov    QWORD PTR [rsp+0x20],rax
   14001c2fb:	lea    r9,[rbp-0x39]
   14001c2ff:	lea    r8,[rbp-0x41]
   14001c303:	lea    rcx,[rbp-0x79]
   14001c307:	call   0x14001d410
   14001c30c:	test   eax,eax
   14001c30e:	jns    0x14001c318
   14001c310:	mov    ecx,eax
   14001c312:	call   0x140029d64
   14001c317:	int3   
   14001c318:	mov    QWORD PTR [rbp-0x61],rbx
   14001c31c:	mov    rcx,rbx
   14001c31f:	call   QWORD PTR [rip+0x15de3]        # 0x140032108
   14001c325:	mov    eax,0x40000000
   14001c32a:	xchg   DWORD PTR [rbx+0x3c],eax
   14001c32d:	add    eax,0x40000000
   14001c332:	mov    rsi,QWORD PTR [rbp-0x61]
   14001c336:	mov    DWORD PTR [rsi+0x38],eax
   14001c339:	and    DWORD PTR [rbp-0x71],0x0
   14001c33d:	test   eax,eax
   14001c33f:	jle    0x14001c360
   14001c341:	mov    ebx,DWORD PTR [rbp-0x71]
   14001c344:	or     edx,0xffffffff
   14001c347:	mov    rcx,QWORD PTR [rsi+0x28]
   14001c34b:	call   QWORD PTR [rip+0x15e2f]        # 0x140032180
   14001c351:	add    ebx,r15d
   14001c354:	cmp    ebx,DWORD PTR [rsi+0x38]
   14001c357:	jl     0x14001c344
   14001c359:	lea    rbx,[r14+0x98]
   14001c360:	lea    r8,[rsp+0x30]
   14001c365:	lea    rdx,[rbp-0x29]
   14001c369:	mov    rcx,rdi
   14001c36c:	call   0x14001cff8
   14001c371:	mov    rdi,QWORD PTR [rax]
   14001c374:	mov    QWORD PTR [rbp-0x71],rdi
   14001c378:	cmp    rdi,QWORD PTR [r14+0x28]
   14001c37c:	je     0x14001c424
   14001c382:	mov    rcx,QWORD PTR [rip+0x2ecef]        # 0x14004b078
   14001c389:	cmp    rcx,r12
   14001c38c:	je     0x14001c3b5
   14001c38e:	test   BYTE PTR [rcx+0x1c],0x2
   14001c392:	je     0x14001c3b5
   14001c394:	mov    edx,0x1c
   14001c399:	mov    r9,QWORD PTR [rsp+0x30]
   14001c39e:	lea    r8,[rip+0x1c2db]        # 0x140038680
   14001c3a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c3a9:	call   0x14001ad20
   14001c3ae:	mov    rcx,QWORD PTR [rip+0x2ecc3]        # 0x14004b078
   14001c3b5:	test   BYTE PTR [rip+0x33c04],0x4        # 0x14004ffc0
   14001c3bc:	je     0x14001c3da
   14001c3be:	lea    r8,[rip+0x17f43]        # 0x140034308
   14001c3c5:	lea    rdx,[rip+0x17ee4]        # 0x1400342b0
   14001c3cc:	call   0x140003818
   14001c3d1:	mov    rcx,QWORD PTR [rip+0x2eca0]        # 0x14004b078
   14001c3d8:	jmp    0x14001c3dc
   14001c3da:	xor    eax,eax
   14001c3dc:	movzx  r9d,ax
   14001c3e0:	or     r9d,0x80070000
   14001c3e7:	test   eax,eax
   14001c3e9:	cmovle r9d,eax
   14001c3ed:	test   r9d,r9d
   14001c3f0:	jns    0x14001c412
   14001c3f2:	cmp    rcx,r12
   14001c3f5:	je     0x14001c412
   14001c3f7:	test   BYTE PTR [rcx+0x1c],0x2
   14001c3fb:	je     0x14001c412
   14001c3fd:	mov    edx,0x1d
   14001c402:	lea    r8,[rip+0x1c277]        # 0x140038680
   14001c409:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c40d:	call   0x140001f70
   14001c412:	lea    rdx,[rdi+0x18]
   14001c416:	lea    rcx,[rbp-0x79]
   14001c41a:	call   0x14001d1ac
   14001c41f:	jmp    0x14001c66d
   14001c424:	mov    rcx,r14
   14001c427:	call   0x14001c784
   14001c42c:	mov    rax,QWORD PTR [rsp+0x30]
   14001c431:	mov    QWORD PTR [rbp-0x59],rax
   14001c435:	mov    rax,QWORD PTR [rbp-0x79]
   14001c439:	test   rax,rax
   14001c43c:	je     0x14001c454
   14001c43e:	mov    ecx,DWORD PTR [rax+0x18]
   14001c441:	test   ecx,ecx
   14001c443:	jne    0x14001c44b
   14001c445:	mov    DWORD PTR [rax+0x18],r15d
   14001c449:	jmp    0x14001c450
   14001c44b:	lock add DWORD PTR [rax+0x18],r15d
   14001c450:	mov    rax,QWORD PTR [rbp-0x79]
   14001c454:	mov    QWORD PTR [rbp-0x51],rax
   14001c458:	lea    rdi,[r14+0x28]
   14001c45c:	mov    rax,QWORD PTR [rdi]
   14001c45f:	mov    rax,QWORD PTR [rax]
   14001c462:	mov    QWORD PTR [rbp-0x69],rax
   14001c466:	lea    r9,[rbp-0x59]
   14001c46a:	mov    r8,QWORD PTR [rax+0x8]
   14001c46e:	mov    rdx,rax
   14001c471:	call   0x14001d8d8
   14001c476:	mov    rdx,rax
   14001c479:	mov    rax,QWORD PTR [rdi+0x8]
   14001c47d:	movabs rcx,0x7fffffffffffffe
   14001c487:	sub    rcx,rax
   14001c48a:	cmp    rcx,r15
   14001c48d:	jae    0x14001c49c
   14001c48f:	lea    rcx,[rip+0x1acea]        # 0x140037180
   14001c496:	call   0x14002d7f8
   14001c49b:	int3   
   14001c49c:	inc    rax
   14001c49f:	mov    QWORD PTR [rdi+0x8],rax
   14001c4a3:	mov    rax,QWORD PTR [rbp-0x69]
   14001c4a7:	mov    QWORD PTR [rax+0x8],rdx
   14001c4ab:	mov    rax,QWORD PTR [rdx+0x8]
   14001c4af:	mov    QWORD PTR [rax],rdx
   14001c4b2:	mov    r9,QWORD PTR [rdi]
   14001c4b5:	mov    r9,QWORD PTR [r9]
   14001c4b8:	lea    r8,[r9+0x10]
   14001c4bc:	lea    rdx,[rbp-0x21]
   14001c4c0:	mov    rcx,rdi
   14001c4c3:	call   0x14001d644
   14001c4c8:	nop
   14001c4c9:	mov    rax,QWORD PTR [rbp-0x51]
   14001c4cd:	mov    QWORD PTR [rbp-0x69],rax
   14001c4d1:	test   rax,rax
   14001c4d4:	je     0x14001c51f
   14001c4d6:	lea    rcx,[rax+0x10]
   14001c4da:	mov    eax,DWORD PTR [rcx+0x8]
   14001c4dd:	cmp    eax,r15d
   14001c4e0:	jne    0x14001c4eb
   14001c4e2:	mov    DWORD PTR [rcx+0x8],0x0
   14001c4e9:	jmp    0x14001c4fa
   14001c4eb:	mov    eax,r13d
   14001c4ee:	lock xadd DWORD PTR [rcx+0x8],eax
   14001c4f3:	add    eax,r13d
   14001c4f6:	test   eax,eax
   14001c4f8:	jg     0x14001c51f
   14001c4fa:	test   rcx,rcx
   14001c4fd:	je     0x14001c51f
   14001c4ff:	mov    rax,QWORD PTR [rcx]
   14001c502:	mov    rdi,QWORD PTR [rax]
   14001c505:	mov    rcx,rdi
   14001c508:	call   QWORD PTR [rip+0x1619a]        # 0x1400326a8
   14001c50e:	mov    edx,r15d
   14001c511:	mov    rcx,QWORD PTR [rbp-0x69]
   14001c515:	add    rcx,0x10
   14001c519:	call   rdi
   14001c51b:	lea    rdi,[r14+0x28]
   14001c51f:	mov    eax,r15d
   14001c522:	lock xadd DWORD PTR [r14+0x68],eax
   14001c528:	add    eax,r15d
   14001c52b:	js     0x14001c5c8
   14001c531:	mov    eax,r13d
   14001c534:	lock xadd DWORD PTR [r14+0x68],eax
   14001c53a:	add    eax,r13d
   14001c53d:	jne    0x14001c56c
   14001c53f:	prefetchw BYTE PTR [r14+0x68]
   14001c544:	mov    edx,0x40000000
   14001c549:	mov    eax,DWORD PTR [r14+0x68]
   14001c54d:	mov    ecx,eax
   14001c54f:	or     ecx,edx
   14001c551:	lock cmpxchg DWORD PTR [r14+0x68],ecx
   14001c557:	jne    0x14001c549
   14001c559:	test   edx,eax
   14001c55b:	jne    0x14001c56c
   14001c55d:	mov    rcx,QWORD PTR [r14+0x70]
   14001c561:	test   rcx,rcx
   14001c564:	je     0x14001c56c
   14001c566:	call   QWORD PTR [rip+0x15c24]        # 0x140032190
   14001c56c:	mov    rcx,QWORD PTR [rip+0x2eb05]        # 0x14004b078
   14001c573:	cmp    rcx,r12
   14001c576:	je     0x14001c593
   14001c578:	test   BYTE PTR [rcx+0x1c],0x2
   14001c57c:	je     0x14001c593
   14001c57e:	mov    edx,0x1e
   14001c583:	lea    r8,[rip+0x1c0f6]        # 0x140038680
   14001c58a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c58e:	call   0x140001f08
   14001c593:	lea    rdx,[rsp+0x30]
   14001c598:	mov    rcx,rdi
   14001c59b:	call   0x14001ce70
   14001c5a0:	lea    rcx,[rbp-0x79]
   14001c5a4:	call   0x14001d134
   14001c5a9:	mov    edx,0x8007045b
   14001c5ae:	lea    rcx,[rbp-0x11]
   14001c5b2:	call   0x140002064
   14001c5b7:	lea    rdx,[rip+0x2cbca]        # 0x140049188
   14001c5be:	lea    rcx,[rbp-0x11]
   14001c5c2:	call   0x14002e2da
   14001c5c7:	int3   
   14001c5c8:	lock add DWORD PTR [r14+0x114],r15d
   14001c5d0:	lock add DWORD PTR [r14+0x118],r15d
   14001c5d8:	test   BYTE PTR [rip+0x339e1],r15b        # 0x14004ffc0
   14001c5df:	je     0x14001c5f6
   14001c5e1:	lea    r8,[rip+0x17dc8]        # 0x1400343b0
   14001c5e8:	lea    rdx,[rip+0x17b99]        # 0x140034188
   14001c5ef:	call   0x140003818
   14001c5f4:	jmp    0x14001c5f8
   14001c5f6:	xor    eax,eax
   14001c5f8:	movzx  r9d,ax
   14001c5fc:	or     r9d,0x80070000
   14001c603:	test   eax,eax
   14001c605:	cmovle r9d,eax
   14001c609:	test   r9d,r9d
   14001c60c:	jns    0x14001c635
   14001c60e:	mov    rax,QWORD PTR [rip+0x2ea63]        # 0x14004b078
   14001c615:	cmp    rax,r12
   14001c618:	je     0x14001c66d
   14001c61a:	test   BYTE PTR [rax+0x1c],0x2
   14001c61e:	je     0x14001c63c
   14001c620:	mov    edx,0x1f
   14001c625:	lea    r8,[rip+0x1c054]        # 0x140038680
   14001c62c:	mov    rcx,QWORD PTR [rax+0x10]
   14001c630:	call   0x140001f70
   14001c635:	mov    rax,QWORD PTR [rip+0x2ea3c]        # 0x14004b078
   14001c63c:	cmp    rax,r12
   14001c63f:	je     0x14001c66d
   14001c641:	test   BYTE PTR [rax+0x1c],0x4
   14001c645:	je     0x14001c66d
   14001c647:	mov    edx,0x20
   14001c64c:	mov    eax,DWORD PTR [r14+0x118]
   14001c653:	mov    DWORD PTR [rsp+0x20],eax
   14001c657:	mov    r9,QWORD PTR [rsp+0x30]
   14001c65c:	mov    rcx,QWORD PTR [rip+0x2ea15]        # 0x14004b078
   14001c663:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c667:	call   0x14001ad5c
   14001c66c:	nop
   14001c66d:	mov    ecx,0xc0000000
   14001c672:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001c675:	mov    edx,DWORD PTR [rsi+0x38]
   14001c678:	add    edx,0xc0000000
   14001c67e:	add    edx,ecx
   14001c680:	mov    rbx,QWORD PTR [rbp-0x61]
   14001c684:	test   edx,edx
   14001c686:	jle    0x14001c695
   14001c688:	xor    r8d,r8d
   14001c68b:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c68f:	call   QWORD PTR [rip+0x15af3]        # 0x140032188
   14001c695:	mov    rcx,rbx
   14001c698:	call   QWORD PTR [rip+0x15a5a]        # 0x1400320f8
   14001c69e:	mov    rax,QWORD PTR [rbp-0x79]
   14001c6a2:	mov    rcx,QWORD PTR [rbp-0x49]
   14001c6a6:	mov    QWORD PTR [rcx],rax
   14001c6a9:	jmp    0x14001c6f0
   14001c6ab:	lea    r12,[rip+0x2e9c6]        # 0x14004b078
   14001c6b2:	mov    rcx,QWORD PTR [rip+0x2e9bf]        # 0x14004b078
   14001c6b9:	cmp    rcx,r12
   14001c6bc:	je     0x14001c6e5
   14001c6be:	mov    r15d,0x1
   14001c6c4:	test   BYTE PTR [rcx+0x1c],r15b
   14001c6c8:	je     0x14001c6e5
   14001c6ca:	lea    edx,[r15+0x9]
   14001c6ce:	lea    r9,[rip+0x1be73]        # 0x140038548
   14001c6d5:	lea    r8,[rip+0x17cf4]        # 0x1400343d0
   14001c6dc:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c6e0:	call   0x1400038e0
   14001c6e5:	mov    ecx,0x80070057
   14001c6ea:	call   0x140029d64
   14001c6ef:	int3   
   14001c6f0:	mov    rcx,QWORD PTR [rbp+0x17]
   14001c6f4:	xor    rcx,rsp
   14001c6f7:	call   0x14002dd00
   14001c6fc:	mov    rbx,QWORD PTR [rsp+0x118]
   14001c704:	add    rsp,0xd0
   14001c70b:	pop    r15
   14001c70d:	pop    r14
   14001c70f:	pop    r13
   14001c711:	pop    r12
   14001c713:	pop    rdi
   14001c714:	pop    rsi
   14001c715:	pop    rbp
   14001c716:	ret    
   14001c717:	int3   
   14001c718:	int3   
   14001c719:	int3   
   14001c71a:	int3   
   14001c71b:	int3   
   14001c71c:	int3   
   14001c71d:	int3   
   14001c71e:	int3   
   14001c71f:	int3   
   14001c720:	mov    QWORD PTR [rsp+0x8],rbx
   14001c725:	push   rdi
   14001c726:	sub    rsp,0x20
   14001c72a:	mov    rdi,QWORD PTR [rcx+0x8]
   14001c72e:	test   rdi,rdi
   14001c731:	je     0x14001c773
   14001c733:	mov    eax,DWORD PTR [rdi+0x18]
   14001c736:	add    rdi,0x10
   14001c73a:	cmp    eax,0x1
   14001c73d:	jne    0x14001c748
   14001c73f:	mov    DWORD PTR [rdi+0x8],0x0
   14001c746:	jmp    0x14001c755
   14001c748:	or     eax,0xffffffff
   14001c74b:	lock xadd DWORD PTR [rdi+0x8],eax
   14001c750:	sub    eax,0x1
   14001c753:	jg     0x14001c773
   14001c755:	test   rdi,rdi
   14001c758:	je     0x14001c773
   14001c75a:	mov    rax,QWORD PTR [rdi]
   14001c75d:	mov    rbx,QWORD PTR [rax]
   14001c760:	mov    rcx,rbx
   14001c763:	call   QWORD PTR [rip+0x15f3f]        # 0x1400326a8
   14001c769:	mov    edx,0x1
   14001c76e:	mov    rcx,rdi
   14001c771:	call   rbx
   14001c773:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c778:	add    rsp,0x20
   14001c77c:	pop    rdi
   14001c77d:	ret    
   14001c77e:	int3   
   14001c77f:	int3   
   14001c780:	int3   
   14001c781:	int3   
   14001c782:	int3   
   14001c783:	int3   
   14001c784:	mov    rax,rsp
   14001c787:	mov    QWORD PTR [rax+0x18],rbx
   14001c78b:	push   rbp
   14001c78c:	push   rsi
   14001c78d:	push   rdi
   14001c78e:	push   r12
   14001c790:	push   r13
   14001c792:	push   r14
   14001c794:	push   r15
   14001c796:	sub    rsp,0x40
   14001c79a:	lea    r14,[rcx+0x28]
   14001c79e:	mov    r15d,0x258
   14001c7a4:	mov    rbx,QWORD PTR [r14]
   14001c7a7:	mov    rsi,rcx
   14001c7aa:	xor    ebp,ebp
   14001c7ac:	mov    DWORD PTR [rax+0x8],r15d
   14001c7b0:	mov    rbx,QWORD PTR [rbx]
   14001c7b3:	call   QWORD PTR [rip+0x15c97]        # 0x140032450
   14001c7b9:	mov    rdi,QWORD PTR [rax+0xa0]
   14001c7c0:	mov    rcx,rdi
   14001c7c3:	call   QWORD PTR [rip+0x15edf]        # 0x1400326a8
   14001c7c9:	lea    r8,[rsp+0x80]
   14001c7d1:	mov    edx,r15d
   14001c7d4:	lea    rcx,[rip+0x1bdb5]        # 0x140038590
   14001c7db:	call   rdi
   14001c7dd:	mov    edi,DWORD PTR [rsp+0x80]
   14001c7e4:	cmp    edi,r15d
   14001c7e7:	jne    0x14001c823
   14001c7e9:	mov    eax,DWORD PTR [rsi+0x118]
   14001c7ef:	cmp    eax,0x3e8
   14001c7f4:	jbe    0x14001c7fb
   14001c7f6:	lea    edi,[rbp+0x1]
   14001c7f9:	jmp    0x14001c823
   14001c7fb:	mov    eax,DWORD PTR [rsi+0x118]
   14001c801:	mov    edx,0x64
   14001c806:	cmp    eax,edx
   14001c808:	jbe    0x14001c80f
   14001c80a:	lea    edi,[rdx-0x5a]
   14001c80d:	jmp    0x14001c823
   14001c80f:	mov    eax,DWORD PTR [rsi+0x118]
   14001c815:	mov    ecx,edi
   14001c817:	mov    edi,0xa
   14001c81c:	cmp    eax,edi
   14001c81e:	cmova  ecx,edx
   14001c821:	mov    edi,ecx
   14001c823:	call   0x14002b158
   14001c828:	mov    r12,rax
   14001c82b:	lea    r13,[rip+0x2e846]        # 0x14004b078
   14001c832:	jmp    0x14001c8e7
   14001c837:	mov    rdx,QWORD PTR [rbx+0x18]
   14001c83b:	test   rdx,rdx
   14001c83e:	jne    0x14001c848
   14001c840:	mov    rbx,QWORD PTR [rbx]
   14001c843:	jmp    0x14001c8e7
   14001c848:	mov    eax,edi
   14001c84a:	imul   rcx,rax,0x989680
   14001c851:	add    rcx,QWORD PTR [rdx+0x28]
   14001c855:	cmp    rcx,r12
   14001c858:	ja     0x14001c840
   14001c85a:	mov    r15,QWORD PTR [rdx+0x20]
   14001c85e:	or     eax,0xffffffff
   14001c861:	lock xadd DWORD PTR [rsi+0x68],eax
   14001c866:	cmp    eax,0x1
   14001c869:	jne    0x14001c894
   14001c86b:	prefetchw BYTE PTR [rsi+0x68]
   14001c86f:	mov    eax,DWORD PTR [rsi+0x68]
   14001c872:	mov    ecx,eax
   14001c874:	bts    ecx,0x1e
   14001c878:	lock cmpxchg DWORD PTR [rsi+0x68],ecx
   14001c87d:	jne    0x14001c86f
   14001c87f:	bt     eax,0x1e
   14001c883:	jb     0x14001c894
   14001c885:	mov    rcx,QWORD PTR [rsi+0x70]
   14001c889:	test   rcx,rcx
   14001c88c:	je     0x14001c894
   14001c88e:	call   QWORD PTR [rip+0x158fc]        # 0x140032190
   14001c894:	lock dec DWORD PTR [rsi+0x118]
   14001c89b:	lea    rdx,[rsp+0x88]
   14001c8a3:	mov    r8,rbx
   14001c8a6:	mov    rcx,r14
   14001c8a9:	call   0x14001cd9c
   14001c8ae:	mov    rbx,QWORD PTR [rax]
   14001c8b1:	mov    rax,QWORD PTR [rip+0x2e7c0]        # 0x14004b078
   14001c8b8:	cmp    rax,r13
   14001c8bb:	je     0x14001c8e5
   14001c8bd:	test   BYTE PTR [rax+0x1c],0x4
   14001c8c1:	je     0x14001c8e5
   14001c8c3:	mov    eax,DWORD PTR [rsi+0x118]
   14001c8c9:	mov    edx,0x21
   14001c8ce:	mov    rcx,QWORD PTR [rip+0x2e7a3]        # 0x14004b078
   14001c8d5:	mov    r9,r15
   14001c8d8:	mov    DWORD PTR [rsp+0x20],eax
   14001c8dc:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c8e0:	call   0x14001ad5c
   14001c8e5:	inc    ebp
   14001c8e7:	cmp    rbx,QWORD PTR [r14]
   14001c8ea:	jne    0x14001c837
   14001c8f0:	add    DWORD PTR [rsi+0x11c],ebp
   14001c8f6:	mov    rax,QWORD PTR [rip+0x2e77b]        # 0x14004b078
   14001c8fd:	cmp    rax,r13
   14001c900:	je     0x14001c939
   14001c902:	test   BYTE PTR [rax+0x1c],0x4
   14001c906:	je     0x14001c939
   14001c908:	mov    eax,DWORD PTR [rsi+0x11c]
   14001c90e:	mov    r9d,ebp
   14001c911:	mov    DWORD PTR [rsp+0x30],eax
   14001c915:	mov    eax,DWORD PTR [rsi+0x114]
   14001c91b:	mov    DWORD PTR [rsp+0x28],eax
   14001c91f:	mov    eax,DWORD PTR [rsi+0x118]
   14001c925:	mov    rcx,QWORD PTR [rip+0x2e74c]        # 0x14004b078
   14001c92c:	mov    DWORD PTR [rsp+0x20],eax
   14001c930:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c934:	call   0x14001acb4
   14001c939:	mov    rbx,QWORD PTR [rsp+0x90]
   14001c941:	add    rsp,0x40
   14001c945:	pop    r15
   14001c947:	pop    r14
   14001c949:	pop    r13
   14001c94b:	pop    r12
   14001c94d:	pop    rdi
   14001c94e:	pop    rsi
   14001c94f:	pop    rbp
   14001c950:	ret    
   14001c951:	int3   
   14001c952:	int3   
   14001c953:	int3   
   14001c954:	int3   
   14001c955:	int3   
   14001c956:	int3   
   14001c957:	int3   
   14001c958:	mov    QWORD PTR [rsp+0x18],rbx
   14001c95d:	mov    QWORD PTR [rsp+0x10],rdx
   14001c962:	push   rbp
   14001c963:	push   rsi
   14001c964:	push   rdi
   14001c965:	sub    rsp,0x30
   14001c969:	lea    rbx,[rcx+0x98]
   14001c970:	mov    rdi,rcx
   14001c973:	mov    rcx,rbx
   14001c976:	call   QWORD PTR [rip+0x1578c]        # 0x140032108
   14001c97c:	mov    eax,0x40000000
   14001c981:	xor    esi,esi
   14001c983:	xchg   DWORD PTR [rbx+0x3c],eax
   14001c986:	add    eax,0x40000000
   14001c98b:	mov    DWORD PTR [rbx+0x38],eax
   14001c98e:	test   eax,eax
   14001c990:	jle    0x14001c9a6
   14001c992:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c996:	or     edx,0xffffffff
   14001c999:	call   QWORD PTR [rip+0x157e1]        # 0x140032180
   14001c99f:	inc    esi
   14001c9a1:	cmp    esi,DWORD PTR [rbx+0x38]
   14001c9a4:	jl     0x14001c992
   14001c9a6:	mov    rcx,QWORD PTR [rip+0x2e6cb]        # 0x14004b078
   14001c9ad:	lea    rbp,[rip+0x2e6c4]        # 0x14004b078
   14001c9b4:	cmp    rcx,rbp
   14001c9b7:	je     0x14001c9d9
   14001c9b9:	test   BYTE PTR [rcx+0x1c],0x4
   14001c9bd:	je     0x14001c9d9
   14001c9bf:	mov    r9d,DWORD PTR [rsp+0x58]
   14001c9c4:	lea    r8,[rip+0x1bcb5]        # 0x140038680
   14001c9cb:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c9cf:	mov    edx,0x23
   14001c9d4:	call   0x140001f70
   14001c9d9:	lea    rsi,[rdi+0x28]
   14001c9dd:	mov    rcx,rsi
   14001c9e0:	lea    r8,[rsp+0x58]
   14001c9e5:	lea    rdx,[rsp+0x50]
   14001c9ea:	call   0x14001cff8
   14001c9ef:	mov    rax,QWORD PTR [rsi]
   14001c9f2:	cmp    QWORD PTR [rsp+0x50],rax
   14001c9f7:	jne    0x14001ca32
   14001c9f9:	mov    rcx,QWORD PTR [rip+0x2e678]        # 0x14004b078
   14001ca00:	cmp    rcx,rbp
   14001ca03:	je     0x14001cb0f
   14001ca09:	test   BYTE PTR [rcx+0x1c],0x2
   14001ca0d:	je     0x14001cb0f
   14001ca13:	mov    r9d,DWORD PTR [rsp+0x58]
   14001ca18:	lea    r8,[rip+0x1bc61]        # 0x140038680
   14001ca1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ca23:	mov    edx,0x24
   14001ca28:	call   0x140001f70
   14001ca2d:	jmp    0x14001cb0f
   14001ca32:	test   BYTE PTR [rip+0x33587],0x1        # 0x14004ffc0
   14001ca39:	je     0x14001ca50
   14001ca3b:	lea    r8,[rip+0x1796e]        # 0x1400343b0
   14001ca42:	lea    rdx,[rip+0x17957]        # 0x1400343a0
   14001ca49:	call   0x140003818
   14001ca4e:	jmp    0x14001ca52
   14001ca50:	xor    eax,eax
   14001ca52:	movzx  r9d,ax
   14001ca56:	or     r9d,0x80070000
   14001ca5d:	test   eax,eax
   14001ca5f:	cmovle r9d,eax
   14001ca63:	test   r9d,r9d
   14001ca66:	jns    0x14001ca8f
   14001ca68:	mov    rcx,QWORD PTR [rip+0x2e609]        # 0x14004b078
   14001ca6f:	cmp    rcx,rbp
   14001ca72:	je     0x14001ca8f
   14001ca74:	test   BYTE PTR [rcx+0x1c],0x2
   14001ca78:	je     0x14001ca8f
   14001ca7a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ca7e:	lea    r8,[rip+0x1bbfb]        # 0x140038680
   14001ca85:	mov    edx,0x25
   14001ca8a:	call   0x140001f70
   14001ca8f:	lea    rdx,[rsp+0x58]
   14001ca94:	mov    rcx,rsi
   14001ca97:	call   0x14001ce70
   14001ca9c:	or     eax,0xffffffff
   14001ca9f:	lock xadd DWORD PTR [rdi+0x68],eax
   14001caa4:	cmp    eax,0x1
   14001caa7:	jne    0x14001cad2
   14001caa9:	prefetchw BYTE PTR [rdi+0x68]
   14001caad:	mov    eax,DWORD PTR [rdi+0x68]
   14001cab0:	mov    ecx,eax
   14001cab2:	bts    ecx,0x1e
   14001cab6:	lock cmpxchg DWORD PTR [rdi+0x68],ecx
   14001cabb:	jne    0x14001caad
   14001cabd:	bt     eax,0x1e
   14001cac1:	jb     0x14001cad2
   14001cac3:	mov    rcx,QWORD PTR [rdi+0x70]
   14001cac7:	test   rcx,rcx
   14001caca:	je     0x14001cad2
   14001cacc:	call   QWORD PTR [rip+0x156be]        # 0x140032190
   14001cad2:	lock dec DWORD PTR [rdi+0x118]
   14001cad9:	mov    rax,QWORD PTR [rip+0x2e598]        # 0x14004b078
   14001cae0:	cmp    rax,rbp
   14001cae3:	je     0x14001cb0f
   14001cae5:	test   BYTE PTR [rax+0x1c],0x4
   14001cae9:	je     0x14001cb0f
   14001caeb:	mov    eax,DWORD PTR [rdi+0x118]
   14001caf1:	mov    edx,0x26
   14001caf6:	mov    rcx,QWORD PTR [rip+0x2e57b]        # 0x14004b078
   14001cafd:	mov    r9,QWORD PTR [rsp+0x58]
   14001cb02:	mov    DWORD PTR [rsp+0x20],eax
   14001cb06:	mov    rcx,QWORD PTR [rcx+0x10]
   14001cb0a:	call   0x14001ad5c
   14001cb0f:	mov    ecx,0xc0000000
   14001cb14:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001cb17:	mov    edx,DWORD PTR [rbx+0x38]
   14001cb1a:	add    edx,0xc0000000
   14001cb20:	add    edx,ecx
   14001cb22:	test   edx,edx
   14001cb24:	jle    0x14001cb33
   14001cb26:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cb2a:	xor    r8d,r8d
   14001cb2d:	call   QWORD PTR [rip+0x15655]        # 0x140032188
   14001cb33:	mov    rcx,rbx
   14001cb36:	mov    rbx,QWORD PTR [rsp+0x60]
   14001cb3b:	add    rsp,0x30
   14001cb3f:	pop    rdi
   14001cb40:	pop    rsi
   14001cb41:	pop    rbp
   14001cb42:	rex.W jmp QWORD PTR [rip+0x155af]        # 0x1400320f8
   14001cb49:	int3   
   14001cb4a:	int3   
   14001cb4b:	int3   
   14001cb4c:	int3   
   14001cb4d:	int3   
   14001cb4e:	int3   
   14001cb4f:	int3   
   14001cb50:	mov    rax,rsp
   14001cb53:	mov    QWORD PTR [rax+0x8],rcx
   14001cb57:	push   rbx
   14001cb58:	push   rsi
   14001cb59:	push   rdi
   14001cb5a:	push   r12
   14001cb5c:	push   r13
   14001cb5e:	push   r14
   14001cb60:	push   r15
   14001cb62:	sub    rsp,0xa0
   14001cb69:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14001cb71:	mov    r14,rcx
   14001cb74:	xor    r13d,r13d
   14001cb77:	lea    rbx,[rcx+0x98]
   14001cb7e:	mov    QWORD PTR [rsp+0x50],rbx
   14001cb83:	mov    rcx,rbx
   14001cb86:	call   QWORD PTR [rip+0x1557c]        # 0x140032108
   14001cb8c:	mov    eax,0x40000000
   14001cb91:	xchg   DWORD PTR [rbx+0x3c],eax
   14001cb94:	add    eax,0x40000000
   14001cb99:	mov    rdi,QWORD PTR [rsp+0x50]
   14001cb9e:	mov    DWORD PTR [rdi+0x38],eax
   14001cba1:	xor    ebx,ebx
   14001cba3:	test   eax,eax
   14001cba5:	jle    0x14001cbbb
   14001cba7:	or     edx,0xffffffff
   14001cbaa:	mov    rcx,QWORD PTR [rdi+0x28]
   14001cbae:	call   QWORD PTR [rip+0x155cc]        # 0x140032180
   14001cbb4:	inc    ebx
   14001cbb6:	cmp    ebx,DWORD PTR [rdi+0x38]
   14001cbb9:	jl     0x14001cba7
   14001cbbb:	mov    rbx,QWORD PTR [r14+0x28]
   14001cbbf:	mov    rbx,QWORD PTR [rbx]
   14001cbc2:	mov    QWORD PTR [rsp+0x60],rbx
   14001cbc7:	cmp    rbx,QWORD PTR [r14+0x28]
   14001cbcb:	je     0x14001cd15
   14001cbd1:	mov    rax,QWORD PTR [rbx+0x18]
   14001cbd5:	mov    QWORD PTR [rsp+0xe8],rax
   14001cbdd:	and    QWORD PTR [rsp+0x58],0x0
   14001cbe3:	lea    rsi,[rax+0x8]
   14001cbe7:	lea    rdx,[rsp+0x58]
   14001cbec:	mov    rcx,rsi
   14001cbef:	call   0x14001f000
   14001cbf4:	and    QWORD PTR [rsp+0x78],0x0
   14001cbfa:	lea    rdx,[rsp+0x78]
   14001cbff:	mov    rcx,rsi
   14001cc02:	call   0x14001f000
   14001cc07:	cmp    DWORD PTR [rsi+0x72],0x0
   14001cc0b:	je     0x14001cc14
   14001cc0d:	movzx  r15d,WORD PTR [rsi+0x68]
   14001cc12:	jmp    0x14001cc19
   14001cc14:	movzx  r15d,WORD PTR [rsi+0x6a]
   14001cc19:	mov    WORD PTR [rsp+0xf8],r15w
   14001cc22:	cmp    DWORD PTR [rsi+0x72],0x0
   14001cc26:	je     0x14001cc2f
   14001cc28:	movzx  r12d,WORD PTR [rsi+0x6a]
   14001cc2d:	jmp    0x14001cc34
   14001cc2f:	movzx  r12d,WORD PTR [rsi+0x68]
   14001cc34:	mov    WORD PTR [rsp+0x70],r12w
   14001cc3a:	mov    rax,QWORD PTR [rsp+0xe8]
   14001cc42:	mov    al,BYTE PTR [rax+0x76]
   14001cc45:	mov    BYTE PTR [rsp+0xe8],al
   14001cc4c:	mov    BYTE PTR [rsp+0xf0],al
   14001cc53:	and    QWORD PTR [rsp+0x68],0x0
   14001cc59:	xor    r8d,r8d
   14001cc5c:	lea    rdx,[rsp+0x68]
   14001cc61:	mov    rcx,rsi
   14001cc64:	call   0x14001f3d0
   14001cc69:	movzx  esi,BYTE PTR [rsp+0xe8]
   14001cc71:	movzx  r12d,r12w
   14001cc75:	movzx  r15d,r15w
   14001cc79:	mov    rax,QWORD PTR [rsp+0x68]
   14001cc7e:	mov    QWORD PTR [rsp+0x30],rax
   14001cc83:	mov    DWORD PTR [rsp+0x28],esi
   14001cc87:	mov    DWORD PTR [rsp+0x20],r12d
   14001cc8c:	mov    r9,QWORD PTR [rsp+0x78]
   14001cc91:	mov    r8d,r15d
   14001cc94:	mov    rdx,QWORD PTR [rsp+0x58]
   14001cc99:	lea    rcx,[rip+0x1b940]        # 0x1400385e0
   14001cca0:	call   QWORD PTR [rip+0x1568a]        # 0x140032330
   14001cca6:	lea    rax,[rip+0x2e3cb]        # 0x14004b078
   14001ccad:	mov    rcx,QWORD PTR [rip+0x2e3c4]        # 0x14004b078
   14001ccb4:	cmp    rcx,rax
   14001ccb7:	je     0x14001ccf0
   14001ccb9:	test   BYTE PTR [rcx+0x1c],0x4
   14001ccbd:	je     0x14001ccf0
   14001ccbf:	mov    rax,QWORD PTR [rsp+0x68]
   14001ccc4:	mov    QWORD PTR [rsp+0x40],rax
   14001ccc9:	mov    DWORD PTR [rsp+0x38],esi
   14001cccd:	mov    DWORD PTR [rsp+0x30],r12d
   14001ccd2:	mov    rax,QWORD PTR [rsp+0x78]
   14001ccd7:	mov    QWORD PTR [rsp+0x28],rax
   14001ccdc:	mov    DWORD PTR [rsp+0x20],r15d
   14001cce1:	mov    r9,QWORD PTR [rsp+0x58]
   14001cce6:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ccea:	call   0x14001ab24
   14001ccef:	nop
   14001ccf0:	jmp    0x14001cd0c
   14001ccf2:	mov    rbx,QWORD PTR [rsp+0x60]
   14001ccf7:	mov    rdi,QWORD PTR [rsp+0x50]
   14001ccfc:	mov    r13d,DWORD PTR [rsp+0xe8]
   14001cd04:	mov    r14,QWORD PTR [rsp+0xe0]
   14001cd0c:	test   r13d,r13d
   14001cd0f:	jns    0x14001cbbf
   14001cd15:	mov    ecx,0xc0000000
   14001cd1a:	xchg   DWORD PTR [rdi+0x3c],ecx
   14001cd1d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cd22:	mov    edx,DWORD PTR [rbx+0x38]
   14001cd25:	add    edx,0xc0000000
   14001cd2b:	add    edx,ecx
   14001cd2d:	test   edx,edx
   14001cd2f:	jle    0x14001cd3e
   14001cd31:	xor    r8d,r8d
   14001cd34:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cd38:	call   QWORD PTR [rip+0x1544a]        # 0x140032188
   14001cd3e:	mov    rcx,rbx
   14001cd41:	add    rsp,0xa0
   14001cd48:	pop    r15
   14001cd4a:	pop    r14
   14001cd4c:	pop    r13
   14001cd4e:	pop    r12
   14001cd50:	pop    rdi
   14001cd51:	pop    rsi
   14001cd52:	pop    rbx
   14001cd53:	rex.W jmp QWORD PTR [rip+0x1539e]        # 0x1400320f8
   14001cd5a:	int3   
   14001cd5b:	int3   
   14001cd5c:	int3   
   14001cd5d:	int3   
   14001cd5e:	int3   
   14001cd5f:	int3   
   14001cd60:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd65:	push   rdi
   14001cd66:	sub    rsp,0x20
   14001cd6a:	mov    rdi,QWORD PTR [rcx]
   14001cd6d:	test   rdi,rdi
   14001cd70:	je     0x14001cd8b
   14001cd72:	mov    rax,QWORD PTR [rdi]
   14001cd75:	mov    rbx,QWORD PTR [rax]
   14001cd78:	mov    rcx,rbx
   14001cd7b:	call   QWORD PTR [rip+0x15927]        # 0x1400326a8
   14001cd81:	mov    edx,0x1
   14001cd86:	mov    rcx,rdi
   14001cd89:	call   rbx
   14001cd8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cd90:	add    rsp,0x20
   14001cd94:	pop    rdi
   14001cd95:	ret    
   14001cd96:	int3   
   14001cd97:	int3   
   14001cd98:	int3   
   14001cd99:	int3   
   14001cd9a:	int3   
   14001cd9b:	int3   
   14001cd9c:	mov    QWORD PTR [rsp+0x10],rbx
   14001cda1:	mov    QWORD PTR [rsp+0x18],r8
   14001cda6:	push   rdi
   14001cda7:	sub    rsp,0x20
   14001cdab:	mov    rbx,rcx
   14001cdae:	mov    rdi,rdx
   14001cdb1:	mov    ecx,DWORD PTR [r8+0x10]
   14001cdb5:	mov    edx,0x1f31d
   14001cdba:	xor    ecx,0xdeadbeef
   14001cdc0:	btr    ecx,0x1f
   14001cdc4:	call   QWORD PTR [rip+0x157ee]        # 0x1400325b8
   14001cdca:	mov    QWORD PTR [rsp+0x30],rax
   14001cdcf:	shr    rax,0x20
   14001cdd3:	imul   edx,eax,0x41a7
   14001cdd9:	imul   eax,DWORD PTR [rsp+0x30],0xb14
   14001cde1:	sub    edx,eax
   14001cde3:	jns    0x14001cdeb
   14001cde5:	add    edx,0x7fffffff
   14001cdeb:	mov    rcx,QWORD PTR [rbx+0x28]
   14001cdef:	movsxd rdx,edx
   14001cdf2:	and    rdx,rcx
   14001cdf5:	cmp    QWORD PTR [rbx+0x30],rdx
   14001cdf9:	ja     0x14001ce08
   14001cdfb:	shr    rcx,1
   14001cdfe:	or     rax,0xffffffffffffffff
   14001ce02:	sub    rax,rcx
   14001ce05:	add    rdx,rax
   14001ce08:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ce0c:	add    rdx,rdx
   14001ce0f:	mov    r8,QWORD PTR [rsp+0x40]
   14001ce14:	cmp    QWORD PTR [rcx+rdx*8+0x8],r8
   14001ce19:	jne    0x14001ce3c
   14001ce1b:	cmp    QWORD PTR [rcx+rdx*8],r8
   14001ce1f:	jne    0x14001ce36
   14001ce21:	mov    rax,QWORD PTR [rbx]
   14001ce24:	mov    QWORD PTR [rcx+rdx*8],rax
   14001ce28:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ce2c:	mov    rax,QWORD PTR [rbx]
   14001ce2f:	mov    QWORD PTR [rcx+rdx*8+0x8],rax
   14001ce34:	jmp    0x14001ce49
   14001ce36:	mov    rax,QWORD PTR [r8+0x8]
   14001ce3a:	jmp    0x14001ce2f
   14001ce3c:	cmp    QWORD PTR [rcx+rdx*8],r8
   14001ce40:	jne    0x14001ce4e
   14001ce42:	mov    rax,QWORD PTR [r8]
   14001ce45:	mov    QWORD PTR [rcx+rdx*8],rax
   14001ce49:	mov    r8,QWORD PTR [rsp+0x40]
   14001ce4e:	mov    rdx,rdi
   14001ce51:	mov    rcx,rbx
   14001ce54:	call   0x14001d268
   14001ce59:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce5e:	mov    rax,rdi
   14001ce61:	add    rsp,0x20
   14001ce65:	pop    rdi
   14001ce66:	ret    
   14001ce67:	int3   
   14001ce68:	int3   
   14001ce69:	int3   
   14001ce6a:	int3   
   14001ce6b:	int3   
   14001ce6c:	int3   
   14001ce6d:	int3   
   14001ce6e:	int3   
   14001ce6f:	int3   
   14001ce70:	mov    QWORD PTR [rsp+0x18],rbx
   14001ce75:	push   rbp
   14001ce76:	push   rsi
   14001ce77:	push   rdi
   14001ce78:	push   r14
   14001ce7a:	push   r15
   14001ce7c:	mov    rbp,rsp
   14001ce7f:	sub    rsp,0x40
   14001ce83:	mov    r14,rcx
   14001ce86:	mov    rsi,rdx
   14001ce89:	mov    ecx,DWORD PTR [rdx]
   14001ce8b:	mov    ebx,0x7fffffff
   14001ce90:	xor    ecx,0xdeadbeef
   14001ce96:	mov    edx,0x1f31d
   14001ce9b:	and    ecx,ebx
   14001ce9d:	call   QWORD PTR [rip+0x15715]        # 0x1400325b8
   14001cea3:	mov    QWORD PTR [rbp+0x30],rax
   14001cea7:	shr    rax,0x20
   14001ceab:	imul   ecx,eax,0x41a7
   14001ceb1:	imul   eax,DWORD PTR [rbp+0x30],0xb14
   14001ceb8:	sub    ecx,eax
   14001ceba:	jns    0x14001cebe
   14001cebc:	add    ecx,ebx
   14001cebe:	mov    rdx,QWORD PTR [r14+0x28]
   14001cec2:	movsxd rcx,ecx
   14001cec5:	and    rcx,rdx
   14001cec8:	cmp    QWORD PTR [r14+0x30],rcx
   14001cecc:	ja     0x14001cedb
   14001cece:	shr    rdx,1
   14001ced1:	or     rax,0xffffffffffffffff
   14001ced5:	sub    rax,rdx
   14001ced8:	add    rcx,rax
   14001cedb:	mov    rbx,rcx
   14001cede:	lea    r15,[r14+0x10]
   14001cee2:	mov    rdx,QWORD PTR [r15]
   14001cee5:	lea    r8,[rcx+rcx*1]
   14001cee9:	mov    rcx,QWORD PTR [r14]
   14001ceec:	add    rbx,rbx
   14001ceef:	mov    rbx,QWORD PTR [rdx+rbx*8]
   14001cef3:	cmp    QWORD PTR [rdx+r8*8],rcx
   14001cef7:	jne    0x14001cefe
   14001cef9:	mov    rax,rcx
   14001cefc:	jmp    0x14001cf06
   14001cefe:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001cf03:	mov    rax,QWORD PTR [rax]
   14001cf06:	cmp    rbx,rax
   14001cf09:	je     0x14001cf47
   14001cf0b:	mov    rax,QWORD PTR [rsi]
   14001cf0e:	cmp    QWORD PTR [rbx+0x10],rax
   14001cf12:	jae    0x14001cf19
   14001cf14:	mov    rbx,QWORD PTR [rbx]
   14001cf17:	jmp    0x14001cef3
   14001cf19:	mov    rdi,rbx
   14001cf1c:	mov    r9,rax
   14001cf1f:	cmp    QWORD PTR [rdx+r8*8],rcx
   14001cf23:	jne    0x14001cf2a
   14001cf25:	mov    rax,rcx
   14001cf28:	jmp    0x14001cf32
   14001cf2a:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001cf2f:	mov    rax,QWORD PTR [rax]
   14001cf32:	cmp    rbx,rax
   14001cf35:	je     0x14001cf42
   14001cf37:	cmp    r9,QWORD PTR [rbx+0x10]
   14001cf3b:	jb     0x14001cf42
   14001cf3d:	mov    rbx,QWORD PTR [rbx]
   14001cf40:	jmp    0x14001cf1f
   14001cf42:	cmp    rdi,rbx
   14001cf45:	jne    0x14001cf60
   14001cf47:	mov    QWORD PTR [rbp-0x10],rcx
   14001cf4b:	mov    QWORD PTR [rbp-0x8],rcx
   14001cf4f:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   14001cf53:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001cf58:	mov    rbx,QWORD PTR [rbp-0x8]
   14001cf5c:	mov    rdi,QWORD PTR [rbp-0x10]
   14001cf60:	xor    esi,esi
   14001cf62:	mov    rax,rdi
   14001cf65:	cmp    rdi,rbx
   14001cf68:	je     0x14001cf75
   14001cf6a:	mov    rax,QWORD PTR [rax]
   14001cf6d:	inc    rsi
   14001cf70:	cmp    rax,rbx
   14001cf73:	jne    0x14001cf6a
   14001cf75:	cmp    rdi,QWORD PTR [rcx]
   14001cf78:	jne    0x14001cfd4
   14001cf7a:	cmp    rbx,rcx
   14001cf7d:	jne    0x14001cfd4
   14001cf7f:	mov    rcx,r14
   14001cf82:	call   0x14001d324
   14001cf87:	mov    rax,QWORD PTR [r14]
   14001cf8a:	lea    rdx,[rbp+0x38]
   14001cf8e:	mov    r8,QWORD PTR [r15]
   14001cf91:	mov    r9d,0x10
   14001cf97:	mov    QWORD PTR [rbp+0x30],rax
   14001cf9b:	mov    rcx,r15
   14001cf9e:	lea    rax,[rbp+0x30]
   14001cfa2:	mov    QWORD PTR [r15+0x8],r8
   14001cfa6:	mov    QWORD PTR [rsp+0x20],rax
   14001cfab:	call   0x14000dfb4
   14001cfb0:	mov    QWORD PTR [r14+0x28],0x7
   14001cfb8:	mov    QWORD PTR [r14+0x30],0x8
   14001cfc0:	jmp    0x14001cfd9
   14001cfc2:	mov    r8,rdi
   14001cfc5:	lea    rdx,[rbp+0x30]
   14001cfc9:	mov    rdi,QWORD PTR [rdi]
   14001cfcc:	mov    rcx,r14
   14001cfcf:	call   0x14001cd9c
   14001cfd4:	cmp    rdi,rbx
   14001cfd7:	jne    0x14001cfc2
   14001cfd9:	mov    rax,rsi
   14001cfdc:	mov    rbx,QWORD PTR [rsp+0x80]
   14001cfe4:	add    rsp,0x40
   14001cfe8:	pop    r15
   14001cfea:	pop    r14
   14001cfec:	pop    rdi
   14001cfed:	pop    rsi
   14001cfee:	pop    rbp
   14001cfef:	ret    
   14001cff0:	int3   
   14001cff1:	int3   
   14001cff2:	int3   
   14001cff3:	int3   
   14001cff4:	int3   
   14001cff5:	int3   
   14001cff6:	int3   
   14001cff7:	int3   
   14001cff8:	mov    QWORD PTR [rsp+0x10],rbx
   14001cffd:	mov    QWORD PTR [rsp+0x18],rsi
   14001d002:	push   rdi
   14001d003:	sub    rsp,0x20
   14001d007:	mov    rbx,rcx
   14001d00a:	mov    rdi,rdx
   14001d00d:	mov    ecx,DWORD PTR [r8]
   14001d010:	mov    edx,0x1f31d
   14001d015:	xor    ecx,0xdeadbeef
   14001d01b:	mov    rsi,r8
   14001d01e:	btr    ecx,0x1f
   14001d022:	call   QWORD PTR [rip+0x15590]        # 0x1400325b8
   14001d028:	mov    QWORD PTR [rsp+0x30],rax
   14001d02d:	shr    rax,0x20
   14001d031:	imul   edx,eax,0x41a7
   14001d037:	imul   eax,DWORD PTR [rsp+0x30],0xb14
   14001d03f:	sub    edx,eax
   14001d041:	jns    0x14001d049
   14001d043:	add    edx,0x7fffffff
   14001d049:	mov    rcx,QWORD PTR [rbx+0x28]
   14001d04d:	movsxd rdx,edx
   14001d050:	and    rdx,rcx
   14001d053:	cmp    QWORD PTR [rbx+0x30],rdx
   14001d057:	ja     0x14001d066
   14001d059:	shr    rcx,1
   14001d05c:	or     rax,0xffffffffffffffff
   14001d060:	sub    rax,rcx
   14001d063:	add    rdx,rax
   14001d066:	mov    r8,QWORD PTR [rbx+0x10]
   14001d06a:	lea    r9,[rdx+rdx*1]
   14001d06e:	mov    rax,rdx
   14001d071:	mov    rdx,QWORD PTR [rbx]
   14001d074:	add    rax,rax
   14001d077:	mov    rcx,QWORD PTR [r8+rax*8]
   14001d07b:	cmp    QWORD PTR [r8+r9*8],rdx
   14001d07f:	jne    0x14001d086
   14001d081:	mov    rax,rdx
   14001d084:	jmp    0x14001d08e
   14001d086:	mov    rax,QWORD PTR [r8+r9*8+0x8]
   14001d08b:	mov    rax,QWORD PTR [rax]
   14001d08e:	cmp    rcx,rax
   14001d091:	je     0x14001d0b1
   14001d093:	mov    rax,QWORD PTR [rsi]
   14001d096:	cmp    QWORD PTR [rcx+0x10],rax
   14001d09a:	jae    0x14001d0a1
   14001d09c:	mov    rcx,QWORD PTR [rcx]
   14001d09f:	jmp    0x14001d07b
   14001d0a1:	mov    rax,QWORD PTR [rcx+0x10]
   14001d0a5:	cmp    QWORD PTR [rsi],rax
   14001d0a8:	cmovb  rcx,rdx
   14001d0ac:	mov    QWORD PTR [rdi],rcx
   14001d0af:	jmp    0x14001d0b4
   14001d0b1:	mov    QWORD PTR [rdi],rdx
   14001d0b4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d0b9:	mov    rax,rdi
   14001d0bc:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d0c1:	add    rsp,0x20
   14001d0c5:	pop    rdi
   14001d0c6:	ret    
   14001d0c7:	int3   
   14001d0c8:	int3   
   14001d0c9:	int3   
   14001d0ca:	int3   
   14001d0cb:	int3   
   14001d0cc:	int3   
   14001d0cd:	int3   
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d0d5:	push   rdi
   14001d0d6:	sub    rsp,0x20
   14001d0da:	mov    rdi,QWORD PTR [rcx]
   14001d0dd:	test   rdi,rdi
   14001d0e0:	je     0x14001d122
   14001d0e2:	mov    eax,DWORD PTR [rdi+0x18]
   14001d0e5:	add    rdi,0x10
   14001d0e9:	cmp    eax,0x1
   14001d0ec:	jne    0x14001d0f7
   14001d0ee:	mov    DWORD PTR [rdi+0x8],0x0
   14001d0f5:	jmp    0x14001d104
   14001d0f7:	or     eax,0xffffffff
   14001d0fa:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d0ff:	sub    eax,0x1
   14001d102:	jg     0x14001d122
   14001d104:	test   rdi,rdi
   14001d107:	je     0x14001d122
   14001d109:	mov    rax,QWORD PTR [rdi]
   14001d10c:	mov    rbx,QWORD PTR [rax]
   14001d10f:	mov    rcx,rbx
   14001d112:	call   QWORD PTR [rip+0x15590]        # 0x1400326a8
   14001d118:	mov    edx,0x1
   14001d11d:	mov    rcx,rdi
   14001d120:	call   rbx
   14001d122:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d127:	add    rsp,0x20
   14001d12b:	pop    rdi
   14001d12c:	ret    
   14001d12d:	int3   
   14001d12e:	int3   
   14001d12f:	int3   
   14001d130:	int3   
   14001d131:	int3   
   14001d132:	int3   
   14001d133:	int3   
   14001d134:	mov    QWORD PTR [rsp+0x8],rbx
   14001d139:	mov    QWORD PTR [rsp+0x10],rsi
   14001d13e:	push   rdi
   14001d13f:	sub    rsp,0x20
   14001d143:	mov    rdi,QWORD PTR [rcx]
   14001d146:	mov    rsi,rcx
   14001d149:	and    QWORD PTR [rcx],0x0
   14001d14d:	test   rdi,rdi
   14001d150:	je     0x14001d192
   14001d152:	mov    eax,DWORD PTR [rdi+0x18]
   14001d155:	add    rdi,0x10
   14001d159:	cmp    eax,0x1
   14001d15c:	jne    0x14001d167
   14001d15e:	mov    DWORD PTR [rdi+0x8],0x0
   14001d165:	jmp    0x14001d174
   14001d167:	or     eax,0xffffffff
   14001d16a:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d16f:	sub    eax,0x1
   14001d172:	jg     0x14001d192
   14001d174:	test   rdi,rdi
   14001d177:	je     0x14001d192
   14001d179:	mov    rax,QWORD PTR [rdi]
   14001d17c:	mov    rbx,QWORD PTR [rax]
   14001d17f:	mov    rcx,rbx
   14001d182:	call   QWORD PTR [rip+0x15520]        # 0x1400326a8
   14001d188:	mov    edx,0x1
   14001d18d:	mov    rcx,rdi
   14001d190:	call   rbx
   14001d192:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d197:	mov    rax,rsi
   14001d19a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d19f:	add    rsp,0x20
   14001d1a3:	pop    rdi
   14001d1a4:	ret    
   14001d1a5:	int3   
   14001d1a6:	int3   
   14001d1a7:	int3   
   14001d1a8:	int3   
   14001d1a9:	int3   
   14001d1aa:	int3   
   14001d1ab:	int3   
   14001d1ac:	mov    QWORD PTR [rsp+0x8],rbx
   14001d1b1:	mov    QWORD PTR [rsp+0x10],rsi
   14001d1b6:	push   rdi
   14001d1b7:	sub    rsp,0x20
   14001d1bb:	mov    r8,QWORD PTR [rdx]
   14001d1be:	mov    rsi,rcx
   14001d1c1:	test   r8,r8
   14001d1c4:	je     0x14001d1dd
   14001d1c6:	mov    eax,DWORD PTR [r8+0x18]
   14001d1ca:	test   eax,eax
   14001d1cc:	jne    0x14001d1d8
   14001d1ce:	mov    DWORD PTR [r8+0x18],0x1
   14001d1d6:	jmp    0x14001d1dd
   14001d1d8:	lock inc DWORD PTR [r8+0x18]
   14001d1dd:	mov    rdi,QWORD PTR [rcx]
   14001d1e0:	mov    QWORD PTR [rcx],r8
   14001d1e3:	test   rdi,rdi
   14001d1e6:	je     0x14001d228
   14001d1e8:	mov    eax,DWORD PTR [rdi+0x18]
   14001d1eb:	add    rdi,0x10
   14001d1ef:	cmp    eax,0x1
   14001d1f2:	jne    0x14001d1fd
   14001d1f4:	mov    DWORD PTR [rdi+0x8],0x0
   14001d1fb:	jmp    0x14001d20a
   14001d1fd:	or     eax,0xffffffff
   14001d200:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d205:	sub    eax,0x1
   14001d208:	jg     0x14001d228
   14001d20a:	test   rdi,rdi
   14001d20d:	je     0x14001d228
   14001d20f:	mov    rax,QWORD PTR [rdi]
   14001d212:	mov    rbx,QWORD PTR [rax]
   14001d215:	mov    rcx,rbx
   14001d218:	call   QWORD PTR [rip+0x1548a]        # 0x1400326a8
   14001d21e:	mov    edx,0x1
   14001d223:	mov    rcx,rdi
   14001d226:	call   rbx
   14001d228:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d22d:	mov    rax,rsi
   14001d230:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d235:	add    rsp,0x20
   14001d239:	pop    rdi
   14001d23a:	ret    
   14001d23b:	int3   
   14001d23c:	int3   
   14001d23d:	int3   
   14001d23e:	int3   
   14001d23f:	int3   
   14001d240:	int3   
   14001d241:	int3   
   14001d242:	int3   
   14001d243:	int3   
   14001d244:	rex push rbx
   14001d246:	sub    rsp,0x20
   14001d24a:	mov    rbx,rcx
   14001d24d:	call   0x14001d324
   14001d252:	mov    rcx,QWORD PTR [rbx]
   14001d255:	add    rsp,0x20
   14001d259:	pop    rbx
   14001d25a:	rex.W jmp QWORD PTR [rip+0x15367]        # 0x1400325c8
   14001d261:	int3   
   14001d262:	int3   
   14001d263:	int3   
   14001d264:	int3   
   14001d265:	int3   
   14001d266:	int3   
   14001d267:	int3   
   14001d268:	mov    QWORD PTR [rsp+0x8],rbx
   14001d26d:	mov    QWORD PTR [rsp+0x10],rbp
   14001d272:	mov    QWORD PTR [rsp+0x18],r8
   14001d277:	push   rsi
   14001d278:	push   rdi
   14001d279:	push   r14
   14001d27b:	sub    rsp,0x20
   14001d27f:	mov    rbx,r8
   14001d282:	mov    rax,QWORD PTR [r8]
   14001d285:	mov    r14,rdx
   14001d288:	mov    QWORD PTR [rsp+0x50],rax
   14001d28d:	mov    rbp,rcx
   14001d290:	cmp    r8,QWORD PTR [rcx]
   14001d293:	je     0x14001d305
   14001d295:	mov    r8,QWORD PTR [r8+0x8]
   14001d299:	mov    rax,QWORD PTR [rbx]
   14001d29c:	mov    QWORD PTR [r8],rax
   14001d29f:	mov    r8,QWORD PTR [rbx]
   14001d2a2:	mov    rax,QWORD PTR [rbx+0x8]
   14001d2a6:	mov    QWORD PTR [r8+0x8],rax
   14001d2aa:	mov    rsi,QWORD PTR [rbx+0x18]
   14001d2ae:	test   rsi,rsi
   14001d2b1:	je     0x14001d2f3
   14001d2b3:	mov    eax,DWORD PTR [rsi+0x18]
   14001d2b6:	add    rsi,0x10
   14001d2ba:	cmp    eax,0x1
   14001d2bd:	jne    0x14001d2c8
   14001d2bf:	mov    DWORD PTR [rsi+0x8],0x0
   14001d2c6:	jmp    0x14001d2d5
   14001d2c8:	or     eax,0xffffffff
   14001d2cb:	lock xadd DWORD PTR [rsi+0x8],eax
   14001d2d0:	sub    eax,0x1
   14001d2d3:	jg     0x14001d2f3
   14001d2d5:	test   rsi,rsi
   14001d2d8:	je     0x14001d2f3
   14001d2da:	mov    rax,QWORD PTR [rsi]
   14001d2dd:	mov    rdi,QWORD PTR [rax]
   14001d2e0:	mov    rcx,rdi
   14001d2e3:	call   QWORD PTR [rip+0x153bf]        # 0x1400326a8
   14001d2e9:	mov    edx,0x1
   14001d2ee:	mov    rcx,rsi
   14001d2f1:	call   rdi
   14001d2f3:	mov    rcx,rbx
   14001d2f6:	call   QWORD PTR [rip+0x152cc]        # 0x1400325c8
   14001d2fc:	dec    QWORD PTR [rbp+0x8]
   14001d300:	mov    rax,QWORD PTR [rsp+0x50]
   14001d305:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d30a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d30f:	mov    QWORD PTR [r14],rax
   14001d312:	mov    rax,r14
   14001d315:	add    rsp,0x20
   14001d319:	pop    r14
   14001d31b:	pop    rdi
   14001d31c:	pop    rsi
   14001d31d:	ret    
   14001d31e:	int3   
   14001d31f:	int3   
   14001d320:	int3   
   14001d321:	int3   
   14001d322:	int3   
   14001d323:	int3   
   14001d324:	mov    rax,rsp
   14001d327:	mov    QWORD PTR [rax+0x8],rbx
   14001d32b:	mov    QWORD PTR [rax+0x10],rbp
   14001d32f:	mov    QWORD PTR [rax+0x18],rsi
   14001d333:	mov    QWORD PTR [rax+0x20],rdi
   14001d337:	push   r14
   14001d339:	sub    rsp,0x20
   14001d33d:	mov    rax,QWORD PTR [rcx]
   14001d340:	mov    rdi,rcx
   14001d343:	mov    r14,QWORD PTR [rax]
   14001d346:	mov    QWORD PTR [rax],rax
   14001d349:	mov    rax,QWORD PTR [rcx]
   14001d34c:	mov    QWORD PTR [rax+0x8],rax
   14001d350:	and    QWORD PTR [rcx+0x8],0x0
   14001d355:	cmp    r14,QWORD PTR [rcx]
   14001d358:	je     0x14001d3b7
   14001d35a:	mov    rsi,QWORD PTR [r14+0x18]
   14001d35e:	mov    rbp,QWORD PTR [r14]
   14001d361:	test   rsi,rsi
   14001d364:	je     0x14001d3a6
   14001d366:	mov    eax,DWORD PTR [rsi+0x18]
   14001d369:	add    rsi,0x10
   14001d36d:	cmp    eax,0x1
   14001d370:	jne    0x14001d37b
   14001d372:	mov    DWORD PTR [rsi+0x8],0x0
   14001d379:	jmp    0x14001d388
   14001d37b:	or     eax,0xffffffff
   14001d37e:	lock xadd DWORD PTR [rsi+0x8],eax
   14001d383:	sub    eax,0x1
   14001d386:	jg     0x14001d3a6
   14001d388:	test   rsi,rsi
   14001d38b:	je     0x14001d3a6
   14001d38d:	mov    rax,QWORD PTR [rsi]
   14001d390:	mov    rbx,QWORD PTR [rax]
   14001d393:	mov    rcx,rbx
   14001d396:	call   QWORD PTR [rip+0x1530c]        # 0x1400326a8
   14001d39c:	mov    edx,0x1
   14001d3a1:	mov    rcx,rsi
   14001d3a4:	call   rbx
   14001d3a6:	mov    rcx,r14
   14001d3a9:	call   QWORD PTR [rip+0x15219]        # 0x1400325c8
   14001d3af:	mov    r14,rbp
   14001d3b2:	cmp    rbp,QWORD PTR [rdi]
   14001d3b5:	jne    0x14001d35a
   14001d3b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d3bc:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d3c1:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d3c6:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d3cb:	add    rsp,0x20
   14001d3cf:	pop    r14
   14001d3d1:	ret    
   14001d3d2:	int3   
   14001d3d3:	int3   
   14001d3d4:	int3   
   14001d3d5:	int3   
   14001d3d6:	int3   
   14001d3d7:	int3   
   14001d3d8:	xorps  xmm1,xmm1
   14001d3db:	test   edx,edx
   14001d3dd:	je     0x14001d3fc
   14001d3df:	mov    eax,ecx
   14001d3e1:	xorps  xmm0,xmm0
   14001d3e4:	cvtsi2sd xmm1,rax
   14001d3e9:	mov    eax,edx
   14001d3eb:	cvtsi2sd xmm0,rax
   14001d3f0:	mulsd  xmm1,QWORD PTR [rip+0x20090]        # 0x14003d488
   14001d3f8:	divsd  xmm1,xmm0
   14001d3fc:	addsd  xmm1,QWORD PTR [rip+0x2007c]        # 0x14003d480
   14001d404:	cvttsd2si rax,xmm1
   14001d409:	ret    
   14001d40a:	int3   
   14001d40b:	int3   
   14001d40c:	int3   
   14001d40d:	int3   
   14001d40e:	int3   
   14001d40f:	int3   
   14001d410:	mov    rax,rsp
   14001d413:	mov    QWORD PTR [rax+0x10],rbx
   14001d417:	mov    QWORD PTR [rax+0x18],rbp
   14001d41b:	mov    QWORD PTR [rax+0x20],rsi
   14001d41f:	push   rdi
   14001d420:	push   r12
   14001d422:	push   r13
   14001d424:	push   r14
   14001d426:	push   r15
   14001d428:	sub    rsp,0x20
   14001d42c:	and    QWORD PTR [rcx],0x0
   14001d430:	mov    r15,rcx
   14001d433:	and    QWORD PTR [rax+0x8],0x0
   14001d438:	lea    rcx,[rax+0x8]
   14001d43c:	mov    rbx,r9
   14001d43f:	mov    rdi,r8
   14001d442:	mov    r14,rdx
   14001d445:	call   0x14001d588
   14001d44a:	mov    esi,eax
   14001d44c:	test   eax,eax
   14001d44e:	js     0x14001d517
   14001d454:	mov    rax,QWORD PTR [rsp+0x70]
   14001d459:	mov    r13,QWORD PTR [rdi]
   14001d45c:	mov    rdi,QWORD PTR [rsp+0x50]
   14001d461:	mov    rbp,QWORD PTR [r14]
   14001d464:	mov    rsi,QWORD PTR [rax]
   14001d467:	mov    rax,QWORD PTR [rsp+0x78]
   14001d46c:	mov    r12,QWORD PTR [rbx]
   14001d46f:	mov    rcx,QWORD PTR [rax]
   14001d472:	mov    QWORD PTR [rdi+0x20],rcx
   14001d476:	test   rsi,rsi
   14001d479:	je     0x14001d48f
   14001d47b:	mov    rax,QWORD PTR [rsi]
   14001d47e:	mov    rbx,QWORD PTR [rax]
   14001d481:	mov    rcx,rbx
   14001d484:	call   QWORD PTR [rip+0x1521e]        # 0x1400326a8
   14001d48a:	mov    rcx,rsi
   14001d48d:	call   rbx
   14001d48f:	mov    r14,QWORD PTR [rdi+0x30]
   14001d493:	mov    QWORD PTR [rdi+0x30],rsi
   14001d497:	test   r14,r14
   14001d49a:	je     0x14001d4b1
   14001d49c:	mov    rax,QWORD PTR [r14]
   14001d49f:	mov    rbx,QWORD PTR [rax+0x8]
   14001d4a3:	mov    rcx,rbx
   14001d4a6:	call   QWORD PTR [rip+0x151fc]        # 0x1400326a8
   14001d4ac:	mov    rcx,r14
   14001d4af:	call   rbx
   14001d4b1:	mov    QWORD PTR [rdi+0xb0],rbp
   14001d4b8:	mov    QWORD PTR [rdi+0xb8],r13
   14001d4bf:	mov    QWORD PTR [rdi+0xc0],r12
   14001d4c6:	mov    DWORD PTR [rdi+0xd8],0x2
   14001d4d0:	call   0x14002b158
   14001d4d5:	xor    edx,edx
   14001d4d7:	mov    QWORD PTR [rdi+0x28],rax
   14001d4db:	lea    rcx,[rdi+0x50]
   14001d4df:	lea    r8d,[rdx+0x42]
   14001d4e3:	call   0x14002e2ce
   14001d4e8:	lea    rax,[rdi+0x98]
   14001d4ef:	xor    edx,edx
   14001d4f1:	lea    rcx,[rdi+0xe0]
   14001d4f8:	mov    QWORD PTR [rax+0x8],rax
   14001d4fc:	mov    QWORD PTR [rax],rax
   14001d4ff:	and    DWORD PTR [rcx+0xc],0x0
   14001d503:	call   QWORD PTR [rip+0x14d67]        # 0x140032270
   14001d509:	xor    eax,eax
   14001d50b:	mov    QWORD PTR [r15],rdi
   14001d50e:	mov    QWORD PTR [rsp+0x50],rax
   14001d513:	xor    esi,esi
   14001d515:	jmp    0x14001d51c
   14001d517:	mov    rax,QWORD PTR [rsp+0x50]
   14001d51c:	test   rax,rax
   14001d51f:	je     0x14001d561
   14001d521:	lea    rdi,[rax+0x10]
   14001d525:	mov    eax,DWORD PTR [rdi+0x8]
   14001d528:	cmp    eax,0x1
   14001d52b:	jne    0x14001d536
   14001d52d:	mov    DWORD PTR [rdi+0x8],0x0
   14001d534:	jmp    0x14001d543
   14001d536:	or     eax,0xffffffff
   14001d539:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d53e:	sub    eax,0x1
   14001d541:	jg     0x14001d561
   14001d543:	test   rdi,rdi
   14001d546:	je     0x14001d561
   14001d548:	mov    r8,QWORD PTR [rdi]
   14001d54b:	mov    rbx,QWORD PTR [r8]
   14001d54e:	mov    rcx,rbx
   14001d551:	call   QWORD PTR [rip+0x15151]        # 0x1400326a8
   14001d557:	mov    edx,0x1
   14001d55c:	mov    rcx,rdi
   14001d55f:	call   rbx
   14001d561:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d566:	mov    eax,esi
   14001d568:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d56d:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d572:	add    rsp,0x20
   14001d576:	pop    r15
   14001d578:	pop    r14
   14001d57a:	pop    r13
   14001d57c:	pop    r12
   14001d57e:	pop    rdi
   14001d57f:	ret    
   14001d580:	int3   
   14001d581:	int3   
   14001d582:	int3   
   14001d583:	int3   
   14001d584:	int3   
   14001d585:	int3   
   14001d586:	int3   
   14001d587:	int3   
   14001d588:	rex push rbx
   14001d58a:	sub    rsp,0x30
   14001d58e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d597:	mov    rbx,rcx
   14001d59a:	mov    ecx,0x108
   14001d59f:	call   QWORD PTR [rip+0x1502b]        # 0x1400325d0
   14001d5a5:	mov    rdx,rax
   14001d5a8:	xor    r8d,r8d
   14001d5ab:	test   rax,rax
   14001d5ae:	je     0x14001d605
   14001d5b0:	mov    DWORD PTR [rax+0x18],r8d
   14001d5b4:	lea    rax,[rip+0x174b5]        # 0x140034a70
   14001d5bb:	mov    QWORD PTR [rdx],rax
   14001d5be:	lea    rax,[rip+0x1742b]        # 0x1400349f0
   14001d5c5:	mov    QWORD PTR [rdx+0x8],rax
   14001d5c9:	lea    rax,[rip+0x17410]        # 0x1400349e0
   14001d5d0:	mov    QWORD PTR [rdx+0x10],rax
   14001d5d4:	mov    QWORD PTR [rdx+0x30],r8
   14001d5d8:	mov    QWORD PTR [rdx+0x38],r8
   14001d5dc:	mov    QWORD PTR [rdx+0x40],r8
   14001d5e0:	mov    QWORD PTR [rdx+0x48],r8
   14001d5e4:	mov    DWORD PTR [rdx+0xa8],r8d
   14001d5eb:	mov    DWORD PTR [rdx+0xc8],r8d
   14001d5f2:	mov    QWORD PTR [rdx+0xd0],r8
   14001d5f9:	mov    DWORD PTR [rdx+0xec],0xf12192e
   14001d603:	jmp    0x14001d608
   14001d605:	mov    rdx,r8
   14001d608:	test   rdx,rdx
   14001d60b:	je     0x14001d626
   14001d60d:	mov    eax,DWORD PTR [rdx+0x18]
   14001d610:	test   eax,eax
   14001d612:	jne    0x14001d61d
   14001d614:	mov    DWORD PTR [rdx+0x18],0x1
   14001d61b:	jmp    0x14001d621
   14001d61d:	lock inc DWORD PTR [rdx+0x18]
   14001d621:	mov    QWORD PTR [rbx],rdx
   14001d624:	jmp    0x14001d635
   14001d626:	mov    eax,0x8007000e
   14001d62b:	jmp    0x14001d637
   14001d62d:	mov    eax,DWORD PTR [rsp+0x48]
   14001d631:	test   eax,eax
   14001d633:	js     0x14001d637
   14001d635:	xor    eax,eax
   14001d637:	add    rsp,0x30
   14001d63b:	pop    rbx
   14001d63c:	ret    
   14001d63d:	int3   
   14001d63e:	int3   
   14001d63f:	int3   
   14001d640:	int3   
   14001d641:	int3   
   14001d642:	int3   
   14001d643:	int3   
   14001d644:	mov    rax,rsp
   14001d647:	mov    QWORD PTR [rax+0x20],r9
   14001d64b:	mov    QWORD PTR [rax+0x8],rcx
   14001d64f:	push   rsi
   14001d650:	push   rdi
   14001d651:	push   r14
   14001d653:	sub    rsp,0x30
   14001d657:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001d65f:	mov    QWORD PTR [rax+0x10],rbx
   14001d663:	mov    rdi,r8
   14001d666:	mov    r14,rdx
   14001d669:	mov    rsi,rcx
   14001d66c:	mov    ecx,DWORD PTR [r8]
   14001d66f:	xor    ecx,0xdeadbeef
   14001d675:	mov    ebx,0x7fffffff
   14001d67a:	and    ecx,ebx
   14001d67c:	mov    edx,0x1f31d
   14001d681:	call   QWORD PTR [rip+0x14f31]        # 0x1400325b8
   14001d687:	mov    QWORD PTR [rsp+0x60],rax
   14001d68c:	shr    rax,0x20
   14001d690:	imul   ecx,eax,0x41a7
   14001d696:	imul   eax,DWORD PTR [rsp+0x60],0xb14
   14001d69e:	sub    ecx,eax
   14001d6a0:	jns    0x14001d6a4
   14001d6a2:	add    ecx,ebx
   14001d6a4:	mov    rdx,QWORD PTR [rsi+0x28]
   14001d6a8:	movsxd rcx,ecx
   14001d6ab:	and    rcx,rdx
   14001d6ae:	cmp    QWORD PTR [rsi+0x30],rcx
   14001d6b2:	ja     0x14001d6c1
   14001d6b4:	shr    rdx,1
   14001d6b7:	or     rax,0xffffffffffffffff
   14001d6bb:	sub    rax,rdx
   14001d6be:	add    rcx,rax
   14001d6c1:	mov    rbx,QWORD PTR [rsi]
   14001d6c4:	mov    r8,rcx
   14001d6c7:	add    r8,r8
   14001d6ca:	mov    rax,QWORD PTR [rsi+0x10]
   14001d6ce:	cmp    rbx,QWORD PTR [rax+r8*8]
   14001d6d2:	je     0x14001d723
   14001d6d4:	mov    rbx,QWORD PTR [rax+r8*8+0x8]
   14001d6d9:	mov    rbx,QWORD PTR [rbx]
   14001d6dc:	cmp    rbx,QWORD PTR [rax+r8*8]
   14001d6e0:	je     0x14001d723
   14001d6e2:	mov    rdx,QWORD PTR [rdi]
   14001d6e5:	add    rcx,rcx
   14001d6e8:	mov    rbx,QWORD PTR [rbx+0x8]
   14001d6ec:	cmp    QWORD PTR [rbx+0x10],rdx
   14001d6f0:	jbe    0x14001d6fa
   14001d6f2:	cmp    rbx,QWORD PTR [rax+rcx*8]
   14001d6f6:	jne    0x14001d6e8
   14001d6f8:	jmp    0x14001d723
   14001d6fa:	jae    0x14001d701
   14001d6fc:	mov    rbx,QWORD PTR [rbx]
   14001d6ff:	jmp    0x14001d723
   14001d701:	mov    r8,QWORD PTR [rsp+0x68]
   14001d706:	lea    rdx,[rsp+0x60]
   14001d70b:	mov    rcx,rsi
   14001d70e:	call   0x14001d268
   14001d713:	mov    QWORD PTR [r14],rbx
   14001d716:	mov    BYTE PTR [r14+0x8],0x0
   14001d71b:	mov    rax,r14
   14001d71e:	jmp    0x14001d7bb
   14001d723:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d728:	mov    rax,QWORD PTR [rdi]
   14001d72b:	cmp    rbx,rax
   14001d72e:	je     0x14001d75d
   14001d730:	mov    rcx,QWORD PTR [rdi+0x8]
   14001d734:	mov    QWORD PTR [rcx],rax
   14001d737:	mov    rcx,QWORD PTR [rax+0x8]
   14001d73b:	mov    QWORD PTR [rcx],rbx
   14001d73e:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d742:	mov    QWORD PTR [rcx],rdi
   14001d745:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d749:	mov    rcx,QWORD PTR [rax+0x8]
   14001d74d:	mov    QWORD PTR [rbx+0x8],rcx
   14001d751:	mov    rcx,QWORD PTR [rdi+0x8]
   14001d755:	mov    QWORD PTR [rax+0x8],rcx
   14001d759:	mov    QWORD PTR [rdi+0x8],rdx
   14001d75d:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d761:	mov    rax,QWORD PTR [rdx+r8*8]
   14001d765:	cmp    rax,QWORD PTR [rsi]
   14001d768:	jne    0x14001d779
   14001d76a:	mov    QWORD PTR [rdx+r8*8],rdi
   14001d76e:	mov    rax,QWORD PTR [rsi+0x10]
   14001d772:	mov    QWORD PTR [rax+r8*8+0x8],rdi
   14001d777:	jmp    0x14001d7a8
   14001d779:	cmp    rax,rbx
   14001d77c:	jne    0x14001d784
   14001d77e:	mov    QWORD PTR [rdx+r8*8],rdi
   14001d782:	jmp    0x14001d7a8
   14001d784:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001d789:	mov    rcx,QWORD PTR [rax]
   14001d78c:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   14001d791:	cmp    rcx,rdi
   14001d794:	je     0x14001d7a8
   14001d796:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d79a:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001d79f:	mov    rcx,QWORD PTR [rax+0x8]
   14001d7a3:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   14001d7a8:	mov    rcx,rsi
   14001d7ab:	call   0x14001d7ec
   14001d7b0:	mov    QWORD PTR [r14],rdi
   14001d7b3:	mov    BYTE PTR [r14+0x8],0x1
   14001d7b8:	mov    rax,r14
   14001d7bb:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d7c0:	add    rsp,0x30
   14001d7c4:	pop    r14
   14001d7c6:	pop    rdi
   14001d7c7:	pop    rsi
   14001d7c8:	ret    
   14001d7c9:	int3   
   14001d7ca:	int3   
   14001d7cb:	int3   
   14001d7cc:	int3   
   14001d7cd:	int3   
   14001d7ce:	int3   
   14001d7cf:	int3   
   14001d7d0:	sub    rsp,0x28
   14001d7d4:	mov    r8,rdx
   14001d7d7:	lea    rdx,[rsp+0x30]
   14001d7dc:	call   0x14001d268
   14001d7e1:	add    rsp,0x28
   14001d7e5:	ret    
   14001d7e6:	int3   
   14001d7e7:	int3   
   14001d7e8:	int3   
   14001d7e9:	int3   
   14001d7ea:	int3   
   14001d7eb:	int3   
   14001d7ec:	mov    QWORD PTR [rsp+0x18],rbx
   14001d7f1:	mov    QWORD PTR [rsp+0x20],rsi
   14001d7f6:	push   rdi
   14001d7f7:	sub    rsp,0x40
   14001d7fb:	mov    rax,QWORD PTR [rcx+0x8]
   14001d7ff:	xorps  xmm0,xmm0
   14001d802:	mov    rbx,QWORD PTR [rcx+0x30]
   14001d806:	mov    rsi,rcx
   14001d809:	movss  xmm2,DWORD PTR [rip+0x1fc87]        # 0x14003d498
   14001d811:	cvtsi2ss xmm0,rax
   14001d816:	test   rax,rax
   14001d819:	jns    0x14001d81f
   14001d81b:	addss  xmm0,xmm2
   14001d81f:	xorps  xmm1,xmm1
   14001d822:	cvtsi2ss xmm1,rbx
   14001d827:	test   rbx,rbx
   14001d82a:	jns    0x14001d830
   14001d82c:	addss  xmm1,xmm2
   14001d830:	divss  xmm0,xmm1
   14001d834:	comiss xmm0,DWORD PTR [rcx+0x38]
   14001d838:	jbe    0x14001d8c1
   14001d83e:	cmp    rbx,0x200
   14001d845:	jae    0x14001d84d
   14001d847:	shl    rbx,0x3
   14001d84b:	jmp    0x14001d85f
   14001d84d:	movabs rax,0xfffffffffffffff
   14001d857:	cmp    rbx,rax
   14001d85a:	jae    0x14001d85f
   14001d85c:	add    rbx,rbx
   14001d85f:	mov    rax,QWORD PTR [rsi]
   14001d862:	lea    r9,[rbx+rbx*1]
   14001d866:	add    rcx,0x10
   14001d86a:	mov    QWORD PTR [rsp+0x50],rax
   14001d86f:	lea    rax,[rsp+0x50]
   14001d874:	lea    rdx,[rsp+0x58]
   14001d879:	mov    QWORD PTR [rsp+0x20],rax
   14001d87e:	mov    r8,QWORD PTR [rcx]
   14001d881:	mov    QWORD PTR [rcx+0x8],r8
   14001d885:	call   0x14000dfb4
   14001d88a:	lea    rax,[rbx-0x1]
   14001d88e:	mov    QWORD PTR [rsi+0x30],rbx
   14001d892:	mov    QWORD PTR [rsi+0x28],rax
   14001d896:	mov    rax,QWORD PTR [rsi]
   14001d899:	cmp    QWORD PTR [rax],rax
   14001d89c:	je     0x14001d8c1
   14001d89e:	mov    rdi,QWORD PTR [rax+0x8]
   14001d8a2:	mov    rbx,QWORD PTR [rsi]
   14001d8a5:	lea    rdx,[rsp+0x30]
   14001d8aa:	mov    rcx,rsi
   14001d8ad:	mov    rbx,QWORD PTR [rbx]
   14001d8b0:	mov    r9,rbx
   14001d8b3:	lea    r8,[rbx+0x10]
   14001d8b7:	call   0x14001d644
   14001d8bc:	cmp    rbx,rdi
   14001d8bf:	jne    0x14001d8a2
   14001d8c1:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d8c6:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d8cb:	add    rsp,0x40
   14001d8cf:	pop    rdi
   14001d8d0:	ret    
   14001d8d1:	int3   
   14001d8d2:	int3   
   14001d8d3:	int3   
   14001d8d4:	int3   
   14001d8d5:	int3   
   14001d8d6:	int3   
   14001d8d7:	int3   
   14001d8d8:	mov    QWORD PTR [rsp+0x8],rcx
   14001d8dd:	push   rbx
   14001d8de:	sub    rsp,0x30
   14001d8e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d8eb:	mov    rbx,r9
   14001d8ee:	call   0x140012294
   14001d8f3:	mov    QWORD PTR [rsp+0x40],rax
   14001d8f8:	lea    rdx,[rax+0x10]
   14001d8fc:	test   rdx,rdx
   14001d8ff:	je     0x14001d914
   14001d901:	mov    rcx,QWORD PTR [rbx]
   14001d904:	mov    QWORD PTR [rdx],rcx
   14001d907:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d90b:	mov    QWORD PTR [rdx+0x8],rcx
   14001d90f:	and    QWORD PTR [rbx+0x8],0x0
   14001d914:	add    rsp,0x30
   14001d918:	pop    rbx
   14001d919:	ret    
   14001d91a:	int3   
   14001d91b:	int3   
   14001d91c:	int3   
   14001d91d:	int3   
   14001d91e:	int3   
   14001d91f:	int3   
   14001d920:	sub    rcx,0x8
   14001d924:	jmp    0x14001b1e8
   14001d929:	int3   
   14001d92a:	int3   
   14001d92b:	int3   
   14001d92c:	int3   
   14001d92d:	int3   
   14001d92e:	int3   
   14001d92f:	int3   
   14001d930:	rex push rbx
   14001d932:	sub    rsp,0x20
   14001d936:	mov    rbx,QWORD PTR [rcx]
   14001d939:	mov    edx,0xc0000000
   14001d93e:	xchg   DWORD PTR [rbx+0x3c],edx
   14001d941:	add    edx,0xc0000000
   14001d947:	add    edx,DWORD PTR [rbx+0x38]
   14001d94a:	test   edx,edx
   14001d94c:	jle    0x14001d95b
   14001d94e:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d952:	xor    r8d,r8d
   14001d955:	call   QWORD PTR [rip+0x1482d]        # 0x140032188
   14001d95b:	mov    rcx,rbx
   14001d95e:	add    rsp,0x20
   14001d962:	pop    rbx
   14001d963:	rex.W jmp QWORD PTR [rip+0x1478e]        # 0x1400320f8
   14001d96a:	int3   
   14001d96b:	int3   
   14001d96c:	int3   
   14001d96d:	int3   
   14001d96e:	int3   
   14001d96f:	int3   
   14001d970:	mov    rax,rsp
   14001d973:	mov    QWORD PTR [rax+0x8],rbx
   14001d977:	mov    QWORD PTR [rax+0x10],rdi
   14001d97b:	mov    QWORD PTR [rax+0x20],r9
   14001d97f:	push   rbp
   14001d980:	lea    rbp,[rax-0x4f]
   14001d984:	sub    rsp,0x90
   14001d98b:	mov    rax,QWORD PTR [rip+0x2d68e]        # 0x14004b020
   14001d992:	xor    rax,rsp
   14001d995:	mov    QWORD PTR [rbp+0x37],rax
   14001d999:	mov    rcx,QWORD PTR [rbp+0x77]
   14001d99d:	lea    rax,[rbp+0x6f]
   14001d9a1:	mov    rdi,QWORD PTR [rip+0x32620]        # 0x14004ffc8
   14001d9a8:	xor    r8d,r8d
   14001d9ab:	mov    QWORD PTR [rbp+0x7],rax
   14001d9af:	mov    QWORD PTR [rbp+0xf],0x8
   14001d9b7:	test   rcx,rcx
   14001d9ba:	je     0x14001d9d3
   14001d9bc:	or     rax,0xffffffffffffffff
   14001d9c0:	inc    rax
   14001d9c3:	cmp    WORD PTR [rcx+rax*2],r8w
   14001d9c8:	jne    0x14001d9c0
   14001d9ca:	lea    edx,[rax*2+0x2]
   14001d9d1:	jmp    0x14001d9d8
   14001d9d3:	mov    edx,0xa
   14001d9d8:	test   rcx,rcx
   14001d9db:	mov    DWORD PTR [rbp+0x1f],edx
   14001d9de:	lea    rax,[rip+0x17abb]        # 0x1400354a0
   14001d9e5:	mov    DWORD PTR [rbp+0x23],r8d
   14001d9e9:	cmovne rax,rcx
   14001d9ed:	mov    QWORD PTR [rbp+0x2f],0x4
   14001d9f5:	cmp    BYTE PTR [rip+0x32594],r8b        # 0x14004ff90
   14001d9fc:	mov    QWORD PTR [rbp+0x17],rax
   14001da00:	lea    rax,[rbp+0x7f]
   14001da04:	mov    QWORD PTR [rbp+0x27],rax
   14001da08:	jne    0x14001da32
   14001da0a:	mov    rbx,QWORD PTR [rip+0x32577]        # 0x14004ff88
   14001da11:	mov    rcx,rbx
   14001da14:	call   QWORD PTR [rip+0x14c8e]        # 0x1400326a8
   14001da1a:	lea    r9,[rbp+0x7]
   14001da1e:	mov    r8d,0x3
   14001da24:	lea    rdx,[rip+0x16865]        # 0x140034290
   14001da2b:	mov    rcx,rdi
   14001da2e:	call   rbx
   14001da30:	jmp    0x14001da62
   14001da32:	lea    rax,[rip+0x1675f]        # 0x140034198
   14001da39:	mov    DWORD PTR [rbp+0x3],0x1a0000
   14001da40:	mov    QWORD PTR [rbp-0x11],rax
   14001da44:	lea    rdx,[rbp-0x29]
   14001da48:	mov    eax,0x60
   14001da4d:	mov    DWORD PTR [rbp-0x25],0x400
   14001da54:	mov    WORD PTR [rbp-0x29],ax
   14001da58:	mov    rcx,QWORD PTR [rdi+0x8]
   14001da5c:	call   QWORD PTR [rip+0x145c6]        # 0x140032028
   14001da62:	mov    rcx,QWORD PTR [rbp+0x37]
   14001da66:	xor    rcx,rsp
   14001da69:	call   0x14002dd00
   14001da6e:	lea    r11,[rsp+0x90]
   14001da76:	mov    rbx,QWORD PTR [r11+0x10]
   14001da7a:	mov    rdi,QWORD PTR [r11+0x18]
   14001da7e:	mov    rsp,r11
   14001da81:	pop    rbp
   14001da82:	ret    
   14001da83:	int3   
   14001da84:	int3   
   14001da85:	int3   
   14001da86:	int3   
   14001da87:	int3   
   14001da88:	int3   
   14001da89:	int3   
   14001da8a:	int3   
   14001da8b:	int3   
   14001da8c:	rex push rbx
   14001da8e:	sub    rsp,0x20
   14001da92:	mov    rbx,rcx
   14001da95:	mov    rcx,QWORD PTR [rcx+0x30]
   14001da99:	call   QWORD PTR [rip+0x146b9]        # 0x140032158
   14001da9f:	mov    rcx,QWORD PTR [rbx+0x28]
   14001daa3:	call   QWORD PTR [rip+0x146af]        # 0x140032158
   14001daa9:	mov    rcx,rbx
   14001daac:	add    rsp,0x20
   14001dab0:	pop    rbx
   14001dab1:	rex.W jmp QWORD PTR [rip+0x147c0]        # 0x140032278
   14001dab8:	int3   
   14001dab9:	int3   
   14001daba:	int3   
   14001dabb:	int3   
   14001dabc:	int3   
   14001dabd:	int3   
   14001dabe:	int3   
   14001dabf:	int3   
   14001dac0:	mov    eax,DWORD PTR [rcx+0x18]
   14001dac3:	mov    rdx,rcx
   14001dac6:	test   eax,eax
   14001dac8:	mov    eax,0x1
   14001dacd:	jne    0x14001dad3
   14001dacf:	mov    DWORD PTR [rcx+0x18],eax
   14001dad2:	ret    
   14001dad3:	mov    ecx,eax
   14001dad5:	lock xadd DWORD PTR [rdx+0x18],ecx
   14001dada:	add    eax,ecx
   14001dadc:	ret    
   14001dadd:	int3   
   14001dade:	int3   
   14001dadf:	int3   
   14001dae0:	int3   
   14001dae1:	int3   
   14001dae2:	int3   
   14001dae3:	int3   
   14001dae4:	int3   
   14001dae5:	int3   
   14001dae6:	int3   
   14001dae7:	int3   
   14001dae8:	int3   
   14001dae9:	int3   
   14001daea:	int3   
   14001daeb:	int3   
   14001daec:	int3   
   14001daed:	int3   
   14001daee:	int3   
   14001daef:	int3   
   14001daf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001daf5:	push   rdi
   14001daf6:	sub    rsp,0x20
   14001dafa:	lea    rdi,[rcx+0x10]
   14001dafe:	mov    eax,DWORD PTR [rdi+0x8]
   14001db01:	cmp    eax,0x1
   14001db04:	jne    0x14001db0f
   14001db06:	mov    DWORD PTR [rdi+0x8],0x0
   14001db0d:	jmp    0x14001db1c
   14001db0f:	or     eax,0xffffffff
   14001db12:	lock xadd DWORD PTR [rdi+0x8],eax
   14001db17:	sub    eax,0x1
   14001db1a:	jg     0x14001db3c
   14001db1c:	test   rdi,rdi
   14001db1f:	je     0x14001db3a
   14001db21:	mov    rax,QWORD PTR [rdi]
   14001db24:	mov    rbx,QWORD PTR [rax]
   14001db27:	mov    rcx,rbx
   14001db2a:	call   QWORD PTR [rip+0x14b78]        # 0x1400326a8
   14001db30:	mov    edx,0x1
   14001db35:	mov    rcx,rdi
   14001db38:	call   rbx
   14001db3a:	xor    eax,eax
   14001db3c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db41:	add    rsp,0x20
   14001db45:	pop    rdi
   14001db46:	ret    
   14001db47:	int3   
   14001db48:	int3   
   14001db49:	int3   
   14001db4a:	int3   
   14001db4b:	int3   
   14001db4c:	int3   
   14001db4d:	int3   
   14001db4e:	int3   
   14001db4f:	int3   
   14001db50:	mov    r11,rsp
   14001db53:	mov    QWORD PTR [r11+0x20],r9
   14001db57:	sub    rsp,0x68
   14001db5b:	and    QWORD PTR [r11-0x18],0x0
   14001db60:	lea    rax,[r11+0x30]
   14001db64:	mov    QWORD PTR [r11-0x20],0x4
   14001db6c:	mov    r8d,0x18
   14001db72:	mov    QWORD PTR [r11-0x28],rax
   14001db76:	lea    rax,[r11+0x28]
   14001db7a:	movzx  r9d,r8w
   14001db7e:	lea    edx,[r8-0x10]
   14001db82:	mov    QWORD PTR [r11-0x30],rdx
   14001db86:	lea    r8,[rip+0x1ac3b]        # 0x1400387c8
   14001db8d:	mov    QWORD PTR [r11-0x38],rax
   14001db91:	lea    rax,[r11+0x20]
   14001db95:	mov    QWORD PTR [r11-0x40],rdx
   14001db99:	mov    edx,0x2b
   14001db9e:	mov    QWORD PTR [r11-0x48],rax
   14001dba2:	call   QWORD PTR [rip+0x14478]        # 0x140032020
   14001dba8:	add    rsp,0x68
   14001dbac:	ret    
   14001dbad:	int3   
   14001dbae:	int3   
   14001dbaf:	int3   
   14001dbb0:	int3   
   14001dbb1:	int3   
   14001dbb2:	int3   
   14001dbb3:	int3   
   14001dbb4:	mov    r11,rsp
   14001dbb7:	mov    QWORD PTR [r11+0x20],r9
   14001dbbb:	sub    rsp,0x78
   14001dbbf:	and    QWORD PTR [r11-0x18],0x0
   14001dbc4:	lea    rax,[r11+0x38]
   14001dbc8:	mov    r8d,0xf
   14001dbce:	movzx  r9d,r8w
   14001dbd2:	lea    edx,[r8-0x7]
   14001dbd6:	mov    QWORD PTR [r11-0x20],rdx
   14001dbda:	lea    r8,[rip+0x1abe7]        # 0x1400387c8
   14001dbe1:	mov    QWORD PTR [r11-0x28],rax
   14001dbe5:	lea    rax,[r11+0x30]
   14001dbe9:	mov    QWORD PTR [r11-0x30],0x4
   14001dbf1:	mov    QWORD PTR [r11-0x38],rax
   14001dbf5:	lea    rax,[r11+0x28]
   14001dbf9:	mov    QWORD PTR [r11-0x40],rdx
   14001dbfd:	mov    QWORD PTR [r11-0x48],rax
   14001dc01:	lea    rax,[r11+0x20]
   14001dc05:	mov    QWORD PTR [r11-0x50],rdx
   14001dc09:	mov    edx,0x2b
   14001dc0e:	mov    QWORD PTR [r11-0x58],rax
   14001dc12:	call   QWORD PTR [rip+0x14408]        # 0x140032020
   14001dc18:	add    rsp,0x78
   14001dc1c:	ret    
   14001dc1d:	int3   
   14001dc1e:	int3   
   14001dc1f:	int3   
   14001dc20:	int3   
   14001dc21:	int3   
   14001dc22:	int3   
   14001dc23:	int3   
   14001dc24:	mov    r11,rsp
   14001dc27:	mov    QWORD PTR [r11+0x20],r9
   14001dc2b:	sub    rsp,0x68
   14001dc2f:	and    QWORD PTR [r11-0x18],0x0
   14001dc34:	lea    rax,[r11+0x30]
   14001dc38:	mov    r8d,0x8
   14001dc3e:	movzx  r9d,dx
   14001dc42:	mov    QWORD PTR [r11-0x20],r8
   14001dc46:	mov    edx,0x2b
   14001dc4b:	mov    QWORD PTR [r11-0x28],rax
   14001dc4f:	lea    rax,[r11+0x28]
   14001dc53:	mov    QWORD PTR [r11-0x30],r8
   14001dc57:	mov    QWORD PTR [r11-0x38],rax
   14001dc5b:	lea    rax,[r11+0x20]
   14001dc5f:	mov    QWORD PTR [r11-0x40],r8
   14001dc63:	lea    r8,[rip+0x1ab5e]        # 0x1400387c8
   14001dc6a:	mov    QWORD PTR [r11-0x48],rax
   14001dc6e:	call   QWORD PTR [rip+0x143ac]        # 0x140032020
   14001dc74:	add    rsp,0x68
   14001dc78:	ret    
   14001dc79:	int3   
   14001dc7a:	int3   
   14001dc7b:	int3   
   14001dc7c:	int3   
   14001dc7d:	int3   
   14001dc7e:	int3   
   14001dc7f:	int3   
   14001dc80:	mov    rax,rsp
   14001dc83:	mov    QWORD PTR [rax+0x8],rcx
   14001dc87:	push   r14
   14001dc89:	sub    rsp,0x30
   14001dc8d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001dc95:	mov    QWORD PTR [rax+0x10],rbx
   14001dc99:	mov    QWORD PTR [rax+0x18],rsi
   14001dc9d:	mov    QWORD PTR [rax+0x20],rdi
   14001dca1:	mov    r14,rdx
   14001dca4:	mov    rbx,rcx
   14001dca7:	and    QWORD PTR [rcx],0x0
   14001dcab:	mov    edi,DWORD PTR [rdx+0x24]
   14001dcae:	add    rdi,0x6c
   14001dcb2:	mov    rcx,rdi
   14001dcb5:	call   0x140023f10
   14001dcba:	mov    rsi,rax
   14001dcbd:	mov    rcx,QWORD PTR [rbx]
   14001dcc0:	call   QWORD PTR [rip+0x14902]        # 0x1400325c8
   14001dcc6:	mov    QWORD PTR [rbx],rsi
   14001dcc9:	mov    r9,rdi
   14001dccc:	mov    r8,r14
   14001dccf:	mov    rdx,rdi
   14001dcd2:	mov    rcx,rsi
   14001dcd5:	call   QWORD PTR [rip+0x148e5]        # 0x1400325c0
   14001dcdb:	lea    rax,[rbx+0x8]
   14001dcdf:	mov    QWORD PTR [rax+0x8],rax
   14001dce3:	mov    QWORD PTR [rax],rax
   14001dce6:	mov    rax,rbx
   14001dce9:	mov    rbx,QWORD PTR [rsp+0x48]
   14001dcee:	mov    rsi,QWORD PTR [rsp+0x50]
   14001dcf3:	mov    rdi,QWORD PTR [rsp+0x58]
   14001dcf8:	add    rsp,0x30
   14001dcfc:	pop    r14
   14001dcfe:	ret    
   14001dcff:	int3   
   14001dd00:	int3   
   14001dd01:	int3   
   14001dd02:	int3   
   14001dd03:	int3   
   14001dd04:	int3   
   14001dd05:	int3   
   14001dd06:	int3   
   14001dd07:	int3   
   14001dd08:	int3   
   14001dd09:	int3   
   14001dd0a:	int3   
   14001dd0b:	int3   
   14001dd0c:	int3   
   14001dd0d:	int3   
   14001dd0e:	int3   
   14001dd0f:	int3   
   14001dd10:	mov    QWORD PTR [rsp+0x8],rbx
   14001dd15:	push   rdi
   14001dd16:	sub    rsp,0x20
   14001dd1a:	mov    ebx,edx
   14001dd1c:	mov    rdi,rcx
   14001dd1f:	call   0x14001dd5c
   14001dd24:	test   bl,0x1
   14001dd27:	je     0x14001dd32
   14001dd29:	mov    rcx,rdi
   14001dd2c:	call   QWORD PTR [rip+0x14896]        # 0x1400325c8
   14001dd32:	mov    rax,rdi
   14001dd35:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd3a:	add    rsp,0x20
   14001dd3e:	pop    rdi
   14001dd3f:	ret    
   14001dd40:	int3   
   14001dd41:	int3   
   14001dd42:	int3   
   14001dd43:	int3   
   14001dd44:	int3   
   14001dd45:	int3   
   14001dd46:	int3   
   14001dd47:	int3   
   14001dd48:	lea    rax,[rip+0x16c71]        # 0x1400349c0
   14001dd4f:	mov    QWORD PTR [rcx],rax
   14001dd52:	ret    
   14001dd53:	int3   
   14001dd54:	int3   
   14001dd55:	int3   
   14001dd56:	int3   
   14001dd57:	int3   
   14001dd58:	int3   
   14001dd59:	int3   
   14001dd5a:	int3   
   14001dd5b:	int3   
   14001dd5c:	mov    rax,rsp
   14001dd5f:	mov    QWORD PTR [rax+0x8],rcx
   14001dd63:	push   rdi
   14001dd64:	push   r14
   14001dd66:	push   r15
   14001dd68:	sub    rsp,0x30
   14001dd6c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001dd74:	mov    QWORD PTR [rax+0x10],rbx
   14001dd78:	mov    QWORD PTR [rax+0x18],rbp
   14001dd7c:	mov    QWORD PTR [rax+0x20],rsi
   14001dd80:	mov    rdi,rcx
   14001dd83:	lea    rax,[rip+0x16ce6]        # 0x140034a70
   14001dd8a:	mov    QWORD PTR [rcx],rax
   14001dd8d:	lea    rax,[rip+0x16c5c]        # 0x1400349f0
   14001dd94:	mov    QWORD PTR [rcx+0x8],rax
   14001dd98:	lea    rax,[rip+0x16c41]        # 0x1400349e0
   14001dd9f:	mov    QWORD PTR [rcx+0x10],rax
   14001dda3:	mov    rcx,QWORD PTR [rcx+0x86]
   14001ddaa:	call   QWORD PTR [rip+0x14818]        # 0x1400325c8
   14001ddb0:	mov    r9d,DWORD PTR [rdi+0xa8]
   14001ddb7:	lea    r15,[rip+0x2d2ba]        # 0x14004b078
   14001ddbe:	test   r9d,r9d
   14001ddc1:	je     0x14001de55
   14001ddc7:	mov    rcx,QWORD PTR [rip+0x2d2aa]        # 0x14004b078
   14001ddce:	cmp    rcx,r15
   14001ddd1:	je     0x14001ddee
   14001ddd3:	test   BYTE PTR [rcx+0x1c],0x1
   14001ddd7:	je     0x14001ddee
   14001ddd9:	mov    edx,0xb
   14001ddde:	lea    r8,[rip+0x1a9e3]        # 0x1400387c8
   14001dde5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001dde9:	call   0x140001f70
   14001ddee:	lea    rbp,[rdi+0xe0]
   14001ddf5:	mov    rcx,rbp
   14001ddf8:	call   QWORD PTR [rip+0x1430a]        # 0x140032108
   14001ddfe:	lea    rsi,[rdi+0x98]
   14001de05:	mov    rbx,QWORD PTR [rsi]
   14001de08:	jmp    0x14001de47
   14001de0a:	lea    r14,[rbx-0x8]
   14001de0e:	mov    rbx,QWORD PTR [rbx]
   14001de11:	lea    r8,[r14+0x8]
   14001de15:	mov    rdx,QWORD PTR [r8]
   14001de18:	mov    rax,QWORD PTR [r8+0x8]
   14001de1c:	mov    QWORD PTR [rax],rdx
   14001de1f:	mov    QWORD PTR [rdx+0x8],rax
   14001de23:	mov    QWORD PTR [r8+0x8],r8
   14001de27:	mov    QWORD PTR [r8],r8
   14001de2a:	test   r14,r14
   14001de2d:	je     0x14001de41
   14001de2f:	mov    rcx,QWORD PTR [r14]
   14001de32:	call   QWORD PTR [rip+0x14790]        # 0x1400325c8
   14001de38:	mov    rcx,r14
   14001de3b:	call   QWORD PTR [rip+0x14787]        # 0x1400325c8
   14001de41:	dec    DWORD PTR [rdi+0xa8]
   14001de47:	cmp    rbx,rsi
   14001de4a:	jne    0x14001de0a
   14001de4c:	mov    rcx,rbp
   14001de4f:	call   QWORD PTR [rip+0x142a3]        # 0x1400320f8
   14001de55:	mov    rsi,QWORD PTR [rdi+0x38]
   14001de59:	test   rsi,rsi
   14001de5c:	je     0x14001dec6
   14001de5e:	mov    rax,QWORD PTR [rsi]
   14001de61:	mov    rbx,QWORD PTR [rax+0x20]
   14001de65:	mov    rcx,rbx
   14001de68:	call   QWORD PTR [rip+0x1483a]        # 0x1400326a8
   14001de6e:	mov    rcx,rsi
   14001de71:	call   rbx
   14001de73:	test   eax,eax
   14001de75:	jns    0x14001dea1
   14001de77:	mov    rcx,QWORD PTR [rip+0x2d1fa]        # 0x14004b078
   14001de7e:	cmp    rcx,r15
   14001de81:	je     0x14001dea1
   14001de83:	test   BYTE PTR [rcx+0x1c],0x2
   14001de87:	je     0x14001dea1
   14001de89:	mov    edx,0xc
   14001de8e:	mov    r9d,eax
   14001de91:	lea    r8,[rip+0x1a930]        # 0x1400387c8
   14001de98:	mov    rcx,QWORD PTR [rcx+0x10]
   14001de9c:	call   0x140001f70
   14001dea1:	mov    rsi,QWORD PTR [rdi+0x38]
   14001dea5:	and    QWORD PTR [rdi+0x38],0x0
   14001deaa:	test   rsi,rsi
   14001dead:	je     0x14001deed
   14001deaf:	mov    rax,QWORD PTR [rsi]
   14001deb2:	mov    rbx,QWORD PTR [rax+0x8]
   14001deb6:	mov    rcx,rbx
   14001deb9:	call   QWORD PTR [rip+0x147e9]        # 0x1400326a8
   14001debf:	mov    rcx,rsi
   14001dec2:	call   rbx
   14001dec4:	jmp    0x14001deed
   14001dec6:	mov    rcx,QWORD PTR [rip+0x2d1ab]        # 0x14004b078
   14001decd:	cmp    rcx,r15
   14001ded0:	je     0x14001df19
   14001ded2:	test   BYTE PTR [rcx+0x1c],0x2
   14001ded6:	je     0x14001def4
   14001ded8:	mov    edx,0xd
   14001dedd:	lea    r8,[rip+0x1a8e4]        # 0x1400387c8
   14001dee4:	mov    rcx,QWORD PTR [rcx+0x10]
   14001dee8:	call   0x140001f08
   14001deed:	mov    rcx,QWORD PTR [rip+0x2d184]        # 0x14004b078
   14001def4:	cmp    rcx,r15
   14001def7:	je     0x14001df19
   14001def9:	test   BYTE PTR [rcx+0x1c],0x4
   14001defd:	je     0x14001df19
   14001deff:	mov    edx,0xe
   14001df04:	mov    r9,QWORD PTR [rdi+0x20]
   14001df08:	lea    r8,[rip+0x1a8b9]        # 0x1400387c8
   14001df0f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001df13:	call   0x14001ad20
   14001df18:	nop
   14001df19:	lea    rcx,[rdi+0xe0]
   14001df20:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   14001df27:	je     0x14001df30
   14001df29:	call   QWORD PTR [rip+0x14349]        # 0x140032278
   14001df2f:	nop
   14001df30:	mov    rcx,QWORD PTR [rdi+0xd0]
   14001df37:	call   QWORD PTR [rip+0x14413]        # 0x140032350
   14001df3d:	nop
   14001df3e:	mov    rsi,QWORD PTR [rdi+0x38]
   14001df42:	test   rsi,rsi
   14001df45:	je     0x14001df5d
   14001df47:	mov    rax,QWORD PTR [rsi]
   14001df4a:	mov    rbx,QWORD PTR [rax+0x8]
   14001df4e:	mov    rcx,rbx
   14001df51:	call   QWORD PTR [rip+0x14751]        # 0x1400326a8
   14001df57:	mov    rcx,rsi
   14001df5a:	call   rbx
   14001df5c:	nop
   14001df5d:	mov    rsi,QWORD PTR [rdi+0x30]
   14001df61:	test   rsi,rsi
   14001df64:	je     0x14001df7c
   14001df66:	mov    rax,QWORD PTR [rsi]
   14001df69:	mov    rbx,QWORD PTR [rax+0x8]
   14001df6d:	mov    rcx,rbx
   14001df70:	call   QWORD PTR [rip+0x14732]        # 0x1400326a8
   14001df76:	mov    rcx,rsi
   14001df79:	call   rbx
   14001df7b:	nop
   14001df7c:	lea    rax,[rip+0x16925]        # 0x1400348a8
   14001df83:	mov    QWORD PTR [rdi+0x10],rax
   14001df87:	lea    rax,[rip+0x16a32]        # 0x1400349c0
   14001df8e:	mov    QWORD PTR [rdi+0x8],rax
   14001df92:	mov    QWORD PTR [rdi],rax
   14001df95:	mov    rbx,QWORD PTR [rsp+0x58]
   14001df9a:	mov    rbp,QWORD PTR [rsp+0x60]
   14001df9f:	mov    rsi,QWORD PTR [rsp+0x68]
   14001dfa4:	add    rsp,0x30
   14001dfa8:	pop    r15
   14001dfaa:	pop    r14
   14001dfac:	pop    rdi
   14001dfad:	ret    
   14001dfae:	int3   
   14001dfaf:	int3   
   14001dfb0:	int3   
   14001dfb1:	int3   
   14001dfb2:	int3   
   14001dfb3:	int3   
   14001dfb4:	mov    rax,rsp
   14001dfb7:	push   rdi
   14001dfb8:	push   r12
   14001dfba:	push   r13
   14001dfbc:	push   r14
   14001dfbe:	push   r15
   14001dfc0:	sub    rsp,0x50
   14001dfc4:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001dfcc:	mov    QWORD PTR [rax+0x10],rbx
   14001dfd0:	mov    QWORD PTR [rax+0x18],rsi
   14001dfd4:	mov    r12,r8
   14001dfd7:	mov    rbx,rdx
   14001dfda:	mov    rsi,rcx
   14001dfdd:	and    DWORD PTR [r8],0x0
   14001dfe1:	lea    r14,[rcx+0xe0]
   14001dfe8:	mov    rcx,r14
   14001dfeb:	call   QWORD PTR [rip+0x14117]        # 0x140032108
   14001dff1:	mov    rdi,QWORD PTR [rsi+0x40]
   14001dff5:	mov    rcx,r14
   14001dff8:	call   QWORD PTR [rip+0x140fa]        # 0x1400320f8
   14001dffe:	lea    r13,[rip+0x2d073]        # 0x14004b078
   14001e005:	mov    rcx,QWORD PTR [rip+0x2d06c]        # 0x14004b078
   14001e00c:	cmp    rcx,r13
   14001e00f:	je     0x14001e038
   14001e011:	test   BYTE PTR [rcx+0x1c],0x10
   14001e015:	je     0x14001e038
   14001e017:	mov    QWORD PTR [rsp+0x30],rdi
   14001e01c:	mov    eax,DWORD PTR [rbx+0x10]
   14001e01f:	mov    DWORD PTR [rsp+0x28],eax
   14001e023:	mov    rax,QWORD PTR [rbx+0x8]
   14001e027:	mov    QWORD PTR [rsp+0x20],rax
   14001e02c:	mov    r9,QWORD PTR [rbx]
   14001e02f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e033:	call   0x14001dbb4
   14001e038:	cmp    QWORD PTR [rbx+0x8],rdi
   14001e03c:	je     0x14001e0d0
   14001e042:	mov    ecx,0x18
   14001e047:	call   0x140023f10
   14001e04c:	mov    QWORD PTR [rsp+0x80],rax
   14001e054:	mov    rdx,rbx
   14001e057:	mov    rcx,rax
   14001e05a:	call   0x14001dc80
   14001e05f:	mov    r15,rax
   14001e062:	mov    rcx,QWORD PTR [rip+0x2d00f]        # 0x14004b078
   14001e069:	cmp    rcx,r13
   14001e06c:	je     0x14001e093
   14001e06e:	test   BYTE PTR [rcx+0x1c],0x10
   14001e072:	je     0x14001e093
   14001e074:	mov    edx,0x11
   14001e079:	mov    QWORD PTR [rsp+0x28],rdi
   14001e07e:	mov    rax,QWORD PTR [rbx+0x8]
   14001e082:	mov    QWORD PTR [rsp+0x20],rax
   14001e087:	mov    r9,QWORD PTR [rbx]
   14001e08a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e08e:	call   0x14001dc24
   14001e093:	mov    rcx,r14
   14001e096:	call   QWORD PTR [rip+0x1406c]        # 0x140032108
   14001e09c:	lea    r8,[r15+0x8]
   14001e0a0:	lea    rdx,[rsi+0x98]
   14001e0a7:	mov    rax,QWORD PTR [rdx+0x8]
   14001e0ab:	mov    QWORD PTR [r8],rdx
   14001e0ae:	mov    QWORD PTR [r8+0x8],rax
   14001e0b2:	mov    QWORD PTR [rax],r8
   14001e0b5:	mov    QWORD PTR [rdx+0x8],r8
   14001e0b9:	inc    DWORD PTR [rsi+0xa8]
   14001e0bf:	mov    rcx,r14
   14001e0c2:	call   QWORD PTR [rip+0x14030]        # 0x1400320f8
   14001e0c8:	mov    DWORD PTR [r12],0x1
   14001e0d0:	lea    r11,[rsp+0x50]
   14001e0d5:	mov    rbx,QWORD PTR [r11+0x38]
   14001e0d9:	mov    rsi,QWORD PTR [r11+0x40]
   14001e0dd:	mov    rsp,r11
   14001e0e0:	pop    r15
   14001e0e2:	pop    r14
   14001e0e4:	pop    r13
   14001e0e6:	pop    r12
   14001e0e8:	pop    rdi
   14001e0e9:	ret    
   14001e0ea:	int3   
   14001e0eb:	int3   
   14001e0ec:	int3   
   14001e0ed:	int3   
   14001e0ee:	int3   
   14001e0ef:	int3   
   14001e0f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e0f5:	mov    QWORD PTR [rsp+0x10],rsi
   14001e0fa:	mov    QWORD PTR [rsp+0x18],rdi
   14001e0ff:	push   r14
   14001e101:	sub    rsp,0x20
   14001e105:	and    QWORD PTR [rdx],0x0
   14001e109:	lea    rsi,[rcx+0xe0]
   14001e110:	mov    rbx,rcx
   14001e113:	mov    r14,rdx
   14001e116:	mov    rcx,rsi
   14001e119:	call   QWORD PTR [rip+0x13fe9]        # 0x140032108
   14001e11f:	lea    rcx,[rbx+0x98]
   14001e126:	mov    r8,QWORD PTR [rcx]
   14001e129:	cmp    r8,rcx
   14001e12c:	je     0x14001e181
   14001e12e:	mov    r9,QWORD PTR [rbx+0x40]
   14001e132:	lea    rdi,[r8-0x8]
   14001e136:	mov    rax,QWORD PTR [rdi]
   14001e139:	cmp    QWORD PTR [rax+0x8],r9
   14001e13d:	je     0x14001e149
   14001e13f:	mov    r8,QWORD PTR [r8]
   14001e142:	cmp    r8,rcx
   14001e145:	jne    0x14001e132
   14001e147:	jmp    0x14001e181
   14001e149:	and    QWORD PTR [rdi],0x0
   14001e14d:	lea    r8,[rdi+0x8]
   14001e151:	mov    QWORD PTR [r14],rax
   14001e154:	mov    rax,QWORD PTR [r8+0x8]
   14001e158:	mov    rdx,QWORD PTR [r8]
   14001e15b:	mov    QWORD PTR [rax],rdx
   14001e15e:	mov    QWORD PTR [rdx+0x8],rax
   14001e162:	mov    QWORD PTR [r8+0x8],r8
   14001e166:	mov    QWORD PTR [r8],r8
   14001e169:	dec    DWORD PTR [rbx+0xa8]
   14001e16f:	mov    rcx,QWORD PTR [rdi]
   14001e172:	call   QWORD PTR [rip+0x14450]        # 0x1400325c8
   14001e178:	mov    rcx,rdi
   14001e17b:	call   QWORD PTR [rip+0x14447]        # 0x1400325c8
   14001e181:	mov    rcx,rsi
   14001e184:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e189:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e18e:	mov    rdi,QWORD PTR [rsp+0x40]
   14001e193:	add    rsp,0x20
   14001e197:	pop    r14
   14001e199:	rex.W jmp QWORD PTR [rip+0x13f58]        # 0x1400320f8
   14001e1a0:	int3   
   14001e1a1:	int3   
   14001e1a2:	int3   
   14001e1a3:	int3   
   14001e1a4:	int3   
   14001e1a5:	int3   
   14001e1a6:	int3   
   14001e1a7:	int3   
   14001e1a8:	mov    rax,rsp
   14001e1ab:	mov    QWORD PTR [rax+0x10],rdx
   14001e1af:	mov    QWORD PTR [rax+0x8],rcx
   14001e1b3:	push   rbx
   14001e1b4:	push   rsi
   14001e1b5:	push   rdi
   14001e1b6:	sub    rsp,0x40
   14001e1ba:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001e1c2:	mov    rbx,rdx
   14001e1c5:	mov    rdi,rcx
   14001e1c8:	and    DWORD PTR [rax+0x18],0x0
   14001e1cc:	call   0x14002b158
   14001e1d1:	mov    QWORD PTR [rdi+0x28],rax
   14001e1d5:	lea    r8,[rsp+0x70]
   14001e1da:	mov    rdx,rbx
   14001e1dd:	mov    rcx,rdi
   14001e1e0:	call   0x14001dfb4
   14001e1e5:	cmp    DWORD PTR [rsp+0x70],0x0
   14001e1ea:	jne    0x14001e258
   14001e1ec:	lea    rsi,[rip+0x2ce85]        # 0x14004b078
   14001e1f3:	mov    rcx,QWORD PTR [rip+0x2ce7e]        # 0x14004b078
   14001e1fa:	cmp    rcx,rsi
   14001e1fd:	je     0x14001e22b
   14001e1ff:	test   BYTE PTR [rcx+0x1c],0x10
   14001e203:	je     0x14001e22b
   14001e205:	mov    eax,DWORD PTR [rdi+0xa8]
   14001e20b:	mov    edx,0x12
   14001e210:	mov    QWORD PTR [rsp+0x28],rax
   14001e215:	mov    rax,QWORD PTR [rbx+0x8]
   14001e219:	mov    QWORD PTR [rsp+0x20],rax
   14001e21e:	mov    r9,QWORD PTR [rdi+0x20]
   14001e222:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e226:	call   0x14001dc24
   14001e22b:	mov    rdx,rbx
   14001e22e:	mov    rcx,rdi
   14001e231:	call   0x14001e354
   14001e236:	lea    rbx,[rdi+0xe0]
   14001e23d:	mov    rcx,rbx
   14001e240:	call   QWORD PTR [rip+0x13ec2]        # 0x140032108
   14001e246:	inc    QWORD PTR [rdi+0x40]
   14001e24a:	mov    rcx,rbx
   14001e24d:	call   QWORD PTR [rip+0x13ea5]        # 0x1400320f8
   14001e253:	jmp    0x14001e2fb
   14001e258:	lea    rsi,[rip+0x2ce19]        # 0x14004b078
   14001e25f:	mov    rcx,QWORD PTR [rip+0x2ce12]        # 0x14004b078
   14001e266:	cmp    rcx,rsi
   14001e269:	je     0x14001e29e
   14001e26b:	test   BYTE PTR [rcx+0x1c],0x10
   14001e26f:	je     0x14001e29e
   14001e271:	mov    eax,DWORD PTR [rdi+0xa8]
   14001e277:	mov    edx,0x13
   14001e27c:	mov    QWORD PTR [rsp+0x28],rax
   14001e281:	mov    rax,QWORD PTR [rbx+0x8]
   14001e285:	mov    QWORD PTR [rsp+0x20],rax
   14001e28a:	mov    r9,QWORD PTR [rdi+0x20]
   14001e28e:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e292:	call   0x14001dc24
   14001e297:	mov    rcx,QWORD PTR [rip+0x2cdda]        # 0x14004b078
   14001e29e:	test   BYTE PTR [rip+0x31d1b],0x4        # 0x14004ffc0
   14001e2a5:	je     0x14001e2c3
   14001e2a7:	lea    r8,[rip+0x1603a]        # 0x1400342e8
   14001e2ae:	lea    rdx,[rip+0x1610b]        # 0x1400343c0
   14001e2b5:	call   0x140003818
   14001e2ba:	mov    rcx,QWORD PTR [rip+0x2cdb7]        # 0x14004b078
   14001e2c1:	jmp    0x14001e2c5
   14001e2c3:	xor    eax,eax
   14001e2c5:	movzx  r9d,ax
   14001e2c9:	or     r9d,0x80070000
   14001e2d0:	test   eax,eax
   14001e2d2:	cmovle r9d,eax
   14001e2d6:	test   r9d,r9d
   14001e2d9:	jns    0x14001e2fb
   14001e2db:	cmp    rcx,rsi
   14001e2de:	je     0x14001e2fb
   14001e2e0:	test   BYTE PTR [rcx+0x1c],0x2
   14001e2e4:	je     0x14001e2fb
   14001e2e6:	mov    edx,0x14
   14001e2eb:	lea    r8,[rip+0x1a4d6]        # 0x1400387c8
   14001e2f2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e2f6:	call   0x140001f70
   14001e2fb:	lea    rdx,[rsp+0x68]
   14001e300:	mov    rcx,rdi
   14001e303:	call   0x14001e0f0
   14001e308:	mov    rsi,QWORD PTR [rsp+0x68]
   14001e30d:	test   rsi,rsi
   14001e310:	je     0x14001e345
   14001e312:	mov    rdx,rsi
   14001e315:	mov    rcx,rdi
   14001e318:	call   0x14001e354
   14001e31d:	lea    rbx,[rdi+0xe0]
   14001e324:	mov    rcx,rbx
   14001e327:	call   QWORD PTR [rip+0x13ddb]        # 0x140032108
   14001e32d:	inc    QWORD PTR [rdi+0x40]
   14001e331:	mov    rcx,rbx
   14001e334:	call   QWORD PTR [rip+0x13dbe]        # 0x1400320f8
   14001e33a:	mov    rcx,rsi
   14001e33d:	call   QWORD PTR [rip+0x14285]        # 0x1400325c8
   14001e343:	jmp    0x14001e2fb
   14001e345:	add    rsp,0x40
   14001e349:	pop    rdi
   14001e34a:	pop    rsi
   14001e34b:	pop    rbx
   14001e34c:	ret    
   14001e34d:	int3   
   14001e34e:	int3   
   14001e34f:	int3   
   14001e350:	int3   
   14001e351:	int3   
   14001e352:	int3   
   14001e353:	int3   
   14001e354:	mov    rax,rsp
   14001e357:	push   rdi
   14001e358:	sub    rsp,0x40
   14001e35c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001e364:	mov    QWORD PTR [rax+0x10],rbx
   14001e368:	mov    QWORD PTR [rax+0x18],rsi
   14001e36c:	mov    rdi,rdx
   14001e36f:	mov    rsi,rcx
   14001e372:	xor    ebx,ebx
   14001e374:	mov    QWORD PTR [rax+0x8],rbx
   14001e378:	mov    rcx,QWORD PTR [rcx+0xc0]
   14001e37f:	call   0x140029ab0
   14001e384:	test   eax,eax
   14001e386:	js     0x14001e396
   14001e388:	mov    rbx,rcx
   14001e38b:	mov    QWORD PTR [rsp+0x50],rcx
   14001e390:	xor    eax,eax
   14001e392:	test   eax,eax
   14001e394:	jns    0x14001e3d5
   14001e396:	lea    rax,[rip+0x2ccdb]        # 0x14004b078
   14001e39d:	mov    rcx,QWORD PTR [rip+0x2ccd4]        # 0x14004b078
   14001e3a4:	cmp    rcx,rax
   14001e3a7:	je     0x14001e5e4
   14001e3ad:	test   BYTE PTR [rcx+0x1c],0x2
   14001e3b1:	je     0x14001e5e4
   14001e3b7:	mov    edx,0x17
   14001e3bc:	mov    r9d,DWORD PTR [rdi+0x10]
   14001e3c0:	lea    r8,[rip+0x1a401]        # 0x1400387c8
   14001e3c7:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e3cb:	call   0x140001f70
   14001e3d0:	jmp    0x14001e5e4
   14001e3d5:	cmp    DWORD PTR [rsi+0xc8],0x0
   14001e3dc:	je     0x14001e425
   14001e3de:	mov    edx,DWORD PTR [rdi+0x10]
   14001e3e1:	cmp    edx,0x9
   14001e3e4:	je     0x14001e425
   14001e3e6:	lea    rax,[rip+0x2cc8b]        # 0x14004b078
   14001e3ed:	mov    rcx,QWORD PTR [rip+0x2cc84]        # 0x14004b078
   14001e3f4:	cmp    rcx,rax
   14001e3f7:	je     0x14001e5e4
   14001e3fd:	test   BYTE PTR [rcx+0x1c],0x4
   14001e401:	je     0x14001e5e4
   14001e407:	mov    DWORD PTR [rsp+0x28],edx
   14001e40b:	mov    rax,QWORD PTR [rdi+0x8]
   14001e40f:	mov    QWORD PTR [rsp+0x20],rax
   14001e414:	mov    r9,QWORD PTR [rdi]
   14001e417:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e41b:	call   0x14001db50
   14001e420:	jmp    0x14001e5e4
   14001e425:	mov    rax,QWORD PTR [rdi+0x8]
   14001e429:	test   rax,rax
   14001e42c:	jne    0x14001e461
   14001e42e:	cmp    DWORD PTR [rdi+0x10],0x8
   14001e432:	je     0x14001e45c
   14001e434:	lea    rax,[rip+0x2cc3d]        # 0x14004b078
   14001e43b:	mov    rcx,QWORD PTR [rip+0x2cc36]        # 0x14004b078
   14001e442:	cmp    rcx,rax
   14001e445:	je     0x14001e5e4
   14001e44b:	test   BYTE PTR [rcx+0x1c],0x4
   14001e44f:	je     0x14001e5e4
   14001e455:	mov    edx,0x19
   14001e45a:	jmp    0x14001e48d
   14001e45c:	test   rax,rax
   14001e45f:	je     0x14001e4a2
   14001e461:	cmp    DWORD PTR [rdi+0x10],0x8
   14001e465:	jne    0x14001e4a2
   14001e467:	lea    rax,[rip+0x2cc0a]        # 0x14004b078
   14001e46e:	mov    rcx,QWORD PTR [rip+0x2cc03]        # 0x14004b078
   14001e475:	cmp    rcx,rax
   14001e478:	je     0x14001e5e4
   14001e47e:	test   BYTE PTR [rcx+0x1c],0x4
   14001e482:	je     0x14001e5e4
   14001e488:	mov    edx,0x1a
   14001e48d:	lea    r8,[rip+0x1a334]        # 0x1400387c8
   14001e494:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e498:	call   0x140001f08
   14001e49d:	jmp    0x14001e5e4
   14001e4a2:	mov    ecx,DWORD PTR [rdi+0x10]
   14001e4a5:	sub    ecx,0x8
   14001e4a8:	je     0x14001e594
   14001e4ae:	sub    ecx,0x1
   14001e4b1:	je     0x14001e550
   14001e4b7:	sub    ecx,0x1
   14001e4ba:	je     0x14001e50a
   14001e4bc:	cmp    ecx,0x1
   14001e4bf:	jne    0x14001e5e4
   14001e4c5:	test   BYTE PTR [rip+0x31af5],cl        # 0x14004ffc0
   14001e4cb:	je     0x14001e4e6
   14001e4cd:	and    DWORD PTR [rsp+0x28],0x0
   14001e4d2:	lea    rax,[rip+0x1a247]        # 0x140038720
   14001e4d9:	mov    QWORD PTR [rsp+0x20],rax
   14001e4de:	mov    r9,QWORD PTR [rdi]
   14001e4e1:	call   0x14001d970
   14001e4e6:	mov    rdx,rdi
   14001e4e9:	mov    rcx,rsi
   14001e4ec:	call   0x14001e8ec
   14001e4f1:	test   BYTE PTR [rip+0x31ac8],0x1        # 0x14004ffc0
   14001e4f8:	je     0x14001e5e4
   14001e4fe:	lea    rax,[rip+0x1a233]        # 0x140038738
   14001e505:	jmp    0x14001e5d1
   14001e50a:	test   BYTE PTR [rip+0x31aaf],0x1        # 0x14004ffc0
   14001e511:	je     0x14001e52c
   14001e513:	and    DWORD PTR [rsp+0x28],0x0
   14001e518:	lea    rax,[rip+0x1a1b1]        # 0x1400386d0
   14001e51f:	mov    QWORD PTR [rsp+0x20],rax
   14001e524:	mov    r9,QWORD PTR [rdi]
   14001e527:	call   0x14001d970
   14001e52c:	mov    rdx,rdi
   14001e52f:	mov    rcx,rsi
   14001e532:	call   0x14001e818
   14001e537:	test   BYTE PTR [rip+0x31a82],0x1        # 0x14004ffc0
   14001e53e:	je     0x14001e5e4
   14001e544:	lea    rax,[rip+0x1a1ad]        # 0x1400386f8
   14001e54b:	jmp    0x14001e5d1
   14001e550:	test   BYTE PTR [rip+0x31a69],0x1        # 0x14004ffc0
   14001e557:	je     0x14001e572
   14001e559:	and    DWORD PTR [rsp+0x28],0x0
   14001e55e:	lea    rax,[rip+0x1a1eb]        # 0x140038750
   14001e565:	mov    QWORD PTR [rsp+0x20],rax
   14001e56a:	mov    r9,QWORD PTR [rdi]
   14001e56d:	call   0x14001d970
   14001e572:	mov    rdx,QWORD PTR [rsi+0x20]
   14001e576:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001e57d:	call   0x14001c958
   14001e582:	test   BYTE PTR [rip+0x31a37],0x1        # 0x14004ffc0
   14001e589:	je     0x14001e5e4
   14001e58b:	lea    rax,[rip+0x1a1d6]        # 0x140038768
   14001e592:	jmp    0x14001e5d1
   14001e594:	test   BYTE PTR [rip+0x31a25],0x1        # 0x14004ffc0
   14001e59b:	je     0x14001e5b6
   14001e59d:	and    DWORD PTR [rsp+0x28],0x0
   14001e5a2:	lea    rax,[rip+0x1a0e7]        # 0x140038690
   14001e5a9:	mov    QWORD PTR [rsp+0x20],rax
   14001e5ae:	mov    r9,QWORD PTR [rdi]
   14001e5b1:	call   0x14001d970
   14001e5b6:	mov    rdx,rdi
   14001e5b9:	mov    rcx,rsi
   14001e5bc:	call   0x14001e61c
   14001e5c1:	test   BYTE PTR [rip+0x319f8],0x1        # 0x14004ffc0
   14001e5c8:	je     0x14001e5e4
   14001e5ca:	lea    rax,[rip+0x1a0df]        # 0x1400386b0
   14001e5d1:	and    DWORD PTR [rsp+0x28],0x0
   14001e5d6:	mov    QWORD PTR [rsp+0x20],rax
   14001e5db:	mov    r9,QWORD PTR [rdi]
   14001e5de:	call   0x14001d970
   14001e5e3:	nop
   14001e5e4:	test   rbx,rbx
   14001e5e7:	je     0x14001e604
   14001e5e9:	or     eax,0xffffffff
   14001e5ec:	lock xadd DWORD PTR [rbx+0x8],eax
   14001e5f1:	dec    eax
   14001e5f3:	cmp    eax,0x80000000
   14001e5f8:	jne    0x14001e604
   14001e5fa:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e5ff:	call   0x140029c90
   14001e604:	mov    rbx,QWORD PTR [rsp+0x58]
   14001e609:	mov    rsi,QWORD PTR [rsp+0x60]
   14001e60e:	add    rsp,0x40
   14001e612:	pop    rdi
   14001e613:	ret    
   14001e614:	int3   
   14001e615:	int3   
   14001e616:	int3   
   14001e617:	int3   
   14001e618:	int3   
   14001e619:	int3   
   14001e61a:	int3   
   14001e61b:	int3   
   14001e61c:	mov    rax,rsp
   14001e61f:	push   rsi
   14001e620:	push   rdi
   14001e621:	push   r12
   14001e623:	push   r14
   14001e625:	push   r15
   14001e627:	sub    rsp,0x60
   14001e62b:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   14001e633:	mov    QWORD PTR [rax+0x18],rbx
   14001e637:	mov    rax,QWORD PTR [rip+0x2c9e2]        # 0x14004b020
   14001e63e:	xor    rax,rsp
   14001e641:	mov    QWORD PTR [rsp+0x58],rax
   14001e646:	mov    rdi,rcx
   14001e649:	mov    QWORD PTR [rsp+0x20],rcx
   14001e64e:	lea    rbx,[rdx+0x6c]
   14001e652:	add    rcx,0x50
   14001e656:	mov    edx,0x42
   14001e65b:	mov    r9d,edx
   14001e65e:	mov    r8,rbx
   14001e661:	call   QWORD PTR [rip+0x13f59]        # 0x1400325c0
   14001e667:	and    QWORD PTR [rdi+0x86],0x0
   14001e66f:	lea    r14,[rbx+0x42]
   14001e673:	mov    rcx,r14
   14001e676:	call   QWORD PTR [rip+0x139fc]        # 0x140032078
   14001e67c:	test   eax,eax
   14001e67e:	je     0x14001e70b
   14001e684:	mov    rcx,r14
   14001e687:	call   QWORD PTR [rip+0x139f3]        # 0x140032080
   14001e68d:	mov    r15d,eax
   14001e690:	mov    ecx,eax
   14001e692:	call   0x140023f10
   14001e697:	mov    rsi,rax
   14001e69a:	mov    rbx,rax
   14001e69d:	mov    r8,r14
   14001e6a0:	mov    rdx,rax
   14001e6a3:	mov    ecx,r15d
   14001e6a6:	call   QWORD PTR [rip+0x139dc]        # 0x140032088
   14001e6ac:	test   eax,eax
   14001e6ae:	jne    0x14001e6f0
   14001e6b0:	lea    rsi,[rip+0x2c9c1]        # 0x14004b078
   14001e6b7:	mov    rax,QWORD PTR [rip+0x2c9ba]        # 0x14004b078
   14001e6be:	cmp    rax,rsi
   14001e6c1:	je     0x14001e700
   14001e6c3:	test   BYTE PTR [rax+0x1c],0x2
   14001e6c7:	je     0x14001e700
   14001e6c9:	call   QWORD PTR [rip+0x13bb9]        # 0x140032288
   14001e6cf:	mov    r9d,eax
   14001e6d2:	mov    edx,0x1b
   14001e6d7:	lea    r8,[rip+0x1a0ea]        # 0x1400387c8
   14001e6de:	mov    rcx,QWORD PTR [rip+0x2c993]        # 0x14004b078
   14001e6e5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e6e9:	call   0x140001f70
   14001e6ee:	jmp    0x14001e700
   14001e6f0:	xor    ebx,ebx
   14001e6f2:	mov    QWORD PTR [rdi+0x86],rsi
   14001e6f9:	lea    rsi,[rip+0x2c978]        # 0x14004b078
   14001e700:	mov    rcx,rbx
   14001e703:	call   QWORD PTR [rip+0x13ebf]        # 0x1400325c8
   14001e709:	jmp    0x14001e739
   14001e70b:	lea    rsi,[rip+0x2c966]        # 0x14004b078
   14001e712:	mov    rcx,QWORD PTR [rip+0x2c95f]        # 0x14004b078
   14001e719:	cmp    rcx,rsi
   14001e71c:	je     0x14001e739
   14001e71e:	test   BYTE PTR [rcx+0x1c],0x2
   14001e722:	je     0x14001e739
   14001e724:	mov    edx,0x1c
   14001e729:	lea    r8,[rip+0x1a098]        # 0x1400387c8
   14001e730:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e734:	call   0x140001f08
   14001e739:	mov    r12,QWORD PTR [rdi+0x30]
   14001e73d:	lea    r15,[rdi+0x38]
   14001e741:	mov    r14,QWORD PTR [r15]
   14001e744:	test   r14,r14
   14001e747:	je     0x14001e762
   14001e749:	mov    rax,QWORD PTR [r14]
   14001e74c:	mov    rbx,QWORD PTR [rax+0x8]
   14001e750:	mov    rcx,rbx
   14001e753:	call   QWORD PTR [rip+0x13f4f]        # 0x1400326a8
   14001e759:	mov    rcx,r14
   14001e75c:	call   rbx
   14001e75e:	and    QWORD PTR [r15],0x0
   14001e762:	mov    rax,QWORD PTR [r12]
   14001e766:	mov    rbx,QWORD PTR [rax+0x10]
   14001e76a:	mov    rcx,rbx
   14001e76d:	call   QWORD PTR [rip+0x13f35]        # 0x1400326a8
   14001e773:	mov    r8,r15
   14001e776:	mov    rdx,rdi
   14001e779:	mov    rcx,r12
   14001e77c:	call   rbx
   14001e77e:	mov    ebx,eax
   14001e780:	test   eax,eax
   14001e782:	jns    0x14001e7cb
   14001e784:	mov    rcx,QWORD PTR [rip+0x2c8ed]        # 0x14004b078
   14001e78b:	cmp    rcx,rsi
   14001e78e:	je     0x14001e7ae
   14001e790:	test   BYTE PTR [rcx+0x1c],0x1
   14001e794:	je     0x14001e7ae
   14001e796:	mov    edx,0x1d
   14001e79b:	mov    r9d,eax
   14001e79e:	lea    r8,[rip+0x1a023]        # 0x1400387c8
   14001e7a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e7a9:	call   0x140001f70
   14001e7ae:	mov    edx,ebx
   14001e7b0:	lea    rcx,[rsp+0x30]
   14001e7b5:	call   0x140002064
   14001e7ba:	lea    rdx,[rip+0x2a9c7]        # 0x140049188
   14001e7c1:	lea    rcx,[rsp+0x30]
   14001e7c6:	call   0x14002e2da
   14001e7cb:	mov    rsi,QWORD PTR [rdi+0x30]
   14001e7cf:	and    QWORD PTR [rdi+0x30],0x0
   14001e7d4:	test   rsi,rsi
   14001e7d7:	je     0x14001e7ef
   14001e7d9:	mov    rax,QWORD PTR [rsi]
   14001e7dc:	mov    rbx,QWORD PTR [rax+0x8]
   14001e7e0:	mov    rcx,rbx
   14001e7e3:	call   QWORD PTR [rip+0x13ebf]        # 0x1400326a8
   14001e7e9:	mov    rcx,rsi
   14001e7ec:	call   rbx
   14001e7ee:	nop
   14001e7ef:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e7f4:	xor    rcx,rsp
   14001e7f7:	call   0x14002dd00
   14001e7fc:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001e804:	add    rsp,0x60
   14001e808:	pop    r15
   14001e80a:	pop    r14
   14001e80c:	pop    r12
   14001e80e:	pop    rdi
   14001e80f:	pop    rsi
   14001e810:	ret    
   14001e811:	int3   
   14001e812:	int3   
   14001e813:	int3   
   14001e814:	int3   
   14001e815:	int3   
   14001e816:	int3   
   14001e817:	int3   
   14001e818:	mov    QWORD PTR [rsp+0x18],rbx
   14001e81d:	push   rbp
   14001e81e:	push   rsi
   14001e81f:	push   rdi
   14001e820:	sub    rsp,0x50
   14001e824:	mov    rax,QWORD PTR [rip+0x2c7f5]        # 0x14004b020
   14001e82b:	xor    rax,rsp
   14001e82e:	mov    QWORD PTR [rsp+0x48],rax
   14001e833:	mov    rsi,QWORD PTR [rcx+0x38]
   14001e837:	mov    rbp,rdx
   14001e83a:	test   rsi,rsi
   14001e83d:	je     0x14001e893
   14001e83f:	mov    eax,DWORD PTR [rdx+0x28]
   14001e842:	xor    edi,edi
   14001e844:	cmp    DWORD PTR [rcx+0x7a],edi
   14001e847:	je     0x14001e851
   14001e849:	test   eax,eax
   14001e84b:	setne  dil
   14001e84f:	jmp    0x14001e857
   14001e851:	test   eax,eax
   14001e853:	sete   dil
   14001e857:	mov    rax,QWORD PTR [rsi]
   14001e85a:	mov    rbx,QWORD PTR [rax+0x18]
   14001e85e:	mov    rcx,rbx
   14001e861:	call   QWORD PTR [rip+0x13e41]        # 0x1400326a8
   14001e867:	mov    r8,QWORD PTR [rbp+0x1c]
   14001e86b:	mov    edx,edi
   14001e86d:	mov    rcx,rsi
   14001e870:	call   rbx
   14001e872:	mov    ebx,eax
   14001e874:	test   eax,eax
   14001e876:	jns    0x14001e893
   14001e878:	mov    rcx,QWORD PTR [rip+0x2c7f9]        # 0x14004b078
   14001e87f:	lea    rax,[rip+0x2c7f2]        # 0x14004b078
   14001e886:	cmp    rcx,rax
   14001e889:	je     0x14001e8c8
   14001e88b:	test   BYTE PTR [rcx+0x1c],0x1
   14001e88f:	je     0x14001e8c8
   14001e891:	jmp    0x14001e8b0
   14001e893:	mov    rcx,QWORD PTR [rsp+0x48]
   14001e898:	xor    rcx,rsp
   14001e89b:	call   0x14002dd00
   14001e8a0:	mov    rbx,QWORD PTR [rsp+0x80]
   14001e8a8:	add    rsp,0x50
   14001e8ac:	pop    rdi
   14001e8ad:	pop    rsi
   14001e8ae:	pop    rbp
   14001e8af:	ret    
   14001e8b0:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e8b4:	lea    r8,[rip+0x19f0d]        # 0x1400387c8
   14001e8bb:	mov    edx,0x1e
   14001e8c0:	mov    r9d,ebx
   14001e8c3:	call   0x140001f70
   14001e8c8:	mov    edx,ebx
   14001e8ca:	lea    rcx,[rsp+0x20]
   14001e8cf:	call   0x140002064
   14001e8d4:	lea    rdx,[rip+0x2a8ad]        # 0x140049188
   14001e8db:	lea    rcx,[rsp+0x20]
   14001e8e0:	call   0x14002e2da
   14001e8e5:	int3   
   14001e8e6:	int3   
   14001e8e7:	int3   
   14001e8e8:	int3   
   14001e8e9:	int3   
   14001e8ea:	int3   
   14001e8eb:	int3   
   14001e8ec:	mov    QWORD PTR [rsp+0x18],rbx
   14001e8f1:	push   rbp
   14001e8f2:	push   rsi
   14001e8f3:	push   rdi
   14001e8f4:	push   r14
   14001e8f6:	push   r15
   14001e8f8:	sub    rsp,0x60
   14001e8fc:	mov    rax,QWORD PTR [rip+0x2c71d]        # 0x14004b020
   14001e903:	xor    rax,rsp
   14001e906:	mov    QWORD PTR [rsp+0x58],rax
   14001e90b:	mov    r15,QWORD PTR [rcx+0x38]
   14001e90f:	xor    esi,esi
   14001e911:	mov    r14,rdx
   14001e914:	test   r15,r15
   14001e917:	jne    0x14001e966
   14001e919:	mov    rcx,QWORD PTR [rip+0x2c758]        # 0x14004b078
   14001e920:	lea    rax,[rip+0x2c751]        # 0x14004b078
   14001e927:	cmp    rcx,rax
   14001e92a:	je     0x14001e945
   14001e92c:	test   BYTE PTR [rcx+0x1c],0x4
   14001e930:	je     0x14001e945
   14001e932:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e936:	lea    edx,[rsi+0x1f]
   14001e939:	lea    r8,[rip+0x19e88]        # 0x1400387c8
   14001e940:	call   0x140001f08
   14001e945:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e94a:	xor    rcx,rsp
   14001e94d:	call   0x14002dd00
   14001e952:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001e95a:	add    rsp,0x60
   14001e95e:	pop    r15
   14001e960:	pop    r14
   14001e962:	pop    rdi
   14001e963:	pop    rsi
   14001e964:	pop    rbp
   14001e965:	ret    
   14001e966:	mov    ebp,esi
   14001e968:	cmp    DWORD PTR [rcx+0x7a],esi
   14001e96b:	je     0x14001e976
   14001e96d:	cmp    DWORD PTR [rdx+0x28],esi
   14001e970:	setne  bpl
   14001e974:	jmp    0x14001e97d
   14001e976:	cmp    DWORD PTR [rdx+0x28],esi
   14001e979:	sete   bpl
   14001e97d:	cmp    ebp,0x1
   14001e980:	jne    0x14001e98a
   14001e982:	cmp    DWORD PTR [rcx+0xd8],esi
   14001e988:	je     0x14001e997
   14001e98a:	test   ebp,ebp
   14001e98c:	jne    0x14001e9d4
   14001e98e:	cmp    DWORD PTR [rcx+0xd8],0x1
   14001e995:	jne    0x14001e9d4
   14001e997:	mov    rcx,QWORD PTR [rip+0x2c6da]        # 0x14004b078
   14001e99e:	lea    rax,[rip+0x2c6d3]        # 0x14004b078
   14001e9a5:	cmp    rcx,rax
   14001e9a8:	je     0x14001e945
   14001e9aa:	test   BYTE PTR [rcx+0x1c],0x4
   14001e9ae:	je     0x14001e945
   14001e9b0:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e9b4:	lea    r8,[rip+0x19e0d]        # 0x1400387c8
   14001e9bb:	cmp    ebp,0x1
   14001e9be:	mov    edx,0x20
   14001e9c3:	sete   sil
   14001e9c7:	mov    r9d,esi
   14001e9ca:	call   0x140001f70
   14001e9cf:	jmp    0x14001e945
   14001e9d4:	mov    rax,QWORD PTR [r15]
   14001e9d7:	mov    rdi,QWORD PTR [rax+0x10]
   14001e9db:	mov    rcx,rdi
   14001e9de:	call   QWORD PTR [rip+0x13cc4]        # 0x1400326a8
   14001e9e4:	mov    rax,QWORD PTR [r14+0x1c]
   14001e9e8:	lea    r8,[r14+0x6c]
   14001e9ec:	mov    r9d,DWORD PTR [r14+0x24]
   14001e9f0:	mov    edx,ebp
   14001e9f2:	mov    rcx,r15
   14001e9f5:	mov    QWORD PTR [rsp+0x20],rax
   14001e9fa:	call   rdi
   14001e9fc:	mov    ebx,eax
   14001e9fe:	test   eax,eax
   14001ea00:	jns    0x14001e945
   14001ea06:	mov    rcx,QWORD PTR [rip+0x2c66b]        # 0x14004b078
   14001ea0d:	lea    rax,[rip+0x2c664]        # 0x14004b078
   14001ea14:	cmp    rcx,rax
   14001ea17:	je     0x14001ea37
   14001ea19:	test   BYTE PTR [rcx+0x1c],0x1
   14001ea1d:	je     0x14001ea37
   14001ea1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ea23:	lea    r8,[rip+0x19d9e]        # 0x1400387c8
   14001ea2a:	mov    edx,0x21
   14001ea2f:	mov    r9d,ebx
   14001ea32:	call   0x140001f70
   14001ea37:	mov    edx,ebx
   14001ea39:	lea    rcx,[rsp+0x30]
   14001ea3e:	call   0x140002064
   14001ea43:	lea    rdx,[rip+0x2a73e]        # 0x140049188
   14001ea4a:	lea    rcx,[rsp+0x30]
   14001ea4f:	call   0x14002e2da
   14001ea54:	int3   
   14001ea55:	int3   
   14001ea56:	int3   
   14001ea57:	int3   
   14001ea58:	int3   
   14001ea59:	int3   
   14001ea5a:	int3   
   14001ea5b:	int3   
   14001ea5c:	int3   
   14001ea5d:	int3   
   14001ea5e:	int3   
   14001ea5f:	int3   
   14001ea60:	mov    QWORD PTR [rsp+0x10],rbx
   14001ea65:	push   rbp
   14001ea66:	push   rsi
   14001ea67:	push   rdi
   14001ea68:	sub    rsp,0xa0
   14001ea6f:	mov    rax,QWORD PTR [rip+0x2c5aa]        # 0x14004b020
   14001ea76:	xor    rax,rsp
   14001ea79:	mov    QWORD PTR [rsp+0x90],rax
   14001ea81:	mov    edi,edx
   14001ea83:	mov    rbx,r8
   14001ea86:	xor    edx,edx
   14001ea88:	mov    rbp,rcx
   14001ea8b:	lea    rcx,[rsp+0x28]
   14001ea90:	mov    esi,r9d
   14001ea93:	lea    r8d,[rdx+0x64]
   14001ea97:	call   0x14002e2ce
   14001ea9c:	and    DWORD PTR [rsp+0x30],0x0
   14001eaa1:	mov    rax,QWORD PTR [rbp+0x20]
   14001eaa5:	mov    QWORD PTR [rsp+0x20],rax
   14001eaaa:	mov    QWORD PTR [rsp+0x34],rbx
   14001eaaf:	mov    DWORD PTR [rsp+0x44],esi
   14001eab3:	cmp    edi,0x1
   14001eab6:	jne    0x14001eabd
   14001eab8:	mov    eax,DWORD PTR [rbp+0x7a]
   14001eabb:	jmp    0x14001eac5
   14001eabd:	xor    eax,eax
   14001eabf:	cmp    DWORD PTR [rbp+0x7a],eax
   14001eac2:	sete   al
   14001eac5:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001eacc:	lea    rdx,[rsp+0x20]
   14001ead1:	mov    DWORD PTR [rsp+0x48],eax
   14001ead5:	call   0x14001a1e0
   14001eada:	mov    ebx,eax
   14001eadc:	test   eax,eax
   14001eade:	jns    0x14001eb15
   14001eae0:	mov    rcx,QWORD PTR [rip+0x2c591]        # 0x14004b078
   14001eae7:	lea    rax,[rip+0x2c58a]        # 0x14004b078
   14001eaee:	cmp    rcx,rax
   14001eaf1:	je     0x14001eb11
   14001eaf3:	test   BYTE PTR [rcx+0x1c],0x1
   14001eaf7:	je     0x14001eb11
   14001eaf9:	mov    rcx,QWORD PTR [rcx+0x10]
   14001eafd:	lea    r8,[rip+0x19cc4]        # 0x1400387c8
   14001eb04:	mov    edx,0x22
   14001eb09:	mov    r9d,ebx
   14001eb0c:	call   0x140001f70
   14001eb11:	mov    eax,ebx
   14001eb13:	jmp    0x14001eb17
   14001eb15:	xor    eax,eax
   14001eb17:	mov    rcx,QWORD PTR [rsp+0x90]
   14001eb1f:	xor    rcx,rsp
   14001eb22:	call   0x14002dd00
   14001eb27:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001eb2f:	add    rsp,0xa0
   14001eb36:	pop    rdi
   14001eb37:	pop    rsi
   14001eb38:	pop    rbp
   14001eb39:	ret    
   14001eb3a:	int3   
   14001eb3b:	int3   
   14001eb3c:	int3   
   14001eb3d:	int3   
   14001eb3e:	int3   
   14001eb3f:	int3   
   14001eb40:	mov    QWORD PTR [rsp+0x10],rbx
   14001eb45:	push   rbp
   14001eb46:	push   rsi
   14001eb47:	push   rdi
   14001eb48:	sub    rsp,0xa0
   14001eb4f:	mov    rax,QWORD PTR [rip+0x2c4ca]        # 0x14004b020
   14001eb56:	xor    rax,rsp
   14001eb59:	mov    QWORD PTR [rsp+0x90],rax
   14001eb61:	mov    edi,edx
   14001eb63:	mov    rbx,r8
   14001eb66:	xor    edx,edx
   14001eb68:	mov    rbp,rcx
   14001eb6b:	lea    rcx,[rsp+0x28]
   14001eb70:	mov    esi,r9d
   14001eb73:	lea    r8d,[rdx+0x64]
   14001eb77:	call   0x14002e2ce
   14001eb7c:	and    QWORD PTR [rsp+0x34],0x0
   14001eb82:	mov    rax,QWORD PTR [rbp+0x20]
   14001eb86:	mov    QWORD PTR [rsp+0x20],rax
   14001eb8b:	mov    DWORD PTR [rsp+0x30],0x1
   14001eb93:	mov    QWORD PTR [rsp+0x3c],rbx
   14001eb98:	mov    DWORD PTR [rsp+0x44],esi
   14001eb9c:	cmp    edi,0x1
   14001eb9f:	jne    0x14001eba6
   14001eba1:	mov    eax,DWORD PTR [rbp+0x7a]
   14001eba4:	jmp    0x14001ebae
   14001eba6:	xor    eax,eax
   14001eba8:	cmp    DWORD PTR [rbp+0x7a],eax
   14001ebab:	sete   al
   14001ebae:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001ebb5:	lea    rdx,[rsp+0x20]
   14001ebba:	mov    DWORD PTR [rsp+0x48],eax
   14001ebbe:	call   0x14001a1e0
   14001ebc3:	mov    ebx,eax
   14001ebc5:	test   eax,eax
   14001ebc7:	jns    0x14001ebfe
   14001ebc9:	mov    rcx,QWORD PTR [rip+0x2c4a8]        # 0x14004b078
   14001ebd0:	lea    rax,[rip+0x2c4a1]        # 0x14004b078
   14001ebd7:	cmp    rcx,rax
   14001ebda:	je     0x14001ebfa
   14001ebdc:	test   BYTE PTR [rcx+0x1c],0x1
   14001ebe0:	je     0x14001ebfa
   14001ebe2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ebe6:	lea    r8,[rip+0x19bdb]        # 0x1400387c8
   14001ebed:	mov    edx,0x23
   14001ebf2:	mov    r9d,ebx
   14001ebf5:	call   0x140001f70
   14001ebfa:	mov    eax,ebx
   14001ebfc:	jmp    0x14001ec00
   14001ebfe:	xor    eax,eax
   14001ec00:	mov    rcx,QWORD PTR [rsp+0x90]
   14001ec08:	xor    rcx,rsp
   14001ec0b:	call   0x14002dd00
   14001ec10:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001ec18:	add    rsp,0xa0
   14001ec1f:	pop    rdi
   14001ec20:	pop    rsi
   14001ec21:	pop    rbp
   14001ec22:	ret    
   14001ec23:	int3   
   14001ec24:	int3   
   14001ec25:	int3   
   14001ec26:	int3   
   14001ec27:	int3   
   14001ec28:	int3   
   14001ec29:	int3   
   14001ec2a:	int3   
   14001ec2b:	int3   
   14001ec2c:	int3   
   14001ec2d:	int3   
   14001ec2e:	int3   
   14001ec2f:	int3   
   14001ec30:	mov    QWORD PTR [rsp+0x10],rbx
   14001ec35:	push   rbp
   14001ec36:	push   rsi
   14001ec37:	push   rdi
   14001ec38:	sub    rsp,0xa0
   14001ec3f:	mov    rax,QWORD PTR [rip+0x2c3da]        # 0x14004b020
   14001ec46:	xor    rax,rsp
   14001ec49:	mov    QWORD PTR [rsp+0x90],rax
   14001ec51:	mov    edi,edx
   14001ec53:	mov    rbx,r8
   14001ec56:	xor    edx,edx
   14001ec58:	mov    rbp,rcx
   14001ec5b:	lea    rcx,[rsp+0x28]
   14001ec60:	mov    esi,r9d
   14001ec63:	lea    r8d,[rdx+0x64]
   14001ec67:	call   0x14002e2ce
   14001ec6c:	and    QWORD PTR [rsp+0x34],0x0
   14001ec72:	mov    rax,QWORD PTR [rbp+0x20]
   14001ec76:	mov    QWORD PTR [rsp+0x20],rax
   14001ec7b:	mov    DWORD PTR [rsp+0x30],0x2
   14001ec83:	mov    QWORD PTR [rsp+0x3c],rbx
   14001ec88:	mov    DWORD PTR [rsp+0x44],esi
   14001ec8c:	cmp    edi,0x1
   14001ec8f:	jne    0x14001ec96
   14001ec91:	mov    eax,DWORD PTR [rbp+0x7a]
   14001ec94:	jmp    0x14001ec9e
   14001ec96:	xor    eax,eax
   14001ec98:	cmp    DWORD PTR [rbp+0x7a],eax
   14001ec9b:	sete   al
   14001ec9e:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001eca5:	lea    rdx,[rsp+0x20]
   14001ecaa:	mov    DWORD PTR [rsp+0x48],eax
   14001ecae:	call   0x14001a1e0
   14001ecb3:	mov    ebx,eax
   14001ecb5:	test   eax,eax
   14001ecb7:	jns    0x14001ecee
   14001ecb9:	mov    rcx,QWORD PTR [rip+0x2c3b8]        # 0x14004b078
   14001ecc0:	lea    rax,[rip+0x2c3b1]        # 0x14004b078
   14001ecc7:	cmp    rcx,rax
   14001ecca:	je     0x14001ecea
   14001eccc:	test   BYTE PTR [rcx+0x1c],0x1
   14001ecd0:	je     0x14001ecea
   14001ecd2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ecd6:	lea    r8,[rip+0x19aeb]        # 0x1400387c8
   14001ecdd:	mov    edx,0x24
   14001ece2:	mov    r9d,ebx
   14001ece5:	call   0x140001f70
   14001ecea:	mov    eax,ebx
   14001ecec:	jmp    0x14001ecf0
   14001ecee:	xor    eax,eax
   14001ecf0:	mov    rcx,QWORD PTR [rsp+0x90]
   14001ecf8:	xor    rcx,rsp
   14001ecfb:	call   0x14002dd00
   14001ed00:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001ed08:	add    rsp,0xa0
   14001ed0f:	pop    rdi
   14001ed10:	pop    rsi
   14001ed11:	pop    rbp
   14001ed12:	ret    
   14001ed13:	int3   
   14001ed14:	int3   
   14001ed15:	int3   
   14001ed16:	int3   
   14001ed17:	int3   
   14001ed18:	int3   
   14001ed19:	int3   
   14001ed1a:	int3   
   14001ed1b:	int3   
   14001ed1c:	int3   
   14001ed1d:	int3   
   14001ed1e:	int3   
   14001ed1f:	int3   
   14001ed20:	mov    QWORD PTR [rsp+0x10],rbx
   14001ed25:	push   rdi
   14001ed26:	sub    rsp,0xa0
   14001ed2d:	mov    rax,QWORD PTR [rip+0x2c2ec]        # 0x14004b020
   14001ed34:	xor    rax,rsp
   14001ed37:	mov    QWORD PTR [rsp+0x90],rax
   14001ed3f:	mov    ebx,edx
   14001ed41:	mov    rdi,rcx
   14001ed44:	xor    edx,edx
   14001ed46:	lea    rcx,[rsp+0x28]
   14001ed4b:	lea    r8d,[rdx+0x64]
   14001ed4f:	call   0x14002e2ce
   14001ed54:	mov    rax,QWORD PTR [rdi+0x20]
   14001ed58:	mov    QWORD PTR [rsp+0x20],rax
   14001ed5d:	mov    DWORD PTR [rsp+0x30],0x6
   14001ed65:	cmp    ebx,0x1
   14001ed68:	jne    0x14001ed6f
   14001ed6a:	mov    eax,DWORD PTR [rdi+0x7a]
   14001ed6d:	jmp    0x14001ed77
   14001ed6f:	xor    eax,eax
   14001ed71:	cmp    DWORD PTR [rdi+0x7a],eax
   14001ed74:	sete   al
   14001ed77:	mov    rcx,QWORD PTR [rdi+0xb0]
   14001ed7e:	lea    rdx,[rsp+0x20]
   14001ed83:	and    QWORD PTR [rsp+0x34],0x0
   14001ed89:	and    DWORD PTR [rsp+0x44],0x0
   14001ed8e:	mov    DWORD PTR [rsp+0x48],eax
   14001ed92:	call   0x14001a1e0
   14001ed97:	mov    ebx,eax
   14001ed99:	test   eax,eax
   14001ed9b:	jns    0x14001edd2
   14001ed9d:	mov    rcx,QWORD PTR [rip+0x2c2d4]        # 0x14004b078
   14001eda4:	lea    rax,[rip+0x2c2cd]        # 0x14004b078
   14001edab:	cmp    rcx,rax
   14001edae:	je     0x14001edce
   14001edb0:	test   BYTE PTR [rcx+0x1c],0x1
   14001edb4:	je     0x14001edce
   14001edb6:	mov    rcx,QWORD PTR [rcx+0x10]
   14001edba:	lea    r8,[rip+0x19a07]        # 0x1400387c8
   14001edc1:	mov    edx,0x25
   14001edc6:	mov    r9d,ebx
   14001edc9:	call   0x140001f70
   14001edce:	mov    eax,ebx
   14001edd0:	jmp    0x14001edd4
   14001edd2:	xor    eax,eax
   14001edd4:	mov    rcx,QWORD PTR [rsp+0x90]
   14001eddc:	xor    rcx,rsp
   14001eddf:	call   0x14002dd00
   14001ede4:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001edec:	add    rsp,0xa0
   14001edf3:	pop    rdi
   14001edf4:	ret    
   14001edf5:	int3   
   14001edf6:	int3   
   14001edf7:	int3   
   14001edf8:	int3   
   14001edf9:	int3   
   14001edfa:	int3   
   14001edfb:	int3   
   14001edfc:	mov    QWORD PTR [rsp+0x18],rbx
   14001ee01:	push   rdi
   14001ee02:	sub    rsp,0xa0
   14001ee09:	mov    rax,QWORD PTR [rip+0x2c210]        # 0x14004b020
   14001ee10:	xor    rax,rsp
   14001ee13:	mov    QWORD PTR [rsp+0x90],rax
   14001ee1b:	mov    rbx,rdx
   14001ee1e:	mov    rdi,rcx
   14001ee21:	xor    edx,edx
   14001ee23:	lea    rcx,[rsp+0x28]
   14001ee28:	lea    r8d,[rdx+0x64]
   14001ee2c:	call   0x14002e2ce
   14001ee31:	and    QWORD PTR [rsp+0x34],0x0
   14001ee37:	lea    rdx,[rsp+0x20]
   14001ee3c:	and    DWORD PTR [rsp+0x44],0x0
   14001ee41:	mov    rcx,rdi
   14001ee44:	mov    QWORD PTR [rsp+0x20],rbx
   14001ee49:	mov    DWORD PTR [rsp+0x30],0x5
   14001ee51:	call   0x14001a1e0
   14001ee56:	mov    ebx,eax
   14001ee58:	test   eax,eax
   14001ee5a:	jns    0x14001ee91
   14001ee5c:	mov    rcx,QWORD PTR [rip+0x2c215]        # 0x14004b078
   14001ee63:	lea    rax,[rip+0x2c20e]        # 0x14004b078
   14001ee6a:	cmp    rcx,rax
   14001ee6d:	je     0x14001ee8d
   14001ee6f:	test   BYTE PTR [rcx+0x1c],0x1
   14001ee73:	je     0x14001ee8d
   14001ee75:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ee79:	lea    r8,[rip+0x19948]        # 0x1400387c8
   14001ee80:	mov    edx,0x26
   14001ee85:	mov    r9d,ebx
   14001ee88:	call   0x140001f70
   14001ee8d:	mov    eax,ebx
   14001ee8f:	jmp    0x14001ee93
   14001ee91:	xor    eax,eax
   14001ee93:	mov    rcx,QWORD PTR [rsp+0x90]
   14001ee9b:	xor    rcx,rsp
   14001ee9e:	call   0x14002dd00
   14001eea3:	mov    rbx,QWORD PTR [rsp+0xc0]
   14001eeab:	add    rsp,0xa0
   14001eeb2:	pop    rdi
   14001eeb3:	ret    
   14001eeb4:	int3   
   14001eeb5:	int3   
   14001eeb6:	int3   
   14001eeb7:	int3   
   14001eeb8:	int3   
   14001eeb9:	int3   
   14001eeba:	int3   
   14001eebb:	int3   
   14001eebc:	int3   
   14001eebd:	int3   
   14001eebe:	int3   
   14001eebf:	int3   
   14001eec0:	mov    rdx,QWORD PTR [rcx+0x20]
   14001eec4:	mov    DWORD PTR [rcx+0xc8],0x1
   14001eece:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001eed5:	jmp    0x14001edfc
   14001eeda:	int3   
   14001eedb:	int3   
   14001eedc:	int3   
   14001eedd:	int3   
   14001eede:	int3   
   14001eedf:	int3   
   14001eee0:	xor    r8d,r8d
   14001eee3:	test   rdx,rdx
   14001eee6:	jne    0x14001eeee
   14001eee8:	mov    eax,0x80070057
   14001eeed:	ret    
   14001eeee:	mov    eax,DWORD PTR [rcx+0x18]
   14001eef1:	test   eax,eax
   14001eef3:	jne    0x14001eefe
   14001eef5:	mov    DWORD PTR [rcx+0x18],0x1
   14001eefc:	jmp    0x14001ef02
   14001eefe:	lock inc DWORD PTR [rcx+0x18]
   14001ef02:	test   rcx,rcx
   14001ef05:	je     0x14001ef0b
   14001ef07:	lea    r8,[rcx+0x8]
   14001ef0b:	mov    QWORD PTR [rdx],r8
   14001ef0e:	xor    eax,eax
   14001ef10:	ret    
   14001ef11:	int3   
   14001ef12:	int3   
   14001ef13:	int3   
   14001ef14:	int3   
   14001ef15:	int3   
   14001ef16:	int3   
   14001ef17:	int3   
   14001ef18:	int3   
   14001ef19:	int3   
   14001ef1a:	int3   
   14001ef1b:	int3   
   14001ef1c:	int3   
   14001ef1d:	int3   
   14001ef1e:	int3   
   14001ef1f:	int3   
   14001ef20:	mov    rdx,QWORD PTR [rcx+0x20]
   14001ef24:	mov    DWORD PTR [rcx+0xc8],0x1
   14001ef2e:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001ef35:	jmp    0x14001ef40
   14001ef3a:	int3   
   14001ef3b:	int3   
   14001ef3c:	int3   
   14001ef3d:	int3   
   14001ef3e:	int3   
   14001ef3f:	int3   
   14001ef40:	mov    QWORD PTR [rsp+0x18],rbx
   14001ef45:	push   rdi
   14001ef46:	sub    rsp,0xa0
   14001ef4d:	mov    rax,QWORD PTR [rip+0x2c0cc]        # 0x14004b020
   14001ef54:	xor    rax,rsp
   14001ef57:	mov    QWORD PTR [rsp+0x90],rax
   14001ef5f:	mov    rbx,rdx
   14001ef62:	mov    rdi,rcx
   14001ef65:	xor    edx,edx
   14001ef67:	lea    rcx,[rsp+0x28]
   14001ef6c:	lea    r8d,[rdx+0x64]
   14001ef70:	call   0x14002e2ce
   14001ef75:	and    QWORD PTR [rsp+0x34],0x0
   14001ef7b:	lea    rdx,[rsp+0x20]
   14001ef80:	and    DWORD PTR [rsp+0x44],0x0
   14001ef85:	mov    rcx,rdi
   14001ef88:	mov    QWORD PTR [rsp+0x20],rbx
   14001ef8d:	mov    DWORD PTR [rsp+0x30],0x3
   14001ef95:	call   0x14001a1e0
   14001ef9a:	mov    ebx,eax
   14001ef9c:	test   eax,eax
   14001ef9e:	jns    0x14001efd5
   14001efa0:	mov    rcx,QWORD PTR [rip+0x2c0d1]        # 0x14004b078
   14001efa7:	lea    rax,[rip+0x2c0ca]        # 0x14004b078
   14001efae:	cmp    rcx,rax
   14001efb1:	je     0x14001efd1
   14001efb3:	test   BYTE PTR [rcx+0x1c],0x1
   14001efb7:	je     0x14001efd1
   14001efb9:	mov    rcx,QWORD PTR [rcx+0x10]
   14001efbd:	lea    r8,[rip+0x19804]        # 0x1400387c8
   14001efc4:	mov    edx,0x27
   14001efc9:	mov    r9d,ebx
   14001efcc:	call   0x140001f70
   14001efd1:	mov    eax,ebx
   14001efd3:	jmp    0x14001efd7
   14001efd5:	xor    eax,eax
   14001efd7:	mov    rcx,QWORD PTR [rsp+0x90]
   14001efdf:	xor    rcx,rsp
   14001efe2:	call   0x14002dd00
   14001efe7:	mov    rbx,QWORD PTR [rsp+0xc0]
   14001efef:	add    rsp,0xa0
   14001eff6:	pop    rdi
   14001eff7:	ret    
   14001eff8:	int3   
   14001eff9:	int3   
   14001effa:	int3   
   14001effb:	int3   
   14001effc:	int3   
   14001effd:	int3   
   14001effe:	int3   
   14001efff:	int3   
   14001f000:	sub    rsp,0x38
   14001f004:	mov    r10,rcx
   14001f007:	test   rdx,rdx
   14001f00a:	jne    0x14001f013
   14001f00c:	mov    eax,0x80070057
   14001f011:	jmp    0x14001f03f
   14001f013:	lea    rax,[rcx+0x48]
   14001f017:	mov    r9,rdx
   14001f01a:	movzx  edx,WORD PTR [r10+0x6c]
   14001f01f:	lea    r8,[rsp+0x20]
   14001f024:	add    rcx,0x58
   14001f028:	cmp    DWORD PTR [r10+0x72],0x0
   14001f02d:	cmovne rcx,rax
   14001f031:	movups xmm0,XMMWORD PTR [rcx]
   14001f034:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f03a:	call   0x14001f04c
   14001f03f:	add    rsp,0x38
   14001f043:	ret    
   14001f044:	int3   
   14001f045:	int3   
   14001f046:	int3   
   14001f047:	int3   
   14001f048:	int3   
   14001f049:	int3   
   14001f04a:	int3   
   14001f04b:	int3   
   14001f04c:	rex push rbx
   14001f04e:	sub    rsp,0xd0
   14001f055:	mov    rax,QWORD PTR [rip+0x2bfc4]        # 0x14004b020
   14001f05c:	xor    rax,rsp
   14001f05f:	mov    QWORD PTR [rsp+0xc0],rax
   14001f067:	and    QWORD PTR [rsp+0x20],0x0
   14001f06d:	mov    rbx,r9
   14001f070:	and    QWORD PTR [rsp+0x28],0x0
   14001f076:	movzx  eax,dx
   14001f079:	cmp    eax,0x2
   14001f07c:	je     0x14001f0c0
   14001f07e:	cmp    eax,0x17
   14001f081:	je     0x14001f08d
   14001f083:	mov    eax,0x80070057
   14001f088:	jmp    0x14001f155
   14001f08d:	lea    rax,[rsp+0x20]
   14001f092:	cmp    rax,r8
   14001f095:	jbe    0x14001f0a5
   14001f097:	lea    rax,[r8+0x10]
   14001f09b:	lea    rcx,[rsp+0x20]
   14001f0a0:	cmp    rcx,rax
   14001f0a3:	jb     0x14001f0f9
   14001f0a5:	xor    ecx,ecx
   14001f0a7:	add    r8,0xf
   14001f0ab:	mov    al,BYTE PTR [r8]
   14001f0ae:	dec    r8
   14001f0b1:	mov    BYTE PTR [rsp+rcx*1+0x20],al
   14001f0b5:	inc    rcx
   14001f0b8:	cmp    rcx,0x10
   14001f0bc:	jb     0x14001f0ab
   14001f0be:	jmp    0x14001f0f9
   14001f0c0:	mov    ecx,DWORD PTR [r8]
   14001f0c3:	mov    r9d,0xff00
   14001f0c9:	and    QWORD PTR [rsp+0x28],0x0
   14001f0cf:	mov    edx,ecx
   14001f0d1:	shl    edx,0x10
   14001f0d4:	mov    eax,ecx
   14001f0d6:	and    eax,r9d
   14001f0d9:	shr    ecx,0x8
   14001f0dc:	or     edx,eax
   14001f0de:	mov    DWORD PTR [rsp+0x24],0xffff
   14001f0e6:	movzx  eax,BYTE PTR [r8+0x3]
   14001f0eb:	and    ecx,r9d
   14001f0ee:	shl    edx,0x8
   14001f0f1:	or     edx,ecx
   14001f0f3:	or     edx,eax
   14001f0f5:	mov    DWORD PTR [rsp+0x20],edx
   14001f0f9:	lea    rdx,[rsp+0x20]
   14001f0fe:	lea    rcx,[rsp+0x30]
   14001f103:	call   0x14001f8a8
   14001f108:	lea    rcx,[rsp+0x30]
   14001f10d:	call   QWORD PTR [rip+0x1324d]        # 0x140032360
   14001f113:	test   rax,rax
   14001f116:	jne    0x14001f150
   14001f118:	mov    rcx,QWORD PTR [rip+0x2bf59]        # 0x14004b078
   14001f11f:	lea    rdx,[rip+0x2bf52]        # 0x14004b078
   14001f126:	mov    ebx,0x8007000e
   14001f12b:	cmp    rcx,rdx
   14001f12e:	je     0x14001f14c
   14001f130:	test   BYTE PTR [rcx+0x1c],0x1
   14001f134:	je     0x14001f14c
   14001f136:	mov    rcx,QWORD PTR [rcx+0x10]
   14001f13a:	lea    edx,[rax+0x28]
   14001f13d:	mov    r9d,ebx
   14001f140:	lea    r8,[rip+0x19681]        # 0x1400387c8
   14001f147:	call   0x140001f70
   14001f14c:	mov    eax,ebx
   14001f14e:	jmp    0x14001f155
   14001f150:	mov    QWORD PTR [rbx],rax
   14001f153:	xor    eax,eax
   14001f155:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001f15d:	xor    rcx,rsp
   14001f160:	call   0x14002dd00
   14001f165:	add    rsp,0xd0
   14001f16c:	pop    rbx
   14001f16d:	ret    
   14001f16e:	int3   
   14001f16f:	int3   
   14001f170:	int3   
   14001f171:	int3   
   14001f172:	int3   
   14001f173:	int3   
   14001f174:	int3   
   14001f175:	int3   
   14001f176:	int3   
   14001f177:	int3   
   14001f178:	int3   
   14001f179:	int3   
   14001f17a:	int3   
   14001f17b:	int3   
   14001f17c:	int3   
   14001f17d:	int3   
   14001f17e:	int3   
   14001f17f:	int3   
   14001f180:	test   rdx,rdx
   14001f183:	jne    0x14001f18b
   14001f185:	mov    eax,0x80070057
   14001f18a:	ret    
   14001f18b:	cmp    DWORD PTR [rcx+0x72],0x0
   14001f18f:	je     0x14001f197
   14001f191:	movzx  eax,WORD PTR [rcx+0x68]
   14001f195:	jmp    0x14001f19b
   14001f197:	movzx  eax,WORD PTR [rcx+0x6a]
   14001f19b:	mov    WORD PTR [rdx],ax
   14001f19e:	xor    eax,eax
   14001f1a0:	ret    
   14001f1a1:	int3   
   14001f1a2:	int3   
   14001f1a3:	int3   
   14001f1a4:	int3   
   14001f1a5:	int3   
   14001f1a6:	int3   
   14001f1a7:	int3   
   14001f1a8:	int3   
   14001f1a9:	int3   
   14001f1aa:	int3   
   14001f1ab:	int3   
   14001f1ac:	int3   
   14001f1ad:	int3   
   14001f1ae:	int3   
   14001f1af:	int3   
   14001f1b0:	sub    rsp,0x38
   14001f1b4:	mov    r10,rcx
   14001f1b7:	test   rdx,rdx
   14001f1ba:	jne    0x14001f1c3
   14001f1bc:	mov    eax,0x80070057
   14001f1c1:	jmp    0x14001f1ef
   14001f1c3:	lea    rax,[rcx+0x58]
   14001f1c7:	mov    r9,rdx
   14001f1ca:	movzx  edx,WORD PTR [r10+0x6c]
   14001f1cf:	lea    r8,[rsp+0x20]
   14001f1d4:	add    rcx,0x48
   14001f1d8:	cmp    DWORD PTR [r10+0x72],0x0
   14001f1dd:	cmovne rcx,rax
   14001f1e1:	movups xmm0,XMMWORD PTR [rcx]
   14001f1e4:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f1ea:	call   0x14001f04c
   14001f1ef:	add    rsp,0x38
   14001f1f3:	ret    
   14001f1f4:	int3   
   14001f1f5:	int3   
   14001f1f6:	int3   
   14001f1f7:	int3   
   14001f1f8:	int3   
   14001f1f9:	int3   
   14001f1fa:	int3   
   14001f1fb:	int3   
   14001f1fc:	int3   
   14001f1fd:	int3   
   14001f1fe:	int3   
   14001f1ff:	int3   
   14001f200:	mov    QWORD PTR [rsp+0x20],rbx
   14001f205:	push   rdi
   14001f206:	sub    rsp,0x40
   14001f20a:	mov    rax,QWORD PTR [rip+0x2be0f]        # 0x14004b020
   14001f211:	xor    rax,rsp
   14001f214:	mov    QWORD PTR [rsp+0x30],rax
   14001f219:	mov    rbx,rdx
   14001f21c:	mov    rdi,rcx
   14001f21f:	test   rdx,rdx
   14001f222:	je     0x14001f286
   14001f224:	mov    edx,0x10
   14001f229:	cmp    r8d,edx
   14001f22c:	jne    0x14001f286
   14001f22e:	lea    rax,[rcx+0x58]
   14001f232:	mov    r9d,edx
   14001f235:	add    rcx,0x48
   14001f239:	lea    r8,[rsp+0x20]
   14001f23e:	cmp    DWORD PTR [rdi+0x72],0x0
   14001f242:	cmovne rcx,rax
   14001f246:	movups xmm0,XMMWORD PTR [rcx]
   14001f249:	mov    rcx,rbx
   14001f24c:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f252:	call   QWORD PTR [rip+0x13368]        # 0x1400325c0
   14001f258:	cmp    WORD PTR [rdi+0x6c],0x2
   14001f25d:	jne    0x14001f282
   14001f25f:	mov    DWORD PTR [rbx+0x8],0xffff0000
   14001f266:	mov    al,BYTE PTR [rbx]
   14001f268:	mov    BYTE PTR [rbx+0xc],al
   14001f26b:	mov    al,BYTE PTR [rbx+0x1]
   14001f26e:	mov    BYTE PTR [rbx+0xd],al
   14001f271:	mov    al,BYTE PTR [rbx+0x2]
   14001f274:	mov    BYTE PTR [rbx+0xe],al
   14001f277:	mov    al,BYTE PTR [rbx+0x3]
   14001f27a:	mov    BYTE PTR [rbx+0xf],al
   14001f27d:	xor    eax,eax
   14001f27f:	mov    QWORD PTR [rbx],rax
   14001f282:	xor    eax,eax
   14001f284:	jmp    0x14001f28b
   14001f286:	mov    eax,0x80070057
   14001f28b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f290:	xor    rcx,rsp
   14001f293:	call   0x14002dd00
   14001f298:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f29d:	add    rsp,0x40
   14001f2a1:	pop    rdi
   14001f2a2:	ret    
   14001f2a3:	int3   
   14001f2a4:	int3   
   14001f2a5:	int3   
   14001f2a6:	int3   
   14001f2a7:	int3   
   14001f2a8:	int3   
   14001f2a9:	int3   
   14001f2aa:	int3   
   14001f2ab:	int3   
   14001f2ac:	int3   
   14001f2ad:	int3   
   14001f2ae:	int3   
   14001f2af:	int3   
   14001f2b0:	mov    QWORD PTR [rsp+0x20],rbx
   14001f2b5:	push   rdi
   14001f2b6:	sub    rsp,0x40
   14001f2ba:	mov    rax,QWORD PTR [rip+0x2bd5f]        # 0x14004b020
   14001f2c1:	xor    rax,rsp
   14001f2c4:	mov    QWORD PTR [rsp+0x30],rax
   14001f2c9:	mov    rbx,rdx
   14001f2cc:	mov    rdi,rcx
   14001f2cf:	test   rdx,rdx
   14001f2d2:	je     0x14001f336
   14001f2d4:	mov    edx,0x10
   14001f2d9:	cmp    r8d,edx
   14001f2dc:	jne    0x14001f336
   14001f2de:	lea    rax,[rcx+0x48]
   14001f2e2:	mov    r9d,edx
   14001f2e5:	add    rcx,0x58
   14001f2e9:	lea    r8,[rsp+0x20]
   14001f2ee:	cmp    DWORD PTR [rdi+0x72],0x0
   14001f2f2:	cmovne rcx,rax
   14001f2f6:	movups xmm0,XMMWORD PTR [rcx]
   14001f2f9:	mov    rcx,rbx
   14001f2fc:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f302:	call   QWORD PTR [rip+0x132b8]        # 0x1400325c0
   14001f308:	cmp    WORD PTR [rdi+0x6c],0x2
   14001f30d:	jne    0x14001f332
   14001f30f:	mov    DWORD PTR [rbx+0x8],0xffff0000
   14001f316:	mov    al,BYTE PTR [rbx]
   14001f318:	mov    BYTE PTR [rbx+0xc],al
   14001f31b:	mov    al,BYTE PTR [rbx+0x1]
   14001f31e:	mov    BYTE PTR [rbx+0xd],al
   14001f321:	mov    al,BYTE PTR [rbx+0x2]
   14001f324:	mov    BYTE PTR [rbx+0xe],al
   14001f327:	mov    al,BYTE PTR [rbx+0x3]
   14001f32a:	mov    BYTE PTR [rbx+0xf],al
   14001f32d:	xor    eax,eax
   14001f32f:	mov    QWORD PTR [rbx],rax
   14001f332:	xor    eax,eax
   14001f334:	jmp    0x14001f33b
   14001f336:	mov    eax,0x80070057
   14001f33b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f340:	xor    rcx,rsp
   14001f343:	call   0x14002dd00
   14001f348:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f34d:	add    rsp,0x40
   14001f351:	pop    rdi
   14001f352:	ret    
   14001f353:	int3   
   14001f354:	int3   
   14001f355:	int3   
   14001f356:	int3   
   14001f357:	int3   
   14001f358:	int3   
   14001f359:	int3   
   14001f35a:	int3   
   14001f35b:	int3   
   14001f35c:	int3   
   14001f35d:	int3   
   14001f35e:	int3   
   14001f35f:	int3   
   14001f360:	test   rdx,rdx
   14001f363:	jne    0x14001f36b
   14001f365:	mov    eax,0x80070057
   14001f36a:	ret    
   14001f36b:	cmp    DWORD PTR [rcx+0x72],0x0
   14001f36f:	je     0x14001f377
   14001f371:	movzx  eax,WORD PTR [rcx+0x6a]
   14001f375:	jmp    0x14001f37b
   14001f377:	movzx  eax,WORD PTR [rcx+0x68]
   14001f37b:	mov    WORD PTR [rdx],ax
   14001f37e:	xor    eax,eax
   14001f380:	ret    
   14001f381:	int3   
   14001f382:	int3   
   14001f383:	int3   
   14001f384:	int3   
   14001f385:	int3   
   14001f386:	int3   
   14001f387:	int3   
   14001f388:	int3   
   14001f389:	int3   
   14001f38a:	int3   
   14001f38b:	int3   
   14001f38c:	int3   
   14001f38d:	int3   
   14001f38e:	int3   
   14001f38f:	int3   
   14001f390:	xor    eax,eax
   14001f392:	test   rdx,rdx
   14001f395:	jne    0x14001f39d
   14001f397:	mov    eax,0x80070057
   14001f39c:	ret    
   14001f39d:	cmp    DWORD PTR [rcx+0x72],eax
   14001f3a0:	setne  al
   14001f3a3:	mov    DWORD PTR [rdx],eax
   14001f3a5:	xor    eax,eax
   14001f3a7:	ret    
   14001f3a8:	int3   
   14001f3a9:	int3   
   14001f3aa:	int3   
   14001f3ab:	int3   
   14001f3ac:	int3   
   14001f3ad:	int3   
   14001f3ae:	int3   
   14001f3af:	int3   
   14001f3b0:	test   rdx,rdx
   14001f3b3:	jne    0x14001f3bb
   14001f3b5:	mov    eax,0x80070057
   14001f3ba:	ret    
   14001f3bb:	mov    al,BYTE PTR [rcx+0x6e]
   14001f3be:	mov    BYTE PTR [rdx],al
   14001f3c0:	xor    eax,eax
   14001f3c2:	ret    
   14001f3c3:	int3   
   14001f3c4:	int3   
   14001f3c5:	int3   
   14001f3c6:	int3   
   14001f3c7:	int3   
   14001f3c8:	int3   
   14001f3c9:	int3   
   14001f3ca:	int3   
   14001f3cb:	int3   
   14001f3cc:	int3   
   14001f3cd:	int3   
   14001f3ce:	int3   
   14001f3cf:	int3   
   14001f3d0:	mov    rax,rsp
   14001f3d3:	push   rsi
   14001f3d4:	push   rdi
   14001f3d5:	push   r14
   14001f3d7:	sub    rsp,0x280
   14001f3de:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001f3e7:	mov    QWORD PTR [rax+0x18],rbx
   14001f3eb:	mov    rax,QWORD PTR [rip+0x2bc2e]        # 0x14004b020
   14001f3f2:	xor    rax,rsp
   14001f3f5:	mov    QWORD PTR [rsp+0x270],rax
   14001f3fd:	mov    r14b,r8b
   14001f400:	mov    rsi,rdx
   14001f403:	mov    rdi,rcx
   14001f406:	xor    ebx,ebx
   14001f408:	test   rdx,rdx
   14001f40b:	jne    0x14001f417
   14001f40d:	mov    eax,0x80070057
   14001f412:	jmp    0x14001f5be
   14001f417:	cmp    QWORD PTR [rcx+0xc8],rbx
   14001f41e:	jne    0x14001f4ec
   14001f424:	mov    WORD PTR [rsp+0x60],bx
   14001f429:	xor    edx,edx
   14001f42b:	mov    r8d,0x206
   14001f431:	lea    rcx,[rsp+0x62]
   14001f436:	call   0x14002e2ce
   14001f43b:	mov    r8,QWORD PTR [rdi+0x76]
   14001f43f:	cmp    r8,0xa
   14001f443:	jae    0x14001f45f
   14001f445:	mov    r8d,0x104
   14001f44b:	lea    rdx,[rsp+0x60]
   14001f450:	lea    rcx,[rip+0x19329]        # 0x140038780
   14001f457:	call   QWORD PTR [rip+0x12d4b]        # 0x1400321a8
   14001f45d:	jmp    0x14001f499
   14001f45f:	mov    QWORD PTR [rsp+0x30],rbx
   14001f464:	mov    QWORD PTR [rsp+0x28],0x206
   14001f46d:	lea    rax,[rsp+0x60]
   14001f472:	mov    QWORD PTR [rsp+0x20],rax
   14001f477:	mov    edx,0x12c0db
   14001f47c:	mov    r9d,0x8
   14001f482:	mov    rcx,QWORD PTR [rdi+0xa8]
   14001f489:	call   0x140018118
   14001f48e:	test   eax,eax
   14001f490:	jns    0x14001f499
   14001f492:	mov    ecx,eax
   14001f494:	call   0x140029d64
   14001f499:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f4a0:	lea    rax,[rsp+0x60]
   14001f4a5:	cmp    rax,rcx
   14001f4a8:	je     0x14001f4d1
   14001f4aa:	call   QWORD PTR [rip+0x12ea0]        # 0x140032350
   14001f4b0:	lea    rcx,[rsp+0x60]
   14001f4b5:	call   QWORD PTR [rip+0x12ea5]        # 0x140032360
   14001f4bb:	mov    QWORD PTR [rdi+0xc8],rax
   14001f4c2:	test   rax,rax
   14001f4c5:	jne    0x14001f4d1
   14001f4c7:	mov    ecx,0x8007000e
   14001f4cc:	call   0x140005d50
   14001f4d1:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f4d8:	call   QWORD PTR [rip+0x12e92]        # 0x140032370
   14001f4de:	test   eax,eax
   14001f4e0:	jne    0x14001f4ec
   14001f4e2:	mov    eax,0x80070490
   14001f4e7:	jmp    0x14001f5be
   14001f4ec:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f4f3:	test   r14b,r14b
   14001f4f6:	je     0x14001f55d
   14001f4f8:	mov    QWORD PTR [rsp+0x40],rbx
   14001f4fd:	lea    rdx,[rsp+0x40]
   14001f502:	call   0x14002baec
   14001f507:	mov    edi,eax
   14001f509:	mov    eax,0x80070490
   14001f50e:	cmp    edi,0x1
   14001f511:	cmove  edi,eax
   14001f514:	test   edi,edi
   14001f516:	jns    0x14001f54d
   14001f518:	lea    rax,[rip+0x2bb59]        # 0x14004b078
   14001f51f:	mov    rcx,QWORD PTR [rip+0x2bb52]        # 0x14004b078
   14001f526:	cmp    rcx,rax
   14001f529:	je     0x14001f549
   14001f52b:	test   BYTE PTR [rcx+0x1c],0x1
   14001f52f:	je     0x14001f549
   14001f531:	mov    edx,0x29
   14001f536:	mov    r9d,edi
   14001f539:	lea    r8,[rip+0x19288]        # 0x1400387c8
   14001f540:	mov    rcx,QWORD PTR [rcx+0x10]
   14001f544:	call   0x140001f70
   14001f549:	mov    eax,edi
   14001f54b:	jmp    0x14001f5be
   14001f54d:	mov    rcx,QWORD PTR [rsp+0x40]
   14001f552:	call   QWORD PTR [rip+0x12e08]        # 0x140032360
   14001f558:	mov    QWORD PTR [rsi],rax
   14001f55b:	jmp    0x14001f57d
   14001f55d:	test   rcx,rcx
   14001f560:	je     0x14001f57a
   14001f562:	call   QWORD PTR [rip+0x12e20]        # 0x140032388
   14001f568:	mov    edx,eax
   14001f56a:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f571:	call   QWORD PTR [rip+0x12df1]        # 0x140032368
   14001f577:	mov    rbx,rax
   14001f57a:	mov    QWORD PTR [rsi],rbx
   14001f57d:	jmp    0x14001f5bc
   14001f57f:	mov    edi,DWORD PTR [rsp+0x40]
   14001f583:	test   edi,edi
   14001f585:	jns    0x14001f5bc
   14001f587:	lea    rax,[rip+0x2baea]        # 0x14004b078
   14001f58e:	mov    rcx,QWORD PTR [rip+0x2bae3]        # 0x14004b078
   14001f595:	cmp    rcx,rax
   14001f598:	je     0x14001f5b8
   14001f59a:	test   BYTE PTR [rcx+0x1c],0x1
   14001f59e:	je     0x14001f5b8
   14001f5a0:	mov    edx,0x2a
   14001f5a5:	mov    r9d,edi
   14001f5a8:	lea    r8,[rip+0x19219]        # 0x1400387c8
   14001f5af:	mov    rcx,QWORD PTR [rcx+0x10]
   14001f5b3:	call   0x140001f70
   14001f5b8:	mov    eax,edi
   14001f5ba:	jmp    0x14001f5be
   14001f5bc:	xor    eax,eax
   14001f5be:	mov    rcx,QWORD PTR [rsp+0x270]
   14001f5c6:	xor    rcx,rsp
   14001f5c9:	call   0x14002dd00
   14001f5ce:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14001f5d6:	add    rsp,0x280
   14001f5dd:	pop    r14
   14001f5df:	pop    rdi
   14001f5e0:	pop    rsi
   14001f5e1:	ret    
   14001f5e2:	int3   
   14001f5e3:	int3   
   14001f5e4:	int3   
   14001f5e5:	int3   
   14001f5e6:	int3   
   14001f5e7:	int3   
   14001f5e8:	int3   
   14001f5e9:	int3   
   14001f5ea:	int3   
   14001f5eb:	int3   
   14001f5ec:	int3   
   14001f5ed:	int3   
   14001f5ee:	int3   
   14001f5ef:	int3   
   14001f5f0:	test   rdx,rdx
   14001f5f3:	jne    0x14001f5fb
   14001f5f5:	mov    eax,0x80070057
   14001f5fa:	ret    
   14001f5fb:	mov    eax,DWORD PTR [rcx+0x76]
   14001f5fe:	mov    DWORD PTR [rdx],eax
   14001f600:	xor    eax,eax
   14001f602:	ret    
   14001f603:	int3   
   14001f604:	int3   
   14001f605:	int3   
   14001f606:	int3   
   14001f607:	int3   
   14001f608:	int3   
   14001f609:	int3   
   14001f60a:	int3   
   14001f60b:	int3   
   14001f60c:	int3   
   14001f60d:	int3   
   14001f60e:	int3   
   14001f60f:	int3   
   14001f610:	mov    QWORD PTR [rsp+0x8],rbx
   14001f615:	mov    QWORD PTR [rsp+0x20],rsi
   14001f61a:	push   rdi
   14001f61b:	sub    rsp,0x20
   14001f61f:	xor    ebx,ebx
   14001f621:	mov    rsi,rdx
   14001f624:	test   rdx,rdx
   14001f627:	jne    0x14001f633
   14001f629:	mov    eax,0x80070057
   14001f62e:	jmp    0x14001f6b6
   14001f633:	mov    rcx,QWORD PTR [rcx+0x7e]
   14001f637:	mov    QWORD PTR [rsp+0x38],rbx
   14001f63c:	test   rcx,rcx
   14001f63f:	jne    0x14001f648
   14001f641:	mov    edi,0x80070490
   14001f646:	jmp    0x14001f6ac
   14001f648:	lea    rdx,[rsp+0x38]
   14001f64d:	call   QWORD PTR [rip+0x12a3d]        # 0x140032090
   14001f653:	test   eax,eax
   14001f655:	jne    0x14001f66d
   14001f657:	call   QWORD PTR [rip+0x12c2b]        # 0x140032288
   14001f65d:	movzx  edi,ax
   14001f660:	or     edi,0x80070000
   14001f666:	test   eax,eax
   14001f668:	cmovle edi,eax
   14001f66b:	jmp    0x14001f6ac
   14001f66d:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f672:	lea    rcx,[rsp+0x40]
   14001f677:	mov    QWORD PTR [rsp+0x40],rbx
   14001f67c:	call   0x1400113d0
   14001f681:	mov    rcx,QWORD PTR [rsp+0x38]
   14001f686:	mov    edi,eax
   14001f688:	call   QWORD PTR [rip+0x12b22]        # 0x1400321b0
   14001f68e:	test   edi,edi
   14001f690:	jns    0x14001f699
   14001f692:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f697:	jmp    0x14001f6a3
   14001f699:	mov    rax,QWORD PTR [rsp+0x40]
   14001f69e:	mov    edi,ebx
   14001f6a0:	mov    QWORD PTR [rsi],rax
   14001f6a3:	mov    rcx,rbx
   14001f6a6:	call   QWORD PTR [rip+0x12ca4]        # 0x140032350
   14001f6ac:	xor    ecx,ecx
   14001f6ae:	call   QWORD PTR [rip+0x12c9c]        # 0x140032350
   14001f6b4:	mov    eax,edi
   14001f6b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f6bb:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f6c0:	add    rsp,0x20
   14001f6c4:	pop    rdi
   14001f6c5:	ret    
   14001f6c6:	int3   
   14001f6c7:	int3   
   14001f6c8:	int3   
   14001f6c9:	int3   
   14001f6ca:	int3   
   14001f6cb:	int3   
   14001f6cc:	int3   
   14001f6cd:	int3   
   14001f6ce:	int3   
   14001f6cf:	int3   
   14001f6d0:	rex push rbp
   14001f6d2:	push   rbx
   14001f6d3:	push   rsi
   14001f6d4:	push   rdi
   14001f6d5:	push   r14
   14001f6d7:	lea    rbp,[rsp-0x370]
   14001f6df:	sub    rsp,0x470
   14001f6e6:	mov    rax,QWORD PTR [rip+0x2b933]        # 0x14004b020
   14001f6ed:	xor    rax,rsp
   14001f6f0:	mov    QWORD PTR [rbp+0x360],rax
   14001f6f7:	xor    ebx,ebx
   14001f6f9:	mov    rsi,r8
   14001f6fc:	mov    r14,rdx
   14001f6ff:	test   rdx,rdx
   14001f702:	je     0x14001f7ea
   14001f708:	test   r8,r8
   14001f70b:	je     0x14001f7ea
   14001f711:	mov    rdx,QWORD PTR [rcx+0x7e]
   14001f715:	test   rdx,rdx
   14001f718:	jne    0x14001f724
   14001f71a:	mov    eax,0x80070490
   14001f71f:	jmp    0x14001f7ef
   14001f724:	lea    rax,[rsp+0x58]
   14001f729:	mov    DWORD PTR [rsp+0x40],0x100
   14001f731:	mov    QWORD PTR [rsp+0x30],rax
   14001f736:	lea    r9,[rsp+0x40]
   14001f73b:	lea    rax,[rsp+0x40]
   14001f740:	xor    ecx,ecx
   14001f742:	mov    QWORD PTR [rsp+0x28],rax
   14001f747:	lea    r8,[rsp+0x60]
   14001f74c:	lea    rax,[rbp+0x160]
   14001f753:	mov    QWORD PTR [rsp+0x20],rax
   14001f758:	call   QWORD PTR [rip+0x1293a]        # 0x140032098
   14001f75e:	test   eax,eax
   14001f760:	jne    0x14001f779
   14001f762:	call   QWORD PTR [rip+0x12b20]        # 0x140032288
   14001f768:	mov    ecx,eax
   14001f76a:	movzx  eax,ax
   14001f76d:	or     eax,0x80070000
   14001f772:	test   ecx,ecx
   14001f774:	cmovle eax,ecx
   14001f777:	jmp    0x14001f7ef
   14001f779:	lea    rdx,[rsp+0x60]
   14001f77e:	mov    QWORD PTR [rsp+0x48],rbx
   14001f783:	lea    rcx,[rsp+0x48]
   14001f788:	call   0x1400113d0
   14001f78d:	mov    edi,eax
   14001f78f:	test   eax,eax
   14001f791:	jns    0x14001f79a
   14001f793:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f798:	jmp    0x14001f7dd
   14001f79a:	lea    rdx,[rbp+0x160]
   14001f7a1:	mov    QWORD PTR [rsp+0x50],rbx
   14001f7a6:	lea    rcx,[rsp+0x50]
   14001f7ab:	call   0x1400113d0
   14001f7b0:	mov    edi,eax
   14001f7b2:	test   eax,eax
   14001f7b4:	jns    0x14001f7c2
   14001f7b6:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f7bb:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f7c0:	jmp    0x14001f7d7
   14001f7c2:	mov    rax,QWORD PTR [rsp+0x48]
   14001f7c7:	mov    rcx,rbx
   14001f7ca:	mov    QWORD PTR [rsi],rax
   14001f7cd:	mov    edi,ebx
   14001f7cf:	mov    rax,QWORD PTR [rsp+0x50]
   14001f7d4:	mov    QWORD PTR [r14],rax
   14001f7d7:	call   QWORD PTR [rip+0x12b73]        # 0x140032350
   14001f7dd:	mov    rcx,rbx
   14001f7e0:	call   QWORD PTR [rip+0x12b6a]        # 0x140032350
   14001f7e6:	mov    eax,edi
   14001f7e8:	jmp    0x14001f7ef
   14001f7ea:	mov    eax,0x80070057
   14001f7ef:	mov    rcx,QWORD PTR [rbp+0x360]
   14001f7f6:	xor    rcx,rsp
   14001f7f9:	call   0x14002dd00
   14001f7fe:	add    rsp,0x470
   14001f805:	pop    r14
   14001f807:	pop    rdi
   14001f808:	pop    rsi
   14001f809:	pop    rbx
   14001f80a:	pop    rbp
   14001f80b:	ret    
   14001f80c:	int3   
   14001f80d:	int3   
   14001f80e:	int3   
   14001f80f:	int3   
   14001f810:	int3   
   14001f811:	int3   
   14001f812:	int3   
   14001f813:	int3   
   14001f814:	int3   
   14001f815:	int3   
   14001f816:	int3   
   14001f817:	int3   
   14001f818:	int3   
   14001f819:	int3   
   14001f81a:	int3   
   14001f81b:	int3   
   14001f81c:	int3   
   14001f81d:	int3   
   14001f81e:	int3   
   14001f81f:	int3   
   14001f820:	xor    eax,eax
   14001f822:	cmp    DWORD PTR [rcx+0x8e],eax
   14001f828:	setne  al
   14001f82b:	ret    
   14001f82c:	int3   
   14001f82d:	int3   
   14001f82e:	int3   
   14001f82f:	int3   
   14001f830:	int3   
   14001f831:	int3   
   14001f832:	int3   
   14001f833:	int3   
   14001f834:	mov    QWORD PTR [rsp+0x8],rbx
   14001f839:	mov    QWORD PTR [rsp+0x10],rsi
   14001f83e:	mov    QWORD PTR [rsp+0x18],rdi
   14001f843:	push   r14
   14001f845:	sub    rsp,0x20
   14001f849:	mov    rsi,rdx
   14001f84c:	mov    rdi,rcx
   14001f84f:	test   rdx,rdx
   14001f852:	je     0x14001f868
   14001f854:	mov    rax,QWORD PTR [rdx]
   14001f857:	mov    rbx,QWORD PTR [rax]
   14001f85a:	mov    rcx,rbx
   14001f85d:	call   QWORD PTR [rip+0x12e45]        # 0x1400326a8
   14001f863:	mov    rcx,rsi
   14001f866:	call   rbx
   14001f868:	mov    r14,QWORD PTR [rdi]
   14001f86b:	mov    QWORD PTR [rdi],rsi
   14001f86e:	test   r14,r14
   14001f871:	je     0x14001f888
   14001f873:	mov    rax,QWORD PTR [r14]
   14001f876:	mov    rbx,QWORD PTR [rax+0x8]
   14001f87a:	mov    rcx,rbx
   14001f87d:	call   QWORD PTR [rip+0x12e25]        # 0x1400326a8
   14001f883:	mov    rcx,r14
   14001f886:	call   rbx
   14001f888:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f88d:	mov    rax,rdi
   14001f890:	mov    rdi,QWORD PTR [rsp+0x40]
   14001f895:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f89a:	add    rsp,0x20
   14001f89e:	pop    r14
   14001f8a0:	ret    
   14001f8a1:	int3   
   14001f8a2:	int3   
   14001f8a3:	int3   
   14001f8a4:	int3   
   14001f8a5:	int3   
   14001f8a6:	int3   
   14001f8a7:	int3   
   14001f8a8:	rex push rbx
   14001f8aa:	sub    rsp,0x40
   14001f8ae:	mov    rax,QWORD PTR [rip+0x2b76b]        # 0x14004b020
   14001f8b5:	xor    rax,rsp
   14001f8b8:	mov    QWORD PTR [rsp+0x38],rax
   14001f8bd:	mov    r8,rdx
   14001f8c0:	mov    rbx,rcx
   14001f8c3:	xor    edx,edx
   14001f8c5:	cmp    QWORD PTR [r8+0x8],rdx
   14001f8c9:	jne    0x14001f918
   14001f8cb:	cmp    WORD PTR [r8+0x6],dx
   14001f8d0:	jne    0x14001f918
   14001f8d2:	mov    eax,0xffff
   14001f8d7:	cmp    WORD PTR [r8+0x4],ax
   14001f8dc:	jne    0x14001f918
   14001f8de:	mov    ecx,DWORD PTR [r8]
   14001f8e1:	mov    r9d,0xff00
   14001f8e7:	mov    edx,ecx
   14001f8e9:	mov    eax,ecx
   14001f8eb:	shl    edx,0x10
   14001f8ee:	and    eax,r9d
   14001f8f1:	or     edx,eax
   14001f8f3:	shr    ecx,0x8
   14001f8f6:	movzx  eax,BYTE PTR [r8+0x3]
   14001f8fb:	and    ecx,r9d
   14001f8fe:	shl    edx,0x8
   14001f901:	or     edx,ecx
   14001f903:	lea    rcx,[rsp+0x20]
   14001f908:	or     edx,eax
   14001f90a:	mov    DWORD PTR [rsp+0x20],edx
   14001f90e:	mov    rdx,rbx
   14001f911:	call   0x140024628
   14001f916:	jmp    0x14001f954
   14001f918:	lea    rax,[rsp+0x28]
   14001f91d:	cmp    rax,r8
   14001f920:	jbe    0x14001f930
   14001f922:	lea    rax,[r8+0x10]
   14001f926:	lea    rcx,[rsp+0x28]
   14001f92b:	cmp    rcx,rax
   14001f92e:	jb     0x14001f947
   14001f930:	add    r8,0xf
   14001f934:	mov    cl,BYTE PTR [r8]
   14001f937:	dec    r8
   14001f93a:	mov    BYTE PTR [rsp+rdx*1+0x28],cl
   14001f93e:	inc    rdx
   14001f941:	cmp    rdx,0x10
   14001f945:	jb     0x14001f934
   14001f947:	mov    rdx,rbx
   14001f94a:	lea    rcx,[rsp+0x28]
   14001f94f:	call   0x140024304
   14001f954:	mov    rax,rbx
   14001f957:	mov    rcx,QWORD PTR [rsp+0x38]
   14001f95c:	xor    rcx,rsp
   14001f95f:	call   0x14002dd00
   14001f964:	add    rsp,0x40
   14001f968:	pop    rbx
   14001f969:	ret    
   14001f96a:	int3   
   14001f96b:	int3   
   14001f96c:	int3   
   14001f96d:	int3   
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	sub    rcx,0x8
   14001f974:	jmp    0x14001daf0
   14001f979:	int3   
   14001f97a:	int3   
   14001f97b:	int3   
   14001f97c:	int3   
   14001f97d:	int3   
   14001f97e:	int3   
   14001f97f:	int3   
   14001f980:	sub    rcx,0x8
   14001f984:	jmp    0x14001dd10
   14001f989:	int3   
   14001f98a:	int3   
   14001f98b:	int3   
   14001f98c:	int3   
   14001f98d:	int3   
   14001f98e:	int3   
   14001f98f:	int3   
   14001f990:	sub    rcx,0x8
   14001f994:	jmp    0x14001dac0
   14001f999:	int3   
   14001f99a:	int3   
   14001f99b:	int3   
   14001f99c:	int3   
   14001f99d:	int3   
   14001f99e:	int3   
   14001f99f:	int3   
   14001f9a0:	sub    rcx,0x10
   14001f9a4:	jmp    0x14001dd10
   14001f9a9:	int3   
   14001f9aa:	int3   
   14001f9ab:	int3   
   14001f9ac:	int3   
   14001f9ad:	int3   
   14001f9ae:	int3   
   14001f9af:	int3   
   14001f9b0:	rex push rbx
   14001f9b2:	sub    rsp,0x20
   14001f9b6:	lea    rax,[rip+0x15003]        # 0x1400349c0
   14001f9bd:	mov    rbx,rcx
   14001f9c0:	mov    QWORD PTR [rcx],rax
   14001f9c3:	test   dl,0x1
   14001f9c6:	je     0x14001f9ce
   14001f9c8:	call   QWORD PTR [rip+0x12bfa]        # 0x1400325c8
   14001f9ce:	mov    rax,rbx
   14001f9d1:	add    rsp,0x20
   14001f9d5:	pop    rbx
   14001f9d6:	ret    
   14001f9d7:	int3   
   14001f9d8:	int3   
   14001f9d9:	int3   
   14001f9da:	int3   
   14001f9db:	int3   
   14001f9dc:	int3   
   14001f9dd:	int3   
   14001f9de:	int3   
   14001f9df:	int3   
   14001f9e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f9e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001f9ea:	push   rdi
   14001f9eb:	sub    rsp,0x20
   14001f9ef:	mov    rsi,rcx
   14001f9f2:	or     edi,0xffffffff
   14001f9f5:	lock xadd DWORD PTR [rcx+0x10],edi
   14001f9fa:	sub    edi,0x1
   14001f9fd:	jne    0x14001fa1c
   14001f9ff:	test   rcx,rcx
   14001fa02:	je     0x14001fa1c
   14001fa04:	mov    rdx,QWORD PTR [rcx]
   14001fa07:	mov    rbx,QWORD PTR [rdx+0x28]
   14001fa0b:	mov    rcx,rbx
   14001fa0e:	call   QWORD PTR [rip+0x12c94]        # 0x1400326a8
   14001fa14:	lea    edx,[rdi+0x1]
   14001fa17:	mov    rcx,rsi
   14001fa1a:	call   rbx
   14001fa1c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fa21:	mov    eax,edi
   14001fa23:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fa28:	add    rsp,0x20
   14001fa2c:	pop    rdi
   14001fa2d:	ret    
   14001fa2e:	int3   
   14001fa2f:	int3   
   14001fa30:	int3   
   14001fa31:	int3   
   14001fa32:	int3   
   14001fa33:	int3   
   14001fa34:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa39:	push   rdi
   14001fa3a:	sub    rsp,0x30
   14001fa3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fa47:	mov    QWORD PTR [rsp+0x48],rbx
   14001fa4c:	mov    rbx,rcx
   14001fa4f:	lea    rax,[rip+0x150b2]        # 0x140034b08
   14001fa56:	mov    QWORD PTR [rcx],rax
   14001fa59:	lea    rax,[rip+0x15070]        # 0x140034ad0
   14001fa60:	mov    QWORD PTR [rcx+0x8],rax
   14001fa64:	add    rcx,0xb8
   14001fa6b:	call   QWORD PTR [rip+0x12807]        # 0x140032278
   14001fa71:	lea    rcx,[rbx+0x30]
   14001fa75:	lea    r9,[rip+0xfffffffffffe3ec4]        # 0x140003940
   14001fa7c:	mov    edx,0x30
   14001fa81:	lea    r8d,[rdx-0x2e]
   14001fa85:	call   0x14002dd24
   14001fa8a:	nop
   14001fa8b:	mov    rdi,QWORD PTR [rbx+0x28]
   14001fa8f:	test   rdi,rdi
   14001fa92:	je     0x14001faa9
   14001fa94:	mov    rax,QWORD PTR [rdi]
   14001fa97:	mov    rbx,QWORD PTR [rax+0x8]
   14001fa9b:	mov    rcx,rbx
   14001fa9e:	call   QWORD PTR [rip+0x12c04]        # 0x1400326a8
   14001faa4:	mov    rcx,rdi
   14001faa7:	call   rbx
   14001faa9:	mov    rbx,QWORD PTR [rsp+0x48]
   14001faae:	add    rsp,0x30
   14001fab2:	pop    rdi
   14001fab3:	ret    
   14001fab4:	int3   
   14001fab5:	int3   
   14001fab6:	int3   
   14001fab7:	int3   
   14001fab8:	int3   
   14001fab9:	int3   
   14001faba:	int3   
   14001fabb:	int3   
   14001fabc:	int3   
   14001fabd:	int3   
   14001fabe:	int3   
   14001fabf:	int3   
   14001fac0:	mov    QWORD PTR [rsp+0x8],rbx
   14001fac5:	push   rdi
   14001fac6:	sub    rsp,0x20
   14001faca:	mov    ebx,edx
   14001facc:	mov    rdi,rcx
   14001facf:	call   0x14001fa34
   14001fad4:	test   bl,0x1
   14001fad7:	je     0x14001fae2
   14001fad9:	mov    rcx,rdi
   14001fadc:	call   QWORD PTR [rip+0x12ae6]        # 0x1400325c8
   14001fae2:	mov    rax,rdi
   14001fae5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001faea:	add    rsp,0x20
   14001faee:	pop    rdi
   14001faef:	ret    
   14001faf0:	int3   
   14001faf1:	int3   
   14001faf2:	int3   
   14001faf3:	int3   
   14001faf4:	int3   
   14001faf5:	int3   
   14001faf6:	int3   
   14001faf7:	int3   
   14001faf8:	mov    r11,rsp
   14001fafb:	mov    QWORD PTR [r11+0x20],r9
   14001faff:	sub    rsp,0x58
   14001fb03:	and    QWORD PTR [r11-0x18],0x0
   14001fb08:	lea    rax,[r11+0x28]
   14001fb0c:	mov    QWORD PTR [r11-0x20],0x4
   14001fb14:	lea    r8,[rip+0x18cbd]        # 0x1400387d8
   14001fb1b:	mov    QWORD PTR [r11-0x28],rax
   14001fb1f:	mov    edx,0xe
   14001fb24:	lea    rax,[r11+0x20]
   14001fb28:	movzx  r9d,dx
   14001fb2c:	mov    QWORD PTR [r11-0x30],0x8
   14001fb34:	mov    edx,0x2b
   14001fb39:	mov    QWORD PTR [r11-0x38],rax
   14001fb3d:	call   QWORD PTR [rip+0x124dd]        # 0x140032020
   14001fb43:	add    rsp,0x58
   14001fb47:	ret    
   14001fb48:	int3   
   14001fb49:	int3   
   14001fb4a:	int3   
   14001fb4b:	int3   
   14001fb4c:	int3   
   14001fb4d:	int3   
   14001fb4e:	int3   
   14001fb4f:	int3   
   14001fb50:	mov    r11,rsp
   14001fb53:	mov    QWORD PTR [r11+0x20],r9
   14001fb57:	sub    rsp,0x88
   14001fb5e:	and    QWORD PTR [r11-0x18],0x0
   14001fb63:	lea    rax,[r11+0x40]
   14001fb67:	mov    r9d,0x11
   14001fb6d:	lea    r8d,[r9-0x9]
   14001fb71:	mov    QWORD PTR [r11-0x20],r8
   14001fb75:	lea    edx,[r9-0xd]
   14001fb79:	mov    QWORD PTR [r11-0x28],rax
   14001fb7d:	lea    rax,[r11+0x38]
   14001fb81:	mov    QWORD PTR [r11-0x30],r8
   14001fb85:	mov    QWORD PTR [r11-0x38],rax
   14001fb89:	lea    rax,[r11+0x30]
   14001fb8d:	mov    QWORD PTR [r11-0x40],rdx
   14001fb91:	mov    QWORD PTR [r11-0x48],rax
   14001fb95:	lea    rax,[r11+0x28]
   14001fb99:	mov    QWORD PTR [r11-0x50],rdx
   14001fb9d:	lea    edx,[r9+0x1a]
   14001fba1:	mov    QWORD PTR [r11-0x58],rax
   14001fba5:	lea    rax,[r11+0x20]
   14001fba9:	mov    QWORD PTR [r11-0x60],r8
   14001fbad:	lea    r8,[rip+0x18c24]        # 0x1400387d8
   14001fbb4:	mov    QWORD PTR [r11-0x68],rax
   14001fbb8:	call   QWORD PTR [rip+0x12462]        # 0x140032020
   14001fbbe:	add    rsp,0x88
   14001fbc5:	ret    
   14001fbc6:	int3   
   14001fbc7:	int3   
   14001fbc8:	int3   
   14001fbc9:	int3   
   14001fbca:	int3   
   14001fbcb:	int3   
   14001fbcc:	mov    r11,rsp
   14001fbcf:	mov    QWORD PTR [r11+0x20],r9
   14001fbd3:	sub    rsp,0x68
   14001fbd7:	and    QWORD PTR [r11-0x18],0x0
   14001fbdc:	lea    rax,[r11+0x30]
   14001fbe0:	mov    r8d,0x10
   14001fbe6:	movzx  r9d,r8w
   14001fbea:	lea    edx,[r8-0x8]
   14001fbee:	mov    QWORD PTR [r11-0x20],rdx
   14001fbf2:	lea    r8,[rip+0x18bdf]        # 0x1400387d8
   14001fbf9:	mov    QWORD PTR [r11-0x28],rax
   14001fbfd:	lea    rax,[r11+0x28]
   14001fc01:	mov    QWORD PTR [r11-0x30],rdx
   14001fc05:	mov    QWORD PTR [r11-0x38],rax
   14001fc09:	lea    rax,[r11+0x20]
   14001fc0d:	mov    QWORD PTR [r11-0x40],rdx
   14001fc11:	mov    edx,0x2b
   14001fc16:	mov    QWORD PTR [r11-0x48],rax
   14001fc1a:	call   QWORD PTR [rip+0x12400]        # 0x140032020
   14001fc20:	add    rsp,0x68
   14001fc24:	ret    
   14001fc25:	int3   
   14001fc26:	int3   
   14001fc27:	int3   
   14001fc28:	int3   
   14001fc29:	int3   
   14001fc2a:	int3   
   14001fc2b:	int3   
   14001fc2c:	mov    r11,rsp
   14001fc2f:	mov    QWORD PTR [r11+0x20],r9
   14001fc33:	sub    rsp,0x78
   14001fc37:	and    QWORD PTR [r11-0x18],0x0
   14001fc3c:	lea    rax,[r11+0x38]
   14001fc40:	mov    r8d,0xd
   14001fc46:	movzx  r9d,r8w
   14001fc4a:	lea    edx,[r8-0x5]
   14001fc4e:	mov    QWORD PTR [r11-0x20],rdx
   14001fc52:	lea    r8,[rip+0x18b7f]        # 0x1400387d8
   14001fc59:	mov    QWORD PTR [r11-0x28],rax
   14001fc5d:	lea    rax,[r11+0x30]
   14001fc61:	mov    QWORD PTR [r11-0x30],0x4
   14001fc69:	mov    QWORD PTR [r11-0x38],rax
   14001fc6d:	lea    rax,[r11+0x28]
   14001fc71:	mov    QWORD PTR [r11-0x40],rdx
   14001fc75:	mov    QWORD PTR [r11-0x48],rax
   14001fc79:	lea    rax,[r11+0x20]
   14001fc7d:	mov    QWORD PTR [r11-0x50],rdx
   14001fc81:	mov    edx,0x2b
   14001fc86:	mov    QWORD PTR [r11-0x58],rax
   14001fc8a:	call   QWORD PTR [rip+0x12390]        # 0x140032020
   14001fc90:	add    rsp,0x78
   14001fc94:	ret    
   14001fc95:	int3   
   14001fc96:	int3   
   14001fc97:	int3   
   14001fc98:	int3   
   14001fc99:	int3   
   14001fc9a:	int3   
   14001fc9b:	int3   
   14001fc9c:	mov    r11,rsp
   14001fc9f:	mov    QWORD PTR [r11+0x20],r9
   14001fca3:	sub    rsp,0x78
   14001fca7:	and    QWORD PTR [r11-0x18],0x0
   14001fcac:	lea    rax,[r11+0x38]
   14001fcb0:	mov    r9d,0x12
   14001fcb6:	lea    r8d,[r9-0xe]
   14001fcba:	mov    QWORD PTR [r11-0x20],r8
   14001fcbe:	lea    edx,[r9-0xa]
   14001fcc2:	mov    QWORD PTR [r11-0x28],rax
   14001fcc6:	lea    rax,[r11+0x30]
   14001fcca:	mov    QWORD PTR [r11-0x30],rdx
   14001fcce:	mov    QWORD PTR [r11-0x38],rax
   14001fcd2:	lea    rax,[r11+0x28]
   14001fcd6:	mov    QWORD PTR [r11-0x40],r8
   14001fcda:	lea    r8,[rip+0x18af7]        # 0x1400387d8
   14001fce1:	mov    QWORD PTR [r11-0x48],rax
   14001fce5:	lea    rax,[r11+0x20]
   14001fce9:	mov    QWORD PTR [r11-0x50],rdx
   14001fced:	lea    edx,[r9+0x19]
   14001fcf1:	mov    QWORD PTR [r11-0x58],rax
   14001fcf5:	call   QWORD PTR [rip+0x12325]        # 0x140032020
   14001fcfb:	add    rsp,0x78
   14001fcff:	ret    
   14001fd00:	int3   
   14001fd01:	int3   
   14001fd02:	int3   
   14001fd03:	int3   
   14001fd04:	int3   
   14001fd05:	int3   
   14001fd06:	int3   
   14001fd07:	int3   
   14001fd08:	mov    r11,rsp
   14001fd0b:	mov    QWORD PTR [r11+0x20],r9
   14001fd0f:	sub    rsp,0x98
   14001fd16:	and    QWORD PTR [r11-0x18],0x0
   14001fd1b:	lea    rax,[r11+0x48]
   14001fd1f:	mov    r9d,0xc
   14001fd25:	lea    r8d,[r9-0x4]
   14001fd29:	mov    QWORD PTR [r11-0x20],r8
   14001fd2d:	lea    edx,[r9-0x8]
   14001fd31:	mov    QWORD PTR [r11-0x28],rax
   14001fd35:	lea    rax,[r11+0x40]
   14001fd39:	mov    QWORD PTR [r11-0x30],rdx
   14001fd3d:	mov    QWORD PTR [r11-0x38],rax
   14001fd41:	lea    rax,[r11+0x38]
   14001fd45:	mov    QWORD PTR [r11-0x40],rdx
   14001fd49:	mov    QWORD PTR [r11-0x48],rax
   14001fd4d:	lea    rax,[r11+0x30]
   14001fd51:	mov    QWORD PTR [r11-0x50],r8
   14001fd55:	mov    QWORD PTR [r11-0x58],rax
   14001fd59:	lea    rax,[r11+0x28]
   14001fd5d:	mov    QWORD PTR [r11-0x60],rdx
   14001fd61:	lea    edx,[r9+0x1f]
   14001fd65:	mov    QWORD PTR [r11-0x68],rax
   14001fd69:	lea    rax,[r11+0x20]
   14001fd6d:	mov    QWORD PTR [r11-0x70],r8
   14001fd71:	lea    r8,[rip+0x18a60]        # 0x1400387d8
   14001fd78:	mov    QWORD PTR [r11-0x78],rax
   14001fd7c:	call   QWORD PTR [rip+0x1229e]        # 0x140032020
   14001fd82:	add    rsp,0x98
   14001fd89:	ret    
   14001fd8a:	int3   
   14001fd8b:	int3   
   14001fd8c:	int3   
   14001fd8d:	int3   
   14001fd8e:	int3   
   14001fd8f:	int3   
   14001fd90:	mov    r11,rsp
   14001fd93:	push   rbx
   14001fd94:	push   rsi
   14001fd95:	push   rdi
   14001fd96:	push   r12
   14001fd98:	push   r13
   14001fd9a:	push   r14
   14001fd9c:	push   r15
   14001fd9e:	sub    rsp,0xc0
   14001fda5:	mov    QWORD PTR [r11-0x70],0xfffffffffffffffe
   14001fdad:	mov    rax,QWORD PTR [rip+0x2b26c]        # 0x14004b020
   14001fdb4:	xor    rax,rsp
   14001fdb7:	mov    QWORD PTR [rsp+0xb8],rax
   14001fdbf:	mov    ebx,r9d
   14001fdc2:	mov    DWORD PTR [rsp+0x54],ebx
   14001fdc6:	mov    QWORD PTR [rsp+0x58],r8
   14001fdcb:	movsxd rsi,edx
   14001fdce:	mov    DWORD PTR [rsp+0x50],esi
   14001fdd2:	mov    r14,rcx
   14001fdd5:	test   r8,r8
   14001fdd8:	je     0x1400202a0
   14001fdde:	test   ebx,ebx
   14001fde0:	je     0x1400202a0
   14001fde6:	lea    r12,[rcx+0xb8]
   14001fded:	mov    QWORD PTR [rsp+0x70],r12
   14001fdf2:	mov    QWORD PTR [r11-0x80],r12
   14001fdf6:	mov    rcx,r12
   14001fdf9:	call   QWORD PTR [rip+0x12309]        # 0x140032108
   14001fdff:	nop
   14001fe00:	test   BYTE PTR [r14+0x94],0x3
   14001fe08:	je     0x14001fe18
   14001fe0a:	mov    rcx,r12
   14001fe0d:	call   QWORD PTR [rip+0x122e5]        # 0x1400320f8
   14001fe13:	jmp    0x1400202ce
   14001fe18:	cmp    QWORD PTR [r14+0x20],0x0
   14001fe1d:	jne    0x14001fe4f
   14001fe1f:	lea    r15,[rip+0x2b252]        # 0x14004b078
   14001fe26:	mov    rcx,QWORD PTR [rip+0x2b24b]        # 0x14004b078
   14001fe2d:	cmp    rcx,r15
   14001fe30:	je     0x14001fe0a
   14001fe32:	test   BYTE PTR [rcx+0x1c],0x2
   14001fe36:	je     0x14001fe0a
   14001fe38:	mov    edx,0xb
   14001fe3d:	lea    r8,[rip+0x18994]        # 0x1400387d8
   14001fe44:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fe48:	call   0x140001f08
   14001fe4d:	jmp    0x14001fe0a
   14001fe4f:	mov    rdi,rsi
   14001fe52:	lea    r15,[rsi+0x1]
   14001fe56:	lea    r15,[r15+r15*2]
   14001fe5a:	shl    r15,0x4
   14001fe5e:	add    r15,r14
   14001fe61:	mov    QWORD PTR [rsp+0x60],r15
   14001fe66:	mov    rcx,r15
   14001fe69:	call   QWORD PTR [rip+0x12299]        # 0x140032108
   14001fe6f:	mov    rcx,r15
   14001fe72:	test   BYTE PTR [r14+0x94],0xc
   14001fe7a:	je     0x14001fe84
   14001fe7c:	call   QWORD PTR [rip+0x12276]        # 0x1400320f8
   14001fe82:	jmp    0x14001fe0a
   14001fe84:	call   QWORD PTR [rip+0x1226e]        # 0x1400320f8
   14001fe8a:	lea    r15,[rip+0x2b1e7]        # 0x14004b078
   14001fe91:	mov    rcx,QWORD PTR [rip+0x2b1e0]        # 0x14004b078
   14001fe98:	mov    r13,QWORD PTR [rsp+0x120]
   14001fea0:	cmp    rcx,r15
   14001fea3:	je     0x14001fedf
   14001fea5:	test   BYTE PTR [rcx+0x1c],0x10
   14001fea9:	je     0x14001fedf
   14001feab:	mov    rax,QWORD PTR [r14+rsi*8+0xa8]
   14001feb3:	mov    QWORD PTR [rsp+0x40],rax
   14001feb8:	mov    eax,DWORD PTR [r14+rsi*4+0xa0]
   14001fec0:	mov    DWORD PTR [rsp+0x38],eax
   14001fec4:	mov    DWORD PTR [rsp+0x30],ebx
   14001fec8:	mov    QWORD PTR [rsp+0x28],r13
   14001fecd:	mov    DWORD PTR [rsp+0x20],esi
   14001fed1:	mov    r9,QWORD PTR [r14+0x18]
   14001fed5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fed9:	call   0x14001fd08
   14001fede:	nop
   14001fedf:	cmp    DWORD PTR [r14+rsi*4+0xa0],0x0
   14001fee8:	je     0x140020047
   14001feee:	mov    rax,QWORD PTR [r14+rsi*8+0xa8]
   14001fef6:	cmp    r13,rax
   14001fef9:	jbe    0x14001ff45
   14001fefb:	mov    rcx,QWORD PTR [rip+0x2b176]        # 0x14004b078
   14001ff02:	cmp    rcx,r15
   14001ff05:	je     0x14001ff28
   14001ff07:	test   BYTE PTR [rcx+0x1c],0x1
   14001ff0b:	je     0x14001ff28
   14001ff0d:	mov    QWORD PTR [rsp+0x30],rax
   14001ff12:	mov    DWORD PTR [rsp+0x28],esi
   14001ff16:	mov    QWORD PTR [rsp+0x20],r13
   14001ff1b:	mov    r9,QWORD PTR [r14+0x18]
   14001ff1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ff23:	call   0x14001fc2c
   14001ff28:	lea    rcx,[r14+0x8]
   14001ff2c:	call   0x140020de0
   14001ff31:	nop
   14001ff32:	mov    rcx,r12
   14001ff35:	call   QWORD PTR [rip+0x121bd]        # 0x1400320f8
   14001ff3b:	mov    eax,0x80004005
   14001ff40:	jmp    0x1400202d0
   14001ff45:	mov    esi,eax
   14001ff47:	sub    esi,r13d
   14001ff4a:	mov    rcx,QWORD PTR [rip+0x2b127]        # 0x14004b078
   14001ff51:	cmp    rcx,r15
   14001ff54:	je     0x14001ff74
   14001ff56:	test   BYTE PTR [rcx+0x1c],0x10
   14001ff5a:	je     0x14001ff74
   14001ff5c:	mov    DWORD PTR [rsp+0x20],esi
   14001ff60:	mov    r9,QWORD PTR [r14+0x18]
   14001ff64:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ff68:	call   0x14001faf8
   14001ff6d:	mov    rcx,QWORD PTR [rip+0x2b104]        # 0x14004b078
   14001ff74:	cmp    ebx,esi
   14001ff76:	ja     0x14001ffad
   14001ff78:	cmp    rcx,r15
   14001ff7b:	je     0x14001ff9d
   14001ff7d:	test   BYTE PTR [rcx+0x1c],0x10
   14001ff81:	je     0x14001ff9d
   14001ff83:	mov    edx,0xf
   14001ff88:	mov    r9,QWORD PTR [r14+0x18]
   14001ff8c:	lea    r8,[rip+0x18845]        # 0x1400387d8
   14001ff93:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ff97:	call   0x14001ad20
   14001ff9c:	nop
   14001ff9d:	mov    rcx,r12
   14001ffa0:	call   QWORD PTR [rip+0x12152]        # 0x1400320f8
   14001ffa6:	xor    eax,eax
   14001ffa8:	jmp    0x1400202d0
   14001ffad:	mov    r8d,DWORD PTR [r14+rdi*4+0xa0]
   14001ffb5:	mov    edx,DWORD PTR [rsp+0x50]
   14001ffb9:	mov    rcx,r14
   14001ffbc:	call   0x14002054c
   14001ffc1:	mov    rcx,QWORD PTR [r14+0x98]
   14001ffc8:	test   rcx,rcx
   14001ffcb:	je     0x14001ffda
   14001ffcd:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   14001ffd5:	call   0x140024a28
   14001ffda:	mov    rcx,QWORD PTR [r14+0x98]
   14001ffe1:	test   rcx,rcx
   14001ffe4:	je     0x14001fff3
   14001ffe6:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   14001ffee:	call   0x140024a88
   14001fff3:	mov    rcx,QWORD PTR [r14+0x98]
   14001fffa:	test   rcx,rcx
   14001fffd:	je     0x14002000c
   14001ffff:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   140020007:	call   0x140024968
   14002000c:	mov    rcx,QWORD PTR [r14+0x98]
   140020013:	test   rcx,rcx
   140020016:	je     0x140020025
   140020018:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   140020020:	call   0x1400249c8
   140020025:	and    DWORD PTR [r14+rdi*4+0xa0],0x0
   14002002e:	mov    r13,QWORD PTR [r14+rdi*8+0xa8]
   140020036:	mov    eax,esi
   140020038:	add    QWORD PTR [rsp+0x58],rax
   14002003d:	sub    ebx,esi
   14002003f:	mov    DWORD PTR [rsp+0x54],ebx
   140020043:	mov    esi,DWORD PTR [rsp+0x50]
   140020047:	mov    rcx,QWORD PTR [r14+0x98]
   14002004e:	test   rcx,rcx
   140020051:	je     0x14002005a
   140020053:	mov    edx,ebx
   140020055:	call   0x1400248a8
   14002005a:	mov    rcx,QWORD PTR [r14+0x98]
   140020061:	test   rcx,rcx
   140020064:	je     0x14002006d
   140020066:	mov    edx,ebx
   140020068:	call   0x140024908
   14002006d:	mov    r9d,ebx
   140020070:	mov    r8,QWORD PTR [rsp+0x58]
   140020075:	mov    edx,esi
   140020077:	mov    rcx,r14
   14002007a:	call   0x1400202fc
   14002007f:	mov    rax,QWORD PTR [rsp+0x60]
   140020084:	mov    QWORD PTR [rsp+0x80],rax
   14002008c:	mov    rcx,rax
   14002008f:	call   QWORD PTR [rip+0x12073]        # 0x140032108
   140020095:	nop
   140020096:	test   BYTE PTR [r14+0x94],0xc
   14002009e:	je     0x1400200d2
   1400200a0:	mov    rcx,QWORD PTR [rip+0x2afd1]        # 0x14004b078
   1400200a7:	cmp    rcx,r15
   1400200aa:	je     0x1400200ce
   1400200ac:	test   BYTE PTR [rcx+0x1c],0x4
   1400200b0:	je     0x1400200ce
   1400200b2:	mov    edx,0x18
   1400200b7:	lea    r8,[rip+0x1871a]        # 0x1400387d8
   1400200be:	mov    rcx,QWORD PTR [rcx+0x10]
   1400200c2:	call   0x140001f08
   1400200c7:	mov    rcx,QWORD PTR [rip+0x2afaa]        # 0x14004b078
   1400200ce:	xor    eax,eax
   1400200d0:	jmp    0x140020101
   1400200d2:	xor    eax,eax
   1400200d4:	mov    rsi,QWORD PTR [r14+0x28]
   1400200d8:	test   rsi,rsi
   1400200db:	je     0x1400200fa
   1400200dd:	mov    rax,QWORD PTR [rsi]
   1400200e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400200e4:	mov    rcx,rbx
   1400200e7:	call   QWORD PTR [rip+0x125bb]        # 0x1400326a8
   1400200ed:	mov    edx,DWORD PTR [rsp+0x50]
   1400200f1:	mov    rcx,rsi
   1400200f4:	call   rbx
   1400200f6:	mov    ebx,DWORD PTR [rsp+0x54]
   1400200fa:	mov    rcx,QWORD PTR [rip+0x2af77]        # 0x14004b078
   140020101:	mov    edx,eax
   140020103:	or     esi,0xffffffff
   140020106:	sub    esi,ebx
   140020108:	cmp    rdx,rsi
   14002010b:	cmovb  esi,edx
   14002010e:	cmp    rcx,r15
   140020111:	je     0x140020130
   140020113:	test   BYTE PTR [rcx+0x1c],0x10
   140020117:	je     0x140020130
   140020119:	mov    QWORD PTR [rsp+0x28],rsi
   14002011e:	mov    QWORD PTR [rsp+0x20],rdx
   140020123:	mov    r9,QWORD PTR [r14+0x18]
   140020127:	mov    rcx,QWORD PTR [rcx+0x10]
   14002012b:	call   0x14001fbcc
   140020130:	mov    DWORD PTR [r14+rdi*4+0xa0],esi
   140020138:	mov    ecx,ebx
   14002013a:	mov    QWORD PTR [rsp+0x58],rcx
   14002013f:	mov    eax,esi
   140020141:	add    rcx,rax
   140020144:	add    rcx,r13
   140020147:	mov    QWORD PTR [r14+rdi*8+0xa8],rcx
   14002014f:	mov    eax,DWORD PTR [r14+rdi*4+0xa0]
   140020157:	test   eax,eax
   140020159:	je     0x140020192
   14002015b:	mov    rdx,QWORD PTR [rip+0x2af16]        # 0x14004b078
   140020162:	cmp    rdx,r15
   140020165:	je     0x1400201cc
   140020167:	mov    esi,DWORD PTR [rsp+0x50]
   14002016b:	test   BYTE PTR [rdx+0x1c],0x4
   14002016f:	je     0x14002019d
   140020171:	mov    QWORD PTR [rsp+0x38],rcx
   140020176:	mov    QWORD PTR [rsp+0x30],r13
   14002017b:	mov    DWORD PTR [rsp+0x28],esi
   14002017f:	mov    DWORD PTR [rsp+0x20],eax
   140020183:	mov    r9,QWORD PTR [r14+0x18]
   140020187:	mov    rcx,QWORD PTR [rdx+0x10]
   14002018b:	call   0x14001fb50
   140020190:	jmp    0x140020196
   140020192:	mov    esi,DWORD PTR [rsp+0x50]
   140020196:	mov    rdx,QWORD PTR [rip+0x2aedb]        # 0x14004b078
   14002019d:	cmp    rdx,r15
   1400201a0:	je     0x1400201cc
   1400201a2:	test   BYTE PTR [rdx+0x1c],0x10
   1400201a6:	je     0x1400201cc
   1400201a8:	mov    ecx,DWORD PTR [r14+rdi*4+0xa0]
   1400201b0:	add    ecx,ebx
   1400201b2:	mov    DWORD PTR [rsp+0x30],ecx
   1400201b6:	mov    QWORD PTR [rsp+0x28],r13
   1400201bb:	mov    DWORD PTR [rsp+0x20],esi
   1400201bf:	mov    r9,QWORD PTR [r14+0x18]
   1400201c3:	mov    rcx,QWORD PTR [rdx+0x10]
   1400201c7:	call   0x14001fc9c
   1400201cc:	mov    rsi,QWORD PTR [r14+0x20]
   1400201d0:	mov    r10,QWORD PTR [rsi]
   1400201d3:	add    ebx,DWORD PTR [r14+rdi*4+0xa0]
   1400201db:	mov    rdi,QWORD PTR [r10+0x20]
   1400201df:	mov    rcx,rdi
   1400201e2:	call   QWORD PTR [rip+0x124c0]        # 0x1400326a8
   1400201e8:	mov    r9d,ebx
   1400201eb:	mov    r8,r13
   1400201ee:	mov    edx,DWORD PTR [rsp+0x50]
   1400201f2:	mov    rcx,rsi
   1400201f5:	call   rdi
   1400201f7:	mov    ebx,eax
   1400201f9:	test   eax,eax
   1400201fb:	jns    0x14002024a
   1400201fd:	mov    rcx,QWORD PTR [rip+0x2ae74]        # 0x14004b078
   140020204:	cmp    rcx,r15
   140020207:	je     0x140020227
   140020209:	test   BYTE PTR [rcx+0x1c],0x1
   14002020d:	je     0x140020227
   14002020f:	mov    edx,0x13
   140020214:	mov    r9d,eax
   140020217:	lea    r8,[rip+0x185ba]        # 0x1400387d8
   14002021e:	mov    rcx,QWORD PTR [rcx+0x10]
   140020222:	call   0x140001f70
   140020227:	mov    edx,ebx
   140020229:	lea    rcx,[rsp+0x90]
   140020231:	call   0x140002064
   140020236:	lea    rdx,[rip+0x28f4b]        # 0x140049188
   14002023d:	lea    rcx,[rsp+0x90]
   140020245:	call   0x14002e2da
   14002024a:	mov    rcx,QWORD PTR [r14+0x98]
   140020251:	test   rcx,rcx
   140020254:	je     0x140020260
   140020256:	mov    rdx,QWORD PTR [rsp+0x58]
   14002025b:	call   0x140024968
   140020260:	mov    rcx,QWORD PTR [r14+0x98]
   140020267:	test   rcx,rcx
   14002026a:	je     0x140020276
   14002026c:	mov    edx,DWORD PTR [rsp+0x54]
   140020270:	call   0x1400249c8
   140020275:	nop
   140020276:	mov    rcx,QWORD PTR [rsp+0x60]
   14002027b:	call   QWORD PTR [rip+0x11e77]        # 0x1400320f8
   140020281:	nop
   140020282:	mov    rcx,r12
   140020285:	call   QWORD PTR [rip+0x11e6d]        # 0x1400320f8
   14002028b:	xor    eax,eax
   14002028d:	jmp    0x1400202d0
   14002028f:	mov    rcx,QWORD PTR [rsp+0x70]
   140020294:	call   QWORD PTR [rip+0x11e5e]        # 0x1400320f8
   14002029a:	mov    eax,DWORD PTR [rsp+0x54]
   14002029e:	jmp    0x1400202d0
   1400202a0:	lea    r15,[rip+0x2add1]        # 0x14004b078
   1400202a7:	mov    rcx,QWORD PTR [rip+0x2adca]        # 0x14004b078
   1400202ae:	cmp    rcx,r15
   1400202b1:	je     0x1400202ce
   1400202b3:	test   BYTE PTR [rcx+0x1c],0x2
   1400202b7:	je     0x1400202ce
   1400202b9:	mov    edx,0xa
   1400202be:	lea    r8,[rip+0x18513]        # 0x1400387d8
   1400202c5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400202c9:	call   0x140001f08
   1400202ce:	xor    eax,eax
   1400202d0:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400202d8:	xor    rcx,rsp
   1400202db:	call   0x14002dd00
   1400202e0:	add    rsp,0xc0
   1400202e7:	pop    r15
   1400202e9:	pop    r14
   1400202eb:	pop    r13
   1400202ed:	pop    r12
   1400202ef:	pop    rdi
   1400202f0:	pop    rsi
   1400202f1:	pop    rbx
   1400202f2:	ret    
   1400202f3:	int3   
   1400202f4:	int3   
   1400202f5:	int3   
   1400202f6:	int3   
   1400202f7:	int3   
   1400202f8:	int3   
   1400202f9:	int3   
   1400202fa:	int3   
   1400202fb:	int3   
   1400202fc:	rex push rbx
   1400202fe:	push   rsi
   1400202ff:	push   rdi
   140020300:	push   r12
   140020302:	push   r13
   140020304:	push   r14
   140020306:	push   r15
   140020308:	sub    rsp,0xe0
   14002030f:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   14002031b:	mov    rax,QWORD PTR [rip+0x2acfe]        # 0x14004b020
   140020322:	xor    rax,rsp
   140020325:	mov    QWORD PTR [rsp+0xd8],rax
   14002032d:	mov    r14d,r9d
   140020330:	mov    rax,r8
   140020333:	mov    QWORD PTR [rsp+0x58],rax
   140020338:	mov    r12d,edx
   14002033b:	mov    rdi,rcx
   14002033e:	mov    QWORD PTR [rsp+0x60],rcx
   140020343:	mov    DWORD PTR [rsp+0x40],edx
   140020347:	mov    QWORD PTR [rsp+0x48],rax
   14002034c:	mov    DWORD PTR [rsp+0x38],r9d
   140020351:	mov    DWORD PTR [rcx+0x90],edx
   140020357:	test   BYTE PTR [rcx+0x94],0xc
   14002035e:	je     0x14002039b
   140020360:	lea    rax,[rip+0x2ad11]        # 0x14004b078
   140020367:	mov    rcx,QWORD PTR [rip+0x2ad0a]        # 0x14004b078
   14002036e:	cmp    rcx,rax
   140020371:	je     0x140020521
   140020377:	test   BYTE PTR [rcx+0x1c],0x4
   14002037b:	je     0x140020521
   140020381:	mov    edx,0x15
   140020386:	lea    r8,[rip+0x1844b]        # 0x1400387d8
   14002038d:	mov    rcx,QWORD PTR [rcx+0x10]
   140020391:	call   0x140001f08
   140020396:	jmp    0x140020521
   14002039b:	xor    esi,esi
   14002039d:	mov    QWORD PTR [rsp+0x50],rsi
   1400203a2:	xor    r15b,r15b
   1400203a5:	cmp    QWORD PTR [rcx+0x98],rsi
   1400203ac:	je     0x14002044a
   1400203b2:	lea    rcx,[rsp+0x68]
   1400203b7:	call   QWORD PTR [rip+0x11e23]        # 0x1400321e0
   1400203bd:	test   eax,eax
   1400203bf:	jne    0x14002041b
   1400203c1:	call   QWORD PTR [rip+0x11ec1]        # 0x140032288
   1400203c7:	mov    ebx,eax
   1400203c9:	test   BYTE PTR [rip+0x2e2bc],0x1        # 0x14004e68c
   1400203d0:	je     0x1400203ec
   1400203d2:	lea    edx,[rsi+0xa]
   1400203d5:	mov    DWORD PTR [rsp+0x20],eax
   1400203d9:	lea    r8,[rip+0x18a10]        # 0x140038df0
   1400203e0:	mov    rcx,QWORD PTR [rip+0x2e299]        # 0x14004e680
   1400203e7:	call   0x140024690
   1400203ec:	movzx  edx,bx
   1400203ef:	or     edx,0x80070000
   1400203f5:	test   ebx,ebx
   1400203f7:	cmovle edx,ebx
   1400203fa:	lea    rcx,[rsp+0x88]
   140020402:	call   0x140002064
   140020407:	lea    rdx,[rip+0x28d7a]        # 0x140049188
   14002040e:	lea    rcx,[rsp+0x88]
   140020416:	call   0x14002e2da
   14002041b:	mov    rsi,QWORD PTR [rsp+0x68]
   140020420:	mov    QWORD PTR [rsp+0x50],rsi
   140020425:	jmp    0x14002044a
   140020427:	mov    rsi,QWORD PTR [rsp+0x50]
   14002042c:	mov    r15b,BYTE PTR [rsp+0x30]
   140020431:	mov    rdi,QWORD PTR [rsp+0x60]
   140020436:	mov    r12d,DWORD PTR [rsp+0x40]
   14002043b:	mov    rax,QWORD PTR [rsp+0x48]
   140020440:	mov    QWORD PTR [rsp+0x58],rax
   140020445:	mov    r14d,DWORD PTR [rsp+0x38]
   14002044a:	mov    r13,QWORD PTR [rdi+0x28]
   14002044e:	test   r13,r13
   140020451:	je     0x14002047d
   140020453:	cmp    BYTE PTR [rdi+0xe0],0x0
   14002045a:	jne    0x14002047d
   14002045c:	mov    rax,QWORD PTR [r13+0x0]
   140020460:	mov    rbx,QWORD PTR [rax+0x10]
   140020464:	mov    rcx,rbx
   140020467:	call   QWORD PTR [rip+0x1223b]        # 0x1400326a8
   14002046d:	mov    r9d,r14d
   140020470:	mov    r8,QWORD PTR [rsp+0x58]
   140020475:	mov    edx,r12d
   140020478:	mov    rcx,r13
   14002047b:	call   rbx
   14002047d:	cmp    QWORD PTR [rdi+0x98],0x0
   140020485:	je     0x140020521
   14002048b:	test   r15b,r15b
   14002048e:	jne    0x140020521
   140020494:	lea    rcx,[rsp+0x48]
   140020499:	call   QWORD PTR [rip+0x11d41]        # 0x1400321e0
   14002049f:	test   eax,eax
   1400204a1:	jne    0x1400204ff
   1400204a3:	call   QWORD PTR [rip+0x11ddf]        # 0x140032288
   1400204a9:	mov    ebx,eax
   1400204ab:	test   BYTE PTR [rip+0x2e1da],0x1        # 0x14004e68c
   1400204b2:	je     0x1400204d0
   1400204b4:	mov    edx,0xb
   1400204b9:	mov    DWORD PTR [rsp+0x20],eax
   1400204bd:	lea    r8,[rip+0x1892c]        # 0x140038df0
   1400204c4:	mov    rcx,QWORD PTR [rip+0x2e1b5]        # 0x14004e680
   1400204cb:	call   0x140024690
   1400204d0:	movzx  edx,bx
   1400204d3:	or     edx,0x80070000
   1400204d9:	test   ebx,ebx
   1400204db:	cmovle edx,ebx
   1400204de:	lea    rcx,[rsp+0xb0]
   1400204e6:	call   0x140002064
   1400204eb:	lea    rdx,[rip+0x28c96]        # 0x140049188
   1400204f2:	lea    rcx,[rsp+0xb0]
   1400204fa:	call   0x14002e2da
   1400204ff:	mov    edx,DWORD PTR [rsp+0x48]
   140020503:	sub    edx,esi
   140020505:	mov    rcx,QWORD PTR [rdi+0x98]
   14002050c:	call   0x140024c68
   140020511:	mov    edx,r14d
   140020514:	mov    rcx,QWORD PTR [rdi+0x98]
   14002051b:	call   0x140024cc8
   140020520:	nop
   140020521:	mov    rcx,QWORD PTR [rsp+0xd8]
   140020529:	xor    rcx,rsp
   14002052c:	call   0x14002dd00
   140020531:	add    rsp,0xe0
   140020538:	pop    r15
   14002053a:	pop    r14
   14002053c:	pop    r13
   14002053e:	pop    r12
   140020540:	pop    rdi
   140020541:	pop    rsi
   140020542:	pop    rbx
   140020543:	ret    
   140020544:	int3   
   140020545:	int3   
   140020546:	int3   
   140020547:	int3   
   140020548:	int3   
   140020549:	int3   
   14002054a:	int3   
   14002054b:	int3   
   14002054c:	mov    QWORD PTR [rsp+0x8],rbx
   140020551:	mov    QWORD PTR [rsp+0x10],rbp
   140020556:	mov    QWORD PTR [rsp+0x18],rsi
   14002055b:	push   rdi
   14002055c:	sub    rsp,0x20
   140020560:	test   BYTE PTR [rcx+0x94],0xc
   140020567:	mov    esi,r8d
   14002056a:	mov    ebp,edx
   14002056c:	je     0x14002059e
   14002056e:	mov    rcx,QWORD PTR [rip+0x2ab03]        # 0x14004b078
   140020575:	lea    rax,[rip+0x2aafc]        # 0x14004b078
   14002057c:	cmp    rcx,rax
   14002057f:	je     0x1400205c1
   140020581:	test   BYTE PTR [rcx+0x1c],0x4
   140020585:	je     0x1400205c1
   140020587:	mov    rcx,QWORD PTR [rcx+0x10]
   14002058b:	lea    r8,[rip+0x18246]        # 0x1400387d8
   140020592:	mov    edx,0x19
   140020597:	call   0x140001f08
   14002059c:	jmp    0x1400205c1
   14002059e:	mov    rdi,QWORD PTR [rcx+0x28]
   1400205a2:	test   rdi,rdi
   1400205a5:	je     0x1400205c1
   1400205a7:	mov    rax,QWORD PTR [rdi]
   1400205aa:	mov    rbx,QWORD PTR [rax+0x20]
   1400205ae:	mov    rcx,rbx
   1400205b1:	call   QWORD PTR [rip+0x120f1]        # 0x1400326a8
   1400205b7:	mov    r8d,esi
   1400205ba:	mov    edx,ebp
   1400205bc:	mov    rcx,rdi
   1400205bf:	call   rbx
   1400205c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400205c6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400205cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400205d0:	add    rsp,0x20
   1400205d4:	pop    rdi
   1400205d5:	ret    
   1400205d6:	int3   
   1400205d7:	int3   
   1400205d8:	int3   
   1400205d9:	int3   
   1400205da:	int3   
   1400205db:	int3   
   1400205dc:	int3   
   1400205dd:	int3   
   1400205de:	int3   
   1400205df:	int3   
   1400205e0:	rex push rsi
   1400205e2:	push   rdi
   1400205e3:	push   r14
   1400205e5:	sub    rsp,0x40
   1400205e9:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400205f2:	mov    QWORD PTR [rsp+0x70],rbx
   1400205f7:	movsxd r14,edx
   1400205fa:	mov    rdi,rcx
   1400205fd:	lea    rsi,[rcx+0xb8]
   140020604:	mov    QWORD PTR [rsp+0x60],rsi
   140020609:	mov    QWORD PTR [rsp+0x78],rsi
   14002060e:	mov    rcx,rsi
   140020611:	call   QWORD PTR [rip+0x11af1]        # 0x140032108
   140020617:	nop
   140020618:	mov    r8d,DWORD PTR [rdi+r14*4+0xa0]
   140020620:	test   r8d,r8d
   140020623:	je     0x14002069d
   140020625:	mov    edx,r14d
   140020628:	mov    rcx,rdi
   14002062b:	call   0x14002054c
   140020630:	mov    rcx,QWORD PTR [rdi+0x98]
   140020637:	test   rcx,rcx
   14002063a:	je     0x140020649
   14002063c:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   140020644:	call   0x140024a28
   140020649:	mov    rcx,QWORD PTR [rdi+0x98]
   140020650:	test   rcx,rcx
   140020653:	je     0x140020662
   140020655:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   14002065d:	call   0x140024a88
   140020662:	mov    rcx,QWORD PTR [rdi+0x98]
   140020669:	test   rcx,rcx
   14002066c:	je     0x14002067b
   14002066e:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   140020676:	call   0x140024968
   14002067b:	mov    rcx,QWORD PTR [rdi+0x98]
   140020682:	test   rcx,rcx
   140020685:	je     0x140020694
   140020687:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   14002068f:	call   0x1400249c8
   140020694:	and    DWORD PTR [rdi+r14*4+0xa0],0x0
   14002069d:	lea    rax,[r14+r14*2]
   1400206a1:	add    rax,rax
   1400206a4:	mov    DWORD PTR [rdi+rax*8+0x58],0x1
   1400206ac:	mov    rdi,QWORD PTR [rdi+0x20]
   1400206b0:	mov    rax,QWORD PTR [rdi]
   1400206b3:	mov    rbx,QWORD PTR [rax+0x30]
   1400206b7:	mov    rcx,rbx
   1400206ba:	call   QWORD PTR [rip+0x11fe8]        # 0x1400326a8
   1400206c0:	mov    edx,r14d
   1400206c3:	mov    rcx,rdi
   1400206c6:	call   rbx
   1400206c8:	mov    ebx,eax
   1400206ca:	test   eax,eax
   1400206cc:	jns    0x140020704
   1400206ce:	lea    rax,[rip+0x2a9a3]        # 0x14004b078
   1400206d5:	mov    rcx,QWORD PTR [rip+0x2a99c]        # 0x14004b078
   1400206dc:	cmp    rcx,rax
   1400206df:	je     0x140020704
   1400206e1:	test   BYTE PTR [rcx+0x1c],0x2
   1400206e5:	je     0x140020704
   1400206e7:	mov    edx,0x1a
   1400206ec:	mov    DWORD PTR [rsp+0x20],ebx
   1400206f0:	mov    r9d,r14d
   1400206f3:	lea    r8,[rip+0x180de]        # 0x1400387d8
   1400206fa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400206fe:	call   0x140015b2c
   140020703:	nop
   140020704:	mov    rcx,rsi
   140020707:	call   QWORD PTR [rip+0x119eb]        # 0x1400320f8
   14002070d:	mov    eax,ebx
   14002070f:	jmp    0x140020720
   140020711:	mov    rcx,QWORD PTR [rsp+0x60]
   140020716:	call   QWORD PTR [rip+0x119dc]        # 0x1400320f8
   14002071c:	mov    eax,DWORD PTR [rsp+0x68]
   140020720:	mov    rbx,QWORD PTR [rsp+0x70]
   140020725:	add    rsp,0x40
   140020729:	pop    r14
   14002072b:	pop    rdi
   14002072c:	pop    rsi
   14002072d:	ret    
   14002072e:	int3   
   14002072f:	int3   
   140020730:	int3   
   140020731:	int3   
   140020732:	int3   
   140020733:	int3   
   140020734:	int3   
   140020735:	int3   
   140020736:	int3   
   140020737:	int3   
   140020738:	int3   
   140020739:	int3   
   14002073a:	int3   
   14002073b:	int3   
   14002073c:	int3   
   14002073d:	int3   
   14002073e:	int3   
   14002073f:	int3   
   140020740:	rex push rsi
   140020742:	push   rdi
   140020743:	push   r14
   140020745:	sub    rsp,0x30
   140020749:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140020752:	mov    QWORD PTR [rsp+0x60],rbx
   140020757:	mov    rsi,rcx
   14002075a:	lea    r14,[rcx+0xb8]
   140020761:	mov    QWORD PTR [rsp+0x58],r14
   140020766:	mov    QWORD PTR [rsp+0x50],r14
   14002076b:	mov    rcx,r14
   14002076e:	call   QWORD PTR [rip+0x11994]        # 0x140032108
   140020774:	nop
   140020775:	mov    rcx,QWORD PTR [rsi+0x98]
   14002077c:	test   rcx,rcx
   14002077f:	je     0x140020786
   140020781:	call   0x140024b48
   140020786:	cmp    QWORD PTR [rsi+0x20],0x0
   14002078b:	jne    0x1400207bd
   14002078d:	lea    rbx,[rip+0x2a8e4]        # 0x14004b078
   140020794:	mov    rcx,QWORD PTR [rip+0x2a8dd]        # 0x14004b078
   14002079b:	cmp    rcx,rbx
   14002079e:	je     0x1400207cb
   1400207a0:	test   BYTE PTR [rcx+0x1c],0x2
   1400207a4:	je     0x1400207cb
   1400207a6:	mov    edx,0x1c
   1400207ab:	lea    r8,[rip+0x18026]        # 0x1400387d8
   1400207b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400207b6:	call   0x140001f08
   1400207bb:	jmp    0x1400207c4
   1400207bd:	lea    rbx,[rip+0x2a8b4]        # 0x14004b078
   1400207c4:	mov    rcx,QWORD PTR [rip+0x2a8ad]        # 0x14004b078
   1400207cb:	mov    rdi,QWORD PTR [rsi+0x28]
   1400207cf:	test   rdi,rdi
   1400207d2:	je     0x140020827
   1400207d4:	mov    rax,QWORD PTR [rdi]
   1400207d7:	mov    rbx,QWORD PTR [rax+0x30]
   1400207db:	mov    rcx,rbx
   1400207de:	call   QWORD PTR [rip+0x11ec4]        # 0x1400326a8
   1400207e4:	mov    rcx,rdi
   1400207e7:	call   rbx
   1400207e9:	mov    rdi,QWORD PTR [rsi+0x28]
   1400207ed:	mov    rax,QWORD PTR [rdi]
   1400207f0:	mov    rbx,QWORD PTR [rax+0x38]
   1400207f4:	mov    rcx,rbx
   1400207f7:	call   QWORD PTR [rip+0x11eab]        # 0x1400326a8
   1400207fd:	mov    rcx,rdi
   140020800:	call   rbx
   140020802:	mov    rdi,QWORD PTR [rsi+0x28]
   140020806:	test   rdi,rdi
   140020809:	je     0x140020847
   14002080b:	mov    rax,QWORD PTR [rdi]
   14002080e:	mov    rbx,QWORD PTR [rax+0x8]
   140020812:	mov    rcx,rbx
   140020815:	call   QWORD PTR [rip+0x11e8d]        # 0x1400326a8
   14002081b:	mov    rcx,rdi
   14002081e:	call   rbx
   140020820:	and    QWORD PTR [rsi+0x28],0x0
   140020825:	jmp    0x140020847
   140020827:	cmp    rcx,rbx
   14002082a:	je     0x140020847
   14002082c:	test   BYTE PTR [rcx+0x1c],0x2
   140020830:	je     0x140020847
   140020832:	mov    edx,0x1d
   140020837:	lea    r8,[rip+0x17f9a]        # 0x1400387d8
   14002083e:	mov    rcx,QWORD PTR [rcx+0x10]
   140020842:	call   0x140001f08
   140020847:	and    QWORD PTR [rsi+0x20],0x0
   14002084c:	mov    rcx,r14
   14002084f:	call   QWORD PTR [rip+0x118a3]        # 0x1400320f8
   140020855:	xor    eax,eax
   140020857:	jmp    0x140020868
   140020859:	mov    rcx,QWORD PTR [rsp+0x58]
   14002085e:	call   QWORD PTR [rip+0x11894]        # 0x1400320f8
   140020864:	mov    eax,DWORD PTR [rsp+0x50]
   140020868:	mov    rbx,QWORD PTR [rsp+0x60]
   14002086d:	add    rsp,0x30
   140020871:	pop    r14
   140020873:	pop    rdi
   140020874:	pop    rsi
   140020875:	ret    
   140020876:	int3   
   140020877:	int3   
   140020878:	int3   
   140020879:	int3   
   14002087a:	int3   
   14002087b:	int3   
   14002087c:	mov    r11,rsp
   14002087f:	mov    QWORD PTR [r11+0x8],rcx
   140020883:	push   rdi
   140020884:	sub    rsp,0x40
   140020888:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140020890:	mov    QWORD PTR [r11+0x10],rbx
   140020894:	mov    QWORD PTR [r11+0x18],rsi
   140020898:	mov    rbx,rdx
   14002089b:	mov    rdi,rcx
   14002089e:	lea    rax,[rip+0x14263]        # 0x140034b08
   1400208a5:	mov    QWORD PTR [rcx],rax
   1400208a8:	lea    rax,[rip+0x14221]        # 0x140034ad0
   1400208af:	mov    QWORD PTR [rcx+0x8],rax
   1400208b3:	and    DWORD PTR [rcx+0x10],0x0
   1400208b7:	and    QWORD PTR [rcx+0x28],0x0
   1400208bc:	add    rcx,0x30
   1400208c0:	lea    rax,[rip+0xfffffffffffe3079]        # 0x140003940
   1400208c7:	mov    QWORD PTR [r11-0x28],rax
   1400208cb:	lea    r9,[rip+0xae]        # 0x140020980
   1400208d2:	mov    esi,0x2
   1400208d7:	mov    r8d,esi
   1400208da:	lea    edx,[rsi+0x2e]
   1400208dd:	call   0x14002e258
   1400208e2:	nop
   1400208e3:	and    BYTE PTR [rdi+0x94],0xf0
   1400208ea:	and    QWORD PTR [rdi+0x98],0x0
   1400208f2:	lea    rcx,[rdi+0xb8]
   1400208f9:	call   0x140003950
   1400208fe:	mov    BYTE PTR [rdi+0xe0],0x0
   140020905:	mov    QWORD PTR [rdi+0x20],rbx
   140020909:	lea    rax,[rdi+0x58]
   14002090d:	and    DWORD PTR [rax+0x4],0x0
   140020911:	and    DWORD PTR [rax],0x0
   140020914:	lea    rax,[rax+0x30]
   140020918:	sub    rsi,0x1
   14002091c:	jne    0x14002090d
   14002091e:	mov    rcx,QWORD PTR [rdi+0x98]
   140020925:	test   rcx,rcx
   140020928:	je     0x14002092f
   14002092a:	call   0x140024ae8
   14002092f:	mov    rcx,QWORD PTR [rdi+0x98]
   140020936:	test   rcx,rcx
   140020939:	je     0x140020940
   14002093b:	call   0x140024ba8
   140020940:	and    DWORD PTR [rdi+0xa4],0x0
   140020947:	and    DWORD PTR [rdi+0xa0],0x0
   14002094e:	and    QWORD PTR [rdi+0xb0],0x0
   140020956:	and    QWORD PTR [rdi+0xa8],0x0
   14002095e:	mov    rax,rdi
   140020961:	mov    rbx,QWORD PTR [rsp+0x58]
   140020966:	mov    rsi,QWORD PTR [rsp+0x60]
   14002096b:	add    rsp,0x40
   14002096f:	pop    rdi
   140020970:	ret    
   140020971:	int3   
   140020972:	int3   
   140020973:	int3   
   140020974:	int3   
   140020975:	int3   
   140020976:	int3   
   140020977:	int3   
   140020978:	int3   
   140020979:	int3   
   14002097a:	int3   
   14002097b:	int3   
   14002097c:	int3   
   14002097d:	int3   
   14002097e:	int3   
   14002097f:	int3   
   140020980:	rex push rbx
   140020982:	sub    rsp,0x20
   140020986:	mov    rbx,rcx
   140020989:	call   0x140003950
   14002098e:	mov    rax,rbx
   140020991:	add    rsp,0x20
   140020995:	pop    rbx
   140020996:	ret    
   140020997:	int3   
   140020998:	int3   
   140020999:	int3   
   14002099a:	int3   
   14002099b:	int3   
   14002099c:	int3   
   14002099d:	int3   
   14002099e:	int3   
   14002099f:	int3   
   1400209a0:	mov    QWORD PTR [rsp+0x18],r8
   1400209a5:	push   rbp
   1400209a6:	push   rsi
   1400209a7:	push   rdi
   1400209a8:	push   r12
   1400209aa:	push   r13
   1400209ac:	push   r14
   1400209ae:	push   r15
   1400209b0:	sub    rsp,0x30
   1400209b4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400209bd:	mov    QWORD PTR [rsp+0x70],rbx
   1400209c2:	mov    r15,rdx
   1400209c5:	mov    r13,rcx
   1400209c8:	mov    r12,QWORD PTR [rsp+0x90]
   1400209d0:	and    QWORD PTR [r12],0x0
   1400209d5:	test   rdx,rdx
   1400209d8:	jne    0x140020a12
   1400209da:	lea    rax,[rip+0x2a697]        # 0x14004b078
   1400209e1:	mov    rcx,QWORD PTR [rip+0x2a690]        # 0x14004b078
   1400209e8:	cmp    rcx,rax
   1400209eb:	je     0x140020a07
   1400209ed:	test   BYTE PTR [rcx+0x1c],0x1
   1400209f1:	je     0x140020a07
   1400209f3:	lea    edx,[r15+0x1f]
   1400209f7:	lea    r8,[rip+0x17dda]        # 0x1400387d8
   1400209fe:	mov    rcx,QWORD PTR [rcx+0x10]
   140020a02:	call   0x140001f08
   140020a07:	mov    ecx,0x80070057
   140020a0c:	call   0x140029d64
   140020a11:	int3   
   140020a12:	mov    ecx,0xe8
   140020a17:	call   0x140023f10
   140020a1c:	mov    QWORD PTR [rsp+0x80],rax
   140020a24:	mov    rdx,r15
   140020a27:	mov    rcx,rax
   140020a2a:	call   0x14002087c
   140020a2f:	mov    r14,rax
   140020a32:	test   rax,rax
   140020a35:	je     0x140020a3b
   140020a37:	lock inc DWORD PTR [rax+0x10]
   140020a3b:	mov    rbx,rax
   140020a3e:	mov    QWORD PTR [rsp+0x80],rax
   140020a46:	mov    r9,QWORD PTR [r15+0x20]
   140020a4a:	mov    QWORD PTR [rax+0x18],r9
   140020a4e:	lea    rax,[rip+0x2a623]        # 0x14004b078
   140020a55:	mov    rcx,QWORD PTR [rip+0x2a61c]        # 0x14004b078
   140020a5c:	cmp    rcx,rax
   140020a5f:	je     0x140020a7c
   140020a61:	test   BYTE PTR [rcx+0x1c],0x10
   140020a65:	je     0x140020a7c
   140020a67:	mov    edx,0x20
   140020a6c:	lea    r8,[rip+0x17d65]        # 0x1400387d8
   140020a73:	mov    rcx,QWORD PTR [rcx+0x10]
   140020a77:	call   0x14001ad20
   140020a7c:	mov    rsi,QWORD PTR [r13+0x0]
   140020a80:	mov    rax,QWORD PTR [r15]
   140020a83:	mov    rdi,QWORD PTR [rax+0x50]
   140020a87:	mov    rcx,rdi
   140020a8a:	call   QWORD PTR [rip+0x11c18]        # 0x1400326a8
   140020a90:	mov    rcx,r15
   140020a93:	call   rdi
   140020a95:	mov    dil,al
   140020a98:	mov    rcx,QWORD PTR [rsi+0x10]
   140020a9c:	call   QWORD PTR [rip+0x11c06]        # 0x1400326a8
   140020aa2:	mov    r8b,dil
   140020aa5:	lea    rdx,[r14+0x8]
   140020aa9:	mov    rcx,r13
   140020aac:	call   QWORD PTR [rsi+0x10]
   140020aaf:	mov    rsi,rax
   140020ab2:	test   rax,rax
   140020ab5:	je     0x140020ae7
   140020ab7:	mov    rdi,QWORD PTR [r14+0x28]
   140020abb:	test   rdi,rdi
   140020abe:	je     0x140020ad5
   140020ac0:	mov    rdx,QWORD PTR [rdi]
   140020ac3:	mov    rbx,QWORD PTR [rdx+0x8]
   140020ac7:	mov    rcx,rbx
   140020aca:	call   QWORD PTR [rip+0x11bd8]        # 0x1400326a8
   140020ad0:	mov    rcx,rdi
   140020ad3:	call   rbx
   140020ad5:	mov    QWORD PTR [r14+0x28],rsi
   140020ad9:	xor    ebx,ebx
   140020adb:	mov    QWORD PTR [rsp+0x80],rbx
   140020ae3:	mov    QWORD PTR [r12],r14
   140020ae7:	test   rbx,rbx
   140020aea:	je     0x140020b1b
   140020aec:	or     eax,0xffffffff
   140020aef:	lock xadd DWORD PTR [rbx+0x10],eax
   140020af4:	cmp    eax,0x1
   140020af7:	jne    0x140020b1b
   140020af9:	mov    rbx,QWORD PTR [rsp+0x80]
   140020b01:	mov    rax,QWORD PTR [rbx]
   140020b04:	mov    rdi,QWORD PTR [rax+0x28]
   140020b08:	mov    rcx,rdi
   140020b0b:	call   QWORD PTR [rip+0x11b97]        # 0x1400326a8
   140020b11:	mov    edx,0x1
   140020b16:	mov    rcx,rbx
   140020b19:	call   rdi
   140020b1b:	mov    rbx,QWORD PTR [rsp+0x70]
   140020b20:	add    rsp,0x30
   140020b24:	pop    r15
   140020b26:	pop    r14
   140020b28:	pop    r13
   140020b2a:	pop    r12
   140020b2c:	pop    rdi
   140020b2d:	pop    rsi
   140020b2e:	pop    rbp
   140020b2f:	ret    
   140020b30:	int3   
   140020b31:	int3   
   140020b32:	int3   
   140020b33:	int3   
   140020b34:	int3   
   140020b35:	int3   
   140020b36:	int3   
   140020b37:	int3   
   140020b38:	int3   
   140020b39:	int3   
   140020b3a:	int3   
   140020b3b:	int3   
   140020b3c:	int3   
   140020b3d:	int3   
   140020b3e:	int3   
   140020b3f:	int3   
   140020b40:	mov    r11,rsp
   140020b43:	push   rdi
   140020b44:	push   r14
   140020b46:	push   r15
   140020b48:	sub    rsp,0x80
   140020b4f:	mov    QWORD PTR [r11-0x60],0xfffffffffffffffe
   140020b57:	mov    QWORD PTR [r11+0x10],rbx
   140020b5b:	mov    QWORD PTR [r11+0x18],rsi
   140020b5f:	mov    rax,QWORD PTR [rip+0x2a4ba]        # 0x14004b020
   140020b66:	xor    rax,rsp
   140020b69:	mov    QWORD PTR [rsp+0x78],rax
   140020b6e:	mov    ebx,edx
   140020b70:	mov    rdi,rcx
   140020b73:	lea    rsi,[rcx+0xb0]
   140020b7a:	mov    QWORD PTR [rsp+0x30],rsi
   140020b7f:	mov    QWORD PTR [r11-0x78],rsi
   140020b83:	mov    rcx,rsi
   140020b86:	call   QWORD PTR [rip+0x1157c]        # 0x140032108
   140020b8c:	nop
   140020b8d:	test   BYTE PTR [rip+0x2f42c],0x1        # 0x14004ffc0
   140020b94:	je     0x140020baa
   140020b96:	lea    r8,[rip+0x13873]        # 0x140034410
   140020b9d:	lea    rdx,[rip+0x1384c]        # 0x1400343f0
   140020ba4:	call   0x140003818
   140020ba9:	nop
   140020baa:	cmp    QWORD PTR [rdi+0x18],0x0
   140020baf:	jne    0x140020bf0
   140020bb1:	lea    rax,[rip+0x2a4c0]        # 0x14004b078
   140020bb8:	mov    rcx,QWORD PTR [rip+0x2a4b9]        # 0x14004b078
   140020bbf:	cmp    rcx,rax
   140020bc2:	je     0x140020be0
   140020bc4:	test   BYTE PTR [rcx+0x1c],0x2
   140020bc8:	je     0x140020be0
   140020bca:	mov    edx,0x22
   140020bcf:	lea    r8,[rip+0x17c02]        # 0x1400387d8
   140020bd6:	mov    rcx,QWORD PTR [rcx+0x10]
   140020bda:	call   0x140001f08
   140020bdf:	nop
   140020be0:	mov    rcx,rsi
   140020be3:	call   QWORD PTR [rip+0x1150f]        # 0x1400320f8
   140020be9:	xor    eax,eax
   140020beb:	jmp    0x140020cdb
   140020bf0:	lea    r14,[rdi+0x28]
   140020bf4:	mov    QWORD PTR [rsp+0x48],r14
   140020bf9:	mov    rcx,r14
   140020bfc:	call   QWORD PTR [rip+0x11506]        # 0x140032108
   140020c02:	nop
   140020c03:	lea    r15,[rdi+0x58]
   140020c07:	mov    QWORD PTR [rsp+0x40],r15
   140020c0c:	mov    rcx,r15
   140020c0f:	call   QWORD PTR [rip+0x114f3]        # 0x140032108
   140020c15:	nop
   140020c16:	test   ebx,ebx
   140020c18:	je     0x140020cab
   140020c1e:	mov    rcx,QWORD PTR [rdi+0x90]
   140020c25:	test   rcx,rcx
   140020c28:	je     0x140020c2f
   140020c2a:	call   0x140024c08
   140020c2f:	and    BYTE PTR [rdi+0x8c],0xfd
   140020c36:	or     BYTE PTR [rdi+0x8c],0x1
   140020c3d:	mov    rdi,QWORD PTR [rdi+0x18]
   140020c41:	mov    rax,QWORD PTR [rdi]
   140020c44:	mov    rbx,QWORD PTR [rax+0x38]
   140020c48:	mov    rcx,rbx
   140020c4b:	call   QWORD PTR [rip+0x11a57]        # 0x1400326a8
   140020c51:	mov    rcx,rdi
   140020c54:	call   rbx
   140020c56:	mov    ebx,eax
   140020c58:	test   eax,eax
   140020c5a:	jns    0x140020cab
   140020c5c:	lea    rax,[rip+0x2a415]        # 0x14004b078
   140020c63:	mov    rcx,QWORD PTR [rip+0x2a40e]        # 0x14004b078
   140020c6a:	cmp    rcx,rax
   140020c6d:	je     0x140020c8d
   140020c6f:	test   BYTE PTR [rcx+0x1c],0x1
   140020c73:	je     0x140020c8d
   140020c75:	mov    edx,0x23
   140020c7a:	mov    r9d,ebx
   140020c7d:	lea    r8,[rip+0x17b54]        # 0x1400387d8
   140020c84:	mov    rcx,QWORD PTR [rcx+0x10]
   140020c88:	call   0x140001f70
   140020c8d:	mov    edx,ebx
   140020c8f:	lea    rcx,[rsp+0x50]
   140020c94:	call   0x140002064
   140020c99:	lea    rdx,[rip+0x284e8]        # 0x140049188
   140020ca0:	lea    rcx,[rsp+0x50]
   140020ca5:	call   0x14002e2da
   140020caa:	nop
   140020cab:	mov    rcx,r15
   140020cae:	call   QWORD PTR [rip+0x11444]        # 0x1400320f8
   140020cb4:	nop
   140020cb5:	mov    rcx,r14
   140020cb8:	call   QWORD PTR [rip+0x1143a]        # 0x1400320f8
   140020cbe:	nop
   140020cbf:	mov    rcx,rsi
   140020cc2:	call   QWORD PTR [rip+0x11430]        # 0x1400320f8
   140020cc8:	xor    eax,eax
   140020cca:	jmp    0x140020cdb
   140020ccc:	mov    rcx,QWORD PTR [rsp+0x30]
   140020cd1:	call   QWORD PTR [rip+0x11421]        # 0x1400320f8
   140020cd7:	mov    eax,DWORD PTR [rsp+0x20]
   140020cdb:	mov    rcx,QWORD PTR [rsp+0x78]
   140020ce0:	xor    rcx,rsp
   140020ce3:	call   0x14002dd00
   140020ce8:	lea    r11,[rsp+0x80]
   140020cf0:	mov    rbx,QWORD PTR [r11+0x28]
   140020cf4:	mov    rsi,QWORD PTR [r11+0x30]
   140020cf8:	mov    rsp,r11
   140020cfb:	pop    r15
   140020cfd:	pop    r14
   140020cff:	pop    rdi
   140020d00:	ret    
   140020d01:	int3   
   140020d02:	int3   
   140020d03:	int3   
   140020d04:	int3   
   140020d05:	int3   
   140020d06:	int3   
   140020d07:	int3   
   140020d08:	int3   
   140020d09:	int3   
   140020d0a:	int3   
   140020d0b:	int3   
   140020d0c:	int3   
   140020d0d:	int3   
   140020d0e:	int3   
   140020d0f:	int3   
   140020d10:	rex push rsi
   140020d12:	push   rdi
   140020d13:	push   r14
   140020d15:	sub    rsp,0x30
   140020d19:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140020d22:	mov    QWORD PTR [rsp+0x58],rbx
   140020d27:	mov    r14,rdx
   140020d2a:	mov    rdi,rcx
   140020d2d:	lea    rsi,[rcx+0xb0]
   140020d34:	mov    QWORD PTR [rsp+0x60],rsi
   140020d39:	mov    QWORD PTR [rsp+0x50],rsi
   140020d3e:	mov    rcx,rsi
   140020d41:	call   QWORD PTR [rip+0x113c1]        # 0x140032108
   140020d47:	nop
   140020d48:	cmp    QWORD PTR [rdi+0x18],0x0
   140020d4d:	jne    0x140020d8e
   140020d4f:	lea    rax,[rip+0x2a322]        # 0x14004b078
   140020d56:	mov    rcx,QWORD PTR [rip+0x2a31b]        # 0x14004b078
   140020d5d:	cmp    rcx,rax
   140020d60:	je     0x140020d7e
   140020d62:	test   BYTE PTR [rcx+0x1c],0x2
   140020d66:	je     0x140020d7e
   140020d68:	mov    edx,0x25
   140020d6d:	lea    r8,[rip+0x17a64]        # 0x1400387d8
   140020d74:	mov    rcx,QWORD PTR [rcx+0x10]
   140020d78:	call   0x140001f08
   140020d7d:	nop
   140020d7e:	mov    rcx,rsi
   140020d81:	call   QWORD PTR [rip+0x11371]        # 0x1400320f8
   140020d87:	mov    eax,0x80004005
   140020d8c:	jmp    0x140020dc8
   140020d8e:	mov    rdi,QWORD PTR [rdi+0x18]
   140020d92:	mov    rax,QWORD PTR [rdi]
   140020d95:	mov    rbx,QWORD PTR [rax+0x40]
   140020d99:	mov    rcx,rbx
   140020d9c:	call   QWORD PTR [rip+0x11906]        # 0x1400326a8
   140020da2:	mov    rdx,r14
   140020da5:	mov    rcx,rdi
   140020da8:	call   rbx
   140020daa:	mov    ebx,eax
   140020dac:	mov    rcx,rsi
   140020daf:	call   QWORD PTR [rip+0x11343]        # 0x1400320f8
   140020db5:	mov    eax,ebx
   140020db7:	jmp    0x140020dc8
   140020db9:	mov    rcx,QWORD PTR [rsp+0x60]
   140020dbe:	call   QWORD PTR [rip+0x11334]        # 0x1400320f8
   140020dc4:	mov    eax,DWORD PTR [rsp+0x50]
   140020dc8:	mov    rbx,QWORD PTR [rsp+0x58]
   140020dcd:	add    rsp,0x30
   140020dd1:	pop    r14
   140020dd3:	pop    rdi
   140020dd4:	pop    rsi
   140020dd5:	ret    
   140020dd6:	int3   
   140020dd7:	int3   
   140020dd8:	int3   
   140020dd9:	int3   
   140020dda:	int3   
   140020ddb:	int3   
   140020ddc:	int3   
   140020ddd:	int3   
   140020dde:	int3   
   140020ddf:	int3   
   140020de0:	mov    r11,rsp
   140020de3:	push   rdi
   140020de4:	push   r14
   140020de6:	push   r15
   140020de8:	sub    rsp,0x80
   140020def:	mov    QWORD PTR [r11-0x60],0xfffffffffffffffe
   140020df7:	mov    QWORD PTR [r11+0x10],rbx
   140020dfb:	mov    QWORD PTR [r11+0x18],rsi
   140020dff:	mov    rax,QWORD PTR [rip+0x2a21a]        # 0x14004b020
   140020e06:	xor    rax,rsp
   140020e09:	mov    QWORD PTR [rsp+0x78],rax
   140020e0e:	mov    rdi,rcx
   140020e11:	lea    rsi,[rcx+0xb0]
   140020e18:	mov    QWORD PTR [rsp+0x30],rsi
   140020e1d:	mov    QWORD PTR [r11-0x78],rsi
   140020e21:	mov    rcx,rsi
   140020e24:	call   QWORD PTR [rip+0x112de]        # 0x140032108
   140020e2a:	nop
   140020e2b:	cmp    QWORD PTR [rdi+0x18],0x0
   140020e30:	jne    0x140020e71
   140020e32:	lea    rax,[rip+0x2a23f]        # 0x14004b078
   140020e39:	mov    rcx,QWORD PTR [rip+0x2a238]        # 0x14004b078
   140020e40:	cmp    rcx,rax
   140020e43:	je     0x140020e61
   140020e45:	test   BYTE PTR [rcx+0x1c],0x2
   140020e49:	je     0x140020e61
   140020e4b:	mov    edx,0x27
   140020e50:	lea    r8,[rip+0x17981]        # 0x1400387d8
   140020e57:	mov    rcx,QWORD PTR [rcx+0x10]
   140020e5b:	call   0x140001f08
   140020e60:	nop
   140020e61:	mov    rcx,rsi
   140020e64:	call   QWORD PTR [rip+0x1128e]        # 0x1400320f8
   140020e6a:	xor    eax,eax
   140020e6c:	jmp    0x140020f6e
   140020e71:	lea    r14,[rdi+0x28]
   140020e75:	mov    QWORD PTR [rsp+0x48],r14
   140020e7a:	mov    rcx,r14
   140020e7d:	call   QWORD PTR [rip+0x11285]        # 0x140032108
   140020e83:	nop
   140020e84:	lea    r15,[rdi+0x58]
   140020e88:	mov    QWORD PTR [rsp+0x40],r15
   140020e8d:	mov    rcx,r15
   140020e90:	call   QWORD PTR [rip+0x11272]        # 0x140032108
   140020e96:	nop
   140020e97:	mov    al,BYTE PTR [rdi+0x8c]
   140020e9d:	test   al,0x3
   140020e9f:	jne    0x140020f3e
   140020ea5:	test   al,0xc
   140020ea7:	jne    0x140020f3e
   140020ead:	and    al,0xf7
   140020eaf:	or     al,0x4
   140020eb1:	mov    BYTE PTR [rdi+0x8c],al
   140020eb7:	mov    rdi,QWORD PTR [rdi+0x18]
   140020ebb:	mov    rax,QWORD PTR [rdi]
   140020ebe:	mov    rbx,QWORD PTR [rax+0x48]
   140020ec2:	mov    rcx,rbx
   140020ec5:	call   QWORD PTR [rip+0x117dd]        # 0x1400326a8
   140020ecb:	mov    rcx,rdi
   140020ece:	call   rbx
   140020ed0:	mov    ebx,eax
   140020ed2:	test   eax,eax
   140020ed4:	jns    0x140020f25
   140020ed6:	lea    rax,[rip+0x2a19b]        # 0x14004b078
   140020edd:	mov    rcx,QWORD PTR [rip+0x2a194]        # 0x14004b078
   140020ee4:	cmp    rcx,rax
   140020ee7:	je     0x140020f07
   140020ee9:	test   BYTE PTR [rcx+0x1c],0x1
   140020eed:	je     0x140020f07
   140020eef:	mov    edx,0x28
   140020ef4:	mov    r9d,ebx
   140020ef7:	lea    r8,[rip+0x178da]        # 0x1400387d8
   140020efe:	mov    rcx,QWORD PTR [rcx+0x10]
   140020f02:	call   0x140001f70
   140020f07:	mov    edx,ebx
   140020f09:	lea    rcx,[rsp+0x50]
   140020f0e:	call   0x140002064
   140020f13:	lea    rdx,[rip+0x2826e]        # 0x140049188
   140020f1a:	lea    rcx,[rsp+0x50]
   140020f1f:	call   0x14002e2da
   140020f24:	nop
   140020f25:	mov    rcx,r15
   140020f28:	call   QWORD PTR [rip+0x111ca]        # 0x1400320f8
   140020f2e:	nop
   140020f2f:	mov    rcx,r14
   140020f32:	call   QWORD PTR [rip+0x111c0]        # 0x1400320f8
   140020f38:	nop
   140020f39:	jmp    0x140020e61
   140020f3e:	mov    rcx,r15
   140020f41:	call   QWORD PTR [rip+0x111b1]        # 0x1400320f8
   140020f47:	nop
   140020f48:	mov    rcx,r14
   140020f4b:	call   QWORD PTR [rip+0x111a7]        # 0x1400320f8
   140020f51:	nop
   140020f52:	mov    rcx,rsi
   140020f55:	call   QWORD PTR [rip+0x1119d]        # 0x1400320f8
   140020f5b:	xor    eax,eax
   140020f5d:	jmp    0x140020f6e
   140020f5f:	mov    rcx,QWORD PTR [rsp+0x30]
   140020f64:	call   QWORD PTR [rip+0x1118e]        # 0x1400320f8
   140020f6a:	mov    eax,DWORD PTR [rsp+0x20]
   140020f6e:	mov    rcx,QWORD PTR [rsp+0x78]
   140020f73:	xor    rcx,rsp
   140020f76:	call   0x14002dd00
   140020f7b:	lea    r11,[rsp+0x80]
   140020f83:	mov    rbx,QWORD PTR [r11+0x28]
   140020f87:	mov    rsi,QWORD PTR [r11+0x30]
   140020f8b:	mov    rsp,r11
   140020f8e:	pop    r15
   140020f90:	pop    r14
   140020f92:	pop    rdi
   140020f93:	ret    
   140020f94:	int3   
   140020f95:	int3   
   140020f96:	int3   
   140020f97:	int3   
   140020f98:	int3   
   140020f99:	int3   
   140020f9a:	int3   
   140020f9b:	int3   
   140020f9c:	int3   
   140020f9d:	int3   
   140020f9e:	int3   
   140020f9f:	int3   
   140020fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140020fa5:	push   rdi
   140020fa6:	sub    rsp,0x20
   140020faa:	lea    rdi,[rcx+0xb0]
   140020fb1:	mov    rbx,rcx
   140020fb4:	mov    rcx,rdi
   140020fb7:	call   QWORD PTR [rip+0x1114b]        # 0x140032108
   140020fbd:	mov    rcx,QWORD PTR [rbx+0x90]
   140020fc4:	test   rcx,rcx
   140020fc7:	je     0x140020fce
   140020fc9:	call   0x140024d28
   140020fce:	mov    rcx,QWORD PTR [rip+0x2a0a3]        # 0x14004b078
   140020fd5:	lea    rax,[rip+0x2a09c]        # 0x14004b078
   140020fdc:	cmp    rcx,rax
   140020fdf:	je     0x140020ffc
   140020fe1:	test   BYTE PTR [rcx+0x1c],0x4
   140020fe5:	je     0x140020ffc
   140020fe7:	mov    rcx,QWORD PTR [rcx+0x10]
   140020feb:	lea    r8,[rip+0x177e6]        # 0x1400387d8
   140020ff2:	mov    edx,0x2a
   140020ff7:	call   0x140001f08
   140020ffc:	mov    rcx,rdi
   140020fff:	call   QWORD PTR [rip+0x110f3]        # 0x1400320f8
   140021005:	mov    rbx,QWORD PTR [rsp+0x30]
   14002100a:	xor    eax,eax
   14002100c:	add    rsp,0x20
   140021010:	pop    rdi
   140021011:	ret    
   140021012:	int3   
   140021013:	int3   
   140021014:	int3   
   140021015:	int3   
   140021016:	int3   
   140021017:	int3   
   140021018:	int3   
   140021019:	int3   
   14002101a:	int3   
   14002101b:	int3   
   14002101c:	int3   
   14002101d:	int3   
   14002101e:	int3   
   14002101f:	int3   
   140021020:	sub    rcx,0x8
   140021024:	jmp    0x14001f9e0
   140021029:	int3   
   14002102a:	int3   
   14002102b:	int3   
   14002102c:	int3   
   14002102d:	int3   
   14002102e:	int3   
   14002102f:	int3   
   140021030:	mov    QWORD PTR [rsp+0x8],rbx
   140021035:	push   rdi
   140021036:	sub    rsp,0x20
   14002103a:	lea    rdx,[rcx+0x50]
   14002103e:	mov    rbx,rcx
   140021041:	call   0x140029518
   140021046:	xor    edi,edi
   140021048:	test   eax,eax
   14002104a:	js     0x14002108f
   14002104c:	lea    rdx,[rbx+0x58]
   140021050:	mov    rcx,rbx
   140021053:	call   0x1400294d4
   140021058:	test   eax,eax
   14002105a:	js     0x14002108f
   14002105c:	lea    rdx,[rbx+0x59]
   140021060:	mov    rcx,rbx
   140021063:	call   0x1400294d4
   140021068:	test   eax,eax
   14002106a:	js     0x14002108f
   14002106c:	lea    rdx,[rbx+0x5a]
   140021070:	mov    rcx,rbx
   140021073:	call   0x1400294d4
   140021078:	test   eax,eax
   14002107a:	js     0x14002108f
   14002107c:	lea    rdx,[rbx+0x5b]
   140021080:	mov    rcx,rbx
   140021083:	call   0x1400294d4
   140021088:	test   eax,eax
   14002108a:	cmovs  edi,eax
   14002108d:	mov    eax,edi
   14002108f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021094:	add    rsp,0x20
   140021098:	pop    rdi
   140021099:	ret    
   14002109a:	int3   
   14002109b:	int3   
   14002109c:	int3   
   14002109d:	int3   
   14002109e:	int3   
   14002109f:	int3   
   1400210a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400210a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400210aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400210af:	push   rdi
   1400210b0:	sub    rsp,0x20
   1400210b4:	mov    esi,0x4
   1400210b9:	lea    r9,[rcx+0x50]
   1400210bd:	mov    r8d,esi
   1400210c0:	mov    rbx,rcx
   1400210c3:	lea    ebp,[rsi-0x2]
   1400210c6:	mov    edx,ebp
   1400210c8:	call   0x140029600
   1400210cd:	xor    edi,edi
   1400210cf:	test   eax,eax
   1400210d1:	js     0x140021284
   1400210d7:	lea    rdx,[rbx+0x58]
   1400210db:	mov    rcx,rbx
   1400210de:	call   0x140029518
   1400210e3:	test   eax,eax
   1400210e5:	js     0x140021284
   1400210eb:	lea    r9,[rbx+0x60]
   1400210ef:	mov    r8d,esi
   1400210f2:	mov    edx,ebp
   1400210f4:	mov    rcx,rbx
   1400210f7:	call   0x140029600
   1400210fc:	test   eax,eax
   1400210fe:	js     0x140021284
   140021104:	lea    r9,[rbx+0x64]
   140021108:	mov    r8d,esi
   14002110b:	mov    edx,ebp
   14002110d:	mov    rcx,rbx
   140021110:	call   0x140029600
   140021115:	test   eax,eax
   140021117:	js     0x140021284
   14002111d:	lea    rdx,[rbx+0x68]
   140021121:	mov    rcx,rbx
   140021124:	call   0x140029518
   140021129:	test   eax,eax
   14002112b:	js     0x140021284
   140021131:	lea    r9,[rbx+0x70]
   140021135:	mov    r8d,esi
   140021138:	mov    edx,ebp
   14002113a:	mov    rcx,rbx
   14002113d:	call   0x140029600
   140021142:	test   eax,eax
   140021144:	js     0x140021284
   14002114a:	lea    rdx,[rbx+0x78]
   14002114e:	mov    rcx,rbx
   140021151:	call   0x140029518
   140021156:	test   eax,eax
   140021158:	js     0x140021284
   14002115e:	lea    r9,[rbx+0x80]
   140021165:	mov    r8d,esi
   140021168:	mov    edx,ebp
   14002116a:	mov    rcx,rbx
   14002116d:	call   0x140029600
   140021172:	test   eax,eax
   140021174:	js     0x140021284
   14002117a:	lea    rdx,[rbx+0x88]
   140021181:	mov    rcx,rbx
   140021184:	call   0x140029518
   140021189:	test   eax,eax
   14002118b:	js     0x140021284
   140021191:	lea    rdx,[rbx+0x90]
   140021198:	mov    rcx,rbx
   14002119b:	call   0x140029518
   1400211a0:	test   eax,eax
   1400211a2:	js     0x140021284
   1400211a8:	lea    r9,[rbx+0x98]
   1400211af:	mov    r8d,esi
   1400211b2:	mov    edx,ebp
   1400211b4:	mov    rcx,rbx
   1400211b7:	call   0x140029600
   1400211bc:	test   eax,eax
   1400211be:	js     0x140021284
   1400211c4:	lea    rdx,[rbx+0xa0]
   1400211cb:	mov    rcx,rbx
   1400211ce:	call   0x140029518
   1400211d3:	test   eax,eax
   1400211d5:	js     0x140021284
   1400211db:	lea    rdx,[rbx+0xa8]
   1400211e2:	mov    rcx,rbx
   1400211e5:	call   0x140029518
   1400211ea:	test   eax,eax
   1400211ec:	js     0x140021284
   1400211f2:	lea    r9,[rbx+0xb0]
   1400211f9:	mov    r8d,esi
   1400211fc:	mov    edx,ebp
   1400211fe:	mov    rcx,rbx
   140021201:	call   0x140029600
   140021206:	test   eax,eax
   140021208:	js     0x140021284
   14002120a:	lea    rdx,[rbx+0xb8]
   140021211:	mov    rcx,rbx
   140021214:	call   0x140029518
   140021219:	test   eax,eax
   14002121b:	js     0x140021284
   14002121d:	lea    r9,[rbx+0xc0]
   140021224:	mov    rcx,rbx
   140021227:	lea    edx,[rsi+0x2]
   14002122a:	lea    r8d,[rsi+0x4]
   14002122e:	call   0x140029600
   140021233:	test   eax,eax
   140021235:	js     0x140021284
   140021237:	lea    r9,[rbx+0xc8]
   14002123e:	mov    rcx,rbx
   140021241:	lea    edx,[rsi+0x2]
   140021244:	lea    r8d,[rsi+0x4]
   140021248:	call   0x140029600
   14002124d:	test   eax,eax
   14002124f:	js     0x140021284
   140021251:	lea    r9,[rbx+0xd0]
   140021258:	mov    r8d,esi
   14002125b:	mov    edx,ebp
   14002125d:	mov    rcx,rbx
   140021260:	call   0x140029600
   140021265:	test   eax,eax
   140021267:	js     0x140021284
   140021269:	lea    r9,[rbx+0xd4]
   140021270:	mov    r8d,esi
   140021273:	mov    edx,ebp
   140021275:	mov    rcx,rbx
   140021278:	call   0x140029600
   14002127d:	test   eax,eax
   14002127f:	cmovs  edi,eax
   140021282:	mov    eax,edi
   140021284:	mov    rbx,QWORD PTR [rsp+0x30]
   140021289:	mov    rbp,QWORD PTR [rsp+0x38]
   14002128e:	mov    rsi,QWORD PTR [rsp+0x40]
   140021293:	add    rsp,0x20
   140021297:	pop    rdi
   140021298:	ret    
   140021299:	int3   
   14002129a:	int3   
   14002129b:	int3   
   14002129c:	int3   
   14002129d:	int3   
   14002129e:	int3   
   14002129f:	int3   
   1400212a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400212a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400212aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400212af:	push   rdi
   1400212b0:	sub    rsp,0x20
   1400212b4:	mov    esi,0x8
   1400212b9:	lea    r9,[rcx+0x50]
   1400212bd:	mov    r8d,esi
   1400212c0:	mov    rbx,rcx
   1400212c3:	lea    ebp,[rsi-0x2]
   1400212c6:	mov    edx,ebp
   1400212c8:	call   0x140029600
   1400212cd:	xor    edi,edi
   1400212cf:	test   eax,eax
   1400212d1:	js     0x14002132a
   1400212d3:	lea    r9,[rbx+0x58]
   1400212d7:	mov    r8d,esi
   1400212da:	mov    edx,ebp
   1400212dc:	mov    rcx,rbx
   1400212df:	call   0x140029600
   1400212e4:	test   eax,eax
   1400212e6:	js     0x14002132a
   1400212e8:	lea    r9,[rbx+0x60]
   1400212ec:	mov    r8d,esi
   1400212ef:	mov    edx,ebp
   1400212f1:	mov    rcx,rbx
   1400212f4:	call   0x140029600
   1400212f9:	test   eax,eax
   1400212fb:	js     0x14002132a
   1400212fd:	lea    r9,[rbx+0x68]
   140021301:	mov    r8d,esi
   140021304:	mov    edx,ebp
   140021306:	mov    rcx,rbx
   140021309:	call   0x140029600
   14002130e:	test   eax,eax
   140021310:	js     0x14002132a
   140021312:	lea    r9,[rbx+0x70]
   140021316:	mov    r8d,esi
   140021319:	mov    edx,ebp
   14002131b:	mov    rcx,rbx
   14002131e:	call   0x140029600
   140021323:	test   eax,eax
   140021325:	cmovs  edi,eax
   140021328:	mov    eax,edi
   14002132a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002132f:	mov    rbp,QWORD PTR [rsp+0x38]
   140021334:	mov    rsi,QWORD PTR [rsp+0x40]
   140021339:	add    rsp,0x20
   14002133d:	pop    rdi
   14002133e:	ret    
   14002133f:	int3   
   140021340:	int3   
   140021341:	int3   
   140021342:	int3   
   140021343:	int3   
   140021344:	int3   
   140021345:	int3   
   140021346:	int3   
   140021347:	int3   
   140021348:	int3   
   140021349:	int3   
   14002134a:	int3   
   14002134b:	int3   
   14002134c:	int3   
   14002134d:	int3   
   14002134e:	int3   
   14002134f:	int3   
   140021350:	mov    QWORD PTR [rsp+0x8],rbx
   140021355:	push   rdi
   140021356:	sub    rsp,0x20
   14002135a:	mov    edx,0x2
   14002135f:	lea    r9,[rcx+0x50]
   140021363:	mov    rbx,rcx
   140021366:	lea    r8d,[rdx+0x2]
   14002136a:	call   0x140029600
   14002136f:	xor    edi,edi
   140021371:	test   eax,eax
   140021373:	js     0x14002138c
   140021375:	lea    r8,[rbx+0x58]
   140021379:	mov    rcx,rbx
   14002137c:	lea    rdx,[rbx+0x60]
   140021380:	call   0x140029598
   140021385:	test   eax,eax
   140021387:	cmovs  edi,eax
   14002138a:	mov    eax,edi
   14002138c:	mov    rbx,QWORD PTR [rsp+0x30]
   140021391:	add    rsp,0x20
   140021395:	pop    rdi
   140021396:	ret    
   140021397:	int3   
   140021398:	int3   
   140021399:	int3   
   14002139a:	int3   
   14002139b:	int3   
   14002139c:	int3   
   14002139d:	int3   
   14002139e:	int3   
   14002139f:	int3   
   1400213a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400213a5:	push   rdi
   1400213a6:	sub    rsp,0x20
   1400213aa:	mov    edx,0x6
   1400213af:	lea    r9,[rcx+0x50]
   1400213b3:	mov    rdi,rcx
   1400213b6:	lea    r8d,[rdx+0x2]
   1400213ba:	call   0x140029600
   1400213bf:	xor    ebx,ebx
   1400213c1:	test   eax,eax
   1400213c3:	js     0x1400213df
   1400213c5:	lea    r9,[rdi+0x58]
   1400213c9:	mov    rcx,rdi
   1400213cc:	lea    edx,[rbx+0x6]
   1400213cf:	lea    r8d,[rbx+0x8]
   1400213d3:	call   0x140029600
   1400213d8:	test   eax,eax
   1400213da:	cmovs  ebx,eax
   1400213dd:	mov    eax,ebx
   1400213df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213e4:	add    rsp,0x20
   1400213e8:	pop    rdi
   1400213e9:	ret    
   1400213ea:	int3   
   1400213eb:	int3   
   1400213ec:	int3   
   1400213ed:	int3   
   1400213ee:	int3   
   1400213ef:	int3   
   1400213f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400213f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400213fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400213ff:	push   rdi
   140021400:	push   r14
   140021402:	push   r15
   140021404:	sub    rsp,0x20
   140021408:	mov    edx,0x2
   14002140d:	lea    rbp,[rcx+0x54]
   140021411:	mov    r9,rbp
   140021414:	mov    rbx,rcx
   140021417:	lea    r8d,[rdx+0x2]
   14002141b:	call   0x140029600
   140021420:	test   eax,eax
   140021422:	js     0x14002148c
   140021424:	mov    eax,DWORD PTR [rbp+0x0]
   140021427:	xor    esi,esi
   140021429:	mov    QWORD PTR [rbx+0x17c8],rax
   140021430:	test   rax,rax
   140021433:	je     0x14002148a
   140021435:	lea    rdi,[rbx+0xff8]
   14002143c:	lea    r14,[rdi-0xfa0]
   140021443:	mov    rcx,rbx
   140021446:	lea    r15,[rdi-0x7d0]
   14002144d:	mov    r8,r14
   140021450:	mov    rdx,r15
   140021453:	call   0x140029598
   140021458:	test   eax,eax
   14002145a:	js     0x14002148c
   14002145c:	cmp    BYTE PTR [rbx+0x50],0x0
   140021460:	jne    0x14002147b
   140021462:	mov    rcx,QWORD PTR [r14]
   140021465:	mov    QWORD PTR [rdi],rcx
   140021468:	lea    rax,[rcx+0x20]
   14002146c:	mov    QWORD PTR [rcx+0x10],rax
   140021470:	mov    rax,QWORD PTR [rdi]
   140021473:	mov    ecx,DWORD PTR [rax+0x1c]
   140021476:	cmp    rcx,QWORD PTR [r15]
   140021479:	jne    0x1400214a5
   14002147b:	mov    eax,DWORD PTR [rbp+0x0]
   14002147e:	inc    rsi
   140021481:	add    rdi,0x8
   140021485:	cmp    rsi,rax
   140021488:	jb     0x14002143c
   14002148a:	xor    eax,eax
   14002148c:	mov    rbx,QWORD PTR [rsp+0x40]
   140021491:	mov    rbp,QWORD PTR [rsp+0x48]
   140021496:	mov    rsi,QWORD PTR [rsp+0x50]
   14002149b:	add    rsp,0x20
   14002149f:	pop    r15
   1400214a1:	pop    r14
   1400214a3:	pop    rdi
   1400214a4:	ret    
   1400214a5:	mov    eax,0x80070057
   1400214aa:	jmp    0x14002148c
   1400214ac:	int3   
   1400214ad:	int3   
   1400214ae:	int3   
   1400214af:	int3   
   1400214b0:	int3   
   1400214b1:	int3   
   1400214b2:	int3   
   1400214b3:	int3   
   1400214b4:	int3   
   1400214b5:	int3   
   1400214b6:	int3   
   1400214b7:	int3   
   1400214b8:	int3   
   1400214b9:	int3   
   1400214ba:	int3   
   1400214bb:	int3   
   1400214bc:	int3   
   1400214bd:	int3   
   1400214be:	int3   
   1400214bf:	int3   
   1400214c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400214c5:	push   rdi
   1400214c6:	sub    rsp,0x20
   1400214ca:	mov    ebx,edx
   1400214cc:	mov    rdi,rcx
   1400214cf:	call   0x14002194c
   1400214d4:	test   bl,0x1
   1400214d7:	je     0x1400214e2
   1400214d9:	mov    rcx,rdi
   1400214dc:	call   QWORD PTR [rip+0x110e6]        # 0x1400325c8
   1400214e2:	mov    rax,rdi
   1400214e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400214ea:	add    rsp,0x20
   1400214ee:	pop    rdi
   1400214ef:	ret    
   1400214f0:	int3   
   1400214f1:	int3   
   1400214f2:	int3   
   1400214f3:	int3   
   1400214f4:	int3   
   1400214f5:	int3   
   1400214f6:	int3   
   1400214f7:	int3   
   1400214f8:	int3   
   1400214f9:	int3   
   1400214fa:	int3   
   1400214fb:	int3   
   1400214fc:	int3   
   1400214fd:	int3   
   1400214fe:	int3   
   1400214ff:	int3   
   140021500:	mov    QWORD PTR [rsp+0x8],rbx
   140021505:	push   rdi
   140021506:	sub    rsp,0x20
   14002150a:	lea    rax,[rip+0x136ef]        # 0x140034c00
   140021511:	mov    ebx,edx
   140021513:	mov    QWORD PTR [rcx],rax
   140021516:	mov    rdi,rcx
   140021519:	call   0x140029248
   14002151e:	test   bl,0x1
   140021521:	je     0x14002152c
   140021523:	mov    rcx,rdi
   140021526:	call   QWORD PTR [rip+0x1109c]        # 0x1400325c8
   14002152c:	mov    rax,rdi
   14002152f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021534:	add    rsp,0x20
   140021538:	pop    rdi
   140021539:	ret    
   14002153a:	int3   
   14002153b:	int3   
   14002153c:	int3   
   14002153d:	int3   
   14002153e:	int3   
   14002153f:	int3   
   140021540:	mov    QWORD PTR [rsp+0x8],rbx
   140021545:	push   rdi
   140021546:	sub    rsp,0x20
   14002154a:	lea    rax,[rip+0x13697]        # 0x140034be8
   140021551:	mov    ebx,edx
   140021553:	mov    QWORD PTR [rcx],rax
   140021556:	mov    rdi,rcx
   140021559:	call   0x140029248
   14002155e:	test   bl,0x1
   140021561:	je     0x14002156c
   140021563:	mov    rcx,rdi
   140021566:	call   QWORD PTR [rip+0x1105c]        # 0x1400325c8
   14002156c:	mov    rax,rdi
   14002156f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021574:	add    rsp,0x20
   140021578:	pop    rdi
   140021579:	ret    
   14002157a:	int3   
   14002157b:	int3   
   14002157c:	int3   
   14002157d:	int3   
   14002157e:	int3   
   14002157f:	int3   
   140021580:	mov    QWORD PTR [rsp+0x8],rbx
   140021585:	push   rdi
   140021586:	sub    rsp,0x20
   14002158a:	lea    rax,[rip+0x1363f]        # 0x140034bd0
   140021591:	mov    ebx,edx
   140021593:	mov    QWORD PTR [rcx],rax
   140021596:	mov    rdi,rcx
   140021599:	call   0x140029248
   14002159e:	test   bl,0x1
   1400215a1:	je     0x1400215ac
   1400215a3:	mov    rcx,rdi
   1400215a6:	call   QWORD PTR [rip+0x1101c]        # 0x1400325c8
   1400215ac:	mov    rax,rdi
   1400215af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215b4:	add    rsp,0x20
   1400215b8:	pop    rdi
   1400215b9:	ret    
   1400215ba:	int3   
   1400215bb:	int3   
   1400215bc:	int3   
   1400215bd:	int3   
   1400215be:	int3   
   1400215bf:	int3   
   1400215c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400215c5:	push   rdi
   1400215c6:	sub    rsp,0x20
   1400215ca:	lea    rax,[rip+0x135e7]        # 0x140034bb8
   1400215d1:	mov    ebx,edx
   1400215d3:	mov    QWORD PTR [rcx],rax
   1400215d6:	mov    rdi,rcx
   1400215d9:	call   0x140029248
   1400215de:	test   bl,0x1
   1400215e1:	je     0x1400215ec
   1400215e3:	mov    rcx,rdi
   1400215e6:	call   QWORD PTR [rip+0x10fdc]        # 0x1400325c8
   1400215ec:	mov    rax,rdi
   1400215ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215f4:	add    rsp,0x20
   1400215f8:	pop    rdi
   1400215f9:	ret    
   1400215fa:	int3   
   1400215fb:	int3   
   1400215fc:	int3   
   1400215fd:	int3   
   1400215fe:	int3   
   1400215ff:	int3   
   140021600:	mov    QWORD PTR [rsp+0x8],rbx
   140021605:	push   rdi
   140021606:	sub    rsp,0x20
   14002160a:	lea    rax,[rip+0x1358f]        # 0x140034ba0
   140021611:	mov    ebx,edx
   140021613:	mov    QWORD PTR [rcx],rax
   140021616:	mov    rdi,rcx
   140021619:	call   0x140029248
   14002161e:	test   bl,0x1
   140021621:	je     0x14002162c
   140021623:	mov    rcx,rdi
   140021626:	call   QWORD PTR [rip+0x10f9c]        # 0x1400325c8
   14002162c:	mov    rax,rdi
   14002162f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021634:	add    rsp,0x20
   140021638:	pop    rdi
   140021639:	ret    
   14002163a:	int3   
   14002163b:	int3   
   14002163c:	int3   
   14002163d:	int3   
   14002163e:	int3   
   14002163f:	int3   
   140021640:	mov    QWORD PTR [rsp+0x8],rbx
   140021645:	push   rdi
   140021646:	sub    rsp,0x20
   14002164a:	lea    rax,[rip+0x13537]        # 0x140034b88
   140021651:	mov    ebx,edx
   140021653:	mov    QWORD PTR [rcx],rax
   140021656:	mov    rdi,rcx
   140021659:	call   0x140029248
   14002165e:	test   bl,0x1
   140021661:	je     0x14002166c
   140021663:	mov    rcx,rdi
   140021666:	call   QWORD PTR [rip+0x10f5c]        # 0x1400325c8
   14002166c:	mov    rax,rdi
   14002166f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021674:	add    rsp,0x20
   140021678:	pop    rdi
   140021679:	ret    
   14002167a:	int3   
   14002167b:	int3   
   14002167c:	int3   
   14002167d:	int3   
   14002167e:	int3   
   14002167f:	int3   
   140021680:	mov    rax,rsp
   140021683:	push   rsi
   140021684:	push   rdi
   140021685:	push   r12
   140021687:	push   r14
   140021689:	push   r15
   14002168b:	sub    rsp,0x110
   140021692:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14002169b:	mov    QWORD PTR [rax+0x18],rbx
   14002169f:	mov    rax,QWORD PTR [rip+0x2997a]        # 0x14004b020
   1400216a6:	xor    rax,rsp
   1400216a9:	mov    QWORD PTR [rsp+0x108],rax
   1400216b1:	mov    r15,rdx
   1400216b4:	mov    r12,rcx
   1400216b7:	xor    edi,edi
   1400216b9:	mov    r14d,edi
   1400216bc:	mov    QWORD PTR [rcx],rdi
   1400216bf:	lea    ecx,[rdi+0x68]
   1400216c2:	call   0x140023f10
   1400216c7:	mov    rsi,rax
   1400216ca:	mov    DWORD PTR [rax+0x8],edi
   1400216cd:	lea    rax,[rip+0x13544]        # 0x140034c18
   1400216d4:	mov    QWORD PTR [rsi],rax
   1400216d7:	test   r15,r15
   1400216da:	je     0x1400216f0
   1400216dc:	mov    rax,QWORD PTR [r15]
   1400216df:	mov    rbx,QWORD PTR [rax]
   1400216e2:	mov    rcx,rbx
   1400216e5:	call   QWORD PTR [rip+0x10fbd]        # 0x1400326a8
   1400216eb:	mov    rcx,r15
   1400216ee:	call   rbx
   1400216f0:	mov    QWORD PTR [rsi+0x10],r15
   1400216f4:	mov    DWORD PTR [rsi+0x20],edi
   1400216f7:	lea    rax,[rip+0x13622]        # 0x140034d20
   1400216fe:	mov    QWORD PTR [rsi+0x18],rax
   140021702:	mov    QWORD PTR [rsi+0x28],rdi
   140021706:	mov    BYTE PTR [rsi+0x30],dil
   14002170a:	mov    BYTE PTR [rsi+0x31],dil
   14002170e:	mov    QWORD PTR [rsi+0x38],rdi
   140021712:	lea    r15,[rsi+0x40]
   140021716:	mov    QWORD PTR [r15],rdi
   140021719:	mov    QWORD PTR [rsi+0x48],rdi
   14002171d:	mov    QWORD PTR [rsi+0x50],rdi
   140021721:	mov    QWORD PTR [rsi+0x58],rdi
   140021725:	mov    QWORD PTR [rsi+0x60],rdi
   140021729:	mov    rax,QWORD PTR [rsi]
   14002172c:	mov    rbx,QWORD PTR [rax]
   14002172f:	mov    rcx,rbx
   140021732:	call   QWORD PTR [rip+0x10f70]        # 0x1400326a8
   140021738:	mov    rcx,rsi
   14002173b:	call   rbx
   14002173d:	nop
   14002173e:	mov    QWORD PTR [rsp+0x60],rdi
   140021743:	mov    QWORD PTR [r12],rsi
   140021747:	mov    rcx,rsi
   14002174a:	call   0x14002251c
   14002174f:	mov    QWORD PTR [rsp+0x58],rdi
   140021754:	mov    QWORD PTR [rsp+0x30],rdi
   140021759:	lea    rdx,[rsp+0x30]
   14002175e:	xor    ecx,ecx
   140021760:	call   QWORD PTR [rip+0x10c6a]        # 0x1400323d0
   140021766:	mov    ebx,eax
   140021768:	test   eax,eax
   14002176a:	jns    0x1400217ba
   14002176c:	lea    rdx,[rip+0x29905]        # 0x14004b078
   140021773:	mov    rcx,QWORD PTR [rip+0x298fe]        # 0x14004b078
   14002177a:	cmp    rcx,rdx
   14002177d:	je     0x14002179d
   14002177f:	test   BYTE PTR [rcx+0x1c],0x1
   140021783:	je     0x14002179d
   140021785:	mov    edx,0xe
   14002178a:	mov    r9d,eax
   14002178d:	lea    r8,[rip+0x17054]        # 0x1400387e8
   140021794:	mov    rcx,QWORD PTR [rcx+0x10]
   140021798:	call   0x140001f70
   14002179d:	mov    edx,ebx
   14002179f:	lea    rcx,[rsp+0x68]
   1400217a4:	call   0x140002064
   1400217a9:	lea    rdx,[rip+0x279d8]        # 0x140049188
   1400217b0:	lea    rcx,[rsp+0x68]
   1400217b5:	call   0x14002e2da
   1400217ba:	mov    rax,QWORD PTR [rsp+0x30]
   1400217bf:	test   rax,rax
   1400217c2:	jne    0x140021816
   1400217c4:	lea    rdx,[rip+0x298ad]        # 0x14004b078
   1400217cb:	mov    rcx,QWORD PTR [rip+0x298a6]        # 0x14004b078
   1400217d2:	cmp    rcx,rdx
   1400217d5:	je     0x1400217f0
   1400217d7:	test   BYTE PTR [rcx+0x1c],0x1
   1400217db:	je     0x1400217f0
   1400217dd:	lea    edx,[rax+0xf]
   1400217e0:	lea    r8,[rip+0x17001]        # 0x1400387e8
   1400217e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400217eb:	call   0x140001f08
   1400217f0:	mov    edx,0x8007139f
   1400217f5:	lea    rcx,[rsp+0xb8]
   1400217fd:	call   0x140002064
   140021802:	lea    rdx,[rip+0x2797f]        # 0x140049188
   140021809:	lea    rcx,[rsp+0xb8]
   140021811:	call   0x14002e2da
   140021816:	mov    rcx,QWORD PTR [rsi+0x38]
   14002181a:	test   rcx,rcx
   14002181d:	je     0x14002182e
   14002181f:	call   QWORD PTR [rip+0x10bdb]        # 0x140032400
   140021825:	mov    QWORD PTR [rsi+0x38],rdi
   140021829:	mov    rax,QWORD PTR [rsp+0x30]
   14002182e:	mov    QWORD PTR [rsi+0x38],rax
   140021832:	lea    rax,[rip+0xb37]        # 0x140022370
   140021839:	mov    QWORD PTR [rsp+0x38],rax
   14002183e:	mov    QWORD PTR [rsp+0x40],rsi
   140021843:	cmp    QWORD PTR [r15],rdi
   140021846:	je     0x14002189c
   140021848:	lea    rdx,[rip+0x29829]        # 0x14004b078
   14002184f:	mov    rcx,QWORD PTR [rip+0x29822]        # 0x14004b078
   140021856:	cmp    rcx,rdx
   140021859:	je     0x140021876
   14002185b:	test   BYTE PTR [rcx+0x1c],0x1
   14002185f:	je     0x140021876
   140021861:	mov    edx,0x10
   140021866:	lea    r8,[rip+0x16f7b]        # 0x1400387e8
   14002186d:	mov    rcx,QWORD PTR [rcx+0x10]
   140021871:	call   0x140001f08
   140021876:	mov    edx,0x800700a0
   14002187b:	lea    rcx,[rsp+0x90]
   140021883:	call   0x140002064
   140021888:	lea    rdx,[rip+0x278f9]        # 0x140049188
   14002188f:	lea    rcx,[rsp+0x90]
   140021897:	call   0x14002e2da
   14002189c:	mov    QWORD PTR [rsp+0x20],r15
   1400218a1:	lea    r9,[rsp+0x38]
   1400218a6:	xor    r8d,r8d
   1400218a9:	mov    edx,0x82
   1400218ae:	mov    rcx,QWORD PTR [rsi+0x38]
   1400218b2:	call   QWORD PTR [rip+0x10b10]        # 0x1400323c8
   1400218b8:	mov    ebx,eax
   1400218ba:	test   eax,eax
   1400218bc:	jns    0x140021913
   1400218be:	lea    rdx,[rip+0x297b3]        # 0x14004b078
   1400218c5:	mov    rcx,QWORD PTR [rip+0x297ac]        # 0x14004b078
   1400218cc:	cmp    rcx,rdx
   1400218cf:	je     0x1400218ef
   1400218d1:	test   BYTE PTR [rcx+0x1c],0x1
   1400218d5:	je     0x1400218ef
   1400218d7:	mov    edx,0x11
   1400218dc:	mov    r9d,eax
   1400218df:	lea    r8,[rip+0x16f02]        # 0x1400387e8
   1400218e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400218ea:	call   0x140001f70
   1400218ef:	mov    edx,ebx
   1400218f1:	lea    rcx,[rsp+0xe0]
   1400218f9:	call   0x140002064
   1400218fe:	lea    rdx,[rip+0x27883]        # 0x140049188
   140021905:	lea    rcx,[rsp+0xe0]
   14002190d:	call   0x14002e2da
   140021912:	nop
   140021913:	jmp    0x14002191a
   140021915:	mov    r14d,DWORD PTR [rsp+0x30]
   14002191a:	mov    eax,r14d
   14002191d:	mov    rcx,QWORD PTR [rsp+0x108]
   140021925:	xor    rcx,rsp
   140021928:	call   0x14002dd00
   14002192d:	mov    rbx,QWORD PTR [rsp+0x150]
   140021935:	add    rsp,0x110
   14002193c:	pop    r15
   14002193e:	pop    r14
   140021940:	pop    r12
   140021942:	pop    rdi
   140021943:	pop    rsi
   140021944:	ret    
   140021945:	int3   
   140021946:	int3   
   140021947:	int3   
   140021948:	int3   
   140021949:	int3   
   14002194a:	int3   
   14002194b:	int3   
   14002194c:	mov    QWORD PTR [rsp+0x8],rbx
   140021951:	mov    QWORD PTR [rsp+0x10],rsi
   140021956:	push   rdi
   140021957:	sub    rsp,0x20
   14002195b:	cmp    QWORD PTR [rcx+0x10],0x0
   140021960:	lea    rax,[rip+0x132b1]        # 0x140034c18
   140021967:	mov    QWORD PTR [rcx],rax
   14002196a:	mov    rdi,rcx
   14002196d:	je     0x140021974
   14002196f:	call   0x140021a20
   140021974:	mov    rcx,QWORD PTR [rdi+0x60]
   140021978:	test   rcx,rcx
   14002197b:	je     0x140021983
   14002197d:	call   QWORD PTR [rip+0x10af5]        # 0x140032478
   140021983:	mov    rcx,QWORD PTR [rdi+0x58]
   140021987:	test   rcx,rcx
   14002198a:	je     0x140021992
   14002198c:	call   QWORD PTR [rip+0x10ae6]        # 0x140032478
   140021992:	mov    rcx,QWORD PTR [rdi+0x50]
   140021996:	test   rcx,rcx
   140021999:	je     0x1400219a1
   14002199b:	call   QWORD PTR [rip+0x10ad7]        # 0x140032478
   1400219a1:	mov    rcx,QWORD PTR [rdi+0x48]
   1400219a5:	test   rcx,rcx
   1400219a8:	je     0x1400219b0
   1400219aa:	call   QWORD PTR [rip+0x10ac8]        # 0x140032478
   1400219b0:	mov    rcx,QWORD PTR [rdi+0x40]
   1400219b4:	test   rcx,rcx
   1400219b7:	je     0x1400219bf
   1400219b9:	call   QWORD PTR [rip+0x10a41]        # 0x140032400
   1400219bf:	mov    rcx,QWORD PTR [rdi+0x38]
   1400219c3:	test   rcx,rcx
   1400219c6:	je     0x1400219ce
   1400219c8:	call   QWORD PTR [rip+0x10a32]        # 0x140032400
   1400219ce:	lea    rcx,[rdi+0x18]
   1400219d2:	call   0x140029b48
   1400219d7:	mov    rsi,QWORD PTR [rdi+0x10]
   1400219db:	test   rsi,rsi
   1400219de:	je     0x1400219f5
   1400219e0:	mov    rax,QWORD PTR [rsi]
   1400219e3:	mov    rbx,QWORD PTR [rax+0x8]
   1400219e7:	mov    rcx,rbx
   1400219ea:	call   QWORD PTR [rip+0x10cb8]        # 0x1400326a8
   1400219f0:	mov    rcx,rsi
   1400219f3:	call   rbx
   1400219f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400219fa:	lea    rax,[rip+0x1313f]        # 0x140034b40
   140021a01:	mov    rsi,QWORD PTR [rsp+0x38]
   140021a06:	mov    QWORD PTR [rdi],rax
   140021a09:	add    rsp,0x20
   140021a0d:	pop    rdi
   140021a0e:	ret    
   140021a0f:	int3   
   140021a10:	int3   
   140021a11:	int3   
   140021a12:	int3   
   140021a13:	int3   
   140021a14:	int3   
   140021a15:	int3   
   140021a16:	int3   
   140021a17:	int3   
   140021a18:	int3   
   140021a19:	int3   
   140021a1a:	int3   
   140021a1b:	int3   
   140021a1c:	int3   
   140021a1d:	int3   
   140021a1e:	int3   
   140021a1f:	int3   
   140021a20:	mov    QWORD PTR [rsp+0x8],rbx
   140021a25:	push   rdi
   140021a26:	sub    rsp,0x20
   140021a2a:	mov    rbx,rcx
   140021a2d:	add    rcx,0x18
   140021a31:	call   0x140029b84
   140021a36:	mov    rcx,QWORD PTR [rbx+0x40]
   140021a3a:	test   rcx,rcx
   140021a3d:	je     0x140021a4a
   140021a3f:	call   QWORD PTR [rip+0x109bb]        # 0x140032400
   140021a45:	and    QWORD PTR [rbx+0x40],0x0
   140021a4a:	mov    rcx,QWORD PTR [rbx+0x38]
   140021a4e:	test   rcx,rcx
   140021a51:	je     0x140021a5e
   140021a53:	call   QWORD PTR [rip+0x109a7]        # 0x140032400
   140021a59:	and    QWORD PTR [rbx+0x38],0x0
   140021a5e:	mov    rcx,QWORD PTR [rbx+0x48]
   140021a62:	test   rcx,rcx
   140021a65:	je     0x140021a72
   140021a67:	call   QWORD PTR [rip+0x10a0b]        # 0x140032478
   140021a6d:	and    QWORD PTR [rbx+0x48],0x0
   140021a72:	mov    rcx,QWORD PTR [rbx+0x50]
   140021a76:	test   rcx,rcx
   140021a79:	je     0x140021a86
   140021a7b:	call   QWORD PTR [rip+0x109f7]        # 0x140032478
   140021a81:	and    QWORD PTR [rbx+0x50],0x0
   140021a86:	mov    rcx,QWORD PTR [rbx+0x58]
   140021a8a:	test   rcx,rcx
   140021a8d:	je     0x140021a9a
   140021a8f:	call   QWORD PTR [rip+0x109e3]        # 0x140032478
   140021a95:	and    QWORD PTR [rbx+0x58],0x0
   140021a9a:	mov    rcx,QWORD PTR [rbx+0x60]
   140021a9e:	test   rcx,rcx
   140021aa1:	je     0x140021aae
   140021aa3:	call   QWORD PTR [rip+0x109cf]        # 0x140032478
   140021aa9:	and    QWORD PTR [rbx+0x60],0x0
   140021aae:	mov    rdi,QWORD PTR [rbx+0x10]
   140021ab2:	and    QWORD PTR [rbx+0x10],0x0
   140021ab7:	test   rdi,rdi
   140021aba:	je     0x140021ad1
   140021abc:	mov    rax,QWORD PTR [rdi]
   140021abf:	mov    rbx,QWORD PTR [rax+0x8]
   140021ac3:	mov    rcx,rbx
   140021ac6:	call   QWORD PTR [rip+0x10bdc]        # 0x1400326a8
   140021acc:	mov    rcx,rdi
   140021acf:	call   rbx
   140021ad1:	mov    rbx,QWORD PTR [rsp+0x30]
   140021ad6:	add    rsp,0x20
   140021ada:	pop    rdi
   140021adb:	ret    
   140021adc:	int3   
   140021add:	int3   
   140021ade:	int3   
   140021adf:	int3   
   140021ae0:	int3   
   140021ae1:	int3   
   140021ae2:	int3   
   140021ae3:	int3   
   140021ae4:	int3   
   140021ae5:	int3   
   140021ae6:	int3   
   140021ae7:	int3   
   140021ae8:	int3   
   140021ae9:	int3   
   140021aea:	int3   
   140021aeb:	int3   
   140021aec:	int3   
   140021aed:	int3   
   140021aee:	int3   
   140021aef:	int3   
   140021af0:	mov    QWORD PTR [rsp+0x8],rbx
   140021af5:	push   rbp
   140021af6:	push   rsi
   140021af7:	push   rdi
   140021af8:	mov    rbp,rsp
   140021afb:	sub    rsp,0x20
   140021aff:	xor    ebx,ebx
   140021b01:	lea    rcx,[rbp+0x30]
   140021b05:	and    QWORD PTR [rbp+0x30],rbx
   140021b09:	mov    edi,edx
   140021b0b:	mov    QWORD PTR [rbp+0x38],rbx
   140021b0f:	call   0x140022f50
   140021b14:	mov    esi,eax
   140021b16:	test   eax,eax
   140021b18:	jns    0x140021b64
   140021b1a:	mov    rax,QWORD PTR [rbp+0x30]
   140021b1e:	test   rax,rax
   140021b21:	je     0x140021bae
   140021b27:	mov    ecx,DWORD PTR [rax+0x8]
   140021b2a:	cmp    ecx,0x1
   140021b2d:	jne    0x140021b34
   140021b2f:	mov    DWORD PTR [rax+0x8],ebx
   140021b32:	jmp    0x140021b41
   140021b34:	or     ecx,0xffffffff
   140021b37:	lock xadd DWORD PTR [rax+0x8],ecx
   140021b3c:	sub    ecx,0x1
   140021b3f:	jg     0x140021b5e
   140021b41:	mov    rbx,QWORD PTR [rbp+0x30]
   140021b45:	mov    rax,QWORD PTR [rbx]
   140021b48:	mov    rdi,QWORD PTR [rax]
   140021b4b:	mov    rcx,rdi
   140021b4e:	call   QWORD PTR [rip+0x10b54]        # 0x1400326a8
   140021b54:	mov    edx,0x1
   140021b59:	mov    rcx,rbx
   140021b5c:	call   rdi
   140021b5e:	mov    rbx,QWORD PTR [rbp+0x38]
   140021b62:	jmp    0x140021bae
   140021b64:	mov    rbx,QWORD PTR [rbp+0x30]
   140021b68:	mov    dl,0x1
   140021b6a:	mov    rcx,rbx
   140021b6d:	and    QWORD PTR [rbx+0x60],0x0
   140021b72:	and    QWORD PTR [rbx+0x58],0x0
   140021b77:	mov    DWORD PTR [rbx+0x50],edi
   140021b7a:	call   0x14002965c
   140021b7f:	mov    esi,eax
   140021b81:	test   eax,eax
   140021b83:	jns    0x140021ba3
   140021b85:	mov    eax,DWORD PTR [rbx+0x8]
   140021b88:	cmp    eax,0x1
   140021b8b:	jne    0x140021b96
   140021b8d:	mov    DWORD PTR [rbx+0x8],0x0
   140021b94:	jmp    0x140021b41
   140021b96:	or     eax,0xffffffff
   140021b99:	lock xadd DWORD PTR [rbx+0x8],eax
   140021b9e:	sub    eax,0x1
   140021ba1:	jmp    0x140021b3f
   140021ba3:	and    QWORD PTR [rbp+0x30],0x0
   140021ba8:	xor    esi,esi
   140021baa:	mov    QWORD PTR [rbp+0x38],rbx
   140021bae:	test   esi,esi
   140021bb0:	js     0x140021bc2
   140021bb2:	mov    rcx,rbx
   140021bb5:	call   0x140022dd4
   140021bba:	mov    esi,eax
   140021bbc:	test   eax,eax
   140021bbe:	js     0x140021bc2
   140021bc0:	xor    esi,esi
   140021bc2:	test   rbx,rbx
   140021bc5:	je     0x140021c02
   140021bc7:	mov    eax,DWORD PTR [rbx+0x8]
   140021bca:	cmp    eax,0x1
   140021bcd:	jne    0x140021bd8
   140021bcf:	mov    DWORD PTR [rbx+0x8],0x0
   140021bd6:	jmp    0x140021be5
   140021bd8:	or     eax,0xffffffff
   140021bdb:	lock xadd DWORD PTR [rbx+0x8],eax
   140021be0:	sub    eax,0x1
   140021be3:	jg     0x140021c02
   140021be5:	mov    rbx,QWORD PTR [rbp+0x38]
   140021be9:	mov    rcx,QWORD PTR [rbx]
   140021bec:	mov    rdi,QWORD PTR [rcx]
   140021bef:	mov    rcx,rdi
   140021bf2:	call   QWORD PTR [rip+0x10ab0]        # 0x1400326a8
   140021bf8:	mov    edx,0x1
   140021bfd:	mov    rcx,rbx
   140021c00:	call   rdi
   140021c02:	mov    eax,esi
   140021c04:	mov    rbx,QWORD PTR [rsp+0x40]
   140021c09:	add    rsp,0x20
   140021c0d:	pop    rdi
   140021c0e:	pop    rsi
   140021c0f:	pop    rbp
   140021c10:	ret    
   140021c11:	int3   
   140021c12:	int3   
   140021c13:	int3   
   140021c14:	int3   
   140021c15:	int3   
   140021c16:	int3   
   140021c17:	int3   
   140021c18:	int3   
   140021c19:	int3   
   140021c1a:	int3   
   140021c1b:	int3   
   140021c1c:	int3   
   140021c1d:	int3   
   140021c1e:	int3   
   140021c1f:	int3   
   140021c20:	mov    rax,rsp
   140021c23:	push   r14
   140021c25:	sub    rsp,0x90
   140021c2c:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140021c34:	mov    QWORD PTR [rax+0x8],rbx
   140021c38:	mov    QWORD PTR [rax+0x10],rbp
   140021c3c:	mov    QWORD PTR [rax+0x18],rsi
   140021c40:	mov    QWORD PTR [rax+0x20],rdi
   140021c44:	mov    rax,QWORD PTR [rip+0x293d5]        # 0x14004b020
   140021c4b:	xor    rax,rsp
   140021c4e:	mov    QWORD PTR [rsp+0x80],rax
   140021c56:	mov    esi,r9d
   140021c59:	mov    rbp,r8
   140021c5c:	mov    r14d,edx
   140021c5f:	mov    eax,DWORD PTR [rsp+0xc0]
   140021c66:	test   eax,eax
   140021c68:	je     0x140021c86
   140021c6a:	sub    eax,0x1
   140021c6d:	je     0x140021c7f
   140021c6f:	cmp    eax,0x1
   140021c72:	je     0x140021c78
   140021c74:	xor    ebx,ebx
   140021c76:	jmp    0x140021c8b
   140021c78:	mov    ebx,0x30
   140021c7d:	jmp    0x140021c8b
   140021c7f:	mov    ebx,0x1e
   140021c84:	jmp    0x140021c8b
   140021c86:	mov    ebx,0x2f
   140021c8b:	mov    ecx,0xd8
   140021c90:	call   0x140023f10
   140021c95:	mov    rdi,rax
   140021c98:	and    DWORD PTR [rax+0x8],0x0
   140021c9c:	mov    DWORD PTR [rax+0x10],0x2
   140021ca3:	and    QWORD PTR [rax+0x18],0x0
   140021ca8:	and    QWORD PTR [rax+0x28],0x0
   140021cad:	and    QWORD PTR [rax+0x30],0x0
   140021cb2:	and    QWORD PTR [rax+0x38],0x0
   140021cb7:	and    QWORD PTR [rax+0x40],0x0
   140021cbc:	mov    WORD PTR [rax+0x48],0x0
   140021cc2:	mov    BYTE PTR [rax+0x4a],0x0
   140021cc6:	lea    rax,[rip+0x12eeb]        # 0x140034bb8
   140021ccd:	mov    QWORD PTR [rdi],rax
   140021cd0:	mov    eax,DWORD PTR [rdi+0x8]
   140021cd3:	test   eax,eax
   140021cd5:	jne    0x140021ce0
   140021cd7:	mov    DWORD PTR [rdi+0x8],0x1
   140021cde:	jmp    0x140021ce4
   140021ce0:	lock inc DWORD PTR [rdi+0x8]
   140021ce4:	mov    QWORD PTR [rsp+0x20],rdi
   140021ce9:	mov    DWORD PTR [rdi+0x50],r14d
   140021ced:	mov    QWORD PTR [rdi+0x58],rbp
   140021cf1:	mov    DWORD PTR [rdi+0x60],esi
   140021cf4:	mov    DWORD PTR [rdi+0x64],ebx
   140021cf7:	mov    rax,QWORD PTR [rsp+0xc8]
   140021cff:	mov    QWORD PTR [rdi+0x68],rax
   140021d03:	movzx  eax,WORD PTR [rsp+0xd0]
   140021d0b:	mov    DWORD PTR [rdi+0x70],eax
   140021d0e:	mov    rax,QWORD PTR [rsp+0xd8]
   140021d16:	mov    QWORD PTR [rdi+0x78],rax
   140021d1a:	movzx  eax,WORD PTR [rsp+0xe0]
   140021d22:	mov    DWORD PTR [rdi+0x80],eax
   140021d28:	mov    rax,QWORD PTR [rsp+0xe8]
   140021d30:	mov    QWORD PTR [rdi+0x88],rax
   140021d37:	mov    rax,QWORD PTR [rsp+0xf0]
   140021d3f:	mov    QWORD PTR [rdi+0x90],rax
   140021d46:	mov    eax,DWORD PTR [rsp+0xf8]
   140021d4d:	mov    DWORD PTR [rdi+0x98],eax
   140021d53:	mov    rax,QWORD PTR [rsp+0x100]
   140021d5b:	mov    QWORD PTR [rdi+0xa0],rax
   140021d62:	mov    rax,QWORD PTR [rsp+0x108]
   140021d6a:	mov    QWORD PTR [rdi+0xa8],rax
   140021d71:	mov    eax,DWORD PTR [rsp+0x110]
   140021d78:	mov    DWORD PTR [rdi+0xb0],eax
   140021d7e:	mov    rax,QWORD PTR [rsp+0x118]
   140021d86:	mov    QWORD PTR [rdi+0xb8],rax
   140021d8d:	mov    rax,QWORD PTR [rsp+0x120]
   140021d95:	mov    QWORD PTR [rdi+0xc0],rax
   140021d9c:	mov    rax,QWORD PTR [rsp+0x128]
   140021da4:	mov    QWORD PTR [rdi+0xc8],rax
   140021dab:	mov    eax,DWORD PTR [rsp+0x130]
   140021db2:	mov    DWORD PTR [rdi+0xd0],eax
   140021db8:	mov    eax,DWORD PTR [rsp+0x138]
   140021dbf:	mov    DWORD PTR [rdi+0xd4],eax
   140021dc5:	mov    dl,0x1
   140021dc7:	mov    rcx,rdi
   140021dca:	call   0x14002965c
   140021dcf:	mov    ebx,eax
   140021dd1:	test   eax,eax
   140021dd3:	jns    0x140021e24
   140021dd5:	lea    rdx,[rip+0x2929c]        # 0x14004b078
   140021ddc:	mov    rcx,QWORD PTR [rip+0x29295]        # 0x14004b078
   140021de3:	cmp    rcx,rdx
   140021de6:	je     0x140021e06
   140021de8:	test   BYTE PTR [rcx+0x1c],0x1
   140021dec:	je     0x140021e06
   140021dee:	mov    edx,0xa
   140021df3:	mov    r9d,eax
   140021df6:	lea    r8,[rip+0x169eb]        # 0x1400387e8
   140021dfd:	mov    rcx,QWORD PTR [rcx+0x10]
   140021e01:	call   0x140001f70
   140021e06:	mov    edx,ebx
   140021e08:	lea    rcx,[rsp+0x30]
   140021e0d:	call   0x140002064
   140021e12:	lea    rdx,[rip+0x2736f]        # 0x140049188
   140021e19:	lea    rcx,[rsp+0x30]
   140021e1e:	call   0x14002e2da
   140021e23:	int3   
   140021e24:	mov    rcx,rdi
   140021e27:	call   0x140022dd4
   140021e2c:	mov    ebx,eax
   140021e2e:	test   eax,eax
   140021e30:	jns    0x140021e81
   140021e32:	lea    rdx,[rip+0x2923f]        # 0x14004b078
   140021e39:	mov    rcx,QWORD PTR [rip+0x29238]        # 0x14004b078
   140021e40:	cmp    rcx,rdx
   140021e43:	je     0x140021e63
   140021e45:	test   BYTE PTR [rcx+0x1c],0x1
   140021e49:	je     0x140021e63
   140021e4b:	mov    edx,0xb
   140021e50:	mov    r9d,eax
   140021e53:	lea    r8,[rip+0x1698e]        # 0x1400387e8
   140021e5a:	mov    rcx,QWORD PTR [rcx+0x10]
   140021e5e:	call   0x140001f70
   140021e63:	mov    edx,ebx
   140021e65:	lea    rcx,[rsp+0x58]
   140021e6a:	call   0x140002064
   140021e6f:	lea    rdx,[rip+0x27312]        # 0x140049188
   140021e76:	lea    rcx,[rsp+0x58]
   140021e7b:	call   0x14002e2da
   140021e80:	nop
   140021e81:	mov    eax,DWORD PTR [rdi+0x8]
   140021e84:	cmp    eax,0x1
   140021e87:	jne    0x140021e92
   140021e89:	mov    DWORD PTR [rdi+0x8],0x0
   140021e90:	jmp    0x140021e9f
   140021e92:	or     eax,0xffffffff
   140021e95:	lock xadd DWORD PTR [rdi+0x8],eax
   140021e9a:	sub    eax,0x1
   140021e9d:	jg     0x140021eb8
   140021e9f:	mov    rax,QWORD PTR [rdi]
   140021ea2:	mov    rbx,QWORD PTR [rax]
   140021ea5:	mov    rcx,rbx
   140021ea8:	call   QWORD PTR [rip+0x107fa]        # 0x1400326a8
   140021eae:	mov    edx,0x1
   140021eb3:	mov    rcx,rdi
   140021eb6:	call   rbx
   140021eb8:	mov    rcx,QWORD PTR [rsp+0x80]
   140021ec0:	xor    rcx,rsp
   140021ec3:	call   0x14002dd00
   140021ec8:	lea    r11,[rsp+0x90]
   140021ed0:	mov    rbx,QWORD PTR [r11+0x10]
   140021ed4:	mov    rbp,QWORD PTR [r11+0x18]
   140021ed8:	mov    rsi,QWORD PTR [r11+0x20]
   140021edc:	mov    rdi,QWORD PTR [r11+0x28]
   140021ee0:	mov    rsp,r11
   140021ee3:	pop    r14
   140021ee5:	ret    
   140021ee6:	int3   
   140021ee7:	int3   
   140021ee8:	int3   
   140021ee9:	int3   
   140021eea:	int3   
   140021eeb:	int3   
   140021eec:	int3   
   140021eed:	int3   
   140021eee:	int3   
   140021eef:	int3   
   140021ef0:	mov    rax,rsp
   140021ef3:	push   rdi
   140021ef4:	sub    rsp,0x90
   140021efb:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140021f03:	mov    QWORD PTR [rax+0x8],rbx
   140021f07:	mov    QWORD PTR [rax+0x10],rbp
   140021f0b:	mov    rax,QWORD PTR [rip+0x2910e]        # 0x14004b020
   140021f12:	xor    rax,rsp
   140021f15:	mov    QWORD PTR [rsp+0x80],rax
   140021f1d:	mov    rbx,rdx
   140021f20:	mov    ecx,0x17d0
   140021f25:	call   0x140023f10
   140021f2a:	mov    rdi,rax
   140021f2d:	xor    ebp,ebp
   140021f2f:	mov    DWORD PTR [rax+0x8],ebp
   140021f32:	mov    DWORD PTR [rax+0x10],0x6
   140021f39:	mov    QWORD PTR [rax+0x18],rbp
   140021f3d:	mov    QWORD PTR [rax+0x28],rbp
   140021f41:	mov    QWORD PTR [rax+0x30],rbp
   140021f45:	mov    QWORD PTR [rax+0x38],rbp
   140021f49:	mov    QWORD PTR [rax+0x40],rbp
   140021f4d:	mov    WORD PTR [rax+0x48],bp
   140021f51:	mov    BYTE PTR [rax+0x4a],bpl
   140021f55:	lea    rax,[rip+0x12c2c]        # 0x140034b88
   140021f5c:	mov    QWORD PTR [rdi],rax
   140021f5f:	mov    BYTE PTR [rdi+0x50],bpl
   140021f63:	mov    DWORD PTR [rdi+0x54],ebp
   140021f66:	lea    rcx,[rdi+0xff8]
   140021f6d:	xor    edx,edx
   140021f6f:	mov    r8d,0x7d8
   140021f75:	call   0x14002e2ce
   140021f7a:	lea    rcx,[rdi+0x58]
   140021f7e:	xor    edx,edx
   140021f80:	mov    r8d,0x7d0
   140021f86:	call   0x14002e2ce
   140021f8b:	lea    rcx,[rdi+0x828]
   140021f92:	xor    edx,edx
   140021f94:	mov    r8d,0x7d0
   140021f9a:	call   0x14002e2ce
   140021f9f:	mov    eax,DWORD PTR [rdi+0x8]
   140021fa2:	test   eax,eax
   140021fa4:	jne    0x140021faf
   140021fa6:	mov    DWORD PTR [rdi+0x8],0x1
   140021fad:	jmp    0x140021fb3
   140021faf:	lock inc DWORD PTR [rdi+0x8]
   140021fb3:	mov    QWORD PTR [rsp+0x20],rdi
   140021fb8:	test   rbx,rbx
   140021fbb:	je     0x14002201c
   140021fbd:	mov    rax,QWORD PTR [rbx+0x7d0]
   140021fc4:	dec    rax
   140021fc7:	cmp    rax,0xf9
   140021fcd:	ja     0x14002201c
   140021fcf:	mov    eax,DWORD PTR [rbx+0x7d0]
   140021fd5:	mov    DWORD PTR [rdi+0x54],eax
   140021fd8:	mov    r8,rbp
   140021fdb:	test   eax,eax
   140021fdd:	je     0x14002200a
   140021fdf:	mov    rdx,rdi
   140021fe2:	sub    rdx,rbx
   140021fe5:	mov    rax,QWORD PTR [rbx]
   140021fe8:	mov    QWORD PTR [rdx+rbx*1+0x58],rax
   140021fed:	mov    rax,QWORD PTR [rbx]
   140021ff0:	mov    ecx,DWORD PTR [rax+0x1c]
   140021ff3:	mov    QWORD PTR [rdx+rbx*1+0x828],rcx
   140021ffb:	inc    r8
   140021ffe:	lea    rbx,[rbx+0x8]
   140022002:	mov    eax,DWORD PTR [rdi+0x54]
   140022005:	cmp    r8,rax
   140022008:	jb     0x140021fe5
   14002200a:	mov    BYTE PTR [rdi+0x50],0x1
   14002200e:	mov    dl,0x1
   140022010:	mov    rcx,rdi
   140022013:	call   0x14002965c
   140022018:	mov    ebx,eax
   14002201a:	jmp    0x140022021
   14002201c:	mov    ebx,0x80070057
   140022021:	test   ebx,ebx
   140022023:	jns    0x140022074
   140022025:	lea    rax,[rip+0x2904c]        # 0x14004b078
   14002202c:	mov    rcx,QWORD PTR [rip+0x29045]        # 0x14004b078
   140022033:	cmp    rcx,rax
   140022036:	je     0x140022056
   140022038:	test   BYTE PTR [rcx+0x1c],0x1
   14002203c:	je     0x140022056
   14002203e:	mov    edx,0xc
   140022043:	mov    r9d,ebx
   140022046:	lea    r8,[rip+0x1679b]        # 0x1400387e8
   14002204d:	mov    rcx,QWORD PTR [rcx+0x10]
   140022051:	call   0x140001f70
   140022056:	mov    edx,ebx
   140022058:	lea    rcx,[rsp+0x30]
   14002205d:	call   0x140002064
   140022062:	lea    rdx,[rip+0x2711f]        # 0x140049188
   140022069:	lea    rcx,[rsp+0x30]
   14002206e:	call   0x14002e2da
   140022073:	int3   
   140022074:	mov    rcx,rdi
   140022077:	call   0x140022dd4
   14002207c:	mov    ebx,eax
   14002207e:	test   eax,eax
   140022080:	jns    0x1400220d1
   140022082:	lea    rax,[rip+0x28fef]        # 0x14004b078
   140022089:	mov    rcx,QWORD PTR [rip+0x28fe8]        # 0x14004b078
   140022090:	cmp    rcx,rax
   140022093:	je     0x1400220b3
   140022095:	test   BYTE PTR [rcx+0x1c],0x1
   140022099:	je     0x1400220b3
   14002209b:	mov    edx,0xd
   1400220a0:	mov    r9d,ebx
   1400220a3:	lea    r8,[rip+0x1673e]        # 0x1400387e8
   1400220aa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400220ae:	call   0x140001f70
   1400220b3:	mov    edx,ebx
   1400220b5:	lea    rcx,[rsp+0x58]
   1400220ba:	call   0x140002064
   1400220bf:	lea    rdx,[rip+0x270c2]        # 0x140049188
   1400220c6:	lea    rcx,[rsp+0x58]
   1400220cb:	call   0x14002e2da
   1400220d0:	nop
   1400220d1:	mov    eax,DWORD PTR [rdi+0x8]
   1400220d4:	cmp    eax,0x1
   1400220d7:	jne    0x1400220de
   1400220d9:	mov    DWORD PTR [rdi+0x8],ebp
   1400220dc:	jmp    0x1400220eb
   1400220de:	or     eax,0xffffffff
   1400220e1:	lock xadd DWORD PTR [rdi+0x8],eax
   1400220e6:	sub    eax,0x1
   1400220e9:	jg     0x140022104
   1400220eb:	mov    rax,QWORD PTR [rdi]
   1400220ee:	mov    rbx,QWORD PTR [rax]
   1400220f1:	mov    rcx,rbx
   1400220f4:	call   QWORD PTR [rip+0x105ae]        # 0x1400326a8
   1400220fa:	mov    edx,0x1
   1400220ff:	mov    rcx,rdi
   140022102:	call   rbx
   140022104:	mov    rcx,QWORD PTR [rsp+0x80]
   14002210c:	xor    rcx,rsp
   14002210f:	call   0x14002dd00
   140022114:	lea    r11,[rsp+0x90]
   14002211c:	mov    rbx,QWORD PTR [r11+0x10]
   140022120:	mov    rbp,QWORD PTR [r11+0x18]
   140022124:	mov    rsp,r11
   140022127:	pop    rdi
   140022128:	ret    
   140022129:	int3   
   14002212a:	int3   
   14002212b:	int3   
   14002212c:	int3   
   14002212d:	int3   
   14002212e:	int3   
   14002212f:	int3   
   140022130:	mov    QWORD PTR [rsp+0x8],rbx
   140022135:	mov    QWORD PTR [rsp+0x10],rsi
   14002213a:	mov    QWORD PTR [rsp+0x18],rdi
   14002213f:	push   r14
   140022141:	sub    rsp,0x20
   140022145:	mov    rsi,rdx
   140022148:	mov    r14,rcx
   14002214b:	test   rdx,rdx
   14002214e:	jne    0x14002215a
   140022150:	mov    eax,0x80070057
   140022155:	jmp    0x1400221e7
   14002215a:	lea    rcx,[rdx+0x18]
   14002215e:	xor    ebx,ebx
   140022160:	call   0x140029ab0
   140022165:	mov    edi,eax
   140022167:	test   eax,eax
   140022169:	js     0x140022170
   14002216b:	mov    rbx,rcx
   14002216e:	xor    edi,edi
   140022170:	test   edi,edi
   140022172:	jns    0x1400221a4
   140022174:	mov    rcx,QWORD PTR [rip+0x28efd]        # 0x14004b078
   14002217b:	lea    rax,[rip+0x28ef6]        # 0x14004b078
   140022182:	cmp    rcx,rax
   140022185:	je     0x1400221c6
   140022187:	test   BYTE PTR [rcx+0x1c],0x4
   14002218b:	je     0x1400221c6
   14002218d:	mov    rcx,QWORD PTR [rcx+0x10]
   140022191:	lea    r8,[rip+0x16650]        # 0x1400387e8
   140022198:	mov    edx,0x12
   14002219d:	call   0x140001f08
   1400221a2:	jmp    0x1400221c6
   1400221a4:	mov    rsi,QWORD PTR [rsi+0x10]
   1400221a8:	test   rsi,rsi
   1400221ab:	je     0x1400221c1
   1400221ad:	mov    rax,QWORD PTR [rsi]
   1400221b0:	mov    rdi,QWORD PTR [rax]
   1400221b3:	mov    rcx,rdi
   1400221b6:	call   QWORD PTR [rip+0x104ec]        # 0x1400326a8
   1400221bc:	mov    rcx,rsi
   1400221bf:	call   rdi
   1400221c1:	mov    QWORD PTR [r14],rsi
   1400221c4:	xor    edi,edi
   1400221c6:	test   rbx,rbx
   1400221c9:	je     0x1400221e5
   1400221cb:	or     ecx,0xffffffff
   1400221ce:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400221d3:	dec    ecx
   1400221d5:	cmp    ecx,0x80000000
   1400221db:	jne    0x1400221e5
   1400221dd:	mov    rcx,rbx
   1400221e0:	call   0x140029c90
   1400221e5:	mov    eax,edi
   1400221e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400221ec:	mov    rsi,QWORD PTR [rsp+0x38]
   1400221f1:	mov    rdi,QWORD PTR [rsp+0x40]
   1400221f6:	add    rsp,0x20
   1400221fa:	pop    r14
   1400221fc:	ret    
   1400221fd:	int3   
   1400221fe:	int3   
   1400221ff:	int3   
   140022200:	int3   
   140022201:	int3   
   140022202:	int3   
   140022203:	int3   
   140022204:	int3   
   140022205:	int3   
   140022206:	int3   
   140022207:	int3   
   140022208:	int3   
   140022209:	int3   
   14002220a:	int3   
   14002220b:	int3   
   14002220c:	int3   
   14002220d:	int3   
   14002220e:	int3   
   14002220f:	int3   
   140022210:	test   edx,edx
   140022212:	je     0x1400222b3
   140022218:	mov    rax,rsp
   14002221b:	push   rdi
   14002221c:	sub    rsp,0x30
   140022220:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140022228:	mov    QWORD PTR [rax+0x8],rbx
   14002222c:	and    QWORD PTR [rax+0x18],0x0
   140022231:	mov    rdx,rcx
   140022234:	lea    rcx,[rax+0x18]
   140022238:	call   0x140022130
   14002223d:	mov    rbx,QWORD PTR [rsp+0x50]
   140022242:	test   eax,eax
   140022244:	jns    0x140022279
   140022246:	lea    rdx,[rip+0x28e2b]        # 0x14004b078
   14002224d:	mov    rcx,QWORD PTR [rip+0x28e24]        # 0x14004b078
   140022254:	cmp    rcx,rdx
   140022257:	je     0x14002228f
   140022259:	test   BYTE PTR [rcx+0x1c],0x1
   14002225d:	je     0x14002228f
   14002225f:	mov    edx,0x13
   140022264:	mov    r9d,eax
   140022267:	lea    r8,[rip+0x1657a]        # 0x1400387e8
   14002226e:	mov    rcx,QWORD PTR [rcx+0x10]
   140022272:	call   0x140001f70
   140022277:	jmp    0x14002228f
   140022279:	mov    rax,QWORD PTR [rbx]
   14002227c:	mov    rdi,QWORD PTR [rax+0x18]
   140022280:	mov    rcx,rdi
   140022283:	call   QWORD PTR [rip+0x1041f]        # 0x1400326a8
   140022289:	mov    rcx,rbx
   14002228c:	call   rdi
   14002228e:	nop
   14002228f:	test   rbx,rbx
   140022292:	je     0x1400222a9
   140022294:	mov    rax,QWORD PTR [rbx]
   140022297:	mov    rdi,QWORD PTR [rax+0x8]
   14002229b:	mov    rcx,rdi
   14002229e:	call   QWORD PTR [rip+0x10404]        # 0x1400326a8
   1400222a4:	mov    rcx,rbx
   1400222a7:	call   rdi
   1400222a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400222ae:	add    rsp,0x30
   1400222b2:	pop    rdi
   1400222b3:	ret    
   1400222b4:	int3   
   1400222b5:	int3   
   1400222b6:	int3   
   1400222b7:	int3   
   1400222b8:	int3   
   1400222b9:	int3   
   1400222ba:	int3   
   1400222bb:	int3   
   1400222bc:	int3   
   1400222bd:	int3   
   1400222be:	int3   
   1400222bf:	int3   
   1400222c0:	test   edx,edx
   1400222c2:	je     0x140022363
   1400222c8:	mov    rax,rsp
   1400222cb:	push   rdi
   1400222cc:	sub    rsp,0x30
   1400222d0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400222d8:	mov    QWORD PTR [rax+0x8],rbx
   1400222dc:	and    QWORD PTR [rax+0x18],0x0
   1400222e1:	mov    rdx,rcx
   1400222e4:	lea    rcx,[rax+0x18]
   1400222e8:	call   0x140022130
   1400222ed:	mov    rbx,QWORD PTR [rsp+0x50]
   1400222f2:	test   eax,eax
   1400222f4:	jns    0x140022329
   1400222f6:	lea    rdx,[rip+0x28d7b]        # 0x14004b078
   1400222fd:	mov    rcx,QWORD PTR [rip+0x28d74]        # 0x14004b078
   140022304:	cmp    rcx,rdx
   140022307:	je     0x14002233f
   140022309:	test   BYTE PTR [rcx+0x1c],0x1
   14002230d:	je     0x14002233f
   14002230f:	mov    edx,0x14
   140022314:	mov    r9d,eax
   140022317:	lea    r8,[rip+0x164ca]        # 0x1400387e8
   14002231e:	mov    rcx,QWORD PTR [rcx+0x10]
   140022322:	call   0x140001f70
   140022327:	jmp    0x14002233f
   140022329:	mov    rax,QWORD PTR [rbx]
   14002232c:	mov    rdi,QWORD PTR [rax+0x20]
   140022330:	mov    rcx,rdi
   140022333:	call   QWORD PTR [rip+0x1036f]        # 0x1400326a8
   140022339:	mov    rcx,rbx
   14002233c:	call   rdi
   14002233e:	nop
   14002233f:	test   rbx,rbx
   140022342:	je     0x140022359
   140022344:	mov    rax,QWORD PTR [rbx]
   140022347:	mov    rdi,QWORD PTR [rax+0x8]
   14002234b:	mov    rcx,rdi
   14002234e:	call   QWORD PTR [rip+0x10354]        # 0x1400326a8
   140022354:	mov    rcx,rbx
   140022357:	call   rdi
   140022359:	mov    rbx,QWORD PTR [rsp+0x40]
   14002235e:	add    rsp,0x30
   140022362:	pop    rdi
   140022363:	ret    
   140022364:	int3   
   140022365:	int3   
   140022366:	int3   
   140022367:	int3   
   140022368:	int3   
   140022369:	int3   
   14002236a:	int3   
   14002236b:	int3   
   14002236c:	int3   
   14002236d:	int3   
   14002236e:	int3   
   14002236f:	int3   
   140022370:	mov    rax,rsp
   140022373:	push   rdi
   140022374:	sub    rsp,0x30
   140022378:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140022380:	mov    QWORD PTR [rax+0x10],rbx
   140022384:	mov    QWORD PTR [rax+0x18],rbp
   140022388:	mov    QWORD PTR [rax+0x20],rsi
   14002238c:	mov    r9,rdx
   14002238f:	mov    rsi,rcx
   140022392:	test   rcx,rcx
   140022395:	je     0x1400224fa
   14002239b:	test   rdx,rdx
   14002239e:	je     0x1400224fa
   1400223a4:	xor    ebx,ebx
   1400223a6:	mov    QWORD PTR [rax+0x8],rbx
   1400223aa:	add    rcx,0x18
   1400223ae:	call   0x140029ab0
   1400223b3:	mov    edi,eax
   1400223b5:	test   eax,eax
   1400223b7:	js     0x1400223c3
   1400223b9:	mov    rbx,rcx
   1400223bc:	mov    QWORD PTR [rsp+0x40],rcx
   1400223c1:	xor    edi,edi
   1400223c3:	test   edi,edi
   1400223c5:	jns    0x140022402
   1400223c7:	lea    rbp,[rip+0x28caa]        # 0x14004b078
   1400223ce:	mov    rcx,QWORD PTR [rip+0x28ca3]        # 0x14004b078
   1400223d5:	cmp    rcx,rbp
   1400223d8:	je     0x1400224d5
   1400223de:	test   BYTE PTR [rcx+0x1c],0x4
   1400223e2:	je     0x1400224d5
   1400223e8:	mov    edx,0x15
   1400223ed:	lea    r8,[rip+0x163f4]        # 0x1400387e8
   1400223f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400223f8:	call   0x140001f08
   1400223fd:	jmp    0x1400224d5
   140022402:	cmp    DWORD PTR [r9],0x3001
   140022409:	je     0x1400224b8
   14002240f:	cmp    DWORD PTR [r9],0xc001
   140022416:	jne    0x1400224d3
   14002241c:	mov    rdx,QWORD PTR [r9+0x18]
   140022420:	lea    rbp,[rip+0x28c51]        # 0x14004b078
   140022427:	cmp    DWORD PTR [rdx],0x4
   14002242a:	je     0x14002244c
   14002242c:	cmp    DWORD PTR [rdx],0x6
   14002242f:	jne    0x140022486
   140022431:	mov    rsi,QWORD PTR [rsi+0x10]
   140022435:	mov    rax,QWORD PTR [rsi]
   140022438:	mov    rdi,QWORD PTR [rax+0x30]
   14002243c:	mov    rcx,rdi
   14002243f:	call   QWORD PTR [rip+0x10263]        # 0x1400326a8
   140022445:	mov    rcx,rsi
   140022448:	call   rdi
   14002244a:	jmp    0x140022486
   14002244c:	mov    rcx,rsi
   14002244f:	call   0x1400227b4
   140022454:	mov    edi,eax
   140022456:	test   eax,eax
   140022458:	jns    0x140022486
   14002245a:	mov    rcx,QWORD PTR [rip+0x28c17]        # 0x14004b078
   140022461:	cmp    rcx,rbp
   140022464:	je     0x14002248f
   140022466:	test   BYTE PTR [rcx+0x1c],0x1
   14002246a:	je     0x14002248f
   14002246c:	mov    edx,0x1b
   140022471:	mov    r9d,eax
   140022474:	lea    r8,[rip+0x1636d]        # 0x1400387e8
   14002247b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002247f:	call   0x140001f70
   140022484:	jmp    0x140022488
   140022486:	xor    edi,edi
   140022488:	mov    rcx,QWORD PTR [rip+0x28be9]        # 0x14004b078
   14002248f:	test   edi,edi
   140022491:	jns    0x1400224d3
   140022493:	cmp    rcx,rbp
   140022496:	je     0x1400224d5
   140022498:	test   BYTE PTR [rcx+0x1c],0x1
   14002249c:	je     0x1400224d5
   14002249e:	mov    edx,0x16
   1400224a3:	mov    r9d,edi
   1400224a6:	lea    r8,[rip+0x1633b]        # 0x1400387e8
   1400224ad:	mov    rcx,QWORD PTR [rcx+0x10]
   1400224b1:	call   0x140001f70
   1400224b6:	jmp    0x1400224d5
   1400224b8:	mov    rsi,QWORD PTR [rsi+0x10]
   1400224bc:	mov    rax,QWORD PTR [rsi]
   1400224bf:	mov    rdi,QWORD PTR [rax+0x28]
   1400224c3:	mov    rcx,rdi
   1400224c6:	call   QWORD PTR [rip+0x101dc]        # 0x1400326a8
   1400224cc:	mov    dl,0x1
   1400224ce:	mov    rcx,rsi
   1400224d1:	call   rdi
   1400224d3:	xor    edi,edi
   1400224d5:	test   rbx,rbx
   1400224d8:	je     0x1400224f6
   1400224da:	or     ecx,0xffffffff
   1400224dd:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400224e2:	dec    ecx
   1400224e4:	cmp    ecx,0x80000000
   1400224ea:	jne    0x1400224f6
   1400224ec:	mov    rcx,QWORD PTR [rsp+0x40]
   1400224f1:	call   0x140029c90
   1400224f6:	mov    eax,edi
   1400224f8:	jmp    0x1400224ff
   1400224fa:	mov    eax,0x80070057
   1400224ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140022504:	mov    rbp,QWORD PTR [rsp+0x50]
   140022509:	mov    rsi,QWORD PTR [rsp+0x58]
   14002250e:	add    rsp,0x30
   140022512:	pop    rdi
   140022513:	ret    
   140022514:	int3   
   140022515:	int3   
   140022516:	int3   
   140022517:	int3   
   140022518:	int3   
   140022519:	int3   
   14002251a:	int3   
   14002251b:	int3   
   14002251c:	mov    QWORD PTR [rsp+0x10],rbx
   140022521:	push   rdi
   140022522:	sub    rsp,0x60
   140022526:	mov    rax,QWORD PTR [rip+0x28af3]        # 0x14004b020
   14002252d:	xor    rax,rsp
   140022530:	mov    QWORD PTR [rsp+0x58],rax
   140022535:	lea    rdi,[rcx+0x48]
   140022539:	mov    rbx,rcx
   14002253c:	mov    rcx,QWORD PTR [rdi]
   14002253f:	test   rcx,rcx
   140022542:	je     0x14002254e
   140022544:	call   QWORD PTR [rip+0xff2e]        # 0x140032478
   14002254a:	and    QWORD PTR [rdi],0x0
   14002254e:	xor    r9d,r9d
   140022551:	mov    QWORD PTR [rsp+0x20],rdi
   140022556:	lea    r8,[rip+0xfffffffffffffcb3]        # 0x140022210
   14002255d:	mov    rdx,rbx
   140022560:	lea    rcx,[rip+0x154e1]        # 0x140037a48
   140022567:	call   QWORD PTR [rip+0xfe53]        # 0x1400323c0
   14002256d:	mov    edi,eax
   14002256f:	test   eax,eax
   140022571:	jns    0x140022599
   140022573:	mov    rcx,QWORD PTR [rip+0x28afe]        # 0x14004b078
   14002257a:	lea    rdx,[rip+0x28af7]        # 0x14004b078
   140022581:	cmp    rcx,rdx
   140022584:	je     0x1400226ec
   14002258a:	test   BYTE PTR [rcx+0x1c],0x1
   14002258e:	je     0x1400226ec
   140022594:	jmp    0x1400226d4
   140022599:	lea    rdi,[rbx+0x50]
   14002259d:	mov    rcx,QWORD PTR [rdi]
   1400225a0:	test   rcx,rcx
   1400225a3:	je     0x1400225af
   1400225a5:	call   QWORD PTR [rip+0xfecd]        # 0x140032478
   1400225ab:	and    QWORD PTR [rdi],0x0
   1400225af:	xor    r9d,r9d
   1400225b2:	mov    QWORD PTR [rsp+0x20],rdi
   1400225b7:	lea    r8,[rip+0xfffffffffffffd02]        # 0x1400222c0
   1400225be:	mov    rdx,rbx
   1400225c1:	lea    rcx,[rip+0x155b8]        # 0x140037b80
   1400225c8:	call   QWORD PTR [rip+0xfdf2]        # 0x1400323c0
   1400225ce:	mov    edi,eax
   1400225d0:	test   eax,eax
   1400225d2:	jns    0x1400225fa
   1400225d4:	mov    rcx,QWORD PTR [rip+0x28a9d]        # 0x14004b078
   1400225db:	lea    rdx,[rip+0x28a96]        # 0x14004b078
   1400225e2:	cmp    rcx,rdx
   1400225e5:	je     0x140022722
   1400225eb:	test   BYTE PTR [rcx+0x1c],0x1
   1400225ef:	je     0x140022722
   1400225f5:	jmp    0x14002270a
   1400225fa:	lea    rdi,[rbx+0x58]
   1400225fe:	mov    rcx,QWORD PTR [rdi]
   140022601:	test   rcx,rcx
   140022604:	je     0x140022610
   140022606:	call   QWORD PTR [rip+0xfe6c]        # 0x140032478
   14002260c:	and    QWORD PTR [rdi],0x0
   140022610:	xor    r9d,r9d
   140022613:	mov    QWORD PTR [rsp+0x20],rdi
   140022618:	lea    r8,[rip+0xfffffffffffffca1]        # 0x1400222c0
   14002261f:	mov    rdx,rbx
   140022622:	lea    rcx,[rip+0x155f7]        # 0x140037c20
   140022629:	call   QWORD PTR [rip+0xfd91]        # 0x1400323c0
   14002262f:	mov    edi,eax
   140022631:	test   eax,eax
   140022633:	jns    0x14002265b
   140022635:	mov    rcx,QWORD PTR [rip+0x28a3c]        # 0x14004b078
   14002263c:	lea    rdx,[rip+0x28a35]        # 0x14004b078
   140022643:	cmp    rcx,rdx
   140022646:	je     0x140022758
   14002264c:	test   BYTE PTR [rcx+0x1c],0x1
   140022650:	je     0x140022758
   140022656:	jmp    0x140022740
   14002265b:	lea    rdi,[rbx+0x60]
   14002265f:	mov    rcx,QWORD PTR [rdi]
   140022662:	test   rcx,rcx
   140022665:	je     0x140022671
   140022667:	call   QWORD PTR [rip+0xfe0b]        # 0x140032478
   14002266d:	and    QWORD PTR [rdi],0x0
   140022671:	xor    r9d,r9d
   140022674:	mov    QWORD PTR [rsp+0x20],rdi
   140022679:	lea    r8,[rip+0xfffffffffffffc40]        # 0x1400222c0
   140022680:	mov    rdx,rbx
   140022683:	lea    rcx,[rip+0x155e6]        # 0x140037c70
   14002268a:	call   QWORD PTR [rip+0xfd30]        # 0x1400323c0
   140022690:	mov    ebx,eax
   140022692:	test   eax,eax
   140022694:	jns    0x1400226bc
   140022696:	mov    rcx,QWORD PTR [rip+0x289db]        # 0x14004b078
   14002269d:	lea    rdx,[rip+0x289d4]        # 0x14004b078
   1400226a4:	cmp    rcx,rdx
   1400226a7:	je     0x14002278e
   1400226ad:	test   BYTE PTR [rcx+0x1c],0x1
   1400226b1:	je     0x14002278e
   1400226b7:	jmp    0x140022776
   1400226bc:	mov    rcx,QWORD PTR [rsp+0x58]
   1400226c1:	xor    rcx,rsp
   1400226c4:	call   0x14002dd00
   1400226c9:	mov    rbx,QWORD PTR [rsp+0x78]
   1400226ce:	add    rsp,0x60
   1400226d2:	pop    rdi
   1400226d3:	ret    
   1400226d4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400226d8:	lea    r8,[rip+0x16109]        # 0x1400387e8
   1400226df:	mov    edx,0x17
   1400226e4:	mov    r9d,eax
   1400226e7:	call   0x140001f70
   1400226ec:	mov    edx,edi
   1400226ee:	lea    rcx,[rsp+0x30]
   1400226f3:	call   0x140002064
   1400226f8:	lea    rdx,[rip+0x26a89]        # 0x140049188
   1400226ff:	lea    rcx,[rsp+0x30]
   140022704:	call   0x14002e2da
   140022709:	int3   
   14002270a:	mov    rcx,QWORD PTR [rcx+0x10]
   14002270e:	lea    r8,[rip+0x160d3]        # 0x1400387e8
   140022715:	mov    edx,0x18
   14002271a:	mov    r9d,eax
   14002271d:	call   0x140001f70
   140022722:	mov    edx,edi
   140022724:	lea    rcx,[rsp+0x30]
   140022729:	call   0x140002064
   14002272e:	lea    rdx,[rip+0x26a53]        # 0x140049188
   140022735:	lea    rcx,[rsp+0x30]
   14002273a:	call   0x14002e2da
   14002273f:	int3   
   140022740:	mov    rcx,QWORD PTR [rcx+0x10]
   140022744:	lea    r8,[rip+0x1609d]        # 0x1400387e8
   14002274b:	mov    edx,0x19
   140022750:	mov    r9d,eax
   140022753:	call   0x140001f70
   140022758:	mov    edx,edi
   14002275a:	lea    rcx,[rsp+0x30]
   14002275f:	call   0x140002064
   140022764:	lea    rdx,[rip+0x26a1d]        # 0x140049188
   14002276b:	lea    rcx,[rsp+0x30]
   140022770:	call   0x14002e2da
   140022775:	int3   
   140022776:	mov    rcx,QWORD PTR [rcx+0x10]
   14002277a:	lea    r8,[rip+0x16067]        # 0x1400387e8
   140022781:	mov    edx,0x1a
   140022786:	mov    r9d,eax
   140022789:	call   0x140001f70
   14002278e:	mov    edx,ebx
   140022790:	lea    rcx,[rsp+0x30]
   140022795:	call   0x140002064
   14002279a:	lea    rdx,[rip+0x269e7]        # 0x140049188
   1400227a1:	lea    rcx,[rsp+0x30]
   1400227a6:	call   0x14002e2da
   1400227ab:	int3   
   1400227ac:	int3   
   1400227ad:	int3   
   1400227ae:	int3   
   1400227af:	int3   
   1400227b0:	int3   
   1400227b1:	int3   
   1400227b2:	int3   
   1400227b3:	int3   
   1400227b4:	mov    rax,rsp
   1400227b7:	push   rbp
   1400227b8:	push   rsi
   1400227b9:	push   rdi
   1400227ba:	push   r12
   1400227bc:	push   r13
   1400227be:	push   r14
   1400227c0:	push   r15
   1400227c2:	mov    rbp,rsp
   1400227c5:	sub    rsp,0x80
   1400227cc:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400227d4:	mov    QWORD PTR [rax+0x8],rbx
   1400227d8:	mov    r13,rcx
   1400227db:	xor    r12d,r12d
   1400227de:	mov    QWORD PTR [rbp-0x18],r12
   1400227e2:	mov    QWORD PTR [rbp-0x20],r12
   1400227e6:	mov    QWORD PTR [rbp-0x28],r12
   1400227ea:	mov    QWORD PTR [rbp-0x30],r12
   1400227ee:	mov    edi,r12d
   1400227f1:	mov    QWORD PTR [rbp+0x48],r12
   1400227f5:	mov    rbx,QWORD PTR [rdx+0x8]
   1400227f9:	mov    r14d,DWORD PTR [rdx+0x4]
   1400227fd:	lea    ecx,[r12+0x60]
   140022802:	call   QWORD PTR [rip+0xfdc8]        # 0x1400325d0
   140022808:	mov    rsi,rax
   14002280b:	lea    r15d,[r12+0x1]
   140022810:	test   rax,rax
   140022813:	je     0x140022846
   140022815:	mov    DWORD PTR [rax+0x8],r12d
   140022819:	mov    DWORD PTR [rax+0x10],r15d
   14002281d:	mov    QWORD PTR [rax+0x18],r12
   140022821:	mov    QWORD PTR [rax+0x28],r12
   140022825:	mov    QWORD PTR [rax+0x30],r12
   140022829:	mov    QWORD PTR [rax+0x38],r12
   14002282d:	mov    QWORD PTR [rax+0x40],r12
   140022831:	mov    WORD PTR [rax+0x48],r12w
   140022836:	mov    BYTE PTR [rax+0x4a],r12b
   14002283a:	lea    rax,[rip+0x1235f]        # 0x140034ba0
   140022841:	mov    QWORD PTR [rsi],rax
   140022844:	jmp    0x140022849
   140022846:	mov    rsi,r12
   140022849:	lea    rax,[rip+0x28828]        # 0x14004b078
   140022850:	test   rsi,rsi
   140022853:	jne    0x140022860
   140022855:	mov    r14d,0x8007000e
   14002285b:	mov    r15d,r14d
   14002285e:	jmp    0x1400228d8
   140022860:	mov    eax,DWORD PTR [rsi+0x8]
   140022863:	test   eax,eax
   140022865:	jne    0x14002286d
   140022867:	mov    DWORD PTR [rsi+0x8],r15d
   14002286b:	jmp    0x140022872
   14002286d:	lock add DWORD PTR [rsi+0x8],r15d
   140022872:	mov    r8,rbx
   140022875:	mov    rdx,r14
   140022878:	mov    rcx,rsi
   14002287b:	call   0x140029414
   140022880:	mov    r14d,eax
   140022883:	test   eax,eax
   140022885:	jns    0x1400228bf
   140022887:	mov    eax,DWORD PTR [rsi+0x8]
   14002288a:	cmp    eax,r15d
   14002288d:	jne    0x140022895
   14002288f:	mov    DWORD PTR [rsi+0x8],r12d
   140022893:	jmp    0x1400228a2
   140022895:	or     eax,0xffffffff
   140022898:	lock xadd DWORD PTR [rsi+0x8],eax
   14002289d:	sub    eax,r15d
   1400228a0:	jg     0x1400228b9
   1400228a2:	mov    rax,QWORD PTR [rsi]
   1400228a5:	mov    rbx,QWORD PTR [rax]
   1400228a8:	mov    rcx,rbx
   1400228ab:	call   QWORD PTR [rip+0xfdf7]        # 0x1400326a8
   1400228b1:	mov    edx,r15d
   1400228b4:	mov    rcx,rsi
   1400228b7:	call   rbx
   1400228b9:	mov    rdi,QWORD PTR [rbp+0x48]
   1400228bd:	jmp    0x1400228c9
   1400228bf:	mov    rdi,rsi
   1400228c2:	mov    QWORD PTR [rbp+0x48],rsi
   1400228c6:	mov    r14d,r12d
   1400228c9:	mov    r15d,r14d
   1400228cc:	test   r14d,r14d
   1400228cf:	jns    0x14002290f
   1400228d1:	lea    rax,[rip+0x287a0]        # 0x14004b078
   1400228d8:	mov    rcx,QWORD PTR [rip+0x28799]        # 0x14004b078
   1400228df:	cmp    rcx,rax
   1400228e2:	je     0x1400229e2
   1400228e8:	test   BYTE PTR [rcx+0x1c],0x1
   1400228ec:	je     0x1400229e2
   1400228f2:	mov    edx,0x1c
   1400228f7:	mov    r9d,r14d
   1400228fa:	lea    r8,[rip+0x15ee7]        # 0x1400387e8
   140022901:	mov    rcx,QWORD PTR [rcx+0x10]
   140022905:	call   0x140001f70
   14002290a:	jmp    0x1400229e2
   14002290f:	mov    r14,QWORD PTR [rdi+0x50]
   140022913:	cmp    r12w,WORD PTR [r14]
   140022917:	jne    0x140022952
   140022919:	mov    rcx,QWORD PTR [rip+0x28758]        # 0x14004b078
   140022920:	lea    r13,[rip+0x28751]        # 0x14004b078
   140022927:	cmp    rcx,r13
   14002292a:	je     0x140022947
   14002292c:	test   BYTE PTR [rcx+0x1c],0x1
   140022930:	je     0x140022947
   140022932:	mov    edx,0x1d
   140022937:	lea    r8,[rip+0x15eaa]        # 0x1400387e8
   14002293e:	mov    rcx,QWORD PTR [rcx+0x10]
   140022942:	call   0x140001f08
   140022947:	mov    r15d,0x80070057
   14002294d:	jmp    0x1400229e9
   140022952:	mov    rsi,QWORD PTR [r13+0x10]
   140022956:	mov    rax,QWORD PTR [rsi]
   140022959:	mov    rbx,QWORD PTR [rax+0x10]
   14002295d:	mov    rcx,rbx
   140022960:	call   QWORD PTR [rip+0xfd42]        # 0x1400326a8
   140022966:	lea    rax,[rbp-0x30]
   14002296a:	mov    QWORD PTR [rsp+0x48],rax
   14002296f:	lea    rax,[rbp-0x28]
   140022973:	mov    QWORD PTR [rsp+0x40],rax
   140022978:	lea    rax,[rbp-0x20]
   14002297c:	mov    QWORD PTR [rsp+0x38],rax
   140022981:	lea    rax,[rbp-0x18]
   140022985:	mov    QWORD PTR [rsp+0x30],rax
   14002298a:	mov    al,BYTE PTR [rdi+0x5b]
   14002298d:	mov    BYTE PTR [rsp+0x28],al
   140022991:	mov    al,BYTE PTR [rdi+0x5a]
   140022994:	mov    BYTE PTR [rsp+0x20],al
   140022998:	mov    r9b,BYTE PTR [rdi+0x59]
   14002299c:	mov    r8b,BYTE PTR [rdi+0x58]
   1400229a0:	mov    rdx,r14
   1400229a3:	mov    rcx,rsi
   1400229a6:	call   rbx
   1400229a8:	mov    r15d,eax
   1400229ab:	test   eax,eax
   1400229ad:	jns    0x1400229fb
   1400229af:	mov    rcx,QWORD PTR [rip+0x286c2]        # 0x14004b078
   1400229b6:	lea    r13,[rip+0x286bb]        # 0x14004b078
   1400229bd:	cmp    rcx,r13
   1400229c0:	je     0x1400229e9
   1400229c2:	test   BYTE PTR [rcx+0x1c],0x1
   1400229c6:	je     0x1400229e9
   1400229c8:	mov    edx,0x1e
   1400229cd:	mov    r9d,eax
   1400229d0:	lea    r8,[rip+0x15e11]        # 0x1400387e8
   1400229d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400229db:	call   0x140001f70
   1400229e0:	jmp    0x1400229e9
   1400229e2:	lea    r13,[rip+0x2868f]        # 0x14004b078
   1400229e9:	mov    QWORD PTR [rbp-0x18],r12
   1400229ed:	mov    QWORD PTR [rbp-0x20],r12
   1400229f1:	mov    QWORD PTR [rbp-0x28],r12
   1400229f5:	mov    QWORD PTR [rbp-0x30],r12
   1400229f9:	jmp    0x140022a02
   1400229fb:	lea    r13,[rip+0x28676]        # 0x14004b078
   140022a02:	mov    rbx,r12
   140022a05:	mov    QWORD PTR [rbp+0x58],rbx
   140022a09:	mov    QWORD PTR [rbp+0x50],r12
   140022a0d:	lea    rcx,[rbp+0x50]
   140022a11:	call   0x140022fec
   140022a16:	mov    esi,eax
   140022a18:	mov    r14d,0x1
   140022a1e:	test   eax,eax
   140022a20:	jns    0x140022a4a
   140022a22:	mov    rax,QWORD PTR [rbp+0x50]
   140022a26:	test   rax,rax
   140022a29:	je     0x140022ad1
   140022a2f:	mov    ecx,DWORD PTR [rax+0x8]
   140022a32:	cmp    ecx,r14d
   140022a35:	jne    0x140022a3d
   140022a37:	mov    DWORD PTR [rax+0x8],r12d
   140022a3b:	jmp    0x140022aa1
   140022a3d:	or     ecx,0xffffffff
   140022a40:	lock xadd DWORD PTR [rax+0x8],ecx
   140022a45:	sub    ecx,r14d
   140022a48:	jmp    0x140022a9f
   140022a4a:	mov    r9,QWORD PTR [rbp-0x30]
   140022a4e:	mov    r8,QWORD PTR [rbp-0x28]
   140022a52:	movsxd rdx,r15d
   140022a55:	mov    rcx,QWORD PTR [rbp-0x20]
   140022a59:	mov    rbx,QWORD PTR [rbp+0x50]
   140022a5d:	mov    rax,QWORD PTR [rbp-0x18]
   140022a61:	mov    QWORD PTR [rbx+0x50],rax
   140022a65:	mov    QWORD PTR [rbx+0x58],rcx
   140022a69:	mov    QWORD PTR [rbx+0x60],rdx
   140022a6d:	mov    QWORD PTR [rbx+0x68],r8
   140022a71:	mov    QWORD PTR [rbx+0x70],r9
   140022a75:	mov    dl,r14b
   140022a78:	mov    rcx,rbx
   140022a7b:	call   0x14002965c
   140022a80:	mov    esi,eax
   140022a82:	test   eax,eax
   140022a84:	jns    0x140022ac6
   140022a86:	mov    eax,DWORD PTR [rbx+0x8]
   140022a89:	cmp    eax,r14d
   140022a8c:	jne    0x140022a94
   140022a8e:	mov    DWORD PTR [rbx+0x8],r12d
   140022a92:	jmp    0x140022aa1
   140022a94:	or     eax,0xffffffff
   140022a97:	lock xadd DWORD PTR [rbx+0x8],eax
   140022a9c:	sub    eax,r14d
   140022a9f:	jg     0x140022abc
   140022aa1:	mov    rbx,QWORD PTR [rbp+0x50]
   140022aa5:	mov    rax,QWORD PTR [rbx]
   140022aa8:	mov    rdi,QWORD PTR [rax]
   140022aab:	mov    rcx,rdi
   140022aae:	call   QWORD PTR [rip+0xfbf4]        # 0x1400326a8
   140022ab4:	mov    edx,r14d
   140022ab7:	mov    rcx,rbx
   140022aba:	call   rdi
   140022abc:	mov    rdi,QWORD PTR [rbp+0x48]
   140022ac0:	mov    rbx,QWORD PTR [rbp+0x58]
   140022ac4:	jmp    0x140022ad1
   140022ac6:	mov    QWORD PTR [rbp+0x50],r12
   140022aca:	mov    QWORD PTR [rbp+0x58],rbx
   140022ace:	mov    esi,r12d
   140022ad1:	test   esi,esi
   140022ad3:	jns    0x140022af1
   140022ad5:	mov    rcx,QWORD PTR [rip+0x2859c]        # 0x14004b078
   140022adc:	cmp    rcx,r13
   140022adf:	je     0x140022b2e
   140022ae1:	test   BYTE PTR [rcx+0x1c],r14b
   140022ae5:	je     0x140022b2e
   140022ae7:	mov    edx,0x1f
   140022aec:	mov    r9d,esi
   140022aef:	jmp    0x140022b19
   140022af1:	mov    rcx,rbx
   140022af4:	call   0x140022dd4
   140022af9:	mov    esi,eax
   140022afb:	test   eax,eax
   140022afd:	jns    0x140022b2b
   140022aff:	mov    rcx,QWORD PTR [rip+0x28572]        # 0x14004b078
   140022b06:	cmp    rcx,r13
   140022b09:	je     0x140022b2e
   140022b0b:	test   BYTE PTR [rcx+0x1c],r14b
   140022b0f:	je     0x140022b2e
   140022b11:	mov    edx,0x20
   140022b16:	mov    r9d,eax
   140022b19:	lea    r8,[rip+0x15cc8]        # 0x1400387e8
   140022b20:	mov    rcx,QWORD PTR [rcx+0x10]
   140022b24:	call   0x140001f70
   140022b29:	jmp    0x140022b2e
   140022b2b:	mov    esi,r12d
   140022b2e:	test   rbx,rbx
   140022b31:	je     0x140022b6d
   140022b33:	mov    eax,DWORD PTR [rbx+0x8]
   140022b36:	cmp    eax,r14d
   140022b39:	jne    0x140022b41
   140022b3b:	mov    DWORD PTR [rbx+0x8],r12d
   140022b3f:	jmp    0x140022b4e
   140022b41:	or     eax,0xffffffff
   140022b44:	lock xadd DWORD PTR [rbx+0x8],eax
   140022b49:	sub    eax,0x1
   140022b4c:	jg     0x140022b69
   140022b4e:	mov    rbx,QWORD PTR [rbp+0x58]
   140022b52:	mov    rax,QWORD PTR [rbx]
   140022b55:	mov    rdi,QWORD PTR [rax]
   140022b58:	mov    rcx,rdi
   140022b5b:	call   QWORD PTR [rip+0xfb47]        # 0x1400326a8
   140022b61:	mov    edx,r14d
   140022b64:	mov    rcx,rbx
   140022b67:	call   rdi
   140022b69:	mov    rdi,QWORD PTR [rbp+0x48]
   140022b6d:	test   rdi,rdi
   140022b70:	je     0x140022ba8
   140022b72:	mov    eax,DWORD PTR [rdi+0x8]
   140022b75:	cmp    eax,r14d
   140022b78:	jne    0x140022b80
   140022b7a:	mov    DWORD PTR [rdi+0x8],r12d
   140022b7e:	jmp    0x140022b8d
   140022b80:	or     eax,0xffffffff
   140022b83:	lock xadd DWORD PTR [rdi+0x8],eax
   140022b88:	sub    eax,0x1
   140022b8b:	jg     0x140022ba8
   140022b8d:	mov    rbx,QWORD PTR [rbp+0x48]
   140022b91:	mov    rcx,QWORD PTR [rbx]
   140022b94:	mov    rdi,QWORD PTR [rcx]
   140022b97:	mov    rcx,rdi
   140022b9a:	call   QWORD PTR [rip+0xfb08]        # 0x1400326a8
   140022ba0:	mov    edx,r14d
   140022ba3:	mov    rcx,rbx
   140022ba6:	call   rdi
   140022ba8:	mov    eax,esi
   140022baa:	mov    rbx,QWORD PTR [rsp+0xc0]
   140022bb2:	add    rsp,0x80
   140022bb9:	pop    r15
   140022bbb:	pop    r14
   140022bbd:	pop    r13
   140022bbf:	pop    r12
   140022bc1:	pop    rdi
   140022bc2:	pop    rsi
   140022bc3:	pop    rbp
   140022bc4:	ret    
   140022bc5:	int3   
   140022bc6:	int3   
   140022bc7:	int3   
   140022bc8:	int3   
   140022bc9:	int3   
   140022bca:	int3   
   140022bcb:	int3   
   140022bcc:	int3   
   140022bcd:	int3   
   140022bce:	int3   
   140022bcf:	int3   
   140022bd0:	mov    rax,rsp
   140022bd3:	push   rbp
   140022bd4:	lea    rbp,[rax-0x5f]
   140022bd8:	sub    rsp,0x90
   140022bdf:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   140022be7:	mov    QWORD PTR [rax+0x8],rbx
   140022beb:	mov    QWORD PTR [rax+0x10],rsi
   140022bef:	mov    QWORD PTR [rax+0x18],rdi
   140022bf3:	mov    QWORD PTR [rax+0x20],r14
   140022bf7:	mov    rax,QWORD PTR [rip+0x28422]        # 0x14004b020
   140022bfe:	xor    rax,rsp
   140022c01:	mov    QWORD PTR [rbp+0x4f],rax
   140022c05:	mov    rdi,r8
   140022c08:	mov    rsi,rdx
   140022c0b:	xor    ebx,ebx
   140022c0d:	mov    QWORD PTR [rbp-0x11],rbx
   140022c11:	and    QWORD PTR [rbp-0x19],rbx
   140022c15:	lea    rcx,[rbp-0x19]
   140022c19:	call   0x140023088
   140022c1e:	mov    r14d,eax
   140022c21:	test   eax,eax
   140022c23:	jns    0x140022c6d
   140022c25:	lea    esi,[rbx+0x1]
   140022c28:	mov    rax,QWORD PTR [rbp-0x19]
   140022c2c:	test   rax,rax
   140022c2f:	je     0x140022cb8
   140022c35:	mov    ecx,DWORD PTR [rax+0x8]
   140022c38:	cmp    ecx,esi
   140022c3a:	jne    0x140022c41
   140022c3c:	mov    DWORD PTR [rax+0x8],ebx
   140022c3f:	jmp    0x140022c4d
   140022c41:	or     ecx,0xffffffff
   140022c44:	lock xadd DWORD PTR [rax+0x8],ecx
   140022c49:	sub    ecx,esi
   140022c4b:	jg     0x140022c67
   140022c4d:	mov    rbx,QWORD PTR [rbp-0x19]
   140022c51:	mov    rax,QWORD PTR [rbx]
   140022c54:	mov    rdi,QWORD PTR [rax]
   140022c57:	mov    rcx,rdi
   140022c5a:	call   QWORD PTR [rip+0xfa48]        # 0x1400326a8
   140022c60:	mov    edx,esi
   140022c62:	mov    rcx,rbx
   140022c65:	call   rdi
   140022c67:	mov    rbx,QWORD PTR [rbp-0x11]
   140022c6b:	jmp    0x140022cb8
   140022c6d:	mov    rbx,QWORD PTR [rbp-0x19]
   140022c71:	mov    QWORD PTR [rbx+0x50],rdi
   140022c75:	mov    QWORD PTR [rbx+0x58],rsi
   140022c79:	mov    esi,0x1
   140022c7e:	mov    dl,sil
   140022c81:	mov    rcx,rbx
   140022c84:	call   0x14002965c
   140022c89:	mov    r14d,eax
   140022c8c:	test   eax,eax
   140022c8e:	jns    0x140022cac
   140022c90:	mov    eax,DWORD PTR [rbx+0x8]
   140022c93:	cmp    eax,esi
   140022c95:	jne    0x140022ca0
   140022c97:	mov    DWORD PTR [rbx+0x8],0x0
   140022c9e:	jmp    0x140022c4d
   140022ca0:	or     eax,0xffffffff
   140022ca3:	lock xadd DWORD PTR [rbx+0x8],eax
   140022ca8:	sub    eax,esi
   140022caa:	jmp    0x140022c4b
   140022cac:	and    QWORD PTR [rbp-0x19],0x0
   140022cb1:	mov    QWORD PTR [rbp-0x11],rbx
   140022cb5:	xor    r14d,r14d
   140022cb8:	test   r14d,r14d
   140022cbb:	jns    0x140022d0b
   140022cbd:	lea    rax,[rip+0x283b4]        # 0x14004b078
   140022cc4:	mov    rcx,QWORD PTR [rip+0x283ad]        # 0x14004b078
   140022ccb:	cmp    rcx,rax
   140022cce:	je     0x140022cee
   140022cd0:	test   BYTE PTR [rcx+0x1c],sil
   140022cd4:	je     0x140022cee
   140022cd6:	mov    edx,0x21
   140022cdb:	mov    r9d,r14d
   140022cde:	lea    r8,[rip+0x15b03]        # 0x1400387e8
   140022ce5:	mov    rcx,QWORD PTR [rcx+0x10]
   140022ce9:	call   0x140001f70
   140022cee:	mov    edx,r14d
   140022cf1:	lea    rcx,[rbp-0x1]
   140022cf5:	call   0x140002064
   140022cfa:	lea    rdx,[rip+0x26487]        # 0x140049188
   140022d01:	lea    rcx,[rbp-0x1]
   140022d05:	call   0x14002e2da
   140022d0a:	int3   
   140022d0b:	mov    rcx,rbx
   140022d0e:	call   0x140022dd4
   140022d13:	mov    edi,eax
   140022d15:	test   eax,eax
   140022d17:	jns    0x140022d66
   140022d19:	lea    rax,[rip+0x28358]        # 0x14004b078
   140022d20:	mov    rcx,QWORD PTR [rip+0x28351]        # 0x14004b078
   140022d27:	cmp    rcx,rax
   140022d2a:	je     0x140022d4a
   140022d2c:	test   BYTE PTR [rcx+0x1c],sil
   140022d30:	je     0x140022d4a
   140022d32:	mov    edx,0x22
   140022d37:	mov    r9d,edi
   140022d3a:	lea    r8,[rip+0x15aa7]        # 0x1400387e8
   140022d41:	mov    rcx,QWORD PTR [rcx+0x10]
   140022d45:	call   0x140001f70
   140022d4a:	mov    edx,edi
   140022d4c:	lea    rcx,[rbp+0x27]
   140022d50:	call   0x140002064
   140022d55:	lea    rdx,[rip+0x2642c]        # 0x140049188
   140022d5c:	lea    rcx,[rbp+0x27]
   140022d60:	call   0x14002e2da
   140022d65:	nop
   140022d66:	test   rbx,rbx
   140022d69:	je     0x140022da2
   140022d6b:	mov    eax,DWORD PTR [rbx+0x8]
   140022d6e:	cmp    eax,esi
   140022d70:	jne    0x140022d7b
   140022d72:	mov    DWORD PTR [rbx+0x8],0x0
   140022d79:	jmp    0x140022d88
   140022d7b:	or     eax,0xffffffff
   140022d7e:	lock xadd DWORD PTR [rbx+0x8],eax
   140022d83:	sub    eax,0x1
   140022d86:	jg     0x140022da2
   140022d88:	mov    rbx,QWORD PTR [rbp-0x11]
   140022d8c:	mov    rax,QWORD PTR [rbx]
   140022d8f:	mov    rdi,QWORD PTR [rax]
   140022d92:	mov    rcx,rdi
   140022d95:	call   QWORD PTR [rip+0xf90d]        # 0x1400326a8
   140022d9b:	mov    edx,esi
   140022d9d:	mov    rcx,rbx
   140022da0:	call   rdi
   140022da2:	mov    rcx,QWORD PTR [rbp+0x4f]
   140022da6:	xor    rcx,rsp
   140022da9:	call   0x14002dd00
   140022dae:	lea    r11,[rsp+0x90]
   140022db6:	mov    rbx,QWORD PTR [r11+0x10]
   140022dba:	mov    rsi,QWORD PTR [r11+0x18]
   140022dbe:	mov    rdi,QWORD PTR [r11+0x20]
   140022dc2:	mov    r14,QWORD PTR [r11+0x28]
   140022dc6:	mov    rsp,r11
   140022dc9:	pop    rbp
   140022dca:	ret    
   140022dcb:	int3   
   140022dcc:	int3   
   140022dcd:	int3   
   140022dce:	int3   
   140022dcf:	int3   
   140022dd0:	int3   
   140022dd1:	int3   
   140022dd2:	int3   
   140022dd3:	int3   
   140022dd4:	rex push rbx
   140022dd6:	sub    rsp,0x20
   140022dda:	mov    rdx,QWORD PTR [rcx+0x18]
   140022dde:	test   rdx,rdx
   140022de1:	jne    0x140022de7
   140022de3:	lea    rdx,[rcx+0x20]
   140022de7:	mov    eax,DWORD PTR [rcx+0x10]
   140022dea:	lea    r9,[rsp+0x30]
   140022def:	and    QWORD PTR [rsp+0x30],0x0
   140022df5:	lea    r8,[rsp+0x38]
   140022dfa:	and    QWORD PTR [rsp+0x38],0x0
   140022e00:	mov    DWORD PTR [rdx],eax
   140022e02:	mov    eax,DWORD PTR [rcx+0x28]
   140022e05:	mov    DWORD PTR [rdx+0x4],eax
   140022e08:	lea    rcx,[rax+0x8]
   140022e0c:	call   0x140029794
   140022e11:	mov    ebx,eax
   140022e13:	test   eax,eax
   140022e15:	jns    0x140022e48
   140022e17:	mov    rcx,QWORD PTR [rip+0x2825a]        # 0x14004b078
   140022e1e:	lea    rax,[rip+0x28253]        # 0x14004b078
   140022e25:	cmp    rcx,rax
   140022e28:	je     0x140022e48
   140022e2a:	test   BYTE PTR [rcx+0x1c],0x1
   140022e2e:	je     0x140022e48
   140022e30:	mov    rcx,QWORD PTR [rcx+0x10]
   140022e34:	lea    r8,[rip+0x159ad]        # 0x1400387e8
   140022e3b:	mov    edx,0x23
   140022e40:	mov    r9d,ebx
   140022e43:	call   0x140001f70
   140022e48:	mov    rcx,QWORD PTR [rsp+0x30]
   140022e4d:	test   rcx,rcx
   140022e50:	je     0x140022e58
   140022e52:	call   QWORD PTR [rip+0xf5f0]        # 0x140032448
   140022e58:	mov    eax,ebx
   140022e5a:	add    rsp,0x20
   140022e5e:	pop    rbx
   140022e5f:	ret    
   140022e60:	int3   
   140022e61:	int3   
   140022e62:	int3   
   140022e63:	int3   
   140022e64:	int3   
   140022e65:	int3   
   140022e66:	int3   
   140022e67:	int3   
   140022e68:	int3   
   140022e69:	int3   
   140022e6a:	int3   
   140022e6b:	int3   
   140022e6c:	int3   
   140022e6d:	int3   
   140022e6e:	int3   
   140022e6f:	int3   
   140022e70:	mov    eax,DWORD PTR [rcx+0x8]
   140022e73:	mov    rdx,rcx
   140022e76:	test   eax,eax
   140022e78:	mov    eax,0x1
   140022e7d:	jne    0x140022e83
   140022e7f:	mov    DWORD PTR [rcx+0x8],eax
   140022e82:	ret    
   140022e83:	mov    ecx,eax
   140022e85:	lock xadd DWORD PTR [rdx+0x8],ecx
   140022e8a:	add    eax,ecx
   140022e8c:	ret    
   140022e8d:	int3   
   140022e8e:	int3   
   140022e8f:	int3   
   140022e90:	int3   
   140022e91:	int3   
   140022e92:	int3   
   140022e93:	int3   
   140022e94:	int3   
   140022e95:	int3   
   140022e96:	int3   
   140022e97:	int3   
   140022e98:	int3   
   140022e99:	int3   
   140022e9a:	int3   
   140022e9b:	int3   
   140022e9c:	int3   
   140022e9d:	int3   
   140022e9e:	int3   
   140022e9f:	int3   
   140022ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140022ea5:	push   rdi
   140022ea6:	sub    rsp,0x20
   140022eaa:	mov    eax,DWORD PTR [rcx+0x8]
   140022ead:	mov    rdi,rcx
   140022eb0:	cmp    eax,0x1
   140022eb3:	jne    0x140022ebe
   140022eb5:	mov    DWORD PTR [rcx+0x8],0x0
   140022ebc:	jmp    0x140022ecb
   140022ebe:	or     eax,0xffffffff
   140022ec1:	lock xadd DWORD PTR [rcx+0x8],eax
   140022ec6:	sub    eax,0x1
   140022ec9:	jg     0x140022eec
   140022ecb:	test   rcx,rcx
   140022ece:	je     0x140022eea
   140022ed0:	mov    rax,QWORD PTR [rcx]
   140022ed3:	mov    rbx,QWORD PTR [rax+0x38]
   140022ed7:	mov    rcx,rbx
   140022eda:	call   QWORD PTR [rip+0xf7c8]        # 0x1400326a8
   140022ee0:	mov    edx,0x1
   140022ee5:	mov    rcx,rdi
   140022ee8:	call   rbx
   140022eea:	xor    eax,eax
   140022eec:	mov    rbx,QWORD PTR [rsp+0x30]
   140022ef1:	add    rsp,0x20
   140022ef5:	pop    rdi
   140022ef6:	ret    
   140022ef7:	int3   
   140022ef8:	int3   
   140022ef9:	int3   
   140022efa:	int3   
   140022efb:	int3   
   140022efc:	int3   
   140022efd:	int3   
   140022efe:	int3   
   140022eff:	int3   
   140022f00:	sub    rsp,0x28
   140022f04:	mov    rcx,QWORD PTR [rcx]
   140022f07:	test   rcx,rcx
   140022f0a:	je     0x140022f12
   140022f0c:	call   QWORD PTR [rip+0xf4ee]        # 0x140032400
   140022f12:	add    rsp,0x28
   140022f16:	ret    
   140022f17:	int3   
   140022f18:	int3   
   140022f19:	int3   
   140022f1a:	int3   
   140022f1b:	int3   
   140022f1c:	int3   
   140022f1d:	int3   
   140022f1e:	int3   
   140022f1f:	int3   
   140022f20:	rex push rbx
   140022f22:	sub    rsp,0x20
   140022f26:	lea    rax,[rip+0x11c13]        # 0x140034b40
   140022f2d:	mov    rbx,rcx
   140022f30:	mov    QWORD PTR [rcx],rax
   140022f33:	test   dl,0x1
   140022f36:	je     0x140022f3e
   140022f38:	call   QWORD PTR [rip+0xf68a]        # 0x1400325c8
   140022f3e:	mov    rax,rbx
   140022f41:	add    rsp,0x20
   140022f45:	pop    rbx
   140022f46:	ret    
   140022f47:	int3   
   140022f48:	int3   
   140022f49:	int3   
   140022f4a:	int3   
   140022f4b:	int3   
   140022f4c:	int3   
   140022f4d:	int3   
   140022f4e:	int3   
   140022f4f:	int3   
   140022f50:	rex push rbx
   140022f52:	sub    rsp,0x30
   140022f56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022f5f:	mov    rbx,rcx
   140022f62:	mov    ecx,0x68
   140022f67:	call   QWORD PTR [rip+0xf663]        # 0x1400325d0
   140022f6d:	mov    rdx,rax
   140022f70:	xor    r8d,r8d
   140022f73:	test   rax,rax
   140022f76:	je     0x140022fac
   140022f78:	mov    DWORD PTR [rax+0x8],r8d
   140022f7c:	mov    DWORD PTR [rax+0x10],0x5
   140022f83:	mov    QWORD PTR [rax+0x18],r8
   140022f87:	mov    QWORD PTR [rax+0x28],r8
   140022f8b:	mov    QWORD PTR [rax+0x30],r8
   140022f8f:	mov    QWORD PTR [rax+0x38],r8
   140022f93:	mov    QWORD PTR [rax+0x40],r8
   140022f97:	mov    WORD PTR [rax+0x48],r8w
   140022f9c:	mov    BYTE PTR [rax+0x4a],r8b
   140022fa0:	lea    rax,[rip+0x11c41]        # 0x140034be8
   140022fa7:	mov    QWORD PTR [rdx],rax
   140022faa:	jmp    0x140022faf
   140022fac:	mov    rdx,r8
   140022faf:	test   rdx,rdx
   140022fb2:	je     0x140022fcd
   140022fb4:	mov    eax,DWORD PTR [rdx+0x8]
   140022fb7:	test   eax,eax
   140022fb9:	jne    0x140022fc4
   140022fbb:	mov    DWORD PTR [rdx+0x8],0x1
   140022fc2:	jmp    0x140022fc8
   140022fc4:	lock inc DWORD PTR [rdx+0x8]
   140022fc8:	mov    QWORD PTR [rbx],rdx
   140022fcb:	jmp    0x140022fdc
   140022fcd:	mov    eax,0x8007000e
   140022fd2:	jmp    0x140022fde
   140022fd4:	mov    eax,DWORD PTR [rsp+0x48]
   140022fd8:	test   eax,eax
   140022fda:	js     0x140022fde
   140022fdc:	xor    eax,eax
   140022fde:	add    rsp,0x30
   140022fe2:	pop    rbx
   140022fe3:	ret    
   140022fe4:	int3   
   140022fe5:	int3   
   140022fe6:	int3   
   140022fe7:	int3   
   140022fe8:	int3   
   140022fe9:	int3   
   140022fea:	int3   
   140022feb:	int3   
   140022fec:	rex push rbx
   140022fee:	sub    rsp,0x30
   140022ff2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022ffb:	mov    rbx,rcx
   140022ffe:	mov    ecx,0x78
   140023003:	call   QWORD PTR [rip+0xf5c7]        # 0x1400325d0
   140023009:	mov    rdx,rax
   14002300c:	xor    r8d,r8d
   14002300f:	test   rax,rax
   140023012:	je     0x140023048
   140023014:	mov    DWORD PTR [rax+0x8],r8d
   140023018:	mov    DWORD PTR [rax+0x10],0x3
   14002301f:	mov    QWORD PTR [rax+0x18],r8
   140023023:	mov    QWORD PTR [rax+0x28],r8
   140023027:	mov    QWORD PTR [rax+0x30],r8
   14002302b:	mov    QWORD PTR [rax+0x38],r8
   14002302f:	mov    QWORD PTR [rax+0x40],r8
   140023033:	mov    WORD PTR [rax+0x48],r8w
   140023038:	mov    BYTE PTR [rax+0x4a],r8b
   14002303c:	lea    rax,[rip+0x11b8d]        # 0x140034bd0
   140023043:	mov    QWORD PTR [rdx],rax
   140023046:	jmp    0x14002304b
   140023048:	mov    rdx,r8
   14002304b:	test   rdx,rdx
   14002304e:	je     0x140023069
   140023050:	mov    eax,DWORD PTR [rdx+0x8]
   140023053:	test   eax,eax
   140023055:	jne    0x140023060
   140023057:	mov    DWORD PTR [rdx+0x8],0x1
   14002305e:	jmp    0x140023064
   140023060:	lock inc DWORD PTR [rdx+0x8]
   140023064:	mov    QWORD PTR [rbx],rdx
   140023067:	jmp    0x140023078
   140023069:	mov    eax,0x8007000e
   14002306e:	jmp    0x14002307a
   140023070:	mov    eax,DWORD PTR [rsp+0x48]
   140023074:	test   eax,eax
   140023076:	js     0x14002307a
   140023078:	xor    eax,eax
   14002307a:	add    rsp,0x30
   14002307e:	pop    rbx
   14002307f:	ret    
   140023080:	int3   
   140023081:	int3   
   140023082:	int3   
   140023083:	int3   
   140023084:	int3   
   140023085:	int3   
   140023086:	int3   
   140023087:	int3   
   140023088:	rex push rbx
   14002308a:	sub    rsp,0x30
   14002308e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023097:	mov    rbx,rcx
   14002309a:	mov    ecx,0x60
   14002309f:	call   QWORD PTR [rip+0xf52b]        # 0x1400325d0
   1400230a5:	mov    rdx,rax
   1400230a8:	xor    r8d,r8d
   1400230ab:	test   rax,rax
   1400230ae:	je     0x1400230e4
   1400230b0:	mov    DWORD PTR [rax+0x8],r8d
   1400230b4:	mov    DWORD PTR [rax+0x10],0x4
   1400230bb:	mov    QWORD PTR [rax+0x18],r8
   1400230bf:	mov    QWORD PTR [rax+0x28],r8
   1400230c3:	mov    QWORD PTR [rax+0x30],r8
   1400230c7:	mov    QWORD PTR [rax+0x38],r8
   1400230cb:	mov    QWORD PTR [rax+0x40],r8
   1400230cf:	mov    WORD PTR [rax+0x48],r8w
   1400230d4:	mov    BYTE PTR [rax+0x4a],r8b
   1400230d8:	lea    rax,[rip+0x11b21]        # 0x140034c00
   1400230df:	mov    QWORD PTR [rdx],rax
   1400230e2:	jmp    0x1400230e7
   1400230e4:	mov    rdx,r8
   1400230e7:	test   rdx,rdx
   1400230ea:	je     0x140023105
   1400230ec:	mov    eax,DWORD PTR [rdx+0x8]
   1400230ef:	test   eax,eax
   1400230f1:	jne    0x1400230fc
   1400230f3:	mov    DWORD PTR [rdx+0x8],0x1
   1400230fa:	jmp    0x140023100
   1400230fc:	lock inc DWORD PTR [rdx+0x8]
   140023100:	mov    QWORD PTR [rbx],rdx
   140023103:	jmp    0x140023114
   140023105:	mov    eax,0x8007000e
   14002310a:	jmp    0x140023116
   14002310c:	mov    eax,DWORD PTR [rsp+0x48]
   140023110:	test   eax,eax
   140023112:	js     0x140023116
   140023114:	xor    eax,eax
   140023116:	add    rsp,0x30
   14002311a:	pop    rbx
   14002311b:	ret    
   14002311c:	int3   
   14002311d:	int3   
   14002311e:	int3   
   14002311f:	int3   
   140023120:	int3   
   140023121:	int3   
   140023122:	int3   
   140023123:	int3   
   140023124:	mov    r11,rsp
   140023127:	mov    QWORD PTR [r11+0x8],rbx
   14002312b:	mov    QWORD PTR [r11+0x18],r8
   14002312f:	push   rdi
   140023130:	sub    rsp,0x20
   140023134:	mov    r8,QWORD PTR [rdx]
   140023137:	mov    rbx,rdx
   14002313a:	mov    rax,QWORD PTR [rdx+0x8]
   14002313e:	mov    rdi,rcx
   140023141:	sub    rax,r8
   140023144:	sar    rax,1
   140023147:	cmp    r8,QWORD PTR [rdx+0x8]
   14002314b:	mov    QWORD PTR [r11+0x18],rax
   14002314f:	cmove  r8,rdx
   140023153:	lea    rdx,[r11+0x18]
   140023157:	call   0x14002a7fc
   14002315c:	test   eax,eax
   14002315e:	js     0x1400231aa
   140023160:	mov    rax,QWORD PTR [rbx+0x8]
   140023164:	sub    rax,QWORD PTR [rbx]
   140023167:	mov    rdx,QWORD PTR [rsp+0x40]
   14002316c:	sar    rax,1
   14002316f:	cmp    rdx,rax
   140023172:	jbe    0x1400231a8
   140023174:	cmp    rdx,0x2000000
   14002317b:	jbe    0x140023184
   14002317d:	mov    eax,0x8007000e
   140023182:	jmp    0x1400231aa
   140023184:	mov    rcx,rbx
   140023187:	call   0x14000d198
   14002318c:	mov    r8,QWORD PTR [rbx]
   14002318f:	lea    rdx,[rsp+0x40]
   140023194:	cmp    r8,QWORD PTR [rbx+0x8]
   140023198:	mov    rcx,rdi
   14002319b:	cmove  r8,rbx
   14002319f:	call   0x14002a7fc
   1400231a4:	test   eax,eax
   1400231a6:	js     0x1400231aa
   1400231a8:	xor    eax,eax
   1400231aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400231af:	add    rsp,0x20
   1400231b3:	pop    rdi
   1400231b4:	ret    
   1400231b5:	int3   
   1400231b6:	int3   
   1400231b7:	int3   
   1400231b8:	int3   
   1400231b9:	int3   
   1400231ba:	int3   
   1400231bb:	int3   
   1400231bc:	mov    rax,rsp
   1400231bf:	mov    QWORD PTR [rax+0x8],rcx
   1400231c3:	push   rsi
   1400231c4:	push   rdi
   1400231c5:	push   r12
   1400231c7:	push   r14
   1400231c9:	push   r15
   1400231cb:	sub    rsp,0x60
   1400231cf:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   1400231d7:	mov    QWORD PTR [rax+0x10],rbx
   1400231db:	mov    rax,QWORD PTR [rip+0x27e3e]        # 0x14004b020
   1400231e2:	xor    rax,rsp
   1400231e5:	mov    QWORD PTR [rsp+0x50],rax
   1400231ea:	mov    r14,r8
   1400231ed:	mov    r15,rcx
   1400231f0:	mov    QWORD PTR [rsp+0x20],r8
   1400231f5:	xor    ebx,ebx
   1400231f7:	test   rcx,rcx
   1400231fa:	je     0x140023232
   1400231fc:	cmp    rdx,0x7fffffff
   140023203:	ja     0x140023232
   140023205:	mov    r8,rdx
   140023208:	mov    eax,ebx
   14002320a:	test   rdx,rdx
   14002320d:	je     0x14002322d
   14002320f:	cmp    WORD PTR [rcx],bx
   140023212:	je     0x14002321e
   140023214:	add    rcx,0x2
   140023218:	sub    r8,0x1
   14002321c:	jne    0x14002320f
   14002321e:	test   r8,r8
   140023221:	je     0x14002322d
   140023223:	sub    rdx,r8
   140023226:	mov    edi,0x80070057
   14002322b:	jmp    0x14002323e
   14002322d:	mov    rdx,rbx
   140023230:	jmp    0x140023237
   140023232:	mov    rdx,QWORD PTR [rsp+0x20]
   140023237:	mov    edi,0x80070057
   14002323c:	mov    eax,edi
   14002323e:	test   eax,eax
   140023240:	js     0x14002341d
   140023246:	cmp    rdx,0x4
   14002324a:	jae    0x140023253
   14002324c:	mov    eax,edi
   14002324e:	jmp    0x14002341d
   140023253:	lea    r12,[rdx-0x2]
   140023257:	mov    QWORD PTR [rsp+0x30],r12
   14002325c:	mov    ecx,0x3
   140023261:	lea    rax,[rsp+0x48]
   140023266:	mov    edx,ebx
   140023268:	lea    r9,[rsp+0x48]
   14002326d:	mov    r8,r15
   140023270:	sub    r8,r9
   140023273:	lea    r9,[rcx-0x1]
   140023277:	test   r9,r9
   14002327a:	je     0x140023297
   14002327c:	movzx  r10d,WORD PTR [r8+rax*1]
   140023281:	test   r10w,r10w
   140023285:	je     0x140023297
   140023287:	mov    WORD PTR [rax],r10w
   14002328b:	add    rax,0x2
   14002328f:	mov    rcx,r9
   140023292:	test   r9,r9
   140023295:	jne    0x140023273
   140023297:	test   rcx,rcx
   14002329a:	jne    0x1400232a5
   14002329c:	sub    rax,0x2
   1400232a0:	mov    edx,0x8007007a
   1400232a5:	mov    WORD PTR [rax],bx
   1400232a8:	test   edx,edx
   1400232aa:	js     0x14002341b
   1400232b0:	mov    rdx,r14
   1400232b3:	lea    rcx,[rsp+0x48]
   1400232b8:	call   0x140023448
   1400232bd:	test   eax,eax
   1400232bf:	js     0x14002341d
   1400232c5:	mov    rax,QWORD PTR [r14]
   1400232c8:	mov    rcx,QWORD PTR [r14+0x8]
   1400232cc:	sub    rcx,rax
   1400232cf:	sar    rcx,1
   1400232d2:	cmp    rax,QWORD PTR [r14+0x8]
   1400232d6:	cmove  rax,r14
   1400232da:	test   rax,rax
   1400232dd:	je     0x140023313
   1400232df:	cmp    rcx,0x7fffffff
   1400232e6:	ja     0x140023313
   1400232e8:	mov    rdx,rcx
   1400232eb:	mov    esi,ebx
   1400232ed:	test   rcx,rcx
   1400232f0:	je     0x14002330e
   1400232f2:	cmp    WORD PTR [rax],bx
   1400232f5:	je     0x140023301
   1400232f7:	add    rax,0x2
   1400232fb:	sub    rdx,0x1
   1400232ff:	jne    0x1400232f2
   140023301:	test   rdx,rdx
   140023304:	je     0x14002330e
   140023306:	mov    rax,rcx
   140023309:	sub    rax,rdx
   14002330c:	jmp    0x14002331a
   14002330e:	mov    rax,rbx
   140023311:	jmp    0x140023318
   140023313:	mov    rax,QWORD PTR [rsp+0x20]
   140023318:	mov    esi,edi
   14002331a:	test   esi,esi
   14002331c:	cmovs  rax,rbx
   140023320:	jns    0x140023329
   140023322:	mov    eax,esi
   140023324:	jmp    0x14002341d
   140023329:	lea    rdx,[r12+0x1]
   14002332e:	add    rdx,rax
   140023331:	cmp    rcx,rdx
   140023334:	jae    0x140023362
   140023336:	mov    rcx,r14
   140023339:	call   0x14000d198
   14002333e:	nop
   14002333f:	jmp    0x14002335e
   140023341:	xor    ebx,ebx
   140023343:	mov    edi,0x80070057
   140023348:	mov    r15,QWORD PTR [rsp+0x90]
   140023350:	mov    esi,DWORD PTR [rsp+0x28]
   140023354:	mov    r12,QWORD PTR [rsp+0x30]
   140023359:	mov    r14,QWORD PTR [rsp+0x20]
   14002335e:	test   esi,esi
   140023360:	js     0x140023322
   140023362:	mov    r8,QWORD PTR [r14]
   140023365:	mov    r10,QWORD PTR [r14+0x8]
   140023369:	sub    r10,r8
   14002336c:	sar    r10,1
   14002336f:	cmp    r8,QWORD PTR [r14+0x8]
   140023373:	cmove  r8,r14
   140023377:	lea    rax,[r10-0x1]
   14002337b:	mov    edx,ebx
   14002337d:	mov    r11d,0x7ffffffe
   140023383:	cmp    rax,r11
   140023386:	cmova  edx,edi
   140023389:	test   edx,edx
   14002338b:	js     0x1400233b8
   14002338d:	mov    rax,r10
   140023390:	mov    rcx,r8
   140023393:	mov    edx,ebx
   140023395:	test   r10,r10
   140023398:	je     0x1400233b6
   14002339a:	cmp    WORD PTR [rcx],bx
   14002339d:	je     0x1400233a9
   14002339f:	add    rcx,0x2
   1400233a3:	sub    rax,0x1
   1400233a7:	jne    0x14002339a
   1400233a9:	test   rax,rax
   1400233ac:	je     0x1400233b6
   1400233ae:	mov    r9,r10
   1400233b1:	sub    r9,rax
   1400233b4:	jmp    0x1400233bb
   1400233b6:	mov    edx,edi
   1400233b8:	mov    r9,rbx
   1400233bb:	test   edx,edx
   1400233bd:	js     0x14002341b
   1400233bf:	cmp    r12,r11
   1400233c2:	jbe    0x1400233c8
   1400233c4:	mov    edx,edi
   1400233c6:	jmp    0x14002341b
   1400233c8:	lea    r11,[r15+0x4]
   1400233cc:	mov    rax,r10
   1400233cf:	sub    rax,r9
   1400233d2:	lea    rcx,[r8+r9*2]
   1400233d6:	mov    edx,ebx
   1400233d8:	je     0x14002340f
   1400233da:	mov    r8,rax
   1400233dd:	sub    r8,r10
   1400233e0:	add    r8,r9
   1400233e3:	add    r8,r12
   1400233e6:	sub    r11,rcx
   1400233e9:	test   r8,r8
   1400233ec:	je     0x14002340a
   1400233ee:	movzx  r9d,WORD PTR [r11+rcx*1]
   1400233f3:	test   r9w,r9w
   1400233f7:	je     0x14002340a
   1400233f9:	mov    WORD PTR [rcx],r9w
   1400233fd:	add    rcx,0x2
   140023401:	dec    r8
   140023404:	sub    rax,0x1
   140023408:	jne    0x1400233e9
   14002340a:	test   rax,rax
   14002340d:	jne    0x140023418
   14002340f:	sub    rcx,0x2
   140023413:	mov    edx,0x8007007a
   140023418:	mov    WORD PTR [rcx],bx
   14002341b:	mov    eax,edx
   14002341d:	mov    rcx,QWORD PTR [rsp+0x50]
   140023422:	xor    rcx,rsp
   140023425:	call   0x14002dd00
   14002342a:	mov    rbx,QWORD PTR [rsp+0x98]
   140023432:	add    rsp,0x60
   140023436:	pop    r15
   140023438:	pop    r14
   14002343a:	pop    r12
   14002343c:	pop    rdi
   14002343d:	pop    rsi
   14002343e:	ret    
   14002343f:	int3   
   140023440:	int3   
   140023441:	int3   
   140023442:	int3   
   140023443:	int3   
   140023444:	int3   
   140023445:	int3   
   140023446:	int3   
   140023447:	int3   
   140023448:	mov    rax,rsp
   14002344b:	mov    QWORD PTR [rax+0x18],r8
   14002344f:	mov    QWORD PTR [rax+0x10],rdx
   140023453:	mov    QWORD PTR [rax+0x8],rcx
   140023457:	push   rbx
   140023458:	push   rsi
   140023459:	push   rdi
   14002345a:	push   r14
   14002345c:	push   r15
   14002345e:	sub    rsp,0x40
   140023462:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14002346a:	mov    rbx,rdx
   14002346d:	mov    r15,rcx
   140023470:	mov    esi,0x2000000
   140023475:	mov    QWORD PTR [rsp+0x20],rsi
   14002347a:	xor    edi,edi
   14002347c:	mov    r14d,0x104
   140023482:	mov    rdx,QWORD PTR [rbx]
   140023485:	mov    rax,QWORD PTR [rbx+0x8]
   140023489:	sub    rax,rdx
   14002348c:	sar    rax,1
   14002348f:	mov    ecx,0xffffffff
   140023494:	cmp    rax,rcx
   140023497:	jbe    0x1400234a3
   140023499:	mov    eax,0x8007000e
   14002349e:	jmp    0x140023535
   1400234a3:	cmp    rdx,QWORD PTR [rbx+0x8]
   1400234a7:	cmove  rdx,rbx
   1400234ab:	mov    r8d,eax
   1400234ae:	mov    rcx,r15
   1400234b1:	call   QWORD PTR [rip+0xed01]        # 0x1400321b8
   1400234b7:	test   eax,eax
   1400234b9:	je     0x1400234bf
   1400234bb:	xor    eax,eax
   1400234bd:	jmp    0x140023535
   1400234bf:	call   QWORD PTR [rip+0xedc3]        # 0x140032288
   1400234c5:	mov    ecx,eax
   1400234c7:	cmp    eax,0x7a
   1400234ca:	jne    0x140023528
   1400234cc:	mov    rax,QWORD PTR [rbx+0x8]
   1400234d0:	sub    rax,QWORD PTR [rbx]
   1400234d3:	sar    rax,1
   1400234d6:	cmp    rax,rsi
   1400234d9:	jae    0x140023499
   1400234db:	mov    rcx,rsi
   1400234de:	sub    rcx,rax
   1400234e1:	cmp    rcx,r14
   1400234e4:	cmova  rcx,r14
   1400234e8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400234ec:	sub    rdx,QWORD PTR [rbx]
   1400234ef:	sar    rdx,1
   1400234f2:	add    rdx,rcx
   1400234f5:	mov    rcx,rbx
   1400234f8:	call   0x14000d198
   1400234fd:	nop
   1400234fe:	jmp    0x14002351c
   140023500:	mov    r14d,0x104
   140023506:	mov    rsi,QWORD PTR [rsp+0x20]
   14002350b:	mov    rbx,QWORD PTR [rsp+0x78]
   140023510:	mov    r15,QWORD PTR [rsp+0x70]
   140023515:	mov    edi,DWORD PTR [rsp+0x80]
   14002351c:	test   edi,edi
   14002351e:	jns    0x140023482
   140023524:	mov    eax,edi
   140023526:	jmp    0x140023535
   140023528:	movzx  eax,ax
   14002352b:	or     eax,0x80070000
   140023530:	test   ecx,ecx
   140023532:	cmovle eax,ecx
   140023535:	add    rsp,0x40
   140023539:	pop    r15
   14002353b:	pop    r14
   14002353d:	pop    rdi
   14002353e:	pop    rsi
   14002353f:	pop    rbx
   140023540:	ret    
   140023541:	int3   
   140023542:	int3   
   140023543:	int3   
   140023544:	int3   
   140023545:	int3   
   140023546:	int3   
   140023547:	int3   
   140023548:	rex push rdi
   14002354a:	sub    rsp,0x30
   14002354e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023557:	mov    eax,DWORD PTR [rip+0x2cd13]        # 0x140050270
   14002355d:	lea    rdi,[rip+0x2cd14]        # 0x140050278
   140023564:	test   al,0x1
   140023566:	jne    0x1400235b1
   140023568:	or     eax,0x1
   14002356b:	mov    DWORD PTR [rip+0x2ccff],eax        # 0x140050270
   140023571:	and    QWORD PTR [rip+0x2ccff],0x0        # 0x140050278
   140023579:	and    QWORD PTR [rip+0x2ccff],0x0        # 0x140050280
   140023581:	call   0x140023778
   140023586:	mov    QWORD PTR [rip+0x2cceb],rax        # 0x140050278
   14002358d:	and    DWORD PTR [rip+0x2cd00],0x0        # 0x140050294
   140023594:	xor    edx,edx
   140023596:	lea    rcx,[rip+0x2cceb]        # 0x140050288
   14002359d:	call   QWORD PTR [rip+0xeccd]        # 0x140032270
   1400235a3:	nop
   1400235a4:	lea    rcx,[rip+0xe2c5]        # 0x140031870
   1400235ab:	call   0x14002de94
   1400235b0:	nop
   1400235b1:	mov    rax,rdi
   1400235b4:	add    rsp,0x30
   1400235b8:	pop    rdi
   1400235b9:	ret    
   1400235ba:	int3   
   1400235bb:	int3   
   1400235bc:	int3   
   1400235bd:	int3   
   1400235be:	int3   
   1400235bf:	int3   
   1400235c0:	mov    rax,rsp
   1400235c3:	mov    BYTE PTR [rax+0x10],dl
   1400235c6:	push   rdi
   1400235c7:	sub    rsp,0x40
   1400235cb:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400235d3:	mov    QWORD PTR [rax+0x8],rbx
   1400235d7:	mov    rbx,rcx
   1400235da:	lea    rdi,[rcx+0x10]
   1400235de:	mov    QWORD PTR [rax-0x20],rdi
   1400235e2:	mov    rcx,rdi
   1400235e5:	call   QWORD PTR [rip+0xeb1d]        # 0x140032108
   1400235eb:	mov    BYTE PTR [rsp+0x30],0x1
   1400235f0:	mov    BYTE PTR [rsp+0x38],0x1
   1400235f5:	lea    rdx,[rsp+0x58]
   1400235fa:	mov    rcx,rbx
   1400235fd:	call   0x1400236d8
   140023602:	inc    QWORD PTR [rax]
   140023605:	mov    r8,rax
   140023608:	call   0x140023628
   14002360d:	nop
   14002360e:	mov    rcx,rdi
   140023611:	mov    rbx,QWORD PTR [rsp+0x50]
   140023616:	add    rsp,0x40
   14002361a:	pop    rdi
   14002361b:	rex.W jmp QWORD PTR [rip+0xead6]        # 0x1400320f8
   140023622:	int3   
   140023623:	int3   
   140023624:	int3   
   140023625:	int3   
   140023626:	int3   
   140023627:	int3   
   140023628:	sub    rsp,0x28
   14002362c:	mov    rcx,QWORD PTR [r8]
   14002362f:	test   rcx,rcx
   140023632:	je     0x140023686
   140023634:	mov    rax,QWORD PTR [r8+0x8]
   140023638:	xorps  xmm0,xmm0
   14002363b:	movsd  xmm2,QWORD PTR [rip+0x19e4d]        # 0x14003d490
   140023643:	cvtsi2sd xmm0,rax
   140023648:	test   rax,rax
   14002364b:	jns    0x140023651
   14002364d:	addsd  xmm0,xmm2
   140023651:	mulsd  xmm0,QWORD PTR [rip+0x19e2f]        # 0x14003d488
   140023659:	xorps  xmm1,xmm1
   14002365c:	cvtsi2sd xmm1,rcx
   140023661:	test   rcx,rcx
   140023664:	jns    0x14002366a
   140023666:	addsd  xmm1,xmm2
   14002366a:	divsd  xmm0,xmm1
   14002366e:	mov    ecx,0x116
   140023673:	addsd  xmm0,QWORD PTR [rip+0x19e05]        # 0x14003d480
   14002367b:	cvttsd2si rdx,xmm0
   140023680:	call   QWORD PTR [rip+0xedb2]        # 0x140032438
   140023686:	add    rsp,0x28
   14002368a:	ret    
   14002368b:	int3   
   14002368c:	int3   
   14002368d:	int3   
   14002368e:	int3   
   14002368f:	int3   
   140023690:	int3   
   140023691:	int3   
   140023692:	int3   
   140023693:	int3   
   140023694:	sub    rsp,0x28
   140023698:	call   0x1400235c0
   14002369d:	mov    edx,0x1
   1400236a2:	mov    ecx,0xbd
   1400236a7:	call   QWORD PTR [rip+0xedbb]        # 0x140032468
   1400236ad:	mov    edx,0x64
   1400236b2:	mov    ecx,0x107
   1400236b7:	call   QWORD PTR [rip+0xed1b]        # 0x1400323d8
   1400236bd:	xor    edx,edx
   1400236bf:	mov    ecx,0x105
   1400236c4:	add    rsp,0x28
   1400236c8:	rex.W jmp QWORD PTR [rip+0xed09]        # 0x1400323d8
   1400236cf:	int3   
   1400236d0:	int3   
   1400236d1:	int3   
   1400236d2:	int3   
   1400236d3:	int3   
   1400236d4:	int3   
   1400236d5:	int3   
   1400236d6:	int3   
   1400236d7:	int3   
   1400236d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400236dd:	push   rdi
   1400236de:	sub    rsp,0x60
   1400236e2:	mov    r8,QWORD PTR [rcx]
   1400236e5:	xor    r9d,r9d
   1400236e8:	mov    rdi,rcx
   1400236eb:	mov    rbx,r8
   1400236ee:	mov    rax,QWORD PTR [r8+0x8]
   1400236f2:	cmp    BYTE PTR [rax+0x19],r9b
   1400236f6:	jne    0x140023711
   1400236f8:	mov    cl,BYTE PTR [rdx]
   1400236fa:	cmp    BYTE PTR [rax+0x20],cl
   1400236fd:	jae    0x140023705
   1400236ff:	mov    rax,QWORD PTR [rax+0x10]
   140023703:	jmp    0x14002370b
   140023705:	mov    rbx,rax
   140023708:	mov    rax,QWORD PTR [rax]
   14002370b:	cmp    BYTE PTR [rax+0x19],r9b
   14002370f:	je     0x1400236fa
   140023711:	cmp    rbx,r8
   140023714:	je     0x14002371d
   140023716:	mov    al,BYTE PTR [rbx+0x20]
   140023719:	cmp    BYTE PTR [rdx],al
   14002371b:	jae    0x140023763
   14002371d:	mov    al,BYTE PTR [rdx]
   14002371f:	mov    rcx,rdi
   140023722:	mov    QWORD PTR [rsp+0x30],r9
   140023727:	lea    rdx,[rsp+0x40]
   14002372c:	mov    QWORD PTR [rsp+0x38],r9
   140023731:	movups xmm0,XMMWORD PTR [rsp+0x30]
   140023736:	mov    BYTE PTR [rsp+0x40],al
   14002373a:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140023740:	call   0x1400237c8
   140023745:	mov    r8,rbx
   140023748:	mov    QWORD PTR [rsp+0x20],rax
   14002374d:	lea    rdx,[rsp+0x70]
   140023752:	mov    rcx,rdi
   140023755:	lea    r9,[rax+0x20]
   140023759:	call   0x140023810
   14002375e:	mov    rbx,QWORD PTR [rsp+0x70]
   140023763:	lea    rax,[rbx+0x28]
   140023767:	mov    rbx,QWORD PTR [rsp+0x78]
   14002376c:	add    rsp,0x60
   140023770:	pop    rdi
   140023771:	ret    
   140023772:	int3   
   140023773:	int3   
   140023774:	int3   
   140023775:	int3   
   140023776:	int3   
   140023777:	int3   
   140023778:	mov    QWORD PTR [rsp+0x8],rcx
   14002377d:	sub    rsp,0x38
   140023781:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002378a:	mov    ecx,0x38
   14002378f:	call   0x140023f10
   140023794:	mov    QWORD PTR [rsp+0x40],rax
   140023799:	mov    QWORD PTR [rax],rax
   14002379c:	lea    rcx,[rax+0x8]
   1400237a0:	test   rcx,rcx
   1400237a3:	je     0x1400237a8
   1400237a5:	mov    QWORD PTR [rcx],rax
   1400237a8:	lea    rcx,[rax+0x10]
   1400237ac:	test   rcx,rcx
   1400237af:	je     0x1400237b4
   1400237b1:	mov    QWORD PTR [rcx],rax
   1400237b4:	mov    WORD PTR [rax+0x18],0x101
   1400237ba:	add    rsp,0x38
   1400237be:	ret    
   1400237bf:	int3   
   1400237c0:	int3   
   1400237c1:	int3   
   1400237c2:	int3   
   1400237c3:	int3   
   1400237c4:	int3   
   1400237c5:	int3   
   1400237c6:	int3   
   1400237c7:	int3   
   1400237c8:	rex push rbx
   1400237ca:	sub    rsp,0x30
   1400237ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400237d7:	mov    rbx,rdx
   1400237da:	call   0x140023a34
   1400237df:	mov    QWORD PTR [rsp+0x50],rax
   1400237e4:	mov    WORD PTR [rax+0x18],0x0
   1400237ea:	lea    r8,[rax+0x20]
   1400237ee:	test   r8,r8
   1400237f1:	je     0x140023802
   1400237f3:	mov    cl,BYTE PTR [rbx]
   1400237f5:	mov    BYTE PTR [r8],cl
   1400237f8:	movups xmm0,XMMWORD PTR [rbx+0x8]
   1400237fc:	movdqu XMMWORD PTR [r8+0x8],xmm0
   140023802:	add    rsp,0x30
   140023806:	pop    rbx
   140023807:	ret    
   140023808:	int3   
   140023809:	int3   
   14002380a:	int3   
   14002380b:	int3   
   14002380c:	int3   
   14002380d:	int3   
   14002380e:	int3   
   14002380f:	int3   
   140023810:	mov    r11,rsp
   140023813:	push   rdi
   140023814:	sub    rsp,0x50
   140023818:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140023820:	mov    QWORD PTR [r11+0x8],rbx
   140023824:	mov    QWORD PTR [r11+0x10],rsi
   140023828:	mov    rdi,r9
   14002382b:	mov    rbx,rdx
   14002382e:	mov    r10,rcx
   140023831:	xor    esi,esi
   140023833:	cmp    QWORD PTR [rcx+0x8],rsi
   140023837:	jne    0x140023858
   140023839:	mov    rax,QWORD PTR [rsp+0x80]
   140023841:	mov    QWORD PTR [r11-0x30],rax
   140023845:	mov    r9,QWORD PTR [rcx]
   140023848:	mov    r8b,0x1
   14002384b:	call   0x140023a88
   140023850:	mov    rax,rbx
   140023853:	jmp    0x140023a1a
   140023858:	mov    rcx,QWORD PTR [rcx]
   14002385b:	cmp    r8,QWORD PTR [rcx]
   14002385e:	jne    0x140023890
   140023860:	mov    al,BYTE PTR [r8+0x20]
   140023864:	cmp    BYTE PTR [r9],al
   140023867:	jae    0x1400239f4
   14002386d:	mov    rax,QWORD PTR [rsp+0x80]
   140023875:	mov    QWORD PTR [rsp+0x28],rax
   14002387a:	mov    r9,r8
   14002387d:	mov    r8b,0x1
   140023880:	mov    rcx,r10
   140023883:	call   0x140023a88
   140023888:	mov    rax,rbx
   14002388b:	jmp    0x140023a1a
   140023890:	cmp    r8,rcx
   140023893:	jne    0x1400238c5
   140023895:	mov    r9,QWORD PTR [rcx+0x10]
   140023899:	mov    al,BYTE PTR [rdi]
   14002389b:	cmp    BYTE PTR [r9+0x20],al
   14002389f:	jae    0x1400239f4
   1400238a5:	mov    rax,QWORD PTR [rsp+0x80]
   1400238ad:	mov    QWORD PTR [rsp+0x28],rax
   1400238b2:	xor    r8d,r8d
   1400238b5:	mov    rcx,r10
   1400238b8:	call   0x140023a88
   1400238bd:	mov    rax,rbx
   1400238c0:	jmp    0x140023a1a
   1400238c5:	mov    r11b,BYTE PTR [r9]
   1400238c8:	cmp    BYTE PTR [r8+0x20],r11b
   1400238cc:	jbe    0x14002396c
   1400238d2:	mov    rax,r8
   1400238d5:	cmp    BYTE PTR [r8+0x19],sil
   1400238d9:	je     0x1400238e1
   1400238db:	mov    r9,QWORD PTR [r8+0x10]
   1400238df:	jmp    0x140023922
   1400238e1:	mov    r9,QWORD PTR [r8]
   1400238e4:	cmp    BYTE PTR [r9+0x19],sil
   1400238e8:	jne    0x1400238ff
   1400238ea:	mov    rax,QWORD PTR [r9+0x10]
   1400238ee:	jmp    0x1400238f7
   1400238f0:	mov    r9,rax
   1400238f3:	mov    rax,QWORD PTR [rax+0x10]
   1400238f7:	cmp    BYTE PTR [rax+0x19],sil
   1400238fb:	je     0x1400238f0
   1400238fd:	jmp    0x140023922
   1400238ff:	mov    rdx,QWORD PTR [r8+0x8]
   140023903:	jmp    0x140023911
   140023905:	cmp    rax,QWORD PTR [rdx]
   140023908:	jne    0x140023917
   14002390a:	mov    rax,rdx
   14002390d:	mov    rdx,QWORD PTR [rdx+0x8]
   140023911:	cmp    BYTE PTR [rdx+0x19],sil
   140023915:	je     0x140023905
   140023917:	mov    r9,rax
   14002391a:	cmp    BYTE PTR [rax+0x19],sil
   14002391e:	cmove  r9,rdx
   140023922:	cmp    BYTE PTR [r9+0x20],r11b
   140023926:	jae    0x140023968
   140023928:	mov    rax,QWORD PTR [r9+0x10]
   14002392c:	mov    rdx,rbx
   14002392f:	mov    rcx,r10
   140023932:	cmp    BYTE PTR [rax+0x19],sil
   140023936:	mov    rax,QWORD PTR [rsp+0x80]
   14002393e:	mov    QWORD PTR [rsp+0x28],rax
   140023943:	je     0x140023955
   140023945:	xor    r8d,r8d
   140023948:	call   0x140023a88
   14002394d:	mov    rax,rbx
   140023950:	jmp    0x140023a1a
   140023955:	mov    r9,r8
   140023958:	mov    r8b,0x1
   14002395b:	call   0x140023a88
   140023960:	mov    rax,rbx
   140023963:	jmp    0x140023a1a
   140023968:	cmp    BYTE PTR [r8+0x20],r11b
   14002396c:	jae    0x1400239f4
   140023972:	mov    r9,r8
   140023975:	cmp    BYTE PTR [r8+0x19],sil
   140023979:	jne    0x1400239af
   14002397b:	mov    rax,QWORD PTR [r8+0x10]
   14002397f:	cmp    BYTE PTR [rax+0x19],sil
   140023983:	jne    0x140023993
   140023985:	mov    r9,rax
   140023988:	mov    rax,QWORD PTR [rax]
   14002398b:	cmp    BYTE PTR [rax+0x19],sil
   14002398f:	je     0x140023985
   140023991:	jmp    0x1400239af
   140023993:	mov    rax,QWORD PTR [r8+0x8]
   140023997:	jmp    0x1400239a6
   140023999:	cmp    r9,QWORD PTR [rax+0x10]
   14002399d:	jne    0x1400239ac
   14002399f:	mov    r9,rax
   1400239a2:	mov    rax,QWORD PTR [rax+0x8]
   1400239a6:	cmp    BYTE PTR [rax+0x19],sil
   1400239aa:	je     0x140023999
   1400239ac:	mov    r9,rax
   1400239af:	cmp    r9,rcx
   1400239b2:	je     0x1400239ba
   1400239b4:	cmp    r11b,BYTE PTR [r9+0x20]
   1400239b8:	jae    0x1400239f4
   1400239ba:	mov    rax,QWORD PTR [r8+0x10]
   1400239be:	mov    rdx,rbx
   1400239c1:	mov    rcx,r10
   1400239c4:	cmp    BYTE PTR [rax+0x19],sil
   1400239c8:	mov    rax,QWORD PTR [rsp+0x80]
   1400239d0:	mov    QWORD PTR [rsp+0x28],rax
   1400239d5:	je     0x1400239e7
   1400239d7:	mov    r9,r8
   1400239da:	xor    r8d,r8d
   1400239dd:	call   0x140023a88
   1400239e2:	mov    rax,rbx
   1400239e5:	jmp    0x140023a1a
   1400239e7:	mov    r8b,0x1
   1400239ea:	call   0x140023a88
   1400239ef:	mov    rax,rbx
   1400239f2:	jmp    0x140023a1a
   1400239f4:	mov    rax,QWORD PTR [rsp+0x80]
   1400239fc:	mov    QWORD PTR [rsp+0x20],rax
   140023a01:	mov    r9,rdi
   140023a04:	lea    rdx,[rsp+0x38]
   140023a09:	mov    rcx,r10
   140023a0c:	call   0x140023d0c
   140023a11:	mov    rcx,QWORD PTR [rax]
   140023a14:	mov    QWORD PTR [rbx],rcx
   140023a17:	mov    rax,rbx
   140023a1a:	mov    rbx,QWORD PTR [rsp+0x60]
   140023a1f:	mov    rsi,QWORD PTR [rsp+0x68]
   140023a24:	add    rsp,0x50
   140023a28:	pop    rdi
   140023a29:	ret    
   140023a2a:	int3   
   140023a2b:	int3   
   140023a2c:	int3   
   140023a2d:	int3   
   140023a2e:	int3   
   140023a2f:	int3   
   140023a30:	int3   
   140023a31:	int3   
   140023a32:	int3   
   140023a33:	int3   
   140023a34:	rex push rbx
   140023a36:	sub    rsp,0x30
   140023a3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023a43:	mov    rbx,rcx
   140023a46:	mov    ecx,0x38
   140023a4b:	call   0x140023f10
   140023a50:	mov    r8,rax
   140023a53:	mov    QWORD PTR [rsp+0x48],rax
   140023a58:	mov    rdx,QWORD PTR [rbx]
   140023a5b:	mov    QWORD PTR [rax],rdx
   140023a5e:	add    rax,0x8
   140023a62:	je     0x140023a6a
   140023a64:	mov    rcx,QWORD PTR [rbx]
   140023a67:	mov    QWORD PTR [rax],rcx
   140023a6a:	lea    rcx,[r8+0x10]
   140023a6e:	test   rcx,rcx
   140023a71:	je     0x140023a79
   140023a73:	mov    rax,QWORD PTR [rbx]
   140023a76:	mov    QWORD PTR [rcx],rax
   140023a79:	mov    rax,r8
   140023a7c:	add    rsp,0x30
   140023a80:	pop    rbx
   140023a81:	ret    
   140023a82:	int3   
   140023a83:	int3   
   140023a84:	int3   
   140023a85:	int3   
   140023a86:	int3   
   140023a87:	int3   
   140023a88:	mov    QWORD PTR [rsp+0x8],rbx
   140023a8d:	push   rdi
   140023a8e:	sub    rsp,0x20
   140023a92:	mov    rax,QWORD PTR [rcx+0x8]
   140023a96:	mov    r10,rcx
   140023a99:	movabs rcx,0x492492492492491
   140023aa3:	mov    r11b,r8b
   140023aa6:	mov    rbx,rdx
   140023aa9:	cmp    rax,rcx
   140023aac:	jae    0x140023cee
   140023ab2:	mov    r8,QWORD PTR [rsp+0x58]
   140023ab7:	inc    rax
   140023aba:	mov    QWORD PTR [r10+0x8],rax
   140023abe:	xor    edi,edi
   140023ac0:	mov    QWORD PTR [r8+0x8],r9
   140023ac4:	mov    rax,QWORD PTR [r10]
   140023ac7:	cmp    r9,rax
   140023aca:	jne    0x140023adb
   140023acc:	mov    QWORD PTR [rax+0x8],r8
   140023ad0:	mov    rax,QWORD PTR [r10]
   140023ad3:	mov    QWORD PTR [rax],r8
   140023ad6:	mov    rax,QWORD PTR [r10]
   140023ad9:	jmp    0x140023afd
   140023adb:	test   r11b,r11b
   140023ade:	je     0x140023af0
   140023ae0:	mov    QWORD PTR [r9],r8
   140023ae3:	mov    rax,QWORD PTR [r10]
   140023ae6:	cmp    r9,QWORD PTR [rax]
   140023ae9:	jne    0x140023b01
   140023aeb:	mov    QWORD PTR [rax],r8
   140023aee:	jmp    0x140023b01
   140023af0:	mov    QWORD PTR [r9+0x10],r8
   140023af4:	mov    rax,QWORD PTR [r10]
   140023af7:	cmp    r9,QWORD PTR [rax+0x10]
   140023afb:	jne    0x140023b01
   140023afd:	mov    QWORD PTR [rax+0x10],r8
   140023b01:	mov    rax,QWORD PTR [r8+0x8]
   140023b05:	mov    rdx,r8
   140023b08:	jmp    0x140023cc8
   140023b0d:	mov    rax,QWORD PTR [rdx+0x8]
   140023b11:	mov    r9,QWORD PTR [rax+0x8]
   140023b15:	mov    rcx,QWORD PTR [r9]
   140023b18:	cmp    rax,rcx
   140023b1b:	jne    0x140023be7
   140023b21:	mov    rcx,QWORD PTR [r9+0x10]
   140023b25:	cmp    BYTE PTR [rcx+0x18],dil
   140023b29:	je     0x140023bed
   140023b2f:	cmp    rdx,QWORD PTR [rax+0x10]
   140023b33:	jne    0x140023b80
   140023b35:	mov    rcx,QWORD PTR [rax+0x10]
   140023b39:	mov    rdx,rax
   140023b3c:	mov    rax,QWORD PTR [rcx]
   140023b3f:	mov    QWORD PTR [rdx+0x10],rax
   140023b43:	mov    rax,QWORD PTR [rcx]
   140023b46:	cmp    BYTE PTR [rax+0x19],dil
   140023b4a:	jne    0x140023b50
   140023b4c:	mov    QWORD PTR [rax+0x8],rdx
   140023b50:	mov    rax,QWORD PTR [rdx+0x8]
   140023b54:	mov    QWORD PTR [rcx+0x8],rax
   140023b58:	mov    rax,QWORD PTR [r10]
   140023b5b:	cmp    rdx,QWORD PTR [rax+0x8]
   140023b5f:	jne    0x140023b67
   140023b61:	mov    QWORD PTR [rax+0x8],rcx
   140023b65:	jmp    0x140023b79
   140023b67:	mov    rax,QWORD PTR [rdx+0x8]
   140023b6b:	cmp    rdx,QWORD PTR [rax]
   140023b6e:	jne    0x140023b75
   140023b70:	mov    QWORD PTR [rax],rcx
   140023b73:	jmp    0x140023b79
   140023b75:	mov    QWORD PTR [rax+0x10],rcx
   140023b79:	mov    QWORD PTR [rcx],rdx
   140023b7c:	mov    QWORD PTR [rdx+0x8],rcx
   140023b80:	mov    rax,QWORD PTR [rdx+0x8]
   140023b84:	mov    BYTE PTR [rax+0x18],0x1
   140023b88:	mov    rax,QWORD PTR [rdx+0x8]
   140023b8c:	mov    rcx,QWORD PTR [rax+0x8]
   140023b90:	mov    BYTE PTR [rcx+0x18],dil
   140023b94:	mov    rax,QWORD PTR [rdx+0x8]
   140023b98:	mov    rcx,QWORD PTR [rax+0x8]
   140023b9c:	mov    r9,QWORD PTR [rcx]
   140023b9f:	mov    rax,QWORD PTR [r9+0x10]
   140023ba3:	mov    QWORD PTR [rcx],rax
   140023ba6:	mov    rax,QWORD PTR [r9+0x10]
   140023baa:	cmp    BYTE PTR [rax+0x19],dil
   140023bae:	jne    0x140023bb4
   140023bb0:	mov    QWORD PTR [rax+0x8],rcx
   140023bb4:	mov    rax,QWORD PTR [rcx+0x8]
   140023bb8:	mov    QWORD PTR [r9+0x8],rax
   140023bbc:	mov    rax,QWORD PTR [r10]
   140023bbf:	cmp    rcx,QWORD PTR [rax+0x8]
   140023bc3:	jne    0x140023bcb
   140023bc5:	mov    QWORD PTR [rax+0x8],r9
   140023bc9:	jmp    0x140023bde
   140023bcb:	mov    rax,QWORD PTR [rcx+0x8]
   140023bcf:	cmp    rcx,QWORD PTR [rax+0x10]
   140023bd3:	jne    0x140023bdb
   140023bd5:	mov    QWORD PTR [rax+0x10],r9
   140023bd9:	jmp    0x140023bde
   140023bdb:	mov    QWORD PTR [rax],r9
   140023bde:	mov    QWORD PTR [r9+0x10],rcx
   140023be2:	jmp    0x140023cc0
   140023be7:	cmp    BYTE PTR [rcx+0x18],dil
   140023beb:	jne    0x140023c0e
   140023bed:	mov    BYTE PTR [rax+0x18],0x1
   140023bf1:	mov    BYTE PTR [rcx+0x18],0x1
   140023bf5:	mov    rax,QWORD PTR [rdx+0x8]
   140023bf9:	mov    rcx,QWORD PTR [rax+0x8]
   140023bfd:	mov    BYTE PTR [rcx+0x18],dil
   140023c01:	mov    rax,QWORD PTR [rdx+0x8]
   140023c05:	mov    rdx,QWORD PTR [rax+0x8]
   140023c09:	jmp    0x140023cc4
   140023c0e:	cmp    rdx,QWORD PTR [rax]
   140023c11:	jne    0x140023c60
   140023c13:	mov    rcx,QWORD PTR [rax]
   140023c16:	mov    rdx,rax
   140023c19:	mov    rax,QWORD PTR [rcx+0x10]
   140023c1d:	mov    QWORD PTR [rdx],rax
   140023c20:	mov    rax,QWORD PTR [rcx+0x10]
   140023c24:	cmp    BYTE PTR [rax+0x19],dil
   140023c28:	jne    0x140023c2e
   140023c2a:	mov    QWORD PTR [rax+0x8],rdx
   140023c2e:	mov    rax,QWORD PTR [rdx+0x8]
   140023c32:	mov    QWORD PTR [rcx+0x8],rax
   140023c36:	mov    rax,QWORD PTR [r10]
   140023c39:	cmp    rdx,QWORD PTR [rax+0x8]
   140023c3d:	jne    0x140023c45
   140023c3f:	mov    QWORD PTR [rax+0x8],rcx
   140023c43:	jmp    0x140023c58
   140023c45:	mov    rax,QWORD PTR [rdx+0x8]
   140023c49:	cmp    rdx,QWORD PTR [rax+0x10]
   140023c4d:	jne    0x140023c55
   140023c4f:	mov    QWORD PTR [rax+0x10],rcx
   140023c53:	jmp    0x140023c58
   140023c55:	mov    QWORD PTR [rax],rcx
   140023c58:	mov    QWORD PTR [rcx+0x10],rdx
   140023c5c:	mov    QWORD PTR [rdx+0x8],rcx
   140023c60:	mov    rax,QWORD PTR [rdx+0x8]
   140023c64:	mov    BYTE PTR [rax+0x18],0x1
   140023c68:	mov    rax,QWORD PTR [rdx+0x8]
   140023c6c:	mov    rcx,QWORD PTR [rax+0x8]
   140023c70:	mov    BYTE PTR [rcx+0x18],dil
   140023c74:	mov    rax,QWORD PTR [rdx+0x8]
   140023c78:	mov    rcx,QWORD PTR [rax+0x8]
   140023c7c:	mov    r9,QWORD PTR [rcx+0x10]
   140023c80:	mov    rax,QWORD PTR [r9]
   140023c83:	mov    QWORD PTR [rcx+0x10],rax
   140023c87:	mov    rax,QWORD PTR [r9]
   140023c8a:	cmp    BYTE PTR [rax+0x19],dil
   140023c8e:	jne    0x140023c94
   140023c90:	mov    QWORD PTR [rax+0x8],rcx
   140023c94:	mov    rax,QWORD PTR [rcx+0x8]
   140023c98:	mov    QWORD PTR [r9+0x8],rax
   140023c9c:	mov    rax,QWORD PTR [r10]
   140023c9f:	cmp    rcx,QWORD PTR [rax+0x8]
   140023ca3:	jne    0x140023cab
   140023ca5:	mov    QWORD PTR [rax+0x8],r9
   140023ca9:	jmp    0x140023cbd
   140023cab:	mov    rax,QWORD PTR [rcx+0x8]
   140023caf:	cmp    rcx,QWORD PTR [rax]
   140023cb2:	jne    0x140023cb9
   140023cb4:	mov    QWORD PTR [rax],r9
   140023cb7:	jmp    0x140023cbd
   140023cb9:	mov    QWORD PTR [rax+0x10],r9
   140023cbd:	mov    QWORD PTR [r9],rcx
   140023cc0:	mov    QWORD PTR [rcx+0x8],r9
   140023cc4:	mov    rax,QWORD PTR [rdx+0x8]
   140023cc8:	cmp    BYTE PTR [rax+0x18],dil
   140023ccc:	je     0x140023b0d
   140023cd2:	mov    rax,QWORD PTR [r10]
   140023cd5:	mov    QWORD PTR [rbx],r8
   140023cd8:	mov    rcx,QWORD PTR [rax+0x8]
   140023cdc:	mov    rax,rbx
   140023cdf:	mov    rbx,QWORD PTR [rsp+0x30]
   140023ce4:	mov    BYTE PTR [rcx+0x18],0x1
   140023ce8:	add    rsp,0x20
   140023cec:	pop    rdi
   140023ced:	ret    
   140023cee:	mov    rdx,QWORD PTR [rsp+0x58]
   140023cf3:	call   0x140003760
   140023cf8:	lea    rcx,[rip+0x14af9]        # 0x1400387f8
   140023cff:	call   0x14002d7f8
   140023d04:	int3   
   140023d05:	int3   
   140023d06:	int3   
   140023d07:	int3   
   140023d08:	int3   
   140023d09:	int3   
   140023d0a:	int3   
   140023d0b:	int3   
   140023d0c:	rex push rdi
   140023d0e:	sub    rsp,0x40
   140023d12:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140023d1b:	mov    QWORD PTR [rsp+0x58],rbx
   140023d20:	mov    r11,r9
   140023d23:	mov    rdi,rdx
   140023d26:	mov    rdx,QWORD PTR [rcx]
   140023d29:	mov    rax,QWORD PTR [rdx+0x8]
   140023d2d:	mov    r9,rdx
   140023d30:	mov    r10b,0x1
   140023d33:	cmp    BYTE PTR [rax+0x19],0x0
   140023d37:	jne    0x140023d5b
   140023d39:	mov    r8b,BYTE PTR [r11]
   140023d3c:	mov    r9,rax
   140023d3f:	cmp    r8b,BYTE PTR [rax+0x20]
   140023d43:	setb   r10b
   140023d47:	test   r10b,r10b
   140023d4a:	je     0x140023d51
   140023d4c:	mov    rax,QWORD PTR [rax]
   140023d4f:	jmp    0x140023d55
   140023d51:	mov    rax,QWORD PTR [rax+0x10]
   140023d55:	cmp    BYTE PTR [rax+0x19],0x0
   140023d59:	je     0x140023d3c
   140023d5b:	mov    rbx,r9
   140023d5e:	test   r10b,r10b
   140023d61:	je     0x140023dd6
   140023d63:	cmp    r9,QWORD PTR [rdx]
   140023d66:	jne    0x140023d91
   140023d68:	mov    rax,QWORD PTR [rsp+0x70]
   140023d6d:	mov    QWORD PTR [rsp+0x28],rax
   140023d72:	mov    r8b,0x1
   140023d75:	lea    rdx,[rsp+0x50]
   140023d7a:	call   0x140023a88
   140023d7f:	mov    rax,QWORD PTR [rax]
   140023d82:	mov    QWORD PTR [rdi],rax
   140023d85:	mov    BYTE PTR [rdi+0x8],0x1
   140023d89:	mov    rax,rdi
   140023d8c:	jmp    0x140023e19
   140023d91:	cmp    BYTE PTR [r9+0x19],0x0
   140023d96:	je     0x140023d9e
   140023d98:	mov    rbx,QWORD PTR [r9+0x10]
   140023d9c:	jmp    0x140023dd6
   140023d9e:	mov    rax,QWORD PTR [r9]
   140023da1:	cmp    BYTE PTR [rax+0x19],0x0
   140023da5:	jne    0x140023db6
   140023da7:	mov    rbx,rax
   140023daa:	mov    rax,QWORD PTR [rax+0x10]
   140023dae:	cmp    BYTE PTR [rax+0x19],0x0
   140023db2:	je     0x140023da7
   140023db4:	jmp    0x140023dd6
   140023db6:	mov    rax,QWORD PTR [r9+0x8]
   140023dba:	jmp    0x140023dc8
   140023dbc:	cmp    rbx,QWORD PTR [rax]
   140023dbf:	jne    0x140023dce
   140023dc1:	mov    rbx,rax
   140023dc4:	mov    rax,QWORD PTR [rax+0x8]
   140023dc8:	cmp    BYTE PTR [rax+0x19],0x0
   140023dcc:	je     0x140023dbc
   140023dce:	cmp    BYTE PTR [rbx+0x19],0x0
   140023dd2:	cmove  rbx,rax
   140023dd6:	mov    al,BYTE PTR [r11]
   140023dd9:	cmp    BYTE PTR [rbx+0x20],al
   140023ddc:	jae    0x140023e04
   140023dde:	mov    rax,QWORD PTR [rsp+0x70]
   140023de3:	mov    QWORD PTR [rsp+0x28],rax
   140023de8:	mov    r8b,r10b
   140023deb:	lea    rdx,[rsp+0x50]
   140023df0:	call   0x140023a88
   140023df5:	mov    rax,QWORD PTR [rax]
   140023df8:	mov    QWORD PTR [rdi],rax
   140023dfb:	mov    BYTE PTR [rdi+0x8],0x1
   140023dff:	mov    rax,rdi
   140023e02:	jmp    0x140023e19
   140023e04:	mov    rcx,QWORD PTR [rsp+0x70]
   140023e09:	call   QWORD PTR [rip+0xe7b9]        # 0x1400325c8
   140023e0f:	mov    QWORD PTR [rdi],rbx
   140023e12:	mov    BYTE PTR [rdi+0x8],0x0
   140023e16:	mov    rax,rdi
   140023e19:	mov    rbx,QWORD PTR [rsp+0x58]
   140023e1e:	add    rsp,0x40
   140023e22:	pop    rdi
   140023e23:	ret    
   140023e24:	int3   
   140023e25:	int3   
   140023e26:	int3   
   140023e27:	int3   
   140023e28:	int3   
   140023e29:	int3   
   140023e2a:	int3   
   140023e2b:	int3   
   140023e2c:	mov    QWORD PTR [rsp+0x8],rbx
   140023e31:	mov    QWORD PTR [rsp+0x10],rsi
   140023e36:	push   rdi
   140023e37:	sub    rsp,0x20
   140023e3b:	cmp    BYTE PTR [rdx+0x19],0x0
   140023e3f:	mov    rdi,rdx
   140023e42:	mov    rsi,rcx
   140023e45:	mov    rbx,rdx
   140023e48:	jne    0x140023e6b
   140023e4a:	mov    rdx,QWORD PTR [rbx+0x10]
   140023e4e:	mov    rcx,rsi
   140023e51:	call   0x140023e2c
   140023e56:	mov    rbx,QWORD PTR [rbx]
   140023e59:	mov    rcx,rdi
   140023e5c:	call   QWORD PTR [rip+0xe766]        # 0x1400325c8
   140023e62:	cmp    BYTE PTR [rbx+0x19],0x0
   140023e66:	mov    rdi,rbx
   140023e69:	je     0x140023e4a
   140023e6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e70:	mov    rsi,QWORD PTR [rsp+0x38]
   140023e75:	add    rsp,0x20
   140023e79:	pop    rdi
   140023e7a:	ret    
   140023e7b:	int3   
   140023e7c:	int3   
   140023e7d:	int3   
   140023e7e:	int3   
   140023e7f:	int3   
   140023e80:	int3   
   140023e81:	int3   
   140023e82:	int3   
   140023e83:	int3   
   140023e84:	mov    QWORD PTR [rsp+0x8],rbx
   140023e89:	push   rdi
   140023e8a:	sub    rsp,0x20
   140023e8e:	mov    rax,QWORD PTR [rip+0x2c3e3]        # 0x140050278
   140023e95:	mov    rdi,QWORD PTR [rax+0x8]
   140023e99:	mov    rbx,rdi
   140023e9c:	cmp    BYTE PTR [rdi+0x19],0x0
   140023ea0:	jne    0x140023ece
   140023ea2:	mov    rdx,QWORD PTR [rbx+0x10]
   140023ea6:	lea    rcx,[rip+0x2c3cb]        # 0x140050278
   140023ead:	call   0x140023e2c
   140023eb2:	mov    rbx,QWORD PTR [rbx]
   140023eb5:	mov    rcx,rdi
   140023eb8:	call   QWORD PTR [rip+0xe70a]        # 0x1400325c8
   140023ebe:	cmp    BYTE PTR [rbx+0x19],0x0
   140023ec2:	mov    rdi,rbx
   140023ec5:	je     0x140023ea2
   140023ec7:	mov    rax,QWORD PTR [rip+0x2c3aa]        # 0x140050278
   140023ece:	mov    QWORD PTR [rax+0x8],rax
   140023ed2:	mov    rax,QWORD PTR [rip+0x2c39f]        # 0x140050278
   140023ed9:	mov    QWORD PTR [rax],rax
   140023edc:	mov    rax,QWORD PTR [rip+0x2c395]        # 0x140050278
   140023ee3:	mov    QWORD PTR [rax+0x10],rax
   140023ee7:	and    QWORD PTR [rip+0x2c391],0x0        # 0x140050280
   140023eef:	mov    rcx,QWORD PTR [rip+0x2c382]        # 0x140050278
   140023ef6:	mov    rbx,QWORD PTR [rsp+0x30]
   140023efb:	add    rsp,0x20
   140023eff:	pop    rdi
   140023f00:	rex.W jmp QWORD PTR [rip+0xe6c1]        # 0x1400325c8
   140023f07:	int3   
   140023f08:	int3   
   140023f09:	int3   
   140023f0a:	int3   
   140023f0b:	int3   
   140023f0c:	int3   
   140023f0d:	int3   
   140023f0e:	int3   
   140023f0f:	int3   
   140023f10:	sub    rsp,0x48
   140023f14:	call   QWORD PTR [rip+0xe6b6]        # 0x1400325d0
   140023f1a:	test   rax,rax
   140023f1d:	je     0x140023f24
   140023f1f:	add    rsp,0x48
   140023f23:	ret    
   140023f24:	lea    rcx,[rsp+0x20]
   140023f29:	call   0x1400022d4
   140023f2e:	lea    rdx,[rip+0x252db]        # 0x140049210
   140023f35:	lea    rcx,[rsp+0x20]
   140023f3a:	call   0x14002e2da
   140023f3f:	int3   
   140023f40:	int3   
   140023f41:	int3   
   140023f42:	int3   
   140023f43:	int3   
   140023f44:	int3   
   140023f45:	int3   
   140023f46:	int3   
   140023f47:	int3   
   140023f48:	rex.W jmp QWORD PTR [rip+0xe679]        # 0x1400325c8
   140023f4f:	int3   
   140023f50:	int3   
   140023f51:	int3   
   140023f52:	int3   
   140023f53:	int3   
   140023f54:	int3   
   140023f55:	int3   
   140023f56:	int3   
   140023f57:	int3   
   140023f58:	mov    QWORD PTR [rsp+0x8],rbx
   140023f5d:	mov    QWORD PTR [rsp+0x10],rsi
   140023f62:	push   rdi
   140023f63:	sub    rsp,0x30
   140023f67:	mov    esi,ecx
   140023f69:	mov    rdi,rdx
   140023f6c:	mov    ecx,0x8001
   140023f71:	call   QWORD PTR [rip+0xe249]        # 0x1400321c0
   140023f77:	call   0x14002d688
   140023f7c:	test   eax,eax
   140023f7e:	js     0x140024051
   140023f84:	xor    r9d,r9d
   140023f87:	xor    r8d,r8d
   140023f8a:	xor    ecx,ecx
   140023f8c:	lea    edx,[r9+0x1]
   140023f90:	call   QWORD PTR [rip+0xe2fa]        # 0x140032290
   140023f96:	call   QWORD PTR [rip+0xe46c]        # 0x140032408
   140023f9c:	mov    rbx,QWORD PTR [rax]
   140023f9f:	mov    rcx,rbx
   140023fa2:	call   QWORD PTR [rip+0xe700]        # 0x1400326a8
   140023fa8:	call   rbx
   140023faa:	test   eax,eax
   140023fac:	js     0x140024051
   140023fb2:	and    QWORD PTR [rsp+0x50],0x0
   140023fb8:	lea    eax,[rsi-0x1]
   140023fbb:	movsxd r8,eax
   140023fbe:	lea    r9,[rdi+0x8]
   140023fc2:	lea    rcx,[rsp+0x50]
   140023fc7:	call   0x14002c66c
   140023fcc:	mov    rbx,QWORD PTR [rsp+0x50]
   140023fd1:	mov    esi,eax
   140023fd3:	test   eax,eax
   140023fd5:	js     0x140023ff8
   140023fd7:	mov    rdi,QWORD PTR [rip+0x2c22a]        # 0x140050208
   140023fde:	mov    QWORD PTR [rip+0x2c223],rbx        # 0x140050208
   140023fe5:	call   0x140003af0
   140023fea:	xor    esi,esi
   140023fec:	mov    QWORD PTR [rip+0x2c215],rdi        # 0x140050208
   140023ff3:	test   eax,eax
   140023ff5:	cmovs  esi,eax
   140023ff8:	test   rbx,rbx
   140023ffb:	je     0x14002403a
   140023ffd:	mov    eax,DWORD PTR [rbx+0x8]
   140024000:	cmp    eax,0x1
   140024003:	jne    0x14002400e
   140024005:	mov    DWORD PTR [rbx+0x8],0x0
   14002400c:	jmp    0x14002401b
   14002400e:	or     eax,0xffffffff
   140024011:	lock xadd DWORD PTR [rbx+0x8],eax
   140024016:	sub    eax,0x1
   140024019:	jg     0x14002403a
   14002401b:	mov    rbx,QWORD PTR [rsp+0x50]
   140024020:	mov    rax,QWORD PTR [rbx]
   140024023:	mov    rdi,QWORD PTR [rax+0x10]
   140024027:	mov    rcx,rdi
   14002402a:	call   QWORD PTR [rip+0xe678]        # 0x1400326a8
   140024030:	mov    edx,0x1
   140024035:	mov    rcx,rbx
   140024038:	call   rdi
   14002403a:	call   QWORD PTR [rip+0xe3c8]        # 0x140032408
   140024040:	mov    rbx,QWORD PTR [rax+0x8]
   140024044:	mov    rcx,rbx
   140024047:	call   QWORD PTR [rip+0xe65b]        # 0x1400326a8
   14002404d:	call   rbx
   14002404f:	mov    eax,esi
   140024051:	mov    rbx,QWORD PTR [rsp+0x40]
   140024056:	mov    rsi,QWORD PTR [rsp+0x48]
   14002405b:	add    rsp,0x30
   14002405f:	pop    rdi
   140024060:	ret    
   140024061:	int3   
   140024062:	int3   
   140024063:	int3   
   140024064:	int3   
   140024065:	int3   
   140024066:	int3   
   140024067:	int3   
   140024068:	mov    QWORD PTR [rsp+0x18],r8
   14002406d:	mov    QWORD PTR [rsp+0x20],r9
   140024072:	push   rbx
   140024073:	push   rbp
   140024074:	push   rsi
   140024075:	push   rdi
   140024076:	sub    rsp,0x28
   14002407a:	xor    ebp,ebp
   14002407c:	lea    rax,[rdx-0x1]
   140024080:	cmp    rax,0x7ffffffe
   140024086:	mov    rsi,rcx
   140024089:	mov    edi,ebp
   14002408b:	mov    ecx,0x80070057
   140024090:	cmova  edi,ecx
   140024093:	test   edi,edi
   140024095:	js     0x1400240cc
   140024097:	lea    rbx,[rdx-0x1]
   14002409b:	mov    rcx,rsi
   14002409e:	mov    rdx,rbx
   1400240a1:	lea    r9,[rsp+0x68]
   1400240a6:	mov    edi,ebp
   1400240a8:	call   QWORD PTR [rip+0xe542]        # 0x1400325f0
   1400240ae:	test   eax,eax
   1400240b0:	js     0x1400240c1
   1400240b2:	cdqe   
   1400240b4:	cmp    rax,rbx
   1400240b7:	ja     0x1400240c1
   1400240b9:	jne    0x1400240d4
   1400240bb:	mov    WORD PTR [rsi+rbx*2],bp
   1400240bf:	jmp    0x1400240d4
   1400240c1:	mov    WORD PTR [rsi+rbx*2],bp
   1400240c5:	mov    edi,0x8007007a
   1400240ca:	jmp    0x1400240d4
   1400240cc:	test   rdx,rdx
   1400240cf:	je     0x1400240d4
   1400240d1:	mov    WORD PTR [rsi],bp
   1400240d4:	mov    eax,edi
   1400240d6:	add    rsp,0x28
   1400240da:	pop    rdi
   1400240db:	pop    rsi
   1400240dc:	pop    rbp
   1400240dd:	pop    rbx
   1400240de:	ret    
   1400240df:	int3   
   1400240e0:	int3   
   1400240e1:	int3   
   1400240e2:	int3   
   1400240e3:	int3   
   1400240e4:	int3   
   1400240e5:	int3   
   1400240e6:	int3   
   1400240e7:	int3   
   1400240e8:	mov    QWORD PTR [rsp+0x18],r8
   1400240ed:	push   rbx
   1400240ee:	push   rbp
   1400240ef:	push   rsi
   1400240f0:	push   rdi
   1400240f1:	push   r12
   1400240f3:	push   r13
   1400240f5:	push   r14
   1400240f7:	push   r15
   1400240f9:	sub    rsp,0x28
   1400240fd:	mov    r12d,DWORD PTR [rsp+0x90]
   140024105:	mov    rsi,rcx
   140024108:	mov    rbx,rdx
   14002410b:	mov    ecx,r12d
   14002410e:	xor    edx,edx
   140024110:	mov    r13,r9
   140024113:	mov    edi,edx
   140024115:	mov    r9d,0x80070057
   14002411b:	and    ecx,0x100
   140024121:	je     0x14002413b
   140024123:	test   rsi,rsi
   140024126:	jne    0x14002412d
   140024128:	test   rbx,rbx
   14002412b:	jne    0x140024136
   14002412d:	cmp    rbx,0x7fffffff
   140024134:	jbe    0x140024149
   140024136:	mov    edi,r9d
   140024139:	jmp    0x140024149
   14002413b:	lea    rax,[rbx-0x1]
   14002413f:	cmp    rax,0x7ffffffe
   140024145:	cmova  edi,r9d
   140024149:	test   edi,edi
   14002414b:	js     0x1400242e0
   140024151:	mov    r15,rsi
   140024154:	mov    r14,rbx
   140024157:	test   ecx,ecx
   140024159:	je     0x14002417b
   14002415b:	mov    rax,QWORD PTR [rsp+0x98]
   140024163:	lea    r8,[rip+0x113ce]        # 0x140035538
   14002416a:	test   rax,rax
   14002416d:	cmovne r8,rax
   140024171:	mov    QWORD PTR [rsp+0x98],r8
   140024179:	jmp    0x140024183
   14002417b:	mov    r8,QWORD PTR [rsp+0x98]
   140024183:	mov    edi,edx
   140024185:	test   r12d,0xffffe000
   14002418c:	je     0x1400241f8
   14002418e:	mov    edi,r9d
   140024191:	test   rbx,rbx
   140024194:	je     0x140024199
   140024196:	mov    WORD PTR [rsi],dx
   140024199:	test   r12d,0x1c00
   1400241a0:	je     0x1400242b1
   1400241a6:	test   rbx,rbx
   1400241a9:	je     0x1400242b1
   1400241af:	lea    r8,[rbx+rbx*1]
   1400241b3:	mov    rbp,r8
   1400241b6:	shr    rbp,1
   1400241b9:	je     0x1400241cb
   1400241bb:	bt     r12d,0xc
   1400241c0:	jae    0x1400241cb
   1400241c2:	mov    r15,rsi
   1400241c5:	mov    WORD PTR [rsi],dx
   1400241c8:	mov    r14,rbp
   1400241cb:	bt     r12d,0xa
   1400241d0:	jae    0x14002429c
   1400241d6:	movzx  edx,r12b
   1400241da:	mov    rcx,rsi
   1400241dd:	call   0x14002e2ce
   1400241e2:	xor    edx,edx
   1400241e4:	test   r12b,r12b
   1400241e7:	jne    0x140024285
   1400241ed:	mov    r15,rsi
   1400241f0:	mov    r14,rbp
   1400241f3:	jmp    0x14002429c
   1400241f8:	test   rbx,rbx
   1400241fb:	jne    0x140024217
   1400241fd:	cmp    WORD PTR [r8],dx
   140024201:	je     0x1400242c5
   140024207:	mov    rax,rsi
   14002420a:	neg    rax
   14002420d:	sbb    edi,edi
   14002420f:	and    edi,0x23
   140024212:	add    edi,r9d
   140024215:	jmp    0x140024199
   140024217:	lea    rbp,[rbx-0x1]
   14002421b:	mov    rcx,rsi
   14002421e:	mov    rdx,rbp
   140024221:	lea    r9,[rsp+0xa0]
   140024229:	call   QWORD PTR [rip+0xe3c1]        # 0x1400325f0
   14002422f:	xor    edx,edx
   140024231:	test   eax,eax
   140024233:	js     0x140024243
   140024235:	cdqe   
   140024237:	cmp    rax,rbp
   14002423a:	ja     0x140024243
   14002423c:	je     0x140024248
   14002423e:	mov    rbp,rax
   140024241:	jmp    0x14002424c
   140024243:	mov    edi,0x8007007a
   140024248:	mov    WORD PTR [rsi+rbp*2],dx
   14002424c:	sub    r14,rbp
   14002424f:	lea    r15,[rsi+rbp*2]
   140024253:	test   edi,edi
   140024255:	js     0x140024199
   14002425b:	bt     r12d,0x9
   140024260:	jae    0x1400242c5
   140024262:	cmp    r14,0x1
   140024266:	jbe    0x1400242c5
   140024268:	lea    r8,[r14+r14*1]
   14002426c:	cmp    r8,0x2
   140024270:	jbe    0x1400242c5
   140024272:	add    r8,0xfffffffffffffffe
   140024276:	movzx  edx,r12b
   14002427a:	lea    rcx,[r15+0x2]
   14002427e:	call   0x14002e2ce
   140024283:	jmp    0x1400242c5
   140024285:	test   rbp,rbp
   140024288:	je     0x1400242b1
   14002428a:	lea    r15,[rsi-0x2]
   14002428e:	mov    r14d,0x1
   140024294:	lea    r15,[r15+rbp*2]
   140024298:	mov    WORD PTR [r15],dx
   14002429c:	test   rbp,rbp
   14002429f:	je     0x1400242b1
   1400242a1:	bt     r12d,0xb
   1400242a6:	jae    0x1400242b1
   1400242a8:	mov    r15,rsi
   1400242ab:	mov    WORD PTR [rsi],dx
   1400242ae:	mov    r14,rbp
   1400242b1:	mov    ecx,0x80000000
   1400242b6:	lea    eax,[rdi+rcx*1]
   1400242b9:	test   ecx,eax
   1400242bb:	jne    0x1400242c5
   1400242bd:	cmp    edi,0x8007007a
   1400242c3:	jne    0x1400242e8
   1400242c5:	mov    rax,QWORD PTR [rsp+0x80]
   1400242cd:	test   rax,rax
   1400242d0:	je     0x1400242d5
   1400242d2:	mov    QWORD PTR [rax],r15
   1400242d5:	test   r13,r13
   1400242d8:	je     0x1400242e8
   1400242da:	mov    QWORD PTR [r13+0x0],r14
   1400242de:	jmp    0x1400242e8
   1400242e0:	test   rbx,rbx
   1400242e3:	je     0x1400242e8
   1400242e5:	mov    WORD PTR [rsi],dx
   1400242e8:	mov    eax,edi
   1400242ea:	add    rsp,0x28
   1400242ee:	pop    r15
   1400242f0:	pop    r14
   1400242f2:	pop    r13
   1400242f4:	pop    r12
   1400242f6:	pop    rdi
   1400242f7:	pop    rsi
   1400242f8:	pop    rbp
   1400242f9:	pop    rbx
   1400242fa:	ret    
   1400242fb:	int3   
   1400242fc:	int3   
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	int3   
   140024301:	int3   
   140024302:	int3   
   140024303:	int3   
   140024304:	mov    rax,rsp
   140024307:	mov    QWORD PTR [rax+0x8],rbx
   14002430b:	mov    QWORD PTR [rax+0x18],rsi
   14002430f:	mov    QWORD PTR [rax+0x20],rdi
   140024313:	mov    QWORD PTR [rax+0x10],rdx
   140024317:	push   rbp
   140024318:	push   r12
   14002431a:	push   r13
   14002431c:	push   r14
   14002431e:	push   r15
   140024320:	mov    rbp,rsp
   140024323:	sub    rsp,0x60
   140024327:	mov    r14d,0x8
   14002432d:	lea    rsi,[rdx+0x5c]
   140024331:	xor    r12d,r12d
   140024334:	mov    r11,rdx
   140024337:	mov    rbx,rcx
   14002433a:	lea    r13d,[r14-0x7]
   14002433e:	cmp    WORD PTR [rcx],r12w
   140024342:	jne    0x140024464
   140024348:	cmp    WORD PTR [rcx+0x2],r12w
   14002434d:	jne    0x140024464
   140024353:	cmp    WORD PTR [rcx+0x4],r12w
   140024358:	jne    0x140024464
   14002435e:	cmp    WORD PTR [rcx+0x6],r12w
   140024363:	jne    0x140024464
   140024369:	cmp    WORD PTR [rcx+0xc],r12w
   14002436e:	je     0x140024464
   140024374:	cmp    WORD PTR [rcx+0x8],r12w
   140024379:	jne    0x140024405
   14002437f:	movzx  eax,WORD PTR [rcx+0xa]
   140024383:	mov    ecx,0xfffe
   140024388:	add    ax,r13w
   14002438c:	test   cx,ax
   14002438f:	jne    0x140024405
   140024391:	movzx  ecx,BYTE PTR [rbx+0xf]
   140024395:	lea    rdx,[rip+0x142dc]        # 0x140038678
   14002439c:	movzx  r8d,BYTE PTR [rbx+0xe]
   1400243a1:	lea    rax,[rip+0x14478]        # 0x140038820
   1400243a8:	movzx  r9d,BYTE PTR [rbx+0xd]
   1400243ad:	cmp    WORD PTR [rbx+0xa],r12w
   1400243b2:	movzx  r10d,BYTE PTR [rbx+0xc]
   1400243b7:	mov    DWORD PTR [rsp+0x50],ecx
   1400243bb:	cmove  rax,rdx
   1400243bf:	mov    DWORD PTR [rsp+0x48],r8d
   1400243c4:	sub    rsi,r11
   1400243c7:	mov    DWORD PTR [rsp+0x40],r9d
   1400243cc:	lea    r8,[rbp+0x38]
   1400243d0:	mov    DWORD PTR [rsp+0x38],r10d
   1400243d5:	xor    r9d,r9d
   1400243d8:	mov    QWORD PTR [rsp+0x30],rax
   1400243dd:	mov    rcx,r11
   1400243e0:	lea    rax,[rip+0x14441]        # 0x140038828
   1400243e7:	sar    rsi,1
   1400243ea:	mov    QWORD PTR [rsp+0x28],rax
   1400243ef:	mov    rdx,rsi
   1400243f2:	mov    QWORD PTR [rsp+0x20],r12
   1400243f7:	call   0x1400240e8
   1400243fc:	mov    rax,QWORD PTR [rbp+0x38]
   140024400:	jmp    0x140024602
   140024405:	mov    eax,0xffff
   14002440a:	cmp    WORD PTR [rbx+0x8],ax
   14002440e:	jne    0x140024464
   140024410:	cmp    WORD PTR [rbx+0xa],r12w
   140024415:	jne    0x140024464
   140024417:	movzx  eax,BYTE PTR [rbx+0xf]
   14002441b:	sub    rsi,r11
   14002441e:	movzx  ecx,BYTE PTR [rbx+0xe]
   140024422:	xor    r9d,r9d
   140024425:	movzx  edx,BYTE PTR [rbx+0xd]
   140024429:	movzx  r8d,BYTE PTR [rbx+0xc]
   14002442e:	mov    DWORD PTR [rsp+0x48],eax
   140024432:	lea    rax,[rip+0x14417]        # 0x140038850
   140024439:	mov    DWORD PTR [rsp+0x40],ecx
   14002443d:	mov    rcx,r11
   140024440:	mov    DWORD PTR [rsp+0x38],edx
   140024444:	mov    DWORD PTR [rsp+0x30],r8d
   140024449:	lea    r8,[rbp+0x38]
   14002444d:	sar    rsi,1
   140024450:	mov    QWORD PTR [rsp+0x28],rax
   140024455:	mov    rdx,rsi
   140024458:	mov    QWORD PTR [rsp+0x20],r12
   14002445d:	call   0x1400240e8
   140024462:	jmp    0x1400243fc
   140024464:	mov    eax,0xfffd
   140024469:	mov    r8d,r12d
   14002446c:	mov    r9d,r12d
   14002446f:	mov    edi,r12d
   140024472:	test   WORD PTR [rbx+0x8],ax
   140024476:	jne    0x14002448a
   140024478:	mov    eax,0xfe5e
   14002447d:	mov    ecx,0x6
   140024482:	cmp    WORD PTR [rbx+0xa],ax
   140024486:	cmove  r14d,ecx
   14002448a:	movsxd r15,r14d
   14002448d:	mov    r10,r12
   140024490:	test   r14d,r14d
   140024493:	jle    0x1400244c2
   140024495:	mov    edx,r13d
   140024498:	cmp    WORD PTR [rbx+r10*2],r12w
   14002449d:	jne    0x1400244b5
   14002449f:	mov    ecx,edx
   1400244a1:	mov    eax,r8d
   1400244a4:	sub    ecx,edi
   1400244a6:	sub    eax,r9d
   1400244a9:	cmp    ecx,eax
   1400244ab:	jle    0x1400244b7
   1400244ad:	mov    r9d,edi
   1400244b0:	mov    r8d,edx
   1400244b3:	jmp    0x1400244b7
   1400244b5:	mov    edi,edx
   1400244b7:	add    edx,r13d
   1400244ba:	add    r10,r13
   1400244bd:	cmp    r10,r15
   1400244c0:	jl     0x140024498
   1400244c2:	mov    eax,r8d
   1400244c5:	sub    eax,r9d
   1400244c8:	cmp    eax,r13d
   1400244cb:	jg     0x1400244d3
   1400244cd:	mov    r8d,r12d
   1400244d0:	mov    r9d,r12d
   1400244d3:	mov    rdi,r12
   1400244d6:	test   r14d,r14d
   1400244d9:	jle    0x1400245aa
   1400244df:	movsxd r13,r8d
   1400244e2:	movsxd r12,r9d
   1400244e5:	cmp    r12,rdi
   1400244e8:	jg     0x14002451f
   1400244ea:	cmp    rdi,r13
   1400244ed:	jge    0x14002451f
   1400244ef:	lea    rax,[rip+0x14386]        # 0x14003887c
   1400244f6:	mov    rdx,rsi
   1400244f9:	sub    rdx,r11
   1400244fc:	mov    QWORD PTR [rsp+0x28],rax
   140024501:	and    QWORD PTR [rsp+0x20],0x0
   140024507:	lea    r8,[rbp+0x38]
   14002450b:	sar    rdx,1
   14002450e:	xor    r9d,r9d
   140024511:	mov    rcx,r11
   140024514:	call   0x1400240e8
   140024519:	lea    rdi,[r13-0x1]
   14002451d:	jmp    0x140024597
   14002451f:	test   rdi,rdi
   140024522:	je     0x140024557
   140024524:	cmp    rdi,r13
   140024527:	je     0x140024557
   140024529:	lea    rax,[rip+0x14354]        # 0x140038884
   140024530:	mov    rdx,rsi
   140024533:	sub    rdx,r11
   140024536:	mov    QWORD PTR [rsp+0x28],rax
   14002453b:	and    QWORD PTR [rsp+0x20],0x0
   140024541:	lea    r8,[rbp+0x38]
   140024545:	sar    rdx,1
   140024548:	xor    r9d,r9d
   14002454b:	mov    rcx,r11
   14002454e:	call   0x1400240e8
   140024553:	mov    r11,QWORD PTR [rbp+0x38]
   140024557:	movzx  eax,WORD PTR [rbx+rdi*2]
   14002455b:	lea    r8,[rbp+0x38]
   14002455f:	movzx  ecx,BYTE PTR [rbx+rdi*2+0x1]
   140024564:	mov    rdx,rsi
   140024567:	shl    ax,0x8
   14002456b:	sub    rdx,r11
   14002456e:	movzx  eax,ax
   140024571:	xor    r9d,r9d
   140024574:	or     ecx,eax
   140024576:	sar    rdx,1
   140024579:	mov    DWORD PTR [rsp+0x30],ecx
   14002457d:	lea    rax,[rip+0x14304]        # 0x140038888
   140024584:	mov    QWORD PTR [rsp+0x28],rax
   140024589:	mov    rcx,r11
   14002458c:	and    QWORD PTR [rsp+0x20],0x0
   140024592:	call   0x1400240e8
   140024597:	mov    r11,QWORD PTR [rbp+0x38]
   14002459b:	inc    rdi
   14002459e:	cmp    rdi,r15
   1400245a1:	jl     0x1400244e5
   1400245a7:	xor    r12d,r12d
   1400245aa:	cmp    r14d,0x8
   1400245ae:	jge    0x1400245ff
   1400245b0:	movzx  eax,BYTE PTR [rbx+0xf]
   1400245b4:	sub    rsi,r11
   1400245b7:	movzx  ecx,BYTE PTR [rbx+0xe]
   1400245bb:	xor    r9d,r9d
   1400245be:	movzx  edx,BYTE PTR [rbx+0xd]
   1400245c2:	movzx  r8d,BYTE PTR [rbx+0xc]
   1400245c7:	mov    DWORD PTR [rsp+0x48],eax
   1400245cb:	lea    rax,[rip+0x142be]        # 0x140038890
   1400245d2:	mov    DWORD PTR [rsp+0x40],ecx
   1400245d6:	mov    rcx,r11
   1400245d9:	mov    DWORD PTR [rsp+0x38],edx
   1400245dd:	mov    DWORD PTR [rsp+0x30],r8d
   1400245e2:	lea    r8,[rbp+0x38]
   1400245e6:	sar    rsi,1
   1400245e9:	mov    QWORD PTR [rsp+0x28],rax
   1400245ee:	mov    rdx,rsi
   1400245f1:	mov    QWORD PTR [rsp+0x20],r12
   1400245f6:	call   0x1400240e8
   1400245fb:	mov    r11,QWORD PTR [rbp+0x38]
   1400245ff:	mov    rax,r11
   140024602:	lea    r11,[rsp+0x60]
   140024607:	mov    rbx,QWORD PTR [r11+0x30]
   14002460b:	mov    rsi,QWORD PTR [r11+0x40]
   14002460f:	mov    rdi,QWORD PTR [r11+0x48]
   140024613:	mov    rsp,r11
   140024616:	pop    r15
   140024618:	pop    r14
   14002461a:	pop    r13
   14002461c:	pop    r12
   14002461e:	pop    rbp
   14002461f:	ret    
   140024620:	int3   
   140024621:	int3   
   140024622:	int3   
   140024623:	int3   
   140024624:	int3   
   140024625:	int3   
   140024626:	int3   
   140024627:	int3   
   140024628:	xor    r8d,r8d
   14002462b:	lea    r9,[rip+0x1428e]        # 0x1400388c0
   140024632:	movzx  eax,BYTE PTR [rcx]
   140024635:	movzx  eax,BYTE PTR [r9+rax*4]
   14002463a:	mov    WORD PTR [rdx],ax
   14002463d:	movzx  eax,BYTE PTR [rcx]
   140024640:	movzx  eax,BYTE PTR [r9+rax*4+0x1]
   140024646:	mov    WORD PTR [rdx+0x2],ax
   14002464a:	movzx  eax,BYTE PTR [rcx]
   14002464d:	movzx  eax,BYTE PTR [r9+rax*4+0x2]
   140024653:	mov    WORD PTR [rdx+0x4],ax
   140024657:	movzx  eax,BYTE PTR [rcx]
   14002465a:	movzx  eax,BYTE PTR [r9+rax*4+0x3]
   140024660:	lea    rdx,[rdx+rax*2]
   140024664:	lea    eax,[r8-0x3]
   140024668:	neg    eax
   14002466a:	sbb    ax,ax
   14002466d:	inc    rcx
   140024670:	and    ax,0x2e
   140024674:	inc    r8d
   140024677:	mov    WORD PTR [rdx],ax
   14002467a:	lea    rdx,[rdx+0x2]
   14002467e:	cmp    r8d,0x4
   140024682:	jl     0x140024632
   140024684:	lea    rax,[rdx-0x2]
   140024688:	ret    
   140024689:	int3   
   14002468a:	int3   
   14002468b:	int3   
   14002468c:	int3   
   14002468d:	int3   
   14002468e:	int3   
   14002468f:	int3   
   140024690:	mov    r11,rsp
   140024693:	sub    rsp,0x58
   140024697:	and    QWORD PTR [r11-0x18],0x0
   14002469c:	lea    rax,[r11+0x28]
   1400246a0:	mov    r9d,0x4
   1400246a6:	mov    QWORD PTR [r11-0x20],r9
   1400246aa:	mov    QWORD PTR [r11-0x28],rax
   1400246ae:	lea    rax,[rip+0x14707]        # 0x140038dbc
   1400246b5:	mov    QWORD PTR [r11-0x30],r9
   1400246b9:	movzx  r9d,dx
   1400246bd:	mov    edx,0x2b
   1400246c2:	mov    QWORD PTR [r11-0x38],rax
   1400246c6:	call   QWORD PTR [rip+0xd954]        # 0x140032020
   1400246cc:	add    rsp,0x58
   1400246d0:	ret    
   1400246d1:	int3   
   1400246d2:	int3   
   1400246d3:	int3   
   1400246d4:	int3   
   1400246d5:	int3   
   1400246d6:	int3   
   1400246d7:	int3   
   1400246d8:	rex push rbx
   1400246da:	sub    rsp,0x50
   1400246de:	mov    rbx,rcx
   1400246e1:	mov    rcx,QWORD PTR [rcx]
   1400246e4:	test   rcx,rcx
   1400246e7:	je     0x140024753
   1400246e9:	call   QWORD PTR [rip+0xdc01]        # 0x1400322f0
   1400246ef:	test   eax,eax
   1400246f1:	jne    0x14002474f
   1400246f3:	test   BYTE PTR [rip+0x29f92],0x1        # 0x14004e68c
   1400246fa:	je     0x14002474f
   1400246fc:	call   QWORD PTR [rip+0xdb86]        # 0x140032288
   140024702:	and    QWORD PTR [rsp+0x40],0x0
   140024708:	lea    r8,[rip+0x146b1]        # 0x140038dc0
   14002470f:	mov    edx,0xa
   140024714:	mov    DWORD PTR [rsp+0x60],eax
   140024718:	lea    rax,[rsp+0x60]
   14002471d:	movzx  r9d,dx
   140024721:	lea    ecx,[rdx-0x6]
   140024724:	mov    QWORD PTR [rsp+0x38],rcx
   140024729:	lea    edx,[rcx+0x27]
   14002472c:	mov    QWORD PTR [rsp+0x30],rax
   140024731:	lea    rax,[rip+0x14684]        # 0x140038dbc
   140024738:	mov    QWORD PTR [rsp+0x28],rcx
   14002473d:	mov    rcx,QWORD PTR [rip+0x29f3c]        # 0x14004e680
   140024744:	mov    QWORD PTR [rsp+0x20],rax
   140024749:	call   QWORD PTR [rip+0xd8d1]        # 0x140032020
   14002474f:	and    QWORD PTR [rbx],0x0
   140024753:	mov    rcx,QWORD PTR [rbx+0x8]
   140024757:	test   rcx,rcx
   14002475a:	je     0x140024767
   14002475c:	call   QWORD PTR [rip+0xd9f6]        # 0x140032158
   140024762:	and    QWORD PTR [rbx+0x8],0x0
   140024767:	add    rsp,0x50
   14002476b:	pop    rbx
   14002476c:	ret    
   14002476d:	int3   
   14002476e:	int3   
   14002476f:	int3   
   140024770:	int3   
   140024771:	int3   
   140024772:	int3   
   140024773:	int3   
   140024774:	mov    rax,rsp
   140024777:	mov    QWORD PTR [rax+0x8],rbx
   14002477b:	mov    QWORD PTR [rax+0x18],rsi
   14002477f:	mov    QWORD PTR [rax+0x20],rdi
   140024783:	push   r14
   140024785:	sub    rsp,0x50
   140024789:	and    QWORD PTR [rax-0x30],0x0
   14002478e:	mov    esi,0x48
   140024793:	mov    rdi,rcx
   140024796:	mov    DWORD PTR [rax-0x38],esi
   140024799:	xor    r9d,r9d
   14002479c:	xor    edx,edx
   14002479e:	or     rcx,0xffffffffffffffff
   1400247a2:	lea    r14d,[rsi-0x44]
   1400247a6:	mov    r8d,r14d
   1400247a9:	call   QWORD PTR [rip+0xdb39]        # 0x1400322e8
   1400247af:	mov    rbx,rax
   1400247b2:	test   rax,rax
   1400247b5:	jne    0x1400247d1
   1400247b7:	call   QWORD PTR [rip+0xdacb]        # 0x140032288
   1400247bd:	mov    esi,eax
   1400247bf:	test   BYTE PTR [rip+0x29ec6],0x1        # 0x14004e68c
   1400247c6:	je     0x14002484e
   1400247cc:	lea    ecx,[rbx+0xb]
   1400247cf:	jmp    0x140024807
   1400247d1:	xor    r9d,r9d
   1400247d4:	mov    QWORD PTR [rsp+0x20],rsi
   1400247d9:	xor    r8d,r8d
   1400247dc:	mov    rcx,rax
   1400247df:	lea    edx,[r9+0x6]
   1400247e3:	call   QWORD PTR [rip+0xdaf7]        # 0x1400322e0
   1400247e9:	mov    QWORD PTR [rdi],rax
   1400247ec:	test   rax,rax
   1400247ef:	jne    0x14002485e
   1400247f1:	call   QWORD PTR [rip+0xda91]        # 0x140032288
   1400247f7:	mov    esi,eax
   1400247f9:	test   BYTE PTR [rip+0x29e8c],0x1        # 0x14004e68c
   140024800:	je     0x14002484e
   140024802:	mov    ecx,0xc
   140024807:	and    QWORD PTR [rsp+0x40],0x0
   14002480d:	lea    r8,[rip+0x145ac]        # 0x140038dc0
   140024814:	mov    DWORD PTR [rsp+0x68],eax
   140024818:	mov    edx,0x2b
   14002481d:	mov    QWORD PTR [rsp+0x38],r14
   140024822:	lea    rax,[rsp+0x68]
   140024827:	mov    QWORD PTR [rsp+0x30],rax
   14002482c:	lea    rax,[rip+0x14589]        # 0x140038dbc
   140024833:	movzx  r9d,cx
   140024837:	mov    rcx,QWORD PTR [rip+0x29e42]        # 0x14004e680
   14002483e:	mov    QWORD PTR [rsp+0x28],r14
   140024843:	mov    QWORD PTR [rsp+0x20],rax
   140024848:	call   QWORD PTR [rip+0xd7d2]        # 0x140032020
   14002484e:	movzx  edi,si
   140024851:	or     edi,0x80070000
   140024857:	test   esi,esi
   140024859:	cmovle edi,esi
   14002485c:	jmp    0x14002487c
   14002485e:	mov    rcx,QWORD PTR [rdi+0x8]
   140024862:	mov    rsi,rbx
   140024865:	xor    ebx,ebx
   140024867:	test   rcx,rcx
   14002486a:	je     0x140024876
   14002486c:	call   QWORD PTR [rip+0xd8e6]        # 0x140032158
   140024872:	and    QWORD PTR [rdi+0x8],rbx
   140024876:	mov    QWORD PTR [rdi+0x8],rsi
   14002487a:	xor    edi,edi
   14002487c:	test   rbx,rbx
   14002487f:	je     0x14002488a
   140024881:	mov    rcx,rbx
   140024884:	call   QWORD PTR [rip+0xd8ce]        # 0x140032158
   14002488a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002488f:	mov    eax,edi
   140024891:	mov    rdi,QWORD PTR [rsp+0x78]
   140024896:	mov    rsi,QWORD PTR [rsp+0x70]
   14002489b:	add    rsp,0x50
   14002489f:	pop    r14
   1400248a1:	ret    
   1400248a2:	int3   
   1400248a3:	int3   
   1400248a4:	int3   
   1400248a5:	int3   
   1400248a6:	int3   
   1400248a7:	int3   
   1400248a8:	sub    rsp,0x48
   1400248ac:	mov    rax,QWORD PTR [rcx]
   1400248af:	lock xadd QWORD PTR [rax],rdx
   1400248b4:	jmp    0x1400248fb
   1400248b6:	test   BYTE PTR [rip+0x29dcf],0x1        # 0x14004e68c
   1400248bd:	je     0x1400248fb
   1400248bf:	mov    ecx,0xd
   1400248c4:	and    QWORD PTR [rsp+0x30],0x0
   1400248ca:	mov    QWORD PTR [rsp+0x28],0x4
   1400248d3:	lea    rax,[rip+0x144e2]        # 0x140038dbc
   1400248da:	mov    QWORD PTR [rsp+0x20],rax
   1400248df:	movzx  r9d,cx
   1400248e3:	lea    r8,[rip+0x14506]        # 0x140038df0
   1400248ea:	lea    edx,[rcx+0x1e]
   1400248ed:	mov    rcx,QWORD PTR [rip+0x29d8c]        # 0x14004e680
   1400248f4:	call   QWORD PTR [rip+0xd726]        # 0x140032020
   1400248fa:	nop
   1400248fb:	add    rsp,0x48
   1400248ff:	ret    
   140024900:	int3   
   140024901:	int3   
   140024902:	int3   
   140024903:	int3   
   140024904:	int3   
   140024905:	int3   
   140024906:	int3   
   140024907:	int3   
   140024908:	sub    rsp,0x48
   14002490c:	mov    rax,QWORD PTR [rcx]
   14002490f:	lock xadd DWORD PTR [rax+0x8],edx
   140024914:	jmp    0x14002495b
   140024916:	test   BYTE PTR [rip+0x29d6f],0x1        # 0x14004e68c
   14002491d:	je     0x14002495b
   14002491f:	mov    ecx,0x11
   140024924:	and    QWORD PTR [rsp+0x30],0x0
   14002492a:	mov    QWORD PTR [rsp+0x28],0x4
   140024933:	lea    rax,[rip+0x14482]        # 0x140038dbc
   14002493a:	mov    QWORD PTR [rsp+0x20],rax
   14002493f:	movzx  r9d,cx
   140024943:	lea    r8,[rip+0x144a6]        # 0x140038df0
   14002494a:	lea    edx,[rcx+0x1a]
   14002494d:	mov    rcx,QWORD PTR [rip+0x29d2c]        # 0x14004e680
   140024954:	call   QWORD PTR [rip+0xd6c6]        # 0x140032020
   14002495a:	nop
   14002495b:	add    rsp,0x48
   14002495f:	ret    
   140024960:	int3   
   140024961:	int3   
   140024962:	int3   
   140024963:	int3   
   140024964:	int3   
   140024965:	int3   
   140024966:	int3   
   140024967:	int3   
   140024968:	sub    rsp,0x48
   14002496c:	mov    rax,QWORD PTR [rcx]
   14002496f:	lock xadd QWORD PTR [rax+0x10],rdx
   140024975:	jmp    0x1400249bc
   140024977:	test   BYTE PTR [rip+0x29d0e],0x1        # 0x14004e68c
   14002497e:	je     0x1400249bc
   140024980:	mov    ecx,0x15
   140024985:	and    QWORD PTR [rsp+0x30],0x0
   14002498b:	mov    QWORD PTR [rsp+0x28],0x4
   140024994:	lea    rax,[rip+0x14421]        # 0x140038dbc
   14002499b:	mov    QWORD PTR [rsp+0x20],rax
   1400249a0:	movzx  r9d,cx
   1400249a4:	lea    r8,[rip+0x14445]        # 0x140038df0
   1400249ab:	lea    edx,[rcx+0x16]
   1400249ae:	mov    rcx,QWORD PTR [rip+0x29ccb]        # 0x14004e680
   1400249b5:	call   QWORD PTR [rip+0xd665]        # 0x140032020
   1400249bb:	nop
   1400249bc:	add    rsp,0x48
   1400249c0:	ret    
   1400249c1:	int3   
   1400249c2:	int3   
   1400249c3:	int3   
   1400249c4:	int3   
   1400249c5:	int3   
   1400249c6:	int3   
   1400249c7:	int3   
   1400249c8:	sub    rsp,0x48
   1400249cc:	mov    rax,QWORD PTR [rcx]
   1400249cf:	lock xadd DWORD PTR [rax+0x18],edx
   1400249d4:	jmp    0x140024a1b
   1400249d6:	test   BYTE PTR [rip+0x29caf],0x1        # 0x14004e68c
   1400249dd:	je     0x140024a1b
   1400249df:	mov    ecx,0x19
   1400249e4:	and    QWORD PTR [rsp+0x30],0x0
   1400249ea:	mov    QWORD PTR [rsp+0x28],0x4
   1400249f3:	lea    rax,[rip+0x143c2]        # 0x140038dbc
   1400249fa:	mov    QWORD PTR [rsp+0x20],rax
   1400249ff:	movzx  r9d,cx
   140024a03:	lea    r8,[rip+0x143e6]        # 0x140038df0
   140024a0a:	lea    edx,[rcx+0x12]
   140024a0d:	mov    rcx,QWORD PTR [rip+0x29c6c]        # 0x14004e680
   140024a14:	call   QWORD PTR [rip+0xd606]        # 0x140032020
   140024a1a:	nop
   140024a1b:	add    rsp,0x48
   140024a1f:	ret    
   140024a20:	int3   
   140024a21:	int3   
   140024a22:	int3   
   140024a23:	int3   
   140024a24:	int3   
   140024a25:	int3   
   140024a26:	int3   
   140024a27:	int3   
   140024a28:	sub    rsp,0x48
   140024a2c:	mov    rax,QWORD PTR [rcx]
   140024a2f:	lock xadd QWORD PTR [rax+0x20],rdx
   140024a35:	jmp    0x140024a7c
   140024a37:	test   BYTE PTR [rip+0x29c4e],0x1        # 0x14004e68c
   140024a3e:	je     0x140024a7c
   140024a40:	mov    ecx,0x1d
   140024a45:	and    QWORD PTR [rsp+0x30],0x0
   140024a4b:	mov    QWORD PTR [rsp+0x28],0x4
   140024a54:	lea    rax,[rip+0x14361]        # 0x140038dbc
   140024a5b:	mov    QWORD PTR [rsp+0x20],rax
   140024a60:	movzx  r9d,cx
   140024a64:	lea    r8,[rip+0x14385]        # 0x140038df0
   140024a6b:	lea    edx,[rcx+0xe]
   140024a6e:	mov    rcx,QWORD PTR [rip+0x29c0b]        # 0x14004e680
   140024a75:	call   QWORD PTR [rip+0xd5a5]        # 0x140032020
   140024a7b:	nop
   140024a7c:	add    rsp,0x48
   140024a80:	ret    
   140024a81:	int3   
   140024a82:	int3   
   140024a83:	int3   
   140024a84:	int3   
   140024a85:	int3   
   140024a86:	int3   
   140024a87:	int3   
   140024a88:	sub    rsp,0x48
   140024a8c:	mov    rax,QWORD PTR [rcx]
   140024a8f:	lock xadd DWORD PTR [rax+0x28],edx
   140024a94:	jmp    0x140024adb
   140024a96:	test   BYTE PTR [rip+0x29bef],0x1        # 0x14004e68c
   140024a9d:	je     0x140024adb
   140024a9f:	mov    ecx,0x21
   140024aa4:	and    QWORD PTR [rsp+0x30],0x0
   140024aaa:	mov    QWORD PTR [rsp+0x28],0x4
   140024ab3:	lea    rax,[rip+0x14302]        # 0x140038dbc
   140024aba:	mov    QWORD PTR [rsp+0x20],rax
   140024abf:	movzx  r9d,cx
   140024ac3:	lea    r8,[rip+0x14326]        # 0x140038df0
   140024aca:	lea    edx,[rcx+0xa]
   140024acd:	mov    rcx,QWORD PTR [rip+0x29bac]        # 0x14004e680
   140024ad4:	call   QWORD PTR [rip+0xd546]        # 0x140032020
   140024ada:	nop
   140024adb:	add    rsp,0x48
   140024adf:	ret    
   140024ae0:	int3   
   140024ae1:	int3   
   140024ae2:	int3   
   140024ae3:	int3   
   140024ae4:	int3   
   140024ae5:	int3   
   140024ae6:	int3   
   140024ae7:	int3   
   140024ae8:	sub    rsp,0x48
   140024aec:	mov    rax,QWORD PTR [rcx]
   140024aef:	lock inc DWORD PTR [rax+0x2c]
   140024af3:	jmp    0x140024b3a
   140024af5:	test   BYTE PTR [rip+0x29b90],0x1        # 0x14004e68c
   140024afc:	je     0x140024b3a
   140024afe:	mov    ecx,0x26
   140024b03:	and    QWORD PTR [rsp+0x30],0x0
   140024b09:	mov    QWORD PTR [rsp+0x28],0x4
   140024b12:	lea    rax,[rip+0x142a3]        # 0x140038dbc
   140024b19:	mov    QWORD PTR [rsp+0x20],rax
   140024b1e:	movzx  r9d,cx
   140024b22:	lea    r8,[rip+0x142c7]        # 0x140038df0
   140024b29:	lea    edx,[rcx+0x5]
   140024b2c:	mov    rcx,QWORD PTR [rip+0x29b4d]        # 0x14004e680
   140024b33:	call   QWORD PTR [rip+0xd4e7]        # 0x140032020
   140024b39:	nop
   140024b3a:	add    rsp,0x48
   140024b3e:	ret    
   140024b3f:	int3   
   140024b40:	int3   
   140024b41:	int3   
   140024b42:	int3   
   140024b43:	int3   
   140024b44:	int3   
   140024b45:	int3   
   140024b46:	int3   
   140024b47:	int3   
   140024b48:	sub    rsp,0x48
   140024b4c:	mov    rax,QWORD PTR [rcx]
   140024b4f:	lock dec DWORD PTR [rax+0x2c]
   140024b53:	jmp    0x140024b9a
   140024b55:	test   BYTE PTR [rip+0x29b30],0x1        # 0x14004e68c
   140024b5c:	je     0x140024b9a
   140024b5e:	mov    ecx,0x27
   140024b63:	and    QWORD PTR [rsp+0x30],0x0
   140024b69:	mov    QWORD PTR [rsp+0x28],0x4
   140024b72:	lea    rax,[rip+0x14243]        # 0x140038dbc
   140024b79:	mov    QWORD PTR [rsp+0x20],rax
   140024b7e:	movzx  r9d,cx
   140024b82:	lea    r8,[rip+0x14267]        # 0x140038df0
   140024b89:	lea    edx,[rcx+0x4]
   140024b8c:	mov    rcx,QWORD PTR [rip+0x29aed]        # 0x14004e680
   140024b93:	call   QWORD PTR [rip+0xd487]        # 0x140032020
   140024b99:	nop
   140024b9a:	add    rsp,0x48
   140024b9e:	ret    
   140024b9f:	int3   
   140024ba0:	int3   
   140024ba1:	int3   
   140024ba2:	int3   
   140024ba3:	int3   
   140024ba4:	int3   
   140024ba5:	int3   
   140024ba6:	int3   
   140024ba7:	int3   
   140024ba8:	sub    rsp,0x48
   140024bac:	mov    rax,QWORD PTR [rcx]
   140024baf:	lock inc DWORD PTR [rax+0x30]
   140024bb3:	jmp    0x140024bfa
   140024bb5:	test   BYTE PTR [rip+0x29ad0],0x1        # 0x14004e68c
   140024bbc:	je     0x140024bfa
   140024bbe:	mov    ecx,0x2a
   140024bc3:	and    QWORD PTR [rsp+0x30],0x0
   140024bc9:	mov    QWORD PTR [rsp+0x28],0x4
   140024bd2:	lea    rax,[rip+0x141e3]        # 0x140038dbc
   140024bd9:	mov    QWORD PTR [rsp+0x20],rax
   140024bde:	movzx  r9d,cx
   140024be2:	lea    r8,[rip+0x14207]        # 0x140038df0
   140024be9:	lea    edx,[rcx+0x1]
   140024bec:	mov    rcx,QWORD PTR [rip+0x29a8d]        # 0x14004e680
   140024bf3:	call   QWORD PTR [rip+0xd427]        # 0x140032020
   140024bf9:	nop
   140024bfa:	add    rsp,0x48
   140024bfe:	ret    
   140024bff:	int3   
   140024c00:	int3   
   140024c01:	int3   
   140024c02:	int3   
   140024c03:	int3   
   140024c04:	int3   
   140024c05:	int3   
   140024c06:	int3   
   140024c07:	int3   
   140024c08:	sub    rsp,0x48
   140024c0c:	mov    rax,QWORD PTR [rcx]
   140024c0f:	lock inc DWORD PTR [rax+0x38]
   140024c13:	jmp    0x140024c5a
   140024c15:	test   BYTE PTR [rip+0x29a70],0x1        # 0x14004e68c
   140024c1c:	je     0x140024c5a
   140024c1e:	mov    ecx,0x32
   140024c23:	and    QWORD PTR [rsp+0x30],0x0
   140024c29:	mov    QWORD PTR [rsp+0x28],0x4
   140024c32:	lea    rax,[rip+0x14183]        # 0x140038dbc
   140024c39:	mov    QWORD PTR [rsp+0x20],rax
   140024c3e:	movzx  r9d,cx
   140024c42:	lea    r8,[rip+0x141a7]        # 0x140038df0
   140024c49:	lea    edx,[rcx-0x7]
   140024c4c:	mov    rcx,QWORD PTR [rip+0x29a2d]        # 0x14004e680
   140024c53:	call   QWORD PTR [rip+0xd3c7]        # 0x140032020
   140024c59:	nop
   140024c5a:	add    rsp,0x48
   140024c5e:	ret    
   140024c5f:	int3   
   140024c60:	int3   
   140024c61:	int3   
   140024c62:	int3   
   140024c63:	int3   
   140024c64:	int3   
   140024c65:	int3   
   140024c66:	int3   
   140024c67:	int3   
   140024c68:	sub    rsp,0x48
   140024c6c:	mov    rax,QWORD PTR [rcx]
   140024c6f:	lock xadd DWORD PTR [rax+0x3c],edx
   140024c74:	jmp    0x140024cbb
   140024c76:	test   BYTE PTR [rip+0x29a0f],0x1        # 0x14004e68c
   140024c7d:	je     0x140024cbb
   140024c7f:	mov    ecx,0x35
   140024c84:	and    QWORD PTR [rsp+0x30],0x0
   140024c8a:	mov    QWORD PTR [rsp+0x28],0x4
   140024c93:	lea    rax,[rip+0x14122]        # 0x140038dbc
   140024c9a:	mov    QWORD PTR [rsp+0x20],rax
   140024c9f:	movzx  r9d,cx
   140024ca3:	lea    r8,[rip+0x14146]        # 0x140038df0
   140024caa:	lea    edx,[rcx-0xa]
   140024cad:	mov    rcx,QWORD PTR [rip+0x299cc]        # 0x14004e680
   140024cb4:	call   QWORD PTR [rip+0xd366]        # 0x140032020
   140024cba:	nop
   140024cbb:	add    rsp,0x48
   140024cbf:	ret    
   140024cc0:	int3   
   140024cc1:	int3   
   140024cc2:	int3   
   140024cc3:	int3   
   140024cc4:	int3   
   140024cc5:	int3   
   140024cc6:	int3   
   140024cc7:	int3   
   140024cc8:	sub    rsp,0x48
   140024ccc:	mov    rax,QWORD PTR [rcx]
   140024ccf:	lock xadd DWORD PTR [rax+0x40],edx
   140024cd4:	jmp    0x140024d1b
   140024cd6:	test   BYTE PTR [rip+0x299af],0x1        # 0x14004e68c
   140024cdd:	je     0x140024d1b
   140024cdf:	mov    ecx,0x39
   140024ce4:	and    QWORD PTR [rsp+0x30],0x0
   140024cea:	mov    QWORD PTR [rsp+0x28],0x4
   140024cf3:	lea    rax,[rip+0x140c2]        # 0x140038dbc
   140024cfa:	mov    QWORD PTR [rsp+0x20],rax
   140024cff:	movzx  r9d,cx
   140024d03:	lea    r8,[rip+0x140e6]        # 0x140038df0
   140024d0a:	lea    edx,[rcx-0xe]
   140024d0d:	mov    rcx,QWORD PTR [rip+0x2996c]        # 0x14004e680
   140024d14:	call   QWORD PTR [rip+0xd306]        # 0x140032020
   140024d1a:	nop
   140024d1b:	add    rsp,0x48
   140024d1f:	ret    
   140024d20:	int3   
   140024d21:	int3   
   140024d22:	int3   
   140024d23:	int3   
   140024d24:	int3   
   140024d25:	int3   
   140024d26:	int3   
   140024d27:	int3   
   140024d28:	sub    rsp,0x48
   140024d2c:	mov    rcx,QWORD PTR [rcx]
   140024d2f:	mov    eax,0x1
   140024d34:	lock xadd DWORD PTR [rcx+0x44],eax
   140024d39:	jmp    0x140024d80
   140024d3b:	test   BYTE PTR [rip+0x2994a],0x1        # 0x14004e68c
   140024d42:	je     0x140024d80
   140024d44:	mov    ecx,0x3d
   140024d49:	and    QWORD PTR [rsp+0x30],0x0
   140024d4f:	mov    QWORD PTR [rsp+0x28],0x4
   140024d58:	lea    rax,[rip+0x1405d]        # 0x140038dbc
   140024d5f:	mov    QWORD PTR [rsp+0x20],rax
   140024d64:	movzx  r9d,cx
   140024d68:	lea    r8,[rip+0x14081]        # 0x140038df0
   140024d6f:	lea    edx,[rcx-0x12]
   140024d72:	mov    rcx,QWORD PTR [rip+0x29907]        # 0x14004e680
   140024d79:	call   QWORD PTR [rip+0xd2a1]        # 0x140032020
   140024d7f:	nop
   140024d80:	add    rsp,0x48
   140024d84:	ret    
   140024d85:	int3   
   140024d86:	int3   
   140024d87:	int3   
   140024d88:	int3   
   140024d89:	int3   
   140024d8a:	int3   
   140024d8b:	int3   
   140024d8c:	mov    QWORD PTR [rsp+0x8],rbx
   140024d91:	push   rdi
   140024d92:	sub    rsp,0x180
   140024d99:	mov    rax,QWORD PTR [rip+0x26280]        # 0x14004b020
   140024da0:	xor    rax,rsp
   140024da3:	mov    QWORD PTR [rsp+0x170],rax
   140024dab:	mov    QWORD PTR [rip+0x2b316],rcx        # 0x1400500c8
   140024db2:	lea    rcx,[rip+0x1405f]        # 0x140038e18
   140024db9:	call   QWORD PTR [rip+0xd511]        # 0x1400322d0
   140024dbf:	mov    QWORD PTR [rip+0x2b2fa],rax        # 0x1400500c0
   140024dc6:	test   rax,rax
   140024dc9:	jne    0x140024dd2
   140024dcb:	xor    eax,eax
   140024dcd:	jmp    0x140024f27
   140024dd2:	test   BYTE PTR [rip+0x298b3],0x4        # 0x14004e68c
   140024dd9:	je     0x140024e1d
   140024ddb:	and    QWORD PTR [rsp+0x30],0x0
   140024de1:	lea    rax,[rip+0x13fd4]        # 0x140038dbc
   140024de8:	mov    ecx,0xa
   140024ded:	mov    QWORD PTR [rsp+0x28],0x4
   140024df6:	movzx  r9d,cx
   140024dfa:	lea    r8,[rip+0x14147]        # 0x140038f48
   140024e01:	mov    QWORD PTR [rsp+0x20],rax
   140024e06:	lea    edx,[rcx+0x21]
   140024e09:	mov    rcx,QWORD PTR [rip+0x29870]        # 0x14004e680
   140024e10:	call   QWORD PTR [rip+0xd20a]        # 0x140032020
   140024e16:	mov    rax,QWORD PTR [rip+0x2b2a3]        # 0x1400500c0
   140024e1d:	lea    rdx,[rip+0x14004]        # 0x140038e28
   140024e24:	mov    rcx,rax
   140024e27:	call   QWORD PTR [rip+0xd473]        # 0x1400322a0
   140024e2d:	xor    edx,edx
   140024e2f:	mov    DWORD PTR [rsp+0x50],0x114
   140024e37:	mov    r8d,0x110
   140024e3d:	lea    rcx,[rsp+0x54]
   140024e42:	mov    rbx,rax
   140024e45:	call   0x14002e2ce
   140024e4a:	lea    rcx,[rsp+0x50]
   140024e4f:	call   QWORD PTR [rip+0xd453]        # 0x1400322a8
   140024e55:	test   eax,eax
   140024e57:	jne    0x140024e6b
   140024e59:	lea    rcx,[rip+0x13fe0]        # 0x140038e40
   140024e60:	call   QWORD PTR [rip+0xd492]        # 0x1400322f8
   140024e66:	jmp    0x140024dcb
   140024e6b:	cmp    DWORD PTR [rsp+0x54],0x6
   140024e70:	jb     0x140024ea4
   140024e72:	test   rbx,rbx
   140024e75:	jne    0x140024e80
   140024e77:	lea    rcx,[rip+0x13fe2]        # 0x140038e60
   140024e7e:	jmp    0x140024e60
   140024e80:	mov    rcx,rbx
   140024e83:	call   QWORD PTR [rip+0xd81f]        # 0x1400326a8
   140024e89:	xor    r9d,r9d
   140024e8c:	xor    r8d,r8d
   140024e8f:	xor    ecx,ecx
   140024e91:	lea    edx,[r9+0x1]
   140024e95:	call   rbx
   140024e97:	test   eax,eax
   140024e99:	jne    0x140024ea4
   140024e9b:	lea    rcx,[rip+0x13ff6]        # 0x140038e98
   140024ea2:	jmp    0x140024e60
   140024ea4:	call   QWORD PTR [rip+0xd41e]        # 0x1400322c8
   140024eaa:	mov    DWORD PTR [rsp+0x40],0x2
   140024eb2:	mov    rdi,rax
   140024eb5:	test   rbx,rbx
   140024eb8:	je     0x140024ee6
   140024eba:	mov    rcx,rbx
   140024ebd:	call   QWORD PTR [rip+0xd7e5]        # 0x1400326a8
   140024ec3:	mov    r9d,0x4
   140024ec9:	lea    r8,[rsp+0x40]
   140024ece:	xor    edx,edx
   140024ed0:	mov    rcx,rdi
   140024ed3:	call   rbx
   140024ed5:	test   eax,eax
   140024ed7:	jne    0x140024ee6
   140024ed9:	lea    rcx,[rip+0x13ff0]        # 0x140038ed0
   140024ee0:	call   QWORD PTR [rip+0xd412]        # 0x1400322f8
   140024ee6:	lea    rax,[rip+0x297bb]        # 0x14004e6a8
   140024eed:	mov    r9d,0x20019
   140024ef3:	xor    r8d,r8d
   140024ef6:	mov    QWORD PTR [rsp+0x20],rax
   140024efb:	lea    rdx,[rip+0x14056]        # 0x140038f58
   140024f02:	mov    rcx,0xffffffff80000002
   140024f09:	call   QWORD PTR [rip+0xd1b9]        # 0x1400320c8
   140024f0f:	test   eax,eax
   140024f11:	je     0x140024f1d
   140024f13:	and    QWORD PTR [rip+0x2978d],0x0        # 0x14004e6a8
   140024f1b:	jmp    0x140024f22
   140024f1d:	call   0x1400252e4
   140024f22:	mov    eax,0x1
   140024f27:	mov    rcx,QWORD PTR [rsp+0x170]
   140024f2f:	xor    rcx,rsp
   140024f32:	call   0x14002dd00
   140024f37:	mov    rbx,QWORD PTR [rsp+0x190]
   140024f3f:	add    rsp,0x180
   140024f46:	pop    rdi
   140024f47:	ret    
   140024f48:	int3   
   140024f49:	int3   
   140024f4a:	int3   
   140024f4b:	int3   
   140024f4c:	int3   
   140024f4d:	int3   
   140024f4e:	int3   
   140024f4f:	int3   
   140024f50:	rex push rbx
   140024f52:	sub    rsp,0x40
   140024f56:	test   BYTE PTR [rip+0x2972f],0x4        # 0x14004e68c
   140024f5d:	je     0x140024f9a
   140024f5f:	and    QWORD PTR [rsp+0x30],0x0
   140024f65:	lea    rax,[rip+0x13e50]        # 0x140038dbc
   140024f6c:	mov    ecx,0xb
   140024f71:	mov    QWORD PTR [rsp+0x28],0x4
   140024f7a:	movzx  r9d,cx
   140024f7e:	lea    r8,[rip+0x13fc3]        # 0x140038f48
   140024f85:	mov    QWORD PTR [rsp+0x20],rax
   140024f8a:	lea    edx,[rcx+0x20]
   140024f8d:	mov    rcx,QWORD PTR [rip+0x296ec]        # 0x14004e680
   140024f94:	call   QWORD PTR [rip+0xd086]        # 0x140032020
   140024f9a:	mov    rax,QWORD PTR [rip+0x29727]        # 0x14004e6c8
   140024fa1:	test   rax,rax
   140024fa4:	je     0x140024fdc
   140024fa6:	xor    ebx,ebx
   140024fa8:	cmp    DWORD PTR [rip+0x29722],ebx        # 0x14004e6d0
   140024fae:	jbe    0x140024fcb
   140024fb0:	mov    rcx,QWORD PTR [rax+rbx*8]
   140024fb4:	call   QWORD PTR [rip+0xd60e]        # 0x1400325c8
   140024fba:	mov    rax,QWORD PTR [rip+0x29707]        # 0x14004e6c8
   140024fc1:	inc    ebx
   140024fc3:	cmp    ebx,DWORD PTR [rip+0x29707]        # 0x14004e6d0
   140024fc9:	jb     0x140024fb0
   140024fcb:	mov    rcx,rax
   140024fce:	call   QWORD PTR [rip+0xd5f4]        # 0x1400325c8
   140024fd4:	and    QWORD PTR [rip+0x296ec],0x0        # 0x14004e6c8
   140024fdc:	mov    rcx,QWORD PTR [rip+0x296c5]        # 0x14004e6a8
   140024fe3:	test   rcx,rcx
   140024fe6:	je     0x140024ff6
   140024fe8:	call   QWORD PTR [rip+0xd04a]        # 0x140032038
   140024fee:	and    QWORD PTR [rip+0x296b2],0x0        # 0x14004e6a8
   140024ff6:	mov    rcx,QWORD PTR [rip+0x2b0c3]        # 0x1400500c0
   140024ffd:	test   rcx,rcx
   140025000:	je     0x140025010
   140025002:	call   QWORD PTR [rip+0xd0d8]        # 0x1400320e0
   140025008:	and    QWORD PTR [rip+0x2b0b0],0x0        # 0x1400500c0
   140025010:	add    rsp,0x40
   140025014:	pop    rbx
   140025015:	ret    
   140025016:	int3   
   140025017:	int3   
   140025018:	int3   
   140025019:	int3   
   14002501a:	int3   
   14002501b:	int3   
   14002501c:	int3   
   14002501d:	int3   
   14002501e:	int3   
   14002501f:	int3   
   140025020:	sub    rsp,0x28
   140025024:	mov    eax,0x1
   140025029:	lock xadd DWORD PTR [rip+0x2b203],eax        # 0x140050234
   140025031:	inc    eax
   140025033:	cmp    eax,0x1
   140025036:	jne    0x14002503d
   140025038:	call   0x1400251d4
   14002503d:	xor    eax,eax
   14002503f:	add    rsp,0x28
   140025043:	ret    
   140025044:	int3   
   140025045:	int3   
   140025046:	int3   
   140025047:	int3   
   140025048:	int3   
   140025049:	int3   
   14002504a:	int3   
   14002504b:	int3   
   14002504c:	int3   
   14002504d:	int3   
   14002504e:	int3   
   14002504f:	int3   
   140025050:	mov    QWORD PTR [rsp+0x8],rbx
   140025055:	push   rdi
   140025056:	sub    rsp,0x20
   14002505a:	xor    ebx,ebx
   14002505c:	cmp    DWORD PTR [rip+0x26026],ebx        # 0x14004b088
   140025062:	je     0x140025080
   140025064:	lea    rdx,[rip+0x13d95]        # 0x140038e00
   14002506b:	lea    ecx,[rbx+0x14]
   14002506e:	call   0x1400253b0
   140025073:	mov    QWORD PTR [rip+0x2b1ae],rax        # 0x140050228
   14002507a:	mov    DWORD PTR [rip+0x26008],ebx        # 0x14004b088
   140025080:	or     ecx,0xffffffff
   140025083:	mov    edi,ecx
   140025085:	lock xadd DWORD PTR [rip+0x2b1a7],edi        # 0x140050234
   14002508d:	add    edi,ecx
   14002508f:	jne    0x1400250d9
   140025091:	mov    eax,ecx
   140025093:	lock xadd DWORD PTR [rip+0x29605],eax        # 0x14004e6a0
   14002509b:	add    eax,ecx
   14002509d:	jns    0x1400250e2
   14002509f:	mov    rcx,QWORD PTR [rip+0x29612]        # 0x14004e6b8
   1400250a6:	test   rcx,rcx
   1400250a9:	je     0x1400250e2
   1400250ab:	call   QWORD PTR [rip+0xd0df]        # 0x140032190
   1400250b1:	mov    rcx,QWORD PTR [rip+0x29600]        # 0x14004e6b8
   1400250b8:	call   QWORD PTR [rip+0xd09a]        # 0x140032158
   1400250be:	mov    rcx,QWORD PTR [rip+0x295eb]        # 0x14004e6b0
   1400250c5:	mov    QWORD PTR [rip+0x295ec],rbx        # 0x14004e6b8
   1400250cc:	call   QWORD PTR [rip+0xd086]        # 0x140032158
   1400250d2:	mov    QWORD PTR [rip+0x295d7],rbx        # 0x14004e6b0
   1400250d9:	test   edi,edi
   1400250db:	jns    0x1400250e2
   1400250dd:	mov    ebx,0x1
   1400250e2:	mov    eax,ebx
   1400250e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400250e9:	add    rsp,0x20
   1400250ed:	pop    rdi
   1400250ee:	ret    
   1400250ef:	int3   
   1400250f0:	int3   
   1400250f1:	int3   
   1400250f2:	int3   
   1400250f3:	int3   
   1400250f4:	int3   
   1400250f5:	int3   
   1400250f6:	int3   
   1400250f7:	int3   
   1400250f8:	int3   
   1400250f9:	int3   
   1400250fa:	int3   
   1400250fb:	int3   
   1400250fc:	int3   
   1400250fd:	int3   
   1400250fe:	int3   
   1400250ff:	int3   
   140025100:	xor    eax,eax
   140025102:	lea    rdx,[rip+0x13e07]        # 0x140038f10
   140025109:	mov    r8d,DWORD PTR [rdx]
   14002510c:	cmp    ecx,r8d
   14002510f:	jb     0x14002511e
   140025111:	inc    eax
   140025113:	add    rdx,0x4
   140025117:	cmp    eax,0xe
   14002511a:	jb     0x140025109
   14002511c:	jmp    0x140025121
   14002511e:	mov    ecx,r8d
   140025121:	cmp    eax,0xe
   140025124:	jb     0x140025130
   140025126:	cmp    ecx,0x40000000
   14002512c:	jae    0x140025130
   14002512e:	add    ecx,ecx
   140025130:	mov    eax,ecx
   140025132:	ret    
   140025133:	int3   
   140025134:	int3   
   140025135:	int3   
   140025136:	int3   
   140025137:	int3   
   140025138:	int3   
   140025139:	int3   
   14002513a:	int3   
   14002513b:	int3   
   14002513c:	int3   
   14002513d:	int3   
   14002513e:	int3   
   14002513f:	int3   
   140025140:	mov    rax,rsp
   140025143:	mov    QWORD PTR [rax+0x8],rbx
   140025147:	mov    QWORD PTR [rax+0x10],rbp
   14002514b:	mov    QWORD PTR [rax+0x18],rsi
   14002514f:	mov    QWORD PTR [rax+0x20],rdi
   140025153:	push   r14
   140025155:	sub    rsp,0x20
   140025159:	mov    edi,r8d
   14002515c:	mov    esi,edx
   14002515e:	mov    rbp,rcx
   140025161:	call   QWORD PTR [rip+0xd061]        # 0x1400321c8
   140025167:	mov    r14d,eax
   14002516a:	mov    edx,esi
   14002516c:	jmp    0x140025184
   14002516e:	call   QWORD PTR [rip+0xd054]        # 0x1400321c8
   140025174:	sub    eax,r14d
   140025177:	cmp    eax,edi
   140025179:	jae    0x140025196
   14002517b:	mov    edx,edi
   14002517d:	sub    edx,eax
   14002517f:	cmp    edx,esi
   140025181:	cmova  edx,esi
   140025184:	mov    rcx,rbp
   140025187:	call   QWORD PTR [rip+0xcff3]        # 0x140032180
   14002518d:	mov    ebx,eax
   14002518f:	cmp    eax,0x102
   140025194:	je     0x14002516e
   140025196:	mov    rbp,QWORD PTR [rsp+0x38]
   14002519b:	mov    eax,ebx
   14002519d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400251a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400251a7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400251ac:	add    rsp,0x20
   1400251b0:	pop    r14
   1400251b2:	ret    
   1400251b3:	int3   
   1400251b4:	int3   
   1400251b5:	int3   
   1400251b6:	int3   
   1400251b7:	int3   
   1400251b8:	int3   
   1400251b9:	int3   
   1400251ba:	int3   
   1400251bb:	int3   
   1400251bc:	int3   
   1400251bd:	int3   
   1400251be:	int3   
   1400251bf:	int3   
   1400251c0:	mov    DWORD PTR [rip+0x2b066],0x1        # 0x140050230
   1400251ca:	ret    
   1400251cb:	int3   
   1400251cc:	int3   
   1400251cd:	int3   
   1400251ce:	int3   
   1400251cf:	int3   
   1400251d0:	int3   
   1400251d1:	int3   
   1400251d2:	int3   
   1400251d3:	int3   
   1400251d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400251d9:	push   rdi
   1400251da:	sub    rsp,0x20
   1400251de:	mov    eax,0x1
   1400251e3:	mov    ecx,eax
   1400251e5:	lock xadd DWORD PTR [rip+0x294b3],ecx        # 0x14004e6a0
   1400251ed:	add    ecx,eax
   1400251ef:	xor    edi,edi
   1400251f1:	test   ecx,ecx
   1400251f3:	jg     0x14002527f
   1400251f9:	xor    r9d,r9d
   1400251fc:	xor    r8d,r8d
   1400251ff:	xor    edx,edx
   140025201:	xor    ecx,ecx
   140025203:	call   QWORD PTR [rip+0xd0b7]        # 0x1400322c0
   140025209:	mov    QWORD PTR [rip+0x294a0],rax        # 0x14004e6b0
   140025210:	test   rax,rax
   140025213:	jne    0x14002522c
   140025215:	call   QWORD PTR [rip+0xd06d]        # 0x140032288
   14002521b:	mov    ecx,eax
   14002521d:	movzx  eax,ax
   140025220:	or     eax,0x80070000
   140025225:	test   ecx,ecx
   140025227:	cmovle eax,ecx
   14002522a:	jmp    0x14002527f
   14002522c:	xor    r9d,r9d
   14002522f:	xor    r8d,r8d
   140025232:	xor    edx,edx
   140025234:	xor    ecx,ecx
   140025236:	call   QWORD PTR [rip+0xd084]        # 0x1400322c0
   14002523c:	mov    QWORD PTR [rip+0x29475],rax        # 0x14004e6b8
   140025243:	test   rax,rax
   140025246:	jne    0x140025273
   140025248:	call   QWORD PTR [rip+0xd03a]        # 0x140032288
   14002524e:	mov    rcx,QWORD PTR [rip+0x2945b]        # 0x14004e6b0
   140025255:	mov    ebx,eax
   140025257:	call   QWORD PTR [rip+0xcefb]        # 0x140032158
   14002525d:	movzx  eax,bx
   140025260:	or     eax,0x80070000
   140025265:	mov    QWORD PTR [rip+0x29444],rdi        # 0x14004e6b0
   14002526c:	test   ebx,ebx
   14002526e:	cmovle eax,ebx
   140025271:	jmp    0x14002527f
   140025273:	call   0x140025290
   140025278:	test   eax,eax
   14002527a:	cmovs  edi,eax
   14002527d:	mov    eax,edi
   14002527f:	mov    rbx,QWORD PTR [rsp+0x30]
   140025284:	add    rsp,0x20
   140025288:	pop    rdi
   140025289:	ret    
   14002528a:	int3   
   14002528b:	int3   
   14002528c:	int3   
   14002528d:	int3   
   14002528e:	int3   
   14002528f:	int3   
   140025290:	sub    rsp,0x38
   140025294:	mov    rcx,QWORD PTR [rip+0x2940d]        # 0x14004e6a8
   14002529b:	test   rcx,rcx
   14002529e:	jne    0x1400252a5
   1400252a0:	lea    eax,[rcx+0x1]
   1400252a3:	jmp    0x1400252d6
   1400252a5:	mov    r9,QWORD PTR [rip+0x29404]        # 0x14004e6b0
   1400252ac:	mov    edx,0x1
   1400252b1:	mov    DWORD PTR [rsp+0x20],edx
   1400252b5:	lea    r8d,[rdx+0x3]
   1400252b9:	call   QWORD PTR [rip+0xcde1]        # 0x1400320a0
   1400252bf:	mov    ecx,eax
   1400252c1:	test   eax,eax
   1400252c3:	je     0x1400252d4
   1400252c5:	movzx  eax,ax
   1400252c8:	or     eax,0x80070000
   1400252cd:	test   ecx,ecx
   1400252cf:	cmovle eax,ecx
   1400252d2:	jmp    0x1400252d6
   1400252d4:	xor    eax,eax
   1400252d6:	add    rsp,0x38
   1400252da:	ret    
   1400252db:	int3   
   1400252dc:	int3   
   1400252dd:	int3   
   1400252de:	int3   
   1400252df:	int3   
   1400252e0:	int3   
   1400252e1:	int3   
   1400252e2:	int3   
   1400252e3:	int3   
   1400252e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400252e9:	mov    QWORD PTR [rsp+0x8],rcx
   1400252ee:	push   rbp
   1400252ef:	push   rsi
   1400252f0:	push   rdi
   1400252f1:	sub    rsp,0x30
   1400252f5:	xor    ebx,ebx
   1400252f7:	lea    rbp,[rip+0x25d92]        # 0x14004b090
   1400252fe:	xor    edi,edi
   140025300:	mov    rsi,rbp
   140025303:	mov    rcx,QWORD PTR [rip+0x2939e]        # 0x14004e6a8
   14002530a:	test   rcx,rcx
   14002530d:	je     0x140025389
   14002530f:	mov    rdx,QWORD PTR [rsi+0x8]
   140025313:	lea    rax,[rsp+0x58]
   140025318:	mov    r9d,0x20019
   14002531e:	mov    QWORD PTR [rsp+0x20],rax
   140025323:	xor    r8d,r8d
   140025326:	call   QWORD PTR [rip+0xcd9c]        # 0x1400320c8
   14002532c:	test   eax,eax
   14002532e:	je     0x140025340
   140025330:	movzx  ebx,ax
   140025333:	or     ebx,0x80070000
   140025339:	test   eax,eax
   14002533b:	cmovle ebx,eax
   14002533e:	jmp    0x140025389
   140025340:	mov    rdx,QWORD PTR [rsi]
   140025343:	lea    rcx,[rdi+0x1]
   140025347:	lea    rcx,[rdi+rcx*2]
   14002534b:	mov    DWORD PTR [rsp+0x50],0x4
   140025353:	lea    rax,[rcx*8+0x0]
   14002535b:	xor    r9d,r9d
   14002535e:	lea    rcx,[rsp+0x50]
   140025363:	add    rax,rbp
   140025366:	mov    QWORD PTR [rsp+0x28],rcx
   14002536b:	xor    r8d,r8d
   14002536e:	mov    rcx,QWORD PTR [rsp+0x58]
   140025373:	mov    QWORD PTR [rsp+0x20],rax
   140025378:	call   QWORD PTR [rip+0xcd2a]        # 0x1400320a8
   14002537e:	mov    rcx,QWORD PTR [rsp+0x58]
   140025383:	call   QWORD PTR [rip+0xccaf]        # 0x140032038
   140025389:	inc    edi
   14002538b:	add    rsi,0x18
   14002538f:	cmp    edi,0x236
   140025395:	jb     0x140025303
   14002539b:	mov    eax,ebx
   14002539d:	mov    rbx,QWORD PTR [rsp+0x60]
   1400253a2:	add    rsp,0x30
   1400253a6:	pop    rdi
   1400253a7:	pop    rsi
   1400253a8:	pop    rbp
   1400253a9:	ret    
   1400253aa:	int3   
   1400253ab:	int3   
   1400253ac:	int3   
   1400253ad:	int3   
   1400253ae:	int3   
   1400253af:	int3   
   1400253b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400253b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400253ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400253bf:	or     r8d,0xffffffff
   1400253c3:	mov    r9d,ecx
   1400253c6:	xor    r10d,r10d
   1400253c9:	lea    rsi,[rip+0x25cc0]        # 0x14004b090
   1400253d0:	mov    edi,0x236
   1400253d5:	mov    rbx,rdx
   1400253d8:	cmp    ecx,edi
   1400253da:	jae    0x14002541d
   1400253dc:	mov    rax,rdx
   1400253df:	lea    r11,[r9+r9*2]
   1400253e3:	mov    rdx,QWORD PTR [rsi+r11*8]
   1400253e7:	sub    rdx,rax
   1400253ea:	mov    cl,BYTE PTR [rax]
   1400253ec:	cmp    cl,BYTE PTR [rax+rdx*1]
   1400253ef:	jne    0x1400253fd
   1400253f1:	inc    rax
   1400253f4:	test   cl,cl
   1400253f6:	jne    0x1400253ea
   1400253f8:	mov    r8d,r10d
   1400253fb:	jmp    0x140025404
   1400253fd:	sbb    r8d,r8d
   140025400:	or     r8d,0x1
   140025404:	test   r8d,r8d
   140025407:	jne    0x140025413
   140025409:	lea    r10,[rsi+0x10]
   14002540d:	lea    r10,[r10+r11*8]
   140025411:	jmp    0x140025467
   140025413:	sar    r8d,0x1f
   140025417:	or     r8d,0x1
   14002541b:	jmp    0x140025451
   14002541d:	mov    r9d,edi
   140025420:	jmp    0x140025451
   140025422:	lea    rcx,[r9+r9*2]
   140025426:	mov    rax,rbx
   140025429:	mov    rdx,QWORD PTR [rsi+rcx*8]
   14002542d:	sub    rdx,rbx
   140025430:	mov    cl,BYTE PTR [rax]
   140025432:	cmp    cl,BYTE PTR [rax+rdx*1]
   140025435:	jne    0x140025443
   140025437:	inc    rax
   14002543a:	test   cl,cl
   14002543c:	jne    0x140025430
   14002543e:	mov    eax,r10d
   140025441:	jmp    0x140025448
   140025443:	sbb    eax,eax
   140025445:	or     eax,0x1
   140025448:	test   eax,eax
   14002544a:	je     0x14002545b
   14002544c:	xor    eax,r8d
   14002544f:	jl     0x140025467
   140025451:	add    r9d,r8d
   140025454:	cmp    r9d,edi
   140025457:	jb     0x140025422
   140025459:	jmp    0x140025467
   14002545b:	lea    r10,[r9+0x1]
   14002545f:	lea    r10,[r9+r10*2]
   140025463:	lea    r10,[rsi+r10*8]
   140025467:	mov    rbx,QWORD PTR [rsp+0x8]
   14002546c:	mov    rax,r10
   14002546f:	mov    rsi,QWORD PTR [rsp+0x10]
   140025474:	mov    rdi,QWORD PTR [rsp+0x18]
   140025479:	ret    
   14002547a:	int3   
   14002547b:	int3   
   14002547c:	int3   
   14002547d:	int3   
   14002547e:	int3   
   14002547f:	int3   
   140025480:	sub    rsp,0x58
   140025484:	mov    rcx,QWORD PTR [rcx+0x40]
   140025488:	call   QWORD PTR [rip+0xcd02]        # 0x140032190
   14002548e:	test   eax,eax
   140025490:	jne    0x1400254ee
   140025492:	test   BYTE PTR [rip+0x291f3],0x1        # 0x14004e68c
   140025499:	je     0x1400254ee
   14002549b:	call   QWORD PTR [rip+0xcde7]        # 0x140032288
   1400254a1:	and    QWORD PTR [rsp+0x40],0x0
   1400254a7:	lea    r8,[rip+0x17912]        # 0x14003cdc0
   1400254ae:	mov    edx,0xd
   1400254b3:	mov    DWORD PTR [rsp+0x60],eax
   1400254b7:	lea    rax,[rsp+0x60]
   1400254bc:	movzx  r9d,dx
   1400254c0:	lea    ecx,[rdx-0x9]
   1400254c3:	mov    QWORD PTR [rsp+0x38],rcx
   1400254c8:	lea    edx,[rcx+0x27]
   1400254cb:	mov    QWORD PTR [rsp+0x30],rax
   1400254d0:	lea    rax,[rip+0x138e5]        # 0x140038dbc
   1400254d7:	mov    QWORD PTR [rsp+0x28],rcx
   1400254dc:	mov    rcx,QWORD PTR [rip+0x2919d]        # 0x14004e680
   1400254e3:	mov    QWORD PTR [rsp+0x20],rax
   1400254e8:	call   QWORD PTR [rip+0xcb32]        # 0x140032020
   1400254ee:	add    rsp,0x58
   1400254f2:	ret    
   1400254f3:	int3   
   1400254f4:	int3   
   1400254f5:	int3   
   1400254f6:	int3   
   1400254f7:	int3   
   1400254f8:	int3   
   1400254f9:	int3   
   1400254fa:	int3   
   1400254fb:	int3   
   1400254fc:	mov    QWORD PTR [rsp+0x8],rbx
   140025501:	mov    QWORD PTR [rsp+0x18],rsi
   140025506:	push   rdi
   140025507:	sub    rsp,0x50
   14002550b:	mov    edi,0x1
   140025510:	mov    eax,edx
   140025512:	mov    esi,edx
   140025514:	sub    eax,edi
   140025516:	je     0x14002556c
   140025518:	sub    eax,0x3
   14002551b:	je     0x140025551
   14002551d:	cmp    eax,edi
   14002551f:	je     0x14002556c
   140025521:	lea    eax,[rdx-0x80]
   140025524:	cmp    eax,0x7f
   140025527:	ja     0x14002563d
   14002552d:	mov    rax,QWORD PTR [rip+0x290bc]        # 0x14004e5f0
   140025534:	mov    rbx,QWORD PTR [rax+0x20]
   140025538:	mov    rcx,rbx
   14002553b:	call   QWORD PTR [rip+0xd167]        # 0x1400326a8
   140025541:	mov    edx,esi
   140025543:	lea    rcx,[rip+0x290a6]        # 0x14004e5f0
   14002554a:	call   rbx
   14002554c:	jmp    0x14002563d
   140025551:	mov    rcx,QWORD PTR [rip+0x290a8]        # 0x14004e600
   140025558:	lea    rdx,[rip+0x290a9]        # 0x14004e608
   14002555f:	call   QWORD PTR [rip+0xcb53]        # 0x1400320b8
   140025565:	mov    edi,eax
   140025567:	jmp    0x14002563d
   14002556c:	mov    eax,DWORD PTR [rip+0x29086]        # 0x14004e5f8
   140025572:	mov    ecx,eax
   140025574:	btr    ecx,0x1f
   140025578:	lock cmpxchg DWORD PTR [rip+0x29078],ecx        # 0x14004e5f8
   140025580:	jne    0x14002556c
   140025582:	test   eax,eax
   140025584:	jns    0x14002563d
   14002558a:	mov    ecx,0x40000000
   14002558f:	xor    eax,eax
   140025591:	lock cmpxchg DWORD PTR [rip+0x2905f],ecx        # 0x14004e5f8
   140025599:	jne    0x1400255a7
   14002559b:	lea    rcx,[rip+0x2904e]        # 0x14004e5f0
   1400255a2:	call   0x140025480
   1400255a7:	mov    rcx,QWORD PTR [rip+0x29052]        # 0x14004e600
   1400255ae:	lea    rdx,[rip+0x29053]        # 0x14004e608
   1400255b5:	and    DWORD PTR [rip+0x29060],0x0        # 0x14004e61c
   1400255bc:	mov    DWORD PTR [rip+0x29046],0x3        # 0x14004e60c
   1400255c6:	call   QWORD PTR [rip+0xcaec]        # 0x1400320b8
   1400255cc:	mov    rcx,QWORD PTR [rip+0x29055]        # 0x14004e628
   1400255d3:	mov    edi,eax
   1400255d5:	call   QWORD PTR [rip+0xcbb5]        # 0x140032190
   1400255db:	test   eax,eax
   1400255dd:	jne    0x14002563d
   1400255df:	test   BYTE PTR [rip+0x290a6],0x1        # 0x14004e68c
   1400255e6:	je     0x14002563b
   1400255e8:	call   QWORD PTR [rip+0xcc9a]        # 0x140032288
   1400255ee:	and    QWORD PTR [rsp+0x40],0x0
   1400255f4:	lea    r8,[rip+0x177c5]        # 0x14003cdc0
   1400255fb:	mov    edx,0xe
   140025600:	mov    DWORD PTR [rsp+0x68],eax
   140025604:	lea    rax,[rsp+0x68]
   140025609:	movzx  r9d,dx
   14002560d:	lea    ecx,[rdx-0xa]
   140025610:	mov    QWORD PTR [rsp+0x38],rcx
   140025615:	lea    edx,[rcx+0x27]
   140025618:	mov    QWORD PTR [rsp+0x30],rax
   14002561d:	lea    rax,[rip+0x13798]        # 0x140038dbc
   140025624:	mov    QWORD PTR [rsp+0x28],rcx
   140025629:	mov    rcx,QWORD PTR [rip+0x29050]        # 0x14004e680
   140025630:	mov    QWORD PTR [rsp+0x20],rax
   140025635:	call   QWORD PTR [rip+0xc9e5]        # 0x140032020
   14002563b:	xor    edi,edi
   14002563d:	mov    rbx,QWORD PTR [rsp+0x60]
   140025642:	mov    eax,edi
   140025644:	mov    rsi,QWORD PTR [rsp+0x70]
   140025649:	add    rsp,0x50
   14002564d:	pop    rdi
   14002564e:	ret    
   14002564f:	int3   
   140025650:	int3   
   140025651:	int3   
   140025652:	int3   
   140025653:	int3   
   140025654:	int3   
   140025655:	int3   
   140025656:	int3   
   140025657:	int3   
   140025658:	mov    DWORD PTR [rsp+0x10],edx
   14002565c:	sub    rsp,0x58
   140025660:	lock add DWORD PTR [rip+0x28f90],0x1        # 0x14004e5f8
   140025668:	js     0x140025705
   14002566e:	or     eax,0xffffffff
   140025671:	lock xadd DWORD PTR [rip+0x28f7f],eax        # 0x14004e5f8
   140025679:	cmp    eax,0x1
   14002567c:	jne    0x1400256a7
   14002567e:	mov    edx,0x40000000
   140025683:	mov    eax,DWORD PTR [rip+0x28f6f]        # 0x14004e5f8
   140025689:	mov    ecx,eax
   14002568b:	or     ecx,edx
   14002568d:	lock cmpxchg DWORD PTR [rip+0x28f63],ecx        # 0x14004e5f8
   140025695:	jne    0x140025683
   140025697:	test   edx,eax
   140025699:	jne    0x1400256a7
   14002569b:	lea    rcx,[rip+0x28f4e]        # 0x14004e5f0
   1400256a2:	call   0x140025480
   1400256a7:	test   BYTE PTR [rip+0x28fde],0x1        # 0x14004e68c
   1400256ae:	je     0x1400256ea
   1400256b0:	and    QWORD PTR [rsp+0x30],0x0
   1400256b6:	lea    r8,[rip+0x17703]        # 0x14003cdc0
   1400256bd:	mov    ecx,0x10
   1400256c2:	movzx  r9d,cx
   1400256c6:	lea    eax,[rcx-0xc]
   1400256c9:	mov    QWORD PTR [rsp+0x28],rax
   1400256ce:	lea    edx,[rcx+0x1b]
   1400256d1:	mov    rcx,QWORD PTR [rip+0x28fa8]        # 0x14004e680
   1400256d8:	lea    rax,[rip+0x136dd]        # 0x140038dbc
   1400256df:	mov    QWORD PTR [rsp+0x20],rax
   1400256e4:	call   QWORD PTR [rip+0xc936]        # 0x140032020
   1400256ea:	mov    DWORD PTR [rip+0x28f20],0x42a        # 0x14004e614
   1400256f4:	xor    eax,eax
   1400256f6:	mov    DWORD PTR [rip+0x28f18],0x426        # 0x14004e618
   140025700:	jmp    0x1400257c9
   140025705:	mov    rcx,QWORD PTR [rip+0x28ef4]        # 0x14004e600
   14002570c:	lea    rdx,[rip+0x28ef5]        # 0x14004e608
   140025713:	inc    DWORD PTR [rip+0x28f03]        # 0x14004e61c
   140025719:	mov    DWORD PTR [rip+0x28efd],0x493e0        # 0x14004e620
   140025723:	call   QWORD PTR [rip+0xc98f]        # 0x1400320b8
   140025729:	test   eax,eax
   14002572b:	jne    0x14002578b
   14002572d:	test   BYTE PTR [rip+0x28f58],0x1        # 0x14004e68c
   140025734:	je     0x14002578b
   140025736:	call   QWORD PTR [rip+0xcb4c]        # 0x140032288
   14002573c:	and    QWORD PTR [rsp+0x40],0x0
   140025742:	lea    rcx,[rsp+0x68]
   140025747:	mov    edx,0xf
   14002574c:	mov    DWORD PTR [rsp+0x68],eax
   140025750:	movzx  r9d,dx
   140025754:	lea    r8,[rip+0x17665]        # 0x14003cdc0
   14002575b:	lea    eax,[rdx-0xb]
   14002575e:	mov    edx,0x2b
   140025763:	mov    QWORD PTR [rsp+0x38],rax
   140025768:	mov    QWORD PTR [rsp+0x30],rcx
   14002576d:	mov    rcx,QWORD PTR [rip+0x28f0c]        # 0x14004e680
   140025774:	mov    QWORD PTR [rsp+0x28],rax
   140025779:	lea    rax,[rip+0x1363c]        # 0x140038dbc
   140025780:	mov    QWORD PTR [rsp+0x20],rax
   140025785:	call   QWORD PTR [rip+0xc895]        # 0x140032020
   14002578b:	or     eax,0xffffffff
   14002578e:	lock xadd DWORD PTR [rip+0x28e62],eax        # 0x14004e5f8
   140025796:	cmp    eax,0x1
   140025799:	jne    0x1400257c4
   14002579b:	mov    edx,0x40000000
   1400257a0:	mov    eax,DWORD PTR [rip+0x28e52]        # 0x14004e5f8
   1400257a6:	mov    ecx,eax
   1400257a8:	or     ecx,edx
   1400257aa:	lock cmpxchg DWORD PTR [rip+0x28e46],ecx        # 0x14004e5f8
   1400257b2:	jne    0x1400257a0
   1400257b4:	test   edx,eax
   1400257b6:	jne    0x1400257c4
   1400257b8:	lea    rcx,[rip+0x28e31]        # 0x14004e5f0
   1400257bf:	call   0x140025480
   1400257c4:	mov    eax,0x1
   1400257c9:	add    rsp,0x58
   1400257cd:	ret    
   1400257ce:	int3   
   1400257cf:	int3   
   1400257d0:	int3   
   1400257d1:	int3   
   1400257d2:	int3   
   1400257d3:	int3   
   1400257d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400257d9:	push   rbx
   1400257da:	sub    rsp,0x50
   1400257de:	lock add DWORD PTR [rip+0x28e12],0x1        # 0x14004e5f8
   1400257e6:	js     0x14002582e
   1400257e8:	or     eax,0xffffffff
   1400257eb:	lock xadd DWORD PTR [rip+0x28e05],eax        # 0x14004e5f8
   1400257f3:	cmp    eax,0x1
   1400257f6:	jne    0x140025957
   1400257fc:	mov    edx,0x40000000
   140025801:	mov    eax,DWORD PTR [rip+0x28df1]        # 0x14004e5f8
   140025807:	mov    ecx,eax
   140025809:	or     ecx,edx
   14002580b:	lock cmpxchg DWORD PTR [rip+0x28de5],ecx        # 0x14004e5f8
   140025813:	jne    0x140025801
   140025815:	test   edx,eax
   140025817:	jne    0x140025957
   14002581d:	lea    rcx,[rip+0x28dcc]        # 0x14004e5f0
   140025824:	add    rsp,0x50
   140025828:	pop    rbx
   140025829:	jmp    0x140025480
   14002582e:	mov    rcx,QWORD PTR [rip+0x28dcb]        # 0x14004e600
   140025835:	lea    rdx,[rip+0x28dcc]        # 0x14004e608
   14002583c:	and    DWORD PTR [rip+0x28dd9],0x0        # 0x14004e61c
   140025843:	mov    ebx,0x4
   140025848:	and    DWORD PTR [rip+0x28dd1],0x0        # 0x14004e620
   14002584f:	mov    DWORD PTR [rip+0x28db7],ebx        # 0x14004e60c
   140025855:	mov    DWORD PTR [rip+0x28db1],0x1        # 0x14004e610
   14002585f:	call   QWORD PTR [rip+0xc853]        # 0x1400320b8
   140025865:	test   eax,eax
   140025867:	jne    0x1400258c0
   140025869:	test   BYTE PTR [rip+0x28e1c],0x1        # 0x14004e68c
   140025870:	je     0x1400258c0
   140025872:	call   QWORD PTR [rip+0xca10]        # 0x140032288
   140025878:	and    QWORD PTR [rsp+0x40],0x0
   14002587e:	lea    ecx,[rbx+0xd]
   140025881:	mov    DWORD PTR [rsp+0x60],eax
   140025885:	lea    r8,[rip+0x17534]        # 0x14003cdc0
   14002588c:	mov    QWORD PTR [rsp+0x38],rbx
   140025891:	lea    rax,[rsp+0x60]
   140025896:	mov    QWORD PTR [rsp+0x30],rax
   14002589b:	lea    edx,[rbx+0x27]
   14002589e:	lea    rax,[rip+0x13517]        # 0x140038dbc
   1400258a5:	movzx  r9d,cx
   1400258a9:	mov    rcx,QWORD PTR [rip+0x28dd0]        # 0x14004e680
   1400258b0:	mov    QWORD PTR [rsp+0x28],rbx
   1400258b5:	mov    QWORD PTR [rsp+0x20],rax
   1400258ba:	call   QWORD PTR [rip+0xc760]        # 0x140032020
   1400258c0:	or     eax,0xffffffff
   1400258c3:	lock xadd DWORD PTR [rip+0x28d2d],eax        # 0x14004e5f8
   1400258cb:	cmp    eax,0x1
   1400258ce:	jne    0x1400258f9
   1400258d0:	mov    edx,0x40000000
   1400258d5:	mov    eax,DWORD PTR [rip+0x28d1d]        # 0x14004e5f8
   1400258db:	mov    ecx,eax
   1400258dd:	or     ecx,edx
   1400258df:	lock cmpxchg DWORD PTR [rip+0x28d11],ecx        # 0x14004e5f8
   1400258e7:	jne    0x1400258d5
   1400258e9:	test   edx,eax
   1400258eb:	jne    0x1400258f9
   1400258ed:	lea    rcx,[rip+0x28cfc]        # 0x14004e5f0
   1400258f4:	call   0x140025480
   1400258f9:	mov    rax,QWORD PTR [rip+0x28cf0]        # 0x14004e5f0
   140025900:	mov    rbx,QWORD PTR [rax+0x8]
   140025904:	mov    rcx,rbx
   140025907:	call   QWORD PTR [rip+0xcd9b]        # 0x1400326a8
   14002590d:	lea    rcx,[rip+0x28cdc]        # 0x14004e5f0
   140025914:	call   rbx
   140025916:	test   eax,eax
   140025918:	jne    0x14002593d
   14002591a:	mov    rcx,QWORD PTR [rip+0x28d07]        # 0x14004e628
   140025921:	mov    r8d,0x1
   140025927:	or     edx,0xffffffff
   14002592a:	call   QWORD PTR [rip+0xc988]        # 0x1400322b8
   140025930:	cmp    eax,0xc0
   140025935:	je     0x14002591a
   140025937:	add    rsp,0x50
   14002593b:	pop    rbx
   14002593c:	ret    
   14002593d:	mov    edx,0x1
   140025942:	mov    DWORD PTR [rip+0x28cc8],0x42a        # 0x14004e614
   14002594c:	mov    DWORD PTR [rip+0x28cc6],eax        # 0x14004e618
   140025952:	call   0x1400254fc
   140025957:	add    rsp,0x50
   14002595b:	pop    rbx
   14002595c:	ret    
   14002595d:	int3   
   14002595e:	int3   
   14002595f:	int3   
   140025960:	int3   
   140025961:	int3   
   140025962:	int3   
   140025963:	int3   
   140025964:	mov    QWORD PTR [rsp+0x8],rbx
   140025969:	mov    QWORD PTR [rsp+0x18],rsi
   14002596e:	mov    QWORD PTR [rsp+0x20],rdi
   140025973:	push   r12
   140025975:	sub    rsp,0x50
   140025979:	mov    edi,DWORD PTR [rip+0x28c79]        # 0x14004e5f8
   14002597f:	lea    eax,[rdx+rdx*1]
   140025982:	and    edi,0x3fffffff
   140025988:	mov    DWORD PTR [rip+0x28c8a],0x1        # 0x14004e61c
   140025992:	and    DWORD PTR [rip+0x28c77],0x0        # 0x14004e610
   140025999:	mov    esi,edx
   14002599b:	mov    DWORD PTR [rip+0x28c7f],eax        # 0x14004e620
   1400259a1:	mov    r12d,0x4
   1400259a7:	mov    rcx,QWORD PTR [rip+0x28c52]        # 0x14004e600
   1400259ae:	lea    rdx,[rip+0x28c53]        # 0x14004e608
   1400259b5:	lea    rbx,[rip+0x13400]        # 0x140038dbc
   1400259bc:	call   QWORD PTR [rip+0xc6f6]        # 0x1400320b8
   1400259c2:	test   eax,eax
   1400259c4:	jne    0x140025a18
   1400259c6:	test   BYTE PTR [rip+0x28cbf],0x1        # 0x14004e68c
   1400259cd:	je     0x140025a18
   1400259cf:	call   QWORD PTR [rip+0xc8b3]        # 0x140032288
   1400259d5:	and    QWORD PTR [rsp+0x40],0x0
   1400259db:	lea    r8,[rip+0x173de]        # 0x14003cdc0
   1400259e2:	mov    ecx,0x12
   1400259e7:	mov    QWORD PTR [rsp+0x38],r12
   1400259ec:	mov    DWORD PTR [rsp+0x68],eax
   1400259f0:	lea    rax,[rsp+0x68]
   1400259f5:	mov    QWORD PTR [rsp+0x30],rax
   1400259fa:	movzx  r9d,cx
   1400259fe:	lea    edx,[rcx+0x19]
   140025a01:	mov    QWORD PTR [rsp+0x28],r12
   140025a06:	mov    rcx,QWORD PTR [rip+0x28c73]        # 0x14004e680
   140025a0d:	mov    QWORD PTR [rsp+0x20],rbx
   140025a12:	call   QWORD PTR [rip+0xc608]        # 0x140032020
   140025a18:	mov    rcx,QWORD PTR [rip+0x28c11]        # 0x14004e630
   140025a1f:	mov    edx,esi
   140025a21:	call   QWORD PTR [rip+0xc759]        # 0x140032180
   140025a27:	cmp    eax,0x102
   140025a2c:	jne    0x140025a9f
   140025a2e:	mov    ebx,DWORD PTR [rip+0x28bc4]        # 0x14004e5f8
   140025a34:	and    ebx,0x3fffffff
   140025a3a:	cmp    ebx,edi
   140025a3c:	jl     0x140025a92
   140025a3e:	test   BYTE PTR [rip+0x28c47],0x1        # 0x14004e68c
   140025a45:	je     0x140025a7e
   140025a47:	and    QWORD PTR [rsp+0x30],0x0
   140025a4d:	lea    rcx,[rip+0x13368]        # 0x140038dbc
   140025a54:	mov    eax,0x13
   140025a59:	mov    QWORD PTR [rsp+0x28],r12
   140025a5e:	mov    QWORD PTR [rsp+0x20],rcx
   140025a63:	lea    r8,[rip+0x17356]        # 0x14003cdc0
   140025a6a:	mov    rcx,QWORD PTR [rip+0x28c0f]        # 0x14004e680
   140025a71:	movzx  r9d,ax
   140025a75:	lea    edx,[rax+0x18]
   140025a78:	call   QWORD PTR [rip+0xc5a2]        # 0x140032020
   140025a7e:	call   QWORD PTR [rip+0xc654]        # 0x1400320d8
   140025a84:	mov    rcx,rax
   140025a87:	mov    edx,0x2
   140025a8c:	call   QWORD PTR [rip+0xc756]        # 0x1400321e8
   140025a92:	inc    DWORD PTR [rip+0x28b84]        # 0x14004e61c
   140025a98:	mov    edi,ebx
   140025a9a:	jmp    0x1400259a7
   140025a9f:	mov    rbx,QWORD PTR [rsp+0x60]
   140025aa4:	mov    rsi,QWORD PTR [rsp+0x70]
   140025aa9:	mov    rdi,QWORD PTR [rsp+0x78]
   140025aae:	add    rsp,0x50
   140025ab2:	pop    r12
   140025ab4:	ret    
   140025ab5:	int3   
   140025ab6:	int3   
   140025ab7:	int3   
   140025ab8:	int3   
   140025ab9:	int3   
   140025aba:	int3   
   140025abb:	int3   
   140025abc:	mov    rax,rsp
   140025abf:	mov    QWORD PTR [rax+0x8],rbx
   140025ac3:	mov    QWORD PTR [rax+0x10],rbp
   140025ac7:	mov    QWORD PTR [rax+0x20],rsi
   140025acb:	mov    QWORD PTR [rax+0x18],r8
   140025acf:	push   rdi
   140025ad0:	push   r13
   140025ad2:	push   r14
   140025ad4:	sub    rsp,0x50
   140025ad8:	xor    esi,esi
   140025ada:	mov    DWORD PTR [rip+0x28b24],0x10        # 0x14004e608
   140025ae4:	mov    rbx,rdx
   140025ae7:	mov    QWORD PTR [rip+0x28b1a],0x2        # 0x14004e60c
   140025af2:	xor    r9d,r9d
   140025af5:	mov    QWORD PTR [rip+0x28b18],rsi        # 0x14004e614
   140025afc:	xor    r8d,r8d
   140025aff:	mov    QWORD PTR [rip+0x28b16],rsi        # 0x14004e61c
   140025b06:	lea    ebp,[rsi+0x1]
   140025b09:	xor    ecx,ecx
   140025b0b:	mov    edx,ebp
   140025b0d:	call   QWORD PTR [rip+0xc685]        # 0x140032198
   140025b13:	mov    QWORD PTR [rip+0x28b16],rax        # 0x14004e630
   140025b1a:	lea    r14d,[rsi+0x4]
   140025b1e:	lea    r13,[rip+0x13297]        # 0x140038dbc
   140025b25:	test   rax,rax
   140025b28:	jne    0x140025b88
   140025b2a:	test   BYTE PTR [rip+0x28b5b],bpl        # 0x14004e68c
   140025b31:	je     0x140025b81
   140025b33:	call   QWORD PTR [rip+0xc74f]        # 0x140032288
   140025b39:	lea    ecx,[rsi+0xa]
   140025b3c:	mov    QWORD PTR [rsp+0x40],rsi
   140025b41:	lea    r8,[rip+0x17278]        # 0x14003cdc0
   140025b48:	mov    QWORD PTR [rsp+0x38],r14
   140025b4d:	mov    edx,0x2b
   140025b52:	mov    DWORD PTR [rsp+0x80],eax
   140025b59:	lea    rax,[rsp+0x80]
   140025b61:	mov    QWORD PTR [rsp+0x30],rax
   140025b66:	movzx  r9d,cx
   140025b6a:	mov    rcx,QWORD PTR [rip+0x28b0f]        # 0x14004e680
   140025b71:	mov    QWORD PTR [rsp+0x28],r14
   140025b76:	mov    QWORD PTR [rsp+0x20],r13
   140025b7b:	call   QWORD PTR [rip+0xc49f]        # 0x140032020
   140025b81:	mov    edi,esi
   140025b83:	jmp    0x140025c68
   140025b88:	xor    r9d,r9d
   140025b8b:	xor    r8d,r8d
   140025b8e:	mov    edx,ebp
   140025b90:	xor    ecx,ecx
   140025b92:	call   QWORD PTR [rip+0xc600]        # 0x140032198
   140025b98:	mov    QWORD PTR [rip+0x28a89],rax        # 0x14004e628
   140025b9f:	test   rax,rax
   140025ba2:	jne    0x140025bba
   140025ba4:	test   BYTE PTR [rip+0x28ae1],bpl        # 0x14004e68c
   140025bab:	je     0x140025b81
   140025bad:	call   QWORD PTR [rip+0xc6d5]        # 0x140032288
   140025bb3:	mov    ecx,0xb
   140025bb8:	jmp    0x140025b3c
   140025bba:	xor    r8d,r8d
   140025bbd:	lea    rdx,[rip+0xfffffffffffde2dc]        # 0x140003ea0
   140025bc4:	mov    rcx,rbx
   140025bc7:	call   QWORD PTR [rip+0xc4e3]        # 0x1400320b0
   140025bcd:	mov    QWORD PTR [rip+0x28a2c],rax        # 0x14004e600
   140025bd4:	test   rax,rax
   140025bd7:	jne    0x140025bf2
   140025bd9:	test   BYTE PTR [rip+0x28aac],bpl        # 0x14004e68c
   140025be0:	je     0x140025b81
   140025be2:	call   QWORD PTR [rip+0xc6a0]        # 0x140032288
   140025be8:	mov    ecx,0xc
   140025bed:	jmp    0x140025b3c
   140025bf2:	call   0x140025658
   140025bf7:	mov    rcx,QWORD PTR [rip+0x289f2]        # 0x14004e5f0
   140025bfe:	mov    edi,eax
   140025c00:	mov    rbx,QWORD PTR [rcx]
   140025c03:	mov    rcx,rbx
   140025c06:	call   QWORD PTR [rip+0xca9c]        # 0x1400326a8
   140025c0c:	lea    rcx,[rip+0x289dd]        # 0x14004e5f0
   140025c13:	call   rbx
   140025c15:	test   eax,eax
   140025c17:	je     0x140025c20
   140025c19:	call   0x1400257d4
   140025c1e:	jmp    0x140025c27
   140025c20:	mov    edx,ebp
   140025c22:	call   0x1400254fc
   140025c27:	mov    rax,QWORD PTR [rip+0x289c2]        # 0x14004e5f0
   140025c2e:	mov    rbx,QWORD PTR [rax+0x10]
   140025c32:	mov    rcx,rbx
   140025c35:	call   QWORD PTR [rip+0xca6d]        # 0x1400326a8
   140025c3b:	lea    rcx,[rip+0x289ae]        # 0x14004e5f0
   140025c42:	call   rbx
   140025c44:	mov    edx,eax
   140025c46:	call   0x140025964
   140025c4b:	mov    rax,QWORD PTR [rip+0x2899e]        # 0x14004e5f0
   140025c52:	mov    rbx,QWORD PTR [rax+0x18]
   140025c56:	mov    rcx,rbx
   140025c59:	call   QWORD PTR [rip+0xca49]        # 0x1400326a8
   140025c5f:	lea    rcx,[rip+0x2898a]        # 0x14004e5f0
   140025c66:	call   rbx
   140025c68:	mov    rax,QWORD PTR [rip+0x289b9]        # 0x14004e628
   140025c6f:	test   rax,rax
   140025c72:	je     0x140025c84
   140025c74:	mov    rcx,rax
   140025c77:	call   QWORD PTR [rip+0xc4db]        # 0x140032158
   140025c7d:	mov    QWORD PTR [rip+0x289a4],rsi        # 0x14004e628
   140025c84:	mov    rax,QWORD PTR [rip+0x289a5]        # 0x14004e630
   140025c8b:	test   rax,rax
   140025c8e:	je     0x140025ca0
   140025c90:	mov    rcx,rax
   140025c93:	call   QWORD PTR [rip+0xc4bf]        # 0x140032158
   140025c99:	mov    QWORD PTR [rip+0x28990],rsi        # 0x14004e630
   140025ca0:	test   edi,edi
   140025ca2:	je     0x140025d38
   140025ca8:	mov    rcx,QWORD PTR [rip+0x28951]        # 0x14004e600
   140025caf:	lea    rdx,[rip+0x28952]        # 0x14004e608
   140025cb6:	mov    QWORD PTR [rip+0x2894f],rbp        # 0x14004e60c
   140025cbd:	mov    QWORD PTR [rip+0x28958],rsi        # 0x14004e61c
   140025cc4:	call   QWORD PTR [rip+0xc3ee]        # 0x1400320b8
   140025cca:	test   eax,eax
   140025ccc:	jne    0x140025d38
   140025cce:	call   QWORD PTR [rip+0xc5b4]        # 0x140032288
   140025cd4:	mov    ebx,eax
   140025cd6:	test   BYTE PTR [rip+0x289af],bpl        # 0x14004e68c
   140025cdd:	je     0x140025d27
   140025cdf:	mov    QWORD PTR [rsp+0x40],rsi
   140025ce4:	lea    r8,[rip+0x170d5]        # 0x14003cdc0
   140025ceb:	mov    ecx,0x14
   140025cf0:	mov    QWORD PTR [rsp+0x38],r14
   140025cf5:	mov    DWORD PTR [rsp+0x80],eax
   140025cfc:	lea    rax,[rsp+0x80]
   140025d04:	mov    QWORD PTR [rsp+0x30],rax
   140025d09:	movzx  r9d,cx
   140025d0d:	lea    edx,[rcx+0x17]
   140025d10:	mov    QWORD PTR [rsp+0x28],r14
   140025d15:	mov    rcx,QWORD PTR [rip+0x28964]        # 0x14004e680
   140025d1c:	mov    QWORD PTR [rsp+0x20],r13
   140025d21:	call   QWORD PTR [rip+0xc2f9]        # 0x140032020
   140025d27:	call   QWORD PTR [rip+0xc3ab]        # 0x1400320d8
   140025d2d:	mov    rcx,rax
   140025d30:	mov    edx,ebx
   140025d32:	call   QWORD PTR [rip+0xc4b0]        # 0x1400321e8
   140025d38:	lea    r11,[rsp+0x50]
   140025d3d:	mov    rbx,QWORD PTR [r11+0x20]
   140025d41:	mov    rbp,QWORD PTR [r11+0x28]
   140025d45:	mov    rsi,QWORD PTR [r11+0x38]
   140025d49:	mov    rsp,r11
   140025d4c:	pop    r14
   140025d4e:	pop    r13
   140025d50:	pop    rdi
   140025d51:	ret    
   140025d52:	int3   
   140025d53:	int3   
   140025d54:	int3   
   140025d55:	int3   
   140025d56:	int3   
   140025d57:	int3   
   140025d58:	sub    rsp,0x58
   140025d5c:	mov    rax,QWORD PTR [rsp+0x80]
   140025d64:	xor    r11d,r11d
   140025d67:	mov    r10,rcx
   140025d6a:	test   rax,rax
   140025d6d:	je     0x140025d93
   140025d6f:	cmp    WORD PTR [rax],r11w
   140025d73:	jne    0x140025d7b
   140025d75:	lea    ecx,[r11+0x10]
   140025d79:	jmp    0x140025d98
   140025d7b:	or     rcx,0xffffffffffffffff
   140025d7f:	inc    rcx
   140025d82:	cmp    WORD PTR [rax+rcx*2],r11w
   140025d87:	jne    0x140025d7f
   140025d89:	lea    rcx,[rcx*2+0x2]
   140025d91:	jmp    0x140025d98
   140025d93:	mov    ecx,0xa
   140025d98:	test   rax,rax
   140025d9b:	je     0x140025dae
   140025d9d:	cmp    WORD PTR [rax],r11w
   140025da1:	lea    r9,[rip+0x17028]        # 0x14003cdd0
   140025da8:	cmove  rax,r9
   140025dac:	jmp    0x140025db5
   140025dae:	lea    rax,[rip+0xf6eb]        # 0x1400354a0
   140025db5:	mov    QWORD PTR [rsp+0x40],r11
   140025dba:	mov    QWORD PTR [rsp+0x38],rcx
   140025dbf:	mov    rcx,r10
   140025dc2:	mov    QWORD PTR [rsp+0x30],rax
   140025dc7:	lea    rax,[rip+0x12fee]        # 0x140038dbc
   140025dce:	movzx  r9d,dx
   140025dd2:	mov    edx,0x2b
   140025dd7:	mov    QWORD PTR [rsp+0x28],0x4
   140025de0:	mov    QWORD PTR [rsp+0x20],rax
   140025de5:	call   QWORD PTR [rip+0xc235]        # 0x140032020
   140025deb:	add    rsp,0x58
   140025def:	ret    
   140025df0:	int3   
   140025df1:	int3   
   140025df2:	int3   
   140025df3:	int3   
   140025df4:	int3   
   140025df5:	int3   
   140025df6:	int3   
   140025df7:	int3   
   140025df8:	sub    rsp,0x58
   140025dfc:	mov    eax,DWORD PTR [rip+0x2a43a]        # 0x14005023c
   140025e02:	test   eax,eax
   140025e04:	jne    0x140025ea7
   140025e0a:	and    QWORD PTR [rsp+0x68],0x0
   140025e10:	lea    r8,[rsp+0x68]
   140025e15:	lea    rdx,[rip+0x16fc4]        # 0x14003cde0
   140025e1c:	lea    ecx,[rax+0x2]
   140025e1f:	call   QWORD PTR [rip+0xc443]        # 0x140032268
   140025e25:	mov    DWORD PTR [rip+0x2a411],eax        # 0x14005023c
   140025e2b:	test   eax,eax
   140025e2d:	jne    0x140025e4a
   140025e2f:	lea    r8,[rsp+0x68]
   140025e34:	lea    rdx,[rip+0x16fdd]        # 0x14003ce18
   140025e3b:	lea    ecx,[rax+0x2]
   140025e3e:	call   QWORD PTR [rip+0xc424]        # 0x140032268
   140025e44:	mov    DWORD PTR [rip+0x2a3f2],eax        # 0x14005023c
   140025e4a:	mov    edx,0x4
   140025e4f:	test   BYTE PTR [rip+0x28837],dl        # 0x14004e68c
   140025e55:	je     0x140025ea5
   140025e57:	and    QWORD PTR [rsp+0x40],0x0
   140025e5d:	lea    ecx,[rdx+0x6]
   140025e60:	mov    QWORD PTR [rsp+0x38],rdx
   140025e65:	lea    r8,[rip+0x16fd4]        # 0x14003ce40
   140025e6c:	mov    DWORD PTR [rsp+0x60],eax
   140025e70:	lea    rax,[rsp+0x60]
   140025e75:	mov    QWORD PTR [rsp+0x30],rax
   140025e7a:	lea    rax,[rip+0x12f3b]        # 0x140038dbc
   140025e81:	mov    QWORD PTR [rsp+0x28],rdx
   140025e86:	lea    edx,[rcx+0x21]
   140025e89:	movzx  r9d,cx
   140025e8d:	mov    rcx,QWORD PTR [rip+0x287ec]        # 0x14004e680
   140025e94:	mov    QWORD PTR [rsp+0x20],rax
   140025e99:	call   QWORD PTR [rip+0xc181]        # 0x140032020
   140025e9f:	mov    eax,DWORD PTR [rip+0x2a397]        # 0x14005023c
   140025ea5:	test   eax,eax
   140025ea7:	setne  al
   140025eaa:	add    rsp,0x58
   140025eae:	ret    
   140025eaf:	int3   
   140025eb0:	int3   
   140025eb1:	int3   
   140025eb2:	int3   
   140025eb3:	int3   
   140025eb4:	int3   
   140025eb5:	int3   
   140025eb6:	int3   
   140025eb7:	int3   
   140025eb8:	mov    r11,rsp
   140025ebb:	mov    QWORD PTR [r11+0x18],rbx
   140025ebf:	mov    QWORD PTR [r11+0x20],rsi
   140025ec3:	push   rdi
   140025ec4:	sub    rsp,0x60
   140025ec8:	mov    rdi,rcx
   140025ecb:	test   rcx,rcx
   140025ece:	jne    0x140025f16
   140025ed0:	test   BYTE PTR [rip+0x287b5],0x1        # 0x14004e68c
   140025ed7:	je     0x140025fcd
   140025edd:	and    QWORD PTR [r11-0x38],rdi
   140025ee1:	lea    eax,[rdi+0x4]
   140025ee4:	mov    QWORD PTR [r11-0x40],rax
   140025ee8:	lea    ecx,[rdi+0xe]
   140025eeb:	lea    rax,[rip+0x12eca]        # 0x140038dbc
   140025ef2:	movzx  r9d,cx
   140025ef6:	mov    rcx,QWORD PTR [rip+0x28783]        # 0x14004e680
   140025efd:	lea    r8,[rip+0x16f4c]        # 0x14003ce50
   140025f04:	lea    edx,[rdi+0x2b]
   140025f07:	mov    QWORD PTR [r11-0x48],rax
   140025f0b:	call   QWORD PTR [rip+0xc10f]        # 0x140032020
   140025f11:	jmp    0x140025fcd
   140025f16:	mov    ecx,DWORD PTR [rcx+0x40]
   140025f19:	call   QWORD PTR [rip+0xc779]        # 0x140032698
   140025f1f:	test   eax,eax
   140025f21:	jns    0x140025f91
   140025f23:	test   BYTE PTR [rip+0x28762],0x1        # 0x14004e68c
   140025f2a:	je     0x140025f91
   140025f2c:	and    QWORD PTR [rsp+0x50],0x0
   140025f32:	lea    rcx,[rsp+0x70]
   140025f37:	mov    edx,0xb
   140025f3c:	mov    DWORD PTR [rsp+0x70],eax
   140025f40:	mov    eax,DWORD PTR [rdi+0x40]
   140025f43:	lea    r8,[rip+0x16f06]        # 0x14003ce50
   140025f4a:	mov    DWORD PTR [rsp+0x78],eax
   140025f4e:	movzx  r9d,dx
   140025f52:	lea    eax,[rdx-0x7]
   140025f55:	mov    edx,0x2b
   140025f5a:	mov    QWORD PTR [rsp+0x48],rax
   140025f5f:	mov    QWORD PTR [rsp+0x40],rcx
   140025f64:	lea    rcx,[rsp+0x78]
   140025f69:	mov    QWORD PTR [rsp+0x38],rax
   140025f6e:	mov    QWORD PTR [rsp+0x30],rcx
   140025f73:	mov    rcx,QWORD PTR [rip+0x28706]        # 0x14004e680
   140025f7a:	mov    QWORD PTR [rsp+0x28],rax
   140025f7f:	lea    rax,[rip+0x12e36]        # 0x140038dbc
   140025f86:	mov    QWORD PTR [rsp+0x20],rax
   140025f8b:	call   QWORD PTR [rip+0xc08f]        # 0x140032020
   140025f91:	and    DWORD PTR [rdi+0x40],0x0
   140025f95:	mov    rsi,QWORD PTR [rdi+0x48]
   140025f99:	test   rsi,rsi
   140025f9c:	je     0x140025fb8
   140025f9e:	mov    rax,QWORD PTR [rsi]
   140025fa1:	mov    rbx,QWORD PTR [rax+0x10]
   140025fa5:	mov    rcx,rbx
   140025fa8:	call   QWORD PTR [rip+0xc6fa]        # 0x1400326a8
   140025fae:	mov    rcx,rsi
   140025fb1:	call   rbx
   140025fb3:	and    QWORD PTR [rdi+0x48],0x0
   140025fb8:	mov    rax,QWORD PTR [rdi]
   140025fbb:	mov    rbx,QWORD PTR [rax+0x10]
   140025fbf:	mov    rcx,rbx
   140025fc2:	call   QWORD PTR [rip+0xc6e0]        # 0x1400326a8
   140025fc8:	mov    rcx,rdi
   140025fcb:	call   rbx
   140025fcd:	lea    r11,[rsp+0x60]
   140025fd2:	mov    rbx,QWORD PTR [r11+0x20]
   140025fd6:	mov    rsi,QWORD PTR [r11+0x28]
   140025fda:	mov    rsp,r11
   140025fdd:	pop    rdi
   140025fde:	ret    
   140025fdf:	int3   
   140025fe0:	int3   
   140025fe1:	int3   
   140025fe2:	int3   
   140025fe3:	int3   
   140025fe4:	int3   
   140025fe5:	int3   
   140025fe6:	int3   
   140025fe7:	int3   
   140025fe8:	rex push rbx
   140025fea:	sub    rsp,0x50
   140025fee:	and    DWORD PTR [rsp+0x60],0x0
   140025ff3:	call   QWORD PTR [rip+0xc457]        # 0x140032450
   140025ff9:	mov    rbx,QWORD PTR [rax+0x30]
   140025ffd:	mov    rcx,rbx
   140026000:	call   QWORD PTR [rip+0xc6a2]        # 0x1400326a8
   140026006:	lea    rcx,[rsp+0x60]
   14002600b:	call   rbx
   14002600d:	test   eax,eax
   14002600f:	jns    0x140026070
   140026011:	test   BYTE PTR [rip+0x28674],0x1        # 0x14004e68c
   140026018:	je     0x140026067
   14002601a:	and    QWORD PTR [rsp+0x40],0x0
   140026020:	lea    r8,[rip+0x16f49]        # 0x14003cf70
   140026027:	mov    edx,0xb
   14002602c:	mov    DWORD PTR [rsp+0x68],eax
   140026030:	lea    rax,[rsp+0x68]
   140026035:	movzx  r9d,dx
   140026039:	lea    ecx,[rdx-0x7]
   14002603c:	mov    QWORD PTR [rsp+0x38],rcx
   140026041:	lea    edx,[rcx+0x27]
   140026044:	mov    QWORD PTR [rsp+0x30],rax
   140026049:	lea    rax,[rip+0x12d6c]        # 0x140038dbc
   140026050:	mov    QWORD PTR [rsp+0x28],rcx
   140026055:	mov    rcx,QWORD PTR [rip+0x28624]        # 0x14004e680
   14002605c:	mov    QWORD PTR [rsp+0x20],rax
   140026061:	call   QWORD PTR [rip+0xbfb9]        # 0x140032020
   140026067:	lea    rax,[rip+0x16e22]        # 0x14003ce90
   14002606e:	jmp    0x140026089
   140026070:	mov    eax,DWORD PTR [rsp+0x60]
   140026074:	dec    eax
   140026076:	cmp    eax,0x1
   140026079:	lea    rax,[rip+0x16e10]        # 0x14003ce90
   140026080:	ja     0x140026089
   140026082:	lea    rax,[rip+0x16e77]        # 0x14003cf00
   140026089:	add    rsp,0x50
   14002608d:	pop    rbx
   14002608e:	ret    
   14002608f:	int3   
   140026090:	int3   
   140026091:	int3   
   140026092:	int3   
   140026093:	int3   
   140026094:	int3   
   140026095:	int3   
   140026096:	int3   
   140026097:	int3   
   140026098:	sub    rsp,0x68
   14002609c:	mov    rax,QWORD PTR [rsp+0x90]
   1400260a4:	xor    r9d,r9d
   1400260a7:	mov    r10,rcx
   1400260aa:	test   rax,rax
   1400260ad:	je     0x1400260d3
   1400260af:	cmp    WORD PTR [rax],r9w
   1400260b3:	jne    0x1400260bb
   1400260b5:	lea    ecx,[r9+0x10]
   1400260b9:	jmp    0x1400260d8
   1400260bb:	or     rcx,0xffffffffffffffff
   1400260bf:	inc    rcx
   1400260c2:	cmp    WORD PTR [rax+rcx*2],r9w
   1400260c7:	jne    0x1400260bf
   1400260c9:	lea    rcx,[rcx*2+0x2]
   1400260d1:	jmp    0x1400260d8
   1400260d3:	mov    ecx,0xa
   1400260d8:	test   rax,rax
   1400260db:	je     0x1400260ee
   1400260dd:	cmp    WORD PTR [rax],r9w
   1400260e1:	lea    r8,[rip+0x16ce8]        # 0x14003cdd0
   1400260e8:	cmove  rax,r8
   1400260ec:	jmp    0x1400260f5
   1400260ee:	lea    rax,[rip+0xf3ab]        # 0x1400354a0
   1400260f5:	mov    QWORD PTR [rsp+0x50],r9
   1400260fa:	lea    r8,[rsp+0x98]
   140026102:	mov    r9d,0x4
   140026108:	mov    QWORD PTR [rsp+0x48],r9
   14002610d:	mov    QWORD PTR [rsp+0x40],r8
   140026112:	lea    r8,[rip+0x16e9f]        # 0x14003cfb8
   140026119:	mov    QWORD PTR [rsp+0x38],rcx
   14002611e:	mov    rcx,r10
   140026121:	mov    QWORD PTR [rsp+0x30],rax
   140026126:	lea    rax,[rip+0x12c8f]        # 0x140038dbc
   14002612d:	mov    QWORD PTR [rsp+0x28],r9
   140026132:	movzx  r9d,dx
   140026136:	mov    edx,0x2b
   14002613b:	mov    QWORD PTR [rsp+0x20],rax
   140026140:	call   QWORD PTR [rip+0xbeda]        # 0x140032020
   140026146:	add    rsp,0x68
   14002614a:	ret    
   14002614b:	int3   
   14002614c:	int3   
   14002614d:	int3   
   14002614e:	int3   
   14002614f:	int3   
   140026150:	int3   
   140026151:	int3   
   140026152:	int3   
   140026153:	int3   
   140026154:	mov    QWORD PTR [rsp+0x8],rbx
   140026159:	mov    QWORD PTR [rsp+0x10],rbp
   14002615e:	mov    BYTE PTR [rsp+0x18],r8b
   140026163:	push   rsi
   140026164:	push   rdi
   140026165:	push   r14
   140026167:	sub    rsp,0x40
   14002616b:	mov    r14,rdx
   14002616e:	mov    rsi,rcx
   140026171:	test   rcx,rcx
   140026174:	jne    0x140026180
   140026176:	mov    eax,0x80004003
   14002617b:	jmp    0x140026299
   140026180:	test   rdx,rdx
   140026183:	je     0x140026189
   140026185:	or     QWORD PTR [rdx],0xffffffffffffffff
   140026189:	and    QWORD PTR [rsp+0x30],0x0
   14002618f:	xor    r9d,r9d
   140026192:	and    DWORD PTR [rsp+0x28],0x0
   140026197:	mov    edx,0x80000000
   14002619c:	mov    DWORD PTR [rsp+0x20],0x3
   1400261a4:	lea    r8d,[r9+0x1]
   1400261a8:	call   QWORD PTR [rip+0xc0aa]        # 0x140032258
   1400261ae:	mov    rbx,rax
   1400261b1:	cmp    rax,0xffffffffffffffff
   1400261b5:	jne    0x1400261f3
   1400261b7:	call   QWORD PTR [rip+0xc0cb]        # 0x140032288
   1400261bd:	mov    ebp,eax
   1400261bf:	test   BYTE PTR [rip+0x284c6],0x1        # 0x14004e68c
   1400261c6:	je     0x1400261e0
   1400261c8:	mov    rcx,QWORD PTR [rip+0x284b1]        # 0x14004e680
   1400261cf:	lea    edx,[rbx+0xb]
   1400261d2:	mov    DWORD PTR [rsp+0x28],eax
   1400261d6:	mov    QWORD PTR [rsp+0x20],rsi
   1400261db:	call   0x140026098
   1400261e0:	movzx  edi,bp
   1400261e3:	or     edi,0x80070000
   1400261e9:	test   ebp,ebp
   1400261eb:	cmovle edi,ebp
   1400261ee:	jmp    0x140026288
   1400261f3:	and    DWORD PTR [rsp+0x70],0x0
   1400261f8:	call   QWORD PTR [rip+0xc252]        # 0x140032450
   1400261fe:	mov    rdi,QWORD PTR [rax+0xa0]
   140026205:	mov    rcx,rdi
   140026208:	call   QWORD PTR [rip+0xc49a]        # 0x1400326a8
   14002620e:	lea    r8,[rsp+0x70]
   140026213:	xor    edx,edx
   140026215:	lea    rcx,[rip+0x16d64]        # 0x14003cf80
   14002621c:	call   rdi
   14002621e:	cmp    DWORD PTR [rsp+0x70],0x0
   140026223:	je     0x1400262ac
   140026229:	mov    eax,DWORD PTR [rip+0x2845d]        # 0x14004e68c
   14002622f:	test   al,0x2
   140026231:	je     0x140026277
   140026233:	mov    rcx,QWORD PTR [rip+0x28446]        # 0x14004e680
   14002623a:	lea    r8,[rip+0x16d77]        # 0x14003cfb8
   140026241:	mov    edx,0xb
   140026246:	mov    QWORD PTR [rsp+0x20],rsi
   14002624b:	call   0x140025d58
   140026250:	mov    eax,DWORD PTR [rip+0x28436]        # 0x14004e68c
   140026256:	test   al,0x2
   140026258:	je     0x140026277
   14002625a:	mov    rcx,QWORD PTR [rip+0x2841f]        # 0x14004e680
   140026261:	lea    r8,[rip+0x16d50]        # 0x14003cfb8
   140026268:	mov    edx,0xc
   14002626d:	mov    QWORD PTR [rsp+0x20],rsi
   140026272:	call   0x140025d58
   140026277:	test   r14,r14
   14002627a:	je     0x140026286
   14002627c:	mov    rax,rbx
   14002627f:	or     rbx,0xffffffffffffffff
   140026283:	mov    QWORD PTR [r14],rax
   140026286:	xor    edi,edi
   140026288:	cmp    rbx,0xffffffffffffffff
   14002628c:	je     0x140026297
   14002628e:	mov    rcx,rbx
   140026291:	call   QWORD PTR [rip+0xbec1]        # 0x140032158
   140026297:	mov    eax,edi
   140026299:	mov    rbx,QWORD PTR [rsp+0x60]
   14002629e:	mov    rbp,QWORD PTR [rsp+0x68]
   1400262a3:	add    rsp,0x40
   1400262a7:	pop    r14
   1400262a9:	pop    rdi
   1400262aa:	pop    rsi
   1400262ab:	ret    
   1400262ac:	call   QWORD PTR [rip+0xc19e]        # 0x140032450
   1400262b2:	mov    rdi,QWORD PTR [rax+0x130]
   1400262b9:	mov    rcx,rdi
   1400262bc:	call   QWORD PTR [rip+0xc3e6]        # 0x1400326a8
   1400262c2:	xor    r8d,r8d
   1400262c5:	mov    rcx,rsi
   1400262c8:	lea    edx,[r8+0x4]
   1400262cc:	call   rdi
   1400262ce:	mov    edi,eax
   1400262d0:	test   eax,eax
   1400262d2:	jns    0x140026277
   1400262d4:	test   BYTE PTR [rip+0x283b1],0x1        # 0x14004e68c
   1400262db:	je     0x140026288
   1400262dd:	mov    rcx,QWORD PTR [rip+0x2839c]        # 0x14004e680
   1400262e4:	mov    edx,0xd
   1400262e9:	mov    DWORD PTR [rsp+0x28],eax
   1400262ed:	mov    QWORD PTR [rsp+0x20],rsi
   1400262f2:	call   0x140026098
   1400262f7:	jmp    0x140026288
   1400262f9:	int3   
   1400262fa:	int3   
   1400262fb:	int3   
   1400262fc:	int3   
   1400262fd:	int3   
   1400262fe:	int3   
   1400262ff:	int3   
   140026300:	mov    rax,rsp
   140026303:	push   rbp
   140026304:	push   rsi
   140026305:	push   rdi
   140026306:	push   r14
   140026308:	push   r15
   14002630a:	sub    rsp,0x90
   140026311:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140026319:	mov    QWORD PTR [rax+0x8],rbx
   14002631d:	mov    rax,QWORD PTR [rip+0x24cfc]        # 0x14004b020
   140026324:	xor    rax,rsp
   140026327:	mov    QWORD PTR [rsp+0x80],rax
   14002632f:	mov    rbp,r9
   140026332:	mov    r15,r8
   140026335:	mov    esi,ecx
   140026337:	and    QWORD PTR [rsp+0x30],0x0
   14002633d:	lea    rcx,[rsp+0x30]
   140026342:	call   0x1400278c4
   140026347:	mov    ebx,eax
   140026349:	test   eax,eax
   14002634b:	jns    0x140026390
   14002634d:	test   BYTE PTR [rip+0x28338],0x2        # 0x14004e68c
   140026354:	je     0x140026372
   140026356:	mov    edx,0xa
   14002635b:	mov    DWORD PTR [rsp+0x20],eax
   14002635f:	lea    r8,[rip+0x16d22]        # 0x14003d088
   140026366:	mov    rcx,QWORD PTR [rip+0x28313]        # 0x14004e680
   14002636d:	call   0x140024690
   140026372:	mov    edx,ebx
   140026374:	lea    rcx,[rsp+0x50]
   140026379:	call   0x140002064
   14002637e:	lea    rdx,[rip+0x22e03]        # 0x140049188
   140026385:	lea    rcx,[rsp+0x50]
   14002638a:	call   0x14002e2da
   14002638f:	int3   
   140026390:	mov    rdi,QWORD PTR [rsp+0x30]
   140026395:	test   rdi,rdi
   140026398:	je     0x1400263ae
   14002639a:	mov    rax,QWORD PTR [rdi]
   14002639d:	mov    rbx,QWORD PTR [rax]
   1400263a0:	mov    rcx,rbx
   1400263a3:	call   QWORD PTR [rip+0xc2ff]        # 0x1400326a8
   1400263a9:	mov    rcx,rdi
   1400263ac:	call   rbx
   1400263ae:	mov    QWORD PTR [rsp+0x30],rdi
   1400263b3:	mov    DWORD PTR [rdi+0x48],esi
   1400263b6:	and    QWORD PTR [rsp+0x38],0x0
   1400263bc:	mov    rsi,QWORD PTR [rdi+0x40]
   1400263c0:	test   rsi,rsi
   1400263c3:	je     0x1400263df
   1400263c5:	mov    rax,QWORD PTR [rsi]
   1400263c8:	mov    rbx,QWORD PTR [rax+0x10]
   1400263cc:	mov    rcx,rbx
   1400263cf:	call   QWORD PTR [rip+0xc2d3]        # 0x1400326a8
   1400263d5:	mov    rcx,rsi
   1400263d8:	call   rbx
   1400263da:	and    QWORD PTR [rdi+0x40],0x0
   1400263df:	and    QWORD PTR [rdi+0x40],0x0
   1400263e4:	mov    ecx,0x40
   1400263e9:	call   0x140023f10
   1400263ee:	mov    r14,rax
   1400263f1:	lea    rax,[rip+0xe8b8]        # 0x140034cb0
   1400263f8:	mov    QWORD PTR [r14],rax
   1400263fb:	and    DWORD PTR [r14+0x8],0x0
   140026400:	mov    DWORD PTR [r14+0x1c],0xf12192e
   140026408:	and    QWORD PTR [r14+0x38],0x0
   14002640d:	mov    rbx,QWORD PTR [rax+0x8]
   140026411:	mov    rcx,rbx
   140026414:	call   QWORD PTR [rip+0xc28e]        # 0x1400326a8
   14002641a:	mov    rcx,r14
   14002641d:	call   rbx
   14002641f:	nop
   140026420:	mov    rcx,r14
   140026423:	call   0x140027c98
   140026428:	mov    esi,eax
   14002642a:	test   eax,eax
   14002642c:	jns    0x140026445
   14002642e:	mov    rax,QWORD PTR [r14]
   140026431:	mov    rbx,QWORD PTR [rax+0x10]
   140026435:	mov    rcx,rbx
   140026438:	call   QWORD PTR [rip+0xc26a]        # 0x1400326a8
   14002643e:	mov    rcx,r14
   140026441:	call   rbx
   140026443:	jmp    0x14002644b
   140026445:	mov    QWORD PTR [rdi+0x40],r14
   140026449:	xor    esi,esi
   14002644b:	test   esi,esi
   14002644d:	jns    0x140026492
   14002644f:	test   BYTE PTR [rip+0x28236],0x2        # 0x14004e68c
   140026456:	je     0x140026474
   140026458:	mov    edx,0xb
   14002645d:	mov    DWORD PTR [rsp+0x20],esi
   140026461:	lea    r8,[rip+0x16c20]        # 0x14003d088
   140026468:	mov    rcx,QWORD PTR [rip+0x28211]        # 0x14004e680
   14002646f:	call   0x140024690
   140026474:	mov    edx,esi
   140026476:	lea    rcx,[rsp+0x50]
   14002647b:	call   0x140002064
   140026480:	lea    rdx,[rip+0x22d01]        # 0x140049188
   140026487:	lea    rcx,[rsp+0x50]
   14002648c:	call   0x14002e2da
   140026491:	int3   
   140026492:	lea    r14,[rdi+0x50]
   140026496:	mov    rsi,QWORD PTR [r14]
   140026499:	test   rsi,rsi
   14002649c:	je     0x1400264b7
   14002649e:	mov    rax,QWORD PTR [rsi]
   1400264a1:	mov    rbx,QWORD PTR [rax+0x10]
   1400264a5:	mov    rcx,rbx
   1400264a8:	call   QWORD PTR [rip+0xc1fa]        # 0x1400326a8
   1400264ae:	mov    rcx,rsi
   1400264b1:	call   rbx
   1400264b3:	and    QWORD PTR [r14],0x0
   1400264b7:	mov    rax,QWORD PTR [r15]
   1400264ba:	mov    rbx,QWORD PTR [rax+0x30]
   1400264be:	mov    rcx,rbx
   1400264c1:	call   QWORD PTR [rip+0xc1e1]        # 0x1400326a8
   1400264c7:	mov    rdx,r14
   1400264ca:	mov    rcx,r15
   1400264cd:	call   rbx
   1400264cf:	mov    ebx,eax
   1400264d1:	test   eax,eax
   1400264d3:	jns    0x140026518
   1400264d5:	test   BYTE PTR [rip+0x281b0],0x2        # 0x14004e68c
   1400264dc:	je     0x1400264fa
   1400264de:	mov    edx,0xc
   1400264e3:	mov    DWORD PTR [rsp+0x20],eax
   1400264e7:	lea    r8,[rip+0x16b9a]        # 0x14003d088
   1400264ee:	mov    rcx,QWORD PTR [rip+0x2818b]        # 0x14004e680
   1400264f5:	call   0x140024690
   1400264fa:	mov    edx,ebx
   1400264fc:	lea    rcx,[rsp+0x50]
   140026501:	call   0x140002064
   140026506:	lea    rdx,[rip+0x22c7b]        # 0x140049188
   14002650d:	lea    rcx,[rsp+0x50]
   140026512:	call   0x14002e2da
   140026517:	int3   
   140026518:	mov    QWORD PTR [rbp+0x0],rdi
   14002651c:	xor    ecx,ecx
   14002651e:	call   QWORD PTR [rip+0xbe2c]        # 0x140032350
   140026524:	nop
   140026525:	mov    rcx,QWORD PTR [rsp+0x80]
   14002652d:	xor    rcx,rsp
   140026530:	call   0x14002dd00
   140026535:	mov    rbx,QWORD PTR [rsp+0xc0]
   14002653d:	add    rsp,0x90
   140026544:	pop    r15
   140026546:	pop    r14
   140026548:	pop    rdi
   140026549:	pop    rsi
   14002654a:	pop    rbp
   14002654b:	ret    
   14002654c:	int3   
   14002654d:	int3   
   14002654e:	int3   
   14002654f:	int3   
   140026550:	int3   
   140026551:	int3   
   140026552:	int3   
   140026553:	int3   
   140026554:	int3   
   140026555:	int3   
   140026556:	int3   
   140026557:	int3   
   140026558:	int3   
   140026559:	int3   
   14002655a:	int3   
   14002655b:	int3   
   14002655c:	int3   
   14002655d:	int3   
   14002655e:	int3   
   14002655f:	int3   
   140026560:	mov    QWORD PTR [rsp+0x8],rbx
   140026565:	push   rdi
   140026566:	sub    rsp,0x20
   14002656a:	mov    ebx,edx
   14002656c:	mov    rdi,rcx
   14002656f:	call   0x140026598
   140026574:	test   bl,0x1
   140026577:	je     0x140026582
   140026579:	mov    rcx,rdi
   14002657c:	call   QWORD PTR [rip+0xc046]        # 0x1400325c8
   140026582:	mov    rax,rdi
   140026585:	mov    rbx,QWORD PTR [rsp+0x30]
   14002658a:	add    rsp,0x20
   14002658e:	pop    rdi
   14002658f:	ret    
   140026590:	int3   
   140026591:	int3   
   140026592:	int3   
   140026593:	int3   
   140026594:	int3   
   140026595:	int3   
   140026596:	int3   
   140026597:	int3   
   140026598:	mov    QWORD PTR [rsp+0x8],rbx
   14002659d:	mov    QWORD PTR [rsp+0x10],rsi
   1400265a2:	push   rdi
   1400265a3:	sub    rsp,0x20
   1400265a7:	lea    rax,[rip+0xe6da]        # 0x140034c88
   1400265ae:	mov    DWORD PTR [rcx+0x58],0x1
   1400265b5:	mov    QWORD PTR [rcx],rax
   1400265b8:	mov    rdi,rcx
   1400265bb:	mov    rsi,QWORD PTR [rcx+0x50]
   1400265bf:	test   rsi,rsi
   1400265c2:	je     0x1400265d9
   1400265c4:	mov    rax,QWORD PTR [rsi]
   1400265c7:	mov    rbx,QWORD PTR [rax+0x10]
   1400265cb:	mov    rcx,rbx
   1400265ce:	call   QWORD PTR [rip+0xc0d4]        # 0x1400326a8
   1400265d4:	mov    rcx,rsi
   1400265d7:	call   rbx
   1400265d9:	mov    rsi,QWORD PTR [rdi+0x40]
   1400265dd:	test   rsi,rsi
   1400265e0:	je     0x1400265f7
   1400265e2:	mov    rax,QWORD PTR [rsi]
   1400265e5:	mov    rbx,QWORD PTR [rax+0x10]
   1400265e9:	mov    rcx,rbx
   1400265ec:	call   QWORD PTR [rip+0xc0b6]        # 0x1400326a8
   1400265f2:	mov    rcx,rsi
   1400265f5:	call   rbx
   1400265f7:	lea    rcx,[rdi+0x10]
   1400265fb:	cmp    BYTE PTR [rcx+0x28],0x0
   1400265ff:	je     0x14002660b
   140026601:	mov    BYTE PTR [rcx+0x28],0x0
   140026605:	call   QWORD PTR [rip+0xbc6d]        # 0x140032278
   14002660b:	mov    rbx,QWORD PTR [rsp+0x30]
   140026610:	mov    rsi,QWORD PTR [rsp+0x38]
   140026615:	add    rsp,0x20
   140026619:	pop    rdi
   14002661a:	ret    
   14002661b:	int3   
   14002661c:	int3   
   14002661d:	int3   
   14002661e:	int3   
   14002661f:	int3   
   140026620:	int3   
   140026621:	int3   
   140026622:	int3   
   140026623:	int3   
   140026624:	rex push rbp
   140026626:	push   rbx
   140026627:	push   rdi
   140026628:	push   r12
   14002662a:	push   r13
   14002662c:	push   r14
   14002662e:	push   r15
   140026630:	lea    rbp,[rsp-0x27]
   140026635:	sub    rsp,0x100
   14002663c:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140026644:	mov    rax,QWORD PTR [rip+0x249d5]        # 0x14004b020
   14002664b:	xor    rax,rsp
   14002664e:	mov    QWORD PTR [rbp+0x17],rax
   140026652:	mov    rdi,r8
   140026655:	mov    r15,rdx
   140026658:	mov    r14,rcx
   14002665b:	xor    r13d,r13d
   14002665e:	lea    rcx,[rip+0x12757]        # 0x140038dbc
   140026665:	lea    r12d,[r13+0x4]
   140026669:	test   BYTE PTR [rip+0x2801c],r12b        # 0x14004e68c
   140026670:	je     0x1400266a0
   140026672:	lea    eax,[r13+0xd]
   140026676:	mov    QWORD PTR [rsp+0x30],r13
   14002667b:	mov    QWORD PTR [rsp+0x28],r12
   140026680:	mov    QWORD PTR [rsp+0x20],rcx
   140026685:	movzx  r9d,ax
   140026689:	lea    r8,[rip+0x169f8]        # 0x14003d088
   140026690:	lea    edx,[rax+0x1e]
   140026693:	mov    rcx,QWORD PTR [rip+0x27fe6]        # 0x14004e680
   14002669a:	call   QWORD PTR [rip+0xb980]        # 0x140032020
   1400266a0:	test   r14,r14
   1400266a3:	je     0x1400266b9
   1400266a5:	mov    rax,QWORD PTR [r14]
   1400266a8:	mov    rbx,QWORD PTR [rax]
   1400266ab:	mov    rcx,rbx
   1400266ae:	call   QWORD PTR [rip+0xbff4]        # 0x1400326a8
   1400266b4:	mov    rcx,r14
   1400266b7:	call   rbx
   1400266b9:	mov    QWORD PTR [rbp-0x31],r14
   1400266bd:	mov    QWORD PTR [rbp-0x71],r13
   1400266c1:	mov    rax,QWORD PTR [rdi]
   1400266c4:	mov    rbx,QWORD PTR [rax+0x18]
   1400266c8:	mov    rcx,rbx
   1400266cb:	call   QWORD PTR [rip+0xbfd7]        # 0x1400326a8
   1400266d1:	lea    rdx,[rbp-0x71]
   1400266d5:	mov    rcx,rdi
   1400266d8:	call   rbx
   1400266da:	mov    ebx,eax
   1400266dc:	test   eax,eax
   1400266de:	jns    0x140026721
   1400266e0:	test   BYTE PTR [rip+0x27fa5],0x2        # 0x14004e68c
   1400266e7:	je     0x140026705
   1400266e9:	mov    edx,0xe
   1400266ee:	mov    DWORD PTR [rsp+0x20],eax
   1400266f2:	lea    r8,[rip+0x1698f]        # 0x14003d088
   1400266f9:	mov    rcx,QWORD PTR [rip+0x27f80]        # 0x14004e680
   140026700:	call   0x140024690
   140026705:	mov    edx,ebx
   140026707:	lea    rcx,[rbp-0x11]
   14002670b:	call   0x140002064
   140026710:	lea    rdx,[rip+0x22a71]        # 0x140049188
   140026717:	lea    rcx,[rbp-0x11]
   14002671b:	call   0x14002e2da
   140026720:	int3   
   140026721:	mov    WORD PTR [rbp-0x79],r13w
   140026726:	mov    rbx,QWORD PTR [rbp-0x71]
   14002672a:	mov    rax,QWORD PTR [rbx]
   14002672d:	mov    rdi,QWORD PTR [rax+0x40]
   140026731:	mov    rcx,rdi
   140026734:	call   QWORD PTR [rip+0xbf6e]        # 0x1400326a8
   14002673a:	lea    rdx,[rbp-0x79]
   14002673e:	mov    rcx,rbx
   140026741:	call   rdi
   140026743:	test   eax,eax
   140026745:	jns    0x140026799
   140026747:	test   BYTE PTR [rip+0x27f3e],0x2        # 0x14004e68c
   14002674e:	je     0x140026799
   140026750:	mov    DWORD PTR [rsp+0x50],eax
   140026754:	mov    ecx,0xf
   140026759:	mov    QWORD PTR [rsp+0x40],r13
   14002675e:	mov    QWORD PTR [rsp+0x38],r12
   140026763:	lea    rax,[rsp+0x50]
   140026768:	mov    QWORD PTR [rsp+0x30],rax
   14002676d:	mov    QWORD PTR [rsp+0x28],r12
   140026772:	lea    rdx,[rip+0x12643]        # 0x140038dbc
   140026779:	mov    QWORD PTR [rsp+0x20],rdx
   14002677e:	movzx  r9d,cx
   140026782:	lea    r8,[rip+0x168ff]        # 0x14003d088
   140026789:	lea    edx,[rcx+0x1c]
   14002678c:	mov    rcx,QWORD PTR [rip+0x27eed]        # 0x14004e680
   140026793:	call   QWORD PTR [rip+0xb887]        # 0x140032020
   140026799:	mov    QWORD PTR [rbp-0x59],r13
   14002679d:	cmp    DWORD PTR [r14+0x48],0x2
   1400267a2:	jne    0x140026852
   1400267a8:	mov    rbx,QWORD PTR [rbp-0x71]
   1400267ac:	mov    rax,QWORD PTR [rbx]
   1400267af:	mov    rdi,QWORD PTR [rax+0x30]
   1400267b3:	mov    rcx,rdi
   1400267b6:	call   QWORD PTR [rip+0xbeec]        # 0x1400326a8
   1400267bc:	lea    rdx,[rbp-0x59]
   1400267c0:	mov    rcx,rbx
   1400267c3:	call   rdi
   1400267c5:	test   eax,eax
   1400267c7:	jns    0x140026852
   1400267cd:	test   BYTE PTR [rip+0x27eb8],0x2        # 0x14004e68c
   1400267d4:	je     0x14002681f
   1400267d6:	mov    DWORD PTR [rsp+0x50],eax
   1400267da:	mov    ecx,0x10
   1400267df:	mov    QWORD PTR [rsp+0x40],r13
   1400267e4:	mov    QWORD PTR [rsp+0x38],r12
   1400267e9:	lea    rax,[rsp+0x50]
   1400267ee:	mov    QWORD PTR [rsp+0x30],rax
   1400267f3:	mov    QWORD PTR [rsp+0x28],r12
   1400267f8:	lea    rax,[rip+0x125bd]        # 0x140038dbc
   1400267ff:	mov    QWORD PTR [rsp+0x20],rax
   140026804:	movzx  r9d,cx
   140026808:	lea    r8,[rip+0x16879]        # 0x14003d088
   14002680f:	lea    edx,[rcx+0x1b]
   140026812:	mov    rcx,QWORD PTR [rip+0x27e67]        # 0x14004e680
   140026819:	call   QWORD PTR [rip+0xb801]        # 0x140032020
   14002681f:	mov    rcx,QWORD PTR [rbp-0x59]
   140026823:	lea    rbx,[rip+0x1679e]        # 0x14003cfc8
   14002682a:	cmp    rbx,rcx
   14002682d:	je     0x140026852
   14002682f:	call   QWORD PTR [rip+0xbb1b]        # 0x140032350
   140026835:	mov    rcx,rbx
   140026838:	call   QWORD PTR [rip+0xbb22]        # 0x140032360
   14002683e:	mov    QWORD PTR [rbp-0x59],rax
   140026842:	test   rax,rax
   140026845:	jne    0x140026852
   140026847:	mov    ecx,0x8007000e
   14002684c:	call   0x140005d50
   140026851:	int3   
   140026852:	mov    WORD PTR [rbp-0x7d],r13w
   140026857:	mov    rbx,QWORD PTR [rbp-0x71]
   14002685b:	mov    rax,QWORD PTR [rbx]
   14002685e:	mov    rdi,QWORD PTR [rax+0x28]
   140026862:	mov    rcx,rdi
   140026865:	call   QWORD PTR [rip+0xbe3d]        # 0x1400326a8
   14002686b:	lea    rdx,[rbp-0x7d]
   14002686f:	mov    rcx,rbx
   140026872:	call   rdi
   140026874:	test   eax,eax
   140026876:	jns    0x1400268ca
   140026878:	test   BYTE PTR [rip+0x27e0d],0x2        # 0x14004e68c
   14002687f:	je     0x1400268ca
   140026881:	mov    DWORD PTR [rsp+0x50],eax
   140026885:	mov    ecx,0x11
   14002688a:	mov    QWORD PTR [rsp+0x40],r13
   14002688f:	mov    QWORD PTR [rsp+0x38],r12
   140026894:	lea    rax,[rsp+0x50]
   140026899:	mov    QWORD PTR [rsp+0x30],rax
   14002689e:	mov    QWORD PTR [rsp+0x28],r12
   1400268a3:	lea    rax,[rip+0x12512]        # 0x140038dbc
   1400268aa:	mov    QWORD PTR [rsp+0x20],rax
   1400268af:	movzx  r9d,cx
   1400268b3:	lea    r8,[rip+0x167ce]        # 0x14003d088
   1400268ba:	lea    edx,[rcx+0x1a]
   1400268bd:	mov    rcx,QWORD PTR [rip+0x27dbc]        # 0x14004e680
   1400268c4:	call   QWORD PTR [rip+0xb756]        # 0x140032020
   1400268ca:	mov    QWORD PTR [rbp-0x61],r13
   1400268ce:	cmp    DWORD PTR [r14+0x48],0x2
   1400268d3:	jne    0x140026985
   1400268d9:	mov    rbx,QWORD PTR [rbp-0x71]
   1400268dd:	mov    rax,QWORD PTR [rbx]
   1400268e0:	mov    rdi,QWORD PTR [rax+0x18]
   1400268e4:	mov    rcx,rdi
   1400268e7:	call   QWORD PTR [rip+0xbdbb]        # 0x1400326a8
   1400268ed:	lea    rdx,[rbp-0x61]
   1400268f1:	mov    rcx,rbx
   1400268f4:	call   rdi
   1400268f6:	test   eax,eax
   1400268f8:	jns    0x140026985
   1400268fe:	test   BYTE PTR [rip+0x27d87],0x2        # 0x14004e68c
   140026905:	je     0x140026952
   140026907:	mov    DWORD PTR [rsp+0x50],eax
   14002690b:	mov    edx,0x12
   140026910:	mov    QWORD PTR [rsp+0x40],r13
   140026915:	mov    QWORD PTR [rsp+0x38],r12
   14002691a:	lea    rax,[rsp+0x50]
   14002691f:	mov    QWORD PTR [rsp+0x30],rax
   140026924:	mov    QWORD PTR [rsp+0x28],r12
   140026929:	lea    rax,[rip+0x1248c]        # 0x140038dbc
   140026930:	mov    QWORD PTR [rsp+0x20],rax
   140026935:	movzx  r9d,dx
   140026939:	lea    r8,[rip+0x16748]        # 0x14003d088
   140026940:	mov    edx,0x2b
   140026945:	mov    rcx,QWORD PTR [rip+0x27d34]        # 0x14004e680
   14002694c:	call   QWORD PTR [rip+0xb6ce]        # 0x140032020
   140026952:	mov    rcx,QWORD PTR [rbp-0x61]
   140026956:	lea    rbx,[rip+0x1666b]        # 0x14003cfc8
   14002695d:	cmp    rbx,rcx
   140026960:	je     0x140026985
   140026962:	call   QWORD PTR [rip+0xb9e8]        # 0x140032350
   140026968:	mov    rcx,rbx
   14002696b:	call   QWORD PTR [rip+0xb9ef]        # 0x140032360
   140026971:	mov    QWORD PTR [rbp-0x61],rax
   140026975:	test   rax,rax
   140026978:	jne    0x140026985
   14002697a:	mov    ecx,0x8007000e
   14002697f:	call   0x140005d50
   140026984:	int3   
   140026985:	mov    BYTE PTR [rsp+0x58],r13b
   14002698a:	mov    rbx,QWORD PTR [rbp-0x71]
   14002698e:	mov    rax,QWORD PTR [rbx]
   140026991:	mov    rdi,QWORD PTR [rax+0x50]
   140026995:	mov    rcx,rdi
   140026998:	call   QWORD PTR [rip+0xbd0a]        # 0x1400326a8
   14002699e:	lea    rdx,[rsp+0x58]
   1400269a3:	mov    rcx,rbx
   1400269a6:	call   rdi
   1400269a8:	test   eax,eax
   1400269aa:	jns    0x1400269fe
   1400269ac:	test   BYTE PTR [rip+0x27cd9],0x2        # 0x14004e68c
   1400269b3:	je     0x1400269fe
   1400269b5:	mov    DWORD PTR [rsp+0x50],eax
   1400269b9:	mov    ecx,0x13
   1400269be:	mov    QWORD PTR [rsp+0x40],r13
   1400269c3:	mov    QWORD PTR [rsp+0x38],r12
   1400269c8:	lea    rax,[rsp+0x50]
   1400269cd:	mov    QWORD PTR [rsp+0x30],rax
   1400269d2:	mov    QWORD PTR [rsp+0x28],r12
   1400269d7:	lea    rax,[rip+0x123de]        # 0x140038dbc
   1400269de:	mov    QWORD PTR [rsp+0x20],rax
   1400269e3:	movzx  r9d,cx
   1400269e7:	lea    r8,[rip+0x1669a]        # 0x14003d088
   1400269ee:	lea    edx,[rcx+0x18]
   1400269f1:	mov    rcx,QWORD PTR [rip+0x27c88]        # 0x14004e680
   1400269f8:	call   QWORD PTR [rip+0xb622]        # 0x140032020
   1400269fe:	mov    rax,QWORD PTR [r15]
   140026a01:	mov    rbx,QWORD PTR [rax+0x30]
   140026a05:	mov    rcx,rbx
   140026a08:	call   QWORD PTR [rip+0xbc9a]        # 0x1400326a8
   140026a0e:	movzx  eax,WORD PTR [rbp-0x79]
   140026a12:	mov    WORD PTR [rsp+0x28],ax
   140026a17:	movzx  eax,WORD PTR [rbp-0x7d]
   140026a1b:	mov    WORD PTR [rsp+0x20],ax
   140026a20:	mov    r9b,BYTE PTR [rsp+0x58]
   140026a25:	mov    r8,QWORD PTR [rbp-0x59]
   140026a29:	mov    rdx,QWORD PTR [rbp-0x61]
   140026a2d:	mov    rcx,r15
   140026a30:	call   rbx
   140026a32:	mov    edi,eax
   140026a34:	test   eax,eax
   140026a36:	jns    0x140026a8a
   140026a38:	test   BYTE PTR [rip+0x27c4d],0x2        # 0x14004e68c
   140026a3f:	je     0x140026a8a
   140026a41:	mov    DWORD PTR [rsp+0x50],eax
   140026a45:	mov    ecx,0x14
   140026a4a:	mov    QWORD PTR [rsp+0x40],r13
   140026a4f:	mov    QWORD PTR [rsp+0x38],r12
   140026a54:	lea    rax,[rsp+0x50]
   140026a59:	mov    QWORD PTR [rsp+0x30],rax
   140026a5e:	mov    QWORD PTR [rsp+0x28],r12
   140026a63:	lea    rax,[rip+0x12352]        # 0x140038dbc
   140026a6a:	mov    QWORD PTR [rsp+0x20],rax
   140026a6f:	movzx  r9d,cx
   140026a73:	lea    r8,[rip+0x1660e]        # 0x14003d088
   140026a7a:	lea    edx,[rcx+0x17]
   140026a7d:	mov    rcx,QWORD PTR [rip+0x27bfc]        # 0x14004e680
   140026a84:	call   QWORD PTR [rip+0xb596]        # 0x140032020
   140026a8a:	mov    rax,QWORD PTR [r15]
   140026a8d:	mov    rbx,QWORD PTR [rax+0x20]
   140026a91:	mov    rcx,rbx
   140026a94:	call   QWORD PTR [rip+0xbc0e]        # 0x1400326a8
   140026a9a:	xor    edx,edx
   140026a9c:	mov    rcx,r15
   140026a9f:	call   rbx
   140026aa1:	test   edi,edi
   140026aa3:	jns    0x140026af7
   140026aa5:	test   BYTE PTR [rip+0x27be0],0x2        # 0x14004e68c
   140026aac:	je     0x140026af7
   140026aae:	mov    DWORD PTR [rsp+0x50],edi
   140026ab2:	mov    ecx,0x15
   140026ab7:	mov    QWORD PTR [rsp+0x40],r13
   140026abc:	mov    QWORD PTR [rsp+0x38],r12
   140026ac1:	lea    rax,[rsp+0x50]
   140026ac6:	mov    QWORD PTR [rsp+0x30],rax
   140026acb:	mov    QWORD PTR [rsp+0x28],r12
   140026ad0:	lea    rax,[rip+0x122e5]        # 0x140038dbc
   140026ad7:	mov    QWORD PTR [rsp+0x20],rax
   140026adc:	movzx  r9d,cx
   140026ae0:	lea    r8,[rip+0x165a1]        # 0x14003d088
   140026ae7:	lea    edx,[rcx+0x16]
   140026aea:	mov    rcx,QWORD PTR [rip+0x27b8f]        # 0x14004e680
   140026af1:	call   QWORD PTR [rip+0xb529]        # 0x140032020
   140026af7:	mov    rax,QWORD PTR [r15]
   140026afa:	mov    r12d,0x1
   140026b00:	mov    rbx,QWORD PTR [rax+0x28]
   140026b04:	mov    rcx,rbx
   140026b07:	call   QWORD PTR [rip+0xbb9b]        # 0x1400326a8
   140026b0d:	movzx  edx,r12w
   140026b11:	mov    rcx,r15
   140026b14:	call   rbx
   140026b16:	test   edi,edi
   140026b18:	jns    0x140026b74
   140026b1a:	mov    r12d,0x4
   140026b20:	test   BYTE PTR [rip+0x27b65],0x2        # 0x14004e68c
   140026b27:	je     0x140026b7a
   140026b29:	mov    DWORD PTR [rsp+0x50],edi
   140026b2d:	lea    ecx,[r12+0x12]
   140026b32:	mov    QWORD PTR [rsp+0x40],r13
   140026b37:	mov    QWORD PTR [rsp+0x38],r12
   140026b3c:	lea    rax,[rsp+0x50]
   140026b41:	mov    QWORD PTR [rsp+0x30],rax
   140026b46:	mov    QWORD PTR [rsp+0x28],r12
   140026b4b:	lea    rax,[rip+0x1226a]        # 0x140038dbc
   140026b52:	mov    QWORD PTR [rsp+0x20],rax
   140026b57:	movzx  r9d,cx
   140026b5b:	lea    r8,[rip+0x16526]        # 0x14003d088
   140026b62:	lea    edx,[rcx+0x15]
   140026b65:	mov    rcx,QWORD PTR [rip+0x27b14]        # 0x14004e680
   140026b6c:	call   QWORD PTR [rip+0xb4ae]        # 0x140032020
   140026b72:	jmp    0x140026b7a
   140026b74:	mov    r12d,0x4
   140026b7a:	mov    QWORD PTR [rbp-0x51],r13
   140026b7e:	mov    QWORD PTR [rbp-0x69],r13
   140026b82:	mov    rbx,QWORD PTR [rbp-0x71]
   140026b86:	mov    rax,QWORD PTR [rbx]
   140026b89:	mov    rdi,QWORD PTR [rax+0x58]
   140026b8d:	mov    rcx,rdi
   140026b90:	call   QWORD PTR [rip+0xbb12]        # 0x1400326a8
   140026b96:	xor    r8d,r8d
   140026b99:	lea    rdx,[rbp-0x69]
   140026b9d:	mov    rcx,rbx
   140026ba0:	call   rdi
   140026ba2:	test   eax,eax
   140026ba4:	jns    0x140026c32
   140026baa:	test   BYTE PTR [rip+0x27adb],0x2        # 0x14004e68c
   140026bb1:	je     0x140026bfc
   140026bb3:	mov    DWORD PTR [rsp+0x50],eax
   140026bb7:	mov    ecx,0x17
   140026bbc:	mov    QWORD PTR [rsp+0x40],r13
   140026bc1:	mov    QWORD PTR [rsp+0x38],r12
   140026bc6:	lea    rax,[rsp+0x50]
   140026bcb:	mov    QWORD PTR [rsp+0x30],rax
   140026bd0:	mov    QWORD PTR [rsp+0x28],r12
   140026bd5:	lea    rax,[rip+0x121e0]        # 0x140038dbc
   140026bdc:	mov    QWORD PTR [rsp+0x20],rax
   140026be1:	movzx  r9d,cx
   140026be5:	lea    r8,[rip+0x1649c]        # 0x14003d088
   140026bec:	lea    edx,[rcx+0x14]
   140026bef:	mov    rcx,QWORD PTR [rip+0x27a8a]        # 0x14004e680
   140026bf6:	call   QWORD PTR [rip+0xb424]        # 0x140032020
   140026bfc:	lea    rbx,[rip+0x163d5]        # 0x14003cfd8
   140026c03:	mov    rax,QWORD PTR [rbp-0x69]
   140026c07:	cmp    rbx,rax
   140026c0a:	je     0x140026c36
   140026c0c:	mov    rcx,rax
   140026c0f:	call   QWORD PTR [rip+0xb73b]        # 0x140032350
   140026c15:	mov    rcx,rbx
   140026c18:	call   QWORD PTR [rip+0xb742]        # 0x140032360
   140026c1e:	mov    QWORD PTR [rbp-0x69],rax
   140026c22:	test   rax,rax
   140026c25:	jne    0x140026c36
   140026c27:	mov    ecx,0x8007000e
   140026c2c:	call   0x140005d50
   140026c31:	int3   
   140026c32:	mov    rax,QWORD PTR [rbp-0x69]
   140026c36:	lea    r8,[rbp-0x51]
   140026c3a:	mov    rdx,rax
   140026c3d:	lea    rcx,[rip+0x163c4]        # 0x14003d008
   140026c44:	call   0x14002723c
   140026c49:	mov    rax,QWORD PTR [r15]
   140026c4c:	mov    rbx,QWORD PTR [rax+0x40]
   140026c50:	mov    rcx,rbx
   140026c53:	call   QWORD PTR [rip+0xba4f]        # 0x1400326a8
   140026c59:	mov    rdx,QWORD PTR [rbp-0x51]
   140026c5d:	mov    rcx,r15
   140026c60:	call   rbx
   140026c62:	test   eax,eax
   140026c64:	jns    0x140026cba
   140026c66:	lea    rdi,[rip+0x1214f]        # 0x140038dbc
   140026c6d:	test   BYTE PTR [rip+0x27a18],0x2        # 0x14004e68c
   140026c74:	je     0x140026cc1
   140026c76:	mov    DWORD PTR [rsp+0x50],eax
   140026c7a:	mov    ecx,0x18
   140026c7f:	mov    QWORD PTR [rsp+0x40],r13
   140026c84:	mov    QWORD PTR [rsp+0x38],r12
   140026c89:	lea    rax,[rsp+0x50]
   140026c8e:	mov    QWORD PTR [rsp+0x30],rax
   140026c93:	mov    QWORD PTR [rsp+0x28],r12
   140026c98:	mov    QWORD PTR [rsp+0x20],rdi
   140026c9d:	movzx  r9d,cx
   140026ca1:	lea    r8,[rip+0x163e0]        # 0x14003d088
   140026ca8:	lea    edx,[rcx+0x13]
   140026cab:	mov    rcx,QWORD PTR [rip+0x279ce]        # 0x14004e680
   140026cb2:	call   QWORD PTR [rip+0xb368]        # 0x140032020
   140026cb8:	jmp    0x140026cc1
   140026cba:	lea    rdi,[rip+0x120fb]        # 0x140038dbc
   140026cc1:	xor    eax,eax
   140026cc3:	mov    QWORD PTR [rbp-0x29],rax
   140026cc7:	mov    QWORD PTR [rbp-0x21],rax
   140026ccb:	mov    DWORD PTR [rbp-0x19],eax
   140026cce:	lea    r8,[rbp-0x29]
   140026cd2:	mov    rdx,QWORD PTR [rbp-0x69]
   140026cd6:	mov    rcx,r14
   140026cd9:	call   0x1400273b8
   140026cde:	test   eax,eax
   140026ce0:	jns    0x140026cf2
   140026ce2:	test   BYTE PTR [rip+0x279a3],0x2        # 0x14004e68c
   140026ce9:	je     0x140026d5f
   140026ceb:	mov    ecx,0x19
   140026cf0:	jmp    0x140026d20
   140026cf2:	mov    rax,QWORD PTR [r15]
   140026cf5:	mov    rbx,QWORD PTR [rax+0x18]
   140026cf9:	mov    rcx,rbx
   140026cfc:	call   QWORD PTR [rip+0xb9a6]        # 0x1400326a8
   140026d02:	xor    r8d,r8d
   140026d05:	lea    rdx,[rbp-0x29]
   140026d09:	mov    rcx,r15
   140026d0c:	call   rbx
   140026d0e:	test   eax,eax
   140026d10:	jns    0x140026d5f
   140026d12:	test   BYTE PTR [rip+0x27973],0x2        # 0x14004e68c
   140026d19:	je     0x140026d5f
   140026d1b:	mov    ecx,0x1a
   140026d20:	mov    QWORD PTR [rsp+0x40],r13
   140026d25:	mov    DWORD PTR [rsp+0x50],eax
   140026d29:	mov    QWORD PTR [rsp+0x38],r12
   140026d2e:	lea    rax,[rsp+0x50]
   140026d33:	mov    QWORD PTR [rsp+0x30],rax
   140026d38:	mov    QWORD PTR [rsp+0x28],r12
   140026d3d:	movzx  r9d,cx
   140026d41:	mov    QWORD PTR [rsp+0x20],rdi
   140026d46:	lea    r8,[rip+0x1633b]        # 0x14003d088
   140026d4d:	mov    edx,0x2b
   140026d52:	mov    rcx,QWORD PTR [rip+0x27927]        # 0x14004e680
   140026d59:	call   QWORD PTR [rip+0xb2c1]        # 0x140032020
   140026d5f:	cmp    DWORD PTR [r14+0x58],r13d
   140026d63:	jne    0x140026ea3
   140026d69:	mov    QWORD PTR [rbp-0x49],r13
   140026d6d:	mov    rbx,QWORD PTR [rbp-0x71]
   140026d71:	mov    rax,QWORD PTR [rbx]
   140026d74:	mov    rdi,QWORD PTR [rax+0x48]
   140026d78:	mov    rcx,rdi
   140026d7b:	call   QWORD PTR [rip+0xb927]        # 0x1400326a8
   140026d81:	lea    rdx,[rbp-0x41]
   140026d85:	mov    rcx,rbx
   140026d88:	call   rdi
   140026d8a:	test   eax,eax
   140026d8c:	jns    0x140026de2
   140026d8e:	lea    rdi,[rip+0x12027]        # 0x140038dbc
   140026d95:	test   BYTE PTR [rip+0x278f0],0x2        # 0x14004e68c
   140026d9c:	je     0x140026de9
   140026d9e:	mov    DWORD PTR [rsp+0x50],eax
   140026da2:	mov    ecx,0x1b
   140026da7:	mov    QWORD PTR [rsp+0x40],r13
   140026dac:	mov    QWORD PTR [rsp+0x38],r12
   140026db1:	lea    rax,[rsp+0x50]
   140026db6:	mov    QWORD PTR [rsp+0x30],rax
   140026dbb:	mov    QWORD PTR [rsp+0x28],r12
   140026dc0:	mov    QWORD PTR [rsp+0x20],rdi
   140026dc5:	movzx  r9d,cx
   140026dc9:	lea    r8,[rip+0x162b8]        # 0x14003d088
   140026dd0:	lea    edx,[rcx+0x10]
   140026dd3:	mov    rcx,QWORD PTR [rip+0x278a6]        # 0x14004e680
   140026dda:	call   QWORD PTR [rip+0xb240]        # 0x140032020
   140026de0:	jmp    0x140026de9
   140026de2:	lea    rdi,[rip+0x11fd3]        # 0x140038dbc
   140026de9:	lea    r8,[rbp-0x49]
   140026ded:	mov    edx,DWORD PTR [rbp-0x41]
   140026df0:	call   0x140027134
   140026df5:	mov    rax,QWORD PTR [r15]
   140026df8:	mov    rbx,QWORD PTR [rax+0x40]
   140026dfc:	mov    rcx,rbx
   140026dff:	call   QWORD PTR [rip+0xb8a3]        # 0x1400326a8
   140026e05:	mov    rdx,QWORD PTR [rbp-0x49]
   140026e09:	mov    rcx,r15
   140026e0c:	call   rbx
   140026e0e:	test   eax,eax
   140026e10:	jns    0x140026e5d
   140026e12:	test   BYTE PTR [rip+0x27873],0x2        # 0x14004e68c
   140026e19:	je     0x140026e5d
   140026e1b:	mov    DWORD PTR [rsp+0x50],eax
   140026e1f:	mov    ecx,0x1c
   140026e24:	mov    QWORD PTR [rsp+0x40],r13
   140026e29:	mov    QWORD PTR [rsp+0x38],r12
   140026e2e:	lea    rax,[rsp+0x50]
   140026e33:	mov    QWORD PTR [rsp+0x30],rax
   140026e38:	mov    QWORD PTR [rsp+0x28],r12
   140026e3d:	mov    QWORD PTR [rsp+0x20],rdi
   140026e42:	movzx  r9d,cx
   140026e46:	lea    r8,[rip+0x1623b]        # 0x14003d088
   140026e4d:	lea    edx,[rcx+0xf]
   140026e50:	mov    rcx,QWORD PTR [rip+0x27829]        # 0x14004e680
   140026e57:	call   QWORD PTR [rip+0xb1c3]        # 0x140032020
   140026e5d:	mov    rdi,QWORD PTR [r14+0x50]
   140026e61:	mov    rax,QWORD PTR [rdi]
   140026e64:	mov    rbx,QWORD PTR [rax+0x18]
   140026e68:	mov    rcx,rbx
   140026e6b:	call   QWORD PTR [rip+0xb837]        # 0x1400326a8
   140026e71:	mov    rdx,r15
   140026e74:	mov    rcx,rdi
   140026e77:	call   rbx
   140026e79:	test   eax,eax
   140026e7b:	jne    0x140026e86
   140026e7d:	mov    rcx,r14
   140026e80:	call   0x140026f68
   140026e85:	nop
   140026e86:	mov    rcx,QWORD PTR [rbp-0x49]
   140026e8a:	call   QWORD PTR [rip+0xb4c0]        # 0x140032350
   140026e90:	cmp    DWORD PTR [r14+0x58],r13d
   140026e94:	jne    0x140026ea3
   140026e96:	lea    rcx,[rip+0x16193]        # 0x14003d030
   140026e9d:	call   QWORD PTR [rip+0xb495]        # 0x140032338
   140026ea3:	test   BYTE PTR [rip+0x277e2],r12b        # 0x14004e68c
   140026eaa:	je     0x140026ee3
   140026eac:	mov    eax,0x1d
   140026eb1:	mov    QWORD PTR [rsp+0x30],r13
   140026eb6:	mov    QWORD PTR [rsp+0x28],r12
   140026ebb:	lea    rdx,[rip+0x11efa]        # 0x140038dbc
   140026ec2:	mov    QWORD PTR [rsp+0x20],rdx
   140026ec7:	movzx  r9d,ax
   140026ecb:	lea    r8,[rip+0x161b6]        # 0x14003d088
   140026ed2:	lea    edx,[rax+0xe]
   140026ed5:	mov    rcx,QWORD PTR [rip+0x277a4]        # 0x14004e680
   140026edc:	call   QWORD PTR [rip+0xb13e]        # 0x140032020
   140026ee2:	nop
   140026ee3:	mov    rcx,QWORD PTR [rbp-0x69]
   140026ee7:	call   QWORD PTR [rip+0xb463]        # 0x140032350
   140026eed:	nop
   140026eee:	mov    rcx,QWORD PTR [rbp-0x51]
   140026ef2:	call   QWORD PTR [rip+0xb458]        # 0x140032350
   140026ef8:	nop
   140026ef9:	mov    rcx,QWORD PTR [rbp-0x61]
   140026efd:	call   QWORD PTR [rip+0xb44d]        # 0x140032350
   140026f03:	nop
   140026f04:	mov    rcx,QWORD PTR [rbp-0x59]
   140026f08:	call   QWORD PTR [rip+0xb442]        # 0x140032350
   140026f0e:	nop
   140026f0f:	mov    rbx,QWORD PTR [rbp-0x71]
   140026f13:	test   rbx,rbx
   140026f16:	je     0x140026f2e
   140026f18:	mov    rax,QWORD PTR [rbx]
   140026f1b:	mov    rdi,QWORD PTR [rax+0x8]
   140026f1f:	mov    rcx,rdi
   140026f22:	call   QWORD PTR [rip+0xb780]        # 0x1400326a8
   140026f28:	mov    rcx,rbx
   140026f2b:	call   rdi
   140026f2d:	nop
   140026f2e:	mov    rax,QWORD PTR [r14]
   140026f31:	mov    rbx,QWORD PTR [rax+0x8]
   140026f35:	mov    rcx,rbx
   140026f38:	call   QWORD PTR [rip+0xb76a]        # 0x1400326a8
   140026f3e:	mov    rcx,r14
   140026f41:	call   rbx
   140026f43:	mov    rcx,QWORD PTR [rbp+0x17]
   140026f47:	xor    rcx,rsp
   140026f4a:	call   0x14002dd00
   140026f4f:	add    rsp,0x100
   140026f56:	pop    r15
   140026f58:	pop    r14
   140026f5a:	pop    r13
   140026f5c:	pop    r12
   140026f5e:	pop    rdi
   140026f5f:	pop    rbx
   140026f60:	pop    rbp
   140026f61:	ret    
   140026f62:	int3   
   140026f63:	int3   
   140026f64:	int3   
   140026f65:	int3   
   140026f66:	int3   
   140026f67:	int3   
   140026f68:	mov    rax,rsp
   140026f6b:	push   rbp
   140026f6c:	push   rdi
   140026f6d:	push   r14
   140026f6f:	mov    rbp,rsp
   140026f72:	sub    rsp,0x80
   140026f79:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140026f81:	mov    QWORD PTR [rax+0x10],rbx
   140026f85:	mov    QWORD PTR [rax+0x18],rsi
   140026f89:	mov    rax,QWORD PTR [rip+0x24090]        # 0x14004b020
   140026f90:	xor    rax,rsp
   140026f93:	mov    QWORD PTR [rbp-0x8],rax
   140026f97:	mov    r14,rcx
   140026f9a:	and    QWORD PTR [rbp-0x40],0x0
   140026f9f:	and    QWORD PTR [rbp-0x48],0x0
   140026fa4:	mov    rdi,QWORD PTR [rcx+0x50]
   140026fa8:	mov    rax,QWORD PTR [rdi]
   140026fab:	mov    rbx,QWORD PTR [rax+0x28]
   140026faf:	mov    rcx,rbx
   140026fb2:	call   QWORD PTR [rip+0xb6f0]        # 0x1400326a8
   140026fb8:	lea    rdx,[rbp-0x48]
   140026fbc:	mov    rcx,rdi
   140026fbf:	call   rbx
   140026fc1:	mov    ebx,eax
   140026fc3:	test   eax,eax
   140026fc5:	jns    0x140027008
   140026fc7:	test   BYTE PTR [rip+0x276be],0x2        # 0x14004e68c
   140026fce:	je     0x140026fec
   140026fd0:	mov    edx,0x1e
   140026fd5:	mov    DWORD PTR [rsp+0x20],eax
   140026fd9:	lea    r8,[rip+0x160a8]        # 0x14003d088
   140026fe0:	mov    rcx,QWORD PTR [rip+0x27699]        # 0x14004e680
   140026fe7:	call   0x140024690
   140026fec:	mov    edx,ebx
   140026fee:	lea    rcx,[rbp-0x30]
   140026ff2:	call   0x140002064
   140026ff7:	lea    rdx,[rip+0x2218a]        # 0x140049188
   140026ffe:	lea    rcx,[rbp-0x30]
   140027002:	call   0x14002e2da
   140027007:	int3   
   140027008:	mov    rsi,QWORD PTR [rbp-0x48]
   14002700c:	and    QWORD PTR [rbp-0x48],0x0
   140027011:	mov    QWORD PTR [rbp-0x40],rsi
   140027015:	xor    ecx,ecx
   140027017:	call   QWORD PTR [rip+0xb333]        # 0x140032350
   14002701d:	test   BYTE PTR [rip+0x27668],0x4        # 0x14004e68c
   140027024:	je     0x140027043
   140027026:	mov    edx,0x1f
   14002702b:	mov    QWORD PTR [rsp+0x20],rsi
   140027030:	lea    r8,[rip+0x16051]        # 0x14003d088
   140027037:	mov    rcx,QWORD PTR [rip+0x27642]        # 0x14004e680
   14002703e:	call   0x140025d58
   140027043:	mov    rdi,QWORD PTR [r14+0x40]
   140027047:	mov    rax,QWORD PTR [rdi]
   14002704a:	mov    rbx,QWORD PTR [rax+0x18]
   14002704e:	mov    rcx,rbx
   140027051:	call   QWORD PTR [rip+0xb651]        # 0x1400326a8
   140027057:	lea    r8,[rbp-0x50]
   14002705b:	mov    rdx,rsi
   14002705e:	mov    rcx,rdi
   140027061:	call   rbx
   140027063:	mov    ebx,eax
   140027065:	cmp    DWORD PTR [r14+0x58],0x0
   14002706a:	jne    0x140027100
   140027070:	test   eax,eax
   140027072:	jns    0x1400270b5
   140027074:	test   BYTE PTR [rip+0x27611],0x2        # 0x14004e68c
   14002707b:	je     0x140027099
   14002707d:	mov    edx,0x20
   140027082:	mov    DWORD PTR [rsp+0x20],eax
   140027086:	lea    r8,[rip+0x15ffb]        # 0x14003d088
   14002708d:	mov    rcx,QWORD PTR [rip+0x275ec]        # 0x14004e680
   140027094:	call   0x140024690
   140027099:	mov    edx,ebx
   14002709b:	lea    rcx,[rbp-0x30]
   14002709f:	call   0x140002064
   1400270a4:	lea    rdx,[rip+0x220dd]        # 0x140049188
   1400270ab:	lea    rcx,[rbp-0x30]
   1400270af:	call   0x14002e2da
   1400270b4:	int3   
   1400270b5:	mov    eax,DWORD PTR [rbp-0x50]
   1400270b8:	test   eax,eax
   1400270ba:	je     0x140027100
   1400270bc:	test   BYTE PTR [rip+0x275c9],0x2        # 0x14004e68c
   1400270c3:	je     0x1400270e1
   1400270c5:	mov    edx,0x21
   1400270ca:	mov    DWORD PTR [rsp+0x20],eax
   1400270ce:	lea    r8,[rip+0x15fb3]        # 0x14003d088
   1400270d5:	mov    rcx,QWORD PTR [rip+0x275a4]        # 0x14004e680
   1400270dc:	call   0x140024690
   1400270e1:	mov    edx,0x80004005
   1400270e6:	lea    rcx,[rbp-0x30]
   1400270ea:	call   0x140002064
   1400270ef:	lea    rdx,[rip+0x22092]        # 0x140049188
   1400270f6:	lea    rcx,[rbp-0x30]
   1400270fa:	call   0x14002e2da
   1400270ff:	nop
   140027100:	mov    rcx,rsi
   140027103:	call   QWORD PTR [rip+0xb247]        # 0x140032350
   140027109:	mov    rcx,QWORD PTR [rbp-0x8]
   14002710d:	xor    rcx,rsp
   140027110:	call   0x14002dd00
   140027115:	lea    r11,[rsp+0x80]
   14002711d:	mov    rbx,QWORD PTR [r11+0x28]
   140027121:	mov    rsi,QWORD PTR [r11+0x30]
   140027125:	mov    rsp,r11
   140027128:	pop    r14
   14002712a:	pop    rdi
   14002712b:	pop    rbp
   14002712c:	ret    
   14002712d:	int3   
   14002712e:	int3   
   14002712f:	int3   
   140027130:	int3   
   140027131:	int3   
   140027132:	int3   
   140027133:	int3   
   140027134:	mov    rax,rsp
   140027137:	push   rdi
   140027138:	sub    rsp,0x70
   14002713c:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140027144:	mov    QWORD PTR [rax+0x8],rbx
   140027148:	mov    rax,QWORD PTR [rip+0x23ed1]        # 0x14004b020
   14002714f:	xor    rax,rsp
   140027152:	mov    QWORD PTR [rsp+0x68],rax
   140027157:	mov    rdi,r8
   14002715a:	mov    r9d,edx
   14002715d:	lea    r8,[rip+0x11748]        # 0x1400388ac
   140027164:	mov    edx,0x32
   140027169:	lea    rcx,[rip+0x29140]        # 0x1400502b0
   140027170:	call   0x140024068
   140027175:	mov    ebx,eax
   140027177:	test   eax,eax
   140027179:	jns    0x1400271be
   14002717b:	test   BYTE PTR [rip+0x2750a],0x2        # 0x14004e68c
   140027182:	je     0x1400271a0
   140027184:	mov    edx,0x22
   140027189:	mov    DWORD PTR [rsp+0x20],eax
   14002718d:	lea    r8,[rip+0x15ef4]        # 0x14003d088
   140027194:	mov    rcx,QWORD PTR [rip+0x274e5]        # 0x14004e680
   14002719b:	call   0x140024690
   1400271a0:	mov    edx,ebx
   1400271a2:	lea    rcx,[rsp+0x40]
   1400271a7:	call   0x140002064
   1400271ac:	lea    rdx,[rip+0x21fd5]        # 0x140049188
   1400271b3:	lea    rcx,[rsp+0x40]
   1400271b8:	call   0x14002e2da
   1400271bd:	int3   
   1400271be:	mov    ecx,0x18
   1400271c3:	call   0x140023f10
   1400271c8:	mov    rbx,rax
   1400271cb:	mov    QWORD PTR [rsp+0x30],rax
   1400271d0:	and    QWORD PTR [rax+0x8],0x0
   1400271d5:	mov    DWORD PTR [rax+0x10],0x1
   1400271dc:	lea    rcx,[rip+0x290cd]        # 0x1400502b0
   1400271e3:	call   QWORD PTR [rip+0xb177]        # 0x140032360
   1400271e9:	mov    QWORD PTR [rbx],rax
   1400271ec:	test   rax,rax
   1400271ef:	jne    0x1400271f7
   1400271f1:	call   0x14000203c
   1400271f6:	nop
   1400271f7:	mov    QWORD PTR [rsp+0x30],rbx
   1400271fc:	mov    r8,rdi
   1400271ff:	mov    rdx,rax
   140027202:	lea    rcx,[rip+0x15e0f]        # 0x14003d018
   140027209:	call   0x14002723c
   14002720e:	nop
   14002720f:	lea    rcx,[rsp+0x30]
   140027214:	call   0x14000de2c
   140027219:	mov    rcx,QWORD PTR [rsp+0x68]
   14002721e:	xor    rcx,rsp
   140027221:	call   0x14002dd00
   140027226:	mov    rbx,QWORD PTR [rsp+0x80]
   14002722e:	add    rsp,0x70
   140027232:	pop    rdi
   140027233:	ret    
   140027234:	int3   
   140027235:	int3   
   140027236:	int3   
   140027237:	int3   
   140027238:	int3   
   140027239:	int3   
   14002723a:	int3   
   14002723b:	int3   
   14002723c:	rex push rbx
   14002723e:	push   rsi
   14002723f:	push   rdi
   140027240:	sub    rsp,0x70
   140027244:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14002724d:	mov    rax,QWORD PTR [rip+0x23dcc]        # 0x14004b020
   140027254:	xor    rax,rsp
   140027257:	mov    QWORD PTR [rsp+0x68],rax
   14002725c:	mov    rdi,r8
   14002725f:	mov    rsi,rdx
   140027262:	mov    rbx,rcx
   140027265:	lea    rcx,[rip+0x15e0c]        # 0x14003d078
   14002726c:	call   0x140027a8c
   140027271:	mov    QWORD PTR [rsp+0x30],rax
   140027276:	test   rax,rax
   140027279:	jne    0x140027286
   14002727b:	mov    ecx,0x8007000e
   140027280:	call   0x140005d50
   140027285:	nop
   140027286:	mov    rdx,rbx
   140027289:	lea    rcx,[rsp+0x30]
   14002728e:	call   0x1400279b4
   140027293:	mov    ebx,eax
   140027295:	test   eax,eax
   140027297:	jns    0x1400272dc
   140027299:	test   BYTE PTR [rip+0x273ec],0x2        # 0x14004e68c
   1400272a0:	je     0x1400272be
   1400272a2:	mov    edx,0x23
   1400272a7:	mov    DWORD PTR [rsp+0x20],eax
   1400272ab:	lea    r8,[rip+0x15dd6]        # 0x14003d088
   1400272b2:	mov    rcx,QWORD PTR [rip+0x273c7]        # 0x14004e680
   1400272b9:	call   0x140024690
   1400272be:	mov    edx,ebx
   1400272c0:	lea    rcx,[rsp+0x40]
   1400272c5:	call   0x140002064
   1400272ca:	lea    rdx,[rip+0x21eb7]        # 0x140049188
   1400272d1:	lea    rcx,[rsp+0x40]
   1400272d6:	call   0x14002e2da
   1400272db:	int3   
   1400272dc:	lea    rdx,[rip+0x15da1]        # 0x14003d084
   1400272e3:	lea    rcx,[rsp+0x30]
   1400272e8:	call   0x1400279b4
   1400272ed:	mov    ebx,eax
   1400272ef:	test   eax,eax
   1400272f1:	jns    0x140027336
   1400272f3:	test   BYTE PTR [rip+0x27392],0x2        # 0x14004e68c
   1400272fa:	je     0x140027318
   1400272fc:	mov    edx,0x24
   140027301:	mov    DWORD PTR [rsp+0x20],eax
   140027305:	lea    r8,[rip+0x15d7c]        # 0x14003d088
   14002730c:	mov    rcx,QWORD PTR [rip+0x2736d]        # 0x14004e680
   140027313:	call   0x140024690
   140027318:	mov    edx,ebx
   14002731a:	lea    rcx,[rsp+0x40]
   14002731f:	call   0x140002064
   140027324:	lea    rdx,[rip+0x21e5d]        # 0x140049188
   14002732b:	lea    rcx,[rsp+0x40]
   140027330:	call   0x14002e2da
   140027335:	int3   
   140027336:	mov    rdx,rsi
   140027339:	lea    rcx,[rsp+0x30]
   14002733e:	call   0x1400113d0
   140027343:	mov    ebx,eax
   140027345:	test   eax,eax
   140027347:	jns    0x14002738c
   140027349:	test   BYTE PTR [rip+0x2733c],0x2        # 0x14004e68c
   140027350:	je     0x14002736e
   140027352:	mov    edx,0x25
   140027357:	mov    DWORD PTR [rsp+0x20],eax
   14002735b:	lea    r8,[rip+0x15d26]        # 0x14003d088
   140027362:	mov    rcx,QWORD PTR [rip+0x27317]        # 0x14004e680
   140027369:	call   0x140024690
   14002736e:	mov    edx,ebx
   140027370:	lea    rcx,[rsp+0x40]
   140027375:	call   0x140002064
   14002737a:	lea    rdx,[rip+0x21e07]        # 0x140049188
   140027381:	lea    rcx,[rsp+0x40]
   140027386:	call   0x14002e2da
   14002738b:	int3   
   14002738c:	mov    rax,QWORD PTR [rsp+0x30]
   140027391:	mov    QWORD PTR [rdi],rax
   140027394:	xor    ecx,ecx
   140027396:	call   QWORD PTR [rip+0xafb4]        # 0x140032350
   14002739c:	mov    rcx,QWORD PTR [rsp+0x68]
   1400273a1:	xor    rcx,rsp
   1400273a4:	call   0x14002dd00
   1400273a9:	add    rsp,0x70
   1400273ad:	pop    rdi
   1400273ae:	pop    rsi
   1400273af:	pop    rbx
   1400273b0:	ret    
   1400273b1:	int3   
   1400273b2:	int3   
   1400273b3:	int3   
   1400273b4:	int3   
   1400273b5:	int3   
   1400273b6:	int3   
   1400273b7:	int3   
   1400273b8:	mov    rax,rsp
   1400273bb:	mov    QWORD PTR [rax+0x10],rbx
   1400273bf:	mov    QWORD PTR [rax+0x18],r8
   1400273c3:	mov    QWORD PTR [rax+0x8],rcx
   1400273c7:	push   rbp
   1400273c8:	push   rdi
   1400273c9:	push   r12
   1400273cb:	push   r14
   1400273cd:	push   r15
   1400273cf:	mov    rbp,rsp
   1400273d2:	sub    rsp,0x60
   1400273d6:	or     QWORD PTR [rbp-0x8],0xffffffffffffffff
   1400273db:	mov    r14,rcx
   1400273de:	and    DWORD PTR [rax-0x60],0x0
   1400273e2:	lea    rcx,[rbp-0x8]
   1400273e6:	mov    r9d,0x1
   1400273ec:	mov    r8d,0x80000000
   1400273f2:	call   0x14002a57c
   1400273f7:	mov    r15d,eax
   1400273fa:	test   eax,eax
   1400273fc:	jns    0x14002741c
   1400273fe:	test   BYTE PTR [rip+0x27287],0x2        # 0x14004e68c
   140027405:	je     0x14002767e
   14002740b:	mov    ecx,0x26
   140027410:	mov    DWORD PTR [rbp+0x48],eax
   140027413:	movzx  r9d,cx
   140027417:	jmp    0x1400274b2
   14002741c:	mov    rcx,QWORD PTR [rbp-0x8]
   140027420:	lea    rdx,[rbp+0x48]
   140027424:	call   QWORD PTR [rip+0xadce]        # 0x1400321f8
   14002742a:	mov    edi,0x29
   14002742f:	test   eax,eax
   140027431:	jne    0x14002746b
   140027433:	call   0x14002b128
   140027438:	mov    r15d,eax
   14002743b:	mov    rcx,QWORD PTR [rip+0x23c36]        # 0x14004b078
   140027442:	lea    rax,[rip+0x23c2f]        # 0x14004b078
   140027449:	cmp    rcx,rax
   14002744c:	je     0x14002746e
   14002744e:	test   BYTE PTR [rcx+0x1c],0x1
   140027452:	je     0x14002746e
   140027454:	mov    rcx,QWORD PTR [rcx+0x10]
   140027458:	lea    r8,[rip+0x15f61]        # 0x14003d3c0
   14002745f:	mov    edx,edi
   140027461:	mov    r9d,r15d
   140027464:	call   0x140001f70
   140027469:	jmp    0x14002746e
   14002746b:	xor    r15d,r15d
   14002746e:	mov    rax,QWORD PTR [rbp+0x48]
   140027472:	test   r15d,r15d
   140027475:	jns    0x14002748f
   140027477:	test   BYTE PTR [rip+0x2720e],0x2        # 0x14004e68c
   14002747e:	je     0x14002767e
   140027484:	mov    ecx,0x27
   140027489:	movzx  r9d,cx
   14002748d:	jmp    0x1400274ae
   14002748f:	cmp    rax,0x1388000
   140027495:	jbe    0x1400274f8
   140027497:	test   BYTE PTR [rip+0x271ee],0x2        # 0x14004e68c
   14002749e:	mov    r15d,0x800700df
   1400274a4:	je     0x14002767e
   1400274aa:	movzx  r9d,di
   1400274ae:	mov    DWORD PTR [rbp+0x48],r15d
   1400274b2:	and    QWORD PTR [rsp+0x40],0x0
   1400274b8:	lea    rax,[rbp+0x48]
   1400274bc:	mov    rcx,QWORD PTR [rip+0x271bd]        # 0x14004e680
   1400274c3:	lea    r12,[rip+0x118f2]        # 0x140038dbc
   1400274ca:	mov    ebx,0x4
   1400274cf:	lea    r8,[rip+0x15bb2]        # 0x14003d088
   1400274d6:	mov    QWORD PTR [rsp+0x38],rbx
   1400274db:	mov    QWORD PTR [rsp+0x30],rax
   1400274e0:	mov    QWORD PTR [rsp+0x28],rbx
   1400274e5:	lea    edx,[rbx+0x27]
   1400274e8:	mov    QWORD PTR [rsp+0x20],r12
   1400274ed:	call   QWORD PTR [rip+0xab2d]        # 0x140032020
   1400274f3:	jmp    0x14002767e
   1400274f8:	mov    r12d,0x4000
   1400274fe:	mov    ecx,r12d
   140027501:	call   QWORD PTR [rip+0xb0c9]        # 0x1400325d0
   140027507:	mov    rdi,rax
   14002750a:	test   rax,rax
   14002750d:	jne    0x14002752a
   14002750f:	test   BYTE PTR [rip+0x27176],0x2        # 0x14004e68c
   140027516:	mov    r15d,0x8007000e
   14002751c:	je     0x14002767e
   140027522:	lea    ecx,[rax+0x2a]
   140027525:	jmp    0x140027489
   14002752a:	and    QWORD PTR [rbp-0x10],0x0
   14002752f:	call   QWORD PTR [rip+0xaed3]        # 0x140032408
   140027535:	mov    rbx,QWORD PTR [rax+0x40]
   140027539:	mov    rcx,rbx
   14002753c:	call   QWORD PTR [rip+0xb166]        # 0x1400326a8
   140027542:	mov    edx,0x3
   140027547:	lea    rcx,[rbp-0x10]
   14002754b:	call   rbx
   14002754d:	mov    r15d,eax
   140027550:	test   eax,eax
   140027552:	jns    0x140027570
   140027554:	test   BYTE PTR [rip+0x27131],0x2        # 0x14004e68c
   14002755b:	je     0x140027656
   140027561:	mov    r14d,0x2b
   140027567:	movzx  r9d,r14w
   14002756b:	jmp    0x140027717
   140027570:	cmp    DWORD PTR [r14+0x58],0x0
   140027575:	jne    0x14002760b
   14002757b:	mov    r8,r12
   14002757e:	mov    QWORD PTR [rbp+0x48],r12
   140027582:	xor    edx,edx
   140027584:	mov    rcx,rdi
   140027587:	call   0x14002e2ce
   14002758c:	mov    rcx,QWORD PTR [rbp-0x8]
   140027590:	lea    rdx,[rbp+0x48]
   140027594:	mov    r8,rdi
   140027597:	call   0x14002a648
   14002759c:	lea    r12,[rip+0x11819]        # 0x140038dbc
   1400275a3:	mov    r15d,eax
   1400275a6:	mov    r14d,0x2b
   1400275ac:	cmp    eax,0x80070026
   1400275b1:	je     0x140027760
   1400275b7:	test   eax,eax
   1400275b9:	js     0x140027701
   1400275bf:	cmp    QWORD PTR [rbp+0x48],0x0
   1400275c4:	je     0x1400276bd
   1400275ca:	mov    r15,QWORD PTR [rbp+0x30]
   1400275ce:	cmp    DWORD PTR [r15+0x58],0x0
   1400275d3:	jne    0x1400276a7
   1400275d9:	mov    rbx,QWORD PTR [rbp-0x10]
   1400275dd:	mov    rax,QWORD PTR [rbx]
   1400275e0:	mov    r14,QWORD PTR [rax+0x20]
   1400275e4:	mov    rcx,r14
   1400275e7:	call   QWORD PTR [rip+0xb0bb]        # 0x1400326a8
   1400275ed:	mov    rdx,QWORD PTR [rbp+0x48]
   1400275f1:	mov    r8,rdi
   1400275f4:	mov    rcx,rbx
   1400275f7:	call   r14
   1400275fa:	cmp    DWORD PTR [r15+0x58],0x0
   1400275ff:	mov    r12d,0x4000
   140027605:	je     0x14002757b
   14002760b:	test   BYTE PTR [rip+0x2707a],0x2        # 0x14004e68c
   140027612:	je     0x140027650
   140027614:	mov    eax,0x2c
   140027619:	lea    edx,[rax-0x1]
   14002761c:	mov    ebx,0x4
   140027621:	lea    r12,[rip+0x11794]        # 0x140038dbc
   140027628:	and    QWORD PTR [rsp+0x30],0x0
   14002762e:	lea    r8,[rip+0x15a53]        # 0x14003d088
   140027635:	mov    rcx,QWORD PTR [rip+0x27044]        # 0x14004e680
   14002763c:	mov    QWORD PTR [rsp+0x28],rbx
   140027641:	movzx  r9d,ax
   140027645:	mov    QWORD PTR [rsp+0x20],r12
   14002764a:	call   QWORD PTR [rip+0xa9d0]        # 0x140032020
   140027650:	mov    r15d,0x80004004
   140027656:	mov    rbx,QWORD PTR [rbp-0x10]
   14002765a:	test   rbx,rbx
   14002765d:	je     0x140027675
   14002765f:	mov    rax,QWORD PTR [rbx]
   140027662:	mov    r14,QWORD PTR [rax+0x8]
   140027666:	mov    rcx,r14
   140027669:	call   QWORD PTR [rip+0xb039]        # 0x1400326a8
   14002766f:	mov    rcx,rbx
   140027672:	call   r14
   140027675:	mov    rcx,rdi
   140027678:	call   QWORD PTR [rip+0xaf4a]        # 0x1400325c8
   14002767e:	cmp    QWORD PTR [rbp-0x8],0xffffffffffffffff
   140027683:	je     0x14002768f
   140027685:	mov    rcx,QWORD PTR [rbp-0x8]
   140027689:	call   QWORD PTR [rip+0xaac9]        # 0x140032158
   14002768f:	mov    eax,r15d
   140027692:	mov    rbx,QWORD PTR [rsp+0x98]
   14002769a:	add    rsp,0x60
   14002769e:	pop    r15
   1400276a0:	pop    r14
   1400276a2:	pop    r12
   1400276a4:	pop    rdi
   1400276a5:	pop    rbp
   1400276a6:	ret    
   1400276a7:	test   BYTE PTR [rip+0x26fde],0x2        # 0x14004e68c
   1400276ae:	je     0x140027650
   1400276b0:	mov    eax,0x30
   1400276b5:	mov    edx,r14d
   1400276b8:	jmp    0x14002761c
   1400276bd:	mov    ebx,0x4
   1400276c2:	test   BYTE PTR [rip+0x26fc4],bl        # 0x14004e68c
   1400276c8:	je     0x14002779e
   1400276ce:	and    QWORD PTR [rsp+0x30],0x0
   1400276d4:	lea    eax,[rbx+0x2b]
   1400276d7:	mov    rcx,QWORD PTR [rip+0x26fa2]        # 0x14004e680
   1400276de:	lea    r8,[rip+0x159a3]        # 0x14003d088
   1400276e5:	movzx  r9d,ax
   1400276e9:	mov    edx,r14d
   1400276ec:	mov    QWORD PTR [rsp+0x28],rbx
   1400276f1:	mov    QWORD PTR [rsp+0x20],r12
   1400276f6:	call   QWORD PTR [rip+0xa924]        # 0x140032020
   1400276fc:	jmp    0x14002779e
   140027701:	test   BYTE PTR [rip+0x26f84],0x2        # 0x14004e68c
   140027708:	je     0x140027656
   14002770e:	mov    ecx,0x2e
   140027713:	movzx  r9d,cx
   140027717:	and    QWORD PTR [rsp+0x40],0x0
   14002771d:	lea    r12,[rip+0x11698]        # 0x140038dbc
   140027724:	mov    rcx,QWORD PTR [rip+0x26f55]        # 0x14004e680
   14002772b:	lea    r8,[rip+0x15956]        # 0x14003d088
   140027732:	mov    ebx,0x4
   140027737:	mov    DWORD PTR [rbp+0x48],eax
   14002773a:	mov    QWORD PTR [rsp+0x38],rbx
   14002773f:	lea    rax,[rbp+0x48]
   140027743:	mov    QWORD PTR [rsp+0x30],rax
   140027748:	mov    edx,r14d
   14002774b:	mov    QWORD PTR [rsp+0x28],rbx
   140027750:	mov    QWORD PTR [rsp+0x20],r12
   140027755:	call   QWORD PTR [rip+0xa8c5]        # 0x140032020
   14002775b:	jmp    0x140027656
   140027760:	mov    ebx,0x4
   140027765:	test   BYTE PTR [rip+0x26f21],bl        # 0x14004e68c
   14002776b:	je     0x14002779b
   14002776d:	and    QWORD PTR [rsp+0x30],0x0
   140027773:	lea    eax,[rbx+0x29]
   140027776:	mov    rcx,QWORD PTR [rip+0x26f03]        # 0x14004e680
   14002777d:	lea    r8,[rip+0x15904]        # 0x14003d088
   140027784:	movzx  r9d,ax
   140027788:	mov    edx,r14d
   14002778b:	mov    QWORD PTR [rsp+0x28],rbx
   140027790:	mov    QWORD PTR [rsp+0x20],r12
   140027795:	call   QWORD PTR [rip+0xa885]        # 0x140032020
   14002779b:	xor    r15d,r15d
   14002779e:	mov    rax,QWORD PTR [rbp+0x30]
   1400277a2:	cmp    DWORD PTR [rax+0x58],0x0
   1400277a6:	je     0x1400277c2
   1400277a8:	test   BYTE PTR [rip+0x26edd],0x2        # 0x14004e68c
   1400277af:	je     0x140027650
   1400277b5:	mov    eax,0x31
   1400277ba:	mov    edx,r14d
   1400277bd:	jmp    0x140027628
   1400277c2:	mov    rbx,QWORD PTR [rbp-0x10]
   1400277c6:	mov    rax,QWORD PTR [rbx]
   1400277c9:	mov    r14,QWORD PTR [rax+0x28]
   1400277cd:	mov    rcx,r14
   1400277d0:	call   QWORD PTR [rip+0xaed2]        # 0x1400326a8
   1400277d6:	mov    rcx,rbx
   1400277d9:	call   r14
   1400277dc:	mov    r8,QWORD PTR [rbp+0x40]
   1400277e0:	lea    rdx,[rbp+0x48]
   1400277e4:	mov    rcx,QWORD PTR [rbp-0x10]
   1400277e8:	mov    QWORD PTR [rbp+0x48],0x14
   1400277f0:	call   0x14002d05c
   1400277f5:	jmp    0x140027656
   1400277fa:	int3   
   1400277fb:	int3   
   1400277fc:	int3   
   1400277fd:	int3   
   1400277fe:	int3   
   1400277ff:	int3   
   140027800:	mov    QWORD PTR [rsp+0x8],rbx
   140027805:	mov    QWORD PTR [rsp+0x10],rsi
   14002780a:	push   rdi
   14002780b:	sub    rsp,0x20
   14002780f:	mov    rsi,rcx
   140027812:	or     edi,0xffffffff
   140027815:	lock xadd DWORD PTR [rcx+0x8],edi
   14002781a:	sub    edi,0x1
   14002781d:	jne    0x140027852
   14002781f:	mov    rax,QWORD PTR [rip+0x287b2]        # 0x14004ffd8
   140027826:	lock inc DWORD PTR [rax+0xc]
   14002782a:	test   rcx,rcx
   14002782d:	je     0x140027847
   14002782f:	mov    rcx,QWORD PTR [rcx]
   140027832:	mov    rbx,QWORD PTR [rcx+0x18]
   140027836:	mov    rcx,rbx
   140027839:	call   QWORD PTR [rip+0xae69]        # 0x1400326a8
   14002783f:	lea    edx,[rdi+0x1]
   140027842:	mov    rcx,rsi
   140027845:	call   rbx
   140027847:	mov    rcx,QWORD PTR [rip+0x2878a]        # 0x14004ffd8
   14002784e:	lock dec DWORD PTR [rcx+0xc]
   140027852:	mov    rbx,QWORD PTR [rsp+0x30]
   140027857:	mov    eax,edi
   140027859:	mov    rsi,QWORD PTR [rsp+0x38]
   14002785e:	add    rsp,0x20
   140027862:	pop    rdi
   140027863:	ret    
   140027864:	int3   
   140027865:	int3   
   140027866:	int3   
   140027867:	int3   
   140027868:	int3   
   140027869:	int3   
   14002786a:	int3   
   14002786b:	int3   
   14002786c:	int3   
   14002786d:	int3   
   14002786e:	int3   
   14002786f:	int3   
   140027870:	mov    QWORD PTR [rsp+0x8],rbx
   140027875:	push   rdi
   140027876:	sub    rsp,0x20
   14002787a:	lea    rax,[rip+0xd3df]        # 0x140034c60
   140027881:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140027888:	mov    QWORD PTR [rcx],rax
   14002788b:	mov    ebx,edx
   14002788d:	mov    rax,QWORD PTR [rip+0x28744]        # 0x14004ffd8
   140027894:	mov    rdi,rcx
   140027897:	lock dec DWORD PTR [rax+0xc]
   14002789b:	call   0x140026598
   1400278a0:	test   bl,0x1
   1400278a3:	je     0x1400278ae
   1400278a5:	mov    rcx,rdi
   1400278a8:	call   QWORD PTR [rip+0xad1a]        # 0x1400325c8
   1400278ae:	mov    rax,rdi
   1400278b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400278b6:	add    rsp,0x20
   1400278ba:	pop    rdi
   1400278bb:	ret    
   1400278bc:	int3   
   1400278bd:	int3   
   1400278be:	int3   
   1400278bf:	int3   
   1400278c0:	int3   
   1400278c1:	int3   
   1400278c2:	int3   
   1400278c3:	int3   
   1400278c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400278c9:	push   rbx
   1400278ca:	push   rsi
   1400278cb:	push   rdi
   1400278cc:	push   r14
   1400278ce:	push   r15
   1400278d0:	sub    rsp,0x30
   1400278d4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400278dd:	mov    r15,rcx
   1400278e0:	xor    edi,edi
   1400278e2:	test   rcx,rcx
   1400278e5:	jne    0x1400278f1
   1400278e7:	mov    eax,0x80004003
   1400278ec:	jmp    0x14002799f
   1400278f1:	mov    QWORD PTR [rcx],rdi
   1400278f4:	mov    esi,0x8007000e
   1400278f9:	mov    DWORD PTR [rsp+0x68],esi
   1400278fd:	mov    QWORD PTR [rsp+0x70],rdi
   140027902:	mov    ecx,0x60
   140027907:	call   0x140023f10
   14002790c:	mov    r14,rax
   14002790f:	mov    DWORD PTR [rax+0x8],edi
   140027912:	xor    edx,edx
   140027914:	lea    r8d,[rdx+0x28]
   140027918:	lea    rcx,[rax+0x10]
   14002791c:	call   0x14002e2ce
   140027921:	mov    BYTE PTR [r14+0x38],dil
   140027925:	mov    QWORD PTR [r14+0x40],rdi
   140027929:	mov    QWORD PTR [r14+0x50],rdi
   14002792d:	mov    DWORD PTR [r14+0x58],edi
   140027931:	lea    rax,[rip+0xd328]        # 0x140034c60
   140027938:	mov    QWORD PTR [r14],rax
   14002793b:	mov    rax,QWORD PTR [rip+0x28696]        # 0x14004ffd8
   140027942:	lock inc DWORD PTR [rax+0xc]
   140027946:	mov    QWORD PTR [rsp+0x70],r14
   14002794b:	jmp    0x14002795d
   14002794d:	xor    edi,edi
   14002794f:	mov    r15,QWORD PTR [rsp+0x60]
   140027954:	mov    esi,DWORD PTR [rsp+0x68]
   140027958:	mov    r14,QWORD PTR [rsp+0x70]
   14002795d:	test   r14,r14
   140027960:	je     0x14002799a
   140027962:	lea    rcx,[r14+0x10]
   140027966:	call   0x140004ee4
   14002796b:	mov    esi,eax
   14002796d:	test   eax,eax
   14002796f:	js     0x140027976
   140027971:	mov    BYTE PTR [r14+0x38],0x1
   140027976:	cmovns esi,edi
   140027979:	test   esi,esi
   14002797b:	je     0x14002799a
   14002797d:	mov    r8,QWORD PTR [r14]
   140027980:	mov    rbx,QWORD PTR [r8+0x18]
   140027984:	mov    rcx,rbx
   140027987:	call   QWORD PTR [rip+0xad1b]        # 0x1400326a8
   14002798d:	mov    edx,0x1
   140027992:	mov    rcx,r14
   140027995:	call   rbx
   140027997:	mov    r14,rdi
   14002799a:	mov    QWORD PTR [r15],r14
   14002799d:	mov    eax,esi
   14002799f:	add    rsp,0x30
   1400279a3:	pop    r15
   1400279a5:	pop    r14
   1400279a7:	pop    rdi
   1400279a8:	pop    rsi
   1400279a9:	pop    rbx
   1400279aa:	ret    
   1400279ab:	int3   
   1400279ac:	int3   
   1400279ad:	int3   
   1400279ae:	int3   
   1400279af:	int3   
   1400279b0:	int3   
   1400279b1:	int3   
   1400279b2:	int3   
   1400279b3:	int3   
   1400279b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400279b9:	push   rsi
   1400279ba:	push   rdi
   1400279bb:	push   r14
   1400279bd:	sub    rsp,0x30
   1400279c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400279ca:	mov    QWORD PTR [rsp+0x60],rbx
   1400279cf:	mov    rbx,rdx
   1400279d2:	mov    rsi,rcx
   1400279d5:	xor    edi,edi
   1400279d7:	test   rdx,rdx
   1400279da:	jne    0x1400279e3
   1400279dc:	xor    eax,eax
   1400279de:	jmp    0x140027a76
   1400279e3:	xor    ecx,ecx
   1400279e5:	call   QWORD PTR [rip+0xa965]        # 0x140032350
   1400279eb:	mov    rcx,rbx
   1400279ee:	call   0x140027a8c
   1400279f3:	mov    rbx,rax
   1400279f6:	mov    QWORD PTR [rsp+0x58],rax
   1400279fb:	test   rax,rax
   1400279fe:	jne    0x140027a0b
   140027a00:	mov    ecx,0x8007000e
   140027a05:	call   0x140005d50
   140027a0a:	nop
   140027a0b:	jmp    0x140027a19
   140027a0d:	xor    edi,edi
   140027a0f:	mov    rsi,QWORD PTR [rsp+0x50]
   140027a14:	mov    rbx,QWORD PTR [rsp+0x58]
   140027a19:	test   rbx,rbx
   140027a1c:	jne    0x140027a2d
   140027a1e:	xor    ecx,ecx
   140027a20:	call   QWORD PTR [rip+0xa92a]        # 0x140032350
   140027a26:	mov    eax,0x8007000e
   140027a2b:	jmp    0x140027a76
   140027a2d:	mov    rcx,rbx
   140027a30:	call   QWORD PTR [rip+0xa93a]        # 0x140032370
   140027a36:	test   eax,eax
   140027a38:	je     0x140027a6b
   140027a3a:	mov    QWORD PTR [rsp+0x58],rdi
   140027a3f:	lea    r8,[rsp+0x58]
   140027a44:	mov    rdx,rbx
   140027a47:	mov    rcx,QWORD PTR [rsi]
   140027a4a:	call   QWORD PTR [rip+0xa930]        # 0x140032380
   140027a50:	mov    r14d,eax
   140027a53:	test   eax,eax
   140027a55:	js     0x140027a68
   140027a57:	mov    rcx,QWORD PTR [rsi]
   140027a5a:	call   QWORD PTR [rip+0xa8f0]        # 0x140032350
   140027a60:	mov    rcx,QWORD PTR [rsp+0x58]
   140027a65:	mov    QWORD PTR [rsi],rcx
   140027a68:	mov    edi,r14d
   140027a6b:	mov    rcx,rbx
   140027a6e:	call   QWORD PTR [rip+0xa8dc]        # 0x140032350
   140027a74:	mov    eax,edi
   140027a76:	mov    rbx,QWORD PTR [rsp+0x60]
   140027a7b:	add    rsp,0x30
   140027a7f:	pop    r14
   140027a81:	pop    rdi
   140027a82:	pop    rsi
   140027a83:	ret    
   140027a84:	int3   
   140027a85:	int3   
   140027a86:	int3   
   140027a87:	int3   
   140027a88:	int3   
   140027a89:	int3   
   140027a8a:	int3   
   140027a8b:	int3   
   140027a8c:	mov    rax,rsp
   140027a8f:	mov    QWORD PTR [rax+0x8],rbx
   140027a93:	mov    QWORD PTR [rax+0x10],rbp
   140027a97:	mov    QWORD PTR [rax+0x18],rsi
   140027a9b:	push   rdi
   140027a9c:	sub    rsp,0x30
   140027aa0:	xor    ebx,ebx
   140027aa2:	mov    rsi,rcx
   140027aa5:	test   rcx,rcx
   140027aa8:	je     0x140027b0a
   140027aaa:	mov    r8,rcx
   140027aad:	mov    DWORD PTR [rax-0x10],ebx
   140027ab0:	lea    ecx,[rbx+0x3]
   140027ab3:	mov    QWORD PTR [rax-0x18],rbx
   140027ab7:	or     r9d,0xffffffff
   140027abb:	xor    edx,edx
   140027abd:	call   QWORD PTR [rip+0xa64d]        # 0x140032110
   140027ac3:	xor    ecx,ecx
   140027ac5:	mov    ebp,eax
   140027ac7:	lea    edx,[rax-0x1]
   140027aca:	call   QWORD PTR [rip+0xa8a8]        # 0x140032378
   140027ad0:	mov    rdi,rax
   140027ad3:	test   rax,rax
   140027ad6:	je     0x140027b02
   140027ad8:	mov    DWORD PTR [rsp+0x28],ebp
   140027adc:	lea    ecx,[rbx+0x3]
   140027adf:	or     r9d,0xffffffff
   140027ae3:	mov    QWORD PTR [rsp+0x20],rax
   140027ae8:	mov    r8,rsi
   140027aeb:	xor    edx,edx
   140027aed:	call   QWORD PTR [rip+0xa61d]        # 0x140032110
   140027af3:	cmp    eax,ebp
   140027af5:	je     0x140027b02
   140027af7:	mov    rcx,rdi
   140027afa:	call   QWORD PTR [rip+0xa850]        # 0x140032350
   140027b00:	jmp    0x140027b05
   140027b02:	mov    rbx,rdi
   140027b05:	mov    rax,rbx
   140027b08:	jmp    0x140027b0c
   140027b0a:	xor    eax,eax
   140027b0c:	mov    rbx,QWORD PTR [rsp+0x40]
   140027b11:	mov    rbp,QWORD PTR [rsp+0x48]
   140027b16:	mov    rsi,QWORD PTR [rsp+0x50]
   140027b1b:	add    rsp,0x30
   140027b1f:	pop    rdi
   140027b20:	ret    
   140027b21:	int3   
   140027b22:	int3   
   140027b23:	int3   
   140027b24:	int3   
   140027b25:	int3   
   140027b26:	int3   
   140027b27:	int3   
   140027b28:	int3   
   140027b29:	int3   
   140027b2a:	int3   
   140027b2b:	int3   
   140027b2c:	int3   
   140027b2d:	int3   
   140027b2e:	int3   
   140027b2f:	int3   
   140027b30:	mov    QWORD PTR [rsp+0x8],rbx
   140027b35:	mov    QWORD PTR [rsp+0x10],rsi
   140027b3a:	push   rdi
   140027b3b:	sub    rsp,0x20
   140027b3f:	mov    rsi,rcx
   140027b42:	or     edi,0xffffffff
   140027b45:	lock xadd DWORD PTR [rcx+0x8],edi
   140027b4a:	sub    edi,0x1
   140027b4d:	jne    0x140027b6c
   140027b4f:	test   rcx,rcx
   140027b52:	je     0x140027b6c
   140027b54:	mov    rdx,QWORD PTR [rcx]
   140027b57:	mov    rbx,QWORD PTR [rdx+0x20]
   140027b5b:	mov    rcx,rbx
   140027b5e:	call   QWORD PTR [rip+0xab44]        # 0x1400326a8
   140027b64:	lea    edx,[rdi+0x1]
   140027b67:	mov    rcx,rsi
   140027b6a:	call   rbx
   140027b6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140027b71:	mov    eax,edi
   140027b73:	mov    rsi,QWORD PTR [rsp+0x38]
   140027b78:	add    rsp,0x20
   140027b7c:	pop    rdi
   140027b7d:	ret    
   140027b7e:	int3   
   140027b7f:	int3   
   140027b80:	int3   
   140027b81:	int3   
   140027b82:	int3   
   140027b83:	int3   
   140027b84:	int3   
   140027b85:	int3   
   140027b86:	int3   
   140027b87:	int3   
   140027b88:	int3   
   140027b89:	int3   
   140027b8a:	int3   
   140027b8b:	int3   
   140027b8c:	int3   
   140027b8d:	int3   
   140027b8e:	int3   
   140027b8f:	int3   
   140027b90:	mov    QWORD PTR [rsp+0x8],rbx
   140027b95:	push   rdi
   140027b96:	sub    rsp,0x20
   140027b9a:	mov    ebx,edx
   140027b9c:	mov    rdi,rcx
   140027b9f:	call   0x140027bc8
   140027ba4:	test   bl,0x1
   140027ba7:	je     0x140027bb2
   140027ba9:	mov    rcx,rdi
   140027bac:	call   QWORD PTR [rip+0xaa16]        # 0x1400325c8
   140027bb2:	mov    rax,rdi
   140027bb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140027bba:	add    rsp,0x20
   140027bbe:	pop    rdi
   140027bbf:	ret    
   140027bc0:	int3   
   140027bc1:	int3   
   140027bc2:	int3   
   140027bc3:	int3   
   140027bc4:	int3   
   140027bc5:	int3   
   140027bc6:	int3   
   140027bc7:	int3   
   140027bc8:	mov    QWORD PTR [rsp+0x8],rbx
   140027bcd:	mov    QWORD PTR [rsp+0x10],rsi
   140027bd2:	push   rdi
   140027bd3:	sub    rsp,0x20
   140027bd7:	lea    rax,[rip+0xd0d2]        # 0x140034cb0
   140027bde:	mov    rsi,rcx
   140027be1:	mov    QWORD PTR [rcx],rax
   140027be4:	mov    rdi,QWORD PTR [rcx+0x38]
   140027be8:	and    QWORD PTR [rcx+0x38],0x0
   140027bed:	test   rdi,rdi
   140027bf0:	je     0x140027c29
   140027bf2:	mov    eax,DWORD PTR [rdi+0x8]
   140027bf5:	cmp    eax,0x1
   140027bf8:	jne    0x140027c03
   140027bfa:	mov    DWORD PTR [rdi+0x8],0x0
   140027c01:	jmp    0x140027c10
   140027c03:	or     eax,0xffffffff
   140027c06:	lock xadd DWORD PTR [rdi+0x8],eax
   140027c0b:	sub    eax,0x1
   140027c0e:	jg     0x140027c29
   140027c10:	mov    rax,QWORD PTR [rdi]
   140027c13:	mov    rbx,QWORD PTR [rax]
   140027c16:	mov    rcx,rbx
   140027c19:	call   QWORD PTR [rip+0xaa89]        # 0x1400326a8
   140027c1f:	mov    edx,0x1
   140027c24:	mov    rcx,rdi
   140027c27:	call   rbx
   140027c29:	mov    rdi,QWORD PTR [rsi+0x38]
   140027c2d:	test   rdi,rdi
   140027c30:	je     0x140027c6e
   140027c32:	mov    eax,DWORD PTR [rdi+0x8]
   140027c35:	cmp    eax,0x1
   140027c38:	jne    0x140027c43
   140027c3a:	mov    DWORD PTR [rdi+0x8],0x0
   140027c41:	jmp    0x140027c50
   140027c43:	or     eax,0xffffffff
   140027c46:	lock xadd DWORD PTR [rdi+0x8],eax
   140027c4b:	sub    eax,0x1
   140027c4e:	jg     0x140027c6e
   140027c50:	test   rdi,rdi
   140027c53:	je     0x140027c6e
   140027c55:	mov    rax,QWORD PTR [rdi]
   140027c58:	mov    rbx,QWORD PTR [rax]
   140027c5b:	mov    rcx,rbx
   140027c5e:	call   QWORD PTR [rip+0xaa44]        # 0x1400326a8
   140027c64:	mov    edx,0x1
   140027c69:	mov    rcx,rdi
   140027c6c:	call   rbx
   140027c6e:	lea    rcx,[rsi+0x10]
   140027c72:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140027c79:	je     0x140027c81
   140027c7b:	call   QWORD PTR [rip+0xa5f7]        # 0x140032278
   140027c81:	mov    rbx,QWORD PTR [rsp+0x30]
   140027c86:	mov    rsi,QWORD PTR [rsp+0x38]
   140027c8b:	add    rsp,0x20
   140027c8f:	pop    rdi
   140027c90:	ret    
   140027c91:	int3   
   140027c92:	int3   
   140027c93:	int3   
   140027c94:	int3   
   140027c95:	int3   
   140027c96:	int3   
   140027c97:	int3   
   140027c98:	mov    QWORD PTR [rsp+0x10],rbx
   140027c9d:	mov    QWORD PTR [rsp+0x18],rbp
   140027ca2:	mov    QWORD PTR [rsp+0x20],rsi
   140027ca7:	push   rdi
   140027ca8:	sub    rsp,0x20
   140027cac:	and    DWORD PTR [rcx+0x1c],0x0
   140027cb0:	mov    rsi,rcx
   140027cb3:	add    rcx,0x10
   140027cb7:	xor    edx,edx
   140027cb9:	call   QWORD PTR [rip+0xa5b1]        # 0x140032270
   140027cbf:	mov    rdi,QWORD PTR [rsi+0x38]
   140027cc3:	test   rdi,rdi
   140027cc6:	je     0x140027d09
   140027cc8:	mov    eax,DWORD PTR [rdi+0x8]
   140027ccb:	cmp    eax,0x1
   140027cce:	jne    0x140027cd9
   140027cd0:	mov    DWORD PTR [rdi+0x8],0x0
   140027cd7:	jmp    0x140027ce6
   140027cd9:	or     eax,0xffffffff
   140027cdc:	lock xadd DWORD PTR [rdi+0x8],eax
   140027ce1:	sub    eax,0x1
   140027ce4:	jg     0x140027d04
   140027ce6:	test   rdi,rdi
   140027ce9:	je     0x140027d04
   140027ceb:	mov    rax,QWORD PTR [rdi]
   140027cee:	mov    rbx,QWORD PTR [rax]
   140027cf1:	mov    rcx,rbx
   140027cf4:	call   QWORD PTR [rip+0xa9ae]        # 0x1400326a8
   140027cfa:	mov    edx,0x1
   140027cff:	mov    rcx,rdi
   140027d02:	call   rbx
   140027d04:	and    QWORD PTR [rsi+0x38],0x0
   140027d09:	and    QWORD PTR [rsi+0x38],0x0
   140027d0e:	lea    rcx,[rsp+0x30]
   140027d13:	and    QWORD PTR [rsp+0x30],0x0
   140027d19:	call   0x140027f04
   140027d1e:	mov    ebp,eax
   140027d20:	test   eax,eax
   140027d22:	jns    0x140027d6c
   140027d24:	mov    rcx,QWORD PTR [rsp+0x30]
   140027d29:	test   rcx,rcx
   140027d2c:	je     0x140027d77
   140027d2e:	mov    edx,DWORD PTR [rcx+0x8]
   140027d31:	cmp    edx,0x1
   140027d34:	jne    0x140027d3f
   140027d36:	mov    DWORD PTR [rcx+0x8],0x0
   140027d3d:	jmp    0x140027d4c
   140027d3f:	or     eax,0xffffffff
   140027d42:	lock xadd DWORD PTR [rcx+0x8],eax
   140027d47:	sub    eax,0x1
   140027d4a:	jg     0x140027d77
   140027d4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140027d51:	mov    rax,QWORD PTR [rbx]
   140027d54:	mov    rdi,QWORD PTR [rax]
   140027d57:	mov    rcx,rdi
   140027d5a:	call   QWORD PTR [rip+0xa948]        # 0x1400326a8
   140027d60:	mov    edx,0x1
   140027d65:	mov    rcx,rbx
   140027d68:	call   rdi
   140027d6a:	jmp    0x140027d77
   140027d6c:	mov    rax,QWORD PTR [rsp+0x30]
   140027d71:	xor    ebp,ebp
   140027d73:	mov    QWORD PTR [rsi+0x38],rax
   140027d77:	mov    rbx,QWORD PTR [rsp+0x38]
   140027d7c:	mov    eax,ebp
   140027d7e:	mov    rbp,QWORD PTR [rsp+0x40]
   140027d83:	mov    rsi,QWORD PTR [rsp+0x48]
   140027d88:	add    rsp,0x20
   140027d8c:	pop    rdi
   140027d8d:	ret    
   140027d8e:	int3   
   140027d8f:	int3   
   140027d90:	int3   
   140027d91:	int3   
   140027d92:	int3   
   140027d93:	int3   
   140027d94:	int3   
   140027d95:	int3   
   140027d96:	int3   
   140027d97:	int3   
   140027d98:	int3   
   140027d99:	int3   
   140027d9a:	int3   
   140027d9b:	int3   
   140027d9c:	int3   
   140027d9d:	int3   
   140027d9e:	int3   
   140027d9f:	int3   
   140027da0:	mov    QWORD PTR [rsp+0x8],rbx
   140027da5:	push   rbp
   140027da6:	push   rsi
   140027da7:	push   rdi
   140027da8:	mov    rbp,rsp
   140027dab:	sub    rsp,0x70
   140027daf:	mov    rax,QWORD PTR [rip+0x2326a]        # 0x14004b020
   140027db6:	xor    rax,rsp
   140027db9:	mov    QWORD PTR [rbp-0x10],rax
   140027dbd:	mov    rbx,r8
   140027dc0:	mov    rdi,rdx
   140027dc3:	test   r8,r8
   140027dc6:	je     0x140027dcf
   140027dc8:	mov    DWORD PTR [r8],0x2
   140027dcf:	lea    rsi,[rcx+0x10]
   140027dd3:	mov    rcx,rsi
   140027dd6:	call   QWORD PTR [rip+0xa32c]        # 0x140032108
   140027ddc:	mov    DWORD PTR [rbp-0x40],0xaab04a7c
   140027de3:	mov    rcx,rdi
   140027de6:	mov    DWORD PTR [rbp-0x3c],0x45d9ed82
   140027ded:	mov    DWORD PTR [rbp-0x38],0x6cafdcb4
   140027df4:	mov    DWORD PTR [rbp-0x34],0xbfdfb574
   140027dfb:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140027dff:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140027e04:	call   QWORD PTR [rip+0xa57e]        # 0x140032388
   140027e0a:	and    DWORD PTR [rbp-0x30],0x0
   140027e0e:	lea    rcx,[rbp-0x28]
   140027e12:	and    QWORD PTR [rbp-0x40],0x0
   140027e17:	lea    r9,[rbp-0x30]
   140027e1b:	and    QWORD PTR [rbp-0x28],0x0
   140027e20:	mov    r8,rdi
   140027e23:	mov    QWORD PTR [rsp+0x20],rcx
   140027e28:	lea    edx,[rax+0x2]
   140027e2b:	lea    rcx,[rbp-0x20]
   140027e2f:	call   0x14002972c
   140027e34:	mov    rcx,QWORD PTR [rbp-0x28]
   140027e38:	mov    edi,eax
   140027e3a:	test   rcx,rcx
   140027e3d:	je     0x140027e45
   140027e3f:	call   QWORD PTR [rip+0xa603]        # 0x140032448
   140027e45:	test   edi,edi
   140027e47:	js     0x140027e51
   140027e49:	test   rbx,rbx
   140027e4c:	je     0x140027e51
   140027e4e:	and    DWORD PTR [rbx],0x0
   140027e51:	mov    rcx,rsi
   140027e54:	call   QWORD PTR [rip+0xa29e]        # 0x1400320f8
   140027e5a:	mov    eax,edi
   140027e5c:	mov    rcx,QWORD PTR [rbp-0x10]
   140027e60:	xor    rcx,rsp
   140027e63:	call   0x14002dd00
   140027e68:	mov    rbx,QWORD PTR [rsp+0x90]
   140027e70:	add    rsp,0x70
   140027e74:	pop    rdi
   140027e75:	pop    rsi
   140027e76:	pop    rbp
   140027e77:	ret    
   140027e78:	int3   
   140027e79:	int3   
   140027e7a:	int3   
   140027e7b:	int3   
   140027e7c:	int3   
   140027e7d:	int3   
   140027e7e:	int3   
   140027e7f:	int3   
   140027e80:	mov    QWORD PTR [rsp+0x8],rbx
   140027e85:	push   rdi
   140027e86:	sub    rsp,0x20
   140027e8a:	mov    rdi,rcx
   140027e8d:	test   r8,r8
   140027e90:	jne    0x140027e99
   140027e92:	mov    eax,0x80004003
   140027e97:	jmp    0x140027ef0
   140027e99:	and    QWORD PTR [r8],0x0
   140027e9d:	mov    rax,QWORD PTR [rip+0x151f4]        # 0x14003d098
   140027ea4:	cmp    rax,QWORD PTR [rdx]
   140027ea7:	jne    0x140027eb6
   140027ea9:	mov    rax,QWORD PTR [rip+0x151f0]        # 0x14003d0a0
   140027eb0:	cmp    rax,QWORD PTR [rdx+0x8]
   140027eb4:	je     0x140027ecf
   140027eb6:	mov    rax,QWORD PTR [rip+0xeb1b]        # 0x1400369d8
   140027ebd:	cmp    rax,QWORD PTR [rdx]
   140027ec0:	jne    0x140027eeb
   140027ec2:	mov    rax,QWORD PTR [rip+0xeb17]        # 0x1400369e0
   140027ec9:	cmp    rax,QWORD PTR [rdx+0x8]
   140027ecd:	jne    0x140027eeb
   140027ecf:	mov    QWORD PTR [r8],rcx
   140027ed2:	mov    rax,QWORD PTR [rcx]
   140027ed5:	mov    rbx,QWORD PTR [rax+0x8]
   140027ed9:	mov    rcx,rbx
   140027edc:	call   QWORD PTR [rip+0xa7c6]        # 0x1400326a8
   140027ee2:	mov    rcx,rdi
   140027ee5:	call   rbx
   140027ee7:	xor    eax,eax
   140027ee9:	jmp    0x140027ef0
   140027eeb:	mov    eax,0x80004002
   140027ef0:	mov    rbx,QWORD PTR [rsp+0x30]
   140027ef5:	add    rsp,0x20
   140027ef9:	pop    rdi
   140027efa:	ret    
   140027efb:	int3   
   140027efc:	int3   
   140027efd:	int3   
   140027efe:	int3   
   140027eff:	int3   
   140027f00:	int3   
   140027f01:	int3   
   140027f02:	int3   
   140027f03:	int3   
   140027f04:	rex push rbx
   140027f06:	sub    rsp,0x30
   140027f0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027f13:	mov    rbx,rcx
   140027f16:	mov    ecx,0x10
   140027f1b:	call   QWORD PTR [rip+0xa6af]        # 0x1400325d0
   140027f21:	mov    rdx,rax
   140027f24:	test   rax,rax
   140027f27:	je     0x140027f39
   140027f29:	and    DWORD PTR [rax+0x8],0x0
   140027f2d:	lea    rax,[rip+0xcdac]        # 0x140034ce0
   140027f34:	mov    QWORD PTR [rdx],rax
   140027f37:	jmp    0x140027f3b
   140027f39:	xor    edx,edx
   140027f3b:	test   rdx,rdx
   140027f3e:	je     0x140027f59
   140027f40:	mov    eax,DWORD PTR [rdx+0x8]
   140027f43:	test   eax,eax
   140027f45:	jne    0x140027f50
   140027f47:	mov    DWORD PTR [rdx+0x8],0x1
   140027f4e:	jmp    0x140027f54
   140027f50:	lock inc DWORD PTR [rdx+0x8]
   140027f54:	mov    QWORD PTR [rbx],rdx
   140027f57:	jmp    0x140027f68
   140027f59:	mov    eax,0x8007000e
   140027f5e:	jmp    0x140027f6a
   140027f60:	mov    eax,DWORD PTR [rsp+0x48]
   140027f64:	test   eax,eax
   140027f66:	js     0x140027f6a
   140027f68:	xor    eax,eax
   140027f6a:	add    rsp,0x30
   140027f6e:	pop    rbx
   140027f6f:	ret    
   140027f70:	int3   
   140027f71:	int3   
   140027f72:	int3   
   140027f73:	int3   
   140027f74:	int3   
   140027f75:	int3   
   140027f76:	int3   
   140027f77:	int3   
   140027f78:	mov    rax,rsp
   140027f7b:	push   r14
   140027f7d:	sub    rsp,0x180
   140027f84:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140027f8d:	mov    QWORD PTR [rax+0x8],rbx
   140027f91:	mov    QWORD PTR [rax+0x10],rsi
   140027f95:	mov    QWORD PTR [rax+0x18],rdi
   140027f99:	mov    rax,QWORD PTR [rip+0x23080]        # 0x14004b020
   140027fa0:	xor    rax,rsp
   140027fa3:	mov    QWORD PTR [rsp+0x170],rax
   140027fab:	and    DWORD PTR [rsp+0x20],0x0
   140027fb0:	call   QWORD PTR [rip+0xa49a]        # 0x140032450
   140027fb6:	mov    rbx,QWORD PTR [rax+0xa0]
   140027fbd:	mov    rcx,rbx
   140027fc0:	call   QWORD PTR [rip+0xa6e2]        # 0x1400326a8
   140027fc6:	lea    r8,[rsp+0x20]
   140027fcb:	xor    edx,edx
   140027fcd:	lea    rcx,[rip+0x150e4]        # 0x14003d0b8
   140027fd4:	call   rbx
   140027fd6:	cmp    DWORD PTR [rsp+0x20],0x0
   140027fdb:	je     0x140027fe4
   140027fdd:	xor    eax,eax
   140027fdf:	jmp    0x140028156
   140027fe4:	mov    r8b,0x5
   140027fe7:	mov    edx,0x2
   140027fec:	xor    ecx,ecx
   140027fee:	call   QWORD PTR [rip+0xa25c]        # 0x140032250
   140027ff4:	mov    r8b,0x5
   140027ff7:	mov    edx,0x1
   140027ffc:	mov    rcx,rax
   140027fff:	call   QWORD PTR [rip+0xa24b]        # 0x140032250
   140028005:	mov    r8b,0x5
   140028008:	mov    edx,0x20
   14002800d:	mov    rcx,rax
   140028010:	call   QWORD PTR [rip+0xa23a]        # 0x140032250
   140028016:	mov    r8b,0x5
   140028019:	mov    edx,0x10
   14002801e:	mov    rcx,rax
   140028021:	call   QWORD PTR [rip+0xa229]        # 0x140032250
   140028027:	mov    rsi,rax
   14002802a:	xor    edx,edx
   14002802c:	mov    r8d,0x118
   140028032:	lea    rcx,[rsp+0x54]
   140028037:	call   0x14002e2ce
   14002803c:	mov    DWORD PTR [rsp+0x50],0x11c
   140028044:	xorps  xmm0,xmm0
   140028047:	movdqu XMMWORD PTR [rsp+0x28],xmm0
   14002804d:	and    QWORD PTR [rsp+0x38],0x0
   140028053:	xor    edi,edi
   140028055:	lea    r14,[rip+0x2655c]        # 0x14004e5b8
   14002805c:	movsxd rax,edi
   14002805f:	cmp    rax,0x1
   140028063:	jae    0x14002810f
   140028069:	lea    rbx,[rax+rax*2]
   14002806d:	mov    eax,DWORD PTR [r14+rbx*8+0x8]
   140028072:	mov    DWORD PTR [rsp+0x54],eax
   140028076:	mov    eax,DWORD PTR [r14+rbx*8+0xc]
   14002807b:	mov    DWORD PTR [rsp+0x58],eax
   14002807f:	movzx  eax,WORD PTR [r14+rbx*8+0x10]
   140028085:	mov    WORD PTR [rsp+0x164],ax
   14002808d:	movzx  eax,WORD PTR [r14+rbx*8+0x12]
   140028093:	mov    WORD PTR [rsp+0x166],ax
   14002809b:	mov    r8,rsi
   14002809e:	mov    edx,0x33
   1400280a3:	lea    rcx,[rsp+0x50]
   1400280a8:	call   QWORD PTR [rip+0xa17a]        # 0x140032228
   1400280ae:	test   eax,eax
   1400280b0:	je     0x140028108
   1400280b2:	mov    eax,DWORD PTR [r14+rbx*8+0x14]
   1400280b7:	mov    DWORD PTR [rsp+0x54],eax
   1400280bb:	mov    r8b,0x3
   1400280be:	mov    edx,0x2
   1400280c3:	xor    ecx,ecx
   1400280c5:	call   QWORD PTR [rip+0xa185]        # 0x140032250
   1400280cb:	mov    r8,rax
   1400280ce:	mov    edx,0x2
   1400280d3:	lea    rcx,[rsp+0x50]
   1400280d8:	call   QWORD PTR [rip+0xa14a]        # 0x140032228
   1400280de:	test   eax,eax
   1400280e0:	je     0x140028108
   1400280e2:	lea    rdx,[r14+rbx*8]
   1400280e6:	lea    rcx,[rsp+0x28]
   1400280eb:	call   0x140028cb0
   1400280f0:	jmp    0x140028108
   1400280f2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400280f7:	test   rcx,rcx
   1400280fa:	je     0x140028102
   1400280fc:	call   QWORD PTR [rip+0xa4c6]        # 0x1400325c8
   140028102:	mov    eax,DWORD PTR [rsp+0x20]
   140028106:	jmp    0x140028156
   140028108:	inc    edi
   14002810a:	jmp    0x14002805c
   14002810f:	mov    rax,QWORD PTR [rsp+0x30]
   140028114:	mov    rcx,QWORD PTR [rsp+0x28]
   140028119:	sub    rax,rcx
   14002811c:	test   rax,0xfffffffffffffff8
   140028122:	jne    0x140028138
   140028124:	test   rcx,rcx
   140028127:	je     0x140027fdd
   14002812d:	call   QWORD PTR [rip+0xa495]        # 0x1400325c8
   140028133:	jmp    0x140027fdd
   140028138:	lea    rcx,[rsp+0x28]
   14002813d:	call   0x140028188
   140028142:	mov    ebx,eax
   140028144:	mov    rcx,QWORD PTR [rsp+0x28]
   140028149:	test   rcx,rcx
   14002814c:	je     0x140028154
   14002814e:	call   QWORD PTR [rip+0xa474]        # 0x1400325c8
   140028154:	mov    eax,ebx
   140028156:	mov    rcx,QWORD PTR [rsp+0x170]
   14002815e:	xor    rcx,rsp
   140028161:	call   0x14002dd00
   140028166:	lea    r11,[rsp+0x180]
   14002816e:	mov    rbx,QWORD PTR [r11+0x10]
   140028172:	mov    rsi,QWORD PTR [r11+0x18]
   140028176:	mov    rdi,QWORD PTR [r11+0x20]
   14002817a:	mov    rsp,r11
   14002817d:	pop    r14
   14002817f:	ret    
   140028180:	int3   
   140028181:	int3   
   140028182:	int3   
   140028183:	int3   
   140028184:	int3   
   140028185:	int3   
   140028186:	int3   
   140028187:	int3   
   140028188:	mov    rax,rsp
   14002818b:	push   rbp
   14002818c:	push   r12
   14002818e:	push   r13
   140028190:	push   r14
   140028192:	push   r15
   140028194:	lea    rbp,[rax-0x378]
   14002819b:	sub    rsp,0x450
   1400281a2:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400281aa:	mov    QWORD PTR [rax+0x10],rbx
   1400281ae:	mov    QWORD PTR [rax+0x18],rsi
   1400281b2:	mov    QWORD PTR [rax+0x20],rdi
   1400281b6:	mov    rax,QWORD PTR [rip+0x22e63]        # 0x14004b020
   1400281bd:	xor    rax,rsp
   1400281c0:	mov    QWORD PTR [rbp+0x340],rax
   1400281c7:	mov    r12,rcx
   1400281ca:	mov    rdx,QWORD PTR [rcx]
   1400281cd:	mov    rax,QWORD PTR [rcx+0x8]
   1400281d1:	sub    rax,rdx
   1400281d4:	sar    rax,0x3
   1400281d8:	xor    ebx,ebx
   1400281da:	test   rax,rax
   1400281dd:	je     0x140028bd3
   1400281e3:	xorps  xmm0,xmm0
   1400281e6:	movdqu XMMWORD PTR [rbp-0x78],xmm0
   1400281eb:	mov    r14,rbx
   1400281ee:	mov    QWORD PTR [rbp-0x68],rbx
   1400281f2:	mov    r13d,ebx
   1400281f5:	mov    rsi,QWORD PTR [rbp-0x70]
   1400281f9:	mov    rdi,QWORD PTR [rbp-0x78]
   1400281fd:	test   eax,eax
   1400281ff:	jle    0x140028420
   140028205:	mov    QWORD PTR [rbp-0x60],rbx
   140028209:	mov    rcx,rbx
   14002820c:	mov    QWORD PTR [rsp+0x58],rbx
   140028211:	mov    QWORD PTR [rsp+0x68],rbx
   140028216:	mov    r8,QWORD PTR [rcx+rdx*1]
   14002821a:	lea    rdx,[rip+0x14ecf]        # 0x14003d0f0
   140028221:	lea    rcx,[rsp+0x68]
   140028226:	call   0x14002d138
   14002822b:	mov    r15d,eax
   14002822e:	test   eax,eax
   140028230:	js     0x1400283c9
   140028236:	mov    rbx,QWORD PTR [rsp+0x68]
   14002823b:	mov    rdx,rbx
   14002823e:	lea    rcx,[rbp-0x18]
   140028242:	call   0x14001781c
   140028247:	mov    r15,rax
   14002824a:	cmp    rax,rsi
   14002824d:	jae    0x1400282e3
   140028253:	cmp    rdi,rax
   140028256:	ja     0x1400282e3
   14002825c:	sub    r15,rdi
   14002825f:	cmp    rsi,r14
   140028262:	jne    0x1400282d9
   140028264:	mov    rax,r14
   140028267:	sub    rax,rsi
   14002826a:	sar    rax,0x5
   14002826e:	cmp    rax,0x1
   140028272:	jae    0x1400282d9
   140028274:	sub    rsi,rdi
   140028277:	sar    rsi,0x5
   14002827b:	movabs rdx,0x7ffffffffffffff
   140028285:	mov    rax,rdx
   140028288:	sub    rax,rsi
   14002828b:	cmp    rax,0x1
   14002828f:	jb     0x1400283bd
   140028295:	inc    rsi
   140028298:	sub    r14,rdi
   14002829b:	sar    r14,0x5
   14002829f:	mov    rcx,r14
   1400282a2:	shr    rcx,1
   1400282a5:	mov    rax,rdx
   1400282a8:	sub    rax,rcx
   1400282ab:	cmp    rax,r14
   1400282ae:	jae    0x1400282b7
   1400282b0:	xor    eax,eax
   1400282b2:	mov    r14d,eax
   1400282b5:	jmp    0x1400282ba
   1400282b7:	add    r14,rcx
   1400282ba:	cmp    r14,rsi
   1400282bd:	cmovb  r14,rsi
   1400282c1:	mov    rdx,r14
   1400282c4:	lea    rcx,[rbp-0x78]
   1400282c8:	call   0x140029024
   1400282cd:	mov    r14,QWORD PTR [rbp-0x68]
   1400282d1:	mov    rsi,QWORD PTR [rbp-0x70]
   1400282d5:	mov    rdi,QWORD PTR [rbp-0x78]
   1400282d9:	and    r15,0xffffffffffffffe0
   1400282dd:	lea    r8,[rdi+r15*1]
   1400282e1:	jmp    0x140028360
   1400282e3:	cmp    rsi,r14
   1400282e6:	jne    0x14002835d
   1400282e8:	mov    rax,r14
   1400282eb:	sub    rax,rsi
   1400282ee:	sar    rax,0x5
   1400282f2:	cmp    rax,0x1
   1400282f6:	jae    0x14002835d
   1400282f8:	sub    rsi,rdi
   1400282fb:	sar    rsi,0x5
   1400282ff:	movabs rdx,0x7ffffffffffffff
   140028309:	mov    rax,rdx
   14002830c:	sub    rax,rsi
   14002830f:	cmp    rax,0x1
   140028313:	jb     0x1400283c3
   140028319:	inc    rsi
   14002831c:	sub    r14,rdi
   14002831f:	sar    r14,0x5
   140028323:	mov    rcx,r14
   140028326:	shr    rcx,1
   140028329:	mov    rax,rdx
   14002832c:	sub    rax,rcx
   14002832f:	cmp    rax,r14
   140028332:	jae    0x14002833b
   140028334:	xor    eax,eax
   140028336:	mov    r14d,eax
   140028339:	jmp    0x14002833e
   14002833b:	add    r14,rcx
   14002833e:	cmp    r14,rsi
   140028341:	cmovb  r14,rsi
   140028345:	mov    rdx,r14
   140028348:	lea    rcx,[rbp-0x78]
   14002834c:	call   0x140029024
   140028351:	mov    r14,QWORD PTR [rbp-0x68]
   140028355:	mov    rsi,QWORD PTR [rbp-0x70]
   140028359:	mov    rdi,QWORD PTR [rbp-0x78]
   14002835d:	mov    r8,r15
   140028360:	mov    rdx,rsi
   140028363:	call   0x140029114
   140028368:	add    rsi,0x20
   14002836c:	mov    QWORD PTR [rbp-0x70],rsi
   140028370:	cmp    QWORD PTR [rbp+0x0],0x8
   140028375:	jb     0x140028382
   140028377:	mov    rcx,QWORD PTR [rbp-0x18]
   14002837b:	call   QWORD PTR [rip+0xa247]        # 0x1400325c8
   140028381:	nop
   140028382:	test   rbx,rbx
   140028385:	je     0x140028390
   140028387:	mov    rcx,rbx
   14002838a:	call   QWORD PTR [rip+0xa238]        # 0x1400325c8
   140028390:	inc    r13d
   140028393:	mov    rcx,QWORD PTR [rsp+0x58]
   140028398:	add    rcx,0x8
   14002839c:	mov    QWORD PTR [rsp+0x58],rcx
   1400283a1:	mov    rdx,QWORD PTR [r12]
   1400283a5:	mov    rax,QWORD PTR [r12+0x8]
   1400283aa:	sub    rax,rdx
   1400283ad:	sar    rax,0x3
   1400283b1:	cmp    r13d,eax
   1400283b4:	jge    0x140028420
   1400283b6:	xor    ebx,ebx
   1400283b8:	jmp    0x140028211
   1400283bd:	call   0x14000d388
   1400283c2:	int3   
   1400283c3:	call   0x14000d388
   1400283c8:	nop
   1400283c9:	mov    rcx,QWORD PTR [rsp+0x68]
   1400283ce:	test   rcx,rcx
   1400283d1:	je     0x1400283da
   1400283d3:	call   QWORD PTR [rip+0xa1ef]        # 0x1400325c8
   1400283d9:	nop
   1400283da:	test   rdi,rdi
   1400283dd:	je     0x140028bd0
   1400283e3:	mov    rbx,rdi
   1400283e6:	cmp    rdi,rsi
   1400283e9:	je     0x140028bc7
   1400283ef:	xor    eax,eax
   1400283f1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400283f6:	jb     0x140028403
   1400283f8:	mov    rcx,QWORD PTR [rbx]
   1400283fb:	call   QWORD PTR [rip+0xa1c7]        # 0x1400325c8
   140028401:	xor    eax,eax
   140028403:	mov    QWORD PTR [rbx+0x18],0x7
   14002840b:	mov    QWORD PTR [rbx+0x10],rax
   14002840f:	mov    WORD PTR [rbx],ax
   140028412:	add    rbx,0x20
   140028416:	cmp    rbx,rsi
   140028419:	jne    0x1400283f1
   14002841b:	jmp    0x140028bc7
   140028420:	xor    r13d,r13d
   140028423:	mov    r14d,r13d
   140028426:	mov    QWORD PTR [rbp-0x48],r13
   14002842a:	mov    QWORD PTR [rbp-0x40],r13
   14002842e:	mov    QWORD PTR [rbp-0x38],r13
   140028432:	mov    QWORD PTR [rbp-0x60],r13
   140028436:	lea    rdx,[rbp-0x60]
   14002843a:	lea    rcx,[rip+0x14cd7]        # 0x14003d118
   140028441:	call   0x140029890
   140028446:	mov    rbx,QWORD PTR [rbp-0x60]
   14002844a:	test   eax,eax
   14002844c:	js     0x140028456
   14002844e:	test   rbx,rbx
   140028451:	mov    rdx,rbx
   140028454:	jne    0x14002845d
   140028456:	lea    rdx,[rip+0x14cf3]        # 0x14003d150
   14002845d:	lea    rax,[rsp+0x58]
   140028462:	mov    QWORD PTR [rsp+0x20],rax
   140028467:	mov    QWORD PTR [rsp+0x58],r13
   14002846c:	mov    r9d,0x20019
   140028472:	xor    r8d,r8d
   140028475:	mov    rcx,0xffffffff80000002
   14002847c:	call   QWORD PTR [rip+0x9bce]        # 0x140032050
   140028482:	test   eax,eax
   140028484:	jne    0x140028492
   140028486:	mov    r14,QWORD PTR [rsp+0x58]
   14002848b:	mov    eax,r13d
   14002848e:	mov    QWORD PTR [rbp-0x48],r14
   140028492:	movzx  r15d,ax
   140028496:	or     r15d,0x80070000
   14002849d:	test   eax,eax
   14002849f:	cmovle r15d,eax
   1400284a3:	test   r15d,r15d
   1400284a6:	jns    0x140028509
   1400284a8:	test   rbx,rbx
   1400284ab:	je     0x1400284b7
   1400284ad:	mov    rcx,rbx
   1400284b0:	call   QWORD PTR [rip+0x9f92]        # 0x140032448
   1400284b6:	nop
   1400284b7:	test   r14,r14
   1400284ba:	je     0x1400284c6
   1400284bc:	mov    rcx,r14
   1400284bf:	call   QWORD PTR [rip+0x9b73]        # 0x140032038
   1400284c5:	nop
   1400284c6:	test   rdi,rdi
   1400284c9:	je     0x140028bd0
   1400284cf:	mov    rbx,rdi
   1400284d2:	cmp    rdi,rsi
   1400284d5:	je     0x140028bc7
   1400284db:	cmp    QWORD PTR [rbx+0x18],0x8
   1400284e0:	jb     0x1400284eb
   1400284e2:	mov    rcx,QWORD PTR [rbx]
   1400284e5:	call   QWORD PTR [rip+0xa0dd]        # 0x1400325c8
   1400284eb:	mov    QWORD PTR [rbx+0x18],0x7
   1400284f3:	mov    QWORD PTR [rbx+0x10],r13
   1400284f7:	mov    WORD PTR [rbx],r13w
   1400284fb:	add    rbx,0x20
   1400284ff:	cmp    rbx,rsi
   140028502:	jne    0x1400284db
   140028504:	jmp    0x140028bc7
   140028509:	xor    edx,edx
   14002850b:	mov    r8d,0x110
   140028511:	lea    rcx,[rbp+0x14]
   140028515:	call   0x14002e2ce
   14002851a:	mov    DWORD PTR [rbp+0x10],0x114
   140028521:	lea    rcx,[rbp+0x10]
   140028525:	call   QWORD PTR [rip+0x9d7d]        # 0x1400322a8
   14002852b:	test   eax,eax
   14002852d:	jne    0x140028605
   140028533:	call   QWORD PTR [rip+0x9d4f]        # 0x140032288
   140028539:	movzx  r15d,ax
   14002853d:	or     r15d,0x80070000
   140028544:	test   eax,eax
   140028546:	cmovle r15d,eax
   14002854a:	test   BYTE PTR [rip+0x2613b],0x1        # 0x14004e68c
   140028551:	je     0x1400285a4
   140028553:	mov    DWORD PTR [rsp+0x60],r15d
   140028558:	mov    ecx,0xa
   14002855d:	mov    QWORD PTR [rsp+0x40],r13
   140028562:	lea    r13d,[rcx-0x6]
   140028566:	mov    QWORD PTR [rsp+0x38],r13
   14002856b:	lea    rax,[rsp+0x60]
   140028570:	mov    QWORD PTR [rsp+0x30],rax
   140028575:	mov    QWORD PTR [rsp+0x28],r13
   14002857a:	lea    rax,[rip+0x1083b]        # 0x140038dbc
   140028581:	mov    QWORD PTR [rsp+0x20],rax
   140028586:	movzx  r9d,cx
   14002858a:	lea    r8,[rip+0x14cf7]        # 0x14003d288
   140028591:	lea    edx,[rcx+0x21]
   140028594:	mov    rcx,QWORD PTR [rip+0x260e5]        # 0x14004e680
   14002859b:	call   QWORD PTR [rip+0x9a7f]        # 0x140032020
   1400285a1:	xor    r13d,r13d
   1400285a4:	test   rbx,rbx
   1400285a7:	je     0x1400285b3
   1400285a9:	mov    rcx,rbx
   1400285ac:	call   QWORD PTR [rip+0x9e96]        # 0x140032448
   1400285b2:	nop
   1400285b3:	test   r14,r14
   1400285b6:	je     0x1400285c2
   1400285b8:	mov    rcx,r14
   1400285bb:	call   QWORD PTR [rip+0x9a77]        # 0x140032038
   1400285c1:	nop
   1400285c2:	test   rdi,rdi
   1400285c5:	je     0x140028bd0
   1400285cb:	mov    rbx,rdi
   1400285ce:	cmp    rdi,rsi
   1400285d1:	je     0x140028bc7
   1400285d7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400285dc:	jb     0x1400285e7
   1400285de:	mov    rcx,QWORD PTR [rbx]
   1400285e1:	call   QWORD PTR [rip+0x9fe1]        # 0x1400325c8
   1400285e7:	mov    QWORD PTR [rbx+0x18],0x7
   1400285ef:	mov    QWORD PTR [rbx+0x10],r13
   1400285f3:	mov    WORD PTR [rbx],r13w
   1400285f7:	add    rbx,0x20
   1400285fb:	cmp    rbx,rsi
   1400285fe:	jne    0x1400285d7
   140028600:	jmp    0x140028bc7
   140028605:	cmp    DWORD PTR [rbp+0x14],0x6
   140028609:	ja     0x14002861a
   14002860b:	jne    0x140028613
   14002860d:	cmp    DWORD PTR [rbp+0x18],r13d
   140028611:	ja     0x14002861a
   140028613:	mov    BYTE PTR [rsp+0x50],r13b
   140028618:	jmp    0x14002861f
   14002861a:	mov    BYTE PTR [rsp+0x50],0x1
   14002861f:	mov    r12d,r13d
   140028622:	mov    r15,rsi
   140028625:	sub    r15,rdi
   140028628:	sar    r15,0x5
   14002862c:	test   r15,r15
   14002862f:	je     0x140028b86
   140028635:	mov    r13d,0x4
   14002863b:	mov    DWORD PTR [rbp-0x80],0x104
   140028642:	lea    rax,[rbp-0x28]
   140028646:	mov    QWORD PTR [rsp+0x38],rax
   14002864b:	xor    eax,eax
   14002864d:	mov    QWORD PTR [rsp+0x30],rax
   140028652:	mov    QWORD PTR [rsp+0x28],rax
   140028657:	mov    QWORD PTR [rsp+0x20],rax
   14002865c:	lea    r9,[rbp-0x80]
   140028660:	lea    r8,[rbp+0x130]
   140028667:	mov    edx,r12d
   14002866a:	mov    rcx,r14
   14002866d:	call   QWORD PTR [rip+0x99d5]        # 0x140032048
   140028673:	movzx  ecx,ax
   140028676:	or     ecx,0x80070000
   14002867c:	xor    edx,edx
   14002867e:	test   eax,eax
   140028680:	cmovle ecx,eax
   140028683:	inc    r12d
   140028686:	mov    DWORD PTR [rsp+0x60],r12d
   14002868b:	test   ecx,ecx
   14002868d:	js     0x140028b83
   140028693:	cmp    DWORD PTR [rbp-0x80],0x104
   14002869a:	ja     0x140028b83
   1400286a0:	mov    eax,DWORD PTR [rbp-0x80]
   1400286a3:	add    rax,rax
   1400286a6:	cmp    rax,0x20a
   1400286ac:	jae    0x140028b7d
   1400286b2:	mov    WORD PTR [rbp+rax*1+0x130],dx
   1400286ba:	mov    DWORD PTR [rsp+0x7c],edx
   1400286be:	test   r15d,r15d
   1400286c1:	jle    0x140028971
   1400286c7:	mov    r12,rdi
   1400286ca:	cmp    QWORD PTR [r12+0x18],0x8
   1400286d0:	jb     0x1400286d8
   1400286d2:	mov    rax,QWORD PTR [r12]
   1400286d6:	jmp    0x1400286db
   1400286d8:	mov    rax,r12
   1400286db:	or     r9,0xffffffffffffffff
   1400286df:	mov    r8,r9
   1400286e2:	inc    r8
   1400286e5:	cmp    WORD PTR [rax+r8*2],dx
   1400286ea:	jne    0x1400286e2
   1400286ec:	lea    rcx,[rbp+0x130]
   1400286f3:	mov    rax,r9
   1400286f6:	inc    rax
   1400286f9:	cmp    WORD PTR [rcx+rax*2],dx
   1400286fd:	jne    0x1400286f6
   1400286ff:	cmp    rax,r8
   140028702:	jb     0x140028728
   140028704:	cmp    QWORD PTR [r12+0x18],0x8
   14002870a:	jb     0x140028712
   14002870c:	mov    rdx,QWORD PTR [r12]
   140028710:	jmp    0x140028715
   140028712:	mov    rdx,r12
   140028715:	lea    rcx,[rbp+0x130]
   14002871c:	call   QWORD PTR [rip+0x9e86]        # 0x1400325a8
   140028722:	xor    edx,edx
   140028724:	test   eax,eax
   140028726:	je     0x140028741
   140028728:	mov    eax,DWORD PTR [rsp+0x7c]
   14002872c:	inc    eax
   14002872e:	mov    DWORD PTR [rsp+0x7c],eax
   140028732:	add    r12,0x20
   140028736:	cmp    eax,r15d
   140028739:	jge    0x14002896c
   14002873f:	jmp    0x1400286ca
   140028741:	mov    r15,rdx
   140028744:	mov    QWORD PTR [rbp-0x18],rdx
   140028748:	mov    QWORD PTR [rbp-0x10],rdx
   14002874c:	mov    QWORD PTR [rbp-0x8],rdx
   140028750:	mov    QWORD PTR [rsp+0x70],rdx
   140028755:	lea    rax,[rsp+0x70]
   14002875a:	mov    QWORD PTR [rsp+0x20],rax
   14002875f:	mov    r9d,0x20019
   140028765:	xor    r8d,r8d
   140028768:	lea    rdx,[rbp+0x130]
   14002876f:	mov    rcx,r14
   140028772:	call   QWORD PTR [rip+0x98d8]        # 0x140032050
   140028778:	xor    ecx,ecx
   14002877a:	test   eax,eax
   14002877c:	jne    0x140028789
   14002877e:	mov    eax,ecx
   140028780:	mov    r15,QWORD PTR [rsp+0x70]
   140028785:	mov    QWORD PTR [rbp-0x18],r15
   140028789:	movzx  r12d,ax
   14002878d:	or     r12d,0x80070000
   140028794:	test   eax,eax
   140028796:	cmovle r12d,eax
   14002879a:	test   r12d,r12d
   14002879d:	js     0x140028b08
   1400287a3:	mov    DWORD PTR [rsp+0x78],ecx
   1400287a7:	mov    DWORD PTR [rsp+0x70],r13d
   1400287ac:	lea    rax,[rsp+0x70]
   1400287b1:	mov    QWORD PTR [rsp+0x28],rax
   1400287b6:	lea    rax,[rsp+0x78]
   1400287bb:	mov    QWORD PTR [rsp+0x20],rax
   1400287c0:	lea    r9,[rbp-0x50]
   1400287c4:	xor    r8d,r8d
   1400287c7:	lea    rdx,[rip+0x14a22]        # 0x14003d1f0
   1400287ce:	mov    rcx,r15
   1400287d1:	call   QWORD PTR [rip+0x98e9]        # 0x1400320c0
   1400287d7:	xor    r9d,r9d
   1400287da:	test   eax,eax
   1400287dc:	jne    0x1400287eb
   1400287de:	mov    eax,DWORD PTR [rbp-0x50]
   1400287e1:	sub    eax,r13d
   1400287e4:	neg    eax
   1400287e6:	sbb    eax,eax
   1400287e8:	and    eax,0xd
   1400287eb:	movzx  r12d,ax
   1400287ef:	or     r12d,0x80070000
   1400287f6:	test   eax,eax
   1400287f8:	cmovle r12d,eax
   1400287fc:	test   r12d,r12d
   1400287ff:	js     0x140028a92
   140028805:	mov    r8b,BYTE PTR [rsp+0x50]
   14002880a:	mov    edx,DWORD PTR [rsp+0x78]
   14002880e:	test   r8b,r8b
   140028811:	je     0x140028822
   140028813:	lea    eax,[rdx-0x50]
   140028816:	test   eax,0xffffffdf
   14002881b:	jne    0x140028830
   14002881d:	jmp    0x14002893c
   140028822:	lea    eax,[rdx-0x5]
   140028825:	test   eax,0xfffffffd
   14002882a:	je     0x14002893c
   140028830:	mov    ecx,r9d
   140028833:	cmp    edx,0x60
   140028836:	sete   cl
   140028839:	mov    eax,r9d
   14002883c:	cmp    edx,0x6
   14002883f:	sete   al
   140028842:	test   r8b,r8b
   140028845:	cmovne eax,ecx
   140028848:	test   eax,eax
   14002884a:	je     0x140028989
   140028850:	mov    QWORD PTR [rsp+0x68],r9
   140028855:	mov    DWORD PTR [rsp+0x70],r13d
   14002885a:	lea    rax,[rsp+0x70]
   14002885f:	mov    QWORD PTR [rsp+0x28],rax
   140028864:	lea    rax,[rsp+0x6c]
   140028869:	mov    QWORD PTR [rsp+0x20],rax
   14002886e:	lea    r9,[rbp-0x54]
   140028872:	xor    r8d,r8d
   140028875:	lea    rdx,[rip+0x14994]        # 0x14003d210
   14002887c:	mov    rcx,r15
   14002887f:	call   QWORD PTR [rip+0x983b]        # 0x1400320c0
   140028885:	test   eax,eax
   140028887:	jne    0x140028896
   140028889:	mov    eax,DWORD PTR [rbp-0x54]
   14002888c:	sub    eax,r13d
   14002888f:	neg    eax
   140028891:	sbb    eax,eax
   140028893:	and    eax,0xd
   140028896:	movzx  r12d,ax
   14002889a:	or     r12d,0x80070000
   1400288a1:	test   eax,eax
   1400288a3:	cmovle r12d,eax
   1400288a7:	test   r12d,r12d
   1400288aa:	js     0x140028a1f
   1400288b0:	mov    DWORD PTR [rsp+0x70],r13d
   1400288b5:	lea    rax,[rsp+0x70]
   1400288ba:	mov    QWORD PTR [rsp+0x28],rax
   1400288bf:	lea    rax,[rsp+0x68]
   1400288c4:	mov    QWORD PTR [rsp+0x20],rax
   1400288c9:	lea    r9,[rbp-0x58]
   1400288cd:	xor    r8d,r8d
   1400288d0:	lea    rdx,[rip+0x14959]        # 0x14003d230
   1400288d7:	mov    rcx,r15
   1400288da:	call   QWORD PTR [rip+0x97e0]        # 0x1400320c0
   1400288e0:	xor    ecx,ecx
   1400288e2:	test   eax,eax
   1400288e4:	jne    0x1400288f3
   1400288e6:	mov    eax,DWORD PTR [rbp-0x58]
   1400288e9:	sub    eax,r13d
   1400288ec:	neg    eax
   1400288ee:	sbb    eax,eax
   1400288f0:	and    eax,0xd
   1400288f3:	movzx  r12d,ax
   1400288f7:	or     r12d,0x80070000
   1400288fe:	test   eax,eax
   140028900:	cmovle r12d,eax
   140028904:	test   r12d,r12d
   140028907:	js     0x1400289d9
   14002890d:	mov    QWORD PTR [rsp+0x58],rcx
   140028912:	lea    rcx,[rsp+0x58]
   140028917:	call   0x140028c0c
   14002891c:	mov    r12d,eax
   14002891f:	test   eax,eax
   140028921:	js     0x1400289d9
   140028927:	lea    rdx,[rsp+0x68]
   14002892c:	lea    rcx,[rsp+0x58]
   140028931:	call   QWORD PTR [rip+0x98f9]        # 0x140032230
   140028937:	cmp    eax,0xffffffff
   14002893a:	je     0x140028989
   14002893c:	movsxd r8,DWORD PTR [rsp+0x7c]
   140028941:	shl    r8,0x5
   140028945:	add    r8,rdi
   140028948:	lea    rdx,[rbp-0x30]
   14002894c:	lea    rcx,[rbp-0x78]
   140028950:	call   0x140028df0
   140028955:	nop
   140028956:	test   r15,r15
   140028959:	je     0x140028964
   14002895b:	mov    rcx,r15
   14002895e:	call   QWORD PTR [rip+0x96d4]        # 0x140032038
   140028964:	mov    rdi,QWORD PTR [rbp-0x78]
   140028968:	mov    rsi,QWORD PTR [rbp-0x70]
   14002896c:	mov    r12d,DWORD PTR [rsp+0x60]
   140028971:	mov    r15,rsi
   140028974:	sub    r15,rdi
   140028977:	sar    r15,0x5
   14002897b:	test   r15,r15
   14002897e:	je     0x140028b83
   140028984:	jmp    0x14002863b
   140028989:	test   r15,r15
   14002898c:	je     0x140028998
   14002898e:	mov    rcx,r15
   140028991:	call   QWORD PTR [rip+0x96a1]        # 0x140032038
   140028997:	nop
   140028998:	test   rbx,rbx
   14002899b:	je     0x1400289a7
   14002899d:	mov    rcx,rbx
   1400289a0:	call   QWORD PTR [rip+0x9aa2]        # 0x140032448
   1400289a6:	nop
   1400289a7:	test   r14,r14
   1400289aa:	je     0x1400289b6
   1400289ac:	mov    rcx,r14
   1400289af:	call   QWORD PTR [rip+0x9683]        # 0x140032038
   1400289b5:	nop
   1400289b6:	test   rdi,rdi
   1400289b9:	je     0x1400289cf
   1400289bb:	mov    r8,rsi
   1400289be:	mov    rdx,rdi
   1400289c1:	call   0x140028f0c
   1400289c6:	mov    rcx,rdi
   1400289c9:	call   QWORD PTR [rip+0x9bf9]        # 0x1400325c8
   1400289cf:	mov    eax,0x1
   1400289d4:	jmp    0x140028bd3
   1400289d9:	test   r15,r15
   1400289dc:	je     0x1400289e8
   1400289de:	mov    rcx,r15
   1400289e1:	call   QWORD PTR [rip+0x9651]        # 0x140032038
   1400289e7:	nop
   1400289e8:	test   rbx,rbx
   1400289eb:	je     0x1400289f7
   1400289ed:	mov    rcx,rbx
   1400289f0:	call   QWORD PTR [rip+0x9a52]        # 0x140032448
   1400289f6:	nop
   1400289f7:	test   r14,r14
   1400289fa:	je     0x140028a06
   1400289fc:	mov    rcx,r14
   1400289ff:	call   QWORD PTR [rip+0x9633]        # 0x140032038
   140028a05:	nop
   140028a06:	test   rdi,rdi
   140028a09:	je     0x140028b78
   140028a0f:	mov    r8,rsi
   140028a12:	mov    rdx,rdi
   140028a15:	call   0x140028f0c
   140028a1a:	jmp    0x140028b6f
   140028a1f:	xor    r13d,r13d
   140028a22:	test   r15,r15
   140028a25:	je     0x140028a31
   140028a27:	mov    rcx,r15
   140028a2a:	call   QWORD PTR [rip+0x9608]        # 0x140032038
   140028a30:	nop
   140028a31:	test   rbx,rbx
   140028a34:	je     0x140028a40
   140028a36:	mov    rcx,rbx
   140028a39:	call   QWORD PTR [rip+0x9a09]        # 0x140032448
   140028a3f:	nop
   140028a40:	test   r14,r14
   140028a43:	je     0x140028a4f
   140028a45:	mov    rcx,r14
   140028a48:	call   QWORD PTR [rip+0x95ea]        # 0x140032038
   140028a4e:	nop
   140028a4f:	test   rdi,rdi
   140028a52:	je     0x140028b78
   140028a58:	mov    rbx,rdi
   140028a5b:	cmp    rdi,rsi
   140028a5e:	je     0x140028b6f
   140028a64:	cmp    QWORD PTR [rbx+0x18],0x8
   140028a69:	jb     0x140028a74
   140028a6b:	mov    rcx,QWORD PTR [rbx]
   140028a6e:	call   QWORD PTR [rip+0x9b54]        # 0x1400325c8
   140028a74:	mov    QWORD PTR [rbx+0x18],0x7
   140028a7c:	mov    QWORD PTR [rbx+0x10],r13
   140028a80:	mov    WORD PTR [rbx],r13w
   140028a84:	add    rbx,0x20
   140028a88:	cmp    rbx,rsi
   140028a8b:	jne    0x140028a64
   140028a8d:	jmp    0x140028b6f
   140028a92:	test   r15,r15
   140028a95:	je     0x140028aa3
   140028a97:	mov    rcx,r15
   140028a9a:	call   QWORD PTR [rip+0x9598]        # 0x140032038
   140028aa0:	xor    r9d,r9d
   140028aa3:	test   rbx,rbx
   140028aa6:	je     0x140028ab4
   140028aa8:	mov    rcx,rbx
   140028aab:	call   QWORD PTR [rip+0x9997]        # 0x140032448
   140028ab1:	xor    r9d,r9d
   140028ab4:	test   r14,r14
   140028ab7:	je     0x140028ac5
   140028ab9:	mov    rcx,r14
   140028abc:	call   QWORD PTR [rip+0x9576]        # 0x140032038
   140028ac2:	xor    r9d,r9d
   140028ac5:	test   rdi,rdi
   140028ac8:	je     0x140028b78
   140028ace:	mov    rbx,rdi
   140028ad1:	cmp    rdi,rsi
   140028ad4:	je     0x140028b6f
   140028ada:	cmp    QWORD PTR [rbx+0x18],0x8
   140028adf:	jb     0x140028aed
   140028ae1:	mov    rcx,QWORD PTR [rbx]
   140028ae4:	call   QWORD PTR [rip+0x9ade]        # 0x1400325c8
   140028aea:	xor    r9d,r9d
   140028aed:	mov    QWORD PTR [rbx+0x18],0x7
   140028af5:	mov    QWORD PTR [rbx+0x10],r9
   140028af9:	mov    WORD PTR [rbx],r9w
   140028afd:	add    rbx,0x20
   140028b01:	cmp    rbx,rsi
   140028b04:	jne    0x140028ada
   140028b06:	jmp    0x140028b6f
   140028b08:	test   r15,r15
   140028b0b:	je     0x140028b18
   140028b0d:	mov    rcx,r15
   140028b10:	call   QWORD PTR [rip+0x9522]        # 0x140032038
   140028b16:	xor    ecx,ecx
   140028b18:	test   rbx,rbx
   140028b1b:	je     0x140028b28
   140028b1d:	mov    rcx,rbx
   140028b20:	call   QWORD PTR [rip+0x9922]        # 0x140032448
   140028b26:	xor    ecx,ecx
   140028b28:	test   r14,r14
   140028b2b:	je     0x140028b38
   140028b2d:	mov    rcx,r14
   140028b30:	call   QWORD PTR [rip+0x9502]        # 0x140032038
   140028b36:	xor    ecx,ecx
   140028b38:	test   rdi,rdi
   140028b3b:	je     0x140028b78
   140028b3d:	mov    rbx,rdi
   140028b40:	cmp    rdi,rsi
   140028b43:	je     0x140028b6f
   140028b45:	cmp    QWORD PTR [rbx+0x18],0x8
   140028b4a:	jb     0x140028b57
   140028b4c:	mov    rcx,QWORD PTR [rbx]
   140028b4f:	call   QWORD PTR [rip+0x9a73]        # 0x1400325c8
   140028b55:	xor    ecx,ecx
   140028b57:	mov    QWORD PTR [rbx+0x18],0x7
   140028b5f:	mov    QWORD PTR [rbx+0x10],rcx
   140028b63:	mov    WORD PTR [rbx],cx
   140028b66:	add    rbx,0x20
   140028b6a:	cmp    rbx,rsi
   140028b6d:	jne    0x140028b45
   140028b6f:	mov    rcx,rdi
   140028b72:	call   QWORD PTR [rip+0x9a50]        # 0x1400325c8
   140028b78:	mov    eax,r12d
   140028b7b:	jmp    0x140028bd3
   140028b7d:	call   0x14002e158
   140028b82:	int3   
   140028b83:	xor    r13d,r13d
   140028b86:	mov    rax,rsi
   140028b89:	sub    rax,rdi
   140028b8c:	test   rax,0xffffffffffffffe0
   140028b92:	mov    r15d,r13d
   140028b95:	setne  r15b
   140028b99:	test   rbx,rbx
   140028b9c:	je     0x140028ba8
   140028b9e:	mov    rcx,rbx
   140028ba1:	call   QWORD PTR [rip+0x98a1]        # 0x140032448
   140028ba7:	nop
   140028ba8:	test   r14,r14
   140028bab:	je     0x140028bb7
   140028bad:	mov    rcx,r14
   140028bb0:	call   QWORD PTR [rip+0x9482]        # 0x140032038
   140028bb6:	nop
   140028bb7:	test   rdi,rdi
   140028bba:	je     0x140028bd0
   140028bbc:	mov    r8,rsi
   140028bbf:	mov    rdx,rdi
   140028bc2:	call   0x140028f0c
   140028bc7:	mov    rcx,rdi
   140028bca:	call   QWORD PTR [rip+0x99f8]        # 0x1400325c8
   140028bd0:	mov    eax,r15d
   140028bd3:	mov    rcx,QWORD PTR [rbp+0x340]
   140028bda:	xor    rcx,rsp
   140028bdd:	call   0x14002dd00
   140028be2:	lea    r11,[rsp+0x450]
   140028bea:	mov    rbx,QWORD PTR [r11+0x38]
   140028bee:	mov    rsi,QWORD PTR [r11+0x40]
   140028bf2:	mov    rdi,QWORD PTR [r11+0x48]
   140028bf6:	mov    rsp,r11
   140028bf9:	pop    r15
   140028bfb:	pop    r14
   140028bfd:	pop    r13
   140028bff:	pop    r12
   140028c01:	pop    rbp
   140028c02:	ret    
   140028c03:	int3   
   140028c04:	int3   
   140028c05:	int3   
   140028c06:	int3   
   140028c07:	int3   
   140028c08:	int3   
   140028c09:	int3   
   140028c0a:	int3   
   140028c0b:	int3   
   140028c0c:	rex push rbx
   140028c0e:	sub    rsp,0x60
   140028c12:	mov    rax,QWORD PTR [rip+0x22407]        # 0x14004b020
   140028c19:	xor    rax,rsp
   140028c1c:	mov    QWORD PTR [rsp+0x58],rax
   140028c21:	and    QWORD PTR [rsp+0x20],0x0
   140028c27:	lea    r8,[rip+0x14622]        # 0x14003d250
   140028c2e:	mov    rbx,rcx
   140028c31:	lea    rdx,[rip+0x14638]        # 0x14003d270
   140028c38:	lea    rcx,[rsp+0x20]
   140028c3d:	call   0x14002a460
   140028c42:	test   eax,eax
   140028c44:	js     0x140028c96
   140028c46:	xor    edx,edx
   140028c48:	lea    rcx,[rsp+0x28]
   140028c4d:	lea    r8d,[rdx+0x30]
   140028c51:	call   0x14002e2ce
   140028c56:	mov    rcx,QWORD PTR [rsp+0x20]
   140028c5b:	call   QWORD PTR [rip+0x9a47]        # 0x1400326a8
   140028c61:	xor    r9d,r9d
   140028c64:	lea    rdx,[rsp+0x28]
   140028c69:	lea    r8d,[r9+0x30]
   140028c6d:	lea    ecx,[r9+0x3]
   140028c71:	call   QWORD PTR [rsp+0x20]
   140028c75:	test   eax,eax
   140028c77:	jns    0x140028c80
   140028c79:	mov    eax,0x80004005
   140028c7e:	jmp    0x140028c96
   140028c80:	mov    r8d,0x8
   140028c86:	lea    rdx,[rsp+0x28]
   140028c8b:	mov    rcx,rbx
   140028c8e:	call   QWORD PTR [rip+0x980c]        # 0x1400324a0
   140028c94:	xor    eax,eax
   140028c96:	mov    rcx,QWORD PTR [rsp+0x58]
   140028c9b:	xor    rcx,rsp
   140028c9e:	call   0x14002dd00
   140028ca3:	add    rsp,0x60
   140028ca7:	pop    rbx
   140028ca8:	ret    
   140028ca9:	int3   
   140028caa:	int3   
   140028cab:	int3   
   140028cac:	int3   
   140028cad:	int3   
   140028cae:	int3   
   140028caf:	int3   
   140028cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140028cb5:	push   rdi
   140028cb6:	sub    rsp,0x20
   140028cba:	mov    rbx,rcx
   140028cbd:	mov    rdi,rdx
   140028cc0:	mov    rcx,QWORD PTR [rcx+0x8]
   140028cc4:	cmp    rdx,rcx
   140028cc7:	jae    0x140028d5a
   140028ccd:	cmp    QWORD PTR [rbx],rdx
   140028cd0:	ja     0x140028d5a
   140028cd6:	sub    rdi,QWORD PTR [rbx]
   140028cd9:	mov    rdx,QWORD PTR [rbx+0x10]
   140028cdd:	sar    rdi,0x3
   140028ce1:	cmp    rcx,rdx
   140028ce4:	jne    0x140028d45
   140028ce6:	mov    rax,rdx
   140028ce9:	sub    rax,rcx
   140028cec:	sar    rax,0x3
   140028cf0:	cmp    rax,0x1
   140028cf4:	jae    0x140028d45
   140028cf6:	sub    rcx,QWORD PTR [rbx]
   140028cf9:	movabs r8,0x1fffffffffffffff
   140028d03:	sar    rcx,0x3
   140028d07:	mov    rax,r8
   140028d0a:	sub    rax,rcx
   140028d0d:	cmp    rax,0x1
   140028d11:	jb     0x140028ddd
   140028d17:	sub    rdx,QWORD PTR [rbx]
   140028d1a:	inc    rcx
   140028d1d:	sar    rdx,0x3
   140028d21:	mov    rax,rdx
   140028d24:	shr    rax,1
   140028d27:	sub    r8,rax
   140028d2a:	cmp    r8,rdx
   140028d2d:	jae    0x140028d33
   140028d2f:	xor    edx,edx
   140028d31:	jmp    0x140028d36
   140028d33:	add    rdx,rax
   140028d36:	cmp    rdx,rcx
   140028d39:	cmovb  rdx,rcx
   140028d3d:	mov    rcx,rbx
   140028d40:	call   0x140028f68
   140028d45:	mov    rdx,QWORD PTR [rbx+0x8]
   140028d49:	test   rdx,rdx
   140028d4c:	je     0x140028dcd
   140028d4e:	mov    rax,QWORD PTR [rbx]
   140028d51:	mov    rcx,QWORD PTR [rax+rdi*8]
   140028d55:	mov    QWORD PTR [rdx],rcx
   140028d58:	jmp    0x140028dcd
   140028d5a:	mov    rdx,QWORD PTR [rbx+0x10]
   140028d5e:	cmp    rcx,rdx
   140028d61:	jne    0x140028dbe
   140028d63:	mov    rax,rdx
   140028d66:	sub    rax,rcx
   140028d69:	sar    rax,0x3
   140028d6d:	cmp    rax,0x1
   140028d71:	jae    0x140028dbe
   140028d73:	sub    rcx,QWORD PTR [rbx]
   140028d76:	movabs r8,0x1fffffffffffffff
   140028d80:	sar    rcx,0x3
   140028d84:	mov    rax,r8
   140028d87:	sub    rax,rcx
   140028d8a:	cmp    rax,0x1
   140028d8e:	jb     0x140028de3
   140028d90:	sub    rdx,QWORD PTR [rbx]
   140028d93:	inc    rcx
   140028d96:	sar    rdx,0x3
   140028d9a:	mov    rax,rdx
   140028d9d:	shr    rax,1
   140028da0:	sub    r8,rax
   140028da3:	cmp    r8,rdx
   140028da6:	jae    0x140028dac
   140028da8:	xor    edx,edx
   140028daa:	jmp    0x140028daf
   140028dac:	add    rdx,rax
   140028daf:	cmp    rdx,rcx
   140028db2:	cmovb  rdx,rcx
   140028db6:	mov    rcx,rbx
   140028db9:	call   0x140028f68
   140028dbe:	mov    rcx,QWORD PTR [rbx+0x8]
   140028dc2:	test   rcx,rcx
   140028dc5:	je     0x140028dcd
   140028dc7:	mov    rax,QWORD PTR [rdi]
   140028dca:	mov    QWORD PTR [rcx],rax
   140028dcd:	add    QWORD PTR [rbx+0x8],0x8
   140028dd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140028dd7:	add    rsp,0x20
   140028ddb:	pop    rdi
   140028ddc:	ret    
   140028ddd:	call   0x14000d388
   140028de2:	int3   
   140028de3:	call   0x14000d388
   140028de8:	int3   
   140028de9:	int3   
   140028dea:	int3   
   140028deb:	int3   
   140028dec:	int3   
   140028ded:	int3   
   140028dee:	int3   
   140028def:	int3   
   140028df0:	mov    QWORD PTR [rsp+0x20],rbx
   140028df5:	mov    QWORD PTR [rsp+0x18],r8
   140028dfa:	push   rbp
   140028dfb:	push   rsi
   140028dfc:	push   rdi
   140028dfd:	push   r14
   140028dff:	push   r15
   140028e01:	sub    rsp,0x30
   140028e05:	mov    rax,QWORD PTR [rip+0x22214]        # 0x14004b020
   140028e0c:	xor    rax,rsp
   140028e0f:	mov    QWORD PTR [rsp+0x20],rax
   140028e14:	mov    rbp,QWORD PTR [rcx+0x8]
   140028e18:	lea    rbx,[r8+0x20]
   140028e1c:	xor    r15d,r15d
   140028e1f:	mov    r14,rdx
   140028e22:	mov    rsi,rcx
   140028e25:	cmp    rbx,rbp
   140028e28:	je     0x140028ea0
   140028e2a:	lea    rdi,[r8+0x18]
   140028e2e:	mov    rax,QWORD PTR [rbx+0x10]
   140028e32:	lea    rcx,[rdi-0x18]
   140028e36:	cmp    QWORD PTR [rdi],rax
   140028e39:	jbe    0x140028e4c
   140028e3b:	or     r9,0xffffffffffffffff
   140028e3f:	xor    r8d,r8d
   140028e42:	mov    rdx,rbx
   140028e45:	call   0x14000d7a0
   140028e4a:	jmp    0x140028e8e
   140028e4c:	cmp    rcx,rbx
   140028e4f:	je     0x140028e77
   140028e51:	mov    rdx,rbx
   140028e54:	call   0x14000db60
   140028e59:	mov    rax,QWORD PTR [rbx+0x10]
   140028e5d:	mov    rcx,QWORD PTR [rdi-0x8]
   140028e61:	mov    QWORD PTR [rdi-0x8],rax
   140028e65:	mov    QWORD PTR [rbx+0x10],rcx
   140028e69:	mov    rax,QWORD PTR [rbx+0x18]
   140028e6d:	mov    rcx,QWORD PTR [rdi]
   140028e70:	mov    QWORD PTR [rdi],rax
   140028e73:	mov    QWORD PTR [rbx+0x18],rcx
   140028e77:	cmp    QWORD PTR [rbx+0x18],0x8
   140028e7c:	mov    QWORD PTR [rbx+0x10],r15
   140028e80:	jb     0x140028e87
   140028e82:	mov    rax,QWORD PTR [rbx]
   140028e85:	jmp    0x140028e8a
   140028e87:	mov    rax,rbx
   140028e8a:	mov    WORD PTR [rax],r15w
   140028e8e:	add    rdi,0x20
   140028e92:	add    rbx,0x20
   140028e96:	cmp    rbx,rbp
   140028e99:	jne    0x140028e2e
   140028e9b:	mov    r8,QWORD PTR [rsp+0x70]
   140028ea0:	mov    rdi,QWORD PTR [rsi+0x8]
   140028ea4:	lea    rbx,[rdi-0x20]
   140028ea8:	cmp    rbx,rdi
   140028eab:	je     0x140028edb
   140028ead:	cmp    QWORD PTR [rbx+0x18],0x8
   140028eb2:	jb     0x140028ebd
   140028eb4:	mov    rcx,QWORD PTR [rbx]
   140028eb7:	call   QWORD PTR [rip+0x970b]        # 0x1400325c8
   140028ebd:	mov    QWORD PTR [rbx+0x18],0x7
   140028ec5:	mov    QWORD PTR [rbx+0x10],r15
   140028ec9:	mov    WORD PTR [rbx],r15w
   140028ecd:	add    rbx,0x20
   140028ed1:	cmp    rbx,rdi
   140028ed4:	jne    0x140028ead
   140028ed6:	mov    r8,QWORD PTR [rsp+0x70]
   140028edb:	add    QWORD PTR [rsi+0x8],0xffffffffffffffe0
   140028ee0:	mov    rax,r14
   140028ee3:	mov    QWORD PTR [r14],r8
   140028ee6:	mov    rcx,QWORD PTR [rsp+0x20]
   140028eeb:	xor    rcx,rsp
   140028eee:	call   0x14002dd00
   140028ef3:	mov    rbx,QWORD PTR [rsp+0x78]
   140028ef8:	add    rsp,0x30
   140028efc:	pop    r15
   140028efe:	pop    r14
   140028f00:	pop    rdi
   140028f01:	pop    rsi
   140028f02:	pop    rbp
   140028f03:	ret    
   140028f04:	int3   
   140028f05:	int3   
   140028f06:	int3   
   140028f07:	int3   
   140028f08:	int3   
   140028f09:	int3   
   140028f0a:	int3   
   140028f0b:	int3   
   140028f0c:	cmp    rdx,r8
   140028f0f:	je     0x140028f5f
   140028f11:	mov    QWORD PTR [rsp+0x8],rbx
   140028f16:	mov    QWORD PTR [rsp+0x10],rsi
   140028f1b:	push   rdi
   140028f1c:	sub    rsp,0x20
   140028f20:	mov    rdi,r8
   140028f23:	mov    rbx,rdx
   140028f26:	xor    esi,esi
   140028f28:	cmp    QWORD PTR [rbx+0x18],0x8
   140028f2d:	jb     0x140028f38
   140028f2f:	mov    rcx,QWORD PTR [rbx]
   140028f32:	call   QWORD PTR [rip+0x9690]        # 0x1400325c8
   140028f38:	mov    QWORD PTR [rbx+0x18],0x7
   140028f40:	mov    QWORD PTR [rbx+0x10],rsi
   140028f44:	mov    WORD PTR [rbx],si
   140028f47:	add    rbx,0x20
   140028f4b:	cmp    rbx,rdi
   140028f4e:	jne    0x140028f28
   140028f50:	mov    rbx,QWORD PTR [rsp+0x30]
   140028f55:	mov    rsi,QWORD PTR [rsp+0x38]
   140028f5a:	add    rsp,0x20
   140028f5e:	pop    rdi
   140028f5f:	ret    
   140028f60:	int3   
   140028f61:	int3   
   140028f62:	int3   
   140028f63:	int3   
   140028f64:	int3   
   140028f65:	int3   
   140028f66:	int3   
   140028f67:	int3   
   140028f68:	mov    rax,rsp
   140028f6b:	push   r14
   140028f6d:	sub    rsp,0x30
   140028f71:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140028f79:	mov    QWORD PTR [rax+0x8],rbx
   140028f7d:	mov    QWORD PTR [rax+0x18],rsi
   140028f81:	mov    QWORD PTR [rax+0x20],rdi
   140028f85:	mov    rsi,rdx
   140028f88:	mov    rdi,rcx
   140028f8b:	xor    ebx,ebx
   140028f8d:	mov    QWORD PTR [rsp+0x48],rbx
   140028f92:	test   rdx,rdx
   140028f95:	je     0x140028fc2
   140028f97:	movabs rax,0x1fffffffffffffff
   140028fa1:	cmp    rdx,rax
   140028fa4:	ja     0x140028fbc
   140028fa6:	mov    rcx,rdx
   140028fa9:	shl    rcx,0x3
   140028fad:	call   0x140023f10
   140028fb2:	mov    rbx,rax
   140028fb5:	mov    QWORD PTR [rsp+0x48],rax
   140028fba:	jmp    0x140028fc2
   140028fbc:	call   0x14000203c
   140028fc1:	nop
   140028fc2:	mov    r8,QWORD PTR [rdi+0x8]
   140028fc6:	sub    r8,QWORD PTR [rdi]
   140028fc9:	and    r8,0xfffffffffffffff8
   140028fcd:	mov    rdx,QWORD PTR [rdi]
   140028fd0:	mov    rcx,rbx
   140028fd3:	call   QWORD PTR [rip+0x94c7]        # 0x1400324a0
   140028fd9:	nop
   140028fda:	mov    rcx,QWORD PTR [rdi]
   140028fdd:	mov    r14,QWORD PTR [rdi+0x8]
   140028fe1:	sub    r14,rcx
   140028fe4:	sar    r14,0x3
   140028fe8:	test   rcx,rcx
   140028feb:	je     0x140028ff3
   140028fed:	call   QWORD PTR [rip+0x95d5]        # 0x1400325c8
   140028ff3:	lea    rax,[rbx+rsi*8]
   140028ff7:	mov    QWORD PTR [rdi+0x10],rax
   140028ffb:	lea    rax,[rbx+r14*8]
   140028fff:	mov    QWORD PTR [rdi+0x8],rax
   140029003:	mov    QWORD PTR [rdi],rbx
   140029006:	mov    rbx,QWORD PTR [rsp+0x40]
   14002900b:	mov    rsi,QWORD PTR [rsp+0x50]
   140029010:	mov    rdi,QWORD PTR [rsp+0x58]
   140029015:	add    rsp,0x30
   140029019:	pop    r14
   14002901b:	ret    
   14002901c:	int3   
   14002901d:	int3   
   14002901e:	int3   
   14002901f:	int3   
   140029020:	int3   
   140029021:	int3   
   140029022:	int3   
   140029023:	int3   
   140029024:	mov    rax,rsp
   140029027:	push   rdi
   140029028:	push   r12
   14002902a:	push   r13
   14002902c:	push   r14
   14002902e:	push   r15
   140029030:	sub    rsp,0x40
   140029034:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14002903c:	mov    QWORD PTR [rax+0x8],rbx
   140029040:	mov    QWORD PTR [rax+0x18],rsi
   140029044:	mov    rdi,rdx
   140029047:	mov    r14,rcx
   14002904a:	xor    r13d,r13d
   14002904d:	mov    esi,r13d
   140029050:	mov    QWORD PTR [rsp+0x78],r13
   140029055:	test   rdx,rdx
   140029058:	je     0x140029085
   14002905a:	movabs rax,0x7ffffffffffffff
   140029064:	cmp    rdx,rax
   140029067:	ja     0x14002907f
   140029069:	mov    rcx,rdx
   14002906c:	shl    rcx,0x5
   140029070:	call   0x140023f10
   140029075:	mov    rsi,rax
   140029078:	mov    QWORD PTR [rsp+0x78],rax
   14002907d:	jmp    0x140029085
   14002907f:	call   0x14000203c
   140029084:	nop
   140029085:	mov    r8,rsi
   140029088:	mov    rdx,QWORD PTR [r14+0x8]
   14002908c:	mov    rcx,QWORD PTR [r14]
   14002908f:	call   0x140029198
   140029094:	nop
   140029095:	mov    r12,QWORD PTR [r14+0x8]
   140029099:	mov    rbx,QWORD PTR [r14]
   14002909c:	mov    r15,r12
   14002909f:	sub    r15,rbx
   1400290a2:	test   rbx,rbx
   1400290a5:	je     0x1400290db
   1400290a7:	jmp    0x1400290cd
   1400290a9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400290ae:	jb     0x1400290b9
   1400290b0:	mov    rcx,QWORD PTR [rbx]
   1400290b3:	call   QWORD PTR [rip+0x950f]        # 0x1400325c8
   1400290b9:	mov    QWORD PTR [rbx+0x18],0x7
   1400290c1:	mov    QWORD PTR [rbx+0x10],r13
   1400290c5:	mov    WORD PTR [rbx],r13w
   1400290c9:	add    rbx,0x20
   1400290cd:	cmp    rbx,r12
   1400290d0:	jne    0x1400290a9
   1400290d2:	mov    rcx,QWORD PTR [r14]
   1400290d5:	call   QWORD PTR [rip+0x94ed]        # 0x1400325c8
   1400290db:	shl    rdi,0x5
   1400290df:	add    rdi,rsi
   1400290e2:	mov    QWORD PTR [r14+0x10],rdi
   1400290e6:	and    r15,0xffffffffffffffe0
   1400290ea:	add    r15,rsi
   1400290ed:	mov    QWORD PTR [r14+0x8],r15
   1400290f1:	mov    QWORD PTR [r14],rsi
   1400290f4:	lea    r11,[rsp+0x40]
   1400290f9:	mov    rbx,QWORD PTR [r11+0x30]
   1400290fd:	mov    rsi,QWORD PTR [r11+0x40]
   140029101:	mov    rsp,r11
   140029104:	pop    r15
   140029106:	pop    r14
   140029108:	pop    r13
   14002910a:	pop    r12
   14002910c:	pop    rdi
   14002910d:	ret    
   14002910e:	int3   
   14002910f:	int3   
   140029110:	int3   
   140029111:	int3   
   140029112:	int3   
   140029113:	int3   
   140029114:	test   rdx,rdx
   140029117:	je     0x14002918f
   140029119:	mov    QWORD PTR [rsp+0x8],rbx
   14002911e:	mov    QWORD PTR [rsp+0x20],rsi
   140029123:	push   rdi
   140029124:	sub    rsp,0x20
   140029128:	xor    esi,esi
   14002912a:	mov    QWORD PTR [rdx+0x18],0x7
   140029132:	mov    rbx,r8
   140029135:	mov    QWORD PTR [rdx+0x10],rsi
   140029139:	mov    WORD PTR [rdx],si
   14002913c:	mov    rdi,rdx
   14002913f:	cmp    rdx,rbx
   140029142:	je     0x14002916f
   140029144:	mov    rdx,rbx
   140029147:	mov    rcx,rdi
   14002914a:	call   0x14000db60
   14002914f:	mov    rax,QWORD PTR [rbx+0x10]
   140029153:	mov    rcx,QWORD PTR [rdi+0x10]
   140029157:	mov    QWORD PTR [rdi+0x10],rax
   14002915b:	mov    QWORD PTR [rbx+0x10],rcx
   14002915f:	mov    rax,QWORD PTR [rbx+0x18]
   140029163:	mov    rcx,QWORD PTR [rdi+0x18]
   140029167:	mov    QWORD PTR [rdi+0x18],rax
   14002916b:	mov    QWORD PTR [rbx+0x18],rcx
   14002916f:	cmp    QWORD PTR [rbx+0x18],0x8
   140029174:	mov    QWORD PTR [rbx+0x10],rsi
   140029178:	jb     0x14002917d
   14002917a:	mov    rbx,QWORD PTR [rbx]
   14002917d:	mov    WORD PTR [rbx],si
   140029180:	mov    rbx,QWORD PTR [rsp+0x30]
   140029185:	mov    rsi,QWORD PTR [rsp+0x48]
   14002918a:	add    rsp,0x20
   14002918e:	pop    rdi
   14002918f:	ret    
   140029190:	int3   
   140029191:	int3   
   140029192:	int3   
   140029193:	int3   
   140029194:	int3   
   140029195:	int3   
   140029196:	int3   
   140029197:	int3   
   140029198:	mov    rax,rsp
   14002919b:	mov    QWORD PTR [rax+0x20],r9
   14002919f:	mov    QWORD PTR [rax+0x18],r8
   1400291a3:	push   rdi
   1400291a4:	sub    rsp,0x30
   1400291a8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400291b0:	mov    QWORD PTR [rax+0x8],rbx
   1400291b4:	mov    QWORD PTR [rax+0x10],rsi
   1400291b8:	mov    rbx,r8
   1400291bb:	mov    rsi,rdx
   1400291be:	mov    rdi,rcx
   1400291c1:	mov    QWORD PTR [rsp+0x58],rbx
   1400291c6:	cmp    rcx,rdx
   1400291c9:	je     0x1400291e8
   1400291cb:	mov    r8,rdi
   1400291ce:	mov    rdx,rbx
   1400291d1:	call   0x140029114
   1400291d6:	add    rbx,0x20
   1400291da:	mov    QWORD PTR [rsp+0x50],rbx
   1400291df:	add    rdi,0x20
   1400291e3:	cmp    rdi,rsi
   1400291e6:	jne    0x1400291cb
   1400291e8:	mov    rax,rbx
   1400291eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400291f0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400291f5:	add    rsp,0x30
   1400291f9:	pop    rdi
   1400291fa:	ret    
   1400291fb:	int3   
   1400291fc:	int3   
   1400291fd:	int3   
   1400291fe:	int3   
   1400291ff:	int3   
   140029200:	int3   
   140029201:	int3   
   140029202:	int3   
   140029203:	int3   
   140029204:	int3   
   140029205:	int3   
   140029206:	int3   
   140029207:	int3   
   140029208:	int3   
   140029209:	int3   
   14002920a:	int3   
   14002920b:	int3   
   14002920c:	int3   
   14002920d:	int3   
   14002920e:	int3   
   14002920f:	int3   
   140029210:	mov    QWORD PTR [rsp+0x8],rbx
   140029215:	push   rdi
   140029216:	sub    rsp,0x20
   14002921a:	mov    ebx,edx
   14002921c:	mov    rdi,rcx
   14002921f:	call   0x140029248
   140029224:	test   bl,0x1
   140029227:	je     0x140029232
   140029229:	mov    rcx,rdi
   14002922c:	call   QWORD PTR [rip+0x9396]        # 0x1400325c8
   140029232:	mov    rax,rdi
   140029235:	mov    rbx,QWORD PTR [rsp+0x30]
   14002923a:	add    rsp,0x20
   14002923e:	pop    rdi
   14002923f:	ret    
   140029240:	int3   
   140029241:	int3   
   140029242:	int3   
   140029243:	int3   
   140029244:	int3   
   140029245:	int3   
   140029246:	int3   
   140029247:	int3   
   140029248:	rex push rbx
   14002924a:	sub    rsp,0x20
   14002924e:	lea    rax,[rip+0xba9b]        # 0x140034cf0
   140029255:	mov    rbx,rcx
   140029258:	mov    QWORD PTR [rcx],rax
   14002925b:	call   0x140029278
   140029260:	lea    rax,[rip+0xb641]        # 0x1400348a8
   140029267:	mov    QWORD PTR [rbx],rax
   14002926a:	add    rsp,0x20
   14002926e:	pop    rbx
   14002926f:	ret    
   140029270:	int3   
   140029271:	int3   
   140029272:	int3   
   140029273:	int3   
   140029274:	int3   
   140029275:	int3   
   140029276:	int3   
   140029277:	int3   
   140029278:	rex push rbx
   14002927a:	sub    rsp,0x20
   14002927e:	mov    rbx,rcx
   140029281:	mov    rcx,QWORD PTR [rcx+0x18]
   140029285:	test   rcx,rcx
   140029288:	je     0x140029295
   14002928a:	call   QWORD PTR [rip+0x91b8]        # 0x140032448
   140029290:	and    QWORD PTR [rbx+0x18],0x0
   140029295:	and    QWORD PTR [rbx+0x30],0x0
   14002929a:	and    QWORD PTR [rbx+0x28],0x0
   14002929f:	and    QWORD PTR [rbx+0x40],0x0
   1400292a4:	and    QWORD PTR [rbx+0x38],0x0
   1400292a9:	mov    BYTE PTR [rbx+0x48],0x0
   1400292ad:	add    rsp,0x20
   1400292b1:	pop    rbx
   1400292b2:	ret    
   1400292b3:	int3   
   1400292b4:	int3   
   1400292b5:	int3   
   1400292b6:	int3   
   1400292b7:	int3   
   1400292b8:	int3   
   1400292b9:	int3   
   1400292ba:	int3   
   1400292bb:	int3   
   1400292bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400292c1:	mov    QWORD PTR [rsp+0x18],rbp
   1400292c6:	mov    QWORD PTR [rsp+0x20],rsi
   1400292cb:	push   rdi
   1400292cc:	push   r12
   1400292ce:	push   r13
   1400292d0:	push   r14
   1400292d2:	push   r15
   1400292d4:	sub    rsp,0x20
   1400292d8:	mov    rsi,QWORD PTR [rcx+0x28]
   1400292dc:	lea    rbp,[r8+0xf]
   1400292e0:	mov    rax,QWORD PTR [rcx+0x30]
   1400292e4:	and    rbp,0xfffffffffffffff8
   1400292e8:	add    rbp,rsi
   1400292eb:	mov    r13,r9
   1400292ee:	mov    r14,r8
   1400292f1:	mov    r12d,edx
   1400292f4:	mov    rdi,rcx
   1400292f7:	cmp    rax,rbp
   1400292fa:	jbe    0x140029351
   1400292fc:	mov    QWORD PTR [rcx+0x28],rbp
   140029300:	mov    rbx,QWORD PTR [rdi+0x18]
   140029304:	mov    DWORD PTR [rbx+rsi*1+0xc],r14d
   140029309:	mov    DWORD PTR [rbx+rsi*1+0x8],r12d
   14002930e:	test   r14d,r14d
   140029311:	je     0x140029325
   140029313:	lea    rcx,[rsi+0x10]
   140029317:	mov    r8d,r14d
   14002931a:	add    rcx,rbx
   14002931d:	mov    rdx,r13
   140029320:	call   0x14002e2f2
   140029325:	mov    rcx,QWORD PTR [rsp+0x70]
   14002932a:	test   rcx,rcx
   14002932d:	je     0x1400293e8
   140029333:	mov    BYTE PTR [rdi+0x4a],0x1
   140029337:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14002933c:	je     0x1400293e4
   140029342:	lea    rax,[rsi+0x10]
   140029346:	add    rax,rbx
   140029349:	mov    QWORD PTR [rcx],rax
   14002934c:	jmp    0x1400293e8
   140029351:	shr    rax,1
   140029354:	mov    ecx,0x40
   140029359:	lea    r15,[rax+rax*2]
   14002935d:	lea    rax,[r15-0x1]
   140029361:	cmp    rax,0x3e
   140029365:	cmovbe r15,rcx
   140029369:	lea    rcx,[rsp+0x50]
   14002936e:	cmp    r15,rbp
   140029371:	cmovb  r15,rbp
   140029375:	and    QWORD PTR [rsp+0x50],0x0
   14002937b:	lea    rdx,[r15+0x8]
   14002937f:	call   0x140029984
   140029384:	mov    ebx,eax
   140029386:	test   eax,eax
   140029388:	jns    0x14002939c
   14002938a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002938f:	test   rcx,rcx
   140029392:	je     0x1400293d8
   140029394:	call   QWORD PTR [rip+0x90ae]        # 0x140032448
   14002939a:	jmp    0x1400293d8
   14002939c:	mov    rdx,QWORD PTR [rdi+0x18]
   1400293a0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400293a5:	test   rdx,rdx
   1400293a8:	je     0x1400293bb
   1400293aa:	mov    r8,QWORD PTR [rdi+0x28]
   1400293ae:	mov    rcx,rbx
   1400293b1:	add    r8,0x8
   1400293b5:	call   QWORD PTR [rip+0x90e5]        # 0x1400324a0
   1400293bb:	mov    QWORD PTR [rdi+0x30],r15
   1400293bf:	mov    QWORD PTR [rdi+0x28],rbp
   1400293c3:	mov    rcx,QWORD PTR [rdi+0x18]
   1400293c7:	mov    QWORD PTR [rdi+0x18],rbx
   1400293cb:	test   rcx,rcx
   1400293ce:	je     0x1400293d6
   1400293d0:	call   QWORD PTR [rip+0x9072]        # 0x140032448
   1400293d6:	xor    ebx,ebx
   1400293d8:	test   ebx,ebx
   1400293da:	jns    0x140029300
   1400293e0:	mov    eax,ebx
   1400293e2:	jmp    0x1400293ee
   1400293e4:	and    QWORD PTR [rcx],0x0
   1400293e8:	inc    QWORD PTR [rdi+0x40]
   1400293ec:	xor    eax,eax
   1400293ee:	mov    rbx,QWORD PTR [rsp+0x58]
   1400293f3:	mov    rbp,QWORD PTR [rsp+0x60]
   1400293f8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400293fd:	add    rsp,0x20
   140029401:	pop    r15
   140029403:	pop    r14
   140029405:	pop    r13
   140029407:	pop    r12
   140029409:	pop    rdi
   14002940a:	ret    
   14002940b:	int3   
   14002940c:	int3   
   14002940d:	int3   
   14002940e:	int3   
   14002940f:	int3   
   140029410:	int3   
   140029411:	int3   
   140029412:	int3   
   140029413:	int3   
   140029414:	mov    QWORD PTR [rsp+0x8],rbx
   140029419:	mov    QWORD PTR [rsp+0x18],rsi
   14002941e:	push   rdi
   14002941f:	sub    rsp,0x20
   140029423:	mov    rdi,r8
   140029426:	mov    rsi,rcx
   140029429:	cmp    rdx,0x8
   14002942d:	jae    0x140029439
   14002942f:	mov    eax,0x80070057
   140029434:	jmp    0x1400294be
   140029439:	mov    ecx,DWORD PTR [r8+0x4]
   14002943d:	lea    rax,[rcx+0xf]
   140029441:	and    rax,0xfffffffffffffff8
   140029445:	cmp    rdx,rax
   140029448:	jne    0x14002942f
   14002944a:	and    QWORD PTR [rsp+0x38],0x0
   140029450:	lea    rdx,[rcx+0x8]
   140029454:	lea    rcx,[rsp+0x38]
   140029459:	call   0x140029984
   14002945e:	mov    ebx,eax
   140029460:	test   eax,eax
   140029462:	jns    0x14002946b
   140029464:	mov    rdi,QWORD PTR [rsp+0x38]
   140029469:	jmp    0x1400294ae
   14002946b:	mov    r8d,DWORD PTR [rdi+0x4]
   14002946f:	mov    rdx,rdi
   140029472:	mov    rbx,QWORD PTR [rsp+0x38]
   140029477:	add    r8,0x8
   14002947b:	mov    rcx,rbx
   14002947e:	call   QWORD PTR [rip+0x901c]        # 0x1400324a0
   140029484:	mov    eax,DWORD PTR [rdi]
   140029486:	xor    edx,edx
   140029488:	mov    DWORD PTR [rsi+0x10],eax
   14002948b:	mov    rcx,rsi
   14002948e:	mov    eax,DWORD PTR [rdi+0x4]
   140029491:	mov    QWORD PTR [rsi+0x28],rax
   140029495:	mov    QWORD PTR [rsi+0x30],rax
   140029499:	mov    rdi,QWORD PTR [rsi+0x18]
   14002949d:	mov    QWORD PTR [rsi+0x18],rbx
   1400294a1:	call   0x14002965c
   1400294a6:	mov    ebx,eax
   1400294a8:	test   eax,eax
   1400294aa:	js     0x1400294ae
   1400294ac:	xor    ebx,ebx
   1400294ae:	test   rdi,rdi
   1400294b1:	je     0x1400294bc
   1400294b3:	mov    rcx,rdi
   1400294b6:	call   QWORD PTR [rip+0x8f8c]        # 0x140032448
   1400294bc:	mov    eax,ebx
   1400294be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400294c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400294c8:	add    rsp,0x20
   1400294cc:	pop    rdi
   1400294cd:	ret    
   1400294ce:	int3   
   1400294cf:	int3   
   1400294d0:	int3   
   1400294d1:	int3   
   1400294d2:	int3   
   1400294d3:	int3   
   1400294d4:	rex push rbx
   1400294d6:	sub    rsp,0x20
   1400294da:	xor    eax,eax
   1400294dc:	lea    r9,[rsp+0x38]
   1400294e1:	cmp    BYTE PTR [rdx],al
   1400294e3:	mov    rbx,rdx
   1400294e6:	mov    edx,0x5
   1400294eb:	setne  al
   1400294ee:	mov    DWORD PTR [rsp+0x38],eax
   1400294f2:	lea    r8d,[rdx-0x1]
   1400294f6:	call   0x140029600
   1400294fb:	test   eax,eax
   1400294fd:	js     0x14002950b
   1400294ff:	cmp    DWORD PTR [rsp+0x38],0x0
   140029504:	setne  al
   140029507:	mov    BYTE PTR [rbx],al
   140029509:	xor    eax,eax
   14002950b:	add    rsp,0x20
   14002950f:	pop    rbx
   140029510:	ret    
   140029511:	int3   
   140029512:	int3   
   140029513:	int3   
   140029514:	int3   
   140029515:	int3   
   140029516:	int3   
   140029517:	int3   
   140029518:	sub    rsp,0x38
   14002951c:	xor    r11d,r11d
   14002951f:	mov    r10,rdx
   140029522:	cmp    BYTE PTR [rcx+0x49],r11b
   140029526:	je     0x140029552
   140029528:	mov    r9,QWORD PTR [rdx]
   14002952b:	or     r8,0xffffffffffffffff
   14002952f:	inc    r8
   140029532:	cmp    WORD PTR [r9+r8*2],r11w
   140029537:	jne    0x14002952f
   140029539:	mov    QWORD PTR [rsp+0x20],rdx
   14002953e:	lea    r8,[r8*2+0x2]
   140029546:	mov    edx,0x1
   14002954b:	call   0x1400292bc
   140029550:	jmp    0x14002958c
   140029552:	call   0x1400296e8
   140029557:	mov    r9,rax
   14002955a:	test   rax,rax
   14002955d:	jne    0x140029566
   14002955f:	mov    eax,0x80070057
   140029564:	jmp    0x14002958c
   140029566:	cmp    DWORD PTR [rax],0x1
   140029569:	jne    0x14002955f
   14002956b:	mov    eax,DWORD PTR [rax+0x4]
   14002956e:	test   al,0x1
   140029570:	jne    0x14002955f
   140029572:	cmp    rax,0x2
   140029576:	jb     0x14002955f
   140029578:	add    r9,0x8
   14002957c:	shr    rax,1
   14002957f:	cmp    WORD PTR [r9+rax*2-0x2],r11w
   140029585:	jne    0x14002955f
   140029587:	mov    QWORD PTR [r10],r9
   14002958a:	xor    eax,eax
   14002958c:	add    rsp,0x38
   140029590:	ret    
   140029591:	int3   
   140029592:	int3   
   140029593:	int3   
   140029594:	int3   
   140029595:	int3   
   140029596:	int3   
   140029597:	int3   
   140029598:	sub    rsp,0x38
   14002959c:	cmp    BYTE PTR [rcx+0x49],0x0
   1400295a0:	mov    r10,r8
   1400295a3:	mov    r11,rdx
   1400295a6:	je     0x1400295bf
   1400295a8:	mov    r9,QWORD PTR [r8]
   1400295ab:	mov    QWORD PTR [rsp+0x20],r8
   1400295b0:	mov    r8,QWORD PTR [rdx]
   1400295b3:	mov    edx,0x3
   1400295b8:	call   0x1400292bc
   1400295bd:	jmp    0x1400295f4
   1400295bf:	call   0x1400296e8
   1400295c4:	mov    r9,rax
   1400295c7:	test   rax,rax
   1400295ca:	jne    0x1400295d3
   1400295cc:	mov    eax,0x80070057
   1400295d1:	jmp    0x1400295f4
   1400295d3:	cmp    DWORD PTR [rax],0x3
   1400295d6:	jne    0x1400295cc
   1400295d8:	cmp    DWORD PTR [rax+0x4],0x0
   1400295dc:	je     0x1400295e7
   1400295de:	add    rax,0x8
   1400295e2:	mov    QWORD PTR [r10],rax
   1400295e5:	jmp    0x1400295eb
   1400295e7:	and    QWORD PTR [r10],0x0
   1400295eb:	mov    eax,DWORD PTR [r9+0x4]
   1400295ef:	mov    QWORD PTR [r11],rax
   1400295f2:	xor    eax,eax
   1400295f4:	add    rsp,0x38
   1400295f8:	ret    
   1400295f9:	int3   
   1400295fa:	int3   
   1400295fb:	int3   
   1400295fc:	int3   
   1400295fd:	int3   
   1400295fe:	int3   
   1400295ff:	int3   
   140029600:	sub    rsp,0x38
   140029604:	cmp    BYTE PTR [rcx+0x49],0x0
   140029608:	mov    r10,r8
   14002960b:	mov    r11d,edx
   14002960e:	je     0x14002961d
   140029610:	and    QWORD PTR [rsp+0x20],0x0
   140029616:	call   0x1400292bc
   14002961b:	jmp    0x140029650
   14002961d:	call   0x1400296e8
   140029622:	mov    rdx,rax
   140029625:	test   rax,rax
   140029628:	jne    0x140029631
   14002962a:	mov    eax,0x80070057
   14002962f:	jmp    0x140029650
   140029631:	cmp    DWORD PTR [rax],r11d
   140029634:	jne    0x14002962a
   140029636:	mov    eax,DWORD PTR [rax+0x4]
   140029639:	cmp    rax,r10
   14002963c:	jne    0x14002962a
   14002963e:	add    rdx,0x8
   140029642:	mov    r8,r10
   140029645:	mov    rcx,r9
   140029648:	call   QWORD PTR [rip+0x8e52]        # 0x1400324a0
   14002964e:	xor    eax,eax
   140029650:	add    rsp,0x38
   140029654:	ret    
   140029655:	int3   
   140029656:	int3   
   140029657:	int3   
   140029658:	int3   
   140029659:	int3   
   14002965a:	int3   
   14002965b:	int3   
   14002965c:	mov    QWORD PTR [rsp+0x8],rbx
   140029661:	mov    QWORD PTR [rsp+0x10],rsi
   140029666:	push   rdi
   140029667:	sub    rsp,0x20
   14002966b:	mov    rax,QWORD PTR [rcx]
   14002966e:	xor    esi,esi
   140029670:	mov    rdi,rcx
   140029673:	mov    BYTE PTR [rcx+0x49],dl
   140029676:	mov    BYTE PTR [rcx+0x4a],sil
   14002967a:	mov    QWORD PTR [rcx+0x38],rsi
   14002967e:	mov    rbx,QWORD PTR [rax+0x8]
   140029682:	mov    rcx,rbx
   140029685:	call   QWORD PTR [rip+0x901d]        # 0x1400326a8
   14002968b:	mov    rcx,rdi
   14002968e:	call   rbx
   140029690:	mov    ebx,eax
   140029692:	test   eax,eax
   140029694:	jns    0x1400296a2
   140029696:	mov    rcx,rdi
   140029699:	call   0x140029278
   14002969e:	mov    eax,ebx
   1400296a0:	jmp    0x1400296cf
   1400296a2:	cmp    BYTE PTR [rdi+0x4a],sil
   1400296a6:	je     0x1400296c9
   1400296a8:	mov    rax,QWORD PTR [rdi]
   1400296ab:	mov    BYTE PTR [rdi+0x49],sil
   1400296af:	mov    rbx,QWORD PTR [rax+0x8]
   1400296b3:	mov    rcx,rbx
   1400296b6:	call   QWORD PTR [rip+0x8fec]        # 0x1400326a8
   1400296bc:	mov    rcx,rdi
   1400296bf:	call   rbx
   1400296c1:	mov    ebx,eax
   1400296c3:	test   eax,eax
   1400296c5:	js     0x140029696
   1400296c7:	mov    esi,eax
   1400296c9:	mov    BYTE PTR [rdi+0x48],0x1
   1400296cd:	mov    eax,esi
   1400296cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400296d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400296d9:	add    rsp,0x20
   1400296dd:	pop    rdi
   1400296de:	ret    
   1400296df:	int3   
   1400296e0:	int3   
   1400296e1:	int3   
   1400296e2:	int3   
   1400296e3:	int3   
   1400296e4:	int3   
   1400296e5:	int3   
   1400296e6:	int3   
   1400296e7:	int3   
   1400296e8:	mov    r8,QWORD PTR [rcx+0x38]
   1400296ec:	mov    rdx,rcx
   1400296ef:	cmp    r8,QWORD PTR [rcx+0x28]
   1400296f3:	jae    0x140029723
   1400296f5:	cmp    BYTE PTR [rcx+0x49],0x0
   1400296f9:	jne    0x140029723
   1400296fb:	lea    rax,[r8+0x8]
   1400296ff:	cmp    rax,QWORD PTR [rcx+0x28]
   140029703:	ja     0x140029723
   140029705:	mov    rax,QWORD PTR [rcx+0x18]
   140029709:	add    rax,0x8
   14002970d:	add    rax,r8
   140029710:	mov    ecx,DWORD PTR [rax+0x4]
   140029713:	add    rcx,0xf
   140029717:	and    rcx,0xfffffffffffffff8
   14002971b:	add    rcx,r8
   14002971e:	mov    QWORD PTR [rdx+0x38],rcx
   140029722:	ret    
   140029723:	xor    eax,eax
   140029725:	ret    
   140029726:	int3   
   140029727:	int3   
   140029728:	int3   
   140029729:	int3   
   14002972a:	int3   
   14002972b:	int3   
   14002972c:	mov    rax,rsp
   14002972f:	mov    QWORD PTR [rax+0x8],rbx
   140029733:	mov    QWORD PTR [rax+0x10],rbp
   140029737:	mov    QWORD PTR [rax+0x18],rsi
   14002973b:	mov    QWORD PTR [rax+0x20],rdi
   14002973f:	push   r14
   140029741:	sub    rsp,0x30
   140029745:	mov    rdi,r9
   140029748:	mov    rsi,r8
   14002974b:	mov    ebp,edx
   14002974d:	mov    r14,rcx
   140029750:	call   QWORD PTR [rip+0x8cfa]        # 0x140032450
   140029756:	mov    rbx,QWORD PTR [rax+0x18]
   14002975a:	mov    rcx,rbx
   14002975d:	call   QWORD PTR [rip+0x8f45]        # 0x1400326a8
   140029763:	mov    r9,rdi
   140029766:	mov    r8,rsi
   140029769:	mov    edx,ebp
   14002976b:	mov    rcx,r14
   14002976e:	mov    rax,rbx
   140029771:	mov    rbx,QWORD PTR [rsp+0x40]
   140029776:	mov    rbp,QWORD PTR [rsp+0x48]
   14002977b:	mov    rsi,QWORD PTR [rsp+0x50]
   140029780:	mov    rdi,QWORD PTR [rsp+0x58]
   140029785:	add    rsp,0x30
   140029789:	pop    r14
   14002978b:	rex.W jmp rax
   14002978e:	int3   
   14002978f:	int3   
   140029790:	int3   
   140029791:	int3   
   140029792:	int3   
   140029793:	int3   
   140029794:	rex push rbp
   140029796:	push   rbx
   140029797:	push   rsi
   140029798:	push   rdi
   140029799:	mov    rbp,rsp
   14002979c:	sub    rsp,0x78
   1400297a0:	mov    rax,QWORD PTR [rip+0x21879]        # 0x14004b020
   1400297a7:	xor    rax,rsp
   1400297aa:	mov    QWORD PTR [rbp-0x18],rax
   1400297ae:	mov    rdi,r9
   1400297b1:	mov    rsi,r8
   1400297b4:	test   r8,r8
   1400297b7:	je     0x140029870
   1400297bd:	test   r9,r9
   1400297c0:	je     0x140029870
   1400297c6:	and    DWORD PTR [rbp-0x38],0x0
   1400297ca:	lea    rax,[rbp-0x48]
   1400297ce:	mov    DWORD PTR [rbp-0x48],0x3b8e31d1
   1400297d5:	lea    r9,[rbp-0x38]
   1400297d9:	mov    DWORD PTR [rbp-0x44],0x4c6b2102
   1400297e0:	mov    r8,rdx
   1400297e3:	mov    DWORD PTR [rbp-0x40],0xea8deae
   1400297ea:	mov    edx,ecx
   1400297ec:	mov    DWORD PTR [rbp-0x3c],0xc8644041
   1400297f3:	lea    rcx,[rbp-0x28]
   1400297f7:	movaps xmm0,XMMWORD PTR [rbp-0x48]
   1400297fb:	and    QWORD PTR [rbp-0x48],0x0
   140029800:	movdqa XMMWORD PTR [rbp-0x28],xmm0
   140029805:	mov    QWORD PTR [rsp+0x20],rax
   14002980a:	call   0x14002972c
   14002980f:	mov    ebx,eax
   140029811:	test   eax,eax
   140029813:	jns    0x14002984c
   140029815:	mov    rcx,QWORD PTR [rip+0x2185c]        # 0x14004b078
   14002981c:	lea    rax,[rip+0x21855]        # 0x14004b078
   140029823:	cmp    rcx,rax
   140029826:	je     0x140029846
   140029828:	test   BYTE PTR [rcx+0x1c],0x1
   14002982c:	je     0x140029846
   14002982e:	mov    rcx,QWORD PTR [rcx+0x10]
   140029832:	lea    r8,[rip+0x13a5f]        # 0x14003d298
   140029839:	mov    edx,0x14
   14002983e:	mov    r9d,ebx
   140029841:	call   0x140001f70
   140029846:	mov    rcx,QWORD PTR [rbp-0x48]
   14002984a:	jmp    0x140029861
   14002984c:	mov    eax,DWORD PTR [rbp-0x38]
   14002984f:	xor    ecx,ecx
   140029851:	mov    QWORD PTR [rsi],rax
   140029854:	xor    ebx,ebx
   140029856:	mov    rax,QWORD PTR [rbp-0x48]
   14002985a:	mov    QWORD PTR [rdi],rax
   14002985d:	mov    QWORD PTR [rbp-0x48],rcx
   140029861:	test   rcx,rcx
   140029864:	je     0x14002986c
   140029866:	call   QWORD PTR [rip+0x8bdc]        # 0x140032448
   14002986c:	mov    eax,ebx
   14002986e:	jmp    0x140029875
   140029870:	mov    eax,0x80070057
   140029875:	mov    rcx,QWORD PTR [rbp-0x18]
   140029879:	xor    rcx,rsp
   14002987c:	call   0x14002dd00
   140029881:	add    rsp,0x78
   140029885:	pop    rdi
   140029886:	pop    rsi
   140029887:	pop    rbx
   140029888:	pop    rbp
   140029889:	ret    
   14002988a:	int3   
   14002988b:	int3   
   14002988c:	int3   
   14002988d:	int3   
   14002988e:	int3   
   14002988f:	int3   
   140029890:	mov    QWORD PTR [rsp+0x8],rbx
   140029895:	push   rbp
   140029896:	push   rsi
   140029897:	push   rdi
   140029898:	mov    rbp,rsp
   14002989b:	sub    rsp,0x40
   14002989f:	and    QWORD PTR [rdx],0x0
   1400298a3:	mov    rdi,rdx
   1400298a6:	and    DWORD PTR [rbp+0x28],0x0
   1400298aa:	mov    rsi,rcx
   1400298ad:	call   QWORD PTR [rip+0x8b9d]        # 0x140032450
   1400298b3:	mov    rbx,QWORD PTR [rax+0x98]
   1400298ba:	mov    rcx,rbx
   1400298bd:	call   QWORD PTR [rip+0x8de5]        # 0x1400326a8
   1400298c3:	lea    rcx,[rbp+0x28]
   1400298c7:	call   rbx
   1400298c9:	test   eax,eax
   1400298cb:	js     0x14002996f
   1400298d1:	cmp    DWORD PTR [rbp+0x28],0x0
   1400298d5:	je     0x14002996f
   1400298db:	and    QWORD PTR [rbp-0x8],0x0
   1400298e0:	lea    rdx,[rbp-0x8]
   1400298e4:	lea    rcx,[rip+0x139bd]        # 0x14003d2a8
   1400298eb:	call   QWORD PTR [rip+0x8b3f]        # 0x140032430
   1400298f1:	mov    ebx,eax
   1400298f3:	test   eax,eax
   1400298f5:	js     0x14002995c
   1400298f7:	and    QWORD PTR [rbp-0x10],0x0
   1400298fc:	and    DWORD PTR [rbp+0x30],0x0
   140029900:	mov    DWORD PTR [rbp+0x38],0x2
   140029907:	and    QWORD PTR [rsp+0x28],0x0
   14002990d:	lea    rax,[rbp-0x10]
   140029911:	mov    rcx,QWORD PTR [rbp-0x8]
   140029915:	lea    r9,[rbp+0x30]
   140029919:	lea    r8,[rbp+0x38]
   14002991d:	mov    QWORD PTR [rsp+0x20],rax
   140029922:	mov    rdx,rsi
   140029925:	call   QWORD PTR [rip+0x8af5]        # 0x140032420
   14002992b:	mov    ebx,eax
   14002992d:	cmp    eax,0x80070002
   140029932:	jne    0x140029938
   140029934:	xor    ebx,ebx
   140029936:	jmp    0x14002993c
   140029938:	test   eax,eax
   14002993a:	jns    0x140029942
   14002993c:	mov    rcx,QWORD PTR [rbp-0x10]
   140029940:	jmp    0x140029951
   140029942:	mov    rax,QWORD PTR [rbp-0x10]
   140029946:	xor    ecx,ecx
   140029948:	mov    QWORD PTR [rbp-0x10],rcx
   14002994c:	xor    ebx,ebx
   14002994e:	mov    QWORD PTR [rdi],rax
   140029951:	test   rcx,rcx
   140029954:	je     0x14002995c
   140029956:	call   QWORD PTR [rip+0x8aec]        # 0x140032448
   14002995c:	mov    rcx,QWORD PTR [rbp-0x8]
   140029960:	test   rcx,rcx
   140029963:	je     0x14002996b
   140029965:	call   QWORD PTR [rip+0x8a85]        # 0x1400323f0
   14002996b:	mov    eax,ebx
   14002996d:	jmp    0x140029971
   14002996f:	xor    eax,eax
   140029971:	mov    rbx,QWORD PTR [rsp+0x60]
   140029976:	add    rsp,0x40
   14002997a:	pop    rdi
   14002997b:	pop    rsi
   14002997c:	pop    rbp
   14002997d:	ret    
   14002997e:	int3   
   14002997f:	int3   
   140029980:	int3   
   140029981:	int3   
   140029982:	int3   
   140029983:	int3   
   140029984:	rex push rbx
   140029986:	sub    rsp,0x20
   14002998a:	mov    rbx,rcx
   14002998d:	mov    rcx,rdx
   140029990:	call   QWORD PTR [rip+0x8a7a]        # 0x140032410
   140029996:	test   rax,rax
   140029999:	jne    0x1400299a2
   14002999b:	mov    eax,0x8007000e
   1400299a0:	jmp    0x1400299a7
   1400299a2:	mov    QWORD PTR [rbx],rax
   1400299a5:	xor    eax,eax
   1400299a7:	add    rsp,0x20
   1400299ab:	pop    rbx
   1400299ac:	ret    
   1400299ad:	int3   
   1400299ae:	int3   
   1400299af:	int3   
   1400299b0:	int3   
   1400299b1:	int3   
   1400299b2:	int3   
   1400299b3:	int3   
   1400299b4:	rex push rbx
   1400299b6:	sub    rsp,0x20
   1400299ba:	mov    rbx,rcx
   1400299bd:	lea    rcx,[rdx+rdx*1]
   1400299c1:	mov    rax,rcx
   1400299c4:	shr    rax,1
   1400299c7:	cmp    rax,rdx
   1400299ca:	je     0x1400299d3
   1400299cc:	mov    eax,0x80070057
   1400299d1:	jmp    0x1400299e8
   1400299d3:	call   QWORD PTR [rip+0x8bf7]        # 0x1400325d0
   1400299d9:	mov    QWORD PTR [rbx],rax
   1400299dc:	neg    rax
   1400299df:	sbb    eax,eax
   1400299e1:	not    eax
   1400299e3:	and    eax,0x8007000e
   1400299e8:	add    rsp,0x20
   1400299ec:	pop    rbx
   1400299ed:	ret    
   1400299ee:	int3   
   1400299ef:	int3   
   1400299f0:	int3   
   1400299f1:	int3   
   1400299f2:	int3   
   1400299f3:	int3   
   1400299f4:	mov    edx,0x104
   1400299f9:	mov    r10,r8
   1400299fc:	mov    eax,edx
   1400299fe:	mov    r9,rcx
   140029a01:	xor    r11d,r11d
   140029a04:	cmp    WORD PTR [r9],r11w
   140029a08:	je     0x140029a14
   140029a0a:	add    r9,0x2
   140029a0e:	sub    rax,0x1
   140029a12:	jne    0x140029a04
   140029a14:	test   rax,rax
   140029a17:	je     0x140029a6d
   140029a19:	mov    r8,rdx
   140029a1c:	sub    r8,rax
   140029a1f:	lea    rax,[rcx+r8*2]
   140029a23:	mov    ecx,r11d
   140029a26:	sub    rdx,r8
   140029a29:	je     0x140029a5e
   140029a2b:	add    r8,0x7ffffefa
   140029a32:	add    r8,rdx
   140029a35:	sub    r10,rax
   140029a38:	test   r8,r8
   140029a3b:	je     0x140029a59
   140029a3d:	movzx  r9d,WORD PTR [r10+rax*1]
   140029a42:	test   r9w,r9w
   140029a46:	je     0x140029a59
   140029a48:	mov    WORD PTR [rax],r9w
   140029a4c:	dec    r8
   140029a4f:	add    rax,0x2
   140029a53:	sub    rdx,0x1
   140029a57:	jne    0x140029a38
   140029a59:	test   rdx,rdx
   140029a5c:	jne    0x140029a67
   140029a5e:	sub    rax,0x2
   140029a62:	mov    ecx,0x8007007a
   140029a67:	mov    WORD PTR [rax],r11w
   140029a6b:	jmp    0x140029a72
   140029a6d:	mov    ecx,0x80070057
   140029a72:	mov    eax,ecx
   140029a74:	ret    
   140029a75:	int3   
   140029a76:	int3   
   140029a77:	int3   
   140029a78:	int3   
   140029a79:	int3   
   140029a7a:	int3   
   140029a7b:	int3   
   140029a7c:	int3   
   140029a7d:	int3   
   140029a7e:	int3   
   140029a7f:	int3   
   140029a80:	rex push rbx
   140029a82:	sub    rsp,0x20
   140029a86:	lea    rax,[rip+0xb27b]        # 0x140034d08
   140029a8d:	mov    rbx,rcx
   140029a90:	mov    QWORD PTR [rcx],rax
   140029a93:	test   dl,0x1
   140029a96:	je     0x140029a9e
   140029a98:	call   QWORD PTR [rip+0x8b2a]        # 0x1400325c8
   140029a9e:	mov    rax,rbx
   140029aa1:	add    rsp,0x20
   140029aa5:	pop    rbx
   140029aa6:	ret    
   140029aa7:	int3   
   140029aa8:	int3   
   140029aa9:	int3   
   140029aaa:	int3   
   140029aab:	int3   
   140029aac:	int3   
   140029aad:	int3   
   140029aae:	int3   
   140029aaf:	int3   
   140029ab0:	mov    r8d,DWORD PTR [rcx+0x8]
   140029ab4:	test   r8d,r8d
   140029ab7:	js     0x140029adb
   140029ab9:	lea    edx,[r8+0x1]
   140029abd:	mov    eax,r8d
   140029ac0:	lock cmpxchg DWORD PTR [rcx+0x8],edx
   140029ac5:	cmp    r8d,eax
   140029ac8:	je     0x140029ad3
   140029aca:	mov    r8d,DWORD PTR [rcx+0x8]
   140029ace:	test   r8d,r8d
   140029ad1:	jns    0x140029ab9
   140029ad3:	test   r8d,r8d
   140029ad6:	js     0x140029adb
   140029ad8:	xor    eax,eax
   140029ada:	ret    
   140029adb:	mov    eax,0x80004004
   140029ae0:	ret    
   140029ae1:	int3   
   140029ae2:	int3   
   140029ae3:	int3   
   140029ae4:	int3   
   140029ae5:	int3   
   140029ae6:	int3   
   140029ae7:	int3   
   140029ae8:	sub    rsp,0x28
   140029aec:	or     eax,0xffffffff
   140029aef:	lock xadd DWORD PTR [rcx+0x8],eax
   140029af4:	dec    eax
   140029af6:	cmp    eax,0x80000000
   140029afb:	jne    0x140029b02
   140029afd:	call   0x140029c90
   140029b02:	add    rsp,0x28
   140029b06:	ret    
   140029b07:	int3   
   140029b08:	int3   
   140029b09:	int3   
   140029b0a:	int3   
   140029b0b:	int3   
   140029b0c:	int3   
   140029b0d:	int3   
   140029b0e:	int3   
   140029b0f:	int3   
   140029b10:	mov    QWORD PTR [rsp+0x8],rbx
   140029b15:	push   rdi
   140029b16:	sub    rsp,0x20
   140029b1a:	mov    ebx,edx
   140029b1c:	mov    rdi,rcx
   140029b1f:	call   0x140029b48
   140029b24:	test   bl,0x1
   140029b27:	je     0x140029b32
   140029b29:	mov    rcx,rdi
   140029b2c:	call   QWORD PTR [rip+0x8a96]        # 0x1400325c8
   140029b32:	mov    rax,rdi
   140029b35:	mov    rbx,QWORD PTR [rsp+0x30]
   140029b3a:	add    rsp,0x20
   140029b3e:	pop    rdi
   140029b3f:	ret    
   140029b40:	int3   
   140029b41:	int3   
   140029b42:	int3   
   140029b43:	int3   
   140029b44:	int3   
   140029b45:	int3   
   140029b46:	int3   
   140029b47:	int3   
   140029b48:	rex push rbx
   140029b4a:	sub    rsp,0x20
   140029b4e:	lea    rax,[rip+0xb1cb]        # 0x140034d20
   140029b55:	mov    rbx,rcx
   140029b58:	mov    QWORD PTR [rcx],rax
   140029b5b:	mov    rax,QWORD PTR [rcx+0x10]
   140029b5f:	test   rax,rax
   140029b62:	je     0x140029b6d
   140029b64:	mov    rcx,QWORD PTR [rcx+0x10]
   140029b68:	call   0x14002a08c
   140029b6d:	lea    rax,[rip+0xb194]        # 0x140034d08
   140029b74:	mov    QWORD PTR [rbx],rax
   140029b77:	add    rsp,0x20
   140029b7b:	pop    rbx
   140029b7c:	ret    
   140029b7d:	int3   
   140029b7e:	int3   
   140029b7f:	int3   
   140029b80:	int3   
   140029b81:	int3   
   140029b82:	int3   
   140029b83:	int3   
   140029b84:	mov    QWORD PTR [rsp+0x10],rbx
   140029b89:	push   rdi
   140029b8a:	sub    rsp,0x20
   140029b8e:	mov    rbx,rcx
   140029b91:	mov    ecx,DWORD PTR [rcx+0x8]
   140029b94:	jmp    0x140029baa
   140029b96:	lea    edx,[rcx-0x80000000]
   140029b9c:	mov    eax,ecx
   140029b9e:	lock cmpxchg DWORD PTR [rbx+0x8],edx
   140029ba3:	cmp    ecx,eax
   140029ba5:	je     0x140029bae
   140029ba7:	mov    ecx,DWORD PTR [rbx+0x8]
   140029baa:	test   ecx,ecx
   140029bac:	jns    0x140029b96
   140029bae:	test   ecx,ecx
   140029bb0:	jne    0x140029bba
   140029bb2:	mov    rcx,rbx
   140029bb5:	call   0x140029c90
   140029bba:	xor    edi,edi
   140029bbc:	mov    al,BYTE PTR [rbx+0x19]
   140029bbf:	test   al,al
   140029bc1:	jne    0x140029c76
   140029bc7:	call   QWORD PTR [rip+0x8653]        # 0x140032220
   140029bcd:	inc    rdi
   140029bd0:	cmp    rdi,0x3
   140029bd4:	jb     0x140029bbc
   140029bd6:	jmp    0x140029c5c
   140029bdb:	call   QWORD PTR [rip+0x863f]        # 0x140032220
   140029be1:	mov    rax,QWORD PTR [rbx+0x10]
   140029be5:	test   rax,rax
   140029be8:	je     0x140029c21
   140029bea:	mov    al,BYTE PTR [rbx+0x18]
   140029bed:	test   al,al
   140029bef:	jne    0x140029c5c
   140029bf1:	call   QWORD PTR [rip+0x8629]        # 0x140032220
   140029bf7:	mov    al,BYTE PTR [rbx+0x18]
   140029bfa:	test   al,al
   140029bfc:	jne    0x140029c5c
   140029bfe:	mov    rcx,QWORD PTR [rbx+0x10]
   140029c02:	mov    edx,0x7d0
   140029c07:	call   0x14002a178
   140029c0c:	mov    al,BYTE PTR [rbx+0x18]
   140029c0f:	test   al,al
   140029c11:	jne    0x140029c5c
   140029c13:	mov    rcx,QWORD PTR [rbx+0x10]
   140029c17:	or     edx,0xffffffff
   140029c1a:	call   0x14002a178
   140029c1f:	jmp    0x140029c5c
   140029c21:	xor    r9d,r9d
   140029c24:	xor    r8d,r8d
   140029c27:	xor    ecx,ecx
   140029c29:	lea    edx,[r9+0x1]
   140029c2d:	call   QWORD PTR [rip+0x8565]        # 0x140032198
   140029c33:	mov    rdi,rax
   140029c36:	test   rax,rax
   140029c39:	jne    0x140029c44
   140029c3b:	xor    ecx,ecx
   140029c3d:	call   0x14002a0dc
   140029c42:	jmp    0x140029c46
   140029c44:	xor    eax,eax
   140029c46:	test   eax,eax
   140029c48:	js     0x140029c5c
   140029c4a:	xor    eax,eax
   140029c4c:	lock cmpxchg QWORD PTR [rbx+0x10],rdi
   140029c52:	je     0x140029c5c
   140029c54:	mov    rcx,rdi
   140029c57:	call   0x14002a08c
   140029c5c:	mov    al,BYTE PTR [rbx+0x18]
   140029c5f:	test   al,al
   140029c61:	je     0x140029bdb
   140029c67:	jmp    0x140029c6f
   140029c69:	call   QWORD PTR [rip+0x85b1]        # 0x140032220
   140029c6f:	mov    al,BYTE PTR [rbx+0x19]
   140029c72:	test   al,al
   140029c74:	je     0x140029c69
   140029c76:	mov    rbx,QWORD PTR [rsp+0x38]
   140029c7b:	add    rsp,0x20
   140029c7f:	pop    rdi
   140029c80:	ret    
   140029c81:	int3   
   140029c82:	int3   
   140029c83:	int3   
   140029c84:	int3   
   140029c85:	int3   
   140029c86:	int3   
   140029c87:	int3   
   140029c88:	int3   
   140029c89:	int3   
   140029c8a:	int3   
   140029c8b:	int3   
   140029c8c:	int3   
   140029c8d:	int3   
   140029c8e:	int3   
   140029c8f:	int3   
   140029c90:	rex push rbx
   140029c92:	sub    rsp,0x20
   140029c96:	mov    BYTE PTR [rcx+0x18],0x1
   140029c9a:	mov    rbx,rcx
   140029c9d:	mov    rax,QWORD PTR [rcx+0x10]
   140029ca1:	test   rax,rax
   140029ca4:	je     0x140029caf
   140029ca6:	mov    rcx,QWORD PTR [rcx+0x10]
   140029caa:	call   0x14002a128
   140029caf:	mov    BYTE PTR [rbx+0x19],0x1
   140029cb3:	add    rsp,0x20
   140029cb7:	pop    rbx
   140029cb8:	ret    
   140029cb9:	int3   
   140029cba:	int3   
   140029cbb:	int3   
   140029cbc:	int3   
   140029cbd:	int3   
   140029cbe:	int3   
   140029cbf:	int3   
   140029cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140029cc5:	push   rdi
   140029cc6:	sub    rsp,0x20
   140029cca:	lea    rax,[rip+0xb087]        # 0x140034d58
   140029cd1:	mov    ebx,edx
   140029cd3:	mov    QWORD PTR [rcx],rax
   140029cd6:	mov    rdi,rcx
   140029cd9:	call   QWORD PTR [rip+0x87d9]        # 0x1400324b8
   140029cdf:	test   bl,0x1
   140029ce2:	je     0x140029ced
   140029ce4:	mov    rcx,rdi
   140029ce7:	call   QWORD PTR [rip+0x88db]        # 0x1400325c8
   140029ced:	mov    rax,rdi
   140029cf0:	mov    rbx,QWORD PTR [rsp+0x30]
   140029cf5:	add    rsp,0x20
   140029cf9:	pop    rdi
   140029cfa:	ret    
   140029cfb:	int3   
   140029cfc:	int3   
   140029cfd:	int3   
   140029cfe:	int3   
   140029cff:	int3   
   140029d00:	int3   
   140029d01:	int3   
   140029d02:	int3   
   140029d03:	int3   
   140029d04:	mov    QWORD PTR [rsp+0x8],rbx
   140029d09:	push   rdi
   140029d0a:	sub    rsp,0x20
   140029d0e:	mov    ebx,edx
   140029d10:	mov    rdi,rcx
   140029d13:	call   QWORD PTR [rip+0x88cf]        # 0x1400325e8
   140029d19:	lea    rax,[rip+0xb018]        # 0x140034d38
   140029d20:	mov    DWORD PTR [rdi+0x18],ebx
   140029d23:	mov    rbx,QWORD PTR [rsp+0x30]
   140029d28:	mov    QWORD PTR [rdi],rax
   140029d2b:	mov    rax,rdi
   140029d2e:	add    rsp,0x20
   140029d32:	pop    rdi
   140029d33:	ret    
   140029d34:	int3   
   140029d35:	int3   
   140029d36:	int3   
   140029d37:	int3   
   140029d38:	int3   
   140029d39:	int3   
   140029d3a:	int3   
   140029d3b:	int3   
   140029d3c:	int3   
   140029d3d:	int3   
   140029d3e:	int3   
   140029d3f:	int3   
   140029d40:	mov    eax,DWORD PTR [rcx+0x18]
   140029d43:	ret    
   140029d44:	int3   
   140029d45:	int3   
   140029d46:	int3   
   140029d47:	int3   
   140029d48:	int3   
   140029d49:	int3   
   140029d4a:	int3   
   140029d4b:	int3   
   140029d4c:	lea    rax,[rip+0xb005]        # 0x140034d58
   140029d53:	mov    QWORD PTR [rcx],rax
   140029d56:	rex.W jmp QWORD PTR [rip+0x875b]        # 0x1400324b8
   140029d5d:	int3   
   140029d5e:	int3   
   140029d5f:	int3   
   140029d60:	int3   
   140029d61:	int3   
   140029d62:	int3   
   140029d63:	int3   
   140029d64:	mov    QWORD PTR [rsp+0x8],rbx
   140029d69:	push   rdi
   140029d6a:	sub    rsp,0x40
   140029d6e:	lea    rdi,[rip+0x21303]        # 0x14004b078
   140029d75:	mov    ebx,ecx
   140029d77:	test   ecx,ecx
   140029d79:	js     0x140029db0
   140029d7b:	mov    rcx,QWORD PTR [rip+0x212f6]        # 0x14004b078
   140029d82:	cmp    rcx,rdi
   140029d85:	je     0x140029da9
   140029d87:	test   BYTE PTR [rcx+0x1c],0x1
   140029d8b:	je     0x140029da9
   140029d8d:	mov    rcx,QWORD PTR [rcx+0x10]
   140029d91:	lea    r8,[rip+0x13558]        # 0x14003d2f0
   140029d98:	mov    edx,0xa
   140029d9d:	call   0x140001f08
   140029da2:	mov    rcx,QWORD PTR [rip+0x212cf]        # 0x14004b078
   140029da9:	mov    ebx,0x8000ffff
   140029dae:	jmp    0x140029db7
   140029db0:	mov    rcx,QWORD PTR [rip+0x212c1]        # 0x14004b078
   140029db7:	cmp    rcx,rdi
   140029dba:	je     0x140029dda
   140029dbc:	test   BYTE PTR [rcx+0x1c],0x1
   140029dc0:	je     0x140029dda
   140029dc2:	mov    rcx,QWORD PTR [rcx+0x10]
   140029dc6:	lea    r8,[rip+0x13523]        # 0x14003d2f0
   140029dcd:	mov    edx,0xb
   140029dd2:	mov    r9d,ebx
   140029dd5:	call   0x140001f70
   140029dda:	mov    edx,ebx
   140029ddc:	lea    rcx,[rsp+0x20]
   140029de1:	call   0x140029d04
   140029de6:	lea    rdx,[rip+0x1f4f3]        # 0x1400492e0
   140029ded:	lea    rcx,[rsp+0x20]
   140029df2:	call   0x14002e2da
   140029df7:	int3   
   140029df8:	int3   
   140029df9:	int3   
   140029dfa:	int3   
   140029dfb:	int3   
   140029dfc:	int3   
   140029dfd:	int3   
   140029dfe:	int3   
   140029dff:	int3   
   140029e00:	mov    QWORD PTR [rsp+0x8],rbx
   140029e05:	push   rdi
   140029e06:	sub    rsp,0x20
   140029e0a:	mov    rbx,rdx
   140029e0d:	mov    rdi,rcx
   140029e10:	call   QWORD PTR [rip+0x86b2]        # 0x1400324c8
   140029e16:	lea    rax,[rip+0xaf1b]        # 0x140034d38
   140029e1d:	mov    QWORD PTR [rdi],rax
   140029e20:	mov    eax,DWORD PTR [rbx+0x18]
   140029e23:	mov    rbx,QWORD PTR [rsp+0x30]
   140029e28:	mov    DWORD PTR [rdi+0x18],eax
   140029e2b:	mov    rax,rdi
   140029e2e:	add    rsp,0x20
   140029e32:	pop    rdi
   140029e33:	ret    
   140029e34:	int3   
   140029e35:	int3   
   140029e36:	int3   
   140029e37:	int3   
   140029e38:	int3   
   140029e39:	int3   
   140029e3a:	int3   
   140029e3b:	int3   
   140029e3c:	rex push rbx
   140029e3e:	sub    rsp,0x20
   140029e42:	mov    rbx,rcx
   140029e45:	call   QWORD PTR [rip+0x867d]        # 0x1400324c8
   140029e4b:	lea    rax,[rip+0xaf06]        # 0x140034d58
   140029e52:	mov    QWORD PTR [rbx],rax
   140029e55:	mov    rax,rbx
   140029e58:	add    rsp,0x20
   140029e5c:	pop    rbx
   140029e5d:	ret    
   140029e5e:	int3   
   140029e5f:	int3   
   140029e60:	int3   
   140029e61:	int3   
   140029e62:	int3   
   140029e63:	int3   
   140029e64:	sub    rsp,0x28
   140029e68:	mov    eax,ecx
   140029e6a:	movzx  ecx,cx
   140029e6d:	or     ecx,0x80070000
   140029e73:	test   eax,eax
   140029e75:	cmovle ecx,eax
   140029e78:	call   0x140029d64
   140029e7d:	int3   
   140029e7e:	int3   
   140029e7f:	int3   
   140029e80:	int3   
   140029e81:	int3   
   140029e82:	int3   
   140029e83:	int3   
   140029e84:	mov    QWORD PTR [rsp+0x8],rbx
   140029e89:	push   rdi
   140029e8a:	sub    rsp,0x30
   140029e8e:	and    DWORD PTR [rsp+0x20],0x0
   140029e93:	lea    r9,[rip+0x256e6]        # 0x14004f580
   140029e9a:	lea    r8,[rip+0x249af]        # 0x14004e850
   140029ea1:	xor    edx,edx
   140029ea3:	mov    rbx,rcx
   140029ea6:	call   0x14002e862
   140029eab:	mov    rdi,rax
   140029eae:	test   rax,rax
   140029eb1:	je     0x140029ed4
   140029eb3:	mov    rcx,QWORD PTR [rax]
   140029eb6:	mov    rbx,QWORD PTR [rcx+0x10]
   140029eba:	mov    rcx,rbx
   140029ebd:	call   QWORD PTR [rip+0x87e5]        # 0x1400326a8
   140029ec3:	mov    rcx,rdi
   140029ec6:	call   rbx
   140029ec8:	test   eax,eax
   140029eca:	mov    ecx,0x8000ffff
   140029ecf:	cmovns eax,ecx
   140029ed2:	jmp    0x140029f52
   140029ed4:	and    DWORD PTR [rsp+0x20],0x0
   140029ed9:	lea    r9,[rip+0x24948]        # 0x14004e828
   140029ee0:	lea    r8,[rip+0x24969]        # 0x14004e850
   140029ee7:	xor    edx,edx
   140029ee9:	mov    rcx,rbx
   140029eec:	call   0x14002e862
   140029ef1:	test   rax,rax
   140029ef4:	je     0x140029efd
   140029ef6:	mov    eax,0x8007000e
   140029efb:	jmp    0x140029f52
   140029efd:	and    DWORD PTR [rsp+0x20],0x0
   140029f02:	lea    r9,[rip+0x2564f]        # 0x14004f558
   140029f09:	lea    r8,[rip+0x24940]        # 0x14004e850
   140029f10:	xor    edx,edx
   140029f12:	mov    rcx,rbx
   140029f15:	call   0x14002e862
   140029f1a:	test   rax,rax
   140029f1d:	je     0x140029f26
   140029f1f:	mov    eax,0x80070585
   140029f24:	jmp    0x140029f52
   140029f26:	and    DWORD PTR [rsp+0x20],0x0
   140029f2b:	lea    r9,[rip+0x255f6]        # 0x14004f528
   140029f32:	lea    r8,[rip+0x24917]        # 0x14004e850
   140029f39:	xor    edx,edx
   140029f3b:	mov    rcx,rbx
   140029f3e:	call   0x14002e862
   140029f43:	neg    rax
   140029f46:	sbb    eax,eax
   140029f48:	and    eax,0x6c052
   140029f4d:	add    eax,0x80004005
   140029f52:	mov    rbx,QWORD PTR [rsp+0x40]
   140029f57:	add    rsp,0x30
   140029f5b:	pop    rdi
   140029f5c:	ret    
   140029f5d:	int3   
   140029f5e:	int3   
   140029f5f:	int3   
   140029f60:	int3   
   140029f61:	int3   
   140029f62:	int3   
   140029f63:	int3   
   140029f64:	sub    rsp,0x68
   140029f68:	xor    r8d,r8d
   140029f6b:	test   r9,r9
   140029f6e:	je     0x140029f94
   140029f70:	cmp    WORD PTR [r9],r8w
   140029f74:	jne    0x140029f7c
   140029f76:	lea    eax,[r8+0xe]
   140029f7a:	jmp    0x140029f99
   140029f7c:	or     rax,0xffffffffffffffff
   140029f80:	inc    rax
   140029f83:	cmp    WORD PTR [r9+rax*2],r8w
   140029f88:	jne    0x140029f80
   140029f8a:	lea    rax,[rax*2+0x2]
   140029f92:	jmp    0x140029f99
   140029f94:	mov    eax,0xa
   140029f99:	test   r9,r9
   140029f9c:	je     0x140029faf
   140029f9e:	cmp    WORD PTR [r9],r8w
   140029fa2:	lea    rdx,[rip+0xaeaf]        # 0x140034e58
   140029fa9:	cmove  r9,rdx
   140029fad:	jmp    0x140029fb6
   140029faf:	lea    r9,[rip+0xb4ea]        # 0x1400354a0
   140029fb6:	mov    QWORD PTR [rsp+0x50],r8
   140029fbb:	lea    rdx,[rsp+0x98]
   140029fc3:	mov    r10d,0x39
   140029fc9:	lea    r8d,[r10-0x35]
   140029fcd:	mov    QWORD PTR [rsp+0x48],r8
   140029fd2:	mov    QWORD PTR [rsp+0x40],rdx
   140029fd7:	lea    rdx,[rip+0x13442]        # 0x14003d420
   140029fde:	mov    QWORD PTR [rsp+0x38],r8
   140029fe3:	lea    r8,[rip+0x133d6]        # 0x14003d3c0
   140029fea:	mov    QWORD PTR [rsp+0x30],rdx
   140029fef:	lea    edx,[r10-0xe]
   140029ff3:	mov    QWORD PTR [rsp+0x28],rax
   140029ff8:	mov    QWORD PTR [rsp+0x20],r9
   140029ffd:	movzx  r9d,r10w
   14002a001:	call   QWORD PTR [rip+0x8019]        # 0x140032020
   14002a007:	add    rsp,0x68
   14002a00b:	ret    
   14002a00c:	int3   
   14002a00d:	int3   
   14002a00e:	int3   
   14002a00f:	int3   
   14002a010:	int3   
   14002a011:	int3   
   14002a012:	int3   
   14002a013:	int3   
   14002a014:	sub    rsp,0x58
   14002a018:	test   r9,r9
   14002a01b:	je     0x14002a030
   14002a01d:	or     rdx,0xffffffffffffffff
   14002a021:	inc    rdx
   14002a024:	cmp    BYTE PTR [r9+rdx*1],0x0
   14002a029:	jne    0x14002a021
   14002a02b:	inc    rdx
   14002a02e:	jmp    0x14002a035
   14002a030:	mov    edx,0x5
   14002a035:	test   r9,r9
   14002a038:	lea    r8,[rsp+0x80]
   14002a040:	lea    rax,[rip+0xb44d]        # 0x140035494
   14002a047:	cmovne rax,r9
   14002a04b:	and    QWORD PTR [rsp+0x40],0x0
   14002a051:	mov    QWORD PTR [rsp+0x38],0x4
   14002a05a:	mov    r9d,0x1c
   14002a060:	mov    QWORD PTR [rsp+0x30],r8
   14002a065:	lea    r8,[rip+0x13354]        # 0x14003d3c0
   14002a06c:	mov    QWORD PTR [rsp+0x28],rdx
   14002a071:	mov    QWORD PTR [rsp+0x20],rax
   14002a076:	lea    edx,[r9+0xf]
   14002a07a:	call   QWORD PTR [rip+0x7fa0]        # 0x140032020
   14002a080:	add    rsp,0x58
   14002a084:	ret    
   14002a085:	int3   
   14002a086:	int3   
   14002a087:	int3   
   14002a088:	int3   
   14002a089:	int3   
   14002a08a:	int3   
   14002a08b:	int3   
   14002a08c:	sub    rsp,0x28
   14002a090:	call   QWORD PTR [rip+0x80c2]        # 0x140032158
   14002a096:	test   eax,eax
   14002a098:	jne    0x14002a0d0
   14002a09a:	call   0x14002b128
   14002a09f:	mov    rcx,QWORD PTR [rip+0x20fd2]        # 0x14004b078
   14002a0a6:	lea    rdx,[rip+0x20fcb]        # 0x14004b078
   14002a0ad:	cmp    rcx,rdx
   14002a0b0:	je     0x14002a0d0
   14002a0b2:	test   BYTE PTR [rcx+0x1c],0x1
   14002a0b6:	je     0x14002a0d0
   14002a0b8:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a0bc:	lea    r8,[rip+0x132fd]        # 0x14003d3c0
   14002a0c3:	mov    edx,0xa
   14002a0c8:	mov    r9d,eax
   14002a0cb:	call   0x140001f70
   14002a0d0:	add    rsp,0x28
   14002a0d4:	ret    
   14002a0d5:	int3   
   14002a0d6:	int3   
   14002a0d7:	int3   
   14002a0d8:	int3   
   14002a0d9:	int3   
   14002a0da:	int3   
   14002a0db:	int3   
   14002a0dc:	rex push rbx
   14002a0de:	sub    rsp,0x20
   14002a0e2:	call   0x14002b128
   14002a0e7:	mov    ebx,eax
   14002a0e9:	mov    rcx,QWORD PTR [rip+0x20f88]        # 0x14004b078
   14002a0f0:	lea    rax,[rip+0x20f81]        # 0x14004b078
   14002a0f7:	cmp    rcx,rax
   14002a0fa:	je     0x14002a11a
   14002a0fc:	test   BYTE PTR [rcx+0x1c],0x1
   14002a100:	je     0x14002a11a
   14002a102:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a106:	lea    r8,[rip+0x132b3]        # 0x14003d3c0
   14002a10d:	mov    edx,0xb
   14002a112:	mov    r9d,ebx
   14002a115:	call   0x140001f70
   14002a11a:	mov    eax,ebx
   14002a11c:	add    rsp,0x20
   14002a120:	pop    rbx
   14002a121:	ret    
   14002a122:	int3   
   14002a123:	int3   
   14002a124:	int3   
   14002a125:	int3   
   14002a126:	int3   
   14002a127:	int3   
   14002a128:	sub    rsp,0x28
   14002a12c:	call   QWORD PTR [rip+0x805e]        # 0x140032190
   14002a132:	test   eax,eax
   14002a134:	jne    0x14002a16c
   14002a136:	call   0x14002b128
   14002a13b:	mov    rcx,QWORD PTR [rip+0x20f36]        # 0x14004b078
   14002a142:	lea    rdx,[rip+0x20f2f]        # 0x14004b078
   14002a149:	cmp    rcx,rdx
   14002a14c:	je     0x14002a16c
   14002a14e:	test   BYTE PTR [rcx+0x1c],0x1
   14002a152:	je     0x14002a16c
   14002a154:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a158:	lea    r8,[rip+0x13261]        # 0x14003d3c0
   14002a15f:	mov    edx,0xd
   14002a164:	mov    r9d,eax
   14002a167:	call   0x140001f70
   14002a16c:	add    rsp,0x28
   14002a170:	ret    
   14002a171:	int3   
   14002a172:	int3   
   14002a173:	int3   
   14002a174:	int3   
   14002a175:	int3   
   14002a176:	int3   
   14002a177:	int3   
   14002a178:	rex push rbx
   14002a17a:	sub    rsp,0x30
   14002a17e:	mov    ebx,edx
   14002a180:	call   QWORD PTR [rip+0x7ffa]        # 0x140032180
   14002a186:	mov    edx,0x102
   14002a18b:	test   eax,eax
   14002a18d:	je     0x14002a1e7
   14002a18f:	cmp    eax,0x80
   14002a194:	je     0x14002a1e7
   14002a196:	cmp    eax,edx
   14002a198:	je     0x14002a1e9
   14002a19a:	mov    r8d,0x80070006
   14002a1a0:	cmp    eax,0xffffffff
   14002a1a3:	jne    0x14002a1ad
   14002a1a5:	call   0x14002b128
   14002a1aa:	mov    r8d,eax
   14002a1ad:	mov    rcx,QWORD PTR [rip+0x20ec4]        # 0x14004b078
   14002a1b4:	lea    rax,[rip+0x20ebd]        # 0x14004b078
   14002a1bb:	cmp    rcx,rax
   14002a1be:	je     0x14002a1e3
   14002a1c0:	test   BYTE PTR [rcx+0x1c],0x1
   14002a1c4:	je     0x14002a1e3
   14002a1c6:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a1ca:	mov    edx,0x12
   14002a1cf:	mov    DWORD PTR [rsp+0x20],r8d
   14002a1d4:	mov    r9d,ebx
   14002a1d7:	lea    r8,[rip+0x131e2]        # 0x14003d3c0
   14002a1de:	call   0x140015b2c
   14002a1e3:	xor    al,al
   14002a1e5:	jmp    0x14002a1ec
   14002a1e7:	cmp    eax,edx
   14002a1e9:	sete   al
   14002a1ec:	add    rsp,0x30
   14002a1f0:	pop    rbx
   14002a1f1:	ret    
   14002a1f2:	int3   
   14002a1f3:	int3   
   14002a1f4:	int3   
   14002a1f5:	int3   
   14002a1f6:	int3   
   14002a1f7:	int3   
   14002a1f8:	mov    QWORD PTR [rsp+0x8],rbx
   14002a1fd:	mov    QWORD PTR [rsp+0x10],rsi
   14002a202:	push   rdi
   14002a203:	sub    rsp,0x20
   14002a207:	xor    esi,esi
   14002a209:	mov    rdi,rdx
   14002a20c:	mov    WORD PTR [rdx+0x206],si
   14002a213:	mov    rbx,rcx
   14002a216:	call   QWORD PTR [rip+0x848c]        # 0x1400326a8
   14002a21c:	mov    edx,0x104
   14002a221:	mov    rcx,rdi
   14002a224:	call   rbx
   14002a226:	test   eax,eax
   14002a228:	jne    0x14002a231
   14002a22a:	call   0x14002b128
   14002a22f:	jmp    0x14002a257
   14002a231:	cmp    WORD PTR [rdi+0x206],si
   14002a238:	jne    0x14002a252
   14002a23a:	cmp    eax,0x104
   14002a23f:	jae    0x14002a252
   14002a241:	dec    eax
   14002a243:	cmp    WORD PTR [rdi+rax*2],0x5c
   14002a248:	jne    0x14002a24e
   14002a24a:	mov    WORD PTR [rdi+rax*2],si
   14002a24e:	xor    eax,eax
   14002a250:	jmp    0x14002a257
   14002a252:	mov    eax,0x80004005
   14002a257:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a25c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a261:	add    rsp,0x20
   14002a265:	pop    rdi
   14002a266:	ret    
   14002a267:	int3   
   14002a268:	int3   
   14002a269:	int3   
   14002a26a:	int3   
   14002a26b:	int3   
   14002a26c:	int3   
   14002a26d:	int3   
   14002a26e:	int3   
   14002a26f:	int3   
   14002a270:	mov    QWORD PTR [rsp+0x8],rbx
   14002a275:	mov    QWORD PTR [rsp+0x10],rsi
   14002a27a:	push   rdi
   14002a27b:	sub    rsp,0x30
   14002a27f:	mov    rdi,rdx
   14002a282:	mov    rbx,rcx
   14002a285:	mov    rcx,QWORD PTR [rip+0x20dec]        # 0x14004b078
   14002a28c:	lea    rsi,[rip+0x20de5]        # 0x14004b078
   14002a293:	cmp    rcx,rsi
   14002a296:	je     0x14002a2b6
   14002a298:	test   BYTE PTR [rcx+0x1c],0x4
   14002a29c:	je     0x14002a2b6
   14002a29e:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a2a2:	lea    r8,[rip+0x13117]        # 0x14003d3c0
   14002a2a9:	mov    edx,0x17
   14002a2ae:	mov    r9,rdi
   14002a2b1:	call   0x1400071e8
   14002a2b6:	mov    rcx,rdi
   14002a2b9:	call   QWORD PTR [rip+0x7fa1]        # 0x140032260
   14002a2bf:	mov    QWORD PTR [rbx],rax
   14002a2c2:	test   rax,rax
   14002a2c5:	jne    0x14002a300
   14002a2c7:	call   0x14002b128
   14002a2cc:	mov    ebx,eax
   14002a2ce:	mov    rcx,QWORD PTR [rip+0x20da3]        # 0x14004b078
   14002a2d5:	cmp    rcx,rsi
   14002a2d8:	je     0x14002a2fc
   14002a2da:	test   BYTE PTR [rcx+0x1c],0x1
   14002a2de:	je     0x14002a2fc
   14002a2e0:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a2e4:	lea    r8,[rip+0x130d5]        # 0x14003d3c0
   14002a2eb:	mov    edx,0x18
   14002a2f0:	mov    DWORD PTR [rsp+0x20],eax
   14002a2f4:	mov    r9,rdi
   14002a2f7:	call   0x140007264
   14002a2fc:	mov    eax,ebx
   14002a2fe:	jmp    0x14002a302
   14002a300:	xor    eax,eax
   14002a302:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a307:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a30c:	add    rsp,0x30
   14002a310:	pop    rdi
   14002a311:	ret    
   14002a312:	int3   
   14002a313:	int3   
   14002a314:	int3   
   14002a315:	int3   
   14002a316:	int3   
   14002a317:	int3   
   14002a318:	mov    QWORD PTR [rsp+0x10],rbx
   14002a31d:	mov    QWORD PTR [rsp+0x18],rsi
   14002a322:	push   rdi
   14002a323:	sub    rsp,0x240
   14002a32a:	mov    rax,QWORD PTR [rip+0x20cef]        # 0x14004b020
   14002a331:	xor    rax,rsp
   14002a334:	mov    QWORD PTR [rsp+0x230],rax
   14002a33c:	mov    rdi,rdx
   14002a33f:	mov    rsi,rcx
   14002a342:	mov    rcx,QWORD PTR [rip+0x7ec7]        # 0x140032210
   14002a349:	lea    rdx,[rsp+0x20]
   14002a34e:	call   0x14002a1f8
   14002a353:	xor    ebx,ebx
   14002a355:	test   eax,eax
   14002a357:	js     0x14002a393
   14002a359:	lea    r8,[rip+0xc674]        # 0x1400369d4
   14002a360:	lea    rcx,[rsp+0x20]
   14002a365:	call   0x1400299f4
   14002a36a:	test   eax,eax
   14002a36c:	js     0x14002a393
   14002a36e:	mov    r8,rdi
   14002a371:	lea    rcx,[rsp+0x20]
   14002a376:	call   0x1400299f4
   14002a37b:	test   eax,eax
   14002a37d:	js     0x14002a393
   14002a37f:	lea    rdx,[rsp+0x20]
   14002a384:	mov    rcx,rsi
   14002a387:	call   0x14002a270
   14002a38c:	test   eax,eax
   14002a38e:	cmovs  ebx,eax
   14002a391:	mov    eax,ebx
   14002a393:	mov    rcx,QWORD PTR [rsp+0x230]
   14002a39b:	xor    rcx,rsp
   14002a39e:	call   0x14002dd00
   14002a3a3:	lea    r11,[rsp+0x240]
   14002a3ab:	mov    rbx,QWORD PTR [r11+0x18]
   14002a3af:	mov    rsi,QWORD PTR [r11+0x20]
   14002a3b3:	mov    rsp,r11
   14002a3b6:	pop    rdi
   14002a3b7:	ret    
   14002a3b8:	int3   
   14002a3b9:	int3   
   14002a3ba:	int3   
   14002a3bb:	int3   
   14002a3bc:	int3   
   14002a3bd:	int3   
   14002a3be:	int3   
   14002a3bf:	int3   
   14002a3c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a3c5:	push   rdi
   14002a3c6:	sub    rsp,0x30
   14002a3ca:	mov    rdi,rcx
   14002a3cd:	call   0x14002b128
   14002a3d2:	mov    ebx,eax
   14002a3d4:	mov    eax,0x8007007f
   14002a3d9:	cmp    ebx,eax
   14002a3db:	je     0x14002a44d
   14002a3dd:	test   rdi,0xffffffffffff0000
   14002a3e4:	jne    0x14002a41d
   14002a3e6:	mov    rcx,QWORD PTR [rip+0x20c8b]        # 0x14004b078
   14002a3ed:	lea    rax,[rip+0x20c84]        # 0x14004b078
   14002a3f4:	cmp    rcx,rax
   14002a3f7:	je     0x14002a446
   14002a3f9:	test   BYTE PTR [rcx+0x1c],0x2
   14002a3fd:	je     0x14002a446
   14002a3ff:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a403:	lea    r8,[rip+0x12fb6]        # 0x14003d3c0
   14002a40a:	mov    edx,0x1b
   14002a40f:	mov    DWORD PTR [rsp+0x20],ebx
   14002a413:	mov    r9d,edi
   14002a416:	call   0x140015b2c
   14002a41b:	jmp    0x14002a446
   14002a41d:	mov    rcx,QWORD PTR [rip+0x20c54]        # 0x14004b078
   14002a424:	lea    rax,[rip+0x20c4d]        # 0x14004b078
   14002a42b:	cmp    rcx,rax
   14002a42e:	je     0x14002a446
   14002a430:	test   BYTE PTR [rcx+0x1c],0x2
   14002a434:	je     0x14002a446
   14002a436:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a43a:	mov    r9,rdi
   14002a43d:	mov    DWORD PTR [rsp+0x20],ebx
   14002a441:	call   0x14002a014
   14002a446:	xor    eax,eax
   14002a448:	test   ebx,ebx
   14002a44a:	cmovs  eax,ebx
   14002a44d:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a452:	add    rsp,0x30
   14002a456:	pop    rdi
   14002a457:	ret    
   14002a458:	int3   
   14002a459:	int3   
   14002a45a:	int3   
   14002a45b:	int3   
   14002a45c:	int3   
   14002a45d:	int3   
   14002a45e:	int3   
   14002a45f:	int3   
   14002a460:	mov    QWORD PTR [rsp+0x8],rbx
   14002a465:	mov    QWORD PTR [rsp+0x10],rsi
   14002a46a:	mov    QWORD PTR [rsp+0x18],rdi
   14002a46f:	push   r14
   14002a471:	sub    rsp,0x30
   14002a475:	mov    r14,rcx
   14002a478:	mov    rdi,r8
   14002a47b:	mov    rcx,rdx
   14002a47e:	mov    rsi,rdx
   14002a481:	call   QWORD PTR [rip+0x7e29]        # 0x1400322b0
   14002a487:	test   rax,rax
   14002a48a:	jne    0x14002a4cc
   14002a48c:	call   0x14002b128
   14002a491:	mov    ebx,eax
   14002a493:	mov    rcx,QWORD PTR [rip+0x20bde]        # 0x14004b078
   14002a49a:	lea    rax,[rip+0x20bd7]        # 0x14004b078
   14002a4a1:	cmp    rcx,rax
   14002a4a4:	je     0x14002a4c8
   14002a4a6:	test   BYTE PTR [rcx+0x1c],0x1
   14002a4aa:	je     0x14002a4c8
   14002a4ac:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a4b0:	lea    r8,[rip+0x12f09]        # 0x14003d3c0
   14002a4b7:	mov    edx,0x1d
   14002a4bc:	mov    DWORD PTR [rsp+0x20],ebx
   14002a4c0:	mov    r9,rsi
   14002a4c3:	call   0x140007264
   14002a4c8:	mov    eax,ebx
   14002a4ca:	jmp    0x14002a504
   14002a4cc:	mov    rdx,rdi
   14002a4cf:	mov    rcx,rax
   14002a4d2:	call   QWORD PTR [rip+0x7dc8]        # 0x1400322a0
   14002a4d8:	mov    rbx,rax
   14002a4db:	test   rax,rax
   14002a4de:	jne    0x14002a4ec
   14002a4e0:	mov    dl,0x1
   14002a4e2:	mov    rcx,rdi
   14002a4e5:	call   0x14002a3c0
   14002a4ea:	jmp    0x14002a4ee
   14002a4ec:	xor    eax,eax
   14002a4ee:	mov    ecx,0x8007007f
   14002a4f3:	cmp    eax,ecx
   14002a4f5:	jne    0x14002a4fb
   14002a4f7:	mov    eax,ecx
   14002a4f9:	jmp    0x14002a504
   14002a4fb:	test   eax,eax
   14002a4fd:	js     0x14002a504
   14002a4ff:	mov    QWORD PTR [r14],rbx
   14002a502:	xor    eax,eax
   14002a504:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a509:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a50e:	mov    rdi,QWORD PTR [rsp+0x50]
   14002a513:	add    rsp,0x30
   14002a517:	pop    r14
   14002a519:	ret    
   14002a51a:	int3   
   14002a51b:	int3   
   14002a51c:	int3   
   14002a51d:	int3   
   14002a51e:	int3   
   14002a51f:	int3   
   14002a520:	mov    QWORD PTR [rsp+0x8],rbx
   14002a525:	push   rdi
   14002a526:	sub    rsp,0x30
   14002a52a:	mov    rdi,rcx
   14002a52d:	call   0x14002b128
   14002a532:	mov    ebx,eax
   14002a534:	mov    rcx,QWORD PTR [rip+0x20b3d]        # 0x14004b078
   14002a53b:	lea    rax,[rip+0x20b36]        # 0x14004b078
   14002a542:	cmp    rcx,rax
   14002a545:	je     0x14002a569
   14002a547:	test   BYTE PTR [rcx+0x1c],0x1
   14002a54b:	je     0x14002a569
   14002a54d:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a551:	lea    r8,[rip+0x12e68]        # 0x14003d3c0
   14002a558:	mov    edx,0x1f
   14002a55d:	mov    DWORD PTR [rsp+0x20],ebx
   14002a561:	mov    r9,rdi
   14002a564:	call   0x140007264
   14002a569:	mov    eax,ebx
   14002a56b:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a570:	add    rsp,0x30
   14002a574:	pop    rdi
   14002a575:	ret    
   14002a576:	int3   
   14002a577:	int3   
   14002a578:	int3   
   14002a579:	int3   
   14002a57a:	int3   
   14002a57b:	int3   
   14002a57c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a581:	push   rdi
   14002a582:	sub    rsp,0x40
   14002a586:	or     QWORD PTR [rcx],0xffffffffffffffff
   14002a58a:	mov    r10d,r9d
   14002a58d:	and    QWORD PTR [rsp+0x30],0x0
   14002a593:	mov    r11d,r8d
   14002a596:	mov    eax,DWORD PTR [rsp+0x78]
   14002a59a:	mov    rdi,rdx
   14002a59d:	mov    rbx,rcx
   14002a5a0:	mov    DWORD PTR [rsp+0x28],eax
   14002a5a4:	mov    r8d,r10d
   14002a5a7:	mov    DWORD PTR [rsp+0x20],0x3
   14002a5af:	mov    edx,r11d
   14002a5b2:	mov    rcx,rdi
   14002a5b5:	xor    r9d,r9d
   14002a5b8:	call   QWORD PTR [rip+0x7c9a]        # 0x140032258
   14002a5be:	mov    QWORD PTR [rbx],rax
   14002a5c1:	cmp    rax,0xffffffffffffffff
   14002a5c5:	je     0x14002a5cb
   14002a5c7:	xor    eax,eax
   14002a5c9:	jmp    0x14002a634
   14002a5cb:	call   0x14002b128
   14002a5d0:	mov    ebx,eax
   14002a5d2:	lea    ecx,[rax+0x7ff8fffe]
   14002a5d8:	cmp    ecx,0x1
   14002a5db:	ja     0x14002a5fd
   14002a5dd:	mov    rcx,QWORD PTR [rip+0x20a94]        # 0x14004b078
   14002a5e4:	lea    rax,[rip+0x20a8d]        # 0x14004b078
   14002a5eb:	cmp    rcx,rax
   14002a5ee:	je     0x14002a632
   14002a5f0:	test   BYTE PTR [rcx+0x1c],0x4
   14002a5f4:	je     0x14002a632
   14002a5f6:	mov    edx,0x20
   14002a5fb:	jmp    0x14002a61b
   14002a5fd:	mov    rcx,QWORD PTR [rip+0x20a74]        # 0x14004b078
   14002a604:	lea    rax,[rip+0x20a6d]        # 0x14004b078
   14002a60b:	cmp    rcx,rax
   14002a60e:	je     0x14002a632
   14002a610:	test   BYTE PTR [rcx+0x1c],0x1
   14002a614:	je     0x14002a632
   14002a616:	mov    edx,0x21
   14002a61b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a61f:	lea    r8,[rip+0x12d9a]        # 0x14003d3c0
   14002a626:	mov    r9,rdi
   14002a629:	mov    DWORD PTR [rsp+0x20],ebx
   14002a62d:	call   0x140007264
   14002a632:	mov    eax,ebx
   14002a634:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a639:	add    rsp,0x40
   14002a63d:	pop    rdi
   14002a63e:	ret    
   14002a63f:	int3   
   14002a640:	int3   
   14002a641:	int3   
   14002a642:	int3   
   14002a643:	int3   
   14002a644:	int3   
   14002a645:	int3   
   14002a646:	int3   
   14002a647:	int3   
   14002a648:	mov    QWORD PTR [rsp+0x8],rbx
   14002a64d:	push   rdi
   14002a64e:	sub    rsp,0x30
   14002a652:	mov    edi,DWORD PTR [rdx]
   14002a654:	mov    r10,r8
   14002a657:	mov    rbx,rdx
   14002a65a:	cmp    rdi,QWORD PTR [rdx]
   14002a65d:	je     0x14002a669
   14002a65f:	mov    eax,0x80070057
   14002a664:	jmp    0x14002a6ec
   14002a669:	and    QWORD PTR [rdx],0x0
   14002a66d:	lea    r9,[rsp+0x48]
   14002a672:	and    DWORD PTR [rsp+0x48],0x0
   14002a677:	mov    rdx,r10
   14002a67a:	and    QWORD PTR [rsp+0x20],0x0
   14002a680:	mov    r8d,edi
   14002a683:	call   QWORD PTR [rip+0x7b77]        # 0x140032200
   14002a689:	test   eax,eax
   14002a68b:	jne    0x14002a6d6
   14002a68d:	call   0x14002b128
   14002a692:	mov    edi,eax
   14002a694:	cmp    eax,0x80070026
   14002a699:	jne    0x14002a6a1
   14002a69b:	and    QWORD PTR [rbx],0x0
   14002a69f:	jmp    0x14002a6ea
   14002a6a1:	mov    rcx,QWORD PTR [rip+0x209d0]        # 0x14004b078
   14002a6a8:	lea    rax,[rip+0x209c9]        # 0x14004b078
   14002a6af:	cmp    rcx,rax
   14002a6b2:	je     0x14002a6d2
   14002a6b4:	test   BYTE PTR [rcx+0x1c],0x1
   14002a6b8:	je     0x14002a6d2
   14002a6ba:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a6be:	lea    r8,[rip+0x12cfb]        # 0x14003d3c0
   14002a6c5:	mov    edx,0x28
   14002a6ca:	mov    r9d,edi
   14002a6cd:	call   0x140001f70
   14002a6d2:	mov    eax,edi
   14002a6d4:	jmp    0x14002a6ec
   14002a6d6:	cmp    DWORD PTR [rsp+0x48],edi
   14002a6da:	jbe    0x14002a6e3
   14002a6dc:	mov    eax,0x8000ffff
   14002a6e1:	jmp    0x14002a6ec
   14002a6e3:	mov    eax,DWORD PTR [rsp+0x48]
   14002a6e7:	mov    QWORD PTR [rbx],rax
   14002a6ea:	xor    eax,eax
   14002a6ec:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a6f1:	add    rsp,0x30
   14002a6f5:	pop    rdi
   14002a6f6:	ret    
   14002a6f7:	int3   
   14002a6f8:	int3   
   14002a6f9:	int3   
   14002a6fa:	int3   
   14002a6fb:	int3   
   14002a6fc:	int3   
   14002a6fd:	int3   
   14002a6fe:	int3   
   14002a6ff:	int3   
   14002a700:	mov    rax,rsp
   14002a703:	mov    QWORD PTR [rax+0x20],r9
   14002a707:	push   rbx
   14002a708:	sub    rsp,0x40
   14002a70c:	and    DWORD PTR [rax-0x18],0x0
   14002a710:	lea    r8,[rip+0xfffffffffffebb89]        # 0x1400162a0
   14002a717:	and    DWORD PTR [rax-0x20],0x0
   14002a71b:	mov    rbx,rcx
   14002a71e:	mov    r9,QWORD PTR [rsp+0x70]
   14002a723:	lea    rcx,[rax+0x20]
   14002a727:	or     QWORD PTR [rax+0x20],0xffffffffffffffff
   14002a72c:	mov    DWORD PTR [rax-0x28],edx
   14002a72f:	xor    edx,edx
   14002a731:	call   QWORD PTR [rip+0x7a11]        # 0x140032148
   14002a737:	test   eax,eax
   14002a739:	jne    0x14002a777
   14002a73b:	call   0x14002b128
   14002a740:	mov    ebx,eax
   14002a742:	mov    rcx,QWORD PTR [rip+0x2092f]        # 0x14004b078
   14002a749:	lea    rax,[rip+0x20928]        # 0x14004b078
   14002a750:	cmp    rcx,rax
   14002a753:	je     0x14002a773
   14002a755:	test   BYTE PTR [rcx+0x1c],0x1
   14002a759:	je     0x14002a773
   14002a75b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a75f:	lea    r8,[rip+0x12c5a]        # 0x14003d3c0
   14002a766:	mov    edx,0x30
   14002a76b:	mov    r9d,ebx
   14002a76e:	call   0x140001f70
   14002a773:	mov    eax,ebx
   14002a775:	jmp    0x14002a781
   14002a777:	mov    rax,QWORD PTR [rsp+0x68]
   14002a77c:	mov    QWORD PTR [rbx],rax
   14002a77f:	xor    eax,eax
   14002a781:	add    rsp,0x40
   14002a785:	pop    rbx
   14002a786:	ret    
   14002a787:	int3   
   14002a788:	int3   
   14002a789:	int3   
   14002a78a:	int3   
   14002a78b:	int3   
   14002a78c:	int3   
   14002a78d:	int3   
   14002a78e:	int3   
   14002a78f:	int3   
   14002a790:	rex push rbx
   14002a792:	sub    rsp,0x20
   14002a796:	and    DWORD PTR [rsp+0x38],0x0
   14002a79b:	mov    rbx,rcx
   14002a79e:	mov    rdx,rcx
   14002a7a1:	lea    rcx,[rsp+0x38]
   14002a7a6:	call   0x14002ab78
   14002a7ab:	test   eax,eax
   14002a7ad:	js     0x14002a7f0
   14002a7af:	test   BYTE PTR [rsp+0x38],0x10
   14002a7b4:	je     0x14002a7ee
   14002a7b6:	mov    rcx,QWORD PTR [rip+0x208bb]        # 0x14004b078
   14002a7bd:	lea    rax,[rip+0x208b4]        # 0x14004b078
   14002a7c4:	cmp    rcx,rax
   14002a7c7:	je     0x14002a7e7
   14002a7c9:	test   BYTE PTR [rcx+0x1c],0x1
   14002a7cd:	je     0x14002a7e7
   14002a7cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a7d3:	lea    r8,[rip+0x12be6]        # 0x14003d3c0
   14002a7da:	mov    edx,0x34
   14002a7df:	mov    r9,rbx
   14002a7e2:	call   0x1400071e8
   14002a7e7:	mov    eax,0x800700b7
   14002a7ec:	jmp    0x14002a7f0
   14002a7ee:	xor    eax,eax
   14002a7f0:	add    rsp,0x20
   14002a7f4:	pop    rbx
   14002a7f5:	ret    
   14002a7f6:	int3   
   14002a7f7:	int3   
   14002a7f8:	int3   
   14002a7f9:	int3   
   14002a7fa:	int3   
   14002a7fb:	int3   
   14002a7fc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a801:	mov    QWORD PTR [rsp+0x10],rbp
   14002a806:	mov    QWORD PTR [rsp+0x18],rsi
   14002a80b:	push   rdi
   14002a80c:	sub    rsp,0x30
   14002a810:	mov    ebx,DWORD PTR [rdx]
   14002a812:	mov    rdi,r8
   14002a815:	mov    rsi,rdx
   14002a818:	mov    r8d,ebx
   14002a81b:	mov    rdx,rdi
   14002a81e:	mov    rbp,rcx
   14002a821:	call   QWORD PTR [rip+0x7981]        # 0x1400321a8
   14002a827:	xor    edx,edx
   14002a829:	mov    r9d,eax
   14002a82c:	test   eax,eax
   14002a82e:	jne    0x14002a870
   14002a830:	call   0x14002b128
   14002a835:	mov    ebx,eax
   14002a837:	mov    rcx,QWORD PTR [rip+0x2083a]        # 0x14004b078
   14002a83e:	lea    rax,[rip+0x20833]        # 0x14004b078
   14002a845:	cmp    rcx,rax
   14002a848:	je     0x14002a86c
   14002a84a:	test   BYTE PTR [rcx+0x1c],0x1
   14002a84e:	je     0x14002a86c
   14002a850:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a854:	lea    r8,[rip+0x12b65]        # 0x14003d3c0
   14002a85b:	mov    edx,0x36
   14002a860:	mov    DWORD PTR [rsp+0x20],ebx
   14002a864:	mov    r9,rbp
   14002a867:	call   0x140007264
   14002a86c:	mov    eax,ebx
   14002a86e:	jmp    0x14002a892
   14002a870:	cmp    r9d,ebx
   14002a873:	ja     0x14002a886
   14002a875:	lea    eax,[r9-0x1]
   14002a879:	cmp    WORD PTR [rdi+rax*2],dx
   14002a87d:	je     0x14002a88d
   14002a87f:	mov    eax,0x8000ffff
   14002a884:	jmp    0x14002a892
   14002a886:	test   ebx,ebx
   14002a888:	je     0x14002a88d
   14002a88a:	mov    WORD PTR [rdi],dx
   14002a88d:	mov    QWORD PTR [rsi],r9
   14002a890:	xor    eax,eax
   14002a892:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a897:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a89c:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a8a1:	add    rsp,0x30
   14002a8a5:	pop    rdi
   14002a8a6:	ret    
   14002a8a7:	int3   
   14002a8a8:	int3   
   14002a8a9:	int3   
   14002a8aa:	int3   
   14002a8ab:	int3   
   14002a8ac:	int3   
   14002a8ad:	int3   
   14002a8ae:	int3   
   14002a8af:	int3   
   14002a8b0:	mov    QWORD PTR [rsp+0x18],rbx
   14002a8b5:	mov    QWORD PTR [rsp+0x20],rbp
   14002a8ba:	push   rsi
   14002a8bb:	push   rdi
   14002a8bc:	push   r14
   14002a8be:	sub    rsp,0x250
   14002a8c5:	mov    rax,QWORD PTR [rip+0x20754]        # 0x14004b020
   14002a8cc:	xor    rax,rsp
   14002a8cf:	mov    QWORD PTR [rsp+0x240],rax
   14002a8d7:	mov    rbp,rdx
   14002a8da:	lea    r8,[rsp+0x30]
   14002a8df:	mov    r14,rcx
   14002a8e2:	lea    rdx,[rsp+0x20]
   14002a8e7:	mov    ebx,0x104
   14002a8ec:	mov    rcx,rbp
   14002a8ef:	mov    QWORD PTR [rsp+0x20],rbx
   14002a8f4:	call   0x14002a7fc
   14002a8f9:	test   eax,eax
   14002a8fb:	js     0x14002a985
   14002a901:	mov    rdi,QWORD PTR [rsp+0x20]
   14002a906:	cmp    rdi,rbx
   14002a909:	ja     0x14002a91a
   14002a90b:	lea    rdx,[rsp+0x30]
   14002a910:	mov    rcx,r14
   14002a913:	call   0x14002ba60
   14002a918:	jmp    0x14002a985
   14002a91a:	mov    rsi,rdi
   14002a91d:	and    QWORD PTR [rsp+0x28],0x0
   14002a923:	lea    rcx,[rsp+0x28]
   14002a928:	mov    rdx,rdi
   14002a92b:	call   0x1400299b4
   14002a930:	mov    rbx,QWORD PTR [rsp+0x28]
   14002a935:	mov    edi,eax
   14002a937:	test   eax,eax
   14002a939:	js     0x14002a975
   14002a93b:	mov    r8,rbx
   14002a93e:	lea    rdx,[rsp+0x20]
   14002a943:	mov    rcx,rbp
   14002a946:	call   0x14002a7fc
   14002a94b:	mov    edi,eax
   14002a94d:	test   eax,eax
   14002a94f:	js     0x14002a975
   14002a951:	mov    rdi,QWORD PTR [rsp+0x20]
   14002a956:	cmp    rdi,rsi
   14002a959:	jbe    0x14002a96e
   14002a95b:	mov    rsi,rdi
   14002a95e:	test   rbx,rbx
   14002a961:	je     0x14002a91d
   14002a963:	mov    rcx,rbx
   14002a966:	call   QWORD PTR [rip+0x7c5c]        # 0x1400325c8
   14002a96c:	jmp    0x14002a91d
   14002a96e:	mov    QWORD PTR [r14],rbx
   14002a971:	xor    eax,eax
   14002a973:	jmp    0x14002a985
   14002a975:	test   rbx,rbx
   14002a978:	je     0x14002a983
   14002a97a:	mov    rcx,rbx
   14002a97d:	call   QWORD PTR [rip+0x7c45]        # 0x1400325c8
   14002a983:	mov    eax,edi
   14002a985:	mov    rcx,QWORD PTR [rsp+0x240]
   14002a98d:	xor    rcx,rsp
   14002a990:	call   0x14002dd00
   14002a995:	lea    r11,[rsp+0x250]
   14002a99d:	mov    rbx,QWORD PTR [r11+0x30]
   14002a9a1:	mov    rbp,QWORD PTR [r11+0x38]
   14002a9a5:	mov    rsp,r11
   14002a9a8:	pop    r14
   14002a9aa:	pop    rdi
   14002a9ab:	pop    rsi
   14002a9ac:	ret    
   14002a9ad:	int3   
   14002a9ae:	int3   
   14002a9af:	int3   
   14002a9b0:	int3   
   14002a9b1:	int3   
   14002a9b2:	int3   
   14002a9b3:	int3   
   14002a9b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a9b9:	push   rdi
   14002a9ba:	sub    rsp,0x30
   14002a9be:	mov    rdi,rdx
   14002a9c1:	mov    rbx,rcx
   14002a9c4:	mov    rcx,rdi
   14002a9c7:	lea    rdx,[rip+0x12a52]        # 0x14003d420
   14002a9ce:	call   QWORD PTR [rip+0x7c34]        # 0x140032608
   14002a9d4:	mov    QWORD PTR [rbx],rax
   14002a9d7:	test   rax,rax
   14002a9da:	jne    0x14002aa7c
   14002a9e0:	call   QWORD PTR [rip+0x7afa]        # 0x1400324e0
   14002a9e6:	mov    r8d,DWORD PTR [rax]
   14002a9e9:	sub    r8d,0x2
   14002a9ed:	je     0x14002aa4a
   14002a9ef:	sub    r8d,0x3
   14002a9f3:	je     0x14002aa43
   14002a9f5:	sub    r8d,0x4
   14002a9f9:	je     0x14002aa3c
   14002a9fb:	sub    r8d,0x3
   14002a9ff:	je     0x14002aa27
   14002aa01:	sub    r8d,0x1
   14002aa05:	je     0x14002aa35
   14002aa07:	sub    r8d,0x4
   14002aa0b:	je     0x14002aa2e
   14002aa0d:	sub    r8d,0x5
   14002aa11:	je     0x14002aa27
   14002aa13:	cmp    r8d,0x6
   14002aa17:	je     0x14002aa20
   14002aa19:	mov    ebx,0x80004005
   14002aa1e:	jmp    0x14002aa4f
   14002aa20:	mov    ebx,0x80070027
   14002aa25:	jmp    0x14002aa4f
   14002aa27:	mov    ebx,0x8007000e
   14002aa2c:	jmp    0x14002aa4f
   14002aa2e:	mov    ebx,0x80070050
   14002aa33:	jmp    0x14002aa4f
   14002aa35:	mov    ebx,0x80070005
   14002aa3a:	jmp    0x14002aa4f
   14002aa3c:	mov    ebx,0x80070006
   14002aa41:	jmp    0x14002aa4f
   14002aa43:	mov    ebx,0x8007001e
   14002aa48:	jmp    0x14002aa4f
   14002aa4a:	mov    ebx,0x80070002
   14002aa4f:	mov    rcx,QWORD PTR [rip+0x20622]        # 0x14004b078
   14002aa56:	lea    rax,[rip+0x2061b]        # 0x14004b078
   14002aa5d:	cmp    rcx,rax
   14002aa60:	je     0x14002aa78
   14002aa62:	test   BYTE PTR [rcx+0x1c],0x1
   14002aa66:	je     0x14002aa78
   14002aa68:	mov    rcx,QWORD PTR [rcx+0x10]
   14002aa6c:	mov    r9,rdi
   14002aa6f:	mov    DWORD PTR [rsp+0x28],ebx
   14002aa73:	call   0x140029f64
   14002aa78:	mov    eax,ebx
   14002aa7a:	jmp    0x14002aa7e
   14002aa7c:	xor    eax,eax
   14002aa7e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aa83:	add    rsp,0x30
   14002aa87:	pop    rdi
   14002aa88:	ret    
   14002aa89:	int3   
   14002aa8a:	int3   
   14002aa8b:	int3   
   14002aa8c:	int3   
   14002aa8d:	int3   
   14002aa8e:	int3   
   14002aa8f:	int3   
   14002aa90:	mov    r11,rsp
   14002aa93:	mov    QWORD PTR [r11+0x8],rbx
   14002aa97:	mov    QWORD PTR [r11+0x18],rbp
   14002aa9b:	mov    QWORD PTR [r11+0x10],rdx
   14002aa9f:	push   rsi
   14002aaa0:	push   rdi
   14002aaa1:	push   r14
   14002aaa3:	sub    rsp,0x30
   14002aaa7:	and    QWORD PTR [r11+0x20],0x0
   14002aaac:	lea    rax,[rip+0x1286d]        # 0x14003d320
   14002aab3:	xor    ebx,ebx
   14002aab5:	mov    QWORD PTR [r11-0x28],rax
   14002aab9:	and    QWORD PTR [r11+0x10],rbx
   14002aabd:	lea    rax,[rip+0x1283c]        # 0x14003d300
   14002aac4:	mov    QWORD PTR [r11-0x20],rax
   14002aac8:	mov    r14,rcx
   14002aacb:	xor    esi,esi
   14002aacd:	mov    edi,0x8007007e
   14002aad2:	mov    rdx,QWORD PTR [rsp+rsi*8+0x20]
   14002aad7:	test   rdx,rdx
   14002aada:	je     0x14002ab48
   14002aadc:	lea    rcx,[rsp+0x58]
   14002aae1:	call   0x14002a318
   14002aae6:	cmp    eax,edi
   14002aae8:	jne    0x14002aaf5
   14002aaea:	inc    rsi
   14002aaed:	cmp    rsi,0x2
   14002aaf1:	jb     0x14002aad2
   14002aaf3:	jmp    0x14002ab4d
   14002aaf5:	test   eax,eax
   14002aaf7:	jns    0x14002aafd
   14002aaf9:	mov    edi,eax
   14002aafb:	jmp    0x14002ab04
   14002aafd:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ab02:	xor    edi,edi
   14002ab04:	test   edi,edi
   14002ab06:	js     0x14002ab4d
   14002ab08:	lea    rdx,[rip+0x128d1]        # 0x14003d3e0
   14002ab0f:	mov    rcx,rbx
   14002ab12:	call   QWORD PTR [rip+0x7788]        # 0x1400322a0
   14002ab18:	mov    rbp,rax
   14002ab1b:	test   rax,rax
   14002ab1e:	jne    0x14002ab32
   14002ab20:	xor    edx,edx
   14002ab22:	lea    rcx,[rip+0x128b7]        # 0x14003d3e0
   14002ab29:	call   0x14002a3c0
   14002ab2e:	mov    esi,eax
   14002ab30:	jmp    0x14002ab34
   14002ab32:	xor    esi,esi
   14002ab34:	mov    edi,0x8007007f
   14002ab39:	cmp    esi,edi
   14002ab3b:	je     0x14002ab4d
   14002ab3d:	test   esi,esi
   14002ab3f:	js     0x14002ab4f
   14002ab41:	mov    QWORD PTR [r14],rbp
   14002ab44:	xor    esi,esi
   14002ab46:	jmp    0x14002ab4f
   14002ab48:	mov    edi,0x80070057
   14002ab4d:	mov    esi,edi
   14002ab4f:	test   rbx,rbx
   14002ab52:	je     0x14002ab5d
   14002ab54:	mov    rcx,rbx
   14002ab57:	call   QWORD PTR [rip+0x7583]        # 0x1400320e0
   14002ab5d:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ab62:	mov    eax,esi
   14002ab64:	mov    rbp,QWORD PTR [rsp+0x60]
   14002ab69:	add    rsp,0x30
   14002ab6d:	pop    r14
   14002ab6f:	pop    rdi
   14002ab70:	pop    rsi
   14002ab71:	ret    
   14002ab72:	int3   
   14002ab73:	int3   
   14002ab74:	int3   
   14002ab75:	int3   
   14002ab76:	int3   
   14002ab77:	int3   
   14002ab78:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab7d:	push   rdi
   14002ab7e:	sub    rsp,0x30
   14002ab82:	mov    rbx,rcx
   14002ab85:	mov    rdi,rdx
   14002ab88:	mov    rcx,rdx
   14002ab8b:	call   QWORD PTR [rip+0x7677]        # 0x140032208
   14002ab91:	cmp    eax,0xffffffff
   14002ab94:	jne    0x14002abe1
   14002ab96:	call   0x14002b128
   14002ab9b:	mov    ebx,eax
   14002ab9d:	lea    ecx,[rax+0x7ff8fffe]
   14002aba3:	cmp    ecx,0x1
   14002aba6:	jbe    0x14002abe5
   14002aba8:	mov    rcx,QWORD PTR [rip+0x204c9]        # 0x14004b078
   14002abaf:	lea    rax,[rip+0x204c2]        # 0x14004b078
   14002abb6:	cmp    rcx,rax
   14002abb9:	je     0x14002abdd
   14002abbb:	test   BYTE PTR [rcx+0x1c],0x1
   14002abbf:	je     0x14002abdd
   14002abc1:	mov    rcx,QWORD PTR [rcx+0x10]
   14002abc5:	lea    r8,[rip+0x127f4]        # 0x14003d3c0
   14002abcc:	mov    edx,0x3b
   14002abd1:	mov    DWORD PTR [rsp+0x20],ebx
   14002abd5:	mov    r9,rdi
   14002abd8:	call   0x140007264
   14002abdd:	mov    eax,ebx
   14002abdf:	jmp    0x14002abe5
   14002abe1:	mov    DWORD PTR [rbx],eax
   14002abe3:	xor    eax,eax
   14002abe5:	mov    rbx,QWORD PTR [rsp+0x40]
   14002abea:	add    rsp,0x30
   14002abee:	pop    rdi
   14002abef:	ret    
   14002abf0:	int3   
   14002abf1:	int3   
   14002abf2:	int3   
   14002abf3:	int3   
   14002abf4:	int3   
   14002abf5:	int3   
   14002abf6:	int3   
   14002abf7:	int3   
   14002abf8:	mov    rax,rsp
   14002abfb:	mov    QWORD PTR [rax+0x8],rbx
   14002abff:	mov    QWORD PTR [rax+0x10],rbp
   14002ac03:	mov    QWORD PTR [rax+0x18],rsi
   14002ac07:	push   rdi
   14002ac08:	sub    rsp,0x30
   14002ac0c:	and    DWORD PTR [r9],0x0
   14002ac10:	lea    rcx,[rax-0x18]
   14002ac14:	and    QWORD PTR [rax-0x18],0x0
   14002ac19:	mov    rbp,rdx
   14002ac1c:	lea    rdx,[rip+0x12735]        # 0x14003d358
   14002ac23:	mov    rdi,r9
   14002ac26:	mov    rsi,r8
   14002ac29:	call   0x14002a318
   14002ac2e:	and    QWORD PTR [rsp+0x58],0x0
   14002ac34:	lea    rcx,[rsp+0x58]
   14002ac39:	test   eax,eax
   14002ac3b:	js     0x14002ac77
   14002ac3d:	lea    r8,[rip+0x126fc]        # 0x14003d340
   14002ac44:	lea    rdx,[rip+0x1270d]        # 0x14003d358
   14002ac4b:	call   0x14002a460
   14002ac50:	mov    ebx,eax
   14002ac52:	test   eax,eax
   14002ac54:	js     0x14002acdb
   14002ac5a:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ac5f:	test   rbx,rbx
   14002ac62:	je     0x14002acd6
   14002ac64:	mov    rcx,rbx
   14002ac67:	call   QWORD PTR [rip+0x7a3b]        # 0x1400326a8
   14002ac6d:	mov    rdx,rsi
   14002ac70:	mov    rcx,rbp
   14002ac73:	call   rbx
   14002ac75:	jmp    0x14002acb0
   14002ac77:	lea    r8,[rip+0x1270a]        # 0x14003d388
   14002ac7e:	lea    rdx,[rip+0x1267b]        # 0x14003d300
   14002ac85:	call   0x14002a460
   14002ac8a:	mov    ebx,eax
   14002ac8c:	test   eax,eax
   14002ac8e:	js     0x14002acdb
   14002ac90:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ac95:	test   rbx,rbx
   14002ac98:	je     0x14002acd6
   14002ac9a:	mov    rcx,rbx
   14002ac9d:	call   QWORD PTR [rip+0x7a05]        # 0x1400326a8
   14002aca3:	mov    r8,rsi
   14002aca6:	mov    rdx,rbp
   14002aca9:	mov    ecx,0x1
   14002acae:	call   rbx
   14002acb0:	mov    esi,eax
   14002acb2:	test   eax,eax
   14002acb4:	je     0x14002acba
   14002acb6:	xor    ebx,ebx
   14002acb8:	jmp    0x14002acd2
   14002acba:	call   QWORD PTR [rip+0x75c8]        # 0x140032288
   14002acc0:	movzx  ebx,ax
   14002acc3:	or     ebx,0x80070000
   14002acc9:	test   eax,eax
   14002accb:	cmovle ebx,eax
   14002acce:	test   ebx,ebx
   14002acd0:	js     0x14002acdb
   14002acd2:	mov    DWORD PTR [rdi],esi
   14002acd4:	jmp    0x14002acdb
   14002acd6:	mov    ebx,0x80004005
   14002acdb:	mov    rcx,QWORD PTR [rsp+0x20]
   14002ace0:	test   rcx,rcx
   14002ace3:	je     0x14002aceb
   14002ace5:	call   QWORD PTR [rip+0x73f5]        # 0x1400320e0
   14002aceb:	mov    rbp,QWORD PTR [rsp+0x48]
   14002acf0:	mov    eax,ebx
   14002acf2:	mov    rbx,QWORD PTR [rsp+0x40]
   14002acf7:	mov    rsi,QWORD PTR [rsp+0x50]
   14002acfc:	add    rsp,0x30
   14002ad00:	pop    rdi
   14002ad01:	ret    
   14002ad02:	int3   
   14002ad03:	int3   
   14002ad04:	int3   
   14002ad05:	int3   
   14002ad06:	int3   
   14002ad07:	int3   
   14002ad08:	mov    rax,rsp
   14002ad0b:	mov    QWORD PTR [rax+0x8],rbx
   14002ad0f:	mov    QWORD PTR [rax+0x10],rsi
   14002ad13:	push   rdi
   14002ad14:	sub    rsp,0x40
   14002ad18:	and    QWORD PTR [rax-0x10],0x0
   14002ad1d:	lea    rcx,[rax-0x10]
   14002ad21:	mov    rsi,rdx
   14002ad24:	mov    edi,r9d
   14002ad27:	lea    rdx,[rip+0x1262a]        # 0x14003d358
   14002ad2e:	call   0x14002a318
   14002ad33:	and    QWORD PTR [rsp+0x30],0x0
   14002ad39:	lea    rcx,[rsp+0x30]
   14002ad3e:	test   eax,eax
   14002ad40:	js     0x14002ad83
   14002ad42:	lea    r8,[rip+0x12627]        # 0x14003d370
   14002ad49:	lea    rdx,[rip+0x12608]        # 0x14003d358
   14002ad50:	call   0x14002a460
   14002ad55:	mov    ebx,eax
   14002ad57:	test   eax,eax
   14002ad59:	js     0x14002adeb
   14002ad5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad64:	test   rbx,rbx
   14002ad67:	je     0x14002ade6
   14002ad69:	mov    rcx,rbx
   14002ad6c:	call   QWORD PTR [rip+0x7936]        # 0x1400326a8
   14002ad72:	mov    r9,QWORD PTR [rsp+0x70]
   14002ad77:	mov    r8d,edi
   14002ad7a:	xor    edx,edx
   14002ad7c:	mov    rcx,rsi
   14002ad7f:	call   rbx
   14002ad81:	jmp    0x14002adc8
   14002ad83:	lea    r8,[rip+0x1261e]        # 0x14003d3a8
   14002ad8a:	lea    rdx,[rip+0x1256f]        # 0x14003d300
   14002ad91:	call   0x14002a460
   14002ad96:	mov    ebx,eax
   14002ad98:	test   eax,eax
   14002ad9a:	js     0x14002adeb
   14002ad9c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ada1:	test   rbx,rbx
   14002ada4:	je     0x14002ade6
   14002ada6:	mov    rcx,rbx
   14002ada9:	call   QWORD PTR [rip+0x78f9]        # 0x1400326a8
   14002adaf:	mov    rax,QWORD PTR [rsp+0x70]
   14002adb4:	xor    r8d,r8d
   14002adb7:	mov    r9d,edi
   14002adba:	mov    QWORD PTR [rsp+0x20],rax
   14002adbf:	mov    rdx,rsi
   14002adc2:	lea    ecx,[r8+0x1]
   14002adc6:	call   rbx
   14002adc8:	test   eax,eax
   14002adca:	je     0x14002add0
   14002adcc:	xor    ebx,ebx
   14002adce:	jmp    0x14002adeb
   14002add0:	call   QWORD PTR [rip+0x74b2]        # 0x140032288
   14002add6:	movzx  ebx,ax
   14002add9:	or     ebx,0x80070000
   14002addf:	test   eax,eax
   14002ade1:	cmovle ebx,eax
   14002ade4:	jmp    0x14002adeb
   14002ade6:	mov    ebx,0x80004005
   14002adeb:	mov    rcx,QWORD PTR [rsp+0x38]
   14002adf0:	test   rcx,rcx
   14002adf3:	je     0x14002adfb
   14002adf5:	call   QWORD PTR [rip+0x72e5]        # 0x1400320e0
   14002adfb:	mov    rsi,QWORD PTR [rsp+0x58]
   14002ae00:	mov    eax,ebx
   14002ae02:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ae07:	add    rsp,0x40
   14002ae0b:	pop    rdi
   14002ae0c:	ret    
   14002ae0d:	int3   
   14002ae0e:	int3   
   14002ae0f:	int3   
   14002ae10:	int3   
   14002ae11:	int3   
   14002ae12:	int3   
   14002ae13:	int3   
   14002ae14:	mov    rax,rsp
   14002ae17:	mov    QWORD PTR [rax+0x10],rbx
   14002ae1b:	push   rdi
   14002ae1c:	sub    rsp,0x30
   14002ae20:	and    QWORD PTR [rcx],0x0
   14002ae24:	mov    r9,r8
   14002ae27:	and    QWORD PTR [rax+0x8],0x0
   14002ae2c:	mov    r8,rdx
   14002ae2f:	and    QWORD PTR [rax+0x20],0x0
   14002ae34:	lea    rdx,[rax+0x8]
   14002ae38:	mov    rdi,rcx
   14002ae3b:	lea    rcx,[rax+0x20]
   14002ae3f:	call   0x14002af24
   14002ae44:	mov    ebx,eax
   14002ae46:	test   eax,eax
   14002ae48:	jns    0x14002ae51
   14002ae4a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ae4f:	jmp    0x14002ae5d
   14002ae51:	mov    rax,QWORD PTR [rsp+0x40]
   14002ae56:	xor    ecx,ecx
   14002ae58:	mov    QWORD PTR [rdi],rax
   14002ae5b:	xor    ebx,ebx
   14002ae5d:	test   rcx,rcx
   14002ae60:	je     0x14002ae68
   14002ae62:	call   QWORD PTR [rip+0x74e8]        # 0x140032350
   14002ae68:	mov    eax,ebx
   14002ae6a:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ae6f:	add    rsp,0x30
   14002ae73:	pop    rdi
   14002ae74:	ret    
   14002ae75:	int3   
   14002ae76:	int3   
   14002ae77:	int3   
   14002ae78:	int3   
   14002ae79:	int3   
   14002ae7a:	int3   
   14002ae7b:	int3   
   14002ae7c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ae81:	push   rdi
   14002ae82:	sub    rsp,0x30
   14002ae86:	mov    rdi,rcx
   14002ae89:	xor    edx,edx
   14002ae8b:	xor    ecx,ecx
   14002ae8d:	call   QWORD PTR [rip+0x77e5]        # 0x140032678
   14002ae93:	mov    ebx,eax
   14002ae95:	test   eax,eax
   14002ae97:	jns    0x14002aed9
   14002ae99:	cmp    eax,0x80010106
   14002ae9e:	je     0x14002aed5
   14002aea0:	mov    rcx,QWORD PTR [rip+0x201d1]        # 0x14004b078
   14002aea7:	lea    rax,[rip+0x201ca]        # 0x14004b078
   14002aeae:	cmp    rcx,rax
   14002aeb1:	je     0x14002aed5
   14002aeb3:	test   BYTE PTR [rcx+0x1c],0x1
   14002aeb7:	je     0x14002aed5
   14002aeb9:	mov    rcx,QWORD PTR [rcx+0x10]
   14002aebd:	lea    r8,[rip+0x1250c]        # 0x14003d3d0
   14002aec4:	mov    edx,0xf
   14002aec9:	mov    DWORD PTR [rsp+0x20],ebx
   14002aecd:	xor    r9d,r9d
   14002aed0:	call   0x140015b2c
   14002aed5:	mov    eax,ebx
   14002aed7:	jmp    0x14002aee2
   14002aed9:	mov    QWORD PTR [rdi],0x12345678
   14002aee0:	xor    eax,eax
   14002aee2:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aee7:	add    rsp,0x30
   14002aeeb:	pop    rdi
   14002aeec:	ret    
   14002aeed:	int3   
   14002aeee:	int3   
   14002aeef:	int3   
   14002aef0:	int3   
   14002aef1:	int3   
   14002aef2:	int3   
   14002aef3:	int3   
   14002aef4:	mov    rax,rsp
   14002aef7:	mov    QWORD PTR [rax+0x10],rdx
   14002aefb:	mov    QWORD PTR [rax+0x18],r8
   14002aeff:	mov    QWORD PTR [rax+0x20],r9
   14002af03:	sub    rsp,0x28
   14002af07:	lea    r8,[rax+0x18]
   14002af0b:	call   0x14002ae14
   14002af10:	xor    ecx,ecx
   14002af12:	test   eax,eax
   14002af14:	cmovs  ecx,eax
   14002af17:	mov    eax,ecx
   14002af19:	add    rsp,0x28
   14002af1d:	ret    
   14002af1e:	int3   
   14002af1f:	int3   
   14002af20:	int3   
   14002af21:	int3   
   14002af22:	int3   
   14002af23:	int3   
   14002af24:	rex push rbx
   14002af26:	push   rbp
   14002af27:	push   rsi
   14002af28:	push   rdi
   14002af29:	push   r12
   14002af2b:	push   r13
   14002af2d:	push   r14
   14002af2f:	push   r15
   14002af31:	sub    rsp,0x268
   14002af38:	mov    rax,QWORD PTR [rip+0x200e1]        # 0x14004b020
   14002af3f:	xor    rax,rsp
   14002af42:	mov    QWORD PTR [rsp+0x250],rax
   14002af4a:	mov    rdi,QWORD PTR [rdx]
   14002af4d:	xor    esi,esi
   14002af4f:	mov    r14,QWORD PTR [rcx]
   14002af52:	mov    r13,r9
   14002af55:	mov    QWORD PTR [rsp+0x30],rsi
   14002af5a:	mov    r12,r8
   14002af5d:	mov    r15,rdx
   14002af60:	mov    rbp,rcx
   14002af63:	test   rdi,rdi
   14002af66:	jne    0x14002b029
   14002af6c:	mov    r14d,0x104
   14002af72:	call   QWORD PTR [rip+0x7490]        # 0x140032408
   14002af78:	mov    rbx,QWORD PTR [rax+0xc8]
   14002af7f:	mov    rcx,rbx
   14002af82:	call   QWORD PTR [rip+0x7720]        # 0x1400326a8
   14002af88:	mov    r9,r12
   14002af8b:	mov    QWORD PTR [rsp+0x20],r13
   14002af90:	lea    r8,[rsp+0x30]
   14002af95:	mov    ecx,r14d
   14002af98:	lea    rdx,[rsp+0x40]
   14002af9d:	call   rbx
   14002af9f:	test   eax,eax
   14002afa1:	js     0x14002b05f
   14002afa7:	or     rdi,0xffffffffffffffff
   14002afab:	lea    rax,[rsp+0x40]
   14002afb0:	mov    rbx,rdi
   14002afb3:	inc    rbx
   14002afb6:	cmp    WORD PTR [rax+rbx*2],si
   14002afba:	jne    0x14002afb3
   14002afbc:	mov    rcx,QWORD PTR [r15]
   14002afbf:	inc    rbx
   14002afc2:	call   QWORD PTR [rip+0x7388]        # 0x140032350
   14002afc8:	mov    eax,ebx
   14002afca:	mov    QWORD PTR [r15],rsi
   14002afcd:	cmp    rax,rbx
   14002afd0:	je     0x14002afd9
   14002afd2:	mov    eax,0x80070057
   14002afd7:	jmp    0x14002b005
   14002afd9:	mov    edx,ebx
   14002afdb:	xor    ecx,ecx
   14002afdd:	call   QWORD PTR [rip+0x7395]        # 0x140032378
   14002afe3:	mov    QWORD PTR [r15],rax
   14002afe6:	test   rax,rax
   14002afe9:	jne    0x14002aff2
   14002afeb:	mov    eax,0x8007000e
   14002aff0:	jmp    0x14002b005
   14002aff2:	lea    r8,[rbx+rbx*1]
   14002aff6:	mov    rcx,rax
   14002aff9:	lea    rdx,[rsp+0x40]
   14002affe:	call   0x14002e2f2
   14002b003:	mov    eax,esi
   14002b005:	test   eax,eax
   14002b007:	js     0x14002b0fd
   14002b00d:	lea    rax,[rsp+0x40]
   14002b012:	inc    rdi
   14002b015:	cmp    WORD PTR [rax+rdi*2],si
   14002b019:	jne    0x14002b012
   14002b01b:	inc    rdi
   14002b01e:	mov    QWORD PTR [rbp+0x0],rdi
   14002b022:	xor    eax,eax
   14002b024:	jmp    0x14002b0fd
   14002b029:	call   QWORD PTR [rip+0x73d9]        # 0x140032408
   14002b02f:	mov    rbx,QWORD PTR [rax+0xc8]
   14002b036:	mov    rcx,rbx
   14002b039:	call   QWORD PTR [rip+0x7669]        # 0x1400326a8
   14002b03f:	mov    r9,r12
   14002b042:	mov    QWORD PTR [rsp+0x20],r13
   14002b047:	lea    r8,[rsp+0x30]
   14002b04c:	mov    rdx,rdi
   14002b04f:	mov    rcx,r14
   14002b052:	call   rbx
   14002b054:	cmp    eax,0x8007007a
   14002b059:	jne    0x14002b0fd
   14002b05f:	cmp    r14,QWORD PTR [rsp+0x30]
   14002b064:	jae    0x14002b06d
   14002b066:	mov    r14,QWORD PTR [rsp+0x30]
   14002b06b:	jmp    0x14002b074
   14002b06d:	lea    r14,[r14+r14*2]
   14002b071:	shr    r14,1
   14002b074:	cmp    r14,0x7fffffff
   14002b07b:	ja     0x14002b0f8
   14002b07d:	mov    rcx,QWORD PTR [r15]
   14002b080:	call   QWORD PTR [rip+0x72ca]        # 0x140032350
   14002b086:	mov    eax,r14d
   14002b089:	mov    QWORD PTR [r15],rsi
   14002b08c:	cmp    rax,r14
   14002b08f:	jne    0x14002b0ed
   14002b091:	mov    edx,r14d
   14002b094:	xor    ecx,ecx
   14002b096:	call   QWORD PTR [rip+0x72dc]        # 0x140032378
   14002b09c:	mov    QWORD PTR [r15],rax
   14002b09f:	test   rax,rax
   14002b0a2:	je     0x14002b0e6
   14002b0a4:	mov    QWORD PTR [rbp+0x0],r14
   14002b0a8:	mov    rdi,QWORD PTR [r15]
   14002b0ab:	call   QWORD PTR [rip+0x7357]        # 0x140032408
   14002b0b1:	mov    rbx,QWORD PTR [rax+0xc8]
   14002b0b8:	mov    rcx,rbx
   14002b0bb:	call   QWORD PTR [rip+0x75e7]        # 0x1400326a8
   14002b0c1:	mov    r9,r12
   14002b0c4:	mov    QWORD PTR [rsp+0x20],r13
   14002b0c9:	lea    r8,[rsp+0x30]
   14002b0ce:	mov    rdx,rdi
   14002b0d1:	mov    rcx,r14
   14002b0d4:	call   rbx
   14002b0d6:	cmp    eax,0x8007007a
   14002b0db:	je     0x14002b05f
   14002b0dd:	test   eax,eax
   14002b0df:	cmovs  esi,eax
   14002b0e2:	mov    eax,esi
   14002b0e4:	jmp    0x14002b0fd
   14002b0e6:	mov    eax,0x8007000e
   14002b0eb:	jmp    0x14002b0f2
   14002b0ed:	mov    eax,0x80070057
   14002b0f2:	mov    QWORD PTR [rbp+0x0],rsi
   14002b0f6:	jmp    0x14002b0fd
   14002b0f8:	mov    eax,0x8007007a
   14002b0fd:	mov    rcx,QWORD PTR [rsp+0x250]
   14002b105:	xor    rcx,rsp
   14002b108:	call   0x14002dd00
   14002b10d:	add    rsp,0x268
   14002b114:	pop    r15
   14002b116:	pop    r14
   14002b118:	pop    r13
   14002b11a:	pop    r12
   14002b11c:	pop    rdi
   14002b11d:	pop    rsi
   14002b11e:	pop    rbp
   14002b11f:	pop    rbx
   14002b120:	ret    
   14002b121:	int3   
   14002b122:	int3   
   14002b123:	int3   
   14002b124:	int3   
   14002b125:	int3   
   14002b126:	int3   
   14002b127:	int3   
   14002b128:	sub    rsp,0x28
   14002b12c:	call   QWORD PTR [rip+0x7156]        # 0x140032288
   14002b132:	movzx  ecx,ax
   14002b135:	or     ecx,0x80070000
   14002b13b:	test   eax,eax
   14002b13d:	cmovle ecx,eax
   14002b140:	mov    eax,0x80004005
   14002b145:	test   ecx,ecx
   14002b147:	cmovns ecx,eax
   14002b14a:	mov    eax,ecx
   14002b14c:	add    rsp,0x28
   14002b150:	ret    
   14002b151:	int3   
   14002b152:	int3   
   14002b153:	int3   
   14002b154:	int3   
   14002b155:	int3   
   14002b156:	int3   
   14002b157:	int3   
   14002b158:	rex push rbx
   14002b15a:	sub    rsp,0x20
   14002b15e:	mov    rbx,QWORD PTR [rip+0x251b3]        # 0x140050318
   14002b165:	test   rbx,rbx
   14002b168:	jne    0x14002b190
   14002b16a:	and    QWORD PTR [rsp+0x30],rbx
   14002b16f:	lea    rcx,[rsp+0x30]
   14002b174:	call   0x14002aa90
   14002b179:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b17e:	test   rbx,rbx
   14002b181:	cmove  rbx,QWORD PTR [rip+0x6fdf]        # 0x140032168
   14002b189:	mov    QWORD PTR [rip+0x25188],rbx        # 0x140050318
   14002b190:	mov    rcx,rbx
   14002b193:	call   QWORD PTR [rip+0x750f]        # 0x1400326a8
   14002b199:	lea    rcx,[rsp+0x38]
   14002b19e:	call   rbx
   14002b1a0:	mov    rax,QWORD PTR [rsp+0x38]
   14002b1a5:	mov    DWORD PTR [rsp+0x30],eax
   14002b1a9:	shr    rax,0x20
   14002b1ad:	mov    DWORD PTR [rsp+0x34],eax
   14002b1b1:	mov    rax,QWORD PTR [rsp+0x30]
   14002b1b6:	add    rsp,0x20
   14002b1ba:	pop    rbx
   14002b1bb:	ret    
   14002b1bc:	int3   
   14002b1bd:	int3   
   14002b1be:	int3   
   14002b1bf:	int3   
   14002b1c0:	int3   
   14002b1c1:	int3   
   14002b1c2:	int3   
   14002b1c3:	int3   
   14002b1c4:	rex push rbx
   14002b1c6:	sub    rsp,0x20
   14002b1ca:	and    DWORD PTR [rsp+0x40],0x0
   14002b1cf:	lea    r9,[rsp+0x40]
   14002b1d4:	and    QWORD PTR [rsp+0x48],0x0
   14002b1da:	lea    r8,[rsp+0x48]
   14002b1df:	mov    rax,rdx
   14002b1e2:	mov    rbx,rcx
   14002b1e5:	mov    rcx,rax
   14002b1e8:	lea    rdx,[rip+0xb7e5]        # 0x1400369d4
   14002b1ef:	call   QWORD PTR [rip+0x71bb]        # 0x1400323b0
   14002b1f5:	test   eax,eax
   14002b1f7:	jne    0x14002b24c
   14002b1f9:	call   QWORD PTR [rip+0x7089]        # 0x140032288
   14002b1ff:	movzx  ecx,ax
   14002b202:	mov    ebx,0x80070715
   14002b207:	or     ecx,0x80070000
   14002b20d:	test   eax,eax
   14002b20f:	cmovle ecx,eax
   14002b212:	test   ecx,ecx
   14002b214:	cmovs  ebx,ecx
   14002b217:	mov    rcx,QWORD PTR [rip+0x1fe5a]        # 0x14004b078
   14002b21e:	lea    rax,[rip+0x1fe53]        # 0x14004b078
   14002b225:	cmp    rcx,rax
   14002b228:	je     0x14002b248
   14002b22a:	test   BYTE PTR [rcx+0x1c],0x2
   14002b22e:	je     0x14002b248
   14002b230:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b234:	lea    r8,[rip+0x121c5]        # 0x14003d400
   14002b23b:	mov    edx,0xd
   14002b240:	mov    r9d,ebx
   14002b243:	call   0x140001f70
   14002b248:	mov    eax,ebx
   14002b24a:	jmp    0x14002b27d
   14002b24c:	cmp    DWORD PTR [rsp+0x40],0x34
   14002b251:	jae    0x14002b25a
   14002b253:	mov    eax,0x8000ffff
   14002b258:	jmp    0x14002b27d
   14002b25a:	mov    rax,QWORD PTR [rsp+0x48]
   14002b25f:	movups xmm0,XMMWORD PTR [rax]
   14002b262:	movups XMMWORD PTR [rbx],xmm0
   14002b265:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002b269:	movups XMMWORD PTR [rbx+0x10],xmm1
   14002b26d:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002b271:	movups XMMWORD PTR [rbx+0x20],xmm0
   14002b275:	mov    eax,DWORD PTR [rax+0x30]
   14002b278:	mov    DWORD PTR [rbx+0x30],eax
   14002b27b:	xor    eax,eax
   14002b27d:	add    rsp,0x20
   14002b281:	pop    rbx
   14002b282:	ret    
   14002b283:	int3   
   14002b284:	int3   
   14002b285:	int3   
   14002b286:	int3   
   14002b287:	int3   
   14002b288:	int3   
   14002b289:	int3   
   14002b28a:	int3   
   14002b28b:	int3   
   14002b28c:	sub    rsp,0x28
   14002b290:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   14002b297:	je     0x14002b29f
   14002b299:	call   QWORD PTR [rip+0x6fd9]        # 0x140032278
   14002b29f:	add    rsp,0x28
   14002b2a3:	ret    
   14002b2a4:	int3   
   14002b2a5:	int3   
   14002b2a6:	int3   
   14002b2a7:	int3   
   14002b2a8:	int3   
   14002b2a9:	int3   
   14002b2aa:	int3   
   14002b2ab:	int3   
   14002b2ac:	mov    r11,rsp
   14002b2af:	mov    QWORD PTR [r11+0x8],rbx
   14002b2b3:	mov    QWORD PTR [r11+0x18],rsi
   14002b2b7:	mov    QWORD PTR [r11+0x10],rdx
   14002b2bb:	push   rdi
   14002b2bc:	sub    rsp,0x30
   14002b2c0:	and    QWORD PTR [rcx],0x0
   14002b2c4:	lea    rax,[r11+0x10]
   14002b2c8:	and    QWORD PTR [r11+0x10],0x0
   14002b2cd:	mov    rbx,r8
   14002b2d0:	mov    rsi,rcx
   14002b2d3:	mov    QWORD PTR [r11-0x18],rax
   14002b2d7:	mov    rdx,rbx
   14002b2da:	mov    r9d,0x1
   14002b2e0:	xor    r8d,r8d
   14002b2e3:	mov    rcx,0xffffffff80000002
   14002b2ea:	call   QWORD PTR [rip+0x6d60]        # 0x140032050
   14002b2f0:	mov    edi,eax
   14002b2f2:	cmp    eax,0x2
   14002b2f5:	jne    0x14002b32d
   14002b2f7:	mov    rcx,QWORD PTR [rip+0x1fd7a]        # 0x14004b078
   14002b2fe:	lea    rax,[rip+0x1fd73]        # 0x14004b078
   14002b305:	cmp    rcx,rax
   14002b308:	je     0x14002b326
   14002b30a:	test   BYTE PTR [rcx+0x1c],0x4
   14002b30e:	je     0x14002b326
   14002b310:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b314:	lea    edx,[rdi+0x8]
   14002b317:	mov    r9,rbx
   14002b31a:	lea    r8,[rip+0x120ef]        # 0x14003d410
   14002b321:	call   0x1400071e8
   14002b326:	mov    ebx,0x80070002
   14002b32b:	jmp    0x14002b378
   14002b32d:	test   eax,eax
   14002b32f:	je     0x14002b37f
   14002b331:	mov    rcx,QWORD PTR [rip+0x1fd40]        # 0x14004b078
   14002b338:	lea    rax,[rip+0x1fd39]        # 0x14004b078
   14002b33f:	cmp    rcx,rax
   14002b342:	je     0x14002b366
   14002b344:	test   BYTE PTR [rcx+0x1c],0x1
   14002b348:	je     0x14002b366
   14002b34a:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b34e:	lea    r8,[rip+0x120bb]        # 0x14003d410
   14002b355:	mov    edx,0xb
   14002b35a:	mov    DWORD PTR [rsp+0x20],edi
   14002b35e:	mov    r9,rbx
   14002b361:	call   0x140007264
   14002b366:	movzx  ebx,di
   14002b369:	or     ebx,0x80070000
   14002b36f:	test   edi,edi
   14002b371:	cmovle ebx,edi
   14002b374:	test   ebx,ebx
   14002b376:	jns    0x14002b37f
   14002b378:	mov    rcx,QWORD PTR [rsp+0x48]
   14002b37d:	jmp    0x14002b39f
   14002b37f:	mov    rcx,QWORD PTR [rsp+0x48]
   14002b384:	test   rcx,rcx
   14002b387:	jne    0x14002b390
   14002b389:	mov    ebx,0x8000ffff
   14002b38e:	jmp    0x14002b39f
   14002b390:	mov    rax,rcx
   14002b393:	xor    ecx,ecx
   14002b395:	mov    QWORD PTR [rsp+0x48],rcx
   14002b39a:	xor    ebx,ebx
   14002b39c:	mov    QWORD PTR [rsi],rax
   14002b39f:	test   rcx,rcx
   14002b3a2:	je     0x14002b3aa
   14002b3a4:	call   QWORD PTR [rip+0x6c8e]        # 0x140032038
   14002b3aa:	mov    rsi,QWORD PTR [rsp+0x50]
   14002b3af:	mov    eax,ebx
   14002b3b1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b3b6:	add    rsp,0x30
   14002b3ba:	pop    rdi
   14002b3bb:	ret    
   14002b3bc:	int3   
   14002b3bd:	int3   
   14002b3be:	int3   
   14002b3bf:	int3   
   14002b3c0:	int3   
   14002b3c1:	int3   
   14002b3c2:	int3   
   14002b3c3:	int3   
   14002b3c4:	mov    QWORD PTR [rsp+0x8],rbp
   14002b3c9:	mov    QWORD PTR [rsp+0x10],rsi
   14002b3ce:	push   rdi
   14002b3cf:	sub    rsp,0x20
   14002b3d3:	cmp    QWORD PTR [rsp+0x50],0x0
   14002b3d9:	mov    rdi,r9
   14002b3dc:	mov    esi,r8d
   14002b3df:	mov    rbp,rcx
   14002b3e2:	jne    0x14002b3e8
   14002b3e4:	xor    eax,eax
   14002b3e6:	jmp    0x14002b44f
   14002b3e8:	mov    r8,QWORD PTR [rsp+0x50]
   14002b3ed:	mov    ecx,esi
   14002b3ef:	call   0x14002d404
   14002b3f4:	test   eax,eax
   14002b3f6:	je     0x14002b44f
   14002b3f8:	cmp    eax,0x800700ea
   14002b3fd:	je     0x14002b44f
   14002b3ff:	cmp    eax,0x8007139f
   14002b404:	je     0x14002b419
   14002b406:	mov    r8,QWORD PTR [rsp+0x50]
   14002b40b:	mov    ecx,esi
   14002b40d:	mov    rdx,QWORD PTR [rdi]
   14002b410:	call   0x14002d3a8
   14002b415:	test   al,al
   14002b417:	jne    0x14002b3e4
   14002b419:	mov    rcx,QWORD PTR [rip+0x1fc58]        # 0x14004b078
   14002b420:	lea    rdx,[rip+0x1fc51]        # 0x14004b078
   14002b427:	cmp    rcx,rdx
   14002b42a:	je     0x14002b44a
   14002b42c:	test   BYTE PTR [rcx+0x1c],0x1
   14002b430:	je     0x14002b44a
   14002b432:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b436:	lea    r8,[rip+0x11fd3]        # 0x14003d410
   14002b43d:	mov    edx,0x17
   14002b442:	mov    r9,rbp
   14002b445:	call   0x1400071e8
   14002b44a:	mov    eax,0x8007139f
   14002b44f:	mov    rbp,QWORD PTR [rsp+0x30]
   14002b454:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b459:	add    rsp,0x20
   14002b45d:	pop    rdi
   14002b45e:	ret    
   14002b45f:	int3   
   14002b460:	int3   
   14002b461:	int3   
   14002b462:	int3   
   14002b463:	int3   
   14002b464:	int3   
   14002b465:	int3   
   14002b466:	int3   
   14002b467:	int3   
   14002b468:	mov    QWORD PTR [rsp+0x8],rbx
   14002b46d:	mov    QWORD PTR [rsp+0x10],rbp
   14002b472:	mov    QWORD PTR [rsp+0x18],rdi
   14002b477:	push   r12
   14002b479:	push   r14
   14002b47b:	push   r15
   14002b47d:	sub    rsp,0x30
   14002b481:	mov    r15,QWORD PTR [r9]
   14002b484:	mov    rdi,r9
   14002b487:	mov    eax,r15d
   14002b48a:	mov    r12,r8
   14002b48d:	mov    DWORD PTR [rsp+0x68],eax
   14002b491:	mov    rbp,rdx
   14002b494:	cmp    rax,r15
   14002b497:	je     0x14002b4ba
   14002b499:	mov    ebx,0x80070057
   14002b49e:	mov    eax,ebx
   14002b4a0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b4a5:	mov    rbp,QWORD PTR [rsp+0x58]
   14002b4aa:	mov    rdi,QWORD PTR [rsp+0x60]
   14002b4af:	add    rsp,0x30
   14002b4b3:	pop    r15
   14002b4b5:	pop    r14
   14002b4b7:	pop    r12
   14002b4b9:	ret    
   14002b4ba:	mov    r14,QWORD PTR [rsp+0x70]
   14002b4bf:	lea    rax,[rsp+0x68]
   14002b4c4:	mov    r9,r8
   14002b4c7:	mov    QWORD PTR [rsp+0x28],rax
   14002b4cc:	xor    r8d,r8d
   14002b4cf:	mov    QWORD PTR [rsp+0x20],r14
   14002b4d4:	call   QWORD PTR [rip+0x6be6]        # 0x1400320c0
   14002b4da:	movzx  ebx,ax
   14002b4dd:	or     ebx,0x80070000
   14002b4e3:	test   eax,eax
   14002b4e5:	cmovle ebx,eax
   14002b4e8:	test   ebx,ebx
   14002b4ea:	js     0x14002b510
   14002b4ec:	test   r14,r14
   14002b4ef:	je     0x14002b504
   14002b4f1:	mov    eax,DWORD PTR [rsp+0x68]
   14002b4f5:	cmp    rax,QWORD PTR [rdi]
   14002b4f8:	jbe    0x14002b504
   14002b4fa:	mov    QWORD PTR [rdi],rax
   14002b4fd:	mov    ebx,0x800700ea
   14002b502:	jmp    0x14002b49e
   14002b504:	mov    eax,DWORD PTR [rsp+0x68]
   14002b508:	mov    QWORD PTR [rdi],rax
   14002b50b:	jmp    0x14002b5cd
   14002b510:	cmp    ebx,0x80070002
   14002b516:	jne    0x14002b553
   14002b518:	mov    rcx,QWORD PTR [rip+0x1fb59]        # 0x14004b078
   14002b51f:	lea    rax,[rip+0x1fb52]        # 0x14004b078
   14002b526:	cmp    rcx,rax
   14002b529:	je     0x14002b549
   14002b52b:	test   BYTE PTR [rcx+0x1c],0x4
   14002b52f:	je     0x14002b549
   14002b531:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b535:	lea    r8,[rip+0x11ed4]        # 0x14003d410
   14002b53c:	mov    edx,0x15
   14002b541:	mov    r9,rbp
   14002b544:	call   0x1400071e8
   14002b549:	mov    ebx,0x80070002
   14002b54e:	jmp    0x14002b49e
   14002b553:	cmp    ebx,0x800700ea
   14002b559:	je     0x14002b592
   14002b55b:	mov    rcx,QWORD PTR [rip+0x1fb16]        # 0x14004b078
   14002b562:	lea    rax,[rip+0x1fb0f]        # 0x14004b078
   14002b569:	cmp    rcx,rax
   14002b56c:	je     0x14002b5ad
   14002b56e:	test   BYTE PTR [rcx+0x1c],0x1
   14002b572:	je     0x14002b5ad
   14002b574:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b578:	lea    r8,[rip+0x11e91]        # 0x14003d410
   14002b57f:	mov    edx,0x16
   14002b584:	mov    DWORD PTR [rsp+0x20],ebx
   14002b588:	mov    r9,rbp
   14002b58b:	call   0x140007264
   14002b590:	jmp    0x14002b5ad
   14002b592:	mov    eax,DWORD PTR [rsp+0x68]
   14002b596:	cmp    QWORD PTR [rdi],rax
   14002b599:	jb     0x14002b5a5
   14002b59b:	mov    ebx,0x8000ffff
   14002b5a0:	jmp    0x14002b49e
   14002b5a5:	mov    QWORD PTR [rdi],rax
   14002b5a8:	mov    ebx,0x800700ea
   14002b5ad:	cmp    ebx,0x800700ea
   14002b5b3:	je     0x14002b49e
   14002b5b9:	cmp    ebx,0x80070002
   14002b5bf:	je     0x14002b49e
   14002b5c5:	test   ebx,ebx
   14002b5c7:	js     0x14002b49e
   14002b5cd:	mov    r8d,DWORD PTR [r12]
   14002b5d1:	mov    r9,rdi
   14002b5d4:	mov    rdx,r15
   14002b5d7:	mov    QWORD PTR [rsp+0x20],r14
   14002b5dc:	mov    rcx,rbp
   14002b5df:	call   0x14002b3c4
   14002b5e4:	jmp    0x14002b4a0
   14002b5e9:	int3   
   14002b5ea:	int3   
   14002b5eb:	int3   
   14002b5ec:	int3   
   14002b5ed:	int3   
   14002b5ee:	int3   
   14002b5ef:	int3   
   14002b5f0:	mov    rax,rsp
   14002b5f3:	push   rbx
   14002b5f4:	sub    rsp,0x40
   14002b5f8:	mov    QWORD PTR [rax-0x28],r8
   14002b5fc:	lea    r9,[rax-0x18]
   14002b600:	xor    ebx,ebx
   14002b602:	mov    QWORD PTR [rax-0x18],0x4
   14002b60a:	lea    r8,[rax+0x20]
   14002b60e:	mov    DWORD PTR [rax+0x20],ebx
   14002b611:	call   0x14002b468
   14002b616:	cmp    eax,0x800700ea
   14002b61b:	jne    0x14002b624
   14002b61d:	mov    eax,0x8007065d
   14002b622:	jmp    0x14002b643
   14002b624:	test   eax,eax
   14002b626:	js     0x14002b62f
   14002b628:	cmp    DWORD PTR [rsp+0x68],0x4
   14002b62d:	jne    0x14002b61d
   14002b62f:	mov    ecx,0x80070002
   14002b634:	cmp    eax,ecx
   14002b636:	jne    0x14002b63c
   14002b638:	mov    eax,ecx
   14002b63a:	jmp    0x14002b643
   14002b63c:	test   eax,eax
   14002b63e:	cmovs  ebx,eax
   14002b641:	mov    eax,ebx
   14002b643:	add    rsp,0x40
   14002b647:	pop    rbx
   14002b648:	ret    
   14002b649:	int3   
   14002b64a:	int3   
   14002b64b:	int3   
   14002b64c:	int3   
   14002b64d:	int3   
   14002b64e:	int3   
   14002b64f:	int3   
   14002b650:	mov    QWORD PTR [rsp+0x8],rbx
   14002b655:	mov    QWORD PTR [rsp+0x10],rsi
   14002b65a:	push   rdi
   14002b65b:	sub    rsp,0x20
   14002b65f:	mov    rdi,rcx
   14002b662:	mov    rbx,rdx
   14002b665:	add    rcx,0x10
   14002b669:	call   QWORD PTR [rip+0x6a99]        # 0x140032108
   14002b66f:	add    rbx,0x10
   14002b673:	lea    rdx,[rdi+0x38]
   14002b677:	mov    rax,QWORD PTR [rdx]
   14002b67a:	lea    rcx,[rdi+0x10]
   14002b67e:	mov    QWORD PTR [rbx],rax
   14002b681:	mov    QWORD PTR [rbx+0x8],rdx
   14002b685:	mov    QWORD PTR [rax+0x8],rbx
   14002b689:	mov    QWORD PTR [rdx],rbx
   14002b68c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b691:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b696:	add    rsp,0x20
   14002b69a:	pop    rdi
   14002b69b:	rex.W jmp QWORD PTR [rip+0x6a56]        # 0x1400320f8
   14002b6a2:	int3   
   14002b6a3:	int3   
   14002b6a4:	int3   
   14002b6a5:	int3   
   14002b6a6:	int3   
   14002b6a7:	int3   
   14002b6a8:	int3   
   14002b6a9:	int3   
   14002b6aa:	int3   
   14002b6ab:	int3   
   14002b6ac:	int3   
   14002b6ad:	int3   
   14002b6ae:	int3   
   14002b6af:	int3   
   14002b6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b6b5:	push   rdi
   14002b6b6:	sub    rsp,0x20
   14002b6ba:	lea    rdi,[rcx+0x10]
   14002b6be:	mov    rbx,rdx
   14002b6c1:	mov    rcx,rdi
   14002b6c4:	call   QWORD PTR [rip+0x6a3e]        # 0x140032108
   14002b6ca:	mov    rax,QWORD PTR [rbx+0x18]
   14002b6ce:	mov    rcx,rdi
   14002b6d1:	mov    r8,QWORD PTR [rbx+0x10]
   14002b6d5:	mov    QWORD PTR [rax],r8
   14002b6d8:	mov    QWORD PTR [r8+0x8],rax
   14002b6dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b6e1:	add    rsp,0x20
   14002b6e5:	pop    rdi
   14002b6e6:	rex.W jmp QWORD PTR [rip+0x6a0b]        # 0x1400320f8
   14002b6ed:	int3   
   14002b6ee:	int3   
   14002b6ef:	int3   
   14002b6f0:	int3   
   14002b6f1:	int3   
   14002b6f2:	int3   
   14002b6f3:	int3   
   14002b6f4:	int3   
   14002b6f5:	int3   
   14002b6f6:	int3   
   14002b6f7:	int3   
   14002b6f8:	int3   
   14002b6f9:	int3   
   14002b6fa:	int3   
   14002b6fb:	int3   
   14002b6fc:	int3   
   14002b6fd:	int3   
   14002b6fe:	int3   
   14002b6ff:	int3   
   14002b700:	mov    QWORD PTR [rsp+0x8],rbx
   14002b705:	mov    QWORD PTR [rsp+0x10],rdi
   14002b70a:	push   rbp
   14002b70b:	mov    rbp,rsp
   14002b70e:	sub    rsp,0x40
   14002b712:	lea    rax,[rbp-0x20]
   14002b716:	mov    rbx,rcx
   14002b719:	mov    QWORD PTR [rbp-0x18],rax
   14002b71d:	lea    rdi,[rcx+0x10]
   14002b721:	lea    rax,[rbp-0x20]
   14002b725:	mov    rcx,rdi
   14002b728:	mov    QWORD PTR [rbp-0x20],rax
   14002b72c:	call   QWORD PTR [rip+0x69d6]        # 0x140032108
   14002b732:	mov    r8,QWORD PTR [rbp-0x20]
   14002b736:	lea    rax,[rbp-0x10]
   14002b73a:	mov    QWORD PTR [rbp-0x8],rax
   14002b73e:	lea    rcx,[rbp-0x10]
   14002b742:	mov    BYTE PTR [rbx+0x48],0x1
   14002b746:	lea    rax,[rbp-0x20]
   14002b74a:	add    rbx,0x38
   14002b74e:	mov    QWORD PTR [rbp-0x10],rcx
   14002b752:	cmp    r8,rax
   14002b755:	je     0x14002b78a
   14002b757:	mov    rax,QWORD PTR [rbp-0x18]
   14002b75b:	lea    rcx,[rbp-0x20]
   14002b75f:	mov    QWORD PTR [rbp-0x18],rcx
   14002b763:	lea    rcx,[rbp-0x20]
   14002b767:	mov    QWORD PTR [rbp-0x20],rcx
   14002b76b:	lea    rcx,[rbp-0x10]
   14002b76f:	mov    QWORD PTR [rbp-0x10],r8
   14002b773:	mov    QWORD PTR [r8+0x8],rcx
   14002b777:	lea    rcx,[rbp-0x10]
   14002b77b:	mov    QWORD PTR [rbp-0x8],rax
   14002b77f:	mov    QWORD PTR [rax],rcx
   14002b782:	mov    r8,QWORD PTR [rbp-0x20]
   14002b786:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b78a:	mov    rdx,QWORD PTR [rbx]
   14002b78d:	cmp    rdx,rbx
   14002b790:	je     0x14002b7b4
   14002b792:	mov    rax,QWORD PTR [rbx+0x8]
   14002b796:	lea    rcx,[rbp-0x20]
   14002b79a:	mov    QWORD PTR [rbx+0x8],rbx
   14002b79e:	mov    QWORD PTR [rbx],rbx
   14002b7a1:	mov    QWORD PTR [rbp-0x20],rdx
   14002b7a5:	mov    QWORD PTR [rdx+0x8],rcx
   14002b7a9:	mov    QWORD PTR [r8+0x8],rax
   14002b7ad:	mov    QWORD PTR [rax],r8
   14002b7b0:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b7b4:	lea    rax,[rbp-0x10]
   14002b7b8:	cmp    rcx,rax
   14002b7bb:	je     0x14002b7e2
   14002b7bd:	mov    rdx,QWORD PTR [rbp-0x8]
   14002b7c1:	lea    r8,[rbp-0x10]
   14002b7c5:	mov    rax,QWORD PTR [rbx]
   14002b7c8:	mov    QWORD PTR [rbp-0x8],r8
   14002b7cc:	lea    r8,[rbp-0x10]
   14002b7d0:	mov    QWORD PTR [rbp-0x10],r8
   14002b7d4:	mov    QWORD PTR [rbx],rcx
   14002b7d7:	mov    QWORD PTR [rcx+0x8],rbx
   14002b7db:	mov    QWORD PTR [rax+0x8],rdx
   14002b7df:	mov    QWORD PTR [rdx],rax
   14002b7e2:	mov    rcx,rdi
   14002b7e5:	call   QWORD PTR [rip+0x690d]        # 0x1400320f8
   14002b7eb:	lea    rax,[rbp-0x20]
   14002b7ef:	cmp    QWORD PTR [rbp-0x20],rax
   14002b7f3:	je     0x14002b85f
   14002b7f5:	mov    rcx,QWORD PTR [rbp-0x18]
   14002b7f9:	lea    rdx,[rbp-0x20]
   14002b7fd:	mov    rax,QWORD PTR [rcx+0x8]
   14002b801:	lea    rdi,[rcx-0x10]
   14002b805:	mov    QWORD PTR [rbp-0x18],rax
   14002b809:	mov    QWORD PTR [rax],rdx
   14002b80c:	test   rdi,rdi
   14002b80f:	je     0x14002b85f
   14002b811:	mov    rax,QWORD PTR [rdi]
   14002b814:	mov    rbx,QWORD PTR [rax+0x8]
   14002b818:	mov    rcx,rbx
   14002b81b:	call   QWORD PTR [rip+0x6e87]        # 0x1400326a8
   14002b821:	mov    rcx,rdi
   14002b824:	call   rbx
   14002b826:	mov    eax,DWORD PTR [rdi+0x8]
   14002b829:	cmp    eax,0x1
   14002b82c:	jne    0x14002b837
   14002b82e:	mov    DWORD PTR [rdi+0x8],0x0
   14002b835:	jmp    0x14002b844
   14002b837:	or     eax,0xffffffff
   14002b83a:	lock xadd DWORD PTR [rdi+0x8],eax
   14002b83f:	sub    eax,0x1
   14002b842:	jg     0x14002b7eb
   14002b844:	mov    rax,QWORD PTR [rdi]
   14002b847:	mov    rbx,QWORD PTR [rax]
   14002b84a:	mov    rcx,rbx
   14002b84d:	call   QWORD PTR [rip+0x6e55]        # 0x1400326a8
   14002b853:	mov    edx,0x1
   14002b858:	mov    rcx,rdi
   14002b85b:	call   rbx
   14002b85d:	jmp    0x14002b7eb
   14002b85f:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b864:	mov    rdi,QWORD PTR [rsp+0x58]
   14002b869:	add    rsp,0x40
   14002b86d:	pop    rbp
   14002b86e:	ret    
   14002b86f:	int3   
   14002b870:	int3   
   14002b871:	int3   
   14002b872:	int3   
   14002b873:	int3   
   14002b874:	int3   
   14002b875:	int3   
   14002b876:	int3   
   14002b877:	int3   
   14002b878:	int3   
   14002b879:	int3   
   14002b87a:	int3   
   14002b87b:	int3   
   14002b87c:	int3   
   14002b87d:	int3   
   14002b87e:	int3   
   14002b87f:	int3   
   14002b880:	mov    QWORD PTR [rsp+0x8],rcx
   14002b885:	push   rdi
   14002b886:	sub    rsp,0x30
   14002b88a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b893:	mov    QWORD PTR [rsp+0x48],rbx
   14002b898:	mov    edi,edx
   14002b89a:	mov    rbx,rcx
   14002b89d:	lea    rax,[rip+0x94d4]        # 0x140034d78
   14002b8a4:	mov    QWORD PTR [rcx],rax
   14002b8a7:	cmp    BYTE PTR [rcx+0x48],0x0
   14002b8ab:	jne    0x14002b8bc
   14002b8ad:	lea    rax,[rcx+0x38]
   14002b8b1:	cmp    QWORD PTR [rax],rax
   14002b8b4:	je     0x14002b8bc
   14002b8b6:	call   0x14002b700
   14002b8bb:	nop
   14002b8bc:	lea    rcx,[rbx+0x10]
   14002b8c0:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   14002b8c7:	je     0x14002b8d0
   14002b8c9:	call   QWORD PTR [rip+0x69a9]        # 0x140032278
   14002b8cf:	nop
   14002b8d0:	lea    rax,[rip+0x90e9]        # 0x1400349c0
   14002b8d7:	mov    QWORD PTR [rbx],rax
   14002b8da:	test   dil,0x1
   14002b8de:	je     0x14002b8e9
   14002b8e0:	mov    rcx,rbx
   14002b8e3:	call   QWORD PTR [rip+0x6cdf]        # 0x1400325c8
   14002b8e9:	mov    rax,rbx
   14002b8ec:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b8f1:	add    rsp,0x30
   14002b8f5:	pop    rdi
   14002b8f6:	ret    
   14002b8f7:	int3   
   14002b8f8:	int3   
   14002b8f9:	int3   
   14002b8fa:	int3   
   14002b8fb:	int3   
   14002b8fc:	int3   
   14002b8fd:	int3   
   14002b8fe:	int3   
   14002b8ff:	int3   
   14002b900:	mov    QWORD PTR [rsp+0x8],rbx
   14002b905:	push   rdi
   14002b906:	sub    rsp,0x20
   14002b90a:	mov    eax,DWORD PTR [rcx+0x8]
   14002b90d:	mov    rdi,rcx
   14002b910:	cmp    eax,0x1
   14002b913:	jne    0x14002b91e
   14002b915:	mov    DWORD PTR [rcx+0x8],0x0
   14002b91c:	jmp    0x14002b92b
   14002b91e:	or     eax,0xffffffff
   14002b921:	lock xadd DWORD PTR [rcx+0x8],eax
   14002b926:	sub    eax,0x1
   14002b929:	jg     0x14002b94c
   14002b92b:	test   rcx,rcx
   14002b92e:	je     0x14002b94a
   14002b930:	mov    rax,QWORD PTR [rcx]
   14002b933:	mov    rbx,QWORD PTR [rax+0x10]
   14002b937:	mov    rcx,rbx
   14002b93a:	call   QWORD PTR [rip+0x6d68]        # 0x1400326a8
   14002b940:	mov    edx,0x1
   14002b945:	mov    rcx,rdi
   14002b948:	call   rbx
   14002b94a:	xor    eax,eax
   14002b94c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b951:	add    rsp,0x20
   14002b955:	pop    rdi
   14002b956:	ret    
   14002b957:	int3   
   14002b958:	int3   
   14002b959:	int3   
   14002b95a:	int3   
   14002b95b:	int3   
   14002b95c:	int3   
   14002b95d:	int3   
   14002b95e:	int3   
   14002b95f:	int3   
   14002b960:	rex push rbx
   14002b962:	sub    rsp,0x30
   14002b966:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b96f:	mov    rbx,rcx
   14002b972:	mov    ecx,0x50
   14002b977:	call   QWORD PTR [rip+0x6c53]        # 0x1400325d0
   14002b97d:	mov    rdx,rax
   14002b980:	test   rax,rax
   14002b983:	je     0x14002b9ab
   14002b985:	and    DWORD PTR [rax+0x8],0x0
   14002b989:	lea    rax,[rip+0x93e8]        # 0x140034d78
   14002b990:	mov    QWORD PTR [rdx],rax
   14002b993:	mov    DWORD PTR [rdx+0x1c],0xf12192e
   14002b99a:	lea    rcx,[rdx+0x38]
   14002b99e:	mov    QWORD PTR [rcx+0x8],rcx
   14002b9a2:	mov    QWORD PTR [rcx],rcx
   14002b9a5:	mov    BYTE PTR [rdx+0x48],0x0
   14002b9a9:	jmp    0x14002b9ad
   14002b9ab:	xor    edx,edx
   14002b9ad:	test   rdx,rdx
   14002b9b0:	je     0x14002b9cb
   14002b9b2:	mov    eax,DWORD PTR [rdx+0x8]
   14002b9b5:	test   eax,eax
   14002b9b7:	jne    0x14002b9c2
   14002b9b9:	mov    DWORD PTR [rdx+0x8],0x1
   14002b9c0:	jmp    0x14002b9c6
   14002b9c2:	lock inc DWORD PTR [rdx+0x8]
   14002b9c6:	mov    QWORD PTR [rbx],rdx
   14002b9c9:	jmp    0x14002b9da
   14002b9cb:	mov    eax,0x8007000e
   14002b9d0:	jmp    0x14002b9dc
   14002b9d2:	mov    eax,DWORD PTR [rsp+0x48]
   14002b9d6:	test   eax,eax
   14002b9d8:	js     0x14002b9dc
   14002b9da:	xor    eax,eax
   14002b9dc:	add    rsp,0x30
   14002b9e0:	pop    rbx
   14002b9e1:	ret    
   14002b9e2:	int3   
   14002b9e3:	int3   
   14002b9e4:	int3   
   14002b9e5:	int3   
   14002b9e6:	int3   
   14002b9e7:	int3   
   14002b9e8:	int3   
   14002b9e9:	int3   
   14002b9ea:	int3   
   14002b9eb:	int3   
   14002b9ec:	mov    rax,rsp
   14002b9ef:	mov    QWORD PTR [rax+0x8],rbx
   14002b9f3:	mov    QWORD PTR [rax+0x10],rbp
   14002b9f7:	mov    QWORD PTR [rax+0x18],rsi
   14002b9fb:	mov    QWORD PTR [rax+0x20],rdi
   14002b9ff:	push   r14
   14002ba01:	sub    rsp,0x20
   14002ba05:	mov    r14,rcx
   14002ba08:	mov    rbp,r8
   14002ba0b:	mov    rcx,rdx
   14002ba0e:	mov    rsi,rdx
   14002ba11:	call   QWORD PTR [rip+0x6bb9]        # 0x1400325d0
   14002ba17:	xor    ebx,ebx
   14002ba19:	mov    rdi,rax
   14002ba1c:	test   rax,rax
   14002ba1f:	jne    0x14002ba28
   14002ba21:	mov    ebx,0x8007000e
   14002ba26:	jmp    0x14002ba3a
   14002ba28:	mov    r8,rsi
   14002ba2b:	mov    rdx,rbp
   14002ba2e:	mov    rcx,rax
   14002ba31:	call   QWORD PTR [rip+0x6a69]        # 0x1400324a0
   14002ba37:	mov    QWORD PTR [r14],rdi
   14002ba3a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ba3f:	mov    eax,ebx
   14002ba41:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ba46:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ba4b:	mov    rdi,QWORD PTR [rsp+0x48]
   14002ba50:	add    rsp,0x20
   14002ba54:	pop    r14
   14002ba56:	ret    
   14002ba57:	int3   
   14002ba58:	int3   
   14002ba59:	int3   
   14002ba5a:	int3   
   14002ba5b:	int3   
   14002ba5c:	int3   
   14002ba5d:	int3   
   14002ba5e:	int3   
   14002ba5f:	int3   
   14002ba60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ba65:	mov    QWORD PTR [rsp+0x10],rbp
   14002ba6a:	push   rsi
   14002ba6b:	push   rdi
   14002ba6c:	push   r14
   14002ba6e:	sub    rsp,0x20
   14002ba72:	or     rbx,0xffffffffffffffff
   14002ba76:	mov    rsi,rdx
   14002ba79:	xor    ebp,ebp
   14002ba7b:	mov    r14,rcx
   14002ba7e:	inc    rbx
   14002ba81:	cmp    WORD PTR [rdx+rbx*2],bp
   14002ba85:	jne    0x14002ba7e
   14002ba87:	inc    rbx
   14002ba8a:	mov    QWORD PTR [rsp+0x50],rbp
   14002ba8f:	mov    rdx,rbx
   14002ba92:	lea    rcx,[rsp+0x50]
   14002ba97:	call   0x1400299b4
   14002ba9c:	mov    edi,eax
   14002ba9e:	test   eax,eax
   14002baa0:	jns    0x14002baa9
   14002baa2:	mov    rcx,QWORD PTR [rsp+0x50]
   14002baa7:	jmp    0x14002bac6
   14002baa9:	lea    r8,[rbx+rbx*1]
   14002baad:	mov    rdx,rsi
   14002bab0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002bab5:	mov    rcx,rbx
   14002bab8:	call   QWORD PTR [rip+0x69e2]        # 0x1400324a0
   14002babe:	mov    rcx,rbp
   14002bac1:	mov    QWORD PTR [r14],rbx
   14002bac4:	mov    edi,ebp
   14002bac6:	test   rcx,rcx
   14002bac9:	je     0x14002bad1
   14002bacb:	call   QWORD PTR [rip+0x6af7]        # 0x1400325c8
   14002bad1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bad6:	mov    eax,edi
   14002bad8:	mov    rbp,QWORD PTR [rsp+0x48]
   14002badd:	add    rsp,0x20
   14002bae1:	pop    r14
   14002bae3:	pop    rdi
   14002bae4:	pop    rsi
   14002bae5:	ret    
   14002bae6:	int3   
   14002bae7:	int3   
   14002bae8:	int3   
   14002bae9:	int3   
   14002baea:	int3   
   14002baeb:	int3   
   14002baec:	mov    QWORD PTR [rsp+0x8],rbx
   14002baf1:	mov    QWORD PTR [rsp+0x18],r8
   14002baf6:	push   rbp
   14002baf7:	push   rdi
   14002baf8:	mov    rbp,rsp
   14002bafb:	xor    r9d,r9d
   14002bafe:	mov    QWORD PTR [rbp+0x20],r9
   14002bb02:	mov    rdi,rdx
   14002bb05:	mov    QWORD PTR [rbp+0x28],r9
   14002bb09:	mov    r8,rcx
   14002bb0c:	mov    QWORD PTR [rdx],r9
   14002bb0f:	mov    r11d,r9d
   14002bb12:	cmp    WORD PTR [rcx],0x2f
   14002bb16:	mov    bl,r9b
   14002bb19:	mov    r10d,r9d
   14002bb1c:	je     0x14002bb28
   14002bb1e:	cmp    WORD PTR [rcx],0x5c
   14002bb22:	jne    0x14002bc0f
   14002bb28:	cmp    WORD PTR [rcx+0x2],0x2f
   14002bb2d:	je     0x14002bb3a
   14002bb2f:	cmp    WORD PTR [rcx+0x2],0x5c
   14002bb34:	jne    0x14002bc0f
   14002bb3a:	movzx  eax,WORD PTR [rcx+0x4]
   14002bb3e:	cmp    ax,0x2e
   14002bb42:	jne    0x14002bb5d
   14002bb44:	cmp    WORD PTR [rcx+0x6],0x2f
   14002bb49:	je     0x14002bb52
   14002bb4b:	cmp    WORD PTR [rcx+0x6],0x5c
   14002bb50:	jne    0x14002bb5d
   14002bb52:	mov    r10d,0x4
   14002bb58:	jmp    0x14002bc0f
   14002bb5d:	cmp    ax,0x3f
   14002bb61:	jne    0x14002bbfb
   14002bb67:	cmp    WORD PTR [rcx+0x6],0x2f
   14002bb6c:	je     0x14002bb79
   14002bb6e:	cmp    WORD PTR [rcx+0x6],0x5c
   14002bb73:	jne    0x14002bbfb
   14002bb79:	movzx  ecx,WORD PTR [rcx+0x8]
   14002bb7d:	mov    edx,0xffdf
   14002bb82:	mov    r10d,0x4
   14002bb88:	lea    eax,[rcx-0x55]
   14002bb8b:	test   dx,ax
   14002bb8e:	jne    0x14002bbce
   14002bb90:	movzx  eax,WORD PTR [r8+0xa]
   14002bb95:	sub    ax,0x4e
   14002bb99:	test   dx,ax
   14002bb9c:	jne    0x14002bbce
   14002bb9e:	movzx  eax,WORD PTR [r8+0xc]
   14002bba3:	sub    ax,0x43
   14002bba7:	test   dx,ax
   14002bbaa:	jne    0x14002bbce
   14002bbac:	cmp    WORD PTR [r8+0xe],0x2f
   14002bbb2:	je     0x14002bbc6
   14002bbb4:	cmp    WORD PTR [r8+0xe],0x5c
   14002bbba:	je     0x14002bbc6
   14002bbbc:	mov    eax,0x80070002
   14002bbc1:	jmp    0x14002bd1a
   14002bbc6:	mov    r10d,0x8
   14002bbcc:	jmp    0x14002bc0d
   14002bbce:	lea    eax,[rcx-0x61]
   14002bbd1:	cmp    ax,0x19
   14002bbd5:	jbe    0x14002bbe1
   14002bbd7:	sub    cx,0x41
   14002bbdb:	cmp    cx,0x19
   14002bbdf:	ja     0x14002bbbc
   14002bbe1:	cmp    WORD PTR [r8+0xa],0x3a
   14002bbe7:	jne    0x14002bbbc
   14002bbe9:	cmp    WORD PTR [r8+0xc],0x2f
   14002bbef:	je     0x14002bc0f
   14002bbf1:	cmp    WORD PTR [r8+0xc],0x5c
   14002bbf7:	je     0x14002bc0f
   14002bbf9:	jmp    0x14002bbbc
   14002bbfb:	cmp    ax,0x2f
   14002bbff:	je     0x14002bc0f
   14002bc01:	cmp    ax,0x5c
   14002bc05:	je     0x14002bc0f
   14002bc07:	mov    r10d,0x2
   14002bc0d:	mov    bl,0x1
   14002bc0f:	mov    rcx,r10
   14002bc12:	lea    rax,[r10+r10*1]
   14002bc16:	mov    QWORD PTR [rbp+0x30],rcx
   14002bc1a:	mov    rdx,r10
   14002bc1d:	mov    QWORD PTR [rbp+0x28],rdx
   14002bc21:	cmp    WORD PTR [rax+r8*1],r9w
   14002bc26:	je     0x14002bcb3
   14002bc2c:	cmp    WORD PTR [rax+r8*1],0x2f
   14002bc32:	je     0x14002bc69
   14002bc34:	cmp    WORD PTR [rax+r8*1],0x5c
   14002bc3a:	je     0x14002bc69
   14002bc3c:	cmp    WORD PTR [rax+r8*1],0x3a
   14002bc42:	jne    0x14002bc91
   14002bc44:	mov    rax,rdx
   14002bc47:	sub    rax,r10
   14002bc4a:	cmp    rax,0x1
   14002bc4e:	jne    0x14002bc9a
   14002bc50:	inc    rdx
   14002bc53:	mov    QWORD PTR [rbp+0x28],rdx
   14002bc57:	cmp    WORD PTR [r8+rdx*2],0x2f
   14002bc5d:	je     0x14002bc50
   14002bc5f:	cmp    WORD PTR [r8+rdx*2],0x5c
   14002bc65:	je     0x14002bc50
   14002bc67:	jmp    0x14002bc80
   14002bc69:	inc    rdx
   14002bc6c:	mov    QWORD PTR [rbp+0x28],rdx
   14002bc70:	cmp    WORD PTR [r8+rdx*2],0x2f
   14002bc76:	je     0x14002bc69
   14002bc78:	cmp    WORD PTR [r8+rdx*2],0x5c
   14002bc7e:	je     0x14002bc69
   14002bc80:	inc    r11
   14002bc83:	mov    QWORD PTR [rbp+0x30],rdx
   14002bc87:	mov    rcx,rdx
   14002bc8a:	mov    QWORD PTR [rbp+0x20],r11
   14002bc8e:	dec    rdx
   14002bc91:	inc    rdx
   14002bc94:	lea    rax,[rdx+rdx*1]
   14002bc98:	jmp    0x14002bc1d
   14002bc9a:	cmp    WORD PTR [r8+rdx*2+0x2],0x2f
   14002bca1:	jne    0x14002bcb3
   14002bca3:	cmp    WORD PTR [r8+rdx*2+0x4],0x2f
   14002bcaa:	jne    0x14002bcb3
   14002bcac:	mov    eax,0x80004001
   14002bcb1:	jmp    0x14002bd1a
   14002bcb3:	cmp    rdx,0x104
   14002bcba:	jbe    0x14002bcc8
   14002bcbc:	test   r10,r10
   14002bcbf:	jne    0x14002bcc8
   14002bcc1:	mov    eax,0x800700a1
   14002bcc6:	jmp    0x14002bd1a
   14002bcc8:	mov    rax,rdx
   14002bccb:	sub    rax,rcx
   14002bcce:	test   bl,bl
   14002bcd0:	je     0x14002bcdc
   14002bcd2:	cmp    r11,0x2
   14002bcd6:	jb     0x14002bbbc
   14002bcdc:	cmp    rax,0x2
   14002bce0:	ja     0x14002bd07
   14002bce2:	sub    rax,0x1
   14002bce6:	je     0x14002bcfb
   14002bce8:	cmp    rax,0x1
   14002bcec:	jne    0x14002bbbc
   14002bcf2:	cmp    WORD PTR [r8+rcx*2+0x2],0x2e
   14002bcf9:	jne    0x14002bd07
   14002bcfb:	cmp    WORD PTR [r8+rcx*2],0x2e
   14002bd01:	je     0x14002bbbc
   14002bd07:	lea    rcx,[r8+rcx*2]
   14002bd0b:	mov    QWORD PTR [rdi],rcx
   14002bd0e:	cmp    r9w,WORD PTR [r8+rdx*2]
   14002bd13:	setne  r9b
   14002bd17:	mov    eax,r9d
   14002bd1a:	mov    rbx,QWORD PTR [rsp+0x18]
   14002bd1f:	pop    rdi
   14002bd20:	pop    rbp
   14002bd21:	ret    
   14002bd22:	int3   
   14002bd23:	int3   
   14002bd24:	int3   
   14002bd25:	int3   
   14002bd26:	int3   
   14002bd27:	int3   
   14002bd28:	mov    QWORD PTR [rsp+0x10],rdx
   14002bd2d:	sub    rsp,0x28
   14002bd31:	lea    rax,[rip+0x116f0]        # 0x14003d428
   14002bd38:	add    rcx,0x10
   14002bd3c:	lea    rdx,[rsp+0x38]
   14002bd41:	mov    QWORD PTR [rsp+0x38],rax
   14002bd46:	call   0x14002c8b4
   14002bd4b:	xor    ecx,ecx
   14002bd4d:	test   rax,rax
   14002bd50:	jne    0x14002bd56
   14002bd52:	mov    eax,ecx
   14002bd54:	jmp    0x14002bd64
   14002bd56:	add    rax,0x30
   14002bd5a:	cmp    QWORD PTR [rax+0x18],0x8
   14002bd5f:	jb     0x14002bd64
   14002bd61:	mov    rax,QWORD PTR [rax]
   14002bd64:	test   rax,rax
   14002bd67:	setne  al
   14002bd6a:	add    rsp,0x28
   14002bd6e:	ret    
   14002bd6f:	int3   
   14002bd70:	int3   
   14002bd71:	int3   
   14002bd72:	int3   
   14002bd73:	int3   
   14002bd74:	int3   
   14002bd75:	int3   
   14002bd76:	int3   
   14002bd77:	int3   
   14002bd78:	mov    QWORD PTR [rsp+0x8],rcx
   14002bd7d:	push   rbx
   14002bd7e:	push   rsi
   14002bd7f:	push   rdi
   14002bd80:	sub    rsp,0x40
   14002bd84:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002bd8d:	mov    rsi,rcx
   14002bd90:	xor    ebx,ebx
   14002bd92:	mov    DWORD PTR [rcx+0x8],ebx
   14002bd95:	lea    rax,[rip+0x906c]        # 0x140034e08
   14002bd9c:	mov    QWORD PTR [rcx],rax
   14002bd9f:	lea    rdi,[rcx+0x10]
   14002bda3:	mov    QWORD PTR [rsp+0x70],rdi
   14002bda8:	mov    QWORD PTR [rdi],rbx
   14002bdab:	mov    QWORD PTR [rdi+0x8],rbx
   14002bdaf:	xor    r8d,r8d
   14002bdb2:	xor    edx,edx
   14002bdb4:	call   0x140012294
   14002bdb9:	mov    QWORD PTR [rdi],rax
   14002bdbc:	lea    r10,[rdi+0x10]
   14002bdc0:	mov    QWORD PTR [r10],rbx
   14002bdc3:	mov    QWORD PTR [r10+0x8],rbx
   14002bdc7:	mov    QWORD PTR [r10+0x10],rbx
   14002bdcb:	mov    DWORD PTR [rdi+0x38],0x3f800000
   14002bdd2:	mov    rax,QWORD PTR [rdi]
   14002bdd5:	mov    QWORD PTR [rsp+0x68],rax
   14002bdda:	mov    rdx,QWORD PTR [r10+0x8]
   14002bdde:	mov    rcx,QWORD PTR [r10]
   14002bde1:	cmp    rcx,rcx
   14002bde4:	jne    0x14002bdeb
   14002bde6:	cmp    rdx,rdx
   14002bde9:	je     0x14002be20
   14002bdeb:	cmp    rcx,rdx
   14002bdee:	je     0x14002be24
   14002bdf0:	mov    r8,rdx
   14002bdf3:	sub    r8,rdx
   14002bdf6:	add    r8,0x7
   14002bdfa:	shr    r8,0x3
   14002bdfe:	cmp    rdx,rdx
   14002be01:	cmova  r8,rbx
   14002be05:	test   r8,r8
   14002be08:	je     0x14002be20
   14002be0a:	sub    rdx,rcx
   14002be0d:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002be11:	mov    QWORD PTR [rcx],rax
   14002be14:	add    rcx,0x8
   14002be18:	inc    rbx
   14002be1b:	cmp    rbx,r8
   14002be1e:	jne    0x14002be0d
   14002be20:	mov    QWORD PTR [r10+0x8],rcx
   14002be24:	lea    rax,[rsp+0x68]
   14002be29:	mov    QWORD PTR [rsp+0x20],rax
   14002be2e:	mov    r9d,0x10
   14002be34:	mov    r8,QWORD PTR [r10]
   14002be37:	lea    rdx,[rsp+0x78]
   14002be3c:	mov    rcx,r10
   14002be3f:	call   0x14000dfb4
   14002be44:	mov    QWORD PTR [rdi+0x28],0x7
   14002be4c:	mov    QWORD PTR [rdi+0x30],0x8
   14002be54:	mov    rax,rsi
   14002be57:	add    rsp,0x40
   14002be5b:	pop    rdi
   14002be5c:	pop    rsi
   14002be5d:	pop    rbx
   14002be5e:	ret    
   14002be5f:	int3   
   14002be60:	int3   
   14002be61:	int3   
   14002be62:	int3   
   14002be63:	int3   
   14002be64:	int3   
   14002be65:	int3   
   14002be66:	int3   
   14002be67:	int3   
   14002be68:	int3   
   14002be69:	int3   
   14002be6a:	int3   
   14002be6b:	int3   
   14002be6c:	int3   
   14002be6d:	int3   
   14002be6e:	int3   
   14002be6f:	int3   
   14002be70:	mov    QWORD PTR [rsp+0x10],rdx
   14002be75:	sub    rsp,0x28
   14002be79:	add    rcx,0x10
   14002be7d:	lea    rdx,[rsp+0x38]
   14002be82:	call   0x14002c8b4
   14002be87:	test   rax,rax
   14002be8a:	je     0x14002be9a
   14002be8c:	add    rax,0x30
   14002be90:	cmp    QWORD PTR [rax+0x18],0x8
   14002be95:	jb     0x14002be9a
   14002be97:	mov    rax,QWORD PTR [rax]
   14002be9a:	add    rsp,0x28
   14002be9e:	ret    
   14002be9f:	int3   
   14002bea0:	int3   
   14002bea1:	int3   
   14002bea2:	int3   
   14002bea3:	int3   
   14002bea4:	int3   
   14002bea5:	int3   
   14002bea6:	int3   
   14002bea7:	int3   
   14002bea8:	mov    rax,rsp
   14002beab:	mov    QWORD PTR [rax+0x10],rdx
   14002beaf:	push   rdi
   14002beb0:	push   r14
   14002beb2:	push   r15
   14002beb4:	sub    rsp,0x30
   14002beb8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002bec0:	mov    QWORD PTR [rax+0x18],rbx
   14002bec4:	mov    QWORD PTR [rax+0x20],rsi
   14002bec8:	mov    rsi,r8
   14002becb:	mov    r14,rdx
   14002bece:	lea    r15,[rcx+0x10]
   14002bed2:	lea    rdx,[rax+0x10]
   14002bed6:	mov    rcx,r15
   14002bed9:	call   0x14002c8b4
   14002bede:	xor    ebx,ebx
   14002bee0:	test   rax,rax
   14002bee3:	je     0x14002bf0c
   14002bee5:	lea    rcx,[rax+0x30]
   14002bee9:	cmp    QWORD PTR [rcx+0x18],0x8
   14002beee:	jb     0x14002bef3
   14002bef0:	mov    rcx,QWORD PTR [rcx]
   14002bef3:	mov    rdx,rsi
   14002bef6:	call   QWORD PTR [rip+0x66fc]        # 0x1400325f8
   14002befc:	sub    ebx,eax
   14002befe:	neg    ebx
   14002bf00:	sbb    eax,eax
   14002bf02:	and    eax,0x800700b7
   14002bf07:	jmp    0x14002bfaa
   14002bf0c:	mov    ecx,0x50
   14002bf11:	call   0x140023f10
   14002bf16:	mov    rdi,rax
   14002bf19:	mov    QWORD PTR [rsp+0x50],rax
   14002bf1e:	mov    DWORD PTR [rax+0x8],ebx
   14002bf21:	lea    rax,[rip+0x8e88]        # 0x140034db0
   14002bf28:	mov    QWORD PTR [rdi],rax
   14002bf2b:	lea    rcx,[rdi+0x10]
   14002bf2f:	mov    rdx,r14
   14002bf32:	call   0x14001781c
   14002bf37:	nop
   14002bf38:	lea    rcx,[rdi+0x30]
   14002bf3c:	mov    rdx,rsi
   14002bf3f:	call   0x14001781c
   14002bf44:	nop
   14002bf45:	mov    eax,DWORD PTR [rdi+0x8]
   14002bf48:	test   eax,eax
   14002bf4a:	jne    0x14002bf55
   14002bf4c:	mov    DWORD PTR [rdi+0x8],0x1
   14002bf53:	jmp    0x14002bf59
   14002bf55:	lock inc DWORD PTR [rdi+0x8]
   14002bf59:	mov    QWORD PTR [rsp+0x50],rdi
   14002bf5e:	mov    rdx,rdi
   14002bf61:	mov    rcx,r15
   14002bf64:	call   0x14002c78c
   14002bf69:	nop
   14002bf6a:	mov    eax,DWORD PTR [rdi+0x8]
   14002bf6d:	cmp    eax,0x1
   14002bf70:	jne    0x14002bf77
   14002bf72:	mov    DWORD PTR [rdi+0x8],ebx
   14002bf75:	jmp    0x14002bf84
   14002bf77:	or     eax,0xffffffff
   14002bf7a:	lock xadd DWORD PTR [rdi+0x8],eax
   14002bf7f:	sub    eax,0x1
   14002bf82:	jg     0x14002bf9e
   14002bf84:	mov    rax,QWORD PTR [rdi]
   14002bf87:	mov    rbx,QWORD PTR [rax]
   14002bf8a:	mov    rcx,rbx
   14002bf8d:	call   QWORD PTR [rip+0x6715]        # 0x1400326a8
   14002bf93:	mov    edx,0x1
   14002bf98:	mov    rcx,rdi
   14002bf9b:	call   rbx
   14002bf9d:	nop
   14002bf9e:	jmp    0x14002bfa8
   14002bfa0:	mov    eax,DWORD PTR [rsp+0x50]
   14002bfa4:	test   eax,eax
   14002bfa6:	js     0x14002bfaa
   14002bfa8:	xor    eax,eax
   14002bfaa:	mov    rbx,QWORD PTR [rsp+0x60]
   14002bfaf:	mov    rsi,QWORD PTR [rsp+0x68]
   14002bfb4:	add    rsp,0x30
   14002bfb8:	pop    r15
   14002bfba:	pop    r14
   14002bfbc:	pop    rdi
   14002bfbd:	ret    
   14002bfbe:	int3   
   14002bfbf:	int3   
   14002bfc0:	int3   
   14002bfc1:	int3   
   14002bfc2:	int3   
   14002bfc3:	int3   
   14002bfc4:	int3   
   14002bfc5:	int3   
   14002bfc6:	int3   
   14002bfc7:	int3   
   14002bfc8:	int3   
   14002bfc9:	int3   
   14002bfca:	int3   
   14002bfcb:	int3   
   14002bfcc:	int3   
   14002bfcd:	int3   
   14002bfce:	int3   
   14002bfcf:	int3   
   14002bfd0:	mov    rax,QWORD PTR [rcx+0x18]
   14002bfd4:	ret    
   14002bfd5:	int3   
   14002bfd6:	int3   
   14002bfd7:	int3   
   14002bfd8:	int3   
   14002bfd9:	int3   
   14002bfda:	int3   
   14002bfdb:	int3   
   14002bfdc:	int3   
   14002bfdd:	int3   
   14002bfde:	int3   
   14002bfdf:	int3   
   14002bfe0:	mov    QWORD PTR [rsp+0x8],rbx
   14002bfe5:	mov    QWORD PTR [rsp+0x10],rsi
   14002bfea:	push   rdi
   14002bfeb:	sub    rsp,0x20
   14002bfef:	mov    rbx,rcx
   14002bff2:	mov    esi,edx
   14002bff4:	mov    rcx,QWORD PTR [rcx+0x20]
   14002bff8:	test   rcx,rcx
   14002bffb:	je     0x14002c012
   14002bffd:	call   QWORD PTR [rip+0x65c5]        # 0x1400325c8
   14002c003:	and    QWORD PTR [rbx+0x20],0x0
   14002c008:	and    QWORD PTR [rbx+0x28],0x0
   14002c00d:	and    QWORD PTR [rbx+0x30],0x0
   14002c012:	lea    rcx,[rbx+0x10]
   14002c016:	call   0x14002caa0
   14002c01b:	lea    rax,[rip+0x899e]        # 0x1400349c0
   14002c022:	mov    QWORD PTR [rbx],rax
   14002c025:	test   sil,0x1
   14002c029:	je     0x14002c034
   14002c02b:	mov    rcx,rbx
   14002c02e:	call   QWORD PTR [rip+0x6594]        # 0x1400325c8
   14002c034:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c039:	mov    rax,rbx
   14002c03c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c041:	add    rsp,0x20
   14002c045:	pop    rdi
   14002c046:	ret    
   14002c047:	int3   
   14002c048:	int3   
   14002c049:	int3   
   14002c04a:	int3   
   14002c04b:	int3   
   14002c04c:	int3   
   14002c04d:	int3   
   14002c04e:	int3   
   14002c04f:	int3   
   14002c050:	mov    QWORD PTR [rsp+0x8],rbx
   14002c055:	mov    QWORD PTR [rsp+0x10],rsi
   14002c05a:	push   rdi
   14002c05b:	sub    rsp,0x20
   14002c05f:	cmp    QWORD PTR [rcx+0x48],0x8
   14002c064:	mov    edi,edx
   14002c066:	mov    rbx,rcx
   14002c069:	jb     0x14002c075
   14002c06b:	mov    rcx,QWORD PTR [rcx+0x30]
   14002c06f:	call   QWORD PTR [rip+0x6553]        # 0x1400325c8
   14002c075:	xor    esi,esi
   14002c077:	mov    QWORD PTR [rbx+0x48],0x7
   14002c07f:	mov    QWORD PTR [rbx+0x40],rsi
   14002c083:	mov    WORD PTR [rbx+0x30],si
   14002c087:	cmp    QWORD PTR [rbx+0x28],0x8
   14002c08c:	jb     0x14002c098
   14002c08e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002c092:	call   QWORD PTR [rip+0x6530]        # 0x1400325c8
   14002c098:	mov    QWORD PTR [rbx+0x28],0x7
   14002c0a0:	lea    rax,[rip+0x8801]        # 0x1400348a8
   14002c0a7:	mov    QWORD PTR [rbx+0x20],rsi
   14002c0ab:	mov    WORD PTR [rbx+0x10],si
   14002c0af:	mov    QWORD PTR [rbx],rax
   14002c0b2:	test   dil,0x1
   14002c0b6:	je     0x14002c0c1
   14002c0b8:	mov    rcx,rbx
   14002c0bb:	call   QWORD PTR [rip+0x6507]        # 0x1400325c8
   14002c0c1:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c0c6:	mov    rax,rbx
   14002c0c9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c0ce:	add    rsp,0x20
   14002c0d2:	pop    rdi
   14002c0d3:	ret    
   14002c0d4:	int3   
   14002c0d5:	int3   
   14002c0d6:	int3   
   14002c0d7:	int3   
   14002c0d8:	int3   
   14002c0d9:	int3   
   14002c0da:	int3   
   14002c0db:	int3   
   14002c0dc:	rex push rbx
   14002c0de:	sub    rsp,0x30
   14002c0e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c0eb:	mov    rbx,rcx
   14002c0ee:	mov    ecx,0x50
   14002c0f3:	call   0x140023f10
   14002c0f8:	mov    QWORD PTR [rsp+0x48],rax
   14002c0fd:	mov    rcx,rax
   14002c100:	call   0x14002bd78
   14002c105:	nop
   14002c106:	test   rax,rax
   14002c109:	je     0x14002c11f
   14002c10b:	mov    ecx,DWORD PTR [rax+0x8]
   14002c10e:	test   ecx,ecx
   14002c110:	jne    0x14002c11b
   14002c112:	mov    DWORD PTR [rax+0x8],0x1
   14002c119:	jmp    0x14002c11f
   14002c11b:	lock inc DWORD PTR [rax+0x8]
   14002c11f:	mov    QWORD PTR [rbx],rax
   14002c122:	jmp    0x14002c12c
   14002c124:	mov    eax,DWORD PTR [rsp+0x48]
   14002c128:	test   eax,eax
   14002c12a:	js     0x14002c12e
   14002c12c:	xor    eax,eax
   14002c12e:	add    rsp,0x30
   14002c132:	pop    rbx
   14002c133:	ret    
   14002c134:	int3   
   14002c135:	int3   
   14002c136:	int3   
   14002c137:	int3   
   14002c138:	int3   
   14002c139:	int3   
   14002c13a:	int3   
   14002c13b:	int3   
   14002c13c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c141:	mov    QWORD PTR [rsp+0x10],rsi
   14002c146:	push   rdi
   14002c147:	sub    rsp,0x20
   14002c14b:	xor    esi,esi
   14002c14d:	mov    dil,dl
   14002c150:	mov    rbx,rcx
   14002c153:	cmp    WORD PTR [rcx],si
   14002c156:	je     0x14002c174
   14002c158:	movzx  ecx,WORD PTR [rbx]
   14002c15b:	call   QWORD PTR [rip+0x64cf]        # 0x140032630
   14002c161:	test   eax,eax
   14002c163:	setne  cl
   14002c166:	cmp    dil,cl
   14002c169:	jne    0x14002c174
   14002c16b:	add    rbx,0x2
   14002c16f:	cmp    WORD PTR [rbx],si
   14002c172:	jne    0x14002c158
   14002c174:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c179:	mov    rax,rbx
   14002c17c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c181:	add    rsp,0x20
   14002c185:	pop    rdi
   14002c186:	ret    
   14002c187:	int3   
   14002c188:	int3   
   14002c189:	int3   
   14002c18a:	int3   
   14002c18b:	int3   
   14002c18c:	int3   
   14002c18d:	int3   
   14002c18e:	int3   
   14002c18f:	int3   
   14002c190:	mov    QWORD PTR [rsp+0x8],rbx
   14002c195:	mov    QWORD PTR [rsp+0x10],rbp
   14002c19a:	mov    QWORD PTR [rsp+0x18],rsi
   14002c19f:	push   rdi
   14002c1a0:	push   r14
   14002c1a2:	push   r15
   14002c1a4:	sub    rsp,0x20
   14002c1a8:	or     rax,0xffffffffffffffff
   14002c1ac:	mov    r14,r8
   14002c1af:	xor    ebp,ebp
   14002c1b1:	mov    r15,rdx
   14002c1b4:	mov    rdi,rcx
   14002c1b7:	inc    rax
   14002c1ba:	cmp    WORD PTR [rcx+rax*2],bp
   14002c1be:	jne    0x14002c1b7
   14002c1c0:	mov    dl,0x1
   14002c1c2:	lea    rbx,[rcx+rax*2]
   14002c1c6:	call   0x14002c13c
   14002c1cb:	mov    rsi,rax
   14002c1ce:	cmp    WORD PTR [rax],bp
   14002c1d1:	jne    0x14002c1da
   14002c1d3:	mov    eax,0x80070667
   14002c1d8:	jmp    0x14002c228
   14002c1da:	xor    edx,edx
   14002c1dc:	mov    rcx,rax
   14002c1df:	call   0x14002c13c
   14002c1e4:	cmp    WORD PTR [rax],bp
   14002c1e7:	jne    0x14002c1f1
   14002c1e9:	mov    QWORD PTR [r15],rsi
   14002c1ec:	mov    QWORD PTR [r14],rax
   14002c1ef:	jmp    0x14002c226
   14002c1f1:	lea    rcx,[rax+0x2]
   14002c1f5:	mov    WORD PTR [rax],bp
   14002c1f8:	mov    dl,0x1
   14002c1fa:	call   0x14002c13c
   14002c1ff:	mov    QWORD PTR [r15],rsi
   14002c202:	mov    QWORD PTR [r14],rax
   14002c205:	cmp    rbx,rdi
   14002c208:	je     0x14002c223
   14002c20a:	lea    rsi,[rbx-0x2]
   14002c20e:	movzx  ecx,WORD PTR [rsi]
   14002c211:	call   QWORD PTR [rip+0x6419]        # 0x140032630
   14002c217:	test   eax,eax
   14002c219:	je     0x14002c223
   14002c21b:	mov    rbx,rsi
   14002c21e:	cmp    rsi,rdi
   14002c221:	jne    0x14002c20a
   14002c223:	mov    WORD PTR [rbx],bp
   14002c226:	xor    eax,eax
   14002c228:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c22d:	mov    rbp,QWORD PTR [rsp+0x48]
   14002c232:	mov    rsi,QWORD PTR [rsp+0x50]
   14002c237:	add    rsp,0x20
   14002c23b:	pop    r15
   14002c23d:	pop    r14
   14002c23f:	pop    rdi
   14002c240:	ret    
   14002c241:	int3   
   14002c242:	int3   
   14002c243:	int3   
   14002c244:	int3   
   14002c245:	int3   
   14002c246:	int3   
   14002c247:	int3   
   14002c248:	mov    rax,rsp
   14002c24b:	mov    QWORD PTR [rax+0x18],r8
   14002c24f:	push   rbp
   14002c250:	push   r12
   14002c252:	push   r13
   14002c254:	push   r14
   14002c256:	push   r15
   14002c258:	mov    rbp,rsp
   14002c25b:	sub    rsp,0x50
   14002c25f:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   14002c267:	mov    QWORD PTR [rax+0x8],rbx
   14002c26b:	mov    QWORD PTR [rax+0x10],rdi
   14002c26f:	mov    rbx,rdx
   14002c272:	mov    r15,rcx
   14002c275:	mov    rcx,rdx
   14002c278:	call   0x14002a790
   14002c27d:	xor    r13d,r13d
   14002c280:	test   eax,eax
   14002c282:	js     0x14002c41e
   14002c288:	mov    QWORD PTR [rbp+0x40],r13
   14002c28c:	mov    rdx,rbx
   14002c28f:	lea    rcx,[rbp+0x40]
   14002c293:	call   0x14002a9b4
   14002c298:	mov    r14d,eax
   14002c29b:	test   eax,eax
   14002c29d:	js     0x14002c40b
   14002c2a3:	mov    QWORD PTR [rbp-0x30],r13
   14002c2a7:	mov    ebx,0x800
   14002c2ac:	mov    edx,ebx
   14002c2ae:	lea    rcx,[rbp-0x30]
   14002c2b2:	call   0x1400299b4
   14002c2b7:	mov    r14d,eax
   14002c2ba:	mov    rdi,QWORD PTR [rbp-0x30]
   14002c2be:	test   eax,eax
   14002c2c0:	js     0x14002c3fc
   14002c2c6:	mov    rcx,r15
   14002c2c9:	call   0x14002bd28
   14002c2ce:	test   al,al
   14002c2d0:	sete   r12b
   14002c2d4:	mov    edx,ebx
   14002c2d6:	mov    r8,QWORD PTR [rbp+0x40]
   14002c2da:	mov    rcx,rdi
   14002c2dd:	call   QWORD PTR [rip+0x6345]        # 0x140032628
   14002c2e3:	test   rax,rax
   14002c2e6:	je     0x14002c3e5
   14002c2ec:	mov    rbx,rdi
   14002c2ef:	cmp    WORD PTR [rdi],r13w
   14002c2f3:	je     0x14002c311
   14002c2f5:	movzx  ecx,WORD PTR [rbx]
   14002c2f8:	call   QWORD PTR [rip+0x6332]        # 0x140032630
   14002c2fe:	test   eax,eax
   14002c300:	setne  al
   14002c303:	cmp    al,0x1
   14002c305:	jne    0x14002c311
   14002c307:	add    rbx,0x2
   14002c30b:	cmp    WORD PTR [rbx],r13w
   14002c30f:	jne    0x14002c2f5
   14002c311:	cmp    WORD PTR [rbx],r13w
   14002c315:	je     0x14002c3c5
   14002c31b:	cmp    WORD PTR [rbx],0x23
   14002c31f:	je     0x14002c3c5
   14002c325:	mov    r14,rdi
   14002c328:	mov    QWORD PTR [rbp-0x10],r13
   14002c32c:	mov    rbx,r13
   14002c32f:	mov    QWORD PTR [rbp+0x48],rbx
   14002c333:	test   r12b,r12b
   14002c336:	je     0x14002c365
   14002c338:	mov    edx,0x25
   14002c33d:	mov    rcx,rdi
   14002c340:	call   QWORD PTR [rip+0x62ba]        # 0x140032600
   14002c346:	test   rax,rax
   14002c349:	je     0x14002c365
   14002c34b:	mov    rdx,rdi
   14002c34e:	lea    rcx,[rbp+0x48]
   14002c352:	call   0x14002a8b0
   14002c357:	mov    r14d,eax
   14002c35a:	mov    rbx,QWORD PTR [rbp+0x48]
   14002c35e:	test   eax,eax
   14002c360:	js     0x14002c3d5
   14002c362:	mov    r14,rbx
   14002c365:	mov    QWORD PTR [rbp-0x28],r13
   14002c369:	mov    QWORD PTR [rbp-0x20],r13
   14002c36d:	lea    r8,[rbp-0x20]
   14002c371:	lea    rdx,[rbp-0x28]
   14002c375:	mov    rcx,r14
   14002c378:	call   0x14002c190
   14002c37d:	mov    r14d,eax
   14002c380:	test   eax,eax
   14002c382:	js     0x14002c3d5
   14002c384:	mov    rdx,QWORD PTR [rbp-0x28]
   14002c388:	movzx  eax,WORD PTR [rdx]
   14002c38b:	sub    ax,0x2d
   14002c38f:	mov    ecx,0xfffd
   14002c394:	test   cx,ax
   14002c397:	jne    0x14002c39d
   14002c399:	add    rdx,0x2
   14002c39d:	mov    r8,QWORD PTR [rbp-0x20]
   14002c3a1:	mov    rcx,r15
   14002c3a4:	call   0x14002bea8
   14002c3a9:	mov    r14d,eax
   14002c3ac:	cmp    eax,0x800700b7
   14002c3b1:	je     0x14002c3cf
   14002c3b3:	test   eax,eax
   14002c3b5:	js     0x14002c3d5
   14002c3b7:	test   rbx,rbx
   14002c3ba:	je     0x14002c3c5
   14002c3bc:	mov    rcx,rbx
   14002c3bf:	call   QWORD PTR [rip+0x6203]        # 0x1400325c8
   14002c3c5:	mov    edx,0x800
   14002c3ca:	jmp    0x14002c2d6
   14002c3cf:	mov    r14d,0x80070667
   14002c3d5:	test   rbx,rbx
   14002c3d8:	je     0x14002c3fc
   14002c3da:	mov    rcx,rbx
   14002c3dd:	call   QWORD PTR [rip+0x61e5]        # 0x1400325c8
   14002c3e3:	jmp    0x14002c3fc
   14002c3e5:	mov    rcx,QWORD PTR [rbp+0x40]
   14002c3e9:	call   QWORD PTR [rip+0x6231]        # 0x140032620
   14002c3ef:	test   eax,eax
   14002c3f1:	mov    r14d,0x80004005
   14002c3f7:	je     0x14002c3fc
   14002c3f9:	mov    r14d,r13d
   14002c3fc:	test   rdi,rdi
   14002c3ff:	je     0x14002c40b
   14002c401:	mov    rcx,rdi
   14002c404:	call   QWORD PTR [rip+0x61be]        # 0x1400325c8
   14002c40a:	nop
   14002c40b:	cmp    QWORD PTR [rbp+0x40],r13
   14002c40f:	je     0x14002c41b
   14002c411:	mov    rcx,QWORD PTR [rbp+0x40]
   14002c415:	call   QWORD PTR [rip+0x60b5]        # 0x1400324d0
   14002c41b:	mov    eax,r14d
   14002c41e:	lea    r11,[rsp+0x50]
   14002c423:	mov    rbx,QWORD PTR [r11+0x30]
   14002c427:	mov    rdi,QWORD PTR [r11+0x38]
   14002c42b:	mov    rsp,r11
   14002c42e:	pop    r15
   14002c430:	pop    r14
   14002c432:	pop    r13
   14002c434:	pop    r12
   14002c436:	pop    rbp
   14002c437:	ret    
   14002c438:	int3   
   14002c439:	int3   
   14002c43a:	int3   
   14002c43b:	int3   
   14002c43c:	int3   
   14002c43d:	int3   
   14002c43e:	int3   
   14002c43f:	int3   
   14002c440:	mov    QWORD PTR [rsp+0x10],rbx
   14002c445:	mov    QWORD PTR [rsp+0x18],rsi
   14002c44a:	mov    QWORD PTR [rsp+0x20],r9
   14002c44f:	push   rbp
   14002c450:	push   rdi
   14002c451:	push   r12
   14002c453:	push   r14
   14002c455:	push   r15
   14002c457:	mov    rbp,rsp
   14002c45a:	sub    rsp,0x30
   14002c45e:	and    QWORD PTR [rcx],0x0
   14002c462:	mov    r15,rcx
   14002c465:	and    QWORD PTR [rbp-0x10],0x0
   14002c46a:	lea    rcx,[rbp-0x10]
   14002c46e:	mov    r12,r8
   14002c471:	call   0x14002c0dc
   14002c476:	mov    rbx,QWORD PTR [rbp-0x10]
   14002c47a:	mov    esi,eax
   14002c47c:	test   eax,eax
   14002c47e:	js     0x14002c585
   14002c484:	and    QWORD PTR [rbp+0x48],0x0
   14002c489:	mov    dil,0x1
   14002c48c:	and    QWORD PTR [rbp+0x30],0x0
   14002c491:	test   dil,dil
   14002c494:	je     0x14002c4c0
   14002c496:	mov    rax,QWORD PTR [r12]
   14002c49a:	mov    rdi,QWORD PTR [rax+0x18]
   14002c49e:	mov    rcx,rdi
   14002c4a1:	call   QWORD PTR [rip+0x6201]        # 0x1400326a8
   14002c4a7:	lea    rdx,[rbp+0x48]
   14002c4ab:	mov    rcx,r12
   14002c4ae:	call   rdi
   14002c4b0:	mov    esi,eax
   14002c4b2:	test   eax,eax
   14002c4b4:	js     0x14002c585
   14002c4ba:	mov    rax,QWORD PTR [rbp+0x48]
   14002c4be:	jmp    0x14002c4c8
   14002c4c0:	mov    rax,QWORD PTR [rbp+0x30]
   14002c4c4:	mov    QWORD PTR [rbp+0x48],rax
   14002c4c8:	test   rax,rax
   14002c4cb:	je     0x14002c5db
   14002c4d1:	mov    rax,QWORD PTR [r12]
   14002c4d5:	mov    rdi,QWORD PTR [rax+0x18]
   14002c4d9:	mov    rcx,rdi
   14002c4dc:	call   QWORD PTR [rip+0x61c6]        # 0x1400326a8
   14002c4e2:	lea    rdx,[rbp+0x30]
   14002c4e6:	mov    rcx,r12
   14002c4e9:	call   rdi
   14002c4eb:	mov    esi,eax
   14002c4ed:	test   eax,eax
   14002c4ef:	js     0x14002c585
   14002c4f5:	mov    rdx,QWORD PTR [rbp+0x48]
   14002c4f9:	xor    r14b,r14b
   14002c4fc:	xor    dil,dil
   14002c4ff:	movzx  eax,WORD PTR [rdx]
   14002c502:	cmp    ax,0x40
   14002c506:	jne    0x14002c518
   14002c508:	add    rdx,0x2
   14002c50c:	mov    rcx,rbx
   14002c50f:	call   0x14002c248
   14002c514:	mov    esi,eax
   14002c516:	jmp    0x14002c57d
   14002c518:	cmp    ax,0x2d
   14002c51c:	je     0x14002c59b
   14002c51e:	cmp    ax,0x2f
   14002c522:	jne    0x14002c491
   14002c528:	sub    ax,0x2d
   14002c52c:	mov    r9d,0xfffd
   14002c532:	test   r9w,ax
   14002c536:	jne    0x14002c53c
   14002c538:	add    rdx,0x2
   14002c53c:	mov    rcx,QWORD PTR [rbp+0x30]
   14002c540:	lea    r8,[rip+0x8ff1]        # 0x140035538
   14002c547:	test   rcx,rcx
   14002c54a:	je     0x14002c55f
   14002c54c:	movzx  eax,WORD PTR [rcx]
   14002c54f:	sub    ax,0x2d
   14002c553:	test   r9w,ax
   14002c557:	je     0x14002c55f
   14002c559:	mov    r8,rcx
   14002c55c:	mov    r14b,0x1
   14002c55f:	mov    rcx,rbx
   14002c562:	call   0x14002bea8
   14002c567:	mov    esi,eax
   14002c569:	cmp    eax,0x800700b7
   14002c56e:	je     0x14002c491
   14002c574:	test   eax,eax
   14002c576:	js     0x14002c57d
   14002c578:	mov    dil,r14b
   14002c57b:	xor    esi,esi
   14002c57d:	test   esi,esi
   14002c57f:	jns    0x14002c491
   14002c585:	test   rbx,rbx
   14002c588:	je     0x14002c5e0
   14002c58a:	mov    eax,DWORD PTR [rbx+0x8]
   14002c58d:	cmp    eax,0x1
   14002c590:	jne    0x14002c5ae
   14002c592:	mov    DWORD PTR [rbx+0x8],0x0
   14002c599:	jmp    0x14002c5bb
   14002c59b:	cmp    WORD PTR [rdx+0x2],0x2d
   14002c5a0:	jne    0x14002c528
   14002c5a2:	add    rdx,0x4
   14002c5a6:	mov    r9d,0xfffd
   14002c5ac:	jmp    0x14002c53c
   14002c5ae:	or     eax,0xffffffff
   14002c5b1:	lock xadd DWORD PTR [rbx+0x8],eax
   14002c5b6:	sub    eax,0x1
   14002c5b9:	jg     0x14002c5e0
   14002c5bb:	mov    rbx,QWORD PTR [rbp-0x10]
   14002c5bf:	mov    rax,QWORD PTR [rbx]
   14002c5c2:	mov    rdi,QWORD PTR [rax+0x10]
   14002c5c6:	mov    rcx,rdi
   14002c5c9:	call   QWORD PTR [rip+0x60d9]        # 0x1400326a8
   14002c5cf:	mov    edx,0x1
   14002c5d4:	mov    rcx,rbx
   14002c5d7:	call   rdi
   14002c5d9:	jmp    0x14002c5e0
   14002c5db:	mov    QWORD PTR [r15],rbx
   14002c5de:	xor    esi,esi
   14002c5e0:	mov    rbx,QWORD PTR [rsp+0x68]
   14002c5e5:	mov    eax,esi
   14002c5e7:	mov    rsi,QWORD PTR [rsp+0x70]
   14002c5ec:	add    rsp,0x30
   14002c5f0:	pop    r15
   14002c5f2:	pop    r14
   14002c5f4:	pop    r12
   14002c5f6:	pop    rdi
   14002c5f7:	pop    rbp
   14002c5f8:	ret    
   14002c5f9:	int3   
   14002c5fa:	int3   
   14002c5fb:	int3   
   14002c5fc:	int3   
   14002c5fd:	int3   
   14002c5fe:	int3   
   14002c5ff:	int3   
   14002c600:	mov    rdx,rcx
   14002c603:	mov    rcx,QWORD PTR [rcx+0x10]
   14002c607:	cmp    rcx,QWORD PTR [rdx+0x20]
   14002c60b:	jb     0x14002c610
   14002c60d:	xor    eax,eax
   14002c60f:	ret    
   14002c610:	mov    rax,QWORD PTR [rcx]
   14002c613:	add    rcx,0x8
   14002c617:	mov    QWORD PTR [rdx+0x10],rcx
   14002c61b:	ret    
   14002c61c:	int3   
   14002c61d:	int3   
   14002c61e:	int3   
   14002c61f:	int3   
   14002c620:	int3   
   14002c621:	int3   
   14002c622:	int3   
   14002c623:	int3   
   14002c624:	int3   
   14002c625:	int3   
   14002c626:	int3   
   14002c627:	int3   
   14002c628:	int3   
   14002c629:	int3   
   14002c62a:	int3   
   14002c62b:	int3   
   14002c62c:	int3   
   14002c62d:	int3   
   14002c62e:	int3   
   14002c62f:	int3   
   14002c630:	mov    rax,QWORD PTR [rcx+0x10]
   14002c634:	mov    r8,rcx
   14002c637:	cmp    rax,QWORD PTR [rcx+0x20]
   14002c63b:	jb     0x14002c641
   14002c63d:	xor    ecx,ecx
   14002c63f:	jmp    0x14002c64c
   14002c641:	mov    rcx,QWORD PTR [rax]
   14002c644:	add    rax,0x8
   14002c648:	mov    QWORD PTR [r8+0x10],rax
   14002c64c:	mov    QWORD PTR [rdx],rcx
   14002c64f:	xor    eax,eax
   14002c651:	ret    
   14002c652:	int3   
   14002c653:	int3   
   14002c654:	int3   
   14002c655:	int3   
   14002c656:	int3   
   14002c657:	int3   
   14002c658:	int3   
   14002c659:	int3   
   14002c65a:	int3   
   14002c65b:	int3   
   14002c65c:	int3   
   14002c65d:	int3   
   14002c65e:	int3   
   14002c65f:	int3   
   14002c660:	mov    eax,0x80004001
   14002c665:	ret    
   14002c666:	int3   
   14002c667:	int3   
   14002c668:	int3   
   14002c669:	int3   
   14002c66a:	int3   
   14002c66b:	int3   
   14002c66c:	mov    rax,rsp
   14002c66f:	mov    QWORD PTR [rax+0x8],rbx
   14002c673:	mov    QWORD PTR [rax+0x10],rbp
   14002c677:	mov    QWORD PTR [rax+0x18],rsi
   14002c67b:	mov    QWORD PTR [rax+0x20],rdi
   14002c67f:	push   r14
   14002c681:	sub    rsp,0x30
   14002c685:	mov    r14,rcx
   14002c688:	xor    ebx,ebx
   14002c68a:	and    QWORD PTR [rax+0x28],rbx
   14002c68e:	lea    rcx,[rax+0x28]
   14002c692:	mov    QWORD PTR [rax-0x18],rbx
   14002c696:	mov    rdi,r9
   14002c699:	mov    rbp,r8
   14002c69c:	call   0x14002cde8
   14002c6a1:	mov    esi,eax
   14002c6a3:	test   eax,eax
   14002c6a5:	jns    0x14002c6f1
   14002c6a7:	mov    rax,QWORD PTR [rsp+0x60]
   14002c6ac:	test   rax,rax
   14002c6af:	je     0x14002c713
   14002c6b1:	mov    ecx,DWORD PTR [rax+0x8]
   14002c6b4:	cmp    ecx,0x1
   14002c6b7:	jne    0x14002c6be
   14002c6b9:	mov    DWORD PTR [rax+0x8],ebx
   14002c6bc:	jmp    0x14002c6cb
   14002c6be:	or     ecx,0xffffffff
   14002c6c1:	lock xadd DWORD PTR [rax+0x8],ecx
   14002c6c6:	sub    ecx,0x1
   14002c6c9:	jg     0x14002c6ea
   14002c6cb:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c6d0:	mov    rax,QWORD PTR [rbx]
   14002c6d3:	mov    rdi,QWORD PTR [rax+0x10]
   14002c6d7:	mov    rcx,rdi
   14002c6da:	call   QWORD PTR [rip+0x5fc8]        # 0x1400326a8
   14002c6e0:	mov    edx,0x1
   14002c6e5:	mov    rcx,rbx
   14002c6e8:	call   rdi
   14002c6ea:	mov    rbx,QWORD PTR [rsp+0x20]
   14002c6ef:	jmp    0x14002c713
   14002c6f1:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c6f6:	lea    rax,[rdi+rbp*8]
   14002c6fa:	and    QWORD PTR [rsp+0x60],0x0
   14002c700:	mov    QWORD PTR [rsp+0x20],rbx
   14002c705:	xor    esi,esi
   14002c707:	mov    QWORD PTR [rbx+0x18],rdi
   14002c70b:	mov    QWORD PTR [rbx+0x10],rdi
   14002c70f:	mov    QWORD PTR [rbx+0x20],rax
   14002c713:	test   esi,esi
   14002c715:	js     0x14002c724
   14002c717:	mov    r8,rbx
   14002c71a:	mov    rcx,r14
   14002c71d:	call   0x14002c440
   14002c722:	mov    esi,eax
   14002c724:	test   rbx,rbx
   14002c727:	je     0x14002c766
   14002c729:	mov    ecx,DWORD PTR [rbx+0x8]
   14002c72c:	cmp    ecx,0x1
   14002c72f:	jne    0x14002c73a
   14002c731:	mov    DWORD PTR [rbx+0x8],0x0
   14002c738:	jmp    0x14002c747
   14002c73a:	or     eax,0xffffffff
   14002c73d:	lock xadd DWORD PTR [rbx+0x8],eax
   14002c742:	sub    eax,0x1
   14002c745:	jg     0x14002c766
   14002c747:	mov    rbx,QWORD PTR [rsp+0x20]
   14002c74c:	mov    rax,QWORD PTR [rbx]
   14002c74f:	mov    rdi,QWORD PTR [rax+0x10]
   14002c753:	mov    rcx,rdi
   14002c756:	call   QWORD PTR [rip+0x5f4c]        # 0x1400326a8
   14002c75c:	mov    edx,0x1
   14002c761:	mov    rcx,rbx
   14002c764:	call   rdi
   14002c766:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c76b:	mov    eax,esi
   14002c76d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002c772:	mov    rbp,QWORD PTR [rsp+0x48]
   14002c777:	mov    rdi,QWORD PTR [rsp+0x58]
   14002c77c:	add    rsp,0x30
   14002c780:	pop    r14
   14002c782:	ret    
   14002c783:	int3   
   14002c784:	int3   
   14002c785:	int3   
   14002c786:	int3   
   14002c787:	int3   
   14002c788:	int3   
   14002c789:	int3   
   14002c78a:	int3   
   14002c78b:	int3   
   14002c78c:	mov    rax,rsp
   14002c78f:	push   rsi
   14002c790:	push   rdi
   14002c791:	push   r14
   14002c793:	sub    rsp,0x50
   14002c797:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14002c79f:	mov    QWORD PTR [rax+0x8],rbx
   14002c7a3:	mov    QWORD PTR [rax+0x18],rbp
   14002c7a7:	mov    rsi,rdx
   14002c7aa:	mov    r14d,0x1
   14002c7b0:	test   rdx,rdx
   14002c7b3:	je     0x14002c7c7
   14002c7b5:	mov    eax,DWORD PTR [rdx+0x8]
   14002c7b8:	test   eax,eax
   14002c7ba:	jne    0x14002c7c2
   14002c7bc:	mov    DWORD PTR [rdx+0x8],r14d
   14002c7c0:	jmp    0x14002c7c7
   14002c7c2:	lock add DWORD PTR [rdx+0x8],r14d
   14002c7c7:	mov    QWORD PTR [rsp+0x78],rdx
   14002c7cc:	lea    rax,[rdx+0x10]
   14002c7d0:	cmp    QWORD PTR [rax+0x18],0x8
   14002c7d5:	jb     0x14002c7da
   14002c7d7:	mov    rax,QWORD PTR [rax]
   14002c7da:	mov    QWORD PTR [rsp+0x28],rax
   14002c7df:	test   rdx,rdx
   14002c7e2:	je     0x14002c7f6
   14002c7e4:	mov    eax,DWORD PTR [rdx+0x8]
   14002c7e7:	test   eax,eax
   14002c7e9:	jne    0x14002c7f1
   14002c7eb:	mov    DWORD PTR [rdx+0x8],r14d
   14002c7ef:	jmp    0x14002c7f6
   14002c7f1:	lock add DWORD PTR [rdx+0x8],r14d
   14002c7f6:	mov    QWORD PTR [rsp+0x30],rdx
   14002c7fb:	mov    r9b,BYTE PTR [rip+0x239fe]        # 0x140050200
   14002c802:	lea    r8,[rsp+0x28]
   14002c807:	lea    rdx,[rsp+0x38]
   14002c80c:	call   0x14002cb5c
   14002c811:	mov    bpl,BYTE PTR [rax+0x8]
   14002c815:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c81a:	test   rcx,rcx
   14002c81d:	je     0x14002c85a
   14002c81f:	mov    eax,DWORD PTR [rcx+0x8]
   14002c822:	cmp    eax,r14d
   14002c825:	jne    0x14002c830
   14002c827:	mov    DWORD PTR [rcx+0x8],0x0
   14002c82e:	jmp    0x14002c83d
   14002c830:	or     eax,0xffffffff
   14002c833:	lock xadd DWORD PTR [rcx+0x8],eax
   14002c838:	sub    eax,0x1
   14002c83b:	jg     0x14002c85a
   14002c83d:	mov    rdi,QWORD PTR [rsp+0x30]
   14002c842:	mov    rax,QWORD PTR [rdi]
   14002c845:	mov    rbx,QWORD PTR [rax]
   14002c848:	mov    rcx,rbx
   14002c84b:	call   QWORD PTR [rip+0x5e57]        # 0x1400326a8
   14002c851:	mov    edx,r14d
   14002c854:	mov    rcx,rdi
   14002c857:	call   rbx
   14002c859:	nop
   14002c85a:	test   rsi,rsi
   14002c85d:	je     0x14002c894
   14002c85f:	mov    eax,DWORD PTR [rsi+0x8]
   14002c862:	cmp    eax,r14d
   14002c865:	jne    0x14002c870
   14002c867:	mov    DWORD PTR [rsi+0x8],0x0
   14002c86e:	jmp    0x14002c87d
   14002c870:	or     ecx,0xffffffff
   14002c873:	lock xadd DWORD PTR [rsi+0x8],ecx
   14002c878:	sub    ecx,0x1
   14002c87b:	jg     0x14002c894
   14002c87d:	mov    rcx,QWORD PTR [rsi]
   14002c880:	mov    rbx,QWORD PTR [rcx]
   14002c883:	mov    rcx,rbx
   14002c886:	call   QWORD PTR [rip+0x5e1c]        # 0x1400326a8
   14002c88c:	mov    edx,r14d
   14002c88f:	mov    rcx,rsi
   14002c892:	call   rbx
   14002c894:	mov    al,bpl
   14002c897:	lea    r11,[rsp+0x50]
   14002c89c:	mov    rbx,QWORD PTR [r11+0x20]
   14002c8a0:	mov    rbp,QWORD PTR [r11+0x30]
   14002c8a4:	mov    rsp,r11
   14002c8a7:	pop    r14
   14002c8a9:	pop    rdi
   14002c8aa:	pop    rsi
   14002c8ab:	ret    
   14002c8ac:	int3   
   14002c8ad:	int3   
   14002c8ae:	int3   
   14002c8af:	int3   
   14002c8b0:	int3   
   14002c8b1:	int3   
   14002c8b2:	int3   
   14002c8b3:	int3   
   14002c8b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c8b9:	mov    QWORD PTR [rsp+0x10],rsi
   14002c8be:	mov    QWORD PTR [rsp+0x18],rdi
   14002c8c3:	push   r14
   14002c8c5:	sub    rsp,0x20
   14002c8c9:	mov    r14,rdx
   14002c8cc:	mov    rdi,rcx
   14002c8cf:	call   0x14002c9e0
   14002c8d4:	mov    rbx,QWORD PTR [rdi+0x10]
   14002c8d8:	mov    rsi,rax
   14002c8db:	add    rsi,rsi
   14002c8de:	mov    rbx,QWORD PTR [rbx+rsi*8]
   14002c8e2:	mov    rax,QWORD PTR [rdi+0x10]
   14002c8e6:	mov    rcx,QWORD PTR [rdi]
   14002c8e9:	cmp    QWORD PTR [rax+rsi*8],rcx
   14002c8ed:	je     0x14002c8f7
   14002c8ef:	mov    rcx,QWORD PTR [rax+rsi*8+0x8]
   14002c8f4:	mov    rcx,QWORD PTR [rcx]
   14002c8f7:	cmp    rbx,rcx
   14002c8fa:	je     0x14002c923
   14002c8fc:	mov    rdx,QWORD PTR [r14]
   14002c8ff:	mov    rcx,QWORD PTR [rbx+0x10]
   14002c903:	call   QWORD PTR [rip+0x5cef]        # 0x1400325f8
   14002c909:	test   eax,eax
   14002c90b:	jns    0x14002c912
   14002c90d:	mov    rbx,QWORD PTR [rbx]
   14002c910:	jmp    0x14002c8e2
   14002c912:	mov    rdx,QWORD PTR [rbx+0x10]
   14002c916:	mov    rcx,QWORD PTR [r14]
   14002c919:	call   QWORD PTR [rip+0x5cd9]        # 0x1400325f8
   14002c91f:	test   eax,eax
   14002c921:	jns    0x14002c926
   14002c923:	mov    rbx,QWORD PTR [rdi]
   14002c926:	cmp    rbx,QWORD PTR [rdi]
   14002c929:	jne    0x14002c92f
   14002c92b:	xor    eax,eax
   14002c92d:	jmp    0x14002c933
   14002c92f:	mov    rax,QWORD PTR [rbx+0x18]
   14002c933:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c938:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c93d:	mov    rdi,QWORD PTR [rsp+0x40]
   14002c942:	add    rsp,0x20
   14002c946:	pop    r14
   14002c948:	ret    
   14002c949:	int3   
   14002c94a:	int3   
   14002c94b:	int3   
   14002c94c:	int3   
   14002c94d:	int3   
   14002c94e:	int3   
   14002c94f:	int3   
   14002c950:	sub    rsp,0x28
   14002c954:	mov    rcx,QWORD PTR [rcx]
   14002c957:	test   rcx,rcx
   14002c95a:	je     0x14002c962
   14002c95c:	call   QWORD PTR [rip+0x5b6e]        # 0x1400324d0
   14002c962:	add    rsp,0x28
   14002c966:	ret    
   14002c967:	int3   
   14002c968:	int3   
   14002c969:	int3   
   14002c96a:	int3   
   14002c96b:	int3   
   14002c96c:	int3   
   14002c96d:	int3   
   14002c96e:	int3   
   14002c96f:	int3   
   14002c970:	and    QWORD PTR [rdx],0x0
   14002c974:	mov    eax,0x80004001
   14002c979:	ret    
   14002c97a:	int3   
   14002c97b:	int3   
   14002c97c:	int3   
   14002c97d:	int3   
   14002c97e:	int3   
   14002c97f:	int3   
   14002c980:	mov    QWORD PTR [rsp+0x8],rbx
   14002c985:	push   rdi
   14002c986:	sub    rsp,0x20
   14002c98a:	mov    rdi,QWORD PTR [rcx+0x8]
   14002c98e:	test   rdi,rdi
   14002c991:	je     0x14002c9cf
   14002c993:	mov    eax,DWORD PTR [rdi+0x8]
   14002c996:	cmp    eax,0x1
   14002c999:	jne    0x14002c9a4
   14002c99b:	mov    DWORD PTR [rdi+0x8],0x0
   14002c9a2:	jmp    0x14002c9b1
   14002c9a4:	or     eax,0xffffffff
   14002c9a7:	lock xadd DWORD PTR [rdi+0x8],eax
   14002c9ac:	sub    eax,0x1
   14002c9af:	jg     0x14002c9cf
   14002c9b1:	test   rdi,rdi
   14002c9b4:	je     0x14002c9cf
   14002c9b6:	mov    rax,QWORD PTR [rdi]
   14002c9b9:	mov    rbx,QWORD PTR [rax]
   14002c9bc:	mov    rcx,rbx
   14002c9bf:	call   QWORD PTR [rip+0x5ce3]        # 0x1400326a8
   14002c9c5:	mov    edx,0x1
   14002c9ca:	mov    rcx,rdi
   14002c9cd:	call   rbx
   14002c9cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c9d4:	add    rsp,0x20
   14002c9d8:	pop    rdi
   14002c9d9:	ret    
   14002c9da:	int3   
   14002c9db:	int3   
   14002c9dc:	int3   
   14002c9dd:	int3   
   14002c9de:	int3   
   14002c9df:	int3   
   14002c9e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002c9e5:	mov    QWORD PTR [rsp+0x18],rbp
   14002c9ea:	push   rsi
   14002c9eb:	push   rdi
   14002c9ec:	push   r12
   14002c9ee:	push   r14
   14002c9f0:	push   r15
   14002c9f2:	sub    rsp,0x20
   14002c9f6:	mov    r15,QWORD PTR [rdx]
   14002c9f9:	or     rsi,0xffffffffffffffff
   14002c9fd:	mov    rdi,rsi
   14002ca00:	xor    r12d,r12d
   14002ca03:	mov    r14,rcx
   14002ca06:	mov    ebx,0x2db39507
   14002ca0b:	inc    rdi
   14002ca0e:	cmp    WORD PTR [r15+rdi*2],r12w
   14002ca13:	jne    0x14002ca0b
   14002ca15:	mov    rbp,r12
   14002ca18:	test   rdi,rdi
   14002ca1b:	je     0x14002ca6a
   14002ca1d:	movzx  ecx,WORD PTR [r15+rbp*2]
   14002ca22:	call   QWORD PTR [rip+0x5bf0]        # 0x140032618
   14002ca28:	mov    WORD PTR [rsp+0x50],ax
   14002ca2d:	mov    rdx,r12
   14002ca30:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x50]
   14002ca35:	movabs r8,0xf000000000000000
   14002ca3f:	shl    rbx,0x4
   14002ca43:	inc    rdx
   14002ca46:	add    rcx,rbx
   14002ca49:	mov    rax,rcx
   14002ca4c:	and    rax,r8
   14002ca4f:	mov    rbx,rax
   14002ca52:	shr    rbx,0x38
   14002ca56:	xor    rbx,rax
   14002ca59:	xor    rbx,rcx
   14002ca5c:	cmp    rdx,0x2
   14002ca60:	jb     0x14002ca30
   14002ca62:	inc    rbp
   14002ca65:	cmp    rbp,rdi
   14002ca68:	jb     0x14002ca1d
   14002ca6a:	mov    rcx,QWORD PTR [r14+0x28]
   14002ca6e:	mov    rax,rcx
   14002ca71:	and    rax,rbx
   14002ca74:	cmp    QWORD PTR [r14+0x30],rax
   14002ca78:	ja     0x14002ca83
   14002ca7a:	shr    rcx,1
   14002ca7d:	sub    rsi,rcx
   14002ca80:	add    rax,rsi
   14002ca83:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ca88:	mov    rbp,QWORD PTR [rsp+0x60]
   14002ca8d:	add    rsp,0x20
   14002ca91:	pop    r15
   14002ca93:	pop    r14
   14002ca95:	pop    r12
   14002ca97:	pop    rdi
   14002ca98:	pop    rsi
   14002ca99:	ret    
   14002ca9a:	int3   
   14002ca9b:	int3   
   14002ca9c:	int3   
   14002ca9d:	int3   
   14002ca9e:	int3   
   14002ca9f:	int3   
   14002caa0:	mov    rax,rsp
   14002caa3:	mov    QWORD PTR [rax+0x8],rbx
   14002caa7:	mov    QWORD PTR [rax+0x10],rbp
   14002caab:	mov    QWORD PTR [rax+0x18],rsi
   14002caaf:	mov    QWORD PTR [rax+0x20],rdi
   14002cab3:	push   r14
   14002cab5:	sub    rsp,0x20
   14002cab9:	mov    rax,QWORD PTR [rcx]
   14002cabc:	mov    rdi,rcx
   14002cabf:	mov    r14,QWORD PTR [rax]
   14002cac2:	mov    QWORD PTR [rax],rax
   14002cac5:	mov    rax,QWORD PTR [rcx]
   14002cac8:	mov    QWORD PTR [rax+0x8],rax
   14002cacc:	and    QWORD PTR [rcx+0x8],0x0
   14002cad1:	cmp    r14,QWORD PTR [rcx]
   14002cad4:	je     0x14002cb2f
   14002cad6:	mov    rsi,QWORD PTR [r14+0x18]
   14002cada:	mov    rbp,QWORD PTR [r14]
   14002cadd:	test   rsi,rsi
   14002cae0:	je     0x14002cb1e
   14002cae2:	mov    eax,DWORD PTR [rsi+0x8]
   14002cae5:	cmp    eax,0x1
   14002cae8:	jne    0x14002caf3
   14002caea:	mov    DWORD PTR [rsi+0x8],0x0
   14002caf1:	jmp    0x14002cb00
   14002caf3:	or     eax,0xffffffff
   14002caf6:	lock xadd DWORD PTR [rsi+0x8],eax
   14002cafb:	sub    eax,0x1
   14002cafe:	jg     0x14002cb1e
   14002cb00:	test   rsi,rsi
   14002cb03:	je     0x14002cb1e
   14002cb05:	mov    rax,QWORD PTR [rsi]
   14002cb08:	mov    rbx,QWORD PTR [rax]
   14002cb0b:	mov    rcx,rbx
   14002cb0e:	call   QWORD PTR [rip+0x5b94]        # 0x1400326a8
   14002cb14:	mov    edx,0x1
   14002cb19:	mov    rcx,rsi
   14002cb1c:	call   rbx
   14002cb1e:	mov    rcx,r14
   14002cb21:	call   QWORD PTR [rip+0x5aa1]        # 0x1400325c8
   14002cb27:	mov    r14,rbp
   14002cb2a:	cmp    rbp,QWORD PTR [rdi]
   14002cb2d:	jne    0x14002cad6
   14002cb2f:	mov    rcx,QWORD PTR [rdi]
   14002cb32:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cb37:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cb3c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cb41:	mov    rdi,QWORD PTR [rsp+0x48]
   14002cb46:	add    rsp,0x20
   14002cb4a:	pop    r14
   14002cb4c:	rex.W jmp QWORD PTR [rip+0x5a75]        # 0x1400325c8
   14002cb53:	int3   
   14002cb54:	int3   
   14002cb55:	int3   
   14002cb56:	int3   
   14002cb57:	int3   
   14002cb58:	int3   
   14002cb59:	int3   
   14002cb5a:	int3   
   14002cb5b:	int3   
   14002cb5c:	mov    rax,rsp
   14002cb5f:	push   r13
   14002cb61:	push   r14
   14002cb63:	push   r15
   14002cb65:	sub    rsp,0x30
   14002cb69:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002cb71:	mov    QWORD PTR [rax+0x8],rbx
   14002cb75:	mov    QWORD PTR [rax+0x10],rsi
   14002cb79:	mov    QWORD PTR [rax+0x18],rdi
   14002cb7d:	mov    rdi,r8
   14002cb80:	mov    r15,rdx
   14002cb83:	mov    r14,rcx
   14002cb86:	mov    rdx,r8
   14002cb89:	call   0x14002c9e0
   14002cb8e:	mov    rsi,rax
   14002cb91:	mov    rbx,QWORD PTR [r14]
   14002cb94:	add    rsi,rsi
   14002cb97:	mov    rax,QWORD PTR [r14+0x10]
   14002cb9b:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cb9f:	je     0x14002cbf2
   14002cba1:	mov    rbx,QWORD PTR [rax+rsi*8+0x8]
   14002cba6:	mov    rbx,QWORD PTR [rbx]
   14002cba9:	jmp    0x14002cbc4
   14002cbab:	mov    rbx,QWORD PTR [rbx+0x8]
   14002cbaf:	mov    rdx,QWORD PTR [rbx+0x10]
   14002cbb3:	mov    rcx,QWORD PTR [rdi]
   14002cbb6:	call   QWORD PTR [rip+0x5a3c]        # 0x1400325f8
   14002cbbc:	test   eax,eax
   14002cbbe:	jns    0x14002cbcc
   14002cbc0:	mov    rax,QWORD PTR [r14+0x10]
   14002cbc4:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cbc8:	jne    0x14002cbab
   14002cbca:	jmp    0x14002cbf2
   14002cbcc:	mov    rdx,QWORD PTR [rdi]
   14002cbcf:	mov    rcx,QWORD PTR [rbx+0x10]
   14002cbd3:	call   QWORD PTR [rip+0x5a1f]        # 0x1400325f8
   14002cbd9:	test   eax,eax
   14002cbdb:	jns    0x14002cbe2
   14002cbdd:	mov    rbx,QWORD PTR [rbx]
   14002cbe0:	jmp    0x14002cbf2
   14002cbe2:	mov    QWORD PTR [r15],rbx
   14002cbe5:	mov    BYTE PTR [r15+0x8],0x0
   14002cbea:	mov    rax,r15
   14002cbed:	jmp    0x14002ccd9
   14002cbf2:	mov    rax,QWORD PTR [r14]
   14002cbf5:	mov    r13,QWORD PTR [rax]
   14002cbf8:	mov    r9,rdi
   14002cbfb:	mov    r8,QWORD PTR [r13+0x8]
   14002cbff:	mov    rdx,r13
   14002cc02:	call   0x140012804
   14002cc07:	mov    rdx,rax
   14002cc0a:	mov    rax,QWORD PTR [r14+0x8]
   14002cc0e:	movabs rcx,0x7fffffffffffffe
   14002cc18:	sub    rcx,rax
   14002cc1b:	cmp    rcx,0x1
   14002cc1f:	jae    0x14002cc2e
   14002cc21:	lea    rcx,[rip+0xa558]        # 0x140037180
   14002cc28:	call   0x14002d7f8
   14002cc2d:	int3   
   14002cc2e:	inc    rax
   14002cc31:	mov    QWORD PTR [r14+0x8],rax
   14002cc35:	mov    QWORD PTR [r13+0x8],rdx
   14002cc39:	mov    rax,QWORD PTR [rdx+0x8]
   14002cc3d:	mov    QWORD PTR [rax],rdx
   14002cc40:	mov    rdi,QWORD PTR [r14]
   14002cc43:	mov    rdi,QWORD PTR [rdi]
   14002cc46:	mov    rax,QWORD PTR [rdi]
   14002cc49:	cmp    rbx,rax
   14002cc4c:	je     0x14002cc7b
   14002cc4e:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cc52:	mov    QWORD PTR [rcx],rax
   14002cc55:	mov    rcx,QWORD PTR [rax+0x8]
   14002cc59:	mov    QWORD PTR [rcx],rbx
   14002cc5c:	mov    rcx,QWORD PTR [rbx+0x8]
   14002cc60:	mov    QWORD PTR [rcx],rdi
   14002cc63:	mov    rdx,QWORD PTR [rbx+0x8]
   14002cc67:	mov    rcx,QWORD PTR [rax+0x8]
   14002cc6b:	mov    QWORD PTR [rbx+0x8],rcx
   14002cc6f:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cc73:	mov    QWORD PTR [rax+0x8],rcx
   14002cc77:	mov    QWORD PTR [rdi+0x8],rdx
   14002cc7b:	mov    rdx,QWORD PTR [r14+0x10]
   14002cc7f:	mov    rax,QWORD PTR [rdx+rsi*8]
   14002cc83:	cmp    rax,QWORD PTR [r14]
   14002cc86:	jne    0x14002cc97
   14002cc88:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cc8c:	mov    rax,QWORD PTR [r14+0x10]
   14002cc90:	mov    QWORD PTR [rax+rsi*8+0x8],rdi
   14002cc95:	jmp    0x14002ccc6
   14002cc97:	cmp    rax,rbx
   14002cc9a:	jne    0x14002cca2
   14002cc9c:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cca0:	jmp    0x14002ccc6
   14002cca2:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002cca7:	mov    rcx,QWORD PTR [rax]
   14002ccaa:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002ccaf:	cmp    rcx,rdi
   14002ccb2:	je     0x14002ccc6
   14002ccb4:	mov    rdx,QWORD PTR [r14+0x10]
   14002ccb8:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002ccbd:	mov    rcx,QWORD PTR [rax+0x8]
   14002ccc1:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002ccc6:	mov    rcx,r14
   14002ccc9:	call   0x14002ccfc
   14002ccce:	mov    QWORD PTR [r15],rdi
   14002ccd1:	mov    BYTE PTR [r15+0x8],0x1
   14002ccd6:	mov    rax,r15
   14002ccd9:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ccde:	mov    rsi,QWORD PTR [rsp+0x58]
   14002cce3:	mov    rdi,QWORD PTR [rsp+0x60]
   14002cce8:	add    rsp,0x30
   14002ccec:	pop    r15
   14002ccee:	pop    r14
   14002ccf0:	pop    r13
   14002ccf2:	ret    
   14002ccf3:	int3   
   14002ccf4:	int3   
   14002ccf5:	int3   
   14002ccf6:	int3   
   14002ccf7:	int3   
   14002ccf8:	int3   
   14002ccf9:	int3   
   14002ccfa:	int3   
   14002ccfb:	int3   
   14002ccfc:	mov    QWORD PTR [rsp+0x18],rbx
   14002cd01:	mov    QWORD PTR [rsp+0x20],rsi
   14002cd06:	push   rdi
   14002cd07:	sub    rsp,0x40
   14002cd0b:	mov    rax,QWORD PTR [rcx+0x8]
   14002cd0f:	xorps  xmm0,xmm0
   14002cd12:	mov    rbx,QWORD PTR [rcx+0x30]
   14002cd16:	mov    rsi,rcx
   14002cd19:	movss  xmm2,DWORD PTR [rip+0x10777]        # 0x14003d498
   14002cd21:	cvtsi2ss xmm0,rax
   14002cd26:	test   rax,rax
   14002cd29:	jns    0x14002cd2f
   14002cd2b:	addss  xmm0,xmm2
   14002cd2f:	xorps  xmm1,xmm1
   14002cd32:	cvtsi2ss xmm1,rbx
   14002cd37:	test   rbx,rbx
   14002cd3a:	jns    0x14002cd40
   14002cd3c:	addss  xmm1,xmm2
   14002cd40:	divss  xmm0,xmm1
   14002cd44:	comiss xmm0,DWORD PTR [rcx+0x38]
   14002cd48:	jbe    0x14002cdd1
   14002cd4e:	cmp    rbx,0x200
   14002cd55:	jae    0x14002cd5d
   14002cd57:	shl    rbx,0x3
   14002cd5b:	jmp    0x14002cd6f
   14002cd5d:	movabs rax,0xfffffffffffffff
   14002cd67:	cmp    rbx,rax
   14002cd6a:	jae    0x14002cd6f
   14002cd6c:	add    rbx,rbx
   14002cd6f:	mov    rax,QWORD PTR [rsi]
   14002cd72:	lea    r9,[rbx+rbx*1]
   14002cd76:	add    rcx,0x10
   14002cd7a:	mov    QWORD PTR [rsp+0x50],rax
   14002cd7f:	lea    rax,[rsp+0x50]
   14002cd84:	lea    rdx,[rsp+0x58]
   14002cd89:	mov    QWORD PTR [rsp+0x20],rax
   14002cd8e:	mov    r8,QWORD PTR [rcx]
   14002cd91:	mov    QWORD PTR [rcx+0x8],r8
   14002cd95:	call   0x14000dfb4
   14002cd9a:	lea    rax,[rbx-0x1]
   14002cd9e:	mov    QWORD PTR [rsi+0x30],rbx
   14002cda2:	mov    QWORD PTR [rsi+0x28],rax
   14002cda6:	mov    rax,QWORD PTR [rsi]
   14002cda9:	cmp    QWORD PTR [rax],rax
   14002cdac:	je     0x14002cdd1
   14002cdae:	mov    rdi,QWORD PTR [rax+0x8]
   14002cdb2:	mov    rbx,QWORD PTR [rsi]
   14002cdb5:	lea    rdx,[rsp+0x30]
   14002cdba:	mov    rcx,rsi
   14002cdbd:	mov    rbx,QWORD PTR [rbx]
   14002cdc0:	mov    r9,rbx
   14002cdc3:	lea    r8,[rbx+0x10]
   14002cdc7:	call   0x14002ce5c
   14002cdcc:	cmp    rbx,rdi
   14002cdcf:	jne    0x14002cdb2
   14002cdd1:	mov    rbx,QWORD PTR [rsp+0x60]
   14002cdd6:	mov    rsi,QWORD PTR [rsp+0x68]
   14002cddb:	add    rsp,0x40
   14002cddf:	pop    rdi
   14002cde0:	ret    
   14002cde1:	int3   
   14002cde2:	int3   
   14002cde3:	int3   
   14002cde4:	int3   
   14002cde5:	int3   
   14002cde6:	int3   
   14002cde7:	int3   
   14002cde8:	rex push rbx
   14002cdea:	sub    rsp,0x30
   14002cdee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cdf7:	mov    rbx,rcx
   14002cdfa:	mov    ecx,0x28
   14002cdff:	call   QWORD PTR [rip+0x57cb]        # 0x1400325d0
   14002ce05:	mov    rdx,rax
   14002ce08:	test   rax,rax
   14002ce0b:	je     0x14002ce1d
   14002ce0d:	and    DWORD PTR [rax+0x8],0x0
   14002ce11:	lea    rax,[rip+0x7fa8]        # 0x140034dc0
   14002ce18:	mov    QWORD PTR [rdx],rax
   14002ce1b:	jmp    0x14002ce1f
   14002ce1d:	xor    edx,edx
   14002ce1f:	test   rdx,rdx
   14002ce22:	je     0x14002ce3d
   14002ce24:	mov    eax,DWORD PTR [rdx+0x8]
   14002ce27:	test   eax,eax
   14002ce29:	jne    0x14002ce34
   14002ce2b:	mov    DWORD PTR [rdx+0x8],0x1
   14002ce32:	jmp    0x14002ce38
   14002ce34:	lock inc DWORD PTR [rdx+0x8]
   14002ce38:	mov    QWORD PTR [rbx],rdx
   14002ce3b:	jmp    0x14002ce4c
   14002ce3d:	mov    eax,0x8007000e
   14002ce42:	jmp    0x14002ce4e
   14002ce44:	mov    eax,DWORD PTR [rsp+0x48]
   14002ce48:	test   eax,eax
   14002ce4a:	js     0x14002ce4e
   14002ce4c:	xor    eax,eax
   14002ce4e:	add    rsp,0x30
   14002ce52:	pop    rbx
   14002ce53:	ret    
   14002ce54:	int3   
   14002ce55:	int3   
   14002ce56:	int3   
   14002ce57:	int3   
   14002ce58:	int3   
   14002ce59:	int3   
   14002ce5a:	int3   
   14002ce5b:	int3   
   14002ce5c:	mov    rax,rsp
   14002ce5f:	mov    QWORD PTR [rax+0x20],r9
   14002ce63:	mov    QWORD PTR [rax+0x8],rcx
   14002ce67:	push   rdi
   14002ce68:	push   r14
   14002ce6a:	push   r15
   14002ce6c:	sub    rsp,0x30
   14002ce70:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002ce78:	mov    QWORD PTR [rax+0x10],rbx
   14002ce7c:	mov    QWORD PTR [rax+0x18],rsi
   14002ce80:	mov    rdi,r8
   14002ce83:	mov    r15,rdx
   14002ce86:	mov    r14,rcx
   14002ce89:	mov    rdx,r8
   14002ce8c:	call   0x14002c9e0
   14002ce91:	mov    rsi,rax
   14002ce94:	mov    rbx,QWORD PTR [r14]
   14002ce97:	add    rsi,rsi
   14002ce9a:	mov    rax,QWORD PTR [r14+0x10]
   14002ce9e:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cea2:	je     0x14002cf02
   14002cea4:	mov    rbx,QWORD PTR [rax+rsi*8+0x8]
   14002cea9:	mov    rbx,QWORD PTR [rbx]
   14002ceac:	jmp    0x14002cec7
   14002ceae:	mov    rbx,QWORD PTR [rbx+0x8]
   14002ceb2:	mov    rdx,QWORD PTR [rbx+0x10]
   14002ceb6:	mov    rcx,QWORD PTR [rdi]
   14002ceb9:	call   QWORD PTR [rip+0x5739]        # 0x1400325f8
   14002cebf:	test   eax,eax
   14002cec1:	jns    0x14002cecf
   14002cec3:	mov    rax,QWORD PTR [r14+0x10]
   14002cec7:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cecb:	jne    0x14002ceae
   14002cecd:	jmp    0x14002cf02
   14002cecf:	mov    rdx,QWORD PTR [rdi]
   14002ced2:	mov    rcx,QWORD PTR [rbx+0x10]
   14002ced6:	call   QWORD PTR [rip+0x571c]        # 0x1400325f8
   14002cedc:	test   eax,eax
   14002cede:	jns    0x14002cee5
   14002cee0:	mov    rbx,QWORD PTR [rbx]
   14002cee3:	jmp    0x14002cf02
   14002cee5:	mov    rdx,QWORD PTR [rsp+0x68]
   14002ceea:	mov    rcx,r14
   14002ceed:	call   0x14002cfb8
   14002cef2:	mov    QWORD PTR [r15],rbx
   14002cef5:	mov    BYTE PTR [r15+0x8],0x0
   14002cefa:	mov    rax,r15
   14002cefd:	jmp    0x14002cf9a
   14002cf02:	mov    rdi,QWORD PTR [rsp+0x68]
   14002cf07:	mov    rax,QWORD PTR [rdi]
   14002cf0a:	cmp    rbx,rax
   14002cf0d:	je     0x14002cf3c
   14002cf0f:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cf13:	mov    QWORD PTR [rcx],rax
   14002cf16:	mov    rcx,QWORD PTR [rax+0x8]
   14002cf1a:	mov    QWORD PTR [rcx],rbx
   14002cf1d:	mov    rcx,QWORD PTR [rbx+0x8]
   14002cf21:	mov    QWORD PTR [rcx],rdi
   14002cf24:	mov    rdx,QWORD PTR [rbx+0x8]
   14002cf28:	mov    rcx,QWORD PTR [rax+0x8]
   14002cf2c:	mov    QWORD PTR [rbx+0x8],rcx
   14002cf30:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cf34:	mov    QWORD PTR [rax+0x8],rcx
   14002cf38:	mov    QWORD PTR [rdi+0x8],rdx
   14002cf3c:	mov    rdx,QWORD PTR [r14+0x10]
   14002cf40:	mov    rax,QWORD PTR [rdx+rsi*8]
   14002cf44:	cmp    rax,QWORD PTR [r14]
   14002cf47:	jne    0x14002cf58
   14002cf49:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cf4d:	mov    rax,QWORD PTR [r14+0x10]
   14002cf51:	mov    QWORD PTR [rax+rsi*8+0x8],rdi
   14002cf56:	jmp    0x14002cf87
   14002cf58:	cmp    rax,rbx
   14002cf5b:	jne    0x14002cf63
   14002cf5d:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cf61:	jmp    0x14002cf87
   14002cf63:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002cf68:	mov    rcx,QWORD PTR [rax]
   14002cf6b:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002cf70:	cmp    rcx,rdi
   14002cf73:	je     0x14002cf87
   14002cf75:	mov    rdx,QWORD PTR [r14+0x10]
   14002cf79:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002cf7e:	mov    rcx,QWORD PTR [rax+0x8]
   14002cf82:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002cf87:	mov    rcx,r14
   14002cf8a:	call   0x14002ccfc
   14002cf8f:	mov    QWORD PTR [r15],rdi
   14002cf92:	mov    BYTE PTR [r15+0x8],0x1
   14002cf97:	mov    rax,r15
   14002cf9a:	mov    rbx,QWORD PTR [rsp+0x58]
   14002cf9f:	mov    rsi,QWORD PTR [rsp+0x60]
   14002cfa4:	add    rsp,0x30
   14002cfa8:	pop    r15
   14002cfaa:	pop    r14
   14002cfac:	pop    rdi
   14002cfad:	ret    
   14002cfae:	int3   
   14002cfaf:	int3   
   14002cfb0:	int3   
   14002cfb1:	int3   
   14002cfb2:	int3   
   14002cfb3:	int3   
   14002cfb4:	int3   
   14002cfb5:	int3   
   14002cfb6:	int3   
   14002cfb7:	int3   
   14002cfb8:	mov    QWORD PTR [rsp+0x8],rbx
   14002cfbd:	mov    QWORD PTR [rsp+0x10],rbp
   14002cfc2:	mov    QWORD PTR [rsp+0x18],rsi
   14002cfc7:	push   rdi
   14002cfc8:	sub    rsp,0x20
   14002cfcc:	mov    rsi,rdx
   14002cfcf:	mov    rbp,rcx
   14002cfd2:	cmp    rdx,QWORD PTR [rcx]
   14002cfd5:	je     0x14002d03e
   14002cfd7:	mov    rdx,QWORD PTR [rdx+0x8]
   14002cfdb:	mov    rax,QWORD PTR [rsi]
   14002cfde:	mov    QWORD PTR [rdx],rax
   14002cfe1:	mov    rdx,QWORD PTR [rsi]
   14002cfe4:	mov    rax,QWORD PTR [rsi+0x8]
   14002cfe8:	mov    QWORD PTR [rdx+0x8],rax
   14002cfec:	mov    rdi,QWORD PTR [rsi+0x18]
   14002cff0:	test   rdi,rdi
   14002cff3:	je     0x14002d031
   14002cff5:	mov    eax,DWORD PTR [rdi+0x8]
   14002cff8:	cmp    eax,0x1
   14002cffb:	jne    0x14002d006
   14002cffd:	mov    DWORD PTR [rdi+0x8],0x0
   14002d004:	jmp    0x14002d013
   14002d006:	or     eax,0xffffffff
   14002d009:	lock xadd DWORD PTR [rdi+0x8],eax
   14002d00e:	sub    eax,0x1
   14002d011:	jg     0x14002d031
   14002d013:	test   rdi,rdi
   14002d016:	je     0x14002d031
   14002d018:	mov    rax,QWORD PTR [rdi]
   14002d01b:	mov    rbx,QWORD PTR [rax]
   14002d01e:	mov    rcx,rbx
   14002d021:	call   QWORD PTR [rip+0x5681]        # 0x1400326a8
   14002d027:	mov    edx,0x1
   14002d02c:	mov    rcx,rdi
   14002d02f:	call   rbx
   14002d031:	mov    rcx,rsi
   14002d034:	call   QWORD PTR [rip+0x558e]        # 0x1400325c8
   14002d03a:	dec    QWORD PTR [rbp+0x8]
   14002d03e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d043:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d048:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d04d:	add    rsp,0x20
   14002d051:	pop    rdi
   14002d052:	ret    
   14002d053:	int3   
   14002d054:	int3   
   14002d055:	int3   
   14002d056:	int3   
   14002d057:	int3   
   14002d058:	int3   
   14002d059:	int3   
   14002d05a:	int3   
   14002d05b:	int3   
   14002d05c:	mov    QWORD PTR [rsp+0x18],rbx
   14002d061:	push   rbp
   14002d062:	push   rsi
   14002d063:	push   rdi
   14002d064:	sub    rsp,0x20
   14002d068:	mov    rax,QWORD PTR [rcx]
   14002d06b:	mov    rdi,rcx
   14002d06e:	and    QWORD PTR [rsp+0x40],0x0
   14002d074:	mov    rbp,r8
   14002d077:	and    QWORD PTR [rsp+0x48],0x0
   14002d07d:	mov    rsi,rdx
   14002d080:	mov    rbx,QWORD PTR [rax+0x38]
   14002d084:	mov    rcx,rbx
   14002d087:	call   QWORD PTR [rip+0x561b]        # 0x1400326a8
   14002d08d:	lea    r8,[rsp+0x48]
   14002d092:	mov    rcx,rdi
   14002d095:	lea    rdx,[rsp+0x40]
   14002d09a:	call   rbx
   14002d09c:	mov    r8,QWORD PTR [rsp+0x40]
   14002d0a1:	cmp    QWORD PTR [rsi],r8
   14002d0a4:	jb     0x14002d0bc
   14002d0a6:	mov    rdx,QWORD PTR [rsp+0x48]
   14002d0ab:	mov    rcx,rbp
   14002d0ae:	call   QWORD PTR [rip+0x53ec]        # 0x1400324a0
   14002d0b4:	mov    rax,QWORD PTR [rsp+0x40]
   14002d0b9:	mov    QWORD PTR [rsi],rax
   14002d0bc:	mov    rbx,QWORD PTR [rsp+0x50]
   14002d0c1:	add    rsp,0x20
   14002d0c5:	pop    rdi
   14002d0c6:	pop    rsi
   14002d0c7:	pop    rbp
   14002d0c8:	ret    
   14002d0c9:	int3   
   14002d0ca:	int3   
   14002d0cb:	int3   
   14002d0cc:	int3   
   14002d0cd:	int3   
   14002d0ce:	int3   
   14002d0cf:	int3   
   14002d0d0:	mov    rax,rsp
   14002d0d3:	mov    QWORD PTR [rax+0x10],rbx
   14002d0d7:	push   rdi
   14002d0d8:	sub    rsp,0x30
   14002d0dc:	and    QWORD PTR [rcx],0x0
   14002d0e0:	mov    r9,r8
   14002d0e3:	and    QWORD PTR [rax+0x8],0x0
   14002d0e8:	mov    r8,rdx
   14002d0eb:	and    QWORD PTR [rax+0x20],0x0
   14002d0f0:	lea    rdx,[rax+0x8]
   14002d0f4:	mov    rdi,rcx
   14002d0f7:	lea    rcx,[rax+0x20]
   14002d0fb:	call   0x14002d160
   14002d100:	mov    ebx,eax
   14002d102:	test   eax,eax
   14002d104:	jns    0x14002d10d
   14002d106:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d10b:	jmp    0x14002d119
   14002d10d:	mov    rax,QWORD PTR [rsp+0x40]
   14002d112:	xor    ecx,ecx
   14002d114:	mov    QWORD PTR [rdi],rax
   14002d117:	xor    ebx,ebx
   14002d119:	test   rcx,rcx
   14002d11c:	je     0x14002d124
   14002d11e:	call   QWORD PTR [rip+0x54a4]        # 0x1400325c8
   14002d124:	mov    eax,ebx
   14002d126:	mov    rbx,QWORD PTR [rsp+0x48]
   14002d12b:	add    rsp,0x30
   14002d12f:	pop    rdi
   14002d130:	ret    
   14002d131:	int3   
   14002d132:	int3   
   14002d133:	int3   
   14002d134:	int3   
   14002d135:	int3   
   14002d136:	int3   
   14002d137:	int3   
   14002d138:	mov    rax,rsp
   14002d13b:	mov    QWORD PTR [rax+0x10],rdx
   14002d13f:	mov    QWORD PTR [rax+0x18],r8
   14002d143:	mov    QWORD PTR [rax+0x20],r9
   14002d147:	sub    rsp,0x28
   14002d14b:	lea    r8,[rax+0x18]
   14002d14f:	call   0x14002d0d0
   14002d154:	add    rsp,0x28
   14002d158:	ret    
   14002d159:	int3   
   14002d15a:	int3   
   14002d15b:	int3   
   14002d15c:	int3   
   14002d15d:	int3   
   14002d15e:	int3   
   14002d15f:	int3   
   14002d160:	rex push rbx
   14002d162:	push   rbp
   14002d163:	push   rsi
   14002d164:	push   rdi
   14002d165:	push   r12
   14002d167:	push   r13
   14002d169:	push   r14
   14002d16b:	push   r15
   14002d16d:	sub    rsp,0x268
   14002d174:	mov    rax,QWORD PTR [rip+0x1dea5]        # 0x14004b020
   14002d17b:	xor    rax,rsp
   14002d17e:	mov    QWORD PTR [rsp+0x250],rax
   14002d186:	mov    rdi,QWORD PTR [rdx]
   14002d189:	xor    esi,esi
   14002d18b:	mov    r14,QWORD PTR [rcx]
   14002d18e:	mov    rbp,r9
   14002d191:	mov    QWORD PTR [rsp+0x38],r9
   14002d196:	mov    r13,r8
   14002d199:	mov    QWORD PTR [rsp+0x30],rsi
   14002d19e:	mov    r12,rdx
   14002d1a1:	mov    r15,rcx
   14002d1a4:	test   rdi,rdi
   14002d1a7:	jne    0x14002d258
   14002d1ad:	mov    r14d,0x104
   14002d1b3:	call   QWORD PTR [rip+0x524f]        # 0x140032408
   14002d1b9:	mov    rbx,QWORD PTR [rax+0xc8]
   14002d1c0:	mov    rcx,rbx
   14002d1c3:	call   QWORD PTR [rip+0x54df]        # 0x1400326a8
   14002d1c9:	mov    r9,r13
   14002d1cc:	mov    QWORD PTR [rsp+0x20],rbp
   14002d1d1:	lea    r8,[rsp+0x30]
   14002d1d6:	mov    ecx,r14d
   14002d1d9:	lea    rdx,[rsp+0x40]
   14002d1de:	call   rbx
   14002d1e0:	test   eax,eax
   14002d1e2:	js     0x14002d28e
   14002d1e8:	or     rbp,0xffffffffffffffff
   14002d1ec:	lea    rax,[rsp+0x40]
   14002d1f1:	mov    rbx,rbp
   14002d1f4:	inc    rbx
   14002d1f7:	cmp    WORD PTR [rax+rbx*2],si
   14002d1fb:	jne    0x14002d1f4
   14002d1fd:	mov    rcx,QWORD PTR [r12]
   14002d201:	inc    rbx
   14002d204:	call   QWORD PTR [rip+0x53be]        # 0x1400325c8
   14002d20a:	mov    eax,0x2
   14002d20f:	mul    rbx
   14002d212:	cmovo  rax,rbp
   14002d216:	mov    rcx,rax
   14002d219:	call   QWORD PTR [rip+0x53b1]        # 0x1400325d0
   14002d21f:	mov    QWORD PTR [r12],rax
   14002d223:	test   rax,rax
   14002d226:	je     0x14002d326
   14002d22c:	lea    r8,[rbx+rbx*1]
   14002d230:	mov    rcx,rax
   14002d233:	lea    rdx,[rsp+0x40]
   14002d238:	call   0x14002e2f2
   14002d23d:	lea    rax,[rsp+0x40]
   14002d242:	inc    rbp
   14002d245:	cmp    WORD PTR [rax+rbp*2],si
   14002d249:	jne    0x14002d242
   14002d24b:	inc    rbp
   14002d24e:	mov    QWORD PTR [r15],rbp
   14002d251:	xor    eax,eax
   14002d253:	jmp    0x14002d332
   14002d258:	call   QWORD PTR [rip+0x51aa]        # 0x140032408
   14002d25e:	mov    rbx,QWORD PTR [rax+0xc8]
   14002d265:	mov    rcx,rbx
   14002d268:	call   QWORD PTR [rip+0x543a]        # 0x1400326a8
   14002d26e:	mov    r9,r13
   14002d271:	mov    QWORD PTR [rsp+0x20],rbp
   14002d276:	lea    r8,[rsp+0x30]
   14002d27b:	mov    rdx,rdi
   14002d27e:	mov    rcx,r14
   14002d281:	call   rbx
   14002d283:	cmp    eax,0x8007007a
   14002d288:	jne    0x14002d332
   14002d28e:	or     rbp,0xffffffffffffffff
   14002d292:	cmp    r14,QWORD PTR [rsp+0x30]
   14002d297:	jae    0x14002d2a0
   14002d299:	mov    r14,QWORD PTR [rsp+0x30]
   14002d29e:	jmp    0x14002d2a7
   14002d2a0:	lea    r14,[r14+r14*2]
   14002d2a4:	shr    r14,1
   14002d2a7:	cmp    r14,0x7fffffff
   14002d2ae:	ja     0x14002d32d
   14002d2b0:	mov    rcx,QWORD PTR [r12]
   14002d2b4:	call   QWORD PTR [rip+0x530e]        # 0x1400325c8
   14002d2ba:	mov    eax,0x2
   14002d2bf:	mul    r14
   14002d2c2:	cmovo  rax,rbp
   14002d2c6:	mov    rcx,rax
   14002d2c9:	call   QWORD PTR [rip+0x5301]        # 0x1400325d0
   14002d2cf:	mov    QWORD PTR [r12],rax
   14002d2d3:	test   rax,rax
   14002d2d6:	je     0x14002d323
   14002d2d8:	mov    QWORD PTR [r15],r14
   14002d2db:	mov    rdi,QWORD PTR [r12]
   14002d2df:	call   QWORD PTR [rip+0x5123]        # 0x140032408
   14002d2e5:	mov    rbx,QWORD PTR [rax+0xc8]
   14002d2ec:	mov    rcx,rbx
   14002d2ef:	call   QWORD PTR [rip+0x53b3]        # 0x1400326a8
   14002d2f5:	mov    rax,QWORD PTR [rsp+0x38]
   14002d2fa:	lea    r8,[rsp+0x30]
   14002d2ff:	mov    r9,r13
   14002d302:	mov    QWORD PTR [rsp+0x20],rax
   14002d307:	mov    rdx,rdi
   14002d30a:	mov    rcx,r14
   14002d30d:	call   rbx
   14002d30f:	cmp    eax,0x8007007a
   14002d314:	je     0x14002d292
   14002d31a:	test   eax,eax
   14002d31c:	cmovs  esi,eax
   14002d31f:	mov    eax,esi
   14002d321:	jmp    0x14002d332
   14002d323:	mov    QWORD PTR [r15],rsi
   14002d326:	mov    eax,0x8007000e
   14002d32b:	jmp    0x14002d332
   14002d32d:	mov    eax,0x8007007a
   14002d332:	mov    rcx,QWORD PTR [rsp+0x250]
   14002d33a:	xor    rcx,rsp
   14002d33d:	call   0x14002dd00
   14002d342:	add    rsp,0x268
   14002d349:	pop    r15
   14002d34b:	pop    r14
   14002d34d:	pop    r13
   14002d34f:	pop    r12
   14002d351:	pop    rdi
   14002d352:	pop    rsi
   14002d353:	pop    rbp
   14002d354:	pop    rbx
   14002d355:	ret    
   14002d356:	int3   
   14002d357:	int3   
   14002d358:	int3   
   14002d359:	int3   
   14002d35a:	int3   
   14002d35b:	int3   
   14002d35c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d361:	push   rdi
   14002d362:	sub    rsp,0x20
   14002d366:	mov    rdi,rcx
   14002d369:	call   QWORD PTR [rip+0x5099]        # 0x140032408
   14002d36f:	mov    rbx,QWORD PTR [rax+0xa8]
   14002d376:	mov    rcx,rbx
   14002d379:	call   QWORD PTR [rip+0x5329]        # 0x1400326a8
   14002d37f:	call   rbx
   14002d381:	mov    rcx,rax
   14002d384:	mov    rbx,rax
   14002d387:	call   QWORD PTR [rip+0x531b]        # 0x1400326a8
   14002d38d:	mov    rcx,rdi
   14002d390:	mov    rax,rbx
   14002d393:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d398:	add    rsp,0x20
   14002d39c:	pop    rdi
   14002d39d:	rex.W jmp rax
   14002d3a0:	int3   
   14002d3a1:	int3   
   14002d3a2:	int3   
   14002d3a3:	int3   
   14002d3a4:	int3   
   14002d3a5:	int3   
   14002d3a6:	int3   
   14002d3a7:	int3   
   14002d3a8:	mov    QWORD PTR [rsp+0x8],rbx
   14002d3ad:	mov    QWORD PTR [rsp+0x10],rbp
   14002d3b2:	mov    QWORD PTR [rsp+0x18],rsi
   14002d3b7:	push   rdi
   14002d3b8:	sub    rsp,0x20
   14002d3bc:	mov    rdi,r8
   14002d3bf:	mov    rsi,rdx
   14002d3c2:	mov    ebp,ecx
   14002d3c4:	call   QWORD PTR [rip+0x503e]        # 0x140032408
   14002d3ca:	mov    rbx,QWORD PTR [rax+0xf8]
   14002d3d1:	mov    rcx,rbx
   14002d3d4:	call   QWORD PTR [rip+0x52ce]        # 0x1400326a8
   14002d3da:	mov    r8,rdi
   14002d3dd:	mov    rdx,rsi
   14002d3e0:	mov    ecx,ebp
   14002d3e2:	call   rbx
   14002d3e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d3e9:	test   eax,eax
   14002d3eb:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d3f0:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d3f5:	setne  al
   14002d3f8:	add    rsp,0x20
   14002d3fc:	pop    rdi
   14002d3fd:	ret    
   14002d3fe:	int3   
   14002d3ff:	int3   
   14002d400:	int3   
   14002d401:	int3   
   14002d402:	int3   
   14002d403:	int3   
   14002d404:	mov    rax,rsp
   14002d407:	mov    QWORD PTR [rax+0x8],rbx
   14002d40b:	mov    QWORD PTR [rax+0x10],rbp
   14002d40f:	mov    QWORD PTR [rax+0x18],rsi
   14002d413:	mov    QWORD PTR [rax+0x20],rdi
   14002d417:	push   r14
   14002d419:	sub    rsp,0x20
   14002d41d:	mov    rdi,r9
   14002d420:	mov    rsi,r8
   14002d423:	mov    rbp,rdx
   14002d426:	mov    r14d,ecx
   14002d429:	call   QWORD PTR [rip+0x4fd9]        # 0x140032408
   14002d42f:	mov    rbx,QWORD PTR [rax+0x100]
   14002d436:	mov    rcx,rbx
   14002d439:	call   QWORD PTR [rip+0x5269]        # 0x1400326a8
   14002d43f:	mov    r9,rdi
   14002d442:	mov    r8,rsi
   14002d445:	mov    rdx,rbp
   14002d448:	mov    ecx,r14d
   14002d44b:	mov    rax,rbx
   14002d44e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d453:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d458:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d45d:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d462:	add    rsp,0x20
   14002d466:	pop    r14
   14002d468:	rex.W jmp rax
   14002d46b:	int3   
   14002d46c:	int3   
   14002d46d:	int3   
   14002d46e:	int3   
   14002d46f:	int3   
   14002d470:	int3   
   14002d471:	int3   
   14002d472:	int3   
   14002d473:	int3   
   14002d474:	mov    QWORD PTR [rsp+0x8],rbx
   14002d479:	mov    QWORD PTR [rsp+0x10],rsi
   14002d47e:	push   rdi
   14002d47f:	sub    rsp,0x30
   14002d483:	mov    rdi,rdx
   14002d486:	mov    rsi,rcx
   14002d489:	call   QWORD PTR [rip+0x4f79]        # 0x140032408
   14002d48f:	mov    rbx,QWORD PTR [rax+0x140]
   14002d496:	mov    rcx,rbx
   14002d499:	call   QWORD PTR [rip+0x5209]        # 0x1400326a8
   14002d49f:	and    QWORD PTR [rsp+0x28],0x0
   14002d4a5:	xor    r9d,r9d
   14002d4a8:	and    QWORD PTR [rsp+0x20],0x0
   14002d4ae:	mov    rdx,rdi
   14002d4b1:	mov    rcx,rsi
   14002d4b4:	lea    r8d,[r9+0x4]
   14002d4b8:	call   rbx
   14002d4ba:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d4bf:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d4c4:	add    rsp,0x30
   14002d4c8:	pop    rdi
   14002d4c9:	ret    
   14002d4ca:	int3   
   14002d4cb:	int3   
   14002d4cc:	int3   
   14002d4cd:	int3   
   14002d4ce:	int3   
   14002d4cf:	int3   
   14002d4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d4d5:	mov    QWORD PTR [rsp+0x10],rbp
   14002d4da:	mov    QWORD PTR [rsp+0x18],rsi
   14002d4df:	push   rdi
   14002d4e0:	sub    rsp,0x20
   14002d4e4:	xor    esi,esi
   14002d4e6:	cmp    BYTE PTR [rip+0x22d5b],sil        # 0x140050248
   14002d4ed:	je     0x14002d4f9
   14002d4ef:	mov    eax,0x80070057
   14002d4f4:	jmp    0x14002d5c9
   14002d4f9:	mov    eax,DWORD PTR [rip+0x22e35]        # 0x140050334
   14002d4ff:	lea    rbp,[rip+0x22e1a]        # 0x140050320
   14002d506:	test   al,0x1
   14002d508:	jne    0x14002d526
   14002d50a:	or     eax,0x1
   14002d50d:	mov    QWORD PTR [rip+0x22e14],rbp        # 0x140050328
   14002d514:	mov    DWORD PTR [rip+0x22e1a],eax        # 0x140050334
   14002d51a:	mov    rdi,rbp
   14002d51d:	mov    QWORD PTR [rip+0x22dfc],rbp        # 0x140050320
   14002d524:	jmp    0x14002d52d
   14002d526:	mov    rdi,QWORD PTR [rip+0x22df3]        # 0x140050320
   14002d52d:	cmp    rdi,rbp
   14002d530:	jne    0x14002d53c
   14002d532:	mov    eax,0x1
   14002d537:	jmp    0x14002d5c9
   14002d53c:	mov    BYTE PTR [rip+0x22d05],0x1        # 0x140050248
   14002d543:	cmp    rbp,rdi
   14002d546:	je     0x14002d572
   14002d548:	test   rdi,rdi
   14002d54b:	je     0x14002d572
   14002d54d:	mov    rcx,QWORD PTR [rdi+0x10]
   14002d551:	call   0x14002d35c
   14002d556:	mov    rcx,rax
   14002d559:	mov    rbx,rax
   14002d55c:	call   QWORD PTR [rip+0x5146]        # 0x1400326a8
   14002d562:	mov    rcx,rdi
   14002d565:	call   rbx
   14002d567:	mov    esi,eax
   14002d569:	test   eax,eax
   14002d56b:	js     0x14002d57a
   14002d56d:	mov    rdi,QWORD PTR [rdi]
   14002d570:	jmp    0x14002d543
   14002d572:	test   esi,esi
   14002d574:	js     0x14002d57a
   14002d576:	xor    eax,eax
   14002d578:	jmp    0x14002d5c9
   14002d57a:	mov    rdi,QWORD PTR [rdi+0x8]
   14002d57e:	cmp    rbp,rdi
   14002d581:	je     0x14002d5a4
   14002d583:	test   rdi,rdi
   14002d586:	je     0x14002d5a4
   14002d588:	mov    rcx,QWORD PTR [rdi+0x18]
   14002d58c:	call   0x14002d35c
   14002d591:	mov    rcx,rax
   14002d594:	mov    rbx,rax
   14002d597:	call   QWORD PTR [rip+0x510b]        # 0x1400326a8
   14002d59d:	mov    rcx,rdi
   14002d5a0:	call   rbx
   14002d5a2:	jmp    0x14002d57a
   14002d5a4:	mov    rax,QWORD PTR [rip+0x22d75]        # 0x140050320
   14002d5ab:	cmp    rax,rbp
   14002d5ae:	je     0x14002d5c0
   14002d5b0:	mov    rax,QWORD PTR [rax]
   14002d5b3:	mov    QWORD PTR [rip+0x22d66],rax        # 0x140050320
   14002d5ba:	mov    QWORD PTR [rax+0x8],rbp
   14002d5be:	jmp    0x14002d5a4
   14002d5c0:	mov    BYTE PTR [rip+0x22c81],0x0        # 0x140050248
   14002d5c7:	mov    eax,esi
   14002d5c9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d5ce:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d5d3:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d5d8:	add    rsp,0x20
   14002d5dc:	pop    rdi
   14002d5dd:	ret    
   14002d5de:	int3   
   14002d5df:	int3   
   14002d5e0:	int3   
   14002d5e1:	int3   
   14002d5e2:	int3   
   14002d5e3:	int3   
   14002d5e4:	int3   
   14002d5e5:	int3   
   14002d5e6:	int3   
   14002d5e7:	int3   
   14002d5e8:	int3   
   14002d5e9:	int3   
   14002d5ea:	int3   
   14002d5eb:	int3   
   14002d5ec:	int3   
   14002d5ed:	int3   
   14002d5ee:	int3   
   14002d5ef:	int3   
   14002d5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d5f5:	mov    QWORD PTR [rsp+0x10],rsi
   14002d5fa:	push   rdi
   14002d5fb:	sub    rsp,0x20
   14002d5ff:	cmp    BYTE PTR [rip+0x22c42],0x0        # 0x140050248
   14002d606:	je     0x14002d672
   14002d608:	mov    eax,DWORD PTR [rip+0x22d26]        # 0x140050334
   14002d60e:	lea    rsi,[rip+0x22d0b]        # 0x140050320
   14002d615:	test   al,0x1
   14002d617:	jne    0x14002d635
   14002d619:	or     eax,0x1
   14002d61c:	mov    QWORD PTR [rip+0x22d05],rsi        # 0x140050328
   14002d623:	mov    DWORD PTR [rip+0x22d0b],eax        # 0x140050334
   14002d629:	mov    rdi,rsi
   14002d62c:	mov    QWORD PTR [rip+0x22ced],rsi        # 0x140050320
   14002d633:	jmp    0x14002d63c
   14002d635:	mov    rdi,QWORD PTR [rip+0x22ce4]        # 0x140050320
   14002d63c:	cmp    rdi,rsi
   14002d63f:	je     0x14002d66b
   14002d641:	mov    rax,QWORD PTR [rdi]
   14002d644:	mov    QWORD PTR [rip+0x22cd5],rax        # 0x140050320
   14002d64b:	mov    QWORD PTR [rax+0x8],rsi
   14002d64f:	mov    rcx,QWORD PTR [rdi+0x18]
   14002d653:	call   0x14002d35c
   14002d658:	mov    rcx,rax
   14002d65b:	mov    rbx,rax
   14002d65e:	call   QWORD PTR [rip+0x5044]        # 0x1400326a8
   14002d664:	mov    rcx,rdi
   14002d667:	call   rbx
   14002d669:	jmp    0x14002d635
   14002d66b:	mov    BYTE PTR [rip+0x22bd6],0x0        # 0x140050248
   14002d672:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d677:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d67c:	add    rsp,0x20
   14002d680:	pop    rdi
   14002d681:	ret    
   14002d682:	int3   
   14002d683:	int3   
   14002d684:	int3   
   14002d685:	int3   
   14002d686:	int3   
   14002d687:	int3   
   14002d688:	sub    rsp,0x28
   14002d68c:	cmp    BYTE PTR [rip+0x22c9d],0x0        # 0x140050330
   14002d693:	je     0x14002d699
   14002d695:	xor    eax,eax
   14002d697:	jmp    0x14002d6ca
   14002d699:	call   0x14002d4d0
   14002d69e:	test   eax,eax
   14002d6a0:	js     0x14002d6ca
   14002d6a2:	cmp    eax,0x1
   14002d6a5:	jne    0x14002d6b0
   14002d6a7:	mov    BYTE PTR [rip+0x22c82],0x1        # 0x140050330
   14002d6ae:	jmp    0x14002d695
   14002d6b0:	lea    rcx,[rip+0xffffffffffffff39]        # 0x14002d5f0
   14002d6b7:	call   0x14002de94
   14002d6bc:	test   eax,eax
   14002d6be:	je     0x14002d6a7
   14002d6c0:	call   0x14002d5f0
   14002d6c5:	mov    eax,0x80004005
   14002d6ca:	add    rsp,0x28
   14002d6ce:	ret    
   14002d6cf:	int3   
   14002d6d0:	int3   
   14002d6d1:	int3   
   14002d6d2:	int3   
   14002d6d3:	int3   
   14002d6d4:	int3   
   14002d6d5:	int3   
   14002d6d6:	int3   
   14002d6d7:	int3   
   14002d6d8:	int3   
   14002d6d9:	int3   
   14002d6da:	int3   
   14002d6db:	int3   
   14002d6dc:	int3   
   14002d6dd:	int3   
   14002d6de:	int3   
   14002d6df:	int3   
   14002d6e0:	jmp    QWORD PTR [rip+0x4a82]        # 0x140032168
   14002d6e6:	int3   
   14002d6e7:	int3   
   14002d6e8:	int3   
   14002d6e9:	int3   
   14002d6ea:	int3   
   14002d6eb:	int3   
   14002d6ec:	cmp    QWORD PTR [rip+0x5d44],0x0        # 0x140033438
   14002d6f4:	lea    rax,[rip+0x5d35]        # 0x140033430
   14002d6fb:	je     0x14002d70c
   14002d6fd:	cmp    DWORD PTR [rax],ecx
   14002d6ff:	je     0x14002d70f
   14002d701:	add    rax,0x10
   14002d705:	cmp    QWORD PTR [rax+0x8],0x0
   14002d70a:	jne    0x14002d6fd
   14002d70c:	xor    eax,eax
   14002d70e:	ret    
   14002d70f:	mov    rax,QWORD PTR [rax+0x8]
   14002d713:	ret    
   14002d714:	int3   
   14002d715:	int3   
   14002d716:	int3   
   14002d717:	int3   
   14002d718:	int3   
   14002d719:	int3   
   14002d71a:	int3   
   14002d71b:	int3   
   14002d71c:	cmp    QWORD PTR [rip+0x5424],0x0        # 0x140032b48
   14002d724:	lea    rax,[rip+0x5415]        # 0x140032b40
   14002d72b:	je     0x14002d73c
   14002d72d:	cmp    DWORD PTR [rax],ecx
   14002d72f:	je     0x14002d73f
   14002d731:	add    rax,0x10
   14002d735:	cmp    QWORD PTR [rax+0x8],0x0
   14002d73a:	jne    0x14002d72d
   14002d73c:	xor    eax,eax
   14002d73e:	ret    
   14002d73f:	mov    rax,QWORD PTR [rax+0x8]
   14002d743:	ret    
   14002d744:	int3   
   14002d745:	int3   
   14002d746:	int3   
   14002d747:	int3   
   14002d748:	int3   
   14002d749:	int3   
   14002d74a:	int3   
   14002d74b:	int3   
   14002d74c:	rex push rbx
   14002d74e:	sub    rsp,0x20
   14002d752:	mov    rbx,rcx
   14002d755:	call   0x14002df28
   14002d75a:	lea    rax,[rip+0x66cf]        # 0x140033e30
   14002d761:	mov    QWORD PTR [rbx],rax
   14002d764:	mov    rax,rbx
   14002d767:	add    rsp,0x20
   14002d76b:	pop    rbx
   14002d76c:	ret    
   14002d76d:	int3   
   14002d76e:	int3   
   14002d76f:	int3   
   14002d770:	int3   
   14002d771:	int3   
   14002d772:	int3   
   14002d773:	int3   
   14002d774:	mov    QWORD PTR [rsp+0x8],rcx
   14002d779:	push   rbx
   14002d77a:	sub    rsp,0x20
   14002d77e:	mov    QWORD PTR [rsp+0x30],rdx
   14002d783:	mov    rbx,rcx
   14002d786:	lea    rdx,[rsp+0x30]
   14002d78b:	call   0x14002e2fe
   14002d790:	lea    rax,[rip+0x6699]        # 0x140033e30
   14002d797:	mov    QWORD PTR [rbx],rax
   14002d79a:	mov    rax,rbx
   14002d79d:	add    rsp,0x20
   14002d7a1:	pop    rbx
   14002d7a2:	ret    
   14002d7a3:	int3   
   14002d7a4:	int3   
   14002d7a5:	int3   
   14002d7a6:	int3   
   14002d7a7:	int3   
   14002d7a8:	int3   
   14002d7a9:	int3   
   14002d7aa:	int3   
   14002d7ab:	int3   
   14002d7ac:	jmp    0x14002df1c
   14002d7b1:	int3   
   14002d7b2:	int3   
   14002d7b3:	int3   
   14002d7b4:	int3   
   14002d7b5:	int3   
   14002d7b6:	int3   
   14002d7b7:	int3   
   14002d7b8:	int3   
   14002d7b9:	int3   
   14002d7ba:	int3   
   14002d7bb:	int3   
   14002d7bc:	int3   
   14002d7bd:	int3   
   14002d7be:	int3   
   14002d7bf:	int3   
   14002d7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d7c5:	push   rdi
   14002d7c6:	sub    rsp,0x20
   14002d7ca:	mov    ebx,edx
   14002d7cc:	mov    rdi,rcx
   14002d7cf:	call   0x14002df1c
   14002d7d4:	test   bl,0x1
   14002d7d7:	je     0x14002d7e1
   14002d7d9:	mov    rcx,rdi
   14002d7dc:	call   0x140023f48
   14002d7e1:	mov    rax,rdi
   14002d7e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d7e9:	add    rsp,0x20
   14002d7ed:	pop    rdi
   14002d7ee:	ret    
   14002d7ef:	int3   
   14002d7f0:	int3   
   14002d7f1:	int3   
   14002d7f2:	int3   
   14002d7f3:	int3   
   14002d7f4:	int3   
   14002d7f5:	int3   
   14002d7f6:	int3   
   14002d7f7:	int3   
   14002d7f8:	sub    rsp,0x48
   14002d7fc:	mov    rdx,rcx
   14002d7ff:	lea    rcx,[rsp+0x20]
   14002d804:	call   0x14002d774
   14002d809:	lea    rdx,[rip+0x1b868]        # 0x140049078
   14002d810:	lea    rcx,[rsp+0x20]
   14002d815:	call   0x14002e2da
   14002d81a:	int3   
   14002d81b:	int3   
   14002d81c:	int3   
   14002d81d:	int3   
   14002d81e:	int3   
   14002d81f:	int3   
   14002d820:	int3   
   14002d821:	int3   
   14002d822:	int3   
   14002d823:	int3   
   14002d824:	sub    rsp,0x48
   14002d828:	mov    rdx,rcx
   14002d82b:	lea    rcx,[rsp+0x20]
   14002d830:	call   0x14002d774
   14002d835:	lea    rdx,[rip+0x1b8a4]        # 0x1400490e0
   14002d83c:	lea    rcx,[rsp+0x20]
   14002d841:	call   0x14002e2da
   14002d846:	int3   
   14002d847:	int3   
   14002d848:	int3   
   14002d849:	int3   
   14002d84a:	int3   
   14002d84b:	int3   
   14002d84c:	int3   
   14002d84d:	int3   
   14002d84e:	int3   
   14002d84f:	int3   
   14002d850:	mov    QWORD PTR [rsp+0x8],rbx
   14002d855:	mov    QWORD PTR [rsp+0x10],rsi
   14002d85a:	push   rdi
   14002d85b:	sub    rsp,0x20
   14002d85f:	mov    rsi,rcx
   14002d862:	lock inc DWORD PTR [rip+0x1d797]        # 0x14004b000
   14002d869:	jne    0x14002d889
   14002d86b:	lea    rbx,[rip+0x220be]        # 0x14004f930
   14002d872:	mov    edi,0x4
   14002d877:	mov    rcx,rbx
   14002d87a:	call   0x14002d970
   14002d87f:	add    rbx,0x28
   14002d883:	sub    rdi,0x1
   14002d887:	jne    0x14002d877
   14002d889:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d88e:	mov    rax,rsi
   14002d891:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d896:	add    rsp,0x20
   14002d89a:	pop    rdi
   14002d89b:	ret    
   14002d89c:	int3   
   14002d89d:	int3   
   14002d89e:	int3   
   14002d89f:	int3   
   14002d8a0:	int3   
   14002d8a1:	int3   
   14002d8a2:	int3   
   14002d8a3:	int3   
   14002d8a4:	rex push rbx
   14002d8a6:	sub    rsp,0x20
   14002d8aa:	mov    DWORD PTR [rcx],edx
   14002d8ac:	mov    rbx,rcx
   14002d8af:	test   edx,edx
   14002d8b1:	jne    0x14002d8bd
   14002d8b3:	lea    ecx,[rdx+0xc]
   14002d8b6:	call   0x14002e30a
   14002d8bb:	jmp    0x14002d8d9
   14002d8bd:	cmp    edx,0x4
   14002d8c0:	jge    0x14002d8d9
   14002d8c2:	movsxd rax,edx
   14002d8c5:	lea    rcx,[rax+rax*4]
   14002d8c9:	lea    rax,[rip+0x22060]        # 0x14004f930
   14002d8d0:	lea    rcx,[rax+rcx*8]
   14002d8d4:	call   0x14002d984
   14002d8d9:	mov    rax,rbx
   14002d8dc:	add    rsp,0x20
   14002d8e0:	pop    rbx
   14002d8e1:	ret    
   14002d8e2:	int3   
   14002d8e3:	int3   
   14002d8e4:	int3   
   14002d8e5:	int3   
   14002d8e6:	int3   
   14002d8e7:	int3   
   14002d8e8:	mov    QWORD PTR [rsp+0x8],rbx
   14002d8ed:	push   rdi
   14002d8ee:	sub    rsp,0x20
   14002d8f2:	or     eax,0xffffffff
   14002d8f5:	lock xadd DWORD PTR [rip+0x1d703],eax        # 0x14004b000
   14002d8fd:	cmp    eax,0x1
   14002d900:	jns    0x14002d920
   14002d902:	lea    rbx,[rip+0x22027]        # 0x14004f930
   14002d909:	mov    edi,0x4
   14002d90e:	mov    rcx,rbx
   14002d911:	call   0x140003940
   14002d916:	add    rbx,0x28
   14002d91a:	sub    rdi,0x1
   14002d91e:	jne    0x14002d90e
   14002d920:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d925:	add    rsp,0x20
   14002d929:	pop    rdi
   14002d92a:	ret    
   14002d92b:	int3   
   14002d92c:	int3   
   14002d92d:	int3   
   14002d92e:	int3   
   14002d92f:	int3   
   14002d930:	int3   
   14002d931:	int3   
   14002d932:	int3   
   14002d933:	int3   
   14002d934:	sub    rsp,0x28
   14002d938:	movsxd rax,DWORD PTR [rcx]
   14002d93b:	test   eax,eax
   14002d93d:	jne    0x14002d94b
   14002d93f:	lea    ecx,[rax+0xc]
   14002d942:	add    rsp,0x28
   14002d946:	jmp    0x14002e316
   14002d94b:	cmp    eax,0x4
   14002d94e:	jge    0x14002d964
   14002d950:	lea    rcx,[rax+rax*4]
   14002d954:	lea    rax,[rip+0x21fd5]        # 0x14004f930
   14002d95b:	lea    rcx,[rax+rcx*8]
   14002d95f:	call   0x14002d994
   14002d964:	add    rsp,0x28
   14002d968:	ret    
   14002d969:	int3   
   14002d96a:	int3   
   14002d96b:	int3   
   14002d96c:	int3   
   14002d96d:	int3   
   14002d96e:	int3   
   14002d96f:	int3   
   14002d970:	xor    r8d,r8d
   14002d973:	mov    edx,0xfa0
   14002d978:	jmp    0x14002d9a4
   14002d97d:	int3   
   14002d97e:	int3   
   14002d97f:	int3   
   14002d980:	int3   
   14002d981:	int3   
   14002d982:	int3   
   14002d983:	int3   
   14002d984:	rex.W jmp QWORD PTR [rip+0x477d]        # 0x140032108
   14002d98b:	int3   
   14002d98c:	int3   
   14002d98d:	int3   
   14002d98e:	int3   
   14002d98f:	int3   
   14002d990:	int3   
   14002d991:	int3   
   14002d992:	int3   
   14002d993:	int3   
   14002d994:	rex.W jmp QWORD PTR [rip+0x475d]        # 0x1400320f8
   14002d99b:	int3   
   14002d99c:	int3   
   14002d99d:	int3   
   14002d99e:	int3   
   14002d99f:	int3   
   14002d9a0:	int3   
   14002d9a1:	int3   
   14002d9a2:	int3   
   14002d9a3:	int3   
   14002d9a4:	rex.W jmp QWORD PTR [rip+0x489d]        # 0x140032248
   14002d9ab:	int3   
   14002d9ac:	int3   
   14002d9ad:	int3   
   14002d9ae:	int3   
   14002d9af:	int3   
   14002d9b0:	int3   
   14002d9b1:	int3   
   14002d9b2:	int3   
   14002d9b3:	int3   
   14002d9b4:	int3   
   14002d9b5:	int3   
   14002d9b6:	int3   
   14002d9b7:	int3   
   14002d9b8:	int3   
   14002d9b9:	int3   
   14002d9ba:	int3   
   14002d9bb:	int3   
   14002d9bc:	int3   
   14002d9bd:	int3   
   14002d9be:	int3   
   14002d9bf:	int3   
   14002d9c0:	sub    rsp,0x28
   14002d9c4:	mov    eax,0x5a4d
   14002d9c9:	cmp    WORD PTR [rip+0xfffffffffffd2630],ax        # 0x140000000
   14002d9d0:	je     0x14002d9d6
   14002d9d2:	xor    eax,eax
   14002d9d4:	jmp    0x14002da25
   14002d9d6:	movsxd rcx,DWORD PTR [rip+0xfffffffffffd265f]        # 0x14000003c
   14002d9dd:	lea    rax,[rip+0xfffffffffffd261c]        # 0x140000000
   14002d9e4:	add    rcx,rax
   14002d9e7:	cmp    DWORD PTR [rcx],0x4550
   14002d9ed:	jne    0x14002d9d2
   14002d9ef:	movzx  eax,WORD PTR [rcx+0x18]
   14002d9f3:	cmp    eax,0x10b
   14002d9f8:	je     0x14002da14
   14002d9fa:	cmp    eax,0x20b
   14002d9ff:	jne    0x14002d9d2
   14002da01:	xor    eax,eax
   14002da03:	cmp    DWORD PTR [rcx+0x84],0xe
   14002da0a:	jbe    0x14002da25
   14002da0c:	cmp    DWORD PTR [rcx+0xf8],eax
   14002da12:	jmp    0x14002da22
   14002da14:	xor    eax,eax
   14002da16:	cmp    DWORD PTR [rcx+0x74],0xe
   14002da1a:	jbe    0x14002da25
   14002da1c:	cmp    DWORD PTR [rcx+0xe8],eax
   14002da22:	setne  al
   14002da25:	mov    ecx,0x1
   14002da2a:	mov    DWORD PTR [rip+0x21fc0],eax        # 0x14004f9f0
   14002da30:	call   0x14002e3f8
   14002da35:	mov    ecx,eax
   14002da37:	call   QWORD PTR [rip+0x4b0b]        # 0x140032548
   14002da3d:	mov    rcx,QWORD PTR [rip+0x4acc]        # 0x140032510
   14002da44:	or     rax,0xffffffffffffffff
   14002da48:	mov    QWORD PTR [rip+0x228f9],rax        # 0x140050348
   14002da4f:	mov    QWORD PTR [rip+0x228fa],rax        # 0x140050350
   14002da56:	mov    eax,DWORD PTR [rip+0x22520]        # 0x14004ff7c
   14002da5c:	mov    DWORD PTR [rcx],eax
   14002da5e:	mov    rcx,QWORD PTR [rip+0x4aa3]        # 0x140032508
   14002da65:	mov    eax,DWORD PTR [rip+0x22505]        # 0x14004ff70
   14002da6b:	mov    DWORD PTR [rcx],eax
   14002da6d:	call   0x140004d20
   14002da72:	cmp    DWORD PTR [rip+0x1d59f],0x0        # 0x14004b018
   14002da79:	jne    0x14002da88
   14002da7b:	lea    rcx,[rip+0xfffffffffffd729e]        # 0x140004d20
   14002da82:	call   QWORD PTR [rip+0x4aa0]        # 0x140032528
   14002da88:	xor    eax,eax
   14002da8a:	add    rsp,0x28
   14002da8e:	ret    
   14002da8f:	int3   
   14002da90:	int3   
   14002da91:	int3   
   14002da92:	int3   
   14002da93:	int3   
   14002da94:	int3   
   14002da95:	int3   
   14002da96:	int3   
   14002da97:	int3   
   14002da98:	int3   
   14002da99:	int3   
   14002da9a:	int3   
   14002da9b:	int3   
   14002da9c:	int3   
   14002da9d:	int3   
   14002da9e:	int3   
   14002da9f:	int3   
   14002daa0:	sub    rsp,0x38
   14002daa4:	mov    eax,DWORD PTR [rip+0x224ce]        # 0x14004ff78
   14002daaa:	lea    r8,[rip+0x21f37]        # 0x14004f9e8
   14002dab1:	mov    r9d,DWORD PTR [rip+0x224bc]        # 0x14004ff74
   14002dab8:	lea    rdx,[rip+0x21f21]        # 0x14004f9e0
   14002dabf:	mov    DWORD PTR [rip+0x21f2f],eax        # 0x14004f9f4
   14002dac5:	lea    rcx,[rip+0x21f0c]        # 0x14004f9d8
   14002dacc:	lea    rax,[rip+0x21f21]        # 0x14004f9f4
   14002dad3:	mov    QWORD PTR [rsp+0x20],rax
   14002dad8:	call   QWORD PTR [rip+0x4a72]        # 0x140032550
   14002dade:	mov    DWORD PTR [rip+0x21ef8],eax        # 0x14004f9dc
   14002dae4:	add    rsp,0x38
   14002dae8:	ret    
   14002dae9:	int3   
   14002daea:	int3   
   14002daeb:	int3   
   14002daec:	int3   
   14002daed:	int3   
   14002daee:	int3   
   14002daef:	int3   
   14002daf0:	mov    rax,rsp
   14002daf3:	mov    QWORD PTR [rax+0x8],rbx
   14002daf7:	mov    QWORD PTR [rax+0x10],rsi
   14002dafb:	mov    QWORD PTR [rax+0x18],rdi
   14002daff:	mov    QWORD PTR [rax+0x20],r12
   14002db03:	push   r14
   14002db05:	sub    rsp,0x30
   14002db09:	mov    rax,QWORD PTR gs:0x30
   14002db12:	mov    rbx,QWORD PTR [rax+0x8]
   14002db16:	xor    r14d,r14d
   14002db19:	xor    eax,eax
   14002db1b:	lock cmpxchg QWORD PTR [rip+0x22814],rbx        # 0x140050338
   14002db24:	je     0x14002db42
   14002db26:	cmp    rax,rbx
   14002db29:	jne    0x14002db35
   14002db2b:	mov    ebx,0x1
   14002db30:	mov    r14d,ebx
   14002db33:	jmp    0x14002db47
   14002db35:	mov    ecx,0x3e8
   14002db3a:	call   QWORD PTR [rip+0x4620]        # 0x140032160
   14002db40:	jmp    0x14002db19
   14002db42:	mov    ebx,0x1
   14002db47:	mov    eax,DWORD PTR [rip+0x227f3]        # 0x140050340
   14002db4d:	cmp    eax,ebx
   14002db4f:	jne    0x14002db5d
   14002db51:	mov    ecx,0x1f
   14002db56:	call   0x14002e444
   14002db5b:	jmp    0x14002dbc6
   14002db5d:	mov    eax,DWORD PTR [rip+0x227dd]        # 0x140050340
   14002db63:	test   eax,eax
   14002db65:	jne    0x14002dbc0
   14002db67:	mov    DWORD PTR [rip+0x227d3],ebx        # 0x140050340
   14002db6d:	lea    r12,[rip+0x4bdc]        # 0x140032750
   14002db74:	lea    rdi,[rip+0x4bbd]        # 0x140032738
   14002db7b:	mov    QWORD PTR [rsp+0x28],rdi
   14002db80:	mov    DWORD PTR [rsp+0x20],eax
   14002db84:	cmp    rdi,r12
   14002db87:	jae    0x14002dbb2
   14002db89:	test   eax,eax
   14002db8b:	jne    0x14002dbb6
   14002db8d:	mov    rsi,QWORD PTR [rdi]
   14002db90:	test   rsi,rsi
   14002db93:	je     0x14002dba7
   14002db95:	mov    rcx,rsi
   14002db98:	mov    rax,QWORD PTR [rip+0x4b09]        # 0x1400326a8
   14002db9f:	call   rax
   14002dba1:	call   rsi
   14002dba3:	mov    DWORD PTR [rsp+0x20],eax
   14002dba7:	add    rdi,0x8
   14002dbab:	mov    QWORD PTR [rsp+0x28],rdi
   14002dbb0:	jmp    0x14002db84
   14002dbb2:	test   eax,eax
   14002dbb4:	je     0x14002dbc6
   14002dbb6:	mov    eax,0xff
   14002dbbb:	jmp    0x14002dca7
   14002dbc0:	mov    DWORD PTR [rip+0x21e0e],ebx        # 0x14004f9d4
   14002dbc6:	mov    eax,DWORD PTR [rip+0x22774]        # 0x140050340
   14002dbcc:	cmp    eax,ebx
   14002dbce:	jne    0x14002dbed
   14002dbd0:	lea    rdx,[rip+0x4b59]        # 0x140032730
   14002dbd7:	lea    rcx,[rip+0x4ada]        # 0x1400326b8
   14002dbde:	call   0x14002e60a
   14002dbe3:	mov    DWORD PTR [rip+0x22753],0x2        # 0x140050340
   14002dbed:	test   r14d,r14d
   14002dbf0:	jne    0x14002dbfb
   14002dbf2:	xor    eax,eax
   14002dbf4:	xchg   QWORD PTR [rip+0x2273d],rax        # 0x140050338
   14002dbfb:	cmp    QWORD PTR [rip+0x22755],0x0        # 0x140050358
   14002dc03:	je     0x14002dc33
   14002dc05:	lea    rcx,[rip+0x2274c]        # 0x140050358
   14002dc0c:	call   0x14002e4a0
   14002dc11:	test   eax,eax
   14002dc13:	je     0x14002dc33
   14002dc15:	mov    rbx,QWORD PTR [rip+0x2273c]        # 0x140050358
   14002dc1c:	mov    rcx,rbx
   14002dc1f:	mov    rax,QWORD PTR [rip+0x4a82]        # 0x1400326a8
   14002dc26:	call   rax
   14002dc28:	xor    r8d,r8d
   14002dc2b:	lea    edx,[r8+0x2]
   14002dc2f:	xor    ecx,ecx
   14002dc31:	call   rbx
   14002dc33:	mov    r8,QWORD PTR [rip+0x21dae]        # 0x14004f9e8
   14002dc3a:	mov    rdx,QWORD PTR [rip+0x21d9f]        # 0x14004f9e0
   14002dc41:	mov    ecx,DWORD PTR [rip+0x21d91]        # 0x14004f9d8
   14002dc47:	call   0x140023f58
   14002dc4c:	mov    DWORD PTR [rip+0x21d7e],eax        # 0x14004f9d0
   14002dc52:	cmp    DWORD PTR [rip+0x21d97],0x0        # 0x14004f9f0
   14002dc59:	jne    0x14002dc63
   14002dc5b:	mov    ecx,eax
   14002dc5d:	call   QWORD PTR [rip+0x48dd]        # 0x140032540
   14002dc63:	cmp    DWORD PTR [rip+0x21d6a],0x0        # 0x14004f9d4
   14002dc6a:	jne    0x14002dc78
   14002dc6c:	call   QWORD PTR [rip+0x48be]        # 0x140032530
   14002dc72:	mov    eax,DWORD PTR [rip+0x21d58]        # 0x14004f9d0
   14002dc78:	jmp    0x14002dca7
   14002dc7a:	mov    DWORD PTR [rip+0x21d50],eax        # 0x14004f9d0
   14002dc80:	cmp    DWORD PTR [rip+0x21d69],0x0        # 0x14004f9f0
   14002dc87:	jne    0x14002dc92
   14002dc89:	mov    ecx,eax
   14002dc8b:	call   QWORD PTR [rip+0x48a7]        # 0x140032538
   14002dc91:	int3   
   14002dc92:	cmp    DWORD PTR [rip+0x21d3b],0x0        # 0x14004f9d4
   14002dc99:	jne    0x14002dca7
   14002dc9b:	call   QWORD PTR [rip+0x488f]        # 0x140032530
   14002dca1:	mov    eax,DWORD PTR [rip+0x21d29]        # 0x14004f9d0
   14002dca7:	mov    rbx,QWORD PTR [rsp+0x40]
   14002dcac:	mov    rsi,QWORD PTR [rsp+0x48]
   14002dcb1:	mov    rdi,QWORD PTR [rsp+0x50]
   14002dcb6:	mov    r12,QWORD PTR [rsp+0x58]
   14002dcbb:	add    rsp,0x30
   14002dcbf:	pop    r14
   14002dcc1:	ret    
   14002dcc2:	int3   
   14002dcc3:	int3   
   14002dcc4:	int3   
   14002dcc5:	int3   
   14002dcc6:	int3   
   14002dcc7:	int3   
   14002dcc8:	int3   
   14002dcc9:	int3   
   14002dcca:	int3   
   14002dccb:	int3   
   14002dccc:	int3   
   14002dccd:	int3   
   14002dcce:	int3   
   14002dccf:	int3   
   14002dcd0:	sub    rsp,0x28
   14002dcd4:	call   0x14002e534
   14002dcd9:	add    rsp,0x28
   14002dcdd:	jmp    0x14002daf0
   14002dce2:	int3   
   14002dce3:	int3   
   14002dce4:	int3   
   14002dce5:	int3   
   14002dce6:	int3   
   14002dce7:	int3   
   14002dce8:	int3   
   14002dce9:	int3   
   14002dcea:	int3   
   14002dceb:	int3   
   14002dcec:	int3   
   14002dced:	int3   
   14002dcee:	int3   
   14002dcef:	int3   
   14002dcf0:	int3   
   14002dcf1:	int3   
   14002dcf2:	int3   
   14002dcf3:	int3   
   14002dcf4:	int3   
   14002dcf5:	int3   
   14002dcf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002dd00:	cmp    rcx,QWORD PTR [rip+0x1d319]        # 0x14004b020
   14002dd07:	jne    0x14002dd19
   14002dd09:	rol    rcx,0x10
   14002dd0d:	test   cx,0xffff
   14002dd12:	jne    0x14002dd15
   14002dd14:	ret    
   14002dd15:	ror    rcx,0x10
   14002dd19:	jmp    0x14002dfe0
   14002dd1e:	int3   
   14002dd1f:	int3   
   14002dd20:	int3   
   14002dd21:	int3   
   14002dd22:	int3   
   14002dd23:	int3   
   14002dd24:	mov    rax,rsp
   14002dd27:	mov    QWORD PTR [rax+0x20],r9
   14002dd2b:	mov    DWORD PTR [rax+0x18],r8d
   14002dd2f:	mov    QWORD PTR [rax+0x10],rdx
   14002dd33:	push   rbx
   14002dd34:	push   rsi
   14002dd35:	push   rdi
   14002dd36:	push   r14
   14002dd38:	sub    rsp,0x38
   14002dd3c:	mov    r14,r9
   14002dd3f:	movsxd rbx,r8d
   14002dd42:	mov    rsi,rdx
   14002dd45:	and    DWORD PTR [rax-0x38],0x0
   14002dd49:	mov    rdi,rbx
   14002dd4c:	imul   rdi,rdx
   14002dd50:	add    rdi,rcx
   14002dd53:	mov    QWORD PTR [rax+0x8],rdi
   14002dd57:	sub    ebx,0x1
   14002dd5a:	mov    DWORD PTR [rsp+0x70],ebx
   14002dd5e:	js     0x14002dd7c
   14002dd60:	sub    rdi,rsi
   14002dd63:	mov    QWORD PTR [rsp+0x60],rdi
   14002dd68:	mov    rcx,r14
   14002dd6b:	mov    rax,QWORD PTR [rip+0x4936]        # 0x1400326a8
   14002dd72:	call   rax
   14002dd74:	mov    rcx,rdi
   14002dd77:	call   r14
   14002dd7a:	jmp    0x14002dd57
   14002dd7c:	mov    DWORD PTR [rsp+0x20],0x1
   14002dd84:	add    rsp,0x38
   14002dd88:	pop    r14
   14002dd8a:	pop    rdi
   14002dd8b:	pop    rsi
   14002dd8c:	pop    rbx
   14002dd8d:	ret    
   14002dd8e:	int3   
   14002dd8f:	int3   
   14002dd90:	int3   
   14002dd91:	int3   
   14002dd92:	int3   
   14002dd93:	int3   
   14002dd94:	mov    QWORD PTR [rsp+0x10],rbx
   14002dd99:	mov    DWORD PTR [rsp+0x18],r8d
   14002dd9e:	mov    QWORD PTR [rsp+0x8],rcx
   14002dda3:	push   rsi
   14002dda4:	push   rdi
   14002dda5:	push   r14
   14002dda7:	sub    rsp,0x40
   14002ddab:	mov    rsi,r9
   14002ddae:	mov    ebx,r8d
   14002ddb1:	mov    r14,rdx
   14002ddb4:	mov    rdi,rcx
   14002ddb7:	sub    ebx,0x1
   14002ddba:	mov    DWORD PTR [rsp+0x70],ebx
   14002ddbe:	js     0x14002ddd8
   14002ddc0:	sub    rdi,r14
   14002ddc3:	mov    QWORD PTR [rsp+0x60],rdi
   14002ddc8:	mov    rcx,rsi
   14002ddcb:	call   QWORD PTR [rip+0x48d7]        # 0x1400326a8
   14002ddd1:	mov    rcx,rdi
   14002ddd4:	call   rsi
   14002ddd6:	jmp    0x14002ddb7
   14002ddd8:	jmp    0x14002ddda
   14002ddda:	mov    rbx,QWORD PTR [rsp+0x68]
   14002dddf:	add    rsp,0x40
   14002dde3:	pop    r14
   14002dde5:	pop    rdi
   14002dde6:	pop    rsi
   14002dde7:	ret    
   14002dde8:	int3   
   14002dde9:	int3   
   14002ddea:	int3   
   14002ddeb:	int3   
   14002ddec:	int3   
   14002dded:	int3   
   14002ddee:	int3   
   14002ddef:	int3   
   14002ddf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ddf5:	push   rdi
   14002ddf6:	sub    rsp,0x20
   14002ddfa:	mov    rdi,rcx
   14002ddfd:	mov    rax,QWORD PTR [rip+0x2254c]        # 0x140050350
   14002de04:	mov    QWORD PTR [rsp+0x38],rax
   14002de09:	cmp    rax,0xffffffffffffffff
   14002de0d:	jne    0x14002de26
   14002de0f:	mov    rbx,QWORD PTR [rip+0x46da]        # 0x1400324f0
   14002de16:	mov    rcx,rbx
   14002de19:	call   QWORD PTR [rip+0x4889]        # 0x1400326a8
   14002de1f:	mov    rcx,rdi
   14002de22:	call   rbx
   14002de24:	jmp    0x14002de83
   14002de26:	mov    ecx,0x8
   14002de2b:	call   0x14002e30a
   14002de30:	nop
   14002de31:	mov    rax,QWORD PTR [rip+0x22518]        # 0x140050350
   14002de38:	mov    QWORD PTR [rsp+0x38],rax
   14002de3d:	mov    rax,QWORD PTR [rip+0x22504]        # 0x140050348
   14002de44:	mov    QWORD PTR [rsp+0x40],rax
   14002de49:	lea    r8,[rsp+0x40]
   14002de4e:	lea    rdx,[rsp+0x38]
   14002de53:	mov    rcx,rdi
   14002de56:	call   0x14002e622
   14002de5b:	mov    rbx,rax
   14002de5e:	mov    rdx,QWORD PTR [rsp+0x38]
   14002de63:	mov    QWORD PTR [rip+0x224e6],rdx        # 0x140050350
   14002de6a:	mov    rdx,QWORD PTR [rsp+0x40]
   14002de6f:	mov    QWORD PTR [rip+0x224d2],rdx        # 0x140050348
   14002de76:	mov    ecx,0x8
   14002de7b:	call   0x14002e316
   14002de80:	mov    rax,rbx
   14002de83:	mov    rbx,QWORD PTR [rsp+0x30]
   14002de88:	add    rsp,0x20
   14002de8c:	pop    rdi
   14002de8d:	ret    
   14002de8e:	int3   
   14002de8f:	int3   
   14002de90:	int3   
   14002de91:	int3   
   14002de92:	int3   
   14002de93:	int3   
   14002de94:	sub    rsp,0x28
   14002de98:	call   0x14002ddf0
   14002de9d:	neg    rax
   14002dea0:	sbb    eax,eax
   14002dea2:	neg    eax
   14002dea4:	dec    eax
   14002dea6:	add    rsp,0x28
   14002deaa:	ret    
   14002deab:	int3   
   14002deac:	int3   
   14002dead:	int3   
   14002deae:	int3   
   14002deaf:	int3   
   14002deb0:	int3   
   14002deb1:	int3   
   14002deb2:	int3   
   14002deb3:	int3   
   14002deb4:	int3   
   14002deb5:	int3   
   14002deb6:	int3   
   14002deb7:	int3   
   14002deb8:	int3   
   14002deb9:	int3   
   14002deba:	int3   
   14002debb:	int3   
   14002debc:	int3   
   14002debd:	int3   
   14002debe:	int3   
   14002debf:	int3   
   14002dec0:	jmp    QWORD PTR [rip+0x45e2]        # 0x1400324a8
   14002dec6:	int3   
   14002dec7:	int3   
   14002dec8:	int3   
   14002dec9:	int3   
   14002deca:	int3   
   14002decb:	int3   
   14002decc:	int3   
   14002decd:	int3   
   14002dece:	int3   
   14002decf:	int3   
   14002ded0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ded5:	push   rdi
   14002ded6:	sub    rsp,0x20
   14002deda:	mov    ebx,edx
   14002dedc:	mov    rdi,rcx
   14002dedf:	call   QWORD PTR [rip+0x4603]        # 0x1400324e8
   14002dee5:	test   bl,0x1
   14002dee8:	je     0x14002def2
   14002deea:	mov    rcx,rdi
   14002deed:	call   0x140023f48
   14002def2:	mov    rax,rdi
   14002def5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002defa:	add    rsp,0x20
   14002defe:	pop    rdi
   14002deff:	ret    
   14002df00:	int3   
   14002df01:	int3   
   14002df02:	int3   
   14002df03:	int3   
   14002df04:	int3   
   14002df05:	int3   
   14002df06:	int3   
   14002df07:	int3   
   14002df08:	int3   
   14002df09:	int3   
   14002df0a:	int3   
   14002df0b:	int3   
   14002df0c:	int3   
   14002df0d:	int3   
   14002df0e:	int3   
   14002df0f:	int3   
   14002df10:	jmp    QWORD PTR [rip+0x459a]        # 0x1400324b0
   14002df16:	int3   
   14002df17:	int3   
   14002df18:	int3   
   14002df19:	int3   
   14002df1a:	int3   
   14002df1b:	int3   
   14002df1c:	jmp    QWORD PTR [rip+0x4596]        # 0x1400324b8
   14002df22:	int3   
   14002df23:	int3   
   14002df24:	int3   
   14002df25:	int3   
   14002df26:	int3   
   14002df27:	int3   
   14002df28:	jmp    QWORD PTR [rip+0x459a]        # 0x1400324c8
   14002df2e:	int3   
   14002df2f:	int3   
   14002df30:	int3   
   14002df31:	int3   
   14002df32:	int3   
   14002df33:	int3   
   14002df34:	int3   
   14002df35:	int3   
   14002df36:	int3   
   14002df37:	int3   
   14002df38:	int3   
   14002df39:	int3   
   14002df3a:	int3   
   14002df3b:	int3   
   14002df3c:	int3   
   14002df3d:	int3   
   14002df3e:	int3   
   14002df3f:	int3   
   14002df40:	sub    rsp,0x38
   14002df44:	mov    r9,rdx
   14002df47:	test   rdx,rdx
   14002df4a:	je     0x14002df81
   14002df4c:	xor    edx,edx
   14002df4e:	lea    rax,[rdx-0x20]
   14002df52:	div    r9
   14002df55:	cmp    rax,r8
   14002df58:	jae    0x14002df81
   14002df5a:	call   0x14002e62e
   14002df5f:	and    QWORD PTR [rsp+0x20],0x0
   14002df65:	xor    r9d,r9d
   14002df68:	xor    r8d,r8d
   14002df6b:	xor    edx,edx
   14002df6d:	xor    ecx,ecx
   14002df6f:	mov    DWORD PTR [rax],0xc
   14002df75:	call   0x14002e63c
   14002df7a:	xor    eax,eax
   14002df7c:	add    rsp,0x38
   14002df80:	ret    
   14002df81:	imul   r9,r8
   14002df85:	mov    rdx,r9
   14002df88:	add    rsp,0x38
   14002df8c:	jmp    0x14002e712
   14002df91:	int3   
   14002df92:	int3   
   14002df93:	int3   
   14002df94:	int3   
   14002df95:	int3   
   14002df96:	int3   
   14002df97:	int3   
   14002df98:	rex push rbx
   14002df9a:	sub    rsp,0x20
   14002df9e:	mov    rbx,rcx
   14002dfa1:	xor    ecx,ecx
   14002dfa3:	call   QWORD PTR [rip+0x428f]        # 0x140032238
   14002dfa9:	mov    rcx,rbx
   14002dfac:	call   QWORD PTR [rip+0x428e]        # 0x140032240
   14002dfb2:	call   QWORD PTR [rip+0x4120]        # 0x1400320d8
   14002dfb8:	mov    rcx,rax
   14002dfbb:	mov    edx,0xc0000409
   14002dfc0:	add    rsp,0x20
   14002dfc4:	pop    rbx
   14002dfc5:	rex.W jmp QWORD PTR [rip+0x421c]        # 0x1400321e8
   14002dfcc:	int3   
   14002dfcd:	int3   
   14002dfce:	int3   
   14002dfcf:	int3   
   14002dfd0:	int3   
   14002dfd1:	int3   
   14002dfd2:	int3   
   14002dfd3:	int3   
   14002dfd4:	int3   
   14002dfd5:	int3   
   14002dfd6:	int3   
   14002dfd7:	int3   
   14002dfd8:	int3   
   14002dfd9:	int3   
   14002dfda:	int3   
   14002dfdb:	int3   
   14002dfdc:	int3   
   14002dfdd:	int3   
   14002dfde:	int3   
   14002dfdf:	int3   
   14002dfe0:	mov    QWORD PTR [rsp+0x8],rcx
   14002dfe5:	sub    rsp,0x88
   14002dfec:	lea    rcx,[rip+0x21aad]        # 0x14004faa0
   14002dff3:	call   QWORD PTR [rip+0x4657]        # 0x140032650
   14002dff9:	mov    rax,QWORD PTR [rip+0x21b98]        # 0x14004fb98
   14002e000:	mov    QWORD PTR [rsp+0x48],rax
   14002e005:	xor    r8d,r8d
   14002e008:	lea    rdx,[rsp+0x50]
   14002e00d:	mov    rcx,QWORD PTR [rsp+0x48]
   14002e012:	call   QWORD PTR [rip+0x4628]        # 0x140032640
   14002e018:	mov    QWORD PTR [rsp+0x40],rax
   14002e01d:	cmp    QWORD PTR [rsp+0x40],0x0
   14002e023:	je     0x14002e067
   14002e025:	mov    QWORD PTR [rsp+0x38],0x0
   14002e02e:	lea    rax,[rsp+0x58]
   14002e033:	mov    QWORD PTR [rsp+0x30],rax
   14002e038:	lea    rax,[rsp+0x60]
   14002e03d:	mov    QWORD PTR [rsp+0x28],rax
   14002e042:	lea    rax,[rip+0x21a57]        # 0x14004faa0
   14002e049:	mov    QWORD PTR [rsp+0x20],rax
   14002e04e:	mov    r9,QWORD PTR [rsp+0x40]
   14002e053:	mov    r8,QWORD PTR [rsp+0x48]
   14002e058:	mov    rdx,QWORD PTR [rsp+0x50]
   14002e05d:	xor    ecx,ecx
   14002e05f:	call   QWORD PTR [rip+0x45e3]        # 0x140032648
   14002e065:	jmp    0x14002e08a
   14002e067:	mov    rax,QWORD PTR [rip+0x21aca]        # 0x14004fb38
   14002e06e:	mov    rax,QWORD PTR [rax]
   14002e071:	mov    QWORD PTR [rip+0x21b20],rax        # 0x14004fb98
   14002e078:	mov    rax,QWORD PTR [rip+0x21ab9]        # 0x14004fb38
   14002e07f:	add    rax,0x8
   14002e083:	mov    QWORD PTR [rip+0x21aae],rax        # 0x14004fb38
   14002e08a:	mov    rax,QWORD PTR [rip+0x21b07]        # 0x14004fb98
   14002e091:	mov    QWORD PTR [rip+0x21978],rax        # 0x14004fa10
   14002e098:	mov    rax,QWORD PTR [rsp+0x90]
   14002e0a0:	mov    QWORD PTR [rip+0x21a79],rax        # 0x14004fb20
   14002e0a7:	mov    DWORD PTR [rip+0x2194f],0xc0000409        # 0x14004fa00
   14002e0b1:	mov    DWORD PTR [rip+0x21949],0x1        # 0x14004fa04
   14002e0bb:	mov    DWORD PTR [rip+0x21953],0x3        # 0x14004fa18
   14002e0c5:	mov    eax,0x8
   14002e0ca:	imul   rax,rax,0x0
   14002e0ce:	lea    rcx,[rip+0x2194b]        # 0x14004fa20
   14002e0d5:	mov    QWORD PTR [rcx+rax*1],0x2
   14002e0dd:	mov    eax,0x8
   14002e0e2:	imul   rax,rax,0x1
   14002e0e6:	lea    rcx,[rip+0x21933]        # 0x14004fa20
   14002e0ed:	mov    rdx,QWORD PTR [rip+0x1cf2c]        # 0x14004b020
   14002e0f4:	mov    QWORD PTR [rcx+rax*1],rdx
   14002e0f8:	mov    eax,0x8
   14002e0fd:	imul   rax,rax,0x2
   14002e101:	lea    rcx,[rip+0x21918]        # 0x14004fa20
   14002e108:	mov    rdx,QWORD PTR [rip+0x1cf19]        # 0x14004b028
   14002e10f:	mov    QWORD PTR [rcx+rax*1],rdx
   14002e113:	mov    eax,0x8
   14002e118:	imul   rax,rax,0x0
   14002e11c:	mov    rcx,QWORD PTR [rip+0x1cefd]        # 0x14004b020
   14002e123:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14002e128:	mov    eax,0x8
   14002e12d:	imul   rax,rax,0x1
   14002e131:	mov    rcx,QWORD PTR [rip+0x1cef0]        # 0x14004b028
   14002e138:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14002e13d:	lea    rcx,[rip+0x5d04]        # 0x140033e48
   14002e144:	call   0x14002df98
   14002e149:	add    rsp,0x88
   14002e150:	ret    
   14002e151:	int3   
   14002e152:	int3   
   14002e153:	int3   
   14002e154:	int3   
   14002e155:	int3   
   14002e156:	int3   
   14002e157:	int3   
   14002e158:	sub    rsp,0x78
   14002e15c:	lea    rcx,[rip+0x2193d]        # 0x14004faa0
   14002e163:	call   QWORD PTR [rip+0x44e7]        # 0x140032650
   14002e169:	mov    rax,QWORD PTR [rip+0x21a28]        # 0x14004fb98
   14002e170:	mov    QWORD PTR [rsp+0x48],rax
   14002e175:	xor    r8d,r8d
   14002e178:	lea    rdx,[rsp+0x50]
   14002e17d:	mov    rcx,QWORD PTR [rsp+0x48]
   14002e182:	call   QWORD PTR [rip+0x44b8]        # 0x140032640
   14002e188:	mov    QWORD PTR [rsp+0x40],rax
   14002e18d:	cmp    QWORD PTR [rsp+0x40],0x0
   14002e193:	je     0x14002e1d7
   14002e195:	mov    QWORD PTR [rsp+0x38],0x0
   14002e19e:	lea    rax,[rsp+0x58]
   14002e1a3:	mov    QWORD PTR [rsp+0x30],rax
   14002e1a8:	lea    rax,[rsp+0x60]
   14002e1ad:	mov    QWORD PTR [rsp+0x28],rax
   14002e1b2:	lea    rax,[rip+0x218e7]        # 0x14004faa0
   14002e1b9:	mov    QWORD PTR [rsp+0x20],rax
   14002e1be:	mov    r9,QWORD PTR [rsp+0x40]
   14002e1c3:	mov    r8,QWORD PTR [rsp+0x48]
   14002e1c8:	mov    rdx,QWORD PTR [rsp+0x50]
   14002e1cd:	xor    ecx,ecx
   14002e1cf:	call   QWORD PTR [rip+0x4473]        # 0x140032648
   14002e1d5:	jmp    0x14002e1fa
   14002e1d7:	mov    rax,QWORD PTR [rip+0x2195a]        # 0x14004fb38
   14002e1de:	mov    rax,QWORD PTR [rax]
   14002e1e1:	mov    QWORD PTR [rip+0x219b0],rax        # 0x14004fb98
   14002e1e8:	mov    rax,QWORD PTR [rip+0x21949]        # 0x14004fb38
   14002e1ef:	add    rax,0x8
   14002e1f3:	mov    QWORD PTR [rip+0x2193e],rax        # 0x14004fb38
   14002e1fa:	mov    rax,QWORD PTR [rip+0x21997]        # 0x14004fb98
   14002e201:	mov    QWORD PTR [rip+0x21808],rax        # 0x14004fa10
   14002e208:	mov    DWORD PTR [rip+0x217ee],0xc0000409        # 0x14004fa00
   14002e212:	mov    DWORD PTR [rip+0x217e8],0x1        # 0x14004fa04
   14002e21c:	mov    DWORD PTR [rip+0x217f2],0x1        # 0x14004fa18
   14002e226:	mov    eax,0x8
   14002e22b:	imul   rax,rax,0x0
   14002e22f:	lea    rcx,[rip+0x217ea]        # 0x14004fa20
   14002e236:	mov    QWORD PTR [rcx+rax*1],0x8
   14002e23e:	lea    rcx,[rip+0x5c03]        # 0x140033e48
   14002e245:	call   0x14002df98
   14002e24a:	add    rsp,0x78
   14002e24e:	ret    
   14002e24f:	int3   
   14002e250:	int3   
   14002e251:	int3   
   14002e252:	int3   
   14002e253:	int3   
   14002e254:	int3   
   14002e255:	int3   
   14002e256:	int3   
   14002e257:	int3   
   14002e258:	mov    rax,rsp
   14002e25b:	mov    QWORD PTR [rax+0x18],rbx
   14002e25f:	mov    QWORD PTR [rax+0x20],rsi
   14002e263:	mov    QWORD PTR [rax+0x10],rdx
   14002e267:	mov    QWORD PTR [rax+0x8],rcx
   14002e26b:	push   rdi
   14002e26c:	push   r14
   14002e26e:	push   r15
   14002e270:	sub    rsp,0x30
   14002e274:	mov    r14,r9
   14002e277:	mov    r15d,r8d
   14002e27a:	mov    rsi,rdx
   14002e27d:	mov    rdi,rcx
   14002e280:	xor    ebx,ebx
   14002e282:	mov    DWORD PTR [rax-0x28],ebx
   14002e285:	mov    DWORD PTR [rax-0x24],ebx
   14002e288:	mov    DWORD PTR [rsp+0x20],ebx
   14002e28c:	cmp    ebx,r15d
   14002e28f:	jge    0x14002e2ac
   14002e291:	mov    rcx,r14
   14002e294:	call   QWORD PTR [rip+0x440e]        # 0x1400326a8
   14002e29a:	mov    rcx,rdi
   14002e29d:	call   r14
   14002e2a0:	add    rdi,rsi
   14002e2a3:	mov    QWORD PTR [rsp+0x50],rdi
   14002e2a8:	inc    ebx
   14002e2aa:	jmp    0x14002e288
   14002e2ac:	mov    DWORD PTR [rsp+0x24],0x1
   14002e2b4:	mov    rbx,QWORD PTR [rsp+0x60]
   14002e2b9:	mov    rsi,QWORD PTR [rsp+0x68]
   14002e2be:	add    rsp,0x30
   14002e2c2:	pop    r15
   14002e2c4:	pop    r14
   14002e2c6:	pop    rdi
   14002e2c7:	ret    
   14002e2c8:	int3   
   14002e2c9:	int3   
   14002e2ca:	int3   
   14002e2cb:	int3   
   14002e2cc:	int3   
   14002e2cd:	int3   
   14002e2ce:	jmp    QWORD PTR [rip+0x42cc]        # 0x1400325a0
   14002e2d4:	int3   
   14002e2d5:	int3   
   14002e2d6:	int3   
   14002e2d7:	int3   
   14002e2d8:	int3   
   14002e2d9:	int3   
   14002e2da:	jmp    QWORD PTR [rip+0x42b0]        # 0x140032590
   14002e2e0:	int3   
   14002e2e1:	int3   
   14002e2e2:	int3   
   14002e2e3:	int3   
   14002e2e4:	int3   
   14002e2e5:	int3   
   14002e2e6:	jmp    QWORD PTR [rip+0x429c]        # 0x140032588
   14002e2ec:	int3   
   14002e2ed:	int3   
   14002e2ee:	int3   
   14002e2ef:	int3   
   14002e2f0:	int3   
   14002e2f1:	int3   
   14002e2f2:	jmp    QWORD PTR [rip+0x4288]        # 0x140032580
   14002e2f8:	int3   
   14002e2f9:	int3   
   14002e2fa:	int3   
   14002e2fb:	int3   
   14002e2fc:	int3   
   14002e2fd:	int3   
   14002e2fe:	jmp    QWORD PTR [rip+0x4274]        # 0x140032578
   14002e304:	int3   
   14002e305:	int3   
   14002e306:	int3   
   14002e307:	int3   
   14002e308:	int3   
   14002e309:	int3   
   14002e30a:	jmp    QWORD PTR [rip+0x4260]        # 0x140032570
   14002e310:	int3   
   14002e311:	int3   
   14002e312:	int3   
   14002e313:	int3   
   14002e314:	int3   
   14002e315:	int3   
   14002e316:	jmp    QWORD PTR [rip+0x424c]        # 0x140032568
   14002e31c:	int3   
   14002e31d:	int3   
   14002e31e:	int3   
   14002e31f:	int3   
   14002e320:	int3   
   14002e321:	int3   
   14002e322:	int3   
   14002e323:	int3   
   14002e324:	int3   
   14002e325:	int3   
   14002e326:	int3   
   14002e327:	int3   
   14002e328:	int3   
   14002e329:	int3   
   14002e32a:	int3   
   14002e32b:	int3   
   14002e32c:	int3   
   14002e32d:	int3   
   14002e32e:	int3   
   14002e32f:	int3   
   14002e330:	sub    rsp,0x28
   14002e334:	mov    rax,QWORD PTR [rcx]
   14002e337:	cmp    DWORD PTR [rax],0xe06d7363
   14002e33d:	jne    0x14002e362
   14002e33f:	cmp    DWORD PTR [rax+0x18],0x4
   14002e343:	jne    0x14002e362
   14002e345:	mov    ecx,DWORD PTR [rax+0x20]
   14002e348:	lea    eax,[rcx-0x19930520]
   14002e34e:	cmp    eax,0x2
   14002e351:	jbe    0x14002e35b
   14002e353:	cmp    ecx,0x1994000
   14002e359:	jne    0x14002e362
   14002e35b:	call   QWORD PTR [rip+0x419f]        # 0x140032500
   14002e361:	int3   
   14002e362:	xor    eax,eax
   14002e364:	add    rsp,0x28
   14002e368:	ret    
   14002e369:	int3   
   14002e36a:	int3   
   14002e36b:	int3   
   14002e36c:	int3   
   14002e36d:	int3   
   14002e36e:	int3   
   14002e36f:	int3   
   14002e370:	sub    rsp,0x28
   14002e374:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14002e330
   14002e37b:	call   QWORD PTR [rip+0x3eb7]        # 0x140032238
   14002e381:	xor    eax,eax
   14002e383:	add    rsp,0x28
   14002e387:	ret    
   14002e388:	int3   
   14002e389:	int3   
   14002e38a:	int3   
   14002e38b:	int3   
   14002e38c:	int3   
   14002e38d:	int3   
   14002e38e:	jmp    QWORD PTR [rip+0x41cc]        # 0x140032560
   14002e394:	int3   
   14002e395:	int3   
   14002e396:	int3   
   14002e397:	int3   
   14002e398:	int3   
   14002e399:	int3   
   14002e39a:	int3   
   14002e39b:	int3   
   14002e39c:	sub    rsp,0x18
   14002e3a0:	xor    edx,edx
   14002e3a2:	lea    rax,[rcx-0x1]
   14002e3a6:	cmp    rax,0xfffffffffffffffd
   14002e3aa:	ja     0x14002e3e8
   14002e3ac:	mov    eax,0x5a4d
   14002e3b1:	cmp    WORD PTR [rcx],ax
   14002e3b4:	jne    0x14002e3e0
   14002e3b6:	cmp    DWORD PTR [rcx+0x3c],edx
   14002e3b9:	jl     0x14002e3e0
   14002e3bb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14002e3c2:	jae    0x14002e3e0
   14002e3c4:	movsxd rax,DWORD PTR [rcx+0x3c]
   14002e3c8:	add    rax,rcx
   14002e3cb:	mov    QWORD PTR [rsp],rax
   14002e3cf:	cmp    DWORD PTR [rax],0x4550
   14002e3d5:	cmovne rax,rdx
   14002e3d9:	mov    rdx,rax
   14002e3dc:	mov    QWORD PTR [rsp],rax
   14002e3e0:	jmp    0x14002e3e8
   14002e3e2:	xor    edx,edx
   14002e3e4:	mov    QWORD PTR [rsp],rdx
   14002e3e8:	mov    rax,rdx
   14002e3eb:	add    rsp,0x18
   14002e3ef:	ret    
   14002e3f0:	int3   
   14002e3f1:	int3   
   14002e3f2:	int3   
   14002e3f3:	int3   
   14002e3f4:	int3   
   14002e3f5:	int3   
   14002e3f6:	int3   
   14002e3f7:	int3   
   14002e3f8:	rex push rbx
   14002e3fa:	sub    rsp,0x20
   14002e3fe:	mov    ebx,ecx
   14002e400:	xor    ecx,ecx
   14002e402:	call   QWORD PTR [rip+0x3ea8]        # 0x1400322b0
   14002e408:	test   rax,rax
   14002e40b:	je     0x14002e435
   14002e40d:	mov    rcx,rax
   14002e410:	call   0x14002e39c
   14002e415:	test   rax,rax
   14002e418:	je     0x14002e435
   14002e41a:	mov    ecx,0x2
   14002e41f:	cmp    WORD PTR [rax+0x5c],cx
   14002e423:	jne    0x14002e429
   14002e425:	mov    eax,ecx
   14002e427:	jmp    0x14002e437
   14002e429:	cmp    WORD PTR [rax+0x5c],0x3
   14002e42e:	mov    eax,0x1
   14002e433:	je     0x14002e437
   14002e435:	mov    eax,ebx
   14002e437:	add    rsp,0x20
   14002e43b:	pop    rbx
   14002e43c:	ret    
   14002e43d:	int3   
   14002e43e:	int3   
   14002e43f:	int3   
   14002e440:	int3   
   14002e441:	int3   
   14002e442:	int3   
   14002e443:	int3   
   14002e444:	jmp    QWORD PTR [rip+0x410e]        # 0x140032558
   14002e44a:	int3   
   14002e44b:	int3   
   14002e44c:	int3   
   14002e44d:	int3   
   14002e44e:	int3   
   14002e44f:	int3   
   14002e450:	movsxd r8,DWORD PTR [rcx+0x3c]
   14002e454:	xor    r9d,r9d
   14002e457:	add    r8,rcx
   14002e45a:	mov    r10,rdx
   14002e45d:	movzx  eax,WORD PTR [r8+0x14]
   14002e462:	movzx  r11d,WORD PTR [r8+0x6]
   14002e467:	add    rax,0x18
   14002e46b:	add    rax,r8
   14002e46e:	test   r11d,r11d
   14002e471:	je     0x14002e491
   14002e473:	mov    edx,DWORD PTR [rax+0xc]
   14002e476:	cmp    r10,rdx
   14002e479:	jb     0x14002e485
   14002e47b:	mov    ecx,DWORD PTR [rax+0x8]
   14002e47e:	add    ecx,edx
   14002e480:	cmp    r10,rcx
   14002e483:	jb     0x14002e493
   14002e485:	inc    r9d
   14002e488:	add    rax,0x28
   14002e48c:	cmp    r9d,r11d
   14002e48f:	jb     0x14002e473
   14002e491:	xor    eax,eax
   14002e493:	ret    
   14002e494:	int3   
   14002e495:	int3   
   14002e496:	int3   
   14002e497:	int3   
   14002e498:	int3   
   14002e499:	int3   
   14002e49a:	int3   
   14002e49b:	int3   
   14002e49c:	int3   
   14002e49d:	int3   
   14002e49e:	int3   
   14002e49f:	int3   
   14002e4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002e4a5:	push   rdi
   14002e4a6:	sub    rsp,0x20
   14002e4aa:	mov    rbx,rcx
   14002e4ad:	lea    rdi,[rip+0xfffffffffffd1b4c]        # 0x140000000
   14002e4b4:	mov    rcx,rdi
   14002e4b7:	call   0x14002e500
   14002e4bc:	test   eax,eax
   14002e4be:	je     0x14002e4e2
   14002e4c0:	sub    rbx,rdi
   14002e4c3:	mov    rdx,rbx
   14002e4c6:	mov    rcx,rdi
   14002e4c9:	call   0x14002e450
   14002e4ce:	test   rax,rax
   14002e4d1:	je     0x14002e4e2
   14002e4d3:	mov    eax,DWORD PTR [rax+0x24]
   14002e4d6:	shr    eax,0x1f
   14002e4d9:	not    eax
   14002e4db:	and    eax,0x1
   14002e4de:	jmp    0x14002e4e2
   14002e4e0:	xor    eax,eax
   14002e4e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e4e7:	add    rsp,0x20
   14002e4eb:	pop    rdi
   14002e4ec:	ret    
   14002e4ed:	int3   
   14002e4ee:	int3   
   14002e4ef:	int3   
   14002e4f0:	int3   
   14002e4f1:	int3   
   14002e4f2:	int3   
   14002e4f3:	int3   
   14002e4f4:	int3   
   14002e4f5:	int3   
   14002e4f6:	int3   
   14002e4f7:	int3   
   14002e4f8:	int3   
   14002e4f9:	int3   
   14002e4fa:	int3   
   14002e4fb:	int3   
   14002e4fc:	int3   
   14002e4fd:	int3   
   14002e4fe:	int3   
   14002e4ff:	int3   
   14002e500:	mov    rax,rcx
   14002e503:	mov    ecx,0x5a4d
   14002e508:	cmp    WORD PTR [rax],cx
   14002e50b:	je     0x14002e510
   14002e50d:	xor    eax,eax
   14002e50f:	ret    
   14002e510:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002e514:	add    rcx,rax
   14002e517:	xor    eax,eax
   14002e519:	cmp    DWORD PTR [rcx],0x4550
   14002e51f:	jne    0x14002e52d
   14002e521:	mov    edx,0x20b
   14002e526:	cmp    WORD PTR [rcx+0x18],dx
   14002e52a:	sete   al
   14002e52d:	ret    
   14002e52e:	int3   
   14002e52f:	int3   
   14002e530:	int3   
   14002e531:	int3   
   14002e532:	int3   
   14002e533:	int3   
   14002e534:	mov    QWORD PTR [rsp+0x20],rbx
   14002e539:	push   rbp
   14002e53a:	mov    rbp,rsp
   14002e53d:	sub    rsp,0x20
   14002e541:	and    QWORD PTR [rbp+0x18],0x0
   14002e546:	movabs rbx,0x2b992ddfa232
   14002e550:	mov    rax,QWORD PTR [rip+0x1cac9]        # 0x14004b020
   14002e557:	cmp    rax,rbx
   14002e55a:	jne    0x14002e5ef
   14002e560:	lea    rcx,[rbp+0x18]
   14002e564:	call   QWORD PTR [rip+0x3bfe]        # 0x140032168
   14002e56a:	mov    rax,QWORD PTR [rbp+0x18]
   14002e56e:	mov    QWORD PTR [rbp+0x10],rax
   14002e572:	call   QWORD PTR [rip+0x3c60]        # 0x1400321d8
   14002e578:	mov    eax,eax
   14002e57a:	xor    QWORD PTR [rbp+0x10],rax
   14002e57e:	call   QWORD PTR [rip+0x3c4c]        # 0x1400321d0
   14002e584:	mov    eax,eax
   14002e586:	xor    QWORD PTR [rbp+0x10],rax
   14002e58a:	call   QWORD PTR [rip+0x3c38]        # 0x1400321c8
   14002e590:	mov    eax,eax
   14002e592:	shl    rax,0x18
   14002e596:	xor    QWORD PTR [rbp+0x10],rax
   14002e59a:	call   QWORD PTR [rip+0x3c28]        # 0x1400321c8
   14002e5a0:	mov    eax,eax
   14002e5a2:	lea    rcx,[rbp+0x10]
   14002e5a6:	xor    rax,QWORD PTR [rbp+0x10]
   14002e5aa:	xor    rax,rcx
   14002e5ad:	lea    rcx,[rbp+0x20]
   14002e5b1:	mov    QWORD PTR [rbp+0x10],rax
   14002e5b5:	call   QWORD PTR [rip+0x3c25]        # 0x1400321e0
   14002e5bb:	mov    eax,DWORD PTR [rbp+0x20]
   14002e5be:	movabs rcx,0xffffffffffff
   14002e5c8:	shl    rax,0x20
   14002e5cc:	xor    rax,QWORD PTR [rbp+0x20]
   14002e5d0:	xor    rax,QWORD PTR [rbp+0x10]
   14002e5d4:	and    rax,rcx
   14002e5d7:	movabs rcx,0x2b992ddfa233
   14002e5e1:	cmp    rax,rbx
   14002e5e4:	cmove  rax,rcx
   14002e5e8:	mov    QWORD PTR [rip+0x1ca31],rax        # 0x14004b020
   14002e5ef:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e5f4:	not    rax
   14002e5f7:	mov    QWORD PTR [rip+0x1ca2a],rax        # 0x14004b028
   14002e5fe:	add    rsp,0x20
   14002e602:	pop    rbp
   14002e603:	ret    
   14002e604:	int3   
   14002e605:	int3   
   14002e606:	int3   
   14002e607:	int3   
   14002e608:	int3   
   14002e609:	int3   
   14002e60a:	jmp    QWORD PTR [rip+0x3f10]        # 0x140032520
   14002e610:	int3   
   14002e611:	int3   
   14002e612:	int3   
   14002e613:	int3   
   14002e614:	int3   
   14002e615:	int3   
   14002e616:	jmp    QWORD PTR [rip+0x3efc]        # 0x140032518
   14002e61c:	int3   
   14002e61d:	int3   
   14002e61e:	int3   
   14002e61f:	int3   
   14002e620:	int3   
   14002e621:	int3   
   14002e622:	jmp    QWORD PTR [rip+0x3ed0]        # 0x1400324f8
   14002e628:	int3   
   14002e629:	int3   
   14002e62a:	int3   
   14002e62b:	int3   
   14002e62c:	int3   
   14002e62d:	int3   
   14002e62e:	jmp    QWORD PTR [rip+0x3eac]        # 0x1400324e0
   14002e634:	int3   
   14002e635:	int3   
   14002e636:	int3   
   14002e637:	int3   
   14002e638:	int3   
   14002e639:	int3   
   14002e63a:	int3   
   14002e63b:	int3   
   14002e63c:	jmp    0x14002e648
   14002e641:	int3   
   14002e642:	int3   
   14002e643:	int3   
   14002e644:	int3   
   14002e645:	int3   
   14002e646:	int3   
   14002e647:	int3   
   14002e648:	rex push rbx
   14002e64a:	sub    rsp,0x540
   14002e651:	mov    rax,QWORD PTR [rip+0x1c9c8]        # 0x14004b020
   14002e658:	xor    rax,rsp
   14002e65b:	mov    QWORD PTR [rsp+0x530],rax
   14002e663:	lea    rcx,[rsp+0x60]
   14002e668:	call   QWORD PTR [rip+0x3fe2]        # 0x140032650
   14002e66e:	mov    rbx,QWORD PTR [rsp+0x158]
   14002e676:	lea    rdx,[rsp+0x40]
   14002e67b:	mov    rcx,rbx
   14002e67e:	xor    r8d,r8d
   14002e681:	call   QWORD PTR [rip+0x3fb9]        # 0x140032640
   14002e687:	test   rax,rax
   14002e68a:	je     0x14002e6c5
   14002e68c:	and    QWORD PTR [rsp+0x38],0x0
   14002e692:	lea    rcx,[rsp+0x48]
   14002e697:	mov    rdx,QWORD PTR [rsp+0x40]
   14002e69c:	mov    r9,rax
   14002e69f:	mov    QWORD PTR [rsp+0x30],rcx
   14002e6a4:	mov    r8,rbx
   14002e6a7:	lea    rcx,[rsp+0x50]
   14002e6ac:	mov    QWORD PTR [rsp+0x28],rcx
   14002e6b1:	lea    rcx,[rsp+0x60]
   14002e6b6:	mov    QWORD PTR [rsp+0x20],rcx
   14002e6bb:	xor    ecx,ecx
   14002e6bd:	call   QWORD PTR [rip+0x3f85]        # 0x140032648
   14002e6c3:	jmp    0x14002e6e5
   14002e6c5:	mov    rax,QWORD PTR [rsp+0x548]
   14002e6cd:	mov    QWORD PTR [rsp+0x158],rax
   14002e6d5:	lea    rax,[rsp+0x548]
   14002e6dd:	mov    QWORD PTR [rsp+0xf8],rax
   14002e6e5:	lea    rcx,[rip+0x576c]        # 0x140033e58
   14002e6ec:	call   QWORD PTR [rip+0x3c06]        # 0x1400322f8
   14002e6f2:	mov    rcx,QWORD PTR [rsp+0x530]
   14002e6fa:	xor    rcx,rsp
   14002e6fd:	call   0x14002dd00
   14002e702:	add    rsp,0x540
   14002e709:	pop    rbx
   14002e70a:	ret    
   14002e70b:	int3   
   14002e70c:	int3   
   14002e70d:	int3   
   14002e70e:	int3   
   14002e70f:	int3   
   14002e710:	int3   
   14002e711:	int3   
   14002e712:	jmp    QWORD PTR [rip+0x3dc0]        # 0x1400324d8
   14002e718:	int3   
   14002e719:	int3   
   14002e71a:	int3   
   14002e71b:	int3   
   14002e71c:	int3   
   14002e71d:	int3   
   14002e71e:	int3   
   14002e71f:	int3   
   14002e720:	int3   
   14002e721:	int3   
   14002e722:	int3   
   14002e723:	int3   
   14002e724:	int3   
   14002e725:	int3   
   14002e726:	int3   
   14002e727:	int3   
   14002e728:	sub    rsp,0x28
   14002e72c:	mov    r8,QWORD PTR [r9+0x38]
   14002e730:	mov    rcx,rdx
   14002e733:	mov    rdx,r9
   14002e736:	call   0x14002e74c
   14002e73b:	mov    eax,0x1
   14002e740:	add    rsp,0x28
   14002e744:	ret    
   14002e745:	int3   
   14002e746:	int3   
   14002e747:	int3   
   14002e748:	int3   
   14002e749:	int3   
   14002e74a:	int3   
   14002e74b:	int3   
   14002e74c:	rex push rbx
   14002e74e:	sub    rsp,0x20
   14002e752:	mov    r11d,DWORD PTR [r8]
   14002e755:	mov    rbx,rdx
   14002e758:	and    r11d,0xfffffff8
   14002e75c:	mov    r9,rcx
   14002e75f:	test   BYTE PTR [r8],0x4
   14002e763:	mov    r10,rcx
   14002e766:	je     0x14002e77b
   14002e768:	mov    eax,DWORD PTR [r8+0x8]
   14002e76c:	movsxd r10,DWORD PTR [r8+0x4]
   14002e770:	neg    eax
   14002e772:	add    r10,rcx
   14002e775:	movsxd rcx,eax
   14002e778:	and    r10,rcx
   14002e77b:	movsxd rax,r11d
   14002e77e:	mov    rdx,QWORD PTR [rax+r10*1]
   14002e782:	mov    rax,QWORD PTR [rbx+0x10]
   14002e786:	mov    ecx,DWORD PTR [rax+0x8]
   14002e789:	add    rcx,QWORD PTR [rbx+0x8]
   14002e78d:	test   BYTE PTR [rcx+0x3],0xf
   14002e791:	je     0x14002e79f
   14002e793:	movzx  eax,BYTE PTR [rcx+0x3]
   14002e797:	and    eax,0xfffffff0
   14002e79a:	cdqe   
   14002e79c:	add    r9,rax
   14002e79f:	xor    r9,rdx
   14002e7a2:	mov    rcx,r9
   14002e7a5:	add    rsp,0x20
   14002e7a9:	pop    rbx
   14002e7aa:	jmp    0x14002dd00
   14002e7af:	int3   
   14002e7b0:	int3   
   14002e7b1:	int3   
   14002e7b2:	int3   
   14002e7b3:	int3   
   14002e7b4:	int3   
   14002e7b5:	int3   
   14002e7b6:	int3   
   14002e7b7:	int3   
   14002e7b8:	int3   
   14002e7b9:	int3   
   14002e7ba:	int3   
   14002e7bb:	int3   
   14002e7bc:	int3   
   14002e7bd:	int3   
   14002e7be:	int3   
   14002e7bf:	int3   
   14002e7c0:	jmp    QWORD PTR [rip+0x3a4a]        # 0x140032210
   14002e7c6:	int3   
   14002e7c7:	int3   
   14002e7c8:	int3   
   14002e7c9:	int3   
   14002e7ca:	int3   
   14002e7cb:	int3   
   14002e7cc:	mov    rax,rsp
   14002e7cf:	mov    QWORD PTR [rax+0x8],rbx
   14002e7d3:	mov    QWORD PTR [rax+0x10],rbp
   14002e7d7:	mov    QWORD PTR [rax+0x18],rsi
   14002e7db:	mov    QWORD PTR [rax+0x20],rdi
   14002e7df:	push   r14
   14002e7e1:	sub    rsp,0x20
   14002e7e5:	mov    rbx,QWORD PTR [r9+0x38]
   14002e7e9:	mov    rsi,rdx
   14002e7ec:	mov    r14,r8
   14002e7ef:	mov    rbp,rcx
   14002e7f2:	mov    rdx,r9
   14002e7f5:	mov    rcx,rsi
   14002e7f8:	mov    rdi,r9
   14002e7fb:	lea    r8,[rbx+0x4]
   14002e7ff:	call   0x14002e74c
   14002e804:	mov    r11d,DWORD PTR [rbx+0x4]
   14002e808:	mov    r8d,0x1
   14002e80e:	mov    r10d,DWORD PTR [rbp+0x4]
   14002e812:	mov    eax,r11d
   14002e815:	and    eax,r8d
   14002e818:	and    r11d,0x2
   14002e81c:	and    r10b,0x66
   14002e820:	cmove  r11d,eax
   14002e824:	test   r11d,r11d
   14002e827:	je     0x14002e83d
   14002e829:	mov    r9,rdi
   14002e82c:	mov    r8,r14
   14002e82f:	mov    rdx,rsi
   14002e832:	mov    rcx,rbp
   14002e835:	call   0x14002e2e6
   14002e83a:	mov    r8d,eax
   14002e83d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e842:	mov    eax,r8d
   14002e845:	mov    rbp,QWORD PTR [rsp+0x38]
   14002e84a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002e84f:	mov    rdi,QWORD PTR [rsp+0x48]
   14002e854:	add    rsp,0x20
   14002e858:	pop    r14
   14002e85a:	ret    
   14002e85b:	int3   
   14002e85c:	int3   
   14002e85d:	int3   
   14002e85e:	int3   
   14002e85f:	int3   
   14002e860:	int3   
   14002e861:	int3   
   14002e862:	jmp    QWORD PTR [rip+0x3c30]        # 0x140032498
   14002e868:	int3   
   14002e869:	int3   
   14002e86a:	int3   
   14002e86b:	int3   
   14002e86c:	int3   
   14002e86d:	int3   
   14002e86e:	int3   
   14002e86f:	int3   
   14002e870:	int3   
   14002e871:	int3   
   14002e872:	int3   
   14002e873:	int3   
   14002e874:	int3   
   14002e875:	int3   
   14002e876:	jmp    QWORD PTR [rip+0x3c14]        # 0x140032490
   14002e87c:	int3   
   14002e87d:	int3   
   14002e87e:	int3   
   14002e87f:	int3   
   14002e880:	int3   
   14002e881:	int3   
   14002e882:	jmp    QWORD PTR [rip+0x3d10]        # 0x140032598
   14002e888:	int3   
   14002e889:	int3   
   14002e88a:	int3   
   14002e88b:	int3   
   14002e88c:	int3   
   14002e88d:	int3   
   14002e88e:	int3   
   14002e88f:	int3   
   14002e890:	int3   
   14002e891:	int3   
   14002e892:	int3   
   14002e893:	int3   
   14002e894:	int3   
   14002e895:	int3   
   14002e896:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e8a0:	jmp    rax
   14002e8a2:	int3   
   14002e8a3:	int3   
   14002e8a4:	int3   
   14002e8a5:	int3   
   14002e8a6:	int3   
   14002e8a7:	int3   
   14002e8a8:	int3   
   14002e8a9:	int3   
   14002e8aa:	int3   
   14002e8ab:	int3   
   14002e8ac:	int3   
   14002e8ad:	int3   
   14002e8ae:	int3   
   14002e8af:	int3   
   14002e8b0:	int3   
   14002e8b1:	int3   
   14002e8b2:	int3   
   14002e8b3:	int3   
   14002e8b4:	int3   
   14002e8b5:	int3   
   14002e8b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e8c0:	sub    rsp,0x10
   14002e8c4:	mov    QWORD PTR [rsp],r10
   14002e8c8:	mov    QWORD PTR [rsp+0x8],r11
   14002e8cd:	xor    r11,r11
   14002e8d0:	lea    r10,[rsp+0x18]
   14002e8d5:	sub    r10,rax
   14002e8d8:	cmovb  r10,r11
   14002e8dc:	mov    r11,QWORD PTR gs:0x10
   14002e8e5:	cmp    r10,r11
   14002e8e8:	jae    0x14002e8ff
   14002e8ea:	and    r10w,0xf000
   14002e8f0:	lea    r11,[r11-0x1000]
   14002e8f7:	test   BYTE PTR [r11],r11b
   14002e8fa:	cmp    r10,r11
   14002e8fd:	jne    0x14002e8f0
   14002e8ff:	mov    r10,QWORD PTR [rsp]
   14002e903:	mov    r11,QWORD PTR [rsp+0x8]
   14002e908:	add    rsp,0x10
   14002e90c:	ret    
   14002e90d:	int3   
   14002e90e:	int3   
   14002e90f:	int3   
   14002e910:	int3   
   14002e911:	int3   
   14002e912:	int3   
   14002e913:	int3   
   14002e914:	int3   
   14002e915:	int3   
   14002e916:	mov    QWORD PTR [rsp+0x10],rdx
   14002e91b:	push   rbp
   14002e91c:	sub    rsp,0x20
   14002e920:	mov    rbp,rdx
   14002e923:	mov    rcx,QWORD PTR [rbp+0x68]
   14002e927:	mov    QWORD PTR [rbp+0x68],rcx
   14002e92b:	xor    eax,eax
   14002e92d:	add    rcx,0x1
   14002e931:	je     0x14002e945
   14002e933:	cmp    rcx,0xffffffffffffffff
   14002e937:	ja     0x14002e940
   14002e939:	call   0x140023f10
   14002e93e:	jmp    0x14002e945
   14002e940:	call   0x14000203c
   14002e945:	mov    QWORD PTR [rbp+0x78],rax
   14002e949:	lea    rax,[rip+0xfffffffffffd3543]        # 0x140001e93
   14002e950:	add    rsp,0x20
   14002e954:	pop    rbp
   14002e955:	ret    
   14002e956:	int3   
   14002e957:	mov    QWORD PTR [rsp+0x10],rdx
   14002e95c:	push   rbp
   14002e95d:	sub    rsp,0x20
   14002e961:	mov    rbp,rdx
   14002e964:	xor    r8d,r8d
   14002e967:	mov    dl,0x1
   14002e969:	mov    rcx,QWORD PTR [rbp+0x60]
   14002e96d:	call   0x140001abc
   14002e972:	xor    edx,edx
   14002e974:	xor    ecx,ecx
   14002e976:	call   0x14002e2da
   14002e97b:	nop
   14002e97c:	int3   
   14002e97d:	int3   
   14002e97e:	int3   
   14002e97f:	int3   
   14002e980:	int3   
   14002e981:	int3   
   14002e982:	lea    rcx,[rdx+0x48]
   14002e989:	jmp    0x1400036a8
   14002e98e:	lea    rcx,[rdx+0x70]
   14002e995:	jmp    0x1400036a8
   14002e99a:	lea    rcx,[rdx+0x38]
   14002e9a1:	jmp    0x140017678
   14002e9a6:	mov    QWORD PTR [rsp+0x10],rdx
   14002e9ab:	push   rbp
   14002e9ac:	sub    rsp,0x30
   14002e9b0:	mov    rbp,rdx
   14002e9b3:	mov    rcx,QWORD PTR [rbp+0x68]
   14002e9b7:	call   0x140001fd4
   14002e9bc:	mov    DWORD PTR [rbp+0x30],eax
   14002e9bf:	lea    rax,[rip+0xfffffffffffd3f06]        # 0x1400028cc
   14002e9c6:	add    rsp,0x30
   14002e9ca:	pop    rbp
   14002e9cb:	ret    
   14002e9cc:	int3   
   14002e9cd:	int3   
   14002e9ce:	int3   
   14002e9cf:	int3   
   14002e9d0:	int3   
   14002e9d1:	int3   
   14002e9d2:	int3   
   14002e9d3:	mov    QWORD PTR [rsp+0x10],rdx
   14002e9d8:	push   rbp
   14002e9d9:	sub    rsp,0x20
   14002e9dd:	mov    rbp,rdx
   14002e9e0:	mov    rcx,QWORD PTR [rbp+0x28]
   14002e9e4:	call   0x140029e84
   14002e9e9:	mov    DWORD PTR [rbp+0x48],eax
   14002e9ec:	lea    rax,[rip+0xfffffffffffd4103]        # 0x140002af6
   14002e9f3:	add    rsp,0x20
   14002e9f7:	pop    rbp
   14002e9f8:	ret    
   14002e9f9:	int3   
   14002e9fa:	int3   
   14002e9fb:	int3   
   14002e9fc:	int3   
   14002e9fd:	int3   
   14002e9fe:	int3   
   14002e9ff:	int3   
   14002ea00:	lea    rcx,[rdx+0x40]
   14002ea07:	jmp    0x1400038b0
   14002ea0c:	int3   
   14002ea0d:	int3   
   14002ea0e:	int3   
   14002ea0f:	int3   
   14002ea10:	int3   
   14002ea11:	int3   
   14002ea12:	lea    rcx,[rdx+0x78]
   14002ea19:	jmp    0x1400038b0
   14002ea1e:	lea    rcx,[rdx+0xb8]
   14002ea25:	jmp    0x1400036e0
   14002ea2a:	lea    rcx,[rdx+0x90]
   14002ea31:	jmp    0x140003674
   14002ea36:	lea    rcx,[rdx+0xd0]
   14002ea3d:	jmp    0x1400036e0
   14002ea42:	mov    QWORD PTR [rsp+0x10],rdx
   14002ea47:	push   rbx
   14002ea48:	push   rbp
   14002ea49:	push   rdi
   14002ea4a:	sub    rsp,0x70
   14002ea4e:	mov    rbp,rdx
   14002ea51:	lea    rcx,[rip+0x1c620]        # 0x14004b078
   14002ea58:	mov    rax,QWORD PTR [rip+0x1c619]        # 0x14004b078
   14002ea5f:	cmp    rax,rcx
   14002ea62:	je     0x14002eaa7
   14002ea64:	test   BYTE PTR [rax+0x1c],0x1
   14002ea68:	je     0x14002eaa7
   14002ea6a:	mov    rdi,QWORD PTR [rbp+0x108]
   14002ea71:	mov    rax,QWORD PTR [rdi]
   14002ea74:	mov    rbx,QWORD PTR [rax+0x8]
   14002ea78:	mov    rcx,rbx
   14002ea7b:	call   QWORD PTR [rip+0x3c27]        # 0x1400326a8
   14002ea81:	mov    rcx,rdi
   14002ea84:	call   rbx
   14002ea86:	mov    r9,rax
   14002ea89:	mov    edx,0x17
   14002ea8e:	lea    r8,[rip+0x6a1b]        # 0x1400354b0
   14002ea95:	mov    rcx,QWORD PTR [rip+0x1c5dc]        # 0x14004b078
   14002ea9c:	mov    rcx,QWORD PTR [rcx+0x10]
   14002eaa0:	call   0x1400038e0
   14002eaa5:	jmp    0x14002eaae
   14002eaa7:	mov    rdi,QWORD PTR [rbp+0x108]
   14002eaae:	mov    rax,QWORD PTR [rdi]
   14002eab1:	mov    rbx,QWORD PTR [rax+0x8]
   14002eab5:	mov    rcx,rbx
   14002eab8:	call   QWORD PTR [rip+0x3bea]        # 0x1400326a8
   14002eabe:	mov    rcx,rdi
   14002eac1:	call   rbx
   14002eac3:	mov    rdx,rax
   14002eac6:	lea    rcx,[rip+0x6703]        # 0x1400351d0
   14002eacd:	call   QWORD PTR [rip+0x385d]        # 0x140032330
   14002ead3:	mov    rcx,rdi
   14002ead6:	call   0x140001fd4
   14002eadb:	mov    DWORD PTR [rbp+0x80],eax
   14002eae1:	lea    rax,[rip+0xfffffffffffd4aa1]        # 0x140003589
   14002eae8:	add    rsp,0x70
   14002eaec:	pop    rdi
   14002eaed:	pop    rbp
   14002eaee:	pop    rbx
   14002eaef:	ret    
   14002eaf0:	int3   
   14002eaf1:	mov    QWORD PTR [rsp+0x10],rdx
   14002eaf6:	push   rbx
   14002eaf7:	push   rbp
   14002eaf8:	push   rdi
   14002eaf9:	sub    rsp,0x70
   14002eafd:	mov    rbp,rdx
   14002eb00:	lea    rcx,[rip+0x1c571]        # 0x14004b078
   14002eb07:	mov    rax,QWORD PTR [rip+0x1c56a]        # 0x14004b078
   14002eb0e:	cmp    rax,rcx
   14002eb11:	je     0x14002eb56
   14002eb13:	test   BYTE PTR [rax+0x1c],0x1
   14002eb17:	je     0x14002eb56
   14002eb19:	mov    rdi,QWORD PTR [rbp+0x100]
   14002eb20:	mov    rax,QWORD PTR [rdi]
   14002eb23:	mov    rbx,QWORD PTR [rax+0x8]
   14002eb27:	mov    rcx,rbx
   14002eb2a:	call   QWORD PTR [rip+0x3b78]        # 0x1400326a8
   14002eb30:	mov    rcx,rdi
   14002eb33:	call   rbx
   14002eb35:	mov    r9,rax
   14002eb38:	mov    edx,0x1b
   14002eb3d:	lea    r8,[rip+0x696c]        # 0x1400354b0
   14002eb44:	mov    rcx,QWORD PTR [rip+0x1c52d]        # 0x14004b078
   14002eb4b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002eb4f:	call   0x1400038e0
   14002eb54:	jmp    0x14002eb5d
   14002eb56:	mov    rdi,QWORD PTR [rbp+0x100]
   14002eb5d:	mov    rax,QWORD PTR [rdi]
   14002eb60:	mov    rbx,QWORD PTR [rax+0x8]
   14002eb64:	mov    rcx,rbx
   14002eb67:	call   QWORD PTR [rip+0x3b3b]        # 0x1400326a8
   14002eb6d:	mov    rcx,rdi
   14002eb70:	call   rbx
   14002eb72:	mov    rdx,rax
   14002eb75:	lea    rcx,[rip+0x6824]        # 0x1400353a0
   14002eb7c:	call   QWORD PTR [rip+0x37ae]        # 0x140032330
   14002eb82:	mov    rcx,rdi
   14002eb85:	call   0x140001fd4
   14002eb8a:	mov    DWORD PTR [rbp+0x80],eax
   14002eb90:	lea    rax,[rip+0xfffffffffffd49f2]        # 0x140003589
   14002eb97:	add    rsp,0x70
   14002eb9b:	pop    rdi
   14002eb9c:	pop    rbp
   14002eb9d:	pop    rbx
   14002eb9e:	ret    
   14002eb9f:	int3   
   14002eba0:	mov    QWORD PTR [rsp+0x10],rdx
   14002eba5:	push   rbx
   14002eba6:	push   rbp
   14002eba7:	push   rdi
   14002eba8:	sub    rsp,0x70
   14002ebac:	mov    rbp,rdx
   14002ebaf:	lea    rcx,[rip+0x1c4c2]        # 0x14004b078
   14002ebb6:	mov    rax,QWORD PTR [rip+0x1c4bb]        # 0x14004b078
   14002ebbd:	cmp    rax,rcx
   14002ebc0:	je     0x14002ec05
   14002ebc2:	test   BYTE PTR [rax+0x1c],0x1
   14002ebc6:	je     0x14002ec05
   14002ebc8:	mov    rdi,QWORD PTR [rbp+0xf8]
   14002ebcf:	mov    rax,QWORD PTR [rdi]
   14002ebd2:	mov    rbx,QWORD PTR [rax+0x8]
   14002ebd6:	mov    rcx,rbx
   14002ebd9:	call   QWORD PTR [rip+0x3ac9]        # 0x1400326a8
   14002ebdf:	mov    rcx,rdi
   14002ebe2:	call   rbx
   14002ebe4:	mov    r9,rax
   14002ebe7:	mov    edx,0x1c
   14002ebec:	lea    r8,[rip+0x68bd]        # 0x1400354b0
   14002ebf3:	mov    rcx,QWORD PTR [rip+0x1c47e]        # 0x14004b078
   14002ebfa:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ebfe:	call   0x1400038e0
   14002ec03:	jmp    0x14002ec0c
   14002ec05:	mov    rdi,QWORD PTR [rbp+0xf8]
   14002ec0c:	mov    rax,QWORD PTR [rdi]
   14002ec0f:	mov    rbx,QWORD PTR [rax+0x8]
   14002ec13:	mov    rcx,rbx
   14002ec16:	call   QWORD PTR [rip+0x3a8c]        # 0x1400326a8
   14002ec1c:	mov    rcx,rdi
   14002ec1f:	call   rbx
   14002ec21:	mov    rdx,rax
   14002ec24:	lea    rcx,[rip+0x67c5]        # 0x1400353f0
   14002ec2b:	call   QWORD PTR [rip+0x36ff]        # 0x140032330
   14002ec31:	nop
   14002ec32:	lea    rax,[rip+0xfffffffffffd48a7]        # 0x1400034e0
   14002ec39:	add    rsp,0x70
   14002ec3d:	pop    rdi
   14002ec3e:	pop    rbp
   14002ec3f:	pop    rbx
   14002ec40:	ret    
   14002ec41:	int3   
   14002ec42:	int3   
   14002ec43:	int3   
   14002ec44:	int3   
   14002ec45:	int3   
   14002ec46:	int3   
   14002ec47:	int3   
   14002ec48:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ec4f:	jmp    0x140023f48
   14002ec54:	mov    QWORD PTR [rsp+0x10],rdx
   14002ec59:	push   rbx
   14002ec5a:	push   rbp
   14002ec5b:	push   rdi
   14002ec5c:	sub    rsp,0x40
   14002ec60:	mov    rbp,rdx
   14002ec63:	lea    rcx,[rip+0x1c40e]        # 0x14004b078
   14002ec6a:	mov    rax,QWORD PTR [rip+0x1c407]        # 0x14004b078
   14002ec71:	cmp    rax,rcx
   14002ec74:	je     0x14002ecb5
   14002ec76:	test   BYTE PTR [rax+0x1c],0x1
   14002ec7a:	je     0x14002ecb5
   14002ec7c:	mov    rdi,QWORD PTR [rbp+0x50]
   14002ec80:	mov    rax,QWORD PTR [rdi]
   14002ec83:	mov    rbx,QWORD PTR [rax+0x8]
   14002ec87:	mov    rcx,rbx
   14002ec8a:	call   QWORD PTR [rip+0x3a18]        # 0x1400326a8
   14002ec90:	mov    rcx,rdi
   14002ec93:	call   rbx
   14002ec95:	mov    r9,rax
   14002ec98:	mov    edx,0x16
   14002ec9d:	lea    r8,[rip+0x6bb4]        # 0x140035858
   14002eca4:	mov    rcx,QWORD PTR [rip+0x1c3cd]        # 0x14004b078
   14002ecab:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ecaf:	call   0x1400038e0
   14002ecb4:	nop
   14002ecb5:	lea    rax,[rip+0xfffffffffffd5647]        # 0x140004303
   14002ecbc:	add    rsp,0x40
   14002ecc0:	pop    rdi
   14002ecc1:	pop    rbp
   14002ecc2:	pop    rbx
   14002ecc3:	ret    
   14002ecc4:	int3   
   14002ecc5:	int3   
   14002ecc6:	int3   
   14002ecc7:	int3   
   14002ecc8:	int3   
   14002ecc9:	int3   
   14002ecca:	int3   
   14002eccb:	mov    QWORD PTR [rsp+0x10],rdx
   14002ecd0:	push   rbx
   14002ecd1:	push   rbp
   14002ecd2:	push   rdi
   14002ecd3:	sub    rsp,0x20
   14002ecd7:	mov    rbp,rdx
   14002ecda:	lea    rcx,[rip+0x1c397]        # 0x14004b078
   14002ece1:	mov    rax,QWORD PTR [rip+0x1c390]        # 0x14004b078
   14002ece8:	cmp    rax,rcx
   14002eceb:	je     0x14002ed2c
   14002eced:	test   BYTE PTR [rax+0x1c],0x1
   14002ecf1:	je     0x14002ed2c
   14002ecf3:	mov    rdi,QWORD PTR [rbp+0x28]
   14002ecf7:	mov    rax,QWORD PTR [rdi]
   14002ecfa:	mov    rbx,QWORD PTR [rax+0x8]
   14002ecfe:	mov    rcx,rbx
   14002ed01:	call   QWORD PTR [rip+0x39a1]        # 0x1400326a8
   14002ed07:	mov    rcx,rdi
   14002ed0a:	call   rbx
   14002ed0c:	mov    r9,rax
   14002ed0f:	mov    edx,0x17
   14002ed14:	lea    r8,[rip+0x6b3d]        # 0x140035858
   14002ed1b:	mov    rcx,QWORD PTR [rip+0x1c356]        # 0x14004b078
   14002ed22:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ed26:	call   0x1400038e0
   14002ed2b:	nop
   14002ed2c:	lea    rax,[rip+0xfffffffffffd56d2]        # 0x140004405
   14002ed33:	add    rsp,0x20
   14002ed37:	pop    rdi
   14002ed38:	pop    rbp
   14002ed39:	pop    rbx
   14002ed3a:	ret    
   14002ed3b:	int3   
   14002ed3c:	int3   
   14002ed3d:	int3   
   14002ed3e:	int3   
   14002ed3f:	int3   
   14002ed40:	int3   
   14002ed41:	int3   
   14002ed42:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ed49:	add    rcx,0x8
   14002ed4d:	jmp    0x1400039c0
   14002ed52:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ed59:	add    rcx,0x40
   14002ed5d:	jmp    0x1400036a8
   14002ed62:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ed69:	add    rcx,0x48
   14002ed6d:	jmp    0x1400036a8
   14002ed72:	int3   
   14002ed73:	int3   
   14002ed74:	int3   
   14002ed75:	int3   
   14002ed76:	int3   
   14002ed77:	int3   
   14002ed78:	rex push rbp
   14002ed7a:	sub    rsp,0x20
   14002ed7e:	mov    rbp,rdx
   14002ed81:	mov    rax,QWORD PTR [rcx]
   14002ed84:	xor    ecx,ecx
   14002ed86:	cmp    DWORD PTR [rax],0xc0000017
   14002ed8c:	sete   cl
   14002ed8f:	mov    eax,ecx
   14002ed91:	add    rsp,0x20
   14002ed95:	pop    rbp
   14002ed96:	ret    
   14002ed97:	int3   
   14002ed98:	int3   
   14002ed99:	int3   
   14002ed9a:	int3   
   14002ed9b:	int3   
   14002ed9c:	int3   
   14002ed9d:	int3   
   14002ed9e:	mov    QWORD PTR [rsp+0x10],rdx
   14002eda3:	push   rbp
   14002eda4:	sub    rsp,0x20
   14002eda8:	mov    rbp,rdx
   14002edab:	lea    rax,[rip+0xfffffffffffd6206]        # 0x140004fb8
   14002edb2:	add    rsp,0x20
   14002edb6:	pop    rbp
   14002edb7:	ret    
   14002edb8:	int3   
   14002edb9:	lea    rcx,[rdx+0x40]
   14002edc0:	jmp    0x140004f0c
   14002edc5:	mov    QWORD PTR [rsp+0x10],rdx
   14002edca:	push   rbp
   14002edcb:	sub    rsp,0x20
   14002edcf:	mov    rbp,rdx
   14002edd2:	lea    rax,[rip+0xfffffffffffd6255]        # 0x14000502e
   14002edd9:	add    rsp,0x20
   14002eddd:	pop    rbp
   14002edde:	ret    
   14002eddf:	int3   
   14002ede0:	lea    rcx,[rdx+0xa8]
   14002ede7:	jmp    0x140004f0c
   14002edec:	int3   
   14002eded:	int3   
   14002edee:	int3   
   14002edef:	int3   
   14002edf0:	int3   
   14002edf1:	int3   
   14002edf2:	lea    rcx,[rdx+0x48]
   14002edf9:	jmp    0x140005800
   14002edfe:	int3   
   14002edff:	int3   
   14002ee00:	int3   
   14002ee01:	int3   
   14002ee02:	int3   
   14002ee03:	int3   
   14002ee04:	lea    rcx,[rdx+0x20]
   14002ee0b:	jmp    0x1400052e0
   14002ee10:	lea    rcx,[rdx+0x38]
   14002ee17:	jmp    0x140005800
   14002ee1c:	int3   
   14002ee1d:	int3   
   14002ee1e:	int3   
   14002ee1f:	int3   
   14002ee20:	int3   
   14002ee21:	int3   
   14002ee22:	lea    rcx,[rdx+0x80]
   14002ee29:	jmp    0x140005268
   14002ee2e:	mov    QWORD PTR [rsp+0x10],rdx
   14002ee33:	push   rbp
   14002ee34:	sub    rsp,0x30
   14002ee38:	mov    rbp,rdx
   14002ee3b:	lea    rax,[rip+0xfffffffffffd6b63]        # 0x1400059a5
   14002ee42:	add    rsp,0x30
   14002ee46:	pop    rbp
   14002ee47:	ret    
   14002ee48:	int3   
   14002ee49:	lea    rcx,[rdx+0x80]
   14002ee50:	jmp    0x140005268
   14002ee55:	mov    QWORD PTR [rsp+0x10],rdx
   14002ee5a:	push   rbp
   14002ee5b:	sub    rsp,0x30
   14002ee5f:	mov    rbp,rdx
   14002ee62:	lea    rax,[rip+0xfffffffffffd6d2d]        # 0x140005b96
   14002ee69:	add    rsp,0x30
   14002ee6d:	pop    rbp
   14002ee6e:	ret    
   14002ee6f:	int3   
   14002ee70:	int3   
   14002ee71:	int3   
   14002ee72:	int3   
   14002ee73:	int3   
   14002ee74:	int3   
   14002ee75:	int3   
   14002ee76:	lea    rcx,[rdx+0x90]
   14002ee7d:	jmp    0x140005f6c
   14002ee82:	lea    rcx,[rdx+0xa8]
   14002ee89:	jmp    0x140005f6c
   14002ee8e:	int3   
   14002ee8f:	int3   
   14002ee90:	int3   
   14002ee91:	int3   
   14002ee92:	int3   
   14002ee93:	int3   
   14002ee94:	lea    rcx,[rdx+0x60]
   14002ee9b:	jmp    0x140005800
   14002eea0:	lea    rcx,[rdx+0x70]
   14002eea7:	jmp    0x140005268
   14002eeac:	mov    QWORD PTR [rsp+0x10],rdx
   14002eeb1:	push   rbp
   14002eeb2:	sub    rsp,0x30
   14002eeb6:	mov    rbp,rdx
   14002eeb9:	lea    rax,[rip+0xfffffffffffd7e1b]        # 0x140006cdb
   14002eec0:	add    rsp,0x30
   14002eec4:	pop    rbp
   14002eec5:	ret    
   14002eec6:	int3   
   14002eec7:	int3   
   14002eec8:	int3   
   14002eec9:	int3   
   14002eeca:	int3   
   14002eecb:	int3   
   14002eecc:	int3   
   14002eecd:	lea    rcx,[rdx+0xc8]
   14002eed4:	jmp    0x14000dec0
   14002eed9:	lea    rcx,[rdx+0x80]
   14002eee0:	jmp    0x1400036e0
   14002eee5:	lea    rcx,[rdx+0xb0]
   14002eeec:	jmp    0x140003674
   14002eef1:	lea    rcx,[rdx+0x98]
   14002eef8:	jmp    0x1400036e0
   14002eefd:	mov    QWORD PTR [rsp+0x10],rdx
   14002ef02:	push   rbx
   14002ef03:	push   rbp
   14002ef04:	push   rdi
   14002ef05:	sub    rsp,0x60
   14002ef09:	mov    rbp,rdx
   14002ef0c:	lea    rcx,[rip+0x1c165]        # 0x14004b078
   14002ef13:	mov    rax,QWORD PTR [rip+0x1c15e]        # 0x14004b078
   14002ef1a:	cmp    rax,rcx
   14002ef1d:	je     0x14002ef5f
   14002ef1f:	test   BYTE PTR [rax+0x1c],0x1
   14002ef23:	je     0x14002ef5f
   14002ef25:	mov    rdi,QWORD PTR [rbp+0x70]
   14002ef29:	mov    rax,QWORD PTR [rdi]
   14002ef2c:	mov    rbx,QWORD PTR [rax+0x8]
   14002ef30:	mov    rcx,rbx
   14002ef33:	call   QWORD PTR [rip+0x376f]        # 0x1400326a8
   14002ef39:	mov    rcx,rdi
   14002ef3c:	call   rbx
   14002ef3e:	mov    r9,rax
   14002ef41:	mov    edx,0xc
   14002ef46:	lea    r8,[rip+0x7b9b]        # 0x140036ae8
   14002ef4d:	mov    rcx,QWORD PTR [rip+0x1c124]        # 0x14004b078
   14002ef54:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ef58:	call   0x1400038e0
   14002ef5d:	jmp    0x14002ef63
   14002ef5f:	mov    rdi,QWORD PTR [rbp+0x70]
   14002ef63:	mov    rax,QWORD PTR [rdi]
   14002ef66:	mov    rbx,QWORD PTR [rax+0x8]
   14002ef6a:	mov    rcx,rbx
   14002ef6d:	call   QWORD PTR [rip+0x3735]        # 0x1400326a8
   14002ef73:	mov    rcx,rdi
   14002ef76:	call   rbx
   14002ef78:	mov    rdx,rax
   14002ef7b:	lea    rcx,[rip+0x691e]        # 0x1400358a0
   14002ef82:	call   QWORD PTR [rip+0x33a8]        # 0x140032330
   14002ef88:	nop
   14002ef89:	lea    rax,[rip+0xfffffffffffd8eb9]        # 0x140007e49
   14002ef90:	add    rsp,0x60
   14002ef94:	pop    rdi
   14002ef95:	pop    rbp
   14002ef96:	pop    rbx
   14002ef97:	ret    
   14002ef98:	int3   
   14002ef99:	int3   
   14002ef9a:	int3   
   14002ef9b:	int3   
   14002ef9c:	int3   
   14002ef9d:	int3   
   14002ef9e:	int3   
   14002ef9f:	lea    rcx,[rdx+0x30]
   14002efa6:	jmp    0x1400038b0
   14002efab:	lea    rcx,[rdx+0x38]
   14002efb2:	jmp    0x1400036a8
   14002efb7:	lea    rcx,[rdx+0x40]
   14002efbe:	jmp    0x14000d0bc
   14002efc3:	mov    QWORD PTR [rsp+0x10],rdx
   14002efc8:	push   rbp
   14002efc9:	sub    rsp,0x30
   14002efcd:	mov    rbp,rdx
   14002efd0:	mov    rcx,QWORD PTR [rbp+0x50]
   14002efd4:	call   0x140001fd4
   14002efd9:	mov    DWORD PTR [rbp+0xa8],eax
   14002efdf:	lea    rdx,[rip+0x1c092]        # 0x14004b078
   14002efe6:	mov    rcx,QWORD PTR [rip+0x1c08b]        # 0x14004b078
   14002efed:	cmp    rcx,rdx
   14002eff0:	je     0x14002f011
   14002eff2:	test   BYTE PTR [rcx+0x1c],0x1
   14002eff6:	je     0x14002f011
   14002eff8:	mov    edx,0xd
   14002effd:	mov    r9d,eax
   14002f000:	lea    r8,[rip+0x7ae1]        # 0x140036ae8
   14002f007:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f00b:	call   0x140001f70
   14002f010:	nop
   14002f011:	lea    rax,[rip+0xfffffffffffd9449]        # 0x140008461
   14002f018:	add    rsp,0x30
   14002f01c:	pop    rbp
   14002f01d:	ret    
   14002f01e:	int3   
   14002f01f:	int3   
   14002f020:	int3   
   14002f021:	int3   
   14002f022:	int3   
   14002f023:	int3   
   14002f024:	int3   
   14002f025:	lea    rcx,[rdx+0x90]
   14002f02c:	jmp    0x14000de98
   14002f031:	lea    rcx,[rdx+0x140]
   14002f038:	jmp    0x14000dec0
   14002f03d:	mov    rcx,QWORD PTR [rdx+0xd0]
   14002f044:	jmp    0x140023f48
   14002f049:	lea    rcx,[rdx+0x68]
   14002f050:	jmp    0x14000de2c
   14002f055:	lea    rcx,[rdx+0xa0]
   14002f05c:	jmp    0x14000d10c
   14002f061:	mov    rcx,QWORD PTR [rdx+0x80]
   14002f068:	jmp    0x140023f48
   14002f06d:	lea    rcx,[rdx+0x98]
   14002f074:	jmp    0x14000de2c
   14002f079:	lea    rcx,[rdx+0x70]
   14002f080:	jmp    0x14000de2c
   14002f085:	mov    QWORD PTR [rsp+0x10],rdx
   14002f08a:	push   rbp
   14002f08b:	sub    rsp,0x60
   14002f08f:	mov    rbp,rdx
   14002f092:	mov    rcx,QWORD PTR [rbp+0x120]
   14002f099:	call   0x140001fd4
   14002f09e:	cmp    eax,0x1
   14002f0a1:	je     0x14002f0ad
   14002f0a3:	xor    edx,edx
   14002f0a5:	xor    ecx,ecx
   14002f0a7:	call   0x14002e2da
   14002f0ac:	int3   
   14002f0ad:	lea    rax,[rip+0x1bfc4]        # 0x14004b078
   14002f0b4:	mov    rcx,QWORD PTR [rip+0x1bfbd]        # 0x14004b078
   14002f0bb:	cmp    rcx,rax
   14002f0be:	je     0x14002f0db
   14002f0c0:	test   BYTE PTR [rcx+0x1c],0x1
   14002f0c4:	je     0x14002f0db
   14002f0c6:	mov    edx,0xf
   14002f0cb:	lea    r8,[rip+0x7a16]        # 0x140036ae8
   14002f0d2:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f0d6:	call   0x140001f08
   14002f0db:	lea    rcx,[rip+0x6a9e]        # 0x140035b80
   14002f0e2:	call   QWORD PTR [rip+0x3248]        # 0x140032330
   14002f0e8:	mov    rcx,QWORD PTR [rbp+0x78]
   14002f0ec:	mov    rax,QWORD PTR [rbp+0xf8]
   14002f0f3:	mov    QWORD PTR [rax],rcx
   14002f0f6:	mov    rcx,QWORD PTR [rbp+0x80]
   14002f0fd:	mov    rax,QWORD PTR [rbp+0xe8]
   14002f104:	mov    QWORD PTR [rax],rcx
   14002f107:	lea    rax,[rip+0xfffffffffffd9cec]        # 0x140008dfa
   14002f10e:	add    rsp,0x60
   14002f112:	pop    rbp
   14002f113:	ret    
   14002f114:	int3   
   14002f115:	lea    rcx,[rdx+0xa8]
   14002f11c:	jmp    0x14000cec0
   14002f121:	lea    rcx,[rdx+0x88]
   14002f128:	jmp    0x14000cdd8
   14002f12d:	lea    rcx,[rdx+0xb0]
   14002f134:	jmp    0x14000ce88
   14002f139:	lea    rcx,[rdx+0x148]
   14002f140:	jmp    0x14000dec0
   14002f145:	lea    rcx,[rdx+0x118]
   14002f14c:	jmp    0x14000dec0
   14002f151:	int3   
   14002f152:	int3   
   14002f153:	int3   
   14002f154:	int3   
   14002f155:	int3   
   14002f156:	int3   
   14002f157:	lea    rcx,[rdx+0xd0]
   14002f15e:	jmp    0x14000de98
   14002f163:	lea    rcx,[rdx+0x88]
   14002f16a:	jmp    0x14000ce88
   14002f16f:	lea    rcx,[rdx+0x40]
   14002f176:	jmp    0x14000ce88
   14002f17b:	lea    rcx,[rdx+0xa8]
   14002f182:	jmp    0x14000ce88
   14002f187:	lea    rcx,[rdx+0x60]
   14002f18e:	jmp    0x14000cdd8
   14002f193:	lea    rcx,[rdx+0x78]
   14002f19a:	jmp    0x14000cdd8
   14002f19f:	lea    rcx,[rdx+0x80]
   14002f1a6:	jmp    0x14000ce88
   14002f1ab:	lea    rcx,[rdx+0x110]
   14002f1b2:	jmp    0x140017678
   14002f1b7:	lea    rcx,[rdx+0xd8]
   14002f1be:	jmp    0x140017678
   14002f1c3:	lea    rcx,[rdx+0xe0]
   14002f1ca:	jmp    0x140017678
   14002f1cf:	lea    rcx,[rdx+0xe8]
   14002f1d6:	jmp    0x14000ce88
   14002f1db:	lea    rcx,[rdx+0xc0]
   14002f1e2:	jmp    0x1400036a8
   14002f1e7:	mov    QWORD PTR [rsp+0x10],rdx
   14002f1ec:	push   rbx
   14002f1ed:	push   rbp
   14002f1ee:	push   rdi
   14002f1ef:	sub    rsp,0x30
   14002f1f3:	mov    rbp,rdx
   14002f1f6:	lea    rcx,[rip+0x1be7b]        # 0x14004b078
   14002f1fd:	mov    rax,QWORD PTR [rip+0x1be74]        # 0x14004b078
   14002f204:	cmp    rax,rcx
   14002f207:	je     0x14002f24b
   14002f209:	test   BYTE PTR [rax+0x1c],0x2
   14002f20d:	je     0x14002f24b
   14002f20f:	mov    rdi,QWORD PTR [rbp+0x1e8]
   14002f216:	mov    rax,QWORD PTR [rdi]
   14002f219:	mov    rbx,QWORD PTR [rax+0x8]
   14002f21d:	mov    rcx,rbx
   14002f220:	call   QWORD PTR [rip+0x3482]        # 0x1400326a8
   14002f226:	mov    rcx,rdi
   14002f229:	call   rbx
   14002f22b:	mov    edx,0x2b
   14002f230:	mov    r9,rax
   14002f233:	lea    r8,[rip+0x78ae]        # 0x140036ae8
   14002f23a:	mov    rcx,QWORD PTR [rip+0x1be37]        # 0x14004b078
   14002f241:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f245:	call   0x1400038e0
   14002f24a:	nop
   14002f24b:	lea    rax,[rip+0xfffffffffffdb0ca]        # 0x14000a31c
   14002f252:	add    rsp,0x30
   14002f256:	pop    rdi
   14002f257:	pop    rbp
   14002f258:	pop    rbx
   14002f259:	ret    
   14002f25a:	int3   
   14002f25b:	lea    rcx,[rdx+0x118]
   14002f262:	jmp    0x14000ce88
   14002f267:	mov    QWORD PTR [rsp+0x10],rdx
   14002f26c:	push   rbx
   14002f26d:	push   rbp
   14002f26e:	push   rsi
   14002f26f:	push   rdi
   14002f270:	sub    rsp,0x38
   14002f274:	mov    rbp,rdx
   14002f277:	mov    rdi,QWORD PTR [rbp+0x1b8]
   14002f27e:	mov    rcx,rdi
   14002f281:	call   0x140001fd4
   14002f286:	mov    esi,eax
   14002f288:	lea    rax,[rip+0x1bde9]        # 0x14004b078
   14002f28f:	mov    rcx,QWORD PTR [rip+0x1bde2]        # 0x14004b078
   14002f296:	cmp    rcx,rax
   14002f299:	je     0x14002f2d5
   14002f29b:	test   BYTE PTR [rcx+0x1c],0x1
   14002f29f:	je     0x14002f2d5
   14002f2a1:	mov    rdx,QWORD PTR [rdi]
   14002f2a4:	mov    rbx,QWORD PTR [rdx+0x8]
   14002f2a8:	mov    rcx,rbx
   14002f2ab:	call   QWORD PTR [rip+0x33f7]        # 0x1400326a8
   14002f2b1:	mov    rcx,rdi
   14002f2b4:	call   rbx
   14002f2b6:	mov    r9,rax
   14002f2b9:	mov    edx,0x2c
   14002f2be:	lea    r8,[rip+0x7823]        # 0x140036ae8
   14002f2c5:	mov    rcx,QWORD PTR [rip+0x1bdac]        # 0x14004b078
   14002f2cc:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f2d0:	call   0x1400038e0
   14002f2d5:	mov    edx,esi
   14002f2d7:	lea    rcx,[rip+0x72c2]        # 0x1400365a0
   14002f2de:	call   QWORD PTR [rip+0x304c]        # 0x140032330
   14002f2e4:	xor    edx,edx
   14002f2e6:	xor    ecx,ecx
   14002f2e8:	call   0x14002e2da
   14002f2ed:	nop
   14002f2ee:	int3   
   14002f2ef:	int3   
   14002f2f0:	int3   
   14002f2f1:	int3   
   14002f2f2:	int3   
   14002f2f3:	int3   
   14002f2f4:	lea    rcx,[rdx+0x40]
   14002f2fb:	jmp    0x14000de98
   14002f300:	lea    rcx,[rdx+0x38]
   14002f307:	jmp    0x14000ce88
   14002f30c:	int3   
   14002f30d:	int3   
   14002f30e:	int3   
   14002f30f:	int3   
   14002f310:	int3   
   14002f311:	int3   
   14002f312:	lea    rcx,[rdx+0x98]
   14002f319:	jmp    0x14000de98
   14002f31e:	mov    rcx,QWORD PTR [rdx+0x80]
   14002f325:	jmp    0x140023f48
   14002f32a:	lea    rcx,[rdx+0x38]
   14002f331:	jmp    0x14000cdd8
   14002f336:	int3   
   14002f337:	int3   
   14002f338:	int3   
   14002f339:	int3   
   14002f33a:	int3   
   14002f33b:	int3   
   14002f33c:	lea    rcx,[rdx+0x38]
   14002f343:	jmp    0x14000de98
   14002f348:	lea    rcx,[rdx+0x98]
   14002f34f:	jmp    0x14000cdd8
   14002f354:	lea    rcx,[rdx+0x30]
   14002f35b:	jmp    0x1400036a8
   14002f360:	int3   
   14002f361:	int3   
   14002f362:	int3   
   14002f363:	int3   
   14002f364:	int3   
   14002f365:	int3   
   14002f366:	lea    rcx,[rdx+0x48]
   14002f36d:	jmp    0x14000de98
   14002f372:	lea    rcx,[rdx+0x38]
   14002f379:	jmp    0x1400036a8
   14002f37e:	lea    rcx,[rdx+0x80]
   14002f385:	jmp    0x1400037e0
   14002f38a:	lea    rcx,[rdx+0x60]
   14002f391:	jmp    0x1400037e0
   14002f396:	lea    rcx,[rdx+0x60]
   14002f39d:	jmp    0x1400037e0
   14002f3a2:	int3   
   14002f3a3:	int3   
   14002f3a4:	int3   
   14002f3a5:	int3   
   14002f3a6:	int3   
   14002f3a7:	int3   
   14002f3a8:	lea    rcx,[rdx+0x70]
   14002f3af:	jmp    0x14000de98
   14002f3b4:	int3   
   14002f3b5:	int3   
   14002f3b6:	int3   
   14002f3b7:	int3   
   14002f3b8:	int3   
   14002f3b9:	int3   
   14002f3ba:	lea    rcx,[rdx+0x38]
   14002f3c1:	jmp    0x14000ce38
   14002f3c6:	lea    rcx,[rdx+0x80]
   14002f3cd:	jmp    0x14000dec0
   14002f3d2:	int3   
   14002f3d3:	int3   
   14002f3d4:	int3   
   14002f3d5:	int3   
   14002f3d6:	int3   
   14002f3d7:	int3   
   14002f3d8:	lea    rcx,[rdx+0x50]
   14002f3df:	jmp    0x140005258
   14002f3e4:	int3   
   14002f3e5:	int3   
   14002f3e6:	int3   
   14002f3e7:	int3   
   14002f3e8:	int3   
   14002f3e9:	int3   
   14002f3ea:	rex push rbp
   14002f3ec:	sub    rsp,0x20
   14002f3f0:	mov    rbp,rdx
   14002f3f3:	mov    eax,DWORD PTR [rbp+0x20]
   14002f3f6:	and    eax,0x1
   14002f3f9:	test   eax,eax
   14002f3fb:	je     0x14002f40a
   14002f3fd:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002f401:	mov    rcx,QWORD PTR [rbp+0x40]
   14002f405:	call   0x14000de2c
   14002f40a:	add    rsp,0x20
   14002f40e:	pop    rbp
   14002f40f:	ret    
   14002f410:	mov    rcx,QWORD PTR [rdx+0x48]
   14002f417:	jmp    0x140023f48
   14002f41c:	lea    rcx,[rdx+0x48]
   14002f423:	jmp    0x14000de2c
   14002f428:	int3   
   14002f429:	int3   
   14002f42a:	int3   
   14002f42b:	int3   
   14002f42c:	int3   
   14002f42d:	int3   
   14002f42e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002f435:	jmp    0x140023f48
   14002f43a:	lea    rcx,[rdx+0x40]
   14002f441:	jmp    0x14000de2c
   14002f446:	int3   
   14002f447:	int3   
   14002f448:	int3   
   14002f449:	int3   
   14002f44a:	int3   
   14002f44b:	int3   
   14002f44c:	lea    rcx,[rdx+0xa0]
   14002f453:	jmp    0x1400038b0
   14002f458:	mov    QWORD PTR [rsp+0x10],rdx
   14002f45d:	push   rbp
   14002f45e:	sub    rsp,0xa0
   14002f465:	mov    rbp,rdx
   14002f468:	mov    rcx,QWORD PTR [rbp+0xb0]
   14002f46f:	call   0x140001fd4
   14002f474:	mov    DWORD PTR [rbp+0xe0],eax
   14002f47a:	lea    rax,[rip+0xfffffffffffdca51]        # 0x14000bed2
   14002f481:	add    rsp,0xa0
   14002f488:	pop    rbp
   14002f489:	ret    
   14002f48a:	int3   
   14002f48b:	int3   
   14002f48c:	int3   
   14002f48d:	int3   
   14002f48e:	int3   
   14002f48f:	int3   
   14002f490:	int3   
   14002f491:	lea    rcx,[rdx+0x30]
   14002f498:	jmp    0x1400038b0
   14002f49d:	mov    QWORD PTR [rsp+0x10],rdx
   14002f4a2:	push   rbp
   14002f4a3:	sub    rsp,0x30
   14002f4a7:	mov    rbp,rdx
   14002f4aa:	mov    rcx,QWORD PTR [rbp+0x40]
   14002f4ae:	call   0x140001fd4
   14002f4b3:	mov    DWORD PTR [rbp+0x60],eax
   14002f4b6:	lea    rax,[rip+0xfffffffffffdcb2d]        # 0x14000bfea
   14002f4bd:	add    rsp,0x30
   14002f4c1:	pop    rbp
   14002f4c2:	ret    
   14002f4c3:	int3   
   14002f4c4:	int3   
   14002f4c5:	int3   
   14002f4c6:	int3   
   14002f4c7:	int3   
   14002f4c8:	int3   
   14002f4c9:	int3   
   14002f4ca:	lea    rcx,[rdx+0x40]
   14002f4d1:	jmp    0x14000ce88
   14002f4d6:	lea    rcx,[rdx+0x30]
   14002f4dd:	jmp    0x14000ce88
   14002f4e2:	lea    rcx,[rdx+0x28]
   14002f4e9:	jmp    0x14000ce88
   14002f4ee:	int3   
   14002f4ef:	int3   
   14002f4f0:	int3   
   14002f4f1:	int3   
   14002f4f2:	int3   
   14002f4f3:	int3   
   14002f4f4:	lea    rcx,[rdx+0x40]
   14002f4fb:	jmp    0x140003674
   14002f500:	lea    rcx,[rdx+0x58]
   14002f507:	jmp    0x140003674
   14002f50c:	lea    rcx,[rdx+0x38]
   14002f513:	jmp    0x14000c828
   14002f518:	lea    rcx,[rdx+0x80]
   14002f51f:	jmp    0x1400037e0
   14002f524:	int3   
   14002f525:	int3   
   14002f526:	int3   
   14002f527:	int3   
   14002f528:	int3   
   14002f529:	int3   
   14002f52a:	lea    rcx,[rdx+0x58]
   14002f531:	jmp    0x14000ce88
   14002f536:	lea    rcx,[rdx+0x40]
   14002f53d:	jmp    0x140003674
   14002f542:	lea    rcx,[rdx+0x60]
   14002f549:	jmp    0x140003674
   14002f54e:	lea    rcx,[rdx+0x30]
   14002f555:	jmp    0x14000c828
   14002f55a:	lea    rcx,[rdx+0x88]
   14002f561:	jmp    0x1400037e0
   14002f566:	int3   
   14002f567:	int3   
   14002f568:	int3   
   14002f569:	int3   
   14002f56a:	int3   
   14002f56b:	int3   
   14002f56c:	mov    QWORD PTR [rsp+0x10],rdx
   14002f571:	push   rbp
   14002f572:	sub    rsp,0x20
   14002f576:	mov    rbp,rdx
   14002f579:	mov    rcx,QWORD PTR [rbp+0x40]
   14002f57d:	call   0x140003674
   14002f582:	xor    edx,edx
   14002f584:	xor    ecx,ecx
   14002f586:	call   0x14002e2da
   14002f58b:	nop
   14002f58c:	int3   
   14002f58d:	int3   
   14002f58e:	int3   
   14002f58f:	int3   
   14002f590:	int3   
   14002f591:	int3   
   14002f592:	mov    QWORD PTR [rsp+0x10],rdx
   14002f597:	push   rbp
   14002f598:	sub    rsp,0x20
   14002f59c:	mov    rbp,rdx
   14002f59f:	mov    rdx,QWORD PTR [rbp+0x48]
   14002f5a3:	call   0x140003760
   14002f5a8:	xor    edx,edx
   14002f5aa:	xor    ecx,ecx
   14002f5ac:	call   0x14002e2da
   14002f5b1:	nop
   14002f5b2:	int3   
   14002f5b3:	int3   
   14002f5b4:	int3   
   14002f5b5:	int3   
   14002f5b6:	int3   
   14002f5b7:	int3   
   14002f5b8:	mov    QWORD PTR [rsp+0x10],rdx
   14002f5bd:	push   rbp
   14002f5be:	sub    rsp,0x30
   14002f5c2:	mov    rbp,rdx
   14002f5c5:	mov    rdx,QWORD PTR [rbp+0x78]
   14002f5c9:	call   0x140003760
   14002f5ce:	xor    edx,edx
   14002f5d0:	xor    ecx,ecx
   14002f5d2:	call   0x14002e2da
   14002f5d7:	nop
   14002f5d8:	int3   
   14002f5d9:	int3   
   14002f5da:	int3   
   14002f5db:	int3   
   14002f5dc:	int3   
   14002f5dd:	int3   
   14002f5de:	mov    QWORD PTR [rsp+0x10],rdx
   14002f5e3:	push   rbp
   14002f5e4:	sub    rsp,0x20
   14002f5e8:	mov    rbp,rdx
   14002f5eb:	lea    rax,[rip+0xfffffffffffddf23]        # 0x14000d515
   14002f5f2:	add    rsp,0x20
   14002f5f6:	pop    rbp
   14002f5f7:	ret    
   14002f5f8:	int3   
   14002f5f9:	int3   
   14002f5fa:	int3   
   14002f5fb:	int3   
   14002f5fc:	int3   
   14002f5fd:	int3   
   14002f5fe:	int3   
   14002f5ff:	rex push rbp
   14002f601:	sub    rsp,0x20
   14002f605:	mov    rbp,rdx
   14002f608:	lea    rdx,[rip+0x20309]        # 0x14004f918
   14002f60f:	mov    rcx,QWORD PTR [rbp+0x48]
   14002f613:	call   0x140023f48
   14002f618:	add    rsp,0x20
   14002f61c:	pop    rbp
   14002f61d:	ret    
   14002f61e:	mov    rcx,QWORD PTR [rdx+0x48]
   14002f625:	jmp    0x140012880
   14002f62a:	mov    QWORD PTR [rsp+0x10],rdx
   14002f62f:	push   rbp
   14002f630:	sub    rsp,0x20
   14002f634:	mov    rbp,rdx
   14002f637:	mov    rcx,QWORD PTR [rbp+0x28]
   14002f63b:	call   0x140029e84
   14002f640:	mov    DWORD PTR [rbp+0x48],eax
   14002f643:	lea    rax,[rip+0xfffffffffffde08c]        # 0x14000d6d6
   14002f64a:	add    rsp,0x20
   14002f64e:	pop    rbp
   14002f64f:	ret    
   14002f650:	int3   
   14002f651:	int3   
   14002f652:	int3   
   14002f653:	int3   
   14002f654:	int3   
   14002f655:	int3   
   14002f656:	int3   
   14002f657:	mov    QWORD PTR [rsp+0x10],rdx
   14002f65c:	push   rbx
   14002f65d:	push   rbp
   14002f65e:	sub    rsp,0x28
   14002f662:	mov    rbp,rdx
   14002f665:	mov    rbx,QWORD PTR [rbp+0x58]
   14002f669:	jmp    0x14002f691
   14002f66b:	cmp    QWORD PTR [rbx+0x18],0x8
   14002f670:	jb     0x14002f67b
   14002f672:	mov    rcx,QWORD PTR [rbx]
   14002f675:	call   QWORD PTR [rip+0x2f4d]        # 0x1400325c8
   14002f67b:	mov    QWORD PTR [rbx+0x18],0x7
   14002f683:	and    QWORD PTR [rbx+0x10],0x0
   14002f688:	xor    eax,eax
   14002f68a:	mov    WORD PTR [rbx],ax
   14002f68d:	add    rbx,0x20
   14002f691:	cmp    rbx,QWORD PTR [rbp+0x50]
   14002f695:	jne    0x14002f66b
   14002f697:	xor    edx,edx
   14002f699:	xor    ecx,ecx
   14002f69b:	call   0x14002e2da
   14002f6a0:	nop
   14002f6a1:	int3   
   14002f6a2:	int3   
   14002f6a3:	int3   
   14002f6a4:	int3   
   14002f6a5:	int3   
   14002f6a6:	int3   
   14002f6a7:	mov    QWORD PTR [rsp+0x10],rdx
   14002f6ac:	push   rbp
   14002f6ad:	sub    rsp,0x20
   14002f6b1:	mov    rbp,rdx
   14002f6b4:	mov    rcx,QWORD PTR [rbp+0x68]
   14002f6b8:	mov    QWORD PTR [rbp+0x68],rcx
   14002f6bc:	xor    eax,eax
   14002f6be:	add    rcx,0x1
   14002f6c2:	je     0x14002f6e2
   14002f6c4:	movabs rax,0x7fffffffffffffff
   14002f6ce:	cmp    rcx,rax
   14002f6d1:	ja     0x14002f6dd
   14002f6d3:	add    rcx,rcx
   14002f6d6:	call   0x140023f10
   14002f6db:	jmp    0x14002f6e2
   14002f6dd:	call   0x14000203c
   14002f6e2:	mov    QWORD PTR [rbp+0x78],rax
   14002f6e6:	lea    rax,[rip+0xfffffffffffde2d1]        # 0x14000d9be
   14002f6ed:	add    rsp,0x20
   14002f6f1:	pop    rbp
   14002f6f2:	ret    
   14002f6f3:	int3   
   14002f6f4:	mov    QWORD PTR [rsp+0x10],rdx
   14002f6f9:	push   rbp
   14002f6fa:	sub    rsp,0x20
   14002f6fe:	mov    rbp,rdx
   14002f701:	xor    r8d,r8d
   14002f704:	mov    dl,0x1
   14002f706:	mov    rcx,QWORD PTR [rbp+0x60]
   14002f70a:	call   0x140003770
   14002f70f:	xor    edx,edx
   14002f711:	xor    ecx,ecx
   14002f713:	call   0x14002e2da
   14002f718:	nop
   14002f719:	int3   
   14002f71a:	int3   
   14002f71b:	int3   
   14002f71c:	int3   
   14002f71d:	int3   
   14002f71e:	int3   
   14002f71f:	mov    rcx,QWORD PTR [rdx+0x40]
   14002f726:	jmp    0x140023f48
   14002f72b:	int3   
   14002f72c:	int3   
   14002f72d:	int3   
   14002f72e:	int3   
   14002f72f:	int3   
   14002f730:	int3   
   14002f731:	mov    QWORD PTR [rsp+0x10],rdx
   14002f736:	push   rbp
   14002f737:	sub    rsp,0x20
   14002f73b:	mov    rbp,rdx
   14002f73e:	mov    rdx,QWORD PTR [rbp+0x40]
   14002f742:	call   0x140003760
   14002f747:	xor    edx,edx
   14002f749:	xor    ecx,ecx
   14002f74b:	call   0x14002e2da
   14002f750:	nop
   14002f751:	int3   
   14002f752:	int3   
   14002f753:	int3   
   14002f754:	int3   
   14002f755:	int3   
   14002f756:	int3   
   14002f757:	mov    QWORD PTR [rsp+0x10],rdx
   14002f75c:	push   rbp
   14002f75d:	sub    rsp,0x20
   14002f761:	mov    rbp,rdx
   14002f764:	xor    edx,edx
   14002f766:	xor    ecx,ecx
   14002f768:	call   0x14002e2da
   14002f76d:	nop
   14002f76e:	int3   
   14002f76f:	int3   
   14002f770:	int3   
   14002f771:	int3   
   14002f772:	int3   
   14002f773:	int3   
   14002f774:	mov    QWORD PTR [rsp+0x10],rdx
   14002f779:	push   rbp
   14002f77a:	sub    rsp,0x20
   14002f77e:	mov    rbp,rdx
   14002f781:	xor    edx,edx
   14002f783:	xor    ecx,ecx
   14002f785:	call   0x14002e2da
   14002f78a:	nop
   14002f78b:	int3   
   14002f78c:	int3   
   14002f78d:	int3   
   14002f78e:	int3   
   14002f78f:	int3   
   14002f790:	int3   
   14002f791:	mov    QWORD PTR [rsp+0x10],rdx
   14002f796:	push   rbp
   14002f797:	sub    rsp,0x30
   14002f79b:	mov    rbp,rdx
   14002f79e:	mov    rdx,QWORD PTR [rbp+0x80]
   14002f7a5:	call   0x140003760
   14002f7aa:	xor    edx,edx
   14002f7ac:	xor    ecx,ecx
   14002f7ae:	call   0x14002e2da
   14002f7b3:	nop
   14002f7b4:	mov    QWORD PTR [rsp+0x10],rdx
   14002f7b9:	push   rbp
   14002f7ba:	sub    rsp,0x30
   14002f7be:	mov    rbp,rdx
   14002f7c1:	xor    edx,edx
   14002f7c3:	xor    ecx,ecx
   14002f7c5:	call   0x14002e2da
   14002f7ca:	nop
   14002f7cb:	int3   
   14002f7cc:	int3   
   14002f7cd:	int3   
   14002f7ce:	int3   
   14002f7cf:	int3   
   14002f7d0:	int3   
   14002f7d1:	lea    rcx,[rdx+0xc0]
   14002f7d8:	jmp    0x1400036a8
   14002f7dd:	lea    rcx,[rdx+0x38]
   14002f7e4:	jmp    0x14000de98
   14002f7e9:	lea    rcx,[rdx+0x70]
   14002f7f0:	jmp    0x140010f9c
   14002f7f5:	lea    rcx,[rdx+0x48]
   14002f7fc:	jmp    0x1400036a8
   14002f801:	lea    rcx,[rdx+0x50]
   14002f808:	jmp    0x1400121c4
   14002f80d:	int3   
   14002f80e:	int3   
   14002f80f:	int3   
   14002f810:	int3   
   14002f811:	int3   
   14002f812:	int3   
   14002f813:	lea    rcx,[rdx+0x38]
   14002f81a:	jmp    0x1400036a8
   14002f81f:	int3   
   14002f820:	int3   
   14002f821:	int3   
   14002f822:	int3   
   14002f823:	int3   
   14002f824:	int3   
   14002f825:	lea    rcx,[rdx+0x40]
   14002f82c:	jmp    0x14000de98
   14002f831:	int3   
   14002f832:	int3   
   14002f833:	int3   
   14002f834:	int3   
   14002f835:	int3   
   14002f836:	int3   
   14002f837:	lea    rcx,[rdx+0x68]
   14002f83e:	jmp    0x14000de98
   14002f843:	lea    rcx,[rdx+0x80]
   14002f84a:	jmp    0x14000de98
   14002f84f:	int3   
   14002f850:	int3   
   14002f851:	int3   
   14002f852:	int3   
   14002f853:	int3   
   14002f854:	int3   
   14002f855:	lea    rcx,[rdx+0x40]
   14002f85c:	jmp    0x14000de98
   14002f861:	lea    rcx,[rdx+0x48]
   14002f868:	jmp    0x14000de98
   14002f86d:	int3   
   14002f86e:	int3   
   14002f86f:	int3   
   14002f870:	int3   
   14002f871:	int3   
   14002f872:	int3   
   14002f873:	lea    rcx,[rdx+0x28]
   14002f87a:	jmp    0x1400038b0
   14002f87f:	lea    rcx,[rdx+0x30]
   14002f886:	jmp    0x14000cdd8
   14002f88b:	lea    rcx,[rdx+0x40]
   14002f892:	jmp    0x140010fbc
   14002f897:	mov    QWORD PTR [rsp+0x10],rdx
   14002f89c:	push   rbx
   14002f89d:	push   rbp
   14002f89e:	push   rdi
   14002f89f:	sub    rsp,0x20
   14002f8a3:	mov    rbp,rdx
   14002f8a6:	lea    rcx,[rip+0x1b7cb]        # 0x14004b078
   14002f8ad:	mov    rax,QWORD PTR [rip+0x1b7c4]        # 0x14004b078
   14002f8b4:	cmp    rax,rcx
   14002f8b7:	je     0x14002f8f8
   14002f8b9:	test   BYTE PTR [rax+0x1c],0x2
   14002f8bd:	je     0x14002f8f8
   14002f8bf:	mov    rdi,QWORD PTR [rbp+0x58]
   14002f8c3:	mov    rax,QWORD PTR [rdi]
   14002f8c6:	mov    rbx,QWORD PTR [rax+0x8]
   14002f8ca:	mov    rcx,rbx
   14002f8cd:	call   QWORD PTR [rip+0x2dd5]        # 0x1400326a8
   14002f8d3:	mov    rcx,rdi
   14002f8d6:	call   rbx
   14002f8d8:	mov    r9,rax
   14002f8db:	mov    edx,0x18
   14002f8e0:	lea    r8,[rip+0x7831]        # 0x140037118
   14002f8e7:	mov    rcx,QWORD PTR [rip+0x1b78a]        # 0x14004b078
   14002f8ee:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f8f2:	call   0x1400038e0
   14002f8f7:	nop
   14002f8f8:	lea    rax,[rip+0xfffffffffffe0841]        # 0x140010140
   14002f8ff:	add    rsp,0x20
   14002f903:	pop    rdi
   14002f904:	pop    rbp
   14002f905:	pop    rbx
   14002f906:	ret    
   14002f907:	int3   
   14002f908:	int3   
   14002f909:	int3   
   14002f90a:	int3   
   14002f90b:	int3   
   14002f90c:	int3   
   14002f90d:	int3   
   14002f90e:	lea    rcx,[rdx+0x98]
   14002f915:	jmp    0x1400038b0
   14002f91a:	mov    QWORD PTR [rsp+0x10],rdx
   14002f91f:	push   rbx
   14002f920:	push   rbp
   14002f921:	push   rdi
   14002f922:	sub    rsp,0x20
   14002f926:	mov    rbp,rdx
   14002f929:	lea    rcx,[rip+0x1b748]        # 0x14004b078
   14002f930:	mov    rax,QWORD PTR [rip+0x1b741]        # 0x14004b078
   14002f937:	cmp    rax,rcx
   14002f93a:	je     0x14002f97b
   14002f93c:	test   BYTE PTR [rax+0x1c],0x2
   14002f940:	je     0x14002f97b
   14002f942:	mov    rdi,QWORD PTR [rbp+0x28]
   14002f946:	mov    rax,QWORD PTR [rdi]
   14002f949:	mov    rbx,QWORD PTR [rax+0x8]
   14002f94d:	mov    rcx,rbx
   14002f950:	call   QWORD PTR [rip+0x2d52]        # 0x1400326a8
   14002f956:	mov    rcx,rdi
   14002f959:	call   rbx
   14002f95b:	mov    r9,rax
   14002f95e:	mov    edx,0x1b
   14002f963:	lea    r8,[rip+0x77ae]        # 0x140037118
   14002f96a:	mov    rcx,QWORD PTR [rip+0x1b707]        # 0x14004b078
   14002f971:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f975:	call   0x1400038e0
   14002f97a:	nop
   14002f97b:	lea    rax,[rip+0xfffffffffffe0a11]        # 0x140010393
   14002f982:	add    rsp,0x20
   14002f986:	pop    rdi
   14002f987:	pop    rbp
   14002f988:	pop    rbx
   14002f989:	ret    
   14002f98a:	int3   
   14002f98b:	lea    rcx,[rdx+0x30]
   14002f992:	jmp    0x140010f9c
   14002f997:	int3   
   14002f998:	int3   
   14002f999:	int3   
   14002f99a:	int3   
   14002f99b:	int3   
   14002f99c:	int3   
   14002f99d:	lea    rcx,[rdx+0x30]
   14002f9a4:	jmp    0x14000de98
   14002f9a9:	int3   
   14002f9aa:	int3   
   14002f9ab:	int3   
   14002f9ac:	int3   
   14002f9ad:	int3   
   14002f9ae:	int3   
   14002f9af:	lea    rcx,[rdx+0x48]
   14002f9b6:	jmp    0x14000de98
   14002f9bb:	lea    rcx,[rdx+0x88]
   14002f9c2:	jmp    0x1400037e0
   14002f9c7:	lea    rcx,[rdx+0x60]
   14002f9ce:	jmp    0x14000de98
   14002f9d3:	mov    QWORD PTR [rsp+0x10],rdx
   14002f9d8:	push   rbx
   14002f9d9:	push   rbp
   14002f9da:	push   rdi
   14002f9db:	sub    rsp,0x30
   14002f9df:	mov    rbp,rdx
   14002f9e2:	lea    rcx,[rip+0x1b68f]        # 0x14004b078
   14002f9e9:	mov    rax,QWORD PTR [rip+0x1b688]        # 0x14004b078
   14002f9f0:	cmp    rax,rcx
   14002f9f3:	je     0x14002fa37
   14002f9f5:	test   BYTE PTR [rax+0x1c],0x1
   14002f9f9:	je     0x14002fa37
   14002f9fb:	mov    rdi,QWORD PTR [rbp+0x80]
   14002fa02:	mov    rax,QWORD PTR [rdi]
   14002fa05:	mov    rbx,QWORD PTR [rax+0x8]
   14002fa09:	mov    rcx,rbx
   14002fa0c:	call   QWORD PTR [rip+0x2c96]        # 0x1400326a8
   14002fa12:	mov    rcx,rdi
   14002fa15:	call   rbx
   14002fa17:	mov    r9,rax
   14002fa1a:	mov    edx,0x20
   14002fa1f:	lea    r8,[rip+0x76f2]        # 0x140037118
   14002fa26:	mov    rcx,QWORD PTR [rip+0x1b64b]        # 0x14004b078
   14002fa2d:	mov    rcx,QWORD PTR [rcx+0x10]
   14002fa31:	call   0x1400038e0
   14002fa36:	nop
   14002fa37:	lea    rax,[rip+0xfffffffffffe0dfc]        # 0x14001083a
   14002fa3e:	add    rsp,0x30
   14002fa42:	pop    rdi
   14002fa43:	pop    rbp
   14002fa44:	pop    rbx
   14002fa45:	ret    
   14002fa46:	int3   
   14002fa47:	mov    QWORD PTR [rsp+0x10],rdx
   14002fa4c:	push   rbx
   14002fa4d:	push   rbp
   14002fa4e:	push   rdi
   14002fa4f:	sub    rsp,0x30
   14002fa53:	mov    rbp,rdx
   14002fa56:	lea    rcx,[rip+0x1b61b]        # 0x14004b078
   14002fa5d:	mov    rax,QWORD PTR [rip+0x1b614]        # 0x14004b078
   14002fa64:	cmp    rax,rcx
   14002fa67:	je     0x14002faa8
   14002fa69:	test   BYTE PTR [rax+0x1c],0x2
   14002fa6d:	je     0x14002faa8
   14002fa6f:	mov    rdi,QWORD PTR [rbp+0x78]
   14002fa73:	mov    rax,QWORD PTR [rdi]
   14002fa76:	mov    rbx,QWORD PTR [rax+0x8]
   14002fa7a:	mov    rcx,rbx
   14002fa7d:	call   QWORD PTR [rip+0x2c25]        # 0x1400326a8
   14002fa83:	mov    rcx,rdi
   14002fa86:	call   rbx
   14002fa88:	mov    r9,rax
   14002fa8b:	mov    edx,0x21
   14002fa90:	lea    r8,[rip+0x7681]        # 0x140037118
   14002fa97:	mov    rcx,QWORD PTR [rip+0x1b5da]        # 0x14004b078
   14002fa9e:	mov    rcx,QWORD PTR [rcx+0x10]
   14002faa2:	call   0x1400038e0
   14002faa7:	nop
   14002faa8:	lea    rax,[rip+0xfffffffffffe0dc8]        # 0x140010877
   14002faaf:	add    rsp,0x30
   14002fab3:	pop    rdi
   14002fab4:	pop    rbp
   14002fab5:	pop    rbx
   14002fab6:	ret    
   14002fab7:	int3   
   14002fab8:	int3   
   14002fab9:	int3   
   14002faba:	int3   
   14002fabb:	int3   
   14002fabc:	int3   
   14002fabd:	int3   
   14002fabe:	lea    rcx,[rdx+0xf0]
   14002fac5:	jmp    0x14000de98
   14002faca:	lea    rcx,[rdx+0xc8]
   14002fad1:	jmp    0x14000136c
   14002fad6:	lea    rcx,[rdx+0xd0]
   14002fadd:	jmp    0x14000136c
   14002fae2:	lea    rcx,[rdx+0xd8]
   14002fae9:	jmp    0x14000136c
   14002faee:	lea    rcx,[rdx+0xa8]
   14002faf5:	jmp    0x14000136c
   14002fafa:	lea    rcx,[rdx+0xb8]
   14002fb01:	jmp    0x14000136c
   14002fb06:	lea    rcx,[rdx+0xc0]
   14002fb0d:	jmp    0x14000136c
   14002fb12:	int3   
   14002fb13:	int3   
   14002fb14:	int3   
   14002fb15:	int3   
   14002fb16:	int3   
   14002fb17:	int3   
   14002fb18:	mov    QWORD PTR [rsp+0x10],rdx
   14002fb1d:	push   rbp
   14002fb1e:	sub    rsp,0x20
   14002fb22:	mov    rbp,rdx
   14002fb25:	lea    rax,[rip+0xfffffffffffe181a]        # 0x140011346
   14002fb2c:	add    rsp,0x20
   14002fb30:	pop    rbp
   14002fb31:	ret    
   14002fb32:	int3   
   14002fb33:	int3   
   14002fb34:	int3   
   14002fb35:	int3   
   14002fb36:	int3   
   14002fb37:	int3   
   14002fb38:	int3   
   14002fb39:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb40:	jmp    0x140012880
   14002fb45:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb4c:	add    rcx,0x98
   14002fb53:	jmp    0x14000ce88
   14002fb58:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb5f:	add    rcx,0xa0
   14002fb66:	jmp    0x1400036a8
   14002fb6b:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb72:	add    rcx,0xa8
   14002fb79:	jmp    0x14000cdd8
   14002fb7e:	mov    rcx,QWORD PTR [rdx+0x78]
   14002fb85:	jmp    0x140012200
   14002fb8a:	mov    rcx,QWORD PTR [rdx+0x78]
   14002fb91:	add    rcx,0x10
   14002fb95:	jmp    0x140003674
   14002fb9a:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fba1:	add    rcx,0xb0
   14002fba8:	jmp    0x140011830
   14002fbad:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fbb4:	add    rcx,0xf0
   14002fbbb:	jmp    0x14002b28c
   14002fbc0:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fbc7:	add    rcx,0x118
   14002fbce:	jmp    0x14000cec0
   14002fbd3:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fbda:	add    rcx,0x120
   14002fbe1:	jmp    0x140029b48
   14002fbe6:	int3   
   14002fbe7:	int3   
   14002fbe8:	int3   
   14002fbe9:	int3   
   14002fbea:	int3   
   14002fbeb:	int3   
   14002fbec:	lea    rcx,[rdx+0x60]
   14002fbf3:	jmp    0x14000de98
   14002fbf8:	int3   
   14002fbf9:	int3   
   14002fbfa:	int3   
   14002fbfb:	int3   
   14002fbfc:	int3   
   14002fbfd:	int3   
   14002fbfe:	lea    rcx,[rdx+0x20]
   14002fc05:	jmp    0x14000de98
   14002fc0a:	lea    rcx,[rdx+0x68]
   14002fc11:	jmp    0x14000ce88
   14002fc16:	int3   
   14002fc17:	int3   
   14002fc18:	int3   
   14002fc19:	int3   
   14002fc1a:	int3   
   14002fc1b:	int3   
   14002fc1c:	lea    rcx,[rdx+0x20]
   14002fc23:	jmp    0x14000de98
   14002fc28:	lea    rcx,[rdx+0x50]
   14002fc2f:	jmp    0x14000ce88
   14002fc34:	int3   
   14002fc35:	int3   
   14002fc36:	int3   
   14002fc37:	int3   
   14002fc38:	int3   
   14002fc39:	int3   
   14002fc3a:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc3f:	push   rbp
   14002fc40:	sub    rsp,0x20
   14002fc44:	mov    rbp,rdx
   14002fc47:	mov    rdx,QWORD PTR [rbp+0x40]
   14002fc4b:	call   0x140003760
   14002fc50:	xor    edx,edx
   14002fc52:	xor    ecx,ecx
   14002fc54:	call   0x14002e2da
   14002fc59:	nop
   14002fc5a:	int3   
   14002fc5b:	int3   
   14002fc5c:	int3   
   14002fc5d:	int3   
   14002fc5e:	int3   
   14002fc5f:	int3   
   14002fc60:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc65:	push   rbp
   14002fc66:	sub    rsp,0x20
   14002fc6a:	mov    rbp,rdx
   14002fc6d:	xor    edx,edx
   14002fc6f:	xor    ecx,ecx
   14002fc71:	call   0x14002e2da
   14002fc76:	nop
   14002fc77:	int3   
   14002fc78:	int3   
   14002fc79:	int3   
   14002fc7a:	int3   
   14002fc7b:	int3   
   14002fc7c:	int3   
   14002fc7d:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc82:	push   rbp
   14002fc83:	sub    rsp,0x20
   14002fc87:	mov    rbp,rdx
   14002fc8a:	mov    rdx,QWORD PTR [rbp+0x78]
   14002fc8e:	mov    rcx,QWORD PTR [rbp+0x60]
   14002fc92:	call   0x140012788
   14002fc97:	xor    edx,edx
   14002fc99:	xor    ecx,ecx
   14002fc9b:	call   0x14002e2da
   14002fca0:	nop
   14002fca1:	int3   
   14002fca2:	int3   
   14002fca3:	int3   
   14002fca4:	int3   
   14002fca5:	int3   
   14002fca6:	int3   
   14002fca7:	mov    QWORD PTR [rsp+0x10],rdx
   14002fcac:	push   rbp
   14002fcad:	sub    rsp,0x20
   14002fcb1:	mov    rbp,rdx
   14002fcb4:	mov    rdx,QWORD PTR [rbp+0x40]
   14002fcb8:	call   0x140003760
   14002fcbd:	xor    edx,edx
   14002fcbf:	xor    ecx,ecx
   14002fcc1:	call   0x14002e2da
   14002fcc6:	nop
   14002fcc7:	int3   
   14002fcc8:	int3   
   14002fcc9:	int3   
   14002fcca:	int3   
   14002fccb:	int3   
   14002fccc:	int3   
   14002fccd:	lea    rcx,[rdx+0x20]
   14002fcd4:	jmp    0x14000ce88
   14002fcd9:	mov    QWORD PTR [rsp+0x10],rdx
   14002fcde:	push   rbp
   14002fcdf:	sub    rsp,0x20
   14002fce3:	mov    rbp,rdx
   14002fce6:	mov    rcx,QWORD PTR [rbp+0x30]
   14002fcea:	call   0x140001fd4
   14002fcef:	mov    DWORD PTR [rbp+0x20],eax
   14002fcf2:	lea    rax,[rip+0xfffffffffffe2e61]        # 0x140012b5a
   14002fcf9:	add    rsp,0x20
   14002fcfd:	pop    rbp
   14002fcfe:	ret    
   14002fcff:	int3   
   14002fd00:	int3   
   14002fd01:	int3   
   14002fd02:	int3   
   14002fd03:	int3   
   14002fd04:	int3   
   14002fd05:	int3   
   14002fd06:	lea    rcx,[rdx+0x28]
   14002fd0d:	jmp    0x140014c1c
   14002fd12:	lea    rcx,[rdx+0x88]
   14002fd19:	jmp    0x14000e254
   14002fd1e:	int3   
   14002fd1f:	int3   
   14002fd20:	int3   
   14002fd21:	int3   
   14002fd22:	int3   
   14002fd23:	int3   
   14002fd24:	lea    rcx,[rdx+0x28]
   14002fd2b:	jmp    0x140014c1c
   14002fd30:	int3   
   14002fd31:	int3   
   14002fd32:	int3   
   14002fd33:	int3   
   14002fd34:	int3   
   14002fd35:	int3   
   14002fd36:	lea    rcx,[rdx+0x48]
   14002fd3d:	jmp    0x14000ce88
   14002fd42:	lea    rcx,[rdx+0x58]
   14002fd49:	jmp    0x14000ce88
   14002fd4e:	lea    rcx,[rdx+0x60]
   14002fd55:	jmp    0x14000136c
   14002fd5a:	lea    rcx,[rdx+0x50]
   14002fd61:	jmp    0x140010fbc
   14002fd66:	lea    rcx,[rdx+0xa0]
   14002fd6d:	jmp    0x140010fbc
   14002fd72:	lea    rcx,[rdx+0x88]
   14002fd79:	jmp    0x140014c7c
   14002fd7e:	int3   
   14002fd7f:	int3   
   14002fd80:	int3   
   14002fd81:	int3   
   14002fd82:	int3   
   14002fd83:	int3   
   14002fd84:	lea    rcx,[rdx+0x60]
   14002fd8b:	jmp    0x14000136c
   14002fd90:	lea    rcx,[rdx+0x80]
   14002fd97:	jmp    0x14000136c
   14002fd9c:	lea    rcx,[rdx+0x48]
   14002fda3:	jmp    0x140010fbc
   14002fda8:	int3   
   14002fda9:	int3   
   14002fdaa:	int3   
   14002fdab:	int3   
   14002fdac:	int3   
   14002fdad:	int3   
   14002fdae:	lea    rcx,[rdx+0x48]
   14002fdb5:	jmp    0x140015318
   14002fdba:	lea    rcx,[rdx+0x40]
   14002fdc1:	jmp    0x14000136c
   14002fdc6:	int3   
   14002fdc7:	int3   
   14002fdc8:	int3   
   14002fdc9:	int3   
   14002fdca:	int3   
   14002fdcb:	int3   
   14002fdcc:	lea    rcx,[rdx+0x48]
   14002fdd3:	jmp    0x140010fbc
   14002fdd8:	int3   
   14002fdd9:	int3   
   14002fdda:	int3   
   14002fddb:	int3   
   14002fddc:	int3   
   14002fddd:	int3   
   14002fdde:	mov    rcx,QWORD PTR [rdx+0x50]
   14002fde5:	jmp    0x140014ccc
   14002fdea:	mov    rcx,QWORD PTR [rdx+0x50]
   14002fdf1:	add    rcx,0x10
   14002fdf5:	jmp    0x140003674
   14002fdfa:	int3   
   14002fdfb:	int3   
   14002fdfc:	int3   
   14002fdfd:	int3   
   14002fdfe:	int3   
   14002fdff:	int3   
   14002fe00:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe05:	push   rbp
   14002fe06:	sub    rsp,0x30
   14002fe0a:	mov    rbp,rdx
   14002fe0d:	mov    rdx,QWORD PTR [rbp+0x68]
   14002fe11:	call   0x140003760
   14002fe16:	xor    edx,edx
   14002fe18:	xor    ecx,ecx
   14002fe1a:	call   0x14002e2da
   14002fe1f:	nop
   14002fe20:	int3   
   14002fe21:	int3   
   14002fe22:	int3   
   14002fe23:	int3   
   14002fe24:	int3   
   14002fe25:	int3   
   14002fe26:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe2b:	push   rbp
   14002fe2c:	sub    rsp,0x20
   14002fe30:	mov    rbp,rdx
   14002fe33:	mov    rdx,QWORD PTR [rbp+0x48]
   14002fe37:	call   0x140003760
   14002fe3c:	xor    edx,edx
   14002fe3e:	xor    ecx,ecx
   14002fe40:	call   0x14002e2da
   14002fe45:	nop
   14002fe46:	int3   
   14002fe47:	int3   
   14002fe48:	int3   
   14002fe49:	int3   
   14002fe4a:	int3   
   14002fe4b:	int3   
   14002fe4c:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe51:	push   rbp
   14002fe52:	sub    rsp,0x20
   14002fe56:	mov    rbp,rdx
   14002fe59:	mov    rdx,QWORD PTR [rbp+0x88]
   14002fe60:	mov    rcx,QWORD PTR [rbp+0x70]
   14002fe64:	call   0x140015100
   14002fe69:	xor    edx,edx
   14002fe6b:	xor    ecx,ecx
   14002fe6d:	call   0x14002e2da
   14002fe72:	nop
   14002fe73:	int3   
   14002fe74:	int3   
   14002fe75:	int3   
   14002fe76:	int3   
   14002fe77:	int3   
   14002fe78:	int3   
   14002fe79:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe7e:	push   rbx
   14002fe7f:	push   rbp
   14002fe80:	sub    rsp,0x28
   14002fe84:	mov    rbp,rdx
   14002fe87:	mov    rbx,QWORD PTR [rbp+0x58]
   14002fe8b:	jmp    0x14002feab
   14002fe8d:	mov    rcx,QWORD PTR [rbx]
   14002fe90:	test   rcx,rcx
   14002fe93:	je     0x14002fea7
   14002fe95:	or     eax,0xffffffff
   14002fe98:	lock xadd DWORD PTR [rcx],eax
   14002fe9c:	cmp    eax,0x1
   14002fe9f:	jne    0x14002fea7
   14002fea1:	call   QWORD PTR [rip+0x2721]        # 0x1400325c8
   14002fea7:	add    rbx,0x8
   14002feab:	cmp    rbx,QWORD PTR [rbp+0x50]
   14002feaf:	jne    0x14002fe8d
   14002feb1:	xor    edx,edx
   14002feb3:	xor    ecx,ecx
   14002feb5:	call   0x14002e2da
   14002feba:	nop
   14002febb:	int3   
   14002febc:	int3   
   14002febd:	int3   
   14002febe:	int3   
   14002febf:	int3   
   14002fec0:	int3   
   14002fec1:	mov    QWORD PTR [rsp+0x10],rdx
   14002fec6:	push   rbp
   14002fec7:	sub    rsp,0x20
   14002fecb:	mov    rbp,rdx
   14002fece:	mov    rdx,QWORD PTR [rbp+0x40]
   14002fed2:	call   0x140003760
   14002fed7:	xor    edx,edx
   14002fed9:	xor    ecx,ecx
   14002fedb:	call   0x14002e2da
   14002fee0:	nop
   14002fee1:	int3   
   14002fee2:	int3   
   14002fee3:	int3   
   14002fee4:	int3   
   14002fee5:	int3   
   14002fee6:	int3   
   14002fee7:	lea    rcx,[rdx+0x38]
   14002feee:	jmp    0x14000dec0
   14002fef3:	lea    rcx,[rdx+0x90]
   14002fefa:	jmp    0x14000e254
   14002feff:	int3   
   14002ff00:	int3   
   14002ff01:	int3   
   14002ff02:	int3   
   14002ff03:	int3   
   14002ff04:	int3   
   14002ff05:	lea    rcx,[rdx+0x28]
   14002ff0c:	jmp    0x14000e254
   14002ff11:	lea    rcx,[rdx+0x48]
   14002ff18:	jmp    0x1400156a8
   14002ff1d:	int3   
   14002ff1e:	int3   
   14002ff1f:	int3   
   14002ff20:	int3   
   14002ff21:	int3   
   14002ff22:	int3   
   14002ff23:	mov    QWORD PTR [rsp+0x10],rdx
   14002ff28:	push   rbp
   14002ff29:	sub    rsp,0x20
   14002ff2d:	mov    rbp,rdx
   14002ff30:	mov    rdx,QWORD PTR [rbp+0x68]
   14002ff34:	mov    rcx,QWORD PTR [rbp+0x50]
   14002ff38:	call   0x1400159dc
   14002ff3d:	xor    edx,edx
   14002ff3f:	xor    ecx,ecx
   14002ff41:	call   0x14002e2da
   14002ff46:	nop
   14002ff47:	int3   
   14002ff48:	int3   
   14002ff49:	int3   
   14002ff4a:	int3   
   14002ff4b:	int3   
   14002ff4c:	int3   
   14002ff4d:	mov    rcx,QWORD PTR [rdx+0x60]
   14002ff54:	add    rcx,0x8
   14002ff58:	jmp    0x140003674
   14002ff5d:	int3   
   14002ff5e:	int3   
   14002ff5f:	int3   
   14002ff60:	int3   
   14002ff61:	int3   
   14002ff62:	int3   
   14002ff63:	lea    rcx,[rdx+0x48]
   14002ff6a:	jmp    0x140010f9c
   14002ff6f:	mov    rcx,QWORD PTR [rdx+0x30]
   14002ff76:	jmp    0x140023f48
   14002ff7b:	lea    rcx,[rdx+0x38]
   14002ff82:	jmp    0x140016988
   14002ff87:	int3   
   14002ff88:	int3   
   14002ff89:	int3   
   14002ff8a:	int3   
   14002ff8b:	int3   
   14002ff8c:	int3   
   14002ff8d:	mov    QWORD PTR [rsp+0x10],rdx
   14002ff92:	push   rbp
   14002ff93:	sub    rsp,0x20
   14002ff97:	mov    rbp,rdx
   14002ff9a:	mov    rcx,QWORD PTR [rbp+0x28]
   14002ff9e:	call   0x140001fd4
   14002ffa3:	mov    DWORD PTR [rbp+0x40],eax
   14002ffa6:	lea    rax,[rip+0xfffffffffffe633f]        # 0x1400162ec
   14002ffad:	add    rsp,0x20
   14002ffb1:	pop    rbp
   14002ffb2:	ret    
   14002ffb3:	int3   
   14002ffb4:	int3   
   14002ffb5:	int3   
   14002ffb6:	int3   
   14002ffb7:	int3   
   14002ffb8:	int3   
   14002ffb9:	int3   
   14002ffba:	lea    rcx,[rdx+0x30]
   14002ffc1:	jmp    0x140015c40
   14002ffc6:	mov    QWORD PTR [rsp+0x10],rdx
   14002ffcb:	push   rbp
   14002ffcc:	sub    rsp,0x30
   14002ffd0:	mov    rbp,rdx
   14002ffd3:	mov    rcx,QWORD PTR [rbp+0x58]
   14002ffd7:	call   0x140001fd4
   14002ffdc:	mov    DWORD PTR [rbp+0x8b8],eax
   14002ffe2:	lea    rax,[rip+0xfffffffffffe65ef]        # 0x1400165d8
   14002ffe9:	add    rsp,0x30
   14002ffed:	pop    rbp
   14002ffee:	ret    
   14002ffef:	int3   
   14002fff0:	int3   
   14002fff1:	int3   
   14002fff2:	int3   
   14002fff3:	int3   
   14002fff4:	int3   
   14002fff5:	int3   
   14002fff6:	mov    QWORD PTR [rsp+0x10],rdx
   14002fffb:	push   rbp
   14002fffc:	sub    rsp,0x20
   140030000:	mov    rbp,rdx
   140030003:	mov    rcx,QWORD PTR [rbp+0x40]
   140030007:	call   0x140003674
   14003000c:	xor    edx,edx
   14003000e:	xor    ecx,ecx
   140030010:	call   0x14002e2da
   140030015:	nop
   140030016:	int3   
   140030017:	int3   
   140030018:	int3   
   140030019:	int3   
   14003001a:	int3   
   14003001b:	int3   
   14003001c:	mov    QWORD PTR [rsp+0x10],rdx
   140030021:	push   rbp
   140030022:	sub    rsp,0x20
   140030026:	mov    rbp,rdx
   140030029:	mov    rdx,QWORD PTR [rbp+0x48]
   14003002d:	call   0x140003760
   140030032:	xor    edx,edx
   140030034:	xor    ecx,ecx
   140030036:	call   0x14002e2da
   14003003b:	nop
   14003003c:	int3   
   14003003d:	int3   
   14003003e:	int3   
   14003003f:	int3   
   140030040:	int3   
   140030041:	int3   
   140030042:	lea    rcx,[rdx+0x78]
   140030049:	jmp    0x140017678
   14003004e:	int3   
   14003004f:	int3   
   140030050:	int3   
   140030051:	int3   
   140030052:	int3   
   140030053:	int3   
   140030054:	lea    rcx,[rdx+0x38]
   14003005b:	jmp    0x140017678
   140030060:	lea    rcx,[rdx+0x30]
   140030067:	jmp    0x14000d10c
   14003006c:	lea    rcx,[rdx+0x68]
   140030073:	jmp    0x1400037e0
   140030078:	mov    rcx,QWORD PTR [rdx+0x88]
   14003007f:	jmp    0x1400037e0
   140030084:	int3   
   140030085:	int3   
   140030086:	int3   
   140030087:	int3   
   140030088:	int3   
   140030089:	int3   
   14003008a:	lea    rcx,[rdx+0x50]
   140030091:	jmp    0x140017678
   140030096:	lea    rcx,[rdx+0x40]
   14003009d:	jmp    0x140017698
   1400300a2:	lea    rcx,[rdx+0x38]
   1400300a9:	jmp    0x14000d10c
   1400300ae:	lea    rcx,[rdx+0x30]
   1400300b5:	jmp    0x14000136c
   1400300ba:	rex push rbp
   1400300bc:	sub    rsp,0x20
   1400300c0:	mov    rbp,rdx
   1400300c3:	mov    rdx,QWORD PTR [rbp+0x68]
   1400300c7:	mov    rcx,QWORD PTR [rbp+0x60]
   1400300cb:	call   0x140001360
   1400300d0:	add    rsp,0x20
   1400300d4:	pop    rbp
   1400300d5:	ret    
   1400300d6:	rex push rbp
   1400300d8:	sub    rsp,0x20
   1400300dc:	mov    rbp,rdx
   1400300df:	mov    rdx,QWORD PTR [rbp+0x60]
   1400300e3:	mov    rcx,QWORD PTR [rbp+0x68]
   1400300e7:	call   0x140001360
   1400300ec:	add    rsp,0x20
   1400300f0:	pop    rbp
   1400300f1:	ret    
   1400300f2:	mov    QWORD PTR [rsp+0x10],rdx
   1400300f7:	push   rbp
   1400300f8:	sub    rsp,0x30
   1400300fc:	mov    rbp,rdx
   1400300ff:	mov    rax,QWORD PTR [rbp+0x78]
   140030103:	mov    ecx,DWORD PTR [rax]
   140030105:	mov    DWORD PTR [rbp+0x30],ecx
   140030108:	lea    rax,[rip+0xfffffffffffe74ff]        # 0x14001760e
   14003010f:	add    rsp,0x30
   140030113:	pop    rbp
   140030114:	ret    
   140030115:	int3   
   140030116:	mov    QWORD PTR [rsp+0x10],rdx
   14003011b:	push   rbp
   14003011c:	sub    rsp,0x30
   140030120:	mov    rbp,rdx
   140030123:	mov    rcx,QWORD PTR [rbp+0x80]
   14003012a:	call   0x140001fd4
   14003012f:	mov    DWORD PTR [rbp+0x30],eax
   140030132:	lea    rax,[rip+0xfffffffffffe74d5]        # 0x14001760e
   140030139:	add    rsp,0x30
   14003013d:	pop    rbp
   14003013e:	ret    
   14003013f:	int3   
   140030140:	int3   
   140030141:	int3   
   140030142:	int3   
   140030143:	int3   
   140030144:	int3   
   140030145:	int3   
   140030146:	mov    QWORD PTR [rsp+0x10],rdx
   14003014b:	push   rbp
   14003014c:	sub    rsp,0x30
   140030150:	mov    rbp,rdx
   140030153:	mov    rdx,QWORD PTR [rbp+0x68]
   140030157:	call   0x140003760
   14003015c:	xor    edx,edx
   14003015e:	xor    ecx,ecx
   140030160:	call   0x14002e2da
   140030165:	nop
   140030166:	int3   
   140030167:	int3   
   140030168:	int3   
   140030169:	int3   
   14003016a:	int3   
   14003016b:	int3   
   14003016c:	rex push rbp
   14003016e:	sub    rsp,0x20
   140030172:	mov    rbp,rdx
   140030175:	mov    rdx,QWORD PTR [rbp+0x60]
   140030179:	mov    rcx,QWORD PTR [rbp+0x50]
   14003017d:	call   0x140001360
   140030182:	add    rsp,0x20
   140030186:	pop    rbp
   140030187:	ret    
   140030188:	mov    QWORD PTR [rsp+0x10],rdx
   14003018d:	push   rbx
   14003018e:	push   rbp
   14003018f:	sub    rsp,0x28
   140030193:	mov    rbp,rdx
   140030196:	mov    rbx,QWORD PTR [rbp+0x68]
   14003019a:	jmp    0x1400301a9
   14003019c:	mov    rcx,QWORD PTR [rbx]
   14003019f:	call   QWORD PTR [rip+0x21ab]        # 0x140032350
   1400301a5:	add    rbx,0x8
   1400301a9:	cmp    rbx,QWORD PTR [rbp+0x60]
   1400301ad:	jne    0x14003019c
   1400301af:	xor    edx,edx
   1400301b1:	xor    ecx,ecx
   1400301b3:	call   0x14002e2da
   1400301b8:	nop
   1400301b9:	int3   
   1400301ba:	int3   
   1400301bb:	int3   
   1400301bc:	int3   
   1400301bd:	int3   
   1400301be:	int3   
   1400301bf:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301c6:	add    rcx,0x10
   1400301ca:	jmp    0x14001a2d8
   1400301cf:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301d6:	add    rcx,0x80
   1400301dd:	jmp    0x14001a300
   1400301e2:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301e9:	add    rcx,0x88
   1400301f0:	jmp    0x1400036a8
   1400301f5:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301fc:	add    rcx,0x90
   140030203:	jmp    0x14000cdd8
   140030208:	mov    rcx,QWORD PTR [rdx+0x90]
   14003020f:	add    rcx,0x98
   140030216:	jmp    0x140018488
   14003021b:	mov    rcx,QWORD PTR [rdx+0x90]
   140030222:	add    rcx,0xa0
   140030229:	jmp    0x14001a350
   14003022e:	mov    rcx,QWORD PTR [rdx+0x90]
   140030235:	add    rcx,0xa8
   14003023c:	jmp    0x140029b48
   140030241:	mov    rcx,QWORD PTR [rdx+0x90]
   140030248:	add    rcx,0xc8
   14003024f:	jmp    0x140029b48
   140030254:	int3   
   140030255:	int3   
   140030256:	int3   
   140030257:	int3   
   140030258:	int3   
   140030259:	int3   
   14003025a:	mov    QWORD PTR [rsp+0x10],rdx
   14003025f:	push   rbp
   140030260:	sub    rsp,0x40
   140030264:	mov    rbp,rdx
   140030267:	mov    rcx,QWORD PTR [rbp+0x60]
   14003026b:	call   0x1400189fc
   140030270:	xor    edx,edx
   140030272:	xor    ecx,ecx
   140030274:	call   0x14002e2da
   140030279:	nop
   14003027a:	int3   
   14003027b:	int3   
   14003027c:	int3   
   14003027d:	int3   
   14003027e:	int3   
   14003027f:	int3   
   140030280:	lea    rcx,[rdx+0x90]
   140030287:	jmp    0x140015318
   14003028c:	int3   
   14003028d:	int3   
   14003028e:	int3   
   14003028f:	int3   
   140030290:	int3   
   140030291:	int3   
   140030292:	mov    QWORD PTR [rsp+0x10],rdx
   140030297:	push   rbp
   140030298:	sub    rsp,0x20
   14003029c:	mov    rbp,rdx
   14003029f:	mov    rcx,QWORD PTR [rbp+0x28]
   1400302a3:	call   0x140029e84
   1400302a8:	mov    DWORD PTR [rbp+0x48],eax
   1400302ab:	lea    rax,[rip+0xfffffffffffea46d]        # 0x14001a71f
   1400302b2:	add    rsp,0x20
   1400302b6:	pop    rbp
   1400302b7:	ret    
   1400302b8:	int3   
   1400302b9:	int3   
   1400302ba:	int3   
   1400302bb:	int3   
   1400302bc:	int3   
   1400302bd:	int3   
   1400302be:	int3   
   1400302bf:	mov    QWORD PTR [rsp+0x10],rdx
   1400302c4:	push   rbp
   1400302c5:	sub    rsp,0x20
   1400302c9:	mov    rbp,rdx
   1400302cc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400302d0:	call   0x140029e84
   1400302d5:	mov    DWORD PTR [rbp+0x48],eax
   1400302d8:	lea    rax,[rip+0xfffffffffffea4ef]        # 0x14001a7ce
   1400302df:	add    rsp,0x20
   1400302e3:	pop    rbp
   1400302e4:	ret    
   1400302e5:	int3   
   1400302e6:	int3   
   1400302e7:	int3   
   1400302e8:	int3   
   1400302e9:	int3   
   1400302ea:	int3   
   1400302eb:	int3   
   1400302ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400302f1:	push   rbp
   1400302f2:	sub    rsp,0x20
   1400302f6:	mov    rbp,rdx
   1400302f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400302fd:	call   0x140029e84
   140030302:	mov    DWORD PTR [rbp+0x48],eax
   140030305:	lea    rax,[rip+0xfffffffffffea57b]        # 0x14001a887
   14003030c:	add    rsp,0x20
   140030310:	pop    rbp
   140030311:	ret    
   140030312:	int3   
   140030313:	int3   
   140030314:	int3   
   140030315:	int3   
   140030316:	int3   
   140030317:	int3   
   140030318:	int3   
   140030319:	mov    rcx,QWORD PTR [rdx+0x40]
   140030320:	jmp    0x140023f48
   140030325:	mov    QWORD PTR [rsp+0x10],rdx
   14003032a:	push   rbx
   14003032b:	push   rbp
   14003032c:	push   rdi
   14003032d:	sub    rsp,0x20
   140030331:	mov    rbp,rdx
   140030334:	lea    rcx,[rip+0x1ad3d]        # 0x14004b078
   14003033b:	mov    rax,QWORD PTR [rip+0x1ad36]        # 0x14004b078
   140030342:	cmp    rax,rcx
   140030345:	je     0x140030387
   140030347:	test   BYTE PTR [rax+0x1c],0x1
   14003034b:	je     0x140030387
   14003034d:	mov    rdi,QWORD PTR [rbp+0x20]
   140030351:	mov    rax,QWORD PTR [rdi]
   140030354:	mov    rbx,QWORD PTR [rax+0x8]
   140030358:	mov    rcx,rbx
   14003035b:	call   QWORD PTR [rip+0x2347]        # 0x1400326a8
   140030361:	mov    rcx,rdi
   140030364:	call   rbx
   140030366:	mov    r9,rax
   140030369:	mov    edx,0xa
   14003036e:	lea    r8,[rip+0x830b]        # 0x140038680
   140030375:	mov    rcx,QWORD PTR [rip+0x1acfc]        # 0x14004b078
   14003037c:	mov    rcx,QWORD PTR [rcx+0x10]
   140030380:	call   0x1400038e0
   140030385:	jmp    0x14003038b
   140030387:	mov    rdi,QWORD PTR [rbp+0x20]
   14003038b:	mov    rcx,rdi
   14003038e:	call   0x140001fd4
   140030393:	mov    DWORD PTR [rbp+0x40],eax
   140030396:	lea    rax,[rip+0xfffffffffffeaafb]        # 0x14001ae98
   14003039d:	add    rsp,0x20
   1400303a1:	pop    rdi
   1400303a2:	pop    rbp
   1400303a3:	pop    rbx
   1400303a4:	ret    
   1400303a5:	int3   
   1400303a6:	int3   
   1400303a7:	int3   
   1400303a8:	int3   
   1400303a9:	int3   
   1400303aa:	int3   
   1400303ab:	int3   
   1400303ac:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303b3:	add    rcx,0x8
   1400303b7:	jmp    0x14001a930
   1400303bc:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303c3:	add    rcx,0x18
   1400303c7:	jmp    0x1400036a8
   1400303cc:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303d3:	add    rcx,0x20
   1400303d7:	jmp    0x14001cd60
   1400303dc:	mov    rcx,QWORD PTR [rdx+0x38]
   1400303e3:	jmp    0x14001d244
   1400303e8:	mov    rcx,QWORD PTR [rdx+0x38]
   1400303ef:	add    rcx,0x10
   1400303f3:	jmp    0x140003674
   1400303f8:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303ff:	add    rcx,0x28
   140030403:	jmp    0x14001b220
   140030408:	mov    rcx,QWORD PTR [rdx+0x50]
   14003040f:	add    rcx,0x68
   140030413:	jmp    0x14001b264
   140030418:	mov    rcx,QWORD PTR [rdx+0x50]
   14003041f:	add    rcx,0x78
   140030423:	jmp    0x140029b48
   140030428:	mov    rcx,QWORD PTR [rdx+0x38]
   14003042f:	jmp    0x140003940
   140030434:	mov    rcx,QWORD PTR [rdx+0x50]
   14003043b:	add    rcx,0x98
   140030442:	jmp    0x14001da8c
   140030447:	mov    rcx,QWORD PTR [rdx+0x40]
   14003044e:	jmp    0x140023f48
   140030453:	int3   
   140030454:	int3   
   140030455:	int3   
   140030456:	int3   
   140030457:	int3   
   140030458:	int3   
   140030459:	mov    rcx,QWORD PTR [rdx+0x40]
   140030460:	add    rcx,0x8
   140030464:	jmp    0x14001a930
   140030469:	mov    rcx,QWORD PTR [rdx+0x40]
   140030470:	add    rcx,0x18
   140030474:	jmp    0x1400036a8
   140030479:	int3   
   14003047a:	int3   
   14003047b:	int3   
   14003047c:	int3   
   14003047d:	int3   
   14003047e:	int3   
   14003047f:	lea    rcx,[rdx+0x30]
   140030486:	jmp    0x1400038b0
   14003048b:	lea    rcx,[rdx+0x88]
   140030492:	jmp    0x14001d0d0
   140030497:	mov    QWORD PTR [rsp+0x10],rdx
   14003049c:	push   rbp
   14003049d:	sub    rsp,0x30
   1400304a1:	mov    rbp,rdx
   1400304a4:	mov    rcx,QWORD PTR [rbp+0x48]
   1400304a8:	call   0x140001fd4
   1400304ad:	mov    DWORD PTR [rbp+0x78],eax
   1400304b0:	lea    rax,[rip+0xfffffffffffeaf9c]        # 0x14001b453
   1400304b7:	add    rsp,0x30
   1400304bb:	pop    rbp
   1400304bc:	ret    
   1400304bd:	int3   
   1400304be:	int3   
   1400304bf:	int3   
   1400304c0:	int3   
   1400304c1:	int3   
   1400304c2:	int3   
   1400304c3:	int3   
   1400304c4:	lea    rcx,[rdx+0x30]
   1400304cb:	jmp    0x14001d0d0
   1400304d0:	lea    rcx,[rdx+0x38]
   1400304d7:	jmp    0x1400038b0
   1400304dc:	mov    QWORD PTR [rsp+0x10],rdx
   1400304e1:	push   rbp
   1400304e2:	sub    rsp,0x30
   1400304e6:	mov    rbp,rdx
   1400304e9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400304ed:	call   0x140001fd4
   1400304f2:	mov    DWORD PTR [rbp+0xa8],eax
   1400304f8:	lea    rax,[rip+0xfffffffffffeb327]        # 0x14001b826
   1400304ff:	add    rsp,0x30
   140030503:	pop    rbp
   140030504:	ret    
   140030505:	int3   
   140030506:	int3   
   140030507:	int3   
   140030508:	int3   
   140030509:	int3   
   14003050a:	int3   
   14003050b:	int3   
   14003050c:	lea    rcx,[rdx+0xb0]
   140030513:	jmp    0x1400038b0
   140030518:	lea    rcx,[rdx+0x70]
   14003051f:	jmp    0x14001d930
   140030524:	int3   
   140030525:	int3   
   140030526:	int3   
   140030527:	int3   
   140030528:	int3   
   140030529:	int3   
   14003052a:	mov    QWORD PTR [rsp+0x10],rdx
   14003052f:	push   rbx
   140030530:	push   rbp
   140030531:	push   rdi
   140030532:	sub    rsp,0x20
   140030536:	mov    rbp,rdx
   140030539:	lea    rcx,[rip+0x1ab38]        # 0x14004b078
   140030540:	mov    rax,QWORD PTR [rip+0x1ab31]        # 0x14004b078
   140030547:	cmp    rax,rcx
   14003054a:	je     0x14003058b
   14003054c:	test   BYTE PTR [rax+0x1c],0x1
   140030550:	je     0x14003058b
   140030552:	mov    rdi,QWORD PTR [rbp+0x28]
   140030556:	mov    rax,QWORD PTR [rdi]
   140030559:	mov    rbx,QWORD PTR [rax+0x8]
   14003055d:	mov    rcx,rbx
   140030560:	call   QWORD PTR [rip+0x2142]        # 0x1400326a8
   140030566:	mov    rcx,rdi
   140030569:	call   rbx
   14003056b:	mov    r9,rax
   14003056e:	mov    edx,0x18
   140030573:	lea    r8,[rip+0x8106]        # 0x140038680
   14003057a:	mov    rcx,QWORD PTR [rip+0x1aaf7]        # 0x14004b078
   140030581:	mov    rcx,QWORD PTR [rcx+0x10]
   140030585:	call   0x1400038e0
   14003058a:	nop
   14003058b:	lea    rax,[rip+0xfffffffffffebb80]        # 0x14001c112
   140030592:	add    rsp,0x20
   140030596:	pop    rdi
   140030597:	pop    rbp
   140030598:	pop    rbx
   140030599:	ret    
   14003059a:	int3   
   14003059b:	int3   
   14003059c:	int3   
   14003059d:	int3   
   14003059e:	int3   
   14003059f:	int3   
   1400305a0:	int3   
   1400305a1:	mov    QWORD PTR [rsp+0x10],rdx
   1400305a6:	push   rbx
   1400305a7:	push   rbp
   1400305a8:	push   rdi
   1400305a9:	sub    rsp,0x20
   1400305ad:	mov    rbp,rdx
   1400305b0:	lea    rcx,[rip+0x1aac1]        # 0x14004b078
   1400305b7:	mov    rax,QWORD PTR [rip+0x1aaba]        # 0x14004b078
   1400305be:	cmp    rax,rcx
   1400305c1:	je     0x140030602
   1400305c3:	test   BYTE PTR [rax+0x1c],0x1
   1400305c7:	je     0x140030602
   1400305c9:	mov    rdi,QWORD PTR [rbp+0x28]
   1400305cd:	mov    rax,QWORD PTR [rdi]
   1400305d0:	mov    rbx,QWORD PTR [rax+0x8]
   1400305d4:	mov    rcx,rbx
   1400305d7:	call   QWORD PTR [rip+0x20cb]        # 0x1400326a8
   1400305dd:	mov    rcx,rdi
   1400305e0:	call   rbx
   1400305e2:	mov    r9,rax
   1400305e5:	mov    edx,0x19
   1400305ea:	lea    r8,[rip+0x808f]        # 0x140038680
   1400305f1:	mov    rcx,QWORD PTR [rip+0x1aa80]        # 0x14004b078
   1400305f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400305fc:	call   0x1400038e0
   140030601:	nop
   140030602:	lea    rax,[rip+0xfffffffffffebb35]        # 0x14001c13e
   140030609:	add    rsp,0x20
   14003060d:	pop    rdi
   14003060e:	pop    rbp
   14003060f:	pop    rbx
   140030610:	ret    
   140030611:	int3   
   140030612:	int3   
   140030613:	int3   
   140030614:	int3   
   140030615:	int3   
   140030616:	int3   
   140030617:	int3   
   140030618:	lea    rcx,[rdx+0x38]
   14003061f:	jmp    0x14001d0d0
   140030624:	lea    rcx,[rdx+0x50]
   14003062b:	jmp    0x14001d930
   140030630:	lea    rcx,[rdx+0x58]
   140030637:	jmp    0x14001c720
   14003063c:	int3   
   14003063d:	int3   
   14003063e:	int3   
   14003063f:	int3   
   140030640:	int3   
   140030641:	int3   
   140030642:	lea    rcx,[rdx+0x50]
   140030649:	jmp    0x14001d930
   14003064e:	mov    QWORD PTR [rsp+0x10],rdx
   140030653:	push   rbp
   140030654:	sub    rsp,0x50
   140030658:	mov    rbp,rdx
   14003065b:	mov    rax,QWORD PTR [rbp+0x88]
   140030662:	mov    ecx,DWORD PTR [rax]
   140030664:	mov    DWORD PTR [rbp+0xe8],ecx
   14003066a:	lea    rax,[rip+0xfffffffffffec681]        # 0x14001ccf2
   140030671:	add    rsp,0x50
   140030675:	pop    rbp
   140030676:	ret    
   140030677:	int3   
   140030678:	mov    QWORD PTR [rsp+0x10],rdx
   14003067d:	push   rbp
   14003067e:	sub    rsp,0x50
   140030682:	mov    rbp,rdx
   140030685:	mov    rcx,QWORD PTR [rbp+0x90]
   14003068c:	call   0x140001fd4
   140030691:	mov    DWORD PTR [rbp+0xe8],eax
   140030697:	lea    rax,[rip+0xfffffffffffec654]        # 0x14001ccf2
   14003069e:	add    rsp,0x50
   1400306a2:	pop    rbp
   1400306a3:	ret    
   1400306a4:	int3   
   1400306a5:	int3   
   1400306a6:	int3   
   1400306a7:	int3   
   1400306a8:	int3   
   1400306a9:	int3   
   1400306aa:	int3   
   1400306ab:	mov    QWORD PTR [rsp+0x10],rdx
   1400306b0:	push   rbp
   1400306b1:	sub    rsp,0x20
   1400306b5:	mov    rbp,rdx
   1400306b8:	mov    rcx,QWORD PTR [rbp+0x28]
   1400306bc:	call   0x140029e84
   1400306c1:	mov    DWORD PTR [rbp+0x48],eax
   1400306c4:	lea    rax,[rip+0xfffffffffffecf62]        # 0x14001d62d
   1400306cb:	add    rsp,0x20
   1400306cf:	pop    rbp
   1400306d0:	ret    
   1400306d1:	int3   
   1400306d2:	int3   
   1400306d3:	int3   
   1400306d4:	int3   
   1400306d5:	int3   
   1400306d6:	int3   
   1400306d7:	int3   
   1400306d8:	mov    QWORD PTR [rsp+0x10],rdx
   1400306dd:	push   rbp
   1400306de:	sub    rsp,0x20
   1400306e2:	mov    rbp,rdx
   1400306e5:	mov    rdx,QWORD PTR [rbp+0x68]
   1400306e9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400306ed:	call   0x14001d7d0
   1400306f2:	xor    edx,edx
   1400306f4:	xor    ecx,ecx
   1400306f6:	call   0x14002e2da
   1400306fb:	nop
   1400306fc:	int3   
   1400306fd:	int3   
   1400306fe:	int3   
   1400306ff:	int3   
   140030700:	int3   
   140030701:	int3   
   140030702:	mov    QWORD PTR [rsp+0x10],rdx
   140030707:	push   rbp
   140030708:	sub    rsp,0x20
   14003070c:	mov    rbp,rdx
   14003070f:	mov    rdx,QWORD PTR [rbp+0x40]
   140030713:	call   0x140003760
   140030718:	xor    edx,edx
   14003071a:	xor    ecx,ecx
   14003071c:	call   0x14002e2da
   140030721:	nop
   140030722:	int3   
   140030723:	int3   
   140030724:	int3   
   140030725:	int3   
   140030726:	int3   
   140030727:	int3   
   140030728:	mov    rcx,QWORD PTR [rdx+0x40]
   14003072f:	jmp    0x140005258
   140030734:	mov    QWORD PTR [rsp+0x10],rdx
   140030739:	push   rbx
   14003073a:	push   rbp
   14003073b:	push   rdi
   14003073c:	sub    rsp,0x20
   140030740:	mov    rbp,rdx
   140030743:	lea    rcx,[rip+0x1a92e]        # 0x14004b078
   14003074a:	mov    rax,QWORD PTR [rip+0x1a927]        # 0x14004b078
   140030751:	cmp    rax,rcx
   140030754:	je     0x140030794
   140030756:	test   BYTE PTR [rax+0x1c],0x1
   14003075a:	je     0x140030794
   14003075c:	mov    rdi,QWORD PTR [rbp+0x28]
   140030760:	mov    rax,QWORD PTR [rdi]
   140030763:	mov    rbx,QWORD PTR [rax+0x8]
   140030767:	mov    rcx,rbx
   14003076a:	call   QWORD PTR [rip+0x1f38]        # 0x1400326a8
   140030770:	mov    rcx,rdi
   140030773:	call   rbx
   140030775:	mov    r9,rax
   140030778:	mov    edx,0xa
   14003077d:	lea    r8,[rip+0x8044]        # 0x1400387c8
   140030784:	mov    rcx,QWORD PTR [rip+0x1a8ed]        # 0x14004b078
   14003078b:	mov    rcx,QWORD PTR [rcx+0x10]
   14003078f:	call   0x1400038e0
   140030794:	xor    edx,edx
   140030796:	xor    ecx,ecx
   140030798:	call   0x14002e2da
   14003079d:	nop
   14003079e:	int3   
   14003079f:	int3   
   1400307a0:	int3   
   1400307a1:	int3   
   1400307a2:	int3   
   1400307a3:	int3   
   1400307a4:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307ab:	jmp    0x14001dd48
   1400307b0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307b7:	add    rcx,0x8
   1400307bb:	jmp    0x14001dd48
   1400307c0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307c7:	add    rcx,0x10
   1400307cb:	jmp    0x140012880
   1400307d0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307d7:	add    rcx,0x30
   1400307db:	jmp    0x1400036a8
   1400307e0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307e7:	add    rcx,0x38
   1400307eb:	jmp    0x1400036a8
   1400307f0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307f7:	add    rcx,0xd0
   1400307fe:	jmp    0x14000136c
   140030803:	mov    rcx,QWORD PTR [rdx+0x50]
   14003080a:	add    rcx,0xe0
   140030811:	jmp    0x14002b28c
   140030816:	int3   
   140030817:	int3   
   140030818:	int3   
   140030819:	int3   
   14003081a:	int3   
   14003081b:	int3   
   14003081c:	mov    rcx,QWORD PTR [rdx+0x80]
   140030823:	jmp    0x140023f48
   140030828:	mov    QWORD PTR [rsp+0x10],rdx
   14003082d:	push   rbx
   14003082e:	push   rbp
   14003082f:	push   rdi
   140030830:	sub    rsp,0x40
   140030834:	mov    rbp,rdx
   140030837:	lea    rcx,[rip+0x1a83a]        # 0x14004b078
   14003083e:	mov    rax,QWORD PTR [rip+0x1a833]        # 0x14004b078
   140030845:	cmp    rax,rcx
   140030848:	je     0x140030888
   14003084a:	test   BYTE PTR [rax+0x1c],0x1
   14003084e:	je     0x140030888
   140030850:	mov    rdi,QWORD PTR [rbp+0x48]
   140030854:	mov    rax,QWORD PTR [rdi]
   140030857:	mov    rbx,QWORD PTR [rax+0x8]
   14003085b:	mov    rcx,rbx
   14003085e:	call   QWORD PTR [rip+0x1e44]        # 0x1400326a8
   140030864:	mov    rcx,rdi
   140030867:	call   rbx
   140030869:	mov    r9,rax
   14003086c:	mov    edx,0x10
   140030871:	lea    r8,[rip+0x7f50]        # 0x1400387c8
   140030878:	mov    rcx,QWORD PTR [rip+0x1a7f9]        # 0x14004b078
   14003087f:	mov    rcx,QWORD PTR [rcx+0x10]
   140030883:	call   0x1400038e0
   140030888:	xor    edx,edx
   14003088a:	xor    ecx,ecx
   14003088c:	call   0x14002e2da
   140030891:	nop
   140030892:	int3   
   140030893:	int3   
   140030894:	int3   
   140030895:	int3   
   140030896:	int3   
   140030897:	int3   
   140030898:	mov    QWORD PTR [rsp+0x10],rdx
   14003089d:	push   rbx
   14003089e:	push   rbp
   14003089f:	sub    rsp,0x38
   1400308a3:	mov    rbp,rdx
   1400308a6:	mov    rbx,QWORD PTR [rbp+0x60]
   1400308aa:	mov    DWORD PTR [rbx+0xc8],0x1
   1400308b4:	mov    rdx,QWORD PTR [rbx+0x20]
   1400308b8:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400308bf:	call   0x14001ef40
   1400308c4:	test   eax,eax
   1400308c6:	jns    0x14003094d
   1400308cc:	lea    rdx,[rip+0x1a7a5]        # 0x14004b078
   1400308d3:	mov    rcx,QWORD PTR [rip+0x1a79e]        # 0x14004b078
   1400308da:	cmp    rcx,rdx
   1400308dd:	je     0x1400308fd
   1400308df:	test   BYTE PTR [rcx+0x1c],0x1
   1400308e3:	je     0x1400308fd
   1400308e5:	mov    edx,0x15
   1400308ea:	mov    r9d,eax
   1400308ed:	lea    r8,[rip+0x7ed4]        # 0x1400387c8
   1400308f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400308f8:	call   0x140001f70
   1400308fd:	mov    DWORD PTR [rbx+0xc8],0x1
   140030907:	mov    rdx,QWORD PTR [rbx+0x20]
   14003090b:	mov    rcx,QWORD PTR [rbx+0xb0]
   140030912:	call   0x14001edfc
   140030917:	test   eax,eax
   140030919:	jns    0x14003094d
   14003091b:	lea    rdx,[rip+0x1a756]        # 0x14004b078
   140030922:	mov    rcx,QWORD PTR [rip+0x1a74f]        # 0x14004b078
   140030929:	cmp    rcx,rdx
   14003092c:	je     0x14003094d
   14003092e:	test   BYTE PTR [rcx+0x1c],0x2
   140030932:	je     0x14003094d
   140030934:	mov    edx,0x16
   140030939:	mov    r9d,eax
   14003093c:	lea    r8,[rip+0x7e85]        # 0x1400387c8
   140030943:	mov    rcx,QWORD PTR [rcx+0x10]
   140030947:	call   0x140001f70
   14003094c:	nop
   14003094d:	lea    rax,[rip+0xfffffffffffed9f1]        # 0x14001e345
   140030954:	add    rsp,0x38
   140030958:	pop    rbp
   140030959:	pop    rbx
   14003095a:	ret    
   14003095b:	int3   
   14003095c:	int3   
   14003095d:	int3   
   14003095e:	int3   
   14003095f:	int3   
   140030960:	int3   
   140030961:	int3   
   140030962:	lea    rcx,[rdx+0x50]
   140030969:	jmp    0x1400038b0
   14003096e:	int3   
   14003096f:	int3   
   140030970:	int3   
   140030971:	int3   
   140030972:	int3   
   140030973:	int3   
   140030974:	mov    QWORD PTR [rsp+0x10],rdx
   140030979:	push   rbp
   14003097a:	sub    rsp,0x20
   14003097e:	mov    rbp,rdx
   140030981:	mov    rcx,QWORD PTR [rbp+0x20]
   140030985:	add    rcx,0x30
   140030989:	xor    edx,edx
   14003098b:	call   0x14001f834
   140030990:	xor    edx,edx
   140030992:	xor    ecx,ecx
   140030994:	call   0x14002e2da
   140030999:	nop
   14003099a:	int3   
   14003099b:	int3   
   14003099c:	int3   
   14003099d:	int3   
   14003099e:	int3   
   14003099f:	int3   
   1400309a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400309a5:	push   rbp
   1400309a6:	sub    rsp,0x40
   1400309aa:	mov    rbp,rdx
   1400309ad:	mov    rax,QWORD PTR [rbp+0x50]
   1400309b1:	mov    ecx,DWORD PTR [rax]
   1400309b3:	mov    DWORD PTR [rbp+0x40],ecx
   1400309b6:	lea    rax,[rip+0xfffffffffffeebc2]        # 0x14001f57f
   1400309bd:	add    rsp,0x40
   1400309c1:	pop    rbp
   1400309c2:	ret    
   1400309c3:	int3   
   1400309c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400309c9:	push   rbp
   1400309ca:	sub    rsp,0x40
   1400309ce:	mov    rbp,rdx
   1400309d1:	mov    rcx,QWORD PTR [rbp+0x48]
   1400309d5:	call   0x140001fd4
   1400309da:	mov    DWORD PTR [rbp+0x40],eax
   1400309dd:	lea    rax,[rip+0xfffffffffffeeb9b]        # 0x14001f57f
   1400309e4:	add    rsp,0x40
   1400309e8:	pop    rbp
   1400309e9:	ret    
   1400309ea:	int3   
   1400309eb:	int3   
   1400309ec:	int3   
   1400309ed:	int3   
   1400309ee:	int3   
   1400309ef:	int3   
   1400309f0:	int3   
   1400309f1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400309f8:	add    rcx,0x28
   1400309fc:	jmp    0x1400036a8
   140030a01:	int3   
   140030a02:	int3   
   140030a03:	int3   
   140030a04:	int3   
   140030a05:	int3   
   140030a06:	int3   
   140030a07:	lea    rcx,[rdx+0x78]
   140030a0e:	jmp    0x14000dec0
   140030a13:	lea    rcx,[rdx+0x80]
   140030a1a:	jmp    0x14000dec0
   140030a1f:	mov    QWORD PTR [rsp+0x10],rdx
   140030a24:	push   rbx
   140030a25:	push   rbp
   140030a26:	push   rdi
   140030a27:	sub    rsp,0x50
   140030a2b:	mov    rbp,rdx
   140030a2e:	lea    rcx,[rip+0x1a643]        # 0x14004b078
   140030a35:	mov    rax,QWORD PTR [rip+0x1a63c]        # 0x14004b078
   140030a3c:	cmp    rax,rcx
   140030a3f:	je     0x140030a81
   140030a41:	test   BYTE PTR [rax+0x1c],0x1
   140030a45:	je     0x140030a81
   140030a47:	mov    rdi,QWORD PTR [rbp+0x68]
   140030a4b:	mov    rax,QWORD PTR [rdi]
   140030a4e:	mov    rbx,QWORD PTR [rax+0x8]
   140030a52:	mov    rcx,rbx
   140030a55:	call   QWORD PTR [rip+0x1c4d]        # 0x1400326a8
   140030a5b:	mov    rcx,rdi
   140030a5e:	call   rbx
   140030a60:	mov    r9,rax
   140030a63:	mov    edx,0x14
   140030a68:	lea    r8,[rip+0x7d69]        # 0x1400387d8
   140030a6f:	mov    rcx,QWORD PTR [rip+0x1a602]        # 0x14004b078
   140030a76:	mov    rcx,QWORD PTR [rcx+0x10]
   140030a7a:	call   0x1400038e0
   140030a7f:	jmp    0x140030a85
   140030a81:	mov    rdi,QWORD PTR [rbp+0x68]
   140030a85:	mov    rcx,rdi
   140030a88:	call   0x140001fd4
   140030a8d:	mov    DWORD PTR [rbp+0x54],eax
   140030a90:	lea    rax,[rip+0xfffffffffffef7f8]        # 0x14002028f
   140030a97:	add    rsp,0x50
   140030a9b:	pop    rdi
   140030a9c:	pop    rbp
   140030a9d:	pop    rbx
   140030a9e:	ret    
   140030a9f:	int3   
   140030aa0:	int3   
   140030aa1:	int3   
   140030aa2:	int3   
   140030aa3:	int3   
   140030aa4:	int3   
   140030aa5:	int3   
   140030aa6:	mov    QWORD PTR [rsp+0x10],rdx
   140030aab:	push   rbx
   140030aac:	push   rbp
   140030aad:	push   rdi
   140030aae:	sub    rsp,0x30
   140030ab2:	mov    rbp,rdx
   140030ab5:	lea    rcx,[rip+0x1a5bc]        # 0x14004b078
   140030abc:	mov    rax,QWORD PTR [rip+0x1a5b5]        # 0x14004b078
   140030ac3:	cmp    rax,rcx
   140030ac6:	je     0x140030b06
   140030ac8:	test   BYTE PTR [rax+0x1c],0x2
   140030acc:	je     0x140030b06
   140030ace:	mov    rdi,QWORD PTR [rbp+0x70]
   140030ad2:	mov    rax,QWORD PTR [rdi]
   140030ad5:	mov    rbx,QWORD PTR [rax+0x8]
   140030ad9:	mov    rcx,rbx
   140030adc:	call   QWORD PTR [rip+0x1bc6]        # 0x1400326a8
   140030ae2:	mov    rcx,rdi
   140030ae5:	call   rbx
   140030ae7:	mov    r9,rax
   140030aea:	mov    edx,0x16
   140030aef:	lea    r8,[rip+0x7ce2]        # 0x1400387d8
   140030af6:	mov    rcx,QWORD PTR [rip+0x1a57b]        # 0x14004b078
   140030afd:	mov    rcx,QWORD PTR [rcx+0x10]
   140030b01:	call   0x1400038e0
   140030b06:	mov    BYTE PTR [rbp+0x30],0x1
   140030b0a:	lea    rax,[rip+0xfffffffffffef916]        # 0x140020427
   140030b11:	add    rsp,0x30
   140030b15:	pop    rdi
   140030b16:	pop    rbp
   140030b17:	pop    rbx
   140030b18:	ret    
   140030b19:	int3   
   140030b1a:	mov    QWORD PTR [rsp+0x10],rdx
   140030b1f:	push   rbx
   140030b20:	push   rbp
   140030b21:	push   rdi
   140030b22:	sub    rsp,0x30
   140030b26:	mov    rbp,rdx
   140030b29:	lea    rcx,[rip+0x1a548]        # 0x14004b078
   140030b30:	mov    rax,QWORD PTR [rip+0x1a541]        # 0x14004b078
   140030b37:	cmp    rax,rcx
   140030b3a:	je     0x140030b7b
   140030b3c:	test   BYTE PTR [rax+0x1c],0x2
   140030b40:	je     0x140030b7b
   140030b42:	mov    rdi,QWORD PTR [rbp+0x78]
   140030b46:	mov    rax,QWORD PTR [rdi]
   140030b49:	mov    rbx,QWORD PTR [rax+0x8]
   140030b4d:	mov    rcx,rbx
   140030b50:	call   QWORD PTR [rip+0x1b52]        # 0x1400326a8
   140030b56:	mov    rcx,rdi
   140030b59:	call   rbx
   140030b5b:	mov    r9,rax
   140030b5e:	mov    edx,0x17
   140030b63:	lea    r8,[rip+0x7c6e]        # 0x1400387d8
   140030b6a:	mov    rcx,QWORD PTR [rip+0x1a507]        # 0x14004b078
   140030b71:	mov    rcx,QWORD PTR [rcx+0x10]
   140030b75:	call   0x1400038e0
   140030b7a:	nop
   140030b7b:	lea    rax,[rip+0xfffffffffffef99f]        # 0x140020521
   140030b82:	add    rsp,0x30
   140030b86:	pop    rdi
   140030b87:	pop    rbp
   140030b88:	pop    rbx
   140030b89:	ret    
   140030b8a:	int3   
   140030b8b:	int3   
   140030b8c:	int3   
   140030b8d:	int3   
   140030b8e:	int3   
   140030b8f:	int3   
   140030b90:	int3   
   140030b91:	lea    rcx,[rdx+0x78]
   140030b98:	jmp    0x14000dec0
   140030b9d:	mov    QWORD PTR [rsp+0x10],rdx
   140030ba2:	push   rbx
   140030ba3:	push   rbp
   140030ba4:	push   rdi
   140030ba5:	sub    rsp,0x30
   140030ba9:	mov    rbp,rdx
   140030bac:	lea    rcx,[rip+0x1a4c5]        # 0x14004b078
   140030bb3:	mov    rax,QWORD PTR [rip+0x1a4be]        # 0x14004b078
   140030bba:	cmp    rax,rcx
   140030bbd:	je     0x140030bff
   140030bbf:	test   BYTE PTR [rax+0x1c],0x1
   140030bc3:	je     0x140030bff
   140030bc5:	mov    rdi,QWORD PTR [rbp+0x30]
   140030bc9:	mov    rax,QWORD PTR [rdi]
   140030bcc:	mov    rbx,QWORD PTR [rax+0x8]
   140030bd0:	mov    rcx,rbx
   140030bd3:	call   QWORD PTR [rip+0x1acf]        # 0x1400326a8
   140030bd9:	mov    rcx,rdi
   140030bdc:	call   rbx
   140030bde:	mov    r9,rax
   140030be1:	mov    edx,0x1b
   140030be6:	lea    r8,[rip+0x7beb]        # 0x1400387d8
   140030bed:	mov    rcx,QWORD PTR [rip+0x1a484]        # 0x14004b078
   140030bf4:	mov    rcx,QWORD PTR [rcx+0x10]
   140030bf8:	call   0x1400038e0
   140030bfd:	jmp    0x140030c03
   140030bff:	mov    rdi,QWORD PTR [rbp+0x30]
   140030c03:	mov    rcx,rdi
   140030c06:	call   0x140001fd4
   140030c0b:	mov    DWORD PTR [rbp+0x68],eax
   140030c0e:	lea    rax,[rip+0xfffffffffffefafc]        # 0x140020711
   140030c15:	add    rsp,0x30
   140030c19:	pop    rdi
   140030c1a:	pop    rbp
   140030c1b:	pop    rbx
   140030c1c:	ret    
   140030c1d:	int3   
   140030c1e:	int3   
   140030c1f:	int3   
   140030c20:	int3   
   140030c21:	int3   
   140030c22:	int3   
   140030c23:	int3   
   140030c24:	lea    rcx,[rdx+0x50]
   140030c2b:	jmp    0x14000dec0
   140030c30:	mov    QWORD PTR [rsp+0x10],rdx
   140030c35:	push   rbx
   140030c36:	push   rbp
   140030c37:	push   rdi
   140030c38:	sub    rsp,0x20
   140030c3c:	mov    rbp,rdx
   140030c3f:	lea    rcx,[rip+0x1a432]        # 0x14004b078
   140030c46:	mov    rax,QWORD PTR [rip+0x1a42b]        # 0x14004b078
   140030c4d:	cmp    rax,rcx
   140030c50:	je     0x140030c92
   140030c52:	test   BYTE PTR [rax+0x1c],0x1
   140030c56:	je     0x140030c92
   140030c58:	mov    rdi,QWORD PTR [rbp+0x20]
   140030c5c:	mov    rax,QWORD PTR [rdi]
   140030c5f:	mov    rbx,QWORD PTR [rax+0x8]
   140030c63:	mov    rcx,rbx
   140030c66:	call   QWORD PTR [rip+0x1a3c]        # 0x1400326a8
   140030c6c:	mov    rcx,rdi
   140030c6f:	call   rbx
   140030c71:	mov    r9,rax
   140030c74:	mov    edx,0x1e
   140030c79:	lea    r8,[rip+0x7b58]        # 0x1400387d8
   140030c80:	mov    rcx,QWORD PTR [rip+0x1a3f1]        # 0x14004b078
   140030c87:	mov    rcx,QWORD PTR [rcx+0x10]
   140030c8b:	call   0x1400038e0
   140030c90:	jmp    0x140030c96
   140030c92:	mov    rdi,QWORD PTR [rbp+0x20]
   140030c96:	mov    rcx,rdi
   140030c99:	call   0x140001fd4
   140030c9e:	mov    DWORD PTR [rbp+0x50],eax
   140030ca1:	lea    rax,[rip+0xfffffffffffefbb1]        # 0x140020859
   140030ca8:	add    rsp,0x20
   140030cac:	pop    rdi
   140030cad:	pop    rbp
   140030cae:	pop    rbx
   140030caf:	ret    
   140030cb0:	int3   
   140030cb1:	int3   
   140030cb2:	int3   
   140030cb3:	int3   
   140030cb4:	int3   
   140030cb5:	int3   
   140030cb6:	int3   
   140030cb7:	mov    rcx,QWORD PTR [rdx+0x50]
   140030cbe:	add    rcx,0x28
   140030cc2:	jmp    0x1400036a8
   140030cc7:	rex push rbp
   140030cc9:	sub    rsp,0x20
   140030ccd:	mov    rbp,rdx
   140030cd0:	mov    rcx,QWORD PTR [rbp+0x50]
   140030cd4:	add    rcx,0x30
   140030cd8:	lea    r9,[rip+0xfffffffffffd2c61]        # 0x140003940
   140030cdf:	mov    r8d,0x2
   140030ce5:	mov    edx,0x30
   140030cea:	call   0x14002dd24
   140030cef:	add    rsp,0x20
   140030cf3:	pop    rbp
   140030cf4:	ret    
   140030cf5:	int3   
   140030cf6:	int3   
   140030cf7:	int3   
   140030cf8:	int3   
   140030cf9:	int3   
   140030cfa:	int3   
   140030cfb:	mov    rcx,QWORD PTR [rdx+0x80]
   140030d02:	jmp    0x140023f48
   140030d07:	lea    rcx,[rdx+0x80]
   140030d0e:	jmp    0x14000d0bc
   140030d13:	int3   
   140030d14:	int3   
   140030d15:	int3   
   140030d16:	int3   
   140030d17:	int3   
   140030d18:	int3   
   140030d19:	lea    rcx,[rdx+0x20]
   140030d20:	jmp    0x14000dec0
   140030d25:	lea    rcx,[rdx+0x48]
   140030d2c:	jmp    0x14000dec0
   140030d31:	lea    rcx,[rdx+0x40]
   140030d38:	jmp    0x14000dec0
   140030d3d:	mov    QWORD PTR [rsp+0x10],rdx
   140030d42:	push   rbx
   140030d43:	push   rbp
   140030d44:	push   rdi
   140030d45:	sub    rsp,0x20
   140030d49:	mov    rbp,rdx
   140030d4c:	lea    rcx,[rip+0x1a325]        # 0x14004b078
   140030d53:	mov    rax,QWORD PTR [rip+0x1a31e]        # 0x14004b078
   140030d5a:	cmp    rax,rcx
   140030d5d:	je     0x140030d9f
   140030d5f:	test   BYTE PTR [rax+0x1c],0x1
   140030d63:	je     0x140030d9f
   140030d65:	mov    rdi,QWORD PTR [rbp+0x28]
   140030d69:	mov    rax,QWORD PTR [rdi]
   140030d6c:	mov    rbx,QWORD PTR [rax+0x8]
   140030d70:	mov    rcx,rbx
   140030d73:	call   QWORD PTR [rip+0x192f]        # 0x1400326a8
   140030d79:	mov    rcx,rdi
   140030d7c:	call   rbx
   140030d7e:	mov    r9,rax
   140030d81:	mov    edx,0x24
   140030d86:	lea    r8,[rip+0x7a4b]        # 0x1400387d8
   140030d8d:	mov    rcx,QWORD PTR [rip+0x1a2e4]        # 0x14004b078
   140030d94:	mov    rcx,QWORD PTR [rcx+0x10]
   140030d98:	call   0x1400038e0
   140030d9d:	jmp    0x140030da3
   140030d9f:	mov    rdi,QWORD PTR [rbp+0x28]
   140030da3:	mov    rcx,rdi
   140030da6:	call   0x140001fd4
   140030dab:	mov    DWORD PTR [rbp+0x20],eax
   140030dae:	lea    rax,[rip+0xfffffffffffeff17]        # 0x140020ccc
   140030db5:	add    rsp,0x20
   140030db9:	pop    rdi
   140030dba:	pop    rbp
   140030dbb:	pop    rbx
   140030dbc:	ret    
   140030dbd:	int3   
   140030dbe:	int3   
   140030dbf:	int3   
   140030dc0:	int3   
   140030dc1:	int3   
   140030dc2:	int3   
   140030dc3:	int3   
   140030dc4:	lea    rcx,[rdx+0x50]
   140030dcb:	jmp    0x14000dec0
   140030dd0:	mov    QWORD PTR [rsp+0x10],rdx
   140030dd5:	push   rbx
   140030dd6:	push   rbp
   140030dd7:	push   rdi
   140030dd8:	sub    rsp,0x20
   140030ddc:	mov    rbp,rdx
   140030ddf:	lea    rcx,[rip+0x1a292]        # 0x14004b078
   140030de6:	mov    rax,QWORD PTR [rip+0x1a28b]        # 0x14004b078
   140030ded:	cmp    rax,rcx
   140030df0:	je     0x140030e32
   140030df2:	test   BYTE PTR [rax+0x1c],0x1
   140030df6:	je     0x140030e32
   140030df8:	mov    rdi,QWORD PTR [rbp+0x20]
   140030dfc:	mov    rax,QWORD PTR [rdi]
   140030dff:	mov    rbx,QWORD PTR [rax+0x8]
   140030e03:	mov    rcx,rbx
   140030e06:	call   QWORD PTR [rip+0x189c]        # 0x1400326a8
   140030e0c:	mov    rcx,rdi
   140030e0f:	call   rbx
   140030e11:	mov    r9,rax
   140030e14:	mov    edx,0x26
   140030e19:	lea    r8,[rip+0x79b8]        # 0x1400387d8
   140030e20:	mov    rcx,QWORD PTR [rip+0x1a251]        # 0x14004b078
   140030e27:	mov    rcx,QWORD PTR [rcx+0x10]
   140030e2b:	call   0x1400038e0
   140030e30:	jmp    0x140030e36
   140030e32:	mov    rdi,QWORD PTR [rbp+0x20]
   140030e36:	mov    rcx,rdi
   140030e39:	call   0x140001fd4
   140030e3e:	mov    DWORD PTR [rbp+0x50],eax
   140030e41:	lea    rax,[rip+0xfffffffffffeff71]        # 0x140020db9
   140030e48:	add    rsp,0x20
   140030e4c:	pop    rdi
   140030e4d:	pop    rbp
   140030e4e:	pop    rbx
   140030e4f:	ret    
   140030e50:	int3   
   140030e51:	int3   
   140030e52:	int3   
   140030e53:	int3   
   140030e54:	int3   
   140030e55:	int3   
   140030e56:	int3   
   140030e57:	lea    rcx,[rdx+0x20]
   140030e5e:	jmp    0x14000dec0
   140030e63:	lea    rcx,[rdx+0x48]
   140030e6a:	jmp    0x14000dec0
   140030e6f:	lea    rcx,[rdx+0x40]
   140030e76:	jmp    0x14000dec0
   140030e7b:	mov    QWORD PTR [rsp+0x10],rdx
   140030e80:	push   rbx
   140030e81:	push   rbp
   140030e82:	push   rdi
   140030e83:	sub    rsp,0x20
   140030e87:	mov    rbp,rdx
   140030e8a:	lea    rcx,[rip+0x1a1e7]        # 0x14004b078
   140030e91:	mov    rax,QWORD PTR [rip+0x1a1e0]        # 0x14004b078
   140030e98:	cmp    rax,rcx
   140030e9b:	je     0x140030edd
   140030e9d:	test   BYTE PTR [rax+0x1c],0x1
   140030ea1:	je     0x140030edd
   140030ea3:	mov    rdi,QWORD PTR [rbp+0x28]
   140030ea7:	mov    rax,QWORD PTR [rdi]
   140030eaa:	mov    rbx,QWORD PTR [rax+0x8]
   140030eae:	mov    rcx,rbx
   140030eb1:	call   QWORD PTR [rip+0x17f1]        # 0x1400326a8
   140030eb7:	mov    rcx,rdi
   140030eba:	call   rbx
   140030ebc:	mov    r9,rax
   140030ebf:	mov    edx,0x29
   140030ec4:	lea    r8,[rip+0x790d]        # 0x1400387d8
   140030ecb:	mov    rcx,QWORD PTR [rip+0x1a1a6]        # 0x14004b078
   140030ed2:	mov    rcx,QWORD PTR [rcx+0x10]
   140030ed6:	call   0x1400038e0
   140030edb:	jmp    0x140030ee1
   140030edd:	mov    rdi,QWORD PTR [rbp+0x28]
   140030ee1:	mov    rcx,rdi
   140030ee4:	call   0x140001fd4
   140030ee9:	mov    DWORD PTR [rbp+0x20],eax
   140030eec:	lea    rax,[rip+0xffffffffffff006c]        # 0x140020f5f
   140030ef3:	add    rsp,0x20
   140030ef7:	pop    rdi
   140030ef8:	pop    rbp
   140030ef9:	pop    rbx
   140030efa:	ret    
   140030efb:	int3   
   140030efc:	int3   
   140030efd:	int3   
   140030efe:	int3   
   140030eff:	int3   
   140030f00:	int3   
   140030f01:	int3   
   140030f02:	lea    rcx,[rdx+0x60]
   140030f09:	jmp    0x1400036a8
   140030f0e:	lea    rcx,[rdx+0x30]
   140030f15:	jmp    0x140022f00
   140030f1a:	mov    QWORD PTR [rsp+0x10],rdx
   140030f1f:	push   rbp
   140030f20:	sub    rsp,0x30
   140030f24:	mov    rbp,rdx
   140030f27:	mov    rcx,QWORD PTR [rbp+0x48]
   140030f2b:	call   0x140001fd4
   140030f30:	mov    DWORD PTR [rbp+0x30],eax
   140030f33:	lea    rax,[rip+0xffffffffffff09db]        # 0x140021915
   140030f3a:	add    rsp,0x30
   140030f3e:	pop    rbp
   140030f3f:	ret    
   140030f40:	int3   
   140030f41:	int3   
   140030f42:	int3   
   140030f43:	int3   
   140030f44:	int3   
   140030f45:	int3   
   140030f46:	int3   
   140030f47:	lea    rcx,[rdx+0x20]
   140030f4e:	jmp    0x14000cdd8
   140030f53:	int3   
   140030f54:	int3   
   140030f55:	int3   
   140030f56:	int3   
   140030f57:	int3   
   140030f58:	int3   
   140030f59:	lea    rcx,[rdx+0x50]
   140030f60:	jmp    0x1400036a8
   140030f65:	int3   
   140030f66:	int3   
   140030f67:	int3   
   140030f68:	int3   
   140030f69:	int3   
   140030f6a:	int3   
   140030f6b:	lea    rcx,[rdx+0xc8]
   140030f72:	jmp    0x14000cdd8
   140030f77:	int3   
   140030f78:	int3   
   140030f79:	int3   
   140030f7a:	int3   
   140030f7b:	int3   
   140030f7c:	int3   
   140030f7d:	lea    rcx,[rdx+0x28]
   140030f84:	jmp    0x14000cdd8
   140030f89:	int3   
   140030f8a:	int3   
   140030f8b:	int3   
   140030f8c:	int3   
   140030f8d:	int3   
   140030f8e:	int3   
   140030f8f:	mov    QWORD PTR [rsp+0x10],rdx
   140030f94:	push   rbp
   140030f95:	sub    rsp,0x20
   140030f99:	mov    rbp,rdx
   140030f9c:	mov    rcx,QWORD PTR [rbp+0x28]
   140030fa0:	call   0x140029e84
   140030fa5:	mov    DWORD PTR [rbp+0x48],eax
   140030fa8:	lea    rax,[rip+0xffffffffffff2025]        # 0x140022fd4
   140030faf:	add    rsp,0x20
   140030fb3:	pop    rbp
   140030fb4:	ret    
   140030fb5:	int3   
   140030fb6:	int3   
   140030fb7:	int3   
   140030fb8:	int3   
   140030fb9:	int3   
   140030fba:	int3   
   140030fbb:	int3   
   140030fbc:	mov    QWORD PTR [rsp+0x10],rdx
   140030fc1:	push   rbp
   140030fc2:	sub    rsp,0x20
   140030fc6:	mov    rbp,rdx
   140030fc9:	mov    rcx,QWORD PTR [rbp+0x28]
   140030fcd:	call   0x140029e84
   140030fd2:	mov    DWORD PTR [rbp+0x48],eax
   140030fd5:	lea    rax,[rip+0xffffffffffff2094]        # 0x140023070
   140030fdc:	add    rsp,0x20
   140030fe0:	pop    rbp
   140030fe1:	ret    
   140030fe2:	int3   
   140030fe3:	int3   
   140030fe4:	int3   
   140030fe5:	int3   
   140030fe6:	int3   
   140030fe7:	int3   
   140030fe8:	int3   
   140030fe9:	mov    QWORD PTR [rsp+0x10],rdx
   140030fee:	push   rbp
   140030fef:	sub    rsp,0x20
   140030ff3:	mov    rbp,rdx
   140030ff6:	mov    rcx,QWORD PTR [rbp+0x28]
   140030ffa:	call   0x140029e84
   140030fff:	mov    DWORD PTR [rbp+0x48],eax
   140031002:	lea    rax,[rip+0xffffffffffff2103]        # 0x14002310c
   140031009:	add    rsp,0x20
   14003100d:	pop    rbp
   14003100e:	ret    
   14003100f:	int3   
   140031010:	int3   
   140031011:	int3   
   140031012:	int3   
   140031013:	int3   
   140031014:	int3   
   140031015:	int3   
   140031016:	mov    QWORD PTR [rsp+0x10],rdx
   14003101b:	push   rbp
   14003101c:	sub    rsp,0x20
   140031020:	mov    rbp,rdx
   140031023:	mov    rcx,QWORD PTR [rbp+0x40]
   140031027:	call   0x140029e84
   14003102c:	mov    DWORD PTR [rbp+0x28],eax
   14003102f:	lea    rax,[rip+0xffffffffffff230b]        # 0x140023341
   140031036:	add    rsp,0x20
   14003103a:	pop    rbp
   14003103b:	ret    
   14003103c:	int3   
   14003103d:	int3   
   14003103e:	int3   
   14003103f:	int3   
   140031040:	int3   
   140031041:	int3   
   140031042:	int3   
   140031043:	mov    QWORD PTR [rsp+0x10],rdx
   140031048:	push   rbp
   140031049:	sub    rsp,0x20
   14003104d:	mov    rbp,rdx
   140031050:	mov    rcx,QWORD PTR [rbp+0x30]
   140031054:	call   0x140029e84
   140031059:	mov    DWORD PTR [rbp+0x80],eax
   14003105f:	lea    rax,[rip+0xffffffffffff249a]        # 0x140023500
   140031066:	add    rsp,0x20
   14003106a:	pop    rbp
   14003106b:	ret    
   14003106c:	int3   
   14003106d:	int3   
   14003106e:	int3   
   14003106f:	int3   
   140031070:	int3   
   140031071:	int3   
   140031072:	int3   
   140031073:	rex push rbp
   140031075:	mov    rbp,rdx
   140031078:	mov    eax,DWORD PTR [rip+0x1f1f2]        # 0x140050270
   14003107e:	and    eax,0xfffffffe
   140031081:	mov    DWORD PTR [rip+0x1f1e9],eax        # 0x140050270
   140031087:	pop    rbp
   140031088:	ret    
   140031089:	lea    rcx,[rip+0x1f1e8]        # 0x140050278
   140031090:	jmp    0x140023e84
   140031095:	lea    rcx,[rip+0x1f1dc]        # 0x140050278
   14003109c:	add    rcx,0x10
   1400310a0:	jmp    0x14002b28c
   1400310a5:	int3   
   1400310a6:	int3   
   1400310a7:	int3   
   1400310a8:	int3   
   1400310a9:	int3   
   1400310aa:	int3   
   1400310ab:	lea    rcx,[rdx+0x28]
   1400310b2:	jmp    0x140010f9c
   1400310b7:	int3   
   1400310b8:	int3   
   1400310b9:	int3   
   1400310ba:	int3   
   1400310bb:	int3   
   1400310bc:	int3   
   1400310bd:	mov    QWORD PTR [rsp+0x10],rdx
   1400310c2:	push   rbp
   1400310c3:	sub    rsp,0x20
   1400310c7:	mov    rbp,rdx
   1400310ca:	mov    rdx,QWORD PTR [rbp+0x40]
   1400310ce:	call   0x140003760
   1400310d3:	xor    edx,edx
   1400310d5:	xor    ecx,ecx
   1400310d7:	call   0x14002e2da
   1400310dc:	nop
   1400310dd:	int3   
   1400310de:	int3   
   1400310df:	int3   
   1400310e0:	int3   
   1400310e1:	int3   
   1400310e2:	int3   
   1400310e3:	mov    QWORD PTR [rsp+0x10],rdx
   1400310e8:	push   rbp
   1400310e9:	sub    rsp,0x20
   1400310ed:	mov    rbp,rdx
   1400310f0:	mov    rdx,QWORD PTR [rbp+0x50]
   1400310f4:	call   0x140003760
   1400310f9:	xor    edx,edx
   1400310fb:	xor    ecx,ecx
   1400310fd:	call   0x14002e2da
   140031102:	nop
   140031103:	int3   
   140031104:	int3   
   140031105:	int3   
   140031106:	int3   
   140031107:	int3   
   140031108:	int3   
   140031109:	mov    QWORD PTR [rsp+0x10],rdx
   14003110e:	push   rbp
   14003110f:	sub    rsp,0x30
   140031113:	mov    rbp,rdx
   140031116:	mov    rdx,QWORD PTR [rbp+0x80]
   14003111d:	call   0x140003760
   140031122:	xor    edx,edx
   140031124:	xor    ecx,ecx
   140031126:	call   0x14002e2da
   14003112b:	nop
   14003112c:	int3   
   14003112d:	int3   
   14003112e:	int3   
   14003112f:	int3   
   140031130:	int3   
   140031131:	int3   
   140031132:	mov    QWORD PTR [rsp+0x10],rdx
   140031137:	push   rbp
   140031138:	sub    rsp,0x20
   14003113c:	mov    rbp,rdx
   14003113f:	mov    rdx,QWORD PTR [rbp+0x48]
   140031143:	call   0x140003760
   140031148:	xor    edx,edx
   14003114a:	xor    ecx,ecx
   14003114c:	call   0x14002e2da
   140031151:	nop
   140031152:	int3   
   140031153:	int3   
   140031154:	int3   
   140031155:	int3   
   140031156:	int3   
   140031157:	int3   
   140031158:	mov    QWORD PTR [rsp+0x10],rdx
   14003115d:	push   rbp
   14003115e:	sub    rsp,0x30
   140031162:	mov    rbp,rdx
   140031165:	mov    rdx,QWORD PTR [rbp+0x70]
   140031169:	call   0x140003760
   14003116e:	xor    edx,edx
   140031170:	xor    ecx,ecx
   140031172:	call   0x14002e2da
   140031177:	nop
   140031178:	int3   
   140031179:	int3   
   14003117a:	int3   
   14003117b:	int3   
   14003117c:	int3   
   14003117d:	int3   
   14003117e:	rex push rbp
   140031180:	sub    rsp,0x40
   140031184:	mov    rbp,rdx
   140031187:	mov    rax,QWORD PTR [rcx]
   14003118a:	xor    ecx,ecx
   14003118c:	cmp    DWORD PTR [rax],0xc0000006
   140031192:	sete   cl
   140031195:	mov    eax,ecx
   140031197:	add    rsp,0x40
   14003119b:	pop    rbp
   14003119c:	ret    
   14003119d:	int3   
   14003119e:	int3   
   14003119f:	int3   
   1400311a0:	int3   
   1400311a1:	int3   
   1400311a2:	int3   
   1400311a3:	int3   
   1400311a4:	lea    rcx,[rdx+0x30]
   1400311ab:	jmp    0x1400036a8
   1400311b0:	lea    rcx,[rdx+0x38]
   1400311b7:	jmp    0x14000136c
   1400311bc:	lea    rcx,[rdx+0x78]
   1400311c3:	jmp    0x14000ce88
   1400311c8:	int3   
   1400311c9:	int3   
   1400311ca:	int3   
   1400311cb:	int3   
   1400311cc:	int3   
   1400311cd:	int3   
   1400311ce:	lea    rcx,[rdx+0xa8]
   1400311d5:	jmp    0x1400036a8
   1400311da:	lea    rcx,[rdx+0x68]
   1400311e1:	jmp    0x1400036a8
   1400311e6:	lea    rcx,[rdx+0x80]
   1400311ed:	jmp    0x14000136c
   1400311f2:	lea    rcx,[rdx+0x78]
   1400311f9:	jmp    0x14000136c
   1400311fe:	lea    rcx,[rdx+0x88]
   140031205:	jmp    0x14000136c
   14003120a:	lea    rcx,[rdx+0x70]
   140031211:	jmp    0x14000136c
   140031216:	lea    rcx,[rdx+0x90]
   14003121d:	jmp    0x14000136c
   140031222:	int3   
   140031223:	int3   
   140031224:	int3   
   140031225:	int3   
   140031226:	int3   
   140031227:	int3   
   140031228:	lea    rcx,[rdx+0x40]
   14003122f:	jmp    0x14000136c
   140031234:	lea    rcx,[rdx+0x38]
   14003123b:	jmp    0x14000136c
   140031240:	int3   
   140031241:	int3   
   140031242:	int3   
   140031243:	int3   
   140031244:	int3   
   140031245:	int3   
   140031246:	mov    rcx,QWORD PTR [rdx+0x30]
   14003124d:	jmp    0x140023f48
   140031252:	lea    rcx,[rdx+0x30]
   140031259:	jmp    0x14000de2c
   14003125e:	int3   
   14003125f:	int3   
   140031260:	int3   
   140031261:	int3   
   140031262:	int3   
   140031263:	int3   
   140031264:	lea    rcx,[rdx+0x30]
   14003126b:	jmp    0x14000136c
   140031270:	int3   
   140031271:	int3   
   140031272:	int3   
   140031273:	int3   
   140031274:	int3   
   140031275:	int3   
   140031276:	mov    QWORD PTR [rsp+0x10],rdx
   14003127b:	push   rbp
   14003127c:	sub    rsp,0x20
   140031280:	mov    rbp,rdx
   140031283:	lea    rax,[rip+0xffffffffffff66c3]        # 0x14002794d
   14003128a:	add    rsp,0x20
   14003128e:	pop    rbp
   14003128f:	ret    
   140031290:	int3   
   140031291:	int3   
   140031292:	int3   
   140031293:	int3   
   140031294:	int3   
   140031295:	int3   
   140031296:	int3   
   140031297:	lea    rcx,[rdx+0x58]
   14003129e:	jmp    0x14000136c
   1400312a3:	mov    QWORD PTR [rsp+0x10],rdx
   1400312a8:	push   rbp
   1400312a9:	sub    rsp,0x20
   1400312ad:	mov    rbp,rdx
   1400312b0:	lea    rax,[rip+0xffffffffffff6756]        # 0x140027a0d
   1400312b7:	add    rsp,0x20
   1400312bb:	pop    rbp
   1400312bc:	ret    
   1400312bd:	int3   
   1400312be:	int3   
   1400312bf:	int3   
   1400312c0:	int3   
   1400312c1:	int3   
   1400312c2:	int3   
   1400312c3:	int3   
   1400312c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400312c9:	push   rbp
   1400312ca:	sub    rsp,0x20
   1400312ce:	mov    rbp,rdx
   1400312d1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400312d5:	call   0x140029e84
   1400312da:	mov    DWORD PTR [rbp+0x48],eax
   1400312dd:	lea    rax,[rip+0xffffffffffff6c7c]        # 0x140027f60
   1400312e4:	add    rsp,0x20
   1400312e8:	pop    rbp
   1400312e9:	ret    
   1400312ea:	int3   
   1400312eb:	int3   
   1400312ec:	int3   
   1400312ed:	int3   
   1400312ee:	int3   
   1400312ef:	int3   
   1400312f0:	int3   
   1400312f1:	lea    rcx,[rdx+0x28]
   1400312f8:	jmp    0x140003674
   1400312fd:	mov    QWORD PTR [rsp+0x10],rdx
   140031302:	push   rbp
   140031303:	sub    rsp,0x20
   140031307:	mov    rbp,rdx
   14003130a:	mov    rcx,QWORD PTR [rbp+0x40]
   14003130e:	call   0x140001fd4
   140031313:	mov    DWORD PTR [rbp+0x20],eax
   140031316:	lea    rax,[rip+0xffffffffffff6dd5]        # 0x1400280f2
   14003131d:	add    rsp,0x20
   140031321:	pop    rbp
   140031322:	ret    
   140031323:	int3   
   140031324:	int3   
   140031325:	int3   
   140031326:	int3   
   140031327:	int3   
   140031328:	int3   
   140031329:	int3   
   14003132a:	lea    rcx,[rdx+0x88]
   140031331:	jmp    0x1400036e0
   140031336:	lea    rcx,[rdx+0x68]
   14003133d:	jmp    0x140015318
   140031342:	lea    rcx,[rdx+0xe8]
   140031349:	jmp    0x1400037e0
   14003134e:	lea    rcx,[rdx+0xb8]
   140031355:	jmp    0x140005f6c
   14003135a:	lea    rcx,[rdx+0xa0]
   140031361:	jmp    0x14000d10c
   140031366:	lea    rcx,[rdx+0xe8]
   14003136d:	jmp    0x140005f6c
   140031372:	int3   
   140031373:	int3   
   140031374:	int3   
   140031375:	int3   
   140031376:	int3   
   140031377:	int3   
   140031378:	mov    QWORD PTR [rsp+0x10],rdx
   14003137d:	push   rbp
   14003137e:	sub    rsp,0x20
   140031382:	mov    rbp,rdx
   140031385:	mov    rdx,QWORD PTR [rbp+0x48]
   140031389:	call   0x140003760
   14003138e:	xor    edx,edx
   140031390:	xor    ecx,ecx
   140031392:	call   0x14002e2da
   140031397:	nop
   140031398:	int3   
   140031399:	int3   
   14003139a:	int3   
   14003139b:	int3   
   14003139c:	int3   
   14003139d:	int3   
   14003139e:	mov    QWORD PTR [rsp+0x10],rdx
   1400313a3:	push   rbp
   1400313a4:	sub    rsp,0x30
   1400313a8:	mov    rbp,rdx
   1400313ab:	mov    rdx,QWORD PTR [rbp+0x78]
   1400313af:	call   0x140003760
   1400313b4:	xor    edx,edx
   1400313b6:	xor    ecx,ecx
   1400313b8:	call   0x14002e2da
   1400313bd:	nop
   1400313be:	int3   
   1400313bf:	int3   
   1400313c0:	int3   
   1400313c1:	int3   
   1400313c2:	int3   
   1400313c3:	int3   
   1400313c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400313c9:	push   rbx
   1400313ca:	push   rbp
   1400313cb:	sub    rsp,0x28
   1400313cf:	mov    rbp,rdx
   1400313d2:	mov    rbx,QWORD PTR [rbp+0x58]
   1400313d6:	jmp    0x1400313fe
   1400313d8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400313dd:	jb     0x1400313e8
   1400313df:	mov    rcx,QWORD PTR [rbx]
   1400313e2:	call   QWORD PTR [rip+0x11e0]        # 0x1400325c8
   1400313e8:	mov    QWORD PTR [rbx+0x18],0x7
   1400313f0:	and    QWORD PTR [rbx+0x10],0x0
   1400313f5:	xor    eax,eax
   1400313f7:	mov    WORD PTR [rbx],ax
   1400313fa:	add    rbx,0x20
   1400313fe:	cmp    rbx,QWORD PTR [rbp+0x50]
   140031402:	jne    0x1400313d8
   140031404:	xor    edx,edx
   140031406:	xor    ecx,ecx
   140031408:	call   0x14002e2da
   14003140d:	nop
   14003140e:	int3   
   14003140f:	int3   
   140031410:	int3   
   140031411:	int3   
   140031412:	int3   
   140031413:	int3   
   140031414:	mov    rcx,QWORD PTR [rdx+0x40]
   14003141b:	jmp    0x14001dd48
   140031420:	mov    rcx,QWORD PTR [rdx+0x40]
   140031427:	add    rcx,0x10
   14003142b:	jmp    0x14002b28c
   140031430:	int3   
   140031431:	int3   
   140031432:	int3   
   140031433:	int3   
   140031434:	int3   
   140031435:	int3   
   140031436:	mov    QWORD PTR [rsp+0x10],rdx
   14003143b:	push   rbp
   14003143c:	sub    rsp,0x20
   140031440:	mov    rbp,rdx
   140031443:	mov    rcx,QWORD PTR [rbp+0x28]
   140031447:	call   0x140029e84
   14003144c:	mov    DWORD PTR [rbp+0x48],eax
   14003144f:	lea    rax,[rip+0xffffffffffffa57c]        # 0x14002b9d2
   140031456:	add    rsp,0x20
   14003145a:	pop    rbp
   14003145b:	ret    
   14003145c:	int3   
   14003145d:	int3   
   14003145e:	int3   
   14003145f:	int3   
   140031460:	int3   
   140031461:	int3   
   140031462:	int3   
   140031463:	mov    rcx,QWORD PTR [rdx+0x60]
   14003146a:	jmp    0x14001dd48
   14003146f:	mov    rcx,QWORD PTR [rdx+0x70]
   140031476:	jmp    0x14002caa0
   14003147b:	mov    rcx,QWORD PTR [rdx+0x70]
   140031482:	add    rcx,0x10
   140031486:	jmp    0x140003674
   14003148b:	int3   
   14003148c:	int3   
   14003148d:	int3   
   14003148e:	int3   
   14003148f:	int3   
   140031490:	int3   
   140031491:	mov    rcx,QWORD PTR [rdx+0x50]
   140031498:	jmp    0x140023f48
   14003149d:	mov    rcx,QWORD PTR [rdx+0x50]
   1400314a4:	jmp    0x140012880
   1400314a9:	mov    rcx,QWORD PTR [rdx+0x50]
   1400314b0:	add    rcx,0x10
   1400314b4:	jmp    0x1400037e0
   1400314b9:	lea    rcx,[rdx+0x50]
   1400314c0:	jmp    0x14000cdd8
   1400314c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400314ca:	push   rbp
   1400314cb:	sub    rsp,0x20
   1400314cf:	mov    rbp,rdx
   1400314d2:	mov    rcx,QWORD PTR [rbp+0x28]
   1400314d6:	call   0x140029e84
   1400314db:	mov    DWORD PTR [rbp+0x50],eax
   1400314de:	lea    rax,[rip+0xffffffffffffaabb]        # 0x14002bfa0
   1400314e5:	add    rsp,0x20
   1400314e9:	pop    rbp
   1400314ea:	ret    
   1400314eb:	int3   
   1400314ec:	int3   
   1400314ed:	int3   
   1400314ee:	int3   
   1400314ef:	int3   
   1400314f0:	int3   
   1400314f1:	int3   
   1400314f2:	mov    rcx,QWORD PTR [rdx+0x48]
   1400314f9:	jmp    0x140023f48
   1400314fe:	mov    QWORD PTR [rsp+0x10],rdx
   140031503:	push   rbp
   140031504:	sub    rsp,0x20
   140031508:	mov    rbp,rdx
   14003150b:	mov    rcx,QWORD PTR [rbp+0x28]
   14003150f:	call   0x140029e84
   140031514:	mov    DWORD PTR [rbp+0x48],eax
   140031517:	lea    rax,[rip+0xffffffffffffac06]        # 0x14002c124
   14003151e:	add    rsp,0x20
   140031522:	pop    rbp
   140031523:	ret    
   140031524:	int3   
   140031525:	int3   
   140031526:	int3   
   140031527:	int3   
   140031528:	int3   
   140031529:	int3   
   14003152a:	int3   
   14003152b:	lea    rcx,[rdx+0x90]
   140031532:	jmp    0x14002c950
   140031537:	lea    rcx,[rdx+0x20]
   14003153e:	jmp    0x140015318
   140031543:	lea    rcx,[rdx+0x98]
   14003154a:	jmp    0x140015318
   14003154f:	int3   
   140031550:	int3   
   140031551:	int3   
   140031552:	int3   
   140031553:	int3   
   140031554:	int3   
   140031555:	lea    rcx,[rdx+0x78]
   14003155c:	jmp    0x14000cdd8
   140031561:	lea    rcx,[rdx+0x28]
   140031568:	jmp    0x14002c980
   14003156d:	int3   
   14003156e:	int3   
   14003156f:	int3   
   140031570:	int3   
   140031571:	int3   
   140031572:	int3   
   140031573:	mov    QWORD PTR [rsp+0x10],rdx
   140031578:	push   rbp
   140031579:	sub    rsp,0x20
   14003157d:	mov    rbp,rdx
   140031580:	xor    edx,edx
   140031582:	xor    ecx,ecx
   140031584:	call   0x14002e2da
   140031589:	nop
   14003158a:	int3   
   14003158b:	int3   
   14003158c:	int3   
   14003158d:	int3   
   14003158e:	int3   
   14003158f:	int3   
   140031590:	mov    QWORD PTR [rsp+0x10],rdx
   140031595:	push   rbp
   140031596:	sub    rsp,0x20
   14003159a:	mov    rbp,rdx
   14003159d:	mov    rcx,QWORD PTR [rbp+0x28]
   1400315a1:	call   0x140029e84
   1400315a6:	mov    DWORD PTR [rbp+0x48],eax
   1400315a9:	lea    rax,[rip+0xffffffffffffb894]        # 0x14002ce44
   1400315b0:	add    rsp,0x20
   1400315b4:	pop    rbp
   1400315b5:	ret    
   1400315b6:	int3   
   1400315b7:	int3   
   1400315b8:	int3   
   1400315b9:	int3   
   1400315ba:	int3   
   1400315bb:	int3   
   1400315bc:	int3   
   1400315bd:	mov    QWORD PTR [rsp+0x10],rdx
   1400315c2:	push   rbp
   1400315c3:	sub    rsp,0x20
   1400315c7:	mov    rbp,rdx
   1400315ca:	mov    rdx,QWORD PTR [rbp+0x68]
   1400315ce:	mov    rcx,QWORD PTR [rbp+0x50]
   1400315d2:	call   0x14002cfb8
   1400315d7:	xor    edx,edx
   1400315d9:	xor    ecx,ecx
   1400315db:	call   0x14002e2da
   1400315e0:	nop
   1400315e1:	int3   
   1400315e2:	int3   
   1400315e3:	int3   
   1400315e4:	int3   
   1400315e5:	int3   
   1400315e6:	int3   
   1400315e7:	rex push rbp
   1400315e9:	sub    rsp,0x20
   1400315ed:	mov    rbp,rdx
   1400315f0:	mov    rax,QWORD PTR [rcx]
   1400315f3:	mov    rdx,rcx
   1400315f6:	mov    ecx,DWORD PTR [rax]
   1400315f8:	call   0x14002e38e
   1400315fd:	nop
   1400315fe:	add    rsp,0x20
   140031602:	pop    rbp
   140031603:	ret    
   140031604:	int3   
   140031605:	int3   
   140031606:	int3   
   140031607:	int3   
   140031608:	int3   
   140031609:	int3   
   14003160a:	int3   
   14003160b:	rex push rbp
   14003160d:	sub    rsp,0x20
   140031611:	mov    rbp,rdx
   140031614:	cmp    DWORD PTR [rbp+0x20],0x0
   140031618:	jne    0x140031630
   14003161a:	mov    r9,QWORD PTR [rbp+0x78]
   14003161e:	mov    r8d,DWORD PTR [rbp+0x70]
   140031622:	mov    rdx,QWORD PTR [rbp+0x68]
   140031626:	mov    rcx,QWORD PTR [rbp+0x60]
   14003162a:	call   0x14002dd94
   14003162f:	nop
   140031630:	add    rsp,0x20
   140031634:	pop    rbp
   140031635:	ret    
   140031636:	int3   
   140031637:	int3   
   140031638:	int3   
   140031639:	int3   
   14003163a:	int3   
   14003163b:	int3   
   14003163c:	int3   
   14003163d:	rex push rbp
   14003163f:	sub    rsp,0x20
   140031643:	mov    rbp,rdx
   140031646:	mov    QWORD PTR [rbp+0x38],rcx
   14003164a:	mov    QWORD PTR [rbp+0x28],rcx
   14003164e:	mov    rax,QWORD PTR [rbp+0x28]
   140031652:	mov    rcx,QWORD PTR [rax]
   140031655:	mov    QWORD PTR [rbp+0x30],rcx
   140031659:	mov    rax,QWORD PTR [rbp+0x30]
   14003165d:	cmp    DWORD PTR [rax],0xe06d7363
   140031663:	je     0x140031671
   140031665:	mov    DWORD PTR [rbp+0x20],0x0
   14003166c:	mov    eax,DWORD PTR [rbp+0x20]
   14003166f:	jmp    0x140031678
   140031671:	call   QWORD PTR [rip+0xe89]        # 0x140032500
   140031677:	nop
   140031678:	add    rsp,0x20
   14003167c:	pop    rbp
   14003167d:	ret    
   14003167e:	int3   
   14003167f:	int3   
   140031680:	int3   
   140031681:	int3   
   140031682:	int3   
   140031683:	int3   
   140031684:	int3   
   140031685:	rex push rbp
   140031687:	sub    rsp,0x20
   14003168b:	mov    rbp,rdx
   14003168e:	mov    ecx,0x8
   140031693:	call   0x14002e316
   140031698:	nop
   140031699:	add    rsp,0x20
   14003169d:	pop    rbp
   14003169e:	ret    
   14003169f:	int3   
   1400316a0:	int3   
   1400316a1:	int3   
   1400316a2:	int3   
   1400316a3:	int3   
   1400316a4:	int3   
   1400316a5:	int3   
   1400316a6:	rex push rbp
   1400316a8:	sub    rsp,0x20
   1400316ac:	mov    rbp,rdx
   1400316af:	cmp    DWORD PTR [rbp+0x24],0x0
   1400316b3:	jne    0x1400316cb
   1400316b5:	mov    r9,QWORD PTR [rbp+0x70]
   1400316b9:	mov    r8d,DWORD PTR [rbp+0x20]
   1400316bd:	mov    rdx,QWORD PTR [rbp+0x58]
   1400316c1:	mov    rcx,QWORD PTR [rbp+0x50]
   1400316c5:	call   0x14002dd94
   1400316ca:	nop
   1400316cb:	add    rsp,0x20
   1400316cf:	pop    rbp
   1400316d0:	ret    
   1400316d1:	int3   
   1400316d2:	int3   
   1400316d3:	int3   
   1400316d4:	int3   
   1400316d5:	int3   
   1400316d6:	int3   
   1400316d7:	int3   
   1400316d8:	int3   
   1400316d9:	int3   
   1400316da:	int3   
   1400316db:	int3   
   1400316dc:	int3   
   1400316dd:	int3   
   1400316de:	int3   
   1400316df:	int3   
   1400316e0:	rex push rbp
   1400316e2:	sub    rsp,0x20
   1400316e6:	mov    rbp,rdx
   1400316e9:	mov    rax,QWORD PTR [rcx]
   1400316ec:	xor    ecx,ecx
   1400316ee:	cmp    DWORD PTR [rax],0xc0000005
   1400316f4:	sete   cl
   1400316f7:	mov    eax,ecx
   1400316f9:	add    rsp,0x20
   1400316fd:	pop    rbp
   1400316fe:	ret    
   1400316ff:	int3   
   140031700:	int3   
   140031701:	int3   
   140031702:	int3   
   140031703:	int3   
   140031704:	int3   
   140031705:	int3   
   140031706:	int3   
   140031707:	int3   
   140031708:	int3   
   140031709:	int3   
   14003170a:	int3   
   14003170b:	int3   
   14003170c:	int3   
   14003170d:	int3   
   14003170e:	int3   
   14003170f:	int3   
   140031710:	lea    rax,[rip+0x2b49]        # 0x140034260
   140031717:	mov    QWORD PTR [rip+0x1ceb2],rax        # 0x14004e5d0
   14003171e:	ret    
   14003171f:	int3   
   140031720:	int3   
   140031721:	int3   
   140031722:	int3   
   140031723:	int3   
   140031724:	int3   
   140031725:	int3   
   140031726:	int3   
   140031727:	int3   
   140031728:	int3   
   140031729:	int3   
   14003172a:	int3   
   14003172b:	int3   
   14003172c:	int3   
   14003172d:	int3   
   14003172e:	int3   
   14003172f:	int3   
   140031730:	lea    rax,[rip+0x2b29]        # 0x140034260
   140031737:	mov    QWORD PTR [rip+0x1ce9a],rax        # 0x14004e5d8
   14003173e:	ret    
   14003173f:	int3   
   140031740:	int3   
   140031741:	int3   
   140031742:	int3   
   140031743:	int3   
   140031744:	int3   
   140031745:	int3   
   140031746:	int3   
   140031747:	int3   
   140031748:	int3   
   140031749:	int3   
   14003174a:	int3   
   14003174b:	int3   
   14003174c:	int3   
   14003174d:	int3   
   14003174e:	int3   
   14003174f:	int3   
   140031750:	lea    rax,[rip+0x2b09]        # 0x140034260
   140031757:	mov    QWORD PTR [rip+0x1ce82],rax        # 0x14004e5e0
   14003175e:	ret    
   14003175f:	int3   
   140031760:	int3   
   140031761:	int3   
   140031762:	int3   
   140031763:	int3   
   140031764:	int3   
   140031765:	int3   
   140031766:	int3   
   140031767:	int3   
   140031768:	int3   
   140031769:	int3   
   14003176a:	int3   
   14003176b:	int3   
   14003176c:	int3   
   14003176d:	int3   
   14003176e:	int3   
   14003176f:	int3   
   140031770:	sub    rsp,0x28
   140031774:	mov    rcx,QWORD PTR [rip+0x1e95d]        # 0x1400500d8
   14003177b:	test   rcx,rcx
   14003177e:	je     0x14003178e
   140031780:	call   QWORD PTR [rip+0xafa]        # 0x140032280
   140031786:	and    QWORD PTR [rip+0x1e94a],0x0        # 0x1400500d8
   14003178e:	add    rsp,0x28
   140031792:	ret    
   140031793:	int3   
   140031794:	int3   
   140031795:	int3   
   140031796:	int3   
   140031797:	int3   
   140031798:	int3   
   140031799:	int3   
   14003179a:	int3   
   14003179b:	int3   
   14003179c:	int3   
   14003179d:	int3   
   14003179e:	int3   
   14003179f:	int3   
   1400317a0:	sub    rsp,0x28
   1400317a4:	mov    ecx,0xffff
   1400317a9:	mov    eax,ecx
   1400317ab:	lock cmpxchg DWORD PTR [rip+0x1e83d],ecx        # 0x14004fff0
   1400317b3:	test   eax,eax
   1400317b5:	je     0x1400317e8
   1400317b7:	mov    rcx,QWORD PTR [rip+0x198ba]        # 0x14004b078
   1400317be:	lea    rdx,[rip+0x198b3]        # 0x14004b078
   1400317c5:	cmp    rcx,rdx
   1400317c8:	je     0x1400317e8
   1400317ca:	test   BYTE PTR [rcx+0x1c],0x1
   1400317ce:	je     0x1400317e8
   1400317d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400317d4:	lea    r8,[rip+0x366d]        # 0x140034e48
   1400317db:	mov    edx,0xb
   1400317e0:	mov    r9d,eax
   1400317e3:	call   0x140001f70
   1400317e8:	add    rsp,0x28
   1400317ec:	ret    
   1400317ed:	int3   
   1400317ee:	int3   
   1400317ef:	int3   
   1400317f0:	int3   
   1400317f1:	int3   
   1400317f2:	int3   
   1400317f3:	int3   
   1400317f4:	int3   
   1400317f5:	int3   
   1400317f6:	int3   
   1400317f7:	int3   
   1400317f8:	int3   
   1400317f9:	int3   
   1400317fa:	int3   
   1400317fb:	int3   
   1400317fc:	int3   
   1400317fd:	int3   
   1400317fe:	int3   
   1400317ff:	int3   
   140031800:	mov    QWORD PTR [rsp+0x8],rbx
   140031805:	push   rdi
   140031806:	sub    rsp,0x20
   14003180a:	mov    rdi,QWORD PTR [rip+0x1ce27]        # 0x14004e638
   140031811:	test   rdi,rdi
   140031814:	je     0x14003182b
   140031816:	mov    rax,QWORD PTR [rdi]
   140031819:	mov    rbx,QWORD PTR [rax+0x8]
   14003181d:	mov    rcx,rbx
   140031820:	call   QWORD PTR [rip+0xe82]        # 0x1400326a8
   140031826:	mov    rcx,rdi
   140031829:	call   rbx
   14003182b:	mov    rbx,QWORD PTR [rsp+0x30]
   140031830:	lea    rax,[rip+0x2df1]        # 0x140034628
   140031837:	mov    QWORD PTR [rip+0x1cdb2],rax        # 0x14004e5f0
   14003183e:	add    rsp,0x20
   140031842:	pop    rdi
   140031843:	ret    
   140031844:	int3   
   140031845:	int3   
   140031846:	int3   
   140031847:	int3   
   140031848:	int3   
   140031849:	int3   
   14003184a:	int3   
   14003184b:	int3   
   14003184c:	int3   
   14003184d:	int3   
   14003184e:	int3   
   14003184f:	int3   
   140031850:	lea    rax,[rip+0x2d41]        # 0x140034598
   140031857:	lea    rcx,[rip+0x1e882]        # 0x1400500e0
   14003185e:	mov    QWORD PTR [rip+0x1e87b],rax        # 0x1400500e0
   140031865:	jmp    0x1400047e8
   14003186a:	int3   
   14003186b:	int3   
   14003186c:	int3   
   14003186d:	int3   
   14003186e:	int3   
   14003186f:	int3   
   140031870:	mov    QWORD PTR [rsp+0x8],rbx
   140031875:	push   rdi
   140031876:	sub    rsp,0x20
   14003187a:	cmp    DWORD PTR [rip+0x1ea10],0xf12192e        # 0x140050294
   140031884:	je     0x140031893
   140031886:	lea    rcx,[rip+0x1e9fb]        # 0x140050288
   14003188d:	call   QWORD PTR [rip+0x9e5]        # 0x140032278
   140031893:	mov    rax,QWORD PTR [rip+0x1e9de]        # 0x140050278
   14003189a:	mov    rbx,QWORD PTR [rax+0x8]
   14003189e:	mov    rdi,rbx
   1400318a1:	cmp    BYTE PTR [rbx+0x19],0x0
   1400318a5:	jne    0x1400318d3
   1400318a7:	mov    rdx,QWORD PTR [rdi+0x10]
   1400318ab:	lea    rcx,[rip+0x1e9c6]        # 0x140050278
   1400318b2:	call   0x140023e2c
   1400318b7:	mov    rdi,QWORD PTR [rdi]
   1400318ba:	mov    rcx,rbx
   1400318bd:	call   QWORD PTR [rip+0xd05]        # 0x1400325c8
   1400318c3:	cmp    BYTE PTR [rdi+0x19],0x0
   1400318c7:	mov    rbx,rdi
   1400318ca:	je     0x1400318a7
   1400318cc:	mov    rax,QWORD PTR [rip+0x1e9a5]        # 0x140050278
   1400318d3:	mov    QWORD PTR [rax+0x8],rax
   1400318d7:	mov    rax,QWORD PTR [rip+0x1e99a]        # 0x140050278
   1400318de:	mov    QWORD PTR [rax],rax
   1400318e1:	mov    rax,QWORD PTR [rip+0x1e990]        # 0x140050278
   1400318e8:	mov    QWORD PTR [rax+0x10],rax
   1400318ec:	and    QWORD PTR [rip+0x1e98c],0x0        # 0x140050280
   1400318f4:	mov    rcx,QWORD PTR [rip+0x1e97d]        # 0x140050278
   1400318fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140031900:	add    rsp,0x20
   140031904:	pop    rdi
   140031905:	rex.W jmp QWORD PTR [rip+0xcbc]        # 0x1400325c8
   14003190c:	int3   
   14003190d:	int3   
   14003190e:	int3   
   14003190f:	int3   
   140031910:	int3   
   140031911:	int3   
   140031912:	int3   
   140031913:	int3   
   140031914:	int3   
   140031915:	int3   
   140031916:	int3   
   140031917:	int3   
   140031918:	int3   
   140031919:	int3   
   14003191a:	int3   
   14003191b:	int3   
   14003191c:	int3   
   14003191d:	int3   
   14003191e:	int3   
   14003191f:	int3   
   140031920:	sub    rsp,0x28
   140031924:	lea    rcx,[rip+0x1e82d]        # 0x140050158
   14003192b:	call   QWORD PTR [rip+0x947]        # 0x140032278
   140031931:	mov    rcx,QWORD PTR [rip+0x1e848]        # 0x140050180
   140031938:	test   rcx,rcx
   14003193b:	je     0x14003194b
   14003193d:	call   QWORD PTR [rip+0xc85]        # 0x1400325c8
   140031943:	and    QWORD PTR [rip+0x1e835],0x0        # 0x140050180
   14003194b:	and    DWORD PTR [rip+0x1e836],0x0        # 0x140050188
   140031952:	and    DWORD PTR [rip+0x1e833],0x0        # 0x14005018c
   140031959:	add    rsp,0x28
   14003195d:	ret    
   14003195e:	int3   
   14003195f:	int3   
   140031960:	int3   
   140031961:	int3   
   140031962:	int3   
   140031963:	int3   
   140031964:	int3   
   140031965:	int3   
   140031966:	int3   
   140031967:	int3   
   140031968:	int3   
   140031969:	int3   
   14003196a:	int3   
   14003196b:	int3   
   14003196c:	int3   
   14003196d:	int3   
   14003196e:	int3   
   14003196f:	int3   
   140031970:	mov    QWORD PTR [rsp+0x8],rbx
   140031975:	mov    QWORD PTR [rsp+0x10],rsi
   14003197a:	push   rdi
   14003197b:	sub    rsp,0x20
   14003197f:	cmp    DWORD PTR [rip+0x1e80a],0x48        # 0x140050190
   140031986:	mov    rsi,QWORD PTR [rip+0x1e7ab]        # 0x140050138
   14003198d:	jne    0x140031a0e
   14003198f:	mov    eax,DWORD PTR [rip+0x1e83b]        # 0x1400501d0
   140031995:	xor    ebx,ebx
   140031997:	test   eax,eax
   140031999:	jle    0x1400319d2
   14003199b:	xor    edi,edi
   14003199d:	test   rdi,rdi
   1400319a0:	js     0x140031a46
   1400319a6:	cmp    ebx,eax
   1400319a8:	jge    0x140031a46
   1400319ae:	mov    rax,QWORD PTR [rip+0x1e813]        # 0x1400501c8
   1400319b5:	mov    rdx,rsi
   1400319b8:	movzx  ecx,WORD PTR [rdi+rax*1]
   1400319bc:	call   QWORD PTR [rip+0x9de]        # 0x1400323a0
   1400319c2:	mov    eax,DWORD PTR [rip+0x1e808]        # 0x1400501d0
   1400319c8:	inc    ebx
   1400319ca:	add    rdi,0x2
   1400319ce:	cmp    ebx,eax
   1400319d0:	jl     0x14003199d
   1400319d2:	mov    rcx,QWORD PTR [rip+0x1e7ef]        # 0x1400501c8
   1400319d9:	test   rcx,rcx
   1400319dc:	je     0x1400319ec
   1400319de:	call   QWORD PTR [rip+0xbe4]        # 0x1400325c8
   1400319e4:	and    QWORD PTR [rip+0x1e7dc],0x0        # 0x1400501c8
   1400319ec:	and    DWORD PTR [rip+0x1e7dd],0x0        # 0x1400501d0
   1400319f3:	lea    rcx,[rip+0x1e79e]        # 0x140050198
   1400319fa:	and    DWORD PTR [rip+0x1e7d3],0x0        # 0x1400501d4
   140031a01:	call   QWORD PTR [rip+0x871]        # 0x140032278
   140031a07:	and    DWORD PTR [rip+0x1e782],0x0        # 0x140050190
   140031a0e:	mov    rcx,QWORD PTR [rip+0x1e7b3]        # 0x1400501c8
   140031a15:	test   rcx,rcx
   140031a18:	je     0x140031a28
   140031a1a:	call   QWORD PTR [rip+0xba8]        # 0x1400325c8
   140031a20:	and    QWORD PTR [rip+0x1e7a0],0x0        # 0x1400501c8
   140031a28:	and    DWORD PTR [rip+0x1e7a1],0x0        # 0x1400501d0
   140031a2f:	and    DWORD PTR [rip+0x1e79e],0x0        # 0x1400501d4
   140031a36:	mov    rbx,QWORD PTR [rsp+0x30]
   140031a3b:	mov    rsi,QWORD PTR [rsp+0x38]
   140031a40:	add    rsp,0x20
   140031a44:	pop    rdi
   140031a45:	ret    
   140031a46:	mov    ecx,0xc000008c
   140031a4b:	call   0x1400052f4
   140031a50:	int3   
   140031a51:	int3   
   140031a52:	int3   
   140031a53:	int3   
   140031a54:	int3   
   140031a55:	int3   
   140031a56:	int3   
   140031a57:	int3   
   140031a58:	int3   
   140031a59:	int3   
   140031a5a:	int3   
   140031a5b:	int3   
   140031a5c:	int3   
   140031a5d:	int3   
   140031a5e:	int3   
   140031a5f:	int3   
   140031a60:	ret    0x0
   140031a63:	int3   
   140031a64:	int3   
   140031a65:	int3   
   140031a66:	int3   
   140031a67:	int3   
   140031a68:	int3   
   140031a69:	int3   
   140031a6a:	int3   
   140031a6b:	int3   
   140031a6c:	int3   
   140031a6d:	int3   
   140031a6e:	int3   
   140031a6f:	int3   
   140031a70:	ret    0x0
   140031a73:	int3   
   140031a74:	int3   
   140031a75:	int3   
   140031a76:	int3   
   140031a77:	int3   
   140031a78:	int3   
   140031a79:	int3   
   140031a7a:	int3   
   140031a7b:	int3   
   140031a7c:	int3   
   140031a7d:	int3   
   140031a7e:	int3   
   140031a7f:	int3   
   140031a80:	lea    rcx,[rip+0x1de99]        # 0x14004f920
   140031a87:	jmp    0x14002d8e8
